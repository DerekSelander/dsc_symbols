|| __DATA.__data _PHViewControllerTransitionInfoSourceRectKey
|| __DATA.__data _PHViewControllerTransitionInfoTransitioningFromSourceToReceiverKey
|| __DATA.__data _PUBrowsingVideoPlayerDidPlayToEndTimeNotification
|| __DATA.__data _PUEditingInitialPayloadTypeIdentifier
|| __DATA.__data _PUTileKindAccessory
|| __DATA.__data _PUTileKindAssetExplorerReviewScreenBadge
|| __DATA.__data _PUTileKindAssetExplorerReviewScreenProgressIndicator
|| __DATA.__data _PUTileKindBackground
|| __DATA.__data _PUTileKindBadge
|| __DATA.__data _PUTileKindBufferingIndicator
|| __DATA.__data _PUTileKindImportStatusIndicator
|| __DATA.__data _PUTileKindLivePhotoVideoPlaybackOverlay
|| __DATA.__data _PUTileKindLoadingIndicator
|| __DATA.__data _PUTileKindPeople
|| __DATA.__data _PUTileKindPlayButton
|| __DATA.__data _PUTileKindProgressIndicator
|| __DATA.__data _PUTileKindRenderIndicator
|| __DATA.__data _PUTileKindReviewScreenControlBar
|| __DATA.__data _PUTileKindReviewScreenScrubberBar
|| __DATA.__data _PUTileKindReviewScreenTopBar
|| __DATA.__data _PUTileKindSelectionIndicator
|| __DATA.__data _PUTileKindSyndicationAttribution
|| __DATA.__data _PUTileKindUserTransform
|| __DATA.__data _PUTileKindVideoPlaceholder
|| __DATA.__data _PUTilingLayoutBackgroundZPosition
|| __DATA.__objc_data _OBJC_CLASS_$_PHActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PHAirPlayScreenController
|| __DATA.__objc_data _OBJC_CLASS_$_PHEditingExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$_PHMemoriesTitleHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PHPhotosPickerOptions
|| __DATA.__objc_data _OBJC_CLASS_$_PHPhotosPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PHPickerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PHPickerFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PHPickerResult
|| __DATA.__objc_data _OBJC_CLASS_$_PHPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PHPlaceholderView
|| __DATA.__objc_data _OBJC_CLASS_$_PHSwipeDownTracker
|| __DATA.__objc_data _OBJC_CLASS_$_PHVideoScrubberView
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivityAssetItem
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivityItemSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivityItemSourceConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivityItemSourceController
|| __DATA.__objc_data _OBJC_CLASS_$_PUActivityProgressController
|| __DATA.__objc_data _OBJC_CLASS_$_PUAirPlayRootViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerCommonImagePickerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerCommonPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerPadImagePickerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerPhoneImagePickerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumListViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumPickerSessionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumsGadgetProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUAlbumsGadgetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUAngleValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetActionPerformer
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetExplorerAggregateDictionaryUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetExplorerReviewScreenViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetPickerContainerController
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetPickerCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetReference
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetSupportChecker
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetTransitionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetViewModelChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUAssetsDataSourceConverter
|| __DATA.__objc_data _OBJC_CLASS_$_PUAutoAdjustmentController
|| __DATA.__objc_data _OBJC_CLASS_$_PUBadgeInfoPromise
|| __DATA.__objc_data _OBJC_CLASS_$_PUBlackOneUpInterfaceTheme
|| __DATA.__objc_data _OBJC_CLASS_$_PUBlackOneUpWhiteTintInterfaceTheme
|| __DATA.__objc_data _OBJC_CLASS_$_PUBlockValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingIrisPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingIrisPlayerChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingSession
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingVideoPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingVideoPlayerChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUBrowsingViewModelChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUCMMActivityItemSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUCameraTransientAssetActionManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUCameraTransientAssetsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUCameraTransientAssetsDataSourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUCameraTransientAssetsMediaProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUChangeDirectionValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUClampValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUCloudPhotoWelcomeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUCloudSharedAlbumViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUCloudSharedCreateAlbumViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUContentTileProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUCrossfadeAnimatedTransitioning
|| __DATA.__objc_data _OBJC_CLASS_$_PUDeletePhotosActionController
|| __DATA.__objc_data _OBJC_CLASS_$_PUDisplayLink
|| __DATA.__objc_data _OBJC_CLASS_$_PUDisplayLocationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUDoubleHeightHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUDynamicValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingErrorPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingExtensionUndoAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingExtensionUndoProxyExtensionSide
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingExtensionUndoProxyHostSide
|| __DATA.__objc_data _OBJC_CLASS_$_PUEditingInitialPayload
|| __DATA.__objc_data _OBJC_CLASS_$_PUEnterEditPerformanceEventBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_PUErrorPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_PUExitEditPerformanceEventBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_PUFilmStripViewIndicatorInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUFilmstripView
|| __DATA.__objc_data _OBJC_CLASS_$_PUFunEffectsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUGridTilingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUGroupValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUHorizontalAlbumListGadgetProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUImageExtraction
|| __DATA.__objc_data _OBJC_CLASS_$_PUImportActionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_PUImportHistoryGridViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUImportPPTDriver
|| __DATA.__objc_data _OBJC_CLASS_$_PUImportViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUIndexPathSet
|| __DATA.__objc_data _OBJC_CLASS_$_PUInitialHysteresisValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUJoiningAssetActionManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUJoiningAssetsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUJoiningDataSourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUJoiningMediaProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PULayoutSampledSectioning
|| __DATA.__objc_data _OBJC_CLASS_$_PULayoutSectioning
|| __DATA.__objc_data _OBJC_CLASS_$_PULegacyViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PULibraryTabInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PULivePhotoKeyFrameSelectionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PULoadingStatusManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUMaximumChangeRateValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_PUMergedLivePhotosVideo
|| __DATA.__objc_data _OBJC_CLASS_$_PUModalTransition
|| __DATA.__objc_data _OBJC_CLASS_$_PUModelTileTransform
|| __DATA.__objc_data _OBJC_CLASS_$_PUMomentsZoomLevelManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUMutableIndexPathSet
|| __DATA.__objc_data _OBJC_CLASS_$_PUNavigationTransition
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpAccessoryViewControllersManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpAssetTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpLoadingErrorPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpPhotosSharingTransition
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpPresentationHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpTilingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUOneUpTilingLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_CLASS_$_PUOperationStatus
|| __DATA.__objc_data _OBJC_CLASS_$_PUOverOneUpPresentationSession
|| __DATA.__objc_data _OBJC_CLASS_$_PUParallaxComputer
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoDecoration
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditEffectsSupport
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditLayoutSupport
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditResourceLoadRequest
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditResourceLoadResult
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditResourceLoader
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoEditValuesCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoKitAssetActionManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoKitAssetsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoKitDataSourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoKitMediaProvider
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoPickerRemoteNavigationController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoPickerRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoPickerRemoteViewControllerRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoSelectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoStreamAlbumsTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoStreamRecipientViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoView
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotoViewContentHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosDiagnosticsAgent
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridBarsHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridDownloadHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridLayoutHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPadCameraSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPadImagePickerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPadSearchSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneCameraSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneImagePickerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneSearchSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosGridViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosMapGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosMapGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosPanoramaViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosPanoramaViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosPanoramaViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosPanoramaViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUPhotosSharingTransition
|| __DATA.__objc_data _OBJC_CLASS_$_PUPickerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_PUPopoverController
|| __DATA.__objc_data _OBJC_CLASS_$_PUProgressIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_PUProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewAssetsMediaDestination
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewFileManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewScreenBarsModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewScreenDoneButton
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewScreenTopBar
|| __DATA.__objc_data _OBJC_CLASS_$_PUReviewScreenUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PUScrollViewSpeedometer
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchHomeViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordAssetCollectionViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordAssetViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordBaseViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordDateViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordGadget
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordHolidayViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordHomeViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordMeaningViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordPersonViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordPlaceViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordSceneViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordSeasonViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordSection
|| __DATA.__objc_data _OBJC_CLASS_$_PUSearchZeroKeywordSocialGroupViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUSectionedGridLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUSectionedTilingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUSessionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUSharingErrorPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_PUSidebarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUSingleHeightHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUSoftClampValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUStackView
|| __DATA.__objc_data _OBJC_CLASS_$_PUStorageManagementBaseController
|| __DATA.__objc_data _OBJC_CLASS_$_PUStorageManagementUtility
|| __DATA.__objc_data _OBJC_CLASS_$_PUStoryAssetPickerHelper
|| __DATA.__objc_data _OBJC_CLASS_$_PUTabbedLibraryViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUTabbedLibraryViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUTabbedLibraryViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUTabbedLibraryViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUTabbedLibraryViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUThresholdCrossingCountValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUTileIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_PUTileLayoutInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUTileTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_PUTileTree
|| __DATA.__objc_data _OBJC_CLASS_$_PUTilingDataSourceConverter
|| __DATA.__objc_data _OBJC_CLASS_$_PUTilingLayout
|| __DATA.__objc_data _OBJC_CLASS_$_PUTilingLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_CLASS_$_PUTilingScrollInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUTilingViewUpdateItem
|| __DATA.__objc_data _OBJC_CLASS_$_PUToolbarViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUToolbarViewModelChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUTouchingGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_PUUISaveToCameraRollActivity
|| __DATA.__objc_data _OBJC_CLASS_$_PUUserTransformTileLayoutInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PUUserTransformTileViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUValueFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUVelocityFilter
|| __DATA.__objc_data _OBJC_CLASS_$_PUVideoComplementItemSource
|| __DATA.__objc_data _OBJC_CLASS_$_PUVideoListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUViewControllerSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUViewControllerSpecChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUViewControllerTransition
|| __DATA.__objc_data _OBJC_CLASS_$_PUViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_PUViewModelChange
|| __DATA.__objc_data _OBJC_CLASS_$_PUWelcomeViewControllersManager
|| __DATA.__objc_data _OBJC_CLASS_$_PUZoomableGridViewController
|| __DATA.__objc_data _OBJC_CLASS_$_PUZoomableGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUZoomableGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_CLASS_$_PUZoomableGridViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PHActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PHAirPlayScreenController
|| __DATA.__objc_data _OBJC_METACLASS_$_PHEditingExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PHMemoriesTitleHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPhotosPickerOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPhotosPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPickerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPickerFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPickerResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PHPlaceholderView
|| __DATA.__objc_data _OBJC_METACLASS_$_PHSwipeDownTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_PHVideoScrubberView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivityAssetItem
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivityItemSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivityItemSourceConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivityItemSourceController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUActivityProgressController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAirPlayRootViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerCommonImagePickerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerCommonPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerPadImagePickerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerPhoneImagePickerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumListViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumPickerSessionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumsGadgetProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAlbumsGadgetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAngleValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetActionPerformer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetExplorerAggregateDictionaryUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetExplorerReviewScreenViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetPickerContainerController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetPickerCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetReference
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetSupportChecker
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetTransitionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetViewModelChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAssetsDataSourceConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUAutoAdjustmentController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBadgeInfoPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBlackOneUpInterfaceTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBlackOneUpWhiteTintInterfaceTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBlockValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingIrisPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingIrisPlayerChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingVideoPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingVideoPlayerChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUBrowsingViewModelChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCMMActivityItemSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCameraTransientAssetActionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCameraTransientAssetsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCameraTransientAssetsDataSourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCameraTransientAssetsMediaProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUChangeDirectionValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUClampValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCloudPhotoWelcomeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCloudSharedAlbumViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCloudSharedCreateAlbumViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUContentTileProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUCrossfadeAnimatedTransitioning
|| __DATA.__objc_data _OBJC_METACLASS_$_PUDeletePhotosActionController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUDisplayLink
|| __DATA.__objc_data _OBJC_METACLASS_$_PUDisplayLocationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUDoubleHeightHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUDynamicValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingErrorPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingExtensionUndoAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingExtensionUndoProxyExtensionSide
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingExtensionUndoProxyHostSide
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEditingInitialPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_PUEnterEditPerformanceEventBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_PUErrorPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUExitEditPerformanceEventBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_PUFilmStripViewIndicatorInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUFilmstripView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUFunEffectsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUGridTilingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUGroupValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUHorizontalAlbumListGadgetProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUImageExtraction
|| __DATA.__objc_data _OBJC_METACLASS_$_PUImportActionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_PUImportHistoryGridViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUImportPPTDriver
|| __DATA.__objc_data _OBJC_METACLASS_$_PUImportViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUIndexPathSet
|| __DATA.__objc_data _OBJC_METACLASS_$_PUInitialHysteresisValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUJoiningAssetActionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUJoiningAssetsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUJoiningDataSourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUJoiningMediaProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PULayoutSampledSectioning
|| __DATA.__objc_data _OBJC_METACLASS_$_PULayoutSectioning
|| __DATA.__objc_data _OBJC_METACLASS_$_PULegacyViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PULibraryTabInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PULivePhotoKeyFrameSelectionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PULoadingStatusManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUMaximumChangeRateValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_PUMergedLivePhotosVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUModalTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_PUModelTileTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_PUMomentsZoomLevelManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUMutableIndexPathSet
|| __DATA.__objc_data _OBJC_METACLASS_$_PUNavigationTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpAccessoryViewControllersManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpAssetTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpLoadingErrorPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpPhotosSharingTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpPresentationHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpTilingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOneUpTilingLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOperationStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_PUOverOneUpPresentationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_PUParallaxComputer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoDecoration
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditEffectsSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditLayoutSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditResourceLoadRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditResourceLoadResult
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditResourceLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoEditValuesCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoKitAssetActionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoKitAssetsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoKitDataSourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoKitMediaProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoPickerRemoteNavigationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoPickerRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoPickerRemoteViewControllerRequestOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoSelectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoStreamAlbumsTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoStreamRecipientViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotoViewContentHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosDiagnosticsAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridBarsHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridDownloadHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridLayoutHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPadCameraSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPadImagePickerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPadSearchSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPhoneCameraSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPhoneImagePickerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPhoneSearchSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosMapGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosMapGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosPanoramaViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosPanoramaViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosPanoramaViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosPanoramaViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPhotosSharingTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPickerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_PUPopoverController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUProgressIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewAssetsMediaDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewFileManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewScreenBarsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewScreenDoneButton
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewScreenTopBar
|| __DATA.__objc_data _OBJC_METACLASS_$_PUReviewScreenUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PUScrollViewSpeedometer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchHomeViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordAssetCollectionViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordAssetViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordBaseViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordDateViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordGadget
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordHolidayViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordHomeViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordMeaningViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordPersonViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordPlaceViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordSceneViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordSeasonViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordSection
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSearchZeroKeywordSocialGroupViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSectionedGridLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSectionedTilingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSessionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSharingErrorPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSidebarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSingleHeightHorizontalAlbumListGadgetLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUSoftClampValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUStackView
|| __DATA.__objc_data _OBJC_METACLASS_$_PUStorageManagementBaseController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUStorageManagementUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_PUStoryAssetPickerHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTabbedLibraryViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTabbedLibraryViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTabbedLibraryViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTabbedLibraryViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTabbedLibraryViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUThresholdCrossingCountValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTileIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTileLayoutInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTileTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTileTree
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTilingDataSourceConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTilingLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTilingLayoutInvalidationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTilingScrollInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTilingViewUpdateItem
|| __DATA.__objc_data _OBJC_METACLASS_$_PUToolbarViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUToolbarViewModelChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUTouchingGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_PUUISaveToCameraRollActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_PUUserTransformTileLayoutInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PUUserTransformTileViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUValueFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUVelocityFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_PUVideoComplementItemSource
|| __DATA.__objc_data _OBJC_METACLASS_$_PUVideoListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUViewControllerSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUViewControllerSpecChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUViewControllerTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_PUViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PUViewModelChange
|| __DATA.__objc_data _OBJC_METACLASS_$_PUWelcomeViewControllersManager
|| __DATA.__objc_data _OBJC_METACLASS_$_PUZoomableGridViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_PUZoomableGridViewControllerPadSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUZoomableGridViewControllerPhoneSpec
|| __DATA.__objc_data _OBJC_METACLASS_$_PUZoomableGridViewControllerSpec
|| __DATA_CONST.__const _PLActivityTypeAlbumStream
|| __DATA_CONST.__const _PLActivityTypeAssignToContact
|| __DATA_CONST.__const _PLActivityTypeUseAsWallpaper
|| __DATA_CONST.__const _PUActivityErrorDomain
|| __DATA_CONST.__const _PUActivityFileSizeLimitBytes
|| __DATA_CONST.__const _PUActivityItemSourceControllerErrorDomain
|| __DATA_CONST.__const _PUActivityTypeAddToAlbum
|| __DATA_CONST.__const _PUActivityTypeAirPlay
|| __DATA_CONST.__const _PUActivityTypeCompleteMyMoment
|| __DATA_CONST.__const _PUActivityTypeCopyLink
|| __DATA_CONST.__const _PUActivityTypeCreateWatchFace
|| __DATA_CONST.__const _PUActivityTypeDuplicate
|| __DATA_CONST.__const _PUActivityTypeEditDateTime
|| __DATA_CONST.__const _PUActivityTypeEditLocation
|| __DATA_CONST.__const _PUActivityTypeHide
|| __DATA_CONST.__const _PUActivityTypeInternalAutoLoopFeedback
|| __DATA_CONST.__const _PUActivityTypeInternalGIFExport
|| __DATA_CONST.__const _PUActivityTypeInternalImageQualityFeedback
|| __DATA_CONST.__const _PUActivityTypeNotThisPerson
|| __DATA_CONST.__const _PUActivityTypeRemoveFromFeaturedPhotos
|| __DATA_CONST.__const _PUActivityTypeSetKeyFace
|| __DATA_CONST.__const _PUActivityTypeSlideShow
|| __DATA_CONST.__const _PUActivityTypeStreamShare
|| __DATA_CONST.__const _PUActivityTypeSuggestLessPerson
|| __DATA_CONST.__const _PUAlbumListViewControllerAlbumCellIdentifier
|| __DATA_CONST.__const _PUAlbumListViewControllerPlaceholderCellIdentifier
|| __DATA_CONST.__const _PUAutoWhiteBalanceFaceIKey
|| __DATA_CONST.__const _PUAutoWhiteBalanceFaceQKey
|| __DATA_CONST.__const _PUAutoWhiteBalanceFaceStrengthKey
|| __DATA_CONST.__const _PUAutoWhiteBalanceFaceWarmthKey
|| __DATA_CONST.__const _PUAutoWhiteBalanceWarmFace
|| __DATA_CONST.__const _PUAutoWhiteBalanceWarmTemp
|| __DATA_CONST.__const _PUAutoWhiteBalanceWarmTint
|| __DATA_CONST.__const _PUCMMActivityItemSourceErrorDomain
|| __DATA_CONST.__const _PUCollectionElementKindGridGlobalFooter
|| __DATA_CONST.__const _PUCollectionElementKindGridGlobalHeader
|| __DATA_CONST.__const _PUCollectionsRenderedGridStripKind
|| __DATA_CONST.__const _PUCollectionsSectionHeaderKind
|| __DATA_CONST.__const _PUDisplayLinkStartedNotification
|| __DATA_CONST.__const _PUFullMomentsSectionHeaderKind
|| __DATA_CONST.__const _PUFunEffectsAdjustmentFormatIdentifier
|| __DATA_CONST.__const _PUFunEffectsAdjustmentFormatVersion
|| __DATA_CONST.__const _PUImportPPTDriverAllModelKey
|| __DATA_CONST.__const _PUImportPPTDriverBatchCountKey
|| __DATA_CONST.__const _PUImportPPTDriverImportAllKey
|| __DATA_CONST.__const _PUImportPPTDriverImportSomeKey
|| __DATA_CONST.__const _PUImportPPTDriverIncludeBackendPPTDataKey
|| __DATA_CONST.__const _PUImportPPTDriverNavigateToImportTabKey
|| __DATA_CONST.__const _PUImportPPTDriverReplyWhenAllContentIsReadyKey
|| __DATA_CONST.__const _PUImportPPTDriverReplyWhenAnyContentIsReadyKey
|| __DATA_CONST.__const _PUImportPPTDriverReplyWhenMediaProviderReadyKey
|| __DATA_CONST.__const _PUImportPPTDriverThumbnailToAllAbsoluteKey
|| __DATA_CONST.__const _PUImportPPTDriverThumbnailToAllScreenKey
|| __DATA_CONST.__const _PUImportPPTDriverThumbnailToFirstKey
|| __DATA_CONST.__const _PUInvisibleSubtitlePlaceholder
|| __DATA_CONST.__const _PUMediaDestinationErrorDomain
|| __DATA_CONST.__const _PUMediaProviderErrorDomain
|| __DATA_CONST.__const _PUMediaProviderResultIsFullSizeFormat
|| __DATA_CONST.__const _PUMediaProviderResultIsPlaceholder
|| __DATA_CONST.__const _PUMediaProviderStillDisplayTimeKey
|| __DATA_CONST.__const _PUPhotoCellIdentifier
|| __DATA_CONST.__const _PUShouldReloadAssetMediaNotification
|| __DATA_CONST.__const _PUStorageManagementICPLEnableTipSizeRefreshRequired
|| __DATA_CONST.__const _PUTileKindItemContent
|| __DATA_CONST.__const _PUTransientImageManagerInfoKeyError
|| __DATA_CONST.__const _PUTransientImageManagerInfoKeyFilterName
|| __DATA_CONST.__const _PUTransientImageManagerInfoKeyStillDisplayTime
|| __DATA_CONST.__const _PUUIActivityTypeSaveToCameraRoll
|| __DATA_CONST.__const _PUYearsLevelRenderedGridStripKind
|| __DATA_CONST.__const _PUYearsLevelSectionHeaderKind
|| __DATA_CONST.__const _kPUPhotoStreamsAlbumSelectedGuid
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PHLivePhotoView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUActivityViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUAlbumListCellContentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUAlbumListViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUAssetActionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUAssetsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUAssetsDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUBarsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUCarouselSharingViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUEditableMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUFeedSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUFeedViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUFlatWhiteInterfaceTheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUHorizontalAlbumListGadget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUInterfaceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUIrisSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUOneUpBarsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUOneUpSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUOneUpViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPerformanceDiagnosticsSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotoEditProtoSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotoEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotoStreamCreateTitleViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotosAlbumViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotosGridCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotosGridSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUPhotosGridViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewAssetsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewAssetsDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewAssetsMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUReviewScreenControlBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PURootSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTabbedLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTileController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTileViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTilingDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTilingView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUTilingViewSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUUserTransformView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PUVideoPlayerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PHLivePhotoView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUActivityViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUAlbumListCellContentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUAlbumListViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUAssetActionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUAssetsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUAssetsDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUBarsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUCarouselSharingViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUEditableMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUFeedSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUFeedViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUFlatWhiteInterfaceTheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUHorizontalAlbumListGadget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUInterfaceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUIrisSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUOneUpBarsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUOneUpSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUOneUpViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPerformanceDiagnosticsSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotoEditProtoSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotoEditViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotoStreamCreateTitleViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotosAlbumViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotosGridCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotosGridSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUPhotosGridViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewAssetsDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewAssetsDataSourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewAssetsMediaProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUReviewScreenControlBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PURootSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTabbedLibrarySettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTileController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTileViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTilingDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTilingView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUTilingViewSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUUserTransformView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PUVideoPlayerView
|| __TEXT.__const _PHDisplayVelocityZero
|| __TEXT.__const _PUBarAnimationSettingsNone
|| __TEXT.__const _PUDisplayVelocityZero
|| __TEXT.__const _PUPhotoViewBannerHeight
|| __TEXT.__const _PUPhotosGridDownloadHelperCancelledCode
|| __TEXT.__const _PUReviewScreenGeometryZero
|| __TEXT.__const _PUSizeNull
|| __TEXT.__const _PUVectorZero
|| __TEXT.__text _PUActivityItemSharingPreferencesIsEqualToSharingPreferences
|| __TEXT.__text _PUActivityItemSharingPreferencesMake
|| __TEXT.__text _PUActivityItemSourceControllerStateDebugDescription
|| __TEXT.__text _PUActivityItemSourceStateDebugDescription
|| __TEXT.__text _PUAdjustPointsToBeWithinRect
|| __TEXT.__text _PUAffineTransformIsApproximatelyEqualToTransform
|| __TEXT.__text _PUAffineTransformToMatchRect
|| __TEXT.__text _PUAffineTransformWithAnchorPointTranslationRotationScale
|| __TEXT.__text _PUAngleDifference
|| __TEXT.__text _PUAngleFromPoints
|| __TEXT.__text _PUBackgroundColorAnimatorBlockForChromeAnimation
|| __TEXT.__text _PUBoundingRectForPoints
|| __TEXT.__text _PUCMMActivityItemSourceStateDebugDescription
|| __TEXT.__text _PUCPAnalyticsEventNameForDeletePhotosAction
|| __TEXT.__text _PUCanConvertFromCoordinateSystemToCoordinateSystem
|| __TEXT.__text _PUCeilingToPixel
|| __TEXT.__text _PUChromeAnimationDuration
|| __TEXT.__text _PUClampValueWithEase
|| __TEXT.__text _PUComposeTransform
|| __TEXT.__text _PUConvertPointFromCoordinateSystemToCoordinateSystem
|| __TEXT.__text _PUConvertRectFromCoordinateSystemToCoordinateSystem
|| __TEXT.__text _PUCoordinateSystemEqualToCoordinateSystem
|| __TEXT.__text _PUDecomposeTransform
|| __TEXT.__text _PUDegreesToRadians
|| __TEXT.__text _PUDenormalizePoint
|| __TEXT.__text _PUDerivative
|| __TEXT.__text _PUDiffHorizontalRects
|| __TEXT.__text _PUDiffVerticalRects
|| __TEXT.__text _PUDisplayVelocityEqualToDisplayVelocity
|| __TEXT.__text _PUDistanceBetweenPoints
|| __TEXT.__text _PUEdgeInsetsByLinearlyInterpolatingEdgeInsets
|| __TEXT.__text _PUEdgeInsetsInverse
|| __TEXT.__text _PUEdgeInsetsScale
|| __TEXT.__text _PUEdgeOppositeToEdge
|| __TEXT.__text _PUEditingErrorTypeDescription
|| __TEXT.__text _PUExtendRectToPixel
|| __TEXT.__text _PUFloatByLinearlyInterpolatingFloats
|| __TEXT.__text _PUFloatInterpolateFloats
|| __TEXT.__text _PUFloorToPixel
|| __TEXT.__text _PUGetRequestedNavigationTransition
|| __TEXT.__text _PUImageContentModeForPhotoViewContentMode
|| __TEXT.__text _PUInsetsOfRectInRect
|| __TEXT.__text _PUItemProviderForAsset
|| __TEXT.__text _PUKDebugIsEnabled
|| __TEXT.__text _PUKDebugTrace
|| __TEXT.__text _PULineDistanceBetweenPoints
|| __TEXT.__text _PULineDistanceToPoint
|| __TEXT.__text _PULineIntersection
|| __TEXT.__text _PULocalizationKeyForMediaType
|| __TEXT.__text _PULocalizedString
|| __TEXT.__text _PUMainScreenScale
|| __TEXT.__text _PUNormalizePoint
|| __TEXT.__text _PUOneUpEventTrackerCreate
|| __TEXT.__text _PUOneUpLoadingErrorTypeDescription
|| __TEXT.__text _PUPerformWithNavigationTransition
|| __TEXT.__text _PUPerspectiveTransformDenormalize
|| __TEXT.__text _PUPerspectiveTransformMakeRotation
|| __TEXT.__text _PUPerspectiveTransformMakeScaleDimensions
|| __TEXT.__text _PUPerspectiveTransformMakeTranslation
|| __TEXT.__text _PUPerspectiveTransformMakeWithRows
|| __TEXT.__text _PUPerspectiveTransformMaxInsetForDimensions
|| __TEXT.__text _PUPhotoEditHandleURLAction
|| __TEXT.__text _PUPhotoEditSessionEndString
|| __TEXT.__text _PUPhotosFileProviderTypeIdentifierAutoLoopAsGIF
|| __TEXT.__text _PUPhotosFileProviderTypeIdentifierLivePhotoBundle
|| __TEXT.__text _PUPixelSizeFromPointSize
|| __TEXT.__text _PUPixelWidth
|| __TEXT.__text _PUPointAdd
|| __TEXT.__text _PUPointApplyPerspectiveTransform
|| __TEXT.__text _PUPointByLinearlyInterpolatingPoints
|| __TEXT.__text _PUPointInterpolatePoints
|| __TEXT.__text _PUPointIsApproximatelyEqualToPoint
|| __TEXT.__text _PUPointIsEqualToPointWithTolerance
|| __TEXT.__text _PUPointIsOnLineSegmentBetweenPoints
|| __TEXT.__text _PUPointScale
|| __TEXT.__text _PUPointSubtract
|| __TEXT.__text _PUProgressValueWithEaseInOut
|| __TEXT.__text _PUQuadApplyPerspectiveTransform
|| __TEXT.__text _PUQuadApplyScaleFactor
|| __TEXT.__text _PUQuadContainsPoint
|| __TEXT.__text _PUQuadContainsRect
|| __TEXT.__text _PUQuadForRect
|| __TEXT.__text _PUQuadGetBoundingRect
|| __TEXT.__text _PUQuadGetCentroid
|| __TEXT.__text _PUQuadGetMaxX
|| __TEXT.__text _PUQuadGetMaxY
|| __TEXT.__text _PUQuadGetMinX
|| __TEXT.__text _PUQuadGetMinY
|| __TEXT.__text _PUQuadImageCreate
|| __TEXT.__text _PUQuadScaleFactorToFillRect
|| __TEXT.__text _PURadiansToDegrees
|| __TEXT.__text _PURectByLinearlyInterpolatingRects
|| __TEXT.__text _PURectContainsPoint
|| __TEXT.__text _PURectDenormalize
|| __TEXT.__text _PURectGetArea
|| __TEXT.__text _PURectGetAspectRatio
|| __TEXT.__text _PURectGetCenter
|| __TEXT.__text _PURectInterpolateRects
|| __TEXT.__text _PURectIsApproximatelyEqualToRect
|| __TEXT.__text _PURectNormalize
|| __TEXT.__text _PURectUnionPoint
|| __TEXT.__text _PURectUnionPoints
|| __TEXT.__text _PURectWithAspectRatioFillingRect
|| __TEXT.__text _PURectWithAspectRatioFittingRect
|| __TEXT.__text _PURectWithCenterAndSize
|| __TEXT.__text _PURectWithEdges
|| __TEXT.__text _PURectWithMinimumSize
|| __TEXT.__text _PURectWithSizeThatFitsInRect
|| __TEXT.__text _PUReviewScreenFrameForGeometry
|| __TEXT.__text _PUReviewScreenGeometryMake
|| __TEXT.__text _PURoundRectToPixel
|| __TEXT.__text _PURoundToPixel
|| __TEXT.__text _PUSharingErrorTypeDescription
|| __TEXT.__text _PUShouldAutoHideChrome
|| __TEXT.__text _PUSizeAdd
|| __TEXT.__text _PUSizeByLinearlyInterpolatingSizes
|| __TEXT.__text _PUSizeGetAspectRatio
|| __TEXT.__text _PUSizeInterpolateSizes
|| __TEXT.__text _PUSizeInverse
|| __TEXT.__text _PUSizeIsApproximatelyEqualToSize
|| __TEXT.__text _PUSizeIsEqualToSizeWithTolerance
|| __TEXT.__text _PUSizeIsNull
|| __TEXT.__text _PUSizeMax
|| __TEXT.__text _PUSizeMin
|| __TEXT.__text _PUSizeScale
|| __TEXT.__text _PUSizeScaleToFillSize
|| __TEXT.__text _PUSizeScaleToFitSize
|| __TEXT.__text _PUSizeSubtract
|| __TEXT.__text _PUSizeTranspose
|| __TEXT.__text _PUStringFromDisplayVelocity
|| __TEXT.__text _PUTransformByLinearlyInterpolatingTransforms
|| __TEXT.__text _PUVectorDiff
|| __TEXT.__text _PUVectorDotProduct
|| __TEXT.__text _PUVectorExtendFromPoint
|| __TEXT.__text _PUVectorFromPoint
|| __TEXT.__text _PUVectorFromSize
|| __TEXT.__text _PUVectorGetParameterToXValue
|| __TEXT.__text _PUVectorGetParameterToYValue
|| __TEXT.__text _PUVectorMagnitude
|| __TEXT.__text _PUVectorProjVector
|| __TEXT.__text _PUVectorScale
|| __TEXT.__text _PUVectorSum
|| __TEXT.__text _pu_dispatch_on_main_queue
|| __TEXT.__text _pu_dispatch_on_main_queue_when_idle_after_delay
__ AVFAudio: _AVAudioSessionCategoryAmbient
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVAudioSessionModeDefault
__ AVFoundation: _AVAssetExportPresetHEVCHighestQuality
__ AVFoundation: _AVAssetExportPresetHighestQuality
__ AVFoundation: _AVAssetExportPresetLowQuality
__ AVFoundation: _AVAssetExportPresetMediumQuality
__ AVFoundation: _AVAssetExportPresetMessage
__ AVFoundation: _AVAssetExportPresetPassthrough
__ AVFoundation: _AVAssetExportPresetPhotoStreamHD
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeMetadata
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataKeySpaceQuickTimeMetadata
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyContentIdentifier
__ AVFoundation: _AVOutputContextOutputDeviceDidChangeNotification
__ AVFoundation: _AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
__ AVFoundation: _AVOutputDeviceSecondDisplayModeDefault
__ AVFoundation: _AVOutputDeviceSecondDisplayModeMediaPresentation
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoCompositionInstruction
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoCompositionLayerInstruction
__ AVFoundation: _OBJC_CLASS_$_AVOutputContext
__ AVFoundation: _OBJC_CLASS_$_AVOutputDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVTimeFormatter
__ AVFoundation: _OBJC_CLASS_$_AVTimedMetadataGroup
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_CLASS_$_AVVideoComposition
__ Accounts: _kAccountDataclassCloudPhotos
__ Accounts: _kAccountDataclassUbiquity
__ AppSupport: _CPFSSizeStrings
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ BiomeStreams: _OBJC_CLASS_$_BMDiscoverabilitySignalEvent
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ CMPhoto: _CMPhotoDecompressionContainerPredictTranscodedSize
__ CMPhoto: _CMPhotoDecompressionSessionCreate
__ CMPhoto: _CMPhotoDecompressionSessionCreateContainer
__ CMPhoto: _OBJC_CLASS_$_CMPhotoTiledLayer
__ CMPhoto: _kCMPhotoCompressionOption_CodecType
__ CMPhoto: _kCMPhotoCompressionOption_QualityControllerParameters
__ CMPhoto: _kCMPhotoCompressionOption_QualityControllerType
__ CMPhoto: _kCMPhotoDecompressionOption_ApplyTransform
__ CMPhoto: _kCMPhotoDecompressionOption_MaxPixelSize
__ CMPhoto: _kCMPhotoQualityControllerParameter_QualityValue
__ CPAnalytics: _CPAnalyticsEventAssetExportItemPreparationCompleted
__ CPAnalytics: _CPAnalyticsEventAssetExportPreparationCanceled
__ CPAnalytics: _CPAnalyticsEventAssetExportPreparationCompleted
__ CPAnalytics: _CPAnalyticsEventAssetExportPreparationFailed
__ CPAnalytics: _CPAnalyticsEventAssetFavorited
__ CPAnalytics: _CPAnalyticsEventAssetUnfavorited
__ CPAnalytics: _CPAnalyticsEventAssetsDeleted
__ CPAnalytics: _CPAnalyticsEventExitEdit
__ CPAnalytics: _CPAnalyticsEventInterval
__ CPAnalytics: _CPAnalyticsEventScreenshotTaken
__ CPAnalytics: _CPAnalyticsEventShareCanceled
__ CPAnalytics: _CPAnalyticsEventShareCompleted
__ CPAnalytics: _CPAnalyticsEventTabIdentifierChanged
__ CPAnalytics: _CPAnalyticsEventViewDidAppear
__ CPAnalytics: _CPAnalyticsEventViewDidDisappear
__ CPAnalytics: _CPAnalyticsPayloadAssetCollectionKey
__ CPAnalytics: _CPAnalyticsPayloadAssetCollectionLocalIdentifierKey
__ CPAnalytics: _CPAnalyticsPayloadAssetsKey
__ CPAnalytics: _CPAnalyticsPayloadClassNameKey
__ CPAnalytics: _CPAnalyticsPayloadErrorKey
__ CPAnalytics: _CPAnalyticsPayloadIntervalNameKey
__ CPAnalytics: _CPAnalyticsPayloadTabIdentifierDescriptionKey
__ CPAnalytics: _CPAnalyticsPayloadViewIDKey
__ CPAnalytics: _CPAnalyticsSignpostEventViewTime
__ CPAnalytics: _OBJC_CLASS_$_CPAnalytics
__ CameraEditKit: _OBJC_CLASS_$_CEKApertureButton
__ CameraEditKit: _OBJC_CLASS_$_CEKApertureSlider
__ CameraEditKit: _OBJC_CLASS_$_CEKBadgeTextView
__ CameraEditKit: _OBJC_CLASS_$_CEKCinematicSubjectIndicatorView
__ CameraEditKit: _OBJC_CLASS_$_CEKEdgeGradientView
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingControl
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingEffectManager
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingNameBadge
__ CameraEditKit: _OBJC_CLASS_$_CEKSlider
__ CameraEditKit: _OBJC_CLASS_$_CEKSubjectIndicatorView
__ CameraEditKit: _OBJC_CLASS_$_CEKWheelScrubberView
__ CameraEditKit: _OBJC_METACLASS_$_CEKApertureButton
__ CloudPhotoLibrary: _CPLLibraryIdentifierSystemLibrary
__ CloudPhotoLibrary: _OBJC_CLASS_$_CPLLibraryManager
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ ContactsAutocomplete: _OBJC_CLASS_$_CNAutocompleteFetchContext
__ ContactsUI: _OBJC_CLASS_$_CNContactPickerViewController
__ ContactsUI: _OBJC_CLASS_$_CNContactViewController
__ ContactsUI: _OBJC_CLASS_$_CNMonogrammer
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFURLIsDirectoryKey
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorCreateCopyByMatchingToColorSpace
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetRenderingIntent
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextAddRect
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextEOClip
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetGrayFillColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetShadow
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextStrokeRectWithWidth
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPDFDocumentCreateWithURL
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPDFPageGetBoxRect
__ CoreGraphics: _CGPDFPageGetDrawingTransform
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIContextName
__ CoreImage: _kCIImageProperties
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIOutputImageKey
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreMedia: _CMMetadataFormatDescriptionGetIdentifiers
__ CoreMedia: _CMSampleBufferGetNumSamples
__ CoreMedia: _CMTimeAbsoluteValue
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeClampToRange
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeMultiplyByRatio
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeContainsTimeRange
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeGetIntersection
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMMetadataIdentifier_QuickTimeMetadataLivePhotoStillImageTransform
__ CoreMedia: _kCMMetadataIdentifier_QuickTimeMetadataLivePhotoStillImageTransformReferenceDimensions
__ CoreMedia: _kCMTimeIndefinite
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeRangeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ FileProvider: _OBJC_CLASS_$_NSFileProviderManager
__ Foundation: _NSAllMapTableKeys
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSExtensionIdentifierName
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileSize
__ Foundation: _NSIntersectionRange
__ Foundation: _NSIsEmptyRect
__ Foundation: _NSItemProviderErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUndoManagerDidCloseUndoGroupNotification
__ Foundation: _NSUndoManagerDidRedoChangeNotification
__ Foundation: _NSUndoManagerDidUndoChangeNotification
__ Foundation: _NSUnionRange
__ Foundation: _NSZeroRect
__ Foundation: _NSZeroSize
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSItemProvider
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: __NSDictionaryOfVariableBindings
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _CGImageWriteEXIFJPEGToPath
__ ImageIO: _kCGImageDestinationImageMaxPixelSize
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifFlash
__ ImageIO: _kCGImagePropertyMakerAppleDictionary
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceRasterizationDPI
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ ImageIO: _kCGImageSourceTypeIdentifierHint
__ LinkPresentation: _OBJC_CLASS_$_LPApplePhotosStatusMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ ManagedConfiguration: _MCFeatureCloudPhotoLibraryAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaPlayer: _MPMediaItemPropertyPersistentID
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPickerController
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ MediaToolbox: _FigGetRotationAngleAndFlipsFromCGAffineTransform
__ Metal: _MTLCreateSystemDefaultDevice
__ NeutrinoCore: _NUCurrentlyExecutingJobNameKey
__ NeutrinoCore: _NUOrientationIsValid
__ NeutrinoCore: _NUPixelSizeToCGSize
__ NeutrinoCore: _OBJC_CLASS_$_NUAuxiliaryImageRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUBufferRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NUCropModel
__ NeutrinoCore: _OBJC_CLASS_$_NUFactory
__ NeutrinoCore: _OBJC_CLASS_$_NUFillScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUFitScalePolicy
__ NeutrinoCore: _OBJC_CLASS_$_NUGeometryRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUGlobalSettings
__ NeutrinoCore: _OBJC_CLASS_$_NUImagePropertiesClient
__ NeutrinoCore: _OBJC_CLASS_$_NUImagePropertiesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NULivePhotoRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NULivePhotoRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUPriority
__ NeutrinoCore: _OBJC_CLASS_$_NURenderTransaction
__ NeutrinoCore: _OBJC_CLASS_$_NURuleSystem
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoAttributesRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoPlaybackCompositor
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoRenderClient
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoRenderRequest
__ NeutrinoCore: _OBJC_CLASS_$_NUVideoUtilities
__ NeutrinoCore: __NUAssertContinueHandler
__ NeutrinoCore: __NUAssertLogger
__ NeutrinoCore: __NULogInit
__ NeutrinoCore: __NULogOnceToken
__ NeutrinoCore: __NULogger
__ NeutrinoCore: _kNUCropModelAngleRadiansTolerance
__ NeutrinoKit: _NUEdgeInsetsInsetRect
__ NeutrinoKit: _OBJC_CLASS_$_NUMediaView
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBWelcomeController
__ PhotoFoundation: _OBJC_CLASS_$_PFCoalescer
__ PhotoFoundation: __PFAssertContinueHandler
__ PhotoFoundation: __PFAssertFailHandler
__ PhotoImaging: _OBJC_CLASS_$_PIAutoLoopAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PICinematicVideoUtilities
__ PhotoImaging: _OBJC_CLASS_$_PICompositionController
__ PhotoImaging: _OBJC_CLASS_$_PICompositionExporter
__ PhotoImaging: _OBJC_CLASS_$_PICompositionExporterAuxiliaryOptions
__ PhotoImaging: _OBJC_CLASS_$_PICompositionExporterImageOptions
__ PhotoImaging: _OBJC_CLASS_$_PICompositionFinalizer
__ PhotoImaging: _OBJC_CLASS_$_PICompositionSerializer
__ PhotoImaging: _OBJC_CLASS_$_PICompositionSerializerFormatVersion
__ PhotoImaging: _OBJC_CLASS_$_PICropAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PICropAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIDebugAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PIDefinitionAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PIDepthEffectApertureAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIFaceBalanceAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIFaceObservationCache
__ PhotoImaging: _OBJC_CLASS_$_PIGlobalSettings
__ PhotoImaging: _OBJC_CLASS_$_PIManualRedEyeAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PINoiseReductionAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PIPerspectiveAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIPhotoEditHelper
__ PhotoImaging: _OBJC_CLASS_$_PIPipelineFilters
__ PhotoImaging: _OBJC_CLASS_$_PIPortraitAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIRawNoiseReductionAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PIRedEyeAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIReframeRules
__ PhotoImaging: _OBJC_CLASS_$_PISharpenAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PISmartBlackAndWhiteAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PISmartColorAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PISmartColorAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PISmartToneAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PISmartToneAutoCalculator
__ PhotoImaging: _OBJC_CLASS_$_PIVideoStabilizeRequest
__ PhotoImaging: _OBJC_CLASS_$_PIVignetteAdjustmentController
__ PhotoImaging: _OBJC_CLASS_$_PIWhiteBalanceAdjustmentController
__ PhotoImaging: _PIAutoEnhanceAdjustmentKey
__ PhotoImaging: _PIAutoLoopFlavorFromString
__ PhotoImaging: _PICapturedPortraitMajorVersionKey
__ PhotoImaging: _PICapturedPortraitMinorVersionKey
__ PhotoImaging: _PICropAdjustmentKey
__ PhotoImaging: _PIDebugAdjustmentKey
__ PhotoImaging: _PIDefinitionAdjustmentKey
__ PhotoImaging: _PIDepthApertureKey
__ PhotoImaging: _PIDepthGlassesMatteAllowedKey
__ PhotoImaging: _PIDepthInfoKey
__ PhotoImaging: _PINoiseReductionAdjustmentKey
__ PhotoImaging: _PIOrientationAdjustmentKey
__ PhotoImaging: _PIPortraitAdjustmentKey
__ PhotoImaging: _PIPortraitDisableStageKey
__ PhotoImaging: _PIPortraitInfoKey
__ PhotoImaging: _PIPortraitSpillMatteAllowedKey
__ PhotoImaging: _PIPortraitStrengthKey
__ PhotoImaging: _PIRawNoiseReductionAdjustmentKey
__ PhotoImaging: _PIRedEyeAdjustmentKey
__ PhotoImaging: _PISharpenAdjustmentKey
__ PhotoImaging: _PISlomoAdjustmentKey
__ PhotoImaging: _PISmartBWAdjustmentKey
__ PhotoImaging: _PISmartColorAdjustmentKey
__ PhotoImaging: _PISmartToneAdjustmentKey
__ PhotoImaging: _PITrimAdjustmentKey
__ PhotoImaging: _PIVignetteAdjustmentKey
__ PhotoImaging: _PIWhiteBalanceAdjustmentKey
__ PhotoImaging: _PIWhiteBalanceTypeWarmTint
__ PhotoLibrary: _OBJC_CLASS_$_PHRootSettings
__ PhotoLibrary: _OBJC_CLASS_$_PLCAAnimationDelegate
__ PhotoLibrary: _OBJC_CLASS_$_PLCommentsFontCache
__ PhotoLibrary: _OBJC_CLASS_$_PLPhotosDefaults
__ PhotoLibrary: _OBJC_CLASS_$_PLProgressView
__ PhotoLibrary: _OBJC_CLASS_$_PLRoundProgressView
__ PhotoLibrary: _OBJC_CLASS_$_PLTiledLayer
__ PhotoLibrary: _OBJC_CLASS_$_PLUIEditVideoViewController
__ PhotoLibrary: _OBJC_CLASS_$_PLUIImageViewController
__ PhotoLibrary: _OBJC_CLASS_$_PLVideoRemaker
__ PhotoLibrary: _OBJC_IVAR_$_PLUIImageViewController._allowEditing
__ PhotoLibrary: _OBJC_IVAR_$_PLUIImageViewController._imageTile
__ PhotoLibrary: _OBJC_IVAR_$_PLUIImageViewController._photo
__ PhotoLibrary: _OBJC_IVAR_$_PLUIImageViewController._progressView
__ PhotoLibrary: _OBJC_METACLASS_$_PLUIImageViewController
__ PhotoLibrary: _PLCommentsFontCacheDidChangeNotification
__ PhotoLibrary: _PLPhotoPickerDictionariesFromMultipleMediaItems
__ PhotoLibrary: _PLPhotoPickerDictionaryFromMedia
__ PhotoLibrary: _PLPhotoPickerDictionaryFromVideo
__ PhotoLibrary: _PLPhotosDefaultsDidChangeNotification
__ PhotoLibrary: _PLPublishingAgentDidCancelNotification
__ PhotoLibrary: _PLPublishingAgentFinishedPublishingNotification
__ PhotoLibrary: _PLPublishingAgentFinishedRemakingNotification
__ PhotoLibrary: _PLPublishingAgentRemakingDidSucceedKey
__ PhotoLibrary: _PLPublishingAgentStartedPublishingNotification
__ PhotoLibrary: _PLPublishingAgentStartedRemakingNotification
__ PhotoLibrary: _PLPublishingAgentsForcedCancelNotification
__ PhotoLibraryServices: _OBJC_CLASS_$_PLAccountStore
__ PhotoLibraryServices: _OBJC_CLASS_$_PLAvalanche
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCacheDeleteClient
__ PhotoLibraryServices: _OBJC_CLASS_$_PLChangeNotificationCenter
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudFeedEntry
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudPhotoLibraryHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudSharedAlbum
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudSharedAlbumInvitationRecord
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudSharingInvitationChangeJob
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCloudStreamShareJob
__ PhotoLibraryServices: _OBJC_CLASS_$_PLCompositionHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLDateRangeFormatter
__ PhotoLibraryServices: _OBJC_CLASS_$_PLEditSource
__ PhotoLibraryServices: _OBJC_CLASS_$_PLFigPreheatItem
__ PhotoLibraryServices: _OBJC_CLASS_$_PLFilteredAlbum
__ PhotoLibraryServices: _OBJC_CLASS_$_PLFilteredAlbumList
__ PhotoLibraryServices: _OBJC_CLASS_$_PLGenericAlbum
__ PhotoLibraryServices: _OBJC_CLASS_$_PLImageGeometry
__ PhotoLibraryServices: _OBJC_CLASS_$_PLLimitedLibraryFetchFilter
__ PhotoLibraryServices: _OBJC_CLASS_$_PLLimitedLibraryPicker
__ PhotoLibraryServices: _OBJC_CLASS_$_PLLivePhotoEditSource
__ PhotoLibraryServices: _OBJC_CLASS_$_PLManagedAlbumList
__ PhotoLibraryServices: _OBJC_CLASS_$_PLManagedAsset
__ PhotoLibraryServices: _OBJC_CLASS_$_PLNotificationManager
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEditExportProperties
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEditExporterMetadataConverter
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEditPersistenceManager
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEditRenderer
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEditSource
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoEffect
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoLibrary
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoLibraryBundleController
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoSharingHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoStreamsHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLSceneClassification
__ PhotoLibraryServices: _OBJC_CLASS_$_PLSimpleAlbumList
__ PhotoLibraryServices: _OBJC_CLASS_$_PLSlalomUtilities
__ PhotoLibraryServices: _OBJC_CLASS_$_PLSortedAlbumList
__ PhotoLibraryServices: _OBJC_CLASS_$_PLStreamShareSource
__ PhotoLibraryServices: _OBJC_CLASS_$_PLUserActivityDaemonJob
__ PhotoLibraryServices: _OBJC_CLASS_$_PLVideoEditSource
__ PhotoLibraryServices: _OBJC_CLASS_$_PLVideoTranscoder
__ PhotoLibraryServices: _OBJC_CLASS_$_PLWarningHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLZeroKeywordStore
__ PhotoLibraryServices: _OBJC_METACLASS_$_PLFigPreheatItem
__ PhotoLibraryServices: _PLAccountStoreDidChangeNotification
__ PhotoLibraryServices: _PLCPLHasBeenEnabledForCurrentAccount
__ PhotoLibraryServices: _PLCPLHasBeenWelcomedForCurrentAccount
__ PhotoLibraryServices: _PLCPLIsCellularRestricted
__ PhotoLibraryServices: _PLCPLIsExceedingQuota
__ PhotoLibraryServices: _PLCPLIsInAirplaneMode
__ PhotoLibraryServices: _PLCPLRecordDidNotifyDeleteBehaviorForCurrentAccount
__ PhotoLibraryServices: _PLCPLRecordWelcomeForCurrentAccount
__ PhotoLibraryServices: _PLCPLSetKeepOriginalsEnabled
__ PhotoLibraryServices: _PLCPLShouldNotifyDeleteBehaviorForCurrentAccount
__ PhotoLibraryServices: _PLCacheDeleteClientErrorDomain
__ PhotoLibraryServices: _PLCanEnableCloudPhotoLibrary
__ PhotoLibraryServices: _PLChangeNotificationCenterDidFinishPostingNotifications
__ PhotoLibraryServices: _PLCloudPhotoLibraryHasFinishedInitialSync
__ PhotoLibraryServices: _PLCloudPhotoLibraryKeepOriginalsIsEnabled
__ PhotoLibraryServices: _PLDateRangeFormatterChangedNotification
__ PhotoLibraryServices: _PLDiagnosticsEnumerateAllUIStatesUsingBlock
__ PhotoLibraryServices: _PLDiagnosticsTitleOfUIState
__ PhotoLibraryServices: _PLDispatchOnMainAfter
__ PhotoLibraryServices: _PLGetDimensionsFromImageProperties
__ PhotoLibraryServices: _PLGetOrientationAndUntransformedSizeFromImageData
__ PhotoLibraryServices: _PLGetOrientationAndUntransformedSizeFromImageURL
__ PhotoLibraryServices: _PLIsCPLDataclassEnabled
__ PhotoLibraryServices: _PLLibraryContentModeChangedNotification
__ PhotoLibraryServices: _PLLibraryContentModeChangedNotificationKey
__ PhotoLibraryServices: _PLLimitedLibraryPickerClientApplicationIdentifier
__ PhotoLibraryServices: _PLLimitedLibraryPickerCompletionBlock
__ PhotoLibraryServices: _PLLimitedLibraryPickerModeEnabled
__ PhotoLibraryServices: _PLManagedObjectContextFinishedRemoteMergeNotification
__ PhotoLibraryServices: _PLObjectIsEqual
__ PhotoLibraryServices: _PLOrientationBetweenOrientations
__ PhotoLibraryServices: _PLOrientationConcat
__ PhotoLibraryServices: _PLOrientationInverse
__ PhotoLibraryServices: _PLOrientationIsValid
__ PhotoLibraryServices: _PLOrientationName
__ PhotoLibraryServices: _PLOrientationTransformImageSize
__ PhotoLibraryServices: _PLPhotoAnalysisSceneNodeSynonymsKey
__ PhotoLibraryServices: _PLPhotoEffectContourV1Identifier
__ PhotoLibraryServices: _PLPhotoEffectContourV2Identifier
__ PhotoLibraryServices: _PLPhotoEffectLightIdentifier
__ PhotoLibraryServices: _PLPhotoEffectNoneFilterName
__ PhotoLibraryServices: _PLPhotoEffectStageMonoV1Identifier
__ PhotoLibraryServices: _PLPhotoEffectStageMonoV2Identifier
__ PhotoLibraryServices: _PLPhotoEffectStageV1Identifier
__ PhotoLibraryServices: _PLPhotoEffectStageV2Identifier
__ PhotoLibraryServices: _PLPhotoEffectStageWhiteIdentifier
__ PhotoLibraryServices: _PLPhotoEffectStudioV1Identifier
__ PhotoLibraryServices: _PLPhotoEffectStudioV2Identifier
__ PhotoLibraryServices: _PLPrettyPrintPList
__ PhotoLibraryServices: _PLPreviewImageAndDurationForVideoAtPath
__ PhotoLibraryServices: _PLProgressDescription
__ PhotoLibraryServices: _PLRectGetCenter
__ PhotoLibraryServices: _PLSAggregateDictionaryAddValueForScalarKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAirPlaySessionDurationKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAirPlaySessionStartedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAirPlaySourceShareSheetKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAirPlaySourceSlideshowKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAirPlaySourceSystemKey
__ PhotoLibraryServices: _PLSAggregateDictionaryAlbumListItemSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryConsolidatedAlbumsPlusMenuNewAlbumKey
__ PhotoLibraryServices: _PLSAggregateDictionaryConsolidatedAlbumsPlusMenuNewFolderKey
__ PhotoLibraryServices: _PLSAggregateDictionaryConsolidatedAlbumsPlusMenuNewSharedAlbumKey
__ PhotoLibraryServices: _PLSAggregateDictionaryConsolidatedAlbumsPlusMenuNewSmartAlbumKey
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForEditPhotoWithApertureIntensity
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForEditPhotoWithFilterIntensity
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForEditPhotoWithFilterName
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForEditPhotoWithPortraitIntensity
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForEditPhotoWithPortraitName
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForOneUpPlayedIrisWithPlayCount
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForPhotosOneUpBrowseDuration
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForPhotosOneUpViewedHDRPhotoDuration
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForPhotosOneUpViewedPhotoDuration
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForStreamedVideoPlaybackTimeToStart
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForStreamedVideoStallCount
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForVideoEditFinalTrimDuration
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForVideoEditOriginalTrimDuration
__ PhotoLibraryServices: _PLSAggregateDictionaryMemoryFeedUserTappedMemoriesTapCountKey
__ PhotoLibraryServices: _PLSAggregateDictionaryMyAlbumsGadgetAlbumSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryOtherGadgetAlbumSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPeopleFolderSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotoFullscreenLikeKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotoQuickLikeKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotoStreamListKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosAlbumCreateKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosAlbumDeleteKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAspectLockKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutoEnhanceKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutocropAdjustedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutocropPerspectiveAdjustedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutocropResetKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutocropSuggestedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutoenhanceAndSmartColorKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutoenhanceAndSmartColorPrecisionKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutoenhanceAndSmartToneKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditAutoenhanceAndSmartTonePrecisionKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditCancelWhileDownloadingKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditCropIncludeOvercaptureKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditCropKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditCropVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditDiscardKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditDiscardWhileSavingKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditFlipPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditFlipVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPerspectivePhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPerspectiveVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPitchPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPitchVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPluginSaveKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditPluginStartKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditRedEyeKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditReframeOffPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditReframeOffVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditReframeOnPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditReframeOnVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditRevertKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditRotateVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditRotationKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSaveKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartBWKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartBWPrecisionKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartColorKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartColorPrecisionKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartToneKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSmartTonePrecisionKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSourceToPrimaryKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditSourceToSecondaryKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditStartKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditStraightenKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditStraightenVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditToggleKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditYawPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosEditYawVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosGridDeletePhotosKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosMomentsMagnifierKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpPlayedIrisDurationKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpPlayedRegularVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpPlayedSlomoVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpPlayedTimelapseVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpPlayedVitalityKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpViewedIrisKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpViewedPhotoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpViewedRegularVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpViewedSlomoVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosOneUpViewedTimelapseVideoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumAllHidden
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumBursts
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumFavorites
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumMyPhotoStream
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumPanoramas
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumRAW
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumRecentlyDeletedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumRecentlyEdited
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumScreenRecordings
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumScreenShots
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumSelfPortraits
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumSlomoVideos
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumTimelapses
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumUserLibrary
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosSmartAlbumVideos
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosStreamedVideoPlaybackCancelKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPhotosStreamedVideoPlaybackKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPlacesSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryPushValueForDistributionKey
__ PhotoLibraryServices: _PLSAggregateDictionarySharedAlbumSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionarySharedAlbumsGadgetAlbumSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryUnknownAssetCollectionListItemSelectedKey
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditPluginSaveKey
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditPluginStartKey
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditRevertKey
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditSavedSlowmoKey
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditSlalom
__ PhotoLibraryServices: _PLScaledSizeToFitSize
__ PhotoLibraryServices: _PLSearchHomeItemContextDisplayInfoKey
__ PhotoLibraryServices: _PLSearchHomeItemContextRepresentedObjectKey
__ PhotoLibraryServices: _PLSearchHomeItemContextTitleKey
__ PhotoLibraryServices: _PLSearchHomeItemContextTypeKey
__ PhotoLibraryServices: _PLSearchHomeItemTypeName
__ PhotoLibraryServices: _PLWriteDeferredLog
__ PhotoLibraryServices: _plsGreenTeaEnabled
__ PhotoLibraryServices: _plsGreenTeaSetCallerBundleIdentifier
__ PhotoLibraryServices: _plslogGreenTea
__ PhotoLibraryServicesCore: _DCIM_newPLImageWithData
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLClientApplicationIdentification
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLFormatChooser
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLImageFormat
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLPhotoLibraryPathManager
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLPrivacy
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLSandboxedURL
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLSecurity
__ PhotoLibraryServicesCore: _OBJC_CLASS_$_PLUUIDString
__ PhotoLibraryServicesCore: _PLAggdGetLog
__ PhotoLibraryServicesCore: _PLAirPlayGetLog
__ PhotoLibraryServicesCore: _PLAssetCountsByType
__ PhotoLibraryServicesCore: _PLAssetExplorerGetLog
__ PhotoLibraryServicesCore: _PLAssetImportGetLog
__ PhotoLibraryServicesCore: _PLAssetsdEntitlementLibraryInternal
__ PhotoLibraryServicesCore: _PLCameraConnectionKitGetLog
__ PhotoLibraryServicesCore: _PLCameraGetLog
__ PhotoLibraryServicesCore: _PLClientApplicationIdentifierFromXPCConnection
__ PhotoLibraryServicesCore: _PLCloudFeedGetLog
__ PhotoLibraryServicesCore: _PLCompleteMyMomentGetLog
__ PhotoLibraryServicesCore: _PLDragAndDropGetLog
__ PhotoLibraryServicesCore: _PLExifOrientationFromImageOrientation
__ PhotoLibraryServicesCore: _PLGetSandboxExtensionToken
__ PhotoLibraryServicesCore: _PLGridZeroGetLog
__ PhotoLibraryServicesCore: _PLHasInternalDiagnostics
__ PhotoLibraryServicesCore: _PLHasInternalUI
__ PhotoLibraryServicesCore: _PLImageOrientationFromExifOrientation
__ PhotoLibraryServicesCore: _PLIsCamera
__ PhotoLibraryServicesCore: _PLIsEDUMode
__ PhotoLibraryServicesCore: _PLIsMobileSlideShow
__ PhotoLibraryServicesCore: _PLIsPhotosMessagesApp
__ PhotoLibraryServicesCore: _PLIsSpotlight
__ PhotoLibraryServicesCore: _PLIsTallScreen
__ PhotoLibraryServicesCore: _PLLivePhotoPlaybackGetLog
__ PhotoLibraryServicesCore: _PLLocalizedAddPhotosPickerPromptForItems
__ PhotoLibraryServicesCore: _PLLocalizedAddPhotosPickerPromptForItemsAndLimit
__ PhotoLibraryServicesCore: _PLLocalizedCountDescription
__ PhotoLibraryServicesCore: _PLLocalizedFrameworkString
__ PhotoLibraryServicesCore: _PLLocalizedHidePhotosEverywhereWarning
__ PhotoLibraryServicesCore: _PLLocalizedSelectionMessageForItems
__ PhotoLibraryServicesCore: _PLLocalizedStringForAction
__ PhotoLibraryServicesCore: _PLMemoriesGetLog
__ PhotoLibraryServicesCore: _PLOneUpGetLog
__ PhotoLibraryServicesCore: _PLPPTGetLog
__ PhotoLibraryServicesCore: _PLPhotoEditGetLog
__ PhotoLibraryServicesCore: _PLPhotoLibraryFrameworkBundle
__ PhotoLibraryServicesCore: _PLPhotoPickerGetLog
__ PhotoLibraryServicesCore: _PLPhotoSharingGetLog
__ PhotoLibraryServicesCore: _PLPhotosAccessAllowedForClientAuditToken
__ PhotoLibraryServicesCore: _PLPhotosSearchGetLog
__ PhotoLibraryServicesCore: _PLPhysicalDeviceIsIPad
__ PhotoLibraryServicesCore: _PLPhysicalScreenScale
__ PhotoLibraryServicesCore: _PLPickerGetLog
__ PhotoLibraryServicesCore: _PLPlatformIsRidingPowderSnow
__ PhotoLibraryServicesCore: _PLPlatformPhotosAccessLoggingSupported
__ PhotoLibraryServicesCore: _PLRelativePrettyDateForDate
__ PhotoLibraryServicesCore: _PLServicesLocalizedFrameworkString
__ PhotoLibraryServicesCore: _PLShareSheetGetLog
__ PhotoLibraryServicesCore: _PLSharedCountFormatter
__ PhotoLibraryServicesCore: _PLSidebarGetLog
__ PhotoLibraryServicesCore: _PLSimulateCrash
__ PhotoLibraryServicesCore: _PLSiriPhotosSearchMSSGetLog
__ PhotoLibraryServicesCore: _PLSuffixForItems
__ PhotoLibraryServicesCore: _PLSuppresionContextActivityView
__ PhotoLibraryServicesCore: _PLSuppresionContextAlbumListView
__ PhotoLibraryServicesCore: _PLSuppresionContextAlbumView
__ PhotoLibraryServicesCore: _PLSyndicationUIGetLog
__ PhotoLibraryServicesCore: _PLTransformForImageOrientation
__ PhotoLibraryServicesCore: _PLUIActionsGetLog
__ PhotoLibraryServicesCore: _PLUIGetLog
__ PhotoLibraryServicesCore: _PLUserStatusUIGetLog
__ PhotoLibraryServicesCore: _PLVideoPlaybackGetLog
__ PhotoLibraryServicesCore: _PLVisualIntelligenceGetLog
__ PhotoLibraryServicesCore: _UIRectGetCenter
__ PhotoLibraryServicesCore: _pl_dispatch_async
__ PhotoLibraryServicesCore: _pl_dispatch_once
__ Photos: _OBJC_CLASS_$_PHAdjustmentData
__ Photos: _OBJC_CLASS_$_PHAnimatedImage
__ Photos: _OBJC_CLASS_$_PHAnimatedImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCollection
__ Photos: _OBJC_CLASS_$_PHAssetCollectionChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCreationOptions
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequest
__ Photos: _OBJC_CLASS_$_PHAssetExportRequestOptions
__ Photos: _OBJC_CLASS_$_PHAssetPLAdapter
__ Photos: _OBJC_CLASS_$_PHAssetResource
__ Photos: _OBJC_CLASS_$_PHAssetResourceCreationOptions
__ Photos: _OBJC_CLASS_$_PHAssetResourceManager
__ Photos: _OBJC_CLASS_$_PHAssetResourceQualityClass
__ Photos: _OBJC_CLASS_$_PHAssetResourceRequestOptions
__ Photos: _OBJC_CLASS_$_PHCachingImageManager
__ Photos: _OBJC_CLASS_$_PHChange
__ Photos: _OBJC_CLASS_$_PHCollection
__ Photos: _OBJC_CLASS_$_PHCollectionList
__ Photos: _OBJC_CLASS_$_PHCollectionListChangeRequest
__ Photos: _OBJC_CLASS_$_PHConcurrentMapTable
__ Photos: _OBJC_CLASS_$_PHContentEditingInput
__ Photos: _OBJC_CLASS_$_PHContentEditingInputRequestOptions
__ Photos: _OBJC_CLASS_$_PHContentEditingOutput
__ Photos: _OBJC_CLASS_$_PHContentEditingOutputRequestOptions
__ Photos: _OBJC_CLASS_$_PHDetectionTrait
__ Photos: _OBJC_CLASS_$_PHFace
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHFetchResult
__ Photos: _OBJC_CLASS_$_PHImageIODecoder
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHImportController
__ Photos: _OBJC_CLASS_$_PHImportSession
__ Photos: _OBJC_CLASS_$_PHImportUrlSource
__ Photos: _OBJC_CLASS_$_PHLivePhoto
__ Photos: _OBJC_CLASS_$_PHLivePhotoRequestOptions
__ Photos: _OBJC_CLASS_$_PHManualFetchResult
__ Photos: _OBJC_CLASS_$_PHMemoryChangeRequest
__ Photos: _OBJC_CLASS_$_PHMoment
__ Photos: _OBJC_CLASS_$_PHMomentShare
__ Photos: _OBJC_CLASS_$_PHObject
__ Photos: _OBJC_CLASS_$_PHPerson
__ Photos: _OBJC_CLASS_$_PHPersonChangeRequest
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHPhotosHighlight
__ Photos: _OBJC_CLASS_$_PHPlaceholderImageHelper
__ Photos: _OBJC_CLASS_$_PHQuestion
__ Photos: _OBJC_CLASS_$_PHResourceLocalAvailabilityRequest
__ Photos: _OBJC_CLASS_$_PHResourceLocalAvailabilityRequestOptions
__ Photos: _OBJC_CLASS_$_PHSceneClassification
__ Photos: _OBJC_CLASS_$_PHSmartAlbumChangeRequest
__ Photos: _OBJC_CLASS_$_PHSuggestion
__ Photos: _OBJC_CLASS_$_PHSuggestionChangeRequest
__ Photos: _OBJC_CLASS_$_PHVideoRequestOptions
__ Photos: _OBJC_METACLASS_$_PHAsset
__ Photos: _OBJC_METACLASS_$_PHImportUrlSource
__ Photos: _PHAdjustmentDataKey
__ Photos: _PHAssetExportRequestAssetBundleURLKey
__ Photos: _PHAssetExportRequestErrorDomain
__ Photos: _PHAssetExportRequestLivePhotoBundleURLKey
__ Photos: _PHAssetExportRequestPhotoFileURLKey
__ Photos: _PHAssetExportRequestVideoFileURLKey
__ Photos: _PHAssetFailureInfoCodecNameKey
__ Photos: _PHAssetFailureInfoUTIKey
__ Photos: _PHAssetImportSourceDescription
__ Photos: _PHAssetMediaAnalysisStringsWithMultipleAudioClassifications
__ Photos: _PHAssetPropertySetAesthetic
__ Photos: _PHAssetPropertySetCore
__ Photos: _PHAssetPropertySetCuration
__ Photos: _PHAssetPropertySetIdentifier
__ Photos: _PHAssetPropertySetImport
__ Photos: _PHAssetPropertySetMediaAnalysis
__ Photos: _PHAssetPropertySetOriginalMetadata
__ Photos: _PHAssetPropertySetPhotoIris
__ Photos: _PHAssetPropertySetPhotosOneUp
__ Photos: _PHAssetPropertySetSceneAnalysis
__ Photos: _PHContentEditingInputCancelledKey
__ Photos: _PHContentEditingInputErrorKey
__ Photos: _PHContentEditingInputResultIsInCloudKey
__ Photos: _PHFetchTypeAsset
__ Photos: _PHFetchTypePerson
__ Photos: _PHImageCancelledKey
__ Photos: _PHImageErrorKey
__ Photos: _PHImageFileHighDynamicRangeGainMapKey
__ Photos: _PHImageFileHighDynamicRangeGainMapValueKey
__ Photos: _PHImageFileOrientationKey
__ Photos: _PHImageFileSandboxExtensionTokenKey
__ Photos: _PHImageFileURLKey
__ Photos: _PHImageFileUTIKey
__ Photos: _PHImageManagerMaximumSize
__ Photos: _PHImageResultDeliveredImageFormatKey
__ Photos: _PHImageResultIsDegradedKey
__ Photos: _PHImageResultIsInCloudKey
__ Photos: _PHImageResultIsPlaceholderKey
__ Photos: _PHImageResultRequestIDKey
__ Photos: _PHLivePhotoInfoErrorKey
__ Photos: _PHLivePhotoInfoIsDegradedKey
__ Photos: _PHMemoryCreationAttributeSubtitleKey
__ Photos: _PHMemoryCreationAttributeTitleCategoryKey
__ Photos: _PHMemoryCreationAttributeTitleKey
__ Photos: _PHPersonPropertySetUserFeedback
__ Photos: _PHPhotosErrorDomain
__ Photos: _PHResourceLocalAvailabilityRequestErrorDomain
__ Photos: _PHVideoComplementVisibilityStateHasFullEditingSupport
__ Photos: _PHVideoComplementVisibilityStateIsExplicit
__ Photos: _PHVideoComplementVisibilityStateIsHidden
__ Photos: _PHVideoComplementVisibilityStateIsPlayable
__ PhotosFormats: _OBJC_CLASS_$_PFAssetAdjustments
__ PhotosFormats: _OBJC_CLASS_$_PFAssetBundle
__ PhotosFormats: _OBJC_CLASS_$_PFCameraMetadataSerialization
__ PhotosFormats: _OBJC_CLASS_$_PFExportGIFRequest
__ PhotosFormats: _OBJC_CLASS_$_PFImageMetadata
__ PhotosFormats: _OBJC_CLASS_$_PFMediaUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFSceneTaxonomy
__ PhotosFormats: _OBJC_CLASS_$_PFSlowMotionUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFUniformTypeUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAVObjectBuilder
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAdjustments
__ PhotosFormats: _OBJC_CLASS_$_PFVideoComplement
__ PhotosFormats: _OBJC_CLASS_$_PFVideoMetadata
__ PhotosFormats: _PFCurrentPlatformLivePhotoBundleType
__ PhotosFormats: _PFLivePhotoBundleExtension
__ PhotosFormats: _PFReadImageDisplayTimeFromVideoFileAtPath
__ PhotosPlayer: _OBJC_CLASS_$_ISAVPlayerLayer
__ PhotosPlayer: _OBJC_CLASS_$_ISAnimatedImageView
__ PhotosPlayer: _OBJC_CLASS_$_ISAsset
__ PhotosPlayer: _OBJC_CLASS_$_ISLivePhotoPlayer
__ PhotosPlayer: _OBJC_CLASS_$_ISLivePhotoUIView
__ PhotosPlayer: _OBJC_CLASS_$_ISPlayerItem
__ PhotosPlayer: _OBJC_CLASS_$_ISVitalitySettings
__ PhotosPlayer: _OBJC_CLASS_$_ISWrappedAVAudioSession
__ PhotosPlayer: _OBJC_CLASS_$_ISWrappedAVPlayer
__ PhotosUICore: _OBJC_CLASS_$_PXActivity
__ PhotosUICore: _OBJC_CLASS_$_PXActivityCoordinator
__ PhotosUICore: _OBJC_CLASS_$_PXActivitySpec
__ PhotosUICore: _OBJC_CLASS_$_PXActivityUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXAlbumStreamingOptionsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXAlbumsDebugUISettings
__ PhotosUICore: _OBJC_CLASS_$_PXAlertController
__ PhotosUICore: _OBJC_CLASS_$_PXAnimationTracker
__ PhotosUICore: _OBJC_CLASS_$_PXApplicationSettings
__ PhotosUICore: _OBJC_CLASS_$_PXApplicationState
__ PhotosUICore: _OBJC_CLASS_$_PXArrayChangeDetails
__ PhotosUICore: _OBJC_CLASS_$_PXAssetActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXAssetAnalyzer
__ PhotosUICore: _OBJC_CLASS_$_PXAssetBadgeManager
__ PhotosUICore: _OBJC_CLASS_$_PXAssetEditOperationManager
__ PhotosUICore: _OBJC_CLASS_$_PXAssetEditOperationPerformer
__ PhotosUICore: _OBJC_CLASS_$_PXAssetMetadataDonator
__ PhotosUICore: _OBJC_CLASS_$_PXAssetReference
__ PhotosUICore: _OBJC_CLASS_$_PXAssetVariationAutoloopCollectionViewCell
__ PhotosUICore: _OBJC_CLASS_$_PXAssetVariationImageCollectionViewCell
__ PhotosUICore: _OBJC_CLASS_$_PXAssetVariationOption
__ PhotosUICore: _OBJC_CLASS_$_PXAssetVariationRenderProvider
__ PhotosUICore: _OBJC_CLASS_$_PXAssetVariationsSettings
__ PhotosUICore: _OBJC_CLASS_$_PXAssetsDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXAsyncOperation
__ PhotosUICore: _OBJC_CLASS_$_PXBadgedThumbnailView
__ PhotosUICore: _OBJC_CLASS_$_PXBarAnimationOptions
__ PhotosUICore: _OBJC_CLASS_$_PXBarAppearance
__ PhotosUICore: _OBJC_CLASS_$_PXBasicGadgetDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXCMMAssetPreparationOptions
__ PhotosUICore: _OBJC_CLASS_$_PXCMMViewController
__ PhotosUICore: _OBJC_CLASS_$_PXCPLStatusProvider
__ PhotosUICore: _OBJC_CLASS_$_PXCPLUIStatusProvider
__ PhotosUICore: _OBJC_CLASS_$_PXCinematicEditController
__ PhotosUICore: _OBJC_CLASS_$_PXCloudPhotoWelcomeNavigationController
__ PhotosUICore: _OBJC_CLASS_$_PXCloudPhotoWelcomeViewController
__ PhotosUICore: _OBJC_CLASS_$_PXCloudQuotaControllerHelper
__ PhotosUICore: _OBJC_CLASS_$_PXCollectionListActionPerformer
__ PhotosUICore: _OBJC_CLASS_$_PXCollectionTileLayoutTemplate
__ PhotosUICore: _OBJC_CLASS_$_PXCollectionsDataSourceChangeDetails
__ PhotosUICore: _OBJC_CLASS_$_PXCompleteMyMomentSettings
__ PhotosUICore: _OBJC_CLASS_$_PXContentSyndicationAssetSavingHelper
__ PhotosUICore: _OBJC_CLASS_$_PXContentSyndicationPhotoKitSocialLayerHighlightProvider
__ PhotosUICore: _OBJC_CLASS_$_PXContentSyndicationSettings
__ PhotosUICore: _OBJC_CLASS_$_PXContentUnavailablePlaceholderManager
__ PhotosUICore: _OBJC_CLASS_$_PXContentUnavailableView
__ PhotosUICore: _OBJC_CLASS_$_PXContextualNotification
__ PhotosUICore: _OBJC_CLASS_$_PXCuratedLibrarySettings
__ PhotosUICore: _OBJC_CLASS_$_PXCuratedLibraryStatisticsController
__ PhotosUICore: _OBJC_CLASS_$_PXCuratedLibraryUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXCuratedLibraryViewProvider
__ PhotosUICore: _OBJC_CLASS_$_PXDataSectionEnablementForwarder
__ PhotosUICore: _OBJC_CLASS_$_PXDebugMemoryGeneratorsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXDiagnosticsController
__ PhotosUICore: _OBJC_CLASS_$_PXDiagnosticsItemProvider
__ PhotosUICore: _OBJC_CLASS_$_PXDisplayAssetCountsByPlaybackStyle
__ PhotosUICore: _OBJC_CLASS_$_PXDisplayAssetVideoContentDeliveryStrategy
__ PhotosUICore: _OBJC_CLASS_$_PXDisplayLink
__ PhotosUICore: _OBJC_CLASS_$_PXDisplayTitleInfo
__ PhotosUICore: _OBJC_CLASS_$_PXDragAndDropSettings
__ PhotosUICore: _OBJC_CLASS_$_PXDragAndDropUIUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXDraggingItemLocalObject
__ PhotosUICore: _OBJC_CLASS_$_PXEditableNavigationTitleView
__ PhotosUICore: _OBJC_CLASS_$_PXFavoritesSettings
__ PhotosUICore: _OBJC_CLASS_$_PXFeatureSpec
__ PhotosUICore: _OBJC_CLASS_$_PXFeatureSpecManager
__ PhotosUICore: _OBJC_CLASS_$_PXFeedAssetContainerList
__ PhotosUICore: _OBJC_CLASS_$_PXFeedCommentsSectionInfo
__ PhotosUICore: _OBJC_CLASS_$_PXFeedDateFormatter
__ PhotosUICore: _OBJC_CLASS_$_PXFeedSectionInfo
__ PhotosUICore: _OBJC_CLASS_$_PXFeedSectionInfosManager
__ PhotosUICore: _OBJC_CLASS_$_PXFeedbackAssetUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXFeedbackImageQualityUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXFeedbackTapToRadarUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXFeedbackTapToRadarViewController
__ PhotosUICore: _OBJC_CLASS_$_PXFetchResultBasedMemoriesDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXFileBackedAsset
__ PhotosUICore: _OBJC_CLASS_$_PXFloatingCardPresentationController
__ PhotosUICore: _OBJC_CLASS_$_PXFocusInfo
__ PhotosUICore: _OBJC_CLASS_$_PXFooterSettings
__ PhotosUICore: _OBJC_CLASS_$_PXFooterViewModel
__ PhotosUICore: _OBJC_CLASS_$_PXForYouBadgeManager
__ PhotosUICore: _OBJC_CLASS_$_PXForYouGadgetViewController
__ PhotosUICore: _OBJC_CLASS_$_PXForYouSuggestionAssetsDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXForYouSuggestionDisplayAsset
__ PhotosUICore: _OBJC_CLASS_$_PXGView
__ PhotosUICore: _OBJC_CLASS_$_PXGadgetCollectionViewLayout
__ PhotosUICore: _OBJC_CLASS_$_PXGadgetDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXGadgetProvider
__ PhotosUICore: _OBJC_CLASS_$_PXGadgetSpec
__ PhotosUICore: _OBJC_CLASS_$_PXGadgetUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXGridSettings
__ PhotosUICore: _OBJC_CLASS_$_PXHUDBoxedValueVisualization
__ PhotosUICore: _OBJC_CLASS_$_PXHUDTimeIntervalVisualization
__ PhotosUICore: _OBJC_CLASS_$_PXHUDView
__ PhotosUICore: _OBJC_CLASS_$_PXHUDVisualization
__ PhotosUICore: _OBJC_CLASS_$_PXHighlightDiagnosticsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXHorizontalCollectionGadget
__ PhotosUICore: _OBJC_CLASS_$_PXHorizontalFeedLayoutGenerator
__ PhotosUICore: _OBJC_CLASS_$_PXImageModulationManager
__ PhotosUICore: _OBJC_CLASS_$_PXImportController
__ PhotosUICore: _OBJC_CLASS_$_PXImportHistorySectionHeaderView
__ PhotosUICore: _OBJC_CLASS_$_PXImportItemViewModel
__ PhotosUICore: _OBJC_CLASS_$_PXImportManager
__ PhotosUICore: _OBJC_CLASS_$_PXImportSettings
__ PhotosUICore: _OBJC_CLASS_$_PXImportSourceNavigationListItem
__ PhotosUICore: _OBJC_CLASS_$_PXInboxTableViewCell
__ PhotosUICore: _OBJC_CLASS_$_PXInboxViewController
__ PhotosUICore: _OBJC_CLASS_$_PXInfoUpdater
__ PhotosUICore: _OBJC_CLASS_$_PXInvitationRecipient
__ PhotosUICore: _OBJC_CLASS_$_PXLabelSpec
__ PhotosUICore: _OBJC_CLASS_$_PXLayoutItem
__ PhotosUICore: _OBJC_CLASS_$_PXLayoutMetricInterpolator
__ PhotosUICore: _OBJC_CLASS_$_PXLayoutMetrics
__ PhotosUICore: _OBJC_CLASS_$_PXLegacySectionedDataSourceChangeDetails
__ PhotosUICore: _OBJC_CLASS_$_PXLivePhotoTrimScrubberSnapStripController
__ PhotosUICore: _OBJC_CLASS_$_PXLivePhotoTrimScrubberSnapStripControllerSpec
__ PhotosUICore: _OBJC_CLASS_$_PXLivePhotoTrimScrubberSpec
__ PhotosUICore: _OBJC_CLASS_$_PXLoadingStatusManager
__ PhotosUICore: _OBJC_CLASS_$_PXLocalization
__ PhotosUICore: _OBJC_CLASS_$_PXMediaProviderManager
__ PhotosUICore: _OBJC_CLASS_$_PXMediaTypeInfoManager
__ PhotosUICore: _OBJC_CLASS_$_PXMediaViewControllerEventTracker
__ PhotosUICore: _OBJC_CLASS_$_PXMemoriesFeedSettings
__ PhotosUICore: _OBJC_CLASS_$_PXMemoriesFeedUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXMemoriesTitleHelper
__ PhotosUICore: _OBJC_CLASS_$_PXMemoriesUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXMetadataUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXMockExtendedTraitCollection
__ PhotosUICore: _OBJC_CLASS_$_PXMutableIndexPathSet
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListActionItem
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListActivityItemDataSectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListAssetCollectionItem
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListDataSectionConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListDataSectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListGadget
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListGadgetProvider
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListGroupItem
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationListItemDataSectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXNavigationTitleView
__ PhotosUICore: _OBJC_CLASS_$_PXNewSearchToken
__ PhotosUICore: _OBJC_CLASS_$_PXNumberAnimator
__ PhotosUICore: _OBJC_CLASS_$_PXObservable
__ PhotosUICore: _OBJC_CLASS_$_PXOneUpPresentation
__ PhotosUICore: _OBJC_CLASS_$_PXOneUpSettings
__ PhotosUICore: _OBJC_CLASS_$_PXPLLibraryContentModeSelection
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleAlbumProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleBootstrapContext
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleDetailSettingsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleDetailViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleFaceCropFetchOptions
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleFaceCropManager
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleFaceTileImageManager
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleRecoCollectionViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleUISettings
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXPeopleZeroKeywordCollectionViewCell
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAdjustedUIMediaProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetActionPerformer
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetCollectionDropAssetsActionPerformer
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetsDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitAssetsDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitCPLActionManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitCollectionsDataSourceManager
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitCollectionsDataSourceManagerConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitUIMediaProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoKitVideoContentProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoLibraryProcessingProgressRow
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoPickerSettings
__ PhotosUICore: _OBJC_CLASS_$_PXPhotoStreamComposeServiceViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDataSourceConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsContext
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsDateTimeEditUIFactory
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsFloatingCardLayout
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsLocationSearchUIFactory
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsSettings
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosDetailsVisualLookupData
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosGlobalFooterView
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosGridPromptHeaderView
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosLibraryFooterViewModel
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosSectionHeaderMetrics
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosSectionHeaderView
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosSyncHelper
__ PhotosUICore: _OBJC_CLASS_$_PXPhotosUIViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPinchTracker
__ PhotosUICore: _OBJC_CLASS_$_PXPlacesAlbumCoverProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPlacesMapContainerViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPlacesMapFetchResultViewController
__ PhotosUICore: _OBJC_CLASS_$_PXPlacesSearchProvider
__ PhotosUICore: _OBJC_CLASS_$_PXPowerController
__ PhotosUICore: _OBJC_CLASS_$_PXPreloadScheduler
__ PhotosUICore: _OBJC_CLASS_$_PXProgrammaticNavigationDestination
__ PhotosUICore: _OBJC_CLASS_$_PXProgrammaticNavigationRequest
__ PhotosUICore: _OBJC_CLASS_$_PXRecipientTransportUtilities
__ PhotosUICore: _OBJC_CLASS_$_PXRegionOfInterest
__ PhotosUICore: _OBJC_CLASS_$_PXRootSettings
__ PhotosUICore: _OBJC_CLASS_$_PXRoundedCornerOverlayView
__ PhotosUICore: _OBJC_CLASS_$_PXRunNode
__ PhotosUICore: _OBJC_CLASS_$_PXScheduler
__ PhotosUICore: _OBJC_CLASS_$_PXSearchAnalyticsSession
__ PhotosUICore: _OBJC_CLASS_$_PXSearchComposableDataSource
__ PhotosUICore: _OBJC_CLASS_$_PXSearchHistoryManager
__ PhotosUICore: _OBJC_CLASS_$_PXSearchIndexManager
__ PhotosUICore: _OBJC_CLASS_$_PXSearchQuery
__ PhotosUICore: _OBJC_CLASS_$_PXSearchQueryController
__ PhotosUICore: _OBJC_CLASS_$_PXSearchQueryOptions
__ PhotosUICore: _OBJC_CLASS_$_PXSearchSettings
__ PhotosUICore: _OBJC_CLASS_$_PXSearchSuggestionsSectionProvider
__ PhotosUICore: _OBJC_CLASS_$_PXSearchZeroKeywordCollectionViewCell
__ PhotosUICore: _OBJC_CLASS_$_PXSectionedSelectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXSelectionCoordinator
__ PhotosUICore: _OBJC_CLASS_$_PXSelectionSnapshot
__ PhotosUICore: _OBJC_CLASS_$_PXSettings
__ PhotosUICore: _OBJC_CLASS_$_PXSettingsConfigurationsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXSettingsSearchViewController
__ PhotosUICore: _OBJC_CLASS_$_PXSharedAlbumContactMatcher
__ PhotosUICore: _OBJC_CLASS_$_PXSharedAlbumHeaderView
__ PhotosUICore: _OBJC_CLASS_$_PXSharedAlbumInvitationGadget
__ PhotosUICore: _OBJC_CLASS_$_PXSharedAlbumInvitationView
__ PhotosUICore: _OBJC_CLASS_$_PXSharedAlbumSubscriberInfo
__ PhotosUICore: _OBJC_CLASS_$_PXSharingConfidentialityController
__ PhotosUICore: _OBJC_CLASS_$_PXSharingSettings
__ PhotosUICore: _OBJC_CLASS_$_PXSidebarDataController
__ PhotosUICore: _OBJC_CLASS_$_PXSidebarOutlineSectionController
__ PhotosUICore: _OBJC_CLASS_$_PXSimpleVideoScrubberControllerTarget
__ PhotosUICore: _OBJC_CLASS_$_PXSimpleWrappedVideoScrubberControllerTarget
__ PhotosUICore: _OBJC_CLASS_$_PXSlideshowSession
__ PhotosUICore: _OBJC_CLASS_$_PXSnapStripView
__ PhotosUICore: _OBJC_CLASS_$_PXSplitViewController
__ PhotosUICore: _OBJC_CLASS_$_PXStackLayoutGenerator
__ PhotosUICore: _OBJC_CLASS_$_PXStackedDataSectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXStaticEditSourceLoader
__ PhotosUICore: _OBJC_CLASS_$_PXStoryDemoActivity
__ PhotosUICore: _OBJC_CLASS_$_PXStoryView
__ PhotosUICore: _OBJC_CLASS_$_PXSuggestLessPeopleHelper
__ PhotosUICore: _OBJC_CLASS_$_PXSwipeDownSettings
__ PhotosUICore: _OBJC_CLASS_$_PXSwipeDownTracker
__ PhotosUICore: _OBJC_CLASS_$_PXSwipeSelectionManager
__ PhotosUICore: _OBJC_CLASS_$_PXSystemNavigation
__ PhotosUICore: _OBJC_CLASS_$_PXTapToRadarGadgetProvider
__ PhotosUICore: _OBJC_CLASS_$_PXTextBannerView
__ PhotosUICore: _OBJC_CLASS_$_PXTimeInterval
__ PhotosUICore: _OBJC_CLASS_$_PXTimelineDiagnosticAgent
__ PhotosUICore: _OBJC_CLASS_$_PXTitleSubtitleUILabel
__ PhotosUICore: _OBJC_CLASS_$_PXTouchingUIGestureRecognizer
__ PhotosUICore: _OBJC_CLASS_$_PXTrimToolPlayerWrapperLivePhotoView
__ PhotosUICore: _OBJC_CLASS_$_PXTrimToolPlayerWrapperNUMediaView
__ PhotosUICore: _OBJC_CLASS_$_PXUIAssetBadgeView
__ PhotosUICore: _OBJC_CLASS_$_PXUIAutoScroller
__ PhotosUICore: _OBJC_CLASS_$_PXUIButton
__ PhotosUICore: _OBJC_CLASS_$_PXUIButtonConfiguration
__ PhotosUICore: _OBJC_CLASS_$_PXUIFlattenedAssetBadgeView
__ PhotosUICore: _OBJC_CLASS_$_PXUIFocusTimelineView
__ PhotosUICore: _OBJC_CLASS_$_PXUILivePhotoTrimScrubber
__ PhotosUICore: _OBJC_CLASS_$_PXUIMediaProvider
__ PhotosUICore: _OBJC_CLASS_$_PXUISearchResultsViewController
__ PhotosUICore: _OBJC_CLASS_$_PXUISlowMotionEditor
__ PhotosUICore: _OBJC_CLASS_$_PXUISnappingController
__ PhotosUICore: _OBJC_CLASS_$_PXUISubjectTrackingView
__ PhotosUICore: _OBJC_CLASS_$_PXUpdater
__ PhotosUICore: _OBJC_CLASS_$_PXUserEventTracker
__ PhotosUICore: _OBJC_CLASS_$_PXVerticalFeedLayoutGenerator
__ PhotosUICore: _OBJC_CLASS_$_PXVerticalSwipeGestureRecognizerHelper
__ PhotosUICore: _OBJC_CLASS_$_PXVideoPlayerView
__ PhotosUICore: _OBJC_CLASS_$_PXVideoScrubberController
__ PhotosUICore: _OBJC_CLASS_$_PXVideoSessionManager
__ PhotosUICore: _OBJC_CLASS_$_PXVideoSessionUIView
__ PhotosUICore: _OBJC_CLASS_$_PXVideoTrimBurnInUtility
__ PhotosUICore: _OBJC_CLASS_$_PXVideoTrimQueueController
__ PhotosUICore: _OBJC_CLASS_$_PXViewLayoutHelper
__ PhotosUICore: _OBJC_CLASS_$_PXVisualIntelligenceManager
__ PhotosUICore: _OBJC_CLASS_$_PXZoomAnimationCoordinator
__ PhotosUICore: _OBJC_METACLASS_$_PXActivity
__ PhotosUICore: _OBJC_METACLASS_$_PXAssetEditOperationPerformer
__ PhotosUICore: _OBJC_METACLASS_$_PXAsyncOperation
__ PhotosUICore: _OBJC_METACLASS_$_PXCloudPhotoWelcomeViewController
__ PhotosUICore: _OBJC_METACLASS_$_PXCollectionListActionPerformer
__ PhotosUICore: _OBJC_METACLASS_$_PXFeatureSpec
__ PhotosUICore: _OBJC_METACLASS_$_PXFeatureSpecManager
__ PhotosUICore: _OBJC_METACLASS_$_PXGadgetCollectionViewLayout
__ PhotosUICore: _OBJC_METACLASS_$_PXGadgetDataSourceManager
__ PhotosUICore: _OBJC_METACLASS_$_PXGadgetProvider
__ PhotosUICore: _OBJC_METACLASS_$_PXGadgetSpec
__ PhotosUICore: _OBJC_METACLASS_$_PXGadgetUIViewController
__ PhotosUICore: _OBJC_METACLASS_$_PXHorizontalCollectionGadget
__ PhotosUICore: _OBJC_METACLASS_$_PXLivePhotoTrimScrubberSnapStripControllerSpec
__ PhotosUICore: _OBJC_METACLASS_$_PXMediaViewControllerEventTracker
__ PhotosUICore: _OBJC_METACLASS_$_PXObservable
__ PhotosUICore: _OBJC_METACLASS_$_PXPeopleDetailSettingsViewController
__ PhotosUICore: _OBJC_METACLASS_$_PXPhotoKitAssetActionPerformer
__ PhotosUICore: _OBJC_METACLASS_$_PXPhotoStreamComposeServiceViewController
__ PhotosUICore: _OBJC_METACLASS_$_PXPhotosDataSource
__ PhotosUICore: _OBJC_METACLASS_$_PXPhotosDetailsUIViewController
__ PhotosUICore: _OBJC_METACLASS_$_PXRunNode
__ PhotosUICore: _OBJC_METACLASS_$_PXSettings
__ PhotosUICore: _OBJC_METACLASS_$_PXSidebarDataController
__ PhotosUICore: _OBJC_METACLASS_$_PXZoomAnimationCoordinator
__ PhotosUICore: _PFMediaVariationFromPXAssetVariation
__ PhotosUICore: _PXActionPerformerTitleUseCaseDescription
__ PhotosUICore: _PXActivityErrorDomain
__ PhotosUICore: _PXActivityFileSizeLimitBytes
__ PhotosUICore: _PXActivityTypeAddPersonToHome
__ PhotosUICore: _PXActivityTypeAddToAlbum
__ PhotosUICore: _PXActivityTypeAddToAlbumFromPicker
__ PhotosUICore: _PXActivityTypeAddToFavoriteMemories
__ PhotosUICore: _PXActivityTypeAirPlay
__ PhotosUICore: _PXActivityTypeAlbumStream
__ PhotosUICore: _PXActivityTypeBlockMemory
__ PhotosUICore: _PXActivityTypeBlockPerson
__ PhotosUICore: _PXActivityTypeCompositeVideo
__ PhotosUICore: _PXActivityTypeCopyExistingLink
__ PhotosUICore: _PXActivityTypeCopyLink
__ PhotosUICore: _PXActivityTypeCreateMemory
__ PhotosUICore: _PXActivityTypeCreateWatchFace
__ PhotosUICore: _PXActivityTypeDebugCuration
__ PhotosUICore: _PXActivityTypeDeleteMemory
__ PhotosUICore: _PXActivityTypeDuplicate
__ PhotosUICore: _PXActivityTypeEditDateTime
__ PhotosUICore: _PXActivityTypeEditLocation
__ PhotosUICore: _PXActivityTypeFavoritePerson
__ PhotosUICore: _PXActivityTypeFileRadar
__ PhotosUICore: _PXActivityTypeFilterContent
__ PhotosUICore: _PXActivityTypeHide
__ PhotosUICore: _PXActivityTypeImprovePeopleRecognition
__ PhotosUICore: _PXActivityTypeInternalAutoLoopFeedback
__ PhotosUICore: _PXActivityTypeInternalGIFExport
__ PhotosUICore: _PXActivityTypeInternalImageQualityFeedback
__ PhotosUICore: _PXActivityTypeInternalShareExtensionTester
__ PhotosUICore: _PXActivityTypeInternalStoryDemo
__ PhotosUICore: _PXActivityTypeLegacyUseAsWallpaper
__ PhotosUICore: _PXActivityTypeMineAndhared
__ PhotosUICore: _PXActivityTypeMyPhotosOnly
__ PhotosUICore: _PXActivityTypeNotThisPerson
__ PhotosUICore: _PXActivityTypePlayMemoryMovie
__ PhotosUICore: _PXActivityTypeRemoveFromFeaturedPhotos
__ PhotosUICore: _PXActivityTypeRemovePersonFromHome
__ PhotosUICore: _PXActivityTypeRenameAlbum
__ PhotosUICore: _PXActivityTypeRender
__ PhotosUICore: _PXActivityTypeSendBackMomentShare
__ PhotosUICore: _PXActivityTypeSetAsWallpaper
__ PhotosUICore: _PXActivityTypeSetKeyFace
__ PhotosUICore: _PXActivityTypeSharedAlbumOptions
__ PhotosUICore: _PXActivityTypeSharingSuggestionDecline
__ PhotosUICore: _PXActivityTypeShowMap
__ PhotosUICore: _PXActivityTypeSlideShow
__ PhotosUICore: _PXActivityTypeSort
__ PhotosUICore: _PXActivityTypeStreamShare
__ PhotosUICore: _PXActivityTypeSuggestLessPerson
__ PhotosUICore: _PXActivityTypeSuggestPeople
__ PhotosUICore: _PXActivityTypeSyndicationSave
__ PhotosUICore: _PXActivityTypeTapToRadar
__ PhotosUICore: _PXActivityTypeToggleAspectFit
__ PhotosUICore: _PXActivityTypeTrashMomentShare
__ PhotosUICore: _PXActivityTypeZoomIn
__ PhotosUICore: _PXActivityTypeZoomOut
__ PhotosUICore: _PXAffineTransformOffsetFixpoint
__ PhotosUICore: _PXAnalyticsEventAssetSyndicationRemovedSuggestion
__ PhotosUICore: _PXAnalyticsEventAssetSyndicationSaved
__ PhotosUICore: _PXAnalyticsEventSlideshowPlaybackEnded
__ PhotosUICore: _PXAnalyticsEventSlideshowPlaybackPaused
__ PhotosUICore: _PXAnalyticsEventSlideshowPlaybackResumed
__ PhotosUICore: _PXAnalyticsEventSlideshowPlaybackStarted
__ PhotosUICore: _PXAnalyticsPayloadSlideshowAssetCountsByPlaybackStyleKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowAudioThemeKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowDefaultSlideDurationKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowNumberOfAudioClipsKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowRepeatingKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowSessionIdentifierKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowStyleKey
__ PhotosUICore: _PXAnalyticsPayloadSlideshowTerminationTypeKey
__ PhotosUICore: _PXAnalyticsPrepare
__ PhotosUICore: _PXAnalyticsSharedAlbumsActivityFeedPostLiked
__ PhotosUICore: _PXAnalyticsSharedAlbumsActivityFeedPostUnliked
__ PhotosUICore: _PXAssetActionTypeAddToAlbum
__ PhotosUICore: _PXAssetActionTypeAddToLibrary
__ PhotosUICore: _PXAssetActionTypeAlbumMakeKeyPhoto
__ PhotosUICore: _PXAssetActionTypeCopy
__ PhotosUICore: _PXAssetActionTypeDelete
__ PhotosUICore: _PXAssetActionTypeDuplicate
__ PhotosUICore: _PXAssetActionTypeHide
__ PhotosUICore: _PXAssetActionTypeInternalAssetDetails
__ PhotosUICore: _PXAssetActionTypeInternalContentSyndicationFileRadar
__ PhotosUICore: _PXAssetActionTypeInternalContentSyndicationPromoteToGuest
__ PhotosUICore: _PXAssetActionTypePersonMakeKeyPhoto
__ PhotosUICore: _PXAssetActionTypePickAsset
__ PhotosUICore: _PXAssetActionTypeRemove
__ PhotosUICore: _PXAssetActionTypeReply
__ PhotosUICore: _PXAssetActionTypeRestore
__ PhotosUICore: _PXAssetActionTypeShare
__ PhotosUICore: _PXAssetActionTypeShowInLibrary
__ PhotosUICore: _PXAssetActionTypeSlideshow
__ PhotosUICore: _PXAssetActionTypeSpotlightOpenApp
__ PhotosUICore: _PXAssetActionTypeStoryMakeKeyPhoto
__ PhotosUICore: _PXAssetActionTypeStoryRemoveAsset
__ PhotosUICore: _PXAssetActionTypeTapback
__ PhotosUICore: _PXAssetActionTypeToggleFavorite
__ PhotosUICore: _PXAssetActionTypeToggleSelection
__ PhotosUICore: _PXAssetActionTypeTrash
__ PhotosUICore: _PXAssetActionTypeTrashNoConfirm
__ PhotosUICore: _PXAssetActionTypeUnifiedDestructive
__ PhotosUICore: _PXAssetBadgeInfoCreateWithBadges
__ PhotosUICore: _PXAssetBadgeInfoEqualToBadgeInfo
__ PhotosUICore: _PXAssetBadgeInfoIsActionable
__ PhotosUICore: _PXAssetBadgeInfoIsNull
__ PhotosUICore: _PXAssetBadgeInfoNull
__ PhotosUICore: _PXAssetBadgeInfoRequiresCountForBadges
__ PhotosUICore: _PXAssetEditOperationTypeForVariationType
__ PhotosUICore: _PXAssetVariationTypeDescription
__ PhotosUICore: _PXAssetVariationTypeForEditOperationType
__ PhotosUICore: _PXCMMErrorDomain
__ PhotosUICore: _PXCMMStringForExpiryDate
__ PhotosUICore: _PXCMMSupportsLiveBubbles
__ PhotosUICore: _PXCMMTitleAndSubtitleForAssetCollection
__ PhotosUICore: _PXCanRenderPortrait
__ PhotosUICore: _PXCappedFontWithTextStyle
__ PhotosUICore: _PXCappedFontWithTextStyleSymbolicTraits
__ PhotosUICore: _PXCheckAndNoteUseOfSystemSinceBoot
__ PhotosUICore: _PXClamp
__ PhotosUICore: _PXCollectionListActionCreateAlbum
__ PhotosUICore: _PXCollectionListActionCreateFolder
__ PhotosUICore: _PXCollectionListActionCreateSharedAlbum
__ PhotosUICore: _PXCollectionListActionCreateSmartAlbum
__ PhotosUICore: _PXComposeRecipientsContainsComposeRecipient
__ PhotosUICore: _PXConformCMTimeRangeWithinRange
__ PhotosUICore: _PXContentSyndicationAssetCount
__ PhotosUICore: _PXContentSyndicationAttributionViewForSocialLayerHighlight
__ PhotosUICore: _PXContentSyndicationCMMAssetIsBeingSaved
__ PhotosUICore: _PXContentSyndicationRemoveConfirmationTitleAndMessageLocalizedStrings
__ PhotosUICore: _PXContentSyndicationShouldShowAttributionViewForAsset
__ PhotosUICore: _PXContentSyndicationUserLibraryAssetsFromSyndicationIdentifiers
__ PhotosUICore: _PXCreateDefaultAssetSharingHelper
__ PhotosUICore: _PXDataSourceIdentifierMakeUnique
__ PhotosUICore: _PXDataSourceIdentifierNull
__ PhotosUICore: _PXDebugDictionaryDiagnosticTitleKey
__ PhotosUICore: _PXDebugEnumerateInterestingPhotosOrVideosCountsToLocalize
__ PhotosUICore: _PXDefaultAssetSharingHelperClass
__ PhotosUICore: _PXDefaultPrintInfo
__ PhotosUICore: _PXDegreesToRadians
__ PhotosUICore: _PXDiagnosticsItemIdentifierAsset
__ PhotosUICore: _PXDiagnosticsItemIdentifierAssetCollection
__ PhotosUICore: _PXDiagnosticsItemIdentifierDebugDictionary
__ PhotosUICore: _PXDisplayAssetHasSyndicationInformation
__ PhotosUICore: _PXDisplayVelocityZero
__ PhotosUICore: _PXDropSessionHasItemsNeedingImport
__ PhotosUICore: _PXEdgeInsetsForEdges
__ PhotosUICore: _PXEdgeInsetsTouch
__ PhotosUICore: _PXEdgeInsetsZero
__ PhotosUICore: _PXErrorDomain
__ PhotosUICore: _PXExists
__ PhotosUICore: _PXExpungeMomentShare
__ PhotosUICore: _PXExpungeMomentShareForURL
__ PhotosUICore: _PXFeedDateFormatterChangedNotification
__ PhotosUICore: _PXFeedbackTapToRadarPhotosExtensionIdentifier
__ PhotosUICore: _PXFeedbackTapToRadarSpotlightExtensionIdentifier
__ PhotosUICore: _PXFetchAssetCollectionForCMMShareURL
__ PhotosUICore: _PXFilter
__ PhotosUICore: _PXFind
__ PhotosUICore: _PXFloatApproximatelyEqualToFloat
__ PhotosUICore: _PXFloatAtan2
__ PhotosUICore: _PXFloatByLinearlyInterpolatingFloats
__ PhotosUICore: _PXFloatCompare
__ PhotosUICore: _PXFloatCos
__ PhotosUICore: _PXFloatEqualToFloatWithTolerance
__ PhotosUICore: _PXFloatHypot
__ PhotosUICore: _PXFloatLog2
__ PhotosUICore: _PXFloatNan
__ PhotosUICore: _PXFloatSign
__ PhotosUICore: _PXFloatSin
__ PhotosUICore: _PXFloatSqrt
__ PhotosUICore: _PXFocusTimelineEventMarkerSize
__ PhotosUICore: _PXFocusTimelineViewHeight
__ PhotosUICore: _PXFontWithTextStyle
__ PhotosUICore: _PXFrameRateRangeTypeGetCAFrameRateRange
__ PhotosUICore: _PXImageModulationIntensityUndefined
__ PhotosUICore: _PXImportBadgeViewForTypeAndSelectable
__ PhotosUICore: _PXImportControllerCompletedItemCountKey
__ PhotosUICore: _PXImportControllerFractionCompletedKey
__ PhotosUICore: _PXImportControllerProgressNotification
__ PhotosUICore: _PXImportControllerTotalItemCountKey
__ PhotosUICore: _PXImportItemViewModelKindExpansionPlaceholder
__ PhotosUICore: _PXImportMediaProviderDidProcessAssetNotification
__ PhotosUICore: _PXIndexPathFromSimpleIndexPath
__ PhotosUICore: _PXIsCMMEnabled
__ PhotosUICore: _PXIsOLEDDevice
__ PhotosUICore: _PXIterateAsynchronously
__ PhotosUICore: _PXLayoutMetricIPad10_5LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPad10_5PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPad12_9LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPad12_9PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPad9_7LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPad9_7PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPhone10LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPhone10PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPhone11_4LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPhone5LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPhone5PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPhone6LandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPhone6PortraitWidth
__ PhotosUICore: _PXLayoutMetricIPhone6plusLandscapeWidth
__ PhotosUICore: _PXLayoutMetricIPhone6plusPortraitWidth
__ PhotosUICore: _PXLocalizationKeyByAddingDeviceModelSuffix
__ PhotosUICore: _PXLocalizationKeyByAddingMediaSpecificSuffixForAssets
__ PhotosUICore: _PXLocalizationKeyForMediaType
__ PhotosUICore: _PXLocalizedSelectionMessageForAssets
__ PhotosUICore: _PXLocalizedSelectionMessageForAssetsCount
__ PhotosUICore: _PXLocalizedString
__ PhotosUICore: _PXLocalizedStringFromInteger
__ PhotosUICore: _PXMap
__ PhotosUICore: _PXMediaTypeForAssets
__ PhotosUICore: _PXMediaTypeInfoManagerDefaultTimeout
__ PhotosUICore: _PXMessageForMomentShareURL
__ PhotosUICore: _PXNavigationListGroupItemTypeMediaTypes
__ PhotosUICore: _PXNavigationListGroupItemTypeMyAlbums
__ PhotosUICore: _PXNavigationListGroupItemTypeOtherAlbums
__ PhotosUICore: _PXNavigationListGroupItemTypeSharedAlbums
__ PhotosUICore: _PXNavigationListGroupItemTypeSyncedFromMacAlbums
__ PhotosUICore: _PXNavigationListItemFolderKeyAssetsAuxiliaryObjectKey
__ PhotosUICore: _PXNavigationListItemImageNameEmptyAlbum
__ PhotosUICore: _PXNavigationListItemImageNamePlus
__ PhotosUICore: _PXNavigationListItemKeyAssetAuxiliaryObjectKey
__ PhotosUICore: _PXNumberPropertyFromCommand
__ PhotosUICore: _PXOneUpPresentationOriginForAssetCollection
__ PhotosUICore: _PXPeopleAlbumDidChangeNotification
__ PhotosUICore: _PXPeopleErrorKey
__ PhotosUICore: _PXPeopleFaceCropManagerDidInvalidateCacheNotification
__ PhotosUICore: _PXPeopleFaceCropManagerInvalidatedLocalIdentifiersKey
__ PhotosUICore: _PXPeopleFaceTileImageManagerDidInvalidateCacheNotification
__ PhotosUICore: _PXPeopleFaceTileImageManagerNotificationUserInfoChangedLocalIdentifiersKey
__ PhotosUICore: _PXPhotoKitAdjustedUIMediaProviderCompositionControllerKey
__ PhotosUICore: _PXPhotoKitLocalizedMessageForEmptyCollectionListFetchResult
__ PhotosUICore: _PXPhotoKitLocalizedMessageForRecentlyDeletedDaysRemainingAsset
__ PhotosUICore: _PXPhotoKitLocalizedTitleForEmptyCollectionListFetchResult
__ PhotosUICore: _PXPhotoLibraryChangePausingDefaultTransitionTimeout
__ PhotosUICore: _PXPhotoLibraryChangePausingInteractiveTransitionTimeout
__ PhotosUICore: _PXPhotosFileProviderTypeIdentifierAutoLoopAsGIFPrivate
__ PhotosUICore: _PXPhotosFileProviderTypeIdentifierLivePhotoBundlePrivate
__ PhotosUICore: _PXPhotosViewConfigurationForAssetCollection
__ PhotosUICore: _PXPhotosViewConfigurationForAssetCollectionFetchResult
__ PhotosUICore: _PXPhotosViewConfigurationForAssetCollectionWithExistingAssetsFetchResult
__ PhotosUICore: _PXPhotosViewConfigurationForImagePickerWithAssetCollection
__ PhotosUICore: _PXPhotosViewConfigurationForImagePickerWithAssetCollectionFetchResult
__ PhotosUICore: _PXPhotosViewConfigurationForPlacesMomentsWithAllowedAssets
__ PhotosUICore: _PXPhotosViewEnabledForAppPicker
__ PhotosUICore: _PXPhotosViewEnabledForAssetCollection
__ PhotosUICore: _PXPhotosViewEnabledForImagePicker
__ PhotosUICore: _PXPhotosViewEnabledForPanoramas
__ PhotosUICore: _PXPhotosViewEnabledForPlaces
__ PhotosUICore: _PXPhotosViewNoteHeaderViewSizeDidChange
__ PhotosUICore: _PXPointApproximatelyEqualToPoint
__ PhotosUICore: _PXPointNull
__ PhotosUICore: _PXPointRoundToPixel
__ PhotosUICore: _PXPointSubtract
__ PhotosUICore: _PXPreferencesIsHiddenAlbumVisible
__ PhotosUICore: _PXPreferencesIsVideoAutoplayEnabled
__ PhotosUICore: _PXPreheatMTLDevice
__ PhotosUICore: _PXProgrammaticNavigationRequestExecute
__ PhotosUICore: _PXPublishMomentShareWithCompletion
__ PhotosUICore: _PXRectApproximatelyEqualToRect
__ PhotosUICore: _PXRectByFlippingHorizontallyInRect
__ PhotosUICore: _PXRectDenormalize
__ PhotosUICore: _PXRectFlippedVertically
__ PhotosUICore: _PXRectGetCenter
__ PhotosUICore: _PXRectNormalize
__ PhotosUICore: _PXRectRoundToPixel
__ PhotosUICore: _PXRectScaleFromCenter
__ PhotosUICore: _PXRectShrinkToPixel
__ PhotosUICore: _PXRectUnit
__ PhotosUICore: _PXRectWithAspectRatioFittingRect
__ PhotosUICore: _PXRectWithCenterAndSize
__ PhotosUICore: _PXRectWithEdges
__ PhotosUICore: _PXReduce
__ PhotosUICore: _PXRegisterPreferencesObserver
__ PhotosUICore: _PXRootLibraryNavigationControllerUpdatedAvailableDestinations
__ PhotosUICore: _PXScaledValueForTextStyleWithSymbolicTraits
__ PhotosUICore: _PXSearchHistoryNotificationRecentSearchesDidChange
__ PhotosUICore: _PXSidebarImageRequestIDNull
__ PhotosUICore: _PXSidebarItemChildInfoDropOnItemIndex
__ PhotosUICore: _PXSimpleIndexPathFromIndexPath
__ PhotosUICore: _PXSimpleIndexPathNull
__ PhotosUICore: _PXSimulateCrash
__ PhotosUICore: _PXSizeGetAspectRatio
__ PhotosUICore: _PXSizeIsEmpty
__ PhotosUICore: _PXSizeMax
__ PhotosUICore: _PXSizeMin
__ PhotosUICore: _PXSizeNull
__ PhotosUICore: _PXSizeRoundToPixel
__ PhotosUICore: _PXSizeScale
__ PhotosUICore: _PXSizeWithAspectRatioFittingSize
__ PhotosUICore: _PXSoftLinkedProtoRootSettingsLoadIfNecessary
__ PhotosUICore: _PXTransientCollectionIdentifierAllAlbums
__ PhotosUICore: _PXTrimTimeCodeStringFromMilliSeconds
__ PhotosUICore: _PXTrimTimeCodeStringFromSecondsAndRound
__ PhotosUICore: _PXTrimTimeCodeStringWithFrames
__ PhotosUICore: _PXUnregisterPreferencesObserver
__ PhotosUICore: _PXUserInterfaceSizeClassFromUITraitCollection
__ PhotosUICore: _PXVKCreateImageAnalysisInteraction
__ PhotosUICore: _PXViewControllerEventTrackerCreate
__ PhotosUICore: _PXViewLayoutAttributesMake
__ PhotosUICore: _PXViewSpecContextForMemoryTile
__ PhotosUICore: _PXViewSpecOptionsWithTitleFontName
__ PhotosUICore: __importDataLog
__ PhotosUICore: __importGridLog
__ PhotosUICore: __importToAlbumLog
__ PhotosUICore: _importSuffixForItems
__ PhotosUICore: _px_deferredLocalizedStringWithFormat
__ PhotosUICore: _px_dispatch_on_main_queue
__ PhotosUICore: _px_dispatch_on_main_queue_sync
__ PhotosUICore: _px_dispatch_on_main_queue_when_idle_after_delay
__ PhotosUICore: _px_dispatch_queue_create
__ PhotosUICore: _px_dispatch_queue_create_serial
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTEditFloatRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTRow
__ PrototypeTools: _OBJC_CLASS_$_PTRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSChoiceRow
__ PrototypeTools: _OBJC_CLASS_$_PTSModule
__ PrototypeTools: _OBJC_CLASS_$_PTSSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSSwitchRow
__ PrototypeTools: _OBJC_CLASS_$_PTSliderRow
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ PrototypeToolsUI: _OBJC_CLASS_$_PTUIModuleController
__ PrototypeToolsUI: _OBJC_CLASS_$_PTUISettingsController
__ PrototypeToolsUI: _OBJC_METACLASS_$_PTUISettingsController
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAEncodeLayerTreeToFile
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DEqualToTransform
__ QuartzCore: _CATransform3DGetAffineTransform
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DInvert
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMLParser
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMeshTransform
__ QuartzCore: _OBJC_CLASS_$_CAMutableMeshTransform
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CAState
__ QuartzCore: _OBJC_CLASS_$_CAStateAddAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateAddElement
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _OBJC_CLASS_$_CAStateElement
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveElement
__ QuartzCore: _OBJC_CLASS_$_CAStateSetValue
__ QuartzCore: _OBJC_CLASS_$_CAStateTransition
__ QuartzCore: _OBJC_CLASS_$_CAStateTransitionElement
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCADepthNormalizationMax
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillModeRemoved
__ QuartzCore: _kCAGravityBottom
__ QuartzCore: _kCAGravityCenter
__ QuartzCore: _kCAGravityResizeAspect
__ QuartzCore: _kCAGravityResizeAspectFill
__ QuartzCore: _kCALineCapButt
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ QuartzCore: _kCATransactionDisableActions
__ Social: _OBJC_CLASS_$_SLComposeSheetConfigurationItem
__ Social: _OBJC_CLASS_$_SLImageAttachment
__ Social: _OBJC_CLASS_$_SLVideoAttachment
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _SBSGetScreenLockStatus
__ SpringBoardServices: _SBSRequestPasscodeUnlockUI
__ SpringBoardServices: _SBSSpringBoardServerPort
__ SpringBoardServices: _SBSetApplicationNetworkFlags
__ TipKit: _OBJC_CLASS_$_TPKContentController
__ TipKit: _OBJC_CLASS_$_TPKContentPopoverViewController
__ UIKit: _CGRectFromString
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSShadow
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAccessibilityCustomAction
__ UIKit: _OBJC_CLASS_$_UIAccessibilityHUDItem
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_CLASS_$_UIAssignToContactActivity
__ UIKit: _OBJC_CLASS_$_UIBackgroundConfiguration
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICellAccessoryDelete
__ UIKit: _OBJC_CLASS_$_UICellAccessoryLabel
__ UIKit: _OBJC_CLASS_$_UICellAccessoryOutlineDisclosure
__ UIKit: _OBJC_CLASS_$_UICellAccessoryReorder
__ UIKit: _OBJC_CLASS_$_UICollectionLayoutListConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCellRegistration
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewController
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewDropProposal
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_CLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewTransitionLayout
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICopyToPasteboardActivity
__ UIKit: _OBJC_CLASS_$_UIDeferredMenuElement
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIImpactFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMailActivity
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMessageActivity
__ UIKit: _OBJC_CLASS_$_UIMovieScrubber
__ UIKit: _OBJC_CLASS_$_UIMultiSelectInteraction
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationButton
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPencilInteraction
__ UIKit: _OBJC_CLASS_$_UIPercentDrivenInteractiveTransition
__ UIKit: _OBJC_CLASS_$_UIPickerView
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerHighlightEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPopoverController
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIProgressHUD
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UISaveToCameraRollActivity
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UISearchToken
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStatusBarHideAnimationParameters
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITabBarAppearance
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITabBarItem
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITouch
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UITransitionView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UIActivityBundleImageConfiguration
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomization
__ UIKit: _OBJC_CLASS_$__UIActivityItemCustomizationGroup
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIBackdropViewSettings
__ UIKit: _OBJC_CLASS_$__UIBasicCellContentViewConfiguration
__ UIKit: _OBJC_CLASS_$__UICollectionViewControllerLayoutToLayoutTransition
__ UIKit: _OBJC_CLASS_$__UICollectionViewOutlineCell
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIContentViewEditingConfiguration
__ UIKit: _OBJC_CLASS_$__UIDiscreteFeedback
__ UIKit: _OBJC_CLASS_$__UIDragSnappingFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIDynamicAnimation
__ UIKit: _OBJC_CLASS_$__UIDynamicAnimationActiveValue
__ UIKit: _OBJC_CLASS_$__UIDynamicAnimationGroup
__ UIKit: _OBJC_CLASS_$__UIDynamicValueAnimation
__ UIKit: _OBJC_CLASS_$__UIPreviewPresentationController
__ UIKit: _OBJC_CLASS_$__UIPreviewTransitionDelegate
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UIScreenRoutePickerViewController
__ UIKit: _OBJC_CLASS_$__UISelectionFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UISheetAnimationController
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIActivityViewController
__ UIKit: _OBJC_METACLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_METACLASS_$_UIAssignToContactActivity
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewController
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayout
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutAttributes
__ UIKit: _OBJC_METACLASS_$_UICollectionViewLayoutInvalidationContext
__ UIKit: _OBJC_METACLASS_$_UICollectionViewTransitionLayout
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UICopyToPasteboardActivity
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIMailActivity
__ UIKit: _OBJC_METACLASS_$_UIMessageActivity
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPopoverController
__ UIKit: _OBJC_METACLASS_$_UISaveToCameraRollActivity
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITabBarController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UICollectionViewControllerLayoutToLayoutTransition
__ UIKit: _OBJC_METACLASS_$__UICollectionViewOutlineCell
__ UIKit: _OBJC_METACLASS_$__UIPreviewPresentationController
__ UIKit: _OBJC_METACLASS_$__UIPreviewTransitionDelegate
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$__UIScreenRoutePickerViewController
__ UIKit: _OBJC_METACLASS_$__UISheetAnimationController
__ UIKit: _UIAccessibilityInvertColorsStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsInvertColorsEnabled
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIAccessibilityLayoutChangedNotification
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAccessibilityTraitSelected
__ UIKit: _UIAccessibilityTraitStaticText
__ UIKit: _UIAccessibilityTraitUpdatesFrequently
__ UIKit: _UIActivityTypeAddToReadingList
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIActivityTypeAssignToContact
__ UIKit: _UIActivityTypeCloudSharing
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeCreateReminder
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIActivityTypeMarkupAsPDF
__ UIKit: _UIActivityTypeMessage
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePostToFacebook
__ UIKit: _UIActivityTypePostToFlickr
__ UIKit: _UIActivityTypePostToTencentWeibo
__ UIKit: _UIActivityTypePostToTwitter
__ UIKit: _UIActivityTypePostToVimeo
__ UIKit: _UIActivityTypePostToWeibo
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIActivityTypeSaveToFiles
__ UIKit: _UIActivityTypeSaveToNotes
__ UIKit: _UIActivityTypeShare
__ UIKit: _UIActivityTypeUserDefaults
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationAutomaticSnapshotDefaultPNG
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIDistanceBetweenPointAndRect
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontSystemFontDesignAlternate
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleHeadline1
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightThin
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePickerControllerAllowsEditing
__ UIKit: _UIImagePickerControllerCropRect
__ UIKit: _UIImagePickerControllerEditedImage
__ UIKit: _UIImagePickerControllerImageURL
__ UIKit: _UIImagePickerControllerLivePhoto
__ UIKit: _UIImagePickerControllerMediaURL
__ UIKit: _UIImagePickerControllerOriginalImage
__ UIKit: _UIImagePickerControllerPHAsset
__ UIKit: _UIImagePickerControllerReferenceURL
__ UIKit: _UIImagePickerControllerVideoMaximumDuration
__ UIKit: _UIImagePickerControllerVideoQuality
__ UIKit: _UIIntegralTransform
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyInputUpArrow
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UIMenuControllerDidHideMenuNotification
__ UIKit: _UIMidPointBetweenPoints
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIOffsetZero
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectInset
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISceneDidActivateNotification
__ UIKit: _UISceneDidDisconnectNotification
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillConnectNotification
__ UIKit: _UISceneWillDeactivateNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UIScrollViewDecelerationRateNormal
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: _UIWindowSceneSessionRoleApplication
__ UIKit: __UIAccessibilityZoomTouchEnabled
__ UIKit: __UICreateScreenUIImageWithRotation
__ UIKit: __UIGetTintedCircularButtonDefaultBlueColor
__ UIKit: __UIImageJPEGRepresentation
__ UIKit: __UIImageOrientationForEXIFOrientation
__ UIKit: __UIImagePickerController1XCroppedImage
__ UIKit: __UIImagePickerControllerAllowIris
__ UIKit: __UIImagePickerControllerAllowMultipleSelection
__ UIKit: __UIImagePickerControllerAllowVideoEditing
__ UIKit: __UIImagePickerControllerAutoloopGIFURL
__ UIKit: __UIImagePickerControllerChooseButtonTitle
__ UIKit: __UIImagePickerControllerDisableTrimVideoMessage
__ UIKit: __UIImagePickerControllerForceNativeScreenScale
__ UIKit: __UIImagePickerControllerFullScreenImage
__ UIKit: __UIImagePickerControllerImageURLExportPreset
__ UIKit: __UIImagePickerControllerIrisVideoFileURL
__ UIKit: __UIImagePickerControllerMediaTypes
__ UIKit: __UIImagePickerControllerMultipleSelectionLimit
__ UIKit: __UIImagePickerControllerOriginalImageData
__ UIKit: __UIImagePickerControllerPHAssetLocalIdentifier
__ UIKit: __UIImagePickerControllerShowsFileSizePicker
__ UIKit: __UIImagePickerControllerShowsPrompt
__ UIKit: __UIImagePickerControllerSourceType
__ UIKit: __UIImagePickerControllerStaticPrompt
__ UIKit: __UIImagePickerControllerTargetForPrompt
__ UIKit: __UIImagePickerControllerUseTelephonyUI
__ UIKit: __UIImagePickerControllerVideoDontTranscode
__ UIKit: __UIImagePickerControllerVideoEditingEnd
__ UIKit: __UIImagePickerControllerVideoEditingStart
__ UIKit: __UIImagePickerControllerVideoRemakerQuality
__ UIKit: __UIImagePickerControllerViewImageBeforeSelecting
__ UIKit: __UIImagePickerSavingOptions
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateRequestDeactivate
__ UIKit: __UIUpdateRequestDispose
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: _UTTypeAudio
__ UniformTypeIdentifiers: _UTTypeGIF
__ UniformTypeIdentifiers: _UTTypeHEIC
__ UniformTypeIdentifiers: _UTTypeHEIF
__ UniformTypeIdentifiers: _UTTypeImage
__ UniformTypeIdentifiers: _UTTypeItem
__ UniformTypeIdentifiers: _UTTypeJPEG
__ UniformTypeIdentifiers: _UTTypeLivePhoto
__ UniformTypeIdentifiers: _UTTypeMovie
__ UniformTypeIdentifiers: _UTTypePDF
__ UniformTypeIdentifiers: _UTTypeRAWImage
__ UniformTypeIdentifiers: __UTTypeHEIFStandard
__ iTunesCloud: _OBJC_CLASS_$_ICCloudServiceStatusMonitor
__ iTunesCloud: _OBJC_CLASS_$_ICPrivacyInfo
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOfType
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_wait
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _lstat
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_vm_protect
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float3x3
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _unsetenv
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_debug_taggedpointer_obfuscator
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__PUObject : NSObject

PUOneUpVisualImageAnalyzingController : NSObject <PUBrowsingViewModelChangeObserver>
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PXVisualIntelligenceManager *visualImageManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpVisualImageAnalyzingController browsingViewModel]
  -[PUOneUpVisualImageAnalyzingController .cxx_destruct]
  -[PUOneUpVisualImageAnalyzingController viewModel:didChange:]
  -[PUOneUpVisualImageAnalyzingController init]
  -[PUOneUpVisualImageAnalyzingController visualImageManager]
  -[PUOneUpVisualImageAnalyzingController _cancelVKImageAnalysisForAssetViewModel:]
  -[PUOneUpVisualImageAnalyzingController _requestVKImageAnalysisForAssetViewModel:]
  -[PUOneUpVisualImageAnalyzingController initWithBrowsingViewModel:]


PUCurationActionPeopleBrowserViewController : PXPeopleDetailSettingsViewController
 @property  PUCurationTraitContainer *traitContainer
 @property  PUCurationActionAssetBrowserViewController *assetBrowserViewController
 @property  NSMutableDictionary *facesByPersonLocalIdentifier
 @property  NSMutableDictionary *detectionTraitsByFaceLocalIdentifierByPersonLocalIdentifier

  // instance methods
  -[PUCurationActionPeopleBrowserViewController collectionView:didSelectItemAtIndexPath:]
  -[PUCurationActionPeopleBrowserViewController .cxx_destruct]
  -[PUCurationActionPeopleBrowserViewController facesByPersonLocalIdentifier]
  -[PUCurationActionPeopleBrowserViewController detectionTraitsByFaceLocalIdentifierByPersonLocalIdentifier]
  -[PUCurationActionPeopleBrowserViewController assetBrowserViewController]
  -[PUCurationActionPeopleBrowserViewController traitContainer]
  -[PUCurationActionPeopleBrowserViewController initWithTraitContainer:]
  -[PUCurationActionPeopleBrowserViewController setTraitContainer:]
  -[PUCurationActionPeopleBrowserViewController setAssetBrowserViewController:]
  -[PUCurationActionPeopleBrowserViewController setFacesByPersonLocalIdentifier:]
  -[PUCurationActionPeopleBrowserViewController setDetectionTraitsByFaceLocalIdentifierByPersonLocalIdentifier:]


_PUTimerTarget : NSObject
 @property  id target
 @property  SEL selector

  // instance methods
  -[_PUTimerTarget selector]
  -[_PUTimerTarget .cxx_destruct]
  -[_PUTimerTarget setTarget:]
  -[_PUTimerTarget target]
  -[_PUTimerTarget setSelector:]
  -[_PUTimerTarget handleTimer:]


PHActivityViewController : UIActivityViewController <PXActivityDataSource>
 @property  NSArray *_PHActivityItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PHActivityViewController .cxx_destruct]
  -[PHActivityViewController initWithActivityItems:applicationActivities:]
  -[PHActivityViewController _setPHActivityItems:]
  -[PHActivityViewController activityViewControllerForActivity:]
  -[PHActivityViewController activityItemsForActivity:]
  -[PHActivityViewController _updateActivityItems:]
  -[PHActivityViewController _PHActivityItems]


PHAirPlayScreenController : NSObject <PUAirPlayScreenReceiver, PUAirPlayRouteObserverRegistryDelegate>
 @property  PUAirPlayScreen *_currentScreen
 @property  PUAirPlayScreenDetector *_screenDetector
 @property  PUAirPlayRootViewController *_rootViewController
 @property  PUAirPlayContentRegistry *_contentRegistry
 @property  PUAirPlayRouteObserverRegistry *_routeObserverRegistry
 @property  UIViewController *_lastDisplayedContent
 @property  NSDate *_lastScreenConnectDate
 @property  NSDate *_lastScreenRequestDate
 @property  long long _lastScreenRequestOrigin
 @property  long long airPlaySessionSignpost
 @property  id secondDisplayModeToken
 @property  AVOutputContext *outputContext
 @property  BOOL displayingContent
 @property  unsigned long screenAvailability
 @property  unsigned long routeAvailability
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PHAirPlayScreenController sharedInstance]
  +[PHAirPlayScreenController _keyForScreenRequestOrigin:]

  // instance methods
  -[PHAirPlayScreenController outputContext]
  -[PHAirPlayScreenController unregisterRouteObserver:]
  -[PHAirPlayScreenController _setLastScreenRequestOrigin:]
  -[PHAirPlayScreenController _setContentRegistry:]
  -[PHAirPlayScreenController setOutputContext:]
  -[PHAirPlayScreenController notifyDidPresentAirPlayRoutesFromShareSheet]
  -[PHAirPlayScreenController _rootViewController]
  -[PHAirPlayScreenController airPlaySessionSignpost]
  -[PHAirPlayScreenController _lastScreenConnectDate]
  -[PHAirPlayScreenController pu_hasAvailableRoute]
  -[PHAirPlayScreenController _contentRegistry]
  -[PHAirPlayScreenController unregisterContentProvider:]
  -[PHAirPlayScreenController .cxx_destruct]
  -[PHAirPlayScreenController screenDetector:didLoseScreen:]
  -[PHAirPlayScreenController _setCurrentScreen:]
  -[PHAirPlayScreenController _screenDetector]
  -[PHAirPlayScreenController _handleSettingHighResolutionContent:forRootController:content:]
  -[PHAirPlayScreenController _lastScreenRequestOrigin]
  -[PHAirPlayScreenController registerRouteObserver:]
  -[PHAirPlayScreenController _setLastDisplayedContent:]
  -[PHAirPlayScreenController _lastScreenRequestDate]
  -[PHAirPlayScreenController init]
  -[PHAirPlayScreenController _shouldIgnoreScreen:]
  -[PHAirPlayScreenController _setLastScreenRequestDate:]
  -[PHAirPlayScreenController _setLastScreenConnectDate:]
  -[PHAirPlayScreenController isDisplayingContent]
  -[PHAirPlayScreenController _sceneDidActivate:]
  -[PHAirPlayScreenController _recordSessionEnded]
  -[PHAirPlayScreenController _cacheDisplayedContentIfNeededForUnregisteringProvider:]
  -[PHAirPlayScreenController setAirPlaySessionSignpost:]
  -[PHAirPlayScreenController _screenAvailabilityName]
  -[PHAirPlayScreenController _currentScreen]
  -[PHAirPlayScreenController _sceneWillDeactivate:]
  -[PHAirPlayScreenController _shouldUpdateSecondDisplayModeWithCurrentContent]
  -[PHAirPlayScreenController screenAvailability]
  -[PHAirPlayScreenController screenDetector:didDetectScreen:]
  -[PHAirPlayScreenController _notifyWillRequestAirPlayScreenFromSource:]
  -[PHAirPlayScreenController setSecondDisplayModeToken:]
  -[PHAirPlayScreenController _setScreenDetector:]
  -[PHAirPlayScreenController _setRootViewController:]
  -[PHAirPlayScreenController routeAvailability]
  -[PHAirPlayScreenController _lastDisplayedContent]
  -[PHAirPlayScreenController _switchModeForHighResolutionContent:completionHandler:]
  -[PHAirPlayScreenController _updateScreenContentWithShouldTryToFindAvailableScreen:]
  -[PHAirPlayScreenController _recordSessionBeganWithScreen:]
  -[PHAirPlayScreenController notifyDidPresentAirPlayRoutesFromSlideshow]
  -[PHAirPlayScreenController _findAvailableScreen]
  -[PHAirPlayScreenController _setRouteObserverRegistry:]
  -[PHAirPlayScreenController secondDisplayModeToken]
  -[PHAirPlayScreenController airPlayRouteObserverRegistryRouteAvailabilityChanged:forRouteObserver:]
  -[PHAirPlayScreenController registerContentProvider:]
  -[PHAirPlayScreenController _currentContent]
  -[PHAirPlayScreenController _outputDeviceDidChange:]
  -[PHAirPlayScreenController _routeObserverRegistry]
  -[PHAirPlayScreenController _updateSecondDisplayModeWithCurrentContent]


PURenderDebugController : NSObject
  // class methods
  +[PURenderDebugController debugFilesDirectory]
  +[PURenderDebugController getDebugFiles]
  +[PURenderDebugController setCoreImageDebugMode:dumpInputs:dumpOutputs:dumpIntermediates:dumpTiming:]
  +[PURenderDebugController deleteDebugDirectory]
  +[PURenderDebugController listDebugFilesViewController]
  +[PURenderDebugController shareSheetViewController]


PUScrollImageView : UIScrollView <UIScrollViewDelegate>
 @property  UIImageView *imageView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUScrollImageView imageView]
  -[PUScrollImageView viewForZoomingInScrollView:]
  -[PUScrollImageView .cxx_destruct]
  -[PUScrollImageView initWithFrame:image:]
  -[PUScrollImageView setImageView:]


PUDebugImageTableViewController : UITableViewController <UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate>
 @property  NSArray *tableData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUDebugImageTableViewController tableView:numberOfRowsInSection:]
  -[PUDebugImageTableViewController .cxx_destruct]
  -[PUDebugImageTableViewController tableView:didSelectRowAtIndexPath:]
  -[PUDebugImageTableViewController viewDidLoad]
  -[PUDebugImageTableViewController tableView:cellForRowAtIndexPath:]
  -[PUDebugImageTableViewController tableData]
  -[PUDebugImageTableViewController setTableData:]
  -[PUDebugImageTableViewController pidFromPath:]
  -[PUDebugImageTableViewController jobNumberFromPath:]


PUMergedLivePhotosVideoRequest : PXObservable <PXChangeObserver>
 @property  PUAssetReference *assetReference
 @property  PUAssetsDataSource *assetsDataSource
 @property  long long state
 @property  PUMergedLivePhotosVideo *mergedVideo
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUMergedLivePhotosVideoRequest mergedVideo]
  -[PUMergedLivePhotosVideoRequest mutableChangeObject]
  -[PUMergedLivePhotosVideoRequest .cxx_destruct]
  -[PUMergedLivePhotosVideoRequest assetReference]
  -[PUMergedLivePhotosVideoRequest assetsDataSource]
  -[PUMergedLivePhotosVideoRequest init]
  -[PUMergedLivePhotosVideoRequest state]
  -[PUMergedLivePhotosVideoRequest cancel]
  -[PUMergedLivePhotosVideoRequest _stateQueue_signalStateChange]
  -[PUMergedLivePhotosVideoRequest start]
  -[PUMergedLivePhotosVideoRequest _workQueue_start]
  -[PUMergedLivePhotosVideoRequest _workQueue_handleGeneratorDidChangeState]
  -[PUMergedLivePhotosVideoRequest _workQueue_fetchMergeableAssets]
  -[PUMergedLivePhotosVideoRequest _workQueue_generateVideoUsingAssets:]
  -[PUMergedLivePhotosVideoRequest _workQueue_finishWithMergedVideo:error:]
  -[PUMergedLivePhotosVideoRequest initWithAssetReference:dataSource:]
  -[PUMergedLivePhotosVideoRequest observable:didChange:context:]
  -[PUMergedLivePhotosVideoRequest error]


PHEditingExtensionContext : NSExtensionContext <PUEditingExtensionVendor>
 @property  PUEditingInitialPayload *_initialPayload
 @property  PUEditingExtensionUndoAdapter *undoAdapter
 @property  BOOL attemptUndoManagerAutoSetup
 @property  NSUndoManager *undoManagerForBarButtons

  // class methods
  +[PHEditingExtensionContext _extensionAuxiliaryVendorProtocol]
  +[PHEditingExtensionContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[PHEditingExtensionContext attemptUndoManagerAutoSetup]
  -[PHEditingExtensionContext setUndoManagerForBarButtons:]
  -[PHEditingExtensionContext undoAdapter]
  -[PHEditingExtensionContext _initialPayload]
  -[PHEditingExtensionContext .cxx_destruct]
  -[PHEditingExtensionContext dealloc]
  -[PHEditingExtensionContext cancelContentEditingWithResponseHandler:]
  -[PHEditingExtensionContext querySDKVersionWithResponseHandler:]
  -[PHEditingExtensionContext _releaseSandboxExtensions]
  -[PHEditingExtensionContext _contentEditingController]
  -[PHEditingExtensionContext undoManagerForBarButtons]
  -[PHEditingExtensionContext setAttemptUndoManagerAutoSetup:]
  -[PHEditingExtensionContext queryHandlingCapabilityForAdjustmentData:withResponseHandler:]
  -[PHEditingExtensionContext queryShouldShowCancelConfirmationWithResponseHandler:]
  -[PHEditingExtensionContext setupUndoProxyWithXPCListenerEndpoint:attemptUndoManagerAutoSetup:]
  -[PHEditingExtensionContext beginContentEditingWithCompletionHandler:]
  -[PHEditingExtensionContext finishContentEditing]
  -[PHEditingExtensionContext setUndoAdapter:]


PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell : PUPhotosGridCell
 @property  NSString *score
 @property  UIColor *color

  // instance methods
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell setScore:]
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell color]
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell .cxx_destruct]
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell layoutSubviews]
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell setColor:]
  -[PUCurationClassificationSignalAssetBrowserDebugPhotosGridCell score]


PHLivePhotoView : UIView <PXLivePhotoView, ISChangeObserver, ISLivePhotoUIViewDelegate>
 @property  ISLivePhotoPlayer *player
 @property  ISPlayerItem *_playerItem
 @property  BOOL _playingVitality
 @property  BOOL _playbackRequested
 @property  BOOL scrubbing
 @property  long long videoFilterUpdateCounter
 @property  long long targetReadiness
 @property  BOOL shouldApplyTargetReadiness
 @property  UIView *photoView
 @property  {CGPoint=dd} scaleAnchorOffset
 @property  ISLivePhotoUIView *playerView
 @property  ISLivePhotoPlayer *player
 @property  BOOL showsStatusBorder
 @property  {?={?=qiIq}{?=qiIq}} trimmedTimeRange
 @property  ^{CGImage=} overridePhoto
 @property  {?=qiIq} seekTime
 @property  BOOL displayingPhoto
 @property  NSNumber *overrideSRLCompensationAmount
 @property  <PHLivePhotoViewDelegate> *delegate
 @property  PHLivePhoto *livePhoto
 @property  BOOL muted
 @property  UIGestureRecognizer *playbackGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PHLivePhotoView livePhotoBadgeImageWithOptions:]

  // instance methods
  -[PHLivePhotoView setMuted:]
  -[PHLivePhotoView isMuted]
  -[PHLivePhotoView _setPlayingVitality:]
  -[PHLivePhotoView _playerItem]
  -[PHLivePhotoView livePhoto]
  -[PHLivePhotoView stopPlayback]
  -[PHLivePhotoView setLivePhoto:]
  -[PHLivePhotoView initWithCoder:]
  -[PHLivePhotoView startPlaybackWithStyle:]
  -[PHLivePhotoView setTargetReadiness:]
  -[PHLivePhotoView scaleAnchorOffset]
  -[PHLivePhotoView livePhotoViewCanBeginInteractivePlayback:]
  -[PHLivePhotoView seekTime]
  -[PHLivePhotoView .cxx_destruct]
  -[PHLivePhotoView _updateCurrentPlaybackStyleAndSeeking]
  -[PHLivePhotoView _commonPHLivePhotoViewInitialization]
  -[PHLivePhotoView playerView]
  -[PHLivePhotoView _setPlaybackRequested:]
  -[PHLivePhotoView playbackGestureRecognizer]
  -[PHLivePhotoView _playingVitality]
  -[PHLivePhotoView shouldApplyTargetReadiness]
  -[PHLivePhotoView scrubbing]
  -[PHLivePhotoView _playerDidBeginHinting]
  -[PHLivePhotoView showsStatusBorder]
  -[PHLivePhotoView generateSnapshotImage]
  -[PHLivePhotoView setDelegate:]
  -[PHLivePhotoView setPlayer:]
  -[PHLivePhotoView _updateVideoFilter]
  -[PHLivePhotoView _handlePlayerItemStatusChanged]
  -[PHLivePhotoView player]
  -[PHLivePhotoView setOverrideSRLCompensationAmount:]
  -[PHLivePhotoView setOverridePhoto:]
  -[PHLivePhotoView _updatePlayingVitality]
  -[PHLivePhotoView _updateStatusBorder]
  -[PHLivePhotoView setPhotoView:]
  -[PHLivePhotoView _playbackRequested]
  -[PHLivePhotoView setTrimmedTimeRange:]
  -[PHLivePhotoView targetReadiness]
  -[PHLivePhotoView setVideoFilterUpdateCounter:]
  -[PHLivePhotoView isDisplayingPhoto]
  -[PHLivePhotoView overridePhoto]
  -[PHLivePhotoView initWithFrame:]
  -[PHLivePhotoView _setScrubbing:]
  -[PHLivePhotoView overrideSRLCompensationAmount]
  -[PHLivePhotoView trimmedTimeRange]
  -[PHLivePhotoView _setPlayerItem:]
  -[PHLivePhotoView delegate]
  -[PHLivePhotoView setPlayerView:]
  -[PHLivePhotoView setContentMode:]
  -[PHLivePhotoView setSeekTime:]
  -[PHLivePhotoView photoView]
  -[PHLivePhotoView videoFilterUpdateCounter]
  -[PHLivePhotoView _updatePlayerAudioEnabled]
  -[PHLivePhotoView setShouldApplyTargetReadiness:]
  -[PHLivePhotoView _updatePlayerTargetReadiness]
  -[PHLivePhotoView observable:didChange:context:]
  -[PHLivePhotoView _applySRLCompensationAmount:updateCount:]
  -[PHLivePhotoView setShowsStatusBorder:]
  -[PHLivePhotoView setScaleAnchorOffset:]


PHMemoriesTitleHelper : NSObject
  // class methods
  +[PHMemoriesTitleHelper defaultHelper]

  // instance methods
  -[PHMemoriesTitleHelper displayableTextForTitle:intent:]
  -[PHMemoriesTitleHelper titleForDisplayableText:fontName:]


PHPhotosPickerOptions : NSObject
 @property  NSDictionary *initialAssetsToSelect
 @property  PHAsset *keyAsset
 @property  PHAssetCollection *keyAssetCollection
 @property  NSArray *excludedContentModes
 @property  BOOL hideTabBar

  // instance methods
  -[PHPhotosPickerOptions hideTabBar]
  -[PHPhotosPickerOptions .cxx_destruct]
  -[PHPhotosPickerOptions setHideTabBar:]
  -[PHPhotosPickerOptions excludedContentModes]
  -[PHPhotosPickerOptions setKeyAsset:]
  -[PHPhotosPickerOptions keyAsset]
  -[PHPhotosPickerOptions initialAssetsToSelect]
  -[PHPhotosPickerOptions setInitialAssetsToSelect:]
  -[PHPhotosPickerOptions keyAssetCollection]
  -[PHPhotosPickerOptions setKeyAssetCollection:]
  -[PHPhotosPickerOptions setExcludedContentModes:]


PHPhotosPickerViewController : UIViewController
 @property  PHPhotosPickerOptions *options
 @property  @? completionHandler

  // instance methods
  -[PHPhotosPickerViewController initWithCoder:]
  -[PHPhotosPickerViewController traitCollectionDidChange:]
  -[PHPhotosPickerViewController options]
  -[PHPhotosPickerViewController .cxx_destruct]
  -[PHPhotosPickerViewController initWithOptions:]
  -[PHPhotosPickerViewController initWithNibName:bundle:]
  -[PHPhotosPickerViewController init]
  -[PHPhotosPickerViewController setCompletionHandler:]
  -[PHPhotosPickerViewController _commonPHPhotosPickerViewControllerInitializer]
  -[PHPhotosPickerViewController _updateSpecIfNeeded]
  -[PHPhotosPickerViewController _handlePickerViewControllerDidFinish:]
  -[PHPhotosPickerViewController completionHandler]


PUSharingStackCollectionViewLayout : UICollectionViewLayout
 @property  NSArray *stackedItemsLayoutAttributes
 @property  <PUSharingStackCollectionViewLayoutDelegate> *delegate

  // instance methods
  -[PUSharingStackCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUSharingStackCollectionViewLayout prepareLayout]
  -[PUSharingStackCollectionViewLayout collectionViewContentSize]
  -[PUSharingStackCollectionViewLayout .cxx_destruct]
  -[PUSharingStackCollectionViewLayout setDelegate:]
  -[PUSharingStackCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUSharingStackCollectionViewLayout _layoutItemInputAtIndexPath:]
  -[PUSharingStackCollectionViewLayout stackedItemsLayoutAttributes]
  -[PUSharingStackCollectionViewLayout delegate]


PHPlaceholderView : UIView
 @property  UIView *_container
 @property  UIImageView *_imageView
 @property  UILabel *_airPlayLabel
 @property  UILabel *_appleTVMessageLabel
 @property  long long type

  // instance methods
  -[PHPlaceholderView _imageView]
  -[PHPlaceholderView _setup]
  -[PHPlaceholderView initWithType:]
  -[PHPlaceholderView initWithCoder:]
  -[PHPlaceholderView .cxx_destruct]
  -[PHPlaceholderView _setContainer:]
  -[PHPlaceholderView _appleTVMessage]
  -[PHPlaceholderView initWithFrame:]
  -[PHPlaceholderView type]
  -[PHPlaceholderView _setImageView:]
  -[PHPlaceholderView _setAirPlayLabel:]
  -[PHPlaceholderView _setAppleTVMessageLabel:]
  -[PHPlaceholderView _airPlayLabel]
  -[PHPlaceholderView _appleTVMessageLabel]
  -[PHPlaceholderView _container]


PUAssetPickerActivityProgressViewController : UIViewController
  // instance methods
  -[PUAssetPickerActivityProgressViewController .cxx_destruct]
  -[PUAssetPickerActivityProgressViewController viewDidLoad]
  -[PUAssetPickerActivityProgressViewController init]
  -[PUAssetPickerActivityProgressViewController setProgress:]


PUAssetPickerActivityProgressController : NSObject
 @property  NSString *title
 @property  NSString *message
 @property  @? cancellationHandler
 @property  NSProgress *progress

  // instance methods
  -[PUAssetPickerActivityProgressController setTitle:]
  -[PUAssetPickerActivityProgressController .cxx_destruct]
  -[PUAssetPickerActivityProgressController setMessage:]
  -[PUAssetPickerActivityProgressController progress]
  -[PUAssetPickerActivityProgressController init]
  -[PUAssetPickerActivityProgressController message]
  -[PUAssetPickerActivityProgressController title]
  -[PUAssetPickerActivityProgressController showFromSourceViewController:completion:]
  -[PUAssetPickerActivityProgressController cancellationHandler]
  -[PUAssetPickerActivityProgressController hideWithCompletion:]
  -[PUAssetPickerActivityProgressController setCancellationHandler:]
  -[PUAssetPickerActivityProgressController setProgress:]
  -[PUAssetPickerActivityProgressController _setupAlertController]


PUEditingExtensionUndoAdapter : NSObject <PUEditingExtensionUndoTarget>
 @property  <PUEditingExtensionUndoButtonHost> *buttonHost
 @property  NSUndoManager *undoManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditingExtensionUndoAdapter undoManager]
  -[PUEditingExtensionUndoAdapter .cxx_destruct]
  -[PUEditingExtensionUndoAdapter _unregisterForUndoManagerNotifications:]
  -[PUEditingExtensionUndoAdapter _updateButtonState]
  -[PUEditingExtensionUndoAdapter _registerForUndoManagerNotifications:]
  -[PUEditingExtensionUndoAdapter performUndo]
  -[PUEditingExtensionUndoAdapter performRedo]
  -[PUEditingExtensionUndoAdapter buttonHost]
  -[PUEditingExtensionUndoAdapter initWithButtonHost:]
  -[PUEditingExtensionUndoAdapter setUndoManager:]


PHSwipeDownTracker : NSObject
 @property  PXSwipeDownTracker *impl
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {PHDisplayVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping

  // instance methods
  -[PHSwipeDownTracker .cxx_destruct]
  -[PHSwipeDownTracker init]
  -[PHSwipeDownTracker trackedCenter]
  -[PHSwipeDownTracker trackGestureTranslation:velocity:]
  -[PHSwipeDownTracker dismissalProgress]
  -[PHSwipeDownTracker shouldFinishDismissal]
  -[PHSwipeDownTracker trackedBounds]
  -[PHSwipeDownTracker trackedTransform]
  -[PHSwipeDownTracker trackedVelocity]
  -[PHSwipeDownTracker finalAnimationDuration]
  -[PHSwipeDownTracker finalAnimationSpringDamping]
  -[PHSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]
  -[PHSwipeDownTracker impl]


PUPickerPrincipalUIViewController : UIViewController <PUAssetPickerCoordinatorActionHandler, _PUPickerUnavailableUIViewControllerDelegate, NSExtensionRequestHandling, PUPickerPrincipalUIViewControllerInterface>
 @property  NSFileProviderDomain *domain
 @property  PUAssetPickerCoordinator *coordinator
 @property  NSLayoutConstraint *topConstraint
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *leadingConstraint
 @property  NSLayoutConstraint *trailingConstraint
 @property  NSLayoutConstraint *leadingSafeAreaConstraint
 @property  NSLayoutConstraint *trailingSafeAreaConstraint
 @property  NSOrderedSet *selectedObjectIDs
 @property  NSDate *selectionDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerPrincipalUIViewController initialize]
  +[PUPickerPrincipalUIViewController _remoteViewControllerInterface]
  +[PUPickerPrincipalUIViewController _exportedInterface]
  +[PUPickerPrincipalUIViewController shouldDebounceDidFinishPicking:previousSelectedObjectIDs:previousSelectionDate:]

  // instance methods
  -[PUPickerPrincipalUIViewController updateViewConstraints]
  -[PUPickerPrincipalUIViewController setImagePickerPhotoLibrary:error:]
  -[PUPickerPrincipalUIViewController traitCollectionDidChange:]
  -[PUPickerPrincipalUIViewController setBottomConstraint:]
  -[PUPickerPrincipalUIViewController setDomain:]
  -[PUPickerPrincipalUIViewController coordinator]
  -[PUPickerPrincipalUIViewController .cxx_destruct]
  -[PUPickerPrincipalUIViewController viewDidLoad]
  -[PUPickerPrincipalUIViewController setTopConstraint:]
  -[PUPickerPrincipalUIViewController domain]
  -[PUPickerPrincipalUIViewController setTrailingConstraint:]
  -[PUPickerPrincipalUIViewController topConstraint]
  -[PUPickerPrincipalUIViewController synchronousLoadConfigurationFromExtensionContext:]
  -[PUPickerPrincipalUIViewController setTrailingSafeAreaConstraint:]
  -[PUPickerPrincipalUIViewController leadingSafeAreaConstraint]
  -[PUPickerPrincipalUIViewController trailingSafeAreaConstraint]
  -[PUPickerPrincipalUIViewController _deselectAssetsWithIdentifiers:]
  -[PUPickerPrincipalUIViewController _moveAssetWithIdentifier:afterIdentifier:]
  -[PUPickerPrincipalUIViewController setLeadingConstraint:]
  -[PUPickerPrincipalUIViewController setCoordinator:]
  -[PUPickerPrincipalUIViewController leadingConstraint]
  -[PUPickerPrincipalUIViewController selectedObjectIDs]
  -[PUPickerPrincipalUIViewController selectionDate]
  -[PUPickerPrincipalUIViewController setSelectedObjectIDs:]
  -[PUPickerPrincipalUIViewController setSelectionDate:]
  -[PUPickerPrincipalUIViewController finishPicking:]
  -[PUPickerPrincipalUIViewController confirmPicking:completionHandler:]
  -[PUPickerPrincipalUIViewController coordinator:didFinishPicking:]
  -[PUPickerPrincipalUIViewController _pickerUnavailableUIViewControllerCancelButtonTapped:]
  -[PUPickerPrincipalUIViewController trailingConstraint]
  -[PUPickerPrincipalUIViewController setLeadingSafeAreaConstraint:]
  -[PUPickerPrincipalUIViewController bottomConstraint]
  -[PUPickerPrincipalUIViewController logExitIfNeeded:]


PHVideoScrubberView : UIView <PXVideoScrubberControllerDelegate, UIScrollViewDelegate, UIGestureRecognizerDelegate>
 @property  BOOL _needsUpdateFilmStripView
 @property  BOOL _needsUpdateVideoScrubberController
 @property  UIView<PHVideoScrubberFilmstripView> *_filmStripView
 @property  PXVideoScrubberController *_videoScrubberController
 @property  UIScrollView *scrollView
 @property  PUPlayheadView *_playheadView
 @property  AVPlayer *player
 @property  double estimatedDuration
 @property  UIImage *placeholderThumbnail
 @property  <PHVideoScrubberViewInteractionDelegate> *interactionDelegate
 @property  <PHVideoScrubberFilmstripViewProvider> *filmstripViewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PHVideoScrubberView interactionDelegate]
  -[PHVideoScrubberView setInteractionDelegate:]
  -[PHVideoScrubberView _setVideoScrubberController:]
  -[PHVideoScrubberView _updateIfNeeded]
  -[PHVideoScrubberView scrollView]
  -[PHVideoScrubberView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PHVideoScrubberView .cxx_destruct]
  -[PHVideoScrubberView layoutSubviews]
  -[PHVideoScrubberView _scrollView]
  -[PHVideoScrubberView _invalidateVideoScrubberController]
  -[PHVideoScrubberView _handleInteractionEndedAndTogglePlayState:]
  -[PHVideoScrubberView _isUserInteractingWithScrollView]
  -[PHVideoScrubberView _updateVisibleRectOfFilmStripView]
  -[PHVideoScrubberView _playerIsPlaying]
  -[PHVideoScrubberView _setNeedsUpdateFilmStripView:]
  -[PHVideoScrubberView _setNeedsUpdateVideoScrubberController:]
  -[PHVideoScrubberView _needsUpdateFilmStripView]
  -[PHVideoScrubberView filmstripViewProvider]
  -[PHVideoScrubberView _setFilmStripView:]
  -[PHVideoScrubberView setPlayer:]
  -[PHVideoScrubberView _setScrollView:]
  -[PHVideoScrubberView scrollViewDidEndDragging:willDecelerate:]
  -[PHVideoScrubberView videoScrubberController:lengthForDuration:]
  -[PHVideoScrubberView player]
  -[PHVideoScrubberView scrollViewDidScroll:]
  -[PHVideoScrubberView _needsUpdate]
  -[PHVideoScrubberView _currentAVAsset]
  -[PHVideoScrubberView _currentVideoComposition]
  -[PHVideoScrubberView placeholderThumbnail]
  -[PHVideoScrubberView _needsUpdateVideoScrubberController]
  -[PHVideoScrubberView estimatedDuration]
  -[PHVideoScrubberView _updateVideoscrubberControllerIfNeeded]
  -[PHVideoScrubberView _updateFilmStripViewIfNeeded]
  -[PHVideoScrubberView _playheadView]
  -[PHVideoScrubberView setEstimatedDuration:]
  -[PHVideoScrubberView setPlaceholderThumbnail:]
  -[PHVideoScrubberView setFilmstripViewProvider:]
  -[PHVideoScrubberView _videoScrubberController]
  -[PHVideoScrubberView _invalidateFilmStripView]
  -[PHVideoScrubberView _setPlayheadView:]
  -[PHVideoScrubberView _handleTouchGesture:]
  -[PHVideoScrubberView _filmStripView]
  -[PHVideoScrubberView _updateScrollViewContentOffset]
  -[PHVideoScrubberView _updatePlayheadFrame]
  -[PHVideoScrubberView _handleInteractionBegan]
  -[PHVideoScrubberView scrollViewWillBeginDragging:]
  -[PHVideoScrubberView initWithFrame:]
  -[PHVideoScrubberView _lengthForDuration:]
  -[PHVideoScrubberView _handleTapGesture:]
  -[PHVideoScrubberView scrollViewWillBeginDecelerating:]
  -[PHVideoScrubberView dealloc]
  -[PHVideoScrubberView videoScrubberControllerDidUpdate:]
  -[PHVideoScrubberView scrollViewDidEndDecelerating:]
  -[PHVideoScrubberView observeValueForKeyPath:ofObject:change:context:]
  -[PHVideoScrubberView _handleLongPressGesture:]


_PHUIViewControllerDefaultTransitionEndPoint : NSObject <PXUIViewControllerTransitionEndPoint, PXUIViewControllerZoomTransitionEndPoint>
 @property  UIViewController *viewController
 @property  BOOL keepsSourceRegionOfInterestContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PHUIViewControllerDefaultTransitionEndPoint viewController]
  -[_PHUIViewControllerDefaultTransitionEndPoint initWithViewController:]
  -[_PHUIViewControllerDefaultTransitionEndPoint .cxx_destruct]
  -[_PHUIViewControllerDefaultTransitionEndPoint regionOfInterestForTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint preloadWithSourceRegionOfInterest:forTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint removeBackgroundColorForTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint restoreBackgroundColor:forTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint keepsSourceRegionOfInterestContent]
  -[_PHUIViewControllerDefaultTransitionEndPoint zoomAnimationCoordinatorForZoomTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint contentViewForZoomTransition:]
  -[_PHUIViewControllerDefaultTransitionEndPoint init]


_PHUIViewControllerDefaultZoomAnimationCoordinator : PXZoomAnimationCoordinator
 @property  UIViewController *viewController

  // instance methods
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator viewController]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator initWithViewController:]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator .cxx_destruct]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator init]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator animateContentForEndPointType:inView:withLayerType:zoomAnimationContext:]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator animateContentForEndPointType:withZoomAnimationContext:]
  -[_PHUIViewControllerDefaultZoomAnimationCoordinator setViewController:]


PUAbstractNavigationBanner : NSObject
 @property  <PUAbstractNavigationBannerDelegate> *delegate
 @property  double height
 @property  UIView *view

  // instance methods
  -[PUAbstractNavigationBanner .cxx_destruct]
  -[PUAbstractNavigationBanner setDelegate:]
  -[PUAbstractNavigationBanner view]
  -[PUAbstractNavigationBanner height]
  -[PUAbstractNavigationBanner delegate]


PUAccessoryTileLayoutInfo : PUTileLayoutInfo
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} untransformedContentFrame
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  double minimumVisibleHeight

  // instance methods
  -[PUAccessoryTileLayoutInfo untransformedContentFrame]
  -[PUAccessoryTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:untransformedContentFrame:contentInsets:minimumVisibleHeight:]
  -[PUAccessoryTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUAccessoryTileLayoutInfo clone]
  -[PUAccessoryTileLayoutInfo contentInsets]
  -[PUAccessoryTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUAccessoryTileLayoutInfo minimumVisibleHeight]


PHNullAsset : PHAsset
  // instance methods
  -[PHNullAsset uuid]


PUCurationKeyAssetComparisonDebugViewController : PUPhotosAlbumViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCurationKeyAssetComparisonDebugViewController .cxx_destruct]
  -[PUCurationKeyAssetComparisonDebugViewController viewDidLoad]
  -[PUCurationKeyAssetComparisonDebugViewController updateData]
  -[PUCurationKeyAssetComparisonDebugViewController viewDidAppear:]
  -[PUCurationKeyAssetComparisonDebugViewController shouldShowSectionHeaders]
  -[PUCurationKeyAssetComparisonDebugViewController viewWillDisappear:]
  -[PUCurationKeyAssetComparisonDebugViewController didTapHeaderView:]
  -[PUCurationKeyAssetComparisonDebugViewController toggleShowsDifferentOnly:]
  -[PUCurationKeyAssetComparisonDebugViewController toggleShowsMeaningsOnly:]
  -[PUCurationKeyAssetComparisonDebugViewController _fetchHighlights]


PUCurationKeyAssetComparisonViewCell : UICollectionViewCell
 @property  UIImage *thumbnailImage
 @property  NSString *representedAssetIdentifier

  // class methods
  +[PUCurationKeyAssetComparisonViewCell cellHeightWithCellWidth:]

  // instance methods
  -[PUCurationKeyAssetComparisonViewCell .cxx_destruct]
  -[PUCurationKeyAssetComparisonViewCell layoutSubviews]
  -[PUCurationKeyAssetComparisonViewCell prepareForReuse]
  -[PUCurationKeyAssetComparisonViewCell initWithFrame:]
  -[PUCurationKeyAssetComparisonViewCell thumbnailImage]
  -[PUCurationKeyAssetComparisonViewCell setRepresentedAssetIdentifier:]
  -[PUCurationKeyAssetComparisonViewCell representedAssetIdentifier]
  -[PUCurationKeyAssetComparisonViewCell setThumbnailImage:]


PUCurationKeyAssetComparisonDebugViewSectionHeaderView : UICollectionViewCell
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView setTitle:]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView .cxx_destruct]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView layoutSubviews]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView setSubtitle:]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView subtitle]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView title]
  -[PUCurationKeyAssetComparisonDebugViewSectionHeaderView initWithFrame:]


PUAccessoryTileViewController : PUTileViewController <PUAccessoryContentViewControllerDelegate>
 @property  UIViewController<PUAccessoryContentViewController> *_contentViewController
 @property  UIViewController<PUAccessoryContentViewController> *_loadedContentViewController
 @property  UIView *_contentView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _contentBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _untransformedMasterContentFrame
 @property  {UIEdgeInsets=dddd} _contentInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _keyboardFrame
 @property  long long _contentInsetsChangeReason
 @property  double _minimumVisibleHeight
 @property  BOOL _wasActiveOnLastMasterContentOffsetChange
 @property  double _editorHeightDelta
 @property  <PUAccessoryTileViewControllerDelegate> *delegate
 @property  PUAssetViewModel *assetViewModel
 @property  PUAssetReference *assetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAccessoryTileViewController assetViewModel]
  -[PUAccessoryTileViewController wantsVisibleRectChanges]
  -[PUAccessoryTileViewController applyLayoutInfo:]
  -[PUAccessoryTileViewController didChangeVisibleRect]
  -[PUAccessoryTileViewController setAssetViewModel:]
  -[PUAccessoryTileViewController becomeReusable]
  -[PUAccessoryTileViewController didChangeAnimating]
  -[PUAccessoryTileViewController setAssetReference:]
  -[PUAccessoryTileViewController _performChanges:]
  -[PUAccessoryTileViewController _setContentViewController:]
  -[PUAccessoryTileViewController _updateIfNeeded]
  -[PUAccessoryTileViewController _keyboardWillHide:]
  -[PUAccessoryTileViewController _keyboardWillShow:]
  -[PUAccessoryTileViewController _setNeedsUpdate]
  -[PUAccessoryTileViewController _setKeyboardFrame:]
  -[PUAccessoryTileViewController .cxx_destruct]
  -[PUAccessoryTileViewController assetReference]
  -[PUAccessoryTileViewController viewDidLoad]
  -[PUAccessoryTileViewController setDelegate:]
  -[PUAccessoryTileViewController _setContentBounds:]
  -[PUAccessoryTileViewController _untransformedMasterContentFrame]
  -[PUAccessoryTileViewController _wasActiveOnLastMasterContentOffsetChange]
  -[PUAccessoryTileViewController _setWasActiveOnLastMasterContentOffsetChange:]
  -[PUAccessoryTileViewController _updateAssetViewModelForAnimating]
  -[PUAccessoryTileViewController accessoryContentViewControllerViewHostingGestureRecognizers:]
  -[PUAccessoryTileViewController accessoryContentViewControllerContentBoundsDidChange:]
  -[PUAccessoryTileViewController accessoryContentViewController:editorHeightDidChange:]
  -[PUAccessoryTileViewController isLocationFromProviderInContentArea:]
  -[PUAccessoryTileViewController _contentView]
  -[PUAccessoryTileViewController _invalidateContentViewController]
  -[PUAccessoryTileViewController _loadedContentViewController]
  -[PUAccessoryTileViewController _invalidateContentBounds]
  -[PUAccessoryTileViewController _needsUpdate]
  -[PUAccessoryTileViewController _contentViewController]
  -[PUAccessoryTileViewController _contentInsets]
  -[PUAccessoryTileViewController _handleScheduledUpdate]
  -[PUAccessoryTileViewController didChangeActive]
  -[PUAccessoryTileViewController _setContentView:]
  -[PUAccessoryTileViewController _isPhoneAndLandscape]
  -[PUAccessoryTileViewController delegate]
  -[PUAccessoryTileViewController initWithReuseIdentifier:]
  -[PUAccessoryTileViewController dealloc]
  -[PUAccessoryTileViewController _invalidateContentViewMetrics]
  -[PUAccessoryTileViewController _setContentInsetsChangeReason:]
  -[PUAccessoryTileViewController _updateContentViewControllerIfNeeded]
  -[PUAccessoryTileViewController _updateLoadedContentViewControllerIfNeeded]
  -[PUAccessoryTileViewController _updateContentViewMetricsIfNeeded]
  -[PUAccessoryTileViewController _updateContentBoundsIfNeeded]
  -[PUAccessoryTileViewController _updateMasterContentOffsetIfNeeded]
  -[PUAccessoryTileViewController _setLoadedContentViewController:]
  -[PUAccessoryTileViewController _editorHeightDelta]
  -[PUAccessoryTileViewController _contentInsetsChangeReason]
  -[PUAccessoryTileViewController _invalidateLoadedContentViewController]
  -[PUAccessoryTileViewController _setEditorHeightDelta:]
  -[PUAccessoryTileViewController _setUntransformedMasterContentFrame:]
  -[PUAccessoryTileViewController _setMinimumVisibleHeight:]
  -[PUAccessoryTileViewController _invalidateMasterContentOffset]
  -[PUAccessoryTileViewController _keyboardFrame]
  -[PUAccessoryTileViewController _minimumVisibleHeight]
  -[PUAccessoryTileViewController _setContentInsets:]
  -[PUAccessoryTileViewController _contentBounds]


PUAccessoryVisibilityInteractionController : NSObject <PXChangeObserver, UIGestureRecognizerDelegate, PUBrowsingViewModelChangeObserver>
 @property  PUAssetViewModel *_assetViewModel
 @property  {CGPoint=dd} _initialContentOffset
 @property  PXNumberAnimator *_overridingContentOffsetY
 @property  PXNumberAnimator *_contentOffsetOverrideFactor
 @property  PUChangeDirectionValueFilter *_verticalDirectionValueFilter
 @property  PUChangeDirectionValueFilter *_swipeDirectionValueFilter
 @property  PXVerticalSwipeGestureRecognizerHelper *verticalSwipeGestureRecognizerHelper
 @property  <PUAccessoryVisibilityInteractionControllerDelegate> *delegate
 @property  PUBrowsingSession *browsingSession
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAccessoryVisibilityInteractionController browsingSession]
  -[PUAccessoryVisibilityInteractionController setBrowsingSession:]
  -[PUAccessoryVisibilityInteractionController _handlePanGestureRecognizer:]
  -[PUAccessoryVisibilityInteractionController _setAssetViewModel:]
  -[PUAccessoryVisibilityInteractionController _performChanges:]
  -[PUAccessoryVisibilityInteractionController _updateIfNeeded]
  -[PUAccessoryVisibilityInteractionController _setNeedsUpdate]
  -[PUAccessoryVisibilityInteractionController invalidateViewHostingGestureRecognizers]
  -[PUAccessoryVisibilityInteractionController .cxx_destruct]
  -[PUAccessoryVisibilityInteractionController verticalSwipeGestureRecognizerHelper]
  -[PUAccessoryVisibilityInteractionController _setAccessoryVisible:]
  -[PUAccessoryVisibilityInteractionController _updateContentOffsetIfNeeded]
  -[PUAccessoryVisibilityInteractionController _setOverridingContentOffsetY:]
  -[PUAccessoryVisibilityInteractionController setDelegate:]
  -[PUAccessoryVisibilityInteractionController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[PUAccessoryVisibilityInteractionController viewModel:didChange:]
  -[PUAccessoryVisibilityInteractionController panGestureRecognizer]
  -[PUAccessoryVisibilityInteractionController _initialContentOffset]
  -[PUAccessoryVisibilityInteractionController _setInitialContentOffset:]
  -[PUAccessoryVisibilityInteractionController init]
  -[PUAccessoryVisibilityInteractionController _needsUpdate]
  -[PUAccessoryVisibilityInteractionController gestureRecognizerShouldBegin:]
  -[PUAccessoryVisibilityInteractionController _verticalDirectionValueFilter]
  -[PUAccessoryVisibilityInteractionController _assetViewModel]
  -[PUAccessoryVisibilityInteractionController _handleScheduledUpdate]
  -[PUAccessoryVisibilityInteractionController delegate]
  -[PUAccessoryVisibilityInteractionController _overridingContentOffsetY]
  -[PUAccessoryVisibilityInteractionController _currentAssetViewModel]
  -[PUAccessoryVisibilityInteractionController _contentOffsetOverrideFactor]
  -[PUAccessoryVisibilityInteractionController _invalidateContentOffset]
  -[PUAccessoryVisibilityInteractionController _updateGestureRecognizers]
  -[PUAccessoryVisibilityInteractionController _setSwipeDirectionValueFilter:]
  -[PUAccessoryVisibilityInteractionController _swipeDirectionValueFilter]
  -[PUAccessoryVisibilityInteractionController _setVerticalDirectionValueFilter:]
  -[PUAccessoryVisibilityInteractionController observable:didChange:context:]
  -[PUAccessoryVisibilityInteractionController _setContentOffsetOverrideFactor:]


PUActivity : UIActivity <PUActivity>
 @property  <PUActivityDataSource> *dataSource
 @property  PUActivityItemSourceController *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUActivity setDataSource:]
  -[PUActivity .cxx_destruct]
  -[PUActivity dataSource]
  -[PUActivity itemSourceController]
  -[PUActivity setItemSourceController:]
  -[PUActivity pu_activityImageNamed:]
  -[PUActivity pu_activitySettingsImageNamed:]
  -[PUActivity updateActivityViewControllerVisibleShareActions]
  -[PUActivity tearDownForCompletion]
  -[PUActivity createActivityBundleImageConfigurationForBundle:imageNamed:activityCategory:]


PUActivityAssetItem : NSObject <NSCopying>
 @property  PHAsset *asset
 @property  BOOL excludeLiveness
 @property  BOOL excludeLocation
 @property  BOOL excludeCaption
 @property  BOOL excludeAccessibilityDescription

  // class methods
  +[PUActivityAssetItem itemsForAssets:]

  // instance methods
  -[PUActivityAssetItem initWithAsset:]
  -[PUActivityAssetItem .cxx_destruct]
  -[PUActivityAssetItem init]
  -[PUActivityAssetItem asset]
  -[PUActivityAssetItem isEqual:]
  -[PUActivityAssetItem localIdentifier]
  -[PUActivityAssetItem excludeLiveness]
  -[PUActivityAssetItem excludeAccessibilityDescription]
  -[PUActivityAssetItem isEqualToActivityAssetItem:]
  -[PUActivityAssetItem setExcludeLiveness:]
  -[PUActivityAssetItem setExcludeLocation:]
  -[PUActivityAssetItem setExcludeCaption:]
  -[PUActivityAssetItem setExcludeAccessibilityDescription:]
  -[PUActivityAssetItem copyWithZone:]
  -[PUActivityAssetItem excludeCaption]
  -[PUActivityAssetItem excludeLocation]


PUActivityItemSource : PXObservable <PHAssetExportRequestDelegate, PUActivityItemSourceOperationDelegate, PUMutableActivityItemSource, UIActivityItemDeferredSource, UIActivityItemApplicationExtensionSource, UIActivityItemImageDataProvider, UIActivityItemSource>
 @property  PUActivityItemSourceConfiguration *exportConfiguration
 @property  PHAssetExportRequest *_assetExportRequest
 @property  NSProgress *_exportProgress
 @property  @? _exportProgressHandler
 @property  NSDictionary *_pasteboardRepresentation
 @property  NSURL *_assetsLibraryURL
 @property  unsigned long signpostId
 @property  NSMutableDictionary *preparationStepTimingInfo
 @property  NSDate *preparationStepSignpostIntervalStartTime
 @property  long long prepareItemEventCPAnalyticsSignpostId
 @property  NSObject<OS_dispatch_queue> *externalIsolation
 @property  NSError *lastPreparationError
 @property  PHAsset *asset
 @property  NSString *sharingUUID
 @property  {?=BBBBB} sharingPreferences
 @property  unsigned long state
 @property  @? progressHandler
 @property  @? completionHandler
 @property  @? postCompletionHandler
 @property  BOOL shouldSendAnalyticsInterval
 @property  BOOL shouldSkipPreparation
 @property  BOOL shouldAnchorPreparation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUActivityItemSource activityItemSourceLog]
  +[PUActivityItemSource _sharingErrorWithCode:underlyingError:localizedDescription:additionalInfo:]
  +[PUActivityItemSource supportsAssetLocalIdentifierForActivityType:]

  // instance methods
  -[PUActivityItemSource activityViewControllerOperation:]
  -[PUActivityItemSource activityViewController:dataTypeIdentifierForActivityType:]
  -[PUActivityItemSource sharingUUID]
  -[PUActivityItemSource .cxx_destruct]
  -[PUActivityItemSource setProgressHandler:]
  -[PUActivityItemSource activityViewController:itemForActivityType:]
  -[PUActivityItemSource setState:]
  -[PUActivityItemSource asset]
  -[PUActivityItemSource assetExportRequest:didChangeToState:fromState:]
  -[PUActivityItemSource shouldSkipPreparation]
  -[PUActivityItemSource _outboundResourcesDirectoryURL]
  -[PUActivityItemSource _generateURLForType:withPathExtension:preferredFilename:]
  -[PUActivityItemSource _copyResourceAtURL:toURL:shouldMove:]
  -[PUActivityItemSource activityItemSourceOperation:prepareItemForActivityType:]
  -[PUActivityItemSource setSharingPreferences:]
  -[PUActivityItemSource initWithAsset:sharingPreferences:]
  -[PUActivityItemSource runWithActivityType:]
  -[PUActivityItemSource signalAnchorCompletion]
  -[PUActivityItemSource setShouldSendAnalyticsInterval:]
  -[PUActivityItemSource setShouldSkipPreparation:]
  -[PUActivityItemSource setShouldAnchorPreparation:]
  -[PUActivityItemSource externalIsolation]
  -[PUActivityItemSource _createManagedURLForResourceAtURL:shouldMove:forType:]
  -[PUActivityItemSource _fetchAlternateWithOptions:progressHandler:completionHandler:]
  -[PUActivityItemSource _fetchVideoWithOptions:progressHandler:completionHandler:]
  -[PUActivityItemSource _fetchLivePhotoWithOptions:progressHandler:completionHandler:]
  -[PUActivityItemSource _fetchImageWithOptions:progressHandler:completionHandler:]
  -[PUActivityItemSource _newPasteboardRepresentationForURL:]
  -[PUActivityItemSource _itemForActivityType:]
  -[PUActivityItemSource finalizeTotalPreparationDurationTimingInfoDictionary]
  -[PUActivityItemSource sendPreparationCompletedEventForActivityType:preparationTimingInfo:withError:didCancel:]
  -[PUActivityItemSource setPostCompletionHandler:]
  -[PUActivityItemSource _beginObservingExportRequest:withProgressHandler:]
  -[PUActivityItemSource setCompletionHandler:]
  -[PUActivityItemSource state]
  -[PUActivityItemSource progressHandler]
  -[PUActivityItemSource cancel]
  -[PUActivityItemSource _newOperationForActivityType:]
  -[PUActivityItemSource _activityOperationQueue]
  -[PUActivityItemSource setExportConfiguration:]
  -[PUActivityItemSource _setPasteboardRepresentation:]
  -[PUActivityItemSource _setAssetsLibraryURL:]
  -[PUActivityItemSource _exportProgress]
  -[PUActivityItemSource shouldAnchorPreparation]
  -[PUActivityItemSource _sharingVariants]
  -[PUActivityItemSource _uniformTypeIdentifierForActivityType:]
  -[PUActivityItemSource setLastPreparationError:]
  -[PUActivityItemSource shouldSendAnalyticsInterval]
  -[PUActivityItemSource sharingPreferences]
  -[PUActivityItemSource _fetchSharingVariants]
  -[PUActivityItemSource _setExportProgress:]
  -[PUActivityItemSource cleanUpExportedFiles]
  -[PUActivityItemSource dealloc]
  -[PUActivityItemSource activityViewControllerPlaceholderItem:]
  -[PUActivityItemSource _resourceURLForType:]
  -[PUActivityItemSource _assetsLibraryURL]
  -[PUActivityItemSource preparationStepSignpostIntervalStartTime]
  -[PUActivityItemSource commitTimingInfoForPreparationStep:fromStartTime:]
  -[PUActivityItemSource postCompletionHandler]
  -[PUActivityItemSource _setResourceURL:forType:]
  -[PUActivityItemSource lastPreparationError]
  -[PUActivityItemSource completionHandler]
  -[PUActivityItemSource activityViewControllerApplicationExtensionItem:]
  -[PUActivityItemSource _resetState]
  -[PUActivityItemSource activityViewController:thumbnailImageDataForActivityType:suggestedSize:]
  -[PUActivityItemSource _stopObservingExportRequest]
  -[PUActivityItemSource _runExportRequestWithOptions:progressHandler:completionHandler:]
  -[PUActivityItemSource exportConfiguration]
  -[PUActivityItemSource _pasteboardRepresentation]
  -[PUActivityItemSource _setAssetExportRequest:]
  -[PUActivityItemSource _setExportProgressHandler:]
  -[PUActivityItemSource _assetExportRequest]
  -[PUActivityItemSource _exportProgressHandler]
  -[PUActivityItemSource setPreparationStepSignpostIntervalStartTime:]
  -[PUActivityItemSource preparationStepTimingInfo]
  -[PUActivityItemSource _generateAnalyticsPayloadWithTimingInfo:]
  -[PUActivityItemSource prepareItemEventCPAnalyticsSignpostId]
  -[PUActivityItemSource _runOnDemandExportForAsset:withOptions:completionHandler:]
  -[PUActivityItemSource _runOnDemandSingleFileExportForAsset:withOptions:completionHandler:]
  -[PUActivityItemSource signpostId]
  -[PUActivityItemSource observeValueForKeyPath:ofObject:change:context:]


PUActivityItemSourceAnchorOperation : PXAsyncOperation
  // instance methods
  -[PUActivityItemSourceAnchorOperation px_start]
  -[PUActivityItemSourceAnchorOperation signalAnchor]


PUActivityItemSourceController : PXObservable <PUCMMActivityItemSourceDelegate, PXCMMActionPerformerDelegate, PXChangeObserver, PXActivityItemSourceController>
 @property  PUCMMActivityItemSource *cmmActivityItemSource
 @property  NSArray *activeItemSources
 @property  NSMutableArray *errors
 @property  NSString *activeActivityType
 @property  NSURL *publishedURL
 @property  unsigned long numSourcesDownloading
 @property  NSObject<OS_dispatch_queue> *externalIsolation
 @property  unsigned int powerAssertionIdentifier
 @property  unsigned long preferredPreparationType
 @property  BOOL shouldUseMomentShareLinkInMessagesIfThresholdMet
 @property  <PUActivityItemSourceControllerDelegate> *delegate
 @property  unsigned long state
 @property  PUActivityViewController *activityViewController
 @property  NSOrderedSet *assetItems
 @property  BOOL shouldExcludeLivenessInAllItemSources
 @property  BOOL shouldExcludeLocationInAllItemSources
 @property  BOOL shouldExcludeCaptionInAllItemSources
 @property  BOOL shouldExcludeAccessibilityDescriptionInAllItemSources
 @property  BOOL shouldShareAsOriginals
 @property  PHPerson *person
 @property  NSOrderedSet *assetItemSources
 @property  NSArray *activityItems
 @property  @? progressHandler
 @property  NSOrderedSet *assets
 @property  BOOL momentSharePublishAttempted
 @property  BOOL itemSourcesSupportMomentShareLinkCreation
 @property  BOOL isPreparingIndividualItems
 @property  unsigned long unsavedSyndicatedAssetCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL itemSourcesSupportSlideshow

  // instance methods
  -[PUActivityItemSourceController setErrors:]
  -[PUActivityItemSourceController _cleanupAfterPerform]
  -[PUActivityItemSourceController _didPublishMomentShareLinkToURL:error:completionHandler:]
  -[PUActivityItemSourceController cmmActivityItemSource:willBeginPreparationWithActivityType:preparationType:]
  -[PUActivityItemSourceController cmmActivityItemSource:didFinishPreparationForActivityType:preparationType:withItems:didCancel:error:completion:]
  -[PUActivityItemSourceController requestAssetsMediaTypeCount]
  -[PUActivityItemSourceController setPreferredPreparationType:]
  -[PUActivityItemSourceController shouldUseMomentShareLinkInMessagesIfThresholdMet]
  -[PUActivityItemSourceController momentSharePublishAttempted]
  -[PUActivityItemSourceController itemSourcesSupportMomentShareLinkCreation]
  -[PUActivityItemSourceController setActivityViewController:]
  -[PUActivityItemSourceController activityViewController]
  -[PUActivityItemSourceController .cxx_destruct]
  -[PUActivityItemSourceController setPerson:]
  -[PUActivityItemSourceController assets]
  -[PUActivityItemSourceController preferredPreparationType]
  -[PUActivityItemSourceController cmmActivityItemSource]
  -[PUActivityItemSourceController assetItemSources]
  -[PUActivityItemSourceController synthesizedSharingPreferencesForAssetItem:]
  -[PUActivityItemSourceController updateSharingPreferencesInItemSources]
  -[PUActivityItemSourceController shouldExcludeLivenessInAllItemSources]
  -[PUActivityItemSourceController shouldExcludeLocationInAllItemSources]
  -[PUActivityItemSourceController shouldExcludeCaptionInAllItemSources]
  -[PUActivityItemSourceController shouldExcludeAccessibilityDescriptionInAllItemSources]
  -[PUActivityItemSourceController shouldShareAsOriginals]
  -[PUActivityItemSourceController activeItemSources]
  -[PUActivityItemSourceController person]
  -[PUActivityItemSourceController setProgressHandler:]
  -[PUActivityItemSourceController setDelegate:]
  -[PUActivityItemSourceController errors]
  -[PUActivityItemSourceController setState:]
  -[PUActivityItemSourceController updateState]
  -[PUActivityItemSourceController init]
  -[PUActivityItemSourceController publishedURL]
  -[PUActivityItemSourceController externalIsolation]
  -[PUActivityItemSourceController actionPerformer:presentViewController:]
  -[PUActivityItemSourceController activityItems]
  -[PUActivityItemSourceController state]
  -[PUActivityItemSourceController progressHandler]
  -[PUActivityItemSourceController cancel]
  -[PUActivityItemSourceController _prepareIndividualItemSourcesForActivity:]
  -[PUActivityItemSourceController _prepareMomentShareLinkFromIndividualItemSourcesForActivity:]
  -[PUActivityItemSourceController runExplicitly:withActivityType:completionHandler:]
  -[PUActivityItemSourceController publishLinkForActivityType:completionHandler:]
  -[PUActivityItemSourceController activeActivityType]
  -[PUActivityItemSourceController _setPublishedURL:]
  -[PUActivityItemSourceController setActiveItemSources:]
  -[PUActivityItemSourceController setActiveActivityType:]
  -[PUActivityItemSourceController _prepareForPerformWithActivityType:error:]
  -[PUActivityItemSourceController delegate]
  -[PUActivityItemSourceController cleanUpExportedFiles]
  -[PUActivityItemSourceController isPreparingIndividualItems]
  -[PUActivityItemSourceController unsavedSyndicatedAssetCount]
  -[PUActivityItemSourceController itemSourcesSupportSlideshow]
  -[PUActivityItemSourceController setAssetItems:]
  -[PUActivityItemSourceController setShouldExcludeLivenessInAllItemSources:]
  -[PUActivityItemSourceController setShouldExcludeLocationInAllItemSources:]
  -[PUActivityItemSourceController setShouldExcludeCaptionInAllItemSources:]
  -[PUActivityItemSourceController setShouldExcludeAccessibilityDescriptionInAllItemSources:]
  -[PUActivityItemSourceController setShouldShareAsOriginals:]
  -[PUActivityItemSourceController addAssetItem:]
  -[PUActivityItemSourceController removeAssetItem:]
  -[PUActivityItemSourceController configureItemSourcesForActivityIfNeeded:forcePreparationAsMomentShareLink:]
  -[PUActivityItemSourceController activityItemSourceForAsset:]
  -[PUActivityItemSourceController setShouldUseMomentShareLinkInMessagesIfThresholdMet:]
  -[PUActivityItemSourceController actionPerformer:dismissViewController:completionHandler:]
  -[PUActivityItemSourceController assetItems]
  -[PUActivityItemSourceController numSourcesDownloading]
  -[PUActivityItemSourceController setNumSourcesDownloading:]
  -[PUActivityItemSourceController observable:didChange:context:]
  -[PUActivityItemSourceController powerAssertionIdentifier]


PUActivityProgressViewController : UIViewController
  // instance methods
  -[PUActivityProgressViewController setFractionCompleted:]
  -[PUActivityProgressViewController .cxx_destruct]
  -[PUActivityProgressViewController viewDidLoad]
  -[PUActivityProgressViewController _progressView]


PUActivityProgressController : NSObject
 @property  NSString *title
 @property  UIWindow *window
 @property  @? cancellationHandler
 @property  NSProgress *progress
 @property  BOOL isCancelled

  // instance methods
  -[PUActivityProgressController setWindow:]
  -[PUActivityProgressController setTitle:]
  -[PUActivityProgressController setFractionCompleted:]
  -[PUActivityProgressController .cxx_destruct]
  -[PUActivityProgressController isCancelled]
  -[PUActivityProgressController progress]
  -[PUActivityProgressController init]
  -[PUActivityProgressController _newProgressContainerView]
  -[PUActivityProgressController _updateFractionCompletedFromProgress]
  -[PUActivityProgressController title]
  -[PUActivityProgressController cancellationHandler]
  -[PUActivityProgressController setCancellationHandler:]
  -[PUActivityProgressController setProgress:]
  -[PUActivityProgressController dealloc]
  -[PUActivityProgressController window]
  -[PUActivityProgressController showAnimated:allowDelay:]
  -[PUActivityProgressController hideAnimated:allowDelay:]
  -[PUActivityProgressController observeValueForKeyPath:ofObject:change:context:]


PUErrorPresentationController : NSObject
 @property  NSString *alertTitle
 @property  NSString *alertMessage
 @property  NSArray *additionalAlertActions
 @property  NSString *dismissButtonTitle
 @property  NSString *radarTitle
 @property  NSArray *additionalQuestionsInRadarDescription
 @property  NSString *assetsListDescription
 @property  NSArray *errors
 @property  NSArray *assets
 @property  NSString *radarDescription
 @property  NSString *radarComponentID
 @property  NSString *radarComponentName
 @property  NSString *radarComponentVersion

  // class methods
  +[PUErrorPresentationController alertActionForNavigatingToDestination:withTitle:completion:]
  +[PUErrorPresentationController errorIsNetworkRelatedCPLError:]
  +[PUErrorPresentationController errorIsLowDiskSpaceRelatedCPLError:]
  +[PUErrorPresentationController errorIsAuthenticationRelatedCPLError:]
  +[PUErrorPresentationController assetIsStandardVideo:]

  // instance methods
  -[PUErrorPresentationController .cxx_destruct]
  -[PUErrorPresentationController assets]
  -[PUErrorPresentationController errors]
  -[PUErrorPresentationController initWithErrors:forAssets:]
  -[PUErrorPresentationController setRadarComponentID:name:version:]
  -[PUErrorPresentationController alertControllerWithCompletion:]
  -[PUErrorPresentationController setRadarDescription:]
  -[PUErrorPresentationController setAdditionalAlertActions:]
  -[PUErrorPresentationController setDismissButtonTitle:]
  -[PUErrorPresentationController setRadarTitle:]
  -[PUErrorPresentationController setAdditionalQuestionsInRadarDescription:]
  -[PUErrorPresentationController setAssetsListDescription:]
  -[PUErrorPresentationController setAlertMessage:]
  -[PUErrorPresentationController shouldIncludeAssetInRadarDescription:]
  -[PUErrorPresentationController additionalRadarDescriptionLinesForAsset:]
  -[PUErrorPresentationController radarComponentID]
  -[PUErrorPresentationController radarComponentName]
  -[PUErrorPresentationController radarComponentVersion]
  -[PUErrorPresentationController shouldShowFileRadarAction]
  -[PUErrorPresentationController configureAlertPropertiesFromError:withAssets:willShowFileRadarButton:alertCompletion:]
  -[PUErrorPresentationController dismissButtonTitle]
  -[PUErrorPresentationController additionalAlertActions]
  -[PUErrorPresentationController configureRadarPropertiesFromError:withAssets:]
  -[PUErrorPresentationController additionalQuestionsInRadarDescription]
  -[PUErrorPresentationController radarDescription]
  -[PUErrorPresentationController assetsListDescription]
  -[PUErrorPresentationController assetsDescriptionFromAssets:]
  -[PUErrorPresentationController alertMessage]
  -[PUErrorPresentationController setAlertTitle:]
  -[PUErrorPresentationController alertTitle]
  -[PUErrorPresentationController radarTitle]


PUActivitySharingController : NSObject <PUActivityViewControllerDelegate, UIActivityViewControllerAirDropDelegate, PUCarouselSharingViewControllerDelegate, UIPresentationControllerDelegatePrivate, PXChangeObserver, PXActivitySharingController>
 @property  PUActivitySharingViewModel *viewModel
 @property  NSDictionary *assetsFetchResultsByAssetCollection
 @property  BOOL allowsAirPlayActivity
 @property  BOOL allowsRemoveFromFeaturedPhotosActivity
 @property  BOOL allowsSuggestLessPersonActivity
 @property  BOOL allowsEditDateTimeActivity
 @property  BOOL allowsEditLocationActivity
 @property  PHPerson *person
 @property  NSArray *excludedActivityTypes
 @property  NSArray *activities
 @property  PUCarouselSharingViewController *carouselViewController
 @property  BOOL excludeShareActivity
 @property  PHResourceLocalAvailabilityRequest *resourcesPreheatRequest
 @property  PUActivityViewController *internalActivityViewController
 @property  <PXActivitySharingControllerDelegate> *delegate
 @property  UIActivityViewController<PXActivityViewController> *activityViewController
 @property  PHAsset *currentAsset
 @property  PXSelectionSnapshot *selectionSnapshot
 @property  NSDictionary *selectedAssetsByAssetCollection
 @property  NSArray *selectedAssets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUActivitySharingController activities]
  -[PUActivitySharingController photosDataSource]
  -[PUActivitySharingController presentationControllerDidDismiss:]
  -[PUActivitySharingController setViewModel:]
  -[PUActivitySharingController selectionSnapshot]
  -[PUActivitySharingController setActivities:]
  -[PUActivitySharingController new]
  -[PUActivitySharingController activityViewController]
  -[PUActivitySharingController setExcludedActivityTypes:]
  -[PUActivitySharingController .cxx_destruct]
  -[PUActivitySharingController setPerson:]
  -[PUActivitySharingController person]
  -[PUActivitySharingController setDelegate:]
  -[PUActivitySharingController viewModel]
  -[PUActivitySharingController init]
  -[PUActivitySharingController _activityViewControllerDidCompleteWithActivityType:success:error:]
  -[PUActivitySharingController _preheatResources]
  -[PUActivitySharingController _incrementShareCountForSelectedAssets]
  -[PUActivitySharingController carouselViewController]
  -[PUActivitySharingController _cancelPreheatResourcesRequest]
  -[PUActivitySharingController _activitySharingControllerWillDismissActivityViewController]
  -[PUActivitySharingController _updatePreheatResourcesRequest]
  -[PUActivitySharingController _updateActionSheetPresentationStyleIfNeeded]
  -[PUActivitySharingController setResourcesPreheatRequest:]
  -[PUActivitySharingController selectAllAssets]
  -[PUActivitySharingController _handlePreheatRequestCompletionWithSuccess:cancelled:error:]
  -[PUActivitySharingController resourcesPreheatRequest]
  -[PUActivitySharingController activityViewControllerShouldCancelAfterPreparationCanceled:]
  -[PUActivitySharingController carouselSharingViewController:addAssetItem:]
  -[PUActivitySharingController carouselSharingViewController:removeAssetItem:]
  -[PUActivitySharingController carouselSharingViewController:setAssetItems:]
  -[PUActivitySharingController carouselSharingViewController:replaceAssetItem:withAssetItem:]
  -[PUActivitySharingController activityViewControllerIfAvailable]
  -[PUActivitySharingController setAssetsFetchResultsByAssetCollection:]
  -[PUActivitySharingController setAllowsAirPlayActivity:]
  -[PUActivitySharingController delegate]
  -[PUActivitySharingController currentAsset]
  -[PUActivitySharingController initWithActivitySharingConfiguration:]
  -[PUActivitySharingController assetsFetchResultsByAssetCollection]
  -[PUActivitySharingController allowsAirPlayActivity]
  -[PUActivitySharingController allowsRemoveFromFeaturedPhotosActivity]
  -[PUActivitySharingController allowsSuggestLessPersonActivity]
  -[PUActivitySharingController allowsEditDateTimeActivity]
  -[PUActivitySharingController allowsEditLocationActivity]
  -[PUActivitySharingController excludeShareActivity]
  -[PUActivitySharingController internalActivityViewController]
  -[PUActivitySharingController setAllowsRemoveFromFeaturedPhotosActivity:]
  -[PUActivitySharingController setAllowsSuggestLessPersonActivity:]
  -[PUActivitySharingController setAllowsEditDateTimeActivity:]
  -[PUActivitySharingController setAllowsEditLocationActivity:]
  -[PUActivitySharingController setCarouselViewController:]
  -[PUActivitySharingController setInternalActivityViewController:]
  -[PUActivitySharingController _cancel]
  -[PUActivitySharingController activityViewControllerWillDisappear:]
  -[PUActivitySharingController excludedActivityTypes]
  -[PUActivitySharingController activityViewControllerDidFinishAirdropTransfer:]
  -[PUActivitySharingController observable:didChange:context:]
  -[PUActivitySharingController _createCarouselSharingViewControllerIfNeeded]
  -[PUActivitySharingController _createActivityViewControllerWithActivities:]
  -[PUActivitySharingController _updateExcludedActivityTypes]
  -[PUActivitySharingController selectedAssetsByAssetCollection]
  -[PUActivitySharingController _updateSelectedAssetIdentifiers]
  -[PUActivitySharingController selectedAssets]


PUActivityViewController : UIActivityViewController <PXForcedDismissableViewController, PXChangeObserver, PUActivityItemSourceControllerDelegate, UIActivityViewControllerObjectManipulationDelegate, PUSharingHeaderDataProvider, PXActivityViewController>
 @property  PUActivitySharingController *activitySharingController
 @property  PUActivityProgressController *progressController
 @property  BOOL shouldAutomaticallyUseCMMInMessagesIfThresholdMet
 @property  BOOL shareAsCMM
 @property  BOOL excludeLiveness
 @property  BOOL excludeLocation
 @property  BOOL excludeCaption
 @property  BOOL excludeAccessibilityDescription
 @property  BOOL sendAsOriginals
 @property  PXCPLStatusProvider *cplStatusProvider
 @property  PUActivitySharingViewModel *sharingViewModel
 @property  NSArray *photosActivities
 @property  <PUActivityViewControllerDelegate> *delegate
 @property  BOOL readyForInteraction
 @property  r^{__CFString=} aggregateKey
 @property  NSOrderedSet *assets
 @property  @? readyToInteractHandler
 @property  @? ppt_readyToInteractHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *localizedTitle
 @property  NSString *localizedSubtitle
 @property  long long sourceOrigin
 @property  <PXDisplayAsset> *keyAsset
 @property  PHPerson *person
 @property  NSOrderedSet *orderedSelectedAssets
 @property  {PXAssetMediaTypeCount=QQQQQQQQQ} assetTypeCount
 @property  BOOL isActionSheet

  // class methods
  +[PUActivityViewController new]
  +[PUActivityViewController isOutboundShareActivity:]
  +[PUActivityViewController defaultActivityTypeOrder]
  +[PUActivityViewController photosApplicationActivities]
  +[PUActivityViewController actionSheetPhotosApplicationActivities]
  +[PUActivityViewController cmmAssetCountThresholdIsMetForAssetItems:]
  +[PUActivityViewController cmmFileSizeThresholdIsMetForAssetItems:]
  +[PUActivityViewController cmmThresholdIsMetForAssetItems:]
  +[PUActivityViewController excludedPhotosActivityTypesForPresentationSource:]
  +[PUActivityViewController externalApplicationExcludedPhotosActivityTypes]
  +[PUActivityViewController needsConfidentialityCheckForActivityType:]

  // instance methods
  -[PUActivityViewController localizedTitle]
  -[PUActivityViewController collectionView:didSelectItemAtIndexPath:]
  -[PUActivityViewController traitCollectionDidChange:]
  -[PUActivityViewController setAggregateKey:]
  -[PUActivityViewController setExcludedActivityTypes:]
  -[PUActivityViewController setCompletionWithItemsHandler:]
  -[PUActivityViewController .cxx_destruct]
  -[PUActivityViewController assets]
  -[PUActivityViewController initWithAssetItems:photosApplicationActivities:linkPresentation:]
  -[PUActivityViewController mailActivity:displayVideoRemakerProgressView:]
  -[PUActivityViewController ppt_performActivityOfType:]
  -[PUActivityViewController ppt_cancelActivity]
  -[PUActivityViewController activitySharingController]
  -[PUActivityViewController cplStatusProvider]
  -[PUActivityViewController setCplStatusProvider:]
  -[PUActivityViewController person]
  -[PUActivityViewController _titleForActivity:]
  -[PUActivityViewController setDelegate:]
  -[PUActivityViewController viewDidAppear:]
  -[PUActivityViewController init]
  -[PUActivityViewController isActionSheet]
  -[PUActivityViewController _sendCPAnalyticsShareEventWithActivityType:category:didComplete:]
  -[PUActivityViewController _cleanUpActivityState]
  -[PUActivityViewController shouldAutomaticallyUseCMMInMessagesIfThresholdMet]
  -[PUActivityViewController _generateAnalyticsPayloadForSharingEventsToActivityType:]
  -[PUActivityViewController _sendCPAnalyticsShareEventForMultipleSelectionShare]
  -[PUActivityViewController _removeRemakerProgressView]
  -[PUActivityViewController _handleUserCancelWithCompletion:]
  -[PUActivityViewController progressController]
  -[PUActivityViewController setProgressController:]
  -[PUActivityViewController updateProgressUITitle]
  -[PUActivityViewController setPhotosCarouselViewController:]
  -[PUActivityViewController keyAsset]
  -[PUActivityViewController localizedSubtitle]
  -[PUActivityViewController _customizationAvailableForActivityViewController:]
  -[PUActivityViewController _customizationGroupsForActivityViewController:]
  -[PUActivityViewController viewWillDisappear:]
  -[PUActivityViewController viewDidLayoutSubviews]
  -[PUActivityViewController replaceAssetItem:withAssetItem:]
  -[PUActivityViewController excludeLiveness]
  -[PUActivityViewController aggregateKey]
  -[PUActivityViewController photosActivities]
  -[PUActivityViewController activityItemSourceController:willBeginPreparationWithActivityType:preparationType:]
  -[PUActivityViewController activityItemSourceController:didFinishPreparationForActivityType:preparationType:withItems:didCancel:errors:completion:]
  -[PUActivityViewController delegate]
  -[PUActivityViewController excludeAccessibilityDescription]
  -[PUActivityViewController setExcludeLiveness:]
  -[PUActivityViewController setExcludeLocation:]
  -[PUActivityViewController setExcludeCaption:]
  -[PUActivityViewController setExcludeAccessibilityDescription:]
  -[PUActivityViewController _prepareAssetsForActivity:forcePreparationAsMomentShareLink:]
  -[PUActivityViewController _presentUnsavedSyndicatedAssetsAlertIfNeededForActivity:forcePreparationAsMomentShareLink:withCompletionHandler:]
  -[PUActivityViewController _adjustPreparationOptionsIfNeededForActivity:withCompletionHandler:]
  -[PUActivityViewController _presentAirPlayAlertIfNeededForActivity:withCompletionHandler:]
  -[PUActivityViewController _presentConfidentialityWarningIfNeededForActivity:withCompletionHandler:]
  -[PUActivityViewController _shouldPresentAirplayAlertForActivity:]
  -[PUActivityViewController _shouldAutomaticallySendAsCMMForActivity:]
  -[PUActivityViewController _shouldSuggestSharingAsCMMForActivity:]
  -[PUActivityViewController _presentCMMSuggestionAlertForActivity:withCompletionHandler:]
  -[PUActivityViewController setAssetItems:]
  -[PUActivityViewController addAssetItem:]
  -[PUActivityViewController removeAssetItem:]
  -[PUActivityViewController _sharingManagerDidBeginPublishing:]
  -[PUActivityViewController _sharingStyleDidChangeToExpanded:]
  -[PUActivityViewController _canShowSendAsOriginalsSwitchInObjectManipulationHeader]
  -[PUActivityViewController _updateSourceControllerPreferredPreparationBehavior]
  -[PUActivityViewController _updateSourceControllerSharingPreferencesInAllItems]
  -[PUActivityViewController _updateSharingHeaderIfNeeded]
  -[PUActivityViewController _handleShareSheetReadyToInteractCompletion]
  -[PUActivityViewController removeProgressUIAnimated:withDelay:]
  -[PUActivityViewController _updateTopBorderView]
  -[PUActivityViewController _handlePostReadyToInteractUpdatesIfNeeded]
  -[PUActivityViewController isReadyForInteraction]
  -[PUActivityViewController readyToInteractHandler]
  -[PUActivityViewController setReadyToInteractHandler:]
  -[PUActivityViewController ppt_readyToInteractHandler]
  -[PUActivityViewController setPpt_readyToInteractHandler:]
  -[PUActivityViewController shareAsCMM]
  -[PUActivityViewController dealloc]
  -[PUActivityViewController sendAsOriginals]
  -[PUActivityViewController _cancel]
  -[PUActivityViewController excludeCaption]
  -[PUActivityViewController _prepareActivity:]
  -[PUActivityViewController updateVisibleShareActionsIfNeeded]
  -[PUActivityViewController excludeLocation]
  -[PUActivityViewController _performActivity:]
  -[PUActivityViewController observable:didChange:context:]
  -[PUActivityViewController initWithAssetItems:photosApplicationActivities:linkPresentation:assetIdentifiers:sharingViewModel:]
  -[PUActivityViewController setActivitySharingController:]
  -[PUActivityViewController setReadyForInteraction:]
  -[PUActivityViewController _syndicationAssetSavingHelperWithAssets:]
  -[PUActivityViewController _canCreateCMMWithCurrentItems]
  -[PUActivityViewController assetTypeCount]
  -[PUActivityViewController _shouldShowSystemActivityType:]
  -[PUActivityViewController prepareForDismissingForced:]
  -[PUActivityViewController _showRemakerProgressView:forMail:withCancelationHandler:]
  -[PUActivityViewController setSendAsOriginals:]
  -[PUActivityViewController sharingViewModel]
  -[PUActivityViewController orderedSelectedAssets]
  -[PUActivityViewController sourceOrigin]
  -[PUActivityViewController setShouldAutomaticallyUseCMMInMessagesIfThresholdMet:]
  -[PUActivityViewController setShareAsCMM:]
  -[PUActivityViewController showProgressUIAnimated:withDelay:cancellationHandler:]
  -[PUActivityViewController _sendCPAnalyticsAssetExportPreparationEventWithActivityType:didComplete:error:]
  -[PUActivityViewController _showSharingWasInterruptedForErrors:withIndividualAssets:itemSourcesByAssetUUID:toActivityType:completion:]
  -[PUActivityViewController _activity:category:didComplete:]


PUAddSubscribersViewController : UIViewController
 @property  PLCloudSharedAlbum *album

  // instance methods
  -[PUAddSubscribersViewController contentScrollView]
  -[PUAddSubscribersViewController shouldAutorotateToInterfaceOrientation:]
  -[PUAddSubscribersViewController album]
  -[PUAddSubscribersViewController _keyboardWillShow:]
  -[PUAddSubscribersViewController .cxx_destruct]
  -[PUAddSubscribersViewController viewDidLoad]
  -[PUAddSubscribersViewController _dismiss]
  -[PUAddSubscribersViewController _cancelButtonHandler]
  -[PUAddSubscribersViewController _addButtonHandler]
  -[PUAddSubscribersViewController _saveAndDismiss]
  -[PUAddSubscribersViewController _validateRecipientsToAdd:]
  -[PUAddSubscribersViewController initWithSharedStream:]
  -[PUAddSubscribersViewController recipientViewControllerDidAddRecipient:]
  -[PUAddSubscribersViewController recipientViewControllerDidRemoveRecipient:]
  -[PUAddSubscribersViewController recipientViewController:didEnterText:]
  -[PUAddSubscribersViewController viewWillDisappear:]
  -[PUAddSubscribersViewController viewWillAppear:]
  -[PUAddSubscribersViewController dealloc]
  -[PUAddSubscribersViewController loadView]


PUPickerConfiguration : NSObject <NSSecureCoding, NSItemProviderWriting, NSItemProviderReading>
 @property  BOOL usesEmbeddedMessagesLayout
 @property  long long preferredAssetRepresentationMode
 @property  long long selection
 @property  long long selectionLimit
 @property  <PUPickerFilter> *filter
 @property  NSURL *photoLibraryURL
 @property  BOOL onlyReturnsIdentifiers
 @property  NSOrderedSet *preselectedAssetIdentifiers
 @property  BOOL allowsContinuousSelection
 @property  BOOL isValidConfiguration
 @property  BOOL usesSelectionCoordinator
 @property  BOOL allowsUnlimitedMultipleSelection
 @property  BOOL allowsEmptySelection
 @property  BOOL allowsAssetData
 @property  BOOL allowsAssetIdentifiers
 @property  BOOL allowsContextMenuInteraction
 @property  BOOL allowsSwipeToSelect
 @property  BOOL canBeginSearch
 @property  BOOL shouldRequestCurrentIfPossible
 @property  PUPickerGeneratedFilter *generatedFilter
 @property  PHPhotoLibrary *photoLibrary
 @property  NSOrderedSet *preselectedAssetObjectIDs
 @property  BOOL allowsDownload
 @property  BOOL showsFileSizePicker
 @property  BOOL requiresPickingConfirmation
 @property  BOOL isLimitedLibraryPicker
 @property  NSString *limitedLibraryClientIdentifier
 @property  <PLClientIdentification> *pickerClientIdentification
 @property  BOOL usesMemoriesLayout
 @property  PHAssetCollection *memoryAssetCollection
 @property  NSArray *writableTypeIdentifiersForItemProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerConfiguration objectWithItemProviderData:typeIdentifier:error:]
  +[PUPickerConfiguration supportsSecureCoding]
  +[PUPickerConfiguration writableTypeIdentifiersForItemProvider]
  +[PUPickerConfiguration readableTypeIdentifiersForItemProvider]

  // instance methods
  -[PUPickerConfiguration loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[PUPickerConfiguration photoLibraryURL]
  -[PUPickerConfiguration initWithCoder:]
  -[PUPickerConfiguration allowsEmptySelection]
  -[PUPickerConfiguration selection]
  -[PUPickerConfiguration photoLibrary]
  -[PUPickerConfiguration .cxx_destruct]
  -[PUPickerConfiguration selectionLimit]
  -[PUPickerConfiguration legacy_overrideGeneratedFilter:]
  -[PUPickerConfiguration init]
  -[PUPickerConfiguration allowsSwipeToSelect]
  -[PUPickerConfiguration initWithPHPickerConfiguration:]
  -[PUPickerConfiguration preferredAssetRepresentationMode]
  -[PUPickerConfiguration onlyReturnsIdentifiers]
  -[PUPickerConfiguration usesMemoriesLayout]
  -[PUPickerConfiguration usesEmbeddedMessagesLayout]
  -[PUPickerConfiguration limitedLibraryClientIdentifier]
  -[PUPickerConfiguration allowsContinuousSelection]
  -[PUPickerConfiguration usesSelectionCoordinator]
  -[PUPickerConfiguration allowsUnlimitedMultipleSelection]
  -[PUPickerConfiguration allowsContextMenuInteraction]
  -[PUPickerConfiguration canBeginSearch]
  -[PUPickerConfiguration generatedFilter]
  -[PUPickerConfiguration preselectedAssetObjectIDs]
  -[PUPickerConfiguration isLimitedLibraryPicker]
  -[PUPickerConfiguration setPreselectedAssetObjectIDs:]
  -[PUPickerConfiguration setUsesEmbeddedMessagesLayout:]
  -[PUPickerConfiguration isValidConfiguration]
  -[PUPickerConfiguration filter]
  -[PUPickerConfiguration allowsDownload]
  -[PUPickerConfiguration setAllowsDownload:]
  -[PUPickerConfiguration showsFileSizePicker]
  -[PUPickerConfiguration setShowsFileSizePicker:]
  -[PUPickerConfiguration requiresPickingConfirmation]
  -[PUPickerConfiguration setRequiresPickingConfirmation:]
  -[PUPickerConfiguration setLimitedLibraryClientIdentifier:]
  -[PUPickerConfiguration pickerClientIdentification]
  -[PUPickerConfiguration setUsesMemoriesLayout:]
  -[PUPickerConfiguration memoryAssetCollection]
  -[PUPickerConfiguration setMemoryAssetCollection:]
  -[PUPickerConfiguration encodeWithCoder:]
  -[PUPickerConfiguration setPickerClientIdentification:]
  -[PUPickerConfiguration allowsAssetData]
  -[PUPickerConfiguration allowsAssetIdentifiers]
  -[PUPickerConfiguration shouldRequestCurrentIfPossible]
  -[PUPickerConfiguration preselectedAssetIdentifiers]


PUCurationClassificationSignalAssetBrowserDebugViewController : PUPhotosAlbumViewController <UIPickerViewDataSource, UIPickerViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCurationClassificationSignalAssetBrowserDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController .cxx_destruct]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController viewDidLoad]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController setSignalConfidenceByAssetUUID:withSignalName:operatingPoint:highPrecisionOperatingPoint:highRecallOperatingPoint:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _update]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _presentTapToRadar]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController numberOfComponentsInPickerView:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController pickerView:numberOfRowsInComponent:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController pickerView:rowHeightForComponent:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController pickerView:titleForRow:forComponent:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController pickerView:didSelectRow:inComponent:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _editSettings:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _doneEditingSettings:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _setMinimum:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _setMaximum:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _setShowsVideos:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _fileRadarWithIncorrectAssets:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _writeDiagnosticsToURL:incorrectAssets:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController _cloneAsset:toDirectory:]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController shouldShowToolbar]
  -[PUCurationClassificationSignalAssetBrowserDebugViewController newToolbarItems]


PUAssetPickerSearchSuggestionsHeaderView : UIView <UICollectionViewDelegate, SearchSuggestionsCollectionViewLayoutUpdatesDelegate>
 @property  <PUAssetPickerSearchSuggestionsSelectionDelegate> *suggestionsSelectionDelegate
 @property  UICollectionView *collectionView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetPickerSearchSuggestionsHeaderView collectionView:didSelectItemAtIndexPath:]
  -[PUAssetPickerSearchSuggestionsHeaderView .cxx_destruct]
  -[PUAssetPickerSearchSuggestionsHeaderView suggestionsSelectionDelegate]
  -[PUAssetPickerSearchSuggestionsHeaderView didInvalidateLayout:]
  -[PUAssetPickerSearchSuggestionsHeaderView setSuggestionsSelectionDelegate:]
  -[PUAssetPickerSearchSuggestionsHeaderView collectionView]
  -[PUAssetPickerSearchSuggestionsHeaderView sizeThatFits:]
  -[PUAssetPickerSearchSuggestionsHeaderView initWithCollectionViewLayout:]


PUActivitySharingConfiguration : NSObject
 @property  PHFetchResult *collectionListFetchResult
 @property  PUPhotoSelectionManager *selectionManager
 @property  PXPhotosDataSource *photosDataSource
 @property  NSDictionary *assetsFetchResultsByAssetCollection
 @property  NSArray *activities
 @property  NSArray *excludedActivityTypes
 @property  BOOL allowsAirPlayActivity
 @property  BOOL allowsRemoveFromFeaturedPhotosActivity
 @property  BOOL allowsSuggestLessPersonActivity
 @property  BOOL allowsEditDateTimeActivity
 @property  BOOL allowsEditLocationActivity
 @property  PHPerson *person
 @property  BOOL wantsActionSheet
 @property  BOOL excludeShareActivity
 @property  NSString *title
 @property  NSString *subtitle
 @property  <PXDisplayAsset> *keyAsset
 @property  long long sourceOrigin

  // instance methods
  -[PUActivitySharingConfiguration activities]
  -[PUActivitySharingConfiguration photosDataSource]
  -[PUActivitySharingConfiguration setPhotosDataSource:]
  -[PUActivitySharingConfiguration setTitle:]
  -[PUActivitySharingConfiguration setActivities:]
  -[PUActivitySharingConfiguration setExcludedActivityTypes:]
  -[PUActivitySharingConfiguration .cxx_destruct]
  -[PUActivitySharingConfiguration setPerson:]
  -[PUActivitySharingConfiguration setSubtitle:]
  -[PUActivitySharingConfiguration person]
  -[PUActivitySharingConfiguration selectionManager]
  -[PUActivitySharingConfiguration initWithCollectionsFetchResult:selectionManager:]
  -[PUActivitySharingConfiguration wantsActionSheet]
  -[PUActivitySharingConfiguration setWantsActionSheet:]
  -[PUActivitySharingConfiguration setKeyAsset:]
  -[PUActivitySharingConfiguration setExcludeShareActivity:]
  -[PUActivitySharingConfiguration setSourceOrigin:]
  -[PUActivitySharingConfiguration keyAsset]
  -[PUActivitySharingConfiguration subtitle]
  -[PUActivitySharingConfiguration collectionListFetchResult]
  -[PUActivitySharingConfiguration title]
  -[PUActivitySharingConfiguration setAssetsFetchResultsByAssetCollection:]
  -[PUActivitySharingConfiguration setAllowsAirPlayActivity:]
  -[PUActivitySharingConfiguration assetsFetchResultsByAssetCollection]
  -[PUActivitySharingConfiguration allowsAirPlayActivity]
  -[PUActivitySharingConfiguration allowsRemoveFromFeaturedPhotosActivity]
  -[PUActivitySharingConfiguration allowsSuggestLessPersonActivity]
  -[PUActivitySharingConfiguration allowsEditDateTimeActivity]
  -[PUActivitySharingConfiguration allowsEditLocationActivity]
  -[PUActivitySharingConfiguration excludeShareActivity]
  -[PUActivitySharingConfiguration setAllowsRemoveFromFeaturedPhotosActivity:]
  -[PUActivitySharingConfiguration setAllowsSuggestLessPersonActivity:]
  -[PUActivitySharingConfiguration setAllowsEditDateTimeActivity:]
  -[PUActivitySharingConfiguration setAllowsEditLocationActivity:]
  -[PUActivitySharingConfiguration excludedActivityTypes]
  -[PUActivitySharingConfiguration sourceOrigin]


PUAddToAlbumActivity : PXActivity
  // class methods
  +[PUAddToAlbumActivity activityCategory]

  // instance methods
  -[PUAddToAlbumActivity .cxx_destruct]
  -[PUAddToAlbumActivity _systemImageName]
  -[PUAddToAlbumActivity activityType]
  -[PUAddToAlbumActivity canPerformWithActivityItems:]
  -[PUAddToAlbumActivity performActivity]
  -[PUAddToAlbumActivity _albumPickerViewControllerWithAssets:]
  -[PUAddToAlbumActivity _presentActivityOnViewController:animated:completion:]
  -[PUAddToAlbumActivity activityTitle]
  -[PUAddToAlbumActivity _activityBundleImageConfiguration]
  -[PUAddToAlbumActivity _syndicationAssetSavingHelperWithAssets:]
  -[PUAddToAlbumActivity activityImage]


PUAdjustmentInfo : NSObject
 @property  NSString *localizedName
 @property  NSString *localizedSectionName
 @property  NSString *iconName
 @property  BOOL enabled
 @property  double defaultLevel
 @property  double identityLevel
 @property  double minimumLevel
 @property  double maximumLevel
 @property  double baseLevel
 @property  double currentLevel
 @property  double lastAdjustedLevel
 @property  NSString *identifier
 @property  NSString *adjustmentKey
 @property  NSString *settingKey
 @property  NSString *attributeKey
 @property  <PUAdjustmentCustomBehavior> *customSettingDelegate
 @property  double normalizedCurrentLevel
 @property  double normalizedDefaultLevel

  // instance methods
  -[PUAdjustmentInfo localizedName]
  -[PUAdjustmentInfo currentLevel]
  -[PUAdjustmentInfo setLocalizedName:]
  -[PUAdjustmentInfo .cxx_destruct]
  -[PUAdjustmentInfo maximumLevel]
  -[PUAdjustmentInfo enabled]
  -[PUAdjustmentInfo minimumLevel]
  -[PUAdjustmentInfo defaultLevel]
  -[PUAdjustmentInfo setLastAdjustedLevel:]
  -[PUAdjustmentInfo localizedSectionName]
  -[PUAdjustmentInfo identifier]
  -[PUAdjustmentInfo adjustmentKey]
  -[PUAdjustmentInfo attributeKey]
  -[PUAdjustmentInfo identityLevel]
  -[PUAdjustmentInfo lastAdjustedLevel]
  -[PUAdjustmentInfo normalizedCurrentLevel]
  -[PUAdjustmentInfo normalizedDefaultLevel]
  -[PUAdjustmentInfo setLocalizedSectionName:]
  -[PUAdjustmentInfo setDefaultLevel:]
  -[PUAdjustmentInfo setIdentityLevel:]
  -[PUAdjustmentInfo setMinimumLevel:]
  -[PUAdjustmentInfo setMaximumLevel:]
  -[PUAdjustmentInfo setBaseLevel:]
  -[PUAdjustmentInfo setAdjustmentKey:]
  -[PUAdjustmentInfo setSettingKey:]
  -[PUAdjustmentInfo customSettingDelegate]
  -[PUAdjustmentInfo setCustomSettingDelegate:]
  -[PUAdjustmentInfo setAttributeKey:]
  -[PUAdjustmentInfo setIconName:]
  -[PUAdjustmentInfo copy]
  -[PUAdjustmentInfo setIdentifier:]
  -[PUAdjustmentInfo baseLevel]
  -[PUAdjustmentInfo settingKey]
  -[PUAdjustmentInfo setCurrentLevel:]
  -[PUAdjustmentInfo setEnabled:]
  -[PUAdjustmentInfo iconName]


PUAdjustmentsDataSource : NSObject <PUAdjustmentsViewDataSource>
 @property  NSMutableArray *adjustmentInfoSections
 @property  PICompositionController *compositionController
 @property  PUAutoAdjustmentController *autoEnhanceController
 @property  PUPhotoEditValuesCalculator *valuesCalculator
 @property  unsigned long assetType
 @property  <PUAdjustmentsDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAdjustmentsDataSource assetType]
  -[PUAdjustmentsDataSource renderer]
  -[PUAdjustmentsDataSource adjustmentInfoSections]
  -[PUAdjustmentsDataSource autoEnhanceController]
  -[PUAdjustmentsDataSource _createAdjustmentInfos]
  -[PUAdjustmentsDataSource infoForItemAtIndexPath:]
  -[PUAdjustmentsDataSource _modifyAdjustmentForInfo:]
  -[PUAdjustmentsDataSource setAdjustmentEnabled:atIndexPath:completionHandler:]
  -[PUAdjustmentsDataSource resetInfoAtIndexPath:]
  -[PUAdjustmentsDataSource canModifyAdjustmentAtIndexPath:]
  -[PUAdjustmentsDataSource modifyValue:atIndexPath:]
  -[PUAdjustmentsDataSource _resetEnabledStateForAutoEnhancedInfos]
  -[PUAdjustmentsDataSource valuesCalculator]
  -[PUAdjustmentsDataSource numberOfItemsInSection:]
  -[PUAdjustmentsDataSource setAssetType:]
  -[PUAdjustmentsDataSource numberOfSections]
  -[PUAdjustmentsDataSource .cxx_destruct]
  -[PUAdjustmentsDataSource setDelegate:]
  -[PUAdjustmentsDataSource setupWithCompositionController:valuesCalculator:autoAdjustmentController:assetType:]
  -[PUAdjustmentsDataSource compositionControllerDidChange]
  -[PUAdjustmentsDataSource setAdjustmentInfoSections:]
  -[PUAdjustmentsDataSource setAutoEnhanceController:]
  -[PUAdjustmentsDataSource setValuesCalculator:]
  -[PUAdjustmentsDataSource compositionController]
  -[PUAdjustmentsDataSource delegate]
  -[PUAdjustmentsDataSource _enableNonAutoAjustments:]
  -[PUAdjustmentsDataSource _updateAdjustmentInfos]
  -[PUAdjustmentsDataSource _setDefaultsForInfo:]
  -[PUAdjustmentsDataSource _newAdjustmentInfoWithIdentifier:adjustmentKey:settingKey:attributeKey:]
  -[PUAdjustmentsDataSource _autoEnhanceAdjustmentInfo]
  -[PUAdjustmentsDataSource _lightAdjustmentInfos]
  -[PUAdjustmentsDataSource _colorAdjustmentInfos]
  -[PUAdjustmentsDataSource _detailAdjustmentInfos]
  -[PUAdjustmentsDataSource _vignetteAdjustmentInfos]
  -[PUAdjustmentsDataSource _smartBlackAndWhiteAdjustmentInfos]
  -[PUAdjustmentsDataSource _debugAdjustmentInfos]
  -[PUAdjustmentsDataSource _newAdjustmentInfoWithAdjustmentKey:settingKey:attributeKey:]
  -[PUAdjustmentsDataSource setCompositionController:]


PUAutoEnhanceAdjustmentCustomBehavior : NSObject <PUAdjustmentCustomBehavior>
 @property  PUAdjustmentsDataSource *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAutoEnhanceAdjustmentCustomBehavior dataSource:adjustmentInfo:setEnabled:completionHandler:]
  -[PUAutoEnhanceAdjustmentCustomBehavior setDataSource:]
  -[PUAutoEnhanceAdjustmentCustomBehavior .cxx_destruct]
  -[PUAutoEnhanceAdjustmentCustomBehavior dataSource]


PUBrillianceAdjustmentCustomBehavior : NSObject <PUAdjustmentCustomBehavior>
 @property  BOOL calculatingStatistics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBrillianceAdjustmentCustomBehavior dataSource:adjustmentInfo:setEnabled:completionHandler:]
  -[PUBrillianceAdjustmentCustomBehavior dataSource:adjustmentInfo:modifyValue:]
  -[PUBrillianceAdjustmentCustomBehavior populateSmartToneStatisticsForDataSource:adjustmentInfo:completionHandler:]
  -[PUBrillianceAdjustmentCustomBehavior setCalculatingStatistics:]
  -[PUBrillianceAdjustmentCustomBehavior calculatingStatistics]


PUVignetteAdjustmentCustomBehavior : NSObject <PUAdjustmentCustomBehavior>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVignetteAdjustmentCustomBehavior dataSource:adjustmentInfo:populateNewAdjustmentController:]


PUAdjustmentsToolController : PUPhotoEditToolController <UIGestureRecognizerDelegate, PUAdjustmentsDataSourceDelegate, PUAdjustmentViewControllerDelegate, PUAdjustmentsToolControllerPPT>
 @property  PXUISnappingController *_snappingController
 @property  PUAdjustmentsDataSource *dataSource
 @property  CEKBadgeTextView *badgeView
 @property  PUAutoAdjustmentController *autoAdjustmentController
 @property  PUAdjustmentsToolControllerSpec *toolControllerSpec
 @property  long long initialAction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAdjustmentsToolController validateCommand:]
  -[PUAdjustmentsToolController localizedName]
  -[PUAdjustmentsToolController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUAdjustmentsToolController badgeView]
  -[PUAdjustmentsToolController adjustmentsDataChanged:]
  -[PUAdjustmentsToolController traitCollectionDidChange:]
  -[PUAdjustmentsToolController setDataSource:]
  -[PUAdjustmentsToolController .cxx_destruct]
  -[PUAdjustmentsToolController setBadgeView:]
  -[PUAdjustmentsToolController viewDidLoad]
  -[PUAdjustmentsToolController viewDidAppear:]
  -[PUAdjustmentsToolController initWithNibName:bundle:]
  -[PUAdjustmentsToolController dataSource]
  -[PUAdjustmentsToolController setBackdropViewGroupName:]
  -[PUAdjustmentsToolController setAutoAdjustmentController:]
  -[PUAdjustmentsToolController _snappingController]
  -[PUAdjustmentsToolController _setSnappingController:]
  -[PUAdjustmentsToolController updateAdjustmentControls]
  -[PUAdjustmentsToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PUAdjustmentsToolController autoAdjustmentController]
  -[PUAdjustmentsToolController viewDidLayoutSubviews]
  -[PUAdjustmentsToolController canPerformAction:withSender:]
  -[PUAdjustmentsToolController viewWillAppear:]
  -[PUAdjustmentsToolController autoEnhanceActionStateChanged]
  -[PUAdjustmentsToolController _updateBackgroundAnimated:]
  -[PUAdjustmentsToolController resetToDefaultValueAnimated:]
  -[PUAdjustmentsToolController initialAction]
  -[PUAdjustmentsToolController setInitialAction:]
  -[PUAdjustmentsToolController didBecomeActiveTool]
  -[PUAdjustmentsToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUAdjustmentsToolController specDidChange]
  -[PUAdjustmentsToolController compositionControllerDidChangeForAdjustments:]
  -[PUAdjustmentsToolController _updateBadgeTextWithInfo:]
  -[PUAdjustmentsToolController _performInitialAction]
  -[PUAdjustmentsToolController autoEnhanceAssets:]
  -[PUAdjustmentsToolController _ppt_scrollAfterDelay:]
  -[PUAdjustmentsToolController adjustmentsViewControllerDidUpdateSelectedControl:]
  -[PUAdjustmentsToolController ppt_selectLightSlider:]
  -[PUAdjustmentsToolController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUAdjustmentsToolController adjustmentsRenderer:]
  -[PUAdjustmentsToolController adjustmentsViewControllerDidAppear:]
  -[PUAdjustmentsToolController ppt_selectColorSlider:]
  -[PUAdjustmentsToolController ppt_selectBWSlider:]
  -[PUAdjustmentsToolController ppt_scrollSelectedSliderByDelta]
  -[PUAdjustmentsToolController ppt_setSteps:]
  -[PUAdjustmentsToolController mediaViewIsReady]
  -[PUAdjustmentsToolController setUseGradientBackground:animated:]
  -[PUAdjustmentsToolController toolbarIcon]
  -[PUAdjustmentsToolController centerToolbarView]
  -[PUAdjustmentsToolController canResetToDefaultValue]
  -[PUAdjustmentsToolController localizedResetToolActionTitle]
  -[PUAdjustmentsToolController wantsZoomAndPanEnabled]
  -[PUAdjustmentsToolController wantsSliderKeyControl]
  -[PUAdjustmentsToolController increaseSliderValue:]
  -[PUAdjustmentsToolController decreaseSliderValue:]
  -[PUAdjustmentsToolController installTogglePreviewGestureRecognizer:]
  -[PUAdjustmentsToolController installLivePhotoPlaybackGestureRecognizer:]
  -[PUAdjustmentsToolController willBecomeActiveTool]
  -[PUAdjustmentsToolController toolControllerTag]
  -[PUAdjustmentsToolController _sliderLength]


PUAdjustmentsToolControllerSpec : PUPhotoEditToolControllerSpec
 @property  double sliderLength

  // instance methods
  -[PUAdjustmentsToolControllerSpec standardBottomBarHeight]
  -[PUAdjustmentsToolControllerSpec sliderLength]


PUPhotoSceneHUD : UIView
 @property  PXHUDView *hudView
 @property  NSURL *mdataURL

  // instance methods
  -[PUPhotoSceneHUD .cxx_destruct]
  -[PUPhotoSceneHUD update]
  -[PUPhotoSceneHUD hudView]
  -[PUPhotoSceneHUD mdataURL]
  -[PUPhotoSceneHUD initWithPhoto:]


PUAdjustmentsViewController : UIViewController <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UIGestureRecognizerDelegate, PUPhotoEditBaseAdjustmentCellDelegate, CEKSliderDelegate>
 @property  UICollectionView *collectionView
 @property  PUAdjustmentsViewFlowLayout *collectionViewLayout
 @property  CEKSlider *slider
 @property  NSIndexPath *selectedIndexPath
 @property  {CGSize=dd} controlSize
 @property  BOOL didSetupControls
 @property  BOOL isAnimatingScroll
 @property  PUSelectionFeedbackGenerator *selectionFeedbackGenerator
 @property  BOOL didPerformHapticFeedback
 @property  <PUAdjustmentsViewDataSource> *dataSource
 @property  <PUAdjustmentViewControllerDelegate> *delegate
 @property  long long layoutDirection
 @property  BOOL shouldDisplayControlValues
 @property  BOOL shouldDisplayMappedValues
 @property  PUAdjustmentInfo *selectedAdjustmentInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAdjustmentsViewController collectionView:cellForItemAtIndexPath:]
  -[PUAdjustmentsViewController slider]
  -[PUAdjustmentsViewController collectionView:numberOfItemsInSection:]
  -[PUAdjustmentsViewController collectionView:canFocusItemAtIndexPath:]
  -[PUAdjustmentsViewController layoutDirection]
  -[PUAdjustmentsViewController collectionView:layout:insetForSectionAtIndex:]
  -[PUAdjustmentsViewController setLayoutDirection:]
  -[PUAdjustmentsViewController numberOfSectionsInCollectionView:]
  -[PUAdjustmentsViewController collectionView:didSelectItemAtIndexPath:]
  -[PUAdjustmentsViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[PUAdjustmentsViewController isAnimatingScroll]
  -[PUAdjustmentsViewController controlSize]
  -[PUAdjustmentsViewController setSelectionFeedbackGenerator:]
  -[PUAdjustmentsViewController setDataSource:]
  -[PUAdjustmentsViewController setIsAnimatingScroll:]
  -[PUAdjustmentsViewController setControlSize:]
  -[PUAdjustmentsViewController selectionFeedbackGenerator]
  -[PUAdjustmentsViewController .cxx_destruct]
  -[PUAdjustmentsViewController scrollViewDidEndScrollingAnimation:]
  -[PUAdjustmentsViewController collectionViewLayout]
  -[PUAdjustmentsViewController viewDidLoad]
  -[PUAdjustmentsViewController preferredUserInterfaceStyle]
  -[PUAdjustmentsViewController setDelegate:]
  -[PUAdjustmentsViewController viewDidAppear:]
  -[PUAdjustmentsViewController setSlider:]
  -[PUAdjustmentsViewController initWithNibName:bundle:]
  -[PUAdjustmentsViewController dataSource]
  -[PUAdjustmentsViewController collectionView]
  -[PUAdjustmentsViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUAdjustmentsViewController scrollViewDidScroll:]
  -[PUAdjustmentsViewController setCollectionView:]
  -[PUAdjustmentsViewController _sliderDidEndScrolling]
  -[PUAdjustmentsViewController didPerformHapticFeedback]
  -[PUAdjustmentsViewController _performFeedbackIfNeeded]
  -[PUAdjustmentsViewController canToggleCell:]
  -[PUAdjustmentsViewController didToggleCell:]
  -[PUAdjustmentsViewController sliderWillBeginScrolling:]
  -[PUAdjustmentsViewController slider:willUpdateValue:withVelocity:]
  -[PUAdjustmentsViewController sliderWillEndScrolling:withVelocity:targetContentOffset:]
  -[PUAdjustmentsViewController sliderDidEndScrolling:]
  -[PUAdjustmentsViewController _resetControlsAtIndexPath:]
  -[PUAdjustmentsViewController _backgroundImageForItemAtIndexPath:]
  -[PUAdjustmentsViewController resetControls]
  -[PUAdjustmentsViewController setShouldDisplayControlValues:]
  -[PUAdjustmentsViewController setShouldDisplayMappedValues:]
  -[PUAdjustmentsViewController didSetupControls]
  -[PUAdjustmentsViewController setDidSetupControls:]
  -[PUAdjustmentsViewController setCollectionViewLayout:]
  -[PUAdjustmentsViewController viewDidLayoutSubviews]
  -[PUAdjustmentsViewController scrollViewWillBeginDragging:]
  -[PUAdjustmentsViewController increaseAdjustmentValue:]
  -[PUAdjustmentsViewController decreaseAdjustmentValue:]
  -[PUAdjustmentsViewController toggleAutoEnhance]
  -[PUAdjustmentsViewController selectedAdjustmentInfo]
  -[PUAdjustmentsViewController updateControls]
  -[PUAdjustmentsViewController delegate]
  -[PUAdjustmentsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUAdjustmentsViewController selectedIndexPath]
  -[PUAdjustmentsViewController sliderValueChanged:]
  -[PUAdjustmentsViewController setDidPerformHapticFeedback:]
  -[PUAdjustmentsViewController _updateViewLayout]
  -[PUAdjustmentsViewController _updateSliderForControlAtIndexPath:]
  -[PUAdjustmentsViewController _updateCollectionViewLayoutDirection:]
  -[PUAdjustmentsViewController _updateSelectedInfo]
  -[PUAdjustmentsViewController shouldDisplayControlValues]
  -[PUAdjustmentsViewController shouldDisplayMappedValues]
  -[PUAdjustmentsViewController _updateCell:withInfo:]
  -[PUAdjustmentsViewController _circularImageWithSize:color:]
  -[PUAdjustmentsViewController _setupCellBackgroundImagesIfNeeded]
  -[PUAdjustmentsViewController scrollViewDidEndDecelerating:]
  -[PUAdjustmentsViewController setSelectedIndexPath:]


PUAggregateDictionaryBrowsingViewModelTracer : NSObject <PUBrowsingViewModelChangeObserver>
 @property  NSHashTable *_viewingContexts
 @property  BOOL _isPerformingChanges
 @property  BOOL _isPerformingUpdate
 @property  BOOL _needsUpdateViewedAsset
 @property  BOOL _needsUpdateViewedAssetLongEnough
 @property  BOOL _needsUpdatePlayingVideo
 @property  BOOL _didScheduleCurrentAssetChange
 @property  BOOL _isApplicationActive
 @property  <PUDisplayAsset> *_viewedAsset
 @property  double _viewedAssetStartTime
 @property  BOOL _viewedAssetLongEnough
 @property  BOOL _didScheduleViewUpdate
 @property  BOOL _isPlayingVideo
 @property  BOOL _isPlayingStreamedVideo
 @property  BOOL _isStreamedVideoActuallyPlaying
 @property  BOOL _isStreamedVideoStalled
 @property  BOOL _needsUpdateOneUpSessionActive
 @property  BOOL _oneUpSessionActive
 @property  double _oneUpSessionStartTime
 @property  PUBrowsingViewModel *browsingViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAggregateDictionaryBrowsingViewModelTracer _setPerformingChanges:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isStreamedVideoStalled]
  -[PUAggregateDictionaryBrowsingViewModelTracer browsingViewModel]
  -[PUAggregateDictionaryBrowsingViewModelTracer _applicationWillResignActive:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _assertInsideChangeBlock]
  -[PUAggregateDictionaryBrowsingViewModelTracer performChanges:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isPerformingChanges]
  -[PUAggregateDictionaryBrowsingViewModelTracer _updateIfNeeded]
  -[PUAggregateDictionaryBrowsingViewModelTracer _scheduleCurrentAssetChange]
  -[PUAggregateDictionaryBrowsingViewModelTracer _updatePlayingVideoIfNeeded]
  -[PUAggregateDictionaryBrowsingViewModelTracer _handleScheduledViewUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setNeedsUpdateViewedAssetLongEnough:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setNeedsUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setViewedAssetStartTime:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setOneUpSessionStartTime:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _needsUpdateViewedAsset]
  -[PUAggregateDictionaryBrowsingViewModelTracer .cxx_destruct]
  -[PUAggregateDictionaryBrowsingViewModelTracer removeViewingContext:]
  -[PUAggregateDictionaryBrowsingViewModelTracer addViewingContext:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _updateOneUpSessionActive]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setDidScheduleViewUpdate:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setNeedsUpdatePlayingVideo:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setNeedsUpdateViewedAsset:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _updateViewedAssetLongEnoughIfNeeded]
  -[PUAggregateDictionaryBrowsingViewModelTracer _invalidateViewedAsset]
  -[PUAggregateDictionaryBrowsingViewModelTracer _needsUpdatePlayingVideo]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isApplicationActive]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isStreamedVideoActuallyPlaying]
  -[PUAggregateDictionaryBrowsingViewModelTracer viewModel:didChange:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setOneUpSessionActive:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _invalidateOneUpSessionActive]
  -[PUAggregateDictionaryBrowsingViewModelTracer init]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isPlayingVideo]
  -[PUAggregateDictionaryBrowsingViewModelTracer _invalidateViewedAssetLongEnough]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isPerformingUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setStreamedVideoActuallyPlaying:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _needsUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setViewedAsset:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _invalidatePlayingVideo]
  -[PUAggregateDictionaryBrowsingViewModelTracer _viewedAssetStartTime]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setPerformingUpdate:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _viewingContexts]
  -[PUAggregateDictionaryBrowsingViewModelTracer _didScheduleCurrentAssetChange]
  -[PUAggregateDictionaryBrowsingViewModelTracer _didScheduleViewUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setStreamedVideoStalled:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setViewedAssetLongEnough:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setNeedsUpdateOneUpSessionActive:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _updateViewedAssetIfNeeded]
  -[PUAggregateDictionaryBrowsingViewModelTracer _needsUpdateViewedAssetLongEnough]
  -[PUAggregateDictionaryBrowsingViewModelTracer _needsUpdateOneUpSessionActive]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setPlayingVideo:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _handleScheduledCurrentAssetChange]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setPlayingStreamedVideo:]
  -[PUAggregateDictionaryBrowsingViewModelTracer dealloc]
  -[PUAggregateDictionaryBrowsingViewModelTracer _applicationDidBecomeActive:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _oneUpSessionStartTime]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setApplicationActive:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _oneUpSessionActive]
  -[PUAggregateDictionaryBrowsingViewModelTracer _scheduleViewUpdate]
  -[PUAggregateDictionaryBrowsingViewModelTracer _viewedAssetLongEnough]
  -[PUAggregateDictionaryBrowsingViewModelTracer _setDidScheduleCurrentAssetChange:]
  -[PUAggregateDictionaryBrowsingViewModelTracer _viewedAsset]
  -[PUAggregateDictionaryBrowsingViewModelTracer _isPlayingStreamedVideo]
  -[PUAggregateDictionaryBrowsingViewModelTracer initWithBrowsingViewModel:]


PUAggregateDictionaryTracer : NSObject
 @property  NSMapTable *_browsingViewModelTracers
 @property  <PUDisplayAsset> *_lastViewedAsset
 @property  NSDate *_lastPlayStartDate
 @property  <PUDisplayAsset> *_lastPlayedAsset
 @property  long long _assetPlayCount
 @property  <PUDisplayAsset> *_streamedVideo
 @property  BOOL _streamedVideoDidStartPlaying
 @property  double _streamedVideoBeginTime
 @property  long long _streamedVideoStallCount
 @property  long long _oneUpPresentationOrigin
 @property  <PUDisplayAsset> *_lastViewedAssetPerOrigin

  // class methods
  +[PUAggregateDictionaryTracer sharedTracer]

  // instance methods
  -[PUAggregateDictionaryTracer _setStreamedVideoDidStartPlaying:]
  -[PUAggregateDictionaryTracer _streamedVideoStallCount]
  -[PUAggregateDictionaryTracer set_lastViewedAssetPerOrigin:]
  -[PUAggregateDictionaryTracer userWillPlayAssetInOneUp:]
  -[PUAggregateDictionaryTracer _setStreamedVideoBeginTime:]
  -[PUAggregateDictionaryTracer .cxx_destruct]
  -[PUAggregateDictionaryTracer userStoppedViewingCurrentAssetOfBrowsingViewModel:inContext:]
  -[PUAggregateDictionaryTracer _setAssetPlayCount:]
  -[PUAggregateDictionaryTracer userViewedAssetInOneUp:]
  -[PUAggregateDictionaryTracer streamedVideoPlaybackBegan:]
  -[PUAggregateDictionaryTracer _lastViewedAsset]
  -[PUAggregateDictionaryTracer invalidateContext:]
  -[PUAggregateDictionaryTracer init]
  -[PUAggregateDictionaryTracer userDidEnterOneUpFromOrigin:]
  -[PUAggregateDictionaryTracer vitalityPlayedForAssetInOneUp:]
  -[PUAggregateDictionaryTracer streamedVideoPlaybackStartedActuallyPlaying:]
  -[PUAggregateDictionaryTracer userBrowsedOneUpFor:]
  -[PUAggregateDictionaryTracer userViewedPhotoInOneUpFor:]
  -[PUAggregateDictionaryTracer streamedVideoPlaybackEnded]
  -[PUAggregateDictionaryTracer _setLastPlayStartDate:]
  -[PUAggregateDictionaryTracer _browsingViewModelTracerForBrowsingViewModel:createIfNeeded:]
  -[PUAggregateDictionaryTracer _oneUpPresentationOrigin]
  -[PUAggregateDictionaryTracer streamedVideoPlaybackStalled:]
  -[PUAggregateDictionaryTracer _lastPlayedAsset]
  -[PUAggregateDictionaryTracer userViewedHDRPhotoInOneUpFor:]
  -[PUAggregateDictionaryTracer userDidPlayAssetInOneUp:]
  -[PUAggregateDictionaryTracer _streamedVideoBeginTime]
  -[PUAggregateDictionaryTracer _assetTypeForAsset:]
  -[PUAggregateDictionaryTracer userStartedViewingCollection:withListViewItemSelectionTrackerKey:]
  -[PUAggregateDictionaryTracer _lastPlayStartDate]
  -[PUAggregateDictionaryTracer _setLastViewedAsset:]
  -[PUAggregateDictionaryTracer _assetPlayCount]
  -[PUAggregateDictionaryTracer _setStreamedVideo:]
  -[PUAggregateDictionaryTracer _streamedVideo]
  -[PUAggregateDictionaryTracer set_oneUpPresentationOrigin:]
  -[PUAggregateDictionaryTracer _browsingViewModelTracers]
  -[PUAggregateDictionaryTracer _streamedVideoDidStartPlaying]
  -[PUAggregateDictionaryTracer userStartedViewingCurrentAssetOfBrowsingViewModel:inContext:]
  -[PUAggregateDictionaryTracer _setStreamedVideoStallCount:]
  -[PUAggregateDictionaryTracer _setLastPlayedAsset:]
  -[PUAggregateDictionaryTracer _lastViewedAssetPerOrigin]


PUAirPlayActivity : PXActivity <PHAirPlayControllerRouteObserver>
 @property  BOOL routeAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAirPlayActivity _systemImageName]
  -[PUAirPlayActivity activityType]
  -[PUAirPlayActivity canPerformWithActivityItems:]
  -[PUAirPlayActivity performActivity]
  -[PUAirPlayActivity airPlayControllerRouteAvailabilityChanged:]
  -[PUAirPlayActivity init]
  -[PUAirPlayActivity activityTitle]
  -[PUAirPlayActivity dealloc]
  -[PUAirPlayActivity tearDownForCompletion]
  -[PUAirPlayActivity isRouteAvailable]
  -[PUAirPlayActivity _registerForAirPlayNotifications]
  -[PUAirPlayActivity _unregisterForAirPlayNotifications]


PUAirPlayContentRegistry : NSObject
 @property  NSPointerArray *_contentProviders
 @property  UIViewController *_cachedCurrentContent
 @property  <PHAirPlayControllerContentProvider> *currentContentProvider

  // instance methods
  -[PUAirPlayContentRegistry .cxx_destruct]
  -[PUAirPlayContentRegistry _updateCurrentContentProvider]
  -[PUAirPlayContentRegistry _setCurrentContentProvider:]
  -[PUAirPlayContentRegistry contentForController:]
  -[PUAirPlayContentRegistry init]
  -[PUAirPlayContentRegistry _indexOfContentProvider:]
  -[PUAirPlayContentRegistry _cachedCurrentContent]
  -[PUAirPlayContentRegistry _invalidateCurrentContent]
  -[PUAirPlayContentRegistry removeContentProvider:]
  -[PUAirPlayContentRegistry _contentProviders]
  -[PUAirPlayContentRegistry currentContentProvider]
  -[PUAirPlayContentRegistry _setCachedCurrentContent:]
  -[PUAirPlayContentRegistry _setContentProviders:]
  -[PUAirPlayContentRegistry addContentProvider:]
  -[PUAirPlayContentRegistry clearContent]


PUAirPlayRootViewController : UIViewController
 @property  NSArray *_childViewConstraints
 @property  UIViewController *childViewController

  // instance methods
  -[PUAirPlayRootViewController updateViewConstraints]
  -[PUAirPlayRootViewController .cxx_destruct]
  -[PUAirPlayRootViewController viewDidLoad]
  -[PUAirPlayRootViewController setChildViewController:animated:]
  -[PUAirPlayRootViewController childViewController]
  -[PUAirPlayRootViewController _childViewConstraints]
  -[PUAirPlayRootViewController _setChildViewConstraints:]
  -[PUAirPlayRootViewController setChildViewController:]


PUAirPlayRouteObserverRegistry : NSObject <PXSettingsKeyObserver>
 @property  NSHashTable *_routeObservers
 @property  AVOutputDeviceDiscoverySession *_discoverySession
 @property  NSObject<OS_dispatch_queue> *_discoverySessionIsolationQueue
 @property  unsigned long routeAvailability
 @property  BOOL _discoveryAllowed
 @property  unsigned long lastKnownRouteAvailability
 @property  NSDate *lastKnownRouteAvailabilityDate
 @property  <PUAirPlayRouteObserverRegistryDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAirPlayRouteObserverRegistry setLastKnownRouteAvailability:]
  -[PUAirPlayRouteObserverRegistry _setRouteObservers:]
  -[PUAirPlayRouteObserverRegistry .cxx_destruct]
  -[PUAirPlayRouteObserverRegistry setDelegate:]
  -[PUAirPlayRouteObserverRegistry _updateAllObservers]
  -[PUAirPlayRouteObserverRegistry init]
  -[PUAirPlayRouteObserverRegistry _routeObservers]
  -[PUAirPlayRouteObserverRegistry lastKnownRouteAvailability]
  -[PUAirPlayRouteObserverRegistry _isDiscoveryAllowed]
  -[PUAirPlayRouteObserverRegistry _appEnteredBackground:]
  -[PUAirPlayRouteObserverRegistry _discoverySession]
  -[PUAirPlayRouteObserverRegistry _discoverySessionIsolationQueue]
  -[PUAirPlayRouteObserverRegistry removeRouteObserver:]
  -[PUAirPlayRouteObserverRegistry delegate]
  -[PUAirPlayRouteObserverRegistry _discoverySessionIsolationQueue_updateRouteAvailability]
  -[PUAirPlayRouteObserverRegistry settings:changedValueForKey:]
  -[PUAirPlayRouteObserverRegistry lastKnownRouteAvailabilityDate]
  -[PUAirPlayRouteObserverRegistry routeAvailability]
  -[PUAirPlayRouteObserverRegistry _appEnteringForeground:]
  -[PUAirPlayRouteObserverRegistry _setDiscoverySession:]
  -[PUAirPlayRouteObserverRegistry dealloc]
  -[PUAirPlayRouteObserverRegistry _updateObserver:]
  -[PUAirPlayRouteObserverRegistry setLastKnownRouteAvailabilityDate:]
  -[PUAirPlayRouteObserverRegistry _setDiscoveryAllowed:]
  -[PUAirPlayRouteObserverRegistry _setDiscoverySessionIsolationQueue:]
  -[PUAirPlayRouteObserverRegistry _setRouteAvailability:]
  -[PUAirPlayRouteObserverRegistry _updateDiscoverySession]
  -[PUAirPlayRouteObserverRegistry addRouteObserver:]
  -[PUAirPlayRouteObserverRegistry _availableOutputDevicesDidChange:]


PUAirPlayScreen : NSObject <PXSettingsKeyObserver>
 @property  UIScreen *screen
 @property  NSString *identifier
 @property  unsigned long type
 @property  {CGSize=dd} size
 @property  UIWindow *_window
 @property  NSString *_typeName
 @property  unsigned long placeholderType
 @property  UIViewController *rootViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAirPlayScreen _setType:]
  -[PUAirPlayScreen _setIdentifier:]
  -[PUAirPlayScreen screen]
  -[PUAirPlayScreen initWithScreen:]
  -[PUAirPlayScreen rootViewController]
  -[PUAirPlayScreen _window]
  -[PUAirPlayScreen .cxx_destruct]
  -[PUAirPlayScreen setRootViewController:]
  -[PUAirPlayScreen placeholderType]
  -[PUAirPlayScreen init]
  -[PUAirPlayScreen isEqual:]
  -[PUAirPlayScreen _typeName]
  -[PUAirPlayScreen identifier]
  -[PUAirPlayScreen _setSize:]
  -[PUAirPlayScreen _setWindow:]
  -[PUAirPlayScreen type]
  -[PUAirPlayScreen settings:changedValueForKey:]
  -[PUAirPlayScreen size]
  -[PUAirPlayScreen dealloc]
  -[PUAirPlayScreen _setScreen:]
  -[PUAirPlayScreen isEqualToAirPlayScreen:]
  -[PUAirPlayScreen _updateWindow]


PUAirPlayScreenMap : NSObject
  // instance methods
  -[PUAirPlayScreenMap airPlayScreensCount]
  -[PUAirPlayScreenMap removeAirPlayScreen:]
  -[PUAirPlayScreenMap .cxx_destruct]
  -[PUAirPlayScreenMap addDetectedAirPlayScreen:]
  -[PUAirPlayScreenMap init]
  -[PUAirPlayScreenMap airPlayScreenForScreen:]
  -[PUAirPlayScreenMap allAirPlayScreens]


PUAirPlayScreenDetector : NSObject
 @property  PUAirPlayScreenMap *_detectedScreensMap
 @property  <PUAirPlayScreenReceiver> *receiver
 @property  NSArray *availableScreens

  // instance methods
  -[PUAirPlayScreenDetector setReceiver:]
  -[PUAirPlayScreenDetector _setDetectedScreensMap:]
  -[PUAirPlayScreenDetector .cxx_destruct]
  -[PUAirPlayScreenDetector init]
  -[PUAirPlayScreenDetector _lostScreen:]
  -[PUAirPlayScreenDetector availableScreens]
  -[PUAirPlayScreenDetector _detectedNewScreen:]
  -[PUAirPlayScreenDetector _setUpScreenNotifications]
  -[PUAirPlayScreenDetector _detectedScreensMap]
  -[PUAirPlayScreenDetector receiver]
  -[PUAirPlayScreenDetector _scanForAvailableScreensIfNeeded]
  -[PUAirPlayScreenDetector shouldIgnoreScreen:]


PUAirPlaySettings : PXSettings
 @property  BOOL ignoreMirroredScreens
 @property  BOOL ignoreScreenRecordingScreens
 @property  BOOL compensateForOverscan
 @property  unsigned long placeholderForSecondScreen
 @property  unsigned long placeholderForMirroredScreen
 @property  double minimumZoomForScrollPadding
 @property  double maximumZoomForScrollPadding
 @property  BOOL switchToMediaPresentationMode
 @property  double simulatedScreenContentWidth
 @property  double simulatedScreenContentHeight
 @property  long long routeAvailabilityOverride

  // class methods
  +[PUAirPlaySettings sharedInstance]
  +[PUAirPlaySettings settingsControllerModule]

  // instance methods
  -[PUAirPlaySettings compensateForOverscan]
  -[PUAirPlaySettings parentSettings]
  -[PUAirPlaySettings ignoreMirroredScreens]
  -[PUAirPlaySettings placeholderForMirroredScreen]
  -[PUAirPlaySettings setCompensateForOverscan:]
  -[PUAirPlaySettings switchToMediaPresentationMode]
  -[PUAirPlaySettings simulatedScreenContentWidth]
  -[PUAirPlaySettings setSwitchToMediaPresentationMode:]
  -[PUAirPlaySettings ignoreScreenRecordingScreens]
  -[PUAirPlaySettings setDefaultValues]
  -[PUAirPlaySettings setSimulatedScreenContentWidth:]
  -[PUAirPlaySettings routeAvailabilityOverride]
  -[PUAirPlaySettings setIgnoreMirroredScreens:]
  -[PUAirPlaySettings setMaximumZoomForScrollPadding:]
  -[PUAirPlaySettings setMinimumZoomForScrollPadding:]
  -[PUAirPlaySettings maximumZoomForScrollPadding]
  -[PUAirPlaySettings setPlaceholderForMirroredScreen:]
  -[PUAirPlaySettings placeholderForSecondScreen]
  -[PUAirPlaySettings setRouteAvailabilityOverride:]
  -[PUAirPlaySettings setIgnoreScreenRecordingScreens:]
  -[PUAirPlaySettings minimumZoomForScrollPadding]
  -[PUAirPlaySettings setPlaceholderForSecondScreen:]
  -[PUAirPlaySettings setSimulatedScreenContentHeight:]
  -[PUAirPlaySettings simulatedScreenContentHeight]


PUAlbumGadget : NSObject <PXDiagnosticsEnvironment, PXGadget>
 @property  PUAlbumListCellContentViewHelper *albumListCellContentViewHelper
 @property  BOOL contentViewVisible
 @property  BOOL needsUpdate
 @property  double lastPreferredHeight
 @property  PHCollection *collection
 @property  NSString *title
 @property  PUAlbumListCellContentView *albumListCellContentView
 @property  <PUAlbumGadgetDelegate> *albumGadgetDelegate
 @property  NSIndexSet *indexesOfHiddenStackItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long gadgetType
 @property  unsigned long gadgetCapabilities
 @property  PXGadgetSpec *gadgetSpec
 @property  <PXGadgetDelegate> *delegate
 @property  NSString *localizedTitle
 @property  unsigned long accessoryButtonType
 @property  NSString *accessoryButtonTitle
 @property  unsigned long headerStyle
 @property  long long priority
 @property  Class collectionViewItemClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleContentRect

  // instance methods
  -[PUAlbumGadget setGadgetSpec:]
  -[PUAlbumGadget setContentViewVisible:]
  -[PUAlbumGadget lastPreferredHeight]
  -[PUAlbumGadget gadgetCapabilities]
  -[PUAlbumGadget px_diagnosticsItemProvidersForPoint:inCoordinateSpace:]
  -[PUAlbumGadget gadgetType]
  -[PUAlbumGadget reconfigure]
  -[PUAlbumGadget contentViewWillAppear]
  -[PUAlbumGadget setAlbumGadgetDelegate:]
  -[PUAlbumGadget rectForStackItemAtIndex:inCoordinateSpace:]
  -[PUAlbumGadget gadgetSpec]
  -[PUAlbumGadget setLastPreferredHeight:]
  -[PUAlbumGadget initWithCollection:albumGadgetDelegate:]
  -[PUAlbumGadget _updateContent]
  -[PUAlbumGadget albumListCellContentView]
  -[PUAlbumGadget albumListCellContentViewHelper]
  -[PUAlbumGadget setIndexesOfHiddenStackItems:]
  -[PUAlbumGadget estimatedIndexInCollection:ofAssetForStackItemAtIndex:]
  -[PUAlbumGadget contentViewDidDisappear]
  -[PUAlbumGadget setCollection:]
  -[PUAlbumGadget indexesOfHiddenStackItems]
  -[PUAlbumGadget collection]
  -[PUAlbumGadget albumGadgetDelegate]
  -[PUAlbumGadget isContentViewVisible]
  -[PUAlbumGadget .cxx_destruct]
  -[PUAlbumGadget contentView]
  -[PUAlbumGadget setDelegate:]
  -[PUAlbumGadget init]
  -[PUAlbumGadget setNeedsUpdate:]
  -[PUAlbumGadget sizeThatFits:]
  -[PUAlbumGadget title]
  -[PUAlbumGadget delegate]
  -[PUAlbumGadget needsUpdate]


PUAlbumListCell : UICollectionViewCell
 @property  PUAlbumListCellContentView *albumListCellContentView

  // instance methods
  -[PUAlbumListCell setHighlighted:]
  -[PUAlbumListCell albumListCellContentView]
  -[PUAlbumListCell focusEffect]
  -[PUAlbumListCell initWithFrame:]
  -[PUAlbumListCell willTransitionFromLayout:toLayout:]
  -[PUAlbumListCell snapshotViewAfterScreenUpdates:]
  -[PUAlbumListCell didTransitionFromLayout:toLayout:]


PUAlbumListSeparatorView : UIView
 @property  UIColor *lineColor

  // instance methods
  -[PUAlbumListSeparatorView setLineColor:]
  -[PUAlbumListSeparatorView lineColor]
  -[PUAlbumListSeparatorView .cxx_destruct]
  -[PUAlbumListSeparatorView layoutSubviews]
  -[PUAlbumListSeparatorView initWithFrame:]


PUAlbumListTableViewCell : UITableViewCell
 @property  <PUAlbumListTableViewCellDelegate> *stateChangeDelegate

  // instance methods
  -[PUAlbumListTableViewCell .cxx_destruct]
  -[PUAlbumListTableViewCell sizeThatFits:]
  -[PUAlbumListTableViewCell willTransitionToState:]
  -[PUAlbumListTableViewCell stateChangeDelegate]
  -[PUAlbumListTableViewCell setStateChangeDelegate:]


PUAlbumListCellContentView : UIView <UITextFieldDelegate, UIGestureRecognizerDelegate>
 @property  PUStackView *stackView
 @property  PUPeopleAvatarView *avatarView
 @property  BOOL _showsTitleAndSubtitle
 @property  UITextField *_titleTextField
 @property  UILabel *_titleLabel
 @property  UILabel *_subtitleLabel
 @property  PXUIButton *_deleteButton
 @property  BOOL usesLabelForTitle
 @property  <PUAlbumListCellDelegate> *delegate
 @property  UIView *springLoadingTargetView
 @property  BOOL combinesPhotoDecorations
 @property  BOOL topInsetEnabled
 @property  BOOL showsAvatarView
 @property  UIView *customImageView
 @property  PXFocusInfo *focusInfo
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL shouldCenterTextHorizontally
 @property  double xInset
 @property  long long layout
 @property  unsigned long editCapabilities
 @property  BOOL editing
 @property  BOOL enabled
 @property  BOOL showsDeleteButtonWhenEditing
 @property  UIFont *titleFont
 @property  UIFont *subtitleFont
 @property  BOOL highlighted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAlbumListCellContentView setHighlighted:]
  -[PUAlbumListCellContentView _setTitleLabel:]
  -[PUAlbumListCellContentView focusInfo]
  -[PUAlbumListCellContentView _updateSubviewOrdering]
  -[PUAlbumListCellContentView combinesPhotoDecorations]
  -[PUAlbumListCellContentView stackView]
  -[PUAlbumListCellContentView setTitleFont:]
  -[PUAlbumListCellContentView _showsTitleAndSubtitle]
  -[PUAlbumListCellContentView setCombinesPhotoDecorations:]
  -[PUAlbumListCellContentView textFieldShouldReturn:]
  -[PUAlbumListCellContentView textFieldShouldBeginEditing:]
  -[PUAlbumListCellContentView topInsetEnabled]
  -[PUAlbumListCellContentView shouldCenterTextHorizontally]
  -[PUAlbumListCellContentView editCapabilities]
  -[PUAlbumListCellContentView _deleteButton]
  -[PUAlbumListCellContentView _titleFieldAlpha]
  -[PUAlbumListCellContentView setAvatarView:]
  -[PUAlbumListCellContentView setShouldCenterTextHorizontally:]
  -[PUAlbumListCellContentView setTitle:]
  -[PUAlbumListCellContentView setShowsAvatarView:]
  -[PUAlbumListCellContentView _titleTextField]
  -[PUAlbumListCellContentView _updateDeleteButtonAnimated:]
  -[PUAlbumListCellContentView subtitleFont]
  -[PUAlbumListCellContentView setEditing:animated:]
  -[PUAlbumListCellContentView _updateStackViewAnimated:]
  -[PUAlbumListCellContentView setEnabled:animated:]
  -[PUAlbumListCellContentView .cxx_destruct]
  -[PUAlbumListCellContentView _updateTitleFieldAnimated:]
  -[PUAlbumListCellContentView _updateAvatarView]
  -[PUAlbumListCellContentView setShowsTitle:animated:]
  -[PUAlbumListCellContentView avatarView]
  -[PUAlbumListCellContentView startPerformRetitleAction]
  -[PUAlbumListCellContentView layoutSubviews]
  -[PUAlbumListCellContentView _setSubtitleLabel:]
  -[PUAlbumListCellContentView setSubtitle:]
  -[PUAlbumListCellContentView springLoadingTargetView]
  -[PUAlbumListCellContentView setDelegate:]
  -[PUAlbumListCellContentView setUsesLabelForTitle:]
  -[PUAlbumListCellContentView setShowsDeleteButtonWhenEditing:]
  -[PUAlbumListCellContentView _subtitleLabel]
  -[PUAlbumListCellContentView setCustomImageView:]
  -[PUAlbumListCellContentView textField:shouldChangeCharactersInRange:replacementString:]
  -[PUAlbumListCellContentView setEditCapabilities:]
  -[PUAlbumListCellContentView _updateTitleStyle]
  -[PUAlbumListCellContentView setSubtitleFont:]
  -[PUAlbumListCellContentView showsAvatarView]
  -[PUAlbumListCellContentView showsDeleteButtonWhenEditing]
  -[PUAlbumListCellContentView titleFont]
  -[PUAlbumListCellContentView _deleteButtonCenter]
  -[PUAlbumListCellContentView textFieldDidEndEditing:]
  -[PUAlbumListCellContentView handleLabelTap:]
  -[PUAlbumListCellContentView _updateSubtitleLabelStyle]
  -[PUAlbumListCellContentView setXInset:]
  -[PUAlbumListCellContentView isHighlighted]
  -[PUAlbumListCellContentView sizeThatFits:]
  -[PUAlbumListCellContentView setTopInsetEnabled:]
  -[PUAlbumListCellContentView setEditCapabilities:animated:]
  -[PUAlbumListCellContentView gestureRecognizerShouldBegin:]
  -[PUAlbumListCellContentView prepareForReuse]
  -[PUAlbumListCellContentView setSubtitle:animated:]
  -[PUAlbumListCellContentView subtitle]
  -[PUAlbumListCellContentView setEditing:]
  -[PUAlbumListCellContentView isEnabled]
  -[PUAlbumListCellContentView title]
  -[PUAlbumListCellContentView initWithFrame:]
  -[PUAlbumListCellContentView _deleteAction:]
  -[PUAlbumListCellContentView isEditing]
  -[PUAlbumListCellContentView delegate]
  -[PUAlbumListCellContentView cancelPerformRetitleAction]
  -[PUAlbumListCellContentView usesLabelForTitle]
  -[PUAlbumListCellContentView customImageView]
  -[PUAlbumListCellContentView setLayout:]
  -[PUAlbumListCellContentView _setStackView:]
  -[PUAlbumListCellContentView _setTitleTextField:]
  -[PUAlbumListCellContentView setEnabled:]
  -[PUAlbumListCellContentView _setDeleteButton:]
  -[PUAlbumListCellContentView _setShowsTitleAndSubtitle:]
  -[PUAlbumListCellContentView xInset]
  -[PUAlbumListCellContentView _updateSubtitleLabelAnimated:]
  -[PUAlbumListCellContentView _titleTextFieldClearButtonModeForLayout:]
  -[PUAlbumListCellContentView _titleLabel]
  -[PUAlbumListCellContentView layout]
  -[PUAlbumListCellContentView handleTransitionFade:animate:]


PUAlbumListCellContentViewHelperConfiguration : NSObject
 @property  BOOL allowsEmailInSubtitle
 @property  BOOL showsDeleteButtonOnCellContentView
 @property  BOOL hasRoundedCorners
 @property  BOOL shouldUseTableView
 @property  BOOL shouldCenterTextHorizontally
 @property  BOOL hasClearBackgroundColor
 @property  long long cellContentViewLayout
 @property  unsigned long stackViewStyle
 @property  unsigned long folderStackViewStyle
 @property  long long imageContentMode
 @property  NSString *albumSubtitleFormat
 @property  NSString *nameOfEmptyAlbumPlaceholderImage
 @property  NSString *nameOfEmptySharedAlbumPlaceholderImage
 @property  NSString *nameOfAddSharedAlbumPlaceholderImage
 @property  NSString *nameOfHiddenAlbumPlaceholderImage
 @property  NSString *nameOfRecentlyDeletedAlbumPlaceholderImage
 @property  PUPhotoDecoration *photoDecoration
 @property  {CGSize=dd} stackSize
 @property  {CGSize=dd} pixelSize
 @property  {UIOffset=dd} stackOffset
 @property  {UIOffset=dd} stackPerspectiveOffset
 @property  {UIEdgeInsets=dddd} stackPerspectiveInsets
 @property  double gridMargin
 @property  double gridItemSpacing
 @property  double posterSquareCornerRadius
 @property  double posterSubitemCornerRadius
 @property  BOOL cornerOverlaysDisabled
 @property  double dynamicTitleLeading
 @property  double dynamicSubtitleleading
 @property  double dynamicTopLeading

  // class methods
  +[PUAlbumListCellContentViewHelperConfiguration defaultConfiguration]

  // instance methods
  -[PUAlbumListCellContentViewHelperConfiguration photoDecoration]
  -[PUAlbumListCellContentViewHelperConfiguration pixelSize]
  -[PUAlbumListCellContentViewHelperConfiguration setGridItemSpacing:]
  -[PUAlbumListCellContentViewHelperConfiguration setCornerOverlaysDisabled:]
  -[PUAlbumListCellContentViewHelperConfiguration setStackSize:]
  -[PUAlbumListCellContentViewHelperConfiguration setStackOffset:]
  -[PUAlbumListCellContentViewHelperConfiguration shouldCenterTextHorizontally]
  -[PUAlbumListCellContentViewHelperConfiguration setStackPerspectiveInsets:]
  -[PUAlbumListCellContentViewHelperConfiguration setPhotoDecoration:]
  -[PUAlbumListCellContentViewHelperConfiguration posterSubitemCornerRadius]
  -[PUAlbumListCellContentViewHelperConfiguration setStackPerspectiveOffset:]
  -[PUAlbumListCellContentViewHelperConfiguration stackOffset]
  -[PUAlbumListCellContentViewHelperConfiguration setShouldCenterTextHorizontally:]
  -[PUAlbumListCellContentViewHelperConfiguration cornerOverlaysDisabled]
  -[PUAlbumListCellContentViewHelperConfiguration setHasRoundedCorners:]
  -[PUAlbumListCellContentViewHelperConfiguration setPosterSubitemCornerRadius:]
  -[PUAlbumListCellContentViewHelperConfiguration configureWithSpec:]
  -[PUAlbumListCellContentViewHelperConfiguration setPixelSize:]
  -[PUAlbumListCellContentViewHelperConfiguration dynamicTitleLeading]
  -[PUAlbumListCellContentViewHelperConfiguration nameOfEmptyAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelperConfiguration shouldUseTableView]
  -[PUAlbumListCellContentViewHelperConfiguration gridMargin]
  -[PUAlbumListCellContentViewHelperConfiguration setNameOfAddSharedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelperConfiguration stackPerspectiveInsets]
  -[PUAlbumListCellContentViewHelperConfiguration setDynamicSubtitleleading:]
  -[PUAlbumListCellContentViewHelperConfiguration .cxx_destruct]
  -[PUAlbumListCellContentViewHelperConfiguration nameOfRecentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelperConfiguration albumSubtitleFormat]
  -[PUAlbumListCellContentViewHelperConfiguration posterSquareCornerRadius]
  -[PUAlbumListCellContentViewHelperConfiguration nameOfAddSharedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelperConfiguration setShouldUseTableView:]
  -[PUAlbumListCellContentViewHelperConfiguration nameOfHiddenAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelperConfiguration stackViewStyle]
  -[PUAlbumListCellContentViewHelperConfiguration setPosterSquareCornerRadius:]
  -[PUAlbumListCellContentViewHelperConfiguration setGridMargin:]
  -[PUAlbumListCellContentViewHelperConfiguration setDynamicTopLeading:]
  -[PUAlbumListCellContentViewHelperConfiguration setStackViewStyle:]
  -[PUAlbumListCellContentViewHelperConfiguration setNameOfEmptyAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelperConfiguration dynamicTopLeading]
  -[PUAlbumListCellContentViewHelperConfiguration hasRoundedCorners]
  -[PUAlbumListCellContentViewHelperConfiguration dynamicSubtitleleading]
  -[PUAlbumListCellContentViewHelperConfiguration setNameOfRecentlyDeletedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelperConfiguration setImageContentMode:]
  -[PUAlbumListCellContentViewHelperConfiguration showsDeleteButtonOnCellContentView]
  -[PUAlbumListCellContentViewHelperConfiguration stackPerspectiveOffset]
  -[PUAlbumListCellContentViewHelperConfiguration setHasClearBackgroundColor:]
  -[PUAlbumListCellContentViewHelperConfiguration allowsEmailInSubtitle]
  -[PUAlbumListCellContentViewHelperConfiguration setNameOfEmptySharedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelperConfiguration nameOfEmptySharedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelperConfiguration setFolderStackViewStyle:]
  -[PUAlbumListCellContentViewHelperConfiguration cellContentViewLayout]
  -[PUAlbumListCellContentViewHelperConfiguration setAllowsEmailInSubtitle:]
  -[PUAlbumListCellContentViewHelperConfiguration gridItemSpacing]
  -[PUAlbumListCellContentViewHelperConfiguration setCellContentViewLayout:]
  -[PUAlbumListCellContentViewHelperConfiguration hasClearBackgroundColor]
  -[PUAlbumListCellContentViewHelperConfiguration setShowsDeleteButtonOnCellContentView:]
  -[PUAlbumListCellContentViewHelperConfiguration folderStackViewStyle]
  -[PUAlbumListCellContentViewHelperConfiguration stackSize]
  -[PUAlbumListCellContentViewHelperConfiguration setDynamicTitleLeading:]
  -[PUAlbumListCellContentViewHelperConfiguration setAlbumSubtitleFormat:]
  -[PUAlbumListCellContentViewHelperConfiguration imageContentMode]
  -[PUAlbumListCellContentViewHelperConfiguration setNameOfHiddenAlbumPlaceholderImage:]


PUAlbumListCellContentViewHelper : NSObject <PXChangeObserver>
 @property  PUAlbumListCellContentViewHelperConfiguration *configuration
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PXUIMediaProvider *mediaProvider
 @property  PUFontManager *fontManager
 @property  {CGSize=dd} albumCellSize
 @property  UIImage *emptyAlbumPlaceholderImage
 @property  UIImage *emptySharedAlbumPlaceholderImage
 @property  UIImage *addSharedAlbumPlaceholderImage
 @property  UIImage *hiddenAlbumPlaceholderImage
 @property  UIImage *recentlyDeletedAlbumPlaceholderImage
 @property  PHImageRequestOptions *imageRequestOptions
 @property  PXFeatureSpecManager *featureSpecManager
 @property  PXFeatureSpec *featureSpec
 @property  PXAssetBadgeManager *badgeManager
 @property  PXCollectionTileLayoutTemplate *collectionTileLayoutTemplate
 @property  BOOL didInitializeMemoriesTitleSupport
 @property  PXExtendedTraitCollection *traitCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAlbumListCellContentViewHelper _placeholderImageWithSize:backgroundColor:glyphImageName:glyphAlpha:]

  // instance methods
  -[PUAlbumListCellContentViewHelper albumCellSize]
  -[PUAlbumListCellContentViewHelper setBadgeManager:]
  -[PUAlbumListCellContentViewHelper setEmptyAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper _getDisplayableAssetsForStandInCollectionList:maximumCount:useCache:correspondingCollections:]
  -[PUAlbumListCellContentViewHelper initWithConfiguration:dataSourceManager:mediaProvider:extendedTraitCollection:]
  -[PUAlbumListCellContentViewHelper configuration]
  -[PUAlbumListCellContentViewHelper dataSourceManager]
  -[PUAlbumListCellContentViewHelper .cxx_destruct]
  -[PUAlbumListCellContentViewHelper _initializeMemoriesTitleSupportIfNeeded]
  -[PUAlbumListCellContentViewHelper mediaProvider]
  -[PUAlbumListCellContentViewHelper featureSpec]
  -[PUAlbumListCellContentViewHelper configureAlbumListCellContentView:forCollection:title:animated:enabled:editing:]
  -[PUAlbumListCellContentViewHelper traitCollection]
  -[PUAlbumListCellContentViewHelper _visibleAssetsForCollection:correspondingCollections:]
  -[PUAlbumListCellContentViewHelper _updateStackView:forAssets:memoriesCollection:memories:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper featureSpecManager]
  -[PUAlbumListCellContentViewHelper setFeatureSpecManager:]
  -[PUAlbumListCellContentViewHelper _recalculateAlbumCellSize]
  -[PUAlbumListCellContentViewHelper _updateStackView:forAssets:collection:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper setDidInitializeMemoriesTitleSupport:]
  -[PUAlbumListCellContentViewHelper hiddenAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelper _visibleAssetsForCollection:maximumNumberOfVisibleAssets:correspondingCollections:]
  -[PUAlbumListCellContentViewHelper setAlbumCellSize:]
  -[PUAlbumListCellContentViewHelper setHiddenAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper setRecentlyDeletedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper reconfigureImageInAlbumListCellContentView:withPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper setFeatureSpec:]
  -[PUAlbumListCellContentViewHelper _updateAlbumListCellContentViewForPeopleAlbum:]
  -[PUAlbumListCellContentViewHelper fontManager]
  -[PUAlbumListCellContentViewHelper imageRequestOptions]
  -[PUAlbumListCellContentViewHelper _updateAlbumListCellContentViewForPlacesAlbum:]
  -[PUAlbumListCellContentViewHelper didInitializeMemoriesTitleSupport]
  -[PUAlbumListCellContentViewHelper subtitleForCollection:]
  -[PUAlbumListCellContentViewHelper _prepareStackView:forCollection:withStackCount:withCustomEmptyPlaceHolderImage:]
  -[PUAlbumListCellContentViewHelper addSharedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelper badgeManager]
  -[PUAlbumListCellContentViewHelper estimatedIndexOfAssetForStackItemAtIndex:inCollection:albumListCellContentView:]
  -[PUAlbumListCellContentViewHelper recentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelper _getDisplayableFacesForCollectionList:maximumCount:]
  -[PUAlbumListCellContentViewHelper _updateStackView:forFaces:inCollection:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper _editCapabilitiesForAlbum:]
  -[PUAlbumListCellContentViewHelper _invalidateAlbumCellSize]
  -[PUAlbumListCellContentViewHelper setFontManager:]
  -[PUAlbumListCellContentViewHelper setCollectionTileLayoutTemplate:]
  -[PUAlbumListCellContentViewHelper emptyAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelper setAddSharedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper _getDisplayableAssets:indexes:forCollection:maximumCount:useCache:]
  -[PUAlbumListCellContentViewHelper observable:didChange:context:]
  -[PUAlbumListCellContentViewHelper setEmptySharedAlbumPlaceholderImage:]
  -[PUAlbumListCellContentViewHelper emptySharedAlbumPlaceholderImage]
  -[PUAlbumListCellContentViewHelper collectionTileLayoutTemplate]
  -[PUAlbumListCellContentViewHelper setImageRequestOptions:]


PUAlbumListSectionHeaderView : UICollectionReusableView
 @property  UILabel *_titleLabel
 @property  NSArray *_constraints
 @property  NSString *sectionHeaderTitle
 @property  UIFont *sectionHeaderTitleFont
 @property  {UIEdgeInsets=dddd} sectionHeaderInsets

  // instance methods
  -[PUAlbumListSectionHeaderView _setConstraints:]
  -[PUAlbumListSectionHeaderView .cxx_destruct]
  -[PUAlbumListSectionHeaderView layoutSubviews]
  -[PUAlbumListSectionHeaderView initWithFrame:]
  -[PUAlbumListSectionHeaderView _constraints]
  -[PUAlbumListSectionHeaderView _titleLabel]
  -[PUAlbumListSectionHeaderView sectionHeaderInsets]
  -[PUAlbumListSectionHeaderView setSectionHeaderInsets:]
  -[PUAlbumListSectionHeaderView setSectionHeaderTitle:]
  -[PUAlbumListSectionHeaderView setSectionHeaderTitleFont:]
  -[PUAlbumListSectionHeaderView sectionHeaderTitle]
  -[PUAlbumListSectionHeaderView sectionHeaderTitleFont]


PUAlbumListSettings : PXSettings
 @property  BOOL shouldUseEditorialLayout
 @property  BOOL shouldShowSubscriberMonograms
 @property  double avatarSpacing
 @property  BOOL combinePeoplePlacesAndMediaTypesOnIpad
 @property  BOOL allowNavigationTitleEditing

  // class methods
  +[PUAlbumListSettings sharedInstance]
  +[PUAlbumListSettings settingsControllerModule]

  // instance methods
  -[PUAlbumListSettings parentSettings]
  -[PUAlbumListSettings avatarSpacing]
  -[PUAlbumListSettings setShouldShowSubscriberMonograms:]
  -[PUAlbumListSettings setDefaultValues]
  -[PUAlbumListSettings setAvatarSpacing:]
  -[PUAlbumListSettings combinePeoplePlacesAndMediaTypesOnIpad]
  -[PUAlbumListSettings setAllowNavigationTitleEditing:]
  -[PUAlbumListSettings setCombinePeoplePlacesAndMediaTypesOnIpad:]
  -[PUAlbumListSettings shouldShowSubscriberMonograms]
  -[PUAlbumListSettings setShouldUseEditorialLayout:]
  -[PUAlbumListSettings allowNavigationTitleEditing]
  -[PUAlbumListSettings shouldUseEditorialLayout]


PUAlbumListTransitionContext : NSObject
 @property  <PLAssetContainer> *collection
 @property  PHCollection *phCollection
 @property  NSIndexPath *keyItemIndexPath
 @property  PUPhotoDecoration *photoDecoration
 @property  BOOL usesContentOffsetAutoAdjust
 @property  UICollectionViewTransitionLayout *transitionLayout

  // instance methods
  -[PUAlbumListTransitionContext photoDecoration]
  -[PUAlbumListTransitionContext setCollection:]
  -[PUAlbumListTransitionContext setPhotoDecoration:]
  -[PUAlbumListTransitionContext collection]
  -[PUAlbumListTransitionContext .cxx_destruct]
  -[PUAlbumListTransitionContext phCollection]
  -[PUAlbumListTransitionContext setPhCollection:]
  -[PUAlbumListTransitionContext keyItemIndexPath]
  -[PUAlbumListTransitionContext setKeyItemIndexPath:]
  -[PUAlbumListTransitionContext usesContentOffsetAutoAdjust]
  -[PUAlbumListTransitionContext setUsesContentOffsetAutoAdjust:]
  -[PUAlbumListTransitionContext transitionLayout]
  -[PUAlbumListTransitionContext setTransitionLayout:]


PUAlbumListViewController : UIViewController <PXAssetCollectionActionPerformerDelegate, PUCollectionsCollectionViewDropDataProvider, UIGestureRecognizerDelegate, PUStackedAlbumTransitionDelegate, PUAlbumStreamActivityDelegate, UICollectionViewDataSource, UICollectionViewDelegate, PUCollectionViewReorderDelegate, PUSectionedGridLayoutDelegate, UITableViewDataSource, UITableViewDelegate, PUAlbumListTableViewCellDelegate, UIPopoverPresentationControllerDelegate, PXPhotoLibraryUIChangeObserver, PXSettingsKeyObserver, PXCollectionActionReceiver, PXCollectionsDataSourceManagerObserver, PXPlacesSnapshotFactoryDelegate, PXEditableNavigationTitleViewDelegate, PXNavigableCollectionContainer, PXForcedDismissableViewController, PLCloudFeedNavigating, PXNavigableSharedAlbumActivityFeedHostViewController, PUStackedAlbumControllerTransition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isRootSharedAlbumList
 @property  BOOL viewInSyncWithModel
 @property  PHCollection *retitlingCollection
 @property  PHCachingImageManager *_cachingImageManager
 @property  _UIContentUnavailableView *_emptyPlaceholderView
 @property  UIView *_backgroundView
 @property  NSString *_justCreatedCollectionIdentifier
 @property  @? _justCreatedCollectionAnimationCompletionHandler
 @property  BOOL _aboutToCreateAlbum
 @property  @? _onViewDidLayoutSubviewsBlock
 @property  BOOL _isKeyboardAware
 @property  BOOL progressViewVisible
 @property  PXPhotosGlobalFooterView *syncProgressView
 @property  NSArray *_syncProgressAlbums
 @property  PUAlbumListCell *focusedListCell
 @property  PHCollection *pushedAlbum
 @property  UIViewController *pushedController
 @property  UIAlertController *_currentDeleteConfirmationAlertController
 @property  PUPhotoPinchGestureRecognizer *_photoPinchGestureRecognizer
 @property  PUFeedViewController *_cachedFeedViewController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _previousPreheatRect
 @property  NSMutableSet *_preheatedCollections
 @property  PUCollectionView *_mainCollectionView
 @property  PUSectionedGridLayout *_mainCollectionViewLayout
 @property  PUAlbumListTransitionContext *albumListTransitionContext
 @property  UICollectionViewLayout *_albumListTransitionLayout
 @property  UITableView *_mainTableView
 @property  long long _ignoredReorderNotificationCount
 @property  UIAlertAction *_createAlbumAlertAction
 @property  PUPhotosPickerViewController *photosPickerViewController
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PXPhotoKitCollectionsDataSource *dataSource
 @property  PXPeopleAlbumProvider *_peopleAlbumProvider
 @property  PHImageRequestOptions *_imageRequestOptions
 @property  PUFontManager *_fontManager
 @property  {CGSize=dd} _layoutReferenceSize
 @property  {UIEdgeInsets=dddd} _layoutSafeAreaInsets
 @property  @? _pendingScrollingAnimationEndBlock
 @property  PXAssetBadgeManager *_badgeManager
 @property  PXCollectionTileLayoutTemplate *_collectionTileLayoutTemplate
 @property  PXFeatureSpecManager *_featureSpecManager
 @property  PXFeatureSpec *_featureSpec
 @property  PXPlacesAlbumCoverProvider *_placesAlbumCoverProvider
 @property  UIViewController *_placesContainerController
 @property  PXEditableNavigationTitleView *editableTitleView
 @property  NSUserActivity *siriActionActivity
 @property  PUCollectionsCollectionViewDropDelegate *collectionViewDropDelegate
 @property  PUAlbumListViewControllerSpec *spec
 @property  PUSessionInfo *sessionInfo
 @property  PXPhotoKitCollectionsDataSourceManagerConfiguration *dataSourceManagerConfiguration
 @property  long long topPlaceholdersSection
 @property  long long albumsSection
 @property  {_NSRange=QQ} albumsSections
 @property  PHCollection *collection
 @property  BOOL canShowAggregateItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAlbumListViewController newMyAlbumsViewControllerWithSpec:sessionInfo:dataSourceManager:]
  +[PUAlbumListViewController newSharedAlbumsViewControllerWithSpec:sessionInfo:dataSourceManager:]
  +[PUAlbumListViewController newMyAlbumsViewControllerWithSpec:sessionInfo:]
  +[PUAlbumListViewController newSharedAlbumsViewControllerWithSpec:sessionInfo:]

  // instance methods
  -[PUAlbumListViewController routingOptionsForDestination:]
  -[PUAlbumListViewController collectionView:cellForItemAtIndexPath:]
  -[PUAlbumListViewController setSessionInfo:]
  -[PUAlbumListViewController collectionView:numberOfItemsInSection:]
  -[PUAlbumListViewController initWithSpec:]
  -[PUAlbumListViewController px_gridPresentation]
  -[PUAlbumListViewController navigateToDestination:options:completionHandler:]
  -[PUAlbumListViewController sessionInfo]
  -[PUAlbumListViewController collectionView:canFocusItemAtIndexPath:]
  -[PUAlbumListViewController _peopleAlbumChanged:]
  -[PUAlbumListViewController prepareForPhotoLibraryChange:]
  -[PUAlbumListViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUAlbumListViewController isRootFolder]
  -[PUAlbumListViewController _recursivelyCollectCollectionsIn:fetchResult:]
  -[PUAlbumListViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUAlbumListViewController _getDisplayableAssetsForStandInCollectionList:maximumCount:useCache:correspondingCollections:]
  -[PUAlbumListViewController newAlbum:]
  -[PUAlbumListViewController _setBackgroundView:]
  -[PUAlbumListViewController numberOfSectionsInCollectionView:]
  -[PUAlbumListViewController tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:]
  -[PUAlbumListViewController tableView:canEditRowAtIndexPath:]
  -[PUAlbumListViewController collectionView:didSelectItemAtIndexPath:]
  -[PUAlbumListViewController collectionView:transitionLayoutForOldLayout:newLayout:]
  -[PUAlbumListViewController _backgroundView]
  -[PUAlbumListViewController viewWillLayoutSubviews]
  -[PUAlbumListViewController tableView:viewForHeaderInSection:]
  -[PUAlbumListViewController isEmpty]
  -[PUAlbumListViewController setCollection:]
  -[PUAlbumListViewController stackedAlbumTransition:layoutForCollection:forCollectionView:]
  -[PUAlbumListViewController numberOfItemsInSection:]
  -[PUAlbumListViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[PUAlbumListViewController collection]
  -[PUAlbumListViewController collectionView:shouldSpringLoadItemAtIndexPath:withContext:]
  -[PUAlbumListViewController _updateIfNeeded]
  -[PUAlbumListViewController _invalidateTitle]
  -[PUAlbumListViewController tableView:heightForHeaderInSection:]
  -[PUAlbumListViewController numberOfSectionsInTableView:]
  -[PUAlbumListViewController setEditing:animated:]
  -[PUAlbumListViewController px_navigationDestination]
  -[PUAlbumListViewController setDataSource:]
  -[PUAlbumListViewController prepareForPopoverPresentation:]
  -[PUAlbumListViewController photoLibraryDidChangeOnMainQueue:withPreparedInfo:]
  -[PUAlbumListViewController popoverPresentationControllerShouldDismissPopover:]
  -[PUAlbumListViewController _updateTitle]
  -[PUAlbumListViewController dataSourceManager]
  -[PUAlbumListViewController _nextCloudFeedNavigatingObject]
  -[PUAlbumListViewController tableView:numberOfRowsInSection:]
  -[PUAlbumListViewController newSmartAlbum:]
  -[PUAlbumListViewController numberOfSections]
  -[PUAlbumListViewController indexPathForItemAtPoint:]
  -[PUAlbumListViewController tableView:heightForRowAtIndexPath:]
  -[PUAlbumListViewController _setEmptyPlaceholderView:]
  -[PUAlbumListViewController .cxx_destruct]
  -[PUAlbumListViewController scrollViewDidEndScrollingAnimation:]
  -[PUAlbumListViewController tableViewStyle]
  -[PUAlbumListViewController cloudFeedInvitationForAlbumIsAvailableForNavigation:]
  -[PUAlbumListViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[PUAlbumListViewController _initializeMemoriesTitleSupportIfNeeded]
  -[PUAlbumListViewController tableView:didSelectRowAtIndexPath:]
  -[PUAlbumListViewController viewDidLoad]
  -[PUAlbumListViewController placesSnapshotCountDidChange]
  -[PUAlbumListViewController tableView:cellForRowAtIndexPath:]
  -[PUAlbumListViewController _visibleAssetsForCollection:correspondingCollections:]
  -[PUAlbumListViewController placesSnapshotDidChange]
  -[PUAlbumListViewController cloudFeedCommentIsAvailableForNavigation:]
  -[PUAlbumListViewController stackedAlbumTransition:setVisibility:forCollection:]
  -[PUAlbumListViewController _cancelButtonItem]
  -[PUAlbumListViewController _doneButtonItem]
  -[PUAlbumListViewController viewDidAppear:]
  -[PUAlbumListViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[PUAlbumListViewController _fontManager]
  -[PUAlbumListViewController stackedAlbumTransition:layoutForPHCollection:forCollectionView:]
  -[PUAlbumListViewController _emptyPlaceholderView]
  -[PUAlbumListViewController shouldAutorotate]
  -[PUAlbumListViewController _updateStackView:forAssets:memoriesCollection:memories:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListViewController dataSource]
  -[PUAlbumListViewController _handleDoneButton:]
  -[PUAlbumListViewController pu_scrollToInitialPositionAnimated:]
  -[PUAlbumListViewController collectionView]
  -[PUAlbumListViewController canNavigateToCollection:]
  -[PUAlbumListViewController collectionAtIndexPath:]
  -[PUAlbumListViewController scrollViewDidScroll:]
  -[PUAlbumListViewController tableView:moveRowAtIndexPath:toIndexPath:]
  -[PUAlbumListViewController gridLayout]
  -[PUAlbumListViewController tableView:shouldHighlightRowAtIndexPath:]
  -[PUAlbumListViewController _updateEmptyPlaceholderAnimated:]
  -[PUAlbumListViewController tableView:viewForFooterInSection:]
  -[PUAlbumListViewController actionPerformer:presentViewController:]
  -[PUAlbumListViewController _updateStackView:forAssets:collection:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListViewController _needsUpdate]
  -[PUAlbumListViewController newFolder:]
  -[PUAlbumListViewController gestureRecognizerShouldBegin:]
  -[PUAlbumListViewController _visibleAssetsForCollection:maximumNumberOfVisibleAssets:correspondingCollections:]
  -[PUAlbumListViewController viewWillDisappear:]
  -[PUAlbumListViewController _preferredWhitePointAdaptivityStyle]
  -[PUAlbumListViewController viewDidLayoutSubviews]
  -[PUAlbumListViewController canPerformAction:withSender:]
  -[PUAlbumListViewController indexPathForCollection:]
  -[PUAlbumListViewController viewWillAppear:]
  -[PUAlbumListViewController tableView:canMoveRowAtIndexPath:]
  -[PUAlbumListViewController newSharedAlbum:]
  -[PUAlbumListViewController subtitleForCollection:]
  -[PUAlbumListViewController _prepareStackView:forCollection:withStackCount:withCustomEmptyPlaceHolderImage:]
  -[PUAlbumListViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUAlbumListViewController siriActionActivity]
  -[PUAlbumListViewController _updateLayoutMetrics]
  -[PUAlbumListViewController settings:changedValueForKey:]
  -[PUAlbumListViewController sectionedDataSourceManagerInterestingObjectReferences:]
  -[PUAlbumListViewController _getDisplayableFacesForCollectionList:maximumCount:]
  -[PUAlbumListViewController _updateStackView:forFaces:inCollection:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListViewController indexPathsForVisibleItems]
  -[PUAlbumListViewController cloudFeedAssetIsAvailableForNavigation:]
  -[PUAlbumListViewController _editCapabilitiesForAlbum:]
  -[PUAlbumListViewController spec]
  -[PUAlbumListViewController actionPerformer:dismissViewController:completionHandler:]
  -[PUAlbumListViewController dealloc]
  -[PUAlbumListViewController _keyboardWillChangeFrame:]
  -[PUAlbumListViewController provideViewControllersForDestination:options:completionHandler:]
  -[PUAlbumListViewController completionHandler]
  -[PUAlbumListViewController mainScrollView]
  -[PUAlbumListViewController setDataSourceManager:]
  -[PUAlbumListViewController tableView:heightForFooterInSection:]
  -[PUAlbumListViewController tableView:editingStyleForRowAtIndexPath:]
  -[PUAlbumListViewController navigateToCollection:animated:completion:]
  -[PUAlbumListViewController _getDisplayableAssets:indexes:forCollection:maximumCount:useCache:]
  -[PUAlbumListViewController stackedAlbumTransition:setVisibility:forPHCollection:]
  -[PUAlbumListViewController observable:didChange:context:]
  -[PUAlbumListViewController assetsFilterPredicate]
  -[PUAlbumListViewController viewDidDisappear:]
  -[PUAlbumListViewController setProgressViewVisible:]
  -[PUAlbumListViewController prepareForDismissingForced:]
  -[PUAlbumListViewController updateNavigationBarAnimated:]
  -[PUAlbumListViewController handleTransitionFade:animate:]
  -[PUAlbumListViewController setSiriActionActivity:]
  -[PUAlbumListViewController albumListTableViewCell:willChangeState:]
  -[PUAlbumListViewController albumListCellContentViewShouldBeginRetitling:]
  -[PUAlbumListViewController albumListCellContentView:didEndRetitlingFromTitle:toTitle:]
  -[PUAlbumListViewController albumListCellContentView:performDeleteAction:]
  -[PUAlbumListViewController _imageRequestOptions]
  -[PUAlbumListViewController _featureSpecManager]
  -[PUAlbumListViewController _featureSpec]
  -[PUAlbumListViewController _badgeManager]
  -[PUAlbumListViewController _collectionTileLayoutTemplate]
  -[PUAlbumListViewController setCollectionViewDropDelegate:]
  -[PUAlbumListViewController collectionViewDropDelegate]
  -[PUAlbumListViewController _canDragIn]
  -[PUAlbumListViewController setupDropDelegateForCollectionView:]
  -[PUAlbumListViewController collectionViewDropDelegate:collectionAtIndexPath:]
  -[PUAlbumListViewController actionPerformerDelegateForCollectionViewDropDelegate:]
  -[PUAlbumListViewController allowDropForCollectionViewDropDelegate:]
  -[PUAlbumListViewController initWithSpec:dataSourceManager:]
  -[PUAlbumListViewController _updateAlbumSubtitleFormat]
  -[PUAlbumListViewController setKeyboardAware:]
  -[PUAlbumListViewController _mainCollectionView]
  -[PUAlbumListViewController _mainTableView]
  -[PUAlbumListViewController updateSpec]
  -[PUAlbumListViewController _layoutReferenceSize]
  -[PUAlbumListViewController _layoutSafeAreaInsets]
  -[PUAlbumListViewController _updateMainView]
  -[PUAlbumListViewController _handleCancelButton:]
  -[PUAlbumListViewController isRootSharedAlbumList]
  -[PUAlbumListViewController _handleAlbumCreationAction]
  -[PUAlbumListViewController _updateAddNewAlbumPlaceholderAnimated:]
  -[PUAlbumListViewController _updateInterfaceForModelReloadAnimated:]
  -[PUAlbumListViewController _ensureEditableTitleView]
  -[PUAlbumListViewController editableTitleView]
  -[PUAlbumListViewController filteringAssetTypes]
  -[PUAlbumListViewController setViewInSyncWithModel:]
  -[PUAlbumListViewController _resetPreheating]
  -[PUAlbumListViewController reloadContentView]
  -[PUAlbumListViewController _updatePeripheralInterfaceAnimated:]
  -[PUAlbumListViewController _updatePreheatedAssets]
  -[PUAlbumListViewController _performBatchUpdates:withDeletedSections:insertedSections:changedSections:deletedItemsIndexPaths:insertedItemsIndexPaths:changedItemsIndexPaths:movedItemsFromIndexPaths:movedItemsToIndexPaths:completionHandler:]
  -[PUAlbumListViewController _albumCreationButtonItem]
  -[PUAlbumListViewController _preparedAlbumListCellContentViewAtIndexPath:]
  -[PUAlbumListViewController _preparedStackViewAtIndexPath:]
  -[PUAlbumListViewController albumsSections]
  -[PUAlbumListViewController _setPendingScrollingAnimationEndBlock:]
  -[PUAlbumListViewController _handlePendingScrollingAnimationEndBlock]
  -[PUAlbumListViewController scrollToItemAtIndexPath:centered:animated:]
  -[PUAlbumListViewController updateListCellForItemAtIndexPath:animated:]
  -[PUAlbumListViewController _ignoredReorderNotificationCount]
  -[PUAlbumListViewController _setIgnoredReorderNotificationCount:]
  -[PUAlbumListViewController _mainCollectionViewLayout]
  -[PUAlbumListViewController _updateNavigationBannerAnimated:]
  -[PUAlbumListViewController _pickerBannerView]
  -[PUAlbumListViewController showsEmptyPlaceholderWhenEmpty]
  -[PUAlbumListViewController _shouldShowAggregateItem]
  -[PUAlbumListViewController _aboutToCreateAlbum]
  -[PUAlbumListViewController indexPathForAddNewAlbumPlaceholder]
  -[PUAlbumListViewController isViewInSyncWithModel]
  -[PUAlbumListViewController isPlaceholderAtIndexPath:]
  -[PUAlbumListViewController _preparedPlaceholderListCellContentViewAtIndexPath:]
  -[PUAlbumListViewController updatePlaceholderListCellContentView:forItemAtIndexPath:animated:]
  -[PUAlbumListViewController updateAlbumListCellContentView:forItemAtIndexPath:animated:]
  -[PUAlbumListViewController shouldEnableCollection:]
  -[PUAlbumListViewController canShowAvatarViews]
  -[PUAlbumListViewController setTitleForCell:withCollection:]
  -[PUAlbumListViewController placeholderKindAtIndexPath:]
  -[PUAlbumListViewController _visibleAssetsForCollection:]
  -[PUAlbumListViewController _updateCollageView:forAssets:]
  -[PUAlbumListViewController _keyAssetsForMoments]
  -[PUAlbumListViewController _peopleAlbumProvider]
  -[PUAlbumListViewController _setPeopleAlbumProvider:]
  -[PUAlbumListViewController _updateStackView:forPeopleImages:inCollection:withCustomEmptyPlaceholderImage:]
  -[PUAlbumListViewController indexPathForPeopleAlbum]
  -[PUAlbumListViewController _placesAlbumCoverProvider]
  -[PUAlbumListViewController _assetsFetchOptions]
  -[PUAlbumListViewController _stackViewStyleForCollection:]
  -[PUAlbumListViewController _cachingImageManager]
  -[PUAlbumListViewController _setFeatureSpec:]
  -[PUAlbumListViewController progressViewVisible]
  -[PUAlbumListViewController syncProgressView]
  -[PUAlbumListViewController setSyncProgressView:]
  -[PUAlbumListViewController shouldAllowEmailInAlbumSubtitle]
  -[PUAlbumListViewController canShowAggregateItem]
  -[PUAlbumListViewController shouldShowAllPhotosItem]
  -[PUAlbumListViewController showsTopPlaceholdersSection]
  -[PUAlbumListViewController topPlaceholdersSection]
  -[PUAlbumListViewController showAddNewAlbumPlaceholder]
  -[PUAlbumListViewController _handleOpenKeyCommand:]
  -[PUAlbumListViewController focusedListCell]
  -[PUAlbumListViewController _handleRenameKeyCommand:]
  -[PUAlbumListViewController _handleDeleteKeyCommand:]
  -[PUAlbumListViewController didSelectItemAtIndexPath:]
  -[PUAlbumListViewController _handleDeleteAlbumAtIndexPath:]
  -[PUAlbumListViewController _handleCreateAlbumOrFolder:isSmartAlbum:]
  -[PUAlbumListViewController _isPlaceholderEnabled:]
  -[PUAlbumListViewController newGridViewControllerForAssetCollection:]
  -[PUAlbumListViewController navigateToAllPhotosAnimated:completion:]
  -[PUAlbumListViewController _navigateToPeopleAnimated:withPersonLocalIdentifier:withCompletion:]
  -[PUAlbumListViewController _navigateToPlacesFromCollection:]
  -[PUAlbumListViewController _navigateToMemories]
  -[PUAlbumListViewController _didSelectPlaceholderAtIndexPath:]
  -[PUAlbumListViewController handleSessionInfoAlbumSelection:]
  -[PUAlbumListViewController handleCreateAlbumOrFolder:isSmartAlbum:helper:]
  -[PUAlbumListViewController _validateNewCollectionTitle:]
  -[PUAlbumListViewController _setAboutToCreateAlbum:]
  -[PUAlbumListViewController canPresentPicker]
  -[PUAlbumListViewController _unfilteredFirstReorderableCollectionIndex]
  -[PUAlbumListViewController _setJustCreatedCollectionIdentifier:]
  -[PUAlbumListViewController _setJustCreatedCollectionAnimationCompletionHandler:]
  -[PUAlbumListViewController setPhotosPickerViewController:]
  -[PUAlbumListViewController _dismissPhotosPickerControllerAnimated:completion:]
  -[PUAlbumListViewController _setCreateAlbumAlertAction:]
  -[PUAlbumListViewController _updateCreateAlbumTextField:]
  -[PUAlbumListViewController hostViewContoller]
  -[PUAlbumListViewController photosPickerViewController]
  -[PUAlbumListViewController _createAlbumAlertAction]
  -[PUAlbumListViewController _setCurrentDeleteConfirmationAlertController:]
  -[PUAlbumListViewController _cachedFeedViewController]
  -[PUAlbumListViewController _setCachedFeedViewController:]
  -[PUAlbumListViewController _beginInteractiveNavigationForItemAtPoint:]
  -[PUAlbumListViewController _beginInteractiveZoomOut:]
  -[PUAlbumListViewController _canTransitionInteractivelyToCollection:]
  -[PUAlbumListViewController newGridViewControllerForStandInCollection:]
  -[PUAlbumListViewController setDataSourceManagerConfiguration:]
  -[PUAlbumListViewController newGridViewControllerForFolder:]
  -[PUAlbumListViewController setPushedAlbum:]
  -[PUAlbumListViewController setPushedController:]
  -[PUAlbumListViewController setAlbumListTransitionContext:]
  -[PUAlbumListViewController setAlbumListTransitionLayout:animated:]
  -[PUAlbumListViewController _photoPinchGestureRecognizer]
  -[PUAlbumListViewController _setPreviousPreheatRect:]
  -[PUAlbumListViewController _setPreheatedCollections:]
  -[PUAlbumListViewController _previousPreheatRect]
  -[PUAlbumListViewController _preheatedCollections]
  -[PUAlbumListViewController indexPathsForItemsInRect:]
  -[PUAlbumListViewController _handlePhotoPinchGestureRecognizer:]
  -[PUAlbumListViewController _setPhotoPinchGestureRecognizer:]
  -[PUAlbumListViewController _invalidatePreparedCellsConfiguration]
  -[PUAlbumListViewController backgroundColorForTableView]
  -[PUAlbumListViewController _setMainTableView:]
  -[PUAlbumListViewController _setLayoutReferenceSize:]
  -[PUAlbumListViewController _setLayoutSafeAreaInsets:]
  -[PUAlbumListViewController _setMainCollectionViewLayout:]
  -[PUAlbumListViewController _setMainCollectionView:]
  -[PUAlbumListViewController updateInterfaceLayoutIfNecessary]
  -[PUAlbumListViewController _onViewDidLayoutSubviewsBlock]
  -[PUAlbumListViewController _setOnViewDidLayoutSubviewsBlock:]
  -[PUAlbumListViewController pushedAlbum]
  -[PUAlbumListViewController selectItemAtIndexPath:animated:]
  -[PUAlbumListViewController deselectSelectedItemAnimated:]
  -[PUAlbumListViewController _suppressionContexts]
  -[PUAlbumListViewController _postDidAppearActions]
  -[PUAlbumListViewController canShowSyncProgress]
  -[PUAlbumListViewController updateSyncProgress]
  -[PUAlbumListViewController showPlacesCount:]
  -[PUAlbumListViewController retitlingCollection]
  -[PUAlbumListViewController navigateToRevealAssetCollection:initiallyHidden:animated:]
  -[PUAlbumListViewController _currentDeleteConfirmationAlertController]
  -[PUAlbumListViewController indexPathForPreparedItems]
  -[PUAlbumListViewController indexPathForFirstEditableAlbum]
  -[PUAlbumListViewController _pendingScrollingAnimationEndBlock]
  -[PUAlbumListViewController _isKeyboardAware]
  -[PUAlbumListViewController _syncProgressAlbums]
  -[PUAlbumListViewController setSyncProgressVisible:]
  -[PUAlbumListViewController indexPathForAlbumListCellContentView:]
  -[PUAlbumListViewController shouldBeginRetitlingAlbumAtIndexPath:]
  -[PUAlbumListViewController setRetitlingCollection:]
  -[PUAlbumListViewController _collectionForNavigation]
  -[PUAlbumListViewController _navigateToRevealCollection:animated:]
  -[PUAlbumListViewController _viewControllerForCollection:userActivity:]
  -[PUAlbumListViewController _navigateToDestination:provideViewControllers:options:completionHandler:]
  -[PUAlbumListViewController setCanShowAggregateItem:]
  -[PUAlbumListViewController _canUseStackTransitionFromCollection:]
  -[PUAlbumListViewController pushedController]
  -[PUAlbumListViewController _createControllerForStandInCollection:]
  -[PUAlbumListViewController _createControllerForFolder:]
  -[PUAlbumListViewController newGridViewControllerForAllPhotos]
  -[PUAlbumListViewController indexPathForPlacesAlbum]
  -[PUAlbumListViewController showPlacesCount:atIndexPath:]
  -[PUAlbumListViewController newCloudFeedViewController]
  -[PUAlbumListViewController _preparedStackViewForCollection:]
  -[PUAlbumListViewController _albumListTransitionLayout]
  -[PUAlbumListViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUAlbumListViewController _targetIndexPathForMoveFromIndexPath:toProposedIndexPath:]
  -[PUAlbumListViewController _unfilteredIndexForFilteredIndexPath:]
  -[PUAlbumListViewController dataSourceManagerConfiguration]
  -[PUAlbumListViewController numberOfVisualSectionsForSectionedGridLayout:]
  -[PUAlbumListViewController albumListTransitionContext]
  -[PUAlbumListViewController bestReferenceItemIndexPath]
  -[PUAlbumListViewController showsSeparatorBelowTopPlaceholdersSection]
  -[PUAlbumListViewController _justCreatedCollectionIdentifier]
  -[PUAlbumListViewController _justCreatedCollectionAnimationCompletionHandler]
  -[PUAlbumListViewController _visiblyInsertItemAtIndexPath:modelUpdate:completionHandler:]
  -[PUAlbumListViewController _updateInterfaceForIncrementalModelChangeHandler:withSectionedChangeDetails:animated:]
  -[PUAlbumListViewController _updatePreparedCellsConfigurationIfNeeded]
  -[PUAlbumListViewController _resetConfiguration]
  -[PUAlbumListViewController ppt_navigateToPlacesAndRunPreparationBlock:thenPerformTest:]
  -[PUAlbumListViewController albumStreamActivity:didFinishSuccessfully:]
  -[PUAlbumListViewController albumStreamActivity:didCreateAlbum:]
  -[PUAlbumListViewController collectionView:moveItemAtIndexPath:toIndexPath:completionHandler:]
  -[PUAlbumListViewController collectionView:canReorderItemAtIndexPath:]
  -[PUAlbumListViewController collectionView:targetIndexPathForMoveFromIndexPath:toProposedIndexPath:]
  -[PUAlbumListViewController sectionedGridLayoutAnchorItemForAdjustingContentOffset:]
  -[PUAlbumListViewController sectionedGridLayout:sectionsForVisualSection:]
  -[PUAlbumListViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUAlbumListViewController sectionedGridLayoutWillPrepareLayout:]
  -[PUAlbumListViewController editableNavigationTitleView:validateNewText:]
  -[PUAlbumListViewController editableNavigationTitleViewDidEndEditing:]
  -[PUAlbumListViewController navigateToSharedAlbumActivityFeedAnimated:configuration:completion:]
  -[PUAlbumListViewController initWithSpec:isRootSharedAlbumList:]
  -[PUAlbumListViewController _someAlbumSupportsEditing]
  -[PUAlbumListViewController shouldHideEmptyCollections]
  -[PUAlbumListViewController albumsSection]
  -[PUAlbumListViewController navigateToPeopleAnimated:withPersonLocalIdentifier:withCompletion:]
  -[PUAlbumListViewController _invalidateSyncProgressAlbums]
  -[PUAlbumListViewController pu_wantsToolbarVisible]
  -[PUAlbumListViewController sessionInfoPhotoSelectionDidChange:]
  -[PUAlbumListViewController showPlacesPlaceholderImageInStackView:andContentView:]
  -[PUAlbumListViewController ppt_performPlacesScrollTest:preparationHandler:iterations:screenDelta:delay:completion:]
  -[PUAlbumListViewController ppt_performPlacesZoomTest:preparationHandler:iterations:delay:completion:]
  -[PUAlbumListViewController _setKeyboardAware:]
  -[PUAlbumListViewController setAlbumListTransitionLayout:]
  -[PUAlbumListViewController _placesContainerController]


PUAlbumListViewControllerSpec : PULegacyViewControllerSpec
 @property  PUFontManager *_fontManager
 @property  PXLayoutMetricInterpolator *_insetsInterpolator
 @property  PXLayoutMetricInterpolator *_stackWidthInterpolator
 @property  BOOL shouldUseTableView
 @property  {CGSize=dd} contentSizeForViewInPopover
 @property  {CGSize=dd} imageSize
 @property  long long imageContentMode
 @property  unsigned long stackViewStyle
 @property  unsigned long folderStackViewStyle
 @property  PUPhotoDecoration *stackPhotoDecoration
 @property  PUPhotoDecoration *emptyStackPhotoDecoration
 @property  {CGSize=dd} stackSize
 @property  {UIOffset=dd} stackOffset
 @property  {UIEdgeInsets=dddd} stackPerspectiveInsets
 @property  {UIOffset=dd} stackPerspectiveOffset
 @property  double posterSquareCornerRadius
 @property  double posterSubitemCornerRadius
 @property  {CGSize=dd} collageImageSize
 @property  long long collageImageContentMode
 @property  double collageSpacing
 @property  BOOL showsDeleteButtonOnCellContentView
 @property  long long cellContentViewLayout
 @property  BOOL usesStackTransitionToGrid
 @property  double sectionHeaderHeight
 @property  double sectionFooterHeight
 @property  BOOL shouldShowSectionHeaders
 @property  NSString *nameOfEmptyAlbumPlaceholderImage
 @property  NSString *nameOfAddSharedAlbumPlaceholderImage
 @property  NSString *nameOfEmptySharedAlbumPlaceholderImage
 @property  NSString *nameOfHiddenAlbumPlaceholderImage
 @property  NSString *nameOfRecentlyDeletedAlbumPlaceholderImage
 @property  BOOL shouldUseCollageForCloudFeedPlaceholder
 @property  BOOL shouldUseShortTitleForStandInAlbumList
 @property  BOOL canShowVirtualCollections
 @property  long long albumDeletionConfirmationStyle
 @property  PUAlbumListViewControllerSpec *standInAlbumListViewControllerSpec
 @property  PUPhotosGridViewControllerSpec *gridViewControllerSpec
 @property  PUPhotosAlbumViewControllerSpec *albumViewControllerSpec
 @property  PUPhotosPanoramaViewControllerSpec *panoramaViewControllerSpec
 @property  PUPhotosPickerViewControllerSpec *photosPickerViewControllerSpec
 @property  PUFeedViewControllerSpec *feedViewControllerSpec

  // class methods
  +[PUAlbumListViewControllerSpec padSpec]
  +[PUAlbumListViewControllerSpec phoneSpec]

  // instance methods
  -[PUAlbumListViewControllerSpec sectionHeaderHeight]
  -[PUAlbumListViewControllerSpec sectionFooterHeight]
  -[PUAlbumListViewControllerSpec posterSubitemCornerRadius]
  -[PUAlbumListViewControllerSpec stackOffset]
  -[PUAlbumListViewControllerSpec imageSizeForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerSpec nameOfEmptyAlbumPlaceholderImage]
  -[PUAlbumListViewControllerSpec contentSizeForViewInPopover]
  -[PUAlbumListViewControllerSpec shouldUseTableView]
  -[PUAlbumListViewControllerSpec stackPerspectiveInsets]
  -[PUAlbumListViewControllerSpec .cxx_destruct]
  -[PUAlbumListViewControllerSpec nameOfRecentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerSpec posterSquareCornerRadius]
  -[PUAlbumListViewControllerSpec _fontManager]
  -[PUAlbumListViewControllerSpec nameOfAddSharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerSpec nameOfHiddenAlbumPlaceholderImage]
  -[PUAlbumListViewControllerSpec stackViewStyle]
  -[PUAlbumListViewControllerSpec configureGridLayout:forLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerSpec imageSize]
  -[PUAlbumListViewControllerSpec shouldShowSectionHeaders]
  -[PUAlbumListViewControllerSpec showsDeleteButtonOnCellContentView]
  -[PUAlbumListViewControllerSpec stackPerspectiveOffset]
  -[PUAlbumListViewControllerSpec nameOfEmptySharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerSpec cellContentViewLayout]
  -[PUAlbumListViewControllerSpec configureStackViewWithGridStyle:]
  -[PUAlbumListViewControllerSpec cellSizeForStackSize:]
  -[PUAlbumListViewControllerSpec feedViewControllerSpec]
  -[PUAlbumListViewControllerSpec folderStackViewStyle]
  -[PUAlbumListViewControllerSpec stackSize]
  -[PUAlbumListViewControllerSpec imageContentMode]
  -[PUAlbumListViewControllerSpec sectionInsetsForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerSpec stackSizeForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerSpec stackPhotoDecoration]
  -[PUAlbumListViewControllerSpec emptySharedAlbumPlaceholderImageForWindow:]
  -[PUAlbumListViewControllerSpec hiddenAlbumPlaceholderImageForWindow:]
  -[PUAlbumListViewControllerSpec recentlyDeletedAlbumPlaceholderImageForWindow:]
  -[PUAlbumListViewControllerSpec emptyAlbumPlaceholderImageForWindow:]
  -[PUAlbumListViewControllerSpec addSharedAlbumPlaceholderImageForWindow:]
  -[PUAlbumListViewControllerSpec shouldUseCollageForCloudFeedPlaceholder]
  -[PUAlbumListViewControllerSpec tileSizeForLayoutReferenceSize:safeAreaInsets:stackViewStyle:]
  -[PUAlbumListViewControllerSpec emptyStackPhotoDecoration]
  -[PUAlbumListViewControllerSpec collageSpacing]
  -[PUAlbumListViewControllerSpec collageImageContentMode]
  -[PUAlbumListViewControllerSpec collageImageSize]
  -[PUAlbumListViewControllerSpec photosPickerViewControllerSpec]
  -[PUAlbumListViewControllerSpec albumDeletionConfirmationStyle]
  -[PUAlbumListViewControllerSpec standInAlbumListViewControllerSpec]
  -[PUAlbumListViewControllerSpec shouldUseShortTitleForStandInAlbumList]
  -[PUAlbumListViewControllerSpec usesStackTransitionToGrid]
  -[PUAlbumListViewControllerSpec cellSizeForBounds:]
  -[PUAlbumListViewControllerSpec _centeredGlyphImage:withBackgroundColor:size:imageAlpha:window:]
  -[PUAlbumListViewControllerSpec _centeredTintedGlyphImage:withBackgroundColor:size:window:]
  -[PUAlbumListViewControllerSpec _pixelRoundedOriginForCenteredImage:inRect:window:]
  -[PUAlbumListViewControllerSpec _insetsInterpolator]
  -[PUAlbumListViewControllerSpec _stackWidthInterpolator]
  -[PUAlbumListViewControllerSpec configureCollectionViewAlbumListLayout:forBounds:]
  -[PUAlbumListViewControllerSpec _getStackSize:outEdgeInsets:forLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerSpec canShowVirtualCollections]
  -[PUAlbumListViewControllerSpec gridViewControllerSpec]
  -[PUAlbumListViewControllerSpec albumViewControllerSpec]
  -[PUAlbumListViewControllerSpec panoramaViewControllerSpec]


PUAlbumListViewControllerCommonPhoneSpec : PUAlbumListViewControllerSpec
  // instance methods
  -[PUAlbumListViewControllerCommonPhoneSpec sectionHeaderHeight]
  -[PUAlbumListViewControllerCommonPhoneSpec sectionFooterHeight]
  -[PUAlbumListViewControllerCommonPhoneSpec posterSubitemCornerRadius]
  -[PUAlbumListViewControllerCommonPhoneSpec stackOffset]
  -[PUAlbumListViewControllerCommonPhoneSpec stackPerspectiveInsets]
  -[PUAlbumListViewControllerCommonPhoneSpec posterSquareCornerRadius]
  -[PUAlbumListViewControllerCommonPhoneSpec showsDeleteButtonOnCellContentView]
  -[PUAlbumListViewControllerCommonPhoneSpec stackPerspectiveOffset]
  -[PUAlbumListViewControllerCommonPhoneSpec feedViewControllerSpec]
  -[PUAlbumListViewControllerCommonPhoneSpec stackPhotoDecoration]
  -[PUAlbumListViewControllerCommonPhoneSpec shouldUseCollageForCloudFeedPlaceholder]
  -[PUAlbumListViewControllerCommonPhoneSpec emptyStackPhotoDecoration]
  -[PUAlbumListViewControllerCommonPhoneSpec photosPickerViewControllerSpec]
  -[PUAlbumListViewControllerCommonPhoneSpec albumDeletionConfirmationStyle]
  -[PUAlbumListViewControllerCommonPhoneSpec gridViewControllerSpec]
  -[PUAlbumListViewControllerCommonPhoneSpec albumViewControllerSpec]
  -[PUAlbumListViewControllerCommonPhoneSpec panoramaViewControllerSpec]


PUAlbumListViewControllerPhoneSpec : PUAlbumListViewControllerCommonPhoneSpec
  // instance methods
  -[PUAlbumListViewControllerPhoneSpec sectionHeaderHeight]
  -[PUAlbumListViewControllerPhoneSpec sectionFooterHeight]
  -[PUAlbumListViewControllerPhoneSpec imageSizeForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPhoneSpec nameOfEmptyAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPhoneSpec shouldUseTableView]
  -[PUAlbumListViewControllerPhoneSpec nameOfRecentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPhoneSpec nameOfAddSharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPhoneSpec nameOfHiddenAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPhoneSpec stackViewStyle]
  -[PUAlbumListViewControllerPhoneSpec configureGridLayout:forLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPhoneSpec imageSize]
  -[PUAlbumListViewControllerPhoneSpec shouldShowSectionHeaders]
  -[PUAlbumListViewControllerPhoneSpec nameOfEmptySharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPhoneSpec cellContentViewLayout]
  -[PUAlbumListViewControllerPhoneSpec configureStackViewWithGridStyle:]
  -[PUAlbumListViewControllerPhoneSpec cellSizeForStackSize:]
  -[PUAlbumListViewControllerPhoneSpec folderStackViewStyle]
  -[PUAlbumListViewControllerPhoneSpec stackSize]
  -[PUAlbumListViewControllerPhoneSpec sectionInsetsForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPhoneSpec stackSizeForLayoutReferenceSize:safeAreaInsets:]


PUAlbumListViewControllerCommonImagePickerSpec : PUAlbumListViewControllerCommonPhoneSpec
  // instance methods
  -[PUAlbumListViewControllerCommonImagePickerSpec sectionHeaderHeight]
  -[PUAlbumListViewControllerCommonImagePickerSpec sectionFooterHeight]
  -[PUAlbumListViewControllerCommonImagePickerSpec nameOfEmptyAlbumPlaceholderImage]
  -[PUAlbumListViewControllerCommonImagePickerSpec shouldUseTableView]
  -[PUAlbumListViewControllerCommonImagePickerSpec nameOfRecentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerCommonImagePickerSpec nameOfAddSharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerCommonImagePickerSpec nameOfHiddenAlbumPlaceholderImage]
  -[PUAlbumListViewControllerCommonImagePickerSpec stackViewStyle]
  -[PUAlbumListViewControllerCommonImagePickerSpec imageSize]
  -[PUAlbumListViewControllerCommonImagePickerSpec showsDeleteButtonOnCellContentView]
  -[PUAlbumListViewControllerCommonImagePickerSpec nameOfEmptySharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerCommonImagePickerSpec cellContentViewLayout]
  -[PUAlbumListViewControllerCommonImagePickerSpec configureStackViewWithGridStyle:]
  -[PUAlbumListViewControllerCommonImagePickerSpec folderStackViewStyle]
  -[PUAlbumListViewControllerCommonImagePickerSpec stackSize]
  -[PUAlbumListViewControllerCommonImagePickerSpec sectionInsetsForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerCommonImagePickerSpec shouldUseCollageForCloudFeedPlaceholder]
  -[PUAlbumListViewControllerCommonImagePickerSpec cellSizeForBounds:]


PUAlbumListViewControllerPhoneImagePickerSpec : PUAlbumListViewControllerCommonImagePickerSpec
  // instance methods
  -[PUAlbumListViewControllerPhoneImagePickerSpec gridViewControllerSpec]
  -[PUAlbumListViewControllerPhoneImagePickerSpec albumViewControllerSpec]


PUAlbumListViewControllerPadImagePickerSpec : PUAlbumListViewControllerCommonImagePickerSpec
  // instance methods
  -[PUAlbumListViewControllerPadImagePickerSpec gridViewControllerSpec]
  -[PUAlbumListViewControllerPadImagePickerSpec albumViewControllerSpec]


PUAlbumListViewControllerPadSpec : PUAlbumListViewControllerSpec
  // instance methods
  -[PUAlbumListViewControllerPadSpec sectionHeaderHeight]
  -[PUAlbumListViewControllerPadSpec sectionFooterHeight]
  -[PUAlbumListViewControllerPadSpec posterSubitemCornerRadius]
  -[PUAlbumListViewControllerPadSpec stackOffset]
  -[PUAlbumListViewControllerPadSpec imageSizeForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPadSpec nameOfEmptyAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPadSpec stackPerspectiveInsets]
  -[PUAlbumListViewControllerPadSpec nameOfRecentlyDeletedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPadSpec posterSquareCornerRadius]
  -[PUAlbumListViewControllerPadSpec nameOfAddSharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPadSpec nameOfHiddenAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPadSpec stackViewStyle]
  -[PUAlbumListViewControllerPadSpec configureGridLayout:forLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPadSpec imageSize]
  -[PUAlbumListViewControllerPadSpec shouldShowSectionHeaders]
  -[PUAlbumListViewControllerPadSpec showsDeleteButtonOnCellContentView]
  -[PUAlbumListViewControllerPadSpec stackPerspectiveOffset]
  -[PUAlbumListViewControllerPadSpec nameOfEmptySharedAlbumPlaceholderImage]
  -[PUAlbumListViewControllerPadSpec cellContentViewLayout]
  -[PUAlbumListViewControllerPadSpec configureStackViewWithGridStyle:]
  -[PUAlbumListViewControllerPadSpec cellSizeForStackSize:]
  -[PUAlbumListViewControllerPadSpec feedViewControllerSpec]
  -[PUAlbumListViewControllerPadSpec folderStackViewStyle]
  -[PUAlbumListViewControllerPadSpec stackSize]
  -[PUAlbumListViewControllerPadSpec sectionInsetsForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPadSpec stackSizeForLayoutReferenceSize:safeAreaInsets:]
  -[PUAlbumListViewControllerPadSpec stackPhotoDecoration]
  -[PUAlbumListViewControllerPadSpec shouldUseCollageForCloudFeedPlaceholder]
  -[PUAlbumListViewControllerPadSpec emptyStackPhotoDecoration]
  -[PUAlbumListViewControllerPadSpec collageSpacing]
  -[PUAlbumListViewControllerPadSpec collageImageContentMode]
  -[PUAlbumListViewControllerPadSpec collageImageSize]
  -[PUAlbumListViewControllerPadSpec photosPickerViewControllerSpec]
  -[PUAlbumListViewControllerPadSpec albumDeletionConfirmationStyle]
  -[PUAlbumListViewControllerPadSpec usesStackTransitionToGrid]
  -[PUAlbumListViewControllerPadSpec canShowVirtualCollections]
  -[PUAlbumListViewControllerPadSpec gridViewControllerSpec]
  -[PUAlbumListViewControllerPadSpec albumViewControllerSpec]
  -[PUAlbumListViewControllerPadSpec panoramaViewControllerSpec]


PUAlbumNavigationHelperParams : NSObject
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PUSessionInfo *sessionInfo
 @property  PUAlbumListViewControllerSpec *spec
 @property  <PXGridPresentation> *gridPresentation
 @property  PXPhotoKitCollectionsDataSource *dataSource

  // instance methods
  -[PUAlbumNavigationHelperParams setSessionInfo:]
  -[PUAlbumNavigationHelperParams sessionInfo]
  -[PUAlbumNavigationHelperParams dataSourceManager]
  -[PUAlbumNavigationHelperParams .cxx_destruct]
  -[PUAlbumNavigationHelperParams dataSource]
  -[PUAlbumNavigationHelperParams setSpec:]
  -[PUAlbumNavigationHelperParams spec]
  -[PUAlbumNavigationHelperParams setDataSourceManager:]
  -[PUAlbumNavigationHelperParams gridPresentation]
  -[PUAlbumNavigationHelperParams setGridPresentation:]


PUAlbumPickerSessionInfo : PUSessionInfo
  // instance methods
  -[PUAlbumPickerSessionInfo initWithSourceAlbum:transferredAssets:]
  -[PUAlbumPickerSessionInfo isSelectingTargetAlbum]


PUAlbumPickerViewController : UIViewController <PUSessionInfoObserver>
 @property  BOOL didLoadSubviews
 @property  UINavigationController *contentNavigationController
 @property  PUAlbumListViewController *_albumListViewController
 @property  PUAlbumPickerViewControllerSpec *spec
 @property  PUAlbumPickerSessionInfo *albumPickerSessionInfo
 @property  PHCollectionList *collectionList
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAlbumPickerViewController initWithCoder:]
  -[PUAlbumPickerViewController viewWillLayoutSubviews]
  -[PUAlbumPickerViewController .cxx_destruct]
  -[PUAlbumPickerViewController viewDidLoad]
  -[PUAlbumPickerViewController initWithNibName:bundle:]
  -[PUAlbumPickerViewController shouldAutorotate]
  -[PUAlbumPickerViewController initWithSpec:sessionInfo:]
  -[PUAlbumPickerViewController setCollectionList:]
  -[PUAlbumPickerViewController setCompletionHandler:]
  -[PUAlbumPickerViewController _preferredWhitePointAdaptivityStyle]
  -[PUAlbumPickerViewController collectionList]
  -[PUAlbumPickerViewController spec]
  -[PUAlbumPickerViewController dealloc]
  -[PUAlbumPickerViewController completionHandler]
  -[PUAlbumPickerViewController _setSpec:]
  -[PUAlbumPickerViewController supportedInterfaceOrientations]
  -[PUAlbumPickerViewController _loadSubviewsIfNeeded]
  -[PUAlbumPickerViewController didLoadSubviews]
  -[PUAlbumPickerViewController setDidLoadSubviews:]
  -[PUAlbumPickerViewController albumPickerSessionInfo]
  -[PUAlbumPickerViewController _setAlbumListViewController:]
  -[PUAlbumPickerViewController _setContentNavigationController:]
  -[PUAlbumPickerViewController contentNavigationController]
  -[PUAlbumPickerViewController _albumListViewController]
  -[PUAlbumPickerViewController sessionInfoStatusDidChange:]
  -[PUAlbumPickerViewController initWithSessionInfo:]
  -[PUAlbumPickerViewController _setSessionInfo:]


PUAlbumPickerViewControllerSpec : NSObject
 @property  unsigned long supportedInterfaceOrientations
 @property  PUAlbumListViewControllerSpec *albumListViewControllerSpec
 @property  PUAlbumListViewController *newAlbumListViewController

  // instance methods
  -[PUAlbumPickerViewControllerSpec .cxx_destruct]
  -[PUAlbumPickerViewControllerSpec albumListViewControllerSpec]
  -[PUAlbumPickerViewControllerSpec supportedInterfaceOrientations]
  -[PUAlbumPickerViewControllerSpec configureSessionInfo:]
  -[PUAlbumPickerViewControllerSpec newAlbumListViewController]


PUAlbumPickerViewControllerPhoneSpec : PUAlbumPickerViewControllerSpec
  // instance methods
  -[PUAlbumPickerViewControllerPhoneSpec albumListViewControllerSpec]
  -[PUAlbumPickerViewControllerPhoneSpec supportedInterfaceOrientations]
  -[PUAlbumPickerViewControllerPhoneSpec configureSessionInfo:]
  -[PUAlbumPickerViewControllerPhoneSpec newAlbumListViewController]
  -[PUAlbumPickerViewControllerPhoneSpec bannerViewStyle]


PUAlbumPickerViewControllerPadSpec : PUAlbumPickerViewControllerSpec
  // instance methods
  -[PUAlbumPickerViewControllerPadSpec albumListViewControllerSpec]
  -[PUAlbumPickerViewControllerPadSpec supportedInterfaceOrientations]
  -[PUAlbumPickerViewControllerPadSpec configureSessionInfo:]
  -[PUAlbumPickerViewControllerPadSpec newAlbumListViewController]


PUAlbumStreamActivity : PXActivity <PXPhotoStreamComposeServiceDelegate, PXVideoTrimQueueControllerDelegate>
 @property  NSObject<PLUserEditableAlbumProtocol> *destinationStreamingAlbum
 @property  BOOL destinationAlbumWasCreated
 @property  BOOL isPresentedFromActivityViewController
 @property  UIViewController *referenceViewController
 @property  <PUAlbumStreamActivityDelegate> *albumStreamDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAlbumStreamActivity activityCategory]
  +[PUAlbumStreamActivity customExportsOutputDirectoryParent]
  +[PUAlbumStreamActivity customExportsOutputDirectoryForAsset:]
  +[PUAlbumStreamActivity _recordRecentInvitationRecipient:displayName:date:]

  // instance methods
  -[PUAlbumStreamActivity activityViewController]
  -[PUAlbumStreamActivity .cxx_destruct]
  -[PUAlbumStreamActivity _systemImageName]
  -[PUAlbumStreamActivity activityType]
  -[PUAlbumStreamActivity canPerformWithActivityItems:]
  -[PUAlbumStreamActivity init]
  -[PUAlbumStreamActivity destinationAlbumWasCreated]
  -[PUAlbumStreamActivity destinationStreamingAlbum]
  -[PUAlbumStreamActivity prepareWithActivityItems:]
  -[PUAlbumStreamActivity _presentActivityOnViewController:animated:completion:]
  -[PUAlbumStreamActivity itemSourceController]
  -[PUAlbumStreamActivity activityTitle]
  -[PUAlbumStreamActivity _activityBundleImageConfiguration]
  -[PUAlbumStreamActivity setItemSourceController:]
  -[PUAlbumStreamActivity activityImage]
  -[PUAlbumStreamActivity setPresentedFromActivityViewController:]
  -[PUAlbumStreamActivity setAlbumStreamDelegate:]
  -[PUAlbumStreamActivity presentActivityOnViewController:animated:completion:]
  -[PUAlbumStreamActivity _sharedAlbumAllowsAdding:]
  -[PUAlbumStreamActivity _createStreamsPickerContainerWithExisting:]
  -[PUAlbumStreamActivity _handleDismissWithSuccess:]
  -[PUAlbumStreamActivity _prepareToPost:albumName:recipients:comments:]
  -[PUAlbumStreamActivity isPresentedFromActivityViewController]
  -[PUAlbumStreamActivity albumStreamDelegate]
  -[PUAlbumStreamActivity _performPresentationOnViewController:completion:]
  -[PUAlbumStreamActivity setDestinationAlbumWasCreated:]
  -[PUAlbumStreamActivity setDestinationStreamingAlbum:]
  -[PUAlbumStreamActivity _publishAssets:withSharingInfos:customExportsInfo:andTrimmedVideoPathInfo:toAlbum:orCreateWithName:comment:invitationRecipients:wantsPublicWebsite:completion:]
  -[PUAlbumStreamActivity photoStreamComposeService:didPostComment:]
  -[PUAlbumStreamActivity photoStreamComposeServiceDidCancel:]
  -[PUAlbumStreamActivity controller:presentViewController:]
  -[PUAlbumStreamActivity controller:dismissViewControllerWithCompletion:]
  -[PUAlbumStreamActivity controller:didFinishTrimmingVideoSources:]
  -[PUAlbumStreamActivity controller:didCancelTrimmingVideoSources:]
  -[PUAlbumStreamActivity _selectedVideo]
  -[PUAlbumStreamActivity referenceViewController]
  -[PUAlbumStreamActivity setReferenceViewController:]


PUPhotosFileProviderItemProvider : NSItemProvider
 @property  NSMutableDictionary *_progressByUUID
 @property  NSMutableDictionary *_progressProxyByUUID
 @property  NSMutableDictionary *_progressSubscriberByUUID

  // instance methods
  -[PUPhotosFileProviderItemProvider loadInPlaceFileRepresentationForTypeIdentifier:completionHandler:]
  -[PUPhotosFileProviderItemProvider loadDataRepresentationForTypeIdentifier:completionHandler:]
  -[PUPhotosFileProviderItemProvider loadFileRepresentationForTypeIdentifier:completionHandler:]
  -[PUPhotosFileProviderItemProvider .cxx_destruct]
  -[PUPhotosFileProviderItemProvider loadObjectOfClass:completionHandler:]
  -[PUPhotosFileProviderItemProvider dealloc]
  -[PUPhotosFileProviderItemProvider observeValueForKeyPath:ofObject:change:context:]
  -[PUPhotosFileProviderItemProvider _progressSubscriberByUUID]
  -[PUPhotosFileProviderItemProvider _progressProxyByUUID]
  -[PUPhotosFileProviderItemProvider _progressURLForTypeIdentifier:]
  -[PUPhotosFileProviderItemProvider _startProgressForURL:UUID:cancellationHandler:]
  -[PUPhotosFileProviderItemProvider _completeProgressWithUUID:success:completionHandler:]
  -[PUPhotosFileProviderItemProvider _progressByUUID]
  -[PUPhotosFileProviderItemProvider set_progressByUUID:]
  -[PUPhotosFileProviderItemProvider set_progressSubscriberByUUID:]
  -[PUPhotosFileProviderItemProvider _startObservingProgressProxyIfNeeded:UUID:]
  -[PUPhotosFileProviderItemProvider set_progressProxyByUUID:]


PUAlbumsGadgetDataSourceManager : PXGadgetDataSourceManager
 @property  PUSessionInfo *sessionInfo
 @property  NSArray *providers
 @property  PXExtendedTraitCollection *traitCollection

  // instance methods
  -[PUAlbumsGadgetDataSourceManager setSessionInfo:]
  -[PUAlbumsGadgetDataSourceManager sessionInfo]
  -[PUAlbumsGadgetDataSourceManager providers]
  -[PUAlbumsGadgetDataSourceManager .cxx_destruct]
  -[PUAlbumsGadgetDataSourceManager traitCollection]
  -[PUAlbumsGadgetDataSourceManager gadgetProviders]
  -[PUAlbumsGadgetDataSourceManager removeCachedProviders]
  -[PUAlbumsGadgetDataSourceManager initWithTraitCollection:sessionInfo:]


PUAlbumsGadgetProvider : PXGadgetProvider <PXCollectionsDataSourceManagerObserver, PXChangeObserver, PUAlbumGadgetDelegate, PUHorizontalAlbumListGadgetLayoutDelegate>
 @property  long long currentDataSourceIdentifier
 @property  PUAlbumListCellContentViewHelper *contentViewHelper
 @property  PXPhotoKitUIMediaProvider *mediaProvider
 @property  BOOL hasGeneratedGadgets
 @property  unsigned long albumListType
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PXExtendedTraitCollection *extendedTraitCollection
 @property  BOOL shouldShowSeeAllAccessoryButton
 @property  NSString *seeAllAccessoryButtonTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAlbumsGadgetProvider albumListType]
  -[PUAlbumsGadgetProvider setMediaProvider:]
  -[PUAlbumsGadgetProvider gadgetForCollection:]
  -[PUAlbumsGadgetProvider seeAllAccessoryButtonTitle]
  -[PUAlbumsGadgetProvider startLoadingRemainingData]
  -[PUAlbumsGadgetProvider initWithIdentifier:]
  -[PUAlbumsGadgetProvider _updateDataSourceWithChangeDetails:]
  -[PUAlbumsGadgetProvider _newGadgetForCollection:]
  -[PUAlbumsGadgetProvider dataSourceManager]
  -[PUAlbumsGadgetProvider loadDataForGadgets]
  -[PUAlbumsGadgetProvider .cxx_destruct]
  -[PUAlbumsGadgetProvider mediaProvider]
  -[PUAlbumsGadgetProvider setCurrentDataSourceIdentifier:]
  -[PUAlbumsGadgetProvider albumListCellContentViewHelperForLayout:]
  -[PUAlbumsGadgetProvider init]
  -[PUAlbumsGadgetProvider setContentViewHelper:]
  -[PUAlbumsGadgetProvider initWithAlbumListType:dataSourceManager:extendedTraitCollection:]
  -[PUAlbumsGadgetProvider pauseLoadingRemainingData]
  -[PUAlbumsGadgetProvider shouldShowSeeAllAccessoryButton]
  -[PUAlbumsGadgetProvider gadgetForIndexPath:]
  -[PUAlbumsGadgetProvider _reconfigureGadgets]
  -[PUAlbumsGadgetProvider currentDataSourceIdentifier]
  -[PUAlbumsGadgetProvider contentViewHelper]
  -[PUAlbumsGadgetProvider _albumGadgetClassForCollection:]
  -[PUAlbumsGadgetProvider generateGadgets]
  -[PUAlbumsGadgetProvider setHasGeneratedGadgets:]
  -[PUAlbumsGadgetProvider estimatedNumberOfGadgets]
  -[PUAlbumsGadgetProvider albumListCellContentViewHelperForAlbum:]
  -[PUAlbumsGadgetProvider observable:didChange:context:]
  -[PUAlbumsGadgetProvider extendedTraitCollection]
  -[PUAlbumsGadgetProvider hasGeneratedGadgets]


PUAlbumsGadgetViewController : PXGadgetUIViewController <PXNavigableCollectionContainer>
 @property  PXProgrammaticNavigationDestination *px_navigationDestination
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAlbumsGadgetViewController routingOptionsForDestination:]
  -[PUAlbumsGadgetViewController collectionView:cellForItemAtIndexPath:]
  -[PUAlbumsGadgetViewController setSessionInfo:]
  -[PUAlbumsGadgetViewController px_gridPresentation]
  -[PUAlbumsGadgetViewController navigateToDestination:options:completionHandler:]
  -[PUAlbumsGadgetViewController sessionInfo]
  -[PUAlbumsGadgetViewController setPx_navigationDestination:]
  -[PUAlbumsGadgetViewController newAlbum:]
  -[PUAlbumsGadgetViewController _createPlusButton]
  -[PUAlbumsGadgetViewController px_navigationDestination]
  -[PUAlbumsGadgetViewController _updateNavigationBar]
  -[PUAlbumsGadgetViewController _canNavigateToCollection:skipGadgets:]
  -[PUAlbumsGadgetViewController newSmartAlbum:]
  -[PUAlbumsGadgetViewController .cxx_destruct]
  -[PUAlbumsGadgetViewController _navigateToCollection:animated:completion:]
  -[PUAlbumsGadgetViewController canBecomeFirstResponder]
  -[PUAlbumsGadgetViewController scrollAnimationIdentifier]
  -[PUAlbumsGadgetViewController _handleDoneButton:]
  -[PUAlbumsGadgetViewController canNavigateToCollection:]
  -[PUAlbumsGadgetViewController newFolder:]
  -[PUAlbumsGadgetViewController navigationHelperCanCurrentlyNavigate:]
  -[PUAlbumsGadgetViewController canPerformAction:withSender:]
  -[PUAlbumsGadgetViewController initWithLayout:dataSourceManager:]
  -[PUAlbumsGadgetViewController viewWillAppear:]
  -[PUAlbumsGadgetViewController newSharedAlbum:]
  -[PUAlbumsGadgetViewController configureSectionHeader:]
  -[PUAlbumsGadgetViewController _navigableGadgetForCollection:]
  -[PUAlbumsGadgetViewController allowsBarManagement]
  -[PUAlbumsGadgetViewController provideViewControllersForDestination:options:completionHandler:]
  -[PUAlbumsGadgetViewController navigateToCollection:animated:completion:]
  -[PUAlbumsGadgetViewController viewDidDisappear:]


PUAnimatedImageTileViewController : PUImageTileViewController <PUAssetViewModelChangeObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAnimatedImageTileViewController assetViewModelDidChange]
  -[PUAnimatedImageTileViewController _invalidateAnimatedImage]
  -[PUAnimatedImageTileViewController .cxx_destruct]
  -[PUAnimatedImageTileViewController viewModel:didChange:]
  -[PUAnimatedImageTileViewController _invalidatePlaybackState]
  -[PUAnimatedImageTileViewController _updateAnimatedImageIfNeeded]
  -[PUAnimatedImageTileViewController _updatePlaybackStateIfNeeded]
  -[PUAnimatedImageTileViewController loadView]


PUAnimationGroup : NSObject
 @property  PUAnimationGroup *superAnimationGroup
 @property  NSMutableArray *subAnimationGroups
 @property  @? completionHandler
 @property  BOOL readyToComplete
 @property  double elapsedTime
 @property  BOOL paused

  // class methods
  +[PUAnimationGroup pushAnimationGroup:]
  +[PUAnimationGroup popAnimationGroup:]
  +[PUAnimationGroup animationGroupWithAnimations:]

  // instance methods
  -[PUAnimationGroup setElapsedTime:]
  -[PUAnimationGroup complete]
  -[PUAnimationGroup elapsedTime]
  -[PUAnimationGroup .cxx_destruct]
  -[PUAnimationGroup isReadyToComplete]
  -[PUAnimationGroup setCompletionHandler:]
  -[PUAnimationGroup finishImmediately]
  -[PUAnimationGroup setPaused:]
  -[PUAnimationGroup dealloc]
  -[PUAnimationGroup completionHandler]
  -[PUAnimationGroup isPaused]
  -[PUAnimationGroup addSubAnimationGroup:]
  -[PUAnimationGroup superAnimationGroup]
  -[PUAnimationGroup setSuperAnimationGroup:]
  -[PUAnimationGroup completeIfNeeded]
  -[PUAnimationGroup subAnimationGroups]
  -[PUAnimationGroup pauseAnimations]
  -[PUAnimationGroup resumeAnimations]


PUAssetActionManager : NSObject
 @property  <PUAssetActionManagerDelegate> *delegate
 @property  PXSectionedSelectionManager *px_selectionManager

  // class methods
  +[PUAssetActionManager setUnlockDeviceHandler:]
  +[PUAssetActionManager _unlockDeviceHandler]
  +[PUAssetActionManager actionManagerLog]

  // instance methods
  -[PUAssetActionManager .cxx_destruct]
  -[PUAssetActionManager setDelegate:]
  -[PUAssetActionManager delegate]
  -[PUAssetActionManager barButtonItemForActionType:]
  -[PUAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:allowsRemove:]
  -[PUAssetActionManager _assetsByAssetCollectionForAssetReferences:]
  -[PUAssetActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUAssetActionManager canPerformAction:onAllAssetsByAssetCollection:]
  -[PUAssetActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUAssetActionManager px_selectionManager]
  -[PUAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:]
  -[PUAssetActionManager actionPerformerForSimpleActionType:onAssetReferences:]
  -[PUAssetActionManager actionPerformerForSettingFavoriteTo:onAssetsByAssetCollection:]
  -[PUAssetActionManager actionPerformerForDuplicatingAssetsByAssetCollection:withNewStillImageTime:]
  -[PUAssetActionManager actionPerformerForRemoveAssetsFromFeaturedPhotosByAssetCollection:assetToSuggestionMap:]
  -[PUAssetActionManager canPerformAction:onAllAssetReferences:]
  -[PUAssetActionManager shouldEnableActionType:onAllAssetsByAssetCollection:]


PUAssetActionPerformer : NSObject
 @property  NSObject<OS_os_log> *actionPerformerLog
 @property  NSArray *assets
 @property  NSDictionary *assetsByAssetCollection
 @property  unsigned long actionType
 @property  unsigned long state
 @property  <PUAssetActionPerformerDelegate> *delegate
 @property  UIViewController *presentedViewController
 @property  unsigned long sourceContext

  // instance methods
  -[PUAssetActionPerformer performUserInteractionTask]
  -[PUAssetActionPerformer performWithCompletionHandler:]
  -[PUAssetActionPerformer sourceContext]
  -[PUAssetActionPerformer .cxx_destruct]
  -[PUAssetActionPerformer assets]
  -[PUAssetActionPerformer setDelegate:]
  -[PUAssetActionPerformer completeUserInteractionTaskWithSuccess:error:]
  -[PUAssetActionPerformer init]
  -[PUAssetActionPerformer actionType]
  -[PUAssetActionPerformer state]
  -[PUAssetActionPerformer delegate]
  -[PUAssetActionPerformer presentViewController:]
  -[PUAssetActionPerformer presentedViewController]
  -[PUAssetActionPerformer initWithActionType:assets:orAssetsByAssetCollection:]
  -[PUAssetActionPerformer _handleStepFinished:withSuccess:error:]
  -[PUAssetActionPerformer _completeUnlockTaskWithSuccess:error:]
  -[PUAssetActionPerformer _requiresUnlockedDevice]
  -[PUAssetActionPerformer completeBackgroundTaskWithSuccess:error:]
  -[PUAssetActionPerformer _transitionToState:withSuccess:error:]
  -[PUAssetActionPerformer _performUnlockIfNeeded]
  -[PUAssetActionPerformer performBackgroundTask]
  -[PUAssetActionPerformer _completeStateWithSuccess:error:]
  -[PUAssetActionPerformer preheatUserInteractionTask]
  -[PUAssetActionPerformer dismissViewController:completionHandler:]
  -[PUAssetActionPerformer setSourceContext:]
  -[PUAssetActionPerformer actionPerformerLog]
  -[PUAssetActionPerformer setActionPerformerLog:]
  -[PUAssetActionPerformer assetsByAssetCollection]


PUAssetDisplayDescriptor : NSObject
 @property  PUAssetReference *assetReference
 @property  {?=qiIq} videoSeekTime
 @property  NSDate *modifiedAfterDate

  // class methods
  +[PUAssetDisplayDescriptor assetDisplayDescriptorForSimpleNavigationToAssetReference:]

  // instance methods
  -[PUAssetDisplayDescriptor .cxx_destruct]
  -[PUAssetDisplayDescriptor assetReference]
  -[PUAssetDisplayDescriptor init]
  -[PUAssetDisplayDescriptor initWithAssetReference:modifiedAfterDate:videoSeekTime:]
  -[PUAssetDisplayDescriptor videoSeekTime]
  -[PUAssetDisplayDescriptor modifiedAfterDate]


PUEditDateTimeActivity : PXActivity
  // class methods
  +[PUEditDateTimeActivity activityCategory]

  // instance methods
  -[PUEditDateTimeActivity activityViewController]
  -[PUEditDateTimeActivity _systemImageName]
  -[PUEditDateTimeActivity activityType]
  -[PUEditDateTimeActivity canPerformWithActivityItems:]
  -[PUEditDateTimeActivity activityTitle]


PUAssetDisplayDescriptorNavigationRequest : NSObject <PUBrowsingViewModelChangeObserver>
 @property  BOOL _isPerformingChanges
 @property  BOOL _isUpdating
 @property  BOOL _needsUpdateFoundTargetAssetReference
 @property  BOOL _needsUpdateArrived
 @property  BOOL _needsUpdateDone
 @property  PUAssetReference *_foundTargetAssetReference
 @property  BOOL _seeked
 @property  BOOL _arrived
 @property  BOOL _timedOut
 @property  PUBrowsingViewModel *viewModel
 @property  PUAssetReference *targetAssetReference
 @property  NSDate *targetModificationDate
 @property  {?=qiIq} targetSeekTime
 @property  double timeOut
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetDisplayDescriptorNavigationRequest _setUpdating:]
  -[PUAssetDisplayDescriptorNavigationRequest _setPerformingChanges:]
  -[PUAssetDisplayDescriptorNavigationRequest _isUpdating]
  -[PUAssetDisplayDescriptorNavigationRequest setViewModel:]
  -[PUAssetDisplayDescriptorNavigationRequest _assertInsideUpdate]
  -[PUAssetDisplayDescriptorNavigationRequest _assertInsideChangeBlock]
  -[PUAssetDisplayDescriptorNavigationRequest performChanges:]
  -[PUAssetDisplayDescriptorNavigationRequest _isPerformingChanges]
  -[PUAssetDisplayDescriptorNavigationRequest _updateIfNeeded]
  -[PUAssetDisplayDescriptorNavigationRequest _setNeedsUpdate]
  -[PUAssetDisplayDescriptorNavigationRequest .cxx_destruct]
  -[PUAssetDisplayDescriptorNavigationRequest _arrived]
  -[PUAssetDisplayDescriptorNavigationRequest viewModel]
  -[PUAssetDisplayDescriptorNavigationRequest viewModel:didChange:]
  -[PUAssetDisplayDescriptorNavigationRequest init]
  -[PUAssetDisplayDescriptorNavigationRequest _seeked]
  -[PUAssetDisplayDescriptorNavigationRequest timeOut]
  -[PUAssetDisplayDescriptorNavigationRequest _needsUpdate]
  -[PUAssetDisplayDescriptorNavigationRequest _timedOut]
  -[PUAssetDisplayDescriptorNavigationRequest setCompletionHandler:]
  -[PUAssetDisplayDescriptorNavigationRequest dealloc]
  -[PUAssetDisplayDescriptorNavigationRequest completionHandler]
  -[PUAssetDisplayDescriptorNavigationRequest _invalidateDone]
  -[PUAssetDisplayDescriptorNavigationRequest _finishRequest]
  -[PUAssetDisplayDescriptorNavigationRequest _invalidateFoundTargetAssetReference]
  -[PUAssetDisplayDescriptorNavigationRequest _setSeeked:]
  -[PUAssetDisplayDescriptorNavigationRequest _setTimedOut:]
  -[PUAssetDisplayDescriptorNavigationRequest _foundTargetAssetReference]
  -[PUAssetDisplayDescriptorNavigationRequest _updateCurrentAssetReference]
  -[PUAssetDisplayDescriptorNavigationRequest _updateSeeking]
  -[PUAssetDisplayDescriptorNavigationRequest _invalidateArrived]
  -[PUAssetDisplayDescriptorNavigationRequest _updateFoundTargetAssetReferenceIfNeeded]
  -[PUAssetDisplayDescriptorNavigationRequest _updateArrivedIfNeeded]
  -[PUAssetDisplayDescriptorNavigationRequest _updateDoneIfNeeded]
  -[PUAssetDisplayDescriptorNavigationRequest _needsUpdateFoundTargetAssetReference]
  -[PUAssetDisplayDescriptorNavigationRequest _needsUpdateArrived]
  -[PUAssetDisplayDescriptorNavigationRequest _needsUpdateDone]
  -[PUAssetDisplayDescriptorNavigationRequest _setNeedsUpdateFoundTargetAssetReference:]
  -[PUAssetDisplayDescriptorNavigationRequest setTargetAssetReference:]
  -[PUAssetDisplayDescriptorNavigationRequest _setFoundTargetAssetReference:]
  -[PUAssetDisplayDescriptorNavigationRequest _setNeedsUpdateArrived:]
  -[PUAssetDisplayDescriptorNavigationRequest _setArrived:]
  -[PUAssetDisplayDescriptorNavigationRequest _setNeedsUpdateDone:]
  -[PUAssetDisplayDescriptorNavigationRequest _navigationRequestError]
  -[PUAssetDisplayDescriptorNavigationRequest _infoMessage]
  -[PUAssetDisplayDescriptorNavigationRequest _cleanUpWhenDone]
  -[PUAssetDisplayDescriptorNavigationRequest setTargetModificationDate:]
  -[PUAssetDisplayDescriptorNavigationRequest setTargetSeekTime:]
  -[PUAssetDisplayDescriptorNavigationRequest setTimeOut:]
  -[PUAssetDisplayDescriptorNavigationRequest targetAssetReference]
  -[PUAssetDisplayDescriptorNavigationRequest targetModificationDate]
  -[PUAssetDisplayDescriptorNavigationRequest targetSeekTime]


PUAssetExplorerAggregateDictionaryUtilities : NSObject
  // class methods
  +[PUAssetExplorerAggregateDictionaryUtilities updateForReviewScreenPresentedFromSourceType:]
  +[PUAssetExplorerAggregateDictionaryUtilities updateForMarkupPresentedFromSourceType:]
  +[PUAssetExplorerAggregateDictionaryUtilities updateForEditPresentedFromSourceType:]
  +[PUAssetExplorerAggregateDictionaryUtilities updateForFunEffectsPresentedFromSourceType:]
  +[PUAssetExplorerAggregateDictionaryUtilities updateForReviewScreenCompletedWithAction:]


PUAssetExplorerReviewScreenActionManager : PUAssetActionManager
 @property  unsigned long _sourceType
 @property  <PUAssetExplorerReviewScreenActionManagerDelegate> *reviewScreenActionManagerDelegate
 @property  <PUReviewAssetProvider> *reviewAssetProvider
 @property  PUUUIDSelectionManager *selectionManager
 @property  PUUUIDSelectionManager *disableLivePhotosSelectionManager

  // instance methods
  -[PUAssetExplorerReviewScreenActionManager _sourceType]
  -[PUAssetExplorerReviewScreenActionManager .cxx_destruct]
  -[PUAssetExplorerReviewScreenActionManager selectionManager]
  -[PUAssetExplorerReviewScreenActionManager initWithSourceType:]
  -[PUAssetExplorerReviewScreenActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUAssetExplorerReviewScreenActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUAssetExplorerReviewScreenActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUAssetExplorerReviewScreenActionManager _hasReviewScreenActionTypeForAssetActionType:]
  -[PUAssetExplorerReviewScreenActionManager _reviewScreenActionTypeForAssetActionType:]
  -[PUAssetExplorerReviewScreenActionManager reviewScreenActionManagerDelegate]
  -[PUAssetExplorerReviewScreenActionManager _actionPerformerClassForActionType:]
  -[PUAssetExplorerReviewScreenActionManager reviewAssetProvider]
  -[PUAssetExplorerReviewScreenActionManager setReviewAssetProvider:]
  -[PUAssetExplorerReviewScreenActionManager setReviewScreenActionManagerDelegate:]
  -[PUAssetExplorerReviewScreenActionManager disableLivePhotosSelectionManager]


PUAssetExplorerReviewScreenActionPerformer : PUAssetActionPerformer
 @property  PUActivityProgressController *_requestProgressController
 @property  @? performUserInteractionTaskBlock

  // class methods
  +[PUAssetExplorerReviewScreenActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUAssetExplorerReviewScreenActionPerformer performUserInteractionTask]
  -[PUAssetExplorerReviewScreenActionPerformer .cxx_destruct]
  -[PUAssetExplorerReviewScreenActionPerformer setPerformUserInteractionTaskBlock:]
  -[PUAssetExplorerReviewScreenActionPerformer executePerformUserInteractionTaskBlock]
  -[PUAssetExplorerReviewScreenActionPerformer _setupProgressControllerForProgress:]
  -[PUAssetExplorerReviewScreenActionPerformer _handleReviewAssetRequestCompletedWithSuccess:canceled:error:reviewAsset:completionHandler:]
  -[PUAssetExplorerReviewScreenActionPerformer _showFailedReviewAssetRequestAlert]
  -[PUAssetExplorerReviewScreenActionPerformer _requestProgressController]
  -[PUAssetExplorerReviewScreenActionPerformer _setRequestProgressController:]
  -[PUAssetExplorerReviewScreenActionPerformer _handleProgressControllerCanceled:]
  -[PUAssetExplorerReviewScreenActionPerformer requestReviewAssetForDisplayAsset:reviewAssetProvider:completionHandler:]
  -[PUAssetExplorerReviewScreenActionPerformer performUserInteractionTaskBlock]


PUAssetExplorerReviewScreenAssetsDataSource : PUAssetsDataSource
 @property  PUAssetsDataSource *_originalDataSource
 @property  NSDictionary *_substitutedAssetsByUUID
 @property  NSCache *_assetReferenceByIndexPathCache

  // instance methods
  -[PUAssetExplorerReviewScreenAssetsDataSource indexPathForAssetCollection:]
  -[PUAssetExplorerReviewScreenAssetsDataSource .cxx_destruct]
  -[PUAssetExplorerReviewScreenAssetsDataSource _assetReferenceByIndexPathCache]
  -[PUAssetExplorerReviewScreenAssetsDataSource indexPathForAssetReference:]
  -[PUAssetExplorerReviewScreenAssetsDataSource identifier]
  -[PUAssetExplorerReviewScreenAssetsDataSource assetReferenceAtIndexPath:]
  -[PUAssetExplorerReviewScreenAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUAssetExplorerReviewScreenAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUAssetExplorerReviewScreenAssetsDataSource assetCollectionAtIndexPath:]
  -[PUAssetExplorerReviewScreenAssetsDataSource _originalDataSource]
  -[PUAssetExplorerReviewScreenAssetsDataSource _substitutedAssetsByUUID]
  -[PUAssetExplorerReviewScreenAssetsDataSource initWithDataSource:substitutedAssets:]


PUAssetExplorerReviewScreenAssetsDataSourceAssetReference : PUAssetReference
 @property  PUAssetReference *originalAssetReference

  // instance methods
  -[PUAssetExplorerReviewScreenAssetsDataSourceAssetReference .cxx_destruct]
  -[PUAssetExplorerReviewScreenAssetsDataSourceAssetReference initWithOriginalAssetReference:asset:dataSourceIdentifier:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceAssetReference originalAssetReference]


PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation : NSObject <PUMutableAssetExplorerReviewScreenAssetsDataSourceManager>
 @property  NSMutableDictionary *replacementAssetsByUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation .cxx_destruct]
  -[PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation replaceAssetInDataSourceWithAsset:]
  -[PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation removeReplacementAssetInDataSourceForUUID:]
  -[PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation initWithReplacementAssetsByUUID:]
  -[PUMutableAssetExplorerReviewScreenAssetsDataSourceManagerImplementation replacementAssetsByUUID]


PUAssetExplorerReviewScreenAssetsDataSourceManager : PUAssetsDataSourceManager <PUAssetsDataSourceManagerDelegate>
 @property  NSDictionary *_replacementAssetsByUUID
 @property  PUAssetsDataSourceManager *_originalDataSourceManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager _updateDataSource]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager performChanges:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager .cxx_destruct]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager _replacementAssetsByUUID]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager _originalDataSourceManager]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager _setOriginalDataSourceManager:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager _setReplacementAssetsByUUID:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager assetsDataSourceManagerInterestingAssetReferences:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager assetsDataSourceManager:didChangeAssetsDataSource:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager initWithOriginalDataSourceManager:]
  -[PUAssetExplorerReviewScreenAssetsDataSourceManager detachFromOriginalDataSourceManager]


PUAssetExplorerReviewScreenBadgeTileViewController : PUTileViewController <PXChangeObserver, PUBrowsingViewModelChangeObserver, PXUIAssetBadgeViewDelegate>
 @property  PXUIAssetBadgeView *_badgeView
 @property  BOOL _performingChanges
 @property  BOOL _needsUpdateBadgeView
 @property  BOOL _isOverContent
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUAssetReference *assetReference
 @property  PUAssetActionManager *actionManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAssetExplorerReviewScreenBadgeTileViewController badgeTileSize]
  +[PUAssetExplorerReviewScreenBadgeTileViewController _configureBadgeView:isOverContent:isLivePhotoDisabled:]

  // instance methods
  -[PUAssetExplorerReviewScreenBadgeTileViewController _setPerformingChanges:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _isOverContent]
  -[PUAssetExplorerReviewScreenBadgeTileViewController applyLayoutInfo:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController browsingViewModel]
  -[PUAssetExplorerReviewScreenBadgeTileViewController becomeReusable]
  -[PUAssetExplorerReviewScreenBadgeTileViewController setBrowsingViewModel:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController setAssetReference:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _needsUpdateBadgeView]
  -[PUAssetExplorerReviewScreenBadgeTileViewController performChanges:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _isPerformingChanges]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _updateIfNeeded]
  -[PUAssetExplorerReviewScreenBadgeTileViewController .cxx_destruct]
  -[PUAssetExplorerReviewScreenBadgeTileViewController assetReference]
  -[PUAssetExplorerReviewScreenBadgeTileViewController viewDidLoad]
  -[PUAssetExplorerReviewScreenBadgeTileViewController setActionManager:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController actionManager]
  -[PUAssetExplorerReviewScreenBadgeTileViewController viewModel:didChange:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _updateBadgeViewIfNeeded]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _needsUpdate]
  -[PUAssetExplorerReviewScreenBadgeTileViewController prepareForReuse]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _setNeedsUpdateBadgeView:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _invalidateBadgeView]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _badgeView]
  -[PUAssetExplorerReviewScreenBadgeTileViewController loadView]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _setOverContent:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController observable:didChange:context:]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _disableLivePhotosSelectionManager]
  -[PUAssetExplorerReviewScreenBadgeTileViewController _reviewActionManager]
  -[PUAssetExplorerReviewScreenBadgeTileViewController assetBadgeView:userDidSelectBadges:]


PUAssetExplorerReviewScreenDisableLivePhotoActionPerformer : PUAssetExplorerReviewScreenActionPerformer
  // class methods
  +[PUAssetExplorerReviewScreenDisableLivePhotoActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenDisableLivePhotoActionPerformer canPerformOnAsset:inAssetCollection:]


PUAssetExplorerReviewScreenDoneActionPerformer : PUAssetExplorerReviewScreenActionPerformer
  // class methods
  +[PUAssetExplorerReviewScreenDoneActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenDoneActionPerformer canPerformOnAsset:inAssetCollection:]


PUAssetExplorerReviewScreenEditActionPerformer : PUAssetExplorerReviewScreenActionPerformer
 @property  <PUReviewAssetProvider> *reviewAssetProvider
 @property  <PUPhotoEditViewControllerSessionDelegate> *photoDelegate

  // class methods
  +[PUAssetExplorerReviewScreenEditActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenEditActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUAssetExplorerReviewScreenEditActionPerformer performUserInteractionTask]
  -[PUAssetExplorerReviewScreenEditActionPerformer .cxx_destruct]
  -[PUAssetExplorerReviewScreenEditActionPerformer reviewAssetProvider]
  -[PUAssetExplorerReviewScreenEditActionPerformer setReviewAssetProvider:]
  -[PUAssetExplorerReviewScreenEditActionPerformer setPhotoDelegate:]
  -[PUAssetExplorerReviewScreenEditActionPerformer _presentEditViewControllerForReviewAsset:]
  -[PUAssetExplorerReviewScreenEditActionPerformer photoDelegate]


PUVideoEditReviewAsset : PUReviewAsset
  // instance methods
  -[PUVideoEditReviewAsset .cxx_destruct]
  -[PUVideoEditReviewAsset pathForTrimmedVideoFile]
  -[PUVideoEditReviewAsset initWithReviewAsset:trimmedVideoPath:]


PUAssetExplorerReviewScreenFunEffectsActionPerformer : PUAssetExplorerReviewScreenActionPerformer
 @property  <PUReviewAssetProvider> *reviewAssetProvider
 @property  <PUFunEffectsViewControllerObserver> *funEffectsObserver
 @property  PUReviewScreenBarsModel *reviewBarsModel

  // class methods
  +[PUAssetExplorerReviewScreenFunEffectsActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenFunEffectsActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer performUserInteractionTask]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer .cxx_destruct]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer reviewAssetProvider]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer setReviewAssetProvider:]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer setFunEffectsObserver:]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer setReviewBarsModel:]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer _presentFunEffectsViewControllerForAsset:]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer funEffectsObserver]
  -[PUAssetExplorerReviewScreenFunEffectsActionPerformer reviewBarsModel]


PUAssetExplorerReviewScreenMarkupActionPerformer : PUAssetExplorerReviewScreenActionPerformer
 @property  <PUReviewAssetProvider> *reviewAssetProvider
 @property  <PUPhotoMarkupViewControllerObserver> *markupObserver

  // class methods
  +[PUAssetExplorerReviewScreenMarkupActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenMarkupActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUAssetExplorerReviewScreenMarkupActionPerformer performUserInteractionTask]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer .cxx_destruct]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer reviewAssetProvider]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer setReviewAssetProvider:]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer setMarkupObserver:]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer _presentMarkupViewControllerForReviewAsset:]
  -[PUAssetExplorerReviewScreenMarkupActionPerformer markupObserver]


PUAssetExplorerReviewScreenProgressIndicatorTileViewController : PUTileViewController <PUAssetSharedViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver>
 @property  BOOL _needsUpdateProgressViewStyle
 @property  BOOL _needsUpdateStatus
 @property  BOOL _needsUpdateStatusViews
 @property  long long _progressViewStyle
 @property  PUOperationStatus *_status
 @property  PLRoundProgressView *_progressView
 @property  BOOL _isProgressViewVisible
 @property  UIButton *_errorButton
 @property  UILabel *_debugProgressLabel
 @property  PUAssetSharedViewModel *assetSharedViewModel
 @property  PUBrowsingVideoPlayer *videoPlayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAssetExplorerReviewScreenProgressIndicatorTileViewController progressIndicatorTileSize]
  +[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _loadErrorIcon]

  // instance methods
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _updateSubviewOrdering]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _invalidateStatus]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController assetSharedViewModel]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController applyLayoutInfo:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController becomeReusable]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setStatus:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _handleVideoPlayer:didChange:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setProgressViewStyle:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _needsUpdateProgressViewStyle]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _updateIfNeeded]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _status]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setNeedsUpdate]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _errorButton]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController .cxx_destruct]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _debugProgressLabel]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController viewDidLoad]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _updateStatusViewsIfNeeded]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setErrorButton:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController videoPlayer]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController viewModel:didChange:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setDebugProgressLabel:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _handleAssetSharedViewModel:didChange:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _needsUpdate]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController setAssetSharedViewModel:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController setVideoPlayer:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _progressView]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setNeedsUpdateProgressViewStyle:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _handleErrorButtonTap:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _needsUpdateStatusViews]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _needsUpdateStatus]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setProgressViewVisible:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setNeedsUpdateStatus:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _updateProgressViewStyleIfNeeded]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _invalidateProgressViewStyle]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setNeedsUpdateStatusViews:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _isProgressViewVisible]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _invalidateStatusViews]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _progressViewStyle]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setProgressViewVisible:animated:]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _updateStatusIfNeeded]
  -[PUAssetExplorerReviewScreenProgressIndicatorTileViewController _setProgressView:]


PUCinematicSubjectIndicator : UIView
 @property  long long shape
 @property  BOOL isPulsing

  // instance methods
  -[PUCinematicSubjectIndicator shape]
  -[PUCinematicSubjectIndicator isPulsing]
  -[PUCinematicSubjectIndicator .cxx_destruct]
  -[PUCinematicSubjectIndicator setFrame:]
  -[PUCinematicSubjectIndicator layoutSubviews]
  -[PUCinematicSubjectIndicator setIsPulsing:]
  -[PUCinematicSubjectIndicator setShape:]
  -[PUCinematicSubjectIndicator initWithFrame:]
  -[PUCinematicSubjectIndicator _startPulseAnimation]
  -[PUCinematicSubjectIndicator setShape:animated:]


PUAssetExplorerReviewScreenSimpleActionPerformer : PUAssetExplorerReviewScreenActionPerformer
  // class methods
  +[PUAssetExplorerReviewScreenSimpleActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUAssetExplorerReviewScreenSimpleActionPerformer canPerformOnAsset:inAssetCollection:]


PUAssetExplorerReviewScreenViewController : UIViewController <PUAssetExplorerReviewScreenActionManagerDelegate, PUReviewAssetProvider, PXChangeObserver>
 @property  PUAssetsDataSourceManager *_clientDataSourceManager
 @property  PUAssetExplorerReviewScreenAssetsDataSourceManager *_reviewDataSourceManager
 @property  PUMediaProvider *_clientMediaProvider
 @property  PUJoiningMediaProvider *_reviewMediaProvider
 @property  <PUReviewAssetProvider> *_reviewAssetProvider
 @property  PUAssetExplorerReviewScreenActionManager *_actionManager
 @property  PUBrowsingSession *_browsingSession
 @property  NSMutableDictionary *_reviewAssetRequestsByUUID
 @property  NSMutableDictionary *_substituteAssetsByUUID
 @property  PUActivityProgressController *_requestProgressController
 @property  UIAlertController *_failedReviewAssetRequestAlertController
 @property  unsigned long _options
 @property  PUReviewScreenSpec *_spec
 @property  BOOL _lowMemoryMode
 @property  <PUAssetExplorerReviewScreenViewControllerDelegate> *delegate
 @property  PUAssetsDataSourceManager *dataSourceManager
 @property  PUMediaProvider *mediaProvider
 @property  NSIndexPath *initialIndexPath
 @property  NSSet *initialSelectedAssetUUIDs
 @property  NSSet *initialDisabledLivePhotoAssetUUIDs
 @property  NSNumber *selectionCountLimit
 @property  PUReviewScreenBarsModel *reviewBarsModel
 @property  PUPhotoPickerResizeTaskDescriptorViewModel *resizeTaskDescriptorViewModel
 @property  unsigned long sourceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetExplorerReviewScreenViewController sourceType]
  -[PUAssetExplorerReviewScreenViewController initialIndexPath]
  -[PUAssetExplorerReviewScreenViewController _options]
  -[PUAssetExplorerReviewScreenViewController dataSourceManager]
  -[PUAssetExplorerReviewScreenViewController .cxx_destruct]
  -[PUAssetExplorerReviewScreenViewController mediaProvider]
  -[PUAssetExplorerReviewScreenViewController setDelegate:]
  -[PUAssetExplorerReviewScreenViewController _spec]
  -[PUAssetExplorerReviewScreenViewController resizeTaskDescriptorViewModel]
  -[PUAssetExplorerReviewScreenViewController delegate]
  -[PUAssetExplorerReviewScreenViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUAssetExplorerReviewScreenViewController _actionManager]
  -[PUAssetExplorerReviewScreenViewController _browsingSession]
  -[PUAssetExplorerReviewScreenViewController _performCancelAction]
  -[PUAssetExplorerReviewScreenViewController loadView]
  -[PUAssetExplorerReviewScreenViewController observable:didChange:context:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManager:canPerformActionType:onAsset:inAssetCollection:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManager:shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManager:didPressSelectForAsset:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressCancel:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressDone:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressRetake:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManager:didToggleLivePhoto:]
  -[PUAssetExplorerReviewScreenViewController reviewScreenBarsModelForAssetExplorerReviewScreenActionManager:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressSend:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressSelectAll:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManagerDidPressDeselectAll:]
  -[PUAssetExplorerReviewScreenViewController _reviewAssetProvider]
  -[PUAssetExplorerReviewScreenViewController reviewAssetProviderRequestForDisplayAsset:]
  -[PUAssetExplorerReviewScreenViewController _showFailedReviewAssetRequestAlert]
  -[PUAssetExplorerReviewScreenViewController _requestProgressController]
  -[PUAssetExplorerReviewScreenViewController _setRequestProgressController:]
  -[PUAssetExplorerReviewScreenViewController _handleProgressControllerCanceled:]
  -[PUAssetExplorerReviewScreenViewController reviewBarsModel]
  -[PUAssetExplorerReviewScreenViewController initWithDataSourceManager:mediaProvider:reviewAssetProvider:initialIndexPath:initialSelectedAssetUUIDs:initialDisabledLivePhotoAssetUUIDs:selectionCountLimit:sourceType:lowMemoryMode:reviewBarsModel:resizeTaskDescriptorViewModel:options:]
  -[PUAssetExplorerReviewScreenViewController initWithDataSourceManager:mediaProvider:reviewAssetProvider:initialIndexPath:initialSelectedAssetUUIDs:initialDisabledLivePhotoAssetUUIDs:selectionCountLimit:sourceType:lowMemoryMode:options:]
  -[PUAssetExplorerReviewScreenViewController _clientMediaProvider]
  -[PUAssetExplorerReviewScreenViewController _clientDataSourceManager]
  -[PUAssetExplorerReviewScreenViewController _createBrowsingSessionIfNecessary]
  -[PUAssetExplorerReviewScreenViewController _reviewDataSourceManager]
  -[PUAssetExplorerReviewScreenViewController _reviewMediaProvider]
  -[PUAssetExplorerReviewScreenViewController initialSelectedAssetUUIDs]
  -[PUAssetExplorerReviewScreenViewController initialDisabledLivePhotoAssetUUIDs]
  -[PUAssetExplorerReviewScreenViewController _lowMemoryMode]
  -[PUAssetExplorerReviewScreenViewController _titleForSelectedAssetUUIDs:]
  -[PUAssetExplorerReviewScreenViewController _fileSizeMenuForSelectedUUIDs:]
  -[PUAssetExplorerReviewScreenViewController _reviewAssetRequestsByUUID]
  -[PUAssetExplorerReviewScreenViewController _failedReviewAssetRequestAlertController]
  -[PUAssetExplorerReviewScreenViewController _tearDownProgressController]
  -[PUAssetExplorerReviewScreenViewController _performCompletionAction:]
  -[PUAssetExplorerReviewScreenViewController _substituteAssetForUUID:]
  -[PUAssetExplorerReviewScreenViewController _reviewAssetRequestForAssetUUID:]
  -[PUAssetExplorerReviewScreenViewController _createReviewAssetRequestForAsset:]
  -[PUAssetExplorerReviewScreenViewController _handleReviewAssetRequest:completedWithSuccess:canceled:error:reviewAsset:]
  -[PUAssetExplorerReviewScreenViewController _updateWithSubstituteAsset:shouldSelect:]
  -[PUAssetExplorerReviewScreenViewController _updateForCompletedReviewAssetRequest:]
  -[PUAssetExplorerReviewScreenViewController _setFailedReviewAssetRequestAlertController:]
  -[PUAssetExplorerReviewScreenViewController _handleFailedReviewAssetRequestAlertControllerDismissal]
  -[PUAssetExplorerReviewScreenViewController _substituteAssetsByUUID]
  -[PUAssetExplorerReviewScreenViewController _setSubstituteAsset:]
  -[PUAssetExplorerReviewScreenViewController selectionCountLimit]
  -[PUAssetExplorerReviewScreenViewController _requestReviewAssetForAsset:]
  -[PUAssetExplorerReviewScreenViewController _cancelReviewAssetRequestForAssetUUID:]
  -[PUAssetExplorerReviewScreenViewController _performRetakeAction]
  -[PUAssetExplorerReviewScreenViewController _handleCompletionAction:]
  -[PUAssetExplorerReviewScreenViewController _remainingReviewAssetRequests]
  -[PUAssetExplorerReviewScreenViewController _createProgressControllerForRemainingRequests:]
  -[PUAssetExplorerReviewScreenViewController _handleSelectionChanged]
  -[PUAssetExplorerReviewScreenViewController _cancelReviewAssetRequests]
  -[PUAssetExplorerReviewScreenViewController _deleteAllLinkedFiles]
  -[PUAssetExplorerReviewScreenViewController _performCompletionActionSteps:]
  -[PUAssetExplorerReviewScreenViewController _presentConfidentialityAlertWithConfirmAction:abortAction:]
  -[PUAssetExplorerReviewScreenViewController _getSelectedSubstituteAssetsAndRemoveFilesForUnneededAssets]
  -[PUAssetExplorerReviewScreenViewController photoEditController:didFinishEditingSessionForAsset:completed:]
  -[PUAssetExplorerReviewScreenViewController photoMarkupController:didFinishWithSavedAsset:]
  -[PUAssetExplorerReviewScreenViewController funEffectsViewController:didSaveAsset:withCompletion:]
  -[PUAssetExplorerReviewScreenViewController initWithDataSourceManager:mediaProvider:reviewAssetProvider:initialIndexPath:initialSelectedAssetUUIDs:initialDisabledLivePhotoAssetUUIDs:sourceType:reviewBarsModel:options:]
  -[PUAssetExplorerReviewScreenViewController initWithDataSourceManager:mediaProvider:reviewAssetProvider:initialIndexPath:initialSelectedAssetUUIDs:initialDisabledLivePhotoAssetUUIDs:sourceType:]
  -[PUAssetExplorerReviewScreenViewController assetExplorerReviewScreenActionManager:didPressFunEffectsForAsset:]


PUAssetHidingHelper : NSObject <PXPhotoLibraryUIChangeObserver>
 @property  PHManualFetchResult *_assetsFetchResults
 @property  NSArray *assets
 @property  BOOL isHiding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetHidingHelper .cxx_destruct]
  -[PUAssetHidingHelper assets]
  -[PUAssetHidingHelper setAssets:]
  -[PUAssetHidingHelper isHiding]
  -[PUAssetHidingHelper _areAllAssetsHidden]
  -[PUAssetHidingHelper _prepareAssetsVisibilityValueIfNeeded]
  -[PUAssetHidingHelper applyHiddenState:completionHandler:]
  -[PUAssetHidingHelper alertControllerForTogglingAssetsVisibilityWithCompletionHandler:]
  -[PUAssetHidingHelper canToggleAssetsVisibility]
  -[PUAssetHidingHelper menuItemTitleForTogglingAssetsVisibility]
  -[PUAssetHidingHelper attemptTogglingAssetsVisibilityFromViewController:sourceView:sourceRect:completionHandler:]
  -[PUAssetHidingHelper _assetsFetchResults]
  -[PUAssetHidingHelper _setAssetsFetchResult:]


PUAssetReference : NSObject <NSCopying, PXAssetReferenceProtocol>
 @property  <PUDisplayAsset> *asset
 @property  <PUDisplayAssetCollection> *assetCollection
 @property  NSIndexPath *indexPath
 @property  NSString *dataSourceIdentifier
 @property  PXAssetReference *pxAssetReference
 @property  {PXSimpleIndexPath=qqqq} simpleIndexPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetReference .cxx_destruct]
  -[PUAssetReference simpleIndexPath]
  -[PUAssetReference init]
  -[PUAssetReference asset]
  -[PUAssetReference isEqual:]
  -[PUAssetReference indexPath]
  -[PUAssetReference dataSourceIdentifier]
  -[PUAssetReference copyWithZone:]
  -[PUAssetReference assetCollection]
  -[PUAssetReference initWithAsset:assetCollection:indexPath:dataSourceIdentifier:]
  -[PUAssetReference pxAssetReference]


PUAssetSharedViewModel : PUViewModel
 @property  PUAssetSharedViewModelChange *currentChange
 @property  BOOL needsDeferredProcessing
 @property  unsigned short deferredProcessingNeeded
 @property  <PUDisplayAsset> *asset
 @property  PUOperationStatus *loadingStatus
 @property  NSProgress *saveProgress
 @property  long long saveState
 @property  long long flippingFullSizeRenderState

  // instance methods
  -[PUAssetSharedViewModel initWithAsset:]
  -[PUAssetSharedViewModel saveState]
  -[PUAssetSharedViewModel unregisterChangeObserver:]
  -[PUAssetSharedViewModel loadingStatus]
  -[PUAssetSharedViewModel saveProgress]
  -[PUAssetSharedViewModel registerChangeObserver:]
  -[PUAssetSharedViewModel .cxx_destruct]
  -[PUAssetSharedViewModel deferredProcessingNeeded]
  -[PUAssetSharedViewModel setSaveState:]
  -[PUAssetSharedViewModel setAsset:]
  -[PUAssetSharedViewModel init]
  -[PUAssetSharedViewModel setDeferredProcessingNeeded:]
  -[PUAssetSharedViewModel asset]
  -[PUAssetSharedViewModel setNeedsDeferredProcessing:]
  -[PUAssetSharedViewModel newViewModelChange]
  -[PUAssetSharedViewModel currentChange]
  -[PUAssetSharedViewModel setSaveProgress:]
  -[PUAssetSharedViewModel flippingFullSizeRenderState]
  -[PUAssetSharedViewModel setLoadingStatus:]
  -[PUAssetSharedViewModel setFlippingFullSizeRenderState:]
  -[PUAssetSharedViewModel needsDeferredProcessing]


PUAssetSharedViewModelChange : PUViewModelChange
 @property  BOOL loadingStatusChanged
 @property  BOOL saveProgressChanged
 @property  BOOL saveStateChanged
 @property  BOOL needsDeferredProcessingChanged
 @property  BOOL deferredProcessingNeededChanged
 @property  BOOL flippingFullSizeRenderStateChanged

  // instance methods
  -[PUAssetSharedViewModelChange flippingFullSizeRenderStateChanged]
  -[PUAssetSharedViewModelChange saveProgressChanged]
  -[PUAssetSharedViewModelChange loadingStatusChanged]
  -[PUAssetSharedViewModelChange saveStateChanged]
  -[PUAssetSharedViewModelChange hasChanges]
  -[PUAssetSharedViewModelChange setLoadingStatusChanged:]
  -[PUAssetSharedViewModelChange setSaveProgressChanged:]
  -[PUAssetSharedViewModelChange setSaveStateChanged:]
  -[PUAssetSharedViewModelChange setFlippingFullSizeRenderStateChanged:]
  -[PUAssetSharedViewModelChange setNeedsDeferredProcessingChanged:]
  -[PUAssetSharedViewModelChange setDeferredProcessingNeededChanged:]
  -[PUAssetSharedViewModelChange needsDeferredProcessingChanged]
  -[PUAssetSharedViewModelChange deferredProcessingNeededChanged]


PUAssetSupportChecker : NSObject
  // class methods
  +[PUAssetSupportChecker _presentAlertWithTitle:message:knowledgeBaseURL:alertControllerPresenter:completionHandler:]
  +[PUAssetSupportChecker _alertTitleAndMessageForAsset:type:title:message:]
  +[PUAssetSupportChecker presentAlertWithTitle:message:uti:codecName:alertControllerPresenter:completionHandler:]
  +[PUAssetSupportChecker checkIsSupportedAsset:type:completionHandler:]
  +[PUAssetSupportChecker presentAlertForAsset:type:alertControllerPresenter:completionHandler:]
  +[PUAssetSupportChecker checkIsSupportedAndPresentAlertForAsset:type:alertControllerPresenter:completionHandler:]


PUAssetViewModel : PUViewModel <PUBrowsingIrisPlayerChangeObserver, PUAssetSharedViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver, PUBrowsingAnimatedImagePlayerChangeObserver>
 @property  PUAssetViewModelChange *currentChange
 @property  PUAssetViewModelChange *currentChangeIfExists
 @property  BOOL _needsUpdateVideoPlayers
 @property  BOOL isFavorite
 @property  long long _currentFavoriteOverrideRequest
 @property  long long lastAccessoryViewVisibilityChangeReason
 @property  long long lastContentOffsetChangeReason
 @property  PUOperationStatus *loadingStatus
 @property  NSProgress *saveProgress
 @property  long long displayedContentUpdateCount
 @property  BOOL isUpdatingDisplayedContent
 @property  NSObject<OS_dispatch_group> *displayedContentUpdateGroup
 @property  <PUDisplayAsset> *asset
 @property  PUMediaProvider *mediaProvider
 @property  double focusValue
 @property  PUBadgeInfoPromise *badgeInfoPromise
 @property  BOOL forceBadgesVisible
 @property  long long importState
 @property  NSNumber *isFavoriteOverride
 @property  NSNumber *assetSyndicationStateOverride
 @property  PUAssetReference *assetReference
 @property  PUAssetSharedViewModel *assetSharedViewModel
 @property  PUModelTileTransform *modelTileTransform
 @property  BOOL isUserTransformingTile
 @property  PUBrowsingVideoPlayer *videoPlayer
 @property  PUBrowsingIrisPlayer *irisPlayer
 @property  PUBrowsingAnimatedImagePlayer *animatedImagePlayer
 @property  long long saveState
 @property  long long assetSyndicationState
 @property  BOOL accessoryViewVisible
 @property  BOOL isAccessoryViewDoneAnimatingIn
 @property  {CGPoint=dd} contentOffset
 @property  {CGPoint=dd} preferredContentOffset
 @property  {CGPoint=dd} overridingContentOffset
 @property  double contentOffsetOverrideFactor
 @property  BOOL isInEditMode
 @property  long long editStyle
 @property  long long lastEditStyleChangeReason
 @property  BOOL lowMemoryMode
 @property  BOOL toggleCTM
 @property  long long flippingFullSizeRenderState
 @property  BOOL revealsGainMapImage
 @property  BOOL isPresentedForPreview
 @property  <PXVKImageAnalysis> *visualImageAnalysis
 @property  UIButton *visualIntelligenceAnalysisButton
 @property  BOOL isBeingDismissed
 @property  BOOL isIrisPlaying
 @property  UIView *visualSearchCornerView
 @property  int visualIntelligenceAnalyzeRequestID
 @property  UIImage *visualIntelligenceAnalyzeBestImage
 @property  BOOL isVisualSearchCardShowing
 @property  <PXVKImageAnalysisInteraction> *visualSearchImageAnalysisInteraction
 @property  <PXVKImageAnalysisInteractionResultInfo> *visualSearchLookupTopItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUAssetViewModel saveState]
  -[PUAssetViewModel assetSharedViewModel]
  -[PUAssetViewModel unregisterChangeObserver:]
  -[PUAssetViewModel setVisualSearchLookupTopItem:]
  -[PUAssetViewModel setMediaProvider:]
  -[PUAssetViewModel loadingStatus]
  -[PUAssetViewModel setIsUpdatingDisplayedContent:]
  -[PUAssetViewModel lowMemoryMode]
  -[PUAssetViewModel setAssetReference:]
  -[PUAssetViewModel setFocusValue:]
  -[PUAssetViewModel initWithLowMemoryMode:]
  -[PUAssetViewModel displayedContentUpdateCount]
  -[PUAssetViewModel revealsGainMapImage]
  -[PUAssetViewModel setOverridingContentOffset:]
  -[PUAssetViewModel didPerformChanges]
  -[PUAssetViewModel saveProgress]
  -[PUAssetViewModel contentOffset]
  -[PUAssetViewModel visualSearchImageAnalysisInteraction]
  -[PUAssetViewModel visualIntelligenceAnalyzeRequestID]
  -[PUAssetViewModel lastEditStyleChangeReason]
  -[PUAssetViewModel setIsPresentedForPreview:]
  -[PUAssetViewModel _setAssetSyndicationState:]
  -[PUAssetViewModel setIsBeingDismissed:]
  -[PUAssetViewModel _handleBrowsingVideoPlayer:didChange:]
  -[PUAssetViewModel _updatePropertiesFromAssetSharedViewModel]
  -[PUAssetViewModel willUpdateDisplayedContent]
  -[PUAssetViewModel visualSearchCornerView]
  -[PUAssetViewModel overridingContentOffset]
  -[PUAssetViewModel isPresentedForPreview]
  -[PUAssetViewModel setDisplayedContentUpdateCount:]
  -[PUAssetViewModel registerChangeObserver:]
  -[PUAssetViewModel visualImageAnalysis]
  -[PUAssetViewModel _setFavorite:]
  -[PUAssetViewModel .cxx_destruct]
  -[PUAssetViewModel focusValue]
  -[PUAssetViewModel setVisualIntelligenceAnalyzeRequestID:]
  -[PUAssetViewModel assetReference]
  -[PUAssetViewModel mediaProvider]
  -[PUAssetViewModel setContentOffsetOverrideFactor:]
  -[PUAssetViewModel setVisualImageAnalysis:]
  -[PUAssetViewModel visualIntelligenceAnalyzeBestImage]
  -[PUAssetViewModel _pauseAndRewindVideoIfNeeded]
  -[PUAssetViewModel irisPlayer]
  -[PUAssetViewModel _currentFavoriteOverrideRequest]
  -[PUAssetViewModel setUserTransformingTile:]
  -[PUAssetViewModel videoPlayer]
  -[PUAssetViewModel setPreferredContentOffset:changeReason:]
  -[PUAssetViewModel setSaveState:]
  -[PUAssetViewModel debugDetailedDescription]
  -[PUAssetViewModel displayedContentUpdateGroup]
  -[PUAssetViewModel _updateVideoPlayersIfNeeded]
  -[PUAssetViewModel setAsset:]
  -[PUAssetViewModel _setCurrentFavoriteOverrideRequest:]
  -[PUAssetViewModel setAccessoryViewVisible:]
  -[PUAssetViewModel setEditStyle:changeReason:]
  -[PUAssetViewModel modelTileTransform]
  -[PUAssetViewModel viewModel:didChange:]
  -[PUAssetViewModel setRevealsGainMapImage:]
  -[PUAssetViewModel forceBadgesVisible]
  -[PUAssetViewModel didUpdateDisplayedContent]
  -[PUAssetViewModel setPreferredContentOffset:]
  -[PUAssetViewModel setVisualIntelligenceAnalysisButton:]
  -[PUAssetViewModel init]
  -[PUAssetViewModel _handleAssetSharedViewModel:didChange:]
  -[PUAssetViewModel asset]
  -[PUAssetViewModel _setLastAccessoryViewVisibilityChangeReason:]
  -[PUAssetViewModel resetContentOffset]
  -[PUAssetViewModel _setLastContentOffsetChangeReason:]
  -[PUAssetViewModel newViewModelChange]
  -[PUAssetViewModel setIsFavoriteOverride:]
  -[PUAssetViewModel isBeingDismissed]
  -[PUAssetViewModel isIrisPlaying]
  -[PUAssetViewModel assetSyndicationState]
  -[PUAssetViewModel currentChange]
  -[PUAssetViewModel editStyle]
  -[PUAssetViewModel isVisualSearchCardShowing]
  -[PUAssetViewModel setSaveProgress:]
  -[PUAssetViewModel lastContentOffsetChangeReason]
  -[PUAssetViewModel animatedImagePlayer]
  -[PUAssetViewModel setVisualIntelligenceAnalyzeBestImage:]
  -[PUAssetViewModel setAssetSharedViewModel:]
  -[PUAssetViewModel _updateAssetSyndicationState]
  -[PUAssetViewModel assetSyndicationStateOverride]
  -[PUAssetViewModel _invalidateVideoPlayers]
  -[PUAssetViewModel toggleCTM]
  -[PUAssetViewModel isAccessoryViewDoneAnimatingIn]
  -[PUAssetViewModel _handleBrowsingAnimatedImage:didChange:]
  -[PUAssetViewModel setVisualSearchImageAnalysisInteraction:]
  -[PUAssetViewModel setForceBadgesVisible:]
  -[PUAssetViewModel contentOffsetOverrideFactor]
  -[PUAssetViewModel isUserTransformingTile]
  -[PUAssetViewModel setModelTileTransform:]
  -[PUAssetViewModel visualSearchLookupTopItem]
  -[PUAssetViewModel _needsUpdateVideoPlayers]
  -[PUAssetViewModel badgeInfoPromise]
  -[PUAssetViewModel isFavorite]
  -[PUAssetViewModel flippingFullSizeRenderState]
  -[PUAssetViewModel visualIntelligenceAnalysisButton]
  -[PUAssetViewModel dealloc]
  -[PUAssetViewModel setVisualSearchCornerView:]
  -[PUAssetViewModel setAccessoryViewVisible:changeReason:]
  -[PUAssetViewModel setImportState:]
  -[PUAssetViewModel isFavoriteOverride]
  -[PUAssetViewModel _handleBrowsingIrisPlayer:didChange:]
  -[PUAssetViewModel setIsIrisPlaying:]
  -[PUAssetViewModel setLoadingStatus:]
  -[PUAssetViewModel preferredContentOffset]
  -[PUAssetViewModel _setNeedsUpdateVideoPlayers:]
  -[PUAssetViewModel setBadgeInfoPromise:]
  -[PUAssetViewModel setIsAccessoryViewDoneAnimatingIn:]
  -[PUAssetViewModel setAssetSyndicationStateOverride:]
  -[PUAssetViewModel setDisplayedContentUpdateGroup:]
  -[PUAssetViewModel setToggleCTM:]
  -[PUAssetViewModel importState]
  -[PUAssetViewModel isInEditMode]
  -[PUAssetViewModel currentChangeIfExists]
  -[PUAssetViewModel setFlippingFullSizeRenderState:]
  -[PUAssetViewModel isUpdatingDisplayedContent]
  -[PUAssetViewModel setIsVisualSearchCardShowing:]
  -[PUAssetViewModel _updateVideoPlayersLoadingAllowedIfNeeded]
  -[PUAssetViewModel isAccessoryViewVisible]
  -[PUAssetViewModel _updateFavoriteState]
  -[PUAssetViewModel _shouldPauseAndRewindVideo]
  -[PUAssetViewModel lastAccessoryViewVisibilityChangeReason]


PUAssetViewModelChange : PUViewModelChange
 @property  BOOL assetChanged
 @property  BOOL assetContentChanged
 @property  BOOL modelTileTransformChanged
 @property  BOOL isUserTransformingTileDidChange
 @property  BOOL focusValueChanged
 @property  BOOL loadingStatusChanged
 @property  BOOL saveProgressChanged
 @property  BOOL isUpdatingDisplayedContentChanged
 @property  BOOL isFavoriteChanged
 @property  BOOL isAssetSyndicationStateChanged
 @property  BOOL badgeInfoChanged
 @property  BOOL accessoryViewVisibilityChanged
 @property  BOOL isAccessoryViewDoneAnimatingInChanged
 @property  BOOL contentOffsetChanged
 @property  PUBrowsingVideoPlayerChange *videoPlayerChange
 @property  BOOL forceBadgesVisibleChanged
 @property  PUBrowsingIrisPlayerChange *irisPlayerChange
 @property  BOOL isInEditModeChanged
 @property  BOOL flippingFullSizeRenderStateChanged
 @property  BOOL toggleCTMChanged
 @property  BOOL revealsGainMapImageChanged
 @property  PUBrowsingAnimatedImagePlayerChange *animatedImageChange
 @property  BOOL saveStateChanged
 @property  BOOL importStateChanged
 @property  BOOL isPresentedForPreviewChanged
 @property  BOOL visualImageAnalysisChanged
 @property  BOOL isBeingDismissedChanged
 @property  BOOL isIrisPlayingChanged
 @property  BOOL visualSearchCornerViewChanged
 @property  BOOL visualIntelligenceAnalysisButtonChanged
 @property  BOOL visualIntelligenceAnalyzeBestImageChanged
 @property  BOOL isVisualSearchCardShowingChanged
 @property  BOOL visualSearchLookupTopItemChanged
 @property  BOOL bestImageChanged

  // instance methods
  -[PUAssetViewModelChange bestImageChanged]
  -[PUAssetViewModelChange isUpdatingDisplayedContentChanged]
  -[PUAssetViewModelChange _setIrisPlayerChange:]
  -[PUAssetViewModelChange _setFocusValueChanged:]
  -[PUAssetViewModelChange isVisualSearchCardShowingChanged]
  -[PUAssetViewModelChange _setIsUpdatingDisplayedContentChanged:]
  -[PUAssetViewModelChange _setBadgeInfoChanged:]
  -[PUAssetViewModelChange accessoryViewVisibilityChanged]
  -[PUAssetViewModelChange isAccessoryViewDoneAnimatingInChanged]
  -[PUAssetViewModelChange focusValueChanged]
  -[PUAssetViewModelChange .cxx_destruct]
  -[PUAssetViewModelChange visualImageAnalysisChanged]
  -[PUAssetViewModelChange _setIsPresentedForPreviewChanged:]
  -[PUAssetViewModelChange flippingFullSizeRenderStateChanged]
  -[PUAssetViewModelChange _setVisualSearchCornerViewChanged:]
  -[PUAssetViewModelChange isBeingDismissedChanged]
  -[PUAssetViewModelChange _setVisualIntelligenceAnalyzeBestImageChanged:]
  -[PUAssetViewModelChange _setToggleCTMChanged:]
  -[PUAssetViewModelChange _setAssetChanged:]
  -[PUAssetViewModelChange _setVisualImageAnalysisChanged:]
  -[PUAssetViewModelChange isUserTransformingTileDidChange]
  -[PUAssetViewModelChange _setContentOffsetChanged:]
  -[PUAssetViewModelChange _setModelTileTransformChanged:]
  -[PUAssetViewModelChange _setSaveStateChanged:]
  -[PUAssetViewModelChange revealsGainMapImageChanged]
  -[PUAssetViewModelChange _setFlippingFullSizeRenderStateChanged:]
  -[PUAssetViewModelChange isFavoriteChanged]
  -[PUAssetViewModelChange _setForceBadgesVisibleChanged:]
  -[PUAssetViewModelChange _setIsVisualSearchCardShowingChanged:]
  -[PUAssetViewModelChange isAssetSyndicationStateChanged]
  -[PUAssetViewModelChange _setVideoPlayerChange:]
  -[PUAssetViewModelChange visualSearchCornerViewChanged]
  -[PUAssetViewModelChange _setIsIrisPlayingChanged:]
  -[PUAssetViewModelChange _setVisualSearchLookupTopItemChanged:]
  -[PUAssetViewModelChange _setAssetContentChanged:]
  -[PUAssetViewModelChange visualIntelligenceAnalysisButtonChanged]
  -[PUAssetViewModelChange forceBadgesVisibleChanged]
  -[PUAssetViewModelChange _setUserTransformingTileDidChange:]
  -[PUAssetViewModelChange toggleCTMChanged]
  -[PUAssetViewModelChange _setLoadingStatusChanged:]
  -[PUAssetViewModelChange setRevealsGainMapImageChanged:]
  -[PUAssetViewModelChange saveProgressChanged]
  -[PUAssetViewModelChange irisPlayerChange]
  -[PUAssetViewModelChange assetContentChanged]
  -[PUAssetViewModelChange loadingStatusChanged]
  -[PUAssetViewModelChange _setIsAccessoryViewDoneAnimatingInChangedChanged:]
  -[PUAssetViewModelChange isInEditModeChanged]
  -[PUAssetViewModelChange contentOffsetChanged]
  -[PUAssetViewModelChange _setVisualIntelligenceAnalysisButtonChanged:]
  -[PUAssetViewModelChange isIrisPlayingChanged]
  -[PUAssetViewModelChange videoPlayerChange]
  -[PUAssetViewModelChange _setIsAssetSyndicationStateChanged:]
  -[PUAssetViewModelChange _setIsFavoriteChanged:]
  -[PUAssetViewModelChange _setSaveProgressChanged:]
  -[PUAssetViewModelChange animatedImageChange]
  -[PUAssetViewModelChange saveStateChanged]
  -[PUAssetViewModelChange _setAnimatedImageChange:]
  -[PUAssetViewModelChange assetChanged]
  -[PUAssetViewModelChange hasChanges]
  -[PUAssetViewModelChange _setAccessoryViewVisibilityChanged:]
  -[PUAssetViewModelChange visualIntelligenceAnalyzeBestImageChanged]
  -[PUAssetViewModelChange importStateChanged]
  -[PUAssetViewModelChange isPresentedForPreviewChanged]
  -[PUAssetViewModelChange _setIsInEditModeChanged:]
  -[PUAssetViewModelChange _setIsBeingDismissedChanged:]
  -[PUAssetViewModelChange modelTileTransformChanged]
  -[PUAssetViewModelChange _setImportStateChanged:]
  -[PUAssetViewModelChange badgeInfoChanged]
  -[PUAssetViewModelChange visualSearchLookupTopItemChanged]


_PUEmptyAssetsDataSource : PUAssetsDataSource
  // instance methods
  -[_PUEmptyAssetsDataSource indexPathForAssetCollection:]
  -[_PUEmptyAssetsDataSource indexPathForAssetReference:]
  -[_PUEmptyAssetsDataSource numberOfSubItemsAtIndexPath:]


PUAssetsDataSource : PUTilingDataSource
 @property  BOOL containsMultipleAssets
 @property  NSIndexPath *firstItemIndexPath
 @property  NSIndexPath *lastItemIndexPath

  // class methods
  +[PUAssetsDataSource emptyDataSource]

  // instance methods
  -[PUAssetsDataSource numberOfAssetsWithMaximum:]
  -[PUAssetsDataSource isEmpty]
  -[PUAssetsDataSource indexPathForAssetCollection:]
  -[PUAssetsDataSource indexPathForAssetReference:]
  -[PUAssetsDataSource startingAssetReference]
  -[PUAssetsDataSource assetReferenceAtIndexPath:]
  -[PUAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUAssetsDataSource containsMultipleAssets]
  -[PUAssetsDataSource couldAssetReferenceAppear:]
  -[PUAssetsDataSource firstItemIndexPath]
  -[PUAssetsDataSource convertIndexPath:fromAssetsDataSource:]
  -[PUAssetsDataSource assetCollectionAtIndexPath:]
  -[PUAssetsDataSource assetAtIndexPath:]
  -[PUAssetsDataSource assetReferenceForAssetReference:]
  -[PUAssetsDataSource lastItemIndexPath]
  -[PUAssetsDataSource containedAssetsDataSourceAtIndexPath:]


PUAssetsDataSourceConverter : PUTilingDataSourceConverter
  // class methods
  +[PUAssetsDataSourceConverter defaultConverter]

  // instance methods
  -[PUAssetsDataSourceConverter convertIndexPath:tileKind:fromDataSource:toDataSource:]
  -[PUAssetsDataSourceConverter shouldReloadTileControllerFromAsset:toAsset:tileKind:]


PUAssetsDataSourceManager : NSObject
 @property  PUAssetsDataSource *assetsDataSource
 @property  <PUAssetsDataSourceManagerDelegate> *delegate

  // instance methods
  -[PUAssetsDataSourceManager .cxx_destruct]
  -[PUAssetsDataSourceManager setDelegate:]
  -[PUAssetsDataSourceManager assetsDataSource]
  -[PUAssetsDataSourceManager setAssetsDataSource:]
  -[PUAssetsDataSourceManager delegate]


PUAssignToContactActivity : UIAssignToContactActivity <UINavigationControllerDelegate, PXActivity>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PXActivityItemSourceController> *itemSourceController

  // instance methods
  -[PUAssignToContactActivity activityViewController]
  -[PUAssignToContactActivity .cxx_destruct]
  -[PUAssignToContactActivity _systemImageName]
  -[PUAssignToContactActivity navigationControllerSupportedInterfaceOrientations:]
  -[PUAssignToContactActivity itemSourceController]
  -[PUAssignToContactActivity setItemSourceController:]
  -[PUAssignToContactActivity _embeddedActivityViewController]


PUAutoAdjustmentController : NSObject
 @property  BOOL busy
 @property  <NUImageProperties> *imageProperties

  // instance methods
  -[PUAutoAdjustmentController isAutoEnhanceEnabledForCompositionController:]
  -[PUAutoAdjustmentController .cxx_destruct]
  -[PUAutoAdjustmentController imageProperties]
  -[PUAutoAdjustmentController calculateStatisticsForCompositionController:valuesCalculator:completionHandler:]
  -[PUAutoAdjustmentController enableAutoEnhanceOnCompositionController:valuesCalculator:completionHandler:]
  -[PUAutoAdjustmentController disableAutoEnhanceOnCompositionController:]
  -[PUAutoAdjustmentController _setBusy:]
  -[PUAutoAdjustmentController setImageProperties:]
  -[PUAutoAdjustmentController isBusy]
  -[PUAutoAdjustmentController _applyAutoValuesOnCompositionController:whiteBalanceSettings:redEyeCorrections:smartToneLevel:smartColorLevel:valuesCalculator:]
  -[PUAutoAdjustmentController ensureCacheUpToDateForValuesCalculator:completionHandler:]
  -[PUAutoAdjustmentController _revertAutoValuesOnCompositionController:]
  -[PUAutoAdjustmentController invalidateCachedAdjustments]


PUAvalancheReviewCell : PUPhotosSharingGridCell
  // instance methods
  -[PUAvalancheReviewCell setHighlighted:]


PUAvalancheReviewCollectionViewLayout : PUHorizontalCollectionViewLayout
 @property  {UIOffset=dd} sharingBadgeOffset
 @property  NSIndexPath *zoomingCellIndexPath
 @property  <PUAvalancheReviewCollectionViewLayoutDelegate> *delegate

  // instance methods
  -[PUAvalancheReviewCollectionViewLayout flipsHorizontallyInOppositeLayoutDirection]
  -[PUAvalancheReviewCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUAvalancheReviewCollectionViewLayout .cxx_destruct]
  -[PUAvalancheReviewCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUAvalancheReviewCollectionViewLayout _supportsAdvancedTransitionAnimations]
  -[PUAvalancheReviewCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUAvalancheReviewCollectionViewLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUAvalancheReviewCollectionViewLayout sharingBadgeOffset]
  -[PUAvalancheReviewCollectionViewLayout zoomingCellIndexPath]
  -[PUAvalancheReviewCollectionViewLayout _floatingSelectionBadgeFrameForItemFrame:visibleItemFrame:atIndexPath:]
  -[PUAvalancheReviewCollectionViewLayout _badgeLayoutAttributesForItemLayoutAttributes:]
  -[PUAvalancheReviewCollectionViewLayout setZoomingCellIndexPath:]
  -[PUAvalancheReviewCollectionViewLayout _shouldInvalidateCachedLayoutForBoundsChange:]
  -[PUAvalancheReviewCollectionViewLayout setSharingBadgeOffset:]


PUAvalancheReviewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, PUReviewScrubberDataSource, PUReviewScrubberDelegate, PUAvalancheReviewCollectionViewLayoutDelegate, UIGestureRecognizerDelegate, PUTransitionViewAnimatorDelegate, PUPhotosSharingTransitionViewController, PHAssetCollectionDataSource, PUOneUpPhotosSharingTransitionViewController, PUOneUpAssetTransitionViewController>
 @property  PUAvalancheReviewControllerSpec *_spec
 @property  UICollectionView *_collectionView
 @property  PUAvalancheReviewCollectionViewLayout *_collectionViewLayout
 @property  PUReviewScrubber *_reviewScrubber
 @property  UIBarButtonItem *_doneBarButtonItem
 @property  UIBarButtonItem *_cancelBarButtonItem
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  NSIndexPath *_inFlightReferenceIndexPath
 @property  BOOL _updatingContentOffsetFromScrubbing
 @property  BOOL _completingReviewMode
 @property  PLAvalanche *_avalancheBeingReviewed
 @property  PLManagedAsset *_initialAsset
 @property  NSOrderedSet *_initialFavorites
 @property  <PLAssetContainer> *_currentAssetContainer
 @property  PHCachingImageManager *_cachingImageManager
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _previousPreheatRect
 @property  NSMutableSet *_preheatedAssets
 @property  NSMutableDictionary *_assetsToSizeDictionary
 @property  PUPhotoPinchGestureRecognizer *_photoZoomPinchGestureRecognizer
 @property  PUTransitionViewAnimator *_photoZoomAnimator
 @property  PUPhotosZoomingSharingGridCell *_photoZoomCell
 @property  UICollectionViewLayout *_transitionLayout
 @property  PUPhotosSharingTransitionContext *_photosSharingTransitionContext
 @property  PUAssetTransitionInfo *_assetTransitionInfo
 @property  <PUAvalancheReviewControllerDelegate> *delegate
 @property  <PLAssetContainerList> *avalancheContainerList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHFetchResult *assetCollectionsFetchResult

  // instance methods
  -[PUAvalancheReviewController collectionView:cellForItemAtIndexPath:]
  -[PUAvalancheReviewController _tapGestureRecognizer]
  -[PUAvalancheReviewController collectionView:numberOfItemsInSection:]
  -[PUAvalancheReviewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUAvalancheReviewController shouldAutorotateToInterfaceOrientation:]
  -[PUAvalancheReviewController _collectionView]
  -[PUAvalancheReviewController numberOfSectionsInCollectionView:]
  -[PUAvalancheReviewController viewWillLayoutSubviews]
  -[PUAvalancheReviewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUAvalancheReviewController .cxx_destruct]
  -[PUAvalancheReviewController viewDidLoad]
  -[PUAvalancheReviewController setDelegate:]
  -[PUAvalancheReviewController viewDidAppear:]
  -[PUAvalancheReviewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUAvalancheReviewController shouldAutorotate]
  -[PUAvalancheReviewController _handleDoneButton:]
  -[PUAvalancheReviewController assetsInAssetCollection:]
  -[PUAvalancheReviewController scrollViewDidEndDragging:willDecelerate:]
  -[PUAvalancheReviewController _doneBarButtonItem]
  -[PUAvalancheReviewController scrollViewDidScroll:]
  -[PUAvalancheReviewController _spec]
  -[PUAvalancheReviewController gestureRecognizerShouldBegin:]
  -[PUAvalancheReviewController scrollViewWillBeginDragging:]
  -[PUAvalancheReviewController viewWillAppear:]
  -[PUAvalancheReviewController _collectionViewLayout]
  -[PUAvalancheReviewController delegate]
  -[PUAvalancheReviewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUAvalancheReviewController dealloc]
  -[PUAvalancheReviewController supportedInterfaceOrientations]
  -[PUAvalancheReviewController _cancelBarButtonItem]
  -[PUAvalancheReviewController scrollViewDidEndDecelerating:]
  -[PUAvalancheReviewController _currentAsset]
  -[PUAvalancheReviewController _canShowWhileLocked]
  -[PUAvalancheReviewController _transitionLayout]
  -[PUAvalancheReviewController _resetPreheating]
  -[PUAvalancheReviewController _updatePreheatedAssets]
  -[PUAvalancheReviewController _cachingImageManager]
  -[PUAvalancheReviewController _setPreviousPreheatRect:]
  -[PUAvalancheReviewController _previousPreheatRect]
  -[PUAvalancheReviewController pu_wantsToolbarVisible]
  -[PUAvalancheReviewController layout:collectionView:selectionBadgeFrameForItemFrame:atIndexPath:]
  -[PUAvalancheReviewController avalancheContainerList]
  -[PUAvalancheReviewController assetCollectionsFetchResult]
  -[PUAvalancheReviewController _updateMainViewAnimated:]
  -[PUAvalancheReviewController _updateBarItemsAnimated:]
  -[PUAvalancheReviewController _handlePhotoPinch:]
  -[PUAvalancheReviewController _setPhotoZoomPinchGestureRecognizer:]
  -[PUAvalancheReviewController _startPreheatingAllAssets]
  -[PUAvalancheReviewController _stopPreheatingAllAssets]
  -[PUAvalancheReviewController _reviewScrubber]
  -[PUAvalancheReviewController _reloadAvalancheDataWithAsset:]
  -[PUAvalancheReviewController _updateCollectionViewLayoutInsets]
  -[PUAvalancheReviewController _indexPathOfCenterVisibleItemInCollectionView:]
  -[PUAvalancheReviewController _pageToIndexPath:animated:]
  -[PUAvalancheReviewController _avalancheBeingReviewed]
  -[PUAvalancheReviewController _cancelReviewModeAction:]
  -[PUAvalancheReviewController _updateNavigationItemTitle]
  -[PUAvalancheReviewController _getMainCollectionViewFrame:collectionViewLayoutInsets:orientation:]
  -[PUAvalancheReviewController _handleTapInMainCollectionView:]
  -[PUAvalancheReviewController _photoZoomCell]
  -[PUAvalancheReviewController _photosSharingTransitionContext]
  -[PUAvalancheReviewController _phAssetAtIndexPath:]
  -[PUAvalancheReviewController _updatePhotoForAsset:cell:atIndexPath:]
  -[PUAvalancheReviewController _toggleCurrentPickStatusAtIndexPath:]
  -[PUAvalancheReviewController _indexPathInCollectionView:closestToPoint:excludingIndexPath:]
  -[PUAvalancheReviewController _handleTapAtIndexPath:]
  -[PUAvalancheReviewController _beginZoomingForCellAtIndexPath:]
  -[PUAvalancheReviewController _photoZoomAnimator]
  -[PUAvalancheReviewController _endZoomingForCell]
  -[PUAvalancheReviewController _horizontalOffsetInCollectionView:forCenteringOnItemAtIndexPath:]
  -[PUAvalancheReviewController _getFirstValidIndexPath:lastValidIndexPath:]
  -[PUAvalancheReviewController _sizeForItemAtIndexPath:interfaceOrientation:]
  -[PUAvalancheReviewController _photoZoomPinchGestureRecognizer]
  -[PUAvalancheReviewController _selectionViewAtIndexPath:forCollectionView:]
  -[PUAvalancheReviewController selectionBadgeFrameForItemFrame:atIndexPath:]
  -[PUAvalancheReviewController _setPhotoZoomCell:]
  -[PUAvalancheReviewController _updateCell:forItemAtIndexPath:]
  -[PUAvalancheReviewController _setPhotoZoomAnimator:]
  -[PUAvalancheReviewController _currentAssetContainer]
  -[PUAvalancheReviewController _reallyToggleCurrentPickStatusAtIndexPath:]
  -[PUAvalancheReviewController _updateEnabledNavigationBarItems]
  -[PUAvalancheReviewController _dismissReviewControllerWithAsset:]
  -[PUAvalancheReviewController _promoteFavoriteAssetsAndDeleteNonPicks:withReviewCompletionHandler:]
  -[PUAvalancheReviewController _initialFavorites]
  -[PUAvalancheReviewController _finishReviewAndDeleteNonPicks:]
  -[PUAvalancheReviewController _initialAsset]
  -[PUAvalancheReviewController _cancelReviewMode]
  -[PUAvalancheReviewController _updateReviewScrubberFromContentOffset]
  -[PUAvalancheReviewController reviewScrubberImageFormat]
  -[PUAvalancheReviewController setPhotosSharingTransitionContext:]
  -[PUAvalancheReviewController _frameAtIndexPath:inView:]
  -[PUAvalancheReviewController _setPreheatedAssets:]
  -[PUAvalancheReviewController _setAssetsToSizeDictionary:]
  -[PUAvalancheReviewController _preheatedAssets]
  -[PUAvalancheReviewController reviewScrubber:numberOfItemsInSection:]
  -[PUAvalancheReviewController reviewScrubber:shouldProvideFeedbackForCellAtIndexPath:]
  -[PUAvalancheReviewController reviewScrubber:willDisplayCell:atIndexPath:]
  -[PUAvalancheReviewController reviewScrubberDidScrub:]
  -[PUAvalancheReviewController reviewScrubberDidSelectItemAtIndexPath:]
  -[PUAvalancheReviewController layout:collectionView:sizeForItemAtIndexPath:]
  -[PUAvalancheReviewController transitionViewAnimatorDidEnd:finished:]
  -[PUAvalancheReviewController transitionCollectionView]
  -[PUAvalancheReviewController setPhotosSharingTransitionLayout:animated:]
  -[PUAvalancheReviewController embeddedActivityView]
  -[PUAvalancheReviewController embeddedActivityViewFrameWhenShowing:]
  -[PUAvalancheReviewController setOneUpPhotosSharingTransitionContext:]
  -[PUAvalancheReviewController setOneUpPhotosSharingTransitionInfo:]
  -[PUAvalancheReviewController oneUpAssetTransition:requestTransitionContextWithCompletion:]
  -[PUAvalancheReviewController oneUpAssetTransitionAssetFinalFrame:]
  -[PUAvalancheReviewController initWithSpec:startingAtAsset:inAvalanche:currentAssetContainer:]
  -[PUAvalancheReviewController _interfaceOrientationFromDeviceOrientation:]
  -[PUAvalancheReviewController pu_wantsTabBarVisible]
  -[PUAvalancheReviewController pu_wantsNavigationBarVisible]
  -[PUAvalancheReviewController _assetAtIndexPath:]
  -[PUAvalancheReviewController pu_assetContainerDidChange:]
  -[PUAvalancheReviewController _inFlightReferenceIndexPath]
  -[PUAvalancheReviewController _updatingContentOffsetFromScrubbing]
  -[PUAvalancheReviewController _completingReviewMode]
  -[PUAvalancheReviewController set_completingReviewMode:]
  -[PUAvalancheReviewController _assetsToSizeDictionary]
  -[PUAvalancheReviewController _setTransitionLayout:]
  -[PUAvalancheReviewController set_photosSharingTransitionContext:]
  -[PUAvalancheReviewController _assetTransitionInfo]
  -[PUAvalancheReviewController set_assetTransitionInfo:]


PUAvalancheReviewControllerSpec : NSObject
 @property  double interItemSpacing
 @property  {CGSize=dd} selectionBadgeSize
 @property  {UIOffset=dd} selectionBadgeOffset
 @property  unsigned long selectionBadgeCorner

  // instance methods
  -[PUAvalancheReviewControllerSpec interItemSpacing]
  -[PUAvalancheReviewControllerSpec selectionBadgeSize]
  -[PUAvalancheReviewControllerSpec selectionBadgeOffset]
  -[PUAvalancheReviewControllerSpec selectionBadgeCorner]
  -[PUAvalancheReviewControllerSpec allowsInterfaceRotation]


PUAvalancheReviewControllerPhoneSpec : PUAvalancheReviewControllerSpec
  // instance methods
  -[PUAvalancheReviewControllerPhoneSpec interItemSpacing]


PUAvalancheReviewControllerPadSpec : PUAvalancheReviewControllerSpec
  // instance methods
  -[PUAvalancheReviewControllerPadSpec interItemSpacing]


PUBadgeInfoPromise : NSObject <NSCopying>
 @property  {PXAssetBadgeInfo=Qdq} badgeInfo

  // instance methods
  -[PUBadgeInfoPromise initWithBadgeInfo:countProvider:]
  -[PUBadgeInfoPromise .cxx_destruct]
  -[PUBadgeInfoPromise badgeInfo]
  -[PUBadgeInfoPromise isEqual:]
  -[PUBadgeInfoPromise initWithBadgeInfo:]
  -[PUBadgeInfoPromise copyWithZone:]
  -[PUBadgeInfoPromise badgeInfoPromiseWithAdjustedBadges:]


PUBadgeTileLayoutInfo : PUTileLayoutInfo
 @property  BOOL isOverContent
 @property  double contentWidth

  // instance methods
  -[PUBadgeTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUBadgeTileLayoutInfo clone]
  -[PUBadgeTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:hitTestOutset:coordinateSystem:isOverContent:contentWidth:]
  -[PUBadgeTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUBadgeTileLayoutInfo isOverContent]
  -[PUBadgeTileLayoutInfo contentWidth]


PUBadgeTileViewController : PUTileViewController <PUAssetViewModelChangeObserver, PXUIAssetBadgeViewDelegate, PXChangeObserver>
 @property  BOOL _needsUpdateBadgeInfo
 @property  BOOL _needsUpdateBadgeProvider
 @property  BOOL _needsUpdateBadgeView
 @property  {PXAssetBadgeInfo=Qdq} _badgeInfo
 @property  PUBadgeInfoProvider *_badgeInfoProvider
 @property  PXUIAssetBadgeView *_badgeView
 @property  BOOL _isOverContent
 @property  double _contentWidth
 @property  <PUBadgeTileViewControllerDelegate> *delegate
 @property  PUAssetViewModel *assetViewModel
 @property  BOOL isBadgeVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUBadgeTileViewController _badgeTileSizeForBadgeInfo:contentWidth:]
  +[PUBadgeTileViewController badgeTileSizeForAssetViewModel:contentWidth:]
  +[PUBadgeTileViewController _configureBadgeView:withBadgeInfo:isOverContent:contentWidth:animated:]
  +[PUBadgeTileViewController applyLivePhotoEffect:toAsset:]
  +[PUBadgeTileViewController badgeSizeCacheKeyValueFromBadgeInfo:contentWidth:]
  +[PUBadgeTileViewController logAppliedLivePhotoEffect:toAsset:]

  // instance methods
  -[PUBadgeTileViewController assetViewModel]
  -[PUBadgeTileViewController _isOverContent]
  -[PUBadgeTileViewController applyLayoutInfo:]
  -[PUBadgeTileViewController setAssetViewModel:]
  -[PUBadgeTileViewController becomeReusable]
  -[PUBadgeTileViewController _needsUpdateBadgeView]
  -[PUBadgeTileViewController _updateIfNeeded]
  -[PUBadgeTileViewController _invalidateBadgeProvider]
  -[PUBadgeTileViewController _setNeedsUpdate]
  -[PUBadgeTileViewController _contentWidth]
  -[PUBadgeTileViewController .cxx_destruct]
  -[PUBadgeTileViewController _badgeInfo]
  -[PUBadgeTileViewController viewDidLoad]
  -[PUBadgeTileViewController setDelegate:]
  -[PUBadgeTileViewController _badgeInfoProvider]
  -[PUBadgeTileViewController viewModel:didChange:]
  -[PUBadgeTileViewController _updateBadgeViewIfNeeded]
  -[PUBadgeTileViewController assetBadgeView:menuForBadges:]
  -[PUBadgeTileViewController _updateBadgeInfoIfNeeded]
  -[PUBadgeTileViewController _invalidateBadgeInfo]
  -[PUBadgeTileViewController _needsUpdate]
  -[PUBadgeTileViewController prepareForReuse]
  -[PUBadgeTileViewController assetBadgeView:dismissAnyPresentedViewControllerWithCompletion:]
  -[PUBadgeTileViewController didChangeActive]
  -[PUBadgeTileViewController _setNeedsUpdateBadgeView:]
  -[PUBadgeTileViewController _setBadgeInfo:]
  -[PUBadgeTileViewController _invalidateBadgeView]
  -[PUBadgeTileViewController _setContentWidth:]
  -[PUBadgeTileViewController delegate]
  -[PUBadgeTileViewController _badgeView]
  -[PUBadgeTileViewController _updateBadgeProviderIfNeeded]
  -[PUBadgeTileViewController _setNeedsUpdateBadgeInfo:]
  -[PUBadgeTileViewController _needsUpdateBadgeProvider]
  -[PUBadgeTileViewController loadView]
  -[PUBadgeTileViewController _needsUpdateBadgeInfo]
  -[PUBadgeTileViewController set_badgeInfoProvider:]
  -[PUBadgeTileViewController _setOverContent:]
  -[PUBadgeTileViewController observable:didChange:context:]
  -[PUBadgeTileViewController _setNeedsUpdateBadgeProvider:]
  -[PUBadgeTileViewController isBadgeVisible]


PUBarButtonItemCollection : NSObject
 @property  unsigned long _options
 @property  NSCache *_configurationsCache
 @property  NSMutableDictionary *_barButtonItems
 @property  NSIndexSet *_previousRequestedSet
 @property  NSArray *_previousResult
 @property  UIBarButtonItem *_flexibleSpaceBarButtonItem
 @property  UIBarButtonItem *_placeholderBarButtonItem
 @property  NSArray *identifiersOrder
 @property  NSIndexSet *centeredItemIdentifiers
 @property  <PUBarButtonItemCollectionDataSource> *dataSource
 @property  NSDictionary *barButtonItems

  // instance methods
  -[PUBarButtonItemCollection _barButtonItems]
  -[PUBarButtonItemCollection _options]
  -[PUBarButtonItemCollection _configurationsCache]
  -[PUBarButtonItemCollection centeredItemIdentifiers]
  -[PUBarButtonItemCollection setCenteredItemIdentifiers:]
  -[PUBarButtonItemCollection setDataSource:]
  -[PUBarButtonItemCollection .cxx_destruct]
  -[PUBarButtonItemCollection initWithOptions:]
  -[PUBarButtonItemCollection barButtonItems]
  -[PUBarButtonItemCollection orderedBarButtonsItemsForIdentifiers:]
  -[PUBarButtonItemCollection _placeholderBarButtonItem]
  -[PUBarButtonItemCollection dataSource]
  -[PUBarButtonItemCollection init]
  -[PUBarButtonItemCollection barButtonItemForIdentifier:]
  -[PUBarButtonItemCollection _newEntryForIdentifiers:]
  -[PUBarButtonItemCollection identifiersOrder]
  -[PUBarButtonItemCollection _setPreviousRequestedSet:]
  -[PUBarButtonItemCollection setIdentifiersOrder:]
  -[PUBarButtonItemCollection _flexibleSpaceBarButtonItem]
  -[PUBarButtonItemCollection _previousRequestedSet]
  -[PUBarButtonItemCollection _setPreviousResult:]
  -[PUBarButtonItemCollection _resetSet]
  -[PUBarButtonItemCollection _previousResult]
  -[PUBarButtonItemCollection identifierForBarButtonItem:]
  -[PUBarButtonItemCollection identifierForCustomButton:]
  -[PUBarButtonItemCollection _arrangedBarButtonItems:identifiers:]
  -[PUBarButtonItemCollection _centersButtonsIfNeeded:identifiers:]


PUBarsController : NSObject
 @property  BOOL _needsUpdateBars
 @property  BOOL _needsUpdateGestureRecognizers
 @property  BOOL _needsUpdateContentGuideInsets
 @property  BOOL _isUpdateScheduled
 @property  long long _updateBarsDisabledCount
 @property  UIViewController *viewController
 @property  {UIEdgeInsets=dddd} contentGuideInsets
 @property  <PUBarsControllerDelegate> *delegate
 @property  BOOL prefersStatusBarHidden
 @property  BOOL wantsNavigationBarVisible
 @property  BOOL wantsToolbarVisible
 @property  long long preferredBarStyle

  // instance methods
  -[PUBarsController preferredBarStyle]
  -[PUBarsController wantsNavigationBarVisible]
  -[PUBarsController prefersStatusBarHidden]
  -[PUBarsController updateBars]
  -[PUBarsController viewController]
  -[PUBarsController wantsToolbarVisible]
  -[PUBarsController updateIfNeeded]
  -[PUBarsController _setNeedsUpdate]
  -[PUBarsController invalidateViewHostingGestureRecognizers]
  -[PUBarsController updateContentGuideInsets]
  -[PUBarsController .cxx_destruct]
  -[PUBarsController _invalidateGestureRecognizers]
  -[PUBarsController invalidateViewControllerView]
  -[PUBarsController setDelegate:]
  -[PUBarsController _updateNowIfNeeded]
  -[PUBarsController init]
  -[PUBarsController updateGestureRecognizersWithHostingView:]
  -[PUBarsController setContentGuideInsets:]
  -[PUBarsController _needsUpdate]
  -[PUBarsController _setNeedsUpdateGestureRecognizers:]
  -[PUBarsController contentGuideInsets]
  -[PUBarsController _isUpdateScheduled]
  -[PUBarsController delegate]
  -[PUBarsController setViewController:]
  -[PUBarsController _needsUpdateGestureRecognizers]
  -[PUBarsController _updateGestureRecognizersIfNeeded]
  -[PUBarsController _setUpdateScheduled:]
  -[PUBarsController invalidateBars]
  -[PUBarsController _updateContentGuideInsetsIfNeeded]
  -[PUBarsController _updateBarsIfNeeded]
  -[PUBarsController _setNeedsUpdateBars:]
  -[PUBarsController _needsUpdateBars]
  -[PUBarsController _isUpdateBarsDisabled]
  -[PUBarsController _setNeedsUpdateContentGuideInsets:]
  -[PUBarsController _needsUpdateContentGuideInsets]
  -[PUBarsController _updateBarsDisabledCount]
  -[PUBarsController _setUpdateBarsDisabledCount:]
  -[PUBarsController _reenableUpdateBars]
  -[PUBarsController isLocationFromProviderInBarsArea:]
  -[PUBarsController invalidateContentGuideInsets]
  -[PUBarsController disableUpdateBarsForDuration:]


PUVideoEditOverlayViewController : UIViewController <PXSubjectTrackingViewDelegate>
 @property  PXUISubjectTrackingView *trackingView
 @property  NUMediaView *mediaView
 @property  <PUVideoEditOverlayViewControllerDelegate> *overlayControllerDelegate
 @property  BOOL hidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVideoEditOverlayViewController composition]
  -[PUVideoEditOverlayViewController setHidden:animated:]
  -[PUVideoEditOverlayViewController .cxx_destruct]
  -[PUVideoEditOverlayViewController isHidden]
  -[PUVideoEditOverlayViewController mediaView]
  -[PUVideoEditOverlayViewController interactionBegan]
  -[PUVideoEditOverlayViewController compositionController]
  -[PUVideoEditOverlayViewController setMediaView:]
  -[PUVideoEditOverlayViewController loadView]
  -[PUVideoEditOverlayViewController setHidden:]
  -[PUVideoEditOverlayViewController initWithMediaView:cineController:]
  -[PUVideoEditOverlayViewController renderDidChange:]
  -[PUVideoEditOverlayViewController scriptDidUpdate]
  -[PUVideoEditOverlayViewController overlayControllerDelegate]
  -[PUVideoEditOverlayViewController _setState:forView:animated:]
  -[PUVideoEditOverlayViewController objectTrackingStartedAtTime:]
  -[PUVideoEditOverlayViewController trackedObjectWasUpdatedAtTime:shouldStop:]
  -[PUVideoEditOverlayViewController objectTrackingFinishedWithSuccess:]
  -[PUVideoEditOverlayViewController newTrackingViewWithFrame:initialState:]
  -[PUVideoEditOverlayViewController newFocusStatusBadge]
  -[PUVideoEditOverlayViewController rectForFocusStateBadge:]
  -[PUVideoEditOverlayViewController setTrackingInProgressTextForFocusStateBadge:]
  -[PUVideoEditOverlayViewController setMessage:forFocusStateBadge:]
  -[PUVideoEditOverlayViewController unadjustedTimeForPlayerTime:]
  -[PUVideoEditOverlayViewController trackingWasEditedAtTime:]
  -[PUVideoEditOverlayViewController subjectTrackingStateDidChange:forView:animated:]
  -[PUVideoEditOverlayViewController subjectFocusStateDidChange:forBadge:focusedDisparity:]
  -[PUVideoEditOverlayViewController setNeedsUpdateTrackingFrame]
  -[PUVideoEditOverlayViewController trackingWasEdited]
  -[PUVideoEditOverlayViewController showTrackingInformationalMessage:]
  -[PUVideoEditOverlayViewController setOverlayControllerDelegate:]
  -[PUVideoEditOverlayViewController trackingView]
  -[PUVideoEditOverlayViewController setTrackingView:]


PUBlackOneUpInterfaceTheme : PUFlatWhiteInterfaceTheme
  // instance methods
  -[PUBlackOneUpInterfaceTheme playheadColor]
  -[PUBlackOneUpInterfaceTheme playheadOutlineColor]
  -[PUBlackOneUpInterfaceTheme playheadBackgroundColor]
  -[PUBlackOneUpInterfaceTheme photoBrowserBarStyle]
  -[PUBlackOneUpInterfaceTheme photoBrowserTitleViewTextColor]
  -[PUBlackOneUpInterfaceTheme photoBrowserSpotlightThemeColor]
  -[PUBlackOneUpInterfaceTheme photoBrowserTitleViewTappableTextColor]
  -[PUBlackOneUpInterfaceTheme photoBrowserChromeVisibleBackgroundColor]
  -[PUBlackOneUpInterfaceTheme scrubberPlaceholderColor]


PUEditActionActivity : UIActivity
 @property  NSString *internalActivityType
 @property  @? activityBlock
 @property  NSString *actionName
 @property  NSString *systemImageName
 @property  @? performActivityActionHandler
 @property  @? canPerformActivityActionHandler

  // class methods
  +[PUEditActionActivity activityCategory]

  // instance methods
  -[PUEditActionActivity .cxx_destruct]
  -[PUEditActionActivity _systemImageName]
  -[PUEditActionActivity systemImageName]
  -[PUEditActionActivity activityType]
  -[PUEditActionActivity canPerformWithActivityItems:]
  -[PUEditActionActivity performActivity]
  -[PUEditActionActivity activityBlock]
  -[PUEditActionActivity setSystemImageName:]
  -[PUEditActionActivity activityTitle]
  -[PUEditActionActivity actionName]
  -[PUEditActionActivity setActionName:]
  -[PUEditActionActivity setActivityBlock:]
  -[PUEditActionActivity canPerformActivityActionHandler]
  -[PUEditActionActivity performActivityActionHandler]
  -[PUEditActionActivity initWithActionName:activityType:systemImageName:]
  -[PUEditActionActivity setPerformActivityActionHandler:]
  -[PUEditActionActivity setCanPerformActivityActionHandler:]
  -[PUEditActionActivity internalActivityType]
  -[PUEditActionActivity setInternalActivityType:]


PUBlackOneUpWhiteTintInterfaceTheme : PUBlackOneUpInterfaceTheme
  // instance methods
  -[PUBlackOneUpWhiteTintInterfaceTheme tintColorForBarStyle:]


PUBrowsingAnimatedImagePlayer : PUViewModel
 @property  PHAnimatedImage *animatedImage
 @property  BOOL isAnimatedImageLoadingAllowed
 @property  NSMutableSet *_animatedImageLoadingDisablingReasons
 @property  int _animatedImageRequestID
 @property  <PUDisplayAsset> *asset
 @property  PUMediaProvider *mediaProvider

  // instance methods
  -[PUBrowsingAnimatedImagePlayer didPerformChanges]
  -[PUBrowsingAnimatedImagePlayer _updateIfNeeded]
  -[PUBrowsingAnimatedImagePlayer _invalidateAnimatedImage]
  -[PUBrowsingAnimatedImagePlayer .cxx_destruct]
  -[PUBrowsingAnimatedImagePlayer mediaProvider]
  -[PUBrowsingAnimatedImagePlayer debugDetailedDescription]
  -[PUBrowsingAnimatedImagePlayer setAsset:]
  -[PUBrowsingAnimatedImagePlayer init]
  -[PUBrowsingAnimatedImagePlayer asset]
  -[PUBrowsingAnimatedImagePlayer newViewModelChange]
  -[PUBrowsingAnimatedImagePlayer _needsUpdate]
  -[PUBrowsingAnimatedImagePlayer dealloc]
  -[PUBrowsingAnimatedImagePlayer animatedImage]
  -[PUBrowsingAnimatedImagePlayer setAnimatedImageLoadingDisabled:forReason:]
  -[PUBrowsingAnimatedImagePlayer unloadAnimatedImage]
  -[PUBrowsingAnimatedImagePlayer initWithAsset:mediaProvider:]
  -[PUBrowsingAnimatedImagePlayer _cancelLoading]
  -[PUBrowsingAnimatedImagePlayer _animatedImageRequestID]
  -[PUBrowsingAnimatedImagePlayer _setAnimatedImageRequestID:]
  -[PUBrowsingAnimatedImagePlayer _setAnimatedImage:]
  -[PUBrowsingAnimatedImagePlayer _animatedImageLoadingDisablingReasons]
  -[PUBrowsingAnimatedImagePlayer _setAnimatedImageLoadingAllowed:]
  -[PUBrowsingAnimatedImagePlayer _updateAnimatedImage]
  -[PUBrowsingAnimatedImagePlayer isAnimatedImageLoadingAllowed]
  -[PUBrowsingAnimatedImagePlayer _handleAnimatedImageRequestComplete:]
  -[PUBrowsingAnimatedImagePlayer set_animatedImageLoadingDisablingReasons:]


PUBrowsingAnimatedImagePlayerChange : PUViewModelChange
 @property  BOOL animatedImageDidChange
 @property  BOOL animatedImageLoadingAllowedDidChange

  // instance methods
  -[PUBrowsingAnimatedImagePlayerChange hasChanges]
  -[PUBrowsingAnimatedImagePlayerChange animatedImageDidChange]
  -[PUBrowsingAnimatedImagePlayerChange _setAnimatedImageDidChange:]
  -[PUBrowsingAnimatedImagePlayerChange _setAnimatedImageLoadingAllowedDidChange:]
  -[PUBrowsingAnimatedImagePlayerChange animatedImageLoadingAllowedDidChange]


PUBrowsingBackgroundTileViewController : PUTileViewController <PUBrowsingViewModelChangeObserver>
 @property  BOOL _needsUpdateColor
 @property  @? _nextColorUpdateAnimatorBlock
 @property  _UIContentUnavailableView *_emptyPlaceholderView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _emptyPlaceholderFrame
 @property  UIVisualEffectView *_backgroundBlurView
 @property  UIColor *backgroundColorOverride
 @property  UIVisualEffect *visualEffect
 @property  BOOL shouldDisplayEmptyPlaceholder
 @property  PUBrowsingViewModel *viewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBrowsingBackgroundTileViewController backgroundColorOverride]
  -[PUBrowsingBackgroundTileViewController applyLayoutInfo:]
  -[PUBrowsingBackgroundTileViewController setViewModel:]
  -[PUBrowsingBackgroundTileViewController _setNeedsUpdateColor:]
  -[PUBrowsingBackgroundTileViewController _setEmptyPlaceholderView:]
  -[PUBrowsingBackgroundTileViewController .cxx_destruct]
  -[PUBrowsingBackgroundTileViewController viewDidLoad]
  -[PUBrowsingBackgroundTileViewController _updateBackgroundBlurViewAnimated:]
  -[PUBrowsingBackgroundTileViewController viewModel]
  -[PUBrowsingBackgroundTileViewController _setEmptyPlaceholderFrame:]
  -[PUBrowsingBackgroundTileViewController _emptyPlaceholderView]
  -[PUBrowsingBackgroundTileViewController viewModel:didChange:]
  -[PUBrowsingBackgroundTileViewController _setNextColorUpdateAnimatorBlock:]
  -[PUBrowsingBackgroundTileViewController _updateEmptyPlaceholderAnimated:]
  -[PUBrowsingBackgroundTileViewController shouldDisplayEmptyPlaceholder]
  -[PUBrowsingBackgroundTileViewController _emptyPlaceholderFrameForLayoutInfo:]
  -[PUBrowsingBackgroundTileViewController _nextColorUpdateAnimatorBlock]
  -[PUBrowsingBackgroundTileViewController _emptyPlaceholderFrame]
  -[PUBrowsingBackgroundTileViewController _setBackgroundBlurView:]
  -[PUBrowsingBackgroundTileViewController setShouldDisplayEmptyPlaceholder:]
  -[PUBrowsingBackgroundTileViewController setBackgroundColorOverride:]
  -[PUBrowsingBackgroundTileViewController _backgroundBlurView]
  -[PUBrowsingBackgroundTileViewController _needsUpdateColor]
  -[PUBrowsingBackgroundTileViewController visualEffect]
  -[PUBrowsingBackgroundTileViewController initWithReuseIdentifier:]
  -[PUBrowsingBackgroundTileViewController _updateColorIfNeeded]
  -[PUBrowsingBackgroundTileViewController setVisualEffect:]
  -[PUBrowsingBackgroundTileViewController _invalidateColorWithAnimatorBlock:]
  -[PUBrowsingBackgroundTileViewController _invalidateColor]


PUBrowsingIrisPlayer : PUViewModel <ISChangeObserver, PXVideoScrubberControllerTarget>
 @property  ISWrappedAVPlayer *videoPlayer
 @property  NSMutableSet *livePhotoLoadingDisablingReasons
 @property  NSMutableSet *livePhotoPlaybackDisablingReasons
 @property  long long _currentUnloadRequestId
 @property  PHLivePhoto *livePhoto
 @property  BOOL livePhotoLoadingAllowed
 @property  long long livePhotoRequestState
 @property  int livePhotoRequestID
 @property  NSArray *currentlyDisplayedTimes
 @property  BOOL playing
 @property  @? seekCompletionHandler
 @property  PUBrowsingIrisPlayerChange *currentChange
 @property  BOOL isLivePhotoPlaybackAllowed
 @property  BOOL appIsInBackground
 @property  <PUDisplayAsset> *asset
 @property  PUMediaProvider *mediaProvider
 @property  ISLivePhotoPlayer *player
 @property  long long loadingTarget
 @property  BOOL activated
 @property  {?=qiIq} scrubbingPhotoTime
 @property  {?=qiIq} currentPhotoTime
 @property  {?=qiIq} currentVideoDuration
 @property  {?=[3]} vitalityTransform
 @property  BOOL allowLargeVitalityInset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? durationChangeHandler
 @property  @? statusChangeHandler
 @property  @? playerItemChangeHandler

  // class methods
  +[PUBrowsingIrisPlayer new]

  // instance methods
  -[PUBrowsingIrisPlayer _targetSize]
  -[PUBrowsingIrisPlayer unregisterChangeObserver:]
  -[PUBrowsingIrisPlayer _updateVitalityTransform]
  -[PUBrowsingIrisPlayer setPlaying:]
  -[PUBrowsingIrisPlayer livePhoto]
  -[PUBrowsingIrisPlayer setLivePhoto:]
  -[PUBrowsingIrisPlayer isPlaying]
  -[PUBrowsingIrisPlayer didPerformChanges]
  -[PUBrowsingIrisPlayer _updateIfNeeded]
  -[PUBrowsingIrisPlayer registerChangeObserver:]
  -[PUBrowsingIrisPlayer .cxx_destruct]
  -[PUBrowsingIrisPlayer mediaProvider]
  -[PUBrowsingIrisPlayer playerItem]
  -[PUBrowsingIrisPlayer videoPlayer]
  -[PUBrowsingIrisPlayer debugDetailedDescription]
  -[PUBrowsingIrisPlayer setActivated:]
  -[PUBrowsingIrisPlayer setAsset:]
  -[PUBrowsingIrisPlayer init]
  -[PUBrowsingIrisPlayer asset]
  -[PUBrowsingIrisPlayer player]
  -[PUBrowsingIrisPlayer newViewModelChange]
  -[PUBrowsingIrisPlayer currentChange]
  -[PUBrowsingIrisPlayer _needsUpdate]
  -[PUBrowsingIrisPlayer vitalityTransform]
  -[PUBrowsingIrisPlayer setVideoPlayer:]
  -[PUBrowsingIrisPlayer isActivated]
  -[PUBrowsingIrisPlayer removeTimeObserver:]
  -[PUBrowsingIrisPlayer playRate]
  -[PUBrowsingIrisPlayer addPeriodicTimeObserverForInterval:queue:usingBlock:]
  -[PUBrowsingIrisPlayer dealloc]
  -[PUBrowsingIrisPlayer _contentMode]
  -[PUBrowsingIrisPlayer observable:didChange:context:]
  -[PUBrowsingIrisPlayer cancelPendingSeeks]
  -[PUBrowsingIrisPlayer seekCompletionHandler]
  -[PUBrowsingIrisPlayer setLivePhotoLoadingDisabled:forReason:]
  -[PUBrowsingIrisPlayer setLoadingTarget:]
  -[PUBrowsingIrisPlayer unloadLivePhoto]
  -[PUBrowsingIrisPlayer initWithAsset:mediaProvider:]
  -[PUBrowsingIrisPlayer _cancelAllRequests]
  -[PUBrowsingIrisPlayer _playerCreateIfNeeded:]
  -[PUBrowsingIrisPlayer livePhotoRequestState]
  -[PUBrowsingIrisPlayer playerCreateIfNeeded]
  -[PUBrowsingIrisPlayer livePhotoPlaybackDisablingReasons]
  -[PUBrowsingIrisPlayer setIsLivePhotoPlaybackAllowed:]
  -[PUBrowsingIrisPlayer setSeekCompletionHandler:]
  -[PUBrowsingIrisPlayer _invalidatePlayerItemScrubbingPhotoTime]
  -[PUBrowsingIrisPlayer scrubbingPhotoTime]
  -[PUBrowsingIrisPlayer currentItemDuration]
  -[PUBrowsingIrisPlayer livePhotoLoadingDisablingReasons]
  -[PUBrowsingIrisPlayer setLivePhotoLoadingAllowed:]
  -[PUBrowsingIrisPlayer isContentLoadingRequestInProgress]
  -[PUBrowsingIrisPlayer _invalidateLivePhoto]
  -[PUBrowsingIrisPlayer setScrubbingPhotoTime:completion:]
  -[PUBrowsingIrisPlayer _invalidatePlayerContent]
  -[PUBrowsingIrisPlayer _invalidatePlayerItemLoadingTarget]
  -[PUBrowsingIrisPlayer livePhotoRequestID]
  -[PUBrowsingIrisPlayer setLivePhotoRequestState:]
  -[PUBrowsingIrisPlayer _updateLivePhotoIfNeeded]
  -[PUBrowsingIrisPlayer _updatePlayerContentIfNeeded]
  -[PUBrowsingIrisPlayer _updatePlayerItemScrubbingPhotoTimeIfNeeded]
  -[PUBrowsingIrisPlayer _updatePlayerItemLoadingTargetIfNeeded]
  -[PUBrowsingIrisPlayer _updatePlayingIfNeeded]
  -[PUBrowsingIrisPlayer isLivePhotoLoadingAllowed]
  -[PUBrowsingIrisPlayer setLivePhotoRequestID:]
  -[PUBrowsingIrisPlayer _handleLivePhotoResult:info:requestID:]
  -[PUBrowsingIrisPlayer _handleLoadedVitalityTransform:limitingAllowed:forAsset:]
  -[PUBrowsingIrisPlayer setVitalityTransform:limitingAllowed:]
  -[PUBrowsingIrisPlayer loadingTarget]
  -[PUBrowsingIrisPlayer _handlePeriodicObserverWithTime:]
  -[PUBrowsingIrisPlayer setCurrentlyDisplayedTimes:]
  -[PUBrowsingIrisPlayer _invalidatePlaying]
  -[PUBrowsingIrisPlayer isLivePhotoPlaybackAllowed]
  -[PUBrowsingIrisPlayer _handlePlaybackStyleChanged]
  -[PUBrowsingIrisPlayer statusChangeHandler]
  -[PUBrowsingIrisPlayer playerItemChangeHandler]
  -[PUBrowsingIrisPlayer durationChangeHandler]
  -[PUBrowsingIrisPlayer playerStatus]
  -[PUBrowsingIrisPlayer playerCurrentTime]
  -[PUBrowsingIrisPlayer videoScrubberController:seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
  -[PUBrowsingIrisPlayer setDurationChangeHandler:]
  -[PUBrowsingIrisPlayer setStatusChangeHandler:]
  -[PUBrowsingIrisPlayer setPlayerItemChangeHandler:]
  -[PUBrowsingIrisPlayer playPreviewHintWhenReady]
  -[PUBrowsingIrisPlayer setLivePhotoPlaybackDisabled:forReason:]
  -[PUBrowsingIrisPlayer currentPhotoTime]
  -[PUBrowsingIrisPlayer currentVideoDuration]
  -[PUBrowsingIrisPlayer currentlyDisplayedTimes]
  -[PUBrowsingIrisPlayer allowLargeVitalityInset]
  -[PUBrowsingIrisPlayer _currentUnloadRequestId]
  -[PUBrowsingIrisPlayer set_currentUnloadRequestId:]
  -[PUBrowsingIrisPlayer appIsInBackground]
  -[PUBrowsingIrisPlayer setAppIsInBackground:]


PUBrowsingIrisPlayerChange : PUViewModelChange
 @property  BOOL playbackStateDidChange
 @property  BOOL livePhotoDidChange
 @property  BOOL isLivePhotoLoadingAllowedDidChange
 @property  BOOL isLivePhotoPlaybackAllowedDidChange
 @property  BOOL playerDidChange
 @property  BOOL activatedDidChange
 @property  BOOL scrubbingPhotoTimeDidChange
 @property  BOOL currentlyDisplayedTimesDidChange
 @property  BOOL playingDidChange
 @property  BOOL vitalityTransformDidChange

  // instance methods
  -[PUBrowsingIrisPlayerChange setPlaybackStateDidChange:]
  -[PUBrowsingIrisPlayerChange playbackStateDidChange]
  -[PUBrowsingIrisPlayerChange hasChanges]
  -[PUBrowsingIrisPlayerChange setIsLivePhotoPlaybackAllowedDidChange:]
  -[PUBrowsingIrisPlayerChange setScrubbingPhotoTimeDidChange:]
  -[PUBrowsingIrisPlayerChange setCurrentlyDisplayedTimesDidChange:]
  -[PUBrowsingIrisPlayerChange setIsLivePhotoLoadingAllowedDidChange:]
  -[PUBrowsingIrisPlayerChange setActivatedDidChange:]
  -[PUBrowsingIrisPlayerChange setLivePhotoDidChange:]
  -[PUBrowsingIrisPlayerChange setPlayerDidChange:]
  -[PUBrowsingIrisPlayerChange setVitalityTransformDidChange:]
  -[PUBrowsingIrisPlayerChange setPlayingDidChange:]
  -[PUBrowsingIrisPlayerChange isLivePhotoLoadingAllowedDidChange]
  -[PUBrowsingIrisPlayerChange isLivePhotoPlaybackAllowedDidChange]
  -[PUBrowsingIrisPlayerChange playerDidChange]
  -[PUBrowsingIrisPlayerChange livePhotoDidChange]
  -[PUBrowsingIrisPlayerChange activatedDidChange]
  -[PUBrowsingIrisPlayerChange scrubbingPhotoTimeDidChange]
  -[PUBrowsingIrisPlayerChange currentlyDisplayedTimesDidChange]
  -[PUBrowsingIrisPlayerChange playingDidChange]
  -[PUBrowsingIrisPlayerChange vitalityTransformDidChange]


PUBrowsingSession : NSObject <PUAssetsDataSourceManagerDelegate, PUAssetActionManagerDelegate, PULoadingStatusManagerDelegate, PXAssetEditOperationManagerObserver>
 @property  PXAssetEditOperationManager *editOperationManager
 @property  PUMediaProvider *mediaProvider
 @property  PUBrowsingViewModel *viewModel
 @property  PUTileAnimator *tileAnimator
 @property  PUContentTileProvider *contentTileProvider
 @property  PUAssetsDataSourceManager *dataSourceManager
 @property  PUAssetActionManager *actionManager
 @property  PULoadingStatusManager *loadingStatusManager
 @property  <PXAssetImportStatusManager> *importStatusManager
 @property  PXPhotosDetailsContext *photosDetailsContext
 @property  PXGestureProvider *gestureProvider
 @property  PUOneUpMergedVideoProvider *mergedVideoProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBrowsingSession setViewModel:]
  -[PUBrowsingSession setMediaProvider:]
  -[PUBrowsingSession tileAnimator]
  -[PUBrowsingSession dataSourceManager]
  -[PUBrowsingSession .cxx_destruct]
  -[PUBrowsingSession loadingStatusManager]
  -[PUBrowsingSession mediaProvider]
  -[PUBrowsingSession viewModel]
  -[PUBrowsingSession actionManager]
  -[PUBrowsingSession init]
  -[PUBrowsingSession loadingStatusManager:didUpdateLoadingStatus:forItem:]
  -[PUBrowsingSession mergedVideoProvider]
  -[PUBrowsingSession setTileAnimator:]
  -[PUBrowsingSession assetEditOperationManager:didChangeEditOperationStatusForAsset:context:]
  -[PUBrowsingSession importStatusManager]
  -[PUBrowsingSession assetsDataSourceManagerInterestingAssetReferences:]
  -[PUBrowsingSession assetsDataSourceManager:didChangeAssetsDataSource:]
  -[PUBrowsingSession initWithDataSourceManager:actionManager:mediaProvider:photosDetailsContext:lowMemoryMode:]
  -[PUBrowsingSession initWithDataSourceManager:actionManager:mediaProvider:]
  -[PUBrowsingSession initWithDataSourceManager:actionManager:mediaProvider:photosDetailsContext:lowMemoryMode:gestureProvider:importStatusManager:]
  -[PUBrowsingSession contentTileProvider]
  -[PUBrowsingSession assetActionManagerCurrentAssetsDataSource:]
  -[PUBrowsingSession assetEditOperationManager:didChangeEditOperationsPerformedOnAsset:context:]
  -[PUBrowsingSession configureTilingView:]
  -[PUBrowsingSession setContentTileProvider:]
  -[PUBrowsingSession photosDetailsContext]
  -[PUBrowsingSession gestureProvider]
  -[PUBrowsingSession editOperationManager]


PUBrowsingLayoutToLayoutTileTransitionCoordinator : PUDefaultLayoutToLayoutTileTransitionCoordinator
  // instance methods
  -[PUBrowsingLayoutToLayoutTileTransitionCoordinator newTileAnimationOptions]
  -[PUBrowsingLayoutToLayoutTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUBrowsingLayoutToLayoutTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUBrowsingLayoutToLayoutTileTransitionCoordinator useDoubleSidedTransitionForUpdatedTileController:toLayoutInfo:]


PUBrowsingTileViewAnimator : PUTileViewAnimator
  // instance methods
  -[PUBrowsingTileViewAnimator animateTileController:toLayoutInfo:withOptions:completionHandler:]


PUBrowsingTileViewAnimationOptions : PUTileAnimationOptions

PUBrowsingVideoPlayer : PUViewModel <ISChangeObserver, PXChangeObserver, PXVideoSessionDelegate, PXActivityCoordinatorItem>
 @property  PUBrowsingVideoPlayerChange *currentChange
 @property  PXVideoSession *videoSession
 @property  AVPlayerItem *playerItem
 @property  NSError *error
 @property  BOOL isPlayerLoadingAllowed
 @property  NSMutableSet *_playerLoadingDisablingReasons
 @property  BOOL isPlayingAllowed
 @property  NSMutableSet *_playingDisablingReasons
 @property  BOOL _isUpdatingAudioSession
 @property  long long audioStatus
 @property  unsigned long nextPlayerLoadingEnabledUpdateID
 @property  BOOL shouldLoadVideoSession
 @property  NSHashTable *timeObservers
 @property  NSHashTable *videoOutputs
 @property  PXActivityCoordinator *playbackCoordinator
 @property  BOOL shouldRegisterForPlayback
 @property  BOOL shouldFadeNextVolumeChange
 @property  <PUDisplayAsset> *asset
 @property  PUMediaProvider *mediaProvider
 @property  long long desiredPlayState
 @property  BOOL isPlaybackDesired
 @property  long long playState
 @property  BOOL isStalled
 @property  BOOL alwaysRespectsMuteSwitch
 @property  BOOL isPlayable
 @property  float volume
 @property  BOOL isMuted
 @property  ISWrappedAVPlayer *avPlayer
 @property  BOOL isAtBeginning
 @property  BOOL isAtEnd
 @property  {?=qiIq} currentTime
 @property  {?=qiIq} duration
 @property  {?=qiIq} desiredSeekTime
 @property  BOOL isActivated
 @property  BOOL shouldPreloadVideoContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long activityCoordinatorQueuePosition

  // instance methods
  -[PUBrowsingVideoPlayer unregisterChangeObserver:]
  -[PUBrowsingVideoPlayer _setError:]
  -[PUBrowsingVideoPlayer setMuted:]
  -[PUBrowsingVideoPlayer isMuted]
  -[PUBrowsingVideoPlayer _handleShouldReloadAssetMediaNotification:]
  -[PUBrowsingVideoPlayer volume]
  -[PUBrowsingVideoPlayer didPerformChanges]
  -[PUBrowsingVideoPlayer setVolume:]
  -[PUBrowsingVideoPlayer registerChangeObserver:]
  -[PUBrowsingVideoPlayer .cxx_destruct]
  -[PUBrowsingVideoPlayer mediaProvider]
  -[PUBrowsingVideoPlayer playerItem]
  -[PUBrowsingVideoPlayer isStalled]
  -[PUBrowsingVideoPlayer setActivated:]
  -[PUBrowsingVideoPlayer setAsset:]
  -[PUBrowsingVideoPlayer init]
  -[PUBrowsingVideoPlayer asset]
  -[PUBrowsingVideoPlayer newViewModelChange]
  -[PUBrowsingVideoPlayer seekToTime:toleranceBefore:toleranceAfter:completionHandler:]
  -[PUBrowsingVideoPlayer currentChange]
  -[PUBrowsingVideoPlayer avPlayer]
  -[PUBrowsingVideoPlayer currentTime]
  -[PUBrowsingVideoPlayer isActivated]
  -[PUBrowsingVideoPlayer isAtEnd]
  -[PUBrowsingVideoPlayer _setPlayerItem:]
  -[PUBrowsingVideoPlayer dealloc]
  -[PUBrowsingVideoPlayer _updateAudioSessionCategory]
  -[PUBrowsingVideoPlayer playbackCoordinator]
  -[PUBrowsingVideoPlayer playState]
  -[PUBrowsingVideoPlayer seekToTime:completionHandler:]
  -[PUBrowsingVideoPlayer observable:didChange:context:]
  -[PUBrowsingVideoPlayer desiredPlayState]
  -[PUBrowsingVideoPlayer isPlayable]
  -[PUBrowsingVideoPlayer duration]
  -[PUBrowsingVideoPlayer error]
  -[PUBrowsingVideoPlayer setDesiredPlayState:]
  -[PUBrowsingVideoPlayer rewindExistingPlayer]
  -[PUBrowsingVideoPlayer setPlayerLoadingDisabled:forReason:]
  -[PUBrowsingVideoPlayer invalidateExistingPlayer]
  -[PUBrowsingVideoPlayer initWithAsset:mediaProvider:]
  -[PUBrowsingVideoPlayer assetContentDidChange]
  -[PUBrowsingVideoPlayer _updateVideoSession]
  -[PUBrowsingVideoPlayer _updatePlayerVolume]
  -[PUBrowsingVideoPlayer _updateShouldRegisterForPlayback]
  -[PUBrowsingVideoPlayer _updateVideoSessionDesiredPlayState]
  -[PUBrowsingVideoPlayer videoSession]
  -[PUBrowsingVideoPlayer setVideoSession:]
  -[PUBrowsingVideoPlayer _playerLoadingDisablingReasons]
  -[PUBrowsingVideoPlayer _setPlayerLoadingDisablingReasons:]
  -[PUBrowsingVideoPlayer nextPlayerLoadingEnabledUpdateID]
  -[PUBrowsingVideoPlayer setNextPlayerLoadingEnabledUpdateID:]
  -[PUBrowsingVideoPlayer _updatePlayerLoadingAllowedWithUpdateID:]
  -[PUBrowsingVideoPlayer isPlaybackDesired]
  -[PUBrowsingVideoPlayer setShouldLoadVideoSession:]
  -[PUBrowsingVideoPlayer setShouldFadeNextVolumeChange:]
  -[PUBrowsingVideoPlayer isAtBeginning]
  -[PUBrowsingVideoPlayer _playingDisablingReasons]
  -[PUBrowsingVideoPlayer _setPlayingDisablingReasons:]
  -[PUBrowsingVideoPlayer _setPlayingAllowed:]
  -[PUBrowsingVideoPlayer timeObservers]
  -[PUBrowsingVideoPlayer videoOutputs]
  -[PUBrowsingVideoPlayer audioStatus]
  -[PUBrowsingVideoPlayer _setAudioStatus:]
  -[PUBrowsingVideoPlayer _performPendingSeekIfNeeded]
  -[PUBrowsingVideoPlayer alwaysRespectsMuteSwitch]
  -[PUBrowsingVideoPlayer _setPlayerLoadingAllowed:]
  -[PUBrowsingVideoPlayer isPlayerLoadingAllowed]
  -[PUBrowsingVideoPlayer shouldLoadVideoSession]
  -[PUBrowsingVideoPlayer _setVideoSessionVolume:]
  -[PUBrowsingVideoPlayer isPlayingAllowed]
  -[PUBrowsingVideoPlayer setShouldRegisterForPlayback:]
  -[PUBrowsingVideoPlayer shouldRegisterForPlayback]
  -[PUBrowsingVideoPlayer activityCoordinatorQueuePosition]
  -[PUBrowsingVideoPlayer _videoSessionDesiredPlayState]
  -[PUBrowsingVideoPlayer shouldFadeNextVolumeChange]
  -[PUBrowsingVideoPlayer videoSessionDidPlayToEnd:]
  -[PUBrowsingVideoPlayer videoSessionAudioSessionOutputVolumeDidChange:fromVolume:toVolume:]
  -[PUBrowsingVideoPlayer setActivityCoordinatorQueuePosition:]
  -[PUBrowsingVideoPlayer setAlwaysRespectsMuteSwitch:]
  -[PUBrowsingVideoPlayer setShouldPreloadVideoContent:]
  -[PUBrowsingVideoPlayer setPlayingDisabled:forReason:]
  -[PUBrowsingVideoPlayer setDesiredSeekTime:]
  -[PUBrowsingVideoPlayer registerTimeObserver:]
  -[PUBrowsingVideoPlayer unregisterTimeObserver:]
  -[PUBrowsingVideoPlayer registerVideoOutput:]
  -[PUBrowsingVideoPlayer unregisterVideoOutput:]
  -[PUBrowsingVideoPlayer desiredSeekTime]
  -[PUBrowsingVideoPlayer shouldPreloadVideoContent]
  -[PUBrowsingVideoPlayer _isUpdatingAudioSession]
  -[PUBrowsingVideoPlayer _setUpdatingAudioSession:]


PUBrowsingVideoPlayerChange : PUViewModelChange
 @property  BOOL playStateDidChange
 @property  BOOL desiredPlayStateDidChange
 @property  BOOL isPlayingAllowedDidChange
 @property  BOOL isActivatedDidChange
 @property  BOOL isPlayerLoadingAllowedDidChange
 @property  BOOL avPlayerDidChange
 @property  BOOL playerItemDidChange
 @property  BOOL errorDidChange
 @property  BOOL isAtBeginningDidChange
 @property  BOOL isAtEndDidChange
 @property  BOOL isStalledDidChange
 @property  BOOL alwaysRespectsMuteSwitchDidChange
 @property  BOOL isPlayableDidChange
 @property  BOOL isMutedDidChange
 @property  BOOL audioStatusDidChange
 @property  BOOL audioSessionVolumeIncreaseDidOccur

  // instance methods
  -[PUBrowsingVideoPlayerChange playerItemDidChange]
  -[PUBrowsingVideoPlayerChange hasChanges]
  -[PUBrowsingVideoPlayerChange desiredPlayStateDidChange]
  -[PUBrowsingVideoPlayerChange playStateDidChange]
  -[PUBrowsingVideoPlayerChange isActivatedDidChange]
  -[PUBrowsingVideoPlayerChange isStalledDidChange]
  -[PUBrowsingVideoPlayerChange _setDesiredPlayStateDidChange:]
  -[PUBrowsingVideoPlayerChange _setIsMutedDidChange:]
  -[PUBrowsingVideoPlayerChange _setAlwaysRespectsMuteSwitchDidChange:]
  -[PUBrowsingVideoPlayerChange _setActivatedDidChange:]
  -[PUBrowsingVideoPlayerChange _setAtBeginningDidChange:]
  -[PUBrowsingVideoPlayerChange _setAtEndDidChange:]
  -[PUBrowsingVideoPlayerChange _setStalledDidChange:]
  -[PUBrowsingVideoPlayerChange _setPlayableDidChange:]
  -[PUBrowsingVideoPlayerChange _setPlayStateDidChange:]
  -[PUBrowsingVideoPlayerChange _setAudioSessionVolumeIncreaseDidOccur:]
  -[PUBrowsingVideoPlayerChange _setPlayerItemDidChange:]
  -[PUBrowsingVideoPlayerChange _setErrorDidChange:]
  -[PUBrowsingVideoPlayerChange _setAudioStatusDidChange:]
  -[PUBrowsingVideoPlayerChange _setPlayerLoadingAllowedDidChange:]
  -[PUBrowsingVideoPlayerChange _setPlayingAllowedDidChange:]
  -[PUBrowsingVideoPlayerChange _setAVPlayerDidChange:]
  -[PUBrowsingVideoPlayerChange isPlayingAllowedDidChange]
  -[PUBrowsingVideoPlayerChange isPlayerLoadingAllowedDidChange]
  -[PUBrowsingVideoPlayerChange avPlayerDidChange]
  -[PUBrowsingVideoPlayerChange errorDidChange]
  -[PUBrowsingVideoPlayerChange isAtBeginningDidChange]
  -[PUBrowsingVideoPlayerChange isAtEndDidChange]
  -[PUBrowsingVideoPlayerChange alwaysRespectsMuteSwitchDidChange]
  -[PUBrowsingVideoPlayerChange isPlayableDidChange]
  -[PUBrowsingVideoPlayerChange isMutedDidChange]
  -[PUBrowsingVideoPlayerChange audioStatusDidChange]
  -[PUBrowsingVideoPlayerChange audioSessionVolumeIncreaseDidOccur]


_PUBrowsingVideoOutputPlayerReference : NSObject
 @property  PUBrowsingVideoPlayer *player

  // instance methods
  -[_PUBrowsingVideoOutputPlayerReference .cxx_destruct]
  -[_PUBrowsingVideoOutputPlayerReference setPlayer:]
  -[_PUBrowsingVideoOutputPlayerReference player]


PUBrowsingViewModel : PUViewModel <PUAssetViewModelChangeObserver, PUAssetSharedViewModelChangeObserver, PXAssetImportStatusObserver>
 @property  long long _userNavigationDistance
 @property  long long _scrubbingSessionDistance
 @property  long long lastChromeVisibilityChangeReason
 @property  id lastChromeVisibilityChangeContext
 @property  BOOL isAnimatingAnyTransition
 @property  NSMutableSet *_animatingTransitionIdentifiers
 @property  NSMutableSet *_videoDisallowedReasons
 @property  long long browsingSpeedRegime
 @property  PUAssetReference *trailingAssetReference
 @property  PUAssetReference *leadingAssetReference
 @property  PUAssetsDataSource *assetsDataSource
 @property  PUMediaProvider *mediaProvider
 @property  PUAssetActionManager *actionManager
 @property  <PXAssetImportStatusManager> *importStatusManager
 @property  PUAssetReference *currentAssetReference
 @property  PUAssetReference *lastViewedAssetReference
 @property  double currentAssetTransitionProgress
 @property  NSString *transitionDriverIdentifier
 @property  BOOL isScrubbing
 @property  BOOL isScrolling
 @property  long long videoOverlayPlayState
 @property  BOOL isAttemptingToPlayVideoOverlay
 @property  BOOL accessoryViewsDefaultVisibility
 @property  BOOL isChromeVisible
 @property  NSDate *lastChromeVisibilityChangeDate
 @property  BOOL presentingOverOneUp
 @property  long long horizontalSizeClass
 @property  {CGSize=dd} secondScreenSize
 @property  BOOL autoplayVideoMuted
 @property  PUAssetViewModel *assetViewModelForCurrentAssetReference
 @property  NSString *navigationBarTitle
 @property  PUReviewScreenBarsModel *reviewScreenBarsModel
 @property  PUPhotoPickerResizeTaskDescriptorViewModel *resizeTaskDescriptorViewModel
 @property  BOOL isVideoContentAllowed
 @property  BOOL lowMemoryMode
 @property  BOOL visualIntelligenceInteractionEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUBrowsingViewModel initialize]
  +[PUBrowsingViewModel setAutoplayVideoMuted:]
  +[PUBrowsingViewModel _handleSceneWillDeactivateNotification:]
  +[PUBrowsingViewModel autoplayVideoMuted]

  // instance methods
  -[PUBrowsingViewModel isScrubbing]
  -[PUBrowsingViewModel assetViewModelForCurrentAssetReference]
  -[PUBrowsingViewModel unregisterChangeObserver:]
  -[PUBrowsingViewModel setMediaProvider:]
  -[PUBrowsingViewModel lastChromeVisibilityChangeReason]
  -[PUBrowsingViewModel accessoryViewsDefaultVisibility]
  -[PUBrowsingViewModel lowMemoryMode]
  -[PUBrowsingViewModel isPresentingOverOneUp]
  -[PUBrowsingViewModel assetSharedViewModelForAsset:]
  -[PUBrowsingViewModel _invalidateCurrentAndNeighboringAssetViewModels]
  -[PUBrowsingViewModel initWithLowMemoryMode:]
  -[PUBrowsingViewModel didPerformChanges]
  -[PUBrowsingViewModel setAnimating:transitionWithIdentifier:]
  -[PUBrowsingViewModel horizontalSizeClass]
  -[PUBrowsingViewModel currentAssetReference]
  -[PUBrowsingViewModel _updateIfNeeded]
  -[PUBrowsingViewModel setIsScrolling:]
  -[PUBrowsingViewModel setCurrentAssetReference:]
  -[PUBrowsingViewModel setIsScrubbing:]
  -[PUBrowsingViewModel setAutoplayVideoMuted:]
  -[PUBrowsingViewModel _handleAssetViewModel:didChange:]
  -[PUBrowsingViewModel isAutoplayVideoMuted]
  -[PUBrowsingViewModel lastChromeVisibilityChangeDate]
  -[PUBrowsingViewModel setSecondScreenSize:]
  -[PUBrowsingViewModel registerChangeObserver:]
  -[PUBrowsingViewModel setAccessoryViewsDefaultVisibility:changeReason:]
  -[PUBrowsingViewModel .cxx_destruct]
  -[PUBrowsingViewModel secondScreenSize]
  -[PUBrowsingViewModel _setScrubbingSessionDistance:]
  -[PUBrowsingViewModel mediaProvider]
  -[PUBrowsingViewModel _handleAsyncBrowsingSpeedRegimeInvalidation]
  -[PUBrowsingViewModel setReviewScreenBarsModel:]
  -[PUBrowsingViewModel _invalidateAllAssetViewModels]
  -[PUBrowsingViewModel _updateAssetViewModel:]
  -[PUBrowsingViewModel isAttemptingToPlayVideoOverlay]
  -[PUBrowsingViewModel _setLastChromeVisibilityChangeContext:]
  -[PUBrowsingViewModel debugDetailedDescription]
  -[PUBrowsingViewModel reviewScreenBarsModel]
  -[PUBrowsingViewModel setChromeVisible:]
  -[PUBrowsingViewModel setActionManager:]
  -[PUBrowsingViewModel _assetSharedViewModelForAsset:createIfNeeded:]
  -[PUBrowsingViewModel assetsDataSource]
  -[PUBrowsingViewModel _invalidateBrowsingSpeedRegimeAfterMaximumDelay:]
  -[PUBrowsingViewModel setVideoOverlayPlayState:]
  -[PUBrowsingViewModel actionManager]
  -[PUBrowsingViewModel viewModel:didChange:]
  -[PUBrowsingViewModel activeAssetReferences]
  -[PUBrowsingViewModel setVideoContentAllowed:forReason:]
  -[PUBrowsingViewModel setHorizontalSizeClass:]
  -[PUBrowsingViewModel init]
  -[PUBrowsingViewModel _handleAssetSharedViewModel:didChange:]
  -[PUBrowsingViewModel _animatingTransitionIdentifiers]
  -[PUBrowsingViewModel browsingSpeedRegime]
  -[PUBrowsingViewModel _userNavigationDistance]
  -[PUBrowsingViewModel navigationBarTitle]
  -[PUBrowsingViewModel _invalidateBrowsingSpeedRegime]
  -[PUBrowsingViewModel _focusValueForAsset:]
  -[PUBrowsingViewModel isTogglingCTMForAsset:]
  -[PUBrowsingViewModel newViewModelChange]
  -[PUBrowsingViewModel visualIntelligenceInteractionEnabled]
  -[PUBrowsingViewModel currentChange]
  -[PUBrowsingViewModel _setAnimatingAnyTransition:]
  -[PUBrowsingViewModel _needsUpdate]
  -[PUBrowsingViewModel _setBrowsingSpeedRegime:]
  -[PUBrowsingViewModel _setTransitionDriverIdentifier:]
  -[PUBrowsingViewModel _setVideoDisallowedReasons:]
  -[PUBrowsingViewModel isVideoContentAllowed]
  -[PUBrowsingViewModel isChromeVisible]
  -[PUBrowsingViewModel lastViewedAssetReference]
  -[PUBrowsingViewModel lastChromeVisibilityChangeContext]
  -[PUBrowsingViewModel setAccessoryViewsDefaultVisibility:]
  -[PUBrowsingViewModel _updateScrubSpeedRegimeIfNeeded]
  -[PUBrowsingViewModel resizeTaskDescriptorViewModel]
  -[PUBrowsingViewModel setIsAttemptingToPlayVideoOverlay:]
  -[PUBrowsingViewModel importStatusManager]
  -[PUBrowsingViewModel _setLeadingAssetReference:]
  -[PUBrowsingViewModel setAssetsDataSource:]
  -[PUBrowsingViewModel isAnimatingAnyTransition]
  -[PUBrowsingViewModel _filteredAllowedBadges:forAssetReference:]
  -[PUBrowsingViewModel _updateAssetViewModelsIfNeeded]
  -[PUBrowsingViewModel setResizeTaskDescriptorViewModel:]
  -[PUBrowsingViewModel _resetAccessoryViewsVisibilityToDefaultWithChangeReason:]
  -[PUBrowsingViewModel assetViewModelForAssetReference:]
  -[PUBrowsingViewModel currentAssetTransitionProgress]
  -[PUBrowsingViewModel _updateNeighboringAssetReferences]
  -[PUBrowsingViewModel isScrolling]
  -[PUBrowsingViewModel setVisualIntelligenceInteractionEnabled:]
  -[PUBrowsingViewModel _setLastChromeVisibilityChangeReason:]
  -[PUBrowsingViewModel setVideoContentAllowedForAllReasons]
  -[PUBrowsingViewModel signalReviewScreenSelectionChanged]
  -[PUBrowsingViewModel _setVideoContentAllowed:]
  -[PUBrowsingViewModel _handleAutoplayMutedDidChangeNotification:]
  -[PUBrowsingViewModel videoOverlayPlayState]
  -[PUBrowsingViewModel setImportStatusManager:]
  -[PUBrowsingViewModel _badgeInfoPromiseForAssetReference:]
  -[PUBrowsingViewModel assetImportStatusManager:didChangeStatusForAssetReference:]
  -[PUBrowsingViewModel _setAnimatingTransitionIdentifiers:]
  -[PUBrowsingViewModel setNavigationBarTitle:]
  -[PUBrowsingViewModel transitionDriverIdentifier]
  -[PUBrowsingViewModel setChromeVisible:changeReason:context:]
  -[PUBrowsingViewModel _videoDisallowedReasons]
  -[PUBrowsingViewModel leadingAssetReference]
  -[PUBrowsingViewModel setCurrentAssetReference:transitionProgress:transitionDriverIdentifier:]
  -[PUBrowsingViewModel setPresentingOverOneUp:]
  -[PUBrowsingViewModel setChromeVisible:changeReason:]
  -[PUBrowsingViewModel trailingAssetReference]
  -[PUBrowsingViewModel _importStateForAssetReference:]
  -[PUBrowsingViewModel _scrubbingSessionDistance]
  -[PUBrowsingViewModel _invalidateAssetViewModel:]
  -[PUBrowsingViewModel _setCurrentAssetTransitionProgress:]
  -[PUBrowsingViewModel _setUserNavigationDistance:]
  -[PUBrowsingViewModel _setTrailingAssetReference:]


PUBrowsingViewModelChange : PUViewModelChange
 @property  BOOL assetsDataSourceDidChange
 @property  BOOL currentAssetDidChange
 @property  BOOL currentAssetTransitionProgressDidChange
 @property  BOOL browsingSpeedRegimeDidChange
 @property  BOOL isScrubbingDidChange
 @property  BOOL isScrollingDidChange
 @property  BOOL isAnimatingAnyTransitionDidChange
 @property  BOOL secondScreenSizeDidChange
 @property  BOOL transitionDriverIdentifierDidChange
 @property  BOOL chromeVisibilityDidChange
 @property  BOOL presentingOverOneUpDidChange
 @property  BOOL reviewScreenBarsModelDidChange
 @property  BOOL videoOverlayPlayStateDidChange
 @property  BOOL isAttemptingToPlayVideoOverlayDidChange
 @property  BOOL isScrubbingActivationDidChange
 @property  BOOL isVideoContentAllowedDidChange
 @property  BOOL reviewScreenSelectionDidChange
 @property  BOOL navigationBarTitleDidChange
 @property  BOOL resizeTaskDescriptorViewModelDidChange
 @property  NSMutableDictionary *_mutableViewModelChangesByAssetReference
 @property  NSMapTable *_mutableSharedViewModelChangesByAsset
 @property  NSMapTable *assetSharedViewModelChangesByAsset
 @property  NSDictionary *assetViewModelChangesByAssetReference

  // instance methods
  -[PUBrowsingViewModelChange isScrollingDidChange]
  -[PUBrowsingViewModelChange isAttemptingToPlayVideoOverlayDidChange]
  -[PUBrowsingViewModelChange reviewScreenBarsModelDidChange]
  -[PUBrowsingViewModelChange isAnimatingAnyTransitionDidChange]
  -[PUBrowsingViewModelChange _mutableViewModelChangesByAssetReference]
  -[PUBrowsingViewModelChange navigationBarTitleDidChange]
  -[PUBrowsingViewModelChange _setResizeTaskDescriptorViewModelDidChange:]
  -[PUBrowsingViewModelChange .cxx_destruct]
  -[PUBrowsingViewModelChange isVideoContentAllowedDidChange]
  -[PUBrowsingViewModelChange _setTransitionDriverIdentifierDidChange:]
  -[PUBrowsingViewModelChange _setAssetsDataSourceDidChange:]
  -[PUBrowsingViewModelChange _setIsScrubbingActivationDidChange:]
  -[PUBrowsingViewModelChange assetViewModelChangesByAssetReference]
  -[PUBrowsingViewModelChange currentAssetDidChange]
  -[PUBrowsingViewModelChange _setCurrentAssetDidChange:]
  -[PUBrowsingViewModelChange _setCurrentAssetTransitionProgressDidChange:]
  -[PUBrowsingViewModelChange _setPresentingOverOneUpDidChange:]
  -[PUBrowsingViewModelChange assetSharedViewModelChangesByAsset]
  -[PUBrowsingViewModelChange _setNavigationBarTitleDidChange:]
  -[PUBrowsingViewModelChange secondScreenSizeDidChange]
  -[PUBrowsingViewModelChange isScrubbingDidChange]
  -[PUBrowsingViewModelChange videoOverlayPlayStateDidChange]
  -[PUBrowsingViewModelChange _setBrowsingSpeedRegimeDidChange:]
  -[PUBrowsingViewModelChange presentingOverOneUpDidChange]
  -[PUBrowsingViewModelChange _setVideoOverlayPlayStateDidChange:]
  -[PUBrowsingViewModelChange resizeTaskDescriptorViewModelDidChange]
  -[PUBrowsingViewModelChange browsingSpeedRegimeDidChange]
  -[PUBrowsingViewModelChange _setIsScrollingDidChange:]
  -[PUBrowsingViewModelChange _setReviewScreenSelectionDidChange:]
  -[PUBrowsingViewModelChange _setIsAttemptingToPlayVideoOverlayDidChange:]
  -[PUBrowsingViewModelChange currentAssetTransitionProgressDidChange]
  -[PUBrowsingViewModelChange _setReviewScreenBarsModelDidChange:]
  -[PUBrowsingViewModelChange isScrubbingActivationDidChange]
  -[PUBrowsingViewModelChange _setIsScrubbingDidChange:]
  -[PUBrowsingViewModelChange assetsDataSourceDidChange]
  -[PUBrowsingViewModelChange _setSecondScreenSizeDidChange:]
  -[PUBrowsingViewModelChange _mutableSharedViewModelChangesByAsset]
  -[PUBrowsingViewModelChange transitionDriverIdentifierDidChange]
  -[PUBrowsingViewModelChange reviewScreenSelectionDidChange]
  -[PUBrowsingViewModelChange hasChanges]
  -[PUBrowsingViewModelChange setIsVideoContentAllowedDidChange:]
  -[PUBrowsingViewModelChange chromeVisibilityDidChange]
  -[PUBrowsingViewModelChange _setAnimatingAnyTransitionDidChange:]
  -[PUBrowsingViewModelChange _setChromeVisibilityDidChange:]


PUBufferingIndicatorTileViewController : PUTileViewController <PUBrowsingVideoPlayerChangeObserver, PUBrowsingViewModelChangeObserver, PXChangeObserver>
 @property  PUBrowsingVideoPlayer *_videoPlayer
 @property  long long _indicatorStyle
 @property  UIActivityIndicatorView *_spinner
 @property  UIButton *_errorButton
 @property  PUAssetViewModel *assetViewModel
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUOneUpMergedVideoProvider *mergedVideoProvider
 @property  @? errorAlertControllerDisplayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUBufferingIndicatorTileViewController canShowBufferingIndicatorTileForAsset:]
  +[PUBufferingIndicatorTileViewController bufferingIndicatorTileSize]

  // instance methods
  -[PUBufferingIndicatorTileViewController assetViewModel]
  -[PUBufferingIndicatorTileViewController browsingViewModel]
  -[PUBufferingIndicatorTileViewController setAssetViewModel:]
  -[PUBufferingIndicatorTileViewController becomeReusable]
  -[PUBufferingIndicatorTileViewController setBrowsingViewModel:]
  -[PUBufferingIndicatorTileViewController _spinner]
  -[PUBufferingIndicatorTileViewController _errorButton]
  -[PUBufferingIndicatorTileViewController _setVideoPlayer:]
  -[PUBufferingIndicatorTileViewController .cxx_destruct]
  -[PUBufferingIndicatorTileViewController _setErrorButton:]
  -[PUBufferingIndicatorTileViewController setMergedVideoProvider:]
  -[PUBufferingIndicatorTileViewController viewModel:didChange:]
  -[PUBufferingIndicatorTileViewController _videoPlayer]
  -[PUBufferingIndicatorTileViewController mergedVideoProvider]
  -[PUBufferingIndicatorTileViewController observable:didChange:context:]
  -[PUBufferingIndicatorTileViewController _setIndicatorStyle:animated:]
  -[PUBufferingIndicatorTileViewController setErrorAlertControllerDisplayer:]
  -[PUBufferingIndicatorTileViewController _updateIndicator]
  -[PUBufferingIndicatorTileViewController _setSpinner:]
  -[PUBufferingIndicatorTileViewController _handleErrorButton:]
  -[PUBufferingIndicatorTileViewController errorAlertControllerDisplayer]
  -[PUBufferingIndicatorTileViewController _setIndicatorStyle:]
  -[PUBufferingIndicatorTileViewController _indicatorStyle]


PUSharingErrorPresentationController : PUErrorPresentationController
 @property  unsigned long source
 @property  long long preparationType
 @property  NSDictionary *itemSourcesByAssetUUID

  // class methods
  +[PUSharingErrorPresentationController sharingErrorTypeFromError:]
  +[PUSharingErrorPresentationController errorTypeFromSimulatedErrorType:]
  +[PUSharingErrorPresentationController errorIsDownloadError:]
  +[PUSharingErrorPresentationController errorIsLowDiskSpaceError:]
  +[PUSharingErrorPresentationController errorIsUserNeedsReviewCloudSettingsError:]
  +[PUSharingErrorPresentationController _mediaSpecificMessageForKeyPrefix:forAssets:]
  +[PUSharingErrorPresentationController _defaultTitleForDownloadErrorForAssets:forSource:]
  +[PUSharingErrorPresentationController _defaultTitleForSource:assets:]

  // instance methods
  -[PUSharingErrorPresentationController .cxx_destruct]
  -[PUSharingErrorPresentationController initWithErrors:forAssets:fromSource:preparationType:]
  -[PUSharingErrorPresentationController setItemSourcesByAssetUUID:]
  -[PUSharingErrorPresentationController shouldIncludeAssetInRadarDescription:]
  -[PUSharingErrorPresentationController additionalRadarDescriptionLinesForAsset:]
  -[PUSharingErrorPresentationController shouldShowFileRadarAction]
  -[PUSharingErrorPresentationController configureAlertPropertiesFromError:withAssets:willShowFileRadarButton:alertCompletion:]
  -[PUSharingErrorPresentationController configureRadarPropertiesFromError:withAssets:]
  -[PUSharingErrorPresentationController source]
  -[PUSharingErrorPresentationController itemSourcesByAssetUUID]
  -[PUSharingErrorPresentationController preparationType]


PUCachedMapTable : NSObject <NSCopying>
 @property  NSMapTable *_mapTable
 @property  NSMutableOrderedSet *_cachedObjects
 @property  unsigned long cacheCountLimit
 @property  unsigned long accurateCount

  // instance methods
  -[PUCachedMapTable accurateCount]
  -[PUCachedMapTable objectForKey:]
  -[PUCachedMapTable removeAllObjects]
  -[PUCachedMapTable setObject:forKey:]
  -[PUCachedMapTable _cachedObjects]
  -[PUCachedMapTable cacheCountLimit]
  -[PUCachedMapTable .cxx_destruct]
  -[PUCachedMapTable removeObjectForKey:]
  -[PUCachedMapTable enumerateKeysAndObjectsUsingBlock:]
  -[PUCachedMapTable setCacheCountLimit:]
  -[PUCachedMapTable keyEnumerator]
  -[PUCachedMapTable _mapTableCreateIfNeeded:]
  -[PUCachedMapTable _mapTable]
  -[PUCachedMapTable _initialCapacity]
  -[PUCachedMapTable _cachedObjectsCreateIfNeeded:]
  -[PUCachedMapTable copyWithZone:]
  -[PUCachedMapTable _objectWasRecentlyUsed:]


PUCameraImportItemCell : UICollectionViewCell <PXChangeObserver>
 @property  long long badgeType
 @property  BOOL selectable
 @property  UIView *badgeContainerView
 @property  UIView *badgeView
 @property  UIActivityIndicatorView *spinner
 @property  PUPhotoView *photoView
 @property  UITextField *debugTextField
 @property  BOOL needsBadgeUpdate
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} scaledDisplayRect
 @property  long long thumbnailRequestID
 @property  <PUCameraImportItemCellDelegate> *delegate
 @property  PXImportItemViewModel *representedImportItem
 @property  BOOL needsThumbnailRefresh
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUCameraImportItemCell alphaForSelectedCells]

  // instance methods
  -[PUCameraImportItemCell badgeView]
  -[PUCameraImportItemCell badgeType]
  -[PUCameraImportItemCell .cxx_destruct]
  -[PUCameraImportItemCell setBadgeView:]
  -[PUCameraImportItemCell accessibilityLabel]
  -[PUCameraImportItemCell layoutSubviews]
  -[PUCameraImportItemCell accessibilityElementDidBecomeFocused]
  -[PUCameraImportItemCell setDelegate:]
  -[PUCameraImportItemCell setSpinner:]
  -[PUCameraImportItemCell clearImage]
  -[PUCameraImportItemCell badgeContainerView]
  -[PUCameraImportItemCell setPhotoView:]
  -[PUCameraImportItemCell accessibilityTraits]
  -[PUCameraImportItemCell prepareForReuse]
  -[PUCameraImportItemCell accessibilityCustomActions]
  -[PUCameraImportItemCell isAccessibilityElement]
  -[PUCameraImportItemCell selectable]
  -[PUCameraImportItemCell initWithFrame:]
  -[PUCameraImportItemCell spinner]
  -[PUCameraImportItemCell delegate]
  -[PUCameraImportItemCell setSelectable:]
  -[PUCameraImportItemCell photoView]
  -[PUCameraImportItemCell dealloc]
  -[PUCameraImportItemCell dragState]
  -[PUCameraImportItemCell observable:didChange:context:]
  -[PUCameraImportItemCell cancelThumbnailLoadIfActive]
  -[PUCameraImportItemCell updateBadgeUIIfNeeded]
  -[PUCameraImportItemCell scaledDisplayRect]
  -[PUCameraImportItemCell representedImportItem]
  -[PUCameraImportItemCell setBadgeType:]
  -[PUCameraImportItemCell setRepresentedImportItem:]
  -[PUCameraImportItemCell setScaledDisplayRect:]
  -[PUCameraImportItemCell setPhotoImage:withSize:fillMode:videoDuration:isPlaceholder:]
  -[PUCameraImportItemCell setNeedsBadgeUpdate:]
  -[PUCameraImportItemCell needsBadgeUpdate]
  -[PUCameraImportItemCell showActivityBadge:]
  -[PUCameraImportItemCell _fetchThumbnailReady]
  -[PUCameraImportItemCell setCachedImage:isPlaceholder:]
  -[PUCameraImportItemCell setThumbnailRequestID:]
  -[PUCameraImportItemCell _filledPhotosRectForImage:]
  -[PUCameraImportItemCell thumbnailRequestID]
  -[PUCameraImportItemCell _selectAction]
  -[PUCameraImportItemCell _enterOneUpAction]
  -[PUCameraImportItemCell shouldBeginGestureForPoint:]
  -[PUCameraImportItemCell refreshThumbnail]
  -[PUCameraImportItemCell handleTapGesture:]
  -[PUCameraImportItemCell updateDebugLabel:]
  -[PUCameraImportItemCell needsThumbnailRefresh]
  -[PUCameraImportItemCell setBadgeContainerView:]
  -[PUCameraImportItemCell debugTextField]
  -[PUCameraImportItemCell setDebugTextField:]


PUCameraTransientAssetActionManager : PUAssetActionManager
  // instance methods
  -[PUCameraTransientAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUCameraTransientAssetActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUCameraTransientAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:]


PUCameraTransientAssetsDataSource : PUAssetsDataSource
 @property  <PUDisplayAssetCollection> *_transientAssetCollection
 @property  NSArray *_assetUUIDs
 @property  NSDictionary *_assetsByUUID
 @property  NSDictionary *_representativeAssetsByBurstIdentifier

  // instance methods
  -[PUCameraTransientAssetsDataSource isEmpty]
  -[PUCameraTransientAssetsDataSource indexPathForAssetCollection:]
  -[PUCameraTransientAssetsDataSource .cxx_destruct]
  -[PUCameraTransientAssetsDataSource _representativeAssetsByBurstIdentifier]
  -[PUCameraTransientAssetsDataSource _assetUUIDs]
  -[PUCameraTransientAssetsDataSource indexPathForAssetReference:]
  -[PUCameraTransientAssetsDataSource startingAssetReference]
  -[PUCameraTransientAssetsDataSource assetReferenceAtIndexPath:]
  -[PUCameraTransientAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUCameraTransientAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUCameraTransientAssetsDataSource convertIndexPath:fromAssetsDataSource:]
  -[PUCameraTransientAssetsDataSource _assetsByUUID]
  -[PUCameraTransientAssetsDataSource assetCollectionAtIndexPath:]
  -[PUCameraTransientAssetsDataSource assetAtIndexPath:]
  -[PUCameraTransientAssetsDataSource assetReferenceForAssetReference:]
  -[PUCameraTransientAssetsDataSource _transientAssetCollection]
  -[PUCameraTransientAssetsDataSource _uuidAtIndexPath:]
  -[PUCameraTransientAssetsDataSource initWithUUIDs:mapping:representativeMapping:inAssetCollection:]


PUCameraTransientAssetsDataSourceManager : PUAssetsDataSourceManager <PUTransientDataSourceChangeObserver>
 @property  <PUTransientDataSource> *_transientDataSource
 @property  <PUDisplayAssetCollection> *_containingAssetCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCameraTransientAssetsDataSourceManager .cxx_destruct]
  -[PUCameraTransientAssetsDataSourceManager init]
  -[PUCameraTransientAssetsDataSourceManager _transientDataSource]
  -[PUCameraTransientAssetsDataSourceManager initWithTransientDataSource:]
  -[PUCameraTransientAssetsDataSourceManager _updateWithTransientDataSource:]
  -[PUCameraTransientAssetsDataSourceManager _containingAssetCollection]
  -[PUCameraTransientAssetsDataSourceManager transientDataSourceDidChange:]


PUCameraTransientAssetsMediaProvider : PUMediaProvider
 @property  <PUTransientImageManager> *_transientImageManager
 @property  NSMutableDictionary *_livePhotoRequestsByRequestID
 @property  NSObject<OS_dispatch_queue> *_livePhotoRequestQueue
 @property  @? supplementaryLivePhotoImageSource

  // instance methods
  -[PUCameraTransientAssetsMediaProvider cancelImageRequest:]
  -[PUCameraTransientAssetsMediaProvider .cxx_destruct]
  -[PUCameraTransientAssetsMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider init]
  -[PUCameraTransientAssetsMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider _transientImageManager]
  -[PUCameraTransientAssetsMediaProvider requestAVAssetForVideo:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider initWithTransientImageManager:supplementaryLivePhotoImageSource:]
  -[PUCameraTransientAssetsMediaProvider _playerItemForVideoURL:]
  -[PUCameraTransientAssetsMediaProvider _nextRequestId]
  -[PUCameraTransientAssetsMediaProvider _requestAVAssetForVideoURL:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider _requestLivePhotoWithSupplementaryImageSourceIfPossibleWithAsset:targetSize:contentMode:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider _requestLivePhotoForTransientAsset:targetSize:contentMode:options:resultHandler:]
  -[PUCameraTransientAssetsMediaProvider supplementaryLivePhotoImageSource]
  -[PUCameraTransientAssetsMediaProvider _setLivePhotoRequest:forRequestID:]
  -[PUCameraTransientAssetsMediaProvider _handleDelegateImageRequestResultWithImage:info:requestID:]
  -[PUCameraTransientAssetsMediaProvider _updateResultForLivePhotoRequestID:]
  -[PUCameraTransientAssetsMediaProvider _handleLivePhotoPairedVideoRequestResultURL:filterName:stillDisplayTime:error:requestID:]
  -[PUCameraTransientAssetsMediaProvider _videoCompositionForAVAsset:filterName:]
  -[PUCameraTransientAssetsMediaProvider _livePhotoRequestWithID:]
  -[PUCameraTransientAssetsMediaProvider _removeLivePhotoRequestWithID:]
  -[PUCameraTransientAssetsMediaProvider _livePhotoRequestQueue]
  -[PUCameraTransientAssetsMediaProvider _livePhotoRequestsByRequestID]
  -[PUCameraTransientAssetsMediaProvider setSupplementaryLivePhotoImageSource:]


PUCameraPlaceholderLivePhotoRequest : NSObject
 @property  UIImage *image
 @property  NSURL *videoURL
 @property  NSValue *stillDisplayTime
 @property  NSString *filterName
 @property  NSError *error
 @property  BOOL imageRequestFinished
 @property  BOOL videoRequestFinished
 @property  PHAsset *asset
 @property  @? resultHandler

  // instance methods
  -[PUCameraPlaceholderLivePhotoRequest resultHandler]
  -[PUCameraPlaceholderLivePhotoRequest filterName]
  -[PUCameraPlaceholderLivePhotoRequest image]
  -[PUCameraPlaceholderLivePhotoRequest .cxx_destruct]
  -[PUCameraPlaceholderLivePhotoRequest setVideoURL:]
  -[PUCameraPlaceholderLivePhotoRequest setFilterName:]
  -[PUCameraPlaceholderLivePhotoRequest asset]
  -[PUCameraPlaceholderLivePhotoRequest setImage:]
  -[PUCameraPlaceholderLivePhotoRequest videoURL]
  -[PUCameraPlaceholderLivePhotoRequest setError:]
  -[PUCameraPlaceholderLivePhotoRequest error]
  -[PUCameraPlaceholderLivePhotoRequest initWithAsset:resultHandler:]
  -[PUCameraPlaceholderLivePhotoRequest setImageRequestFinished:]
  -[PUCameraPlaceholderLivePhotoRequest setStillDisplayTime:]
  -[PUCameraPlaceholderLivePhotoRequest setVideoRequestFinished:]
  -[PUCameraPlaceholderLivePhotoRequest imageRequestFinished]
  -[PUCameraPlaceholderLivePhotoRequest videoRequestFinished]
  -[PUCameraPlaceholderLivePhotoRequest stillDisplayTime]


PUCloudPhotoWelcomeViewController : PXCloudPhotoWelcomeViewController <PUWelcomeProtocol>
 @property  @? _completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUCloudPhotoWelcomeViewController presentIfNecessaryFromViewController:completionHandler:]
  +[PUCloudPhotoWelcomeViewController resetLastPresentationInfo]

  // instance methods
  -[PUCloudPhotoWelcomeViewController _completionHandler]
  -[PUCloudPhotoWelcomeViewController .cxx_destruct]
  -[PUCloudPhotoWelcomeViewController initWithCompletionHandler:]
  -[PUCloudPhotoWelcomeViewController _setCompletionHandler:]
  -[PUCloudPhotoWelcomeViewController dismissViewControllerAnimated:completion:]
  -[PUCloudPhotoWelcomeViewController initWithDefaultTitle]


PUCloudSharedAlbumViewController : PUPhotosAlbumViewController <PXAlbumStreamingOptionsViewControllerDelegate, UIPopoverPresentationControllerDelegate, PXVideoTrimQueueControllerDelegate, PXPhotoStreamComposeServiceDelegate, PXAssetsSharingHelperDelegate>
 @property  UIViewController *_optionsViewController
 @property  UIViewController *_optionsPopoverRootViewController
 @property  NSArray *_transitioningOptionsViewControllers
 @property  UIBarButtonItem *_optionsBarButtonItem
 @property  UIBarButtonItem *_optionsBarButtonSpacerItem
 @property  BOOL _canContributeToCloudSharedAlbum
 @property  UISegmentedControl *_switcherSegmentedControl
 @property  UIBarButtonItem *_switcherBarButtonItem
 @property  long long _selectedItemIndex
 @property  <PUCloudSharedAlbumViewControllerDelegate> *delegate
 @property  PLCloudSharedAlbum *album
 @property  BOOL displayingOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCloudSharedAlbumViewController routingOptionsForDestination:]
  -[PUCloudSharedAlbumViewController navigateToDestination:options:completionHandler:]
  -[PUCloudSharedAlbumViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUCloudSharedAlbumViewController _collectionView:performDropWithCoordinator:]
  -[PUCloudSharedAlbumViewController setEditing:animated:]
  -[PUCloudSharedAlbumViewController px_navigationDestination]
  -[PUCloudSharedAlbumViewController .cxx_destruct]
  -[PUCloudSharedAlbumViewController viewDidLoad]
  -[PUCloudSharedAlbumViewController popoverPresentationControllerDidDismissPopover:]
  -[PUCloudSharedAlbumViewController setDelegate:]
  -[PUCloudSharedAlbumViewController viewDidAppear:]
  -[PUCloudSharedAlbumViewController _canContributeToCloudSharedAlbum]
  -[PUCloudSharedAlbumViewController viewWillDisappear:]
  -[PUCloudSharedAlbumViewController canDeleteContent]
  -[PUCloudSharedAlbumViewController viewDidLayoutSubviews]
  -[PUCloudSharedAlbumViewController assetsSharingHelper:presentViewController:]
  -[PUCloudSharedAlbumViewController delegate]
  -[PUCloudSharedAlbumViewController _optionsViewController]
  -[PUCloudSharedAlbumViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUCloudSharedAlbumViewController shouldShowToolbar]
  -[PUCloudSharedAlbumViewController newToolbarItems]
  -[PUCloudSharedAlbumViewController assetsSharingHelper:dismissViewController:completionHandler:]
  -[PUCloudSharedAlbumViewController viewDidDisappear:]
  -[PUCloudSharedAlbumViewController prepareForDismissingForced:]
  -[PUCloudSharedAlbumViewController _suppressionContexts]
  -[PUCloudSharedAlbumViewController photoStreamComposeService:didPostComment:]
  -[PUCloudSharedAlbumViewController photoStreamComposeServiceDidCancel:]
  -[PUCloudSharedAlbumViewController controller:presentViewController:]
  -[PUCloudSharedAlbumViewController controller:dismissViewControllerWithCompletion:]
  -[PUCloudSharedAlbumViewController controller:didFinishTrimmingVideoSources:]
  -[PUCloudSharedAlbumViewController controller:didCancelTrimmingVideoSources:]
  -[PUCloudSharedAlbumViewController _setCanContributeToCloudSharedAlbum:]
  -[PUCloudSharedAlbumViewController setAlbum:existingFetchResult:]
  -[PUCloudSharedAlbumViewController _handleSwitcherSegmentedControl:]
  -[PUCloudSharedAlbumViewController _setSwitcherSegmentedControl:]
  -[PUCloudSharedAlbumViewController _setSwitcherBarButtonItem:]
  -[PUCloudSharedAlbumViewController _dismissOptionsPopoverAnimated:]
  -[PUCloudSharedAlbumViewController _updateOptionsViewInsets]
  -[PUCloudSharedAlbumViewController _shouldShowOptionsSwitcherInToolbar]
  -[PUCloudSharedAlbumViewController shouldShowTabBar]
  -[PUCloudSharedAlbumViewController _switcherBarButtonItem]
  -[PUCloudSharedAlbumViewController _canDisplayOptions]
  -[PUCloudSharedAlbumViewController updatePeripheralInterfaceAnimated:]
  -[PUCloudSharedAlbumViewController _updateOptionsView]
  -[PUCloudSharedAlbumViewController isDisplayingOptions]
  -[PUCloudSharedAlbumViewController _transitioningOptionsViewControllers]
  -[PUCloudSharedAlbumViewController _newOptionsViewController]
  -[PUCloudSharedAlbumViewController _setOptionsViewController:]
  -[PUCloudSharedAlbumViewController _switcherSegmentedControl]
  -[PUCloudSharedAlbumViewController _selectedItemIndex]
  -[PUCloudSharedAlbumViewController _optionsBarButtonItem]
  -[PUCloudSharedAlbumViewController _optionsBarButtonItemPressed:]
  -[PUCloudSharedAlbumViewController _setOptionsBarButtonItem:]
  -[PUCloudSharedAlbumViewController _optionsBarButtonSpacerItem]
  -[PUCloudSharedAlbumViewController _setOptionsBarButtonSpacerItem:]
  -[PUCloudSharedAlbumViewController _optionsPopoverRootViewController]
  -[PUCloudSharedAlbumViewController _setTransitioningOptionsViewControllers:]
  -[PUCloudSharedAlbumViewController setDisplayingOptions:]
  -[PUCloudSharedAlbumViewController _presentOptionsPopoverFromBarButtonItem:]
  -[PUCloudSharedAlbumViewController _setOptionsPopoverRootViewController:]
  -[PUCloudSharedAlbumViewController _setSelectedItemIndex:]
  -[PUCloudSharedAlbumViewController handleAddToAlbum:pickedAssets:]
  -[PUCloudSharedAlbumViewController albumStreamingOptionsViewController:didCompleteWithReason:]
  -[PUCloudSharedAlbumViewController canAddToOtherAlbumContent]
  -[PUCloudSharedAlbumViewController wantsAddContentInToolbar]
  -[PUCloudSharedAlbumViewController wantsAddPlaceholderAtEndOfSection:]
  -[PUCloudSharedAlbumViewController didSelectAddPlaceholderInSection:]
  -[PUCloudSharedAlbumViewController wantsGlobalFooter]
  -[PUCloudSharedAlbumViewController globalFooterSubtitle]


PUCloudSharedBackdropView : UIView
 @property  BOOL hasRoundedCorners

  // instance methods
  -[PUCloudSharedBackdropView setHasRoundedCorners:]
  -[PUCloudSharedBackdropView .cxx_destruct]
  -[PUCloudSharedBackdropView layoutSubviews]
  -[PUCloudSharedBackdropView init]
  -[PUCloudSharedBackdropView hasRoundedCorners]
  -[PUCloudSharedBackdropView initWithFrame:]
  -[PUCloudSharedBackdropView initWithFrame:asMask:]


PUAssetPickerSearchSuggestionsCollectionViewLayout : UICollectionViewCompositionalLayout
 @property  <SearchSuggestionsCollectionViewLayoutUpdatesDelegate> *layoutUpdatesDelegate

  // instance methods
  -[PUAssetPickerSearchSuggestionsCollectionViewLayout invalidateLayout]
  -[PUAssetPickerSearchSuggestionsCollectionViewLayout .cxx_destruct]
  -[PUAssetPickerSearchSuggestionsCollectionViewLayout setLayoutUpdatesDelegate:]
  -[PUAssetPickerSearchSuggestionsCollectionViewLayout layoutUpdatesDelegate]


PUCloudSharedCreateAlbumViewController : UIViewController
 @property  NSArray *_albumRecipients
 @property  <PUCloudSharedCreateAlbumViewControllerDelegate> *delegate
 @property  NSString *nextButtonTitle
 @property  NSArray *albumRecipients

  // instance methods
  -[PUCloudSharedCreateAlbumViewController shouldAutorotateToInterfaceOrientation:]
  -[PUCloudSharedCreateAlbumViewController contentSizeForViewInPopover]
  -[PUCloudSharedCreateAlbumViewController .cxx_destruct]
  -[PUCloudSharedCreateAlbumViewController _validateRecipientsToAdd:]
  -[PUCloudSharedCreateAlbumViewController setDelegate:]
  -[PUCloudSharedCreateAlbumViewController init]
  -[PUCloudSharedCreateAlbumViewController navigationItem]
  -[PUCloudSharedCreateAlbumViewController delegate]
  -[PUCloudSharedCreateAlbumViewController dealloc]
  -[PUCloudSharedCreateAlbumViewController loadView]
  -[PUCloudSharedCreateAlbumViewController _cancelAction:]
  -[PUCloudSharedCreateAlbumViewController _handleCompletionWithSuccess:]
  -[PUCloudSharedCreateAlbumViewController _saveUserEnterredInfo]
  -[PUCloudSharedCreateAlbumViewController _setAlbumRecipients:]
  -[PUCloudSharedCreateAlbumViewController nextButtonTitle]
  -[PUCloudSharedCreateAlbumViewController _doneAction:]
  -[PUCloudSharedCreateAlbumViewController albumRecipients]
  -[PUCloudSharedCreateAlbumViewController setNextButtonTitle:]
  -[PUCloudSharedCreateAlbumViewController _albumRecipients]


PUCollageView : UIView
 @property  long long _numberOfImageViews
 @property  NSArray *_imageViews
 @property  NSPointerArray *_imageSizes
 @property  UIColor *cornersBackgroundColor
 @property  PXRoundedCornerOverlayView *_roundedCornerOverlayView
 @property  {CGSize=dd} collageSize
 @property  double spacing
 @property  long long numberOfItems
 @property  double cornerRadius
 @property  double subitemCornerRadius
 @property  BOOL hasRoundedCorners

  // class methods
  +[PUCollageView maximumNumberOfItems]

  // instance methods
  -[PUCollageView setHasRoundedCorners:]
  -[PUCollageView .cxx_destruct]
  -[PUCollageView _imageViews]
  -[PUCollageView setCornersBackgroundColor:]
  -[PUCollageView spacing]
  -[PUCollageView layoutSubviews]
  -[PUCollageView _imageSizes]
  -[PUCollageView setImage:forItemAtIndex:]
  -[PUCollageView numberOfItems]
  -[PUCollageView setCornerRadius:]
  -[PUCollageView sizeThatFits:]
  -[PUCollageView setHasRoundedCorners:withCornersBackgroundColor:]
  -[PUCollageView hasRoundedCorners]
  -[PUCollageView cornersBackgroundColor]
  -[PUCollageView setImageSize:forItemAtIndex:]
  -[PUCollageView initWithFrame:]
  -[PUCollageView cornerRadius]
  -[PUCollageView setSpacing:]
  -[PUCollageView setNumberOfItems:]
  -[PUCollageView collageSize]
  -[PUCollageView setCollageSize:]
  -[PUCollageView setSubitemCornerRadius:]
  -[PUCollageView _updateRoundedCornerOverlayView]
  -[PUCollageView imageSizeForItemAtIndex:]
  -[PUCollageView _numberOfImageViews]
  -[PUCollageView _roundedCornerOverlayView]
  -[PUCollageView _updateImageViews]
  -[PUCollageView _setRoundedCornerOverlayView:]
  -[PUCollageView subitemCornerRadius]


PUCollectionView : UICollectionView <UIGestureRecognizerDelegate>
 @property  _UIDragSnappingFeedbackGenerator *_feedbackDragBehavior
 @property  <PUCollectionViewReorderDelegate> *reorderDelegate
 @property  <PUCollectionViewSelectionDelegate> *selectionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUCollectionView _reuseKeyForSupplementaryViewOfKind:withReuseIdentifier:]

  // instance methods
  -[PUCollectionView initWithFrame:collectionViewLayout:]
  -[PUCollectionView .cxx_destruct]
  -[PUCollectionView gestureRecognizerShouldBegin:]
  -[PUCollectionView selectionDelegate]
  -[PUCollectionView moveItemAtIndexPath:toIndexPath:]
  -[PUCollectionView deleteItemsAtIndexPaths:]
  -[PUCollectionView insertItemsAtIndexPaths:]
  -[PUCollectionView indexPathsForSelectedItems]
  -[PUCollectionView dealloc]
  -[PUCollectionView reloadData]
  -[PUCollectionView adjustedContentInsetDidChange]
  -[PUCollectionView _applyAutomaticAdjustedContentOffset:]
  -[PUCollectionView setSelectionDelegate:]
  -[PUCollectionView setReorderDelegate:]
  -[PUCollectionView _handleDrag:]
  -[PUCollectionView _updateDragUsingIndexPathUpdateBlock:]
  -[PUCollectionView _reorderableLayout]
  -[PUCollectionView _feedbackDragBehavior]
  -[PUCollectionView reorderDelegate]
  -[PUCollectionView didScrollToInitialPosition]
  -[PUCollectionView visiblyInsertItemAtIndexPath:modelUpdate:completionHandler:]


PUCollectionViewIntermediateDataSource : NSObject <UICollectionViewDataSource>
 @property  <UICollectionViewDataSource> *realDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCollectionViewIntermediateDataSource collectionView:cellForItemAtIndexPath:]
  -[PUCollectionViewIntermediateDataSource collectionView:numberOfItemsInSection:]
  -[PUCollectionViewIntermediateDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUCollectionViewIntermediateDataSource numberOfSectionsInCollectionView:]
  -[PUCollectionViewIntermediateDataSource setRealDataSource:]
  -[PUCollectionViewIntermediateDataSource realDataSource]


PUCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
 @property  {CGPoint=dd} parallaxOffset
 @property  {CGPoint=dd} edgeParallaxOffset

  // instance methods
  -[PUCollectionViewLayoutAttributes isEqual:]
  -[PUCollectionViewLayoutAttributes parallaxOffset]
  -[PUCollectionViewLayoutAttributes copyWithZone:]
  -[PUCollectionViewLayoutAttributes setParallaxOffset:]
  -[PUCollectionViewLayoutAttributes setEdgeParallaxOffset:]
  -[PUCollectionViewLayoutAttributes edgeParallaxOffset]


PUCollectionViewLayoutCache : UICollectionViewLayout
 @property  <PUCollectionViewLayoutProvider> *layoutProvider
 @property  BOOL cachesResults

  // instance methods
  -[PUCollectionViewLayoutCache flipsHorizontallyInOppositeLayoutDirection]
  -[PUCollectionViewLayoutCache layoutAttributesForItemAtIndexPath:]
  -[PUCollectionViewLayoutCache collectionViewContentSize]
  -[PUCollectionViewLayoutCache .cxx_destruct]
  -[PUCollectionViewLayoutCache layoutProvider]
  -[PUCollectionViewLayoutCache initWithProvider:]
  -[PUCollectionViewLayoutCache init]
  -[PUCollectionViewLayoutCache invalidateLayoutCache]
  -[PUCollectionViewLayoutCache layoutAttributesForElementsInRect:]
  -[PUCollectionViewLayoutCache layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUCollectionViewLayoutCache layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[PUCollectionViewLayoutCache cachesResults]
  -[PUCollectionViewLayoutCache setCachesResults:]


PUCommentsTableDataController : NSObject <PLCloudCommentsChangeObserver, PUPhotoCommentEntryViewDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  PLManagedAsset *managedAsset
 @property  PLCloudSharedComment *justInsertedComment
 @property  UITableView *tableView
 @property  PHAsset *asset
 @property  BOOL editing
 @property  BOOL shouldUseCompactCommentSeparators
 @property  <PUCommentsTableDataControllerDelegate> *delegate
 @property  double minimumHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCommentsTableDataController initWithTableView:]
  -[PUCommentsTableDataController tableView:willDisplayCell:forRowAtIndexPath:]
  -[PUCommentsTableDataController tableView:canEditRowAtIndexPath:]
  -[PUCommentsTableDataController numberOfSectionsInTableView:]
  -[PUCommentsTableDataController tableView:numberOfRowsInSection:]
  -[PUCommentsTableDataController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUCommentsTableDataController tableView:heightForRowAtIndexPath:]
  -[PUCommentsTableDataController .cxx_destruct]
  -[PUCommentsTableDataController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUCommentsTableDataController tableView:cellForRowAtIndexPath:]
  -[PUCommentsTableDataController setDelegate:]
  -[PUCommentsTableDataController setAsset:]
  -[PUCommentsTableDataController init]
  -[PUCommentsTableDataController asset]
  -[PUCommentsTableDataController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUCommentsTableDataController scrollViewDidScroll:]
  -[PUCommentsTableDataController _commentText]
  -[PUCommentsTableDataController tableView]
  -[PUCommentsTableDataController setEditing:]
  -[PUCommentsTableDataController isEditing]
  -[PUCommentsTableDataController delegate]
  -[PUCommentsTableDataController dealloc]
  -[PUCommentsTableDataController minimumHeight]
  -[PUCommentsTableDataController cloudCommentsDidChange:]
  -[PUCommentsTableDataController _fontCacheDidChange:]
  -[PUCommentsTableDataController setManagedAsset:]
  -[PUCommentsTableDataController _updateFirstResponder]
  -[PUCommentsTableDataController _assetOwnerCommentSection]
  -[PUCommentsTableDataController _postCommentSection]
  -[PUCommentsTableDataController _currentEntryView]
  -[PUCommentsTableDataController managedAsset]
  -[PUCommentsTableDataController _isAssetOwnerSectionVisible]
  -[PUCommentsTableDataController _textCommentSection]
  -[PUCommentsTableDataController setJustInsertedComment:]
  -[PUCommentsTableDataController _canPostCommentWithText:localizedFailureDescription:]
  -[PUCommentsTableDataController _postCommentWithText:]
  -[PUCommentsTableDataController _smileCommentSection]
  -[PUCommentsTableDataController shouldUseCompactCommentSeparators]
  -[PUCommentsTableDataController _validateAndPostComment:]
  -[PUCommentsTableDataController _heightForComment:forWidth:forInterfaceOrientation:]
  -[PUCommentsTableDataController justInsertedComment]
  -[PUCommentsTableDataController _scrollToComment:animated:]
  -[PUCommentsTableDataController photoCommentEntryViewHeightDidChange:]
  -[PUCommentsTableDataController photoCommentEntryViewWillBeginEditing:]
  -[PUCommentsTableDataController photoCommentEntryViewDidEndEditing:]
  -[PUCommentsTableDataController photoCommentEntryViewShouldEndEditing:]
  -[PUCommentsTableDataController photoCommentEntryViewDidBeginEditing:]
  -[PUCommentsTableDataController setShouldUseCompactCommentSeparators:]


PUPhotoEditSelectionRingView : UIView
 @property  UIColor *selectionRingColor
 @property  double strokeWidth

  // instance methods
  -[PUPhotoEditSelectionRingView .cxx_destruct]
  -[PUPhotoEditSelectionRingView setStrokeWidth:]
  -[PUPhotoEditSelectionRingView strokeWidth]
  -[PUPhotoEditSelectionRingView initWithFrame:]
  -[PUPhotoEditSelectionRingView drawRect:]
  -[PUPhotoEditSelectionRingView selectionRingColor]
  -[PUPhotoEditSelectionRingView setSelectionRingColor:]


PUCommentsViewController : UIViewController <PUCommentsTableDataControllerDelegate, PUAssetViewModelChangeObserver, PXChangeObserver, PUAccessoryContentViewController>
 @property  UITableView *_tableView
 @property  PUCommentsTableDataController *_tableDataController
 @property  BOOL _needsUpdateTableViewScrollPosition
 @property  PUAssetViewModel *assetViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PUAccessoryContentViewControllerDelegate> *accessoryContentViewControllerDelegate
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  {CGSize=dd} minimumContentSize

  // class methods
  +[PUCommentsViewController canShowCommentsForAsset:]

  // instance methods
  -[PUCommentsViewController assetViewModel]
  -[PUCommentsViewController preferredContentSize]
  -[PUCommentsViewController initWithCoder:]
  -[PUCommentsViewController contentInsets]
  -[PUCommentsViewController .cxx_destruct]
  -[PUCommentsViewController viewDidLoad]
  -[PUCommentsViewController initWithNibName:bundle:]
  -[PUCommentsViewController _tableView]
  -[PUCommentsViewController viewModel:didChange:]
  -[PUCommentsViewController contentAreaContainsPoint:inCoordinateSpace:]
  -[PUCommentsViewController accessoryContentViewControllerDelegate]
  -[PUCommentsViewController setAccessoryContentViewControllerDelegate:]
  -[PUCommentsViewController minimumContentSize]
  -[PUCommentsViewController setContentInsets:changeReason:]
  -[PUCommentsViewController contentBoundsInCoordinateSpace:]
  -[PUCommentsViewController observable:didChange:context:]
  -[PUCommentsViewController viewDidDisappear:]
  -[PUCommentsViewController commentsTableDataController:didChangeEditing:]
  -[PUCommentsViewController commentsTableDataController:presentViewController:]
  -[PUCommentsViewController commentsTableDataController:tableViewDidScroll:]
  -[PUCommentsViewController _updateTableDataController]
  -[PUCommentsViewController _setNeedsUpdateTableViewScrollPosition:]
  -[PUCommentsViewController _tableDataController]
  -[PUCommentsViewController _needsUpdateTableViewScrollPosition]
  -[PUCommentsViewController initWithAssetViewModel:]


PUContentTileProvider : NSObject
 @property  PUMediaProvider *mediaProvider
 @property  UIWindow *window

  // instance methods
  -[PUContentTileProvider setWindow:]
  -[PUContentTileProvider .cxx_destruct]
  -[PUContentTileProvider mediaProvider]
  -[PUContentTileProvider init]
  -[PUContentTileProvider initWithMediaProvider:]
  -[PUContentTileProvider registerTileControllerClassesWithTilingView:]
  -[PUContentTileProvider window]
  -[PUContentTileProvider tileControllerForAsset:viewModel:tilingView:]


PUCopyLinkActivity : PXActivity <PXMomentShareActivity>
 @property  <PXActivityItemSourceController> *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUCopyLinkActivity activityCategory]
  +[PUCopyLinkActivity wantsMomentShareLinkForAssetCount:]

  // instance methods
  -[PUCopyLinkActivity _systemImageName]
  -[PUCopyLinkActivity activityType]
  -[PUCopyLinkActivity canPerformWithActivityItems:]
  -[PUCopyLinkActivity performActivity]
  -[PUCopyLinkActivity activityTitle]


PUCropAspect : NSObject
 @property  double width
 @property  double height
 @property  double ratio
 @property  NSString *localizedName

  // class methods
  +[PUCropAspect allAspectsWithOriginalSize:currentSize:]

  // instance methods
  -[PUCropAspect localizedName]
  -[PUCropAspect width]
  -[PUCropAspect .cxx_destruct]
  -[PUCropAspect init]
  -[PUCropAspect height]
  -[PUCropAspect isEqual:]
  -[PUCropAspect heightForWidth:]
  -[PUCropAspect ratio]
  -[PUCropAspect initWithWidth:height:]
  -[PUCropAspect _initWithWidth:height:localizedName:]
  -[PUCropAspect isFreeformCrop]
  -[PUCropAspect isEqualToCropAspect:]
  -[PUCropAspect widthForHeight:]
  -[PUCropAspect isEquivalentToCropAspect:]
  -[PUCropAspect constrainRect:boundingRect:boundingAngle:minSize:]
  -[PUCropAspect inverseAspect]


PUCropAspectViewController : UIViewController
 @property  UIView *scrollViewContainer
 @property  UIView *buttonContainer
 @property  UIScrollView *scrollView
 @property  NSArray *aspectButtons
 @property  NSArray *allAspectRatios
 @property  {CGSize=dd} originalSize
 @property  PUCropToolControllerSpec *spec
 @property  NSArray *aspectConstraints
 @property  {CGSize=dd} currentCropSize
 @property  PUCropAspect *currentCropAspect
 @property  <PUCropAspectViewControllerDelegate> *delegate
 @property  long long aspectOrientation
 @property  long long layoutOrientation
 @property  UIView *scrollExtraLeftView

  // instance methods
  -[PUCropAspectViewController setScrollView:]
  -[PUCropAspectViewController scrollView]
  -[PUCropAspectViewController layoutOrientation]
  -[PUCropAspectViewController .cxx_destruct]
  -[PUCropAspectViewController viewDidLoad]
  -[PUCropAspectViewController setDelegate:]
  -[PUCropAspectViewController setLayoutOrientation:]
  -[PUCropAspectViewController setOriginalSize:]
  -[PUCropAspectViewController buttonContainer]
  -[PUCropAspectViewController setSpec:]
  -[PUCropAspectViewController delegate]
  -[PUCropAspectViewController spec]
  -[PUCropAspectViewController originalSize]
  -[PUCropAspectViewController setButtonContainer:]
  -[PUCropAspectViewController setAspectOrientation:]
  -[PUCropAspectViewController updateAspectButtons]
  -[PUCropAspectViewController updateAspectButtonSelection]
  -[PUCropAspectViewController updateAspectConstraints]
  -[PUCropAspectViewController currentCropAspect]
  -[PUCropAspectViewController matchingCropAspectTo:]
  -[PUCropAspectViewController allAspectRatios]
  -[PUCropAspectViewController aspectButtons]
  -[PUCropAspectViewController setAllAspectRatios:]
  -[PUCropAspectViewController aspectButtonPressed:]
  -[PUCropAspectViewController setAspectButtons:]
  -[PUCropAspectViewController aspectConstraints]
  -[PUCropAspectViewController setAspectConstraints:]
  -[PUCropAspectViewController scrollExtraLeftView]
  -[PUCropAspectViewController initWithLayoutOrientation:originalSize:currentSize:currentCropAspect:spec:]
  -[PUCropAspectViewController setCurrentCropAspect:]
  -[PUCropAspectViewController setScrollExtraLeftView:]
  -[PUCropAspectViewController currentCropSize]
  -[PUCropAspectViewController setCurrentCropSize:]
  -[PUCropAspectViewController aspectOrientation]
  -[PUCropAspectViewController scrollViewContainer]
  -[PUCropAspectViewController setScrollViewContainer:]


PUCropAspectFlipperView : UIView
 @property  <PUCropAspectViewControllerDelegate> *delegate
 @property  long long aspectRatioOrientation
 @property  long long layoutOrientation
 @property  BOOL enabled

  // instance methods
  -[PUCropAspectFlipperView layoutOrientation]
  -[PUCropAspectFlipperView .cxx_destruct]
  -[PUCropAspectFlipperView setDelegate:]
  -[PUCropAspectFlipperView setLayoutOrientation:]
  -[PUCropAspectFlipperView enabled]
  -[PUCropAspectFlipperView delegate]
  -[PUCropAspectFlipperView setEnabled:]
  -[PUCropAspectFlipperView aspectRatioButtonPressed:]
  -[PUCropAspectFlipperView setAspectRatioOrientation:]
  -[PUCropAspectFlipperView aspectRatioOrientation]
  -[PUCropAspectFlipperView initWithLayoutOrientation:]


PUCropHandleView : UIView
 @property  NSArray *_lineViews
 @property  NSArray *_overlayViews
 @property  UIView *_layoutReferenceView
 @property  NSLayoutConstraint *_lineWidthConstraint
 @property  unsigned long handle
 @property  unsigned long oppositeHandle
 @property  NSArray *adjacentHandles
 @property  id layoutReferenceItem
 @property  BOOL top
 @property  BOOL left
 @property  BOOL right
 @property  BOOL bottom
 @property  BOOL corner
 @property  BOOL lateral
 @property  BOOL lineWeightHeavy
 @property  BOOL overlayHidden

  // class methods
  +[PUCropHandleView allHandles]

  // instance methods
  -[PUCropHandleView isTop]
  -[PUCropHandleView .cxx_destruct]
  -[PUCropHandleView isLeft]
  -[PUCropHandleView handle]
  -[PUCropHandleView isCorner]
  -[PUCropHandleView isBottom]
  -[PUCropHandleView initWithFrame:]
  -[PUCropHandleView isRight]
  -[PUCropHandleView isLateral]
  -[PUCropHandleView initForHandle:]
  -[PUCropHandleView _createLineView]
  -[PUCropHandleView _setLineViews:]
  -[PUCropHandleView _setLineWidthConstraint:]
  -[PUCropHandleView _lineWidthConstraint]
  -[PUCropHandleView _setLayoutReferenceView:]
  -[PUCropHandleView isLineWeightHeavy]
  -[PUCropHandleView _updateLineWidth]
  -[PUCropHandleView _layoutReferenceView]
  -[PUCropHandleView setLineWeightHeavy:]
  -[PUCropHandleView _createCornerOverlayView]
  -[PUCropHandleView layoutReferenceItem]
  -[PUCropHandleView oppositeHandle]
  -[PUCropHandleView adjacentHandles]
  -[PUCropHandleView isOverlayHidden]
  -[PUCropHandleView setOverlayHidden:]
  -[PUCropHandleView _lineViews]
  -[PUCropHandleView _overlayViews]
  -[PUCropHandleView _setOverlayViews:]


PUCropOverlayView : UIView
 @property  NSArray *_oneThirdCropLines
 @property  NSArray *_oneNinthCropLines
 @property  NSArray *_maskViews
 @property  UIView *_cropWindowView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRectInLocalCoordinateSpace
 @property  PUCropMaskView *topMask
 @property  PUCropMaskView *bottomMask
 @property  PUCropMaskView *leftMask
 @property  PUCropMaskView *rightMask
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  id layoutReferenceItem
 @property  BOOL cropGridVisible
 @property  BOOL straightenGridVisible
 @property  BOOL maskedContentVisible

  // instance methods
  -[PUCropOverlayView cropRect]
  -[PUCropOverlayView .cxx_destruct]
  -[PUCropOverlayView layoutSubviews]
  -[PUCropOverlayView topMask]
  -[PUCropOverlayView leftMask]
  -[PUCropOverlayView initWithFrame:]
  -[PUCropOverlayView setCropRect:]
  -[PUCropOverlayView rightMask]
  -[PUCropOverlayView layoutReferenceItem]
  -[PUCropOverlayView _cropWindowView]
  -[PUCropOverlayView _createMaskView]
  -[PUCropOverlayView _setMaskViews:]
  -[PUCropOverlayView _maskViews]
  -[PUCropOverlayView setMaskedContentVisible:animated:]
  -[PUCropOverlayView _updateCropRectInLocalCoordinateSpace]
  -[PUCropOverlayView setCropRectInLocalCoordinateSpace:]
  -[PUCropOverlayView cropRectInLocalCoordinateSpace]
  -[PUCropOverlayView setCropGridVisible:animated:]
  -[PUCropOverlayView setStraightenGridVisible:animated:]
  -[PUCropOverlayView _oneThirdCropLines]
  -[PUCropOverlayView _setGridViews:visible:iVarVisibilePtr:animated:]
  -[PUCropOverlayView _oneNinthCropLines]
  -[PUCropOverlayView isCropGridVisible]
  -[PUCropOverlayView _addLinesSpacedForCount:drawFirstAndLast:visible:]
  -[PUCropOverlayView isStraightenGridVisible]
  -[PUCropOverlayView _subviewIndexForLineForCount:]
  -[PUCropOverlayView _createLineViewForCount:]
  -[PUCropOverlayView _createConstraintsForLine:centerMultiplier:vertical:]
  -[PUCropOverlayView setMaskedContentVisible:]
  -[PUCropOverlayView setCropGridVisible:]
  -[PUCropOverlayView setStraightenGridVisible:]
  -[PUCropOverlayView isMaskedContentVisible]
  -[PUCropOverlayView _setOneThirdLines:]
  -[PUCropOverlayView _setOneNinethLines:]
  -[PUCropOverlayView _setCropWindowView:]
  -[PUCropOverlayView setTopMask:]
  -[PUCropOverlayView bottomMask]
  -[PUCropOverlayView setBottomMask:]
  -[PUCropOverlayView setLeftMask:]
  -[PUCropOverlayView setRightMask:]


PUCropMaskView : UIView
 @property  UIView *opaqueView

  // instance methods
  -[PUCropMaskView .cxx_destruct]
  -[PUCropMaskView initWithFrame:]
  -[PUCropMaskView opaqueView]


PUCropToolController : PUPhotoEditToolController <UIGestureRecognizerDelegate, PUCropTransformedImageViewDelegate, PUCropAspectViewControllerDelegate, PUCropPerspectiveAdjustmentsDataSourceDelegate, PUAdjustmentViewControllerDelegate, PUCropVideoScrubberViewDelegate, UIPopoverPresentationControllerDelegate, PXChangeObserver>
 @property  PUAdjustmentsViewController *adjustmentsViewController
 @property  UIView *containerView
 @property  UIView *adjustmentPickerView
 @property  PXUIButton *_autoButton
 @property  long long autoButtonMode
 @property  PXUIButton *_rotateButton
 @property  PXUIButton *_flipButton
 @property  PXUIButton *_aspectButton
 @property  UIButton *_perspectiveButton
 @property  PUEditActionActivity *overcaptureSourceToggleActivity
 @property  PUCropPerspectiveView *_cropView
 @property  UIView *_cropCanvasView
 @property  PUCropOverlayView *_cropOverlayView
 @property  NSDictionary *_cropHandleViewsByHandle
 @property  PUCropHandleView *_selectedCropHandleView
 @property  UIView *_rotateSnapshotView
 @property  PUCropAspectViewController *cropAspectViewController
 @property  PUCropAspectFlipperView *cropAspectFlipperView
 @property  {CGSize=dd} minimumViewCropRectSizeForHandleGesture
 @property  PUCropPerspectiveAdjustmentsDataSource *dataSource
 @property  NSMutableDictionary *_initialLocationsInHandlesByHandle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _initialHandlePanCropRect
 @property  BOOL _contentViewsHidden
 @property  {UIEdgeInsets=dddd} _previewViewInsets
 @property  BOOL _wantsPreviewViewHidden
 @property  BOOL _ignoreTrackingUpdates
 @property  NSMutableDictionary *_animationsByKeyPath
 @property  NSMutableDictionary *_animationTargetsByKeyPath
 @property  unsigned long _rotatingAnimationCount
 @property  unsigned long _contentViewsHiddenAnimationCount
 @property  BOOL trackingAdjustmentControl
 @property  NSTimer *badgeShowingExpirationTimer
 @property  BOOL toolBadgeDoesHide
 @property  BOOL modelLoadingSuspended
 @property  BOOL _needsImageLoad
 @property  BOOL initialImageLoaded
 @property  BOOL _needsLivePhotoLoad
 @property  NSObject<OS_dispatch_queue> *_fileSystemQueue
 @property  BOOL _activeTool
 @property  BOOL _needsModelLoad
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _cropViewFrameForLastModelLoad
 @property  BOOL _modelChangeLocal
 @property  NUComposition *_lastKnownComposition
 @property  PLPhotoEditRenderer *_renderer
 @property  PLImageGeometry *_geometry
 @property  NUCropModel *cropModel
 @property  UIImage *_image
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _inputExtent
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _viewCropRect
 @property  double _straightenAngle
 @property  double _pitchAngle
 @property  double _yawAngle
 @property  PUCropAspect *_cropAspect
 @property  BOOL _gridVisible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _suggestedCrop
 @property  double _suggestedStraightenAngle
 @property  BOOL _hasAutoAppliedCropSuggestion
 @property  BOOL _hasAppliedCropSuggestion
 @property  BOOL _hasRequestedCropSuggestion
 @property  double _suggestedPitchAngle
 @property  double _suggestedYawAngle
 @property  BOOL _hasAutoAppliedPerspectiveSuggestion
 @property  BOOL _hasAppliedPerspectiveSuggestion
 @property  BOOL _hasRequestedPerspectiveSuggestion
 @property  PUCropVideoScrubberView *videoScrubberView
 @property  {?=qiIq} videoScrubberSeekTime
 @property  BOOL videoScrubberIsInteracting
 @property  {CGSize=dd} screenSize
 @property  double screenScale
 @property  NSObject<OS_dispatch_queue> *imageLoadingQueue
 @property  NSMutableArray *imageLoadingQueueCompletionBlocks
 @property  BOOL imageLoadingInProgress
 @property  UILongPressGestureRecognizer *_accessibilityLongPressGestureRecognizer
 @property  CEKBadgeTextView *badgeView
 @property  BOOL imageHasReframeData
 @property  BOOL imageHasOriginalCrop
 @property  BOOL imageIsUsingReframe
 @property  BOOL autoButtonInReframeMode
 @property  BOOL disableSourceSwitch
 @property  NSArray *toolKeyCommands
 @property  PXImageModulationManager *imageModulationManager
 @property  PXImageLayerModulator *imageLayerModulator
 @property  PUCropToolControllerSpec *toolControllerSpec
 @property  long long initialAction
 @property  ^{CGImage=} gainMapImage
 @property  float gainMapValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCropToolController updateViewConstraints]
  -[PUCropToolController imageModulationManager]
  -[PUCropToolController localizedName]
  -[PUCropToolController _flipButton]
  -[PUCropToolController setGainMapImage:]
  -[PUCropToolController screenScale]
  -[PUCropToolController gainMapImage]
  -[PUCropToolController _image]
  -[PUCropToolController setGainMapValue:]
  -[PUCropToolController gainMapValue]
  -[PUCropToolController setImageLayerModulator:]
  -[PUCropToolController imageLayerModulator]
  -[PUCropToolController badgeView]
  -[PUCropToolController adjustmentsDataChanged:]
  -[PUCropToolController _setImage:]
  -[PUCropToolController wantsSecondaryToolbarVisible]
  -[PUCropToolController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUCropToolController setDataSource:]
  -[PUCropToolController setScreenSize:]
  -[PUCropToolController containerView]
  -[PUCropToolController .cxx_destruct]
  -[PUCropToolController setBadgeView:]
  -[PUCropToolController setScreenScale:]
  -[PUCropToolController viewDidLoad]
  -[PUCropToolController setDelegate:]
  -[PUCropToolController viewDidAppear:]
  -[PUCropToolController _renderer]
  -[PUCropToolController initWithNibName:bundle:]
  -[PUCropToolController dataSource]
  -[PUCropToolController _geometry]
  -[PUCropToolController setContainerView:]
  -[PUCropToolController filter]
  -[PUCropToolController setImageModulationManager:]
  -[PUCropToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PUCropToolController _defaultOrientation]
  -[PUCropToolController viewDidLayoutSubviews]
  -[PUCropToolController viewWillAppear:]
  -[PUCropToolController resetToDefaultValueAnimated:]
  -[PUCropToolController initialAction]
  -[PUCropToolController setInitialAction:]
  -[PUCropToolController didBecomeActiveTool]
  -[PUCropToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUCropToolController compositionControllerDidChangeForAdjustments:]
  -[PUCropToolController _updateBadgeTextWithInfo:]
  -[PUCropToolController _performInitialAction]
  -[PUCropToolController adjustmentsViewControllerDidUpdateSelectedControl:]
  -[PUCropToolController _accessibilityLongPressGestureRecognizer]
  -[PUCropToolController adjustmentsRenderer:]
  -[PUCropToolController dealloc]
  -[PUCropToolController screenSize]
  -[PUCropToolController _cropView]
  -[PUCropToolController cropModel]
  -[PUCropToolController _yawAngle]
  -[PUCropToolController _hideGrid]
  -[PUCropToolController observable:didChange:context:]
  -[PUCropToolController adjustmentsViewControllerToolWillBeginScrubbing:]
  -[PUCropToolController adjustmentsViewControllerToolDidEndScrubbing:]
  -[PUCropToolController adjustmentsViewControllerSliderWillBeginScrubbing:]
  -[PUCropToolController adjustmentsViewControllerSliderDidEndScrubbing:]
  -[PUCropToolController toolbarIcon]
  -[PUCropToolController centerToolbarView]
  -[PUCropToolController canResetToDefaultValue]
  -[PUCropToolController localizedResetToolActionTitle]
  -[PUCropToolController wantsSliderKeyControl]
  -[PUCropToolController increaseSliderValue:]
  -[PUCropToolController decreaseSliderValue:]
  -[PUCropToolController installTogglePreviewGestureRecognizer:]
  -[PUCropToolController willBecomeActiveTool]
  -[PUCropToolController toolControllerTag]
  -[PUCropToolController _needsImageLoad]
  -[PUCropToolController _accessibilityLongPressChanged:]
  -[PUCropToolController cropAspectController:cropAspectSelected:]
  -[PUCropToolController cropAspectFlipperView:cropOrientationSelected:]
  -[PUCropToolController _cropOverlayView]
  -[PUCropToolController _cropHandleViewsByHandle]
  -[PUCropToolController _cropCanvasView]
  -[PUCropToolController _updateCropActionButtons]
  -[PUCropToolController _setAccessibilityLongPressGestureRecognizer:]
  -[PUCropToolController _preferredContentSizeCategoryChanged]
  -[PUCropToolController _setNeedsModelLoad:]
  -[PUCropToolController createVideoScrubber]
  -[PUCropToolController videoScrubberView]
  -[PUCropToolController setToolBadgeDoesHide:]
  -[PUCropToolController setImageHasReframeData:]
  -[PUCropToolController setImageHasOriginalCrop:]
  -[PUCropToolController setImageIsUsingReframe:]
  -[PUCropToolController showToolLabel]
  -[PUCropToolController resetToolLabelHidingTimer]
  -[PUCropToolController _cropCanvasFrame]
  -[PUCropToolController modelLoadingSuspended]
  -[PUCropToolController _needsModelLoad]
  -[PUCropToolController _cropViewFrameForLastModelLoad]
  -[PUCropToolController _loadStateFromModel]
  -[PUCropToolController _layoutAdjustmentTools]
  -[PUCropToolController _updateCropCanvasConstraintsIfNeeded]
  -[PUCropToolController _updateCropToggleConstraintsIfNeeded]
  -[PUCropToolController toolBadgeDoesHide]
  -[PUCropToolController showVideoScrubber:]
  -[PUCropToolController _setTrackingAdjustmentControl:]
  -[PUCropToolController _updateCropViewsForInteraction]
  -[PUCropToolController _hasConstraintsForKey:]
  -[PUCropToolController cropAspectViewController]
  -[PUCropToolController cropAspectFlipperView]
  -[PUCropToolController _isModelChangeLocal]
  -[PUCropToolController _setModelChangeLocal:]
  -[PUCropToolController _performLocalModelChanges:]
  -[PUCropToolController _forceOvercaptureSourceForCrop]
  -[PUCropToolController _updateRendererWithCurrentComposition]
  -[PUCropToolController _setRenderer:]
  -[PUCropToolController imageLoadingQueue]
  -[PUCropToolController imageLoadingQueueCompletionBlocks]
  -[PUCropToolController imageLoadingInProgress]
  -[PUCropToolController setImageLoadingInProgress:]
  -[PUCropToolController _createRendererIfNeeded]
  -[PUCropToolController _setNeedsImageLoad:]
  -[PUCropToolController setInitialImageLoaded:]
  -[PUCropToolController _handleDidCreateEditedImage:inputExtent:]
  -[PUCropToolController _setNeedsLivePhotoLoad:]
  -[PUCropToolController _installRenderedImageAndDisplayIfNeeded]
  -[PUCropToolController _setGeometry:]
  -[PUCropToolController _overcaptureSourceUsed]
  -[PUCropToolController _setupCropModelFromCompositionController:]
  -[PUCropToolController _setInputExtent:]
  -[PUCropToolController _setViewCropRect:animated:]
  -[PUCropToolController _setStraightenAngle:animated:]
  -[PUCropToolController _setPitchAngle:animated:]
  -[PUCropToolController _setYawAngle:animated:]
  -[PUCropToolController _setCropAspect:animated:]
  -[PUCropToolController _viewCropRect]
  -[PUCropToolController _rotateSnapshotView]
  -[PUCropToolController _setRotateSnapshotView:]
  -[PUCropToolController _rotatingAnimationCount]
  -[PUCropToolController _setRotatingAnimationCount:]
  -[PUCropToolController _setContentViewsHidden:]
  -[PUCropToolController _contentViewsHiddenAnimationCount]
  -[PUCropToolController _removeSnapshotView:]
  -[PUCropToolController _setContentViewsHidden:animated:completion:]
  -[PUCropToolController _cropAspect]
  -[PUCropToolController _setCropAspect:]
  -[PUCropToolController _recomposeCropRectAnimated:]
  -[PUCropToolController _performLocalCropModelChanges:]
  -[PUCropToolController _isActiveTool]
  -[PUCropToolController _straightenAngle]
  -[PUCropToolController _suggestedCropRectForImageRect:]
  -[PUCropToolController _cancelAnimationForKeyPath:]
  -[PUCropToolController _setAnimationTarget:forKeyPath:]
  -[PUCropToolController _setIgnoreTrackingUpdates:]
  -[PUCropToolController _setAnimation:forKeyPath:]
  -[PUCropToolController _animateValueFromValue:toValue:interpolation:completion:]
  -[PUCropToolController _updatePreviewViewInsets]
  -[PUCropToolController _animationForKeyPath:]
  -[PUCropToolController _animationsByKeyPath]
  -[PUCropToolController _animationTargetsByKeyPath]
  -[PUCropToolController _setPreviewViewInsets:]
  -[PUCropToolController _inputExtent]
  -[PUCropToolController _performGeometryChange:animated:]
  -[PUCropToolController _setStraightenAngle:]
  -[PUCropToolController _setPitchAngle:]
  -[PUCropToolController _setYawAngle:]
  -[PUCropToolController _setViewCropRect:]
  -[PUCropToolController _setCropViewFrameForLastModelLoad:]
  -[PUCropToolController _updateCropToggleButton]
  -[PUCropToolController _loadImageIfNeededWithCompletion:]
  -[PUCropToolController _defaultImageCropRect]
  -[PUCropToolController _resetAllValuesAnimated:skipLayerTransformUpdate:]
  -[PUCropToolController _defaultStraightenAngle]
  -[PUCropToolController _defaultPitchAngle]
  -[PUCropToolController _pitchAngle]
  -[PUCropToolController _defaultYawAngle]
  -[PUCropToolController _defaultViewCropRect]
  -[PUCropToolController _setHasAppliedCropSuggestion:]
  -[PUCropToolController _setHasAppliedPerspectiveSuggestion:]
  -[PUCropToolController adjustmentsViewController]
  -[PUCropToolController _hasAutoAppliedCropSuggestion]
  -[PUCropToolController _hasRequestedCropSuggestion]
  -[PUCropToolController _setHasRequestedCropSuggestion:]
  -[PUCropToolController _setSuggestedCrop:]
  -[PUCropToolController _setSuggestedStraightenAngle:]
  -[PUCropToolController _hasAppliedPerspectiveSuggestion]
  -[PUCropToolController _hasCropSuggestion]
  -[PUCropToolController _hasPerspectiveSuggestion]
  -[PUCropToolController imageHasReframeData]
  -[PUCropToolController _applyCropAndPerspectiveSuggestion]
  -[PUCropToolController _setHasAutoAppliedCropSuggestion:]
  -[PUCropToolController _setHasAutoAppliedPerspectiveSuggestion:]
  -[PUCropToolController _suggestedCrop]
  -[PUCropToolController _suggestedStraightenAngle]
  -[PUCropToolController _suggestedPitchAngle]
  -[PUCropToolController _suggestedYawAngle]
  -[PUCropToolController _applyCropRect:straightenAngle:pitchAngle:yawAngle:isAutoCrop:isSmartCrop:isOriginalCrop:]
  -[PUCropToolController imageHasOriginalCrop]
  -[PUCropToolController _hasAppliedCropSuggestion]
  -[PUCropToolController _resetAllValuesAnimated:]
  -[PUCropToolController _applyReframeOrDynamicCrop]
  -[PUCropToolController _hasAutoAppliedPerspectiveSuggestion]
  -[PUCropToolController _hasRequestedPerspectiveSuggestion]
  -[PUCropToolController _setHasRequestedPerspectiveSuggestion:]
  -[PUCropToolController _setSuggestedPitchAngle:]
  -[PUCropToolController _setSuggestedYawAngle:]
  -[PUCropToolController _handleTouchingGesture:]
  -[PUCropToolController _handleCropHandlePan:]
  -[PUCropToolController _rotateButtonTapped:]
  -[PUCropToolController _setRotateButton:]
  -[PUCropToolController _flipButtonTapped:]
  -[PUCropToolController _setFlipButton:]
  -[PUCropToolController _aspectButtonTapped:]
  -[PUCropToolController _setAspectButton:]
  -[PUCropToolController _cropToggleTapped:]
  -[PUCropToolController setAutoButtonMode:]
  -[PUCropToolController _updateCropToggleButtonMode]
  -[PUCropToolController _aspectButton]
  -[PUCropToolController disableSourceSwitch]
  -[PUCropToolController _toggleOvercaptureSource]
  -[PUCropToolController _updateOvercaptureSourceSwitchActivity]
  -[PUCropToolController autoButtonMode]
  -[PUCropToolController _autoButton]
  -[PUCropToolController _isTrackingAdjustmentControl]
  -[PUCropToolController _selectedCropHandleView]
  -[PUCropToolController _showGridAndCancelDelayedHide]
  -[PUCropToolController _cancelDelayedRecomposeCropRect]
  -[PUCropToolController _showMaskedContentAndCancelDelayedHide]
  -[PUCropToolController _hideMaskedContent]
  -[PUCropToolController _recomposeCropRectDelayed]
  -[PUCropToolController _hideGridDelayed]
  -[PUCropToolController _hideMaskedContentDelayed]
  -[PUCropToolController updateViewOrdering]
  -[PUCropToolController _gridVisible]
  -[PUCropToolController _needsRecomposeCropRect]
  -[PUCropToolController _autoRecomposeCropRect]
  -[PUCropToolController _setSelectedCropHandleView:]
  -[PUCropToolController setMinimumViewCropRectSizeForHandleGesture:]
  -[PUCropToolController minimumViewCropRectSizeForHandleGesture]
  -[PUCropToolController _initialLocationsInHandlesByHandle]
  -[PUCropToolController _setInitialHandlePanCropRect:]
  -[PUCropToolController _cropRectFromPanningHandle:byAmount:]
  -[PUCropToolController showBadgeView:animated:]
  -[PUCropToolController badgeShowingExpirationTimer]
  -[PUCropToolController setBadgeShowingExpirationTimer:]
  -[PUCropToolController _initialHandlePanCropRect]
  -[PUCropToolController _pointForHandle:onCropRect:]
  -[PUCropToolController _deltaMaskForHandle:]
  -[PUCropToolController _correctInputVector:forHandle:onCropRect:lockDirection:]
  -[PUCropToolController _addHeight:toRect:anchorTop:]
  -[PUCropToolController _addWidth:toRect:anchorLeft:]
  -[PUCropToolController _pointForHandle:]
  -[PUCropToolController setVideoScrubberView:]
  -[PUCropToolController setVideoScrubberIsInteracting:]
  -[PUCropToolController setVideoScrubberSeekTime:]
  -[PUCropToolController updateVideoFrameWithScrubber]
  -[PUCropToolController videoScrubberSeekTime]
  -[PUCropToolController _ignoreTrackingUpdates]
  -[PUCropToolController basePhotoInvalidated]
  -[PUCropToolController setDisableSourceSwitch:]
  -[PUCropToolController _previewViewInsets]
  -[PUCropToolController _wantsPreviewViewHidden]
  -[PUCropToolController _setContentViewsHidden:animated:]
  -[PUCropToolController _setContentViewsHiddenAnimationCount:]
  -[PUCropToolController _rotateButton]
  -[PUCropToolController _invalidateConstraintsForKey:]
  -[PUCropToolController adjustmentPickerView]
  -[PUCropToolController _lastKnownComposition]
  -[PUCropToolController _loadLivePhotoIfNeeded]
  -[PUCropToolController _setWantsPreviewViewHidden:]
  -[PUCropToolController rotateAssetsCounterclockwise:]
  -[PUCropToolController rotateAssetsClockwise:]
  -[PUCropToolController _needsLivePhotoLoad]
  -[PUCropToolController _setActiveTool:]
  -[PUCropToolController setModelLoadingSuspended:]
  -[PUCropToolController _closeAspectRatioPicker]
  -[PUCropToolController _setLastKnownComposition:]
  -[PUCropToolController handleResigningCropTool]
  -[PUCropToolController toolKeyCommands]
  -[PUCropToolController _loadCropSuggestionIfNeeded]
  -[PUCropToolController _loadPerspectiveSuggestionIfNeeded]
  -[PUCropToolController _rotateByApplyingOrientation:]
  -[PUCropToolController updateCropAspectRatioOrientation:]
  -[PUCropToolController _setGridVisible:]
  -[PUCropToolController _toggleCropAndPerspective]
  -[PUCropToolController overcaptureSourceToggleActivity]
  -[PUCropToolController cropTransformedImageViewWillBeginTracking:]
  -[PUCropToolController cropTransformedImageViewDidTrack:]
  -[PUCropToolController cropTransformedImageViewDidEndTracking:]
  -[PUCropToolController videoScrubberViewDidScrubTo:]
  -[PUCropToolController videoScrubberViewInteractionDone]
  -[PUCropToolController _handleRenderedVideoWithURL:originalLivePhoto:success:error:]
  -[PUCropToolController _animationTargetForKeyPath:]
  -[PUCropToolController baseLivePhotoInvalidated]
  -[PUCropToolController _autoApplyCropAndPerspectiveSuggestionIfNeeded]
  -[PUCropToolController _applyAspectOfCropRect:toHandleMovement:]
  -[PUCropToolController prepareForToolTransitionWithCompletion:]
  -[PUCropToolController preferredPreviewViewInsets]
  -[PUCropToolController wantsDefaultPreviewView]
  -[PUCropToolController suppressesEditUpdates]
  -[PUCropToolController handlesVideoPlaying]
  -[PUCropToolController handlesMediaViewInsets]
  -[PUCropToolController supportsPreviewingOriginal]
  -[PUCropToolController canBecomeActiveTool]
  -[PUCropToolController willResignActiveTool]
  -[PUCropToolController prepareForSave:]
  -[PUCropToolController leavingEditWithCancel]
  -[PUCropToolController didResignActiveTool]
  -[PUCropToolController leadingToolbarViews]
  -[PUCropToolController trailingToolbarViews]
  -[PUCropToolController offlineKeyCommands]
  -[PUCropToolController _gridButtonTapped:]
  -[PUCropToolController setAdjustmentsViewController:]
  -[PUCropToolController setAdjustmentPickerView:]
  -[PUCropToolController _setAutoButton:]
  -[PUCropToolController _perspectiveButton]
  -[PUCropToolController _setPerspectiveButton:]
  -[PUCropToolController setOvercaptureSourceToggleActivity:]
  -[PUCropToolController _setCropView:]
  -[PUCropToolController _setCropCanvasView:]
  -[PUCropToolController _setCropOverlayView:]
  -[PUCropToolController _setCropHandleViewsByHandle:]
  -[PUCropToolController setCropAspectViewController:]
  -[PUCropToolController setCropAspectFlipperView:]
  -[PUCropToolController _setInitialLocationsInHandlesByHandle:]
  -[PUCropToolController _contentViewsHidden]
  -[PUCropToolController _setAnimationsByKeyPath:]
  -[PUCropToolController _setAnimationTargetsByKeyPath:]
  -[PUCropToolController initialImageLoaded]
  -[PUCropToolController _fileSystemQueue]
  -[PUCropToolController _setFileSystemQueue:]
  -[PUCropToolController setCropModel:]
  -[PUCropToolController videoScrubberIsInteracting]
  -[PUCropToolController setImageLoadingQueue:]
  -[PUCropToolController setImageLoadingQueueCompletionBlocks:]
  -[PUCropToolController imageIsUsingReframe]
  -[PUCropToolController autoButtonInReframeMode]
  -[PUCropToolController setAutoButtonInReframeMode:]


PUCropVideoScrubberView : UIView
 @property  UISlider *scrubberSlider
 @property  UILabel *beforeTimeLabel
 @property  UILabel *afterTimeLabel
 @property  NSObject<PUCropVideoScrubberViewDelegate> *delegate

  // instance methods
  -[PUCropVideoScrubberView .cxx_destruct]
  -[PUCropVideoScrubberView layoutSubviews]
  -[PUCropVideoScrubberView setDelegate:]
  -[PUCropVideoScrubberView setCurrentTime:]
  -[PUCropVideoScrubberView delegate]
  -[PUCropVideoScrubberView timesChanged:endingTime:currentTime:]
  -[PUCropVideoScrubberView initWithStartingTime:endingTime:currentTime:]
  -[PUCropVideoScrubberView setScrubberSlider:]
  -[PUCropVideoScrubberView videoScrubberValueChanged:]
  -[PUCropVideoScrubberView videoScrubberDoneChanging]
  -[PUCropVideoScrubberView updateSliderPosition]
  -[PUCropVideoScrubberView offsetTimeLabelsIfNecessary]
  -[PUCropVideoScrubberView scrubberSlider]
  -[PUCropVideoScrubberView beforeTimeLabel]
  -[PUCropVideoScrubberView setBeforeTimeLabel:]
  -[PUCropVideoScrubberView afterTimeLabel]
  -[PUCropVideoScrubberView setAfterTimeLabel:]


PUCropToolControllerSpec : PUPhotoEditToolControllerSpec
 @property  double cropRectMargin
 @property  double minimumCropInset
 @property  {CGSize=dd} minimumCropSize
 @property  {CGSize=dd} minimumCropHandleViewSize
 @property  {CGSize=dd} cropActionButtonSize
 @property  double cropHandleViewLineThickness
 @property  double cropHandleViewLineMargin
 @property  double standardBottomBarWidth
 @property  double standardSideBarHeight
 @property  double leftInsetForiPad
 @property  double cropTopBarHeight
 @property  double cropAspectRatioScrollHeight
 @property  double cropAspectFlipperWidth
 @property  {UIEdgeInsets=dddd} cropAspectRatioScrollContentInset
 @property  {UIEdgeInsets=dddd} cropAspectRatioButtonTitleInset
 @property  UIColor *cropAspectButtonColor
 @property  UIColor *cropAspectButtonSelectedColor
 @property  PXLabelSpec *cropHeaderLabelSpec

  // instance methods
  -[PUCropToolControllerSpec standardBottomBarHeight]
  -[PUCropToolControllerSpec cropAspectRatioScrollContentInset]
  -[PUCropToolControllerSpec cropAspectButtonColor]
  -[PUCropToolControllerSpec cropAspectButtonSelectedColor]
  -[PUCropToolControllerSpec minimumCropHandleViewSize]
  -[PUCropToolControllerSpec minimumCropInset]
  -[PUCropToolControllerSpec standardSideBarWidth]
  -[PUCropToolControllerSpec cropAspectRatioScrollHeight]
  -[PUCropToolControllerSpec cropAspectFlipperWidth]
  -[PUCropToolControllerSpec cropTopBarHeight]
  -[PUCropToolControllerSpec minimumCropSize]
  -[PUCropToolControllerSpec cropActionButtonSize]
  -[PUCropToolControllerSpec cropHandleViewLineThickness]
  -[PUCropToolControllerSpec cropHandleViewLineMargin]
  -[PUCropToolControllerSpec cropRectMargin]
  -[PUCropToolControllerSpec leftInsetForiPad]
  -[PUCropToolControllerSpec standardBottomBarWidth]
  -[PUCropToolControllerSpec standardSideBarHeight]
  -[PUCropToolControllerSpec cropHeaderLabelSpec]
  -[PUCropToolControllerSpec cropAspectRatioButtonTitleInset]


PUCroppedTileLayoutInfo : PUTileLayoutInfo
 @property  {UIEdgeInsets=dddd} cropInsets

  // instance methods
  -[PUCroppedTileLayoutInfo cropInsets]
  -[PUCroppedTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUCroppedTileLayoutInfo clone]
  -[PUCroppedTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:contentsRect:coordinateSystem:]
  -[PUCroppedTileLayoutInfo layoutInfoByInterpolatingWithLayoutInfo:mixFactor:coordinateSystem:]
  -[PUCroppedTileLayoutInfo initWithTileIdentifier:center:size:cropInsets:alpha:cornerRadius:cornerCurve:cornerMask:transform:zPosition:contentsRect:coordinateSystem:]
  -[PUCroppedTileLayoutInfo _setCropInsets:]


PUAudioClassificationAssetBrowserDebugViewController : PUPhotosAlbumViewController
 @property  NSString *audioClassificationName

  // instance methods
  -[PUAudioClassificationAssetBrowserDebugViewController .cxx_destruct]
  -[PUAudioClassificationAssetBrowserDebugViewController viewDidLoad]
  -[PUAudioClassificationAssetBrowserDebugViewController _presentTapToRadar]
  -[PUAudioClassificationAssetBrowserDebugViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUAudioClassificationAssetBrowserDebugViewController _fileRadarWithIncorrectAssets:]
  -[PUAudioClassificationAssetBrowserDebugViewController _writeDiagnosticsToURL:incorrectAssets:]
  -[PUAudioClassificationAssetBrowserDebugViewController _cloneAsset:toDirectory:]
  -[PUAudioClassificationAssetBrowserDebugViewController audioClassificationName]
  -[PUAudioClassificationAssetBrowserDebugViewController setAudioClassificationName:]


PUCrossfadeAnimatedTransitioning : NSObject <UIViewControllerAnimatedTransitioning>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCrossfadeAnimatedTransitioning transitionDuration:]
  -[PUCrossfadeAnimatedTransitioning animateTransition:]


PUCrossfadeModalTransition : PUModalTransition
  // instance methods
  -[PUCrossfadeModalTransition init]
  -[PUCrossfadeModalTransition animatePresentTransition]
  -[PUCrossfadeModalTransition animateDismissTransition]


PUCrossfadeNavigationTransition : PUNavigationTransition
  // instance methods
  -[PUCrossfadeNavigationTransition animatePushTransition]
  -[PUCrossfadeNavigationTransition init]
  -[PUCrossfadeNavigationTransition animatePopTransition]
  -[PUCrossfadeNavigationTransition _animateTransition]


PUDefaultTileTransitionCoordinator : PUTileTransitionCoordinator
 @property  NSNumber *animationDuration

  // instance methods
  -[PUDefaultTileTransitionCoordinator setAnimationDuration:]
  -[PUDefaultTileTransitionCoordinator animationDuration]
  -[PUDefaultTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUDefaultTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUDefaultTileTransitionCoordinator _layoutInfoWithDefaultDisappearance:]
  -[PUDefaultTileTransitionCoordinator _adjustDefaultDisappearanceTransform:]
  -[PUDefaultTileTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]
  -[PUDefaultTileTransitionCoordinator configureOptions:forSpringAnimationsZommingIn:]


PUDefaultLayoutToLayoutTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
 @property  BOOL _isZoomingIn
 @property  BOOL _needsUpdateZoomingIn
 @property  PUTilingLayout *fromLayout
 @property  PUTilingLayout *toLayout
 @property  PUAssetReference *anchorAssetReference
 @property  PUTilingLayoutTransitionContext *context
 @property  <PUTilingCoordinateSystem> *fixedCoordinateSystem

  // instance methods
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator toLayout]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator anchorAssetReference]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator fromLayout]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator fixedCoordinateSystem]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator setFromLayout:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator setToLayout:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator setContext:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator useDoubleSidedTransitionForUpdatedTileController:toLayoutInfo:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator setAnchorAssetReference:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator context]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator setFixedCoordinateSystem:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _isZoomingIn]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _isCenterTileLayoutInfo:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _centerTileLayoutInfoWithDefaultDisappearance:layoutWhereCenterTileExists:layoutWhereCenterTileDisappeared:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _invalidateIsZoomingIn]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _updateIsZoomingInIfNeeded]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _setNeedsUpdateZoomingIn:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _needsUpdateZoomingIn]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _zoomLevelForLayout:]
  -[PUDefaultLayoutToLayoutTileTransitionCoordinator _setZoomingIn:]


PUDefaultUpdateTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
  // instance methods
  -[PUDefaultUpdateTileTransitionCoordinator _adjustDefaultDisappearanceTransform:]


PUDefaultReattachedTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
 @property  PUTileReattachmentContext *context

  // instance methods
  -[PUDefaultReattachedTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultReattachedTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUDefaultReattachedTileTransitionCoordinator setContext:]
  -[PUDefaultReattachedTileTransitionCoordinator context]


PUDefaultFrameChangeTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
 @property  NSSet *_invisibleTileControllers
 @property  BOOL shouldCrossFadeTiles
 @property  PUTilingView *tilingView

  // instance methods
  -[PUDefaultFrameChangeTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultFrameChangeTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUDefaultFrameChangeTileTransitionCoordinator useDoubleSidedTransitionForUpdatedTileController:toLayoutInfo:]
  -[PUDefaultFrameChangeTileTransitionCoordinator prepare]
  -[PUDefaultFrameChangeTileTransitionCoordinator setShouldCrossFadeTiles:]
  -[PUDefaultFrameChangeTileTransitionCoordinator setTilingView:]
  -[PUDefaultFrameChangeTileTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]
  -[PUDefaultFrameChangeTileTransitionCoordinator shouldCrossFadeTiles]
  -[PUDefaultFrameChangeTileTransitionCoordinator _isLayoutInfoVisible:]
  -[PUDefaultFrameChangeTileTransitionCoordinator _layoutInfoForDisappearedInvisibleTile:]
  -[PUDefaultFrameChangeTileTransitionCoordinator _invisibleTileControllers]
  -[PUDefaultFrameChangeTileTransitionCoordinator tilingView]
  -[PUDefaultFrameChangeTileTransitionCoordinator _setInvisibleTileControllers:]


PUDefaultChromeVisibilityChangeTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
 @property  PUBrowsingViewModel *viewModel

  // instance methods
  -[PUDefaultChromeVisibilityChangeTileTransitionCoordinator setViewModel:]
  -[PUDefaultChromeVisibilityChangeTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultChromeVisibilityChangeTileTransitionCoordinator viewModel]
  -[PUDefaultChromeVisibilityChangeTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]


PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator : PUDefaultTileTransitionCoordinator
 @property  PUBrowsingViewModel *viewModel
 @property  BOOL shouldAnimateContent
 @property  BOOL shouldAnimateAccessory
 @property  BOOL shouldSlideAccessory

  // instance methods
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator setViewModel:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator .cxx_destruct]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator viewModel]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator setShouldAnimateContent:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator setShouldAnimateAccessory:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator setShouldSlideAccessory:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator _layoutInfoWithDefaultDisappearance:]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator shouldAnimateContent]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator shouldAnimateAccessory]
  -[PUDefaultAccessoryViewVisibilityChangeTileTransitionCoordinator shouldSlideAccessory]


PUDeletePhotosActionController : NSObject
 @property  NSArray *_assets
 @property  NSArray *_plAssets
 @property  NSArray *_plAdditionalAssetsToDelete
 @property  UIAlertController *_mainAlertController
 @property  UIAlertController *_oneTimeConfirmationAlertController
 @property  long long action
 @property  <PUDeletePhotosActionControllerDelegate> *delegate
 @property  BOOL shouldSkipDeleteConfirmation

  // instance methods
  -[PUDeletePhotosActionController .cxx_destruct]
  -[PUDeletePhotosActionController _assets]
  -[PUDeletePhotosActionController action]
  -[PUDeletePhotosActionController delegate]
  -[PUDeletePhotosActionController _plAssets]
  -[PUDeletePhotosActionController shouldSkipDeleteConfirmation]
  -[PUDeletePhotosActionController _handleMainAlertConfirmed:]
  -[PUDeletePhotosActionController _ensureMainAlertController]
  -[PUDeletePhotosActionController _mainAlertController]
  -[PUDeletePhotosActionController _runDestructiveActionWithCompletion:]
  -[PUDeletePhotosActionController _plAdditionalAssetsToDelete]
  -[PUDeletePhotosActionController _getDeleteActionSheetTitle:destructiveButtonTitle:cancelButtonTitle:isDestructiveBehavior:forAssets:duplicatePhotoStreamCount:]
  -[PUDeletePhotosActionController _setMainAlertController:]
  -[PUDeletePhotosActionController _oneTimeConfirmationAlertController]
  -[PUDeletePhotosActionController _handleOneTimeAlertConfirmed]
  -[PUDeletePhotosActionController _setOneTimeConfirmationAlertController:]
  -[PUDeletePhotosActionController _ensureOneTimeConfirmationAlertController]
  -[PUDeletePhotosActionController _showOnetimeConfirmation]
  -[PUDeletePhotosActionController _handleFinalUserDecisionShouldDelete:]
  -[PUDeletePhotosActionController initWithAction:assets:delegate:]
  -[PUDeletePhotosActionController performWithWillDeleteHandler:completionHandler:]
  -[PUDeletePhotosActionController ppt_performDeleteWithoutUserConfirmationWithCompletionHandler:]
  -[PUDeletePhotosActionController setShouldSkipDeleteConfirmation:]


PUDisplayLink : NSObject
 @property  @? updateHandler
 @property  @? completionHandler
 @property  CADisplayLink *displayLink

  // instance methods
  -[PUDisplayLink setUpdateHandler:]
  -[PUDisplayLink updateHandler]
  -[PUDisplayLink setDisplayLink:]
  -[PUDisplayLink initWithUpdateHandler:completionHandler:]
  -[PUDisplayLink .cxx_destruct]
  -[PUDisplayLink stop]
  -[PUDisplayLink displayLink]
  -[PUDisplayLink _update:]
  -[PUDisplayLink setCompletionHandler:]
  -[PUDisplayLink start]
  -[PUDisplayLink completionHandler]


PUDisplayLocationProvider : NSObject <PUDisplayLocationProvider>
 @property  {CGPoint=dd} _point
 @property  <UICoordinateSpace> *_coordinateSpace

  // instance methods
  -[PUDisplayLocationProvider _point]
  -[PUDisplayLocationProvider .cxx_destruct]
  -[PUDisplayLocationProvider init]
  -[PUDisplayLocationProvider locationInView:]
  -[PUDisplayLocationProvider _coordinateSpace]
  -[PUDisplayLocationProvider initWithPoint:inCoordinateSpace:]


PUDisplayTileTransform : NSObject <NSCopying>
 @property  PUModelTileTransform *modelTileTransform
 @property  BOOL hasUserInput
 @property  {CGAffineTransform=dddddd} affineTransform
 @property  NSString *userInputOriginIdentifier
 @property  {CGSize=dd} transformPadding
 @property  double _initialScale
 @property  {CGSize=dd} _initialSize
 @property  {CGSize=dd} _displaySize

  // class methods
  +[PUDisplayTileTransform displayTileTransformWithModelTileTransform:initialScale:initialSize:displaySize:secondaryDisplayTileTransform:]

  // instance methods
  -[PUDisplayTileTransform _setAffineTransform:]
  -[PUDisplayTileTransform .cxx_destruct]
  -[PUDisplayTileTransform _setTransformPadding:]
  -[PUDisplayTileTransform _setDisplaySize:]
  -[PUDisplayTileTransform modelTileTransform]
  -[PUDisplayTileTransform _initialScale]
  -[PUDisplayTileTransform init]
  -[PUDisplayTileTransform _initialSize]
  -[PUDisplayTileTransform _setHasUserInput:]
  -[PUDisplayTileTransform userInputOriginIdentifier]
  -[PUDisplayTileTransform affineTransform]
  -[PUDisplayTileTransform hasUserInput]
  -[PUDisplayTileTransform _setUserInputOriginIdentifier:]
  -[PUDisplayTileTransform _setInitialSize:]
  -[PUDisplayTileTransform newDisplayTileTransformWithUserAffineTransform:userInputOriginIdentifier:]
  -[PUDisplayTileTransform copyWithZone:]
  -[PUDisplayTileTransform transformPadding]
  -[PUDisplayTileTransform _setInitialScale:]
  -[PUDisplayTileTransform _displaySize]


PUDoubleTapZoomController : NSObject <UIGestureRecognizerDelegate>
 @property  BOOL _needsUpdateGestureRecognizers
 @property  UITapGestureRecognizer *_doubleTapGestureRecognizer
 @property  <PUDoubleTapZoomControllerDelegate> *delegate
 @property  UITapGestureRecognizer *doubleTapGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUDoubleTapZoomController doubleTapGestureRecognizer]
  -[PUDoubleTapZoomController invalidateViewHostingGestureRecognizers]
  -[PUDoubleTapZoomController .cxx_destruct]
  -[PUDoubleTapZoomController _handleDoubleTapGestureRecognizer:]
  -[PUDoubleTapZoomController _invalidateGestureRecognizers]
  -[PUDoubleTapZoomController setDelegate:]
  -[PUDoubleTapZoomController init]
  -[PUDoubleTapZoomController _userTransformViewAtLocationFromProvider:]
  -[PUDoubleTapZoomController gestureRecognizerShouldBegin:]
  -[PUDoubleTapZoomController _setNeedsUpdateGestureRecognizers:]
  -[PUDoubleTapZoomController gestureRecognizer:shouldReceiveTouch:]
  -[PUDoubleTapZoomController delegate]
  -[PUDoubleTapZoomController _setDoubleTapGestureRecognizer:]
  -[PUDoubleTapZoomController shouldDoubleTapBeginAtLocationFromProvider:]
  -[PUDoubleTapZoomController _needsUpdateGestureRecognizers]
  -[PUDoubleTapZoomController _doubleTapGestureRecognizer]
  -[PUDoubleTapZoomController _updateGestureRecognizersIfNeeded]


PUDuplicateActionController : NSObject
 @property  NSDictionary *_assetsByAssetCollection
 @property  BOOL _didCheckDuplicateCapabilities
 @property  BOOL _canDuplicate
 @property  BOOL _canExtractStill
 @property  NSProgress *_overallProgress
 @property  NSProgress *_downloadingProgress
 @property  NSProgress *_duplicatingProgress
 @property  PUActivityProgressController *_progressController
 @property  @? _onFinishDownloadCompletionHandler
 @property  BOOL shouldUseAlertController

  // class methods
  +[PUDuplicateActionController _presentDuplicationWasInterruptedWithItemCount:hasPhotos:hasVideos:]
  +[PUDuplicateActionController canPerformDuplicateActionOnAssets:orAssetsByAssetCollection:]

  // instance methods
  -[PUDuplicateActionController .cxx_destruct]
  -[PUDuplicateActionController init]
  -[PUDuplicateActionController dealloc]
  -[PUDuplicateActionController _progressController]
  -[PUDuplicateActionController observeValueForKeyPath:ofObject:change:context:]
  -[PUDuplicateActionController _assetsByAssetCollection]
  -[PUDuplicateActionController initWithAssetsByAssetCollection:]
  -[PUDuplicateActionController _setOverallProgress:]
  -[PUDuplicateActionController _canExtractStill]
  -[PUDuplicateActionController _canDuplicate]
  -[PUDuplicateActionController _didCheckDuplicateCapabilities]
  -[PUDuplicateActionController _checkDuplicateCapabilities]
  -[PUDuplicateActionController _overallProgress]
  -[PUDuplicateActionController _checkHasPhotos:hasVideos:]
  -[PUDuplicateActionController _validateOriginalAssetResourcesForDuplicateAction:]
  -[PUDuplicateActionController _setProgressController:]
  -[PUDuplicateActionController _handleProgressUserCancellation]
  -[PUDuplicateActionController _setDownloadingProgress:]
  -[PUDuplicateActionController _setDuplicatingProgress:]
  -[PUDuplicateActionController _performPhotoLibraryChangeForAction:newStillImageTime:completionHandler:]
  -[PUDuplicateActionController _downloadResourcesForDuplicateAction:newStillImageTime:completionHandler:]
  -[PUDuplicateActionController _setOnFinishDownloadCompletionHandler:]
  -[PUDuplicateActionController _downloadingProgress]
  -[PUDuplicateActionController _handleOperationCompletionWithError:]
  -[PUDuplicateActionController _duplicatingProgress]
  -[PUDuplicateActionController _handlePhotoLibraryDuplicationCompletionWithSuccess:error:completionHandler:]
  -[PUDuplicateActionController _overallProgressFractionCompletedDidChange]
  -[PUDuplicateActionController _overallProgressIsCancelledDidChange]
  -[PUDuplicateActionController _finishedDownloadWithSuccess:]
  -[PUDuplicateActionController _finishedDuplicationWithSuccess:]
  -[PUDuplicateActionController _onFinishDownloadCompletionHandler]
  -[PUDuplicateActionController shouldUseAlertController]
  -[PUDuplicateActionController alertControllerForDuplicateActionWithPreview:newStillImageTime:userConfirmationHandler:]
  -[PUDuplicateActionController performDuplicateAction:newStillImageTime:completionHandler:]
  -[PUDuplicateActionController _setDidCheckDuplicateCapabilities:]


PUDuplicateActivity : PXActivity
  // class methods
  +[PUDuplicateActivity activityCategory]

  // instance methods
  -[PUDuplicateActivity _systemImageName]
  -[PUDuplicateActivity activityType]
  -[PUDuplicateActivity canPerformWithActivityItems:]
  -[PUDuplicateActivity performActivity]
  -[PUDuplicateActivity activityTitle]


PUDuplicatePreviewViewController : UIViewController
 @property  NSArray *assets
 @property  {?=qiIq} stillImageTime

  // instance methods
  -[PUDuplicatePreviewViewController preferredContentSize]
  -[PUDuplicatePreviewViewController .cxx_destruct]
  -[PUDuplicatePreviewViewController assets]
  -[PUDuplicatePreviewViewController viewDidLoad]
  -[PUDuplicatePreviewViewController setAssets:]
  -[PUDuplicatePreviewViewController initWithAssets:stillImageTime:]
  -[PUDuplicatePreviewViewController _handleImageResult:info:forIndex:]
  -[PUDuplicatePreviewViewController _handleVideoResult:info:forIndex:]
  -[PUDuplicatePreviewViewController stillImageTime]
  -[PUDuplicatePreviewViewController setStillImageTime:]


PUEditPlugin : NSObject
 @property  UIApplicationExtensionActivity *_applicationExtensionActivity
 @property  unsigned long category
 @property  NSExtension *extension
 @property  UIImage *smallIcon
 @property  NSString *title
 @property  UIImage *icon

  // instance methods
  -[PUEditPlugin icon]
  -[PUEditPlugin .cxx_destruct]
  -[PUEditPlugin isEqual:]
  -[PUEditPlugin extension]
  -[PUEditPlugin title]
  -[PUEditPlugin category]
  -[PUEditPlugin setCategory:]
  -[PUEditPlugin smallIcon]
  -[PUEditPlugin _applicationExtensionActivity]
  -[PUEditPlugin initWithExtension:pluginCategoryType:]


_PUEditSharePluginApplicationExtensionActivity : UIApplicationExtensionActivity
  // class methods
  +[_PUEditSharePluginApplicationExtensionActivity activityCategory]


_PUEditActionPluginApplicationExtensionActivity : UIApplicationExtensionActivity
  // class methods
  +[_PUEditActionPluginApplicationExtensionActivity activityCategory]


PUEditPluginActivity : UIActivity
 @property  PUEditPlugin *plugin

  // class methods
  +[PUEditPluginActivity activityCategory]

  // instance methods
  -[PUEditPluginActivity .cxx_destruct]
  -[PUEditPluginActivity activityType]
  -[PUEditPluginActivity canPerformWithActivityItems:]
  -[PUEditPluginActivity _activityImage]
  -[PUEditPluginActivity initWithPlugin:]
  -[PUEditPluginActivity activityTitle]
  -[PUEditPluginActivity plugin]
  -[PUEditPluginActivity _activitySettingsImage]
  -[PUEditPluginActivity _isHiddenByDefault]


PUPickerRemoteUIViewController : _UIRemoteViewController <_PUPickerRemoteUIViewControllerHostInterface>
 @property  <_PUPickerRemoteUIViewControllerHostInterface> *_delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerRemoteUIViewController exportedInterface]
  +[PUPickerRemoteUIViewController serviceViewControllerInterface]

  // instance methods
  -[PUPickerRemoteUIViewController _delegate]
  -[PUPickerRemoteUIViewController .cxx_destruct]
  -[PUPickerRemoteUIViewController set_delegate:]
  -[PUPickerRemoteUIViewController _pickerDidFinishPicking:]


PUEditPluginHostViewController : UIViewController <PXForcedDismissableViewController, PUEditingExtensionUndoButtonHost>
 @property  UIViewController *_remoteViewController
 @property  <NSCopying> *_request
 @property  BOOL _extensionDidBeginContentEditing
 @property  BOOL _didHandleCancel
 @property  BOOL _didHandleDone
 @property  id _disablingIdleTimerToken
 @property  NSNumber *_allowsFullScreen
 @property  PUEditingExtensionUndoProxyHostSide *undoProxy
 @property  UIBarButtonItem *undoBarButtonItem
 @property  UIBarButtonItem *redoBarButtonItem
 @property  BOOL showUndoRedoButtons
 @property  PUEditPlugin *plugin
 @property  <PUEditPluginHostViewControllerDataSource> *dataSource
 @property  <PUEditPluginHostViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditPluginHostViewController prefersStatusBarHidden]
  -[PUEditPluginHostViewController _request]
  -[PUEditPluginHostViewController setDataSource:]
  -[PUEditPluginHostViewController _handleCancel]
  -[PUEditPluginHostViewController .cxx_destruct]
  -[PUEditPluginHostViewController _dismiss]
  -[PUEditPluginHostViewController _hostContext]
  -[PUEditPluginHostViewController setDelegate:]
  -[PUEditPluginHostViewController dataSource]
  -[PUEditPluginHostViewController _handleDoneButton:]
  -[PUEditPluginHostViewController _remoteViewController]
  -[PUEditPluginHostViewController viewWillAppear:]
  -[PUEditPluginHostViewController initWithPlugin:]
  -[PUEditPluginHostViewController delegate]
  -[PUEditPluginHostViewController setShowUndoRedo:]
  -[PUEditPluginHostViewController setUndoEnabled:redoEnabled:]
  -[PUEditPluginHostViewController plugin]
  -[PUEditPluginHostViewController dealloc]
  -[PUEditPluginHostViewController loadView]
  -[PUEditPluginHostViewController undoProxy]
  -[PUEditPluginHostViewController viewDidDisappear:]
  -[PUEditPluginHostViewController prepareForDismissingForced:]
  -[PUEditPluginHostViewController _extensionVendorProxy]
  -[PUEditPluginHostViewController _handleCancelButton:]
  -[PUEditPluginHostViewController _endDisablingIdleTimerIfNecessary]
  -[PUEditPluginHostViewController showUndoRedoButtons]
  -[PUEditPluginHostViewController _updateBarButtonsWithUndoRedoVisible:]
  -[PUEditPluginHostViewController _allowsFullScreen]
  -[PUEditPluginHostViewController _addRemoteViewControllerIfNeededAllowingFullscreen:]
  -[PUEditPluginHostViewController _setRequest:]
  -[PUEditPluginHostViewController _setupUndoProxy]
  -[PUEditPluginHostViewController _setRemoteViewController:]
  -[PUEditPluginHostViewController _setExtensionDidBeginContentEditing:]
  -[PUEditPluginHostViewController _beginContentEditingWithCompletionHandler:timeout:]
  -[PUEditPluginHostViewController _queryAllowsFullScreen:]
  -[PUEditPluginHostViewController _handleVendorVersion:completion:]
  -[PUEditPluginHostViewController _setAllowsFullScreen:]
  -[PUEditPluginHostViewController handleUndoButton:]
  -[PUEditPluginHostViewController handleRedoButton:]
  -[PUEditPluginHostViewController setUndoBarButtonItem:]
  -[PUEditPluginHostViewController setRedoBarButtonItem:]
  -[PUEditPluginHostViewController _didHandleCancel]
  -[PUEditPluginHostViewController _setDidHandleCancel:]
  -[PUEditPluginHostViewController _extensionDidBeginContentEditing]
  -[PUEditPluginHostViewController _queryShouldShowCancelConfirmationWithResponseHandler:timeout:]
  -[PUEditPluginHostViewController _didHandleDone]
  -[PUEditPluginHostViewController _setDidHandleDone:]
  -[PUEditPluginHostViewController _beginDisablingIdleTimer]
  -[PUEditPluginHostViewController _disablingIdleTimerToken]
  -[PUEditPluginHostViewController _setDisablingIdleTimerToken:]
  -[PUEditPluginHostViewController setUndoProxy:]
  -[PUEditPluginHostViewController setShowUndoRedoButtons:]
  -[PUEditPluginHostViewController undoBarButtonItem]
  -[PUEditPluginHostViewController redoBarButtonItem]
  -[PUEditPluginHostViewController loadRemoteViewControllerWithCompletionHandler:]
  -[PUEditPluginHostViewController queryHandlingCapabilityForAdjustmentData:withResponseHandler:timeout:]


PUEditPluginManager : NSObject
 @property  NSArray *_plugins
 @property  unsigned long mediaType

  // class methods
  +[PUEditPluginManager sharedManagerForMediaType:]

  // instance methods
  -[PUEditPluginManager .cxx_destruct]
  -[PUEditPluginManager _plugins]
  -[PUEditPluginManager mediaType]
  -[PUEditPluginManager _initWithMediaType:]
  -[PUEditPluginManager _allowedPluginTypes]
  -[PUEditPluginManager _discoveredAvailableExtensions:]
  -[PUEditPluginManager _setPlugins:]
  -[PUEditPluginManager hasPlugins]
  -[PUEditPluginManager hasNonMarkupPlugins]
  -[PUEditPluginManager hasMarkupPlugin]
  -[PUEditPluginManager rediscoverAvailablePlugins]
  -[PUEditPluginManager pluginActivities]
  -[PUEditPluginManager pluginActivitiesExceptMarkup]


PUEditExtensionActivityViewController : UIActivityViewController
 @property  <PUEditExtensionActivityViewControllerDelegate> *editExtensionActivityViewControllerDelegate

  // instance methods
  -[PUEditExtensionActivityViewController .cxx_destruct]
  -[PUEditExtensionActivityViewController _performActivity:]
  -[PUEditExtensionActivityViewController editExtensionActivityViewControllerDelegate]
  -[PUEditExtensionActivityViewController _shouldUseModernDesign]
  -[PUEditExtensionActivityViewController isPhotosOrCamera]
  -[PUEditExtensionActivityViewController appWantsLargePreview]
  -[PUEditExtensionActivityViewController setEditExtensionActivityViewControllerDelegate:]


PUEditPluginSession : NSObject <PUEditPluginHostViewControllerDataSource, PUEditPluginHostViewControllerDelegate, PUEditExtensionActivityViewControllerDelegate>
 @property  BOOL isAvailable
 @property  PUEditPlugin *currentPlugin
 @property  long long adjustmentType
 @property  <PUEditableAsset> *asset
 @property  UIViewController *_hostViewController
 @property  <PUEditPluginSessionDataSource> *dataSource
 @property  <PUEditPluginSessionDelegate> *delegate
 @property  BOOL markupIsAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditPluginSession setDataSource:]
  -[PUEditPluginSession .cxx_destruct]
  -[PUEditPluginSession isAvailable]
  -[PUEditPluginSession setDelegate:]
  -[PUEditPluginSession updateAvailability]
  -[PUEditPluginSession dataSource]
  -[PUEditPluginSession init]
  -[PUEditPluginSession asset]
  -[PUEditPluginSession delegate]
  -[PUEditPluginSession dealloc]
  -[PUEditPluginSession _hostViewController]
  -[PUEditPluginSession adjustmentType]
  -[PUEditPluginSession _setAsset:]
  -[PUEditPluginSession presentAlertController:]
  -[PUEditPluginSession editPluginHostViewController:loadItemProviderWithHandler:]
  -[PUEditPluginSession editPluginHostViewController:didFinishWithCompletionType:]
  -[PUEditPluginSession editPluginHostViewController:commitContentEditingOutput:withCompletionHandler:]
  -[PUEditPluginSession editExtensionActivityViewController:didSelectActivity:]
  -[PUEditPluginSession updatePluginManager]
  -[PUEditPluginSession pluginManagerMediaType]
  -[PUEditPluginSession _pluginManagerPluginsDidChange:]
  -[PUEditPluginSession _setIsAvailable:]
  -[PUEditPluginSession currentPlugin]
  -[PUEditPluginSession _beginMarkupSessionWithAsset:fromViewController:]
  -[PUEditPluginSession _unlockScreenIfNeededWithCompletionHandler:]
  -[PUEditPluginSession _setHostViewController:]
  -[PUEditPluginSession _launchPlugin:afterDismissingViewController:]
  -[PUEditPluginSession shouldLaunchPlugin:completion:]
  -[PUEditPluginSession _beginSessionWithAsset:fromViewController:sourceElement:]
  -[PUEditPluginSession _linkPresentationImage]
  -[PUEditPluginSession _setCurrentPlugin:]
  -[PUEditPluginSession _setAdjustmentType:]
  -[PUEditPluginSession loadItemProviderWithSupportedAdjustmentData:loadHandler:]
  -[PUEditPluginSession markupIsAvailable]
  -[PUEditPluginSession beginMarkupSessionWithAsset:fromViewController:]
  -[PUEditPluginSession beginSessionWithAsset:fromViewController:sourceElement:]
  -[PUEditPluginSession dismissSession]
  -[PUEditPluginSession _localizedEditorListTitle]


PUEditViewController : UIViewController
 @property  UIImage *placeholderImage

  // instance methods
  -[PUEditViewController placeholderImage]
  -[PUEditViewController setPlaceholderImage:]
  -[PUEditViewController .cxx_destruct]


PUEditableMediaProvider : PUMediaProvider
  // instance methods
  -[PUEditableMediaProvider requestAsynchronousVideoURLForAsset:options:resultHandler:]
  -[PUEditableMediaProvider requestAVAssetForVideo:options:resultHandler:]


PUSidebarDataSectionEnablementController : NSObject <PXPreferencesObserver, PXSidebarDataSectionEnablement>
 @property  NSMapTable *sectionManagerByItemTypeForAccountStoreChange
 @property  NSMapTable *sectionManagersByItemTypeForDefaultsChange
 @property  PHPhotoLibrary *photoLibrary
 @property  BOOL registeredAsPrefObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSidebarDataSectionEnablementController initWithPhotoLibrary:]
  -[PUSidebarDataSectionEnablementController _accountStoreDidChange:]
  -[PUSidebarDataSectionEnablementController photoLibrary]
  -[PUSidebarDataSectionEnablementController .cxx_destruct]
  -[PUSidebarDataSectionEnablementController preferencesDidChange]
  -[PUSidebarDataSectionEnablementController dealloc]
  -[PUSidebarDataSectionEnablementController registeredAsPrefObserver]
  -[PUSidebarDataSectionEnablementController _configureEnablementOfSectionManager:enablementItem:setupObservation:]
  -[PUSidebarDataSectionEnablementController _observeDefaultsForManager:enablementItem:]
  -[PUSidebarDataSectionEnablementController _observeAccountsStoreForManager:enablementItem:]
  -[PUSidebarDataSectionEnablementController sectionManagerByItemTypeForAccountStoreChange]
  -[PUSidebarDataSectionEnablementController sectionManagersByItemTypeForDefaultsChange]
  -[PUSidebarDataSectionEnablementController setRegisteredAsPrefObserver:]
  -[PUSidebarDataSectionEnablementController configureEnablementOfSectionManager:enablementItem:]


PUCropPerspectiveView : PUCropTransformedImageView <NUMediaViewDelegate, UIGestureRecognizerDelegate, PUCropGestureHandlerDelegate>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageCropRect
 @property  ^{CGImage=} gainMapImage
 @property  float gainMapValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCropPerspectiveView _invalidateImageLayerModulator]
  -[PUCropPerspectiveView setGainMapImage:]
  -[PUCropPerspectiveView gainMapImage]
  -[PUCropPerspectiveView setOrientation:]
  -[PUCropPerspectiveView setGainMapValue:]
  -[PUCropPerspectiveView setMuted:]
  -[PUCropPerspectiveView isMuted]
  -[PUCropPerspectiveView gainMapValue]
  -[PUCropPerspectiveView setLivePhoto:]
  -[PUCropPerspectiveView setImageSize:]
  -[PUCropPerspectiveView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUCropPerspectiveView handlePinchGesture:]
  -[PUCropPerspectiveView .cxx_destruct]
  -[PUCropPerspectiveView layoutSubviews]
  -[PUCropPerspectiveView imageCropRect]
  -[PUCropPerspectiveView handlePanGesture:]
  -[PUCropPerspectiveView setYawAngle:]
  -[PUCropPerspectiveView initWithFrame:]
  -[PUCropPerspectiveView setImage:]
  -[PUCropPerspectiveView dealloc]
  -[PUCropPerspectiveView cropModel]
  -[PUCropPerspectiveView setImageModulationOptions:]
  -[PUCropPerspectiveView setCanvasFrame:]
  -[PUCropPerspectiveView masterImageSize]
  -[PUCropPerspectiveView setVideoComposition:withSeekTime:]
  -[PUCropPerspectiveView setAutoloopComposition:]
  -[PUCropPerspectiveView _setCropModel:]
  -[PUCropPerspectiveView setNeedsLayerTransformsUpdateAnimated:]
  -[PUCropPerspectiveView setImageCropRectFromViewCropRect:animated:]
  -[PUCropPerspectiveView setModelCropRect:viewCropRect:]
  -[PUCropPerspectiveView updateLayerTransformsAnimated:]
  -[PUCropPerspectiveView _animateValueFromValue:toValue:interpolation:completion:]
  -[PUCropPerspectiveView setStraightenAngle:]
  -[PUCropPerspectiveView setPitchAngle:]
  -[PUCropPerspectiveView _resetCropRect]
  -[PUCropPerspectiveView validateViewCropRectAgainstModelCropRect:]
  -[PUCropPerspectiveView tearDownMediaViewAndLayers]
  -[PUCropPerspectiveView _croppingRect]
  -[PUCropPerspectiveView updateLayerTransformsAnimated:viewCropRect:modelCropRect:]
  -[PUCropPerspectiveView _sizeRotatedIfNeeded:]
  -[PUCropPerspectiveView _viewScaleWithModelCropRect:]
  -[PUCropPerspectiveView _imageOrientationTransformWithoutTranslation]
  -[PUCropPerspectiveView _updateImageModulation]
  -[PUCropPerspectiveView _setupMediaWithComposition:]
  -[PUCropPerspectiveView _zoomScaleForModelCropRect:]
  -[PUCropPerspectiveView imageOrientedViewCropTransform]
  -[PUCropPerspectiveView imageOrientedViewCropRect:]
  -[PUCropPerspectiveView _modelSpaceToViewSpaceTransformWithModelCropRect:currentViewCropRect:]
  -[PUCropPerspectiveView viewOrientedViewCropRect:]
  -[PUCropPerspectiveView imageCropRectForViewRect:]
  -[PUCropPerspectiveView viewCropRectForImageRect:]
  -[PUCropPerspectiveView _fullCropRect]
  -[PUCropPerspectiveView _imageOrientationTransform]
  -[PUCropPerspectiveView mediaViewDidFinishRendering:]
  -[PUCropPerspectiveView willBeginTrackingWithCropGestureHandler:]
  -[PUCropPerspectiveView didBeginTrackingWithCropGestureHandler:]
  -[PUCropPerspectiveView didTrackWithCropGestureHandler:]
  -[PUCropPerspectiveView didEndTrackingWithCropGestureHandler:]
  -[PUCropPerspectiveView _invalidateImageModulationManager]
  -[PUCropPerspectiveView _zoomScaleForCurrentCropRectAndModelRect]
  -[PUCropPerspectiveView imagePointForViewPoint:]
  -[PUCropPerspectiveView _modelCropRectUnorientedInUICoords]


PUEditableMediaProviderImageDataNode : PXRunNode <PUImageDataNode, PUImageInfoNode>
 @property  long long version
 @property  <PUEditableAsset> *asset
 @property  PUEditableMediaProvider *mediaProvider
 @property  NSData *imageData
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *imageDataURL
 @property  NSString *imageDataUTI
 @property  BOOL useEmbeddedPreview
 @property  long long imageExifOrientation

  // instance methods
  -[PUEditableMediaProviderImageDataNode didCancel]
  -[PUEditableMediaProviderImageDataNode .cxx_destruct]
  -[PUEditableMediaProviderImageDataNode imageData]
  -[PUEditableMediaProviderImageDataNode mediaProvider]
  -[PUEditableMediaProviderImageDataNode asset]
  -[PUEditableMediaProviderImageDataNode version]
  -[PUEditableMediaProviderImageDataNode run]
  -[PUEditableMediaProviderImageDataNode imageExifOrientation]
  -[PUEditableMediaProviderImageDataNode _handleLoadedImageData:imageUTI:imageOrientation:info:]
  -[PUEditableMediaProviderImageDataNode imageDataURL]
  -[PUEditableMediaProviderImageDataNode imageDataUTI]
  -[PUEditableMediaProviderImageDataNode useEmbeddedPreview]
  -[PUEditableMediaProviderImageDataNode initWithAsset:mediaProvider:version:]


PUEditableMediaProviderVideoAssetNode : PXRunNode <PUVideoAssetNode>
 @property  long long version
 @property  <PUEditableAsset> *asset
 @property  PUEditableMediaProvider *mediaProvider
 @property  AVAsset *videoAsset
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditableMediaProviderVideoAssetNode .cxx_destruct]
  -[PUEditableMediaProviderVideoAssetNode mediaProvider]
  -[PUEditableMediaProviderVideoAssetNode asset]
  -[PUEditableMediaProviderVideoAssetNode videoAsset]
  -[PUEditableMediaProviderVideoAssetNode version]
  -[PUEditableMediaProviderVideoAssetNode run]
  -[PUEditableMediaProviderVideoAssetNode initWithAsset:mediaProvider:version:]
  -[PUEditableMediaProviderVideoAssetNode _handleDidLoadVideo:info:]


PUEditableMediaProviderVideoURLNode : PXRunNode <PUVideoURLNode>
 @property  long long version
 @property  <PUEditableAsset> *asset
 @property  PUEditableMediaProvider *mediaProvider
 @property  NSURL *videoURL
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditableMediaProviderVideoURLNode .cxx_destruct]
  -[PUEditableMediaProviderVideoURLNode mediaProvider]
  -[PUEditableMediaProviderVideoURLNode asset]
  -[PUEditableMediaProviderVideoURLNode version]
  -[PUEditableMediaProviderVideoURLNode run]
  -[PUEditableMediaProviderVideoURLNode videoURL]
  -[PUEditableMediaProviderVideoURLNode initWithAsset:mediaProvider:version:]
  -[PUEditableMediaProviderVideoURLNode _handleDidLoadVideoURL:info:]


PUEditableMediaProviderAdjustmentDataNode : PXRunNode
 @property  <PUEditableAsset> *asset
 @property  PHAdjustmentData *adjustmentData
 @property  PUEditableMediaProvider *mediaProvider

  // instance methods
  -[PUEditableMediaProviderAdjustmentDataNode didCancel]
  -[PUEditableMediaProviderAdjustmentDataNode .cxx_destruct]
  -[PUEditableMediaProviderAdjustmentDataNode mediaProvider]
  -[PUEditableMediaProviderAdjustmentDataNode asset]
  -[PUEditableMediaProviderAdjustmentDataNode adjustmentData]
  -[PUEditableMediaProviderAdjustmentDataNode run]
  -[PUEditableMediaProviderAdjustmentDataNode initWithAsset:mediaProvider:]
  -[PUEditableMediaProviderAdjustmentDataNode _handleDidLoadAdjustmentData:error:]


PUEditingExtensionHostContext : NSExtensionContext <PUEditingExtensionHost>
 @property  @? contentEditingOutputCommitHandler

  // class methods
  +[PUEditingExtensionHostContext _extensionAuxiliaryVendorProtocol]
  +[PUEditingExtensionHostContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[PUEditingExtensionHostContext .cxx_destruct]
  -[PUEditingExtensionHostContext commitContentEditingOutput:withCompletionHandler:]
  -[PUEditingExtensionHostContext setContentEditingOutputCommitHandler:]
  -[PUEditingExtensionHostContext contentEditingOutputCommitHandler]


PUEditingInitialPayload : NSObject <NSSecureCoding>
 @property  long long mediaType
 @property  unsigned long mediaSubtypes
 @property  long long playbackStyle
 @property  NSDate *creationDate
 @property  CLLocation *location
 @property  PHAdjustmentData *adjustmentData
 @property  long long adjustmentBaseVersion
 @property  NSData *placeholderImageData
 @property  NSData *displaySizeImageData
 @property  NSURL *videoURL
 @property  NSString *videoPathSandboxExtensionToken
 @property  {?=qiIq} livePhotoStillDisplayTime
 @property  NSURL *fullSizeImageURL
 @property  NSString *fullSizeImageURLSandboxExtensionToken
 @property  int fullSizeImageExifOrientation
 @property  NSString *accessibilityDescription
 @property  NSString *uniformTypeIdentifier

  // class methods
  +[PUEditingInitialPayload supportsSecureCoding]

  // instance methods
  -[PUEditingInitialPayload setMediaType:]
  -[PUEditingInitialPayload uniformTypeIdentifier]
  -[PUEditingInitialPayload initWithCoder:]
  -[PUEditingInitialPayload setCreationDate:]
  -[PUEditingInitialPayload videoPathSandboxExtensionToken]
  -[PUEditingInitialPayload fullSizeImageURLSandboxExtensionToken]
  -[PUEditingInitialPayload fullSizeImageExifOrientation]
  -[PUEditingInitialPayload setMediaSubtypes:]
  -[PUEditingInitialPayload .cxx_destruct]
  -[PUEditingInitialPayload mediaSubtypes]
  -[PUEditingInitialPayload accessibilityDescription]
  -[PUEditingInitialPayload setLocation:]
  -[PUEditingInitialPayload setVideoURL:]
  -[PUEditingInitialPayload setPlaybackStyle:]
  -[PUEditingInitialPayload fullSizeImageURL]
  -[PUEditingInitialPayload setFullSizeImageURL:]
  -[PUEditingInitialPayload setUniformTypeIdentifier:]
  -[PUEditingInitialPayload adjustmentBaseVersion]
  -[PUEditingInitialPayload setAccessibilityDescription:]
  -[PUEditingInitialPayload location]
  -[PUEditingInitialPayload playbackStyle]
  -[PUEditingInitialPayload setAdjustmentData:]
  -[PUEditingInitialPayload creationDate]
  -[PUEditingInitialPayload adjustmentData]
  -[PUEditingInitialPayload mediaType]
  -[PUEditingInitialPayload videoURL]
  -[PUEditingInitialPayload placeholderImageData]
  -[PUEditingInitialPayload livePhotoStillDisplayTime]
  -[PUEditingInitialPayload displaySizeImageData]
  -[PUEditingInitialPayload encodeWithCoder:]
  -[PUEditingInitialPayload setAdjustmentBaseVersion:]
  -[PUEditingInitialPayload setPlaceholderImageData:]
  -[PUEditingInitialPayload setDisplaySizeImageData:]
  -[PUEditingInitialPayload setVideoPathSandboxExtensionToken:]
  -[PUEditingInitialPayload setLivePhotoStillDisplayTime:]
  -[PUEditingInitialPayload setFullSizeImageURLSandboxExtensionToken:]
  -[PUEditingInitialPayload setFullSizeImageExifOrientation:]


PUCurationActionAssetBrowserViewController : PUPhotosAlbumViewController
 @property  NSMutableArray *assetContainers
 @property  PUCurationTraitContainer *traitContainer
 @property  PHPhotoLibrary *photoLibrary

  // instance methods
  -[PUCurationActionAssetBrowserViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationActionAssetBrowserViewController setPhotoLibrary:]
  -[PUCurationActionAssetBrowserViewController photoLibrary]
  -[PUCurationActionAssetBrowserViewController .cxx_destruct]
  -[PUCurationActionAssetBrowserViewController viewDidLoad]
  -[PUCurationActionAssetBrowserViewController _update]
  -[PUCurationActionAssetBrowserViewController traitContainer]
  -[PUCurationActionAssetBrowserViewController setTraitContainer:]
  -[PUCurationActionAssetBrowserViewController setTraitContainer:withFaces:detectionTraitsByFaceLocalIdentifier:]
  -[PUCurationActionAssetBrowserViewController setAssetContainers:]
  -[PUCurationActionAssetBrowserViewController assetContainers]
  -[PUCurationActionAssetBrowserViewController _globalHeaderTitle]
  -[PUCurationActionAssetBrowserViewController configureGlobalHeaderView:]
  -[PUCurationActionAssetBrowserViewController globalHeaderHeight]


PUCurationActionAssetContainer : NSObject
 @property  PHAsset *asset
 @property  double score

  // instance methods
  -[PUCurationActionAssetContainer setScore:]
  -[PUCurationActionAssetContainer .cxx_destruct]
  -[PUCurationActionAssetContainer setAsset:]
  -[PUCurationActionAssetContainer asset]
  -[PUCurationActionAssetContainer score]


PUExpandableTileLayoutInfo : PUTileLayoutInfo
 @property  BOOL isExpanded
 @property  {CGSize=dd} expandedSize
 @property  {CGSize=dd} unexpandedSize

  // instance methods
  -[PUExpandableTileLayoutInfo isExpanded]
  -[PUExpandableTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUExpandableTileLayoutInfo clone]
  -[PUExpandableTileLayoutInfo unexpandedSize]
  -[PUExpandableTileLayoutInfo expandedSize]
  -[PUExpandableTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUExpandableTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:isExpanded:expandedSize:unexpandedSize:]


PUExtendedToolbar : UIToolbar <PUToolbarViewModelChangeObserver>
 @property  long long _numberOfNestedChanges
 @property  BOOL _isUpdating
 @property  BOOL _needsUpdateToolbarItems
 @property  BOOL _needsUpdateAccessoryView
 @property  BOOL _needsUpdateAccessoryViewTopOutset
 @property  BOOL _needsUpdateContainedToolbar
 @property  BOOL _needsUpdateAccessoryViewContainer
 @property  NSArray *_toolbarItems
 @property  UIView *_accessoryView
 @property  double _containedToolbarHeight
 @property  double _accessoryViewTopOutset
 @property  double _minimumBackgroundHeight
 @property  UIToolbar *_containedToolbar
 @property  UIView *_accessoryViewContainer
 @property  NSMutableSet *_accessoryViewContainers
 @property  PUToolbarViewModel *toolbarViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUExtendedToolbar _setUpdating:]
  -[PUExtendedToolbar _isUpdating]
  -[PUExtendedToolbar _invalidateToolbarItems]
  -[PUExtendedToolbar hitTest:withEvent:]
  -[PUExtendedToolbar _invalidateAccessoryView]
  -[PUExtendedToolbar _assertInsideUpdate]
  -[PUExtendedToolbar _accessoryViewContainer]
  -[PUExtendedToolbar _updateAccessoryViewIfNeeded]
  -[PUExtendedToolbar _containedToolbar]
  -[PUExtendedToolbar _assertInsideChangeBlock]
  -[PUExtendedToolbar setToolbarViewModel:]
  -[PUExtendedToolbar setBarStyle:]
  -[PUExtendedToolbar _performChanges:]
  -[PUExtendedToolbar _needsUpdateAccessoryViewContainer]
  -[PUExtendedToolbar _invalidateAccessoryViewTopOutset]
  -[PUExtendedToolbar _setNeedsUpdate]
  -[PUExtendedToolbar _setAccessoryView:]
  -[PUExtendedToolbar _needsUpdateAccessoryView]
  -[PUExtendedToolbar .cxx_destruct]
  -[PUExtendedToolbar layoutSubviews]
  -[PUExtendedToolbar tintColorDidChange]
  -[PUExtendedToolbar _setContainedToolbarHeight:]
  -[PUExtendedToolbar setToolbarViewModel:withAnimatorBlock:]
  -[PUExtendedToolbar _minimumBackgroundHeight]
  -[PUExtendedToolbar _accessoryViewContainers]
  -[PUExtendedToolbar _needsUpdateToolbarItems]
  -[PUExtendedToolbar _setNeedsUpdateToolbarItems:]
  -[PUExtendedToolbar _needsUpdateContainedToolbar]
  -[PUExtendedToolbar viewModel:didChange:]
  -[PUExtendedToolbar _numberOfNestedChanges]
  -[PUExtendedToolbar _updateToolbarItemsIfNeeded]
  -[PUExtendedToolbar _accessoryViewTopOutset]
  -[PUExtendedToolbar _invalidateSize]
  -[PUExtendedToolbar _invalidateAccessoryViewContainer]
  -[PUExtendedToolbar _needsUpdate]
  -[PUExtendedToolbar sizeThatFits:]
  -[PUExtendedToolbar _accessoryView]
  -[PUExtendedToolbar _setAccessoryViewContainer:]
  -[PUExtendedToolbar _setNeedsUpdateAccessoryView:]
  -[PUExtendedToolbar _updateIfNeededWithAnimatorBlock:]
  -[PUExtendedToolbar _setNeedsUpdateAccessoryViewTopOutset:]
  -[PUExtendedToolbar toolbarViewModel]
  -[PUExtendedToolbar initWithFrame:]
  -[PUExtendedToolbar _getContainedToolbarFrame:accessoryViewContainerFrame:forBounds:]
  -[PUExtendedToolbar _invalidateContainedToolbar]
  -[PUExtendedToolbar _needsUpdateAccessoryViewTopOutset]
  -[PUExtendedToolbar _setNeedsUpdateContainedToolbar:]
  -[PUExtendedToolbar _setAccessoryViewTopOutset:]
  -[PUExtendedToolbar _setToolbarItems:]
  -[PUExtendedToolbar _performChanges:withAnimatorBlock:]
  -[PUExtendedToolbar _updateAccessoryTopOutsetViewIfNeeded]
  -[PUExtendedToolbar _updateViewsIfNeededWithAnimatorBlock:]
  -[PUExtendedToolbar _shouldStretchDuringCrossfadeTransition]
  -[PUExtendedToolbar _containedToolbarHeight]
  -[PUExtendedToolbar _setNeedsUpdateAccessoryViewContainer:]
  -[PUExtendedToolbar _setMinimumBackgroundHeight:]
  -[PUExtendedToolbar _toolbarItems]
  -[PUExtendedToolbar _setContainedToolbar:]
  -[PUExtendedToolbar _setNumberOfNestedChanges:]


PUFeedBackgroundGradientCell : PUFeedCell
  // class methods
  +[PUFeedBackgroundGradientCell _contentViewClass]

  // instance methods
  -[PUFeedBackgroundGradientCell initWithFrame:]


PUFeedBadgedThumbnailCell : PUFeedCell
 @property  PXBadgedThumbnailView *badgedThumbnailView

  // instance methods
  -[PUFeedBadgedThumbnailCell .cxx_destruct]
  -[PUFeedBadgedThumbnailCell prepareForReuse]
  -[PUFeedBadgedThumbnailCell initWithFrame:]
  -[PUFeedBadgedThumbnailCell badgedThumbnailView]


PUFeedCaptionCell : PUFeedCell
 @property  UIImage *likedImage
 @property  UIImage *notLikedImage
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  PXUIButton *likeButton
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  PXFeedSectionInfo *sectionInfo
 @property  unsigned long captionItemIndex
 @property  BOOL hideCaption
 @property  BOOL isLiked

  // instance methods
  -[PUFeedCaptionCell isLiked]
  -[PUFeedCaptionCell titleLabel]
  -[PUFeedCaptionCell setSubtitleLabel:]
  -[PUFeedCaptionCell setContentInsets:]
  -[PUFeedCaptionCell traitCollectionDidChange:]
  -[PUFeedCaptionCell _updateTitle]
  -[PUFeedCaptionCell contentInsets]
  -[PUFeedCaptionCell .cxx_destruct]
  -[PUFeedCaptionCell setTitleLabel:]
  -[PUFeedCaptionCell layoutSubviews]
  -[PUFeedCaptionCell _updateUI]
  -[PUFeedCaptionCell sizeThatFits:]
  -[PUFeedCaptionCell subtitleLabel]
  -[PUFeedCaptionCell prepareForReuse]
  -[PUFeedCaptionCell _contentSizeCategoryDidChangeNotification:]
  -[PUFeedCaptionCell sectionInfo]
  -[PUFeedCaptionCell initWithFrame:]
  -[PUFeedCaptionCell _updateSubtitle]
  -[PUFeedCaptionCell dealloc]
  -[PUFeedCaptionCell setSectionInfo:]
  -[PUFeedCaptionCell likedImage]
  -[PUFeedCaptionCell notLikedImage]
  -[PUFeedCaptionCell _handleLikeButtonTap:]
  -[PUFeedCaptionCell setCaptionItemIndex:]
  -[PUFeedCaptionCell setHideCaption:]
  -[PUFeedCaptionCell likeButton]
  -[PUFeedCaptionCell _updateLikeButton]
  -[PUFeedCaptionCell _performLayoutInRect:updateSubviewFrames:]
  -[PUFeedCaptionCell captionItemIndex]
  -[PUFeedCaptionCell _shouldHideLikeButton]
  -[PUFeedCaptionCell _setLikeButtonLiked:]
  -[PUFeedCaptionCell hideCaption]
  -[PUFeedCaptionCell setLikeButton:]


PUFeedCell : UICollectionViewCell <UIGestureRecognizerDelegate>
 @property  NSIndexPath *indexPath
 @property  NSString *representedElementKind
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  <PUFeedCellDelegate> *delegate
 @property  BOOL tappable
 @property  {CGPoint=dd} parallaxOffset
 @property  {CGPoint=dd} edgeParallaxOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUFeedCell rectWithAspectRatio:fillingRect:parallaxOffset:edgeParallaxOffset:]

  // instance methods
  -[PUFeedCell _setTapGestureRecognizer:]
  -[PUFeedCell _tapGestureRecognizer]
  -[PUFeedCell _updateTapGestureRecognizer]
  -[PUFeedCell .cxx_destruct]
  -[PUFeedCell setIndexPath:]
  -[PUFeedCell setDelegate:]
  -[PUFeedCell setTappable:]
  -[PUFeedCell indexPath]
  -[PUFeedCell parallaxOffset]
  -[PUFeedCell gestureRecognizerShouldBegin:]
  -[PUFeedCell _handleTap:]
  -[PUFeedCell delegate]
  -[PUFeedCell dealloc]
  -[PUFeedCell isTappable]
  -[PUFeedCell representedElementKind]
  -[PUFeedCell applyLayoutAttributes:]
  -[PUFeedCell setParallaxOffset:]
  -[PUFeedCell setEdgeParallaxOffset:]
  -[PUFeedCell edgeParallaxOffset]
  -[PUFeedCell setRepresentedElementKind:]
  -[PUFeedCell shouldRecognizerTap:]


PUFeedCollectionViewLayout : UICollectionViewLayout
 @property  long long flowDirection
 @property  unsigned int flowDirectionEdge
 @property  {CGSize=dd} sectionReferenceSize
 @property  {CGSize=dd} interTileSpacing
 @property  {UIEdgeInsets=dddd} captionPadding
 @property  {CGSize=dd} noCaptionSpacing
 @property  BOOL shouldDisplayCaptionsBelowBatches
 @property  BOOL shouldApplyParallaxEffect
 @property  long long parallaxModel
 @property  double parallaxFactor
 @property  BOOL shouldFloatThumbnails
 @property  double thumbnailSpacing
 @property  BOOL shouldFloatSectionHeaders
 @property  double sectionHeaderBackgroundHeight
 @property  BOOL shouldFloatWithEase
 @property  BOOL shouldFloatOverShortDistances
 @property  double floatingBottomDecorationHeight
 @property  {UIEdgeInsets=dddd} floatPadding

  // class methods
  +[PUFeedCollectionViewLayout layoutAttributesClass]

  // instance methods
  -[PUFeedCollectionViewLayout _delegate]
  -[PUFeedCollectionViewLayout _getSizeForVerticalFlowDirection:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[PUFeedCollectionViewLayout parallaxFactor]
  -[PUFeedCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUFeedCollectionViewLayout _getSizeForHorizontalFlowDirection:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[PUFeedCollectionViewLayout invalidationContextForBoundsChange:]
  -[PUFeedCollectionViewLayout prepareLayout]
  -[PUFeedCollectionViewLayout setParallaxFactor:]
  -[PUFeedCollectionViewLayout collectionViewContentSize]
  -[PUFeedCollectionViewLayout .cxx_destruct]
  -[PUFeedCollectionViewLayout parallaxModel]
  -[PUFeedCollectionViewLayout init]
  -[PUFeedCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUFeedCollectionViewLayout floatPadding]
  -[PUFeedCollectionViewLayout flowDirection]
  -[PUFeedCollectionViewLayout shouldFloatSectionHeaders]
  -[PUFeedCollectionViewLayout shouldFloatThumbnails]
  -[PUFeedCollectionViewLayout floatingBottomDecorationHeight]
  -[PUFeedCollectionViewLayout sectionHeaderBackgroundHeight]
  -[PUFeedCollectionViewLayout _updateSectionLayoutInfosIfNecessary]
  -[PUFeedCollectionViewLayout _updateGlobalLayoutInfoWithOptions:sectionsWithUpdatedGroupIDs:]
  -[PUFeedCollectionViewLayout _updateLayoutInfoForSection:ignoreSizeChange:]
  -[PUFeedCollectionViewLayout _adjustFloatingLayoutAttributes:inSection:]
  -[PUFeedCollectionViewLayout _enumerateSectionsInRect:withBlock:]
  -[PUFeedCollectionViewLayout enumerateImageElementsInRect:usingBlock:]
  -[PUFeedCollectionViewLayout _getSize:headerSize:footerSize:fixedLayoutAttributes:tileLayoutAttributes:floatingLayoutAttributes:type:forSection:isJoined:]
  -[PUFeedCollectionViewLayout _sectionAtIndex:sizeDidChangeFrom:to:]
  -[PUFeedCollectionViewLayout shouldFloatOverShortDistances]
  -[PUFeedCollectionViewLayout shouldFloatWithEase]
  -[PUFeedCollectionViewLayout sectionsJoinedWithSection:]
  -[PUFeedCollectionViewLayout interTileSpacing]
  -[PUFeedCollectionViewLayout captionPadding]
  -[PUFeedCollectionViewLayout noCaptionSpacing]
  -[PUFeedCollectionViewLayout shouldDisplayCaptionsBelowBatches]
  -[PUFeedCollectionViewLayout thumbnailSpacing]
  -[PUFeedCollectionViewLayout frameForSection:]
  -[PUFeedCollectionViewLayout flowDirectionEdge]
  -[PUFeedCollectionViewLayout numberOfTilesOmittedInSection:]
  -[PUFeedCollectionViewLayout indexPathForImageElementAtPoint:]
  -[PUFeedCollectionViewLayout frameForTileAtIndexPath:]
  -[PUFeedCollectionViewLayout updateCollectionViewWithDeletedSections:insertedSections:updatedSections:]
  -[PUFeedCollectionViewLayout setFlowDirection:]
  -[PUFeedCollectionViewLayout setThumbnailSpacing:]
  -[PUFeedCollectionViewLayout setInterTileSpacing:]
  -[PUFeedCollectionViewLayout setCaptionPadding:]
  -[PUFeedCollectionViewLayout setNoCaptionSpacing:]
  -[PUFeedCollectionViewLayout setShouldDisplayCaptionsBelowBatches:]
  -[PUFeedCollectionViewLayout setShouldFloatThumbnails:]
  -[PUFeedCollectionViewLayout sectionReferenceSize]
  -[PUFeedCollectionViewLayout setSectionReferenceSize:]
  -[PUFeedCollectionViewLayout invalidateLayoutAndCache]
  -[PUFeedCollectionViewLayout setShouldFloatSectionHeaders:]
  -[PUFeedCollectionViewLayout setSectionHeaderBackgroundHeight:]
  -[PUFeedCollectionViewLayout setFloatPadding:]
  -[PUFeedCollectionViewLayout setShouldFloatWithEase:]
  -[PUFeedCollectionViewLayout setShouldFloatOverShortDistances:]
  -[PUFeedCollectionViewLayout setFloatingBottomDecorationHeight:]
  -[PUFeedCollectionViewLayout setParallaxModel:]
  -[PUFeedCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUFeedCollectionViewLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUFeedCollectionViewLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[PUFeedCollectionViewLayout shouldApplyParallaxEffect]
  -[PUFeedCollectionViewLayout _setOrigin:forSectionLayoutInfo:]
  -[PUFeedCollectionViewLayout _parallaxComputer]
  -[PUFeedCollectionViewLayout _updateParallaxForLayoutAttributes:]
  -[PUFeedCollectionViewLayout _updateParallaxComputer]
  -[PUFeedCollectionViewLayout _layoutVerticalSectionHeaderIfNecessary:fixedLayoutAttributes:floatingLayoutAttributes:section:]
  -[PUFeedCollectionViewLayout _layoutTilesAndGetNumberOfTilesOmittedWithCollectionView:tileLayoutAttributes:fixedLayoutAttributes:origin:size:sectionContentSize:itemCount:section:]
  -[PUFeedCollectionViewLayout setShouldApplyParallaxEffect:]


PUFeedCollectionViewSectionLayoutInfo : NSObject
 @property  {CGPoint=dd} origin
 @property  {CGSize=dd} size
 @property  {CGSize=dd} headerSize
 @property  {CGSize=dd} footerSize
 @property  {UIEdgeInsets=dddd} margins
 @property  NSArray *fixedLayoutAttributes
 @property  NSArray *tileLayoutAttributes
 @property  NSArray *floatingLayoutAttributes
 @property  BOOL hidden
 @property  long long sectionType
 @property  long long previousVisibleSection
 @property  long long nextVisibleSection
 @property  long long firstJoinedSection
 @property  long long lastJoinedSection
 @property  id groupID
 @property  long long numberOfTilesOmitted
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[PUFeedCollectionViewSectionLayoutInfo groupID]
  -[PUFeedCollectionViewSectionLayoutInfo setGroupID:]
  -[PUFeedCollectionViewSectionLayoutInfo margins]
  -[PUFeedCollectionViewSectionLayoutInfo setMargins:]
  -[PUFeedCollectionViewSectionLayoutInfo origin]
  -[PUFeedCollectionViewSectionLayoutInfo setOrigin:]
  -[PUFeedCollectionViewSectionLayoutInfo .cxx_destruct]
  -[PUFeedCollectionViewSectionLayoutInfo isHidden]
  -[PUFeedCollectionViewSectionLayoutInfo setSectionType:]
  -[PUFeedCollectionViewSectionLayoutInfo init]
  -[PUFeedCollectionViewSectionLayoutInfo setSize:]
  -[PUFeedCollectionViewSectionLayoutInfo headerSize]
  -[PUFeedCollectionViewSectionLayoutInfo footerSize]
  -[PUFeedCollectionViewSectionLayoutInfo setHeaderSize:]
  -[PUFeedCollectionViewSectionLayoutInfo setFooterSize:]
  -[PUFeedCollectionViewSectionLayoutInfo floatingLayoutAttributes]
  -[PUFeedCollectionViewSectionLayoutInfo lastJoinedSection]
  -[PUFeedCollectionViewSectionLayoutInfo fixedLayoutAttributes]
  -[PUFeedCollectionViewSectionLayoutInfo firstJoinedSection]
  -[PUFeedCollectionViewSectionLayoutInfo numberOfTilesOmitted]
  -[PUFeedCollectionViewSectionLayoutInfo tileLayoutAttributes]
  -[PUFeedCollectionViewSectionLayoutInfo setFirstJoinedSection:]
  -[PUFeedCollectionViewSectionLayoutInfo setLastJoinedSection:]
  -[PUFeedCollectionViewSectionLayoutInfo setNextVisibleSection:]
  -[PUFeedCollectionViewSectionLayoutInfo setPreviousVisibleSection:]
  -[PUFeedCollectionViewSectionLayoutInfo previousVisibleSection]
  -[PUFeedCollectionViewSectionLayoutInfo setFixedLayoutAttributes:]
  -[PUFeedCollectionViewSectionLayoutInfo setTileLayoutAttributes:]
  -[PUFeedCollectionViewSectionLayoutInfo setFloatingLayoutAttributes:]
  -[PUFeedCollectionViewSectionLayoutInfo nextVisibleSection]
  -[PUFeedCollectionViewSectionLayoutInfo frame]
  -[PUFeedCollectionViewSectionLayoutInfo setNumberOfTilesOmitted:]
  -[PUFeedCollectionViewSectionLayoutInfo size]
  -[PUFeedCollectionViewSectionLayoutInfo setHidden:]
  -[PUFeedCollectionViewSectionLayoutInfo sectionType]


PUFeedImageCell : PUFeedCell
 @property  PXVideoPlayerView *videoPlayerView
 @property  ISWrappedAVPlayer *videoPlayer
 @property  ISWrappedAVAudioSession *audioSession
 @property  UIImageView *_imageView
 @property  long long _imageTag
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _imageFrame
 @property  UIView<PXVideoOverlayButton> *_overlayPlayButton
 @property  UIImageView *_overlayPlayButtonBackgroundImageView
 @property  PUImageViewExtraction *_overlayPlayButtonBackgroundExtraction
 @property  BOOL _shouldUpdateOverlayPlayButtonBackground
 @property  BOOL _shouldHideOverlayPlayButton
 @property  UIImageView *_centerOverlayImageView
 @property  BOOL _shouldHideCenterOverlayImageView
 @property  UIButton *_commentButton
 @property  BOOL _shouldHideCommentButton
 @property  BOOL shouldHideLikeBadge
 @property  PXUIAssetBadgeView *_photoIrisBadgeView
 @property  PXRoundedCornerOverlayView *roundedCornerOverlayView
 @property  UIImageView *likeBadgeView
 @property  UIImage *image
 @property  AVPlayerItem *playerItem
 @property  int playerItemRequestID
 @property  long long imageContentMode
 @property  BOOL imageHidden
 @property  {CGSize=dd} maximumImageSize
 @property  long long imageAlignment
 @property  long long overlayOptions
 @property  long long commentCount
 @property  double cornerRadius

  // class methods
  +[PUFeedImageCell _contentViewClass]
  +[PUFeedImageCell preloadResources]
  +[PUFeedImageCell _videoOverlayButtonStyle]

  // instance methods
  -[PUFeedImageCell maximumImageSize]
  -[PUFeedImageCell setMaximumImageSize:]
  -[PUFeedImageCell _imageView]
  -[PUFeedImageCell image]
  -[PUFeedImageCell .cxx_destruct]
  -[PUFeedImageCell focusEffect]
  -[PUFeedImageCell playerItem]
  -[PUFeedImageCell layoutSubviews]
  -[PUFeedImageCell videoPlayer]
  -[PUFeedImageCell setPlayerItem:]
  -[PUFeedImageCell setCornerRadius:]
  -[PUFeedImageCell setRoundedCornerOverlayView:]
  -[PUFeedImageCell _imageFrame]
  -[PUFeedImageCell sizeThatFits:]
  -[PUFeedImageCell prepareForReuse]
  -[PUFeedImageCell setAudioSession:]
  -[PUFeedImageCell setImageHidden:]
  -[PUFeedImageCell setImageContentMode:]
  -[PUFeedImageCell _updateRoundedCornersOverlayView]
  -[PUFeedImageCell initWithFrame:]
  -[PUFeedImageCell cornerRadius]
  -[PUFeedImageCell setImage:]
  -[PUFeedImageCell roundedCornerOverlayView]
  -[PUFeedImageCell _setImageView:]
  -[PUFeedImageCell commentCount]
  -[PUFeedImageCell _imageTag]
  -[PUFeedImageCell imageContentMode]
  -[PUFeedImageCell audioSession]
  -[PUFeedImageCell setParallaxOffset:]
  -[PUFeedImageCell _setImageTag:]
  -[PUFeedImageCell _overlayPlayButtonBackgroundExtraction]
  -[PUFeedImageCell _layoutImageView]
  -[PUFeedImageCell setImage:withTag:]
  -[PUFeedImageCell videoPlayerView]
  -[PUFeedImageCell _invalidateOverlayPlayButtonBackground]
  -[PUFeedImageCell _updateVideoViewContentMode]
  -[PUFeedImageCell _updateVideoPlayerContents]
  -[PUFeedImageCell _updateOverlays]
  -[PUFeedImageCell _updateCommentButton]
  -[PUFeedImageCell _overlayPlayButton]
  -[PUFeedImageCell _centerOverlayImageView]
  -[PUFeedImageCell _commentButton]
  -[PUFeedImageCell likeBadgeView]
  -[PUFeedImageCell imageAlignment]
  -[PUFeedImageCell _setImageFrame:]
  -[PUFeedImageCell isImageHidden]
  -[PUFeedImageCell _shouldHideOverlayPlayButton]
  -[PUFeedImageCell _shouldHideCenterOverlayImageView]
  -[PUFeedImageCell _shouldHideCommentButton]
  -[PUFeedImageCell shouldHideLikeBadge]
  -[PUFeedImageCell _overlayPlayButtonBackgroundImageView]
  -[PUFeedImageCell _shouldUpdateOverlayPlayButtonBackground]
  -[PUFeedImageCell _setShouldUpdateOverlayPlayButtonBackground:]
  -[PUFeedImageCell _setOverlayPlayButtonBackgroundExtraction:]
  -[PUFeedImageCell _photoIrisBadgeView]
  -[PUFeedImageCell overlayOptions]
  -[PUFeedImageCell _handlePlayButton:]
  -[PUFeedImageCell _setOverlayPlayButton:]
  -[PUFeedImageCell _setOverlayPlayButtonBackgroundImageView:]
  -[PUFeedImageCell _setShouldHideOverlayPlayButton:]
  -[PUFeedImageCell _setCenterOverlayImageView:]
  -[PUFeedImageCell _setShouldHideCenterOverlayImageView:]
  -[PUFeedImageCell _setPhotoIrisBadgeView:]
  -[PUFeedImageCell setLikeBadgeView:]
  -[PUFeedImageCell _handleCommentButton:]
  -[PUFeedImageCell _setCommentButton:]
  -[PUFeedImageCell _setShouldHideCommentButton:]
  -[PUFeedImageCell _imageCellDelegate]
  -[PUFeedImageCell setImageAlignment:]
  -[PUFeedImageCell setOverlayOptions:]
  -[PUFeedImageCell setCommentCount:]
  -[PUFeedImageCell playerItemRequestID]
  -[PUFeedImageCell setPlayerItemRequestID:]
  -[PUFeedImageCell setShouldHideLikeBadge:]


PUFeedInvitationCell : PUFeedCell <PXSharedAlbumInvitationViewDelegate>
 @property  PXSharedAlbumHeaderView *headerView
 @property  PXSharedAlbumInvitationView *invitationView
 @property  UILabel *dateLabel
 @property  PXFeedInvitationSectionInfo *invitationSectionInfo
 @property  BOOL useInPopover
 @property  BOOL showHeader
 @property  BOOL showFooter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFeedInvitationCell _delegate]
  -[PUFeedInvitationCell setDateLabel:]
  -[PUFeedInvitationCell .cxx_destruct]
  -[PUFeedInvitationCell layoutSubviews]
  -[PUFeedInvitationCell tintColorDidChange]
  -[PUFeedInvitationCell _updateColors]
  -[PUFeedInvitationCell _updateHeaderView]
  -[PUFeedInvitationCell _updateDate]
  -[PUFeedInvitationCell dateLabel]
  -[PUFeedInvitationCell setHeaderView:]
  -[PUFeedInvitationCell sizeThatFits:]
  -[PUFeedInvitationCell prepareForReuse]
  -[PUFeedInvitationCell _contentSizeCategoryDidChangeNotification:]
  -[PUFeedInvitationCell headerView]
  -[PUFeedInvitationCell initWithFrame:]
  -[PUFeedInvitationCell _updateFooter]
  -[PUFeedInvitationCell showFooter]
  -[PUFeedInvitationCell setShowFooter:]
  -[PUFeedInvitationCell _performLayoutInRect:updateSubviewFrames:]
  -[PUFeedInvitationCell setUseInPopover:]
  -[PUFeedInvitationCell setShowHeader:]
  -[PUFeedInvitationCell _updateInvitationView]
  -[PUFeedInvitationCell useInPopover]
  -[PUFeedInvitationCell invitationView]
  -[PUFeedInvitationCell showHeader]
  -[PUFeedInvitationCell invitationSectionInfo]
  -[PUFeedInvitationCell setInvitationSectionInfo:]
  -[PUFeedInvitationCell sharedAlbumInvitationView:didAccept:]
  -[PUFeedInvitationCell sharedAlbumInvitationViewDidReportAsJunk:]
  -[PUFeedInvitationCell sharedAlbumInvitationView:presentViewController:]
  -[PUFeedInvitationCell setInvitationView:]


PUSharingHeaderController : NSObject
 @property  LPLinkMetadata *linkMetadata
 @property  <PUSharingHeaderDataProvider> *dataProvider

  // class methods
  +[PUSharingHeaderController new]

  // instance methods
  -[PUSharingHeaderController updateIfNeeded]
  -[PUSharingHeaderController .cxx_destruct]
  -[PUSharingHeaderController initWithDataProvider:]
  -[PUSharingHeaderController init]
  -[PUSharingHeaderController linkMetadata]
  -[PUSharingHeaderController setLinkMetadata:]
  -[PUSharingHeaderController dataProvider]
  -[PUSharingHeaderController _sharingHeaderStatus]
  -[PUSharingHeaderController _linkPresentationImageForPerson:]
  -[PUSharingHeaderController _linkPresentationImageForAsset:]


PHPickerFilter : NSObject <NSCopying>
 @property  <PUPickerFilter> *_puPickerFilter

  // class methods
  +[PHPickerFilter imagesFilter]
  +[PHPickerFilter videosFilter]
  +[PHPickerFilter livePhotosFilter]
  +[PHPickerFilter panoramasFilter]
  +[PHPickerFilter screenshotsFilter]
  +[PHPickerFilter screenRecordingsFilter]
  +[PHPickerFilter slomoVideosFilter]
  +[PHPickerFilter timelapseVideosFilter]
  +[PHPickerFilter _depthEffectPhotosFilter]
  +[PHPickerFilter playbackStyleFilter:]
  +[PHPickerFilter anyFilterMatchingSubfilters:]
  +[PHPickerFilter allFilterMatchingSubfilters:]
  +[PHPickerFilter notFilterOfSubfilter:]

  // instance methods
  -[PHPickerFilter .cxx_destruct]
  -[PHPickerFilter init]
  -[PHPickerFilter isEqual:]
  -[PHPickerFilter _puPickerFilter]
  -[PHPickerFilter copyWithZone:]
  -[PHPickerFilter _initWithPUPickerFilter:]


PHPickerConfiguration : NSObject <NSCopying>
 @property  BOOL _onlyReturnsIdentifiers
 @property  BOOL _allowsContinuousSelection
 @property  BOOL _usesEmbeddedMessagesLayout
 @property  PHPhotoLibrary *photoLibrary
 @property  long long preferredAssetRepresentationMode
 @property  long long selection
 @property  long long selectionLimit
 @property  PHPickerFilter *filter
 @property  NSArray *preselectedAssetIdentifiers

  // instance methods
  -[PHPickerConfiguration initWithPhotoLibrary:]
  -[PHPickerConfiguration setSelection:]
  -[PHPickerConfiguration setFilter:]
  -[PHPickerConfiguration selection]
  -[PHPickerConfiguration photoLibrary]
  -[PHPickerConfiguration .cxx_destruct]
  -[PHPickerConfiguration selectionLimit]
  -[PHPickerConfiguration init]
  -[PHPickerConfiguration isEqual:]
  -[PHPickerConfiguration preferredAssetRepresentationMode]
  -[PHPickerConfiguration _onlyReturnsIdentifiers]
  -[PHPickerConfiguration _allowsContinuousSelection]
  -[PHPickerConfiguration _usesEmbeddedMessagesLayout]
  -[PHPickerConfiguration filter]
  -[PHPickerConfiguration copyWithZone:]
  -[PHPickerConfiguration preselectedAssetIdentifiers]
  -[PHPickerConfiguration initWithPhotoLibraryAndOnlyReturnsIdentifiers:]
  -[PHPickerConfiguration setPreferredAssetRepresentationMode:]
  -[PHPickerConfiguration setSelectionLimit:]
  -[PHPickerConfiguration setPreselectedAssetIdentifiers:]
  -[PHPickerConfiguration _setAllowsContinuousSelection:]
  -[PHPickerConfiguration _setUsesEmbeddedMessagesLayout:]
  -[PHPickerConfiguration _setOverlayFlag:]


PHPickerResult : NSObject
 @property  NSItemProvider *itemProvider
 @property  NSString *assetIdentifier

  // instance methods
  -[PHPickerResult itemProvider]
  -[PHPickerResult .cxx_destruct]
  -[PHPickerResult init]
  -[PHPickerResult isEqual:]
  -[PHPickerResult assetIdentifier]
  -[PHPickerResult _initWithItemProvider:assetIdentifier:]


PHPickerViewController : UIViewController <_UIRemoteViewControllerContaining, _PUPickerUnavailableUIViewControllerDelegate, _PUPickerRemoteUIViewControllerHostInterface>
 @property  NSExtension *_extension
 @property  <NSCopying> *_extensionRequestIdentifier
 @property  PUPickerRemoteUIViewController *_remoteUIViewController
 @property  id _overlayStorage
 @property  PHPickerConfiguration *configuration
 @property  <PHPickerViewControllerDelegate> *delegate
 @property  _UIRemoteViewController *_containedRemoteViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PHPickerViewController _setup:]
  -[PHPickerViewController _extension]
  -[PHPickerViewController initWithCoder:]
  -[PHPickerViewController configuration]
  -[PHPickerViewController .cxx_destruct]
  -[PHPickerViewController _overlayStorage]
  -[PHPickerViewController setDelegate:]
  -[PHPickerViewController initWithNibName:bundle:]
  -[PHPickerViewController init]
  -[PHPickerViewController _deselectAssetsWithIdentifiers:]
  -[PHPickerViewController _moveAssetWithIdentifier:afterIdentifier:]
  -[PHPickerViewController initWithConfiguration:]
  -[PHPickerViewController delegate]
  -[PHPickerViewController _pickerUnavailableUIViewControllerCancelButtonTapped:]
  -[PHPickerViewController _pickerUnavailableUIViewControllerRetryButtonTapped:]
  -[PHPickerViewController _containedRemoteViewController]
  -[PHPickerViewController dealloc]
  -[PHPickerViewController _extensionRequestIdentifier]
  -[PHPickerViewController _pickerDidFinishPicking:]
  -[PHPickerViewController _addOrReplaceChildUnavailableUIViewController:error:]
  -[PHPickerViewController _cancelExistingExtensionRequestIfPossible]
  -[PHPickerViewController _remoteUIViewController]
  -[PHPickerViewController _setupExtension:error:completionHandler:]
  -[PHPickerViewController _setupRemoteViewControllerForExtension:withExtensionItem:completionHandler:]
  -[PHPickerViewController _handleRemoteViewControllerConnection:extension:extensionRequestIdentifier:error:completionHandler:]
  -[PHPickerViewController _setExtension:]
  -[PHPickerViewController _setExtensionRequestIdentifier:]
  -[PHPickerViewController _setRemoteUIViewController:]
  -[PHPickerViewController _setOverlayStorage:]


PUFeedPlayerCell : PUFeedCell
 @property  BOOL _isPerformingIrisPlayerChanges
 @property  BOOL _needsUpdatePlayerItem
 @property  BOOL _needsUpdateVitality
 @property  ISLivePhotoPlayer *_player
 @property  ISLivePhotoUIView *_playerView
 @property  UIButton *_commentButton
 @property  BOOL _shouldHideCommentButton
 @property  long long commentCount
 @property  int currentImageRequestID
 @property  BOOL playerHidden
 @property  AVAsset *videoAsset
 @property  UIImage *photoImage
 @property  BOOL isPhotoImageDegraded
 @property  double photoTime
 @property  UICollectionView *containingCollectionView

  // class methods
  +[PUFeedPlayerCell _contentViewClass]

  // instance methods
  -[PUFeedPlayerCell _player]
  -[PUFeedPlayerCell .cxx_destruct]
  -[PUFeedPlayerCell layoutSubviews]
  -[PUFeedPlayerCell videoAsset]
  -[PUFeedPlayerCell photoTime]
  -[PUFeedPlayerCell prepareForReuse]
  -[PUFeedPlayerCell initWithFrame:]
  -[PUFeedPlayerCell _playerView]
  -[PUFeedPlayerCell setPhotoImage:]
  -[PUFeedPlayerCell commentCount]
  -[PUFeedPlayerCell photoImage]
  -[PUFeedPlayerCell setParallaxOffset:]
  -[PUFeedPlayerCell _updateCommentButton]
  -[PUFeedPlayerCell _commentButton]
  -[PUFeedPlayerCell _shouldHideCommentButton]
  -[PUFeedPlayerCell _handleCommentButton:]
  -[PUFeedPlayerCell _setCommentButton:]
  -[PUFeedPlayerCell _setShouldHideCommentButton:]
  -[PUFeedPlayerCell setCommentCount:]
  -[PUFeedPlayerCell setCurrentImageRequestID:]
  -[PUFeedPlayerCell isPlayerHidden]
  -[PUFeedPlayerCell _isPerformingIrisPlayerChanges]
  -[PUFeedPlayerCell _setPerformingIrisPlayerChanges:]
  -[PUFeedPlayerCell _updateIrisIfNeeded]
  -[PUFeedPlayerCell _needsUpdateIris]
  -[PUFeedPlayerCell _updatePlayerItemIfNeeded]
  -[PUFeedPlayerCell _updateVitalityIfNeeded]
  -[PUFeedPlayerCell _needsUpdatePlayerItem]
  -[PUFeedPlayerCell _needsUpdateVitality]
  -[PUFeedPlayerCell _assertInsideIrisPlayerChanges]
  -[PUFeedPlayerCell _setNeedsUpdatePlayerItem:]
  -[PUFeedPlayerCell _setNeedsUpdateIris]
  -[PUFeedPlayerCell isPhotoImageDegraded]
  -[PUFeedPlayerCell _setNeedsUpdateVitality:]
  -[PUFeedPlayerCell containingCollectionView]
  -[PUFeedPlayerCell _playerCellDelegate]
  -[PUFeedPlayerCell _invalidateVitality]
  -[PUFeedPlayerCell _invalidatePlayerItem]
  -[PUFeedPlayerCell _layoutPlayerView]
  -[PUFeedPlayerCell setVideoAsset:]
  -[PUFeedPlayerCell setPhotoImageDegraded:]
  -[PUFeedPlayerCell setPhotoTime:]
  -[PUFeedPlayerCell setPlayerHidden:]
  -[PUFeedPlayerCell performIrisPlayerChanges:]
  -[PUFeedPlayerCell setContainingCollectionView:]
  -[PUFeedPlayerCell currentImageRequestID]


PUFeedSettings : PXSettings
 @property  BOOL useJPEGImageFormats
 @property  double smallTileSizeTolerance
 @property  BOOL shouldUseJPEGFastFormatForMediumTiles
 @property  BOOL shouldUseJPEGFastFormatForLargeTiles
 @property  BOOL useQualityImageFormats
 @property  long long maximumScrollRegimeForQualityImageFormats
 @property  double speedometerMediumUpperThreshold
 @property  double speedometerMediumLowerThreshold
 @property  double speedometerFastUpperThreshold
 @property  double speedometerFastLowerThreshold
 @property  BOOL useSpeedometerFeedback
 @property  double preheatingMinimumScrollFactor
 @property  double slowScrollPreheatingWindowSize
 @property  double mediumScrollPreheatingWindowSize
 @property  double fastScrollPreheatingWindowSize
 @property  BOOL shouldPreheatCoreData
 @property  BOOL shouldPreheatAssets
 @property  BOOL shouldPreheatComments
 @property  BOOL forceDefaultPreheatManager
 @property  long long feedContent
 @property  long long initialWindowSize
 @property  long long testInitialWindowSize
 @property  BOOL ignoresCaptions
 @property  BOOL parallaxEnabled
 @property  long long parallaxModel
 @property  double parallaxFactor
 @property  BOOL allowsInfiniteScrolling
 @property  long long infiniteScrollingWindowSizeIncrement
 @property  BOOL forceAllItemsAsVideo
 @property  BOOL forceLivePhotoBadges
 @property  BOOL simulateSharedStreamsEnabled
 @property  BOOL vitalityEnabled
 @property  BOOL showGroupIDHeaders
 @property  BOOL loopsEnabled

  // class methods
  +[PUFeedSettings sharedInstance]
  +[PUFeedSettings settingsControllerModule]
  +[PUFeedSettings _localizedStrings]

  // instance methods
  -[PUFeedSettings setInitialWindowSize:]
  -[PUFeedSettings initialWindowSize]
  -[PUFeedSettings allowsInfiniteScrolling]
  -[PUFeedSettings ignoresCaptions]
  -[PUFeedSettings speedometerMediumLowerThreshold]
  -[PUFeedSettings setSpeedometerFastUpperThreshold:]
  -[PUFeedSettings parentSettings]
  -[PUFeedSettings parallaxFactor]
  -[PUFeedSettings setVitalityEnabled:]
  -[PUFeedSettings feedContent]
  -[PUFeedSettings setForceAllItemsAsVideo:]
  -[PUFeedSettings setShowGroupIDHeaders:]
  -[PUFeedSettings smallTileSizeTolerance]
  -[PUFeedSettings setShouldPreheatAssets:]
  -[PUFeedSettings setIgnoresCaptions:]
  -[PUFeedSettings shouldUseJPEGFastFormatForMediumTiles]
  -[PUFeedSettings testInitialWindowSize]
  -[PUFeedSettings preheatingMinimumScrollFactor]
  -[PUFeedSettings setShouldUseJPEGFastFormatForLargeTiles:]
  -[PUFeedSettings setParallaxFactor:]
  -[PUFeedSettings setSlowScrollPreheatingWindowSize:]
  -[PUFeedSettings setShouldPreheatCoreData:]
  -[PUFeedSettings speedometerFastUpperThreshold]
  -[PUFeedSettings parallaxModel]
  -[PUFeedSettings mediumScrollPreheatingWindowSize]
  -[PUFeedSettings setShouldPreheatComments:]
  -[PUFeedSettings setDefaultValues]
  -[PUFeedSettings parallaxEnabled]
  -[PUFeedSettings speedometerMediumUpperThreshold]
  -[PUFeedSettings setSimulateSharedStreamsEnabled:]
  -[PUFeedSettings setSpeedometerMediumLowerThreshold:]
  -[PUFeedSettings useJPEGImageFormats]
  -[PUFeedSettings fastScrollPreheatingWindowSize]
  -[PUFeedSettings forceLivePhotoBadges]
  -[PUFeedSettings shouldPreheatAssets]
  -[PUFeedSettings setMaximumScrollRegimeForQualityImageFormats:]
  -[PUFeedSettings useQualityImageFormats]
  -[PUFeedSettings shouldPreheatCoreData]
  -[PUFeedSettings showGroupIDHeaders]
  -[PUFeedSettings setParallaxEnabled:]
  -[PUFeedSettings setLoopsEnabled:]
  -[PUFeedSettings setMediumScrollPreheatingWindowSize:]
  -[PUFeedSettings setUseSpeedometerFeedback:]
  -[PUFeedSettings maximumScrollRegimeForQualityImageFormats]
  -[PUFeedSettings setSmallTileSizeTolerance:]
  -[PUFeedSettings forceDefaultPreheatManager]
  -[PUFeedSettings setShouldUseJPEGFastFormatForMediumTiles:]
  -[PUFeedSettings speedometerFastLowerThreshold]
  -[PUFeedSettings setInfiniteScrollingWindowSizeIncrement:]
  -[PUFeedSettings slowScrollPreheatingWindowSize]
  -[PUFeedSettings vitalityEnabled]
  -[PUFeedSettings setAllowsInfiniteScrolling:]
  -[PUFeedSettings setUseQualityImageFormats:]
  -[PUFeedSettings setTestInitialWindowSize:]
  -[PUFeedSettings setSpeedometerMediumUpperThreshold:]
  -[PUFeedSettings setForceDefaultPreheatManager:]
  -[PUFeedSettings shouldUseJPEGFastFormatForLargeTiles]
  -[PUFeedSettings useSpeedometerFeedback]
  -[PUFeedSettings setPreheatingMinimumScrollFactor:]
  -[PUFeedSettings setForceLivePhotoBadges:]
  -[PUFeedSettings infiniteScrollingWindowSizeIncrement]
  -[PUFeedSettings setParallaxModel:]
  -[PUFeedSettings setSpeedometerFastLowerThreshold:]
  -[PUFeedSettings setUseJPEGImageFormats:]
  -[PUFeedSettings simulateSharedStreamsEnabled]
  -[PUFeedSettings setFastScrollPreheatingWindowSize:]
  -[PUFeedSettings setFeedContent:]
  -[PUFeedSettings loopsEnabled]
  -[PUFeedSettings forceAllItemsAsVideo]
  -[PUFeedSettings shouldPreheatComments]


PUFeedStackCell : PUFeedCell
 @property  PUStackView *stackView
 @property  {UIOffset=dd} stackOffset

  // instance methods
  -[PUFeedStackCell stackView]
  -[PUFeedStackCell setStackOffset:]
  -[PUFeedStackCell stackOffset]
  -[PUFeedStackCell .cxx_destruct]
  -[PUFeedStackCell setStackView:]
  -[PUFeedStackCell layoutSubviews]
  -[PUFeedStackCell prepareForReuse]
  -[PUFeedStackCell initWithFrame:]


PUFeedTextCell : PUFeedCell
 @property  UILabel *_label
 @property  UILabel *_detailLabel
 @property  UIImageView *_iconImageView
 @property  UIButton *_button
 @property  BOOL shouldUseAccessibilityLayout
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSAttributedString *attributedText
 @property  long long numberOfTextLines
 @property  double textDetailTextSpacing
 @property  NSAttributedString *attributedDetailText
 @property  long long numberOfDetailTextLines
 @property  long long textAlignment
 @property  UIImage *iconImage
 @property  long long iconLocation
 @property  {UIEdgeInsets=dddd} iconPadding
 @property  {UIOffset=dd} iconOffset
 @property  long long tappableArea
 @property  long long buttonType
 @property  long long buttonSize
 @property  long long buttonHorizontalAlignment
 @property  double buttonPadding
 @property  BOOL shouldUseOpaqueBackground

  // instance methods
  -[PUFeedTextCell _contentSizeCategoryDidChange:]
  -[PUFeedTextCell iconImage]
  -[PUFeedTextCell _delegate]
  -[PUFeedTextCell setButtonSize:]
  -[PUFeedTextCell setAttributedText:]
  -[PUFeedTextCell _detailLabel]
  -[PUFeedTextCell attributedText]
  -[PUFeedTextCell _label]
  -[PUFeedTextCell _button]
  -[PUFeedTextCell buttonSize]
  -[PUFeedTextCell _handleButton:]
  -[PUFeedTextCell setContentInsets:]
  -[PUFeedTextCell setIconLocation:]
  -[PUFeedTextCell contentInsets]
  -[PUFeedTextCell .cxx_destruct]
  -[PUFeedTextCell _iconImageView]
  -[PUFeedTextCell buttonType]
  -[PUFeedTextCell layoutSubviews]
  -[PUFeedTextCell setTextAlignment:]
  -[PUFeedTextCell iconLocation]
  -[PUFeedTextCell shouldUseAccessibilityLayout]
  -[PUFeedTextCell _iconSize]
  -[PUFeedTextCell textAlignment]
  -[PUFeedTextCell sizeThatFits:]
  -[PUFeedTextCell setIconImage:]
  -[PUFeedTextCell buttonPadding]
  -[PUFeedTextCell _setButton:]
  -[PUFeedTextCell initWithFrame:]
  -[PUFeedTextCell setButtonType:]
  -[PUFeedTextCell dealloc]
  -[PUFeedTextCell setButtonPadding:]
  -[PUFeedTextCell shouldRecognizerTap:]
  -[PUFeedTextCell _updateShouldUseAccessibilityLayout]
  -[PUFeedTextCell setNumberOfTextLines:]
  -[PUFeedTextCell setNumberOfDetailTextLines:]
  -[PUFeedTextCell _labelBackgroundColor]
  -[PUFeedTextCell numberOfTextLines]
  -[PUFeedTextCell _setLabel:]
  -[PUFeedTextCell setShouldUseAccessibilityLayout:]
  -[PUFeedTextCell _invalidateCachedTextSizes]
  -[PUFeedTextCell _updateButtonAnimated:]
  -[PUFeedTextCell _updateDetailLabel]
  -[PUFeedTextCell _updateIconImageView]
  -[PUFeedTextCell setButtonType:animated:]
  -[PUFeedTextCell iconPadding]
  -[PUFeedTextCell _textSizeForButtonWithType:size:]
  -[PUFeedTextCell textDetailTextSpacing]
  -[PUFeedTextCell _maximumPossibleTextSizeForButtonWithType:size:]
  -[PUFeedTextCell buttonHorizontalAlignment]
  -[PUFeedTextCell iconOffset]
  -[PUFeedTextCell tappableArea]
  -[PUFeedTextCell _updateLabelsBackgroundColor]
  -[PUFeedTextCell attributedDetailText]
  -[PUFeedTextCell numberOfDetailTextLines]
  -[PUFeedTextCell _setDetailLabel:]
  -[PUFeedTextCell _setIconImageView:]
  -[PUFeedTextCell _configureButton:withType:size:animated:]
  -[PUFeedTextCell shouldUseOpaqueBackground]
  -[PUFeedTextCell setTextDetailTextSpacing:]
  -[PUFeedTextCell setAttributedDetailText:]
  -[PUFeedTextCell setIconPadding:]
  -[PUFeedTextCell setButtonHorizontalAlignment:]
  -[PUFeedTextCell setShouldUseOpaqueBackground:]
  -[PUFeedTextCell setIconOffset:]
  -[PUFeedTextCell setTappableArea:]


PUFeedTitleCell : PUFeedCell
 @property  PXSharedAlbumHeaderView *headerView
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  long long collectionViewType
 @property  unsigned long tappableArea
 @property  PXFeedSectionInfo *sectionInfo

  // instance methods
  -[PUFeedTitleCell setContentInsets:]
  -[PUFeedTitleCell contentInsets]
  -[PUFeedTitleCell .cxx_destruct]
  -[PUFeedTitleCell layoutSubviews]
  -[PUFeedTitleCell sizeThatFits:]
  -[PUFeedTitleCell prepareForReuse]
  -[PUFeedTitleCell _handleTap:]
  -[PUFeedTitleCell sectionInfo]
  -[PUFeedTitleCell headerView]
  -[PUFeedTitleCell initWithFrame:]
  -[PUFeedTitleCell setSectionInfo:]
  -[PUFeedTitleCell _performLayoutInRect:updateSubviewFrames:]
  -[PUFeedTitleCell tappableArea]
  -[PUFeedTitleCell setTappableArea:]
  -[PUFeedTitleCell _updateHeaderTextColorStyle]
  -[PUFeedTitleCell setCollectionViewType:]
  -[PUFeedTitleCell collectionViewType]


PUFeedViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UIPopoverPresentationControllerDelegate, PUFeedCollectionViewLayoutDelegate, PXFeedSectionInfosManagerDelegate, PUPhotoBrowserZoomTransitionDelegate, PUFeedImageCellDelegate, PUFeedPlayerCellDelegate, PUFeedTextCellDelegate, PUFeedInvitationCellDelegate, PUFeedCaptionCellDelegate, UIGestureRecognizerDelegate, PUAlbumStreamActivityDelegate, PUScrollViewSpeedometerDelegate, PUOneUpPresentationHelperDelegate, PXSettingsKeyObserver, UICollectionViewDragSource, PLCloudFeedNavigating, PXNavigableCloudFeedViewController>
 @property  PXFeedSectionInfosManager *_feedSectionInfosManager
 @property  PHCachingImageManager *_cachingImageManager
 @property  NSMutableArray *_lastPreheatIndexPathList
 @property  NSMutableArray *_lastPreheatIndexPathInfoList
 @property  PXFeedDateFormatter *_dateFormatter
 @property  BOOL _flowDirectionReversed
 @property  PUScrollViewSpeedometer *_collectionViewSpeedometer
 @property  BOOL _collectionViewScrolledToNewest
 @property  BOOL _shouldSuspendQualityImageFormats
 @property  BOOL _viewDidAppear
 @property  long long _sizeTransitionState
 @property  PUFeedViewControllerRestorableState *_rotationLastRestorableState
 @property  long long _barsState
 @property  {CGSize=dd} _targetSize
 @property  long long _currentCollectionViewType
 @property  long long _targetCollectionViewType
 @property  UICollectionView *_currentCollectionView
 @property  UICollectionView *_targetCollectionView
 @property  {UIEdgeInsets=dddd} _previousSafeAreaInsets
 @property  long long _loadedSectionInfosWindowSize
 @property  BOOL _viewsInSyncWithModel
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  UIBarButtonItem *_invitationsBarButtonItem
 @property  PUFeedViewController *_invitationsPopoverRootController
 @property  {CGPoint=dd} _lastPreheatedContentOffset
 @property  NSIndexPath *_indexPathForImageHiddenDuringZoomTransition
 @property  PUPhotoPinchGestureRecognizer *_pinchGestureRecognizer
 @property  UICollectionView *_pinchedCollectionView
 @property  PLManagedAlbumList *_sharedAlbumList
 @property  PLCloudSharedAlbum *_pushedAlbum
 @property  UIViewController *_pushedViewController
 @property  PUPhotosPickerViewController *_presentedPhotosPickerViewController
 @property  BOOL _appJustEnteredForeground
 @property  _UIContentUnavailableView *_emptyPlaceholderView
 @property  BOOL _userDidDismissPlaceholder
 @property  PUAlbumStreamActivity *_albumStreamActivity
 @property  PLManagedAsset *_browsingSelectedAsset
 @property  PLCloudSharedComment *_browsingSelectedComment
 @property  PXFeedAssetContainerList *_browsingAssetContainerList
 @property  NSDictionary *_justLikedSections
 @property  BOOL _interfaceBatchUpdateScheduled
 @property  NSMutableSet *_sectionInfosWithCommentChanges
 @property  NSMutableSet *_updatedAssets
 @property  BOOL _invitationsPopoverShowPending
 @property  BOOL _libraryUpdatingPreviouslyExpired
 @property  BOOL _checkedLibraryUpdatingExpiration
 @property  double _preheatingWindowSize
 @property  {CGSize=dd} _assetsAddedCachedSectionHeaderSize
 @property  PUOneUpPresentationHelper *_oneUpPresentationHelper
 @property  PUPhotoBrowserOneUpPresentationAdaptor *_photoBrowserOneUpPresentationAdaptor
 @property  PXFeedAssetContainerList *_oneUpPresentationAssetContainerList
 @property  BOOL _oneUpDataSourceUpdateScheduled
 @property  BOOL _needsUpdateLayout
 @property  BOOL _hasAppeared
 @property  BOOL observingPopoverContentSizeChange
 @property  NSMutableSet *imageCellsPlayingVideo
 @property  @? onNextViewLayout
 @property  PUFeedViewControllerSpec *spec
 @property  long long contentType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUFeedViewController initialize]

  // instance methods
  -[PUFeedViewController routingOptionsForDestination:]
  -[PUFeedViewController viewSafeAreaInsetsDidChange]
  -[PUFeedViewController _setTargetSize:]
  -[PUFeedViewController collectionView:cellForItemAtIndexPath:]
  -[PUFeedViewController _setTapGestureRecognizer:]
  -[PUFeedViewController _tapGestureRecognizer]
  -[PUFeedViewController collectionView:numberOfItemsInSection:]
  -[PUFeedViewController navigateToDestination:options:completionHandler:]
  -[PUFeedViewController _targetSize]
  -[PUFeedViewController collectionView:canFocusItemAtIndexPath:]
  -[PUFeedViewController _updateNavigationItemAnimated:]
  -[PUFeedViewController _dateFormatter]
  -[PUFeedViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUFeedViewController prefersStatusBarHidden]
  -[PUFeedViewController navigateToCloudFeedAsset:completion:]
  -[PUFeedViewController preferredContentSize]
  -[PUFeedViewController _collectionView:itemsForAddingToDragSession:atIndexPath:point:]
  -[PUFeedViewController _collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[PUFeedViewController numberOfSectionsInCollectionView:]
  -[PUFeedViewController collectionView:didSelectItemAtIndexPath:]
  -[PUFeedViewController viewWillLayoutSubviews]
  -[PUFeedViewController traitCollectionDidChange:]
  -[PUFeedViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[PUFeedViewController px_navigationDestination]
  -[PUFeedViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUFeedViewController prepareForPopoverPresentation:]
  -[PUFeedViewController _setEmptyPlaceholderView:]
  -[PUFeedViewController oneUpPresentationHelperScrollView:]
  -[PUFeedViewController .cxx_destruct]
  -[PUFeedViewController cloudFeedInvitationForAlbumIsAvailableForNavigation:]
  -[PUFeedViewController _setPinchGestureRecognizer:]
  -[PUFeedViewController viewDidLoad]
  -[PUFeedViewController _handlePinch:]
  -[PUFeedViewController popoverPresentationControllerDidDismissPopover:]
  -[PUFeedViewController canBecomeFirstResponder]
  -[PUFeedViewController scrollViewDidScrollToTop:]
  -[PUFeedViewController cloudFeedCommentIsAvailableForNavigation:]
  -[PUFeedViewController oneUpPresentationHelper:willPresentOneUpViewController:]
  -[PUFeedViewController preferredStatusBarUpdateAnimation]
  -[PUFeedViewController viewDidAppear:]
  -[PUFeedViewController oneUpPresentationHelperShouldLeaveContentOnSecondScreen:]
  -[PUFeedViewController _oneUpPresentationHelper]
  -[PUFeedViewController _emptyPlaceholderView]
  -[PUFeedViewController shouldAutorotate]
  -[PUFeedViewController pu_scrollToInitialPositionAnimated:]
  -[PUFeedViewController _presentConfidentialityWarning]
  -[PUFeedViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUFeedViewController scrollViewDidScroll:]
  -[PUFeedViewController _setNeedsUpdateLayout:]
  -[PUFeedViewController _updateEmptyPlaceholderAnimated:]
  -[PUFeedViewController oneUpPresentationHelperViewController:]
  -[PUFeedViewController contentType]
  -[PUFeedViewController oneUpPresentationOrigin:]
  -[PUFeedViewController gestureRecognizerShouldBegin:]
  -[PUFeedViewController _handleTap:]
  -[PUFeedViewController _hasAppeared]
  -[PUFeedViewController _needsUpdateLayout]
  -[PUFeedViewController _dateFormatterChanged:]
  -[PUFeedViewController viewWillDisappear:]
  -[PUFeedViewController _appDidEnterBackground:]
  -[PUFeedViewController scrollViewWillBeginDragging:]
  -[PUFeedViewController navigateToCloudFeedComment:completion:]
  -[PUFeedViewController viewWillAppear:]
  -[PUFeedViewController scrollViewShouldScrollToTop:]
  -[PUFeedViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUFeedViewController settings:changedValueForKey:]
  -[PUFeedViewController navigateToRevealCloudFeedAsset:completion:]
  -[PUFeedViewController navigateToRevealCloudFeedComment:completion:]
  -[PUFeedViewController cloudFeedAssetIsAvailableForNavigation:]
  -[PUFeedViewController spec]
  -[PUFeedViewController _updatedAssets]
  -[PUFeedViewController collectionView:layout:shouldHideSection:]
  -[PUFeedViewController collectionView:layout:typeForSection:]
  -[PUFeedViewController collectionView:layout:contentInsetsForSection:]
  -[PUFeedViewController collectionView:layout:imageSizeForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:mininumSizeForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:shouldShowCaptionForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:sizeForThumbnailInSection:]
  -[PUFeedViewController collectionView:layout:captionSizeForTileAtIndexPath:proposedSize:]
  -[PUFeedViewController collectionView:layout:batchIDForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:referenceMaximumLength:minimumNumberOfTilesToOmit:forSection:]
  -[PUFeedViewController collectionView:layout:sizeForRowAtIndexPath:proposedSize:]
  -[PUFeedViewController collectionView:layout:shouldJoinSection:withSection:]
  -[PUFeedViewController _collectionViews]
  -[PUFeedViewController collectionView:layout:metricsForSeparatorBetweenRowAtIndexPath:andRowAtIndexPath:proposedMetrics:]
  -[PUFeedViewController collectionView:layout:shouldHideHeaderInSection:]
  -[PUFeedViewController collectionView:layout:sizeForHeaderOfSections:proposedSize:]
  -[PUFeedViewController dealloc]
  -[PUFeedViewController collectionView:layout:sizeForFooterInSection:proposedSize:]
  -[PUFeedViewController collectionView:layout:groupIDForSection:]
  -[PUFeedViewController collectionView:layout:metricsForSeparatorBetweenSection:andSection:proposedMetrics:]
  -[PUFeedViewController collectionView:layout:headerSizeForGroupID:proposedSize:]
  -[PUFeedViewController collectionView:layout:spacingBetweenSection:andHeaderForGroupID:]
  -[PUFeedViewController _pinchGestureRecognizer]
  -[PUFeedViewController _reduceMotionStatusChanged:]
  -[PUFeedViewController _updateSubviewsOrdering]
  -[PUFeedViewController _preferredContentSizeChanged:]
  -[PUFeedViewController scrollViewDidEndDecelerating:]
  -[PUFeedViewController observeValueForKeyPath:ofObject:change:context:]
  -[PUFeedViewController viewDidDisappear:]
  -[PUFeedViewController prepareForDismissingForced:]
  -[PUFeedViewController navigateToRevealCloudFeedInvitationForAlbum:completion:]
  -[PUFeedViewController assetContainerListDidChange:]
  -[PUFeedViewController canDragOut]
  -[PUFeedViewController _updateInterfaceForModelReloadAnimated:]
  -[PUFeedViewController _updatePeripheralInterfaceAnimated:]
  -[PUFeedViewController _cachingImageManager]
  -[PUFeedViewController initWithSpec:contentType:]
  -[PUFeedViewController _suppressionContexts]
  -[PUFeedViewController performWhenReadyToNavigate:]
  -[PUFeedViewController pu_wantsToolbarVisible]
  -[PUFeedViewController _albumStreamActivity]
  -[PUFeedViewController _pushedAlbum]
  -[PUFeedViewController pu_wantsTabBarVisible]
  -[PUFeedViewController pu_wantsNavigationBarVisible]
  -[PUFeedViewController didTapLikeButtonInFeedCaptionCell:]
  -[PUFeedViewController didTapFeedCell:]
  -[PUFeedViewController collectionView:layout:shouldShowLikesForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:likesSizeForTileAtIndexPath:proposedSize:]
  -[PUFeedViewController collectionView:layout:commentCountForTileAtIndexPath:]
  -[PUFeedViewController collectionView:layout:commentSizeForTileAtIndexPath:commentIndex:proposedSize:]
  -[PUFeedViewController collectionView:layout:configurationForSectionHeaderType:]
  -[PUFeedViewController didTapOverlayPlayButtonInFeedImageCell:]
  -[PUFeedViewController didTapCommentButtonInFeedImageCell:]
  -[PUFeedViewController feedInvitationCell:didAccept:]
  -[PUFeedViewController feedInvitationCellReportAsJunk:]
  -[PUFeedViewController feedInvitationCell:presentViewController:]
  -[PUFeedViewController didTapCommentButtonInFeedPlayerCell:]
  -[PUFeedViewController didTapButtonInFeedTextCell:]
  -[PUFeedViewController _appWillEnterForeground:]
  -[PUFeedViewController _libraryUpdatingDidExpire:]
  -[PUFeedViewController _setPreheatingWindowSize:]
  -[PUFeedViewController _updateSpec]
  -[PUFeedViewController _dismissInvitationsPopoverIfNeeded]
  -[PUFeedViewController _sizeTransitionState]
  -[PUFeedViewController _currentCollectionView]
  -[PUFeedViewController _setCurrentCollectionView:]
  -[PUFeedViewController _updateCollectionViews]
  -[PUFeedViewController _targetCollectionView]
  -[PUFeedViewController _setTargetCollectionView:]
  -[PUFeedViewController _cancelBarsAutoHide]
  -[PUFeedViewController _setSizeTransitionState:]
  -[PUFeedViewController _collectionViewTypeForSize:]
  -[PUFeedViewController _setTargetCollectionViewType:]
  -[PUFeedViewController _invalidateLastPreheatedContentOffset]
  -[PUFeedViewController _invalidatePreheatedAssets]
  -[PUFeedViewController _rotationLastRestorableState]
  -[PUFeedViewController _currentRestorableState]
  -[PUFeedViewController _setRotationLastRestorableState:]
  -[PUFeedViewController _restoreScrollPositionInCollectionView:fromRestorableState:]
  -[PUFeedViewController _updatePreheatedAssetsForCollectionView:]
  -[PUFeedViewController _targetCollectionViewType]
  -[PUFeedViewController _shouldShowBarsForCollectionViewType:]
  -[PUFeedViewController _setBarsState:]
  -[PUFeedViewController _setCurrentCollectionViewType:]
  -[PUFeedViewController _userDidViewFeed]
  -[PUFeedViewController _updateWindowOfLoadedSectionInfos]
  -[PUFeedViewController _setViewsInSyncWithModel:]
  -[PUFeedViewController _setHasAppeared:]
  -[PUFeedViewController _viewWillLayoutBeforeAppearing]
  -[PUFeedViewController _areViewsInSyncWithModel]
  -[PUFeedViewController onNextViewLayout]
  -[PUFeedViewController setOnNextViewLayout:]
  -[PUFeedViewController _currentCollectionViewType]
  -[PUFeedViewController _setPushedAlbum:]
  -[PUFeedViewController _setPushedViewController:]
  -[PUFeedViewController _tearDownBrowsing]
  -[PUFeedViewController _barsState]
  -[PUFeedViewController _scheduleBarsAutoHide]
  -[PUFeedViewController _isInvitationsPopoverShowPending]
  -[PUFeedViewController _showInvitationsPopoverAnimated:]
  -[PUFeedViewController _setViewDidAppear:]
  -[PUFeedViewController _appDidFinishEnteringForeground]
  -[PUFeedViewController _previousSafeAreaInsets]
  -[PUFeedViewController _setPreviousSafeAreaInsets:]
  -[PUFeedViewController _feedSectionInfosManager]
  -[PUFeedViewController _sectionInfoForSection:collectionView:]
  -[PUFeedViewController _typeForCollectionView:]
  -[PUFeedViewController _indexPathForImageHiddenDuringZoomTransition]
  -[PUFeedViewController _requestImageForAsset:tileSize:completion:]
  -[PUFeedViewController _requestPlayerItemForAsset:preparation:completion:]
  -[PUFeedViewController _textForDate:]
  -[PUFeedViewController _numberOfSectionInfosForCollectionView:]
  -[PUFeedViewController _sectionInfosForSections:collectionView:]
  -[PUFeedViewController _justLikedSections]
  -[PUFeedViewController _getDescriptionPhrase:streamDisclosureLabel:actionText:buttonType:forSections:inCollectionView:]
  -[PUFeedViewController _dateForSectionWithInfo:]
  -[PUFeedViewController _appJustEnteredForeground]
  -[PUFeedViewController _setAppJustEnteredForeground:]
  -[PUFeedViewController _contextDidFinishRemoteMerge:]
  -[PUFeedViewController _lastPreheatIndexPathList]
  -[PUFeedViewController _lastPreheatIndexPathInfoList]
  -[PUFeedViewController _setLastPreheatedContentOffset:]
  -[PUFeedViewController _areSharedStreamsEnabled]
  -[PUFeedViewController _sharedAlbumList]
  -[PUFeedViewController _hasCheckedLibraryUpdatingExpiration]
  -[PUFeedViewController _setLibraryUpdatingPreviouslyExpired:]
  -[PUFeedViewController _isLibraryUpdatingPreviouslyExpired]
  -[PUFeedViewController _setCheckedLibraryUpdatingExpiration:]
  -[PUFeedViewController _isLibraryUpdatingTimeoutExpired]
  -[PUFeedViewController _shouldShowTransitionUI]
  -[PUFeedViewController _userDidDismissPlaceholder]
  -[PUFeedViewController _shouldHideSectionWithType:inCollectionViewType:]
  -[PUFeedViewController _isCollectionViewEmpty:]
  -[PUFeedViewController observingPopoverContentSizeChange]
  -[PUFeedViewController setObservingPopoverContentSizeChange:]
  -[PUFeedViewController _updateCellsVideoEnabledness]
  -[PUFeedViewController _setupBrowsingFromAsset:orComment:]
  -[PUFeedViewController _setBrowsingSelectedAsset:]
  -[PUFeedViewController _setBrowsingSelectedComment:]
  -[PUFeedViewController _updateBrowsingAssetContainerList]
  -[PUFeedViewController _updateOneUpDataSource]
  -[PUFeedViewController _setBrowsingAssetContainerList:]
  -[PUFeedViewController _browsingSelectedSection]
  -[PUFeedViewController _ensureWindowOfLoadedSectionInfosIncludesSection:]
  -[PUFeedViewController _sectionInfosForBrowsingFromSectionInfo:]
  -[PUFeedViewController _browsingAssetContainerList]
  -[PUFeedViewController _pushedViewController]
  -[PUFeedViewController _createOneUpPhotosDataSource]
  -[PUFeedViewController _setOneUpDataSourceUpdateScheduled:]
  -[PUFeedViewController _isOneUpDataSourceUpdateScheduled]
  -[PUFeedViewController _performOneUpDataSourceUpdateNow]
  -[PUFeedViewController _browsingSelectedComment]
  -[PUFeedViewController _browsingSelectedAsset]
  -[PUFeedViewController _loadedSectionInfosWindowSize]
  -[PUFeedViewController _isFlowDirectionReversed]
  -[PUFeedViewController _navigateToOneUpBrowserWithOptions:animated:]
  -[PUFeedViewController _navigateToOneUpBrowserWithOptions:animated:pinchGestureRecognizer:]
  -[PUFeedViewController _oneUpPresentationAssetContainerList]
  -[PUFeedViewController _ensureOneUpPresentationHelper]
  -[PUFeedViewController _updateOneUpBrowsingCurrentAssetReference]
  -[PUFeedViewController _photoBrowserOneUpPresentationAdaptor]
  -[PUFeedViewController _setPhotoBrowserOneUpPresentationAdaptor:]
  -[PUFeedViewController _setOneUpPresentationAssetContainerList:]
  -[PUFeedViewController _setOneUpPresentationHelper:]
  -[PUFeedViewController _browsingSelectedIndexPath]
  -[PUFeedViewController _setLoadedSectionInfosWindowSize:]
  -[PUFeedViewController _preheatSectionInfosAtIndexes:]
  -[PUFeedViewController _stopObservingPopoverContentSizeIfNecessary]
  -[PUFeedViewController _setFlowDirectionReversed:]
  -[PUFeedViewController _configureCollectionView:isVertical:]
  -[PUFeedViewController _updateParallaxForCollectionView:]
  -[PUFeedViewController _collectionViewSpeedometer]
  -[PUFeedViewController _configureSpeedometer:]
  -[PUFeedViewController _setCollectionViewSpeedometer:]
  -[PUFeedViewController _startObservingPopoverContentSizeIfNecessary]
  -[PUFeedViewController _isAnySharedAlbumAvailable]
  -[PUFeedViewController _invitationsBarButtonItem]
  -[PUFeedViewController _invitationsButtonAction:]
  -[PUFeedViewController _setInvitationsBarButtonItem:]
  -[PUFeedViewController _placeholderTypeForSizeTransitionState:]
  -[PUFeedViewController _setUserDidDismissPlaceholder:]
  -[PUFeedViewController _handlePlaceholderAction]
  -[PUFeedViewController _autoHideBarsNow]
  -[PUFeedViewController _invitationsPopoverRootController]
  -[PUFeedViewController _setInvitationsPopoverRootController:]
  -[PUFeedViewController imageCellsPlayingVideo]
  -[PUFeedViewController _configureImageCell:forAssetAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configurePlayerCell:forAssetAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureTextCell:forCommentAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureTextCell:forLikesAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureTitleCell:forTextAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureInvitationCell:forInvitationAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureBadgedThumbnailCell:forThumbnailsAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureCaptionCell:forCaptionAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureTitleCell:forHeaderOfSections:inCollectionView:animated:]
  -[PUFeedViewController _configureTextCell:forFooterOfSection:inCollectionView:]
  -[PUFeedViewController _groupIDForSectionWithInfo:]
  -[PUFeedViewController _configureTextCell:forHeaderOfGroupID:inCollectionView:]
  -[PUFeedViewController _setupBrowsingFromItemAtIndexPath:inCollectionView:]
  -[PUFeedViewController _navigateToOneUpBrowserAnimated:]
  -[PUFeedViewController _shouldHideSectionInfo:forCollectionView:]
  -[PUFeedViewController _typeForSectionInfo:]
  -[PUFeedViewController _desiredSafeAreaInsetsForCollectionViewType:]
  -[PUFeedViewController _shouldJoinSectionInfo:withSectionInfo:collectionViewType:]
  -[PUFeedViewController _shouldHideHeaderForSectionWithType:]
  -[PUFeedViewController _viewDidAppear]
  -[PUFeedViewController _isCollectionViewScrolledToNewest]
  -[PUFeedViewController _setCollectionViewScrolledToNewest:]
  -[PUFeedViewController _expandWindowOfLoadedSectionInfos]
  -[PUFeedViewController _lastPreheatedContentOffset]
  -[PUFeedViewController _userDidScrollFeed]
  -[PUFeedViewController _updateInterfaceForDeletedSections:insertedSections:updatedSections:]
  -[PUFeedViewController _scheduleInterfaceUpdateForSectionInfosWithCommentChanges:updatedAssets:]
  -[PUFeedViewController _scheduleOneUpDataSourceUpdate]
  -[PUFeedViewController _sectionInfosWithCommentChanges]
  -[PUFeedViewController _setSectionInfosWithCommentChanges:]
  -[PUFeedViewController _setUpdatedAssets:]
  -[PUFeedViewController _isInterfaceBatchUpdateScheduled]
  -[PUFeedViewController _setInterfaceBatchUpdateScheduled:]
  -[PUFeedViewController _performInterfaceBatchUpdateNow]
  -[PUFeedViewController _assetForItemAtIndexPath:inCollectionView:]
  -[PUFeedViewController _updateSectionsWithCaptionChangesFromUpdatedAssets:]
  -[PUFeedViewController _updateSectionsWithLikesAndCommentChangesFromUpdatedAssets:]
  -[PUFeedViewController _setIndexPathForImageHiddenDuringZoomTransition:]
  -[PUFeedViewController _pinchedCollectionView]
  -[PUFeedViewController _loadedSectionInfoForCloudFeedEntry:]
  -[PUFeedViewController _performOnNextViewLayout:]
  -[PUFeedViewController _navigateToRevealAsset:completion:]
  -[PUFeedViewController _navigateToRevealComment:completion:]
  -[PUFeedViewController navigateToNewestContentAnimated:]
  -[PUFeedViewController _navigateToSectionInfo:atItemIndex:completion:]
  -[PUFeedViewController _beginPlayingVideoInCellIfNeeded:]
  -[PUFeedViewController _endPlayingVideoInCellIfNeeded:]
  -[PUFeedViewController _handleVideoRequestID:forCellAtIndexPath:withTag:]
  -[PUFeedViewController _handleVideoRequestResult:forCellAtIndexPath:withTag:]
  -[PUFeedViewController _presentedPhotosPickerViewController]
  -[PUFeedViewController _setPresentedPhotosPickerViewController:]
  -[PUFeedViewController _shouldNavigateToNewestContent]
  -[PUFeedViewController _didTapThumbnailOrOverlayPlayButtonInFeedCell:]
  -[PUFeedViewController _didTapSectionHeaderFeedCell:]
  -[PUFeedViewController _didTapSectionFooterFeedCell:]
  -[PUFeedViewController _collectionViewContainingView:]
  -[PUFeedViewController _didTapCommentButtonInFeedCell:]
  -[PUFeedViewController _navigateToRevealPhoto:inAlbum:animated:]
  -[PUFeedViewController _setJustLikedSections:]
  -[PUFeedViewController _configureTextCell:forHeaderOfSections:inCollectionView:animated:]
  -[PUFeedViewController _setUserCloudSharedLiked:forItemsInSections:inCollectionView:]
  -[PUFeedViewController _defaultMaximumScrollRegimeForQualityImageFormats]
  -[PUFeedViewController _shouldSuspendQualityImageFormats]
  -[PUFeedViewController _setShouldSuspendQualityImageFormats:]
  -[PUFeedViewController _indexPathForItemWithAsset:inCollectionView:]
  -[PUFeedViewController _enumerateCenterAssetsInRestorableState:inCollectionView:usingBlock:]
  -[PUFeedViewController _openiCloudSettings]
  -[PUFeedViewController _beginInteractiveNavigationForItemAtIndexPath:inCollectionView:]
  -[PUFeedViewController _setPinchedCollectionView:]
  -[PUFeedViewController _setInvitationsPopoverShowPending:]
  -[PUFeedViewController _createNewStream]
  -[PUFeedViewController _setAlbumStreamActivity:]
  -[PUFeedViewController _invalidateCachedMetrics]
  -[PUFeedViewController _setAssetsAddedCachedSectionHeaderSize:]
  -[PUFeedViewController _clearOneUpPresentationHelper]
  -[PUFeedViewController _confidentialityWarningRequiredForAsset:]
  -[PUFeedViewController _dragItemsForIndexPath:]
  -[PUFeedViewController feedSectionInfosManager:sectionInfosDidChange:]
  -[PUFeedViewController zoomTransition:photoTokenForPhoto:inCollection:]
  -[PUFeedViewController zoomTransition:getFrame:inCoordinateSpace:contentMode:cropInsets:forPhotoToken:operation:]
  -[PUFeedViewController zoomTransition:transitionImageForPhotoToken:callback:]
  -[PUFeedViewController zoomTransition:willBeginForOperation:animated:interactive:]
  -[PUFeedViewController zoomTransition:didFinishForOperation:animated:interactive:]
  -[PUFeedViewController zoomTransition:setVisibility:forPhotoToken:]
  -[PUFeedViewController scrollViewSpeedometer:regimeDidChange:from:]
  -[PUFeedViewController oneUpPresentationHelper:didDismissOneUpViewController:]
  -[PUFeedViewController _configureImageCell:forThumbnailAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureStackCell:forThumbnailsAtIndexPath:inCollectionView:]
  -[PUFeedViewController _configureTextCell:forTextAtIndexPath:inCollectionView:]
  -[PUFeedViewController _showOutOfNetworkInvitationMessageForSharedAlbum:completionHandler:]
  -[PUFeedViewController set_lastPreheatIndexPathList:]
  -[PUFeedViewController set_lastPreheatIndexPathInfoList:]
  -[PUFeedViewController _preheatingWindowSize]
  -[PUFeedViewController _assetsAddedCachedSectionHeaderSize]
  -[PUFeedViewController ppt_currentCollectionView]


PUFeedViewControllerPadSpec : PUFeedViewControllerSpec
  // instance methods
  -[PUFeedViewControllerPadSpec promptStyle]
  -[PUFeedViewControllerPadSpec gridSpec]
  -[PUFeedViewControllerPadSpec thumbnailSize]
  -[PUFeedViewControllerPadSpec shouldShowInvitationsInPopover]
  -[PUFeedViewControllerPadSpec shouldShowCommentBadgesInCollectionViewType:]
  -[PUFeedViewControllerPadSpec shouldUseAspectThumbnails]
  -[PUFeedViewControllerPadSpec thumbnailSizeForImageSize:]
  -[PUFeedViewControllerPadSpec defaultTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerPadSpec emphasizedTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerPadSpec largeNumberOfSubjectsForLikes]
  -[PUFeedViewControllerPadSpec configurationForSectionHeaderType:collectionViewType:]
  -[PUFeedViewControllerPadSpec configureTextCell:forSectionHeaderWithDescriptionPhrase:streamDisclosureLabel:actionText:buttonType:collectionViewType:animated:]
  -[PUFeedViewControllerPadSpec configureTextCell:forSectionFooterWithActionText:collectionViewType:]
  -[PUFeedViewControllerPadSpec configureTextCell:forSectionGroupHeaderWithText:collectionViewType:]
  -[PUFeedViewControllerPadSpec configureFeedCollectionViewLayout:forCollectionViewType:collectionViewSize:]
  -[PUFeedViewControllerPadSpec collectionViewContentInset]
  -[PUFeedViewControllerPadSpec shouldHideBarsInLandscape]
  -[PUFeedViewControllerPadSpec minimumVideoTileSize]
  -[PUFeedViewControllerPadSpec getReferenceMaximumLength:minimumNumberOfTilesToOmit:forSectionType:collectionViewType:]
  -[PUFeedViewControllerPadSpec configureCommentSeparatorMetrics:]
  -[PUFeedViewControllerPadSpec configureSeparatorMetrics:betweenSectionWithInfo:andSectionWithInfo:joined:collectionViewType:]
  -[PUFeedViewControllerPadSpec photosPickerSpec]
  -[PUFeedViewControllerPadSpec popoverFeedViewControllerSpec]
  -[PUFeedViewControllerPadSpec shouldUseFullscreenLayout]
  -[PUFeedViewControllerPadSpec configureTextCell:forSectionFooterWithDateText:collectionViewType:]


PUFeedViewControllerPhoneSpec : PUFeedViewControllerSpec
  // instance methods
  -[PUFeedViewControllerPhoneSpec promptStyle]
  -[PUFeedViewControllerPhoneSpec gridSpec]
  -[PUFeedViewControllerPhoneSpec thumbnailSize]
  -[PUFeedViewControllerPhoneSpec textInsetsForHeadersAndFootersInSectionType:collectionViewType:]
  -[PUFeedViewControllerPhoneSpec defaultTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerPhoneSpec emphasizedTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerPhoneSpec largeNumberOfSubjectsForLikes]
  -[PUFeedViewControllerPhoneSpec configurationForSectionHeaderType:collectionViewType:]
  -[PUFeedViewControllerPhoneSpec configureTextCell:forSectionHeaderWithDescriptionPhrase:streamDisclosureLabel:actionText:buttonType:collectionViewType:animated:]
  -[PUFeedViewControllerPhoneSpec configureTextCell:forSectionFooterWithActionText:collectionViewType:]
  -[PUFeedViewControllerPhoneSpec configureTextCell:forSectionGroupHeaderWithText:collectionViewType:]
  -[PUFeedViewControllerPhoneSpec configureFeedCollectionViewLayout:forCollectionViewType:collectionViewSize:]
  -[PUFeedViewControllerPhoneSpec collectionViewContentInset]
  -[PUFeedViewControllerPhoneSpec shouldHideBarsInLandscape]
  -[PUFeedViewControllerPhoneSpec minimumVideoTileSize]
  -[PUFeedViewControllerPhoneSpec getReferenceMaximumLength:minimumNumberOfTilesToOmit:forSectionType:collectionViewType:]
  -[PUFeedViewControllerPhoneSpec photosPickerSpec]
  -[PUFeedViewControllerPhoneSpec shouldUseFullscreenLayout]
  -[PUFeedViewControllerPhoneSpec canUseSimplePreheatManager]


PUCurationImportSourceBrowserDebugViewController : UITableViewController
  // instance methods
  -[PUCurationImportSourceBrowserDebugViewController tableView:numberOfRowsInSection:]
  -[PUCurationImportSourceBrowserDebugViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUCurationImportSourceBrowserDebugViewController tableView:heightForRowAtIndexPath:]
  -[PUCurationImportSourceBrowserDebugViewController .cxx_destruct]
  -[PUCurationImportSourceBrowserDebugViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUCurationImportSourceBrowserDebugViewController tableView:didSelectRowAtIndexPath:]
  -[PUCurationImportSourceBrowserDebugViewController viewDidLoad]
  -[PUCurationImportSourceBrowserDebugViewController tableView:cellForRowAtIndexPath:]
  -[PUCurationImportSourceBrowserDebugViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[PUCurationImportSourceBrowserDebugViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUCurationImportSourceBrowserDebugViewController _fetchImportSources]


PUCurationImportSourceBrowserDebugViewCell : UITableViewCell
 @property  NSString *importSourceName

  // instance methods
  -[PUCurationImportSourceBrowserDebugViewCell .cxx_destruct]
  -[PUCurationImportSourceBrowserDebugViewCell setImportSourceName:]
  -[PUCurationImportSourceBrowserDebugViewCell importSourceName]


PUFeedViewControllerPopoverSpec : PUFeedViewControllerPhoneSpec
  // instance methods
  -[PUFeedViewControllerPopoverSpec configureSeparatorMetrics:betweenSectionWithInfo:andSectionWithInfo:joined:collectionViewType:]
  -[PUFeedViewControllerPopoverSpec shouldUseFullscreenLayout]


PUFeedViewControllerRestorableState : NSObject <NSCoding>
 @property  NSDate *date
 @property  BOOL scrolledToNewest
 @property  NSArray *centerAssetUUIDs
 @property  NSArray *centerAssetFrames
 @property  NSURL *centerSectionEntryURIRepresentation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} centerSectionFrame
 @property  {CGSize=dd} collectionViewSize

  // instance methods
  -[PUFeedViewControllerRestorableState initWithCoder:]
  -[PUFeedViewControllerRestorableState .cxx_destruct]
  -[PUFeedViewControllerRestorableState setDate:]
  -[PUFeedViewControllerRestorableState encodeWithCoder:]
  -[PUFeedViewControllerRestorableState date]
  -[PUFeedViewControllerRestorableState setScrolledToNewest:]
  -[PUFeedViewControllerRestorableState setCenterAssetUUIDs:]
  -[PUFeedViewControllerRestorableState setCenterAssetFrames:]
  -[PUFeedViewControllerRestorableState setCenterSectionEntryURIRepresentation:]
  -[PUFeedViewControllerRestorableState setCenterSectionFrame:]
  -[PUFeedViewControllerRestorableState setCollectionViewSize:]
  -[PUFeedViewControllerRestorableState centerAssetUUIDs]
  -[PUFeedViewControllerRestorableState centerAssetFrames]
  -[PUFeedViewControllerRestorableState collectionViewSize]
  -[PUFeedViewControllerRestorableState centerSectionEntryURIRepresentation]
  -[PUFeedViewControllerRestorableState centerSectionFrame]
  -[PUFeedViewControllerRestorableState scrolledToNewest]


PUCurationTraitContainer : NSObject
 @property  NSString *actionLabel
 @property  short value
 @property  double highPrecisionOperatingPoint
 @property  double operatingPoint
 @property  double highRecallOperatingPoint

  // instance methods
  -[PUCurationTraitContainer .cxx_destruct]
  -[PUCurationTraitContainer actionLabel]
  -[PUCurationTraitContainer value]
  -[PUCurationTraitContainer highPrecisionOperatingPoint]
  -[PUCurationTraitContainer operatingPoint]
  -[PUCurationTraitContainer highRecallOperatingPoint]
  -[PUCurationTraitContainer initWithLabel:traitValue:highPrecision:operatingPoint:highRecall:]


PUFeedViewControllerSpec : NSObject
 @property  NSIndexSet *qualityImageFormats
 @property  {CGSize=dd} minimumVideoTileSize
 @property  long long largeNumberOfSubjectsForLikes
 @property  {CGSize=dd} thumbnailSize
 @property  BOOL shouldUseAspectThumbnails
 @property  BOOL shouldHideBarsInLandscape
 @property  BOOL shouldShowInvitationsInPopover
 @property  PUFeedViewControllerSpec *popoverFeedViewControllerSpec
 @property  PUPhotosGridViewControllerSpec *gridSpec
 @property  PUPhotosPickerViewControllerSpec *photosPickerSpec
 @property  long long promptStyle
 @property  BOOL shouldUseFullscreenLayout
 @property  double collectionViewContentInset
 @property  double standardSideMargins

  // instance methods
  -[PUFeedViewControllerSpec .cxx_destruct]
  -[PUFeedViewControllerSpec init]
  -[PUFeedViewControllerSpec promptStyle]
  -[PUFeedViewControllerSpec gridSpec]
  -[PUFeedViewControllerSpec thumbnailSize]
  -[PUFeedViewControllerSpec setLayoutReferenceWidth:]
  -[PUFeedViewControllerSpec shouldShowInvitationsInPopover]
  -[PUFeedViewControllerSpec getFastImageFormat:qualityImageFormat:forSourceSize:destinationSize:allowCrop:]
  -[PUFeedViewControllerSpec shouldShowCommentBadgesInCollectionViewType:]
  -[PUFeedViewControllerSpec shouldUseAspectThumbnails]
  -[PUFeedViewControllerSpec thumbnailSizeForImageSize:]
  -[PUFeedViewControllerSpec textInsetsForHeadersAndFootersInSectionType:collectionViewType:]
  -[PUFeedViewControllerSpec defaultTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerSpec emphasizedTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerSpec defaultSubTitleTextAttributesForCollectionViewType:]
  -[PUFeedViewControllerSpec configureTextCell:forCommentWithDescriptionPhrase:date:]
  -[PUFeedViewControllerSpec largeNumberOfSubjectsForLikes]
  -[PUFeedViewControllerSpec configureTextCell:forLikesWithDescriptionPhrase:date:]
  -[PUFeedViewControllerSpec configureTextCell:forEventWithDescriptionPhrase:]
  -[PUFeedViewControllerSpec configurationForSectionHeaderType:collectionViewType:]
  -[PUFeedViewControllerSpec configureTextCell:forSectionHeaderWithDescriptionPhrase:streamDisclosureLabel:actionText:buttonType:collectionViewType:animated:]
  -[PUFeedViewControllerSpec configureTextCell:forSectionFooterWithActionText:collectionViewType:]
  -[PUFeedViewControllerSpec configureTextCell:forSectionGroupHeaderWithText:collectionViewType:]
  -[PUFeedViewControllerSpec configureFeedCollectionViewLayout:forCollectionViewType:collectionViewSize:]
  -[PUFeedViewControllerSpec collectionViewContentInset]
  -[PUFeedViewControllerSpec shouldHideBarsInLandscape]
  -[PUFeedViewControllerSpec configureGradientCell:forSectionHeaderBackgroundInCollectionViewType:]
  -[PUFeedViewControllerSpec contentInsetsForSectionType:collectionViewType:]
  -[PUFeedViewControllerSpec minimumVideoTileSize]
  -[PUFeedViewControllerSpec getReferenceMaximumLength:minimumNumberOfTilesToOmit:forSectionType:collectionViewType:]
  -[PUFeedViewControllerSpec configureCommentSeparatorMetrics:]
  -[PUFeedViewControllerSpec configureSeparatorMetrics:betweenSectionWithInfo:andSectionWithInfo:joined:collectionViewType:]
  -[PUFeedViewControllerSpec spacingBetweenSectionWithInfo:andHeaderWithGroupID:]
  -[PUFeedViewControllerSpec photosPickerSpec]
  -[PUFeedViewControllerSpec popoverFeedViewControllerSpec]
  -[PUFeedViewControllerSpec updateFormats]
  -[PUFeedViewControllerSpec standardSideMargins]
  -[PUFeedViewControllerSpec shouldUseFullscreenLayout]
  -[PUFeedViewControllerSpec configureTextCell:forSectionFooterWithDateText:collectionViewType:]
  -[PUFeedViewControllerSpec canUseSimplePreheatManager]
  -[PUFeedViewControllerSpec _setQualityImageFormats:]
  -[PUFeedViewControllerSpec textSpacingBetweenText:detailText:]
  -[PUFeedViewControllerSpec configureTextCell:forCaption:date:]
  -[PUFeedViewControllerSpec qualityImageFormats]


PUActivityItemSourceConfiguration : NSObject
 @property  PHAsset *asset
 @property  NSDictionary *sharingVariants
 @property  NSString *activityType
 @property  {?=BBBBB} sharingPreferences
 @property  unsigned long maxFileSizeLimit
 @property  long long outputType
 @property  BOOL requiresAssetExport
 @property  long long assetExportKind
 @property  PHAssetExportRequestOptions *assetExportRequestOptions

  // class methods
  +[PUActivityItemSourceConfiguration shouldExcludeAlternateVariantForActivityType:]
  +[PUActivityItemSourceConfiguration isIndividualItemPreparationSupportedByActivityType:]
  +[PUActivityItemSourceConfiguration shouldProvideCompatibleFormatForActivityType:andAvailableSharingVariants:]
  +[PUActivityItemSourceConfiguration shouldProvideAlternateVariantForActivityType:forAsset:withAvailableSharingVariants:]
  +[PUActivityItemSourceConfiguration descriptionForOutputType:]
  +[PUActivityItemSourceConfiguration descriptionForAssetExportKind:]
  +[PUActivityItemSourceConfiguration supportsAssetLocalIdentifierForActivityType:]
  +[PUActivityItemSourceConfiguration maxFileSizeLimitForActivityType:asset:]
  +[PUActivityItemSourceConfiguration _dontAllowRAWForActivityType:]
  +[PUActivityItemSourceConfiguration _activitiesThatSupportLivePhotoBundles]
  +[PUActivityItemSourceConfiguration _activitiesThatSupportAssetBundles]
  +[PUActivityItemSourceConfiguration _activitiesThatDontRequireAssetExport]
  +[PUActivityItemSourceConfiguration _activitiesThatDontAllowRAW]
  +[PUActivityItemSourceConfiguration _photosActionSheetActivities]
  +[PUActivityItemSourceConfiguration _photosInternalActivities]
  +[PUActivityItemSourceConfiguration _systemActivitiesThatDontSupportMomentShareLinks]
  +[PUActivityItemSourceConfiguration _activitiesThatSupportHEIFHEVC]
  +[PUActivityItemSourceConfiguration _activitiesThatDontSupportMomentShareLinks]
  +[PUActivityItemSourceConfiguration _activitiesThatOnlySupportMomentShareLinks]
  +[PUActivityItemSourceConfiguration isLivePhotoBundleSupportedByActivityType:]
  +[PUActivityItemSourceConfiguration isAssetBundleSupportedByActivityType:]
  +[PUActivityItemSourceConfiguration isMomentShareLinkSupportedByActivityType:]

  // instance methods
  -[PUActivityItemSourceConfiguration _configure]
  -[PUActivityItemSourceConfiguration setActivityType:]
  -[PUActivityItemSourceConfiguration .cxx_destruct]
  -[PUActivityItemSourceConfiguration activityType]
  -[PUActivityItemSourceConfiguration setAsset:]
  -[PUActivityItemSourceConfiguration asset]
  -[PUActivityItemSourceConfiguration outputType]
  -[PUActivityItemSourceConfiguration setSharingPreferences:]
  -[PUActivityItemSourceConfiguration sharingPreferences]
  -[PUActivityItemSourceConfiguration requiresAssetExport]
  -[PUActivityItemSourceConfiguration initWithAsset:availableSharingVariants:activityType:preferences:]
  -[PUActivityItemSourceConfiguration assetExportRequestOptions]
  -[PUActivityItemSourceConfiguration assetExportKind]
  -[PUActivityItemSourceConfiguration maxFileSizeLimit]
  -[PUActivityItemSourceConfiguration _requiresAssetExportForAsset:forActivityType:]
  -[PUActivityItemSourceConfiguration _requiresAssetsLibraryURLForAsset:forActivityType:]
  -[PUActivityItemSourceConfiguration sharingVariants]
  -[PUActivityItemSourceConfiguration _wantsLivePhotoBundleForActivityType:]
  -[PUActivityItemSourceConfiguration _wantsAssetBundleForActivityType:]
  -[PUActivityItemSourceConfiguration _shouldFlattenSlomoVideoForActivityType:]
  -[PUActivityItemSourceConfiguration _videoExportPresetForActivityType:]
  -[PUActivityItemSourceConfiguration _videoExportFileTypeForActivityType:]
  -[PUActivityItemSourceConfiguration _customAccessibilityLabel]
  -[PUActivityItemSourceConfiguration setSharingVariants:]


PUFilmstripAsset : NSObject <PUDisplayAsset>
 @property  double sourceTime
 @property  AVAsset *_asset
 @property  double _normalizedTime
 @property  BOOL _isSourceTimeAccurate
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  NSString *uuid
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  CLLocation *location
 @property  double duration
 @property  BOOL favorite
 @property  BOOL hidden
 @property  NSDate *creationDate
 @property  NSDate *localCreationDate
 @property  NSDate *modificationDate
 @property  double aspectRatio
 @property  NSString *localizedGeoDescription
 @property  BOOL isTemporaryPlaceholder
 @property  NSString *uniformTypeIdentifier
 @property  unsigned long originalFilesize
 @property  BOOL isAnimatedImage
 @property  BOOL livePhoto
 @property  BOOL canPlayPhotoIris
 @property  BOOL canPlayLoopingVideo
 @property  BOOL isPhotoIrisPlaceholder
 @property  {?=qiIq} photoIrisStillDisplayTime
 @property  {?=qiIq} photoIrisVideoDuration
 @property  BOOL hasPhotoColorAdjustments
 @property  unsigned long deferredLogInfo
 @property  {?=qiIq} videoKeyFrameSourceTime
 @property  BOOL needsDeferredProcessing
 @property  unsigned short deferredProcessingNeeded
 @property  BOOL isGuestAsset
 @property  BOOL hasSyndicationInformation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilmstripAsset aspectRatio]
  -[PUFilmstripAsset modificationDate]
  -[PUFilmstripAsset uniformTypeIdentifier]
  -[PUFilmstripAsset photoIrisStillDisplayTime]
  -[PUFilmstripAsset photoIrisVideoDuration]
  -[PUFilmstripAsset mediaSubtypes]
  -[PUFilmstripAsset localCreationDate]
  -[PUFilmstripAsset isHidden]
  -[PUFilmstripAsset isGuestAsset]
  -[PUFilmstripAsset pixelWidth]
  -[PUFilmstripAsset isContentEqualTo:]
  -[PUFilmstripAsset hasPhotoColorAdjustments]
  -[PUFilmstripAsset localizedGeoDescription]
  -[PUFilmstripAsset canPlayPhotoIris]
  -[PUFilmstripAsset pixelHeight]
  -[PUFilmstripAsset init]
  -[PUFilmstripAsset isEqual:]
  -[PUFilmstripAsset isPhotoIrisPlaceholder]
  -[PUFilmstripAsset originalFilesize]
  -[PUFilmstripAsset isLivePhoto]
  -[PUFilmstripAsset location]
  -[PUFilmstripAsset isTemporaryPlaceholder]
  -[PUFilmstripAsset compare:]
  -[PUFilmstripAsset playbackStyle]
  -[PUFilmstripAsset canPlayLoopingVideo]
  -[PUFilmstripAsset deferredLogInfo]
  -[PUFilmstripAsset creationDate]
  -[PUFilmstripAsset uuid]
  -[PUFilmstripAsset mediaType]
  -[PUFilmstripAsset isFavorite]
  -[PUFilmstripAsset _asset]
  -[PUFilmstripAsset copyWithZone:]
  -[PUFilmstripAsset playbackVariation]
  -[PUFilmstripAsset _setAsset:]
  -[PUFilmstripAsset duration]
  -[PUFilmstripAsset isAnimatedImage]
  -[PUFilmstripAsset initWithNormalizedTime:asset:]
  -[PUFilmstripAsset _isSourceTimeAccurate]
  -[PUFilmstripAsset _normalizedTime]
  -[PUFilmstripAsset _setSourceTimeAccurate:]
  -[PUFilmstripAsset setSourceTime:]
  -[PUFilmstripAsset sourceTime]
  -[PUFilmstripAsset loadSourceTimeWithCompletionHandler:]
  -[PUFilmstripAsset _setNormalizedTime:]


PUContentSyndicationSaveToLibraryActivity : UIActivity <PXActivity>
 @property  <PXActivityItemSourceController> *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUContentSyndicationSaveToLibraryActivity activityCategory]

  // instance methods
  -[PUContentSyndicationSaveToLibraryActivity activityViewController]
  -[PUContentSyndicationSaveToLibraryActivity .cxx_destruct]
  -[PUContentSyndicationSaveToLibraryActivity _systemImageName]
  -[PUContentSyndicationSaveToLibraryActivity activityType]
  -[PUContentSyndicationSaveToLibraryActivity canPerformWithActivityItems:]
  -[PUContentSyndicationSaveToLibraryActivity performActivity]
  -[PUContentSyndicationSaveToLibraryActivity itemSourceController]
  -[PUContentSyndicationSaveToLibraryActivity activityTitle]
  -[PUContentSyndicationSaveToLibraryActivity setItemSourceController:]


PUFilmstripMediaProviderResult : NSObject
 @property  UIImage *image
 @property  NSDictionary *resultInfo
 @property  long long requestNumber
 @property  {CGSize=dd} targetSize
 @property  {?=qiIq} actualTime
 @property  PUFilmstripAsset *asset
 @property  BOOL isReadyForDelivery

  // instance methods
  -[PUFilmstripMediaProviderResult image]
  -[PUFilmstripMediaProviderResult targetSize]
  -[PUFilmstripMediaProviderResult setTargetSize:]
  -[PUFilmstripMediaProviderResult setResultInfo:]
  -[PUFilmstripMediaProviderResult .cxx_destruct]
  -[PUFilmstripMediaProviderResult resultInfo]
  -[PUFilmstripMediaProviderResult setAsset:]
  -[PUFilmstripMediaProviderResult asset]
  -[PUFilmstripMediaProviderResult compare:]
  -[PUFilmstripMediaProviderResult setImage:]
  -[PUFilmstripMediaProviderResult requestNumber]
  -[PUFilmstripMediaProviderResult setRequestNumber:]
  -[PUFilmstripMediaProviderResult actualTime]
  -[PUFilmstripMediaProviderResult setActualTime:]
  -[PUFilmstripMediaProviderResult isReadyForDelivery]
  -[PUFilmstripMediaProviderResult setIsReadyForDelivery:]


PUFilmstripMediaProvider : PUMediaProvider
 @property  AVAssetImageGenerator *_imageGenerator
 @property  long long _requestNumber
 @property  NSCache *_imageCache
 @property  AVAsset *asset
 @property  AVVideoComposition *videoComposition
 @property  double timeTolerance
 @property  BOOL deliversImagesInOrder
 @property  UIImage *placeholderImage

  // instance methods
  -[PUFilmstripMediaProvider placeholderImage]
  -[PUFilmstripMediaProvider setPlaceholderImage:]
  -[PUFilmstripMediaProvider cancelImageRequest:]
  -[PUFilmstripMediaProvider .cxx_destruct]
  -[PUFilmstripMediaProvider init]
  -[PUFilmstripMediaProvider asset]
  -[PUFilmstripMediaProvider _imageCache]
  -[PUFilmstripMediaProvider cancelAllRequests]
  -[PUFilmstripMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUFilmstripMediaProvider _imageGenerator]
  -[PUFilmstripMediaProvider dealloc]
  -[PUFilmstripMediaProvider videoComposition]
  -[PUFilmstripMediaProvider _requestNumber]
  -[PUFilmstripMediaProvider initWithAVAsset:videoComposition:]
  -[PUFilmstripMediaProvider _deliverPlaceholderImage]
  -[PUFilmstripMediaProvider _deliverPendingResults]
  -[PUFilmstripMediaProvider _performIvarWrite:]
  -[PUFilmstripMediaProvider _setRequestNumber:]
  -[PUFilmstripMediaProvider _handleSourceTimeLoadedForAsset:time:targetSize:contentMode:requestNumber:]
  -[PUFilmstripMediaProvider _generateImageForResult:]
  -[PUFilmstripMediaProvider _performIvarRead:]
  -[PUFilmstripMediaProvider _didGenerateImage:error:requestedTime:actualTime:generatorResult:forResult:]
  -[PUFilmstripMediaProvider deliversImagesInOrder]
  -[PUFilmstripMediaProvider _deliverResult:]
  -[PUFilmstripMediaProvider setTimeTolerance:]
  -[PUFilmstripMediaProvider setDeliversImagesInOrder:]
  -[PUFilmstripMediaProvider timeTolerance]
  -[PUFilmstripMediaProvider _setImageGenerator:]
  -[PUFilmstripMediaProvider _setImageCache:]


PUFilmstripTileViewController : PUImageTileViewController <PUAssetViewModelChangeObserver, PUBrowsingVideoPlayerTimeObserver>
 @property  PUFilmstripWrapperView *wrapperView
 @property  BOOL isExpanded
 @property  {CGSize=dd} expandedSize
 @property  {CGSize=dd} unexpandedSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilmstripTileViewController wantsVisibleRectChanges]
  -[PUFilmstripTileViewController targetSizeForProposedTargetSize:]
  -[PUFilmstripTileViewController setIsExpanded:]
  -[PUFilmstripTileViewController applyLayoutInfo:]
  -[PUFilmstripTileViewController didChangeVisibleRect]
  -[PUFilmstripTileViewController setAssetViewModel:]
  -[PUFilmstripTileViewController becomeReusable]
  -[PUFilmstripTileViewController didChangeAnimating]
  -[PUFilmstripTileViewController wrapperView]
  -[PUFilmstripTileViewController setExpandedSize:]
  -[PUFilmstripTileViewController isExpanded]
  -[PUFilmstripTileViewController setUnexpandedSize:]
  -[PUFilmstripTileViewController .cxx_destruct]
  -[PUFilmstripTileViewController unexpandedSize]
  -[PUFilmstripTileViewController expandedSize]
  -[PUFilmstripTileViewController viewModel:didChange:]
  -[PUFilmstripTileViewController videoPlayer:desiredSeekTimeDidChange:]
  -[PUFilmstripTileViewController videoPlayer:currentTimeDidChange:]
  -[PUFilmstripTileViewController setExpanded:]
  -[PUFilmstripTileViewController _updateFilmStripContents]
  -[PUFilmstripTileViewController _updateFilmstripView]
  -[PUFilmstripTileViewController loadView]
  -[PUFilmstripTileViewController _currentIndicatorInfos]


PUFilmstripWrapperView : UIView
 @property  BOOL isAnimating
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  PUFilmstripView *filmstripView
 @property  BOOL isExpanded
 @property  {CGSize=dd} expandedSize
 @property  NSNumber *anchoredLeft

  // instance methods
  -[PUFilmstripWrapperView setExpandedSize:]
  -[PUFilmstripWrapperView isExpanded]
  -[PUFilmstripWrapperView .cxx_destruct]
  -[PUFilmstripWrapperView layoutSubviews]
  -[PUFilmstripWrapperView expandedSize]
  -[PUFilmstripWrapperView isAnimating]
  -[PUFilmstripWrapperView setVisibleRect:]
  -[PUFilmstripWrapperView setAnimating:]
  -[PUFilmstripWrapperView setExpanded:]
  -[PUFilmstripWrapperView visibleRect]
  -[PUFilmstripWrapperView setAnchoredLeft:]
  -[PUFilmstripWrapperView filmstripView]
  -[PUFilmstripWrapperView setFilmstripView:]
  -[PUFilmstripWrapperView anchoredLeft]


PUFilmstripView : UIView <PXLivePhotoTrimScrubberFilmStripView, PUTilingViewTileSource, PUTilingViewTileTransitionDelegate, UIScrollViewDelegate, PHVideoScrubberFilmstripView>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  AVAsset *asset
 @property  AVVideoComposition *videoComposition
 @property  BOOL useContentAspectRatio
 @property  id thumbnailUpdatingDelegate
 @property  BOOL preserveThumbnailsDuringReload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PUTilingView *_tilingView
 @property  PUFilmstripMediaProvider *_mediaProvider
 @property  PUFilmstripDataSource *_dataSource
 @property  double _thumbnailAspectRatio
 @property  UIImage *generatedPlaceholderImage
 @property  AVAsset *asset
 @property  AVVideoComposition *videoComposition
 @property  UIImage *placeholderImage
 @property  BOOL generatesPlaceholderImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  NSArray *indicatorInfos
 @property  BOOL useContentAspectRatio
 @property  BOOL preserveThumbnailsDuringReload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilmstripView placeholderImage]
  -[PUFilmstripView setPlaceholderImage:]
  -[PUFilmstripView _updateIfNeeded]
  -[PUFilmstripView tilingView:dataSourceConverterForTransitionFromLayout:toLayout:]
  -[PUFilmstripView _setNeedsUpdate]
  -[PUFilmstripView _tilingView]
  -[PUFilmstripView .cxx_destruct]
  -[PUFilmstripView _invalidateDataSource]
  -[PUFilmstripView layoutSubviews]
  -[PUFilmstripView setAsset:]
  -[PUFilmstripView tilingView:tileControllerWithIndexPath:kind:dataSource:]
  -[PUFilmstripView tilingView:tileTransitionCoordinatorForTransitionFromLayout:toLayout:withContext:]
  -[PUFilmstripView asset]
  -[PUFilmstripView _dataSource]
  -[PUFilmstripView setVisibleRect:]
  -[PUFilmstripView setAsset:videoComposition:]
  -[PUFilmstripView _mediaProvider]
  -[PUFilmstripView _setDataSource:]
  -[PUFilmstripView initWithFrame:]
  -[PUFilmstripView tilingView:tileTransitionCoordinatorForChangeFromFrame:toFrame:duration:]
  -[PUFilmstripView _invalidateLayout]
  -[PUFilmstripView visibleRect]
  -[PUFilmstripView videoComposition]
  -[PUFilmstripView _updateLayoutIfNeeded]
  -[PUFilmstripView setIndicatorInfos:]
  -[PUFilmstripView reloadThumbnails]
  -[PUFilmstripView _invalidateThumbnailAspectRatio]
  -[PUFilmstripView _invalidateMediaProvider]
  -[PUFilmstripView _invalidateGeneratedPlaceholderImage]
  -[PUFilmstripView _updateMediaProviderPlaceholderImage]
  -[PUFilmstripView _filmstripLayout]
  -[PUFilmstripView useContentAspectRatio]
  -[PUFilmstripView _setThumbnailAspectRatio:]
  -[PUFilmstripView _setMediaProvider:]
  -[PUFilmstripView _updateThumbnailAspectRatioIfNeeded]
  -[PUFilmstripView _updateGeneratedPlaceholderImageIfNeeded]
  -[PUFilmstripView _updateDataSourceIfNeeded]
  -[PUFilmstripView _thumbnailAspectRatio]
  -[PUFilmstripView indicatorInfos]
  -[PUFilmstripView preserveThumbnailsDuringReload]
  -[PUFilmstripView generatedPlaceholderImage]
  -[PUFilmstripView generatesPlaceholderImage]
  -[PUFilmstripView setGeneratedPlaceholderImage:]
  -[PUFilmstripView _isMediaProviderValid]
  -[PUFilmstripView setGeneratesPlaceholderImage:]
  -[PUFilmstripView setUseContentAspectRatio:]
  -[PUFilmstripView _releaseAVObjects]
  -[PUFilmstripView setPreserveThumbnailsDuringReload:]
  -[PUFilmstripView setLivePhotoTrimScrubberThumbnail:]


PUFilmstripDataSource : PUTilingDataSource
 @property  AVAsset *asset
 @property  long long numberOfIndexes
 @property  NSArray *indicatorInfos

  // instance methods
  -[PUFilmstripDataSource .cxx_destruct]
  -[PUFilmstripDataSource init]
  -[PUFilmstripDataSource asset]
  -[PUFilmstripDataSource numberOfSubItemsAtIndexPath:]
  -[PUFilmstripDataSource assetAtIndexPath:]
  -[PUFilmstripDataSource setIndicatorInfos:]
  -[PUFilmstripDataSource initWithAsset:numberOfIndexes:indicatorInfos:]
  -[PUFilmstripDataSource indicatorInfos]
  -[PUFilmstripDataSource numberOfIndexes]
  -[PUFilmstripDataSource _normalizedTimeForIndexPath:]
  -[PUFilmstripDataSource indexPathForAsset:]


PUFilmstripTilingLayout : PUTilingLayout
 @property  {CGSize=dd} contentSize
 @property  PUFilmstripDataSource *dataSource

  // instance methods
  -[PUFilmstripTilingLayout contentBounds]
  -[PUFilmstripTilingLayout contentSize]
  -[PUFilmstripTilingLayout prepareLayout]
  -[PUFilmstripTilingLayout .cxx_destruct]
  -[PUFilmstripTilingLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUFilmstripTilingLayout layoutInfosForTilesInRect:]
  -[PUFilmstripTilingLayout preferredScrollInfo]
  -[PUFilmstripTilingLayout initWithContentSize:]
  -[PUFilmstripTilingLayout _layoutInfoForTileWithIndex:kind:]
  -[PUFilmstripTilingLayout _layoutInfoForIndicatorInfo:withIndex:]


PUFilmStripViewIndicatorInfo : NSObject
 @property  double normalizedLocation
 @property  UIColor *color

  // instance methods
  -[PUFilmStripViewIndicatorInfo color]
  -[PUFilmStripViewIndicatorInfo .cxx_destruct]
  -[PUFilmStripViewIndicatorInfo isEqual:]
  -[PUFilmStripViewIndicatorInfo initWithLocation:color:]
  -[PUFilmStripViewIndicatorInfo normalizedLocation]


PUFilmstripTileTransitionCoordinator : PUTileTransitionCoordinator
  // instance methods
  -[PUFilmstripTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUFilmstripTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUFilmstripTileTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]


PUFilmstripDataSourceConverter : PUTilingDataSourceConverter
  // instance methods
  -[PUFilmstripDataSourceConverter convertIndexPath:tileKind:fromDataSource:toDataSource:]


PUFilmstripIndicatorTileController : PUImageTileViewController
  // instance methods
  -[PUFilmstripIndicatorTileController loadView]


PUFilteredMomentsDataSource : NSObject <PLDiagnosticsProvider>
 @property  <PUFilteredMomentsDataSourceDelegate> *delegate
 @property  BOOL finished
 @property  NSSet *assetUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilteredMomentsDataSource isFinished]
  -[PUFilteredMomentsDataSource .cxx_destruct]
  -[PUFilteredMomentsDataSource setDelegate:]
  -[PUFilteredMomentsDataSource init]
  -[PUFilteredMomentsDataSource assetUUIDs]
  -[PUFilteredMomentsDataSource delegate]
  -[PUFilteredMomentsDataSource fetchResult]
  -[PUFilteredMomentsDataSource _inqIsCancelledWithTaskId:]
  -[PUFilteredMomentsDataSource _updateAssetUUIDs:localIdenifiers:taskId:completion:]
  -[PUFilteredMomentsDataSource _isCancelledWithTaskId:]
  -[PUFilteredMomentsDataSource _inqClearPendingChanges]
  -[PUFilteredMomentsDataSource updateAssetUUIDs:completion:]
  -[PUFilteredMomentsDataSource updateAssetUUIDs:localIdenifiers:completion:]
  -[PUFilteredMomentsDataSource mergePendingChanges]


PUFilteredMomentsViewController : PUPhotosGridViewController <PUPhotosSectionHeaderViewDelegate, PUFilteredMomentsDataSourceDelegate>
 @property  PUFilteredMomentsDataSource *filteredMomentsDataSource
 @property  NSString *emptyPlaceholderText
 @property  long long gridPresentationContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilteredMomentsViewController setEditing:animated:]
  -[PUFilteredMomentsViewController .cxx_destruct]
  -[PUFilteredMomentsViewController viewDidLoad]
  -[PUFilteredMomentsViewController oneUpPresentationOrigin]
  -[PUFilteredMomentsViewController didTapHeaderView:]
  -[PUFilteredMomentsViewController headerView:actionButtonPressed:]
  -[PUFilteredMomentsViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUFilteredMomentsViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUFilteredMomentsViewController sectionedGridLayout:accessibilitySectionHeaderHeightForVisualSection:]
  -[PUFilteredMomentsViewController filteredMomentsDataSourceHasPendingChanges:]
  -[PUFilteredMomentsViewController _getDataForVisualSection:hasActionButton:actionButtonTitle:hasDisclosure:locations:title:startDate:endDate:]
  -[PUFilteredMomentsViewController _configureSectionHeaderView:section:]
  -[PUFilteredMomentsViewController setSelected:itemsAtIndexes:inSection:animated:]
  -[PUFilteredMomentsViewController _reloadVisibleMomentHeaders]
  -[PUFilteredMomentsViewController newEmptyPlaceholderView]
  -[PUFilteredMomentsViewController emptyPlaceholderText]
  -[PUFilteredMomentsViewController gridPresentationContext]
  -[PUFilteredMomentsViewController newGridLayout]
  -[PUFilteredMomentsViewController setFilteredMomentsDataSource:]
  -[PUFilteredMomentsViewController allowSlideshowButton]
  -[PUFilteredMomentsViewController filteredMomentsDataSource]
  -[PUFilteredMomentsViewController setEmptyPlaceholderText:]
  -[PUFilteredMomentsViewController setGridPresentationContext:]


PUMergedLivePhotosVideo : NSObject
 @property  NSArray *assets
 @property  NSArray *startTimes
 @property  NSArray *keyTimes
 @property  AVAsset *mergedVideoAsset
 @property  AVVideoComposition *mergedVideoComposition
 @property  double videoAspectRatio
 @property  unsigned long options

  // instance methods
  -[PUMergedLivePhotosVideo options]
  -[PUMergedLivePhotosVideo .cxx_destruct]
  -[PUMergedLivePhotosVideo assets]
  -[PUMergedLivePhotosVideo keyTimes]
  -[PUMergedLivePhotosVideo startTimes]
  -[PUMergedLivePhotosVideo _assetIndexAtTime:]
  -[PUMergedLivePhotosVideo mergedVideoAsset]
  -[PUMergedLivePhotosVideo mergedVideoComposition]
  -[PUMergedLivePhotosVideo initWithAssets:startTimes:keyTimes:videoAsset:videoComposition:videoAspectRatio:options:]
  -[PUMergedLivePhotosVideo assetAtTime:progress:]
  -[PUMergedLivePhotosVideo videoAspectRatio]


PUFlatWhiteInterfaceTheme : NSObject <PUInterfaceTheme>
 @property  NSDictionary *sectionHeaderNotTappableTextAttributes
 @property  NSDictionary *textBlockBelowArtTitleTextAttributes
 @property  NSDictionary *textBlockBelowArtTitleEmphasizedTextAttributes
 @property  NSDictionary *textBlockBelowArtSubTitleTextAttributes
 @property  long long topLevelStatusBarStyle
 @property  UIColor *topLevelNavigationBarButtonTintColor
 @property  UIColor *photoCollectionViewBackgroundColor
 @property  int photoCollectionViewBackgroundColorValue
 @property  double photoCollectionToolbarTextTitleSpacerWidth
 @property  double photoCollectionToolbarIconToTextSpacerWidth
 @property  UIColor *albumListBackgroundColor
 @property  UIFont *albumListTitleLabelFont
 @property  UIFont *albumListSubtitleLabelFont
 @property  UIFont *albumListSectionTitleLabelFont
 @property  double albumListDisabledAlbumStackViewAlpha
 @property  double albumListDisabledAlbumTitleAlpha
 @property  UIColor *folderCellBackgroundColor
 @property  UIColor *placeholderCellBackgroundColor
 @property  UIColor *badgeOverThumbnailColor
 @property  UIColor *albumBadgeInTitleColor
 @property  UIColor *albumCornersBackgroundColor
 @property  double padAlbumCornerRadius
 @property  double phoneAlbumCornerRadius
 @property  double bannerHeight
 @property  UIColor *bannerBackgroundColor
 @property  long long photoBrowserStatusBarStyle
 @property  long long photoBrowserBarStyle
 @property  UIColor *photoBrowserChromeVisibleBackgroundColor
 @property  UIColor *photoBrowserChromeHiddenBackgroundColor
 @property  double videoPaletteSideMargin
 @property  double videoPaletteBottomMargin
 @property  NSDictionary *contentCommentsHiddenButtonTextAttributes
 @property  UIColor *contentCommentsHiddenButtonImageColor
 @property  NSDictionary *contentCommentsShownButtonTextAttributes
 @property  UIColor *contentCommentsShownButtonImageColor
 @property  {UIEdgeInsets=dddd} contentCommentsButtonImageInset
 @property  NSDictionary *toolbarCommentsHiddenButtonTextAttributes
 @property  UIColor *toolbarCommentsHiddenButtonImageColor
 @property  NSDictionary *toolbarCommentsShownButtonTextAttributes
 @property  UIColor *toolbarCommentsShownButtonImageColor
 @property  {UIEdgeInsets=dddd} commentsButtonTextInset
 @property  UIColor *toolbarAirPlayButtonColor
 @property  UIColor *photoBrowserTitleViewTextColor
 @property  UIColor *photoBrowserTitleViewTappableTextColor
 @property  UIColor *photoBrowserSpotlightThemeColor
 @property  UIFont *photoBrowserPhotoPrimaryTitleFont
 @property  UIFont *photoBrowserPhotoSubtitleFont
 @property  UIFont *photoBrowserTimeTitleFont
 @property  UIColor *playheadColor
 @property  UIColor *playheadOutlineColor
 @property  UIColor *playheadBackgroundColor
 @property  UIColor *videoScrubberTileBackgroundColor
 @property  UIFont *playbackTimeLabelFont
 @property  UIColor *playbackTimeLabelBackgroundColor
 @property  UIColor *scrubberPlaceholderColor
 @property  UIImage *compactLoadErrorIcon
 @property  UIImage *regularLoadErrorIcon
 @property  UIImage *airPlayVideoPlaceholderIcon
 @property  UIColor *airPlayVideoPlaceholderIconTintColor
 @property  UIColor *airPlayVideoPlaceholderBackgroundColor
 @property  UIColor *airPlayVideoPlaceholderTitleTextColor
 @property  UIColor *airPlayVideoPlaceholderMessageTextColor
 @property  UIFont *airPlayVideoPlaceholderTitleFont
 @property  UIFont *airPlayVideoPlaceholderMessageFont
 @property  UIColor *airPlayControllerBackgroundColor
 @property  UIColor *photoEditingToolButtonColor
 @property  UIColor *photoEditingBackgroundColor
 @property  UIColor *photoEditingPopoverBackgroundColor
 @property  UIColor *photoEditingToolbarSecondaryButtonColor
 @property  UIColor *photoEditingToolbarMainButtonColor
 @property  UIColor *photoEditingToolbarDestructiveButtonColor
 @property  UIFont *photoEditingToolbarButtonNormalFont
 @property  UIFont *photoEditingToolbarButtonCompactFont
 @property  UIColor *photoEditingAdjustmentsToolBackgroundColor
 @property  UIColor *photoEditingAdjustmentsBarBackgroundColor
 @property  UIColor *photoEditingAdjustmentsModeLabelColor
 @property  UIColor *photoEditingAdjustmentsBarMainColor
 @property  UIColor *photoEditingAdjustmentsBarHighlightColor
 @property  UIColor *photoEditingAdjustmentsBarDisabledColor
 @property  UIColor *photoEditingAdjustmentsBarCurrentPositionMarkerColor
 @property  UIColor *photoEditingAdjustmentsBarOriginalPositionMarkerColor
 @property  UIColor *photoEditingAdjustmentsBarSuggestedMarkerColor
 @property  UIFont *photoEditingAdjustmentsModeLabelFont
 @property  UIFont *photoEditingAdjustmentsModePickerFont
 @property  UIFont *photoEditingAdjustmentsModePickerValueFont
 @property  UIColor *photoEditingAdjustmentsModePickerValueColor
 @property  UIColor *photoEditingAdjustmentsBarPlayheadColor
 @property  UIColor *photoEditingTooltipColor
 @property  UIFont *photoEditingTooltipFont
 @property  UIColor *photoEditingOverlayBadgeColor
 @property  UIColor *photoEditingOverlayBadgeBackgroundColor
 @property  UIFont *photoEditingOverlayBadgeFont
 @property  UIColor *photoEditingInactiveFilterTitleColor
 @property  UIColor *photoEditingActiveFilterTitleColor
 @property  UIFont *photoEditingFilterTitleFont
 @property  UIColor *photoEditingToolbarButtonColor
 @property  UIColor *photoEditingToolbarButtonSelectedColor
 @property  UIColor *photoEditingCropTiltWheelColor
 @property  UIFont *photoEditingCropTiltWheelFont
 @property  UIFont *photoEditingCropToggleButtonFont
 @property  UIColor *photoEditingCropToggleButtonColor
 @property  UIColor *photoEditingAutoEnhanceEnabledColor
 @property  UIColor *photoEditingAutoEnhanceDisabledColor
 @property  UIColor *photoEditingIrisEnabledColor
 @property  UIColor *photoEditingIrisDisabledColor
 @property  UIColor *photoEditingDepthButtonEnabledColor
 @property  UIColor *photoEditingDepthButtonDisabledColor
 @property  UIColor *photoEditingDepthBadgeEnabledColor
 @property  UIColor *photoEditingDepthBadgeDisabledColor
 @property  UIColor *photoEditingDepthBadgeEnabledTextColor
 @property  UIColor *photoEditingDepthBadgeDisabledTextColor
 @property  UIColor *photoEditingToolbarLightGradientStartColor
 @property  UIColor *photoEditingToolbarLightGradientEndColor
 @property  UIColor *photoEditingToolbarUltralightGradientStartColor
 @property  UIColor *photoEditingToolbarUltralightGradientEndColor
 @property  UIColor *photoEditingToolbarDarkGradientStartColor
 @property  UIColor *photoEditingToolbarDarkGradientEndColor
 @property  UIColor *photoEditingToolbarUnderlineColor
 @property  UIColor *photoEditingKeyPhotoSelectionNormalColor
 @property  UIColor *topToolbarToolLabelButtonColor
 @property  UIFont *topToolbarToolLabelFont
 @property  UIColor *videoEditingBackgroundColor
 @property  UIFont *videoEditingToolbarButtonNormalFont
 @property  UIColor *videoEditingToolbarMainButtonColor
 @property  UIColor *videoEditingToolbarDestructiveButtonColor
 @property  UIColor *videoEditingToolbarSecondaryButtonColor
 @property  UIColor *videoEditingToolbarToolButtonColor
 @property  UIColor *cloudFeedBackgroundColor
 @property  UIColor *cloudFeedSeparatorColor
 @property  double cloudFeedSeparatorHeight
 @property  NSDictionary *cloudFeedDefaultTextAttributes
 @property  NSDictionary *cloudFeedEmphasizedTextAttributes
 @property  NSDictionary *cloudFeedWhiteDefaultTextAttributes
 @property  NSDictionary *cloudFeedWhiteEmphasizedTextAttributes
 @property  NSDictionary *cloudFeedLargerDefaultTextAttributes
 @property  NSDictionary *cloudFeedLargerEmphasizedTextAttributes
 @property  NSDictionary *cloudFeedInvitationTitleTextAttributes
 @property  NSDictionary *cloudFeedInvitationSubtitleTextAttributes
 @property  NSDictionary *cloudFeedInteractionTextAttributes
 @property  NSDictionary *cloudFeedInteractionLargerTextAttributes
 @property  UIImage *cloudFeedSectionHeaderBackgroundImage
 @property  UIFont *sharedAlbumCommentCardTitleFont
 @property  UIFont *sharedAlbumCommentCardTextFont
 @property  UIFont *sharedAlbumCommentCardButtonFont
 @property  UIFont *sharedAlbumCommentCardAlbumTitleFont
 @property  UIFont *searchRecentLabelFont
 @property  UIColor *searchRecentLabelTextColor
 @property  UIFont *searchTitleLabelFont
 @property  UIFont *searchItalicTitleLabelFont
 @property  UIFont *searchSubtitleLabelFont
 @property  UIColor *searchSubtitleTextColor
 @property  UIFont *searchResultCountLabelFont
 @property  UIColor *searchResultCountTextColor
 @property  double searchSingleTitleTopBaselineDistance
 @property  double searchSingleTitleBottomBaselineDistance
 @property  double searchTitleTopBaselineDistance
 @property  double searchTitleSubtitleBaselineDistance
 @property  double searchSubtitleBottomBaselineDistance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFlatWhiteInterfaceTheme albumListSectionTitleLabelFont]
  -[PUFlatWhiteInterfaceTheme albumListTitleLabelFont]
  -[PUFlatWhiteInterfaceTheme topToolbarToolLabelButtonColor]
  -[PUFlatWhiteInterfaceTheme topToolbarToolLabelFont]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderBackgroundColor]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderIcon]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderIconTintColor]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderTitleTextColor]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderTitleFont]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderMessageTextColor]
  -[PUFlatWhiteInterfaceTheme airPlayVideoPlaceholderMessageFont]
  -[PUFlatWhiteInterfaceTheme albumListSubtitleLabelFont]
  -[PUFlatWhiteInterfaceTheme airPlayControllerBackgroundColor]
  -[PUFlatWhiteInterfaceTheme albumListDisabledAlbumStackViewAlpha]
  -[PUFlatWhiteInterfaceTheme albumListDisabledAlbumTitleAlpha]
  -[PUFlatWhiteInterfaceTheme configureAlbumListTitleTextField:asOpaque:]
  -[PUFlatWhiteInterfaceTheme configureAlbumListTitleLabel:asOpaque:]
  -[PUFlatWhiteInterfaceTheme configureAlbumListSubtitleLabel:asOpaque:]
  -[PUFlatWhiteInterfaceTheme albumCornersBackgroundColor]
  -[PUFlatWhiteInterfaceTheme folderCellBackgroundColor]
  -[PUFlatWhiteInterfaceTheme placeholderCellBackgroundColor]
  -[PUFlatWhiteInterfaceTheme configureAlbumListSectionTitleLabel:]
  -[PUFlatWhiteInterfaceTheme photoCollectionViewBackgroundColor]
  -[PUFlatWhiteInterfaceTheme phoneAlbumCornerRadius]
  -[PUFlatWhiteInterfaceTheme padAlbumCornerRadius]
  -[PUFlatWhiteInterfaceTheme compactLoadErrorIcon]
  -[PUFlatWhiteInterfaceTheme playheadColor]
  -[PUFlatWhiteInterfaceTheme playheadOutlineColor]
  -[PUFlatWhiteInterfaceTheme playheadBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserBarStyle]
  -[PUFlatWhiteInterfaceTheme photoBrowserTitleViewTextColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserSpotlightThemeColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserTitleViewTappableTextColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserChromeVisibleBackgroundColor]
  -[PUFlatWhiteInterfaceTheme scrubberPlaceholderColor]
  -[PUFlatWhiteInterfaceTheme tintColorForBarStyle:]
  -[PUFlatWhiteInterfaceTheme photoBrowserChromeHiddenBackgroundColor]
  -[PUFlatWhiteInterfaceTheme regularLoadErrorIcon]
  -[PUFlatWhiteInterfaceTheme photoCollectionToolbarTextTitleSpacerWidth]
  -[PUFlatWhiteInterfaceTheme photoEditingBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarButtonSelectedColor]
  -[PUFlatWhiteInterfaceTheme photoEditingIrisEnabledColor]
  -[PUFlatWhiteInterfaceTheme configureEditPluginNavigationController:]
  -[PUFlatWhiteInterfaceTheme cloudFeedSectionHeaderBackgroundImage]
  -[PUFlatWhiteInterfaceTheme createCloudFeedCommentButton]
  -[PUFlatWhiteInterfaceTheme configureCloudFeedCommentButton:withCount:]
  -[PUFlatWhiteInterfaceTheme cloudFeedDefaultTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedEmphasizedTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedInteractionTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedInteractionLargerTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedBackgroundColor]
  -[PUFlatWhiteInterfaceTheme configureCloudFeedStackView:withStackSize:]
  -[PUFlatWhiteInterfaceTheme cloudFeedSeparatorColor]
  -[PUFlatWhiteInterfaceTheme textBlockBelowArtTitleTextAttributes]
  -[PUFlatWhiteInterfaceTheme textBlockBelowArtTitleEmphasizedTextAttributes]
  -[PUFlatWhiteInterfaceTheme configureCloudFeedSectionHeaderTextCell:contentInsets:descriptionAttributedText:detailAttributedText:]
  -[PUFlatWhiteInterfaceTheme cloudFeedLargerEmphasizedTextAttributes]
  -[PUFlatWhiteInterfaceTheme attributedStringForCloudFeedGroupHeaderWithText:]
  -[PUFlatWhiteInterfaceTheme configureCloudFeedGroupHeaderTextCell:contentInsets:withText:]
  -[PUFlatWhiteInterfaceTheme cloudFeedWhiteDefaultTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedWhiteEmphasizedTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedSeparatorHeight]
  -[PUFlatWhiteInterfaceTheme textBlockBelowArtSubTitleTextAttributes]
  -[PUFlatWhiteInterfaceTheme themeImagePrefix]
  -[PUFlatWhiteInterfaceTheme _fontDescriptorWithTextStyle:addingSymbolicTraits:]
  -[PUFlatWhiteInterfaceTheme topLevelStatusBarStyle]
  -[PUFlatWhiteInterfaceTheme _commentsFont]
  -[PUFlatWhiteInterfaceTheme contentCommentsHiddenButtonImageColor]
  -[PUFlatWhiteInterfaceTheme contentCommentsShownButtonImageColor]
  -[PUFlatWhiteInterfaceTheme contentCommentsShownButtonTextAttributes]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarButtonNormalFont]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsModeLabelFont]
  -[PUFlatWhiteInterfaceTheme sectionHeaderNotTappableTextAttributes]
  -[PUFlatWhiteInterfaceTheme commentsButtonTextInset]
  -[PUFlatWhiteInterfaceTheme commentsButtonStringForCount:]
  -[PUFlatWhiteInterfaceTheme searchTitleLabelFont]
  -[PUFlatWhiteInterfaceTheme searchTitleTextColor]
  -[PUFlatWhiteInterfaceTheme searchSubtitleLabelFont]
  -[PUFlatWhiteInterfaceTheme searchSubtitleTextColor]
  -[PUFlatWhiteInterfaceTheme searchResultCountLabelFont]
  -[PUFlatWhiteInterfaceTheme searchResultCountTextColor]
  -[PUFlatWhiteInterfaceTheme searchItalicTitleLabelFont]
  -[PUFlatWhiteInterfaceTheme searchTitleDimmedTextColor]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarButtonTitleTextAttributesForState:]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarDoneButtonTitleTextAttributesForState:]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarButtonTitlePositionAdjustmentforBarMetrics:]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarButtonBackgroundImageForState:barMetrics:]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarBackButtonBackgroundImageForState:barMetrics:]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarDoneButtonBackgroundImageForState:barMetrics:]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerFont]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerBackgroundColorHighlighted:]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerTextAlignment]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerTextColorHighlighted:]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerTextMargins]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerLinkTextFont]
  -[PUFlatWhiteInterfaceTheme photoCollectionCloudQuotaBannerLinkTextColorHighlighted:]
  -[PUFlatWhiteInterfaceTheme configureAlbumListStackViewPhonePhotoDecoration:]
  -[PUFlatWhiteInterfaceTheme configureBannerStackView:]
  -[PUFlatWhiteInterfaceTheme configureBannerLabel:]
  -[PUFlatWhiteInterfaceTheme configureMapViewAnnotationCountLabel:]
  -[PUFlatWhiteInterfaceTheme configureProgressIndicatorMessageLabel:]
  -[PUFlatWhiteInterfaceTheme configureCompactProgressIndicatorMessageLabel:]
  -[PUFlatWhiteInterfaceTheme configureCloudFeedInvitationReplyButton:]
  -[PUFlatWhiteInterfaceTheme configureEditPluginListNavigationController:]
  -[PUFlatWhiteInterfaceTheme configureEditPluginListCellLabel:]
  -[PUFlatWhiteInterfaceTheme configureEditPluginUserDefaultsTableView:]
  -[PUFlatWhiteInterfaceTheme configureEditPluginUserDefaultsCell:withIcon:title:]
  -[PUFlatWhiteInterfaceTheme configureEditPluginUserDefaultsAccessorySwitch:]
  -[PUFlatWhiteInterfaceTheme configureSearchTitleLabel:]
  -[PUFlatWhiteInterfaceTheme configureSearchSubtitleLabel:]
  -[PUFlatWhiteInterfaceTheme configureSearchResultCountLabel:]
  -[PUFlatWhiteInterfaceTheme searchDefaultAttributes]
  -[PUFlatWhiteInterfaceTheme searchItalicTitleAttributes]
  -[PUFlatWhiteInterfaceTheme searchDimmedAttributes]
  -[PUFlatWhiteInterfaceTheme topLevelNavigationBarButtonTintColor]
  -[PUFlatWhiteInterfaceTheme photoCollectionViewBackgroundColorValue]
  -[PUFlatWhiteInterfaceTheme photoCollectionToolbarIconToTextSpacerWidth]
  -[PUFlatWhiteInterfaceTheme albumListBackgroundColor]
  -[PUFlatWhiteInterfaceTheme badgeOverThumbnailColor]
  -[PUFlatWhiteInterfaceTheme albumBadgeInTitleColor]
  -[PUFlatWhiteInterfaceTheme bannerHeight]
  -[PUFlatWhiteInterfaceTheme bannerBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserStatusBarStyle]
  -[PUFlatWhiteInterfaceTheme videoPaletteSideMargin]
  -[PUFlatWhiteInterfaceTheme videoPaletteBottomMargin]
  -[PUFlatWhiteInterfaceTheme contentCommentsHiddenButtonTextAttributes]
  -[PUFlatWhiteInterfaceTheme contentCommentsButtonImageInset]
  -[PUFlatWhiteInterfaceTheme toolbarCommentsHiddenButtonTextAttributes]
  -[PUFlatWhiteInterfaceTheme toolbarCommentsHiddenButtonImageColor]
  -[PUFlatWhiteInterfaceTheme toolbarCommentsShownButtonTextAttributes]
  -[PUFlatWhiteInterfaceTheme toolbarCommentsShownButtonImageColor]
  -[PUFlatWhiteInterfaceTheme toolbarAirPlayButtonColor]
  -[PUFlatWhiteInterfaceTheme photoBrowserPhotoPrimaryTitleFont]
  -[PUFlatWhiteInterfaceTheme photoBrowserPhotoSubtitleFont]
  -[PUFlatWhiteInterfaceTheme photoBrowserTimeTitleFont]
  -[PUFlatWhiteInterfaceTheme videoScrubberTileBackgroundColor]
  -[PUFlatWhiteInterfaceTheme playbackTimeLabelFont]
  -[PUFlatWhiteInterfaceTheme playbackTimeLabelBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingPopoverBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarSecondaryButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarMainButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarDestructiveButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarButtonCompactFont]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsToolBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsModeLabelColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarMainColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarHighlightColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarDisabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarCurrentPositionMarkerColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarOriginalPositionMarkerColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarSuggestedMarkerColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsModePickerFont]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsModePickerValueFont]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsModePickerValueColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAdjustmentsBarPlayheadColor]
  -[PUFlatWhiteInterfaceTheme photoEditingTooltipColor]
  -[PUFlatWhiteInterfaceTheme photoEditingTooltipFont]
  -[PUFlatWhiteInterfaceTheme photoEditingOverlayBadgeColor]
  -[PUFlatWhiteInterfaceTheme photoEditingOverlayBadgeBackgroundColor]
  -[PUFlatWhiteInterfaceTheme photoEditingOverlayBadgeFont]
  -[PUFlatWhiteInterfaceTheme photoEditingInactiveFilterTitleColor]
  -[PUFlatWhiteInterfaceTheme photoEditingActiveFilterTitleColor]
  -[PUFlatWhiteInterfaceTheme photoEditingFilterTitleFont]
  -[PUFlatWhiteInterfaceTheme photoEditingCropTiltWheelColor]
  -[PUFlatWhiteInterfaceTheme photoEditingCropTiltWheelFont]
  -[PUFlatWhiteInterfaceTheme photoEditingCropToggleButtonFont]
  -[PUFlatWhiteInterfaceTheme photoEditingCropToggleButtonColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAutoEnhanceEnabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingAutoEnhanceDisabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingIrisDisabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthButtonEnabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthButtonDisabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthBadgeEnabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthBadgeDisabledColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthBadgeEnabledTextColor]
  -[PUFlatWhiteInterfaceTheme photoEditingDepthBadgeDisabledTextColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarLightGradientStartColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarLightGradientEndColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarUltralightGradientStartColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarUltralightGradientEndColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarDarkGradientStartColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarDarkGradientEndColor]
  -[PUFlatWhiteInterfaceTheme photoEditingToolbarUnderlineColor]
  -[PUFlatWhiteInterfaceTheme photoEditingKeyPhotoSelectionNormalColor]
  -[PUFlatWhiteInterfaceTheme videoEditingBackgroundColor]
  -[PUFlatWhiteInterfaceTheme videoEditingToolbarButtonNormalFont]
  -[PUFlatWhiteInterfaceTheme videoEditingToolbarMainButtonColor]
  -[PUFlatWhiteInterfaceTheme videoEditingToolbarDestructiveButtonColor]
  -[PUFlatWhiteInterfaceTheme videoEditingToolbarSecondaryButtonColor]
  -[PUFlatWhiteInterfaceTheme videoEditingToolbarToolButtonColor]
  -[PUFlatWhiteInterfaceTheme cloudFeedLargerDefaultTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedInvitationTitleTextAttributes]
  -[PUFlatWhiteInterfaceTheme cloudFeedInvitationSubtitleTextAttributes]
  -[PUFlatWhiteInterfaceTheme sharedAlbumCommentCardTitleFont]
  -[PUFlatWhiteInterfaceTheme sharedAlbumCommentCardTextFont]
  -[PUFlatWhiteInterfaceTheme sharedAlbumCommentCardButtonFont]
  -[PUFlatWhiteInterfaceTheme sharedAlbumCommentCardAlbumTitleFont]
  -[PUFlatWhiteInterfaceTheme searchRecentLabelFont]
  -[PUFlatWhiteInterfaceTheme searchRecentLabelTextColor]
  -[PUFlatWhiteInterfaceTheme searchSingleTitleTopBaselineDistance]
  -[PUFlatWhiteInterfaceTheme searchSingleTitleBottomBaselineDistance]
  -[PUFlatWhiteInterfaceTheme searchTitleTopBaselineDistance]
  -[PUFlatWhiteInterfaceTheme searchTitleSubtitleBaselineDistance]
  -[PUFlatWhiteInterfaceTheme searchSubtitleBottomBaselineDistance]
  -[PUFlatWhiteInterfaceTheme _themeImageWithBaseName:]
  -[PUFlatWhiteInterfaceTheme searchTitleLabelHighlightedFont]


PUFontManager : PXObservable
 @property  UIFont *albumListTitleLabelFont
 @property  UIFont *albumListSubtitleLabelFont
 @property  UIFont *albumListSectionTitleLabelFont

  // instance methods
  -[PUFontManager mutableChangeObject]
  -[PUFontManager _setNeedsUpdate]
  -[PUFontManager setAlbumListSubtitleLabelFont:]
  -[PUFontManager .cxx_destruct]
  -[PUFontManager albumListSectionTitleLabelFont]
  -[PUFontManager init]
  -[PUFontManager invalidateFonts]
  -[PUFontManager setAlbumListSectionTitleLabelFont:]
  -[PUFontManager albumListTitleLabelFont]
  -[PUFontManager dealloc]
  -[PUFontManager albumListSubtitleLabelFont]
  -[PUFontManager setAlbumListTitleLabelFont:]
  -[PUFontManager _preferredContentSizeChanged:]


PUForYouSuggestionActionPerformer : PUAssetActionPerformer
 @property  PXForYouSuggestionDisplayAsset *asset
 @property  PXPhotoKitAdjustedUIMediaProvider *mediaProvider
 @property  <PUForYouSuggestionActionPerformerDelegate> *statusDelegate

  // instance methods
  -[PUForYouSuggestionActionPerformer initWithAsset:]
  -[PUForYouSuggestionActionPerformer .cxx_destruct]
  -[PUForYouSuggestionActionPerformer mediaProvider]
  -[PUForYouSuggestionActionPerformer init]
  -[PUForYouSuggestionActionPerformer asset]
  -[PUForYouSuggestionActionPerformer statusDelegate]
  -[PUForYouSuggestionActionPerformer setStatusDelegate:]


PUForYouSuggestionSaveActionPerformer : PUForYouSuggestionActionPerformer
 @property  BOOL isReverting

  // instance methods
  -[PUForYouSuggestionSaveActionPerformer initWithAsset:]
  -[PUForYouSuggestionSaveActionPerformer performWithCompletionHandler:]
  -[PUForYouSuggestionSaveActionPerformer _dismissPresentedViewController:]
  -[PUForYouSuggestionSaveActionPerformer initWithAsset:isReverting:]
  -[PUForYouSuggestionSaveActionPerformer _performLoopingVideoSaveWithCompletionHandler:]
  -[PUForYouSuggestionSaveActionPerformer _performLivePhotoSaveWithCompletionHandler:]
  -[PUForYouSuggestionSaveActionPerformer _performImageSaveWithCompletionHandler:]
  -[PUForYouSuggestionSaveActionPerformer _updateSuggestionState]
  -[PUForYouSuggestionSaveActionPerformer _handleSuccess:]
  -[PUForYouSuggestionSaveActionPerformer isReverting]
  -[PUForYouSuggestionSaveActionPerformer _displayFailureAlert]


PUForYouSuggestionsActionManager : PUAssetActionManager <PUForYouSuggestionActionPerformerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUForYouSuggestionsActionManager .cxx_destruct]
  -[PUForYouSuggestionsActionManager init]
  -[PUForYouSuggestionsActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUForYouSuggestionsActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUForYouSuggestionsActionManager canPerformAction:onAllAssetsByAssetCollection:]
  -[PUForYouSuggestionsActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUForYouSuggestionsActionManager shouldEnableActionType:onAllAssetsByAssetCollection:]
  -[PUForYouSuggestionsActionManager forYouSuggestionActionPerformerDidBegin:]
  -[PUForYouSuggestionsActionManager forYouSuggestionActionPerformerDidFinish:]


PUEditingExtensionUndoProxyHostSide : NSObject <PUEditingExtensionUndoButtonHost, NSXPCListenerDelegate, PUEditingExtensionUndoTarget>
 @property  NSXPCListener *listener
 @property  NSXPCConnection *connection
 @property  NSXPCListenerEndpoint *listenerEndpoint
 @property  <PUEditingExtensionUndoButtonHost> *target
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditingExtensionUndoProxyHostSide remoteObject]
  -[PUEditingExtensionUndoProxyHostSide listenerEndpoint]
  -[PUEditingExtensionUndoProxyHostSide .cxx_destruct]
  -[PUEditingExtensionUndoProxyHostSide setConnection:]
  -[PUEditingExtensionUndoProxyHostSide init]
  -[PUEditingExtensionUndoProxyHostSide listener]
  -[PUEditingExtensionUndoProxyHostSide connection]
  -[PUEditingExtensionUndoProxyHostSide setTarget:]
  -[PUEditingExtensionUndoProxyHostSide target]
  -[PUEditingExtensionUndoProxyHostSide setShowUndoRedo:]
  -[PUEditingExtensionUndoProxyHostSide setUndoEnabled:redoEnabled:]
  -[PUEditingExtensionUndoProxyHostSide performUndo]
  -[PUEditingExtensionUndoProxyHostSide performRedo]
  -[PUEditingExtensionUndoProxyHostSide listener:shouldAcceptNewConnection:]


PUEditingExtensionUndoProxyExtensionSide : NSObject <PUEditingExtensionUndoButtonHost>
 @property  NSXPCConnection *connection
 @property  <PUEditingExtensionUndoTarget> *target
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUEditingExtensionUndoProxyExtensionSide remoteObject]
  -[PUEditingExtensionUndoProxyExtensionSide initWithEndpoint:]
  -[PUEditingExtensionUndoProxyExtensionSide .cxx_destruct]
  -[PUEditingExtensionUndoProxyExtensionSide connection]
  -[PUEditingExtensionUndoProxyExtensionSide setTarget:]
  -[PUEditingExtensionUndoProxyExtensionSide target]
  -[PUEditingExtensionUndoProxyExtensionSide setShowUndoRedo:]
  -[PUEditingExtensionUndoProxyExtensionSide setUndoEnabled:redoEnabled:]
  -[PUEditingExtensionUndoProxyExtensionSide performUndo]
  -[PUEditingExtensionUndoProxyExtensionSide performRedo]


PUFunEffectsViewController : UIViewController <PXChangeObserver, CFXReviewViewControllerDelegate, PUOneUpAssetTransitionViewController>
 @property  PUObserverRegistry *_observerRegistry
 @property  CFXReviewViewController *_effectsViewController
 @property  PUReviewScreenTopBar *_topBar
 @property  PUReviewScreenControlBar *_controlBar
 @property  BOOL _inputHasKnownAdjustments
 @property  long long _inputAdjustmentBaseVersion
 @property  PUReviewAdjustmentOutput *_exportAdjustmentOutput
 @property  unsigned long _exportCompletion
 @property  PUProgressIndicatorView *_progressIndicatorView
 @property  BOOL _shouldHideBars
 @property  PUReviewAsset *reviewAsset
 @property  PUMediaProvider *mediaProvider
 @property  PUReviewScreenBarsModel *reviewBarsModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFunEffectsViewController _topBar]
  -[PUFunEffectsViewController unregisterObserver:]
  -[PUFunEffectsViewController _updateLayout]
  -[PUFunEffectsViewController registerObserver:]
  -[PUFunEffectsViewController viewWillLayoutSubviews]
  -[PUFunEffectsViewController _updateBars]
  -[PUFunEffectsViewController _progressIndicatorView]
  -[PUFunEffectsViewController .cxx_destruct]
  -[PUFunEffectsViewController mediaProvider]
  -[PUFunEffectsViewController viewDidLoad]
  -[PUFunEffectsViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[PUFunEffectsViewController _handleCompletion:]
  -[PUFunEffectsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUFunEffectsViewController observable:didChange:context:]
  -[PUFunEffectsViewController setReviewBarsModel:]
  -[PUFunEffectsViewController initWithReviewAsset:mediaProvider:]
  -[PUFunEffectsViewController reviewBarsModel]
  -[PUFunEffectsViewController oneUpAssetTransition:requestTransitionContextWithCompletion:]
  -[PUFunEffectsViewController oneUpAssetTransition:animateTransitionWithContext:duration:completion:]
  -[PUFunEffectsViewController oneUpAssetTransitionWillBegin:]
  -[PUFunEffectsViewController oneUpAssetTransitionDidEnd:]
  -[PUFunEffectsViewController reviewAsset]
  -[PUFunEffectsViewController _handleDidTapFunEffectsButton:]
  -[PUFunEffectsViewController _handleDidTapMarkupButton:]
  -[PUFunEffectsViewController _handleDidTapEditButton:]
  -[PUFunEffectsViewController _handleDidTapSendButton:]
  -[PUFunEffectsViewController _handleDidTapDoneButton:]
  -[PUFunEffectsViewController _handleDidTapRetakeButton:]
  -[PUFunEffectsViewController _controlBar]
  -[PUFunEffectsViewController _barControlsForModelControls:transitioning:]
  -[PUFunEffectsViewController _setShouldHideBars:animated:]
  -[PUFunEffectsViewController _effectsViewController]
  -[PUFunEffectsViewController _updateProgressIndicatorWithProgress:]
  -[PUFunEffectsViewController _handleExportFailureWithError:]
  -[PUFunEffectsViewController _finishExportingWithMediaItem:]
  -[PUFunEffectsViewController _exportAdjustmentOutput]
  -[PUFunEffectsViewController _handleExportWithCompletion:]
  -[PUFunEffectsViewController _handleDismissCompletion]
  -[PUFunEffectsViewController _signalCompletion:withSavedAsset:]
  -[PUFunEffectsViewController _inputHasKnownAdjustments]
  -[PUFunEffectsViewController _exportWithCompletion:]
  -[PUFunEffectsViewController set_exportCompletion:]
  -[PUFunEffectsViewController _inputAdjustmentBaseVersion]
  -[PUFunEffectsViewController set_exportAdjustmentOutput:]
  -[PUFunEffectsViewController _showProgressIndicator]
  -[PUFunEffectsViewController _dismissProgressIndicator]
  -[PUFunEffectsViewController _exportCompletion]
  -[PUFunEffectsViewController _setProgressIndicatorView:]
  -[PUFunEffectsViewController _observerRegistry]
  -[PUFunEffectsViewController reviewViewController:didFinishExportingMediaItem:withError:]
  -[PUFunEffectsViewController reviewViewController:didProgress:exportingMediaItem:]
  -[PUFunEffectsViewController reviewViewController:didStartExportingMediaItem:]
  -[PUFunEffectsViewController reviewViewControllerDidHideUserInterface:]
  -[PUFunEffectsViewController reviewViewControllerDidShowUserInterface:]
  -[PUFunEffectsViewController _setShouldHideBars:]
  -[PUFunEffectsViewController reviewViewControllerEffectsButtonWasTapped:]
  -[PUFunEffectsViewController _shouldHideBars]


PUGridMagnifiedImageViewController : UIViewController
 @property  PUGridMagnifiedView *magnifiedView
 @property  {CGPoint=dd} lastLocation
 @property  id delegate
 @property  {CGPoint=dd} gestureWindLocation
 @property  NSIndexPath *itemIndexPath
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} itemWindFrame
 @property  BOOL canShowFullScreen
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackingWindFrame
 @property  double magnifiedYOffset
 @property  {UIEdgeInsets=dddd} magnifiedDragEdgeInsets
 @property  {CGSize=dd} imageSize
 @property  {CGSize=dd} magnifiedSize
 @property  {CGSize=dd} shadowOffset
 @property  double shadowRadius
 @property  double shadowOpacity

  // instance methods
  -[PUGridMagnifiedImageViewController setLastLocation:]
  -[PUGridMagnifiedImageViewController lastLocation]
  -[PUGridMagnifiedImageViewController setImageSize:]
  -[PUGridMagnifiedImageViewController setShadowRadius:]
  -[PUGridMagnifiedImageViewController .cxx_destruct]
  -[PUGridMagnifiedImageViewController setDelegate:]
  -[PUGridMagnifiedImageViewController setShadowOffset:]
  -[PUGridMagnifiedImageViewController magnifiedDragEdgeInsets]
  -[PUGridMagnifiedImageViewController magnifiedYOffset]
  -[PUGridMagnifiedImageViewController imageSize]
  -[PUGridMagnifiedImageViewController shadowRadius]
  -[PUGridMagnifiedImageViewController initWithDelegate:]
  -[PUGridMagnifiedImageViewController prepareForRelease]
  -[PUGridMagnifiedImageViewController delegate]
  -[PUGridMagnifiedImageViewController shadowOpacity]
  -[PUGridMagnifiedImageViewController shadowOffset]
  -[PUGridMagnifiedImageViewController loadView]
  -[PUGridMagnifiedImageViewController setShadowOpacity:]
  -[PUGridMagnifiedImageViewController setupMagnifiedView]
  -[PUGridMagnifiedImageViewController gestureWindLocation]
  -[PUGridMagnifiedImageViewController itemWindFrame]
  -[PUGridMagnifiedImageViewController magnifiedView]
  -[PUGridMagnifiedImageViewController gestureInNewLocation]
  -[PUGridMagnifiedImageViewController setMagnifiedView:]
  -[PUGridMagnifiedImageViewController installMagnifiedView]
  -[PUGridMagnifiedImageViewController imageForMagnifyLocation:]
  -[PUGridMagnifiedImageViewController magnifiedSize]
  -[PUGridMagnifiedImageViewController setMagnifiedDragEdgeInsets:]
  -[PUGridMagnifiedImageViewController itemIndexPath]
  -[PUGridMagnifiedImageViewController setItemIndexPath:]
  -[PUGridMagnifiedImageViewController trackingWindFrame]
  -[PUGridMagnifiedImageViewController isValidMagnifyLocation:]
  -[PUGridMagnifiedImageViewController imageForIndexPath:]
  -[PUGridMagnifiedImageViewController setGestureWindLocation:]
  -[PUGridMagnifiedImageViewController beginMagnificationAnimated:]
  -[PUGridMagnifiedImageViewController continueMagnification]
  -[PUGridMagnifiedImageViewController hideMagnifiedThumbnailWithAnimation:]
  -[PUGridMagnifiedImageViewController magnifiedImageWindFrame]
  -[PUGridMagnifiedImageViewController setItemWindFrame:]
  -[PUGridMagnifiedImageViewController canShowFullScreen]
  -[PUGridMagnifiedImageViewController setTrackingWindFrame:]
  -[PUGridMagnifiedImageViewController setMagnifiedYOffset:]
  -[PUGridMagnifiedImageViewController setMagnifiedSize:]


PUGridMagnifiedView : UIView
 @property  UIImageView *imageView
 @property  {CGSize=dd} magnifiedImageSize
 @property  NSIndexPath *itemIndexPath
 @property  UIImage *itemImage
 @property  {UIEdgeInsets=dddd} magnifiedDragEdgeInsets

  // instance methods
  -[PUGridMagnifiedView imageView]
  -[PUGridMagnifiedView setShadowRadius:]
  -[PUGridMagnifiedView .cxx_destruct]
  -[PUGridMagnifiedView setShadowOffset:]
  -[PUGridMagnifiedView magnifiedDragEdgeInsets]
  -[PUGridMagnifiedView initWithFrame:]
  -[PUGridMagnifiedView magnifiedImageSize]
  -[PUGridMagnifiedView setImageView:]
  -[PUGridMagnifiedView itemImage]
  -[PUGridMagnifiedView setShadowOpacity:]
  -[PUGridMagnifiedView magnifyFromImageFrame:toLocation:animate:]
  -[PUGridMagnifiedView setImageAnimate:]
  -[PUGridMagnifiedView moveToLocation:animate:]
  -[PUGridMagnifiedView setItemImage:]
  -[PUGridMagnifiedView setMagnifiedImageSize:]
  -[PUGridMagnifiedView setMagnifiedDragEdgeInsets:]
  -[PUGridMagnifiedView itemIndexPath]
  -[PUGridMagnifiedView setItemIndexPath:]
  -[PUGridMagnifiedView hideAnimate:]
  -[PUGridMagnifiedView imageWindFrame]
  -[PUGridMagnifiedView photoFrameForViewFrame:]
  -[PUGridMagnifiedView viewFrameForPhotoFrame:]
  -[PUGridMagnifiedView magnifiedFrameForParentLocation:]
  -[PUGridMagnifiedView pinFrameToParentFrame:]


PUGridPinchGestureRecognizer : UIPinchGestureRecognizer
 @property  double transitionProgress
 @property  {CGSize=dd} centerOffset
 @property  unsigned long transitionDirection
 @property  BOOL transitionShouldFinish

  // instance methods
  -[PUGridPinchGestureRecognizer centerOffset]
  -[PUGridPinchGestureRecognizer setState:]
  -[PUGridPinchGestureRecognizer transitionProgress]
  -[PUGridPinchGestureRecognizer reset]
  -[PUGridPinchGestureRecognizer _resetTransitionState]
  -[PUGridPinchGestureRecognizer transitionDirection]
  -[PUGridPinchGestureRecognizer transitionShouldFinish]


PUGridRenderedStrip : UICollectionReusableView
 @property  BOOL _needsRendering
 @property  UIView *_sideExtendedContentView
 @property  {CGSize=dd} itemSize
 @property  double itemContentScale
 @property  {CGSize=dd} interItemSpacing
 @property  double leftContentInset
 @property  int backgroundColorValue
 @property  NSArray *itemIndexPaths
 @property  long long visualSectionIndex
 @property  {_NSRange=QQ} visualItemRange
 @property  <PUGridRenderedStripDataSource> *dataSource
 @property  PUSectionedGridLayout *layout
 @property  long long numberOfColumns
 @property  unsigned long contentExtenderType
 @property  BOOL extendsToTop
 @property  UIView *topContentView

  // instance methods
  -[PUGridRenderedStrip setInterItemSpacing:]
  -[PUGridRenderedStrip numberOfColumns]
  -[PUGridRenderedStrip setDataSource:]
  -[PUGridRenderedStrip backgroundColorValue]
  -[PUGridRenderedStrip .cxx_destruct]
  -[PUGridRenderedStrip layoutSubviews]
  -[PUGridRenderedStrip dataSource]
  -[PUGridRenderedStrip leftContentInset]
  -[PUGridRenderedStrip _render]
  -[PUGridRenderedStrip _disableRasterizeInAnimations]
  -[PUGridRenderedStrip initWithFrame:]
  -[PUGridRenderedStrip setLayout:]
  -[PUGridRenderedStrip interItemSpacing]
  -[PUGridRenderedStrip setItemSize:]
  -[PUGridRenderedStrip applyLayoutAttributes:]
  -[PUGridRenderedStrip layout]
  -[PUGridRenderedStrip itemSize]
  -[PUGridRenderedStrip _needsRendering]
  -[PUGridRenderedStrip _setNeedsRendering:]
  -[PUGridRenderedStrip _updateExtendedContents]
  -[PUGridRenderedStrip itemContentScale]
  -[PUGridRenderedStrip setExtendsToTop:]
  -[PUGridRenderedStrip topContentView]
  -[PUGridRenderedStrip setContentExtenderType:]
  -[PUGridRenderedStrip setNeedsRendering]
  -[PUGridRenderedStrip setItemContentScale:]
  -[PUGridRenderedStrip setLeftContentInset:]
  -[PUGridRenderedStrip setVisualSectionIndex:andVisualItemRange:]
  -[PUGridRenderedStrip setBackgroundColorValue:]
  -[PUGridRenderedStrip itemIndexPaths]
  -[PUGridRenderedStrip setItemIndexPaths:]
  -[PUGridRenderedStrip visualSectionIndex]
  -[PUGridRenderedStrip visualItemRange]
  -[PUGridRenderedStrip contentExtenderType]
  -[PUGridRenderedStrip extendsToTop]
  -[PUGridRenderedStrip _sideExtendedContentView]


PUGridTilingLayout : PUSectionedTilingLayout
 @property  {CGSize=dd} itemSize
 @property  {CGSize=dd} interItemSpacing

  // instance methods
  -[PUGridTilingLayout setInterItemSpacing:]
  -[PUGridTilingLayout prepareLayout]
  -[PUGridTilingLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUGridTilingLayout addLayoutInfosForTilesInRect:section:toSet:]
  -[PUGridTilingLayout init]
  -[PUGridTilingLayout setVisibleRect:]
  -[PUGridTilingLayout _numberOfColumns]
  -[PUGridTilingLayout sizeForSection:numberOfItems:]
  -[PUGridTilingLayout preferredScrollInfo]
  -[PUGridTilingLayout estimatedSectionSize]
  -[PUGridTilingLayout interItemSpacing]
  -[PUGridTilingLayout setItemSize:]
  -[PUGridTilingLayout itemSize]
  -[PUGridTilingLayout _frameForItemAtIndexPath:]


PUGridZoomLevelInfo : NSObject <PUGridRenderedStripDataSource, PUPhotosSectionHeaderViewDelegate, PUSectionedGridLayoutDelegate>
 @property  PUZoomableGridViewController *zoomableGridViewController
 @property  NSString *renderedStripsElementKind
 @property  NSString *sectionHeaderElementKind
 @property  {CGSize=dd} thumbnailImageSize
 @property  double itemContentScale
 @property  ^{__CFString=} aggregateLevelKey
 @property  BOOL useFloatingHeaderGroupName
 @property  {CGSize=dd} thumbnailImageSize
 @property  unsigned long zoomLevel
 @property  PUMomentsZoomLevelManager *zoomLevelManager
 @property  PUGridZoomLevelInfo *baseZoomLevelInfo
 @property  PUZoomableGridViewController *zoomableGridViewController
 @property  PUSectionedGridLayout *collectionViewLayout
 @property  double pendingContentWidth
 @property  PHCachingImageManager *cachingImageManager
 @property  PHAssetResourceQualityClass *qualityClass
 @property  {CGSize=dd} lastItemPixelSize
 @property  long long maxRowsPerSection
 @property  BOOL summarizeSections
 @property  double zoomInDuration
 @property  double zoomOutDuration
 @property  long long dateRangeFormatterPreset
 @property  {CGSize=dd} imageRequestItemSize
 @property  long long cellFillMode
 @property  BOOL supportsCollectionViewDragSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUGridZoomLevelInfo zoomLevel]
  -[PUGridZoomLevelInfo .cxx_destruct]
  -[PUGridZoomLevelInfo collectionViewLayout]
  -[PUGridZoomLevelInfo thumbnailImageSize]
  -[PUGridZoomLevelInfo didTapHeaderView:]
  -[PUGridZoomLevelInfo headerView:actionButtonPressed:]
  -[PUGridZoomLevelInfo cachingImageManager]
  -[PUGridZoomLevelInfo configureSupplementaryView:ofKind:forIndexPath:]
  -[PUGridZoomLevelInfo sectionedGridLayout:didPrepareTransitionIsAppearing:]
  -[PUGridZoomLevelInfo sectionedGridLayout:didFinalizePrepareTransitionIsAppearing:]
  -[PUGridZoomLevelInfo sectionedGridLayout:maximumRowsForVisualSection:]
  -[PUGridZoomLevelInfo sectionedGridLayoutAnchorItemForAdjustingContentOffset:]
  -[PUGridZoomLevelInfo sectionedGridLayout:targetContentOffsetForProposedUpdatesContentOffset:]
  -[PUGridZoomLevelInfo sectionedGridLayoutTransitionAutoAdjustContentOffsetEnabled:]
  -[PUGridZoomLevelInfo sectionedGridLayout:didInvalidateWithContext:]
  -[PUGridZoomLevelInfo itemContentScale]
  -[PUGridZoomLevelInfo renderedStrip:imageDataForAsset:imageWidth:imageHeight:bytesPerRow:dataWidth:dataHeight:imageDataOffset:]
  -[PUGridZoomLevelInfo renderedStrip:enumerateAssetsForVisualSection:inVisualItemRange:usingBlock:]
  -[PUGridZoomLevelInfo newCollectionViewLayout]
  -[PUGridZoomLevelInfo zoomableGridViewController]
  -[PUGridZoomLevelInfo updateLayoutMetricsForWidth:safeAreaInsets:]
  -[PUGridZoomLevelInfo renderedStripsElementKind]
  -[PUGridZoomLevelInfo sectionHeaderElementKind]
  -[PUGridZoomLevelInfo configureSectionHeaderView:forVisualSection:]
  -[PUGridZoomLevelInfo useFloatingHeaderGroupName]
  -[PUGridZoomLevelInfo imageDataForAsset:itemContentScale:imageWidth:imageHeight:bytesPerRow:dataWidth:dataHeight:imageDataOffset:]
  -[PUGridZoomLevelInfo zoomLevelManager]
  -[PUGridZoomLevelInfo pushPhotosDetailsViewForVisualSection:animated:]
  -[PUGridZoomLevelInfo summarizeSections]
  -[PUGridZoomLevelInfo maxRowsPerSection]
  -[PUGridZoomLevelInfo wantsMagnifierNavigation]
  -[PUGridZoomLevelInfo initWithZoomLevel:zoomLevelManager:baseZoomLevelInfo:]
  -[PUGridZoomLevelInfo updateForSizeChangeIfNecessary]
  -[PUGridZoomLevelInfo zoomInDuration]
  -[PUGridZoomLevelInfo zoomOutDuration]
  -[PUGridZoomLevelInfo aggregateLevelKey]
  -[PUGridZoomLevelInfo setSummarizeSections:]
  -[PUGridZoomLevelInfo dateRangeFormatterPreset]
  -[PUGridZoomLevelInfo imageRequestItemSize]
  -[PUGridZoomLevelInfo cellFillMode]
  -[PUGridZoomLevelInfo willAnimateSizeTransition]
  -[PUGridZoomLevelInfo registerReusableViewClassesForCollectionView:]
  -[PUGridZoomLevelInfo configureGridCell:forIndexPath:]
  -[PUGridZoomLevelInfo _updateBackdropGroupNameForHeaderView:]
  -[PUGridZoomLevelInfo supportsIncrementalChangeNotifications]
  -[PUGridZoomLevelInfo modelDidChange:]
  -[PUGridZoomLevelInfo prepareForTransitionToZoomLevelInfo:animated:interactive:]
  -[PUGridZoomLevelInfo prepareForTransitionFromZoomLevelInfo:animated:interactive:]
  -[PUGridZoomLevelInfo didFinishZoomLevelTransition]
  -[PUGridZoomLevelInfo willShowMagnifiedViewController:]
  -[PUGridZoomLevelInfo wantsAssetCountsVisible]
  -[PUGridZoomLevelInfo wantsCloudStatusVisible]
  -[PUGridZoomLevelInfo wantsAutomaticContentOffsetAdjustment]
  -[PUGridZoomLevelInfo supportsEditMode]
  -[PUGridZoomLevelInfo supportsCollectionViewDragSource]
  -[PUGridZoomLevelInfo imageDeliveryMode]
  -[PUGridZoomLevelInfo cellAspectRatioHint]
  -[PUGridZoomLevelInfo baseZoomLevelInfo]
  -[PUGridZoomLevelInfo pendingContentWidth]
  -[PUGridZoomLevelInfo setPendingContentWidth:]
  -[PUGridZoomLevelInfo qualityClass]
  -[PUGridZoomLevelInfo setQualityClass:]
  -[PUGridZoomLevelInfo lastItemPixelSize]
  -[PUGridZoomLevelInfo setLastItemPixelSize:]
  -[PUGridZoomLevelInfo getPhotosDataSource:displayTitleInfo:forDetailsForVisualSection:]
  -[PUGridZoomLevelInfo _detailViewSourceOriginWithZoomLevel:]
  -[PUGridZoomLevelInfo setUseFloatingHeaderGroupName:]
  -[PUGridZoomLevelInfo setZoomableGridViewController:]
  -[PUGridZoomLevelInfo assetsToDisplayInMapForVisualSection:]
  -[PUGridZoomLevelInfo diagnosticsProviderForVisualSection:]
  -[PUGridZoomLevelInfo shouldUseDynamicLayout]


PUHideActivity : PXActivity
  // class methods
  +[PUHideActivity activityCategory]

  // instance methods
  -[PUHideActivity .cxx_destruct]
  -[PUHideActivity _systemImageName]
  -[PUHideActivity activityType]
  -[PUHideActivity canPerformWithActivityItems:]
  -[PUHideActivity performActivity]
  -[PUHideActivity activityTitle]
  -[PUHideActivity setItemSourceController:]
  -[PUHideActivity _assetHidingHelper]


PURenderIndicatorTileViewController : PUTileViewController <PUAssetSharedViewModelChangeObserver>
 @property  BOOL needsUpdateStatus
 @property  BOOL needsUpdateSizeClass
 @property  BOOL needsUpdateStatusViews
 @property  PUOperationStatus *status
 @property  long long sizeClass
 @property  {CGSize=dd} progressIndicatorSize
 @property  UIView *roundedBackgroundView
 @property  UILabel *renderingLabel
 @property  PLRoundProgressView *progressView
 @property  BOOL isProgressViewVisible
 @property  UIButton *errorButton
 @property  double renderLabelTextWidth
 @property  BOOL willShowProgressAfterDelay
 @property  PUAssetSharedViewModel *assetSharedViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PURenderIndicatorTileViewController _loadErrorIconForSizeClass:]
  +[PURenderIndicatorTileViewController renderIndicatorTileSizeForSizeClass:]
  +[PURenderIndicatorTileViewController wantsRenderViewForTypeOfProcessingNeeded:]
  +[PURenderIndicatorTileViewController progressIndicatorTileSizeForSizeClass:]

  // instance methods
  -[PURenderIndicatorTileViewController _updateSubviewOrdering]
  -[PURenderIndicatorTileViewController _invalidateStatus]
  -[PURenderIndicatorTileViewController sizeClass]
  -[PURenderIndicatorTileViewController assetSharedViewModel]
  -[PURenderIndicatorTileViewController applyLayoutInfo:]
  -[PURenderIndicatorTileViewController setNeedsUpdateStatus:]
  -[PURenderIndicatorTileViewController becomeReusable]
  -[PURenderIndicatorTileViewController renderLabelTextWidth]
  -[PURenderIndicatorTileViewController setIsProgressViewVisible:]
  -[PURenderIndicatorTileViewController setNeedsUpdateStatusViews:]
  -[PURenderIndicatorTileViewController setWillShowProgressAfterDelay:]
  -[PURenderIndicatorTileViewController _updateIfNeeded]
  -[PURenderIndicatorTileViewController isProgressViewVisible]
  -[PURenderIndicatorTileViewController _setNeedsUpdate]
  -[PURenderIndicatorTileViewController progressView]
  -[PURenderIndicatorTileViewController setProgressViewVisible:animated:]
  -[PURenderIndicatorTileViewController .cxx_destruct]
  -[PURenderIndicatorTileViewController viewDidLoad]
  -[PURenderIndicatorTileViewController setSizeClass:]
  -[PURenderIndicatorTileViewController setRoundedBackgroundView:]
  -[PURenderIndicatorTileViewController _updateStatusViewsIfNeeded]
  -[PURenderIndicatorTileViewController progressIndicatorSize]
  -[PURenderIndicatorTileViewController renderingLabel]
  -[PURenderIndicatorTileViewController errorButton]
  -[PURenderIndicatorTileViewController viewModel:didChange:]
  -[PURenderIndicatorTileViewController _handleAssetSharedViewModel:didChange:]
  -[PURenderIndicatorTileViewController _needsUpdate]
  -[PURenderIndicatorTileViewController setAssetSharedViewModel:]
  -[PURenderIndicatorTileViewController needsUpdateSizeClass]
  -[PURenderIndicatorTileViewController needsUpdateStatusViews]
  -[PURenderIndicatorTileViewController setRenderingLabel:]
  -[PURenderIndicatorTileViewController willShowProgressAfterDelay]
  -[PURenderIndicatorTileViewController roundedBackgroundView]
  -[PURenderIndicatorTileViewController _handleErrorButtonTap:]
  -[PURenderIndicatorTileViewController status]
  -[PURenderIndicatorTileViewController setProgressView:]
  -[PURenderIndicatorTileViewController _expandedBackgroundViewFrame]
  -[PURenderIndicatorTileViewController setNeedsUpdateSizeClass:]
  -[PURenderIndicatorTileViewController setErrorButton:]
  -[PURenderIndicatorTileViewController setProgressIndicatorSize:]
  -[PURenderIndicatorTileViewController setStatus:]
  -[PURenderIndicatorTileViewController setProgressViewVisible:animated:completion:]
  -[PURenderIndicatorTileViewController needsUpdateStatus]
  -[PURenderIndicatorTileViewController _invalidateStatusViews]
  -[PURenderIndicatorTileViewController _updateViewFramesForCollapseState:]
  -[PURenderIndicatorTileViewController _invalidateSizeClass]
  -[PURenderIndicatorTileViewController setProgressViewVisible:]
  -[PURenderIndicatorTileViewController _updateSizeClassIfNeeded]
  -[PURenderIndicatorTileViewController _updateStatusIfNeeded]
  -[PURenderIndicatorTileViewController setRenderLabelTextWidth:]


PUPickerGeneratedFilter : NSObject
 @property  BOOL pu_legacy_mediaTypesIncludesLivePhoto
 @property  BOOL allowsSearch
 @property  BOOL allowsAlbums
 @property  NSPredicate *assetPredicate
 @property  unsigned long possibleAssetTypes
 @property  unsigned long requiredAssetTypes
 @property  unsigned long searchQueryFilterOptions
 @property  unsigned long genericAssetTypes
 @property  long long displayAssetMediaType
 @property  long long noContentPlaceholderType

  // class methods
  +[PUPickerGeneratedFilter _pu_legacy_filterForUIImagePickerControllerMediaTypes:]
  +[PUPickerGeneratedFilter _imagesFilter]
  +[PUPickerGeneratedFilter _videosFilter]
  +[PUPickerGeneratedFilter _excludingStreamedVideosFilter]
  +[PUPickerGeneratedFilter _excludingLoopingVideosFilter]
  +[PUPickerGeneratedFilter _loopingVideosFilter]

  // instance methods
  -[PUPickerGeneratedFilter .cxx_destruct]
  -[PUPickerGeneratedFilter noContentPlaceholderType]
  -[PUPickerGeneratedFilter init]
  -[PUPickerGeneratedFilter initWithFilter:]
  -[PUPickerGeneratedFilter allowsSearch]
  -[PUPickerGeneratedFilter allowsAlbums]
  -[PUPickerGeneratedFilter possibleAssetTypes]
  -[PUPickerGeneratedFilter displayAssetMediaType]
  -[PUPickerGeneratedFilter initWithUIImagePickerControllerMediaTypes:]
  -[PUPickerGeneratedFilter searchQueryFilterOptions]
  -[PUPickerGeneratedFilter genericAssetTypes]
  -[PUPickerGeneratedFilter displayAssetMediaTypeConsideringAssetObjectIDs:photoLibrary:]
  -[PUPickerGeneratedFilter assetPredicate]
  -[PUPickerGeneratedFilter requiredAssetTypes]
  -[PUPickerGeneratedFilter pu_legacy_mediaTypesIncludesLivePhoto]


PUHorizontalAlbumListGadget : PXHorizontalCollectionGadget <PUStackedAlbumTransitionDelegate, PUCloudSharedAlbumViewControllerDelegate, PXAssetCollectionActionPerformerDelegate, PXNavigableCollectionContainer>
 @property  PUPhotoPinchGestureRecognizer *pinchGestureRecognizer
 @property  PUAlbumListViewControllerSpec *albumListViewControllerSpec
 @property  NSUserActivity *siriActionActivity
 @property  BOOL shouldUseSingleHeightLayout
 @property  PUAlbumsGadgetProvider *provider
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUHorizontalAlbumListGadget _showsHorizontalScrollIndicator]

  // instance methods
  -[PUHorizontalAlbumListGadget setGadgetSpec:]
  -[PUHorizontalAlbumListGadget setSessionInfo:]
  -[PUHorizontalAlbumListGadget px_gridPresentation]
  -[PUHorizontalAlbumListGadget sessionInfo]
  -[PUHorizontalAlbumListGadget collectionView:performDropWithCoordinator:]
  -[PUHorizontalAlbumListGadget gadgetCapabilities]
  -[PUHorizontalAlbumListGadget gadgetType]
  -[PUHorizontalAlbumListGadget gadget:didChange:]
  -[PUHorizontalAlbumListGadget collectionView:didSelectItemAtIndexPath:]
  -[PUHorizontalAlbumListGadget pinchGestureRecognizer]
  -[PUHorizontalAlbumListGadget stackedAlbumTransition:layoutForCollection:forCollectionView:]
  -[PUHorizontalAlbumListGadget collectionView:shouldSpringLoadItemAtIndexPath:withContext:]
  -[PUHorizontalAlbumListGadget shouldUseSingleHeightLayout]
  -[PUHorizontalAlbumListGadget .cxx_destruct]
  -[PUHorizontalAlbumListGadget viewDidLoad]
  -[PUHorizontalAlbumListGadget _handlePinch:]
  -[PUHorizontalAlbumListGadget stackedAlbumTransition:setVisibility:forCollection:]
  -[PUHorizontalAlbumListGadget stackedAlbumTransition:layoutForPHCollection:forCollectionView:]
  -[PUHorizontalAlbumListGadget initWithAlbumsGadgetProvider:]
  -[PUHorizontalAlbumListGadget init]
  -[PUHorizontalAlbumListGadget canNavigateToCollection:]
  -[PUHorizontalAlbumListGadget _canUseStackedAlbumTransitionToNavigationToCollection:]
  -[PUHorizontalAlbumListGadget actionPerformer:presentViewController:]
  -[PUHorizontalAlbumListGadget sharedAlbumDeletedBySharedAlbumViewController:]
  -[PUHorizontalAlbumListGadget _updateCollectionViewLayout]
  -[PUHorizontalAlbumListGadget accessoryButtonTitle]
  -[PUHorizontalAlbumListGadget siriActionActivity]
  -[PUHorizontalAlbumListGadget albumListViewControllerSpec]
  -[PUHorizontalAlbumListGadget actionPerformer:dismissViewController:completionHandler:]
  -[PUHorizontalAlbumListGadget provider]
  -[PUHorizontalAlbumListGadget accessoryButtonType]
  -[PUHorizontalAlbumListGadget _navigateToCollection:animated:interactive:completion:]
  -[PUHorizontalAlbumListGadget navigateToCollection:animated:completion:]
  -[PUHorizontalAlbumListGadget stackedAlbumTransition:setVisibility:forPHCollection:]
  -[PUHorizontalAlbumListGadget setShouldUseSingleHeightLayout:]
  -[PUHorizontalAlbumListGadget _updateCollectionHeight]
  -[PUHorizontalAlbumListGadget setSiriActionActivity:]


PUHorizontalAlbumListGadgetLayout : PXGadgetCollectionViewLayout
 @property  <PUHorizontalAlbumListGadgetLayoutDelegate> *horizontalLayoutDelegate
 @property  {CGSize=dd} albumCellSize
 @property  BOOL showsHorizontalScrollIndicator

  // instance methods
  -[PUHorizontalAlbumListGadgetLayout albumCellSize]
  -[PUHorizontalAlbumListGadgetLayout setHorizontalLayoutDelegate:]
  -[PUHorizontalAlbumListGadgetLayout showsHorizontalScrollIndicator]
  -[PUHorizontalAlbumListGadgetLayout collectionView:layout:sizeForItemAtIndexPath:]
  -[PUHorizontalAlbumListGadgetLayout .cxx_destruct]
  -[PUHorizontalAlbumListGadgetLayout init]
  -[PUHorizontalAlbumListGadgetLayout horizontalLayoutDelegate]
  -[PUHorizontalAlbumListGadgetLayout initWithHorizontalLayoutDelegate:showsHorizontalScrollIndicator:]
  -[PUHorizontalAlbumListGadgetLayout _horizontalScrollIndicatorSpacing]
  -[PUHorizontalAlbumListGadgetLayout _numberOfAlbums]


PUSingleHeightHorizontalAlbumListGadgetLayout : PUHorizontalAlbumListGadgetLayout
  // instance methods
  -[PUSingleHeightHorizontalAlbumListGadgetLayout collectionViewContentSize]
  -[PUSingleHeightHorizontalAlbumListGadgetLayout layoutAttributesForElementsInRect:]
  -[PUSingleHeightHorizontalAlbumListGadgetLayout _adjustLayoutAttributes:]
  -[PUSingleHeightHorizontalAlbumListGadgetLayout pagingEnabled]


PUDoubleHeightHorizontalAlbumListGadgetLayout : PUHorizontalAlbumListGadgetLayout
 @property  NSMutableDictionary *layoutAttributesByIndexPath

  // instance methods
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout prefersPagingEnabled]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout invalidateLayout]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout layoutAttributesForItemAtIndexPath:]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout collectionViewContentSize]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout .cxx_destruct]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout layoutAttributesForElementsInRect:]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout initWithHorizontalLayoutDelegate:showsHorizontalScrollIndicator:]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout _adjustLayoutAttributes:]
  -[PUDoubleHeightHorizontalAlbumListGadgetLayout layoutAttributesByIndexPath]


PUHorizontalAlbumListGadgetProvider : PXGadgetProvider <PXSettingsKeyObserver, PXChangeObserver, PXCollectionsDataSourceManagerObserver>
 @property  unsigned long type
 @property  PXExtendedTraitCollection *traitCollection
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PUAlbumsGadgetProvider *albumsGadgetProvider
 @property  NSString *title
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUHorizontalAlbumListGadgetProvider _resetGadgets]
  -[PUHorizontalAlbumListGadgetProvider sessionInfo]
  -[PUHorizontalAlbumListGadgetProvider _accountStoreDidChange:]
  -[PUHorizontalAlbumListGadgetProvider startLoadingRemainingData]
  -[PUHorizontalAlbumListGadgetProvider initWithIdentifier:]
  -[PUHorizontalAlbumListGadgetProvider dataSourceManager]
  -[PUHorizontalAlbumListGadgetProvider loadDataForGadgets]
  -[PUHorizontalAlbumListGadgetProvider .cxx_destruct]
  -[PUHorizontalAlbumListGadgetProvider traitCollection]
  -[PUHorizontalAlbumListGadgetProvider setAlbumsGadgetProvider:]
  -[PUHorizontalAlbumListGadgetProvider init]
  -[PUHorizontalAlbumListGadgetProvider _newConfiguration]
  -[PUHorizontalAlbumListGadgetProvider _canProvideGadgets]
  -[PUHorizontalAlbumListGadgetProvider _seeAllViewController]
  -[PUHorizontalAlbumListGadgetProvider title]
  -[PUHorizontalAlbumListGadgetProvider pauseLoadingRemainingData]
  -[PUHorizontalAlbumListGadgetProvider type]
  -[PUHorizontalAlbumListGadgetProvider settings:changedValueForKey:]
  -[PUHorizontalAlbumListGadgetProvider _fromMyMacConfiguration]
  -[PUHorizontalAlbumListGadgetProvider _peoplePlacesAndMediaTypesConfiguration]
  -[PUHorizontalAlbumListGadgetProvider _handleDataSourceChange]
  -[PUHorizontalAlbumListGadgetProvider initWithType:extendedTraitCollection:sessionInfo:]
  -[PUHorizontalAlbumListGadgetProvider generateGadgets]
  -[PUHorizontalAlbumListGadgetProvider estimatedNumberOfGadgets]
  -[PUHorizontalAlbumListGadgetProvider setDataSourceManager:]
  -[PUHorizontalAlbumListGadgetProvider albumsGadgetProvider]
  -[PUHorizontalAlbumListGadgetProvider observable:didChange:context:]


PUHorizontalCollectionViewLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
 @property  BOOL invalidateCachedLayout

  // instance methods
  -[PUHorizontalCollectionViewLayoutInvalidationContext invalidateCachedLayout]
  -[PUHorizontalCollectionViewLayoutInvalidationContext _setInvalidateCachedLayout:]


PUHorizontalCollectionViewLayout : UICollectionViewLayout
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} collectionViewBounds
 @property  {CGSize=dd} itemSize
 @property  double interitemSpacing
 @property  {UIEdgeInsets=dddd} itemsContentInset
 @property  <PUHorizontalCollectionViewLayoutDelegate> *delegate

  // class methods
  +[PUHorizontalCollectionViewLayout invalidationContextClass]

  // instance methods
  -[PUHorizontalCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUHorizontalCollectionViewLayout invalidationContextForBoundsChange:]
  -[PUHorizontalCollectionViewLayout prepareLayout]
  -[PUHorizontalCollectionViewLayout setInteritemSpacing:]
  -[PUHorizontalCollectionViewLayout collectionViewContentSize]
  -[PUHorizontalCollectionViewLayout interitemSpacing]
  -[PUHorizontalCollectionViewLayout .cxx_destruct]
  -[PUHorizontalCollectionViewLayout setDelegate:]
  -[PUHorizontalCollectionViewLayout init]
  -[PUHorizontalCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUHorizontalCollectionViewLayout delegate]
  -[PUHorizontalCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUHorizontalCollectionViewLayout invalidateLayoutWithContext:]
  -[PUHorizontalCollectionViewLayout setItemSize:]
  -[PUHorizontalCollectionViewLayout itemSize]
  -[PUHorizontalCollectionViewLayout _shouldInvalidateCachedLayoutForBoundsChange:]
  -[PUHorizontalCollectionViewLayout itemsContentInset]
  -[PUHorizontalCollectionViewLayout setItemsContentInset:]
  -[PUHorizontalCollectionViewLayout collectionViewBounds]
  -[PUHorizontalCollectionViewLayout _layoutAttributesForItemAtIndexPath:]


PUHorizontalTiledCollectionViewLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
 @property  BOOL invalidateCachedLayout

  // instance methods
  -[PUHorizontalTiledCollectionViewLayoutInvalidationContext invalidateCachedLayout]
  -[PUHorizontalTiledCollectionViewLayoutInvalidationContext _setInvalidateCachedLayout:]


PUCollectionViewData : NSObject
 @property  long long cachedPageCount
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentContentBounds
 @property  NSMutableArray *itemLayoutAttributes
 @property  NSMutableDictionary *itemLayoutAttributesByIndexPath

  // instance methods
  -[PUCollectionViewData .cxx_destruct]
  -[PUCollectionViewData init]
  -[PUCollectionViewData invalidate]
  -[PUCollectionViewData hasReferenceIndexPath]
  -[PUCollectionViewData cachedPageCount]
  -[PUCollectionViewData currentContentBounds]
  -[PUCollectionViewData setCurrentContentBounds:]
  -[PUCollectionViewData itemLayoutAttributes]
  -[PUCollectionViewData itemLayoutAttributesByIndexPath]


PUHorizontalTiledCollectionViewLayout : UICollectionViewLayout
 @property  double interitemSpacing
 @property  {UIEdgeInsets=dddd} itemsContentInset
 @property  <PUHorizontalTiledCollectionViewLayoutDelegate> *delegate
 @property  BOOL hasReferenceIndexPath

  // class methods
  +[PUHorizontalTiledCollectionViewLayout invalidationContextClass]

  // instance methods
  -[PUHorizontalTiledCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUHorizontalTiledCollectionViewLayout invalidationContextForBoundsChange:]
  -[PUHorizontalTiledCollectionViewLayout prepareLayout]
  -[PUHorizontalTiledCollectionViewLayout setInteritemSpacing:]
  -[PUHorizontalTiledCollectionViewLayout collectionViewContentSize]
  -[PUHorizontalTiledCollectionViewLayout interitemSpacing]
  -[PUHorizontalTiledCollectionViewLayout .cxx_destruct]
  -[PUHorizontalTiledCollectionViewLayout setDelegate:]
  -[PUHorizontalTiledCollectionViewLayout init]
  -[PUHorizontalTiledCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUHorizontalTiledCollectionViewLayout invalidateCachedLayout]
  -[PUHorizontalTiledCollectionViewLayout delegate]
  -[PUHorizontalTiledCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUHorizontalTiledCollectionViewLayout invalidateLayoutWithContext:]
  -[PUHorizontalTiledCollectionViewLayout _shouldInvalidateCachedLayoutForBoundsChange:]
  -[PUHorizontalTiledCollectionViewLayout itemsContentInset]
  -[PUHorizontalTiledCollectionViewLayout setItemsContentInset:]
  -[PUHorizontalTiledCollectionViewLayout _layoutAttributesForItemAtIndexPath:]
  -[PUHorizontalTiledCollectionViewLayout hasReferenceIndexPath]
  -[PUHorizontalTiledCollectionViewLayout _updateLayoutData:inDirection:outDeltaOriginX:]
  -[PUHorizontalTiledCollectionViewLayout _ensureRect:inData:outDeltaOriginX:]
  -[PUHorizontalTiledCollectionViewLayout layoutAttributesForItemsInRect:]
  -[PUHorizontalTiledCollectionViewLayout _ensureIndexPath:inData:]


_PUPickerUnavailableUIViewController : UIViewController
 @property  PXContentUnavailableView *unavailableView
 @property  unsigned long reason
 @property  PUPickerConfiguration *configuration
 @property  NSError *error
 @property  <_PUPickerUnavailableUIViewControllerDelegate> *delegate

  // class methods
  +[_PUPickerUnavailableUIViewController unavailableUIViewControllerEmbeddedInNavigationController:configuration:error:delegate:]
  +[_PUPickerUnavailableUIViewController unavailableUIViewController:configuration:error:delegate:]

  // instance methods
  -[_PUPickerUnavailableUIViewController initWithCoder:]
  -[_PUPickerUnavailableUIViewController configuration]
  -[_PUPickerUnavailableUIViewController .cxx_destruct]
  -[_PUPickerUnavailableUIViewController viewDidLoad]
  -[_PUPickerUnavailableUIViewController setDelegate:]
  -[_PUPickerUnavailableUIViewController initWithNibName:bundle:]
  -[_PUPickerUnavailableUIViewController init]
  -[_PUPickerUnavailableUIViewController reason]
  -[_PUPickerUnavailableUIViewController delegate]
  -[_PUPickerUnavailableUIViewController error]
  -[_PUPickerUnavailableUIViewController cancelButtonTapped:]
  -[_PUPickerUnavailableUIViewController updateReason:error:]
  -[_PUPickerUnavailableUIViewController initWithReason:configuration:error:]
  -[_PUPickerUnavailableUIViewController updateUnavailableView]
  -[_PUPickerUnavailableUIViewController unavailableView]
  -[_PUPickerUnavailableUIViewController reasonDebugDescription]
  -[_PUPickerUnavailableUIViewController askDelegateToCancel]
  -[_PUPickerUnavailableUIViewController unavailableTitle]
  -[_PUPickerUnavailableUIViewController unavailableMessage]
  -[_PUPickerUnavailableUIViewController unavailableButtonTitle]
  -[_PUPickerUnavailableUIViewController askDelegateToRetry]


PUImageDataRenderNode : PXRunNode <PUImageDataRenderNode>
 @property  <PUImageInfoNode> *imageDataNode
 @property  <PUVideoURLNode> *videoURLNode
 @property  PICompositionController *compositionController
 @property  double jpegCompression
 @property  NSString *livePhotoPairingIdentifier
 @property  {CGSize=dd} baseImageSize
 @property  {CGSize=dd} renderedImageSize
 @property  NSData *imageData
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUImageDataRenderNode livePhotoPairingIdentifier]
  -[PUImageDataRenderNode .cxx_destruct]
  -[PUImageDataRenderNode imageData]
  -[PUImageDataRenderNode _editSource]
  -[PUImageDataRenderNode compositionController]
  -[PUImageDataRenderNode run]
  -[PUImageDataRenderNode imageDataNode]
  -[PUImageDataRenderNode videoURLNode]
  -[PUImageDataRenderNode _isInputValid]
  -[PUImageDataRenderNode jpegCompression]
  -[PUImageDataRenderNode _handleRenderCompletedWithJpegData:baseSize:editedSize:]
  -[PUImageDataRenderNode baseImageSize]
  -[PUImageDataRenderNode renderedImageSize]
  -[PUImageDataRenderNode initWithImageInfoNode:videoURLNode:compositionController:livePhotoPairingIdentifier:jpegCompression:]


PUImageEditPluginSession : PUEditPluginSession
 @property  BOOL allowLivePhotoExtensions

  // instance methods
  -[PUImageEditPluginSession pluginManagerMediaType]
  -[PUImageEditPluginSession shouldLaunchPlugin:completion:]
  -[PUImageEditPluginSession loadItemProviderWithSupportedAdjustmentData:loadHandler:]
  -[PUImageEditPluginSession allowLivePhotoExtensions]
  -[PUImageEditPluginSession imageDataSource]
  -[PUImageEditPluginSession setAllowLivePhotoExtensions:]


PUImagePickerSessionInfo : PUSessionInfo
 @property  BOOL showsPrompt
 @property  NSString *staticPrompt

  // instance methods
  -[PUImagePickerSessionInfo .cxx_destruct]
  -[PUImagePickerSessionInfo selectionLimit]
  -[PUImagePickerSessionInfo isLimitedLibraryPicker]
  -[PUImagePickerSessionInfo isSelectingAssets]
  -[PUImagePickerSessionInfo isForAssetPicker]
  -[PUImagePickerSessionInfo localizedPrompt]
  -[PUImagePickerSessionInfo setSelectionLimit:]
  -[PUImagePickerSessionInfo staticPrompt]
  -[PUImagePickerSessionInfo showsPrompt]
  -[PUImagePickerSessionInfo initWithPhotoSelectionManager:]
  -[PUImagePickerSessionInfo initWithPhotosViewDelegate:loadingStatusManager:allowMultipleSelection:limitedLibrary:]
  -[PUImagePickerSessionInfo setShowsPrompt:]
  -[PUImagePickerSessionInfo setStaticPrompt:]


PUImageRequester : NSObject
 @property  UIImage *image
 @property  NSData *fullsizeImageData
 @property  NSURL *fullsizeImageURL
 @property  BOOL imageIsPlaceholder
 @property  BOOL imageIsFullQuality
 @property  ^{CGImage=} gainMapImage
 @property  float gainMapValue
 @property  NSHashTable *_observers
 @property  long long _changeCount
 @property  PUImageRequesterChange *_currentChange
 @property  BOOL _needsUpdate
 @property  BOOL _hasRequestedFullsizeImageData
 @property  int _currentFullsizeImageDataRequestID
 @property  BOOL _hasCurrentIncompleteRequest
 @property  {CGSize=dd} _lastRequestedImageSize
 @property  int _currentImageRequestID
 @property  BOOL _shouldUpdateImageOnCurrentRequestCompletion
 @property  PUMediaProvider *mediaProvider
 @property  <PUDisplayAsset> *asset
 @property  {CGSize=dd} targetSize
 @property  BOOL shouldRequestPenultimateVersion
 @property  BOOL useLowMemoryMode
 @property  NSArray *requestFullSizeImageDataUTTypes
 @property  BOOL networkAccessAllowed
 @property  BOOL requiresFullQualityImage
 @property  BOOL highPriorityRequest
 @property  BOOL includeGainMap

  // instance methods
  -[PUImageRequester requiresFullQualityImage]
  -[PUImageRequester isNetworkAccessAllowed]
  -[PUImageRequester _observers]
  -[PUImageRequester unregisterObserver:]
  -[PUImageRequester _setFullsizeImageURL:]
  -[PUImageRequester gainMapImage]
  -[PUImageRequester _setFullsizeImageData:]
  -[PUImageRequester gainMapValue]
  -[PUImageRequester imageIsFullQuality]
  -[PUImageRequester registerObserver:]
  -[PUImageRequester _setCurrentChange:]
  -[PUImageRequester _currentChange]
  -[PUImageRequester performChanges:]
  -[PUImageRequester _setImage:]
  -[PUImageRequester _setChangeCount:]
  -[PUImageRequester _currentFullsizeImageDataRequestID]
  -[PUImageRequester updateIfNeeded]
  -[PUImageRequester image]
  -[PUImageRequester targetSize]
  -[PUImageRequester _setImageIsFullQuality:]
  -[PUImageRequester setTargetSize:]
  -[PUImageRequester handlePreloadedImage:]
  -[PUImageRequester _setObserver:]
  -[PUImageRequester _invalidateImageRequest]
  -[PUImageRequester .cxx_destruct]
  -[PUImageRequester _setImageIsPlaceholder:]
  -[PUImageRequester _assertInsideChangesBlock]
  -[PUImageRequester _hasRequestedFullsizeImageData]
  -[PUImageRequester mediaProvider]
  -[PUImageRequester setUseLowMemoryMode:]
  -[PUImageRequester fullsizeImageData]
  -[PUImageRequester shouldRequestPenultimateVersion]
  -[PUImageRequester _handleResultOfFullsizeImageDataRequestWithID:imageData:imageURL:dataUTI:orientation:info:]
  -[PUImageRequester _shouldUpdateImageOnCurrentRequestCompletion]
  -[PUImageRequester setShouldRequestPenultimateVersion:]
  -[PUImageRequester setAsset:]
  -[PUImageRequester init]
  -[PUImageRequester asset]
  -[PUImageRequester _update]
  -[PUImageRequester _needsUpdate]
  -[PUImageRequester _lastRequestedImageSize]
  -[PUImageRequester _setGainMapImage:]
  -[PUImageRequester _currentImageRequestID]
  -[PUImageRequester _hasCurrentIncompleteRequest]
  -[PUImageRequester setNetworkAccessAllowed:]
  -[PUImageRequester _setGainMapValue:]
  -[PUImageRequester initWithMediaProvider:asset:requiresFullQualityImage:]
  -[PUImageRequester _willChange]
  -[PUImageRequester highPriorityRequest]
  -[PUImageRequester _didChange]
  -[PUImageRequester _setShouldUpdateImageOnCurrentRequestCompletion:]
  -[PUImageRequester setIncludeGainMap:]
  -[PUImageRequester _publishChange:]
  -[PUImageRequester setRequestFullSizeImageDataUTTypes:]
  -[PUImageRequester dealloc]
  -[PUImageRequester _setNeedsUpdate:]
  -[PUImageRequester _setCurrentIncompleteRequest:]
  -[PUImageRequester _setCurrentFullsizeImageDataRequestID:]
  -[PUImageRequester setHighPriorityRequest:]
  -[PUImageRequester _handleResultOfImageRequestWithID:image:info:]
  -[PUImageRequester _setLastRequestedImageSize:]
  -[PUImageRequester _setHasRequestedFullsizeImageData:]
  -[PUImageRequester cancelAllImageRequests]
  -[PUImageRequester useLowMemoryMode]
  -[PUImageRequester imageIsPlaceholder]
  -[PUImageRequester _setCurrentImageRequestID:]
  -[PUImageRequester fullsizeImageURL]
  -[PUImageRequester includeGainMap]
  -[PUImageRequester _changeCount]
  -[PUImageRequester requestFullSizeImageDataUTTypes]


PUImageRequesterChange : NSObject
 @property  BOOL imageDidChange
 @property  BOOL imageIsFullQualityDidChange
 @property  BOOL fullsizeImageDataDidChange
 @property  BOOL fullsizeImageURLDidChange
 @property  BOOL changed

  // instance methods
  -[PUImageRequesterChange changed]
  -[PUImageRequesterChange _setFullsizeImageDataDidChange:]
  -[PUImageRequesterChange imageIsFullQualityDidChange]
  -[PUImageRequesterChange _setImageIsFullQualityDidChange:]
  -[PUImageRequesterChange _setFullsizeImageURLDidChange:]
  -[PUImageRequesterChange fullsizeImageDataDidChange]
  -[PUImageRequesterChange fullsizeImageURLDidChange]
  -[PUImageRequesterChange imageDidChange]
  -[PUImageRequesterChange _setImageDidChange:]


PUCropTransformedImageView : UIView
 @property  UIImage *image
 @property  {CGSize=dd} imageSize
 @property  PHLivePhoto *livePhoto
 @property  NUMediaView *videoMediaView
 @property  NUComposition *autoloopComposition
 @property  NUComposition *videoComposition
 @property  {?=qf} imageModulationOptions
 @property  <PUCropTransformedImageViewDelegate> *delegate
 @property  double straightenAngle
 @property  double pitchAngle
 @property  double yawAngle
 @property  long long orientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} canvasFrame
 @property  BOOL muted
 @property  BOOL tracking
 @property  BOOL decelerating

  // instance methods
  -[PUCropTransformedImageView _setTracking:]
  -[PUCropTransformedImageView setOrientation:]
  -[PUCropTransformedImageView setMuted:]
  -[PUCropTransformedImageView isMuted]
  -[PUCropTransformedImageView cropRect]
  -[PUCropTransformedImageView livePhoto]
  -[PUCropTransformedImageView setLivePhoto:]
  -[PUCropTransformedImageView setImageSize:]
  -[PUCropTransformedImageView image]
  -[PUCropTransformedImageView _imageBounds]
  -[PUCropTransformedImageView .cxx_destruct]
  -[PUCropTransformedImageView setDelegate:]
  -[PUCropTransformedImageView yawAngle]
  -[PUCropTransformedImageView isTracking]
  -[PUCropTransformedImageView imageSize]
  -[PUCropTransformedImageView setYawAngle:]
  -[PUCropTransformedImageView orientation]
  -[PUCropTransformedImageView delegate]
  -[PUCropTransformedImageView setImage:]
  -[PUCropTransformedImageView videoComposition]
  -[PUCropTransformedImageView cropModel]
  -[PUCropTransformedImageView isDecelerating]
  -[PUCropTransformedImageView setImageModulationOptions:]
  -[PUCropTransformedImageView setCanvasFrame:]
  -[PUCropTransformedImageView setVideoComposition:withSeekTime:]
  -[PUCropTransformedImageView setAutoloopComposition:]
  -[PUCropTransformedImageView _setCropModel:]
  -[PUCropTransformedImageView setNeedsLayerTransformsUpdateAnimated:]
  -[PUCropTransformedImageView setImageCropRectFromViewCropRect:animated:]
  -[PUCropTransformedImageView setModelCropRect:viewCropRect:]
  -[PUCropTransformedImageView setStraightenAngle:]
  -[PUCropTransformedImageView setPitchAngle:]
  -[PUCropTransformedImageView _resetCropRect]
  -[PUCropTransformedImageView validateViewCropRectAgainstModelCropRect:]
  -[PUCropTransformedImageView videoMediaView]
  -[PUCropTransformedImageView canvasFrame]
  -[PUCropTransformedImageView pitchAngle]
  -[PUCropTransformedImageView straightenAngle]
  -[PUCropTransformedImageView setVideoMediaView:]
  -[PUCropTransformedImageView imageModulationOptions]
  -[PUCropTransformedImageView imageCropRectForViewRect:]
  -[PUCropTransformedImageView viewCropRectForImageRect:]
  -[PUCropTransformedImageView autoloopComposition]


PURemoveFromFeaturedPhotosActivity : PXActivity
  // class methods
  +[PURemoveFromFeaturedPhotosActivity activityCategory]
  +[PURemoveFromFeaturedPhotosActivity _activityStyle]

  // instance methods
  -[PURemoveFromFeaturedPhotosActivity _systemImageName]
  -[PURemoveFromFeaturedPhotosActivity activityType]
  -[PURemoveFromFeaturedPhotosActivity canPerformWithActivityItems:]
  -[PURemoveFromFeaturedPhotosActivity performActivity]
  -[PURemoveFromFeaturedPhotosActivity activityTitle]


PUImageTileViewController : PUTileViewController <PUImageRequesterObserver, PUBrowsingViewModelChangeObserver, PXVKImageAnalysisInteractionDelegate, PUAssetViewModelChangeObserver>
 @property  BOOL imageIsFullQuality
 @property  BOOL _needsUpdateImage
 @property  BOOL _needsUpdateImageLayerModulator
 @property  BOOL _needsUpdateImageLayerModulatorInput
 @property  BOOL _needsUpdateImageView
 @property  BOOL _needsUpdateFullsizeImageMetadata
 @property  BOOL _needsUpdateFullsizeTiledLayer
 @property  {CGSize=dd} _targetSize
 @property  BOOL needsUpdateTargetSize
 @property  UIImageView *_imageView
 @property  NSData *_fullsizeImageData
 @property  NSURL *_fullsizeImageURL
 @property  long long _fullsizeImageOrientation
 @property  {CGSize=dd} _fullsizeImageUntransformedSize
 @property  {CGSize=dd} _fullsizeImageSize
 @property  CALayer<PLTileableLayer> *_fullsizeTiledLayer
 @property  BOOL _isDisplayingFullQualityImage
 @property  long long _assetLoadingStage
 @property  NSDate *_assetLoadingStartDate
 @property  BOOL shouldUsePenultimateVersionForNextImageUpdate
 @property  BOOL canUseFullsizeTiledLayer
 @property  BOOL requiresFullQualityImage
 @property  PUImageRequester *_imageRequester
 @property  PXImageLayerModulator *imageLayerModulator
 @property  <PXVKImageAnalysisInteraction> *imageInteraction
 @property  UIImage *image
 @property  BOOL gainMapImageIsAvailable
 @property  ^{CGImage=} gainMapImage
 @property  float gainMapValue
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUAssetViewModel *assetViewModel
 @property  <PUDisplayAsset> *asset
 @property  PUMediaProvider *mediaProvider
 @property  PXImageModulationManager *imageModulationManager
 @property  BOOL animatesImageAppearance
 @property  BOOL preserveImageDuringReload
 @property  BOOL shouldUseFullsizeImageData
 @property  UIColor *placeholderColor
 @property  BOOL visualImageInteractionEnabled
 @property  <PUImageTileViewControllerPresentingDelegate> *presentingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImageTileViewController _supportedZoomImageFormats]

  // instance methods
  -[PUImageTileViewController _fullsizeImageURL]
  -[PUImageTileViewController updateModulator]
  -[PUImageTileViewController _invalidateImageLayerModulatorInput]
  -[PUImageTileViewController _setAssetWithoutUpdateIfNeeded:]
  -[PUImageTileViewController _setAssetLoadingStage:]
  -[PUImageTileViewController assetViewModel]
  -[PUImageTileViewController wantsVisibleRectChanges]
  -[PUImageTileViewController requiresFullQualityImage]
  -[PUImageTileViewController _needsUpdateFullsizeTiledLayer]
  -[PUImageTileViewController _fullsizeImageData]
  -[PUImageTileViewController _setTargetSize:]
  -[PUImageTileViewController _updateImageIfNeeded]
  -[PUImageTileViewController targetSizeForProposedTargetSize:]
  -[PUImageTileViewController _setImage:isFullQuality:]
  -[PUImageTileViewController shouldUseFullsizeImageData]
  -[PUImageTileViewController imageModulationManager]
  -[PUImageTileViewController imageRequester:didChange:]
  -[PUImageTileViewController _invalidateImageLayerModulator]
  -[PUImageTileViewController _setShouldUsePenultimateVersionForNextImageUpdate:]
  -[PUImageTileViewController presentingViewControllerForImageAnalysisInteraction:]
  -[PUImageTileViewController _setFullsizeImageUntransformedSize:]
  -[PUImageTileViewController shouldAvoidInPlaceSnapshottedFadeOut]
  -[PUImageTileViewController _fullsizeImageOrientation]
  -[PUImageTileViewController _targetSize]
  -[PUImageTileViewController setCanUseFullsizeTiledLayer:]
  -[PUImageTileViewController setGainMapImage:]
  -[PUImageTileViewController setNeedsUpdateTargetSize:]
  -[PUImageTileViewController _setNeedsUpdateFullsizeImageMetadata:]
  -[PUImageTileViewController updateMutableImageLayerModulator:]
  -[PUImageTileViewController _setFullsizeImageURL:]
  -[PUImageTileViewController imageInteraction]
  -[PUImageTileViewController _imageView]
  -[PUImageTileViewController _setFullsizeImageOrientation:]
  -[PUImageTileViewController vkViewExistsAtPoint:]
  -[PUImageTileViewController needsUpdateTargetSize]
  -[PUImageTileViewController _fullsizeImageSize]
  -[PUImageTileViewController applyLayoutInfo:]
  -[PUImageTileViewController didChangeVisibleRect]
  -[PUImageTileViewController gainMapImage]
  -[PUImageTileViewController setPlaceholderColor:]
  -[PUImageTileViewController _needsUpdateImageLayerModulator]
  -[PUImageTileViewController browsingViewModel]
  -[PUImageTileViewController setAssetViewModel:]
  -[PUImageTileViewController _isDisplayingFullQualityImage]
  -[PUImageTileViewController _setFullsizeImageData:]
  -[PUImageTileViewController becomeReusable]
  -[PUImageTileViewController _needsUpdateImage]
  -[PUImageTileViewController _assetLoadingStage]
  -[PUImageTileViewController placeholderColor]
  -[PUImageTileViewController setGainMapValue:]
  -[PUImageTileViewController setPreserveImageDuringReload:]
  -[PUImageTileViewController setMediaProvider:]
  -[PUImageTileViewController _updateReadyForDisplay]
  -[PUImageTileViewController _imageRequester]
  -[PUImageTileViewController _setNeedsUpdateFullsizeTiledLayer:]
  -[PUImageTileViewController imageAnalysisInteractionDidDismissVisualSearchController:]
  -[PUImageTileViewController animatesImageAppearance]
  -[PUImageTileViewController _handleBrowsingViewModel:didChange:]
  -[PUImageTileViewController preserveImageDuringReload]
  -[PUImageTileViewController _invalidateTargetSize]
  -[PUImageTileViewController visualImageInteractionEnabled]
  -[PUImageTileViewController _updateTargetSizeIfNeeded]
  -[PUImageTileViewController _setVisualIntelligenceAnalyzingImageIfNeeded]
  -[PUImageTileViewController _invalidateImageView]
  -[PUImageTileViewController _needsUpdateFullsizeImageMetadata]
  -[PUImageTileViewController updateModulatorInputs]
  -[PUImageTileViewController _needsUpdateImageView]
  -[PUImageTileViewController _setDisplayingFullQualityImage:]
  -[PUImageTileViewController canUseFullsizeTiledLayer]
  -[PUImageTileViewController gainMapValue]
  -[PUImageTileViewController _assetLoadingStartDate]
  -[PUImageTileViewController gainMapImageIsAvailable]
  -[PUImageTileViewController _addVKImageInteractionToImageView]
  -[PUImageTileViewController _needsUpdateImageLayerModulatorInput]
  -[PUImageTileViewController _setNeedsUpdateImageLayerModulator:]
  -[PUImageTileViewController setRequiresFullQualityImage:]
  -[PUImageTileViewController _setAssetLoadingStartDate:]
  -[PUImageTileViewController _setNeedsUpdateImage:]
  -[PUImageTileViewController _setNeedsUpdateImageView:]
  -[PUImageTileViewController setShouldUseFullsizeImageData:]
  -[PUImageTileViewController shouldUsePenultimateVersionForNextImageUpdate]
  -[PUImageTileViewController _fullsizeImageUntransformedSize]
  -[PUImageTileViewController _setFullsizeTiledLayer:]
  -[PUImageTileViewController setBrowsingViewModel:]
  -[PUImageTileViewController _invalidateFullsizeTiledLayer]
  -[PUImageTileViewController _updateVKAnalysisAndDisplayMode]
  -[PUImageTileViewController setImageInteraction:]
  -[PUImageTileViewController _setImageRequester:]
  -[PUImageTileViewController _updateImageLayerModulatorIfNeeded]
  -[PUImageTileViewController setEdgeAntialiasingEnabled:]
  -[PUImageTileViewController setVisualImageInteractionEnabled:]
  -[PUImageTileViewController _cancelAllImageRequests]
  -[PUImageTileViewController _updateImageViewIfNeeded]
  -[PUImageTileViewController _invalidateImage]
  -[PUImageTileViewController vkVisualSearchExistsAtPoint:]
  -[PUImageTileViewController generateAssetTransitionInfo]
  -[PUImageTileViewController _removeVKImageInteractionFromImageView]
  -[PUImageTileViewController imageIsFullQuality]
  -[PUImageTileViewController _setFullsizeImageSize:]
  -[PUImageTileViewController _setNeedsUpdateImageLayerModulatorInput:]
  -[PUImageTileViewController _invalidateFullsizeImageMetadata]
  -[PUImageTileViewController setImageLayerModulator:]
  -[PUImageTileViewController imageLayerModulator]
  -[PUImageTileViewController assetDidChange]
  -[PUImageTileViewController setAnimatesImageAppearance:]
  -[PUImageTileViewController imageAnalysisInteraction:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[PUImageTileViewController assetViewModelDidChange]
  -[PUImageTileViewController _updateFullsizeTiledLayerIfNeeded]
  -[PUImageTileViewController _fullsizeTiledLayer]
  -[PUImageTileViewController _updateFullsizeImageMetadataIfNeeded]
  -[PUImageTileViewController _handleShouldReloadAssetMediaNotification:]
  -[PUImageTileViewController _updateAssetLoadingStage]
  -[PUImageTileViewController _updateIfNeeded]
  -[PUImageTileViewController _handleAssetViewModel:didChange:]
  -[PUImageTileViewController image]
  -[PUImageTileViewController .cxx_destruct]
  -[PUImageTileViewController _updateImageLayerModulatorInputIfNeeded]
  -[PUImageTileViewController setPreloadedImage:]
  -[PUImageTileViewController mediaProvider]
  -[PUImageTileViewController setAsset:]
  -[PUImageTileViewController viewModel:didChange:]
  -[PUImageTileViewController asset]
  -[PUImageTileViewController _needsUpdate]
  -[PUImageTileViewController setImageModulationManager:]
  -[PUImageTileViewController _invalidate]
  -[PUImageTileViewController setPresentingDelegate:]
  -[PUImageTileViewController dealloc]
  -[PUImageTileViewController presentingDelegate]
  -[PUImageTileViewController loadView]


PUEditingErrorPresentationController : PUErrorPresentationController
  // class methods
  +[PUEditingErrorPresentationController errorIsDownloadError:]
  +[PUEditingErrorPresentationController editingErrorTypeFromError:]
  +[PUEditingErrorPresentationController _mediaSpecificMessageForKeyPrefix:forAsset:]
  +[PUEditingErrorPresentationController _hardwareModelSpecificMessageForKeyPrefix:]

  // instance methods
  -[PUEditingErrorPresentationController additionalRadarDescriptionLinesForAsset:]
  -[PUEditingErrorPresentationController shouldShowFileRadarAction]
  -[PUEditingErrorPresentationController configureAlertPropertiesFromError:withAssets:willShowFileRadarButton:alertCompletion:]
  -[PUEditingErrorPresentationController configureRadarPropertiesFromError:withAssets:]
  -[PUEditingErrorPresentationController initWithError:forAsset:]


PUPhotoEditAggregateSession : NSObject
 @property  NSArray *_autoCropKeys
 @property  BOOL _hasCropSuggestion
 @property  BOOL _hasPerspectiveCropSuggestion
 @property  BOOL _autoCropAdjusted
 @property  BOOL _autoCropReset
 @property  BOOL toggledOriginal
 @property  BOOL pluginStarted
 @property  BOOL pluginSaved
 @property  NSString *pluginIdentifier
 @property  BOOL shouldUseVideoKeys
 @property  double originalDuration

  // instance methods
  -[PUPhotoEditAggregateSession .cxx_destruct]
  -[PUPhotoEditAggregateSession setOriginalDuration:]
  -[PUPhotoEditAggregateSession originalDuration]
  -[PUPhotoEditAggregateSession pluginIdentifier]
  -[PUPhotoEditAggregateSession notifyDidResetCrop]
  -[PUPhotoEditAggregateSession _hasCropSuggestion]
  -[PUPhotoEditAggregateSession notifyDidApplyAutoCrop]
  -[PUPhotoEditAggregateSession notifyDidApplyPerspectiveAutoCrop]
  -[PUPhotoEditAggregateSession notifyDidAdjustCrop]
  -[PUPhotoEditAggregateSession shouldUseVideoKeys]
  -[PUPhotoEditAggregateSession _setHasCropSuggestion:]
  -[PUPhotoEditAggregateSession _setAutoCropAdjusted:]
  -[PUPhotoEditAggregateSession _setAutoCropReset:]
  -[PUPhotoEditAggregateSession _setHasPerspectiveCropSuggestion:]
  -[PUPhotoEditAggregateSession _autoCropReset]
  -[PUPhotoEditAggregateSession _hasPerspectiveCropSuggestion]
  -[PUPhotoEditAggregateSession _autoCropAdjusted]
  -[PUPhotoEditAggregateSession _keyForSessionEnd:]
  -[PUPhotoEditAggregateSession _autoCropKeys]
  -[PUPhotoEditAggregateSession toggledOriginal]
  -[PUPhotoEditAggregateSession pluginStarted]
  -[PUPhotoEditAggregateSession pluginSaved]
  -[PUPhotoEditAggregateSession _sessionKeysWithEnd:]
  -[PUPhotoEditAggregateSession _recordKeys:]
  -[PUPhotoEditAggregateSession finishSessionWithEnd:newCompositionController:oldCompositionController:]
  -[PUPhotoEditAggregateSession finishSessionWithEnd:]
  -[PUPhotoEditAggregateSession setToggledOriginal:]
  -[PUPhotoEditAggregateSession setPluginStarted:]
  -[PUPhotoEditAggregateSession setPluginSaved:]
  -[PUPhotoEditAggregateSession setPluginIdentifier:]
  -[PUPhotoEditAggregateSession setShouldUseVideoKeys:]


PUImportActionCoordinator : NSObject
 @property  UIViewController *viewController
 @property  PXImportController *importController
 @property  NSString *loggingPrefix
 @property  UIAction *importAllAction
 @property  UIMenu *importActionsMenu
 @property  NSNumberFormatter *percentageNumberFormatter
 @property  BOOL ppt_alwaysImportDuplicatesNoPrompt
 @property  NSByteCountFormatter *byteCountFormatter
 @property  PLCacheDeleteClient *cacheDeleteClient
 @property  <PUImportActionCoordinatorDelegate> *delegate
 @property  long long loggingSource
 @property  BOOL presentsAdditionalDeleteAllConfirmation

  // class methods
  +[PUImportActionCoordinator retrieveBatteryState:batteryLevel:]
  +[PUImportActionCoordinator importBehaviorForBatteryState:batteryLevel:]
  +[PUImportActionCoordinator deleteAllConfirmationMessageForItems:importSource:]
  +[PUImportActionCoordinator lowBatteryLevelThresholdForDevice]

  // instance methods
  -[PUImportActionCoordinator loggingPrefix]
  -[PUImportActionCoordinator viewController]
  -[PUImportActionCoordinator setLoggingPrefix:]
  -[PUImportActionCoordinator .cxx_destruct]
  -[PUImportActionCoordinator setDelegate:]
  -[PUImportActionCoordinator setCacheDeleteClient:]
  -[PUImportActionCoordinator cacheDeleteClient]
  -[PUImportActionCoordinator delegate]
  -[PUImportActionCoordinator setViewController:]
  -[PUImportActionCoordinator actionMenuForImportButton]
  -[PUImportActionCoordinator importAllAction]
  -[PUImportActionCoordinator importAllFromBarButtonItem]
  -[PUImportActionCoordinator setImportAllAction:]
  -[PUImportActionCoordinator importController]
  -[PUImportActionCoordinator someItemsButNotAllAreSelected]
  -[PUImportActionCoordinator importActionsMenu]
  -[PUImportActionCoordinator _importItems:allowDuplicates:]
  -[PUImportActionCoordinator setImportActionsMenu:]
  -[PUImportActionCoordinator notifyDelegateOfImportCancellation]
  -[PUImportActionCoordinator ppt_alwaysImportDuplicatesNoPrompt]
  -[PUImportActionCoordinator percentageNumberFormatter]
  -[PUImportActionCoordinator stopImport]
  -[PUImportActionCoordinator byteCountFormatter]
  -[PUImportActionCoordinator _handleDiskAvailabilityRequestForItems:withSuccess:numBytesPurged:additionalBytesRequired:error:]
  -[PUImportActionCoordinator checkBatteryLevelWithCompletion:]
  -[PUImportActionCoordinator _commitImportingItems:]
  -[PUImportActionCoordinator _presentInsufficientDiskSpaceAlertForItems:]
  -[PUImportActionCoordinator deleteItemsFromBarButtonItem:withOneUpHintItems:]
  -[PUImportActionCoordinator presentsAdditionalDeleteAllConfirmation]
  -[PUImportActionCoordinator _deleteItems:]
  -[PUImportActionCoordinator initWithViewController:importController:loggingSource:]
  -[PUImportActionCoordinator configureImportActionsForBarButtonItem:]
  -[PUImportActionCoordinator ppt_beginImportFromBarButtonItem]
  -[PUImportActionCoordinator deleteItemsFromBarButtonItem:]
  -[PUImportActionCoordinator deleteItemsWithoutConfirmation:]
  -[PUImportActionCoordinator loggingSource]
  -[PUImportActionCoordinator setPresentsAdditionalDeleteAllConfirmation:]
  -[PUImportActionCoordinator setImportController:]
  -[PUImportActionCoordinator setPercentageNumberFormatter:]
  -[PUImportActionCoordinator setPpt_alwaysImportDuplicatesNoPrompt:]
  -[PUImportActionCoordinator setByteCountFormatter:]


PUImportAddToAlbumsPickerCell : UITableViewCell
 @property  UIButton *checkMarkButton
 @property  unsigned long type
 @property  <PXDisplayCollection> *collection
 @property  UIImage *thumbail

  // instance methods
  -[PUImportAddToAlbumsPickerCell isSelectable]
  -[PUImportAddToAlbumsPickerCell didAddSubview:]
  -[PUImportAddToAlbumsPickerCell performChanges:]
  -[PUImportAddToAlbumsPickerCell setCollection:]
  -[PUImportAddToAlbumsPickerCell mutableChangeObject]
  -[PUImportAddToAlbumsPickerCell collection]
  -[PUImportAddToAlbumsPickerCell setType:]
  -[PUImportAddToAlbumsPickerCell .cxx_destruct]
  -[PUImportAddToAlbumsPickerCell layoutSubviews]
  -[PUImportAddToAlbumsPickerCell setThumbnail:]
  -[PUImportAddToAlbumsPickerCell setSelected:]
  -[PUImportAddToAlbumsPickerCell prepareForReuse]
  -[PUImportAddToAlbumsPickerCell thumbail]
  -[PUImportAddToAlbumsPickerCell type]
  -[PUImportAddToAlbumsPickerCell initWithStyle:reuseIdentifier:]
  -[PUImportAddToAlbumsPickerCell _configureCell]
  -[PUImportAddToAlbumsPickerCell checkMarkButton]
  -[PUImportAddToAlbumsPickerCell setCheckMarkButton:]


PUImportAddToAlbumsPickerViewController : UITableViewController <PXCollectionsDataSourceManagerObserver, PUAlbumCreatorDelegate>
 @property  PXPhotoKitCollectionsDataSource *dataSource
 @property  PXPhotoKitCollectionsDataSourceManager *dataSourceManager
 @property  PXPhotoKitCollectionsDataSourceManagerConfiguration *dataSourceManagerConfiguration
 @property  <PXImportAlbumPickerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportAddToAlbumsPickerViewController dataSourceOffset]
  +[PUImportAddToAlbumsPickerViewController dataSourceShiftedIndexPath:]
  +[PUImportAddToAlbumsPickerViewController userCreatredAlbumsPhotoKitConfiguration]
  +[PUImportAddToAlbumsPickerViewController cellTypeForPosition:]

  // instance methods
  -[PUImportAddToAlbumsPickerViewController preferredContentSize]
  -[PUImportAddToAlbumsPickerViewController tableView:didUnhighlightRowAtIndexPath:]
  -[PUImportAddToAlbumsPickerViewController numberOfSectionsInTableView:]
  -[PUImportAddToAlbumsPickerViewController setDataSource:]
  -[PUImportAddToAlbumsPickerViewController dataSourceManager]
  -[PUImportAddToAlbumsPickerViewController tableView:numberOfRowsInSection:]
  -[PUImportAddToAlbumsPickerViewController tableView:titleForHeaderInSection:]
  -[PUImportAddToAlbumsPickerViewController tableView:heightForRowAtIndexPath:]
  -[PUImportAddToAlbumsPickerViewController .cxx_destruct]
  -[PUImportAddToAlbumsPickerViewController tableView:didSelectRowAtIndexPath:]
  -[PUImportAddToAlbumsPickerViewController viewDidLoad]
  -[PUImportAddToAlbumsPickerViewController tableView:cellForRowAtIndexPath:]
  -[PUImportAddToAlbumsPickerViewController setDelegate:]
  -[PUImportAddToAlbumsPickerViewController dataSource]
  -[PUImportAddToAlbumsPickerViewController init]
  -[PUImportAddToAlbumsPickerViewController tableView:shouldHighlightRowAtIndexPath:]
  -[PUImportAddToAlbumsPickerViewController viewWillAppear:]
  -[PUImportAddToAlbumsPickerViewController delegate]
  -[PUImportAddToAlbumsPickerViewController albumListViewControllerSpec]
  -[PUImportAddToAlbumsPickerViewController createAlbumListViewController]
  -[PUImportAddToAlbumsPickerViewController completionHandler]
  -[PUImportAddToAlbumsPickerViewController setDataSourceManager:]
  -[PUImportAddToAlbumsPickerViewController observable:didChange:context:]
  -[PUImportAddToAlbumsPickerViewController canPresentPicker]
  -[PUImportAddToAlbumsPickerViewController hostViewContoller]
  -[PUImportAddToAlbumsPickerViewController setDataSourceManagerConfiguration:]
  -[PUImportAddToAlbumsPickerViewController dataSourceManagerConfiguration]
  -[PUImportAddToAlbumsPickerViewController updateDatasource]
  -[PUImportAddToAlbumsPickerViewController _heightForIndex:]
  -[PUImportAddToAlbumsPickerViewController _selectCell:]
  -[PUImportAddToAlbumsPickerViewController _handleCreateAlbum]
  -[PUImportAddToAlbumsPickerViewController _dismissPicker]
  -[PUImportAddToAlbumsPickerViewController addAlbumPlaceHolder:newAlbum:]
  -[PUImportAddToAlbumsPickerViewController posterImageForCollection:cell:forCellType:]
  -[PUImportAddToAlbumsPickerViewController configureDataSourceManagerConfiguration:]
  -[PUImportAddToAlbumsPickerViewController selectCollection:]


PUImportAddToAlbumsToolbarView : UIView
 @property  UILabel *titleLabel
 @property  UILabel *destinationLabel
 @property  NSString *destinationCollectionTitle
 @property  UIButton *destinationButton
 @property  <PUImportAddToAlbumsToolbarViewDelegate> *delegate

  // instance methods
  -[PUImportAddToAlbumsToolbarView titleLabel]
  -[PUImportAddToAlbumsToolbarView .cxx_destruct]
  -[PUImportAddToAlbumsToolbarView accessibilityLabel]
  -[PUImportAddToAlbumsToolbarView setTitleLabel:]
  -[PUImportAddToAlbumsToolbarView setDelegate:]
  -[PUImportAddToAlbumsToolbarView setDestinationLabel:]
  -[PUImportAddToAlbumsToolbarView accessibilityTraits]
  -[PUImportAddToAlbumsToolbarView isAccessibilityElement]
  -[PUImportAddToAlbumsToolbarView initWithFrame:]
  -[PUImportAddToAlbumsToolbarView destinationLabel]
  -[PUImportAddToAlbumsToolbarView delegate]
  -[PUImportAddToAlbumsToolbarView accessibilityFrame]
  -[PUImportAddToAlbumsToolbarView buttonTouchDown:]
  -[PUImportAddToAlbumsToolbarView _setupSubviews]
  -[PUImportAddToAlbumsToolbarView buttonPressed:]
  -[PUImportAddToAlbumsToolbarView intrinsicContentSize]
  -[PUImportAddToAlbumsToolbarView _setupButton]
  -[PUImportAddToAlbumsToolbarView buttonTouchDragInside:]
  -[PUImportAddToAlbumsToolbarView buttonTouchDragOutside:]
  -[PUImportAddToAlbumsToolbarView setDestinationCollectionTitle:]
  -[PUImportAddToAlbumsToolbarView _updateButtonText]
  -[PUImportAddToAlbumsToolbarView destinationCollectionTitle]
  -[PUImportAddToAlbumsToolbarView destinationButton]
  -[PUImportAddToAlbumsToolbarView _animateButtonAlpha:]


PUImportChangeDetailsCollectionViewHelper : NSObject
 @property  UICollectionView *collectionView

  // instance methods
  -[PUImportChangeDetailsCollectionViewHelper initWithCollectionView:]
  -[PUImportChangeDetailsCollectionViewHelper .cxx_destruct]
  -[PUImportChangeDetailsCollectionViewHelper collectionView]
  -[PUImportChangeDetailsCollectionViewHelper setCollectionView:]
  -[PUImportChangeDetailsCollectionViewHelper applyChangeDetails:completionBlock:]
  -[PUImportChangeDetailsCollectionViewHelper transitionFromDataSource:toDataSource:changeHistory:animated:completionHandler:]


PUImportCustomViewBarButton : UIButton
 @property  UIView *customView
 @property  NSString *customAccessibilityLabel

  // instance methods
  -[PUImportCustomViewBarButton setHighlighted:]
  -[PUImportCustomViewBarButton invalidateIntrinsicContentSize]
  -[PUImportCustomViewBarButton updateConstraints]
  -[PUImportCustomViewBarButton .cxx_destruct]
  -[PUImportCustomViewBarButton accessibilityLabel]
  -[PUImportCustomViewBarButton sizeToFit]
  -[PUImportCustomViewBarButton customView]
  -[PUImportCustomViewBarButton setCustomAccessibilityLabel:]
  -[PUImportCustomViewBarButton sizeThatFits:]
  -[PUImportCustomViewBarButton initWithCustomView:]
  -[PUImportCustomViewBarButton intrinsicContentSize]
  -[PUImportCustomViewBarButton customAccessibilityLabel]


PUImportFakePhotosDataSource : PXPhotosDataSource
 @property  PXImportAssetsDataSource *importDataSource

  // instance methods
  -[PUImportFakePhotosDataSource prepareForPhotoLibraryChange:]
  -[PUImportFakePhotosDataSource photoLibraryDidChangeOnMainQueue:]
  -[PUImportFakePhotosDataSource numberOfItemsInSection:]
  -[PUImportFakePhotosDataSource setImportDataSource:]
  -[PUImportFakePhotosDataSource numberOfSections]
  -[PUImportFakePhotosDataSource .cxx_destruct]
  -[PUImportFakePhotosDataSource initWithImportDataSource:]
  -[PUImportFakePhotosDataSource importDataSource]
  -[PUImportFakePhotosDataSource prefetchApproximateAssetsAtIndexPaths:reverseOrder:]


PUImportFloatingToolbarView : UIView
 @property  UIVisualEffectView *visualEffectView
 @property  UIToolbar *toolbar
 @property  UIView *shadowView
 @property  NSArray *items
 @property  BOOL shouldBlurBackground
 @property  NSString *backdropViewGroupName

  // instance methods
  -[PUImportFloatingToolbarView setItems:animated:]
  -[PUImportFloatingToolbarView setVisualEffectView:]
  -[PUImportFloatingToolbarView items]
  -[PUImportFloatingToolbarView .cxx_destruct]
  -[PUImportFloatingToolbarView _updateBackground]
  -[PUImportFloatingToolbarView sizeToFit]
  -[PUImportFloatingToolbarView layoutSubviews]
  -[PUImportFloatingToolbarView init]
  -[PUImportFloatingToolbarView shadowView]
  -[PUImportFloatingToolbarView setBackdropViewGroupName:]
  -[PUImportFloatingToolbarView toolbar]
  -[PUImportFloatingToolbarView sizeThatFits:]
  -[PUImportFloatingToolbarView setItems:]
  -[PUImportFloatingToolbarView setToolbar:]
  -[PUImportFloatingToolbarView setShadowView:]
  -[PUImportFloatingToolbarView backdropViewGroupName]
  -[PUImportFloatingToolbarView intrinsicContentSize]
  -[PUImportFloatingToolbarView visualEffectView]
  -[PUImportFloatingToolbarView _updateBackdropViewGroupName]
  -[PUImportFloatingToolbarView setShouldBlurBackground:]
  -[PUImportFloatingToolbarView shouldBlurBackground]


PUImportHistoryGridViewController : PUPhotosGridViewController <PUSectionedGridLayoutDelegate, PXImportHistorySectionHeaderViewDelegate>
 @property  PHFetchResult *importSessions
 @property  PLDateRangeFormatter *dateFormatter
 @property  double referenceWidth
 @property  NSNumber *cachedHeaderHeight
 @property  PXImportHistorySectionHeaderView *referenceHeaderView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUImportHistoryGridViewController dateFormatter]
  -[PUImportHistoryGridViewController initWithSpec:]
  -[PUImportHistoryGridViewController viewWillLayoutSubviews]
  -[PUImportHistoryGridViewController setEditing:animated:]
  -[PUImportHistoryGridViewController .cxx_destruct]
  -[PUImportHistoryGridViewController viewDidLoad]
  -[PUImportHistoryGridViewController cachedHeaderHeight]
  -[PUImportHistoryGridViewController init]
  -[PUImportHistoryGridViewController oneUpPresentationOrigin]
  -[PUImportHistoryGridViewController headerViewDidPressActionButton:]
  -[PUImportHistoryGridViewController setReferenceWidth:]
  -[PUImportHistoryGridViewController setCachedHeaderHeight:]
  -[PUImportHistoryGridViewController dealloc]
  -[PUImportHistoryGridViewController referenceWidth]
  -[PUImportHistoryGridViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUImportHistoryGridViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUImportHistoryGridViewController sectionedGridLayout:accessibilitySectionHeaderHeightForVisualSection:]
  -[PUImportHistoryGridViewController _configureSectionHeaderView:section:]
  -[PUImportHistoryGridViewController setSelected:itemsAtIndexes:inSection:animated:]
  -[PUImportHistoryGridViewController newGridLayout]
  -[PUImportHistoryGridViewController allowSlideshowButton]
  -[PUImportHistoryGridViewController setImportSessions:]
  -[PUImportHistoryGridViewController importSessions]
  -[PUImportHistoryGridViewController _importHistoryContentSizeCategoryDidChangeNotification:]
  -[PUImportHistoryGridViewController referenceHeaderView]
  -[PUImportHistoryGridViewController initiallyScrolledToBottom]
  -[PUImportHistoryGridViewController shouldPerformAutomaticContentOffsetAdjustment]
  -[PUImportHistoryGridViewController setReferenceHeaderView:]


PUImportOneUpCell : PUPhotosSharingGridCell <PXChangeObserver>
 @property  UITextField *debugTextField
 @property  long long thumbnailRequestID
 @property  <PUImportOneUpCellDisplayDelegate> *displayDelegate
 @property  PXImportItemViewModel *importItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportOneUpCell alphaForSelectedCells]

  // instance methods
  -[PUImportOneUpCell setHighlighted:]
  -[PUImportOneUpCell initWithCoder:]
  -[PUImportOneUpCell .cxx_destruct]
  -[PUImportOneUpCell layoutSubviews]
  -[PUImportOneUpCell setDisplayDelegate:]
  -[PUImportOneUpCell displayDelegate]
  -[PUImportOneUpCell prepareForReuse]
  -[PUImportOneUpCell initWithFrame:]
  -[PUImportOneUpCell dealloc]
  -[PUImportOneUpCell observable:didChange:context:]
  -[PUImportOneUpCell setThumbnailRequestID:]
  -[PUImportOneUpCell thumbnailRequestID]
  -[PUImportOneUpCell refreshThumbnail]
  -[PUImportOneUpCell updateDebugLabel:]
  -[PUImportOneUpCell debugTextField]
  -[PUImportOneUpCell setDebugTextField:]
  -[PUImportOneUpCell _commonPUImportOneUpCellInitialization]
  -[PUImportOneUpCell contextForObservingViewModelChanges]
  -[PUImportOneUpCell importItem]
  -[PUImportOneUpCell updatePhotoViewForImportItem:]
  -[PUImportOneUpCell updateSelectedVisualAppearance]
  -[PUImportOneUpCell setImage:isPlaceholder:]
  -[PUImportOneUpCell updateBadge]
  -[PUImportOneUpCell setImportItem:]


PUImportOneUpCellBadgeView : UICollectionReusableView
 @property  UIView *badgeContainerView
 @property  UIView *badgeView
 @property  UIActivityIndicatorView *spinner
 @property  BOOL inUpdateBlock
 @property  BOOL needsBadgeUpdate
 @property  long long badgeType
 @property  BOOL selectable

  // instance methods
  -[PUImportOneUpCellBadgeView badgeView]
  -[PUImportOneUpCellBadgeView badgeType]
  -[PUImportOneUpCellBadgeView .cxx_destruct]
  -[PUImportOneUpCellBadgeView setBadgeView:]
  -[PUImportOneUpCellBadgeView layoutSubviews]
  -[PUImportOneUpCellBadgeView setSpinner:]
  -[PUImportOneUpCellBadgeView badgeContainerView]
  -[PUImportOneUpCellBadgeView prepareForReuse]
  -[PUImportOneUpCellBadgeView selectable]
  -[PUImportOneUpCellBadgeView initWithFrame:]
  -[PUImportOneUpCellBadgeView spinner]
  -[PUImportOneUpCellBadgeView setSelectable:]
  -[PUImportOneUpCellBadgeView intrinsicContentSize]
  -[PUImportOneUpCellBadgeView updateBadgeUIIfNeeded]
  -[PUImportOneUpCellBadgeView setBadgeType:]
  -[PUImportOneUpCellBadgeView setNeedsBadgeUpdate:]
  -[PUImportOneUpCellBadgeView needsBadgeUpdate]
  -[PUImportOneUpCellBadgeView setBadgeContainerView:]
  -[PUImportOneUpCellBadgeView performBadgeUpdates:]
  -[PUImportOneUpCellBadgeView setNeedsBadgeUpdate]
  -[PUImportOneUpCellBadgeView _createSpinnerIfNecessary]
  -[PUImportOneUpCellBadgeView inUpdateBlock]
  -[PUImportOneUpCellBadgeView setInUpdateBlock:]


PUImportOneUpModalTransition : NSObject
 @property  PUPhotoPinchGestureRecognizer *pinchGestureRecognizer
 @property  PXPinchTracker *pinchTracker
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  PXSwipeDownTracker *swipeDownTracker
 @property  long long activeGesture
 @property  long long operation
 @property  UIViewPropertyAnimator *transitionAnimator
 @property  UIViewPropertyAnimator *floatingItemsAnimator
 @property  <UIViewControllerContextTransitioning> *context
 @property  NSArray *floatingItems
 @property  PUImportOneUpTransitionItem *manipulatedFloatingItem
 @property  double startingAnimationProgress

  // class methods
  +[PUImportOneUpModalTransition transitioningObjectInViewController:]
  +[PUImportOneUpModalTransition defaultAnimationDurationForOperation:]
  +[PUImportOneUpModalTransition propertyAnimatorWithInitialVelocity:forOperation:inDirection:]
  +[PUImportOneUpModalTransition scaledSizeForTargetSize:aspectFillingIntoSize:]

  // instance methods
  -[PUImportOneUpModalTransition operation]
  -[PUImportOneUpModalTransition startTransition]
  -[PUImportOneUpModalTransition pauseAnimation]
  -[PUImportOneUpModalTransition pinchGestureRecognizer]
  -[PUImportOneUpModalTransition .cxx_destruct]
  -[PUImportOneUpModalTransition panGestureRecognizer]
  -[PUImportOneUpModalTransition activeGesture]
  -[PUImportOneUpModalTransition setContext:]
  -[PUImportOneUpModalTransition setActiveGesture:]
  -[PUImportOneUpModalTransition context]
  -[PUImportOneUpModalTransition updateTransitionWithPinchGestureRecognizer:]
  -[PUImportOneUpModalTransition updateTransitionWithPanGestureRecognizer:]
  -[PUImportOneUpModalTransition continuousGestureRecognizerIsActive:]
  -[PUImportOneUpModalTransition prepareFloatingItemsForAnimation]
  -[PUImportOneUpModalTransition floatingItems]
  -[PUImportOneUpModalTransition handleTransitionComplete:]
  -[PUImportOneUpModalTransition animateToPosition:]
  -[PUImportOneUpModalTransition setStartingAnimationProgress:]
  -[PUImportOneUpModalTransition configureFloatingItemForInteractiveTracking]
  -[PUImportOneUpModalTransition setFloatingItems:]
  -[PUImportOneUpModalTransition pinchTracker]
  -[PUImportOneUpModalTransition swipeDownTracker]
  -[PUImportOneUpModalTransition unitVelocityForDisplayVelocity:]
  -[PUImportOneUpModalTransition handleTapHoldGesture:]
  -[PUImportOneUpModalTransition setFloatingItemsAnimator:]
  -[PUImportOneUpModalTransition floatingItemsAnimator]
  -[PUImportOneUpModalTransition transitionAnimator]
  -[PUImportOneUpModalTransition manipulatedFloatingItem]
  -[PUImportOneUpModalTransition currentProgressForFloatingItem:atSize:inDirection:]
  -[PUImportOneUpModalTransition setManipulatedFloatingItem:]
  -[PUImportOneUpModalTransition endInteraction]
  -[PUImportOneUpModalTransition startingAnimationProgress]
  -[PUImportOneUpModalTransition animatingPositionForPinchTracker:]
  -[PUImportOneUpModalTransition animatingPositionForSwipeDownTracker:]
  -[PUImportOneUpModalTransition initWithOperation:transitionContext:pinchGestureRecognizer:panGestureRecognizer:startsInteractive:]
  -[PUImportOneUpModalTransition setTransitionAnimator:]


PUImportOneUpPreviewingViewController : UIViewController
 @property  PXImportItemViewModel *importItemViewModel
 @property  PXImportMediaProvider *mediaProvider
 @property  PUImportOneUpTransitionView *previewView

  // instance methods
  -[PUImportOneUpPreviewingViewController setMediaProvider:]
  -[PUImportOneUpPreviewingViewController previewView]
  -[PUImportOneUpPreviewingViewController .cxx_destruct]
  -[PUImportOneUpPreviewingViewController mediaProvider]
  -[PUImportOneUpPreviewingViewController viewDidLoad]
  -[PUImportOneUpPreviewingViewController updatePreferredContentSize]
  -[PUImportOneUpPreviewingViewController setPreviewView:]
  -[PUImportOneUpPreviewingViewController importItemViewModel]
  -[PUImportOneUpPreviewingViewController sizeForImportItemViewModel:]
  -[PUImportOneUpPreviewingViewController initWithImportItemViewModel:startingImage:mediaProvider:]
  -[PUImportOneUpPreviewingViewController setImportItemViewModel:]


PUImportOneUpScrubberCell : PUReviewScrubberCell <PXChangeObserver>
 @property  UIActivityIndicatorView *spinner
 @property  BOOL needsBadgeUpdate
 @property  long long thumbnailRequestID
 @property  <PUImportOneUpScrubberCellDisplayDelegate> *displayDelegate
 @property  PXImportItemViewModel *importItem
 @property  long long badgeType
 @property  BOOL selectable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportOneUpScrubberCell emptyThumbnailBackgroundColor]

  // instance methods
  -[PUImportOneUpScrubberCell initWithCoder:]
  -[PUImportOneUpScrubberCell badgeType]
  -[PUImportOneUpScrubberCell .cxx_destruct]
  -[PUImportOneUpScrubberCell layoutSubviews]
  -[PUImportOneUpScrubberCell setDisplayDelegate:]
  -[PUImportOneUpScrubberCell displayDelegate]
  -[PUImportOneUpScrubberCell prepareForReuse]
  -[PUImportOneUpScrubberCell selectable]
  -[PUImportOneUpScrubberCell initWithFrame:]
  -[PUImportOneUpScrubberCell spinner]
  -[PUImportOneUpScrubberCell setSelectable:]
  -[PUImportOneUpScrubberCell dealloc]
  -[PUImportOneUpScrubberCell observable:didChange:context:]
  -[PUImportOneUpScrubberCell updateBadgeUIIfNeeded]
  -[PUImportOneUpScrubberCell setBadgeType:]
  -[PUImportOneUpScrubberCell setNeedsBadgeUpdate:]
  -[PUImportOneUpScrubberCell needsBadgeUpdate]
  -[PUImportOneUpScrubberCell setThumbnailRequestID:]
  -[PUImportOneUpScrubberCell thumbnailRequestID]
  -[PUImportOneUpScrubberCell refreshThumbnail]
  -[PUImportOneUpScrubberCell importItem]
  -[PUImportOneUpScrubberCell setImportItem:]
  -[PUImportOneUpScrubberCell _createSpinnerIfNecessary]
  -[PUImportOneUpScrubberCell _commonPUImportOneUpScrubberCellInitialization]
  -[PUImportOneUpScrubberCell updateToThumbnail:]


PUImportOneUpTransitionController : PUModalTransition <UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning, UIViewControllerInteractiveTransitioning>
 @property  PUPhotoPinchGestureRecognizer *presentingPinchGestureRecognizer
 @property  PUPhotoPinchGestureRecognizer *dismissPinchGestureRecognizer
 @property  UIPanGestureRecognizer *dismissPanGestureRecognizer
 @property  UIViewController *presentingViewController
 @property  long long operation
 @property  PUImportOneUpModalTransition *transition
 @property  BOOL hasInstalledDismissGestureRecognizers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[PUImportOneUpTransitionController operation]
  -[PUImportOneUpTransitionController transition]
  -[PUImportOneUpTransitionController setTransition:]
  -[PUImportOneUpTransitionController interactionControllerForDismissal:]
  -[PUImportOneUpTransitionController wantsInteractiveStart]
  -[PUImportOneUpTransitionController dismissPanGestureRecognizer]
  -[PUImportOneUpTransitionController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUImportOneUpTransitionController setDismissPanGestureRecognizer:]
  -[PUImportOneUpTransitionController .cxx_destruct]
  -[PUImportOneUpTransitionController startInteractiveTransition:]
  -[PUImportOneUpTransitionController interruptibleAnimatorForTransition:]
  -[PUImportOneUpTransitionController presentingViewController]
  -[PUImportOneUpTransitionController gestureRecognizerShouldBegin:]
  -[PUImportOneUpTransitionController animationEnded:]
  -[PUImportOneUpTransitionController interactionControllerForPresentation:]
  -[PUImportOneUpTransitionController continuousGestureRecognizerIsActive:]
  -[PUImportOneUpTransitionController maybeInitiateInteractiveDismiss:]
  -[PUImportOneUpTransitionController installDismissGestureRecognizersOnView:]
  -[PUImportOneUpTransitionController presentingPinchGestureRecognizer]
  -[PUImportOneUpTransitionController dismissPinchGestureRecognizer]
  -[PUImportOneUpTransitionController setHasInstalledDismissGestureRecognizers:]
  -[PUImportOneUpTransitionController initWithPresentingViewController:pinchGestureRecognizer:]
  -[PUImportOneUpTransitionController hasInstalledDismissGestureRecognizers]
  -[PUImportOneUpTransitionController setDismissPinchGestureRecognizer:]


PUEnterEditPerformanceEventBuilder : NSObject
 @property  <PUEditableAsset> *asset
 @property  BOOL firstSinceBoot
 @property  BOOL firstSinceLaunch
 @property  BOOL editingWithRaw
 @property  double enterEditDuration
 @property  double resourceCheckingDuration
 @property  double resourceDownloadDuration
 @property  double resourceLoadingDuration
 @property  double autoCalcDuration

  // instance methods
  -[PUEnterEditPerformanceEventBuilder .cxx_destruct]
  -[PUEnterEditPerformanceEventBuilder setAsset:]
  -[PUEnterEditPerformanceEventBuilder asset]
  -[PUEnterEditPerformanceEventBuilder enterEditDuration]
  -[PUEnterEditPerformanceEventBuilder resourceCheckingDuration]
  -[PUEnterEditPerformanceEventBuilder resourceDownloadDuration]
  -[PUEnterEditPerformanceEventBuilder autoCalcDuration]
  -[PUEnterEditPerformanceEventBuilder isEditingWithRaw]
  -[PUEnterEditPerformanceEventBuilder isFirstSinceBoot]
  -[PUEnterEditPerformanceEventBuilder isFirstSinceLaunch]
  -[PUEnterEditPerformanceEventBuilder buildEvent]
  -[PUEnterEditPerformanceEventBuilder setFirstSinceBoot:]
  -[PUEnterEditPerformanceEventBuilder setFirstSinceLaunch:]
  -[PUEnterEditPerformanceEventBuilder setEditingWithRaw:]
  -[PUEnterEditPerformanceEventBuilder setEnterEditDuration:]
  -[PUEnterEditPerformanceEventBuilder setResourceCheckingDuration:]
  -[PUEnterEditPerformanceEventBuilder setResourceDownloadDuration:]
  -[PUEnterEditPerformanceEventBuilder resourceLoadingDuration]
  -[PUEnterEditPerformanceEventBuilder setResourceLoadingDuration:]
  -[PUEnterEditPerformanceEventBuilder setAutoCalcDuration:]


PUExitEditPerformanceEventBuilder : NSObject
 @property  <PUEditableAsset> *asset
 @property  BOOL firstSinceLaunch
 @property  BOOL editingWithRaw
 @property  long long sessionEndReason
 @property  double exitEditDuration
 @property  PICompositionController *compositionController

  // instance methods
  -[PUExitEditPerformanceEventBuilder .cxx_destruct]
  -[PUExitEditPerformanceEventBuilder setAsset:]
  -[PUExitEditPerformanceEventBuilder asset]
  -[PUExitEditPerformanceEventBuilder compositionController]
  -[PUExitEditPerformanceEventBuilder setCompositionController:]
  -[PUExitEditPerformanceEventBuilder isEditingWithRaw]
  -[PUExitEditPerformanceEventBuilder isFirstSinceLaunch]
  -[PUExitEditPerformanceEventBuilder buildEvent]
  -[PUExitEditPerformanceEventBuilder setFirstSinceLaunch:]
  -[PUExitEditPerformanceEventBuilder setEditingWithRaw:]
  -[PUExitEditPerformanceEventBuilder sessionEndReason]
  -[PUExitEditPerformanceEventBuilder exitEditDuration]
  -[PUExitEditPerformanceEventBuilder setSessionEndReason:]
  -[PUExitEditPerformanceEventBuilder setExitEditDuration:]


PUImportOneUpTransitionItem : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialFrame
 @property  UIImage *snapshotImage
 @property  PXImportItemViewModel *importItem
 @property  {PXSimpleIndexPath=qqqq} indexPath
 @property  double initialContentAlpha
 @property  UIView *transitionView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetFrame
 @property  double targetContentAlpha

  // instance methods
  -[PUImportOneUpTransitionItem .cxx_destruct]
  -[PUImportOneUpTransitionItem setSnapshotImage:]
  -[PUImportOneUpTransitionItem setTransitionView:]
  -[PUImportOneUpTransitionItem snapshotImage]
  -[PUImportOneUpTransitionItem indexPath]
  -[PUImportOneUpTransitionItem transitionView]
  -[PUImportOneUpTransitionItem targetFrame]
  -[PUImportOneUpTransitionItem setTargetFrame:]
  -[PUImportOneUpTransitionItem setInitialFrame:]
  -[PUImportOneUpTransitionItem initialFrame]
  -[PUImportOneUpTransitionItem importItem]
  -[PUImportOneUpTransitionItem initWithInitialFrame:snapshotImage:importItem:indexPath:]
  -[PUImportOneUpTransitionItem initialContentAlpha]
  -[PUImportOneUpTransitionItem setInitialContentAlpha:]
  -[PUImportOneUpTransitionItem targetContentAlpha]
  -[PUImportOneUpTransitionItem setTargetContentAlpha:]


PUImportOneUpTransitionView : PUImportOneUpCell <PUImportOneUpCellDisplayDelegate>
 @property  UIImage *startingImage
 @property  PXImportMediaProvider *mediaProvider
 @property  PUImportOneUpCellBadgeView *badgeView
 @property  NSArray *badgeViewOffsetConstraints
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetFrame
 @property  double initialPhotoViewAlpha
 @property  double targetPhotoViewAlpha

  // class methods
  +[PUImportOneUpTransitionView interpolatedValueBetweenInitialValue:andFinalValue:atProgress:]

  // instance methods
  -[PUImportOneUpTransitionView setMediaProvider:]
  -[PUImportOneUpTransitionView badgeView]
  -[PUImportOneUpTransitionView updateConstraints]
  -[PUImportOneUpTransitionView .cxx_destruct]
  -[PUImportOneUpTransitionView mediaProvider]
  -[PUImportOneUpTransitionView setFrame:]
  -[PUImportOneUpTransitionView currentProgress]
  -[PUImportOneUpTransitionView setTransform:]
  -[PUImportOneUpTransitionView targetFrame]
  -[PUImportOneUpTransitionView setTargetFrame:]
  -[PUImportOneUpTransitionView setInitialFrame:]
  -[PUImportOneUpTransitionView initialFrame]
  -[PUImportOneUpTransitionView contextForObservingViewModelChanges]
  -[PUImportOneUpTransitionView importOneUpCell:didRequestCancellationOfThumbnailRequestWithID:]
  -[PUImportOneUpTransitionView importOneUpCell:requestedThumbnailForImportItem:completion:]
  -[PUImportOneUpTransitionView importOneUpCell:requestedBadgeUpdateForImportItem:]
  -[PUImportOneUpTransitionView initWithImportItem:startingImage:mediaProvider:]
  -[PUImportOneUpTransitionView updateBadgeView]
  -[PUImportOneUpTransitionView badgeViewOffsetConstraints]
  -[PUImportOneUpTransitionView initialPhotoViewAlpha]
  -[PUImportOneUpTransitionView targetPhotoViewAlpha]
  -[PUImportOneUpTransitionView updateAlphaIfNeeded]
  -[PUImportOneUpTransitionView setInitialPhotoViewAlpha:]
  -[PUImportOneUpTransitionView setTargetPhotoViewAlpha:]
  -[PUImportOneUpTransitionView setInitialFrame:targetFrame:]
  -[PUImportOneUpTransitionView setPhotoViewInitialAlpha:targetAlpha:]
  -[PUImportOneUpTransitionView startingImage]
  -[PUImportOneUpTransitionView setStartingImage:]


PUImportOneUpViewController : UIViewController <PUImportActionCoordinatorDelegate, PXImportAssetsDataSourceManagerObserver, PUImportOneUpCellDisplayDelegate, PUImportOneUpScrubberCellDisplayDelegate, PUSelectableAssetCollectionViewLayoutDelegate, PUReviewScrubberDataSource, PUReviewScrubberDelegate, PXChangeObserver, UICollectionViewDataSource, UICollectionViewDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, PUImportOneUpTransitioning>
 @property  PUImportOneUpViewControllerSpecManager *specManager
 @property  PXImportController *importController
 @property  unsigned long presentationFilter
 @property  PXImportAssetsDataSourceManager *importDataSourceManager
 @property  PXImportAssetsDataSource *importDataSource
 @property  BOOL performingDataSourceChange
 @property  PXImportAssetsDataSource *pendingDataSource
 @property  PUImportChangeDetailsCollectionViewHelper *changeDetailsHelper
 @property  PXMediaProvider *mediaProvider
 @property  UICollectionView *collectionView
 @property  PUSelectableAssetCollectionViewLayout *collectionViewLayout
 @property  PUReviewScrubber *reviewScrubber
 @property  UIBarButtonItem *cancelBarButtonItem
 @property  UIBarButtonItem *importBarButtonItem
 @property  UIBarButtonItem *stopImportBarButtonItem
 @property  UIBarButtonItem *deleteBarButtonItem
 @property  UIBarButtonItem *progressButtonItem
 @property  PLRoundProgressView *roundProgressView
 @property  UIBarButtonItem *bottomSpacerBarButtonItem
 @property  PUImportActionCoordinator *actionCoordinator
 @property  BOOL allowsSelection
 @property  PXNavigationTitleView *navigationTitleView
 @property  PLDateRangeFormatter *dayFormatter
 @property  PLDateRangeFormatter *timeFormatter
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  NSIndexPath *inFlightReferenceIndexPath
 @property  BOOL updatingContentOffsetFromScrubbing
 @property  BOOL hasPerformedNavigationToStartingAsset
 @property  BOOL loadLargeThumbnailsInCustomOrder
 @property  NSMutableSet *thumbnailLoadableItemWhitelist
 @property  NSMutableSet *itemsWithInvalidImageSizes
 @property  PFCoalescer *relayoutCoalescer
 @property  NSMutableArray *itemsNeedingRelayout
 @property  UICollectionViewLayout *transitionLayout
 @property  BOOL animatingTransition
 @property  PXAssetReference *startingAssetReference
 @property  BOOL isCommitingPreview
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUImportOneUpViewController collectionView:cellForItemAtIndexPath:]
  -[PUImportOneUpViewController collectionView:numberOfItemsInSection:]
  -[PUImportOneUpViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUImportOneUpViewController shouldAutorotateToInterfaceOrientation:]
  -[PUImportOneUpViewController setMediaProvider:]
  -[PUImportOneUpViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUImportOneUpViewController numberOfSectionsInCollectionView:]
  -[PUImportOneUpViewController specManager]
  -[PUImportOneUpViewController viewWillLayoutSubviews]
  -[PUImportOneUpViewController traitCollectionDidChange:]
  -[PUImportOneUpViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUImportOneUpViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[PUImportOneUpViewController setImportDataSource:]
  -[PUImportOneUpViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUImportOneUpViewController setAllowsSelection:]
  -[PUImportOneUpViewController deleteBarButtonItem]
  -[PUImportOneUpViewController .cxx_destruct]
  -[PUImportOneUpViewController mediaProvider]
  -[PUImportOneUpViewController collectionViewLayout]
  -[PUImportOneUpViewController viewDidLoad]
  -[PUImportOneUpViewController viewDidAppear:]
  -[PUImportOneUpViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUImportOneUpViewController shouldAutorotate]
  -[PUImportOneUpViewController collectionView]
  -[PUImportOneUpViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUImportOneUpViewController scrollViewDidScroll:]
  -[PUImportOneUpViewController tapGestureRecognizer]
  -[PUImportOneUpViewController startingAssetReference]
  -[PUImportOneUpViewController viewWillDisappear:]
  -[PUImportOneUpViewController timeFormatter]
  -[PUImportOneUpViewController scrollViewWillBeginDragging:]
  -[PUImportOneUpViewController viewWillAppear:]
  -[PUImportOneUpViewController _deleteAction:]
  -[PUImportOneUpViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUImportOneUpViewController deleteItems:]
  -[PUImportOneUpViewController allowsSelection]
  -[PUImportOneUpViewController dealloc]
  -[PUImportOneUpViewController adaptivePresentationStyleForPresentationController:traitCollection:]
  -[PUImportOneUpViewController supportedInterfaceOrientations]
  -[PUImportOneUpViewController cancelBarButtonItem]
  -[PUImportOneUpViewController observable:didChange:context:]
  -[PUImportOneUpViewController scrollViewDidEndDecelerating:]
  -[PUImportOneUpViewController _currentAsset]
  -[PUImportOneUpViewController _cancelAction:]
  -[PUImportOneUpViewController importDataSource]
  -[PUImportOneUpViewController assetAtIndexPath:]
  -[PUImportOneUpViewController transitionLayout]
  -[PUImportOneUpViewController setTransitionLayout:]
  -[PUImportOneUpViewController pu_wantsToolbarVisible]
  -[PUImportOneUpViewController layout:collectionView:selectionBadgeFrameForItemFrame:atIndexPath:]
  -[PUImportOneUpViewController _updateBarItemsAnimated:]
  -[PUImportOneUpViewController _handleTapInMainCollectionView:]
  -[PUImportOneUpViewController _toggleCurrentPickStatusAtIndexPath:]
  -[PUImportOneUpViewController _indexPathInCollectionView:closestToPoint:excludingIndexPath:]
  -[PUImportOneUpViewController _handleTapAtIndexPath:]
  -[PUImportOneUpViewController _horizontalOffsetInCollectionView:forCenteringOnItemAtIndexPath:]
  -[PUImportOneUpViewController selectionBadgeFrameForItemFrame:atIndexPath:]
  -[PUImportOneUpViewController _reallyToggleCurrentPickStatusAtIndexPath:]
  -[PUImportOneUpViewController _dismissReviewControllerWithAsset:]
  -[PUImportOneUpViewController _updateReviewScrubberFromContentOffset]
  -[PUImportOneUpViewController reviewScrubberImageFormat]
  -[PUImportOneUpViewController reviewScrubber:numberOfItemsInSection:]
  -[PUImportOneUpViewController reviewScrubber:shouldProvideFeedbackForCellAtIndexPath:]
  -[PUImportOneUpViewController numberOfSectionsInReviewScrubber:]
  -[PUImportOneUpViewController reviewScrubber:willDisplayCell:atIndexPath:]
  -[PUImportOneUpViewController reviewScrubberDidScrub:]
  -[PUImportOneUpViewController reviewScrubberDidSelectItemAtIndexPath:]
  -[PUImportOneUpViewController layout:collectionView:sizeForItemAtIndexPath:]
  -[PUImportOneUpViewController _interfaceOrientationFromDeviceOrientation:]
  -[PUImportOneUpViewController pu_wantsTabBarVisible]
  -[PUImportOneUpViewController pu_wantsNavigationBarVisible]
  -[PUImportOneUpViewController importController]
  -[PUImportOneUpViewController actionCoordinatorWillBeginImport:]
  -[PUImportOneUpViewController importDestinationForActionCoordinator:]
  -[PUImportOneUpViewController actionCoordinator:didCompleteWithImportSession:results:]
  -[PUImportOneUpViewController actionCoordinatorDidBeginImport:]
  -[PUImportOneUpViewController actionCoordinatorDidCancelImport:]
  -[PUImportOneUpViewController actionCoordinatorWillBeginDelete:]
  -[PUImportOneUpViewController actionCoordinatorDidEndDelete:]
  -[PUImportOneUpViewController actionCoordinatorDidBeginDelete:]
  -[PUImportOneUpViewController setImportController:]
  -[PUImportOneUpViewController importOneUpCell:didRequestCancellationOfThumbnailRequestWithID:]
  -[PUImportOneUpViewController importOneUpCell:requestedThumbnailForImportItem:completion:]
  -[PUImportOneUpViewController importOneUpCell:requestedBadgeUpdateForImportItem:]
  -[PUImportOneUpViewController willTransitionFromViewController:toViewController:withTransitionItems:]
  -[PUImportOneUpViewController didTransitionFromViewController:toViewController:withTransitionItems:]
  -[PUImportOneUpViewController transitionItemsForContext:]
  -[PUImportOneUpViewController targetFrameForTransitionItem:]
  -[PUImportOneUpViewController prepareTransitionItemViewForDestination:]
  -[PUImportOneUpViewController importOneUpScrubberCell:didRequestCancellationOfThumbnailRequestWithID:]
  -[PUImportOneUpViewController importOneUpScrubberCell:requestedThumbnailForImportItem:completion:]
  -[PUImportOneUpViewController setImportDataSourceManager:]
  -[PUImportOneUpViewController actionCoordinator]
  -[PUImportOneUpViewController relayoutCollectionView]
  -[PUImportOneUpViewController relayoutCoalescer]
  -[PUImportOneUpViewController setRelayoutCoalescer:]
  -[PUImportOneUpViewController _cancelAlerts]
  -[PUImportOneUpViewController importDataSourceManager]
  -[PUImportOneUpViewController presentationFilter]
  -[PUImportOneUpViewController updateToolbarItems]
  -[PUImportOneUpViewController handleNewDataSource:]
  -[PUImportOneUpViewController performingDataSourceChange]
  -[PUImportOneUpViewController setPendingDataSource:]
  -[PUImportOneUpViewController setPerformingDataSourceChange:]
  -[PUImportOneUpViewController pendingDataSource]
  -[PUImportOneUpViewController transitionFromDataSource:toDataSource:animated:completionHandler:]
  -[PUImportOneUpViewController indexPathOfCenterVisibleItemInCollectionView:]
  -[PUImportOneUpViewController importAssetAtIndexPath:]
  -[PUImportOneUpViewController reviewScrubber]
  -[PUImportOneUpViewController changeDetailsHelper]
  -[PUImportOneUpViewController setChangeDetailsHelper:]
  -[PUImportOneUpViewController pageToItemOrNearestIndexPath:animated:]
  -[PUImportOneUpViewController updateMainViewAnimated:]
  -[PUImportOneUpViewController beginCenterPrioritizedThumbnailLoading]
  -[PUImportOneUpViewController loadCenterPrioritizedVisibleThumbnails]
  -[PUImportOneUpViewController updateCollectionViewLayoutInsets]
  -[PUImportOneUpViewController hasPerformedNavigationToStartingAsset]
  -[PUImportOneUpViewController setHasPerformedNavigationToStartingAsset:]
  -[PUImportOneUpViewController pageToIndexPath:animated:]
  -[PUImportOneUpViewController inFlightReferenceIndexPath]
  -[PUImportOneUpViewController stopImportBarButtonItem]
  -[PUImportOneUpViewController importBarButtonItem]
  -[PUImportOneUpViewController progressButtonItem]
  -[PUImportOneUpViewController bottomSpacerBarButtonItem]
  -[PUImportOneUpViewController dayFormatter]
  -[PUImportOneUpViewController navigationTitleView]
  -[PUImportOneUpViewController _titleViewVerticalSizeClassForExtendedTraitCollection:]
  -[PUImportOneUpViewController _stopImportAction:]
  -[PUImportOneUpViewController setRoundProgressView:]
  -[PUImportOneUpViewController roundProgressView]
  -[PUImportOneUpViewController importControllerProgressDidChange:]
  -[PUImportOneUpViewController updateNavigationItemTitle]
  -[PUImportOneUpViewController getMainCollectionViewFrame:collectionViewLayoutInsets:orientation:]
  -[PUImportOneUpViewController isCommitingPreview]
  -[PUImportOneUpViewController setLoadLargeThumbnailsInCustomOrder:]
  -[PUImportOneUpViewController setThumbnailLoadableItemWhitelist:]
  -[PUImportOneUpViewController loadLargeThumbnailsInCustomOrder]
  -[PUImportOneUpViewController thumbnailLoadableItemWhitelist]
  -[PUImportOneUpViewController itemsWithInvalidImageSizes]
  -[PUImportOneUpViewController setItemsWithInvalidImageSizes:]
  -[PUImportOneUpViewController getFirstValidIndexPath:lastValidIndexPath:]
  -[PUImportOneUpViewController sizeForItemAtIndexPath:interfaceOrientation:]
  -[PUImportOneUpViewController previousIndexPath:]
  -[PUImportOneUpViewController nextIndexPath:]
  -[PUImportOneUpViewController absoluteProgressFromCurrentContentOffset]
  -[PUImportOneUpViewController _cancelOneUpView]
  -[PUImportOneUpViewController _importControllerWillBeginAction]
  -[PUImportOneUpViewController _importControllerDidEndAction]
  -[PUImportOneUpViewController updatingContentOffsetFromScrubbing]
  -[PUImportOneUpViewController badgeViewAtIndexPath:forCollectionView:]
  -[PUImportOneUpViewController invalidateLayoutIfNeededForImportItem:]
  -[PUImportOneUpViewController itemsNeedingRelayout]
  -[PUImportOneUpViewController isAnimatingTransition]
  -[PUImportOneUpViewController imageRectFromPhotoView:]
  -[PUImportOneUpViewController setAnimatingTransition:]
  -[PUImportOneUpViewController previousSectionWithItems:]
  -[PUImportOneUpViewController nextSectionWithItems:]
  -[PUImportOneUpViewController initWithImportController:mediaProvider:startingAssetReference:presentationFilter:]
  -[PUImportOneUpViewController setIsCommitingPreview:]
  -[PUImportOneUpViewController setSpecManager:]
  -[PUImportOneUpViewController setPresentationFilter:]
  -[PUImportOneUpViewController setActionCoordinator:]
  -[PUImportOneUpViewController setItemsNeedingRelayout:]


PUImportOneUpViewControllerSpec : PXFeatureSpec
 @property  double interItemSpacing
 @property  {CGSize=dd} selectionBadgeSize
 @property  {UIOffset=dd} selectionBadgeOffset
 @property  unsigned long selectionBadgeCorner
 @property  BOOL allowsInterfaceRotation
 @property  unsigned long style

  // instance methods
  -[PUImportOneUpViewControllerSpec initWithExtendedTraitCollection:options:]
  -[PUImportOneUpViewControllerSpec interItemSpacing]
  -[PUImportOneUpViewControllerSpec style]
  -[PUImportOneUpViewControllerSpec selectionBadgeSize]
  -[PUImportOneUpViewControllerSpec selectionBadgeOffset]
  -[PUImportOneUpViewControllerSpec selectionBadgeCorner]
  -[PUImportOneUpViewControllerSpec allowsInterfaceRotation]
  -[PUImportOneUpViewControllerSpec initWithExtendedTraitCollection:options:style:]


PUImportOneUpViewControllerSpecManager : PXFeatureSpecManager
 @property  PUImportOneUpViewControllerSpec *spec
 @property  unsigned long style

  // instance methods
  -[PUImportOneUpViewControllerSpecManager initWithExtendedTraitCollection:options:]
  -[PUImportOneUpViewControllerSpecManager createSpec]
  -[PUImportOneUpViewControllerSpecManager specClass]
  -[PUImportOneUpViewControllerSpecManager style]
  -[PUImportOneUpViewControllerSpecManager initWithExtendedTraitCollection:options:style:]


PULivePhotoVideoOverlayTileViewController : PUTileViewController <PUBrowsingViewModelChangeObserver, PXChangeObserver, PHLivePhotoViewDelegate, ISChangeObserver>
 @property  NSArray *playbackGestureRecognizers
 @property  UIImpactFeedbackGenerator *feedbackGenerator
 @property  PUMergedLivePhotosVideo *mergedVideo
 @property  UIView *containerView
 @property  PHLivePhotoView *livePhotoView
 @property  ISWrappedAVPlayer *videoPlayer
 @property  id videoPlayerTimeObserver
 @property  PUModelTileTransform *modelTileTransform
 @property  PXLivePhotoViewModulator *livePhotoViewModulator
 @property  PUAssetReference *playbackAssetReference
 @property  BOOL willEndCurrentPlayback
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUOneUpMergedVideoProvider *mergedVideoProvider
 @property  BOOL isPresentedForSecondScreen
 @property  <PULivePhotoVideoOverlayTileViewControllerDelegate> *delegate
 @property  PXImageModulationManager *imageModulationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PULivePhotoVideoOverlayTileViewController imageModulationManager]
  -[PULivePhotoVideoOverlayTileViewController livePhotoView:didEndPlaybackWithStyle:]
  -[PULivePhotoVideoOverlayTileViewController mergedVideo]
  -[PULivePhotoVideoOverlayTileViewController browsingViewModel]
  -[PULivePhotoVideoOverlayTileViewController setBrowsingViewModel:]
  -[PULivePhotoVideoOverlayTileViewController livePhotoViewModulator]
  -[PULivePhotoVideoOverlayTileViewController feedbackGenerator]
  -[PULivePhotoVideoOverlayTileViewController _updateSRLCompensation]
  -[PULivePhotoVideoOverlayTileViewController playbackGestureRecognizers]
  -[PULivePhotoVideoOverlayTileViewController containerView]
  -[PULivePhotoVideoOverlayTileViewController playbackAssetReference]
  -[PULivePhotoVideoOverlayTileViewController videoPlayerTimeObserver]
  -[PULivePhotoVideoOverlayTileViewController .cxx_destruct]
  -[PULivePhotoVideoOverlayTileViewController setWillEndCurrentPlayback:]
  -[PULivePhotoVideoOverlayTileViewController setMergedVideo:]
  -[PULivePhotoVideoOverlayTileViewController videoPlayer]
  -[PULivePhotoVideoOverlayTileViewController setMergedVideoProvider:]
  -[PULivePhotoVideoOverlayTileViewController setDelegate:]
  -[PULivePhotoVideoOverlayTileViewController modelTileTransform]
  -[PULivePhotoVideoOverlayTileViewController viewModel:didChange:]
  -[PULivePhotoVideoOverlayTileViewController _updateLivePhotoViewPhoto]
  -[PULivePhotoVideoOverlayTileViewController gestureRecognizers]
  -[PULivePhotoVideoOverlayTileViewController _videoCurrentTimeDidChange:]
  -[PULivePhotoVideoOverlayTileViewController mergedVideoProvider]
  -[PULivePhotoVideoOverlayTileViewController setIsPresentedForSecondScreen:]
  -[PULivePhotoVideoOverlayTileViewController setVideoPlayer:]
  -[PULivePhotoVideoOverlayTileViewController setImageModulationManager:]
  -[PULivePhotoVideoOverlayTileViewController livePhotoView:canBeginPlaybackWithStyle:]
  -[PULivePhotoVideoOverlayTileViewController setPlaybackAssetReference:]
  -[PULivePhotoVideoOverlayTileViewController willEndCurrentPlayback]
  -[PULivePhotoVideoOverlayTileViewController setLivePhotoViewModulator:]
  -[PULivePhotoVideoOverlayTileViewController _updatePlaybackEnabled]
  -[PULivePhotoVideoOverlayTileViewController delegate]
  -[PULivePhotoVideoOverlayTileViewController livePhotoView:willBeginPlaybackWithStyle:]
  -[PULivePhotoVideoOverlayTileViewController livePhotoView]
  -[PULivePhotoVideoOverlayTileViewController setModelTileTransform:]
  -[PULivePhotoVideoOverlayTileViewController setVideoPlayerTimeObserver:]
  -[PULivePhotoVideoOverlayTileViewController _updateLivePhotoViewModulator]
  -[PULivePhotoVideoOverlayTileViewController _updateLivePhotoViewModulatorInput]
  -[PULivePhotoVideoOverlayTileViewController dealloc]
  -[PULivePhotoVideoOverlayTileViewController _updateLivePhotoViewFrame]
  -[PULivePhotoVideoOverlayTileViewController _updateMergedVideo]
  -[PULivePhotoVideoOverlayTileViewController loadView]
  -[PULivePhotoVideoOverlayTileViewController observable:didChange:context:]
  -[PULivePhotoVideoOverlayTileViewController isPresentedForSecondScreen]


PUStoryAssetPickerHelper : NSObject <PUAssetPickerCoordinatorActionHandler>
 @property  PHAssetCollection *assetCollection
 @property  NSSet *preselectedOIDs
 @property  PUAssetPickerCoordinator *pickerCoordinator
 @property  PXLoadingStatusManager *loadingStatusManager
 @property  <PXDisplayAssetCollection> *containerCollection
 @property  UIViewController *pickerViewController
 @property  <PUStoryAssetPickerHelperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUStoryAssetPickerHelper containerCollection]
  -[PUStoryAssetPickerHelper .cxx_destruct]
  -[PUStoryAssetPickerHelper loadingStatusManager]
  -[PUStoryAssetPickerHelper setDelegate:]
  -[PUStoryAssetPickerHelper delegate]
  -[PUStoryAssetPickerHelper coordinator:didFinishPicking:]
  -[PUStoryAssetPickerHelper pickerViewController]
  -[PUStoryAssetPickerHelper assetCollection]
  -[PUStoryAssetPickerHelper pickerCoordinator]
  -[PUStoryAssetPickerHelper preselectedOIDs]
  -[PUStoryAssetPickerHelper initWithContainerAssetCollection:preselectedAssets:]


PUOutlineCell : _UICollectionViewOutlineCell
 @property  UIImage *image
 @property  NSString *text
 @property  <PXNavigationListItem> *item
 @property  <PUOutlineCellDelegate> *delegate
 @property  long long style
 @property  long long mediaRequestID

  // instance methods
  -[PUOutlineCell setItem:]
  -[PUOutlineCell setText:]
  -[PUOutlineCell image]
  -[PUOutlineCell .cxx_destruct]
  -[PUOutlineCell setStyle:]
  -[PUOutlineCell setDelegate:]
  -[PUOutlineCell item]
  -[PUOutlineCell prepareForReuse]
  -[PUOutlineCell delegate]
  -[PUOutlineCell setImage:]
  -[PUOutlineCell canBecomeFocused]
  -[PUOutlineCell _updateViewConfigurationsWithState:]
  -[PUOutlineCell text]
  -[PUOutlineCell style]
  -[PUOutlineCell _editingConfigurationForState:]
  -[PUOutlineCell _renameItem:toTitle:]
  -[PUOutlineCell _hasEditSpecificAccessories]
  -[PUOutlineCell mediaRequestID]
  -[PUOutlineCell setMediaRequestID:]


PUImportPPTDriver : NSObject <PXImportAssetsDataSourceManagerObserver, PUImportActionCoordinatorDelegate>
 @property  NSDictionary *options
 @property  PUTabbedLibraryViewController *tabbedLibraryViewController
 @property  NSDictionary *testOptions
 @property  NSDictionary *additionalResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportPPTDriver sharedInstance]

  // instance methods
  -[PUImportPPTDriver options]
  -[PUImportPPTDriver setOptions:]
  -[PUImportPPTDriver .cxx_destruct]
  -[PUImportPPTDriver mediaProvider]
  -[PUImportPPTDriver init]
  -[PUImportPPTDriver importViewController]
  -[PUImportPPTDriver observable:didChange:context:]
  -[PUImportPPTDriver testOptions]
  -[PUImportPPTDriver importController]
  -[PUImportPPTDriver actionCoordinatorWillBeginImport:]
  -[PUImportPPTDriver importDestinationForActionCoordinator:]
  -[PUImportPPTDriver actionCoordinator:didCompleteWithImportSession:results:]
  -[PUImportPPTDriver actionCoordinatorDidBeginImport:]
  -[PUImportPPTDriver actionCoordinatorDidCancelImport:]
  -[PUImportPPTDriver actionCoordinatorWillBeginDelete:]
  -[PUImportPPTDriver actionCoordinatorDidEndDelete:]
  -[PUImportPPTDriver actionCoordinatorDidBeginDelete:]
  -[PUImportPPTDriver _removeCurrentImportSourceIfNecessary]
  -[PUImportPPTDriver tabbedLibraryViewController]
  -[PUImportPPTDriver ppt_mediaProviderDidProcessAsset:]
  -[PUImportPPTDriver signalInsertDatasourceReply:]
  -[PUImportPPTDriver modelBatchesForOptions:]
  -[PUImportPPTDriver signalThumbnailTestReply:]
  -[PUImportPPTDriver _updateLoadingContentState]
  -[PUImportPPTDriver _contentLoadingCheckInterval]
  -[PUImportPPTDriver signalImportToLibraryTestReply:]
  -[PUImportPPTDriver additionalResults]
  -[PUImportPPTDriver ppt_insertImportDataSourceWithOptions:completionHandler:]
  -[PUImportPPTDriver ppt_removeImportDataSourceWithOptions:completionHandler:]
  -[PUImportPPTDriver ppt_performDeleteWithOptions:completionHandler:]
  -[PUImportPPTDriver ppt_performThumbnailWithOptions:completionHandler:]
  -[PUImportPPTDriver ppt_performImportToLibraryWithOptions:completionHandler:]
  -[PUImportPPTDriver setTabbedLibraryViewController:]
  -[PUImportPPTDriver setTestOptions:]


PUAssetPickerCoordinator : NSObject <PUAssetPickerContainerControllerActionHandler, PUAssetExplorerReviewScreenViewControllerDelegate, PUPhotosGridDownloadUpdateHandler, PXSelectionCoordinatorDelegate, UINavigationControllerDelegate, PUPhotoPickerResizeTaskDescriptorViewModelDelegate, PUUIImageViewControllerFileResizingDelegate, PUPhotoPickerServicesConsumer>
 @property  <PUAssetPickerCoordinatorActionHandler> *coordinatorActionHandler
 @property  PXSelectionCoordinator *selectionCoordinator
 @property  PHAsset *mostRecentTappedAsset
 @property  PUPhotosGridDownloadHelper *downloadHelper
 @property  NSMutableDictionary *downloadProgresses
 @property  PUAssetPickerActivityProgressController *progressController
 @property  PUPhotoPickerResizeTaskDescriptorViewModel *resizeTaskDescriptorViewModel
 @property  PUPickerConfiguration *configuration
 @property  UINavigationController *navigationController
 @property  PUAssetPickerContainerController *rootViewController
 @property  PXLoadingStatusManager *loadingStatusManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PUPhotoPicker> *photoPicker

  // class methods
  +[PUAssetPickerCoordinator pu_legacy_shouldDownloadVideoComplement:configuration:]
  +[PUAssetPickerCoordinator _logPhotosPickerPresentedForClient:]
  +[PUAssetPickerCoordinator _editingEnabled:]
  +[PUAssetPickerCoordinator _viewImageBeforeSelectingEnabled:]
  +[PUAssetPickerCoordinator _skipSelectionConfirmation:]
  +[PUAssetPickerCoordinator _assetCanPlay:]
  +[PUAssetPickerCoordinator _shouldTreatAssetAsLivePhoto:photoPicker:configuration:]
  +[PUAssetPickerCoordinator _extraArgumentsForResizeTaskDescriptor:]

  // instance methods
  -[PUAssetPickerCoordinator rootViewController]
  -[PUAssetPickerCoordinator configuration]
  -[PUAssetPickerCoordinator .cxx_destruct]
  -[PUAssetPickerCoordinator loadingStatusManager]
  -[PUAssetPickerCoordinator photoPicker]
  -[PUAssetPickerCoordinator setPhotoPicker:]
  -[PUAssetPickerCoordinator init]
  -[PUAssetPickerCoordinator progressController]
  -[PUAssetPickerCoordinator initWithPUConfiguration:coordinatorActionHandler:loadingStatusManager:]
  -[PUAssetPickerCoordinator resizeTaskDescriptorViewModel]
  -[PUAssetPickerCoordinator navigationController]
  -[PUAssetPickerCoordinator moveAssetWithIdentifier:afterIdentifier:]
  -[PUAssetPickerCoordinator activateSearchField]
  -[PUAssetPickerCoordinator presentAlertController:]
  -[PUAssetPickerCoordinator navigationController:willShowViewController:animated:]
  -[PUAssetPickerCoordinator deselectAssetsWithIdentifiers:]
  -[PUAssetPickerCoordinator assetExplorerReviewScreenViewController:didPerformCompletionAction:withSelectedAssetUUIDs:livePhotoDisabledAssetUUIDs:substituteAssetsByUUID:]
  -[PUAssetPickerCoordinator assetExplorerReviewScreenViewControllerDidPressCancel:]
  -[PUAssetPickerCoordinator assetExplorerReviewScreenViewController:canPerformActionType:onAsset:inAssetCollection:]
  -[PUAssetPickerCoordinator assetExplorerReviewScreenViewController:shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUAssetPickerCoordinator assetExplorerReviewScreenViewController:fileSizeMenuForSelectedUUIDs:]
  -[PUAssetPickerCoordinator initWithConfiguration:navigationControllerClass:coordinatorActionHandler:loadingStatusManager:]
  -[PUAssetPickerCoordinator cancelProgressController]
  -[PUAssetPickerCoordinator selectionCoordinator]
  -[PUAssetPickerCoordinator coordinatorActionHandler]
  -[PUAssetPickerCoordinator pu_legacy_didDisplayPicker]
  -[PUAssetPickerCoordinator _logPhotosAccessWithNonEmptyUserSelection]
  -[PUAssetPickerCoordinator setMostRecentTappedAsset:]
  -[PUAssetPickerCoordinator pu_legacy_selectSingleAsset:]
  -[PUAssetPickerCoordinator pu_legacy_cancelPicker]
  -[PUAssetPickerCoordinator pu_legacy_selectMultipleAssets:]
  -[PUAssetPickerCoordinator _createFetchResultUsingSelectedObjectIDs]
  -[PUAssetPickerCoordinator downloadHelper]
  -[PUAssetPickerCoordinator assetsForResizing]
  -[PUAssetPickerCoordinator _fileSizeActionsForAssets:]
  -[PUAssetPickerCoordinator downloadProgresses]
  -[PUAssetPickerCoordinator updateProgressControllerMessage]
  -[PUAssetPickerCoordinator mostRecentTappedAsset]
  -[PUAssetPickerCoordinator pu_legacy_selectSingleAssetWithFileResizing:]
  -[PUAssetPickerCoordinator containerControllerDidAppear:]
  -[PUAssetPickerCoordinator containerController:didTapAsset:]
  -[PUAssetPickerCoordinator containerController:didTapCancelButton:]
  -[PUAssetPickerCoordinator containerController:didTapClearButton:]
  -[PUAssetPickerCoordinator containerController:didTapAddButton:]
  -[PUAssetPickerCoordinator containerController:didTapSelectedItemsButton:]
  -[PUAssetPickerCoordinator containerController:didTapSearchBar:canBeginEditing:]
  -[PUAssetPickerCoordinator beginShowingProgressForAsset:inCollection:]
  -[PUAssetPickerCoordinator updateProgressWithIdentifier:withValue:]
  -[PUAssetPickerCoordinator endShowingProgressWithIdentifier:succeeded:canceled:error:]
  -[PUAssetPickerCoordinator selectionCoordinator:willUpdateSelectedObjectsForSnapshot:withRemovedIndexes:insertedIndexes:]
  -[PUAssetPickerCoordinator selectionCoordinator:didUpdateSelectedObjectsWithRemovedOIDs:insertedOIDs:]
  -[PUAssetPickerCoordinator imageViewControllerFileSizeMenuActions:]
  -[PUAssetPickerCoordinator imageViewControllerDidConfirmSelection:]
  -[PUAssetPickerCoordinator setPhotoPickerMediaTypes:]
  -[PUAssetPickerCoordinator initWithPhotoPicker:mediaTypes:]
  -[PUAssetPickerCoordinator initWithPHConfiguration:coordinatorActionHandler:loadingStatusManager:]
  -[PUAssetPickerCoordinator updateUsesEmbeddedMessagesLayout:]
  -[PUAssetPickerCoordinator deactivateSearchField]
  -[PUAssetPickerCoordinator presentProgressControllerFromViewController:progress:]
  -[PUAssetPickerCoordinator _completeSingleSelection:showConfirmation:]
  -[PUAssetPickerCoordinator _completeMultipleSelection:]


PUImportPPTImportSource : PHImportUrlSource
  // instance methods
  -[PUImportPPTImportSource canDeleteContent]


PUImportSectionBackgroundView : UICollectionReusableView
 @property  UIView *bottomStrokeView
 @property  BOOL needsBottomStrokeViewUpdate
 @property  double strokeWidth
 @property  UIColor *bottomStrokeColor

  // instance methods
  -[PUImportSectionBackgroundView .cxx_destruct]
  -[PUImportSectionBackgroundView setStrokeWidth:]
  -[PUImportSectionBackgroundView layoutSubviews]
  -[PUImportSectionBackgroundView strokeWidth]
  -[PUImportSectionBackgroundView applyLayoutAttributes:]
  -[PUImportSectionBackgroundView bottomStrokeColor]
  -[PUImportSectionBackgroundView setBottomStrokeColor:]
  -[PUImportSectionBackgroundView updateBottomStrokeViewIfNeeded]
  -[PUImportSectionBackgroundView setNeedsBottomStrokeViewUpdate:]
  -[PUImportSectionBackgroundView needsBottomStrokeViewUpdate]
  -[PUImportSectionBackgroundView needsStroke]
  -[PUImportSectionBackgroundView bottomStrokeView]
  -[PUImportSectionBackgroundView setBottomStrokeView:]
  -[PUImportSectionBackgroundView setNeedsBottomStrokeViewUpdate]


PUImportSectionedGridLayout : PUSectionedGridLayout
 @property  NSMutableDictionary *sectionDecorationAttributesBySection
 @property  NSMutableDictionary *preUpdateSectionDecorationAttributesBySection
 @property  UIColor *emphasizedSectionBackgroundColor
 @property  UIColor *emphasizedSectionBottomStrokeColor
 @property  double emphasizedSectionBottomStrokeWidth
 @property  NSArray *sectionIndexPathsBeingDeleted
 @property  <PUImportSectionedGridLayoutDelegate> *delegate

  // class methods
  +[PUImportSectionedGridLayout layoutAttributesClass]

  // instance methods
  -[PUImportSectionedGridLayout finalizeCollectionViewUpdates]
  -[PUImportSectionedGridLayout prepareLayout]
  -[PUImportSectionedGridLayout prepareForCollectionViewUpdates:]
  -[PUImportSectionedGridLayout .cxx_destruct]
  -[PUImportSectionedGridLayout setDelegate:]
  -[PUImportSectionedGridLayout indexPathsToDeleteForDecorationViewOfKind:]
  -[PUImportSectionedGridLayout init]
  -[PUImportSectionedGridLayout layoutAttributesForElementsInRect:]
  -[PUImportSectionedGridLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[PUImportSectionedGridLayout sectionDecorationAttributesBySection]
  -[PUImportSectionedGridLayout setPreUpdateSectionDecorationAttributesBySection:]
  -[PUImportSectionedGridLayout recreateSectionDecorationAttributes]
  -[PUImportSectionedGridLayout createLayoutAttributesForSectionBackgroundAtSection:]
  -[PUImportSectionedGridLayout emphasizedSectionBackgroundColor]
  -[PUImportSectionedGridLayout emphasizedSectionBottomStrokeWidth]
  -[PUImportSectionedGridLayout emphasizedSectionBottomStrokeColor]
  -[PUImportSectionedGridLayout setSectionIndexPathsBeingDeleted:]
  -[PUImportSectionedGridLayout sectionIndexPathsBeingDeleted]
  -[PUImportSectionedGridLayout preUpdateSectionDecorationAttributesBySection]
  -[PUImportSectionedGridLayout setSectionDecorationAttributesBySection:]
  -[PUImportSectionedGridLayout setEmphasizedSectionBackgroundColor:]
  -[PUImportSectionedGridLayout setEmphasizedSectionBottomStrokeColor:]
  -[PUImportSectionedGridLayout setEmphasizedSectionBottomStrokeWidth:]


PUImportSectionedGridLayoutAttributes : PUSectionedGridLayoutAttributes
 @property  UIColor *backgroundColor
 @property  double strokeWidth
 @property  UIColor *bottomStrokeColor

  // instance methods
  -[PUImportSectionedGridLayoutAttributes backgroundColor]
  -[PUImportSectionedGridLayoutAttributes .cxx_destruct]
  -[PUImportSectionedGridLayoutAttributes setStrokeWidth:]
  -[PUImportSectionedGridLayoutAttributes strokeWidth]
  -[PUImportSectionedGridLayoutAttributes isEqual:]
  -[PUImportSectionedGridLayoutAttributes setBackgroundColor:]
  -[PUImportSectionedGridLayoutAttributes copyWithZone:]
  -[PUImportSectionedGridLayoutAttributes bottomStrokeColor]
  -[PUImportSectionedGridLayoutAttributes setBottomStrokeColor:]


PUOneUpSharingAnimationController : _UISheetAnimationController <PUOneUpAssetTransition>
 @property  PUOneUpPhotosSharingTransitionContext *oneUpTransitionContext
 @property  UIViewController<PUOneUpAssetTransitionViewController> *presentingViewController
 @property  <PUOneUpSharingAnimationControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUOneUpSharingAnimationController new]

  // instance methods
  -[PUOneUpSharingAnimationController transitionDuration:]
  -[PUOneUpSharingAnimationController .cxx_destruct]
  -[PUOneUpSharingAnimationController setDelegate:]
  -[PUOneUpSharingAnimationController interruptibleAnimatorForTransition:]
  -[PUOneUpSharingAnimationController presentingViewController]
  -[PUOneUpSharingAnimationController init]
  -[PUOneUpSharingAnimationController _installTransitioningBadgeViewsForAssetTransitionInfo:inTransitioningView:]
  -[PUOneUpSharingAnimationController _configurePhotoView:withContentHelper:]
  -[PUOneUpSharingAnimationController delegate]
  -[PUOneUpSharingAnimationController oneUpTransitionContext]
  -[PUOneUpSharingAnimationController initWithTransitionContext:presentingViewController:]


_PUPhotoImportHistoryCell : UICollectionViewCell
 @property  UIImageView *imageView
 @property  PHAsset *asset
 @property  int currentImageRequestToken

  // instance methods
  -[_PUPhotoImportHistoryCell imageView]
  -[_PUPhotoImportHistoryCell .cxx_destruct]
  -[_PUPhotoImportHistoryCell layoutSubviews]
  -[_PUPhotoImportHistoryCell setAsset:]
  -[_PUPhotoImportHistoryCell asset]
  -[_PUPhotoImportHistoryCell prepareForReuse]
  -[_PUPhotoImportHistoryCell initWithFrame:]
  -[_PUPhotoImportHistoryCell setImageView:]
  -[_PUPhotoImportHistoryCell currentImageRequestToken]
  -[_PUPhotoImportHistoryCell setCurrentImageRequestToken:]
  -[_PUPhotoImportHistoryCell _updateBorderColor]


PUImportSettingsHistoryDebugViewController : UICollectionViewController <UICollectionViewDelegate, UICollectionViewDataSource, PHPhotoLibraryChangeObserver>
 @property  PHFetchResult *importSessions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportSettingsHistoryDebugViewController _updateFlowLayout:withBounds:traitCollection:]

  // instance methods
  -[PUImportSettingsHistoryDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUImportSettingsHistoryDebugViewController collectionView:numberOfItemsInSection:]
  -[PUImportSettingsHistoryDebugViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUImportSettingsHistoryDebugViewController numberOfSectionsInCollectionView:]
  -[PUImportSettingsHistoryDebugViewController viewWillLayoutSubviews]
  -[PUImportSettingsHistoryDebugViewController _updateTitle]
  -[PUImportSettingsHistoryDebugViewController .cxx_destruct]
  -[PUImportSettingsHistoryDebugViewController viewDidLoad]
  -[PUImportSettingsHistoryDebugViewController init]
  -[PUImportSettingsHistoryDebugViewController dealloc]
  -[PUImportSettingsHistoryDebugViewController _reloadData]
  -[PUImportSettingsHistoryDebugViewController photoLibraryDidChange:]
  -[PUImportSettingsHistoryDebugViewController setImportSessions:]
  -[PUImportSettingsHistoryDebugViewController importSessions]
  -[PUImportSettingsHistoryDebugViewController _scrollToBottom:]
  -[PUImportSettingsHistoryDebugViewController _assetForIndexPath:]
  -[PUImportSettingsHistoryDebugViewController _assetsForSection:]


PUImportStatusTileViewController : PUTileViewController <PUAssetViewModelChangeObserver>
 @property  BOOL _isPerformingChanges
 @property  PUAssetViewModel *assetViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUImportStatusTileViewController assetViewModel]
  -[PUImportStatusTileViewController applyLayoutInfo:]
  -[PUImportStatusTileViewController setAssetViewModel:]
  -[PUImportStatusTileViewController becomeReusable]
  -[PUImportStatusTileViewController performChanges:]
  -[PUImportStatusTileViewController _isPerformingChanges]
  -[PUImportStatusTileViewController _updateIfNeeded]
  -[PUImportStatusTileViewController .cxx_destruct]
  -[PUImportStatusTileViewController viewDidLoad]
  -[PUImportStatusTileViewController viewModel:didChange:]
  -[PUImportStatusTileViewController set_isPerformingChanges:]
  -[PUImportStatusTileViewController _updateStatusView]


PUImportViewController : PUPhotosGridViewController <PUSectionedGridLayoutDelegate, PUImportActionCoordinatorDelegate, PXImportAlbumPickerDelegate, PXImportAssetsDataSourceManagerObserver, PXImportControllerTopLevelCompletionDelegate, PXImportHistorySectionHeaderViewDelegate, PUImportOneUpTransitioning, PUImportSectionedGridLayoutDelegate, PXSettingsKeyObserver, PUCameraImportItemCellDelegate, PXChangeObserver, PXSwipeSelectionManagerDelegate, PUImportAddToAlbumsToolbarViewDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate>
 @property  PUPhotosGridViewControllerSpec *_spec
 @property  double _collectionViewLayoutReferenceWidth
 @property  {UIEdgeInsets=dddd} collectionViewSafeAreaInsets
 @property  id _pendingViewSizeTransitionContext
 @property  id _cachedViewSizeTransitionContext
 @property  {CGSize=dd} _cachedViewSizeTransitionContextSize
 @property  NSProgress *importProgress
 @property  PXImportController *importController
 @property  PXImportAssetsDataSourceManager *importDataSourceManager
 @property  PXImportAssetsDataSource *importDataSource
 @property  PXImportAssetsDataSourceManager *unfilteredImportDataSourceManager
 @property  BOOL performingDataSourceChange
 @property  BOOL needsDataReloadAfterAnimatingDataSourceChange
 @property  PXImportAssetsDataSource *pendingDataSource
 @property  PUImportChangeDetailsCollectionViewHelper *changeDetailsHelper
 @property  BOOL transitioningToNewSize
 @property  BOOL viewAppearing
 @property  PUImportFakePhotosDataSource *fakePhotosDataSource
 @property  PUImportActionCoordinator *actionCoordinator
 @property  PXNavigationTitleView *navigationTitleView
 @property  UILabel *navigationLargeTitleAccessoryLabel
 @property  PXSwipeSelectionManager *swipeSelectionManager
 @property  PXSelectionSnapshot *currentSelectionSnapshot
 @property  PUImportAddToAlbumsPickerViewController *albumsPickerViewController
 @property  BOOL performingAlbumPickerPresentation
 @property  BOOL userWantsAlreadyImportedSectionCollapsedIfPossible
 @property  BOOL shouldCollapseAlreadyImportedSection
 @property  BOOL userHasScrolled
 @property  BOOL shouldStayScrolledToBottom
 @property  PLRoundProgressView *roundProgressView
 @property  long long numItemsCompleted
 @property  long long numTotalItemsToComplete
 @property  NSMutableSet *itemsBeingTransitioned
 @property  BOOL animateHeaderActionButtonChanges
 @property  PUImportFloatingToolbarView *compactWidthToolbar
 @property  NSLayoutConstraint *compactWidthToolbarTopConstraint
 @property  PXNavigationTitleView *contentInfoBarButtonView
 @property  PXNavigationTitleView *compactWidthAlbumPickerBarButtonView
 @property  PUImportCustomViewBarButton *compactWidthAlbumPickerButton
 @property  NSNumber *cachedHeaderHeight
 @property  PXImportHistorySectionHeaderView *referenceHeaderView
 @property  BOOL isPeeking
 @property  double referenceWidth
 @property  UITapGestureRecognizer *doubleTapGestureRecognizer
 @property  PHImportSource *importSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUImportViewController totalSizeStringForItems:]
  +[PUImportViewController defaultThumbnailImageFormat]

  // instance methods
  -[PUImportViewController routingOptionsForDestination:]
  -[PUImportViewController viewSafeAreaInsetsDidChange]
  -[PUImportViewController collectionView:cellForItemAtIndexPath:]
  -[PUImportViewController collectionView:numberOfItemsInSection:]
  -[PUImportViewController initWithSpec:]
  -[PUImportViewController navigateToDestination:options:completionHandler:]
  -[PUImportViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUImportViewController shouldAutorotateToInterfaceOrientation:]
  -[PUImportViewController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[PUImportViewController numberOfSectionsInCollectionView:]
  -[PUImportViewController viewWillLayoutSubviews]
  -[PUImportViewController isEmpty]
  -[PUImportViewController collectionView:layout:referenceSizeForHeaderInSection:]
  -[PUImportViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUImportViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[PUImportViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[PUImportViewController setImportDataSource:]
  -[PUImportViewController px_navigationDestination]
  -[PUImportViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUImportViewController doubleTapGestureRecognizer]
  -[PUImportViewController contextMenuInteraction:configurationForMenuAtLocation:]
  -[PUImportViewController .cxx_destruct]
  -[PUImportViewController scrollViewDidEndScrollingAnimation:]
  -[PUImportViewController isPeeking]
  -[PUImportViewController viewDidLoad]
  -[PUImportViewController cachedHeaderHeight]
  -[PUImportViewController viewDidAppear:]
  -[PUImportViewController setImportSource:]
  -[PUImportViewController handleLongPressGesture:]
  -[PUImportViewController init]
  -[PUImportViewController swipeSelectionManager]
  -[PUImportViewController scrollViewDidScroll:]
  -[PUImportViewController headerViewDidPressActionButton:]
  -[PUImportViewController swipeSelectionManager:itemIndexPathClosestLeadingLocation:]
  -[PUImportViewController _spec]
  -[PUImportViewController gestureRecognizerShouldBegin:]
  -[PUImportViewController _contentSizeCategoryDidChangeNotification:]
  -[PUImportViewController swipeSelectionManager:itemIndexPathAtLocation:]
  -[PUImportViewController viewWillDisappear:]
  -[PUImportViewController viewDidLayoutSubviews]
  -[PUImportViewController canPerformAction:withSender:]
  -[PUImportViewController scrollViewWillBeginDragging:]
  -[PUImportViewController viewWillAppear:]
  -[PUImportViewController scrollViewShouldScrollToTop:]
  -[PUImportViewController swipeSelectionManagerIsInMultiSelectMode:]
  -[PUImportViewController setReferenceWidth:]
  -[PUImportViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUImportViewController _updateLayoutMetrics]
  -[PUImportViewController settings:changedValueForKey:]
  -[PUImportViewController importSource]
  -[PUImportViewController delete:]
  -[PUImportViewController installGestureRecognizers]
  -[PUImportViewController setCachedHeaderHeight:]
  -[PUImportViewController dealloc]
  -[PUImportViewController uninstallGestureRecognizers]
  -[PUImportViewController referenceWidth]
  -[PUImportViewController reloadData]
  -[PUImportViewController _gridLayout]
  -[PUImportViewController _setSpec:]
  -[PUImportViewController observable:didChange:context:]
  -[PUImportViewController setDoubleTapGestureRecognizer:]
  -[PUImportViewController isBusy]
  -[PUImportViewController layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUImportViewController updateNavigationBarAnimated:]
  -[PUImportViewController importDataSource]
  -[PUImportViewController swipeSelectionManager:itemIndexPathClosestAboveLocation:]
  -[PUImportViewController canDragOut]
  -[PUImportViewController updateSpec]
  -[PUImportViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUImportViewController sectionedGridLayoutAnchorItemForAdjustingContentOffset:]
  -[PUImportViewController sectionedGridLayout:aspectRatioForItemAtIndexPath:]
  -[PUImportViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUImportViewController sectionedGridLayout:accessibilitySectionHeaderHeightForVisualSection:]
  -[PUImportViewController importCell:requestImageForImportItem:ofSize:completion:]
  -[PUImportViewController contentFillModeForImportCell:]
  -[PUImportViewController importCell:didRequestCancellationOfThumbnailRequestWithID:]
  -[PUImportViewController handleTouchEvent:forCell:]
  -[PUImportViewController handleTapGesture:]
  -[PUImportViewController newGridLayout]
  -[PUImportViewController updateInterfaceForModelReloadAnimated:]
  -[PUImportViewController _updateBackdropGroupNameForHeaderView:]
  -[PUImportViewController importController]
  -[PUImportViewController actionCoordinatorWillBeginImport:]
  -[PUImportViewController importDestinationForActionCoordinator:]
  -[PUImportViewController actionCoordinator:didCompleteWithImportSession:results:]
  -[PUImportViewController actionCoordinatorDidBeginImport:]
  -[PUImportViewController actionCoordinatorDidCancelImport:]
  -[PUImportViewController _deleteItems:]
  -[PUImportViewController actionCoordinatorWillBeginDelete:]
  -[PUImportViewController actionCoordinatorDidEndDelete:]
  -[PUImportViewController actionCoordinatorDidBeginDelete:]
  -[PUImportViewController setImportController:]
  -[PUImportViewController _selectCell:]
  -[PUImportViewController collectionSelected:]
  -[PUImportViewController didTapAddToAlbumsView:]
  -[PUImportViewController referenceHeaderView]
  -[PUImportViewController setReferenceHeaderView:]
  -[PUImportViewController willTransitionFromViewController:toViewController:withTransitionItems:]
  -[PUImportViewController didTransitionFromViewController:toViewController:withTransitionItems:]
  -[PUImportViewController transitionItemsForContext:]
  -[PUImportViewController targetFrameForTransitionItem:]
  -[PUImportViewController prepareTransitionItemViewForDestination:]
  -[PUImportViewController setImportDataSourceManager:]
  -[PUImportViewController actionCoordinator]
  -[PUImportViewController _cancelAlerts]
  -[PUImportViewController importDataSourceManager]
  -[PUImportViewController handleNewDataSource:]
  -[PUImportViewController performingDataSourceChange]
  -[PUImportViewController setPendingDataSource:]
  -[PUImportViewController setPerformingDataSourceChange:]
  -[PUImportViewController pendingDataSource]
  -[PUImportViewController transitionFromDataSource:toDataSource:animated:completionHandler:]
  -[PUImportViewController changeDetailsHelper]
  -[PUImportViewController setChangeDetailsHelper:]
  -[PUImportViewController navigationTitleView]
  -[PUImportViewController _titleViewVerticalSizeClassForExtendedTraitCollection:]
  -[PUImportViewController setRoundProgressView:]
  -[PUImportViewController roundProgressView]
  -[PUImportViewController importControllerProgressDidChange:]
  -[PUImportViewController _importControllerWillBeginAction]
  -[PUImportViewController _importControllerDidEndAction]
  -[PUImportViewController imageRectFromPhotoView:]
  -[PUImportViewController setActionCoordinator:]
  -[PUImportViewController importSectionedGridLayout:shouldEmphasizeSection:]
  -[PUImportViewController stopImport:]
  -[PUImportViewController deleteButtonItem]
  -[PUImportViewController compactLayoutMode]
  -[PUImportViewController updateNavigationTitleViewVisibilityAnimated:]
  -[PUImportViewController updateContentInfoLabels]
  -[PUImportViewController _updateCompactToolbar]
  -[PUImportViewController updateNavigationTitleWithItems:sizeString:itemsAreSelected:]
  -[PUImportViewController updateContentInfoBarButtonTitlesWithItems:sizeString:itemsAreSelected:]
  -[PUImportViewController numTotalItemsToComplete]
  -[PUImportViewController numItemsCompleted]
  -[PUImportViewController compactWidthToolbar]
  -[PUImportViewController navigationLargeTitleAccessoryLabel]
  -[PUImportViewController contentInfoBarButtonView]
  -[PUImportViewController updateCompactWidthToolbarVisibility]
  -[PUImportViewController setCompactWidthToolbar:]
  -[PUImportViewController setCompactWidthToolbarTopConstraint:]
  -[PUImportViewController compactWidthToolbarTopConstraint]
  -[PUImportViewController setContentInfoBarButtonView:]
  -[PUImportViewController setCompactWidthAlbumPickerBarButtonView:]
  -[PUImportViewController compactWidthAlbumPickerBarButtonView]
  -[PUImportViewController titleForDestinationCollection:]
  -[PUImportViewController setCompactWidthAlbumPickerButton:]
  -[PUImportViewController compactWidthAlbumPickerButton]
  -[PUImportViewController showAlbumPicker:]
  -[PUImportViewController accessibilityLabelForAlbumPickerControlWithDestination:]
  -[PUImportViewController updateCompactWidthToolbarBackgroundGroupName]
  -[PUImportViewController updateCompactWidthToolbarTopConstraint]
  -[PUImportViewController updateContentInsetForCompactWidthToolbar]
  -[PUImportViewController setUpCompactWidthToolbar]
  -[PUImportViewController _setCollectionViewLayoutReferenceWidth:]
  -[PUImportViewController _setCollectionViewSafeAreaInsets:]
  -[PUImportViewController setNeedsDataReloadAfterAnimatingDataSourceChange:]
  -[PUImportViewController setViewAppearing:]
  -[PUImportViewController _updateToolbarAnimated:]
  -[PUImportViewController enableSwipeSelection]
  -[PUImportViewController _dismissPopupsAnimated:]
  -[PUImportViewController disableSwipeSelection]
  -[PUImportViewController _cachedViewSizeTransitionContextSize]
  -[PUImportViewController _cachedViewSizeTransitionContext]
  -[PUImportViewController _setCachedViewSizeTransitionContext:]
  -[PUImportViewController _setCachedViewSizeTransitionContextSize:]
  -[PUImportViewController _pendingViewSizeTransitionContext]
  -[PUImportViewController _setPendingViewSizeTransitionContext:]
  -[PUImportViewController _invalidateCachedViewSizeTransitionContext]
  -[PUImportViewController setTransitioningToNewSize:]
  -[PUImportViewController updateAlreadyImportedCollapseStatus]
  -[PUImportViewController anyAlreadyImportedItemsAreSelected]
  -[PUImportViewController userWantsAlreadyImportedSectionCollapsedIfPossible]
  -[PUImportViewController shouldCollapseAlreadyImportedSection]
  -[PUImportViewController setUserWantsAlreadyImportedSectionCollapsedIfPossible:]
  -[PUImportViewController _updateContentOffsetForPendingViewSizeTransition]
  -[PUImportViewController updateDataSourceManagerFilters]
  -[PUImportViewController updateAlreadyImportedHeaderIfVisible]
  -[PUImportViewController _collectionViewLayoutReferenceWidth]
  -[PUImportViewController _bestReferenceItemIndexPath]
  -[PUImportViewController itemsBeingTransitioned]
  -[PUImportViewController _updateCell:atIndex:]
  -[PUImportViewController _pausePhotoStreams]
  -[PUImportViewController _beginUninterruptibleOperation]
  -[PUImportViewController _resumePhotoStreams]
  -[PUImportViewController _endUninterruptibleOperation]
  -[PUImportViewController setFakePhotosDataSource:]
  -[PUImportViewController fakePhotosDataSource]
  -[PUImportViewController setShouldStayScrolledToBottom:]
  -[PUImportViewController unfilteredImportDataSourceManager]
  -[PUImportViewController setUnfilteredImportDataSourceManager:]
  -[PUImportViewController setShouldCollapseAlreadyImportedSection:]
  -[PUImportViewController currentSelectionSnapshot]
  -[PUImportViewController setCurrentSelectionSnapshot:]
  -[PUImportViewController setAnimateHeaderActionButtonChanges:]
  -[PUImportViewController isViewAppearing]
  -[PUImportViewController isTransitioningToNewSize]
  -[PUImportViewController needsDataReloadAfterAnimatingDataSourceChange]
  -[PUImportViewController shouldStayScrolledToBottom]
  -[PUImportViewController setNumItemsCompleted:]
  -[PUImportViewController setNumTotalItemsToComplete:]
  -[PUImportViewController presentAlbumPickerFromView:orBarItem:]
  -[PUImportViewController performingAlbumPickerPresentation]
  -[PUImportViewController albumsPickerViewController]
  -[PUImportViewController setAlbumsPickerViewController:]
  -[PUImportViewController setPerformingAlbumPickerPresentation:]
  -[PUImportViewController _navigationViewControllerForViewController:]
  -[PUImportViewController cancelAlbumPickerPopover:]
  -[PUImportViewController _beginImport]
  -[PUImportViewController _endImport]
  -[PUImportViewController notifyUserOfImportCompletionIfNeededWithImportSession:results:]
  -[PUImportViewController _updateItemViewAtIndex:]
  -[PUImportViewController importSourceIsAppleDevice]
  -[PUImportViewController configureCollectionViewGridLayout:]
  -[PUImportViewController updateHeaderView:forAlreadyImportedAssetCollection:]
  -[PUImportViewController updateHeaderView:forAssetCollection:]
  -[PUImportViewController toggleAlreadyImportedExpansion]
  -[PUImportViewController areAllItemsSelectedInAssetCollection:]
  -[PUImportViewController setAllItemsSelected:inAssetCollection:]
  -[PUImportViewController animateHeaderActionButtonChanges]
  -[PUImportViewController oneUpViewControllerForItemAtIndexPath:]
  -[PUImportViewController presentOneUpViewController:animated:interactive:]
  -[PUImportViewController compactWidthToolbarCoversLocation:]
  -[PUImportViewController sectionHeadersCoverLocation:]
  -[PUImportViewController selectAllSelectableItems]
  -[PUImportViewController shouldLongPressForOneUp]
  -[PUImportViewController _navigateToPhotoAtIndexPath:animated:interactive:]
  -[PUImportViewController _deselectCell:]
  -[PUImportViewController handlePhotoOrStackPinchGestureRecognizer:]
  -[PUImportViewController setItemsBeingTransitioned:]
  -[PUImportViewController setUserHasScrolled:]
  -[PUImportViewController stayScrolledToBottomIfAtBottomAfterDrag:]
  -[PUImportViewController navigateToBottomAnimated:]
  -[PUImportViewController userHasScrolled]
  -[PUImportViewController canBeginSwipeSelectionAtScrollViewLocation:]
  -[PUImportViewController selectionIndexPathForItem:]
  -[PUImportViewController handleDoubleTapGesture:]
  -[PUImportViewController canBeginDoubleTapGesture:]
  -[PUImportViewController importController:didCompleteImportWithImportSession:results:completion:]
  -[PUImportViewController importController:didLoadAssets:exceptions:]
  -[PUImportViewController swipeSelectionManager:shouldBeginSelectionAtLocation:]
  -[PUImportViewController _isItemVisibleAtIndex:]
  -[PUImportViewController _newGridLayoutFromSpec:]
  -[PUImportViewController handleImportCompleteAlertResponse:flags:]
  -[PUImportViewController isImporting]
  -[PUImportViewController gridItemSize]
  -[PUImportViewController wantsPlaceholderView]
  -[PUImportViewController getEmptyPlaceholderViewTitle:message:buttonTitle:buttonAction:]
  -[PUImportViewController _getDataForVisualSection:hasActionButton:title:startDate:endDate:]
  -[PUImportViewController isContentViewInSyncWithModel]
  -[PUImportViewController isPreheatingEnabled]
  -[PUImportViewController createOneUpTransitionController]
  -[PUImportViewController collectionViewSafeAreaInsets]
  -[PUImportViewController importProgress]
  -[PUImportViewController setImportProgress:]
  -[PUImportViewController setSwipeSelectionManager:]
  -[PUImportViewController setIsPeeking:]


PUIndexPathSet : NSObject <NSCopying, NSMutableCopying>
  // instance methods
  -[PUIndexPathSet count]
  -[PUIndexPathSet mutableCopyWithZone:]
  -[PUIndexPathSet copyWithZone:]
  -[PUIndexPathSet containsIndexPath:]
  -[PUIndexPathSet enumerateIndexPathsUsingBlock:]


PUMutableIndexPathSet : PUIndexPathSet
  // instance methods
  -[PUMutableIndexPathSet initWithCapacity:]
  -[PUMutableIndexPathSet .cxx_destruct]
  -[PUMutableIndexPathSet count]
  -[PUMutableIndexPathSet init]
  -[PUMutableIndexPathSet isEqual:]
  -[PUMutableIndexPathSet removeAllIndexPaths]
  -[PUMutableIndexPathSet addIndexPath:]
  -[PUMutableIndexPathSet removeIndexPath:]
  -[PUMutableIndexPathSet mutableCopyWithZone:]
  -[PUMutableIndexPathSet containsIndexPath:]
  -[PUMutableIndexPathSet enumerateIndexPathsUsingBlock:]
  -[PUMutableIndexPathSet setIndexPathSet:]


PUInteractiveDismissalController : NSObject
 @property  UIViewController *_viewController
 @property  UIView *_viewHostingGestureRecognizers
 @property  <PUInterruptibleViewControllerTransition> *_interruptibleViewControllerTransition
 @property  BOOL _needsUpdateGestureRecognizers
 @property  PUTilingView *tilingView
 @property  PUTileController *designatedTileController
 @property  <PUTilingViewControllerTransition> *tilingViewControllerTransition
 @property  <PUInteractiveDismissalControllerDelegate> *delegate
 @property  BOOL isHandlingDismissalInteraction

  // instance methods
  -[PUInteractiveDismissalController _updateIfNeeded]
  -[PUInteractiveDismissalController .cxx_destruct]
  -[PUInteractiveDismissalController _invalidateGestureRecognizers]
  -[PUInteractiveDismissalController setDelegate:]
  -[PUInteractiveDismissalController updateGestureRecognizersWithHostingView:]
  -[PUInteractiveDismissalController _setNeedsUpdateGestureRecognizers:]
  -[PUInteractiveDismissalController delegate]
  -[PUInteractiveDismissalController _setViewController:]
  -[PUInteractiveDismissalController _viewController]
  -[PUInteractiveDismissalController _needsUpdateGestureRecognizers]
  -[PUInteractiveDismissalController _updateGestureRecognizersIfNeeded]
  -[PUInteractiveDismissalController tilingView]
  -[PUInteractiveDismissalController _invalidateViewController]
  -[PUInteractiveDismissalController _invalidateViewHostingGestureRecognizers]
  -[PUInteractiveDismissalController _updateViewControllerIfNeeded]
  -[PUInteractiveDismissalController _updateViewHostingGestureRecognizersIfNeeded]
  -[PUInteractiveDismissalController _updateInterruptibleViewControllerTransitionIfNeeded]
  -[PUInteractiveDismissalController _interruptibleViewControllerTransition]
  -[PUInteractiveDismissalController _preferredDismissalTransitionType]
  -[PUInteractiveDismissalController setIsHandlingDismissalInteraction:]
  -[PUInteractiveDismissalController _invalidateInterruptibleViewControllerTransition]
  -[PUInteractiveDismissalController _setViewHostingGestureRecognizers:]
  -[PUInteractiveDismissalController _viewHostingGestureRecognizers]
  -[PUInteractiveDismissalController _setInterruptibleViewControllerTransition:]
  -[PUInteractiveDismissalController invalidateDelegateData]
  -[PUInteractiveDismissalController designatedTileController]
  -[PUInteractiveDismissalController tilingViewControllerTransition]
  -[PUInteractiveDismissalController canBeginDismissalAtLocationFromProvider:]
  -[PUInteractiveDismissalController beginDismissal]
  -[PUInteractiveDismissalController updateDismissalWithInteractionProgress:interactionWillFinish:]
  -[PUInteractiveDismissalController endDismissal:]
  -[PUInteractiveDismissalController isHandlingDismissalInteraction]


PUInteractivePinchDismissalController : PUInteractiveDismissalController <UIGestureRecognizerDelegate, PUPinchedTileTrackerDelegate>
 @property  UIPinchGestureRecognizer *_pinchGestureRecognizer
 @property  BOOL handlingPinchGestureRecognizer
 @property  PUChangeDirectionValueFilter *_scaleDirectionValueFilter
 @property  PUPinchedTileTracker *_pinchedTileTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUInteractivePinchDismissalController _setPinchedTileTracker:]
  -[PUInteractivePinchDismissalController .cxx_destruct]
  -[PUInteractivePinchDismissalController _setPinchGestureRecognizer:]
  -[PUInteractivePinchDismissalController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[PUInteractivePinchDismissalController updateGestureRecognizersWithHostingView:]
  -[PUInteractivePinchDismissalController _pinchedTileTracker]
  -[PUInteractivePinchDismissalController _scaleDirectionValueFilter]
  -[PUInteractivePinchDismissalController gestureRecognizerShouldBegin:]
  -[PUInteractivePinchDismissalController _handlePinchGestureRecognizer:]
  -[PUInteractivePinchDismissalController _setScaleDirectionValueFilter:]
  -[PUInteractivePinchDismissalController dealloc]
  -[PUInteractivePinchDismissalController _setHandlingPinchGestureRecognizer:]
  -[PUInteractivePinchDismissalController _pinchGestureRecognizer]
  -[PUInteractivePinchDismissalController pinchedTiledTracker:finalLayoutInfoForInitialLayoutInfo:]
  -[PUInteractivePinchDismissalController _isHandlingPinchGestureRecognizer]


PUInteractiveSwipeDismissalController : PUInteractiveDismissalController <UIGestureRecognizerDelegate, PXVerticalSwipeGestureRecognizerHelperDelegate>
 @property  UIPanGestureRecognizer *_panGestureRecognizer
 @property  PXVerticalSwipeGestureRecognizerHelper *verticalSwipeGestureRecognzierHelper
 @property  BOOL handlingPanGestureRecognizer
 @property  PUChangeDirectionValueFilter *_dismissGestureDirectionValueFilter
 @property  PUSwipedDownTileTracker *_swipedDownTileTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUInteractiveSwipeDismissalController _handlePanGestureRecognizer:]
  -[PUInteractiveSwipeDismissalController verticalSwipeGestureRecognizerHelper:shouldRecognizeSwipeDownGestureRecognizer:]
  -[PUInteractiveSwipeDismissalController _setPanGestureRecognizer:]
  -[PUInteractiveSwipeDismissalController _panGestureRecognizer]
  -[PUInteractiveSwipeDismissalController .cxx_destruct]
  -[PUInteractiveSwipeDismissalController _setSwipedDownTileTracker:]
  -[PUInteractiveSwipeDismissalController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[PUInteractiveSwipeDismissalController init]
  -[PUInteractiveSwipeDismissalController updateGestureRecognizersWithHostingView:]
  -[PUInteractiveSwipeDismissalController gestureRecognizerShouldBegin:]
  -[PUInteractiveSwipeDismissalController _setHandlingPanGestureRecognizer:]
  -[PUInteractiveSwipeDismissalController _isHandlingPanGestureRecognizer]
  -[PUInteractiveSwipeDismissalController _dismissGestureDirectionValueFilter]
  -[PUInteractiveSwipeDismissalController dealloc]
  -[PUInteractiveSwipeDismissalController verticalSwipeGestureRecognzierHelper]
  -[PUInteractiveSwipeDismissalController _swipedDownTileTracker]
  -[PUInteractiveSwipeDismissalController _setDismissGestureDirectionValueFilter:]


PUInteractiveTileTracker : NSObject
 @property  long long _state
 @property  PUTileHider *_tileHider
 @property  double progress
 @property  BOOL shouldEnd
 @property  BOOL shouldFinish
 @property  {PUDisplayVelocity=dddd} currentVelocity
 @property  PUTileController *trackedTileController
 @property  PUTilingView *tilingView
 @property  <PUInteractiveTileTrackerDelegate> *delegate

  // instance methods
  -[PUInteractiveTileTracker _setState:]
  -[PUInteractiveTileTracker _state]
  -[PUInteractiveTileTracker .cxx_destruct]
  -[PUInteractiveTileTracker update]
  -[PUInteractiveTileTracker setDelegate:]
  -[PUInteractiveTileTracker progress]
  -[PUInteractiveTileTracker currentVelocity]
  -[PUInteractiveTileTracker init]
  -[PUInteractiveTileTracker delegate]
  -[PUInteractiveTileTracker setProgress:]
  -[PUInteractiveTileTracker shouldEnd]
  -[PUInteractiveTileTracker tilingView]
  -[PUInteractiveTileTracker shouldFinish]
  -[PUInteractiveTileTracker initWithTilingView:]
  -[PUInteractiveTileTracker updateGestureRecognizerTracking]
  -[PUInteractiveTileTracker _updateTrackedTileController]
  -[PUInteractiveTileTracker trackedTileController]
  -[PUInteractiveTileTracker updateTileControllerTracking]
  -[PUInteractiveTileTracker stopTileControllerTracking]
  -[PUInteractiveTileTracker _setTrackedTileController:]
  -[PUInteractiveTileTracker completeTracking]
  -[PUInteractiveTileTracker _setTileHider:]
  -[PUInteractiveTileTracker configureTileReattachmentContext:]
  -[PUInteractiveTileTracker _tileHider]
  -[PUInteractiveTileTracker tileControllerToTrack]
  -[PUInteractiveTileTracker startTileControllerTracking]
  -[PUInteractiveTileTracker setShouldEnd:]
  -[PUInteractiveTileTracker setShouldFinish:]
  -[PUInteractiveTileTracker setCurrentVelocity:]


PUInterfaceManager : NSObject
  // class methods
  +[PUInterfaceManager currentTheme]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoBrowserToPhotoEditorTransition]
  +[PUInterfaceManager shouldUseAccessibilityLargeTextLayoutWithTraitCollecton:]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorWaitingToDismiss]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForSearchSelectResult]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForOverOneUpTransition]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForBannerViewImagesJump]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorSwitchingSource]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForSearchSelectSuggestion]
  +[PUInterfaceManager shouldUsePhoneLayoutWithTraitCollection:]
  +[PUInterfaceManager _disabledUserInteractionRequestDidTimeOut:]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoBrowserZoomTransition]
  +[PUInterfaceManager _handleInteractionDisablingTimeout]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForAlbumStackTransition]
  +[PUInterfaceManager endDisablingUserInteraction:]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorComputingAutoEnhance]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForStartSlideshowFromGrid]
  +[PUInterfaceManager beginDisablingUserInteractionForReason:]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForOneUpToPhotoEditorTransition]
  +[PUInterfaceManager beginDisablingUserInteractionForReason:withExpectedTimeout:]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorToPhotoBrowserTransition]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForBurningInTrim]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorRevertingChanges]
  +[PUInterfaceManager _handleInteractionDisablingTimeoutForPhotoEditorSavingChanges]


_PUDisabledUserInteractionToken : NSObject
 @property  NSString *identifier
 @property  long long reason

  // instance methods
  -[_PUDisabledUserInteractionToken .cxx_destruct]
  -[_PUDisabledUserInteractionToken identifier]
  -[_PUDisabledUserInteractionToken reason]
  -[_PUDisabledUserInteractionToken setIdentifier:]
  -[_PUDisabledUserInteractionToken setReason:]


PUInternalAutoLoopFeedbackActivity : PXActivity <PXFeedbackAssetUIViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUInternalAutoLoopFeedbackActivity activityCategory]

  // instance methods
  -[PUInternalAutoLoopFeedbackActivity activityViewController]
  -[PUInternalAutoLoopFeedbackActivity activityType]
  -[PUInternalAutoLoopFeedbackActivity canPerformWithActivityItems:]
  -[PUInternalAutoLoopFeedbackActivity asset]
  -[PUInternalAutoLoopFeedbackActivity activityTitle]
  -[PUInternalAutoLoopFeedbackActivity activityImage]
  -[PUInternalAutoLoopFeedbackActivity feedbackAssetUIViewController:didFinish:]


PUInternalGIFExportActivity : PXActivity
  // class methods
  +[PUInternalGIFExportActivity activityCategory]

  // instance methods
  -[PUInternalGIFExportActivity _systemImageName]
  -[PUInternalGIFExportActivity activityType]
  -[PUInternalGIFExportActivity canPerformWithActivityItems:]
  -[PUInternalGIFExportActivity performActivity]
  -[PUInternalGIFExportActivity activityTitle]
  -[PUInternalGIFExportActivity _asset]


PUInternalImageQualityFeedbackActivity : PXActivity <PXFeedbackImageQualityUIViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUInternalImageQualityFeedbackActivity activityCategory]

  // instance methods
  -[PUInternalImageQualityFeedbackActivity activityViewController]
  -[PUInternalImageQualityFeedbackActivity .cxx_destruct]
  -[PUInternalImageQualityFeedbackActivity _systemImageName]
  -[PUInternalImageQualityFeedbackActivity assets]
  -[PUInternalImageQualityFeedbackActivity activityType]
  -[PUInternalImageQualityFeedbackActivity canPerformWithActivityItems:]
  -[PUInternalImageQualityFeedbackActivity activityTitle]
  -[PUInternalImageQualityFeedbackActivity feedbackImageQualityUIViewController:didFinish:]


PUIrisImageTileViewController : PUImageTileViewController <PHLivePhotoViewDelegate, PHLivePhotoViewDelegatePrivate, PUBrowsingViewModelChangeObserver>
 @property  PHLivePhotoView *_livePhotoView
 @property  PXLivePhotoViewModulator *livePhotoViewModulator
 @property  BOOL isVitalityDisabledBytransformInset
 @property  <PUIrisImageTileViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUIrisImageTileViewController updateModulator]
  -[PUIrisImageTileViewController livePhotoView:didEndPlaybackWithStyle:]
  -[PUIrisImageTileViewController _updateVitalityTransform]
  -[PUIrisImageTileViewController applyLayoutInfo:]
  -[PUIrisImageTileViewController setAssetViewModel:]
  -[PUIrisImageTileViewController updateModulatorInputs]
  -[PUIrisImageTileViewController generateAssetTransitionInfo]
  -[PUIrisImageTileViewController assetDidChange]
  -[PUIrisImageTileViewController assetViewModelDidChange]
  -[PUIrisImageTileViewController livePhotoViewModulator]
  -[PUIrisImageTileViewController _updateSRLCompensation]
  -[PUIrisImageTileViewController livePhotoViewDidEndPlayingVitality:]
  -[PUIrisImageTileViewController .cxx_destruct]
  -[PUIrisImageTileViewController setIsVitalityDisabledBytransformInset:]
  -[PUIrisImageTileViewController setDelegate:]
  -[PUIrisImageTileViewController viewModel:didChange:]
  -[PUIrisImageTileViewController ppt_playLivePhotoWithCompletionHandler:]
  -[PUIrisImageTileViewController livePhotoViewDidBeginHinting:]
  -[PUIrisImageTileViewController removeAllAnimations]
  -[PUIrisImageTileViewController setLivePhotoViewModulator:]
  -[PUIrisImageTileViewController _assetFocusValueDidChange]
  -[PUIrisImageTileViewController _updatePlayerViewInteractivePlaybackAllowed]
  -[PUIrisImageTileViewController _livePhotoView]
  -[PUIrisImageTileViewController delegate]
  -[PUIrisImageTileViewController livePhotoView:willBeginPlaybackWithStyle:]
  -[PUIrisImageTileViewController isVitalityDisabledBytransformInset]
  -[PUIrisImageTileViewController _handleBrowsingIrisPlayer:didChange:]
  -[PUIrisImageTileViewController loadView]
  -[PUIrisImageTileViewController _updateLivePhotoViewVitalityEnabled]
  -[PUIrisImageTileViewController addToTilingView:]
  -[PUIrisImageTileViewController _updatePlaybackGestureRecognizer]


PUIrisSettings : PXSettings
 @property  BOOL showStatusBorder
 @property  BOOL vitalityAllowed
 @property  BOOL shouldAlwaysBadge

  // class methods
  +[PUIrisSettings sharedInstance]
  +[PUIrisSettings settingsControllerModule]
  +[PUIrisSettings _photosPlayerRootSettings]

  // instance methods
  -[PUIrisSettings performPostSaveActions]
  -[PUIrisSettings parentSettings]
  -[PUIrisSettings showStatusBorder]
  -[PUIrisSettings setDefaultValues]
  -[PUIrisSettings isVitalityAllowed]
  -[PUIrisSettings setShowStatusBorder:]
  -[PUIrisSettings restoreDefaultValues]
  -[PUIrisSettings shouldAlwaysBadge]
  -[PUIrisSettings setVitalityAllowed:]
  -[PUIrisSettings setShouldAlwaysBadge:]


PUJoiningAssetActionManager : PUAssetActionManager
 @property  NSMapTable *_actionManagerByClass
 @property  PUAssetActionManager *_actionManagerForNoAsset

  // instance methods
  -[PUJoiningAssetActionManager .cxx_destruct]
  -[PUJoiningAssetActionManager init]
  -[PUJoiningAssetActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUJoiningAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUJoiningAssetActionManager canPerformAction:onAllAssetsByAssetCollection:]
  -[PUJoiningAssetActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUJoiningAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:]
  -[PUJoiningAssetActionManager actionPerformerForSettingFavoriteTo:onAssetsByAssetCollection:]
  -[PUJoiningAssetActionManager actionPerformerForDuplicatingAssetsByAssetCollection:withNewStillImageTime:]
  -[PUJoiningAssetActionManager shouldEnableActionType:onAllAssetsByAssetCollection:]
  -[PUJoiningAssetActionManager _actionManagerByClass]
  -[PUJoiningAssetActionManager _setActionManagerForNoAsset:]
  -[PUJoiningAssetActionManager _actionManagerForNoAsset]
  -[PUJoiningAssetActionManager _actionManagerForAsset:]
  -[PUJoiningAssetActionManager _actionManagerForAssets:]
  -[PUJoiningAssetActionManager registerActionManager:forAssetClass:]
  -[PUJoiningAssetActionManager _actionManagerForAssetsByAssetCollection:]


PUAssetPickerCellViews : NSObject
  // class methods
  +[PUAssetPickerCellViews createHiddenOverlayViewWithoutConstraints]
  +[PUAssetPickerCellViews createAccessibilityFriendlyLabelWithoutConstraints]

  // instance methods
  -[PUAssetPickerCellViews init]


PUJoiningAssetsDataSource : PUAssetsDataSource
 @property  NSArray *_dataSources
 @property  long long _totalNumberOfSections
 @property  NSDictionary *_containedDataSourceInfoByIdentifier
 @property  NSArray *_containedDataSourceInfos

  // instance methods
  -[PUJoiningAssetsDataSource numberOfAssetsWithMaximum:]
  -[PUJoiningAssetsDataSource indexPathForAssetCollection:]
  -[PUJoiningAssetsDataSource .cxx_destruct]
  -[PUJoiningAssetsDataSource _dataSources]
  -[PUJoiningAssetsDataSource indexPathForAssetReference:]
  -[PUJoiningAssetsDataSource startingAssetReference]
  -[PUJoiningAssetsDataSource assetReferenceAtIndexPath:]
  -[PUJoiningAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUJoiningAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUJoiningAssetsDataSource assetCollectionAtIndexPath:]
  -[PUJoiningAssetsDataSource assetAtIndexPath:]
  -[PUJoiningAssetsDataSource containedAssetsDataSourceAtIndexPath:]
  -[PUJoiningAssetsDataSource _containedDataSourceInfos]
  -[PUJoiningAssetsDataSource _containedDataSourceInfoByIdentifier]
  -[PUJoiningAssetsDataSource _totalNumberOfSections]
  -[PUJoiningAssetsDataSource _assetsDataSourceForExternalIndexPath:outDataSourceIndex:outLocalIndexPath:]
  -[PUJoiningAssetsDataSource _externalIndexPathForLocalIndexPath:inAssetsDataSource:]
  -[PUJoiningAssetsDataSource initWithDataSources:]


PUJoiningAssetReference : PUAssetReference
 @property  long long hintDataSourceIndex
 @property  PUAssetReference *containedAssetReference

  // instance methods
  -[PUJoiningAssetReference .cxx_destruct]
  -[PUJoiningAssetReference initWithAsset:assetCollection:indexPath:dataSourceIdentifier:]
  -[PUJoiningAssetReference initWithContainedAssetReference:hintDataSourceIndex:indexPath:dataSourceIdentifier:]
  -[PUJoiningAssetReference containedAssetReference]
  -[PUJoiningAssetReference hintDataSourceIndex]


PUContainedDataSourceInfo : NSObject
 @property  PUAssetsDataSource *assetsDataSource
 @property  {_NSRange=QQ} externalSections

  // instance methods
  -[PUContainedDataSourceInfo .cxx_destruct]
  -[PUContainedDataSourceInfo assetsDataSource]
  -[PUContainedDataSourceInfo setAssetsDataSource:]
  -[PUContainedDataSourceInfo setExternalSections:]
  -[PUContainedDataSourceInfo externalSections]


PUJoiningDataSourceManager : PUAssetsDataSourceManager <PUAssetsDataSourceManagerDelegate>
 @property  NSArray *_dataSourceManagers
 @property  long long _currentUpdateID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUJoiningDataSourceManager .cxx_destruct]
  -[PUJoiningDataSourceManager _update]
  -[PUJoiningDataSourceManager _scheduleUpdate]
  -[PUJoiningDataSourceManager assetsDataSourceManagerInterestingAssetReferences:]
  -[PUJoiningDataSourceManager assetsDataSourceManager:didChangeAssetsDataSource:]
  -[PUJoiningDataSourceManager _currentUpdateID]
  -[PUJoiningDataSourceManager _setCurrentUpdateId:]
  -[PUJoiningDataSourceManager _handleScheduledUpdateWithID:]
  -[PUJoiningDataSourceManager _dataSourceManagers]
  -[PUJoiningDataSourceManager initWithDataSourceManagers:]


PUJoiningMediaProvider : PUMediaProvider
 @property  NSMapTable *_mediaProviderByClass
 @property  NSMutableArray *_mediaProviderPredicateRecords

  // instance methods
  -[PUJoiningMediaProvider cancelImageRequest:]
  -[PUJoiningMediaProvider .cxx_destruct]
  -[PUJoiningMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUJoiningMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUJoiningMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUJoiningMediaProvider init]
  -[PUJoiningMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUJoiningMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUJoiningMediaProvider requestAnimatedImageForAsset:options:resultHandler:]
  -[PUJoiningMediaProvider registerMediaProvider:forAssetPassingTest:]
  -[PUJoiningMediaProvider registerMediaProvider:forAssetClass:]
  -[PUJoiningMediaProvider _mediaProviderByClass]
  -[PUJoiningMediaProvider _mediaProviderPredicateRecords]
  -[PUJoiningMediaProvider _mediaProviderForAsset:requestType:]


PUJoiningMediaProviderPredicateRecord : NSObject
 @property  PUMediaProvider *mediaProvider
 @property  @? predicate

  // instance methods
  -[PUJoiningMediaProviderPredicateRecord predicate]
  -[PUJoiningMediaProviderPredicateRecord .cxx_destruct]
  -[PUJoiningMediaProviderPredicateRecord mediaProvider]
  -[PUJoiningMediaProviderPredicateRecord initWithMediaProvider:predicate:]


PULayerAnimation : PUAnimationGroup <CAAnimationDelegate>
 @property  CAAnimation *_animation
 @property  CALayer *layer
 @property  NSString *key
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PULayerAnimation layer]
  -[PULayerAnimation .cxx_destruct]
  -[PULayerAnimation _updateLayerAnimation]
  -[PULayerAnimation isReadyToComplete]
  -[PULayerAnimation animationDidStop:finished:]
  -[PULayerAnimation init]
  -[PULayerAnimation initWithLayer:key:]
  -[PULayerAnimation setSpeed:timeOffset:beginTime:]
  -[PULayerAnimation animationDidStart:]
  -[PULayerAnimation finishImmediately]
  -[PULayerAnimation _setAnimation:]
  -[PULayerAnimation key]
  -[PULayerAnimation _animation]


PUSidebarViewController : UIViewController <UICollectionViewDelegate, PUCollectionsCollectionViewDropDataProvider, PUOutlineCellDelegate, PXAssetCollectionActionPerformerDelegate, PXSidebarOutlineSectionControllerDelegate, PXCollectionActionReceiver, PXProgrammaticNavigationUpdateTarget, PXSplitViewControllerChangeObserver>
 @property  UICollectionView *collectionView
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  PXSidebarOutlineSectionController *sidebarOutlineSectionController
 @property  PUSidebarDataSectionEnablementController *sidebarDataSectionEnablementController
 @property  PXSidebarDataController *sidebarDataController
 @property  PUCollectionsCollectionViewDropDelegate *dropDelegate
 @property  PXProgrammaticNavigationDestination *currentNavigationDestination
 @property  PUSidebarReorderController *reorderController
 @property  long long suspendSelectionUpdatesMode
 @property  BOOL selectingAlreadySelectedIndexPath
 @property  <PXProgrammaticNavigationParticipant> *navigationRoot
 @property  PHPhotoLibrary *photoLibrary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSidebarViewController collectionView:selectionFollowsFocusForItemAtIndexPath:]
  -[PUSidebarViewController collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:]
  -[PUSidebarViewController newAlbum:]
  -[PUSidebarViewController collectionView:didSelectItemAtIndexPath:]
  -[PUSidebarViewController traitCollectionDidChange:]
  -[PUSidebarViewController collectionView:shouldSpringLoadItemAtIndexPath:withContext:]
  -[PUSidebarViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUSidebarViewController setEditing:animated:]
  -[PUSidebarViewController setDataSource:]
  -[PUSidebarViewController newSmartAlbum:]
  -[PUSidebarViewController photoLibrary]
  -[PUSidebarViewController .cxx_destruct]
  -[PUSidebarViewController viewDidLoad]
  -[PUSidebarViewController configureDataSource]
  -[PUSidebarViewController dataSource]
  -[PUSidebarViewController collectionView]
  -[PUSidebarViewController px_navigationDestinationWillChange:]
  -[PUSidebarViewController setCollectionView:]
  -[PUSidebarViewController actionPerformer:presentViewController:]
  -[PUSidebarViewController newFolder:]
  -[PUSidebarViewController dropDelegate]
  -[PUSidebarViewController ppt_runTabSwitchingTestWithName:options:delegate:completionHandler:]
  -[PUSidebarViewController canPerformAction:withSender:]
  -[PUSidebarViewController viewWillAppear:]
  -[PUSidebarViewController newSharedAlbum:]
  -[PUSidebarViewController actionPerformer:dismissViewController:completionHandler:]
  -[PUSidebarViewController setDropDelegate:]
  -[PUSidebarViewController viewDidDisappear:]
  -[PUSidebarViewController collectionViewDropDelegate:collectionAtIndexPath:]
  -[PUSidebarViewController actionPerformerDelegateForCollectionViewDropDelegate:]
  -[PUSidebarViewController outlineCell:updatedTitle:forItem:]
  -[PUSidebarViewController configureViewHierarchy]
  -[PUSidebarViewController setupDataSectionManager]
  -[PUSidebarViewController sidebarDataController]
  -[PUSidebarViewController _updateSelectedRowScrollToVisible:]
  -[PUSidebarViewController _updateOutlineCell:forListItem:]
  -[PUSidebarViewController generateLayout]
  -[PUSidebarViewController _trailingSwipeActionConfigurationForIndexPath:]
  -[PUSidebarViewController sidebarOutlineSectionController]
  -[PUSidebarViewController _updateHeaderCell:forListItem:]
  -[PUSidebarViewController reorderController]
  -[PUSidebarViewController setSidebarDataSectionEnablementController:]
  -[PUSidebarViewController setSidebarDataController:]
  -[PUSidebarViewController setSidebarOutlineSectionController:]
  -[PUSidebarViewController currentNavigationDestination]
  -[PUSidebarViewController _collectionViewIndexPathForItemIdentifier:]
  -[PUSidebarViewController _performActionForType:completionHandler:]
  -[PUSidebarViewController selectingAlreadySelectedIndexPath]
  -[PUSidebarViewController _navigateToDestinationForItem:sameItem:completionHandler:]
  -[PUSidebarViewController _backNavigationRootItemForItem:]
  -[PUSidebarViewController _triggerNavigationToDestination:animated:suspendSelections:completionHandler:]
  -[PUSidebarViewController suspendSelectionUpdatesMode]
  -[PUSidebarViewController setSuspendSelectionUpdatesMode:]
  -[PUSidebarViewController _highlightNavigationDestination:]
  -[PUSidebarViewController navigationRoot]
  -[PUSidebarViewController setReorderController:]
  -[PUSidebarViewController _deleteItemTapped:completion:]
  -[PUSidebarViewController _handleDidSelectListItem:completionHandler:]
  -[PUSidebarViewController setSelectingAlreadySelectedIndexPath:]
  -[PUSidebarViewController setCurrentNavigationDestination:]
  -[PUSidebarViewController navigateToFallbackForDestination:]
  -[PUSidebarViewController sidebarOutlineSectionController:willApplySnapshotWithChangedItemsAfterChange:applyBlock:]
  -[PUSidebarViewController splitViewControllerWillExpand:]
  -[PUSidebarViewController initWithNavigationRoot:photoLibrary:]
  -[PUSidebarViewController sidebarDataSectionEnablementController]


PUCMMActivityItemSource : PXObservable <PUActivityItemSourceOperationDelegate, PXChangeObserver, UIActivityItemsSource, UIActivityItemDeferredSource, UIActivityItemSource>
 @property  NSString *activityType
 @property  PUActivityItemSourceOperation *preparationOperation
 @property  NSURL *momentShareLink
 @property  NSArray *individuallyPreparedItems
 @property  NSError *preparationError
 @property  NSObject<OS_dispatch_queue> *externalIsolationQueue
 @property  PUActivityItemSourceController *itemSourceController
 @property  <PUCMMActivityItemSourceDelegate> *delegate
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCMMActivityItemSource setActivityType:]
  -[PUCMMActivityItemSource activityViewController:itemsForActivityType:]
  -[PUCMMActivityItemSource activityViewControllerOperation:]
  -[PUCMMActivityItemSource .cxx_destruct]
  -[PUCMMActivityItemSource activityType]
  -[PUCMMActivityItemSource initWithActivityItemSourceController:]
  -[PUCMMActivityItemSource activityViewController:itemForActivityType:]
  -[PUCMMActivityItemSource setDelegate:]
  -[PUCMMActivityItemSource setState:]
  -[PUCMMActivityItemSource activityItemSourceOperation:prepareItemForActivityType:]
  -[PUCMMActivityItemSource state]
  -[PUCMMActivityItemSource itemSourceController]
  -[PUCMMActivityItemSource cancel]
  -[PUCMMActivityItemSource delegate]
  -[PUCMMActivityItemSource activityViewControllerPlaceholderItem:]
  -[PUCMMActivityItemSource activityViewControllerPlaceholderItems:]
  -[PUCMMActivityItemSource observable:didChange:context:]
  -[PUCMMActivityItemSource individuallyPreparedItems]
  -[PUCMMActivityItemSource momentShareLink]
  -[PUCMMActivityItemSource placeholderItemsForActivityViewController:]
  -[PUCMMActivityItemSource preparedItems]
  -[PUCMMActivityItemSource setPreparationOperation:]
  -[PUCMMActivityItemSource externalIsolationQueue]
  -[PUCMMActivityItemSource setMomentShareLink:]
  -[PUCMMActivityItemSource setIndividuallyPreparedItems:]
  -[PUCMMActivityItemSource setPreparationError:]
  -[PUCMMActivityItemSource preparationError]
  -[PUCMMActivityItemSource preparationOperation]
  -[PUCMMActivityItemSource setExternalIsolationQueue:]


PULayerAnimationGroup : PUTimedAnimationGroup
 @property  CALayer *referenceLayer

  // instance methods
  -[PULayerAnimationGroup .cxx_destruct]
  -[PULayerAnimationGroup init]
  -[PULayerAnimationGroup initWithReferenceLayer:]
  -[PULayerAnimationGroup currentTime]
  -[PULayerAnimationGroup updateAnimations]
  -[PULayerAnimationGroup referenceLayer]


PULayoutAnimationsHelper : NSObject
 @property  PUSectionedGridLayout *layout
 @property  BOOL shouldAnimateTemporaryImageView

  // class methods
  +[PULayoutAnimationsHelper zoomTransitionAnimationPreferredDurationWhenZoomingIn:]
  +[PULayoutAnimationsHelper stackedTransitionAnimationsForReusableView:toLayoutAttributes:shouldUseSpringAnimations:]
  +[PULayoutAnimationsHelper stackedTransitionAnimationPreferredDurationUsingSpringAnimations:]

  // instance methods
  -[PULayoutAnimationsHelper .cxx_destruct]
  -[PULayoutAnimationsHelper layout]
  -[PULayoutAnimationsHelper _configureAnimationsForReusableView:toLayoutAttributes:withCompletionBlock:]
  -[PULayoutAnimationsHelper _createDefaultZoomingOutAnimationForKeyPath:ofReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _createDefaultZoomingInAnimationForKeyPath:ofReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _adjustCellAnimation:forReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _adjustSectionHeaderAnimation:forReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _adjustRenderedStripAnimation:forReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _adjustDecorationViewAnimation:forReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _defaultAnimationForKeyPath:ofReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper _adjustAnimation:forReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper shouldAnimateTemporaryImageView]
  -[PULayoutAnimationsHelper _applyDefaultLayoutAttributes:toView:]
  -[PULayoutAnimationsHelper initWithSectionedGridLayout:]
  -[PULayoutAnimationsHelper animationsForReusableView:toLayoutAttributes:]
  -[PULayoutAnimationsHelper didFinishLayoutTransitionAnimations:transitionIsAppearing:]
  -[PULayoutAnimationsHelper setShouldAnimateTemporaryImageView:]


PUPhotoEditToolPickerController : UIViewController
 @property  NSArray *toolButtonConstraints
 @property  UIView *selectionIndicatorView
 @property  NSArray *selectionIndicatorConstraints
 @property  double interToolSpacing
 @property  PUPhotoEditToolPickerSpec *toolPickerSpec
 @property  long long layoutDirection
 @property  long long style
 @property  NSArray *toolButtons
 @property  long long selectedToolTag
 @property  PUViewControllerSpec *parentSpec

  // instance methods
  -[PUPhotoEditToolPickerController updateViewConstraints]
  -[PUPhotoEditToolPickerController layoutDirection]
  -[PUPhotoEditToolPickerController setLayoutDirection:]
  -[PUPhotoEditToolPickerController selectionIndicatorView]
  -[PUPhotoEditToolPickerController .cxx_destruct]
  -[PUPhotoEditToolPickerController setStyle:]
  -[PUPhotoEditToolPickerController viewDidLoad]
  -[PUPhotoEditToolPickerController viewDidLayoutSubviews]
  -[PUPhotoEditToolPickerController loadView]
  -[PUPhotoEditToolPickerController style]
  -[PUPhotoEditToolPickerController toolButtonConstraints]
  -[PUPhotoEditToolPickerController setToolButtonConstraints:]
  -[PUPhotoEditToolPickerController toolButtons]
  -[PUPhotoEditToolPickerController toolPickerSpec]
  -[PUPhotoEditToolPickerController interToolSpacing]
  -[PUPhotoEditToolPickerController updateSelectionIndicatorConstraints]
  -[PUPhotoEditToolPickerController setSelectionIndicatorView:]
  -[PUPhotoEditToolPickerController selectionIndicatorConstraints]
  -[PUPhotoEditToolPickerController setSelectionIndicatorConstraints:]
  -[PUPhotoEditToolPickerController selectedToolTag]
  -[PUPhotoEditToolPickerController createSelectionIndicatorView]
  -[PUPhotoEditToolPickerController initWithLayoutDirection:style:]
  -[PUPhotoEditToolPickerController setToolButtons:]
  -[PUPhotoEditToolPickerController setSelectedToolTag:]
  -[PUPhotoEditToolPickerController setParentSpec:]
  -[PUPhotoEditToolPickerController parentSpec]
  -[PUPhotoEditToolPickerController setInterToolSpacing:]
  -[PUPhotoEditToolPickerController setToolPickerSpec:]


PUPhotoEditToolPickerSpec : PUViewControllerSpec
 @property  double toolParentViewEdgeSpacing
 @property  double interToolSpacing
 @property  double horizontalToolTopSpacing
 @property  double horizontalToolBottomSpacing
 @property  double dotSelectionIndicatorDistance
 @property  double dashSelectionIndicatorDistance

  // instance methods
  -[PUPhotoEditToolPickerSpec init]
  -[PUPhotoEditToolPickerSpec toolParentViewEdgeSpacing]
  -[PUPhotoEditToolPickerSpec interToolSpacing]
  -[PUPhotoEditToolPickerSpec dotSelectionIndicatorDistance]
  -[PUPhotoEditToolPickerSpec dashSelectionIndicatorDistance]
  -[PUPhotoEditToolPickerSpec setToolParentViewEdgeSpacing:]
  -[PUPhotoEditToolPickerSpec horizontalToolTopSpacing]
  -[PUPhotoEditToolPickerSpec setHorizontalToolTopSpacing:]
  -[PUPhotoEditToolPickerSpec horizontalToolBottomSpacing]
  -[PUPhotoEditToolPickerSpec setHorizontalToolBottomSpacing:]
  -[PUPhotoEditToolPickerSpec setDotSelectionIndicatorDistance:]
  -[PUPhotoEditToolPickerSpec setDashSelectionIndicatorDistance:]


PULayoutSectioning : NSObject
 @property  <PULayoutSectioningDelegate> *delegate
 @property  PULayoutSectioning *baseSectioning

  // instance methods
  -[PULayoutSectioning writeToURL:error:]
  -[PULayoutSectioning .cxx_destruct]
  -[PULayoutSectioning setDelegate:]
  -[PULayoutSectioning delegate]
  -[PULayoutSectioning dealloc]
  -[PULayoutSectioning visualSectionForRealSection:]
  -[PULayoutSectioning mainRealSectionForVisualSection:]
  -[PULayoutSectioning enumerateRealSectionsForVisualSection:usingBlock:]
  -[PULayoutSectioning numberOfVisualItemsInVisualSection:]
  -[PULayoutSectioning invalidateSampling]
  -[PULayoutSectioning invalidateSections]
  -[PULayoutSectioning _baseSectioningDidInvalidateSampling:]
  -[PULayoutSectioning _baseSectioningDidInvalidateSections:]
  -[PULayoutSectioning visualIndexPathForRealIndexPath:isMainItem:]
  -[PULayoutSectioning __debugUnsampledIndexForRealIndexPath:]
  -[PULayoutSectioning enumerateRealMainItemIndexPathsForVisualSection:inVisualItemRange:usingBlock:]
  -[PULayoutSectioning _sectioningDescriptionShowInvisibleItemsInBaseSectioning:hasIncorrectSampling:hasInvisibleItemsInBaseSectioning:]
  -[PULayoutSectioning sectioningHashHasIncorrectSampling:hasInvisibleItemsInBaseSectioning:]
  -[PULayoutSectioning numberOfRealItemsInVisualSection:]
  -[PULayoutSectioning hasSomeSampling]
  -[PULayoutSectioning setBaseSectioning:]
  -[PULayoutSectioning mainRealItemIndexPathForVisualIndexPath:]
  -[PULayoutSectioning visibleUnsampledIndexesForCombinedRealSections:]
  -[PULayoutSectioning sectioningDescription]
  -[PULayoutSectioning sectioningHash]
  -[PULayoutSectioning baseSectioning]


PULayoutSectionSampler : NSObject
  // instance methods
  -[PULayoutSectionSampler indexForUnsampledIndex:isMainItem:]
  -[PULayoutSectionSampler unsampledIndexForIndex:]
  -[PULayoutSectionSampler enumerateUnsampledIndexesForSampledIndexInRange:usingBlock:]
  -[PULayoutSectionSampler dumpInternalMemory]


PULayoutSectionSimpleSampler : PULayoutSectionSampler
  // instance methods
  -[PULayoutSectionSimpleSampler indexForUnsampledIndex:isMainItem:]
  -[PULayoutSectionSimpleSampler unsampledIndexForIndex:]
  -[PULayoutSectionSimpleSampler enumerateUnsampledIndexesForSampledIndexInRange:usingBlock:]
  -[PULayoutSectionSimpleSampler dumpInternalMemory]
  -[PULayoutSectionSimpleSampler initWithNumberOfVisibleItems:numberOfRealItems:]


PULayoutSectionListSampler : PULayoutSectionSampler
  // instance methods
  -[PULayoutSectionListSampler dealloc]
  -[PULayoutSectionListSampler indexForUnsampledIndex:isMainItem:]
  -[PULayoutSectionListSampler unsampledIndexForIndex:]
  -[PULayoutSectionListSampler enumerateUnsampledIndexesForSampledIndexInRange:usingBlock:]
  -[PULayoutSectionListSampler dumpInternalMemory]
  -[PULayoutSectionListSampler initWithNumberOfVisibleItems:numberOfRealItems:]
  -[PULayoutSectionListSampler visibleItemIndexes]


PULayoutSampledSectioning : PULayoutSectioning
 @property  BOOL supportsSamplingAndSectionGrouping

  // instance methods
  -[PULayoutSampledSectioning .cxx_destruct]
  -[PULayoutSampledSectioning init]
  -[PULayoutSampledSectioning dealloc]
  -[PULayoutSampledSectioning visualSectionForRealSection:]
  -[PULayoutSampledSectioning mainRealSectionForVisualSection:]
  -[PULayoutSampledSectioning enumerateRealSectionsForVisualSection:usingBlock:]
  -[PULayoutSampledSectioning numberOfVisualItemsInVisualSection:]
  -[PULayoutSampledSectioning invalidateSampling]
  -[PULayoutSampledSectioning invalidateSections]
  -[PULayoutSampledSectioning visualIndexPathForRealIndexPath:isMainItem:]
  -[PULayoutSampledSectioning __debugUnsampledIndexForRealIndexPath:]
  -[PULayoutSampledSectioning enumerateRealMainItemIndexPathsForVisualSection:inVisualItemRange:usingBlock:]
  -[PULayoutSampledSectioning numberOfRealItemsInVisualSection:]
  -[PULayoutSampledSectioning hasSomeSampling]
  -[PULayoutSampledSectioning mainRealItemIndexPathForVisualIndexPath:]
  -[PULayoutSampledSectioning visibleUnsampledIndexesForCombinedRealSections:]
  -[PULayoutSampledSectioning _discardSamplingCache]
  -[PULayoutSampledSectioning _discardSectioningCache]
  -[PULayoutSampledSectioning _cacheSectioningIfNeeded]
  -[PULayoutSampledSectioning _sectionSamplerForVisualSection:]
  -[PULayoutSampledSectioning _unsampledItemIndexForVisualItemIndex:visualSection:]
  -[PULayoutSampledSectioning _mainRealItemIndexPathForVisualSection:andUnsampledItemIndex:]
  -[PULayoutSampledSectioning _visualItemIndexForUnsampledItemIndex:visualSection:isMainItem:]
  -[PULayoutSampledSectioning setSupportsSamplingAndSectionGrouping:]
  -[PULayoutSampledSectioning supportsSamplingAndSectionGrouping]


PUPhotoEditBaseAdjustmentCell : UICollectionViewCell
 @property  PUPhotoEditAdjustmentControl *containerButton
 @property  double value
 @property  double defaultValue
 @property  double identityValue
 @property  double minValue
 @property  double maxValue
 @property  NSString *imageName
 @property  BOOL enabled
 @property  BOOL isUserModifying

  // instance methods
  -[PUPhotoEditBaseAdjustmentCell defaultValue]
  -[PUPhotoEditBaseAdjustmentCell initWithCoder:]
  -[PUPhotoEditBaseAdjustmentCell .cxx_destruct]
  -[PUPhotoEditBaseAdjustmentCell focusEffect]
  -[PUPhotoEditBaseAdjustmentCell setMaxValue:]
  -[PUPhotoEditBaseAdjustmentCell setMinValue:]
  -[PUPhotoEditBaseAdjustmentCell layoutSubviews]
  -[PUPhotoEditBaseAdjustmentCell minValue]
  -[PUPhotoEditBaseAdjustmentCell setSelected:]
  -[PUPhotoEditBaseAdjustmentCell maxValue]
  -[PUPhotoEditBaseAdjustmentCell setDefaultValue:]
  -[PUPhotoEditBaseAdjustmentCell prepareForReuse]
  -[PUPhotoEditBaseAdjustmentCell resetToDefault]
  -[PUPhotoEditBaseAdjustmentCell setValue:]
  -[PUPhotoEditBaseAdjustmentCell imageName]
  -[PUPhotoEditBaseAdjustmentCell isEnabled]
  -[PUPhotoEditBaseAdjustmentCell initWithFrame:]
  -[PUPhotoEditBaseAdjustmentCell value]
  -[PUPhotoEditBaseAdjustmentCell setImageName:]
  -[PUPhotoEditBaseAdjustmentCell identityValue]
  -[PUPhotoEditBaseAdjustmentCell setIsUserModifying:]
  -[PUPhotoEditBaseAdjustmentCell setIdentityValue:]
  -[PUPhotoEditBaseAdjustmentCell setEnabled:]
  -[PUPhotoEditBaseAdjustmentCell containerButton]
  -[PUPhotoEditBaseAdjustmentCell _setupContainerButton]
  -[PUPhotoEditBaseAdjustmentCell isUserModifying]
  -[PUPhotoEditBaseAdjustmentCell setContainerButton:]


PULegacyViewControllerSpec : NSObject
  // class methods
  +[PULegacyViewControllerSpec padSpec]
  +[PULegacyViewControllerSpec phoneSpec]
  +[PULegacyViewControllerSpec specForIdiom:]


PULivePhotoKeyFrameSelectionViewController : UIViewController
 @property  UIButton *makeKeyPhotoBtn
 @property  <PULivePhotoKeyFrameSelectionViewControllerDelegate> *delegate
 @property  NSString *selectionTitle

  // instance methods
  -[PULivePhotoKeyFrameSelectionViewController preferredContentSize]
  -[PULivePhotoKeyFrameSelectionViewController initWithCoder:]
  -[PULivePhotoKeyFrameSelectionViewController .cxx_destruct]
  -[PULivePhotoKeyFrameSelectionViewController selectionTitle]
  -[PULivePhotoKeyFrameSelectionViewController viewDidLoad]
  -[PULivePhotoKeyFrameSelectionViewController setDelegate:]
  -[PULivePhotoKeyFrameSelectionViewController initWithNibName:bundle:]
  -[PULivePhotoKeyFrameSelectionViewController delegate]
  -[PULivePhotoKeyFrameSelectionViewController setSelectionTitle:]
  -[PULivePhotoKeyFrameSelectionViewController tapMakeKeyPhoto:]
  -[PULivePhotoKeyFrameSelectionViewController setMakeKeyPhotoBtn:]
  -[PULivePhotoKeyFrameSelectionViewController _updateButtonTitle]
  -[PULivePhotoKeyFrameSelectionViewController makeKeyPhotoBtn]


PUPeopleTileCollectionViewFlowLayout : UICollectionViewFlowLayout
  // instance methods
  -[PUPeopleTileCollectionViewFlowLayout flipsHorizontallyInOppositeLayoutDirection]


PUPeopleTileViewController : PUTileViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, PUPeopleTileDelegate, PHPhotoLibraryChangeObserver>
 @property  UICollectionView *collectionView
 @property  CAGradientLayer *fadeLayer
 @property  UICollectionViewCellRegistration *cellRegistration
 @property  PHAsset *asset
 @property  NSArray *sortedPeople
 @property  PHFetchResult *unsortedFetchResult
 @property  <PUPeopleTileDelegate> *peopleDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPeopleTileViewController _sortedPersonsForFetchResult:]
  +[PUPeopleTileViewController _interItemSpacingForTraitCollection:]
  +[PUPeopleTileViewController _fetchUnsortedPeopleForAsset:]
  +[PUPeopleTileViewController tileSizeForTraitCollection:]

  // instance methods
  -[PUPeopleTileViewController collectionView:cellForItemAtIndexPath:]
  -[PUPeopleTileViewController collectionView:numberOfItemsInSection:]
  -[PUPeopleTileViewController applyLayoutInfo:]
  -[PUPeopleTileViewController becomeReusable]
  -[PUPeopleTileViewController collectionView:layout:sizeForItemAtIndexPath:]
  -[PUPeopleTileViewController collectionView:layout:minimumLineSpacingForSectionAtIndex:]
  -[PUPeopleTileViewController .cxx_destruct]
  -[PUPeopleTileViewController viewDidLoad]
  -[PUPeopleTileViewController setAsset:]
  -[PUPeopleTileViewController collectionView]
  -[PUPeopleTileViewController asset]
  -[PUPeopleTileViewController setCollectionView:]
  -[PUPeopleTileViewController initWithReuseIdentifier:]
  -[PUPeopleTileViewController cellRegistration]
  -[PUPeopleTileViewController fadeLayer]
  -[PUPeopleTileViewController photoLibraryDidChange:]
  -[PUPeopleTileViewController setCellRegistration:]
  -[PUPeopleTileViewController _peopleDidChange:]
  -[PUPeopleTileViewController setFadeLayer:]
  -[PUPeopleTileViewController setSortedPeople:]
  -[PUPeopleTileViewController setUnsortedFetchResult:]
  -[PUPeopleTileViewController _reloadEverythingForAsset:]
  -[PUPeopleTileViewController setPeopleDelegate:]
  -[PUPeopleTileViewController sortedPeople]
  -[PUPeopleTileViewController peopleDelegate]
  -[PUPeopleTileViewController pushPeopleViewController:]
  -[PUPeopleTileViewController presentPeopleViewController:]
  -[PUPeopleTileViewController _compare:to:ignoringIndices:]
  -[PUPeopleTileViewController unsortedFetchResult]
  -[PUPeopleTileViewController setDisplayAsset:]


PUPickerAssetPlaybackStyleFilter : NSObject <PUPickerFilter>
 @property  long long playbackStyle
 @property  BOOL isValidFilter
 @property  BOOL allowsSearch
 @property  BOOL allowsAlbums
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerAssetPlaybackStyleFilter supportsSecureCoding]

  // instance methods
  -[PUPickerAssetPlaybackStyleFilter initWithCoder:]
  -[PUPickerAssetPlaybackStyleFilter isEqual:]
  -[PUPickerAssetPlaybackStyleFilter isValidFilter]
  -[PUPickerAssetPlaybackStyleFilter playbackStyle]
  -[PUPickerAssetPlaybackStyleFilter copyWithZone:]
  -[PUPickerAssetPlaybackStyleFilter encodeWithCoder:]
  -[PUPickerAssetPlaybackStyleFilter initWithPlaybackStyle:]
  -[PUPickerAssetPlaybackStyleFilter allowsSearch]
  -[PUPickerAssetPlaybackStyleFilter allowsAlbums]
  -[PUPickerAssetPlaybackStyleFilter generatedAssetPredicate]
  -[PUPickerAssetPlaybackStyleFilter generatedPossibleAssetTypes]
  -[PUPickerAssetPlaybackStyleFilter generatedRequiredAssetTypes]


PUPickerAssetMediaTypeFilter : NSObject <PUPickerFilter>
 @property  long long mediaType
 @property  BOOL isValidFilter
 @property  BOOL allowsSearch
 @property  BOOL allowsAlbums
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerAssetMediaTypeFilter supportsSecureCoding]

  // instance methods
  -[PUPickerAssetMediaTypeFilter initWithCoder:]
  -[PUPickerAssetMediaTypeFilter initWithMediaType:]
  -[PUPickerAssetMediaTypeFilter isEqual:]
  -[PUPickerAssetMediaTypeFilter isValidFilter]
  -[PUPickerAssetMediaTypeFilter mediaType]
  -[PUPickerAssetMediaTypeFilter copyWithZone:]
  -[PUPickerAssetMediaTypeFilter encodeWithCoder:]
  -[PUPickerAssetMediaTypeFilter allowsSearch]
  -[PUPickerAssetMediaTypeFilter allowsAlbums]
  -[PUPickerAssetMediaTypeFilter generatedAssetPredicate]
  -[PUPickerAssetMediaTypeFilter generatedPossibleAssetTypes]
  -[PUPickerAssetMediaTypeFilter generatedRequiredAssetTypes]


PUPickerAssetMediaSubtypeFilter : NSObject <PUPickerFilter>
 @property  long long filterType
 @property  BOOL isValidFilter
 @property  BOOL allowsSearch
 @property  BOOL allowsAlbums
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerAssetMediaSubtypeFilter supportsSecureCoding]

  // instance methods
  -[PUPickerAssetMediaSubtypeFilter filterType]
  -[PUPickerAssetMediaSubtypeFilter initWithFilterType:]
  -[PUPickerAssetMediaSubtypeFilter initWithCoder:]
  -[PUPickerAssetMediaSubtypeFilter isEqual:]
  -[PUPickerAssetMediaSubtypeFilter isValidFilter]
  -[PUPickerAssetMediaSubtypeFilter copyWithZone:]
  -[PUPickerAssetMediaSubtypeFilter encodeWithCoder:]
  -[PUPickerAssetMediaSubtypeFilter allowsSearch]
  -[PUPickerAssetMediaSubtypeFilter allowsAlbums]
  -[PUPickerAssetMediaSubtypeFilter generatedAssetPredicate]
  -[PUPickerAssetMediaSubtypeFilter generatedPossibleAssetTypes]
  -[PUPickerAssetMediaSubtypeFilter generatedRequiredAssetTypes]


PUPickerCompoundFilter : NSObject <PUPickerFilter>
 @property  long long filterType
 @property  NSArray *subfilters
 @property  BOOL isValidFilter
 @property  BOOL allowsSearch
 @property  BOOL allowsAlbums
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPickerCompoundFilter supportsSecureCoding]

  // instance methods
  -[PUPickerCompoundFilter filterType]
  -[PUPickerCompoundFilter initWithCoder:]
  -[PUPickerCompoundFilter .cxx_destruct]
  -[PUPickerCompoundFilter isEqual:]
  -[PUPickerCompoundFilter isValidFilter]
  -[PUPickerCompoundFilter subfilters]
  -[PUPickerCompoundFilter copyWithZone:]
  -[PUPickerCompoundFilter encodeWithCoder:]
  -[PUPickerCompoundFilter initWithFilterType:subfilters:]
  -[PUPickerCompoundFilter allowsSearch]
  -[PUPickerCompoundFilter allowsAlbums]
  -[PUPickerCompoundFilter generatedAssetPredicate]
  -[PUPickerCompoundFilter generatedPossibleAssetTypes]
  -[PUPickerCompoundFilter generatedRequiredAssetTypes]


PULivePhotoEffectsToolController : PUPhotoEditToolController <UICollectionViewDelegate, UICollectionViewDataSource>
 @property  PULivePhotoToolControllerSpec *spec
 @property  NSArray *_options
 @property  UICollectionView *_collectionView
 @property  UICollectionViewFlowLayout *_collectionViewLayout
 @property  NSDictionary *_analysisResult
 @property  NSString *analysisResultCacheKey
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PULivePhotoEffectsToolController updateViewConstraints]
  -[PULivePhotoEffectsToolController collectionView:cellForItemAtIndexPath:]
  -[PULivePhotoEffectsToolController localizedName]
  -[PULivePhotoEffectsToolController collectionView:numberOfItemsInSection:]
  -[PULivePhotoEffectsToolController _collectionView]
  -[PULivePhotoEffectsToolController _options]
  -[PULivePhotoEffectsToolController numberOfSectionsInCollectionView:]
  -[PULivePhotoEffectsToolController collectionView:didSelectItemAtIndexPath:]
  -[PULivePhotoEffectsToolController .cxx_destruct]
  -[PULivePhotoEffectsToolController viewDidLoad]
  -[PULivePhotoEffectsToolController initWithNibName:bundle:]
  -[PULivePhotoEffectsToolController setLayoutOrientation:]
  -[PULivePhotoEffectsToolController _setOptions:]
  -[PULivePhotoEffectsToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PULivePhotoEffectsToolController viewDidLayoutSubviews]
  -[PULivePhotoEffectsToolController viewWillAppear:]
  -[PULivePhotoEffectsToolController _collectionViewLayout]
  -[PULivePhotoEffectsToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PULivePhotoEffectsToolController specDidChange]
  -[PULivePhotoEffectsToolController compositionControllerDidChangeForAdjustments:]
  -[PULivePhotoEffectsToolController toolControllerSpec]
  -[PULivePhotoEffectsToolController spec]
  -[PULivePhotoEffectsToolController _setCollectionView:]
  -[PULivePhotoEffectsToolController installTogglePreviewGestureRecognizer:]
  -[PULivePhotoEffectsToolController installLivePhotoPlaybackGestureRecognizer:]
  -[PULivePhotoEffectsToolController viewDidDisappear:]
  -[PULivePhotoEffectsToolController preferredPreviewViewInsets]
  -[PULivePhotoEffectsToolController _updateCollectionViewInsets]
  -[PULivePhotoEffectsToolController analysisResultCacheKey]
  -[PULivePhotoEffectsToolController _analysisResult]
  -[PULivePhotoEffectsToolController _updateCollectionView]
  -[PULivePhotoEffectsToolController _updateOptions]
  -[PULivePhotoEffectsToolController _setCollectionViewLayout:]
  -[PULivePhotoEffectsToolController _updateVisibleCells]
  -[PULivePhotoEffectsToolController contentRectInCoordinateSpace:]
  -[PULivePhotoEffectsToolController setAnalysisResultCacheKey:]
  -[PULivePhotoEffectsToolController _setAnalysisResult:]


PULivePhotoToolControllerSpec : PUPhotoEditToolControllerSpec
 @property  double thumbnailEdgeMaxLength
 @property  {CGSize=dd} thumbnailCellSize

  // instance methods
  -[PULivePhotoToolControllerSpec thumbnailCellSize]
  -[PULivePhotoToolControllerSpec configureThumbnailsCollectionLayout:]
  -[PULivePhotoToolControllerSpec thumbnailEdgeMaxLength]


PULoadingIndicatorController : NSObject
  // instance methods
  -[PULoadingIndicatorController loadingIndicatorStyleForAssetViewModel:]
  -[PULoadingIndicatorController shouldInvalidateLoadingIndicatorForAssetViewModelChange:]


PULoadingIndicatorTileViewController : PUTileViewController
 @property  PUProgressIndicatorView *indicatorView
 @property  long long style

  // class methods
  +[PULoadingIndicatorTileViewController _createIndicatorViewForStyle:]
  +[PULoadingIndicatorTileViewController _destroyIndicatorView:]
  +[PULoadingIndicatorTileViewController loadingIndicatorTileSizeForStyle:]

  // instance methods
  -[PULoadingIndicatorTileViewController becomeReusable]
  -[PULoadingIndicatorTileViewController setStyle:animated:]
  -[PULoadingIndicatorTileViewController .cxx_destruct]
  -[PULoadingIndicatorTileViewController setStyle:]
  -[PULoadingIndicatorTileViewController indicatorView]
  -[PULoadingIndicatorTileViewController setIndicatorView:]
  -[PULoadingIndicatorTileViewController style]


PULoadingStatusManager : NSObject
 @property  BOOL _isUpdateScheduled
 @property  NSMutableSet *_invalidLoadingStatusItems
 @property  NSMapTable *_loadOperationTrackingIDsByItem
 @property  NSMapTable *_loadingStatusByItem
 @property  NSMutableDictionary *_itemByLoadOperationTrackingID
 @property  NSMutableDictionary *_loadingStatusByLoadOperationTrackingID
 @property  <PULoadingStatusManagerDelegate> *delegate

  // instance methods
  -[PULoadingStatusManager _updateIfNeeded]
  -[PULoadingStatusManager _invalidateLoadingStatusForItem:]
  -[PULoadingStatusManager _setNeedsUpdate]
  -[PULoadingStatusManager .cxx_destruct]
  -[PULoadingStatusManager _invalidLoadingStatusItems]
  -[PULoadingStatusManager didCompleteLoadOperationWithTrackingID:withSuccess:error:]
  -[PULoadingStatusManager loadingStatusForItem:]
  -[PULoadingStatusManager setDelegate:]
  -[PULoadingStatusManager _updateNowIfNeeded]
  -[PULoadingStatusManager _setLoadingStatus:forItem:]
  -[PULoadingStatusManager init]
  -[PULoadingStatusManager _updateLoadingStatusForItem:]
  -[PULoadingStatusManager willBeginLoadOperationWithItem:]
  -[PULoadingStatusManager _updateLoadingStatusForItemIfNeeded:]
  -[PULoadingStatusManager _setLoadingStatus:forLoadOperationTrackingID:]
  -[PULoadingStatusManager _needsUpdate]
  -[PULoadingStatusManager didUpdateLoadOperationWithTrackingID:withProgress:]
  -[PULoadingStatusManager didCancelLoadOperationWithTrackingID:]
  -[PULoadingStatusManager _updateLoadingStatusForItemsIfNeeded]
  -[PULoadingStatusManager _isUpdateScheduled]
  -[PULoadingStatusManager delegate]
  -[PULoadingStatusManager _itemByLoadOperationTrackingID]
  -[PULoadingStatusManager _loadingStatusByItem]
  -[PULoadingStatusManager _resetLoadingStatusForItemIfAppropriate:]
  -[PULoadingStatusManager _loadOperationTrackingIDsByItem]
  -[PULoadingStatusManager _loadingStatusByLoadOperationTrackingID]
  -[PULoadingStatusManager _setUpdateScheduled:]


PUMailActivity : UIMailActivity <MFMailComposeViewControllerDelegate, PLVideoRemakerDelegate, PXMomentShareSuggestionHandlingActivity>
 @property  BOOL _remakerWasCancelled
 @property  NSString *transcodedVideoFilePath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PXActivityItemSourceController> *itemSourceController

  // class methods
  +[PUMailActivity isMailDropEnabled]
  +[PUMailActivity canPerformActivityAsIndividualItemsInSourceController:]
  +[PUMailActivity _momentShareLinkPrompt]
  +[PUMailActivity _momentShareLinkTitleForMomentShare:]
  +[PUMailActivity _expirationStringForMomentShare:]
  +[PUMailActivity canPerformActivityWithTotalCount:assetMediaTypeCount:]
  +[PUMailActivity allowedToModifyEmailAccounts]
  +[PUMailActivity _momentShareLinkActivityItemsForURL:momentShare:]
  +[PUMailActivity _momentShareLinkSubjectForMomentShare:]
  +[PUMailActivity openEmailAccountPrefs]

  // instance methods
  -[PUMailActivity activityViewController]
  -[PUMailActivity .cxx_destruct]
  -[PUMailActivity _isMailDropEnabled]
  -[PUMailActivity activityDidFinish:]
  -[PUMailActivity canPerformWithActivityItems:]
  -[PUMailActivity performActivity]
  -[PUMailActivity editVideoViewControllerDidCancel:]
  -[PUMailActivity init]
  -[PUMailActivity editVideoViewController:didTrimVideoWithOptions:]
  -[PUMailActivity cancelRemaking]
  -[PUMailActivity mailComposeViewController]
  -[PUMailActivity prepareWithActivityItems:]
  -[PUMailActivity _presentActivityOnViewController:animated:completion:]
  -[PUMailActivity _dismissActivityFromViewController:animated:completion:]
  -[PUMailActivity mailComposeController:didFinishWithResult:error:]
  -[PUMailActivity itemSourceController]
  -[PUMailActivity dealloc]
  -[PUMailActivity setItemSourceController:]
  -[PUMailActivity _cleanupRemaker]
  -[PUMailActivity _removeTempVideoRemakerFile]
  -[PUMailActivity _pu_cleanup]
  -[PUMailActivity _showTrimViewControllerForVideo:maximumTrimDuration:trimButtonTitle:]
  -[PUMailActivity _composeMailForVideo:trimmedFilePath:]
  -[PUMailActivity remakeVideoAsset:withTrimStartTime:endTime:progressHandler:completionHandler:]
  -[PUMailActivity _setRemakerWasCancelled:]
  -[PUMailActivity _showTrimViewControllerIfNeededForVideoAsset:]
  -[PUMailActivity _remakeAndSendVideoAsset:withTrimStartTime:endTime:]
  -[PUMailActivity transcodedVideoFilePath]
  -[PUMailActivity setTranscodedVideoFilePath:]
  -[PUMailActivity _remakerWasCancelled]
  -[PUMailActivity _canPerformWithLink]
  -[PUMailActivity _canPerformForIndividualAssetsWithActivityItems:]
  -[PUMailActivity _prepareWithMomentShareLink:]
  -[PUMailActivity _momentShareLinkDidFail]
  -[PUMailActivity _transcodeAndSendVideo:]
  -[PUMailActivity videoRemakerDidBeginRemaking:]
  -[PUMailActivity videoRemakerDidEndRemaking:temporaryPath:]


PUMediaDestination : NSObject
  // instance methods
  -[PUMediaDestination cancelRequestWithIdentifier:]
  -[PUMediaDestination saveInternalEditsForAsset:usingCompositionController:contentEditingOutput:version:livePhotoEditModel:originalComposition:useRawIfAvailable:completionHandler:]
  -[PUMediaDestination saveEditsForAsset:usingContentEditingOutput:livePhotoEditModel:useRawIfAvailable:completionHandler:]
  -[PUMediaDestination saveEditsByCopyingAsset:withResourceURL:usingContentEditingOutput:livePhotoEditModel:completionHandler:]
  -[PUMediaDestination saveInternalEditsForAsset:usingCompositionController:contentEditingOutput:version:livePhotoEditModel:useRawIfAvailable:completionHandler:]
  -[PUMediaDestination revertEditsForAsset:completionHandler:]
  -[PUMediaDestination isSavingRequestWithIdentifier:]
  -[PUMediaDestination ensureEditableCopyOfAsset:completionHandler:]
  -[PUMediaDestination supportsProgressForRequestWithIdentifier:]
  -[PUMediaDestination progressForRequestWithIdentifier:]


PUMediaProvider : NSObject
 @property  PULoadingStatusManager *loadingStatusManager

  // instance methods
  -[PUMediaProvider cancelImageRequest:]
  -[PUMediaProvider .cxx_destruct]
  -[PUMediaProvider loadingStatusManager]
  -[PUMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUMediaProvider setLoadingStatusManager:]
  -[PUMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUMediaProvider requestAnimatedImageForAsset:options:resultHandler:]


PUAssetPickerHeaderView : UICollectionReusableView
 @property  UILabel *label

  // instance methods
  -[PUAssetPickerHeaderView label]
  -[PUAssetPickerHeaderView .cxx_destruct]
  -[PUAssetPickerHeaderView initWithFrame:]
  -[PUAssetPickerHeaderView setLabel:]


PUMedusaSettings : PXSettings
 @property  double _desiredWidth
 @property  double _widthDelay
 @property  double _testStartDelay
 @property  double _testInterval
 @property  double _testIncrement

  // class methods
  +[PUMedusaSettings sharedInstance]
  +[PUMedusaSettings settingsControllerModule]
  +[PUMedusaSettings runSizeTest]

  // instance methods
  -[PUMedusaSettings _desiredWidth]
  -[PUMedusaSettings set_testStartDelay:]
  -[PUMedusaSettings parentSettings]
  -[PUMedusaSettings _testIncrement]
  -[PUMedusaSettings set_widthDelay:]
  -[PUMedusaSettings _testInterval]
  -[PUMedusaSettings set_testIncrement:]
  -[PUMedusaSettings set_desiredWidth:]
  -[PUMedusaSettings _testStartDelay]
  -[PUMedusaSettings set_testInterval:]
  -[PUMedusaSettings _widthDelay]


PUMessageActivity : UIMessageActivity <PXMomentShareSuggestionHandlingActivity>
 @property  <PXActivityItemSourceController> *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUMessageActivity canPerformActivityAsIndividualItemsInSourceController:]

  // instance methods
  -[PUMessageActivity activityViewController]
  -[PUMessageActivity .cxx_destruct]
  -[PUMessageActivity canPerformWithActivityItems:]
  -[PUMessageActivity performActivity]
  -[PUMessageActivity prepareWithActivityItems:]
  -[PUMessageActivity itemSourceController]
  -[PUMessageActivity setItemSourceController:]
  -[PUMessageActivity _prepareWithMomentShareLink:]


PUCollectionListActionPerformer : PXCollectionListActionPerformer <PUAlbumStreamActivityDelegate>
 @property  UIAlertAction *createAlbumAlertAction
 @property  PUAlbumStreamActivity *_albumStreamActivity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCollectionListActionPerformer .cxx_destruct]
  -[PUCollectionListActionPerformer _validateNewCollectionTitle:]
  -[PUCollectionListActionPerformer _setCreateAlbumAlertAction:]
  -[PUCollectionListActionPerformer _updateCreateAlbumTextField:]
  -[PUCollectionListActionPerformer albumStreamActivity:didFinishSuccessfully:]
  -[PUCollectionListActionPerformer albumStreamActivity:presentViewController:]
  -[PUCollectionListActionPerformer albumStreamActivity:dismissViewController:completion:]
  -[PUCollectionListActionPerformer _albumStreamActivity]
  -[PUCollectionListActionPerformer presentImagePickerWithAlbumName:completionHandler:]
  -[PUCollectionListActionPerformer createAlbumAlertAction]
  -[PUCollectionListActionPerformer set_albumStreamActivity:]
  -[PUCollectionListActionPerformer presentSetupUIForAlbumCreationWithCompletionHandler:]
  -[PUCollectionListActionPerformer handleCreateSharedAlbum]


PUSuggestLessPersonActivity : PXActivity
  // class methods
  +[PUSuggestLessPersonActivity activityCategory]
  +[PUSuggestLessPersonActivity _activityStyle]

  // instance methods
  -[PUSuggestLessPersonActivity .cxx_destruct]
  -[PUSuggestLessPersonActivity _systemImageName]
  -[PUSuggestLessPersonActivity activityType]
  -[PUSuggestLessPersonActivity canPerformWithActivityItems:]
  -[PUSuggestLessPersonActivity performActivity]
  -[PUSuggestLessPersonActivity activityTitle]
  -[PUSuggestLessPersonActivity _facesInCurrentAsset]
  -[PUSuggestLessPersonActivity _personFromFace:]


PUModalTransition : PUViewControllerTransition <UIViewControllerTransitioningDelegate>
 @property  long long _operation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUModalTransition animationControllerForPresentedController:presentingController:sourceController:]
  -[PUModalTransition animationControllerForDismissedController:]
  -[PUModalTransition _operation]
  -[PUModalTransition interactionControllerForDismissal:]
  -[PUModalTransition cancelInteractiveTransition]
  -[PUModalTransition animateTransition:]
  -[PUModalTransition finishInteractiveTransition]
  -[PUModalTransition presentingViewController]
  -[PUModalTransition interactionControllerForPresentation:]
  -[PUModalTransition imageModulationIntensityDidChange]
  -[PUModalTransition completeInteractivePresentTransitionFinished:]
  -[PUModalTransition completeInteractiveDismissTransitionFinished:]
  -[PUModalTransition _setOperation:]
  -[PUModalTransition transitionWillPresentInteractively:]
  -[PUModalTransition transitionWillDismissInteractively:]


PUModelTileTransform : NSObject <NSCopying>
 @property  BOOL hasUserInput
 @property  double scale
 @property  {CGPoint=dd} normalizedTranslation
 @property  {CGPoint=dd} overscroll
 @property  NSString *userInputOriginIdentifier
 @property  BOOL hasUserZoomedOut
 @property  BOOL hasUserZoomedIn

  // instance methods
  -[PUModelTileTransform hasUserZoomedOut]
  -[PUModelTileTransform .cxx_destruct]
  -[PUModelTileTransform init]
  -[PUModelTileTransform hasUserZoomedIn]
  -[PUModelTileTransform isEqual:]
  -[PUModelTileTransform initWithNormalizedTranslation:overscroll:scale:userInputOriginIdentifier:]
  -[PUModelTileTransform userInputOriginIdentifier]
  -[PUModelTileTransform hasUserInput]
  -[PUModelTileTransform normalizedTranslation]
  -[PUModelTileTransform overscroll]
  -[PUModelTileTransform initWithNoUserInput]
  -[PUModelTileTransform copyWithZone:]
  -[PUModelTileTransform scale]


PUMomentsSettings : PXSettings
  // class methods
  +[PUMomentsSettings sharedInstance]
  +[PUMomentsSettings settingsControllerModule]
  +[PUMomentsSettings _rebuildMoments]

  // instance methods
  -[PUMomentsSettings parentSettings]


PUMomentsZoomLevelManager : NSObject <PXPhotosDataSourceChangeObserver>
 @property  PUZoomableGridViewControllerSpec *zoomableGridSpec
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long lowestZoomLevel
 @property  unsigned long highestZoomLevel
 @property  unsigned long preferredDefaultZoomLevel
 @property  PUCollectionViewIntermediateDataSource *sharedIntermediateDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUMomentsZoomLevelManager setSessionInfo:]
  -[PUMomentsZoomLevelManager initWithSpec:]
  -[PUMomentsZoomLevelManager sessionInfo]
  -[PUMomentsZoomLevelManager zoomLevelInfo:didInvalidateLayoutWithContext:]
  -[PUMomentsZoomLevelManager zoomableGridSpec]
  -[PUMomentsZoomLevelManager jumpToZoomLevel:inNavigationController:usingTopControllerConfigurationBlock:]
  -[PUMomentsZoomLevelManager _updateSummarizeSectionsOnZoomLevelInfos]
  -[PUMomentsZoomLevelManager .cxx_destruct]
  -[PUMomentsZoomLevelManager zoomLevelBelowZoomLevel:]
  -[PUMomentsZoomLevelManager preferredDefaultZoomLevel]
  -[PUMomentsZoomLevelManager zoomLevel:isHigherThanZoomLevel:]
  -[PUMomentsZoomLevelManager lowestZoomLevel]
  -[PUMomentsZoomLevelManager zoomLevelInfoForZoomLevel:]
  -[PUMomentsZoomLevelManager sharedIntermediateDataSource]
  -[PUMomentsZoomLevelManager updateZoomableGridSpecForTraitCollection:referenceSize:]
  -[PUMomentsZoomLevelManager newViewControllerForZoomLevel:]
  -[PUMomentsZoomLevelManager dealloc]
  -[PUMomentsZoomLevelManager momentsDataSource]
  -[PUMomentsZoomLevelManager markZoomInfosInvalidWithWidth:]
  -[PUMomentsZoomLevelManager existingViewControllerForZoomLevel:inNavigationController:]
  -[PUMomentsZoomLevelManager highestZoomLevel]
  -[PUMomentsZoomLevelManager zoomLevelAboveZoomLevel:]
  -[PUMomentsZoomLevelManager _defaultsDidChange:]
  -[PUMomentsZoomLevelManager photosDataSource:didReceivePhotoLibraryChange:]


PUNavigationController : UINavigationController <PXForcedDismissableViewController, UINavigationControllerDelegate>
 @property  PUAbstractNavigationBanner *_banner
 @property  _UINavigationControllerPalette *_palette
 @property  UIKeyCommand *_alternateBackKeyCommand
 @property  BOOL _navigating
 @property  unsigned long pu_supportedInterfaceOrientations
 @property  BOOL pu_preventsAutorotation
 @property  long long _barStyle
 @property  UIViewController *_currentToolbarViewController
 @property  BOOL pu_alwaysForwardsPreferredStatusBarStyle
 @property  BOOL pu_alwaysForwardsPrefersStatusBarHidden
 @property  @? ppt_onDidShowViewControllerBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUNavigationController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[PUNavigationController _setPalette:]
  -[PUNavigationController shouldAutorotateToInterfaceOrientation:]
  -[PUNavigationController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUNavigationController _canUseAlternateBackKeyCommandToTriggerSidebarKeyCommandWithSender:]
  -[PUNavigationController _setAlternateBackKeyCommand:]
  -[PUNavigationController childViewControllerForStatusBarHidden]
  -[PUNavigationController _barStyle]
  -[PUNavigationController childViewControllerForStatusBarStyle]
  -[PUNavigationController viewController:willSetupInitialBarsVisibilityOnViewWillAppearAnimated:]
  -[PUNavigationController _setCurrentToolbarViewController:animated:]
  -[PUNavigationController _currentToolbarViewController]
  -[PUNavigationController navigationController:didShowViewController:animated:]
  -[PUNavigationController pu_setAlwaysForwardsPreferredStatusBarStyle:]
  -[PUNavigationController .cxx_destruct]
  -[PUNavigationController _updateBarStyle]
  -[PUNavigationController pu_setSupportedInterfaceOrientations:]
  -[PUNavigationController _extendedToolbar]
  -[PUNavigationController _navigationControllerShouldUseBuiltinInteractionController:]
  -[PUNavigationController pu_setPreventsAutorotation:]
  -[PUNavigationController _setCurrentToolbarViewController:]
  -[PUNavigationController _setBarStyle:]
  -[PUNavigationController initWithNibName:bundle:]
  -[PUNavigationController navigationController:animationControllerForOperation:fromViewController:toViewController:]
  -[PUNavigationController navigationController:interactionControllerForAnimationController:]
  -[PUNavigationController shouldAutorotate]
  -[PUNavigationController _isNavigating]
  -[PUNavigationController ppt_onDidShowViewControllerBlock]
  -[PUNavigationController pu_setAlwaysForwardsPreferredStatusBarHidden:]
  -[PUNavigationController initWithNavigationBarClass:toolbarClass:]
  -[PUNavigationController pushViewController:animated:]
  -[PUNavigationController pu_preventsAutorotation]
  -[PUNavigationController initWithRootViewController:]
  -[PUNavigationController _commonPUNavigationControllerInitialization]
  -[PUNavigationController _palette]
  -[PUNavigationController ppt_setOnDidShowViewControllerBlock:]
  -[PUNavigationController _setBanner:]
  -[PUNavigationController canPerformAction:withSender:]
  -[PUNavigationController _setShouldOptOutChromelessBars:]
  -[PUNavigationController _banner]
  -[PUNavigationController _updateStatusBarOverrides]
  -[PUNavigationController pu_alwaysForwardsPrefersStatusBarHidden]
  -[PUNavigationController pu_navigationTransitionDidEnd:]
  -[PUNavigationController pu_alwaysForwardsPreferredStatusBarStyle]
  -[PUNavigationController _alternateBackKeyCommand]
  -[PUNavigationController _shouldOptOutFromChromelessBars]
  -[PUNavigationController _updateChromelessBarsIsBeforeTransition:]
  -[PUNavigationController _canPerformAlternateBackKeyCommandToPopViewController]
  -[PUNavigationController _setNavigating:]
  -[PUNavigationController pu_supportedInterfaceOrientations]
  -[PUNavigationController loadView]
  -[PUNavigationController supportedInterfaceOrientations]
  -[PUNavigationController _performAlternateBackKeyCommand:]
  -[PUNavigationController prepareForDismissingForced:]
  -[PUNavigationController navigationController:willShowViewController:animated:]
  -[PUNavigationController _canShowWhileLocked]


PUNavigationTransition : PUViewControllerTransition
 @property  long long _operation
 @property  UINavigationController *navigationController
 @property  BOOL wasStatusBarHiddenBeforeTransition
 @property  UIViewController *expectedDestinationOnPop
 @property  double pushDuration
 @property  double popDuration

  // class methods
  +[PUNavigationTransition animationControllerForOperation:fromViewController:toViewController:inNavigationController:]
  +[PUNavigationTransition shouldCrossFadeBottomBarsForNavigationController:]

  // instance methods
  -[PUNavigationTransition initWithDuration:]
  -[PUNavigationTransition _operation]
  -[PUNavigationTransition completeTransition:]
  -[PUNavigationTransition transitionDuration:]
  -[PUNavigationTransition .cxx_destruct]
  -[PUNavigationTransition cancelInteractiveTransition]
  -[PUNavigationTransition animateTransition:]
  -[PUNavigationTransition pushDuration]
  -[PUNavigationTransition finishInteractiveTransition]
  -[PUNavigationTransition setNavigationController:]
  -[PUNavigationTransition navigationController]
  -[PUNavigationTransition imageModulationIntensityDidChange]
  -[PUNavigationTransition _setOperation:]
  -[PUNavigationTransition initWithPushDuration:popDuration:]
  -[PUNavigationTransition expectedDestinationOnPop]
  -[PUNavigationTransition setExpectedDestinationOnPop:]
  -[PUNavigationTransition transitionWillAnimateOperation:interactive:]
  -[PUNavigationTransition completeInteractiveOperation:finished:]
  -[PUNavigationTransition didCompleteTransitionAnimation]
  -[PUNavigationTransition popDuration]
  -[PUNavigationTransition setWasStatusBarHiddenBeforeTransition:]
  -[PUNavigationTransition transitionWillStartOperation:animated:interactive:]
  -[PUNavigationTransition transitionDidStartOperation:animated:interactive:]
  -[PUNavigationTransition wasStatusBarHiddenBeforeTransition]


PUNotThisPersonActivity : PXActivity
  // class methods
  +[PUNotThisPersonActivity activityCategory]
  +[PUNotThisPersonActivity _activityStyle]

  // instance methods
  -[PUNotThisPersonActivity _systemImageName]
  -[PUNotThisPersonActivity activityType]
  -[PUNotThisPersonActivity canPerformWithActivityItems:]
  -[PUNotThisPersonActivity performActivity]
  -[PUNotThisPersonActivity activityTitle]


PUCurationTripKeyAssetBrowserDebugViewController : PUPhotosAlbumViewController
 @property  PHPhotosHighlight *tripHighlight

  // instance methods
  -[PUCurationTripKeyAssetBrowserDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationTripKeyAssetBrowserDebugViewController .cxx_destruct]
  -[PUCurationTripKeyAssetBrowserDebugViewController viewDidLoad]
  -[PUCurationTripKeyAssetBrowserDebugViewController _update]
  -[PUCurationTripKeyAssetBrowserDebugViewController updateSpec]
  -[PUCurationTripKeyAssetBrowserDebugViewController setTripHighlight:]
  -[PUCurationTripKeyAssetBrowserDebugViewController tripHighlight]


PUCurationTripKeyAssetBrowserDebugPhotosGridCell : PUPhotosGridCell
 @property  double curationScore
 @property  double aestheticScore
 @property  double promotionScore
 @property  UIColor *color
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setTitle:]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell color]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell .cxx_destruct]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell layoutSubviews]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setSubtitle:]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell curationScore]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setColor:]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setPromotionScore:]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell subtitle]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell promotionScore]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell aestheticScore]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setAestheticScore:]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell title]
  -[PUCurationTripKeyAssetBrowserDebugPhotosGridCell setCurationScore:]


PUObserverRegistry : NSObject
 @property  NSPointerArray *_observers
 @property  NSObject<OS_dispatch_queue> *_observerQueue

  // instance methods
  -[PUObserverRegistry enumerateObserversWithBlock:]
  -[PUObserverRegistry _observers]
  -[PUObserverRegistry unregisterObserver:]
  -[PUObserverRegistry registerObserver:]
  -[PUObserverRegistry .cxx_destruct]
  -[PUObserverRegistry init]
  -[PUObserverRegistry _observerQueue]


PUOneUpAccessoryViewControllersManager : NSObject <PUBrowsingViewModelChangeObserver, PXPhotosDetailsUIViewControllerDelegate>
 @property  NSMapTable *_accessoryViewControllers
 @property  PUOneUpViewControllerSpec *_spec
 @property  PUBrowsingSession *browsingSession
 @property  <PUOneUpAccessoryViewControllersManagerDelegate> *delegate
 @property  @? unlockDeviceStatus
 @property  @? unlockDeviceHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpAccessoryViewControllersManager unlockDeviceStatus]
  -[PUOneUpAccessoryViewControllersManager browsingSession]
  -[PUOneUpAccessoryViewControllersManager unlockDeviceHandler]
  -[PUOneUpAccessoryViewControllersManager setUnlockDeviceStatus:]
  -[PUOneUpAccessoryViewControllersManager setUnlockDeviceHandler:]
  -[PUOneUpAccessoryViewControllersManager _accessoryViewControllers]
  -[PUOneUpAccessoryViewControllersManager shouldHideStatusBarWhenShowingAccessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager .cxx_destruct]
  -[PUOneUpAccessoryViewControllersManager createAccessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager _accessoryViewTypeForAsset:]
  -[PUOneUpAccessoryViewControllersManager setDelegate:]
  -[PUOneUpAccessoryViewControllersManager viewModel:didChange:]
  -[PUOneUpAccessoryViewControllersManager shouldHideNavigationBarWhenShowingAccessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager init]
  -[PUOneUpAccessoryViewControllersManager accessoryViewControllerForAssetReference:createIfNeeded:]
  -[PUOneUpAccessoryViewControllersManager _spec]
  -[PUOneUpAccessoryViewControllersManager photosDetailsUIViewControllerRequestDismissal:]
  -[PUOneUpAccessoryViewControllersManager assetReferenceForAccessoryViewController:]
  -[PUOneUpAccessoryViewControllersManager _isPhoneAndLandscape]
  -[PUOneUpAccessoryViewControllersManager delegate]
  -[PUOneUpAccessoryViewControllersManager photosDetailsUIViewControllerCompositionDidChange:]
  -[PUOneUpAccessoryViewControllersManager shouldHideToolbarWhenShowingAccessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager _invalidateAccessoryViewControllersForAssetReferences:]
  -[PUOneUpAccessoryViewControllersManager accessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager initWithBrowsingSession:spec:]
  -[PUOneUpAccessoryViewControllersManager _createAccessoryViewControllerForAssetReference:]
  -[PUOneUpAccessoryViewControllersManager accessoryViewTypeForAsset:]


PUOneUpAssetNavigationTransition : PUNavigationTransition <PUOneUpAssetTransition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpAssetNavigationTransition _animateTransitionWithOperation:]
  -[PUOneUpAssetNavigationTransition animatePushTransition]
  -[PUOneUpAssetNavigationTransition init]
  -[PUOneUpAssetNavigationTransition animatePopTransition]
  -[PUOneUpAssetNavigationTransition _prepareViewForTransition]


PUOneUpAssetTransitionContext : NSObject
 @property  UIView *containerView
 @property  UIView *fromView
 @property  UIView *snapshotView
 @property  BOOL shouldHideBackground
 @property  PUAssetTransitionInfo *transitionInfo
 @property  PUAssetTransitionInfo *trailingAssetTransitionInfo
 @property  PUAssetTransitionInfo *leadingAssetTransitionInfo
 @property  @? animationBlock

  // class methods
  +[PUOneUpAssetTransitionContext oneUpAssetTransitionContextWithContainerView:fromView:snapshotView:transitionInfo:]
  +[PUOneUpAssetTransitionContext oneUpAssetTransitionContextWithContainerView:fromView:snapshotView:transitionInfo:trailingAssetTransitionInfo:leadingAssetTransitionInfo:]

  // instance methods
  -[PUOneUpAssetTransitionContext animationBlock]
  -[PUOneUpAssetTransitionContext fromView]
  -[PUOneUpAssetTransitionContext containerView]
  -[PUOneUpAssetTransitionContext snapshotView]
  -[PUOneUpAssetTransitionContext .cxx_destruct]
  -[PUOneUpAssetTransitionContext _setSnapshotView:]
  -[PUOneUpAssetTransitionContext _setFromView:]
  -[PUOneUpAssetTransitionContext _setContainerView:]
  -[PUOneUpAssetTransitionContext oneUpTransitionContextWithContextShouldHideBackground:]
  -[PUOneUpAssetTransitionContext transitionInfo]
  -[PUOneUpAssetTransitionContext trailingAssetTransitionInfo]
  -[PUOneUpAssetTransitionContext leadingAssetTransitionInfo]
  -[PUOneUpAssetTransitionContext oneUpTransitionContextWithContextWithContainerView:]
  -[PUOneUpAssetTransitionContext _setTransitionInfo:]
  -[PUOneUpAssetTransitionContext _setTrailingAssetTransitionInfo:]
  -[PUOneUpAssetTransitionContext _setLeadingAssetTransitionInfo:]
  -[PUOneUpAssetTransitionContext _setShouldHideBackground:]
  -[PUOneUpAssetTransitionContext _setAnimationBlock:]
  -[PUOneUpAssetTransitionContext oneUpTransitionContextWithAnimationBlock:]
  -[PUOneUpAssetTransitionContext shouldHideBackground]


PUAssetTransitionInfo : NSObject <PUAssetTransitionInfoConfiguration>
 @property  UIView *snapshotView
 @property  UIImage *image
 @property  {?=qiIq} seekTime
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  BOOL allowAutoPlay
 @property  double cornerRadius
 @property  <PUDisplayAsset> *asset
 @property  NSArray *badgeTransitionInfos
 @property  PUPhotoViewContentHelper *contentHelper
 @property  PXImageLayerModulator *imageLayerModulator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAssetTransitionInfo assetTransitionInfoWithConfigurationBlock:]

  // instance methods
  -[PUAssetTransitionInfo setImageLayerModulator:]
  -[PUAssetTransitionInfo imageLayerModulator]
  -[PUAssetTransitionInfo image]
  -[PUAssetTransitionInfo snapshotView]
  -[PUAssetTransitionInfo seekTime]
  -[PUAssetTransitionInfo .cxx_destruct]
  -[PUAssetTransitionInfo setFrame:]
  -[PUAssetTransitionInfo setAsset:]
  -[PUAssetTransitionInfo init]
  -[PUAssetTransitionInfo asset]
  -[PUAssetTransitionInfo setCornerRadius:]
  -[PUAssetTransitionInfo contentHelper]
  -[PUAssetTransitionInfo cornerRadius]
  -[PUAssetTransitionInfo frame]
  -[PUAssetTransitionInfo setImage:]
  -[PUAssetTransitionInfo setSeekTime:]
  -[PUAssetTransitionInfo setSnapshotView:]
  -[PUAssetTransitionInfo badgeTransitionInfos]
  -[PUAssetTransitionInfo allowAutoPlay]
  -[PUAssetTransitionInfo setAllowAutoPlay:]
  -[PUAssetTransitionInfo setBadgeTransitionInfos:]
  -[PUAssetTransitionInfo setContentHelper:]


PUOneUpAssetsDataSourceConverter : PUAssetsDataSourceConverter
  // class methods
  +[PUOneUpAssetsDataSourceConverter defaultConverter]

  // instance methods
  -[PUOneUpAssetsDataSourceConverter shouldReloadTileControllerFromAsset:toAsset:tileKind:]


PUCurationClassificationSignalBrowserDebugViewController : UITableViewController
  // instance methods
  -[PUCurationClassificationSignalBrowserDebugViewController numberOfSectionsInTableView:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:numberOfRowsInSection:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:titleForHeaderInSection:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:heightForRowAtIndexPath:]
  -[PUCurationClassificationSignalBrowserDebugViewController .cxx_destruct]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:didSelectRowAtIndexPath:]
  -[PUCurationClassificationSignalBrowserDebugViewController viewDidLoad]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:cellForRowAtIndexPath:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[PUCurationClassificationSignalBrowserDebugViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUCurationClassificationSignalBrowserDebugViewController _fetchSignals]
  -[PUCurationClassificationSignalBrowserDebugViewController signalIdentifiersForSection:]
  -[PUCurationClassificationSignalBrowserDebugViewController signalNameForUnknownSignalIdentifier:]


PUCurationClassificationSignalBrowserDebugViewCell : UITableViewCell
 @property  NSString *signalName

  // instance methods
  -[PUCurationClassificationSignalBrowserDebugViewCell .cxx_destruct]
  -[PUCurationClassificationSignalBrowserDebugViewCell setSignalName:]
  -[PUCurationClassificationSignalBrowserDebugViewCell signalName]


PUOneUpBarsController : PUBarsController <PUBrowsingViewModelChangeObserver, PUAssetActionPerformerDelegate, UIPopoverPresentationControllerDelegate, PUPlayPauseBarItemsControllerChangeObserver, PUBarButtonItemCollectionDataSource, PUScrubberViewDelegate, PUPhotoBrowserTitleViewControllerDelegate, PXInfoUpdaterObserver, PXInfoProvider, PXChangeObserver, PUOverOneUpPresentationSessionBarsDelegate>
 @property  NSString *_scrubbingIdentifier
 @property  PUAssetActionPerformer *_activeActionPerformer
 @property  PUScrubberView *_scrubberView
 @property  BOOL _needsUpdateTitle
 @property  NSString *_title
 @property  PUPhotoBrowserTitleViewController *_titleViewController
 @property  BOOL _needsUpdateCommentsTitle
 @property  BOOL _nextCommentsActionShouldBeginEditing
 @property  BOOL _needsUpdateFileSizeButtonTitle
 @property  BOOL _needsUpdateFileSizeButtonMenu
 @property  PXInfoUpdater *_currentAssetDisplayInfoUpdater
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  BOOL _needsUpdateChromeVisibility
 @property  long long _nextChromeVisibilityUpdateAnimationType
 @property  BOOL _lastChromeVisibility
 @property  BOOL _needsUpdatePlayPauseItems
 @property  PUPlayPauseBarItemsController *_playPauseBarItemsController
 @property  BOOL isShowingPlayPauseButton
 @property  PUBarButtonItemCollection *_toolbarButtonItemCollection
 @property  NSMutableIndexSet *_toolbarButtonIdentifiers
 @property  PUBarButtonItemCollection *_rightNavBarButtonItemCollection
 @property  NSMutableIndexSet *_rightNavBarButtonIdentifiers
 @property  PUBarButtonItemCollection *_leftNavBarButtonItemCollection
 @property  NSMutableIndexSet *_leftNavBarButtonIdentifiers
 @property  PUAssetActionPerformer *sharingPreheatedPerformer
 @property  NSArray *sharingPreheatedAssetReferences
 @property  PXImageModulationManager *debuggingObservedImageModulationManager
 @property  NSObject<OS_dispatch_queue> *infoRequestSerialQueue
 @property  UIView *ppt_scrubberView
 @property  <PUOneUpBarsControllerDelegate> *delegate
 @property  PUBrowsingSession *browsingSession
 @property  BOOL shouldPlaceButtonsInNavigationBar
 @property  BOOL shouldUseCompactTitleView
 @property  BOOL shouldUseCompactCommentsTitle
 @property  double maximumToolbarHeight
 @property  double maximumAccessoryToolbarHeight
 @property  BOOL shouldShowDoneButton
 @property  BOOL shouldShowAirPlayButton
 @property  BOOL wantsShowInLibraryButton
 @property  BOOL shouldShowScrubber
 @property  BOOL shouldShowTitleView
 @property  BOOL allowTapOnTitle
 @property  BOOL allowShowingPlayPauseButton
 @property  BOOL disableShowingNavigationBars
 @property  BOOL shouldPlaceScrubberInScrubberBar
 @property  BOOL disableChromeHiding
 @property  BOOL wantsSpotlightStyling
 @property  BOOL wantsMessagesStyling
 @property  BOOL isPlaybackPaused
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  UIBarButtonItem *barButtonItemToggleDetails
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpBarsController browsingSession]
  -[PUOneUpBarsController preferredBarStyle]
  -[PUOneUpBarsController _setTapGestureRecognizer:]
  -[PUOneUpBarsController _tapGestureRecognizer]
  -[PUOneUpBarsController shouldShowScrubber]
  -[PUOneUpBarsController _performSyndicationSaveAction]
  -[PUOneUpBarsController presentationControllerDidDismiss:]
  -[PUOneUpBarsController wantsNavigationBarVisible]
  -[PUOneUpBarsController _performTrashAction]
  -[PUOneUpBarsController setBrowsingSession:]
  -[PUOneUpBarsController _updateCommentsTitleIfNeeded]
  -[PUOneUpBarsController orientationChanged:]
  -[PUOneUpBarsController prefersStatusBarHidden]
  -[PUOneUpBarsController _executeActionPerformer:]
  -[PUOneUpBarsController _setLeftNavBarButtonItemCollection:]
  -[PUOneUpBarsController _rightNavBarButtonIdentifiers]
  -[PUOneUpBarsController updateBars]
  -[PUOneUpBarsController setDebuggingObservedImageModulationManager:]
  -[PUOneUpBarsController wantsToolbarVisible]
  -[PUOneUpBarsController _invalidateCommentsTitle]
  -[PUOneUpBarsController _setToolbarButtonIdentifiers:]
  -[PUOneUpBarsController _updateCommentsButton:withTitle:]
  -[PUOneUpBarsController shouldShowAirPlayButton]
  -[PUOneUpBarsController _setTitle:]
  -[PUOneUpBarsController _performChangesWithCurrentVideoPlayer:]
  -[PUOneUpBarsController _newBarButtonItemWithIdentifier:location:]
  -[PUOneUpBarsController _performShowInLibraryAction]
  -[PUOneUpBarsController _performHideActivityWithAssetsByAssetCollection:]
  -[PUOneUpBarsController _performMuteAction:]
  -[PUOneUpBarsController _invalidateTitle]
  -[PUOneUpBarsController setShouldShowTitleView:]
  -[PUOneUpBarsController _updateFavoriteBarButtonItem]
  -[PUOneUpBarsController _updateSyndicationSaveBarButtonItem]
  -[PUOneUpBarsController _setLastChromeVisibility:]
  -[PUOneUpBarsController setShouldPlaceScrubberInScrubberBar:]
  -[PUOneUpBarsController _updateTitleIfNeeded]
  -[PUOneUpBarsController prepareForPopoverPresentation:]
  -[PUOneUpBarsController ppt_performAction:]
  -[PUOneUpBarsController wantsMessagesStyling]
  -[PUOneUpBarsController _updateScrubberViewIfNeeded]
  -[PUOneUpBarsController ppt_scrubberView]
  -[PUOneUpBarsController _browsingViewModel:didChange:]
  -[PUOneUpBarsController updateContentGuideInsets]
  -[PUOneUpBarsController setSharingPreheatedAssetReferences:]
  -[PUOneUpBarsController setShouldPlaceButtonsInNavigationBar:]
  -[PUOneUpBarsController .cxx_destruct]
  -[PUOneUpBarsController _performLikeAction:]
  -[PUOneUpBarsController infoRequestSerialQueue]
  -[PUOneUpBarsController _performToggleDetailsAction]
  -[PUOneUpBarsController _needsUpdateTitle]
  -[PUOneUpBarsController _leftNavBarButtonItemCollection]
  -[PUOneUpBarsController infoUpdaterDidUpdate:]
  -[PUOneUpBarsController setWantsMessagesStyling:]
  -[PUOneUpBarsController maximumAccessoryToolbarHeight]
  -[PUOneUpBarsController _setNeedsUpdateTitle:]
  -[PUOneUpBarsController _setNeedsUpdateCommentsTitle:]
  -[PUOneUpBarsController invalidateViewControllerView]
  -[PUOneUpBarsController _updateToggleDetailsBarButtonItem]
  -[PUOneUpBarsController _locationForBarButtonItemCollection:]
  -[PUOneUpBarsController debuggingObservedImageModulationManager]
  -[PUOneUpBarsController _attributtedCommentTitleForTitle:highlighted:]
  -[PUOneUpBarsController _locationForBarButtonItemWithIdentifier:]
  -[PUOneUpBarsController isPlaybackPaused]
  -[PUOneUpBarsController shouldUseCompactTitleView]
  -[PUOneUpBarsController setAllowShowingPlayPauseButton:]
  -[PUOneUpBarsController _underlyingForYouSuggestionDataSourceManager]
  -[PUOneUpBarsController togglePlayback]
  -[PUOneUpBarsController _physicalDeviceIsIPad]
  -[PUOneUpBarsController _updateIdentifiersIndexesWithIdentifier:location:shouldEnable:]
  -[PUOneUpBarsController setDelegate:]
  -[PUOneUpBarsController _setNeedsUpdateFileSizeButtonMenu:]
  -[PUOneUpBarsController _updateFileSizeButtonMenuIfNeeded]
  -[PUOneUpBarsController _performSimpleActionType:]
  -[PUOneUpBarsController _setRightNavBarButtonIdentifiers:]
  -[PUOneUpBarsController _peformSuggestionRevertAction]
  -[PUOneUpBarsController barButtonItemTapped:]
  -[PUOneUpBarsController viewModel:didChange:]
  -[PUOneUpBarsController _initializeBarButtonItemCollections]
  -[PUOneUpBarsController wantsShowInLibraryButton]
  -[PUOneUpBarsController assetActionPerformer:presentViewController:]
  -[PUOneUpBarsController _titleViewController]
  -[PUOneUpBarsController _resetIdentifierIndexes]
  -[PUOneUpBarsController setMaximumAccessoryToolbarHeight:]
  -[PUOneUpBarsController init]
  -[PUOneUpBarsController _needsUpdateFileSizeButtonMenu]
  -[PUOneUpBarsController updateGestureRecognizersWithHostingView:]
  -[PUOneUpBarsController _setNeedsUpdatePlayPauseItems:]
  -[PUOneUpBarsController _toolbarButtonItemCollection]
  -[PUOneUpBarsController _currentAssetDisplayInfoUpdater]
  -[PUOneUpBarsController setWantsSpotlightStyling:]
  -[PUOneUpBarsController _setToolbarButtonItemCollection:]
  -[PUOneUpBarsController tapGestureRecognizer]
  -[PUOneUpBarsController _performAssetExplorerReviewScreenActionType:]
  -[PUOneUpBarsController _performRemoveFromFeaturedPhotosActivityWithAssetsByAssetCollection:]
  -[PUOneUpBarsController _activeBarButtonItemForIdentifier:]
  -[PUOneUpBarsController barButtonItemCollection:newBarButtonItemForIdentifier:]
  -[PUOneUpBarsController _wantsChromeVisible]
  -[PUOneUpBarsController _performToggleCommentsAction]
  -[PUOneUpBarsController _toolbarButtonIdentifiers]
  -[PUOneUpBarsController subtitle]
  -[PUOneUpBarsController _title]
  -[PUOneUpBarsController _textColorForTitleViewController:]
  -[PUOneUpBarsController _setActiveActionPerformer:]
  -[PUOneUpBarsController overOneUpPresentationSession:didCompleteWithActivityType:assetsByAssetCollection:success:]
  -[PUOneUpBarsController playPauseBarItemsController:didChange:]
  -[PUOneUpBarsController _nextChromeVisibilityUpdateAnimationType]
  -[PUOneUpBarsController _sourceContextForActionPerformer]
  -[PUOneUpBarsController overOneUpPresentationSession:barButtonItemForActivityType:]
  -[PUOneUpBarsController _performPlayPauseAction:]
  -[PUOneUpBarsController _setNextCommentsActionShouldBeginEditing:]
  -[PUOneUpBarsController _peformSuggestionSaveAction]
  -[PUOneUpBarsController setDisableShowingNavigationBars:]
  -[PUOneUpBarsController _invalidateScrubber]
  -[PUOneUpBarsController _needsUpdateFileSizeButtonTitle]
  -[PUOneUpBarsController _shouldShowDoneEditingButton]
  -[PUOneUpBarsController _barButtonIdentifiersForLocation:]
  -[PUOneUpBarsController title]
  -[PUOneUpBarsController _performRestoreAction]
  -[PUOneUpBarsController _needsUpdatePlayPauseItems]
  -[PUOneUpBarsController shouldShowDoneButton]
  -[PUOneUpBarsController _scrubbingIdentifier]
  -[PUOneUpBarsController _toolbarViewModel:didChange:]
  -[PUOneUpBarsController _performDuplicateActivityWithAssetsByAssetCollection:]
  -[PUOneUpBarsController setShouldUseCompactCommentsTitle:]
  -[PUOneUpBarsController _startObservingOrientationChanges]
  -[PUOneUpBarsController setShouldShowDoneButton:]
  -[PUOneUpBarsController _activeActionPerformer]
  -[PUOneUpBarsController _performToggleFavoriteAction]
  -[PUOneUpBarsController sharingPreheatedPerformer]
  -[PUOneUpBarsController assetActionPerformer:dismissViewController:completionHandler:]
  -[PUOneUpBarsController scrubberView:shouldIgnoreHitTest:withEvent:]
  -[PUOneUpBarsController delegate]
  -[PUOneUpBarsController _setNeedsUpdateFileSizeButtonTitle:]
  -[PUOneUpBarsController executeActionPerformer:withCompletionHandler:]
  -[PUOneUpBarsController allowTapOnTitle]
  -[PUOneUpBarsController _barButtonItemCollectionForLocation:]
  -[PUOneUpBarsController shouldPlaceButtonsInNavigationBar]
  -[PUOneUpBarsController _handleSharingPreheat]
  -[PUOneUpBarsController disableChromeHiding]
  -[PUOneUpBarsController _identifierForButton:]
  -[PUOneUpBarsController _updateFileSizeButtonTitleIfNeeded]
  -[PUOneUpBarsController wantsSpotlightStyling]
  -[PUOneUpBarsController _nextCommentsActionShouldBeginEditing]
  -[PUOneUpBarsController _updateChromeVisibilityIfNeeded]
  -[PUOneUpBarsController _airPlayBarButtonItemForPopoverPresentation]
  -[PUOneUpBarsController overOneUpPresentationSession:didAppendReviewScreenAction:]
  -[PUOneUpBarsController _toggleCTM]
  -[PUOneUpBarsController requestInfoOfKind:withResultHandler:]
  -[PUOneUpBarsController _canShowCommentsForCurrentAsset]
  -[PUOneUpBarsController _needsUpdateCommentsTitle]
  -[PUOneUpBarsController setMaximumToolbarHeight:]
  -[PUOneUpBarsController isShowingPlayPauseButton]
  -[PUOneUpBarsController dealloc]
  -[PUOneUpBarsController _performCancelAction]
  -[PUOneUpBarsController sharingPreheatedAssetReferences]
  -[PUOneUpBarsController _handleAssetViewModelBeginEditingTimer:]
  -[PUOneUpBarsController setDisableChromeHiding:]
  -[PUOneUpBarsController _setNextChromeVisibilityUpdateAnimationType:]
  -[PUOneUpBarsController _setRightNavBarButtonItemCollection:]
  -[PUOneUpBarsController _needsUpdateChromeVisibility]
  -[PUOneUpBarsController _stopObservingOrientationChanges]
  -[PUOneUpBarsController setAllowTapOnTitle:]
  -[PUOneUpBarsController setWantsShowInLibraryButton:]
  -[PUOneUpBarsController setShouldUseCompactTitleView:]
  -[PUOneUpBarsController disableShowingNavigationBars]
  -[PUOneUpBarsController _barButtonItemForIdentifier:location:]
  -[PUOneUpBarsController maximumToolbarHeight]
  -[PUOneUpBarsController _leftNavBarButtonIdentifiers]
  -[PUOneUpBarsController photoBrowserTitleViewControllerTapped:]
  -[PUOneUpBarsController toggleOriginalButtonTouched:]
  -[PUOneUpBarsController shouldShowTitleView]
  -[PUOneUpBarsController _invalidateFileSizeButtonMenu]
  -[PUOneUpBarsController setViewController:]
  -[PUOneUpBarsController setShouldShowScrubber:]
  -[PUOneUpBarsController _commentTitleAttributes]
  -[PUOneUpBarsController observable:didChange:context:]
  -[PUOneUpBarsController setSharingPreheatedPerformer:]
  -[PUOneUpBarsController _updateShowingPlayPauseButton]
  -[PUOneUpBarsController shouldTapBeginAtLocationFromProvider:]
  -[PUOneUpBarsController _invalidateFileSizeButtonTitle]
  -[PUOneUpBarsController allowShowingPlayPauseButton]
  -[PUOneUpBarsController shouldPlaceScrubberInScrubberBar]
  -[PUOneUpBarsController _performSuggestLessPersonActivityWithAssetsByAssetCollection:]
  -[PUOneUpBarsController _barButtonItemForActionType:]
  -[PUOneUpBarsController _lastChromeVisibility]
  -[PUOneUpBarsController _performShareAction]
  -[PUOneUpBarsController _commentsButtonWithTitle:]
  -[PUOneUpBarsController _setNeedsUpdateChromeVisibility:]
  -[PUOneUpBarsController _scrubberType]
  -[PUOneUpBarsController _commentTitleColor]
  -[PUOneUpBarsController _invalidateChromeVisibilityWithAnimationType:]
  -[PUOneUpBarsController _handleTapGestureRecognizer:]
  -[PUOneUpBarsController _updateAddToLibraryBarButtonItem]
  -[PUOneUpBarsController setShouldShowAirPlayButton:]
  -[PUOneUpBarsController shouldUseCompactCommentsTitle]
  -[PUOneUpBarsController _revealGainMapImage]
  -[PUOneUpBarsController _scrubberView]
  -[PUOneUpBarsController barButtonItemToggleDetails]
  -[PUOneUpBarsController _playPauseBarItemsController]
  -[PUOneUpBarsController _setShowingPlayPauseButton:]
  -[PUOneUpBarsController _rightNavBarButtonItemCollection]
  -[PUOneUpBarsController _performDoneEditingAction]
  -[PUOneUpBarsController _setLeftNavBarButtonIdentifiers:]


_PUSharingPreheatGestureRecognizer : UIGestureRecognizer
  // instance methods
  -[_PUSharingPreheatGestureRecognizer .cxx_destruct]
  -[_PUSharingPreheatGestureRecognizer touchesBegan:withEvent:]
  -[_PUSharingPreheatGestureRecognizer initWithSharingPreheatBlock:]


PUOneUpCommentsInfoProvider : NSObject
  // class methods
  +[PUOneUpCommentsInfoProvider toggleLike:forDisplayAsset:]
  +[PUOneUpCommentsInfoProvider likeCountForDisplayAsset:]
  +[PUOneUpCommentsInfoProvider hasUserLikedDisplayAsset:]
  +[PUOneUpCommentsInfoProvider commentCountForDisplayAsset:]
  +[PUOneUpCommentsInfoProvider _canHandleDisplayAsset:]


PUOneUpGestureRecognizerCoordinator : NSObject <UIGestureRecognizerDelegate>
 @property  NSHashTable *_irisGestureRecognizers
 @property  BOOL _needsUpdateGestureRecognizers
 @property  <PUOneUpGestureRecognizerCoordinatorDelegate> *delegate
 @property  PUBrowsingSession *browsingSession
 @property  PUOneUpBarsController *oneUpBarsController
 @property  PUDoubleTapZoomController *doubleTapZoomController
 @property  PULongPressDragController *longPressDragController
 @property  PUTouchingGestureRecognizer *touchingGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpGestureRecognizerCoordinator browsingSession]
  -[PUOneUpGestureRecognizerCoordinator setBrowsingSession:]
  -[PUOneUpGestureRecognizerCoordinator gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[PUOneUpGestureRecognizerCoordinator gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUOneUpGestureRecognizerCoordinator invalidateViewHostingGestureRecognizers]
  -[PUOneUpGestureRecognizerCoordinator .cxx_destruct]
  -[PUOneUpGestureRecognizerCoordinator setDoubleTapZoomController:]
  -[PUOneUpGestureRecognizerCoordinator _invalidateGestureRecognizers]
  -[PUOneUpGestureRecognizerCoordinator addIrisGestureRecognizer:]
  -[PUOneUpGestureRecognizerCoordinator setDelegate:]
  -[PUOneUpGestureRecognizerCoordinator gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[PUOneUpGestureRecognizerCoordinator oneUpBarsController]
  -[PUOneUpGestureRecognizerCoordinator setOneUpBarsController:]
  -[PUOneUpGestureRecognizerCoordinator _irisGestureRecognizers]
  -[PUOneUpGestureRecognizerCoordinator longPressGestureRecognizer]
  -[PUOneUpGestureRecognizerCoordinator gestureRecognizerShouldBegin:]
  -[PUOneUpGestureRecognizerCoordinator _setNeedsUpdateGestureRecognizers:]
  -[PUOneUpGestureRecognizerCoordinator delegate]
  -[PUOneUpGestureRecognizerCoordinator doubleTapZoomController]
  -[PUOneUpGestureRecognizerCoordinator setLongPressDragController:]
  -[PUOneUpGestureRecognizerCoordinator longPressDragController]
  -[PUOneUpGestureRecognizerCoordinator _needsUpdateGestureRecognizers]
  -[PUOneUpGestureRecognizerCoordinator _updateGestureRecognizersIfNeeded]
  -[PUOneUpGestureRecognizerCoordinator _setIrisGestureRecognizers:]
  -[PUOneUpGestureRecognizerCoordinator touchingGestureRecognizer]


PUOneUpLivePhotoVariationsSuggestionsProvider : PUOneUpSuggestionsProvider <PXChangeObserver>
 @property  NSMutableDictionary *infos
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpLivePhotoVariationsSuggestionsProvider .cxx_destruct]
  -[PUOneUpLivePhotoVariationsSuggestionsProvider init]
  -[PUOneUpLivePhotoVariationsSuggestionsProvider _recommendedVariationTypeForAsset:]
  -[PUOneUpLivePhotoVariationsSuggestionsProvider canProvideSuggestionForAsset:]
  -[PUOneUpLivePhotoVariationsSuggestionsProvider infos]
  -[PUOneUpLivePhotoVariationsSuggestionsProvider observable:didChange:context:]


_PUOneUpLivePhotoVariationSuggestionInfo : NSObject
 @property  long long variationType
 @property  PXAssetVariationRenderProvider *renderProvider

  // instance methods
  -[_PUOneUpLivePhotoVariationSuggestionInfo .cxx_destruct]
  -[_PUOneUpLivePhotoVariationSuggestionInfo variationType]
  -[_PUOneUpLivePhotoVariationSuggestionInfo setRenderProvider:]
  -[_PUOneUpLivePhotoVariationSuggestionInfo renderProvider]
  -[_PUOneUpLivePhotoVariationSuggestionInfo setVariationType:]


PUOneUpPhotosSharingTransition : PUModalTransition <PUOneUpAssetTransition>
 @property  UICollectionViewLayout *_transitionLayout
 @property  UIViewController<PUOneUpPhotosSharingTransitionViewController><PUOneUpAssetTransitionViewController> *sharingTransitionViewController
 @property  UIViewController<PUOneUpAssetTransitionViewController> *presentingViewController
 @property  PUOneUpPhotosSharingTransitionContext *oneUpPhotosSharingTransitionContext
 @property  <PUOneUpPhotosSharingTransitionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpPhotosSharingTransition .cxx_destruct]
  -[PUOneUpPhotosSharingTransition setPresentingViewController:]
  -[PUOneUpPhotosSharingTransition setDelegate:]
  -[PUOneUpPhotosSharingTransition presentingViewController]
  -[PUOneUpPhotosSharingTransition delegate]
  -[PUOneUpPhotosSharingTransition _transitionLayout]
  -[PUOneUpPhotosSharingTransition setOneUpPhotosSharingTransitionContext:]
  -[PUOneUpPhotosSharingTransition _setTransitionLayout:]
  -[PUOneUpPhotosSharingTransition animatePresentTransition]
  -[PUOneUpPhotosSharingTransition animateDismissTransition]
  -[PUOneUpPhotosSharingTransition sharingTransitionViewController]
  -[PUOneUpPhotosSharingTransition oneUpPhotosSharingTransitionContext]
  -[PUOneUpPhotosSharingTransition setSharingTransitionViewController:]


PUOneUpPhotosSharingTransitionContext : PUPhotosSharingTransitionContext
 @property  PUAssetReference *currentAssetReference

  // instance methods
  -[PUOneUpPhotosSharingTransitionContext currentAssetReference]
  -[PUOneUpPhotosSharingTransitionContext setCurrentAssetReference:]
  -[PUOneUpPhotosSharingTransitionContext .cxx_destruct]
  -[PUOneUpPhotosSharingTransitionContext keyAssetIndexPath]


PUOneUpPresentationHelper : NSObject <PUPhotosPreviewPresentationControllerDelegate, UIGestureRecognizerDelegate, PUTilingViewTileSource, PUTilingViewTileTransitionDelegate, PUTilingViewTileUseDelegate, PUPinchedTileTrackerDelegate, PUTilingViewControllerTransitionEndPoint>
 @property  long long _state
 @property  BOOL _isEndingPresentation
 @property  long long _presentationEndTimeoutIdentifier
 @property  BOOL _shouldPauseLibraryChanges
 @property  PHPhotoLibrary *pausedPhotoLibrary
 @property  id libraryChangePauseToken
 @property  @? _browsingSessionCreationBlock
 @property  PUBrowsingSession *browsingSession
 @property  long long transitionType
 @property  PUTilingView *_tilingView
 @property  PUTilingView *_disappearingTilingView
 @property  PUTilingView *_transitioningTilingView
 @property  BOOL _needsUpdateAssetReferencesDisplayedInTilingView
 @property  NSSet *_assetReferencesDisplayedInTilingView
 @property  PUOneUpViewController *_oneUpViewController
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  PUPinchedTileTracker *_pinchedTileTracker
 @property  PUChangeDirectionValueFilter *_panDirectionValueFilter
 @property  BOOL _isPerformingNonAnimatedPush
 @property  long long _presentationOrigin
 @property  PXPhotosDataSource *photosDataSource
 @property  <PUOneUpPresentationHelperDelegate> *delegate
 @property  <PUOneUpPresentationHelperAssetDisplayDelegate> *assetDisplayDelegate
 @property  @? unlockDeviceStatus
 @property  @? unlockDeviceHandler
 @property  BOOL isOneUpPresented
 @property  BOOL cachesScrubberView
 @property  UIViewController *presentingViewController
 @property  PXAssetReference *lastViewedAssetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpPresentationHelper unlockDeviceStatus]
  -[PUOneUpPresentationHelper photosDataSource]
  -[PUOneUpPresentationHelper _setState:]
  -[PUOneUpPresentationHelper browsingSession]
  -[PUOneUpPresentationHelper unlockDeviceHandler]
  -[PUOneUpPresentationHelper setUnlockDeviceStatus:]
  -[PUOneUpPresentationHelper _setTapGestureRecognizer:]
  -[PUOneUpPresentationHelper _tapGestureRecognizer]
  -[PUOneUpPresentationHelper isOneUpPresented]
  -[PUOneUpPresentationHelper setUnlockDeviceHandler:]
  -[PUOneUpPresentationHelper presentOneUpViewControllerAnimated:interactiveMode:activity:]
  -[PUOneUpPresentationHelper _setShouldPauseLibraryChanges:]
  -[PUOneUpPresentationHelper shouldStartPreviewingSimultaneouslyWithGestureRecognizer:]
  -[PUOneUpPresentationHelper setPhotosDataSource:]
  -[PUOneUpPresentationHelper _updateTapGestureRecognizer]
  -[PUOneUpPresentationHelper browsingSessionCreateIfNeeded:]
  -[PUOneUpPresentationHelper initWithPhotosDataSource:]
  -[PUOneUpPresentationHelper _presentationOrigin]
  -[PUOneUpPresentationHelper transitionType]
  -[PUOneUpPresentationHelper _updateLayout]
  -[PUOneUpPresentationHelper _state]
  -[PUOneUpPresentationHelper _setDisappearingTilingView:]
  -[PUOneUpPresentationHelper photosPreviewPresentationController:willPresentPreviewViewController:]
  -[PUOneUpPresentationHelper tilingViewControllerTransition:tilingViewToTransferToEndPoint:]
  -[PUOneUpPresentationHelper _navigateToAssetAtIndexPath:inBrowsingSession:]
  -[PUOneUpPresentationHelper set_presentationOrigin:]
  -[PUOneUpPresentationHelper tilingViewControllerTransitionTilingViewHostView:]
  -[PUOneUpPresentationHelper _browsingSessionCreationBlock]
  -[PUOneUpPresentationHelper _shouldPauseLibraryChanges]
  -[PUOneUpPresentationHelper tilingView:dataSourceConverterForTransitionFromLayout:toLayout:]
  -[PUOneUpPresentationHelper _setPinchedTileTracker:]
  -[PUOneUpPresentationHelper tilingViewControllerTransitionPreferredBarStyle:]
  -[PUOneUpPresentationHelper _needsUpdateAssetReferencesDisplayedInTilingView]
  -[PUOneUpPresentationHelper tilingViewDidUpdateTileControllers:]
  -[PUOneUpPresentationHelper tilingView:willStartUsingTileController:]
  -[PUOneUpPresentationHelper _createBrowsingSession]
  -[PUOneUpPresentationHelper _tilingView]
  -[PUOneUpPresentationHelper _disappearingTilingView:animationCompleted:]
  -[PUOneUpPresentationHelper _invalidateAssetReferencesDisplayedInTilingView]
  -[PUOneUpPresentationHelper .cxx_destruct]
  -[PUOneUpPresentationHelper assetDisplayDelegate]
  -[PUOneUpPresentationHelper _invalidatePresentationInfo]
  -[PUOneUpPresentationHelper _cleanUpAfterTilingViewTransitionAnimated:transitionAborted:]
  -[PUOneUpPresentationHelper setLibraryChangePauseToken:]
  -[PUOneUpPresentationHelper _updatePresentationInfoIfNeeded]
  -[PUOneUpPresentationHelper setPausedPhotoLibrary:]
  -[PUOneUpPresentationHelper _transitioningTilingView]
  -[PUOneUpPresentationHelper tilingViewControllerTransitionUsesTransientTilingView:]
  -[PUOneUpPresentationHelper _handleInteractivePresentationWithBlock:]
  -[PUOneUpPresentationHelper setDelegate:]
  -[PUOneUpPresentationHelper libraryChangePauseToken]
  -[PUOneUpPresentationHelper presentingViewController]
  -[PUOneUpPresentationHelper pausedPhotoLibrary]
  -[PUOneUpPresentationHelper tilingView:tileControllerWithIndexPath:kind:dataSource:]
  -[PUOneUpPresentationHelper _setTilingView:]
  -[PUOneUpPresentationHelper tilingView:tileTransitionCoordinatorForTransitionFromLayout:toLayout:withContext:]
  -[PUOneUpPresentationHelper init]
  -[PUOneUpPresentationHelper _updateLayout:]
  -[PUOneUpPresentationHelper tilingViewDidEndAnimatingTileControllers:]
  -[PUOneUpPresentationHelper presentingViewControllerScrollViewDidScroll:]
  -[PUOneUpPresentationHelper _setEndingPresentation:]
  -[PUOneUpPresentationHelper presentingViewControllerViewDidDisappear:]
  -[PUOneUpPresentationHelper _pinchedTileTracker]
  -[PUOneUpPresentationHelper tilingView:tileTransitionCoordinatorForReattachedTileControllers:context:]
  -[PUOneUpPresentationHelper _assetReferencesDisplayedInTilingView]
  -[PUOneUpPresentationHelper _currentNavigationControllerOperation]
  -[PUOneUpPresentationHelper _presentOneUpViewController:animated:interactiveMode:activity:completion:]
  -[PUOneUpPresentationHelper cancelCommitTransitionForPreviewViewController:completion:]
  -[PUOneUpPresentationHelper _didFinishTransitioningToOneUp]
  -[PUOneUpPresentationHelper _setPresentationEndTimeoutIdentifier:]
  -[PUOneUpPresentationHelper commitPreviewViewController:]
  -[PUOneUpPresentationHelper tilingView:tileTransitionCoordinatorForUpdateWithItems:]
  -[PUOneUpPresentationHelper pinchedTiledTracker:initialAspectRatioForTileWithLayoutInfo:]
  -[PUOneUpPresentationHelper _handleTileControllerAnimationEnd]
  -[PUOneUpPresentationHelper _updateAssetReferencesDisplayedInTilingView]
  -[PUOneUpPresentationHelper _tilingViewTransitionTransform]
  -[PUOneUpPresentationHelper previewViewControllerForItemAtIndexPath:allowingActions:]
  -[PUOneUpPresentationHelper _configureNavigationController:]
  -[PUOneUpPresentationHelper gestureRecognizerShouldBegin:]
  -[PUOneUpPresentationHelper canDismissOneUpViewController]
  -[PUOneUpPresentationHelper interactiveTileTracker:didStopTrackingTileController:]
  -[PUOneUpPresentationHelper handlePresentingPanGestureRecognizer:]
  -[PUOneUpPresentationHelper _handleTap:]
  -[PUOneUpPresentationHelper _setNeedsUpdateAssetReferencesDisplayedInTilingView:]
  -[PUOneUpPresentationHelper lastViewedAssetReference]
  -[PUOneUpPresentationHelper setAssetDisplayDelegate:]
  -[PUOneUpPresentationHelper _oneUpViewController]
  -[PUOneUpPresentationHelper _cleanupOneUpViewControllerForDismissalIfNeeded]
  -[PUOneUpPresentationHelper _presentationEndDidTimeOut:]
  -[PUOneUpPresentationHelper _setAssetReferencesDisplayedInTilingView:]
  -[PUOneUpPresentationHelper pinchedTiledTracker:finalLayoutInfoForTileWithLayoutInfo:]
  -[PUOneUpPresentationHelper presentOneUpViewControllerAnimated:interactiveMode:]
  -[PUOneUpPresentationHelper presentingViewControllerViewDidAppear:]
  -[PUOneUpPresentationHelper _currentTilingViewControllerTransition]
  -[PUOneUpPresentationHelper beginUsingBlackTheme]
  -[PUOneUpPresentationHelper initWithBrowsingSessionCreationBlock:]
  -[PUOneUpPresentationHelper tilingViewControllerTransition:adoptTilingView:fromEndPoint:isCancelingTransition:animationSetupCompletionHandler:]
  -[PUOneUpPresentationHelper _isPerformingNonAnimatedPush]
  -[PUOneUpPresentationHelper tilingView:tileTransitionCoordinatorForChangeFromFrame:toFrame:duration:]
  -[PUOneUpPresentationHelper delegate]
  -[PUOneUpPresentationHelper _isEndingPresentation]
  -[PUOneUpPresentationHelper cachesScrubberView]
  -[PUOneUpPresentationHelper tilingView:didStopUsingTileController:]
  -[PUOneUpPresentationHelper _presentationEndTimeoutIdentifier]
  -[PUOneUpPresentationHelper _prepareDismissalForced:]
  -[PUOneUpPresentationHelper tilingViewControllerTransitionWasAborted:]
  -[PUOneUpPresentationHelper _setOneUpViewController:]
  -[PUOneUpPresentationHelper presentingViewControllerViewWillDisappear:]
  -[PUOneUpPresentationHelper cameraPreviewTransitionDelegateWithSourceRect:sourceImage:]
  -[PUOneUpPresentationHelper dealloc]
  -[PUOneUpPresentationHelper _setBrowsingSession:]
  -[PUOneUpPresentationHelper _shouldAutoplayOnNavigation]
  -[PUOneUpPresentationHelper willPresentPreviewViewController:forLocation:inSourceView:]
  -[PUOneUpPresentationHelper presentingViewControllerViewWillAppear:]
  -[PUOneUpPresentationHelper _setIsPerformingNonAnimatedPush:]
  -[PUOneUpPresentationHelper _disappearingTilingView]
  -[PUOneUpPresentationHelper presentOneUpViewControllerFromAssetAtIndexPath:animated:interactiveMode:activity:]
  -[PUOneUpPresentationHelper dismissOneUpViewControllerForced:animated:]
  -[PUOneUpPresentationHelper _createOneUpViewControllerWithBrowsingSession:options:activity:]
  -[PUOneUpPresentationHelper handlePresentingPinchGestureRecognizer:]
  -[PUOneUpPresentationHelper tilingViewControllerTransition:abandonTilingView:toEndPoint:]
  -[PUOneUpPresentationHelper _panDirectionValueFilter]
  -[PUOneUpPresentationHelper _setTransitioningTilingView:]
  -[PUOneUpPresentationHelper _ensureRegistrationWithPresentingViewController]
  -[PUOneUpPresentationHelper _newCollapsedLayout]
  -[PUOneUpPresentationHelper _transitionHostingView]
  -[PUOneUpPresentationHelper _setPanDirectionValueFilter:]
  -[PUOneUpPresentationHelper canPresentOneUpViewControllerAnimated:]
  -[PUOneUpPresentationHelper interactiveTileTracker:willStartTrackingTileController:]
  -[PUOneUpPresentationHelper setCachesScrubberView:]
  -[PUOneUpPresentationHelper didDismissPreviewViewController:committing:]
  -[PUOneUpPresentationHelper previewPresentationTransitioningDelegateForPosition:inSourceView:]


PUOneUpSelectionIndicatorTileViewController : PUTileViewController <PXChangeObserver, PUAssetViewModelChangeObserver>
 @property  BOOL _performingChanges
 @property  BOOL _needsUpdateButton
 @property  UIButton *_button
 @property  BOOL _buttonVisible
 @property  PUAssetViewModel *assetViewModel
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUAssetReference *assetReference
 @property  PUAssetActionManager *actionManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpSelectionIndicatorTileViewController assetViewModel]
  -[PUOneUpSelectionIndicatorTileViewController _setPerformingChanges:]
  -[PUOneUpSelectionIndicatorTileViewController browsingViewModel]
  -[PUOneUpSelectionIndicatorTileViewController setAssetViewModel:]
  -[PUOneUpSelectionIndicatorTileViewController becomeReusable]
  -[PUOneUpSelectionIndicatorTileViewController _button]
  -[PUOneUpSelectionIndicatorTileViewController setBrowsingViewModel:]
  -[PUOneUpSelectionIndicatorTileViewController setAssetReference:]
  -[PUOneUpSelectionIndicatorTileViewController _handleButton:]
  -[PUOneUpSelectionIndicatorTileViewController performChanges:]
  -[PUOneUpSelectionIndicatorTileViewController _isPerformingChanges]
  -[PUOneUpSelectionIndicatorTileViewController _updateIfNeeded]
  -[PUOneUpSelectionIndicatorTileViewController _setNeedsUpdate]
  -[PUOneUpSelectionIndicatorTileViewController .cxx_destruct]
  -[PUOneUpSelectionIndicatorTileViewController assetReference]
  -[PUOneUpSelectionIndicatorTileViewController viewDidLoad]
  -[PUOneUpSelectionIndicatorTileViewController setActionManager:]
  -[PUOneUpSelectionIndicatorTileViewController actionManager]
  -[PUOneUpSelectionIndicatorTileViewController viewModel:didChange:]
  -[PUOneUpSelectionIndicatorTileViewController _needsUpdate]
  -[PUOneUpSelectionIndicatorTileViewController _selectionManager]
  -[PUOneUpSelectionIndicatorTileViewController _setButton:]
  -[PUOneUpSelectionIndicatorTileViewController observable:didChange:context:]
  -[PUOneUpSelectionIndicatorTileViewController _reviewActionManager]
  -[PUOneUpSelectionIndicatorTileViewController _invalidateButton]
  -[PUOneUpSelectionIndicatorTileViewController _updateButtonIfNeeded]
  -[PUOneUpSelectionIndicatorTileViewController _needsUpdateButton]
  -[PUOneUpSelectionIndicatorTileViewController _setNeedsUpdateButton:]
  -[PUOneUpSelectionIndicatorTileViewController _setButtonVisible:animated:]
  -[PUOneUpSelectionIndicatorTileViewController _setButtonVisible:]
  -[PUOneUpSelectionIndicatorTileViewController _isButtonVisible]


PUOneUpSettings : PXSettings <PXPreferencesObserver>
 @property  BOOL showSuggestionsForAllAssets
 @property  BOOL showInitialDetailsIndicator
 @property  BOOL enableSuggestionsAnalysis
 @property  BOOL initialDetailsIndicatorShouldSlideIn
 @property  double initialDetailsIndicatorDelay
 @property  double initialDetailsIndicatorDuration
 @property  long long titleTapAction
 @property  PUScrubberSettings *scrubberSettings
 @property  unsigned long scaleToFitBehavior
 @property  BOOL allowUserTransform
 @property  BOOL allowBadges
 @property  BOOL allowScrubber
 @property  BOOL allowChromeHiding
 @property  BOOL allowDoubleTapZoom
 @property  BOOL allowFullsizeJPEGDisplay
 @property  BOOL allowToggleOriginalBarItem
 @property  long long userNavigationMaximumDistance
 @property  BOOL showSaliencyRects
 @property  BOOL showFacesRect
 @property  BOOL showPaddedFacesRect
 @property  BOOL showBestSquareRect
 @property  BOOL showFacesTorsosRects
 @property  BOOL showToggleCTMButton
 @property  BOOL showGainMapButton
 @property  long long accessoryViewType
 @property  double accessoryInitialTopPosition
 @property  double minimumVisibleContentHeight
 @property  double minimumVisibleCommentedContentHeight
 @property  double minimumFullCommentTitleViewWidth
 @property  BOOL hideToolbarWhenShowingAccessoryView
 @property  BOOL hideFloatingInfoPanelWhenHidingChrome
 @property  BOOL hideFloatingInfoPanel
 @property  BOOL allowsDetailsToggleButtonInBars
 @property  BOOL useGlobalDetailsVisibility
 @property  BOOL useGlobalCommentsVisibility
 @property  BOOL squareImageCapToHalfHeight
 @property  BOOL shouldFadeAccessoryView
 @property  double chromeDefaultAnimationDuration
 @property  long long chromeAutoHideBehaviorOnLivePhoto
 @property  long long chromeAutoHideBehaviorOnPlayButton
 @property  long long chromeAutoHideBehaviorOnSwipe
 @property  long long chromeAutoHideBehaviorOnZoom
 @property  double chromeAutoHideDelay
 @property  double chromeTimedAutoHideAnimationDuration
 @property  BOOL persistChromeVisibility
 @property  long long chromeAnimationType
 @property  long long chromeBackgroundAnimationType
 @property  double interpageSpacing
 @property  double pagingSpringPullAdjustment
 @property  double pagingFrictionAdjustment
 @property  BOOL allowParallax
 @property  long long parallaxModel
 @property  double parallaxFactor
 @property  BOOL allowStatusBar
 @property  double barsAreaVerticalOutset
 @property  double defaultZoomInFactor
 @property  double doubleTapZoomFactor
 @property  BOOL doubleTapZoomAreaExcludesBars
 @property  BOOL doubleTapZoomAreaExcludesBackground
 @property  BOOL enableFigPhotoTiledLayer
 @property  BOOL useURLForLargePhotosWithFigPhotoTiledLayer
 @property  BOOL forceURLWithFigPhotoTiledLayer
 @property  BOOL enableFigPhotoBackgroundSizeBasedDisplay
 @property  BOOL simulateWorstCaseFigPhotoBackgroundSize
 @property  BOOL autoplayVideo
 @property  double videoAutoplayThreshold
 @property  BOOL unmuteOnChromeHide
 @property  BOOL allowPlayButtonInBars
 @property  double videoPauseThreshold
 @property  BOOL videoRemuteOnBackgrounding
 @property  double autoplayScrubberWidth
 @property  BOOL videoShowDebugBorders
 @property  BOOL livePhotoSRLCompensationEnabled
 @property  BOOL livePhotoSRLCompensationManualMode
 @property  double livePhotoSRLCompensationManualValue
 @property  NSString *livePhotoSRLCompensationFilterName
 @property  double livePhotoInteractionThreshold
 @property  BOOL applyPerspectiveTransformDuringVitality
 @property  BOOL lockScrollDuringLivePhotoPlayback
 @property  BOOL livePhotoScrubberShowForPlayback
 @property  BOOL shouldMergeOverlappingLivePhotos
 @property  double livePhotoMinimumOverlappingDuration
 @property  unsigned long overlappingLivePhotosCountLimit
 @property  BOOL showOffBadgeForDisabledLivePhotos
 @property  double vitalityMaskBlur
 @property  double vitalityFeatherScale
 @property  double vitalityMaxAllowedInsetPoints
 @property  double vitalityMaxAllowedLargeInsetPoints
 @property  BOOL vitalityUseInsetLimiting
 @property  BOOL showReframedBadge
 @property  unsigned long viewModelCacheCountLimit
 @property  double visibilityDurationForEnteringQuickPagingRegime
 @property  double visibilityDurationForExitingQuickPagingRegime
 @property  long long minNavigationDistanceForQuickPagingRegime
 @property  double visibilityDurationForEnteringFastRegime
 @property  double visibilityDurationForExitingFastRegime
 @property  long long minNavigationDistanceForFastRegime
 @property  double bounceDuration
 @property  double bounceDelay
 @property  double bounceSpringDamping
 @property  double bounceInitialVelocity
 @property  BOOL allowGIFPlayback
 @property  BOOL showGIFLoadingDelays
 @property  double playGIFSettledThreshold
 @property  double playGIFEnterThreshold
 @property  double playGIFMoveOutThreshold
 @property  BOOL allowVisualIntelligence
 @property  BOOL hideVisualIntelligenceOverlayIn1Up
 @property  BOOL hideVisualIntelligenceOverlayIn1UpDetails
 @property  BOOL simulateAssetContentLoading
 @property  double simulatedAssetContentLoadingDuration
 @property  BOOL simulateLoadingError
 @property  long long simulatedLoadingErrorType
 @property  BOOL showFileRadarButtonForOneUpErrorPresentationsOnInternalInstalls
 @property  BOOL useDebuggingColors
 @property  long long debuggingTitleType
 @property  unsigned long debuggingBadges
 @property  unsigned long debuggingBadgesWhenFavorite
 @property  BOOL useDebuggingProgressLabel
 @property  BOOL showBufferingIndicatorDuringPlay
 @property  BOOL showLoadingIndicatorDuringDownload
 @property  BOOL alwaysShowRenderIndicator
 @property  double simulatedRenderProgress
 @property  BOOL alwaysShowAirPlayButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUOneUpSettings sharedInstance]
  +[PUOneUpSettings settingsControllerModule]

  // instance methods
  -[PUOneUpSettings setChromeAutoHideDelay:]
  -[PUOneUpSettings createChildren]
  -[PUOneUpSettings setShowGainMapButton:]
  -[PUOneUpSettings simulatedLoadingErrorType]
  -[PUOneUpSettings setShowFacesTorsosRects:]
  -[PUOneUpSettings setAllowParallax:]
  -[PUOneUpSettings allowVisualIntelligence]
  -[PUOneUpSettings setScrubberSettings:]
  -[PUOneUpSettings setVideoAutoplayThreshold:]
  -[PUOneUpSettings setShouldMergeOverlappingLivePhotos:]
  -[PUOneUpSettings setAllowFullsizeJPEGDisplay:]
  -[PUOneUpSettings setBounceDelay:]
  -[PUOneUpSettings doubleTapZoomAreaExcludesBars]
  -[PUOneUpSettings parentSettings]
  -[PUOneUpSettings parallaxFactor]
  -[PUOneUpSettings setInitialDetailsIndicatorShouldSlideIn:]
  -[PUOneUpSettings chromeAutoHideDelay]
  -[PUOneUpSettings visibilityDurationForExitingFastRegime]
  -[PUOneUpSettings livePhotoMinimumOverlappingDuration]
  -[PUOneUpSettings setAllowToggleOriginalBarItem:]
  -[PUOneUpSettings setTitleTapAction:]
  -[PUOneUpSettings useGlobalCommentsVisibility]
  -[PUOneUpSettings setChromeDefaultAnimationDuration:]
  -[PUOneUpSettings livePhotoSRLCompensationFilterName]
  -[PUOneUpSettings allowsDetailsToggleButtonInBars]
  -[PUOneUpSettings visibilityDurationForExitingQuickPagingRegime]
  -[PUOneUpSettings setVideoRemuteOnBackgrounding:]
  -[PUOneUpSettings _updateVisualIntelligenceRelatedSettings:]
  -[PUOneUpSettings chromeDefaultAnimationDuration]
  -[PUOneUpSettings hideToolbarWhenShowingAccessoryView]
  -[PUOneUpSettings livePhotoSRLCompensationManualValue]
  -[PUOneUpSettings setHideFloatingInfoPanelWhenHidingChrome:]
  -[PUOneUpSettings vitalityUseInsetLimiting]
  -[PUOneUpSettings vitalityMaskBlur]
  -[PUOneUpSettings setShowOffBadgeForDisabledLivePhotos:]
  -[PUOneUpSettings showFileRadarButtonForOneUpErrorPresentationsOnInternalInstalls]
  -[PUOneUpSettings setAllowsDetailsToggleButtonInBars:]
  -[PUOneUpSettings hideVisualIntelligenceOverlayIn1UpDetails]
  -[PUOneUpSettings setDebuggingBadgesWhenFavorite:]
  -[PUOneUpSettings hideFloatingInfoPanel]
  -[PUOneUpSettings setVitalityMaskBlur:]
  -[PUOneUpSettings setLivePhotoMinimumOverlappingDuration:]
  -[PUOneUpSettings setParallaxFactor:]
  -[PUOneUpSettings setDebuggingTitleType:]
  -[PUOneUpSettings setHideVisualIntelligenceOverlayIn1UpDetails:]
  -[PUOneUpSettings bounceDuration]
  -[PUOneUpSettings scaleToFitBehavior]
  -[PUOneUpSettings setAllowScrubber:]
  -[PUOneUpSettings setSimulateLoadingError:]
  -[PUOneUpSettings setPagingSpringPullAdjustment:]
  -[PUOneUpSettings setMinNavigationDistanceForFastRegime:]
  -[PUOneUpSettings playGIFSettledThreshold]
  -[PUOneUpSettings doubleTapZoomFactor]
  -[PUOneUpSettings .cxx_destruct]
  -[PUOneUpSettings setPlayGIFEnterThreshold:]
  -[PUOneUpSettings parallaxModel]
  -[PUOneUpSettings interpageSpacing]
  -[PUOneUpSettings setLockScrollDuringLivePhotoPlayback:]
  -[PUOneUpSettings setAutoplayScrubberWidth:]
  -[PUOneUpSettings squareImageCapToHalfHeight]
  -[PUOneUpSettings setDefaultValues]
  -[PUOneUpSettings livePhotoSRLCompensationEnabled]
  -[PUOneUpSettings setMinNavigationDistanceForQuickPagingRegime:]
  -[PUOneUpSettings setMinimumFullCommentTitleViewWidth:]
  -[PUOneUpSettings allowUserTransform]
  -[PUOneUpSettings setShowSaliencyRects:]
  -[PUOneUpSettings enableFigPhotoTiledLayer]
  -[PUOneUpSettings setEnableSuggestionsAnalysis:]
  -[PUOneUpSettings overlappingLivePhotosCountLimit]
  -[PUOneUpSettings showToggleCTMButton]
  -[PUOneUpSettings setChromeAnimationType:]
  -[PUOneUpSettings visibilityDurationForEnteringQuickPagingRegime]
  -[PUOneUpSettings showFacesRect]
  -[PUOneUpSettings allowFullsizeJPEGDisplay]
  -[PUOneUpSettings allowBadges]
  -[PUOneUpSettings setShowFileRadarButtonForOneUpErrorPresentationsOnInternalInstalls:]
  -[PUOneUpSettings setUseURLForLargePhotosWithFigPhotoTiledLayer:]
  -[PUOneUpSettings setVitalityMaxAllowedLargeInsetPoints:]
  -[PUOneUpSettings minimumVisibleCommentedContentHeight]
  -[PUOneUpSettings showGainMapButton]
  -[PUOneUpSettings setScaleToFitBehavior:]
  -[PUOneUpSettings setVisibilityDurationForEnteringQuickPagingRegime:]
  -[PUOneUpSettings setDoubleTapZoomAreaExcludesBars:]
  -[PUOneUpSettings initialDetailsIndicatorShouldSlideIn]
  -[PUOneUpSettings setBounceInitialVelocity:]
  -[PUOneUpSettings barsAreaVerticalOutset]
  -[PUOneUpSettings setChromeAutoHideBehaviorOnZoom:]
  -[PUOneUpSettings setLivePhotoSRLCompensationEnabled:]
  -[PUOneUpSettings setUseDebuggingColors:]
  -[PUOneUpSettings setSimulateWorstCaseFigPhotoBackgroundSize:]
  -[PUOneUpSettings bounceSpringDamping]
  -[PUOneUpSettings setBounceSpringDamping:]
  -[PUOneUpSettings setPlayGIFSettledThreshold:]
  -[PUOneUpSettings doubleTapZoomAreaExcludesBackground]
  -[PUOneUpSettings showSaliencyRects]
  -[PUOneUpSettings showReframedBadge]
  -[PUOneUpSettings setInitialDetailsIndicatorDuration:]
  -[PUOneUpSettings showPaddedFacesRect]
  -[PUOneUpSettings debuggingTitleType]
  -[PUOneUpSettings playGIFMoveOutThreshold]
  -[PUOneUpSettings allowGIFPlayback]
  -[PUOneUpSettings setLivePhotoSRLCompensationManualValue:]
  -[PUOneUpSettings setShowToggleCTMButton:]
  -[PUOneUpSettings setLivePhotoInteractionThreshold:]
  -[PUOneUpSettings setPagingFrictionAdjustment:]
  -[PUOneUpSettings useURLForLargePhotosWithFigPhotoTiledLayer]
  -[PUOneUpSettings setShowFacesRect:]
  -[PUOneUpSettings allowParallax]
  -[PUOneUpSettings minimumFullCommentTitleViewWidth]
  -[PUOneUpSettings showInitialDetailsIndicator]
  -[PUOneUpSettings pagingFrictionAdjustment]
  -[PUOneUpSettings chromeAnimationType]
  -[PUOneUpSettings setShowPaddedFacesRect:]
  -[PUOneUpSettings setChromeAutoHideBehaviorOnSwipe:]
  -[PUOneUpSettings setPersistChromeVisibility:]
  -[PUOneUpSettings setUseDebuggingProgressLabel:]
  -[PUOneUpSettings setInterpageSpacing:]
  -[PUOneUpSettings setShowInitialDetailsIndicator:]
  -[PUOneUpSettings setChromeAutoHideBehaviorOnPlayButton:]
  -[PUOneUpSettings showSuggestionsForAllAssets]
  -[PUOneUpSettings setChromeAutoHideBehaviorOnLivePhoto:]
  -[PUOneUpSettings setAllowVisualIntelligence:]
  -[PUOneUpSettings setShouldFadeAccessoryView:]
  -[PUOneUpSettings showFacesTorsosRects]
  -[PUOneUpSettings simulatedAssetContentLoadingDuration]
  -[PUOneUpSettings bounceDelay]
  -[PUOneUpSettings setVitalityMaxAllowedInsetPoints:]
  -[PUOneUpSettings setAllowStatusBar:]
  -[PUOneUpSettings setBarsAreaVerticalOutset:]
  -[PUOneUpSettings setAutoplayVideo:]
  -[PUOneUpSettings setEnableFigPhotoTiledLayer:]
  -[PUOneUpSettings setSimulateAssetContentLoading:]
  -[PUOneUpSettings scrubberSettings]
  -[PUOneUpSettings viewModelCacheCountLimit]
  -[PUOneUpSettings showBestSquareRect]
  -[PUOneUpSettings setVitalityUseInsetLimiting:]
  -[PUOneUpSettings vitalityFeatherScale]
  -[PUOneUpSettings allowChromeHiding]
  -[PUOneUpSettings setInitialDetailsIndicatorDelay:]
  -[PUOneUpSettings debuggingBadges]
  -[PUOneUpSettings setApplyPerspectiveTransformDuringVitality:]
  -[PUOneUpSettings setVisibilityDurationForExitingQuickPagingRegime:]
  -[PUOneUpSettings setPlayGIFMoveOutThreshold:]
  -[PUOneUpSettings setShowLoadingIndicatorDuringDownload:]
  -[PUOneUpSettings setAccessoryInitialTopPosition:]
  -[PUOneUpSettings setUserNavigationMaximumDistance:]
  -[PUOneUpSettings alwaysShowAirPlayButton]
  -[PUOneUpSettings debuggingBadgesWhenFavorite]
  -[PUOneUpSettings alwaysShowRenderIndicator]
  -[PUOneUpSettings allowDoubleTapZoom]
  -[PUOneUpSettings setOverlappingLivePhotosCountLimit:]
  -[PUOneUpSettings setDoubleTapZoomAreaExcludesBackground:]
  -[PUOneUpSettings setShowBufferingIndicatorDuringPlay:]
  -[PUOneUpSettings setAllowPlayButtonInBars:]
  -[PUOneUpSettings allowScrubber]
  -[PUOneUpSettings setUnmuteOnChromeHide:]
  -[PUOneUpSettings useDebuggingProgressLabel]
  -[PUOneUpSettings setViewModelCacheCountLimit:]
  -[PUOneUpSettings setShowSuggestionsForAllAssets:]
  -[PUOneUpSettings setAlwaysShowAirPlayButton:]
  -[PUOneUpSettings videoPauseThreshold]
  -[PUOneUpSettings setUseGlobalCommentsVisibility:]
  -[PUOneUpSettings setLivePhotoSRLCompensationManualMode:]
  -[PUOneUpSettings setMinimumVisibleCommentedContentHeight:]
  -[PUOneUpSettings setAllowBadges:]
  -[PUOneUpSettings shouldFadeAccessoryView]
  -[PUOneUpSettings lockScrollDuringLivePhotoPlayback]
  -[PUOneUpSettings shouldMergeOverlappingLivePhotos]
  -[PUOneUpSettings chromeAutoHideBehaviorOnSwipe]
  -[PUOneUpSettings useDebuggingColors]
  -[PUOneUpSettings version]
  -[PUOneUpSettings accessoryViewType]
  -[PUOneUpSettings bounceInitialVelocity]
  -[PUOneUpSettings setAccessoryViewType:]
  -[PUOneUpSettings setAllowChromeHiding:]
  -[PUOneUpSettings setForceURLWithFigPhotoTiledLayer:]
  -[PUOneUpSettings pagingSpringPullAdjustment]
  -[PUOneUpSettings setBounceDuration:]
  -[PUOneUpSettings setChromeTimedAutoHideAnimationDuration:]
  -[PUOneUpSettings setSimulatedLoadingErrorType:]
  -[PUOneUpSettings setLivePhotoSRLCompensationFilterName:]
  -[PUOneUpSettings enableFigPhotoBackgroundSizeBasedDisplay]
  -[PUOneUpSettings setVideoShowDebugBorders:]
  -[PUOneUpSettings chromeAutoHideBehaviorOnPlayButton]
  -[PUOneUpSettings chromeTimedAutoHideAnimationDuration]
  -[PUOneUpSettings hideFloatingInfoPanelWhenHidingChrome]
  -[PUOneUpSettings hideVisualIntelligenceOverlayIn1Up]
  -[PUOneUpSettings setShowBestSquareRect:]
  -[PUOneUpSettings setSquareImageCapToHalfHeight:]
  -[PUOneUpSettings showBufferingIndicatorDuringPlay]
  -[PUOneUpSettings titleTapAction]
  -[PUOneUpSettings preferencesDidChange]
  -[PUOneUpSettings setEnableFigPhotoBackgroundSizeBasedDisplay:]
  -[PUOneUpSettings setSimulatedRenderProgress:]
  -[PUOneUpSettings videoShowDebugBorders]
  -[PUOneUpSettings setDebuggingBadges:]
  -[PUOneUpSettings setMinimumVisibleContentHeight:]
  -[PUOneUpSettings setVitalityFeatherScale:]
  -[PUOneUpSettings simulateAssetContentLoading]
  -[PUOneUpSettings setVideoPauseThreshold:]
  -[PUOneUpSettings videoRemuteOnBackgrounding]
  -[PUOneUpSettings setShowGIFLoadingDelays:]
  -[PUOneUpSettings chromeAutoHideBehaviorOnZoom]
  -[PUOneUpSettings setHideFloatingInfoPanel:]
  -[PUOneUpSettings forceURLWithFigPhotoTiledLayer]
  -[PUOneUpSettings autoplayVideo]
  -[PUOneUpSettings vitalityMaxAllowedLargeInsetPoints]
  -[PUOneUpSettings setVisibilityDurationForEnteringFastRegime:]
  -[PUOneUpSettings setShowReframedBadge:]
  -[PUOneUpSettings setParallaxModel:]
  -[PUOneUpSettings userNavigationMaximumDistance]
  -[PUOneUpSettings livePhotoInteractionThreshold]
  -[PUOneUpSettings allowStatusBar]
  -[PUOneUpSettings minNavigationDistanceForQuickPagingRegime]
  -[PUOneUpSettings useGlobalDetailsVisibility]
  -[PUOneUpSettings simulatedRenderProgress]
  -[PUOneUpSettings videoAutoplayThreshold]
  -[PUOneUpSettings setChromeBackgroundAnimationType:]
  -[PUOneUpSettings livePhotoScrubberShowForPlayback]
  -[PUOneUpSettings initialDetailsIndicatorDelay]
  -[PUOneUpSettings showOffBadgeForDisabledLivePhotos]
  -[PUOneUpSettings simulateWorstCaseFigPhotoBackgroundSize]
  -[PUOneUpSettings setDefaultZoomInFactor:]
  -[PUOneUpSettings setAllowUserTransform:]
  -[PUOneUpSettings accessoryInitialTopPosition]
  -[PUOneUpSettings showLoadingIndicatorDuringDownload]
  -[PUOneUpSettings minimumVisibleContentHeight]
  -[PUOneUpSettings setVisibilityDurationForExitingFastRegime:]
  -[PUOneUpSettings visibilityDurationForEnteringFastRegime]
  -[PUOneUpSettings allowPlayButtonInBars]
  -[PUOneUpSettings setDoubleTapZoomFactor:]
  -[PUOneUpSettings setHideToolbarWhenShowingAccessoryView:]
  -[PUOneUpSettings playGIFEnterThreshold]
  -[PUOneUpSettings persistChromeVisibility]
  -[PUOneUpSettings unmuteOnChromeHide]
  -[PUOneUpSettings enableSuggestionsAnalysis]
  -[PUOneUpSettings chromeAutoHideBehaviorOnLivePhoto]
  -[PUOneUpSettings initialDetailsIndicatorDuration]
  -[PUOneUpSettings setAlwaysShowRenderIndicator:]
  -[PUOneUpSettings setUseGlobalDetailsVisibility:]
  -[PUOneUpSettings setAllowGIFPlayback:]
  -[PUOneUpSettings setHideVisualIntelligenceOverlayIn1Up:]
  -[PUOneUpSettings vitalityMaxAllowedInsetPoints]
  -[PUOneUpSettings chromeBackgroundAnimationType]
  -[PUOneUpSettings allowToggleOriginalBarItem]
  -[PUOneUpSettings livePhotoSRLCompensationManualMode]
  -[PUOneUpSettings simulateLoadingError]
  -[PUOneUpSettings allowAutoplayVideoForAsset:]
  -[PUOneUpSettings autoplayScrubberWidth]
  -[PUOneUpSettings defaultZoomInFactor]
  -[PUOneUpSettings minNavigationDistanceForFastRegime]
  -[PUOneUpSettings showGIFLoadingDelays]
  -[PUOneUpSettings setSimulatedAssetContentLoadingDuration:]
  -[PUOneUpSettings setAllowDoubleTapZoom:]
  -[PUOneUpSettings applyPerspectiveTransformDuringVitality]
  -[PUOneUpSettings setLivePhotoScrubberShowForPlayback:]


PUOneUpSuggestionsController : NSObject <PUBrowsingViewModelChangeObserver>
 @property  BOOL inFocus
 @property  PUAssetReference *focusedAssetReference
 @property  double lastFocusedAssetReferenceChangeTime
 @property  BOOL focusedLongEnough
 @property  NSMutableDictionary *suggestionInfos
 @property  PUOneUpSuggestionsProvider *suggestionsProvider
 @property  PUBrowsingViewModel *browsingViewModel
 @property  <PUOneUpSuggestionsControllerDelegate> *delegate
 @property  BOOL viewVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpSuggestionsController invalidateLayout]
  -[PUOneUpSuggestionsController focusedAssetReference]
  -[PUOneUpSuggestionsController browsingViewModel]
  -[PUOneUpSuggestionsController _invalidateInFocus]
  -[PUOneUpSuggestionsController _updateSuggestions]
  -[PUOneUpSuggestionsController _dismissSuggestionInfo:]
  -[PUOneUpSuggestionsController invalidateSuggestions]
  -[PUOneUpSuggestionsController _suggestionInfoForAssetReference:createIfNeeded:]
  -[PUOneUpSuggestionsController _updateIfNeeded]
  -[PUOneUpSuggestionsController setInFocus:]
  -[PUOneUpSuggestionsController _invalidateActiveSuggestionsWindow]
  -[PUOneUpSuggestionsController setLastFocusedAssetReferenceChangeTime:]
  -[PUOneUpSuggestionsController _setNeedsUpdate]
  -[PUOneUpSuggestionsController .cxx_destruct]
  -[PUOneUpSuggestionsController _canKeepDisplayingSuggestionsForAssetReference:]
  -[PUOneUpSuggestionsController setViewVisible:]
  -[PUOneUpSuggestionsController isFocusedLongEnough]
  -[PUOneUpSuggestionsController initWithSuggestionsProvider:browsingViewModel:]
  -[PUOneUpSuggestionsController setFocusedLongEnough:]
  -[PUOneUpSuggestionsController setDelegate:]
  -[PUOneUpSuggestionsController viewModel:didChange:]
  -[PUOneUpSuggestionsController isViewVisible]
  -[PUOneUpSuggestionsController init]
  -[PUOneUpSuggestionsController _needsUpdate]
  -[PUOneUpSuggestionsController isInFocus]
  -[PUOneUpSuggestionsController _removeSuggestionInfoForAssetReference:]
  -[PUOneUpSuggestionsController _handleSuggestionForAssetReference:]
  -[PUOneUpSuggestionsController _invalidateFocusedAssetReference]
  -[PUOneUpSuggestionsController suggestionsProvider]
  -[PUOneUpSuggestionsController delegate]
  -[PUOneUpSuggestionsController suggestionInfos]
  -[PUOneUpSuggestionsController _updateActiveSuggestionsWindowIfNeeded]
  -[PUOneUpSuggestionsController lastFocusedAssetReferenceChangeTime]
  -[PUOneUpSuggestionsController _requestSuggestionForAssetReference:]
  -[PUOneUpSuggestionsController invalidateLayoutForAssetReference:]
  -[PUOneUpSuggestionsController _invalidateSuggestionsVisibility]
  -[PUOneUpSuggestionsController _handleDataSourceChange:]
  -[PUOneUpSuggestionsController _updateFocusedAssetReferenceIfNeeded]
  -[PUOneUpSuggestionsController _updateInFocus]
  -[PUOneUpSuggestionsController _canBeginDisplayingSuggestionsForAssetReference:]
  -[PUOneUpSuggestionsController _updateFocusedLongEnoughIfNeeded]
  -[PUOneUpSuggestionsController setFocusedAssetReference:]
  -[PUOneUpSuggestionsController _invalidateFocusedLongEnough]


PUOneUpAssetSuggestionInfo : NSObject
 @property  long long state
 @property  NSProgress *progress
 @property  PXContextualNotification *contextualNotification

  // instance methods
  -[PUOneUpAssetSuggestionInfo .cxx_destruct]
  -[PUOneUpAssetSuggestionInfo setState:]
  -[PUOneUpAssetSuggestionInfo progress]
  -[PUOneUpAssetSuggestionInfo state]
  -[PUOneUpAssetSuggestionInfo setProgress:]
  -[PUOneUpAssetSuggestionInfo setContextualNotification:]
  -[PUOneUpAssetSuggestionInfo contextualNotification]


PUOneUpSuggestionsProvider : NSObject
  // class methods
  +[PUOneUpSuggestionsProvider defaultProviderWithAccessoryViewControllersManager:]

  // instance methods
  -[PUOneUpSuggestionsProvider canProvideSuggestionForAsset:]


PUOneUpTilingLayout : PUSectionedTilingLayout
 @property  <PUOneUpTilingLayoutDelegate> *delegate
 @property  {CGSize=dd} interpageSpacing
 @property  NSIndexPath *indexPathOfCurrentItem
 @property  double transitionProgress
 @property  {UIEdgeInsets=dddd} contentGuideInsets
 @property  {UIEdgeInsets=dddd} contentSafeInsets
 @property  BOOL useBackgroundTile
 @property  BOOL useBadgeTiles
 @property  BOOL useAssetExplorerReviewScreenBadgeTiles
 @property  BOOL useSelectionIndicatorTiles
 @property  BOOL useImportStatusIndicatorTiles
 @property  BOOL useReviewScreenBars
 @property  long long windowInterfaceOrientation
 @property  BOOL useVerticalReviewScreenControlBarLayout
 @property  {CGSize=dd} playButtonSize
 @property  {CGSize=dd} progressIndicatorSize
 @property  {CGSize=dd} peopleRowSize
 @property  {UIEdgeInsets=dddd} progressIndicatorContentInsets
 @property  {CGSize=dd} renderIndicatorSize
 @property  {CGSize=dd} assetExplorerReviewScreenProgressIndicatorSize
 @property  {CGSize=dd} bufferingIndicatorSize
 @property  BOOL canDisplayLoadingIndicators
 @property  BOOL useUserTransformTiles
 @property  long long tileInitialContentMode
 @property  UITraitCollection *traitCollection
 @property  {CGSize=dd} displaySizeForInsetMatching
 @property  BOOL shouldPinContentToTop
 @property  PUParallaxComputer *parallaxComputer
 @property  BOOL shouldHideMainContent
 @property  BOOL useSyndicationAttributionTile

  // class methods
  +[PUOneUpTilingLayout initialize]
  +[PUOneUpTilingLayout untransformedRectForItemWithAspectRatio:pageRect:safeInsets:]
  +[PUOneUpTilingLayout centerTileKinds]

  // instance methods
  -[PUOneUpTilingLayout setTraitCollection:]
  -[PUOneUpTilingLayout useReviewScreenBars]
  -[PUOneUpTilingLayout setRenderIndicatorSize:]
  -[PUOneUpTilingLayout setPeopleRowSize:]
  -[PUOneUpTilingLayout displaySizeForInsetMatching]
  -[PUOneUpTilingLayout setBufferingIndicatorSize:]
  -[PUOneUpTilingLayout _untransformedRectForItemAtIndexPath:pageRect:]
  -[PUOneUpTilingLayout setTileInitialContentMode:]
  -[PUOneUpTilingLayout _rectForFittingToTargetPixelSize:imagePixelSize:bestSquareUnitRect:]
  -[PUOneUpTilingLayout invalidateModelTileTransformForItemAtIndexPath:]
  -[PUOneUpTilingLayout prepareLayout]
  -[PUOneUpTilingLayout _frameForTileWithSize:centeredOnItemAtIndexPath:]
  -[PUOneUpTilingLayout useImportStatusIndicatorTiles]
  -[PUOneUpTilingLayout setUseBackgroundTile:]
  -[PUOneUpTilingLayout .cxx_destruct]
  -[PUOneUpTilingLayout interpageSpacing]
  -[PUOneUpTilingLayout _minimumBottomContentInsetsForItemAtIndexPath:]
  -[PUOneUpTilingLayout setProgressIndicatorContentInsets:]
  -[PUOneUpTilingLayout traitCollection]
  -[PUOneUpTilingLayout progressIndicatorSize]
  -[PUOneUpTilingLayout _pageRectForItemAtIndexPath:]
  -[PUOneUpTilingLayout invalidateProgressIndicatorForItemAtIndexPath:]
  -[PUOneUpTilingLayout setDelegate:]
  -[PUOneUpTilingLayout canDisplayLoadingIndicators]
  -[PUOneUpTilingLayout _getLayoutRect:transform:parallaxOffset:contentsRect:alpha:forContentOfItemAtIndexPath:options:]
  -[PUOneUpTilingLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUOneUpTilingLayout setContentSafeInsets:]
  -[PUOneUpTilingLayout invalidateVideoPlaceholderForItemAtIndexPath:]
  -[PUOneUpTilingLayout useSelectionIndicatorTiles]
  -[PUOneUpTilingLayout addLayoutInfosForTilesInRect:section:toSet:]
  -[PUOneUpTilingLayout init]
  -[PUOneUpTilingLayout useVerticalReviewScreenControlBarLayout]
  -[PUOneUpTilingLayout _getLayoutRect:transform:parallaxOffset:forContentOfItemAtIndexPath:options:]
  -[PUOneUpTilingLayout setWindowInterfaceOrientation:]
  -[PUOneUpTilingLayout setVisibleRect:]
  -[PUOneUpTilingLayout progressIndicatorContentInsets]
  -[PUOneUpTilingLayout _displayTileTransformForItemAtIndexPath:pageSize:secondaryDisplayTransform:options:]
  -[PUOneUpTilingLayout setInterpageSpacing:]
  -[PUOneUpTilingLayout setContentGuideInsets:]
  -[PUOneUpTilingLayout setUseSelectionIndicatorTiles:]
  -[PUOneUpTilingLayout shouldPinContentToTop]
  -[PUOneUpTilingLayout transitionProgress]
  -[PUOneUpTilingLayout setCanDisplayLoadingIndicators:]
  -[PUOneUpTilingLayout visibleRectForItemAtIndexPath:transitionProgress:]
  -[PUOneUpTilingLayout playButtonSize]
  -[PUOneUpTilingLayout _accessoryViewVisibilityForItemAtIndexPath:]
  -[PUOneUpTilingLayout setUseVerticalReviewScreenControlBarLayout:]
  -[PUOneUpTilingLayout _normalizedTransitionProgressFrom:withAbscissa:outNeighbor:]
  -[PUOneUpTilingLayout setUseUserTransformTiles:]
  -[PUOneUpTilingLayout assetExplorerReviewScreenProgressIndicatorSize]
  -[PUOneUpTilingLayout useSyndicationAttributionTile]
  -[PUOneUpTilingLayout setUseAssetExplorerReviewScreenBadgeTiles:]
  -[PUOneUpTilingLayout shouldHideMainContent]
  -[PUOneUpTilingLayout useUserTransformTiles]
  -[PUOneUpTilingLayout _contentOffsetForItemAtIndexPath:]
  -[PUOneUpTilingLayout setDisplaySizeForInsetMatching:]
  -[PUOneUpTilingLayout setShouldPinContentToTop:]
  -[PUOneUpTilingLayout setShouldHideMainContent:]
  -[PUOneUpTilingLayout contentGuideInsets]
  -[PUOneUpTilingLayout invalidateBadgeSizeForItemAtIndexPath:]
  -[PUOneUpTilingLayout invalidateLoadingIndicatorForItemAtIndexPath:]
  -[PUOneUpTilingLayout setUseReviewScreenBars:]
  -[PUOneUpTilingLayout setParallaxComputer:]
  -[PUOneUpTilingLayout contentSafeInsets]
  -[PUOneUpTilingLayout parallaxComputer]
  -[PUOneUpTilingLayout setUseBadgeTiles:]
  -[PUOneUpTilingLayout delegate]
  -[PUOneUpTilingLayout useBackgroundTile]
  -[PUOneUpTilingLayout setUseSyndicationAttributionTile:]
  -[PUOneUpTilingLayout peopleRowSize]
  -[PUOneUpTilingLayout setPlayButtonSize:]
  -[PUOneUpTilingLayout setProgressIndicatorSize:]
  -[PUOneUpTilingLayout invalidateContentOffsetForItemAtIndexPath:withOptions:]
  -[PUOneUpTilingLayout _isVideoPlacholderVisibleForItemAtIndexPath:]
  -[PUOneUpTilingLayout visibleRectForScrollingToItemAtIndexPath:scrollPosition:]
  -[PUOneUpTilingLayout tileInitialContentMode]
  -[PUOneUpTilingLayout _createLayoutInfoForTileWithIndexPath:kind:]
  -[PUOneUpTilingLayout _displayTileTransformForItemAtIndexPath:options:]
  -[PUOneUpTilingLayout sizeForSection:numberOfItems:]
  -[PUOneUpTilingLayout _untransformedRectForItemAtIndexPath:]
  -[PUOneUpTilingLayout _shouldShowRenderIndicatorForIndexPath:size:]
  -[PUOneUpTilingLayout setUseImportStatusIndicatorTiles:]
  -[PUOneUpTilingLayout windowInterfaceOrientation]
  -[PUOneUpTilingLayout preferredScrollInfo]
  -[PUOneUpTilingLayout setAssetExplorerReviewScreenProgressIndicatorSize:]
  -[PUOneUpTilingLayout renderIndicatorSize]
  -[PUOneUpTilingLayout invalidateLayoutWithContext:]
  -[PUOneUpTilingLayout estimatedSectionSize]
  -[PUOneUpTilingLayout useAssetExplorerReviewScreenBadgeTiles]
  -[PUOneUpTilingLayout _isShowingInfoPanelForItemAtIndexPath:]
  -[PUOneUpTilingLayout indexPathOfCurrentItem]
  -[PUOneUpTilingLayout bufferingIndicatorSize]
  -[PUOneUpTilingLayout invalidateAccessoryForItemAtIndexPath:withOptions:]
  -[PUOneUpTilingLayout _indexPathOfItemClosestToAbscissa:]
  -[PUOneUpTilingLayout _itemSize]
  -[PUOneUpTilingLayout useBadgeTiles]
  -[PUOneUpTilingLayout _invalidateContentRelatedTilesWithIndexPath:inContext:]


PUOneUpTilingLayoutInvalidationContext : PUTilingLayoutInvalidationContext
 @property  BOOL invalidatedContentInsets
 @property  BOOL invalidatedAccessoryTile
 @property  BOOL invalidatedContentOffset
 @property  BOOL invalidatedVideoPlaceholderTile
 @property  unsigned long options
 @property  BOOL invalidatedCommentsTile

  // instance methods
  -[PUOneUpTilingLayoutInvalidationContext options]
  -[PUOneUpTilingLayoutInvalidationContext _setInvalidatedVideoPlaceholderTile:]
  -[PUOneUpTilingLayoutInvalidationContext invalidatedContentOffset]
  -[PUOneUpTilingLayoutInvalidationContext _setInvalidatedContentInsets:]
  -[PUOneUpTilingLayoutInvalidationContext _setInvalidatedContentOffset:]
  -[PUOneUpTilingLayoutInvalidationContext _setOptions:]
  -[PUOneUpTilingLayoutInvalidationContext _setInvalidatedAccessoryTile:]
  -[PUOneUpTilingLayoutInvalidationContext invalidatedCommentsTile]
  -[PUOneUpTilingLayoutInvalidationContext invalidatedVideoPlaceholderTile]
  -[PUOneUpTilingLayoutInvalidationContext invalidatedAccessoryTile]
  -[PUOneUpTilingLayoutInvalidationContext invalidatedContentInsets]


PUOneUpViewController : UIViewController <PUViewControllerSpecChangeObserver, PUBrowsingViewModelChangeObserver, PUTilingViewTileSource, PUTilingViewTileTransitionDelegate, PUTilingViewScrollDelegate, UIScrollViewDelegate, PUOneUpTilingLayoutDelegate, PUInteractiveDismissalControllerDelegate, PUBarsControllerDelegate, PUOneUpBarsControllerDelegate, PUUserTransformTileViewControllerDelegate, PUPlayButtonTileViewControllerDelegate, PUBadgeTileViewControllerDelegate, PUDoubleTapZoomControllerDelegate, PUAccessoryVisibilityInteractionControllerDelegate, PHAirPlayControllerContentProvider, PUTilingViewTileUseDelegate, PUAccessoryTileViewControllerDelegate, PUOneUpAccessoryViewControllersManagerDelegate, PUOverOneUpPresentationSessionDelegate, PUOverOneUpPresentationSessionViewController, PUOneUpGestureRecognizerCoordinatorDelegate, PUOneUpAssetTransitionViewController, PUSyndicationAttributionTileViewControllerDelegate, PUAssetDisplayDescriptorNavigator, PXSettingsKeyObserver, PXDiagnosticsEnvironment, PUIrisImageTileViewControllerDelegate, PXPurgeableController, PXContextualNotificationDelegate, PUOneUpSuggestionsControllerDelegate, PUPreviewActionControllerDelegate, PUAssetActionPerformerDelegate, PXForcedDismissableViewController, PXGestureProviderDelegate, PULivePhotoVideoOverlayTileViewControllerDelegate, TPKContentControllerDelegate, PUPeopleTileDelegate, PXFloatingCardContainer, PXFloatingCardPresentationControllerDelegate, PUImageTileViewControllerPresentingDelegate, PUTilingViewControllerTransitionEndPoint>
 @property  unsigned long _options
 @property  NSObject<OS_dispatch_queue> *tipKitQueue
 @property  NSObject<OS_dispatch_queue> *preheatAssetsQueue
 @property  BOOL _needsUpdateSpec
 @property  BOOL _needsUpdateBarsController
 @property  BOOL _needsUpdatePreloadInsets
 @property  BOOL _needsUpdateLayout
 @property  BOOL _needsUpdateEditMode
 @property  BOOL _needsUpdatePreferredContentSize
 @property  BOOL _needsUpdateAudioState
 @property  BOOL _needsUpdateVideoPlayer
 @property  BOOL _needsUpdateUserActivity
 @property  BOOL _needsUpdateAccessoryView
 @property  BOOL _needsUpdateTipsPopover
 @property  BOOL _hasShownRelevantTip
 @property  BOOL _shouldShowInfoButtonTip
 @property  BOOL _shouldShowLivePhotoEffectTip
 @property  BOOL _shouldShowSydicatedPhotoTip
 @property  PUOneUpViewControllerSpec *_spec
 @property  {CGSize=dd} _layoutReferenceSize
 @property  {UIEdgeInsets=dddd} _layoutSafeAreaInsets
 @property  int appearState
 @property  PUTilingView *_tilingView
 @property  PUOneUpBarsController *_barsController
 @property  PUInteractiveSwipeDismissalController *_interactiveSwipeDismissalController
 @property  PUInteractivePinchDismissalController *_interactivePinchDismissalController
 @property  PUDoubleTapZoomController *_doubleTapZoomController
 @property  PUOneUpGestureRecognizerCoordinator *_gestureRecognizerCoordinator
 @property  PUBrowsingBackgroundTileViewController *_backgroundTileViewController
 @property  PUReviewScreenScrubberBarTileViewController *_reviewScreenScrubberBarTileViewController
 @property  PUReviewScreenControlBarTileViewController *_reviewScreenControlBarTileViewController
 @property  PUReviewScreenTopBarTileViewController *_reviewScreenTopBarTileViewController
 @property  PUReviewScreenBarsModel *_reviewScreenBarsModel
 @property  long long _windowInterfaceOrientation
 @property  PUOneUpViewController *_secondScreenBrowser
 @property  PUOneUpViewController *_mainOneUpForSecondScreenBrowser
 @property  BOOL _isPresentedForSecondScreen
 @property  BOOL _prefersCompactLayoutForSplitScreen
 @property  NSTimer *_chromeAutoHideTimer
 @property  NSArray *_hiddenTilesController
 @property  NSArray *_tileKindsToHide
 @property  PUOverOneUpPresentationSession *_overOneUpPresentationSession
 @property  unsigned long _initialActivity
 @property  PUAssetDisplayDescriptorNavigationRequest *_currentNavigationRequest
 @property  {CGSize=dd} _pendingViewTransitionSize
 @property  double _preloadInsetsBasedOffViewWidth
 @property  BOOL _isIrisPlaying
 @property  BOOL _shouldDisableTransitionsUntilAppeared
 @property  PUParallaxComputer *_parallaxComputer
 @property  BOOL _suppressColorSettings
 @property  PUOneUpAccessoryViewControllersManager *_accessoryViewControllersManager
 @property  PUAccessoryVisibilityInteractionController *_accessoryVisibilityInteractionController
 @property  BOOL _shouldShowAccessoryAfterUnlock
 @property  PULoadingIndicatorController *loadingIndicatorController
 @property  PUAggregateDictionaryTracer *aggregateDictionaryTracer
 @property  PXUserEventTracker *userEventTracker
 @property  <PUOneUpEventTracker> *eventTracker
 @property  PUOneUpSuggestionsController *suggestionController
 @property  BOOL _didPlayCurrentLivePhoto
 @property  NSUserActivity *siriActionActivity
 @property  CEKBadgeTextView *originalBadgeView
 @property  BOOL _prefersHomeIndicatorHidden
 @property  PUBrowsingOneUpVisibilityHelper *browsingOneUpVisibilityHelper
 @property  NSMutableSet *activeVideoTileControllers
 @property  BOOL videoTilesCanPlayVideo
 @property  TPKContentController *tipContentController
 @property  TPKContent *tipContent
 @property  long long detailsBecameVisibleSignPost
 @property  long long presentationOrigin
 @property  PUOneUpVisualImageAnalyzingController *visualImageAnalyzingController
 @property  UIViewController<PUAccessoryContentViewController> *currentFloatingInfoPanelAccessoryViewController
 @property  BOOL isPresentedForPreview
 @property  BOOL appearanceTransitionAnimationsDisabled
 @property  BOOL allowsPreviewActions
 @property  UIScrollView *ppt_mainScrollView
 @property  PUOneUpBarsController *ppt_barsController
 @property  PUOverOneUpPresentationSession *ppt_overOneUpPresentationSession
 @property  PUPreviewActionController *previewActionController
 @property  UIViewController *ppt_currentAccessoryViewController
 @property  NSArray *textsToHighlightForSpotlight
 @property  PUBrowsingSession *browsingSession
 @property  @? unlockDeviceStatus
 @property  @? unlockDeviceHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PXFloatingCardPresentationController *cardPresentationController

  // instance methods
  -[PUOneUpViewController unlockDeviceStatus]
  -[PUOneUpViewController setTipContent:]
  -[PUOneUpViewController browsingSession]
  -[PUOneUpViewController routingOptionsForDestination:]
  -[PUOneUpViewController viewSafeAreaInsetsDidChange]
  -[PUOneUpViewController unlockDeviceHandler]
  -[PUOneUpViewController validateCommand:]
  -[PUOneUpViewController setUnlockDeviceStatus:]
  -[PUOneUpViewController navigateToDestination:options:completionHandler:]
  -[PUOneUpViewController setUnlockDeviceHandler:]
  -[PUOneUpViewController contentScrollView]
  -[PUOneUpViewController eventTracker]
  -[PUOneUpViewController px_diagnosticsItemProvidersForPoint:inCoordinateSpace:]
  -[PUOneUpViewController prefersHomeIndicatorAutoHidden]
  -[PUOneUpViewController _invalidateAccessoryView]
  -[PUOneUpViewController prefersStatusBarHidden]
  -[PUOneUpViewController contentController:contentDidBecomeAvailable:animated:]
  -[PUOneUpViewController _updateAccessoryViewIfNeeded]
  -[PUOneUpViewController _options]
  -[PUOneUpViewController copy:]
  -[PUOneUpViewController initWithCoder:]
  -[PUOneUpViewController tilingViewControllerTransition:tilingViewToTransferToEndPoint:]
  -[PUOneUpViewController viewWillLayoutSubviews]
  -[PUOneUpViewController traitCollectionDidChange:]
  -[PUOneUpViewController tilingViewControllerTransitionTilingViewHostView:]
  -[PUOneUpViewController tipContentController]
  -[PUOneUpViewController tipContent]
  -[PUOneUpViewController _updateIfNeeded]
  -[PUOneUpViewController tilingView:dataSourceConverterForTransitionFromLayout:toLayout:]
  -[PUOneUpViewController accessoryVisibilityInteractionController:canBeginAtLocationFromProvider:]
  -[PUOneUpViewController _invalidateVideoPlayer]
  -[PUOneUpViewController setPresentedForPreview:]
  -[PUOneUpViewController _setNeedsUpdate]
  -[PUOneUpViewController contentController:didFinishWithContent:animated:]
  -[PUOneUpViewController isPresentedForPreview]
  -[PUOneUpViewController _needsUpdateAccessoryView]
  -[PUOneUpViewController _tilingView]
  -[PUOneUpViewController .cxx_destruct]
  -[PUOneUpViewController _pendingViewTransitionSize]
  -[PUOneUpViewController ppt_mainScrollView]
  -[PUOneUpViewController viewDidLoad]
  -[PUOneUpViewController _setAccessoryVisible:]
  -[PUOneUpViewController setTipContentController:]
  -[PUOneUpViewController canBecomeFirstResponder]
  -[PUOneUpViewController preferredStatusBarUpdateAnimation]
  -[PUOneUpViewController viewDidAppear:]
  -[PUOneUpViewController initWithNibName:bundle:]
  -[PUOneUpViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUOneUpViewController viewModel:didChange:]
  -[PUOneUpViewController assetActionPerformer:presentViewController:]
  -[PUOneUpViewController wantsContentVisibleAfterUnregisteringWithAirPlayController:]
  -[PUOneUpViewController airPlayControllerScreenAvailabilityChanged:]
  -[PUOneUpViewController contentViewControllerForAirPlayController:]
  -[PUOneUpViewController tilingView:tileControllerWithIndexPath:kind:dataSource:]
  -[PUOneUpViewController _setTilingView:]
  -[PUOneUpViewController _setPendingViewTransitionSize:]
  -[PUOneUpViewController tilingView:tileTransitionCoordinatorForTransitionFromLayout:toLayout:withContext:]
  -[PUOneUpViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[PUOneUpViewController _updateLayout:]
  -[PUOneUpViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUOneUpViewController tilingView:tileTransitionCoordinatorForReattachedTileControllers:context:]
  -[PUOneUpViewController scrollViewDidScroll:]
  -[PUOneUpViewController _didEndTransition]
  -[PUOneUpViewController accessoryTileViewControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController accessoryTileViewControllerWillHideToolbarWhenShowingAccessoryView:]
  -[PUOneUpViewController accessoryTileViewControllerWillHideNavigationBarWhenShowingAccessoryView:]
  -[PUOneUpViewController accessoryTileViewControllerShouldUseSquareImageWhenShowingAccessoryView:]
  -[PUOneUpViewController accessoryTileViewControllerHostViewController:]
  -[PUOneUpViewController _setNeedsUpdateLayout:]
  -[PUOneUpViewController _needsUpdate]
  -[PUOneUpViewController _spec]
  -[PUOneUpViewController tilingView:targetVisibleOriginForProposedVisibleOrigin:withLayout:]
  -[PUOneUpViewController _setNeedsUpdateAccessoryView:]
  -[PUOneUpViewController keyCommands]
  -[PUOneUpViewController _setWindowInterfaceOrientation:]
  -[PUOneUpViewController tilingView:tileTransitionCoordinatorForLayoutInvalidationContext:]
  -[PUOneUpViewController _needsUpdateLayout]
  -[PUOneUpViewController _windowInterfaceOrientation]
  -[PUOneUpViewController viewWillDisappear:]
  -[PUOneUpViewController _willBeginTransition]
  -[PUOneUpViewController _handleTouchGesture:]
  -[PUOneUpViewController canPerformAction:withSender:]
  -[PUOneUpViewController scrollViewWillBeginDragging:]
  -[PUOneUpViewController _setNeedsUpdateVideoPlayer:]
  -[PUOneUpViewController accessoryVisibilityInteractionControllerDidEnd:]
  -[PUOneUpViewController accessoryVisibilityInteractionController:isLocationFromProviderInAccessoryContent:]
  -[PUOneUpViewController accessoryVisibilityInteractionController:setAccessoryVisible:changeReason:]
  -[PUOneUpViewController accessoryVisibilityInteractionControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController viewWillAppear:]
  -[PUOneUpViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[PUOneUpViewController _updateSpecIfNeeded]
  -[PUOneUpViewController userEventTracker]
  -[PUOneUpViewController presentationOrigin]
  -[PUOneUpViewController assetActionPerformer:dismissViewController:completionHandler:]
  -[PUOneUpViewController autoEnhanceAssets:]
  -[PUOneUpViewController tilingViewControllerTransition:adoptTilingView:fromEndPoint:isCancelingTransition:animationSetupCompletionHandler:]
  -[PUOneUpViewController tilingView:tileTransitionCoordinatorForChangeFromFrame:toFrame:duration:]
  -[PUOneUpViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUOneUpViewController siriActionActivity]
  -[PUOneUpViewController settings:changedValueForKey:]
  -[PUOneUpViewController wantsSpotlightStyling]
  -[PUOneUpViewController tilingView:initialVisibleOriginWithLayout:]
  -[PUOneUpViewController _currentAssetViewModel]
  -[PUOneUpViewController _invalidateLayout]
  -[PUOneUpViewController dealloc]
  -[PUOneUpViewController accessoryTileViewControllerAccessoryViewController:]
  -[PUOneUpViewController tipKitQueue]
  -[PUOneUpViewController _updateLayoutIfNeeded]
  -[PUOneUpViewController _updatePreferredContentSizeIfNeeded]
  -[PUOneUpViewController _updateVideoPlayerIfNeeded]
  -[PUOneUpViewController px_endPointForTransition:]
  -[PUOneUpViewController loadView]
  -[PUOneUpViewController deleteAssets:]
  -[PUOneUpViewController togglePlayback:]
  -[PUOneUpViewController tilingViewControllerTransition:abandonTilingView:toEndPoint:]
  -[PUOneUpViewController contentController:clientContextMapForKeys:]
  -[PUOneUpViewController contentController:contentView:iconForCustomizationID:]
  -[PUOneUpViewController scrollViewDidEndDecelerating:]
  -[PUOneUpViewController viewDidDisappear:]
  -[PUOneUpViewController prepareForDismissingForced:]
  -[PUOneUpViewController layout:aspectRatioForItemAtIndexPath:]
  -[PUOneUpViewController _canShowWhileLocked]
  -[PUOneUpViewController _needsUpdateVideoPlayer]
  -[PUOneUpViewController setSiriActionActivity:]
  -[PUOneUpViewController _layoutReferenceSize]
  -[PUOneUpViewController _layoutSafeAreaInsets]
  -[PUOneUpViewController _setLayoutReferenceSize:]
  -[PUOneUpViewController _setLayoutSafeAreaInsets:]
  -[PUOneUpViewController pu_wantsToolbarVisible]
  -[PUOneUpViewController ppt_overOneUpPresentationSession]
  -[PUOneUpViewController initWithBrowsingSession:options:initialActivity:]
  -[PUOneUpViewController _isIrisPlaying]
  -[PUOneUpViewController oneUpAssetTransition:requestTransitionContextWithCompletion:]
  -[PUOneUpViewController oneUpAssetTransition:requestTransitionContextWithCompletion:options:]
  -[PUOneUpViewController oneUpAssetTransition:animateTransitionWithContext:duration:completion:]
  -[PUOneUpViewController oneUpAssetTransitionWillBegin:]
  -[PUOneUpViewController oneUpAssetTransitionDidEnd:]
  -[PUOneUpViewController createAssetTransitionInfo]
  -[PUOneUpViewController pu_wantsTabBarVisible]
  -[PUOneUpViewController pu_wantsNavigationBarVisible]
  -[PUOneUpViewController badgeVisibilityDidChange:]
  -[PUOneUpViewController dismissPresentedViewController:presentMenuWithCompletion:]
  -[PUOneUpViewController barsControllerViewController:]
  -[PUOneUpViewController barsControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController barsControllerContentGuideInsetsDidChange:]
  -[PUOneUpViewController _reviewScreenBarsModel]
  -[PUOneUpViewController rotateAssetsCounterclockwise:]
  -[PUOneUpViewController rotateAssetsClockwise:]
  -[PUOneUpViewController doubleTapZoomControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController doubleTapZoomControllerTilingView:]
  -[PUOneUpViewController doubleTapZoomController:delegateForGestureRecognizer:]
  -[PUOneUpViewController doubleTapZoomController:canDoubleTapBeginAtLocationFromProvider:]
  -[PUOneUpViewController _parallaxComputer]
  -[PUOneUpViewController tilingViewCanBypass20069585Check:]
  -[PUOneUpViewController imageTileViewControllerPresentingViewController:]
  -[PUOneUpViewController imageTileViewControllerShouldShowVisualIntelligenceOverlay:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerCanBeginPlaying:locationProvider:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerDisplayTileTransform:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerWillBeginPlaying:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerDidEndPlaying:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerCurrentImage:]
  -[PUOneUpViewController livePhotoVideoPlaybackTileViewControllerCurrentGainMapImage:outGainMapAvailable:outGainMapValue:]
  -[PUOneUpViewController _isPresentedForSecondScreen]
  -[PUOneUpViewController interactiveDismissalController:canBeginDismissalAtLocationFromProvider:]
  -[PUOneUpViewController interactiveDismissalControllerTilingView:]
  -[PUOneUpViewController interactiveDismissalControllerDesignatedTileController:]
  -[PUOneUpViewController interactiveDismissalControllerChangedIsHandlingDismissalInteraction:]
  -[PUOneUpViewController interactiveDismissalControllerViewController:]
  -[PUOneUpViewController interactiveDismissalControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController irisImageTileViewControllerDidBeginPlaying:]
  -[PUOneUpViewController irisImageTileViewControllerDidEndPlaying:]
  -[PUOneUpViewController irisImageTileViewControllerDidEndVitality:]
  -[PUOneUpViewController irisImageTileViewControllerViewHostingGestureRecognizers:]
  -[PUOneUpViewController irisImageTileViewController:delegateForGestureRecognizer:]
  -[PUOneUpViewController irisImageTileViewControllerDidBeginHinting:]
  -[PUOneUpViewController pushPeopleViewController:]
  -[PUOneUpViewController presentPeopleViewController:]
  -[PUOneUpViewController px_determinesPreferredStatusBarHidden]
  -[PUOneUpViewController pu_preferredBarStyle]
  -[PUOneUpViewController pu_shouldOptOutFromChromelessBars]
  -[PUOneUpViewController oneUpAccessoryViewControllersManager:preventRevealInMomentActionForAssetReference:]
  -[PUOneUpViewController oneUpAccessoryViewControllersManager:preventInternalFileRadarActionForAssetReference:]
  -[PUOneUpViewController oneUpAccessoryViewControllersManagerRequestAccessoryDismissal:]
  -[PUOneUpViewController oneUpAccessoryViewControllersManagerInvalidateAccessoryLayout:]
  -[PUOneUpViewController oneUpBarsControllerDidChangeShowingPlayPauseButton:]
  -[PUOneUpViewController oneUpBarsController:didTapPlayPauseButton:]
  -[PUOneUpViewController oneUpBarsControllerDidTapTitle:]
  -[PUOneUpViewController oneUpBarsController:isAccessoryAvailableForAssetReference:]
  -[PUOneUpViewController oneUpBarsControllerToggleDetailsVisibility:]
  -[PUOneUpViewController oneUpBarsControllerToggleCommentsVisibility:]
  -[PUOneUpViewController oneUpBarsController:canShowCommentsForAsset:]
  -[PUOneUpViewController oneUpBarsController:shouldTapBeginAtLocationFromProvider:]
  -[PUOneUpViewController oneUpBarsController:shouldHideToolbarWhenShowingAccessoryViewForAssetReference:]
  -[PUOneUpViewController oneUpBarsController:shouldHideNavigationBarWhenShowingAccessoryViewForAssetReference:]
  -[PUOneUpViewController oneUpBarsController:shouldHideStatusBarWhenShowingAccessoryViewForAssetReference:]
  -[PUOneUpViewController oneUpBarsController:willExecuteActionPerformer:]
  -[PUOneUpViewController oneUpBarsController:canShowOriginalForAsset:]
  -[PUOneUpViewController oneUpBarsControllerDidBeginShowingOriginal:]
  -[PUOneUpViewController oneUpBarsControllerDidEndShowingOriginal:]
  -[PUOneUpViewController oneUpBarsController:shouldEnableShowOriginalForAsset:]
  -[PUOneUpViewController oneUpBarsControllerDismissPresentedViewController:]
  -[PUOneUpViewController barsController:delegateForGestureRecognizer:]
  -[PUOneUpViewController oneUpBarsControllerShouldAnimateViewControllerPresentation:]
  -[PUOneUpViewController overOneUpPresentationSessionCreateIfNeeded:]
  -[PUOneUpViewController oneUpGestureRecognizerCoordinatorViewHostingTouchingGesture:]
  -[PUOneUpViewController oneUpGestureRecgonizerCoordinator:shouldAllowIrisGestureAtLocationFromProvider:]
  -[PUOneUpViewController _doubleTapZoomController]
  -[PUOneUpViewController setAppearanceTransitionAnimationsDisabled:]
  -[PUOneUpViewController initWithBrowsingSession:options:initialActivity:presentationOrigin:]
  -[PUOneUpViewController setTextsToHighlightForSpotlight:]
  -[PUOneUpViewController setAllowsPreviewActions:]
  -[PUOneUpViewController oneUpSuggestionsController:canShowSuggestionForAssetReference:]
  -[PUOneUpViewController suggestionBecameAvailable:]
  -[PUOneUpViewController layout:shouldScaleToFitSafeInsetsForItemAtIndexPath:]
  -[PUOneUpViewController layout:badgeSizeForItemAtIndexPath:contentWidth:]
  -[PUOneUpViewController layout:assetExplorerReviewScreenBadgeSizeForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowPlayButtonForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldMoveProgressIndicatorForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowPeopleRowForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldMovePeopleRowForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowBufferingIndicatorForItemAtIndexPath:]
  -[PUOneUpViewController layout:loadingIndicatorSizeForItemAtIndexPath:]
  -[PUOneUpViewController layout:modelTileTransformForItemAtIndexPath:]
  -[PUOneUpViewController layout:contentOffsetForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowAccessoryForItemAtIndexPath:]
  -[PUOneUpViewController layout:isShowingInfoPanelForItemAtIndexPath:]
  -[PUOneUpViewController layout:minimumVisibleContentHeightForItemAtIndexPath:]
  -[PUOneUpViewController layout:minimumVisibleAccessoryHeightForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowVideoPlaceholderForItemAtIndexPath:]
  -[PUOneUpViewController layout:disableInitialZoomToFillForItemAtIndexPath:]
  -[PUOneUpViewController layoutShouldShowReviewScreenScrubberBar:]
  -[PUOneUpViewController alphaForReviewScreenBarsInLayout:]
  -[PUOneUpViewController layout:bestSquareRectForItemAtIndexPath:]
  -[PUOneUpViewController layout:minimumItemHeightNeededInAccessoryForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldUseSquareImageInAccessoryForItemAtIndexPath:]
  -[PUOneUpViewController layout:shouldShowAttributionViewForItemAtIndexPath:]
  -[PUOneUpViewController layout:accessoryOffsetForItemAtIndexPath:]
  -[PUOneUpViewController initWithBrowsingSession:options:]
  -[PUOneUpViewController _preheatAdjacentAssetsForPhotosDetailsContext]
  -[PUOneUpViewController _browsingVideoPlayerDidPlayToEndTime:]
  -[PUOneUpViewController setBrowsingOneUpVisibilityHelper:]
  -[PUOneUpViewController _newOneUpLayout]
  -[PUOneUpViewController _updateLayoutReferenceSize]
  -[PUOneUpViewController _preheatInfoPanelDynamicLinking]
  -[PUOneUpViewController _updateWindowInterfaceOrientation]
  -[PUOneUpViewController _invalidateSpec]
  -[PUOneUpViewController _barsController]
  -[PUOneUpViewController _invalidateBarsControllers]
  -[PUOneUpViewController _interactiveSwipeDismissalController]
  -[PUOneUpViewController _interactivePinchDismissalController]
  -[PUOneUpViewController _initialActivity]
  -[PUOneUpViewController _performActionForType:validateOnly:]
  -[PUOneUpViewController _setInitialActivity:]
  -[PUOneUpViewController setAppearState:]
  -[PUOneUpViewController browsingOneUpVisibilityHelper]
  -[PUOneUpViewController _presentDetailsIndicator]
  -[PUOneUpViewController _scheduleTimedChromeAutoHide]
  -[PUOneUpViewController _setShouldDisableTransitionsUntilAppeared:]
  -[PUOneUpViewController aggregateDictionaryTracer]
  -[PUOneUpViewController _invalidateTipPopovers]
  -[PUOneUpViewController _invalidateUserActivity]
  -[PUOneUpViewController _isAssetEligibleForTip:]
  -[PUOneUpViewController _sendBMDiscoverabilitySignalForEvent:]
  -[PUOneUpViewController _setSuppressBackdropColorSettings:]
  -[PUOneUpViewController _cancelTimedChromeAutoHide]
  -[PUOneUpViewController _dismissFloatingInfoPanelAnimated:]
  -[PUOneUpViewController _dismissTipPopoverAnimated:completion:]
  -[PUOneUpViewController _preloadInsetsBasedOffViewWidth]
  -[PUOneUpViewController _setPreloadInsetsBasedOffViewWidth:]
  -[PUOneUpViewController _invalidatePreloadInsets]
  -[PUOneUpViewController _updatePreloadInsetsIfNeeded]
  -[PUOneUpViewController _setShouldShowInfoButtonTip:]
  -[PUOneUpViewController _setShouldShowLivePhotoEffectTip:]
  -[PUOneUpViewController _reviewScreenTopBarTileViewController]
  -[PUOneUpViewController _reviewScreenControlBarTileViewController]
  -[PUOneUpViewController _invalidateInfoPanelLayoutAnimated:]
  -[PUOneUpViewController _updateTipPopoversIfNeeded]
  -[PUOneUpViewController _isAccessoryVisible]
  -[PUOneUpViewController _accessoryContentKindForCurrentAsset]
  -[PUOneUpViewController _setPrefersHomeIndicatorHidden:]
  -[PUOneUpViewController _prefersHomeIndicatorHidden]
  -[PUOneUpViewController _updateBarsControllerIfNeeded]
  -[PUOneUpViewController _updateEditModeIfNeeded]
  -[PUOneUpViewController _updateAudioStateIfNeeded]
  -[PUOneUpViewController _updateSuggestionControllerIfNeeded]
  -[PUOneUpViewController _updateUserActivityIfNeeded]
  -[PUOneUpViewController _needsUpdateSpec]
  -[PUOneUpViewController _needsUpdateBarsController]
  -[PUOneUpViewController _needsUpdatePreloadInsets]
  -[PUOneUpViewController _needsUpdateEditMode]
  -[PUOneUpViewController _needsUpdatePreferredContentSize]
  -[PUOneUpViewController _needsUpdateAudioState]
  -[PUOneUpViewController _needsUpdateTipsPopover]
  -[PUOneUpViewController _needsUpdateUserActivity]
  -[PUOneUpViewController _gestureRecognizerCoordinator]
  -[PUOneUpViewController _accessoryVisibilityInteractionController]
  -[PUOneUpViewController _invalidatePreferredContentSize]
  -[PUOneUpViewController _invalidateAudioState]
  -[PUOneUpViewController _invalidateSuggestionController]
  -[PUOneUpViewController _updatePrefersHomeIndicatorHidden]
  -[PUOneUpViewController _accessoryViewControllersManager]
  -[PUOneUpViewController appearState]
  -[PUOneUpViewController suggestionController]
  -[PUOneUpViewController _setNeedsUpdatePreloadInsets:]
  -[PUOneUpViewController _setNeedsUpdateTipPopovers:]
  -[PUOneUpViewController _syndicationPillView]
  -[PUOneUpViewController _hasShownRelevantTip]
  -[PUOneUpViewController _didPlayCurrentLivePhoto]
  -[PUOneUpViewController _setShouldShowSyndicatedPhotoTip:]
  -[PUOneUpViewController _setNeedsUpdateSpec:]
  -[PUOneUpViewController _prefersCompactLayoutForSplitScreen]
  -[PUOneUpViewController _secondScreenBrowser]
  -[PUOneUpViewController _setNeedsUpdateAudioState:]
  -[PUOneUpViewController _setNeedsUpdatePreferredContentSize:]
  -[PUOneUpViewController _setNeedsUpdateBarsController:]
  -[PUOneUpViewController _backgroundTileViewController]
  -[PUOneUpViewController _reviewScreenScrubberBarTileViewController]
  -[PUOneUpViewController _setNeedsUpdateEditMode:]
  -[PUOneUpViewController _chromeAutoHideTimer]
  -[PUOneUpViewController _chromeAutoHideTimerFired:]
  -[PUOneUpViewController _setChromeAutoHideTimer:]
  -[PUOneUpViewController _videoPlayerAtIndexPath:layout:]
  -[PUOneUpViewController _isSecondScreenBrowserVisible]
  -[PUOneUpViewController activeVideoTileControllers]
  -[PUOneUpViewController videoTilesCanPlayVideo]
  -[PUOneUpViewController _shouldMakeChromeVisibleWhenVideoPlayerPlaysToEndTime:]
  -[PUOneUpViewController _updateViewModelWithCurrentScrollPosition]
  -[PUOneUpViewController _isCameraDetailsAccessory]
  -[PUOneUpViewController _dynamicallyLinkInfoPanel]
  -[PUOneUpViewController _presentFloatingInfoPanelAnimated:]
  -[PUOneUpViewController cardPresentationController]
  -[PUOneUpViewController setCurrentFloatingInfoPanelAccessoryViewController:]
  -[PUOneUpViewController currentFloatingInfoPanelAccessoryViewController]
  -[PUOneUpViewController _prefersFloatingiPadInfoPanel]
  -[PUOneUpViewController _toggleDetailsVisibility]
  -[PUOneUpViewController setDetailsBecameVisibleSignPost:]
  -[PUOneUpViewController detailsBecameVisibleSignPost]
  -[PUOneUpViewController _toggleAccessoryVisibility]
  -[PUOneUpViewController _shouldUseGlobalAccessoryViewVisibility]
  -[PUOneUpViewController _isTipPopoverVisible]
  -[PUOneUpViewController _setHasShownRelevantTip:]
  -[PUOneUpViewController originalBadgeView]
  -[PUOneUpViewController setOriginalBadgeView:]
  -[PUOneUpViewController _currentAssetRect]
  -[PUOneUpViewController _updateActiveVideoTilesCanDisplayVideo]
  -[PUOneUpViewController _assetReferenceAtIndexPath:layout:]
  -[PUOneUpViewController _assetViewModelAtIndexPath:layout:]
  -[PUOneUpViewController _shouldShowInfoButtonTip]
  -[PUOneUpViewController _shouldShowLivePhotoEffectTip]
  -[PUOneUpViewController _shouldShowSydicatedPhotoTip]
  -[PUOneUpViewController _presentTipPopovers:content:animated:]
  -[PUOneUpViewController _updateBackgroundTileViewController]
  -[PUOneUpViewController _updateReviewScreenBars]
  -[PUOneUpViewController _isLayoutAffectedBySpecChange:]
  -[PUOneUpViewController _arrowKey:]
  -[PUOneUpViewController toggleInspector:]
  -[PUOneUpViewController _isAccessoryAvailableForCurrentAsset]
  -[PUOneUpViewController toggleEditor:]
  -[PUOneUpViewController shareAssets:]
  -[PUOneUpViewController trashAssets:]
  -[PUOneUpViewController trashAssetsWithoutConfirmation:]
  -[PUOneUpViewController hideAssets:]
  -[PUOneUpViewController favoriteAssets:]
  -[PUOneUpViewController duplicateAssets:]
  -[PUOneUpViewController addAssetsToAlbum:]
  -[PUOneUpViewController printAssets:]
  -[PUOneUpViewController toggleViewer:]
  -[PUOneUpViewController _canAdvertiseKeyCommands]
  -[PUOneUpViewController _editAdjust:]
  -[PUOneUpViewController _editFilter:]
  -[PUOneUpViewController _editCrop:]
  -[PUOneUpViewController _abandonTileController:]
  -[PUOneUpViewController _configureAdoptedTileController:]
  -[PUOneUpViewController _presentAlertForUnplayableAssetReference:]
  -[PUOneUpViewController _invalidateEditMode]
  -[PUOneUpViewController _currentContentTileController]
  -[PUOneUpViewController loadingIndicatorController]
  -[PUOneUpViewController _isDrivingScrubbing]
  -[PUOneUpViewController _dimFloatingInfoPanelAnimated:]
  -[PUOneUpViewController _updateFloatingInfoPanel]
  -[PUOneUpViewController _setDidPlayCurrentLivePhoto:]
  -[PUOneUpViewController _assetsToPrefetch]
  -[PUOneUpViewController _assetsToPrefetchUsingDataSource:startingAt:count:reverseDirection:]
  -[PUOneUpViewController _allowsShowingVisualIntelligenceForAsset:]
  -[PUOneUpViewController _setBackgroundTileViewController:]
  -[PUOneUpViewController _setReviewScreenTopBarTileViewController:]
  -[PUOneUpViewController _setReviewScreenControlBarTileViewController:]
  -[PUOneUpViewController _setReviewScreenScrubberBarTileViewController:]
  -[PUOneUpViewController presentErrorFromLoadingIndicator:]
  -[PUOneUpViewController _shouldDisableTransitionsUntilAppeared]
  -[PUOneUpViewController _fixAssetViewModelTileTransformIfNecessary:]
  -[PUOneUpViewController _accessoryContentKindForAsset:]
  -[PUOneUpViewController _isLocationFromProviderInAccessoryArea:]
  -[PUOneUpViewController _isLocationFromProviderOverControl:]
  -[PUOneUpViewController _hideChromeOnPlayButtonTapWithItemIsNowPlaying:buttonIsOverlayed:]
  -[PUOneUpViewController _toggleCommentsVisibility]
  -[PUOneUpViewController _isLocationFromProvider:overTileOfKind:]
  -[PUOneUpViewController _handleTipSuggestedActionCompletedWithIdentifier:completion:]
  -[PUOneUpViewController _visualImageHasActiveTextSelectionFromProvider:]
  -[PUOneUpViewController _isLocationFromProviderOverText:]
  -[PUOneUpViewController _isLocationFromProviderOverVisualSearch:]
  -[PUOneUpViewController _isCurrentAssetAndInEditModeForAssetReference:]
  -[PUOneUpViewController _beginShowingOriginal]
  -[PUOneUpViewController _endShowingOriginal]
  -[PUOneUpViewController textsToHighlightForSpotlight]
  -[PUOneUpViewController _setMainOneUpForSecondScreenBrowser:]
  -[PUOneUpViewController _setSecondScreenBrowser:]
  -[PUOneUpViewController _shouldShowAccessoryAfterUnlock]
  -[PUOneUpViewController _setShouldShowAccessoryAfterUnlock:]
  -[PUOneUpViewController _requireUnlockedDeviceForAccessoryView]
  -[PUOneUpViewController _overOneUpPresentationSession]
  -[PUOneUpViewController _setOverOneUpPresentationSession:]
  -[PUOneUpViewController _contentTileControllerForAssetReference:]
  -[PUOneUpViewController _currentFrameForTileController:]
  -[PUOneUpViewController _tileKindsToHide]
  -[PUOneUpViewController _setHiddenTilesController:]
  -[PUOneUpViewController _hiddenTilesController]
  -[PUOneUpViewController _hideOverlays]
  -[PUOneUpViewController _unhideOverlays]
  -[PUOneUpViewController _currentPlaceholderSnapshotViewForTileController:]
  -[PUOneUpViewController _trailingContentTileController]
  -[PUOneUpViewController _leadingContentTileController]
  -[PUOneUpViewController _setIrisPlaying:]
  -[PUOneUpViewController _canAttemptNavigationToAssetDisplayDescriptor:]
  -[PUOneUpViewController _performNavigationToAssetDisplayDescriptor:beforeDate:completionHandler:]
  -[PUOneUpViewController _notifyTileIsReadyWithTimeOut:completionHandler:]
  -[PUOneUpViewController _currentAccessoryViewController]
  -[PUOneUpViewController purgeIfPossible]
  -[PUOneUpViewController px_canPerformZoomTransitionWithDetailViewController:]
  -[PUOneUpViewController createPreviewActionControllerForManagerIfNeeded:withPresentingViewController:]
  -[PUOneUpViewController previewActionController]
  -[PUOneUpViewController _isLocationFromProviderOverSyndicationAttributionPill:]
  -[PUOneUpViewController _mainOneUpForSecondScreenBrowser]
  -[PUOneUpViewController _assetDisplayDescriptorForAsset:]
  -[PUOneUpViewController navigateToAssetDisplayDescriptor:beforeDate:completionHandler:]
  -[PUOneUpViewController _setNeedsUpdateUserActivity:]
  -[PUOneUpViewController viewControllerSpec:didChange:]
  -[PUOneUpViewController tilingView:scrollInfoWithLayout:]
  -[PUOneUpViewController userTransformTileViewController:didChangeModelTileTransform:]
  -[PUOneUpViewController userTransformTileViewController:didChangeIsUserInteracting:]
  -[PUOneUpViewController userTransformTileViewController:shouldReceiveTouchAtLocationFromProvider:]
  -[PUOneUpViewController userTransformTileViewControllerSpotlightTextsToHighlight:]
  -[PUOneUpViewController userTransformTileViewControllerPresentingImageTileView:]
  -[PUOneUpViewController playButtonTileViewControllerShouldShowPauseButton:]
  -[PUOneUpViewController playButtonTileViewControllerShouldShowPlayButtonWhileActivated:]
  -[PUOneUpViewController playButtonTileViewControllerDidTapButton:]
  -[PUOneUpViewController playButtonTileViewController:delayForButtonAnimation:]
  -[PUOneUpViewController overOneUpPresentationSessionTilingView:]
  -[PUOneUpViewController overOneUpPresentationSessionCurrentTileController:]
  -[PUOneUpViewController overOneUpPresentationSessionBrowserViewModel:]
  -[PUOneUpViewController overOneUpPresentationSessionViewController:]
  -[PUOneUpViewController overOneUpPresentationSessionPresentingViewControllerIsReady:]
  -[PUOneUpViewController overOneUpPresentationSession:didPresent:]
  -[PUOneUpViewController overOneUpPresentationSessionDidFinish:]
  -[PUOneUpViewController additionalContextMenuActionsForAttributionTileViewController:]
  -[PUOneUpViewController contextualNotification:containingFrameInCoordinateSpace:]
  -[PUOneUpViewController preferredContainerViewForContextualNotification:]
  -[PUOneUpViewController preferredAnimationForContextualNotification:]
  -[PUOneUpViewController contextualNotification:shouldPassthroughPoint:inCoordinateSpace:]
  -[PUOneUpViewController contextualNotificationWasTapped:]
  -[PUOneUpViewController previewActionControllerPreventRevealInMomentAction:]
  -[PUOneUpViewController gestureProviderCurrentAssetRect:]
  -[PUOneUpViewController gestureProvider:didTriggerEvent:]
  -[PUOneUpViewController setCardPresentationController:]
  -[PUOneUpViewController presentationController:dismissTappedForViewController:]
  -[PUOneUpViewController initWithBrowsingSession:]
  -[PUOneUpViewController px_HDRFocus]
  -[PUOneUpViewController px_imageModulationIntensity]
  -[PUOneUpViewController _presentPopOverFromOneUpPresentationSession:animated:]
  -[PUOneUpViewController restoreAssets:]
  -[PUOneUpViewController restoreAssetsWithoutConfirmation:]
  -[PUOneUpViewController presentErrorFromVideoPlaybackAttempt:]
  -[PUOneUpViewController ppt_scrollableBoundsForTesting]
  -[PUOneUpViewController ppt_barsController]
  -[PUOneUpViewController ppt_toggleAccessoryView]
  -[PUOneUpViewController ppt_currentAccessoryViewController]
  -[PUOneUpViewController ppt_playCurrentLivePhotoWithCompletionHandler:]
  -[PUOneUpViewController ppt_notifyWhenFullQualityIsDisplayedWithTimeout:handler:]
  -[PUOneUpViewController pu_debugCurrentAsset]
  -[PUOneUpViewController pu_debugCurrentViewModel]
  -[PUOneUpViewController pu_debugRows]
  -[PUOneUpViewController preheatAssetsQueue]
  -[PUOneUpViewController _setReviewScreenBarsModel:]
  -[PUOneUpViewController _setTileKindsToHide:]
  -[PUOneUpViewController _currentNavigationRequest]
  -[PUOneUpViewController _setCurrentNavigationRequest:]
  -[PUOneUpViewController _suppressColorSettings]
  -[PUOneUpViewController visualImageAnalyzingController]
  -[PUOneUpViewController appearanceTransitionAnimationsDisabled]
  -[PUOneUpViewController allowsPreviewActions]


PUOneUpViewControllerSpec : PUViewControllerSpec
 @property  PUOneUpViewControllerSpecChange *currentChange
 @property  BOOL shouldPlaceButtonsInNavigationBar
 @property  BOOL shouldUseCompactTitleView
 @property  double maximumToolbarHeight
 @property  double maximumAccessoryToolbarHeight
 @property  BOOL shouldUseContentGuideInsets
 @property  BOOL shouldUseUserTransformTiles
 @property  BOOL shouldAutoplayOnAppear
 @property  BOOL shouldDisplayBadges
 @property  BOOL shouldDisplayAssetExplorerReviewScreenBadges
 @property  BOOL shouldDisplayPlayButtons
 @property  BOOL shouldDisplayProgressIndicators
 @property  BOOL shouldDisplayPeopleRow
 @property  BOOL shouldDisplayBufferingIndicators
 @property  BOOL canDisplayLoadingIndicators
 @property  BOOL shouldDisplayEmptyPlaceholder
 @property  UIColor *backgroundColorOverride
 @property  {CGSize=dd} progressIndicatorSize
 @property  {CGSize=dd} peopleRowSize
 @property  {UIEdgeInsets=dddd} progressIndicatorContentInsets
 @property  {CGSize=dd} bufferingIndicatorSize
 @property  BOOL shouldUseCompactCommentsTitle
 @property  long long tileInitialContentMode
 @property  BOOL shouldCounterrotateReviewScreenBars
 @property  BOOL shouldPinContentToTop
 @property  BOOL shouldLayoutReviewScreenControlBarVertically
 @property  BOOL shouldPlaceScrubberInScrubberBar
 @property  BOOL isChromeVisible
 @property  BOOL isPresentedForPreview
 @property  BOOL isShowingPlayPauseButtonInBars
 @property  unsigned long options
 @property  BOOL allowAccessoryVisibility
 @property  BOOL allowSuggestions
 @property  BOOL allowDoneButton
 @property  BOOL allowTapOnTitle
 @property  BOOL shouldShowTitleView
 @property  BOOL shouldDisplaySelectionIndicators
 @property  BOOL shouldDisplayAssetExplorerReviewScreenProgressIndicators
 @property  {CGSize=dd} assetExplorerReviewScreenProgressIndicatorSize
 @property  BOOL shouldDisplayReviewScreenBars
 @property  BOOL shouldDisableNavigationBarsVisibility
 @property  BOOL shouldUseSpotlightStyling
 @property  {CGSize=dd} playButtonSize
 @property  {CGSize=dd} renderIndicatorSize
 @property  BOOL shouldDisplaySyndicationAttribution
 @property  BOOL prefersFloatingiPadInfoPanel
 @property  BOOL hideNavigationBarWhenShowingAccessoryView
 @property  BOOL hideScrubberWhenShowingAccessoryView
 @property  BOOL prefersSquareImageInDetails
 @property  BOOL hideStatusBarWhenShowingAccessoryView
 @property  BOOL hideBadgesWhenShowingAccessoryView

  // instance methods
  -[PUOneUpViewControllerSpec backgroundColorOverride]
  -[PUOneUpViewControllerSpec allowDoneButton]
  -[PUOneUpViewControllerSpec setHideBadgesWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec _setShouldDisplayAssetExplorerReviewScreenBadges:]
  -[PUOneUpViewControllerSpec _setShouldDisplayBadges:]
  -[PUOneUpViewControllerSpec shouldDisplayProgressIndicators]
  -[PUOneUpViewControllerSpec isShowingPlayPauseButtonInBars]
  -[PUOneUpViewControllerSpec shouldDisplayPeopleRow]
  -[PUOneUpViewControllerSpec setPrefersFloatingiPadInfoPanel:]
  -[PUOneUpViewControllerSpec setHideNavigationBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec _setPrefersSquareImageInDetails:]
  -[PUOneUpViewControllerSpec shouldAutoplayOnAppear]
  -[PUOneUpViewControllerSpec _setPeopleRowSize:]
  -[PUOneUpViewControllerSpec _setMaximumAccessoryToolbarHeight:]
  -[PUOneUpViewControllerSpec updateIfNeeded]
  -[PUOneUpViewControllerSpec setPresentedForPreview:]
  -[PUOneUpViewControllerSpec _setHideNavigationBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec options]
  -[PUOneUpViewControllerSpec isPresentedForPreview]
  -[PUOneUpViewControllerSpec hideStatusBarWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpec prefersFloatingiPadInfoPanel]
  -[PUOneUpViewControllerSpec .cxx_destruct]
  -[PUOneUpViewControllerSpec _setShouldPinContentToTop:]
  -[PUOneUpViewControllerSpec initWithOptions:]
  -[PUOneUpViewControllerSpec shouldUseSpotlightStyling]
  -[PUOneUpViewControllerSpec setPrefersSquareImageInDetails:]
  -[PUOneUpViewControllerSpec spotlightBackgroundColor]
  -[PUOneUpViewControllerSpec maximumAccessoryToolbarHeight]
  -[PUOneUpViewControllerSpec _setShouldPlaceScrubberInScrubberBar:]
  -[PUOneUpViewControllerSpec progressIndicatorSize]
  -[PUOneUpViewControllerSpec _setShouldDisplayProgressIndicators:]
  -[PUOneUpViewControllerSpec _setShouldUseCompactTitleView:]
  -[PUOneUpViewControllerSpec shouldUseCompactTitleView]
  -[PUOneUpViewControllerSpec setChromeVisible:]
  -[PUOneUpViewControllerSpec canDisplayLoadingIndicators]
  -[PUOneUpViewControllerSpec _setHideBadgesWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec shouldDisplayAssetExplorerReviewScreenProgressIndicators]
  -[PUOneUpViewControllerSpec setHideScrubberWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec progressIndicatorContentInsets]
  -[PUOneUpViewControllerSpec currentChange]
  -[PUOneUpViewControllerSpec prefersSquareImageInDetails]
  -[PUOneUpViewControllerSpec shouldDisplayEmptyPlaceholder]
  -[PUOneUpViewControllerSpec shouldPinContentToTop]
  -[PUOneUpViewControllerSpec shouldDisplayBufferingIndicators]
  -[PUOneUpViewControllerSpec isChromeVisible]
  -[PUOneUpViewControllerSpec _setShouldDisplayPeopleRow:]
  -[PUOneUpViewControllerSpec playButtonSize]
  -[PUOneUpViewControllerSpec shouldUseContentGuideInsets]
  -[PUOneUpViewControllerSpec _setShouldUseContentGuideInsets:]
  -[PUOneUpViewControllerSpec _setHideScrubberWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec _setShouldUseCompactCommentsTitle:]
  -[PUOneUpViewControllerSpec _setShouldDisplayBufferingIndicators:]
  -[PUOneUpViewControllerSpec setShowingPlayPauseButtonInBars:]
  -[PUOneUpViewControllerSpec assetExplorerReviewScreenProgressIndicatorSize]
  -[PUOneUpViewControllerSpec hideBadgesWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpec _setCanDisplayLoadingIndicators:]
  -[PUOneUpViewControllerSpec _shouldForceBlackBackground]
  -[PUOneUpViewControllerSpec shouldDisplaySyndicationAttribution]
  -[PUOneUpViewControllerSpec _setBufferingIndicatorSize:]
  -[PUOneUpViewControllerSpec _setShouldLayoutReviewScreenControlBarVertically:]
  -[PUOneUpViewControllerSpec hideNavigationBarWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpec shouldDisplayAssetExplorerReviewScreenBadges]
  -[PUOneUpViewControllerSpec shouldUseUserTransformTiles]
  -[PUOneUpViewControllerSpec shouldDisplayReviewScreenBars]
  -[PUOneUpViewControllerSpec newSpecChange]
  -[PUOneUpViewControllerSpec _setShouldPlaceButtonsInNavigationBar:]
  -[PUOneUpViewControllerSpec setHideStatusBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec _setBackgroundColorOverride:]
  -[PUOneUpViewControllerSpec peopleRowSize]
  -[PUOneUpViewControllerSpec allowTapOnTitle]
  -[PUOneUpViewControllerSpec shouldPlaceButtonsInNavigationBar]
  -[PUOneUpViewControllerSpec _setShouldAutoplayOnAppear:]
  -[PUOneUpViewControllerSpec shouldDisplaySelectionIndicators]
  -[PUOneUpViewControllerSpec tileInitialContentMode]
  -[PUOneUpViewControllerSpec _setShouldDisplayEmptyPlaceholder:]
  -[PUOneUpViewControllerSpec _setProgressIndicatorSize:]
  -[PUOneUpViewControllerSpec _setHideStatusBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpec shouldDisableNavigationBarsVisibility]
  -[PUOneUpViewControllerSpec _isAssetExplorerReviewScreen]
  -[PUOneUpViewControllerSpec hideScrubberWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpec _setMaximumToolbarHeight:]
  -[PUOneUpViewControllerSpec allowAccessoryVisibility]
  -[PUOneUpViewControllerSpec _setShouldCounterrotateReviewScreenBars:]
  -[PUOneUpViewControllerSpec maximumToolbarHeight]
  -[PUOneUpViewControllerSpec renderIndicatorSize]
  -[PUOneUpViewControllerSpec _setProgressIndicatorContentInsets:]
  -[PUOneUpViewControllerSpec _setRenderIndicatorSize:]
  -[PUOneUpViewControllerSpec shouldDisplayPlayButtons]
  -[PUOneUpViewControllerSpec shouldShowTitleView]
  -[PUOneUpViewControllerSpec _setShouldDisplaySyndicationAttribution:]
  -[PUOneUpViewControllerSpec shouldDisplayBadges]
  -[PUOneUpViewControllerSpec bufferingIndicatorSize]
  -[PUOneUpViewControllerSpec shouldPlaceScrubberInScrubberBar]
  -[PUOneUpViewControllerSpec allowSuggestions]
  -[PUOneUpViewControllerSpec _setTileInitialContentMode:]
  -[PUOneUpViewControllerSpec shouldUseCompactCommentsTitle]
  -[PUOneUpViewControllerSpec _setShouldUseUserTransformTiles:]
  -[PUOneUpViewControllerSpec _setShouldDisplayPlayButtons:]
  -[PUOneUpViewControllerSpec shouldCounterrotateReviewScreenBars]
  -[PUOneUpViewControllerSpec shouldLayoutReviewScreenControlBarVertically]


PUOneUpViewControllerSpecChange : PUViewControllerSpecChange
 @property  BOOL chromeVisibilityChanged
 @property  BOOL presentedForPreviewChanged
 @property  BOOL shouldPlaceButtonsInNavigationBarChanged
 @property  BOOL shouldUseCompactTitleViewChanged
 @property  BOOL maximumToolbarHeightChanged
 @property  BOOL maximumAccessoryToolbarHeightChanged
 @property  BOOL shouldUseContentGuideInsetsChanged
 @property  BOOL shouldUseUserTransformTilesChanged
 @property  BOOL shouldDisplayBadgesChanged
 @property  BOOL shouldDisplayAssetExplorerReviewScreenBadgesChanged
 @property  BOOL shouldDisplayPlayButtonsChanged
 @property  BOOL shouldDisplayProgressIndicatorsChanged
 @property  BOOL shouldDisplayPeopleRowChanged
 @property  BOOL shouldDisplayEmptyPlaceholderChanged
 @property  BOOL shouldAutoplayOnAppearChanged
 @property  BOOL shouldDisplayBufferingIndicatorsChanged
 @property  BOOL canDisplayLoadingIndicatorsChanged
 @property  BOOL backgroundColorOverrideChanged
 @property  BOOL progressIndicatorSizeChanged
 @property  BOOL peopleRowSizeChanged
 @property  BOOL progressIndicatorContentInsetsChanged
 @property  BOOL bufferingIndicatorSizeChanged
 @property  BOOL renderIndicatorSizeChanged
 @property  BOOL shouldUseCompactCommentsTitleChanged
 @property  BOOL tileInitialContentModeChanged
 @property  BOOL shouldCounterrotateReviewScreenBarsChanged
 @property  BOOL shouldPinContentToTopChanged
 @property  BOOL shouldLayoutReviewScreenControlBarVerticallyChanged
 @property  BOOL shouldPlaceScrubberInScrubberBarChanged
 @property  BOOL shouldDisplaySyndicationAttribution
 @property  BOOL hideNavigationBarWhenShowingAccessoryView
 @property  BOOL hideScrubberWhenShowingAccessoryView
 @property  BOOL prefersSquareImageInDetails
 @property  BOOL hideStatusBarWhenShowingAccessoryView
 @property  BOOL hideBadgesWhenShowingAccessoryView

  // instance methods
  -[PUOneUpViewControllerSpecChange changed]
  -[PUOneUpViewControllerSpecChange canDisplayLoadingIndicatorsChanged]
  -[PUOneUpViewControllerSpecChange _setShouldCounterrotateReviewScreenBarsChanged:]
  -[PUOneUpViewControllerSpecChange _setPeopleRowSizeChanged:]
  -[PUOneUpViewControllerSpecChange shouldUseUserTransformTilesChanged]
  -[PUOneUpViewControllerSpecChange shouldDisplayPeopleRowChanged]
  -[PUOneUpViewControllerSpecChange _setPrefersSquareImageInDetails:]
  -[PUOneUpViewControllerSpecChange maximumToolbarHeightChanged]
  -[PUOneUpViewControllerSpecChange maximumAccessoryToolbarHeightChanged]
  -[PUOneUpViewControllerSpecChange shouldCounterrotateReviewScreenBarsChanged]
  -[PUOneUpViewControllerSpecChange _setBackgroundColorOverrideChanged:]
  -[PUOneUpViewControllerSpecChange _setHideNavigationBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpecChange _setShouldPinContentToTopChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayBufferingIndicatorsChanged:]
  -[PUOneUpViewControllerSpecChange shouldDisplayProgressIndicatorsChanged]
  -[PUOneUpViewControllerSpecChange _setTileInitialContentModeChanged:]
  -[PUOneUpViewControllerSpecChange hideStatusBarWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpecChange _setShouldPlaceButtonsInNavigationBarChanged:]
  -[PUOneUpViewControllerSpecChange tileInitialContentModeChanged]
  -[PUOneUpViewControllerSpecChange _setShouldLayoutReviewScreenControlBarVerticallyChanged:]
  -[PUOneUpViewControllerSpecChange _setRenderIndicatorSizeChanged:]
  -[PUOneUpViewControllerSpecChange _setMaximumAccessoryToolbarHeightChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayProgressIndicatorsChanged:]
  -[PUOneUpViewControllerSpecChange shouldPlaceButtonsInNavigationBarChanged]
  -[PUOneUpViewControllerSpecChange peopleRowSizeChanged]
  -[PUOneUpViewControllerSpecChange progressIndicatorContentInsetsChanged]
  -[PUOneUpViewControllerSpecChange _setHideBadgesWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayPeopleRowChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayPlayButtonsChanged:]
  -[PUOneUpViewControllerSpecChange shouldDisplayBadgesChanged]
  -[PUOneUpViewControllerSpecChange backgroundColorOverrideChanged]
  -[PUOneUpViewControllerSpecChange shouldDisplayBufferingIndicatorsChanged]
  -[PUOneUpViewControllerSpecChange progressIndicatorSizeChanged]
  -[PUOneUpViewControllerSpecChange _setShouldUseCompactCommentsTitleChanged:]
  -[PUOneUpViewControllerSpecChange prefersSquareImageInDetails]
  -[PUOneUpViewControllerSpecChange chromeVisibilityChanged]
  -[PUOneUpViewControllerSpecChange bufferingIndicatorSizeChanged]
  -[PUOneUpViewControllerSpecChange _setChromeVisibilityChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldAutoplayOnAppearChanged:]
  -[PUOneUpViewControllerSpecChange shouldDisplayPlayButtonsChanged]
  -[PUOneUpViewControllerSpecChange _setBufferingIndicatorSizeChanged:]
  -[PUOneUpViewControllerSpecChange _setHideScrubberWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpecChange _setMaximumToolbarHeightChanged:]
  -[PUOneUpViewControllerSpecChange hideBadgesWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpecChange shouldDisplayAssetExplorerReviewScreenBadgesChanged]
  -[PUOneUpViewControllerSpecChange shouldDisplaySyndicationAttribution]
  -[PUOneUpViewControllerSpecChange renderIndicatorSizeChanged]
  -[PUOneUpViewControllerSpecChange _setProgressIndicatorSizeChanged:]
  -[PUOneUpViewControllerSpecChange hideNavigationBarWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpecChange shouldUseCompactCommentsTitleChanged]
  -[PUOneUpViewControllerSpecChange presentedForPreviewChanged]
  -[PUOneUpViewControllerSpecChange shouldDisplayEmptyPlaceholderChanged]
  -[PUOneUpViewControllerSpecChange _setCanDisplayLoadingIndicatorsChanged:]
  -[PUOneUpViewControllerSpecChange shouldPlaceScrubberInScrubberBarChanged]
  -[PUOneUpViewControllerSpecChange _setShouldUseCompactTitleViewChanged:]
  -[PUOneUpViewControllerSpecChange shouldUseCompactTitleViewChanged]
  -[PUOneUpViewControllerSpecChange shouldAutoplayOnAppearChanged]
  -[PUOneUpViewControllerSpecChange shouldLayoutReviewScreenControlBarVerticallyChanged]
  -[PUOneUpViewControllerSpecChange _setHideStatusBarWhenShowingAccessoryView:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayAssetExplorerReviewScreenBadgesChanged:]
  -[PUOneUpViewControllerSpecChange shouldPinContentToTopChanged]
  -[PUOneUpViewControllerSpecChange hideScrubberWhenShowingAccessoryView]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayEmptyPlaceholderChanged:]
  -[PUOneUpViewControllerSpecChange _setPresentedForPreviewChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldPlaceScrubberInScrubberBarChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldDisplaySyndicationAttribution:]
  -[PUOneUpViewControllerSpecChange shouldUseContentGuideInsetsChanged]
  -[PUOneUpViewControllerSpecChange _setShouldDisplayBadgesChanged:]
  -[PUOneUpViewControllerSpecChange _setProgressIndicatorContentInsetsChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldUseUserTransformTilesChanged:]
  -[PUOneUpViewControllerSpecChange _setShouldUseContentGuideInsetsChanged:]


PUOperationStatus : NSObject <NSCopying>
 @property  long long state
 @property  double progress
 @property  NSError *error

  // instance methods
  -[PUOperationStatus redactedDescription]
  -[PUOperationStatus .cxx_destruct]
  -[PUOperationStatus progress]
  -[PUOperationStatus init]
  -[PUOperationStatus isEqual:]
  -[PUOperationStatus state]
  -[PUOperationStatus initWithState:progress:error:]
  -[PUOperationStatus operationStatusByMixingOperationStatus:withMixFactor:]
  -[PUOperationStatus copyWithZone:]
  -[PUOperationStatus error]


PUOverOneUpPresentationSession : NSObject <PUPhotoEditViewControllerPresentationDelegate, PUSlideshowViewControllerDelegate, PUAvalancheReviewControllerDelegate, PXActivitySharingControllerDelegate, PUOneUpPhotosSharingTransitionDelegate, PUCollectionViewLayoutProvider, PXForcedDismissableViewController, PUPhotoMarkupViewControllerObserver, PUFunEffectsViewControllerObserver, UIViewControllerTransitioningDelegate, PUOneUpSharingAnimationControllerDelegate>
 @property  PUAvalancheReviewController *_avalancheReviewController
 @property  PUSlideshowViewController *_slideshowViewController
 @property  PUEditViewController *_editViewController
 @property  PUPhotoMarkupViewController *_photoMarkupViewController
 @property  PUFunEffectsViewController *_funEffectsViewController
 @property  PUAssetReference *_stashedAssetReference
 @property  NSHashTable *_presentedViewControllers
 @property  BOOL _needsUpdatePresentedViewControllers
 @property  PUActivitySharingController *activitySharingController
 @property  <PXActivitySharingControllerDelegate> *activitySharingControllerDelegate
 @property  <PUOverOneUpPresentationSessionDelegate> *delegate
 @property  <PUOverOneUpPresentationSessionBarsDelegate> *barsDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOverOneUpPresentationSession animationControllerForPresentedController:presentingController:sourceController:]
  -[PUOverOneUpPresentationSession viewController]
  -[PUOverOneUpPresentationSession layoutAttributesForItemAtIndexPath:]
  -[PUOverOneUpPresentationSession _viewModel]
  -[PUOverOneUpPresentationSession collectionViewContentSize]
  -[PUOverOneUpPresentationSession _tilingView]
  -[PUOverOneUpPresentationSession .cxx_destruct]
  -[PUOverOneUpPresentationSession ppt_cancelActivity]
  -[PUOverOneUpPresentationSession activitySharingController]
  -[PUOverOneUpPresentationSession setDelegate:]
  -[PUOverOneUpPresentationSession layoutAttributesForElementsInRect:]
  -[PUOverOneUpPresentationSession activitySharingControllerDidCancel:]
  -[PUOverOneUpPresentationSession activitySharingController:didCompleteWithActivityType:success:]
  -[PUOverOneUpPresentationSession activitySharingControllerWillDismissActivityViewController:]
  -[PUOverOneUpPresentationSession delegate]
  -[PUOverOneUpPresentationSession _globalIndexForIndexPath:]
  -[PUOverOneUpPresentationSession presentViewController:animated:]
  -[PUOverOneUpPresentationSession setActivitySharingController:]
  -[PUOverOneUpPresentationSession layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUOverOneUpPresentationSession _indexPathForGlobalIndex:]
  -[PUOverOneUpPresentationSession prepareForDismissingForced:]
  -[PUOverOneUpPresentationSession _numberOfItems]
  -[PUOverOneUpPresentationSession _assetsDataSource]
  -[PUOverOneUpPresentationSession ppt_presentPhotoEditor]
  -[PUOverOneUpPresentationSession photoMarkupController:didFinishWithSavedAsset:]
  -[PUOverOneUpPresentationSession funEffectsViewController:didSaveAsset:withCompletion:]
  -[PUOverOneUpPresentationSession avalancheReviewControllerDidComplete:withAsset:animated:]
  -[PUOverOneUpPresentationSession oneUpSharingAnimationController:setVisibility:forAssetReference:]
  -[PUOverOneUpPresentationSession setBarsDelegate:]
  -[PUOverOneUpPresentationSession dismissViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession photosSharingTransition:layoutForAssetReference:]
  -[PUOverOneUpPresentationSession photosSharingTransition:contentOffsetForAssetReference:]
  -[PUOverOneUpPresentationSession photosSharingTransitionTransitioningView:]
  -[PUOverOneUpPresentationSession photosSharingTransition:setVisibility:forAssetReference:]
  -[PUOverOneUpPresentationSession photosSharingTransitionWillAnimatePresentation:]
  -[PUOverOneUpPresentationSession _needsUpdatePresentedViewControllers]
  -[PUOverOneUpPresentationSession _setNeedsUpdatePresentedViewControllers:]
  -[PUOverOneUpPresentationSession _setPresentedViewControllers:]
  -[PUOverOneUpPresentationSession _slideshowViewController]
  -[PUOverOneUpPresentationSession _editViewController]
  -[PUOverOneUpPresentationSession _photoMarkupViewController]
  -[PUOverOneUpPresentationSession _funEffectsViewController]
  -[PUOverOneUpPresentationSession _avalancheReviewController]
  -[PUOverOneUpPresentationSession _presentedViewControllers]
  -[PUOverOneUpPresentationSession _invalidatePresentedViewControllers]
  -[PUOverOneUpPresentationSession _updatePresentedViewControllersIfNeeded]
  -[PUOverOneUpPresentationSession isPresentingAnOverOneUpViewController]
  -[PUOverOneUpPresentationSession _setStashedAssetReference:]
  -[PUOverOneUpPresentationSession _presentPhotoMarkupViewController:]
  -[PUOverOneUpPresentationSession _presentFunEffectsViewController:animated:]
  -[PUOverOneUpPresentationSession _presentAvalancheReviewController:]
  -[PUOverOneUpPresentationSession _presentSlideshowViewController:]
  -[PUOverOneUpPresentationSession _presentScreenRoutePickerViewController:]
  -[PUOverOneUpPresentationSession _presentEditViewController:]
  -[PUOverOneUpPresentationSession _presentActivityViewController:]
  -[PUOverOneUpPresentationSession _setEditViewController:]
  -[PUOverOneUpPresentationSession _setPhotoMarkupViewController:]
  -[PUOverOneUpPresentationSession _setFunEffectsViewController:]
  -[PUOverOneUpPresentationSession _setAvalancheReviewController:]
  -[PUOverOneUpPresentationSession _setSlideshowViewController:]
  -[PUOverOneUpPresentationSession barsDelegate]
  -[PUOverOneUpPresentationSession _finishOverOneUpPresentationSessionDismissForced:animated:]
  -[PUOverOneUpPresentationSession _dismissPhotoMarkupViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _dismissFunEffectsViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _dismissSlideshowViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _dismissAvalancheReviewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _dismissEditViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _dismissActivityViewController:animated:completionHandler:]
  -[PUOverOneUpPresentationSession _popToOneUpFromViewController:animated:]
  -[PUOverOneUpPresentationSession activitySharingControllerDelegate]
  -[PUOverOneUpPresentationSession setActivitySharingControllerDelegate:]
  -[PUOverOneUpPresentationSession _finalizeAvalancheReviewControllerDismiss]
  -[PUOverOneUpPresentationSession _removeViewController:]
  -[PUOverOneUpPresentationSession _stashedAssetReference]
  -[PUOverOneUpPresentationSession _assetReferenceFromAsset:hintIndexPath:hintCollection:]
  -[PUOverOneUpPresentationSession _performNavigationRequestForAssetDisplayDescriptor:completionHandler:]
  -[PUOverOneUpPresentationSession _activitySharingControllerDidCancel:]
  -[PUOverOneUpPresentationSession _activitySharingControllerWillDismissActivityViewController:]
  -[PUOverOneUpPresentationSession _activitySharingController:didCompleteWithActivityType:success:]
  -[PUOverOneUpPresentationSession _prepareForActivitySharingControllerDismiss:completionHandler:]
  -[PUOverOneUpPresentationSession _globalIndexForAssetReference:]
  -[PUOverOneUpPresentationSession _frameForAssetReference:]
  -[PUOverOneUpPresentationSession _assetCollectionsDataSourceForCurrentModalViewController]
  -[PUOverOneUpPresentationSession _frameForItemAtIndexPath:inAssetCollectionsDataSource:allowZoom:]
  -[PUOverOneUpPresentationSession _tileCountForCurrentModalViewController]
  -[PUOverOneUpPresentationSession _assetReferenceAtGlobalIndex:]
  -[PUOverOneUpPresentationSession editController:didFinishPreparingForTransitionAfterEditingPhoto:]
  -[PUOverOneUpPresentationSession editController:didFinishPreparingForTransitionAfterEditingVideo:modificationDate:seekTime:]
  -[PUOverOneUpPresentationSession slideshowViewControllerDidFinish:withVisibleAssets:]
  -[PUOverOneUpPresentationSession photosSharingTransitionWillAnimateDismissal:]
  -[PUOverOneUpPresentationSession _currentTileController]
  -[PUOverOneUpPresentationSession avalancheReviewControllerDidComplete:animated:]
  -[PUOverOneUpPresentationSession _frameAtIndexPath:]
  -[PUOverOneUpPresentationSession ppt_presentShareSheetWithCompletion:]
  -[PUOverOneUpPresentationSession ppt_activityViewController]
  -[PUOverOneUpPresentationSession ppt_shareUsingActivityOfType:]
  -[PUOverOneUpPresentationSession ppt_tapNextButton:]
  -[PUOverOneUpPresentationSession ppt_dismissShareSheetWithCompletion:]


PUPXAssetActionManager : PUAssetActionManager
  // instance methods
  -[PUPXAssetActionManager .cxx_destruct]
  -[PUPXAssetActionManager init]
  -[PUPXAssetActionManager barButtonItemForActionType:]
  -[PUPXAssetActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUPXAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUPXAssetActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUPXAssetActionManager px_selectionManager]
  -[PUPXAssetActionManager actionPerformerForSimpleActionType:onAssetReferences:]
  -[PUPXAssetActionManager _selectionSnapshotForAssetReferences:]
  -[PUPXAssetActionManager initWithUnderlyingActionManager:]


PUPXAssetActionPerformer : PUAssetActionPerformer <PXActionPerformerDelegate>
 @property  <PXActionPerformerDelegate> *forwardingDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXAssetActionPerformer actionPerformer:didChangeState:]
  -[PUPXAssetActionPerformer performWithCompletionHandler:]
  -[PUPXAssetActionPerformer .cxx_destruct]
  -[PUPXAssetActionPerformer actionPerformer:presentViewController:]
  -[PUPXAssetActionPerformer state]
  -[PUPXAssetActionPerformer actionPerformer:dismissViewController:completionHandler:]
  -[PUPXAssetActionPerformer initWithActionType:assets:orAssetsByAssetCollection:]
  -[PUPXAssetActionPerformer initWithUnderlyingActionPerformer:]
  -[PUPXAssetActionPerformer forwardingDelegate]


PULivePhotoVariationEditOperationPerformer : PXAssetEditOperationPerformer <PUPhotoEditResourceLoaderDelegate>
 @property  PHAsset *asset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PULivePhotoVariationEditOperationPerformer .cxx_destruct]
  -[PULivePhotoVariationEditOperationPerformer asset]
  -[PULivePhotoVariationEditOperationPerformer _completeWithSuccess:error:]
  -[PULivePhotoVariationEditOperationPerformer _handleAnalysisCalculatorResponse:]
  -[PULivePhotoVariationEditOperationPerformer _handleAnalysisResult:]
  -[PULivePhotoVariationEditOperationPerformer _handleDidFinishSavingEditsForAsset:error:]
  -[PULivePhotoVariationEditOperationPerformer _calculateAnalysisResult]
  -[PULivePhotoVariationEditOperationPerformer photoEditResourceLoadRequest:didCompleteWithResult:]
  -[PULivePhotoVariationEditOperationPerformer photoEditResourceLoadRequest:mediaLoadDidFailWithError:]
  -[PULivePhotoVariationEditOperationPerformer performEditOperationWithCompletionHandler:]


_PULightingGradientView : UIView
  // instance methods
  -[_PULightingGradientView isOpaque]
  -[_PULightingGradientView initWithFrame:]
  -[_PULightingGradientView drawRect:]


PUPhotoEditPortraitToolController : PUPhotoEditToolController <PUPhotoEditApertureToolbarDelegate, CEKLightingControlDelegate, CEKSliderDelegate, PXChangeObserver, PXNavigationActionReceiver>
 @property  PUPhotoEditApertureToolbar *apertureToolbar
 @property  CEKLightingControl *lightingControl
 @property  long long toolSelection
 @property  unsigned long majorVersion
 @property  unsigned long minorVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoEditPortraitToolController lightingControlDidChangeExpanded:]
  -[PUPhotoEditPortraitToolController updateViewConstraints]
  -[PUPhotoEditPortraitToolController lightingControl:willChangeExpanded:]
  -[PUPhotoEditPortraitToolController validateCommand:]
  -[PUPhotoEditPortraitToolController lightingControlDidChangeSelectedLightingType:]
  -[PUPhotoEditPortraitToolController localizedName]
  -[PUPhotoEditPortraitToolController setMajorVersion:]
  -[PUPhotoEditPortraitToolController setMinorVersion:]
  -[PUPhotoEditPortraitToolController wantsSecondaryToolbarVisible]
  -[PUPhotoEditPortraitToolController .cxx_destruct]
  -[PUPhotoEditPortraitToolController viewDidLoad]
  -[PUPhotoEditPortraitToolController lightingControl]
  -[PUPhotoEditPortraitToolController setBackdropViewGroupName:]
  -[PUPhotoEditPortraitToolController sliderWillBeginScrolling:]
  -[PUPhotoEditPortraitToolController sliderDidScroll:]
  -[PUPhotoEditPortraitToolController sliderWillEndScrolling:withVelocity:targetContentOffset:]
  -[PUPhotoEditPortraitToolController sliderDidEndScrolling:]
  -[PUPhotoEditPortraitToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PUPhotoEditPortraitToolController majorVersion]
  -[PUPhotoEditPortraitToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditPortraitToolController compositionControllerDidChangeForAdjustments:]
  -[PUPhotoEditPortraitToolController minorVersion]
  -[PUPhotoEditPortraitToolController dealloc]
  -[PUPhotoEditPortraitToolController observable:didChange:context:]
  -[PUPhotoEditPortraitToolController toolbarIcon]
  -[PUPhotoEditPortraitToolController centerToolbarView]
  -[PUPhotoEditPortraitToolController canResetToDefaultValue]
  -[PUPhotoEditPortraitToolController wantsZoomAndPanEnabled]
  -[PUPhotoEditPortraitToolController wantsSliderKeyControl]
  -[PUPhotoEditPortraitToolController increaseSliderValue:]
  -[PUPhotoEditPortraitToolController decreaseSliderValue:]
  -[PUPhotoEditPortraitToolController installTogglePreviewGestureRecognizer:]
  -[PUPhotoEditPortraitToolController installLivePhotoPlaybackGestureRecognizer:]
  -[PUPhotoEditPortraitToolController willBecomeActiveTool]
  -[PUPhotoEditPortraitToolController toolControllerTag]
  -[PUPhotoEditPortraitToolController leadingToolbarViews]
  -[PUPhotoEditPortraitToolController _refreshFromValuesCalculator]
  -[PUPhotoEditPortraitToolController _updateApertureSliderLength]
  -[PUPhotoEditPortraitToolController _updateToolVisibilityAnimated:]
  -[PUPhotoEditPortraitToolController _updateToolContainerConstraints]
  -[PUPhotoEditPortraitToolController _updateToolConstraints]
  -[PUPhotoEditPortraitToolController setToolSelection:animated:]
  -[PUPhotoEditPortraitToolController toolSelection]
  -[PUPhotoEditPortraitToolController apertureToolbar]
  -[PUPhotoEditPortraitToolController navigateToPreviousTab:]
  -[PUPhotoEditPortraitToolController navigateToNextTab:]
  -[PUPhotoEditPortraitToolController _canRenderPortraitEffect]
  -[PUPhotoEditPortraitToolController _setupDepthControlsIfNeeded]
  -[PUPhotoEditPortraitToolController _setupLightingControlsIfNeeded]
  -[PUPhotoEditPortraitToolController _setupApertureControlsIfNeeded]
  -[PUPhotoEditPortraitToolController _depthButtonTitle]
  -[PUPhotoEditPortraitToolController _handleDepthEffectButton:]
  -[PUPhotoEditPortraitToolController _shouldShowPortraitV2]
  -[PUPhotoEditPortraitToolController _refreshLightingWithCompositionController:]
  -[PUPhotoEditPortraitToolController _handlePortraitNavigationButtons:]
  -[PUPhotoEditPortraitToolController _updateNavigationButtonsAnimated:]
  -[PUPhotoEditPortraitToolController _updateLightingIntensityCache]
  -[PUPhotoEditPortraitToolController _updateLightingSliderAnimated:]
  -[PUPhotoEditPortraitToolController _updateLightingNameBadgeForOrientation:expanded:]
  -[PUPhotoEditPortraitToolController _updateIntensityForLightingType:]
  -[PUPhotoEditPortraitToolController _resetDefaultToolMode]
  -[PUPhotoEditPortraitToolController _selectNextEffectType:]
  -[PUPhotoEditPortraitToolController apertureToolbar:didChangeValue:]
  -[PUPhotoEditPortraitToolController _updateCompositionWithLightingIntensity]
  -[PUPhotoEditPortraitToolController _setShowLightingControl:animated:]
  -[PUPhotoEditPortraitToolController setPhotoEditSpec:]
  -[PUPhotoEditPortraitToolController _updateLabelOrientation]
  -[PUPhotoEditPortraitToolController apertureToolbarShouldRotateLabelsWithOrientation:]
  -[PUPhotoEditPortraitToolController setToolSelection:]
  -[PUPhotoEditPortraitToolController toolbarIconAccessibilityLabel]
  -[PUPhotoEditPortraitToolController reactivate]
  -[PUPhotoEditPortraitToolController accessibilityHUDItemForButton:]
  -[PUPhotoEditPortraitToolController wantsScrubberKeyControl]
  -[PUPhotoEditPortraitToolController increaseScrubberValue:]
  -[PUPhotoEditPortraitToolController decreaseScrubberValue:]


PUPXAssetsDataSource : PUAssetsDataSource
 @property  PXAssetsDataSource *underlyingDataSource

  // instance methods
  -[PUPXAssetsDataSource .cxx_destruct]
  -[PUPXAssetsDataSource init]
  -[PUPXAssetsDataSource indexPathForAssetReference:]
  -[PUPXAssetsDataSource assetReferenceAtIndexPath:]
  -[PUPXAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUPXAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUPXAssetsDataSource convertIndexPath:fromAssetsDataSource:]
  -[PUPXAssetsDataSource underlyingDataSource]
  -[PUPXAssetsDataSource initWithUnderlyingDataSource:]


PUPXAssetsDataSourceManager : PUAssetsDataSourceManager <PXAssetsDataSourceManagerObserver>
 @property  long long _currentUpdateID
 @property  PXAssetsDataSourceManager *underlyingDataSourceManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXAssetsDataSourceManager photosDataSource]
  -[PUPXAssetsDataSourceManager .cxx_destruct]
  -[PUPXAssetsDataSourceManager init]
  -[PUPXAssetsDataSourceManager _update]
  -[PUPXAssetsDataSourceManager _scheduleUpdate]
  -[PUPXAssetsDataSourceManager observable:didChange:context:]
  -[PUPXAssetsDataSourceManager underlyingDataSourceManager]
  -[PUPXAssetsDataSourceManager _currentUpdateID]
  -[PUPXAssetsDataSourceManager _setCurrentUpdateId:]
  -[PUPXAssetsDataSourceManager _handleScheduledUpdateWithID:]
  -[PUPXAssetsDataSourceManager initWithUnderlyingDataSourceManager:]


PUPXBarAppearanceImplementationDelegate : NSObject <PXBarAppearanceImplementationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXBarAppearanceImplementationDelegate barAppearanceIsStatusBarVisible:]


PUPXFilteredMomentsViewController : PUFilteredMomentsViewController <PXChangeObserver>
 @property  UIViewController *containerViewController
 @property  <PXGridPresentationBarsUpdateDelegate> *barsUpdateDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXFilteredMomentsViewController containerViewController]
  -[PUPXFilteredMomentsViewController setContainerViewController:]
  -[PUPXFilteredMomentsViewController setEditing:animated:]
  -[PUPXFilteredMomentsViewController .cxx_destruct]
  -[PUPXFilteredMomentsViewController viewDidLoad]
  -[PUPXFilteredMomentsViewController oneUpPresentationHelperViewController:]
  -[PUPXFilteredMomentsViewController loadView]
  -[PUPXFilteredMomentsViewController observable:didChange:context:]
  -[PUPXFilteredMomentsViewController updateNavigationBarAnimated:]
  -[PUPXFilteredMomentsViewController pu_performBarsVisibilityUpdatesWithAnimationSettings:]
  -[PUPXFilteredMomentsViewController getEmptyPlaceholderViewTitle:message:buttonTitle:buttonAction:]
  -[PUPXFilteredMomentsViewController barsUpdateDelegate]
  -[PUPXFilteredMomentsViewController isInPlaces:]
  -[PUPXFilteredMomentsViewController setBarsUpdateDelegate:]


PUPXGridPresentation : NSObject <PXGridPresentation>
 @property  long long userInterfaceIdiom
 @property  BOOL _isRunningInPhotoPicker
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXGridPresentation setSessionInfo:]
  -[PUPXGridPresentation sessionInfo]
  -[PUPXGridPresentation _isEmpty:]
  -[PUPXGridPresentation createGridViewControllerWithAssets:photoLibrary:withTitle:hideTabBar:gridPresentationContext:containerViewController:barsUpdateDelegate:andCompletion:]
  -[PUPXGridPresentation setUserInterfaceIdiom:]
  -[PUPXGridPresentation .cxx_destruct]
  -[PUPXGridPresentation userInterfaceIdiom]
  -[PUPXGridPresentation createPhotosPickerViewControllerWithSelectedAssets:anchorAtAsset:inAssetCollection:options:completionHandler:]
  -[PUPXGridPresentation createPlacesViewControllerForAssetCollection:]
  -[PUPXGridPresentation _customizePhotosViewConfiguationForAssetPicker:assetCollection:]
  -[PUPXGridPresentation createAlbumListViewControllerWithConfiguration:]
  -[PUPXGridPresentation createViewControllerForAssetCollection:]
  -[PUPXGridPresentation init]
  -[PUPXGridPresentation createAlbumListViewControllerWithCollectionList:]
  -[PUPXGridPresentation createImportHistoryGridViewControllerWithCollection:]
  -[PUPXGridPresentation createPanoramaViewController]
  -[PUPXGridPresentation createAssetPickerPhotosAlbumViewControllerForAlbum:]
  -[PUPXGridPresentation createSharedAlbumListViewControllerWithConfiguration:]
  -[PUPXGridPresentation createViewControllerForAssetCollection:existingAssetsFetchResult:]
  -[PUPXGridPresentation initWithUserInterfaceIdiom:]
  -[PUPXGridPresentation createPhotosAlbumViewControllerForAlbum:withFetchResult:]
  -[PUPXGridPresentation _isRunningInPhotoPicker]
  -[PUPXGridPresentation _assetCollectionToAssetsMapForAssets:]


PUPXMediaProvider : PUMediaProvider
 @property  PXUIMediaProvider *underlyingMediaProvider

  // instance methods
  -[PUPXMediaProvider cancelImageRequest:]
  -[PUPXMediaProvider .cxx_destruct]
  -[PUPXMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUPXMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUPXMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUPXMediaProvider init]
  -[PUPXMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUPXMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUPXMediaProvider requestAnimatedImageForAsset:options:resultHandler:]
  -[PUPXMediaProvider underlyingMediaProvider]
  -[PUPXMediaProvider initWithUnderlyingMediaProvider:]


PUPXOneUpPresentationConfiguration : NSObject <PXOneUpPresentationConfiguration>
 @property  long long pu_interactiveMode
 @property  unsigned long pu_activity
 @property  BOOL animated
 @property  long long interactiveMode
 @property  unsigned long activity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXOneUpPresentationConfiguration pu_activity]
  -[PUPXOneUpPresentationConfiguration setActivity:]
  -[PUPXOneUpPresentationConfiguration pu_interactiveMode]
  -[PUPXOneUpPresentationConfiguration setAnimated:]
  -[PUPXOneUpPresentationConfiguration isAnimated]
  -[PUPXOneUpPresentationConfiguration init]
  -[PUPXOneUpPresentationConfiguration activity]
  -[PUPXOneUpPresentationConfiguration interactiveMode]
  -[PUPXOneUpPresentationConfiguration setInteractiveMode:]


PUPXOneUpPresentationImplementation : NSObject <PUOneUpPresentationHelperDelegate, PUOneUpPresentationHelperAssetDisplayDelegate>
 @property  PUOneUpPresentationHelper *_helper
 @property  PXOneUpPresentation *_oneUpPresentation
 @property  PXAssetReference *lastViewedAssetReference
 @property  BOOL canStop
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPXOneUpPresentationImplementation implementationForOneUpPresentation:]

  // instance methods
  -[PUPXOneUpPresentationImplementation _helper]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelper:shouldHideAssetReferences:]
  -[PUPXOneUpPresentationImplementation _initWithOneUpPresentation:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperViewHostingTilingView:]
  -[PUPXOneUpPresentationImplementation startWithConfigurationHandler:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperAdditionalOptions:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperScrollView:]
  -[PUPXOneUpPresentationImplementation .cxx_destruct]
  -[PUPXOneUpPresentationImplementation canStop]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperPreventRevealInMomentAction:]
  -[PUPXOneUpPresentationImplementation _oneUpPresentation]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperSpotlightTextsToHighlight:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperShouldLeaveContentOnSecondScreen:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperWantsShowInLibraryButton:]
  -[PUPXOneUpPresentationImplementation init]
  -[PUPXOneUpPresentationImplementation presentingViewControllerViewDidDisappear:]
  -[PUPXOneUpPresentationImplementation canStartAnimated:]
  -[PUPXOneUpPresentationImplementation commitPreviewViewController:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperViewController:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationOrigin:]
  -[PUPXOneUpPresentationImplementation lastViewedAssetReference]
  -[PUPXOneUpPresentationImplementation stopAnimated:]
  -[PUPXOneUpPresentationImplementation previewViewControllerAllowingActions:]
  -[PUPXOneUpPresentationImplementation invalidatePresentingGeometry]
  -[PUPXOneUpPresentationImplementation presentingViewControllerViewDidAppear:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelper:currentImageForAssetReference:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelperShouldAutoPlay:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelper:regionOfInterestForAssetReference:cropInsets:contentsRect:]
  -[PUPXOneUpPresentationImplementation presentingViewControllerViewWillDisappear:]
  -[PUPXOneUpPresentationImplementation presentingViewControllerViewWillAppear:]
  -[PUPXOneUpPresentationImplementation oneUpPresentationHelper:scrollAssetReferenceToVisible:]
  -[PUPXOneUpPresentationImplementation handlePresentingPinchGestureRecognizer:]
  -[PUPXOneUpPresentationImplementation didDismissPreviewViewController:committing:]


PUPXOneUpPresentationImplementationDelegate : NSObject <PXOneUpPresentationImplementationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:handlePresentingPinchGestureRecognizer:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:presentingViewControllerViewDidAppear:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:stopAnimated:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentationLastViewedAssetReference:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:presentingViewControllerViewWillDisappear:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentationInvalidatePresentingGeometry:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:presentingViewControllerViewDidDisappear:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:startWithConfigurationHandler:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:didDismissPreviewViewController:committing:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:presentingViewControllerViewWillAppear:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:commitPreviewViewController:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentationCanStop:]
  -[PUPXOneUpPresentationImplementationDelegate previewViewControllerForOneUpPresentation:allowingActions:]
  -[PUPXOneUpPresentationImplementationDelegate oneUpPresentation:canStartAnimated:]


PUEditLocationActivity : PXActivity <PXPhotosDetailsLocationSearchDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUEditLocationActivity activityCategory]

  // instance methods
  -[PUEditLocationActivity activityViewController]
  -[PUEditLocationActivity _systemImageName]
  -[PUEditLocationActivity activityType]
  -[PUEditLocationActivity canPerformWithActivityItems:]
  -[PUEditLocationActivity activityTitle]
  -[PUEditLocationActivity locationSearchDataSource:didSelectLocationSearchResult:]
  -[PUEditLocationActivity locationSearchDataSourceDidRemoveLocation:]


PUPXPhotoKitShareAssetActionPerformer : PXPhotoKitAssetActionPerformer <PXCMMActionPerformerDelegate, PXActivitySharingControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPXPhotoKitShareAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitShareAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[PUPXPhotoKitShareAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitShareAssetActionPerformer createPreviewActionWithTitle:image:handler:]

  // instance methods
  -[PUPXPhotoKitShareAssetActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitShareAssetActionPerformer .cxx_destruct]
  -[PUPXPhotoKitShareAssetActionPerformer completeUserInteractionTaskWithSuccess:error:]
  -[PUPXPhotoKitShareAssetActionPerformer actionPerformer:presentViewController:]
  -[PUPXPhotoKitShareAssetActionPerformer activitySharingControllerDidCancel:]
  -[PUPXPhotoKitShareAssetActionPerformer activitySharingController:didCompleteWithActivityType:success:]
  -[PUPXPhotoKitShareAssetActionPerformer actionPerformer:dismissViewController:completionHandler:]
  -[PUPXPhotoKitShareAssetActionPerformer _presentShareSheet]
  -[PUPXPhotoKitShareAssetActionPerformer _assetsFetchResultByAssetCollectionFromCollectionListFetchResult:inDataSource:]
  -[PUPXPhotoKitShareAssetActionPerformer _didCompleteWithActivityType:success:asset:person:selectionSnapshot:]
  -[PUPXPhotoKitShareAssetActionPerformer _performSetKeyFaceWithAsset:completionHandler:]
  -[PUPXPhotoKitShareAssetActionPerformer _performNotThisPersonWithCompletionHandler:]


PUPXPhotoKitDestructiveActionsPerformer : PXPhotoKitAssetActionPerformer <PUDeletePhotosActionControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXPhotoKitDestructiveActionsPerformer isCancellable]
  -[PUPXPhotoKitDestructiveActionsPerformer performUserInteractionTask]
  -[PUPXPhotoKitDestructiveActionsPerformer deletePhotosActionController:presentConfirmationViewController:]
  -[PUPXPhotoKitDestructiveActionsPerformer destructivePhotosAction]


PUPXPhotoKitTrashAssetActionPerformer : PUPXPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPXPhotoKitTrashAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitTrashAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitTrashAssetActionPerformer createPreviewActionWithTitle:image:handler:]
  +[PUPXPhotoKitTrashAssetActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitTrashAssetActionPerformer localizedTitleForUseCase:selectionSnapshot:person:]

  // instance methods
  -[PUPXPhotoKitTrashAssetActionPerformer destructivePhotosAction]


PUPXPhotoKitTrashNoConfirmAssetActionPerformer : PUPXPhotoKitTrashAssetActionPerformer
  // class methods
  +[PUPXPhotoKitTrashNoConfirmAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]

  // instance methods
  -[PUPXPhotoKitTrashNoConfirmAssetActionPerformer destructivePhotosAction]
  -[PUPXPhotoKitTrashNoConfirmAssetActionPerformer shouldSkipUserConfirmation]


PUPXPhotoKitDeleteAssetActionPerformer : PUPXPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPXPhotoKitDeleteAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitDeleteAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitDeleteAssetActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitDeleteAssetActionPerformer canPerformOnImplicitSelectionInContainerCollection:]

  // instance methods
  -[PUPXPhotoKitDeleteAssetActionPerformer destructivePhotosAction]


PUPXPhotoKitRestoreAssetActionPerformer : PUPXPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPXPhotoKitRestoreAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitRestoreAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitRestoreAssetActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitRestoreAssetActionPerformer canPerformOnImplicitSelectionInContainerCollection:]
  +[PUPXPhotoKitRestoreAssetActionPerformer canPerformWithSelectionSnapshot:person:]

  // instance methods
  -[PUPXPhotoKitRestoreAssetActionPerformer destructivePhotosAction]


PUPXPhotoKitRemoveAssetActionPerformer : PXPhotoKitAssetActionPerformer
  // class methods
  +[PUPXPhotoKitRemoveAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitRemoveAssetActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitRemoveAssetActionPerformer localizedTitleForUseCase:selectionSnapshot:person:]

  // instance methods
  -[PUPXPhotoKitRemoveAssetActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitRemoveAssetActionPerformer performBackgroundTask]


PUPXPhotoKitUnifiedDestructiveActionPerformer : PXPhotoKitAssetActionPerformer
  // class methods
  +[PUPXPhotoKitUnifiedDestructiveActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitUnifiedDestructiveActionPerformer canPerformOnAsset:inAssetCollection:person:]
  +[PUPXPhotoKitUnifiedDestructiveActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitUnifiedDestructiveActionPerformer _containedPerformerClasses]

  // instance methods
  -[PUPXPhotoKitUnifiedDestructiveActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitUnifiedDestructiveActionPerformer _isDestructiveAction:]
  -[PUPXPhotoKitUnifiedDestructiveActionPerformer _handleActionPick:forPerformerClass:]


PUPXPhotoKitSlideShowAssetActionPerformer : PXPhotoKitAssetActionPerformer <PUSlideshowViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPXPhotoKitSlideShowAssetActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitSlideShowAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[PUPXPhotoKitSlideShowAssetActionPerformer systemImageNameForActionManager:]
  +[PUPXPhotoKitSlideShowAssetActionPerformer canPerformOnSubsetOfSelection]
  +[PUPXPhotoKitSlideShowAssetActionPerformer canPerformOnImplicitSelectionInContainerCollection:]
  +[PUPXPhotoKitSlideShowAssetActionPerformer canPerformWithSelectionSnapshot:person:]
  +[PUPXPhotoKitSlideShowAssetActionPerformer createActivityWithActionManager:]

  // instance methods
  -[PUPXPhotoKitSlideShowAssetActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitSlideShowAssetActionPerformer slideshowViewControllerDidFinish:withVisibleAssets:]
  -[PUPXPhotoKitSlideShowAssetActionPerformer _startSlideshow]


PUPXPhotoKitDuplicateAssetActionPerformer : PXPhotoKitAssetActionPerformer
 @property  PUDuplicateActionController *duplicateActionController
 @property  long long action
 @property  {?=qiIq} stillImageTime

  // class methods
  +[PUPXPhotoKitDuplicateAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]

  // instance methods
  -[PUPXPhotoKitDuplicateAssetActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitDuplicateAssetActionPerformer .cxx_destruct]
  -[PUPXPhotoKitDuplicateAssetActionPerformer setAction:]
  -[PUPXPhotoKitDuplicateAssetActionPerformer action]
  -[PUPXPhotoKitDuplicateAssetActionPerformer performBackgroundTask]
  -[PUPXPhotoKitDuplicateAssetActionPerformer stillImageTime]
  -[PUPXPhotoKitDuplicateAssetActionPerformer setStillImageTime:]
  -[PUPXPhotoKitDuplicateAssetActionPerformer setDuplicateActionController:]
  -[PUPXPhotoKitDuplicateAssetActionPerformer duplicateActionController]


PUPXPhotoKitHideAssetActionPerformer : PXPhotoKitAssetActionPerformer
 @property  PUAssetHidingHelper *assetHidingHelper
 @property  BOOL isHiding

  // class methods
  +[PUPXPhotoKitHideAssetActionPerformer localizedTitleForUseCase:actionManager:]
  +[PUPXPhotoKitHideAssetActionPerformer canPerformOnAsset:inAssetCollection:person:]

  // instance methods
  -[PUPXPhotoKitHideAssetActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitHideAssetActionPerformer .cxx_destruct]
  -[PUPXPhotoKitHideAssetActionPerformer isHiding]
  -[PUPXPhotoKitHideAssetActionPerformer performBackgroundTask]
  -[PUPXPhotoKitHideAssetActionPerformer setAssetHidingHelper:]
  -[PUPXPhotoKitHideAssetActionPerformer setIsHiding:]
  -[PUPXPhotoKitHideAssetActionPerformer assetHidingHelper]


PUPXPhotoKitAddToAlbumActionPerformer : PXPhotoKitAssetActionPerformer
 @property  PUAlbumPickerViewController *albumPickerViewController

  // class methods
  +[PUPXPhotoKitAddToAlbumActionPerformer createBarButtonItemWithTarget:action:actionManager:]
  +[PUPXPhotoKitAddToAlbumActionPerformer canPerformOnAsset:inAssetCollection:person:]

  // instance methods
  -[PUPXPhotoKitAddToAlbumActionPerformer performUserInteractionTask]
  -[PUPXPhotoKitAddToAlbumActionPerformer .cxx_destruct]
  -[PUPXPhotoKitAddToAlbumActionPerformer setAlbumPickerViewController:]
  -[PUPXPhotoKitAddToAlbumActionPerformer _handlePickedAlbum:assets:]
  -[PUPXPhotoKitAddToAlbumActionPerformer _handleUserInteractionTaskResult:error:]
  -[PUPXPhotoKitAddToAlbumActionPerformer albumPickerViewController]


PUPXSharePresentation : NSObject <PXSharePresentation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPXSharePresentation defaultActivityTypeOrder]
  -[PUPXSharePresentation createActivitySharingControllerWithContext:]


PUParallaxComputer : NSObject
 @property  long long model
 @property  double parallaxFactor
 @property  unsigned long axis

  // instance methods
  -[PUParallaxComputer parallaxFactor]
  -[PUParallaxComputer setParallaxFactor:]
  -[PUParallaxComputer axis]
  -[PUParallaxComputer setAxis:]
  -[PUParallaxComputer contentParallaxOffsetForViewFrame:visibleRect:]
  -[PUParallaxComputer model]
  -[PUParallaxComputer setModel:]


PUParallaxedTileLayoutInfo : PUTileLayoutInfo
 @property  {CGPoint=dd} parallaxOffset

  // instance methods
  -[PUParallaxedTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUParallaxedTileLayoutInfo clone]
  -[PUParallaxedTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUParallaxedTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:parallaxOffset:coordinateSystem:]
  -[PUParallaxedTileLayoutInfo parallaxOffset]
  -[PUParallaxedTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:parallaxOffset:contentsRect:coordinateSystem:]


PUPeopleAlbumGadget : PUAlbumGadget
 @property  PXPeopleAlbumProvider *albumProvider

  // instance methods
  -[PUPeopleAlbumGadget _peopleAlbumChanged:]
  -[PUPeopleAlbumGadget reconfigure]
  -[PUPeopleAlbumGadget contentViewWillAppear]
  -[PUPeopleAlbumGadget initWithCollection:albumGadgetDelegate:]
  -[PUPeopleAlbumGadget albumListCellContentView]
  -[PUPeopleAlbumGadget .cxx_destruct]
  -[PUPeopleAlbumGadget setAlbumProvider:]
  -[PUPeopleAlbumGadget _configureSubtitleForAlbumListCellContentView:]
  -[PUPeopleAlbumGadget albumProvider]
  -[PUPeopleAlbumGadget title]
  -[PUPeopleAlbumGadget _setSubtitleForPeopleCount:onAlbumListCellContentView:]
  -[PUPeopleAlbumGadget dealloc]


PUPerformanceDiagnosticsSettings : PXSettings
 @property  BOOL shouldTracePerformance
 @property  double scrollTestRampUpDuration
 @property  double scrollTestCPUWarmupDuration
 @property  double scrollTestCPUSustainDuration

  // class methods
  +[PUPerformanceDiagnosticsSettings sharedInstance]
  +[PUPerformanceDiagnosticsSettings settingsControllerModule]

  // instance methods
  -[PUPerformanceDiagnosticsSettings parentSettings]
  -[PUPerformanceDiagnosticsSettings setScrollTestRampUpDuration:]
  -[PUPerformanceDiagnosticsSettings scrollTestCPUSustainDuration]
  -[PUPerformanceDiagnosticsSettings setDefaultValues]
  -[PUPerformanceDiagnosticsSettings scrollTestRampUpDuration]
  -[PUPerformanceDiagnosticsSettings shouldTracePerformance]
  -[PUPerformanceDiagnosticsSettings setScrollTestCPUWarmupDuration:]
  -[PUPerformanceDiagnosticsSettings scrollTestCPUWarmupDuration]
  -[PUPerformanceDiagnosticsSettings setShouldTracePerformance:]
  -[PUPerformanceDiagnosticsSettings setScrollTestCPUSustainDuration:]


PUPhotoBrowserOneUpPresentationAdaptor : NSObject <PUOneUpPresentationHelperAssetDisplayDelegate>
 @property  NSSet *_photoTokensForHiddenAssetReferences
 @property  BOOL _shouldDisableScroll
 @property  <PUPhotoBrowserZoomTransitionDelegate> *zoomTransitionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoBrowserOneUpPresentationAdaptor oneUpPresentationHelper:shouldHideAssetReferences:]
  -[PUPhotoBrowserOneUpPresentationAdaptor .cxx_destruct]
  -[PUPhotoBrowserOneUpPresentationAdaptor oneUpPresentationHelper:currentImageForAssetReference:]
  -[PUPhotoBrowserOneUpPresentationAdaptor oneUpPresentationHelper:regionOfInterestForAssetReference:cropInsets:contentsRect:]
  -[PUPhotoBrowserOneUpPresentationAdaptor oneUpPresentationHelper:scrollAssetReferenceToVisible:]
  -[PUPhotoBrowserOneUpPresentationAdaptor setZoomTransitionDelegate:]
  -[PUPhotoBrowserOneUpPresentationAdaptor oneUpPresentationHelper:shouldDisableScroll:]
  -[PUPhotoBrowserOneUpPresentationAdaptor _photoTokensForHiddenAssetReferences]
  -[PUPhotoBrowserOneUpPresentationAdaptor _shouldDisableScroll]
  -[PUPhotoBrowserOneUpPresentationAdaptor _setPhotoTokensForHiddenAssetReferences:]
  -[PUPhotoBrowserOneUpPresentationAdaptor _setShouldDisableScroll:]
  -[PUPhotoBrowserOneUpPresentationAdaptor zoomTransitionDelegate]
  -[PUPhotoBrowserOneUpPresentationAdaptor _photoTokenForAssetReference:]


PUPhotoBrowserTitleViewController : NSObject
 @property  BOOL _isPerformingChanges
 @property  BOOL _isUpdating
 @property  BOOL _needsUpdateDayAndTimeDescriptions
 @property  BOOL _needsUpdatePlayClockDescription
 @property  BOOL _needsUpdateLabels
 @property  BOOL _needsUpdateGestureRecognizers
 @property  PLDateRangeFormatter *_dayFormatter
 @property  PLDateRangeFormatter *_timeFormatter
 @property  NSDateComponentsFormatter *_playClockFormatter
 @property  NSString *_dayDescription
 @property  NSString *_timeDescription
 @property  NSString *_playClockDescription
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  UIView *view
 @property  NSString *title
 @property  NSString *subtitle
 @property  <PUPhotoBrowserTitleViewControllerDelegate> *delegate
 @property  BOOL tappable
 @property  BOOL usingCompactTitleView
 @property  NSString *geoDescription
 @property  NSDate *creationDate
 @property  {?=qiIq} currentPlaybackTime
 @property  {?=qiIq} playbackDuration
 @property  UIColor *textColor

  // instance methods
  -[PUPhotoBrowserTitleViewController _timeFormatter]
  -[PUPhotoBrowserTitleViewController _setTapGestureRecognizer:]
  -[PUPhotoBrowserTitleViewController _setUpdating:]
  -[PUPhotoBrowserTitleViewController _tapGestureRecognizer]
  -[PUPhotoBrowserTitleViewController _setPerformingChanges:]
  -[PUPhotoBrowserTitleViewController _isUpdating]
  -[PUPhotoBrowserTitleViewController _assertInsideUpdate]
  -[PUPhotoBrowserTitleViewController setUsingCompactTitleView:]
  -[PUPhotoBrowserTitleViewController currentPlaybackTime]
  -[PUPhotoBrowserTitleViewController _assertInsideChangeBlock]
  -[PUPhotoBrowserTitleViewController performChanges:]
  -[PUPhotoBrowserTitleViewController setCreationDate:]
  -[PUPhotoBrowserTitleViewController _isPerformingChanges]
  -[PUPhotoBrowserTitleViewController _updateIfNeeded]
  -[PUPhotoBrowserTitleViewController _setNeedsUpdate]
  -[PUPhotoBrowserTitleViewController _dayDescription]
  -[PUPhotoBrowserTitleViewController .cxx_destruct]
  -[PUPhotoBrowserTitleViewController textColor]
  -[PUPhotoBrowserTitleViewController setGeoDescription:]
  -[PUPhotoBrowserTitleViewController _invalidateGestureRecognizers]
  -[PUPhotoBrowserTitleViewController setDelegate:]
  -[PUPhotoBrowserTitleViewController _setPlayClockDescription:]
  -[PUPhotoBrowserTitleViewController _setNeedsUpdatePlayClockDescription:]
  -[PUPhotoBrowserTitleViewController init]
  -[PUPhotoBrowserTitleViewController view]
  -[PUPhotoBrowserTitleViewController _timeDescription]
  -[PUPhotoBrowserTitleViewController setTappable:]
  -[PUPhotoBrowserTitleViewController _needsUpdate]
  -[PUPhotoBrowserTitleViewController _needsUpdatePlayClockDescription]
  -[PUPhotoBrowserTitleViewController _updateLabelsIfNeeded]
  -[PUPhotoBrowserTitleViewController setTextColor:]
  -[PUPhotoBrowserTitleViewController geoDescription]
  -[PUPhotoBrowserTitleViewController playbackDuration]
  -[PUPhotoBrowserTitleViewController subtitle]
  -[PUPhotoBrowserTitleViewController _setNeedsUpdateGestureRecognizers:]
  -[PUPhotoBrowserTitleViewController _dateFormatterChanged:]
  -[PUPhotoBrowserTitleViewController _setNeedsUpdateDayAndTimeDescriptions:]
  -[PUPhotoBrowserTitleViewController _needsUpdateDayAndTimeDescriptions]
  -[PUPhotoBrowserTitleViewController title]
  -[PUPhotoBrowserTitleViewController _invalidatePlayClockDescription]
  -[PUPhotoBrowserTitleViewController creationDate]
  -[PUPhotoBrowserTitleViewController _updateDayAndTimeDescriptionsIfNeeded]
  -[PUPhotoBrowserTitleViewController delegate]
  -[PUPhotoBrowserTitleViewController _setNeedsUpdateLabels:]
  -[PUPhotoBrowserTitleViewController _invalidateLabels]
  -[PUPhotoBrowserTitleViewController _dayFormatter]
  -[PUPhotoBrowserTitleViewController _invalidateDayAndTimeDescriptions]
  -[PUPhotoBrowserTitleViewController setPlaybackDuration:]
  -[PUPhotoBrowserTitleViewController _playClockDescription]
  -[PUPhotoBrowserTitleViewController _setTimeDescription:]
  -[PUPhotoBrowserTitleViewController isTappable]
  -[PUPhotoBrowserTitleViewController isUsingCompactTitleView]
  -[PUPhotoBrowserTitleViewController _setDayDescription:]
  -[PUPhotoBrowserTitleViewController _updatePlayClockDescriptionIfNeeded]
  -[PUPhotoBrowserTitleViewController _playClockFormatter]
  -[PUPhotoBrowserTitleViewController _needsUpdateGestureRecognizers]
  -[PUPhotoBrowserTitleViewController _needsUpdateLabels]
  -[PUPhotoBrowserTitleViewController _updateGestureRecognizersIfNeeded]
  -[PUPhotoBrowserTitleViewController setCurrentPlaybackTime:]
  -[PUPhotoBrowserTitleViewController _handleTapGestureRecognizer:]


PUPhotoSmilesCommentCell : UITableViewCell
 @property  UILabel *smileContentLabel
 @property  UIView *styledSeparatorView
 @property  NSOrderedSet *userLikes
 @property  BOOL isVideo
 @property  BOOL usesCompactSeparators

  // class methods
  +[PUPhotoSmilesCommentCell heightOfSmileCellWithComments:forWidth:isVideo:forInterfaceOrientation:]
  +[PUPhotoSmilesCommentCell _smileStringForComments:]
  +[PUPhotoSmilesCommentCell _attributedStringForComments:color:isVideo:]

  // instance methods
  -[PUPhotoSmilesCommentCell isVideo]
  -[PUPhotoSmilesCommentCell _updateContent]
  -[PUPhotoSmilesCommentCell .cxx_destruct]
  -[PUPhotoSmilesCommentCell layoutSubviews]
  -[PUPhotoSmilesCommentCell prepareForReuse]
  -[PUPhotoSmilesCommentCell setIsVideo:]
  -[PUPhotoSmilesCommentCell initWithStyle:reuseIdentifier:]
  -[PUPhotoSmilesCommentCell userLikes]
  -[PUPhotoSmilesCommentCell setUserLikes:]
  -[PUPhotoSmilesCommentCell setUsesCompactSeparators:]
  -[PUPhotoSmilesCommentCell usesCompactSeparators]
  -[PUPhotoSmilesCommentCell smileContentLabel]
  -[PUPhotoSmilesCommentCell styledSeparatorView]


PUPhotoOwnerCommentCell : UITableViewCell
 @property  NSAttributedString *ownerString
 @property  UILabel *ownerContentLabel
 @property  UIView *styledSeparatorView
 @property  BOOL usesCompactSeparators

  // class methods
  +[PUPhotoOwnerCommentCell heightOfOwnerCellWithAsset:forWidth:forInterfaceOrientation:]
  +[PUPhotoOwnerCommentCell _ownerStringForAsset:]

  // instance methods
  -[PUPhotoOwnerCommentCell .cxx_destruct]
  -[PUPhotoOwnerCommentCell layoutSubviews]
  -[PUPhotoOwnerCommentCell prepareForReuse]
  -[PUPhotoOwnerCommentCell initWithStyle:reuseIdentifier:]
  -[PUPhotoOwnerCommentCell setUsesCompactSeparators:]
  -[PUPhotoOwnerCommentCell updateContentFromAsset:]
  -[PUPhotoOwnerCommentCell usesCompactSeparators]
  -[PUPhotoOwnerCommentCell styledSeparatorView]
  -[PUPhotoOwnerCommentCell setOwnerString:]
  -[PUPhotoOwnerCommentCell ownerString]
  -[PUPhotoOwnerCommentCell ownerContentLabel]


NoRasterization : CALayer
  // instance methods
  -[NoRasterization setShouldRasterize:]


PUPhotoCommentCell : UITableViewCell
 @property  UITextView *commentContentTextView
 @property  UILabel *commentBylineLabel
 @property  UIView *styledSeparatorView
 @property  PLCloudSharedComment *comment
 @property  BOOL usesCompactSeparators

  // class methods
  +[PUPhotoCommentCell layerClass]
  +[PUPhotoCommentCell heightForComment:forWidth:forInterfaceOrientation:]
  +[PUPhotoCommentCell _synthesizedAttributedString:withWordWrapping:]
  +[PUPhotoCommentCell _commentStringForComment:]
  +[PUPhotoCommentCell _attributionStringForComment:]

  // instance methods
  -[PUPhotoCommentCell _updateContent]
  -[PUPhotoCommentCell .cxx_destruct]
  -[PUPhotoCommentCell layoutSubviews]
  -[PUPhotoCommentCell prepareForReuse]
  -[PUPhotoCommentCell comment]
  -[PUPhotoCommentCell canPerformAction:withSender:]
  -[PUPhotoCommentCell initWithStyle:reuseIdentifier:]
  -[PUPhotoCommentCell setComment:]
  -[PUPhotoCommentCell delete:]
  -[PUPhotoCommentCell setUsesCompactSeparators:]
  -[PUPhotoCommentCell usesCompactSeparators]
  -[PUPhotoCommentCell styledSeparatorView]
  -[PUPhotoCommentCell commentContentTextView]
  -[PUPhotoCommentCell commentBylineLabel]


PUPhotoPostCommentTextEntryCell : UITableViewCell
 @property  PUPhotoCommentEntryView *textEntryView

  // class methods
  +[PUPhotoPostCommentTextEntryCell heightForWidth:]
  +[PUPhotoPostCommentTextEntryCell preferredContentSizeDidChange]

  // instance methods
  -[PUPhotoPostCommentTextEntryCell .cxx_destruct]
  -[PUPhotoPostCommentTextEntryCell layoutSubviews]
  -[PUPhotoPostCommentTextEntryCell textEntryView]
  -[PUPhotoPostCommentTextEntryCell initWithStyle:reuseIdentifier:]
  -[PUPhotoPostCommentTextEntryCell setTextEntryView:]


PUPhotoCommentEntryView : UIView <UITextViewDelegate>
 @property  UITextView *textView
 @property  UILabel *placeholderLabel
 @property  UIButton *postButton
 @property  <PUPhotoCommentEntryViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoCommentEntryView clearText]
  -[PUPhotoCommentEntryView textView]
  -[PUPhotoCommentEntryView setText:]
  -[PUPhotoCommentEntryView .cxx_destruct]
  -[PUPhotoCommentEntryView layoutSubviews]
  -[PUPhotoCommentEntryView setDelegate:]
  -[PUPhotoCommentEntryView placeholderLabel]
  -[PUPhotoCommentEntryView initWithFrame:]
  -[PUPhotoCommentEntryView delegate]
  -[PUPhotoCommentEntryView textViewDidBeginEditing:]
  -[PUPhotoCommentEntryView preferredHeight]
  -[PUPhotoCommentEntryView textViewShouldBeginEditing:]
  -[PUPhotoCommentEntryView textViewDidEndEditing:]
  -[PUPhotoCommentEntryView textViewShouldEndEditing:]
  -[PUPhotoCommentEntryView textViewDidChange:]
  -[PUPhotoCommentEntryView trimmedText]
  -[PUPhotoCommentEntryView postButton]


PUPhotoDecoration : NSObject <NSCopying>
 @property  UIColor *borderColor
 @property  double borderWidth
 @property  UIColor *foregroundColor

  // class methods
  +[PUPhotoDecoration defaultDecoration]

  // instance methods
  -[PUPhotoDecoration setBorderWidth:]
  -[PUPhotoDecoration borderWidth]
  -[PUPhotoDecoration borderColor]
  -[PUPhotoDecoration foregroundColor]
  -[PUPhotoDecoration setBorderColor:]
  -[PUPhotoDecoration .cxx_destruct]
  -[PUPhotoDecoration setForegroundColor:]
  -[PUPhotoDecoration isEqual:]
  -[PUPhotoDecoration photoDecorationVariantsWithIncreasingAlpha:]
  -[PUPhotoDecoration copyWithZone:]
  -[PUPhotoDecoration photoDecorationVariantsWithIncreasingBorderBrightness:]


PUPhotoEditAdjustmentCell : PUPhotoEditBaseAdjustmentCell
 @property  <PUPhotoEditBaseAdjustmentCellDelegate> *delegate
 @property  BOOL shouldDisplayValueLabel
 @property  BOOL displayMappedValue

  // instance methods
  -[PUPhotoEditAdjustmentCell initWithCoder:]
  -[PUPhotoEditAdjustmentCell .cxx_destruct]
  -[PUPhotoEditAdjustmentCell setDelegate:]
  -[PUPhotoEditAdjustmentCell setSelected:]
  -[PUPhotoEditAdjustmentCell initWithFrame:]
  -[PUPhotoEditAdjustmentCell setImageName:]
  -[PUPhotoEditAdjustmentCell delegate]
  -[PUPhotoEditAdjustmentCell setIsUserModifying:]
  -[PUPhotoEditAdjustmentCell setShouldDisplayValueLabel:]
  -[PUPhotoEditAdjustmentCell setDisplayMappedValue:]
  -[PUPhotoEditAdjustmentCell setEnabled:]
  -[PUPhotoEditAdjustmentCell handleButton:]
  -[PUPhotoEditAdjustmentCell _updateValueLabelVisibility]
  -[PUPhotoEditAdjustmentCell shouldDisplayValueLabel]
  -[PUPhotoEditAdjustmentCell displayMappedValue]
  -[PUPhotoEditAdjustmentCell _setupEventHandler]


PUPhotoEditAutoAdjustmentCell : PUPhotoEditBaseAdjustmentCell
 @property  UITapGestureRecognizer *tapGestureRecognizer
 @property  <PUPhotoEditBaseAdjustmentCellDelegate> *delegate

  // instance methods
  -[PUPhotoEditAutoAdjustmentCell setTapGestureRecognizer:]
  -[PUPhotoEditAutoAdjustmentCell initWithCoder:]
  -[PUPhotoEditAutoAdjustmentCell .cxx_destruct]
  -[PUPhotoEditAutoAdjustmentCell setDelegate:]
  -[PUPhotoEditAutoAdjustmentCell tapGestureRecognizer]
  -[PUPhotoEditAutoAdjustmentCell setSelected:]
  -[PUPhotoEditAutoAdjustmentCell initWithFrame:]
  -[PUPhotoEditAutoAdjustmentCell setImageName:]
  -[PUPhotoEditAutoAdjustmentCell delegate]
  -[PUPhotoEditAutoAdjustmentCell performPrimaryAction]
  -[PUPhotoEditAutoAdjustmentCell setEnabled:]
  -[PUPhotoEditAutoAdjustmentCell handleButton:]
  -[PUPhotoEditAutoAdjustmentCell _configureContainerButton]


PUPhotoEditApertureToolbar : UIViewController <PUPhotoEditLayoutDynamicAdaptable>
 @property  CEKApertureSlider *slider
 @property  UILabel *depthEffectLabel
 @property  UILabel *valueLabel
 @property  <PUPhotoEditApertureToolbarDelegate> *delegate
 @property  double sliderWidth
 @property  double apertureValue
 @property  double originalApertureValue
 @property  double minimumApertureValue
 @property  double maximumApertureValue
 @property  BOOL enabled
 @property  {UIEdgeInsets=dddd} preferredPreviewViewInsets
 @property  BOOL useTranslucentBackground
 @property  NSString *backdropViewGroupName
 @property  long long layoutOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoEditApertureToolbar updateViewConstraints]
  -[PUPhotoEditApertureToolbar slider]
  -[PUPhotoEditApertureToolbar layoutOrientation]
  -[PUPhotoEditApertureToolbar .cxx_destruct]
  -[PUPhotoEditApertureToolbar setDelegate:]
  -[PUPhotoEditApertureToolbar setSlider:]
  -[PUPhotoEditApertureToolbar setLayoutOrientation:]
  -[PUPhotoEditApertureToolbar enabled]
  -[PUPhotoEditApertureToolbar init]
  -[PUPhotoEditApertureToolbar setBackdropViewGroupName:]
  -[PUPhotoEditApertureToolbar setValueLabel:]
  -[PUPhotoEditApertureToolbar valueLabel]
  -[PUPhotoEditApertureToolbar viewDidLayoutSubviews]
  -[PUPhotoEditApertureToolbar _updateBackgroundAnimated:]
  -[PUPhotoEditApertureToolbar setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditApertureToolbar delegate]
  -[PUPhotoEditApertureToolbar setEnabled:]
  -[PUPhotoEditApertureToolbar loadView]
  -[PUPhotoEditApertureToolbar backdropViewGroupName]
  -[PUPhotoEditApertureToolbar preferredPreviewViewInsets]
  -[PUPhotoEditApertureToolbar setSliderWidth:]
  -[PUPhotoEditApertureToolbar setMinimumApertureValue:]
  -[PUPhotoEditApertureToolbar setMaximumApertureValue:]
  -[PUPhotoEditApertureToolbar setApertureValueClosestTo:]
  -[PUPhotoEditApertureToolbar setOriginalApertureValueClosestTo:]
  -[PUPhotoEditApertureToolbar apertureValue]
  -[PUPhotoEditApertureToolbar setNextApertureValue:coarse:]
  -[PUPhotoEditApertureToolbar _apertureSliderDidChangeValue:]
  -[PUPhotoEditApertureToolbar setUseTranslucentBackground:animated:]
  -[PUPhotoEditApertureToolbar sliderWidth]
  -[PUPhotoEditApertureToolbar minimumApertureValue]
  -[PUPhotoEditApertureToolbar maximumApertureValue]
  -[PUPhotoEditApertureToolbar _nextApertureValueFromValue:reverse:]
  -[PUPhotoEditApertureToolbar setUseTranslucentBackground:]
  -[PUPhotoEditApertureToolbar originalApertureValue]
  -[PUPhotoEditApertureToolbar useTranslucentBackground]
  -[PUPhotoEditApertureToolbar depthEffectLabel]
  -[PUPhotoEditApertureToolbar setDepthEffectLabel:]


PUPhotoEditPerfHUD : UIView
 @property  PXHUDView *hudView
 @property  PXHUDVisualization *detailVisualization
 @property  PXHUDBoxedValueVisualization *firstSinceBootVisualization
 @property  PXHUDBoxedValueVisualization *firstSinceLaunchVisualization
 @property  PXHUDTimeIntervalVisualization *enterEditVisualization
 @property  PXHUDTimeIntervalVisualization *resourceLoadingVisualization
 @property  PXHUDTimeIntervalVisualization *resourceCheckingVisualization
 @property  PXHUDTimeIntervalVisualization *resourceDownloadVisualization
 @property  PXHUDTimeIntervalVisualization *autoCalcVisualization
 @property  PXHUDTimeIntervalVisualization *filterVisualization
 @property  PXHUDTimeIntervalVisualization *exitEditVisualization
 @property  NSString *detailText
 @property  BOOL firstSinceBoot
 @property  BOOL firstSinceLaunch
 @property  PXTimeInterval *enterEditTimeInterval
 @property  PXTimeInterval *resourceCheckingInterval
 @property  PXTimeInterval *resourceDownloadInterval
 @property  PXTimeInterval *resourceLoadingInterval
 @property  PXTimeInterval *autoCalcInterval
 @property  PXTimeInterval *filterInterval
 @property  PXTimeInterval *exitEditTimeInterval

  // instance methods
  -[PUPhotoEditPerfHUD initWithCoder:]
  -[PUPhotoEditPerfHUD detailText]
  -[PUPhotoEditPerfHUD .cxx_destruct]
  -[PUPhotoEditPerfHUD setDetailText:]
  -[PUPhotoEditPerfHUD hudView]
  -[PUPhotoEditPerfHUD initWithFrame:]
  -[PUPhotoEditPerfHUD isFirstSinceBoot]
  -[PUPhotoEditPerfHUD isFirstSinceLaunch]
  -[PUPhotoEditPerfHUD setFirstSinceBoot:]
  -[PUPhotoEditPerfHUD setFirstSinceLaunch:]
  -[PUPhotoEditPerfHUD firstSinceBootVisualization]
  -[PUPhotoEditPerfHUD firstSinceLaunchVisualization]
  -[PUPhotoEditPerfHUD detailVisualization]
  -[PUPhotoEditPerfHUD enterEditVisualization]
  -[PUPhotoEditPerfHUD resourceCheckingVisualization]
  -[PUPhotoEditPerfHUD resourceDownloadVisualization]
  -[PUPhotoEditPerfHUD resourceLoadingVisualization]
  -[PUPhotoEditPerfHUD autoCalcVisualization]
  -[PUPhotoEditPerfHUD filterVisualization]
  -[PUPhotoEditPerfHUD exitEditVisualization]
  -[PUPhotoEditPerfHUD setEnterEditTimeInterval:]
  -[PUPhotoEditPerfHUD setResourceCheckingInterval:]
  -[PUPhotoEditPerfHUD setResourceDownloadInterval:]
  -[PUPhotoEditPerfHUD setResourceLoadingInterval:]
  -[PUPhotoEditPerfHUD setAutoCalcInterval:]
  -[PUPhotoEditPerfHUD setFilterInterval:]
  -[PUPhotoEditPerfHUD setExitEditTimeInterval:]
  -[PUPhotoEditPerfHUD enterEditTimeInterval]
  -[PUPhotoEditPerfHUD resourceCheckingInterval]
  -[PUPhotoEditPerfHUD resourceDownloadInterval]
  -[PUPhotoEditPerfHUD resourceLoadingInterval]
  -[PUPhotoEditPerfHUD autoCalcInterval]
  -[PUPhotoEditPerfHUD filterInterval]
  -[PUPhotoEditPerfHUD exitEditTimeInterval]
  -[PUPhotoEditPerfHUD setHudView:]
  -[PUPhotoEditPerfHUD setDetailVisualization:]
  -[PUPhotoEditPerfHUD setFirstSinceBootVisualization:]
  -[PUPhotoEditPerfHUD setFirstSinceLaunchVisualization:]
  -[PUPhotoEditPerfHUD setEnterEditVisualization:]
  -[PUPhotoEditPerfHUD setResourceLoadingVisualization:]
  -[PUPhotoEditPerfHUD setResourceCheckingVisualization:]
  -[PUPhotoEditPerfHUD setResourceDownloadVisualization:]
  -[PUPhotoEditPerfHUD setAutoCalcVisualization:]
  -[PUPhotoEditPerfHUD setFilterVisualization:]
  -[PUPhotoEditPerfHUD setExitEditVisualization:]


PUCollectionsCollectionViewDropDelegate : NSObject <UICollectionViewDropDelegate>
 @property  <PUCollectionsCollectionViewDropDataProvider> *dropDataProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCollectionsCollectionViewDropDelegate collectionView:performDropWithCoordinator:]
  -[PUCollectionsCollectionViewDropDelegate collectionView:canHandleDropSesson:]
  -[PUCollectionsCollectionViewDropDelegate collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[PUCollectionsCollectionViewDropDelegate collectionView:shouldSpringLoadItemAtIndexPath:withContext:]
  -[PUCollectionsCollectionViewDropDelegate .cxx_destruct]
  -[PUCollectionsCollectionViewDropDelegate _canHandleDropSession:]
  -[PUCollectionsCollectionViewDropDelegate setDropDataProvider:]
  -[PUCollectionsCollectionViewDropDelegate dropDataProvider]
  -[PUCollectionsCollectionViewDropDelegate _allowDrop]
  -[PUCollectionsCollectionViewDropDelegate _collectionAtIndexPath:]
  -[PUCollectionsCollectionViewDropDelegate _handleDrop:forItemAtIndexPath:]


PUPhotoEditCircularIndicatorView : UIView
 @property  CAShapeLayer *backgroundLayer
 @property  CAShapeLayer *progressLayer
 @property  double thickness
 @property  double currentValue
 @property  UIColor *ringColor
 @property  double minValue
 @property  double maxValue

  // instance methods
  -[PUPhotoEditCircularIndicatorView currentValue]
  -[PUPhotoEditCircularIndicatorView _setupLayers]
  -[PUPhotoEditCircularIndicatorView .cxx_destruct]
  -[PUPhotoEditCircularIndicatorView setMaxValue:]
  -[PUPhotoEditCircularIndicatorView setMinValue:]
  -[PUPhotoEditCircularIndicatorView layoutSubviews]
  -[PUPhotoEditCircularIndicatorView setBackgroundLayer:]
  -[PUPhotoEditCircularIndicatorView backgroundLayer]
  -[PUPhotoEditCircularIndicatorView minValue]
  -[PUPhotoEditCircularIndicatorView thickness]
  -[PUPhotoEditCircularIndicatorView maxValue]
  -[PUPhotoEditCircularIndicatorView initWithFrame:]
  -[PUPhotoEditCircularIndicatorView setCurrentValue:]
  -[PUPhotoEditCircularIndicatorView resetToDefaults]
  -[PUPhotoEditCircularIndicatorView ringColor]
  -[PUPhotoEditCircularIndicatorView setThickness:]
  -[PUPhotoEditCircularIndicatorView setProgressLayer:]
  -[PUPhotoEditCircularIndicatorView progressLayer]
  -[PUPhotoEditCircularIndicatorView _layoutSubLayers]
  -[PUPhotoEditCircularIndicatorView _updateProgressLayer]
  -[PUPhotoEditCircularIndicatorView setRingColor:]


PUPhotoEditEffectCell : UICollectionViewCell
 @property  UIImageView *_imageView
 @property  UILabel *_nameLabel
 @property  UIView *_highlightView
 @property  UIImageView *_selectionView
 @property  UIImage *image
 @property  NSString *name

  // class methods
  +[PUPhotoEditEffectCell selectionOutlineImage]

  // instance methods
  -[PUPhotoEditEffectCell setHighlighted:]
  -[PUPhotoEditEffectCell _imageView]
  -[PUPhotoEditEffectCell name]
  -[PUPhotoEditEffectCell setSelected:animated:]
  -[PUPhotoEditEffectCell image]
  -[PUPhotoEditEffectCell updateConstraints]
  -[PUPhotoEditEffectCell .cxx_destruct]
  -[PUPhotoEditEffectCell setName:]
  -[PUPhotoEditEffectCell _nameLabel]
  -[PUPhotoEditEffectCell setSelected:]
  -[PUPhotoEditEffectCell prepareForReuse]
  -[PUPhotoEditEffectCell _highlightView]
  -[PUPhotoEditEffectCell initWithFrame:]
  -[PUPhotoEditEffectCell setImage:]
  -[PUPhotoEditEffectCell _setImageView:]
  -[PUPhotoEditEffectCell _selectionView]
  -[PUPhotoEditEffectCell _colorForIsSelected:]
  -[PUPhotoEditEffectCell _setNameLabel:]
  -[PUPhotoEditEffectCell _setHighlightView:]
  -[PUPhotoEditEffectCell _setSelectionView:]
  -[PUPhotoEditEffectCell _setSubview:visible:animated:]


PUPhotoEditEffectsSupport : NSObject
  // class methods
  +[PUPhotoEditEffectsSupport lightingEffectTypeForIdentifier:]
  +[PUPhotoEditEffectsSupport updateCompositionController:withDepthEnabled:]
  +[PUPhotoEditEffectsSupport identifierForLightingType:lightingVersion:]
  +[PUPhotoEditEffectsSupport updateCompositionController:withLightingIdentifier:portraitInfo:spillMatteAllowed:]
  +[PUPhotoEditEffectsSupport updateCompositionController:withEffect:intensity:updateVersion:]
  +[PUPhotoEditEffectsSupport _setPortraitEffectFilterName:withVersion:forCompositionController:portraitInfo:spillMatteAllowed:]
  +[PUPhotoEditEffectsSupport _setPortraitEffectEnabled:forCompositionController:]
  +[PUPhotoEditEffectsSupport _setEffectFilterName:withIntensity:withVersion:forCompositionController:]
  +[PUPhotoEditEffectsSupport lightingEffectTypesByIdentifier]
  +[PUPhotoEditEffectsSupport _clearPortraitEffectsWithCompositionController:]
  +[PUPhotoEditEffectsSupport _clearStandardEffectsWithCompositionController:]
  +[PUPhotoEditEffectsSupport updateCompositionController:withEffect:updateVersion:]


PUPhotoEditIrisModel : PUViewModel <NSCopying>
 @property  PICompositionController *compositionController
 @property  unsigned short _editingVisibility
 @property  unsigned short _assetVisibility
 @property  BOOL _assetHasAdjustments
 @property  PUPhotoEditIrisModelChange *currentChange
 @property  <PUEditableAsset> *asset
 @property  BOOL videoEnabled
 @property  BOOL hasUnsavedChanges
 @property  BOOL ignoresUpdates

  // class methods
  +[PUPhotoEditIrisModel updateChangeRequestForRevert:]

  // instance methods
  -[PUPhotoEditIrisModel hasUnsavedChanges]
  -[PUPhotoEditIrisModel .cxx_destruct]
  -[PUPhotoEditIrisModel setVideoEnabled:]
  -[PUPhotoEditIrisModel init]
  -[PUPhotoEditIrisModel asset]
  -[PUPhotoEditIrisModel newViewModelChange]
  -[PUPhotoEditIrisModel currentChange]
  -[PUPhotoEditIrisModel compositionController]
  -[PUPhotoEditIrisModel dealloc]
  -[PUPhotoEditIrisModel copyWithZone:]
  -[PUPhotoEditIrisModel initWithAsset:compositionController:]
  -[PUPhotoEditIrisModel initWithIrisVisibilityState:hasAdjustments:compositionController:]
  -[PUPhotoEditIrisModel _setHidden:explicit:supportable:]
  -[PUPhotoEditIrisModel _editingVisibility]
  -[PUPhotoEditIrisModel _assetVisibility]
  -[PUPhotoEditIrisModel _assetHasAdjustments]
  -[PUPhotoEditIrisModel isVideoEnabled]
  -[PUPhotoEditIrisModel _updateAutoDisableStateIfNeeded]
  -[PUPhotoEditIrisModel ignoresUpdates]
  -[PUPhotoEditIrisModel _hasLegacyIrisConflicts]
  -[PUPhotoEditIrisModel _setEditingVisibility:]
  -[PUPhotoEditIrisModel notifyCannotSupportVideoEdits]
  -[PUPhotoEditIrisModel reenablingLivePhotoShouldRemoveEdits]
  -[PUPhotoEditIrisModel updateChangeRequestForSave:]
  -[PUPhotoEditIrisModel compositionDidChange]
  -[PUPhotoEditIrisModel setIgnoresUpdates:]
  -[PUPhotoEditIrisModel _setCompositionController:]


PUPhotoEditIrisModelChange : PUViewModelChange
 @property  BOOL videoEnabledDidChange

  // instance methods
  -[PUPhotoEditIrisModelChange hasChanges]
  -[PUPhotoEditIrisModelChange _setVideoEnabledDidChange:]
  -[PUPhotoEditIrisModelChange videoEnabledDidChange]


PUPhotoEditLayoutSupport : NSObject
  // class methods
  +[PUPhotoEditLayoutSupport transitionFromBarView:orientation:toBarView:orientation:coordinator:completionHandler:]
  +[PUPhotoEditLayoutSupport layoutConstraintsForHidingView:layoutOrientation:]
  +[PUPhotoEditLayoutSupport layoutConstraintsForHidingSecondaryView:layoutOrientation:]


PUPhotoEditMediaToolController : PUPhotoEditToolController <PUTrimToolControllerDelegate, PUPhotoEditApertureToolbarDelegate, PUVideoEditOverlayViewControllerDelegate, PXCinematicEditControllerDelegate>
 @property  long long layoutType
 @property  UIView *primaryView
 @property  double horizontalControlPadding
 @property  double horizontalPrimaryViewPaddingOffset
 @property  double verticalButtonOffset
 @property  BOOL useTranslucentBackground
 @property  UIButton *livePhotoButton
 @property  PUTrimToolController *trimController
 @property  PTCinematographyScript *cinematographyScript
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoEditMediaToolController _updateLivePhotoButtonAnimated:]
  -[PUPhotoEditMediaToolController setLayoutType:]
  -[PUPhotoEditMediaToolController updateViewConstraints]
  -[PUPhotoEditMediaToolController localizedName]
  -[PUPhotoEditMediaToolController layoutType]
  -[PUPhotoEditMediaToolController setPlaceholderImage:]
  -[PUPhotoEditMediaToolController wantsSecondaryToolbarVisible]
  -[PUPhotoEditMediaToolController .cxx_destruct]
  -[PUPhotoEditMediaToolController livePhotoButton]
  -[PUPhotoEditMediaToolController _invalidateConstraints]
  -[PUPhotoEditMediaToolController viewDidAppear:]
  -[PUPhotoEditMediaToolController initWithNibName:bundle:]
  -[PUPhotoEditMediaToolController setPrimaryView:]
  -[PUPhotoEditMediaToolController init]
  -[PUPhotoEditMediaToolController setBackdropViewGroupName:]
  -[PUPhotoEditMediaToolController interactionBegan]
  -[PUPhotoEditMediaToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PUPhotoEditMediaToolController viewDidLayoutSubviews]
  -[PUPhotoEditMediaToolController canPerformAction:withSender:]
  -[PUPhotoEditMediaToolController _updateBackgroundAnimated:]
  -[PUPhotoEditMediaToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditMediaToolController compositionControllerDidChangeForAdjustments:]
  -[PUPhotoEditMediaToolController primaryView]
  -[PUPhotoEditMediaToolController loadView]
  -[PUPhotoEditMediaToolController togglePlayback:]
  -[PUPhotoEditMediaToolController setUseGradientBackground:animated:]
  -[PUPhotoEditMediaToolController toolbarIcon]
  -[PUPhotoEditMediaToolController centerToolbarView]
  -[PUPhotoEditMediaToolController canResetToDefaultValue]
  -[PUPhotoEditMediaToolController wantsZoomAndPanEnabled]
  -[PUPhotoEditMediaToolController willBecomeActiveTool]
  -[PUPhotoEditMediaToolController toolControllerTag]
  -[PUPhotoEditMediaToolController hasTrimmedVideo]
  -[PUPhotoEditMediaToolController cinematographyWasEditedAtTime:]
  -[PUPhotoEditMediaToolController objectTrackingStartedAtTime:]
  -[PUPhotoEditMediaToolController trackedObjectWasUpdatedAtTime:shouldStop:]
  -[PUPhotoEditMediaToolController objectTrackingFinishedWithSuccess:]
  -[PUPhotoEditMediaToolController baseLivePhotoInvalidated]
  -[PUPhotoEditMediaToolController willResignActiveTool]
  -[PUPhotoEditMediaToolController leadingToolbarViews]
  -[PUPhotoEditMediaToolController trailingToolbarViews]
  -[PUPhotoEditMediaToolController mediaView:didZoom:]
  -[PUPhotoEditMediaToolController mediaViewDidScroll:]
  -[PUPhotoEditMediaToolController _updateApertureSliderLength]
  -[PUPhotoEditMediaToolController _updateToolVisibilityAnimated:]
  -[PUPhotoEditMediaToolController _resetDefaultToolMode]
  -[PUPhotoEditMediaToolController apertureToolbar:didChangeValue:]
  -[PUPhotoEditMediaToolController apertureToolbarShouldRotateLabelsWithOrientation:]
  -[PUPhotoEditMediaToolController toolbarIconAccessibilityLabel]
  -[PUPhotoEditMediaToolController reactivate]
  -[PUPhotoEditMediaToolController accessibilityHUDItemForButton:]
  -[PUPhotoEditMediaToolController wantsScrubberKeyControl]
  -[PUPhotoEditMediaToolController increaseScrubberValue:]
  -[PUPhotoEditMediaToolController decreaseScrubberValue:]
  -[PUPhotoEditMediaToolController setUseTranslucentBackground:]
  -[PUPhotoEditMediaToolController useTranslucentBackground]
  -[PUPhotoEditMediaToolController _updateTrimControlAndToolbarButtons]
  -[PUPhotoEditMediaToolController _layoutToolGradient]
  -[PUPhotoEditMediaToolController horizontalControlPadding]
  -[PUPhotoEditMediaToolController _wantsPortraitVideoControls]
  -[PUPhotoEditMediaToolController horizontalPrimaryViewPaddingOffset]
  -[PUPhotoEditMediaToolController trimController]
  -[PUPhotoEditMediaToolController setOriginalStillImageTime:]
  -[PUPhotoEditMediaToolController updateForIncomingAnimation]
  -[PUPhotoEditMediaToolController _updateTrackerDisplay:]
  -[PUPhotoEditMediaToolController _initializeCinematographyScript]
  -[PUPhotoEditMediaToolController _invalidateTrimControlScrubberThumbnails]
  -[PUPhotoEditMediaToolController _updateMuteButtonAnimated:]
  -[PUPhotoEditMediaToolController _updateStabilizeButtonAnimated:]
  -[PUPhotoEditMediaToolController _updatePortraitVideoButtonAnimated:]
  -[PUPhotoEditMediaToolController _updateApertureControlsAnimated:]
  -[PUPhotoEditMediaToolController _wantsTrimControl]
  -[PUPhotoEditMediaToolController makeTrimToolController]
  -[PUPhotoEditMediaToolController _isTrimAllowed]
  -[PUPhotoEditMediaToolController _handleMuteButton:]
  -[PUPhotoEditMediaToolController _handlePortraitVideoButton:]
  -[PUPhotoEditMediaToolController _handlePortraitVideoButtonLongPress:]
  -[PUPhotoEditMediaToolController _handleApertureButton:]
  -[PUPhotoEditMediaToolController _updateAutoFocusToolbarButton]
  -[PUPhotoEditMediaToolController cinematographyScript]
  -[PUPhotoEditMediaToolController updateCinematicVideoControlsEnableState]
  -[PUPhotoEditMediaToolController _handleStabilizeButton:]
  -[PUPhotoEditMediaToolController _updateLivePhotoButton:]
  -[PUPhotoEditMediaToolController _handleLivePhotoButton:]
  -[PUPhotoEditMediaToolController _handleAutoFocusButton:]
  -[PUPhotoEditMediaToolController cinematographyWasEdited]
  -[PUPhotoEditMediaToolController updateToolbarButtonsAnimated:]
  -[PUPhotoEditMediaToolController _updateStabilizationInProgress:]
  -[PUPhotoEditMediaToolController _reportStabilizeProgress:]
  -[PUPhotoEditMediaToolController _updateStabilizeProgressViewAnimated:]
  -[PUPhotoEditMediaToolController _setToolMode:]
  -[PUPhotoEditMediaToolController _presentPortraitVideoDebugControls]
  -[PUPhotoEditMediaToolController _dismissPortraitVideoDebugControls:]
  -[PUPhotoEditMediaToolController removeFocusDecisionAtTime:]
  -[PUPhotoEditMediaToolController axDescriptionForFocusDecisionAtTime:]
  -[PUPhotoEditMediaToolController trimToolControllerDidChange:state:]
  -[PUPhotoEditMediaToolController trimToolController:didBeginInteractivelyEditingElement:]
  -[PUPhotoEditMediaToolController trimToolController:didEndInteractivelyEditingElement:]
  -[PUPhotoEditMediaToolController cineScriptBecameAvailable:]
  -[PUPhotoEditMediaToolController cineScriptCouldNotInitializeWithError:]
  -[PUPhotoEditMediaToolController didRemoveUserDecision]
  -[PUPhotoEditMediaToolController photoEditLivePhotoModelUpdated]
  -[PUPhotoEditMediaToolController scrubberOrientation]
  -[PUPhotoEditMediaToolController setHorizontalControlPadding:]
  -[PUPhotoEditMediaToolController setVerticalButtonOffset:]
  -[PUPhotoEditMediaToolController videoRenderingChanged]
  -[PUPhotoEditMediaToolController reloadToolbarButtons:]
  -[PUPhotoEditMediaToolController verticalButtonOffset]


PUPortraitVideoDebugController : UIViewController <UITableViewDataSource, UITableViewDelegate>
 @property  NSArray *debugModes
 @property  PICompositionController *compositionController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPortraitVideoDebugController tableView:numberOfRowsInSection:]
  -[PUPortraitVideoDebugController .cxx_destruct]
  -[PUPortraitVideoDebugController tableView:didSelectRowAtIndexPath:]
  -[PUPortraitVideoDebugController tableView:cellForRowAtIndexPath:]
  -[PUPortraitVideoDebugController compositionController]
  -[PUPortraitVideoDebugController setCompositionController:]
  -[PUPortraitVideoDebugController loadView]
  -[PUPortraitVideoDebugController setDebugModes:]
  -[PUPortraitVideoDebugController debugModes]


PUPhotoEditOverlayBadge : UIView
 @property  UILabel *label
 @property  {UIEdgeInsets=dddd} insets
 @property  NSString *text

  // instance methods
  -[PUPhotoEditOverlayBadge label]
  -[PUPhotoEditOverlayBadge setText:]
  -[PUPhotoEditOverlayBadge _updateLabel]
  -[PUPhotoEditOverlayBadge .cxx_destruct]
  -[PUPhotoEditOverlayBadge initWithFrame:]
  -[PUPhotoEditOverlayBadge insets]
  -[PUPhotoEditOverlayBadge text]
  -[PUPhotoEditOverlayBadge intrinsicContentSize]


PUPhotoEditProtoSettings : PXSettings
 @property  BOOL enableNURenderJobDebug
 @property  BOOL nuRenderJobDebugCaptureNodeGraphs
 @property  BOOL nuRenderJobDebugCaptureNodeCache
 @property  BOOL nuRenderJobDebugCaptureCanceledJobs
 @property  BOOL nuRenderJobDebugCapturePerfStatHistory
 @property  BOOL nuRenderJobDebugCaptureOnlyPerfStats
 @property  BOOL nuRenderJobDebugCapture5PercentOfJobs
 @property  BOOL renderBackfillBlue
 @property  BOOL renderZoomPurple
 @property  BOOL enableCoreImageDebugMode
 @property  BOOL enableCoreImageDebugInputs
 @property  BOOL enableCoreImageDebugOutputs
 @property  BOOL enableCoreImageDebugIntermediates
 @property  BOOL enableCoreImageDebugTiming
 @property  BOOL enableVideoStabilizion
 @property  double videoStabilizeMaxCropFraction
 @property  BOOL enableFinalizerGesture
 @property  long long renderPriority
 @property  BOOL useAsynchronousRenderingPhotos
 @property  BOOL disableAsynchronousRenderingVideos
 @property  BOOL enableLiveVideoRender
 @property  BOOL enablePerfDebugHUD
 @property  BOOL enableReframeDebugHUD
 @property  BOOL enableSemanticDevelopmentHUD
 @property  BOOL enableCPVEditing
 @property  BOOL overrideVideoEditability
 @property  BOOL hideTrackersDuringPlayback
 @property  BOOL disableTimelineAnimations
 @property  BOOL enablePerfTTRButton
 @property  double ttrButtonDurationThreshold
 @property  BOOL alwaysShowPortraitV2
 @property  BOOL forceGlassesMatteOff
 @property  BOOL forceSpillMatteOff
 @property  BOOL allowSpillMatteOnOlderPortraitV2Captures
 @property  BOOL showResetToolButton
 @property  BOOL allowAnyPlugin
 @property  BOOL attemptEditExtensionUndoAutoSetup
 @property  double cropSideMargins
 @property  double cropWheelSize
 @property  BOOL cropMaskBlurred
 @property  BOOL autoCropEnabled
 @property  double trackBallSize
 @property  BOOL perspectiveViewDebugCropEnabled
 @property  double cropRecomposeDelay
 @property  double autoStraightenMaxAngle
 @property  double autoPerspectiveMaxYaw
 @property  double autoPerspectiveMaxPitch
 @property  double autoPerspectiveMaxAngle
 @property  double autoPerspectiveMaxFaceSize
 @property  BOOL autoPerspectiveDisableOnPanos
 @property  BOOL autoPerspectiveDisableOnFrontFacingCameraImages
 @property  BOOL simulateDownload
 @property  BOOL simulateDownloadFailure
 @property  BOOL skipPHContentEditingInputDisplaySizeImage
 @property  BOOL simulateEditEntryError
 @property  long long simulatedEditingEntryErrorType
 @property  BOOL showFileRadarButtonForEditEntryOnInternalInstalls
 @property  BOOL previewOriginalTimesOut
 @property  double previewOriginalDuration
 @property  BOOL alwaysShowDoneButton
 @property  BOOL disableIOSurfacePortaitExport
 @property  BOOL loopBounceTrimAllowed
 @property  BOOL pauseAfterMovingPlayhead
 @property  BOOL alwaysAllowKeyPhotoEditing
 @property  BOOL showEffectsPicker
 @property  BOOL allowApertureRedEye
 @property  BOOL requireTapToShowMakePosterFrame
 @property  BOOL allowMakePosterFrameForVideo
 @property  BOOL showVideoScrubberDebugOverlay
 @property  double strokeWidth
 @property  double selectionRingStrokeWidth
 @property  double adjustmentLabelPlatterAlpha
 @property  BOOL alwaysShowValueWhenAdjustmentIsSelected
 @property  BOOL showSuggestedKeyFrame
 @property  BOOL enableEnterEditSmartToneAutoCalc
 @property  BOOL enableEnterEditSmartColorAutoCalc
 @property  BOOL enableEnterEditCropAutoCalc
 @property  BOOL enableEnterEditPerspectiveAutoCalc
 @property  BOOL enableEnterEditDepthEffectAutoCalc
 @property  BOOL enableEnterEditPortraitAutoCalc
 @property  BOOL enableEnterEditFilterThumbnailGeneration
 @property  BOOL runNeutrinoSynchronously
 @property  BOOL showSmartBlackAndWhiteAdjustment
 @property  BOOL showHDRDebugAdjustments
 @property  BOOL allAssetsCanUseHDRPipeline
 @property  BOOL disablePacked10BitPixelFormats
 @property  BOOL showSemanticDevelopmentSwitch
 @property  BOOL showStabilizationWatermark
 @property  BOOL applyVideoOrientationAsMetadata
 @property  unsigned long videoCompositorDebugMode
 @property  BOOL disableVideoFilmstrip
 @property  BOOL showFrameNumberOnVideoScrubber
 @property  BOOL tapTimelineToSeek

  // class methods
  +[PUPhotoEditProtoSettings sharedInstance]
  +[PUPhotoEditProtoSettings settingsControllerModule]
  +[PUPhotoEditProtoSettings isCapableOfLivePhotoRender]

  // instance methods
  -[PUPhotoEditProtoSettings autoPerspectiveMaxPitch]
  -[PUPhotoEditProtoSettings allAssetsCanUseHDRPipeline]
  -[PUPhotoEditProtoSettings enableEnterEditDepthEffectAutoCalc]
  -[PUPhotoEditProtoSettings forceSpillMatteOff]
  -[PUPhotoEditProtoSettings enableCoreImageDebugIntermediates]
  -[PUPhotoEditProtoSettings setEnableCoreImageDebugMode:]
  -[PUPhotoEditProtoSettings parentSettings]
  -[PUPhotoEditProtoSettings setShowResetToolButton:]
  -[PUPhotoEditProtoSettings setShowSemanticDevelopmentSwitch:]
  -[PUPhotoEditProtoSettings simulateDownload]
  -[PUPhotoEditProtoSettings setPauseAfterMovingPlayhead:]
  -[PUPhotoEditProtoSettings setDisableTimelineAnimations:]
  -[PUPhotoEditProtoSettings setEnableVideoStabilizion:]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCaptureCanceledJobs]
  -[PUPhotoEditProtoSettings setVideoCompositorDebugMode:]
  -[PUPhotoEditProtoSettings enableEnterEditCropAutoCalc]
  -[PUPhotoEditProtoSettings setAdjustmentLabelPlatterAlpha:]
  -[PUPhotoEditProtoSettings enableVideoStabilizion]
  -[PUPhotoEditProtoSettings setSimulateDownload:]
  -[PUPhotoEditProtoSettings autoPerspectiveMaxAngle]
  -[PUPhotoEditProtoSettings setOverrideVideoEditability:]
  -[PUPhotoEditProtoSettings setDisableAsynchronousRenderingVideos:]
  -[PUPhotoEditProtoSettings showVideoScrubberDebugOverlay]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCaptureCanceledJobs:]
  -[PUPhotoEditProtoSettings enableReframeDebugHUD]
  -[PUPhotoEditProtoSettings requireTapToShowMakePosterFrame]
  -[PUPhotoEditProtoSettings setEnablePerfTTRButton:]
  -[PUPhotoEditProtoSettings setAutoStraightenMaxAngle:]
  -[PUPhotoEditProtoSettings setAutoPerspectiveDisableOnPanos:]
  -[PUPhotoEditProtoSettings setEnableFinalizerGesture:]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCaptureNodeCache]
  -[PUPhotoEditProtoSettings previewOriginalTimesOut]
  -[PUPhotoEditProtoSettings setEnableNURenderJobDebug:]
  -[PUPhotoEditProtoSettings setPreviewOriginalTimesOut:]
  -[PUPhotoEditProtoSettings pauseAfterMovingPlayhead]
  -[PUPhotoEditProtoSettings cropWheelSize]
  -[PUPhotoEditProtoSettings setShowFileRadarButtonForEditEntryOnInternalInstalls:]
  -[PUPhotoEditProtoSettings autoPerspectiveDisableOnPanos]
  -[PUPhotoEditProtoSettings disableIOSurfacePortaitExport]
  -[PUPhotoEditProtoSettings allowApertureRedEye]
  -[PUPhotoEditProtoSettings setSimulateDownloadFailure:]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCapturePerfStatHistory]
  -[PUPhotoEditProtoSettings renderBackfillBlue]
  -[PUPhotoEditProtoSettings setTapTimelineToSeek:]
  -[PUPhotoEditProtoSettings setAutoCropEnabled:]
  -[PUPhotoEditProtoSettings setSkipPHContentEditingInputDisplaySizeImage:]
  -[PUPhotoEditProtoSettings setEnableLiveVideoRender:]
  -[PUPhotoEditProtoSettings setPreviewOriginalDuration:]
  -[PUPhotoEditProtoSettings showStabilizationWatermark]
  -[PUPhotoEditProtoSettings setAutoPerspectiveMaxFaceSize:]
  -[PUPhotoEditProtoSettings showFrameNumberOnVideoScrubber]
  -[PUPhotoEditProtoSettings disablePacked10BitPixelFormats]
  -[PUPhotoEditProtoSettings disableTimelineAnimations]
  -[PUPhotoEditProtoSettings setTrackBallSize:]
  -[PUPhotoEditProtoSettings setShowFrameNumberOnVideoScrubber:]
  -[PUPhotoEditProtoSettings cropMaskBlurred]
  -[PUPhotoEditProtoSettings tapTimelineToSeek]
  -[PUPhotoEditProtoSettings setForceSpillMatteOff:]
  -[PUPhotoEditProtoSettings applyVideoOrientationAsMetadata]
  -[PUPhotoEditProtoSettings setDisablePacked10BitPixelFormats:]
  -[PUPhotoEditProtoSettings enableNURenderJobDebug]
  -[PUPhotoEditProtoSettings setEnableReframeDebugHUD:]
  -[PUPhotoEditProtoSettings setAttemptEditExtensionUndoAutoSetup:]
  -[PUPhotoEditProtoSettings setEnableEnterEditDepthEffectAutoCalc:]
  -[PUPhotoEditProtoSettings showSemanticDevelopmentSwitch]
  -[PUPhotoEditProtoSettings runNeutrinoSynchronously]
  -[PUPhotoEditProtoSettings setAutoPerspectiveMaxYaw:]
  -[PUPhotoEditProtoSettings simulatedEditingEntryErrorType]
  -[PUPhotoEditProtoSettings enableCoreImageDebugOutputs]
  -[PUPhotoEditProtoSettings renderPriority]
  -[PUPhotoEditProtoSettings enablePerfDebugHUD]
  -[PUPhotoEditProtoSettings setEnableCoreImageDebugInputs:]
  -[PUPhotoEditProtoSettings autoPerspectiveMaxYaw]
  -[PUPhotoEditProtoSettings setRenderPriority:]
  -[PUPhotoEditProtoSettings overrideVideoEditability]
  -[PUPhotoEditProtoSettings setCropWheelSize:]
  -[PUPhotoEditProtoSettings enableCPVEditing]
  -[PUPhotoEditProtoSettings enableEnterEditSmartToneAutoCalc]
  -[PUPhotoEditProtoSettings setAllowSpillMatteOnOlderPortraitV2Captures:]
  -[PUPhotoEditProtoSettings showSmartBlackAndWhiteAdjustment]
  -[PUPhotoEditProtoSettings setSimulateEditEntryError:]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCaptureNodeGraphs:]
  -[PUPhotoEditProtoSettings simulateEditEntryError]
  -[PUPhotoEditProtoSettings setDisableVideoFilmstrip:]
  -[PUPhotoEditProtoSettings setShowSmartBlackAndWhiteAdjustment:]
  -[PUPhotoEditProtoSettings skipPHContentEditingInputDisplaySizeImage]
  -[PUPhotoEditProtoSettings forceGlassesMatteOff]
  -[PUPhotoEditProtoSettings trackBallSize]
  -[PUPhotoEditProtoSettings setStrokeWidth:]
  -[PUPhotoEditProtoSettings setDefaultValues]
  -[PUPhotoEditProtoSettings enableEnterEditSmartColorAutoCalc]
  -[PUPhotoEditProtoSettings setAllAssetsCanUseHDRPipeline:]
  -[PUPhotoEditProtoSettings perspectiveViewDebugCropEnabled]
  -[PUPhotoEditProtoSettings setAutoPerspectiveMaxAngle:]
  -[PUPhotoEditProtoSettings videoStabilizeMaxCropFraction]
  -[PUPhotoEditProtoSettings setCropSideMargins:]
  -[PUPhotoEditProtoSettings setShowStabilizationWatermark:]
  -[PUPhotoEditProtoSettings showSuggestedKeyFrame]
  -[PUPhotoEditProtoSettings setEnableCoreImageDebugTiming:]
  -[PUPhotoEditProtoSettings setRequireTapToShowMakePosterFrame:]
  -[PUPhotoEditProtoSettings setShowSuggestedKeyFrame:]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCaptureOnlyPerfStats:]
  -[PUPhotoEditProtoSettings setAllowApertureRedEye:]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCapture5PercentOfJobs]
  -[PUPhotoEditProtoSettings setRunNeutrinoSynchronously:]
  -[PUPhotoEditProtoSettings setEnableCPVEditing:]
  -[PUPhotoEditProtoSettings attemptEditExtensionUndoAutoSetup]
  -[PUPhotoEditProtoSettings setRenderBackfillBlue:]
  -[PUPhotoEditProtoSettings allowSpillMatteOnOlderPortraitV2Captures]
  -[PUPhotoEditProtoSettings alwaysAllowKeyPhotoEditing]
  -[PUPhotoEditProtoSettings enableEnterEditPortraitAutoCalc]
  -[PUPhotoEditProtoSettings hideTrackersDuringPlayback]
  -[PUPhotoEditProtoSettings enableEnterEditFilterThumbnailGeneration]
  -[PUPhotoEditProtoSettings setEnableEnterEditPerspectiveAutoCalc:]
  -[PUPhotoEditProtoSettings setAlwaysShowValueWhenAdjustmentIsSelected:]
  -[PUPhotoEditProtoSettings setHideTrackersDuringPlayback:]
  -[PUPhotoEditProtoSettings setLoopBounceTrimAllowed:]
  -[PUPhotoEditProtoSettings setAllowMakePosterFrameForVideo:]
  -[PUPhotoEditProtoSettings autoPerspectiveMaxFaceSize]
  -[PUPhotoEditProtoSettings strokeWidth]
  -[PUPhotoEditProtoSettings setShowVideoScrubberDebugOverlay:]
  -[PUPhotoEditProtoSettings setEnableCoreImageDebugOutputs:]
  -[PUPhotoEditProtoSettings setUseAsynchronousRenderingPhotos:]
  -[PUPhotoEditProtoSettings showHDRDebugAdjustment]
  -[PUPhotoEditProtoSettings setEnableSemanticDevelopmentHUD:]
  -[PUPhotoEditProtoSettings showFileRadarButtonForEditEntryOnInternalInstalls]
  -[PUPhotoEditProtoSettings setCropMaskBlurred:]
  -[PUPhotoEditProtoSettings setShowHDRDebugAdjustments:]
  -[PUPhotoEditProtoSettings setShowEffectsPicker:]
  -[PUPhotoEditProtoSettings cropSideMargins]
  -[PUPhotoEditProtoSettings enablePerfTTRButton]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCaptureNodeGraphs]
  -[PUPhotoEditProtoSettings setAlwaysShowPortraitV2:]
  -[PUPhotoEditProtoSettings setEnableCoreImageDebugIntermediates:]
  -[PUPhotoEditProtoSettings adjustmentLabelPlatterAlpha]
  -[PUPhotoEditProtoSettings autoCropEnabled]
  -[PUPhotoEditProtoSettings cropRecomposeDelay]
  -[PUPhotoEditProtoSettings enableCoreImageDebugMode]
  -[PUPhotoEditProtoSettings allowAnyPlugin]
  -[PUPhotoEditProtoSettings renderZoomPurple]
  -[PUPhotoEditProtoSettings setForceGlassesMatteOff:]
  -[PUPhotoEditProtoSettings enableEnterEditPerspectiveAutoCalc]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCapture5PercentOfJobs:]
  -[PUPhotoEditProtoSettings setEnableEnterEditFilterThumbnailGeneration:]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCapturePerfStatHistory:]
  -[PUPhotoEditProtoSettings setApplyVideoOrientationAsMetadata:]
  -[PUPhotoEditProtoSettings setPerspectiveViewDebugCropEnabled:]
  -[PUPhotoEditProtoSettings setRenderZoomPurple:]
  -[PUPhotoEditProtoSettings autoStraightenMaxAngle]
  -[PUPhotoEditProtoSettings setTtrButtonDurationThreshold:]
  -[PUPhotoEditProtoSettings setEnableEnterEditPortraitAutoCalc:]
  -[PUPhotoEditProtoSettings setVideoStabilizeMaxCropFraction:]
  -[PUPhotoEditProtoSettings showEffectsPicker]
  -[PUPhotoEditProtoSettings showHDRDebugAdjustments]
  -[PUPhotoEditProtoSettings ttrButtonDurationThreshold]
  -[PUPhotoEditProtoSettings setEnableEnterEditSmartColorAutoCalc:]
  -[PUPhotoEditProtoSettings setDisableIOSurfacePortaitExport:]
  -[PUPhotoEditProtoSettings updateCoreImageDebug]
  -[PUPhotoEditProtoSettings useAsynchronousRenderingPhotos]
  -[PUPhotoEditProtoSettings videoCompositorDebugMode]
  -[PUPhotoEditProtoSettings alwaysShowDoneButton]
  -[PUPhotoEditProtoSettings enableLiveVideoRender]
  -[PUPhotoEditProtoSettings simulateDownloadFailure]
  -[PUPhotoEditProtoSettings autoPerspectiveDisableOnFrontFacingCameraImages]
  -[PUPhotoEditProtoSettings enableSemanticDevelopmentHUD]
  -[PUPhotoEditProtoSettings enableCoreImageDebugInputs]
  -[PUPhotoEditProtoSettings disableVideoFilmstrip]
  -[PUPhotoEditProtoSettings loopBounceTrimAllowed]
  -[PUPhotoEditProtoSettings selectionRingStrokeWidth]
  -[PUPhotoEditProtoSettings setAlwaysShowDoneButton:]
  -[PUPhotoEditProtoSettings setEnableEnterEditCropAutoCalc:]
  -[PUPhotoEditProtoSettings setEnableEnterEditSmartToneAutoCalc:]
  -[PUPhotoEditProtoSettings setEnablePerfDebugHUD:]
  -[PUPhotoEditProtoSettings alwaysShowValueWhenAdjustmentIsSelected]
  -[PUPhotoEditProtoSettings disableAsynchronousRenderingVideos]
  -[PUPhotoEditProtoSettings enableCoreImageDebugTiming]
  -[PUPhotoEditProtoSettings previewOriginalDuration]
  -[PUPhotoEditProtoSettings allowMakePosterFrameForVideo]
  -[PUPhotoEditProtoSettings setNuRenderJobDebugCaptureNodeCache:]
  -[PUPhotoEditProtoSettings setAutoPerspectiveDisableOnFrontFacingCameraImages:]
  -[PUPhotoEditProtoSettings setCropRecomposeDelay:]
  -[PUPhotoEditProtoSettings setAllowAnyPlugin:]
  -[PUPhotoEditProtoSettings setSelectionRingStrokeWidth:]
  -[PUPhotoEditProtoSettings setSimulatedEditingEntryErrorType:]
  -[PUPhotoEditProtoSettings setAutoPerspectiveMaxPitch:]
  -[PUPhotoEditProtoSettings showResetToolButton]
  -[PUPhotoEditProtoSettings alwaysShowPortraitV2]
  -[PUPhotoEditProtoSettings enableFinalizerGesture]
  -[PUPhotoEditProtoSettings setAlwaysAllowKeyPhotoEditing:]
  -[PUPhotoEditProtoSettings nuRenderJobDebugCaptureOnlyPerfStats]


PUPhotoEditResourceLoadRequest : NSObject <NSCopying>
 @property  long long _resolvedVersion
 @property  BOOL assetLoadingAsRaw
 @property  BOOL requireLocalResources
 @property  BOOL requireAdjustments
 @property  <PUPhotoEditResourceLoaderDelegate> *delegate
 @property  long long version
 @property  {CGSize=dd} targetSize

  // instance methods
  -[PUPhotoEditResourceLoadRequest targetSize]
  -[PUPhotoEditResourceLoadRequest setTargetSize:]
  -[PUPhotoEditResourceLoadRequest .cxx_destruct]
  -[PUPhotoEditResourceLoadRequest setDelegate:]
  -[PUPhotoEditResourceLoadRequest setVersion:]
  -[PUPhotoEditResourceLoadRequest delegate]
  -[PUPhotoEditResourceLoadRequest version]
  -[PUPhotoEditResourceLoadRequest copyWithZone:]
  -[PUPhotoEditResourceLoadRequest requireLocalResources]
  -[PUPhotoEditResourceLoadRequest setRequireLocalResources:]
  -[PUPhotoEditResourceLoadRequest requireAdjustments]
  -[PUPhotoEditResourceLoadRequest setRequireAdjustments:]
  -[PUPhotoEditResourceLoadRequest _setResolvedVersion:]
  -[PUPhotoEditResourceLoadRequest _isWorkVersionResolved]
  -[PUPhotoEditResourceLoadRequest _resolvedVersion]
  -[PUPhotoEditResourceLoadRequest _needsLoadAdjustments]
  -[PUPhotoEditResourceLoadRequest _resolveVersionIfNeededWithWorkVersion:]
  -[PUPhotoEditResourceLoadRequest _assertWorkVersionResolved]
  -[PUPhotoEditResourceLoadRequest assetLoadingAsRaw]
  -[PUPhotoEditResourceLoadRequest setAssetLoadingAsRaw:]


PUPhotoEditResourceLoadResult : NSObject
 @property  PICompositionController *compositionController
 @property  NUComposition *originalComposition
 @property  PUPhotoEditIrisModel *livePhotoModel
 @property  UIImage *image
 @property  NSURL *imageURL
 @property  NSString *imageUTI
 @property  NSURL *videoComplementURL
 @property  {?=qiIq} videoComplementStillImageTime
 @property  {?=qiIq} videoComplementOriginalStillImageTime
 @property  {?=qiIq} videoComplementDuration
 @property  long long retrievedVersion
 @property  long long penultimateAvailability
 @property  <PUEditableAsset> *asset
 @property  BOOL assetLoadingAsRaw
 @property  PHContentEditingInput *contentEditingInput
 @property  NSURL *overcaptureImageURL
 @property  NSURL *overcaptureVideoURL
 @property  BOOL penultimateAvailable

  // class methods
  +[PUPhotoEditResourceLoadResult resultWithContentEditingInput:asset:]

  // instance methods
  -[PUPhotoEditResourceLoadResult _setImage:]
  -[PUPhotoEditResourceLoadResult imageURL]
  -[PUPhotoEditResourceLoadResult overcaptureEditSource]
  -[PUPhotoEditResourceLoadResult image]
  -[PUPhotoEditResourceLoadResult .cxx_destruct]
  -[PUPhotoEditResourceLoadResult asset]
  -[PUPhotoEditResourceLoadResult imageUTI]
  -[PUPhotoEditResourceLoadResult videoComplementURL]
  -[PUPhotoEditResourceLoadResult compositionController]
  -[PUPhotoEditResourceLoadResult originalComposition]
  -[PUPhotoEditResourceLoadResult editSource]
  -[PUPhotoEditResourceLoadResult _setAsset:]
  -[PUPhotoEditResourceLoadResult videoComplementDuration]
  -[PUPhotoEditResourceLoadResult retrievedVersion]
  -[PUPhotoEditResourceLoadResult contentEditingInput]
  -[PUPhotoEditResourceLoadResult _setCompositionController:]
  -[PUPhotoEditResourceLoadResult assetLoadingAsRaw]
  -[PUPhotoEditResourceLoadResult _setContentEditingInput:]
  -[PUPhotoEditResourceLoadResult _setImageURL:]
  -[PUPhotoEditResourceLoadResult _setImageUTI:]
  -[PUPhotoEditResourceLoadResult setOvercaptureImageURL:]
  -[PUPhotoEditResourceLoadResult setOvercaptureVideoURL:]
  -[PUPhotoEditResourceLoadResult _setVideoComplementURL:]
  -[PUPhotoEditResourceLoadResult _setPenultimateAvailability:]
  -[PUPhotoEditResourceLoadResult penultimateAvailability]
  -[PUPhotoEditResourceLoadResult isPenultimateAvailable]
  -[PUPhotoEditResourceLoadResult _setOriginalComposition:]
  -[PUPhotoEditResourceLoadResult videoComplementStillImageTime]
  -[PUPhotoEditResourceLoadResult _setVideoComplementStillImageTime:]
  -[PUPhotoEditResourceLoadResult videoComplementOriginalStillImageTime]
  -[PUPhotoEditResourceLoadResult setVideoComplementOriginalStillImageTime:]
  -[PUPhotoEditResourceLoadResult _setVideoComplementDuration:]
  -[PUPhotoEditResourceLoadResult _setRetrievedVersion:]
  -[PUPhotoEditResourceLoadResult _setAssetLoadingAsRaw:]
  -[PUPhotoEditResourceLoadResult livePhotoModel]
  -[PUPhotoEditResourceLoadResult _setLivePhotoModel:]
  -[PUPhotoEditResourceLoadResult overcaptureImageURL]
  -[PUPhotoEditResourceLoadResult overcaptureVideoURL]


PUPhotoEditResourceLoader : NSObject
 @property  long long resourcesAvailability
 @property  PUPhotoEditResourceLoadRequest *currentRequest
 @property  NSMutableArray *_enqueuedRequests
 @property  unsigned long _contentEditingRequestID
 @property  <PUEditableAsset> *asset
 @property  PUEditableMediaProvider *mediaProvider
 @property  BOOL resourcesAvailable
 @property  BOOL downloadingResources
 @property  BOOL checkingAvailability

  // class methods
  +[PUPhotoEditResourceLoader compositionFromPHAdjustmentData:error:]

  // instance methods
  -[PUPhotoEditResourceLoader enqueueRequest:]
  -[PUPhotoEditResourceLoader .cxx_destruct]
  -[PUPhotoEditResourceLoader mediaProvider]
  -[PUPhotoEditResourceLoader asset]
  -[PUPhotoEditResourceLoader cancelAllRequests]
  -[PUPhotoEditResourceLoader setCurrentRequest:]
  -[PUPhotoEditResourceLoader currentRequest]
  -[PUPhotoEditResourceLoader initWithAsset:mediaProvider:]
  -[PUPhotoEditResourceLoader _enqueuedRequests]
  -[PUPhotoEditResourceLoader _setEnqueuedRequests:]
  -[PUPhotoEditResourceLoader _initiateRequest:]
  -[PUPhotoEditResourceLoader resourcesAvailability]
  -[PUPhotoEditResourceLoader _setResourcesAvailability:]
  -[PUPhotoEditResourceLoader _requestContentEditingInputForRequest:networkAccessAllowed:]
  -[PUPhotoEditResourceLoader _downloadSignpostEvent:]
  -[PUPhotoEditResourceLoader workImageVersionForContentEditingInput:]
  -[PUPhotoEditResourceLoader _handleSuccess:withResult:forRequest:error:]
  -[PUPhotoEditResourceLoader _processLoadedContentEditingInput:info:forRequest:]
  -[PUPhotoEditResourceLoader _adjustmentDataIsSupported:]
  -[PUPhotoEditResourceLoader _processContentEditingInputRequestCompletion:info:forRequest:]
  -[PUPhotoEditResourceLoader _dequeueRequestIfNeeded]
  -[PUPhotoEditResourceLoader isCheckingForResourceAvailability]
  -[PUPhotoEditResourceLoader isDownloadingResources]
  -[PUPhotoEditResourceLoader areResourcesAvailable]
  -[PUPhotoEditResourceLoader _contentEditingRequestID]
  -[PUPhotoEditResourceLoader _setContentEditingRequestID:]


PUPhotoEditSaveRequest : NSObject
 @property  int identifier
 @property  PHAsset *photo
 @property  PICompositionController *compositionController
 @property  NUComposition *originalComposition
 @property  PUPhotoEditIrisModel *irisModel
 @property  PHContentEditingOutput *contentEditingOutput
 @property  long long workImageVersion
 @property  long long currentState
 @property  BOOL supportsProgress
 @property  double progress

  // instance methods
  -[PUPhotoEditSaveRequest _transitionToState:]
  -[PUPhotoEditSaveRequest .cxx_destruct]
  -[PUPhotoEditSaveRequest photo]
  -[PUPhotoEditSaveRequest progress]
  -[PUPhotoEditSaveRequest init]
  -[PUPhotoEditSaveRequest identifier]
  -[PUPhotoEditSaveRequest currentState]
  -[PUPhotoEditSaveRequest compositionController]
  -[PUPhotoEditSaveRequest originalComposition]
  -[PUPhotoEditSaveRequest irisModel]
  -[PUPhotoEditSaveRequest contentEditingOutput]
  -[PUPhotoEditSaveRequest initWithPhoto:compositionController:contentEditingOutput:workImageVersion:irisEditModel:originalComposition:useRawIfAvailable:]
  -[PUPhotoEditSaveRequest _performSaveEditsOperation]
  -[PUPhotoEditSaveRequest _performSaveContentEditingOutput]
  -[PUPhotoEditSaveRequest _performRevertToOriginalOperation]
  -[PUPhotoEditSaveRequest _finishWithSuccess:error:]
  -[PUPhotoEditSaveRequest _requiresVideoRender]
  -[PUPhotoEditSaveRequest supportsProgress]
  -[PUPhotoEditSaveRequest initWithPhotoToRevertToOriginal:]
  -[PUPhotoEditSaveRequest initWithPhoto:contentEditingOutput:workImageVersion:irisEditModel:useRawIfAvailable:]
  -[PUPhotoEditSaveRequest beginSaveOperationWithCompletionHandler:]
  -[PUPhotoEditSaveRequest _imageRequestVersion]
  -[PUPhotoEditSaveRequest _videoRequestVersion]
  -[PUPhotoEditSaveRequest cancelSaveOperation]
  -[PUPhotoEditSaveRequest workImageVersion]


PUPhotoEditSnapshot : NSObject
 @property  long long workImageVersion
 @property  PHAdjustmentData *adjustmentData
 @property  NSData *imageData
 @property  NSData *baseImageData
 @property  AVURLAsset *videoComplement
 @property  AVURLAsset *baseVideoComplement

  // class methods
  +[PUPhotoEditSnapshot captureSnapshotForAsset:mediaProvider:completion:]

  // instance methods
  -[PUPhotoEditSnapshot .cxx_destruct]
  -[PUPhotoEditSnapshot imageData]
  -[PUPhotoEditSnapshot videoComplement]
  -[PUPhotoEditSnapshot init]
  -[PUPhotoEditSnapshot _setImageData:]
  -[PUPhotoEditSnapshot adjustmentData]
  -[PUPhotoEditSnapshot workImageVersion]
  -[PUPhotoEditSnapshot _copyData:]
  -[PUPhotoEditSnapshot _copyAsset:]
  -[PUPhotoEditSnapshot _copyDataAtURL:]
  -[PUPhotoEditSnapshot _copySourceData:destinationData:destinationURL:]
  -[PUPhotoEditSnapshot _setBaseImageData:]
  -[PUPhotoEditSnapshot _setVideoComplement:]
  -[PUPhotoEditSnapshot _setBaseVideoComplement:]
  -[PUPhotoEditSnapshot _setWorkImageVersion:]
  -[PUPhotoEditSnapshot _setAdjustmentData:]
  -[PUPhotoEditSnapshot baseImageData]
  -[PUPhotoEditSnapshot baseVideoComplement]


PUPhotoEditBaseMediaNode : PXRunNode <PUImageDataNode, PUVideoAssetNode, PXRunNodeDelegate>
 @property  PUEditableMediaProviderAdjustmentDataNode *adjustmentNode
 @property  NSData *imageData
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AVAsset *videoAsset

  // instance methods
  -[PUPhotoEditBaseMediaNode .cxx_destruct]
  -[PUPhotoEditBaseMediaNode imageData]
  -[PUPhotoEditBaseMediaNode videoAsset]
  -[PUPhotoEditBaseMediaNode run]
  -[PUPhotoEditBaseMediaNode initWithAdjustmentNode:]
  -[PUPhotoEditBaseMediaNode adjustmentNode]
  -[PUPhotoEditBaseMediaNode runNode:didCompleteWithError:]


PUPhotoEditSnapshotFinishingNode : PXRunNode
 @property  PUEditableMediaProviderAdjustmentDataNode *adjustmentNode
 @property  PUPhotoEditBaseMediaNode *baseMediaNode
 @property  PUEditableMediaProviderImageDataNode *currentImageNode
 @property  PUEditableMediaProviderVideoAssetNode *currentVideoNode
 @property  @? completionHandler

  // instance methods
  -[PUPhotoEditSnapshotFinishingNode .cxx_destruct]
  -[PUPhotoEditSnapshotFinishingNode completionHandler]
  -[PUPhotoEditSnapshotFinishingNode run]
  -[PUPhotoEditSnapshotFinishingNode initWithAdjustmentNode:baseMediaNode:currentImageNode:currentVideoNode:completionHandler:]
  -[PUPhotoEditSnapshotFinishingNode adjustmentNode]
  -[PUPhotoEditSnapshotFinishingNode baseMediaNode]
  -[PUPhotoEditSnapshotFinishingNode currentImageNode]
  -[PUPhotoEditSnapshotFinishingNode currentVideoNode]


PUPhotoEditSupport : NSObject
  // class methods
  +[PUPhotoEditSupport changeValueOfSlider:reverse:coarse:]
  +[PUPhotoEditSupport photoWasTakenWithoutFlashWithImageProperties:]
  +[PUPhotoEditSupport photoEditStylisticFontForSize:]
  +[PUPhotoEditSupport currentDeviceShouldAllowRawDecode]


PUPhotoEditTaskManager : NSObject
  // class methods
  +[PUPhotoEditTaskManager sharedManager]

  // instance methods
  -[PUPhotoEditTaskManager init]
  -[PUPhotoEditTaskManager createEditableCopyForReadOnlyPhoto:completionHandler:]


PUPhotoEditToolControllerView : UIView
 @property  PUPhotoEditToolController *toolController

  // instance methods
  -[PUPhotoEditToolControllerView hitTest:withEvent:]
  -[PUPhotoEditToolControllerView .cxx_destruct]
  -[PUPhotoEditToolControllerView toolController]
  -[PUPhotoEditToolControllerView setToolController:]


_PUPhotoEditToolGradientView : UIView
  // instance methods
  -[_PUPhotoEditToolGradientView hitTest:withEvent:]


PUPhotoEditToolController : UIViewController <PUViewControllerSpecChangeObserver, PUPhotoEditLayoutDynamicAdaptable>
 @property  NSMutableArray *mutableEditActionActivites
 @property  PFSlowMotionTimeRangeMapper *slowMotionTimeMapper
 @property  PUPhotoEditToolControllerSpec *toolControllerSpec
 @property  BOOL performingLiveInteraction
 @property  UIButton *preferredAlternateToolbarButton
 @property  PUPhotoEditAggregateSession *aggregateSession
 @property  BOOL supportsPreviewingOriginal
 @property  BOOL wantsScrubberKeyControl
 @property  long long scrubberOrientation
 @property  BOOL wantsSliderKeyControl
 @property  @? ppt_didBecomeActiveToolBlock
 @property  <PUEditableAsset> *asset
 @property  PICompositionController *compositionController
 @property  PICompositionController *uneditedCompositionController
 @property  PLEditSource *editSource
 @property  PLEditSource *overcaptureEditSource
 @property  PUPhotoEditValuesCalculator *valuesCalculator
 @property  PUPhotoEditViewControllerSpec *photoEditSpec
 @property  <PUPhotoEditToolControllerDelegate> *delegate
 @property  UIView *toolContainerView
 @property  double toolGradientDistance
 @property  NSString *localizedName
 @property  UIImage *toolbarIcon
 @property  UIImage *selectedToolbarIcon
 @property  NSString *toolbarIconAccessibilityLabel
 @property  BOOL canResetToDefaultValue
 @property  NSString *localizedResetToolActionTitle
 @property  {UIEdgeInsets=dddd} preferredPreviewViewInsets
 @property  BOOL wantsDefaultPreviewView
 @property  UIColor *preferredPreviewBackgroundColor
 @property  BOOL wantsZoomAndPanEnabled
 @property  BOOL wantsSecondaryToolbarVisible
 @property  BOOL suppressesEditUpdates
 @property  BOOL handlesVideoPlaying
 @property  BOOL handlesMediaViewInsets
 @property  NURenderPipelineFilter *filter
 @property  NSString *backdropViewGroupName
 @property  UIView *leftToolbarView
 @property  UIView *centerToolbarView
 @property  long long toolControllerTag
 @property  NSArray *editActionActivities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long layoutOrientation

  // instance methods
  -[PUPhotoEditToolController localizedName]
  -[PUPhotoEditToolController prefersHomeIndicatorAutoHidden]
  -[PUPhotoEditToolController setPlaceholderImage:]
  -[PUPhotoEditToolController valuesCalculator]
  -[PUPhotoEditToolController traitCollectionDidChange:]
  -[PUPhotoEditToolController wantsSecondaryToolbarVisible]
  -[PUPhotoEditToolController overcaptureEditSource]
  -[PUPhotoEditToolController layoutOrientation]
  -[PUPhotoEditToolController .cxx_destruct]
  -[PUPhotoEditToolController canBecomeFirstResponder]
  -[PUPhotoEditToolController setDelegate:]
  -[PUPhotoEditToolController viewDidAppear:]
  -[PUPhotoEditToolController initWithNibName:bundle:]
  -[PUPhotoEditToolController setLayoutOrientation:]
  -[PUPhotoEditToolController asset]
  -[PUPhotoEditToolController setBackdropViewGroupName:]
  -[PUPhotoEditToolController gestureRecognizerShouldBegin:]
  -[PUPhotoEditToolController filter]
  -[PUPhotoEditToolController setToolControllerSpec:]
  -[PUPhotoEditToolController photoEditSpec]
  -[PUPhotoEditToolController setupWithAsset:compositionController:editSource:overcaptureEditSource:valuesCalculator:]
  -[PUPhotoEditToolController viewDidLayoutSubviews]
  -[PUPhotoEditToolController viewWillAppear:]
  -[PUPhotoEditToolController toolContainerView]
  -[PUPhotoEditToolController resetToDefaultValueAnimated:]
  -[PUPhotoEditToolController didBecomeActiveTool]
  -[PUPhotoEditToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditToolController specDidChange]
  -[PUPhotoEditToolController compositionControllerDidChangeForAdjustments:]
  -[PUPhotoEditToolController toolControllerSpec]
  -[PUPhotoEditToolController compositionController]
  -[PUPhotoEditToolController delegate]
  -[PUPhotoEditToolController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUPhotoEditToolController dealloc]
  -[PUPhotoEditToolController editSource]
  -[PUPhotoEditToolController loadView]
  -[PUPhotoEditToolController backdropViewGroupName]
  -[PUPhotoEditToolController mediaViewIsReady]
  -[PUPhotoEditToolController setUseGradientBackground:animated:]
  -[PUPhotoEditToolController toolbarIcon]
  -[PUPhotoEditToolController centerToolbarView]
  -[PUPhotoEditToolController canResetToDefaultValue]
  -[PUPhotoEditToolController localizedResetToolActionTitle]
  -[PUPhotoEditToolController wantsZoomAndPanEnabled]
  -[PUPhotoEditToolController wantsSliderKeyControl]
  -[PUPhotoEditToolController increaseSliderValue:]
  -[PUPhotoEditToolController decreaseSliderValue:]
  -[PUPhotoEditToolController installTogglePreviewGestureRecognizer:]
  -[PUPhotoEditToolController installLivePhotoPlaybackGestureRecognizer:]
  -[PUPhotoEditToolController willBecomeActiveTool]
  -[PUPhotoEditToolController toolControllerTag]
  -[PUPhotoEditToolController viewDidDisappear:]
  -[PUPhotoEditToolController setToolGradientDistance:]
  -[PUPhotoEditToolController originalAssetTimeForDisplayedTime:]
  -[PUPhotoEditToolController aggregateSession]
  -[PUPhotoEditToolController addEditActionActivity:]
  -[PUPhotoEditToolController removeEditActionActivity:]
  -[PUPhotoEditToolController displayedTimeForOriginalAssetTime:]
  -[PUPhotoEditToolController basePhotoInvalidated]
  -[PUPhotoEditToolController baseLivePhotoInvalidated]
  -[PUPhotoEditToolController prepareForToolTransitionWithCompletion:]
  -[PUPhotoEditToolController preferredPreviewViewInsets]
  -[PUPhotoEditToolController wantsDefaultPreviewView]
  -[PUPhotoEditToolController suppressesEditUpdates]
  -[PUPhotoEditToolController handlesVideoPlaying]
  -[PUPhotoEditToolController handlesMediaViewInsets]
  -[PUPhotoEditToolController supportsPreviewingOriginal]
  -[PUPhotoEditToolController canBecomeActiveTool]
  -[PUPhotoEditToolController willResignActiveTool]
  -[PUPhotoEditToolController prepareForSave:]
  -[PUPhotoEditToolController leavingEditWithCancel]
  -[PUPhotoEditToolController didResignActiveTool]
  -[PUPhotoEditToolController leadingToolbarViews]
  -[PUPhotoEditToolController trailingToolbarViews]
  -[PUPhotoEditToolController mediaViewWillBeginZooming:]
  -[PUPhotoEditToolController mediaView:didZoom:]
  -[PUPhotoEditToolController mediaViewDidEndZooming:]
  -[PUPhotoEditToolController mediaViewDidScroll:]
  -[PUPhotoEditToolController contentRectInCoordinateSpace:]
  -[PUPhotoEditToolController viewControllerSpec:didChange:]
  -[PUPhotoEditToolController setPhotoEditSpec:]
  -[PUPhotoEditToolController toolbarIconAccessibilityLabel]
  -[PUPhotoEditToolController reactivate]
  -[PUPhotoEditToolController accessibilityHUDItemForButton:]
  -[PUPhotoEditToolController wantsScrubberKeyControl]
  -[PUPhotoEditToolController increaseScrubberValue:]
  -[PUPhotoEditToolController decreaseScrubberValue:]
  -[PUPhotoEditToolController _layoutToolGradient]
  -[PUPhotoEditToolController setOriginalStillImageTime:]
  -[PUPhotoEditToolController updateForIncomingAnimation]
  -[PUPhotoEditToolController updateToolbarButtonsAnimated:]
  -[PUPhotoEditToolController photoEditLivePhotoModelUpdated]
  -[PUPhotoEditToolController scrubberOrientation]
  -[PUPhotoEditToolController reloadToolbarButtons:]
  -[PUPhotoEditToolController _updateTraitCollectionAndLayoutReferenceSize]
  -[PUPhotoEditToolController _updateTraitCollectionAndLayoutReferenceSize:]
  -[PUPhotoEditToolController toolGradientDistance]
  -[PUPhotoEditToolController setSlowMotionTimeMapper:]
  -[PUPhotoEditToolController _newTimeMapper]
  -[PUPhotoEditToolController preferredPreviewBackgroundColor]
  -[PUPhotoEditToolController uneditedCompositionController]
  -[PUPhotoEditToolController editActionActivities]
  -[PUPhotoEditToolController canShowCommonTools]
  -[PUPhotoEditToolController setPerformingLiveInteraction:]
  -[PUPhotoEditToolController setPreferredAlternateToolbarButton:]
  -[PUPhotoEditToolController setAggregateSession:]
  -[PUPhotoEditToolController selectedToolbarIcon]
  -[PUPhotoEditToolController isPerformingLiveInteraction]
  -[PUPhotoEditToolController preferredAlternateToolbarButton]
  -[PUPhotoEditToolController leftToolbarView]
  -[PUPhotoEditToolController mutableEditActionActivites]
  -[PUPhotoEditToolController setMutableEditActionActivites:]
  -[PUPhotoEditToolController slowMotionTimeMapper]
  -[PUPhotoEditToolController ppt_didBecomeActiveToolBlock]
  -[PUPhotoEditToolController setPpt_didBecomeActiveToolBlock:]


PUPhotoEditToolControllerSpec : PUViewControllerSpec <PUPhotoEditLayoutDynamicAdaptable>
 @property  double standardBottomBarHeight
 @property  double standardSideBarWidth
 @property  BOOL isiPadLayout
 @property  long long layoutOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoEditToolControllerSpec toolPickerSelectionColor]

  // instance methods
  -[PUPhotoEditToolControllerSpec layoutOrientation]
  -[PUPhotoEditToolControllerSpec setLayoutOrientation:]
  -[PUPhotoEditToolControllerSpec standardBottomBarHeight]
  -[PUPhotoEditToolControllerSpec setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditToolControllerSpec standardSideBarWidth]
  -[PUPhotoEditToolControllerSpec isiPadLayout]


PUPhotoEditToolbar : UIView <PUPhotoEditLayoutStaticAdaptable>
 @property  UIView *mainToolbarContainer
 @property  BOOL useLargeShortSideHeight
 @property  BOOL useTabBarHeight
 @property  {UIEdgeInsets=dddd} contentPadding
 @property  NSArray *toolButtons
 @property  long long buttonSpacing
 @property  UIButton *mainActionButton
 @property  UIButton *secondaryActionButton
 @property  UIView *stretchableView
 @property  long long backgroundStyle
 @property  long long layoutDirection
 @property  double longSideMargin
 @property  double shortSideSize
 @property  <PUPhotoEditToolbarDelegate> *delegate
 @property  PUPhotoEditViewControllerSpec *photoEditSpec
 @property  long long layoutOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoEditToolbar setBackgroundStyle:animated:]
  -[PUPhotoEditToolbar layoutDirection]
  -[PUPhotoEditToolbar setLayoutDirection:]
  -[PUPhotoEditToolbar contentPadding]
  -[PUPhotoEditToolbar setBackgroundStyle:]
  -[PUPhotoEditToolbar willMoveToWindow:]
  -[PUPhotoEditToolbar updateConstraints]
  -[PUPhotoEditToolbar backgroundStyle]
  -[PUPhotoEditToolbar layoutOrientation]
  -[PUPhotoEditToolbar .cxx_destruct]
  -[PUPhotoEditToolbar setDelegate:]
  -[PUPhotoEditToolbar setContentPadding:]
  -[PUPhotoEditToolbar sizeThatFits:]
  -[PUPhotoEditToolbar photoEditSpec]
  -[PUPhotoEditToolbar initWithFrame:]
  -[PUPhotoEditToolbar _updateBackgroundAnimated:]
  -[PUPhotoEditToolbar delegate]
  -[PUPhotoEditToolbar setBounds:]
  -[PUPhotoEditToolbar intrinsicContentSize]
  -[PUPhotoEditToolbar toolButtons]
  -[PUPhotoEditToolbar setPhotoEditSpec:]
  -[PUPhotoEditToolbar accessibilityLongPressChanged:]
  -[PUPhotoEditToolbar shortSideSize]
  -[PUPhotoEditToolbar _setToolButtons:buttonSpacing:mainActionButton:secondaryActionButton:stretchableView:]
  -[PUPhotoEditToolbar mainToolbarContainer]
  -[PUPhotoEditToolbar useTabBarHeight]
  -[PUPhotoEditToolbar tabBarHeight]
  -[PUPhotoEditToolbar useLargeShortSideHeight]
  -[PUPhotoEditToolbar _invalidateAllConstraints]
  -[PUPhotoEditToolbar _addLeadingConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditToolbar _addTrailingConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditToolbar _addCenterConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditToolbar buttonSpacing]
  -[PUPhotoEditToolbar setupWithLayoutOrientation:]
  -[PUPhotoEditToolbar setToolButtons:mainActionButton:secondaryActionButton:stretchableView:]
  -[PUPhotoEditToolbar setToolButtons:buttonSpacing:mainActionButton:secondaryActionButton:]
  -[PUPhotoEditToolbar setLongSideMargin:]
  -[PUPhotoEditToolbar setUseLargeShortSideHeight:]
  -[PUPhotoEditToolbar setUseTabBarHeight:]
  -[PUPhotoEditToolbar mainActionButton]
  -[PUPhotoEditToolbar secondaryActionButton]
  -[PUPhotoEditToolbar stretchableView]
  -[PUPhotoEditToolbar longSideMargin]
  -[PUPhotoEditToolbar setMainToolbarContainer:]


PUPhotoEditButtonCenteredToolbar : PUPhotoEditToolbar
 @property  double interItemSpacing

  // instance methods
  -[PUPhotoEditButtonCenteredToolbar .cxx_destruct]
  -[PUPhotoEditButtonCenteredToolbar interItemSpacing]
  -[PUPhotoEditButtonCenteredToolbar _invalidateAllConstraints]
  -[PUPhotoEditButtonCenteredToolbar _addLeadingConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditButtonCenteredToolbar _addTrailingConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditButtonCenteredToolbar _addCenterConstraintsWithMetrics:verticalLayout:]
  -[PUPhotoEditButtonCenteredToolbar setCenterView:leadingViews:trailingViews:]


PUPhotoEditImageValues : NSObject
 @property  NSDictionary *smartToneStatistics
 @property  NSDictionary *primarySmartToneStatistics
 @property  NSDictionary *overcaptureSmartToneStatistics
 @property  NSDictionary *smartColorStatistics
 @property  double smartToneAutoSuggestion
 @property  double smartColorAutoSuggestion
 @property  NSDictionary *autoCropValues
 @property  NSDictionary *autoPerspectiveValues
 @property  NSDictionary *portraitValues
 @property  NSDictionary *apertureValues
 @property  BOOL complete

  // instance methods
  -[PUPhotoEditImageValues .cxx_destruct]
  -[PUPhotoEditImageValues setComplete:]
  -[PUPhotoEditImageValues smartToneStatistics]
  -[PUPhotoEditImageValues smartColorStatistics]
  -[PUPhotoEditImageValues isComplete]
  -[PUPhotoEditImageValues setSmartToneStatistics:]
  -[PUPhotoEditImageValues primarySmartToneStatistics]
  -[PUPhotoEditImageValues setPrimarySmartToneStatistics:]
  -[PUPhotoEditImageValues overcaptureSmartToneStatistics]
  -[PUPhotoEditImageValues setOvercaptureSmartToneStatistics:]
  -[PUPhotoEditImageValues setSmartColorStatistics:]
  -[PUPhotoEditImageValues smartToneAutoSuggestion]
  -[PUPhotoEditImageValues setSmartToneAutoSuggestion:]
  -[PUPhotoEditImageValues smartColorAutoSuggestion]
  -[PUPhotoEditImageValues setSmartColorAutoSuggestion:]
  -[PUPhotoEditImageValues autoCropValues]
  -[PUPhotoEditImageValues setAutoCropValues:]
  -[PUPhotoEditImageValues autoPerspectiveValues]
  -[PUPhotoEditImageValues setAutoPerspectiveValues:]
  -[PUPhotoEditImageValues portraitValues]
  -[PUPhotoEditImageValues setPortraitValues:]
  -[PUPhotoEditImageValues apertureValues]
  -[PUPhotoEditImageValues setApertureValues:]


PUPhotoEditValuesCalculator : PXObservable
 @property  PLEditSource *editSource
 @property  PLEditSource *overcaptureEditSource
 @property  PICompositionController *compositionController
 @property  BOOL hasImageValues
 @property  {?=qiIq} videoFrameTime

  // class methods
  +[PUPhotoEditValuesCalculator shouldRunGeometricAutoCalculatorForSource:]

  // instance methods
  -[PUPhotoEditValuesCalculator mutableChangeObject]
  -[PUPhotoEditValuesCalculator overcaptureEditSource]
  -[PUPhotoEditValuesCalculator setOvercaptureEditSource:]
  -[PUPhotoEditValuesCalculator .cxx_destruct]
  -[PUPhotoEditValuesCalculator init]
  -[PUPhotoEditValuesCalculator updateAdjustmentSmartToneStatistics:withAccuracy:]
  -[PUPhotoEditValuesCalculator compositionController]
  -[PUPhotoEditValuesCalculator invalidate]
  -[PUPhotoEditValuesCalculator editSource]
  -[PUPhotoEditValuesCalculator setCompositionController:]
  -[PUPhotoEditValuesCalculator smartColorStatisticsWithAccuracy:]
  -[PUPhotoEditValuesCalculator computeAutoEnhanceWithCompletionHandler:]
  -[PUPhotoEditValuesCalculator autoCropValuesWithAccuracy:]
  -[PUPhotoEditValuesCalculator autoPerspectiveValuesWithAccuracy:]
  -[PUPhotoEditValuesCalculator precomputeGeometricValues]
  -[PUPhotoEditValuesCalculator hasImageValues]
  -[PUPhotoEditValuesCalculator portraitValuesWithAccuracy:]
  -[PUPhotoEditValuesCalculator apertureValuesWithAccuracy:]
  -[PUPhotoEditValuesCalculator setVideoFrameTime:]
  -[PUPhotoEditValuesCalculator precomputeImageValues]
  -[PUPhotoEditValuesCalculator smartToneAutoSuggestion]
  -[PUPhotoEditValuesCalculator smartColorAutoSuggestion]
  -[PUPhotoEditValuesCalculator _imageCurrentValuesCacheIsValid]
  -[PUPhotoEditValuesCalculator _ensureCurrentImageValuesAreComputed]
  -[PUPhotoEditValuesCalculator _ensureInitialImageValuesAreComputed]
  -[PUPhotoEditValuesCalculator primarySmartToneStatisticsWithAccuracy:]
  -[PUPhotoEditValuesCalculator overcaptureSmartToneStatisticsWithAccuracy:]
  -[PUPhotoEditValuesCalculator _geometricCurrentValuesCacheIsValid]
  -[PUPhotoEditValuesCalculator _ensureCurrentGeometricValuesAreComputed]
  -[PUPhotoEditValuesCalculator _ensureInitialGeometricValuesAreComputed]
  -[PUPhotoEditValuesCalculator precomputeImageValuesWithOptionalCompletion:]
  -[PUPhotoEditValuesCalculator currentEditSource]
  -[PUPhotoEditValuesCalculator videoFrameTime]
  -[PUPhotoEditValuesCalculator setEditSource:]
  -[PUPhotoEditValuesCalculator smartToneStatisticsWithAccuracy:]
  -[PUPhotoEditValuesCalculator precomputeImageValuesWithCompletion:]


_PPTState : NSObject
 @property  BOOL hasRendered
 @property  NSMutableArray *renderStatistics

  // instance methods
  -[_PPTState .cxx_destruct]
  -[_PPTState init]
  -[_PPTState hasRendered]
  -[_PPTState enterDispatchGroup]
  -[_PPTState leaveDispatchGroup]
  -[_PPTState groupNotifyOnQueue:withBlock:]
  -[_PPTState setHasRendered:]
  -[_PPTState renderStatistics]
  -[_PPTState setRenderStatistics:]


PUPhotoEditViewController : PUEditViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, UIPencilInteractionDelegate, PUPhotoEditToolControllerDelegate, PUVideoEditPluginSessionDataSource, PUImageEditPluginSessionDataSource, PUEditPluginSessionDelegate, PXPhotoLibraryUIChangeObserver, PUOneUpAssetTransitionViewController, PXForcedDismissableViewController, PUPhotoEditIrisModelChangeObserver, PHLivePhotoViewDelegate, PUPhotoEditResourceLoaderDelegate, PUViewControllerSpecChangeObserver, NUMediaViewDelegatePrivate, PUPhotoEditToolbarDelegate, PXChangeObserver, PICompositionControllerDelegate, PXTrimToolPlayerWrapperNUMediaViewPlayerItemSource, PUPhotoEditLayoutSource>
 @property  PXImageLayerModulator *imageLayerModulator
 @property  PXLivePhotoViewModulator *livePhotoViewModulator
 @property  PXImageLayerModulator *placeholderImageLayerModulator
 @property  {?=qiIq} _initialSeekTime
 @property  long long layoutOrientation
 @property  PUPhotoEditValuesCalculator *_valuesCalculator
 @property  PLPhotoEditRenderer *_mainRenderer
 @property  PURedeyeToolController *_redEyeController
 @property  PUPhotoEditAggregateSession *_aggregateSession
 @property  PUPhotoEditResourceLoader *_resourceLoader
 @property  long long _workImageVersion
 @property  PICompositionController *_compositionController
 @property  NUComposition *_uneditedComposition
 @property  NUComposition *_originalComposition
 @property  PUPhotoEditIrisModel *_photoEditIrisModel
 @property  BOOL isVideoOn
 @property  BOOL isLoopingVideo
 @property  PLEditSource *_editSource
 @property  PLEditSource *overCaptureEditSource
 @property  NSURL *overCaptureEditSourceURL
 @property  long long editSourceSelection
 @property  long long overcaptureType
 @property  NSString *_editSourceUTI
 @property  PHContentEditingInput *_editSourceContentEditingInput
 @property  BOOL _hasLoadedRaw
 @property  PLEditSource *_originalImageEditSource
 @property  unsigned long originalReframeVariation
 @property  PLEditSource *originalOvercaptureEditSource
 @property  long long _originalImageExifOrientation
 @property  BOOL _penultimateAvailable
 @property  {?=qiIq} _originalStillImageTime
 @property  BOOL _isCachingVideo
 @property  BOOL runningAutoCalculators
 @property  BOOL isTransitioningFromDownloadingToRunningAutoCalculators
 @property  BOOL _revertingToOriginal
 @property  long long _assetChangeDismissalState
 @property  long long _saveCompetionDismissalState
 @property  NSTimer *assetChangeTimeoutTimer
 @property  long long _previewRenderType
 @property  {CGSize=dd} _layoutReferenceSize
 @property  BOOL _shouldBePreviewingOriginal
 @property  PLPhotoEditRenderer *_previewingOriginalRenderer
 @property  UIAlertController *_cancelConfirmationAlert
 @property  UIAlertController *_revertConfirmationAlert
 @property  UIAlertController *_jpegPreviewForRawConfirmationAlert
 @property  UIAlertController *_irisRevertConfirmationAlert
 @property  UIAlertController *_saveTrimOptionsAlert
 @property  {CGSize=dd} _lastKnownPreviewImageSize
 @property  BOOL burningInTrim
 @property  UIMenu *askToSaveAsNewClipMenu
 @property  long long mediaViewEdgeInsetsUpdateDisableCount
 @property  UIPencilInteraction *pencilInteraction
 @property  PUPhotoEditPerfHUD *perfHUD
 @property  PUPhotoEditReframeHUD *reframeHUD
 @property  ^{CGImage=} gainMapImage
 @property  float gainMapValue
 @property  PUPhotoSceneHUD *sceneHUD
 @property  BOOL firstSinceBoot
 @property  BOOL firstSinceLaunch
 @property  PXTimeInterval *enterEditTimeInterval
 @property  PXTimeInterval *resourceCheckingInterval
 @property  PXTimeInterval *resourceDownloadInterval
 @property  PXTimeInterval *resourceLoadingInterval
 @property  PXTimeInterval *autoCalcInterval
 @property  PXTimeInterval *filterInterval
 @property  PXTimeInterval *exitEditTimeInterval
 @property  PUEnterEditPerformanceEventBuilder *enterEditEventBuilder
 @property  PUExitEditPerformanceEventBuilder *exitEditEventBuilder
 @property  @? ppt_afterRenderBlock
 @property  @? ppt_afterAutoenhanceBlock
 @property  @? ppt_willBeginPlaybackBlock
 @property  @? ppt_didEndPlaybackBlock
 @property  @? ppt_editIsReadyNotificationBlock
 @property  @? ppt_exitActionCompleteNotificationBlock
 @property  PUPhotoEditViewControllerSpec *photoEditSpec
 @property  NSObject<PUEditableAsset> *photo
 @property  PUEditableMediaProvider *mediaProvider
 @property  PUMediaDestination *mediaDestination
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} previewViewFrame
 @property  long long initialToolType
 @property  <PUPhotoEditViewControllerPresentationDelegate> *presentationDelegate
 @property  <PUPhotoEditViewControllerSessionDelegate> *sessionDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoEditViewController _shouldForwardViewWillTransitionToSize]
  +[PUPhotoEditViewController preheatEditDependenciesIfNeeded]
  +[PUPhotoEditViewController _defaultMediaViewRenderPipelineFilters]
  +[PUPhotoEditViewController _defaultLivePhotoRenderPipelineFilters]

  // instance methods
  -[PUPhotoEditViewController updateViewConstraints]
  -[PUPhotoEditViewController validateCommand:]
  -[PUPhotoEditViewController setGainMapImage:]
  -[PUPhotoEditViewController prepareForPhotoLibraryChange:]
  -[PUPhotoEditViewController gainMapImage]
  -[PUPhotoEditViewController prefersHomeIndicatorAutoHidden]
  -[PUPhotoEditViewController setGainMapValue:]
  -[PUPhotoEditViewController _updateBackgroundColor]
  -[PUPhotoEditViewController prefersStatusBarHidden]
  -[PUPhotoEditViewController gainMapValue]
  -[PUPhotoEditViewController setPlaceholderImage:]
  -[PUPhotoEditViewController setImageLayerModulator:]
  -[PUPhotoEditViewController imageLayerModulator]
  -[PUPhotoEditViewController livePhotoViewModulator]
  -[PUPhotoEditViewController viewWillLayoutSubviews]
  -[PUPhotoEditViewController viewForZoomingInScrollView:]
  -[PUPhotoEditViewController photoLibraryDidChangeOnMainQueue:]
  -[PUPhotoEditViewController traitCollectionDidChange:]
  -[PUPhotoEditViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUPhotoEditViewController prepareForPopoverPresentation:]
  -[PUPhotoEditViewController layoutOrientation]
  -[PUPhotoEditViewController .cxx_destruct]
  -[PUPhotoEditViewController mediaProvider]
  -[PUPhotoEditViewController viewDidLoad]
  -[PUPhotoEditViewController preferredUserInterfaceStyle]
  -[PUPhotoEditViewController _resourceLoader]
  -[PUPhotoEditViewController popoverPresentationControllerDidDismissPopover:]
  -[PUPhotoEditViewController pencilInteractionDidTap:]
  -[PUPhotoEditViewController photo]
  -[PUPhotoEditViewController viewDidAppear:]
  -[PUPhotoEditViewController _setLayoutOrientation:]
  -[PUPhotoEditViewController mediaView]
  -[PUPhotoEditViewController mediaDestination]
  -[PUPhotoEditViewController viewModel:didChange:]
  -[PUPhotoEditViewController _handleDoneButton:]
  -[PUPhotoEditViewController _compositionController]
  -[PUPhotoEditViewController _editSource]
  -[PUPhotoEditViewController imageProperties]
  -[PUPhotoEditViewController perfHUD]
  -[PUPhotoEditViewController isLoopingVideo]
  -[PUPhotoEditViewController setSessionDelegate:]
  -[PUPhotoEditViewController gestureRecognizerShouldBegin:]
  -[PUPhotoEditViewController _originalComposition]
  -[PUPhotoEditViewController _preferredStatusBarHideAnimationParameters]
  -[PUPhotoEditViewController adjustmentConstants]
  -[PUPhotoEditViewController viewWillDisappear:]
  -[PUPhotoEditViewController photoEditSpec]
  -[PUPhotoEditViewController toolControllerMainContainerView:]
  -[PUPhotoEditViewController toolControllerSourceAssetType:]
  -[PUPhotoEditViewController viewDidLayoutSubviews]
  -[PUPhotoEditViewController canPerformAction:withSender:]
  -[PUPhotoEditViewController sceneHUD]
  -[PUPhotoEditViewController ppt_save]
  -[PUPhotoEditViewController viewWillAppear:]
  -[PUPhotoEditViewController presentationDelegate]
  -[PUPhotoEditViewController setLivePhotoViewModulator:]
  -[PUPhotoEditViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[PUPhotoEditViewController _valuesCalculator]
  -[PUPhotoEditViewController pressesCancelled:withEvent:]
  -[PUPhotoEditViewController toolControllerUneditedCompositionController:]
  -[PUPhotoEditViewController compositionControllerDidChangeForAdjustments:]
  -[PUPhotoEditViewController toolControllerMainRenderer:]
  -[PUPhotoEditViewController updateProgressIndicatorAnimated:]
  -[PUPhotoEditViewController autoEnhanceAssets:]
  -[PUPhotoEditViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUPhotoEditViewController sessionDelegate]
  -[PUPhotoEditViewController sourceSelection]
  -[PUPhotoEditViewController dealloc]
  -[PUPhotoEditViewController pressesEnded:withEvent:]
  -[PUPhotoEditViewController _composition]
  -[PUPhotoEditViewController _hasUnsavedChanges]
  -[PUPhotoEditViewController childViewControllerForScreenEdgesDeferringSystemGestures]
  -[PUPhotoEditViewController isVideoOn]
  -[PUPhotoEditViewController _allTools]
  -[PUPhotoEditViewController _updateSubviewsOrdering]
  -[PUPhotoEditViewController pressesBegan:withEvent:]
  -[PUPhotoEditViewController observable:didChange:context:]
  -[PUPhotoEditViewController ppt_scrollSelectedSliderByDelta]
  -[PUPhotoEditViewController setPresentationDelegate:]
  -[PUPhotoEditViewController viewDidDisappear:]
  -[PUPhotoEditViewController prepareForDismissingForced:]
  -[PUPhotoEditViewController _layoutReferenceSize]
  -[PUPhotoEditViewController _handleCancelButton:]
  -[PUPhotoEditViewController _setLayoutReferenceSize:]
  -[PUPhotoEditViewController photoLibraryChangesPausedDidChange]
  -[PUPhotoEditViewController pu_wantsToolbarVisible]
  -[PUPhotoEditViewController ppt_setEditIsReadyNotificationBlock:]
  -[PUPhotoEditViewController ppt_applyAutoenhance:]
  -[PUPhotoEditViewController ppt_cancelEditsWithCompletion:]
  -[PUPhotoEditViewController ppt_saveWithCompletion:]
  -[PUPhotoEditViewController ppt_revertWithCompletion:]
  -[PUPhotoEditViewController initWithPhoto:mediaProvider:mediaDestination:]
  -[PUPhotoEditViewController oneUpAssetTransition:requestTransitionContextWithCompletion:]
  -[PUPhotoEditViewController oneUpAssetTransition:animateTransitionWithContext:duration:completion:]
  -[PUPhotoEditViewController oneUpAssetTransitionWillBegin:]
  -[PUPhotoEditViewController oneUpAssetTransitionDidEnd:]
  -[PUPhotoEditViewController pu_wantsTabBarVisible]
  -[PUPhotoEditViewController pu_wantsNavigationBarVisible]
  -[PUPhotoEditViewController isStandardVideo]
  -[PUPhotoEditViewController toolControllerOriginalCompositionController:]
  -[PUPhotoEditViewController toolControllerImageModulationOptions:]
  -[PUPhotoEditViewController overcaptureType]
  -[PUPhotoEditViewController toolControllerRequestLivePhoto:filters:completion:]
  -[PUPhotoEditViewController toolController:didChangePreferredPreviewViewInsetsAnimated:]
  -[PUPhotoEditViewController hasLoopingVideoAdjustment]
  -[PUPhotoEditViewController rotateAssetsCounterclockwise:]
  -[PUPhotoEditViewController rotateAssetsClockwise:]
  -[PUPhotoEditViewController toolControllerDidChangeWantsDefaultPreviewView:]
  -[PUPhotoEditViewController toolController:switchEditSource:]
  -[PUPhotoEditViewController toolControllerOriginalOrientedImageSize:]
  -[PUPhotoEditViewController pluginActivitiesForEditPluginSession:]
  -[PUPhotoEditViewController editPluginSessionAvailabilityDidChange:]
  -[PUPhotoEditViewController editPluginSession:loadThumbnailImageWithSize:loadHandler:]
  -[PUPhotoEditViewController editPluginSessionWillBegin:]
  -[PUPhotoEditViewController editPluginSession:loadAdjustmentDataWithHandler:]
  -[PUPhotoEditViewController editPluginSession:commitContentEditingOutput:withCompletionHandler:]
  -[PUPhotoEditViewController editPluginSession:didEndWithCompletionType:forPluginIdentifier:]
  -[PUPhotoEditViewController mediaViewDidUpdateLivePhoto:]
  -[PUPhotoEditViewController mediaViewWillBeginZooming:]
  -[PUPhotoEditViewController mediaView:didZoom:]
  -[PUPhotoEditViewController mediaViewDidEndZooming:]
  -[PUPhotoEditViewController mediaViewDidScroll:]
  -[PUPhotoEditViewController mediaViewIsReadyForVideoPlayback:]
  -[PUPhotoEditViewController mediaViewDidStartPreparingVideo:]
  -[PUPhotoEditViewController mediaViewDidFinishPreparingVideo:]
  -[PUPhotoEditViewController mediaViewWillBeginLivePhotoPlayback:]
  -[PUPhotoEditViewController mediaViewDidEndLivePhotoPlayback:]
  -[PUPhotoEditViewController _showProgressIndicator]
  -[PUPhotoEditViewController editPluginSession:loadPlaceholderImageWithHandler:]
  -[PUPhotoEditViewController editPluginSession:loadDisplaySizeImageWithHandler:]
  -[PUPhotoEditViewController editPluginSession:loadFullSizeImageWithHandler:]
  -[PUPhotoEditViewController editPluginSession:loadVideoComplementURLWithHandler:]
  -[PUPhotoEditViewController isFirstSinceBoot]
  -[PUPhotoEditViewController isFirstSinceLaunch]
  -[PUPhotoEditViewController setFirstSinceBoot:]
  -[PUPhotoEditViewController setFirstSinceLaunch:]
  -[PUPhotoEditViewController toolControllerPlaceholderImage:]
  -[PUPhotoEditViewController toggleEditor:]
  -[PUPhotoEditViewController viewControllerSpec:didChange:]
  -[PUPhotoEditViewController px_HDRFocus]
  -[PUPhotoEditViewController px_imageModulationIntensity]
  -[PUPhotoEditViewController photoEditResourceLoadRequest:didCompleteWithResult:]
  -[PUPhotoEditViewController photoEditResourceLoadRequestWillBeginDownload:]
  -[PUPhotoEditViewController photoEditResourceLoadRequestDidCompleteDownload:]
  -[PUPhotoEditViewController photoEditResourceLoadRequest:downloadProgress:]
  -[PUPhotoEditViewController photoEditResourceLoadRequest:mediaLoadDidFailWithError:]
  -[PUPhotoEditViewController photoEditResourceLoadRequestResourcesAvailabilityChanged:previousAvailability:currentAvailability:]
  -[PUPhotoEditViewController toolControllerDidUpdateToolbar:]
  -[PUPhotoEditViewController navigateToSegment:]
  -[PUPhotoEditViewController setEnterEditTimeInterval:]
  -[PUPhotoEditViewController setResourceCheckingInterval:]
  -[PUPhotoEditViewController setResourceDownloadInterval:]
  -[PUPhotoEditViewController setResourceLoadingInterval:]
  -[PUPhotoEditViewController setAutoCalcInterval:]
  -[PUPhotoEditViewController setFilterInterval:]
  -[PUPhotoEditViewController setExitEditTimeInterval:]
  -[PUPhotoEditViewController enterEditTimeInterval]
  -[PUPhotoEditViewController resourceCheckingInterval]
  -[PUPhotoEditViewController resourceDownloadInterval]
  -[PUPhotoEditViewController resourceLoadingInterval]
  -[PUPhotoEditViewController autoCalcInterval]
  -[PUPhotoEditViewController filterInterval]
  -[PUPhotoEditViewController exitEditTimeInterval]
  -[PUPhotoEditViewController _setCompositionController:]
  -[PUPhotoEditViewController isPortraitVideo]
  -[PUPhotoEditViewController fontForButtons]
  -[PUPhotoEditViewController dismissLivePhotoRevertConfirmationAlert]
  -[PUPhotoEditViewController mainLivePhotoView]
  -[PUPhotoEditViewController isHighframeRateVideo]
  -[PUPhotoEditViewController configureEnablenessOfControlButton:animated:canVisuallyDisable:]
  -[PUPhotoEditViewController toggleLivePhotoActive]
  -[PUPhotoEditViewController updateMutedState]
  -[PUPhotoEditViewController initialCinematographyLoadComplete]
  -[PUPhotoEditViewController _originalStillImageTime]
  -[PUPhotoEditViewController _setOriginalComposition:]
  -[PUPhotoEditViewController _workImageVersion]
  -[PUPhotoEditViewController _setWorkImageVersion:]
  -[PUPhotoEditViewController toolControllerHitEventForwardView:]
  -[PUPhotoEditViewController _updateTraitCollectionAndLayoutReferenceSize]
  -[PUPhotoEditViewController _updateTraitCollectionAndLayoutReferenceSize:]
  -[PUPhotoEditViewController toolControllerDidChangeIsPerformingLiveInteraction:]
  -[PUPhotoEditViewController toolControllerDidChangePreferredAlternateToolbarButton:]
  -[PUPhotoEditViewController _aggregateSession]
  -[PUPhotoEditViewController photoEditToolbar:accessibilityHUDItemForButton:]
  -[PUPhotoEditViewController photoEditToolbar:showAccessibilityHUDForItem:]
  -[PUPhotoEditViewController dismissAccessibilityHUDForPhotoEditToolbar:]
  -[PUPhotoEditViewController enterEditEventBuilder]
  -[PUPhotoEditViewController _didStartEnterEdit]
  -[PUPhotoEditViewController assetChangeTimeoutTimer]
  -[PUPhotoEditViewController setAssetChangeTimeoutTimer:]
  -[PUPhotoEditViewController _photoEditIrisModel]
  -[PUPhotoEditViewController _handleScrubberValueDecrease:]
  -[PUPhotoEditViewController _handleCoarseScrubberValueDecrease:]
  -[PUPhotoEditViewController _handleScrubberValueIncrease:]
  -[PUPhotoEditViewController _handleCoarseScrubberValueIncrease:]
  -[PUPhotoEditViewController _handleSliderValueDecrease:]
  -[PUPhotoEditViewController _handleCoarseSliderValueDecrease:]
  -[PUPhotoEditViewController _handleSliderValueIncrease:]
  -[PUPhotoEditViewController _handleCoarseSliderValueIncrease:]
  -[PUPhotoEditViewController _setShouldBePreviewingOriginal:]
  -[PUPhotoEditViewController _updatePreviewOriginal:withPresses:]
  -[PUPhotoEditViewController _updateLayoutOrientationWithViewSize:transitionCoordinator:]
  -[PUPhotoEditViewController _originalImageEditSource]
  -[PUPhotoEditViewController _createMediaView]
  -[PUPhotoEditViewController _setupImagePluginSession]
  -[PUPhotoEditViewController _updateLayerModulation]
  -[PUPhotoEditViewController setPerfHUD:]
  -[PUPhotoEditViewController setReframeHUD:]
  -[PUPhotoEditViewController reframeHUD]
  -[PUPhotoEditViewController setSceneHUD:]
  -[PUPhotoEditViewController _loadPhotoEditResourcesIfNeeded]
  -[PUPhotoEditViewController _updateToolbarsAnimated:]
  -[PUPhotoEditViewController _updateTogglePreviewGestureRecognizer]
  -[PUPhotoEditViewController _updateLivePhotoPlaybackGestureRecognizer]
  -[PUPhotoEditViewController _updatePreviewingOriginal]
  -[PUPhotoEditViewController _updateToolbarBackgroundAnimated:]
  -[PUPhotoEditViewController _createPencilInteractionIfNeeded]
  -[PUPhotoEditViewController switchToEditingTool:animated:]
  -[PUPhotoEditViewController _lastKnownPreviewImageSize]
  -[PUPhotoEditViewController _placeholderViewFrameForImageSize:]
  -[PUPhotoEditViewController previewViewFrame]
  -[PUPhotoEditViewController _updateProgressEventBlockingViewConstraints]
  -[PUPhotoEditViewController _updateToolbarsContentPadding]
  -[PUPhotoEditViewController _updateMediaViewEdgeInsets]
  -[PUPhotoEditViewController _irisRevertConfirmationAlert]
  -[PUPhotoEditViewController _mediaViewEdgeInsets]
  -[PUPhotoEditViewController _isReadyToRender]
  -[PUPhotoEditViewController _clearBadgeConstraints]
  -[PUPhotoEditViewController _mainRenderer]
  -[PUPhotoEditViewController _setLastKnownPreviewImageSize:]
  -[PUPhotoEditViewController _updatePlaceholderImage]
  -[PUPhotoEditViewController _setLayoutOrientation:withTransitionCoordinator:]
  -[PUPhotoEditViewController _clearToolbars]
  -[PUPhotoEditViewController currentToolPickerLayoutDirection]
  -[PUPhotoEditViewController _loadToolsIfNeeded]
  -[PUPhotoEditViewController _updateAlternateToolbarAnimated:]
  -[PUPhotoEditViewController _editSourceContentEditingInput]
  -[PUPhotoEditViewController _reloadToolbarButtonsIfNeeded]
  -[PUPhotoEditViewController _updateToolbarButtonPositions]
  -[PUPhotoEditViewController isRunningAutoCalculators]
  -[PUPhotoEditViewController _updateCancelButtonAnimated:]
  -[PUPhotoEditViewController _updateMainActionButtonAnimated:]
  -[PUPhotoEditViewController _updatePluginButtonAnimated:]
  -[PUPhotoEditViewController _updateKeyCommands]
  -[PUPhotoEditViewController _setupToolsIfNeeded]
  -[PUPhotoEditViewController _shouldDisplayRedEyeTool]
  -[PUPhotoEditViewController _wantsTTRButton]
  -[PUPhotoEditViewController _newToolButtonForTool:]
  -[PUPhotoEditViewController _handleToolbarToolButton:]
  -[PUPhotoEditViewController _redEyeController]
  -[PUPhotoEditViewController _handlePluginButton:]
  -[PUPhotoEditViewController _handleMarkupButton:]
  -[PUPhotoEditViewController _handleZoomButton:]
  -[PUPhotoEditViewController _handleMainActionButton:]
  -[PUPhotoEditViewController updateMainButtonForSaveAsNewClipMenu]
  -[PUPhotoEditViewController _revertConfirmationAlert]
  -[PUPhotoEditViewController _handleRunFinalizerGesture:]
  -[PUPhotoEditViewController _cancelConfirmationAlert]
  -[PUPhotoEditViewController _handleTTRButton:]
  -[PUPhotoEditViewController _updateZoomButton]
  -[PUPhotoEditViewController _hasAdjustedSlowMotion]
  -[PUPhotoEditViewController _canCompositionControllerBeReverted:]
  -[PUPhotoEditViewController _shouldBePreviewingOriginal]
  -[PUPhotoEditViewController _isRevertingToOriginal]
  -[PUPhotoEditViewController mediaViewEdgeInsetsUpdateDisableCount]
  -[PUPhotoEditViewController _currentToolPreviewInsets]
  -[PUPhotoEditViewController _didEndEnterEdit]
  -[PUPhotoEditViewController _isWaitingForAssetChange]
  -[PUPhotoEditViewController _isWaitingForSaveCompletion]
  -[PUPhotoEditViewController _isCachingVideo]
  -[PUPhotoEditViewController burningInTrim]
  -[PUPhotoEditViewController _isSaveProgressAvailable]
  -[PUPhotoEditViewController _hideProgressIndicatorImmediately:]
  -[PUPhotoEditViewController _updateProgressIndicatorInteractionDisabledWithReason:showsIndicator:isSavingWithProgress:]
  -[PUPhotoEditViewController placeholderImageLayerModulator]
  -[PUPhotoEditViewController _updateSpecDependentUIPieces]
  -[PUPhotoEditViewController _loadOriginalImageIfNeeded]
  -[PUPhotoEditViewController _livePhotoGestureRecognizer]
  -[PUPhotoEditViewController _isPreviewingOriginal]
  -[PUPhotoEditViewController _originalImageExifOrientation]
  -[PUPhotoEditViewController _updatePreviewingOriginalBadge]
  -[PUPhotoEditViewController resourcesForRevertAllowingDownload:completionHandler:]
  -[PUPhotoEditViewController _defaultRenderPipelineFiltersForCurrentMode]
  -[PUPhotoEditViewController _previewRenderType]
  -[PUPhotoEditViewController _setPreviewRenderType:]
  -[PUPhotoEditViewController _setPreviewingOriginalBadgeVisible:]
  -[PUPhotoEditViewController _toolControllerForTag:]
  -[PUPhotoEditViewController _handleDoneAction:]
  -[PUPhotoEditViewController _runFinalizerWithDebugMessages:]
  -[PUPhotoEditViewController _setCancelConfirmationAlert:]
  -[PUPhotoEditViewController _showCancelAndRevertOptionsAllowResetTool:]
  -[PUPhotoEditViewController _didStartExitAction]
  -[PUPhotoEditViewController exitEditEventBuilder]
  -[PUPhotoEditViewController _resignCurrentTool]
  -[PUPhotoEditViewController didFinishWithChanges:]
  -[PUPhotoEditViewController _didEndExitActionWithSessionKeys:]
  -[PUPhotoEditViewController _performDiscardAction]
  -[PUPhotoEditViewController _performRevertAction]
  -[PUPhotoEditViewController _setJpegPreviewForRawConfirmationAlert:]
  -[PUPhotoEditViewController _handleRevertButton:]
  -[PUPhotoEditViewController _uneditedComposition]
  -[PUPhotoEditViewController _hasLoadedRaw]
  -[PUPhotoEditViewController setBurningInTrim:]
  -[PUPhotoEditViewController _startTimeoutTimerForAssetChange]
  -[PUPhotoEditViewController _stopWaitingForSaveRequestWithAsset:]
  -[PUPhotoEditViewController _stopWaitingForAssetChangeWithAsset:success:]
  -[PUPhotoEditViewController overCaptureEditSource]
  -[PUPhotoEditViewController invalidateTrashedStateForOvercaptureResources]
  -[PUPhotoEditViewController _startWaitingForSaveRequestID:]
  -[PUPhotoEditViewController _startWaitingForAssetChange:]
  -[PUPhotoEditViewController _shouldRequestAsyncAdjustmentForAsset:compositionController:]
  -[PUPhotoEditViewController didFinishWithAsset:savedChanges:]
  -[PUPhotoEditViewController _newOutputForContentEditingInput:compositionController:]
  -[PUPhotoEditViewController _handleSaveAction:]
  -[PUPhotoEditViewController _setRevertConfirmationAlert:]
  -[PUPhotoEditViewController _resetModelAndBaseImagesToWorkImageVersion:]
  -[PUPhotoEditViewController _setRevertingToOriginal:]
  -[PUPhotoEditViewController reinstateTrashedStateForOvercaptureResources]
  -[PUPhotoEditViewController _handleRevertResult:error:]
  -[PUPhotoEditViewController _saveRevertedComposition:withCompletionHandler:]
  -[PUPhotoEditViewController _revertToEmptyCompositionWithCompletionHandler:]
  -[PUPhotoEditViewController _restoreSnapshot:withCompletionHandler:]
  -[PUPhotoEditViewController _setAssetChangeDismissalState:]
  -[PUPhotoEditViewController _assetChangeDismissalState]
  -[PUPhotoEditViewController _timeoutWaitingForAssetChange]
  -[PUPhotoEditViewController _notifyDelegateSaveFinishedIfReadyWithAsset:]
  -[PUPhotoEditViewController _setSaveCompletionDismissalState:]
  -[PUPhotoEditViewController _startMonitoringSaveProgressIfNeeded]
  -[PUPhotoEditViewController _stopMonitoringSaveProgress]
  -[PUPhotoEditViewController _saveCompetionDismissalState]
  -[PUPhotoEditViewController _updateSaveProgress]
  -[PUPhotoEditViewController _isZoomedIn]
  -[PUPhotoEditViewController ppt_afterAutoenhanceBlock]
  -[PUPhotoEditViewController setPpt_afterAutoenhanceBlock:]
  -[PUPhotoEditViewController _presentWarningForIrisRemovesEditsWithCompletion:]
  -[PUPhotoEditViewController _setIrisRevertConfirmationAlert:]
  -[PUPhotoEditViewController _updatePluginSession]
  -[PUPhotoEditViewController _updateRenderedPreviewForceRender:]
  -[PUPhotoEditViewController _startMarkupSession]
  -[PUPhotoEditViewController _handleTogglePreviewTapGesture:]
  -[PUPhotoEditViewController _setResourceLoader:]
  -[PUPhotoEditViewController _didStartResourceLoading]
  -[PUPhotoEditViewController _handleDidLoadOriginalWithResult:]
  -[PUPhotoEditViewController _handleDidLoadAdjustmentsAndBaseImageWithResult:]
  -[PUPhotoEditViewController _didEndResourceLoading]
  -[PUPhotoEditViewController _handleResourceLoadChange]
  -[PUPhotoEditViewController _isPenultimateAvailable]
  -[PUPhotoEditViewController _setEditSource:]
  -[PUPhotoEditViewController _setOverCaptureEditSource:]
  -[PUPhotoEditViewController _setEditSourceUTI:]
  -[PUPhotoEditViewController _setEditSourceContentEditingInput:]
  -[PUPhotoEditViewController _setHasLoadedRaw:]
  -[PUPhotoEditViewController _setPenultimateAvailable:]
  -[PUPhotoEditViewController _setUneditedComposition:]
  -[PUPhotoEditViewController _updatePhotoEditIrisModel]
  -[PUPhotoEditViewController _loadToolsIfNeeded:]
  -[PUPhotoEditViewController _setOriginalStillImageTime:]
  -[PUPhotoEditViewController _setMainRenderer:]
  -[PUPhotoEditViewController _setOriginalURL:originalEditSource:originalOvercaptureSource:]
  -[PUPhotoEditViewController setRunningAutoCalculators:]
  -[PUPhotoEditViewController _updateValuesCalculator]
  -[PUPhotoEditViewController setOvercaptureType:]
  -[PUPhotoEditViewController _chooseInitialEditingTool]
  -[PUPhotoEditViewController _updateMediaViewPlaybackStyle]
  -[PUPhotoEditViewController _showJpegPreviewForRawRevertAlert]
  -[PUPhotoEditViewController currentAssetNeedsGainMap]
  -[PUPhotoEditViewController _isLoopingVideo:]
  -[PUPhotoEditViewController editSourceSelection]
  -[PUPhotoEditViewController _setValuesCalculator:]
  -[PUPhotoEditViewController _updateModelDependentControlsAnimated:]
  -[PUPhotoEditViewController _setOverCaptureEditSourceURL:]
  -[PUPhotoEditViewController _setPhotoEditIrisModel:]
  -[PUPhotoEditViewController _didStartAutoCalc]
  -[PUPhotoEditViewController _didEndAutoCalc]
  -[PUPhotoEditViewController _setRedEyeController:]
  -[PUPhotoEditViewController _transitionToEditingTool:animated:]
  -[PUPhotoEditViewController initialToolType]
  -[PUPhotoEditViewController _setInitialSeekTime:]
  -[PUPhotoEditViewController _transitionToNewToolViewController:oldToolViewController:animationBlock:completion:animated:]
  -[PUPhotoEditViewController setMediaViewEdgeInsetsUpdateDisableCount:]
  -[PUPhotoEditViewController switchEditSource:]
  -[PUPhotoEditViewController _requestLivePhotoAssetWithFilters:completion:]
  -[PUPhotoEditViewController toolControllerOriginalImageSize:]
  -[PUPhotoEditViewController _handleMediaViewReady:statistics:]
  -[PUPhotoEditViewController _initialSeekTime]
  -[PUPhotoEditViewController _setIsCachingVideo:]
  -[PUPhotoEditViewController _ppt_conditionallyExecuteAfterRender]
  -[PUPhotoEditViewController _removePlaceholderImageViewIfNeeded]
  -[PUPhotoEditViewController _setSaveTrimOptionsAlert:]
  -[PUPhotoEditViewController _updatePluginWorkImageVersion]
  -[PUPhotoEditViewController _editPluginSession:checkVideoEnabled:loadVideoComplementURLWithHandler:]
  -[PUPhotoEditViewController _updatePenultimateAvailableWithCompletionHandler:]
  -[PUPhotoEditViewController _captureSnapshotOfBasePhotoWithCompletionHandler:]
  -[PUPhotoEditViewController _setupVideoPluginSession]
  -[PUPhotoEditViewController _cancelInProgressSaveRequest]
  -[PUPhotoEditViewController _oneUpTransitionPlaceholderViewFrame]
  -[PUPhotoEditViewController _currentViewContentsForDismissTransition]
  -[PUPhotoEditViewController _hideEphemeralViews:]
  -[PUPhotoEditViewController ppt_exitActionCompleteNotificationBlock]
  -[PUPhotoEditViewController setPpt_exitActionCompleteNotificationBlock:]
  -[PUPhotoEditViewController ppt_editIsReadyNotificationBlock]
  -[PUPhotoEditViewController setPpt_editIsReadyNotificationBlock:]
  -[PUPhotoEditViewController setPpt_afterRenderBlock:]
  -[PUPhotoEditViewController _handleAutoEnhanceButton:]
  -[PUPhotoEditViewController setPpt_willBeginPlaybackBlock:]
  -[PUPhotoEditViewController setPpt_didEndPlaybackBlock:]
  -[PUPhotoEditViewController askToSaveAsNewClipMenu]
  -[PUPhotoEditViewController trimToolPlayerWrapper:requestPlayerItemWithFilters:completion:]
  -[PUPhotoEditViewController toolControllerDidFinishLoadingThumbnails:]
  -[PUPhotoEditViewController toolController:updateModelDependentControlsAnimated:]
  -[PUPhotoEditViewController toolControllerPreviewView:]
  -[PUPhotoEditViewController toolControllerLivePhoto:]
  -[PUPhotoEditViewController toolControllerDidFinish:]
  -[PUPhotoEditViewController toolController:originalPointFromViewPoint:view:]
  -[PUPhotoEditViewController toolController:viewPointFromOriginalPoint:view:]
  -[PUPhotoEditViewController isImageZooming]
  -[PUPhotoEditViewController isImageFrameReady]
  -[PUPhotoEditViewController editPluginSession:loadVideoURLWithHandler:]
  -[PUPhotoEditViewController mediaViewDidFinishRendering:withStatistics:]
  -[PUPhotoEditViewController compositionController:didAddAdjustment:]
  -[PUPhotoEditViewController compositionController:didRemoveAdjustment:]
  -[PUPhotoEditViewController compositionController:didUpdateAdjustment:]
  -[PUPhotoEditViewController compositionController:didUpdateAdjustments:]
  -[PUPhotoEditViewController _shouldDisplayDepthButtonInToolbar]
  -[PUPhotoEditViewController _shouldShowDepthControl]
  -[PUPhotoEditViewController _updateMediaViewLayoutWithCoordinator:layoutOrientation:]
  -[PUPhotoEditViewController _setPlaybackEnabled:]
  -[PUPhotoEditViewController _handleLivePhotoTouchRecognizer:]
  -[PUPhotoEditViewController _orientedCIImageFromUIImage:]
  -[PUPhotoEditViewController _defaultInitialEditingTool]
  -[PUPhotoEditViewController ppt_cancelEdits]
  -[PUPhotoEditViewController ppt_revert]
  -[PUPhotoEditViewController ppt_executeAfterRender:]
  -[PUPhotoEditViewController ppt_selectFiltersController:]
  -[PUPhotoEditViewController ppt_selectAdjustmentsController:]
  -[PUPhotoEditViewController ppt_selectCropController:]
  -[PUPhotoEditViewController ppt_selectPerspectiveController:]
  -[PUPhotoEditViewController ppt_scrollLightSlider:]
  -[PUPhotoEditViewController ppt_scrollColorSlider:]
  -[PUPhotoEditViewController ppt_scrollBWSlider:]
  -[PUPhotoEditViewController ppt_configureSelectedSliderWithSteps:]
  -[PUPhotoEditViewController ppt_selectNextLightingEffect:]
  -[PUPhotoEditViewController ppt_playLivePhotoWithWillBeginPlaybackBlock:didEndPlaybackBlock:]
  -[PUPhotoEditViewController ppt_renderStatisticsDictionaryForTimeInterval:]
  -[PUPhotoEditViewController setInitialToolType:]
  -[PUPhotoEditViewController _setAggregateSession:]
  -[PUPhotoEditViewController overCaptureEditSourceURL]
  -[PUPhotoEditViewController _editSourceUTI]
  -[PUPhotoEditViewController _setOriginalImageEditSource:]
  -[PUPhotoEditViewController originalReframeVariation]
  -[PUPhotoEditViewController setOriginalReframeVariation:]
  -[PUPhotoEditViewController originalOvercaptureEditSource]
  -[PUPhotoEditViewController setOriginalOvercaptureEditSource:]
  -[PUPhotoEditViewController _setOriginalImageExifOrientation:]
  -[PUPhotoEditViewController isTransitioningFromDownloadingToRunningAutoCalculators]
  -[PUPhotoEditViewController setIsTransitioningFromDownloadingToRunningAutoCalculators:]
  -[PUPhotoEditViewController _previewingOriginalRenderer]
  -[PUPhotoEditViewController _setPreviewingOriginalRenderer:]
  -[PUPhotoEditViewController _jpegPreviewForRawConfirmationAlert]
  -[PUPhotoEditViewController _saveTrimOptionsAlert]
  -[PUPhotoEditViewController pencilInteraction]
  -[PUPhotoEditViewController setPencilInteraction:]
  -[PUPhotoEditViewController setEnterEditEventBuilder:]
  -[PUPhotoEditViewController setExitEditEventBuilder:]
  -[PUPhotoEditViewController ppt_afterRenderBlock]
  -[PUPhotoEditViewController ppt_willBeginPlaybackBlock]
  -[PUPhotoEditViewController ppt_didEndPlaybackBlock]


_PUPhotoEditSnapshot : NSObject
 @property  long long workImageVersion
 @property  PHAdjustmentData *adjustmentData
 @property  NSData *imageData
 @property  NSData *baseImageData

  // instance methods
  -[_PUPhotoEditSnapshot setImageData:]
  -[_PUPhotoEditSnapshot .cxx_destruct]
  -[_PUPhotoEditSnapshot imageData]
  -[_PUPhotoEditSnapshot setAdjustmentData:]
  -[_PUPhotoEditSnapshot adjustmentData]
  -[_PUPhotoEditSnapshot workImageVersion]
  -[_PUPhotoEditSnapshot _copyData:]
  -[_PUPhotoEditSnapshot baseImageData]
  -[_PUPhotoEditSnapshot setBaseImageData:]
  -[_PUPhotoEditSnapshot setWorkImageVersion:]


PUPhotoEditViewControllerSpec : PUViewControllerSpec
 @property  {UIEdgeInsets=dddd} previewViewInsetsPortrait
 @property  {UIEdgeInsets=dddd} previewViewInsetsLandscape
 @property  double toolbarLongSideMargin
 @property  double toolbarLongSideWideMargin
 @property  BOOL shouldDisplaySecondaryToolButtonsInMainToolbar
 @property  BOOL shouldDisplayExtensionButtonInMainToolbar
 @property  BOOL shouldDisplayCompactToolbar
 @property  BOOL shouldAnchorLightingAgainstToolbar
 @property  BOOL shouldUseCompactToolbarSpacing
 @property  BOOL shouldAllowApertureButtonExpansion

  // instance methods
  -[PUPhotoEditViewControllerSpec shouldDisplayCompactToolbar]
  -[PUPhotoEditViewControllerSpec shouldAllowApertureButtonExpansion]
  -[PUPhotoEditViewControllerSpec shouldUseCompactToolbarSpacing]
  -[PUPhotoEditViewControllerSpec toolbarLongSideMargin]
  -[PUPhotoEditViewControllerSpec shouldDisplaySecondaryToolButtonsInMainToolbar]
  -[PUPhotoEditViewControllerSpec toolbarLongSideWideMargin]
  -[PUPhotoEditViewControllerSpec previewViewInsetsPortrait]
  -[PUPhotoEditViewControllerSpec previewViewInsetsLandscape]
  -[PUPhotoEditViewControllerSpec shouldDisplayExtensionButtonInMainToolbar]
  -[PUPhotoEditViewControllerSpec shouldAnchorLightingAgainstToolbar]


PUPhotoKitAssetActionManager : PUAssetActionManager
 @property  PUPhotoKitDataSourceManager *dataSourceManager
 @property  BOOL enableNavigateToPhotos

  // class methods
  +[PUPhotoKitAssetActionManager actionPerformerClassForActionType:]

  // instance methods
  -[PUPhotoKitAssetActionManager dataSourceManager]
  -[PUPhotoKitAssetActionManager .cxx_destruct]
  -[PUPhotoKitAssetActionManager _photosDataSource]
  -[PUPhotoKitAssetActionManager setDataSourceManager:]
  -[PUPhotoKitAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:allowsRemove:]
  -[PUPhotoKitAssetActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUPhotoKitAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUPhotoKitAssetActionManager shouldEnableActionType:onAsset:inAssetCollection:]
  -[PUPhotoKitAssetActionManager actionPerformerForSettingFavoriteTo:onAssetsByAssetCollection:]
  -[PUPhotoKitAssetActionManager actionPerformerForDuplicatingAssetsByAssetCollection:withNewStillImageTime:]
  -[PUPhotoKitAssetActionManager actionPerformerForRemoveAssetsFromFeaturedPhotosByAssetCollection:assetToSuggestionMap:]
  -[PUPhotoKitAssetActionManager enableNavigateToPhotos]
  -[PUPhotoKitAssetActionManager _actionTypeIsSimple:]
  -[PUPhotoKitAssetActionManager _photoKitAssetsDataSource]
  -[PUPhotoKitAssetActionManager setEnableNavigateToPhotos:]


PUPhotoKitActionPerformer : PUAssetActionPerformer
 @property  NSArray *assets
 @property  PXPhotosDataSource *photosDataSource

  // class methods
  +[PUPhotoKitActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitActionPerformer photosDataSource]
  -[PUPhotoKitActionPerformer setPhotosDataSource:]
  -[PUPhotoKitActionPerformer .cxx_destruct]
  -[PUPhotoKitActionPerformer stopExcludingAssetsFromDataSource]
  -[PUPhotoKitActionPerformer instantlyExcludeAssetsFromDataSource]
  -[PUPhotoKitActionPerformer _indexPathsInPhotosDataSource:]
  -[PUPhotoKitActionPerformer forceIncludeAssetsInDataSource]


PUPhotoKitDestructiveActionsPerformer : PUPhotoKitActionPerformer <PUDeletePhotosActionControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoKitDestructiveActionsPerformer performUserInteractionTask]
  -[PUPhotoKitDestructiveActionsPerformer deletePhotosActionController:presentConfirmationViewController:]
  -[PUPhotoKitDestructiveActionsPerformer deletePhotosActionController:dismissConfirmationViewController:]
  -[PUPhotoKitDestructiveActionsPerformer destructivePhotosAction]
  -[PUPhotoKitDestructiveActionsPerformer shouldConfirmDestructiveAction]


PUPhotoKitTrashActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitTrashActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitTrashActionPerformer destructivePhotosAction]


PUPhotoKitTrashNoConfirmActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitTrashNoConfirmActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitTrashNoConfirmActionPerformer destructivePhotosAction]
  -[PUPhotoKitTrashNoConfirmActionPerformer shouldConfirmDestructiveAction]


PUPhotoKitDeleteActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitDeleteActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitDeleteActionPerformer destructivePhotosAction]


PUPhotoKitRestoreActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitRestoreActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitRestoreActionPerformer destructivePhotosAction]


PUPhotoKitRestoreNoConfirmActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitRestoreNoConfirmActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitRestoreNoConfirmActionPerformer destructivePhotosAction]
  -[PUPhotoKitRestoreNoConfirmActionPerformer shouldConfirmDestructiveAction]


PUPhotoKitRemoveActionPerformer : PUPhotoKitActionPerformer <PUAssetActionPerformerDelegate>
 @property  BOOL shouldShowConfirmation
 @property  NSDictionary *fetchResultsByAssetCollection
 @property  PUPhotoKitTrashActionPerformer *trashActionPerformer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoKitRemoveActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitRemoveActionPerformer performUserInteractionTask]
  -[PUPhotoKitRemoveActionPerformer fetchResultsByAssetCollection]
  -[PUPhotoKitRemoveActionPerformer .cxx_destruct]
  -[PUPhotoKitRemoveActionPerformer assetActionPerformer:presentViewController:]
  -[PUPhotoKitRemoveActionPerformer assetActionPerformer:dismissViewController:completionHandler:]
  -[PUPhotoKitRemoveActionPerformer performBackgroundTask]
  -[PUPhotoKitRemoveActionPerformer setFetchResultsByAssetCollection:]
  -[PUPhotoKitRemoveActionPerformer shouldShowConfirmation]
  -[PUPhotoKitRemoveActionPerformer _performTrashTask]
  -[PUPhotoKitRemoveActionPerformer setTrashActionPerformer:]
  -[PUPhotoKitRemoveActionPerformer trashActionPerformer]


PUPhotoKitRemoveNoConfirmActionPerformer : PUPhotoKitRemoveActionPerformer
  // instance methods
  -[PUPhotoKitRemoveNoConfirmActionPerformer shouldShowConfirmation]


PUPhotoKitFavoriteActionPerformer : PUPhotoKitActionPerformer
 @property  BOOL favorite

  // class methods
  +[PUPhotoKitFavoriteActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitFavoriteActionPerformer favorite]
  -[PUPhotoKitFavoriteActionPerformer setFavorite:]
  -[PUPhotoKitFavoriteActionPerformer performBackgroundTask]


PUPhotoKitRemoveFromFeaturedPhotosActionPerformer : PUPhotoKitActionPerformer
 @property  NSDictionary *assetToSuggestionMap

  // class methods
  +[PUPhotoKitRemoveFromFeaturedPhotosActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitRemoveFromFeaturedPhotosActionPerformer .cxx_destruct]
  -[PUPhotoKitRemoveFromFeaturedPhotosActionPerformer performBackgroundTask]
  -[PUPhotoKitRemoveFromFeaturedPhotosActionPerformer setAssetToSuggestionMap:]
  -[PUPhotoKitRemoveFromFeaturedPhotosActionPerformer assetToSuggestionMap]


PUPhotoKitSuggestLessPersonActionPerformer : PUPhotoKitActionPerformer <PXSuggestLessPeopleHelperDelegate>
  // class methods
  +[PUPhotoKitSuggestLessPersonActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitSuggestLessPersonActionPerformer performUserInteractionTask]
  -[PUPhotoKitSuggestLessPersonActionPerformer .cxx_destruct]
  -[PUPhotoKitSuggestLessPersonActionPerformer suggestLessPeopleHelper:presentViewController:]
  -[PUPhotoKitSuggestLessPersonActionPerformer suggestLessPeopleHelper:dismissViewController:completionHandler:]


PUPhotoKitEditActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitEditActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitEditActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitEditActionPerformer performUserInteractionTask]
  -[PUPhotoKitEditActionPerformer .cxx_destruct]
  -[PUPhotoKitEditActionPerformer _beginEditingCurrentAsset]
  -[PUPhotoKitEditActionPerformer _presentEditorForAsset:]


PUPhotoKitPrintActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitPrintActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitPrintActionPerformer performUserInteractionTask]


PUPhotoKitShareActionPerformer : PUPhotoKitActionPerformer
 @property  UIViewController *preheatedSharingViewController
 @property  PUActivitySharingController *activitySharingController

  // class methods
  +[PUPhotoKitShareActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitShareActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitShareActionPerformer performUserInteractionTask]
  -[PUPhotoKitShareActionPerformer .cxx_destruct]
  -[PUPhotoKitShareActionPerformer activitySharingController]
  -[PUPhotoKitShareActionPerformer setActivitySharingController:]
  -[PUPhotoKitShareActionPerformer preheatUserInteractionTask]
  -[PUPhotoKitShareActionPerformer _assetsFetchResultByAssetCollectionFromCollectionListFetchResult:inDataSource:]
  -[PUPhotoKitShareActionPerformer _createSharingViewControllerFromCurrentSelection]
  -[PUPhotoKitShareActionPerformer setPreheatedSharingViewController:]
  -[PUPhotoKitShareActionPerformer preheatedSharingViewController]


PUPhotoKitReviewActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitReviewActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitReviewActionPerformer performUserInteractionTask]
  -[PUPhotoKitReviewActionPerformer _enterReviewMode]


PUPhotoKitSlideShowActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitSlideShowActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitSlideShowActionPerformer performUserInteractionTask]
  -[PUPhotoKitSlideShowActionPerformer _startSlideshow]


PUScreenRoutePickerViewController : _UIScreenRoutePickerViewController
  // instance methods
  -[PUScreenRoutePickerViewController initWithCompletionBlock:]
  -[PUScreenRoutePickerViewController .cxx_destruct]
  -[PUScreenRoutePickerViewController viewDidDisappear:]


PUPhotoKitAirPlayActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitAirPlayActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitAirPlayActionPerformer performUserInteractionTask]
  -[PUPhotoKitAirPlayActionPerformer _showAirPlayPicker]
  -[PUPhotoKitAirPlayActionPerformer _handleDismissedAirPlayPicker]


PUPhotoKitHideActionPerformer : PUPhotoKitActionPerformer
 @property  PUAssetHidingHelper *assetHidingHelper
 @property  BOOL isHiding

  // class methods
  +[PUPhotoKitHideActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitHideActionPerformer performUserInteractionTask]
  -[PUPhotoKitHideActionPerformer .cxx_destruct]
  -[PUPhotoKitHideActionPerformer isHiding]
  -[PUPhotoKitHideActionPerformer performBackgroundTask]
  -[PUPhotoKitHideActionPerformer setAssetHidingHelper:]
  -[PUPhotoKitHideActionPerformer setIsHiding:]
  -[PUPhotoKitHideActionPerformer assetHidingHelper]


PUPhotoKitDuplicateActionPerformer : PUPhotoKitActionPerformer
 @property  PUDuplicateActionController *duplicateActionController
 @property  long long action
 @property  {?=qiIq} newStillImageTime

  // class methods
  +[PUPhotoKitDuplicateActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitDuplicateActionPerformer performUserInteractionTask]
  -[PUPhotoKitDuplicateActionPerformer .cxx_destruct]
  -[PUPhotoKitDuplicateActionPerformer setAction:]
  -[PUPhotoKitDuplicateActionPerformer action]
  -[PUPhotoKitDuplicateActionPerformer performBackgroundTask]
  -[PUPhotoKitDuplicateActionPerformer setDuplicateActionController:]
  -[PUPhotoKitDuplicateActionPerformer duplicateActionController]
  -[PUPhotoKitDuplicateActionPerformer setNewStillImageTime:]
  -[PUPhotoKitDuplicateActionPerformer newStillImageTime]


PUPhotoKitNavigateToPhotosActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitNavigateToPhotosActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitNavigateToPhotosActionPerformer performUserInteractionTask]


PUPhotoKitCopyActionPerformer : PUPhotoKitActionPerformer
  // class methods
  +[PUPhotoKitCopyActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitCopyActionPerformer performUserInteractionTask]
  -[PUPhotoKitCopyActionPerformer _performCopy]


PUPhotoKitRevealInMomentActionPerformer : PUPhotoKitNavigateToPhotosActionPerformer
  // class methods
  +[PUPhotoKitRevealInMomentActionPerformer canPerformOnAsset:inAssetCollection:]


PUPhotoKitSyndicationDeleteActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitSyndicationDeleteActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitSyndicationDeleteActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitSyndicationDeleteActionPerformer performUserInteractionTask]
  -[PUPhotoKitSyndicationDeleteActionPerformer performBackgroundTask]
  -[PUPhotoKitSyndicationDeleteActionPerformer destructivePhotosAction]


PUPhotoKitSyndicationDeleteNoConfirmActionPerformer : PUPhotoKitDestructiveActionsPerformer
  // class methods
  +[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer performUserInteractionTask]
  -[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer performBackgroundTask]
  -[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer destructivePhotosAction]
  -[PUPhotoKitSyndicationDeleteNoConfirmActionPerformer shouldConfirmDestructiveAction]


PUPhotoKitSyndicationSaveActionPerformer : PUPhotoKitActionPerformer <PXAssetsSharingHelperDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoKitSyndicationSaveActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUPhotoKitSyndicationSaveActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUPhotoKitSyndicationSaveActionPerformer performUserInteractionTask]
  -[PUPhotoKitSyndicationSaveActionPerformer assetsSharingHelper:presentViewController:]
  -[PUPhotoKitSyndicationSaveActionPerformer assetsSharingHelper:dismissViewController:completionHandler:]
  -[PUPhotoKitSyndicationSaveActionPerformer performBackgroundTask]


PUPhotoKitAssetsDataSource : PUAssetsDataSource
 @property  PXPhotosDataSourceChange *change
 @property  NSString *changeFromDataSourceIdentifier
 @property  NSCache *_assetReferenceByIndexPathCache
 @property  PXPhotosDataSource *photosDataSource

  // instance methods
  -[PUPhotoKitAssetsDataSource photosDataSource]
  -[PUPhotoKitAssetsDataSource change]
  -[PUPhotoKitAssetsDataSource numberOfAssetsWithMaximum:]
  -[PUPhotoKitAssetsDataSource isEmpty]
  -[PUPhotoKitAssetsDataSource indexPathForAssetCollection:]
  -[PUPhotoKitAssetsDataSource .cxx_destruct]
  -[PUPhotoKitAssetsDataSource initWithImmutablePhotosDataSource:withChange:fromDataSourceIdentifier:]
  -[PUPhotoKitAssetsDataSource _assetReferenceByIndexPathCache]
  -[PUPhotoKitAssetsDataSource changeFromDataSourceIdentifier]
  -[PUPhotoKitAssetsDataSource indexPathForAssetReference:]
  -[PUPhotoKitAssetsDataSource startingAssetReference]
  -[PUPhotoKitAssetsDataSource assetReferenceAtIndexPath:]
  -[PUPhotoKitAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUPhotoKitAssetsDataSource couldAssetReferenceAppear:]
  -[PUPhotoKitAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUPhotoKitAssetsDataSource convertIndexPath:fromAssetsDataSource:]
  -[PUPhotoKitAssetsDataSource assetCollectionAtIndexPath:]
  -[PUPhotoKitAssetsDataSource assetAtIndexPath:]


PUPhotoKitDataSourceManager : PUAssetsDataSourceManager <PXPhotosDataSourceChangeObserver>
 @property  PXPhotosDataSource *photosDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoKitDataSourceManager photosDataSource]
  -[PUPhotoKitDataSourceManager initWithAssetsDataSourceManager:]
  -[PUPhotoKitDataSourceManager photosDataSourceInterestingAssetReferences:]
  -[PUPhotoKitDataSourceManager setPhotosDataSource:]
  -[PUPhotoKitDataSourceManager updateWithPhotosDataSource:andDataSourceChange:]
  -[PUPhotoKitDataSourceManager photosDataSource:didChange:]
  -[PUPhotoKitDataSourceManager initWithPhotosDataSource:]
  -[PUPhotoKitDataSourceManager .cxx_destruct]
  -[PUPhotoKitDataSourceManager init]
  -[PUPhotoKitDataSourceManager dealloc]


PUPhotoKitMediaProvider : PUEditableMediaProvider
  // instance methods
  -[PUPhotoKitMediaProvider cancelImageRequest:]
  -[PUPhotoKitMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestAsynchronousVideoURLForAsset:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestAVAssetForVideo:options:resultHandler:]
  -[PUPhotoKitMediaProvider requestAnimatedImageForAsset:options:resultHandler:]


PUPhotoPickerResizeTaskDescriptorViewModel : PXObservable <PXInfoProvider, PXInfoUpdaterObserver>
 @property  PXInfoUpdater *localizedFileSizeDescriptionUpdater
 @property  NSObject<OS_dispatch_queue> *localizedFileSizeDescriptionUpdaterQueue
 @property  PUPhotoPickerResizeTaskDescriptor *resizeTaskDescriptor
 @property  NSString *localizedTitle
 @property  NSString *localizedFileSizeDescription
 @property  UIMenu *fileSizeMenu
 @property  <PUPhotoPickerResizeTaskDescriptorViewModelDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoPickerResizeTaskDescriptorViewModel localizedTitle]
  -[PUPhotoPickerResizeTaskDescriptorViewModel performChanges:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel .cxx_destruct]
  -[PUPhotoPickerResizeTaskDescriptorViewModel infoUpdaterDidUpdate:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel setDelegate:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel init]
  -[PUPhotoPickerResizeTaskDescriptorViewModel delegate]
  -[PUPhotoPickerResizeTaskDescriptorViewModel requestInfoOfKind:withResultHandler:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel setFileSizeMenu:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel invalidateAssetsForResizing]
  -[PUPhotoPickerResizeTaskDescriptorViewModel setResizeTaskDescriptor:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel resizeTaskDescriptor]
  -[PUPhotoPickerResizeTaskDescriptorViewModel fileSizeMenu]
  -[PUPhotoPickerResizeTaskDescriptorViewModel localizedFileSizeDescriptionUpdater]
  -[PUPhotoPickerResizeTaskDescriptorViewModel _infoDictionaryForLocalizedTitle:localizedFileSizeDescription:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel localizedFileSizeDescriptionUpdaterQueue]
  -[PUPhotoPickerResizeTaskDescriptorViewModel localizedFileSizeDescription]
  -[PUPhotoPickerResizeTaskDescriptorViewModel setLocalizedFileSizeDescriptionUpdater:]
  -[PUPhotoPickerResizeTaskDescriptorViewModel setLocalizedFileSizeDescriptionUpdaterQueue:]


PUVolumeGlyphView : UIView <CAMLParserDelegate>
 @property  NSString *stateName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUVolumeGlyphView classSubstitions]

  // instance methods
  -[PUVolumeGlyphView stateName]
  -[PUVolumeGlyphView setStateName:]
  -[PUVolumeGlyphView .cxx_destruct]
  -[PUVolumeGlyphView layoutSubviews]
  -[PUVolumeGlyphView CAMLParser:didFailToFindClassWithName:]
  -[PUVolumeGlyphView initWithFrame:]
  -[PUVolumeGlyphView _handleGlyphLayerDidLoad:]


PUPhotoKitMediaProviderDownloadSimulation : NSObject
 @property  double _updateInterval
 @property  double _simulatedProgress
 @property  BOOL shouldSimulateFailure
 @property  double downloadDuration

  // instance methods
  -[PUPhotoKitMediaProviderDownloadSimulation init]
  -[PUPhotoKitMediaProviderDownloadSimulation _updateInterval]
  -[PUPhotoKitMediaProviderDownloadSimulation _setSimulatedProgress:]
  -[PUPhotoKitMediaProviderDownloadSimulation _updateSimulatedDownload]
  -[PUPhotoKitMediaProviderDownloadSimulation _simulatedProgress]
  -[PUPhotoKitMediaProviderDownloadSimulation downloadDuration]
  -[PUPhotoKitMediaProviderDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderDownloadSimulation shouldSimulateFailure]
  -[PUPhotoKitMediaProviderDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderDownloadSimulation beginSimulation]
  -[PUPhotoKitMediaProviderDownloadSimulation setShouldSimulateFailure:]
  -[PUPhotoKitMediaProviderDownloadSimulation setDownloadDuration:]


PUPhotoKitMediaProviderImageDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  UIImage *_resultImage
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderImageDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderImageDownloadSimulation init]
  -[PUPhotoKitMediaProviderImageDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderImageDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderImageDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderImageDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation _handleResultImage:info:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderImageDownloadSimulation _setResultImage:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderImageDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderImageDownloadSimulation _resultImage]


PUPhotoKitMediaProviderImageDataDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  NSData *_resultImageData
 @property  NSString *_resultDataUTI
 @property  long long _resultOrientaton
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation init]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _handleResultImageData:dataUTI:orientation:info:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _setResultImageData:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _setResultDataUTI:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _setResultOrientation:]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _resultImageData]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _resultDataUTI]
  -[PUPhotoKitMediaProviderImageDataDownloadSimulation _resultOrientaton]


PUPhotoKitMediaProviderPlayerItemDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  AVPlayerItem *_resultPlayerItem
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation init]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation _handleResultPlayerItem:info:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation _setResultPlayerItem:]
  -[PUPhotoKitMediaProviderPlayerItemDownloadSimulation _resultPlayerItem]


PUPhotoKitMediaProviderAVAssetDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  AVAsset *_resultAVAsset
 @property  AVAudioMix *_resultAudioMix
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation init]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _handleResultAVAsset:audioMix:info:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _setResultAVAsset:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _setResultAudioMix:]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _resultAVAsset]
  -[PUPhotoKitMediaProviderAVAssetDownloadSimulation _resultAudioMix]


PUPhotoKitMediaProviderLivePhotoDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  PHLivePhoto *_resultLivePhoto
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation init]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation _handleResultLivePhoto:info:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation _setResultLivePhoto:]
  -[PUPhotoKitMediaProviderLivePhotoDownloadSimulation _resultLivePhoto]


PUPhotoKitMediaProviderAnimatedImageDownloadSimulation : PUPhotoKitMediaProviderDownloadSimulation
 @property  PHAnimatedImage *_resultAnimatedImage
 @property  NSDictionary *_resultInfo
 @property  @? externalProgressHandler
 @property  @? internalProgressHandler
 @property  @? externalResultHandler
 @property  @? internalResultHandler

  // instance methods
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation .cxx_destruct]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation init]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation _resultInfo]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation setExternalProgressHandler:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation setExternalResultHandler:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation internalProgressHandler]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation internalResultHandler]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation updateSimulationWithProgress:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation endSimulationWithError:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation externalResultHandler]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation _setResultInfo:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation externalProgressHandler]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation _handleResultAnimatedImage:info:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation _setResultAnimatedImage:]
  -[PUPhotoKitMediaProviderAnimatedImageDownloadSimulation _resultAnimatedImage]


PUSharingStackCollectionViewController : UICollectionViewController <PUSharingStackCollectionViewLayoutDelegate>
 @property  PUSharingStackCollectionViewLayout *stackLayout
 @property  <PXUIImageProvider> *imageProvider
 @property  NSMutableDictionary *layoutItemsByAssets
 @property  long long currentRotationDirection
 @property  long long currentVerticalAdjustmentDirection
 @property  unsigned long numberOfItems
 @property  NSArray *assets
 @property  BOOL needsUpdate
 @property  <PUSharingStackCollectionViewControllerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSharingStackCollectionViewController collectionView:cellForItemAtIndexPath:]
  -[PUSharingStackCollectionViewController collectionView:numberOfItemsInSection:]
  -[PUSharingStackCollectionViewController numberOfSectionsInCollectionView:]
  -[PUSharingStackCollectionViewController initWithCoder:]
  -[PUSharingStackCollectionViewController setDataSource:]
  -[PUSharingStackCollectionViewController .cxx_destruct]
  -[PUSharingStackCollectionViewController assets]
  -[PUSharingStackCollectionViewController viewDidLoad]
  -[PUSharingStackCollectionViewController initWithNibName:bundle:]
  -[PUSharingStackCollectionViewController dataSource]
  -[PUSharingStackCollectionViewController numberOfItems]
  -[PUSharingStackCollectionViewController setNeedsUpdate:]
  -[PUSharingStackCollectionViewController setAssets:]
  -[PUSharingStackCollectionViewController initWithCollectionViewLayout:]
  -[PUSharingStackCollectionViewController viewWillAppear:]
  -[PUSharingStackCollectionViewController sharingStackCollectionViewLayout:layoutItemForItemAtIndexPath:]
  -[PUSharingStackCollectionViewController imageProvider]
  -[PUSharingStackCollectionViewController needsUpdate]
  -[PUSharingStackCollectionViewController setImageProvider:]
  -[PUSharingStackCollectionViewController setNumberOfItems:]
  -[PUSharingStackCollectionViewController viewDidDisappear:]
  -[PUSharingStackCollectionViewController _updatePhotoForAsset:cell:atIndexPath:]
  -[PUSharingStackCollectionViewController _updateCell:forItemAtIndexPath:]
  -[PUSharingStackCollectionViewController invalidateContent]
  -[PUSharingStackCollectionViewController setCurrentRotationDirection:]
  -[PUSharingStackCollectionViewController setCurrentVerticalAdjustmentDirection:]
  -[PUSharingStackCollectionViewController _layoutItemInputForAsset:atIndex:]
  -[PUSharingStackCollectionViewController setLayoutItemsByAssets:]
  -[PUSharingStackCollectionViewController _sizeForAsset:]
  -[PUSharingStackCollectionViewController initWithImageProvider:]
  -[PUSharingStackCollectionViewController stackLayout]
  -[PUSharingStackCollectionViewController layoutItemsByAssets]
  -[PUSharingStackCollectionViewController currentRotationDirection]
  -[PUSharingStackCollectionViewController currentVerticalAdjustmentDirection]


PUPhotoKitPhotoEditMediaDestination : PUMediaDestination
 @property  NSMutableDictionary *pendingRequestsByRequestIdentifier

  // instance methods
  -[PUPhotoKitPhotoEditMediaDestination .cxx_destruct]
  -[PUPhotoKitPhotoEditMediaDestination init]
  -[PUPhotoKitPhotoEditMediaDestination cancelRequestWithIdentifier:]
  -[PUPhotoKitPhotoEditMediaDestination saveInternalEditsForAsset:usingCompositionController:contentEditingOutput:version:livePhotoEditModel:originalComposition:useRawIfAvailable:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination saveEditsForAsset:usingContentEditingOutput:livePhotoEditModel:useRawIfAvailable:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination saveEditsByCopyingAsset:withResourceURL:usingContentEditingOutput:livePhotoEditModel:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination revertEditsForAsset:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination isSavingRequestWithIdentifier:]
  -[PUPhotoKitPhotoEditMediaDestination ensureEditableCopyOfAsset:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination supportsProgressForRequestWithIdentifier:]
  -[PUPhotoKitPhotoEditMediaDestination progressForRequestWithIdentifier:]
  -[PUPhotoKitPhotoEditMediaDestination _workImageVersionForContentEditingOutput:]
  -[PUPhotoKitPhotoEditMediaDestination _fetchUpdatedAssetWithLocalIdentifier:photoLibrary:]
  -[PUPhotoKitPhotoEditMediaDestination _saveEditsForPhoto:saveRequest:completionHandler:]
  -[PUPhotoKitPhotoEditMediaDestination _pendingRequestsByRequestIdentifier]
  -[PUPhotoKitPhotoEditMediaDestination _requestDidFinish:]


PUPhotoMarkupViewController : UIViewController <MarkupViewControllerDelegate>
 @property  MarkupViewController *_markupViewController
 @property  PUObserverRegistry *_observerRegistry
 @property  long long _sourceImageVersion
 @property  NSURL *_workaroundInputWriteURL
 @property  PUReviewAsset *reviewAsset
 @property  PUMediaProvider *mediaProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoMarkupViewController unregisterObserver:]
  -[PUPhotoMarkupViewController registerObserver:]
  -[PUPhotoMarkupViewController .cxx_destruct]
  -[PUPhotoMarkupViewController mediaProvider]
  -[PUPhotoMarkupViewController viewDidLoad]
  -[PUPhotoMarkupViewController _handleDoneButton:]
  -[PUPhotoMarkupViewController _handleCancelButton:]
  -[PUPhotoMarkupViewController initWithReviewAsset:mediaProvider:]
  -[PUPhotoMarkupViewController reviewAsset]
  -[PUPhotoMarkupViewController _observerRegistry]
  -[PUPhotoMarkupViewController _setSourceImageVersion:]
  -[PUPhotoMarkupViewController _notifyObserversDidFinishWithSavedAsset:]
  -[PUPhotoMarkupViewController _sourceImageVersion]
  -[PUPhotoMarkupViewController _markupViewController]
  -[PUPhotoMarkupViewController _workaroundInputWriteURL]
  -[PUPhotoMarkupViewController _setWorkaroundInputWriteURL:]
  -[PUPhotoMarkupViewController controller:willSetToolbarItems:]


PUPhotoPickerAbstractExtensionContext : NSExtensionContext
  // class methods
  +[PUPhotoPickerAbstractExtensionContext _allowedItemPayloadClasses]
  +[PUPhotoPickerAbstractExtensionContext _extensionAuxiliaryVendorProtocol]
  +[PUPhotoPickerAbstractExtensionContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[PUPhotoPickerAbstractExtensionContext principalObject]
  -[PUPhotoPickerAbstractExtensionContext proxy]
  -[PUPhotoPickerAbstractExtensionContext invalidateContext]
  -[PUPhotoPickerAbstractExtensionContext firstPayloadFromExtensionItems:completion:]


PUPhotoPickerExtensionContext : PUPhotoPickerAbstractExtensionContext <PUPhotoPickerRemoteService, PUPhotoPickerHostService>
 @property  NSString *temporaryDirectoryInHost
 @property  NSObject<OS_dispatch_queue> *multipleMediaIsolationQueue
 @property  NSOperationQueue *multipleMediaConversionConcurrentQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoPickerExtensionContext configureImageManagerLimit]

  // instance methods
  -[PUPhotoPickerExtensionContext .cxx_destruct]
  -[PUPhotoPickerExtensionContext _host]
  -[PUPhotoPickerExtensionContext initWithInputItems:listenerEndpoint:contextUUID:]
  -[PUPhotoPickerExtensionContext dismissCurrentViewControllerFromPhotoPickerAnimated:]
  -[PUPhotoPickerExtensionContext didSelectMultipleMediaItemsWithInfoDictionaries:]
  -[PUPhotoPickerExtensionContext didDisplayPhotoPickerSourceType:]
  -[PUPhotoPickerExtensionContext didDisplayPhotoPickerPreview]
  -[PUPhotoPickerExtensionContext didSelectMediaWithInfoDictionary:]
  -[PUPhotoPickerExtensionContext cancelPhotoPicker]
  -[PUPhotoPickerExtensionContext performPhotoPickerPreviewOfFirstAsset]
  -[PUPhotoPickerExtensionContext initiatePhotoPickerSelection]
  -[PUPhotoPickerExtensionContext invalidatePhotoPickerRemoteServices]
  -[PUPhotoPickerExtensionContext performTraitCollectionUpdateUsingData:completion:]
  -[PUPhotoPickerExtensionContext invalidatePhotoPickerHostServices]
  -[PUPhotoPickerExtensionContext setTemporaryDirectoryInHost:]
  -[PUPhotoPickerExtensionContext multipleMediaConversionConcurrentQueue]
  -[PUPhotoPickerExtensionContext _createPhotoPickerInfoDictionaryFromInfoDictionary:appendTo:completion:]
  -[PUPhotoPickerExtensionContext _handleMutlipleMediaCompletion:]
  -[PUPhotoPickerExtensionContext multipleMediaIsolationQueue]
  -[PUPhotoPickerExtensionContext _photoPickerInfoDictionaryFromUIImagePickerControllerInfoDictionary:completion:]
  -[PUPhotoPickerExtensionContext _createSandboxTokenForURL:]
  -[PUPhotoPickerExtensionContext _handleLivePhotoImageUrlFetch:appendTo:completion:]
  -[PUPhotoPickerExtensionContext _saveImageURLForLivePhoto:fileURL:appendTo:completion:]
  -[PUPhotoPickerExtensionContext _handleLivePhotoVideoUrlFetch:appendTo:completion:]
  -[PUPhotoPickerExtensionContext _saveVideoURLForLivePhoto:fileURL:appendTo:completion:]
  -[PUPhotoPickerExtensionContext _createSandboxTokenForPath:]
  -[PUPhotoPickerExtensionContext requestedViewControllerOptionsWithCompletionHandler:]
  -[PUPhotoPickerExtensionContext temporaryDirectoryInHost]


PUPhotoPickerExtensionHostContext : PUPhotoPickerAbstractExtensionContext <PUPhotoPickerHostService>
 @property  NSNumber *cachedDidDisplayPhotoPickerSourceType
 @property  BOOL cachedDidDisplayPhotoPickerPreview
 @property  NSString *photoPickerViewControllerTitle
 @property  NSString *photoPickerViewControllerPrompt
 @property  NSNumber *photoPickerNavigationBarHidden
 @property  <PUPhotoPickerHostService> *delegate
 @property  NSUUID *requestIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoPickerExtensionHostContext setRequestIdentifier:]
  -[PUPhotoPickerExtensionHostContext requestIdentifier]
  -[PUPhotoPickerExtensionHostContext _remote]
  -[PUPhotoPickerExtensionHostContext .cxx_destruct]
  -[PUPhotoPickerExtensionHostContext dismissCurrentViewControllerFromPhotoPickerAnimated:]
  -[PUPhotoPickerExtensionHostContext setDelegate:]
  -[PUPhotoPickerExtensionHostContext didSelectMultipleMediaItemsWithInfoDictionaries:]
  -[PUPhotoPickerExtensionHostContext setPhotoPickerViewControllerTitle:]
  -[PUPhotoPickerExtensionHostContext didDisplayPhotoPickerSourceType:]
  -[PUPhotoPickerExtensionHostContext didDisplayPhotoPickerPreview]
  -[PUPhotoPickerExtensionHostContext didSelectMediaWithInfoDictionary:]
  -[PUPhotoPickerExtensionHostContext delegate]
  -[PUPhotoPickerExtensionHostContext completeRequestReturningItems:completionHandler:]
  -[PUPhotoPickerExtensionHostContext cancelPhotoPicker]
  -[PUPhotoPickerExtensionHostContext performPhotoPickerPreviewOfFirstAsset]
  -[PUPhotoPickerExtensionHostContext initiatePhotoPickerSelection]
  -[PUPhotoPickerExtensionHostContext performTraitCollectionUpdateUsingData:completion:]
  -[PUPhotoPickerExtensionHostContext invalidatePhotoPickerHostServices]
  -[PUPhotoPickerExtensionHostContext cachedDidDisplayPhotoPickerSourceType]
  -[PUPhotoPickerExtensionHostContext cachedDidDisplayPhotoPickerPreview]
  -[PUPhotoPickerExtensionHostContext setCachedDidDisplayPhotoPickerSourceType:]
  -[PUPhotoPickerExtensionHostContext setCachedDidDisplayPhotoPickerPreview:]
  -[PUPhotoPickerExtensionHostContext _UIImagePickerControllerInfoDictionaryFromPhotoPickerInfoDictionary:]
  -[PUPhotoPickerExtensionHostContext _isHEIFImageFormatFromData:url:]
  -[PUPhotoPickerExtensionHostContext _JPEGDataFromImageData:]
  -[PUPhotoPickerExtensionHostContext _pathExtensionFromData:url:exportPreset:]
  -[PUPhotoPickerExtensionHostContext _resizeImage:toMaximumDimension:]
  -[PUPhotoPickerExtensionHostContext _JPEGDataFromImage:]
  -[PUPhotoPickerExtensionHostContext _createURLFromPath:token:]
  -[PUPhotoPickerExtensionHostContext photoPickerViewControllerTitle]
  -[PUPhotoPickerExtensionHostContext photoPickerViewControllerPrompt]
  -[PUPhotoPickerExtensionHostContext setPhotoPickerViewControllerPrompt:]
  -[PUPhotoPickerExtensionHostContext photoPickerNavigationBarHidden]
  -[PUPhotoPickerExtensionHostContext setPhotoPickerNavigationBarHidden:]


PUPhotoPickerFileSizeToolbarProvider : NSObject <UITableViewDataSource, UITableViewDelegate, PUPhotosGridViewSupplementalToolbarProvider>
 @property  <PUPhotoPickerFileSizeToolbarProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldShowToolbar
 @property  NSArray *toolbarItems

  // instance methods
  -[PUPhotoPickerFileSizeToolbarProvider initWithDataSource:]
  -[PUPhotoPickerFileSizeToolbarProvider tableView:numberOfRowsInSection:]
  -[PUPhotoPickerFileSizeToolbarProvider .cxx_destruct]
  -[PUPhotoPickerFileSizeToolbarProvider tableView:didSelectRowAtIndexPath:]
  -[PUPhotoPickerFileSizeToolbarProvider tableView:cellForRowAtIndexPath:]
  -[PUPhotoPickerFileSizeToolbarProvider setDelegate:]
  -[PUPhotoPickerFileSizeToolbarProvider delegate]
  -[PUPhotoPickerFileSizeToolbarProvider toolbarItems]
  -[PUPhotoPickerFileSizeToolbarProvider shouldShowToolbar]
  -[PUPhotoPickerFileSizeToolbarProvider _orderedResizeTaskDescriptorsForCurrentlySelectedAssets]
  -[PUPhotoPickerFileSizeToolbarProvider _sizePickerItem]
  -[PUPhotoPickerFileSizeToolbarProvider _updateSizePickerItemIfNeeded]
  -[PUPhotoPickerFileSizeToolbarProvider _presentSizePicker:]
  -[PUPhotoPickerFileSizeToolbarProvider _updateTableViewSelection]
  -[PUPhotoPickerFileSizeToolbarProvider _orderedResizeTaskDescriptors]
  -[PUPhotoPickerFileSizeToolbarProvider _localizedLabelForResizeTaskDescriptor:]
  -[PUPhotoPickerFileSizeToolbarProvider _computeSelectedIndexPath]


PUPhotoPickerHostViewController : _UIRemoteViewController <PUPhotoPickerHostExtensionProvider, PUPhotoPickerTestSupportHandler>
 @property  <PUPhotoPickerHostService> *hostProxy
 @property  BOOL _invalidated
 @property  <PUPhotoPickerHostViewControllerDelegate> *delegate
 @property  NSExtensionContext *hostExtensionContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoPickerHostViewController _isInvalidated]
  -[PUPhotoPickerHostViewController viewServiceDidTerminateWithError:]
  -[PUPhotoPickerHostViewController .cxx_destruct]
  -[PUPhotoPickerHostViewController _hostContext]
  -[PUPhotoPickerHostViewController setDelegate:]
  -[PUPhotoPickerHostViewController willMoveToParentViewController:]
  -[PUPhotoPickerHostViewController performTraitCollectionUpdateWithCompletion:]
  -[PUPhotoPickerHostViewController delegate]
  -[PUPhotoPickerHostViewController invalidate]
  -[PUPhotoPickerHostViewController hostProxy]
  -[PUPhotoPickerHostViewController setHostExtensionContext:]
  -[PUPhotoPickerHostViewController performPhotoPickerPreviewOfFirstAsset]
  -[PUPhotoPickerHostViewController set_invalidated:]
  -[PUPhotoPickerHostViewController hostExtensionContext]


PUPhotoPickerRemoteNavigationController : UINavigationController
 @property  <PUPhotoPickerRemoteNavigationControllerDelegate> *remoteViewControllerDelegate

  // instance methods
  -[PUPhotoPickerRemoteNavigationController .cxx_destruct]
  -[PUPhotoPickerRemoteNavigationController pushViewController:animated:]
  -[PUPhotoPickerRemoteNavigationController popToViewController:animated:]
  -[PUPhotoPickerRemoteNavigationController popToRootViewControllerAnimated:]
  -[PUPhotoPickerRemoteNavigationController remoteViewControllerDelegate]
  -[PUPhotoPickerRemoteNavigationController setRemoteViewControllerDelegate:]


PUPhotoPickerRemoteViewController : UIViewController <PUPhotoPickerRemoteNavigationControllerDelegate, NSExtensionRequestHandling, PUPhotoPicker, PUPhotoPickerTestSupportHandler>
 @property  PUPhotoPickerExtensionContext *extensionContext
 @property  UIViewController *contentViewController
 @property  PUPhotoPickerRemoteNavigationController *contentNavigationController
 @property  PUPhotoPickerRemoteViewControllerRequestOptions *options
 @property  PUAssetPickerCoordinator *assetPickerCoordinator
 @property  NSLayoutConstraint *topConstraint
 @property  NSLayoutConstraint *bottomConstraint
 @property  NSLayoutConstraint *leadingConstraint
 @property  NSLayoutConstraint *trailingConstraint
 @property  NSLayoutConstraint *leadingSafeAreaConstraint
 @property  NSLayoutConstraint *trailingSafeAreaConstraint
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long savingOptions
 @property  NSArray *mediaTypes
 @property  BOOL allowsMultipleSelection
 @property  unsigned long multipleSelectionLimit
 @property  BOOL requiresPickingConfirmation
 @property  BOOL showsFileSizePicker
 @property  BOOL showsPrompt
 @property  BOOL convertAutoloopsToGIF
 @property  NSDictionary *properties

  // class methods
  +[PUPhotoPickerRemoteViewController initialize]

  // instance methods
  -[PUPhotoPickerRemoteViewController updateViewConstraints]
  -[PUPhotoPickerRemoteViewController setContentViewController:]
  -[PUPhotoPickerRemoteViewController viewWillLayoutSubviews]
  -[PUPhotoPickerRemoteViewController traitCollectionDidChange:]
  -[PUPhotoPickerRemoteViewController setBottomConstraint:]
  -[PUPhotoPickerRemoteViewController options]
  -[PUPhotoPickerRemoteViewController setOptions:]
  -[PUPhotoPickerRemoteViewController .cxx_destruct]
  -[PUPhotoPickerRemoteViewController allowsMultipleSelection]
  -[PUPhotoPickerRemoteViewController properties]
  -[PUPhotoPickerRemoteViewController setTopConstraint:]
  -[PUPhotoPickerRemoteViewController setTrailingConstraint:]
  -[PUPhotoPickerRemoteViewController mediaTypes]
  -[PUPhotoPickerRemoteViewController topConstraint]
  -[PUPhotoPickerRemoteViewController extensionContext]
  -[PUPhotoPickerRemoteViewController didSelectMultipleMediaItemsWithInfoDictionaries:]
  -[PUPhotoPickerRemoteViewController didDisplayPhotoPickerSourceType:]
  -[PUPhotoPickerRemoteViewController didDisplayPhotoPickerPreview]
  -[PUPhotoPickerRemoteViewController setTrailingSafeAreaConstraint:]
  -[PUPhotoPickerRemoteViewController leadingSafeAreaConstraint]
  -[PUPhotoPickerRemoteViewController trailingSafeAreaConstraint]
  -[PUPhotoPickerRemoteViewController contentViewController]
  -[PUPhotoPickerRemoteViewController setLeadingConstraint:]
  -[PUPhotoPickerRemoteViewController setExtensionContext:]
  -[PUPhotoPickerRemoteViewController presentViewController:]
  -[PUPhotoPickerRemoteViewController leadingConstraint]
  -[PUPhotoPickerRemoteViewController trailingConstraint]
  -[PUPhotoPickerRemoteViewController setLeadingSafeAreaConstraint:]
  -[PUPhotoPickerRemoteViewController cancelPhotoPicker]
  -[PUPhotoPickerRemoteViewController loadView]
  -[PUPhotoPickerRemoteViewController showsFileSizePicker]
  -[PUPhotoPickerRemoteViewController requiresPickingConfirmation]
  -[PUPhotoPickerRemoteViewController beginRequestWithExtensionContext:]
  -[PUPhotoPickerRemoteViewController performPhotoPickerPreviewOfFirstAsset]
  -[PUPhotoPickerRemoteViewController bottomConstraint]
  -[PUPhotoPickerRemoteViewController contentNavigationController]
  -[PUPhotoPickerRemoteViewController showsPrompt]
  -[PUPhotoPickerRemoteViewController multipleSelectionLimit]
  -[PUPhotoPickerRemoteViewController didSelectMediaWithInfoDictionary:allowedHandler:]
  -[PUPhotoPickerRemoteViewController performTraitCollectionUpdateUsingData:completion:]
  -[PUPhotoPickerRemoteViewController performPhotosSelection]
  -[PUPhotoPickerRemoteViewController savingOptions]
  -[PUPhotoPickerRemoteViewController convertAutoloopsToGIF]
  -[PUPhotoPickerRemoteViewController photoPickerRemoteNavigationController:viewControllerToPush:]
  -[PUPhotoPickerRemoteViewController _loadContentViewIfNeeded]
  -[PUPhotoPickerRemoteViewController assetPickerCoordinator]
  -[PUPhotoPickerRemoteViewController setAssetPickerCoordinator:]
  -[PUPhotoPickerRemoteViewController _setPhotoPickerInViewController:]
  -[PUPhotoPickerRemoteViewController setContentNavigationController:]
  -[PUPhotoPickerRemoteViewController _handleViewControllerRequestWithOptions:error:]
  -[PUPhotoPickerRemoteViewController _logAssetSelectionIfNeeded:]
  -[PUPhotoPickerRemoteViewController _allowSharingSelectionOfInfoDictionaries:completion:]
  -[PUPhotoPickerRemoteViewController _handlePerformTraitCollectionUpdateUsingData:completion:]


PUPhotoPickerRemoteContainerView : UIView
  // instance methods
  -[PUPhotoPickerRemoteContainerView setFrame:]


PUPhotoPickerRemoteViewControllerRequestOptions : NSObject <NSSecureCoding>
 @property  NSUUID *requestedIdentifier
 @property  NSString *requestedClassName
 @property  NSDictionary *photoPickerProperties
 @property  long long modalPresentationStyle
 @property  long long sourceType
 @property  unsigned long savingOptions
 @property  NSArray *mediaTypes
 @property  BOOL allowsMultipleSelection
 @property  unsigned long multipleSelectionLimit
 @property  BOOL requiresPickingConfirmation
 @property  BOOL showsFileSizePicker
 @property  BOOL showsPrompt
 @property  BOOL convertAutoloopsToGIF

  // class methods
  +[PUPhotoPickerRemoteViewControllerRequestOptions supportsSecureCoding]

  // instance methods
  -[PUPhotoPickerRemoteViewControllerRequestOptions sourceType]
  -[PUPhotoPickerRemoteViewControllerRequestOptions initWithCoder:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions .cxx_destruct]
  -[PUPhotoPickerRemoteViewControllerRequestOptions allowsMultipleSelection]
  -[PUPhotoPickerRemoteViewControllerRequestOptions initWithRequestedIdentifier:photoPickerProperties:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions initWithRequestedClassName:photoPickerProperties:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions mediaTypes]
  -[PUPhotoPickerRemoteViewControllerRequestOptions modalPresentationStyle]
  -[PUPhotoPickerRemoteViewControllerRequestOptions showsFileSizePicker]
  -[PUPhotoPickerRemoteViewControllerRequestOptions requiresPickingConfirmation]
  -[PUPhotoPickerRemoteViewControllerRequestOptions encodeWithCoder:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions showsPrompt]
  -[PUPhotoPickerRemoteViewControllerRequestOptions multipleSelectionLimit]
  -[PUPhotoPickerRemoteViewControllerRequestOptions photoPickerProperties]
  -[PUPhotoPickerRemoteViewControllerRequestOptions savingOptions]
  -[PUPhotoPickerRemoteViewControllerRequestOptions convertAutoloopsToGIF]
  -[PUPhotoPickerRemoteViewControllerRequestOptions requestedClassName]
  -[PUPhotoPickerRemoteViewControllerRequestOptions requestedIdentifier]
  -[PUPhotoPickerRemoteViewControllerRequestOptions setRequestedIdentifier:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions setRequestedClassName:]
  -[PUPhotoPickerRemoteViewControllerRequestOptions setPhotoPickerProperties:]


PUPhotoPickerResizeTaskDescriptor : NSObject <NSCopying>
 @property  {CGSize=dd} targetSize
 @property  NSString *localizedDescription

  // class methods
  +[PUPhotoPickerResizeTaskDescriptor orderedDefaultDescriptors]
  +[PUPhotoPickerResizeTaskDescriptor defaultActualSizeDescriptor]
  +[PUPhotoPickerResizeTaskDescriptor defaultSmallDescriptor]
  +[PUPhotoPickerResizeTaskDescriptor defaultMediumDescriptor]
  +[PUPhotoPickerResizeTaskDescriptor defaultLargeDescriptor]

  // instance methods
  -[PUPhotoPickerResizeTaskDescriptor localizedDescription]
  -[PUPhotoPickerResizeTaskDescriptor targetSize]
  -[PUPhotoPickerResizeTaskDescriptor .cxx_destruct]
  -[PUPhotoPickerResizeTaskDescriptor isEqual:]
  -[PUPhotoPickerResizeTaskDescriptor copyWithZone:]
  -[PUPhotoPickerResizeTaskDescriptor localizedDescriptionForAssets:]
  -[PUPhotoPickerResizeTaskDescriptor estimatedSizeForAssets:]
  -[PUPhotoPickerResizeTaskDescriptor appliesToAsset:]
  -[PUPhotoPickerResizeTaskDescriptor initWithLocalizedDescription:targetSize:]
  -[PUPhotoPickerResizeTaskDescriptor formattedSizeForAssets:]


PUPhotoPinchGestureRecognizer : UIPinchGestureRecognizer
 @property  BOOL _touchesNeedUpdate
 @property  PUValueFilter *_rotationFilter
 @property  double rotationHysteresisDegrees
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} initialPinchRect

  // instance methods
  -[PUPhotoPinchGestureRecognizer _updateIfNeeded]
  -[PUPhotoPinchGestureRecognizer .cxx_destruct]
  -[PUPhotoPinchGestureRecognizer initWithTarget:action:]
  -[PUPhotoPinchGestureRecognizer touchesBegan:withEvent:]
  -[PUPhotoPinchGestureRecognizer _setRotationFilter:]
  -[PUPhotoPinchGestureRecognizer touchesMoved:withEvent:]
  -[PUPhotoPinchGestureRecognizer _touchesNeedUpdate]
  -[PUPhotoPinchGestureRecognizer adjustedRotationInView:]
  -[PUPhotoPinchGestureRecognizer reset]
  -[PUPhotoPinchGestureRecognizer touchesCancelled:withEvent:]
  -[PUPhotoPinchGestureRecognizer _setTouchesNeedUpdate:]
  -[PUPhotoPinchGestureRecognizer adjustedRotationVelocityInView:]
  -[PUPhotoPinchGestureRecognizer adjustedScaleInView:]
  -[PUPhotoPinchGestureRecognizer adjustedTranslationInView:]
  -[PUPhotoPinchGestureRecognizer adjustedTranslationVelocityInView:]
  -[PUPhotoPinchGestureRecognizer _rotationFilter]
  -[PUPhotoPinchGestureRecognizer initialPinchRect]
  -[PUPhotoPinchGestureRecognizer rotationHysteresisDegrees]
  -[PUPhotoPinchGestureRecognizer adjustedInitialCenterInView:]
  -[PUPhotoPinchGestureRecognizer setInitialPinchRect:]
  -[PUPhotoPinchGestureRecognizer setRotationHysteresisDegrees:]
  -[PUPhotoPinchGestureRecognizer adjustedScaleVelocityInView:]
  -[PUPhotoPinchGestureRecognizer touchesEnded:withEvent:]


PUPhotoSelectionManager : NSObject <NSCopying>
 @property  long long options
 @property  <PHAssetCollectionDataSource> *dataSource
 @property  BOOL isAnyAssetSelected
 @property  NSSet *selectedAssets
 @property  NSOrderedSet *orderedSelectedAssets
 @property  NSDictionary *selectedAssetsByAssetCollection
 @property  NSArray *selectedAssetCollections
 @property  PXSelectionSnapshot *selectionSnapshot

  // instance methods
  -[PUPhotoSelectionManager unregisterChangeObserver:]
  -[PUPhotoSelectionManager selectionSnapshot]
  -[PUPhotoSelectionManager requestAssetsMediaTypeCount]
  -[PUPhotoSelectionManager setDataSource:]
  -[PUPhotoSelectionManager options]
  -[PUPhotoSelectionManager registerChangeObserver:]
  -[PUPhotoSelectionManager .cxx_destruct]
  -[PUPhotoSelectionManager initWithOptions:]
  -[PUPhotoSelectionManager dataSource]
  -[PUPhotoSelectionManager init]
  -[PUPhotoSelectionManager isAnyAssetSelectedInAssetCollection:]
  -[PUPhotoSelectionManager copyWithZone:]
  -[PUPhotoSelectionManager isAnyAssetSelected]
  -[PUPhotoSelectionManager selectedAssetsByAssetCollection]
  -[PUPhotoSelectionManager selectedAssetsWithAssetCollectionOrdering:]
  -[PUPhotoSelectionManager selectAllAssetsInAssetCollections:]
  -[PUPhotoSelectionManager selectedAssets]
  -[PUPhotoSelectionManager orderedSelectedAssets]
  -[PUPhotoSelectionManager areAllAssetsSelectedInAssetCollection:]
  -[PUPhotoSelectionManager selectAssetsAtIndexes:inAssetCollection:]
  -[PUPhotoSelectionManager selectAssetAtIndex:inAssetCollection:]
  -[PUPhotoSelectionManager _shouldUniqueAssets]
  -[PUPhotoSelectionManager _beginSelectionChange]
  -[PUPhotoSelectionManager _endSelectionChange]
  -[PUPhotoSelectionManager _selectionEntryForAssetCollection:createIfNeeded:]
  -[PUPhotoSelectionManager invalidateAllAssetIndexes]
  -[PUPhotoSelectionManager deselectAssetsAtIndexes:inAssetCollection:]
  -[PUPhotoSelectionManager handlePhotoLibraryChange:]
  -[PUPhotoSelectionManager deselectAssetAtIndex:inAssetCollection:]
  -[PUPhotoSelectionManager deselectAllAssetsInAssetCollections:]
  -[PUPhotoSelectionManager deselectAllAssets]
  -[PUPhotoSelectionManager isAssetAtIndexSelected:inAssetCollection:]
  -[PUPhotoSelectionManager isAnyAssetSelectedInAssetCollections:]
  -[PUPhotoSelectionManager areAllAssetsSelectedInAssetCollections:]
  -[PUPhotoSelectionManager selectedAssetIndexesWithAssetCollectionOrdering:]
  -[PUPhotoSelectionManager enumerateSelectedAssetsWithAssetCollectionOrdering:block:]
  -[PUPhotoSelectionManager selectedAssetCollections]
  -[PUPhotoSelectionManager localizedSelectionString]


PUPhotoSelectionEntry : NSObject <NSCopying>
 @property  PHAssetCollection *assetCollection
 @property  PHFetchResult *fetchResult
 @property  NSIndexSet *selectedIndexes
 @property  NSArray *selectedAssets

  // instance methods
  -[PUPhotoSelectionEntry .cxx_destruct]
  -[PUPhotoSelectionEntry fetchResult]
  -[PUPhotoSelectionEntry copyWithZone:]
  -[PUPhotoSelectionEntry assetCollection]
  -[PUPhotoSelectionEntry selectedAssets]
  -[PUPhotoSelectionEntry initWithAssetCollection:fetchResult:uniqueSelectedAssets:]
  -[PUPhotoSelectionEntry selectAssetsAtIndexes:]
  -[PUPhotoSelectionEntry invalidateAllAssetIndexes]
  -[PUPhotoSelectionEntry deselectAssetsAtIndexes:]
  -[PUPhotoSelectionEntry selectedIndexes]
  -[PUPhotoSelectionEntry isIndexSelected:]
  -[PUPhotoSelectionEntry enumerateSelectedAssetsWithBlock:]
  -[PUPhotoSelectionEntry handlePhotoLibraryChange:]
  -[PUPhotoSelectionEntry _ensureValidAssetIndexes]
  -[PUPhotoSelectionEntry setSelectedAssetsSet:]


PUPhotoSharingManager : NSObject <PLPublishingAgentDelegate>
 @property  BOOL remaking
 @property  PLProgressView *publishingProgressView

  // class methods
  +[PUPhotoSharingManager sharedInstance]

  // instance methods
  -[PUPhotoSharingManager .cxx_destruct]
  -[PUPhotoSharingManager dealloc]
  -[PUPhotoSharingManager prepareForDismissingForced:]
  -[PUPhotoSharingManager publishingProgressView]
  -[PUPhotoSharingManager cancelPublishing]
  -[PUPhotoSharingManager setRemaking:]
  -[PUPhotoSharingManager _setDelaysAppSuspend:]
  -[PUPhotoSharingManager _setFlag:forReferenceCounter:performIfChanged:]
  -[PUPhotoSharingManager _currentPublishingAgent]
  -[PUPhotoSharingManager _removePublishingAgent:]
  -[PUPhotoSharingManager publishingAgentDidEndRemaking:didSucceed:]
  -[PUPhotoSharingManager isRemaking]
  -[PUPhotoSharingManager _updatePublishingProgressView:]
  -[PUPhotoSharingManager _cleanUpPublishingProgressView]
  -[PUPhotoSharingManager _schedulePublishingProgressViewUpdate]
  -[PUPhotoSharingManager _setNetworkPromptShowing:]
  -[PUPhotoSharingManager _addPublishingAgentIfNeeded:]
  -[PUPhotoSharingManager publishingAgentWillBeDisplayed:]
  -[PUPhotoSharingManager publishingAgentDoneButtonClicked:]
  -[PUPhotoSharingManager publishingAgentCancelButtonClicked:]
  -[PUPhotoSharingManager publishingAgentDidBeginPublishing:]
  -[PUPhotoSharingManager publishingAgentDidEndPublishing:error:]
  -[PUPhotoSharingManager publishingAgentDidStartRemaking:]


PUPhotoStreamAlbumLargeTextTableViewCell : PUPhotoStreamAlbumTableViewCell
 @property  UILabel *titleLabel
 @property  UILabel *detailLabel
 @property  UIImageView *albumImageView
 @property  NSArray *currentConstraints

  // instance methods
  -[PUPhotoStreamAlbumLargeTextTableViewCell titleLabel]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setText:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell initWithCoder:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell traitCollectionDidChange:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell detailText]
  -[PUPhotoStreamAlbumLargeTextTableViewCell updateConstraints]
  -[PUPhotoStreamAlbumLargeTextTableViewCell .cxx_destruct]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setTitleLabel:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setDetailText:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell init]
  -[PUPhotoStreamAlbumLargeTextTableViewCell currentConstraints]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setCurrentConstraints:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setDetailLabel:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell initWithFrame:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell initWithStyle:reuseIdentifier:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell didMoveToWindow]
  -[PUPhotoStreamAlbumLargeTextTableViewCell detailLabel]
  -[PUPhotoStreamAlbumLargeTextTableViewCell text]
  -[PUPhotoStreamAlbumLargeTextTableViewCell _commonPhotoStreamAlbumLargeTextTableViewCellInit]
  -[PUPhotoStreamAlbumLargeTextTableViewCell setAlbumImageView:]
  -[PUPhotoStreamAlbumLargeTextTableViewCell albumImageView]


PUPhotoStreamAlbumTableViewCell : UITableViewCell
 @property  NSString *text
 @property  NSString *detailText

  // class methods
  +[PUPhotoStreamAlbumTableViewCell cellHeight]
  +[PUPhotoStreamAlbumTableViewCell labelHorizontalInset]
  +[PUPhotoStreamAlbumTableViewCell labelXOriginForContentWidth:labelWidth:isRTL:]

  // instance methods
  -[PUPhotoStreamAlbumTableViewCell setText:]
  -[PUPhotoStreamAlbumTableViewCell detailText]
  -[PUPhotoStreamAlbumTableViewCell layoutSubviews]
  -[PUPhotoStreamAlbumTableViewCell setDetailText:]
  -[PUPhotoStreamAlbumTableViewCell text]


PUPhotoStreamAlbumsTableViewController : UITableViewController
 @property  BOOL allowsMutlipleSelection
 @property  <PUPhotoStreamsAlbumsTableViewControllerDelegate> *pickerDelegate

  // class methods
  +[PUPhotoStreamAlbumsTableViewController albumListForContentMode:]
  +[PUPhotoStreamAlbumsTableViewController _albumsComparator]

  // instance methods
  -[PUPhotoStreamAlbumsTableViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[PUPhotoStreamAlbumsTableViewController traitCollectionDidChange:]
  -[PUPhotoStreamAlbumsTableViewController numberOfSectionsInTableView:]
  -[PUPhotoStreamAlbumsTableViewController contentSizeForViewInPopover]
  -[PUPhotoStreamAlbumsTableViewController tableView:numberOfRowsInSection:]
  -[PUPhotoStreamAlbumsTableViewController tableView:heightForRowAtIndexPath:]
  -[PUPhotoStreamAlbumsTableViewController .cxx_destruct]
  -[PUPhotoStreamAlbumsTableViewController tableView:didSelectRowAtIndexPath:]
  -[PUPhotoStreamAlbumsTableViewController viewDidLoad]
  -[PUPhotoStreamAlbumsTableViewController tableView:cellForRowAtIndexPath:]
  -[PUPhotoStreamAlbumsTableViewController viewDidAppear:]
  -[PUPhotoStreamAlbumsTableViewController initWithStyle:]
  -[PUPhotoStreamAlbumsTableViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[PUPhotoStreamAlbumsTableViewController didReceiveMemoryWarning]
  -[PUPhotoStreamAlbumsTableViewController posterImageForAlbum:imageView:]
  -[PUPhotoStreamAlbumsTableViewController pickerDelegate]
  -[PUPhotoStreamAlbumsTableViewController addSelectedCloudGuid:]
  -[PUPhotoStreamAlbumsTableViewController reloadActions]
  -[PUPhotoStreamAlbumsTableViewController allowsMutlipleSelection]
  -[PUPhotoStreamAlbumsTableViewController setAllowsMutlipleSelection:]
  -[PUPhotoStreamAlbumsTableViewController setPickerDelegate:]


PUPhotoStreamComposeServiceViewController : PXPhotoStreamComposeServiceViewController <PUPhotoStreamsAlbumsTableViewControllerDelegate, PUPhotoStreamCreateTitleDelegate, PUCloudSharedCreateAlbumViewControllerDelegate, SLSheetViewHostProtocol>
 @property  NSString *startingContentText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoStreamComposeServiceViewController send]
  -[PUPhotoStreamComposeServiceViewController .cxx_destruct]
  -[PUPhotoStreamComposeServiceViewController viewDidLoad]
  -[PUPhotoStreamComposeServiceViewController failWithError:]
  -[PUPhotoStreamComposeServiceViewController setDelegate:]
  -[PUPhotoStreamComposeServiceViewController initWithNibName:bundle:]
  -[PUPhotoStreamComposeServiceViewController title]
  -[PUPhotoStreamComposeServiceViewController initWithStartingContentText:]
  -[PUPhotoStreamComposeServiceViewController setAssetsToShare:]
  -[PUPhotoStreamComposeServiceViewController setSourcesToShare:]
  -[PUPhotoStreamComposeServiceViewController albumStreamingCreateViewController:didSucceed:]
  -[PUPhotoStreamComposeServiceViewController controllerWillCreateNewAlbum:]
  -[PUPhotoStreamComposeServiceViewController controller:didSelectAlbum:]
  -[PUPhotoStreamComposeServiceViewController startingContentText]
  -[PUPhotoStreamComposeServiceViewController _pushTitleController]
  -[PUPhotoStreamComposeServiceViewController _imageFromStreamShareSource:]
  -[PUPhotoStreamComposeServiceViewController albumListAction]
  -[PUPhotoStreamComposeServiceViewController titleController:didSetTitle:]
  -[PUPhotoStreamComposeServiceViewController titleControllerDidCancel:]
  -[PUPhotoStreamComposeServiceViewController userDidCancel]
  -[PUPhotoStreamComposeServiceViewController userDidPost]
  -[PUPhotoStreamComposeServiceViewController sheetActions]
  -[PUPhotoStreamComposeServiceViewController serviceIconImage]
  -[PUPhotoStreamComposeServiceViewController shouldShowNetworkActivityIndicator:]
  -[PUPhotoStreamComposeServiceViewController isContentValid]


PUBadgeTransitionInfo : NSObject
 @property  UIView *snapshotView
 @property  {UIOffset=dd} badgesOffset
 @property  unsigned long badgesCorner
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[PUBadgeTransitionInfo snapshotView]
  -[PUBadgeTransitionInfo .cxx_destruct]
  -[PUBadgeTransitionInfo setFrame:]
  -[PUBadgeTransitionInfo frame]
  -[PUBadgeTransitionInfo setSnapshotView:]
  -[PUBadgeTransitionInfo badgesCorner]
  -[PUBadgeTransitionInfo badgesOffset]
  -[PUBadgeTransitionInfo setBadgesOffset:]
  -[PUBadgeTransitionInfo setBadgesCorner:]


PUPhotoStreamCreateTitleViewController : UIViewController <UITextViewDelegate>
 @property  <PUPhotoStreamCreateTitleDelegate> *titleDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoStreamCreateTitleViewController _setTitle:]
  -[PUPhotoStreamCreateTitleViewController traitCollectionDidChange:]
  -[PUPhotoStreamCreateTitleViewController contentSizeForViewInPopover]
  -[PUPhotoStreamCreateTitleViewController .cxx_destruct]
  -[PUPhotoStreamCreateTitleViewController viewDidLoad]
  -[PUPhotoStreamCreateTitleViewController viewDidAppear:]
  -[PUPhotoStreamCreateTitleViewController initWithNibName:bundle:]
  -[PUPhotoStreamCreateTitleViewController navigationItem]
  -[PUPhotoStreamCreateTitleViewController viewWillAppear:]
  -[PUPhotoStreamCreateTitleViewController dealloc]
  -[PUPhotoStreamCreateTitleViewController loadView]
  -[PUPhotoStreamCreateTitleViewController textViewDidChange:]
  -[PUPhotoStreamCreateTitleViewController setTitleDelegate:]
  -[PUPhotoStreamCreateTitleViewController contentSizeChanged]
  -[PUPhotoStreamCreateTitleViewController _addConstraintsForTraitCollection:]
  -[PUPhotoStreamCreateTitleViewController _cancelPost:]
  -[PUPhotoStreamCreateTitleViewController titleDelegate]


PUPhotoStreamRecipientViewController : UIViewController <UIPopoverPresentationControllerDelegate, IDSBatchIDQueryControllerDelegate, CNContactPickerDelegate, CNAutocompleteResultsTableViewControllerDelegate, CNComposeRecipientTextViewDelegate, CNAutocompleteSearchConsumer>
 @property  CNContactStore *contactStore
 @property  id delegate
 @property  NSArray *recipients
 @property  double bottomTableOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoStreamRecipientViewController recordRecentInvitationRecipient:displayName:date:]

  // instance methods
  -[PUPhotoStreamRecipientViewController contactStore]
  -[PUPhotoStreamRecipientViewController viewWillLayoutSubviews]
  -[PUPhotoStreamRecipientViewController prepareForPopoverPresentation:]
  -[PUPhotoStreamRecipientViewController batchQueryController:updatedDestinationsStatus:onService:error:]
  -[PUPhotoStreamRecipientViewController .cxx_destruct]
  -[PUPhotoStreamRecipientViewController _searchManager]
  -[PUPhotoStreamRecipientViewController viewDidLoad]
  -[PUPhotoStreamRecipientViewController makeRecipientViewFirstResponder]
  -[PUPhotoStreamRecipientViewController setBottomTableOffset:]
  -[PUPhotoStreamRecipientViewController makeRecipientViewResignFirstResponder]
  -[PUPhotoStreamRecipientViewController popoverPresentationControllerDidDismissPopover:]
  -[PUPhotoStreamRecipientViewController setDelegate:]
  -[PUPhotoStreamRecipientViewController viewDidAppear:]
  -[PUPhotoStreamRecipientViewController initWithNibName:bundle:]
  -[PUPhotoStreamRecipientViewController recipients]
  -[PUPhotoStreamRecipientViewController composeRecipientView:didFinishEnteringAddress:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:composeRecipientForAddress:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:didAddRecipient:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:didRemoveRecipient:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:textDidChange:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:didChangeSize:]
  -[PUPhotoStreamRecipientViewController composeRecipientViewRequestAddRecipient:]
  -[PUPhotoStreamRecipientViewController composeRecipientViewDidFinishPickingRecipient:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:showPersonCardForAtom:]
  -[PUPhotoStreamRecipientViewController composeRecipientView:disambiguateRecipientForAtom:]
  -[PUPhotoStreamRecipientViewController autocompleteResultsController:tintColorForRecipient:completion:]
  -[PUPhotoStreamRecipientViewController viewWillAppear:]
  -[PUPhotoStreamRecipientViewController consumeAutocompleteSearchResults:taskID:]
  -[PUPhotoStreamRecipientViewController delegate]
  -[PUPhotoStreamRecipientViewController finishedSearchingForAutocompleteResults]
  -[PUPhotoStreamRecipientViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUPhotoStreamRecipientViewController autocompleteResultsController:didSelectRecipient:atIndex:]
  -[PUPhotoStreamRecipientViewController dealloc]
  -[PUPhotoStreamRecipientViewController autocompleteResultsController:didRequestInfoAboutRecipient:]
  -[PUPhotoStreamRecipientViewController contactPicker:didSelectContact:]
  -[PUPhotoStreamRecipientViewController contactPicker:didSelectContactProperty:]
  -[PUPhotoStreamRecipientViewController contactPickerDidCancel:]
  -[PUPhotoStreamRecipientViewController _searchForRecipientWithText:]
  -[PUPhotoStreamRecipientViewController _dismissContactPicker]
  -[PUPhotoStreamRecipientViewController _setSearchResults:]
  -[PUPhotoStreamRecipientViewController _selectedNormalizedPhoneForRecipient:]
  -[PUPhotoStreamRecipientViewController _addRecipientForContact:address:kind:]
  -[PUPhotoStreamRecipientViewController bottomTableOffset]


PUBackgroundColorView : UIView
  // instance methods
  -[PUBackgroundColorView setOpaque:]
  -[PUBackgroundColorView _puSetBackgroundColor:]
  -[PUBackgroundColorView setBackgroundColor:]


PUAvalancheStackView : UIView
 @property  CALayer *imageLayer
 @property  CALayer *stackLayer0
 @property  CALayer *stackLayer1
 @property  long long contentMode

  // instance methods
  -[PUAvalancheStackView .cxx_destruct]
  -[PUAvalancheStackView layoutSubviews]
  -[PUAvalancheStackView init]
  -[PUAvalancheStackView contentMode]
  -[PUAvalancheStackView setImage:]
  -[PUAvalancheStackView setContentMode:]
  -[PUAvalancheStackView _imageContentFrame]
  -[PUAvalancheStackView imageLayer]
  -[PUAvalancheStackView setImageLayer:]
  -[PUAvalancheStackView stackLayer0]
  -[PUAvalancheStackView setStackLayer0:]
  -[PUAvalancheStackView stackLayer1]
  -[PUAvalancheStackView setStackLayer1:]


PUPhotoViewContentHelper : NSObject <PHLivePhotoViewDelegate>
 @property  UIImageView *photoImageView
 @property  UIView *darkContentOverlay
 @property  UIImageView *_crossfadeImageView
 @property  PUAvalancheStackView *avalancheStackView
 @property  PHLivePhotoView *livePhotoView
 @property  PXRoundedCornerOverlayView *roundedCornerOverlayView
 @property  UIView *_highlightOverlayView
 @property  PXUIAssetBadgeView *_badgeView
 @property  PXTitleSubtitleUILabel *_titleSubtitleLabel
 @property  ISWrappedAVAudioSession *_audioSession
 @property  UIView *contentView
 @property  long long fillMode
 @property  {CGAffineTransform=dddddd} imageTransform
 @property  {CGSize=dd} photoSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageContentFrame
 @property  UIImage *photoImage
 @property  UIImage *placeHolderImage
 @property  UIView *transitionSnapshotView
 @property  PUPhotoDecoration *photoDecoration
 @property  BOOL imageViewEdgeAntialiasingEnabled
 @property  BOOL avoidsImageViewIfPossible
 @property  BOOL flattensBadgeView
 @property  BOOL avoidsPhotoDecoration
 @property  UIView *badgeContainerView
 @property  BOOL providesVisualFeedbackOnPress
 @property  BOOL animatingRoundedCorners
 @property  double cornerRadius
 @property  BOOL continuousCorners
 @property  unsigned long cornersToRound
 @property  BOOL useOverlay
 @property  UIColor *overlayColor
 @property  double contentAlpha
 @property  double darkContentOverlayAlpha
 @property  BOOL highlighted
 @property  UIColor *backgroundColor
 @property  BOOL livePhotoHidden
 @property  <PUPhotoViewContentHelperDelegate> *delegate
 @property  PHLivePhoto *livePhoto
 @property  BOOL shouldPrepareForPlayback
 @property  AVAsset *loopingVideoAsset
 @property  PHAnimatedImage *animatedImage
 @property  BOOL loopingPlaybackAllowed
 @property  BOOL showsLivePhoto
 @property  BOOL needsAvalancheStack
 @property  ^{CGColor=} avalancheStackBackgroundColor
 @property  {PXAssetBadgeInfo=Qdq} badgeInfo
 @property  long long badgeStyle
 @property  {CGSize=dd} customPaddingForBadgeElements
 @property  BOOL textBannerVisible
 @property  PXTextBannerView *textBannerView
 @property  PXFeatureSpec *featureSpec
 @property  PXCollectionTileLayoutTemplate *collectionTileLayoutTemplate
 @property  NSString *titleFontName
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPhotoViewContentHelper sizeThatFits:imageSize:fillMode:]
  +[PUPhotoViewContentHelper _imageContentFrameForBounds:imageSize:fillMode:]

  // instance methods
  -[PUPhotoViewContentHelper setHighlighted:]
  -[PUPhotoViewContentHelper continuousCorners]
  -[PUPhotoViewContentHelper badgeStyle]
  -[PUPhotoViewContentHelper _updateSubviewOrdering]
  -[PUPhotoViewContentHelper imageTransform]
  -[PUPhotoViewContentHelper initWithContentView:]
  -[PUPhotoViewContentHelper setImageTransform:]
  -[PUPhotoViewContentHelper photoSize]
  -[PUPhotoViewContentHelper photoDecorationBorderViewFrameForImageContentFrame:]
  -[PUPhotoViewContentHelper overlayColor]
  -[PUPhotoViewContentHelper photoDecoration]
  -[PUPhotoViewContentHelper setPhotoSize:]
  -[PUPhotoViewContentHelper animateCrossfadeToImage:]
  -[PUPhotoViewContentHelper setContinuousCorners:]
  -[PUPhotoViewContentHelper contentAlpha]
  -[PUPhotoViewContentHelper _updateHighlight]
  -[PUPhotoViewContentHelper setContentAlpha:]
  -[PUPhotoViewContentHelper livePhoto]
  -[PUPhotoViewContentHelper stopPlayback]
  -[PUPhotoViewContentHelper setLivePhoto:]
  -[PUPhotoViewContentHelper setFillMode:]
  -[PUPhotoViewContentHelper setLivePhotoView:]
  -[PUPhotoViewContentHelper transitionSnapshotView]
  -[PUPhotoViewContentHelper startPlaybackWithStyle:]
  -[PUPhotoViewContentHelper setFlattensBadgeView:]
  -[PUPhotoViewContentHelper setTitleFontName:]
  -[PUPhotoViewContentHelper setCornerRadius:cornersToRound:useOverlay:overlayColor:continuousCorners:]
  -[PUPhotoViewContentHelper imageContentFrameForBounds:]
  -[PUPhotoViewContentHelper setPhotoDecoration:]
  -[PUPhotoViewContentHelper setCornersToRound:]
  -[PUPhotoViewContentHelper _setHighlightOverlayView:]
  -[PUPhotoViewContentHelper customPaddingForBadgeElements]
  -[PUPhotoViewContentHelper _updateIfNeeded]
  -[PUPhotoViewContentHelper setTitle:]
  -[PUPhotoViewContentHelper backgroundColor]
  -[PUPhotoViewContentHelper loopingVideoAsset]
  -[PUPhotoViewContentHelper _updatePhotoDecoration]
  -[PUPhotoViewContentHelper _titleSubtitleLabel]
  -[PUPhotoViewContentHelper cornersToRound]
  -[PUPhotoViewContentHelper avoidsImageViewIfPossible]
  -[PUPhotoViewContentHelper setAvalancheStackBackgroundColor:]
  -[PUPhotoViewContentHelper _setTitleSubtitleUILabel:]
  -[PUPhotoViewContentHelper _highlightOverlayView]
  -[PUPhotoViewContentHelper .cxx_destruct]
  -[PUPhotoViewContentHelper _updateBadgeView]
  -[PUPhotoViewContentHelper _updateImageView]
  -[PUPhotoViewContentHelper isTextBannerVisible]
  -[PUPhotoViewContentHelper featureSpec]
  -[PUPhotoViewContentHelper _startPlaybackWhenLivePhotoAvailableWithStyle:]
  -[PUPhotoViewContentHelper setShowsLivePhoto:]
  -[PUPhotoViewContentHelper titleFontName]
  -[PUPhotoViewContentHelper setTextBannerVisible:]
  -[PUPhotoViewContentHelper contentView]
  -[PUPhotoViewContentHelper setSubtitle:]
  -[PUPhotoViewContentHelper placeHolderImage]
  -[PUPhotoViewContentHelper _invalidateLoopingVideoView]
  -[PUPhotoViewContentHelper setDelegate:]
  -[PUPhotoViewContentHelper isLivePhotoHidden]
  -[PUPhotoViewContentHelper setBadgeInfo:]
  -[PUPhotoViewContentHelper badgeInfo]
  -[PUPhotoViewContentHelper setShouldPrepareForPlayback:]
  -[PUPhotoViewContentHelper _removeAvalancheStackViewIfNecessary]
  -[PUPhotoViewContentHelper avalancheStackBackgroundColor]
  -[PUPhotoViewContentHelper setBadgeStyle:]
  -[PUPhotoViewContentHelper setPhotoImageView:]
  -[PUPhotoViewContentHelper _updateAnimatedImageViewIfNeeded]
  -[PUPhotoViewContentHelper init]
  -[PUPhotoViewContentHelper _updateTextBannerView]
  -[PUPhotoViewContentHelper contentViewDynamicUserInterfaceTraitDidChange]
  -[PUPhotoViewContentHelper isAnimatingRoundedCorners]
  -[PUPhotoViewContentHelper badgeContainerView]
  -[PUPhotoViewContentHelper isHighlighted]
  -[PUPhotoViewContentHelper setDarkContentOverlay:]
  -[PUPhotoViewContentHelper isImageViewEdgeAntialiasingEnabled]
  -[PUPhotoViewContentHelper setAvalancheStackView:]
  -[PUPhotoViewContentHelper setCornerRadius:]
  -[PUPhotoViewContentHelper setRoundedCornerOverlayView:]
  -[PUPhotoViewContentHelper _needsUpdate]
  -[PUPhotoViewContentHelper _invalidateTitleSubtitleUILabel]
  -[PUPhotoViewContentHelper _updateTitleSubtitleUILabelIfNeeded]
  -[PUPhotoViewContentHelper layoutSubviewsOfContentView]
  -[PUPhotoViewContentHelper avoidsPhotoDecoration]
  -[PUPhotoViewContentHelper setImageViewEdgeAntialiasingEnabled:]
  -[PUPhotoViewContentHelper setLoopingPlaybackAllowed:]
  -[PUPhotoViewContentHelper subtitle]
  -[PUPhotoViewContentHelper _setBadgeView:]
  -[PUPhotoViewContentHelper _updateLivePhotoViewVisibility]
  -[PUPhotoViewContentHelper _updateLayerBackgroundColorIfNeeded]
  -[PUPhotoViewContentHelper _updateLayerCornerRadius]
  -[PUPhotoViewContentHelper setBackgroundColor:]
  -[PUPhotoViewContentHelper avalancheStackView]
  -[PUPhotoViewContentHelper photoImageView]
  -[PUPhotoViewContentHelper setFeatureSpec:]
  -[PUPhotoViewContentHelper _updateRoundedCornersOverlayView]
  -[PUPhotoViewContentHelper setDarkContentOverlayAlpha:]
  -[PUPhotoViewContentHelper title]
  -[PUPhotoViewContentHelper flattensBadgeView]
  -[PUPhotoViewContentHelper setLoopingVideoAsset:]
  -[PUPhotoViewContentHelper _updateContentViewClipsToBounds]
  -[PUPhotoViewContentHelper setUseOverlay:]
  -[PUPhotoViewContentHelper _invalidateBadgeView]
  -[PUPhotoViewContentHelper fillMode]
  -[PUPhotoViewContentHelper _invalidateAnimatedImageView]
  -[PUPhotoViewContentHelper cornerRadius]
  -[PUPhotoViewContentHelper darkContentOverlayAlpha]
  -[PUPhotoViewContentHelper setAvoidsImageViewIfPossible:]
  -[PUPhotoViewContentHelper _addAvalancheStackViewIfNecessary]
  -[PUPhotoViewContentHelper delegate]
  -[PUPhotoViewContentHelper livePhotoView:willBeginPlaybackWithStyle:]
  -[PUPhotoViewContentHelper livePhotoView]
  -[PUPhotoViewContentHelper needsAvalancheStack]
  -[PUPhotoViewContentHelper setNeedsAvalancheStack:]
  -[PUPhotoViewContentHelper roundedCornerOverlayView]
  -[PUPhotoViewContentHelper _updateLivePhotoView]
  -[PUPhotoViewContentHelper _updateLivePhotoViewPreparing]
  -[PUPhotoViewContentHelper set_crossfadeImageView:]
  -[PUPhotoViewContentHelper _badgeView]
  -[PUPhotoViewContentHelper setAnimatingRoundedCorners:]
  -[PUPhotoViewContentHelper setLivePhotoHidden:]
  -[PUPhotoViewContentHelper setPhotoImage:]
  -[PUPhotoViewContentHelper _audioSession]
  -[PUPhotoViewContentHelper darkContentOverlay]
  -[PUPhotoViewContentHelper setCollectionTileLayoutTemplate:]
  -[PUPhotoViewContentHelper animatedImage]
  -[PUPhotoViewContentHelper useOverlay]
  -[PUPhotoViewContentHelper providesVisualFeedbackOnPress]
  -[PUPhotoViewContentHelper setCustomPaddingForBadgeElements:]
  -[PUPhotoViewContentHelper _setAudioSession:]
  -[PUPhotoViewContentHelper setOverlayColor:]
  -[PUPhotoViewContentHelper updatePhotoImageWithoutReconfiguring:]
  -[PUPhotoViewContentHelper setPlaceHolderImage:]
  -[PUPhotoViewContentHelper contentViewSizeThatFits:]
  -[PUPhotoViewContentHelper setTransitionSnapshotView:]
  -[PUPhotoViewContentHelper shouldPrepareForPlayback]
  -[PUPhotoViewContentHelper showsLivePhoto]
  -[PUPhotoViewContentHelper _updateLoopingVideoViewIfNeeded]
  -[PUPhotoViewContentHelper loopingPlaybackAllowed]
  -[PUPhotoViewContentHelper setAvoidsPhotoDecoration:]
  -[PUPhotoViewContentHelper _removePhotoImageViewIfNecessary]
  -[PUPhotoViewContentHelper textBannerView]
  -[PUPhotoViewContentHelper collectionTileLayoutTemplate]
  -[PUPhotoViewContentHelper imageContentFrame]
  -[PUPhotoViewContentHelper setAnimatedImage:]
  -[PUPhotoViewContentHelper _crossfadeImageView]
  -[PUPhotoViewContentHelper photoImage]


PUPhotoView : UIView
 @property  PUPhotoViewContentHelper *contentHelper

  // instance methods
  -[PUPhotoView traitCollectionDidChange:]
  -[PUPhotoView .cxx_destruct]
  -[PUPhotoView layoutSubviews]
  -[PUPhotoView sizeThatFits:]
  -[PUPhotoView contentHelper]
  -[PUPhotoView initWithFrame:]


PUPhotosAlbumViewController : PUPhotosGridViewController <PUSectionedGridLayoutDelegate, PUPhotosSectionHeaderViewDelegate, PXEditableNavigationTitleViewDelegate>
 @property  BOOL _isCountingAssetTypes
 @property  BOOL _hasAccurateCounts
 @property  PUPhotosAlbumViewControllerSpec *_albumSpec
 @property  PXEditableNavigationTitleView *editableTitleView
 @property  BOOL shouldShowSectionHeaders
 @property  NSString *globalFooterSubtitle
 @property  PHAssetCollection *assetCollection
 @property  PHFetchResult *assetCollectionAssets
 @property  NSObject<PLAlbumProtocol> *album
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotosAlbumViewController routingOptionsForDestination:]
  -[PUPhotosAlbumViewController setSessionInfo:]
  -[PUPhotosAlbumViewController initWithSpec:]
  -[PUPhotosAlbumViewController navigateToDestination:options:completionHandler:]
  -[PUPhotosAlbumViewController _collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[PUPhotosAlbumViewController album]
  -[PUPhotosAlbumViewController _collectionView:performDropWithCoordinator:]
  -[PUPhotosAlbumViewController setEditing:animated:]
  -[PUPhotosAlbumViewController px_navigationDestination]
  -[PUPhotosAlbumViewController _setNeedsUpdate]
  -[PUPhotosAlbumViewController .cxx_destruct]
  -[PUPhotosAlbumViewController viewDidLoad]
  -[PUPhotosAlbumViewController isCameraRoll]
  -[PUPhotosAlbumViewController viewDidAppear:]
  -[PUPhotosAlbumViewController setAlbum:]
  -[PUPhotosAlbumViewController oneUpPresentationOrigin]
  -[PUPhotosAlbumViewController shouldShowSectionHeaders]
  -[PUPhotosAlbumViewController viewWillDisappear:]
  -[PUPhotosAlbumViewController viewWillAppear:]
  -[PUPhotosAlbumViewController didTapHeaderView:]
  -[PUPhotosAlbumViewController setAssetCollection:]
  -[PUPhotosAlbumViewController dropInteraction:performDrop:]
  -[PUPhotosAlbumViewController assetCollectionAssets]
  -[PUPhotosAlbumViewController canDragIn]
  -[PUPhotosAlbumViewController setAssetCollection:fetchResultContainingAssetCollection:filterPredicate:]
  -[PUPhotosAlbumViewController photosDataSource:didReceivePhotoLibraryChange:]
  -[PUPhotosAlbumViewController assetCollection]
  -[PUPhotosAlbumViewController prepareForDismissingForced:]
  -[PUPhotosAlbumViewController updateTitle]
  -[PUPhotosAlbumViewController handleTransitionFade:animate:]
  -[PUPhotosAlbumViewController canDragOut]
  -[PUPhotosAlbumViewController updateSpec]
  -[PUPhotosAlbumViewController _ensureEditableTitleView]
  -[PUPhotosAlbumViewController editableTitleView]
  -[PUPhotosAlbumViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUPhotosAlbumViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUPhotosAlbumViewController sectionedGridLayout:accessibilitySectionHeaderHeightForVisualSection:]
  -[PUPhotosAlbumViewController editableNavigationTitleView:validateNewText:]
  -[PUPhotosAlbumViewController editableNavigationTitleViewDidEndEditing:]
  -[PUPhotosAlbumViewController setAlbum:existingFetchResult:]
  -[PUPhotosAlbumViewController handleAddFromAction]
  -[PUPhotosAlbumViewController handleAddToAlbum:pickedAssets:]
  -[PUPhotosAlbumViewController wantsGlobalFooter]
  -[PUPhotosAlbumViewController globalFooterSubtitle]
  -[PUPhotosAlbumViewController _globalHeaderTitle]
  -[PUPhotosAlbumViewController configureGlobalHeaderView:]
  -[PUPhotosAlbumViewController globalHeaderHeight]
  -[PUPhotosAlbumViewController newGridLayout]
  -[PUPhotosAlbumViewController cellFillMode]
  -[PUPhotosAlbumViewController updateLayoutMetrics]
  -[PUPhotosAlbumViewController initWithAlbumSpec:]
  -[PUPhotosAlbumViewController _setAlbumSpec:]
  -[PUPhotosAlbumViewController _invalideSectionHeaders]
  -[PUPhotosAlbumViewController _updateSectionHeadersIfNeeded]
  -[PUPhotosAlbumViewController filterPredicateForAlbum:]
  -[PUPhotosAlbumViewController setAssetCollection:fetchResultContainingAssetCollection:filterPredicate:existingFetchResults:]
  -[PUPhotosAlbumViewController isTrashBinViewController]
  -[PUPhotosAlbumViewController localizedTitleForAssets:]
  -[PUPhotosAlbumViewController _hasAccurateCounts]
  -[PUPhotosAlbumViewController _albumSpec]
  -[PUPhotosAlbumViewController _getDataForVisualSection:hasActionButton:locations:title:startDate:endDate:]
  -[PUPhotosAlbumViewController contentOffsetForPreheating]
  -[PUPhotosAlbumViewController userEventSourceType]
  -[PUPhotosAlbumViewController additionalOneUpViewControllerOptions]
  -[PUPhotosAlbumViewController _countAssetTypesIfNeeded]
  -[PUPhotosAlbumViewController _isCountingAssetTypes]
  -[PUPhotosAlbumViewController _setHasAccurateCounts:]
  -[PUPhotosAlbumViewController _setCountingAssetTypes:]
  -[PUPhotosAlbumViewController _performMoveDropWithCoordinator:]
  -[PUPhotosAlbumViewController _performAddDropWithSession:]
  -[PUPhotosAlbumViewController sessionInfoForTransferredAssets:]
  -[PUPhotosAlbumViewController canBeginStackCollapseTransition]
  -[PUPhotosAlbumViewController configureGlobalFooterView:]
  -[PUPhotosAlbumViewController allowSelectAllButton]
  -[PUPhotosAlbumViewController setupScrubber]
  -[PUPhotosAlbumViewController canHandleDropSession:]


PUPhotosAlbumViewControllerSpec : PULegacyViewControllerSpec
 @property  BOOL shouldUseAspectItems
 @property  double contentCornerRadius
 @property  {UIEdgeInsets=dddd} fullMomentsLevelSectionHeaderHighlightInset
 @property  long long fullMomentsSectionHeaderStyle

  // class methods
  +[PUPhotosAlbumViewControllerSpec padSpec]
  +[PUPhotosAlbumViewControllerSpec phoneSpec]

  // instance methods
  -[PUPhotosAlbumViewControllerSpec fullMomentsLevelSectionHeaderHighlightInset]
  -[PUPhotosAlbumViewControllerSpec contentCornerRadius]
  -[PUPhotosAlbumViewControllerSpec gridSpec]
  -[PUPhotosAlbumViewControllerSpec fullMomentsSectionHeaderStyle]
  -[PUPhotosAlbumViewControllerSpec cellFillMode]
  -[PUPhotosAlbumViewControllerSpec configureCollectionViewGridLayout:]
  -[PUPhotosAlbumViewControllerSpec shouldUseAspectItems]


PUPhotosAlbumViewControllerPhoneSpec : PUPhotosAlbumViewControllerSpec
  // instance methods
  -[PUPhotosAlbumViewControllerPhoneSpec gridSpec]
  -[PUPhotosAlbumViewControllerPhoneSpec fullMomentsSectionHeaderStyle]


PUPhotosAlbumViewControllerPadSpec : PUPhotosAlbumViewControllerSpec
  // instance methods
  -[PUPhotosAlbumViewControllerPadSpec contentCornerRadius]
  -[PUPhotosAlbumViewControllerPadSpec gridSpec]
  -[PUPhotosAlbumViewControllerPadSpec fullMomentsSectionHeaderStyle]


PUPhotosAlbumViewControllerPhoneImagePickerSpec : PUPhotosAlbumViewControllerPhoneSpec
  // instance methods
  -[PUPhotosAlbumViewControllerPhoneImagePickerSpec gridSpec]


PUPhotosAlbumViewControllerPadImagePickerSpec : PUPhotosAlbumViewControllerPadSpec
  // instance methods
  -[PUPhotosAlbumViewControllerPadImagePickerSpec gridSpec]


PUPhotosDetailsViewController : PXPhotosDetailsUIViewController <PUAssetViewModelChangeObserver, PUAccessoryContentViewController>
 @property  PUAssetViewModel *assetViewModel
 @property  double maxVisibleHeightInEdit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PUAccessoryContentViewControllerDelegate> *accessoryContentViewControllerDelegate
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  {CGSize=dd} minimumContentSize

  // instance methods
  -[PUPhotosDetailsViewController assetViewModel]
  -[PUPhotosDetailsViewController setEmpty:]
  -[PUPhotosDetailsViewController scrollViewControllerDidScroll:]
  -[PUPhotosDetailsViewController preferredContentSize]
  -[PUPhotosDetailsViewController contentInsets]
  -[PUPhotosDetailsViewController .cxx_destruct]
  -[PUPhotosDetailsViewController setContentEdgeInsets:]
  -[PUPhotosDetailsViewController viewModel:didChange:]
  -[PUPhotosDetailsViewController contentAreaContainsPoint:inCoordinateSpace:]
  -[PUPhotosDetailsViewController accessoryContentViewControllerDelegate]
  -[PUPhotosDetailsViewController setAccessoryContentViewControllerDelegate:]
  -[PUPhotosDetailsViewController initWithContext:options:]
  -[PUPhotosDetailsViewController scrollViewControllerContentBoundsDidChange:]
  -[PUPhotosDetailsViewController px_safeAreaInsets]
  -[PUPhotosDetailsViewController setMaxVisibleContentInsetsWhenInEdit:]
  -[PUPhotosDetailsViewController minimumContentSize]
  -[PUPhotosDetailsViewController setContentInsets:changeReason:]
  -[PUPhotosDetailsViewController contentBoundsInCoordinateSpace:]
  -[PUPhotosDetailsViewController _canShowWhileLocked]
  -[PUPhotosDetailsViewController initWithContext:configuration:assetViewModel:]
  -[PUPhotosDetailsViewController initWithContext:configuration:]
  -[PUPhotosDetailsViewController _configureVisualSearchTopResultItem]
  -[PUPhotosDetailsViewController _layoutContentUnavailableView]
  -[PUPhotosDetailsViewController occludedContentEdges]
  -[PUPhotosDetailsViewController setMaxVisibleHeightInEdit:]
  -[PUPhotosDetailsViewController editingDidChange:]
  -[PUPhotosDetailsViewController editorHeightDidChange]
  -[PUPhotosDetailsViewController visualSearchLookupWidgetDidTap]
  -[PUPhotosDetailsViewController maxVisibleHeightInEdit]


PUPhotosDiagnosticsAgent : NSObject <PLDiagnosticsAgent>
  // class methods
  +[PUPhotosDiagnosticsAgent localDiagnosticsAgent]

  // instance methods
  -[PUPhotosDiagnosticsAgent _currentAssetViewModelDescription]
  -[PUPhotosDiagnosticsAgent _viewControllerHierarchyDescription]
  -[PUPhotosDiagnosticsAgent _descriptionForAllUIState]
  -[PUPhotosDiagnosticsAgent __currentTimestamp]
  -[PUPhotosDiagnosticsAgent _currentAssetDetailedDescription]
  -[PUPhotosDiagnosticsAgent _currentAssetIdentifierUUID]
  -[PUPhotosDiagnosticsAgent _captureCurrentAssetResourcesToDirectory:withResultHandler:]
  -[PUPhotosDiagnosticsAgent captureDescriptionOfCloudPhotoLibraryWithResultHandler:]
  -[PUPhotosDiagnosticsAgent timelineForWidgetSize:jsonFormat:resultHandler:]
  -[PUPhotosDiagnosticsAgent captureDescriptionOfUIState:resultHandler:]
  -[PUPhotosDiagnosticsAgent captureDescriptionOfPhotoAnalysisWithResultHandler:]
  -[PUPhotosDiagnosticsAgent _selectedAssets]
  -[PUPhotosDiagnosticsAgent _windowRecursiveDescription]
  -[PUPhotosDiagnosticsAgent captureDescriptionOfStatisticsWithResultHandler:]
  -[PUPhotosDiagnosticsAgent _viewModelDescription]
  -[PUPhotosDiagnosticsAgent dumpState:toDirectoryURL:resultHandler:]
  -[PUPhotosDiagnosticsAgent _selectedAssetUUIDsDescription]
  -[PUPhotosDiagnosticsAgent _currentAssetMetadata]
  -[PUPhotosDiagnosticsAgent _selectedAssetIdentifiersDescription]
  -[PUPhotosDiagnosticsAgent _currentAsset]
  -[PUPhotosDiagnosticsAgent _currentAssetIdentifierDescription]
  -[PUPhotosDiagnosticsAgent _descriptionOfUIState:]


PUPhotosGridBarsHelper : NSObject <PUPhotoSelectionManagerChangeObserver>
 @property  NSString *title
 @property  NSString *prompt
 @property  BOOL shouldHideBackButton
 @property  NSArray *leftBarButtonItems
 @property  NSArray *rightBarButtonItems
 @property  PUPhotoSelectionManager *_photoSelectionManager
 @property  BOOL _shouldUpdateBarItemsLazily
 @property  BOOL _updatingItemsWithCount
 @property  BOOL _shouldUpdateItemsWithCount
 @property  NSObject<OS_dispatch_queue> *_queue
 @property  BOOL _hadSelectionOnLastUpdate
 @property  <PUPhotosGridBarsHelperDelegate> *delegate
 @property  BOOL swipeSelecting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotosGridBarsHelper _queue]
  -[PUPhotosGridBarsHelper _setTitle:]
  -[PUPhotosGridBarsHelper _updateIfNeeded]
  -[PUPhotosGridBarsHelper _setNeedsUpdate]
  -[PUPhotosGridBarsHelper .cxx_destruct]
  -[PUPhotosGridBarsHelper prompt]
  -[PUPhotosGridBarsHelper setDelegate:]
  -[PUPhotosGridBarsHelper init]
  -[PUPhotosGridBarsHelper _setPrompt:]
  -[PUPhotosGridBarsHelper _needsUpdate]
  -[PUPhotosGridBarsHelper title]
  -[PUPhotosGridBarsHelper delegate]
  -[PUPhotosGridBarsHelper _setRightBarButtonItems:]
  -[PUPhotosGridBarsHelper leftBarButtonItems]
  -[PUPhotosGridBarsHelper rightBarButtonItems]
  -[PUPhotosGridBarsHelper _setLeftBarButtonItems:]
  -[PUPhotosGridBarsHelper photoSelectionManagerSelectionDidChange:]
  -[PUPhotosGridBarsHelper _invalidatePhotoSelectionManager]
  -[PUPhotosGridBarsHelper _invalidateShouldUpdateBarItemsLazily]
  -[PUPhotosGridBarsHelper _invalidateBarItems]
  -[PUPhotosGridBarsHelper _notifyBarItemsDidChange]
  -[PUPhotosGridBarsHelper _stopUpdatingItemsWithCount]
  -[PUPhotosGridBarsHelper _updatePhotoSelectionManagerIfNeeded]
  -[PUPhotosGridBarsHelper _updateShouldUpdateBarItemsLazilyIfNeeded]
  -[PUPhotosGridBarsHelper _updateBarItemsIfNeeded]
  -[PUPhotosGridBarsHelper _setPhotoSelectionManager:]
  -[PUPhotosGridBarsHelper isSwipeSelecting]
  -[PUPhotosGridBarsHelper _setShouldUpdateBarItemsLazily:]
  -[PUPhotosGridBarsHelper _shouldUpdateBarItemsLazily]
  -[PUPhotosGridBarsHelper _setShouldUpdateItemsWithCount:]
  -[PUPhotosGridBarsHelper _startUpdatingItemsWithCountIfNeeded]
  -[PUPhotosGridBarsHelper _updateAllBarItems]
  -[PUPhotosGridBarsHelper _photoSelectionManager]
  -[PUPhotosGridBarsHelper _setShouldHideBackButton:]
  -[PUPhotosGridBarsHelper _shouldUpdateItemsWithCount]
  -[PUPhotosGridBarsHelper _isUpdatingItemsWithCount]
  -[PUPhotosGridBarsHelper _setUpdatingItemsWithCount:]
  -[PUPhotosGridBarsHelper _updateItemsWithCountInBackgroundWithDelegate:photoSelectionManagerSnapshot:]
  -[PUPhotosGridBarsHelper _setHadSelectionOnLastUpdate:]
  -[PUPhotosGridBarsHelper _hadSelectionOnLastUpdate]
  -[PUPhotosGridBarsHelper _handleItemsWithCountUpdateWithTitle:shouldReloadAllItems:]
  -[PUPhotosGridBarsHelper setSwipeSelecting:]
  -[PUPhotosGridBarsHelper invalidateNavigationBarItems]
  -[PUPhotosGridBarsHelper shouldHideBackButton]


PUToggleCTMMediaProvider : PUEditableMediaProvider
 @property  PUBrowsingViewModel *viewModel
 @property  PUMediaProvider *mediaProvider

  // instance methods
  -[PUToggleCTMMediaProvider cancelImageRequest:]
  -[PUToggleCTMMediaProvider _requestOptions]
  -[PUToggleCTMMediaProvider .cxx_destruct]
  -[PUToggleCTMMediaProvider mediaProvider]
  -[PUToggleCTMMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUToggleCTMMediaProvider viewModel]
  -[PUToggleCTMMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestAsynchronousVideoURLForAsset:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestAVAssetForVideo:options:resultHandler:]
  -[PUToggleCTMMediaProvider requestAnimatedImageForAsset:options:resultHandler:]
  -[PUToggleCTMMediaProvider initWithViewModel:mediaProvider:]
  -[PUToggleCTMMediaProvider _resourceOfType:forAsset:]
  -[PUToggleCTMMediaProvider _shouldToggleCTMForAsset:]
  -[PUToggleCTMMediaProvider _ctmImageResourceForAsset:]
  -[PUToggleCTMMediaProvider _imageWithSize:string:]
  -[PUToggleCTMMediaProvider _ctmVideoResourceForAsset:]
  -[PUToggleCTMMediaProvider _ctmPairedVideoResourceForAsset:]


PUPhotosGridCell : UICollectionViewCell
 @property  PUPhotoView *photoContentView
 @property  PUPhotoView *temporaryPhotoContentView
 @property  long long dragState
 @property  BOOL highlighted
 @property  BOOL draggable
 @property  BOOL selectionBadgeVisible
 @property  BOOL cloudIconVisible
 @property  NSNumber *progress
 @property  BOOL transitionFillerViewEnabled
 @property  {UIEdgeInsets=dddd} fillerEdgeInsets
 @property  UIView *transitionFillerView
 @property  BOOL transitionIsAppearing
 @property  int currentImageRequestID

  // class methods
  +[PUPhotosGridCell _contentViewClass]

  // instance methods
  -[PUPhotosGridCell setHighlighted:]
  -[PUPhotosGridCell _updateSubviewOrdering]
  -[PUPhotosGridCell _updateHighlight]
  -[PUPhotosGridCell isDraggable]
  -[PUPhotosGridCell updateConstraints]
  -[PUPhotosGridCell .cxx_destruct]
  -[PUPhotosGridCell layoutSubviews]
  -[PUPhotosGridCell progress]
  -[PUPhotosGridCell _disableRasterizeInAnimations]
  -[PUPhotosGridCell sizeThatFits:]
  -[PUPhotosGridCell prepareForReuse]
  -[PUPhotosGridCell initWithFrame:]
  -[PUPhotosGridCell _updateContentViewClipsToBounds]
  -[PUPhotosGridCell setDraggable:]
  -[PUPhotosGridCell setProgress:]
  -[PUPhotosGridCell setDragState:]
  -[PUPhotosGridCell dragStateDidChange:]
  -[PUPhotosGridCell dragState]
  -[PUPhotosGridCell applyLayoutAttributes:]
  -[PUPhotosGridCell transitionIsAppearing]
  -[PUPhotosGridCell setCurrentImageRequestID:]
  -[PUPhotosGridCell currentImageRequestID]
  -[PUPhotosGridCell transitionFillerView]
  -[PUPhotosGridCell temporaryPhotoContentView]
  -[PUPhotosGridCell photoContentView]
  -[PUPhotosGridCell fillerEdgeInsets]
  -[PUPhotosGridCell addTemporaryPhotoContentView]
  -[PUPhotosGridCell setTemporaryPhotoImage:with:]
  -[PUPhotosGridCell removeTemporaryPhotoContentView]
  -[PUPhotosGridCell setPhotoContentView:]
  -[PUPhotosGridCell _layoutTransitionFillerView]
  -[PUPhotosGridCell isSelectionBadgeVisible]
  -[PUPhotosGridCell _updateCloudIcon]
  -[PUPhotosGridCell isCloudIconVisible]
  -[PUPhotosGridCell setSelectionBadgeVisible:]
  -[PUPhotosGridCell setCloudIconVisible:]
  -[PUPhotosGridCell setProgress:immediately:]
  -[PUPhotosGridCell _updateSelectionBadge]
  -[PUPhotosGridCell _updateProgressImmediately:]
  -[PUPhotosGridCell setTransitionFillerViewEnabled:]
  -[PUPhotosGridCell setFillerEdgeInsets:]
  -[PUPhotosGridCell setTemporaryPhotoContentView:]
  -[PUPhotosGridCell transitionFillerViewEnabled]
  -[PUPhotosGridCell setTransitionIsAppearing:]


PUPhotosGridDownloadHelpContext : NSObject
 @property  PHResourceLocalAvailabilityRequest *resourceLocalAvailabilityRequest
 @property  NSString *gridProgressIdentifier
 @property  @? downloadHandler

  // instance methods
  -[PUPhotosGridDownloadHelpContext .cxx_destruct]
  -[PUPhotosGridDownloadHelpContext setDownloadHandler:]
  -[PUPhotosGridDownloadHelpContext resourceLocalAvailabilityRequest]
  -[PUPhotosGridDownloadHelpContext setResourceLocalAvailabilityRequest:]
  -[PUPhotosGridDownloadHelpContext gridProgressIdentifier]
  -[PUPhotosGridDownloadHelpContext setGridProgressIdentifier:]
  -[PUPhotosGridDownloadHelpContext downloadHandler]


PUPhotosGridDownloadHelper : NSObject
 @property  <PUPhotosGridDownloadUpdateHandler> *updateHandler
 @property  BOOL shouldTreatLivePhotosAsStills
 @property  long long mode

  // class methods
  +[PUPhotosGridDownloadHelper createAlertControllerForDownloadError:withAsset:]

  // instance methods
  -[PUPhotosGridDownloadHelper updateHandler]
  -[PUPhotosGridDownloadHelper cancelAllDownloads]
  -[PUPhotosGridDownloadHelper .cxx_destruct]
  -[PUPhotosGridDownloadHelper initWithUpdateHandler:]
  -[PUPhotosGridDownloadHelper init]
  -[PUPhotosGridDownloadHelper setMode:]
  -[PUPhotosGridDownloadHelper mode]
  -[PUPhotosGridDownloadHelper setShouldTreatLivePhotosAsStills:]
  -[PUPhotosGridDownloadHelper cancelDownloadForIdentifier:]
  -[PUPhotosGridDownloadHelper handleDownloadOfAssetIfNeeded:inCollection:withSuccessHandler:]
  -[PUPhotosGridDownloadHelper isAnyPickerAssetDownloading:]
  -[PUPhotosGridDownloadHelper _cancelPreviousDownloadsForAsset:]
  -[PUPhotosGridDownloadHelper _setDownloadContext:forIdentifier:]
  -[PUPhotosGridDownloadHelper _downloadContextForIdentifier:]
  -[PUPhotosGridDownloadHelper _defaultOptions]
  -[PUPhotosGridDownloadHelper _startRetrievingRequiredResourcesForRequest:options:inCollection:]
  -[PUPhotosGridDownloadHelper _downloadForRequest:didCompleteWithSuccess:canceled:error:]
  -[PUPhotosGridDownloadHelper _checkIfRetrievalIsRequiredForResourceRequest:completion:]
  -[PUPhotosGridDownloadHelper shouldTreatLivePhotosAsStills]
  -[PUPhotosGridDownloadHelper _removeDownloadRequestForIdentifier:]
  -[PUPhotosGridDownloadHelper _updateDownloadProgressForAsset:]
  -[PUPhotosGridDownloadHelper initWithGridViewController:]


PUPhotosGridLayoutHelper : NSObject
  // class methods
  +[PUPhotosGridLayoutHelper zIndexForItemAtIndexPath:]
  +[PUPhotosGridLayoutHelper zIndexForSupplementaryViewOfKind:forVisualSection:supplementaryViewIndex:]
  +[PUPhotosGridLayoutHelper zIndexForFloatingHeaderForVisualSection:]


PUPhotosGridSettings : PXSettings
 @property  double defaultItemSideSize
 @property  double maximumSpacing
 @property  BOOL badgeAllItemsAsFavorites
 @property  BOOL displayAllItemsAsBursts
 @property  BOOL allowDynamicDetailsTitles
 @property  double simulatedDetailsAttributesLoadingDelay
 @property  BOOL forceJPEGThumbnailsInDefaultGrid
 @property  long long numberColumnsInDefaultGrid
 @property  long long numberOfColumnsInWideGrid
 @property  BOOL flashDegradedImages
 @property  BOOL useFloatingHeaders
 @property  BOOL swipeSelectionEnabled
 @property  double magnifierRevealPreviewScale
 @property  double previewRevealProgressToFreezeMagnifier
 @property  double minimumDistanceToUnfreeze
 @property  BOOL shouldExitEditingModeAfterDuplication
 @property  BOOL showTimelineScrubbers
 @property  double leftScrubberRate
 @property  double rightScrubberRate
 @property  long long globalFooterVisibility
 @property  BOOL simulateGlobalFooterImportantInformationUpdates

  // class methods
  +[PUPhotosGridSettings sharedInstance]
  +[PUPhotosGridSettings settingsControllerModule]

  // instance methods
  -[PUPhotosGridSettings setSimulateGlobalFooterImportantInformationUpdates:]
  -[PUPhotosGridSettings parentSettings]
  -[PUPhotosGridSettings setSimulatedDetailsAttributesLoadingDelay:]
  -[PUPhotosGridSettings setMinimumDistanceToUnfreeze:]
  -[PUPhotosGridSettings flashDegradedImages]
  -[PUPhotosGridSettings numberOfColumnsInWideGrid]
  -[PUPhotosGridSettings leftScrubberRate]
  -[PUPhotosGridSettings setGlobalFooterVisibility:]
  -[PUPhotosGridSettings setBadgeAllItemsAsFavorites:]
  -[PUPhotosGridSettings allowDynamicDetailsTitles]
  -[PUPhotosGridSettings minimumDistanceToUnfreeze]
  -[PUPhotosGridSettings setLeftScrubberRate:]
  -[PUPhotosGridSettings setDisplayAllItemsAsBursts:]
  -[PUPhotosGridSettings badgeAllItemsAsFavorites]
  -[PUPhotosGridSettings displayAllItemsAsBursts]
  -[PUPhotosGridSettings simulatedDetailsAttributesLoadingDelay]
  -[PUPhotosGridSettings setDefaultItemSideSize:]
  -[PUPhotosGridSettings setDefaultValues]
  -[PUPhotosGridSettings setForceJPEGThumbnailsInDefaultGrid:]
  -[PUPhotosGridSettings magnifierRevealPreviewScale]
  -[PUPhotosGridSettings setAllowDynamicDetailsTitles:]
  -[PUPhotosGridSettings setShowTimelineScrubbers:]
  -[PUPhotosGridSettings defaultItemSideSize]
  -[PUPhotosGridSettings isSwipeSelectionEnabled]
  -[PUPhotosGridSettings setUseFloatingHeaders:]
  -[PUPhotosGridSettings maximumSpacing]
  -[PUPhotosGridSettings setNumberOfColumnsInWideGrid:]
  -[PUPhotosGridSettings numberColumnsInDefaultGrid]
  -[PUPhotosGridSettings rightScrubberRate]
  -[PUPhotosGridSettings forceJPEGThumbnailsInDefaultGrid]
  -[PUPhotosGridSettings setPreviewRevealProgressToFreezeMagnifier:]
  -[PUPhotosGridSettings setSwipeSelectionEnabled:]
  -[PUPhotosGridSettings showTimelineScrubbers]
  -[PUPhotosGridSettings globalFooterVisibility]
  -[PUPhotosGridSettings setRightScrubberRate:]
  -[PUPhotosGridSettings shouldExitEditingModeAfterDuplication]
  -[PUPhotosGridSettings setMaximumSpacing:]
  -[PUPhotosGridSettings useFloatingHeaders]
  -[PUPhotosGridSettings simulateGlobalFooterImportantInformationUpdates]
  -[PUPhotosGridSettings previewRevealProgressToFreezeMagnifier]
  -[PUPhotosGridSettings setNumberColumnsInDefaultGrid:]
  -[PUPhotosGridSettings setFlashDegradedImages:]
  -[PUPhotosGridSettings setShouldExitEditingModeAfterDuplication:]
  -[PUPhotosGridSettings setMagnifierRevealPreviewScale:]


_PUPhotosGridProgressInfo : NSObject
 @property  NSString *identifier
 @property  PHAsset *asset
 @property  PHAssetCollection *collection
 @property  NSIndexPath *cachedIndexPath
 @property  double progress

  // instance methods
  -[_PUPhotosGridProgressInfo setCollection:]
  -[_PUPhotosGridProgressInfo collection]
  -[_PUPhotosGridProgressInfo .cxx_destruct]
  -[_PUPhotosGridProgressInfo setAsset:]
  -[_PUPhotosGridProgressInfo progress]
  -[_PUPhotosGridProgressInfo asset]
  -[_PUPhotosGridProgressInfo identifier]
  -[_PUPhotosGridProgressInfo setIdentifier:]
  -[_PUPhotosGridProgressInfo setProgress:]
  -[_PUPhotosGridProgressInfo cachedIndexPath]
  -[_PUPhotosGridProgressInfo setCachedIndexPath:]


PUPhotosGridViewController : UICollectionViewController <UIPopoverPresentationControllerDelegate, PUCollectionViewSelectionDelegate, PUSessionInfoObserver, PHAssetCollectionDataSource, PXSettingsKeyObserver, PXPhotosDataSourceChangeObserver, PUDeletePhotosActionControllerDelegate, PXActivitySharingControllerDelegate, PUSlideshowViewControllerDelegate, PXCMMActionPerformerDelegate, PUOneUpPresentationHelperDelegate, PUSwipeSelectionManagerDelegate, PUSwipeSelectionManagerDataSource, PXAutoScrollerDelegate, PXPhotosGlobalFooterViewDelegate, PXPhotosGlobalFooterViewLayoutDelegate, PUPhotosGridBarsHelperDelegate, UICollectionViewDragSource, UICollectionViewDragDestination, UIDropInteractionDelegate, UIMultiSelectInteractionDelegate, UIGestureRecognizerDelegate, PXNavigableAssetContainerViewController, PXForcedDismissableViewController, PUStackedAlbumControllerTransition, PUScrollViewSpeedometerDelegate>
 @property  PUPhotosGridViewControllerSpec *gridSpec
 @property  UICollectionViewLayout<PUGridLayoutProtocol> *mainGridLayout
 @property  PUPhotoSelectionManager *photoSelectionManager
 @property  @? onViewDidAppearCompletion
 @property  PUPhotosGridBarsHelper *_barsHelper
 @property  PUPhotoPinchGestureRecognizer *photoOrStackPinchGestureRecognizer
 @property  UIView *_emptyPlaceholderView
 @property  BOOL _needsNewEmptyPlaceholderView
 @property  unsigned long _previousCollectionsCount
 @property  UIViewController *_removeActionSheet
 @property  UIViewController *_actionConfirmationAlert
 @property  UIView *_shareAssetsSender
 @property  PUDeletePhotosActionController *_deleteActionController
 @property  PUDuplicateActionController *_duplicateActionController
 @property  PUAlbumPickerViewController *_albumPickerViewController
 @property  PUSlideshowViewController *_slideshowViewController
 @property  PUAlbumListTransitionContext *albumListTransitionContext
 @property  UICollectionViewLayout *_albumListTransitionLayout
 @property  UIBarButtonItem *customDoneButtonItem
 @property  BOOL showsCustomDoneButtonItemOnLeft
 @property  BOOL showsSelectionSessionCancelButtonItemOnLeft
 @property  double collectionViewLayoutReferenceWidth
 @property  {UIEdgeInsets=dddd} collectionViewLayoutReferenceSafeAreaInsets
 @property  UIViewController *_pushedPhotoBrowserController
 @property  PUOneUpPresentationHelper *oneUpPresentationHelper
 @property  PUPhotoBrowserOneUpPresentationAdaptor *_photoBrowserOneUpPresentationAdaptor
 @property  UIPopoverPresentationController *_shareAssetsPopoverController
 @property  PUActivitySharingController *activitySharingController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _previousPreheatRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _previousPrefetchRect
 @property  {CGPoint=dd} _previousPreheatContentOffset
 @property  {CGPoint=dd} _previousPrefetchContentOffset
 @property  PHCachingImageManager *_cachingImageManager
 @property  long long _maximumNumberOfRowsToPreheat
 @property  {CGSize=dd} maximumThumbnailRequestSize
 @property  PUScrollViewSpeedometer *_collectionViewSpeedometer
 @property  UIMultiSelectInteraction *_multiSelectInteraction
 @property  PUSwipeSelectionManager *_swipeSelectionManager
 @property  long long _batchPreheatingCount
 @property  @? ppt_nextDeleteFinishedBlock
 @property  @? ppt_dataSourceChangeHandler
 @property  BOOL _didForceDataSource
 @property  id _pendingViewSizeTransitionContext
 @property  id _cachedViewSizeTransitionContext
 @property  {CGSize=dd} _cachedViewSizeTransitionContextSize
 @property  UIContextMenuInteraction *_contextMenuInteraction
 @property  NSIndexPath *_previewingIndexPath
 @property  UIViewController *_previewViewController
 @property  BOOL _previewCommitting
 @property  PLDateRangeFormatter *_dateRangeFormatter
 @property  PXAssetBadgeManager *_badgeManager
 @property  NSIndexPath *_menuIndexPath
 @property  @? pendingProcessDataSourceUpdateBlock
 @property  BOOL hasKnownNonEmptyContent_toWorkAround31995766
 @property  UIActivityViewController *primingActivityViewController
 @property  <PUPhotosGridViewSupplementalToolbarProvider> *supplementalToolbarProvider
 @property  PXPhotosDataSource *photosDataSource
 @property  PHFetchResult *collectionListFetchResult
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long allowedActions
 @property  BOOL initiallyScrolledToBottom
 @property  BOOL alwaysHideTabBar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHFetchResult *assetCollectionsFetchResult

  // class methods
  +[PUPhotosGridViewController _localizedSelectionTitleWithPhotoSelectionManager:]
  +[PUPhotosGridViewController transferPhotoBrowserFromGridViewController:toGridViewController:]

  // instance methods
  -[PUPhotosGridViewController photosDataSource]
  -[PUPhotosGridViewController preferredStatusBarStyle]
  -[PUPhotosGridViewController collectionView:cellForItemAtIndexPath:]
  -[PUPhotosGridViewController setSessionInfo:]
  -[PUPhotosGridViewController collectionView:numberOfItemsInSection:]
  -[PUPhotosGridViewController _collectionView:shouldApplyTransitionContentOffset:contentSize:]
  -[PUPhotosGridViewController initWithSpec:]
  -[PUPhotosGridViewController sessionInfo]
  -[PUPhotosGridViewController contentScrollView]
  -[PUPhotosGridViewController _previewViewController]
  -[PUPhotosGridViewController _collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[PUPhotosGridViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUPhotosGridViewController contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[PUPhotosGridViewController multiSelectInteraction:appendSelectionAtPoint:]
  -[PUPhotosGridViewController _contextMenuInteraction]
  -[PUPhotosGridViewController setPhotosDataSource:]
  -[PUPhotosGridViewController shouldAutorotateToInterfaceOrientation:]
  -[PUPhotosGridViewController photosDataSource:didChange:]
  -[PUPhotosGridViewController contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[PUPhotosGridViewController _collectionView:itemsForAddingToDragSession:atIndexPath:point:]
  -[PUPhotosGridViewController setAllowedActions:]
  -[PUPhotosGridViewController _collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[PUPhotosGridViewController _previewParametersForItemAtIndexPath:]
  -[PUPhotosGridViewController numberOfSectionsInCollectionView:]
  -[PUPhotosGridViewController paste:]
  -[PUPhotosGridViewController copy:]
  -[PUPhotosGridViewController _collectionView:performDropWithCoordinator:]
  -[PUPhotosGridViewController hasScrollableContent]
  -[PUPhotosGridViewController collectionView:transitionLayoutForOldLayout:newLayout:]
  -[PUPhotosGridViewController _collectionView:liftingPreviewParametersForItemAtIndexPath:]
  -[PUPhotosGridViewController collectionView:dragPreviewParametersForItemAtIndexPath:]
  -[PUPhotosGridViewController _collectionView:canHandleDropSesson:]
  -[PUPhotosGridViewController viewWillLayoutSubviews]
  -[PUPhotosGridViewController traitCollectionDidChange:]
  -[PUPhotosGridViewController isEmpty]
  -[PUPhotosGridViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUPhotosGridViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[PUPhotosGridViewController collectionView:willDisplayCell:forItemAtIndexPath:]
  -[PUPhotosGridViewController oneUpPresentationHelperAdditionalOptions:]
  -[PUPhotosGridViewController didEndMultiSelectInteraction:atPoint:]
  -[PUPhotosGridViewController setEditing:animated:]
  -[PUPhotosGridViewController isInMultiSelectMode]
  -[PUPhotosGridViewController prepareForPopoverPresentation:]
  -[PUPhotosGridViewController popoverPresentationControllerShouldDismissPopover:]
  -[PUPhotosGridViewController shouldAllowSelectionExtensionAtPoint:]
  -[PUPhotosGridViewController contextMenuInteraction:configurationForMenuAtLocation:]
  -[PUPhotosGridViewController _setEmptyPlaceholderView:]
  -[PUPhotosGridViewController oneUpPresentationHelperScrollView:]
  -[PUPhotosGridViewController .cxx_destruct]
  -[PUPhotosGridViewController multiSelectInteraction:toggleSelectionStateUpToPoint:]
  -[PUPhotosGridViewController activitySharingController]
  -[PUPhotosGridViewController oneUpPresentationHelperPreventRevealInMomentAction:]
  -[PUPhotosGridViewController viewDidLoad]
  -[PUPhotosGridViewController popoverPresentationControllerDidDismissPopover:]
  -[PUPhotosGridViewController canBecomeFirstResponder]
  -[PUPhotosGridViewController scrollViewDidScrollToTop:]
  -[PUPhotosGridViewController dropInteraction:canHandleSession:]
  -[PUPhotosGridViewController oneUpPresentationHelper:willPresentOneUpViewController:]
  -[PUPhotosGridViewController _cancelButtonItem]
  -[PUPhotosGridViewController isCameraRoll]
  -[PUPhotosGridViewController gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:]
  -[PUPhotosGridViewController viewDidAppear:]
  -[PUPhotosGridViewController initWithNibName:bundle:]
  -[PUPhotosGridViewController oneUpPresentationHelperShouldLeaveContentOnSecondScreen:]
  -[PUPhotosGridViewController _emptyPlaceholderView]
  -[PUPhotosGridViewController handleLongPressGesture:]
  -[PUPhotosGridViewController pu_scrollToInitialPositionAnimated:]
  -[PUPhotosGridViewController _presentConfidentialityWarning]
  -[PUPhotosGridViewController _dateRangeFormatter]
  -[PUPhotosGridViewController assetsInAssetCollection:]
  -[PUPhotosGridViewController oneUpPresentationOrigin]
  -[PUPhotosGridViewController dropInteraction:sessionDidUpdate:]
  -[PUPhotosGridViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUPhotosGridViewController scrollViewDidScroll:]
  -[PUPhotosGridViewController gridLayout]
  -[PUPhotosGridViewController longPressGestureRecognizer]
  -[PUPhotosGridViewController actionPerformer:presentViewController:]
  -[PUPhotosGridViewController oneUpPresentationHelperViewController:]
  -[PUPhotosGridViewController oneUpPresentationOrigin:]
  -[PUPhotosGridViewController gestureRecognizerShouldBegin:]
  -[PUPhotosGridViewController allowedActions]
  -[PUPhotosGridViewController _contentSizeCategoryDidChangeNotification:]
  -[PUPhotosGridViewController photosGlobalFooterViewDidChangeHeight:]
  -[PUPhotosGridViewController viewWillDisappear:]
  -[PUPhotosGridViewController initWithCollectionViewLayout:]
  -[PUPhotosGridViewController _setPreviousCollectionsCount:]
  -[PUPhotosGridViewController _preferredWhitePointAdaptivityStyle]
  -[PUPhotosGridViewController canDeleteContent]
  -[PUPhotosGridViewController viewDidLayoutSubviews]
  -[PUPhotosGridViewController canPerformAction:withSender:]
  -[PUPhotosGridViewController collectionListFetchResult]
  -[PUPhotosGridViewController scrollViewWillBeginDragging:]
  -[PUPhotosGridViewController activitySharingControllerDidCancel:]
  -[PUPhotosGridViewController activitySharingController:didCompleteWithActivityType:success:]
  -[PUPhotosGridViewController gridSpec]
  -[PUPhotosGridViewController interaction:shouldAutomaticallyTransitionToMultiSelectModeAtPoint:]
  -[PUPhotosGridViewController viewWillAppear:]
  -[PUPhotosGridViewController photosGlobalFooterView:presentViewController:]
  -[PUPhotosGridViewController selectedIndexPaths]
  -[PUPhotosGridViewController interaction:shouldAutomaticallyTransitionToMultiSelectModeAtPoint:withVelocity:]
  -[PUPhotosGridViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUPhotosGridViewController shouldBeginMultiSelectInteraction:atPoint:withVelocity:]
  -[PUPhotosGridViewController settings:changedValueForKey:]
  -[PUPhotosGridViewController setLongPressGestureRecognizer:]
  -[PUPhotosGridViewController dropInteraction:performDrop:]
  -[PUPhotosGridViewController supportsMultiSelectInteraction:]
  -[PUPhotosGridViewController _previousCollectionsCount]
  -[PUPhotosGridViewController actionPerformer:dismissViewController:completionHandler:]
  -[PUPhotosGridViewController installGestureRecognizers]
  -[PUPhotosGridViewController dealloc]
  -[PUPhotosGridViewController uninstallGestureRecognizers]
  -[PUPhotosGridViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUPhotosGridViewController photoSelectionManager]
  -[PUPhotosGridViewController shouldShowToolbar]
  -[PUPhotosGridViewController newToolbarItems]
  -[PUPhotosGridViewController previewViewControllerForItemAtIndexPath:]
  -[PUPhotosGridViewController automaticallyTransitionToMultiSelectModeKeepingCurrentSelection:]
  -[PUPhotosGridViewController canDragIn]
  -[PUPhotosGridViewController loadView]
  -[PUPhotosGridViewController supportedInterfaceOrientations]
  -[PUPhotosGridViewController _multiSelectInteraction]
  -[PUPhotosGridViewController isAnyAssetSelected]
  -[PUPhotosGridViewController selectedAssets]
  -[PUPhotosGridViewController setActivitySharingController:]
  -[PUPhotosGridViewController willBeginMultiSelectInteraction:atPoint:]
  -[PUPhotosGridViewController scrollViewDidEndDecelerating:]
  -[PUPhotosGridViewController contextMenuInteractionDidEnd:]
  -[PUPhotosGridViewController viewDidDisappear:]
  -[PUPhotosGridViewController _shouldBeginMultiSelectAtLocation:]
  -[PUPhotosGridViewController prepareForDismissingForced:]
  -[PUPhotosGridViewController presentAlertController:]
  -[PUPhotosGridViewController updateNavigationBarAnimated:]
  -[PUPhotosGridViewController localizedSelectionTitle]
  -[PUPhotosGridViewController updateTitle]
  -[PUPhotosGridViewController handleTransitionFade:animate:]
  -[PUPhotosGridViewController assetAtIndexPath:]
  -[PUPhotosGridViewController canDragOut]
  -[PUPhotosGridViewController _badgeManager]
  -[PUPhotosGridViewController updateSpec]
  -[PUPhotosGridViewController _handleCancelButton:]
  -[PUPhotosGridViewController _updateNavigationBannerAnimated:]
  -[PUPhotosGridViewController _pickerBannerView]
  -[PUPhotosGridViewController _cachingImageManager]
  -[PUPhotosGridViewController setAlbumListTransitionContext:]
  -[PUPhotosGridViewController setAlbumListTransitionLayout:animated:]
  -[PUPhotosGridViewController _setPreviousPreheatRect:]
  -[PUPhotosGridViewController _previousPreheatRect]
  -[PUPhotosGridViewController _albumListTransitionLayout]
  -[PUPhotosGridViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUPhotosGridViewController albumListTransitionContext]
  -[PUPhotosGridViewController bestReferenceItemIndexPath]
  -[PUPhotosGridViewController sectionedGridLayout:didPrepareTransitionIsAppearing:]
  -[PUPhotosGridViewController sectionedGridLayoutAnchorItemForAdjustingContentOffset:]
  -[PUPhotosGridViewController sectionedGridLayoutTransitionAutoAdjustContentOffsetEnabled:]
  -[PUPhotosGridViewController sectionedGridLayout:aspectRatioForItemAtIndexPath:]
  -[PUPhotosGridViewController pu_wantsToolbarVisible]
  -[PUPhotosGridViewController sessionInfoPhotoSelectionDidChange:]
  -[PUPhotosGridViewController setAlbumListTransitionLayout:]
  -[PUPhotosGridViewController assetCollectionsFetchResult]
  -[PUPhotosGridViewController pu_wantsTabBarVisible]
  -[PUPhotosGridViewController handleAddFromAction]
  -[PUPhotosGridViewController shouldShowTabBar]
  -[PUPhotosGridViewController updatePeripheralInterfaceAnimated:]
  -[PUPhotosGridViewController setAlternateContentView:]
  -[PUPhotosGridViewController canAddToOtherAlbumContent]
  -[PUPhotosGridViewController wantsAddContentInToolbar]
  -[PUPhotosGridViewController wantsAddPlaceholderAtEndOfSection:]
  -[PUPhotosGridViewController didSelectAddPlaceholderInSection:]
  -[PUPhotosGridViewController wantsGlobalFooter]
  -[PUPhotosGridViewController indexPathsForSelectedItemsInCollectionView:]
  -[PUPhotosGridViewController deletePhotosActionController:presentConfirmationViewController:]
  -[PUPhotosGridViewController configureGlobalHeaderView:]
  -[PUPhotosGridViewController globalHeaderHeight]
  -[PUPhotosGridViewController _ensureOneUpPresentationHelper]
  -[PUPhotosGridViewController _photoBrowserOneUpPresentationAdaptor]
  -[PUPhotosGridViewController _setPhotoBrowserOneUpPresentationAdaptor:]
  -[PUPhotosGridViewController _setOneUpPresentationHelper:]
  -[PUPhotosGridViewController _collectionViewSpeedometer]
  -[PUPhotosGridViewController _setCollectionViewSpeedometer:]
  -[PUPhotosGridViewController scrollViewWillScrollToTop:]
  -[PUPhotosGridViewController navigateToRevealPhoto:inAssetContainer:animated:]
  -[PUPhotosGridViewController _confidentialityWarningRequiredForAsset:]
  -[PUPhotosGridViewController _dragItemsForIndexPath:]
  -[PUPhotosGridViewController zoomTransition:photoTokenForPhoto:inCollection:]
  -[PUPhotosGridViewController zoomTransition:getFrame:inCoordinateSpace:contentMode:cropInsets:forPhotoToken:operation:]
  -[PUPhotosGridViewController zoomTransition:transitionImageForPhotoToken:callback:]
  -[PUPhotosGridViewController zoomTransition:willBeginForOperation:animated:interactive:]
  -[PUPhotosGridViewController zoomTransition:didFinishForOperation:animated:interactive:]
  -[PUPhotosGridViewController zoomTransition:shouldHidePhotoTokens:]
  -[PUPhotosGridViewController scrollViewSpeedometer:regimeDidChange:from:]
  -[PUPhotosGridViewController oneUpPresentationHelper:didDismissOneUpViewController:]
  -[PUPhotosGridViewController assetCollectionForSectionHeaderAtIndex:]
  -[PUPhotosGridViewController setSelected:itemsAtIndexes:inSection:animated:]
  -[PUPhotosGridViewController newEmptyPlaceholderView]
  -[PUPhotosGridViewController navigateToPhotosDetailsForAssetCollection:]
  -[PUPhotosGridViewController newGridLayout]
  -[PUPhotosGridViewController allowSlideshowButton]
  -[PUPhotosGridViewController collectionViewLayoutReferenceSafeAreaInsets]
  -[PUPhotosGridViewController updateInterfaceForModelReloadAnimated:]
  -[PUPhotosGridViewController updateVisibleSupplementaryViewsOfKind:]
  -[PUPhotosGridViewController preheatAssetsWithPrefetchingDisabled:]
  -[PUPhotosGridViewController resetPreheating]
  -[PUPhotosGridViewController stableUpdatesContentOffsetForProposedContentOffset:]
  -[PUPhotosGridViewController dateRangeFormatterPreset]
  -[PUPhotosGridViewController imageRequestItemSize]
  -[PUPhotosGridViewController cellFillMode]
  -[PUPhotosGridViewController imageDeliveryMode]
  -[PUPhotosGridViewController cellAspectRatioHint]
  -[PUPhotosGridViewController initiallyScrolledToBottom]
  -[PUPhotosGridViewController shouldPerformAutomaticContentOffsetAdjustment]
  -[PUPhotosGridViewController beginShowingProgressForAsset:inCollection:]
  -[PUPhotosGridViewController updateProgressWithIdentifier:withValue:]
  -[PUPhotosGridViewController endShowingProgressWithIdentifier:succeeded:canceled:error:]
  -[PUPhotosGridViewController _cachedViewSizeTransitionContextSize]
  -[PUPhotosGridViewController _cachedViewSizeTransitionContext]
  -[PUPhotosGridViewController _setCachedViewSizeTransitionContext:]
  -[PUPhotosGridViewController _setCachedViewSizeTransitionContextSize:]
  -[PUPhotosGridViewController _pendingViewSizeTransitionContext]
  -[PUPhotosGridViewController _setPendingViewSizeTransitionContext:]
  -[PUPhotosGridViewController _invalidateCachedViewSizeTransitionContext]
  -[PUPhotosGridViewController _updateContentOffsetForPendingViewSizeTransition]
  -[PUPhotosGridViewController updateLayoutMetrics]
  -[PUPhotosGridViewController invalidateEmptyPlaceholderView]
  -[PUPhotosGridViewController updateEmptyPlaceholderViewAnimated:]
  -[PUPhotosGridViewController photoOrStackPinchGestureRecognizer]
  -[PUPhotosGridViewController _navigateToPhotoAtIndexPath:animated:interactive:]
  -[PUPhotosGridViewController handlePhotoOrStackPinchGestureRecognizer:]
  -[PUPhotosGridViewController navigateToBottomAnimated:]
  -[PUPhotosGridViewController itemIndexPathAtPoint:outClosestMatch:outLeftClosestMatch:outAboveClosestMatch:]
  -[PUPhotosGridViewController canNavigateToPhotoInteractively:]
  -[PUPhotosGridViewController wantsPlaceholderView]
  -[PUPhotosGridViewController getEmptyPlaceholderViewTitle:message:buttonTitle:buttonAction:]
  -[PUPhotosGridViewController isContentViewInSyncWithModel]
  -[PUPhotosGridViewController isPreheatingEnabled]
  -[PUPhotosGridViewController _swipeSelectionManager]
  -[PUPhotosGridViewController photosDataSourceWillChange:]
  -[PUPhotosGridViewController previewActionController:didDismissWithActionIdentifier:]
  -[PUPhotosGridViewController previewActionControllerPreventRevealInMomentAction:]
  -[PUPhotosGridViewController pu_debugRows]
  -[PUPhotosGridViewController _slideshowViewController]
  -[PUPhotosGridViewController _setSlideshowViewController:]
  -[PUPhotosGridViewController _activitySharingControllerDidCancel:]
  -[PUPhotosGridViewController _activitySharingController:didCompleteWithActivityType:success:]
  -[PUPhotosGridViewController slideshowViewControllerDidFinish:withVisibleAssets:]
  -[PUPhotosGridViewController setAlwaysHideTabBar:]
  -[PUPhotosGridViewController setHasKnownNonEmptyContent_toWorkAround31995766:]
  -[PUPhotosGridViewController _duplicateActionController]
  -[PUPhotosGridViewController _albumPickerViewController]
  -[PUPhotosGridViewController isTrashBinViewController]
  -[PUPhotosGridViewController setInitiallyScrolledToBottom:]
  -[PUPhotosGridViewController localizedTitleForAssets:]
  -[PUPhotosGridViewController contentOffsetForPreheating]
  -[PUPhotosGridViewController userEventSourceType]
  -[PUPhotosGridViewController additionalOneUpViewControllerOptions]
  -[PUPhotosGridViewController updateGlobalFooter]
  -[PUPhotosGridViewController photoCollectionAtIndex:]
  -[PUPhotosGridViewController setPendingProcessDataSourceUpdateBlock:]
  -[PUPhotosGridViewController itemIndexPathAtPoint:outClosestMatch:]
  -[PUPhotosGridViewController navigateToPhoto:inAssetContainer:animated:]
  -[PUPhotosGridViewController sessionInfoForTransferredAssets:]
  -[PUPhotosGridViewController canBeginStackCollapseTransition]
  -[PUPhotosGridViewController configureGlobalFooterView:]
  -[PUPhotosGridViewController allowSelectAllButton]
  -[PUPhotosGridViewController canHandleDropSession:]
  -[PUPhotosGridViewController photosGridBarsHelper:didChange:]
  -[PUPhotosGridViewController photosGridBarsHelperPhotoSelectionManager:]
  -[PUPhotosGridViewController _setPhotoSelectionManager:]
  -[PUPhotosGridViewController photosGridBarsHelper:getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:forPhotoSelectionManager:]
  -[PUPhotosGridViewController photosGridBarsHelper:titleForPhotoSelectionManager:]
  -[PUPhotosGridViewController setMainGridLayout:]
  -[PUPhotosGridViewController _menuControllerDidHideMenu:]
  -[PUPhotosGridViewController _shareAssetsPopoverController]
  -[PUPhotosGridViewController isCurrentCollectionViewDataSource]
  -[PUPhotosGridViewController mainGridLayout]
  -[PUPhotosGridViewController _setShareAssetsPopoverController:]
  -[PUPhotosGridViewController _actionConfirmationAlert]
  -[PUPhotosGridViewController _setActionConfirmationAlert:]
  -[PUPhotosGridViewController _updateGlobalHeaderVisibility]
  -[PUPhotosGridViewController _adjustedTransitionWidth]
  -[PUPhotosGridViewController _transitionWidthHasChanged]
  -[PUPhotosGridViewController _updatePhotoSelectionManager]
  -[PUPhotosGridViewController _setDidForceDataSource:]
  -[PUPhotosGridViewController forceDataSourceIfNeeded]
  -[PUPhotosGridViewController oneUpPresentationHelper]
  -[PUPhotosGridViewController _didForceDataSource]
  -[PUPhotosGridViewController maximumThumbnailRequestSize]
  -[PUPhotosGridViewController _allowsActions:]
  -[PUPhotosGridViewController _canAllContainersPerformEditOperation:]
  -[PUPhotosGridViewController _assetsAllowingEditOperation:fromAssets:]
  -[PUPhotosGridViewController _canShareAsset:]
  -[PUPhotosGridViewController isAddPlaceholderAtIndexPath:]
  -[PUPhotosGridViewController _canAddContent]
  -[PUPhotosGridViewController _canShareContent]
  -[PUPhotosGridViewController _canRemoveContent]
  -[PUPhotosGridViewController hasKnownNonEmptyContent_toWorkAround31995766]
  -[PUPhotosGridViewController _shareButtonPressed:]
  -[PUPhotosGridViewController _shareableAssetsFromAssets:]
  -[PUPhotosGridViewController _removeButtonPressed:]
  -[PUPhotosGridViewController _assetsAllowingRemove:orDelete:fromAssets:]
  -[PUPhotosGridViewController _barButtonSpacerWithWidth:]
  -[PUPhotosGridViewController _addButtonPressed:]
  -[PUPhotosGridViewController _updateSubviewsOrderingAndVisibility]
  -[PUPhotosGridViewController localizedTitleForAssetCollection:titleCategory:]
  -[PUPhotosGridViewController alwaysHideTabBar]
  -[PUPhotosGridViewController _newEditActionItemsWithWideSpacing:]
  -[PUPhotosGridViewController _bestReferenceItemIndexPathWithTopBias:]
  -[PUPhotosGridViewController _updateBackButtonTitle]
  -[PUPhotosGridViewController _setPhotoOrStackPinchGestureRecognizer:]
  -[PUPhotosGridViewController set_multiSelectInteraction:]
  -[PUPhotosGridViewController _setContextMenuInteraction:]
  -[PUPhotosGridViewController setContentViewInSyncWithModel:]
  -[PUPhotosGridViewController _setMaximumNumberOfRowsToPreheat:]
  -[PUPhotosGridViewController _setMaximumThumbnailRequestSize:]
  -[PUPhotosGridViewController _updateTransitionWidthOnAppearance]
  -[PUPhotosGridViewController beginBatchPreheating]
  -[PUPhotosGridViewController _updateLayoutReferenceValues]
  -[PUPhotosGridViewController _performAutomaticContentOffsetAdjustment]
  -[PUPhotosGridViewController endBatchPreheating]
  -[PUPhotosGridViewController _pushedPhotoBrowserController]
  -[PUPhotosGridViewController _setPushedPhotoBrowserController:]
  -[PUPhotosGridViewController onViewDidAppearCompletion]
  -[PUPhotosGridViewController setOnViewDidAppearCompletion:]
  -[PUPhotosGridViewController preheatAssets]
  -[PUPhotosGridViewController _saveAnchorForAutomaticContentOffsetAdjustment]
  -[PUPhotosGridViewController _configureAddPlaceholderCell:animated:]
  -[PUPhotosGridViewController primingActivityViewController]
  -[PUPhotosGridViewController setPrimingActivityViewController:]
  -[PUPhotosGridViewController _removeActionSheet]
  -[PUPhotosGridViewController _hasAccessibilityLargeText]
  -[PUPhotosGridViewController _updateCollectionViewMultipleSelection]
  -[PUPhotosGridViewController _clearAutomaticContentOffsetSnapshot]
  -[PUPhotosGridViewController _userDidStartScrolling]
  -[PUPhotosGridViewController _setPreviousPreheatContentOffset:]
  -[PUPhotosGridViewController _setPreviousPrefetchContentOffset:]
  -[PUPhotosGridViewController _setPreviousPrefetchRect:]
  -[PUPhotosGridViewController _batchPreheatingCount]
  -[PUPhotosGridViewController _previousPreheatContentOffset]
  -[PUPhotosGridViewController _previousPrefetchContentOffset]
  -[PUPhotosGridViewController _maximumNumberOfRowsToPreheat]
  -[PUPhotosGridViewController contentSizeForPreheating]
  -[PUPhotosGridViewController imageRequestItemPixelSize]
  -[PUPhotosGridViewController _previousPrefetchRect]
  -[PUPhotosGridViewController _setBatchPreheatingCount:]
  -[PUPhotosGridViewController beginSuppressingColorSettingsUpdate]
  -[PUPhotosGridViewController endSuppressingColorSettingsUpdate]
  -[PUPhotosGridViewController _menuIndexPath]
  -[PUPhotosGridViewController _hasAtLeastOneContainer]
  -[PUPhotosGridViewController _setMenuIndexPath:]
  -[PUPhotosGridViewController _areAllAssetsSelected]
  -[PUPhotosGridViewController _presentShareSheetWithCompletion:]
  -[PUPhotosGridViewController _selectionManagerWithSelectedSharableAssets]
  -[PUPhotosGridViewController _activitySharingControllerWithSelectionManager:]
  -[PUPhotosGridViewController _presentActivitySharingController:completion:]
  -[PUPhotosGridViewController sender:shareSelectedAssetsWithCompletion:]
  -[PUPhotosGridViewController _selectionManagerWithSharableAssetsInFetchResult:forAssetCollection:]
  -[PUPhotosGridViewController _sharableAssetsTypeInFetchResult:]
  -[PUPhotosGridViewController _setShareAssetsSender:]
  -[PUPhotosGridViewController _slideshowNavigationControllerForFetchResult:assetCollection:]
  -[PUPhotosGridViewController _updateSelectionFromSelectionManager:]
  -[PUPhotosGridViewController _performHideActivityWithSelectionManager:]
  -[PUPhotosGridViewController _performDuplicateActivityWithAssets:]
  -[PUPhotosGridViewController _shareAssetsSender]
  -[PUPhotosGridViewController _setDuplicateActionController:]
  -[PUPhotosGridViewController _handleDuplicateActionCompletionWithSuccess:]
  -[PUPhotosGridViewController _setAlbumPickerViewController:]
  -[PUPhotosGridViewController handleAddToAction]
  -[PUPhotosGridViewController _deleteActionController]
  -[PUPhotosGridViewController _allAssetsInCollections]
  -[PUPhotosGridViewController _setRemoveActionSheet:]
  -[PUPhotosGridViewController _removeSelectedAssetsWithCompletion:]
  -[PUPhotosGridViewController _deleteActionForBarButtonItem:]
  -[PUPhotosGridViewController _setDeleteActionController:]
  -[PUPhotosGridViewController _referenceBarButtonItemForDeleteAction:]
  -[PUPhotosGridViewController assetAtIndexPathIfSafe:]
  -[PUPhotosGridViewController _shouldUpdateCollectionView]
  -[PUPhotosGridViewController processDataSourceChange:]
  -[PUPhotosGridViewController shouldPerformFullReloadForIncrementalDataSourceChange:]
  -[PUPhotosGridViewController updateInterfaceForIncrementalDataSourceChanges:]
  -[PUPhotosGridViewController pendingProcessDataSourceUpdateBlock]
  -[PUPhotosGridViewController canDisplayEditButton]
  -[PUPhotosGridViewController ppt_dataSourceChangeHandler]
  -[PUPhotosGridViewController collectionViewLayoutReferenceWidth]
  -[PUPhotosGridViewController _updateToolbarContentsAnimated:]
  -[PUPhotosGridViewController _updateProgressForCell:atIndexPath:]
  -[PUPhotosGridViewController _updateAllProgressInfoIndexPaths]
  -[PUPhotosGridViewController _updateSelectionForCell:atIndexPath:]
  -[PUPhotosGridViewController _updateIndexPathForProgressInfo:]
  -[PUPhotosGridViewController _updateProgressForCellAtIndexPath:]
  -[PUPhotosGridViewController updateGlobalFooterUsingFooterView:]
  -[PUPhotosGridViewController _barsHelper]
  -[PUPhotosGridViewController customDoneButtonItem]
  -[PUPhotosGridViewController _selectSessionDoneBarButtonItem]
  -[PUPhotosGridViewController _selectSessionCancelBarButtonItem]
  -[PUPhotosGridViewController showsCustomDoneButtonItemOnLeft]
  -[PUPhotosGridViewController showsSelectionSessionCancelButtonItemOnLeft]
  -[PUPhotosGridViewController _slideshowButtonPressed:]
  -[PUPhotosGridViewController _selectAllBarButtonItem]
  -[PUPhotosGridViewController _deselectAllBarButtonItem]
  -[PUPhotosGridViewController _selectionButton]
  -[PUPhotosGridViewController _handleSelectSessionDoneButton:]
  -[PUPhotosGridViewController _handleSelectSessionCancelButton:]
  -[PUPhotosGridViewController _handleSelectionButton:]
  -[PUPhotosGridViewController _needsNewEmptyPlaceholderView]
  -[PUPhotosGridViewController willDisplayEmptyPlaceholderView]
  -[PUPhotosGridViewController didEndDisplayingEmptyPlaceholderView]
  -[PUPhotosGridViewController _setNeedsNewEmptyPlaceholderView:]
  -[PUPhotosGridViewController _invalidateAllAssetIndexes]
  -[PUPhotosGridViewController _hideMenuIfNeeded]
  -[PUPhotosGridViewController ppt_nextDeleteFinishedBlock]
  -[PUPhotosGridViewController ppt_setNextDeleteFinishedBlock:]
  -[PUPhotosGridViewController configureGridCell:forItemAtIndexPath:assetMayHaveChanged:]
  -[PUPhotosGridViewController updateVisibleSectionHeadersAtIndexes:]
  -[PUPhotosGridViewController _invalidateAllProgressInfoIndexPaths]
  -[PUPhotosGridViewController configureDecorationsForCell:withAsset:assetCollection:thumbnailIsPlaceholder:assetMayHaveChanged:]
  -[PUPhotosGridViewController _updatePhotoDecorationForCell:animated:]
  -[PUPhotosGridViewController _cancelImageRequestForCell:]
  -[PUPhotosGridViewController imageForAsset:outIsPlaceholder:]
  -[PUPhotosGridViewController imageRequestOptionsForAsset:pixelSize:]
  -[PUPhotosGridViewController _localizedBannerTextForAsset:isDestructive:]
  -[PUPhotosGridViewController _setPreviewViewController:]
  -[PUPhotosGridViewController _setPreviewingIndexPath:]
  -[PUPhotosGridViewController _setPreviewCommitting:]
  -[PUPhotosGridViewController _previewCommitting]
  -[PUPhotosGridViewController _previewingIndexPath]
  -[PUPhotosGridViewController sender:shareAssetsInFetchResult:forAssetCollection:withCompletion:]
  -[PUPhotosGridViewController shouldPreventRevealInMomentAction]
  -[PUPhotosGridViewController configureGridCell:forItemAtIndexPath:]
  -[PUPhotosGridViewController handleToggleSelectionOfItemAtIndexPath:]
  -[PUPhotosGridViewController handleNavigateToAsset:inContainer:]
  -[PUPhotosGridViewController shouldShowMenu]
  -[PUPhotosGridViewController _beginInteractiveNavigationForItemAtIndexPath:]
  -[PUPhotosGridViewController _beginInteractiveStackCollapse:]
  -[PUPhotosGridViewController _indexesWithoutPlaceholdersFromIndexes:inSection:]
  -[PUPhotosGridViewController indexPathForAsset:hintCollection:hintIndexPath:]
  -[PUPhotosGridViewController assetIndexPathForPhotoToken:]
  -[PUPhotosGridViewController navigateToPhotosDetailsForAssetCollection:animated:]
  -[PUPhotosGridViewController displayTitleInfoForDetailsOfAssetCollection:withTitleCategory:preferredAttributesPromise:]
  -[PUPhotosGridViewController localizedTitleForAssetCollection:]
  -[PUPhotosGridViewController navigateToPhoto:inAssetContainer:refetchIfNeeded:animated:]
  -[PUPhotosGridViewController _indexPathForAsset:inAssetCollection:refetchIfNeeded:]
  -[PUPhotosGridViewController _navigateToBottomIfNeededAnimated:]
  -[PUPhotosGridViewController isPerformingCoalescedSelectionUpdates]
  -[PUPhotosGridViewController gridSettings:changedValueForKey:]
  -[PUPhotosGridViewController handleDrop:]
  -[PUPhotosGridViewController _setSwipeSelectionManager:]
  -[PUPhotosGridViewController swipeSelectionManager:updatePhotoSelectionWithIndexes:inSection:selectionMode:]
  -[PUPhotosGridViewController swipeSelectionManager:numberOfItemsInSection:]
  -[PUPhotosGridViewController swipeSelectionManager:photoCollectionAtIndex:]
  -[PUPhotosGridViewController topMarginForPhotosGlobalFooterView:]
  -[PUPhotosGridViewController _indexForPhotoCollection:]
  -[PUPhotosGridViewController _getFirstAsset:collection:]
  -[PUPhotosGridViewController _canPasteboardCopyAssetAtIndexPath:]
  -[PUPhotosGridViewController alternateContentView]
  -[PUPhotosGridViewController selectAssets:fromAssetCollection:]
  -[PUPhotosGridViewController invalidateGridLayoutIfNecessary]
  -[PUPhotosGridViewController lastUserScrollTime]
  -[PUPhotosGridViewController indexPathsForPreheatingInRect:]
  -[PUPhotosGridViewController setCustomDoneButtonItem:]
  -[PUPhotosGridViewController beginCoalescedSelectionUpdates]
  -[PUPhotosGridViewController endCoalescedSelectionUpdates]
  -[PUPhotosGridViewController deselectAllItemsAnimated:]
  -[PUPhotosGridViewController supplementalToolbarProvider]
  -[PUPhotosGridViewController setSupplementalToolbarProvider:]
  -[PUPhotosGridViewController setGridSpec:]
  -[PUPhotosGridViewController setShowsCustomDoneButtonItemOnLeft:]
  -[PUPhotosGridViewController setShowsSelectionSessionCancelButtonItemOnLeft:]
  -[PUPhotosGridViewController setCollectionViewLayoutReferenceWidth:]
  -[PUPhotosGridViewController setCollectionViewLayoutReferenceSafeAreaInsets:]
  -[PUPhotosGridViewController ppt_setDataSourceChangeHandler:]


PUPhotosGridViewControllerSpec : NSObject
 @property  {UIEdgeInsets=dddd} safeAreaInsets
 @property  {UIEdgeInsets=dddd} layoutMargins
 @property  long long sizeSubclass
 @property  {CGSize=dd} contentSizeForViewInPopover
 @property  {CGSize=dd} baseInterItemSpacing
 @property  unsigned short thumbnailImageFormat
 @property  long long cellFillMode
 @property  long long cellBannerTextAlignment
 @property  BOOL canDisplayOptionsInPopover
 @property  BOOL canDisplaySlideshowButton
 @property  BOOL shouldPlaceSelectAllButtonInRightNavigationBar
 @property  BOOL shouldPlaceDeleteInCenterToolbarPosition
 @property  BOOL canDisplayEditActionsInNavigationBar
 @property  BOOL canCommitPreview
 @property  BOOL usesStackPopTransition
 @property  BOOL displaysAvalancheStacks
 @property  BOOL wantsBackButtonTitleForPhotoBrowser
 @property  PUPhotosPickerViewControllerSpec *photosPickerViewControllerSpec
 @property  PUAlbumPickerViewControllerSpec *albumPickerViewControllerSpec
 @property  BOOL wantsCustomNavigationTransition
 @property  long long forceLoadInitialSectionCount
 @property  double sectionHeaderHeight
 @property  long long sectionHeaderStyle
 @property  {UIEdgeInsets=dddd} sectionHeaderInsets
 @property  {UIEdgeInsets=dddd} gridContentInsets

  // instance methods
  -[PUPhotosGridViewControllerSpec sectionHeaderHeight]
  -[PUPhotosGridViewControllerSpec layoutMargins]
  -[PUPhotosGridViewControllerSpec contentSizeForViewInPopover]
  -[PUPhotosGridViewControllerSpec .cxx_destruct]
  -[PUPhotosGridViewControllerSpec init]
  -[PUPhotosGridViewControllerSpec setSafeAreaInsets:]
  -[PUPhotosGridViewControllerSpec safeAreaInsets]
  -[PUPhotosGridViewControllerSpec sectionHeaderStyle]
  -[PUPhotosGridViewControllerSpec supportedInterfaceOrientations]
  -[PUPhotosGridViewControllerSpec sectionHeaderInsets]
  -[PUPhotosGridViewControllerSpec photosPickerViewControllerSpec]
  -[PUPhotosGridViewControllerSpec canDisplayOptionsInPopover]
  -[PUPhotosGridViewControllerSpec cellFillMode]
  -[PUPhotosGridViewControllerSpec canDisplayEditActionsInNavigationBar]
  -[PUPhotosGridViewControllerSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[PUPhotosGridViewControllerSpec baseInterItemSpacing]
  -[PUPhotosGridViewControllerSpec thumbnailImageFormat]
  -[PUPhotosGridViewControllerSpec usesStackPopTransition]
  -[PUPhotosGridViewControllerSpec shouldUseAspectItems]
  -[PUPhotosGridViewControllerSpec forceLoadInitialSectionCount]
  -[PUPhotosGridViewControllerSpec shouldPlaceDeleteInCenterToolbarPosition]
  -[PUPhotosGridViewControllerSpec wantsCustomNavigationTransition]
  -[PUPhotosGridViewControllerSpec canDisplaySlideshowButton]
  -[PUPhotosGridViewControllerSpec albumPickerViewControllerSpec]
  -[PUPhotosGridViewControllerSpec shouldPlaceSelectAllButtonInRightNavigationBar]
  -[PUPhotosGridViewControllerSpec displaysAvalancheStacks]
  -[PUPhotosGridViewControllerSpec cellBannerTextAlignment]
  -[PUPhotosGridViewControllerSpec wantsBackButtonTitleForPhotoBrowser]
  -[PUPhotosGridViewControllerSpec canCommitPreview]
  -[PUPhotosGridViewControllerSpec gridContentInsets]
  -[PUPhotosGridViewControllerSpec sizeSubclass]


PUPhotosGridViewControllerPhoneSpec : PUPhotosGridViewControllerSpec
  // instance methods
  -[PUPhotosGridViewControllerPhoneSpec supportedInterfaceOrientations]
  -[PUPhotosGridViewControllerPhoneSpec photosPickerViewControllerSpec]
  -[PUPhotosGridViewControllerPhoneSpec canDisplayOptionsInPopover]
  -[PUPhotosGridViewControllerPhoneSpec cellFillMode]
  -[PUPhotosGridViewControllerPhoneSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[PUPhotosGridViewControllerPhoneSpec baseInterItemSpacing]
  -[PUPhotosGridViewControllerPhoneSpec thumbnailImageFormat]
  -[PUPhotosGridViewControllerPhoneSpec shouldUseAspectItems]
  -[PUPhotosGridViewControllerPhoneSpec forceLoadInitialSectionCount]
  -[PUPhotosGridViewControllerPhoneSpec canDisplaySlideshowButton]
  -[PUPhotosGridViewControllerPhoneSpec albumPickerViewControllerSpec]
  -[PUPhotosGridViewControllerPhoneSpec shouldPlaceSelectAllButtonInRightNavigationBar]
  -[PUPhotosGridViewControllerPhoneSpec gridContentInsets]


PUPhotosGridViewControllerPhoneSearchSpec : PUPhotosGridViewControllerPhoneSpec
  // instance methods
  -[PUPhotosGridViewControllerPhoneSearchSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]


PUPhotosGridViewControllerPhoneImagePickerSpec : PUPhotosGridViewControllerPhoneSpec
  // instance methods
  -[PUPhotosGridViewControllerPhoneImagePickerSpec displaysAvalancheStacks]
  -[PUPhotosGridViewControllerPhoneImagePickerSpec canCommitPreview]


PUPhotosGridViewControllerPhoneCameraSpec : PUPhotosGridViewControllerPhoneSpec

PUPhotosGridViewControllerPadSpec : PUPhotosGridViewControllerSpec
  // instance methods
  -[PUPhotosGridViewControllerPadSpec sectionHeaderStyle]
  -[PUPhotosGridViewControllerPadSpec supportedInterfaceOrientations]
  -[PUPhotosGridViewControllerPadSpec photosPickerViewControllerSpec]
  -[PUPhotosGridViewControllerPadSpec canDisplayOptionsInPopover]
  -[PUPhotosGridViewControllerPadSpec cellFillMode]
  -[PUPhotosGridViewControllerPadSpec canDisplayEditActionsInNavigationBar]
  -[PUPhotosGridViewControllerPadSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]
  -[PUPhotosGridViewControllerPadSpec baseInterItemSpacing]
  -[PUPhotosGridViewControllerPadSpec thumbnailImageFormat]
  -[PUPhotosGridViewControllerPadSpec usesStackPopTransition]
  -[PUPhotosGridViewControllerPadSpec shouldUseAspectItems]
  -[PUPhotosGridViewControllerPadSpec shouldPlaceDeleteInCenterToolbarPosition]
  -[PUPhotosGridViewControllerPadSpec wantsCustomNavigationTransition]
  -[PUPhotosGridViewControllerPadSpec canDisplaySlideshowButton]
  -[PUPhotosGridViewControllerPadSpec albumPickerViewControllerSpec]
  -[PUPhotosGridViewControllerPadSpec shouldPlaceSelectAllButtonInRightNavigationBar]
  -[PUPhotosGridViewControllerPadSpec cellBannerTextAlignment]
  -[PUPhotosGridViewControllerPadSpec wantsBackButtonTitleForPhotoBrowser]


PUPhotosGridViewControllerPadSearchSpec : PUPhotosGridViewControllerPadSpec
  // instance methods
  -[PUPhotosGridViewControllerPadSearchSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]


PUPhotosGridViewControllerPadImagePickerSpec : PUPhotosGridViewControllerPadSpec
  // instance methods
  -[PUPhotosGridViewControllerPadImagePickerSpec thumbnailImageFormat]
  -[PUPhotosGridViewControllerPadImagePickerSpec displaysAvalancheStacks]
  -[PUPhotosGridViewControllerPadImagePickerSpec canCommitPreview]


PUPhotosGridViewControllerPadCameraSpec : PUPhotosGridViewControllerPadSpec
  // instance methods
  -[PUPhotosGridViewControllerPadCameraSpec canDisplaySlideshowButton]


PUPhotosMapGridViewControllerPhoneSpec : PUPhotosGridViewControllerPhoneSpec
  // instance methods
  -[PUPhotosMapGridViewControllerPhoneSpec usesStackPopTransition]


PUPhotosMapGridViewControllerPadSpec : PUPhotosGridViewControllerPadSpec
  // instance methods
  -[PUPhotosMapGridViewControllerPadSpec usesStackPopTransition]


PUPhotoPickerScaledFileSizeEstimator : NSObject
 @property  PHAsset *asset

  // class methods
  +[PUPhotoPickerScaledFileSizeEstimator isAssetResizable:]

  // instance methods
  -[PUPhotoPickerScaledFileSizeEstimator initWithAsset:]
  -[PUPhotoPickerScaledFileSizeEstimator .cxx_destruct]
  -[PUPhotoPickerScaledFileSizeEstimator asset]
  -[PUPhotoPickerScaledFileSizeEstimator _assetURL]
  -[PUPhotoPickerScaledFileSizeEstimator dealloc]
  -[PUPhotoPickerScaledFileSizeEstimator _assetUTI]
  -[PUPhotoPickerScaledFileSizeEstimator estimatedSizeForResizeDescriptor:]
  -[PUPhotoPickerScaledFileSizeEstimator wouldResizeAssetUsingResizeDescriptor:]
  -[PUPhotoPickerScaledFileSizeEstimator _assetOriginalSize]
  -[PUPhotoPickerScaledFileSizeEstimator _estimatedSizeForResizeDescriptor:]
  -[PUPhotoPickerScaledFileSizeEstimator _targetSizeForResizeDescriptor:]
  -[PUPhotoPickerScaledFileSizeEstimator _figContainer]


PUPhotosPanoramaViewController : PUPhotosGridViewController
 @property  PUSectionedGridLayout *mainGridLayout
 @property  PHAssetCollection *userPanoAlbum
 @property  PUPhotosPanoramaViewControllerSpec *panoramaSpec

  // instance methods
  -[PUPhotosPanoramaViewController initWithSpec:]
  -[PUPhotosPanoramaViewController .cxx_destruct]
  -[PUPhotosPanoramaViewController viewDidLoad]
  -[PUPhotosPanoramaViewController viewWillAppear:]
  -[PUPhotosPanoramaViewController updateSpec]
  -[PUPhotosPanoramaViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUPhotosPanoramaViewController wantsGlobalFooter]
  -[PUPhotosPanoramaViewController newGridLayout]
  -[PUPhotosPanoramaViewController cellFillMode]
  -[PUPhotosPanoramaViewController updateLayoutMetrics]
  -[PUPhotosPanoramaViewController canBeginStackCollapseTransition]
  -[PUPhotosPanoramaViewController configureGlobalFooterView:]
  -[PUPhotosPanoramaViewController maximumThumbnailRequestSize]
  -[PUPhotosPanoramaViewController _updatePhotoDecorationForCell:animated:]
  -[PUPhotosPanoramaViewController imageRequestOptionsForAsset:pixelSize:]
  -[PUPhotosPanoramaViewController configureGridCell:forItemAtIndexPath:]
  -[PUPhotosPanoramaViewController setUserPanoAlbum:]
  -[PUPhotosPanoramaViewController _configureCollectionViewGridLayout:]
  -[PUPhotosPanoramaViewController panoramaSpec]
  -[PUPhotosPanoramaViewController userPanoAlbum]
  -[PUPhotosPanoramaViewController rotatePhotoViewToHorizontalIfNeeded:withAsset:]
  -[PUPhotosPanoramaViewController updatePhotoViewContent:withThumbnailImage:]
  -[PUPhotosPanoramaViewController setPanoramaSpec:]


PUPhotosPanoramaViewControllerSpec : PULegacyViewControllerSpec
  // class methods
  +[PUPhotosPanoramaViewControllerSpec padSpec]
  +[PUPhotosPanoramaViewControllerSpec phoneSpec]

  // instance methods
  -[PUPhotosPanoramaViewControllerSpec sectionHeaderHeight]
  -[PUPhotosPanoramaViewControllerSpec gridSpec]
  -[PUPhotosPanoramaViewControllerSpec supportedInterfaceOrientations]
  -[PUPhotosPanoramaViewControllerSpec cellFillMode]
  -[PUPhotosPanoramaViewControllerSpec thumbnailImageFormat]
  -[PUPhotosPanoramaViewControllerSpec globalFooterHeight]
  -[PUPhotosPanoramaViewControllerSpec configureCollectionViewGridLayout:referenceWidth:safeAreaInsets:]
  -[PUPhotosPanoramaViewControllerSpec _itemSizeForWidth:]
  -[PUPhotosPanoramaViewControllerSpec fastThumbnailImageFormat]


PUPhotosPanoramaViewControllerPhoneSpec : PUPhotosPanoramaViewControllerSpec
  // instance methods
  -[PUPhotosPanoramaViewControllerPhoneSpec .cxx_destruct]
  -[PUPhotosPanoramaViewControllerPhoneSpec gridSpec]
  -[PUPhotosPanoramaViewControllerPhoneSpec _itemSizeForWidth:]


PUPhotosPanoramaViewControllerPadSpec : PUPhotosPanoramaViewControllerSpec
  // instance methods
  -[PUPhotosPanoramaViewControllerPadSpec .cxx_destruct]
  -[PUPhotosPanoramaViewControllerPadSpec gridSpec]
  -[PUPhotosPanoramaViewControllerPadSpec _itemSizeForWidth:]


PUPhotosPickerSessionInfo : PUSessionInfo
  // instance methods
  -[PUPhotosPickerSessionInfo isSelectingAssets]
  -[PUPhotosPickerSessionInfo localizedPrompt]
  -[PUPhotosPickerSessionInfo _initWithTargetAlbum:orTargetAlbumName:]
  -[PUPhotosPickerSessionInfo initWithTargetAlbum:]
  -[PUPhotosPickerSessionInfo initWithTargetAlbumName:]


PUPhotosPickerViewController : UIViewController <UITabBarControllerDelegate, PLAssetContainerListChangeObserver, PUSessionInfoObserver>
 @property  PUTabbedLibraryViewController *_tabbedLibraryViewController
 @property  PHPhotosPickerOptions *photosPickerOptions
 @property  int currentContentMode
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotosPickerViewController viewWillLayoutSubviews]
  -[PUPhotosPickerViewController .cxx_destruct]
  -[PUPhotosPickerViewController shouldAutorotate]
  -[PUPhotosPickerViewController setCompletionHandler:]
  -[PUPhotosPickerViewController _preferredWhitePointAdaptivityStyle]
  -[PUPhotosPickerViewController tabBarController:didSelectViewController:]
  -[PUPhotosPickerViewController initWithSpec:targetAlbumName:options:]
  -[PUPhotosPickerViewController dealloc]
  -[PUPhotosPickerViewController completionHandler]
  -[PUPhotosPickerViewController loadView]
  -[PUPhotosPickerViewController supportedInterfaceOrientations]
  -[PUPhotosPickerViewController didReceiveMemoryWarning]
  -[PUPhotosPickerViewController assetContainerListDidChange:]
  -[PUPhotosPickerViewController initWithSpec:targetAlbumName:]
  -[PUPhotosPickerViewController sessionInfoStatusDidChange:]
  -[PUPhotosPickerViewController initWithSpec:targetAlbum:]
  -[PUPhotosPickerViewController _tabbedLibraryViewController]
  -[PUPhotosPickerViewController _initWithSpec:targetAlbum:orTargetAlbumName:options:]
  -[PUPhotosPickerViewController currentContentMode]
  -[PUPhotosPickerViewController _setTabbedLibraryViewController:]
  -[PUPhotosPickerViewController setCurrentContentMode:]
  -[PUPhotosPickerViewController photosPickerOptions]
  -[PUPhotosPickerViewController setPhotosPickerOptions:]


PUPhotosPickerViewControllerSpec : NSObject
 @property  unsigned long supportedInterfaceOrientations
 @property  PUTabbedLibraryViewControllerSpec *tabbedLibraryViewControllerSpec

  // instance methods
  -[PUPhotosPickerViewControllerSpec supportedInterfaceOrientations]
  -[PUPhotosPickerViewControllerSpec configureSessionInfo:]
  -[PUPhotosPickerViewControllerSpec tabbedLibraryViewControllerSpec]


PUPhotosPickerViewControllerPhoneSpec : PUPhotosPickerViewControllerSpec
  // instance methods
  -[PUPhotosPickerViewControllerPhoneSpec supportedInterfaceOrientations]
  -[PUPhotosPickerViewControllerPhoneSpec configureSessionInfo:]
  -[PUPhotosPickerViewControllerPhoneSpec tabbedLibraryViewControllerSpec]


PUPhotosPickerViewControllerPadSpec : PUPhotosPickerViewControllerSpec
  // instance methods
  -[PUPhotosPickerViewControllerPadSpec supportedInterfaceOrientations]
  -[PUPhotosPickerViewControllerPadSpec configureSessionInfo:]
  -[PUPhotosPickerViewControllerPadSpec bannerViewStyle]
  -[PUPhotosPickerViewControllerPadSpec tabbedLibraryViewControllerSpec]


PUPhotosPreviewPresentationController : _UIPreviewPresentationController
 @property  <PUPhotosPreviewPresentationControllerDelegate> *photosPreviewingDelegate

  // instance methods
  -[PUPhotosPreviewPresentationController .cxx_destruct]
  -[PUPhotosPreviewPresentationController _revealTransitionDidComplete:]
  -[PUPhotosPreviewPresentationController setPhotosPreviewingDelegate:]
  -[PUPhotosPreviewPresentationController photosPreviewingDelegate]


PUPhotosPreviewTransitionDelegate : _UIPreviewTransitionDelegate
 @property  <PUPhotosPreviewPresentationControllerDelegate> *photosPreviewingDelegate

  // instance methods
  -[PUPhotosPreviewTransitionDelegate .cxx_destruct]
  -[PUPhotosPreviewTransitionDelegate presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[PUPhotosPreviewTransitionDelegate setPhotosPreviewingDelegate:]
  -[PUPhotosPreviewTransitionDelegate photosPreviewingDelegate]


PUPhotosSharingCollectionViewItemSublayout : NSObject
 @property  NSIndexPath *indexPath
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} itemFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleItemFrame
 @property  {CGSize=dd} selectionBadgeSize
 @property  {CGSize=dd} optionBadgeSize
 @property  double bottomBadgeInset
 @property  {UIOffset=dd} badgesOffset
 @property  unsigned long badgesCorner
 @property  UICollectionViewLayoutAttributes *selectionBadgeLayoutAttributes
 @property  UICollectionViewLayoutAttributes *optionBadgeLayoutAttributes
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} badgesContainerFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} floatingBadgesContainerFrame

  // instance methods
  -[PUPhotosSharingCollectionViewItemSublayout itemFrame]
  -[PUPhotosSharingCollectionViewItemSublayout .cxx_destruct]
  -[PUPhotosSharingCollectionViewItemSublayout indexPath]
  -[PUPhotosSharingCollectionViewItemSublayout selectionBadgeSize]
  -[PUPhotosSharingCollectionViewItemSublayout badgesCorner]
  -[PUPhotosSharingCollectionViewItemSublayout badgesOffset]
  -[PUPhotosSharingCollectionViewItemSublayout setBadgesOffset:]
  -[PUPhotosSharingCollectionViewItemSublayout setBadgesCorner:]
  -[PUPhotosSharingCollectionViewItemSublayout initWithIndexPath:itemFrame:]
  -[PUPhotosSharingCollectionViewItemSublayout setSelectionBadgeSize:]
  -[PUPhotosSharingCollectionViewItemSublayout setOptionBadgeSize:]
  -[PUPhotosSharingCollectionViewItemSublayout optionBadgeSize]
  -[PUPhotosSharingCollectionViewItemSublayout prepareSublayout]
  -[PUPhotosSharingCollectionViewItemSublayout setFloatingOffset:]
  -[PUPhotosSharingCollectionViewItemSublayout visibleItemFrame]
  -[PUPhotosSharingCollectionViewItemSublayout setVisibleItemFrame:]
  -[PUPhotosSharingCollectionViewItemSublayout bottomBadgeInset]
  -[PUPhotosSharingCollectionViewItemSublayout setBottomBadgeInset:]
  -[PUPhotosSharingCollectionViewItemSublayout selectionBadgeLayoutAttributes]
  -[PUPhotosSharingCollectionViewItemSublayout optionBadgeLayoutAttributes]
  -[PUPhotosSharingCollectionViewItemSublayout badgesContainerFrame]
  -[PUPhotosSharingCollectionViewItemSublayout floatingBadgesContainerFrame]


PUPhotosSharingCollectionViewLayout : PUHorizontalTiledCollectionViewLayout
 @property  {UIOffset=dd} sharingBadgesOffset
 @property  unsigned long sharingBadgesCorner
 @property  NSIndexPath *zoomingCellIndexPath
 @property  <PUPhotosSharingCollectionViewLayoutDelegate> *delegate

  // instance methods
  -[PUPhotosSharingCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUPhotosSharingCollectionViewLayout invalidationContextForBoundsChange:]
  -[PUPhotosSharingCollectionViewLayout .cxx_destruct]
  -[PUPhotosSharingCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUPhotosSharingCollectionViewLayout invalidateCachedLayout]
  -[PUPhotosSharingCollectionViewLayout _supportsAdvancedTransitionAnimations]
  -[PUPhotosSharingCollectionViewLayout _didFinishLayoutTransitionAnimations:]
  -[PUPhotosSharingCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUPhotosSharingCollectionViewLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUPhotosSharingCollectionViewLayout zoomingCellIndexPath]
  -[PUPhotosSharingCollectionViewLayout setZoomingCellIndexPath:]
  -[PUPhotosSharingCollectionViewLayout sharingBadgesOffset]
  -[PUPhotosSharingCollectionViewLayout _floatingBadgeContainerFrameForBadgeContainerFrame:itemFrame:visibleItemFrame:]
  -[PUPhotosSharingCollectionViewLayout sharingBadgesCorner]
  -[PUPhotosSharingCollectionViewLayout _floatingBadgeOffsetForBadgesContainerFrame:ItemFrame:visibleItemFrame:]
  -[PUPhotosSharingCollectionViewLayout _sublayoutForItemLayoutAttributes:]
  -[PUPhotosSharingCollectionViewLayout setSharingBadgesOffset:]
  -[PUPhotosSharingCollectionViewLayout setSharingBadgesCorner:]


PUPhotosSharingGridCell : UICollectionViewCell
 @property  PUPhotoView *photoView
 @property  long long currentImageRequestID

  // instance methods
  -[PUPhotosSharingGridCell setHighlighted:]
  -[PUPhotosSharingGridCell _updateSubviewOrdering]
  -[PUPhotosSharingGridCell _updateHighlight]
  -[PUPhotosSharingGridCell .cxx_destruct]
  -[PUPhotosSharingGridCell layoutSubviews]
  -[PUPhotosSharingGridCell prepareForReuse]
  -[PUPhotosSharingGridCell initWithFrame:]
  -[PUPhotosSharingGridCell photoView]
  -[PUPhotosSharingGridCell setCurrentImageRequestID:]
  -[PUPhotosSharingGridCell currentImageRequestID]


PUPhotosZoomingSharingGridCell : PUPhotosSharingGridCell
  // instance methods
  -[PUPhotosZoomingSharingGridCell .cxx_destruct]
  -[PUPhotosZoomingSharingGridCell layoutSubviews]
  -[PUPhotosZoomingSharingGridCell initWithFrame:selectionView:optionView:layoutAnchor:]


PUPhotosSharingOptionView : UICollectionReusableView <PXUIAssetBadgeViewDelegate>
 @property  BOOL interactive
 @property  BOOL toggled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotosSharingOptionView setInteractive:]
  -[PUPhotosSharingOptionView isInteractive]
  -[PUPhotosSharingOptionView .cxx_destruct]
  -[PUPhotosSharingOptionView layoutSubviews]
  -[PUPhotosSharingOptionView sizeThatFits:]
  -[PUPhotosSharingOptionView isToggled]
  -[PUPhotosSharingOptionView initWithFrame:]
  -[PUPhotosSharingOptionView pointInside:withEvent:]
  -[PUPhotosSharingOptionView setTarget:action:]
  -[PUPhotosSharingOptionView assetBadgeView:userDidSelectBadges:]
  -[PUPhotosSharingOptionView setToggled:]


PUPhotosSharingProgressOverlay : UIView
 @property  UIView *progressView
 @property  UIWindow *cachedMainWindow

  // instance methods
  -[PUPhotosSharingProgressOverlay willRemoveSubview:]
  -[PUPhotosSharingProgressOverlay progressView]
  -[PUPhotosSharingProgressOverlay .cxx_destruct]
  -[PUPhotosSharingProgressOverlay addProgressView:]
  -[PUPhotosSharingProgressOverlay setShowing:animated:]
  -[PUPhotosSharingProgressOverlay setProgressView:]
  -[PUPhotosSharingProgressOverlay initWithFrame:]
  -[PUPhotosSharingProgressOverlay _mainWindow]
  -[PUPhotosSharingProgressOverlay cachedMainWindow]
  -[PUPhotosSharingProgressOverlay setCachedMainWindow:]
  -[PUPhotosSharingProgressOverlay _installInStatusBarWindow]
  -[PUPhotosSharingProgressOverlay _screenshotImage]
  -[PUPhotosSharingProgressOverlay _grayScaleImageFromImage:]
  -[PUPhotosSharingProgressOverlay _setupOverlayAnimated:]
  -[PUPhotosSharingProgressOverlay _tearDownOverlayAnimated:]


PUPhotosSharingSelectionView : UICollectionReusableView
  // instance methods
  -[PUPhotosSharingSelectionView .cxx_destruct]
  -[PUPhotosSharingSelectionView setSelected:]
  -[PUPhotosSharingSelectionView initWithFrame:]


PUPhotosSharingTransition : PUModalTransition
 @property  UICollectionViewLayout *_transitionLayout
 @property  UIViewController<PUPhotosSharingTransitionViewController> *sharingTransitionViewController
 @property  PUPhotosSharingTransitionContext *photosSharingTransitionContext
 @property  <PUPhotosSharingTransitionDelegate> *delegate

  // instance methods
  -[PUPhotosSharingTransition .cxx_destruct]
  -[PUPhotosSharingTransition setDelegate:]
  -[PUPhotosSharingTransition delegate]
  -[PUPhotosSharingTransition _transitionLayout]
  -[PUPhotosSharingTransition setPhotosSharingTransitionContext:]
  -[PUPhotosSharingTransition _setTransitionLayout:]
  -[PUPhotosSharingTransition animatePresentTransition]
  -[PUPhotosSharingTransition animateDismissTransition]
  -[PUPhotosSharingTransition sharingTransitionViewController]
  -[PUPhotosSharingTransition setSharingTransitionViewController:]
  -[PUPhotosSharingTransition photosSharingTransitionContext]


PUPhotosSharingTransitionContext : NSObject
 @property  <PHAssetCollectionDataSource> *assetCollectionsDataSource
 @property  NSIndexPath *keyAssetIndexPath

  // instance methods
  -[PUPhotosSharingTransitionContext .cxx_destruct]
  -[PUPhotosSharingTransitionContext keyAssetIndexPath]
  -[PUPhotosSharingTransitionContext setAssetCollectionsDataSource:]
  -[PUPhotosSharingTransitionContext assetCollectionsDataSource]
  -[PUPhotosSharingTransitionContext setKeyAssetIndexPath:]


PUAssetPickerContainerController : UIViewController <UISearchResultsUpdating, UISearchBarDelegate, PXPhotosViewDelegate, PXScrollViewControllerObserver, PUAssetPickerSearchSuggestionsSelectionDelegate, PXChangeObserver, PUAssetPickerSuggestionsViewControllerActionHandler>
 @property  PUPhotoPickerResizeTaskDescriptorViewModel *resizeTaskDescriptorViewModel
 @property  PXSelectionCoordinator *selectionCoordinator
 @property  <PUAssetPickerContainerControllerActionHandler> *containerControllerActionHandler
 @property  UISegmentedControl *navigationBarSegmentedControl
 @property  long long previousNavigationBarSegmentedControlSelectedIndex
 @property  UIBarButtonItem *navigationBarAddButton
 @property  UIBarButtonItem *navigationBarDoneButton
 @property  UIBarButtonItem *navigationBarCancelButton
 @property  UIBarButtonItem *navigationBarClearButton
 @property  UIButton *toolbarSelectedItemsButton
 @property  UILabel *toolbarFileSizeLabel
 @property  UIBarButtonItem *toolbarSelectedItemsFileSizeStackView
 @property  UIBarButtonItem *toolbarSelectAllButton
 @property  UIBarButtonItem *toolbarDeselectAllButton
 @property  PXPhotosUIViewController *photosViewController
 @property  PXGAnchor *pinToTopAnchor
 @property  PXAssetsDataSourceManager *photosDataSourceManager
 @property  PXSectionedSelectionManager *photosSelectionManager
 @property  BOOL allowSafeAreaChangeAnchor
 @property  PUAlbumsGadgetViewController *allAlbumsGadgetViewController
 @property  UISearchController *searchController
 @property  PXSearchQueryController *queryController
 @property  PXSearchComposableDataSource *searchSuggestionsCollectionViewDataSource
 @property  PUAssetPickerSearchSuggestionsHeaderView *searchSuggestionsHeaderView
 @property  PUPickerConfiguration *configuration
 @property  PUSessionInfo *sessionInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAssetPickerContainerController photosTabTitleForConfiguration:]
  +[PUAssetPickerContainerController _setupSearchQueryControllerWithSuggestionsSectionProvider:photosDataSourceManager:suggestionsHeaderView:photosViewController:]
  +[PUAssetPickerContainerController _hideSearchBarWhenScrolling]

  // instance methods
  -[PUAssetPickerContainerController viewSafeAreaInsetsDidChange]
  -[PUAssetPickerContainerController px_gridPresentation]
  -[PUAssetPickerContainerController sessionInfo]
  -[PUAssetPickerContainerController scrollViewControllerDidScroll:]
  -[PUAssetPickerContainerController updateBars]
  -[PUAssetPickerContainerController queryController]
  -[PUAssetPickerContainerController traitCollectionDidChange:]
  -[PUAssetPickerContainerController searchController]
  -[PUAssetPickerContainerController configuration]
  -[PUAssetPickerContainerController _updateNavigationBar]
  -[PUAssetPickerContainerController updateSearchResultsForSearchController:]
  -[PUAssetPickerContainerController .cxx_destruct]
  -[PUAssetPickerContainerController viewDidLoad]
  -[PUAssetPickerContainerController viewDidAppear:]
  -[PUAssetPickerContainerController didSelectSuggestionAtIndexPath:collectionView:]
  -[PUAssetPickerContainerController photosViewController:didPickAssetReference:]
  -[PUAssetPickerContainerController ppt_prepareForSearchTest:]
  -[PUAssetPickerContainerController searchBarSearchButtonClicked:]
  -[PUAssetPickerContainerController resizeTaskDescriptorViewModel]
  -[PUAssetPickerContainerController viewWillAppear:]
  -[PUAssetPickerContainerController dealloc]
  -[PUAssetPickerContainerController observable:didChange:context:]
  -[PUAssetPickerContainerController searchBarShouldBeginEditing:]
  -[PUAssetPickerContainerController initWithConfiguration:loadingStatusManager:resizeTaskDescriptorViewModel:selectionCoordinator:actionHandler:]
  -[PUAssetPickerContainerController selectionCoordinator]
  -[PUAssetPickerContainerController handleNavigationBarSegmentedControl:]
  -[PUAssetPickerContainerController handleNavigationBarAddButton:]
  -[PUAssetPickerContainerController handleNavigationBarCancelButton:]
  -[PUAssetPickerContainerController handleNavigationBarClearButton:]
  -[PUAssetPickerContainerController handleToolbarSelectedItemsButton:]
  -[PUAssetPickerContainerController handleToolbarSelectAllButton:]
  -[PUAssetPickerContainerController handleToolbarDeselectAllButton:]
  -[PUAssetPickerContainerController _setupCollectionViewLayoutWithSectionProviders:]
  -[PUAssetPickerContainerController _createSearchController]
  -[PUAssetPickerContainerController photosViewController]
  -[PUAssetPickerContainerController searchSuggestionsHeaderView]
  -[PUAssetPickerContainerController pinToTopAnchor]
  -[PUAssetPickerContainerController setPinToTopAnchor:]
  -[PUAssetPickerContainerController containerControllerActionHandler]
  -[PUAssetPickerContainerController allowSafeAreaChangeAnchor]
  -[PUAssetPickerContainerController setAllowSafeAreaChangeAnchor:]
  -[PUAssetPickerContainerController _updateToolbarBar]
  -[PUAssetPickerContainerController navigationBarSegmentedControl]
  -[PUAssetPickerContainerController navigationBarClearButton]
  -[PUAssetPickerContainerController navigationBarCancelButton]
  -[PUAssetPickerContainerController navigationBarDoneButton]
  -[PUAssetPickerContainerController navigationBarAddButton]
  -[PUAssetPickerContainerController allAlbumsGadgetViewController]
  -[PUAssetPickerContainerController toolbarFileSizeLabel]
  -[PUAssetPickerContainerController toolbarSelectedItemsButton]
  -[PUAssetPickerContainerController toolbarSelectedItemsFileSizeStackView]
  -[PUAssetPickerContainerController photosSelectionManager]
  -[PUAssetPickerContainerController toolbarDeselectAllButton]
  -[PUAssetPickerContainerController toolbarSelectAllButton]
  -[PUAssetPickerContainerController previousNavigationBarSegmentedControlSelectedIndex]
  -[PUAssetPickerContainerController setPreviousNavigationBarSegmentedControlSelectedIndex:]
  -[PUAssetPickerContainerController _sectionLayoutForSection:environment:]
  -[PUAssetPickerContainerController searchSuggestionsCollectionViewDataSource]
  -[PUAssetPickerContainerController _searchSuggestionLimit]
  -[PUAssetPickerContainerController _updateSearchFieldWithSuggestion:]
  -[PUAssetPickerContainerController photosViewController:animationForProposedAnimation:]
  -[PUAssetPickerContainerController headerViewForPhotosViewController:]
  -[PUAssetPickerContainerController allowsContextMenuInteractionForPhotosViewController:]
  -[PUAssetPickerContainerController suggestionsViewController:didTapAsset:]
  -[PUAssetPickerContainerController photosDataSourceManager]
  -[PUAssetPickerContainerController ppt_switchToAlbumsTab]


PUPhotosSharingViewControllerSpec : NSObject
 @property  double interItemSpacing
 @property  {CGSize=dd} selectionBadgeSize
 @property  {CGSize=dd} optionBadgeSize
 @property  {UIOffset=dd} selectionBadgeOffset
 @property  unsigned long selectionBadgeCorner
 @property  unsigned long optionBadgeCorner

  // instance methods
  -[PUPhotosSharingViewControllerSpec interItemSpacing]
  -[PUPhotosSharingViewControllerSpec selectionBadgeSize]
  -[PUPhotosSharingViewControllerSpec selectionBadgeOffset]
  -[PUPhotosSharingViewControllerSpec selectionBadgeCorner]
  -[PUPhotosSharingViewControllerSpec optionBadgeSize]
  -[PUPhotosSharingViewControllerSpec maximizeImageHeightForBounds:]
  -[PUPhotosSharingViewControllerSpec interItemSpacingForWidth:]
  -[PUPhotosSharingViewControllerSpec optionBadgeCorner]
  -[PUPhotosSharingViewControllerSpec embedsActivityViewForBounds:horizontalSizeClass:verticalSizeClass:]


PUCarouselSharingViewController : UIViewController <UIGestureRecognizerDelegate, UICollectionViewDataSource, UICollectionViewDelegate, PUPhotosSharingCollectionViewLayoutDelegate, PUScrollViewSpeedometerDelegate, PXPhotoLibraryUIChangeObserver, PUPhotoViewContentHelperDelegate, PUPhotosSharingTransitionViewController, PHAssetCollectionDataSource, PUOneUpPhotosSharingTransitionViewController, PUOneUpAssetTransitionViewController>
 @property  PUPhotosSharingViewControllerSpec *spec
 @property  UICollectionView *mainCollectionView
 @property  PUPhotosSharingCollectionViewLayout *mainCollectionViewLayout
 @property  BOOL _viewInSyncWithModel
 @property  PUPhotoSelectionManager *photoSelectionManager
 @property  PHCachingImageManager *cachingImageManager
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _previousPreheatRect
 @property  NSMutableSet *_preheatedAssets
 @property  UICollectionViewLayout *_transitionLayout
 @property  PUPhotosSharingTransitionContext *photosSharingTransitionContext
 @property  PUAssetTransitionInfo *assetTransitionInfo
 @property  PUAssetTransitionInfo *leadingAssetTransitionInfo
 @property  PUAssetTransitionInfo *trailingAssetTransitionInfo
 @property  PHAsset *_lastKnownReferenceAsset
 @property  NSIndexPath *_lastKnownReferenceIndexPath
 @property  BOOL _loopingPlaybackAllowed
 @property  PXAssetBadgeManager *_badgeManager
 @property  @? _pptOnDidEndScrollingBlock
 @property  NSObject<OS_os_log> *sharingLog
 @property  NSMutableArray *_photoViewLoaderBlocks
 @property  NSMutableArray *_livePhotoViewLoaderBlocks
 @property  PXPhotosDataSource *photosDataSource
 @property  PHFetchResult *photoCollectionsFetchResult
 @property  <PUCarouselSharingViewControllerDelegate> *delegate
 @property  PHAsset *currentAsset
 @property  NSString *localizedSelectionTitle
 @property  BOOL readyForInteraction
 @property  BOOL sendAsOriginals
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHFetchResult *assetCollectionsFetchResult

  // instance methods
  -[PUCarouselSharingViewController photosDataSource]
  -[PUCarouselSharingViewController collectionView:cellForItemAtIndexPath:]
  -[PUCarouselSharingViewController collectionView:numberOfItemsInSection:]
  -[PUCarouselSharingViewController prepareForPhotoLibraryChange:]
  -[PUCarouselSharingViewController collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:]
  -[PUCarouselSharingViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:]
  -[PUCarouselSharingViewController setPhotosDataSource:]
  -[PUCarouselSharingViewController currentIndexPath]
  -[PUCarouselSharingViewController numberOfSectionsInCollectionView:]
  -[PUCarouselSharingViewController viewWillLayoutSubviews]
  -[PUCarouselSharingViewController photoLibraryDidChangeOnMainQueue:]
  -[PUCarouselSharingViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUCarouselSharingViewController collectionView:didEndDisplayingCell:forItemAtIndexPath:]
  -[PUCarouselSharingViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUCarouselSharingViewController .cxx_destruct]
  -[PUCarouselSharingViewController scrollViewDidEndScrollingAnimation:]
  -[PUCarouselSharingViewController viewDidLoad]
  -[PUCarouselSharingViewController setDelegate:]
  -[PUCarouselSharingViewController viewDidAppear:]
  -[PUCarouselSharingViewController mainCollectionView]
  -[PUCarouselSharingViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUCarouselSharingViewController assetsInAssetCollection:]
  -[PUCarouselSharingViewController scrollViewDidEndDragging:willDecelerate:]
  -[PUCarouselSharingViewController scrollViewDidScroll:]
  -[PUCarouselSharingViewController gestureRecognizerShouldBegin:]
  -[PUCarouselSharingViewController _numberOfSections]
  -[PUCarouselSharingViewController viewWillDisappear:]
  -[PUCarouselSharingViewController viewDidLayoutSubviews]
  -[PUCarouselSharingViewController gestureRecognizer:shouldReceiveTouch:]
  -[PUCarouselSharingViewController scrollViewWillBeginDragging:]
  -[PUCarouselSharingViewController viewWillAppear:]
  -[PUCarouselSharingViewController setSpec:]
  -[PUCarouselSharingViewController delegate]
  -[PUCarouselSharingViewController currentAsset]
  -[PUCarouselSharingViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUCarouselSharingViewController spec]
  -[PUCarouselSharingViewController isReadyForInteraction]
  -[PUCarouselSharingViewController dealloc]
  -[PUCarouselSharingViewController photoSelectionManager]
  -[PUCarouselSharingViewController sendAsOriginals]
  -[PUCarouselSharingViewController _numberOfItemsInSection:]
  -[PUCarouselSharingViewController initWithPhotoCollectionsFetchResult:assetsFetchResultsByAssetCollection:selection:]
  -[PUCarouselSharingViewController currentActivityAssetItems]
  -[PUCarouselSharingViewController setReadyForInteraction:]
  -[PUCarouselSharingViewController scrollViewDidEndDecelerating:]
  -[PUCarouselSharingViewController prepareForDismissingForced:]
  -[PUCarouselSharingViewController cachingImageManager]
  -[PUCarouselSharingViewController setSendAsOriginals:]
  -[PUCarouselSharingViewController localizedSelectionTitle]
  -[PUCarouselSharingViewController _badgeManager]
  -[PUCarouselSharingViewController _transitionLayout]
  -[PUCarouselSharingViewController _updateInterfaceForModelReloadAnimated:]
  -[PUCarouselSharingViewController _resetPreheating]
  -[PUCarouselSharingViewController _updatePreheatedAssets]
  -[PUCarouselSharingViewController _setPreviousPreheatRect:]
  -[PUCarouselSharingViewController _previousPreheatRect]
  -[PUCarouselSharingViewController _setMainCollectionViewLayout:]
  -[PUCarouselSharingViewController _setMainCollectionView:]
  -[PUCarouselSharingViewController assetCollectionsFetchResult]
  -[PUCarouselSharingViewController _updateMainViewAnimated:]
  -[PUCarouselSharingViewController _indexPathOfCenterVisibleItemInCollectionView:]
  -[PUCarouselSharingViewController _pageToIndexPath:animated:]
  -[PUCarouselSharingViewController _handleTapInMainCollectionView:]
  -[PUCarouselSharingViewController _updatePhotoForAsset:cell:atIndexPath:]
  -[PUCarouselSharingViewController _handleTapAtIndexPath:]
  -[PUCarouselSharingViewController _horizontalOffsetInCollectionView:forCenteringOnItemAtIndexPath:]
  -[PUCarouselSharingViewController _getFirstValidIndexPath:lastValidIndexPath:]
  -[PUCarouselSharingViewController _selectionViewAtIndexPath:forCollectionView:]
  -[PUCarouselSharingViewController _updateCell:forItemAtIndexPath:]
  -[PUCarouselSharingViewController setPhotosSharingTransitionContext:]
  -[PUCarouselSharingViewController _frameAtIndexPath:inView:]
  -[PUCarouselSharingViewController _setPreheatedAssets:]
  -[PUCarouselSharingViewController _preheatedAssets]
  -[PUCarouselSharingViewController layout:collectionView:sizeForItemAtIndexPath:]
  -[PUCarouselSharingViewController transitionCollectionView]
  -[PUCarouselSharingViewController setPhotosSharingTransitionLayout:animated:]
  -[PUCarouselSharingViewController setOneUpPhotosSharingTransitionContext:]
  -[PUCarouselSharingViewController setOneUpPhotosSharingTransitionInfo:]
  -[PUCarouselSharingViewController oneUpAssetTransition:requestTransitionContextWithCompletion:]
  -[PUCarouselSharingViewController oneUpAssetTransitionAssetFinalFrame:]
  -[PUCarouselSharingViewController _assetAtIndexPath:]
  -[PUCarouselSharingViewController _setTransitionLayout:]
  -[PUCarouselSharingViewController scrollViewSpeedometer:regimeDidChange:from:]
  -[PUCarouselSharingViewController layout:collectionView:referenceIndexPathWithOffsetX:]
  -[PUCarouselSharingViewController setPhotoSelectionManager:]
  -[PUCarouselSharingViewController trailingAssetTransitionInfo]
  -[PUCarouselSharingViewController leadingAssetTransitionInfo]
  -[PUCarouselSharingViewController setTrailingAssetTransitionInfo:]
  -[PUCarouselSharingViewController setLeadingAssetTransitionInfo:]
  -[PUCarouselSharingViewController referenceAssetTransitionInfo]
  -[PUCarouselSharingViewController adjacentVisibleAssetsTransitionInfos]
  -[PUCarouselSharingViewController _updateVisibleCells]
  -[PUCarouselSharingViewController _arrowKey:]
  -[PUCarouselSharingViewController frameForBadgeOfKind:forItemFrame:atIndexPath:]
  -[PUCarouselSharingViewController photoViewContentHelper:livePhotoWillBeginPlaybackWithStyle:]
  -[PUCarouselSharingViewController _indexForPhotoCollection:]
  -[PUCarouselSharingViewController layout:collectionView:sizeForBadgeViewOfKind:forItemAtIndexPath:]
  -[PUCarouselSharingViewController layout:collectionView:bottomBadgeInsetforItemAtIndexPath:]
  -[PUCarouselSharingViewController layout:collectionView:itemAtIndexPath:didChangeToVisibleFrame:]
  -[PUCarouselSharingViewController photosSharingTransitionContext]
  -[PUCarouselSharingViewController _setViewInSyncWithModel:]
  -[PUCarouselSharingViewController _shouldShowAsset:]
  -[PUCarouselSharingViewController _collectionViewContentFrame]
  -[PUCarouselSharingViewController _handleStillImageRequestResult:info:forCell:indexPath:]
  -[PUCarouselSharingViewController assetTransitionInfo]
  -[PUCarouselSharingViewController _handleSchedulingStillPhotoRequestResult:forCell:tag:]
  -[PUCarouselSharingViewController _isLoopingPlaybackAllowed]
  -[PUCarouselSharingViewController _handleLoopingVideoRequestResult:forCell:asset:tag:]
  -[PUCarouselSharingViewController _handleAnimatedImageResult:forCell:asset:tag:]
  -[PUCarouselSharingViewController _handleSchedulingLivePhotoRequestResult:forCell:tag:]
  -[PUCarouselSharingViewController _handleStillPhotoRequestResult:forCell:tag:]
  -[PUCarouselSharingViewController _photoViewLoaderBlocks]
  -[PUCarouselSharingViewController _handleLivePhotoRequestResult:forCell:tag:]
  -[PUCarouselSharingViewController _livePhotoViewLoaderBlocks]
  -[PUCarouselSharingViewController sharingLog]
  -[PUCarouselSharingViewController _photoCollectionAtIndex:]
  -[PUCarouselSharingViewController _updateAdditionalContentForAsset:cell:]
  -[PUCarouselSharingViewController _activityAssetItemForAsset:createIfNecessary:]
  -[PUCarouselSharingViewController _indexPathInCollectionView:closestToContentOffsetX:]
  -[PUCarouselSharingViewController _indexPathInCollectionView:closestToPoint:]
  -[PUCarouselSharingViewController photoCollectionsFetchResult]
  -[PUCarouselSharingViewController _updateOptionView:atIndexPath:]
  -[PUCarouselSharingViewController _lastKnownReferenceIndexPath]
  -[PUCarouselSharingViewController _playLivePhotoHintIfNeededAtIndexPath:]
  -[PUCarouselSharingViewController _playVitalityHintAfterViewDidAppear]
  -[PUCarouselSharingViewController _updatedActivityAssetItemsForAssets:]
  -[PUCarouselSharingViewController _addActivityAssetItem:]
  -[PUCarouselSharingViewController _removeActivityAssetItem:]
  -[PUCarouselSharingViewController _setSelected:atIndexPath:animated:]
  -[PUCarouselSharingViewController _isAnyAssetSelected]
  -[PUCarouselSharingViewController _replaceActivityAssetItem:withAssetItem:notifyDelegate:]
  -[PUCarouselSharingViewController _getMainCollectionViewFrame:collectionViewLayoutInsets:]
  -[PUCarouselSharingViewController mainCollectionViewLayout]
  -[PUCarouselSharingViewController _setLastKnownReferenceAsset:indexPath:]
  -[PUCarouselSharingViewController _setLastKnownReferenceIndexPath:]
  -[PUCarouselSharingViewController _setLastKnownReferenceAsset:]
  -[PUCarouselSharingViewController _updateLastKnownReferenceIndexPath]
  -[PUCarouselSharingViewController _lastKnownReferenceAsset]
  -[PUCarouselSharingViewController _indexPathOfAsset:sectionHint:]
  -[PUCarouselSharingViewController _updateCellAtIndexPath:withTransitionInfo:]
  -[PUCarouselSharingViewController _updateAssetTransitionInfo:]
  -[PUCarouselSharingViewController _handleSelectionOption:]
  -[PUCarouselSharingViewController _pptSetOnDidEndScrollingBlock:]
  -[PUCarouselSharingViewController _processCollectionListChangeNotifications:singleCollectionNotifications:needsReloadData:]
  -[PUCarouselSharingViewController _validIndexPathFromIndexPath:]
  -[PUCarouselSharingViewController _sizeForItemAtIndexPath:]
  -[PUCarouselSharingViewController _updateAdditionalContentForVisibleCells]
  -[PUCarouselSharingViewController _handlePhotoViewLoaderBlocks]
  -[PUCarouselSharingViewController _updateVisibleCellBadges]
  -[PUCarouselSharingViewController _isViewInSyncWithModel]
  -[PUCarouselSharingViewController _setLoopingPlaybackAllowed:]
  -[PUCarouselSharingViewController _firstSelectedIndexPath]
  -[PUCarouselSharingViewController _optionViewAtIndexPath:forCollectionView:]
  -[PUCarouselSharingViewController _pptOnDidEndScrollingBlock]
  -[PUCarouselSharingViewController _badgeTransitionInfosForCell:]
  -[PUCarouselSharingViewController isItemAtIndexPathSelected:]
  -[PUCarouselSharingViewController selectItemAtIndexPath:]
  -[PUCarouselSharingViewController deselectItemAtIndexPath:]
  -[PUCarouselSharingViewController ppt_scrollToAssetAtRelativeIndex:completion:]
  -[PUCarouselSharingViewController ppt_faultInScollViewContentSize]
  -[PUCarouselSharingViewController ppt_scrollView]
  -[PUCarouselSharingViewController setHideCellForCurrentReferenceAsset:]
  -[PUCarouselSharingViewController setAssetTransitionInfo:]


PUPickerBanner : PUAbstractNavigationBanner
 @property  PUPickerBannerView *bannerView

  // instance methods
  -[PUPickerBanner .cxx_destruct]
  -[PUPickerBanner view]
  -[PUPickerBanner height]
  -[PUPickerBanner bannerView]


PUPickerBannerView : UIView <CAAnimationDelegate>
 @property  long long _alignment
 @property  UILabel *_label
 @property  PUStackView *_stackView
 @property  BOOL _animatingStackView
 @property  @? _animationCompletionHandler
 @property  unsigned long style
 @property  NSArray *images
 @property  NSString *title
 @property  UIView *leftView
 @property  UIView *rightView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPickerBannerView _label]
  -[PUPickerBannerView setTitle:]
  -[PUPickerBannerView leftView]
  -[PUPickerBannerView _updateLabel]
  -[PUPickerBannerView .cxx_destruct]
  -[PUPickerBannerView rightView]
  -[PUPickerBannerView setStyle:]
  -[PUPickerBannerView setImages:]
  -[PUPickerBannerView layoutSubviews]
  -[PUPickerBannerView _alignment]
  -[PUPickerBannerView images]
  -[PUPickerBannerView animationDidStop:finished:]
  -[PUPickerBannerView setLeftView:animated:]
  -[PUPickerBannerView setRightView:animated:]
  -[PUPickerBannerView setLeftView:]
  -[PUPickerBannerView setRightView:]
  -[PUPickerBannerView title]
  -[PUPickerBannerView _stackView]
  -[PUPickerBannerView initWithFrame:]
  -[PUPickerBannerView _setStackView:]
  -[PUPickerBannerView style]
  -[PUPickerBannerView animateImagesOntoView:inContainerView:completionHandler:]
  -[PUPickerBannerView _setLabel:]
  -[PUPickerBannerView _animatingStackView]
  -[PUPickerBannerView _frameReversedIfRightToLeft:frame:bounds:]
  -[PUPickerBannerView _updateAlignment]
  -[PUPickerBannerView _updateStackView]
  -[PUPickerBannerView _setAlignment:]
  -[PUPickerBannerView _setAnimatingStackView:]
  -[PUPickerBannerView _setAnimationCompletionHandler:]
  -[PUPickerBannerView _animationCompletionHandler]


PUPinchTracker : NSObject
 @property  @? updateHandler
 @property  BOOL allowTrackingOutside
 @property  double rotationHysteresisDegrees

  // instance methods
  -[PUPinchTracker setUpdateHandler:]
  -[PUPinchTracker updateHandler]
  -[PUPinchTracker .cxx_destruct]
  -[PUPinchTracker init]
  -[PUPinchTracker rotationHysteresisDegrees]
  -[PUPinchTracker setRotationHysteresisDegrees:]
  -[PUPinchTracker initWithInitialCenter:initialSize:initialTransform:]
  -[PUPinchTracker allowTrackingOutside]
  -[PUPinchTracker _transformPinchLocation1:location2:intoCenter:distance:angle:]
  -[PUPinchTracker setPinchLocation1:location2:]
  -[PUPinchTracker setAllowTrackingOutside:]


PUPinchedTileTracker : PUInteractiveTileTracker
 @property  PUChangeDirectionValueFilter *_pinchGestureRecognizerScaleDirectionValueFilter
 @property  PUPinchTracker *_pinchTracker
 @property  double _pinchProgress
 @property  PUTileLayoutInfo *_initialLayoutInfo
 @property  PUTileLayoutInfo *_targetLayoutInfo
 @property  PUVelocityFilter *_horizontalVelocityFilter
 @property  PUVelocityFilter *_verticalVelocityFilter
 @property  PUVelocityFilter *_angularVelocityFilter
 @property  UIPinchGestureRecognizer *pinchGestureRecognizer
 @property  long long direction

  // instance methods
  -[PUPinchedTileTracker direction]
  -[PUPinchedTileTracker pinchGestureRecognizer]
  -[PUPinchedTileTracker .cxx_destruct]
  -[PUPinchedTileTracker setDelegate:]
  -[PUPinchedTileTracker _pinchTracker]
  -[PUPinchedTileTracker initWithPinchGestureRecognizer:tilingView:direction:]
  -[PUPinchedTileTracker initWithTilingView:]
  -[PUPinchedTileTracker updateGestureRecognizerTracking]
  -[PUPinchedTileTracker updateTileControllerTracking]
  -[PUPinchedTileTracker completeTracking]
  -[PUPinchedTileTracker configureTileReattachmentContext:]
  -[PUPinchedTileTracker tileControllerToTrack]
  -[PUPinchedTileTracker startTileControllerTracking]
  -[PUPinchedTileTracker _pinchGestureRecognizerScaleDirectionValueFilter]
  -[PUPinchedTileTracker _setPinchGestureRecognizerScaleDirectionValueFilter:]
  -[PUPinchedTileTracker _setInitialLayoutInfo:]
  -[PUPinchedTileTracker _updateTargetLayoutInfoIfNeeded]
  -[PUPinchedTileTracker _targetLayoutInfo]
  -[PUPinchedTileTracker _setPinchProgress:]
  -[PUPinchedTileTracker _setPinchTracker:]
  -[PUPinchedTileTracker _setHorizontalVelocityFilter:]
  -[PUPinchedTileTracker _setVerticalVelocityFilter:]
  -[PUPinchedTileTracker _setAngularVelocityFilter:]
  -[PUPinchedTileTracker _pinchProgress]
  -[PUPinchedTileTracker _horizontalVelocityFilter]
  -[PUPinchedTileTracker _verticalVelocityFilter]
  -[PUPinchedTileTracker _angularVelocityFilter]
  -[PUPinchedTileTracker _initialLayoutInfo]
  -[PUPinchedTileTracker _setTargetLayoutInfo:]


PUPlacesAlbumGadget : PUAlbumGadget <PXPlacesSnapshotFactoryDelegate, PXChangeObserver>
 @property  PXPlacesAlbumCoverProvider *placesAlbumCoverProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPlacesAlbumGadget initWithCollection:albumGadgetDelegate:]
  -[PUPlacesAlbumGadget albumListCellContentView]
  -[PUPlacesAlbumGadget _extendedTraitCollectionDidChange:]
  -[PUPlacesAlbumGadget .cxx_destruct]
  -[PUPlacesAlbumGadget placesSnapshotCountDidChange]
  -[PUPlacesAlbumGadget placesSnapshotDidChange]
  -[PUPlacesAlbumGadget title]
  -[PUPlacesAlbumGadget placesAlbumCoverProvider]
  -[PUPlacesAlbumGadget _updateSubtitleInContentView:animated:]
  -[PUPlacesAlbumGadget _updateImageInContentView:animated:]
  -[PUPlacesAlbumGadget observable:didChange:context:]


PUPlayButtonTileViewController : PUTileViewController <PUBrowsingViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver, PUAssetViewModelChangeObserver>
 @property  PUBrowsingVideoPlayer *_browsingVideoPlayer
 @property  UIView<PXVideoOverlayButton> *_playButton
 @property  BOOL _shouldShowPlayButton
 @property  BOOL _shouldSuppressButtonUpdates
 @property  BOOL canShowPauseButton
 @property  BOOL showPlayButtonWhileActivated
 @property  <PUPlayButtonTileViewControllerDelegate> *delegate
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUAssetViewModel *assetViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPlayButtonTileViewController playButtonTileSize]

  // instance methods
  -[PUPlayButtonTileViewController assetViewModel]
  -[PUPlayButtonTileViewController browsingViewModel]
  -[PUPlayButtonTileViewController setAssetViewModel:]
  -[PUPlayButtonTileViewController becomeReusable]
  -[PUPlayButtonTileViewController setBrowsingViewModel:]
  -[PUPlayButtonTileViewController _playButtonTapped:]
  -[PUPlayButtonTileViewController .cxx_destruct]
  -[PUPlayButtonTileViewController setDelegate:]
  -[PUPlayButtonTileViewController viewModel:didChange:]
  -[PUPlayButtonTileViewController delegate]
  -[PUPlayButtonTileViewController dealloc]
  -[PUPlayButtonTileViewController loadView]
  -[PUPlayButtonTileViewController _updateButtonAnimated:]
  -[PUPlayButtonTileViewController _setBrowsingVideoPlayer:]
  -[PUPlayButtonTileViewController _setShouldSuppressButtonUpdates:]
  -[PUPlayButtonTileViewController _shouldSuppressButtonUpdates]
  -[PUPlayButtonTileViewController canShowPauseButton]
  -[PUPlayButtonTileViewController _browsingVideoPlayer]
  -[PUPlayButtonTileViewController showPlayButtonWhileActivated]
  -[PUPlayButtonTileViewController _playButton]
  -[PUPlayButtonTileViewController _setShouldShowPlayButton:animated:]
  -[PUPlayButtonTileViewController _setShouldShowPlayButton:]
  -[PUPlayButtonTileViewController _setPlayButton:]
  -[PUPlayButtonTileViewController _shouldShowPlayButton]


PUPlayPauseBarItemsController : NSObject <PUBrowsingViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver>
 @property  NSObject<OS_dispatch_queue> *_observerQueue
 @property  NSHashTable *_changeObservers
 @property  BOOL _isPerformingChanges
 @property  BOOL _isUpdating
 @property  BOOL _needsUpdateVideoPlayer
 @property  BOOL _needsUpdatePlayPauseState
 @property  BOOL _needsUpdateAVPlayer
 @property  BOOL _needsUpdateCurrentPlaybackTimeAndDuration
 @property  PUBrowsingVideoPlayer *_videoPlayer
 @property  long long playPauseState
 @property  ISWrappedAVPlayer *_avPlayer
 @property  id _timeObservationToken
 @property  {?=qiIq} currentPlaybackTime
 @property  {?=qiIq} playbackDuration
 @property  PUPlayPauseBarItemsControllerChange *_currentChange
 @property  PUBrowsingViewModel *viewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPlayPauseBarItemsController _setUpdating:]
  -[PUPlayPauseBarItemsController _setPerformingChanges:]
  -[PUPlayPauseBarItemsController _isUpdating]
  -[PUPlayPauseBarItemsController unregisterChangeObserver:]
  -[PUPlayPauseBarItemsController setViewModel:]
  -[PUPlayPauseBarItemsController _assertInsideUpdate]
  -[PUPlayPauseBarItemsController _handleVideoPlayer:didChange:]
  -[PUPlayPauseBarItemsController currentPlaybackTime]
  -[PUPlayPauseBarItemsController _assertInsideChangeBlock]
  -[PUPlayPauseBarItemsController _currentChange]
  -[PUPlayPauseBarItemsController _performChanges:]
  -[PUPlayPauseBarItemsController _isPerformingChanges]
  -[PUPlayPauseBarItemsController _updateIfNeeded]
  -[PUPlayPauseBarItemsController playPauseState]
  -[PUPlayPauseBarItemsController _invalidateVideoPlayer]
  -[PUPlayPauseBarItemsController _setNeedsUpdate]
  -[PUPlayPauseBarItemsController _setVideoPlayer:]
  -[PUPlayPauseBarItemsController registerChangeObserver:]
  -[PUPlayPauseBarItemsController .cxx_destruct]
  -[PUPlayPauseBarItemsController _setPlaybackDuration:]
  -[PUPlayPauseBarItemsController _changeObservers]
  -[PUPlayPauseBarItemsController _needsUpdateCurrentPlaybackTimeAndDuration]
  -[PUPlayPauseBarItemsController viewModel]
  -[PUPlayPauseBarItemsController _handleViewModel:didChange:]
  -[PUPlayPauseBarItemsController viewModel:didChange:]
  -[PUPlayPauseBarItemsController _videoPlayer]
  -[PUPlayPauseBarItemsController init]
  -[PUPlayPauseBarItemsController _setNeedsUpdatePlayPauseState:]
  -[PUPlayPauseBarItemsController _timeObservationToken]
  -[PUPlayPauseBarItemsController _setNeedsUpdateAVPlayer:]
  -[PUPlayPauseBarItemsController _needsUpdate]
  -[PUPlayPauseBarItemsController _updatePlayPauseStateIfNeeded]
  -[PUPlayPauseBarItemsController playbackDuration]
  -[PUPlayPauseBarItemsController _invalidateAVPlayer]
  -[PUPlayPauseBarItemsController _publishChanges]
  -[PUPlayPauseBarItemsController _stopObservingAVPlayer]
  -[PUPlayPauseBarItemsController _startObservingAVPlayer]
  -[PUPlayPauseBarItemsController _setNeedsUpdateVideoPlayer:]
  -[PUPlayPauseBarItemsController _updateAVPlayerIfNeeded]
  -[PUPlayPauseBarItemsController _setTimeObservationToken:]
  -[PUPlayPauseBarItemsController _invalidatePlayPauseState]
  -[PUPlayPauseBarItemsController _observerQueue]
  -[PUPlayPauseBarItemsController _avPlayer]
  -[PUPlayPauseBarItemsController _setNeedsUpdateCurrentPlaybackTimeAndDuration:]
  -[PUPlayPauseBarItemsController _setCurrentPlaybackTime:]
  -[PUPlayPauseBarItemsController _needsUpdateAVPlayer]
  -[PUPlayPauseBarItemsController _needsUpdatePlayPauseState]
  -[PUPlayPauseBarItemsController _setPlayPauseState:]
  -[PUPlayPauseBarItemsController _updateVideoPlayerIfNeeded]
  -[PUPlayPauseBarItemsController _invalidateCurrentPlaybackTimeAndDuration]
  -[PUPlayPauseBarItemsController _setAVPlayer:]
  -[PUPlayPauseBarItemsController _updateCurrentPlaybackTimeAndDurationIfNeeded]
  -[PUPlayPauseBarItemsController _needsUpdateVideoPlayer]


PUPlayPauseBarItemsControllerChange : NSObject
 @property  BOOL hasChanges
 @property  BOOL playPauseStateDidChange
 @property  BOOL currentPlaybackTimeDidChange
 @property  BOOL playbackDurationDidChange

  // instance methods
  -[PUPlayPauseBarItemsControllerChange hasChanges]
  -[PUPlayPauseBarItemsControllerChange playPauseStateDidChange]
  -[PUPlayPauseBarItemsControllerChange _setPlayPauseStateDidChange:]
  -[PUPlayPauseBarItemsControllerChange _setCurrentPlaybackTimeDidChange:]
  -[PUPlayPauseBarItemsControllerChange _setPlaybackDurationDidChange:]
  -[PUPlayPauseBarItemsControllerChange currentPlaybackTimeDidChange]
  -[PUPlayPauseBarItemsControllerChange playbackDurationDidChange]


PUPlaybackTimeIndicatorTileViewController : PUTileViewController <PUBrowsingVideoPlayerTimeObserver, PUBrowsingVideoPlayerChangeObserver, PUBrowsingViewModelChangeObserver>
 @property  PUPlaybackTimeLabel *_label
 @property  long long _indicatorFormat
 @property  BOOL _isIndicatorVisible
 @property  NSDate *forcedIndicatorVisibilityEndDate
 @property  <PUPlaybackTimeIndicatorTileViewControllerDelegate> *delegate
 @property  PUBrowsingVideoPlayer *videoPlayer
 @property  PUBrowsingViewModel *viewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUPlaybackTimeIndicatorTileViewController playbackTimeIndicatorTileSize]

  // instance methods
  -[PUPlaybackTimeIndicatorTileViewController becomeReusable]
  -[PUPlaybackTimeIndicatorTileViewController setViewModel:]
  -[PUPlaybackTimeIndicatorTileViewController _label]
  -[PUPlaybackTimeIndicatorTileViewController .cxx_destruct]
  -[PUPlaybackTimeIndicatorTileViewController viewDidLoad]
  -[PUPlaybackTimeIndicatorTileViewController videoPlayer]
  -[PUPlaybackTimeIndicatorTileViewController setDelegate:]
  -[PUPlaybackTimeIndicatorTileViewController viewModel]
  -[PUPlaybackTimeIndicatorTileViewController viewModel:didChange:]
  -[PUPlaybackTimeIndicatorTileViewController setVideoPlayer:]
  -[PUPlaybackTimeIndicatorTileViewController videoPlayer:desiredSeekTimeDidChange:]
  -[PUPlaybackTimeIndicatorTileViewController delegate]
  -[PUPlaybackTimeIndicatorTileViewController videoPlayer:currentTimeDidChange:]
  -[PUPlaybackTimeIndicatorTileViewController _updateIndicatorValueWithTime:]
  -[PUPlaybackTimeIndicatorTileViewController _updateIndicatorDisplayStyle]
  -[PUPlaybackTimeIndicatorTileViewController _flashTimeIndicator]
  -[PUPlaybackTimeIndicatorTileViewController _cancelFlashTimeIndicator]
  -[PUPlaybackTimeIndicatorTileViewController _setIndicatorFormat:animated:]
  -[PUPlaybackTimeIndicatorTileViewController _setIndicatorVisible:animated:]
  -[PUPlaybackTimeIndicatorTileViewController forcedIndicatorVisibilityEndDate]
  -[PUPlaybackTimeIndicatorTileViewController _handleVideoPlayer:change:]
  -[PUPlaybackTimeIndicatorTileViewController _handleViewModel:change:]
  -[PUPlaybackTimeIndicatorTileViewController setForcedIndicatorVisibilityEndDate:]
  -[PUPlaybackTimeIndicatorTileViewController _setIndicatorFormat:]
  -[PUPlaybackTimeIndicatorTileViewController _setIndicatorVisible:]
  -[PUPlaybackTimeIndicatorTileViewController _indicatorFormat]
  -[PUPlaybackTimeIndicatorTileViewController _isIndicatorVisible]


PUPlaybackTimeLabel : UIView
 @property  UIView *_backgroundView
 @property  UILabel *_label
 @property  BOOL _needsUpdateBackground
 @property  BOOL _needsUpdateLabel
 @property  long long format
 @property  {?=qiIq} currentPlaybackTime
 @property  {?=qiIq} playbackDuration

  // instance methods
  -[PUPlaybackTimeLabel _label]
  -[PUPlaybackTimeLabel currentPlaybackTime]
  -[PUPlaybackTimeLabel _backgroundView]
  -[PUPlaybackTimeLabel _updateIfNeeded]
  -[PUPlaybackTimeLabel _setNeedsUpdate]
  -[PUPlaybackTimeLabel .cxx_destruct]
  -[PUPlaybackTimeLabel layoutSubviews]
  -[PUPlaybackTimeLabel _updateBackgroundIfNeeded]
  -[PUPlaybackTimeLabel setFormat:]
  -[PUPlaybackTimeLabel _invalidateBackground]
  -[PUPlaybackTimeLabel _needsUpdate]
  -[PUPlaybackTimeLabel sizeThatFits:]
  -[PUPlaybackTimeLabel playbackDuration]
  -[PUPlaybackTimeLabel format]
  -[PUPlaybackTimeLabel initWithFrame:]
  -[PUPlaybackTimeLabel setPlaybackDuration:]
  -[PUPlaybackTimeLabel setCurrentPlaybackTime:]
  -[PUPlaybackTimeLabel _invalidateLabel]
  -[PUPlaybackTimeLabel _needsUpdateBackground]
  -[PUPlaybackTimeLabel _needsUpdateLabel]
  -[PUPlaybackTimeLabel _updateLabelIfNeeded]
  -[PUPlaybackTimeLabel _setNeedsUpdateBackground:]
  -[PUPlaybackTimeLabel _maximumLabelSizeWithDuration:]
  -[PUPlaybackTimeLabel _setNeedsUpdateLabel:]
  -[PUPlaybackTimeLabel _labelTextWithFormat:elapsedInterval:remainingInterval:]
  -[PUPlaybackTimeLabel _stringFromTimeInterval:]


PUPlayheadTileViewController : PUTileViewController
  // instance methods
  -[PUPlayheadTileViewController loadView]


PUPlayheadView : UIView
  // instance methods
  -[PUPlayheadView .cxx_destruct]
  -[PUPlayheadView layoutSubviews]
  -[PUPlayheadView tintColorDidChange]
  -[PUPlayheadView initWithFrame:]


PUPopoverController : UIPopoverController
  // instance methods
  -[PUPopoverController presentPopoverFromBarButtonItem:permittedArrowDirections:animated:]


PUPreviewActionController : NSObject <PUAssetActionPerformerDelegate>
 @property  PUAssetActionPerformer *_activeActionPerformer
 @property  NSArray *actions
 @property  PUBrowsingSession *browsingSession
 @property  UIViewController *presentingViewController
 @property  <PUPreviewActionControllerDelegate> *delegate
 @property  PXActionManager *photosUICoreActionManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPreviewActionController browsingSession]
  -[PUPreviewActionController _performTrashAction]
  -[PUPreviewActionController setBrowsingSession:]
  -[PUPreviewActionController _executeActionPerformer:]
  -[PUPreviewActionController .cxx_destruct]
  -[PUPreviewActionController setPresentingViewController:]
  -[PUPreviewActionController actions]
  -[PUPreviewActionController setDelegate:]
  -[PUPreviewActionController assetActionPerformer:presentViewController:]
  -[PUPreviewActionController presentingViewController]
  -[PUPreviewActionController _setActiveActionPerformer:]
  -[PUPreviewActionController _activeActionPerformer]
  -[PUPreviewActionController assetActionPerformer:dismissViewController:completionHandler:]
  -[PUPreviewActionController delegate]
  -[PUPreviewActionController setPhotosUICoreActionManager:]
  -[PUPreviewActionController contextMenuActionIfAvailableForActionType:]
  -[PUPreviewActionController _notifiyDelegateOfAction:]
  -[PUPreviewActionController _performFavoriteAction:]
  -[PUPreviewActionController _performSimpleActionWithType:completionHandler:]
  -[PUPreviewActionController _contextMenuActionWithTitle:image:attributes:actionHandler:]
  -[PUPreviewActionController photosUICoreActionManager]
  -[PUPreviewActionController _confirmationFreeActionForPreferredAction:]
  -[PUPreviewActionController _promptTrashActionConfirmationForAsset:withCompletionHandler:]
  -[PUPreviewActionController debugActions]


_PUProgressIndicatorTileView : UIView
 @property  UIView *extraHittableSubview
 @property  <_PUProgressIndicatorTileViewDelegate> *traitCollectionDelegate

  // instance methods
  -[_PUProgressIndicatorTileView hitTest:withEvent:]
  -[_PUProgressIndicatorTileView traitCollectionDidChange:]
  -[_PUProgressIndicatorTileView .cxx_destruct]
  -[_PUProgressIndicatorTileView extraHittableSubview]
  -[_PUProgressIndicatorTileView setTraitCollectionDelegate:]
  -[_PUProgressIndicatorTileView traitCollectionDelegate]
  -[_PUProgressIndicatorTileView setExtraHittableSubview:]


PUProgressIndicatorTileViewController : PUTileViewController <PUAssetSharedViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver, PUAssetViewModelChangeObserver, PUBrowsingViewModelChangeObserver, _PUProgressIndicatorTileViewDelegate>
 @property  BOOL _needsUpdateProgressViewStyle
 @property  BOOL _needsUpdateStatus
 @property  BOOL _needsUpdateSizeClass
 @property  BOOL _needsUpdateStatusViews
 @property  long long _progressViewStyle
 @property  PUOperationStatus *_status
 @property  long long _sizeClass
 @property  PLRoundProgressView *_progressView
 @property  BOOL _isProgressViewVisible
 @property  UIButton *_errorButton
 @property  UILabel *_debugProgressLabel
 @property  NSObject<OS_os_log> *_progressLog
 @property  BOOL _didStartProgressLogging
 @property  UIView *vkVisualSearchCornerView
 @property  UIButton *vkAnalysisButton
 @property  BOOL isProgressViewAnimatingOut
 @property  PUAssetSharedViewModel *assetSharedViewModel
 @property  PUBrowsingVideoPlayer *videoPlayer
 @property  @? errorPresenter
 @property  PUAssetViewModel *assetViewModel
 @property  PUBrowsingViewModel *browsingViewModel
 @property  BOOL allowsVKToggleModeButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUProgressIndicatorTileViewController progressIndicatorIconInsetsForSizeClass:]
  +[PUProgressIndicatorTileViewController progressIndicatorIconSizeForSizeClass:]
  +[PUProgressIndicatorTileViewController _loadErrorIconForSizeClass:]
  +[PUProgressIndicatorTileViewController progressIndicatorTileSizeForSizeClass:]

  // instance methods
  -[PUProgressIndicatorTileViewController assetViewModel]
  -[PUProgressIndicatorTileViewController _updateSubviewOrdering]
  -[PUProgressIndicatorTileViewController _invalidateStatus]
  -[PUProgressIndicatorTileViewController _sizeClass]
  -[PUProgressIndicatorTileViewController assetSharedViewModel]
  -[PUProgressIndicatorTileViewController applyLayoutInfo:]
  -[PUProgressIndicatorTileViewController browsingViewModel]
  -[PUProgressIndicatorTileViewController setAssetViewModel:]
  -[PUProgressIndicatorTileViewController becomeReusable]
  -[PUProgressIndicatorTileViewController _setStatus:]
  -[PUProgressIndicatorTileViewController _handleBrowsingViewModel:didChange:]
  -[PUProgressIndicatorTileViewController _handleVideoPlayer:didChange:]
  -[PUProgressIndicatorTileViewController _setProgressViewStyle:]
  -[PUProgressIndicatorTileViewController setBrowsingViewModel:]
  -[PUProgressIndicatorTileViewController setErrorPresenter:]
  -[PUProgressIndicatorTileViewController setIsProgressViewAnimatingOut:]
  -[PUProgressIndicatorTileViewController _layoutVKAnalysisButton]
  -[PUProgressIndicatorTileViewController _needsUpdateProgressViewStyle]
  -[PUProgressIndicatorTileViewController _updateIfNeeded]
  -[PUProgressIndicatorTileViewController _status]
  -[PUProgressIndicatorTileViewController _handleAssetViewModel:didChange:]
  -[PUProgressIndicatorTileViewController _setNeedsUpdate]
  -[PUProgressIndicatorTileViewController isProgressViewAnimatingOut]
  -[PUProgressIndicatorTileViewController _errorButton]
  -[PUProgressIndicatorTileViewController .cxx_destruct]
  -[PUProgressIndicatorTileViewController _debugProgressLabel]
  -[PUProgressIndicatorTileViewController viewDidLoad]
  -[PUProgressIndicatorTileViewController _updateStatusViewsIfNeeded]
  -[PUProgressIndicatorTileViewController _setErrorButton:]
  -[PUProgressIndicatorTileViewController videoPlayer]
  -[PUProgressIndicatorTileViewController _didStartProgressLogging]
  -[PUProgressIndicatorTileViewController viewModel:didChange:]
  -[PUProgressIndicatorTileViewController _setDebugProgressLabel:]
  -[PUProgressIndicatorTileViewController view]
  -[PUProgressIndicatorTileViewController _handleAssetSharedViewModel:didChange:]
  -[PUProgressIndicatorTileViewController _setDidStartProgressLogging:]
  -[PUProgressIndicatorTileViewController _needsUpdate]
  -[PUProgressIndicatorTileViewController viewTraitCollectionDidChange:]
  -[PUProgressIndicatorTileViewController setAllowsVKToggleModeButton:]
  -[PUProgressIndicatorTileViewController setAssetSharedViewModel:]
  -[PUProgressIndicatorTileViewController setVideoPlayer:]
  -[PUProgressIndicatorTileViewController _progressView]
  -[PUProgressIndicatorTileViewController _setNeedsUpdateProgressViewStyle:]
  -[PUProgressIndicatorTileViewController _handleErrorButtonTap:]
  -[PUProgressIndicatorTileViewController setVkAnalysisButton:]
  -[PUProgressIndicatorTileViewController _needsUpdateStatusViews]
  -[PUProgressIndicatorTileViewController _needsUpdateStatus]
  -[PUProgressIndicatorTileViewController setVkVisualSearchCornerView:]
  -[PUProgressIndicatorTileViewController _setProgressViewVisible:]
  -[PUProgressIndicatorTileViewController _setNeedsUpdateStatus:]
  -[PUProgressIndicatorTileViewController _updateProgressViewStyleIfNeeded]
  -[PUProgressIndicatorTileViewController _invalidateProgressViewStyle]
  -[PUProgressIndicatorTileViewController _layoutVisualSearchCornerView]
  -[PUProgressIndicatorTileViewController _setNeedsUpdateSizeClass:]
  -[PUProgressIndicatorTileViewController _setNeedsUpdateStatusViews:]
  -[PUProgressIndicatorTileViewController _needsUpdateSizeClass]
  -[PUProgressIndicatorTileViewController _isProgressViewVisible]
  -[PUProgressIndicatorTileViewController _invalidateStatusViews]
  -[PUProgressIndicatorTileViewController vkVisualSearchCornerView]
  -[PUProgressIndicatorTileViewController loadView]
  -[PUProgressIndicatorTileViewController _progressLog]
  -[PUProgressIndicatorTileViewController allowsVKToggleModeButton]
  -[PUProgressIndicatorTileViewController vkAnalysisButton]
  -[PUProgressIndicatorTileViewController postReloadNotification]
  -[PUProgressIndicatorTileViewController _progressViewStyle]
  -[PUProgressIndicatorTileViewController _setProgressViewVisible:animated:]
  -[PUProgressIndicatorTileViewController _invalidateSizeClass]
  -[PUProgressIndicatorTileViewController errorPresenter]
  -[PUProgressIndicatorTileViewController _updateSizeClassIfNeeded]
  -[PUProgressIndicatorTileViewController _setSizeClass:]
  -[PUProgressIndicatorTileViewController _updateStatusIfNeeded]
  -[PUProgressIndicatorTileViewController _setProgressView:]


PUProgressIndicatorView : UIView
 @property  long long _currentState
 @property  double _timestampBeganShowing
 @property  BOOL isStyleCompactBackground
 @property  BOOL isStyleDark
 @property  long long style
 @property  BOOL showingProgress
 @property  double currentProgress
 @property  NSString *localizedMessage
 @property  BOOL isDeterminate
 @property  BOOL showsBackground
 @property  double defaultProgressIndicatorDelay

  // instance methods
  -[PUProgressIndicatorView isShowingProgress]
  -[PUProgressIndicatorView initWithCoder:]
  -[PUProgressIndicatorView _setCurrentState:]
  -[PUProgressIndicatorView _currentState]
  -[PUProgressIndicatorView setShowsBackground:]
  -[PUProgressIndicatorView updateConstraints]
  -[PUProgressIndicatorView .cxx_destruct]
  -[PUProgressIndicatorView showsBackground]
  -[PUProgressIndicatorView currentProgress]
  -[PUProgressIndicatorView initWithStyle:]
  -[PUProgressIndicatorView localizedMessage]
  -[PUProgressIndicatorView initWithFrame:]
  -[PUProgressIndicatorView setLocalizedMessage:]
  -[PUProgressIndicatorView _updateSubviewsOrdering]
  -[PUProgressIndicatorView style]
  -[PUProgressIndicatorView intrinsicContentSize]
  -[PUProgressIndicatorView setDeterminate:]
  -[PUProgressIndicatorView beginShowingProgressWithDelay:animated:]
  -[PUProgressIndicatorView endShowingProgressImmediately:animated:withCompletionHandler:]
  -[PUProgressIndicatorView setCurrentProgress:]
  -[PUProgressIndicatorView beginShowingProgressImmediately:animated:]
  -[PUProgressIndicatorView defaultProgressIndicatorDelay]
  -[PUProgressIndicatorView isDeterminate]
  -[PUProgressIndicatorView isStyleCompactBackground]
  -[PUProgressIndicatorView _updateProgressViewsWithAnimation:completion:]
  -[PUProgressIndicatorView _updatePieProgress]
  -[PUProgressIndicatorView _newVisualEffectBackgroundView]
  -[PUProgressIndicatorView _updateProgressViewsAnimated:completion:]
  -[PUProgressIndicatorView _handleBeginShowingAnimated:wasImmediate:]
  -[PUProgressIndicatorView _setTimestampBeganShowing:]
  -[PUProgressIndicatorView _endShowingProgressIfReady]
  -[PUProgressIndicatorView _timestampBeganShowing]
  -[PUProgressIndicatorView isStyleDark]


PUProgressView : UIView
 @property  long long style

  // instance methods
  -[PUProgressView hitTest:withEvent:]
  -[PUProgressView initWithCoder:]
  -[PUProgressView .cxx_destruct]
  -[PUProgressView layoutSubviews]
  -[PUProgressView initWithStyle:]
  -[PUProgressView initWithFrame:]
  -[PUProgressView pointInside:withEvent:]
  -[PUProgressView style]
  -[PUProgressView showInView:animated:afterDelay:]
  -[PUProgressView hideAnimated:]


_PUSyndicationAttributionTileView : UIView
  // instance methods
  -[_PUSyndicationAttributionTileView hitTest:withEvent:]


PUSyndicationAttributionTileViewController : PUTileViewController <SLAttributionViewDelegate>
 @property  SLHighlight *highlight
 @property  SLAttributionView *attributionView
 @property  double occupiedLeadingWidth
 @property  PUAssetViewModel *assetViewModel
 @property  <PUSyndicationAttributionTileViewControllerDelegate> *delegate
 @property  UIView *pillView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSyndicationAttributionTileViewController assetViewModel]
  -[PUSyndicationAttributionTileViewController wantsVisibleRectChanges]
  -[PUSyndicationAttributionTileViewController didChangeVisibleRect]
  -[PUSyndicationAttributionTileViewController setAssetViewModel:]
  -[PUSyndicationAttributionTileViewController becomeReusable]
  -[PUSyndicationAttributionTileViewController highlight]
  -[PUSyndicationAttributionTileViewController .cxx_destruct]
  -[PUSyndicationAttributionTileViewController setDelegate:]
  -[PUSyndicationAttributionTileViewController attributionView]
  -[PUSyndicationAttributionTileViewController setAttributionView:]
  -[PUSyndicationAttributionTileViewController delegate]
  -[PUSyndicationAttributionTileViewController setHighlight:]
  -[PUSyndicationAttributionTileViewController loadView]
  -[PUSyndicationAttributionTileViewController pillView]
  -[PUSyndicationAttributionTileViewController _setupAttributionView]
  -[PUSyndicationAttributionTileViewController _handleHighlight:withAssetUUID:]
  -[PUSyndicationAttributionTileViewController _invalidateAttributionView]
  -[PUSyndicationAttributionTileViewController _updateAttributionView]
  -[PUSyndicationAttributionTileViewController contextMenuItemsForAttributionView:]
  -[PUSyndicationAttributionTileViewController occupiedLeadingWidth]
  -[PUSyndicationAttributionTileViewController setOccupiedLeadingWidth:]


PURedEyeIndicatorView : UIView
 @property  unsigned long animationType

  // instance methods
  -[PURedEyeIndicatorView animationType]
  -[PURedEyeIndicatorView didMoveToSuperview]
  -[PURedEyeIndicatorView init]
  -[PURedEyeIndicatorView setAnimationType:]
  -[PURedEyeIndicatorView drawRect:]
  -[PURedEyeIndicatorView animateWithDelay:completion:]


PURedeyeToolController : PUPhotoEditToolController <UIGestureRecognizerDelegate>
 @property  PURedeyeToolControllerSpec *toolControllerSpec
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PURedeyeToolController updateViewConstraints]
  -[PURedeyeToolController localizedName]
  -[PURedeyeToolController wantsSecondaryToolbarVisible]
  -[PURedeyeToolController .cxx_destruct]
  -[PURedeyeToolController viewDidLoad]
  -[PURedeyeToolController initWithNibName:bundle:]
  -[PURedeyeToolController gestureRecognizerShouldBegin:]
  -[PURedeyeToolController viewWillDisappear:]
  -[PURedeyeToolController viewWillAppear:]
  -[PURedeyeToolController didBecomeActiveTool]
  -[PURedeyeToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PURedeyeToolController compositionControllerDidChangeForAdjustments:]
  -[PURedeyeToolController _handleTapGesture:]
  -[PURedeyeToolController dealloc]
  -[PURedeyeToolController toolbarIcon]
  -[PURedeyeToolController centerToolbarView]
  -[PURedeyeToolController wantsZoomAndPanEnabled]
  -[PURedeyeToolController toolControllerTag]
  -[PURedeyeToolController viewDidDisappear:]
  -[PURedeyeToolController didResignActiveTool]
  -[PURedeyeToolController selectedToolbarIcon]
  -[PURedeyeToolController _loadCorrectionsFromModelAnimated:]
  -[PURedeyeToolController _removeCorrectionAtPoint:]
  -[PURedeyeToolController _correctRedEyeAtPoint:]
  -[PURedeyeToolController _extractRedEyePointFromCorrectionDictionary:]
  -[PURedeyeToolController _showChangeIndicatorAtPoint:isFailure:]
  -[PURedeyeToolController _animateInstructionAppearance]
  -[PURedeyeToolController _animateFailureAppearance]
  -[PURedeyeToolController flashAutoRedEyeCorrections]
  -[PURedeyeToolController _handleRedeyeButton:]


PURedeyeToolControllerSpec : PUPhotoEditToolControllerSpec
 @property  double tooltipPortraitMargin
 @property  double tooltipLandscapeMargin
 @property  BOOL displaysTooltipAtTopInPortrait

  // instance methods
  -[PURedeyeToolControllerSpec tooltipPortraitMargin]
  -[PURedeyeToolControllerSpec tooltipLandscapeMargin]
  -[PURedeyeToolControllerSpec displaysTooltipAtTopInPortrait]


PURepeater : NSObject
 @property  double timeInterval
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[PURepeater timeInterval]
  -[PURepeater .cxx_destruct]
  -[PURepeater stop]
  -[PURepeater init]
  -[PURepeater initWithBlock:]
  -[PURepeater setQueue:]
  -[PURepeater queue]
  -[PURepeater start]
  -[PURepeater _fire]
  -[PURepeater setTimeInterval:]


PUOneUpEventTracker : PXMediaViewControllerEventTracker <PXChangeObserver, PUBrowsingViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver, PUOneUpEventTracker>
 @property  BOOL isSessionActive
 @property  long long sessionSignpost
 @property  double currentlyViewedAssetTimestamp
 @property  long long currentlyViewedAssetGeneration
 @property  long long currentAssetSignpost
 @property  long long currentAssetDisplayIntervalSignpost
 @property  PXAssetAnalyzer *assetAnalyzer
 @property  PXAssetMetadataDonator *assetMetadataDonator
 @property  PUBrowsingVideoPlayer *currentVideoPlayer
 @property  <PUDisplayAsset> *currentVideoAsset
 @property  <PUDisplayAsset> *currentlyPlayingVideoAsset
 @property  double currentlyPlayingVideoAssetTimestamp
 @property  <PUDisplayAsset> *currentlyStreamingVideoAsset
 @property  BOOL currentlyStreamingVideoIsActuallyPlaying
 @property  BOOL currentlyStreamingVideoIsStalled
 @property  long long currentlyStreamingVideoStallsCount
 @property  BOOL currentlyStreamingVideoDidStartActualPlayback
 @property  long long currentlyPlayingLivePhotoSignpost
 @property  long long currentlyPlayingVideoSignpost
 @property  long long currentlyPlayingStreamedVideoSignpost
 @property  long long currentlyPlayingStreamedVideoStartSignpost
 @property  PUBrowsingViewModel *viewModel
 @property  long long presentationOrigin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *payload

  // instance methods
  -[PUOneUpEventTracker isSessionActive]
  -[PUOneUpEventTracker setIsSessionActive:]
  -[PUOneUpEventTracker _updateCurrentVideoPlayer]
  -[PUOneUpEventTracker setCurrentAssetSignpost:]
  -[PUOneUpEventTracker _logDidStartSession]
  -[PUOneUpEventTracker initWithViewName:]
  -[PUOneUpEventTracker currentlyPlayingVideoAssetTimestamp]
  -[PUOneUpEventTracker setCurrentlyPlayingLivePhotoSignpost:]
  -[PUOneUpEventTracker setCurrentlyStreamingVideoIsStalled:]
  -[PUOneUpEventTracker _logDidEndSession]
  -[PUOneUpEventTracker currentlyStreamingVideoIsStalled]
  -[PUOneUpEventTracker logUserWillPlayLivePhoto:]
  -[PUOneUpEventTracker .cxx_destruct]
  -[PUOneUpEventTracker currentlyPlayingLivePhotoSignpost]
  -[PUOneUpEventTracker _invalidateCurrentVideoPlayer]
  -[PUOneUpEventTracker _logWillEndPlaybackOfStreamedVideoAsset:]
  -[PUOneUpEventTracker setCurrentlyStreamingVideoIsActuallyPlaying:]
  -[PUOneUpEventTracker assetMetadataDonator]
  -[PUOneUpEventTracker _logDidEndPlayingVideoAsset:duration:]
  -[PUOneUpEventTracker _updateCurrentlyViewedAsset]
  -[PUOneUpEventTracker _invalidateCurrentlyViewedAsset]
  -[PUOneUpEventTracker viewModel]
  -[PUOneUpEventTracker currentlyViewedAssetGeneration]
  -[PUOneUpEventTracker setCurrentlyStreamingVideoStallsCount:]
  -[PUOneUpEventTracker currentlyStreamingVideoStallsCount]
  -[PUOneUpEventTracker viewModel:didChange:]
  -[PUOneUpEventTracker _updateCurrentVideoProperties]
  -[PUOneUpEventTracker logVitalityDidEndForLivePhoto:]
  -[PUOneUpEventTracker sessionSignpost]
  -[PUOneUpEventTracker currentlyStreamingVideoAsset]
  -[PUOneUpEventTracker currentlyPlayingStreamedVideoStartSignpost]
  -[PUOneUpEventTracker setCurrentlyPlayingVideoAsset:]
  -[PUOneUpEventTracker _updateIsSessionActive]
  -[PUOneUpEventTracker setCurrentlyStreamingVideoAsset:]
  -[PUOneUpEventTracker setCurrentlyPlayingStreamedVideoStartSignpost:]
  -[PUOneUpEventTracker currentVideoAsset]
  -[PUOneUpEventTracker currentlyStreamingVideoIsActuallyPlaying]
  -[PUOneUpEventTracker logDidEndViewingMedia:mediaKind:duration:]
  -[PUOneUpEventTracker currentlyPlayingStreamedVideoSignpost]
  -[PUOneUpEventTracker presentationOrigin]
  -[PUOneUpEventTracker _logDidStartPlaybackOfStreamedVideoAsset:]
  -[PUOneUpEventTracker setCurrentVideoPlayer:]
  -[PUOneUpEventTracker currentlyPlayingVideoSignpost]
  -[PUOneUpEventTracker logUserDidPlayLivePhoto:]
  -[PUOneUpEventTracker setCurrentAssetDisplayIntervalSignpost:]
  -[PUOneUpEventTracker currentlyViewedAssetTimestamp]
  -[PUOneUpEventTracker currentVideoPlayer]
  -[PUOneUpEventTracker _logDidStartActualPlaybackOfStreamedVideoAsset:]
  -[PUOneUpEventTracker currentlyPlayingVideoAsset]
  -[PUOneUpEventTracker initWithViewModel:presentationOrigin:]
  -[PUOneUpEventTracker currentlyStreamingVideoDidStartActualPlayback]
  -[PUOneUpEventTracker _invalidateCurrentVideoProperties]
  -[PUOneUpEventTracker logDidStartViewingMedia:mediaKind:]
  -[PUOneUpEventTracker setCurrentlyStreamingVideoDidStartActualPlayback:]
  -[PUOneUpEventTracker currentAssetDisplayIntervalSignpost]
  -[PUOneUpEventTracker currentAssetSignpost]
  -[PUOneUpEventTracker _logDidStartPlayingVideoAsset:]
  -[PUOneUpEventTracker setCurrentlyPlayingVideoSignpost:]
  -[PUOneUpEventTracker _invalidateIsSessionActive]
  -[PUOneUpEventTracker observable:didChange:context:]
  -[PUOneUpEventTracker setDisplayedAsset:]
  -[PUOneUpEventTracker assetAnalyzer]
  -[PUOneUpEventTracker setCurrentlyPlayingStreamedVideoSignpost:]
  -[PUOneUpEventTracker _handleLongEnoughViewDurationWithGeneration:]
  -[PUOneUpEventTracker setSessionSignpost:]


PUReuseQueue : NSObject
 @property  NSMutableDictionary *_objectCreationBlocksByReuseIdentifier
 @property  NSMutableDictionary *_reusableObjectsByReuseIdentifier
 @property  BOOL reuseEnabled

  // instance methods
  -[PUReuseQueue registerObjectCreationBlock:withReuseIdentifier:]
  -[PUReuseQueue .cxx_destruct]
  -[PUReuseQueue _objectCreationBlocksByReuseIdentifier]
  -[PUReuseQueue _reusableObjectsByReuseIdentifier]
  -[PUReuseQueue init]
  -[PUReuseQueue setReuseEnabled:]
  -[PUReuseQueue enqueueObjectForReuse:withReuseIdentifier:]
  -[PUReuseQueue dequeueObjectWithReuseIdentifier:isReused:]
  -[PUReuseQueue isReuseEnabled]


PUReviewAdjustmentURLNode : PXRunNode <PUAdjustmentURLNode>
 @property  NSURL *directory
 @property  PUReviewAsset *reviewAsset
 @property  PHContentEditingOutput *contentEditingOutput
 @property  NSURL *adjustmentURL
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewAdjustmentURLNode directory]
  -[PUReviewAdjustmentURLNode .cxx_destruct]
  -[PUReviewAdjustmentURLNode run]
  -[PUReviewAdjustmentURLNode contentEditingOutput]
  -[PUReviewAdjustmentURLNode reviewAsset]
  -[PUReviewAdjustmentURLNode adjustmentURL]
  -[PUReviewAdjustmentURLNode initWithReviewAsset:directory:contentEditingOutput:]


PUReviewAdjustmentInput : NSObject
 @property  UIImage *currentPreviewImage
 @property  NSData *knownAdjustmentData
 @property  long long adjustmentBaseVersion
 @property  NSURL *baseImageFileURL
 @property  NSURL *baseVideoFileURL

  // instance methods
  -[PUReviewAdjustmentInput .cxx_destruct]
  -[PUReviewAdjustmentInput adjustmentBaseVersion]
  -[PUReviewAdjustmentInput knownAdjustmentData]
  -[PUReviewAdjustmentInput baseImageFileURL]
  -[PUReviewAdjustmentInput baseVideoFileURL]
  -[PUReviewAdjustmentInput currentPreviewImage]
  -[PUReviewAdjustmentInput _setKnownAdjustmentData:]
  -[PUReviewAdjustmentInput _setBaseImageVersion:]
  -[PUReviewAdjustmentInput _setCurrentPreviewImage:]
  -[PUReviewAdjustmentInput _setBaseImageFileURL:]
  -[PUReviewAdjustmentInput _setBaseVideoFileURL:]


PUReviewAdjustmentOutput : NSObject
 @property  NSURL *renderedImageFileURL
 @property  NSURL *renderedVideoFileURL
 @property  long long _adjustmentInputBaseVersion
 @property  NSURL *_baseImageURL
 @property  NSURL *_baseVideoURL

  // instance methods
  -[PUReviewAdjustmentOutput .cxx_destruct]
  -[PUReviewAdjustmentOutput renderedImageFileURL]
  -[PUReviewAdjustmentOutput renderedVideoFileURL]
  -[PUReviewAdjustmentOutput _setAdjustmentInputBaseVersion:]
  -[PUReviewAdjustmentOutput _setRenderedImageFileURL:]
  -[PUReviewAdjustmentOutput _setRenderedVideoFileURL:]
  -[PUReviewAdjustmentOutput _setBaseImageURL:]
  -[PUReviewAdjustmentOutput _setBaseVideoURL:]
  -[PUReviewAdjustmentOutput _baseVideoURL]
  -[PUReviewAdjustmentOutput _baseImageURL]
  -[PUReviewAdjustmentOutput _adjustmentInputBaseVersion]


PUReviewAsset : NSObject <PUEditableAsset, PUCAMReviewAsset, PXShareable>
 @property  NSString *identifier
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  CLLocation *location
 @property  double aspectRatio
 @property  NSDate *creationDate
 @property  NSDate *localCreationDate
 @property  NSDate *modificationDate
 @property  BOOL favorite
 @property  BOOL HDR
 @property  double duration
 @property  BOOL livePhoto
 @property  BOOL livePhotoPlaceholder
 @property  BOOL canPlayPhotoIris
 @property  {?=qiIq} livePhotoSynchronizedDisplayTime
 @property  {?=qiIq} livePhotoDuration
 @property  NSString *burstIdentifier
 @property  BOOL representsBurst
 @property  unsigned long numberOfRepresentedAssets
 @property  UIImage *providedPreviewImage
 @property  NSDictionary *providedImageMetadata
 @property  NSURL *providedFullsizeImageURL
 @property  NSURL *providedFullsizeRenderImageURL
 @property  NSURL *providedVideoURL
 @property  NSURL *providedFullsizeRenderVideoURL
 @property  PFAssetAdjustments *assetAdjustments
 @property  BOOL requiresConfidentiality
 @property  BOOL highFramerateVideo
 @property  BOOL adjusted
 @property  BOOL contentAdjustmentAllowed
 @property  BOOL livePhotoVisibilityAdjustmentAllowed
 @property  BOOL inPlaceVideoTrimAllowed
 @property  unsigned long originalResourceChoice
 @property  BOOL trimmableType
 @property  unsigned long livePhotoVisibilityState
 @property  PFVideoAVObjectBuilder *videoObjectBuilder
 @property  unsigned long reframeVariation
 @property  NSDictionary *imageProperties
 @property  int originalEXIFOrientation
 @property  BOOL containsAllMetadata
 @property  BOOL resourceDownloadPossible
 @property  BOOL cloudPhotoLibraryEnabled
 @property  NSString *pathForOriginalImageFile
 @property  NSString *pathForOriginalVideoFile
 @property  NSString *pathForTrimmedVideoFile
 @property  NSString *accessibilityDescription
 @property  NSString *uuid
 @property  BOOL hidden
 @property  NSString *localizedGeoDescription
 @property  BOOL isTemporaryPlaceholder
 @property  NSString *uniformTypeIdentifier
 @property  unsigned long originalFilesize
 @property  BOOL isAnimatedImage
 @property  BOOL canPlayLoopingVideo
 @property  BOOL isPhotoIrisPlaceholder
 @property  {?=qiIq} photoIrisStillDisplayTime
 @property  {?=qiIq} photoIrisVideoDuration
 @property  BOOL hasPhotoColorAdjustments
 @property  unsigned long deferredLogInfo
 @property  {?=qiIq} videoKeyFrameSourceTime
 @property  BOOL needsDeferredProcessing
 @property  unsigned short deferredProcessingNeeded
 @property  BOOL isGuestAsset
 @property  BOOL hasSyndicationInformation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHLivePhoto *providedLivePhoto
 @property  AVAsset *providedAVAsset
 @property  AVAudioMix *providedAudioMix

  // class methods
  +[PUReviewAsset createUniqueMediaDirectoryForAssetWithIdentifier:]
  +[PUReviewAsset fileURLForAdjustmentsInDirectory:]
  +[PUReviewAsset fileURLForFullsizeImageInDirectory:extension:]
  +[PUReviewAsset fileURLForFullsizeRenderImageInDirectory:extension:]
  +[PUReviewAsset fileURLForFullsizeVideoComplementInDirectory:]
  +[PUReviewAsset fileURLForFullsizeRenderVideoComplementInDirectory:]
  +[PUReviewAsset fileURLForFullsizeVideoInDirectory:extension:]
  +[PUReviewAsset fileURLForFullsizeRenderVideoInDirectory:]
  +[PUReviewAsset _shouldShowConfidentialityWarningForAdjustments:]
  +[PUReviewAsset _shouldShowConfidentialityWarningForMetadata:creationDate:]
  +[PUReviewAsset _shouldCheckConfidentiality]
  +[PUReviewAsset _confidentialityWarningsVersionForAdjustments:]

  // instance methods
  -[PUReviewAsset aspectRatio]
  -[PUReviewAsset modificationDate]
  -[PUReviewAsset uniformTypeIdentifier]
  -[PUReviewAsset photoIrisStillDisplayTime]
  -[PUReviewAsset photoIrisVideoDuration]
  -[PUReviewAsset numberOfRepresentedAssets]
  -[PUReviewAsset .cxx_destruct]
  -[PUReviewAsset mediaSubtypes]
  -[PUReviewAsset deferredProcessingNeeded]
  -[PUReviewAsset localCreationDate]
  -[PUReviewAsset isHidden]
  -[PUReviewAsset accessibilityDescription]
  -[PUReviewAsset isAdjusted]
  -[PUReviewAsset isGuestAsset]
  -[PUReviewAsset pixelWidth]
  -[PUReviewAsset isContentEqualTo:]
  -[PUReviewAsset representsBurst]
  -[PUReviewAsset hasPhotoColorAdjustments]
  -[PUReviewAsset localizedGeoDescription]
  -[PUReviewAsset canPlayPhotoIris]
  -[PUReviewAsset pixelHeight]
  -[PUReviewAsset pathForTrimmedVideoFile]
  -[PUReviewAsset isHDR]
  -[PUReviewAsset imageProperties]
  -[PUReviewAsset burstIdentifier]
  -[PUReviewAsset isPhotoIrisPlaceholder]
  -[PUReviewAsset identifier]
  -[PUReviewAsset originalFilesize]
  -[PUReviewAsset isOriginalRaw]
  -[PUReviewAsset originalResourceChoice]
  -[PUReviewAsset isLivePhoto]
  -[PUReviewAsset location]
  -[PUReviewAsset cancelContentEditingInputRequest:]
  -[PUReviewAsset isTemporaryPlaceholder]
  -[PUReviewAsset isHighFramerateVideo]
  -[PUReviewAsset isContentAdjustmentAllowed]
  -[PUReviewAsset isInPlaceVideoTrimAllowed]
  -[PUReviewAsset requestContentEditingInputWithOptions:completionHandler:]
  -[PUReviewAsset playbackStyle]
  -[PUReviewAsset canPlayLoopingVideo]
  -[PUReviewAsset isLivePhotoVisibilityAdjustmentAllowed]
  -[PUReviewAsset isTrimmableType]
  -[PUReviewAsset livePhotoVisibilityState]
  -[PUReviewAsset videoObjectBuilder]
  -[PUReviewAsset originalEXIFOrientation]
  -[PUReviewAsset containsAllMetadata]
  -[PUReviewAsset isResourceDownloadPossible]
  -[PUReviewAsset pathForOriginalImageFile]
  -[PUReviewAsset pathForOriginalVideoFile]
  -[PUReviewAsset deferredLogInfo]
  -[PUReviewAsset creationDate]
  -[PUReviewAsset reframeVariation]
  -[PUReviewAsset uuid]
  -[PUReviewAsset mediaType]
  -[PUReviewAsset isFavorite]
  -[PUReviewAsset copyWithZone:]
  -[PUReviewAsset isCloudPhotoLibraryEnabled]
  -[PUReviewAsset playbackVariation]
  -[PUReviewAsset duration]
  -[PUReviewAsset needsDeferredProcessing]
  -[PUReviewAsset isAnimatedImage]
  -[PUReviewAsset isLivePhotoPlaceholder]
  -[PUReviewAsset livePhotoSynchronizedDisplayTime]
  -[PUReviewAsset livePhotoDuration]
  -[PUReviewAsset providedPreviewImage]
  -[PUReviewAsset providedImageMetadata]
  -[PUReviewAsset providedFullsizeImageURL]
  -[PUReviewAsset providedFullsizeRenderImageURL]
  -[PUReviewAsset providedLivePhoto]
  -[PUReviewAsset providedAVAsset]
  -[PUReviewAsset providedAudioMix]
  -[PUReviewAsset providedVideoURL]
  -[PUReviewAsset providedFullsizeRenderVideoURL]
  -[PUReviewAsset assetAdjustments]
  -[PUReviewAsset initWithReviewAsset:]
  -[PUReviewAsset initWithReviewAsset:linkFileURLsToUniquePathsInDirectory:canPlayPhotoIris:]
  -[PUReviewAsset removeAllFilesAtReferencedURLs]
  -[PUReviewAsset requiresConfidentiality]
  -[PUReviewAsset inputForAdjustmentWithMediaProvider:canHandleAdjustments:]
  -[PUReviewAsset primaryRenderedMediaURL]
  -[PUReviewAsset reviewAssetRevertingAdjustments]
  -[PUReviewAsset adjustmentOutputForInputBaseVersion:withLivePhotoSupport:]
  -[PUReviewAsset reviewAssetWithAdjustmentOutput:adjustmentData:formatIdentifier:version:]
  -[PUReviewAsset providedImageURLForImageVersion:]
  -[PUReviewAsset providedVideoURLForImageVersion:]
  -[PUReviewAsset initWithReviewAsset:baseImageURL:renderedImageURL:baseVideoURL:renderedVideoURL:pixelWidth:pixelHeight:assetAdjustments:duration:]
  -[PUReviewAsset exifOrientationForImageVersion:]
  -[PUReviewAsset providedVideoURLForVideoVersion:]
  -[PUReviewAsset initWithConformingAsset:]
  -[PUReviewAsset _ensureLinkDestinationDirectoryFromBaseDirectory:]
  -[PUReviewAsset _uniqueDestinationURLForFileURL:inDirectory:]
  -[PUReviewAsset _linkFileAtURL:toURL:]
  -[PUReviewAsset initWithReviewAsset:baseImageURL:renderedImageURL:baseVideoURL:renderedVideoURL:previewImage:pixelWidth:pixelHeight:assetAdjustments:duration:]
  -[PUReviewAsset initWithAVAsset:audioMix:width:height:captureDate:duration:previewImage:videoURL:unadjustedVideoURL:adjustments:identifier:]
  -[PUReviewAsset _removeFileAtURL:]
  -[PUReviewAsset initWithReviewAsset:linkFileURLsToUniquePathsInDirectory:]
  -[PUReviewAsset initWithReviewAsset:primaryResourceURL:]
  -[PUReviewAsset initWithPhoto:mediaSubtypes:width:height:captureDate:metadata:burstIdentifier:representedCount:fullsizeImageURL:fullsizeUnadjustedImageURL:assetAdjustments:identifier:]
  -[PUReviewAsset initWithLivePhoto:fullsizeUnadjustedImageURL:fullsizeUnadjustedVideoURL:assetAdjustments:width:height:captureDate:metadata:duration:previewImage:identifier:]
  -[PUReviewAsset initWithAVAsset:audioMix:width:height:captureDate:duration:previewImage:videoURL:adjustments:identifier:]


PUBrowsingOneUpVisibilityHelper : NSObject <PUBrowsingViewModelChangeObserver>
 @property  PUBrowsingViewModel *browsingViewModel
 @property  BOOL isOneUpVisible
 @property  BOOL isPresentedForSecondScreen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBrowsingOneUpVisibilityHelper browsingViewModel]
  -[PUBrowsingOneUpVisibilityHelper setBrowsingViewModel:]
  -[PUBrowsingOneUpVisibilityHelper .cxx_destruct]
  -[PUBrowsingOneUpVisibilityHelper initWithBrowsingViewModel:isPresentedForSecondScreen:]
  -[PUBrowsingOneUpVisibilityHelper setIsOneUpVisible:]
  -[PUBrowsingOneUpVisibilityHelper isOneUpVisible]
  -[PUBrowsingOneUpVisibilityHelper dealloc]
  -[PUBrowsingOneUpVisibilityHelper isPresentedForSecondScreen]


PUReviewAssetsDataSource : PUAssetsDataSource
 @property  <PUDisplayAssetCollection> *_reviewAssetCollection
 @property  NSDictionary *_assetsByIdentifier
 @property  NSArray *_assetIdentifiers

  // instance methods
  -[PUReviewAssetsDataSource isEmpty]
  -[PUReviewAssetsDataSource indexPathForAssetCollection:]
  -[PUReviewAssetsDataSource .cxx_destruct]
  -[PUReviewAssetsDataSource indexPathForAssetReference:]
  -[PUReviewAssetsDataSource startingAssetReference]
  -[PUReviewAssetsDataSource assetReferenceAtIndexPath:]
  -[PUReviewAssetsDataSource badgeInfoPromiseForAssetAtIndexPath:]
  -[PUReviewAssetsDataSource numberOfSubItemsAtIndexPath:]
  -[PUReviewAssetsDataSource convertIndexPath:fromAssetsDataSource:]
  -[PUReviewAssetsDataSource assetCollectionAtIndexPath:]
  -[PUReviewAssetsDataSource _assetIdentifiers]
  -[PUReviewAssetsDataSource assetAtIndexPath:]
  -[PUReviewAssetsDataSource assetReferenceForAssetReference:]
  -[PUReviewAssetsDataSource _assetsByIdentifier]
  -[PUReviewAssetsDataSource _reviewAssetCollection]
  -[PUReviewAssetsDataSource indexPathForAssetWithIdentifier:]
  -[PUReviewAssetsDataSource _identifierAtIndexPath:]
  -[PUReviewAssetsDataSource initWithAssetsByIdentifier:usingOrdering:inAssetCollection:]


PUReviewAssetsDataSourceManager : PUAssetsDataSourceManager <PUReviewDataSourceChangeObserver>
 @property  PUReviewDataSource *_reviewDataSource
 @property  <PUDisplayAssetCollection> *_containingAssetCollection
 @property  <PUReviewAssetsDataSourceManagerDelegate> *reviewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewAssetsDataSourceManager .cxx_destruct]
  -[PUReviewAssetsDataSourceManager init]
  -[PUReviewAssetsDataSourceManager dealloc]
  -[PUReviewAssetsDataSourceManager _containingAssetCollection]
  -[PUReviewAssetsDataSourceManager initWithReviewDataSource:]
  -[PUReviewAssetsDataSourceManager _updateWithReviewDataSource:changeDetails:]
  -[PUReviewAssetsDataSourceManager _reviewDataSource]
  -[PUReviewAssetsDataSourceManager reviewDelegate]
  -[PUReviewAssetsDataSourceManager reviewDataSourceDidChange:changeDetails:]
  -[PUReviewAssetsDataSourceManager setReviewDelegate:]


PUReviewAssetsMediaDestination : PUMediaDestination
 @property  NSURL *_desiredOutputDirectory
 @property  PUEditableMediaProvider *_mediaProvider
 @property  NSMutableDictionary *pendingRequestsByRequestIdentifier

  // instance methods
  -[PUReviewAssetsMediaDestination .cxx_destruct]
  -[PUReviewAssetsMediaDestination _mediaProvider]
  -[PUReviewAssetsMediaDestination cancelRequestWithIdentifier:]
  -[PUReviewAssetsMediaDestination initWithOutputDirectory:mediaProvider:]
  -[PUReviewAssetsMediaDestination saveInternalEditsForAsset:usingCompositionController:contentEditingOutput:version:livePhotoEditModel:originalComposition:useRawIfAvailable:completionHandler:]
  -[PUReviewAssetsMediaDestination saveEditsForAsset:usingContentEditingOutput:livePhotoEditModel:useRawIfAvailable:completionHandler:]
  -[PUReviewAssetsMediaDestination saveEditsByCopyingAsset:withResourceURL:usingContentEditingOutput:livePhotoEditModel:completionHandler:]
  -[PUReviewAssetsMediaDestination revertEditsForAsset:completionHandler:]
  -[PUReviewAssetsMediaDestination isSavingRequestWithIdentifier:]
  -[PUReviewAssetsMediaDestination ensureEditableCopyOfAsset:completionHandler:]
  -[PUReviewAssetsMediaDestination supportsProgressForRequestWithIdentifier:]
  -[PUReviewAssetsMediaDestination progressForRequestWithIdentifier:]
  -[PUReviewAssetsMediaDestination _workImageVersionForContentEditingOutput:]
  -[PUReviewAssetsMediaDestination _pendingRequestsByRequestIdentifier]
  -[PUReviewAssetsMediaDestination _requestDidFinish:]
  -[PUReviewAssetsMediaDestination _desiredOutputDirectory]
  -[PUReviewAssetsMediaDestination _saveEditsWithRequest:completionHandler:]


PUReviewAssetLivePhotoMediaRequest : NSObject <PUReviewAssetCancelableMediaRequest>
 @property  int _liveRequestID

  // instance methods
  -[PUReviewAssetLivePhotoMediaRequest cancelRequest]
  -[PUReviewAssetLivePhotoMediaRequest _liveRequestID]
  -[PUReviewAssetLivePhotoMediaRequest initLivePhotoRequestID:]


PUReviewAssetAnimatedImageMediaRequest : NSObject <PUReviewAssetCancelableMediaRequest>
 @property  long long _animatedRequestID

  // instance methods
  -[PUReviewAssetAnimatedImageMediaRequest cancelRequest]
  -[PUReviewAssetAnimatedImageMediaRequest _animatedRequestID]
  -[PUReviewAssetAnimatedImageMediaRequest initWithAnimatedImageRequestID:]


PUCAMReviewAssetsFigDecodeItem : PLFigPreheatItem <PUReviewAssetCancelableMediaRequest>
  // instance methods
  -[PUCAMReviewAssetsFigDecodeItem decodeSessionOptions]
  -[PUCAMReviewAssetsFigDecodeItem cancelRequest]
  -[PUCAMReviewAssetsFigDecodeItem initWithImageURL:targetSize:]


PUReviewAssetsMediaProvider : PUEditableMediaProvider
 @property  double _screenScale
 @property  PHConcurrentMapTable *_mediaRequests

  // instance methods
  -[PUReviewAssetsMediaProvider _screenScale]
  -[PUReviewAssetsMediaProvider cancelImageRequest:]
  -[PUReviewAssetsMediaProvider .cxx_destruct]
  -[PUReviewAssetsMediaProvider requestImageDataForAsset:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestImageURLForAsset:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestPlayerItemForVideo:options:resultHandler:]
  -[PUReviewAssetsMediaProvider init]
  -[PUReviewAssetsMediaProvider requestAsynchronousVideoURLForAsset:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestImageForAsset:targetSize:contentMode:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestAVAssetForVideo:options:resultHandler:]
  -[PUReviewAssetsMediaProvider requestAnimatedImageForAsset:options:resultHandler:]
  -[PUReviewAssetsMediaProvider _incrementRequestIdentifier]
  -[PUReviewAssetsMediaProvider _requestAdjustmentDataForAsset:resultHandler:]
  -[PUReviewAssetsMediaProvider _resizeImageAtURL:imageUTI:targetSize:bakeInOrientation:error:]
  -[PUReviewAssetsMediaProvider _mediaRequests]


PUReviewCreateAssetNode : PXRunNode <PUReviewAssetNode>
 @property  PUReviewAsset *inputAsset
 @property  <PUReviewImageURLNode> *imageInfoNode
 @property  <PUImageInfoNode> *renderImageInfoNode
 @property  <PUImageDataRenderNode> *renderImageDataNode
 @property  <PUReviewVideoURLNode> *videoURLNode
 @property  <PUVideoAssetNode> *videoAssetNode
 @property  <PUVideoURLExportNode> *renderVideoURLNode
 @property  <PUVideoAssetNode> *renderVideoAssetNode
 @property  <PUAdjustmentURLNode> *adjustmentURLNode
 @property  PUReviewAsset *reviewAsset
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewCreateAssetNode .cxx_destruct]
  -[PUReviewCreateAssetNode run]
  -[PUReviewCreateAssetNode reviewAsset]
  -[PUReviewCreateAssetNode videoURLNode]
  -[PUReviewCreateAssetNode inputAsset]
  -[PUReviewCreateAssetNode initWithInputAsset:imageInfoNode:renderImageInfoNode:renderImageDataNode:videoURLNode:videoAssetNode:renderVideoURLNode:renderVideoAssetNode:adjustmentURLNode:]
  -[PUReviewCreateAssetNode imageInfoNode]
  -[PUReviewCreateAssetNode renderImageInfoNode]
  -[PUReviewCreateAssetNode renderImageDataNode]
  -[PUReviewCreateAssetNode videoAssetNode]
  -[PUReviewCreateAssetNode renderVideoURLNode]
  -[PUReviewCreateAssetNode renderVideoAssetNode]
  -[PUReviewCreateAssetNode adjustmentURLNode]


PUEditPluginActionActivity : PUEditPluginActivity
 @property  NSString *internalSystemImageName

  // class methods
  +[PUEditPluginActionActivity activityCategory]

  // instance methods
  -[PUEditPluginActionActivity .cxx_destruct]
  -[PUEditPluginActionActivity _systemImageName]
  -[PUEditPluginActionActivity initWithPlugin:systemImageName:]
  -[PUEditPluginActionActivity internalSystemImageName]


PUReviewDataSource : NSObject
 @property  NSHashTable *_observers
 @property  NSMutableArray *_assetIdentifiers
 @property  NSMutableDictionary *_assetsByIdentifier
 @property  NSMutableDictionary *_representativeAssetsByBurstIdentifier
 @property  NSMutableDictionary *_enqueuedBurstAssetIdentifiersByBurstIdentifier
 @property  NSMutableDictionary *_enqueuedBurstAssetsByAssetIdentifier
 @property  long long _nestedPerformChanges
 @property  NSMutableSet *_updatedAssetIdentifiers

  // instance methods
  -[PUReviewDataSource _observers]
  -[PUReviewDataSource unregisterChangeObserver:]
  -[PUReviewDataSource _nestedPerformChanges]
  -[PUReviewDataSource performChanges:]
  -[PUReviewDataSource registerChangeObserver:]
  -[PUReviewDataSource processPendingBurstAssets]
  -[PUReviewDataSource .cxx_destruct]
  -[PUReviewDataSource _representativeAssetsByBurstIdentifier]
  -[PUReviewDataSource init]
  -[PUReviewDataSource insertAsset:]
  -[PUReviewDataSource removeAssetWithIdentifier:]
  -[PUReviewDataSource removeAllAssets]
  -[PUReviewDataSource existingRepresentativeAssetForBurstIdentifier:]
  -[PUReviewDataSource _setNestedPerformChanges:]
  -[PUReviewDataSource removeRepresentativeAssetForBurstIdentifier:]
  -[PUReviewDataSource _assetIdentifiers]
  -[PUReviewDataSource _assetsByIdentifier]
  -[PUReviewDataSource assetsByIdentifier]
  -[PUReviewDataSource orderedIdentifiers]
  -[PUReviewDataSource insertAsset:atIndex:]
  -[PUReviewDataSource existingAssetForIdentifier:]
  -[PUReviewDataSource _updatedAssetIdentifiers]
  -[PUReviewDataSource _enqueuedBurstAssetsByAssetIdentifier]
  -[PUReviewDataSource _enqueuedBurstAssetIdentifiersByBurstIdentifier]
  -[PUReviewDataSource replaceAsset:]
  -[PUReviewDataSource insertAssets:]
  -[PUReviewDataSource enqueuePendingBurstAsset:]


PUReviewFileManager : NSObject
 @property  NSFileManager *_fileManager
 @property  NSObject<OS_dispatch_queue> *_fileManagementQueue
 @property  NSURL *_safePathURL

  // class methods
  +[PUReviewFileManager defaultManager]

  // instance methods
  -[PUReviewFileManager .cxx_destruct]
  -[PUReviewFileManager removeItemAtURL:error:]
  -[PUReviewFileManager _fileManager]
  -[PUReviewFileManager initWithFileManager:]
  -[PUReviewFileManager removeItemAtURL:completion:]
  -[PUReviewFileManager _removeItemAtURL:error:stackshot:]
  -[PUReviewFileManager _fileManagementQueue]
  -[PUReviewFileManager _safePathURL]
  -[PUReviewFileManager _allowedToDeleteItemAtURL:]


PUReviewInternalSaveNode : PXRunNode <PUImageInfoNode, PUVideoURLExportNode, PUAdjustmentURLNode, PUReviewImageURLNode, PUReviewVideoURLNode, PUImageDataRenderNode>
 @property  PUEditableMediaProviderImageDataNode *imageDataNode
 @property  PUImageDataRenderNode *imageRenderNode
 @property  PUEditableMediaProviderVideoURLNode *videoURLNode
 @property  PUVideoExportNode *videoRenderNode
 @property  NSURL *directory
 @property  PUPhotoEditIrisModel *livePhotoModel
 @property  NSURL *imageDataURL
 @property  NSString *imageDataUTI
 @property  BOOL useEmbeddedPreview
 @property  long long imageExifOrientation
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} renderedVideoSize
 @property  NSURL *videoURL
 @property  NSURL *adjustmentURL
 @property  NSURL *providedFullsizeImageURL
 @property  NSURL *providedVideoURL
 @property  {CGSize=dd} baseImageSize
 @property  {CGSize=dd} renderedImageSize
 @property  NSData *imageData

  // instance methods
  -[PUReviewInternalSaveNode directory]
  -[PUReviewInternalSaveNode .cxx_destruct]
  -[PUReviewInternalSaveNode imageData]
  -[PUReviewInternalSaveNode _baseDuration]
  -[PUReviewInternalSaveNode run]
  -[PUReviewInternalSaveNode videoURL]
  -[PUReviewInternalSaveNode imageExifOrientation]
  -[PUReviewInternalSaveNode providedFullsizeImageURL]
  -[PUReviewInternalSaveNode providedVideoURL]
  -[PUReviewInternalSaveNode imageDataURL]
  -[PUReviewInternalSaveNode imageDataUTI]
  -[PUReviewInternalSaveNode useEmbeddedPreview]
  -[PUReviewInternalSaveNode _adjustmentBaseVersion]
  -[PUReviewInternalSaveNode imageDataNode]
  -[PUReviewInternalSaveNode videoURLNode]
  -[PUReviewInternalSaveNode baseImageSize]
  -[PUReviewInternalSaveNode renderedImageSize]
  -[PUReviewInternalSaveNode livePhotoModel]
  -[PUReviewInternalSaveNode adjustmentURL]
  -[PUReviewInternalSaveNode renderedVideoSize]
  -[PUReviewInternalSaveNode imageRenderNode]
  -[PUReviewInternalSaveNode _baseExifOrientation]
  -[PUReviewInternalSaveNode videoRenderNode]
  -[PUReviewInternalSaveNode _exportProperties]
  -[PUReviewInternalSaveNode initWithDirectory:imageDataNode:imageRenderNode:videoURLNode:videoRenderNode:livePhotoModel:]


PUReviewScreenBarsModel : PXObservable <PUMutableReviewScreenBarsModel>
 @property  BOOL _needsUpdateAvailableControls
 @property  NSSet *availableControls
 @property  NSSet *enabledControls
 @property  NSDictionary *availableItemsByIdentifier
 @property  BOOL shouldPlaceScrubberInScrubberBar
 @property  UIView *accessoryView
 @property  BOOL transitioningWithCamera
 @property  {CGPoint=dd} controlCenterAlignmentPoint
 @property  BOOL lastControlAlignmentChangeForcedLayout
 @property  BOOL useVerticalControlLayout

  // instance methods
  -[PUReviewScreenBarsModel performChanges:]
  -[PUReviewScreenBarsModel mutableChangeObject]
  -[PUReviewScreenBarsModel setShouldPlaceScrubberInScrubberBar:]
  -[PUReviewScreenBarsModel .cxx_destruct]
  -[PUReviewScreenBarsModel setAccessoryView:]
  -[PUReviewScreenBarsModel accessoryView]
  -[PUReviewScreenBarsModel shouldPlaceScrubberInScrubberBar]
  -[PUReviewScreenBarsModel availableControls]
  -[PUReviewScreenBarsModel isTransitioningWithCamera]
  -[PUReviewScreenBarsModel enabledControls]
  -[PUReviewScreenBarsModel controlCenterAlignmentPoint]
  -[PUReviewScreenBarsModel useVerticalControlLayout]
  -[PUReviewScreenBarsModel setAvailableItemsByIdentifier:]
  -[PUReviewScreenBarsModel setUseVerticalControlLayout:]
  -[PUReviewScreenBarsModel availableItemsByIdentifier]
  -[PUReviewScreenBarsModel _setAvailableControls:]
  -[PUReviewScreenBarsModel _setEnabledControls:]
  -[PUReviewScreenBarsModel _updateAvailableControls]
  -[PUReviewScreenBarsModel setControlCenterAlignmentPoint:forceLayout:]
  -[PUReviewScreenBarsModel setTransitioningWithCamera:]
  -[PUReviewScreenBarsModel setControlCenterAlignmentPoint:]
  -[PUReviewScreenBarsModel invokeCallbackForBarButtonItemWithIdentifier:]
  -[PUReviewScreenBarsModel lastControlAlignmentChangeForcedLayout]
  -[PUReviewScreenBarsModel _needsUpdateAvailableControls]
  -[PUReviewScreenBarsModel _setNeedsUpdateAvailableControls:]


PUCurationImportSourceAssetBrowserDebugViewController : PUPhotosAlbumViewController
 @property  NSString *importSourceName

  // instance methods
  -[PUCurationImportSourceAssetBrowserDebugViewController .cxx_destruct]
  -[PUCurationImportSourceAssetBrowserDebugViewController viewDidLoad]
  -[PUCurationImportSourceAssetBrowserDebugViewController setImportSourceName:]
  -[PUCurationImportSourceAssetBrowserDebugViewController importSourceName]


PUCounterRotatingLayer : CALayer
 @property  double zRotation

  // instance methods
  -[PUCounterRotatingLayer addAnimation:forKey:]
  -[PUCounterRotatingLayer zRotation]
  -[PUCounterRotatingLayer setZRotation:]


PUReviewScreenBarsSnapshot : UIView
 @property  double zRotation
 @property  {CGAffineTransform=dddddd} transform

  // class methods
  +[PUReviewScreenBarsSnapshot layerClass]

  // instance methods
  -[PUReviewScreenBarsSnapshot zRotation]
  -[PUReviewScreenBarsSnapshot setZRotation:]
  -[PUReviewScreenBarsSnapshot snapshotLayer]


PUReviewScreenControlBar : UIView
 @property  NSArray *_buttonsForLayout
 @property  NSSet *availableButtons
 @property  NSSet *enabledButtons
 @property  BOOL shouldLayoutVertically
 @property  {CGPoint=dd} layoutCenterAlignmentPoint
 @property  BOOL useTransparentBackground
 @property  BOOL useTransparentTouches
 @property  UIButton *editButton
 @property  UIButton *markupButton
 @property  UIButton *funEffectsButton
 @property  UIButton *sendButton
 @property  UIView *accessoryView

  // class methods
  +[PUReviewScreenControlBar sendButtonAlignmentRectInVerticalBounds:relativeCenterAlignmentPoint:controlsCount:]
  +[PUReviewScreenControlBar sendButtonAlignmentRectInHorizontalBounds:relativeCenterAlignmentPoint:]
  +[PUReviewScreenControlBar supportedButtons]

  // instance methods
  -[PUReviewScreenControlBar hitTest:withEvent:]
  -[PUReviewScreenControlBar setCenter:]
  -[PUReviewScreenControlBar shouldLayoutVertically]
  -[PUReviewScreenControlBar .cxx_destruct]
  -[PUReviewScreenControlBar setFrame:]
  -[PUReviewScreenControlBar layoutSubviews]
  -[PUReviewScreenControlBar setAccessoryView:]
  -[PUReviewScreenControlBar sendButton]
  -[PUReviewScreenControlBar initWithFrame:]
  -[PUReviewScreenControlBar didMoveToWindow]
  -[PUReviewScreenControlBar editButton]
  -[PUReviewScreenControlBar setBounds:]
  -[PUReviewScreenControlBar accessoryView]
  -[PUReviewScreenControlBar funEffectsButton]
  -[PUReviewScreenControlBar markupButton]
  -[PUReviewScreenControlBar setAvailableButtons:]
  -[PUReviewScreenControlBar setEnabledButtons:]
  -[PUReviewScreenControlBar setLayoutCenterAlignmentPoint:]
  -[PUReviewScreenControlBar setUseTransparentBackground:]
  -[PUReviewScreenControlBar setShouldLayoutVertically:]
  -[PUReviewScreenControlBar setUseTransparentTouches:]
  -[PUReviewScreenControlBar _updateButtonText]
  -[PUReviewScreenControlBar _updateBackgroundTransparency]
  -[PUReviewScreenControlBar _updateButtonVisibility]
  -[PUReviewScreenControlBar layoutCenterAlignmentPoint]
  -[PUReviewScreenControlBar _buttonsForLayout]
  -[PUReviewScreenControlBar useTransparentTouches]
  -[PUReviewScreenControlBar availableButtons]
  -[PUReviewScreenControlBar enabledButtons]
  -[PUReviewScreenControlBar _buttonForButtonType:]
  -[PUReviewScreenControlBar _isButtonAvailable:]
  -[PUReviewScreenControlBar _isButtonEnabled:]
  -[PUReviewScreenControlBar _setButtonsForLayout:]
  -[PUReviewScreenControlBar useTransparentBackground]


PUReviewScreenControlBarButton : UIButton
 @property  BOOL useCompactSize

  // instance methods
  -[PUReviewScreenControlBarButton _padding]
  -[PUReviewScreenControlBarButton layoutSubviews]
  -[PUReviewScreenControlBarButton _selectedIndicatorAlpha]
  -[PUReviewScreenControlBarButton alignmentRectInsets]
  -[PUReviewScreenControlBarButton intrinsicContentSize]
  -[PUReviewScreenControlBarButton setUseCompactSize:]
  -[PUReviewScreenControlBarButton useCompactSize]


PUReviewScreenControlBarTileViewController : PUTileViewController <PXChangeObserver, PUBrowsingViewModelChangeObserver>
 @property  PUReviewScreenControlBar *_controlBar
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUReviewScreenBarsModel *barsModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewScreenControlBarTileViewController browsingViewModel]
  -[PUReviewScreenControlBarTileViewController becomeReusable]
  -[PUReviewScreenControlBarTileViewController setBrowsingViewModel:]
  -[PUReviewScreenControlBarTileViewController .cxx_destruct]
  -[PUReviewScreenControlBarTileViewController viewModel:didChange:]
  -[PUReviewScreenControlBarTileViewController loadView]
  -[PUReviewScreenControlBarTileViewController barsModel]
  -[PUReviewScreenControlBarTileViewController observable:didChange:context:]
  -[PUReviewScreenControlBarTileViewController _controlBar]
  -[PUReviewScreenControlBarTileViewController _barControlsForModelControls:transitioning:]
  -[PUReviewScreenControlBarTileViewController setBarsModel:]
  -[PUReviewScreenControlBarTileViewController _handleSendButtonTapped:]
  -[PUReviewScreenControlBarTileViewController _handleEditButtonTapped:]
  -[PUReviewScreenControlBarTileViewController _handleMarkupButtonTapped:]
  -[PUReviewScreenControlBarTileViewController _handleFunEffectsButtonTapped:]
  -[PUReviewScreenControlBarTileViewController _updateControls]
  -[PUReviewScreenControlBarTileViewController _updateVisibilityAnimated:]
  -[PUReviewScreenControlBarTileViewController _updateBarLayout]
  -[PUReviewScreenControlBarTileViewController _setControlBar:]


PUBadgeInfoProvider : PXObservable <PUBrowsingVideoPlayerChangeObserver, PXAssetEditOperationManagerObserver>
 @property  double lastPlayingTime
 @property  BOOL playing
 @property  PUAssetViewModel *assetViewModel
 @property  {PXAssetBadgeInfo=Qdq} badgeInfo
 @property  {PXAssetBadgeInfo=Qdq} outputBadgeInfo
 @property  BOOL outputShouldAnimate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBadgeInfoProvider assetViewModel]
  -[PUBadgeInfoProvider setAssetViewModel:]
  -[PUBadgeInfoProvider setPlaying:]
  -[PUBadgeInfoProvider _updateOutputIfNeeded]
  -[PUBadgeInfoProvider didPerformChanges]
  -[PUBadgeInfoProvider performChanges:]
  -[PUBadgeInfoProvider mutableChangeObject]
  -[PUBadgeInfoProvider _updateIfNeeded]
  -[PUBadgeInfoProvider _setNeedsUpdate]
  -[PUBadgeInfoProvider invalidateOutput]
  -[PUBadgeInfoProvider .cxx_destruct]
  -[PUBadgeInfoProvider setLastPlayingTime:]
  -[PUBadgeInfoProvider _setOutputBadgeInfo:shouldAnimate:]
  -[PUBadgeInfoProvider setBadgeInfo:]
  -[PUBadgeInfoProvider badgeInfo]
  -[PUBadgeInfoProvider viewModel:didChange:]
  -[PUBadgeInfoProvider init]
  -[PUBadgeInfoProvider _needsUpdate]
  -[PUBadgeInfoProvider prepareForReuse]
  -[PUBadgeInfoProvider assetEditOperationManager:didChangeEditOperationStatusForAsset:context:]
  -[PUBadgeInfoProvider _invalidateOutput]
  -[PUBadgeInfoProvider outputBadgeInfo]
  -[PUBadgeInfoProvider lastPlayingTime]
  -[PUBadgeInfoProvider _updatePlaying]
  -[PUBadgeInfoProvider playing]
  -[PUBadgeInfoProvider outputShouldAnimate]
  -[PUBadgeInfoProvider _filteredBadgeInfoForTime:outShouldAnimate:]


PUReviewScreenDoneButton : UIButton
 @property  BOOL _needsUpdate
 @property  unsigned long preferredStyle
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets

  // class methods
  +[PUReviewScreenDoneButton doneButton]

  // instance methods
  -[PUReviewScreenDoneButton setTappableEdgeInsets:]
  -[PUReviewScreenDoneButton _updateIfNeeded]
  -[PUReviewScreenDoneButton tappableEdgeInsets]
  -[PUReviewScreenDoneButton layoutSubviews]
  -[PUReviewScreenDoneButton _needsUpdate]
  -[PUReviewScreenDoneButton setPreferredStyle:]
  -[PUReviewScreenDoneButton preferredStyle]
  -[PUReviewScreenDoneButton alignmentRectInsets]
  -[PUReviewScreenDoneButton intrinsicContentSize]
  -[PUReviewScreenDoneButton set_needsUpdate:]


PUCurationTragicFailureInHighlightsGridDebugViewController : PUPhotosAlbumViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  PHPhotosHighlight *highlight
 @property  PUCurationTragicFailureInHighlightsDebugViewController *parentController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCurationTragicFailureInHighlightsGridDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController initWithSpec:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController parentController]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController highlight]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController .cxx_destruct]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController viewDidLoad]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController update]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController viewDidAppear:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController setParentController:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController shouldShowSectionHeaders]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController _presentTapToRadar]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController viewWillDisappear:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController viewWillAppear:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController _fileRadarWithIncorrectAssets:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController _writeDiagnosticsToURL:incorrectAssets:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController _cloneAsset:toDirectory:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController setHighlight:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController toggleShowsAll:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController toggleShowsTragicFailure:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController toggleShowsNonMemorable:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController toggleShowsPoorQuality:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController setButton:toOn:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewController utilityTypesWithAsset:sceneClassifications:]


PUCurationTragicFailureInHighlightsGridDebugViewCell : PUPhotosGridCell
 @property  unsigned long utilityTypes

  // instance methods
  -[PUCurationTragicFailureInHighlightsGridDebugViewCell .cxx_destruct]
  -[PUCurationTragicFailureInHighlightsGridDebugViewCell layoutSubviews]
  -[PUCurationTragicFailureInHighlightsGridDebugViewCell initWithFrame:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewCell setUtilityTypes:]
  -[PUCurationTragicFailureInHighlightsGridDebugViewCell utilityTypes]


PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView : UICollectionViewCell
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView setTitle:]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView .cxx_destruct]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView layoutSubviews]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView setSubtitle:]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView subtitle]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView title]
  -[PUCurationTragicFailureInHighlightsGridDebugDebugViewSectionHeaderView initWithFrame:]


PUReviewScreenScrubberBar : UIView
 @property  PUScrubberView *scrubber

  // instance methods
  -[PUReviewScreenScrubberBar .cxx_destruct]
  -[PUReviewScreenScrubberBar layoutSubviews]
  -[PUReviewScreenScrubberBar scrubber]
  -[PUReviewScreenScrubberBar setScrubber:]


PUAudioClassificationBrowserDebugViewController : UITableViewController
  // instance methods
  -[PUAudioClassificationBrowserDebugViewController tableView:numberOfRowsInSection:]
  -[PUAudioClassificationBrowserDebugViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUAudioClassificationBrowserDebugViewController tableView:heightForRowAtIndexPath:]
  -[PUAudioClassificationBrowserDebugViewController .cxx_destruct]
  -[PUAudioClassificationBrowserDebugViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUAudioClassificationBrowserDebugViewController tableView:didSelectRowAtIndexPath:]
  -[PUAudioClassificationBrowserDebugViewController viewDidLoad]
  -[PUAudioClassificationBrowserDebugViewController tableView:cellForRowAtIndexPath:]
  -[PUAudioClassificationBrowserDebugViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[PUAudioClassificationBrowserDebugViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUAudioClassificationBrowserDebugViewController _fetchAudioClassifications]


PUAudioClassificationBrowserDebugViewCell : UITableViewCell
 @property  NSString *audioClassificationName

  // instance methods
  -[PUAudioClassificationBrowserDebugViewCell .cxx_destruct]
  -[PUAudioClassificationBrowserDebugViewCell audioClassificationName]
  -[PUAudioClassificationBrowserDebugViewCell setAudioClassificationName:]


PUReviewScreenScrubberBarTileViewController : PUTileViewController <PXChangeObserver, PUBrowsingViewModelChangeObserver>
 @property  PUReviewScreenScrubberBar *_scrubberBar
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUReviewScreenBarsModel *barsModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewScreenScrubberBarTileViewController browsingViewModel]
  -[PUReviewScreenScrubberBarTileViewController becomeReusable]
  -[PUReviewScreenScrubberBarTileViewController setBrowsingViewModel:]
  -[PUReviewScreenScrubberBarTileViewController .cxx_destruct]
  -[PUReviewScreenScrubberBarTileViewController viewModel:didChange:]
  -[PUReviewScreenScrubberBarTileViewController _updateViews]
  -[PUReviewScreenScrubberBarTileViewController loadView]
  -[PUReviewScreenScrubberBarTileViewController barsModel]
  -[PUReviewScreenScrubberBarTileViewController observable:didChange:context:]
  -[PUReviewScreenScrubberBarTileViewController setBarsModel:]
  -[PUReviewScreenScrubberBarTileViewController _updateVisibilityAnimated:]
  -[PUReviewScreenScrubberBarTileViewController _scrubberBar]
  -[PUReviewScreenScrubberBarTileViewController _setScrubberBar:]


PUReviewScreenSpec : NSObject
 @property  unsigned long options
 @property  unsigned long oneUpOptions
 @property  BOOL allowSendButton

  // instance methods
  -[PUReviewScreenSpec options]
  -[PUReviewScreenSpec initWithOptions:]
  -[PUReviewScreenSpec oneUpOptions]
  -[PUReviewScreenSpec allowSendButton]


PUReviewScreenTopBar : UIView
 @property  NSSet *availableButtons
 @property  NSSet *enabledButtons
 @property  unsigned long backgroundStyle
 @property  {CGPoint=dd} doneButtonCenterAlignmentPoint
 @property  PUReviewScreenDoneButton *doneButton
 @property  UIButton *retakeButton

  // class methods
  +[PUReviewScreenTopBar supportedButtons]

  // instance methods
  -[PUReviewScreenTopBar hitTest:withEvent:]
  -[PUReviewScreenTopBar _updateBackgroundColor]
  -[PUReviewScreenTopBar setBackgroundStyle:]
  -[PUReviewScreenTopBar backgroundStyle]
  -[PUReviewScreenTopBar .cxx_destruct]
  -[PUReviewScreenTopBar layoutSubviews]
  -[PUReviewScreenTopBar doneButton]
  -[PUReviewScreenTopBar initWithFrame:]
  -[PUReviewScreenTopBar didMoveToWindow]
  -[PUReviewScreenTopBar setAvailableButtons:]
  -[PUReviewScreenTopBar setEnabledButtons:]
  -[PUReviewScreenTopBar retakeButton]
  -[PUReviewScreenTopBar _updateButtonVisibility]
  -[PUReviewScreenTopBar availableButtons]
  -[PUReviewScreenTopBar enabledButtons]
  -[PUReviewScreenTopBar _buttonForButtonType:]
  -[PUReviewScreenTopBar _isButtonAvailable:]
  -[PUReviewScreenTopBar _isButtonEnabled:]
  -[PUReviewScreenTopBar doneButtonCenterAlignmentPoint]
  -[PUReviewScreenTopBar setDoneButtonCenterAlignmentPoint:]


PUReviewScreenTopBarTileViewController : PUTileViewController <PXChangeObserver, PUBrowsingViewModelChangeObserver>
 @property  PUReviewScreenTopBar *_topBar
 @property  PUBrowsingViewModel *browsingViewModel
 @property  PUReviewScreenBarsModel *barsModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewScreenTopBarTileViewController _topBar]
  -[PUReviewScreenTopBarTileViewController browsingViewModel]
  -[PUReviewScreenTopBarTileViewController becomeReusable]
  -[PUReviewScreenTopBarTileViewController setBrowsingViewModel:]
  -[PUReviewScreenTopBarTileViewController .cxx_destruct]
  -[PUReviewScreenTopBarTileViewController viewModel:didChange:]
  -[PUReviewScreenTopBarTileViewController loadView]
  -[PUReviewScreenTopBarTileViewController barsModel]
  -[PUReviewScreenTopBarTileViewController observable:didChange:context:]
  -[PUReviewScreenTopBarTileViewController setBarsModel:]
  -[PUReviewScreenTopBarTileViewController _updateControls]
  -[PUReviewScreenTopBarTileViewController _updateVisibilityAnimated:]
  -[PUReviewScreenTopBarTileViewController _updateBarLayout]
  -[PUReviewScreenTopBarTileViewController _handleDoneButtonTapped:]
  -[PUReviewScreenTopBarTileViewController _handleRetakeButtonTapped:]
  -[PUReviewScreenTopBarTileViewController _setTopBar:]


PUReviewScreenUtilities : NSObject
  // class methods
  +[PUReviewScreenUtilities reviewScreenTopBarGeometryForReferenceBounds:withOrientation:]
  +[PUReviewScreenUtilities reviewScreenControlBarGeometryForReferenceBounds:withOrientation:]
  +[PUReviewScreenUtilities reviewScreenScrubberBarGeometryForReferenceBounds:withOrientation:safeAreaInsets:]
  +[PUReviewScreenUtilities reviewScreenContentGeometryForReferenceBounds:forContentSize:withOrientation:]
  +[PUReviewScreenUtilities useCompactControlBarButtonsForReferenceBounds:]
  +[PUReviewScreenUtilities doneButtonStyleForReferenceBounds:]
  +[PUReviewScreenUtilities _cameraBottomBarHeightForSizeSpec:]
  +[PUReviewScreenUtilities _orientedBoundsForReferenceBounds:sizeClass:]
  +[PUReviewScreenUtilities _cameraTopBarHeightForSizeSpec:]
  +[PUReviewScreenUtilities _layoutMarginInsetsForSizeSpec:]
  +[PUReviewScreenUtilities _cameraBottomBarWidthForSizeSpec:]
  +[PUReviewScreenUtilities cameraContentFrameForContentAspectRatio:referenceBounds:shouldShiftPreviewForUtilityBar:]
  +[PUReviewScreenUtilities cameraTopBarFrameForReferenceBounds:]
  +[PUReviewScreenUtilities cameraBottomBarFrameForReferenceBounds:]
  +[PUReviewScreenUtilities _geometryForCameraTopBarFrame:inReferenceBounds:forContentSize:orientation:]
  +[PUReviewScreenUtilities _geometryForBarFrame:inReferenceBounds:orientation:]
  +[PUReviewScreenUtilities cameraContentGeometryForReferenceBounds:forContentSize:withOrientation:shouldShiftPreviewForUtilityBar:]
  +[PUReviewScreenUtilities _reviewScreenTopBarHeightForSizeSpec:]
  +[PUReviewScreenUtilities _reviewScreenControlBarHeightForSizeSpec:]
  +[PUReviewScreenUtilities _reviewScreenControlBarWidthForSizeSpec:]
  +[PUReviewScreenUtilities reviewScreenScrubberBarFrameForReferenceBounds:safeAreaInsets:]
  +[PUReviewScreenUtilities _reviewScreenScrubberBarHeightForSizeClass:]
  +[PUReviewScreenUtilities _transformForRotationAboutCenterOfReferenceBounds:withOrientationTransform:]
  +[PUReviewScreenUtilities reviewScreenTopBarFrameForReferenceBounds:]
  +[PUReviewScreenUtilities reviewScreenControlBarFrameForReferenceBounds:]
  +[PUReviewScreenUtilities cameraContentFrameForContentAspectRatio:referenceBounds:]
  +[PUReviewScreenUtilities _portraitBoundsForReferenceBounds:]
  +[PUReviewScreenUtilities cameraTopBarGeometryForReferenceBounds:forContentSize:withOrientation:]
  +[PUReviewScreenUtilities cameraBottomBarGeometryForReferenceBounds:withOrientation:]
  +[PUReviewScreenUtilities cameraContentGeometryForReferenceBounds:forContentSize:withOrientation:]
  +[PUReviewScreenUtilities orientedGeometryForFrame:inBounds:orientation:]
  +[PUReviewScreenUtilities reviewScreenScrubberBarFrameForReferenceBounds:]
  +[PUReviewScreenUtilities reviewScreenScrubberBarGeometryForReferenceBounds:withOrientation:]


PUReviewScrubber : UIToolbar <UICollectionViewDelegate, UICollectionViewDataSource, UIGestureRecognizerDelegate>
 @property  _UIBackdropView *_backdropView
 @property  UIImageView *_shadowView
 @property  UIImageView *_arrowImageView
 @property  PUHorizontalCollectionViewLayout *_collectionViewLayout
 @property  UICollectionView *_collectionView
 @property  NSString *cellReuseIdentifier
 @property  BOOL _ignoreScrollViewDidScrollUpdate
 @property  BOOL _performingInteractiveUpdate
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  UIImpactFeedbackGenerator *_impactFeedbackBehavior
 @property  NSIndexPath *_indexPathForPreviousFeedbackQuery
 @property  <PUReviewScrubberDataSource> *dataSource
 @property  <PUReviewScrubberDelegate> *scrubberDelegate
 @property  NSIndexPath *selectedIndexPath
 @property  Class scrubberCellClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUReviewScrubber collectionView:cellForItemAtIndexPath:]
  -[PUReviewScrubber _tapGestureRecognizer]
  -[PUReviewScrubber collectionView:numberOfItemsInSection:]
  -[PUReviewScrubber hitTest:withEvent:]
  -[PUReviewScrubber _collectionView]
  -[PUReviewScrubber numberOfSectionsInCollectionView:]
  -[PUReviewScrubber initWithCoder:]
  -[PUReviewScrubber collectionView:shouldSelectItemAtIndexPath:]
  -[PUReviewScrubber gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUReviewScrubber setDataSource:]
  -[PUReviewScrubber isMinibar]
  -[PUReviewScrubber .cxx_destruct]
  -[PUReviewScrubber layoutSubviews]
  -[PUReviewScrubber scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUReviewScrubber dataSource]
  -[PUReviewScrubber scrollViewDidEndDragging:willDecelerate:]
  -[PUReviewScrubber scrollViewDidScroll:]
  -[PUReviewScrubber _backdropView]
  -[PUReviewScrubber sizeThatFits:]
  -[PUReviewScrubber scrollViewWillBeginDragging:]
  -[PUReviewScrubber _collectionViewLayout]
  -[PUReviewScrubber initWithFrame:]
  -[PUReviewScrubber selectedIndexPath]
  -[PUReviewScrubber _shadowView]
  -[PUReviewScrubber dealloc]
  -[PUReviewScrubber reloadData]
  -[PUReviewScrubber setCellReuseIdentifier:]
  -[PUReviewScrubber scrollViewDidEndDecelerating:]
  -[PUReviewScrubber setSelectedIndexPath:]
  -[PUReviewScrubber cellReuseIdentifier]
  -[PUReviewScrubber setScrubberDelegate:]
  -[PUReviewScrubber beginInteractiveUpdate]
  -[PUReviewScrubber _indexPathInCollectionView:closestToPoint:excludingIndexPath:]
  -[PUReviewScrubber _handleTapAtIndexPath:]
  -[PUReviewScrubber updateWithAbsoluteProgress:]
  -[PUReviewScrubber toggleIndexPath:animated:]
  -[PUReviewScrubber reloadIndexPath:animated:]
  -[PUReviewScrubber finishInteractiveUpdate]
  -[PUReviewScrubber setScrubberCellClass:]
  -[PUReviewScrubber _handleTapOnReviewScrubber:]
  -[PUReviewScrubber _commonPUReviewScrubberInitialization]
  -[PUReviewScrubber _endFeedbackInteraction]
  -[PUReviewScrubber _performingInteractiveUpdate]
  -[PUReviewScrubber contentOffsetForIndexPath:inCollectionView:]
  -[PUReviewScrubber setSelectedIndexPath:animated:]
  -[PUReviewScrubber _updateContentOffsetForSelectedIndexPathAnimated:]
  -[PUReviewScrubber _setIndexPathForPreviousFeedbackQuery:]
  -[PUReviewScrubber scrubberDelegate]
  -[PUReviewScrubber _beginFeedbackInteraction]
  -[PUReviewScrubber _playFeedbackIfNeeded]
  -[PUReviewScrubber indexPathUnderTickMarkInCollectionView:atContentOffset:]
  -[PUReviewScrubber _impactFeedbackBehavior]
  -[PUReviewScrubber _indexPathForPreviousFeedbackQuery]
  -[PUReviewScrubber _updateToSelectedIndexPath:]
  -[PUReviewScrubber _notifyDelegateOfSelection]
  -[PUReviewScrubber contentOffsetForItemAtIndex:ofScrollView:]
  -[PUReviewScrubber _notifyDelegateOfScrub]
  -[PUReviewScrubber toggleSelectedIndexPathAnimated:]
  -[PUReviewScrubber reloadSelectedIndexPathAnimated:]
  -[PUReviewScrubber scrubberCellClass]
  -[PUReviewScrubber _arrowImageView]
  -[PUReviewScrubber _ignoreScrollViewDidScrollUpdate]


PUReviewScrubberCell : UICollectionViewCell
 @property  UIImageView *_thumbnailImageView
 @property  UIImageView *_checkmarkImageView
 @property  UIImageView *_suggestedImageView
 @property  UIImage *image
 @property  BOOL favorite
 @property  BOOL suggested
 @property  BOOL wantsSmallSuggestionIndicators

  // instance methods
  -[PUReviewScrubberCell initWithCoder:]
  -[PUReviewScrubberCell image]
  -[PUReviewScrubberCell _thumbnailImageView]
  -[PUReviewScrubberCell .cxx_destruct]
  -[PUReviewScrubberCell _checkmarkImageView]
  -[PUReviewScrubberCell layoutSubviews]
  -[PUReviewScrubberCell setSuggested:]
  -[PUReviewScrubberCell isSuggested]
  -[PUReviewScrubberCell initWithFrame:]
  -[PUReviewScrubberCell setFavorite:]
  -[PUReviewScrubberCell setImage:]
  -[PUReviewScrubberCell isFavorite]
  -[PUReviewScrubberCell setWantsSmallSuggestionIndicators:]
  -[PUReviewScrubberCell setFavorite:animated:]
  -[PUReviewScrubberCell _updateFavoriteView]
  -[PUReviewScrubberCell _updateSuggestedView]
  -[PUReviewScrubberCell _commonPUReviewScrubberCellInitialization]
  -[PUReviewScrubberCell _updateThumbnailImageView]
  -[PUReviewScrubberCell setSuggested:animated:]
  -[PUReviewScrubberCell wantsSmallSuggestionIndicators]
  -[PUReviewScrubberCell _suggestedImageView]


PURootSettings : PXSettings <PXFavoritesSettingsDelegate>
 @property  NSString *_internal_libraryStateBriefDescription
 @property  UIImage *_internal_libraryStateImage
 @property  BOOL allowIrisUI
 @property  PUCompositeVideoSettings *compositeVideoSettings
 @property  PUTabbedLibrarySettings *tabbedLibrarySettings
 @property  PUPhotosGridSettings *photosGridSettings
 @property  PUPhotoEditProtoSettings *photoEditingSettings
 @property  PUFeedSettings *feedSettings
 @property  PUMomentsSettings *momentsSettings
 @property  PUMedusaSettings *medusaSettings
 @property  PUOneUpSettings *oneUpSettings
 @property  PUTilingViewSettings *tilingViewSettings
 @property  Class interfaceThemeClass
 @property  PUAirPlaySettings *airPlaySettings
 @property  PUSlideshowSettings *slideshowSettings
 @property  PUAlbumListSettings *albumListSettings
 @property  PUWelcomeSettings *welcomeSettings
 @property  PUWorkaroundSettings *workaroundSettings
 @property  PUSceneSettings *sceneSettings
 @property  PUAudioClassificationSettings *audioClassificationSettings
 @property  PXSharingSettings *sharingSettings
 @property  PUCurationSettings *curation
 @property  PUSuggestionsSettings *suggestions
 @property  PUIrisSettings *irisSettings
 @property  PUPerformanceDiagnosticsSettings *performanceDiagnosticsSettings
 @property  PXImportSettings *importSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PURootSettings sharedInstance]
  +[PURootSettings settingsControllerModule]
  +[PURootSettings presentSettingsController]
  +[PURootSettings _photosUIAppsSettings]
  +[PURootSettings _deleteAllDiagnosticFiles]
  +[PURootSettings _setCurrentAsset:]
  +[PURootSettings photosUITesterRootViewController]
  +[PURootSettings _saveScreenshot:]
  +[PURootSettings _presentTapToRadar]
  +[PURootSettings _photoKitSettings]
  +[PURootSettings _debugRowsForViewControllerStack:]
  +[PURootSettings _setDebugRows:]
  +[PURootSettings currentAsset]
  +[PURootSettings setupStatusBarInternalSettingsGestureOnInternalDevices]
  +[PURootSettings _photosUICoreSettings]
  +[PURootSettings dismissSettingsController:]
  +[PURootSettings setupStatusBarDoubleTapOnInternalDevices]

  // instance methods
  -[PURootSettings createChildren]
  -[PURootSettings medusaSettings]
  -[PURootSettings sceneSettings]
  -[PURootSettings setWelcomeSettings:]
  -[PURootSettings setIrisSettings:]
  -[PURootSettings setMomentsSettings:]
  -[PURootSettings parentSettings]
  -[PURootSettings archiveValueForKey:]
  -[PURootSettings applyArchiveValue:forKey:]
  -[PURootSettings tilingViewSettings]
  -[PURootSettings _internal_libraryStateBriefDescription]
  -[PURootSettings setSuggestions:]
  -[PURootSettings _internal_libraryStateImage]
  -[PURootSettings importSettings]
  -[PURootSettings .cxx_destruct]
  -[PURootSettings setSharingSettings:]
  -[PURootSettings sharingSettings]
  -[PURootSettings setDefaultValues]
  -[PURootSettings momentsSettings]
  -[PURootSettings setPhotoEditingSettings:]
  -[PURootSettings reparentedRootSettings]
  -[PURootSettings workaroundSettings]
  -[PURootSettings feedSettings]
  -[PURootSettings slideshowSettings]
  -[PURootSettings irisUIEnabled]
  -[PURootSettings setPhotosGridSettings:]
  -[PURootSettings set_internal_libraryStateBriefDescription:]
  -[PURootSettings performanceDiagnosticsSettings]
  -[PURootSettings setTabbedLibrarySettings:]
  -[PURootSettings set_internal_libraryStateImage:]
  -[PURootSettings suggestions]
  -[PURootSettings setWorkaroundSettings:]
  -[PURootSettings setTilingViewSettings:]
  -[PURootSettings setMedusaSettings:]
  -[PURootSettings curation]
  -[PURootSettings photosGridSettings]
  -[PURootSettings setEnforceDisableIrisUI:]
  -[PURootSettings setAirPlaySettings:]
  -[PURootSettings setPerformanceDiagnosticsSettings:]
  -[PURootSettings irisSettings]
  -[PURootSettings setFeedSettings:]
  -[PURootSettings oneUpSettings]
  -[PURootSettings allowIrisUI]
  -[PURootSettings photoEditingSettings]
  -[PURootSettings airPlaySettings]
  -[PURootSettings restoreDefaultValues]
  -[PURootSettings welcomeSettings]
  -[PURootSettings setCompositeVideoSettings:]
  -[PURootSettings favoritesSettings]
  -[PURootSettings compositeVideoSettings]
  -[PURootSettings albumListSettings]
  -[PURootSettings favoritesSettings:loadAccessorySettingsWithCompletionHandler:]
  -[PURootSettings favoritesSettingsDidChangeFavorites:]
  -[PURootSettings setOneUpSettings:]
  -[PURootSettings setSceneSettings:]
  -[PURootSettings tabbedLibrarySettings]
  -[PURootSettings audioClassificationSettings]
  -[PURootSettings setInterfaceThemeClass:]
  -[PURootSettings setAudioClassificationSettings:]
  -[PURootSettings setAllowIrisUI:]
  -[PURootSettings setSlideshowSettings:]
  -[PURootSettings interfaceThemeClass]
  -[PURootSettings setAlbumListSettings:]
  -[PURootSettings _setObservationEnabled:]
  -[PURootSettings setCuration:]
  -[PURootSettings setImportSettings:]


_PUSettingsController : PTUISettingsController
 @property  UINavigationController *searchNavigationController
 @property  UINavigationController *configurationsNavigationController
 @property  BOOL hasWarnedForOverrides
 @property  PTSettings *rootSettings
 @property  PXSettings *currentSettings
 @property  @? onViewDidDisappearBlock
 @property  @? dismissButtonFactory
 @property  @? ellipsisBarButtonItemFactory

  // instance methods
  -[_PUSettingsController .cxx_destruct]
  -[_PUSettingsController viewDidAppear:]
  -[_PUSettingsController pushViewController:animated:]
  -[_PUSettingsController rootSettings]
  -[_PUSettingsController currentSettings]
  -[_PUSettingsController viewDidDisappear:]
  -[_PUSettingsController initWithRootSettings:]
  -[_PUSettingsController setDismissButtonFactory:]
  -[_PUSettingsController dismissButtonFactory]
  -[_PUSettingsController handleEllipsisBarButtonItem:]
  -[_PUSettingsController setEllipsisBarButtonItemFactory:]
  -[_PUSettingsController setOnViewDidDisappearBlock:]
  -[_PUSettingsController callOnViewDidDisappearBlock]
  -[_PUSettingsController hasWarnedForOverrides]
  -[_PUSettingsController setHasWarnedForOverrides:]
  -[_PUSettingsController _warnForSettingsOverride]
  -[_PUSettingsController onViewDidDisappearBlock]
  -[_PUSettingsController _invalidateNavigationItems]
  -[_PUSettingsController _updateNavigationItemOfViewController:]
  -[_PUSettingsController ellipsisBarButtonItemFactory]
  -[_PUSettingsController searchNavigationController]
  -[_PUSettingsController _clearSettingsOverride]
  -[_PUSettingsController configurationsNavigationController]


PUSaveReviewAssetRequest : NSObject <PXRunNodeDelegate>
 @property  int identifier
 @property  <PUEditableAsset> *editableAsset
 @property  PUEditableMediaProvider *editableMediaProvider
 @property  NSURL *directory
 @property  PICompositionController *compositionController
 @property  PUPhotoEditIrisModel *irisModel
 @property  PHContentEditingOutput *contentEditingOutput
 @property  long long workImageVersion
 @property  long long currentState
 @property  BOOL supportsProgress
 @property  double progress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSaveReviewAssetRequest directory]
  -[PUSaveReviewAssetRequest _transitionToState:]
  -[PUSaveReviewAssetRequest .cxx_destruct]
  -[PUSaveReviewAssetRequest progress]
  -[PUSaveReviewAssetRequest init]
  -[PUSaveReviewAssetRequest identifier]
  -[PUSaveReviewAssetRequest currentState]
  -[PUSaveReviewAssetRequest compositionController]
  -[PUSaveReviewAssetRequest irisModel]
  -[PUSaveReviewAssetRequest contentEditingOutput]
  -[PUSaveReviewAssetRequest _requiresVideoRender]
  -[PUSaveReviewAssetRequest supportsProgress]
  -[PUSaveReviewAssetRequest beginSaveOperationWithCompletionHandler:]
  -[PUSaveReviewAssetRequest _imageRequestVersion]
  -[PUSaveReviewAssetRequest _videoRequestVersion]
  -[PUSaveReviewAssetRequest cancelSaveOperation]
  -[PUSaveReviewAssetRequest workImageVersion]
  -[PUSaveReviewAssetRequest runNode:didCompleteWithError:]
  -[PUSaveReviewAssetRequest runNode:didCancelWithError:]
  -[PUSaveReviewAssetRequest initWithAsset:mediaProvider:directory:contentEditingOutput:workImageVersion:irisEditModel:]
  -[PUSaveReviewAssetRequest initWithAssetForCopying:mediaProvider:directory:resourceURL:contentEditingOutput:workImageVersion:irisEditModel:]
  -[PUSaveReviewAssetRequest initWithAsset:mediaProvider:directory:compositionController:workImageVersion:irisEditModel:]
  -[PUSaveReviewAssetRequest initWithAssetForRevertToOriginal:mediaProvider:directory:]
  -[PUSaveReviewAssetRequest initWithAsset:mediaProvider:directory:compositionController:contentEditingOutput:workImageVersion:irisEditModel:]
  -[PUSaveReviewAssetRequest _performInternalSaveOperation]
  -[PUSaveReviewAssetRequest _performSaveOperation]
  -[PUSaveReviewAssetRequest editableAsset]
  -[PUSaveReviewAssetRequest editableMediaProvider]
  -[PUSaveReviewAssetRequest _handleOutputNodeFinishedWithError:]
  -[PUSaveReviewAssetRequest _finishWithAsset:error:]


PUSaveToCameraRollActivity : UISaveToCameraRollActivity <PXActivity>
 @property  <PXActivityItemSourceController> *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSaveToCameraRollActivity .cxx_destruct]
  -[PUSaveToCameraRollActivity canPerformWithActivityItems:]
  -[PUSaveToCameraRollActivity performActivity]
  -[PUSaveToCameraRollActivity prepareWithActivityItems:]
  -[PUSaveToCameraRollActivity itemSourceController]
  -[PUSaveToCameraRollActivity setItemSourceController:]
  -[PUSaveToCameraRollActivity _itemIsVideoAtURL:]


PUSceneDebugGridViewController : PUPhotosAlbumViewController
 @property  NSNumber *sceneIdentifier
 @property  NSDictionary *assetsHighestConfidence

  // class methods
  +[PUSceneDebugGridViewController assetResourceLargestToSmallestComparator]

  // instance methods
  -[PUSceneDebugGridViewController setSceneIdentifier:]
  -[PUSceneDebugGridViewController sceneIdentifier]
  -[PUSceneDebugGridViewController .cxx_destruct]
  -[PUSceneDebugGridViewController _localFileURLForAssetResource:error:]
  -[PUSceneDebugGridViewController _fileRadarWithIncorrectAssets:]
  -[PUSceneDebugGridViewController _writeDiagnosticsToURL:incorrectAssets:]
  -[PUSceneDebugGridViewController _cloneAsset:toDirectory:]
  -[PUSceneDebugGridViewController _globalHeaderTitle]
  -[PUSceneDebugGridViewController configureGlobalHeaderView:]
  -[PUSceneDebugGridViewController globalHeaderHeight]
  -[PUSceneDebugGridViewController allowSlideshowButton]
  -[PUSceneDebugGridViewController getEmptyPlaceholderViewTitle:message:buttonTitle:buttonAction:]
  -[PUSceneDebugGridViewController _newEditActionItemsWithWideSpacing:]
  -[PUSceneDebugGridViewController configureDecorationsForCell:withAsset:assetCollection:thumbnailIsPlaceholder:assetMayHaveChanged:]
  -[PUSceneDebugGridViewController _isJunkSceneIdentifer:]
  -[PUSceneDebugGridViewController _keywordForSceneIdentifier:]
  -[PUSceneDebugGridViewController _tappedFileRadarButton:]
  -[PUSceneDebugGridViewController assetsHighestConfidence]
  -[PUSceneDebugGridViewController assetShouldBeSurpassedInNormalUI:]
  -[PUSceneDebugGridViewController assetConfidenceIsAboveThreshold:]
  -[PUSceneDebugGridViewController _thresholdForSceneIdentifer:]
  -[PUSceneDebugGridViewController _assetResourceForAsset:]
  -[PUSceneDebugGridViewController preferredAssetResourcesForAnalyzingAsset:]
  -[PUSceneDebugGridViewController assetResourceFromAcceptableAssetResources:]
  -[PUSceneDebugGridViewController _assetResourcesForAssets:]
  -[PUSceneDebugGridViewController setAssetsHighestConfidence:]


PUSceneDebugInspectorCell : UITableViewCell
 @property  UILabel *keywordLabel
 @property  UILabel *synonymsLabel
 @property  UILabel *sceneIdentifierLabel
 @property  UILabel *countLabel
 @property  UILabel *isIndexedLabel
 @property  UILabel *thresholdLabel
 @property  UILabel *coverageLabel
 @property  PUSceneDebugInspectorSceneViewModel *viewModel

  // class methods
  +[PUSceneDebugInspectorCell reuseIdentifier]

  // instance methods
  -[PUSceneDebugInspectorCell setViewModel:]
  -[PUSceneDebugInspectorCell .cxx_destruct]
  -[PUSceneDebugInspectorCell viewModel]
  -[PUSceneDebugInspectorCell setCountLabel:]
  -[PUSceneDebugInspectorCell countLabel]
  -[PUSceneDebugInspectorCell prepareForReuse]
  -[PUSceneDebugInspectorCell initWithStyle:reuseIdentifier:]
  -[PUSceneDebugInspectorCell keywordLabel]
  -[PUSceneDebugInspectorCell setKeywordLabel:]
  -[PUSceneDebugInspectorCell synonymsLabel]
  -[PUSceneDebugInspectorCell setSynonymsLabel:]
  -[PUSceneDebugInspectorCell sceneIdentifierLabel]
  -[PUSceneDebugInspectorCell setSceneIdentifierLabel:]
  -[PUSceneDebugInspectorCell isIndexedLabel]
  -[PUSceneDebugInspectorCell setIsIndexedLabel:]
  -[PUSceneDebugInspectorCell thresholdLabel]
  -[PUSceneDebugInspectorCell setThresholdLabel:]
  -[PUSceneDebugInspectorCell coverageLabel]
  -[PUSceneDebugInspectorCell setCoverageLabel:]


PUSceneDebugInspectorSceneViewModel : NSObject
 @property  NSString *keyword
 @property  unsigned int sceneIdentifier
 @property  BOOL isIndexed
 @property  double threshold
 @property  NSArray *synonyms
 @property  unsigned long count
 @property  unsigned long highConfidenceCount
 @property  double libraryCoverage

  // instance methods
  -[PUSceneDebugInspectorSceneViewModel isIndexed]
  -[PUSceneDebugInspectorSceneViewModel threshold]
  -[PUSceneDebugInspectorSceneViewModel sceneIdentifier]
  -[PUSceneDebugInspectorSceneViewModel .cxx_destruct]
  -[PUSceneDebugInspectorSceneViewModel keyword]
  -[PUSceneDebugInspectorSceneViewModel count]
  -[PUSceneDebugInspectorSceneViewModel synonyms]
  -[PUSceneDebugInspectorSceneViewModel setCount:]
  -[PUSceneDebugInspectorSceneViewModel libraryCoverage]
  -[PUSceneDebugInspectorSceneViewModel concatenatedSynonyms]
  -[PUSceneDebugInspectorSceneViewModel initWithKeyword:synonyms:sceneIdentifier:indexed:threshold:]
  -[PUSceneDebugInspectorSceneViewModel highConfidenceCount]
  -[PUSceneDebugInspectorSceneViewModel setHighConfidenceCount:]
  -[PUSceneDebugInspectorSceneViewModel setLibraryCoverage:]


PUFilterToolController : PUPhotoEditToolController <CEKWheelScrubberViewDelegate, CEKSliderDelegate>
 @property  @? willLoadFilterThumbnails
 @property  @? didFinishLoadingFilterThumbnails
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUFilterToolController updateViewConstraints]
  -[PUFilterToolController localizedName]
  -[PUFilterToolController wheelScrubberView:updateCell:forItemAtIndex:]
  -[PUFilterToolController initWithCoder:]
  -[PUFilterToolController wheelScrubberViewDidChangeSelectedIndex:]
  -[PUFilterToolController .cxx_destruct]
  -[PUFilterToolController viewDidLoad]
  -[PUFilterToolController viewDidAppear:]
  -[PUFilterToolController initWithNibName:bundle:]
  -[PUFilterToolController _sliderDidEndScrolling]
  -[PUFilterToolController sliderWillBeginScrolling:]
  -[PUFilterToolController sliderDidScroll:]
  -[PUFilterToolController sliderWillEndScrolling:withVelocity:targetContentOffset:]
  -[PUFilterToolController sliderDidEndScrolling:]
  -[PUFilterToolController _updateBadgeConstraints]
  -[PUFilterToolController setLayoutOrientation:withTransitionCoordinator:]
  -[PUFilterToolController compositionControllerDidChangeForAdjustments:]
  -[PUFilterToolController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUFilterToolController toolbarIcon]
  -[PUFilterToolController centerToolbarView]
  -[PUFilterToolController wantsZoomAndPanEnabled]
  -[PUFilterToolController wantsSliderKeyControl]
  -[PUFilterToolController increaseSliderValue:]
  -[PUFilterToolController decreaseSliderValue:]
  -[PUFilterToolController installTogglePreviewGestureRecognizer:]
  -[PUFilterToolController installLivePhotoPlaybackGestureRecognizer:]
  -[PUFilterToolController willBecomeActiveTool]
  -[PUFilterToolController toolControllerTag]
  -[PUFilterToolController viewDidDisappear:]
  -[PUFilterToolController didResignActiveTool]
  -[PUFilterToolController _updateToolConstraints]
  -[PUFilterToolController wantsScrubberKeyControl]
  -[PUFilterToolController increaseScrubberValue:]
  -[PUFilterToolController decreaseScrubberValue:]
  -[PUFilterToolController setWillLoadFilterThumbnails:]
  -[PUFilterToolController setDidFinishLoadingFilterThumbnails:]
  -[PUFilterToolController _updateScrubberLayout]
  -[PUFilterToolController _updateWithCompositionController:]
  -[PUFilterToolController _prepareThumbnailImagesIfNeeded]
  -[PUFilterToolController _adjustedFilterIndex]
  -[PUFilterToolController _adjustedFilterIntensity]
  -[PUFilterToolController _updateFilterIntensityCache]
  -[PUFilterToolController _effectForIndex:]
  -[PUFilterToolController _updateBadgeAndSliderWithEffect:]
  -[PUFilterToolController willLoadFilterThumbnails]
  -[PUFilterToolController _updateCacheWithCIImage:]
  -[PUFilterToolController didFinishLoadingFilterThumbnails]
  -[PUFilterToolController _adjustedFilterName]
  -[PUFilterToolController _indexForFilterId:]
  -[PUFilterToolController _effectAdjustment]
  -[PUFilterToolController _setShowSlider:animate:]
  -[PUFilterToolController _updateIntensityForEffect:]
  -[PUFilterToolController _updateSelectionTextAnimate:]
  -[PUFilterToolController wheelScrubberViewWillBeginScrolling:]
  -[PUFilterToolController wheelScrubberViewDidEndScrolling:]
  -[PUFilterToolController _setupScrubber]
  -[PUFilterToolController _setupFilters]
  -[PUFilterToolController _setupSlider]
  -[PUFilterToolController _setThumbnail:forKey:]


PUSceneDebugInspectorViewController : UITableViewController <UISearchResultsUpdating>
 @property  NSArray *currentSceneViewModels
 @property  NSArray *sceneViewModelsAll
 @property  NSArray *sceneViewModelsSearched
 @property  NSDictionary *groupedSceneViewModels
 @property  NSArray *groupedSceneViewModelTitles
 @property  UIView *loadingContentView
 @property  UIBarButtonItem *sortButton
 @property  UIBarButtonItem *shareButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUSceneDebugInspectorViewController _shortTitlesForSectionTitles:SortOrder:]
  +[PUSceneDebugInspectorViewController _assetGridViewControllerForViewModel:interfaceIdiom:]
  +[PUSceneDebugInspectorViewController _titleForSortOrder:]
  +[PUSceneDebugInspectorViewController _sectionTitleForSceneViewModel:sortOrder:]
  +[PUSceneDebugInspectorViewController _sortedSceneViewModels:sortOrder:]
  +[PUSceneDebugInspectorViewController _isAscendingForSortOrder:]
  +[PUSceneDebugInspectorViewController _keyForSortOrder:]
  +[PUSceneDebugInspectorViewController _commaSeparatedValueRepresentation:]
  +[PUSceneDebugInspectorViewController highestConfidenceForAsset:sceneIdentifier:]

  // instance methods
  -[PUSceneDebugInspectorViewController sectionIndexTitlesForTableView:]
  -[PUSceneDebugInspectorViewController numberOfSectionsInTableView:]
  -[PUSceneDebugInspectorViewController updateSearchResultsForSearchController:]
  -[PUSceneDebugInspectorViewController tableView:numberOfRowsInSection:]
  -[PUSceneDebugInspectorViewController tableView:titleForHeaderInSection:]
  -[PUSceneDebugInspectorViewController .cxx_destruct]
  -[PUSceneDebugInspectorViewController tableView:didSelectRowAtIndexPath:]
  -[PUSceneDebugInspectorViewController viewDidLoad]
  -[PUSceneDebugInspectorViewController tableView:cellForRowAtIndexPath:]
  -[PUSceneDebugInspectorViewController viewWillAppear:]
  -[PUSceneDebugInspectorViewController loadingContentView]
  -[PUSceneDebugInspectorViewController shareButton]
  -[PUSceneDebugInspectorViewController sortButton]
  -[PUSceneDebugInspectorViewController didSelectDoneButton:]
  -[PUSceneDebugInspectorViewController setSceneViewModelsAll:]
  -[PUSceneDebugInspectorViewController setSceneViewModelsSearched:]
  -[PUSceneDebugInspectorViewController sceneViewModelsAll]
  -[PUSceneDebugInspectorViewController _reloadTableViewByGroupingViewModels:sortOrder:]
  -[PUSceneDebugInspectorViewController groupedSceneViewModelTitles]
  -[PUSceneDebugInspectorViewController groupedSceneViewModels]
  -[PUSceneDebugInspectorViewController currentSceneViewModels]
  -[PUSceneDebugInspectorViewController didSelectSortButton:]
  -[PUSceneDebugInspectorViewController setGroupedSceneViewModels:]
  -[PUSceneDebugInspectorViewController setGroupedSceneViewModelTitles:]
  -[PUSceneDebugInspectorViewController sceneViewModelsSearched]
  -[PUSceneDebugInspectorViewController didSelectShareButton:]


PUSceneSettings : PXSettings
 @property  BOOL showConfidenceOverlay
 @property  unsigned long inspectorSortOrder

  // class methods
  +[PUSceneSettings sharedInstance]
  +[PUSceneSettings settingsControllerModule]

  // instance methods
  -[PUSceneSettings parentSettings]
  -[PUSceneSettings showConfidenceOverlay]
  -[PUSceneSettings setDefaultValues]
  -[PUSceneSettings inspectorSortOrder]
  -[PUSceneSettings setInspectorSortOrder:]
  -[PUSceneSettings setShowConfidenceOverlay:]


PUScrollViewSpeedometer : NSObject
 @property  {CGPoint=dd} scrollSpeed
 @property  long long regime
 @property  UIScrollView *_lastScrollView
 @property  {CGSize=dd} _lastContentSize
 @property  double _lastTime
 @property  {CGPoint=dd} _lastContentOffset
 @property  NSTimer *_timeoutTimer
 @property  long long _nextRegime
 @property  long long _nextRegimeCount
 @property  <PUScrollViewSpeedometerDelegate> *delegate
 @property  double mediumUpperThreshold
 @property  double mediumLowerThreshold
 @property  double fastUpperThreshold
 @property  double fastLowerThreshold

  // instance methods
  -[PUScrollViewSpeedometer _setNextRegime:]
  -[PUScrollViewSpeedometer _lastTime]
  -[PUScrollViewSpeedometer fastUpperThreshold]
  -[PUScrollViewSpeedometer _rescheduleTimeout]
  -[PUScrollViewSpeedometer _setRegime:]
  -[PUScrollViewSpeedometer .cxx_destruct]
  -[PUScrollViewSpeedometer mediumUpperThreshold]
  -[PUScrollViewSpeedometer scrollSpeed]
  -[PUScrollViewSpeedometer scrollViewDidScrollToTop:]
  -[PUScrollViewSpeedometer setDelegate:]
  -[PUScrollViewSpeedometer _lastContentSize]
  -[PUScrollViewSpeedometer regime]
  -[PUScrollViewSpeedometer scrollViewDidEndDragging:willDecelerate:]
  -[PUScrollViewSpeedometer scrollViewDidScroll:]
  -[PUScrollViewSpeedometer _timeoutTimer]
  -[PUScrollViewSpeedometer _nextRegime]
  -[PUScrollViewSpeedometer _handleTimeoutTimer:]
  -[PUScrollViewSpeedometer _lastContentOffset]
  -[PUScrollViewSpeedometer scrollViewWillBeginDragging:]
  -[PUScrollViewSpeedometer delegate]
  -[PUScrollViewSpeedometer _setLastTime:]
  -[PUScrollViewSpeedometer _setNextRegimeCount:]
  -[PUScrollViewSpeedometer _setTimeoutTimer:]
  -[PUScrollViewSpeedometer fastLowerThreshold]
  -[PUScrollViewSpeedometer _nextRegimeCount]
  -[PUScrollViewSpeedometer scrollViewDidEndDecelerating:]
  -[PUScrollViewSpeedometer mediumLowerThreshold]
  -[PUScrollViewSpeedometer setMediumUpperThreshold:]
  -[PUScrollViewSpeedometer setMediumLowerThreshold:]
  -[PUScrollViewSpeedometer setFastUpperThreshold:]
  -[PUScrollViewSpeedometer setFastLowerThreshold:]
  -[PUScrollViewSpeedometer scrollViewWillScrollToTop:]
  -[PUScrollViewSpeedometer _lastScrollView]
  -[PUScrollViewSpeedometer _setLastScrollView:]
  -[PUScrollViewSpeedometer _setLastContentSize:]
  -[PUScrollViewSpeedometer _setScrollSpeed:]
  -[PUScrollViewSpeedometer _setLastContentOffset:]
  -[PUScrollViewSpeedometer _newRegimeForScrollSpeed:]


PUScrubberBarItemController : NSObject
 @property  PUBrowsingSession *browsingSession
 @property  UIBarButtonItem *scrubberBarButtonItem

  // instance methods
  -[PUScrubberBarItemController browsingSession]
  -[PUScrubberBarItemController setBrowsingSession:]
  -[PUScrubberBarItemController .cxx_destruct]
  -[PUScrubberBarItemController _invalidateScrubberBarButtonItem]
  -[PUScrubberBarItemController _updateScrubberBarButtonItemIfNeeded]
  -[PUScrubberBarItemController scrubberBarButtonItem]


PUSidebarReorderController : NSObject
 @property  <PXNavigationListItem> *itemToReorder
 @property  UICollectionViewDiffableDataSource *dataSource
 @property  PXSidebarOutlineSectionController *sidebarOutlineSectionController

  // instance methods
  -[PUSidebarReorderController .cxx_destruct]
  -[PUSidebarReorderController dataSource]
  -[PUSidebarReorderController sidebarOutlineSectionController]
  -[PUSidebarReorderController canReorderItem:]
  -[PUSidebarReorderController performReorderWithTransaction:]
  -[PUSidebarReorderController initWithDataSource:outlineSectionController:]
  -[PUSidebarReorderController targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:]
  -[PUSidebarReorderController setItemToReorder:]
  -[PUSidebarReorderController itemToReorder]


PUScrubberSettings : PXSettings
 @property  unsigned long previewInteractiveLoupeBehavior
 @property  BOOL usePreviewScrubberMargins
 @property  BOOL useTrianglePositionIndicator
 @property  unsigned long interactiveLoupeBehavior
 @property  double tapAnimationDuration
 @property  double smoothingAnimationDuration
 @property  double settleAnimationDuration
 @property  double settleRequiredDecelerationDistance
 @property  double decelerationTargetExpansionDistance
 @property  double verticalMargin
 @property  double topOutset
 @property  double slitAspectRatio
 @property  double maxAspectRatio
 @property  double interItemSpacing
 @property  double interSectionSpacing
 @property  BOOL useSmoothingAnimation
 @property  double minVideoDuration
 @property  double baseVideoWidth
 @property  double filmstripAspectRatio
 @property  BOOL dynamicSeekTolerance
 @property  long long defaultPlaybackIndicator
 @property  long long initialPlaybackIndicator
 @property  long long scrubbingPlaybackIndicator
 @property  long long chromeShownPlaybackIndicator
 @property  long long playingPlaybackIndicator

  // class methods
  +[PUScrubberSettings sharedInstance]
  +[PUScrubberSettings settingsControllerModule]

  // instance methods
  -[PUScrubberSettings setInterItemSpacing:]
  -[PUScrubberSettings interSectionSpacing]
  -[PUScrubberSettings setInterSectionSpacing:]
  -[PUScrubberSettings setBaseVideoWidth:]
  -[PUScrubberSettings setInteractiveLoupeBehavior:]
  -[PUScrubberSettings parentSettings]
  -[PUScrubberSettings minVideoDuration]
  -[PUScrubberSettings filmstripAspectRatio]
  -[PUScrubberSettings setPreviewInteractiveLoupeBehavior:]
  -[PUScrubberSettings setUseSmoothingAnimation:]
  -[PUScrubberSettings chromeShownPlaybackIndicator]
  -[PUScrubberSettings setDefaultPlaybackIndicator:]
  -[PUScrubberSettings slitAspectRatio]
  -[PUScrubberSettings setSettleRequiredDecelerationDistance:]
  -[PUScrubberSettings previewInteractiveLoupeBehavior]
  -[PUScrubberSettings dynamicSeekTolerance]
  -[PUScrubberSettings setUsePreviewScrubberMargins:]
  -[PUScrubberSettings setDefaultValues]
  -[PUScrubberSettings settleRequiredDecelerationDistance]
  -[PUScrubberSettings usePreviewScrubberMargins]
  -[PUScrubberSettings setMaxAspectRatio:]
  -[PUScrubberSettings setSettleAnimationDuration:]
  -[PUScrubberSettings setTopOutset:]
  -[PUScrubberSettings baseVideoWidth]
  -[PUScrubberSettings setTapAnimationDuration:]
  -[PUScrubberSettings useTrianglePositionIndicator]
  -[PUScrubberSettings setFilmstripAspectRatio:]
  -[PUScrubberSettings setScrubbingPlaybackIndicator:]
  -[PUScrubberSettings initialPlaybackIndicator]
  -[PUScrubberSettings setPlayingPlaybackIndicator:]
  -[PUScrubberSettings playingPlaybackIndicator]
  -[PUScrubberSettings smoothingAnimationDuration]
  -[PUScrubberSettings interactiveLoupeBehavior]
  -[PUScrubberSettings setChromeShownPlaybackIndicator:]
  -[PUScrubberSettings maxAspectRatio]
  -[PUScrubberSettings setDynamicSeekTolerance:]
  -[PUScrubberSettings settleAnimationDuration]
  -[PUScrubberSettings setSmoothingAnimationDuration:]
  -[PUScrubberSettings setMinVideoDuration:]
  -[PUScrubberSettings setInitialPlaybackIndicator:]
  -[PUScrubberSettings tapAnimationDuration]
  -[PUScrubberSettings useSmoothingAnimation]
  -[PUScrubberSettings setDecelerationTargetExpansionDistance:]
  -[PUScrubberSettings topOutset]
  -[PUScrubberSettings verticalMargin]
  -[PUScrubberSettings scrubbingPlaybackIndicator]
  -[PUScrubberSettings decelerationTargetExpansionDistance]
  -[PUScrubberSettings interItemSpacing]
  -[PUScrubberSettings setVerticalMargin:]
  -[PUScrubberSettings defaultPlaybackIndicator]
  -[PUScrubberSettings setSlitAspectRatio:]
  -[PUScrubberSettings setUseTrianglePositionIndicator:]


PUScrubberTilingLayout : PUSectionedTilingLayout
 @property  <PUScrubberTilingLayoutDelegate> *delegate
 @property  {CGSize=dd} interItemSpacing
 @property  double playheadVerticalOverhang
 @property  {UIEdgeInsets=dddd} contentPadding
 @property  double slitAspectRatio
 @property  double maxAspectRatio
 @property  NSIndexPath *currentItemIndexPath
 @property  double currentItemTransitionProgress
 @property  double currentItemFocusProgress
 @property  NSIndexPath *loupeIndexPath
 @property  double loupeTransitionProgress
 @property  NSIndexPath *overrideLoupeIndexPath
 @property  double loupeAmount
 @property  NSIndexPath *expandedItemIndexPath
 @property  BOOL onlyShowExpandedItem
 @property  BOOL showPlayheadForExpandedItem
 @property  double expandedItemWidth
 @property  double expandedItemPlayheadProgress
 @property  BOOL snapToExpandedItem
 @property  {CGPoint=dd} focusPoint

  // instance methods
  -[PUScrubberTilingLayout setInterItemSpacing:]
  -[PUScrubberTilingLayout overrideLoupeIndexPath]
  -[PUScrubberTilingLayout onlyShowExpandedItem]
  -[PUScrubberTilingLayout contentBounds]
  -[PUScrubberTilingLayout contentPadding]
  -[PUScrubberTilingLayout prepareLayout]
  -[PUScrubberTilingLayout setExpandedItemWidth:]
  -[PUScrubberTilingLayout slitAspectRatio]
  -[PUScrubberTilingLayout loupeIndexPath]
  -[PUScrubberTilingLayout .cxx_destruct]
  -[PUScrubberTilingLayout _loupeAmountFor:]
  -[PUScrubberTilingLayout setOverrideLoupeIndexPath:]
  -[PUScrubberTilingLayout _normalizedTransitionProgressFrom:withAbscissa:outNeighborIndexPath:]
  -[PUScrubberTilingLayout setMaxAspectRatio:]
  -[PUScrubberTilingLayout loupeTransitionProgress]
  -[PUScrubberTilingLayout setDelegate:]
  -[PUScrubberTilingLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUScrubberTilingLayout setContentPadding:]
  -[PUScrubberTilingLayout expandedItemWidth]
  -[PUScrubberTilingLayout addLayoutInfosForTilesInRect:section:toSet:]
  -[PUScrubberTilingLayout init]
  -[PUScrubberTilingLayout setExpandedItemPlayheadProgress:]
  -[PUScrubberTilingLayout setVisibleRect:]
  -[PUScrubberTilingLayout currentItemFocusProgress]
  -[PUScrubberTilingLayout focusPoint]
  -[PUScrubberTilingLayout _rectForItemAtIndexPath:withLoupeTransform:withExpanded:]
  -[PUScrubberTilingLayout _shouldShowTimeIndicatorForExpandedItemAtIndexPath:]
  -[PUScrubberTilingLayout maxAspectRatio]
  -[PUScrubberTilingLayout indexPathOfItemClosestToPoint:]
  -[PUScrubberTilingLayout _transformedSizeForIndexPath:]
  -[PUScrubberTilingLayout setPlayheadVerticalOverhang:]
  -[PUScrubberTilingLayout expandedItemIndexPath]
  -[PUScrubberTilingLayout _indexOfItemClosestToAbscissa:inSection:]
  -[PUScrubberTilingLayout loupeAmount]
  -[PUScrubberTilingLayout delegate]
  -[PUScrubberTilingLayout visibleRectForScrollingToItemAtIndexPath:scrollPosition:]
  -[PUScrubberTilingLayout _createLayoutInfoForTileWithIndexPath:kind:]
  -[PUScrubberTilingLayout setOnlyShowExpandedItem:]
  -[PUScrubberTilingLayout setShowPlayheadForExpandedItem:]
  -[PUScrubberTilingLayout currentItemIndexPath]
  -[PUScrubberTilingLayout _transformedHorizontalOffsetForIndexPath:]
  -[PUScrubberTilingLayout sizeForSection:numberOfItems:]
  -[PUScrubberTilingLayout visibleRectForScrollingToItemAtIndexPath:transitionProgress:]
  -[PUScrubberTilingLayout snapToExpandedItem]
  -[PUScrubberTilingLayout currentItemTransitionProgress]
  -[PUScrubberTilingLayout setSnapToExpandedItem:]
  -[PUScrubberTilingLayout preferredScrollInfo]
  -[PUScrubberTilingLayout invalidateLayoutWithContext:]
  -[PUScrubberTilingLayout expandedItemPlayheadProgress]
  -[PUScrubberTilingLayout _slitSize]
  -[PUScrubberTilingLayout estimatedSectionSize]
  -[PUScrubberTilingLayout playheadVerticalOverhang]
  -[PUScrubberTilingLayout setLoupeAmount:]
  -[PUScrubberTilingLayout interItemSpacing]
  -[PUScrubberTilingLayout setSlitAspectRatio:]
  -[PUScrubberTilingLayout setExpandedItemIndexPath:]
  -[PUScrubberTilingLayout _indexPathOfItemClosestToAbscissa:]
  -[PUScrubberTilingLayout _focusAbscissa]
  -[PUScrubberTilingLayout _aspectRatioForIndexPath:]
  -[PUScrubberTilingLayout showPlayheadForExpandedItem]


PUScrubberTilingLayoutInvalidationContext : PUTilingLayoutInvalidationContext
 @property  BOOL invalidatedExpandedItem

  // instance methods
  -[PUScrubberTilingLayoutInvalidationContext invalidateExpandedItem]
  -[PUScrubberTilingLayoutInvalidationContext invalidatedExpandedItem]


PUScrubberView : UIView <PUTilingViewTileSource, PUTilingViewTileTransitionDelegate, PUTilingViewScrollDelegate, UIScrollViewDelegate, PUBrowsingViewModelChangeObserver, PUScrubberTilingLayoutDelegate, PXVideoScrubberControllerDelegate, PUPlaybackTimeIndicatorTileViewControllerDelegate, UIGestureRecognizerDelegate>
 @property  PUScrubberTilingLayout *_scrubberLayout
 @property  PUTilingView *_tilingView
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  PXVideoScrubberController *_videoScrubberController
 @property  long long _expandedItemType
 @property  BOOL _isHandlingUserScroll
 @property  BOOL _isScrubbingAwayFromContentEdge
 @property  BOOL _scrollViewSettled
 @property  BOOL _useLoupe
 @property  BOOL _thinLoupe
 @property  BOOL _useSmoothingTransitionCoordinator
 @property  BOOL _snapToExpandedItem
 @property  NSIndexPath *_decelerationTargetIndexPath
 @property  {CGPoint=dd} _decelerationTargetOffset
 @property  double _decelerationDistance
 @property  long long _layoutTransitionsDisabledCount
 @property  double _scrubbingTransitionProgress
 @property  BOOL _isHandlingScrollViewWillEndDragging
 @property  BOOL _layoutTransitionsDisabled
 @property  BOOL currentDragBeganOnContent
 @property  PUBrowsingSession *browsingSession
 @property  long long type
 @property  <PUScrubberViewDelegate> *delegate
 @property  double topOutset
 @property  UIScrollView *scrollViewForPreviewing
 @property  BOOL isForPreview
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUScrubberView browsingSession]
  -[PUScrubberView _tapGestureRecognizer]
  -[PUScrubberView isForPreview]
  -[PUScrubberView setBrowsingSession:]
  -[PUScrubberView hitTest:withEvent:]
  -[PUScrubberView _decelerationDistance]
  -[PUScrubberView _setThinLoupe:]
  -[PUScrubberView _newScrubberLayout]
  -[PUScrubberView _disableLayoutTransitionsForDuration:]
  -[PUScrubberView _reenableLayoutTransitions]
  -[PUScrubberView _setVideoScrubberController:]
  -[PUScrubberView _setDecelerationTargetIndexPath:]
  -[PUScrubberView _isDrivingPlayheadProgress]
  -[PUScrubberView _invalidateSnapToExpandedItem]
  -[PUScrubberView _isContentScrubbing]
  -[PUScrubberView tilingView:dataSourceConverterForTransitionFromLayout:toLayout:]
  -[PUScrubberView _allowExitFromContentScrubbing]
  -[PUScrubberView updateIfNeeded]
  -[PUScrubberView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUScrubberView _setUseLoupe:]
  -[PUScrubberView _setNeedsUpdate]
  -[PUScrubberView _decelerationTargetOffset]
  -[PUScrubberView _useLoupe]
  -[PUScrubberView handleTouchGesture:]
  -[PUScrubberView setType:]
  -[PUScrubberView _playheadProgressForIrisAssetReference:]
  -[PUScrubberView _tilingView]
  -[PUScrubberView .cxx_destruct]
  -[PUScrubberView setCurrentDragBeganOnContent:]
  -[PUScrubberView _isLibraryScrubbing]
  -[PUScrubberView videoScrubberController:desiredSeekTime:]
  -[PUScrubberView cancelDeceleration]
  -[PUScrubberView layoutSubviews]
  -[PUScrubberView _invalidateScrubberLayoutEnsureTransition]
  -[PUScrubberView _updateTilingViewIfNeeded]
  -[PUScrubberView setDelegate:]
  -[PUScrubberView _handleTapOnBrowsingIrisPlayer:]
  -[PUScrubberView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[PUScrubberView viewModel:didChange:]
  -[PUScrubberView endPreviewing]
  -[PUScrubberView tilingView:tileControllerWithIndexPath:kind:dataSource:]
  -[PUScrubberView _setTilingView:]
  -[PUScrubberView scrollViewForPreviewing]
  -[PUScrubberView tilingView:tileTransitionCoordinatorForTransitionFromLayout:toLayout:withContext:]
  -[PUScrubberView _currentAssetsDataSource]
  -[PUScrubberView _setHandlingScrollViewWillEndDragging:]
  -[PUScrubberView scrollViewDidEndDragging:willDecelerate:]
  -[PUScrubberView _scrollViewSettled]
  -[PUScrubberView videoScrubberController:lengthForDuration:]
  -[PUScrubberView scrollViewDidScroll:]
  -[PUScrubberView _updateLoupeEffectIfNeeded]
  -[PUScrubberView _videoScrubberController]
  -[PUScrubberView _invalidateLoupeEffect]
  -[PUScrubberView tilingView:targetVisibleOriginForProposedVisibleOrigin:withLayout:]
  -[PUScrubberView _isHandlingScrollViewWillEndDragging]
  -[PUScrubberView _handleTap:]
  -[PUScrubberView _setIsHandlingUserScroll:]
  -[PUScrubberView _updateSnapToExpandedItemIfNeeded]
  -[PUScrubberView tilingView:tileTransitionCoordinatorForLayoutInvalidationContext:]
  -[PUScrubberView _endScrubbing]
  -[PUScrubberView layout:shouldShowTimeIndicatorForExpandedItemAtIndexPath:]
  -[PUScrubberView _updateScrollPositionAnimated:]
  -[PUScrubberView _setScrubbingTransitionProgress:]
  -[PUScrubberView scrollViewWillBeginDragging:]
  -[PUScrubberView _setExpandedItemType:]
  -[PUScrubberView _setScrubberLayout:]
  -[PUScrubberView initWithFrame:]
  -[PUScrubberView _handleTapOnBrowsingVideoPlayer:]
  -[PUScrubberView _lengthForDuration:]
  -[PUScrubberView type]
  -[PUScrubberView tilingView:tileTransitionCoordinatorForChangeFromFrame:toFrame:duration:]
  -[PUScrubberView delegate]
  -[PUScrubberView setIsForPreview:]
  -[PUScrubberView _invalidateScrubberLayout]
  -[PUScrubberView _expandedAssetReference]
  -[PUScrubberView _setScrubbingAwayFromContentEdge:]
  -[PUScrubberView _updateScrubbingAwayFromContentEdgeBeganDragging:]
  -[PUScrubberView _layoutTransitionsDisabledCount]
  -[PUScrubberView tilingView:initialVisibleOriginWithLayout:]
  -[PUScrubberView _setUseSmoothingTransitionCoordinator:]
  -[PUScrubberView topOutset]
  -[PUScrubberView _scrubberLayout]
  -[PUScrubberView dealloc]
  -[PUScrubberView _areLayoutTransitionsDisabled]
  -[PUScrubberView _expandedItemWidth]
  -[PUScrubberView _scrubbingTransitionProgress]
  -[PUScrubberView _decelerationTargetIndexPath]
  -[PUScrubberView playbackTimeIndicatorTileViewControllerCanFlashIndicator:]
  -[PUScrubberView _useSmoothingTransitionCoordinator]
  -[PUScrubberView _thinLoupe]
  -[PUScrubberView beginPreviewing]
  -[PUScrubberView _setDecelerationDistance:]
  -[PUScrubberView videoScrubberControllerDidUpdate:]
  -[PUScrubberView _expandedItemType]
  -[PUScrubberView _handleUserScrollWillBegin:]
  -[PUScrubberView _setSnapToExpandedItem:]
  -[PUScrubberView _snapToExpandedItem]
  -[PUScrubberView scrollViewDidEndDecelerating:]
  -[PUScrubberView _isHandlingUserScroll]
  -[PUScrubberView _setDecelerationTargetOffset:]
  -[PUScrubberView _updateScrubberLayoutIfNeeded]
  -[PUScrubberView _setLayoutTransitionsDisabledCount:]
  -[PUScrubberView currentDragBeganOnContent]
  -[PUScrubberView layout:aspectRatioForItemAtIndexPath:]
  -[PUScrubberView _isScrubbingAwayFromContentEdge]
  -[PUScrubberView _setScrollViewSettled:]


PUSearchDisplayUtility : NSObject
  // class methods
  +[PUSearchDisplayUtility cornerMaskForCell:roundedCornerType:]
  +[PUSearchDisplayUtility applyCornerMaskToCell:roundedCornerType:]
  +[PUSearchDisplayUtility genericCellFromCell:roundedCornerType:]
  +[PUSearchDisplayUtility genericSuggestionsCellFont]
  +[PUSearchDisplayUtility genericSuggestionsTitleCellFont]
  +[PUSearchDisplayUtility indexPathIsLastRowInSection:tableView:]
  +[PUSearchDisplayUtility indexPathIsFirstRowInSection:tableView:]
  +[PUSearchDisplayUtility hasLimitedScreenSize]
  +[PUSearchDisplayUtility feedbackTapToRadarViewControllerWithAttachmentURLs:]


PUSearchHomeGadgetDataSourceManager : PXGadgetDataSourceManager <PUSearchZeroKeywordChangeDelegate>
 @property  PUSearchZeroKeywordDataSource *zeroKeywordDataSource
 @property  NSArray *zeroKeywordGadgetProviders
 @property  PXTapToRadarGadgetProvider *tapToRadarProvider
 @property  long long filteringState
 @property  BOOL isExpectedToLoadNonEmptyDataSourceSoon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSearchHomeGadgetDataSourceManager tapToRadarProvider]
  -[PUSearchHomeGadgetDataSourceManager ppt_prepareZeroKeywordRequest:]
  -[PUSearchHomeGadgetDataSourceManager zeroKeywordDataSource]
  -[PUSearchHomeGadgetDataSourceManager isExpectedToLoadNonEmptyDataSourceSoon]
  -[PUSearchHomeGadgetDataSourceManager setZeroKeywordGadgetProviders:]
  -[PUSearchHomeGadgetDataSourceManager .cxx_destruct]
  -[PUSearchHomeGadgetDataSourceManager setTapToRadarProvider:]
  -[PUSearchHomeGadgetDataSourceManager gadgetProviders]
  -[PUSearchHomeGadgetDataSourceManager init]
  -[PUSearchHomeGadgetDataSourceManager refreshData]
  -[PUSearchHomeGadgetDataSourceManager filteringState]
  -[PUSearchHomeGadgetDataSourceManager hiddenGadgetProviders]
  -[PUSearchHomeGadgetDataSourceManager setFilteringState:]
  -[PUSearchHomeGadgetDataSourceManager _waitForFirstDisplayTimedOut]
  -[PUSearchHomeGadgetDataSourceManager _zeroKeywordDataSourceHasZeroKeywords]
  -[PUSearchHomeGadgetDataSourceManager zeroKeywordGadgetProviders]
  -[PUSearchHomeGadgetDataSourceManager didUpdateSections:]


PUSearchHomeThumbnailManager : NSObject
 @property  NSCache *cache
 @property  NSMutableDictionary *metadataPlist
 @property  NSObject<OS_dispatch_queue> *metadataQueue
 @property  PXPlacesSearchProvider *placesProvider
 @property  NSTimer *diskTimer
 @property  NSMutableDictionary *thumbnailsToWrite

  // class methods
  +[PUSearchHomeThumbnailManager _filePathForMetadataPlist]
  +[PUSearchHomeThumbnailManager _filePathForHash:]
  +[PUSearchHomeThumbnailManager _thumbnailFilePath]

  // instance methods
  -[PUSearchHomeThumbnailManager setCache:]
  -[PUSearchHomeThumbnailManager .cxx_destruct]
  -[PUSearchHomeThumbnailManager cache]
  -[PUSearchHomeThumbnailManager init]
  -[PUSearchHomeThumbnailManager diskTimer]
  -[PUSearchHomeThumbnailManager _createThumbnailDirectoryIfNeeded]
  -[PUSearchHomeThumbnailManager _hashStringForKey:size:interfaceStyle:displayScale:]
  -[PUSearchHomeThumbnailManager _setInMemoryThumbnail:forHashString:]
  -[PUSearchHomeThumbnailManager _imageForHomeZeroKeywordWithMapImage:]
  -[PUSearchHomeThumbnailManager _setInMemoryAndPersistToDiskThumbnail:forHashString:]
  -[PUSearchHomeThumbnailManager _fetchImageForLocation:size:traitCollection:completion:]
  -[PUSearchHomeThumbnailManager placesProvider]
  -[PUSearchHomeThumbnailManager _setMetadataDate:forKey:]
  -[PUSearchHomeThumbnailManager metadataQueue]
  -[PUSearchHomeThumbnailManager thumbnailsToWrite]
  -[PUSearchHomeThumbnailManager setThumbnailsToWrite:]
  -[PUSearchHomeThumbnailManager _writeMetadataPlistToDisk]
  -[PUSearchHomeThumbnailManager setDiskTimer:]
  -[PUSearchHomeThumbnailManager metadataPlist]
  -[PUSearchHomeThumbnailManager thumbnailForKey:type:traitCollection:withSize:completion:]
  -[PUSearchHomeThumbnailManager setMetadataPlist:]
  -[PUSearchHomeThumbnailManager setMetadataQueue:]
  -[PUSearchHomeThumbnailManager setPlacesProvider:]


PUSearchHomeViewController : PXGadgetUIViewController <UISearchControllerDelegate>
 @property  PUSearchHomeGadgetDataSourceManager *searchHomeDataSourceManager
 @property  <PXViewControllerEventTracker> *searchControllerEventTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUSearchHomeViewController gadgetSpecClass]

  // instance methods
  -[PUSearchHomeViewController routingOptionsForDestination:]
  -[PUSearchHomeViewController px_gridPresentation]
  -[PUSearchHomeViewController navigateToDestination:options:completionHandler:]
  -[PUSearchHomeViewController ppt_prepareZeroKeywordRequest:]
  -[PUSearchHomeViewController gadget:didChange:]
  -[PUSearchHomeViewController didDismissSearchController:]
  -[PUSearchHomeViewController presentSiriSearchRequest:resultCount:]
  -[PUSearchHomeViewController px_navigationDestination]
  -[PUSearchHomeViewController presentOneYearAgo]
  -[PUSearchHomeViewController searchControllerEventTracker]
  -[PUSearchHomeViewController .cxx_destruct]
  -[PUSearchHomeViewController viewDidLoad]
  -[PUSearchHomeViewController didPresentSearchController:]
  -[PUSearchHomeViewController ppt_prepareForSearchScrollingTestWithSearchText:completion:]
  -[PUSearchHomeViewController setSearchHomeDataSourceManager:]
  -[PUSearchHomeViewController _configureSearchNavigationBar]
  -[PUSearchHomeViewController viewDidAppear:]
  -[PUSearchHomeViewController scrollAnimationIdentifier]
  -[PUSearchHomeViewController setSearchControllerEventTracker:]
  -[PUSearchHomeViewController pu_scrollToInitialPositionAnimated:]
  -[PUSearchHomeViewController selectZeroKeyword:]
  -[PUSearchHomeViewController init]
  -[PUSearchHomeViewController performRecentSearch:]
  -[PUSearchHomeViewController nextExistingParticipantOnRouteToDestination:]
  -[PUSearchHomeViewController shouldPreventPlaceholder]
  -[PUSearchHomeViewController _clearSearchField]
  -[PUSearchHomeViewController scrollViewDidScroll:]
  -[PUSearchHomeViewController ppt_dismissKeyboard]
  -[PUSearchHomeViewController ppt_prepareForSearchTest:]
  -[PUSearchHomeViewController presentSearchWithText:searchCategory:]
  -[PUSearchHomeViewController presentForSearchHashtag:]
  -[PUSearchHomeViewController viewWillAppear:]
  -[PUSearchHomeViewController _notifyAnalyticsSearchAction:]
  -[PUSearchHomeViewController presentSpotlightSearch:]
  -[PUSearchHomeViewController searchHomeDataSourceManager]
  -[PUSearchHomeViewController activateSearchField]
  -[PUSearchHomeViewController viewDidDisappear:]


PUBehavioralCurationCheckAssetBrowserDebugViewController : PUPhotosAlbumViewController <UIPickerViewDataSource, UIPickerViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController .cxx_destruct]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController viewDidLoad]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController _update]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController numberOfComponentsInPickerView:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController pickerView:numberOfRowsInComponent:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController pickerView:rowHeightForComponent:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController pickerView:titleForRow:forComponent:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController pickerView:didSelectRow:inComponent:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController viewWillAppear:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController _editSettings:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController _doneEditingSettings:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController shouldShowToolbar]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController newToolbarItems]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController selectionNames]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController predicateForSelectionName:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController sortDescriptorForSelectionName:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController _goldAssetUUIDs]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController phScoreKeyPathsForSelectionName:]
  -[PUBehavioralCurationCheckAssetBrowserDebugViewController semanticScoreFromBehavioralScore:]


PUBehavioralCurationCheckAssetBrowserDebugPhotosGridCell : PUPhotosGridCell
 @property  NSString *score

  // instance methods
  -[PUBehavioralCurationCheckAssetBrowserDebugPhotosGridCell setScore:]
  -[PUBehavioralCurationCheckAssetBrowserDebugPhotosGridCell .cxx_destruct]
  -[PUBehavioralCurationCheckAssetBrowserDebugPhotosGridCell layoutSubviews]
  -[PUBehavioralCurationCheckAssetBrowserDebugPhotosGridCell score]


PUSearchRecentSearchesGadget : UITableViewController <PXGadget>
 @property  NSArray *recentSearches
 @property  NSLayoutConstraint *separatorRegularTrailingConstraint
 @property  NSLayoutConstraint *separatorCompactWidthConstraint
 @property  unsigned long accessoryButtonType
 @property  unsigned long gadgetType
 @property  unsigned long gadgetCapabilities
 @property  PXGadgetSpec *gadgetSpec
 @property  <PXGadgetDelegate> *delegate
 @property  NSString *localizedTitle
 @property  NSString *accessoryButtonTitle
 @property  unsigned long headerStyle
 @property  long long priority
 @property  Class collectionViewItemClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleContentRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSearchRecentSearchesGadget setGadgetSpec:]
  -[PUSearchRecentSearchesGadget localizedTitle]
  -[PUSearchRecentSearchesGadget gadgetCapabilities]
  -[PUSearchRecentSearchesGadget gadgetType]
  -[PUSearchRecentSearchesGadget gadgetSpec]
  -[PUSearchRecentSearchesGadget contentSize]
  -[PUSearchRecentSearchesGadget traitCollectionDidChange:]
  -[PUSearchRecentSearchesGadget tableView:numberOfRowsInSection:]
  -[PUSearchRecentSearchesGadget .cxx_destruct]
  -[PUSearchRecentSearchesGadget tableView:didSelectRowAtIndexPath:]
  -[PUSearchRecentSearchesGadget viewDidLoad]
  -[PUSearchRecentSearchesGadget tableView:cellForRowAtIndexPath:]
  -[PUSearchRecentSearchesGadget setDelegate:]
  -[PUSearchRecentSearchesGadget init]
  -[PUSearchRecentSearchesGadget sizeThatFits:]
  -[PUSearchRecentSearchesGadget contentViewController]
  -[PUSearchRecentSearchesGadget delegate]
  -[PUSearchRecentSearchesGadget dealloc]
  -[PUSearchRecentSearchesGadget accessoryButtonType]
  -[PUSearchRecentSearchesGadget viewLayoutMarginsDidChange]
  -[PUSearchRecentSearchesGadget _reloadData]
  -[PUSearchRecentSearchesGadget headerStyle]
  -[PUSearchRecentSearchesGadget observeValueForKeyPath:ofObject:change:context:]
  -[PUSearchRecentSearchesGadget userDidSelectAccessoryButton:]
  -[PUSearchRecentSearchesGadget setSeparatorCompactWidthConstraint:]
  -[PUSearchRecentSearchesGadget setSeparatorRegularTrailingConstraint:]
  -[PUSearchRecentSearchesGadget recentSearches]
  -[PUSearchRecentSearchesGadget setRecentSearches:]
  -[PUSearchRecentSearchesGadget _updateTableViewLayoutMargins]
  -[PUSearchRecentSearchesGadget resetLineSeparatorInsets]
  -[PUSearchRecentSearchesGadget separatorRegularTrailingConstraint]
  -[PUSearchRecentSearchesGadget separatorCompactWidthConstraint]


PUSearchRecentSearchesGadgetProvider : PXGadgetProvider
  // instance methods
  -[PUSearchRecentSearchesGadgetProvider init]
  -[PUSearchRecentSearchesGadgetProvider generateGadgets]
  -[PUSearchRecentSearchesGadgetProvider estimatedNumberOfGadgets]


PUPhotoEditReframeHUD : UIView
 @property  PXHUDView *hudView
 @property  PXHUDVisualization *detailVisualization
 @property  PXHUDVisualization *pregatedVisualization
 @property  PXHUDVisualization *overcaptureVisualization
 @property  PXHUDVisualization *subjectsVisualization
 @property  PXHUDVisualization *stitchedVisualization
 @property  PXHUDVisualization *tripodVisualization
 @property  PXHUDVisualization *buildingVisualization
 @property  PXHUDVisualization *reframedVisualization
 @property  PXHUDVisualization *resultReframeVisualization
 @property  PXHUDVisualization *resultPerspectiveVisualization
 @property  PXHUDVisualization *resultHorizonVisualization
 @property  NSString *detailText

  // instance methods
  -[PUPhotoEditReframeHUD initWithCoder:]
  -[PUPhotoEditReframeHUD detailText]
  -[PUPhotoEditReframeHUD .cxx_destruct]
  -[PUPhotoEditReframeHUD setDetailText:]
  -[PUPhotoEditReframeHUD hudView]
  -[PUPhotoEditReframeHUD initWithFrame:]
  -[PUPhotoEditReframeHUD detailVisualization]
  -[PUPhotoEditReframeHUD setHudView:]
  -[PUPhotoEditReframeHUD setDetailVisualization:]
  -[PUPhotoEditReframeHUD showStatsForPhoto:]
  -[PUPhotoEditReframeHUD pregatedVisualization]
  -[PUPhotoEditReframeHUD reframedVisualization]
  -[PUPhotoEditReframeHUD overcaptureVisualization]
  -[PUPhotoEditReframeHUD tripodVisualization]
  -[PUPhotoEditReframeHUD subjectsVisualization]
  -[PUPhotoEditReframeHUD stitchedVisualization]
  -[PUPhotoEditReframeHUD buildingVisualization]
  -[PUPhotoEditReframeHUD resultReframeVisualization]
  -[PUPhotoEditReframeHUD resultPerspectiveVisualization]
  -[PUPhotoEditReframeHUD resultHorizonVisualization]
  -[PUPhotoEditReframeHUD setPregatedVisualization:]
  -[PUPhotoEditReframeHUD setOvercaptureVisualization:]
  -[PUPhotoEditReframeHUD setSubjectsVisualization:]
  -[PUPhotoEditReframeHUD setStitchedVisualization:]
  -[PUPhotoEditReframeHUD setTripodVisualization:]
  -[PUPhotoEditReframeHUD setBuildingVisualization:]
  -[PUPhotoEditReframeHUD setReframedVisualization:]
  -[PUPhotoEditReframeHUD setResultReframeVisualization:]
  -[PUPhotoEditReframeHUD setResultPerspectiveVisualization:]
  -[PUPhotoEditReframeHUD setResultHorizonVisualization:]


PUSearchZeroKeywordDataSource : NSObject
 @property  BOOL fetchInProgress
 @property  NSObject<OS_dispatch_queue> *fetchQueue
 @property  NSArray *sections
 @property  <PUSearchZeroKeywordChangeDelegate> *delegate

  // class methods
  +[PUSearchZeroKeywordDataSource _fetchFinalMergeTargetPersonForPersonLocalIdentifier:]
  +[PUSearchZeroKeywordDataSource _sceneViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _placeViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _zeroKeywordsFromDefaultKeywordStore]
  +[PUSearchZeroKeywordDataSource zeroKeywordLog]
  +[PUSearchZeroKeywordDataSource _sectionsForZeroKeywords:personsByLocalIdentifier:]
  +[PUSearchZeroKeywordDataSource _personsForLocalIdentifiers:]
  +[PUSearchZeroKeywordDataSource _personsByLocalIdentifiers:allUniqueLocalIdentifiers:]
  +[PUSearchZeroKeywordDataSource _socialGroupsByKeywordwithPersonsByLocalIdentifier:socialGroupZeroKeywords:]
  +[PUSearchZeroKeywordDataSource _fetchKeyAssetForSceneIdentifier:]
  +[PUSearchZeroKeywordDataSource _fetchAssetsWithLocalIdentifiers:]
  +[PUSearchZeroKeywordDataSource _fetchKeyAssetsForAssetCollectionViewModels:]
  +[PUSearchZeroKeywordDataSource _fetchOptionsForPersonFetching]
  +[PUSearchZeroKeywordDataSource _homeViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _socialGroupViewModelForKeywordDictionary:peopleByKeyword:]
  +[PUSearchZeroKeywordDataSource _dateViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _seasonViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _uniquePersonLocalIdentifiersForZeroKeywords:]
  +[PUSearchZeroKeywordDataSource _fetchKeyAssetOfAssetCollection:withOptions:]
  +[PUSearchZeroKeywordDataSource _fetchAssetCollectionsForIdentifiers:]
  +[PUSearchZeroKeywordDataSource _personViewModelForKeywordDictionary:person:]
  +[PUSearchZeroKeywordDataSource _meaningViewModelForKeywordDictionary:]
  +[PUSearchZeroKeywordDataSource _fetchAssetsForAssetViewModels:]
  +[PUSearchZeroKeywordDataSource _holidayViewModelForKeywordDictionary:]

  // instance methods
  -[PUSearchZeroKeywordDataSource fetchQueue]
  -[PUSearchZeroKeywordDataSource setFetchQueue:]
  -[PUSearchZeroKeywordDataSource setSections:]
  -[PUSearchZeroKeywordDataSource ppt_prepareZeroKeywordRequest:]
  -[PUSearchZeroKeywordDataSource hasZeroKeywords]
  -[PUSearchZeroKeywordDataSource sections]
  -[PUSearchZeroKeywordDataSource debugDictionary]
  -[PUSearchZeroKeywordDataSource numberOfItemsInSection:]
  -[PUSearchZeroKeywordDataSource indexForPlaceKey:]
  -[PUSearchZeroKeywordDataSource titleForSection:]
  -[PUSearchZeroKeywordDataSource numberOfSections]
  -[PUSearchZeroKeywordDataSource _zeroKeywordsFromDefaultKeywordStore]
  -[PUSearchZeroKeywordDataSource .cxx_destruct]
  -[PUSearchZeroKeywordDataSource tapToRadarAttachments]
  -[PUSearchZeroKeywordDataSource _shouldFetchItems]
  -[PUSearchZeroKeywordDataSource setDelegate:]
  -[PUSearchZeroKeywordDataSource init]
  -[PUSearchZeroKeywordDataSource fetchInProgress]
  -[PUSearchZeroKeywordDataSource sectionTypeForSection:]
  -[PUSearchZeroKeywordDataSource setFetchInProgress:]
  -[PUSearchZeroKeywordDataSource sectionForSectionType:]
  -[PUSearchZeroKeywordDataSource delegate]
  -[PUSearchZeroKeywordDataSource fetchItems]
  -[PUSearchZeroKeywordDataSource viewModelForIndexPath:]


PUSearchZeroKeywordGadget : UICollectionViewController <UICollectionViewDataSourcePrefetching, PXDiagnosticsEnvironment, PXGadget>
 @property  PUSearchHomeThumbnailManager *thumbnailManager
 @property  PUSearchZeroKeywordGadgetLayout *zeroKeywordGadgetLayout
 @property  unsigned long cellLabelNumberOfLinesPermitted
 @property  unsigned long placeTileFetchCounter
 @property  NSObject<OS_dispatch_queue> *placeTileFetchCounterQueue
 @property  PHCachingImageManager *imageManager
 @property  PUSearchZeroKeywordDataSource *zeroKeywordDataSource
 @property  unsigned long dataSourceSection
 @property  long long sectionType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long gadgetType
 @property  unsigned long gadgetCapabilities
 @property  PXGadgetSpec *gadgetSpec
 @property  <PXGadgetDelegate> *delegate
 @property  NSString *localizedTitle
 @property  unsigned long accessoryButtonType
 @property  NSString *accessoryButtonTitle
 @property  unsigned long headerStyle
 @property  long long priority
 @property  Class collectionViewItemClass
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleContentRect

  // instance methods
  -[PUSearchZeroKeywordGadget setGadgetSpec:]
  -[PUSearchZeroKeywordGadget collectionView:cellForItemAtIndexPath:]
  -[PUSearchZeroKeywordGadget collectionView:numberOfItemsInSection:]
  -[PUSearchZeroKeywordGadget localizedTitle]
  -[PUSearchZeroKeywordGadget collectionView:canFocusItemAtIndexPath:]
  -[PUSearchZeroKeywordGadget gadgetCapabilities]
  -[PUSearchZeroKeywordGadget px_diagnosticsItemProvidersForPoint:inCoordinateSpace:]
  -[PUSearchZeroKeywordGadget gadgetType]
  -[PUSearchZeroKeywordGadget collectionView:layout:sizeForItemAtIndexPath:]
  -[PUSearchZeroKeywordGadget gadgetSpec]
  -[PUSearchZeroKeywordGadget numberOfSectionsInCollectionView:]
  -[PUSearchZeroKeywordGadget collectionView:didSelectItemAtIndexPath:]
  -[PUSearchZeroKeywordGadget traitCollectionDidChange:]
  -[PUSearchZeroKeywordGadget collectionView:prefetchItemsAtIndexPaths:]
  -[PUSearchZeroKeywordGadget zeroKeywordDataSource]
  -[PUSearchZeroKeywordGadget contentSizeCategoryDidChangeNotification:]
  -[PUSearchZeroKeywordGadget .cxx_destruct]
  -[PUSearchZeroKeywordGadget setThumbnailManager:]
  -[PUSearchZeroKeywordGadget viewDidLoad]
  -[PUSearchZeroKeywordGadget imageManager]
  -[PUSearchZeroKeywordGadget setDelegate:]
  -[PUSearchZeroKeywordGadget setPriority:]
  -[PUSearchZeroKeywordGadget scrollViewDidScroll:]
  -[PUSearchZeroKeywordGadget setImageManager:]
  -[PUSearchZeroKeywordGadget sizeThatFits:]
  -[PUSearchZeroKeywordGadget contentViewController]
  -[PUSearchZeroKeywordGadget priority]
  -[PUSearchZeroKeywordGadget viewWillAppear:]
  -[PUSearchZeroKeywordGadget delegate]
  -[PUSearchZeroKeywordGadget viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUSearchZeroKeywordGadget reloadData]
  -[PUSearchZeroKeywordGadget thumbnailManager]
  -[PUSearchZeroKeywordGadget _configureCollectionView]
  -[PUSearchZeroKeywordGadget sectionType]
  -[PUSearchZeroKeywordGadget debugURLsForDiagnostics]
  -[PUSearchZeroKeywordGadget _configureCellLabelNumberOfLinesWithScreenSize:]
  -[PUSearchZeroKeywordGadget layoutPeopleViews]
  -[PUSearchZeroKeywordGadget getCellSize]
  -[PUSearchZeroKeywordGadget zeroKeywordGadgetLayout]
  -[PUSearchZeroKeywordGadget dataSourceSection]
  -[PUSearchZeroKeywordGadget updateCellLabelNumberOfLinesWithScreenSize:]
  -[PUSearchZeroKeywordGadget getCellSizeWithScreenWidth:]
  -[PUSearchZeroKeywordGadget setCellLabelNumberOfLinesPermitted:]
  -[PUSearchZeroKeywordGadget setPlaceTileFetchCounter:]
  -[PUSearchZeroKeywordGadget placeTileFetchCounter]
  -[PUSearchZeroKeywordGadget _fetchPlaceThumbnailForCell:itemType:key:currentTag:]
  -[PUSearchZeroKeywordGadget placeTileFetchCounterQueue]
  -[PUSearchZeroKeywordGadget cellLabelNumberOfLinesPermitted]
  -[PUSearchZeroKeywordGadget getCellThumbnailSize]
  -[PUSearchZeroKeywordGadget _updateCurrentContentOffsetWithProposedOffset:]
  -[PUSearchZeroKeywordGadget initWithDataSource:dataSourceSection:sectionType:]
  -[PUSearchZeroKeywordGadget hasLoadedContentData]
  -[PUSearchZeroKeywordGadget setPlaceTileFetchCounterQueue:]


PUSearchZeroKeywordGadgetLayout : UICollectionViewFlowLayout
 @property  double columnWidth

  // instance methods
  -[PUSearchZeroKeywordGadgetLayout columnWidth]
  -[PUSearchZeroKeywordGadgetLayout flipsHorizontallyInOppositeLayoutDirection]
  -[PUSearchZeroKeywordGadgetLayout setColumnWidth:]
  -[PUSearchZeroKeywordGadgetLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]


PUSearchZeroKeywordGadgetProvider : PXGadgetProvider
 @property  PUSearchZeroKeywordDataSource *zeroKeywordDataSource
 @property  long long sectionType

  // instance methods
  -[PUSearchZeroKeywordGadgetProvider zeroKeywordDataSource]
  -[PUSearchZeroKeywordGadgetProvider .cxx_destruct]
  -[PUSearchZeroKeywordGadgetProvider generateGadgets]
  -[PUSearchZeroKeywordGadgetProvider estimatedNumberOfGadgets]
  -[PUSearchZeroKeywordGadgetProvider sectionType]
  -[PUSearchZeroKeywordGadgetProvider initWithZeroKeywordDataSource:sectionType:]


PUSearchZeroKeywordGadgetSpec : PXGadgetSpec
  // instance methods
  -[PUSearchZeroKeywordGadgetSpec contentInsets]
  -[PUSearchZeroKeywordGadgetSpec .cxx_destruct]
  -[PUSearchZeroKeywordGadgetSpec _contentInsetsInterpolator]
  -[PUSearchZeroKeywordGadgetSpec initWithTraitCollection:scrollAxis:]


PUSearchZeroKeywordSection : NSObject
 @property  long long sectionType
 @property  NSArray *viewModels

  // instance methods
  -[PUSearchZeroKeywordSection removeItem:]
  -[PUSearchZeroKeywordSection .cxx_destruct]
  -[PUSearchZeroKeywordSection viewModels]
  -[PUSearchZeroKeywordSection initWithType:viewModels:]
  -[PUSearchZeroKeywordSection sectionType]


PUSelectionFeedbackGenerator : NSObject
 @property  UISelectionFeedbackGenerator *feedbackGenerator

  // instance methods
  -[PUSelectionFeedbackGenerator feedbackGenerator]
  -[PUSelectionFeedbackGenerator .cxx_destruct]
  -[PUSelectionFeedbackGenerator init]
  -[PUSelectionFeedbackGenerator performFeedback]
  -[PUSelectionFeedbackGenerator prepareFeedback]


PUSearchZeroKeywordBaseViewModel : NSObject
 @property  long long itemType
 @property  NSString *title
 @property  id representedObject
 @property  id displayInfo
 @property  NSDictionary *debugDictionary

  // instance methods
  -[PUSearchZeroKeywordBaseViewModel debugDictionary]
  -[PUSearchZeroKeywordBaseViewModel initForTesting]
  -[PUSearchZeroKeywordBaseViewModel .cxx_destruct]
  -[PUSearchZeroKeywordBaseViewModel itemType]
  -[PUSearchZeroKeywordBaseViewModel representedObject]
  -[PUSearchZeroKeywordBaseViewModel title]
  -[PUSearchZeroKeywordBaseViewModel displayInfo]
  -[PUSearchZeroKeywordBaseViewModel initWithType:title:representedObject:displayInfo:]


PUSearchZeroKeywordAssetViewModel : PUSearchZeroKeywordBaseViewModel
 @property  PHAsset *asset

  // instance methods
  -[PUSearchZeroKeywordAssetViewModel debugDictionary]
  -[PUSearchZeroKeywordAssetViewModel .cxx_destruct]
  -[PUSearchZeroKeywordAssetViewModel setAsset:]
  -[PUSearchZeroKeywordAssetViewModel asset]


PUSearchZeroKeywordAssetCollectionViewModel : PUSearchZeroKeywordAssetViewModel
 @property  PHAssetCollection *assetCollection

  // instance methods
  -[PUSearchZeroKeywordAssetCollectionViewModel debugDictionary]
  -[PUSearchZeroKeywordAssetCollectionViewModel .cxx_destruct]
  -[PUSearchZeroKeywordAssetCollectionViewModel setAssetCollection:]
  -[PUSearchZeroKeywordAssetCollectionViewModel assetCollection]


PUSearchZeroKeywordSceneViewModel : PUSearchZeroKeywordAssetViewModel
  // instance methods
  -[PUSearchZeroKeywordSceneViewModel initWithTitle:representedObject:sceneId:keyAsset:]


PUSearchZeroKeywordPersonViewModel : PUSearchZeroKeywordBaseViewModel
 @property  PHPerson *person

  // instance methods
  -[PUSearchZeroKeywordPersonViewModel debugDictionary]
  -[PUSearchZeroKeywordPersonViewModel .cxx_destruct]
  -[PUSearchZeroKeywordPersonViewModel person]
  -[PUSearchZeroKeywordPersonViewModel title]
  -[PUSearchZeroKeywordPersonViewModel initWithRepresentedObject:representedPerson:]


PUSearchZeroKeywordSocialGroupViewModel : PUSearchZeroKeywordBaseViewModel
 @property  NSArray *socialGroup

  // instance methods
  -[PUSearchZeroKeywordSocialGroupViewModel debugDictionary]
  -[PUSearchZeroKeywordSocialGroupViewModel .cxx_destruct]
  -[PUSearchZeroKeywordSocialGroupViewModel initWithRepresentedObject:representedSocialGroup:]
  -[PUSearchZeroKeywordSocialGroupViewModel socialGroup]


PUSearchZeroKeywordPlaceViewModel : PUSearchZeroKeywordBaseViewModel
  // instance methods
  -[PUSearchZeroKeywordPlaceViewModel initWithTitle:representedObject:fullGeoLocationName:]


PUSearchZeroKeywordHomeViewModel : PUSearchZeroKeywordBaseViewModel
  // instance methods
  -[PUSearchZeroKeywordHomeViewModel initWithTitle:representedObject:fullGeoLocationName:]


PUSearchZeroKeywordHolidayViewModel : PUSearchZeroKeywordAssetCollectionViewModel
  // instance methods
  -[PUSearchZeroKeywordHolidayViewModel initWithTitle:representedObject:displayInfo:]


PUSearchZeroKeywordMeaningViewModel : PUSearchZeroKeywordAssetViewModel
  // instance methods
  -[PUSearchZeroKeywordMeaningViewModel initWithTitle:representedObject:displayInfo:]


PUSearchZeroKeywordSeasonViewModel : PUSearchZeroKeywordAssetCollectionViewModel
  // instance methods
  -[PUSearchZeroKeywordSeasonViewModel initWithTitle:representedObject:displayInfo:]


PUSearchZeroKeywordDateViewModel : PUSearchZeroKeywordAssetCollectionViewModel
  // instance methods
  -[PUSearchZeroKeywordDateViewModel initWithTitle:representedObject:displayInfo:]


PUTransitionSectionInfo : NSObject
 @property  long long transitionSection
 @property  NSIndexSet *visualSections
 @property  NSArray *visualRowStartMarkers
 @property  long long contiguousRows
 @property  NSIndexPath *anchorRealPath
 @property  {PUGridCoordinates=qq} anchorShiftOffset

  // instance methods
  -[PUTransitionSectionInfo .cxx_destruct]
  -[PUTransitionSectionInfo init]
  -[PUTransitionSectionInfo transitionSection]
  -[PUTransitionSectionInfo setTransitionSection:]
  -[PUTransitionSectionInfo visualSections]
  -[PUTransitionSectionInfo setVisualSections:]
  -[PUTransitionSectionInfo visualRowStartMarkers]
  -[PUTransitionSectionInfo setVisualRowStartMarkers:]
  -[PUTransitionSectionInfo contiguousRows]
  -[PUTransitionSectionInfo setContiguousRows:]
  -[PUTransitionSectionInfo anchorRealPath]
  -[PUTransitionSectionInfo setAnchorRealPath:]
  -[PUTransitionSectionInfo anchorShiftOffset]
  -[PUTransitionSectionInfo setAnchorShiftOffset:]


PUSectionedGridLayoutData : NSObject
 @property  long long numberOfPagesToCache
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} currentContentBounds
 @property  NSMutableArray *headerLayoutAttributes
 @property  NSMutableDictionary *headerLayoutAttributesByVisualSection

  // instance methods
  -[PUSectionedGridLayoutData .cxx_destruct]
  -[PUSectionedGridLayoutData init]
  -[PUSectionedGridLayoutData invalidate]
  -[PUSectionedGridLayoutData currentContentBounds]
  -[PUSectionedGridLayoutData setCurrentContentBounds:]
  -[PUSectionedGridLayoutData numberOfPagesToCache]
  -[PUSectionedGridLayoutData headerLayoutAttributes]
  -[PUSectionedGridLayoutData headerLayoutAttributesByVisualSection]


PUSectionedGridLayout : UICollectionViewLayout <PUReorderableLayout, PUPhotosGridTransitioningLayout, PUCollectionViewLayoutDelegating, PUGridLayoutProtocol>
 @property  long long columnsPerRow
 @property  <PUSectionedGridLayoutDelegate> *delegate
 @property  NSIndexPath *globalHeaderIndexPath
 @property  UICollectionViewLayoutAttributes *globalHeaderAttributes
 @property  NSIndexPath *globalFooterIndexPath
 @property  PULayoutSampledSectioning *layoutSectioning
 @property  {CGSize=dd} interItemSpacing
 @property  {CGSize=dd} itemSize
 @property  double sectionBottomPadding
 @property  {UIEdgeInsets=dddd} sectionContentInset
 @property  BOOL floatingSectionHeadersEnabled
 @property  double globalHeaderHeight
 @property  double globalFooterHeight
 @property  NSNumber *cachedDefaultGlobalFooterHeight
 @property  BOOL dynamicLayoutEnabled
 @property  NSString *renderedStripsElementKind
 @property  long long cropType
 @property  double cropAmount
 @property  BOOL usesRenderedStripTopExtendersForTransitions
 @property  BOOL usesAspectItems
 @property  {CGPoint=dd} transitionEffectiveContentOrigin
 @property  {CGSize=dd} transitionActualContentSize
 @property  BOOL transitionIsAnimated
 @property  long long transitionAnchorColumnOffset
 @property  NSIndexPath *transitionExplicitAnchorItemIndexPath
 @property  BOOL transitionAnchorShiftsColumns
 @property  long long itemsPerRow
 @property  long long numberOfVisualSections
 @property  NSIndexPath *transitionFirstVisibleRowVisualPath
 @property  NSIndexPath *transitionLastVisibleRowVisualPath
 @property  UICollectionViewLayout *transitionLayout
 @property  {CGPoint=dd} transitionStartContentOffset
 @property  {CGPoint=dd} transitionEndContentOffset
 @property  BOOL transitionZoomingOut
 @property  BOOL transitionIsAppearing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PUCollectionViewLayoutTransitioningDelegate> *transitioningDelegate
 @property  double globalTopPadding
 @property  double globalBottomPadding
 @property  NSSet *hiddenItemIndexPaths
 @property  NSString *sectionHeaderElementKind
 @property  BOOL sectionHeadersEnabled
 @property  double sectionTopPadding

  // class methods
  +[PUSectionedGridLayout invalidationContextClass]

  // instance methods
  -[PUSectionedGridLayout setInterItemSpacing:]
  -[PUSectionedGridLayout prepareForTransitionFromLayout:]
  -[PUSectionedGridLayout finalizeCollectionViewUpdates]
  -[PUSectionedGridLayout initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:]
  -[PUSectionedGridLayout finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:]
  -[PUSectionedGridLayout layoutAttributesForItemAtIndexPath:]
  -[PUSectionedGridLayout invalidationContextForBoundsChange:]
  -[PUSectionedGridLayout prepareLayout]
  -[PUSectionedGridLayout collectionViewContentSize]
  -[PUSectionedGridLayout prepareForCollectionViewUpdates:]
  -[PUSectionedGridLayout .cxx_destruct]
  -[PUSectionedGridLayout _animationForReusableView:toLayoutAttributes:type:]
  -[PUSectionedGridLayout setDelegate:]
  -[PUSectionedGridLayout setDynamicLayoutEnabled:]
  -[PUSectionedGridLayout init]
  -[PUSectionedGridLayout targetContentOffsetForProposedContentOffset:]
  -[PUSectionedGridLayout sectionContentInset]
  -[PUSectionedGridLayout endReordering]
  -[PUSectionedGridLayout updateReorderingTargetIndexPath:]
  -[PUSectionedGridLayout layoutAttributesForElementsInRect:]
  -[PUSectionedGridLayout finalLayoutAttributesForDisappearingItemAtIndexPath:]
  -[PUSectionedGridLayout cropType]
  -[PUSectionedGridLayout initialLayoutAttributesForAppearingItemAtIndexPath:]
  -[PUSectionedGridLayout setTransitioningDelegate:]
  -[PUSectionedGridLayout transitioningDelegate]
  -[PUSectionedGridLayout _supportsAdvancedTransitionAnimations]
  -[PUSectionedGridLayout _didFinishLayoutTransitionAnimations:]
  -[PUSectionedGridLayout delegate]
  -[PUSectionedGridLayout sectionHeadersEnabled]
  -[PUSectionedGridLayout finalizeLayoutTransition]
  -[PUSectionedGridLayout itemsPerRow]
  -[PUSectionedGridLayout dealloc]
  -[PUSectionedGridLayout dynamicLayoutEnabled]
  -[PUSectionedGridLayout setCropAmount:]
  -[PUSectionedGridLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUSectionedGridLayout invalidateLayoutWithContext:]
  -[PUSectionedGridLayout prepareForAnimatedBoundsChange:]
  -[PUSectionedGridLayout finalizeAnimatedBoundsChange]
  -[PUSectionedGridLayout _invalidateLayoutWithContext:]
  -[PUSectionedGridLayout interItemSpacing]
  -[PUSectionedGridLayout setItemSize:]
  -[PUSectionedGridLayout setSectionContentInset:]
  -[PUSectionedGridLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUSectionedGridLayout cropAmount]
  -[PUSectionedGridLayout prepareForTransitionToLayout:]
  -[PUSectionedGridLayout itemSize]
  -[PUSectionedGridLayout transitionLayout]
  -[PUSectionedGridLayout assetIndexPathsForElementsInRect:]
  -[PUSectionedGridLayout setGlobalFooterHeight:]
  -[PUSectionedGridLayout setSectionHeadersEnabled:]
  -[PUSectionedGridLayout setFloatingSectionHeadersEnabled:]
  -[PUSectionedGridLayout setSectionHeaderElementKind:]
  -[PUSectionedGridLayout visualSectionForSupplementaryViewIndexPath:]
  -[PUSectionedGridLayout transitionStartContentOffset]
  -[PUSectionedGridLayout setTransitionStartContentOffset:]
  -[PUSectionedGridLayout transitionEndContentOffset]
  -[PUSectionedGridLayout transitionZoomingOut]
  -[PUSectionedGridLayout setTransitionZoomingOut:]
  -[PUSectionedGridLayout transitionIsAppearing]
  -[PUSectionedGridLayout targetContentOffsetForTransitionFromGridLayout:]
  -[PUSectionedGridLayout adjustEffectiveContentOriginForTransitionEndContentOffset:]
  -[PUSectionedGridLayout visualSectionForRealSection:]
  -[PUSectionedGridLayout mainRealSectionForVisualSection:]
  -[PUSectionedGridLayout enumerateRealSectionsForVisualSection:usingBlock:]
  -[PUSectionedGridLayout numberOfVisualItemsInVisualSection:]
  -[PUSectionedGridLayout numberOfRowsInVisualSection:]
  -[PUSectionedGridLayout itemIndexPathAtCenterOfRect:]
  -[PUSectionedGridLayout itemIndexPathAtPoint:]
  -[PUSectionedGridLayout itemIndexPathClosestToPoint:]
  -[PUSectionedGridLayout maxItemIndexPathAbovePoint:]
  -[PUSectionedGridLayout maxItemIndexPathLeftOfPoint:]
  -[PUSectionedGridLayout frameForItemAtGridCoordinates:inVisualSection:]
  -[PUSectionedGridLayout frameForSectionHeaderAtVisualSection:]
  -[PUSectionedGridLayout gridCoordinatesInVisualSectionForItemAtIndexPath:]
  -[PUSectionedGridLayout gridCoordinatesInTransitionSectionForItemAtIndexPath:]
  -[PUSectionedGridLayout numberOfContiguousRowsInTransitionSection:]
  -[PUSectionedGridLayout frameForItemAtGridCoordinates:inTransitionSection:]
  -[PUSectionedGridLayout mainRealIndexPathAtGridCoordinates:inTransitionSection:]
  -[PUSectionedGridLayout hasItemAtGridCoordinates:inTransitionSection:]
  -[PUSectionedGridLayout targetTransitionGridCoordsForGridCoords:atVisualSection:outTransitionSection:]
  -[PUSectionedGridLayout visualGridCoordsForTransitionGridCoords:atTransitionSection:outVisualSection:]
  -[PUSectionedGridLayout targetTransitionRealIndexPathForIndexPath:]
  -[PUSectionedGridLayout transitionSectionsInRect:toOrFromGridLayout:]
  -[PUSectionedGridLayout transitionAnchorIndexPathForTransitionSection:]
  -[PUSectionedGridLayout transitionEffectiveContentOrigin]
  -[PUSectionedGridLayout setTransitionEffectiveContentOrigin:]
  -[PUSectionedGridLayout transitionActualContentSize]
  -[PUSectionedGridLayout transitionIsAnimated]
  -[PUSectionedGridLayout setTransitionIsAnimated:]
  -[PUSectionedGridLayout transitionAnchorColumnOffset]
  -[PUSectionedGridLayout transitionExplicitAnchorItemIndexPath]
  -[PUSectionedGridLayout setTransitionExplicitAnchorItemIndexPath:]
  -[PUSectionedGridLayout transitionAnchorShiftsColumns]
  -[PUSectionedGridLayout setTransitionAnchorShiftsColumns:]
  -[PUSectionedGridLayout numberOfVisualSections]
  -[PUSectionedGridLayout transitionFirstVisibleRowVisualPath]
  -[PUSectionedGridLayout transitionLastVisibleRowVisualPath]
  -[PUSectionedGridLayout invalidateLayoutForVerticalScroll]
  -[PUSectionedGridLayout beginReorderingItemAtIndexPath:]
  -[PUSectionedGridLayout reorderedIndexPath:]
  -[PUSectionedGridLayout beginInsertingItemAtIndexPath:]
  -[PUSectionedGridLayout endInsertingItem]
  -[PUSectionedGridLayout globalHeaderHeight]
  -[PUSectionedGridLayout pu_layoutAttributesForElementClosestToPoint:inRect:passingTest:]
  -[PUSectionedGridLayout numberOfColumnsForWidth:]
  -[PUSectionedGridLayout layoutItemSizeForColumn:]
  -[PUSectionedGridLayout renderedStripsElementKind]
  -[PUSectionedGridLayout sectionHeaderElementKind]
  -[PUSectionedGridLayout getVisualSectionIndex:visualItemRange:forRenderStripAtIndexPath:]
  -[PUSectionedGridLayout enumerateItemIndexPathsForVisualSection:inVisualItemRange:usingBlock:]
  -[PUSectionedGridLayout setRenderedStripsElementKind:]
  -[PUSectionedGridLayout globalTopPadding]
  -[PUSectionedGridLayout sectionTopPadding]
  -[PUSectionedGridLayout prepareForViewTransitionToSize:]
  -[PUSectionedGridLayout finalizeViewTransitionToSize]
  -[PUSectionedGridLayout targetContentOffsetForViewSizeTransitionContext:]
  -[PUSectionedGridLayout setSectionTopPadding:]
  -[PUSectionedGridLayout setGlobalTopPadding:]
  -[PUSectionedGridLayout setGlobalBottomPadding:]
  -[PUSectionedGridLayout globalHeaderAttributes]
  -[PUSectionedGridLayout columnsPerRow]
  -[PUSectionedGridLayout numberOfItemsInRealSection:forSectioning:]
  -[PUSectionedGridLayout numberOfVisualSectionsForSectioning:]
  -[PUSectionedGridLayout realSectionsForVisualSection:forSectioning:]
  -[PUSectionedGridLayout numberOfRealSectionsForSectioning:]
  -[PUSectionedGridLayout maximumNumberOfItemsInVisualSection:withNumberOfRealItems:forSectioning:]
  -[PUSectionedGridLayout numberOfRealItemsInVisualSection:]
  -[PUSectionedGridLayout pu_debugRows]
  -[PUSectionedGridLayout globalFooterHeight]
  -[PUSectionedGridLayout firstPreparedVisualSection]
  -[PUSectionedGridLayout lastPreparedVisualSection]
  -[PUSectionedGridLayout _hasAccessibilityLargeText]
  -[PUSectionedGridLayout globalFooterIndexPath]
  -[PUSectionedGridLayout setCachedDefaultGlobalFooterHeight:]
  -[PUSectionedGridLayout setGlobalHeaderHeight:]
  -[PUSectionedGridLayout cachedDefaultGlobalFooterHeight]
  -[PUSectionedGridLayout globalBottomPadding]
  -[PUSectionedGridLayout hiddenItemIndexPaths]
  -[PUSectionedGridLayout setHiddenItemIndexPaths:]
  -[PUSectionedGridLayout usesAspectItems]
  -[PUSectionedGridLayout setUsesAspectItems:]
  -[PUSectionedGridLayout setCropType:]
  -[PUSectionedGridLayout _clearRetainedCaches]
  -[PUSectionedGridLayout _prepareLayoutIfNeeded]
  -[PUSectionedGridLayout _clearLayoutCaches]
  -[PUSectionedGridLayout _clearSamplingCaches]
  -[PUSectionedGridLayout _clearSectioningCaches]
  -[PUSectionedGridLayout _prepareSectioningDataIfNeeded]
  -[PUSectionedGridLayout _sectionWidth]
  -[PUSectionedGridLayout _prepareFloatingHeadersLayoutIfNeeded]
  -[PUSectionedGridLayout _prepareSamplingDataIfNeeded]
  -[PUSectionedGridLayout globalHeaderIndexPath]
  -[PUSectionedGridLayout _finalSectionHeaderHeightForSection:]
  -[PUSectionedGridLayout sectionBottomPadding]
  -[PUSectionedGridLayout shouldHideVisualSection:]
  -[PUSectionedGridLayout _invalidateFloatingHeadersLayout]
  -[PUSectionedGridLayout _visibleRectOriginForScrollOffset:]
  -[PUSectionedGridLayout _floatingHeaderVisualSectionForVisibleOrigin:]
  -[PUSectionedGridLayout supplementaryViewIndexPathForVisualSection:supplementaryViewItemIndex:]
  -[PUSectionedGridLayout visualSectionsInRect:]
  -[PUSectionedGridLayout _layoutAttributesForSupplementaryViewOfKind:forVisualSection:supplementaryViewIndex:]
  -[PUSectionedGridLayout visualRowsInRect:inVisualSection:totalVisualSectionRows:]
  -[PUSectionedGridLayout _renderedStripIndexForSectionRowIndex:]
  -[PUSectionedGridLayout _layoutAttributesForItemAtVisualIndexPath:realIndexPath:isMainRealItem:]
  -[PUSectionedGridLayout layoutSectioning]
  -[PUSectionedGridLayout _isSupportedSupplementaryViewKind:]
  -[PUSectionedGridLayout _isTransitionForeignSupplementaryViewKind:]
  -[PUSectionedGridLayout gridCoordinatesInSectionForItemAtVisualIndex:]
  -[PUSectionedGridLayout frameForItemAtGridCoordinates:inVisualSection:indexPath:]
  -[PUSectionedGridLayout _adjustItemLayoutAttributesForReordering:]
  -[PUSectionedGridLayout _supplementaryViewKinds]
  -[PUSectionedGridLayout _firstVisualItemIndexForRenderedStripIndex:]
  -[PUSectionedGridLayout _gridTransitionLayout]
  -[PUSectionedGridLayout _visualSectionAtPoint:]
  -[PUSectionedGridLayout _startYOfVisualSectionAtIndex:]
  -[PUSectionedGridLayout _currentVisibleRectOrigin]
  -[PUSectionedGridLayout invalidateLayoutForMetricsChange]
  -[PUSectionedGridLayout _prepareForTransitionToOrFromGridLayout:isAppearing:]
  -[PUSectionedGridLayout _prepareForTransitionFromStackedLayout:]
  -[PUSectionedGridLayout _targetContentOffsetWithAnchorItemIndexPath:isRotation:orTransitionFromLayout:keepAnchorStable:]
  -[PUSectionedGridLayout setIsPreparingLayout:]
  -[PUSectionedGridLayout _visualSectionsMatchTransitionSectionsToOrFromLayout:]
  -[PUSectionedGridLayout _visualRowPathForTransitionRowIndex:transitionSectionInfo:]
  -[PUSectionedGridLayout visualIndexForItemAtGridCoordinates:]
  -[PUSectionedGridLayout _finalContentInset]
  -[PUSectionedGridLayout numberOfRealSections]
  -[PUSectionedGridLayout numberOfRealItemsInRealSection:]
  -[PUSectionedGridLayout _adjustGridTransitionLayoutAttributes:toOrFromGridLayout:outTargetRowExists:isAppearing:]
  -[PUSectionedGridLayout _targetTransitionGridCoordsForGridCoords:atVisualSection:transitionSectionInfo:]
  -[PUSectionedGridLayout _frameByAdjustingOffScreenEnteringFrame:forRowAtVisualIndexPath:transitionSectionInfo:toOrFromGridLayout:isAppearing:]
  -[PUSectionedGridLayout _transformToConvertRect:intoRect:referenceCenter:]
  -[PUSectionedGridLayout _adjustSectionHeaderLayoutAttributes:toOrFromGridLayout:isAppearing:]
  -[PUSectionedGridLayout _adjustRenderedStripLayoutAttributes:toOrFromGridLayout:isAppearing:]
  -[PUSectionedGridLayout _updateHasFloatingHeaders]
  -[PUSectionedGridLayout _invalidateSupplementaryViewKinds]
  -[PUSectionedGridLayout _delegateAccessibilitySectionHeaderHeightForSection:]
  -[PUSectionedGridLayout _ensureRect:inData:outDeltaOriginY:]
  -[PUSectionedGridLayout _startYOfContentAtVisualSectionIndexWithDynamicLayout:]
  -[PUSectionedGridLayout _startYOfContentAtVisualSectionIndex:]
  -[PUSectionedGridLayout _heightOfSectionAtVisualIndex:]
  -[PUSectionedGridLayout _ensureVisualSection:inData:]
  -[PUSectionedGridLayout _sectionHeaderHeightDeltaForSection:]
  -[PUSectionedGridLayout _nextVisualSectionForSupplementaryViewSection:forward:]
  -[PUSectionedGridLayout _ensureUpdatedLayoutData:isForward:outDeltaOriginY:]
  -[PUSectionedGridLayout _realItemIndexPathClosestToPoint:inRect:withTest:]
  -[PUSectionedGridLayout _itemVisualIndexPathAtPoint:]
  -[PUSectionedGridLayout _enumerateVisualItemFramesInRect:usingBlock:]
  -[PUSectionedGridLayout _visualIndexPathForTransitionCoordinates:inTransitionSection:]
  -[PUSectionedGridLayout setSectionBottomPadding:]
  -[PUSectionedGridLayout frameForSectionHeaderOfRealItem:]
  -[PUSectionedGridLayout visualSectionForHeaderIndexPath:]
  -[PUSectionedGridLayout _setColumnsPerRow:]
  -[PUSectionedGridLayout floatingSectionHeadersEnabled]
  -[PUSectionedGridLayout usesRenderedStripTopExtendersForTransitions]
  -[PUSectionedGridLayout setUsesRenderedStripTopExtendersForTransitions:]


PUSectionedGridLayoutAttributes : UICollectionViewLayoutAttributes
 @property  BOOL floating
 @property  double interactiveTransitionProgress
 @property  BOOL extendsTopContent
 @property  BOOL exists

  // instance methods
  -[PUSectionedGridLayoutAttributes setFloating:]
  -[PUSectionedGridLayoutAttributes floating]
  -[PUSectionedGridLayoutAttributes exists]
  -[PUSectionedGridLayoutAttributes init]
  -[PUSectionedGridLayoutAttributes isEqual:]
  -[PUSectionedGridLayoutAttributes setExists:]
  -[PUSectionedGridLayoutAttributes copyWithZone:]
  -[PUSectionedGridLayoutAttributes extendsTopContent]
  -[PUSectionedGridLayoutAttributes interactiveTransitionProgress]
  -[PUSectionedGridLayoutAttributes setExtendsTopContent:]
  -[PUSectionedGridLayoutAttributes setInteractiveTransitionProgress:]


PUSectionedGridLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
 @property  BOOL invalidateForVerticalScroll
 @property  BOOL sectioningIsPreserved
 @property  BOOL samplingIsPreserved
 @property  BOOL invalidationHasBeenRedispatched

  // instance methods
  -[PUSectionedGridLayoutInvalidationContext invalidateForVerticalScroll]
  -[PUSectionedGridLayoutInvalidationContext samplingIsPreserved]
  -[PUSectionedGridLayoutInvalidationContext sectioningIsPreserved]
  -[PUSectionedGridLayoutInvalidationContext invalidationHasBeenRedispatched]
  -[PUSectionedGridLayoutInvalidationContext setInvalidationHasBeenRedispatched:]
  -[PUSectionedGridLayoutInvalidationContext setInvalidateForVerticalScroll:]
  -[PUSectionedGridLayoutInvalidationContext setSamplingIsPreserved:]
  -[PUSectionedGridLayoutInvalidationContext setSectioningIsPreserved:]


PUSectionedTilingLayout : PUTilingLayout
 @property  {_NSRange=QQ} computedSections
 @property  BOOL leftToRight
 @property  {CGSize=dd} interSectionSpacing

  // instance methods
  -[PUSectionedTilingLayout interSectionSpacing]
  -[PUSectionedTilingLayout setInterSectionSpacing:]
  -[PUSectionedTilingLayout contentBounds]
  -[PUSectionedTilingLayout numberOfItemsInSection:]
  -[PUSectionedTilingLayout prepareLayout]
  -[PUSectionedTilingLayout setLeftToRight:]
  -[PUSectionedTilingLayout leftToRight]
  -[PUSectionedTilingLayout addLayoutInfosForTilesInRect:section:toSet:]
  -[PUSectionedTilingLayout init]
  -[PUSectionedTilingLayout setVisibleRect:]
  -[PUSectionedTilingLayout _numberOfSections]
  -[PUSectionedTilingLayout layoutInfosForTilesInRect:]
  -[PUSectionedTilingLayout visibleRectForScrollingToItemAtIndexPath:scrollPosition:]
  -[PUSectionedTilingLayout sizeForSection:numberOfItems:]
  -[PUSectionedTilingLayout dealloc]
  -[PUSectionedTilingLayout boundsForSection:]
  -[PUSectionedTilingLayout computedSections]
  -[PUSectionedTilingLayout invalidateSectionInfos]
  -[PUSectionedTilingLayout computeSectionsInRect:]
  -[PUSectionedTilingLayout _markAllSectionInfosInvalid]
  -[PUSectionedTilingLayout _computeSeedSectionIfNeeded]
  -[PUSectionedTilingLayout _ensureComputedSectionsHaveBeenSeeded]
  -[PUSectionedTilingLayout _sectionInfoForSection:]
  -[PUSectionedTilingLayout _scrollsHorizontallyNotVertically]
  -[PUSectionedTilingLayout invalidateLayoutForUpdateWithItems:]
  -[PUSectionedTilingLayout _invalidateNumberOfSections]


PUSelectableAssetCollectionViewLayout : PUHorizontalCollectionViewLayout
 @property  {UIOffset=dd} sharingBadgeOffset
 @property  NSSet *floatingCellIndexPaths
 @property  {CGSize=dd} layoutReferenceSize
 @property  <PUSelectableAssetCollectionViewLayoutDelegate> *delegate

  // instance methods
  -[PUSelectableAssetCollectionViewLayout flipsHorizontallyInOppositeLayoutDirection]
  -[PUSelectableAssetCollectionViewLayout layoutAttributesForItemAtIndexPath:]
  -[PUSelectableAssetCollectionViewLayout .cxx_destruct]
  -[PUSelectableAssetCollectionViewLayout layoutReferenceSize]
  -[PUSelectableAssetCollectionViewLayout setLayoutReferenceSize:]
  -[PUSelectableAssetCollectionViewLayout layoutAttributesForElementsInRect:]
  -[PUSelectableAssetCollectionViewLayout _supportsAdvancedTransitionAnimations]
  -[PUSelectableAssetCollectionViewLayout shouldInvalidateLayoutForBoundsChange:]
  -[PUSelectableAssetCollectionViewLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUSelectableAssetCollectionViewLayout sharingBadgeOffset]
  -[PUSelectableAssetCollectionViewLayout _floatingSelectionBadgeFrameForItemFrame:visibleItemFrame:atIndexPath:]
  -[PUSelectableAssetCollectionViewLayout _badgeLayoutAttributesForItemLayoutAttributes:]
  -[PUSelectableAssetCollectionViewLayout _shouldInvalidateCachedLayoutForBoundsChange:]
  -[PUSelectableAssetCollectionViewLayout setSharingBadgeOffset:]
  -[PUSelectableAssetCollectionViewLayout collectionViewBounds]
  -[PUSelectableAssetCollectionViewLayout setFloatingCellIndexPaths:]
  -[PUSelectableAssetCollectionViewLayout floatingCellIndexPaths]


PUSessionInfo : NSObject <PUPhotoSelectionManagerChangeObserver>
 @property  PHAssetCollection *sourceAlbum
 @property  NSOrderedSet *transferredAssets
 @property  PUPhotoSelectionManager *photoSelectionManager
 @property  NSString *localizedPrompt
 @property  long long promptLocation
 @property  @? bannerGenerator
 @property  BOOL allowsMultipleSelection
 @property  <PXPhotosViewDelegate> *photosViewDelegate
 @property  PXLoadingStatusManager *loadingStatusManager
 @property  long long status
 @property  BOOL selectingAssets
 @property  BOOL selectingTargetAlbum
 @property  NSObject<PLAlbumProtocol> *targetAlbum
 @property  NSString *targetAlbumName
 @property  NSPredicate *assetsFilterPredicate
 @property  unsigned long assetTypesToInclude
 @property  unsigned long selectionLimit
 @property  BOOL wantsNumberedSelectionStyle
 @property  long long noContentPlaceholderType
 @property  BOOL enforcesSelectionLimitByDelesectingOtherAssets
 @property  BOOL showsFileSizePicker
 @property  BOOL allowsSwipeToSelect
 @property  BOOL isForAssetPicker
 @property  BOOL isLimitedLibraryPicker
 @property  PXSelectionCoordinator *selectionCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSessionInfo setWantsNumberedSelectionStyle:]
  -[PUSessionInfo assetTypesToInclude]
  -[PUSessionInfo wantsNumberedSelectionStyle]
  -[PUSessionInfo .cxx_destruct]
  -[PUSessionInfo loadingStatusManager]
  -[PUSessionInfo allowsMultipleSelection]
  -[PUSessionInfo selectionLimit]
  -[PUSessionInfo noContentPlaceholderType]
  -[PUSessionInfo init]
  -[PUSessionInfo allowsSwipeToSelect]
  -[PUSessionInfo isLimitedLibraryPicker]
  -[PUSessionInfo setLoadingStatusManager:]
  -[PUSessionInfo setAssetTypesToInclude:]
  -[PUSessionInfo setNoContentPlaceholderType:]
  -[PUSessionInfo status]
  -[PUSessionInfo _enumerateObserversWithBlock:]
  -[PUSessionInfo setStatus:]
  -[PUSessionInfo setAssetsFilterPredicate:]
  -[PUSessionInfo setAllowsSwipeToSelect:]
  -[PUSessionInfo photoSelectionManager]
  -[PUSessionInfo showsFileSizePicker]
  -[PUSessionInfo setShowsFileSizePicker:]
  -[PUSessionInfo setAllowsMultipleSelection:]
  -[PUSessionInfo assetsFilterPredicate]
  -[PUSessionInfo isSelectingTargetAlbum]
  -[PUSessionInfo removeSessionInfoObserver:]
  -[PUSessionInfo addSessionInfoObserver:]
  -[PUSessionInfo bannerGenerator]
  -[PUSessionInfo isSelectingAssets]
  -[PUSessionInfo isForAssetPicker]
  -[PUSessionInfo promptLocation]
  -[PUSessionInfo localizedPrompt]
  -[PUSessionInfo sourceAlbum]
  -[PUSessionInfo targetAlbum]
  -[PUSessionInfo transferredAssets]
  -[PUSessionInfo setTargetAlbum:]
  -[PUSessionInfo setSourceAlbum:]
  -[PUSessionInfo setTransferredAssets:]
  -[PUSessionInfo setLocalizedPrompt:]
  -[PUSessionInfo setPromptLocation:]
  -[PUSessionInfo setBannerGenerator:]
  -[PUSessionInfo setSelectionLimit:]
  -[PUSessionInfo setPhotoSelectionManager:]
  -[PUSessionInfo setPhotosViewDelegate:]
  -[PUSessionInfo targetAlbumName]
  -[PUSessionInfo selectionCoordinator]
  -[PUSessionInfo photosViewDelegate]
  -[PUSessionInfo photoSelectionManagerSelectionDidChange:]
  -[PUSessionInfo setTargetAlbumName:]
  -[PUSessionInfo setSelectionCoordinator:]
  -[PUSessionInfo enforcesSelectionLimitByDelesectingOtherAssets]
  -[PUSessionInfo setEnforcesSelectionLimitByDelesectingOtherAssets:]
  -[PUSessionInfo hasTargetAlbum]
  -[PUSessionInfo hasLocalTargetAlbum]


PUSetKeyFaceActivity : PXActivity
  // class methods
  +[PUSetKeyFaceActivity activityCategory]

  // instance methods
  -[PUSetKeyFaceActivity _systemImageName]
  -[PUSetKeyFaceActivity activityType]
  -[PUSetKeyFaceActivity canPerformWithActivityItems:]
  -[PUSetKeyFaceActivity performActivity]
  -[PUSetKeyFaceActivity activityTitle]


PUPeopleAvatarView : UIImageView
 @property  UIGraphicsImageRenderer *imageRenderer
 @property  UIImage *firstAvatar
 @property  UIImage *secondAvatar
 @property  UIImage *thirdAvatar
 @property  CAShapeLayer *overlayLayer
 @property  NSObject<OS_os_log> *log
 @property  PHAssetCollection *sharedAlbumCollection
 @property  BOOL enabled

  // class methods
  +[PUPeopleAvatarView serialQueue]
  +[PUPeopleAvatarView _sizeForNumberOfAvatars:]
  +[PUPeopleAvatarView _requestPersonPhoto:displayScale:highQualityFormat:resultHandler:]

  // instance methods
  -[PUPeopleAvatarView log]
  -[PUPeopleAvatarView imageRenderer]
  -[PUPeopleAvatarView .cxx_destruct]
  -[PUPeopleAvatarView setImageRenderer:]
  -[PUPeopleAvatarView prepareForReuse]
  -[PUPeopleAvatarView accessibilityInvertColorsStatusDidChange:]
  -[PUPeopleAvatarView isEnabled]
  -[PUPeopleAvatarView initWithFrame:]
  -[PUPeopleAvatarView setEnabled:]
  -[PUPeopleAvatarView embedInView:]
  -[PUPeopleAvatarView setSharedAlbumCollection:forceLayoutSubscriberAvatars:]
  -[PUPeopleAvatarView setSharedAlbumCollection:]
  -[PUPeopleAvatarView setOverlayLayer:]
  -[PUPeopleAvatarView _updateAvatars]
  -[PUPeopleAvatarView overlayLayer]
  -[PUPeopleAvatarView _resetImages]
  -[PUPeopleAvatarView _resetViewContents]
  -[PUPeopleAvatarView sharedAlbumCollection]
  -[PUPeopleAvatarView _generateAvatars]
  -[PUPeopleAvatarView setPersonPhoto:atIndex:albumCollection:]
  -[PUPeopleAvatarView _requestSubscriberMonogram:resultHandler:]
  -[PUPeopleAvatarView _renderAvatarsForAlbumCollection:]
  -[PUPeopleAvatarView setFirstAvatar:]
  -[PUPeopleAvatarView setSecondAvatar:]
  -[PUPeopleAvatarView setThirdAvatar:]
  -[PUPeopleAvatarView _setImage:forIndex:]
  -[PUPeopleAvatarView thirdAvatar]
  -[PUPeopleAvatarView secondAvatar]
  -[PUPeopleAvatarView firstAvatar]
  -[PUPeopleAvatarView _resetViewContentsIfNeededForAlbumCollection:]
  -[PUPeopleAvatarView _setContentsImage:withShadowPath:forAlbumCollection:]


PUSharedAlbumGadget : PUAlbumGadget
 @property  PUAlbumListCellContentView *albumCellContentView

  // instance methods
  -[PUSharedAlbumGadget albumCellContentView]
  -[PUSharedAlbumGadget .cxx_destruct]
  -[PUSharedAlbumGadget contentView]
  -[PUSharedAlbumGadget setAlbumCellContentView:]


PUSingleAssetLayout : PUTilingLayout
 @property  PUAssetReference *assetReference
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} assetRect
 @property  {UIEdgeInsets=dddd} cropInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRect
 @property  double cornerRadius
 @property  NSString *cornerCurve
 @property  unsigned long cornerMask

  // instance methods
  -[PUSingleAssetLayout cropInsets]
  -[PUSingleAssetLayout setAssetReference:]
  -[PUSingleAssetLayout contentBounds]
  -[PUSingleAssetLayout cornerCurve]
  -[PUSingleAssetLayout setContentsRect:]
  -[PUSingleAssetLayout .cxx_destruct]
  -[PUSingleAssetLayout assetReference]
  -[PUSingleAssetLayout _invalidateSingleAssetLayout]
  -[PUSingleAssetLayout setCornerMask:]
  -[PUSingleAssetLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUSingleAssetLayout setCornerCurve:]
  -[PUSingleAssetLayout cornerMask]
  -[PUSingleAssetLayout contentsRect]
  -[PUSingleAssetLayout setCornerRadius:]
  -[PUSingleAssetLayout setCropInsets:]
  -[PUSingleAssetLayout layoutInfosForTilesInRect:]
  -[PUSingleAssetLayout setAssetRect:]
  -[PUSingleAssetLayout assetRect]
  -[PUSingleAssetLayout cornerRadius]
  -[PUSingleAssetLayout visibleRectForScrollingToItemAtIndexPath:scrollPosition:]


PUSingleAssetLayoutTransitionCoordinator : PUTileTransitionCoordinator
 @property  <PUTilingCoordinateSystem> *fixedCoordinateSystem

  // instance methods
  -[PUSingleAssetLayoutTransitionCoordinator .cxx_destruct]
  -[PUSingleAssetLayoutTransitionCoordinator fixedCoordinateSystem]
  -[PUSingleAssetLayoutTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUSingleAssetLayoutTransitionCoordinator setFixedCoordinateSystem:]
  -[PUSingleAssetLayoutTransitionCoordinator _layoutInfoWithDefaultDisappearance:]
  -[PUSingleAssetLayoutTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]


PUSlideShowActivity : PXActivity
  // instance methods
  -[PUSlideShowActivity _systemImageName]
  -[PUSlideShowActivity activityType]
  -[PUSlideShowActivity canPerformWithActivityItems:]
  -[PUSlideShowActivity performActivity]
  -[PUSlideShowActivity activityTitle]


PUSlideshowContextRegistry : NSObject
 @property  NSMutableArray *_displayContexts
 @property  <PUSlideshowDisplayContext> *currentDisplayContext
 @property  NSArray *displayContexts

  // instance methods
  -[PUSlideshowContextRegistry .cxx_destruct]
  -[PUSlideshowContextRegistry init]
  -[PUSlideshowContextRegistry _setDisplayContexts:]
  -[PUSlideshowContextRegistry _displayContexts]
  -[PUSlideshowContextRegistry displayContexts]
  -[PUSlideshowContextRegistry addDisplayContext:]
  -[PUSlideshowContextRegistry removeDisplayContext:]
  -[PUSlideshowContextRegistry currentDisplayContext]


PUSlideshowMediaItem : NSObject
 @property  long long type
 @property  NSURL *audioURL
 @property  NSString *uniqueIdentifier
 @property  NSString *localizedName

  // class methods
  +[PUSlideshowMediaItem mediaItemsForOKThemes]
  +[PUSlideshowMediaItem mediaItemForType:uniqueIdentifier:]

  // instance methods
  -[PUSlideshowMediaItem localizedName]
  -[PUSlideshowMediaItem uniqueIdentifier]
  -[PUSlideshowMediaItem .cxx_destruct]
  -[PUSlideshowMediaItem audioURL]
  -[PUSlideshowMediaItem init]
  -[PUSlideshowMediaItem isEqual:]
  -[PUSlideshowMediaItem _initWithType:]
  -[PUSlideshowMediaItem type]
  -[PUSlideshowMediaItem copyWithZone:]
  -[PUSlideshowMediaItem initWitPreset:]
  -[PUSlideshowMediaItem initWitMediaItem:]


PUSlideshowMusicViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, PUViewControllerSpecChangeObserver, MPMediaPickerControllerDelegate>
 @property  BOOL _needsUpdateSpec
 @property  BOOL _needsUpdateBackgroundView
 @property  BOOL _needsUpdateTableView
 @property  PUSlideshowMediaItem *currentMediaItem
 @property  <PUSlideshowMusicDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSlideshowMusicViewController traitCollectionDidChange:]
  -[PUSlideshowMusicViewController _updateIfNeeded]
  -[PUSlideshowMusicViewController numberOfSectionsInTableView:]
  -[PUSlideshowMusicViewController _setNeedsUpdate]
  -[PUSlideshowMusicViewController tableView:numberOfRowsInSection:]
  -[PUSlideshowMusicViewController tableView:titleForHeaderInSection:]
  -[PUSlideshowMusicViewController .cxx_destruct]
  -[PUSlideshowMusicViewController tableView:didSelectRowAtIndexPath:]
  -[PUSlideshowMusicViewController viewDidLoad]
  -[PUSlideshowMusicViewController tableView:cellForRowAtIndexPath:]
  -[PUSlideshowMusicViewController setDelegate:]
  -[PUSlideshowMusicViewController mediaPickerDidCancel:]
  -[PUSlideshowMusicViewController mediaPicker:didPickMediaItems:]
  -[PUSlideshowMusicViewController init]
  -[PUSlideshowMusicViewController _needsUpdate]
  -[PUSlideshowMusicViewController _didFinish]
  -[PUSlideshowMusicViewController viewWillDisappear:]
  -[PUSlideshowMusicViewController viewDidLayoutSubviews]
  -[PUSlideshowMusicViewController viewWillAppear:]
  -[PUSlideshowMusicViewController tableView:willDisplayHeaderView:forSection:]
  -[PUSlideshowMusicViewController _updateSpecIfNeeded]
  -[PUSlideshowMusicViewController delegate]
  -[PUSlideshowMusicViewController dealloc]
  -[PUSlideshowMusicViewController pu_wantsNavigationBarVisible]
  -[PUSlideshowMusicViewController _invalidateSpec]
  -[PUSlideshowMusicViewController _needsUpdateSpec]
  -[PUSlideshowMusicViewController _setNeedsUpdateSpec:]
  -[PUSlideshowMusicViewController viewControllerSpec:didChange:]
  -[PUSlideshowMusicViewController _needsUpdateBackgroundView]
  -[PUSlideshowMusicViewController _setNeedsUpdateBackgroundView:]
  -[PUSlideshowMusicViewController _setNeedsUpdateTableView:]
  -[PUSlideshowMusicViewController _updateTableViewIfNeeded]
  -[PUSlideshowMusicViewController _updateBackgroundViewIfNeeded]
  -[PUSlideshowMusicViewController _needsUpdateTableView]
  -[PUSlideshowMusicViewController _didPickMediaItem:]
  -[PUSlideshowMusicViewController _invalidateTableView]
  -[PUSlideshowMusicViewController _invalidateBackgroundView]
  -[PUSlideshowMusicViewController setCurrentMediaItem:]
  -[PUSlideshowMusicViewController currentMediaItem]


PUCopyToPasteboardActivity : UICopyToPasteboardActivity <PXActivity>
 @property  <PXActivityItemSourceController> *itemSourceController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCopyToPasteboardActivity .cxx_destruct]
  -[PUCopyToPasteboardActivity canPerformWithActivityItems:]
  -[PUCopyToPasteboardActivity itemSourceController]
  -[PUCopyToPasteboardActivity activityTitle]
  -[PUCopyToPasteboardActivity setItemSourceController:]


PUSlideshowNavigationController : UINavigationController
  // instance methods
  -[PUSlideshowNavigationController preferredContentSize]
  -[PUSlideshowNavigationController initWithRootViewController:]


PUSlideshowSession : NSObject <PUSlideshowViewModelChangeObserver, PUSlideshowSettingsViewModelChangeObserver, PXSettingsKeyObserver>
 @property  BOOL _disablingIdleTimer
 @property  id _disablingIdleTimerToken
 @property  NSUUID *uuid
 @property  long long currentState
 @property  BOOL didStartOnce
 @property  PHFetchResult *fetchResult
 @property  PHAssetCollection *assetCollection
 @property  PUSlideshowViewModel *viewModel
 @property  PUSlideshowSettingsViewModel *settingsViewModel
 @property  OKPresentationViewController *presentationViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSlideshowSession .cxx_destruct]
  -[PUSlideshowSession viewModel]
  -[PUSlideshowSession viewModel:didChange:]
  -[PUSlideshowSession init]
  -[PUSlideshowSession currentState]
  -[PUSlideshowSession uuid]
  -[PUSlideshowSession settings:changedValueForKey:]
  -[PUSlideshowSession fetchResult]
  -[PUSlideshowSession presentationViewController]
  -[PUSlideshowSession dealloc]
  -[PUSlideshowSession assetCollection]
  -[PUSlideshowSession setCurrentState:]
  -[PUSlideshowSession _endDisablingIdleTimerIfNecessary]
  -[PUSlideshowSession _beginDisablingIdleTimer]
  -[PUSlideshowSession _disablingIdleTimerToken]
  -[PUSlideshowSession _setDisablingIdleTimerToken:]
  -[PUSlideshowSession initWithFetchResult:assetCollection:]
  -[PUSlideshowSession initWithFetchResult:assetCollection:startIndex:]
  -[PUSlideshowSession _updateCurrentState]
  -[PUSlideshowSession _resolutionSizes]
  -[PUSlideshowSession _configurePresentationViewController:]
  -[PUSlideshowSession _distributeSlideshowDisplayContextWithPresentationController:]
  -[PUSlideshowSession _slideshowViewModel:didChange:]
  -[PUSlideshowSession _slideshowSettingsViewModel:didChange:]
  -[PUSlideshowSession _setDisablingIdleTimer:]
  -[PUSlideshowSession didStartOnce]
  -[PUSlideshowSession setDidStartOnce:]
  -[PUSlideshowSession _addCurrentSettingsToPayload:]
  -[PUSlideshowSession settingsViewModel]
  -[PUSlideshowSession _invalidateCurrentState]
  -[PUSlideshowSession updatePresentationViewController]
  -[PUSlideshowSession registerSlideshowDisplayContext:]
  -[PUSlideshowSession unregisterSlideshowDisplayContext:]
  -[PUSlideshowSession _disablingIdleTimer]


PUSlideshowSettings : PXSettings
 @property  BOOL allowUserInteractivity
 @property  double interactiveTransitionFingerTrackingBoxRadiusMinValue
 @property  double interactiveTransitionFingerTrackingBoxRadiusMaxValue
 @property  double interactiveTransitionFingerTrackingBoxRadiusDefaultValue
 @property  double interactiveTransitionFingerTrackingBoxRadiusIncrementValue
 @property  double interactiveTransitionProgressThresholdMinValue
 @property  double interactiveTransitionProgressThresholdMaxValue
 @property  double interactiveTransitionProgressThresholdDefaultValue
 @property  double interactiveTransitionProgressThresholdIncrementValue
 @property  double interactiveTransitionVelocityThresholdForAlwaysFinishingMinValue
 @property  double interactiveTransitionVelocityThresholdForAlwaysFinishingMaxValue
 @property  double interactiveTransitionVelocityThresholdForAlwaysFinishingDefaultValue
 @property  double interactiveTransitionVelocityThresholdForAlwaysFinishingIncrementValue
 @property  BOOL slideshowSettingsEnableFullscreenSupport
 @property  OKProducerPreset *currentPreset
 @property  NSString *currentPresetUniqueIdentifier

  // class methods
  +[PUSlideshowSettings sharedInstance]
  +[PUSlideshowSettings settingsControllerModule]

  // instance methods
  -[PUSlideshowSettings performPostSaveActions]
  -[PUSlideshowSettings setDefaultPresetTransitionValues]
  -[PUSlideshowSettings removeTransitionTimingCustomizationsFromUserDefaults]
  -[PUSlideshowSettings setInteractiveTransitionFingerTrackingBoxRadiusMinValue:]
  -[PUSlideshowSettings parentSettings]
  -[PUSlideshowSettings transitionSettingsAreDefaults]
  -[PUSlideshowSettings archiveValueForKey:]
  -[PUSlideshowSettings interactiveTransitionFingerTrackingBoxRadiusMaxValue]
  -[PUSlideshowSettings applyArchiveValue:forKey:]
  -[PUSlideshowSettings interactiveTransitionVelocityThresholdForAlwaysFinishingMinValue]
  -[PUSlideshowSettings .cxx_destruct]
  -[PUSlideshowSettings setInteractiveTransitionFingerTrackingBoxRadiusIncrementValue:]
  -[PUSlideshowSettings setInteractiveTransitionVelocityThresholdForAlwaysFinishingMaxValue:]
  -[PUSlideshowSettings setDefaultValues]
  -[PUSlideshowSettings setInteractiveTransitionProgressThresholdMinValue:]
  -[PUSlideshowSettings setInteractiveTransitionProgressThresholdDefaultValue:]
  -[PUSlideshowSettings interactiveTransitionFingerTrackingBoxRadiusDefaultValue]
  -[PUSlideshowSettings currentPreset]
  -[PUSlideshowSettings interactiveTransitionVelocityThresholdForAlwaysFinishingIncrementValue]
  -[PUSlideshowSettings interactiveTransitionFingerTrackingBoxRadiusIncrementValue]
  -[PUSlideshowSettings setInteractiveTransitionVelocityThresholdForAlwaysFinishingMinValue:]
  -[PUSlideshowSettings setAllowUserInteractivity:]
  -[PUSlideshowSettings slideshowSettingsEnableFullscreenSupport]
  -[PUSlideshowSettings setCurrentPresetUniqueIdentifier:]
  -[PUSlideshowSettings setSlideshowSettingsEnableFullscreenSupport:]
  -[PUSlideshowSettings interactiveTransitionVelocityThresholdForAlwaysFinishingMaxValue]
  -[PUSlideshowSettings interactiveTransitionProgressThresholdMinValue]
  -[PUSlideshowSettings setInteractiveTransitionVelocityThresholdForAlwaysFinishingIncrementValue:]
  -[PUSlideshowSettings setInteractiveTransitionFingerTrackingBoxRadiusDefaultValue:]
  -[PUSlideshowSettings setInteractiveTransitionFingerTrackingBoxRadiusMaxValue:]
  -[PUSlideshowSettings interactiveTransitionProgressThresholdMaxValue]
  -[PUSlideshowSettings interactiveTransitionProgressThresholdIncrementValue]
  -[PUSlideshowSettings setInteractiveTransitionProgressThresholdMaxValue:]
  -[PUSlideshowSettings restoreCurrentInteractiveTransitionValuesFromUserDefaults]
  -[PUSlideshowSettings setInteractiveTransitionProgressThresholdIncrementValue:]
  -[PUSlideshowSettings copyWithZone:]
  -[PUSlideshowSettings allowUserInteractivity]
  -[PUSlideshowSettings saveInteractiveSlideshowSettingsInUserDefaults]
  -[PUSlideshowSettings currentPresetUniqueIdentifier]
  -[PUSlideshowSettings interactiveTransitionProgressThresholdDefaultValue]
  -[PUSlideshowSettings setCurrentPreset:]
  -[PUSlideshowSettings interactiveTransitionFingerTrackingBoxRadiusMinValue]
  -[PUSlideshowSettings interactiveTransitionVelocityThresholdForAlwaysFinishingDefaultValue]
  -[PUSlideshowSettings setInteractiveTransitionVelocityThresholdForAlwaysFinishingDefaultValue:]


PUSlideshowSettingsPersistency : NSObject
  // class methods
  +[PUSlideshowSettingsPersistency createSlideshowSettingsViewModel]
  +[PUSlideshowSettingsPersistency saveSlideshowSettingsViewModel:]


PUSlideshowSettingsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, UIPopoverPresentationControllerDelegate, PUSlideshowThemeDelegate, PUSlideshowSettingsViewModelChangeObserver, PUViewControllerSpecChangeObserver, PUSlideshowSpeedCellDelegate, PUSlideshowMusicDelegate>
 @property  BOOL _needsUpdateSpec
 @property  BOOL _needsUpdateTableView
 @property  BOOL _needsUpdateNavigationBar
 @property  BOOL _needsUpdatePreset
 @property  BOOL _needsUpdateMediaItem
 @property  BOOL _needsUpdateMusicOn
 @property  OKProducerPreset *_pendingPreset
 @property  PUSlideshowMediaItem *_pendingMediaItem
 @property  <PUSlideshowSettingsViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSlideshowSettingsViewController initWithSession:]
  -[PUSlideshowSettingsViewController traitCollectionDidChange:]
  -[PUSlideshowSettingsViewController _updateIfNeeded]
  -[PUSlideshowSettingsViewController numberOfSectionsInTableView:]
  -[PUSlideshowSettingsViewController _setNeedsUpdate]
  -[PUSlideshowSettingsViewController tableView:numberOfRowsInSection:]
  -[PUSlideshowSettingsViewController .cxx_destruct]
  -[PUSlideshowSettingsViewController tableView:didSelectRowAtIndexPath:]
  -[PUSlideshowSettingsViewController viewDidLoad]
  -[PUSlideshowSettingsViewController tableView:cellForRowAtIndexPath:]
  -[PUSlideshowSettingsViewController popoverPresentationControllerDidDismissPopover:]
  -[PUSlideshowSettingsViewController setDelegate:]
  -[PUSlideshowSettingsViewController viewModel:didChange:]
  -[PUSlideshowSettingsViewController _needsUpdate]
  -[PUSlideshowSettingsViewController viewWillDisappear:]
  -[PUSlideshowSettingsViewController viewDidLayoutSubviews]
  -[PUSlideshowSettingsViewController viewWillAppear:]
  -[PUSlideshowSettingsViewController _updateSpecIfNeeded]
  -[PUSlideshowSettingsViewController delegate]
  -[PUSlideshowSettingsViewController dealloc]
  -[PUSlideshowSettingsViewController _invalidateSpec]
  -[PUSlideshowSettingsViewController _needsUpdateSpec]
  -[PUSlideshowSettingsViewController _setNeedsUpdateSpec:]
  -[PUSlideshowSettingsViewController viewControllerSpec:didChange:]
  -[PUSlideshowSettingsViewController _setNeedsUpdateTableView:]
  -[PUSlideshowSettingsViewController _updateTableViewIfNeeded]
  -[PUSlideshowSettingsViewController _needsUpdateTableView]
  -[PUSlideshowSettingsViewController musicPickerDidFinish:]
  -[PUSlideshowSettingsViewController musicPicker:didPickMediaItem:]
  -[PUSlideshowSettingsViewController _invalidateTableView]
  -[PUSlideshowSettingsViewController _setPendingPreset:]
  -[PUSlideshowSettingsViewController _setPendingMediaItem:]
  -[PUSlideshowSettingsViewController _didTapDoneButton:]
  -[PUSlideshowSettingsViewController _invalidateNavigationBar]
  -[PUSlideshowSettingsViewController _invalidatePreset]
  -[PUSlideshowSettingsViewController _invalidateMediaItem]
  -[PUSlideshowSettingsViewController _needsUpdateNavigationBar]
  -[PUSlideshowSettingsViewController _needsUpdatePreset]
  -[PUSlideshowSettingsViewController _needsUpdateMusicOn]
  -[PUSlideshowSettingsViewController _setNeedsUpdateNavigationBar:]
  -[PUSlideshowSettingsViewController _setNeedsUpdatePreset:]
  -[PUSlideshowSettingsViewController _setNeedsUpdateMediaItem:]
  -[PUSlideshowSettingsViewController _setNeedsUpdateMusicOn:]
  -[PUSlideshowSettingsViewController _updateNavigationBarIfNeeded]
  -[PUSlideshowSettingsViewController _updatePresetIfNeeded]
  -[PUSlideshowSettingsViewController _updateMediaItemIfNeeded]
  -[PUSlideshowSettingsViewController _updateMusicOnIfNeeded]
  -[PUSlideshowSettingsViewController _needsUpdateMediaItem]
  -[PUSlideshowSettingsViewController _synchronizedChangedSettings]
  -[PUSlideshowSettingsViewController _pendingPreset]
  -[PUSlideshowSettingsViewController _toggleRepeat:]
  -[PUSlideshowSettingsViewController _pendingMediaItem]
  -[PUSlideshowSettingsViewController _invalidateMusicOn]
  -[PUSlideshowSettingsViewController themePicker:didPickPreset:]
  -[PUSlideshowSettingsViewController themePickerDidFinish:]
  -[PUSlideshowSettingsViewController PUSlideshowSpeedCell:stepDurationDidChange:]
  -[PUSlideshowSettingsViewController _toggleMusic:]


PUSlideshowSettingsViewControllerSpec : PUViewControllerSpec
 @property  BOOL shouldShowNavigationBar
 @property  BOOL shouldUseBlurredBackground
 @property  UIColor *cellBackgroundColor
 @property  UIColor *tableViewBackgroundColor
 @property  UIView *tableViewHeaderView
 @property  unsigned long rectEdgeForExtendedLayout

  // instance methods
  -[PUSlideshowSettingsViewControllerSpec cellBackgroundColor]
  -[PUSlideshowSettingsViewControllerSpec currentChange]
  -[PUSlideshowSettingsViewControllerSpec newSpecChange]
  -[PUSlideshowSettingsViewControllerSpec shouldUseBlurredBackground]
  -[PUSlideshowSettingsViewControllerSpec tableViewBackgroundColor]
  -[PUSlideshowSettingsViewControllerSpec rectEdgeForExtendedLayout]
  -[PUSlideshowSettingsViewControllerSpec tableViewHeaderView]
  -[PUSlideshowSettingsViewControllerSpec shouldShowNavigationBar]


PUSlideshowSettingsViewControllerSpecChange : PUViewControllerSpecChange

PUSlideshowSettingsViewModel : PUViewModel
 @property  NSDictionary *propertyDictionary
 @property  OKProducerPreset *preset
 @property  PUSlideshowMediaItem *mediaItem
 @property  BOOL shouldRepeat
 @property  double stepDuration
 @property  BOOL musicOn

  // instance methods
  -[PUSlideshowSettingsViewModel unregisterChangeObserver:]
  -[PUSlideshowSettingsViewModel propertyDictionary]
  -[PUSlideshowSettingsViewModel setShouldRepeat:]
  -[PUSlideshowSettingsViewModel registerChangeObserver:]
  -[PUSlideshowSettingsViewModel .cxx_destruct]
  -[PUSlideshowSettingsViewModel initWithPropertyDictionary:]
  -[PUSlideshowSettingsViewModel shouldRepeat]
  -[PUSlideshowSettingsViewModel isEqual:]
  -[PUSlideshowSettingsViewModel newViewModelChange]
  -[PUSlideshowSettingsViewModel setMediaItem:]
  -[PUSlideshowSettingsViewModel currentChange]
  -[PUSlideshowSettingsViewModel mediaItem]
  -[PUSlideshowSettingsViewModel copyWithZone:]
  -[PUSlideshowSettingsViewModel preset]
  -[PUSlideshowSettingsViewModel setPreset:]
  -[PUSlideshowSettingsViewModel isMusicOn]
  -[PUSlideshowSettingsViewModel stepDuration]
  -[PUSlideshowSettingsViewModel setMusicOn:]
  -[PUSlideshowSettingsViewModel setStepDuration:]


PUSlideshowSettingsViewModelChange : PUViewModelChange
 @property  BOOL presetDidChange
 @property  BOOL mediaItemDidChange
 @property  BOOL shouldRepeatDidChange
 @property  BOOL stepDurationDidChange
 @property  BOOL musicOnDidChange

  // instance methods
  -[PUSlideshowSettingsViewModelChange hasChanges]
  -[PUSlideshowSettingsViewModelChange presetDidChange]
  -[PUSlideshowSettingsViewModelChange mediaItemDidChange]
  -[PUSlideshowSettingsViewModelChange stepDurationDidChange]
  -[PUSlideshowSettingsViewModelChange shouldRepeatDidChange]
  -[PUSlideshowSettingsViewModelChange musicOnDidChange]
  -[PUSlideshowSettingsViewModelChange _setPresetDidChange:]
  -[PUSlideshowSettingsViewModelChange _setMediaItemDidChange:]
  -[PUSlideshowSettingsViewModelChange _setRepeatDidChange:]
  -[PUSlideshowSettingsViewModelChange _setStepDurationDidChange:]
  -[PUSlideshowSettingsViewModelChange _setMusicOnDidChange:]


PUSlideshowSpeedCell : UITableViewCell
 @property  double stepDuration
 @property  <PUSlideshowSpeedCellDelegate> *delegate
 @property  BOOL enabled

  // instance methods
  -[PUSlideshowSpeedCell updateConstraints]
  -[PUSlideshowSpeedCell .cxx_destruct]
  -[PUSlideshowSpeedCell setDelegate:]
  -[PUSlideshowSpeedCell isEnabled]
  -[PUSlideshowSpeedCell delegate]
  -[PUSlideshowSpeedCell initWithStyle:reuseIdentifier:]
  -[PUSlideshowSpeedCell setEnabled:]
  -[PUSlideshowSpeedCell _updateView]
  -[PUSlideshowSpeedCell stepDuration]
  -[PUSlideshowSpeedCell setStepDuration:]
  -[PUSlideshowSpeedCell _stepDurationValueChanged:]


PUSlideshowThemeViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, PUViewControllerSpecChangeObserver>
 @property  BOOL _needsUpdateSpec
 @property  BOOL _needsUpdateBackgroundView
 @property  BOOL _needsUpdateTableView
 @property  OKProducerPreset *currentPreset
 @property  <PUSlideshowThemeDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSlideshowThemeViewController traitCollectionDidChange:]
  -[PUSlideshowThemeViewController _updateIfNeeded]
  -[PUSlideshowThemeViewController _setNeedsUpdate]
  -[PUSlideshowThemeViewController tableView:numberOfRowsInSection:]
  -[PUSlideshowThemeViewController .cxx_destruct]
  -[PUSlideshowThemeViewController tableView:didSelectRowAtIndexPath:]
  -[PUSlideshowThemeViewController viewDidLoad]
  -[PUSlideshowThemeViewController tableView:cellForRowAtIndexPath:]
  -[PUSlideshowThemeViewController setDelegate:]
  -[PUSlideshowThemeViewController currentPreset]
  -[PUSlideshowThemeViewController init]
  -[PUSlideshowThemeViewController _needsUpdate]
  -[PUSlideshowThemeViewController _didFinish]
  -[PUSlideshowThemeViewController viewWillDisappear:]
  -[PUSlideshowThemeViewController viewDidLayoutSubviews]
  -[PUSlideshowThemeViewController viewWillAppear:]
  -[PUSlideshowThemeViewController _updateSpecIfNeeded]
  -[PUSlideshowThemeViewController delegate]
  -[PUSlideshowThemeViewController dealloc]
  -[PUSlideshowThemeViewController setCurrentPreset:]
  -[PUSlideshowThemeViewController pu_wantsNavigationBarVisible]
  -[PUSlideshowThemeViewController _invalidateSpec]
  -[PUSlideshowThemeViewController _needsUpdateSpec]
  -[PUSlideshowThemeViewController _setNeedsUpdateSpec:]
  -[PUSlideshowThemeViewController viewControllerSpec:didChange:]
  -[PUSlideshowThemeViewController _needsUpdateBackgroundView]
  -[PUSlideshowThemeViewController _setNeedsUpdateBackgroundView:]
  -[PUSlideshowThemeViewController _setNeedsUpdateTableView:]
  -[PUSlideshowThemeViewController _updateTableViewIfNeeded]
  -[PUSlideshowThemeViewController _updateBackgroundViewIfNeeded]
  -[PUSlideshowThemeViewController _needsUpdateTableView]
  -[PUSlideshowThemeViewController _invalidateTableView]
  -[PUSlideshowThemeViewController _invalidateBackgroundView]
  -[PUSlideshowThemeViewController _didPickPreset:]


PUSlideshowViewController : UIViewController <UIGestureRecognizerDelegate, PUSlideshowViewModelChangeObserver, PUSlideshowSettingsViewControllerDelegate, OKPresentationViewControllerDelegate, PHAirPlayControllerContentProvider, PHAirPlayControllerRouteObserver, PUViewControllerSpecChangeObserver, PUSlideshowDisplayContext>
 @property  PUSlideshowViewController *_secondScreenBrowser
 @property  BOOL _needsUpdateSpec
 @property  PHPlaceholderView *_slideshowPlaceholderView
 @property  UIViewController *_slideshowSettingsViewController
 @property  PUSlideshowSession *session
 @property  unsigned long mode
 @property  <PUSlideshowViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUSlideshowViewController initWithSession:]
  -[PUSlideshowViewController prefersHomeIndicatorAutoHidden]
  -[PUSlideshowViewController prefersStatusBarHidden]
  -[PUSlideshowViewController _updateChromeVisibility]
  -[PUSlideshowViewController gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[PUSlideshowViewController initWithCoder:]
  -[PUSlideshowViewController viewWillLayoutSubviews]
  -[PUSlideshowViewController _updateIfNeeded]
  -[PUSlideshowViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUSlideshowViewController _setNeedsUpdate]
  -[PUSlideshowViewController .cxx_destruct]
  -[PUSlideshowViewController viewDidLoad]
  -[PUSlideshowViewController _tapGesture:]
  -[PUSlideshowViewController setDelegate:]
  -[PUSlideshowViewController viewDidAppear:]
  -[PUSlideshowViewController initWithNibName:bundle:]
  -[PUSlideshowViewController viewModel:didChange:]
  -[PUSlideshowViewController airPlayControllerRouteAvailabilityChanged:]
  -[PUSlideshowViewController airPlayControllerScreenAvailabilityChanged:]
  -[PUSlideshowViewController contentViewControllerForAirPlayController:]
  -[PUSlideshowViewController finishSession]
  -[PUSlideshowViewController _needsUpdate]
  -[PUSlideshowViewController viewWillAppear:]
  -[PUSlideshowViewController _updateSpecIfNeeded]
  -[PUSlideshowViewController _doneButtonTapped:]
  -[PUSlideshowViewController delegate]
  -[PUSlideshowViewController dealloc]
  -[PUSlideshowViewController loadView]
  -[PUSlideshowViewController session]
  -[PUSlideshowViewController mode]
  -[PUSlideshowViewController pu_wantsToolbarVisible]
  -[PUSlideshowViewController pu_wantsTabBarVisible]
  -[PUSlideshowViewController pu_wantsNavigationBarVisible]
  -[PUSlideshowViewController _invalidateSpec]
  -[PUSlideshowViewController _needsUpdateSpec]
  -[PUSlideshowViewController _setNeedsUpdateSpec:]
  -[PUSlideshowViewController _secondScreenBrowser]
  -[PUSlideshowViewController _setSecondScreenBrowser:]
  -[PUSlideshowViewController viewControllerSpec:didChange:]
  -[PUSlideshowViewController slideshowSession:stopDisplayingPresentationViewController:]
  -[PUSlideshowViewController slideshowSession:startDisplayingPresentationViewController:]
  -[PUSlideshowViewController settingsDidFinished:]
  -[PUSlideshowViewController initWithSession:mode:]
  -[PUSlideshowViewController _handleAppWillResignActiveNotification:]
  -[PUSlideshowViewController _setupChromeBar]
  -[PUSlideshowViewController _setupTapGesture]
  -[PUSlideshowViewController _settingsButtonTapped:]
  -[PUSlideshowViewController _playerStateButtonTapped:]
  -[PUSlideshowViewController _slideshowSettingsViewController]
  -[PUSlideshowViewController _setSlideshowSettingsViewController:]
  -[PUSlideshowViewController _updatePlayerButton]
  -[PUSlideshowViewController _dismissSlideshow]
  -[PUSlideshowViewController visibleAssets]
  -[PUSlideshowViewController _handleStateChange]
  -[PUSlideshowViewController _airplayButtonTapped:]
  -[PUSlideshowViewController _slideshowPlaceholderView]
  -[PUSlideshowViewController _setSlideshowPlaceHolderView:]
  -[PUSlideshowViewController _removeSlideshowSettingsViewController]
  -[PUSlideshowViewController _updateRouteObservation]
  -[PUSlideshowViewController _updateAirplayButton]
  -[PUSlideshowViewController _updatePlaceholder]
  -[PUSlideshowViewController ancestorViewOfInstance:]
  -[PUSlideshowViewController _installPresentationController:]
  -[PUSlideshowViewController _removeCurrentPresentationController]
  -[PUSlideshowViewController couchPotatoPlaybackFinished]


PUSlideshowViewControllerSpec : PUViewControllerSpec
 @property  PUSlideshowViewControllerSpecChange *currentChange
 @property  BOOL shouldShowPlaceholder
 @property  BOOL shouldShowChromeBars
 @property  BOOL shouldObserveAirplayRoute
 @property  BOOL shouldShowAirplayButton
 @property  BOOL isChromeVisible
 @property  BOOL isAirplayScreenAvailable
 @property  BOOL isAirplayRouteAvailable
 @property  unsigned long mode
 @property  BOOL shouldUseChromeBars
 @property  BOOL shouldUseTapGesture
 @property  BOOL shouldRegisterToAirplay
 @property  BOOL shouldPauseWhenAppResignsActive

  // instance methods
  -[PUSlideshowViewControllerSpec updateIfNeeded]
  -[PUSlideshowViewControllerSpec initWithMode:]
  -[PUSlideshowViewControllerSpec setChromeVisible:]
  -[PUSlideshowViewControllerSpec init]
  -[PUSlideshowViewControllerSpec currentChange]
  -[PUSlideshowViewControllerSpec isChromeVisible]
  -[PUSlideshowViewControllerSpec newSpecChange]
  -[PUSlideshowViewControllerSpec mode]
  -[PUSlideshowViewControllerSpec shouldPauseWhenAppResignsActive]
  -[PUSlideshowViewControllerSpec shouldUseChromeBars]
  -[PUSlideshowViewControllerSpec shouldUseTapGesture]
  -[PUSlideshowViewControllerSpec shouldRegisterToAirplay]
  -[PUSlideshowViewControllerSpec shouldShowChromeBars]
  -[PUSlideshowViewControllerSpec isAirplayScreenAvailable]
  -[PUSlideshowViewControllerSpec shouldObserveAirplayRoute]
  -[PUSlideshowViewControllerSpec shouldShowAirplayButton]
  -[PUSlideshowViewControllerSpec shouldShowPlaceholder]
  -[PUSlideshowViewControllerSpec setAirplayScreenAvailable:]
  -[PUSlideshowViewControllerSpec setAirplayRouteAvailable:]
  -[PUSlideshowViewControllerSpec isAirplayRouteAvailable]
  -[PUSlideshowViewControllerSpec _setShouldShowPlaceholder:]
  -[PUSlideshowViewControllerSpec _setShouldShowChromeBars:]
  -[PUSlideshowViewControllerSpec _setShouldObserveAirplayRoute:]
  -[PUSlideshowViewControllerSpec _setShouldShowAirplayButton:]


PUSlideshowViewControllerSpecChange : PUViewControllerSpecChange
 @property  BOOL shouldShowPlaceholderChanged
 @property  BOOL shouldShowChromeBarsChanged
 @property  BOOL shouldObserveAirplayRouteChanged
 @property  BOOL shouldShowAirplayButtonChanged
 @property  BOOL chromeVisibilityChanged

  // instance methods
  -[PUSlideshowViewControllerSpecChange changed]
  -[PUSlideshowViewControllerSpecChange chromeVisibilityChanged]
  -[PUSlideshowViewControllerSpecChange shouldShowChromeBarsChanged]
  -[PUSlideshowViewControllerSpecChange shouldObserveAirplayRouteChanged]
  -[PUSlideshowViewControllerSpecChange shouldShowAirplayButtonChanged]
  -[PUSlideshowViewControllerSpecChange shouldShowPlaceholderChanged]
  -[PUSlideshowViewControllerSpecChange _setShouldShowPlaceholderChanged:]
  -[PUSlideshowViewControllerSpecChange _setShouldShowChromeBarsChanged:]
  -[PUSlideshowViewControllerSpecChange _setShouldObserveAirplayRouteChanged:]
  -[PUSlideshowViewControllerSpecChange _setShouldShowAirplayButtonChanged:]


PUSlideshowViewModel : PUViewModel
 @property  long long currentState
 @property  BOOL wantsChromeVisible

  // instance methods
  -[PUSlideshowViewModel unregisterChangeObserver:]
  -[PUSlideshowViewModel registerChangeObserver:]
  -[PUSlideshowViewModel newViewModelChange]
  -[PUSlideshowViewModel currentChange]
  -[PUSlideshowViewModel currentState]
  -[PUSlideshowViewModel setCurrentState:]
  -[PUSlideshowViewModel wantsChromeVisible]
  -[PUSlideshowViewModel setWantsChromeVisible:changeReason:]
  -[PUSlideshowViewModel setWantsChromeVisible:]


PUSlideshowViewModelChange : PUViewModelChange
 @property  BOOL currentStateDidChange
 @property  BOOL wantsChromeVisibleDidChange

  // instance methods
  -[PUSlideshowViewModelChange hasChanges]
  -[PUSlideshowViewModelChange currentStateDidChange]
  -[PUSlideshowViewModelChange wantsChromeVisibleDidChange]
  -[PUSlideshowViewModelChange _setCurrentStateDidChange:]
  -[PUSlideshowViewModelChange _setWantsChromeVisibleDidChange:]


PUStackView : UIView
 @property  long long _numberOfViews
 @property  NSArray *_photoViews
 @property  NSPointerArray *_imageSizes
 @property  NSArray *_photoDecorationVariants
 @property  UIView *_backgroundView
 @property  UIColor *cornersBackgroundColor
 @property  unsigned long style
 @property  PUPhotoDecoration *photoDecoration
 @property  BOOL combinesPhotoDecorations
 @property  {CGSize=dd} stackSize
 @property  {UIOffset=dd} stackOffset
 @property  {UIEdgeInsets=dddd} stackPerspectiveInsets
 @property  {UIOffset=dd} stackPerspectiveOffset
 @property  {CGPoint=dd} stackPerspectiveFactor
 @property  UIColor *gridBackgroundColor
 @property  double gridMargin
 @property  double gridItemSpacing
 @property  double posterSquareCornerRadius
 @property  double posterSubitemCornerRadius
 @property  BOOL continuousCorners
 @property  BOOL hasRoundedCorners
 @property  BOOL cornerOverlaysDisabled
 @property  double cornerRadius
 @property  NSArray *stackItemViews
 @property  long long numberOfVisibleItems
 @property  double itemAlpha
 @property  {CGPoint=dd} topLeftCornerOfFrontStackItem
 @property  UIImage *emptyPlaceholderImage
 @property  BOOL empty
 @property  BOOL highlighted

  // class methods
  +[PUStackView maximumNumberOfVisibleImagesForStyle:]
  +[PUStackView maximumNumberOfVisibleItemsForStyle:]

  // instance methods
  -[PUStackView setHighlighted:]
  -[PUStackView continuousCorners]
  -[PUStackView combinesPhotoDecorations]
  -[PUStackView itemAlpha]
  -[PUStackView photoDecoration]
  -[PUStackView setEmpty:]
  -[PUStackView setContinuousCorners:]
  -[PUStackView _combinedPhotoDecorationsImage]
  -[PUStackView setCombinesPhotoDecorations:]
  -[PUStackView setGridItemSpacing:]
  -[PUStackView setCornerOverlaysDisabled:]
  -[PUStackView _updateHighlight]
  -[PUStackView setStackSize:]
  -[PUStackView setStackOffset:]
  -[PUStackView setGridBackgroundColor:]
  -[PUStackView wouldCoverAllItemsInStackView:]
  -[PUStackView _setBackgroundView:]
  -[PUStackView _backgroundView]
  -[PUStackView setStackPerspectiveInsets:]
  -[PUStackView rectOfStackItemAtIndex:inCoordinateSpace:]
  -[PUStackView traitCollectionDidChange:]
  -[PUStackView isEmpty]
  -[PUStackView setPhotoDecoration:]
  -[PUStackView posterSubitemCornerRadius]
  -[PUStackView setStackPerspectiveOffset:]
  -[PUStackView stackOffset]
  -[PUStackView setNumberOfVisibleItems:]
  -[PUStackView cornerOverlaysDisabled]
  -[PUStackView setHasRoundedCorners:]
  -[PUStackView setPosterSubitemCornerRadius:]
  -[PUStackView _getCenter:bounds:forPhotoViewAtIndex:]
  -[PUStackView _updateNumberOfViews]
  -[PUStackView gridMargin]
  -[PUStackView stackPerspectiveInsets]
  -[PUStackView stackItemViews]
  -[PUStackView .cxx_destruct]
  -[PUStackView setStyle:]
  -[PUStackView _getStackFrame]
  -[PUStackView setCornersBackgroundColor:]
  -[PUStackView setBadgeInfo:style:forItemAtIndex:]
  -[PUStackView layoutSubviews]
  -[PUStackView _imageSizes]
  -[PUStackView _photoViews]
  -[PUStackView setStackPerspectiveFactor:]
  -[PUStackView emptyPlaceholderImage]
  -[PUStackView setSubtitle:forItemAtIndex:]
  -[PUStackView posterSquareCornerRadius]
  -[PUStackView setEmptyPlaceholderImage:]
  -[PUStackView setImage:forItemAtIndex:]
  -[PUStackView _photoDecorationVariants]
  -[PUStackView setPosterSquareCornerRadius:]
  -[PUStackView setGridMargin:]
  -[PUStackView _updateDynamicLayout]
  -[PUStackView isHighlighted]
  -[PUStackView setTitleFontName:forItemAtIndex:]
  -[PUStackView isImageHiddenForItemAtIndex:]
  -[PUStackView setFeatureSpec:forItemAtIndex:]
  -[PUStackView setHasRoundedCorners:withCornersBackgroundColor:]
  -[PUStackView setImageHidden:forItemAtIndex:]
  -[PUStackView prepareForReuse]
  -[PUStackView setTitle:forItemAtIndex:]
  -[PUStackView setCollectionTileLayoutTemplate:forItemAtIndex:]
  -[PUStackView topLeftCornerOfFrontStackItem]
  -[PUStackView hasRoundedCorners]
  -[PUStackView cornersBackgroundColor]
  -[PUStackView newLayoutAttributesForItemAtIndex:relativeToView:]
  -[PUStackView _updatePhotoViews]
  -[PUStackView setImageSize:forItemAtIndex:]
  -[PUStackView stackPerspectiveOffset]
  -[PUStackView initWithFrame:]
  -[PUStackView numberOfVisibleItems]
  -[PUStackView cornerRadius]
  -[PUStackView setItemAlpha:]
  -[PUStackView setBadgeInfo:forItemAtIndex:]
  -[PUStackView _rebuildDecorationVariants]
  -[PUStackView _setPhotoDecorationVariants:]
  -[PUStackView gridItemSpacing]
  -[PUStackView stackPerspectiveFactor]
  -[PUStackView _setNeedsDynamicLayout]
  -[PUStackView _updateBackgroundView]
  -[PUStackView _numberOfViews]
  -[PUStackView stackSize]
  -[PUStackView _updateSubviewsOrdering]
  -[PUStackView style]
  -[PUStackView newLayoutAttributesForVisbleItemsRelativeToView:maxCount:]
  -[PUStackView gridBackgroundColor]


PUStackedAlbumLayout : UICollectionViewLayout
 @property  UICollectionViewLayoutAttributes *globalHeaderAttributes
 @property  NSArray *visibleStackedItemLayoutAttributes
 @property  UICollectionViewLayoutAttributes *referenceItemLayoutAttributes
 @property  {CGPoint=dd} referenceCenter
 @property  double yAdjust
 @property  {CGSize=dd} contentSizeAdjust
 @property  PUAlbumListTransitionContext *albumListTransitionContext
 @property  BOOL isInteractive

  // instance methods
  -[PUStackedAlbumLayout layoutAttributesForItemAtIndexPath:]
  -[PUStackedAlbumLayout setInteractive:]
  -[PUStackedAlbumLayout prepareLayout]
  -[PUStackedAlbumLayout isInteractive]
  -[PUStackedAlbumLayout collectionViewContentSize]
  -[PUStackedAlbumLayout .cxx_destruct]
  -[PUStackedAlbumLayout _animationForReusableView:toLayoutAttributes:type:]
  -[PUStackedAlbumLayout yAdjust]
  -[PUStackedAlbumLayout layoutAttributesForElementsInRect:]
  -[PUStackedAlbumLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUStackedAlbumLayout setAlbumListTransitionContext:]
  -[PUStackedAlbumLayout setReferenceItemLayoutAttributes:]
  -[PUStackedAlbumLayout setVisibleStackedItemLayoutAttributes:]
  -[PUStackedAlbumLayout setReferenceCenter:]
  -[PUStackedAlbumLayout albumListTransitionContext]
  -[PUStackedAlbumLayout globalHeaderAttributes]
  -[PUStackedAlbumLayout zIndexForItemAtIndexPath:]
  -[PUStackedAlbumLayout visibleStackedItemLayoutAttributes]
  -[PUStackedAlbumLayout contentSizeAdjust]
  -[PUStackedAlbumLayout _newAdjustedLayoutAttributes:indexPath:]
  -[PUStackedAlbumLayout referenceItemLayoutAttributes]
  -[PUStackedAlbumLayout referenceCenter]
  -[PUStackedAlbumLayout setGlobalHeaderAttributes:]
  -[PUStackedAlbumLayout setYAdjust:]
  -[PUStackedAlbumLayout setContentSizeAdjust:]


PUStackedAlbumTransition : PUNavigationTransition <PUCollectionViewLayoutTransitioningDelegate, PUTransitionViewAnimatorDelegate>
 @property  BOOL isExpanding
 @property  PUStackedAlbumLayout *_transitionLayout
 @property  PUStackedAlbumTransitionLayout *_interactiveTransitionLayout
 @property  PUTransitionViewAnimator *_transitionViewAnimator
 @property  PUPhotoPinchGestureRecognizer *_photoPinchGestureRecognizer
 @property  id _disableToken
 @property  UIViewController<PUStackedAlbumControllerTransition> *fromViewController
 @property  UIViewController<PUStackedAlbumControllerTransition> *toViewController
 @property  <PLAssetContainer> *photoCollection
 @property  PHCollection *ph_photoCollection
 @property  <PUStackedAlbumTransitionDelegate> *delegate
 @property  BOOL isForStandInAlbum
 @property  BOOL forFolder
 @property  {CGPoint=dd} interactionCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUStackedAlbumTransition .cxx_destruct]
  -[PUStackedAlbumTransition setDelegate:]
  -[PUStackedAlbumTransition animatePushTransition]
  -[PUStackedAlbumTransition init]
  -[PUStackedAlbumTransition animatePopTransition]
  -[PUStackedAlbumTransition delegate]
  -[PUStackedAlbumTransition isExpanding]
  -[PUStackedAlbumTransition _transitionLayout]
  -[PUStackedAlbumTransition updateInteractiveTransitionWithPhotoPinchGestureRecognizer:]
  -[PUStackedAlbumTransition ph_setPhotoCollection:]
  -[PUStackedAlbumTransition setForStandInAlbum:]
  -[PUStackedAlbumTransition setForFolder:]
  -[PUStackedAlbumTransition _photoPinchGestureRecognizer]
  -[PUStackedAlbumTransition startInteractiveTransitionWithPhotoPinchGestureRecognizer:isExpanding:]
  -[PUStackedAlbumTransition setInteractionCenter:]
  -[PUStackedAlbumTransition _setPhotoPinchGestureRecognizer:]
  -[PUStackedAlbumTransition transitionViewAnimatorDidUpdate:]
  -[PUStackedAlbumTransition transitionViewAnimatorWillEnd:withTargetTranslation:]
  -[PUStackedAlbumTransition transitionViewAnimatorDidEnd:finished:]
  -[PUStackedAlbumTransition _setTransitionLayout:]
  -[PUStackedAlbumTransition completeInteractiveOperation:finished:]
  -[PUStackedAlbumTransition collectionViewLayout:willSupplyLayoutAttributes:]
  -[PUStackedAlbumTransition collectionViewLayoutShouldProvideCustomAnimations:]
  -[PUStackedAlbumTransition interactionCenter]
  -[PUStackedAlbumTransition _setExpanding:]
  -[PUStackedAlbumTransition _transitionViewAnimator]
  -[PUStackedAlbumTransition _interactiveTransitionLayout]
  -[PUStackedAlbumTransition _disableToken]
  -[PUStackedAlbumTransition isForFolder]
  -[PUStackedAlbumTransition photoCollection]
  -[PUStackedAlbumTransition ph_photoCollection]
  -[PUStackedAlbumTransition _setInteractiveTransitionLayout:]
  -[PUStackedAlbumTransition _setDisableToken:]
  -[PUStackedAlbumTransition _newInteractiveTransitionViewAnimatorForLayout:collectionView:]
  -[PUStackedAlbumTransition _setTransitionViewAnimator:]
  -[PUStackedAlbumTransition _newTransitionLayoutWithStackedAlbumLayout:otherLayout:forPush:]
  -[PUStackedAlbumTransition isForStandInAlbum]
  -[PUStackedAlbumTransition _popTransitionInitialVisibleStackedAssetIndexPaths:]
  -[PUStackedAlbumTransition setPhotoCollection:]


PUStackedAlbumTransitionLayout : UICollectionViewTransitionLayout
 @property  BOOL isExpanding
 @property  {CGPoint=dd} expandedStackFinalDelta
 @property  {CGPoint=dd} interactionOffset
 @property  {CGPoint=dd} initialCollapsedStackCenter
 @property  {CGPoint=dd} finalCollapsedStackCenter
 @property  {CGPoint=dd} currentCollapsedStackCenter

  // instance methods
  -[PUStackedAlbumTransitionLayout layoutAttributesForItemAtIndexPath:]
  -[PUStackedAlbumTransitionLayout prepareLayout]
  -[PUStackedAlbumTransitionLayout .cxx_destruct]
  -[PUStackedAlbumTransitionLayout layoutAttributesForElementsInRect:]
  -[PUStackedAlbumTransitionLayout isExpanding]
  -[PUStackedAlbumTransitionLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUStackedAlbumTransitionLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]
  -[PUStackedAlbumTransitionLayout initWithCurrentLayout:nextLayout:isExpanding:]
  -[PUStackedAlbumTransitionLayout setInitialCollapsedStackCenter:]
  -[PUStackedAlbumTransitionLayout setFinalCollapsedStackCenter:]
  -[PUStackedAlbumTransitionLayout setCurrentCollapsedStackCenter:]
  -[PUStackedAlbumTransitionLayout setInteractionOffset:]
  -[PUStackedAlbumTransitionLayout expandedStackFinalDelta]
  -[PUStackedAlbumTransitionLayout currentCollapsedStackCenter]
  -[PUStackedAlbumTransitionLayout finalCollapsedStackCenter]
  -[PUStackedAlbumTransitionLayout initialCollapsedStackCenter]
  -[PUStackedAlbumTransitionLayout _centerOfLayoutAttributes:]
  -[PUStackedAlbumTransitionLayout _newCenterForLayoutAttributes:transitionProgress:]
  -[PUStackedAlbumTransitionLayout interactionOffset]


PUOneUpLoadingErrorPresentationController : PUErrorPresentationController
  // class methods
  +[PUOneUpLoadingErrorPresentationController errorIsDownloadError:]
  +[PUOneUpLoadingErrorPresentationController _mediaSpecificMessageForKeyPrefix:forAsset:]
  +[PUOneUpLoadingErrorPresentationController _hardwareModelSpecificMessageForKeyPrefix:]
  +[PUOneUpLoadingErrorPresentationController oneUpLoadingErrorTypeFromError:]

  // instance methods
  -[PUOneUpLoadingErrorPresentationController additionalRadarDescriptionLinesForAsset:]
  -[PUOneUpLoadingErrorPresentationController shouldShowFileRadarAction]
  -[PUOneUpLoadingErrorPresentationController configureAlertPropertiesFromError:withAssets:willShowFileRadarButton:alertCompletion:]
  -[PUOneUpLoadingErrorPresentationController configureRadarPropertiesFromError:withAssets:]
  -[PUOneUpLoadingErrorPresentationController initWithError:forAsset:]


PUStorageManagementBaseController : UIViewController <PSController>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUStorageManagementBaseController handleURL:]
  -[PUStorageManagementBaseController suspend]
  -[PUStorageManagementBaseController didLock]
  -[PUStorageManagementBaseController didWake]
  -[PUStorageManagementBaseController parentController]
  -[PUStorageManagementBaseController .cxx_destruct]
  -[PUStorageManagementBaseController setSpecifier:]
  -[PUStorageManagementBaseController viewDidLoad]
  -[PUStorageManagementBaseController willResignActive]
  -[PUStorageManagementBaseController handleURL:withCompletion:]
  -[PUStorageManagementBaseController didUnlock]
  -[PUStorageManagementBaseController setRootController:]
  -[PUStorageManagementBaseController showController:]
  -[PUStorageManagementBaseController showController:animate:]
  -[PUStorageManagementBaseController canBeShownFromSuspendedState]
  -[PUStorageManagementBaseController readPreferenceValue:]
  -[PUStorageManagementBaseController setPreferenceValue:specifier:]
  -[PUStorageManagementBaseController statusBarWillAnimateByHeight:]
  -[PUStorageManagementBaseController setParentController:]
  -[PUStorageManagementBaseController willBecomeActive]
  -[PUStorageManagementBaseController specifier]
  -[PUStorageManagementBaseController willUnlock]
  -[PUStorageManagementBaseController rootController]
  -[PUStorageManagementBaseController didReceiveMemoryWarning]


PUStorageManagementUtility : NSObject
 @property  BOOL isCPLEnabled
 @property  BOOL isCPLInExitMode
 @property  BOOL shouldHideCPL
 @property  BOOL isDeletableItemsInTrash
 @property  NSNumber *sizeForRecentlyDeletedItems
 @property  NSNumber *sizeForTrashedSpatialOvercaptureResources
 @property  BOOL isOptimizedModeOn
 @property  unsigned long totalReclaimableSizeFromPurgingVideoClips

  // class methods
  +[PUStorageManagementUtility stringWithSizeUnitForValue:]

  // instance methods
  -[PUStorageManagementUtility initWithPhotoLibrary:]
  -[PUStorageManagementUtility .cxx_destruct]
  -[PUStorageManagementUtility _assetsInTrash]
  -[PUStorageManagementUtility _assetsWithSpatialOvercaptureResources]
  -[PUStorageManagementUtility _defaultVideoAssetFetchOptionsWithSortOrder:fetchLimit:minimumFileSize:]
  -[PUStorageManagementUtility fetchVideoAssetsBySizeWithSortOrder:]
  -[PUStorageManagementUtility _deleteableVideoAssets]
  -[PUStorageManagementUtility purgeableSizeAndOriginalsInLibrary:]
  -[PUStorageManagementUtility isCPLEnabled]
  -[PUStorageManagementUtility isCPLInExitMode]
  -[PUStorageManagementUtility shouldHideCPL]
  -[PUStorageManagementUtility sizeForRecentlyDeletedItems]
  -[PUStorageManagementUtility isDeletableItemsInTrash]
  -[PUStorageManagementUtility sizeForTrashedSpatialOvercaptureResources]
  -[PUStorageManagementUtility isOptimizedModeOn]
  -[PUStorageManagementUtility enableOptimizedMode:]
  -[PUStorageManagementUtility enableCPLWithCompletionBlock:]
  -[PUStorageManagementUtility expungeRecentlyDeletedItemsWithCompletionBlock:]
  -[PUStorageManagementUtility expungeTrashedSpatialOverCaptureResourcesWithCompletionBlock:]
  -[PUStorageManagementUtility totalReclaimableSizeFromPurgingVideoClips]
  -[PUStorageManagementUtility significantItems]


PUSwipeSelectionManager : NSObject
 @property  long long _selectionMode
 @property  NSIndexPath *_startingIndexPath
 @property  PUPhotoSelectionManager *_restorePhotoSelectionManager
 @property  id _pausingChangesToken
 @property  <PUSwipeSelectionManagerDelegate> *delegate
 @property  <PUSwipeSelectionManagerDataSource> *datasource
 @property  PXUIAutoScroller *selectionAutoScroller
 @property  {CGPoint=dd} screenTouchLocation

  // instance methods
  -[PUSwipeSelectionManager endSelection]
  -[PUSwipeSelectionManager _selectionMode]
  -[PUSwipeSelectionManager setDatasource:]
  -[PUSwipeSelectionManager .cxx_destruct]
  -[PUSwipeSelectionManager _setPausingChangesToken:]
  -[PUSwipeSelectionManager setDelegate:]
  -[PUSwipeSelectionManager init]
  -[PUSwipeSelectionManager _setStartingIndexPath:]
  -[PUSwipeSelectionManager delegate]
  -[PUSwipeSelectionManager _startingIndexPath]
  -[PUSwipeSelectionManager dealloc]
  -[PUSwipeSelectionManager datasource]
  -[PUSwipeSelectionManager _pausingChangesToken]
  -[PUSwipeSelectionManager initWithSelectionMode:photoSelectionManager:]
  -[PUSwipeSelectionManager beginSelectionFromIndexPath:]
  -[PUSwipeSelectionManager setSelectionAutoScroller:]
  -[PUSwipeSelectionManager setScreenTouchLocation:]
  -[PUSwipeSelectionManager updateSelectionWithCurrentIndexPath:leftClosestIndexPath:aboveClosestIndexPath:]
  -[PUSwipeSelectionManager selectionAutoScroller]
  -[PUSwipeSelectionManager _restorePhotoSelectionManager]
  -[PUSwipeSelectionManager _indexesPathsRangeForIndexPath:]
  -[PUSwipeSelectionManager _selectionModeForRestoringStateOfIndexPath:]
  -[PUSwipeSelectionManager screenTouchLocation]
  -[PUSwipeSelectionManager _setSelectionMode:]
  -[PUSwipeSelectionManager _setRestorePhotoSelectionManager:]


PUCurationTragicFailureInHighlightsDebugViewController : UITableViewController
  // instance methods
  -[PUCurationTragicFailureInHighlightsDebugViewController numberOfSectionsInTableView:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:numberOfRowsInSection:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:heightForRowAtIndexPath:]
  -[PUCurationTragicFailureInHighlightsDebugViewController .cxx_destruct]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:didSelectRowAtIndexPath:]
  -[PUCurationTragicFailureInHighlightsDebugViewController viewDidLoad]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:cellForRowAtIndexPath:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[PUCurationTragicFailureInHighlightsDebugViewController viewDidAppear:]
  -[PUCurationTragicFailureInHighlightsDebugViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUCurationTragicFailureInHighlightsDebugViewController viewWillDisappear:]
  -[PUCurationTragicFailureInHighlightsDebugViewController dealloc]
  -[PUCurationTragicFailureInHighlightsDebugViewController goToPreviousHighlight:]
  -[PUCurationTragicFailureInHighlightsDebugViewController goToNextHighlight:]
  -[PUCurationTragicFailureInHighlightsDebugViewController _fetchUtilityAssetInformation]


PUCompositeVideoSettings : PXSettings
 @property  BOOL useFrameBlending
 @property  long long cropMode
 @property  double stitchingFadeDuration
 @property  double nonStitchingFadeDuration

  // class methods
  +[PUCompositeVideoSettings sharedInstance]
  +[PUCompositeVideoSettings settingsControllerModule]

  // instance methods
  -[PUCompositeVideoSettings nonStitchingFadeDuration]
  -[PUCompositeVideoSettings parentSettings]
  -[PUCompositeVideoSettings setNonStitchingFadeDuration:]
  -[PUCompositeVideoSettings setDefaultValues]
  -[PUCompositeVideoSettings stitchingFadeDuration]
  -[PUCompositeVideoSettings setStitchingFadeDuration:]
  -[PUCompositeVideoSettings setCropMode:]
  -[PUCompositeVideoSettings setUseFrameBlending:]
  -[PUCompositeVideoSettings cropMode]
  -[PUCompositeVideoSettings useFrameBlending]


PUSwipedDownTileTracker : PUInteractiveTileTracker
 @property  PHSwipeDownTracker *_swipeDownTracker
 @property  PUTileLayoutInfo *_trackedTileLayoutInfo
 @property  UIPanGestureRecognizer *panGestureRecognizer
 @property  PUTileController *designatedTileController

  // instance methods
  -[PUSwipedDownTileTracker .cxx_destruct]
  -[PUSwipedDownTileTracker panGestureRecognizer]
  -[PUSwipedDownTileTracker _swipeDownTracker]
  -[PUSwipedDownTileTracker designatedTileController]
  -[PUSwipedDownTileTracker initWithPanGestureRecognizer:tilingView:]
  -[PUSwipedDownTileTracker setDesignatedTileController:]
  -[PUSwipedDownTileTracker initWithTilingView:]
  -[PUSwipedDownTileTracker updateGestureRecognizerTracking]
  -[PUSwipedDownTileTracker updateTileControllerTracking]
  -[PUSwipedDownTileTracker completeTracking]
  -[PUSwipedDownTileTracker tileControllerToTrack]
  -[PUSwipedDownTileTracker startTileControllerTracking]
  -[PUSwipedDownTileTracker _setSwipeDownTracker:]
  -[PUSwipedDownTileTracker _setTrackedTileLayoutInfo:]
  -[PUSwipedDownTileTracker _trackedTileLayoutInfo]


PUPXAssetReference : PUAssetReference
 @property  PXAssetReference *underlyingAssetReference

  // instance methods
  -[PUPXAssetReference .cxx_destruct]
  -[PUPXAssetReference initWithAsset:assetCollection:indexPath:dataSourceIdentifier:]
  -[PUPXAssetReference pxAssetReference]
  -[PUPXAssetReference initWithPXAssetReference:dataSourceIdentifier:]
  -[PUPXAssetReference underlyingAssetReference]


PUAssetSharingHelper : NSObject <PXAssetsSharingHelper>
 @property  <PXAssetsSharingHelperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUAssetSharingHelper prepareAssets:forActivityType:completion:]
  +[PUAssetSharingHelper copyAssets:completionHandler:]
  +[PUAssetSharingHelper _prepareAssets:forActivityType:window:completion:]

  // instance methods
  -[PUAssetSharingHelper .cxx_destruct]
  -[PUAssetSharingHelper setDelegate:]
  -[PUAssetSharingHelper _presentViewController:]
  -[PUAssetSharingHelper delegate]
  -[PUAssetSharingHelper ensureLocalAssetsForCloudPhotoSharing:completion:]
  -[PUAssetSharingHelper ensureLocalAssetsForSyndicationSave:completion:]
  -[PUAssetSharingHelper ensureLocalAssetsForRendering:completion:]
  -[PUAssetSharingHelper copyAssets:]
  -[PUAssetSharingHelper ensureRenderingForAssetsWithDeferredProcessingInCollection:completion:]


PUTabbedLibrarySettings : PXSettings
 @property  long long sidebarEnabledMode
 @property  BOOL enableMemoriesTab
 @property  BOOL enableSharedTab
 @property  BOOL enableAlbumsTab
 @property  BOOL enableCuratedLibraryTab
 @property  BOOL enableForYouTab
 @property  BOOL enableSearchTab
 @property  BOOL enableConsolidatedAlbumsTab
 @property  BOOL enableBlankTab
 @property  BOOL sidebarEnabled
 @property  BOOL sidebarAnimateSelectionUpdates
 @property  BOOL sidebarAllPhotosSuspendsNavigationHighlights
 @property  BOOL sidebarScrollSelectedItemToCenter
 @property  BOOL sidebarOnlyScrollOffscreenItemOnScreen
 @property  BOOL sidebarAnimateDataSourceUpdates
 @property  BOOL sidebarUseMacStructure
 @property  BOOL sidebarEditAutoExpandToEditableItem
 @property  BOOL sidebarHideNavBackButtonForSelectedItem
 @property  long long sidebarLaunchLoadMode
 @property  BOOL sidebarLaunchAnimateLoad
 @property  BOOL sidebarSymbolImagesOnly
 @property  BOOL sidebarSimulateNonIncrementalChanges
 @property  BOOL sidebarPauseChangeProcessingWhenHidden
 @property  long long sidebarPausedChangeDetailsBufferLength

  // class methods
  +[PUTabbedLibrarySettings sharedInstance]
  +[PUTabbedLibrarySettings settingsControllerModule]
  +[PUTabbedLibrarySettings keyPathsForValuesAffectingSidebarEnabled]
  +[PUTabbedLibrarySettings transientProperties]

  // instance methods
  -[PUTabbedLibrarySettings allTabs]
  -[PUTabbedLibrarySettings sidebarHideNavBackButtonForSelectedItem]
  -[PUTabbedLibrarySettings parentSettings]
  -[PUTabbedLibrarySettings setEnableCuratedLibraryTab:]
  -[PUTabbedLibrarySettings setEnableSearchTab:]
  -[PUTabbedLibrarySettings setSidebarPauseChangeProcessingWhenHidden:]
  -[PUTabbedLibrarySettings setEnableAlbumsTab:]
  -[PUTabbedLibrarySettings sidebarUseMacStructure]
  -[PUTabbedLibrarySettings enableSharedTab]
  -[PUTabbedLibrarySettings setDefaultValues]
  -[PUTabbedLibrarySettings enableForYouTab]
  -[PUTabbedLibrarySettings enableMemoriesTab]
  -[PUTabbedLibrarySettings setEnableBlankTab:]
  -[PUTabbedLibrarySettings setSidebarPausedChangeDetailsBufferLength:]
  -[PUTabbedLibrarySettings setSidebarLaunchLoadMode:]
  -[PUTabbedLibrarySettings setSidebarAnimateSelectionUpdates:]
  -[PUTabbedLibrarySettings sidebarSymbolImagesOnly]
  -[PUTabbedLibrarySettings setSidebarAllPhotosSuspendsNavigationHighlights:]
  -[PUTabbedLibrarySettings setSidebarHideNavBackButtonForSelectedItem:]
  -[PUTabbedLibrarySettings sidebarLaunchLoadMode]
  -[PUTabbedLibrarySettings enableBlankTab]
  -[PUTabbedLibrarySettings setSidebarAnimateDataSourceUpdates:]
  -[PUTabbedLibrarySettings isSidebarEnabled]
  -[PUTabbedLibrarySettings sidebarAllPhotosSuspendsNavigationHighlights]
  -[PUTabbedLibrarySettings enableSearchTab]
  -[PUTabbedLibrarySettings setSidebarLaunchAnimateLoad:]
  -[PUTabbedLibrarySettings setSidebarScrollSelectedItemToCenter:]
  -[PUTabbedLibrarySettings setSidebarEditAutoExpandToEditableItem:]
  -[PUTabbedLibrarySettings sidebarSimulateNonIncrementalChanges]
  -[PUTabbedLibrarySettings sidebarEditAutoExpandToEditableItem]
  -[PUTabbedLibrarySettings setEnableConsolidatedAlbumsTab:]
  -[PUTabbedLibrarySettings setSidebarSimulateNonIncrementalChanges:]
  -[PUTabbedLibrarySettings sidebarPausedChangeDetailsBufferLength]
  -[PUTabbedLibrarySettings sidebarOnlyScrollOffscreenItemOnScreen]
  -[PUTabbedLibrarySettings setSidebarUseMacStructure:]
  -[PUTabbedLibrarySettings setSidebarEnabledMode:]
  -[PUTabbedLibrarySettings sidebarPauseChangeProcessingWhenHidden]
  -[PUTabbedLibrarySettings enableCuratedLibraryTab]
  -[PUTabbedLibrarySettings setEnableForYouTab:]
  -[PUTabbedLibrarySettings sidebarLaunchAnimateLoad]
  -[PUTabbedLibrarySettings setEnableMemoriesTab:]
  -[PUTabbedLibrarySettings sidebarAnimateDataSourceUpdates]
  -[PUTabbedLibrarySettings countOfEnabledTabs]
  -[PUTabbedLibrarySettings enableConsolidatedAlbumsTab]
  -[PUTabbedLibrarySettings setEnableSharedTab:]
  -[PUTabbedLibrarySettings sidebarEnabledMode]
  -[PUTabbedLibrarySettings sidebarAnimateSelectionUpdates]
  -[PUTabbedLibrarySettings enableAlbumsTab]
  -[PUTabbedLibrarySettings setSidebarSymbolImagesOnly:]
  -[PUTabbedLibrarySettings setSidebarOnlyScrollOffscreenItemOnScreen:]
  -[PUTabbedLibrarySettings sidebarScrollSelectedItemToCenter]


PUTabbedLibraryViewController : UITabBarController <PXSettingsKeyObserver, PXChangeObserver, PXNavigationActionReceiver, PXTabBarItemKeyCommandDelegate, PLAssetContainerListChangeObserver, PLAssetContainerObserver, PLInvitationRecordsObserver, PXForcedDismissableViewController, PXRootLibraryNavigationController, UINavigationControllerDelegate>
 @property  BOOL shouldNavigateToAllPhotosAlbum
 @property  PXForYouBadgeManager *badgeManager
 @property  NSObject<OS_os_log> *tabbedLibraryLog
 @property  PXProgrammaticNavigationRequest *pendingNavigationRequest
 @property  BOOL shouldSuppressAnimationsDuringProgrammaticNavigation
 @property  PUSessionInfo *sessionInfo
 @property  PUImportViewController *importViewController
 @property  BOOL px_hidesTabBarForRegularHorizontalSizeClass
 @property  int selectedContentMode
 @property  NSArray *excludedContentModes
 @property  UINavigationController *selectedNavigationController
 @property  NSArray *rootViewControllers
 @property  <PXProgrammaticNavigationUpdateTarget> *navigationUpdateTarget
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUTabbedLibraryViewController _shouldForwardViewWillTransitionToSize]

  // instance methods
  -[PUTabbedLibraryViewController setBadgeManager:]
  -[PUTabbedLibraryViewController routingOptionsForDestination:]
  -[PUTabbedLibraryViewController setSessionInfo:]
  -[PUTabbedLibraryViewController initWithSpec:]
  -[PUTabbedLibraryViewController px_gridPresentation]
  -[PUTabbedLibraryViewController navigateToDestination:options:completionHandler:]
  -[PUTabbedLibraryViewController sessionInfo]
  -[PUTabbedLibraryViewController _updateTabBarVisibilityForHorizontalSizeClass:]
  -[PUTabbedLibraryViewController _existingNavigationControllerForContentMode:]
  -[PUTabbedLibraryViewController shouldAutorotateToInterfaceOrientation:]
  -[PUTabbedLibraryViewController navigateToCloudFeedAsset:completion:]
  -[PUTabbedLibraryViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[PUTabbedLibraryViewController newRootViewControllerForContentMode:]
  -[PUTabbedLibraryViewController navigateToContentMode:animated:completion:]
  -[PUTabbedLibraryViewController shouldNavigateToAllPhotosAlbum]
  -[PUTabbedLibraryViewController _navigateToSuggestionFromCuratedLibrary:]
  -[PUTabbedLibraryViewController _navigationControllerShouldCrossFadeBottomBars:]
  -[PUTabbedLibraryViewController _newNavigationControllerWithRootController:]
  -[PUTabbedLibraryViewController initWithCoder:]
  -[PUTabbedLibraryViewController invitationRecordsDidChange:]
  -[PUTabbedLibraryViewController px_setHidesTabBarForRegularHorizontalSizeClass:]
  -[PUTabbedLibraryViewController contentModeForTabIdentifier:]
  -[PUTabbedLibraryViewController contentModeIsAvailableForNavigation:]
  -[PUTabbedLibraryViewController navigationController:didShowViewController:animated:]
  -[PUTabbedLibraryViewController _navigateToForYou]
  -[PUTabbedLibraryViewController shouldSuppressAnimationsDuringProgrammaticNavigation]
  -[PUTabbedLibraryViewController setNavigationUpdateTarget:]
  -[PUTabbedLibraryViewController assetContainerDidChange:]
  -[PUTabbedLibraryViewController _nextCloudFeedNavigatingObject]
  -[PUTabbedLibraryViewController tabbedLibraryLog]
  -[PUTabbedLibraryViewController .cxx_destruct]
  -[PUTabbedLibraryViewController px_frameForTabItem:inCoordinateSpace:]
  -[PUTabbedLibraryViewController navigateToPeopleAlbumAnimated:revealPersonWithLocalIdentifier:completion:]
  -[PUTabbedLibraryViewController cloudFeedInvitationForAlbumIsAvailableForNavigation:]
  -[PUTabbedLibraryViewController excludedContentModes]
  -[PUTabbedLibraryViewController albumIsAvailableForNavigation:]
  -[PUTabbedLibraryViewController viewDidLoad]
  -[PUTabbedLibraryViewController ppt_navigationControllerForContentMode:]
  -[PUTabbedLibraryViewController navigateToInitialLocationInCurrentNavigationController]
  -[PUTabbedLibraryViewController navigateToSuggestedCMMWithIdentifier:animated:]
  -[PUTabbedLibraryViewController commentIsAvailableForNavigation:inAsset:]
  -[PUTabbedLibraryViewController assetIsAvailableForNavigationInMoments:]
  -[PUTabbedLibraryViewController _navigationControllerShouldUseBuiltinInteractionController:]
  -[PUTabbedLibraryViewController _navigateToMomentShareWithURL:animated:]
  -[PUTabbedLibraryViewController navigateToSearch]
  -[PUTabbedLibraryViewController _navigateToContentMode:animated:dismissAnyPresentedViewController:completion:]
  -[PUTabbedLibraryViewController updateDisplayedTabsAnimated:]
  -[PUTabbedLibraryViewController cloudFeedCommentIsAvailableForNavigation:]
  -[PUTabbedLibraryViewController _presentRetryAlertControllerWithTitle:error:retryHandler:]
  -[PUTabbedLibraryViewController setShouldSuppressAnimationsDuringProgrammaticNavigation:]
  -[PUTabbedLibraryViewController navigateToPhotosContentBottomAnimated:]
  -[PUTabbedLibraryViewController cloudFeedIsAvailableForNavigation]
  -[PUTabbedLibraryViewController initWithNibName:bundle:]
  -[PUTabbedLibraryViewController navigationController:animationControllerForOperation:fromViewController:toViewController:]
  -[PUTabbedLibraryViewController navigationController:interactionControllerForAnimationController:]
  -[PUTabbedLibraryViewController px_switchToTabAndNavigateToDestination:options:completionHandler:]
  -[PUTabbedLibraryViewController px_hidesTabBarForRegularHorizontalSizeClass]
  -[PUTabbedLibraryViewController navigateToAsset:inAlbum:animated:]
  -[PUTabbedLibraryViewController navigateToFeaturedPhotoWithSuggestionIdentifier:animated:]
  -[PUTabbedLibraryViewController _sceneWillEnterForeground:]
  -[PUTabbedLibraryViewController selectedNavigationController]
  -[PUTabbedLibraryViewController nextExistingParticipantOnRouteToDestination:]
  -[PUTabbedLibraryViewController _updateRootViewControllersInNavigationControllers:tabBarHidden:]
  -[PUTabbedLibraryViewController navigateToAlbum:animated:completion:]
  -[PUTabbedLibraryViewController _availableAlbumToNavigateToAsset:preferredAlbum:]
  -[PUTabbedLibraryViewController setViewControllers:animated:]
  -[PUTabbedLibraryViewController pu_shouldSelectViewController:]
  -[PUTabbedLibraryViewController px_navigationDestinationWillChange:]
  -[PUTabbedLibraryViewController _navigateToSearchWithCompletion:]
  -[PUTabbedLibraryViewController importViewController]
  -[PUTabbedLibraryViewController tabIdentifierForContentMode:]
  -[PUTabbedLibraryViewController _albumListForContentMode:library:]
  -[PUTabbedLibraryViewController localizedDiscoverabilityTitleForTabBarItem:atIndex:]
  -[PUTabbedLibraryViewController navigateToAsset:openOneUp:animated:]
  -[PUTabbedLibraryViewController _snapBackRootViewControllerInNavigationController:]
  -[PUTabbedLibraryViewController setSelectedContentMode:]
  -[PUTabbedLibraryViewController navigateToRevealTheMostRecentMemoryAnimated:]
  -[PUTabbedLibraryViewController setImportViewController:]
  -[PUTabbedLibraryViewController navigationUpdateTarget]
  -[PUTabbedLibraryViewController setShouldNavigateToAllPhotosAlbum:]
  -[PUTabbedLibraryViewController navigateToComment:forAsset:animated:]
  -[PUTabbedLibraryViewController _navigateToRootOfCurrentTabAnimated:dismissAnyPresentedViewController:]
  -[PUTabbedLibraryViewController ppt_runTabSwitchingTestWithName:options:delegate:completionHandler:]
  -[PUTabbedLibraryViewController _contentModeForNavigationController:]
  -[PUTabbedLibraryViewController setImportViewController:animated:]
  -[PUTabbedLibraryViewController _navigateToAlbum:andPerformAction:initiallyHidden:animated:completion:]
  -[PUTabbedLibraryViewController navigateToSearchWithHashtag:]
  -[PUTabbedLibraryViewController navigateToCloudFeedComment:completion:]
  -[PUTabbedLibraryViewController viewWillAppear:]
  -[PUTabbedLibraryViewController navigateToInitialLocationInNavigationController:]
  -[PUTabbedLibraryViewController _navigateToContentMode:defaultLocationIfNeverDisplayed:animated:]
  -[PUTabbedLibraryViewController selectedContentMode]
  -[PUTabbedLibraryViewController navigateToSearchWithSearchText:searchCategory:]
  -[PUTabbedLibraryViewController navigateToRevealAsset:inAlbum:animated:]
  -[PUTabbedLibraryViewController pendingNavigationRequest]
  -[PUTabbedLibraryViewController badgeManager]
  -[PUTabbedLibraryViewController settings:changedValueForKey:]
  -[PUTabbedLibraryViewController navigateToRevealCloudFeedAsset:completion:]
  -[PUTabbedLibraryViewController navigateToRevealCloudFeedComment:completion:]
  -[PUTabbedLibraryViewController _tabRootViewControllerInNavigationController:]
  -[PUTabbedLibraryViewController _navigationControllerLayoutTransitioningClass:]
  -[PUTabbedLibraryViewController cloudFeedAssetIsAvailableForNavigation:]
  -[PUTabbedLibraryViewController _contentModeForAlbum:]
  -[PUTabbedLibraryViewController navigateToPlacesAlbumAnimated:]
  -[PUTabbedLibraryViewController _navigateToDefaultLocationInNavigationController:animated:]
  -[PUTabbedLibraryViewController shouldExposeShortcutForTabBarItem:atIndex:]
  -[PUTabbedLibraryViewController dealloc]
  -[PUTabbedLibraryViewController _navigateToRootOfCurrentTabAnimated:]
  -[PUTabbedLibraryViewController rootViewControllers]
  -[PUTabbedLibraryViewController _handleFetchedMomentShare:atURL:error:timedOut:]
  -[PUTabbedLibraryViewController px_navigateToMemoryWithLocalIdentifier:dismissAnyPresentedViewController:]
  -[PUTabbedLibraryViewController _didFinishPostingNotifications:]
  -[PUTabbedLibraryViewController _enumerateViewControllersWithBlock:]
  -[PUTabbedLibraryViewController navigateToRevealAlbum:initiallyHidden:animated:]
  -[PUTabbedLibraryViewController setExcludedContentModes:]
  -[PUTabbedLibraryViewController _updateSharedAlbumBadges]
  -[PUTabbedLibraryViewController _navigateToMemoriesDismissingAnyPresentedViewController:]
  -[PUTabbedLibraryViewController _navigationControllerForContentMode:]
  -[PUTabbedLibraryViewController supportedInterfaceOrientations]
  -[PUTabbedLibraryViewController setSelectedViewController:]
  -[PUTabbedLibraryViewController assetIsAvailableForNavigationInMoments:refetchSectionsIfNeeded:]
  -[PUTabbedLibraryViewController observable:didChange:context:]
  -[PUTabbedLibraryViewController navigateToMemoryWithLocalIdentifier:animated:]
  -[PUTabbedLibraryViewController navigateToCloudFeedWithCompletion:]
  -[PUTabbedLibraryViewController navigateToInvitationCMMWithIdentifier:animated:]
  -[PUTabbedLibraryViewController navigateToCloudKitShareWithURL:animated:]
  -[PUTabbedLibraryViewController prepareForDismissingForced:]
  -[PUTabbedLibraryViewController assetIsAvailableForNavigation:inAlbum:]
  -[PUTabbedLibraryViewController navigationController:willShowViewController:animated:]
  -[PUTabbedLibraryViewController _isNavigationControllerBadged:]
  -[PUTabbedLibraryViewController _navigateToAsset:andPerformAction:inAlbum:animated:]
  -[PUTabbedLibraryViewController setPendingNavigationRequest:]
  -[PUTabbedLibraryViewController navigateToRevealCloudFeedInvitationForAlbum:completion:]
  -[PUTabbedLibraryViewController assetContainerListDidChange:]
  -[PUTabbedLibraryViewController navigateToOneYearAgoSearch]


PUTabbedLibraryViewControllerPadSpec : PUTabbedLibraryViewControllerSpec
  // instance methods
  -[PUTabbedLibraryViewControllerPadSpec zoomableGridViewControllerSpec]
  -[PUTabbedLibraryViewControllerPadSpec createSharedAlbumListViewController]
  -[PUTabbedLibraryViewControllerPadSpec albumListViewControllerSpec]
  -[PUTabbedLibraryViewControllerPadSpec createAlbumListViewController]
  -[PUTabbedLibraryViewControllerPadSpec feedViewControllerSpec]
  -[PUTabbedLibraryViewControllerPadSpec importViewControllerSpec]


PUTabbedLibraryViewControllerPhoneSpec : PUTabbedLibraryViewControllerSpec
  // instance methods
  -[PUTabbedLibraryViewControllerPhoneSpec zoomableGridViewControllerSpec]
  -[PUTabbedLibraryViewControllerPhoneSpec createSharedAlbumListViewController]
  -[PUTabbedLibraryViewControllerPhoneSpec albumListViewControllerSpec]
  -[PUTabbedLibraryViewControllerPhoneSpec createAlbumListViewController]
  -[PUTabbedLibraryViewControllerPhoneSpec feedViewControllerSpec]


PUCurationScoreCheckAssetBrowserDebugViewController : PUPhotosAlbumViewController <UIPickerViewDataSource, UIPickerViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCurationScoreCheckAssetBrowserDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController .cxx_destruct]
  -[PUCurationScoreCheckAssetBrowserDebugViewController viewDidLoad]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _update]
  -[PUCurationScoreCheckAssetBrowserDebugViewController pickerView:viewForRow:forComponent:reusingView:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _presentTapToRadar]
  -[PUCurationScoreCheckAssetBrowserDebugViewController numberOfComponentsInPickerView:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController pickerView:numberOfRowsInComponent:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController pickerView:rowHeightForComponent:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController pickerView:didSelectRow:inComponent:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _editSettings:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _doneEditingSettings:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _setMinimum:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _setMaximum:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _setShowsVideos:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _fileRadarWithIncorrectAssets:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _writeDiagnosticsToURL:incorrectAssets:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController _cloneAsset:toDirectory:]
  -[PUCurationScoreCheckAssetBrowserDebugViewController shouldShowToolbar]
  -[PUCurationScoreCheckAssetBrowserDebugViewController newToolbarItems]
  -[PUCurationScoreCheckAssetBrowserDebugViewController scoreNames]
  -[PUCurationScoreCheckAssetBrowserDebugViewController plScoreKeyPathByScoreName]
  -[PUCurationScoreCheckAssetBrowserDebugViewController phScoreKeyPathByScoreName]


PUCurationScoreCheckAssetBrowserDebugPhotosGridCell : PUPhotosGridCell
 @property  NSString *score

  // instance methods
  -[PUCurationScoreCheckAssetBrowserDebugPhotosGridCell setScore:]
  -[PUCurationScoreCheckAssetBrowserDebugPhotosGridCell .cxx_destruct]
  -[PUCurationScoreCheckAssetBrowserDebugPhotosGridCell layoutSubviews]
  -[PUCurationScoreCheckAssetBrowserDebugPhotosGridCell score]


PUTabbedLibraryViewControllerSpec : PULegacyViewControllerSpec
  // class methods
  +[PUTabbedLibraryViewControllerSpec padSpec]
  +[PUTabbedLibraryViewControllerSpec phoneSpec]

  // instance methods
  -[PUTabbedLibraryViewControllerSpec zoomableGridViewControllerSpec]
  -[PUTabbedLibraryViewControllerSpec createSharedAlbumListViewController]
  -[PUTabbedLibraryViewControllerSpec albumListViewControllerSpec]
  -[PUTabbedLibraryViewControllerSpec createAlbumListViewController]
  -[PUTabbedLibraryViewControllerSpec feedViewControllerSpec]


PULibraryTabInfo : NSObject
 @property  NSString *labelKey
 @property  NSString *iconName
 @property  int contentMode

  // class methods
  +[PULibraryTabInfo tabInfoWithLabelKey:iconName:contentMode:]

  // instance methods
  -[PULibraryTabInfo .cxx_destruct]
  -[PULibraryTabInfo initWithLabelKey:iconName:contentMode:]
  -[PULibraryTabInfo contentMode]
  -[PULibraryTabInfo labelKey]
  -[PULibraryTabInfo iconName]


PUTabbedLibraryViewModel : NSObject
 @property  PUTabbedLibrarySettings *settings
 @property  NSArray *tabInfos

  // class methods
  +[PUTabbedLibraryViewModel viewModelWithDefaultParameters]

  // instance methods
  -[PUTabbedLibraryViewModel _shouldShowCuratedLibraryTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel .cxx_destruct]
  -[PUTabbedLibraryViewModel tabInfos]
  -[PUTabbedLibraryViewModel _shouldShowSearchTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel initWithSettings:]
  -[PUTabbedLibraryViewModel _shouldShowMemoriesTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel _shouldShowAllPhotosTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel _ppt_shouldShowBlankTab]
  -[PUTabbedLibraryViewModel _ppt_shouldShowNilTab]
  -[PUTabbedLibraryViewModel _shouldShowSharedTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel _shouldShowForYouTabForTabbedLibraryViewController:]
  -[PUTabbedLibraryViewModel tabbedLibraryViewController:tabBarItemForContentMode:]
  -[PUTabbedLibraryViewModel tabInfoForContentMode:]
  -[PUTabbedLibraryViewModel settings]
  -[PUTabbedLibraryViewModel tabbedLibraryViewController:shouldShowTabForContentMode:]


PUCurationSettings : PXSettings
  // class methods
  +[PUCurationSettings sharedInstance]
  +[PUCurationSettings settingsControllerModule]

  // instance methods
  -[PUCurationSettings parentSettings]
  -[PUCurationSettings setDefaultValues]


PUPhotoEditAdjustmentControlContent : NSObject
 @property  UIImage *image
 @property  UIColor *color

  // instance methods
  -[PUPhotoEditAdjustmentControlContent image]
  -[PUPhotoEditAdjustmentControlContent color]
  -[PUPhotoEditAdjustmentControlContent .cxx_destruct]
  -[PUPhotoEditAdjustmentControlContent setColor:]
  -[PUPhotoEditAdjustmentControlContent setImage:]


PUPhotoEditAdjustmentControl : UIControl
 @property  UILabel *valueLabel
 @property  UIImageView *imageView
 @property  PUPhotoEditCircularIndicatorView *circularIndicatorView
 @property  NSMapTable *stateToContentMap
 @property  UIColor *defaultColor
 @property  UIColor *alternateColor
 @property  BOOL valueChanged
 @property  NSNumberFormatter *formatter
 @property  double value
 @property  double defaultValue
 @property  double identityValue
 @property  double minValue
 @property  double maxValue
 @property  BOOL shouldShowValueLabel
 @property  BOOL displayMappedValue
 @property  BOOL shouldShowCircularRing
 @property  BOOL shouldScaleDownImage

  // instance methods
  -[PUPhotoEditAdjustmentControl defaultValue]
  -[PUPhotoEditAdjustmentControl setImage:forState:]
  -[PUPhotoEditAdjustmentControl formatter]
  -[PUPhotoEditAdjustmentControl _setup]
  -[PUPhotoEditAdjustmentControl imageView]
  -[PUPhotoEditAdjustmentControl .cxx_destruct]
  -[PUPhotoEditAdjustmentControl _updateImageView]
  -[PUPhotoEditAdjustmentControl setMaxValue:]
  -[PUPhotoEditAdjustmentControl setMinValue:]
  -[PUPhotoEditAdjustmentControl layoutSubviews]
  -[PUPhotoEditAdjustmentControl _setupImageView]
  -[PUPhotoEditAdjustmentControl minValue]
  -[PUPhotoEditAdjustmentControl setSelected:]
  -[PUPhotoEditAdjustmentControl maxValue]
  -[PUPhotoEditAdjustmentControl setValueLabel:]
  -[PUPhotoEditAdjustmentControl setDefaultValue:]
  -[PUPhotoEditAdjustmentControl setValue:]
  -[PUPhotoEditAdjustmentControl setFormatter:]
  -[PUPhotoEditAdjustmentControl valueLabel]
  -[PUPhotoEditAdjustmentControl _currentImage]
  -[PUPhotoEditAdjustmentControl initWithFrame:]
  -[PUPhotoEditAdjustmentControl value]
  -[PUPhotoEditAdjustmentControl _updateSubviews]
  -[PUPhotoEditAdjustmentControl imageForState:]
  -[PUPhotoEditAdjustmentControl identityValue]
  -[PUPhotoEditAdjustmentControl resetToDefaults]
  -[PUPhotoEditAdjustmentControl setDisplayMappedValue:]
  -[PUPhotoEditAdjustmentControl setIdentityValue:]
  -[PUPhotoEditAdjustmentControl setImageView:]
  -[PUPhotoEditAdjustmentControl setEnabled:]
  -[PUPhotoEditAdjustmentControl _setContent:forState:]
  -[PUPhotoEditAdjustmentControl _contentForState:]
  -[PUPhotoEditAdjustmentControl _layoutImageView]
  -[PUPhotoEditAdjustmentControl setShouldShowValueLabel:]
  -[PUPhotoEditAdjustmentControl displayMappedValue]
  -[PUPhotoEditAdjustmentControl setShouldShowCircularRing:]
  -[PUPhotoEditAdjustmentControl setShouldScaleDownImage:]
  -[PUPhotoEditAdjustmentControl circularIndicatorView]
  -[PUPhotoEditAdjustmentControl _resetAllValues]
  -[PUPhotoEditAdjustmentControl _updateRingVisibility]
  -[PUPhotoEditAdjustmentControl stateToContentMap]
  -[PUPhotoEditAdjustmentControl _setContentPropertyKey:withValue:forState:]
  -[PUPhotoEditAdjustmentControl _updateSubviewColors]
  -[PUPhotoEditAdjustmentControl _updateSubviewVisibility]
  -[PUPhotoEditAdjustmentControl _updateFormatter]
  -[PUPhotoEditAdjustmentControl shouldShowCircularRing]
  -[PUPhotoEditAdjustmentControl shouldShowValueLabel]
  -[PUPhotoEditAdjustmentControl _updateSubviewValues]
  -[PUPhotoEditAdjustmentControl setColor:forState:]
  -[PUPhotoEditAdjustmentControl colorForState:]
  -[PUPhotoEditAdjustmentControl setDefaultColor:]
  -[PUPhotoEditAdjustmentControl defaultColor]
  -[PUPhotoEditAdjustmentControl alternateColor]
  -[PUPhotoEditAdjustmentControl setAlternateColor:]
  -[PUPhotoEditAdjustmentControl shouldScaleDownImage]
  -[PUPhotoEditAdjustmentControl setCircularIndicatorView:]
  -[PUPhotoEditAdjustmentControl setStateToContentMap:]
  -[PUPhotoEditAdjustmentControl valueChanged]
  -[PUPhotoEditAdjustmentControl setValueChanged:]


PUTileAnimator : NSObject
 @property  <PUTilingViewControllerTransition> *currentTransition

  // instance methods
  -[PUTileAnimator currentTransition]
  -[PUTileAnimator .cxx_destruct]
  -[PUTileAnimator freezeTileController:]
  -[PUTileAnimator animateTileController:toLayoutInfo:withOptions:completionHandler:]
  -[PUTileAnimator prepareTileControllerForAnimation:withInitialLayoutInfo:]
  -[PUTileAnimator updateAnimationForTileController:withRepositionedTargetLayoutInfo:]
  -[PUTileAnimator transitionWillBeginAnimation:]
  -[PUTileAnimator transitionDidBeginAnimation:]
  -[PUTileAnimator transition:didComplete:]


PUTileAnimationOptions : NSObject
 @property  BOOL synchronizedWithTransition
 @property  long long kind
 @property  double delay
 @property  double duration
 @property  double springDampingRatio
 @property  double springMass
 @property  double springStiffness
 @property  long long springNumberOfOscillations
 @property  {PUDisplayVelocity=dddd} initialVelocity
 @property  @? customViewAnimatorBlock
 @property  NSObject<OS_dispatch_group> *completionGroup
 @property  BOOL shouldFadeOutSnapshotAfterCompletionGroup
 @property  unsigned int highFrameRateReason

  // instance methods
  -[PUTileAnimationOptions highFrameRateReason]
  -[PUTileAnimationOptions initialVelocity]
  -[PUTileAnimationOptions delay]
  -[PUTileAnimationOptions setInitialVelocity:]
  -[PUTileAnimationOptions completionGroup]
  -[PUTileAnimationOptions setHighFrameRateReason:]
  -[PUTileAnimationOptions setDelay:]
  -[PUTileAnimationOptions .cxx_destruct]
  -[PUTileAnimationOptions setDuration:]
  -[PUTileAnimationOptions setKind:]
  -[PUTileAnimationOptions springMass]
  -[PUTileAnimationOptions kind]
  -[PUTileAnimationOptions springStiffness]
  -[PUTileAnimationOptions setSpringMass:]
  -[PUTileAnimationOptions setSpringStiffness:]
  -[PUTileAnimationOptions setCompletionGroup:]
  -[PUTileAnimationOptions duration]
  -[PUTileAnimationOptions setShouldFadeOutSnapshotAfterCompletionGroup:]
  -[PUTileAnimationOptions setSynchronizedWithTransition:]
  -[PUTileAnimationOptions setSpringDampingRatio:]
  -[PUTileAnimationOptions setSpringNumberOfOscillations:]
  -[PUTileAnimationOptions setCustomViewAnimatorBlock:]
  -[PUTileAnimationOptions springDampingRatio]
  -[PUTileAnimationOptions springNumberOfOscillations]
  -[PUTileAnimationOptions customViewAnimatorBlock]
  -[PUTileAnimationOptions shouldFadeOutSnapshotAfterCompletionGroup]
  -[PUTileAnimationOptions isSynchronizedWithTransition]


PUTileController : NSObject
 @property  NSMutableArray *reasonsToSuppressAnimatedUpdates
 @property  BOOL active
 @property  BOOL detached
 @property  BOOL reusable
 @property  long long animationCount
 @property  BOOL isAnimating
 @property  PUTilingView *tilingView
 @property  PUTileLayoutInfo *layoutInfo
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  BOOL wantsVisibleRectChanges
 @property  BOOL isPresentationActive
 @property  NSString *reuseIdentifier
 @property  PUTileLayoutInfo *presentationLayoutInfo
 @property  BOOL shouldPreserveCurrentContent
 @property  BOOL shouldAvoidInPlaceSnapshottedFadeOut
 @property  BOOL shouldSuppressAnimatedUpdates

  // instance methods
  -[PUTileController wantsVisibleRectChanges]
  -[PUTileController shouldAvoidInPlaceSnapshottedFadeOut]
  -[PUTileController applyLayoutInfo:]
  -[PUTileController didChangeVisibleRect]
  -[PUTileController becomeReusable]
  -[PUTileController didChangeAnimating]
  -[PUTileController layoutInfo]
  -[PUTileController generateAssetTransitionInfo]
  -[PUTileController freeze]
  -[PUTileController isActive]
  -[PUTileController .cxx_destruct]
  -[PUTileController setPreloadedImage:]
  -[PUTileController isReusable]
  -[PUTileController isAnimating]
  -[PUTileController init]
  -[PUTileController setLayoutInfo:]
  -[PUTileController prepareForReuse]
  -[PUTileController isDetached]
  -[PUTileController removeAllAnimations]
  -[PUTileController didChangeActive]
  -[PUTileController setDetached:]
  -[PUTileController setActive:]
  -[PUTileController initWithReuseIdentifier:]
  -[PUTileController visibleRect]
  -[PUTileController reuseIdentifier]
  -[PUTileController animationCount]
  -[PUTileController addToTilingView:]
  -[PUTileController setAnimationCount:]
  -[PUTileController shouldPreserveCurrentContent]
  -[PUTileController setTilingView:]
  -[PUTileController tilingView]
  -[PUTileController presentationLayoutInfo]
  -[PUTileController setShouldPreserveCurrentContent:]
  -[PUTileController notifyWhenReadyForDisplayWithTimeOut:completionHandler:]
  -[PUTileController adoptAssetTransitionInfo:]
  -[PUTileController startSuppressingAnimatedUpdatesWithReason:]
  -[PUTileController stopSuppressingAnimatedUpdatesWithReason:]
  -[PUTileController setReusable:]
  -[PUTileController reasonsToSuppressAnimatedUpdates]
  -[PUTileController reuseIfApplicable]
  -[PUTileController isPresentationActive]
  -[PUTileController willBeginAnimation]
  -[PUTileController didEndAnimation:]
  -[PUTileController shouldSuppressAnimatedUpdates]
  -[PUTileController setReasonsToSuppressAnimatedUpdates:]


PUTileHider : NSObject
 @property  NSMutableDictionary *_hiddenTileControllersByLayoutInfo
 @property  double _animationDuration
 @property  PUTilingView *tilingView

  // instance methods
  -[PUTileHider .cxx_destruct]
  -[PUTileHider init]
  -[PUTileHider dealloc]
  -[PUTileHider _animationDuration]
  -[PUTileHider tilingView]
  -[PUTileHider initWithTilingView:]
  -[PUTileHider hideTilesAtIndexPath:withKinds:dataSourceIdentifier:animated:]
  -[PUTileHider reattachTiles]
  -[PUTileHider unhideTilesAnimated:]
  -[PUTileHider _hiddenTileControllersByLayoutInfo]


PUTileIdentifier : NSObject <NSCopying>
 @property  NSIndexPath *indexPath
 @property  NSString *tileKind
 @property  NSString *dataSourceIdentifier

  // instance methods
  -[PUTileIdentifier .cxx_destruct]
  -[PUTileIdentifier tileKind]
  -[PUTileIdentifier isEqual:]
  -[PUTileIdentifier indexPath]
  -[PUTileIdentifier dataSourceIdentifier]
  -[PUTileIdentifier initWithIndexPath:tileKind:dataSourceIdentifier:]
  -[PUTileIdentifier copyWithZone:]


PUTileLayoutInfo : NSObject <NSCopying>
 @property  PUTileIdentifier *tileIdentifier
 @property  {CGPoint=dd} center
 @property  {CGSize=dd} size
 @property  double alpha
 @property  double cornerRadius
 @property  NSString *cornerCurve
 @property  unsigned long cornerMask
 @property  {CGAffineTransform=dddddd} transform
 @property  double zPosition
 @property  <PUTilingCoordinateSystem> *coordinateSystem
 @property  {?=dddd} expandedRectInsets
 @property  NSIndexPath *indexPath
 @property  NSString *tileKind
 @property  NSString *dataSourceIdentifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentsRect
 @property  {UIEdgeInsets=dddd} hitTestOutset
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[PUTileLayoutInfo setExpandedRectInsets:]
  -[PUTileLayoutInfo _setTransform:]
  -[PUTileLayoutInfo _setCornerCurve:]
  -[PUTileLayoutInfo zPosition]
  -[PUTileLayoutInfo layoutInfoWithAlpha:]
  -[PUTileLayoutInfo cropInsets]
  -[PUTileLayoutInfo _setCenter:]
  -[PUTileLayoutInfo hitTestOutset]
  -[PUTileLayoutInfo cornerCurve]
  -[PUTileLayoutInfo _setAlpha:]
  -[PUTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUTileLayoutInfo tileIdentifier]
  -[PUTileLayoutInfo clone]
  -[PUTileLayoutInfo layoutInfoWithIndexPath:tileKind:dataSourceIdentifier:]
  -[PUTileLayoutInfo .cxx_destruct]
  -[PUTileLayoutInfo layoutInfoWithCoordinateSystem:]
  -[PUTileLayoutInfo center]
  -[PUTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:contentsRect:hitTestOutset:coordinateSystem:]
  -[PUTileLayoutInfo initWithTileIdentifier:center:size:alpha:cornerRadius:cornerCurve:cornerMask:transform:zPosition:contentsRect:hitTestOutset:coordinateSystem:]
  -[PUTileLayoutInfo _setZPosition:]
  -[PUTileLayoutInfo layoutInfoWithCenter:size:transform:]
  -[PUTileLayoutInfo layoutInfoWithZPosition:]
  -[PUTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:contentsRect:coordinateSystem:]
  -[PUTileLayoutInfo initWithTileIdentifier:center:size:alpha:cornerRadius:cornerCurve:cornerMask:transform:zPosition:contentsRect:coordinateSystem:]
  -[PUTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUTileLayoutInfo cornerMask]
  -[PUTileLayoutInfo contentsRect]
  -[PUTileLayoutInfo _setTileIdentifier:]
  -[PUTileLayoutInfo init]
  -[PUTileLayoutInfo tileKind]
  -[PUTileLayoutInfo _setCoordinateSystem:]
  -[PUTileLayoutInfo layoutInfoWithCenter:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUTileLayoutInfo isEqual:]
  -[PUTileLayoutInfo indexPath]
  -[PUTileLayoutInfo _setCornerRadius:]
  -[PUTileLayoutInfo _setCornerMask:]
  -[PUTileLayoutInfo dataSourceIdentifier]
  -[PUTileLayoutInfo layoutInfoByInterpolatingWithLayoutInfo:mixFactor:coordinateSystem:]
  -[PUTileLayoutInfo parallaxOffset]
  -[PUTileLayoutInfo _setSize:]
  -[PUTileLayoutInfo expandedRectInsets]
  -[PUTileLayoutInfo transform]
  -[PUTileLayoutInfo cornerRadius]
  -[PUTileLayoutInfo frame]
  -[PUTileLayoutInfo coordinateSystem]
  -[PUTileLayoutInfo alpha]
  -[PUTileLayoutInfo size]
  -[PUTileLayoutInfo copyWithZone:]


PUTileReattachmentContext : NSObject
 @property  NSMapTable *_tileControllerVelocities
 @property  BOOL isZoomingIn
 @property  BOOL isTransitioningOverOneUp

  // instance methods
  -[PUTileReattachmentContext .cxx_destruct]
  -[PUTileReattachmentContext isZoomingIn]
  -[PUTileReattachmentContext velocityForTileController:]
  -[PUTileReattachmentContext setVelocity:forTileController:]
  -[PUTileReattachmentContext isTransitioningOverOneUp]
  -[PUTileReattachmentContext setTransitioningOverOneUp:]
  -[PUTileReattachmentContext setZoomingIn:]
  -[PUTileReattachmentContext _tileControllerVelocities]


PUTileTransitionCoordinator : NSObject
  // class methods
  +[PUTileTransitionCoordinator browsingTileTransitionCoordinatorForTransitionFromLayout:toLayout:withTilingView:anchorAssetReference:context:]
  +[PUTileTransitionCoordinator defaultTileTransitionCoordinatorForTransitionFromLayout:toLayout:withTilingView:anchorAssetReference:context:]
  +[PUTileTransitionCoordinator defaultTileTransitionCoordinatorForUpdates]
  +[PUTileTransitionCoordinator defaultTileTransitionCoordinatorForFrameChangeWithTileCrossFade:tilingView:]
  +[PUTileTransitionCoordinator defaultTileTransitionCoordinatorForReattachedTileControllers:context:]
  +[PUTileTransitionCoordinator defaultTileTransitionCoordinatorForLayoutInvalidationContext:layout:viewModel:]

  // instance methods
  -[PUTileTransitionCoordinator newTileAnimationOptions]
  -[PUTileTransitionCoordinator finalLayoutInfoForDisappearingTileController:fromLayoutInfo:]
  -[PUTileTransitionCoordinator optionsForAnimatingTileController:toLayoutInfo:withAnimationType:]
  -[PUTileTransitionCoordinator useDoubleSidedTransitionForUpdatedTileController:toLayoutInfo:]
  -[PUTileTransitionCoordinator initialLayoutInfoForAppearingTileController:toLayoutInfo:]


PUTileTree : NSObject <NSCopying>
 @property  NSMutableDictionary *_objectsByTileIdentifier
 @property  BOOL useUniqueLeafs

  // instance methods
  -[PUTileTree removeObjectWithTileIdentifier:]
  -[PUTileTree removeAllObjects]
  -[PUTileTree enumerateObjectsUsingBlock:]
  -[PUTileTree containsObject:withTileIdentifier:]
  -[PUTileTree initUsingUniqueLeafs:]
  -[PUTileTree .cxx_destruct]
  -[PUTileTree addObject:withTileIdentifier:]
  -[PUTileTree init]
  -[PUTileTree initWithTileTree:]
  -[PUTileTree objectWithTileIdentifier:]
  -[PUTileTree useUniqueLeafs]
  -[PUTileTree copyWithZone:]
  -[PUTileTree removeObject:withTileIdentifier:]
  -[PUTileTree enumerateObjectsWithTileIdentifier:usingBlock:]
  -[PUTileTree _objectsByTileIdentifier]


PUTileViewAnimator : PUTileAnimator
 @property  NSMapTable *_synchronizedAnimationGroupsByTransition

  // instance methods
  -[PUTileViewAnimator .cxx_destruct]
  -[PUTileViewAnimator init]
  -[PUTileViewAnimator animateTileController:toLayoutInfo:withOptions:completionHandler:]
  -[PUTileViewAnimator prepareTileControllerForAnimation:withInitialLayoutInfo:]
  -[PUTileViewAnimator updateAnimationForTileController:withRepositionedTargetLayoutInfo:]
  -[PUTileViewAnimator transition:didComplete:]
  -[PUTileViewAnimator _performAnimations:withOptions:]
  -[PUTileViewAnimator _synchronizedAnimationGroupsByTransition]


PUTileViewController : PUTileController
 @property  UIView *view
 @property  UIView *contentView
 @property  UIView *loadedView
 @property  BOOL _loadingView
 @property  UIView *_tintView
 @property  UIView *_visibleRectView
 @property  @? _onReadyToDisplayBlock
 @property  NSTimer *_readinessTimer
 @property  BOOL _edgeAntialiasingEnabled
 @property  UIView *_maskView
 @property  NSArray *gestureRecognizers
 @property  BOOL isReadyForDisplay
 @property  BOOL isViewLoaded
 @property  BOOL contentViewEnabled
 @property  UIView *originalView

  // instance methods
  -[PUTileViewController wantsVisibleRectChanges]
  -[PUTileViewController applyLayoutInfo:]
  -[PUTileViewController didChangeVisibleRect]
  -[PUTileViewController becomeReusable]
  -[PUTileViewController setEdgeAntialiasingEnabled:]
  -[PUTileViewController isReadyForDisplay]
  -[PUTileViewController _maskView]
  -[PUTileViewController .cxx_destruct]
  -[PUTileViewController viewDidLoad]
  -[PUTileViewController contentView]
  -[PUTileViewController isViewLoaded]
  -[PUTileViewController view]
  -[PUTileViewController gestureRecognizers]
  -[PUTileViewController _tintView]
  -[PUTileViewController _setMaskView:]
  -[PUTileViewController prepareForReuse]
  -[PUTileViewController removeAllAnimations]
  -[PUTileViewController _setContentView:]
  -[PUTileViewController visibleRect]
  -[PUTileViewController dealloc]
  -[PUTileViewController loadView]
  -[PUTileViewController _setGestureRecognizers:]
  -[PUTileViewController _setView:]
  -[PUTileViewController addToTilingView:]
  -[PUTileViewController setContentViewEnabled:]
  -[PUTileViewController presentationLayoutInfo]
  -[PUTileViewController originalView]
  -[PUTileViewController _setReadyForDisplay:]
  -[PUTileViewController notifyWhenReadyForDisplayWithTimeOut:completionHandler:]
  -[PUTileViewController isPresentationActive]
  -[PUTileViewController _onReadyToDisplayBlock]
  -[PUTileViewController _setOnReadyToDisplayBlock:]
  -[PUTileViewController _readinessTimer]
  -[PUTileViewController _setReadinessTimer:]
  -[PUTileViewController _isLoadingView]
  -[PUTileViewController _setLoadingView:]
  -[PUTileViewController _setLoadedView:]
  -[PUTileViewController isContentViewEnabled]
  -[PUTileViewController _updateTintView]
  -[PUTileViewController _updateVisibleRectView]
  -[PUTileViewController _invalidateTintView]
  -[PUTileViewController _setEdgeAntialiasingEnabled:]
  -[PUTileViewController _handleReadinessForced:]
  -[PUTileViewController loadedView]
  -[PUTileViewController _updateDynamicStateDebugging]
  -[PUTileViewController _setTintView:]
  -[PUTileViewController _visibleRectView]
  -[PUTileViewController _setVisibleRectView:]
  -[PUTileViewController _edgeAntialiasingEnabled]


PUAssetPickerActionManager : PUAssetActionManager
  // instance methods
  -[PUAssetPickerActionManager shouldEnableActionType:onAsset:inAssetCollection:]


PUTilingDataSource : NSObject
 @property  NSHashTable *_changeObservers
 @property  NSString *identifier

  // instance methods
  -[PUTilingDataSource .cxx_destruct]
  -[PUTilingDataSource _changeObservers]
  -[PUTilingDataSource init]
  -[PUTilingDataSource isEqual:]
  -[PUTilingDataSource identifier]
  -[PUTilingDataSource setIdentifier:]
  -[PUTilingDataSource numberOfSubItemsAtIndexPath:]
  -[PUTilingDataSource enumerateIndexPathsStartingAtIndexPath:reverseDirection:usingBlock:]


PUTilingDataSourceConverter : NSObject
  // instance methods
  -[PUTilingDataSourceConverter convertIndexPath:tileKind:fromDataSource:toDataSource:]


PUTilingLayout : NSObject
 @property  PUTilingView *tilingView
 @property  <PUTilingCoordinateSystem> *parentCoordinateSystem
 @property  {CGPoint=dd} coordinateSystemOrigin
 @property  PUTilingDataSource *dataSource
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentBounds
 @property  PUTilingScrollInfo *preferredScrollInfo
 @property  <PUTilingCoordinateSystem> *coordinateSystem

  // instance methods
  -[PUTilingLayout contentBounds]
  -[PUTilingLayout prepareLayout]
  -[PUTilingLayout setDataSource:]
  -[PUTilingLayout .cxx_destruct]
  -[PUTilingLayout layoutInfoForTileWithIndexPath:kind:]
  -[PUTilingLayout dataSource]
  -[PUTilingLayout coordinateSystemOrigin]
  -[PUTilingLayout init]
  -[PUTilingLayout setCoordinateSystemOrigin:]
  -[PUTilingLayout setVisibleRect:]
  -[PUTilingLayout layoutInfosForTilesInRect:]
  -[PUTilingLayout setParentCoordinateSystem:]
  -[PUTilingLayout parentCoordinateSystem]
  -[PUTilingLayout visibleRectForScrollingToItemAtIndexPath:scrollPosition:]
  -[PUTilingLayout coordinateSystem]
  -[PUTilingLayout visibleRect]
  -[PUTilingLayout preferredScrollInfo]
  -[PUTilingLayout invalidateLayoutWithContext:]
  -[PUTilingLayout setTilingView:]
  -[PUTilingLayout tilingView]
  -[PUTilingLayout tileIdentifierForTileWithIndexPath:kind:]
  -[PUTilingLayout invalidateLayoutForUpdateWithItems:]


PUTilingLayoutCoordinateSystem : NSObject <PUTilingCoordinateSystem>
 @property  <PUTilingCoordinateSystem> *parentCoordinateSystem
 @property  {CGPoint=dd} coordinateSystemOrigin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUTilingLayoutCoordinateSystem .cxx_destruct]
  -[PUTilingLayoutCoordinateSystem coordinateSystemOrigin]
  -[PUTilingLayoutCoordinateSystem setCoordinateSystemOrigin:]
  -[PUTilingLayoutCoordinateSystem setParentCoordinateSystem:]
  -[PUTilingLayoutCoordinateSystem parentCoordinateSystem]


PUTilingLayoutInvalidationContext : NSObject
 @property  NSMutableDictionary *_invalidatedIndexPathsByTileKind
 @property  BOOL invalidatedAllTiles
 @property  BOOL invalidatedAnyTile
 @property  NSSet *invalidatedTileKinds
 @property  BOOL invalidatedContentBounds

  // instance methods
  -[PUTilingLayoutInvalidationContext invalidatedTileKinds]
  -[PUTilingLayoutInvalidationContext setInvalidatedAnyTile:]
  -[PUTilingLayoutInvalidationContext invalidatedContentBounds]
  -[PUTilingLayoutInvalidationContext .cxx_destruct]
  -[PUTilingLayoutInvalidationContext invalidateAllTiles]
  -[PUTilingLayoutInvalidationContext init]
  -[PUTilingLayoutInvalidationContext invalidatedAllTiles]
  -[PUTilingLayoutInvalidationContext setInvalidatedAllTiles:]
  -[PUTilingLayoutInvalidationContext invalidateTileWithIndexPath:kind:]
  -[PUTilingLayoutInvalidationContext invalidatedAnyTile]
  -[PUTilingLayoutInvalidationContext _invalidatedIndexPathsByTileKind]
  -[PUTilingLayoutInvalidationContext enumerateInvalidatedTilesUsingBlock:]
  -[PUTilingLayoutInvalidationContext invalidateContentBounds]
  -[PUTilingLayoutInvalidationContext invalidateAllTilesWithKind:]


PUCompositeVideoGenerator : PXObservable
 @property  NSArray *assets
 @property  long long outputType
 @property  BOOL onlyAllowOverlappingAssets
 @property  long long state
 @property  NSError *error
 @property  PUMergedLivePhotosVideo *playbackVideo
 @property  AVAssetExportSession *exportSession

  // class methods
  +[PUCompositeVideoGenerator canMergeAsset:withConsecutiveAsset:]
  +[PUCompositeVideoGenerator _overlapDurationBetweenAsset:andAsset:]
  +[PUCompositeVideoGenerator conformRange:inRange:]

  // instance methods
  -[PUCompositeVideoGenerator mutableChangeObject]
  -[PUCompositeVideoGenerator .cxx_destruct]
  -[PUCompositeVideoGenerator assets]
  -[PUCompositeVideoGenerator setState:]
  -[PUCompositeVideoGenerator outputType]
  -[PUCompositeVideoGenerator state]
  -[PUCompositeVideoGenerator start]
  -[PUCompositeVideoGenerator _workQueue_start]
  -[PUCompositeVideoGenerator initWithAssets:outputType:onlyAllowOverlappingAssets:]
  -[PUCompositeVideoGenerator playbackVideo]
  -[PUCompositeVideoGenerator setError:]
  -[PUCompositeVideoGenerator error]
  -[PUCompositeVideoGenerator _workQueue_generateVideoWithSingleAssetPlayerItem:]
  -[PUCompositeVideoGenerator _workQueue_finishWithError:]
  -[PUCompositeVideoGenerator _workQueue_generateVideoWithSingleAssetExportSession:]
  -[PUCompositeVideoGenerator _workQueue_generateVideoWithAVAssets:]
  -[PUCompositeVideoGenerator _workQueue_finishWithPlaybackVideo:error:]
  -[PUCompositeVideoGenerator _workQueue_finishWithExportSession:error:]
  -[PUCompositeVideoGenerator onlyAllowOverlappingAssets]
  -[PUCompositeVideoGenerator setPlaybackVideo:]
  -[PUCompositeVideoGenerator setExportSession:]
  -[PUCompositeVideoGenerator exportSession]


PUTilingLayoutTransitionContext : NSObject
 @property  BOOL isCancelingTransition
 @property  BOOL isViewControllerTransition
 @property  BOOL isUpdatingDisplayedContent
 @property  NSObject<OS_dispatch_group> *displayedContentUpdateGroup

  // instance methods
  -[PUTilingLayoutTransitionContext setIsUpdatingDisplayedContent:]
  -[PUTilingLayoutTransitionContext isViewControllerTransition]
  -[PUTilingLayoutTransitionContext isCancelingTransition]
  -[PUTilingLayoutTransitionContext .cxx_destruct]
  -[PUTilingLayoutTransitionContext displayedContentUpdateGroup]
  -[PUTilingLayoutTransitionContext setIsViewControllerTransition:]
  -[PUTilingLayoutTransitionContext setDisplayedContentUpdateGroup:]
  -[PUTilingLayoutTransitionContext setCancelingTransition:]
  -[PUTilingLayoutTransitionContext isUpdatingDisplayedContent]


PUTilingScrollInfo : NSObject
 @property  long long scrollDirections
 @property  BOOL shouldEnablePaging
 @property  {CGSize=dd} interpageSpacing
 @property  double pagingSpringPullAdjustment
 @property  double pagingFrictionAdjustment

  // class methods
  +[PUTilingScrollInfo scrollInfoWithScrollDirections:]
  +[PUTilingScrollInfo scrollInfoWithScrollDirections:enabledPagingWithInterpageSpacing:]
  +[PUTilingScrollInfo scrollInfoWithScrollDirections:enabledPagingWithInterpageSpacing:pagingSpringPullAdjustment:pagingFrictionAdjustment:]

  // instance methods
  -[PUTilingScrollInfo _setScrollDirections:]
  -[PUTilingScrollInfo _setShouldEnablePaging:]
  -[PUTilingScrollInfo interpageSpacing]
  -[PUTilingScrollInfo scrollDirections]
  -[PUTilingScrollInfo pagingFrictionAdjustment]
  -[PUTilingScrollInfo _setPagingSpringPullAdjustment:]
  -[PUTilingScrollInfo _setPagingFrictionAdjustment:]
  -[PUTilingScrollInfo shouldEnablePaging]
  -[PUTilingScrollInfo _setInterpageSpacing:]
  -[PUTilingScrollInfo pagingSpringPullAdjustment]


PUAdjustmentsViewFlowLayout : UICollectionViewFlowLayout
  // instance methods
  -[PUAdjustmentsViewFlowLayout targetContentOffsetForProposedContentOffset:]
  -[PUAdjustmentsViewFlowLayout targetContentOffsetForProposedContentOffset:withScrollingVelocity:]
  -[PUAdjustmentsViewFlowLayout nearestIndexPathForVisibleItemAtPoint:]


PUTilingView : UIScrollView
 @property  PUTilingLayout *layout
 @property  PUTilingLayout *_pendingLayout
 @property  PUReuseQueue *_tileControllerReuseQueue
 @property  PUTileTree *_activeTileControllers
 @property  PUTileTree *_inactiveTileControllers
 @property  PUTileTree *_detachedTileControllers
 @property  NSMutableDictionary *_referencedDataSourcesByIdentifiers
 @property  NSMutableSet *_referencedCoordinateSystems
 @property  BOOL _needsUpdateLayoutVisibleRect
 @property  BOOL _needsUpdateTileControllersVisibleRect
 @property  BOOL _needsUpdateLayoutCoordinateSystem
 @property  BOOL _needsUpdateLayout
 @property  BOOL _needsUpdateScrollViewProperties
 @property  BOOL _needsUpdateTileControllers
 @property  BOOL _needsUpdateReferencedDataSources
 @property  BOOL _needsUpdateReferencedCoordinateSystems
 @property  PUTileTransitionCoordinator *_tileTransitionCoordinatorForNextLayout
 @property  long long _reasonForNextLayoutCoordinateSystemUpdate
 @property  BOOL _performingBatchUpdates
 @property  NSMutableArray *_pendingUpdateItems
 @property  double _pagingSpringPullAdjustment
 @property  double _pagingFrictionAdjustment
 @property  NSMutableDictionary *_postLayoutBlocks
 @property  @? onNextTileControllersUpdateBlock
 @property  <PUTilingViewTileSource> *tileSource
 @property  {UIEdgeInsets=dddd} loadingInsets
 @property  PUTileAnimator *tileAnimator
 @property  <PUTilingViewTileTransitionDelegate> *tileTransitionDelegate
 @property  <PUTilingViewScrollDelegate> *scrollDelegate
 @property  <PUTilingViewTileUseDelegate> *tileUseDelegate
 @property  <PUTilingCoordinateSystem> *contentCoordinateSystem
 @property  <PUTilingCoordinateSystem> *fixedCoordinateSystem
 @property  BOOL isAnyTileControllerAnimating

  // class methods
  +[PUTilingView _defaultEdgesScrollingContentIntoSafeArea]

  // instance methods
  -[PUTilingView performBatchUpdates:]
  -[PUTilingView hitTest:withEvent:]
  -[PUTilingView setOnNextTileControllersUpdateBlock:]
  -[PUTilingView _invalidateScrollViewProperties]
  -[PUTilingView reattachTileControllers:withContext:]
  -[PUTilingView _updateScrollViewPropertiesIfNeeded]
  -[PUTilingView _referencedDataSourcesByIdentifiers]
  -[PUTilingView dequeueTileControllerWithReuseIdentifier:]
  -[PUTilingView invalidateLayout:withContext:]
  -[PUTilingView tileControllerWithIndexPath:kind:dataSourceIdentifier:]
  -[PUTilingView _needsUpdateLayoutVisibleRect]
  -[PUTilingView _enumerateAllTileControllersUsingBlock:]
  -[PUTilingView scrollDelegate]
  -[PUTilingView initWithCoder:]
  -[PUTilingView _setPendingLayout:]
  -[PUTilingView _runPostLayoutBlocks]
  -[PUTilingView _updateIfNeeded]
  -[PUTilingView _tileControllerReuseQueue]
  -[PUTilingView enumeratePresentedTileControllersInRect:usingBlock:]
  -[PUTilingView setScrollDelegate:]
  -[PUTilingView _setNeedsUpdate]
  -[PUTilingView tileAnimator]
  -[PUTilingView _needsUpdateReferencedCoordinateSystems]
  -[PUTilingView _inactiveTileControllers]
  -[PUTilingView _pagingFrictionAdjustment]
  -[PUTilingView transitionToLayout:]
  -[PUTilingView _needsUpdateTileControllersVisibleRect]
  -[PUTilingView _setReasonForNextLayoutCoordinateSystemUpdate:]
  -[PUTilingView _updateReferencedCoordinateSystemsIfNeeded]
  -[PUTilingView _updateTileControllersWithLayout:tileTransitionCoordinator:]
  -[PUTilingView _setNeedsUpdateReferencedDataSources:]
  -[PUTilingView .cxx_destruct]
  -[PUTilingView layoutSublayersOfLayer:]
  -[PUTilingView registerTileControllerClass:forReuseIdentifier:]
  -[PUTilingView setFrame:]
  -[PUTilingView enqueueTileControllerForReuse:]
  -[PUTilingView deleteItemAtIndexPath:dataSource:]
  -[PUTilingView _updateLayoutCoordinateSystemIfNeeded]
  -[PUTilingView _reasonForNextLayoutCoordinateSystemUpdate]
  -[PUTilingView fixedCoordinateSystem]
  -[PUTilingView _setTileTransitionCoordinatorForNextLayout:]
  -[PUTilingView _isPerformingBatchUpdates]
  -[PUTilingView _updateScrollViewPropertiesWithLayout:]
  -[PUTilingView _invalidateTileControllers]
  -[PUTilingView setTileUseDelegate:]
  -[PUTilingView _invalidateReferencedDataSources]
  -[PUTilingView freezeTileController:]
  -[PUTilingView _needsUpdateTileControllers]
  -[PUTilingView _invalidateTileControllersWithTileTransitionCoordinator:]
  -[PUTilingView _transferTileControllersToDataSource:usingDataSourceConverter:]
  -[PUTilingView _setLayout:]
  -[PUTilingView _pendingLayout]
  -[PUTilingView _setNeedsUpdateTileControllersVisibleRect:]
  -[PUTilingView tileTransitionDelegate]
  -[PUTilingView _setNeedsUpdateLayout:]
  -[PUTilingView _handleChangeFromBounds:fromFrame:]
  -[PUTilingView _setNeedsUpdateTileControllers:]
  -[PUTilingView _setNeedsUpdateReferencedCoordinateSystems:]
  -[PUTilingView initWithFrame:layout:]
  -[PUTilingView _postLayoutBlocks]
  -[PUTilingView _setPagingSpringPullAdjustment:]
  -[PUTilingView setTileAnimator:]
  -[PUTilingView reloadItemAtIndexPath:dataSource:]
  -[PUTilingView _needsUpdateLayout]
  -[PUTilingView _invalidateLayoutVisibleRect]
  -[PUTilingView _updateLayoutVisibleRectIfNeeded]
  -[PUTilingView _updateReferencedDataSourcesIfNeeded]
  -[PUTilingView tileUseDelegate]
  -[PUTilingView _updateTileControllersVisibleRectIfNeeded]
  -[PUTilingView _setPagingFrictionAdjustment:]
  -[PUTilingView detachTileControllers:]
  -[PUTilingView onNextTileControllersUpdateBlock]
  -[PUTilingView _enumerateActiveTileControllersUsingBlock:]
  -[PUTilingView initWithFrame:]
  -[PUTilingView _registerDataSource:]
  -[PUTilingView transitionToLayout:withContext:animationSetupCompletionHandler:]
  -[PUTilingView _dataSourceWithIdentifier:]
  -[PUTilingView setLoadingInsets:]
  -[PUTilingView tileSource]
  -[PUTilingView enumerateAllTileControllersUsingBlock:]
  -[PUTilingView tileControllerDidEndAnimating:]
  -[PUTilingView _setNeedsUpdateLayoutVisibleRect:]
  -[PUTilingView _pagingSpringPullAdjustment]
  -[PUTilingView _setNeedsUpdateLayoutCoordinateSystem:]
  -[PUTilingView _invalidateLayoutCoordinateSystemWithReason:]
  -[PUTilingView _invalidateLayout]
  -[PUTilingView _setNeedsUpdateScrollViewProperties:]
  -[PUTilingView _updateTileControllersWithLayout:reactivatability:appearanceHandler:updateHandler:disappearanceHandler:heartBeatHandler:]
  -[PUTilingView _setPerformingBatchUpdates:]
  -[PUTilingView _tileTransitionCoordinatorForNextLayout]
  -[PUTilingView _updateLayoutIfNeeded]
  -[PUTilingView _adjustScrollViewPagingDeceleration]
  -[PUTilingView _activeTileControllers]
  -[PUTilingView _referencedCoordinateSystems]
  -[PUTilingView _createTileControllerWithIndexPath:kind:dataSource:tileSource:]
  -[PUTilingView _updateTileControllersIfNeeded]
  -[PUTilingView moveItemFromIndexPath:toIndexPath:dataSource:]
  -[PUTilingView setBounds:]
  -[PUTilingView insertItemAtIndexPath:dataSource:]
  -[PUTilingView _needsUpdateReferencedDataSources]
  -[PUTilingView _pendingUpdateItems]
  -[PUTilingView _needsUpdateLayoutCoordinateSystem]
  -[PUTilingView contentCoordinateSystem]
  -[PUTilingView setTileSource:]
  -[PUTilingView _needsUpdateScrollViewProperties]
  -[PUTilingView registerPostLayoutBlock:forIdentifier:]
  -[PUTilingView presentedTileControllerWithIndexPath:kind:dataSourceIdentifier:]
  -[PUTilingView _invalidateTileControllersVisibleRect]
  -[PUTilingView layout]
  -[PUTilingView _invalidateReferencedCoordinateSystems]
  -[PUTilingView _detachedTileControllers]
  -[PUTilingView _applyPendingUpdates]
  -[PUTilingView isAnyTileControllerAnimating]
  -[PUTilingView setTileTransitionDelegate:]
  -[PUTilingView loadingInsets]


PUTilingViewTransitionHelper : NSObject <PUTilingViewControllerTransition, PUInterruptibleViewControllerTransition>
 @property  BOOL transitionPaused
 @property  BOOL hasStarted
 @property  long long _currentOperation
 @property  double _startTime
 @property  double _progressSpeed
 @property  double _transitionProgressOffset
 @property  double _backgroundProgressOffset
 @property  PUMaximumChangeRateValueFilter *_transitionProgressValueFilter
 @property  PUMaximumChangeRateValueFilter *_chromeProgressValueFilter
 @property  PUAnimationGroup *_tilingViewAnimationGroup
 @property  PUTilingView *_tilingView
 @property  <PUTilingViewControllerTransitionEndPoint> *_fromEndPoint
 @property  <PUTilingViewControllerTransitionEndPoint> *_toEndPoint
 @property  <PUTilingViewControllerTransitionEndPoint> *_endPointOwningTilingView
 @property  unsigned long _interactionOptions
 @property  NSArray *transitionPausingCall
 @property  double presentationDuration
 @property  double dismissalDuration
 @property  PUViewControllerTransition<PUTilingViewControllerTransition><PUInterruptibleViewControllerTransition> *transition
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUTilingViewTransitionHelper unregisterTransitionEndPoint:forViewController:]
  +[PUTilingViewTransitionHelper registerTransitionEndPoint:forViewController:]
  +[PUTilingViewTransitionHelper transitionEndPointWithViewController:]

  // instance methods
  -[PUTilingViewTransitionHelper transition]
  -[PUTilingViewTransitionHelper _setStartTime:]
  -[PUTilingViewTransitionHelper _startTime]
  -[PUTilingViewTransitionHelper setTransition:]
  -[PUTilingViewTransitionHelper isTransitionPaused]
  -[PUTilingViewTransitionHelper _tilingViewAnimationGroup]
  -[PUTilingViewTransitionHelper _setTransitionProgressValueFilter:]
  -[PUTilingViewTransitionHelper _transitionProgressValueFilter]
  -[PUTilingViewTransitionHelper _tilingView]
  -[PUTilingViewTransitionHelper _getTransitionProgress:backgroundProgress:chromeProgress:]
  -[PUTilingViewTransitionHelper .cxx_destruct]
  -[PUTilingViewTransitionHelper _endPointUsesTransientTilingView:]
  -[PUTilingViewTransitionHelper _barStyleForEndPoint:]
  -[PUTilingViewTransitionHelper _setProgressSpeed:]
  -[PUTilingViewTransitionHelper _setTransitionProgressOffset:]
  -[PUTilingViewTransitionHelper _setInteractionOptions:]
  -[PUTilingViewTransitionHelper _setTilingView:]
  -[PUTilingViewTransitionHelper _setEndPointOwningTilingView:]
  -[PUTilingViewTransitionHelper resumeTransition:]
  -[PUTilingViewTransitionHelper init]
  -[PUTilingViewTransitionHelper _transitionProgressOffset]
  -[PUTilingViewTransitionHelper setTransitionPausingCall:]
  -[PUTilingViewTransitionHelper _setBackgroundProgressOffset:]
  -[PUTilingViewTransitionHelper dismissalDuration]
  -[PUTilingViewTransitionHelper _setToEndPoint:]
  -[PUTilingViewTransitionHelper _chromeProgressValueFilter]
  -[PUTilingViewTransitionHelper hasStarted]
  -[PUTilingViewTransitionHelper _toEndPoint]
  -[PUTilingViewTransitionHelper _progressSpeed]
  -[PUTilingViewTransitionHelper _setCurrentOperation:]
  -[PUTilingViewTransitionHelper transitionPausingCall]
  -[PUTilingViewTransitionHelper _setFromEndPoint:]
  -[PUTilingViewTransitionHelper _setTransitionPaused:]
  -[PUTilingViewTransitionHelper _setChromeProgressValueFilter:]
  -[PUTilingViewTransitionHelper _backgroundProgressOffset]
  -[PUTilingViewTransitionHelper pauseTransitionWithOptions:]
  -[PUTilingViewTransitionHelper initWithPresentationDuration:dismissalDuration:]
  -[PUTilingViewTransitionHelper presentationDuration]
  -[PUTilingViewTransitionHelper _endPointOwningTilingView]
  -[PUTilingViewTransitionHelper _fromEndPoint]
  -[PUTilingViewTransitionHelper _currentOperation]
  -[PUTilingViewTransitionHelper _setTilingViewAnimationGroup:]
  -[PUTilingViewTransitionHelper _validateTransitionFromEndPoint:toEndPoint:]
  -[PUTilingViewTransitionHelper pauseTransition]
  -[PUTilingViewTransitionHelper _setHasStarted:]
  -[PUTilingViewTransitionHelper _interactionOptions]
  -[PUTilingViewTransitionHelper animateTransitionWithOperation:startedInteractively:]
  -[PUTilingViewTransitionHelper updatePausedTransitionWithProgress:interactionProgress:]


PUCurationUtilityComparisonBrowserDebugViewController : UITableViewController
  // instance methods
  -[PUCurationUtilityComparisonBrowserDebugViewController numberOfSectionsInTableView:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:numberOfRowsInSection:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:heightForRowAtIndexPath:]
  -[PUCurationUtilityComparisonBrowserDebugViewController .cxx_destruct]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:didSelectRowAtIndexPath:]
  -[PUCurationUtilityComparisonBrowserDebugViewController viewDidLoad]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:cellForRowAtIndexPath:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[PUCurationUtilityComparisonBrowserDebugViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[PUCurationUtilityComparisonBrowserDebugViewController _fetchUtilityAssetInformation]


PUTilingViewCoordinateSystem : NSObject <PUTilingCoordinateSystem>
 @property  PUTilingView *tilingView
 @property  <PUTilingCoordinateSystem> *parentCoordinateSystem
 @property  {CGPoint=dd} coordinateSystemOrigin
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUTilingViewCoordinateSystem .cxx_destruct]
  -[PUTilingViewCoordinateSystem coordinateSystemOrigin]
  -[PUTilingViewCoordinateSystem init]
  -[PUTilingViewCoordinateSystem parentCoordinateSystem]
  -[PUTilingViewCoordinateSystem tilingView]
  -[PUTilingViewCoordinateSystem initWithTilingView:]


PUTilingViewContentCoordinateSystem : PUTilingViewCoordinateSystem
  // instance methods
  -[PUTilingViewContentCoordinateSystem coordinateSystemOrigin]
  -[PUTilingViewContentCoordinateSystem parentCoordinateSystem]


PUTilingViewFixedCoordinateSystem : PUTilingViewCoordinateSystem
  // instance methods
  -[PUTilingViewFixedCoordinateSystem coordinateSystemOrigin]
  -[PUTilingViewFixedCoordinateSystem parentCoordinateSystem]


PUTilingViewModalTransition : PUModalTransition <PUTilingViewControllerTransition>
 @property  PUTilingViewTransitionHelper *_tilingViewTransitionHelper
 @property  BOOL hasStarted
 @property  BOOL transitionPaused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUTilingViewModalTransition isTransitionPaused]
  -[PUTilingViewModalTransition isInteractive]
  -[PUTilingViewModalTransition .cxx_destruct]
  -[PUTilingViewModalTransition _animateTransitionWithOperation:]
  -[PUTilingViewModalTransition resumeTransition:]
  -[PUTilingViewModalTransition init]
  -[PUTilingViewModalTransition _tilingViewTransitionHelper]
  -[PUTilingViewModalTransition hasStarted]
  -[PUTilingViewModalTransition pauseTransitionWithOptions:]
  -[PUTilingViewModalTransition pauseTransition]
  -[PUTilingViewModalTransition updatePausedTransitionWithProgress:interactionProgress:]
  -[PUTilingViewModalTransition animatePresentTransition]
  -[PUTilingViewModalTransition animateDismissTransition]


PUTilingViewNavigationTransition : PUNavigationTransition <PUTilingViewControllerTransition>
 @property  PUTilingViewTransitionHelper *_tilingViewTransitionHelper
 @property  BOOL hasStarted
 @property  BOOL transitionPaused
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUTilingViewNavigationTransition isTransitionPaused]
  -[PUTilingViewNavigationTransition isInteractive]
  -[PUTilingViewNavigationTransition .cxx_destruct]
  -[PUTilingViewNavigationTransition _animateTransitionWithOperation:]
  -[PUTilingViewNavigationTransition animatePushTransition]
  -[PUTilingViewNavigationTransition resumeTransition:]
  -[PUTilingViewNavigationTransition init]
  -[PUTilingViewNavigationTransition animatePopTransition]
  -[PUTilingViewNavigationTransition _tilingViewTransitionHelper]
  -[PUTilingViewNavigationTransition hasStarted]
  -[PUTilingViewNavigationTransition pauseTransitionWithOptions:]
  -[PUTilingViewNavigationTransition pauseTransition]
  -[PUTilingViewNavigationTransition updatePausedTransitionWithProgress:interactionProgress:]


PUTilingViewSettings : PXSettings
 @property  double animationDragCoefficient
 @property  BOOL useSpringAnimations
 @property  BOOL useSystemSpringAnimations
 @property  double springAnimationDuration
 @property  double defaultAnimationDuration
 @property  BOOL useOvershootingSpringAnimations
 @property  double transitionDuration
 @property  long long transitionProgressBehavior
 @property  double interactiveTransitionBackgroundDimming
 @property  double transitionChromeDelay
 @property  BOOL allowPaging
 @property  BOOL allowPreheating
 @property  BOOL allowTileReuse
 @property  BOOL allowsEdgeAntialiasing
 @property  BOOL carryOverVelocities
 @property  BOOL tintTiles
 @property  BOOL showVisibleRects
 @property  BOOL rotateDisappearingTiles
 @property  BOOL showSnapshottableTiles

  // class methods
  +[PUTilingViewSettings sharedInstance]
  +[PUTilingViewSettings settingsControllerModule]

  // instance methods
  -[PUTilingViewSettings setTransitionDuration:]
  -[PUTilingViewSettings carryOverVelocities]
  -[PUTilingViewSettings transitionDuration]
  -[PUTilingViewSettings setAllowsEdgeAntialiasing:]
  -[PUTilingViewSettings parentSettings]
  -[PUTilingViewSettings interactiveTransitionBackgroundDimming]
  -[PUTilingViewSettings allowsEdgeAntialiasing]
  -[PUTilingViewSettings setAnimationDragCoefficient:]
  -[PUTilingViewSettings setAllowPreheating:]
  -[PUTilingViewSettings setAllowPaging:]
  -[PUTilingViewSettings useSpringAnimations]
  -[PUTilingViewSettings setDefaultValues]
  -[PUTilingViewSettings allowTileReuse]
  -[PUTilingViewSettings setTintTiles:]
  -[PUTilingViewSettings useOvershootingSpringAnimations]
  -[PUTilingViewSettings setDefaultAnimationDuration:]
  -[PUTilingViewSettings setTransitionChromeDelay:]
  -[PUTilingViewSettings showSnapshottableTiles]
  -[PUTilingViewSettings defaultAnimationDuration]
  -[PUTilingViewSettings setInteractiveTransitionBackgroundDimming:]
  -[PUTilingViewSettings allowPreheating]
  -[PUTilingViewSettings animationDragCoefficient]
  -[PUTilingViewSettings setCarryOverVelocities:]
  -[PUTilingViewSettings rotateDisappearingTiles]
  -[PUTilingViewSettings setAllowTileReuse:]
  -[PUTilingViewSettings transitionChromeDelay]
  -[PUTilingViewSettings setSpringAnimationDuration:]
  -[PUTilingViewSettings useSystemSpringAnimations]
  -[PUTilingViewSettings setUseSystemSpringAnimations:]
  -[PUTilingViewSettings tintTiles]
  -[PUTilingViewSettings transitionProgressBehavior]
  -[PUTilingViewSettings setShowSnapshottableTiles:]
  -[PUTilingViewSettings springAnimationDuration]
  -[PUTilingViewSettings allowPaging]
  -[PUTilingViewSettings setTransitionProgressBehavior:]
  -[PUTilingViewSettings setUseOvershootingSpringAnimations:]
  -[PUTilingViewSettings showVisibleRects]
  -[PUTilingViewSettings setRotateDisappearingTiles:]
  -[PUTilingViewSettings setUseSpringAnimations:]
  -[PUTilingViewSettings setShowVisibleRects:]


PUTilingViewUpdateItem : NSObject
 @property  long long action
 @property  NSIndexPath *indexPathBeforeUpdate
 @property  NSIndexPath *indexPathAfterUpdate
 @property  PUTilingDataSource *dataSource

  // instance methods
  -[PUTilingViewUpdateItem .cxx_destruct]
  -[PUTilingViewUpdateItem dataSource]
  -[PUTilingViewUpdateItem indexPathBeforeUpdate]
  -[PUTilingViewUpdateItem action]
  -[PUTilingViewUpdateItem indexPathAfterUpdate]
  -[PUTilingViewUpdateItem initWithAction:indexPathBeforeUpdate:indexPathAfterUpdate:dataSource:]
  -[PUTilingViewUpdateItem transformedIndexPath:withDataSource:]


PUTimedAnimationGroup : PUAnimationGroup
 @property  double beginTime
 @property  double currentTime

  // instance methods
  -[PUTimedAnimationGroup setElapsedTime:]
  -[PUTimedAnimationGroup beginTime]
  -[PUTimedAnimationGroup elapsedTime]
  -[PUTimedAnimationGroup setBeginTime:]
  -[PUTimedAnimationGroup init]
  -[PUTimedAnimationGroup _update]
  -[PUTimedAnimationGroup currentTime]
  -[PUTimedAnimationGroup updateAnimations]
  -[PUTimedAnimationGroup pauseAnimations]
  -[PUTimedAnimationGroup resumeAnimations]


PUToolbarViewModel : PUViewModel
 @property  PUToolbarViewModelChange *currentChange
 @property  UIViewController *_viewController
 @property  BOOL needsToUpdateToolbarSize
 @property  NSArray *toolbarItems
 @property  UIView *accessoryView
 @property  double accessoryViewTopOutset
 @property  double accessoryViewMaximumHeight
 @property  double maximumHeight

  // instance methods
  -[PUToolbarViewModel .cxx_destruct]
  -[PUToolbarViewModel maximumHeight]
  -[PUToolbarViewModel setMaximumHeight:]
  -[PUToolbarViewModel setAccessoryViewTopOutset:]
  -[PUToolbarViewModel accessoryViewMaximumHeight]
  -[PUToolbarViewModel didPublishChanges]
  -[PUToolbarViewModel newViewModelChange]
  -[PUToolbarViewModel setNeedsToUpdateToolbarSize:]
  -[PUToolbarViewModel currentChange]
  -[PUToolbarViewModel setAccessoryViewMaximumHeight:]
  -[PUToolbarViewModel needsToUpdateToolbarSize]
  -[PUToolbarViewModel setToolbarItems:]
  -[PUToolbarViewModel setAccessoryView:]
  -[PUToolbarViewModel toolbarItems]
  -[PUToolbarViewModel accessoryView]
  -[PUToolbarViewModel _setViewController:]
  -[PUToolbarViewModel _viewController]
  -[PUToolbarViewModel accessoryViewTopOutset]


PUToolbarViewModelChange : PUViewModelChange
 @property  BOOL toolbarItemsChanged
 @property  BOOL accessoryViewChanged
 @property  BOOL accessoryViewTopOutsetChanged
 @property  BOOL accessoryViewMaximumHeightChanged
 @property  BOOL maximumHeightChanged

  // instance methods
  -[PUToolbarViewModelChange _setAccessoryViewMaximumHeightChanged:]
  -[PUToolbarViewModelChange _setMaximumHeightChanged:]
  -[PUToolbarViewModelChange _setAccessoryViewTopOutsetChanged:]
  -[PUToolbarViewModelChange toolbarItemsChanged]
  -[PUToolbarViewModelChange accessoryViewTopOutsetChanged]
  -[PUToolbarViewModelChange accessoryViewChanged]
  -[PUToolbarViewModelChange _setAccessoryViewChanged:]
  -[PUToolbarViewModelChange maximumHeightChanged]
  -[PUToolbarViewModelChange _setToolbarItemsChanged:]
  -[PUToolbarViewModelChange accessoryViewMaximumHeightChanged]
  -[PUToolbarViewModelChange hasChanges]


PUTouchingGestureRecognizer : UIGestureRecognizer
 @property  unsigned long _touchCount

  // instance methods
  -[PUTouchingGestureRecognizer _incrementTouchesBy:]
  -[PUTouchingGestureRecognizer _touchCount]
  -[PUTouchingGestureRecognizer touchesBegan:withEvent:]
  -[PUTouchingGestureRecognizer _decrementTouchesBy:]
  -[PUTouchingGestureRecognizer _setTouchCount:]
  -[PUTouchingGestureRecognizer reset]
  -[PUTouchingGestureRecognizer touchesCancelled:withEvent:]
  -[PUTouchingGestureRecognizer touchesEnded:withEvent:]


PUSuggestionsSettings : PXSettings
  // class methods
  +[PUSuggestionsSettings sharedInstance]

  // instance methods
  -[PUSuggestionsSettings parentSettings]
  -[PUSuggestionsSettings setDefaultValues]


PUPeopleTileCollectionViewCell : UICollectionViewCell <PXSuggestLessPeopleHelperDelegate>
 @property  UIView *questionView
 @property  UIButton *menuButton
 @property  UIImageView *avatarImageView
 @property  UIView *shadowView
 @property  UIGraphicsImageRenderer *renderer
 @property  {CGSize=dd} previousContentViewSize
 @property  PHPerson *person
 @property  PHAsset *asset
 @property  PXSuggestLessPeopleHelper *suggestLessPeopleHelper
 @property  <PUPeopleTileDelegate> *peopleDelegate

  // class methods
  +[PUPeopleTileCollectionViewCell itemSizeForTraitCollection:]

  // instance methods
  -[PUPeopleTileCollectionViewCell hitTest:withEvent:]
  -[PUPeopleTileCollectionViewCell renderer]
  -[PUPeopleTileCollectionViewCell .cxx_destruct]
  -[PUPeopleTileCollectionViewCell setPerson:]
  -[PUPeopleTileCollectionViewCell layoutSubviews]
  -[PUPeopleTileCollectionViewCell person]
  -[PUPeopleTileCollectionViewCell setAsset:]
  -[PUPeopleTileCollectionViewCell setRenderer:]
  -[PUPeopleTileCollectionViewCell shadowView]
  -[PUPeopleTileCollectionViewCell asset]
  -[PUPeopleTileCollectionViewCell avatarImageView]
  -[PUPeopleTileCollectionViewCell menuButton]
  -[PUPeopleTileCollectionViewCell accessibilityInvertColorsStatusDidChange:]
  -[PUPeopleTileCollectionViewCell initWithFrame:]
  -[PUPeopleTileCollectionViewCell setPeopleDelegate:]
  -[PUPeopleTileCollectionViewCell setPerson:asset:]
  -[PUPeopleTileCollectionViewCell peopleDelegate]
  -[PUPeopleTileCollectionViewCell suggestLessPeopleHelper:presentViewController:]
  -[PUPeopleTileCollectionViewCell suggestLessPeopleHelper:dismissViewController:completionHandler:]
  -[PUPeopleTileCollectionViewCell questionView]
  -[PUPeopleTileCollectionViewCell previousContentViewSize]
  -[PUPeopleTileCollectionViewCell _reloadAvatarImageViewForPerson:]
  -[PUPeopleTileCollectionViewCell setPreviousContentViewSize:]
  -[PUPeopleTileCollectionViewCell setQuestionView:]
  -[PUPeopleTileCollectionViewCell _setupActionsForPerson:asset:]
  -[PUPeopleTileCollectionViewCell _displayAvatarImageRequestResult:faceRect:error:]
  -[PUPeopleTileCollectionViewCell _featureLessActionTapped:]
  -[PUPeopleTileCollectionViewCell _showAlbumActionTapped:]
  -[PUPeopleTileCollectionViewCell _manageTagsActionTapped:]
  -[PUPeopleTileCollectionViewCell _untagActionTapped:asset:]
  -[PUPeopleTileCollectionViewCell _nameActionTapped:]
  -[PUPeopleTileCollectionViewCell suggestLessPeopleHelper]
  -[PUPeopleTileCollectionViewCell setSuggestLessPeopleHelper:]


PUActivitySharingViewModel : PXObservable
 @property  PUPhotoSelectionManager *selectionManager
 @property  PHFetchResult *collectionListFetchResult
 @property  PXPhotosDataSource *photosDataSource
 @property  BOOL actionSheet
 @property  NSString *localizedTitle
 @property  NSString *localizedSubtitle
 @property  <PXDisplayAsset> *keyAsset
 @property  PHPerson *person
 @property  long long sourceOrigin

  // instance methods
  -[PUActivitySharingViewModel photosDataSource]
  -[PUActivitySharingViewModel localizedTitle]
  -[PUActivitySharingViewModel performChanges:]
  -[PUActivitySharingViewModel mutableChangeObject]
  -[PUActivitySharingViewModel .cxx_destruct]
  -[PUActivitySharingViewModel person]
  -[PUActivitySharingViewModel selectionManager]
  -[PUActivitySharingViewModel init]
  -[PUActivitySharingViewModel isActionSheet]
  -[PUActivitySharingViewModel setActionSheet:]
  -[PUActivitySharingViewModel keyAsset]
  -[PUActivitySharingViewModel localizedSubtitle]
  -[PUActivitySharingViewModel collectionListFetchResult]
  -[PUActivitySharingViewModel initWithActivitySharingConfiguration:]
  -[PUActivitySharingViewModel setSelectionManager:]
  -[PUActivitySharingViewModel sourceOrigin]


PUTransitionViewAnimator : NSObject
 @property  UIView *view
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} targetFrame
 @property  {CGPoint=dd} anchorPoint
 @property  BOOL shouldUseTargetAspectRatio
 @property  double rampUpDuration
 @property  unsigned long direction
 @property  double progress
 @property  double unfilteredProgress
 @property  BOOL shouldFinish
 @property  {CGPoint=dd} _desiredTranslation
 @property  double _desiredRotation
 @property  double _desiredScale
 @property  double _desiredSizeMixFactor
 @property  {CGPoint=dd} currentTranslation
 @property  double _currentRotation
 @property  double _currentScale
 @property  double _currentSizeMixFactor
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _targetAspectRatioSourceFrame
 @property  double _targetScale
 @property  BOOL _isAutoUpdating
 @property  CADisplayLink *_autoUpdateDisplayLink
 @property  PUValueFilter *_rampUpFilter
 @property  PUValueFilter *_progressFilter
 @property  PUValueFilter *_shouldFinishFilter
 @property  BOOL _isEnding
 @property  BOOL autoUpdates
 @property  BOOL appliesScaleViaTransform
 @property  <PUTransitionViewAnimatorDelegate> *delegate

  // instance methods
  -[PUTransitionViewAnimator direction]
  -[PUTransitionViewAnimator .cxx_destruct]
  -[PUTransitionViewAnimator _currentScale]
  -[PUTransitionViewAnimator setDelegate:]
  -[PUTransitionViewAnimator progress]
  -[PUTransitionViewAnimator view]
  -[PUTransitionViewAnimator _update]
  -[PUTransitionViewAnimator currentTranslation]
  -[PUTransitionViewAnimator _setDirection:]
  -[PUTransitionViewAnimator sourceFrame]
  -[PUTransitionViewAnimator _setProgress:]
  -[PUTransitionViewAnimator delegate]
  -[PUTransitionViewAnimator targetFrame]
  -[PUTransitionViewAnimator _setSourceFrame:]
  -[PUTransitionViewAnimator _setView:]
  -[PUTransitionViewAnimator _isEnding]
  -[PUTransitionViewAnimator anchorPoint]
  -[PUTransitionViewAnimator updateWithTranslation:rotation:scale:]
  -[PUTransitionViewAnimator finishWithTranslationVelocity:rotationVelocity:scaleVelocity:shouldBounce:]
  -[PUTransitionViewAnimator initWithView:sourceFrame:targetFrame:anchorPoint:shouldUseTargetAspectRatio:rampUpDuration:direction:]
  -[PUTransitionViewAnimator setAppliesScaleViaTransform:]
  -[PUTransitionViewAnimator shouldFinish]
  -[PUTransitionViewAnimator setAutoUpdates:]
  -[PUTransitionViewAnimator cancelWithoutAnimation]
  -[PUTransitionViewAnimator cancelWithTranslationVelocity:rotationVelocity:scaleVelocity:shouldBounce:]
  -[PUTransitionViewAnimator unfilteredProgress]
  -[PUTransitionViewAnimator _setTargetFrame:]
  -[PUTransitionViewAnimator _setAnchorPoint:]
  -[PUTransitionViewAnimator _setShouldUseTargetAspectRatio:]
  -[PUTransitionViewAnimator _setRampUpDuration:]
  -[PUTransitionViewAnimator _setCurrentScale:]
  -[PUTransitionViewAnimator _setShouldFinish:]
  -[PUTransitionViewAnimator _setDesiredSizeMixFactor:]
  -[PUTransitionViewAnimator _setTargetAspectRatioSourceFrame:]
  -[PUTransitionViewAnimator _setTargetScale:]
  -[PUTransitionViewAnimator _setRampUpFilter:]
  -[PUTransitionViewAnimator _setProgressFilter:]
  -[PUTransitionViewAnimator _setShouldFinishFilter:]
  -[PUTransitionViewAnimator _setDesiredTranslation:]
  -[PUTransitionViewAnimator _setDesiredRotation:]
  -[PUTransitionViewAnimator _setDesiredScale:]
  -[PUTransitionViewAnimator _isAutoUpdating]
  -[PUTransitionViewAnimator _endWithTranslationVelocity:rotationVelocity:scaleVelocity:shouldBounce:finish:animated:]
  -[PUTransitionViewAnimator appliesScaleViaTransform]
  -[PUTransitionViewAnimator _desiredTranslation]
  -[PUTransitionViewAnimator _desiredRotation]
  -[PUTransitionViewAnimator _desiredScale]
  -[PUTransitionViewAnimator _desiredSizeMixFactor]
  -[PUTransitionViewAnimator _rampUpFilter]
  -[PUTransitionViewAnimator _setCurrentTranslation:]
  -[PUTransitionViewAnimator _setCurrentRotation:]
  -[PUTransitionViewAnimator _setCurrentSizeMixFactor:]
  -[PUTransitionViewAnimator _targetAspectRatioSourceFrame]
  -[PUTransitionViewAnimator _targetScale]
  -[PUTransitionViewAnimator _progressFilter]
  -[PUTransitionViewAnimator _setUnfilteredProgress:]
  -[PUTransitionViewAnimator _shouldFinishFilter]
  -[PUTransitionViewAnimator autoUpdates]
  -[PUTransitionViewAnimator _setAutoUpdating:]
  -[PUTransitionViewAnimator _updateAutoUpdateDisplayLink]
  -[PUTransitionViewAnimator _autoUpdateDisplayLink]
  -[PUTransitionViewAnimator _autoUpdate:]
  -[PUTransitionViewAnimator _setAutoUpdateDisplayLink:]
  -[PUTransitionViewAnimator _setEnding:]
  -[PUTransitionViewAnimator _currentRotation]
  -[PUTransitionViewAnimator _currentSizeMixFactor]
  -[PUTransitionViewAnimator shouldUseTargetAspectRatio]
  -[PUTransitionViewAnimator rampUpDuration]


PUTransparentView : UIView
  // instance methods
  -[PUTransparentView hitTest:withEvent:]


PUTrimToolController : UIViewController <PXTrimToolPlayerObserver, PXLivePhotoTrimScrubberDelegate, UIPopoverPresentationControllerDelegate, PULivePhotoKeyFrameSelectionViewControllerDelegate, PXSlowMotionEditorDelegate, PXFocusTimelineViewDelegate, PXFocusTimelineController>
 @property  {?=qiIq} currentStillFrameTime
 @property  {?=qiIq} adjustedStillFrameTime
 @property  PLEditSource *editSource
 @property  PLEditSource *overcaptureEditSource
 @property  UIVisualEffectView *auxilaryContainerView
 @property  UIVisualEffectView *scrubberPlayButtonContainerView
 @property  NSLayoutConstraint *scrubberContainerToAuxiliaryContainerConstraint
 @property  PULivePhotoKeyFrameSelectionViewController *livePhotoKeyFramePicker
 @property  PLPhotoEditRenderer *_renderer
 @property  AVPlayerItem *currentVideoPlayerItem
 @property  {?=qiIq} cachedFrameDuration
 @property  double cachedFrameRate
 @property  PXLivePhotoTrimScrubberSnapStripController *snapStripController
 @property  {?=qiIq} unadjustedAssetDuration
 @property  unsigned long playheadStyle
 @property  unsigned long internalState
 @property  BOOL slomoDraggingStartHandle
 @property  BOOL playButtonEnabled
 @property  NSNumber *slomoTimeForPlayheadUpdate
 @property  UILabel *debugTimeCodeLabel
 @property  {?=qiIq} debugPlayerTime
 @property  UILabel *debugPlayerTimeLabel
 @property  UILabel *debugOriginalTimeLabel
 @property  UILabel *debugTrimToolStateLabel
 @property  UILabel *debugTrimToolPlayheadStyleLabel
 @property  UIView *debugStartRectView
 @property  UIView *debugEndRectView
 @property  UIView *debugStartOffsetView
 @property  UIView *debugEndOffsetView
 @property  PXFocusTimelineView *focusTimelineView
 @property  NSLayoutConstraint *auxilaryContainerViewHeightConstraint
 @property  UIView *trimScrubberTimelineOverlayView
 @property  UIButton *trimScrubberTimelineOverlayButton
 @property  PXFocusTimelineAction *focusTimelineAction
 @property  BOOL objectTrackingShouldStop
 @property  BOOL portraitVideoEnabled
 @property  NSArray *focusEventTimes
 @property  <PUTrimToolControllerDelegate> *delegate
 @property  <PXTrimToolPlayerWrapper> *playerWrapper
 @property  PICompositionController *compositionController
 @property  {?=qiIq} unadjustedStillImageTime
 @property  {?=qiIq} originalStartTime
 @property  {?=qiIq} originalEndTime
 @property  {?=qiIq} suggestedKeyFrameTime
 @property  {?=qiIq} playheadTime
 @property  UIImage *placeholderImage
 @property  BOOL disabled
 @property  unsigned long state
 @property  long long currentlyInteractingElement
 @property  UIButton *playPauseButton
 @property  BOOL slomoEnabled
 @property  BOOL isPortraitVideo
 @property  double scrubberHeight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUTrimToolController _setState:]
  -[PUTrimToolController updateViewConstraints]
  -[PUTrimToolController disabled]
  -[PUTrimToolController setDisabled:]
  -[PUTrimToolController placeholderImage]
  -[PUTrimToolController setPlaceholderImage:]
  -[PUTrimToolController play]
  -[PUTrimToolController stepByCount:]
  -[PUTrimToolController traitCollectionDidChange:]
  -[PUTrimToolController setInternalState:]
  -[PUTrimToolController overcaptureEditSource]
  -[PUTrimToolController popoverPresentationControllerShouldDismissPopover:]
  -[PUTrimToolController setOvercaptureEditSource:]
  -[PUTrimToolController .cxx_destruct]
  -[PUTrimToolController viewDidLoad]
  -[PUTrimToolController internalState]
  -[PUTrimToolController popoverPresentationControllerDidDismissPopover:]
  -[PUTrimToolController touchesBegan:withEvent:]
  -[PUTrimToolController setDelegate:]
  -[PUTrimToolController _renderer]
  -[PUTrimToolController pause]
  -[PUTrimToolController state]
  -[PUTrimToolController _frameDuration]
  -[PUTrimToolController viewDidLayoutSubviews]
  -[PUTrimToolController adaptivePresentationStyleForPresentationController:]
  -[PUTrimToolController compositionController]
  -[PUTrimToolController delegate]
  -[PUTrimToolController _frameRate]
  -[PUTrimToolController adaptivePresentationStyleForPresentationController:traitCollection:]
  -[PUTrimToolController editSource]
  -[PUTrimToolController setCompositionController:]
  -[PUTrimToolController originalStartTime]
  -[PUTrimToolController objectTrackingStartedAtTime:]
  -[PUTrimToolController objectTrackingFinishedWithSuccess:]
  -[PUTrimToolController _setRenderer:]
  -[PUTrimToolController _createRendererIfNeeded]
  -[PUTrimToolController userDidRequestToMakeKeyPhoto:]
  -[PUTrimToolController isSlomoEnabled]
  -[PUTrimToolController isPortraitVideo]
  -[PUTrimToolController livePhotoRenderDidChange:]
  -[PUTrimToolController setEditSource:overcaptureEditSource:]
  -[PUTrimToolController setUnadjustedStillImageTime:]
  -[PUTrimToolController setOriginalStartTime:]
  -[PUTrimToolController setOriginalEndTime:]
  -[PUTrimToolController setSuggestedKeyFrameTime:]
  -[PUTrimToolController initWithPlayerWrapper:playButtonEnabled:slomoEnabled:portraitVideoEnabled:]
  -[PUTrimToolController playerWrapper]
  -[PUTrimToolController enableFocusTimeline:]
  -[PUTrimToolController currentlyInteractingElement]
  -[PUTrimToolController showFocusTimeline:]
  -[PUTrimToolController updateObjectTrackingProgressAtTime:shouldStop:]
  -[PUTrimToolController playheadTime]
  -[PUTrimToolController currentEditSource]
  -[PUTrimToolController setEditSource:]
  -[PUTrimToolController releaseAVObjects]
  -[PUTrimToolController setPlayheadTime:forceSeek:]
  -[PUTrimToolController scrubberHeight]
  -[PUTrimToolController _currentVideoAsset]
  -[PUTrimToolController initWithPlayerWrapper:playButtonEnabled:slomoEnabled:]
  -[PUTrimToolController playButtonEnabled]
  -[PUTrimToolController playPauseButton]
  -[PUTrimToolController _handleScrubberTimelineOverlayButton:]
  -[PUTrimToolController setSnapStripController:]
  -[PUTrimToolController _updateDebugTimeCodeLabel]
  -[PUTrimToolController _updateDebugPlayerTimeLabel]
  -[PUTrimToolController _updateDebugTrimToolStateLabel]
  -[PUTrimToolController _updateDebugPlayheadStyleLabel]
  -[PUTrimToolController _updateScrubberContents]
  -[PUTrimToolController _updatePlayheadStyle]
  -[PUTrimToolController _updateScrubberPresentedPlayhead]
  -[PUTrimToolController snapStripController]
  -[PUTrimToolController _updateScrubberTimelineOverlayButtonOffset]
  -[PUTrimToolController scrubberContainerToAuxiliaryContainerConstraint]
  -[PUTrimToolController auxilaryContainerView]
  -[PUTrimToolController scrubberPlayButtonContainerView]
  -[PUTrimToolController _hideScrubberTimelineOverlay]
  -[PUTrimToolController _handlePlayPauseButton:]
  -[PUTrimToolController _updatePlayPauseButton]
  -[PUTrimToolController _seekToTimeForElement:exact:forceSeek:]
  -[PUTrimToolController _currentPlayerScaledTimeFromOriginalTime:]
  -[PUTrimToolController setDebugPlayerTime:]
  -[PUTrimToolController _showKeyFrameSelection]
  -[PUTrimToolController setPlayheadTime:]
  -[PUTrimToolController _seekToTimeForElement:exact:]
  -[PUTrimToolController livePhotoKeyFramePicker]
  -[PUTrimToolController setLivePhotoKeyFramePicker:]
  -[PUTrimToolController _playPauseButtonIfLoaded]
  -[PUTrimToolController _updateCompositionController]
  -[PUTrimToolController _didCompleteInteractiveEditForElement:atTime:state:]
  -[PUTrimToolController currentStillFrameTime]
  -[PUTrimToolController _resetScrubberToStillPhotoFrame]
  -[PUTrimToolController _updateTimeCodeOverlay]
  -[PUTrimToolController _presentationRectFromLoupeRect]
  -[PUTrimToolController _updatePlayerWrapperTrim]
  -[PUTrimToolController setUnadjustedAssetDuration:]
  -[PUTrimToolController _updateScrubberFocusEventTimes]
  -[PUTrimToolController resetTimeline]
  -[PUTrimToolController adjustedStillFrameTime]
  -[PUTrimToolController unadjustedStillImageTime]
  -[PUTrimToolController _updatePlayerWrapperTimeObserver]
  -[PUTrimToolController _updatePublicState]
  -[PUTrimToolController _allowsKeyFrameCreation]
  -[PUTrimToolController debugTimeCodeLabel]
  -[PUTrimToolController debugPlayerTimeLabel]
  -[PUTrimToolController currentVideoPlayerItem]
  -[PUTrimToolController debugPlayerTime]
  -[PUTrimToolController _originalTimeFromCurrentPlayerScaledTime:]
  -[PUTrimToolController debugOriginalTimeLabel]
  -[PUTrimToolController debugTrimToolStateLabel]
  -[PUTrimToolController debugTrimToolPlayheadStyleLabel]
  -[PUTrimToolController playheadStyle]
  -[PUTrimToolController setPlayheadStyle:]
  -[PUTrimToolController slomoDraggingStartHandle]
  -[PUTrimToolController _updateSnappingDots]
  -[PUTrimToolController _updateScrubberTimes]
  -[PUTrimToolController originalEndTime]
  -[PUTrimToolController suggestedKeyFrameTime]
  -[PUTrimToolController unadjustedAssetDuration]
  -[PUTrimToolController slomoTimeForPlayheadUpdate]
  -[PUTrimToolController setSlomoTimeForPlayheadUpdate:]
  -[PUTrimToolController focusEventTimes]
  -[PUTrimToolController setFocusEventTimes:]
  -[PUTrimToolController setCurrentVideoPlayerItem:]
  -[PUTrimToolController setCachedFrameDuration:]
  -[PUTrimToolController setCachedFrameRate:]
  -[PUTrimToolController cachedFrameDuration]
  -[PUTrimToolController cachedFrameRate]
  -[PUTrimToolController playerWrapper:timeChanged:]
  -[PUTrimToolController _slomoMapperForCurrentConfiguration]
  -[PUTrimToolController _updatePlayerItem]
  -[PUTrimToolController _livePhotoKeyFramePickerDidDismiss:]
  -[PUTrimToolController setAdjustedStillFrameTime:]
  -[PUTrimToolController setSlomoDraggingStartHandle:]
  -[PUTrimToolController compositonDidUpdateForPlayerWrapper:]
  -[PUTrimToolController playerStatusChangedForPlayerWrapper:]
  -[PUTrimToolController trimScrubberAssetDurationDidChange:]
  -[PUTrimToolController trimScrubber:didTapElement:]
  -[PUTrimToolController trimScrubber:didTapTimelineAtTime:]
  -[PUTrimToolController trimScrubber:canBeginInteractivelyEditingElement:]
  -[PUTrimToolController trimScrubber:didBeginInteractivelyEditingElement:]
  -[PUTrimToolController trimScrubber:didEndInteractivelyEditingElement:successful:]
  -[PUTrimToolController trimScrubber:didChangeTimeForElement:]
  -[PUTrimToolController trimScrubber:didChangeLoupeRect:]
  -[PUTrimToolController trimScrubber:didZoomToMinimumValue:maximumValue:]
  -[PUTrimToolController trimScrubberDidUnzoom:]
  -[PUTrimToolController trimScrubberDidLayoutSubviews:]
  -[PUTrimToolController trimScrubber:debugStartRect:]
  -[PUTrimToolController trimScrubber:debugEndRect:]
  -[PUTrimToolController trimScrubber:debugStartOffset:]
  -[PUTrimToolController trimScrubber:debugEndOffset:]
  -[PUTrimToolController slowMotionEditorDidBeginEditing:withStartHandle:]
  -[PUTrimToolController slowMotionEditorDidEndEditing:]
  -[PUTrimToolController slowMotionEditorStartValueChanged:]
  -[PUTrimToolController slowMotionEditorEndValueChanged:]
  -[PUTrimToolController slowMotionEditorRequestForceZoom:]
  -[PUTrimToolController slowMotionEditorRequestForceUnzoom:]
  -[PUTrimToolController focusTimeline:presentAction:locationInTimeline:]
  -[PUTrimToolController focusTimeline:updateTrackingProgressShouldStop:]
  -[PUTrimToolController hideFocusTimelineActions:]
  -[PUTrimToolController axDescriptionForFocusEventATime:]
  -[PUTrimToolController updateFocusTimeline]
  -[PUTrimToolController updateFocusTimelineWithTimeRange:]
  -[PUTrimToolController updateFocusTimelineWithEvent:userInitiated:shouldAnimate:]
  -[PUTrimToolController didUpdateFocusEventsWithTimes:]
  -[PUTrimToolController initWithPlayerWrapper:]
  -[PUTrimToolController setAuxilaryContainerView:]
  -[PUTrimToolController setScrubberPlayButtonContainerView:]
  -[PUTrimToolController setScrubberContainerToAuxiliaryContainerConstraint:]
  -[PUTrimToolController setDebugTimeCodeLabel:]
  -[PUTrimToolController setDebugPlayerTimeLabel:]
  -[PUTrimToolController setDebugOriginalTimeLabel:]
  -[PUTrimToolController setDebugTrimToolStateLabel:]
  -[PUTrimToolController setDebugTrimToolPlayheadStyleLabel:]
  -[PUTrimToolController debugStartRectView]
  -[PUTrimToolController setDebugStartRectView:]
  -[PUTrimToolController debugEndRectView]
  -[PUTrimToolController setDebugEndRectView:]
  -[PUTrimToolController debugStartOffsetView]
  -[PUTrimToolController setDebugStartOffsetView:]
  -[PUTrimToolController debugEndOffsetView]
  -[PUTrimToolController setDebugEndOffsetView:]
  -[PUTrimToolController focusTimelineView]
  -[PUTrimToolController setFocusTimelineView:]
  -[PUTrimToolController auxilaryContainerViewHeightConstraint]
  -[PUTrimToolController setAuxilaryContainerViewHeightConstraint:]
  -[PUTrimToolController trimScrubberTimelineOverlayView]
  -[PUTrimToolController setTrimScrubberTimelineOverlayView:]
  -[PUTrimToolController trimScrubberTimelineOverlayButton]
  -[PUTrimToolController setTrimScrubberTimelineOverlayButton:]
  -[PUTrimToolController focusTimelineAction]
  -[PUTrimToolController setFocusTimelineAction:]
  -[PUTrimToolController objectTrackingShouldStop]
  -[PUTrimToolController setObjectTrackingShouldStop:]
  -[PUTrimToolController portraitVideoEnabled]
  -[PUTrimToolController setPortraitVideoEnabled:]


PULivePhotoTrimScrubberSnapStripControllerSpec : PXLivePhotoTrimScrubberSnapStripControllerSpec
  // instance methods
  -[PULivePhotoTrimScrubberSnapStripControllerSpec disabledColor]
  -[PULivePhotoTrimScrubberSnapStripControllerSpec currentPositionMarkerColor]
  -[PULivePhotoTrimScrubberSnapStripControllerSpec originalPositionMarkerColor]
  -[PULivePhotoTrimScrubberSnapStripControllerSpec suggestedMarkerColor]


PUTimeCodeOverlayView : UIView
 @property  double displayedTimeInterval
 @property  double frameRate

  // instance methods
  -[PUTimeCodeOverlayView didMoveToSuperview]
  -[PUTimeCodeOverlayView .cxx_destruct]
  -[PUTimeCodeOverlayView setFrameRate:]
  -[PUTimeCodeOverlayView frameRate]
  -[PUTimeCodeOverlayView setDisplayedTimeInterval:]
  -[PUTimeCodeOverlayView updateTimeDisplay]
  -[PUTimeCodeOverlayView displayedTimeInterval]


PUCurationActionSignalBrowserViewController : UITableViewController
 @property  NSArray *availableActions

  // instance methods
  -[PUCurationActionSignalBrowserViewController setAvailableActions:]
  -[PUCurationActionSignalBrowserViewController availableActions]
  -[PUCurationActionSignalBrowserViewController numberOfSectionsInTableView:]
  -[PUCurationActionSignalBrowserViewController tableView:numberOfRowsInSection:]
  -[PUCurationActionSignalBrowserViewController .cxx_destruct]
  -[PUCurationActionSignalBrowserViewController tableView:didSelectRowAtIndexPath:]
  -[PUCurationActionSignalBrowserViewController viewDidLoad]
  -[PUCurationActionSignalBrowserViewController tableView:cellForRowAtIndexPath:]


PUUIAlbumListViewController : PUAlbumListViewController <PUPhotoPickerServicesConsumer>
 @property  NSArray *_imagePickerMediaTypes
 @property  unsigned long _imagePickerAssetTypes
 @property  <PUPhotoPicker> *photoPicker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUUIAlbumListViewController .cxx_destruct]
  -[PUUIAlbumListViewController viewDidLoad]
  -[PUUIAlbumListViewController viewDidAppear:]
  -[PUUIAlbumListViewController photoPicker]
  -[PUUIAlbumListViewController setPhotoPicker:]
  -[PUUIAlbumListViewController init]
  -[PUUIAlbumListViewController viewWillAppear:]
  -[PUUIAlbumListViewController loadView]
  -[PUUIAlbumListViewController assetsFilterPredicate]
  -[PUUIAlbumListViewController _setImagePickerMediaTypes:]
  -[PUUIAlbumListViewController updateNavigationBarAnimated:]
  -[PUUIAlbumListViewController filteringAssetTypes]
  -[PUUIAlbumListViewController canShowAvatarViews]
  -[PUUIAlbumListViewController shouldAllowEmailInAlbumSubtitle]
  -[PUUIAlbumListViewController shouldShowAllPhotosItem]
  -[PUUIAlbumListViewController newGridViewControllerForAssetCollection:]
  -[PUUIAlbumListViewController newGridViewControllerForFolder:]
  -[PUUIAlbumListViewController newGridViewControllerForAllPhotos]
  -[PUUIAlbumListViewController shouldHideEmptyCollections]
  -[PUUIAlbumListViewController pu_wantsNavigationBarVisible]
  -[PUUIAlbumListViewController setPhotoPickerMediaTypes:]
  -[PUUIAlbumListViewController _imagePickerControllerHelper]
  -[PUUIAlbumListViewController _updateCollectionsFetchResultIfNeeded]
  -[PUUIAlbumListViewController _imagePickerMediaTypes]
  -[PUUIAlbumListViewController _setImagePickerAssetTypes:]
  -[PUUIAlbumListViewController _invalidateCollectionsFetchResult]
  -[PUUIAlbumListViewController _handleImagePickerCancel:]
  -[PUUIAlbumListViewController _imagePickerAssetTypes]


PUUIImagePickerControllerHelper : NSObject
 @property  NSObject<OS_dispatch_group> *multiSelectionGroup
 @property  BOOL didHandleSelectionOfAssets
 @property  PUPhotosGridViewController *gridViewController
 @property  PUUIAlbumListViewController *albumListViewController
 @property  <PUPhotoPicker> *photoPicker
 @property  BOOL allowsMultipleSelection
 @property  BOOL requiresPickingConfirmation
 @property  BOOL showsFileSizePicker
 @property  BOOL anyAssetDownloading

  // class methods
  +[PUUIImagePickerControllerHelper albumListViewControllerSpec]
  +[PUUIImagePickerControllerHelper gridViewControllerSpec]
  +[PUUIImagePickerControllerHelper collectionsFilterPredicateForMediaTypes:]
  +[PUUIImagePickerControllerHelper imagePickerTypesForMediaTypes:]
  +[PUUIImagePickerControllerHelper assetsFilterPredicateForMediaTypes:]
  +[PUUIImagePickerControllerHelper albumFilterForMediaTypes:]

  // instance methods
  -[PUUIImagePickerControllerHelper .cxx_destruct]
  -[PUUIImagePickerControllerHelper allowsMultipleSelection]
  -[PUUIImagePickerControllerHelper photoPicker]
  -[PUUIImagePickerControllerHelper _mediaTypes]
  -[PUUIImagePickerControllerHelper cancelPhotoPicker]
  -[PUUIImagePickerControllerHelper showsFileSizePicker]
  -[PUUIImagePickerControllerHelper requiresPickingConfirmation]
  -[PUUIImagePickerControllerHelper showsPrompt]
  -[PUUIImagePickerControllerHelper multipleSelectionLimit]
  -[PUUIImagePickerControllerHelper _extraArgumentsForResizeTaskDescriptor:]
  -[PUUIImagePickerControllerHelper isAnyAssetDownloading]
  -[PUUIImagePickerControllerHelper handleToggleSelectionOfItemAtIndexPath:]
  -[PUUIImagePickerControllerHelper updateSessionInfo]
  -[PUUIImagePickerControllerHelper initWithAlbumListViewController:photoPickerServices:]
  -[PUUIImagePickerControllerHelper multiSelectionGroup]
  -[PUUIImagePickerControllerHelper _selectAsset:withHintCollection:hintIndexPath:]
  -[PUUIImagePickerControllerHelper _pickerProperties]
  -[PUUIImagePickerControllerHelper _pushImageViewControllerForAsset:allowEditing:expectsLivePhoto:]
  -[PUUIImagePickerControllerHelper _notifyImagePickerOfAssetAvailability:resizeTaskDescriptor:]
  -[PUUIImagePickerControllerHelper didHandleSelectionOfAssets]
  -[PUUIImagePickerControllerHelper setDidHandleSelectionOfAssets:]
  -[PUUIImagePickerControllerHelper _handleSelectionOfDownloadedAssets:resizeTaskDescriptor:]
  -[PUUIImagePickerControllerHelper _showImageViewController:]
  -[PUUIImagePickerControllerHelper initWithGridViewController:photoPickerServices:]
  -[PUUIImagePickerControllerHelper handleSelectionOfAsset:inCollection:resizeTaskDescriptor:]
  -[PUUIImagePickerControllerHelper handleSelectionOfAssets:resizeTaskDescriptor:]
  -[PUUIImagePickerControllerHelper handleKeyboardAvoidanceIfNeeded:]
  -[PUUIImagePickerControllerHelper gridViewController]
  -[PUUIImagePickerControllerHelper albumListViewController]
  -[PUUIImagePickerControllerHelper setMultiSelectionGroup:]


PUUIImageViewController : PLUIImageViewController <UIGestureRecognizerDelegate, PUVideoPlayerViewDelegate, PXChangeObserver, PUPhotoPickerServicesConsumer, PUPhotoPickerSelectionHandler>
 @property  PUBrowsingIrisPlayer *_irisPlayer
 @property  PHLivePhotoView *_livePhotoView
 @property  PUVideoPlayerView *_autoloopView
 @property  ISAnimatedImageView *_animatedImageView
 @property  NSURL *_videoAssetURL
 @property  NSURL *_assetURL
 @property  int _imageManagerVideoRequestID
 @property  int _animatedImageRequestID
 @property  <PUUIImageViewControllerFileResizingDelegate> *fileResizingDelegate
 @property  PUPhotoPickerResizeTaskDescriptorViewModel *resizeTaskDescriptorViewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <PUPhotoPicker> *photoPicker

  // instance methods
  -[PUUIImageViewController videoQuality]
  -[PUUIImageViewController .cxx_destruct]
  -[PUUIImageViewController viewDidLoad]
  -[PUUIImageViewController viewDidAppear:]
  -[PUUIImageViewController photoPicker]
  -[PUUIImageViewController setPhotoPicker:]
  -[PUUIImageViewController videoMaximumDuration]
  -[PUUIImageViewController gestureRecognizerShouldBegin:]
  -[PUUIImageViewController viewWillDisappear:]
  -[PUUIImageViewController resizeTaskDescriptorViewModel]
  -[PUUIImageViewController viewDidLayoutSubviews]
  -[PUUIImageViewController _assetURL]
  -[PUUIImageViewController customBackgroundColor]
  -[PUUIImageViewController _livePhotoView]
  -[PUUIImageViewController setResizeTaskDescriptorViewModel:]
  -[PUUIImageViewController dealloc]
  -[PUUIImageViewController loadView]
  -[PUUIImageViewController observable:didChange:context:]
  -[PUUIImageViewController _animatedImageView]
  -[PUUIImageViewController _irisPlayer]
  -[PUUIImageViewController pu_wantsNavigationBarVisible]
  -[PUUIImageViewController _animatedImageRequestID]
  -[PUUIImageViewController _setAnimatedImageRequestID:]
  -[PUUIImageViewController setPhotoPickerMediaTypes:]
  -[PUUIImageViewController initWithPhoto:imagePickerProperties:expectsLivePhoto:]
  -[PUUIImageViewController setFileResizingDelegate:]
  -[PUUIImageViewController performPhotoPickerSelection]
  -[PUUIImageViewController _setLivePhotoView:]
  -[PUUIImageViewController _setImageManagerVideoRequestID:]
  -[PUUIImageViewController _loadLivePhoto]
  -[PUUIImageViewController _setAutoloopView:]
  -[PUUIImageViewController _loadAutoloopVideo]
  -[PUUIImageViewController _setAnimatedImageView:]
  -[PUUIImageViewController _loadAnimatedImage]
  -[PUUIImageViewController _autoloopView]
  -[PUUIImageViewController _handleAnimatedImagePreviewResult:]
  -[PUUIImageViewController _fetchPreviewImageWithCompletion:]
  -[PUUIImageViewController _handleAnimatedImageResult:]
  -[PUUIImageViewController _fetchAnimatedImageWithCompletion:]
  -[PUUIImageViewController _handleAutoloopPreviewImageResult:]
  -[PUUIImageViewController _handleAutoloopVideoResult:]
  -[PUUIImageViewController _fetchVideoWithCompletion:]
  -[PUUIImageViewController _setVideoAssetURL:]
  -[PUUIImageViewController _handleLivePhotoRequestResult:info:]
  -[PUUIImageViewController fileResizingDelegate]
  -[PUUIImageViewController _fetchLivePhotoWithCompletion:]
  -[PUUIImageViewController _videoAssetURL]
  -[PUUIImageViewController handleMediaSelectionUsingTile:managedAsset:args:includeEditing:]
  -[PUUIImageViewController cropOverlayWasOKed:]
  -[PUUIImageViewController _finishAutoloopDeliveryWithVideoURL:gifURL:]
  -[PUUIImageViewController _generateGIFFromVideoURL:progressHandler:completionHandler:]
  -[PUUIImageViewController _isPhotosPickerExtensionAvailable]
  -[PUUIImageViewController isDisplayedInPhotoPicker]
  -[PUUIImageViewController cropOverlayMode]
  -[PUUIImageViewController videoPlayerView:isReadyForDisplayDidChange:]
  -[PUUIImageViewController setIrisPlayer:]
  -[PUUIImageViewController irisPlayerView:delegateForGestureRecognizer:]
  -[PUUIImageViewController irisPlayerViewViewHostingGestureRecognizers:]
  -[PUUIImageViewController handleVideoSelectionWithURL:args:]
  -[PUUIImageViewController handleAutoloopSelected]
  -[PUUIImageViewController doNotTranscode]
  -[PUUIImageViewController exportPreset]
  -[PUUIImageViewController viewImageBeforeSelecting]
  -[PUUIImageViewController disableVideoTrimMessage]
  -[PUUIImageViewController forceNativeScreenScale]
  -[PUUIImageViewController force1XCroppedImage]
  -[PUUIImageViewController chooseButtonTitle]
  -[PUUIImageViewController cancelButtonTitle]
  -[PUUIImageViewController maxZoomScaleOverride]
  -[PUUIImageViewController imagePickerAllowsEditing]
  -[PUUIImageViewController imagePickerSavingOptions]
  -[PUUIImageViewController wantsAutoloopUI]
  -[PUUIImageViewController wantsLegacyImageUI]
  -[PUUIImageViewController uiipc_useTelephonyUI]
  -[PUUIImageViewController cropOverlayFileSizeMenuActions:]
  -[PUUIImageViewController set_irisPlayer:]
  -[PUUIImageViewController _setAssetURL:]
  -[PUUIImageViewController _imageManagerVideoRequestID]


PUUIMomentsGridViewController : PUPhotosGridViewController <PUPhotoPickerFileSizeToolbarProviderDelegate, PUPhotosGridViewSupplementalToolbarDataSource, PUPhotoPickerServicesConsumer, PUPhotoPickerSelectionHandler, PUPhotoPickerTestSupportHandler>
 @property  PUUIImagePickerControllerHelper *_imagePickerControllerHelper
 @property  NSArray *_imagePickerMediaTypes
 @property  BOOL referenceValuesDidChange
 @property  BOOL didDisappear
 @property  double lastKnownWidth
 @property  {UIEdgeInsets=dddd} lastKnownSafeAreaInsets
 @property  PUPhotoPickerResizeTaskDescriptor *resizeTaskDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL anyAssetSelected
 @property  NSArray *selectedAssets
 @property  PUSessionInfo *sessionInfo
 @property  BOOL anyAssetDownloading
 @property  <PUPhotoPicker> *photoPicker

  // instance methods
  -[PUUIMomentsGridViewController initWithSpec:]
  -[PUUIMomentsGridViewController setDidDisappear:]
  -[PUUIMomentsGridViewController viewWillLayoutSubviews]
  -[PUUIMomentsGridViewController .cxx_destruct]
  -[PUUIMomentsGridViewController viewDidLoad]
  -[PUUIMomentsGridViewController viewDidAppear:]
  -[PUUIMomentsGridViewController photoPicker]
  -[PUUIMomentsGridViewController setPhotoPicker:]
  -[PUUIMomentsGridViewController init]
  -[PUUIMomentsGridViewController viewWillAppear:]
  -[PUUIMomentsGridViewController didDisappear]
  -[PUUIMomentsGridViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUUIMomentsGridViewController canDragIn]
  -[PUUIMomentsGridViewController loadView]
  -[PUUIMomentsGridViewController _setTitle]
  -[PUUIMomentsGridViewController viewDidDisappear:]
  -[PUUIMomentsGridViewController _setImagePickerMediaTypes:]
  -[PUUIMomentsGridViewController performPhotoPickerPreviewOfFirstAsset]
  -[PUUIMomentsGridViewController canDragOut]
  -[PUUIMomentsGridViewController updateSpec]
  -[PUUIMomentsGridViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUUIMomentsGridViewController sectionedGridLayout:sectionHeaderHeightForVisualSection:]
  -[PUUIMomentsGridViewController sectionedGridLayout:accessibilitySectionHeaderHeightForVisualSection:]
  -[PUUIMomentsGridViewController newGridLayout]
  -[PUUIMomentsGridViewController initiallyScrolledToBottom]
  -[PUUIMomentsGridViewController shouldPerformAutomaticContentOffsetAdjustment]
  -[PUUIMomentsGridViewController setResizeTaskDescriptor:]
  -[PUUIMomentsGridViewController setPhotoPickerMediaTypes:]
  -[PUUIMomentsGridViewController resizeTaskDescriptor]
  -[PUUIMomentsGridViewController canNavigateToPhotoInteractively:]
  -[PUUIMomentsGridViewController isAnyAssetDownloading]
  -[PUUIMomentsGridViewController photoPickerFileSizeToolbarProvider:didSelectResizeTaskDescriptor:]
  -[PUUIMomentsGridViewController photoPickerFileSizeToolbarProvider:presentSizePickerViewController:]
  -[PUUIMomentsGridViewController performPhotoPickerSelection]
  -[PUUIMomentsGridViewController handleToggleSelectionOfItemAtIndexPath:]
  -[PUUIMomentsGridViewController handleNavigateToAsset:inContainer:]
  -[PUUIMomentsGridViewController shouldShowMenu]
  -[PUUIMomentsGridViewController _imagePickerControllerHelper]
  -[PUUIMomentsGridViewController _imagePickerMediaTypes]
  -[PUUIMomentsGridViewController _handleImagePickerCancel:]
  -[PUUIMomentsGridViewController _scrollToBottomIfNeeded]
  -[PUUIMomentsGridViewController referenceValuesDidChange]
  -[PUUIMomentsGridViewController lastKnownSafeAreaInsets]
  -[PUUIMomentsGridViewController lastKnownWidth]
  -[PUUIMomentsGridViewController setLastKnownWidth:]
  -[PUUIMomentsGridViewController setLastKnownSafeAreaInsets:]
  -[PUUIMomentsGridViewController _handleImagePickerMultipleSelectionDone]
  -[PUUIMomentsGridViewController _handleImagePickerSingleSelectionDone]
  -[PUUIMomentsGridViewController _handleImagePickerSelectionDone:]
  -[PUUIMomentsGridViewController initWithModalPresentationStyle:]


PUUIPhotosAlbumViewController : PUPhotosAlbumViewController <PUPhotoPickerFileSizeToolbarProviderDelegate, PUPhotosGridViewSupplementalToolbarDataSource, PUPhotoPickerServicesConsumer, PUPhotoPickerSelectionHandler>
 @property  PUUIImagePickerControllerHelper *_imagePickerControllerHelper
 @property  NSArray *_imagePickerMediaTypes
 @property  int _albumFilter
 @property  BOOL referenceValuesDidChange
 @property  BOOL didDisappear
 @property  double lastKnownWidth
 @property  {UIEdgeInsets=dddd} lastKnownSafeAreaInsets
 @property  PUPhotoPickerResizeTaskDescriptor *resizeTaskDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL anyAssetSelected
 @property  NSArray *selectedAssets
 @property  PUSessionInfo *sessionInfo
 @property  BOOL anyAssetDownloading
 @property  <PUPhotoPicker> *photoPicker

  // instance methods
  -[PUUIPhotosAlbumViewController initWithSpec:]
  -[PUUIPhotosAlbumViewController setDidDisappear:]
  -[PUUIPhotosAlbumViewController viewWillLayoutSubviews]
  -[PUUIPhotosAlbumViewController .cxx_destruct]
  -[PUUIPhotosAlbumViewController viewDidLoad]
  -[PUUIPhotosAlbumViewController viewDidAppear:]
  -[PUUIPhotosAlbumViewController photoPicker]
  -[PUUIPhotosAlbumViewController setPhotoPicker:]
  -[PUUIPhotosAlbumViewController init]
  -[PUUIPhotosAlbumViewController shouldShowSectionHeaders]
  -[PUUIPhotosAlbumViewController viewWillAppear:]
  -[PUUIPhotosAlbumViewController didDisappear]
  -[PUUIPhotosAlbumViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUUIPhotosAlbumViewController canDragIn]
  -[PUUIPhotosAlbumViewController loadView]
  -[PUUIPhotosAlbumViewController viewDidDisappear:]
  -[PUUIPhotosAlbumViewController _setImagePickerMediaTypes:]
  -[PUUIPhotosAlbumViewController canDragOut]
  -[PUUIPhotosAlbumViewController pu_wantsNavigationBarVisible]
  -[PUUIPhotosAlbumViewController setAlbum:existingFetchResult:]
  -[PUUIPhotosAlbumViewController wantsGlobalFooter]
  -[PUUIPhotosAlbumViewController setResizeTaskDescriptor:]
  -[PUUIPhotosAlbumViewController setPhotoPickerMediaTypes:]
  -[PUUIPhotosAlbumViewController resizeTaskDescriptor]
  -[PUUIPhotosAlbumViewController canNavigateToPhotoInteractively:]
  -[PUUIPhotosAlbumViewController isAnyAssetDownloading]
  -[PUUIPhotosAlbumViewController photoPickerFileSizeToolbarProvider:didSelectResizeTaskDescriptor:]
  -[PUUIPhotosAlbumViewController photoPickerFileSizeToolbarProvider:presentSizePickerViewController:]
  -[PUUIPhotosAlbumViewController performPhotoPickerSelection]
  -[PUUIPhotosAlbumViewController filterPredicateForAlbum:]
  -[PUUIPhotosAlbumViewController canBeginStackCollapseTransition]
  -[PUUIPhotosAlbumViewController handleToggleSelectionOfItemAtIndexPath:]
  -[PUUIPhotosAlbumViewController handleNavigateToAsset:inContainer:]
  -[PUUIPhotosAlbumViewController shouldShowMenu]
  -[PUUIPhotosAlbumViewController topMarginForPhotosGlobalFooterView:]
  -[PUUIPhotosAlbumViewController _imagePickerControllerHelper]
  -[PUUIPhotosAlbumViewController _imagePickerMediaTypes]
  -[PUUIPhotosAlbumViewController _handleImagePickerCancel:]
  -[PUUIPhotosAlbumViewController _scrollToBottomIfNeeded]
  -[PUUIPhotosAlbumViewController referenceValuesDidChange]
  -[PUUIPhotosAlbumViewController lastKnownSafeAreaInsets]
  -[PUUIPhotosAlbumViewController lastKnownWidth]
  -[PUUIPhotosAlbumViewController setLastKnownWidth:]
  -[PUUIPhotosAlbumViewController setLastKnownSafeAreaInsets:]
  -[PUUIPhotosAlbumViewController _handleImagePickerMultipleSelectionDone]
  -[PUUIPhotosAlbumViewController _handleImagePickerSingleSelectionDone]
  -[PUUIPhotosAlbumViewController _handleImagePickerSelectionDone:]
  -[PUUIPhotosAlbumViewController _setAlbumFilter:]
  -[PUUIPhotosAlbumViewController _albumFilter]


PUUISaveToCameraRollActivity : UISaveToCameraRollActivity
  // instance methods
  -[PUUISaveToCameraRollActivity activityType]
  -[PUUISaveToCameraRollActivity canPerformWithActivityItems:]
  -[PUUISaveToCameraRollActivity prepareWithActivityItems:]
  -[PUUISaveToCameraRollActivity _containsVideoComplementsInActivityItems:outVideoComplements:]


PUVideoComplementItemSource : NSObject <UIActivityItemSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVideoComplementItemSource activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[PUVideoComplementItemSource activityViewController:dataTypeIdentifierForActivityType:]
  -[PUVideoComplementItemSource .cxx_destruct]
  -[PUVideoComplementItemSource activityViewController:itemForActivityType:]
  -[PUVideoComplementItemSource activityViewControllerPlaceholderItem:]
  -[PUVideoComplementItemSource activityViewControllerSubject:]
  -[PUVideoComplementItemSource _initWithVideoComplement:bundleAtURL:]
  -[PUVideoComplementItemSource initWithVideoComplementBundleAtURL:]
  -[PUVideoComplementItemSource initWithVideoComplement:]


PUUUIDSelectionManager : PXObservable <_PUOneUpSelectionIndicatorCompatibleManager, PUMutableUUIDSelectionManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableSet *_mutableSelectedUUIDs
 @property  NSSet *selectedUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUUUIDSelectionManager performChanges:]
  -[PUUUIDSelectionManager mutableChangeObject]
  -[PUUUIDSelectionManager .cxx_destruct]
  -[PUUUIDSelectionManager init]
  -[PUUUIDSelectionManager initWithSelectedUUIDs:]
  -[PUUUIDSelectionManager isSelectedUUID:]
  -[PUUUIDSelectionManager addSelectedUUID:]
  -[PUUUIDSelectionManager removeSelectedUUID:]
  -[PUUUIDSelectionManager setSelectedUUIDs:]
  -[PUUUIDSelectionManager selectedUUIDs]
  -[PUUUIDSelectionManager pu_unregisterSelectionIndicatorObserver:]
  -[PUUUIDSelectionManager pu_registerSelectionIndicatorObserver:]
  -[PUUUIDSelectionManager pu_isAssetReferenceSelected:]
  -[PUUUIDSelectionManager deselectAllUUIDs]
  -[PUUUIDSelectionManager _mutableSelectedUUIDs]


PUUserTransformTileLayoutInfo : PUTileLayoutInfo
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} untransformedContentFrame
 @property  PUDisplayTileTransform *displayTileTransform

  // instance methods
  -[PUUserTransformTileLayoutInfo untransformedContentFrame]
  -[PUUserTransformTileLayoutInfo displayTileTransform]
  -[PUUserTransformTileLayoutInfo isGeometryEqualToLayoutInfo:]
  -[PUUserTransformTileLayoutInfo clone]
  -[PUUserTransformTileLayoutInfo .cxx_destruct]
  -[PUUserTransformTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:]
  -[PUUserTransformTileLayoutInfo initWithTileIdentifier:center:size:alpha:transform:zPosition:coordinateSystem:untransformedContentFrame:displayTileTransform:]


PUUserTransformTileViewController : PUTileViewController <PUUserTransformViewDelegate, PUAssetViewModelChangeObserver, PUBrowsingViewModelChangeObserver, PXVKImageAnalysisInteractionDelegate>
 @property  PUUserTransformView *userTransformView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _untransformedContentFrame
 @property  NSString *_identifier
 @property  PUDisplayTileTransform *displayTileTransform
 @property  <PXVKImageAnalysisInteraction> *imageInteraction
 @property  <PXVKImageAnalysis> *imageAnalysis
 @property  <PUUserTransformTileViewControllerDelegate> *delegate
 @property  PUAssetViewModel *assetViewModel
 @property  PUBrowsingViewModel *browsingViewModel
 @property  BOOL userInteractionEnabled
 @property  BOOL visualImageInteractionEnabled
 @property  BOOL hasActiveTextSelection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUUserTransformTileViewController assetViewModel]
  -[PUUserTransformTileViewController imageInteraction]
  -[PUUserTransformTileViewController _setIdentifier:]
  -[PUUserTransformTileViewController applyLayoutInfo:]
  -[PUUserTransformTileViewController browsingViewModel]
  -[PUUserTransformTileViewController setAssetViewModel:]
  -[PUUserTransformTileViewController becomeReusable]
  -[PUUserTransformTileViewController didChangeAnimating]
  -[PUUserTransformTileViewController _handleBrowsingViewModel:didChange:]
  -[PUUserTransformTileViewController visualImageInteractionEnabled]
  -[PUUserTransformTileViewController setBrowsingViewModel:]
  -[PUUserTransformTileViewController setImageInteraction:]
  -[PUUserTransformTileViewController setVisualImageInteractionEnabled:]
  -[PUUserTransformTileViewController _configureVisualImageOverlay]
  -[PUUserTransformTileViewController setUserInteractionEnabled:]
  -[PUUserTransformTileViewController _userInputOriginIdentifier]
  -[PUUserTransformTileViewController displayTileTransform]
  -[PUUserTransformTileViewController contentViewForImageAnalysisInteraction:]
  -[PUUserTransformTileViewController userTransformView]
  -[PUUserTransformTileViewController _updateUserTransformPadding]
  -[PUUserTransformTileViewController _handleAssetViewModel:didChange:]
  -[PUUserTransformTileViewController imageAnalysis]
  -[PUUserTransformTileViewController userTransformView:shouldReceiveTouchAtPoint:]
  -[PUUserTransformTileViewController .cxx_destruct]
  -[PUUserTransformTileViewController _needsVisualImageOverlay]
  -[PUUserTransformTileViewController userTransformView:didChangeUserAffineTransform:isUserInteracting:]
  -[PUUserTransformTileViewController _setUserTransformView:]
  -[PUUserTransformTileViewController setDelegate:]
  -[PUUserTransformTileViewController userInteractionEnabled]
  -[PUUserTransformTileViewController viewModel:didChange:]
  -[PUUserTransformTileViewController _resetVisualImageOverlay]
  -[PUUserTransformTileViewController _identifier]
  -[PUUserTransformTileViewController _updateUserTransformView]
  -[PUUserTransformTileViewController _updateVisualImageOverlay]
  -[PUUserTransformTileViewController _updateUserInteractionEnabled]
  -[PUUserTransformTileViewController textExistsAtPoint:]
  -[PUUserTransformTileViewController delegate]
  -[PUUserTransformTileViewController userTransformView:didChangeIsUserInteracting:]
  -[PUUserTransformTileViewController _setUntransformedContentFrame:]
  -[PUUserTransformTileViewController _untransformedContentFrame]
  -[PUUserTransformTileViewController initWithReuseIdentifier:]
  -[PUUserTransformTileViewController hasActiveTextSelection]
  -[PUUserTransformTileViewController dealloc]
  -[PUUserTransformTileViewController loadView]
  -[PUUserTransformTileViewController setDisplayTileTransform:]
  -[PUUserTransformTileViewController setImageAnalysis:]


PUUserTransformView : UIView <UIScrollViewDelegate>
 @property  UIScrollView *_scrollView
 @property  UIView *_scrollContentView
 @property  double _doubleTapZoomScale
 @property  BOOL _updatingScrollView
 @property  BOOL _isUserPanning
 @property  BOOL _isUserDeceleratingPan
 @property  BOOL _isUserZooming
 @property  BOOL _isUserEndingZoom
 @property  BOOL _isUserPanningOrDecelerating
 @property  BOOL _isUserZoomingOrBouncing
 @property  BOOL isUserInteracting
 @property  BOOL _shouldTrackContentAnimation
 @property  BOOL _isContentAnimating
 @property  {CGPoint=dd} _contentCenter
 @property  double _contentZoomScale
 @property  BOOL _isAnimatingZoomEnd
 @property  long long _numberOfNestedStateChanges
 @property  BOOL _isUpdatingState
 @property  BOOL _wasUserInteractingBeforeStateUpdate
 @property  BOOL _needsUpdateUserPanningOrDecelerating
 @property  BOOL _needsUpdateUserZoomingOrBouncing
 @property  BOOL _needsUpdateUserInteracting
 @property  BOOL _needsUpdateShouldTrackContentAnimation
 @property  BOOL _needsUpdateUserAffineTransform
 @property  BOOL _needsUpdateContentState
 @property  BOOL _needsUpdateAnimatingZoomEnd
 @property  CADisplayLink *_displayLink
 @property  double _desiredZoomScale
 @property  double _preferredMinimumZoomScale
 @property  double _preferredMaximumZoomScale
 @property  long long _numberOfNestedZoomAndScrollChanges
 @property  BOOL _needsUpdateZoomAndScroll
 @property  BOOL _needsUpdateScrollView
 @property  UIImage *debugScrollViewContentImage
 @property  UIView *scrollContentView
 @property  <PUUserTransformViewDelegate> *delegate
 @property  {CGSize=dd} contentPixelSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} untransformedContentFrame
 @property  {CGAffineTransform=dddddd} userAffineTransform
 @property  unsigned long enabledInteractions
 @property  {CGSize=dd} scrollPadding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUUserTransformView _setDoubleTapZoomScale:]
  -[PUUserTransformView scrollViewWillBeginZooming:withView:]
  -[PUUserTransformView _setUserZoomingOrBouncing:]
  -[PUUserTransformView _needsUpdateAnimatingZoomEnd]
  -[PUUserTransformView _updateAnimatingZoomEndIfNeeded]
  -[PUUserTransformView untransformedContentFrame]
  -[PUUserTransformView _assertInsideStateUpdate]
  -[PUUserTransformView _isContentAnimating]
  -[PUUserTransformView _willChangeState]
  -[PUUserTransformView _contentOffsetAdjustmentForContentInsets:]
  -[PUUserTransformView _setNeedsUpdateShouldTrackContentAnimation:]
  -[PUUserTransformView _setContentAnimating:]
  -[PUUserTransformView viewForZoomingInScrollView:]
  -[PUUserTransformView _needsUpdateShouldTrackContentAnimation]
  -[PUUserTransformView setContentPixelSize:]
  -[PUUserTransformView _setPreferredMaximumZoomScale:]
  -[PUUserTransformView setEnabledInteractions:]
  -[PUUserTransformView _invalidateUserZoomingOrBouncing]
  -[PUUserTransformView contentContainsLocationFromProvider:]
  -[PUUserTransformView _needsUpdateScrollView]
  -[PUUserTransformView _preferredMinimumZoomScale]
  -[PUUserTransformView _setNeedsUpdateScrollView:]
  -[PUUserTransformView handleDoubleTapWithLocationProvider:]
  -[PUUserTransformView _isUserPanningOrDecelerating]
  -[PUUserTransformView _assertInsideZoomAndScrollChangeBlock]
  -[PUUserTransformView .cxx_destruct]
  -[PUUserTransformView _numberOfNestedZoomAndScrollChanges]
  -[PUUserTransformView _invalidateUserInteracting]
  -[PUUserTransformView _setUserPanning:]
  -[PUUserTransformView layoutSubviews]
  -[PUUserTransformView _updateUserZoomingOrBouncingIfNeeded]
  -[PUUserTransformView _setNumberOfNestedStateChanges:]
  -[PUUserTransformView _setUserPanningOrDecelerating:]
  -[PUUserTransformView _desiredZoomScale]
  -[PUUserTransformView _setNeedsStateUpdate]
  -[PUUserTransformView _invalidateContentState]
  -[PUUserTransformView setDelegate:]
  -[PUUserTransformView scrollViewDidZoom:]
  -[PUUserTransformView _scrollContentView]
  -[PUUserTransformView _invalidateUserAffineTransform]
  -[PUUserTransformView _setUpdatingState:]
  -[PUUserTransformView _setNeedsUpdateUserInteracting:]
  -[PUUserTransformView _updateUserAffineTransformIfNeeded]
  -[PUUserTransformView _scrollView]
  -[PUUserTransformView _didChangeState]
  -[PUUserTransformView scrollViewDidEndZooming:withView:atScale:]
  -[PUUserTransformView _needsStateUpdate]
  -[PUUserTransformView _setNeedsUpdateUserPanningOrDecelerating:]
  -[PUUserTransformView _updateContentStateIfNeeded]
  -[PUUserTransformView _setPreferredMinimumZoomScale:]
  -[PUUserTransformView _needsUpdateUserAffineTransform]
  -[PUUserTransformView _wasUserInteractingBeforeStateUpdate]
  -[PUUserTransformView userAffineTransform]
  -[PUUserTransformView _updateDisplayLink]
  -[PUUserTransformView _invalidateScrollView]
  -[PUUserTransformView _isAnimatingZoomEnd]
  -[PUUserTransformView _setContentCenter:]
  -[PUUserTransformView scrollViewDidEndDragging:willDecelerate:]
  -[PUUserTransformView _setEnabledInteractions:]
  -[PUUserTransformView scrollViewDidScroll:]
  -[PUUserTransformView setDebugScrollViewContentImage:]
  -[PUUserTransformView _isUpdatingState]
  -[PUUserTransformView scrollContentView]
  -[PUUserTransformView _needsUpdateZoomAndScroll]
  -[PUUserTransformView _setNeedsUpdateUserZoomingOrBouncing:]
  -[PUUserTransformView _updateShouldTrackContentAnimationIfNeeded]
  -[PUUserTransformView _invalidateZoomAndScroll]
  -[PUUserTransformView debugScrollViewContentImage]
  -[PUUserTransformView _invalidateUserPanningOrDecelerating]
  -[PUUserTransformView _setNeedsUpdateUserAffineTransform:]
  -[PUUserTransformView _updateStateIfNeeded]
  -[PUUserTransformView _preferredMaximumZoomScale]
  -[PUUserTransformView _setAnimatingZoomEnd:]
  -[PUUserTransformView _setContentZoomScale:]
  -[PUUserTransformView _setUserAffineTransform:]
  -[PUUserTransformView _needsUpdateUserPanningOrDecelerating]
  -[PUUserTransformView _needsUpdateUserZoomingOrBouncing]
  -[PUUserTransformView enabledInteractions]
  -[PUUserTransformView scrollViewWillBeginDragging:]
  -[PUUserTransformView scrollPadding]
  -[PUUserTransformView _invalidateAnimatingZoomEnd]
  -[PUUserTransformView isUserInteracting]
  -[PUUserTransformView initWithFrame:]
  -[PUUserTransformView _invalidateShouldTrackContentAnimation]
  -[PUUserTransformView _setShouldTrackContentAnimation:]
  -[PUUserTransformView pointInside:withEvent:]
  -[PUUserTransformView delegate]
  -[PUUserTransformView _shouldTrackContentAnimation]
  -[PUUserTransformView _handleDisplayLink:]
  -[PUUserTransformView _setNeedsUpdateZoomAndScroll:]
  -[PUUserTransformView _setNeedsUpdateContentState:]
  -[PUUserTransformView _isUserEndingZoom]
  -[PUUserTransformView _contentZoomScale]
  -[PUUserTransformView _setUserZooming:]
  -[PUUserTransformView _needsUpdateUserInteracting]
  -[PUUserTransformView contentPixelSize]
  -[PUUserTransformView _setDisplayLink:]
  -[PUUserTransformView _setUserEndingZoom:]
  -[PUUserTransformView _updateUserPanningOrDeceleratingIfNeeded]
  -[PUUserTransformView _setUserInteracting:]
  -[PUUserTransformView _isUserZoomingOrBouncing]
  -[PUUserTransformView _needsUpdateContentState]
  -[PUUserTransformView _isUserPanning]
  -[PUUserTransformView _doubleTapZoomScale]
  -[PUUserTransformView _displayLink]
  -[PUUserTransformView setScrollPadding:]
  -[PUUserTransformView _setUpdatingScrollView:]
  -[PUUserTransformView _setNumberOfNestedZoomAndScrollChanges:]
  -[PUUserTransformView _numberOfNestedStateChanges]
  -[PUUserTransformView _isUserZooming]
  -[PUUserTransformView setUntransformedContentFrame:]
  -[PUUserTransformView _isUpdatingScrollView]
  -[PUUserTransformView _contentInsetsForContentScale:]
  -[PUUserTransformView _updateScrollViewIfNeeded]
  -[PUUserTransformView scrollViewDidEndDecelerating:]
  -[PUUserTransformView _setUserDeceleratingPan:]
  -[PUUserTransformView _contentCenter]
  -[PUUserTransformView setUserAffineTransform:]
  -[PUUserTransformView _performStateChanges:]
  -[PUUserTransformView _setDesiredZoomScale:]
  -[PUUserTransformView _setWasUserInteractingBeforeStateUpdate:]
  -[PUUserTransformView _performZoomAndScrollChanges:]
  -[PUUserTransformView _isUserDeceleratingPan]
  -[PUUserTransformView _assertInsideStateChangeBlock]
  -[PUUserTransformView _updateUserInteractingIfNeeded]
  -[PUUserTransformView _updateZoomAndScrollIfNeeded]
  -[PUUserTransformView _setNeedsUpdateAnimatingZoomEnd:]


_PUUserTransformScrollView : UIScrollView
  // class methods
  +[_PUUserTransformScrollView _defaultEdgesScrollingContentIntoSafeArea]

  // instance methods
  -[_PUUserTransformScrollView _registerForRotation:ofWindow:]


PUValueFilter : NSObject
 @property  double currentValue

  // instance methods
  -[PUValueFilter currentValue]
  -[PUValueFilter setInputValue:]
  -[PUValueFilter init]
  -[PUValueFilter initWithValue:]
  -[PUValueFilter outputValue]
  -[PUValueFilter setCurrentValue:]
  -[PUValueFilter updatedValue:withTargetValue:]


PUBlockValueFilter : PUValueFilter
 @property  @? operationBlock

  // instance methods
  -[PUBlockValueFilter .cxx_destruct]
  -[PUBlockValueFilter updatedValue:withTargetValue:]
  -[PUBlockValueFilter operationBlock]
  -[PUBlockValueFilter setOperationBlock:]


PUClampValueFilter : PUValueFilter
 @property  double minimumValue
 @property  double maximumValue

  // instance methods
  -[PUClampValueFilter setMaximumValue:]
  -[PUClampValueFilter minimumValue]
  -[PUClampValueFilter setMinimumValue:]
  -[PUClampValueFilter maximumValue]
  -[PUClampValueFilter updatedValue:withTargetValue:]


PUSoftClampValueFilter : PUClampValueFilter
 @property  double resistance

  // class methods
  +[PUSoftClampValueFilter scrollViewFilter]

  // instance methods
  -[PUSoftClampValueFilter resistance]
  -[PUSoftClampValueFilter setResistance:]
  -[PUSoftClampValueFilter updatedValue:withTargetValue:]


PUAngleValueFilter : PUValueFilter
  // instance methods
  -[PUAngleValueFilter updatedValue:withTargetValue:]


PUInitialHysteresisValueFilter : PUValueFilter
 @property  double thresholdValue
 @property  double outputValueDerivative

  // instance methods
  -[PUInitialHysteresisValueFilter setThresholdValue:]
  -[PUInitialHysteresisValueFilter updatedValue:withTargetValue:]
  -[PUInitialHysteresisValueFilter thresholdValue]
  -[PUInitialHysteresisValueFilter outputValueDerivative]


PUChangeDirectionValueFilter : PUValueFilter
 @property  double minimumChangeValue

  // instance methods
  -[PUChangeDirectionValueFilter setMinimumChangeValue:]
  -[PUChangeDirectionValueFilter updatedValue:withTargetValue:]
  -[PUChangeDirectionValueFilter minimumChangeValue]


PUThresholdCrossingCountValueFilter : PUValueFilter
 @property  double thresholdValue
 @property  long long maximumCrossingCount

  // instance methods
  -[PUThresholdCrossingCountValueFilter setThresholdValue:]
  -[PUThresholdCrossingCountValueFilter setMaximumCrossingCount:]
  -[PUThresholdCrossingCountValueFilter updatedValue:withTargetValue:]
  -[PUThresholdCrossingCountValueFilter thresholdValue]
  -[PUThresholdCrossingCountValueFilter maximumCrossingCount]


PUDynamicValueFilter : PUValueFilter
 @property  double targetValue
 @property  double currentTime

  // instance methods
  -[PUDynamicValueFilter targetValue]
  -[PUDynamicValueFilter setInputValue:]
  -[PUDynamicValueFilter setCurrentTime:]
  -[PUDynamicValueFilter init]
  -[PUDynamicValueFilter _update]
  -[PUDynamicValueFilter currentTime]
  -[PUDynamicValueFilter setTargetValue:]
  -[PUDynamicValueFilter outputValue]
  -[PUDynamicValueFilter updatedValue:withTargetValue:timeInterval:]
  -[PUDynamicValueFilter outputValueChangeRate]


PUMaximumChangeRateValueFilter : PUDynamicValueFilter
 @property  double maximumChangeRate

  // instance methods
  -[PUMaximumChangeRateValueFilter setMaximumChangeRate:]
  -[PUMaximumChangeRateValueFilter updatedValue:withTargetValue:timeInterval:]
  -[PUMaximumChangeRateValueFilter maximumChangeRate]


PUVelocityFilter : PUDynamicValueFilter
 @property  double _minimumSampleInterval
 @property  double _previousVelocityWeight

  // class methods
  +[PUVelocityFilter gestureVelocityFilter]

  // instance methods
  -[PUVelocityFilter setInputValue:]
  -[PUVelocityFilter init]
  -[PUVelocityFilter outputValue]
  -[PUVelocityFilter _setMinimumSampleInterval:]
  -[PUVelocityFilter _setPreviousVelocityWeight:]
  -[PUVelocityFilter _minimumSampleInterval]
  -[PUVelocityFilter _previousVelocityWeight]


PUGroupValueFilter : PUValueFilter
 @property  NSArray *filters

  // instance methods
  -[PUGroupValueFilter setFilters:]
  -[PUGroupValueFilter filters]
  -[PUGroupValueFilter .cxx_destruct]
  -[PUGroupValueFilter setInputValue:]
  -[PUGroupValueFilter outputValue]


PUVideoEditPluginDataSource : NSObject <PUVideoEditPluginSessionDataSource>
 @property  PHAsset *videoAsset
 @property  BOOL allowsRevertInSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVideoEditPluginDataSource .cxx_destruct]
  -[PUVideoEditPluginDataSource init]
  -[PUVideoEditPluginDataSource videoAsset]
  -[PUVideoEditPluginDataSource _renderTemporaryVideoForObjectBuilder:resultHandler:]
  -[PUVideoEditPluginDataSource _requestRenderedVideoForVideoURL:adjustmentData:canHandleAdjustmentData:resultHandler:]
  -[PUVideoEditPluginDataSource editPluginSession:loadAdjustmentDataWithHandler:]
  -[PUVideoEditPluginDataSource editPluginSession:commitContentEditingOutput:withCompletionHandler:]
  -[PUVideoEditPluginDataSource setVideoAsset:]
  -[PUVideoEditPluginDataSource editPluginSession:loadPlaceholderImageWithHandler:]
  -[PUVideoEditPluginDataSource editPluginSessionCanRevertToOriginal:]
  -[PUVideoEditPluginDataSource editPluginSession:revertToOriginalWithCompletionHandler:]
  -[PUVideoEditPluginDataSource editPluginSession:loadVideoURLWithHandler:]
  -[PUVideoEditPluginDataSource initWithVideoAsset:]
  -[PUVideoEditPluginDataSource setAllowsRevertInSession:]
  -[PUVideoEditPluginDataSource allowsRevertInSession]
  -[PUVideoEditPluginDataSource _fetchCanRevertAsset:asynchronously:handler:]


PUVideoEditPluginSession : PUEditPluginSession
 @property  BOOL allowLoopingVideoExtensions

  // instance methods
  -[PUVideoEditPluginSession pluginManagerMediaType]
  -[PUVideoEditPluginSession loadItemProviderWithSupportedAdjustmentData:loadHandler:]
  -[PUVideoEditPluginSession setAllowLoopingVideoExtensions:]
  -[PUVideoEditPluginSession allowLoopingVideoExtensions]
  -[PUVideoEditPluginSession videoDataSource]


PUCompositeVideoActivity : PXActivity <PXChangeObserver>
 @property  UIViewController *presenterViewController
 @property  PXAlertController *progressController
 @property  PUCompositeVideoGenerator *generator
 @property  AVAssetExportSession *exportSession
 @property  BOOL cancelled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCompositeVideoActivity setGenerator:]
  -[PUCompositeVideoActivity activityViewController]
  -[PUCompositeVideoActivity .cxx_destruct]
  -[PUCompositeVideoActivity _systemImageName]
  -[PUCompositeVideoActivity activityType]
  -[PUCompositeVideoActivity setCancelled:]
  -[PUCompositeVideoActivity presenterViewController]
  -[PUCompositeVideoActivity canPerformWithActivityItems:]
  -[PUCompositeVideoActivity isCancelled]
  -[PUCompositeVideoActivity progressController]
  -[PUCompositeVideoActivity setProgressController:]
  -[PUCompositeVideoActivity prepareWithActivityItems:]
  -[PUCompositeVideoActivity _presentActivityOnViewController:animated:completion:]
  -[PUCompositeVideoActivity activityTitle]
  -[PUCompositeVideoActivity generator]
  -[PUCompositeVideoActivity setPresenterViewController:]
  -[PUCompositeVideoActivity observable:didChange:context:]
  -[PUCompositeVideoActivity setExportSession:]
  -[PUCompositeVideoActivity exportSession]
  -[PUCompositeVideoActivity _finishWithSuccess:cancelled:]
  -[PUCompositeVideoActivity _exportGeneratedVideo]
  -[PUCompositeVideoActivity _sucessfullyFinishedSaving:error:]


PUVideoListAssetActionManager : PUPhotoKitAssetActionManager
 @property  <PUVideoListAssetExpungeActionPerformerDelegate> *actionPerformerDelegate

  // instance methods
  -[PUVideoListAssetActionManager .cxx_destruct]
  -[PUVideoListAssetActionManager actionPerformerForSimpleActionType:onAssetsByAssetCollection:]
  -[PUVideoListAssetActionManager canPerformActionType:onAsset:inAssetCollection:]
  -[PUVideoListAssetActionManager preferredTrashActionTypeOnAssetsByAssetCollection:]
  -[PUVideoListAssetActionManager shouldEnableActionType:onAllAssetsByAssetCollection:]
  -[PUVideoListAssetActionManager actionPerformerDelegate]
  -[PUVideoListAssetActionManager setActionPerformerDelegate:]


PUSidebarDataController : PXSidebarDataController
 @property  NSOperationQueue *workQueue
 @property  UIImage *emptyAlbumPlaceholderImage
 @property  PUStackView *reusableStackView

  // class methods
  +[PUSidebarDataController myAlbumsDataSectionManagerForPhotoLibrary:withWorkQueue:]
  +[PUSidebarDataController sharedAlbumsDataSectionManagerWithWorkQueue:]
  +[PUSidebarDataController otherAlbumsDataSectionManagerWithWorkQueue:sectionEnablementProvider:]
  +[PUSidebarDataController fromMyMacAlbumsDataSectionManagerWithWorkQueue:]
  +[PUSidebarDataController _prepareConfiguration:]
  +[PUSidebarDataController _actionManagerWithActionType:]

  // instance methods
  -[PUSidebarDataController setEmptyAlbumPlaceholderImage:]
  -[PUSidebarDataController .cxx_destruct]
  -[PUSidebarDataController emptyAlbumPlaceholderImage]
  -[PUSidebarDataController appearanceDidChange]
  -[PUSidebarDataController requestImageForItem:parentItem:completion:]
  -[PUSidebarDataController _singleItemDataSourceManagerForCollection:workQueue:]
  -[PUSidebarDataController backedPlusButtonImage]
  -[PUSidebarDataController reusableStackView]
  -[PUSidebarDataController _requestImageForAsset:size:completion:]
  -[PUSidebarDataController _createReusableStackViewWithTargetSize:]
  -[PUSidebarDataController sidebarCustomSymbolImageWithName:symbolColor:scale:]
  -[PUSidebarDataController sectionManagersForLibrary:workQueue:sectionEnablementProvider:]
  -[PUSidebarDataController setReusableStackView:]


PUVideoListAssetExpungeActionPerformer : PUAssetActionPerformer <PUDeletePhotosActionControllerDelegate>
 @property  <PUVideoListAssetExpungeActionPerformerDelegate> *actionPerformerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUVideoListAssetExpungeActionPerformer shouldEnableOnAsset:inAssetCollection:]
  +[PUVideoListAssetExpungeActionPerformer canPerformOnAsset:inAssetCollection:]

  // instance methods
  -[PUVideoListAssetExpungeActionPerformer performUserInteractionTask]
  -[PUVideoListAssetExpungeActionPerformer .cxx_destruct]
  -[PUVideoListAssetExpungeActionPerformer performBackgroundTask]
  -[PUVideoListAssetExpungeActionPerformer deletePhotosActionController:presentConfirmationViewController:]
  -[PUVideoListAssetExpungeActionPerformer deletePhotosActionController:dismissConfirmationViewController:]
  -[PUVideoListAssetExpungeActionPerformer actionPerformerDelegate]
  -[PUVideoListAssetExpungeActionPerformer setActionPerformerDelegate:]
  -[PUVideoListAssetExpungeActionPerformer _performUserInteractionTask]


PUVideoListBrowsingSession : PUBrowsingSession
  // class methods
  +[PUVideoListBrowsingSession newBrowsingSessionWithDataSource:actionPerformerDelegate:]


PUVideoListContentUnavailableView : UIView
 @property  UILabel *messageLabel1
 @property  UILabel *messageLabel2
 @property  NSArray *constraints
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} safeAreaLayoutGuideFrameRect

  // instance methods
  -[PUVideoListContentUnavailableView _setConstraints:]
  -[PUVideoListContentUnavailableView constraints]
  -[PUVideoListContentUnavailableView updateConstraints]
  -[PUVideoListContentUnavailableView .cxx_destruct]
  -[PUVideoListContentUnavailableView _invalidateConstraints]
  -[PUVideoListContentUnavailableView _messageLabel]
  -[PUVideoListContentUnavailableView _updateConstraintsIfNeeded]
  -[PUVideoListContentUnavailableView initWithFrame:]
  -[PUVideoListContentUnavailableView _setMessageText:toLabel:]
  -[PUVideoListContentUnavailableView safeAreaLayoutGuideFrameRect]
  -[PUVideoListContentUnavailableView setSafeAreaLayoutGuideFrameRect:]
  -[PUVideoListContentUnavailableView messageLabel1]
  -[PUVideoListContentUnavailableView setMessageLabel1:]
  -[PUVideoListContentUnavailableView messageLabel2]
  -[PUVideoListContentUnavailableView setMessageLabel2:]


PUVideoListItemView : UIView
 @property  UIImage *videoThumbnail
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *sizeInGB
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UILabel *sizeLabel
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  NSArray *constraints
 @property  PHImageRequestOptions *_imageRequestOptions
 @property  UIImageView *videoThumbnailView

  // instance methods
  -[PUVideoListItemView titleLabel]
  -[PUVideoListItemView setSubtitleLabel:]
  -[PUVideoListItemView _dateFormatter]
  -[PUVideoListItemView _setConstraints:]
  -[PUVideoListItemView setContentInsets:]
  -[PUVideoListItemView setTitle:]
  -[PUVideoListItemView constraints]
  -[PUVideoListItemView updateConstraints]
  -[PUVideoListItemView contentInsets]
  -[PUVideoListItemView .cxx_destruct]
  -[PUVideoListItemView _currentLocale]
  -[PUVideoListItemView setTitleLabel:]
  -[PUVideoListItemView setSubtitle:]
  -[PUVideoListItemView _invalidateConstraints]
  -[PUVideoListItemView subtitleLabel]
  -[PUVideoListItemView sizeLabel]
  -[PUVideoListItemView subtitle]
  -[PUVideoListItemView setSizeLabel:]
  -[PUVideoListItemView _updateConstraintsIfNeeded]
  -[PUVideoListItemView title]
  -[PUVideoListItemView sizeInGB]
  -[PUVideoListItemView initWithFrame:]
  -[PUVideoListItemView _imageRequestOptions]
  -[PUVideoListItemView videoThumbnailView]
  -[PUVideoListItemView setVideoThumbnail:]
  -[PUVideoListItemView _titleFromDate:]
  -[PUVideoListItemView _subtitleForAsset:]
  -[PUVideoListItemView setSizeInGB:]
  -[PUVideoListItemView _createTextLabel]
  -[PUVideoListItemView isSubtitleDisplayable]
  -[PUVideoListItemView updateItemViewWithAsset:]
  -[PUVideoListItemView videoThumbnail]


PUVideoListViewController : PUStorageManagementBaseController <UITableViewDataSource, UITableViewDelegate, UITableViewDataSource, UITableViewDelegate, PXPhotosDataSourceChangeObserver, PUOneUpPresentationHelperDelegate, PUOneUpPresentationHelperAssetDisplayDelegate, PUDeletePhotosActionControllerDelegate, PUVideoListAssetExpungeActionPerformerDelegate, UIScrollViewDelegate>
 @property  PUOneUpPresentationHelper *_oneUpPresentationHelper
 @property  PXPhotosDataSource *_dataSource
 @property  PXPhotosDataSourceConfiguration *_dataSourceManagerConfiguration
 @property  PXPhotoKitAssetsDataSourceManager *_photoKitDataSourceManager
 @property  PHImageRequestOptions *_imageRequestOptions
 @property  UIViewController *_expungeActionSheet
 @property  UITableView *_mainTableView
 @property  BOOL _viewInSyncWithModel
 @property  BOOL _assetsFetchResultIsValid
 @property  NSIndexPath *_lastNavigatedAssetIndexPath
 @property  PUVideoListContentUnavailableView *_contentUnavailableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVideoListViewController photosDataSource:didChange:]
  -[PUVideoListViewController tableView:canEditRowAtIndexPath:]
  -[PUVideoListViewController _updateIfNeeded]
  -[PUVideoListViewController oneUpPresentationHelperAdditionalOptions:]
  -[PUVideoListViewController numberOfSectionsInTableView:]
  -[PUVideoListViewController tableView:numberOfRowsInSection:]
  -[PUVideoListViewController _deleteBarButtonItem]
  -[PUVideoListViewController tableView:heightForRowAtIndexPath:]
  -[PUVideoListViewController .cxx_destruct]
  -[PUVideoListViewController tableView:didDeselectRowAtIndexPath:]
  -[PUVideoListViewController tableView:didSelectRowAtIndexPath:]
  -[PUVideoListViewController viewDidLoad]
  -[PUVideoListViewController tableView:cellForRowAtIndexPath:]
  -[PUVideoListViewController _photoKitDataSourceManager]
  -[PUVideoListViewController viewDidAppear:]
  -[PUVideoListViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[PUVideoListViewController oneUpPresentationHelperShouldLeaveContentOnSecondScreen:]
  -[PUVideoListViewController _oneUpPresentationHelper]
  -[PUVideoListViewController assetsInAssetCollection:]
  -[PUVideoListViewController _dataSource]
  -[PUVideoListViewController _needsUpdate]
  -[PUVideoListViewController oneUpPresentationHelperViewController:]
  -[PUVideoListViewController oneUpPresentationOrigin:]
  -[PUVideoListViewController oneUpPresentationHelperPreferredBarStyle:]
  -[PUVideoListViewController viewWillDisappear:]
  -[PUVideoListViewController _setDataSource:]
  -[PUVideoListViewController viewDidLayoutSubviews]
  -[PUVideoListViewController viewWillAppear:]
  -[PUVideoListViewController oneUpPresentationHelper:regionOfInterestForAssetReference:cropInsets:contentsRect:]
  -[PUVideoListViewController dealloc]
  -[PUVideoListViewController tableView:editingStyleForRowAtIndexPath:]
  -[PUVideoListViewController _cancelBarButtonItem]
  -[PUVideoListViewController viewDidDisappear:]
  -[PUVideoListViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[PUVideoListViewController _imageRequestOptions]
  -[PUVideoListViewController _mainTableView]
  -[PUVideoListViewController _updateMainView]
  -[PUVideoListViewController updateListCellForItemAtIndexPath:animated:]
  -[PUVideoListViewController _invalidatePreparedCellsConfiguration]
  -[PUVideoListViewController _setMainTableView:]
  -[PUVideoListViewController updateInterfaceLayoutIfNecessary]
  -[PUVideoListViewController _dataSourceManagerConfiguration]
  -[PUVideoListViewController assetCollectionsFetchResult]
  -[PUVideoListViewController deletePhotosActionController:presentConfirmationViewController:]
  -[PUVideoListViewController preferredAlertControllerStyleForDeletePhotosActionController:]
  -[PUVideoListViewController _ensureOneUpPresentationHelper]
  -[PUVideoListViewController _setOneUpPresentationHelper:]
  -[PUVideoListViewController oneUpPresentationHelper:transitionTypeWithProposedTransitionType:]
  -[PUVideoListViewController oneUpPresentationHelper:didDismissOneUpViewController:]
  -[PUVideoListViewController photoCollectionAtIndex:]
  -[PUVideoListViewController _contentUnavailableView]
  -[PUVideoListViewController processDataSourceChange:]
  -[PUVideoListViewController _setViewInSyncWithModel:]
  -[PUVideoListViewController _isViewInSyncWithModel]
  -[PUVideoListViewController actionPerformer:excludeAssetsFromDataSource:]
  -[PUVideoListViewController actionPerformer:stopExcludingAssetsFromDataSource:]
  -[PUVideoListViewController _updateAssetsFetchResultIfNeeded]
  -[PUVideoListViewController _installContentUnavailableView]
  -[PUVideoListViewController _installVideoListView]
  -[PUVideoListViewController _updateSubviewsOrderingAndVisibilityWithVideoCounts:]
  -[PUVideoListViewController _reloadContentView]
  -[PUVideoListViewController _lastNavigatedAssetIndexPath]
  -[PUVideoListViewController _setLastNavigatedAssetIndexPath:]
  -[PUVideoListViewController selectVideoItems:]
  -[PUVideoListViewController deleteSelectedItems:]
  -[PUVideoListViewController cancelEditingMode:]
  -[PUVideoListViewController _setLeftBarButtonItem:animated:]
  -[PUVideoListViewController _numberOfSelectedCellsForDelete]
  -[PUVideoListViewController _setRightBarButtonItem:animated:]
  -[PUVideoListViewController _editBarButtonItem]
  -[PUVideoListViewController _configureTableView:]
  -[PUVideoListViewController _updateNavigationBarAnimated:]
  -[PUVideoListViewController _updatePreparedCellsConfiguration]
  -[PUVideoListViewController _tableViewCellContentViewAtIndexPath:]
  -[PUVideoListViewController updateVideoListCellContentView:forItemAtIndexPath:animated:]
  -[PUVideoListViewController _deleteItemsAtSelectedIndexes:]
  -[PUVideoListViewController _clearAllIndexPathsForDeleteSelection]
  -[PUVideoListViewController _setExpungeActionSheet:]
  -[PUVideoListViewController _headerViewForTableView:]
  -[PUVideoListViewController _addIndexPathToDeleteSelection:]
  -[PUVideoListViewController _presentOneUpViewControllerForAssetAtInderxPath:]
  -[PUVideoListViewController _removeIndexPathFromDeleteSelection:]
  -[PUVideoListViewController _createBrowsingSessionForPresentationHelper]
  -[PUVideoListViewController _setAssetsFetchResultIsValid:]
  -[PUVideoListViewController _setDataSourceManagerConfiguration:]
  -[PUVideoListViewController _videoThumbnailViewForAssetAtIndexPath:]
  -[PUVideoListViewController _shouldUpdateTableViewForDataSource:]
  -[PUVideoListViewController _videoCell]
  -[PUVideoListViewController set_photoKitDataSourceManager:]
  -[PUVideoListViewController _expungeActionSheet]
  -[PUVideoListViewController _assetsFetchResultIsValid]
  -[PUVideoListViewController _setContentUnavailableView:]


PUVideoPlaceholderTileViewController : PUTileViewController
  // instance methods
  -[PUVideoPlaceholderTileViewController loadView]


_PUVideoView : UIView
  // class methods
  +[_PUVideoView layerClass]

  // instance methods
  -[_PUVideoView .cxx_destruct]
  -[_PUVideoView setPlayer:]
  -[_PUVideoView player]


PUVideoPlayerView : UIView
 @property  BOOL isReadyForVideoDisplay
 @property  BOOL isDisplayingVideo
 @property  UIImage *placeholderImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} placeholderImageContentsRect
 @property  BOOL isDisplayingPlaceholder
 @property  unsigned long videoViewContentMode
 @property  <PUVideoPlayerViewDelegate> *delegate
 @property  BOOL allowsEdgeAntialiasing

  // instance methods
  -[PUVideoPlayerView placeholderImage]
  -[PUVideoPlayerView setAllowsEdgeAntialiasing:]
  -[PUVideoPlayerView setPlaceholderImage:]
  -[PUVideoPlayerView allowsEdgeAntialiasing]
  -[PUVideoPlayerView .cxx_destruct]
  -[PUVideoPlayerView layoutSubviews]
  -[PUVideoPlayerView generateSnapshotImage]
  -[PUVideoPlayerView setDelegate:]
  -[PUVideoPlayerView initWithFrame:]
  -[PUVideoPlayerView delegate]
  -[PUVideoPlayerView dealloc]
  -[PUVideoPlayerView observeValueForKeyPath:ofObject:change:context:]
  -[PUVideoPlayerView setVideoViewContentMode:]
  -[PUVideoPlayerView setIsDisplayingPlaceholder:]
  -[PUVideoPlayerView configureWithAVPlayer:]
  -[PUVideoPlayerView _updateContentMode]
  -[PUVideoPlayerView _updateEdgeAntialiasing]
  -[PUVideoPlayerView _updateSubviewsVisibility]
  -[PUVideoPlayerView setIsReadyForVideoDisplay:]
  -[PUVideoPlayerView _installNewVideoViewIfNecessaryWithPlayer:]
  -[PUVideoPlayerView videoViewContentMode]
  -[PUVideoPlayerView setPlaceholderImageContentsRect:]
  -[PUVideoPlayerView placeholderImageContentsRect]
  -[PUVideoPlayerView isReadyForVideoDisplay]
  -[PUVideoPlayerView isDisplayingPlaceholder]
  -[PUVideoPlayerView isDisplayingVideo]
  -[PUVideoPlayerView setIsDisplayingVideo:]


PUVideoExportNode : PXRunNode <PUVideoURLExportNode>
 @property  NSURL *videoURL
 @property  NSProgress *exportProgress
 @property  <PUVideoURLNode> *videoURLNode
 @property  <PUImageInfoNode> *imageInfoNode
 @property  unsigned long quality
 @property  double progress
 @property  PICompositionController *compositionController
 @property  NSString *livePhotoPairingIdentifier
 @property  {CGSize=dd} renderedVideoSize
 @property  unsigned long state
 @property  BOOL waiting
 @property  BOOL running
 @property  BOOL complete
 @property  BOOL canceled
 @property  <PXRunNodeDelegate> *delegate
 @property  NSArray *dependencies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUVideoExportNode didCancel]
  -[PUVideoExportNode livePhotoPairingIdentifier]
  -[PUVideoExportNode .cxx_destruct]
  -[PUVideoExportNode setVideoURL:]
  -[PUVideoExportNode progress]
  -[PUVideoExportNode quality]
  -[PUVideoExportNode _editSource]
  -[PUVideoExportNode compositionController]
  -[PUVideoExportNode run]
  -[PUVideoExportNode videoURL]
  -[PUVideoExportNode videoURLNode]
  -[PUVideoExportNode renderedVideoSize]
  -[PUVideoExportNode imageInfoNode]
  -[PUVideoExportNode initWithVideoURLNode:imageURLNode:quality:livePhotoPairingIdentifier:compositionController:]
  -[PUVideoExportNode _newOutputURL]
  -[PUVideoExportNode _exportPresetName]
  -[PUVideoExportNode _handleExportCompletedWithSuccess:editedSize:error:]
  -[PUVideoExportNode setExportProgress:]
  -[PUVideoExportNode exportProgress]


PUVideoTileViewController : PUTileViewController <PUAssetViewModelChangeObserver, PUBrowsingVideoPlayerChangeObserver, PXVideoSessionUIViewDelegate, PXChangeObserver, PUBrowsingVideoPlayerTimeObserver, PUBrowsingVideoPlayerVideoOutput, PXSettingsKeyObserver>
 @property  PXVideoSession *videoSession
 @property  PXVideoSessionUIView *videoView
 @property  <PUDisplayAsset> *asset
 @property  int _currentImageRequestID
 @property  {CGSize=dd} _targetSize
 @property  {CGSize=dd} requestedImageTargetSize
 @property  PUBrowsingVideoPlayer *_browsingVideoPlayer
 @property  long long _thumbnailRequestNumber
 @property  BOOL _isDisplayingFullQualityImage
 @property  @? _readyForDisplayCompletionHandler
 @property  BOOL _isDisplayingVideo
 @property  BOOL playerIsSeeking
 @property  BOOL playerDidPlayToEnd
 @property  BOOL placeholderVisible
 @property  BOOL currentImageIsPlaceholder
 @property  BOOL placeholderIsAnimatingToHidden
 @property  PUAssetViewModel *assetViewModel
 @property  PUMediaProvider *mediaProvider
 @property  BOOL canPlayVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL videoOutputIsReadyForDisplay
 @property  @? readyForDisplayChangeHandler

  // instance methods
  -[PUVideoTileViewController assetViewModel]
  -[PUVideoTileViewController _setTargetSize:]
  -[PUVideoTileViewController setVideoView:]
  -[PUVideoTileViewController _targetSize]
  -[PUVideoTileViewController _updateImage]
  -[PUVideoTileViewController applyLayoutInfo:]
  -[PUVideoTileViewController setAssetViewModel:]
  -[PUVideoTileViewController _isDisplayingFullQualityImage]
  -[PUVideoTileViewController becomeReusable]
  -[PUVideoTileViewController setMediaProvider:]
  -[PUVideoTileViewController _updateReadyForDisplay]
  -[PUVideoTileViewController didChangeAnimating]
  -[PUVideoTileViewController setReadyForDisplayChangeHandler:]
  -[PUVideoTileViewController _setDisplayingFullQualityImage:]
  -[PUVideoTileViewController setEdgeAntialiasingEnabled:]
  -[PUVideoTileViewController generateAssetTransitionInfo]
  -[PUVideoTileViewController _handleAssetViewModel:didChange:]
  -[PUVideoTileViewController _handleBrowsingVideoPlayer:didChange:]
  -[PUVideoTileViewController .cxx_destruct]
  -[PUVideoTileViewController setPreloadedImage:]
  -[PUVideoTileViewController mediaProvider]
  -[PUVideoTileViewController readyForDisplayChangeHandler]
  -[PUVideoTileViewController viewModel:didChange:]
  -[PUVideoTileViewController asset]
  -[PUVideoTileViewController _currentImageRequestID]
  -[PUVideoTileViewController removeAllAnimations]
  -[PUVideoTileViewController didChangeActive]
  -[PUVideoTileViewController videoPlayer:desiredSeekTimeDidChange:]
  -[PUVideoTileViewController videoPlayer:currentTimeDidChange:]
  -[PUVideoTileViewController settings:changedValueForKey:]
  -[PUVideoTileViewController initWithReuseIdentifier:]
  -[PUVideoTileViewController dealloc]
  -[PUVideoTileViewController videoView]
  -[PUVideoTileViewController loadView]
  -[PUVideoTileViewController observable:didChange:context:]
  -[PUVideoTileViewController _setAsset:]
  -[PUVideoTileViewController _setCurrentImageRequestID:]
  -[PUVideoTileViewController _updatePlaceholderVisibility]
  -[PUVideoTileViewController videoSession]
  -[PUVideoTileViewController setVideoSession:]
  -[PUVideoTileViewController videoOutputIsReadyForDisplay]
  -[PUVideoTileViewController setCanPlayVideo:]
  -[PUVideoTileViewController adoptAssetTransitionInfo:]
  -[PUVideoTileViewController _setBrowsingVideoPlayer:]
  -[PUVideoTileViewController _browsingVideoPlayer]
  -[PUVideoTileViewController _isDisplayingVideo]
  -[PUVideoTileViewController _updateVideo]
  -[PUVideoTileViewController placeholderVisible]
  -[PUVideoTileViewController _updateDebugBorders]
  -[PUVideoTileViewController _updateTargetSize]
  -[PUVideoTileViewController _callReadyToDisplayChangeHandler]
  -[PUVideoTileViewController setPlayerDidPlayToEnd:]
  -[PUVideoTileViewController setPlayerIsSeeking:]
  -[PUVideoTileViewController playerIsSeeking]
  -[PUVideoTileViewController placeholderIsAnimatingToHidden]
  -[PUVideoTileViewController canPlayVideo]
  -[PUVideoTileViewController setRequestedImageTargetSize:]
  -[PUVideoTileViewController setPlaceholderIsAnimatingToHidden:]
  -[PUVideoTileViewController requestedImageTargetSize]
  -[PUVideoTileViewController _handleImageResult:info:synchronous:]
  -[PUVideoTileViewController setCurrentImageIsPlaceholder:]
  -[PUVideoTileViewController setPlaceholderVisible:animated:animationDuration:completion:]
  -[PUVideoTileViewController videoSessionViewPlaceholderVisibilityChanged:]
  -[PUVideoTileViewController _thumbnailRequestNumber]
  -[PUVideoTileViewController _setThumbnailRequestNumber:]
  -[PUVideoTileViewController _readyForDisplayCompletionHandler]
  -[PUVideoTileViewController _setReadyForDisplayCompletionHandler:]
  -[PUVideoTileViewController playerDidPlayToEnd]
  -[PUVideoTileViewController setPlaceholderVisible:]
  -[PUVideoTileViewController currentImageIsPlaceholder]


PUViewControllerSpec : NSObject
 @property  NSHashTable *_changeObservers
 @property  long long _changeCount
 @property  BOOL _needsUpdateLayoutStyle
 @property  long long currentLayoutStyle
 @property  PUViewControllerSpecChange *currentChange
 @property  BOOL valid
 @property  UITraitCollection *traitCollection
 @property  {CGSize=dd} layoutReferenceSize
 @property  BOOL presentedForSecondScreen
 @property  {CGSize=dd} secondScreenSize
 @property  BOOL prefersCompactLayoutForSplitScreen

  // instance methods
  -[PUViewControllerSpec unregisterChangeObserver:]
  -[PUViewControllerSpec setTraitCollection:]
  -[PUViewControllerSpec _setCurrentChange:]
  -[PUViewControllerSpec performChanges:]
  -[PUViewControllerSpec _setChangeCount:]
  -[PUViewControllerSpec isValid]
  -[PUViewControllerSpec updateIfNeeded]
  -[PUViewControllerSpec _portraitOrientedSizeForSize:]
  -[PUViewControllerSpec setSecondScreenSize:]
  -[PUViewControllerSpec registerChangeObserver:]
  -[PUViewControllerSpec .cxx_destruct]
  -[PUViewControllerSpec secondScreenSize]
  -[PUViewControllerSpec _changeObservers]
  -[PUViewControllerSpec traitCollection]
  -[PUViewControllerSpec layoutReferenceSize]
  -[PUViewControllerSpec setLayoutReferenceSize:]
  -[PUViewControllerSpec init]
  -[PUViewControllerSpec currentChange]
  -[PUViewControllerSpec currentLayoutStyle]
  -[PUViewControllerSpec newSpecChange]
  -[PUViewControllerSpec _willChange]
  -[PUViewControllerSpec _didChange]
  -[PUViewControllerSpec _publishChange:]
  -[PUViewControllerSpec isPresentedForSecondScreen]
  -[PUViewControllerSpec _changeCount]
  -[PUViewControllerSpec assertInsideChangesBlock]
  -[PUViewControllerSpec setPresentedForSecondScreen:]
  -[PUViewControllerSpec setPrefersCompactLayoutForSplitScreen:]
  -[PUViewControllerSpec _invalidateLayoutStyle]
  -[PUViewControllerSpec _updateCurrentLayoutStyleIfNeeded]
  -[PUViewControllerSpec _setNeedsUpdateLayoutStyle:]
  -[PUViewControllerSpec _needsUpdateLayoutStyle]
  -[PUViewControllerSpec prefersCompactLayoutForSplitScreen]
  -[PUViewControllerSpec _setCurrentLayoutStyle:]


PUViewControllerSpecChange : NSObject
 @property  BOOL changed
 @property  BOOL traitCollectionChanged
 @property  BOOL layoutReferenceSizeChanged
 @property  BOOL layoutStyleChanged
 @property  BOOL presentedForSecondScreenChanged
 @property  BOOL secondScreenSizeChanged
 @property  BOOL prefersCompactLayoutForSplitScreenChanged

  // instance methods
  -[PUViewControllerSpecChange changed]
  -[PUViewControllerSpecChange traitCollectionChanged]
  -[PUViewControllerSpecChange layoutStyleChanged]
  -[PUViewControllerSpecChange setTraitCollectionChanged:]
  -[PUViewControllerSpecChange setLayoutReferenceSizeChanged:]
  -[PUViewControllerSpecChange setPresentedForSecondScreenChanged:]
  -[PUViewControllerSpecChange setSecondScreenSizeChanged:]
  -[PUViewControllerSpecChange setPrefersCompactLayoutForSplitScreenChanged:]
  -[PUViewControllerSpecChange setLayoutStyleChanged:]
  -[PUViewControllerSpecChange layoutReferenceSizeChanged]
  -[PUViewControllerSpecChange presentedForSecondScreenChanged]
  -[PUViewControllerSpecChange secondScreenSizeChanged]
  -[PUViewControllerSpecChange prefersCompactLayoutForSplitScreenChanged]


PUViewControllerTransition : NSObject <UIViewControllerAnimatedTransitioning>
 @property  double interactiveProgress
 @property  BOOL interactive
 @property  double visibleInteractiveProgress
 @property  BOOL startedInteractively
 @property  double imageModulationIntensity
 @property  double duration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUViewControllerTransition interactionControllerForAnimationController:]

  // instance methods
  -[PUViewControllerTransition initWithDuration:]
  -[PUViewControllerTransition completeTransition:]
  -[PUViewControllerTransition isInteractive]
  -[PUViewControllerTransition transitionDuration:]
  -[PUViewControllerTransition containerView]
  -[PUViewControllerTransition .cxx_destruct]
  -[PUViewControllerTransition cancelInteractiveTransition]
  -[PUViewControllerTransition animateTransition:]
  -[PUViewControllerTransition finishInteractiveTransition]
  -[PUViewControllerTransition imageModulationIntensity]
  -[PUViewControllerTransition interactiveTransition]
  -[PUViewControllerTransition animationEnded:]
  -[PUViewControllerTransition _setInteractive:]
  -[PUViewControllerTransition transitionContext]
  -[PUViewControllerTransition fromViewController]
  -[PUViewControllerTransition toViewController]
  -[PUViewControllerTransition setTransitionContext:]
  -[PUViewControllerTransition duration]
  -[PUViewControllerTransition finalToViewFrame]
  -[PUViewControllerTransition startedInteractively]
  -[PUViewControllerTransition setStartedInteractively:]
  -[PUViewControllerTransition imageModulationIntensityDidChange]
  -[PUViewControllerTransition didCompleteTransitionAnimation]
  -[PUViewControllerTransition updateInteractiveTransitionProgress:]
  -[PUViewControllerTransition updateInteractiveTransitionProgress:visibleTransitionProgress:]
  -[PUViewControllerTransition visibleInteractiveProgress]
  -[PUViewControllerTransition _setInteractiveProgress:]
  -[PUViewControllerTransition setVisibleInteractiveProgress:]
  -[PUViewControllerTransition _newInteractiveTransition]
  -[PUViewControllerTransition initialFromViewFrame]
  -[PUViewControllerTransition initialToViewFrame]
  -[PUViewControllerTransition finalFromViewFrame]
  -[PUViewControllerTransition interactiveProgress]


PUViewModel : NSObject
 @property  BOOL _publishingChanges
 @property  NSHashTable *_changeObservers
 @property  PUViewModelChange *currentChange
 @property  PUViewModelChange *currentChangeIfExists

  // instance methods
  -[PUViewModel unregisterChangeObserver:]
  -[PUViewModel didPerformChanges]
  -[PUViewModel performChanges:]
  -[PUViewModel registerChangeObserver:]
  -[PUViewModel .cxx_destruct]
  -[PUViewModel _changeObservers]
  -[PUViewModel debugDetailedDescription]
  -[PUViewModel init]
  -[PUViewModel didPublishChanges]
  -[PUViewModel newViewModelChange]
  -[PUViewModel currentChange]
  -[PUViewModel _publishChanges]
  -[PUViewModel _willChange]
  -[PUViewModel _didChange]
  -[PUViewModel currentChangeIfExists]
  -[PUViewModel assertInsideChangesBlock]
  -[PUViewModel _isPublishingChanges]
  -[PUViewModel willPublishChanges]
  -[PUViewModel _applyPendingChanges]
  -[PUViewModel _setPublishingChanges:]


PUViewModelChange : NSObject
 @property  BOOL hasChanges

  // instance methods
  -[PUViewModelChange hasChanges]
  -[PUViewModelChange setHasChanges]


PUAudioClassificationSettings : PXSettings
  // class methods
  +[PUAudioClassificationSettings sharedInstance]
  +[PUAudioClassificationSettings settingsControllerModule]

  // instance methods
  -[PUAudioClassificationSettings parentSettings]
  -[PUAudioClassificationSettings setDefaultValues]


PUWallpaperNavigationController : UINavigationController
  // instance methods
  -[PUWallpaperNavigationController supportedInterfaceOrientations]


PUWallpaperActivity : PXActivity <SBSUIWallpaperPreviewViewControllerDelegate>
 @property  BOOL _wallpaperModificationAllowed
 @property  BOOL _needsUpdateWallpaperModificationAllowed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUWallpaperActivity activityViewController]
  -[PUWallpaperActivity .cxx_destruct]
  -[PUWallpaperActivity _systemImageName]
  -[PUWallpaperActivity activityType]
  -[PUWallpaperActivity canPerformWithActivityItems:]
  -[PUWallpaperActivity performActivity]
  -[PUWallpaperActivity init]
  -[PUWallpaperActivity prepareWithActivityItems:]
  -[PUWallpaperActivity activityTitle]
  -[PUWallpaperActivity dealloc]
  -[PUWallpaperActivity _restrictionsChanged:]
  -[PUWallpaperActivity _setNeedsUpdateWallpaperModificationAllowed:]
  -[PUWallpaperActivity _updateWallpaperModificationAllowedIfNeeded]
  -[PUWallpaperActivity _isWallpaperModificationAllowed]
  -[PUWallpaperActivity _fetchImageForWallPaperAsset:resultHandler:]
  -[PUWallpaperActivity _needsUpdateWallpaperModificationAllowed]
  -[PUWallpaperActivity _setWallpaperModificationAllowed:]
  -[PUWallpaperActivity _handleSetWallpaperActionWithController:locations:]
  -[PUWallpaperActivity wallpaperPreviewViewControllerCancelButtonPressed:]
  -[PUWallpaperActivity wallpaperPreviewViewControllerSetButtonPressed:]


PUPhotoEditApertureButton : CEKApertureButton <UIPointerInteractionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUPhotoEditApertureButton pointerInteraction:styleForRegion:]
  -[PUPhotoEditApertureButton initWithFrame:]
  -[PUPhotoEditApertureButton pointerInteraction:regionForRequest:defaultRegion:]
  -[PUPhotoEditApertureButton _pointerRect]


PUWarningHelper : NSObject
 @property  NSArray *_assets

  // class methods
  +[PUWarningHelper _suffix:]
  +[PUWarningHelper alertControllerForAssets:inCollection:cancelAction:removeAction:removeFromSharedLibraryAction:deleteAction:]
  +[PUWarningHelper getCombinedRemovalDeletionWarningMessageForAssets:canRemoveFromSharedLibrary:removeFromSharedLibraryOnly:]
  +[PUWarningHelper getRemovalWarningMessageForAssets:removeFromSharedLibraryOnly:]

  // instance methods
  -[PUWarningHelper .cxx_destruct]
  -[PUWarningHelper _assets]
  -[PUWarningHelper _setAssets:]


PUWelcomeSettings : PXSettings <SBSRemoteAlertHandleObserver>
 @property  BOOL alwaysShowWhatsNewWelcome
 @property  BOOL alwaysShowCloudPhotoWelcome
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUWelcomeSettings sharedInstance]
  +[PUWelcomeSettings settingsControllerModule]

  // instance methods
  -[PUWelcomeSettings remoteAlertHandleDidDeactivate:]
  -[PUWelcomeSettings parentSettings]
  -[PUWelcomeSettings setAlwaysShowCloudPhotoWelcome:]
  -[PUWelcomeSettings alwaysShowWhatsNewWelcome]
  -[PUWelcomeSettings setDefaultValues]
  -[PUWelcomeSettings setAlwaysShowWhatsNewWelcome:]
  -[PUWelcomeSettings alwaysShowCloudPhotoWelcome]


PUWelcomeViewControllersManager : NSObject
 @property  NSArray *_welcomeViewControllerClasses
 @property  NSMutableSet *_remainingWelcomeViewControllerClassesToPresent
 @property  UIViewController *_presentingViewController
 @property  Class _presentedWelcomeViewControllerClass

  // class methods
  +[PUWelcomeViewControllersManager defaultManager]

  // instance methods
  -[PUWelcomeViewControllersManager _reset]
  -[PUWelcomeViewControllersManager _presentingViewController]
  -[PUWelcomeViewControllersManager .cxx_destruct]
  -[PUWelcomeViewControllersManager init]
  -[PUWelcomeViewControllersManager _update]
  -[PUWelcomeViewControllersManager _setPresentingViewController:]
  -[PUWelcomeViewControllersManager resetAllLastPresentationInfos]
  -[PUWelcomeViewControllersManager _initWithWelcomeViewControllerClasses:]
  -[PUWelcomeViewControllersManager _welcomeViewControllerClasses]
  -[PUWelcomeViewControllersManager _remainingWelcomeViewControllerClassesToPresent]
  -[PUWelcomeViewControllersManager _presentedWelcomeViewControllerClass]
  -[PUWelcomeViewControllersManager _setPresentedWelcomeViewControllerClass:]
  -[PUWelcomeViewControllersManager _handleWelcomeViewControllerCompletion]
  -[PUWelcomeViewControllersManager presentWelcomeViewControllersIfNecessaryFromViewController:]


PUOneUpMergedVideoProvider : PXObservable <PUBrowsingViewModelChangeObserver, PXChangeObserver>
 @property  PUMergedLivePhotosVideo *mergedVideo
 @property  long long state
 @property  PUMergedLivePhotosVideoRequest *currentRequest
 @property  PUBrowsingViewModel *browsingViewModel
 @property  ISLivePhotoPlayer *livePhotoPlayer
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUOneUpMergedVideoProvider mergedVideo]
  -[PUOneUpMergedVideoProvider browsingViewModel]
  -[PUOneUpMergedVideoProvider livePhotoPlayer]
  -[PUOneUpMergedVideoProvider mutableChangeObject]
  -[PUOneUpMergedVideoProvider .cxx_destruct]
  -[PUOneUpMergedVideoProvider setMergedVideo:]
  -[PUOneUpMergedVideoProvider _handleViewModelChanges]
  -[PUOneUpMergedVideoProvider _updateLivePhotoPlayerItem]
  -[PUOneUpMergedVideoProvider setState:]
  -[PUOneUpMergedVideoProvider viewModel:didChange:]
  -[PUOneUpMergedVideoProvider _handleRequestChanges:]
  -[PUOneUpMergedVideoProvider state]
  -[PUOneUpMergedVideoProvider setCurrentRequest:]
  -[PUOneUpMergedVideoProvider currentRequest]
  -[PUOneUpMergedVideoProvider observable:didChange:context:]
  -[PUOneUpMergedVideoProvider setError:]
  -[PUOneUpMergedVideoProvider error]
  -[PUOneUpMergedVideoProvider initWithBrowsingViewModel:]


PUWhatsNewWelcomeViewController : OBWelcomeController <PUWelcomeProtocol>
 @property  @? _completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUWhatsNewWelcomeViewController presentIfNecessaryFromViewController:completionHandler:]
  +[PUWhatsNewWelcomeViewController resetLastPresentationInfo]

  // instance methods
  -[PUWhatsNewWelcomeViewController _completionHandler]
  -[PUWhatsNewWelcomeViewController .cxx_destruct]
  -[PUWhatsNewWelcomeViewController initWithCompletionHandler:]
  -[PUWhatsNewWelcomeViewController _setCompletionHandler:]
  -[PUWhatsNewWelcomeViewController dismissViewControllerAnimated:completion:]
  -[PUWhatsNewWelcomeViewController _handleContinueButton:]
  -[PUWhatsNewWelcomeViewController _showAppleMusicPrivacyPromptIfNeeded]


PUWorkaroundSettings : PXSettings
 @property  BOOL addRemoveVideoLayer
 @property  BOOL shouldWorkAround54502886

  // class methods
  +[PUWorkaroundSettings sharedInstance]
  +[PUWorkaroundSettings settingsControllerModule]

  // instance methods
  -[PUWorkaroundSettings parentSettings]
  -[PUWorkaroundSettings setDefaultValues]
  -[PUWorkaroundSettings addRemoveVideoLayer]
  -[PUWorkaroundSettings setAddRemoveVideoLayer:]
  -[PUWorkaroundSettings shouldWorkAround54502886]
  -[PUWorkaroundSettings setShouldWorkAround54502886:]


PUActivityItemSourceOperation : NSOperation
 @property  NSString *activityType
 @property  BOOL _pu_cancelled
 @property  <PUActivityItemSourceOperationDelegate> *delegate
 @property  BOOL pu_cancelled
 @property  NSObject<OS_dispatch_semaphore> *semaphore

  // instance methods
  -[PUActivityItemSourceOperation semaphore]
  -[PUActivityItemSourceOperation main]
  -[PUActivityItemSourceOperation .cxx_destruct]
  -[PUActivityItemSourceOperation activityType]
  -[PUActivityItemSourceOperation delegate]
  -[PUActivityItemSourceOperation initWithDelegate:activityType:]
  -[PUActivityItemSourceOperation pu_isCancelled]
  -[PUActivityItemSourceOperation pu_cancel]
  -[PUActivityItemSourceOperation _pu_setCancelled:]
  -[PUActivityItemSourceOperation _pu_isCancelled]


PUCropPerspectiveAdjustmentsDataSource : NSObject <PUAdjustmentsViewDataSource>
 @property  NSMutableArray *adjustmentInfoSections
 @property  PICompositionController *compositionController
 @property  PUPhotoEditValuesCalculator *valuesCalculator
 @property  <PUCropPerspectiveAdjustmentsDataSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUCropPerspectiveAdjustmentsDataSource setOrientation:]
  -[PUCropPerspectiveAdjustmentsDataSource renderer]
  -[PUCropPerspectiveAdjustmentsDataSource adjustmentInfoSections]
  -[PUCropPerspectiveAdjustmentsDataSource _createAdjustmentInfos]
  -[PUCropPerspectiveAdjustmentsDataSource infoForItemAtIndexPath:]
  -[PUCropPerspectiveAdjustmentsDataSource _modifyAdjustmentForInfo:]
  -[PUCropPerspectiveAdjustmentsDataSource setAdjustmentEnabled:atIndexPath:completionHandler:]
  -[PUCropPerspectiveAdjustmentsDataSource resetInfoAtIndexPath:]
  -[PUCropPerspectiveAdjustmentsDataSource canModifyAdjustmentAtIndexPath:]
  -[PUCropPerspectiveAdjustmentsDataSource modifyValue:atIndexPath:]
  -[PUCropPerspectiveAdjustmentsDataSource valuesCalculator]
  -[PUCropPerspectiveAdjustmentsDataSource numberOfItemsInSection:]
  -[PUCropPerspectiveAdjustmentsDataSource numberOfSections]
  -[PUCropPerspectiveAdjustmentsDataSource .cxx_destruct]
  -[PUCropPerspectiveAdjustmentsDataSource setDelegate:]
  -[PUCropPerspectiveAdjustmentsDataSource init]
  -[PUCropPerspectiveAdjustmentsDataSource compositionControllerDidChange]
  -[PUCropPerspectiveAdjustmentsDataSource setAdjustmentInfoSections:]
  -[PUCropPerspectiveAdjustmentsDataSource setValuesCalculator:]
  -[PUCropPerspectiveAdjustmentsDataSource compositionController]
  -[PUCropPerspectiveAdjustmentsDataSource delegate]
  -[PUCropPerspectiveAdjustmentsDataSource _enableNonAutoAjustments:]
  -[PUCropPerspectiveAdjustmentsDataSource _updateAdjustmentInfos]
  -[PUCropPerspectiveAdjustmentsDataSource _setDefaultsForInfo:]
  -[PUCropPerspectiveAdjustmentsDataSource _newAdjustmentInfoWithIdentifier:adjustmentKey:settingKey:attributeKey:]
  -[PUCropPerspectiveAdjustmentsDataSource _newAdjustmentInfoWithAdjustmentKey:settingKey:attributeKey:]
  -[PUCropPerspectiveAdjustmentsDataSource setCompositionController:]
  -[PUCropPerspectiveAdjustmentsDataSource setupWithCompositionController:valuesCalculator:]
  -[PUCropPerspectiveAdjustmentsDataSource _geometryAdjustmentInfos]


PUZoomTransitionLayout : UICollectionViewTransitionLayout
  // instance methods
  -[PUZoomTransitionLayout layoutAttributesForItemAtIndexPath:]
  -[PUZoomTransitionLayout targetContentOffsetForProposedContentOffset:]
  -[PUZoomTransitionLayout layoutAttributesForElementsInRect:]
  -[PUZoomTransitionLayout _adjustLayoutAttributes:]
  -[PUZoomTransitionLayout setTransitionProgress:]
  -[PUZoomTransitionLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:]
  -[PUZoomTransitionLayout layoutAttributesForDecorationViewOfKind:atIndexPath:]


PUZoomableGridTransition : NSObject <UIViewControllerInteractiveTransitioning>
 @property  unsigned long transitionState
 @property  unsigned long originZoomLevel
 @property  unsigned long targetZoomLevel
 @property  UICollectionViewTransitionLayout *_transitionLayout
 @property  double currentInteractiveProgress
 @property  {CGSize=dd} currentInteractiveCenterOffset
 @property  <UIViewControllerContextTransitioning> *transitionContext
 @property  BOOL interactive
 @property  PUMomentsZoomLevelManager *zoomLevelManager
 @property  NSIndexPath *anchorItemIndexPath
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PUZoomableGridTransition isInteractive]
  -[PUZoomableGridTransition targetZoomLevel]
  -[PUZoomableGridTransition .cxx_destruct]
  -[PUZoomableGridTransition startInteractiveTransition:]
  -[PUZoomableGridTransition transitionContext]
  -[PUZoomableGridTransition setTransitionContext:]
  -[PUZoomableGridTransition transitionState]
  -[PUZoomableGridTransition _transitionLayout]
  -[PUZoomableGridTransition _setTransitionLayout:]
  -[PUZoomableGridTransition zoomLevelManager]
  -[PUZoomableGridTransition _setTransitionState:]
  -[PUZoomableGridTransition _setCurrentInteractiveProgress:]
  -[PUZoomableGridTransition _setCurrentInteractiveCenterOffset:]
  -[PUZoomableGridTransition initWithOriginLevel:targetLevel:zoomLevelManager:interactive:]
  -[PUZoomableGridTransition updateInteractiveTransitionForProgress:centerOffset:]
  -[PUZoomableGridTransition finishInteractiveTransitionAnimated]
  -[PUZoomableGridTransition cancelInteractiveTransitionAnimated]
  -[PUZoomableGridTransition originZoomLevel]
  -[PUZoomableGridTransition _setOriginZoomLevel:]
  -[PUZoomableGridTransition _setTargetZoomLevel:]
  -[PUZoomableGridTransition anchorItemIndexPath]
  -[PUZoomableGridTransition setAnchorItemIndexPath:]
  -[PUZoomableGridTransition currentInteractiveProgress]
  -[PUZoomableGridTransition currentInteractiveCenterOffset]


PUGridZoomTransitionAnimationController : _UICollectionViewControllerLayoutToLayoutTransition
 @property  PUZoomableGridTransition *gridTransitionInfo

  // instance methods
  -[PUGridZoomTransitionAnimationController transitionDuration:]
  -[PUGridZoomTransitionAnimationController .cxx_destruct]
  -[PUGridZoomTransitionAnimationController animateTransition:]
  -[PUGridZoomTransitionAnimationController animationEnded:]
  -[PUGridZoomTransitionAnimationController gridTransitionInfo]


PUZoomableGridViewController : PUPhotosGridViewController <PXChangeObserver, PXCloudQuotaControllerHelperDelegate, PUMagnfiedViewControllerDelegate, PXPhotosLibraryFooterViewModelPresentationDelegate>
 @property  PUZoomableGridTransition *currentGridZoomTransitionInfo
 @property  PUZoomableGridViewControllerSpec *zoomableGridSpec
 @property  PUGridZoomLevelInfo *_zoomLevelInfo
 @property  PUZoomableGridTransition *currentGridZoomTransitionInfo
 @property  NSIndexPath *_transitionExplicitAnchorIndexPath
 @property  NSIndexPath *_lastZoomInTransitionAnchorIndexPath
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  PUGridPinchGestureRecognizer *_gridPinchGestureRecognizer
 @property  PUGridMagnifiedImageViewController *magnifiedImageViewController
 @property  NSArray *_syncProgressAlbums
 @property  double _lastUpdateWidth
 @property  BOOL _hasAppearedOnce
 @property  unsigned long _magnifierState
 @property  {CGPoint=dd} _frozeMagnifierAtPosition
 @property  NSIndexPath *_dynamicLayoutTransitionAnchorIndexPath
 @property  PUMomentsZoomLevelManager *zoomLevelManager
 @property  unsigned long zoomLevel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUZoomableGridViewController _createCPLUIStatusProvider]

  // instance methods
  -[PUZoomableGridViewController _setTapGestureRecognizer:]
  -[PUZoomableGridViewController _tapGestureRecognizer]
  -[PUZoomableGridViewController _collectionView:shouldApplyTransitionContentOffset:contentSize:]
  -[PUZoomableGridViewController presentingViewControllerForCloudQuotaControllerHelper:]
  -[PUZoomableGridViewController collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:]
  -[PUZoomableGridViewController _accountStoreDidChange:]
  -[PUZoomableGridViewController zoomableGridSpec]
  -[PUZoomableGridViewController _indexPathOfReferenceItemForLayoutTransitionInCollectionView:]
  -[PUZoomableGridViewController cloudQuotaControllerHelper:informationViewDidChange:]
  -[PUZoomableGridViewController collectionView:transitionLayoutForOldLayout:newLayout:]
  -[PUZoomableGridViewController collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:]
  -[PUZoomableGridViewController setEditing:animated:]
  -[PUZoomableGridViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[PUZoomableGridViewController zoomLevel]
  -[PUZoomableGridViewController .cxx_destruct]
  -[PUZoomableGridViewController viewDidLoad]
  -[PUZoomableGridViewController viewDidAppear:]
  -[PUZoomableGridViewController handleLongPressGesture:]
  -[PUZoomableGridViewController oneUpPresentationOrigin]
  -[PUZoomableGridViewController _handlePreviewGesture:]
  -[PUZoomableGridViewController gestureRecognizerShouldBegin:]
  -[PUZoomableGridViewController interactionProgressDidUpdate:]
  -[PUZoomableGridViewController viewWillDisappear:]
  -[PUZoomableGridViewController viewWillAppear:]
  -[PUZoomableGridViewController scrollViewShouldScrollToTop:]
  -[PUZoomableGridViewController _handleTapGesture:]
  -[PUZoomableGridViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PUZoomableGridViewController interactionProgress:didEnd:]
  -[PUZoomableGridViewController installGestureRecognizers]
  -[PUZoomableGridViewController dealloc]
  -[PUZoomableGridViewController uninstallGestureRecognizers]
  -[PUZoomableGridViewController getTitle:prompt:shouldHideBackButton:leftBarButtonItems:rightBarButtonItems:]
  -[PUZoomableGridViewController canDragIn]
  -[PUZoomableGridViewController observable:didChange:context:]
  -[PUZoomableGridViewController viewDidDisappear:]
  -[PUZoomableGridViewController didReceiveMemoryWarning]
  -[PUZoomableGridViewController updateSpec]
  -[PUZoomableGridViewController _syncProgressAlbums]
  -[PUZoomableGridViewController configureSupplementaryView:ofKind:forIndexPath:]
  -[PUZoomableGridViewController _invalidateSyncProgressAlbums]
  -[PUZoomableGridViewController wantsGlobalFooter]
  -[PUZoomableGridViewController zoomTransition:getFrame:inCoordinateSpace:contentMode:cropInsets:forPhotoToken:operation:]
  -[PUZoomableGridViewController setSelected:itemsAtIndexes:inSection:animated:]
  -[PUZoomableGridViewController newGridLayout]
  -[PUZoomableGridViewController allowSlideshowButton]
  -[PUZoomableGridViewController imageWithSize:forIndexPath:]
  -[PUZoomableGridViewController _frameForItemAtIndexPath:]
  -[PUZoomableGridViewController zoomLevelManager]
  -[PUZoomableGridViewController currentGridZoomTransitionInfo]
  -[PUZoomableGridViewController isTransitionAutoAdjustContentOffsetEnabled]
  -[PUZoomableGridViewController dateRangeFormatterPreset]
  -[PUZoomableGridViewController imageRequestItemSize]
  -[PUZoomableGridViewController cellFillMode]
  -[PUZoomableGridViewController imageDeliveryMode]
  -[PUZoomableGridViewController cellAspectRatioHint]
  -[PUZoomableGridViewController shouldPerformAutomaticContentOffsetAdjustment]
  -[PUZoomableGridViewController updateLayoutMetrics]
  -[PUZoomableGridViewController canNavigateToPhotoInteractively:]
  -[PUZoomableGridViewController wantsPlaceholderView]
  -[PUZoomableGridViewController getEmptyPlaceholderViewTitle:message:buttonTitle:buttonAction:]
  -[PUZoomableGridViewController initWithSpec:zoomLevelManager:zoomLevel:]
  -[PUZoomableGridViewController prepareForTransitionToZoomableViewController:anchorItemIndexPath:anchorShiftsColumns:animated:interactive:]
  -[PUZoomableGridViewController gridZoomTransitionDidFinish:]
  -[PUZoomableGridViewController contentOffsetForPreheating]
  -[PUZoomableGridViewController canBeginStackCollapseTransition]
  -[PUZoomableGridViewController configureGlobalFooterView:]
  -[PUZoomableGridViewController isCurrentCollectionViewDataSource]
  -[PUZoomableGridViewController preheatAssets]
  -[PUZoomableGridViewController contentSizeForPreheating]
  -[PUZoomableGridViewController processDataSourceChange:]
  -[PUZoomableGridViewController shouldPerformFullReloadForIncrementalDataSourceChange:]
  -[PUZoomableGridViewController updateInterfaceForIncrementalDataSourceChanges:]
  -[PUZoomableGridViewController canDisplayEditButton]
  -[PUZoomableGridViewController willDisplayEmptyPlaceholderView]
  -[PUZoomableGridViewController didEndDisplayingEmptyPlaceholderView]
  -[PUZoomableGridViewController updateVisibleSectionHeadersAtIndexes:]
  -[PUZoomableGridViewController shouldPreventRevealInMomentAction]
  -[PUZoomableGridViewController configureGridCell:forItemAtIndexPath:]
  -[PUZoomableGridViewController gridSettings:changedValueForKey:]
  -[PUZoomableGridViewController pu_shouldActAsTabRootViewController]
  -[PUZoomableGridViewController bestTransitionReferenceItemIndexPathOutIsFromLastTransition:outIsExplicit:]
  -[PUZoomableGridViewController _setLastUpdateWidth:]
  -[PUZoomableGridViewController _zoomLevelInfo]
  -[PUZoomableGridViewController _lastUpdateWidth]
  -[PUZoomableGridViewController _shouldShowCPLInformationInGlobalFooter]
  -[PUZoomableGridViewController _reclaimCollectionView]
  -[PUZoomableGridViewController _updateTransitionsIfNecessary]
  -[PUZoomableGridViewController _eventSourceFromZoomLevel:]
  -[PUZoomableGridViewController _dynamicLayoutTransitionAnchorIndexPath]
  -[PUZoomableGridViewController _setDynamicLayoutTransitionAnchorIndexPath:]
  -[PUZoomableGridViewController magnifiedImageViewController]
  -[PUZoomableGridViewController tearDownMagnifiedImageViewController]
  -[PUZoomableGridViewController _hasAppearedOnce]
  -[PUZoomableGridViewController _setHasAppearedOnce:]
  -[PUZoomableGridViewController _configureGlobalFooterImportantInformationUpdatesTimer]
  -[PUZoomableGridViewController magnifiedImageViewControllerCreatingIfNecessary:]
  -[PUZoomableGridViewController _updateMagnifierWithGesture:]
  -[PUZoomableGridViewController _magnifierState]
  -[PUZoomableGridViewController _setMagnifierState:]
  -[PUZoomableGridViewController _setFrozeMagnifierAtPosition:]
  -[PUZoomableGridViewController _setLastZoomInTransitionAnchorIndexPath:]
  -[PUZoomableGridViewController _gridPinchGestureRecognizer]
  -[PUZoomableGridViewController _handleGridPinchGestureRecognizer:]
  -[PUZoomableGridViewController _setGridPinchGestureRecognizer:]
  -[PUZoomableGridViewController _disallowNavigationToHigherZoomLevel]
  -[PUZoomableGridViewController _setCplUIStatusProvider:]
  -[PUZoomableGridViewController _needsCPLInformationDidChange]
  -[PUZoomableGridViewController _globalFooterDidChange]
  -[PUZoomableGridViewController _globalFooterHasImportantInformationDidChange]
  -[PUZoomableGridViewController _conditionallyRevealPhotosGlobalFooterView]
  -[PUZoomableGridViewController _globalFooterHasImportantInformation]
  -[PUZoomableGridViewController _shouldRevealPhotosGlobalFooterView]
  -[PUZoomableGridViewController _conditionallyRevealPhotosGlobalFooterViewWithLastUserScrollTime:]
  -[PUZoomableGridViewController _didEndDisplayingGlobalFooterView]
  -[PUZoomableGridViewController collectionViewPointInSectionHeader:]
  -[PUZoomableGridViewController _beginInteractiveTransitionWithReferenceItemPath:zoomingOut:]
  -[PUZoomableGridViewController navigateToLowerZoomLevelWithReferenceItemPath:]
  -[PUZoomableGridViewController _itemPathForLocationInGesture:]
  -[PUZoomableGridViewController _configureMagnifiedImageViewController:forIndexPath:gestureLocationInWindow:]
  -[PUZoomableGridViewController _frozeMagnifierAtPosition]
  -[PUZoomableGridViewController _setMagnifiedImageViewController:]
  -[PUZoomableGridViewController _setTransitionExplicitAnchorIndexPath:]
  -[PUZoomableGridViewController presentingViewControllerForViewModel:]
  -[PUZoomableGridViewController setZoomableGridSpec:]
  -[PUZoomableGridViewController _setCurrentGridZoomTransitionInfo:]
  -[PUZoomableGridViewController _transitionExplicitAnchorIndexPath]
  -[PUZoomableGridViewController _lastZoomInTransitionAnchorIndexPath]
  -[PUZoomableGridViewController reclaimCollectionView]
  -[PUZoomableGridViewController ppt_navigateToPhotosDetailsAnimated:]


PUZoomableGridViewControllerSpec : NSObject
 @property  PUPhotosGridViewControllerSpec *gridSpec
 @property  BOOL canDisplayMultipleRightBarButtonItems
 @property  {CGSize=dd} magnifiedImageSize
 @property  double magnifiedYOffset
 @property  {UIEdgeInsets=dddd} magnifiedDragEdgeInsets
 @property  long long fullMomentsLevelCellFillMode
 @property  {CGSize=dd} fullMomentsLevelThumbnailSize
 @property  {UIEdgeInsets=dddd} fullMomentsLevelSectionHeaderHighlightInset
 @property  long long fullMomentsSectionHeaderStyle
 @property  long long collectionsLevelCellFillMode
 @property  {CGSize=dd} collectionsLevelThumbnailSize
 @property  {UIEdgeInsets=dddd} collectionsLevelSectionHeaderHighlightInset
 @property  long long collectionsSectionHeaderStyle
 @property  long long yearsLevelCellFillMode
 @property  {CGSize=dd} yearsLevelThumbnailSize
 @property  {UIEdgeInsets=dddd} yearsLevelSectionHeaderHighlightInset
 @property  long long yearsSectionHeaderStyle

  // instance methods
  -[PUZoomableGridViewControllerSpec newGridSpec]
  -[PUZoomableGridViewControllerSpec configureFullMomentsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerSpec fullMomentsLevelThumbnailSize]
  -[PUZoomableGridViewControllerSpec .cxx_destruct]
  -[PUZoomableGridViewControllerSpec collectionsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerSpec canDisplayMultipleRightBarButtonItems]
  -[PUZoomableGridViewControllerSpec yearsSectionHeaderStyle]
  -[PUZoomableGridViewControllerSpec magnifiedDragEdgeInsets]
  -[PUZoomableGridViewControllerSpec magnifiedYOffset]
  -[PUZoomableGridViewControllerSpec fullMomentsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerSpec gridSpec]
  -[PUZoomableGridViewControllerSpec collectionsSectionHeaderStyle]
  -[PUZoomableGridViewControllerSpec magnifiedImageSize]
  -[PUZoomableGridViewControllerSpec dynamicLayoutEnabled]
  -[PUZoomableGridViewControllerSpec configureYearsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerSpec configureCollectionsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerSpec collectionsLevelThumbnailSize]
  -[PUZoomableGridViewControllerSpec fullMomentsSectionHeaderStyle]
  -[PUZoomableGridViewControllerSpec yearsLevelThumbnailSize]
  -[PUZoomableGridViewControllerSpec yearsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerSpec setMagnifiedDragEdgeInsets:]
  -[PUZoomableGridViewControllerSpec setMagnifiedYOffset:]
  -[PUZoomableGridViewControllerSpec fullMomentsLevelCellFillMode]
  -[PUZoomableGridViewControllerSpec collectionsLevelCellFillMode]
  -[PUZoomableGridViewControllerSpec yearsLevelCellFillMode]
  -[PUZoomableGridViewControllerSpec _setGridSpec:]


PUZoomableGridViewControllerPhoneSpec : PUZoomableGridViewControllerSpec
  // instance methods
  -[PUZoomableGridViewControllerPhoneSpec newGridSpec]
  -[PUZoomableGridViewControllerPhoneSpec configureFullMomentsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPhoneSpec updateGridLayoutUsingFloatingHeaders:]
  -[PUZoomableGridViewControllerPhoneSpec fullMomentsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPhoneSpec collectionsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerPhoneSpec canDisplayMultipleRightBarButtonItems]
  -[PUZoomableGridViewControllerPhoneSpec yearsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPhoneSpec magnifiedDragEdgeInsets]
  -[PUZoomableGridViewControllerPhoneSpec magnifiedYOffset]
  -[PUZoomableGridViewControllerPhoneSpec fullMomentsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerPhoneSpec collectionsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPhoneSpec magnifiedImageSize]
  -[PUZoomableGridViewControllerPhoneSpec dynamicLayoutEnabled]
  -[PUZoomableGridViewControllerPhoneSpec configureYearsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPhoneSpec configureCollectionsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPhoneSpec collectionsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPhoneSpec fullMomentsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPhoneSpec yearsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPhoneSpec yearsLevelSectionHeaderHighlightInset]


PUZoomableGridViewControllerPadSpec : PUZoomableGridViewControllerSpec
  // instance methods
  -[PUZoomableGridViewControllerPadSpec newGridSpec]
  -[PUZoomableGridViewControllerPadSpec configureFullMomentsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPadSpec fullMomentsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPadSpec collectionsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerPadSpec canDisplayMultipleRightBarButtonItems]
  -[PUZoomableGridViewControllerPadSpec yearsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPadSpec magnifiedDragEdgeInsets]
  -[PUZoomableGridViewControllerPadSpec magnifiedYOffset]
  -[PUZoomableGridViewControllerPadSpec fullMomentsLevelSectionHeaderHighlightInset]
  -[PUZoomableGridViewControllerPadSpec collectionsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPadSpec magnifiedImageSize]
  -[PUZoomableGridViewControllerPadSpec configureYearsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPadSpec configureCollectionsLevelGridLayout:forWidth:safeAreaInsets:]
  -[PUZoomableGridViewControllerPadSpec collectionsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPadSpec fullMomentsSectionHeaderStyle]
  -[PUZoomableGridViewControllerPadSpec yearsLevelThumbnailSize]
  -[PUZoomableGridViewControllerPadSpec yearsLevelSectionHeaderHighlightInset]


PUSettingsImportHistoryGridViewController : PUImportHistoryGridViewController
  // instance methods
  -[PUSettingsImportHistoryGridViewController updateNavigationBarAnimated:]
  -[PUSettingsImportHistoryGridViewController pu_importHistorySettingsDismissHandlerWithBarButtonItem:]


PUSurveyQuestionsWelcomeViewController : OBWelcomeController <PUWelcomeProtocol>
 @property  @? _completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PUSurveyQuestionsWelcomeViewController presentIfNecessaryFromViewController:completionHandler:]
  +[PUSurveyQuestionsWelcomeViewController resetLastPresentationInfo]

  // instance methods
  -[PUSurveyQuestionsWelcomeViewController _completionHandler]
  -[PUSurveyQuestionsWelcomeViewController .cxx_destruct]
  -[PUSurveyQuestionsWelcomeViewController initWithCompletionHandler:]
  -[PUSurveyQuestionsWelcomeViewController _setCompletionHandler:]
  -[PUSurveyQuestionsWelcomeViewController dismissViewControllerAnimated:completion:]
  -[PUSurveyQuestionsWelcomeViewController _handleContinueButton:]


PUCropGestureHandler : NSObject
 @property  <PUCropGestureHandlerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  double maximumZoomScale
 @property  NUCropModel *cropModel
 @property  {CGVector=dd} panRubberBandOffset
 @property  double zoomOverflow
 @property  long long gesture

  // instance methods
  -[PUCropGestureHandler delegateQueue]
  -[PUCropGestureHandler tearDown]
  -[PUCropGestureHandler setDelegateQueue:]
  -[PUCropGestureHandler gesture]
  -[PUCropGestureHandler .cxx_destruct]
  -[PUCropGestureHandler setMaximumZoomScale:]
  -[PUCropGestureHandler setDelegate:]
  -[PUCropGestureHandler _setZoomScale:]
  -[PUCropGestureHandler reset]
  -[PUCropGestureHandler setRollAngle:]
  -[PUCropGestureHandler setYawAngle:]
  -[PUCropGestureHandler beginPan]
  -[PUCropGestureHandler delegate]
  -[PUCropGestureHandler setLoggingEnabled:]
  -[PUCropGestureHandler cropModel]
  -[PUCropGestureHandler beginZoom]
  -[PUCropGestureHandler maximumZoomScale]
  -[PUCropGestureHandler _didTrack]
  -[PUCropGestureHandler masterImageSize]
  -[PUCropGestureHandler setPitchAngle:]
  -[PUCropGestureHandler panRubberBandOffset]
  -[PUCropGestureHandler initWithCropModel:]
  -[PUCropGestureHandler _zoomScaleForModelCropRect:]
  -[PUCropGestureHandler zoomOverflow]
  -[PUCropGestureHandler panWithTranslation:velocity:]
  -[PUCropGestureHandler endPanWithTranslation:velocity:]
  -[PUCropGestureHandler zoomWithScale:]
  -[PUCropGestureHandler endZoomWithScale:]
  -[PUCropGestureHandler _zoomScaleForCurrentCropRectAndModelRect]
  -[PUCropGestureHandler _setGestureType:]
  -[PUCropGestureHandler _dispatchSyncOnDelegateQueue:]
  -[PUCropGestureHandler _activateRequest]
  -[PUCropGestureHandler _stopAnimatedPanTimer]
  -[PUCropGestureHandler _setGestureTypePan]
  -[PUCropGestureHandler _zoomWithScale:startCropRect:]
  -[PUCropGestureHandler _constrainedMoveCropRectBy:startRect:rubberband:]
  -[PUCropGestureHandler _stopAnimatedPan]
  -[PUCropGestureHandler _clearGestureTypePan]
  -[PUCropGestureHandler _stopAnimatedZoomTimer]
  -[PUCropGestureHandler _setGestureTypePinch]
  -[PUCropGestureHandler zoomWithScale:rubberband:]
  -[PUCropGestureHandler _stopAnimatedZoom]
  -[PUCropGestureHandler _clearGestureTypePitchYawRoll]
  -[PUCropGestureHandler _startPitchYawRollGestureTimeoutTimer]
  -[PUCropGestureHandler _clearGestureTypePinch]
  -[PUCropGestureHandler _deactivateRequest]
  -[PUCropGestureHandler setAnimateEndGestureEnabled:]
  -[PUCropGestureHandler delgateQueue]


PUImageExtraction : NSObject
 @property  BOOL _cancelled

  // instance methods
  -[PUImageExtraction _isCancelled]
  -[PUImageExtraction cancel]
  -[PUImageExtraction _setCancelled:]


PUImageViewExtraction : NSObject
 @property  BOOL _cancelled

  // instance methods
  -[PUImageViewExtraction _isCancelled]
  -[PUImageViewExtraction cancel]
  -[PUImageViewExtraction _setCancelled:]


_PUScrollViewPPTScrollHelper : NSObject
 @property  {CGPoint=dd} originContentOffset
 @property  CADisplayLink *_displayLink
 @property  double _lastIncrementTime
 @property  @? _incrementHandler
 @property  @? _completionHandler
 @property  UIScrollView *scrollView

  // instance methods
  -[_PUScrollViewPPTScrollHelper _completionHandler]
  -[_PUScrollViewPPTScrollHelper scrollView]
  -[_PUScrollViewPPTScrollHelper .cxx_destruct]
  -[_PUScrollViewPPTScrollHelper init]
  -[_PUScrollViewPPTScrollHelper _setCompletionHandler:]
  -[_PUScrollViewPPTScrollHelper _setDisplayLink:]
  -[_PUScrollViewPPTScrollHelper initWithScrollView:]
  -[_PUScrollViewPPTScrollHelper _displayLink]
  -[_PUScrollViewPPTScrollHelper scrollWithStartHandler:incrementHandler:completionHandler:]
  -[_PUScrollViewPPTScrollHelper originContentOffset]
  -[_PUScrollViewPPTScrollHelper _incrementScroll]
  -[_PUScrollViewPPTScrollHelper _setLastIncrementTime:]
  -[_PUScrollViewPPTScrollHelper _setIncrementHandler:]
  -[_PUScrollViewPPTScrollHelper _lastIncrementTime]
  -[_PUScrollViewPPTScrollHelper _incrementHandler]
  -[_PUScrollViewPPTScrollHelper _endScroll]
  -[_PUScrollViewPPTScrollHelper _setOriginContentOffset:]


_PUScrollViewPageSwipeTestContext : NSObject
 @property  NSString *testName
 @property  long long numberOfPages
 @property  long long numberOfIterations
 @property  unsigned long scrollAxis
 @property  {CGPoint=dd} originContentOffset
 @property  long long currentIteration
 @property  long long currentPage
 @property  long long currentDirection
 @property  double currentPageSwipeProgress
 @property  long long currentState

  // instance methods
  -[_PUScrollViewPageSwipeTestContext setCurrentPage:]
  -[_PUScrollViewPageSwipeTestContext scrollAxis]
  -[_PUScrollViewPageSwipeTestContext .cxx_destruct]
  -[_PUScrollViewPageSwipeTestContext testName]
  -[_PUScrollViewPageSwipeTestContext setNumberOfIterations:]
  -[_PUScrollViewPageSwipeTestContext numberOfIterations]
  -[_PUScrollViewPageSwipeTestContext init]
  -[_PUScrollViewPageSwipeTestContext setCurrentDirection:]
  -[_PUScrollViewPageSwipeTestContext currentDirection]
  -[_PUScrollViewPageSwipeTestContext currentState]
  -[_PUScrollViewPageSwipeTestContext setNumberOfPages:]
  -[_PUScrollViewPageSwipeTestContext currentPage]
  -[_PUScrollViewPageSwipeTestContext numberOfPages]
  -[_PUScrollViewPageSwipeTestContext setCurrentState:]
  -[_PUScrollViewPageSwipeTestContext setTestName:]
  -[_PUScrollViewPageSwipeTestContext setScrollAxis:]
  -[_PUScrollViewPageSwipeTestContext setOriginContentOffset:]
  -[_PUScrollViewPageSwipeTestContext currentPageSwipeProgress]
  -[_PUScrollViewPageSwipeTestContext currentIteration]
  -[_PUScrollViewPageSwipeTestContext setCurrentIteration:]
  -[_PUScrollViewPageSwipeTestContext setCurrentPageSwipeProgress:]
  -[_PUScrollViewPageSwipeTestContext originContentOffset]


PUCurationTripKeyAssetDebugViewController : PUPhotosAlbumViewController
  // instance methods
  -[PUCurationTripKeyAssetDebugViewController collectionView:cellForItemAtIndexPath:]
  -[PUCurationTripKeyAssetDebugViewController collectionView:shouldSelectItemAtIndexPath:]
  -[PUCurationTripKeyAssetDebugViewController .cxx_destruct]
  -[PUCurationTripKeyAssetDebugViewController viewDidLoad]
  -[PUCurationTripKeyAssetDebugViewController init]
  -[PUCurationTripKeyAssetDebugViewController _fetchHighlights]
  -[PUCurationTripKeyAssetDebugViewController updateSpec]


PUCurationTripKeyAssetDebugViewControllerPhoneSpec : PUPhotosGridViewControllerPhoneSpec
  // instance methods
  -[PUCurationTripKeyAssetDebugViewControllerPhoneSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]


PUCurationTripKeyAssetDebugViewControllerPadSpec : PUPhotosGridViewControllerPadSpec
  // instance methods
  -[PUCurationTripKeyAssetDebugViewControllerPadSpec configureCollectionViewGridLayout:forWidth:safeAreaInsets:]


PUCurationTripKeyAssetDebugPhotosGridCell : PUPhotosGridCell
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[PUCurationTripKeyAssetDebugPhotosGridCell setTitle:]
  -[PUCurationTripKeyAssetDebugPhotosGridCell .cxx_destruct]
  -[PUCurationTripKeyAssetDebugPhotosGridCell layoutSubviews]
  -[PUCurationTripKeyAssetDebugPhotosGridCell setSubtitle:]
  -[PUCurationTripKeyAssetDebugPhotosGridCell subtitle]
  -[PUCurationTripKeyAssetDebugPhotosGridCell title]


AVAsset(PhotosUI)
	// instance methods
	-[AVAsset(PhotosUI) pu_cachedDuration]
	-[AVAsset(PhotosUI) _pu_setCachedDuration:]
	-[AVAsset(PhotosUI) pu_duration]
	-[AVAsset(PhotosUI) pu_loadDurationWithCompletionHandler:]
	-[AVAsset(PhotosUI) pu_loadNormalizedVitalityPerspectiveTransformWithAdditionalNormalizedTransform:completion:]
	-[AVAsset(PhotosUI) _pu_handleRequiredPropertiesLoadedWithAdditionalNormalizedTransform:completion:]
	-[AVAsset(PhotosUI) pu_supportsVitality]
	-[AVAsset(PhotosUI) _pu_getVitalityTransform:dimensions:]
	-[AVAsset(PhotosUI) _pu_isVitalityLimitingAllowed]
	-[AVAsset(PhotosUI) pu_stillAssetTransformMetadataPair]
	-[AVAsset(PhotosUI) pu_perspectiveTransformForMetadata:]
	-[AVAsset(PhotosUI) pu_stillImageTransformAssetTrack]

AVPlayer(PhotosUI)
	// instance methods
	-[AVPlayer(PhotosUI) pu_generateSnapshotImageAtTime:]

CALayer(PhotosUI)
	// class methods
	+[CALayer(PhotosUI) pu_animateAlongsideView:animations:]

	// instance methods
	-[CALayer(PhotosUI) _pu_uniqueAnimationKeyWithProposedKey:]
	-[CALayer(PhotosUI) pu_setPosition:]
	-[CALayer(PhotosUI) pu_setTransform:]

UIView(CALayer_PhotosUI)
	// class methods
	+[UIView(CALayer_PhotosUI) pu_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]
	+[UIView(CALayer_PhotosUI) ph_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateWithEnforcedDuration:animations:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateWithDuration:animations:]
	+[UIView(CALayer_PhotosUI) pu_animateWithDuration:animations:completion:]
	+[UIView(CALayer_PhotosUI) _pu_animateViews:withAnimationBlock:completionHandler:]
	+[UIView(CALayer_PhotosUI) pu_animateViews:withDuration:delay:options:animations:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateViews:withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateViews:usingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateViews:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:]
	+[UIView(CALayer_PhotosUI) _pu_animateView:toCenter:bounds:transform:withInitialVelocity:usingSpringAnimation:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateView:toCenter:bounds:transform:usingDefaultDampedSpringWithDelay:initialVelocity:options:completion:]
	+[UIView(CALayer_PhotosUI) pu_animateView:toCenter:bounds:transform:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:completion:]
	+[UIView(CALayer_PhotosUI) pu_transitionWithView:duration:options:animations:completion:]
	+[UIView(CALayer_PhotosUI) pu_layoutMarginWidthForCurrentScreenSize]
	+[UIView(CALayer_PhotosUI) pu_springOscillationRootAtIndex:forMass:stiffness:damping:initialVelocity:]
	+[UIView(CALayer_PhotosUI) ph_videoOverlayButton]
	+[UIView(CALayer_PhotosUI) _pu_animateWithDuration:enforced:animations:completion:]

	// instance methods
	-[UIView(CALayer_PhotosUI) _pu_referenceBasicAnimationForCurrentAnimation]
	-[UIView(CALayer_PhotosUI) _pu_animationDictionary]
	-[UIView(CALayer_PhotosUI) pu_removeAllConstraintsForKey:]
	-[UIView(CALayer_PhotosUI) pu_hasConstraintForKey:]
	-[UIView(CALayer_PhotosUI) pu_addConstraints:forKey:]
	-[UIView(CALayer_PhotosUI) pu_setCenterAndBoundsForFrameRect:]
	-[UIView(CALayer_PhotosUI) pu_removeAllGeometryAnimationsRecursively:]
	-[UIView(CALayer_PhotosUI) pu_addTransform:]
	-[UIView(CALayer_PhotosUI) _pu_associatedConstraints]
	-[UIView(CALayer_PhotosUI) pu_addConstraint:forKey:]
	-[UIView(CALayer_PhotosUI) pu_clearAllConstraintsForKey:]
	-[UIView(CALayer_PhotosUI) pu_constraintsForKey:]

NSBundle(PhotosUI)
	// class methods
	+[NSBundle(PhotosUI) pu_PhotosUIFrameworkBundle]

NSIndexPath(PhotosUI)
	// class methods
	+[NSIndexPath(PhotosUI) pu_indexPathsForItems:inSection:]
	+[NSIndexPath(PhotosUI) pu_indexPathForItem:inSubSection:section:]
	+[NSIndexPath(PhotosUI) pu_rootIndexPath]

	// instance methods
	-[NSIndexPath(PhotosUI) pu_alteredIndexPathAfterInsertingItemAtIndexPath:]
	-[NSIndexPath(PhotosUI) pu_alteredIndexPathAfterDeletingItemAtIndexPath:]
	-[NSIndexPath(PhotosUI) pu_indexPathByChangingIndexAtPosition:toIndex:]
	-[NSIndexPath(PhotosUI) pu_isParentOfIndexPath:]
	-[NSIndexPath(PhotosUI) pu_indexPathAfterDeletingItemAtIndexPath:]
	-[NSIndexPath(PhotosUI) pu_indexPathAfterInsertingItemAtIndexPath:]
	-[NSIndexPath(PhotosUI) pu_indexPathByAppendingIndexPath:]
	-[NSIndexPath(PhotosUI) pu_isValid]
	-[NSIndexPath(PhotosUI) pu_alteredIndexPathAfterInsertingItemsAtIndexPaths:]
	-[NSIndexPath(PhotosUI) pu_indexPathAfterReloadingItemAtIndexPath:]
	-[NSIndexPath(PhotosUI) pu_alteredIndexPathAfterDeletingItemsAtIndexPaths:]
	-[NSIndexPath(PhotosUI) pu_alteredIndexPathAfterMovingItemAtIndexPath:toIndexPath:]
	-[NSIndexPath(PhotosUI) pu_indexPathAfterMovingItemFromIndexPath:toIndexPath:]
	-[NSIndexPath(PhotosUI) pu_shortDescription]

(PhotosUI)
	// class methods
	+[(PhotosUI) pu_currentCharacterDirection]

(PhotosUI)
	// instance methods
	-[(PhotosUI) pu_stringByIndentingNewLines]
	-[(PhotosUI) pu_platformAgnosticHash]

<DEREK BUG Categories!>(PhotosUI)
	// class methods
	+[<DEREK BUG Categories!>(PhotosUI) pu_timerWithFireDate:interval:repeats:block:]
	+[<DEREK BUG Categories!>(PhotosUI) pu_scheduledTimerWithTimeInterval:repeats:block:]
	+[<DEREK BUG Categories!>(PhotosUI) blockInvoke:]
	+[<DEREK BUG Categories!>(PhotosUI) pu_scheduledTimerWithTimeInterval:weakTarget:selector:userInfo:repeats:]

PHAsset(PUDisplayAssetAdoption)
	// class methods
	+[PHAsset(PUDisplayAssetAdoption) _pu_mediaTypeForAssets:]
	+[PHAsset(PUDisplayAssetAdoption) pu_typeStringForMediaType:]
	+[PHAsset(PUDisplayAssetAdoption) pu_typeStringForAssets:]
	+[PHAsset(PUDisplayAssetAdoption) pu_commonMediaTypeForPhotoCount:videoCount:otherCount:]

	// instance methods
	-[PHAsset(PUDisplayAssetAdoption) photoIrisStillDisplayTime]
	-[PHAsset(PUDisplayAssetAdoption) photoIrisVideoDuration]
	-[PHAsset(PUDisplayAssetAdoption) accessibilityDescription]
	-[PHAsset(PUDisplayAssetAdoption) isAdjusted]
	-[PHAsset(PUDisplayAssetAdoption) isContentEqualTo:]
	-[PHAsset(PUDisplayAssetAdoption) localizedGeoDescription]
	-[PHAsset(PUDisplayAssetAdoption) pathForTrimmedVideoFile]
	-[PHAsset(PUDisplayAssetAdoption) imageProperties]
	-[PHAsset(PUDisplayAssetAdoption) originalFilesize]
	-[PHAsset(PUDisplayAssetAdoption) isLivePhoto]
	-[PHAsset(PUDisplayAssetAdoption) isTemporaryPlaceholder]
	-[PHAsset(PUDisplayAssetAdoption) contentChangeFromDisplayAsset:]
	-[PHAsset(PUDisplayAssetAdoption) isHighFramerateVideo]
	-[PHAsset(PUDisplayAssetAdoption) isContentAdjustmentAllowed]
	-[PHAsset(PUDisplayAssetAdoption) isInPlaceVideoTrimAllowed]
	-[PHAsset(PUDisplayAssetAdoption) isLivePhotoVisibilityAdjustmentAllowed]
	-[PHAsset(PUDisplayAssetAdoption) isTrimmableType]
	-[PHAsset(PUDisplayAssetAdoption) livePhotoVisibilityState]
	-[PHAsset(PUDisplayAssetAdoption) videoObjectBuilder]
	-[PHAsset(PUDisplayAssetAdoption) originalEXIFOrientation]
	-[PHAsset(PUDisplayAssetAdoption) containsAllMetadata]
	-[PHAsset(PUDisplayAssetAdoption) isResourceDownloadPossible]
	-[PHAsset(PUDisplayAssetAdoption) pathForOriginalImageFile]
	-[PHAsset(PUDisplayAssetAdoption) pathForOriginalVideoFile]
	-[PHAsset(PUDisplayAssetAdoption) deferredLogInfo]
	-[PHAsset(PUDisplayAssetAdoption) videoKeyFrameSourceTime]
	-[PHAsset(PUDisplayAssetAdoption) hasSyndicationInformation]
	-[PHAsset(PUDisplayAssetAdoption) isCloudPhotoLibraryEnabled]
	-[PHAsset(PUDisplayAssetAdoption) isAnimatedImage]
	-[PHAsset(PUDisplayAssetAdoption) pu_vitalityPerspectiveTransform]

PHAssetCollection(PUDisplayAssetAdoption)
UIViewController(PHViewControllerChrome)
	// class methods
	+[UIViewController(PHViewControllerChrome) pu_currentViewControllerStack]

	// instance methods
	-[UIViewController(PHViewControllerChrome) _ph_updateBarAppearanceAnimated:]
	-[UIViewController(PHViewControllerChrome) ph_preferredChromeAnimation]
	-[UIViewController(PHViewControllerChrome) ph_preferredChrome]
	-[UIViewController(PHViewControllerChrome) pu_scrollToInitialPositionAnimated:]
	-[UIViewController(PHViewControllerChrome) ph_setNeedsChromeUpdate]
	-[UIViewController(PHViewControllerChrome) ph_enableChromeManagement]
	-[UIViewController(PHViewControllerChrome) ph_rectOfInterestForTransitionInCoordinateSpace:]
	-[UIViewController(PHViewControllerChrome) ph_isPreparedForTransition]
	-[UIViewController(PHViewControllerChrome) ph_rectOfInterestForTransitionInCoordinateSpace:withInfo:]
	-[UIViewController(PHViewControllerChrome) ph_isTransitionOverlayView:]
	-[UIViewController(PHViewControllerChrome) ph_loadTransitionSourcePlaceholderViewUsingFactory:]
	-[UIViewController(PHViewControllerChrome) ph_viewContainsTransitionSourcePlaceholderView]
	-[UIViewController(PHViewControllerChrome) ph_prepareForTransition]
	-[UIViewController(PHViewControllerChrome) pu_currentInteractiveNavigationTransition]
	-[UIViewController(PHViewControllerChrome) pu_navigationTransition]
	-[UIViewController(PHViewControllerChrome) pu_setupInitialBarsVisibilityOnViewWillAppearAnimated:]
	-[UIViewController(PHViewControllerChrome) pu_wantsToolbarVisible]
	-[UIViewController(PHViewControllerChrome) ppt_performBlockAfterNextNavigationAnimation:]
	-[UIViewController(PHViewControllerChrome) pu_wantsTabBarVisible]
	-[UIViewController(PHViewControllerChrome) pu_wantsNavigationBarVisible]
	-[UIViewController(PHViewControllerChrome) pu_performBarsVisibilityUpdatesWithAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) pu_preferredStatusBarUpdateAnimation]
	-[UIViewController(PHViewControllerChrome) pu_dismissViewControllerAnimated:interactive:completion:]
	-[UIViewController(PHViewControllerChrome) pu_toolbarViewModel]
	-[UIViewController(PHViewControllerChrome) pu_modalTransition]
	-[UIViewController(PHViewControllerChrome) pu_presentViewController:transition:animated:interactive:completion:]
	-[UIViewController(PHViewControllerChrome) px_effectiveImageModulationIntensityWithProposedValue:]
	-[UIViewController(PHViewControllerChrome) pu_preferredBarStyle]
	-[UIViewController(PHViewControllerChrome) pu_shouldOptOutFromChromelessBars]
	-[UIViewController(PHViewControllerChrome) pu_navigationController]
	-[UIViewController(PHViewControllerChrome) pu_debugCurrentAsset]
	-[UIViewController(PHViewControllerChrome) pu_debugCurrentViewModel]
	-[UIViewController(PHViewControllerChrome) _pu_performBarsVisibilityUpdatesWithAnimationSettings:isStatusBarHidden:]
	-[UIViewController(PHViewControllerChrome) px_sharePresentation]
	-[UIViewController(PHViewControllerChrome) pu_isPresenting]
	-[UIViewController(PHViewControllerChrome) pu_debugCurrentlySelectedAssets]
	-[UIViewController(PHViewControllerChrome) pu_restoreNavigationTransition]
	-[UIViewController(PHViewControllerChrome) pu_removeNavigationTransition]
	-[UIViewController(PHViewControllerChrome) pu_debugIsTransient]
	-[UIViewController(PHViewControllerChrome) pu_handleSecondTabTap]
	-[UIViewController(PHViewControllerChrome) pu_dismissViewControllerIfAllowedAnimated:forced:]
	-[UIViewController(PHViewControllerChrome) pu_shouldActAsTabRootViewController]
	-[UIViewController(PHViewControllerChrome) pu_debugSetTransient:]
	-[UIViewController(PHViewControllerChrome) pu_setNavigationTransition:]
	-[UIViewController(PHViewControllerChrome) pu_setModalTransition:]
	-[UIViewController(PHViewControllerChrome) pu_currentInteractiveModalTransition]
	-[UIViewController(PHViewControllerChrome) pu_footerToolbar]
	-[UIViewController(PHViewControllerChrome) _pu_offersTableView]
	-[UIViewController(PHViewControllerChrome) pu_insertFooterToolbarWithItems:]
	-[UIViewController(PHViewControllerChrome) pu_removeFooterToolbar]
	-[UIViewController(PHViewControllerChrome) pu_navigationBarTintColor]
	-[UIViewController(PHViewControllerChrome) _pu_setNavigationBarTintColor:withAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) _pu_updateStatusBarVisibilityWithAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) _pu_setNavigationBarVisible:withAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) _pu_setTabBarVisible:withAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) _pu_setToolbarVisible:withAnimationSettings:]
	-[UIViewController(PHViewControllerChrome) _pu_setPreferredStatusBarUpdateAnimation:]

UINavigationItem(PUAbstractNavigationBanner)
	// instance methods
	-[UINavigationItem(PUAbstractNavigationBanner) pu_banner]
	-[UINavigationItem(PUAbstractNavigationBanner) pu_setBanner:]
	-[UINavigationItem(PUAbstractNavigationBanner) pu_setDefaultBackBarButtonItemWithTitle:]
	-[UINavigationItem(PUAbstractNavigationBanner) pu_shouldUpdateLeftBarButtonItems:]
	-[UINavigationItem(PUAbstractNavigationBanner) pu_shouldUpdateRightBarButtonItems:]
	-[UINavigationItem(PUAbstractNavigationBanner) _pu_shouldUpdateBarButtonItems:withNewBarButtonItems:]

AVOutputDeviceDiscoverySession(PHAirPlayRouteAvailability)
	// instance methods
	-[AVOutputDeviceDiscoverySession(PHAirPlayRouteAvailability) _pu_routeAvailability]

CIImage(PUPerspectiveTransform)
	// instance methods
	-[CIImage(PUPerspectiveTransform) pu_imageWithPerspectiveTransform:extent:]
	-[CIImage(PUPerspectiveTransform) pu_imageWithPerspectiveTransform:]

(PUDisplayVelocity)
	// class methods
	+[(PUDisplayVelocity) pu_valueWithPUPerspectiveTransform:]
	+[(PUDisplayVelocity) pu_valueWithDisplayVelocity:]

	// instance methods
	-[(PUDisplayVelocity) pu_PUPerspectiveTransformValue]
	-[(PUDisplayVelocity) pu_displayVelocityValue]

NSExtension(PUEditPlugin)
	// instance methods
	-[NSExtension(PUEditPlugin) pu_supportedMediaTypes]
	-[NSExtension(PUEditPlugin) pu_supportsMediaType:]

CMPhotoTiledLayer(PLTileableLayerAdoption)
<DEREK BUG Categories!>(PUPhotoEditAggregateSession)
	// instance methods
	-[<DEREK BUG Categories!>(PUPhotoEditAggregateSession) pu_addCFString:]
	-[<DEREK BUG Categories!>(PUPhotoEditAggregateSession) pu_valuesChanged:forKey:]

PLCompositionHelper(PUPhotoEditAggregateSession)
	// class methods
	+[PLCompositionHelper(PUPhotoEditAggregateSession) _classificationForIntensityValue:min:default:max:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) pl_aggregateNameForEffectFilterForCompositionController:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) pl_aggregateFilterIntensityForCompositionController:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) pl_aggregateNameForPortraitFilterWithCompositionController:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) pl_aggregatePortraitIntensityForCompositionController:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) pl_aggregateDepthIntensityForCompositionController:]
	+[PLCompositionHelper(PUPhotoEditAggregateSession) compositionController:aggregateKeysForPreviousComposition:]

PHPhotoLibrary(LimitedLibraryPicker)
	// instance methods
	-[PHPhotoLibrary(LimitedLibraryPicker) presentLimitedLibraryPickerFromViewController:completionHandler:]
	-[PHPhotoLibrary(LimitedLibraryPicker) presentLimitedLibraryPickerFromViewController:]

UINavigationController(PUNavigationTransition_Internal)
	// instance methods
	-[UINavigationController(PUNavigationTransition_Internal) pu_navigationTransitionDidEnd:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_pushViewController:withTransition:animated:isInteractive:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_currentInteractiveTransition]
	-[UINavigationController(PUNavigationTransition_Internal) pu_popViewControllerAnimated:interactive:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_currentNavigationTransition]
	-[UINavigationController(PUNavigationTransition_Internal) pu_navigationTransitionWillStart:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_navigationTransitionWillEnd:]
	-[UINavigationController(PUNavigationTransition_Internal) px_imageModulationIntensityWithProposedValue:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_popToViewController:animated:interactive:]
	-[UINavigationController(PUNavigationTransition_Internal) pu_popToViewControllerIfAllowed:animated:forced:]
	-[UINavigationController(PUNavigationTransition_Internal) _pu_setCurrentNavigationTransition:]

PHContentEditingOutput(PUPhotoEdit)
	// class methods
	+[PHContentEditingOutput(PUPhotoEdit) pu_newOutputForContentEditingInput:compositionController:originalComposition:asset:async:isStandardVideo:]

	// instance methods
	-[PHContentEditingOutput(PUPhotoEdit) initWithPhotoEditSnapshot:]

PXSectionedSelectionManager(PUOneUpSelectionIndicatorCompatibility)
	// instance methods
	-[PXSectionedSelectionManager(PUOneUpSelectionIndicatorCompatibility) pu_unregisterSelectionIndicatorObserver:]
	-[PXSectionedSelectionManager(PUOneUpSelectionIndicatorCompatibility) pu_registerSelectionIndicatorObserver:]
	-[PXSectionedSelectionManager(PUOneUpSelectionIndicatorCompatibility) pu_isAssetReferenceSelected:]

PXAssetEditOperationManager(AdditionalPerformersHook)
	// instance methods
	-[PXAssetEditOperationManager(AdditionalPerformersHook) registerAdditionalPerformers]

PXBarAppearance(DefaultImplementationDelegate)
	// instance methods
	-[PXBarAppearance(DefaultImplementationDelegate) defaultImplementationDelegate]

PXPlacesMapFetchResultViewController(PUPXGridPresentation)
	// instance methods
	-[PXPlacesMapFetchResultViewController(PUPXGridPresentation) px_gridPresentation]

PXCMMViewController(PUPXGridPresentation)
	// instance methods
	-[PXCMMViewController(PUPXGridPresentation) px_gridPresentation]

PXUISearchResultsViewController(PUPXGridPresentation)
	// instance methods
	-[PXUISearchResultsViewController(PUPXGridPresentation) px_gridPresentation]

PXSharedAlbumInvitationGadget(PUPXGridPresentation)
	// instance methods
	-[PXSharedAlbumInvitationGadget(PUPXGridPresentation) px_gridPresentation]

PXInboxViewController(PUPXGridPresentation)
	// instance methods
	-[PXInboxViewController(PUPXGridPresentation) px_gridPresentation]

PXGadgetUIViewController(PUPXGridPresentation)
	// instance methods
	-[PXGadgetUIViewController(PUPXGridPresentation) px_gridPresentation]

PXPhotosUIViewController(PUPXGridPresentation)
	// instance methods
	-[PXPhotosUIViewController(PUPXGridPresentation) px_gridPresentation]

PXOneUpPresentation(DefaultImplementationDelegate)
	// class methods
	+[PXOneUpPresentation(DefaultImplementationDelegate) implementationDelegateNavigationControllerWithRootViewController:]

	// instance methods
	-[PXOneUpPresentation(DefaultImplementationDelegate) defaultImplementationDelegate]

PXPhotoKitAssetActionManager(AdditionalActionPerformersHook)
	// instance methods
	-[PXPhotoKitAssetActionManager(AdditionalActionPerformersHook) px_registerAdditionalPerformerClasses]

UIColor(PUAlphaAdjust)
	// instance methods
	-[UIColor(PUAlphaAdjust) pu_colorWithIncreasedAlpha]
	-[UIColor(PUAlphaAdjust) pu_colorWithIncreasedBrightness]

UIScreen(PUPhotoEditViewController)
	// instance methods
	-[UIScreen(PUPhotoEditViewController) pu_workImageSize]

NUAuxiliaryImageRenderRequest(PU)
	// class methods
	+[NUAuxiliaryImageRenderRequest(PU) createGainMapForComposition:]

CAMeshTransform(PUPerspectiveTransform)
	// class methods
	+[CAMeshTransform(PUPerspectiveTransform) pu_meshTransformApplyingNormalizedPerspectiveTransform:]

PXSearchSettings(UI)
	// class methods
	+[PXSearchSettings(UI) settingsControllerModule]
	+[PXSearchSettings(UI) _formatIndexingStatusAlertMessageForRemainingCount:]

<DEREK BUG Categories!>(SwipeSelectionConvenience)
	// instance methods
	-[<DEREK BUG Categories!>(SwipeSelectionConvenience) pu_containsIndexPath:]

PXFileBackedAsset(PhotosUI)
	// instance methods
	-[PXFileBackedAsset(PhotosUI) modificationDate]
	-[PXFileBackedAsset(PhotosUI) photoIrisStillDisplayTime]
	-[PXFileBackedAsset(PhotosUI) photoIrisVideoDuration]
	-[PXFileBackedAsset(PhotosUI) isHidden]
	-[PXFileBackedAsset(PhotosUI) isGuestAsset]
	-[PXFileBackedAsset(PhotosUI) pixelWidth]
	-[PXFileBackedAsset(PhotosUI) hasPhotoColorAdjustments]
	-[PXFileBackedAsset(PhotosUI) localizedGeoDescription]
	-[PXFileBackedAsset(PhotosUI) pixelHeight]
	-[PXFileBackedAsset(PhotosUI) isPhotoIrisPlaceholder]
	-[PXFileBackedAsset(PhotosUI) originalFilesize]
	-[PXFileBackedAsset(PhotosUI) isLivePhoto]
	-[PXFileBackedAsset(PhotosUI) isTemporaryPlaceholder]
	-[PXFileBackedAsset(PhotosUI) deferredLogInfo]
	-[PXFileBackedAsset(PhotosUI) duration]

PXForYouGadgetViewController(PUPXSharedAlbumFeed)
	// instance methods
	-[PXForYouGadgetViewController(PUPXSharedAlbumFeed) px_sharedAlbumFeedViewControllerWithTraitCollection:]

PXForYouSuggestionDisplayAsset(PhotosUI)
	// instance methods
	-[PXForYouSuggestionDisplayAsset(PhotosUI) modificationDate]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) uniformTypeIdentifier]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) photoIrisStillDisplayTime]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) photoIrisVideoDuration]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) isHidden]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) isGuestAsset]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) pixelWidth]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) hasPhotoColorAdjustments]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) localizedGeoDescription]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) pixelHeight]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) isPhotoIrisPlaceholder]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) originalFilesize]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) isLivePhoto]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) location]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) isTemporaryPlaceholder]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) deferredLogInfo]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) videoKeyFrameSourceTime]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) uuid]
	-[PXForYouSuggestionDisplayAsset(PhotosUI) duration]

PXImportSettings(UI)
	// class methods
	+[PXImportSettings(UI) settingsControllerModule]

PFAssetAdjustments(PUReviewAdditions)
	// instance methods
	-[PFAssetAdjustments(PUReviewAdditions) phAdjustmentData]

PFVideoAdjustments(PUReviewAdditions)
	// class methods
	+[PFVideoAdjustments(PUReviewAdditions) videoAdjustmentsFromAssetAdjustmentsIfRecognized:]

PTRow(PhotosUI)
	// class methods
	+[PTRow(PhotosUI) pu_rowWithTitle:output:]
	+[PTRow(PhotosUI) pu_rowWithTitle:action:]
	+[PTRow(PhotosUI) pu_rowWithTitle:settingsProvider:]
	+[PTRow(PhotosUI) pu_rowWithTitle:settings:]
	+[PTRow(PhotosUI) pu_rowWithTitle:asynchronousOutputProducer:]
	+[PTRow(PhotosUI) pu_rowWithTitle:settingsProvider:isTransient:]
	+[PTRow(PhotosUI) pu_rowWithTitle:settings:condition:]

	// instance methods
	-[PTRow(PhotosUI) pu_increment:]

PTChoiceRow(PhotosUI)
	// instance methods
	-[PTChoiceRow(PhotosUI) pu_possibleValues:]

UIActivity(PHActivity)
	// class methods
	+[UIActivity(PHActivity) ph_PhotosApplicationActivitiesTypePublish]
	+[UIActivity(PHActivity) ph_PhotosApplicationActivityTypeOrder]

UIApplication(PhotosUI)
	// class methods
	+[UIApplication(PhotosUI) pu_prepareCPAnalytics]
	+[UIApplication(PhotosUI) pu_firstViewControllerPassingTest:]
	+[UIApplication(PhotosUI) pu_debugCurrentAsset]
	+[UIApplication(PhotosUI) pu_debugCurrentViewModel]
	+[UIApplication(PhotosUI) pu_debugCurrentlySelectedAssets]
	+[UIApplication(PhotosUI) _pu_debugSearchViewControllerHierarchyUsingBlock:]
	+[UIApplication(PhotosUI) _pu_debugSearchViewController:usingBlock:]

	// instance methods
	-[UIApplication(PhotosUI) ppt_testDefinitions]
	-[UIApplication(PhotosUI) pu_startedAnimationSubTest:forTest:]
	-[UIApplication(PhotosUI) pu_finishedAnimationSubTest:forTest:]

UIButton(PhotosUI)
	// instance methods
	-[UIButton(PhotosUI) pu_sendActionForControlEventsWithHighlightTimeout:]
	-[UIButton(PhotosUI) pu_setRTLAwareContentEdgeInsets:]
	-[UIButton(PhotosUI) pu_setTitle:andAccessibilityTitle:withFallback:forState:]

UICollectionView(PhotosUI)
	// instance methods
	-[UICollectionView(PhotosUI) pu_indexPathsForPreparedItems]
	-[UICollectionView(PhotosUI) pu_preparedCellForItemAtIndexPath:]
	-[UICollectionView(PhotosUI) pu_scrollToItemAtIndexPath:atScrollPosition:animated:]
	-[UICollectionView(PhotosUI) pu_scrollToRect:atScrollPosition:animated:]
	-[UICollectionView(PhotosUI) next:indexPathFromIndexPath:]
	-[UICollectionView(PhotosUI) pu_animateUpdateOfCollectionViewSubview:animations:completion:]

UICollectionViewLayout(PhotosUI)
	// instance methods
	-[UICollectionViewLayout(PhotosUI) pu_layoutAttributesForElementClosestToPoint:inRect:passingTest:]

_UIDynamicAnimation(PhotosUI)
	// instance methods
	-[_UIDynamicAnimation(PhotosUI) pu_setFriction:]

_UIDynamicValueAnimation(PhotosUI)
	// class methods
	+[_UIDynamicValueAnimation(PhotosUI) pu_dynamicValueAnimationWithInitialValue:initialVelocity:targetValue:stiffness:dampingFactor:epsilon:]

UIFont(PhotosUI)
	// class methods
	+[UIFont(PhotosUI) pu_scaledValue:usingFontOfAttributedString:]

	// instance methods
	-[UIFont(PhotosUI) pu_fontWithMonospacedNumbers]

UIGestureRecognizer(PhotosUI)
	// instance methods
	-[UIGestureRecognizer(PhotosUI) pu_cancel]

UIImage(PhotosUI)
	// class methods
	+[UIImage(PhotosUI) pu_PhotosUIImageNamed:]
	+[UIImage(PhotosUI) pu_imageWithIconImage:iconImageColor:text:font:textColor:fillColor:strokeColor:cornerRadius:inset:]
	+[UIImage(PhotosUI) pu_imageWithIconImage:iconImageColor:text:font:textColor:fillColor:strokeColor:cornerRadius:]
	+[UIImage(PhotosUI) pu_imageWithText:font:textColor:fillColor:strokeColor:cornerRadius:]
	+[UIImage(PhotosUI) pu_imageFromView:isOpaque:]
	+[UIImage(PhotosUI) pu_centeredImage:withBackgroundColor:size:]

	// instance methods
	-[UIImage(PhotosUI) pu_tintedImageWithColor:]
	-[UIImage(PhotosUI) pu_overlayedImageWithColor:]
	-[UIImage(PhotosUI) pu_extractPlayOverlayBackgroundImageFromCenter:inRect:contentMode:asynchronously:handler:]

UIImageView(PhotosUI)
	// instance methods
	-[UIImageView(PhotosUI) pu_extractPlayOverlayBackgroundImageFromCenter:asynchronously:handler:]

UIScrollView(PhotosUI)
	// instance methods
	-[UIScrollView(PhotosUI) pu_isScrolledAtEdge:]
	-[UIScrollView(PhotosUI) pu_scrollToEdge:animated:]
	-[UIScrollView(PhotosUI) pu_isScrolledAtEdge:tolerance:]
	-[UIScrollView(PhotosUI) pu_displayFrameForRect:]
	-[UIScrollView(PhotosUI) pu_scrollToContentOffset:animated:]
	-[UIScrollView(PhotosUI) pu_cancelScrollGesture]
	-[UIScrollView(PhotosUI) pu_isPerformingScrollTest]
	-[UIScrollView(PhotosUI) pu_currentContentSize]
	-[UIScrollView(PhotosUI) _pu_isScrolledAtEdge:tolerance:]
	-[UIScrollView(PhotosUI) _pu_scrollableAxis]
	-[UIScrollView(PhotosUI) pu_isScrolledBeyondEdge:]
	-[UIScrollView(PhotosUI) _pu_pptScrollHelper]
	-[UIScrollView(PhotosUI) _pu_beginPageSwipeTest:]
	-[UIScrollView(PhotosUI) _pu_incrementForPageSwipeTest:dt:stop:]
	-[UIScrollView(PhotosUI) _pu_endPageSwipeTest:]
	-[UIScrollView(PhotosUI) pu_isBouncing]
	-[UIScrollView(PhotosUI) pu_cancelScrollAnimation]
	-[UIScrollView(PhotosUI) _pu_setPPTScrollHelper:]
	-[UIScrollView(PhotosUI) pu_ppt_scrollToContentOffset:withCompletionHandler:]
	-[UIScrollView(PhotosUI) pu_ppt_performPageSwipeTest:iterations:numberOfPages:scrollAxis:]

UITouch(PhotosUI)
	// instance methods
	-[UITouch(PhotosUI) pu_locationInPresentationLayerOfView:]

PXNewSearchToken(PUSearchZeroKeyword)
	// class methods
	+[PXNewSearchToken(PUSearchZeroKeyword) pu_searchTokenFromZeroKeyword:]

01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableComposition 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoCompositionInstruction 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoCompositionLayerInstruction 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputContext 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputDeviceDiscoverySession 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimeFormatter 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimedMetadataGroup 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVVideoComposition 
01 00 2000 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMDiscoverabilitySignalEvent 
01 00 2000 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMLParser 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMeshTransform 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMutableMeshTransform 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAState 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddElement 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateElement 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveElement 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateSetValue 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransition 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransitionElement 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKApertureButton 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKApertureSlider 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKBadgeTextView 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKCinematicSubjectIndicatorView 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKEdgeGradientView 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingControl 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingEffectManager 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingNameBadge 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKSlider 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKSubjectIndicatorView 
01 00 2100 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKWheelScrubberView 
01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 2b00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0e00 /System/Library/PrivateFrameworks/CMPhoto.framework/CMPhoto: CMPhotoTiledLayer 
01 00 2440 /System/Library/PrivateFrameworks/ContactsAutocomplete.framework/ContactsAutocomplete: CNAutocompleteFetchContext 
01 00 2240 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 2240 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 2340 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactPickerViewController 
01 00 2240 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 2340 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactViewController 
01 00 2340 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMonogrammer 
01 00 2240 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 2a00 /System/Library/PrivateFrameworks/CPAnalytics.framework/CPAnalytics: CPAnalytics 
01 00 0400 /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary: CPLLibraryManager 
01 00 1500 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 2e00 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICCloudServiceStatusMonitor 
01 00 2e00 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICPrivacyInfo 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISAVPlayerLayer 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISAnimatedImageView 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISAsset 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISLivePhotoPlayer 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISLivePhotoUIView 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISPlayerItem 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISVitalitySettings 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISWrappedAVAudioSession 
01 00 1c00 /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer: ISWrappedAVPlayer 
01 00 2d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPApplePhotosStatusMetadata 
01 00 2d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 2d00 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0b00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0c00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPickerController 
01 00 0c00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 0c00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 0500 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 3500 /System/Library/Frameworks/FileProvider.framework/FileProvider: NSFileProviderManager 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 3100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: NSShadow 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 3400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 3000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUAuxiliaryImageRenderRequest 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUBufferRenderClient 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUCropModel 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFactory 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFillScalePolicy 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUFitScalePolicy 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGeometryRequest 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUGlobalSettings 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImagePropertiesClient 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUImagePropertiesRequest 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NULivePhotoRenderClient 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NULivePhotoRenderRequest 
01 00 2700 /System/Library/PrivateFrameworks/NeutrinoKit.framework/NeutrinoKit: NUMediaView 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUPriority 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURenderTransaction 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NURuleSystem 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoAttributesRequest 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoPlaybackCompositor 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoRenderClient 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoRenderRequest 
01 00 2600 /System/Library/PrivateFrameworks/NeutrinoCore.framework/NeutrinoCore: NUVideoUtilities 
01 00 1400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1400 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBWelcomeController 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFAssetAdjustments 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFAssetBundle 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFCameraMetadataSerialization 
01 00 0f00 /System/Library/PrivateFrameworks/PhotoFoundation.framework/PhotoFoundation: PFCoalescer 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFExportGIFRequest 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFImageMetadata 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFMediaUtilities 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFSceneTaxonomy 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFSlowMotionUtilities 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFUniformTypeUtilities 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAVObjectBuilder 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAdjustments 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoComplement 
01 00 1200 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoMetadata 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAdjustmentData 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAnimatedImage 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAnimatedImageRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollection 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollectionChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetExportRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetPLAdapter 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResource 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceCreationOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceManager 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceQualityClass 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHCachingImageManager 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHChange 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHCollection 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHCollectionList 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHCollectionListChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHConcurrentMapTable 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingInput 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingInputRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingOutput 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingOutputRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHDetectionTrait 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHFace 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHFetchResult 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImageIODecoder 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImportController 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImportSession 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHImportUrlSource 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHLivePhoto 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHLivePhotoRequestOptions 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHManualFetchResult 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHMemoryChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHMoment 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHMomentShare 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHObject 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHPerson 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHPersonChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHPhotosHighlight 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHPlaceholderImageHelper 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHQuestion 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHResourceLocalAvailabilityRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHResourceLocalAvailabilityRequestOptions 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PHRootSettings 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHSceneClassification 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHSmartAlbumChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHSuggestion 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHSuggestionChangeRequest 
01 00 2c00 /System/Library/Frameworks/Photos.framework/Photos: PHVideoRequestOptions 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIAutoLoopAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICinematicVideoUtilities 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionExporter 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionExporterAuxiliaryOptions 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionExporterImageOptions 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionFinalizer 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionSerializer 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICompositionSerializerFormatVersion 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICropAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PICropAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIDebugAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIDefinitionAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIDepthEffectApertureAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIFaceBalanceAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIFaceObservationCache 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIGlobalSettings 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIManualRedEyeAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PINoiseReductionAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIPerspectiveAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIPhotoEditHelper 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIPipelineFilters 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIPortraitAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIRawNoiseReductionAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIRedEyeAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIReframeRules 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISharpenAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISmartBlackAndWhiteAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISmartColorAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISmartColorAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISmartToneAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PISmartToneAutoCalculator 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIVideoStabilizeRequest 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIVignetteAdjustmentController 
01 00 2800 /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging: PIWhiteBalanceAdjustmentController 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLAccountStore 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLAvalanche 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLCAAnimationDelegate 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCacheDeleteClient 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLChangeNotificationCenter 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLClientApplicationIdentification 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudFeedEntry 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudPhotoLibraryHelper 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudSharedAlbum 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudSharedAlbumInvitationRecord 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudSharingInvitationChangeJob 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCloudStreamShareJob 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLCommentsFontCache 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLCompositionHelper 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLDateRangeFormatter 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLEditSource 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLFigPreheatItem 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLFilteredAlbum 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLFilteredAlbumList 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLFormatChooser 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLGenericAlbum 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLImageFormat 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLImageGeometry 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLLimitedLibraryFetchFilter 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLLimitedLibraryPicker 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLLivePhotoEditSource 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLManagedAlbumList 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLManagedAsset 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLNotificationManager 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEditExportProperties 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEditExporterMetadataConverter 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEditPersistenceManager 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEditRenderer 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEditSource 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoEffect 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoLibrary 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoLibraryBundleController 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLPhotoLibraryPathManager 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoSharingHelper 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoStreamsHelper 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLPhotosDefaults 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLPrivacy 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLProgressView 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLRoundProgressView 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLSandboxedURL 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLSceneClassification 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLSecurity 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLSimpleAlbumList 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLSlalomUtilities 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLSortedAlbumList 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLStreamShareSource 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLTiledLayer 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLUIEditVideoViewController 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLUIImageViewController 
01 00 0200 /System/Library/PrivateFrameworks/PhotoLibraryServicesCore.framework/PhotoLibraryServicesCore: PLUUIDString 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLUserActivityDaemonJob 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLVideoEditSource 
01 00 1000 /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary: PLVideoRemaker 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLVideoTranscoder 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLWarningHelper 
01 00 1100 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLZeroKeywordStore 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTChoiceRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTEditFloatRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRowAction 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSChoiceRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSModule 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSSliderRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSSwitchRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSliderRow 
01 00 1640 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 1740 /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI: PTUIModuleController 
01 00 1740 /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI: PTUISettingsController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXActivity 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXActivityCoordinator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXActivitySpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXActivityUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAlbumStreamingOptionsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAlbumsDebugUISettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAlertController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAnimationTracker 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXApplicationSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXApplicationState 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXArrayChangeDetails 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetActionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetAnalyzer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetBadgeManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetEditOperationManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetEditOperationPerformer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetMetadataDonator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetReference 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetVariationAutoloopCollectionViewCell 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetVariationImageCollectionViewCell 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetVariationOption 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetVariationRenderProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetVariationsSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAssetsDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXAsyncOperation 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXBadgedThumbnailView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXBarAnimationOptions 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXBarAppearance 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXBasicGadgetDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCMMAssetPreparationOptions 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCMMViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCPLStatusProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCPLUIStatusProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCinematicEditController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCloudPhotoWelcomeNavigationController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCloudPhotoWelcomeViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCloudQuotaControllerHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCollectionListActionPerformer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCollectionTileLayoutTemplate 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCollectionsDataSourceChangeDetails 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCompleteMyMomentSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContentSyndicationAssetSavingHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContentSyndicationPhotoKitSocialLayerHighlightProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContentSyndicationSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContentUnavailablePlaceholderManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContentUnavailableView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXContextualNotification 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCuratedLibrarySettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCuratedLibraryStatisticsController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCuratedLibraryUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXCuratedLibraryViewProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDataSectionEnablementForwarder 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDebugMemoryGeneratorsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDiagnosticsController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDiagnosticsItemProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDisplayAssetCountsByPlaybackStyle 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDisplayAssetVideoContentDeliveryStrategy 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDisplayLink 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDisplayTitleInfo 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDragAndDropSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDragAndDropUIUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXDraggingItemLocalObject 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXEditableNavigationTitleView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFavoritesSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeatureSpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeatureSpecManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedAssetContainerList 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedCommentsSectionInfo 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedDateFormatter 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedSectionInfo 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedSectionInfosManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedbackAssetUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedbackImageQualityUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedbackTapToRadarUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFeedbackTapToRadarViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFetchResultBasedMemoriesDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFileBackedAsset 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFloatingCardPresentationController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFocusInfo 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFooterSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXFooterViewModel 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXForYouBadgeManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXForYouGadgetViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXForYouSuggestionAssetsDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXForYouSuggestionDisplayAsset 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGadgetCollectionViewLayout 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGadgetDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGadgetProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGadgetSpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGadgetUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXGridSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHUDBoxedValueVisualization 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHUDTimeIntervalVisualization 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHUDView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHUDVisualization 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHighlightDiagnosticsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHorizontalCollectionGadget 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXHorizontalFeedLayoutGenerator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImageModulationManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportHistorySectionHeaderView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportItemViewModel 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXImportSourceNavigationListItem 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXInboxTableViewCell 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXInboxViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXInfoUpdater 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXInvitationRecipient 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLabelSpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLayoutItem 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLayoutMetricInterpolator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLayoutMetrics 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLegacySectionedDataSourceChangeDetails 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLivePhotoTrimScrubberSnapStripController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLivePhotoTrimScrubberSnapStripControllerSpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLivePhotoTrimScrubberSpec 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLoadingStatusManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXLocalization 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMediaProviderManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMediaTypeInfoManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMediaViewControllerEventTracker 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMemoriesFeedSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMemoriesFeedUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMemoriesTitleHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMemoriesUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMetadataUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMockExtendedTraitCollection 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXMutableIndexPathSet 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListActionItem 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListActivityItemDataSectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListAssetCollectionItem 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListDataSectionConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListDataSectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListGadget 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListGadgetProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListGroupItem 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationListItemDataSectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNavigationTitleView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNewSearchToken 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXNumberAnimator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXObservable 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXOneUpPresentation 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXOneUpSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPLLibraryContentModeSelection 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleAlbumProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleBootstrapContext 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleDetailSettingsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleDetailViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleFaceCropFetchOptions 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleFaceCropManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleFaceTileImageManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleRecoCollectionViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleUISettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPeopleZeroKeywordCollectionViewCell 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAdjustedUIMediaProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetActionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetActionPerformer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetCollectionDropAssetsActionPerformer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetsDataSource 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitAssetsDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitCPLActionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitCollectionsDataSourceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitCollectionsDataSourceManagerConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitUIMediaProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoKitVideoContentProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoLibraryProcessingProgressRow 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoPickerSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotoStreamComposeServiceViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDataSource 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDataSourceConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsContext 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsDateTimeEditUIFactory 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsFloatingCardLayout 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsLocationSearchUIFactory 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosDetailsVisualLookupData 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosGlobalFooterView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosGridPromptHeaderView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosLibraryFooterViewModel 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosSectionHeaderMetrics 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosSectionHeaderView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosSyncHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPhotosUIViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPinchTracker 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPlacesAlbumCoverProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPlacesMapContainerViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPlacesMapFetchResultViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPlacesSearchProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPowerController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXPreloadScheduler 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXProgrammaticNavigationDestination 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXProgrammaticNavigationRequest 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXRecipientTransportUtilities 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXRegionOfInterest 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXRootSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXRoundedCornerOverlayView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXRunNode 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXScheduler 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchAnalyticsSession 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchComposableDataSource 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchHistoryManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchIndexManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchQuery 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchQueryController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchQueryOptions 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchSuggestionsSectionProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSearchZeroKeywordCollectionViewCell 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSectionedSelectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSelectionCoordinator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSelectionSnapshot 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSettingsConfigurationsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSettingsSearchViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharedAlbumContactMatcher 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharedAlbumHeaderView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharedAlbumInvitationGadget 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharedAlbumInvitationView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharedAlbumSubscriberInfo 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharingConfidentialityController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSharingSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSidebarDataController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSidebarOutlineSectionController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSimpleVideoScrubberControllerTarget 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSimpleWrappedVideoScrubberControllerTarget 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSlideshowSession 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSnapStripView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSplitViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStackLayoutGenerator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStackedDataSectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStaticEditSourceLoader 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStoryDemoActivity 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXStoryView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSuggestLessPeopleHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSwipeDownSettings 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSwipeDownTracker 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSwipeSelectionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXSystemNavigation 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTapToRadarGadgetProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTextBannerView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTimeInterval 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTimelineDiagnosticAgent 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTitleSubtitleUILabel 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTouchingUIGestureRecognizer 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTrimToolPlayerWrapperLivePhotoView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXTrimToolPlayerWrapperNUMediaView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIAssetBadgeView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIAutoScroller 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIButton 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIButtonConfiguration 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIFlattenedAssetBadgeView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIFocusTimelineView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUILivePhotoTrimScrubber 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUIMediaProvider 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUISearchResultsViewController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUISlowMotionEditor 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUISnappingController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUISubjectTrackingView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUpdater 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXUserEventTracker 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVerticalFeedLayoutGenerator 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVerticalSwipeGestureRecognizerHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoPlayerView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoScrubberController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoSessionManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoSessionUIView 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoTrimBurnInUtility 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVideoTrimQueueController 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXViewLayoutHelper 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXVisualIntelligenceManager 
01 00 1300 /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore: PXZoomAnimationCoordinator 
01 00 2940 /System/Library/Frameworks/Social.framework/Social: SLComposeSheetConfigurationItem 
01 00 2940 /System/Library/Frameworks/Social.framework/Social: SLImageAttachment 
01 00 2940 /System/Library/Frameworks/Social.framework/Social: SLVideoAttachment 
01 00 1f00 /System/Library/PrivateFrameworks/TipKit.framework/TipKit: TPKContentController 
01 00 1f00 /System/Library/PrivateFrameworks/TipKit.framework/TipKit: TPKContentPopoverViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityCustomAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityHUDItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationExtensionActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAssignToContactActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBackgroundConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryDelete 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryLabel 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryOutlineDisclosure 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryReorder 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionLayoutListConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCellRegistration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDropProposal 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayout 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutAttributes 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewLayoutInvalidationContext 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewListCell 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewTransitionLayout 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UICopyToPasteboardActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDeferredMenuElement 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImpactFeedbackGenerator 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMailActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMessageActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMovieScrubber 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMultiSelectInteraction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationButton 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPencilInteraction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPercentDrivenInteractiveTransition 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPickerView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHighlightEffect 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressHUD 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISaveToCameraRollActivity 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchToken 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarHideAnimationParameters 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarAppearance 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITouch 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITransitionView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 0900 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityBundleImageConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomization 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIActivityItemCustomizationGroup 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropViewSettings 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBasicCellContentViewConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewControllerLayoutToLayoutTransition 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewOutlineCell 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentViewEditingConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiscreteFeedback 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDragSnappingFeedbackGenerator 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicAnimation 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicAnimationActiveValue 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicAnimationGroup 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDynamicValueAnimation 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPreviewPresentationController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIPreviewTransitionDelegate 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIScreenRoutePickerViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISelectionFeedbackGeneratorConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetAnimationController 
