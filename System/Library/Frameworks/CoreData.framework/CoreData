|| __DATA.__objc_data _OBJC_CLASS_$_NSAsynchronousFetchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSAsynchronousFetchResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSAtomicStore
|| __DATA.__objc_data _OBJC_CLASS_$_NSBatchInsertRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSBatchInsertResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSBatchUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSBatchUpdateResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringDelegateSerializationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringDelegateSerializationRequestResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringExportProgressRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringExportProgressResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringExportRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringFetchRecordsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringImportRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringInitializeSchemaRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringResetMetadataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringResetZoneRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSCoreDataCoreSpotlightDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_NSEntityMapping
|| __DATA.__objc_data _OBJC_CLASS_$_NSEntityMigrationPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_NSIncrementalStoreNode
|| __DATA.__objc_data _OBJC_CLASS_$_NSManagedImmutableObject
|| __DATA.__objc_data _OBJC_CLASS_$_NSMappingModel
|| __DATA.__objc_data _OBJC_CLASS_$_NSMigrationManager
|| __DATA.__objc_data _OBJC_CLASS_$_NSPersistentCloudKitContainer
|| __DATA.__objc_data _OBJC_CLASS_$_NSPersistentCloudKitContainerOptions
|| __DATA.__objc_data _OBJC_CLASS_$_NSPersistentStoreAsynchronousResult
|| __DATA.__objc_data _OBJC_CLASS_$_NSPropertyMapping
|| __DATA.__objc_data _OBJC_CLASS_$_NSXPCStoreConnectionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSXPCStoreServer
|| __DATA.__objc_data _OBJC_CLASS_$_NSXPCStoreServerConnectionContext
|| __DATA.__objc_data _OBJC_CLASS_$_NSXPCStoreServerRequestHandlingPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_NSAsynchronousFetchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSAsynchronousFetchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSAtomicStore
|| __DATA.__objc_data _OBJC_METACLASS_$_NSBatchInsertRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSBatchInsertResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSBatchUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringDelegateSerializationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringDelegateSerializationRequestResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringExportProgressRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringExportProgressResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringExportRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringFetchRecordsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringImportRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringInitializeSchemaRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringResetMetadataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringResetZoneRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCoreDataCoreSpotlightDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_NSEntityMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_NSEntityMigrationPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_NSManagedImmutableObject
|| __DATA.__objc_data _OBJC_METACLASS_$_NSMappingModel
|| __DATA.__objc_data _OBJC_METACLASS_$_NSMigrationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NSPersistentCloudKitContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_NSPersistentCloudKitContainerOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_NSPersistentStoreAsynchronousResult
|| __DATA.__objc_data _OBJC_METACLASS_$_NSPropertyMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_NSXPCStoreConnectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSXPCStoreServerConnectionContext
|| __DATA_CONST.__const _NSAddedPersistentStoresKey
|| __DATA_CONST.__const _NSAffectedObjectsErrorKey
|| __DATA_CONST.__const _NSAffectedStoresErrorKey
|| __DATA_CONST.__const _NSBinaryStoreInsecureDecodingCompatibilityOption
|| __DATA_CONST.__const _NSBinaryStoreSecureDecodingClasses
|| __DATA_CONST.__const _NSBinaryStoreType
|| __DATA_CONST.__const _NSCKRecordIDAttributeName
|| __DATA_CONST.__const _NSCKRecordSystemFieldsAttributeName
|| __DATA_CONST.__const _NSCloudKitMirroringDelegateDidResetSyncNotificationName
|| __DATA_CONST.__const _NSCloudKitMirroringDelegateIgnoredPropertyKey
|| __DATA_CONST.__const _NSCloudKitMirroringDelegateResetSyncReasonKey
|| __DATA_CONST.__const _NSCloudKitMirroringDelegateWillResetSyncNotificationName
|| __DATA_CONST.__const _NSCoreDataCoreSpotlightExporter
|| __DATA_CONST.__const _NSDeletedObjectIDsKey
|| __DATA_CONST.__const _NSDeletedObjectsKey
|| __DATA_CONST.__const _NSDetailedErrorsKey
|| __DATA_CONST.__const _NSFetchRequestLimitSubstitutionKey
|| __DATA_CONST.__const _NSFetchRequestOffsetSubstitutionKey
|| __DATA_CONST.__const _NSIgnorePersistentStoreVersioningOption
|| __DATA_CONST.__const _NSInMemoryStoreType
|| __DATA_CONST.__const _NSInferMappingModelAutomaticallyOption
|| __DATA_CONST.__const _NSInsertedObjectIDsKey
|| __DATA_CONST.__const _NSInsertedObjectsKey
|| __DATA_CONST.__const _NSInvalidatedAllObjectsKey
|| __DATA_CONST.__const _NSInvalidatedObjectIDsKey
|| __DATA_CONST.__const _NSInvalidatedObjectsKey
|| __DATA_CONST.__const _NSManagedObjectContextDidMergeChangesObjectIDsNotification
|| __DATA_CONST.__const _NSManagedObjectContextDidSaveNotification
|| __DATA_CONST.__const _NSManagedObjectContextDidSaveObjectIDsNotification
|| __DATA_CONST.__const _NSManagedObjectContextKey
|| __DATA_CONST.__const _NSManagedObjectContextObjectsDidChangeNotification
|| __DATA_CONST.__const _NSManagedObjectContextQueryGenerationKey
|| __DATA_CONST.__const _NSManagedObjectContextWillSaveNotification
|| __DATA_CONST.__const _NSMigratePersistentStoresAutomaticallyOption
|| __DATA_CONST.__const _NSMigrationDestinationObjectKey
|| __DATA_CONST.__const _NSMigrationEntityMappingKey
|| __DATA_CONST.__const _NSMigrationEntityPolicyKey
|| __DATA_CONST.__const _NSMigrationManagerKey
|| __DATA_CONST.__const _NSMigrationPropertyMappingKey
|| __DATA_CONST.__const _NSMigrationSourceObjectKey
|| __DATA_CONST.__const _NSPersistentCloudKitContainerEncryptedAttributeKey
|| __DATA_CONST.__const _NSPersistentHistoryAllowPartialHistoryMigration
|| __DATA_CONST.__const _NSPersistentHistoryTokenKey
|| __DATA_CONST.__const _NSPersistentHistoryTombstoneAttributes
|| __DATA_CONST.__const _NSPersistentHistoryTrackingEntitiesToExclude
|| __DATA_CONST.__const _NSPersistentHistoryTrackingEntitiesToInclude
|| __DATA_CONST.__const _NSPersistentHistoryTrackingKey
|| __DATA_CONST.__const _NSPersistentHistoryUseContextObjectsForDeletes
|| __DATA_CONST.__const _NSPersistentStoreConnectionPoolMaxSizeKey
|| __DATA_CONST.__const _NSPersistentStoreCoordinatorResourceBundlesForMigration
|| __DATA_CONST.__const _NSPersistentStoreCoordinatorStoresDidChangeNotification
|| __DATA_CONST.__const _NSPersistentStoreCoordinatorStoresWillChangeNotification
|| __DATA_CONST.__const _NSPersistentStoreCoordinatorWillRemoveStoreNotification
|| __DATA_CONST.__const _NSPersistentStoreDidImportUbiquitousContentChangesNotification
|| __DATA_CONST.__const _NSPersistentStoreFileProtectionKey
|| __DATA_CONST.__const _NSPersistentStoreForceDestroyOption
|| __DATA_CONST.__const _NSPersistentStoreForceLightweightMigrationOption
|| __DATA_CONST.__const _NSPersistentStoreMirroringDelegateOptionKey
|| __DATA_CONST.__const _NSPersistentStoreMirroringOptionsKey
|| __DATA_CONST.__const _NSPersistentStoreOSCompatibility
|| __DATA_CONST.__const _NSPersistentStoreOrderKeyUpdateNotification
|| __DATA_CONST.__const _NSPersistentStoreRebuildFromUbiquitousContentOption
|| __DATA_CONST.__const _NSPersistentStoreRemoteChangeNotification
|| __DATA_CONST.__const _NSPersistentStoreRemoteChangeNotificationOptionKey
|| __DATA_CONST.__const _NSPersistentStoreRemoteChangeNotificationPostOptionKey
|| __DATA_CONST.__const _NSPersistentStoreRemoveUbiquitousMetadataOption
|| __DATA_CONST.__const _NSPersistentStoreSaveConflictsErrorKey
|| __DATA_CONST.__const _NSPersistentStoreServiceConfigurationOptionKey
|| __DATA_CONST.__const _NSPersistentStoreTimeoutOption
|| __DATA_CONST.__const _NSPersistentStoreTypeKey
|| __DATA_CONST.__const _NSPersistentStoreURLKey
|| __DATA_CONST.__const _NSPersistentStoreUbiquitousContainerIdentifierKey
|| __DATA_CONST.__const _NSPersistentStoreUbiquitousContentNameKey
|| __DATA_CONST.__const _NSPersistentStoreUbiquitousContentURLKey
|| __DATA_CONST.__const _NSPersistentStoreUbiquitousPeerTokenOption
|| __DATA_CONST.__const _NSPersistentStoreUbiquitousTransitionTypeKey
|| __DATA_CONST.__const _NSPersistentStoreUnlinkDestroyOption
|| __DATA_CONST.__const _NSReadOnlyPersistentStoreOption
|| __DATA_CONST.__const _NSRefreshedObjectIDsKey
|| __DATA_CONST.__const _NSRefreshedObjectsKey
|| __DATA_CONST.__const _NSRemotePersistentStoreDidChangeNotification
|| __DATA_CONST.__const _NSRemovedPersistentStoresKey
|| __DATA_CONST.__const _NSSQLiteAnalyzeOption
|| __DATA_CONST.__const _NSSQLiteErrorDomain
|| __DATA_CONST.__const _NSSQLiteManualVacuumOption
|| __DATA_CONST.__const _NSSQLitePersistWALOption
|| __DATA_CONST.__const _NSSQLitePragmasOption
|| __DATA_CONST.__const _NSSQLiteSEEKeychainItemOption
|| __DATA_CONST.__const _NSSQLiteStoreType
|| __DATA_CONST.__const _NSStoreModelVersionHashesKey
|| __DATA_CONST.__const _NSStoreModelVersionIdentifiersKey
|| __DATA_CONST.__const _NSStoreTypeKey
|| __DATA_CONST.__const _NSStoreUUIDKey
|| __DATA_CONST.__const _NSUUIDChangedPersistentStoresKey
|| __DATA_CONST.__const _NSUpdatedObjectIDsKey
|| __DATA_CONST.__const _NSUpdatedObjectsKey
|| __DATA_CONST.__const _NSValidationKeyErrorKey
|| __DATA_CONST.__const _NSValidationObjectErrorKey
|| __DATA_CONST.__const _NSValidationPredicateErrorKey
|| __DATA_CONST.__const _NSValidationValueErrorKey
|| __DATA_CONST.__const _NSXPCStoreAnonymousListenerKey
|| __DATA_CONST.__const _NSXPCStoreDaemonizeKey
|| __DATA_CONST.__const _NSXPCStoreEntitlementNamesKey
|| __DATA_CONST.__const _NSXPCStorePostUpdateNotificationsKey
|| __DATA_CONST.__const _NSXPCStoreServerEndpointFactoryKey
|| __DATA_CONST.__const _NSXPCStoreServiceNameKey
|| __DATA_CONST.__const _NSXPCStoreSkipModelCheckKey
|| __DATA_CONST.__const _NSXPCStoreType
|| __DATA_CONST.__const __NSTriggerModifiedObjectIDsKey
|| __DATA_CONST.__const __NSTriggerModifiedObjectsKey
|| __DATA_DIRTY.__common _NSErrorMergePolicy
|| __DATA_DIRTY.__common _NSMergeByPropertyObjectTrumpMergePolicy
|| __DATA_DIRTY.__common _NSMergeByPropertyStoreTrumpMergePolicy
|| __DATA_DIRTY.__common _NSOverwriteMergePolicy
|| __DATA_DIRTY.__common _NSRollbackMergePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSAtomicStoreCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSBatchDeleteRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSBatchDeleteResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCachingFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCloudKitMirroringDelegateOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSConstraintConflict
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSDerivedAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSEntityDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSExpressionDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchIndexDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchIndexElementDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchRequestExpression
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchedPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFetchedResultsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSIncrementalStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSKnownKeysDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSKnownKeysMappingStrategy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSManagedObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSManagedObjectContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSManagedObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSManagedObjectModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSMergeConflict
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSMergePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentHistoryChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentHistoryResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentHistoryToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentHistoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentStoreCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentStoreDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentStoreRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPersistentStoreResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSQueryGenerationToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSRelationshipDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSSaveChangesRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSCoreDataInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSAtomicStoreCacheNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSBatchDeleteRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSBatchDeleteResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSBatchUpdateResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCachingFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringDelegateOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCloudKitMirroringRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSConstraintConflict
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSDerivedAttributeDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSEntityDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSExpressionDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchIndexDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchIndexElementDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchRequestExpression
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchedPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFetchedResultsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSIncrementalStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSIncrementalStoreNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSKnownKeysDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSKnownKeysMappingStrategy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSManagedObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSManagedObjectContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSManagedObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSManagedObjectModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSMergeConflict
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSMergePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentHistoryChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentHistoryChangeRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentHistoryResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentHistoryToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentHistoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentStoreCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentStoreDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentStoreRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPersistentStoreResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSPropertyDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSQueryGenerationToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSRelationshipDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSSaveChangesRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSXPCStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSXPCStoreServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSXPCStoreServerRequestHandlingPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSCoreDataInternal
|| __TEXT.__const _NSCoreDataVersionNumber
|| __TEXT.__const __NSBackgroundThreadConfinementConcurrencyType
|| __TEXT.__text __NSCoreDataLog
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFArrayReplaceValues
__ CoreFoundation: _CFArraySetValueAtIndex
__ CoreFoundation: _CFBitVectorContainsBit
__ CoreFoundation: _CFBitVectorCreate
__ CoreFoundation: _CFBitVectorGetBitAtIndex
__ CoreFoundation: _CFBitVectorGetBits
__ CoreFoundation: _CFBitVectorGetCount
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetRetainCount
__ CoreFoundation: _CFHashBytes
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFMergeSortArray
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _CFRunLoopRemoveObserver
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreate
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetValue
__ CoreFoundation: _CFSetGetValues
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCompareWithOptionsAndLocale
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableWithExternalCharactersNoCopy
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithCStringNoCopy
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithCharactersNoCopy
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringEncodingUnicodeToBytes
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringFindWithOptionsAndLocale
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringHashCString
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFURLCreateAbsoluteURLWithBytes
__ CoreFoundation: _CFURLGetBytes
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLIsUbiquitousItemKey
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusCurrent
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusKey
__ CoreFoundation: _NSURLUbiquitousItemIsDownloadingKey
__ CoreFoundation: _NSURLUbiquitousItemIsUploadedKey
__ CoreFoundation: _NSURLUbiquitousItemIsUploadingKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSArray
__ CoreFoundation: _OBJC_METACLASS_$_NSData
__ CoreFoundation: _OBJC_METACLASS_$_NSDictionary
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_METACLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_METACLASS_$_NSOrderedSet
__ CoreFoundation: __CFDictionarySetCapacity
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: __CFStringCheckAndGetCharacterAtIndex
__ CoreFoundation: __CFStringGetLength2
__ CoreFoundation: __CFURLIsItemPromiseAtURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___CFOASafe
__ CoreFoundation: ___CFSetLastAllocationEventName
__ CoreFoundation: ___CFStringComputeEightBitStringEncoding
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1970
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFAllocatorUseContext
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSAllocateObject
__ Foundation: _NSAllocateScannedUncollectable
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDeallocateObject
__ Foundation: _NSDeallocateZombies
__ Foundation: _NSDecrementExtraRefCountWasZero
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileProtectionComplete
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSInconsistentArchiveException
__ Foundation: _NSIncrementExtraRefCount
__ Foundation: _NSKeyValueChangeKindKey
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedUnarchiveFromDataTransformerName
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapRemove
__ Foundation: _NSObjectInaccessibleException
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSRecordAllocationEvent
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSecureUnarchiveFromDataTransformerName
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUbiquityIdentityDidChangeNotification
__ Foundation: _NSUnarchiveFromDataTransformerName
__ Foundation: _NSUndefinedKeyException
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUndoManagerCheckpointNotification
__ Foundation: _NSUserDefaultsDidChangeNotification
__ Foundation: _NSUserName
__ Foundation: _NSZombieEnabled
__ Foundation: _NSZoneFree
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCalendarDate
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicateOperator
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicateOperator
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSConstantValueExpression
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSEqualityPredicateOperator
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFalsePredicate
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileVersion
__ Foundation: _OBJC_CLASS_$_NSFunctionExpression
__ Foundation: _OBJC_CLASS_$_NSInPredicateOperator
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyPathExpression
__ Foundation: _OBJC_CLASS_$_NSKeyPathSpecifierExpression
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNotificationQueue
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSOrderedCollectionChange
__ Foundation: _OBJC_CLASS_$_NSOrderedCollectionDifference
__ Foundation: _OBJC_CLASS_$_NSPointerFunctions
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPredicateOperator
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSecureUnarchiveFromDataTransformer
__ Foundation: _OBJC_CLASS_$_NSSelfExpression
__ Foundation: _OBJC_CLASS_$_NSSetExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSSubqueryExpression
__ Foundation: _OBJC_CLASS_$_NSTernaryExpression
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSTruePredicate
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSValueTransformer
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSEqualityPredicateOperator
__ Foundation: _OBJC_METACLASS_$_NSExpression
__ Foundation: _OBJC_METACLASS_$_NSFileCoordinator
__ Foundation: _OBJC_METACLASS_$_NSInPredicateOperator
__ Foundation: _OBJC_METACLASS_$_NSNumber
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSSecureUnarchiveFromDataTransformer
__ Foundation: _OBJC_METACLASS_$_NSString
__ Foundation: __NSGetUsingKeyValueGetter
__ Foundation: __NSKeyValueCreateImplicitObservationInfo
__ Foundation: __NSKeyValueGetterForClassAndKey
__ Foundation: __NSKeyValueMutableSetGetterForClassAndKey
__ Foundation: __NSKeyValuePrimitiveGetterForClassAndKey
__ Foundation: __NSKeyValuePrimitiveSetterForClassAndKey
__ Foundation: __NSKeyValueSetterForClassAndKey
__ Foundation: __NSMethodExceptionProem
__ Foundation: __NSSetUsingKeyValueSetter
__ Security: _SecItemCopyMatching
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateWithAuditToken
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecValueRef
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Init
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_USER_REQUESTED_BACKUP_TASK
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memmove_chk
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___strlcat_chk
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: ___strncat_chk
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dyld_get_image_header
__ libSystem.B.dylib: __dyld_get_image_name
__ libSystem.B.dylib: __dyld_image_count
__ libSystem.B.dylib: __getprivatesystemidentifier
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_bool_false
__ libSystem.B.dylib: __xpc_bool_true
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _copyfile
__ libSystem.B.dylib: _copyfile_state_alloc
__ libSystem.B.dylib: _copyfile_state_free
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_context
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_specific
__ libSystem.B.dylib: _dispatch_queue_offsets
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_context
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_sync_f
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _environ
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _flsl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _getpagesize
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _link
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_default_zone
__ libSystem.B.dylib: _malloc_zone_batch_free
__ libSystem.B.dylib: _malloc_zone_batch_malloc
__ libSystem.B.dylib: _malloc_zone_calloc
__ libSystem.B.dylib: _malloc_zone_free
__ libSystem.B.dylib: _malloc_zone_malloc
__ libSystem.B.dylib: _malloc_zone_realloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern8
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _mprotect
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _open_dprotected_np
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _posix_spawn_file_actions_adddup2
__ libSystem.B.dylib: _posix_spawn_file_actions_addopen
__ libSystem.B.dylib: _posix_spawn_file_actions_destroy
__ libSystem.B.dylib: _posix_spawn_file_actions_init
__ libSystem.B.dylib: _posix_spawnp
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_destroy
__ libSystem.B.dylib: _pthread_cond_init
__ libSystem.B.dylib: _pthread_cond_signal
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_key_init_np
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_trylock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_yield_np
__ libSystem.B.dylib: _pwrite
__ libSystem.B.dylib: _qsort_b
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strnstr
__ libSystem.B.dylib: _strsep
__ libSystem.B.dylib: _strtouq
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _utimes
__ libSystem.B.dylib: _uuid_generate_random
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: _uuid_unparse
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_copy
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _vm_page_mask
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _waitpid
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_copy_entitlement_for_self
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_transaction_begin
__ libSystem.B.dylib: _xpc_transaction_end
__ libSystem.B.dylib: dyld_stub_binder
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: __objc_msgForward
__ libobjc.A.dylib: __objc_registerTaggedPointerClass
__ libobjc.A.dylib: _class_addIvar
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_conformsToProtocol
__ libobjc.A.dylib: _class_copyProtocolList
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getInstanceSize
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _class_getMethodImplementation
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _class_isMetaClass
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _imp_removeBlock
__ libobjc.A.dylib: _ivar_getOffset
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _method_getArgumentType
__ libobjc.A.dylib: _method_getDescription
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getNumberOfArguments
__ libobjc.A.dylib: _method_getReturnType
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _method_invoke
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateClassPair
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_constructInstance
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_debug_taggedpointer_mask
__ libobjc.A.dylib: _objc_debug_taggedpointer_obfuscator
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_destructInstance
__ libobjc.A.dylib: _objc_disposeClassPair
__ libobjc.A.dylib: _objc_duplicateClass
__ libobjc.A.dylib: _objc_ehtype_vtable
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_lookUpClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_registerClassPair
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_storeWeakOrNil
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _object_getIndexedIvars
__ libobjc.A.dylib: _object_getIvar
__ libobjc.A.dylib: _object_getMethodImplementation
__ libobjc.A.dylib: _object_setClass
__ libobjc.A.dylib: _object_setInstanceVariableWithStrongDefault
__ libobjc.A.dylib: _property_getAttributes
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_getName
__ libobjc.A.dylib: _sel_registerName
__ libsqlite3.dylib: __sqlite3_db_clone
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close_v2
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_create_collation
__ libsqlite3.dylib: _sqlite3_create_function
__ libsqlite3.dylib: _sqlite3_db_config
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_errstr
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_intarray_bind
__ libsqlite3.dylib: _sqlite3_intarray_create
__ libsqlite3.dylib: _sqlite3_key_v2
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_libversion
__ libsqlite3.dylib: _sqlite3_malloc
__ libsqlite3.dylib: _sqlite3_mprintf
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_prepare_v3
__ libsqlite3.dylib: _sqlite3_rekey_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_blob
__ libsqlite3.dylib: _sqlite3_result_double
__ libsqlite3.dylib: _sqlite3_result_error
__ libsqlite3.dylib: _sqlite3_result_int
__ libsqlite3.dylib: _sqlite3_result_null
__ libsqlite3.dylib: _sqlite3_result_text
__ libsqlite3.dylib: _sqlite3_snapshot_cmp
__ libsqlite3.dylib: _sqlite3_snapshot_free
__ libsqlite3.dylib: _sqlite3_snapshot_get
__ libsqlite3.dylib: _sqlite3_snapshot_open
__ libsqlite3.dylib: _sqlite3_snapshot_recover
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_blob
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_double
__ libsqlite3.dylib: _sqlite3_value_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_value_type
__ libz.1.dylib: _crc32
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
_NSNoChangeToken : NSObject <NSSecureCoding>
  // class methods
  +[_NSNoChangeToken allocWithZone:]
  +[_NSNoChangeToken initialize]
  +[_NSNoChangeToken supportsSecureCoding]
  +[_NSNoChangeToken defaultInstance]

  // instance methods
  -[_NSNoChangeToken init]
  -[_NSNoChangeToken retainCount]
  -[_NSNoChangeToken isEqual:]
  -[_NSNoChangeToken retain]
  -[_NSNoChangeToken release]
  -[_NSNoChangeToken autorelease]
  -[_NSNoChangeToken _tryRetain]
  -[_NSNoChangeToken _isDeallocating]
  -[_NSNoChangeToken encodeWithCoder:]
  -[_NSNoChangeToken initWithCoder:]
  -[_NSNoChangeToken _initPrivate]


_NSXPCStoreObjectIDArrayConstantValueExpression : NSObject <NSSecureCoding, NSCoding>
  // class methods
  +[_NSXPCStoreObjectIDArrayConstantValueExpression supportsSecureCoding]

  // instance methods
  -[_NSXPCStoreObjectIDArrayConstantValueExpression dealloc]
  -[_NSXPCStoreObjectIDArrayConstantValueExpression encodeWithCoder:]
  -[_NSXPCStoreObjectIDArrayConstantValueExpression initWithCoder:]


NSBatchInsertRequestEncodingToken : NSObject <NSSecureCoding>
 @property  NSString *entityName
 @property  NSArray *objectsToInsert
 @property  NSInputStream *inputStream
 @property  unsigned long resultType
 @property  BOOL secure

  // class methods
  +[NSBatchInsertRequestEncodingToken supportsSecureCoding]

  // instance methods
  -[NSBatchInsertRequestEncodingToken dealloc]
  -[NSBatchInsertRequestEncodingToken encodeWithCoder:]
  -[NSBatchInsertRequestEncodingToken initWithCoder:]
  -[NSBatchInsertRequestEncodingToken resultType]
  -[NSBatchInsertRequestEncodingToken entityName]
  -[NSBatchInsertRequestEncodingToken inputStream]
  -[NSBatchInsertRequestEncodingToken objectsToInsert]
  -[NSBatchInsertRequestEncodingToken initForRequest:]
  -[NSBatchInsertRequestEncodingToken secure]


NSBatchUpdateRequestEncodingToken : NSObject <NSSecureCoding>
 @property  NSString *entityName
 @property  NSPredicate *predicate
 @property  NSDictionary *columnsToUpdate
 @property  long long resultType
 @property  BOOL includeSubEntities
 @property  BOOL secure

  // class methods
  +[NSBatchUpdateRequestEncodingToken supportsSecureCoding]

  // instance methods
  -[NSBatchUpdateRequestEncodingToken dealloc]
  -[NSBatchUpdateRequestEncodingToken encodeWithCoder:]
  -[NSBatchUpdateRequestEncodingToken initWithCoder:]
  -[NSBatchUpdateRequestEncodingToken predicate]
  -[NSBatchUpdateRequestEncodingToken resultType]
  -[NSBatchUpdateRequestEncodingToken entityName]
  -[NSBatchUpdateRequestEncodingToken initForRequest:]
  -[NSBatchUpdateRequestEncodingToken secure]
  -[NSBatchUpdateRequestEncodingToken columnsToUpdate]
  -[NSBatchUpdateRequestEncodingToken includeSubEntities]


NSBatchDeleteRequestEncodingToken : NSObject <NSSecureCoding>
 @property  NSData *fetchData
 @property  long long resultType
 @property  BOOL secure

  // class methods
  +[NSBatchDeleteRequestEncodingToken supportsSecureCoding]

  // instance methods
  -[NSBatchDeleteRequestEncodingToken dealloc]
  -[NSBatchDeleteRequestEncodingToken encodeWithCoder:]
  -[NSBatchDeleteRequestEncodingToken initWithCoder:]
  -[NSBatchDeleteRequestEncodingToken resultType]
  -[NSBatchDeleteRequestEncodingToken initForRequest:]
  -[NSBatchDeleteRequestEncodingToken secure]
  -[NSBatchDeleteRequestEncodingToken fetchData]


NSPersistentHistoryChangeRequestToken : NSObject <NSSecureCoding>
 @property  NSData *fetchData
 @property  NSDictionary *token
 @property  NSDate *date
 @property  long long resultType
 @property  BOOL delete
 @property  BOOL transactionFromToken
 @property  unsigned long fetchLimit
 @property  unsigned long fetchBatchSize

  // class methods
  +[NSPersistentHistoryChangeRequestToken supportsSecureCoding]

  // instance methods
  -[NSPersistentHistoryChangeRequestToken dealloc]
  -[NSPersistentHistoryChangeRequestToken token]
  -[NSPersistentHistoryChangeRequestToken encodeWithCoder:]
  -[NSPersistentHistoryChangeRequestToken initWithCoder:]
  -[NSPersistentHistoryChangeRequestToken date]
  -[NSPersistentHistoryChangeRequestToken resultType]
  -[NSPersistentHistoryChangeRequestToken fetchLimit]
  -[NSPersistentHistoryChangeRequestToken fetchBatchSize]
  -[NSPersistentHistoryChangeRequestToken initForRequest:]
  -[NSPersistentHistoryChangeRequestToken fetchData]
  -[NSPersistentHistoryChangeRequestToken delete]
  -[NSPersistentHistoryChangeRequestToken transactionFromToken]


_NSXPCStoreUtilities : NSObject
  // class methods
  +[_NSXPCStoreUtilities classesForFetchArchive]
  +[_NSXPCStoreUtilities newSecureArchivedDataWithRootObject:]
  +[_NSXPCStoreUtilities identifierForStore:]
  +[_NSXPCStoreUtilities encodableTokenForStore:queryGenerationToken:]
  +[_NSXPCStoreUtilities logMessage:forComponent:]
  +[_NSXPCStoreUtilities classesForErrorArchive]
  +[_NSXPCStoreUtilities classesForSaveArchive]
  +[_NSXPCStoreUtilities decodeSecureArchivedData:usingDelegate:classes:]
  +[_NSXPCStoreUtilities newUserInfoFromException:]
  +[_NSXPCStoreUtilities _decodeBufferResultSetData:forFetchRequest:options:store:context:rowCacheRows:error:]
  +[_NSXPCStoreUtilities _decodeResultSetData:forFetchRequest:options:store:context:rowCacheRows:error:]


NSXPCStore : NSIncrementalStore <NSSQLModelProvider, NSCoreDataKeyedArchivingDelegate>
 @property  NSString *remoteStoreChangedNotificationName

  // class methods
  +[NSXPCStore initialize]
  +[NSXPCStore archiver:willEncodeObject:]
  +[NSXPCStore replacementObjectForXPCConnection:encoder:object:]
  +[NSXPCStore _isOnExtendedTimeout]
  +[NSXPCStore debugDefault]
  +[NSXPCStore _allowCoreDataFutures]
  +[NSXPCStore setDebugDefault:]

  // instance methods
  -[NSXPCStore dealloc]
  -[NSXPCStore type]
  -[NSXPCStore setIdentifier:]
  -[NSXPCStore unarchiver:didDecodeObject:]
  -[NSXPCStore setURL:]
  -[NSXPCStore replacementObjectForXPCConnection:encoder:object:]
  -[NSXPCStore disconnect]
  -[NSXPCStore serviceName]
  -[NSXPCStore model]
  -[NSXPCStore setMetadata:]
  -[NSXPCStore metadata]
  -[NSXPCStore load:]
  -[NSXPCStore sqlCore]
  -[NSXPCStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSXPCStore setSQLCore:]
  -[NSXPCStore objectIDFactoryForSQLEntity:]
  -[NSXPCStore fileBackedFuturesDirectory]
  -[NSXPCStore sendMessage:fromContext:interrupts:error:]
  -[NSXPCStore remoteStoreChangedNotificationName]
  -[NSXPCStore setupRemoteStoreObserver]
  -[NSXPCStore loadMetadata:]
  -[NSXPCStore _setMetadata:includeVersioning:]
  -[NSXPCStore _sanityCheckToken]
  -[NSXPCStore _setSanityCheckToken:]
  -[NSXPCStore _freeQueryGenerationWithIdentifier:]
  -[NSXPCStore cacheFetchedRows:forManagedObjects:generation:]
  -[NSXPCStore decodePrefetchArray:forSources:context:]
  -[NSXPCStore decodeResults:forFetch:context:error:]
  -[NSXPCStore _commitChangesForRequestContext:]
  -[NSXPCStore _executeSaveRequestForContext:error:]
  -[NSXPCStore executeSaveRequest:withContext:error:]
  -[NSXPCStore executeFetchRequest:withContext:error:]
  -[NSXPCStore executeBatchInsertRequest:withContext:error:]
  -[NSXPCStore executeBatchUpdateRequest:withContext:error:]
  -[NSXPCStore executeBatchDeleteRequest:withContext:error:]
  -[NSXPCStore executePersistentHistoryRequest:withContext:error:]
  -[NSXPCStore _createAndCacheRowForObjectWithID:propertyValues:inContext:error:]
  -[NSXPCStore decodeResults:forFaultOfObjectWithID:context:error:]
  -[NSXPCStore newValuesForObjectWithID:withContext:error:]
  -[NSXPCStore decodeValue:forRelationship:onSource:inContext:error:]
  -[NSXPCStore cacheContents:ofRelationship:onObjectWithID:generation:]
  -[NSXPCStore _allowCoreDataFutures]
  -[NSXPCStore willRemoveFromPersistentStoreCoordinator:]
  -[NSXPCStore supportsConcurrentRequestHandling]
  -[NSXPCStore _rawMetadata__]
  -[NSXPCStore supportsGenerationalQuerying]
  -[NSXPCStore currentQueryGeneration]
  -[NSXPCStore freeQueryGenerationWithIdentifier:]
  -[NSXPCStore reopenQueryGenerationWithIdentifier:error:]
  -[NSXPCStore managedObjectContextDidRegisterObjectsWithIDs:generation:]
  -[NSXPCStore managedObjectContextDidUnregisterObjectsWithIDs:generation:]
  -[NSXPCStore executeRequest:withContext:error:]
  -[NSXPCStore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSXPCStore obtainPermanentIDsForObjects:error:]
  -[NSXPCStore ancillaryModels]
  -[NSXPCStore ancillarySQLModels]
  -[NSXPCStore cacheContents:ofRelationship:onObjectWithID:withTimestamp:generation:]
  -[NSXPCStore _cachedRowForObjectWithID:generation:]
  -[NSXPCStore decodePrefetchResult:forSources:context:]
  -[NSXPCStore objectIDFactoryForEntity:]
  -[NSXPCStore entityForEntityDescription:]
  -[NSXPCStore newObjectIDForEntity:pk:]
  -[NSXPCStore _cachedRowForRelationship:onObjectWithID:generation:]
  -[NSXPCStore _clearCachedRowForObjectWithID:generation:]
  -[NSXPCStore currentChangeToken]
  -[NSXPCStore _objectIDClass]
  -[NSXPCStore _storeInfoForEntityDescription:]
  -[NSXPCStore _newObjectIDForEntityDescription:pk:]
  -[NSXPCStore newForeignKeyID:entity:]
  -[NSXPCStore connectionManager]


NSPersistentHistoryTransaction : NSObject <NSCopying>
 @property  NSDate *timestamp
 @property  NSArray *changes
 @property  long long transactionNumber
 @property  NSString *storeID
 @property  NSString *bundleID
 @property  NSString *processID
 @property  NSString *contextName
 @property  NSString *author
 @property  NSPersistentHistoryToken *token

  // class methods
  +[NSPersistentHistoryTransaction supportsSecureCoding]
  +[NSPersistentHistoryTransaction fetchRequest]
  +[NSPersistentHistoryTransaction entityDescription]
  +[NSPersistentHistoryTransaction entityDescriptionWithContext:]

  // instance methods
  -[NSPersistentHistoryTransaction isEqual:]
  -[NSPersistentHistoryTransaction copyWithZone:]
  -[NSPersistentHistoryTransaction token]
  -[NSPersistentHistoryTransaction encodeWithCoder:]
  -[NSPersistentHistoryTransaction initWithCoder:]
  -[NSPersistentHistoryTransaction timestamp]
  -[NSPersistentHistoryTransaction changes]
  -[NSPersistentHistoryTransaction bundleID]
  -[NSPersistentHistoryTransaction author]
  -[NSPersistentHistoryTransaction storeID]
  -[NSPersistentHistoryTransaction transactionNumber]
  -[NSPersistentHistoryTransaction processID]
  -[NSPersistentHistoryTransaction contextName]
  -[NSPersistentHistoryTransaction initialQueryGenerationToken]
  -[NSPersistentHistoryTransaction postQueryGenerationToken]
  -[NSPersistentHistoryTransaction objectIDNotification]


_NSPersistentHistoryTransaction : NSPersistentHistoryTransaction <NSSecureCoding>
  // class methods
  +[_NSPersistentHistoryTransaction supportsSecureCoding]

  // instance methods
  -[_NSPersistentHistoryTransaction dealloc]
  -[_NSPersistentHistoryTransaction token]
  -[_NSPersistentHistoryTransaction encodeWithCoder:]
  -[_NSPersistentHistoryTransaction initWithCoder:]
  -[_NSPersistentHistoryTransaction timestamp]
  -[_NSPersistentHistoryTransaction changes]
  -[_NSPersistentHistoryTransaction bundleID]
  -[_NSPersistentHistoryTransaction author]
  -[_NSPersistentHistoryTransaction _coordinator]
  -[_NSPersistentHistoryTransaction storeID]
  -[_NSPersistentHistoryTransaction transactionNumber]
  -[_NSPersistentHistoryTransaction processID]
  -[_NSPersistentHistoryTransaction contextName]
  -[_NSPersistentHistoryTransaction initialQueryGenerationToken]
  -[_NSPersistentHistoryTransaction postQueryGenerationToken]
  -[_NSPersistentHistoryTransaction objectIDNotification]
  -[_NSPersistentHistoryTransaction _persistentStore]
  -[_NSPersistentHistoryTransaction _userInfoFromChanges]
  -[_NSPersistentHistoryTransaction initWithDictionary:andObjectID:]
  -[_NSPersistentHistoryTransaction _setCoordinator:]
  -[_NSPersistentHistoryTransaction _setChanges:]
  -[_NSPersistentHistoryTransaction _backingObjectID]


NSXPCStoreManagedObjectArchivingToken : NSObject <NSCoding, NSSecureCoding>
  // class methods
  +[NSXPCStoreManagedObjectArchivingToken supportsSecureCoding]

  // instance methods
  -[NSXPCStoreManagedObjectArchivingToken dealloc]
  -[NSXPCStoreManagedObjectArchivingToken isEqual:]
  -[NSXPCStoreManagedObjectArchivingToken encodeWithCoder:]
  -[NSXPCStoreManagedObjectArchivingToken initWithCoder:]
  -[NSXPCStoreManagedObjectArchivingToken initWithURI:]
  -[NSXPCStoreManagedObjectArchivingToken URI]


NSSQLBlockRequestContext : NSSQLStoreRequestContext
  // instance methods
  -[NSSQLBlockRequestContext dealloc]
  -[NSSQLBlockRequestContext initWithBlock:context:sqlCore:]
  -[NSSQLBlockRequestContext isWritingRequest]
  -[NSSQLBlockRequestContext executeRequestCore:]


NSSQLBatchDeleteRequestContext : NSSQLStoreRequestContext
 @property  NSBatchDeleteRequest *request
 @property  NSFetchRequest *fetchRequestForObjectsToDelete
 @property  NSArray *deleteStatements
 @property  NSSQLFetchRequestContext *fetchContext
 @property  NSArray *affectedObjectIDs
 @property  NSArray *exernalDataReferenceStatements
 @property  NSString *tempTableName
 @property  NSArray *externalDataReferencesToDelete
 @property  NSArray *fileBackedFuturesToDelete

  // instance methods
  -[NSSQLBatchDeleteRequestContext dealloc]
  -[NSSQLBatchDeleteRequestContext request]
  -[NSSQLBatchDeleteRequestContext isWritingRequest]
  -[NSSQLBatchDeleteRequestContext executeRequestCore:]
  -[NSSQLBatchDeleteRequestContext fetchRequestForObjectsToDelete]
  -[NSSQLBatchDeleteRequestContext _createFetchRequestContextForObjectsToDelete]
  -[NSSQLBatchDeleteRequestContext _createDeleteStatements]
  -[NSSQLBatchDeleteRequestContext fetchContext]
  -[NSSQLBatchDeleteRequestContext executePrologue]
  -[NSSQLBatchDeleteRequestContext deleteStatements]
  -[NSSQLBatchDeleteRequestContext affectedObjectIDs]
  -[NSSQLBatchDeleteRequestContext setAffectedObjectIDs:]
  -[NSSQLBatchDeleteRequestContext exernalDataReferenceStatements]
  -[NSSQLBatchDeleteRequestContext setExernalDataReferenceStatements:]
  -[NSSQLBatchDeleteRequestContext tempTableName]
  -[NSSQLBatchDeleteRequestContext setTempTableName:]
  -[NSSQLBatchDeleteRequestContext externalDataReferencesToDelete]
  -[NSSQLBatchDeleteRequestContext setExternalDataReferencesToDelete:]
  -[NSSQLBatchDeleteRequestContext fileBackedFuturesToDelete]
  -[NSSQLBatchDeleteRequestContext setFileBackedFuturesToDelete:]


NSPersistentHistoryChangeRequest : NSPersistentStoreRequest
 @property  long long resultType
 @property  NSPersistentHistoryToken *token
 @property  NSFetchRequest *fetchRequest

  // class methods
  +[NSPersistentHistoryChangeRequest fetchHistoryAfterDate:]
  +[NSPersistentHistoryChangeRequest decodeFromXPCArchive:withContext:]
  +[NSPersistentHistoryChangeRequest deleteHistoryBeforeToken:]
  +[NSPersistentHistoryChangeRequest fetchHistoryAfterToken:]
  +[NSPersistentHistoryChangeRequest fetchHistoryTransactionForToken:]
  +[NSPersistentHistoryChangeRequest deleteHistoryBeforeDate:]
  +[NSPersistentHistoryChangeRequest fetchHistoryAfterTransaction:]
  +[NSPersistentHistoryChangeRequest fetchHistoryWithFetchRequest:]
  +[NSPersistentHistoryChangeRequest deleteHistoryBeforeTransaction:]

  // instance methods
  -[NSPersistentHistoryChangeRequest init]
  -[NSPersistentHistoryChangeRequest dealloc]
  -[NSPersistentHistoryChangeRequest token]
  -[NSPersistentHistoryChangeRequest date]
  -[NSPersistentHistoryChangeRequest initWithDate:]
  -[NSPersistentHistoryChangeRequest predicate]
  -[NSPersistentHistoryChangeRequest sortDescriptors]
  -[NSPersistentHistoryChangeRequest resultType]
  -[NSPersistentHistoryChangeRequest fetchRequest]
  -[NSPersistentHistoryChangeRequest setResultType:]
  -[NSPersistentHistoryChangeRequest fetchOffset]
  -[NSPersistentHistoryChangeRequest fetchLimit]
  -[NSPersistentHistoryChangeRequest propertiesToFetch]
  -[NSPersistentHistoryChangeRequest setFetchLimit:]
  -[NSPersistentHistoryChangeRequest initWithFetchRequest:]
  -[NSPersistentHistoryChangeRequest setFetchBatchSize:]
  -[NSPersistentHistoryChangeRequest initWithToken:]
  -[NSPersistentHistoryChangeRequest requestType]
  -[NSPersistentHistoryChangeRequest isDelete]
  -[NSPersistentHistoryChangeRequest fetchBatchSize]
  -[NSPersistentHistoryChangeRequest propertiesToGroupBy]
  -[NSPersistentHistoryChangeRequest encodeForXPC]
  -[NSPersistentHistoryChangeRequest includesSubentities]
  -[NSPersistentHistoryChangeRequest isFetchTransactionForToken]
  -[NSPersistentHistoryChangeRequest transactionNumber]
  -[NSPersistentHistoryChangeRequest initWithTransactionToken:]
  -[NSPersistentHistoryChangeRequest initWithDate:delete:]
  -[NSPersistentHistoryChangeRequest initWithToken:delete:]
  -[NSPersistentHistoryChangeRequest propertiesToFetchForEntity:includeTransactionStrings:]
  -[NSPersistentHistoryChangeRequest initWithTransactionIDs:]
  -[NSPersistentHistoryChangeRequest initWithTransactionID:delete:transactionOnly:]
  -[NSPersistentHistoryChangeRequest includesPropertyValues]
  -[NSPersistentHistoryChangeRequest propertiesToFetchForEntity:]
  -[NSPersistentHistoryChangeRequest entityNameToFetch]
  -[NSPersistentHistoryChangeRequest useQueryGenerationToken]
  -[NSPersistentHistoryChangeRequest setUseQueryGenerationToken:]
  -[NSPersistentHistoryChangeRequest setFetchRequest:]
  -[NSPersistentHistoryChangeRequest returnsDistinctResults]
  -[NSPersistentHistoryChangeRequest predicateForStoreIdentifier:]


NSPersistentHistoryResult : NSPersistentStoreResult
 @property  id result
 @property  long long resultType

  // instance methods
  -[NSPersistentHistoryResult dealloc]
  -[NSPersistentHistoryResult result]
  -[NSPersistentHistoryResult resultType]
  -[NSPersistentHistoryResult initWithResultType:andResult:]
  -[NSPersistentHistoryResult initWithSubresults:]


PFCloudKitModelValidator : NSObject
 @property  BOOL skipValueTransformerValidation
 @property  BOOL validateLegacyMetadataAttributes

  // class methods
  +[PFCloudKitModelValidator stringFromDeleteRule:]

  // instance methods
  -[PFCloudKitModelValidator init]
  -[PFCloudKitModelValidator dealloc]
  -[PFCloudKitModelValidator validate:]
  -[PFCloudKitModelValidator _validateManagedObjectModel:error:]
  -[PFCloudKitModelValidator validateEntities:error:]
  -[PFCloudKitModelValidator initWithManagedObjectModel:configuration:]
  -[PFCloudKitModelValidator validateEntity:hasAttributeNamed:ofType:andReturnFailureReason:]
  -[PFCloudKitModelValidator skipValueTransformerValidation]
  -[PFCloudKitModelValidator setSkipValueTransformerValidation:]
  -[PFCloudKitModelValidator validateLegacyMetadataAttributes]
  -[PFCloudKitModelValidator setValidateLegacyMetadataAttributes:]


NSXPCStoreServer : NSObject <NSXPCServerProtocol, NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSXPCStoreServer initialize]
  +[NSXPCStoreServer debugDefault]

  // instance methods
  -[NSXPCStoreServer dealloc]
  -[NSXPCStoreServer delegate]
  -[NSXPCStoreServer listener:shouldAcceptNewConnection:]
  -[NSXPCStoreServer replacementObjectForXPCConnection:encoder:object:]
  -[NSXPCStoreServer initForStoreWithURL:usingModel:options:policy:]
  -[NSXPCStoreServer errorIsPlausiblyAnSQLiteIssue:]
  -[NSXPCStoreServer setupRecoveryForConnectionContext:ifNecessary:]
  -[NSXPCStoreServer _createCoordinator]
  -[NSXPCStoreServer removeCachesForConnection:]
  -[NSXPCStoreServer retainedCacheForConnection:]
  -[NSXPCStoreServer handleRequest:reply:]
  -[NSXPCStoreServer handleMetadataRequestInContext:]
  -[NSXPCStoreServer handleFetchRequest:inContext:error:]
  -[NSXPCStoreServer handleSaveRequest:inContext:error:]
  -[NSXPCStoreServer postRemoteChangeNotificationForContext:]
  -[NSXPCStoreServer handleObtainRequest:inContext:error:]
  -[NSXPCStoreServer handleFaultRequest:inContext:error:]
  -[NSXPCStoreServer handleRelationshipFaultRequest:inContext:error:]
  -[NSXPCStoreServer handleNotificationNameRequestInContext:error:]
  -[NSXPCStoreServer handleQueryGenerationRequestInContext:error:]
  -[NSXPCStoreServer handleQueryGenerationReopenRequest:inContext:error:]
  -[NSXPCStoreServer handleQueryGenerationReleaseRequest:inContext:error:]
  -[NSXPCStoreServer handleBatchDeleteRequest:inContext:error:]
  -[NSXPCStoreServer handlePersistentHistoryRequest:inContext:error:]
  -[NSXPCStoreServer handlePersistentHistoryTokenRequest:inContext:error:]
  -[NSXPCStoreServer handleBatchUpdateRequest:inContext:error:]
  -[NSXPCStoreServer handleBatchInsertRequest:inContext:error:]
  -[NSXPCStoreServer initForStoreWithURL:usingModelAtURL:options:policy:]
  -[NSXPCStoreServer errorHandlingDelegate]
  -[NSXPCStoreServer setErrorHandlingDelegate:]
  -[NSXPCStoreServer startListening]
  -[NSXPCStoreServer stopListening]
  -[NSXPCStoreServer requestHandlingPolicy]
  -[NSXPCStoreServer context:shouldHandleInaccessibleFault:forObjectID:andTrigger:]
  -[NSXPCStoreServer localGenerationForXPCToken:withContext:]
  -[NSXPCStoreServer _populateObject:withValuesFromClient:]
  -[NSXPCStoreServer unpackQueryGeneration:withContext:]
  -[NSXPCStoreServer retainedXPCEncodableGenerationTokenForOriginal:inContext:]


_PFResultArray : NSArray /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFResultArray initialize]
  +[_PFResultArray accessInstanceVariablesDirectly]
  +[_PFResultArray classForKeyedUnarchiver]

  // instance methods
  -[_PFResultArray retainCount]
  -[_PFResultArray dealloc]
  -[_PFResultArray retain]
  -[_PFResultArray release]
  -[_PFResultArray copyWithZone:]
  -[_PFResultArray mutableCopyWithZone:]
  -[_PFResultArray count]
  -[_PFResultArray getObjects:]
  -[_PFResultArray countByEnumeratingWithState:objects:count:]
  -[_PFResultArray objectAtIndex:]
  -[_PFResultArray getObjects:range:]
  -[_PFResultArray indexOfObject:]
  -[_PFResultArray indexOfObjectIdenticalTo:]
  -[_PFResultArray classForCoder]
  -[_PFResultArray indexOfObject:inRange:]
  -[_PFResultArray indexOfObjectIdenticalTo:inRange:]
  -[_PFResultArray classForArchiver]
  -[_PFResultArray _metadata]
  -[_PFResultArray initWithObjects:count:store:metadata:]
  -[_PFResultArray hydratedRowAtIndex:]
  -[_PFResultArray _sqlCore]
  -[_PFResultArray _resultSet]


_PFResultObject : NSDictionary /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFResultObject classForKeyedUnarchiver]

  // instance methods
  -[_PFResultObject retainCount]
  -[_PFResultObject dealloc]
  -[_PFResultObject retain]
  -[_PFResultObject release]
  -[_PFResultObject count]
  -[_PFResultObject countByEnumeratingWithState:objects:count:]
  -[_PFResultObject objectForKey:]
  -[_PFResultObject keyEnumerator]
  -[_PFResultObject classForCoder]
  -[_PFResultObject initWithObjects:forKeys:count:]
  -[_PFResultObject classForArchiver]
  -[_PFResultObject valueAtIndex:]
  -[_PFResultObject _setParentBuffer:]
  -[_PFResultObject _columnOffsets]
  -[_PFResultObject number32FromPtr:]
  -[_PFResultObject number64FromPtr:]
  -[_PFResultObject doubleFromPtr:]
  -[_PFResultObject taggedStringFromPtr:withLength:]
  -[_PFResultObject stringFromPtr:]
  -[_PFResultObject dataFromPtr:]
  -[_PFResultObject objectIDFromPtr:]
  -[_PFResultObject _countByEnumeratingWithState:objects:count:forKeys:]
  -[_PFResultObject _valueCountByEnumeratingWithState:objects:count:]


_PFResultObjectKeyEnumerator : NSEnumerator /usr/lib/libicucore.A.dylib
  // instance methods
  -[_PFResultObjectKeyEnumerator dealloc]
  -[_PFResultObjectKeyEnumerator _invalidate]
  -[_PFResultObjectKeyEnumerator nextObject]
  -[_PFResultObjectKeyEnumerator initWithArray:forTarget:withReferenceValues:andRange:]


NSXPCStoreConnectionInfo : NSObject
  // instance methods
  -[NSXPCStoreConnectionInfo dealloc]
  -[NSXPCStoreConnectionInfo userInfo]
  -[NSXPCStoreConnectionInfo auditToken]
  -[NSXPCStoreConnectionInfo setUserInfo:]
  -[NSXPCStoreConnectionInfo entitlements]
  -[NSXPCStoreConnectionInfo cache]
  -[NSXPCStoreConnectionInfo persistentStoreCoordinator]
  -[NSXPCStoreConnectionInfo initForToken:entitlementNames:cache:]


NSXPCStoreServerConnectionContext : NSObject <NSCoreDataKeyedArchivingDelegate>
  // instance methods
  -[NSXPCStoreServerConnectionContext dealloc]
  -[NSXPCStoreServerConnectionContext userInfo]
  -[NSXPCStoreServerConnectionContext auditToken]
  -[NSXPCStoreServerConnectionContext setUserInfo:]
  -[NSXPCStoreServerConnectionContext entitlements]
  -[NSXPCStoreServerConnectionContext cache]
  -[NSXPCStoreServerConnectionContext persistentStoreCoordinator]
  -[NSXPCStoreServerConnectionContext managedObjectContext]
  -[NSXPCStoreServerConnectionContext _allowCoreDataFutures]
  -[NSXPCStoreServerConnectionContext initWithConnectionInfo:]
  -[NSXPCStoreServerConnectionContext setManagedObjectContext:]
  -[NSXPCStoreServerConnectionContext inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSXPCStoreServerConnectionContext manyToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSXPCStoreServerConnectionContext manyToManyPrefetchRequestsForRelationshipNamed:onEntity:]
  -[NSXPCStoreServerConnectionContext notificationManager]
  -[NSXPCStoreServerConnectionContext setNotificationManager:]


NSXPCStoreServerPerConnectionCache : NSObject
 @property  NSPersistentStoreCoordinator *coordinator

  // instance methods
  -[NSXPCStoreServerPerConnectionCache dealloc]
  -[NSXPCStoreServerPerConnectionCache coordinator]
  -[NSXPCStoreServerPerConnectionCache initWithCoordinator:]
  -[NSXPCStoreServerPerConnectionCache registerQueryGeneration:forRemoteGeneration:]
  -[NSXPCStoreServerPerConnectionCache localGenerationForRemoteGeneration:]
  -[NSXPCStoreServerPerConnectionCache releaseQueryGenerationForRemoteGeneration:]
  -[NSXPCStoreServerPerConnectionCache inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSXPCStoreServerPerConnectionCache manyToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSXPCStoreServerPerConnectionCache manyToManyPrefetchRequestsForRelationshipNamed:onEntity:]


NSXPCStoreServerRequestHandlingPolicy : NSObject
  // class methods
  +[NSXPCStoreServerRequestHandlingPolicy initialize]

  // instance methods
  -[NSXPCStoreServerRequestHandlingPolicy shouldAcceptConnectionsFromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy processObtainRequest:inContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy shouldAcceptMetadataChangesFromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy restrictingWritePredicateForEntity:fromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy processRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processFaultForRelationshipWithName:onObjectWithID:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processFaultForObjectWithID:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy restrictingReadPredicateForEntity:fromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy processFetchResults:prefetchedObjects:ofType:]
  -[NSXPCStoreServerRequestHandlingPolicy prefetchRelationships:forFetch:sourceOIDs:fromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy _coreFaultForObjectWithID:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy _coreProcessFetchRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processRelationshipSourceObjectID:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processFetchRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processSaveRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processBatchInsertRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processBatchUpdateRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processBatchDeleteRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy processPersistentHistoryRequest:fromClientWithContext:error:]
  -[NSXPCStoreServerRequestHandlingPolicy restrictingPullChangeHistoryPredicateForEntity:fromClientWithContext:]
  -[NSXPCStoreServerRequestHandlingPolicy _prefetchRelationshipKey:sourceEntityDescription:sourceObjectIDs:prefetchRelationshipKeys:inContext:]
  -[NSXPCStoreServerRequestHandlingPolicy getIDsForEntity:count:inContext:error:]


NSXPCRow : NSPersistentCacheRow
  // instance methods
  -[NSXPCRow dealloc]
  -[NSXPCRow node]
  -[NSXPCRow objectID]
  -[NSXPCRow initWithNode:]


NSCoreDataXPCMessage : NSObject <NSSecureCoding>
 @property  unsigned long messageCode
 @property  NSData *messageBody
 @property  NSString *token
 @property  NSString *contextName
 @property  NSString *contextTransactionAuthor
 @property  NSString *processName

  // class methods
  +[NSCoreDataXPCMessage supportsSecureCoding]

  // instance methods
  -[NSCoreDataXPCMessage dealloc]
  -[NSCoreDataXPCMessage token]
  -[NSCoreDataXPCMessage encodeWithCoder:]
  -[NSCoreDataXPCMessage initWithCoder:]
  -[NSCoreDataXPCMessage processName]
  -[NSCoreDataXPCMessage setProcessName:]
  -[NSCoreDataXPCMessage setToken:]
  -[NSCoreDataXPCMessage setContextName:]
  -[NSCoreDataXPCMessage setContextTransactionAuthor:]
  -[NSCoreDataXPCMessage messageCode]
  -[NSCoreDataXPCMessage messageBody]
  -[NSCoreDataXPCMessage setMessageCode:]
  -[NSCoreDataXPCMessage setMessageBody:]
  -[NSCoreDataXPCMessage contextName]
  -[NSCoreDataXPCMessage contextTransactionAuthor]


PFHistoryAnalyzerOptions : NSObject <NSCopying>
 @property  BOOL automaticallyPruneTransientRecords

  // instance methods
  -[PFHistoryAnalyzerOptions copyWithZone:]
  -[PFHistoryAnalyzerOptions automaticallyPruneTransientRecords]
  -[PFHistoryAnalyzerOptions setAutomaticallyPruneTransientRecords:]


NSXPCStoreConnection : NSObject
  // instance methods
  -[NSXPCStoreConnection dealloc]
  -[NSXPCStoreConnection disconnect]
  -[NSXPCStoreConnection initForStore:]
  -[NSXPCStoreConnection sendMessageWithContext:]
  -[NSXPCStoreConnection createConnectionWithOptions:]
  -[NSXPCStoreConnection sendMessage:store:error:]
  -[NSXPCStoreConnection reconnect]


PFCloudKitMetadataModel : NSObject <_PFAncillaryModelFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PFCloudKitMetadataModel initialize]
  +[PFCloudKitMetadataModel ancillaryModelNamespace]
  +[PFCloudKitMetadataModel _newMetadataModelV1]
  +[PFCloudKitMetadataModel _newMetadataModelV2]
  +[PFCloudKitMetadataModel _newMetadataModelV3]
  +[PFCloudKitMetadataModel _newMetadataModelV4]
  +[PFCloudKitMetadataModel _newMetadataModelV5]
  +[PFCloudKitMetadataModel _newMetadataModelV6]
  +[PFCloudKitMetadataModel _newMetadataModelV7]
  +[PFCloudKitMetadataModel _newMetadataModelV8]
  +[PFCloudKitMetadataModel newMetadataModelForFrameworkVersion:]
  +[PFCloudKitMetadataModel allMetadataModels]
  +[PFCloudKitMetadataModel doesMetadataModel:matchConnection:hasOldMetadataTables:]
  +[PFCloudKitMetadataModel ancillaryEntityOffset]
  +[PFCloudKitMetadataModel addAttributes:toPropertiesOfEntity:]
  +[PFCloudKitMetadataModel addRelationships:toPropertiesOfEntity:]
  +[PFCloudKitMetadataModel checkAndRepairSchemaOfStore:withManagedObjectContext:error:]
  +[PFCloudKitMetadataModel currentMetadataVersionHashesMatchCachedMetadataVersionHashes:]
  +[PFCloudKitMetadataModel identifyModelForStore:withConnection:hasOldMetadataTables:]
  +[PFCloudKitMetadataModel ancillaryEntityCount]


PFCloudKitMetadataValueTransformer : NSSecureUnarchiveFromDataTransformer /usr/lib/libcompression.dylib
  // class methods
  +[PFCloudKitMetadataValueTransformer allowedTopLevelClasses]


NSCKRecordMetadata : NSManagedObject
 @property  NSString *ckRecordName
 @property  NSData *ckRecordSystemFields
 @property  NSNumber *entityId
 @property  NSNumber *entityPK
 @property  NSData *ckShare
 @property  NSCKRecordZoneMetadata *recordZone
 @property  BOOL needsUpload
 @property  BOOL needsLocalDelete
 @property  BOOL needsCloudDelete
 @property  NSNumber *lastExportedTransactionNumber
 @property  NSNumber *pendingExportTransactionNumber
 @property  NSNumber *pendingExportChangeTypeNumber

  // class methods
  +[NSCKRecordMetadata metadataForObjectIDs:inStore:withManagedObjectContext:error:]
  +[NSCKRecordMetadata entityPath]
  +[NSCKRecordMetadata countRecordMetadataInStore:matchingPredicate:withManagedObjectContext:error:]
  +[NSCKRecordMetadata metadataForObject:inManagedObjectContext:error:]
  +[NSCKRecordMetadata createMapOfMetadataMatchingObjectIDs:inStore:inManagedObjectContext:error:]
  +[NSCKRecordMetadata metadataForRecord:inManagedObjectContext:fromStore:error:]
  +[NSCKRecordMetadata metadataForRecordIDs:fromStore:inManagedObjectContext:error:]
  +[NSCKRecordMetadata createMapOfMetadataMatchingRecords:andRecordIDs:inStore:withManagedObjectContext:error:]
  +[NSCKRecordMetadata insertMetadataForObject:setRecordName:inZone:recordNamePrefix:error:]
  +[NSCKRecordMetadata purgeRecordMetadataWithRecordIDs:inStore:withManagedObjectContext:error:]
  +[NSCKRecordMetadata countRecordMetadataInStore:inManagedObjectContext:error:]
  +[NSCKRecordMetadata batchUpdateMetadataMatchingEntityIdsAndPKs:withUpdates:inStore:withManagedObjectContext:error:]

  // instance methods
  -[NSCKRecordMetadata createRecordID]
  -[NSCKRecordMetadata createObjectIDForLinkedRow]


NSSQLDerivedAttributeSQLGenerator : NSObject
  // class methods
  +[NSSQLDerivedAttributeSQLGenerator _parameterPropertyTokenForDerivedAttribute:andKeypath:onEntity:]
  +[NSSQLDerivedAttributeSQLGenerator _computeNewColumnTokenForKeypathExpression:governingEntity:]
  +[NSSQLDerivedAttributeSQLGenerator _computeSingleParameterTokenForFunctionAttribute:functionName:]
  +[NSSQLDerivedAttributeSQLGenerator _computeNowTokenForFunctionAttribute:]
  +[NSSQLDerivedAttributeSQLGenerator _triggerColumnListComponentForAttributeKeypaths:startingAt:]
  +[NSSQLDerivedAttributeSQLGenerator _triggerColumnWhereComponentForAttributeKeypaths:startingAt:]
  +[NSSQLDerivedAttributeSQLGenerator _computeNewColumnTokenForKeypathAttribute:]
  +[NSSQLDerivedAttributeSQLGenerator _generateTriggerForAttribute:newToken:triggerColumnListComponent:triggerColumnWhereComponent:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForToOneDerivationForDerivedAttribute:toOneKeypath:]
  +[NSSQLDerivedAttributeSQLGenerator _computeNewColumnTokenForFunctionAttribute:]
  +[NSSQLDerivedAttributeSQLGenerator _generateIncrementDecrementTriggersForDerivedAttribute:toManyKeypath:]
  +[NSSQLDerivedAttributeSQLGenerator _generateMinMaxTriggersForDerivedAttribute:toManyKeypath:]
  +[NSSQLDerivedAttributeSQLGenerator _generateIncrementDecrementTriggersForDerivedAttribute:manyToManyKeypath:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForAttributeKeypathDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForToOneKeypathDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForAttributeFunctionDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForToManyFunctionDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForManyToManyFunctionDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForToOneFunctionDerivationForDerivedAttribute:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator _generateSQLForDerivedAttributeWithOneParameterKeypath:keypaths:]
  +[NSSQLDerivedAttributeSQLGenerator generateSQLForDerivedAttribute:keypaths:]


PFCloudKitImportZoneContext : NSObject
 @property  NSSet *deletedObjectIDs
 @property  NSArray *modifiedRecords
 @property  NSArray *deletedRelationships
 @property  NSArray *deletedMirroredRelationshipRecordIDs
 @property  NSArray *updatedRelationships
 @property  NSArray *importOperations
 @property  NSCloudKitMirroringDelegateOptions *mirroringOptions
 @property  NSURL *fileBackedFuturesDirectory

  // instance methods
  -[PFCloudKitImportZoneContext dealloc]
  -[PFCloudKitImportZoneContext fileBackedFuturesDirectory]
  -[PFCloudKitImportZoneContext addObjectID:toCache:andRecordID:]
  -[PFCloudKitImportZoneContext addUnresolvedRecordID:forRecordType:toCache:]
  -[PFCloudKitImportZoneContext objectIDForRecordWithID:ofType:]
  -[PFCloudKitImportZoneContext addObjectID:toCache:forRecordWithType:andUniqueIdentifier:]
  -[PFCloudKitImportZoneContext initWithUpdatedRecords:deletedRecordTypeToRecordIDs:options:fileBackedFuturesDirectory:]
  -[PFCloudKitImportZoneContext updatedRelationships]
  -[PFCloudKitImportZoneContext initializeCachesWithManagedObjectContext:andObservedStore:error:]
  -[PFCloudKitImportZoneContext registerObject:forInsertedRecord:withMetadata:]
  -[PFCloudKitImportZoneContext addMirroredRelationshipToLink:]
  -[PFCloudKitImportZoneContext populateUnresolvedIDsInStore:withManagedObjectContext:error:]
  -[PFCloudKitImportZoneContext linkInsertedObjectsAndMetadataInContext:error:]
  -[PFCloudKitImportZoneContext deletedObjectIDs]
  -[PFCloudKitImportZoneContext modifiedRecords]
  -[PFCloudKitImportZoneContext deletedRelationships]
  -[PFCloudKitImportZoneContext deletedMirroredRelationshipRecordIDs]
  -[PFCloudKitImportZoneContext importOperations]
  -[PFCloudKitImportZoneContext mirroringOptions]


_PFCKInsertedMetadataLink : NSObject
 @property  NSManagedObject *insertedObject
 @property  NSCKRecordMetadata *recordMetadata

  // instance methods
  -[_PFCKInsertedMetadataLink dealloc]
  -[_PFCKInsertedMetadataLink initWithManagedObject:andRecordMetadata:]
  -[_PFCKInsertedMetadataLink insertedObject]
  -[_PFCKInsertedMetadataLink recordMetadata]


_NSCoreDataException : NSException /usr/lib/libicucore.A.dylib
  // class methods
  +[_NSCoreDataException exceptionWithName:code:reason:userInfo:]

  // instance methods
  -[_NSCoreDataException dealloc]
  -[_NSCoreDataException domain]
  -[_NSCoreDataException code]
  -[_NSCoreDataException initWithName:reason:userInfo:]
  -[_NSCoreDataException initWithName:code:reason:userInfo:]
  -[_NSCoreDataException _setDomain:]
  -[_NSCoreDataException errorObjectWithUserInfo:]


_NSCoreDataOptimisticLockingException : NSException /usr/lib/libicucore.A.dylib
  // instance methods
  -[_NSCoreDataOptimisticLockingException initWithName:reason:userInfo:]
  -[_NSCoreDataOptimisticLockingException errorObjectWithUserInfo:]


_NSCoreDataConstraintViolationException : _NSCoreDataOptimisticLockingException

NSSQLBatchInsertRequestContext : NSSQLStoreRequestContext
 @property  NSBatchInsertRequest *request

  // instance methods
  -[NSSQLBatchInsertRequestContext request]
  -[NSSQLBatchInsertRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLBatchInsertRequestContext isWritingRequest]
  -[NSSQLBatchInsertRequestContext executeRequestCore:]
  -[NSSQLBatchInsertRequestContext tempTableName]
  -[NSSQLBatchInsertRequestContext createObjectIDCaptureStatements]
  -[NSSQLBatchInsertRequestContext dropObjectIDCaptureStatements]


_NSFaultingMutableArray : NSMutableArray /usr/lib/libicucore.A.dylib
 @property  NSManagedObject *source
 @property  NSPropertyDescription *relationship
 @property  BOOL fault

  // class methods
  +[_NSFaultingMutableArray alloc]
  +[_NSFaultingMutableArray allocWithZone:]
  +[_NSFaultingMutableArray accessInstanceVariablesDirectly]
  +[_NSFaultingMutableArray classForKeyedUnarchiver]

  // instance methods
  -[_NSFaultingMutableArray retainCount]
  -[_NSFaultingMutableArray dealloc]
  -[_NSFaultingMutableArray retain]
  -[_NSFaultingMutableArray release]
  -[_NSFaultingMutableArray _tryRetain]
  -[_NSFaultingMutableArray _isDeallocating]
  -[_NSFaultingMutableArray copyWithZone:]
  -[_NSFaultingMutableArray mutableCopyWithZone:]
  -[_NSFaultingMutableArray isFault]
  -[_NSFaultingMutableArray count]
  -[_NSFaultingMutableArray objectEnumerator]
  -[_NSFaultingMutableArray addObject:]
  -[_NSFaultingMutableArray getObjects:]
  -[_NSFaultingMutableArray countByEnumeratingWithState:objects:count:]
  -[_NSFaultingMutableArray objectAtIndex:]
  -[_NSFaultingMutableArray insertObject:atIndex:]
  -[_NSFaultingMutableArray removeObjectAtIndex:]
  -[_NSFaultingMutableArray setValue:forKey:]
  -[_NSFaultingMutableArray replaceObjectAtIndex:withObject:]
  -[_NSFaultingMutableArray enumerateObjectsWithOptions:usingBlock:]
  -[_NSFaultingMutableArray removeLastObject]
  -[_NSFaultingMutableArray classForCoder]
  -[_NSFaultingMutableArray descriptionWithLocale:]
  -[_NSFaultingMutableArray descriptionWithLocale:indent:]
  -[_NSFaultingMutableArray indexesOfObjectsAtIndexes:options:passingTest:]
  -[_NSFaultingMutableArray indexesOfObjectsWithOptions:passingTest:]
  -[_NSFaultingMutableArray indexOfObjectWithOptions:passingTest:]
  -[_NSFaultingMutableArray indexOfObjectAtIndexes:options:passingTest:]
  -[_NSFaultingMutableArray enumerateObjectsAtIndexes:options:usingBlock:]
  -[_NSFaultingMutableArray source]
  -[_NSFaultingMutableArray valueForKey:]
  -[_NSFaultingMutableArray classForArchiver]
  -[_NSFaultingMutableArray valueForKeyPath:]
  -[_NSFaultingMutableArray initWithSource:forRelationship:asFault:]
  -[_NSFaultingMutableArray willRead]
  -[_NSFaultingMutableArray turnIntoFault]
  -[_NSFaultingMutableArray relationship]


_NSFaultingMutableSet : NSMutableSet /usr/lib/libicucore.A.dylib
 @property  NSManagedObject *source
 @property  NSPropertyDescription *relationship
 @property  BOOL fault

  // class methods
  +[_NSFaultingMutableSet alloc]
  +[_NSFaultingMutableSet allocWithZone:]
  +[_NSFaultingMutableSet accessInstanceVariablesDirectly]
  +[_NSFaultingMutableSet classForKeyedUnarchiver]

  // instance methods
  -[_NSFaultingMutableSet retainCount]
  -[_NSFaultingMutableSet dealloc]
  -[_NSFaultingMutableSet isEqual:]
  -[_NSFaultingMutableSet retain]
  -[_NSFaultingMutableSet release]
  -[_NSFaultingMutableSet _tryRetain]
  -[_NSFaultingMutableSet _isDeallocating]
  -[_NSFaultingMutableSet copyWithZone:]
  -[_NSFaultingMutableSet mutableCopyWithZone:]
  -[_NSFaultingMutableSet isFault]
  -[_NSFaultingMutableSet count]
  -[_NSFaultingMutableSet member:]
  -[_NSFaultingMutableSet objectEnumerator]
  -[_NSFaultingMutableSet addObject:]
  -[_NSFaultingMutableSet removeObject:]
  -[_NSFaultingMutableSet getObjects:]
  -[_NSFaultingMutableSet countByEnumeratingWithState:objects:count:]
  -[_NSFaultingMutableSet removeAllObjects]
  -[_NSFaultingMutableSet setValue:forKey:]
  -[_NSFaultingMutableSet containsObject:]
  -[_NSFaultingMutableSet enumerateObjectsWithOptions:usingBlock:]
  -[_NSFaultingMutableSet classForCoder]
  -[_NSFaultingMutableSet descriptionWithLocale:]
  -[_NSFaultingMutableSet addObjectsFromArray:]
  -[_NSFaultingMutableSet intersectSet:]
  -[_NSFaultingMutableSet minusSet:]
  -[_NSFaultingMutableSet setSet:]
  -[_NSFaultingMutableSet unionSet:]
  -[_NSFaultingMutableSet allObjects]
  -[_NSFaultingMutableSet objectsWithOptions:passingTest:]
  -[_NSFaultingMutableSet makeObjectsPerformSelector:]
  -[_NSFaultingMutableSet makeObjectsPerformSelector:withObject:]
  -[_NSFaultingMutableSet isEqualToSet:]
  -[_NSFaultingMutableSet anyObject]
  -[_NSFaultingMutableSet intersectsSet:]
  -[_NSFaultingMutableSet isSubsetOfSet:]
  -[_NSFaultingMutableSet source]
  -[_NSFaultingMutableSet valueForKey:]
  -[_NSFaultingMutableSet replacementObjectForCoder:]
  -[_NSFaultingMutableSet classForArchiver]
  -[_NSFaultingMutableSet valueForKeyPath:]
  -[_NSFaultingMutableSet initWithSource:destinations:forRelationship:inContext:]
  -[_NSFaultingMutableSet initWithSource:forRelationship:asFault:]
  -[_NSFaultingMutableSet willRead]
  -[_NSFaultingMutableSet turnIntoFault]
  -[_NSFaultingMutableSet relationship]
  -[_NSFaultingMutableSet willReadWithContents:]
  -[_NSFaultingMutableSet _shouldProcessKVOChange]
  -[_NSFaultingMutableSet _isIdenticalFault:]


_NSFaultingMutableSetMutationMethods : NSObject
  // class methods
  +[_NSFaultingMutableSetMutationMethods _createMutationMethodsForClass:forKey:]


_NSMappingModelBuilder : NSObject
  // class methods
  +[_NSMappingModelBuilder migrationDebugLevel]
  +[_NSMappingModelBuilder setMigrationDebugLevel:]

  // instance methods
  -[_NSMappingModelBuilder dealloc]
  -[_NSMappingModelBuilder _resetCaches]
  -[_NSMappingModelBuilder newEntityMappingWithSource:destination:]
  -[_NSMappingModelBuilder inferPropertyMappingsForEntityMapping:]
  -[_NSMappingModelBuilder newInferredPropertyMappingWithSourceAttribute:destinationAttribute:]
  -[_NSMappingModelBuilder newInferredPropertyMappingWithSourceRelationship:destinationRelationship:]
  -[_NSMappingModelBuilder checkForSchemaMatchBetween:andDestination:]
  -[_NSMappingModelBuilder _canTransformSourceAttributeType:toDestinationAttributeType:]
  -[_NSMappingModelBuilder initWithSourceModel:destinationModel:]
  -[_NSMappingModelBuilder newInferredMappingModel:]


NSSQLBindIntarray : NSObject
 @property  unsigned int index
 @property  id value
 @property  NSString *tableName

  // instance methods
  -[NSSQLBindIntarray dealloc]
  -[NSSQLBindIntarray value]
  -[NSSQLBindIntarray index]
  -[NSSQLBindIntarray setValue:]
  -[NSSQLBindIntarray setIndex:]
  -[NSSQLBindIntarray initWithValue:]
  -[NSSQLBindIntarray tableName]
  -[NSSQLBindIntarray setTableName:]


NSCachedFetchRequestThunk : NSObject
 @property  NSSQLiteStatement *limitedStatement
 @property  NSSQLiteStatement *unlimitedStatement

  // instance methods
  -[NSCachedFetchRequestThunk dealloc]
  -[NSCachedFetchRequestThunk clearCaches]
  -[NSCachedFetchRequestThunk initForConnection:]
  -[NSCachedFetchRequestThunk limitedStatement]
  -[NSCachedFetchRequestThunk unlimitedStatement]
  -[NSCachedFetchRequestThunk setLimitedStatement:]
  -[NSCachedFetchRequestThunk setUnlimitedStatement:]


NSCachedFetchRequestInfo : NSObject
 @property  NSArray *substitutionBindVariableOrder
 @property  NSArray *substitutionBindIntarrayOrder

  // instance methods
  -[NSCachedFetchRequestInfo dealloc]
  -[NSCachedFetchRequestInfo substitutionBindVariableOrder]
  -[NSCachedFetchRequestInfo setSubstitutionBindVariableOrder:]
  -[NSCachedFetchRequestInfo substitutionBindIntarrayOrder]
  -[NSCachedFetchRequestInfo setSubstitutionBindIntarrayOrder:]


_NSMemoryStorePredicateRemapper : NSObject
  // class methods
  +[_NSMemoryStorePredicateRemapper defaultInstance]

  // instance methods
  -[_NSMemoryStorePredicateRemapper init]
  -[_NSMemoryStorePredicateRemapper dealloc]
  -[_NSMemoryStorePredicateRemapper visitPredicate:]
  -[_NSMemoryStorePredicateRemapper visitPredicateExpression:]
  -[_NSMemoryStorePredicateRemapper initWithContext:]
  -[_NSMemoryStorePredicateRemapper createPredicateForFetchFromPredicate:]
  -[_NSMemoryStorePredicateRemapper createPredicateForFetchFromPredicate:withContext:]


_NSChildContextPredicateRemapper : NSObject
  // instance methods
  -[_NSChildContextPredicateRemapper init]
  -[_NSChildContextPredicateRemapper dealloc]
  -[_NSChildContextPredicateRemapper visitPredicate:]
  -[_NSChildContextPredicateRemapper visitPredicateExpression:]
  -[_NSChildContextPredicateRemapper initWithContext:]
  -[_NSChildContextPredicateRemapper createPredicateForFetchFromPredicate:withContext:]
  -[_NSChildContextPredicateRemapper replacementValueForValue:]


_NSPersistentHistoryPredicateRemapper : NSObject
  // class methods
  +[_NSPersistentHistoryPredicateRemapper defaultInstance]

  // instance methods
  -[_NSPersistentHistoryPredicateRemapper dealloc]
  -[_NSPersistentHistoryPredicateRemapper visitPredicate:]
  -[_NSPersistentHistoryPredicateRemapper visitPredicateExpression:]
  -[_NSPersistentHistoryPredicateRemapper createPredicateForFetchFromPredicate:]
  -[_NSPersistentHistoryPredicateRemapper initWithStoreIdentifier:]
  -[_NSPersistentHistoryPredicateRemapper createPredicateForFetchFromPredicate:withContext:]
  -[_NSPersistentHistoryPredicateRemapper replacementValueForValue:]
  -[_NSPersistentHistoryPredicateRemapper replacementValueForKeyPath:]


_NSXPCStorePredicateRemapper : NSObject
  // class methods
  +[_NSXPCStorePredicateRemapper initialize]
  +[_NSXPCStorePredicateRemapper defaultInstance]

  // instance methods
  -[_NSXPCStorePredicateRemapper init]
  -[_NSXPCStorePredicateRemapper dealloc]
  -[_NSXPCStorePredicateRemapper visitPredicate:]
  -[_NSXPCStorePredicateRemapper visitPredicateExpression:]
  -[_NSXPCStorePredicateRemapper initWithContext:]
  -[_NSXPCStorePredicateRemapper createPredicateForFetchFromPredicate:]
  -[_NSXPCStorePredicateRemapper createPredicateForFetchFromPredicate:withContext:]


_PFSpawn : NSObject
 @property  int processID
 @property  int terminationStatus

  // class methods
  +[_PFSpawn launchedTaskWithLaunchPath:arguments:]
  +[_PFSpawn launchedTaskWithLaunchPath:arguments:environment:]
  +[_PFSpawn launchedTaskWithLaunchPath:arguments:environment:redirect:]

  // instance methods
  -[_PFSpawn terminationStatus]
  -[_PFSpawn waitUntilExit]
  -[_PFSpawn processID]


_NSNotifyingWrapperMutableSet : NSMutableSet /usr/lib/libicucore.A.dylib
  // class methods
  +[_NSNotifyingWrapperMutableSet classForKeyedUnarchiver]

  // instance methods
  -[_NSNotifyingWrapperMutableSet dealloc]
  -[_NSNotifyingWrapperMutableSet copyWithZone:]
  -[_NSNotifyingWrapperMutableSet mutableCopyWithZone:]
  -[_NSNotifyingWrapperMutableSet count]
  -[_NSNotifyingWrapperMutableSet member:]
  -[_NSNotifyingWrapperMutableSet objectEnumerator]
  -[_NSNotifyingWrapperMutableSet addObject:]
  -[_NSNotifyingWrapperMutableSet removeObject:]
  -[_NSNotifyingWrapperMutableSet getObjects:]
  -[_NSNotifyingWrapperMutableSet countByEnumeratingWithState:objects:count:]
  -[_NSNotifyingWrapperMutableSet removeAllObjects]
  -[_NSNotifyingWrapperMutableSet setValue:forKey:]
  -[_NSNotifyingWrapperMutableSet containsObject:]
  -[_NSNotifyingWrapperMutableSet enumerateObjectsWithOptions:usingBlock:]
  -[_NSNotifyingWrapperMutableSet classForCoder]
  -[_NSNotifyingWrapperMutableSet descriptionWithLocale:]
  -[_NSNotifyingWrapperMutableSet addObjectsFromArray:]
  -[_NSNotifyingWrapperMutableSet intersectSet:]
  -[_NSNotifyingWrapperMutableSet minusSet:]
  -[_NSNotifyingWrapperMutableSet setSet:]
  -[_NSNotifyingWrapperMutableSet unionSet:]
  -[_NSNotifyingWrapperMutableSet allObjects]
  -[_NSNotifyingWrapperMutableSet objectsWithOptions:passingTest:]
  -[_NSNotifyingWrapperMutableSet makeObjectsPerformSelector:]
  -[_NSNotifyingWrapperMutableSet makeObjectsPerformSelector:withObject:]
  -[_NSNotifyingWrapperMutableSet isEqualToSet:]
  -[_NSNotifyingWrapperMutableSet anyObject]
  -[_NSNotifyingWrapperMutableSet isSubsetOfSet:]
  -[_NSNotifyingWrapperMutableSet valueForKey:]
  -[_NSNotifyingWrapperMutableSet classForArchiver]
  -[_NSNotifyingWrapperMutableSet valueForKeyPath:]
  -[_NSNotifyingWrapperMutableSet initWithContainer:key:mutableSet:]


NSSQLStoreRequestContext : NSObject
 @property  NSSQLCore *sqlCore
 @property  NSSQLiteConnection *connection
 @property  unsigned long requestType
 @property  BOOL storeIsInMemory
 @property  NSNumber *transactionID
 @property  NSPersistentStoreRequest *persistentStoreRequest
 @property  NSManagedObjectContext *context
 @property  NSError *localError
 @property  int debugLogLevel
 @property  BOOL useColoredLogging
 @property  BOOL useConcurrentFetching
 @property  id result
 @property  id exception
 @property  NSSQLRowCache *rowCache
 @property  BOOL isWritingRequest
 @property  NSQueryGenerationToken *queryGenerationToken
 @property  BOOL shouldRegisterQueryGeneration

  // instance methods
  -[NSSQLStoreRequestContext dealloc]
  -[NSSQLStoreRequestContext result]
  -[NSSQLStoreRequestContext context]
  -[NSSQLStoreRequestContext connection]
  -[NSSQLStoreRequestContext setResult:]
  -[NSSQLStoreRequestContext setConnection:]
  -[NSSQLStoreRequestContext requestType]
  -[NSSQLStoreRequestContext transactionID]
  -[NSSQLStoreRequestContext sqlCore]
  -[NSSQLStoreRequestContext newObjectIDForEntity:pk:]
  -[NSSQLStoreRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLStoreRequestContext setLocalError:]
  -[NSSQLStoreRequestContext exception]
  -[NSSQLStoreRequestContext localError]
  -[NSSQLStoreRequestContext isWritingRequest]
  -[NSSQLStoreRequestContext executeRequestCore:]
  -[NSSQLStoreRequestContext persistentStoreRequest]
  -[NSSQLStoreRequestContext setException:]
  -[NSSQLStoreRequestContext executePrologue]
  -[NSSQLStoreRequestContext useConcurrentFetching]
  -[NSSQLStoreRequestContext hasHistoryTracking]
  -[NSSQLStoreRequestContext setQueryGenerationToken:]
  -[NSSQLStoreRequestContext newStatementWithSQLString:]
  -[NSSQLStoreRequestContext queryGenerationToken]
  -[NSSQLStoreRequestContext forConflictAnalysis]
  -[NSSQLStoreRequestContext createNestedObjectFaultContextForObjectWithID:]
  -[NSSQLStoreRequestContext notificationSourceObject]
  -[NSSQLStoreRequestContext rowCache]
  -[NSSQLStoreRequestContext debugLogLevel]
  -[NSSQLStoreRequestContext setTransactionID:]
  -[NSSQLStoreRequestContext executeRequestUsingConnection:]
  -[NSSQLStoreRequestContext executeEpilogue]
  -[NSSQLStoreRequestContext shouldRegisterQueryGeneration]
  -[NSSQLStoreRequestContext useColoredLogging]
  -[NSSQLStoreRequestContext storeIsInMemory]


_NSPersistenceUtilities : NSObject
  // class methods
  +[_NSPersistenceUtilities initialize]
  +[_NSPersistenceUtilities _setURL:forPersistentStore:withCoordinator:]
  +[_NSPersistenceUtilities attributeTypeForXMLInfo:]


_NSProxyWrapperMutableSet : _NSNotifyingWrapperMutableSet
  // instance methods
  -[_NSProxyWrapperMutableSet dealloc]
  -[_NSProxyWrapperMutableSet addObject:]
  -[_NSProxyWrapperMutableSet removeObject:]
  -[_NSProxyWrapperMutableSet removeAllObjects]
  -[_NSProxyWrapperMutableSet addObjectsFromArray:]
  -[_NSProxyWrapperMutableSet intersectSet:]
  -[_NSProxyWrapperMutableSet minusSet:]
  -[_NSProxyWrapperMutableSet setSet:]
  -[_NSProxyWrapperMutableSet unionSet:]
  -[_NSProxyWrapperMutableSet initWithContainer:key:mutableSet:mutationMethods:]


_NSSQLGenerator : NSObject
  // class methods
  +[_NSSQLGenerator initialize]

  // instance methods
  -[_NSSQLGenerator dealloc]
  -[_NSSQLGenerator sqlString]
  -[_NSSQLGenerator appendSQL:]
  -[_NSSQLGenerator prepareInsertStatementWithRow:includeConstraints:]
  -[_NSSQLGenerator prepareInsertStatementWithRow:includeConstraints:includeOnConflict:]
  -[_NSSQLGenerator _startSQL:]
  -[_NSSQLGenerator appendWhereClause:]
  -[_NSSQLGenerator buildWhereClauseForRow:optLock:]
  -[_NSSQLGenerator appendWhereClauseToSQL]
  -[_NSSQLGenerator initWithStatement:forAdapter:]
  -[_NSSQLGenerator prepareInsertStatementWithRow:]
  -[_NSSQLGenerator prepareInsertStatementForRelationship:]
  -[_NSSQLGenerator prepareMasterReorderStatementForRelationship:]
  -[_NSSQLGenerator prepareMasterReorderStatementPart2ForRelationship:]
  -[_NSSQLGenerator prepareReorderStatementForRelationship:]
  -[_NSSQLGenerator prepareDeleteStatementForRelationship:]
  -[_NSSQLGenerator prepareConstrainedValuesUpdateStatementWithRow:]
  -[_NSSQLGenerator prepareUpdateStatementWithRow:originalRow:withMask:]
  -[_NSSQLGenerator prepareDeleteStatementWithRow:]


_PFArray : NSArray /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFArray initialize]
  +[_PFArray accessInstanceVariablesDirectly]
  +[_PFArray classForKeyedUnarchiver]

  // instance methods
  -[_PFArray retainCount]
  -[_PFArray dealloc]
  -[_PFArray retain]
  -[_PFArray release]
  -[_PFArray _tryRetain]
  -[_PFArray _isDeallocating]
  -[_PFArray copyWithZone:]
  -[_PFArray mutableCopyWithZone:]
  -[_PFArray initWithObjects:count:]
  -[_PFArray count]
  -[_PFArray getObjects:]
  -[_PFArray countByEnumeratingWithState:objects:count:]
  -[_PFArray objectAtIndex:]
  -[_PFArray getObjects:range:]
  -[_PFArray indexOfObject:]
  -[_PFArray indexOfObjectIdenticalTo:]
  -[_PFArray classForCoder]
  -[_PFArray _flags]
  -[_PFArray indexOfObject:inRange:]
  -[_PFArray indexOfObjectIdenticalTo:inRange:]
  -[_PFArray subarrayWithRange:]
  -[_PFArray classForArchiver]
  -[_PFArray initWithObjects:count:andFlags:andContext:]
  -[_PFArray initWithObjects:count:andFlags:]
  -[_PFArray newArrayFromObjectIDs]
  -[_PFArray _objectsPointer]
  -[_PFArray arrayFromObjectIDs]
  -[_PFArray indexOfManagedObjectForObjectID:]
  -[_PFArray managedObjectIDAtIndex:]
  -[_PFArray _setShouldRelease:]
  -[_PFArray _setShouldUseExtendedRelease:]


_PFBatchFaultingArray : NSArray /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFBatchFaultingArray alloc]
  +[_PFBatchFaultingArray allocWithZone:]
  +[_PFBatchFaultingArray initialize]
  +[_PFBatchFaultingArray accessInstanceVariablesDirectly]
  +[_PFBatchFaultingArray classForKeyedUnarchiver]

  // instance methods
  -[_PFBatchFaultingArray retainCount]
  -[_PFBatchFaultingArray dealloc]
  -[_PFBatchFaultingArray retain]
  -[_PFBatchFaultingArray release]
  -[_PFBatchFaultingArray _tryRetain]
  -[_PFBatchFaultingArray _isDeallocating]
  -[_PFBatchFaultingArray copyWithZone:]
  -[_PFBatchFaultingArray mutableCopyWithZone:]
  -[_PFBatchFaultingArray count]
  -[_PFBatchFaultingArray getObjects:]
  -[_PFBatchFaultingArray countByEnumeratingWithState:objects:count:]
  -[_PFBatchFaultingArray objectAtIndex:]
  -[_PFBatchFaultingArray getObjects:range:]
  -[_PFBatchFaultingArray indexOfObject:]
  -[_PFBatchFaultingArray enumerateObjectsWithOptions:usingBlock:]
  -[_PFBatchFaultingArray indexOfObjectIdenticalTo:]
  -[_PFBatchFaultingArray objectAtIndexedSubscript:]
  -[_PFBatchFaultingArray classForCoder]
  -[_PFBatchFaultingArray isEqualToArray:]
  -[_PFBatchFaultingArray objectsAtIndexes:]
  -[_PFBatchFaultingArray indexOfObject:inRange:]
  -[_PFBatchFaultingArray indexesOfObjectsAtIndexes:options:passingTest:]
  -[_PFBatchFaultingArray indexesOfObjectsWithOptions:passingTest:]
  -[_PFBatchFaultingArray indexOfObjectWithOptions:passingTest:]
  -[_PFBatchFaultingArray indexOfObjectAtIndexes:options:passingTest:]
  -[_PFBatchFaultingArray sortedArrayWithOptions:usingComparator:]
  -[_PFBatchFaultingArray enumerateObjectsAtIndexes:options:usingBlock:]
  -[_PFBatchFaultingArray indexOfObjectIdenticalTo:inRange:]
  -[_PFBatchFaultingArray sortedArrayUsingComparator:]
  -[_PFBatchFaultingArray sortedArrayUsingFunction:context:]
  -[_PFBatchFaultingArray sortedArrayUsingSelector:]
  -[_PFBatchFaultingArray subarrayWithRange:]
  -[_PFBatchFaultingArray valueForKey:]
  -[_PFBatchFaultingArray classForArchiver]
  -[_PFBatchFaultingArray sortedArrayUsingFunction:context:hint:]
  -[_PFBatchFaultingArray valueForKeyPath:]
  -[_PFBatchFaultingArray sortedArrayUsingDescriptors:]
  -[_PFBatchFaultingArray filteredArrayUsingPredicate:]
  -[_PFBatchFaultingArray initWithPFArray:andRequest:andContext:]
  -[_PFBatchFaultingArray newArrayFromObjectIDs]
  -[_PFBatchFaultingArray arrayFromObjectIDs]
  -[_PFBatchFaultingArray indexOfManagedObjectForObjectID:]
  -[_PFBatchFaultingArray managedObjectIDAtIndex:]
  -[_PFBatchFaultingArray _newSubArrayInRange:asMutable:]
  -[_PFBatchFaultingArray _internalDealloc]
  -[_PFBatchFaultingArray retainedObjectAtIndex:]
  -[_PFBatchFaultingArray _turnAllBatchesIntoObjects]
  -[_PFBatchFaultingArray _turnAllBatchesIntoFaults]
  -[_PFBatchFaultingArray _pinnedObjectAtIndex:]


_PFBatchHistoryFaultingArray : _PFBatchFaultingArray
  // class methods
  +[_PFBatchHistoryFaultingArray classForKeyedUnarchiver]

  // instance methods
  -[_PFBatchHistoryFaultingArray classForCoder]
  -[_PFBatchHistoryFaultingArray classForArchiver]
  -[_PFBatchHistoryFaultingArray _setTransaction:]
  -[_PFBatchHistoryFaultingArray transaction]
  -[_PFBatchHistoryFaultingArray initWithPFBatchFaultingArray:]


_PFMutableProxyArray : NSMutableArray /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFMutableProxyArray classForKeyedUnarchiver]

  // instance methods
  -[_PFMutableProxyArray retainCount]
  -[_PFMutableProxyArray dealloc]
  -[_PFMutableProxyArray retain]
  -[_PFMutableProxyArray release]
  -[_PFMutableProxyArray _tryRetain]
  -[_PFMutableProxyArray _isDeallocating]
  -[_PFMutableProxyArray copyWithZone:]
  -[_PFMutableProxyArray mutableCopyWithZone:]
  -[_PFMutableProxyArray copy]
  -[_PFMutableProxyArray mutableCopy]
  -[_PFMutableProxyArray finalize]
  -[_PFMutableProxyArray count]
  -[_PFMutableProxyArray addObject:]
  -[_PFMutableProxyArray objectAtIndex:]
  -[_PFMutableProxyArray getObjects:range:]
  -[_PFMutableProxyArray insertObject:atIndex:]
  -[_PFMutableProxyArray removeObjectAtIndex:]
  -[_PFMutableProxyArray indexOfObject:]
  -[_PFMutableProxyArray replaceObjectAtIndex:withObject:]
  -[_PFMutableProxyArray indexOfObjectIdenticalTo:]
  -[_PFMutableProxyArray removeLastObject]
  -[_PFMutableProxyArray classForCoder]
  -[_PFMutableProxyArray indexOfObject:inRange:]
  -[_PFMutableProxyArray indexOfObjectIdenticalTo:inRange:]
  -[_PFMutableProxyArray subarrayWithRange:]
  -[_PFMutableProxyArray classForArchiver]
  -[_PFMutableProxyArray newArrayFromObjectIDs]
  -[_PFMutableProxyArray arrayFromObjectIDs]
  -[_PFMutableProxyArray indexOfManagedObjectForObjectID:]
  -[_PFMutableProxyArray managedObjectIDAtIndex:]
  -[_PFMutableProxyArray initWithPFArray:inRange:]
  -[_PFMutableProxyArray _rehash]
  -[_PFMutableProxyArray initWithPFArray:]


_PFEncodedArray : NSArray /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFEncodedArray classForKeyedUnarchiver]

  // instance methods
  -[_PFEncodedArray init]
  -[_PFEncodedArray retainCount]
  -[_PFEncodedArray dealloc]
  -[_PFEncodedArray retain]
  -[_PFEncodedArray release]
  -[_PFEncodedArray _tryRetain]
  -[_PFEncodedArray _isDeallocating]
  -[_PFEncodedArray copy]
  -[_PFEncodedArray mutableCopy]
  -[_PFEncodedArray count]
  -[_PFEncodedArray objectAtIndex:]
  -[_PFEncodedArray classForCoder]
  -[_PFEncodedArray _values]
  -[_PFEncodedArray classForArchiver]
  -[_PFEncodedArray _replaceObject:atIndex:]


_PFFetchedResultOrderedSetWrapper : NSOrderedSet /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFFetchedResultOrderedSetWrapper alloc]
  +[_PFFetchedResultOrderedSetWrapper allocWithZone:]
  +[_PFFetchedResultOrderedSetWrapper accessInstanceVariablesDirectly]
  +[_PFFetchedResultOrderedSetWrapper classForKeyedUnarchiver]

  // instance methods
  -[_PFFetchedResultOrderedSetWrapper retainCount]
  -[_PFFetchedResultOrderedSetWrapper dealloc]
  -[_PFFetchedResultOrderedSetWrapper isEqual:]
  -[_PFFetchedResultOrderedSetWrapper retain]
  -[_PFFetchedResultOrderedSetWrapper release]
  -[_PFFetchedResultOrderedSetWrapper _tryRetain]
  -[_PFFetchedResultOrderedSetWrapper _isDeallocating]
  -[_PFFetchedResultOrderedSetWrapper copyWithZone:]
  -[_PFFetchedResultOrderedSetWrapper mutableCopyWithZone:]
  -[_PFFetchedResultOrderedSetWrapper count]
  -[_PFFetchedResultOrderedSetWrapper objectEnumerator]
  -[_PFFetchedResultOrderedSetWrapper getObjects:]
  -[_PFFetchedResultOrderedSetWrapper array]
  -[_PFFetchedResultOrderedSetWrapper countByEnumeratingWithState:objects:count:]
  -[_PFFetchedResultOrderedSetWrapper objectAtIndex:]
  -[_PFFetchedResultOrderedSetWrapper getObjects:range:]
  -[_PFFetchedResultOrderedSetWrapper indexOfObject:]
  -[_PFFetchedResultOrderedSetWrapper containsObject:]
  -[_PFFetchedResultOrderedSetWrapper enumerateObjectsWithOptions:usingBlock:]
  -[_PFFetchedResultOrderedSetWrapper classForCoder]
  -[_PFFetchedResultOrderedSetWrapper descriptionWithLocale:]
  -[_PFFetchedResultOrderedSetWrapper allObjects]
  -[_PFFetchedResultOrderedSetWrapper indexesOfObjectsAtIndexes:options:passingTest:]
  -[_PFFetchedResultOrderedSetWrapper indexesOfObjectsWithOptions:passingTest:]
  -[_PFFetchedResultOrderedSetWrapper indexOfObjectWithOptions:passingTest:]
  -[_PFFetchedResultOrderedSetWrapper indexOfObjectAtIndexes:options:passingTest:]
  -[_PFFetchedResultOrderedSetWrapper sortedArrayWithOptions:usingComparator:]
  -[_PFFetchedResultOrderedSetWrapper enumerateObjectsAtIndexes:options:usingBlock:]
  -[_PFFetchedResultOrderedSetWrapper sortedArrayUsingComparator:]
  -[_PFFetchedResultOrderedSetWrapper isEqualToOrderedSet:]
  -[_PFFetchedResultOrderedSetWrapper classForArchiver]
  -[_PFFetchedResultOrderedSetWrapper willRead]
  -[_PFFetchedResultOrderedSetWrapper newArrayFromObjectIDs]
  -[_PFFetchedResultOrderedSetWrapper arrayFromObjectIDs]
  -[_PFFetchedResultOrderedSetWrapper indexOfManagedObjectForObjectID:]
  -[_PFFetchedResultOrderedSetWrapper managedObjectIDAtIndex:]
  -[_PFFetchedResultOrderedSetWrapper initWithArray:andContext:]


_PFCachedNumber : NSNumber /usr/lib/libcompression.dylib
  // class methods
  +[_PFCachedNumber alloc]
  +[_PFCachedNumber allocWithZone:]
  +[_PFCachedNumber new]
  +[_PFCachedNumber copyWithZone:]
  +[_PFCachedNumber valueWithBytes:objCType:]
  +[_PFCachedNumber value:withObjCType:]

  // instance methods
  -[_PFCachedNumber floatValue]
  -[_PFCachedNumber doubleValue]
  -[_PFCachedNumber longLongValue]
  -[_PFCachedNumber unsignedLongLongValue]
  -[_PFCachedNumber init]
  -[_PFCachedNumber retainCount]
  -[_PFCachedNumber objCType]
  -[_PFCachedNumber charValue]
  -[_PFCachedNumber unsignedCharValue]
  -[_PFCachedNumber shortValue]
  -[_PFCachedNumber unsignedShortValue]
  -[_PFCachedNumber intValue]
  -[_PFCachedNumber unsignedIntValue]
  -[_PFCachedNumber longValue]
  -[_PFCachedNumber unsignedLongValue]
  -[_PFCachedNumber dealloc]
  -[_PFCachedNumber retain]
  -[_PFCachedNumber release]
  -[_PFCachedNumber autorelease]
  -[_PFCachedNumber _tryRetain]
  -[_PFCachedNumber _isDeallocating]
  -[_PFCachedNumber copy]
  -[_PFCachedNumber boolValue]
  -[_PFCachedNumber descriptionWithLocale:]
  -[_PFCachedNumber stringValue]
  -[_PFCachedNumber getValue:]
  -[_PFCachedNumber integerValue]
  -[_PFCachedNumber unsignedIntegerValue]
  -[_PFCachedNumber initWithBytes:objCType:]
  -[_PFCachedNumber objectID]


_PFContextMapTable : NSObject
  // instance methods
  -[_PFContextMapTable dealloc]
  -[_PFContextMapTable finalize]
  -[_PFContextMapTable _dispose]
  -[_PFContextMapTable initWithWeaksReferences:]
  -[_PFContextMapTable setForUseWithCoordinator:]
  -[_PFContextMapTable getAllObjects:]
  -[_PFContextMapTable setCapacityHint:forSlot:]
  -[_PFContextMapTable clearTemporaryIDs]


_PFTask : NSObject
  // class methods
  +[_PFTask getNumActiveProcessors]
  +[_PFTask getProcessorSpeed]
  +[_PFTask getPhysicalMemory]

  // instance methods
  -[_PFTask retainCount]
  -[_PFTask dealloc]
  -[_PFTask retain]
  -[_PFTask release]
  -[_PFTask _tryRetain]
  -[_PFTask _isDeallocating]
  -[_PFTask finalize]
  -[_PFTask initWithFunction:withArgument:andPriority:]


NSPrivateCoreDataClassForFindingBundle : NSObject

_PFRoutines : NSObject
  // class methods
  +[_PFRoutines initialize]
  +[_PFRoutines isUbiquitousItemAtURL:]
  +[_PFRoutines decodeValue:forTransformableAttribute:]
  +[_PFRoutines integerValueForOverride:]
  +[_PFRoutines newArrayOfObjectIDsFromCollection:]
  +[_PFRoutines _remoteChangeNotificationNameForStore:]
  +[_PFRoutines fetchHeterogeneousCollectionByObjectIDs:intoContext:]
  +[_PFRoutines _coalescedPrefetchKeypaths:]
  +[_PFRoutines _getPFBundleVersionNumber]
  +[_PFRoutines _rootEntityGroupsForObjects:passingBlock:]
  +[_PFRoutines valueForProcessArgument:]
  +[_PFRoutines transformDecodeValue:forTransformerNamed:]
  +[_PFRoutines transformEncodeValue:forTransformerNamed:]
  +[_PFRoutines newCollection:fromCollection:byAddingItems:]
  +[_PFRoutines _newCollectionFromCollection:forParentContext:andClass:]
  +[_PFRoutines newOrderedSetFromCollection:byRemovingItems:]
  +[_PFRoutines newMutableOrderedSetFromCollection:]
  +[_PFRoutines newOrderedSetFromCollection:byAddingItems:]
  +[_PFRoutines createDictionaryPartitioningObjectsByRootEntity:]
  +[_PFRoutines _createDictionaryPartitioningObjects:intoHierarchies:]
  +[_PFRoutines _createDictionaryPartitioningObjectIDs:intoHierarchies:]
  +[_PFRoutines _generateObjectIDMaptableForArray:withMapping:andEntries:]
  +[_PFRoutines _newObjectIDsArrayWithMapping:andEntries:andCoordinator:]
  +[_PFRoutines _frameworkHash]
  +[_PFRoutines _groupObjectsByRootEntity:]
  +[_PFRoutines _generateHashForString:]
  +[_PFRoutines _getUUID]
  +[_PFRoutines _doNameAndTypeCheck:]
  +[_PFRoutines convertCString:toUnsignedInt64:withBase:]
  +[_PFRoutines attributeClassesForSecureCoding]
  +[_PFRoutines plistClassesForSecureCoding]
  +[_PFRoutines stringValueForOverride:]
  +[_PFRoutines boolValueForOverride:]
  +[_PFRoutines writePFExternalReferenceDataToInterimFile:]
  +[_PFRoutines moveInterimFileToPermanentLocation:]
  +[_PFRoutines readExternalReferenceDataFromFile:]
  +[_PFRoutines readBytesForExternalReferenceData:intoBuffer:range:]
  +[_PFRoutines newMappedDataForExternalReference:]
  +[_PFRoutines lengthOfFileAtExternalReferenceLocation:]
  +[_PFRoutines deleteFileForPFExternalReferenceData:]
  +[_PFRoutines createExternalReferenceLinkFromPath:toPath:protectionLevel:]
  +[_PFRoutines cleanupExternalReferenceLink:]
  +[_PFRoutines attemptToUpdatePermissionsForFileAtPath:toLevel:]
  +[_PFRoutines _isInMemoryStoreURL:]
  +[_PFRoutines _isInMemoryStore:]
  +[_PFRoutines setOrRemoveValue:forKey:inDictionary:]
  +[_PFRoutines _createNicksBase64EncodedStringFromData:]
  +[_PFRoutines encodeObjectValue:forTransformableAttribute:]
  +[_PFRoutines getIndexes:fromCollection:forObjectsInCollection:]
  +[_PFRoutines newOrderedSetFromCollection:]
  +[_PFRoutines anyObjectFromCollection:]
  +[_PFRoutines newSetOfObjectIDsFromCollection:]
  +[_PFRoutines newOrderedSetOfObjectIDsFromCollection:]
  +[_PFRoutines _objectsInOrderedCollection:formSubstringInOrderedCollection:]
  +[_PFRoutines newOrderedSetFromCollection:byInsertingItems:atIndex:]
  +[_PFRoutines newSetFromCollection:byAddingItems:]
  +[_PFRoutines newMutableSetFromCollection:byRemovingItems:]
  +[_PFRoutines newMutableSetFromCollection:byIntersectingWithCollection:]
  +[_PFRoutines newMutableArrayFromCollection:byRemovingItems:]
  +[_PFRoutines newMutableArrayFromCollection:forParentContext:]
  +[_PFRoutines newMutableSetFromCollection:forParentContext:]
  +[_PFRoutines newMutableOrderedSetFromCollection:forParentContext:]
  +[_PFRoutines _replaceBaseline:inOrderedSet:withOrderedSet:]
  +[_PFRoutines _expressionIsCompoundIndexCompatible:]
  +[_PFRoutines createDictionaryPartitioningObjectsByEntity:]
  +[_PFRoutines createDictionaryPartitioningObjectsIDByEntity:]
  +[_PFRoutines createDictionaryPartitioningObjectsIDByRootEntity:]
  +[_PFRoutines isUbiquitousURLUploaded:error:]
  +[_PFRoutines isUbiquitousURLDownloaded:error:]
  +[_PFRoutines isSanitizedVersionOf:equalTo:]
  +[_PFRoutines sanitize:]
  +[_PFRoutines applicationDeactivateLifecyleNotifications]
  +[_PFRoutines applicationActivateLifecyleNotifications]
  +[_PFRoutines wrapBlockInGuardedAutoreleasePool:]


_PFWeakReference : NSObject
 @property  id object
 @property  long long address

  // class methods
  +[_PFWeakReference weakReferenceWithObject:]

  // instance methods
  -[_PFWeakReference dealloc]
  -[_PFWeakReference isEqual:]
  -[_PFWeakReference object]
  -[_PFWeakReference initWithObject:]
  -[_PFWeakReference address]
  -[_PFWeakReference retainedObject]


_PFLock : NSObject <NSLocking>
  // class methods
  +[_PFLock initialize]

  // instance methods
  -[_PFLock init]
  -[_PFLock dealloc]
  -[_PFLock lock]
  -[_PFLock unlock]
  -[_PFLock tryLock]


_PFMutex : NSObject <NSLocking>
  // class methods
  +[_PFMutex initialize]

  // instance methods
  -[_PFMutex init]
  -[_PFMutex dealloc]
  -[_PFMutex lock]
  -[_PFMutex unlock]
  -[_PFMutex tryLock]


_PFGarbageManager : NSObject
  // class methods
  +[_PFGarbageManager allocWithZone:]
  +[_PFGarbageManager initialize]
  +[_PFGarbageManager defaultInstance]

  // instance methods
  -[_PFGarbageManager retainCount]
  -[_PFGarbageManager retain]
  -[_PFGarbageManager release]
  -[_PFGarbageManager autorelease]
  -[_PFGarbageManager _tryRetain]
  -[_PFGarbageManager _isDeallocating]
  -[_PFGarbageManager _init__]
  -[_PFGarbageManager _deleteIfNecessary:]
  -[_PFGarbageManager _doCleanupForDir:exceptURLs:]
  -[_PFGarbageManager registerURLForCleanup:]
  -[_PFGarbageManager temporaryLinksDirectoryForStore:]
  -[_PFGarbageManager doCleanupForURL:]


_PFAutoreleasePoolThunk : NSObject
  // class methods
  +[_PFAutoreleasePoolThunk thunkWithBlock:]

  // instance methods
  -[_PFAutoreleasePoolThunk dealloc]
  -[_PFAutoreleasePoolThunk initWithBlock:]


_PFString : NSString /usr/lib/libcompression.dylib
  // class methods
  +[_PFString alloc]
  +[_PFString allocWithZone:]
  +[_PFString accessInstanceVariablesDirectly]
  +[_PFString classForKeyedUnarchiver]

  // instance methods
  -[_PFString _fastCStringContents:]
  -[_PFString retainCount]
  -[_PFString dealloc]
  -[_PFString length]
  -[_PFString isEqual:]
  -[_PFString retain]
  -[_PFString release]
  -[_PFString _tryRetain]
  -[_PFString _isDeallocating]
  -[_PFString copyWithZone:]
  -[_PFString mutableCopyWithZone:]
  -[_PFString copy]
  -[_PFString cString]
  -[_PFString UTF8String]
  -[_PFString cStringLength]
  -[_PFString cStringUsingEncoding:]
  -[_PFString characterAtIndex:]
  -[_PFString getCharacters:range:]
  -[_PFString _fastCharacterContents]
  -[_PFString isEqualToString:]
  -[_PFString fastestEncoding]
  -[_PFString smallestEncoding]
  -[_PFString classForCoder]
  -[_PFString _isCString]
  -[_PFString classForArchiver]
  -[_PFString getCharacters:]
  -[_PFString getCString:]


_PFEncodedString : _PFString
  // class methods
  +[_PFEncodedString classForKeyedUnarchiver]

  // instance methods
  -[_PFEncodedString init]
  -[_PFEncodedString retainCount]
  -[_PFEncodedString dealloc]
  -[_PFEncodedString retain]
  -[_PFEncodedString release]
  -[_PFEncodedString _tryRetain]
  -[_PFEncodedString _isDeallocating]
  -[_PFEncodedString copyWithZone:]
  -[_PFEncodedString classForCoder]
  -[_PFEncodedString classForArchiver]


_PFResultString : _PFString
  // class methods
  +[_PFResultString bufferOffset]

  // instance methods
  -[_PFResultString retainCount]
  -[_PFResultString dealloc]
  -[_PFResultString retain]
  -[_PFResultString release]
  -[_PFResultString UTF8String]
  -[_PFResultString setParentObject:]


NSAtomicStore : NSPersistentStore
  // class methods
  +[NSAtomicStore initialize]
  +[NSAtomicStore metadataForPersistentStoreWithURL:error:]

  // instance methods
  -[NSAtomicStore init]
  -[NSAtomicStore dealloc]
  -[NSAtomicStore setMetadata:]
  -[NSAtomicStore metadata]
  -[NSAtomicStore save:]
  -[NSAtomicStore load:]
  -[NSAtomicStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSAtomicStore newValuesForObjectWithID:withContext:error:]
  -[NSAtomicStore _rawMetadata__]
  -[NSAtomicStore executeRequest:withContext:error:]
  -[NSAtomicStore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSAtomicStore obtainPermanentIDsForObjects:error:]
  -[NSAtomicStore _registerCacheNode:]
  -[NSAtomicStore addCacheNodes:]
  -[NSAtomicStore cacheNodes]
  -[NSAtomicStore willRemoveCacheNodes:]
  -[NSAtomicStore cacheNodeForObjectID:]
  -[NSAtomicStore newCacheNodeForManagedObject:]
  -[NSAtomicStore updateCacheNode:fromManagedObject:]
  -[NSAtomicStore newReferenceObjectForManagedObject:]
  -[NSAtomicStore objectIDForEntity:referenceObject:]
  -[NSAtomicStore referenceObjectForObjectID:]
  -[NSAtomicStore _insertNodeIntoMainCache:]
  -[NSAtomicStore _insertNodeIntoEntityCache:]
  -[NSAtomicStore executeFetchRequest:withContext:]
  -[NSAtomicStore executeSaveChangesRequest:withContext:]
  -[NSAtomicStore executeCountRequest:withContext:]
  -[NSAtomicStore executeRefreshRequest:withContext:]
  -[NSAtomicStore _retrieveNodesSatisfyingRequest:]
  -[NSAtomicStore _retrieveNodeForObjectID:]
  -[NSAtomicStore _getNewIDForObject:]
  -[NSAtomicStore _addObject:]
  -[NSAtomicStore _retrieveNodeForObject:]
  -[NSAtomicStore _removeObject:]
  -[NSAtomicStore _updateObject:]
  -[NSAtomicStore _storeNextReferenceInMetadata]
  -[NSAtomicStore _deleteNodeFromMainCache:]
  -[NSAtomicStore _deleteNodeFromEntityCache:]
  -[NSAtomicStore _didLoadMetadata]
  -[NSAtomicStore _preflightCrossCheck]
  -[NSAtomicStore managedObjectContextDidRegisterObjectsWithIDs:]
  -[NSAtomicStore managedObjectContextDidUnregisterObjectsWithIDs:]
  -[NSAtomicStore _retainedObjectIDForEntity:referenceObject:]


NSPersistentStoreResult : NSObject

NSUnknownRequestTypeResult : NSPersistentStoreResult
 @property  NSArray *subresults

  // instance methods
  -[NSUnknownRequestTypeResult dealloc]
  -[NSUnknownRequestTypeResult initWithSubresults:]
  -[NSUnknownRequestTypeResult subresults]


NSPersistentStoreAsynchronousResult : NSPersistentStoreResult
 @property  NSProgress *progress
 @property  NSError *operationError
 @property  id requestCompletionBlock
 @property  NSManagedObjectContext *managedObjectContext

  // instance methods
  -[NSPersistentStoreAsynchronousResult dealloc]
  -[NSPersistentStoreAsynchronousResult cancel]
  -[NSPersistentStoreAsynchronousResult progress]
  -[NSPersistentStoreAsynchronousResult requestCompletionBlock]
  -[NSPersistentStoreAsynchronousResult setRequestCompletionBlock:]
  -[NSPersistentStoreAsynchronousResult _isCancelled]
  -[NSPersistentStoreAsynchronousResult managedObjectContext]
  -[NSPersistentStoreAsynchronousResult setProgress:]
  -[NSPersistentStoreAsynchronousResult initWithContext:andProgress:completetionBlock:]
  -[NSPersistentStoreAsynchronousResult _cancelProgress]
  -[NSPersistentStoreAsynchronousResult operationError]
  -[NSPersistentStoreAsynchronousResult setOperationError:]


NSAsynchronousFetchResult : NSPersistentStoreAsynchronousResult
 @property  NSArray *finalResult
 @property  @? intermediateResultCallback
 @property  NSAsynchronousFetchRequest *fetchRequest

  // instance methods
  -[NSAsynchronousFetchResult dealloc]
  -[NSAsynchronousFetchResult fetchRequest]
  -[NSAsynchronousFetchResult initForFetchRequest:withContext:andProgress:completetionBlock:]
  -[NSAsynchronousFetchResult finalResult]
  -[NSAsynchronousFetchResult setFinalResult:]
  -[NSAsynchronousFetchResult intermediateResultCallback]
  -[NSAsynchronousFetchResult setIntermediateResultCallback:]


NSAtomicStoreCacheNode : NSObject
 @property  NSManagedObjectID *objectID
 @property  NSMutableDictionary *propertyCache

  // class methods
  +[NSAtomicStoreCacheNode initialize]
  +[NSAtomicStoreCacheNode accessInstanceVariablesDirectly]

  // instance methods
  -[NSAtomicStoreCacheNode init]
  -[NSAtomicStoreCacheNode dealloc]
  -[NSAtomicStoreCacheNode isEqual:]
  -[NSAtomicStoreCacheNode setValue:forKey:]
  -[NSAtomicStoreCacheNode valueForKey:]
  -[NSAtomicStoreCacheNode objectID]
  -[NSAtomicStoreCacheNode knownKeyValuesPointer]
  -[NSAtomicStoreCacheNode _snapshot_]
  -[NSAtomicStoreCacheNode _versionNumber]
  -[NSAtomicStoreCacheNode _setVersionNumber:]
  -[NSAtomicStoreCacheNode initWithObjectID:]
  -[NSAtomicStoreCacheNode propertyCache]
  -[NSAtomicStoreCacheNode setPropertyCache:]


NSAttributeDescription : NSPropertyDescription
 @property  BOOL preserveValueOnDeletionInPersistentHistory
 @property  BOOL isFileBackedFuture
 @property  unsigned long attributeType
 @property  NSString *attributeValueClassName
 @property  id defaultValue
 @property  NSData *versionHash
 @property  NSString *valueTransformerName
 @property  BOOL allowsExternalBinaryDataStorage
 @property  BOOL preservesValueInHistoryOnDeletion

  // class methods
  +[NSAttributeDescription initialize]
  +[NSAttributeDescription supportsSecureCoding]
  +[NSAttributeDescription stringForAttributeType:]
  +[NSAttributeDescription _classNameForType:]

  // instance methods
  -[NSAttributeDescription dealloc]
  -[NSAttributeDescription isEqual:]
  -[NSAttributeDescription copyWithZone:]
  -[NSAttributeDescription encodeWithCoder:]
  -[NSAttributeDescription initWithCoder:]
  -[NSAttributeDescription attributeValueClassName]
  -[NSAttributeDescription attributeType]
  -[NSAttributeDescription defaultValue]
  -[NSAttributeDescription setDefaultValue:]
  -[NSAttributeDescription _propertyType]
  -[NSAttributeDescription isFileBackedFuture]
  -[NSAttributeDescription allowsExternalBinaryDataStorage]
  -[NSAttributeDescription valueTransformerName]
  -[NSAttributeDescription preservesValueInHistoryOnDeletion]
  -[NSAttributeDescription setAttributeType:]
  -[NSAttributeDescription setValueTransformerName:]
  -[NSAttributeDescription setAttributeValueClassName:]
  -[NSAttributeDescription _isSchemaEqual:]
  -[NSAttributeDescription versionHash]
  -[NSAttributeDescription storesBinaryDataExternally]
  -[NSAttributeDescription isIndexed]
  -[NSAttributeDescription _sortOutDefaultNumericValuesBecauseDoublesAndFloatsDontCompareEqualAndThatBreaksTests]
  -[NSAttributeDescription _attributeTypeIsSchemaEqual:]
  -[NSAttributeDescription validationPredicates]
  -[NSAttributeDescription validationWarnings]
  -[NSAttributeDescription _setPreserveValueOnDeletionInPersistentHistory:]
  -[NSAttributeDescription setAllowsExternalBinaryDataStorage:]
  -[NSAttributeDescription setPreservesValueInHistoryOnDeletion:]
  -[NSAttributeDescription preserveValueOnDeletionInPersistentHistory]
  -[NSAttributeDescription setPreserveValueOnDeletionInPersistentHistory:]
  -[NSAttributeDescription _attributeValueClass]
  -[NSAttributeDescription _rawValidationPredicates]
  -[NSAttributeDescription _rawValidationWarnings]
  -[NSAttributeDescription _canConvertPredicate:andWarning:]
  -[NSAttributeDescription _comparePredicatesAndWarnings:]
  -[NSAttributeDescription _comparePredicatesAndWarningsWithUnoptimizedAttributeDescription:]
  -[NSAttributeDescription _createCachesAndOptimizeState]
  -[NSAttributeDescription _nonPredicateValidateValue:forKey:inObject:error:]
  -[NSAttributeDescription _versionHash:inStyle:]
  -[NSAttributeDescription _initWithName:type:withClassName:]
  -[NSAttributeDescription _initWithName:type:]
  -[NSAttributeDescription setIsFileBackedFuture:]
  -[NSAttributeDescription _epsilonEquals:rhs:withFlags:]
  -[NSAttributeDescription _initWithType:]
  -[NSAttributeDescription setStoresBinaryDataExternally:]
  -[NSAttributeDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]


NSAttributeStoreMapping : NSPropertyStoreMapping
  // instance methods
  -[NSAttributeStoreMapping isEqual:]
  -[NSAttributeStoreMapping attribute]
  -[NSAttributeStoreMapping sqlType]
  -[NSAttributeStoreMapping initWithProperty:]
  -[NSAttributeStoreMapping setExternalType:]
  -[NSAttributeStoreMapping setExternalPrecision:]
  -[NSAttributeStoreMapping setExternalScale:]
  -[NSAttributeStoreMapping externalType]
  -[NSAttributeStoreMapping externalPrecision]
  -[NSAttributeStoreMapping externalScale]
  -[NSAttributeStoreMapping columnDefinition]


_NSCoreManagedObjectID : NSManagedObjectID
  // class methods
  +[_NSCoreManagedObjectID alloc]
  +[_NSCoreManagedObjectID retain]
  +[_NSCoreManagedObjectID release]
  +[_NSCoreManagedObjectID allocWithZone:]
  +[_NSCoreManagedObjectID initialize]
  +[_NSCoreManagedObjectID automaticallyNotifiesObserversForKey:]
  +[_NSCoreManagedObjectID accessInstanceVariablesDirectly]
  +[_NSCoreManagedObjectID version]
  +[_NSCoreManagedObjectID allocateBatch:count:]
  +[_NSCoreManagedObjectID _storeInfo1]
  +[_NSCoreManagedObjectID _setStoreInfo1:]
  +[_NSCoreManagedObjectID generatedNameSuffix]
  +[_NSCoreManagedObjectID _retain_1]
  +[_NSCoreManagedObjectID _release_1]
  +[_NSCoreManagedObjectID setObjectStoreIdentifier:]
  +[_NSCoreManagedObjectID classWithStore:andEntity:]
  +[_NSCoreManagedObjectID managedObjectIDFromUTF8String:length:]
  +[_NSCoreManagedObjectID managedObjectIDFromURIRepresentation:]
  +[_NSCoreManagedObjectID _storeDeallocated]

  // instance methods
  -[_NSCoreManagedObjectID retainCount]
  -[_NSCoreManagedObjectID isEqual:]
  -[_NSCoreManagedObjectID retain]
  -[_NSCoreManagedObjectID release]
  -[_NSCoreManagedObjectID entityName]
  -[_NSCoreManagedObjectID entity]
  -[_NSCoreManagedObjectID URIRepresentation]
  -[_NSCoreManagedObjectID _storeInfo1]
  -[_NSCoreManagedObjectID persistentStore]
  -[_NSCoreManagedObjectID _storeIdentifier]
  -[_NSCoreManagedObjectID isTemporaryID]
  -[_NSCoreManagedObjectID _isPersistentStoreAlive]


NSBasicObjectID : _NSCoreManagedObjectID
  // class methods
  +[NSBasicObjectID generatedNameSuffix]

  // instance methods
  -[NSBasicObjectID dealloc]
  -[NSBasicObjectID initWithObject:]
  -[NSBasicObjectID _referenceData]
  -[NSBasicObjectID _retainedURIString]


_NSScalarObjectID : _NSCoreManagedObjectID
  // instance methods
  -[_NSScalarObjectID dealloc]
  -[_NSScalarObjectID compare:]
  -[_NSScalarObjectID initWithPK64:]
  -[_NSScalarObjectID _referenceData64]
  -[_NSScalarObjectID _referenceData]
  -[_NSScalarObjectID _getURIBytes:length:]
  -[_NSScalarObjectID _retainedURIString]
  -[_NSScalarObjectID _preferReferenceData64]


NSScalarObjectID64 : _NSScalarObjectID
  // class methods
  +[NSScalarObjectID64 generatedNameSuffix]


NSScalarObjectID48 : _NSScalarObjectID
  // class methods
  +[NSScalarObjectID48 generatedNameSuffix]

  // instance methods
  -[NSScalarObjectID48 retainCount]


_NSCoreDataTaggedObjectID : _NSScalarObjectID
  // class methods
  +[_NSCoreDataTaggedObjectID alloc]
  +[_NSCoreDataTaggedObjectID allocWithZone:]
  +[_NSCoreDataTaggedObjectID initialize]
  +[_NSCoreDataTaggedObjectID allocateBatch:count:]
  +[_NSCoreDataTaggedObjectID _storeInfo1]
  +[_NSCoreDataTaggedObjectID _setStoreInfo1:]
  +[_NSCoreDataTaggedObjectID setObjectStoreIdentifier:]
  +[_NSCoreDataTaggedObjectID classWithStore:andEntity:]
  +[_NSCoreDataTaggedObjectID managedObjectIDFromURIRepresentation:]
  +[_NSCoreDataTaggedObjectID _storeDeallocated]

  // instance methods
  -[_NSCoreDataTaggedObjectID retainCount]
  -[_NSCoreDataTaggedObjectID dealloc]
  -[_NSCoreDataTaggedObjectID isEqual:]
  -[_NSCoreDataTaggedObjectID retain]
  -[_NSCoreDataTaggedObjectID release]
  -[_NSCoreDataTaggedObjectID copyWithZone:]
  -[_NSCoreDataTaggedObjectID copy]
  -[_NSCoreDataTaggedObjectID initWithObject:]
  -[_NSCoreDataTaggedObjectID entityName]
  -[_NSCoreDataTaggedObjectID entity]
  -[_NSCoreDataTaggedObjectID initWithPK64:]
  -[_NSCoreDataTaggedObjectID _storeInfo1]
  -[_NSCoreDataTaggedObjectID _referenceData64]
  -[_NSCoreDataTaggedObjectID persistentStore]
  -[_NSCoreDataTaggedObjectID _storeIdentifier]
  -[_NSCoreDataTaggedObjectID isTemporaryID]
  -[_NSCoreDataTaggedObjectID _retainedURIString]
  -[_NSCoreDataTaggedObjectID _isPersistentStoreAlive]


_NSCoreDataTaggedObjectIDFactory : NSObject
  // class methods
  +[_NSCoreDataTaggedObjectIDFactory alloc]
  +[_NSCoreDataTaggedObjectIDFactory allocWithZone:]

  // instance methods
  -[_NSCoreDataTaggedObjectIDFactory alloc]
  -[_NSCoreDataTaggedObjectIDFactory retainCount]
  -[_NSCoreDataTaggedObjectIDFactory dealloc]
  -[_NSCoreDataTaggedObjectIDFactory retain]
  -[_NSCoreDataTaggedObjectIDFactory release]
  -[_NSCoreDataTaggedObjectIDFactory allocWithZone:]
  -[_NSCoreDataTaggedObjectIDFactory allocateBatch:count:]
  -[_NSCoreDataTaggedObjectIDFactory initWithPK64:]
  -[_NSCoreDataTaggedObjectIDFactory _storeInfo1]
  -[_NSCoreDataTaggedObjectIDFactory _setStoreInfo1:]
  -[_NSCoreDataTaggedObjectIDFactory setObjectStoreIdentifier:]
  -[_NSCoreDataTaggedObjectIDFactory managedObjectIDFromUTF8String:length:]
  -[_NSCoreDataTaggedObjectIDFactory managedObjectIDFromURIRepresentation:]
  -[_NSCoreDataTaggedObjectIDFactory _storeDeallocated]
  -[_NSCoreDataTaggedObjectIDFactory _fallbackFactory]
  -[_NSCoreDataTaggedObjectIDFactory _initCoreWithTaggedIndex:]


NSCloudKitMirroringDelegateSerializationRequestResult : NSCloudKitMirroringResult
 @property  NSDictionary *serializedObjects

  // instance methods
  -[NSCloudKitMirroringDelegateSerializationRequestResult dealloc]
  -[NSCloudKitMirroringDelegateSerializationRequestResult initWithRequest:serializedObjects:error:]
  -[NSCloudKitMirroringDelegateSerializationRequestResult serializedObjects]


NSBinaryObjectStore : NSMappedObjectStore
  // class methods
  +[NSBinaryObjectStore metadataForPersistentStoreWithURL:error:]
  +[NSBinaryObjectStore metadataForPersistentStoreWithURL:options:error:]
  +[NSBinaryObjectStore setMetadata:forPersistentStoreWithURL:options:error:]
  +[NSBinaryObjectStore setMetadata:forPersistentStoreWithURL:error:]
  +[NSBinaryObjectStore _classesForPropertyValues]

  // instance methods
  -[NSBinaryObjectStore type]
  -[NSBinaryObjectStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSBinaryObjectStore saveDocumentToPath:]


NSBinaryObjectStoreFile : NSObject
  // instance methods
  -[NSBinaryObjectStoreFile dealloc]
  -[NSBinaryObjectStoreFile readMetadataFromFile:securely:error:]
  -[NSBinaryObjectStoreFile fullMetadata]
  -[NSBinaryObjectStoreFile setFullMetadata:]
  -[NSBinaryObjectStoreFile writeMetadataToFile:error:]
  -[NSBinaryObjectStoreFile setDatabaseVersion:]
  -[NSBinaryObjectStoreFile setPrimaryKeyGeneration:]
  -[NSBinaryObjectStoreFile setMapData:]
  -[NSBinaryObjectStoreFile clearCurrentValues]
  -[NSBinaryObjectStoreFile readBinaryStoreFromData:originalPath:error:]
  -[NSBinaryObjectStoreFile _writeMetadataData:andMapDataData:toFile:error:]
  -[NSBinaryObjectStoreFile databaseVersion]
  -[NSBinaryObjectStoreFile primaryKeyGeneration]
  -[NSBinaryObjectStoreFile mapData]
  -[NSBinaryObjectStoreFile readFromFile:error:]
  -[NSBinaryObjectStoreFile writeToFile:error:]


NSCoreDataCoreSpotlightDelegate : NSObject
 @property  NSManagedObjectContext *_context

  // instance methods
  -[NSCoreDataCoreSpotlightDelegate dealloc]
  -[NSCoreDataCoreSpotlightDelegate _invalidate]
  -[NSCoreDataCoreSpotlightDelegate domainIdentifier]
  -[NSCoreDataCoreSpotlightDelegate bundleIdentifier]
  -[NSCoreDataCoreSpotlightDelegate _context]
  -[NSCoreDataCoreSpotlightDelegate indexName]
  -[NSCoreDataCoreSpotlightDelegate protectionClass]
  -[NSCoreDataCoreSpotlightDelegate usePrivateIndex]
  -[NSCoreDataCoreSpotlightDelegate _processedOidsForDictionary:]
  -[NSCoreDataCoreSpotlightDelegate attributeSetForObject:]
  -[NSCoreDataCoreSpotlightDelegate _searchableItemForObject:]
  -[NSCoreDataCoreSpotlightDelegate _retainedCurrentSearchableIndex]
  -[NSCoreDataCoreSpotlightDelegate _catchUpToCurrentTransaction]
  -[NSCoreDataCoreSpotlightDelegate _asyncContextBlock:]
  -[NSCoreDataCoreSpotlightDelegate _processedOidsForSaveRequest:]
  -[NSCoreDataCoreSpotlightDelegate _updateSpotlightIndexForObjectsWithIDs:]
  -[NSCoreDataCoreSpotlightDelegate _processTransactionsStartingAt:]
  -[NSCoreDataCoreSpotlightDelegate _updateSpotlightClientStateForHistoryTracking:]
  -[NSCoreDataCoreSpotlightDelegate _reindexInstancesOf:inIndex:]
  -[NSCoreDataCoreSpotlightDelegate _importObjectsUpdatedSinceTransaction:]
  -[NSCoreDataCoreSpotlightDelegate _spotlightClientStateForHistoryTracking]
  -[NSCoreDataCoreSpotlightDelegate _doFullReimport]
  -[NSCoreDataCoreSpotlightDelegate _initialImportCompleted]
  -[NSCoreDataCoreSpotlightDelegate initForStoreWithDescription:model:]
  -[NSCoreDataCoreSpotlightDelegate _updateSpotlightIndexFromSaveRequest:]
  -[NSCoreDataCoreSpotlightDelegate searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[NSCoreDataCoreSpotlightDelegate searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]
  -[NSCoreDataCoreSpotlightDelegate _initializePersistentStore]
  -[NSCoreDataCoreSpotlightDelegate _lastImportedTransaction]
  -[NSCoreDataCoreSpotlightDelegate initForStoreWithDescription:coordinator:]
  -[NSCoreDataCoreSpotlightDelegate indexSearchableItemsToCurrentHistoryToken]
  -[NSCoreDataCoreSpotlightDelegate startSpotlightIndexing]
  -[NSCoreDataCoreSpotlightDelegate stopSpotlightIndexing]


NSDictionaryMapNode : NSStoreMapNode <NSSecureCoding>
  // class methods
  +[NSDictionaryMapNode initialize]
  +[NSDictionaryMapNode supportsSecureCoding]

  // instance methods
  -[NSDictionaryMapNode dealloc]
  -[NSDictionaryMapNode encodeWithCoder:]
  -[NSDictionaryMapNode initWithCoder:]
  -[NSDictionaryMapNode valueForKey:]
  -[NSDictionaryMapNode _doAttributeDecoding]
  -[NSDictionaryMapNode initWithValues:objectID:]
  -[NSDictionaryMapNode attributeValues]


NSDictionaryStoreMap : NSPersistentStoreMap
  // class methods
  +[NSDictionaryStoreMap initialize]

  // instance methods
  -[NSDictionaryStoreMap dealloc]
  -[NSDictionaryStoreMap dataForKey:]
  -[NSDictionaryStoreMap initWithStore:]
  -[NSDictionaryStoreMap initWithStore:fromPath:]
  -[NSDictionaryStoreMap saveToPath:]
  -[NSDictionaryStoreMap _nodeFromObject:objectIDMap:]
  -[NSDictionaryStoreMap removeObject:objectIDMap:]
  -[NSDictionaryStoreMap addObject:objectIDMap:]
  -[NSDictionaryStoreMap initWithStore:fromArchivedData:]
  -[NSDictionaryStoreMap _theDictionary]
  -[NSDictionaryStoreMap updateObject:objectIDMap:]
  -[NSDictionaryStoreMap retainedObjectIDsForRelationship:forObjectID:]
  -[NSDictionaryStoreMap handleFetchRequest:]
  -[NSDictionaryStoreMap _archivedData]


NSEntityDescription : NSObject <NSSecureCoding, NSCoding, NSCopying, NSFastEnumeration>
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSString *managedObjectClassName
 @property  NSString *name
 @property  BOOL abstract
 @property  NSDictionary *subentitiesByName
 @property  NSArray *subentities
 @property  NSEntityDescription *superentity
 @property  NSDictionary *propertiesByName
 @property  NSArray *properties
 @property  NSDictionary *userInfo
 @property  NSDictionary *attributesByName
 @property  NSDictionary *relationshipsByName
 @property  NSData *versionHash
 @property  NSString *versionHashModifier
 @property  NSString *renamingIdentifier
 @property  NSArray *indexes
 @property  NSArray *uniquenessConstraints
 @property  NSArray *compoundIndexes
 @property  NSExpression *coreSpotlightDisplayNameExpression

  // class methods
  +[NSEntityDescription initialize]
  +[NSEntityDescription supportsSecureCoding]
  +[NSEntityDescription entityForName:inManagedObjectContext:]
  +[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:]
  +[NSEntityDescription _MOClassName]

  // instance methods
  -[NSEntityDescription init]
  -[NSEntityDescription retainCount]
  -[NSEntityDescription dealloc]
  -[NSEntityDescription isEqual:]
  -[NSEntityDescription retain]
  -[NSEntityDescription release]
  -[NSEntityDescription _tryRetain]
  -[NSEntityDescription _isDeallocating]
  -[NSEntityDescription name]
  -[NSEntityDescription copyWithZone:]
  -[NSEntityDescription countByEnumeratingWithState:objects:count:]
  -[NSEntityDescription userInfo]
  -[NSEntityDescription encodeWithCoder:]
  -[NSEntityDescription initWithCoder:]
  -[NSEntityDescription setName:]
  -[NSEntityDescription setUserInfo:]
  -[NSEntityDescription properties]
  -[NSEntityDescription setProperties:]
  -[NSEntityDescription managedObjectModel]
  -[NSEntityDescription attributesByName]
  -[NSEntityDescription propertiesByName]
  -[NSEntityDescription relationshipsByName]
  -[NSEntityDescription indexes]
  -[NSEntityDescription _initWithName:]
  -[NSEntityDescription _isEditable]
  -[NSEntityDescription _allPropertyNames]
  -[NSEntityDescription _propertyNamed:]
  -[NSEntityDescription _hasAttributesWithFileBackedFutures]
  -[NSEntityDescription _propertyRangesByType]
  -[NSEntityDescription knownKeysMappingStrategy]
  -[NSEntityDescription _relationshipNamed:]
  -[NSEntityDescription attributeKeys]
  -[NSEntityDescription _nukeMOClassName__]
  -[NSEntityDescription _rootEntity]
  -[NSEntityDescription subentitiesByName]
  -[NSEntityDescription subentities]
  -[NSEntityDescription isKindOfEntity:]
  -[NSEntityDescription _setIsEditable:]
  -[NSEntityDescription setManagedObjectClassName:]
  -[NSEntityDescription setUniquenessConstraints:]
  -[NSEntityDescription superentity]
  -[NSEntityDescription renamingIdentifier]
  -[NSEntityDescription _isSchemaEqual:]
  -[NSEntityDescription versionHash]
  -[NSEntityDescription _subentitiesIncludes:]
  -[NSEntityDescription _extraIVars]
  -[NSEntityDescription _throwIfNotEditable]
  -[NSEntityDescription _createCachesAndOptimizeState]
  -[NSEntityDescription _modelsReferenceID]
  -[NSEntityDescription coreSpotlightDisplayNameExpression]
  -[NSEntityDescription _hasPropertiesIndexedBySpotlight]
  -[NSEntityDescription _propertySearchMapping]
  -[NSEntityDescription _entityClass]
  -[NSEntityDescription _initializeExtraIVars]
  -[NSEntityDescription isAbstract]
  -[NSEntityDescription versionHashModifier]
  -[NSEntityDescription _oldCompoundIndexStyleIndexes]
  -[NSEntityDescription _indexElementFromJSONArray:]
  -[NSEntityDescription _indexDescriptionFromJSONArray:]
  -[NSEntityDescription _addSupplementalIndexes:]
  -[NSEntityDescription _setIndexes:]
  -[NSEntityDescription setRenamingIdentifier:]
  -[NSEntityDescription setCompoundIndexes:]
  -[NSEntityDescription _setUniquenessConstraints:]
  -[NSEntityDescription _setIndexesFromJSONObject:supplemental:]
  -[NSEntityDescription _setSubentities:preserveIndices:]
  -[NSEntityDescription _setProperties:preserveIndices:]
  -[NSEntityDescription _uniquenessConstraints]
  -[NSEntityDescription setCoreSpotlightDisplayNameExpression:]
  -[NSEntityDescription managedObjectClassName]
  -[NSEntityDescription _propertiesMatchingBlock:]
  -[NSEntityDescription _propertiesOfType:]
  -[NSEntityDescription _dropIndexes]
  -[NSEntityDescription _removeSubentity:]
  -[NSEntityDescription _addSubentity:]
  -[NSEntityDescription _removeProperty:]
  -[NSEntityDescription _addProperty:]
  -[NSEntityDescription _isFlattened]
  -[NSEntityDescription _subentityNamed:]
  -[NSEntityDescription _versionHashInStyle:]
  -[NSEntityDescription _validateIndexNameChangeFrom:to:]
  -[NSEntityDescription _attributeNamed:]
  -[NSEntityDescription _validateIndex:]
  -[NSEntityDescription _propertiesOnlySubsetFromIndexes:]
  -[NSEntityDescription _hasIndexForProperty:]
  -[NSEntityDescription uniquenessConstraints]
  -[NSEntityDescription _collectSubentities]
  -[NSEntityDescription _checkSelfForNonCascadeNoInverses]
  -[NSEntityDescription _checkForNonCascadeNoInverses]
  -[NSEntityDescription setSubentities:]
  -[NSEntityDescription relationshipsWithDestinationEntity:]
  -[NSEntityDescription setAbstract:]
  -[NSEntityDescription _newVersionHashInStyle:]
  -[NSEntityDescription setVersionHashModifier:]
  -[NSEntityDescription setIndexes:]
  -[NSEntityDescription compoundIndexes]
  -[NSEntityDescription _snapshotClass]
  -[NSEntityDescription _flattenedSubentities]
  -[NSEntityDescription _keypathsToPrefetchForDeletePropagation]
  -[NSEntityDescription _setSuperentity:]
  -[NSEntityDescription setElementID:]
  -[NSEntityDescription elementID]
  -[NSEntityDescription keypathsToPrefetchForDeletePropagation]
  -[NSEntityDescription _constraintAsIndex:]
  -[NSEntityDescription _keypathsToPrefetchForDeletePropagationPrefixedWith:toDepth:processedEntities:]
  -[NSEntityDescription _propertyKeys:matchingBlock:]
  -[NSEntityDescription _relationshipNamesByType:]
  -[NSEntityDescription _localPropertyDescriptionNamed:]
  -[NSEntityDescription _localRelationshipNamed:]
  -[NSEntityDescription _flattenProperties]
  -[NSEntityDescription _isInheritedPropertyNamed:]
  -[NSEntityDescription _newMappingForPropertiesOfRange:]
  -[NSEntityDescription _commonCachesAndOptimizedState]
  -[NSEntityDescription _removePropertyNamed:]
  -[NSEntityDescription _setIsFlattened:]
  -[NSEntityDescription _stripForMigration]
  -[NSEntityDescription _restoreValidation]
  -[NSEntityDescription _constraintIsExtension:]
  -[NSEntityDescription _hasUniquePropertiesRaw]
  -[NSEntityDescription _addFactoryToRetainList:]
  -[NSEntityDescription _uniquenessConstraintsAsFetchIndexes]
  -[NSEntityDescription _propertyWithRenamingIdentifier:]
  -[NSEntityDescription _keypathsForDeletions]
  -[NSEntityDescription _setManagedObjectModel:]
  -[NSEntityDescription toManyRelationshipKeys]
  -[NSEntityDescription toOneRelationshipKeys]
  -[NSEntityDescription inverseForRelationshipKey:]
  -[NSEntityDescription _hasCustomPrimitiveProperties]
  -[NSEntityDescription _inheritanceDepth]
  -[NSEntityDescription _hasPotentialHashSkew]
  -[NSEntityDescription _offsetRelationshipIndex:fromSuperEntity:andIsToMany:]
  -[NSEntityDescription _newSnowLeopardStyleDictionaryContainingPropertiesOfType:]
  -[NSEntityDescription _leopardStyleRelationshipsByName]
  -[NSEntityDescription _leopardStyleAttributesByName]
  -[NSEntityDescription _new_implicitlyObservedKeys]
  -[NSEntityDescription _setModelsReferenceID:]
  -[NSEntityDescription _sortedSubentities]
  -[NSEntityDescription _skipValidation]
  -[NSEntityDescription _hasAttributesWithExternalDataReferences]
  -[NSEntityDescription _hasPropertiesStoredInTruthFile]
  -[NSEntityDescription _addIndexForProperty:]
  -[NSEntityDescription _removeIndexForProperty:]
  -[NSEntityDescription _finalizeIndexes]
  -[NSEntityDescription _isPathologicalForConstraintMerging:]
  -[NSEntityDescription _setValidationRequiredUniquePropertiesUpInheritanceHierachy]
  -[NSEntityDescription _setHasUniqueProperties:]
  -[NSEntityDescription _setHasUniquePropertiesUpInheritanceHierachy]
  -[NSEntityDescription _hasUniqueProperties]
  -[NSEntityDescription _extensionsOfParentConstraint:]
  -[NSEntityDescription _hasUniquedPropertyNamed:]
  -[NSEntityDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:uniquedMappings:entities:]


NSEntityMapping : NSObject <NSSecureCoding>
 @property  NSString *name
 @property  unsigned long mappingType
 @property  NSString *sourceEntityName
 @property  NSData *sourceEntityVersionHash
 @property  NSString *destinationEntityName
 @property  NSData *destinationEntityVersionHash
 @property  NSArray *attributeMappings
 @property  NSArray *relationshipMappings
 @property  NSExpression *sourceExpression
 @property  NSDictionary *userInfo
 @property  NSString *entityMigrationPolicyClassName

  // class methods
  +[NSEntityMapping initialize]
  +[NSEntityMapping supportsSecureCoding]

  // instance methods
  -[NSEntityMapping init]
  -[NSEntityMapping dealloc]
  -[NSEntityMapping isEqual:]
  -[NSEntityMapping name]
  -[NSEntityMapping copyWithZone:]
  -[NSEntityMapping userInfo]
  -[NSEntityMapping encodeWithCoder:]
  -[NSEntityMapping initWithCoder:]
  -[NSEntityMapping setName:]
  -[NSEntityMapping setUserInfo:]
  -[NSEntityMapping isEditable]
  -[NSEntityMapping _setIsEditable:]
  -[NSEntityMapping mappingType]
  -[NSEntityMapping sourceEntityName]
  -[NSEntityMapping destinationEntityName]
  -[NSEntityMapping setSourceExpression:]
  -[NSEntityMapping setAttributeMappings:]
  -[NSEntityMapping setRelationshipMappings:]
  -[NSEntityMapping setSourceEntityName:]
  -[NSEntityMapping setSourceEntityVersionHash:]
  -[NSEntityMapping setDestinationEntityName:]
  -[NSEntityMapping setDestinationEntityVersionHash:]
  -[NSEntityMapping _setChangeIsSchemaCompatible:]
  -[NSEntityMapping setMappingType:]
  -[NSEntityMapping _throwIfNotEditable]
  -[NSEntityMapping _createCachesAndOptimizeState]
  -[NSEntityMapping _initWithSourceEntityDescription:destinationEntityDescription:]
  -[NSEntityMapping attributeMappings]
  -[NSEntityMapping relationshipMappings]
  -[NSEntityMapping sourceEntityVersionHash]
  -[NSEntityMapping destinationEntityVersionHash]
  -[NSEntityMapping sourceExpression]
  -[NSEntityMapping entityMigrationPolicyClassName]
  -[NSEntityMapping setEntityMigrationPolicyClassName:]
  -[NSEntityMapping _mappingsByName]
  -[NSEntityMapping _migrationPolicy]
  -[NSEntityMapping _addAttributeMapping:]
  -[NSEntityMapping _addRelationshipMapping:]
  -[NSEntityMapping _hasInferredMappingNeedingValidation]
  -[NSEntityMapping _changeIsSchemaCompatible]


NSEntityMigrationPolicy : NSObject
  // instance methods
  -[NSEntityMigrationPolicy beginEntityMapping:manager:error:]
  -[NSEntityMigrationPolicy createDestinationInstancesForSourceInstance:entityMapping:manager:error:]
  -[NSEntityMigrationPolicy endInstanceCreationForEntityMapping:manager:error:]
  -[NSEntityMigrationPolicy createRelationshipsForDestinationInstance:entityMapping:manager:error:]
  -[NSEntityMigrationPolicy endRelationshipCreationForEntityMapping:manager:error:]
  -[NSEntityMigrationPolicy performCustomValidationForEntityMapping:manager:error:]
  -[NSEntityMigrationPolicy endEntityMapping:manager:error:]
  -[NSEntityMigrationPolicy _nonNilValueOrDefaultValueForAttribute:source:destination:]


NSEntityStoreMapping : NSStoreMapping
  // instance methods
  -[NSEntityStoreMapping dealloc]
  -[NSEntityStoreMapping isEqual:]
  -[NSEntityStoreMapping setEntity:]
  -[NSEntityStoreMapping entity]
  -[NSEntityStoreMapping attributeMappings]
  -[NSEntityStoreMapping relationshipMappings]
  -[NSEntityStoreMapping setPropertyMappings:]
  -[NSEntityStoreMapping setPrimaryKeys:]
  -[NSEntityStoreMapping setSingleTableEntity:]
  -[NSEntityStoreMapping setSubentityColumn:]
  -[NSEntityStoreMapping setSubentityID:]
  -[NSEntityStoreMapping propertyMappings]
  -[NSEntityStoreMapping primaryKeys]
  -[NSEntityStoreMapping isSingleTableEntity]
  -[NSEntityStoreMapping subentityColumn]
  -[NSEntityStoreMapping subentityID]
  -[NSEntityStoreMapping primaryKeyColumnDefinitions]
  -[NSEntityStoreMapping attributeColumnDefinitions]
  -[NSEntityStoreMapping foreignKeyColumnDefinitions]
  -[NSEntityStoreMapping foreignKeyConstraintDefinitions]
  -[NSEntityStoreMapping initWithEntity:]
  -[NSEntityStoreMapping createTableStatement]


NSExpressionDescription : NSPropertyDescription
 @property  NSExpression *expression
 @property  unsigned long expressionResultType

  // class methods
  +[NSExpressionDescription supportsSecureCoding]

  // instance methods
  -[NSExpressionDescription init]
  -[NSExpressionDescription dealloc]
  -[NSExpressionDescription copyWithZone:]
  -[NSExpressionDescription encodeWithCoder:]
  -[NSExpressionDescription initWithCoder:]
  -[NSExpressionDescription setExpression:]
  -[NSExpressionDescription setExpressionResultType:]
  -[NSExpressionDescription attributeValueClassName]
  -[NSExpressionDescription _propertyType]
  -[NSExpressionDescription expressionResultType]
  -[NSExpressionDescription expression]
  -[NSExpressionDescription valueTransformerName]
  -[NSExpressionDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]
  -[NSExpressionDescription underlyingAttribute]
  -[NSExpressionDescription setUnderlyingAttribute:]


NSPersistentCacheRow : NSObject
  // class methods
  +[NSPersistentCacheRow allocWithZone:]

  // instance methods
  -[NSPersistentCacheRow retainCount]
  -[NSPersistentCacheRow dealloc]
  -[NSPersistentCacheRow retain]
  -[NSPersistentCacheRow release]
  -[NSPersistentCacheRow _tryRetain]
  -[NSPersistentCacheRow _isDeallocating]
  -[NSPersistentCacheRow options]
  -[NSPersistentCacheRow version]
  -[NSPersistentCacheRow timestamp]
  -[NSPersistentCacheRow objectID]
  -[NSPersistentCacheRow setTimestamp:]
  -[NSPersistentCacheRow knownKeyValuesPointer]
  -[NSPersistentCacheRow updateMissingRelationshipCachesFromOriginal:]
  -[NSPersistentCacheRow incrementRefCount]
  -[NSPersistentCacheRow externalReferenceCount]
  -[NSPersistentCacheRow initWithOptions:andTimestamp:]
  -[NSPersistentCacheRow _initializeRelationshipCaches]
  -[NSPersistentCacheRow toManyOffsetForProperty:]
  -[NSPersistentCacheRow decrementRefCount]
  -[NSPersistentCacheRow incrementExternalReferenceCount:]
  -[NSPersistentCacheRow copyRelationshipCachesFrom:]
  -[NSPersistentCacheRow releaseRelationshipCaches]
  -[NSPersistentCacheRow relatedObjectIDsForProperty:]
  -[NSPersistentCacheRow timestampForProperty:]
  -[NSPersistentCacheRow setRelatedObjectIDs:forProperty:options:andTimestamp:]
  -[NSPersistentCacheRow ancillaryOrderKeysForProperty:]
  -[NSPersistentCacheRow setAncillaryOrderKeys:forProperty:options:andTimestamp:]


NSFaultHandler : NSObject
  // class methods
  +[NSFaultHandler initialize]
  +[NSFaultHandler accessInstanceVariablesDirectly]

  // instance methods
  -[NSFaultHandler retainedFulfillAggregateFaultForObject:andRelationship:withContext:]
  -[NSFaultHandler initWithPersistenceStore:]
  -[NSFaultHandler fulfillFault:withContext:forIndex:]
  -[NSFaultHandler fulfillFault:withContext:error:]
  -[NSFaultHandler fulfillFault:withContext:]
  -[NSFaultHandler retainedOrderedFaultInformationForAggregateFaultForObject:andRelationship:withContext:error:]
  -[NSFaultHandler turnObject:intoFaultWithContext:]
  -[NSFaultHandler _fireFirstAndSecondLevelFaultsForObject:withContext:]


NSPersistentHistoryChange : NSObject <NSCopying>
 @property  long long changeID
 @property  NSManagedObjectID *changedObjectID
 @property  long long changeType
 @property  NSDictionary *tombstone
 @property  NSPersistentHistoryTransaction *transaction
 @property  NSSet *updatedProperties

  // class methods
  +[NSPersistentHistoryChange supportsSecureCoding]
  +[NSPersistentHistoryChange fetchRequest]
  +[NSPersistentHistoryChange entityDescription]
  +[NSPersistentHistoryChange entityDescriptionWithContext:]
  +[NSPersistentHistoryChange shortStringForChangeType:]
  +[NSPersistentHistoryChange stringForChangeType:]

  // instance methods
  -[NSPersistentHistoryChange isEqual:]
  -[NSPersistentHistoryChange copyWithZone:]
  -[NSPersistentHistoryChange encodeWithCoder:]
  -[NSPersistentHistoryChange initWithCoder:]
  -[NSPersistentHistoryChange changeType]
  -[NSPersistentHistoryChange changedObjectID]
  -[NSPersistentHistoryChange tombstone]
  -[NSPersistentHistoryChange transaction]
  -[NSPersistentHistoryChange changeID]
  -[NSPersistentHistoryChange updatedProperties]


_NSPersistentHistoryChange : NSPersistentHistoryChange <NSSecureCoding>
  // class methods
  +[_NSPersistentHistoryChange supportsSecureCoding]
  +[_NSPersistentHistoryChange _updatedPropertiesForEntity:andData:]
  +[_NSPersistentHistoryChange _propertyDataForEntity:withSetOfPropertyNames:]
  +[_NSPersistentHistoryChange _dataMaskForEntity:andDeltaMask:]
  +[_NSPersistentHistoryChange _mergeOldMask:andNewMask:]

  // instance methods
  -[_NSPersistentHistoryChange dealloc]
  -[_NSPersistentHistoryChange encodeWithCoder:]
  -[_NSPersistentHistoryChange initWithCoder:]
  -[_NSPersistentHistoryChange changeType]
  -[_NSPersistentHistoryChange _setTransaction:]
  -[_NSPersistentHistoryChange changedObjectID]
  -[_NSPersistentHistoryChange tombstone]
  -[_NSPersistentHistoryChange transaction]
  -[_NSPersistentHistoryChange _backingObjectID]
  -[_NSPersistentHistoryChange initWithDictionary:andChangeObjectID:]
  -[_NSPersistentHistoryChange changeID]
  -[_NSPersistentHistoryChange updatedProperties]


NSSQLRTreeIndex : NSSQLIndex
 @property  NSString *tableName

  // instance methods
  -[NSSQLRTreeIndex dealloc]
  -[NSSQLRTreeIndex tableName]
  -[NSSQLRTreeIndex initForIndexDescription:sqlEntity:]
  -[NSSQLRTreeIndex generateSQLStrings]
  -[NSSQLRTreeIndex generateStatementsForStore:]
  -[NSSQLRTreeIndex dropStatementsForStore:]
  -[NSSQLRTreeIndex bulkUpdateStatementsForStore:]


NSFetchedPropertyDescription : NSPropertyDescription
 @property  NSFetchRequest *fetchRequest

  // class methods
  +[NSFetchedPropertyDescription supportsSecureCoding]

  // instance methods
  -[NSFetchedPropertyDescription dealloc]
  -[NSFetchedPropertyDescription isEqual:]
  -[NSFetchedPropertyDescription copyWithZone:]
  -[NSFetchedPropertyDescription encodeWithCoder:]
  -[NSFetchedPropertyDescription initWithCoder:]
  -[NSFetchedPropertyDescription fetchRequest]
  -[NSFetchedPropertyDescription setReadOnly:]
  -[NSFetchedPropertyDescription isTransient]
  -[NSFetchedPropertyDescription _propertyType]
  -[NSFetchedPropertyDescription setFetchRequest:]
  -[NSFetchedPropertyDescription isReadOnly]
  -[NSFetchedPropertyDescription _createCachesAndOptimizeState]
  -[NSFetchedPropertyDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]
  -[NSFetchedPropertyDescription setTransient:]


NSXPCStoreMessageContext : NSObject
 @property  NSCoreDataXPCMessage *message
 @property  NSXPCStore *store
 @property  NSDictionary *result
 @property  NSError *error

  // instance methods
  -[NSXPCStoreMessageContext dealloc]
  -[NSXPCStoreMessageContext error]
  -[NSXPCStoreMessageContext setError:]
  -[NSXPCStoreMessageContext result]
  -[NSXPCStoreMessageContext setResult:]
  -[NSXPCStoreMessageContext store]
  -[NSXPCStoreMessageContext message]
  -[NSXPCStoreMessageContext initForMessage:store:]


NSFetchRequest : NSPersistentStoreRequest <NSSecureCoding, NSCoding>
 @property  NSEntityDescription *entity
 @property  NSString *entityName
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors
 @property  unsigned long fetchLimit
 @property  NSArray *affectedStores
 @property  unsigned long resultType
 @property  BOOL includesSubentities
 @property  BOOL includesPropertyValues
 @property  BOOL returnsObjectsAsFaults
 @property  NSArray *relationshipKeyPathsForPrefetching
 @property  BOOL includesPendingChanges
 @property  BOOL returnsDistinctResults
 @property  NSArray *propertiesToFetch
 @property  unsigned long fetchOffset
 @property  unsigned long fetchBatchSize
 @property  BOOL shouldRefreshRefetchedObjects
 @property  NSArray *propertiesToGroupBy
 @property  NSPredicate *havingPredicate

  // class methods
  +[NSFetchRequest initialize]
  +[NSFetchRequest supportsSecureCoding]
  +[NSFetchRequest accessInstanceVariablesDirectly]
  +[NSFetchRequest fetchRequestWithEntityName:]
  +[NSFetchRequest _newDenormalizedFetchProperties:]
  +[NSFetchRequest decodeFromXPCArchive:withContext:]

  // instance methods
  -[NSFetchRequest init]
  -[NSFetchRequest dealloc]
  -[NSFetchRequest isEqual:]
  -[NSFetchRequest copyWithZone:]
  -[NSFetchRequest encodeWithCoder:]
  -[NSFetchRequest initWithCoder:]
  -[NSFetchRequest setPredicate:]
  -[NSFetchRequest predicate]
  -[NSFetchRequest sortDescriptors]
  -[NSFetchRequest setSortDescriptors:]
  -[NSFetchRequest hasChanges]
  -[NSFetchRequest resultType]
  -[NSFetchRequest initWithEntityName:]
  -[NSFetchRequest setResultType:]
  -[NSFetchRequest fetchOffset]
  -[NSFetchRequest fetchLimit]
  -[NSFetchRequest propertiesToFetch]
  -[NSFetchRequest setEntity:]
  -[NSFetchRequest setReturnsObjectsAsFaults:]
  -[NSFetchRequest setRelationshipKeyPathsForPrefetching:]
  -[NSFetchRequest setFetchLimit:]
  -[NSFetchRequest setFetchOffset:]
  -[NSFetchRequest entityName]
  -[NSFetchRequest setPropertiesToFetch:]
  -[NSFetchRequest entity]
  -[NSFetchRequest setAllocationType:]
  -[NSFetchRequest setIncludesSubentities:]
  -[NSFetchRequest setIncludesPendingChanges:]
  -[NSFetchRequest setPropertiesToGroupBy:]
  -[NSFetchRequest setGroupByProperties:]
  -[NSFetchRequest setFetchBatchSize:]
  -[NSFetchRequest setIncludesPropertyValues:]
  -[NSFetchRequest groupByProperties]
  -[NSFetchRequest requestType]
  -[NSFetchRequest execute:]
  -[NSFetchRequest allocationSize]
  -[NSFetchRequest _isEditable]
  -[NSFetchRequest _setFlagsFromXPCEncoding:]
  -[NSFetchRequest setHavingPredicate:]
  -[NSFetchRequest _XPCEncodedFlags]
  -[NSFetchRequest havingPredicate]
  -[NSFetchRequest relationshipKeyPathsForPrefetching]
  -[NSFetchRequest fetchBatchSize]
  -[NSFetchRequest _newNormalizedFetchProperties:]
  -[NSFetchRequest propertiesToGroupBy]
  -[NSFetchRequest encodeForXPC]
  -[NSFetchRequest includesSubentities]
  -[NSFetchRequest _disablePersistentStoreResultCaching]
  -[NSFetchRequest allocationType]
  -[NSFetchRequest _resolveEntityWithContext:]
  -[NSFetchRequest setShouldRefreshRefetchedObjects:]
  -[NSFetchRequest includesPropertyValues]
  -[NSFetchRequest returnsDistinctResults]
  -[NSFetchRequest setAffectedStores:]
  -[NSFetchRequest affectedStores]
  -[NSFetchRequest returnsObjectsAsFaults]
  -[NSFetchRequest setReturnsDistinctResults:]
  -[NSFetchRequest shouldRefreshRefetchedObjects]
  -[NSFetchRequest _setDisablePersistentStoreResultCaching:]
  -[NSFetchRequest _throwIfNotEditable]
  -[NSFetchRequest _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:uniquedMappings:entities:]
  -[NSFetchRequest includesPendingChanges]
  -[NSFetchRequest _newValidatedProperties:groupBy:error:]
  -[NSFetchRequest setAllocationSize:]
  -[NSFetchRequest _bindExpressionDescriptionProperties:]
  -[NSFetchRequest _isCachingFetchRequest]
  -[NSFetchRequest _setAsyncResultHandle:]
  -[NSFetchRequest _asyncResultHandle]
  -[NSFetchRequest _copyForDirtyContext]
  -[NSFetchRequest _incrementInUseCounter]
  -[NSFetchRequest stores]


CDDCloudKitScheduleActivityMessage : CDDCloudKitMessage
 @property  unsigned long activityType
 @property  NSString *storePath

  // class methods
  +[CDDCloudKitScheduleActivityMessage supportsSecureCoding]

  // instance methods
  -[CDDCloudKitScheduleActivityMessage dealloc]
  -[CDDCloudKitScheduleActivityMessage encodeWithCoder:]
  -[CDDCloudKitScheduleActivityMessage initWithCoder:]
  -[CDDCloudKitScheduleActivityMessage activityType]
  -[CDDCloudKitScheduleActivityMessage initWithActivityType:forStoreWithPath:]
  -[CDDCloudKitScheduleActivityMessage storePath]


NSXPCStoreNotificationObserver : NSObject
  // instance methods
  -[NSXPCStoreNotificationObserver dealloc]
  -[NSXPCStoreNotificationObserver .cxx_destruct]
  -[NSXPCStoreNotificationObserver setStore:]
  -[NSXPCStoreNotificationObserver _store]
  -[NSXPCStoreNotificationObserver initForObservationWithName:store:]


NSFetchRequestExpression : NSExpression /usr/lib/libcompression.dylib
 @property  NSExpression *requestExpression
 @property  NSExpression *contextExpression
 @property  BOOL countOnlyRequest

  // class methods
  +[NSFetchRequestExpression supportsSecureCoding]
  +[NSFetchRequestExpression expressionForFetch:context:countOnly:]

  // instance methods
  -[NSFetchRequestExpression dealloc]
  -[NSFetchRequestExpression isEqual:]
  -[NSFetchRequestExpression copyWithZone:]
  -[NSFetchRequestExpression encodeWithCoder:]
  -[NSFetchRequestExpression initWithCoder:]
  -[NSFetchRequestExpression expressionType]
  -[NSFetchRequestExpression expressionValueWithObject:context:]
  -[NSFetchRequestExpression predicateFormat]
  -[NSFetchRequestExpression acceptVisitor:flags:]
  -[NSFetchRequestExpression _expressionWithSubstitutionVariables:]
  -[NSFetchRequestExpression initForFetch:context:countOnly:]
  -[NSFetchRequestExpression _keypathsForDerivedPropertyValidation:]
  -[NSFetchRequestExpression isCountOnlyRequest]
  -[NSFetchRequestExpression requestExpression]
  -[NSFetchRequestExpression contextExpression]


NSJoin : NSObject <NSCoding, NSCopying>
  // class methods
  +[NSJoin joinWithSourceAttributeName:destinationAttributeName:]

  // instance methods
  -[NSJoin dealloc]
  -[NSJoin isEqual:]
  -[NSJoin copyWithZone:]
  -[NSJoin encodeWithCoder:]
  -[NSJoin initWithCoder:]
  -[NSJoin initWithSourceAttributeName:destinationAttributeName:]
  -[NSJoin sourceAttributeName]
  -[NSJoin destinationAttributeName]


NSKnownKeysMappingStrategy1 : NSKnownKeysMappingStrategy
  // class methods
  +[NSKnownKeysMappingStrategy1 alloc]
  +[NSKnownKeysMappingStrategy1 allocWithZone:]
  +[NSKnownKeysMappingStrategy1 initialize]
  +[NSKnownKeysMappingStrategy1 supportsSecureCoding]
  +[NSKnownKeysMappingStrategy1 accessInstanceVariablesDirectly]
  +[NSKnownKeysMappingStrategy1 classForKeyedUnarchiver]

  // instance methods
  -[NSKnownKeysMappingStrategy1 retainCount]
  -[NSKnownKeysMappingStrategy1 dealloc]
  -[NSKnownKeysMappingStrategy1 length]
  -[NSKnownKeysMappingStrategy1 isEqual:]
  -[NSKnownKeysMappingStrategy1 retain]
  -[NSKnownKeysMappingStrategy1 release]
  -[NSKnownKeysMappingStrategy1 _tryRetain]
  -[NSKnownKeysMappingStrategy1 _isDeallocating]
  -[NSKnownKeysMappingStrategy1 copyWithZone:]
  -[NSKnownKeysMappingStrategy1 allKeys]
  -[NSKnownKeysMappingStrategy1 countByEnumeratingWithState:objects:count:]
  -[NSKnownKeysMappingStrategy1 encodeWithCoder:]
  -[NSKnownKeysMappingStrategy1 initWithCoder:]
  -[NSKnownKeysMappingStrategy1 classForCoder]
  -[NSKnownKeysMappingStrategy1 indexForKey:]
  -[NSKnownKeysMappingStrategy1 keys]
  -[NSKnownKeysMappingStrategy1 classForArchiver]
  -[NSKnownKeysMappingStrategy1 initForKeys:]
  -[NSKnownKeysMappingStrategy1 initForKeys:count:]
  -[NSKnownKeysMappingStrategy1 fastIndexForKnownKey:]
  -[NSKnownKeysMappingStrategy1 _makeBranchTableForKeys:count:]
  -[NSKnownKeysMappingStrategy1 _coreCreationForKeys:count:]
  -[NSKnownKeysMappingStrategy1 _coreDealloc:]


NSKnownKeysMappingStrategy2 : NSKnownKeysMappingStrategy1
  // instance methods
  -[NSKnownKeysMappingStrategy2 init]
  -[NSKnownKeysMappingStrategy2 retainCount]
  -[NSKnownKeysMappingStrategy2 dealloc]
  -[NSKnownKeysMappingStrategy2 retain]
  -[NSKnownKeysMappingStrategy2 release]
  -[NSKnownKeysMappingStrategy2 _tryRetain]
  -[NSKnownKeysMappingStrategy2 _isDeallocating]
  -[NSKnownKeysMappingStrategy2 initForKeys:]
  -[NSKnownKeysMappingStrategy2 _setupForKeys:count:table:inData:]
  -[NSKnownKeysMappingStrategy2 initForKeys:count:]


NSKnownKeysDictionary1 : NSKnownKeysDictionary
  // class methods
  +[NSKnownKeysDictionary1 alloc]
  +[NSKnownKeysDictionary1 init]
  +[NSKnownKeysDictionary1 allocWithZone:]
  +[NSKnownKeysDictionary1 initWithCapacity:]
  +[NSKnownKeysDictionary1 supportsSecureCoding]
  +[NSKnownKeysDictionary1 initWithCoder:]
  +[NSKnownKeysDictionary1 initWithObjects:forKeys:count:]
  +[NSKnownKeysDictionary1 initWithDictionary:copyItems:]
  +[NSKnownKeysDictionary1 initWithDictionary:]
  +[NSKnownKeysDictionary1 accessInstanceVariablesDirectly]
  +[NSKnownKeysDictionary1 classForKeyedUnarchiver]
  +[NSKnownKeysDictionary1 initForKeys:]
  +[NSKnownKeysDictionary1 initWithSearchStrategy:]

  // instance methods
  -[NSKnownKeysDictionary1 retainCount]
  -[NSKnownKeysDictionary1 dealloc]
  -[NSKnownKeysDictionary1 retain]
  -[NSKnownKeysDictionary1 release]
  -[NSKnownKeysDictionary1 _tryRetain]
  -[NSKnownKeysDictionary1 _isDeallocating]
  -[NSKnownKeysDictionary1 copyWithZone:]
  -[NSKnownKeysDictionary1 mutableCopyWithZone:]
  -[NSKnownKeysDictionary1 count]
  -[NSKnownKeysDictionary1 objectEnumerator]
  -[NSKnownKeysDictionary1 getObjects:]
  -[NSKnownKeysDictionary1 allKeys]
  -[NSKnownKeysDictionary1 countByEnumeratingWithState:objects:count:]
  -[NSKnownKeysDictionary1 removeAllObjects]
  -[NSKnownKeysDictionary1 objectForKey:]
  -[NSKnownKeysDictionary1 getObjects:andKeys:]
  -[NSKnownKeysDictionary1 removeObjectForKey:]
  -[NSKnownKeysDictionary1 isEqualToDictionary:]
  -[NSKnownKeysDictionary1 keyEnumerator]
  -[NSKnownKeysDictionary1 encodeWithCoder:]
  -[NSKnownKeysDictionary1 classForCoder]
  -[NSKnownKeysDictionary1 setValues:]
  -[NSKnownKeysDictionary1 values]
  -[NSKnownKeysDictionary1 allValues]
  -[NSKnownKeysDictionary1 setObject:forKey:]
  -[NSKnownKeysDictionary1 getKeys:]
  -[NSKnownKeysDictionary1 addEntriesFromDictionary:]
  -[NSKnownKeysDictionary1 classForArchiver]
  -[NSKnownKeysDictionary1 valueAtIndex:]
  -[NSKnownKeysDictionary1 mapping]
  -[NSKnownKeysDictionary1 _setValues:retain:]
  -[NSKnownKeysDictionary1 knownKeyValuesPointer]
  -[NSKnownKeysDictionary1 _countByEnumeratingWithState:objects:count:forKeys:]
  -[NSKnownKeysDictionary1 _valueCountByEnumeratingWithState:objects:count:]
  -[NSKnownKeysDictionary1 _recount]
  -[NSKnownKeysDictionary1 setValue:atIndex:]


_NSKnownKeysEnumerator : NSEnumerator /usr/lib/libicucore.A.dylib
  // instance methods
  -[_NSKnownKeysEnumerator dealloc]
  -[_NSKnownKeysEnumerator _invalidate]
  -[_NSKnownKeysEnumerator nextObject]
  -[_NSKnownKeysEnumerator initWithArray:forTarget:withReferenceValues:andRange:andCopyItems:]


NSKnownKeysDictionary2 : NSKnownKeysDictionary1
  // class methods
  +[NSKnownKeysDictionary2 newInstanceWithSearchStrategy:inData:]


NSKnownKeysMappingStrategy : NSObject <NSSecureCoding, NSFastEnumeration>
 @property  unsigned long length
 @property  ^@ keys

  // class methods
  +[NSKnownKeysMappingStrategy alloc]
  +[NSKnownKeysMappingStrategy allocWithZone:]
  +[NSKnownKeysMappingStrategy supportsSecureCoding]

  // instance methods
  -[NSKnownKeysMappingStrategy length]
  -[NSKnownKeysMappingStrategy countByEnumeratingWithState:objects:count:]
  -[NSKnownKeysMappingStrategy encodeWithCoder:]
  -[NSKnownKeysMappingStrategy initWithCoder:]
  -[NSKnownKeysMappingStrategy indexForKey:]
  -[NSKnownKeysMappingStrategy keys]
  -[NSKnownKeysMappingStrategy initForKeys:]
  -[NSKnownKeysMappingStrategy initForKeys:count:]
  -[NSKnownKeysMappingStrategy fastIndexForKnownKey:]


NSKnownKeysDictionary : NSMutableDictionary /usr/lib/libicucore.A.dylib
 @property  NSKnownKeysMappingStrategy *mapping

  // class methods
  +[NSKnownKeysDictionary alloc]
  +[NSKnownKeysDictionary allocWithZone:]
  +[NSKnownKeysDictionary newInstanceWithSearchStrategy:inData:]

  // instance methods
  -[NSKnownKeysDictionary getObjects:]
  -[NSKnownKeysDictionary getObjects:andKeys:]
  -[NSKnownKeysDictionary setValues:]
  -[NSKnownKeysDictionary values]
  -[NSKnownKeysDictionary getKeys:]
  -[NSKnownKeysDictionary valueAtIndex:]
  -[NSKnownKeysDictionary mapping]
  -[NSKnownKeysDictionary initForKeys:]
  -[NSKnownKeysDictionary initWithSearchStrategy:]
  -[NSKnownKeysDictionary _setValues:retain:]
  -[NSKnownKeysDictionary setValue:atIndex:]


_NSOrderedSetDiff : NSObject
  // instance methods
  -[_NSOrderedSetDiff dealloc]
  -[_NSOrderedSetDiff initWithObject:]
  -[_NSOrderedSetDiff applyToSet:]


_NSOrderedSetDiffDelete : _NSOrderedSetDiff
  // instance methods
  -[_NSOrderedSetDiffDelete applyToSet:]


_NSOrderedSetDiffChange : _NSOrderedSetDiff
  // instance methods
  -[_NSOrderedSetDiffChange initWithObject:index:]


_NSOrderedSetDiffInsert : _NSOrderedSetDiffChange
  // instance methods
  -[_NSOrderedSetDiffInsert applyToSet:]


_NSOrderedSetDiffMove : _NSOrderedSetDiffChange
  // instance methods
  -[_NSOrderedSetDiffMove applyToSet:]


NSManagedObject : NSObject <NSFetchRequestResult>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSEntityDescription *entity
 @property  NSManagedObjectID *objectID
 @property  BOOL inserted
 @property  BOOL updated
 @property  BOOL deleted
 @property  BOOL hasChanges
 @property  BOOL hasPersistentChangedValues
 @property  BOOL fault
 @property  unsigned long faultingState

  // class methods
  +[NSManagedObject alloc]
  +[NSManagedObject retain]
  +[NSManagedObject release]
  +[NSManagedObject allocWithZone:]
  +[NSManagedObject initialize]
  +[NSManagedObject resolveInstanceMethod:]
  +[NSManagedObject resolveClassMethod:]
  +[NSManagedObject automaticallyNotifiesObserversForKey:]
  +[NSManagedObject fetchRequest]
  +[NSManagedObject entityName]
  +[NSManagedObject entity]
  +[NSManagedObject _retain_1]
  +[NSManagedObject _release_1]
  +[NSManagedObject allocWithEntity:]
  +[NSManagedObject _entityDeallocated]
  +[NSManagedObject _isGeneratedClass]
  +[NSManagedObject classForEntity:]
  +[NSManagedObject _PFPlaceHolderSingleton]
  +[NSManagedObject alloc_10_4]
  +[NSManagedObject allocWithZone_10_4:]
  +[NSManagedObject _transientPropertiesChangesMask__]
  +[NSManagedObject _PFPlaceHolderSingleton_core]
  +[NSManagedObject contextShouldIgnoreUnmodeledPropertyChanges]
  +[NSManagedObject _useFastValidationMethod]
  +[NSManagedObject _isGeneratedClass_1]
  +[NSManagedObject _PFMOClassFactoryData]
  +[NSManagedObject allocBatch:withEntity:count:]
  +[NSManagedObject _initializeAccessorStubs]
  +[NSManagedObject _initializePrimitiveAccessorStubs]
  +[NSManagedObject batchAllocateWithEntity:insertIntoManagedObjectContext:count:]
  +[NSManagedObject _hasOverriddenAwake]

  // instance methods
  -[NSManagedObject init]
  -[NSManagedObject retainCount]
  -[NSManagedObject dealloc]
  -[NSManagedObject isEqual:]
  -[NSManagedObject respondsToSelector:]
  -[NSManagedObject retain]
  -[NSManagedObject release]
  -[NSManagedObject _tryRetain]
  -[NSManagedObject _isDeallocating]
  -[NSManagedObject isFault]
  -[NSManagedObject methodForSelector:]
  -[NSManagedObject methodSignatureForSelector:]
  -[NSManagedObject setValue:forKey:]
  -[NSManagedObject setObservationInfo:]
  -[NSManagedObject willChangeValueForKey:]
  -[NSManagedObject didChangeValueForKey:]
  -[NSManagedObject valueForKey:]
  -[NSManagedObject valueForUndefinedKey:]
  -[NSManagedObject setValue:forUndefinedKey:]
  -[NSManagedObject setNilValueForKey:]
  -[NSManagedObject validateValue:forKey:error:]
  -[NSManagedObject mutableArrayValueForKey:]
  -[NSManagedObject mutableOrderedSetValueForKey:]
  -[NSManagedObject mutableSetValueForKey:]
  -[NSManagedObject dictionaryWithValuesForKeys:]
  -[NSManagedObject setValuesForKeysWithDictionary:]
  -[NSManagedObject willChange:valuesAtIndexes:forKey:]
  -[NSManagedObject didChange:valuesAtIndexes:forKey:]
  -[NSManagedObject willChangeValueForKey:withSetMutation:usingObjects:]
  -[NSManagedObject didChangeValueForKey:withSetMutation:usingObjects:]
  -[NSManagedObject observationInfo]
  -[NSManagedObject _implicitObservationInfo]
  -[NSManagedObject implementsSelector:]
  -[NSManagedObject hasChanges]
  -[NSManagedObject _stateFlags]
  -[NSManagedObject objectID]
  -[NSManagedObject initWithContext:]
  -[NSManagedObject entity]
  -[NSManagedObject managedObjectContext]
  -[NSManagedObject initWithEntity:insertIntoManagedObjectContext:]
  -[NSManagedObject _hasRetainedStoreResources__]
  -[NSManagedObject _setHasRetainedStoreResources__:]
  -[NSManagedObject primitiveValueForKey:]
  -[NSManagedObject _setVersionReference__:]
  -[NSManagedObject willAccessValueForKey:]
  -[NSManagedObject isDeleted]
  -[NSManagedObject isInserted]
  -[NSManagedObject _faultHandler__]
  -[NSManagedObject _commitPhotoshoperyForRelationshipAtIndex:newValue:]
  -[NSManagedObject _generateErrorWithCode:andMessage:forKey:andValue:additionalDetail:]
  -[NSManagedObject _isValidRelationshipDestination__]
  -[NSManagedObject willFireFault]
  -[NSManagedObject didFireFault]
  -[NSManagedObject awakeFromFetch]
  -[NSManagedObject willTurnIntoFault]
  -[NSManagedObject _setSuppressingChangeNotifications__:]
  -[NSManagedObject _clearRawPropertiesWithHint:]
  -[NSManagedObject didTurnIntoFault]
  -[NSManagedObject _isUnprocessedDeletion__]
  -[NSManagedObject _isPendingDeletion__]
  -[NSManagedObject _setSuppressingKVO__:]
  -[NSManagedObject _setGenericValue:forKey:withIndex:flags:]
  -[NSManagedObject _genericValueForKey:withIndex:flags:]
  -[NSManagedObject _descriptionValues]
  -[NSManagedObject _isPendingUpdate__]
  -[NSManagedObject _isUnprocessedUpdate__]
  -[NSManagedObject didAccessValueForKey:]
  -[NSManagedObject _validateValue:forProperty:andKey:withIndex:error:]
  -[NSManagedObject _chainNewError:toOriginalErrorDoublePointer:]
  -[NSManagedObject _validateForSave:]
  -[NSManagedObject _genericMutableSetValueForKey:withIndex:flags:]
  -[NSManagedObject _genericMutableOrderedSetValueForKey:withIndex:flags:]
  -[NSManagedObject _updateToManyRelationship:from:to:with:]
  -[NSManagedObject _allProperties__]
  -[NSManagedObject _originalSnapshot__]
  -[NSManagedObject _newPersistentPropertiesWithRelationshipFaultsIntact__]
  -[NSManagedObject _persistentProperties__]
  -[NSManagedObject _reservedCurrentEventSnapshot]
  -[NSManagedObject _batch_release__]
  -[NSManagedObject isUpdated]
  -[NSManagedObject hasFaultForRelationshipNamed:]
  -[NSManagedObject awakeFromInsert]
  -[NSManagedObject awakeFromSnapshotEvents:]
  -[NSManagedObject prepareForDeletion]
  -[NSManagedObject willSave]
  -[NSManagedObject didSave]
  -[NSManagedObject validateForDelete:]
  -[NSManagedObject validateForInsert:]
  -[NSManagedObject validateForUpdate:]
  -[NSManagedObject setPrimitiveValue:forKey:]
  -[NSManagedObject dictionaryWithPropertyValues]
  -[NSManagedObject committedValuesForKeys:]
  -[NSManagedObject changedValues]
  -[NSManagedObject faultingState]
  -[NSManagedObject changedValuesForCurrentEvent]
  -[NSManagedObject hasPersistentChangedValues]
  -[NSManagedObject objectIDsForRelationshipNamed:]
  -[NSManagedObject bindableObjectPublisher]
  -[NSManagedObject setBindableObjectPublisher:]
  -[NSManagedObject willRefresh:]
  -[NSManagedObject didRefresh:]
  -[NSManagedObject _lastSnapshot__]
  -[NSManagedObject _calculateDiffsBetweenOrderedSet:andOrderedSet:]
  -[NSManagedObject _newPropertiesForRetainedTypes:andCopiedTypes:preserveFaults:]
  -[NSManagedObject _newPersistentPropertiesForConflictRecordFaultsIntact__]
  -[NSManagedObject _transientProperties__]
  -[NSManagedObject _isKindOfEntity:]
  -[NSManagedObject _excludeObject:fromPropertyWithKey:andIndex:]
  -[NSManagedObject _includeObject:intoPropertyWithKey:andIndex:]
  -[NSManagedObject _maintainInverseRelationship:forProperty:oldDestination:newDestination:]
  -[NSManagedObject _maintainInverseRelationship:forProperty:forChange:onSet:]
  -[NSManagedObject _propagateDelete:]
  -[NSManagedObject _generateErrorDetailForKey:withValue:]
  -[NSManagedObject _substituteEntityAndProperty:inString:]
  -[NSManagedObject _validatePropertiesWithError:]
  -[NSManagedObject diffOrderedSets:::::::]
  -[NSManagedObject _genericUpdateFromSnapshot:]
  -[NSManagedObject _newSetFromSet:byApplyingDiffs:]
  -[NSManagedObject _initWithEntity:withID:withHandler:withContext:]
  -[NSManagedObject wasForgotten]
  -[NSManagedObject _hasAnyObservers__]
  -[NSManagedObject _hasPendingChanges]
  -[NSManagedObject _clearPendingChanges__]
  -[NSManagedObject _hasUnprocessedChanges__]
  -[NSManagedObject _clearUnprocessedChanges__]
  -[NSManagedObject _clearAllChanges__]
  -[NSManagedObject _isSuppressingChangeNotifications__]
  -[NSManagedObject _isSuppressingKVO__]
  -[NSManagedObject _setPendingDeletion__:]
  -[NSManagedObject _isPendingInsertion__]
  -[NSManagedObject _setPendingInsertion__:]
  -[NSManagedObject _setPendingUpdate__:]
  -[NSManagedObject _setUnprocessedDeletion__:]
  -[NSManagedObject _isUnprocessedInsertion__]
  -[NSManagedObject _setUnprocessedInsertion__:]
  -[NSManagedObject _setUnprocessedUpdate__:]
  -[NSManagedObject _setLastSnapshot__:]
  -[NSManagedObject _nilOutReservedCurrentEventSnapshot__]
  -[NSManagedObject _changedValuesForCurrentEvent]
  -[NSManagedObject _versionReference__]
  -[NSManagedObject _setObjectID__:]
  -[NSManagedObject _setOriginalSnapshot__:]
  -[NSManagedObject _referenceQueue__]
  -[NSManagedObject _newChangedValuesForRefresh__]
  -[NSManagedObject _newNestedSaveChangedValuesForParent:]
  -[NSManagedObject _newSnapshotForUndo__]
  -[NSManagedObject _newAllPropertiesWithRelationshipFaultsIntact__]
  -[NSManagedObject _newCommittedSnapshotValues]
  -[NSManagedObject _changedTransientProperties__]
  -[NSManagedObject _didChangeValue:forRelationship:named:withInverse:]
  -[NSManagedObject _propagateDelete]
  -[NSManagedObject _prepropagateDeleteForMerge]
  -[NSManagedObject _updateFromSnapshot:]
  -[NSManagedObject _updateFromRefreshSnapshot:includingTransients:]
  -[NSManagedObject _updateFromUndoSnapshot:]
  -[NSManagedObject _orderKeysForRelationshipWithName__:]
  -[NSManagedObject _updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:error:]
  -[NSManagedObject _defaultValidation:error:]


PFCloudKitOperationBatch : NSObject
 @property  NSArray *records
 @property  NSSet *deletedRecordIDs
 @property  NSDictionary *recordTypeToDeletedRecordID
 @property  unsigned long sizeInBytes
 @property  unsigned long totalObjectCount

  // instance methods
  -[PFCloudKitOperationBatch init]
  -[PFCloudKitOperationBatch dealloc]
  -[PFCloudKitOperationBatch sizeInBytes]
  -[PFCloudKitOperationBatch records]
  -[PFCloudKitOperationBatch addRecord:]
  -[PFCloudKitOperationBatch addDeletedRecordID:forRecordOfType:]
  -[PFCloudKitOperationBatch totalObjectCount]
  -[PFCloudKitOperationBatch recordTypeToDeletedRecordID]
  -[PFCloudKitOperationBatch deletedRecordIDs]


_NSManagedObject_st : NSObject

NSManagedObjectContext : NSObject <NSCoding, NSLocking>
 @property  NSArray *_persistentStoresScope
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSManagedObjectContext *parentContext
 @property  NSString *name
 @property  NSUndoManager *undoManager
 @property  BOOL hasChanges
 @property  NSMutableDictionary *userInfo
 @property  unsigned long concurrencyType
 @property  NSSet *insertedObjects
 @property  NSSet *updatedObjects
 @property  NSSet *deletedObjects
 @property  NSSet *registeredObjects
 @property  BOOL propagatesDeletesAtEndOfEvent
 @property  BOOL retainsRegisteredObjects
 @property  BOOL shouldDeleteInaccessibleFaults
 @property  double stalenessInterval
 @property  id mergePolicy
 @property  NSQueryGenerationToken *queryGenerationToken
 @property  BOOL automaticallyMergesChangesFromParent
 @property  NSString *transactionAuthor

  // class methods
  +[NSManagedObjectContext alloc]
  +[NSManagedObjectContext allocWithZone:]
  +[NSManagedObjectContext initialize]
  +[NSManagedObjectContext new]
  +[NSManagedObjectContext accessInstanceVariablesDirectly]
  +[NSManagedObjectContext _handleError:withError:]
  +[NSManagedObjectContext _mergeChangesFromRemoteContextSave:intoContexts:]
  +[NSManagedObjectContext __Multithreading_Violation_AllThatIsLeftToUsIsHonor__]
  +[NSManagedObjectContext mergeChangesFromRemoteContextSave:intoContexts:]
  +[NSManagedObjectContext createFutureForFileAtURL:]

  // instance methods
  -[NSManagedObjectContext init]
  -[NSManagedObjectContext retainCount]
  -[NSManagedObjectContext dealloc]
  -[NSManagedObjectContext retain]
  -[NSManagedObjectContext release]
  -[NSManagedObjectContext _tryRetain]
  -[NSManagedObjectContext _isDeallocating]
  -[NSManagedObjectContext name]
  -[NSManagedObjectContext userInfo]
  -[NSManagedObjectContext encodeWithCoder:]
  -[NSManagedObjectContext initWithCoder:]
  -[NSManagedObjectContext lock]
  -[NSManagedObjectContext unlock]
  -[NSManagedObjectContext setName:]
  -[NSManagedObjectContext _delegate]
  -[NSManagedObjectContext observeValueForKeyPath:ofObject:change:context:]
  -[NSManagedObjectContext tryLock]
  -[NSManagedObjectContext performBlock:]
  -[NSManagedObjectContext reset]
  -[NSManagedObjectContext _processEndOfEventNotification:]
  -[NSManagedObjectContext undo]
  -[NSManagedObjectContext redo]
  -[NSManagedObjectContext hasChanges]
  -[NSManagedObjectContext rollback]
  -[NSManagedObjectContext insertedObjects]
  -[NSManagedObjectContext existingObjectWithID:error:]
  -[NSManagedObjectContext executeFetchRequest:error:]
  -[NSManagedObjectContext performWithOptions:andBlock:]
  -[NSManagedObjectContext save:]
  -[NSManagedObjectContext executeRequest:error:]
  -[NSManagedObjectContext performBlockAndWait:]
  -[NSManagedObjectContext countForFetchRequest:error:]
  -[NSManagedObjectContext initWithConcurrencyType:]
  -[NSManagedObjectContext setPersistentStoreCoordinator:]
  -[NSManagedObjectContext setMergePolicy:]
  -[NSManagedObjectContext setUndoManager:]
  -[NSManagedObjectContext persistentStoreCoordinator]
  -[NSManagedObjectContext refreshAllObjects]
  -[NSManagedObjectContext objectWithID:]
  -[NSManagedObjectContext insertObject:]
  -[NSManagedObjectContext _setDelegate:]
  -[NSManagedObjectContext isEditing]
  -[NSManagedObjectContext undoManager]
  -[NSManagedObjectContext setParentContext:]
  -[NSManagedObjectContext parentContext]
  -[NSManagedObjectContext _retainedObjectWithID:optionalHandler:withInlineStorage:]
  -[NSManagedObjectContext _unsafeName]
  -[NSManagedObjectContext _unsafeTransactionAuthor]
  -[NSManagedObjectContext _queryGenerationToken__]
  -[NSManagedObjectContext stalenessInterval]
  -[NSManagedObjectContext objectRegisteredForID:]
  -[NSManagedObjectContext newValuesForObjectWithID:withContext:error:]
  -[NSManagedObjectContext managedObjectContextDidRegisterObjectsWithIDs:generation:]
  -[NSManagedObjectContext managedObjectContextDidUnregisterObjectsWithIDs:generation:]
  -[NSManagedObjectContext executeRequest:withContext:error:]
  -[NSManagedObjectContext newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSManagedObjectContext obtainPermanentIDsForObjects:error:]
  -[NSManagedObjectContext _retainedObjectWithID:]
  -[NSManagedObjectContext _setXPCServerContext:]
  -[NSManagedObjectContext setTransactionAuthor:]
  -[NSManagedObjectContext setQueryGenerationFromToken:error:]
  -[NSManagedObjectContext detectConflictsForObject:]
  -[NSManagedObjectContext deleteObject:]
  -[NSManagedObjectContext _changeIDsForManagedObjects:toIDs:]
  -[NSManagedObjectContext processPendingChanges]
  -[NSManagedObjectContext _newSaveRequestForCurrentState]
  -[NSManagedObjectContext setStalenessInterval:]
  -[NSManagedObjectContext _retainedCurrentQueryGeneration:]
  -[NSManagedObjectContext updatedObjects]
  -[NSManagedObjectContext deletedObjects]
  -[NSManagedObjectContext assignObject:toPersistentStore:]
  -[NSManagedObjectContext _allowAncillaryEntities]
  -[NSManagedObjectContext _hasIDMappings]
  -[NSManagedObjectContext _mappedForParentStoreID:]
  -[NSManagedObjectContext queryGenerationToken]
  -[NSManagedObjectContext concurrencyType]
  -[NSManagedObjectContext _registerAsyncReferenceCallback]
  -[NSManagedObjectContext _processReferenceQueue:]
  -[NSManagedObjectContext refreshObject:mergeChanges:]
  -[NSManagedObjectContext _disableChangeNotifications]
  -[NSManagedObjectContext lockObjectStore]
  -[NSManagedObjectContext _parentStore]
  -[NSManagedObjectContext unlockObjectStore]
  -[NSManagedObjectContext _enableChangeNotifications]
  -[NSManagedObjectContext _newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:]
  -[NSManagedObjectContext shouldHandleInaccessibleFault:forObjectID:triggeredByProperty:]
  -[NSManagedObjectContext _forceRegisterLostFault:]
  -[NSManagedObjectContext _handleError:withError:]
  -[NSManagedObjectContext _implicitObservationInfoForEntity:forResultingClass:]
  -[NSManagedObjectContext _setPersistentStoreCoordinator:]
  -[NSManagedObjectContext _setRetainsRegisteredObjects:]
  -[NSManagedObjectContext shouldDeleteInaccessibleFaults]
  -[NSManagedObjectContext discardEditing]
  -[NSManagedObjectContext _forgetObject:propagateToObjectStore:removeFromRegistry:]
  -[NSManagedObjectContext _resetAllChanges]
  -[NSManagedObjectContext _postObjectsDidChangeNotificationWithUserInfo:]
  -[NSManagedObjectContext _setQueryGenerationFromToken:error:]
  -[NSManagedObjectContext assertOnImproperDealloc]
  -[NSManagedObjectContext _unregisterForNotifications]
  -[NSManagedObjectContext _dispose:]
  -[NSManagedObjectContext _dealloc__]
  -[NSManagedObjectContext _stopObservingUndoManagerNotifications]
  -[NSManagedObjectContext _startObservingUndoManagerNotifications]
  -[NSManagedObjectContext _setUndoManager:]
  -[NSManagedObjectContext _processRecentChanges:]
  -[NSManagedObjectContext _retainedRegisteredObjects]
  -[NSManagedObjectContext _ignoringChangeNotifications]
  -[NSManagedObjectContext _insertObjectWithGlobalID:globalID:]
  -[NSManagedObjectContext _registerClearStateWithUndoManager]
  -[NSManagedObjectContext _establishEventSnapshotsForObject:]
  -[NSManagedObjectContext _enqueueEndOfEventNotification]
  -[NSManagedObjectContext _parentObtainPermanentIDsForObjects:context:error:]
  -[NSManagedObjectContext _persistentStoresScope]
  -[NSManagedObjectContext _prepareForPushChanges:]
  -[NSManagedObjectContext _doPreSaveConstraintChecksForObjects:error:]
  -[NSManagedObjectContext _generateOptLockExceptionForConstraintFailure:]
  -[NSManagedObjectContext _informParentStore:ofInterestInObjects:]
  -[NSManagedObjectContext mergePolicy]
  -[NSManagedObjectContext _advanceQueryGenerationForSave]
  -[NSManagedObjectContext _thereIsNoSadnessLikeTheDeathOfOptimism]
  -[NSManagedObjectContext _didSaveChanges]
  -[NSManagedObjectContext _retainedObjectWithID:error:]
  -[NSManagedObjectContext _setStalenessInterval:]
  -[NSManagedObjectContext _executeAsynchronousFetchRequest:]
  -[NSManagedObjectContext _attemptCoalesceChangesForFetch]
  -[NSManagedObjectContext _countWithNoChangesForRequest:error:]
  -[NSManagedObjectContext _countWithMergedChangesForRequest:possibleChanges:possibleDeletes:error:]
  -[NSManagedObjectContext _createStoreFetchRequestForFetchRequest:]
  -[NSManagedObjectContext propagatesDeletesAtEndOfEvent]
  -[NSManagedObjectContext setPropagatesDeletesAtEndOfEvent:]
  -[NSManagedObjectContext _committedSnapshotForObject:]
  -[NSManagedObjectContext _refaultObject:globalID:boolean:]
  -[NSManagedObjectContext _prepareUnprocessedDeletionAfterRefresh:]
  -[NSManagedObjectContext _initWithParentObjectStore:]
  -[NSManagedObjectContext _forceRemoveFromDeletedObjects:]
  -[NSManagedObjectContext _mergeRefreshObject:mergeChanges:withPersistentSnapshot:]
  -[NSManagedObjectContext _mergeRefreshEpilogueForObject:mergeChanges:]
  -[NSManagedObjectContext _mergeChangesFromDidSaveDictionary:usingObjectIDs:]
  -[NSManagedObjectContext registeredObjects]
  -[NSManagedObjectContext _registerForNotificationsWithCoordinator:]
  -[NSManagedObjectContext _setParentContext:]
  -[NSManagedObjectContext automaticallyMergesChangesFromParent]
  -[NSManagedObjectContext setAutomaticallyMergesChangesFromParent:]
  -[NSManagedObjectContext _changeTrackingToken__]
  -[NSManagedObjectContext _setAutomaticallyMergesChangesFromParent:]
  -[NSManagedObjectContext _automaticallyMergeChangesFromContextDidSaveNotification:]
  -[NSManagedObjectContext mergeChangesFromContextDidSaveNotification:]
  -[NSManagedObjectContext commitEditing]
  -[NSManagedObjectContext _managedObjectContextEditor:didCommit:contextInfo:]
  -[NSManagedObjectContext _sendCommitEditingSelectorToTarget:sender:selector:flag:contextInfo:delayed:]
  -[NSManagedObjectContext commitEditingWithDelegate:didCommitSelector:contextInfo:]
  -[NSManagedObjectContext setRetainsRegisteredObjects:]
  -[NSManagedObjectContext retainsRegisteredObjects]
  -[NSManagedObjectContext setShouldDeleteInaccessibleFaults:]
  -[NSManagedObjectContext _youcreatedanNSManagedObjectContextOnthemainthreadandillegallypassedittoabackgroundthread]
  -[NSManagedObjectContext _checkObjectForExistenceAndCacheRow:]
  -[NSManagedObjectContext transactionAuthor]
  -[NSManagedObjectContext _setChangeTrackingTokenFromToken:error:]
  -[NSManagedObjectContext changeTrackingToken]
  -[NSManagedObjectContext objectDidBeginEditing:]
  -[NSManagedObjectContext objectDidEndEditing:]
  -[NSManagedObjectContext commitEditingAndReturnError:]
  -[NSManagedObjectContext _newUnchangedLockedObjects]
  -[NSManagedObjectContext _fetchLimitForRequest:]
  -[NSManagedObjectContext _unlimitRequest:]
  -[NSManagedObjectContext _registerObject:withID:]
  -[NSManagedObjectContext _informParentStore:noLongerInterestedInObjects:]
  -[NSManagedObjectContext _performCoordinatorActionAndWait:]
  -[NSManagedObjectContext _disposeObjects:count:notifyParent:]
  -[NSManagedObjectContext _clearUnprocessedUpdates]
  -[NSManagedObjectContext _clearUpdates]
  -[NSManagedObjectContext _clearUnprocessedInsertions]
  -[NSManagedObjectContext _clearInsertions]
  -[NSManagedObjectContext _clearUnprocessedDeletions]
  -[NSManagedObjectContext _clearDeletions]
  -[NSManagedObjectContext _clearLockedObjects]
  -[NSManagedObjectContext _clearRefreshedObjects]
  -[NSManagedObjectContext _incrementUndoTransactionID]
  -[NSManagedObjectContext _globalIDForObject:]
  -[NSManagedObjectContext _clearOriginalSnapshotForObject:]
  -[NSManagedObjectContext _validateObjects:forOperation:error:exhaustive:forSave:]
  -[NSManagedObjectContext _clearOriginalSnapshotAndInitializeRec:]
  -[NSManagedObjectContext _postContextDidSaveNotificationWithUserInfo:]
  -[NSManagedObjectContext _forgetObject:propagateToObjectStore:]
  -[NSManagedObjectContext _informParentStoreNoLongerInterestedInObjectIDs:generation:]
  -[NSManagedObjectContext _forceMoveInsertToUpdatedList:]
  -[NSManagedObjectContext _setPersistentStoresScope:]
  -[NSManagedObjectContext performFetch:error:]
  -[NSManagedObjectContext _globalIDsForObjects:]
  -[NSManagedObjectContext _batchRetainedObjects:forCount:withIDs:optionalHandler:withInlineStorage:]
  -[NSManagedObjectContext _validateDeletesUsingTable:withError:]
  -[NSManagedObjectContext _validateChangesForSave:]
  -[NSManagedObjectContext _informParentStoreOfInterestInObjectIDs:generation:]
  -[NSManagedObjectContext _retainedObjectsFromRemovedStore:]
  -[NSManagedObjectContext _stopsValidationAfterFirstError]
  -[NSManagedObjectContext _setStopsValidationAfterFirstError:]
  -[NSManagedObjectContext _debuggingOnly_localObjectForGlobalID:]
  -[NSManagedObjectContext _currentEventSnapshotForObject:]
  -[NSManagedObjectContext _growRegistrationCollectionForEntitySlot:toSize:]
  -[NSManagedObjectContext _setIsUbiquityImportContext:]
  -[NSManagedObjectContext _isImportContext]
  -[NSManagedObjectContext _isPreflightSaveInProgress]
  -[NSManagedObjectContext _setDisableDiscardEditing:]
  -[NSManagedObjectContext _isXPCServerContext]
  -[NSManagedObjectContext _disableDiscardEditing]
  -[NSManagedObjectContext _setPostSaveNotifications:]
  -[NSManagedObjectContext _postSaveNotifications]
  -[NSManagedObjectContext _persistentStoreDidUpdateAdditionalRowsWithNewVersions:]
  -[NSManagedObjectContext _setAllowAncillaryEntities:]
  -[NSManagedObjectContext objectWillChange:]
  -[NSManagedObjectContext _undoInsertions:]
  -[NSManagedObjectContext _registerUndoForOperation:withObjects:withExtraArguments:]
  -[NSManagedObjectContext _undoDeletionsMovedToUpdates:]
  -[NSManagedObjectContext _createAndPostChangeNotification:deletions:updates:refreshes:deferrals:wasMerge:]
  -[NSManagedObjectContext _undoDeletions:]
  -[NSManagedObjectContext _undoUpdates:]
  -[NSManagedObjectContext _clearChangedThisTransaction:]
  -[NSManagedObjectContext _postRefreshedObjectsNotificationAndClearList]
  -[NSManagedObjectContext _updateUnprocessedOwnDestinations:]
  -[NSManagedObjectContext _propagatePendingDeletesAtEndOfEvent:]
  -[NSManagedObjectContext _processPendingDeletions:withInsertions:withUpdates:withNewlyForgottenList:withRemovedChangedObjects:]
  -[NSManagedObjectContext _processPendingInsertions:withDeletions:withUpdates:]
  -[NSManagedObjectContext _processPendingUpdates:]
  -[NSManagedObjectContext _registerUndoForModifiedObjects:]
  -[NSManagedObjectContext _registerUndoForInsertedObjects:]
  -[NSManagedObjectContext _registerUndoForDeletedObjects:withDeletedChanges:]
  -[NSManagedObjectContext _updateUndoTransactionForThisEvent:withDeletions:withUpdates:]
  -[NSManagedObjectContext _processRecentlyForgottenObjects:]
  -[NSManagedObjectContext _postContextDidMergeChangesNotificationWithUserInfo:]
  -[NSManagedObjectContext _processDeletedObjects:]
  -[NSManagedObjectContext _prefetchObjectsForDeletePropagation:]
  -[NSManagedObjectContext _propagateDeletesUsingTable:]
  -[NSManagedObjectContext _forceInsertionForObject:]
  -[NSManagedObjectContext _undoManagerCheckpoint:]
  -[NSManagedObjectContext _noop:]
  -[NSManagedObjectContext _processObjectStoreChanges:]
  -[NSManagedObjectContext _addObjectIDsInsertUpdatedByDATriggers:]
  -[NSManagedObjectContext _addObjectIDsUpdatedByDATriggers:]
  -[NSManagedObjectContext _addObjectIDsUpdatedByTriggers:]
  -[NSManagedObjectContext _processNotificationQueue]
  -[NSManagedObjectContext _storeConfigurationChanged:]
  -[NSManagedObjectContext _sendOrEnqueueNotification:selector:]
  -[NSManagedObjectContext _processChangedStoreConfigurationNotification:]
  -[NSManagedObjectContext _registerMutatedObjectIDsNotifications]
  -[NSManagedObjectContext _objectsChangedInStore:]
  -[NSManagedObjectContext setShouldRefreshAfterSave:]
  -[NSManagedObjectContext shouldRefreshAfterSave]
  -[NSManagedObjectContext setShouldPerformSecureOperation:]
  -[NSManagedObjectContext shouldPerformSecureOperation]
  -[NSManagedObjectContext performBlockWithResult:]
  -[NSManagedObjectContext _orderedSetWithResultsFromFetchRequest:]
  -[NSManagedObjectContext _stopConflictDetectionForObject:]
  -[NSManagedObjectContext _mergeChangesFromRemoteContextSave:]
  -[NSManagedObjectContext _copyChildObject:toParentObject:fromChildContext:]
  -[NSManagedObjectContext _parentObjectsForFetchRequest:inContext:error:]
  -[NSManagedObjectContext _parentProcessSaveRequest:inContext:error:]
  -[NSManagedObjectContext _allOrderKeysForDestination:inRelationship:error:]
  -[NSManagedObjectContext _orderKeysForRelationshipWithName__:onObjectWithID:]
  -[NSManagedObjectContext _updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:]
  -[NSManagedObjectContext evictFuture:withError:]


_PFManagedObjectReferenceQueue : NSObject
  // instance methods
  -[_PFManagedObjectReferenceQueue retainCount]
  -[_PFManagedObjectReferenceQueue dealloc]
  -[_PFManagedObjectReferenceQueue retain]
  -[_PFManagedObjectReferenceQueue release]
  -[_PFManagedObjectReferenceQueue _tryRetain]
  -[_PFManagedObjectReferenceQueue _isDeallocating]
  -[_PFManagedObjectReferenceQueue finalize]
  -[_PFManagedObjectReferenceQueue _processReferenceQueue:]
  -[_PFManagedObjectReferenceQueue _queueForDealloc:]
  -[_PFManagedObjectReferenceQueue _unregisterRunloopObservers]
  -[_PFManagedObjectReferenceQueue _contextDidDealloc]
  -[_PFManagedObjectReferenceQueue initForContext:]
  -[_PFManagedObjectReferenceQueue _queueCount]
  -[_PFManagedObjectReferenceQueue _signal]
  -[_PFManagedObjectReferenceQueue _queueBatchForDealloc:]


_PFTempNestedSnapshot : NSObject
  // instance methods
  -[_PFTempNestedSnapshot dealloc]
  -[_PFTempNestedSnapshot valueForKey:]
  -[_PFTempNestedSnapshot knownKeyValuesPointer]
  -[_PFTempNestedSnapshot _snapshot_]
  -[_PFTempNestedSnapshot _versionNumber]
  -[_PFTempNestedSnapshot initWithOwnedKKsD:andVersion:]


NSQueryGenerationToken : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[NSQueryGenerationToken initialize]
  +[NSQueryGenerationToken supportsSecureCoding]
  +[NSQueryGenerationToken currentQueryGenerationToken]
  +[NSQueryGenerationToken unpinnedQueryGenerationToken]
  +[NSQueryGenerationToken nostoresQueryGenerationToken]

  // instance methods
  -[NSQueryGenerationToken isEqual:]
  -[NSQueryGenerationToken copyWithZone:]
  -[NSQueryGenerationToken _token]
  -[NSQueryGenerationToken encodeWithCoder:]
  -[NSQueryGenerationToken initWithCoder:]
  -[NSQueryGenerationToken _isEnabled]
  -[NSQueryGenerationToken persistentStoreCoordinator]
  -[NSQueryGenerationToken _generationalComponentForStore:]
  -[NSQueryGenerationToken _storeIdentifier]
  -[NSQueryGenerationToken _storesForRequestRoutingFrom:error:]
  -[NSQueryGenerationToken _isUnmoored]


_NSQueryGenerationToken : NSQueryGenerationToken
  // class methods
  +[_NSQueryGenerationToken supportsSecureCoding]
  +[_NSQueryGenerationToken identifierIsForNonGenerationalStore:]

  // instance methods
  -[_NSQueryGenerationToken dealloc]
  -[_NSQueryGenerationToken isEqual:]
  -[_NSQueryGenerationToken retain]
  -[_NSQueryGenerationToken release]
  -[_NSQueryGenerationToken copyWithZone:]
  -[_NSQueryGenerationToken _token]
  -[_NSQueryGenerationToken encodeWithCoder:]
  -[_NSQueryGenerationToken initWithCoder:]
  -[_NSQueryGenerationToken persistentStoreCoordinator]
  -[_NSQueryGenerationToken _generationalComponentForStore:]
  -[_NSQueryGenerationToken initWithValue:store:]
  -[_NSQueryGenerationToken _retainedPersistentStore]
  -[_NSQueryGenerationToken _storeIdentifier]
  -[_NSQueryGenerationToken _initWithValue:singleton:]
  -[_NSQueryGenerationToken _storesForRequestRoutingFrom:error:]
  -[_NSQueryGenerationToken initWithValue:store:freeValueOnDealloc:]
  -[_NSQueryGenerationToken _expectedStores]
  -[_NSQueryGenerationToken _makeConcrete:]
  -[_NSQueryGenerationToken _moor:error:]
  -[_NSQueryGenerationToken initWithCompoundValue:]
  -[_NSQueryGenerationToken initForNonGenerationalStore:]
  -[_NSQueryGenerationToken isUnmoored]
  -[_NSQueryGenerationToken _setIsUnmoored:]
  -[_NSQueryGenerationToken _setFreeValue:]
  -[_NSQueryGenerationToken _setPersistentStoreReference:]


_NSXPCQueryGenerationToken : _NSQueryGenerationToken <NSCoding, NSSecureCoding>
  // class methods
  +[_NSXPCQueryGenerationToken supportsSecureCoding]

  // instance methods
  -[_NSXPCQueryGenerationToken initWithCoder:]


NSManagedObjectID : NSObject <NSFetchRequestResult, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSEntityDescription *entity
 @property  NSPersistentStore *persistentStore
 @property  BOOL temporaryID

  // class methods
  +[NSManagedObjectID initialize]
  +[NSManagedObjectID accessInstanceVariablesDirectly]
  +[NSManagedObjectID version]
  +[NSManagedObjectID _newArchiveForScalarObjectIDs:]
  +[NSManagedObjectID unarchivedScalarObjectIDsFromData:withCoordinator:]

  // instance methods
  -[NSManagedObjectID _tryRetain]
  -[NSManagedObjectID _isDeallocating]
  -[NSManagedObjectID copyWithZone:]
  -[NSManagedObjectID compare:]
  -[NSManagedObjectID encodeWithCoder:]
  -[NSManagedObjectID initWithCoder:]
  -[NSManagedObjectID entityName]
  -[NSManagedObjectID entity]
  -[NSManagedObjectID URIRepresentation]
  -[NSManagedObjectID _storeInfo1]
  -[NSManagedObjectID _referenceData64]
  -[NSManagedObjectID persistentStore]
  -[NSManagedObjectID _storeIdentifier]
  -[NSManagedObjectID isTemporaryID]
  -[NSManagedObjectID _referenceData]
  -[NSManagedObjectID _retainedURIString]
  -[NSManagedObjectID _isPersistentStoreAlive]
  -[NSManagedObjectID _preferReferenceData64]
  -[NSManagedObjectID _temporaryIDCounter]
  -[NSManagedObjectID _compareArbitraryValue:toValue:]


NSManagedObjectModel : NSObject <NSSecureCoding, NSCoding, NSCopying, NSFastEnumeration>
 @property  long long _modelsReferenceIDOffset
 @property  NSDictionary *entitiesByName
 @property  NSArray *entities
 @property  NSArray *configurations
 @property  NSDictionary *localizationDictionary
 @property  NSDictionary *fetchRequestTemplatesByName
 @property  NSSet *versionIdentifiers
 @property  NSDictionary *entityVersionHashesByName

  // class methods
  +[NSManagedObjectModel supportsSecureCoding]
  +[NSManagedObjectModel mergedModelFromBundles:]
  +[NSManagedObjectModel _modelPathsFromBundles:]
  +[NSManagedObjectModel modelByMergingModels:]
  +[NSManagedObjectModel _deepCollectEntitiesInArray:entity:]
  +[NSManagedObjectModel modelByMergingModels:forStoreMetadata:]
  +[NSManagedObjectModel mergedModelFromBundles:forStoreMetadata:]
  +[NSManagedObjectModel versionsHashesForModelAtURL:error:]
  +[NSManagedObjectModel versionHashes:compatibleWithStoreMetadata:]
  +[NSManagedObjectModel _newModelFromOptimizedEncoding:error:]
  +[NSManagedObjectModel _debugOptimizedModelLayout]

  // instance methods
  -[NSManagedObjectModel init]
  -[NSManagedObjectModel dealloc]
  -[NSManagedObjectModel isEqual:]
  -[NSManagedObjectModel copyWithZone:]
  -[NSManagedObjectModel mutableCopyWithZone:]
  -[NSManagedObjectModel countByEnumeratingWithState:objects:count:]
  -[NSManagedObjectModel encodeWithCoder:]
  -[NSManagedObjectModel initWithCoder:]
  -[NSManagedObjectModel initWithContentsOfURL:]
  -[NSManagedObjectModel entities]
  -[NSManagedObjectModel isConfiguration:compatibleWithStoreMetadata:]
  -[NSManagedObjectModel versionIdentifiers]
  -[NSManagedObjectModel isEditable]
  -[NSManagedObjectModel configurations]
  -[NSManagedObjectModel entitiesForConfiguration:]
  -[NSManagedObjectModel entityVersionHashesByName]
  -[NSManagedObjectModel _entityForName:]
  -[NSManagedObjectModel entitiesByName]
  -[NSManagedObjectModel _setModelsReferenceIDOffset:]
  -[NSManagedObjectModel setEntities:]
  -[NSManagedObjectModel _setIsEditable:]
  -[NSManagedObjectModel versionHash]
  -[NSManagedObjectModel _modelsReferenceIDOffset]
  -[NSManagedObjectModel _throwIfNotEditable]
  -[NSManagedObjectModel _createCachesAndOptimizeState]
  -[NSManagedObjectModel _removeEntity:]
  -[NSManagedObjectModel _addEntity:]
  -[NSManagedObjectModel _flattenProperties]
  -[NSManagedObjectModel _isOptimizedForEncoding]
  -[NSManagedObjectModel _stripForMigration]
  -[NSManagedObjectModel _restoreValidation]
  -[NSManagedObjectModel _finalizeIndexes]
  -[NSManagedObjectModel _localizationPolicy]
  -[NSManagedObjectModel _hasEntityWithUniquenessConstraints]
  -[NSManagedObjectModel fetchRequestTemplatesByName]
  -[NSManagedObjectModel fetchRequestTemplateForName:]
  -[NSManagedObjectModel _setLocalizationPolicy:]
  -[NSManagedObjectModel _addEntities:toConfiguration:]
  -[NSManagedObjectModel setFetchRequestTemplate:forName:]
  -[NSManagedObjectModel _addVersionIdentifiers:]
  -[NSManagedObjectModel _modelForVersionHashes:]
  -[NSManagedObjectModel _initWithEntities:]
  -[NSManagedObjectModel _initWithContentsOfURL:options:]
  -[NSManagedObjectModel setEntities:forConfiguration:]
  -[NSManagedObjectModel setVersionIdentifiers:]
  -[NSManagedObjectModel localizationDictionary]
  -[NSManagedObjectModel setLocalizationDictionary:]
  -[NSManagedObjectModel _entityVersionHashesByNameInStyle:]
  -[NSManagedObjectModel _isConfiguration:inStyle:compatibleWithStoreMetadata:]
  -[NSManagedObjectModel fetchRequestFromTemplateWithName:substitutionVariables:]
  -[NSManagedObjectModel _setIsEditable:optimizationStyle:]
  -[NSManagedObjectModel _optimizedEncoding:]
  -[NSManagedObjectModel initWithContentsOfURL:forStoreMetadata:]
  -[NSManagedObjectModel initWithContentsOfOptimizedURL:]
  -[NSManagedObjectModel _entityVersionHashesDigestFrom:]
  -[NSManagedObjectModel _hasPrecomputedKeyOrder]
  -[NSManagedObjectModel _traverseTombstonesAndMark:]
  -[NSManagedObjectModel _markTombstones]
  -[NSManagedObjectModel _removeEntities:fromConfiguration:]
  -[NSManagedObjectModel _removeEntityNamed:]
  -[NSManagedObjectModel immutableCopy]
  -[NSManagedObjectModel _entityVersionHashesDigest]
  -[NSManagedObjectModel _precomputedKeysForEntity:]
  -[NSManagedObjectModel _skipUserInfoTombstones:]
  -[NSManagedObjectModel _isSkippingUserInfoTombstones]
  -[NSManagedObjectModel _unmarkTombstones]
  -[NSManagedObjectModel _configurationsByName]
  -[NSManagedObjectModel _sortedEntitiesForConfiguration:]
  -[NSManagedObjectModel _entitiesByVersionHash]
  -[NSManagedObjectModel _versionIdentifiersAsArray]


NSSQLUpdateColumnsIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLUpdateColumnsIntermediate dealloc]
  -[NSSQLUpdateColumnsIntermediate isDestination:compatibleDestinationFor:]
  -[NSSQLUpdateColumnsIntermediate generateSQLStringInContext:]
  -[NSSQLUpdateColumnsIntermediate isRelationship:compatibleWith:]
  -[NSSQLUpdateColumnsIntermediate _subqueryIntermediateForToManyKeypathWithComponents:withFunction:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLForKeypathWithComponents:onSQLEntity:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLForRelationshipUpdate:sourceRelationship:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLForAttributeUpdate:sourceAttribute:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLToUpdateProperty:fromMultiStepKeypathComponents:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLToUpdateProperty:fromSingleStepKeypath:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLForRelationshipUpdate:destination:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLForAttributeUpdate:value:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLToUpdateProperty:fromKeypath:inContext:]
  -[NSSQLUpdateColumnsIntermediate _generateSQLToUpdateProperty:fromSubquery:inContext:]
  -[NSSQLUpdateColumnsIntermediate initWithProperties:values:inScope:]
  -[NSSQLUpdateColumnsIntermediate isUpdateColumnsScoped]
  -[NSSQLUpdateColumnsIntermediate governingAliasForKeypathExpression:]


NSManagedObjectModelBundle : NSObject
  // instance methods
  -[NSManagedObjectModelBundle dealloc]
  -[NSManagedObjectModelBundle initWithPath:]
  -[NSManagedObjectModelBundle bundle]
  -[NSManagedObjectModelBundle currentVersion]
  -[NSManagedObjectModelBundle _modelForVersionHashes:]
  -[NSManagedObjectModelBundle optimizedVersionURL]
  -[NSManagedObjectModelBundle currentVersionURL]
  -[NSManagedObjectModelBundle versionInfoDictionary]
  -[NSManagedObjectModelBundle versionHashInfo]
  -[NSManagedObjectModelBundle urlForModelVersionWithName:]
  -[NSManagedObjectModelBundle modelVersions]
  -[NSManagedObjectModelBundle _modelForVersionHashes:inStyle:]


PFCloudKitStoreComparisonCache : PFStoreComparisonCache
  // instance methods
  -[PFCloudKitStoreComparisonCache init]
  -[PFCloudKitStoreComparisonCache dealloc]
  -[PFCloudKitStoreComparisonCache recordIDForObjectID:]
  -[PFCloudKitStoreComparisonCache cacheMirroredRelationship:withManagedObjectModel:]
  -[PFCloudKitStoreComparisonCache mirroredRelationshipForObject:relatedToObject:byRelationship:]
  -[PFCloudKitStoreComparisonCache mtmKeysForStore:]
  -[PFCloudKitStoreComparisonCache recordIDsRelatedToRecordID:byRelationshipNamed:inStore:]
  -[PFCloudKitStoreComparisonCache cacheRecordMetadata:]
  -[PFCloudKitStoreComparisonCache metadataForObjectWithID:]
  -[PFCloudKitStoreComparisonCache recordIdsForStore:]
  -[PFCloudKitStoreComparisonCache objectIDForRecordID:inStore:]


NSMappedObjectStore : NSPersistentStore
  // class methods
  +[NSMappedObjectStore metadataForPersistentStoreWithURL:options:error:]
  +[NSMappedObjectStore setMetadata:forPersistentStoreWithURL:options:error:]

  // instance methods
  -[NSMappedObjectStore init]
  -[NSMappedObjectStore dealloc]
  -[NSMappedObjectStore identifier]
  -[NSMappedObjectStore dataForKey:]
  -[NSMappedObjectStore save]
  -[NSMappedObjectStore setMetadata:]
  -[NSMappedObjectStore metadata]
  -[NSMappedObjectStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSMappedObjectStore newValuesForObjectWithID:withContext:error:]
  -[NSMappedObjectStore _rawMetadata__]
  -[NSMappedObjectStore executeRequest:withContext:error:]
  -[NSMappedObjectStore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSMappedObjectStore obtainPermanentIDsForObjects:error:]
  -[NSMappedObjectStore executeFetchRequest:withContext:]
  -[NSMappedObjectStore executeSaveChangesRequest:withContext:]
  -[NSMappedObjectStore executeCountRequest:withContext:]
  -[NSMappedObjectStore managedObjectContextDidRegisterObjectsWithIDs:]
  -[NSMappedObjectStore managedObjectContextDidUnregisterObjectsWithIDs:]
  -[NSMappedObjectStore _setMap:]
  -[NSMappedObjectStore _theMap]
  -[NSMappedObjectStore saveDocumentToPath:]
  -[NSMappedObjectStore getNewIDForObject:]
  -[NSMappedObjectStore _addObject:objectIDMap:]
  -[NSMappedObjectStore _removeObject:objectIDMap:]
  -[NSMappedObjectStore _updateObject:objectIDMap:]
  -[NSMappedObjectStore _pathFromURI:]


NSFetchIndexDescription : NSObject <NSSecureCoding, NSCoding>
 @property  NSString *name
 @property  NSArray *elements
 @property  NSEntityDescription *entity
 @property  NSPredicate *partialIndexPredicate

  // class methods
  +[NSFetchIndexDescription supportsSecureCoding]

  // instance methods
  -[NSFetchIndexDescription dealloc]
  -[NSFetchIndexDescription isEqual:]
  -[NSFetchIndexDescription name]
  -[NSFetchIndexDescription copyWithZone:]
  -[NSFetchIndexDescription encodeWithCoder:]
  -[NSFetchIndexDescription initWithCoder:]
  -[NSFetchIndexDescription setName:]
  -[NSFetchIndexDescription elements]
  -[NSFetchIndexDescription entity]
  -[NSFetchIndexDescription _compare:]
  -[NSFetchIndexDescription setElements:]
  -[NSFetchIndexDescription _isEditable]
  -[NSFetchIndexDescription _expressionIsCompoundIndexCompatible:]
  -[NSFetchIndexDescription _throwIfNotEditable]
  -[NSFetchIndexDescription initWithName:elements:]
  -[NSFetchIndexDescription _setEntity:]
  -[NSFetchIndexDescription _isMappedSinglePropertyIndex]
  -[NSFetchIndexDescription _setIsUnique:]
  -[NSFetchIndexDescription _compoundIndexRepresentation]
  -[NSFetchIndexDescription _isIndexForProperty:]
  -[NSFetchIndexDescription initWithName:predicate:elements:entity:]
  -[NSFetchIndexDescription partialIndexPredicate]
  -[NSFetchIndexDescription _checkElements:]
  -[NSFetchIndexDescription _isBinary]
  -[NSFetchIndexDescription _isCompoundIndexCompatible]
  -[NSFetchIndexDescription _isUnique]
  -[NSFetchIndexDescription setPartialIndexPredicate:]
  -[NSFetchIndexDescription _validateCollationTypeChangeFrom:to:]
  -[NSFetchIndexDescription _isPurelyModeledIndex]


NSMappingModel : NSObject <NSSecureCoding>
 @property  NSArray *entityMappings
 @property  NSDictionary *entityMappingsByName

  // class methods
  +[NSMappingModel initialize]
  +[NSMappingModel supportsSecureCoding]
  +[NSMappingModel migrationDebugLevel]
  +[NSMappingModel setMigrationDebugLevel:]
  +[NSMappingModel _mappingModelFromBundles:forSourceModel:destinationModel:]
  +[NSMappingModel _newMappingModelFromBundles:forSourceHashes:destinationHashes:]
  +[NSMappingModel mappingModelFromBundles:forSourceModel:destinationModel:]
  +[NSMappingModel inferredMappingModelForSourceModel:destinationModel:error:]

  // instance methods
  -[NSMappingModel init]
  -[NSMappingModel dealloc]
  -[NSMappingModel isEqual:]
  -[NSMappingModel copyWithZone:]
  -[NSMappingModel encodeWithCoder:]
  -[NSMappingModel initWithCoder:]
  -[NSMappingModel initWithContentsOfURL:]
  -[NSMappingModel isEditable]
  -[NSMappingModel _setIsEditable:]
  -[NSMappingModel setEntityMappings:]
  -[NSMappingModel _throwIfNotEditable]
  -[NSMappingModel _createCachesAndOptimizeState]
  -[NSMappingModel _hasInferredMappingNeedingValidation]
  -[NSMappingModel entityMappings]
  -[NSMappingModel _initWithEntityMappings:]
  -[NSMappingModel _addEntityMapping:]
  -[NSMappingModel entityMappingsByName]
  -[NSMappingModel _isInferredMappingModel]
  -[NSMappingModel _sourceEntityVersionHashesByName]
  -[NSMappingModel _destinationEntityVersionHashesByName]


PFCloudKitImporterWorkItem : NSObject
 @property  PFCloudKitImporterOptions *options
 @property  NSCloudKitMirroringImportRequest *request

  // instance methods
  -[PFCloudKitImporterWorkItem dealloc]
  -[PFCloudKitImporterWorkItem options]
  -[PFCloudKitImporterWorkItem request]
  -[PFCloudKitImporterWorkItem initWithOptions:request:]
  -[PFCloudKitImporterWorkItem doWorkWithCompletion:]


NSMemoryObjectStore : NSMappedObjectStore
  // class methods
  +[NSMemoryObjectStore metadataForPersistentStoreWithURL:error:]
  +[NSMemoryObjectStore metadataForPersistentStoreWithURL:options:error:]
  +[NSMemoryObjectStore setMetadata:forPersistentStoreWithURL:options:error:]
  +[NSMemoryObjectStore setMetadata:forPersistentStoreWithURL:error:]

  // instance methods
  -[NSMemoryObjectStore type]
  -[NSMemoryObjectStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSMemoryObjectStore _preflightCrossCheck]
  -[NSMemoryObjectStore saveDocumentToPath:]
  -[NSMemoryObjectStore _archivedData]


NSSQLitePrefetchRequestCache : NSObject
  // instance methods
  -[NSSQLitePrefetchRequestCache dealloc]
  -[NSSQLitePrefetchRequestCache .cxx_destruct]
  -[NSSQLitePrefetchRequestCache inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSSQLitePrefetchRequestCache manyToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSSQLitePrefetchRequestCache manyToManyPrefetchRequestsForRelationshipNamed:onEntity:]
  -[NSSQLitePrefetchRequestCache initWithSQLCore:]


NSMemoryStoreEqualityPredicateOperator : NSEqualityPredicateOperator /usr/lib/libcompression.dylib
  // instance methods
  -[NSMemoryStoreEqualityPredicateOperator dealloc]
  -[NSMemoryStoreEqualityPredicateOperator performPrimitiveOperationUsingObject:andObject:]
  -[NSMemoryStoreEqualityPredicateOperator setContext:]


NSMemoryStoreInPredicateOperator : NSInPredicateOperator /usr/lib/libcompression.dylib
  // instance methods
  -[NSMemoryStoreInPredicateOperator dealloc]
  -[NSMemoryStoreInPredicateOperator performPrimitiveOperationUsingObject:andObject:]
  -[NSMemoryStoreInPredicateOperator setContext:]


NSSQLBoundedByIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLBoundedByIntermediate dealloc]
  -[NSSQLBoundedByIntermediate generateSQLStringInContext:]
  -[NSSQLBoundedByIntermediate initWithWorkingEntity:target:bounds:scope:]


NSMergeConflict : NSObject <NSSecureCoding>
 @property  NSManagedObject *sourceObject
 @property  NSDictionary *objectSnapshot
 @property  NSDictionary *cachedSnapshot
 @property  NSDictionary *persistedSnapshot
 @property  unsigned long newVersionNumber
 @property  unsigned long oldVersionNumber

  // class methods
  +[NSMergeConflict supportsSecureCoding]

  // instance methods
  -[NSMergeConflict init]
  -[NSMergeConflict dealloc]
  -[NSMergeConflict objectForKey:]
  -[NSMergeConflict encodeWithCoder:]
  -[NSMergeConflict initWithCoder:]
  -[NSMergeConflict valueForKey:]
  -[NSMergeConflict _doCleanupForXPCStore:context:]
  -[NSMergeConflict sourceObject]
  -[NSMergeConflict initWithSource:newVersion:oldVersion:snapshot1:snapshot2:snapshot3:]
  -[NSMergeConflict initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:]
  -[NSMergeConflict ancestorSnapshot]
  -[NSMergeConflict objectSnapshot]
  -[NSMergeConflict cachedSnapshot]
  -[NSMergeConflict persistedSnapshot]
  -[NSMergeConflict newVersionNumber]
  -[NSMergeConflict oldVersionNumber]


NSConstraintConflict : NSObject <NSSecureCoding>
 @property  NSArray *constraint
 @property  NSDictionary *constraintValues
 @property  NSManagedObject *databaseObject
 @property  NSDictionary *databaseSnapshot
 @property  NSArray *conflictingObjects
 @property  NSArray *conflictingSnapshots

  // class methods
  +[NSConstraintConflict supportsSecureCoding]

  // instance methods
  -[NSConstraintConflict dealloc]
  -[NSConstraintConflict encodeWithCoder:]
  -[NSConstraintConflict initWithCoder:]
  -[NSConstraintConflict _doCleanupForXPCStore:context:]
  -[NSConstraintConflict conflictingObjects]
  -[NSConstraintConflict constraint]
  -[NSConstraintConflict databaseObject]
  -[NSConstraintConflict initWithConstraint:databaseObject:databaseSnapshot:conflictingObjects:conflictingSnapshots:]
  -[NSConstraintConflict _isDBConflict]
  -[NSConstraintConflict constraintValues]
  -[NSConstraintConflict conflictingSnapshots]
  -[NSConstraintConflict databaseSnapshot]


NSMergePolicy : NSObject
 @property  unsigned long mergeType

  // class methods
  +[NSMergePolicy initialize]
  +[NSMergePolicy accessInstanceVariablesDirectly]
  +[NSMergePolicy errorMergePolicy]
  +[NSMergePolicy mergeByPropertyStoreTrumpMergePolicy]
  +[NSMergePolicy mergeByPropertyObjectTrumpMergePolicy]
  +[NSMergePolicy overwriteMergePolicy]
  +[NSMergePolicy rollbackMergePolicy]

  // instance methods
  -[NSMergePolicy init]
  -[NSMergePolicy dealloc]
  -[NSMergePolicy copyWithZone:]
  -[NSMergePolicy mutableCopyWithZone:]
  -[NSMergePolicy type]
  -[NSMergePolicy encodeWithCoder:]
  -[NSMergePolicy initWithCoder:]
  -[NSMergePolicy initWithType:]
  -[NSMergePolicy mergeType]
  -[NSMergePolicy resolveConflicts:error:]
  -[NSMergePolicy initWithMergeType:]
  -[NSMergePolicy _valuesOnObject:matchAgainstValues:]
  -[NSMergePolicy _mergeToManyUnionRelationshipsForObject:andObject:]
  -[NSMergePolicy _mergeToManyUnionRelationshipsForConstraintConflict:]
  -[NSMergePolicy _mergeToManyRelationshipsForObject:ontoObject:]
  -[NSMergePolicy _mergeToManyRelationshipsForConstraintConflict:withDesignatedOriginal:]
  -[NSMergePolicy _byPropertyObjectTrumpMergeObject:ontoObject:writeAll:]
  -[NSMergePolicy _electPreexistingDesignatedOriginalFrom:]
  -[NSMergePolicy _electNewlyInsertedDesignatedOriginalFrom:]
  -[NSMergePolicy _mergeValuesForObject:ontoObject:]
  -[NSMergePolicy _electDesignatedOriginalForConflict:]
  -[NSMergePolicy _mergeContendersResolveConstraintConflict:withKeeper:]
  -[NSMergePolicy _eliminateContendersResolveConstraintConflict:withKeeper:]
  -[NSMergePolicy _didSomethingElseResolveDBConflict:]
  -[NSMergePolicy _unresolvedObjectsForContextConflict:]
  -[NSMergePolicy _unresolvedConflictFor:]
  -[NSMergePolicy _byPropertyStoreTrumpResolveConstraintConflict:]
  -[NSMergePolicy _byPropertyObjectTrumpResolveConstraintConflict:]
  -[NSMergePolicy _rollbackResolveConstraintConflict:]
  -[NSMergePolicy _overwriteResolveConstraintConflict:]
  -[NSMergePolicy _resolveContextConstraintConflict:]
  -[NSMergePolicy _mergeChangesStoreUpdatesTrumpForObject:withRecord:]
  -[NSMergePolicy _mergeChangesObjectUpdatesTrumpForObject:withRecord:]
  -[NSMergePolicy mergeToManyRelationshipForSourceObject:withOldSnapshot:newSnapshot:andAncestor:andLegacyPath:]
  -[NSMergePolicy _mergeDeletionWithStoreChangesForObject:withRecord:]
  -[NSMergePolicy resolveOptimisticLockingVersionConflicts:error:]
  -[NSMergePolicy resolveConstraintConflicts:error:]
  -[NSMergePolicy resolveConstraintConflict:error:]
  -[NSMergePolicy resolveConflict:]


NSMigrationContext : NSObject
 @property  NSEntityMapping *currentEntityMapping
 @property  NSPropertyMapping *currentPropertyMapping
 @property  unsigned long currentMigrationStep

  // instance methods
  -[NSMigrationContext dealloc]
  -[NSMigrationContext setCurrentPropertyMapping:]
  -[NSMigrationContext associateSourceInstance:withDestinationInstance:forEntityMapping:]
  -[NSMigrationContext clearAssociationTables]
  -[NSMigrationContext setCurrentMigrationStep:]
  -[NSMigrationContext _createAssociationsBySource:withDestination:forEntityMapping:]
  -[NSMigrationContext _createAssociationsByDestination:fromSource:forEntityMapping:]
  -[NSMigrationContext initWithMigrationManager:]
  -[NSMigrationContext currentEntityMapping]
  -[NSMigrationContext setCurrentEntityMapping:]
  -[NSMigrationContext currentPropertyMapping]
  -[NSMigrationContext currentMigrationStep]
  -[NSMigrationContext destinationInstancesForEntityMapping:sourceInstance:]
  -[NSMigrationContext sourceInstancesForEntityMapping:destinationInstance:]


NSMigrationManager : NSObject
 @property  BOOL usesStoreSpecificMigrationManager
 @property  NSMappingModel *mappingModel
 @property  NSManagedObjectModel *sourceModel
 @property  NSManagedObjectModel *destinationModel
 @property  NSManagedObjectContext *sourceContext
 @property  NSManagedObjectContext *destinationContext
 @property  NSEntityMapping *currentEntityMapping
 @property  float migrationProgress
 @property  NSDictionary *userInfo

  // class methods
  +[NSMigrationManager migrationDebugLevel]
  +[NSMigrationManager setMigrationDebugLevel:]
  +[NSMigrationManager _canMigrateWithMappingModel:]
  +[NSMigrationManager _performSanityCheckForMapping:fromSourceModel:toDestinationModel:]

  // instance methods
  -[NSMigrationManager dealloc]
  -[NSMigrationManager userInfo]
  -[NSMigrationManager setUserInfo:]
  -[NSMigrationManager reset]
  -[NSMigrationManager initWithSourceModel:destinationModel:]
  -[NSMigrationManager destinationContext]
  -[NSMigrationManager _migrationContext]
  -[NSMigrationManager associateSourceInstance:withDestinationInstance:forEntityMapping:]
  -[NSMigrationManager sourceInstancesForEntityMappingNamed:destinationInstances:]
  -[NSMigrationManager destinationEntityForEntityMapping:]
  -[NSMigrationManager currentEntityMapping]
  -[NSMigrationManager currentPropertyMapping]
  -[NSMigrationManager _doCleanupOnFailure:]
  -[NSMigrationManager usesStoreSpecificMigrationManager]
  -[NSMigrationManager sourceModel]
  -[NSMigrationManager destinationModel]
  -[NSMigrationManager migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:]
  -[NSMigrationManager _migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:]
  -[NSMigrationManager _mappingNamed:]
  -[NSMigrationManager sourceEntityForEntityMapping:]
  -[NSMigrationManager mappingModel]
  -[NSMigrationManager sourceContext]
  -[NSMigrationManager destinationInstancesForEntityMappingNamed:sourceInstances:]
  -[NSMigrationManager destinationInstancesForSourceRelationshipNamed:sourceInstances:]
  -[NSMigrationManager migrationProgress]
  -[NSMigrationManager cancelMigrationWithError:]
  -[NSMigrationManager setUsesStoreSpecificMigrationManager:]
  -[NSMigrationManager fetchRequestForSourceEntityNamed:predicateString:includesSubentities:]
  -[NSMigrationManager _evaluateSourceExpressionForMapping:entityPolicy:]
  -[NSMigrationManager _doFirstPassForMapping:error:]
  -[NSMigrationManager _doSecondPassForMapping:error:]
  -[NSMigrationManager _validateAllObjectsAfterMigration:]
  -[NSMigrationManager _doThirdPassForMapping:error:]
  -[NSMigrationManager _performedInPlaceMigration]
  -[NSMigrationManager _setPerformedInPlaceMigration:]
  -[NSMigrationManager fetchRequestForSourceEntityNamed:predicateString:]


NSSQLConnectionManager : NSObject
 @property  @? filter

  // instance methods
  -[NSSQLConnectionManager dealloc]
  -[NSSQLConnectionManager setFilter:]
  -[NSSQLConnectionManager filter]
  -[NSSQLConnectionManager sqlCore]
  -[NSSQLConnectionManager disconnectAllConnections]
  -[NSSQLConnectionManager initWithSQLCore:priority:seedConnection:]
  -[NSSQLConnectionManager initWithSQLCore:seedConnection:]
  -[NSSQLConnectionManager willHandleStoreRequest:]
  -[NSSQLConnectionManager initializationConnection]
  -[NSSQLConnectionManager setExclusiveLockingMode:]
  -[NSSQLConnectionManager handleStoreRequest:]
  -[NSSQLConnectionManager scheduleBarrierBlock:]
  -[NSSQLConnectionManager scheduleConnectionsBarrier:]


NSSQLDefaultConnectionManager : NSSQLConnectionManager
  // instance methods
  -[NSSQLDefaultConnectionManager dealloc]
  -[NSSQLDefaultConnectionManager disconnectAllConnections]
  -[NSSQLDefaultConnectionManager initWithSQLCore:priority:seedConnection:]
  -[NSSQLDefaultConnectionManager setExclusiveLockingMode:]
  -[NSSQLDefaultConnectionManager handleStoreRequest:]
  -[NSSQLDefaultConnectionManager scheduleBarrierBlock:]
  -[NSSQLDefaultConnectionManager scheduleConnectionsBarrier:]
  -[NSSQLDefaultConnectionManager _initializeConnectionsWithSeed:]
  -[NSSQLDefaultConnectionManager _checkoutConnectionOfType:]
  -[NSSQLDefaultConnectionManager _checkinConnection:]


NSPersistentStore : NSObject
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSString *configurationName
 @property  NSDictionary *options
 @property  NSURL *URL
 @property  NSString *identifier
 @property  NSString *type
 @property  BOOL readOnly
 @property  NSDictionary *metadata
 @property  NSCoreDataCoreSpotlightDelegate *coreSpotlightExporter

  // class methods
  +[NSPersistentStore initialize]
  +[NSPersistentStore accessInstanceVariablesDirectly]
  +[NSPersistentStore cachedModelForPersistentStoreWithURL:options:error:]
  +[NSPersistentStore metadataForPersistentStoreWithURL:error:]
  +[NSPersistentStore doURLStuff:createdStubFile:readOnly:error:options:]
  +[NSPersistentStore setMetadata:forPersistentStoreWithURL:error:]
  +[NSPersistentStore migrationManagerClass]
  +[NSPersistentStore rowCacheClass]
  +[NSPersistentStore _replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:]
  +[NSPersistentStore _destroyPersistentStoreAtURL:options:error:]
  +[NSPersistentStore _rekeyPersistentStoreAtURL:options:withKey:error:]
  +[NSPersistentStore _figureOutWhereExternalReferencesEndedUpRelativeTo:]

  // instance methods
  -[NSPersistentStore init]
  -[NSPersistentStore dealloc]
  -[NSPersistentStore copyWithZone:]
  -[NSPersistentStore options]
  -[NSPersistentStore type]
  -[NSPersistentStore identifier]
  -[NSPersistentStore setIdentifier:]
  -[NSPersistentStore setURL:]
  -[NSPersistentStore URL]
  -[NSPersistentStore setMetadata:]
  -[NSPersistentStore metadata]
  -[NSPersistentStore persistentStoreCoordinator]
  -[NSPersistentStore load:]
  -[NSPersistentStore setReadOnly:]
  -[NSPersistentStore _persistentStoreCoordinator]
  -[NSPersistentStore configurationName]
  -[NSPersistentStore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSPersistentStore faultHandler]
  -[NSPersistentStore loadMetadata:]
  -[NSPersistentStore _updatedMetadataWithSeed:includeVersioning:]
  -[NSPersistentStore _setMetadataDirty:]
  -[NSPersistentStore _isMetadataDirty]
  -[NSPersistentStore newValuesForObjectWithID:withContext:error:]
  -[NSPersistentStore willRemoveFromPersistentStoreCoordinator:]
  -[NSPersistentStore supportsConcurrentRequestHandling]
  -[NSPersistentStore _rawMetadata__]
  -[NSPersistentStore supportsGenerationalQuerying]
  -[NSPersistentStore currentQueryGeneration]
  -[NSPersistentStore freeQueryGenerationWithIdentifier:]
  -[NSPersistentStore reopenQueryGenerationWithIdentifier:error:]
  -[NSPersistentStore managedObjectContextDidRegisterObjectsWithIDs:generation:]
  -[NSPersistentStore managedObjectContextDidUnregisterObjectsWithIDs:generation:]
  -[NSPersistentStore executeRequest:withContext:error:]
  -[NSPersistentStore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSPersistentStore obtainPermanentIDsForObjects:error:]
  -[NSPersistentStore ancillaryModels]
  -[NSPersistentStore objectIDFactoryForEntity:]
  -[NSPersistentStore currentChangeToken]
  -[NSPersistentStore _objectIDClass]
  -[NSPersistentStore _storeInfoForEntityDescription:]
  -[NSPersistentStore isReadOnly]
  -[NSPersistentStore _didLoadMetadata]
  -[NSPersistentStore _preflightCrossCheck]
  -[NSPersistentStore managedObjectContextDidRegisterObjectsWithIDs:]
  -[NSPersistentStore managedObjectContextDidUnregisterObjectsWithIDs:]
  -[NSPersistentStore doFilesystemCleanupOnRemove:]
  -[NSPersistentStore coreSpotlightExporter]
  -[NSPersistentStore _setCoreSpotlightDelegate:]
  -[NSPersistentStore _newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:]
  -[NSPersistentStore _setPersistentStoreCoordinator:]
  -[NSPersistentStore _allOrderKeysForDestination:inRelationship:error:]
  -[NSPersistentStore _unload:]
  -[NSPersistentStore didAddToPersistentStoreCoordinator:]
  -[NSPersistentStore faultHandlerClass]
  -[NSPersistentStore objectIDClassForEntity:]
  -[NSPersistentStore _resetObjectIDFactoriesForStoreUUIDChange]
  -[NSPersistentStore _prepareForExecuteRequest:withContext:error:]
  -[NSPersistentStore _defaultMetadata]
  -[NSPersistentStore _updateMetadata]
  -[NSPersistentStore _setupObserver]
  -[NSPersistentStore _rebuildIndiciesSynchronously:]


NSBatchInsertRequest : NSPersistentStoreRequest
 @property  @? insertDictionaryHandler
 @property  @? insertManagedObjectHandler
 @property  NSString *entityName
 @property  NSEntityDescription *entity
 @property  NSArray *objectsToInsert
 @property  unsigned long resultType

  // class methods
  +[NSBatchInsertRequest decodeFromXPCArchive:withContext:]
  +[NSBatchInsertRequest stringForResultType:]
  +[NSBatchInsertRequest batchInsertRequestWithEntityName:objects:]
  +[NSBatchInsertRequest shortStringForResultType:]
  +[NSBatchInsertRequest batchInsertRequestWithEntityName:dictionaryHandler:]
  +[NSBatchInsertRequest batchInsertRequestWithEntityName:managedObjectHandler:]

  // instance methods
  -[NSBatchInsertRequest init]
  -[NSBatchInsertRequest dealloc]
  -[NSBatchInsertRequest resultType]
  -[NSBatchInsertRequest setResultType:]
  -[NSBatchInsertRequest entityName]
  -[NSBatchInsertRequest entity]
  -[NSBatchInsertRequest requestType]
  -[NSBatchInsertRequest encodeForXPC]
  -[NSBatchInsertRequest objectsToInsert]
  -[NSBatchInsertRequest initWithEntityName:objects:]
  -[NSBatchInsertRequest _resolveEntityWithSQLCore:]
  -[NSBatchInsertRequest initWithEntity:objects:]
  -[NSBatchInsertRequest setObjectsToInsert:]
  -[NSBatchInsertRequest initWithEntityName:dictionaryHandler:]
  -[NSBatchInsertRequest initWithEntityName:managedObjectHandler:]
  -[NSBatchInsertRequest insertDictionaryHandler]
  -[NSBatchInsertRequest setInsertDictionaryHandler:]
  -[NSBatchInsertRequest insertManagedObjectHandler]
  -[NSBatchInsertRequest setInsertManagedObjectHandler:]
  -[NSBatchInsertRequest initWithEntity:dictionaryHandler:]
  -[NSBatchInsertRequest initWithEntity:managedObjectHandler:]


NSBatchInsertResult : NSPersistentStoreResult
 @property  id result
 @property  unsigned long resultType

  // instance methods
  -[NSBatchInsertResult dealloc]
  -[NSBatchInsertResult result]
  -[NSBatchInsertResult resultType]
  -[NSBatchInsertResult initWithResultType:andObject:]
  -[NSBatchInsertResult initWithSubresults:]


PFUbiquityBaselineHeuristics : NSObject
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *modelVersionHash
 @property  long long numRequiredTransactions
 @property  long long storeSize
 @property  long long logSize
 @property 	bug here! ->  D logToStoreSizeRatio
 @property  long long minLogBytes
 @property  PFUbiquityKnowledgeVector *currentBaselineKV
 @property  PFUbiquityKnowledgeVector *currentKV

  // instance methods
  -[PFUbiquityBaselineHeuristics init]
  -[PFUbiquityBaselineHeuristics dealloc]
  -[PFUbiquityBaselineHeuristics copy]
  -[PFUbiquityBaselineHeuristics setCurrentBaselineKV:]
  -[PFUbiquityBaselineHeuristics setCurrentKV:]
  -[PFUbiquityBaselineHeuristics initWithLocalPeerID:storeName:modelVersionHash:andUbiquityRootLocation:]
  -[PFUbiquityBaselineHeuristics setNumRequiredTransactions:]
  -[PFUbiquityBaselineHeuristics setStoreSize:]
  -[PFUbiquityBaselineHeuristics setLogSize:]
  -[PFUbiquityBaselineHeuristics setLogToStoreSizeRatio:]
  -[PFUbiquityBaselineHeuristics setMinLogBytes:]
  -[PFUbiquityBaselineHeuristics bytesForFileAtPath:]
  -[PFUbiquityBaselineHeuristics modelVersionHash]
  -[PFUbiquityBaselineHeuristics haveEnoughTransactionsToRoll]
  -[PFUbiquityBaselineHeuristics logsConsumeEnoughDiskSpace]
  -[PFUbiquityBaselineHeuristics updateHeuristics]
  -[PFUbiquityBaselineHeuristics canRollBaseline:]
  -[PFUbiquityBaselineHeuristics localPeerID]
  -[PFUbiquityBaselineHeuristics storeName]
  -[PFUbiquityBaselineHeuristics ubiquityRootLocation]
  -[PFUbiquityBaselineHeuristics numRequiredTransactions]
  -[PFUbiquityBaselineHeuristics storeSize]
  -[PFUbiquityBaselineHeuristics logSize]
  -[PFUbiquityBaselineHeuristics logToStoreSizeRatio]
  -[PFUbiquityBaselineHeuristics minLogBytes]
  -[PFUbiquityBaselineHeuristics currentBaselineKV]
  -[PFUbiquityBaselineHeuristics currentKV]


NSSQLiteStatementCache : NSObject
  // instance methods
  -[NSSQLiteStatementCache dealloc]
  -[NSSQLiteStatementCache initWithEntity:]
  -[NSSQLiteStatementCache clearCachedStatements]
  -[NSSQLiteStatementCache cacheInsertStatement:]
  -[NSSQLiteStatementCache cacheDeletionStatement:]
  -[NSSQLiteStatementCache _clearSaveGeneratedCachedStatements]
  -[NSSQLiteStatementCache cacheFaultingStatement:]
  -[NSSQLiteStatementCache createCorrelationCacheDictionary]
  -[NSSQLiteStatementCache insertOrReplaceStatement:forRelationship:inDictionary:]
  -[NSSQLiteStatementCache insertStatement]
  -[NSSQLiteStatementCache deletionStatement]
  -[NSSQLiteStatementCache faultingStatement]
  -[NSSQLiteStatementCache correlationInsertStatementForRelationship:]
  -[NSSQLiteStatementCache cacheCorrelationInsertStatement:forRelationship:]
  -[NSSQLiteStatementCache correlationMasterReorderStatementForRelationship:]
  -[NSSQLiteStatementCache cacheCorrelationMasterReorderStatement:forRelationship:]
  -[NSSQLiteStatementCache correlationMasterReorderStatementPart2ForRelationship:]
  -[NSSQLiteStatementCache cacheCorrelationMasterReorderStatementPart2:forRelationship:]
  -[NSSQLiteStatementCache correlationReorderStatementForRelationship:]
  -[NSSQLiteStatementCache cacheCorrelationReorderStatement:forRelationship:]
  -[NSSQLiteStatementCache correlationDeleteStatementForRelationship:]
  -[NSSQLiteStatementCache cacheCorrelationDeleteStatement:forRelationship:]
  -[NSSQLiteStatementCache preparedFaultingCachesForRelationship:]
  -[NSSQLiteStatementCache cacheFaultingStatement:andFetchRequest:forRelationship:]


NSPersistentStoreCache : NSObject
  // class methods
  +[NSPersistentStoreCache initialize]

  // instance methods
  -[NSPersistentStoreCache init]
  -[NSPersistentStoreCache dealloc]
  -[NSPersistentStoreCache registerToMany:withOrderKeys:forSourceObjectID:forProperty:options:andTimestamp:]
  -[NSPersistentStoreCache incrementRefCountForObjectID:]
  -[NSPersistentStoreCache decrementRefCountForObjectID:]
  -[NSPersistentStoreCache rowForObjectID:afterTimestamp:]
  -[NSPersistentStoreCache registerRow:forObjectID:options:]
  -[NSPersistentStoreCache forgetRowForObjectID:]
  -[NSPersistentStoreCache toManyForSourceObjectID:forProperty:afterTimestamp:]
  -[NSPersistentStoreCache _createExternalDataDictWithValueCallbacks:]
  -[NSPersistentStoreCache initWithValueCallbacks:preserveToManyRelationships:]
  -[NSPersistentStoreCache _forgetRowForObjectID:]
  -[NSPersistentStoreCache _registerRow:forObjectID:options:]
  -[NSPersistentStoreCache _registerToMany:withOrderKeys:forSourceObjectID:forProperty:options:andTimestamp:]
  -[NSPersistentStoreCache initWithPersistentStore:]
  -[NSPersistentStoreCache growRegistrationCollectionTo:]
  -[NSPersistentStoreCache forgetAllExternalData]
  -[NSPersistentStoreCache refCountForObjectID:]
  -[NSPersistentStoreCache registerRow:forObjectID:]
  -[NSPersistentStoreCache rowForObjectID:]
  -[NSPersistentStoreCache registerToMany:withOrderKeys:forSourceObjectID:forProperty:andTimestamp:]
  -[NSPersistentStoreCache toManyInformationForSourceObjectID:forProperty:afterTimestamp:]
  -[NSPersistentStoreCache ancillaryOrderKeysForSourceObjectID:forProperty:afterTimestamp:]


NSPersistentStoreCoordinator : NSObject <NSLocking>
 @property  _PFModelMap *modelMap
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSArray *persistentStores
 @property  NSString *name

  // class methods
  +[NSPersistentStoreCoordinator alloc]
  +[NSPersistentStoreCoordinator allocWithZone:]
  +[NSPersistentStoreCoordinator initialize]
  +[NSPersistentStoreCoordinator accessInstanceVariablesDirectly]
  +[NSPersistentStoreCoordinator metadataForPersistentStoreOfType:URL:error:]
  +[NSPersistentStoreCoordinator removePersistentHistoryFromPersistentStoreAtURL:options:error:]
  +[NSPersistentStoreCoordinator _beginPowerAssertionNamed:withAssert:]
  +[NSPersistentStoreCoordinator _endPowerAssertionWithAssert:andApp:]
  +[NSPersistentStoreCoordinator __Multithreading_Violation_AllThatIsLeftToUsIsHonor__]
  +[NSPersistentStoreCoordinator registeredStoreTypes]
  +[NSPersistentStoreCoordinator _registerDefaultStoreClassesAndTypes]
  +[NSPersistentStoreCoordinator _storeClassForStoreType:]
  +[NSPersistentStoreCoordinator _classForPersistentStoreAtURL:]
  +[NSPersistentStoreCoordinator metadataForPersistentStoreOfType:URL:options:error:]
  +[NSPersistentStoreCoordinator _metadataForPersistentStoreOfType:URL:options:error:]
  +[NSPersistentStoreCoordinator _setMetadata:forPersistentStoreOfType:URL:options:error:]
  +[NSPersistentStoreCoordinator _storeTypeForStore:]
  +[NSPersistentStoreCoordinator _registerCoreDataStoreClass:forStoreType:]
  +[NSPersistentStoreCoordinator registerStoreClass:forStoreType:]
  +[NSPersistentStoreCoordinator setMetadata:forPersistentStoreOfType:URL:options:error:]
  +[NSPersistentStoreCoordinator setMetadata:forPersistentStoreOfType:URL:error:]
  +[NSPersistentStoreCoordinator removeUbiquitousContentAndPersistentStoreAtURL:options:error:]
  +[NSPersistentStoreCoordinator ubiquityStoreURLForStoreURL:ubiquityIdentityToken:localPeerID:ubiquityName:]
  +[NSPersistentStoreCoordinator ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:]
  +[NSPersistentStoreCoordinator __platformOptions]

  // instance methods
  -[NSPersistentStoreCoordinator init]
  -[NSPersistentStoreCoordinator dealloc]
  -[NSPersistentStoreCoordinator name]
  -[NSPersistentStoreCoordinator lock]
  -[NSPersistentStoreCoordinator unlock]
  -[NSPersistentStoreCoordinator setName:]
  -[NSPersistentStoreCoordinator tryLock]
  -[NSPersistentStoreCoordinator performBlock:]
  -[NSPersistentStoreCoordinator performBlockAndWait:]
  -[NSPersistentStoreCoordinator persistentStores]
  -[NSPersistentStoreCoordinator removePersistentStore:error:]
  -[NSPersistentStoreCoordinator initWithManagedObjectModel:]
  -[NSPersistentStoreCoordinator addPersistentStoreWithType:configuration:URL:options:error:]
  -[NSPersistentStoreCoordinator addPersistentStoreWithDescription:completionHandler:]
  -[NSPersistentStoreCoordinator managedObjectModel]
  -[NSPersistentStoreCoordinator persistentStoreCoordinator]
  -[NSPersistentStoreCoordinator destroyPersistentStoreAtURL:withType:options:error:]
  -[NSPersistentStoreCoordinator persistentStoreForURL:]
  -[NSPersistentStoreCoordinator managedObjectIDForURIRepresentation:]
  -[NSPersistentStoreCoordinator modelMap]
  -[NSPersistentStoreCoordinator newValuesForObjectWithID:withContext:error:]
  -[NSPersistentStoreCoordinator managedObjectContextDidRegisterObjectsWithIDs:generation:]
  -[NSPersistentStoreCoordinator managedObjectContextDidUnregisterObjectsWithIDs:generation:]
  -[NSPersistentStoreCoordinator executeRequest:withContext:error:]
  -[NSPersistentStoreCoordinator newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSPersistentStoreCoordinator obtainPermanentIDsForObjects:error:]
  -[NSPersistentStoreCoordinator _setXPCBundleIdentifier:]
  -[NSPersistentStoreCoordinator _setXPCProcessName:]
  -[NSPersistentStoreCoordinator _reopenQueryGenerationWithIdentifier:inStoreWithIdentifier:error:]
  -[NSPersistentStoreCoordinator _retainedCurrentQueryGeneration:]
  -[NSPersistentStoreCoordinator currentPersistentHistoryTokenFromStores:]
  -[NSPersistentStoreCoordinator setURL:forPersistentStore:]
  -[NSPersistentStoreCoordinator persistentStoreForIdentifier:]
  -[NSPersistentStoreCoordinator managedObjectIDFromUTF8String:length:]
  -[NSPersistentStoreCoordinator _lastOpenError]
  -[NSPersistentStoreCoordinator _removeAllPersistentStores:]
  -[NSPersistentStoreCoordinator _newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:]
  -[NSPersistentStoreCoordinator _postStoreRemoteChangeNotificationsForStore:andState:]
  -[NSPersistentStoreCoordinator _persistentStoreForIdentifier:]
  -[NSPersistentStoreCoordinator managedObjectIDForURIRepresentation:error:]
  -[NSPersistentStoreCoordinator _validateQueryGeneration:error:]
  -[NSPersistentStoreCoordinator _allOrderKeysForDestination:inRelationship:error:]
  -[NSPersistentStoreCoordinator _copyMetadataFromStore:toStore:migrationManager:]
  -[NSPersistentStoreCoordinator _qosClassOptions]
  -[NSPersistentStoreCoordinator _retainedPersistentStores]
  -[NSPersistentStoreCoordinator _routeLightweightBlock:toStore:]
  -[NSPersistentStoreCoordinator _isRegisteredWithUbiquity]
  -[NSPersistentStoreCoordinator _hasHistoryTracking:]
  -[NSPersistentStoreCoordinator _checkForPostLionWriter:]
  -[NSPersistentStoreCoordinator _attemptRecoveryFromAddPersistentStoreError:withDescription:]
  -[NSPersistentStoreCoordinator _doAddPersistentStoreWithDescription:privateCopy:completeOnMainThread:withHandler:]
  -[NSPersistentStoreCoordinator validateManagedObjectModel:forHistoryTrackingWithOptions:error:]
  -[NSPersistentStoreCoordinator _realStoreTypeForStoreWithType:URL:options:error:]
  -[NSPersistentStoreCoordinator _checkForSkewedEntityHashes:metadata:]
  -[NSPersistentStoreCoordinator _checkForTombstoneSkew:metadata:configuration:]
  -[NSPersistentStoreCoordinator _addPersistentStore:identifier:]
  -[NSPersistentStoreCoordinator _postStoresChangedNotificationsForStores:changeKey:options:]
  -[NSPersistentStoreCoordinator _removePersistentStore:]
  -[NSPersistentStoreCoordinator _repairIndiciesForStoreWithIdentifier:synchronous:]
  -[NSPersistentStoreCoordinator _removePersistentStore:error:]
  -[NSPersistentStoreCoordinator _retainedAllMigratedObjectsInStore:toStore:]
  -[NSPersistentStoreCoordinator _destroyPersistentStoreAtURL:withType:options:error:]
  -[NSPersistentStoreCoordinator _replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:]
  -[NSPersistentStoreCoordinator _retainedChangeTokenFromStores:]
  -[NSPersistentStoreCoordinator _exceptionNoStoreSaveFailureForError:recommendedFrame:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_corrupted:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_schema_mismatch:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_device_locked:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_missing_directory:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_no_permission:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_cant_open:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_disk_full:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_io_error:]
  -[NSPersistentStoreCoordinator _coordinator_you_never_successfully_opened_the_database_so_saving_back_to_it_is_kinda_hard:]
  -[NSPersistentStoreCoordinator _routableStoresForContext:fromStores:]
  -[NSPersistentStoreCoordinator _introspectLastErrorAndThrow]
  -[NSPersistentStoreCoordinator _coordinator_no_idea_what_kind_of_request_that_was_supposed_to_be]
  -[NSPersistentStoreCoordinator _checkRequestForStore:withContext:originalRequest:andOptimisticLocking:]
  -[NSPersistentStoreCoordinator _doPreSaveAssignmentsForObjects:intoStores:]
  -[NSPersistentStoreCoordinator _saveRequestForStore:withContext:originalRequest:andOptimisticLocking:]
  -[NSPersistentStoreCoordinator _processStoreResults:forRequest:]
  -[NSPersistentStoreCoordinator _retainedIdentifierFromStores:]
  -[NSPersistentStoreCoordinator _routeHeavyweightBlock:]
  -[NSPersistentStoreCoordinator setMetadata:forPersistentStore:]
  -[NSPersistentStoreCoordinator metadataForPersistentStore:]
  -[NSPersistentStoreCoordinator URLForPersistentStore:]
  -[NSPersistentStoreCoordinator migratePersistentStore:toURL:options:withType:error:]
  -[NSPersistentStoreCoordinator replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:]
  -[NSPersistentStoreCoordinator _canRouteToStore:forContext:]
  -[NSPersistentStoreCoordinator managedObjectIDFromUTF8String:length:error:]
  -[NSPersistentStoreCoordinator _canSaveGraphRootedAtObject:intoStore:withPreviouslyChecked:withAcceptableEntities:]
  -[NSPersistentStoreCoordinator _assignObjects:toStore:]
  -[NSPersistentStoreCoordinator _newObjectGraphStyleRecordForRow:andObject:withContext:]
  -[NSPersistentStoreCoordinator _newConflictRecordForObject:andOriginalRow:withContext:]
  -[NSPersistentStoreCoordinator _conflictsWithRowCacheForObject:withContext:andStore:]
  -[NSPersistentStoreCoordinator _fetchAllInstancesFromStore:intoContext:underlyingException:]
  -[NSPersistentStoreCoordinator _assignObject:toPersistentStore:forConfiguration:]
  -[NSPersistentStoreCoordinator _setQosClassOptions:]
  -[NSPersistentStoreCoordinator _storeClassForStoreWithType:URL:options:]
  -[NSPersistentStoreCoordinator _setIsRegisteredWithCloudKit:]
  -[NSPersistentStoreCoordinator _isRegisteredWithCloudKit]
  -[NSPersistentStoreCoordinator _setIsRegisteredWithUbiquity:]
  -[NSPersistentStoreCoordinator currentQueryGenerationTokenFromStores:]
  -[NSPersistentStoreCoordinator _destroyPersistentStoreAtURL:withType:error:]
  -[NSPersistentStoreCoordinator _rekeyPersistentStoreAtURL:type:options:withKey:error:]
  -[NSPersistentStoreCoordinator _refreshTriggerValuesInStore:error:]
  -[NSPersistentStoreCoordinator _xpcBundleIdentifier]
  -[NSPersistentStoreCoordinator _xpcProcessName]
  -[NSPersistentStoreCoordinator _retainedCurrentChangeTrackingToken]


PFHistoryAnalyzerDefaultObjectState : NSObject <PFHistoryAnalyzerObjectState>
 @property  NSManagedObjectID *analyzedObjectID
 @property  NSNumber *originalTransactionNumber
 @property  long long originalChangeType
 @property  NSNumber *finalTransactionNumber
 @property  long long finalChangeType
 @property  NSDictionary *tombstone
 @property  NSString *finalChangeAuthor

  // instance methods
  -[PFHistoryAnalyzerDefaultObjectState dealloc]
  -[PFHistoryAnalyzerDefaultObjectState tombstone]
  -[PFHistoryAnalyzerDefaultObjectState updateWithChange:]
  -[PFHistoryAnalyzerDefaultObjectState analyzedObjectID]
  -[PFHistoryAnalyzerDefaultObjectState originalTransactionNumber]
  -[PFHistoryAnalyzerDefaultObjectState originalChangeType]
  -[PFHistoryAnalyzerDefaultObjectState finalTransactionNumber]
  -[PFHistoryAnalyzerDefaultObjectState finalChangeType]
  -[PFHistoryAnalyzerDefaultObjectState finalChangeAuthor]
  -[PFHistoryAnalyzerDefaultObjectState initWithOriginalChange:]


NSSQLAttributeTrigger : NSObject <NSSQLAttributeExtension>
 @property  NSSQLEntity *entity
 @property  NSSQLAttribute *attribute
 @property  NSString *predicateString
 @property  NSPredicate *predicate
 @property  NSSQLRelationship *relationship
 @property  NSSQLEntity *destinationEntity
 @property  NSArray *destinationAttributes
 @property  NSString *toManyInnerFetchWhereClause
 @property  NSString *toManyDecrementWhenClause
 @property  NSString *toManyIncrementWhenClause
 @property  NSString *ofClause
 @property  NSString *oldMatchingClause
 @property  NSString *newMatchingClause
 @property  NSString *columnChangedClause
 @property  NSArray *insertSQLStrings
 @property  NSArray *dropSQLStrings
 @property  NSArray *bulkUpdateSQLStrings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NSSQLAttributeTrigger dealloc]
  -[NSSQLAttributeTrigger predicate]
  -[NSSQLAttributeTrigger attribute]
  -[NSSQLAttributeTrigger entity]
  -[NSSQLAttributeTrigger validate:]
  -[NSSQLAttributeTrigger destinationEntity]
  -[NSSQLAttributeTrigger relationship]
  -[NSSQLAttributeTrigger predicateString]
  -[NSSQLAttributeTrigger parseTriggerPredicateError:]
  -[NSSQLAttributeTrigger validatePredicate:error:]
  -[NSSQLAttributeTrigger createSQLStrings:]
  -[NSSQLAttributeTrigger validateComparisonPredicate:error:]
  -[NSSQLAttributeTrigger isSupportedOperatorType:]
  -[NSSQLAttributeTrigger inverseOperatorSymbolForOperator:]
  -[NSSQLAttributeTrigger initWithObjectFromUserInfo:onAttributeNamed:onEntity:]
  -[NSSQLAttributeTrigger isEqualToExtension:]
  -[NSSQLAttributeTrigger insertSQLStrings]
  -[NSSQLAttributeTrigger dropSQLStrings]
  -[NSSQLAttributeTrigger bulkUpdateSQLStrings]
  -[NSSQLAttributeTrigger toManyDecrementWhenClause]
  -[NSSQLAttributeTrigger toManyIncrementWhenClause]
  -[NSSQLAttributeTrigger toManyInnerFetchWhereClause]
  -[NSSQLAttributeTrigger ofClause]
  -[NSSQLAttributeTrigger oldMatchingClause]
  -[NSSQLAttributeTrigger newMatchingClause]
  -[NSSQLAttributeTrigger columnChangedClause]
  -[NSSQLAttributeTrigger destinationAttributes]


NSBatchUpdateRequest : NSPersistentStoreRequest <NSPredicatedStoreRequest>
 @property  BOOL shouldPerformSecureOperation
 @property  NSString *entityName
 @property  NSEntityDescription *entity
 @property  NSPredicate *predicate
 @property  BOOL includesSubentities
 @property  unsigned long resultType
 @property  NSDictionary *propertiesToUpdate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSBatchUpdateRequest decodeFromXPCArchive:withContext:]
  +[NSBatchUpdateRequest batchUpdateRequestWithEntityName:]

  // instance methods
  -[NSBatchUpdateRequest init]
  -[NSBatchUpdateRequest dealloc]
  -[NSBatchUpdateRequest setPredicate:]
  -[NSBatchUpdateRequest predicate]
  -[NSBatchUpdateRequest resultType]
  -[NSBatchUpdateRequest initWithEntityName:]
  -[NSBatchUpdateRequest setResultType:]
  -[NSBatchUpdateRequest entityName]
  -[NSBatchUpdateRequest entity]
  -[NSBatchUpdateRequest setIncludesSubentities:]
  -[NSBatchUpdateRequest requestType]
  -[NSBatchUpdateRequest encodeForXPC]
  -[NSBatchUpdateRequest _secureOperation]
  -[NSBatchUpdateRequest _setSecureOperation:]
  -[NSBatchUpdateRequest propertiesToUpdate]
  -[NSBatchUpdateRequest includesSubentities]
  -[NSBatchUpdateRequest setPropertiesToUpdate:]
  -[NSBatchUpdateRequest _resolveEntityWithContext:]
  -[NSBatchUpdateRequest initWithEntity:]
  -[NSBatchUpdateRequest setShouldPerformSecureOperation:]
  -[NSBatchUpdateRequest shouldPerformSecureOperation]
  -[NSBatchUpdateRequest _newValidatedPropertiesToUpdate:error:]
  -[NSBatchUpdateRequest _setValidatedPropertiesToUpdate:]


NSBatchUpdateResult : NSPersistentStoreResult
 @property  id result
 @property  unsigned long resultType

  // instance methods
  -[NSBatchUpdateResult dealloc]
  -[NSBatchUpdateResult result]
  -[NSBatchUpdateResult resultType]
  -[NSBatchUpdateResult initWithResultType:andObject:]
  -[NSBatchUpdateResult initWithSubresults:]


NSPersistentStoreMap : NSObject
  // class methods
  +[NSPersistentStoreMap initialize]

  // instance methods
  -[NSPersistentStoreMap dealloc]
  -[NSPersistentStoreMap dataForKey:]
  -[NSPersistentStoreMap initWithStore:]
  -[NSPersistentStoreMap store]
  -[NSPersistentStoreMap setMetadata:]
  -[NSPersistentStoreMap metadata]
  -[NSPersistentStoreMap configurationName]
  -[NSPersistentStoreMap _updatedMetadataWithSeed:includeVersioning:]
  -[NSPersistentStoreMap _setMetadata:]
  -[NSPersistentStoreMap removeObject:objectIDMap:]
  -[NSPersistentStoreMap addObject:objectIDMap:]
  -[NSPersistentStoreMap updateObject:objectIDMap:]
  -[NSPersistentStoreMap retainedObjectIDsForRelationship:forObjectID:]
  -[NSPersistentStoreMap handleFetchRequest:]
  -[NSPersistentStoreMap nextPK64]
  -[NSPersistentStoreMap databaseUUID]
  -[NSPersistentStoreMap setDatabaseUUID:]
  -[NSPersistentStoreMap externalMapping]
  -[NSPersistentStoreMap _cheatAndLookAtCurrentValueOfnextPK64]
  -[NSPersistentStoreMap _storeMetadataForSaving]


NSPersistentCloudKitContainer : NSPersistentContainer
  // class methods
  +[NSPersistentCloudKitContainer discoverDefaultContainerIdentifier]

  // instance methods
  -[NSPersistentCloudKitContainer initWithName:managedObjectModel:]
  -[NSPersistentCloudKitContainer setPersistentStoreDescriptions:]
  -[NSPersistentCloudKitContainer _loadStoreDescriptons:withCompletionHandler:]
  -[NSPersistentCloudKitContainer recordForManagedObjectID:]
  -[NSPersistentCloudKitContainer recordsForManagedObjectIDs:]
  -[NSPersistentCloudKitContainer initializeCloudKitSchemaWithOptions:error:]
  -[NSPersistentCloudKitContainer recordIDForManagedObjectID:]
  -[NSPersistentCloudKitContainer recordIDsForManagedObjectIDs:]


_PFRequestExecutor : NSObject
 @property  NSObject<OS_dispatch_group> *requestGroup

  // instance methods
  -[_PFRequestExecutor init]
  -[_PFRequestExecutor dealloc]
  -[_PFRequestExecutor wait]
  -[_PFRequestExecutor requestFinished]
  -[_PFRequestExecutor executeRequest:inContext:error:]
  -[_PFRequestExecutor requestGroup]


NSPropertyDescription : NSObject <NSSecureCoding, NSCoding, NSCopying>
 @property  NSEntityDescription *entity
 @property  NSString *name
 @property  BOOL optional
 @property  BOOL transient
 @property  NSArray *validationPredicates
 @property  NSArray *validationWarnings
 @property  NSDictionary *userInfo
 @property  BOOL indexed
 @property  NSData *versionHash
 @property  NSString *versionHashModifier
 @property  BOOL indexedBySpotlight
 @property  BOOL storedInExternalRecord
 @property  NSString *renamingIdentifier

  // class methods
  +[NSPropertyDescription initialize]
  +[NSPropertyDescription supportsSecureCoding]

  // instance methods
  -[NSPropertyDescription init]
  -[NSPropertyDescription dealloc]
  -[NSPropertyDescription isEqual:]
  -[NSPropertyDescription name]
  -[NSPropertyDescription copyWithZone:]
  -[NSPropertyDescription userInfo]
  -[NSPropertyDescription encodeWithCoder:]
  -[NSPropertyDescription initWithCoder:]
  -[NSPropertyDescription setName:]
  -[NSPropertyDescription setUserInfo:]
  -[NSPropertyDescription entity]
  -[NSPropertyDescription isOptional]
  -[NSPropertyDescription _isOrdered]
  -[NSPropertyDescription setReadOnly:]
  -[NSPropertyDescription isTransient]
  -[NSPropertyDescription _initWithName:]
  -[NSPropertyDescription _isEditable]
  -[NSPropertyDescription _propertyType]
  -[NSPropertyDescription _isRelationship]
  -[NSPropertyDescription _isFileBackedFuture]
  -[NSPropertyDescription _storeBinaryDataExternally]
  -[NSPropertyDescription isReadOnly]
  -[NSPropertyDescription setOptional:]
  -[NSPropertyDescription _entitysReferenceID]
  -[NSPropertyDescription renamingIdentifier]
  -[NSPropertyDescription _isSchemaEqual:]
  -[NSPropertyDescription versionHash]
  -[NSPropertyDescription _underlyingProperty]
  -[NSPropertyDescription isIndexed]
  -[NSPropertyDescription _extraIVars]
  -[NSPropertyDescription setIndexed:]
  -[NSPropertyDescription _throwIfNotEditable]
  -[NSPropertyDescription _hasMinValueInExtraIvars]
  -[NSPropertyDescription _hasMaxValueInExtraIvars]
  -[NSPropertyDescription validationPredicates]
  -[NSPropertyDescription validationWarnings]
  -[NSPropertyDescription _preserveValueOnDelete]
  -[NSPropertyDescription _isTriggerBacked]
  -[NSPropertyDescription _rawValidationPredicates]
  -[NSPropertyDescription _rawValidationWarnings]
  -[NSPropertyDescription _comparePredicatesAndWarnings:]
  -[NSPropertyDescription _createCachesAndOptimizeState]
  -[NSPropertyDescription _replaceValidationPredicates:andWarnings:]
  -[NSPropertyDescription _nonPredicateValidateValue:forKey:inObject:error:]
  -[NSPropertyDescription _versionHash:inStyle:]
  -[NSPropertyDescription _appendPropertyFieldsToData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:]
  -[NSPropertyDescription _epsilonEquals:rhs:withFlags:]
  -[NSPropertyDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]
  -[NSPropertyDescription isIndexedBySpotlight]
  -[NSPropertyDescription _initializeExtraIVars]
  -[NSPropertyDescription versionHashModifier]
  -[NSPropertyDescription _setEntity:]
  -[NSPropertyDescription setRenamingIdentifier:]
  -[NSPropertyDescription setVersionHashModifier:]
  -[NSPropertyDescription _setEntityAndMaintainIndices:]
  -[NSPropertyDescription setElementID:]
  -[NSPropertyDescription elementID]
  -[NSPropertyDescription isStoredInExternalRecord]
  -[NSPropertyDescription _setEntitysReferenceID:]
  -[NSPropertyDescription _stripForMigration]
  -[NSPropertyDescription _restoreValidation]
  -[NSPropertyDescription _skipValidation]
  -[NSPropertyDescription _isToManyRelationship]
  -[NSPropertyDescription setTransient:]
  -[NSPropertyDescription setValidationPredicates:withValidationWarnings:]
  -[NSPropertyDescription setIndexedBySpotlight:]
  -[NSPropertyDescription setStoredInExternalRecord:]
  -[NSPropertyDescription _setOrdered:]
  -[NSPropertyDescription isSpotlightIndexed]
  -[NSPropertyDescription setSpotlightIndexed:]
  -[NSPropertyDescription isStoredInTruthFile]
  -[NSPropertyDescription setStoredInTruthFile:]
  -[NSPropertyDescription isStoredInTruth]
  -[NSPropertyDescription setStoredInTruth:]


NSFetchedResultsController : NSObject
 @property  NSFetchRequest *fetchRequest
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSString *sectionNameKeyPath
 @property  NSString *cacheName
 @property  <NSFetchedResultsControllerDelegate> *delegate
 @property  NSArray *fetchedObjects
 @property  NSArray *sectionIndexTitles
 @property  NSArray *sections

  // class methods
  +[NSFetchedResultsController initialize]
  +[NSFetchedResultsController _CoreDataSectionCachesPath]
  +[NSFetchedResultsController deleteCacheWithName:]
  +[NSFetchedResultsController _insertIndexForObject:inArray:lowIdx:highIdx:sortDescriptors:]

  // instance methods
  -[NSFetchedResultsController dealloc]
  -[NSFetchedResultsController delegate]
  -[NSFetchedResultsController setDelegate:]
  -[NSFetchedResultsController fetchRequest]
  -[NSFetchedResultsController managedObjectContext]
  -[NSFetchedResultsController sections]
  -[NSFetchedResultsController _sections]
  -[NSFetchedResultsController sectionIndexTitles]
  -[NSFetchedResultsController _keyPathContainsNonPersistedProperties:]
  -[NSFetchedResultsController _managedObjectContextDidSave:]
  -[NSFetchedResultsController _managedObjectContextDidChange:]
  -[NSFetchedResultsController _managedObjectContextDidChangeObjectIDs:]
  -[NSFetchedResultsController _managedObjectContextDidMutateObjectIDs:]
  -[NSFetchedResultsController _restoreCachedSectionInfo]
  -[NSFetchedResultsController _computeSectionInfo:error:]
  -[NSFetchedResultsController _core_managedObjectContextDidSave:]
  -[NSFetchedResultsController _recursivePerformBlockAndWait:withContext:]
  -[NSFetchedResultsController _conditionallyDispatchSnapshotToDelegate:]
  -[NSFetchedResultsController _sectionNameForObject:]
  -[NSFetchedResultsController initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:]
  -[NSFetchedResultsController performFetch:]
  -[NSFetchedResultsController _fetchedObjects]
  -[NSFetchedResultsController fetchedObjects]
  -[NSFetchedResultsController objectAtIndexPath:]
  -[NSFetchedResultsController indexPathForObject:]
  -[NSFetchedResultsController sectionIndexTitleForSectionName:]
  -[NSFetchedResultsController sectionForSectionIndexTitle:atIndex:]
  -[NSFetchedResultsController sectionNameKeyPath]
  -[NSFetchedResultsController cacheName]
  -[NSFetchedResultsController _sectionCachePath]
  -[NSFetchedResultsController _computeSectionInfoWithGroupBy:error:]
  -[NSFetchedResultsController _resolveSectionIndexTitleForSectionName:]
  -[NSFetchedResultsController _makeMutableFetchedObjects]
  -[NSFetchedResultsController _indexOfFetchedID:]
  -[NSFetchedResultsController _objectInResults:]
  -[NSFetchedResultsController _createNewSectionForObject:]
  -[NSFetchedResultsController _insertObjectInFetchedObjects:atIndex:]
  -[NSFetchedResultsController _updateSectionOffsetsStartingAtSection:]
  -[NSFetchedResultsController _indexPathForIndex:]
  -[NSFetchedResultsController _sectionNumberForIndex:]
  -[NSFetchedResultsController _removeObjectInFetchedObjectsAtIndex:]
  -[NSFetchedResultsController _updateFetchedObjectsWithDeleteChange:]
  -[NSFetchedResultsController _updateFetchedObjectsWithInsertChange:]
  -[NSFetchedResultsController _fetchedObjectsArrayOfObjectIDs]
  -[NSFetchedResultsController _preprocessInsertedObjects:insertsInfo:newSectionNames:]
  -[NSFetchedResultsController _preprocessDeletedObjects:deletesInfo:sectionsWithDeletes:]
  -[NSFetchedResultsController _preprocessUpdatedObjects:insertsInfo:deletesInfo:updatesInfo:sectionsWithDeletes:newSectionNames:treatAsRefreshes:]
  -[NSFetchedResultsController _updateFetchedObjectsWithInsertedObjects:deletedObjects:updatedObjects:]
  -[NSFetchedResultsController _lowerMoveOperationsToUpdatesForSection:withInsertedObjects:deletedObjects:updatedObjects:]
  -[NSFetchedResultsController _core_managedObjectContextDidChange:]
  -[NSFetchedResultsController _appendAffectedStoreInfoToData:adjustedOffset:]
  -[NSFetchedResultsController _updateCachedStoreInfo]
  -[NSFetchedResultsController _hasFetchedObjects]
  -[NSFetchedResultsController _dumpSectionInfo]


NSPropertyMapping : NSObject <NSSecureCoding>
 @property  NSString *name
 @property  NSExpression *valueExpression
 @property  NSDictionary *userInfo

  // class methods
  +[NSPropertyMapping initialize]
  +[NSPropertyMapping supportsSecureCoding]

  // instance methods
  -[NSPropertyMapping init]
  -[NSPropertyMapping dealloc]
  -[NSPropertyMapping isEqual:]
  -[NSPropertyMapping name]
  -[NSPropertyMapping copyWithZone:]
  -[NSPropertyMapping userInfo]
  -[NSPropertyMapping encodeWithCoder:]
  -[NSPropertyMapping initWithCoder:]
  -[NSPropertyMapping setName:]
  -[NSPropertyMapping setUserInfo:]
  -[NSPropertyMapping isEditable]
  -[NSPropertyMapping _setIsEditable:]
  -[NSPropertyMapping setValueExpression:]
  -[NSPropertyMapping _setPropertyTransforms:]
  -[NSPropertyMapping _setTransformValidations:]
  -[NSPropertyMapping _throwIfNotEditable]
  -[NSPropertyMapping _createCachesAndOptimizeState]
  -[NSPropertyMapping valueExpression]
  -[NSPropertyMapping _initWithDestinationName:valueExpression:]
  -[NSPropertyMapping _propertyTransforms]
  -[NSPropertyMapping _transformValidations]
  -[NSPropertyMapping initWithName:valueExpression:]


NSPropertyStoreMapping : NSStoreMapping
  // instance methods
  -[NSPropertyStoreMapping dealloc]
  -[NSPropertyStoreMapping isEqual:]
  -[NSPropertyStoreMapping initWithProperty:]
  -[NSPropertyStoreMapping property]
  -[NSPropertyStoreMapping setProperty:]


NSPropertyTransform : NSObject <NSSecureCoding>
 @property  NSString *propertyName
 @property  NSExpression *valueExpression
 @property  NSPropertyTransform *prerequisiteTransform
 @property  BOOL replaceMissingValueOnly

  // class methods
  +[NSPropertyTransform supportsSecureCoding]

  // instance methods
  -[NSPropertyTransform dealloc]
  -[NSPropertyTransform isEqual:]
  -[NSPropertyTransform copyWithZone:]
  -[NSPropertyTransform encodeWithCoder:]
  -[NSPropertyTransform initWithCoder:]
  -[NSPropertyTransform propertyName]
  -[NSPropertyTransform initWithPropertyName:valueExpression:]
  -[NSPropertyTransform setPrerequisiteTransform:]
  -[NSPropertyTransform setReplaceMissingValueOnly:]
  -[NSPropertyTransform setValueExpression:]
  -[NSPropertyTransform valueExpression]
  -[NSPropertyTransform setPropertyName:]
  -[NSPropertyTransform prerequisiteTransform]
  -[NSPropertyTransform replaceMissingValueOnly]


NSRelationshipDescription : NSPropertyDescription
 @property  NSEntityDescription *destinationEntity
 @property  NSRelationshipDescription *inverseRelationship
 @property  unsigned long maxCount
 @property  unsigned long minCount
 @property  unsigned long deleteRule
 @property  BOOL toMany
 @property  NSData *versionHash
 @property  BOOL ordered

  // class methods
  +[NSRelationshipDescription initialize]
  +[NSRelationshipDescription supportsSecureCoding]

  // instance methods
  -[NSRelationshipDescription init]
  -[NSRelationshipDescription dealloc]
  -[NSRelationshipDescription isEqual:]
  -[NSRelationshipDescription copyWithZone:]
  -[NSRelationshipDescription encodeWithCoder:]
  -[NSRelationshipDescription initWithCoder:]
  -[NSRelationshipDescription isOrdered]
  -[NSRelationshipDescription setOrdered:]
  -[NSRelationshipDescription _initWithName:]
  -[NSRelationshipDescription _propertyType]
  -[NSRelationshipDescription _isRelationship]
  -[NSRelationshipDescription destinationEntity]
  -[NSRelationshipDescription isToMany]
  -[NSRelationshipDescription inverseRelationship]
  -[NSRelationshipDescription deleteRule]
  -[NSRelationshipDescription setMaxCount:]
  -[NSRelationshipDescription setDestinationEntity:]
  -[NSRelationshipDescription setInverseRelationship:]
  -[NSRelationshipDescription setDeleteRule:]
  -[NSRelationshipDescription _isSchemaEqual:]
  -[NSRelationshipDescription versionHash]
  -[NSRelationshipDescription minCount]
  -[NSRelationshipDescription isIndexed]
  -[NSRelationshipDescription _createCachesAndOptimizeState]
  -[NSRelationshipDescription _nonPredicateValidateValue:forKey:inObject:error:]
  -[NSRelationshipDescription _versionHash:inStyle:]
  -[NSRelationshipDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]
  -[NSRelationshipDescription maxCount]
  -[NSRelationshipDescription _isToManyRelationship]
  -[NSRelationshipDescription _updateInverse:]
  -[NSRelationshipDescription setMinCount:]
  -[NSRelationshipDescription _versionHash:inStyle:proxyContext:]
  -[NSRelationshipDescription _validateValuesAreOfDestinationEntity:source:]
  -[NSRelationshipDescription _setLazyDestinationEntityName:]


NSRelationshipStoreMapping : NSPropertyStoreMapping
  // instance methods
  -[NSRelationshipStoreMapping dealloc]
  -[NSRelationshipStoreMapping isEqual:]
  -[NSRelationshipStoreMapping relationship]
  -[NSRelationshipStoreMapping columnDefinitions]
  -[NSRelationshipStoreMapping constraintDefinitions]
  -[NSRelationshipStoreMapping setDestinationEntityExternalName:]
  -[NSRelationshipStoreMapping setForeignKeys:]
  -[NSRelationshipStoreMapping setJoins:]
  -[NSRelationshipStoreMapping destinationEntityExternalName]
  -[NSRelationshipStoreMapping foreignKeys]
  -[NSRelationshipStoreMapping joins]
  -[NSRelationshipStoreMapping joinSemantic]
  -[NSRelationshipStoreMapping setJoinSemantic:]


PFCloudKitHistoryAnalyzerOptions : PFHistoryAnalyzerOptions
 @property  CKRecordZone *recordZone
 @property  BOOL includePrivateTransactions

  // instance methods
  -[PFCloudKitHistoryAnalyzerOptions dealloc]
  -[PFCloudKitHistoryAnalyzerOptions copyWithZone:]
  -[PFCloudKitHistoryAnalyzerOptions recordZone]
  -[PFCloudKitHistoryAnalyzerOptions setRecordZone:]
  -[PFCloudKitHistoryAnalyzerOptions initWithRecordZone:]
  -[PFCloudKitHistoryAnalyzerOptions includePrivateTransactions]
  -[PFCloudKitHistoryAnalyzerOptions setIncludePrivateTransactions:]


NSSaveChangesRequest : NSPersistentStoreRequest
 @property  NSSet *insertedObjects
 @property  NSSet *updatedObjects
 @property  NSSet *deletedObjects
 @property  NSSet *lockedObjects

  // class methods
  +[NSSaveChangesRequest initialize]

  // instance methods
  -[NSSaveChangesRequest init]
  -[NSSaveChangesRequest dealloc]
  -[NSSaveChangesRequest hasChanges]
  -[NSSaveChangesRequest insertedObjects]
  -[NSSaveChangesRequest requestType]
  -[NSSaveChangesRequest _secureOperation]
  -[NSSaveChangesRequest _setSecureOperation:]
  -[NSSaveChangesRequest updatedObjects]
  -[NSSaveChangesRequest lockedObjects]
  -[NSSaveChangesRequest deletedObjects]
  -[NSSaveChangesRequest _setChangedObjectIDsNotification:]
  -[NSSaveChangesRequest initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:]
  -[NSSaveChangesRequest _retryHandlerCount]
  -[NSSaveChangesRequest _setRetryHandlerCount:]
  -[NSSaveChangesRequest _changedObjectIDsNotification]
  -[NSSaveChangesRequest setDeletedObjects:]


NSSQLAliasGenerator : NSObject
  // instance methods
  -[NSSQLAliasGenerator init]
  -[NSSQLAliasGenerator dealloc]
  -[NSSQLAliasGenerator generateVariableAlias]
  -[NSSQLAliasGenerator initWithNestingLevel:]
  -[NSSQLAliasGenerator generateTableAlias]
  -[NSSQLAliasGenerator generateSubqueryVariableAlias]
  -[NSSQLAliasGenerator generateTempTableName]


CDDCloudKitServer : NSObject <NSXPCListenerDelegate, CDDCloudKitServerProxy, _PFCoreDataCloudKitServer>
 @property  NSPersistentContainer *metadataContainer
 @property  NSObject<OS_dispatch_group> *initializationGroup
 @property  BOOL initialized
 @property  NSError *lastInitializationError
 @property  NSXPCListener *listener
 @property  CDDCloudKitServerConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CDDCloudKitServer checkAndCreateDirectoryAtURL:wipeIfExists:error:]

  // instance methods
  -[CDDCloudKitServer dealloc]
  -[CDDCloudKitServer initialized]
  -[CDDCloudKitServer listener]
  -[CDDCloudKitServer listener:shouldAcceptNewConnection:]
  -[CDDCloudKitServer configuration]
  -[CDDCloudKitServer tearDown]
  -[CDDCloudKitServer _setUpAsync]
  -[CDDCloudKitServer handleMessage:reply:]
  -[CDDCloudKitServer _handleRegistrationMessage:]
  -[CDDCloudKitServer _handleScheduleMessage:]
  -[CDDCloudKitServer verifyFileHandle:matchesPath:error:]
  -[CDDCloudKitServer createRealPathForPath:error:]
  -[CDDCloudKitServer runActivity:completionHandler:]
  -[CDDCloudKitServer finishedActivity:withResult:inManagedObjectContext:]
  -[CDDCloudKitServer setUp]
  -[CDDCloudKitServer initWithListener:configuration:]
  -[CDDCloudKitServer metadataContainer]
  -[CDDCloudKitServer initializationGroup]
  -[CDDCloudKitServer lastInitializationError]


NSSQLAttribute : NSSQLColumn
 @property  NSSet *triggerKeys

  // instance methods
  -[NSSQLAttribute dealloc]
  -[NSSQLAttribute isFileBackedFuture]
  -[NSSQLAttribute attributeDescription]
  -[NSSQLAttribute _setIsBackedByTrigger:]
  -[NSSQLAttribute addKeyForTriggerOnRelationship:]
  -[NSSQLAttribute initWithEntity:propertyDescription:]
  -[NSSQLAttribute _sqlTypeForAttributeType:flags:]
  -[NSSQLAttribute triggerKeys]
  -[NSSQLAttribute initForReadOnlyFetchWithExpression:]
  -[NSSQLAttribute shouldIndex]
  -[NSSQLAttribute isDerivedAttribute]
  -[NSSQLAttribute isBackedByTrigger]


NSSQLBindVariable : NSObject
  // instance methods
  -[NSSQLBindVariable retainCount]
  -[NSSQLBindVariable dealloc]
  -[NSSQLBindVariable retain]
  -[NSSQLBindVariable release]
  -[NSSQLBindVariable _tryRetain]
  -[NSSQLBindVariable _isDeallocating]
  -[NSSQLBindVariable value]
  -[NSSQLBindVariable index]
  -[NSSQLBindVariable setValue:]
  -[NSSQLBindVariable setIndex:]
  -[NSSQLBindVariable sqlType]
  -[NSSQLBindVariable initWithInt64:sqlType:]
  -[NSSQLBindVariable initWithUnsignedInt:sqlType:]
  -[NSSQLBindVariable attributeDescription]
  -[NSSQLBindVariable initWithValue:sqlType:attributeDescription:]
  -[NSSQLBindVariable initWithValue:sqlType:attributeDescription:allowCoercion:]
  -[NSSQLBindVariable setInt64:]
  -[NSSQLBindVariable setUnsignedInt:]
  -[NSSQLBindVariable int64]
  -[NSSQLBindVariable unsignedInt]
  -[NSSQLBindVariable setSQLType:]
  -[NSSQLBindVariable hasObjectValue]
  -[NSSQLBindVariable allowsCoercion]


NSCloudKitMirroringFetchRecordsRequest : NSCloudKitMirroringImportRequest
 @property  NSArray *objectIDsToFetch
 @property  NSDictionary *entityNameToAttributesToFetch

  // instance methods
  -[NSCloudKitMirroringFetchRecordsRequest dealloc]
  -[NSCloudKitMirroringFetchRecordsRequest initWithOptions:completionBlock:]
  -[NSCloudKitMirroringFetchRecordsRequest _isEditable]
  -[NSCloudKitMirroringFetchRecordsRequest throwNotEditable:]
  -[NSCloudKitMirroringFetchRecordsRequest validateForUseWithStore:error:]
  -[NSCloudKitMirroringFetchRecordsRequest _entityNameToAttributeNamesToFetch]
  -[NSCloudKitMirroringFetchRecordsRequest entityNameToAttributesToFetch]
  -[NSCloudKitMirroringFetchRecordsRequest setEntityNameToAttributesToFetch:]
  -[NSCloudKitMirroringFetchRecordsRequest setEntityNameToAttributeNamesToFetch:]
  -[NSCloudKitMirroringFetchRecordsRequest setObjectIDsToFetch:]
  -[NSCloudKitMirroringFetchRecordsRequest objectIDsToFetch]


PFUbiquityLocationStatus : NSObject
 @property  BOOL isLive
 @property  BOOL isDeleted
 @property  BOOL isDownloaded
 @property  BOOL isDownloading
 @property  BOOL isUploaded
 @property  BOOL isUploading
 @property  BOOL isScheduled
 @property  BOOL isImported
 @property  BOOL isExported
 @property  BOOL isFailed
 @property  long long numBytes
 @property  NSError *error
 @property  PFUbiquityLocation *location
 @property  long long numNotifications

  // instance methods
  -[PFUbiquityLocationStatus init]
  -[PFUbiquityLocationStatus dealloc]
  -[PFUbiquityLocationStatus error]
  -[PFUbiquityLocationStatus numBytes]
  -[PFUbiquityLocationStatus location]
  -[PFUbiquityLocationStatus isFailed]
  -[PFUbiquityLocationStatus isScheduled]
  -[PFUbiquityLocationStatus initWithLocation:]
  -[PFUbiquityLocationStatus isDownloaded]
  -[PFUbiquityLocationStatus isUploaded]
  -[PFUbiquityLocationStatus isUploading]
  -[PFUbiquityLocationStatus isDownloading]
  -[PFUbiquityLocationStatus isLive]
  -[PFUbiquityLocationStatus isDeleted]
  -[PFUbiquityLocationStatus statusDidChange]
  -[PFUbiquityLocationStatus checkFileURLState]
  -[PFUbiquityLocationStatus logWasImported]
  -[PFUbiquityLocationStatus logWasScheduled]
  -[PFUbiquityLocationStatus logImportWasCancelled]
  -[PFUbiquityLocationStatus logWasExported]
  -[PFUbiquityLocationStatus encounteredError:]
  -[PFUbiquityLocationStatus recoveredFromError]
  -[PFUbiquityLocationStatus setIsDownloading:]
  -[PFUbiquityLocationStatus isImported]
  -[PFUbiquityLocationStatus isExported]
  -[PFUbiquityLocationStatus numNotifications]


NSCKRecordZoneMetadata : NSManagedObject
 @property  NSNumber *hasRecordZoneNum
 @property  NSNumber *hasSubscriptionNum
 @property  NSString *ckRecordZoneName
 @property  NSString *ckOwnerName
 @property  CKServerChangeToken *currentChangeToken
 @property  NSCKDatabaseMetadata *database
 @property  NSDate *lastFetchDate
 @property  BOOL hasRecordZone
 @property  BOOL hasSubscription
 @property  NSSet *records
 @property  NSSet *mirroredRelationships
 @property  BOOL hasChanges

  // class methods
  +[NSCKRecordZoneMetadata entityPath]
  +[NSCKRecordZoneMetadata zoneMetadataForZoneID:inDatabaseWithScope:forStore:inContext:error:]

  // instance methods
  -[NSCKRecordZoneMetadata createRecordZoneID]
  -[NSCKRecordZoneMetadata hasRecordZone]
  -[NSCKRecordZoneMetadata setHasRecordZone:]
  -[NSCKRecordZoneMetadata hasSubscription]
  -[NSCKRecordZoneMetadata setHasSubscription:]


NSSQLRTreeIndexQueryIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLRTreeIndexQueryIntermediate dealloc]
  -[NSSQLRTreeIndexQueryIntermediate generateSQLStringInContext:]
  -[NSSQLRTreeIndexQueryIntermediate _validateCollection:context:]
  -[NSSQLRTreeIndexQueryIntermediate _validateExpression:context:]
  -[NSSQLRTreeIndexQueryIntermediate initForIndexNamed:onEntity:properties:ranges:inScope:]


NSSQLColumn : NSSQLProperty
  // instance methods
  -[NSSQLColumn dealloc]
  -[NSSQLColumn columnName]
  -[NSSQLColumn sqlType]
  -[NSSQLColumn slot]
  -[NSSQLColumn initWithEntity:propertyDescription:]
  -[NSSQLColumn _setSQLType:]
  -[NSSQLColumn initForReadOnlyFetching]
  -[NSSQLColumn setAllowAliasing:]
  -[NSSQLColumn _setColumnName:]
  -[NSSQLColumn copyValuesForReadOnlyFetch:]
  -[NSSQLColumn allowAliasing]
  -[NSSQLColumn initWithColumnName:sqlType:]
  -[NSSQLColumn roughSizeEstimate]
  -[NSSQLColumn fetchIndex]
  -[NSSQLColumn _setFetchIndex:]
  -[NSSQLColumn _setSlotIfDefault:]
  -[NSSQLColumn cloneForReadOnlyFetching]


NSSQLCompoundWhereIntermediate : NSSQLWhereIntermediate
  // instance methods
  -[NSSQLCompoundWhereIntermediate dealloc]
  -[NSSQLCompoundWhereIntermediate generateSQLStringInContext:]
  -[NSSQLCompoundWhereIntermediate initWithPredicate:inScope:inContext:]
  -[NSSQLCompoundWhereIntermediate disambiguatingEntity]
  -[NSSQLCompoundWhereIntermediate disambiguationKeypath]
  -[NSSQLCompoundWhereIntermediate disambiguationKeypathHasToMany]
  -[NSSQLCompoundWhereIntermediate _generateMulticlauseStringInContext:]
  -[NSSQLCompoundWhereIntermediate isOrScoped]
  -[NSSQLCompoundWhereIntermediate setDisambiguatingEntity:withKeypath:hasToMany:]


CDDCloudKitMetadataModel : NSObject
  // class methods
  +[CDDCloudKitMetadataModel addAttributes:toPropertiesOfEntity:]
  +[CDDCloudKitMetadataModel addRelationships:toPropertiesOfEntity:]
  +[CDDCloudKitMetadataModel newMetadataModel]


NSSQLConstantValueIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLConstantValueIntermediate dealloc]
  -[NSSQLConstantValueIntermediate initWithConstantValue:inScope:context:]
  -[NSSQLConstantValueIntermediate generateSQLStringInContext:]
  -[NSSQLConstantValueIntermediate initWithConstantValue:ofType:inScope:context:]
  -[NSSQLConstantValueIntermediate propertyAtEndOfKeyPathExpression:]
  -[NSSQLConstantValueIntermediate sqlTypeForProperty:]
  -[NSSQLConstantValueIntermediate _addBindVarForConstId:ofType:inContext:]
  -[NSSQLConstantValueIntermediate _addBindVarForConstVal1:inContext:]


PFCloudKitHistoryAnalyzer : PFHistoryAnalyzer
 @property  NSManagedObjectContext *managedObjectContext

  // class methods
  +[PFCloudKitHistoryAnalyzer isPrivateTransaction:]
  +[PFCloudKitHistoryAnalyzer isPrivateTransactionAuthor:]
  +[PFCloudKitHistoryAnalyzer isPrivateContextName:]

  // instance methods
  -[PFCloudKitHistoryAnalyzer dealloc]
  -[PFCloudKitHistoryAnalyzer managedObjectContext]
  -[PFCloudKitHistoryAnalyzer initWithOptions:managedObjectContext:]
  -[PFCloudKitHistoryAnalyzer processTransaction:withContext:error:]
  -[PFCloudKitHistoryAnalyzer cloudKitAnalyzerOptions]
  -[PFCloudKitHistoryAnalyzer instantiateNewAnalyzerContext]


NSSQLBatchUpdateRequestContext : NSSQLStoreRequestContext
 @property  NSBatchUpdateRequest *request
 @property  NSSQLiteStatement *updateStatement

  // instance methods
  -[NSSQLBatchUpdateRequestContext dealloc]
  -[NSSQLBatchUpdateRequestContext request]
  -[NSSQLBatchUpdateRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLBatchUpdateRequestContext isWritingRequest]
  -[NSSQLBatchUpdateRequestContext executeRequestCore:]
  -[NSSQLBatchUpdateRequestContext executePrologue]
  -[NSSQLBatchUpdateRequestContext tempTableName]
  -[NSSQLBatchUpdateRequestContext createObjectIDCaptureStatements]
  -[NSSQLBatchUpdateRequestContext dropObjectIDCaptureStatements]
  -[NSSQLBatchUpdateRequestContext fetchRequestDescribingObjectsToUpdate]
  -[NSSQLBatchUpdateRequestContext _createUpdateStatement]
  -[NSSQLBatchUpdateRequestContext updateStatement]
  -[NSSQLBatchUpdateRequestContext createFetchRequestContextForObjectsToUpdate]


NSSQLCore : NSPersistentStore <NSFilePresenter, NSSQLModelProvider>
 @property  NSSQLModel *model
 @property  BOOL isInitialized
 @property  NSDictionary *ancillaryModels
 @property  BOOL remoteStoresDidChange
 @property  BOOL isInMemory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes

  // class methods
  +[NSSQLCore initialize]
  +[NSSQLCore newStringFrom:usingUnicodeTransforms:]
  +[NSSQLCore cachedModelForPersistentStoreWithURL:options:error:]
  +[NSSQLCore debugDefault]
  +[NSSQLCore bufferedAllocationsOverride]
  +[NSSQLCore setDebugDefault:]
  +[NSSQLCore coloredLoggingDefault]
  +[NSSQLCore useConcurrentFetching]
  +[NSSQLCore metadataForPersistentStoreWithURL:error:]
  +[NSSQLCore metadataForPersistentStoreWithURL:options:error:]
  +[NSSQLCore setMetadata:forPersistentStoreWithURL:options:error:]
  +[NSSQLCore setMetadata:forPersistentStoreWithURL:error:]
  +[NSSQLCore migrationManagerClass]
  +[NSSQLCore rowCacheClass]
  +[NSSQLCore _replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:]
  +[NSSQLCore _destroyPersistentStoreAtURL:options:error:]
  +[NSSQLCore _rekeyPersistentStoreAtURL:options:withKey:error:]
  +[NSSQLCore _figureOutWhereExternalReferencesEndedUpRelativeTo:]
  +[NSSQLCore dropPersistentHistoryforPersistentStoreWithURL:options:error:]
  +[NSSQLCore _databaseKeyFromValue:]
  +[NSSQLCore databaseKeyFromOptionsDictionary:]
  +[NSSQLCore sanityCheckFileAtURL:options:error:]
  +[NSSQLCore setColoredLoggingDefault:]

  // instance methods
  -[NSSQLCore dealloc]
  -[NSSQLCore type]
  -[NSSQLCore identifier]
  -[NSSQLCore setIdentifier:]
  -[NSSQLCore setURL:]
  -[NSSQLCore presentedItemURL]
  -[NSSQLCore presentedItemOperationQueue]
  -[NSSQLCore accommodatePresentedItemDeletionWithCompletionHandler:]
  -[NSSQLCore model]
  -[NSSQLCore setMetadata:]
  -[NSSQLCore metadata]
  -[NSSQLCore load:]
  -[NSSQLCore initWithPersistentStoreCoordinator:configurationName:URL:options:]
  -[NSSQLCore _useModel:]
  -[NSSQLCore adapter]
  -[NSSQLCore objectIDFactoryForSQLEntity:]
  -[NSSQLCore fileBackedFuturesDirectory]
  -[NSSQLCore loadMetadata:]
  -[NSSQLCore removeRowCacheForGenerationWithIdentifier:]
  -[NSSQLCore rowCacheForGeneration:]
  -[NSSQLCore newValuesForObjectWithID:withContext:error:]
  -[NSSQLCore willRemoveFromPersistentStoreCoordinator:]
  -[NSSQLCore supportsConcurrentRequestHandling]
  -[NSSQLCore supportsGenerationalQuerying]
  -[NSSQLCore currentQueryGeneration]
  -[NSSQLCore freeQueryGenerationWithIdentifier:]
  -[NSSQLCore reopenQueryGenerationWithIdentifier:error:]
  -[NSSQLCore managedObjectContextDidRegisterObjectsWithIDs:generation:]
  -[NSSQLCore managedObjectContextDidUnregisterObjectsWithIDs:generation:]
  -[NSSQLCore executeRequest:withContext:error:]
  -[NSSQLCore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSSQLCore obtainPermanentIDsForObjects:error:]
  -[NSSQLCore ancillaryModels]
  -[NSSQLCore ancillarySQLModels]
  -[NSSQLCore objectIDFactoryForEntity:]
  -[NSSQLCore entityForEntityDescription:]
  -[NSSQLCore newObjectIDForEntity:pk:]
  -[NSSQLCore currentChangeToken]
  -[NSSQLCore _objectIDClass]
  -[NSSQLCore _storeInfoForEntityDescription:]
  -[NSSQLCore _newObjectIDForEntityDescription:pk:]
  -[NSSQLCore newForeignKeyID:entity:]
  -[NSSQLCore isInMemory]
  -[NSSQLCore fileProtectionLevel]
  -[NSSQLCore externalDataReferencesDirectory]
  -[NSSQLCore externalDataLinksDirectory]
  -[NSSQLCore isUbiquitized]
  -[NSSQLCore _newRowDataForXPCFetch:variables:context:error:]
  -[NSSQLCore _cacheRows:]
  -[NSSQLCore _uncacheRows:]
  -[NSSQLCore newObjectIDSetsForToManyPrefetchingRequest:andSourceObjectIDs:orderColumnName:]
  -[NSSQLCore hasHistoryTracking]
  -[NSSQLCore _isQueryGenerationSupportActive]
  -[NSSQLCore managedObjectContextDidRegisterObjectsWithIDs:]
  -[NSSQLCore managedObjectContextDidUnregisterObjectsWithIDs:]
  -[NSSQLCore _setMetadata:]
  -[NSSQLCore _newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:]
  -[NSSQLCore _allOrderKeysForDestination:inRelationship:error:]
  -[NSSQLCore setExclusiveLockingMode:]
  -[NSSQLCore _unload:]
  -[NSSQLCore _prepareForExecuteRequest:withContext:error:]
  -[NSSQLCore _setupObserver]
  -[NSSQLCore _rebuildIndiciesSynchronously:]
  -[NSSQLCore _externalDataLinksDirectory]
  -[NSSQLCore _disconnectAllConnections]
  -[NSSQLCore _refreshTriggerValues:]
  -[NSSQLCore _ensureDatabaseMatchesModel]
  -[NSSQLCore setConnectionsAreLocal:]
  -[NSSQLCore _checkAndRepairCorrelationTables:storeVersionNumber:usingConnection:]
  -[NSSQLCore _dissectCorrelationTableCreationSQL:]
  -[NSSQLCore _collectSkewedComponents:usingConnection:]
  -[NSSQLCore _repairDatabaseCorrelationTables:brokenHashModel:storeVersionNumber:recurse:usingConnection:]
  -[NSSQLCore fetchTableNames]
  -[NSSQLCore _rebuildTriggerSchemaUsingConnection:recomputeValues:error:]
  -[NSSQLCore _rebuildRTreeTriggerSchemaUsingConnection:recomputeValues:error:]
  -[NSSQLCore _rebuildDerivedAttributeTriggerSchemaUsingConnection:recomputeValues:error:]
  -[NSSQLCore _updateToVersion640PrimaryKeyTableUsingStatements:connection:]
  -[NSSQLCore _fixPrimaryKeyTableFromEntitiesAndJoinsUsingConnection:]
  -[NSSQLCore _fixPrimaryKeyTableFromEntitiesUsingConnection:]
  -[NSSQLCore schemaValidationConnection]
  -[NSSQLCore _doBasicTableNameCheckUsingConnection:]
  -[NSSQLCore _checkAndRepairSchemaUsingConnection:]
  -[NSSQLCore _doUnboundedGrowthCheckAndConstraintUsingConnection:]
  -[NSSQLCore _cacheModelIfNecessaryUsingConnection:]
  -[NSSQLCore _checkAndRepairTriggersUsingConnection:]
  -[NSSQLCore _checkAndRepairHistoryTrackingUsingConnection:]
  -[NSSQLCore _fixPrimaryKeyTablesUsingConnection:]
  -[NSSQLCore _setMetadata:clean:]
  -[NSSQLCore dispatchRequest:withRetries:]
  -[NSSQLCore _loadAndSetMetadata]
  -[NSSQLCore notifyPostName]
  -[NSSQLCore rowCacheForContext:]
  -[NSSQLCore _newValuesForRelationship:forObjectWithID:withContext:error:]
  -[NSSQLCore entityForFetchRequest:]
  -[NSSQLCore entityForObject:]
  -[NSSQLCore _obtainPermanentIDsForObjects:withNotification:error:]
  -[NSSQLCore processFetchRequest:inContext:]
  -[NSSQLCore processCountRequest:inContext:]
  -[NSSQLCore processSaveChanges:forContext:]
  -[NSSQLCore processRefreshObjects:inContext:]
  -[NSSQLCore processBatchInsert:inContext:error:]
  -[NSSQLCore processBatchUpdate:inContext:error:]
  -[NSSQLCore processBatchDelete:inContext:error:]
  -[NSSQLCore processChangeRequest:inContext:error:]
  -[NSSQLCore processCloudKitMirroringRequest:inContext:error:]
  -[NSSQLCore _supportDirectoryPath]
  -[NSSQLCore cachedModelWithError:]
  -[NSSQLCore supportsComplexFeatures]
  -[NSSQLCore _registerNewQueryGenerationSnapshot:]
  -[NSSQLCore _initializeQueryGenerationTrackingConnection]
  -[NSSQLCore remoteStoresDidChange]
  -[NSSQLCore resetExternalDataReferencesDirectories]
  -[NSSQLCore newFetchUUIDSForSubentitiesRootedAt:]
  -[NSSQLCore dropUbiquityTables]
  -[NSSQLCore fetchUbiquityKnowledgeVector]
  -[NSSQLCore updateUbiquityKnowledgeVector:]
  -[NSSQLCore updateUbiquityKnowledgeForPeerWithID:andTransactionNumber:]
  -[NSSQLCore replaceUbiquityKnowledgeVector:]
  -[NSSQLCore allPeerRanges]
  -[NSSQLCore addPeerRange:]
  -[NSSQLCore addPeerRangeForPeerID:entityName:rangeStart:rangeEnd:peerRangeStart:peerRangeEnd:]
  -[NSSQLCore createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:]
  -[NSSQLCore createMapOfEntityNameToPKMaxForEntitiesFromPKTable:]
  -[NSSQLCore createMapOfEntityNameToPKMaxForEntities:]
  -[NSSQLCore setUbiquityTableValue:forKey:]
  -[NSSQLCore ubiquityTableKeysAndValues]
  -[NSSQLCore ubiquityTableValueForKey:]
  -[NSSQLCore configureUbiquityMetadataTable]
  -[NSSQLCore _dropHistoryTables]
  -[NSSQLCore entityForObjectID:]
  -[NSSQLCore objectIDFactoryForPersistentHistoryEntity:]
  -[NSSQLCore _postChangeNotificationWithTransactionID:]
  -[NSSQLCore writeSerializationLock]
  -[NSSQLCore writeSerializationUnlock]
  -[NSSQLCore metadataToWrite]
  -[NSSQLCore externalLocationForFileWithUUID:]
  -[NSSQLCore safeguardLocationForFileWithUUID:]
  -[NSSQLCore _updateAutoVacuumMetadataWithValues:]
  -[NSSQLCore recordRemoteQueryGenerationDidChange]
  -[NSSQLCore dispatchManager]
  -[NSSQLCore connectionForMigration]
  -[NSSQLCore _debugConnection]
  -[NSSQLCore isInitialized]
  -[NSSQLCore shouldNotifyFOKChanges]
  -[NSSQLCore _purgeRowCache]
  -[NSSQLCore removeUbiquityMetadata]
  -[NSSQLCore _ubiquityDictionaryForAttribute:onObject:]
  -[NSSQLCore recomputePrimaryKeyMaxForEntities:]
  -[NSSQLCore _newReservedKeysForEntities:counts:]
  -[NSSQLCore _newObjectIDForEntity:referenceData64:]
  -[NSSQLCore hasAncillaryModels]
  -[NSSQLCore _setHasAncillaryModels:]
  -[NSSQLCore dbKey]
  -[NSSQLCore entitiesToInclude]
  -[NSSQLCore entitiesToExclude]


_NSSQLCoreConnectionObsever : NSObject
  // instance methods
  -[_NSSQLCoreConnectionObsever dealloc]
  -[_NSSQLCoreConnectionObsever .cxx_destruct]
  -[_NSSQLCoreConnectionObsever initWithSQLCore:]
  -[_NSSQLCoreConnectionObsever _clearBinding]
  -[_NSSQLCoreConnectionObsever _postRemoteChangeNotificationWithTransactionID:]
  -[_NSSQLCoreConnectionObsever _retainedBinding]
  -[_NSSQLCoreConnectionObsever _purgeCaches:]


PFCloudKitImporter : NSObject
 @property  PFCloudKitImporterOptions *options
 @property  NSCloudKitMirroringImportRequest *request
 @property  NSArray *workItems
 @property  NSArray *workItemResults
 @property  CKServerChangeToken *updatedDatabaseChangeToken
 @property  unsigned long totalImportedBytes

  // instance methods
  -[PFCloudKitImporter dealloc]
  -[PFCloudKitImporter options]
  -[PFCloudKitImporter request]
  -[PFCloudKitImporter initWithOptions:request:]
  -[PFCloudKitImporter processWorkItemsWithCompletion:]
  -[PFCloudKitImporter databaseFetchFinishWithContext:error:completion:]
  -[PFCloudKitImporter processDatabaseImportContext:completion:]
  -[PFCloudKitImporter dequeueWorkItem]
  -[PFCloudKitImporter workItemFinished:withResult:completion:]
  -[PFCloudKitImporter importIfNecessaryWithCompletion:]
  -[PFCloudKitImporter workItemResults]
  -[PFCloudKitImporter workItems]
  -[PFCloudKitImporter updatedDatabaseChangeToken]
  -[PFCloudKitImporter totalImportedBytes]


NSSQLEntity : NSStoreMapping
 @property  NSDictionary *rtreeIndexes

  // instance methods
  -[NSSQLEntity dealloc]
  -[NSSQLEntity name]
  -[NSSQLEntity finalize]
  -[NSSQLEntity attributes]
  -[NSSQLEntity model]
  -[NSSQLEntity properties]
  -[NSSQLEntity propertiesByName]
  -[NSSQLEntity propertyMapping]
  -[NSSQLEntity entityDescription]
  -[NSSQLEntity tempTableName]
  -[NSSQLEntity relationshipNamed:]
  -[NSSQLEntity subentities]
  -[NSSQLEntity manyToManyRelationships]
  -[NSSQLEntity entityID]
  -[NSSQLEntity propertyNamed:]
  -[NSSQLEntity tableName]
  -[NSSQLEntity hasInheritance]
  -[NSSQLEntity subentityMaxID]
  -[NSSQLEntity superentity]
  -[NSSQLEntity foreignKeyColumns]
  -[NSSQLEntity foreignEntityKeyColumns]
  -[NSSQLEntity foreignOrderKeyColumns]
  -[NSSQLEntity attributeColumns]
  -[NSSQLEntity primaryKey]
  -[NSSQLEntity subentityKey]
  -[NSSQLEntity optLockKey]
  -[NSSQLEntity uniqueProperties]
  -[NSSQLEntity externalName]
  -[NSSQLEntity _propertySearchMapping]
  -[NSSQLEntity _addSubentity:]
  -[NSSQLEntity setSubentities:]
  -[NSSQLEntity toManyRelationships]
  -[NSSQLEntity _odiousHashHack]
  -[NSSQLEntity attributeNamed:]
  -[NSSQLEntity rtreeIndexForIndexNamed:]
  -[NSSQLEntity mappingGenerator]
  -[NSSQLEntity copyValuesForReadOnlyFetch:]
  -[NSSQLEntity hasAttributesWithFileBackedFutures]
  -[NSSQLEntity hasAttributesWithExternalDataReferences]
  -[NSSQLEntity isRootEntity]
  -[NSSQLEntity rootEntity]
  -[NSSQLEntity rtreeIndexes]
  -[NSSQLEntity derivedAttributesExtension]
  -[NSSQLEntity _generateIndexes]
  -[NSSQLEntity _doPostModelGenerationCleanup]
  -[NSSQLEntity entitySpecificPropertiesPassing:]
  -[NSSQLEntity subhierarchyColumnMatching:]
  -[NSSQLEntity columnsToFetch]
  -[NSSQLEntity hasSubentities]
  -[NSSQLEntity _addRootColumnToFetch:]
  -[NSSQLEntity _addColumnToFetch:]
  -[NSSQLEntity _addForeignOrderKeyForToOne:entity:]
  -[NSSQLEntity _addVirtualToOneForToMany:withInheritedProperty:]
  -[NSSQLEntity addDerivedAttribute:]
  -[NSSQLEntity _generateProperties]
  -[NSSQLEntity setSuperentity:]
  -[NSSQLEntity _generateIDWithSuperEntity:nextID:]
  -[NSSQLEntity multicolumnUniquenessConstraints]
  -[NSSQLEntity _collectFKSlots:error:]
  -[NSSQLEntity addDerivationKeypath:forAttribute:]
  -[NSSQLEntity _isValidFunctionForDerivations:]
  -[NSSQLEntity binaryIndexForIndexDescription:]
  -[NSSQLEntity rtreeIndexForIndexDescription:]
  -[NSSQLEntity initWithModel:entityDescription:]
  -[NSSQLEntity entitySpecificProperties]
  -[NSSQLEntity entitySpecificRelationships]
  -[NSSQLEntity entitySpecificAttributes]
  -[NSSQLEntity fetchIndexForKey:]
  -[NSSQLEntity columnsToCreate]
  -[NSSQLEntity virtualForeignKeyColumns]
  -[NSSQLEntity setEntityID:]
  -[NSSQLEntity isKindOfSQLEntity:]
  -[NSSQLEntity _sqlPropertyWithRenamingIdentifier:]
  -[NSSQLEntity _generateInverseRelationshipsAndMore]
  -[NSSQLEntity _organizeConstraints]
  -[NSSQLEntity _generateMulticolumnUniquenessConstraints]
  -[NSSQLEntity addUniquedProperty:]
  -[NSSQLEntity _entityIsBroken:]
  -[NSSQLEntity derivedAttributes]
  -[NSSQLEntity _generateAttributeDerivations:]
  -[NSSQLEntity _toOneRange]
  -[NSSQLEntity addPropertiesForReadOnlyFetch:keys:context:]
  -[NSSQLEntity indexForIndexDescription:]


PFCloudKitErrorLog : NSObject
 @property  NSArray *entries

  // instance methods
  -[PFCloudKitErrorLog init]
  -[PFCloudKitErrorLog dealloc]
  -[PFCloudKitErrorLog entries]
  -[PFCloudKitErrorLog logEncounteredError:withAnnotation:]


PFCloudKitErrorLogEntry : NSObject
 @property  NSString *annotation
 @property  NSError *error

  // instance methods
  -[PFCloudKitErrorLogEntry dealloc]
  -[PFCloudKitErrorLogEntry error]
  -[PFCloudKitErrorLogEntry annotation]
  -[PFCloudKitErrorLogEntry initWithError:annotation:]


CDDCloudKitMessage : NSObject <NSCoding, NSSecureCoding>
 @property  NSUUID *identifier

  // class methods
  +[CDDCloudKitMessage supportsSecureCoding]

  // instance methods
  -[CDDCloudKitMessage init]
  -[CDDCloudKitMessage dealloc]
  -[CDDCloudKitMessage encodeWithCoder:]
  -[CDDCloudKitMessage initWithCoder:]
  -[CDDCloudKitMessage identifier]


NSSQLEntityKey : NSSQLColumn
  // instance methods
  -[NSSQLEntityKey name]
  -[NSSQLEntityKey initWithEntity:propertyDescription:]


NSSQLExpressionIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLExpressionIntermediate initWithExpression:allowToMany:inScope:]


NSSQLFetchCountIntermediate : NSSQLFetchIntermediate
  // instance methods
  -[NSSQLFetchCountIntermediate generateSQLStringInContext:]


PFCloudKitSetupAssistant : NSObject
 @property  NSCloudKitMirroringDelegateOptions *mirroringOptions
 @property  CKRecordZone *recordZone
 @property  CKContainer *container
 @property  CKDatabase *database
 @property  CKDatabaseSubscription *databaseSubscription
 @property  NSURL *largeBlobDirectoryURL
 @property  NSObject<OS_dispatch_semaphore> *cloudKitSemaphore
 @property  PFCloudKitStoreMonitor *storeMonitor

  // instance methods
  -[PFCloudKitSetupAssistant dealloc]
  -[PFCloudKitSetupAssistant container]
  -[PFCloudKitSetupAssistant _setContainer:]
  -[PFCloudKitSetupAssistant database]
  -[PFCloudKitSetupAssistant recordZone]
  -[PFCloudKitSetupAssistant mirroringOptions]
  -[PFCloudKitSetupAssistant _checkAndInitializeMetadata:]
  -[PFCloudKitSetupAssistant _checkAccountStatus:]
  -[PFCloudKitSetupAssistant _checkUserIdentity:]
  -[PFCloudKitSetupAssistant _createZoneIfNecessary:]
  -[PFCloudKitSetupAssistant _setupDatabaseSubscriptionIfNecessary:]
  -[PFCloudKitSetupAssistant _initializeAssetStorageURLError:]
  -[PFCloudKitSetupAssistant _saveZone:error:]
  -[PFCloudKitSetupAssistant _shouldAttemptRecoveryForZone:byDeletingExistingZone:afterError:]
  -[PFCloudKitSetupAssistant _deleteZone:error:]
  -[PFCloudKitSetupAssistant initWithMirroringOptions:observedStore:zone:databaseSubscription:]
  -[PFCloudKitSetupAssistant _initializeCloudKitForObservedStore:]
  -[PFCloudKitSetupAssistant _setDatabase:]
  -[PFCloudKitSetupAssistant _setStoreMonitor:]
  -[PFCloudKitSetupAssistant databaseSubscription]
  -[PFCloudKitSetupAssistant largeBlobDirectoryURL]
  -[PFCloudKitSetupAssistant cloudKitSemaphore]
  -[PFCloudKitSetupAssistant storeMonitor]


CDDCloudKitClient : NSObject
 @property  NSXPCConnection *connection
 @property  BOOL interrupted
 @property  BOOL invalidated

  // instance methods
  -[CDDCloudKitClient dealloc]
  -[CDDCloudKitClient _valid]
  -[CDDCloudKitClient initWithMachServiceName:]
  -[CDDCloudKitClient connection]
  -[CDDCloudKitClient invalidated]
  -[CDDCloudKitClient handleMessage:reply:]
  -[CDDCloudKitClient _setInvalidated]
  -[CDDCloudKitClient _setInterrupted]
  -[CDDCloudKitClient registerClientStore:withMirroringOptions:error:]
  -[CDDCloudKitClient scheduleBackupTaskForClientStore:error:]
  -[CDDCloudKitClient interrupted]


NSSQLFetchIntermediate : NSSQLStatementIntermediate
  // instance methods
  -[NSSQLFetchIntermediate dealloc]
  -[NSSQLFetchIntermediate initWithScope:]
  -[NSSQLFetchIntermediate generateSQLStringInContext:]
  -[NSSQLFetchIntermediate selectIntermediate]
  -[NSSQLFetchIntermediate isFunctionScoped]
  -[NSSQLFetchIntermediate _generateJoinSQLStringInContext:]
  -[NSSQLFetchIntermediate fetchIntermediateForKeypathExpression:]
  -[NSSQLFetchIntermediate fetchIntermediate]
  -[NSSQLFetchIntermediate isDictionaryCountFetch]
  -[NSSQLFetchIntermediate setDictionaryCountFetch:]
  -[NSSQLFetchIntermediate setSelectIntermediate:]
  -[NSSQLFetchIntermediate groupByIntermediate]
  -[NSSQLFetchIntermediate setGroupByIntermediate:]
  -[NSSQLFetchIntermediate addGroupByKeypath:]
  -[NSSQLFetchIntermediate groupByClauseContainsKeypath:]
  -[NSSQLFetchIntermediate havingIntermediate]
  -[NSSQLFetchIntermediate setHavingIntermediate:]
  -[NSSQLFetchIntermediate setOffsetIntermediate:]
  -[NSSQLFetchIntermediate addJoinIntermediate:atKeypathWithComponents:]
  -[NSSQLFetchIntermediate finalJoinForKeypathWithComponents:]
  -[NSSQLFetchIntermediate promoteToOuterJoinsAlongKeypathWithComponents:]
  -[NSSQLFetchIntermediate promoteToOuterJoinAtKeypathWithComponents:]
  -[NSSQLFetchIntermediate joinIntermediates]
  -[NSSQLFetchIntermediate selectDistinct]


NSSQLForeignEntityKey : NSSQLColumn
  // instance methods
  -[NSSQLForeignEntityKey dealloc]
  -[NSSQLForeignEntityKey name]
  -[NSSQLForeignEntityKey _setName:]
  -[NSSQLForeignEntityKey toOneRelationship]
  -[NSSQLForeignEntityKey foreignKey]
  -[NSSQLForeignEntityKey initWithEntity:propertyDescription:]
  -[NSSQLForeignEntityKey copyValuesForReadOnlyFetch:]
  -[NSSQLForeignEntityKey initWithEntity:foreignKey:]
  -[NSSQLForeignEntityKey initForReadOnlyFetchingOfEntity:toOneRelationship:]
  -[NSSQLForeignEntityKey setFKForReadOnlyFetch:]


NSSQLForeignKey : NSSQLColumn
  // instance methods
  -[NSSQLForeignKey dealloc]
  -[NSSQLForeignKey name]
  -[NSSQLForeignKey _setName:]
  -[NSSQLForeignKey toOneRelationship]
  -[NSSQLForeignKey initWithEntity:propertyDescription:]
  -[NSSQLForeignKey copyValuesForReadOnlyFetch:]
  -[NSSQLForeignKey initForReadOnlyFetchingOfEntity:toOneRelationship:]
  -[NSSQLForeignKey initWithEntity:toOneRelationship:]


PFCloudKitImporterZonePurgedWorkItem : PFCloudKitImporterWorkItem
 @property  CKRecordZoneID *purgedRecordZoneID

  // instance methods
  -[PFCloudKitImporterZonePurgedWorkItem dealloc]
  -[PFCloudKitImporterZonePurgedWorkItem doWorkWithCompletion:]
  -[PFCloudKitImporterZonePurgedWorkItem initWithPurgedRecordZoneID:options:request:]
  -[PFCloudKitImporterZonePurgedWorkItem wipeAllCloudDataAndPurgeHistoryToken:error:]
  -[PFCloudKitImporterZonePurgedWorkItem purgedRecordZoneID]


CDDCloudKitResponse : NSObject <NSCoding, NSSecureCoding>
 @property  CDDCloudKitMessage *message
 @property  BOOL success
 @property  NSError *error

  // class methods
  +[CDDCloudKitResponse supportsSecureCoding]
  +[CDDCloudKitResponse supportedErrorClasses]

  // instance methods
  -[CDDCloudKitResponse dealloc]
  -[CDDCloudKitResponse encodeWithCoder:]
  -[CDDCloudKitResponse initWithCoder:]
  -[CDDCloudKitResponse error]
  -[CDDCloudKitResponse message]
  -[CDDCloudKitResponse success]
  -[CDDCloudKitResponse initWithMessage:success:error:]


NSSQLForeignKeyIntermediate : NSSQLConstantValueIntermediate
  // instance methods
  -[NSSQLForeignKeyIntermediate generateSQLStringInContext:]
  -[NSSQLForeignKeyIntermediate _addBindVarForConstVal2:inContext:]
  -[NSSQLForeignKeyIntermediate initWithConstantValue:inScope:]


NSCloudKitMirroringRequestOptions : NSObject
 @property  CKOperationConfiguration *operationConfiguration
 @property  long long qualityOfService
 @property  BOOL allowsCellularAccess

  // instance methods
  -[NSCloudKitMirroringRequestOptions init]
  -[NSCloudKitMirroringRequestOptions dealloc]
  -[NSCloudKitMirroringRequestOptions copy]
  -[NSCloudKitMirroringRequestOptions qualityOfService]
  -[NSCloudKitMirroringRequestOptions setQualityOfService:]
  -[NSCloudKitMirroringRequestOptions setAllowsCellularAccess:]
  -[NSCloudKitMirroringRequestOptions allowsCellularAccess]
  -[NSCloudKitMirroringRequestOptions resetOperationConfiguration]
  -[NSCloudKitMirroringRequestOptions setOperationConfiguration:]
  -[NSCloudKitMirroringRequestOptions applyToOperation:]
  -[NSCloudKitMirroringRequestOptions operationConfiguration]


NSSQLBinaryIndex : NSSQLIndex
  // instance methods
  -[NSSQLBinaryIndex generateStatementsForStore:]
  -[NSSQLBinaryIndex dropStatementsForStore:]
  -[NSSQLBinaryIndex bulkUpdateStatementsForStore:]


NSSQLFunctionExpressionIntermediate : NSSQLExpressionIntermediate
  // class methods
  +[NSSQLFunctionExpressionIntermediate functionIsAcceptableAsAggregate:]

  // instance methods
  -[NSSQLFunctionExpressionIntermediate generateSQLStringInContext:]
  -[NSSQLFunctionExpressionIntermediate isFunctionScoped]
  -[NSSQLFunctionExpressionIntermediate _generateUncorrelatedSubqueryStringWithSymbol:forAttribute:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateCorrelatedSubqueryStringWithSymbol:forExpression:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateArgumentStringForCollection:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateSelectForAggregateStringWithSymbol:argument:inContext:]
  -[NSSQLFunctionExpressionIntermediate generateType1SQLString:inContext:]
  -[NSSQLFunctionExpressionIntermediate generateType2SQLString:inContext:]
  -[NSSQLFunctionExpressionIntermediate generateType3SQLString:keypathOnly:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateType4SQLForSymbol:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateSQLForCountInContext:]
  -[NSSQLFunctionExpressionIntermediate _generateMathStringWithSymbol:inContext:]
  -[NSSQLFunctionExpressionIntermediate _generateDistinctStringInContext:]
  -[NSSQLFunctionExpressionIntermediate _generateNowStringInContext:]
  -[NSSQLFunctionExpressionIntermediate _generateLengthStringInContext:]
  -[NSSQLFunctionExpressionIntermediate _generateRtreeIndexStringInContext:]


NSSQLGenerator : NSObject
  // class methods
  +[NSSQLGenerator initialize]

  // instance methods
  -[NSSQLGenerator initWithPersistentStore:]
  -[NSSQLGenerator newSQLStatementForUpdateRequest:]
  -[NSSQLGenerator newSQLStatmentForBinaryIndex:inStore:]
  -[NSSQLGenerator _predicateRestrictingSuperentitiesForEntity:]
  -[NSSQLGenerator _predicateRestrictingToSubentitiesForEntity:]
  -[NSSQLGenerator _predicateForSpecificEntity:]
  -[NSSQLGenerator generateWhereIntermediatesInContext:]
  -[NSSQLGenerator generateGroupByIntermediatesForProperties:inContext:]
  -[NSSQLGenerator generateHavingIntermediateForPredicate:inContext:]
  -[NSSQLGenerator generateSelectIntermediateInContext:]
  -[NSSQLGenerator generateOrderIntermediateInContext:]
  -[NSSQLGenerator generateIntermediateForLimit:inContext:]
  -[NSSQLGenerator generateIntermediateForOffset:inContext:]
  -[NSSQLGenerator generateUpdateColumnsIntermediateInContext:]
  -[NSSQLGenerator predicateForRequestInContext:]
  -[NSSQLGenerator initializeContextForRequest:ignoreInheritance:nestingLevel:]
  -[NSSQLGenerator initializeContextForFetchRequest:ignoreInheritance:nestingLevel:nestIsWhereScoped:requestContext:]
  -[NSSQLGenerator initializeContextForUpdateRequest:]
  -[NSSQLGenerator generateIntermediatesForFetchInContext:countOnly:]
  -[NSSQLGenerator generateIntermediatesForUpdateInContext:]
  -[NSSQLGenerator newSQLStatementForRequest:ignoreInheritance:countOnly:nestingLevel:nestIsWhereScoped:requestContext:]
  -[NSSQLGenerator initializeContextForIndexGeneration:inStore:]
  -[NSSQLGenerator newSQLStatementForFetchRequest:ignoreInheritance:countOnly:nestingLevel:nestIsWhereScoped:requestContext:]
  -[NSSQLGenerator newSQLStatementForChangeRequest:]


NSSQLIntermediate : NSObject
 @property  NSSQLEntity *disambiguatingEntity
 @property  NSArray *disambiguationKeypath
 @property  BOOL disambiguationKeypathHasToMany

  // class methods
  +[NSSQLIntermediate isSimpleKeypath:]
  +[NSSQLIntermediate expressionIsBasicKeypath:]

  // instance methods
  -[NSSQLIntermediate scope]
  -[NSSQLIntermediate initWithScope:]
  -[NSSQLIntermediate generateSQLStringInContext:]
  -[NSSQLIntermediate _generateSQLForExpression:allowToMany:inContext:]
  -[NSSQLIntermediate isUpdateColumnsScoped]
  -[NSSQLIntermediate governingAliasForKeypathExpression:]
  -[NSSQLIntermediate isWhereScoped]
  -[NSSQLIntermediate isSimpleKeypath:]
  -[NSSQLIntermediate keypathExpressionIsSafeLHSForIn:]
  -[NSSQLIntermediate _generateSQLForConstantValue:inContext:]
  -[NSSQLIntermediate disambiguatingEntity]
  -[NSSQLIntermediate disambiguationKeypath]
  -[NSSQLIntermediate disambiguationKeypathHasToMany]
  -[NSSQLIntermediate isOrScoped]
  -[NSSQLIntermediate setDisambiguatingEntity:withKeypath:hasToMany:]
  -[NSSQLIntermediate isTargetColumnsScoped]
  -[NSSQLIntermediate governingEntityForKeypathExpression:]
  -[NSSQLIntermediate _lastScopedItem]
  -[NSSQLIntermediate isVariableBasedKeypathScopedBySubquery:]
  -[NSSQLIntermediate isIndexScoped]
  -[NSSQLIntermediate isFunctionScoped]
  -[NSSQLIntermediate _promoteJoinsForSubqueryScopedKeypaths]
  -[NSSQLIntermediate fetchIntermediateForKeypathExpression:]
  -[NSSQLIntermediate fetchIntermediate]
  -[NSSQLIntermediate isUpdateScoped]
  -[NSSQLIntermediate _generateSQLForSubqueryExpression:trailingKeypath:inContext:]
  -[NSSQLIntermediate _functionExpressionIsSubqueryFollowedByKeypath:]
  -[NSSQLIntermediate isHavingScoped]
  -[NSSQLIntermediate governingAlias]
  -[NSSQLIntermediate isIndexExpressionScoped]
  -[NSSQLIntermediate expressionIsBasicKeypath:]
  -[NSSQLIntermediate governingEntity]
  -[NSSQLIntermediate _entitySpecificationKeypath]
  -[NSSQLIntermediate _setEntitySpecificationKeypath:]
  -[NSSQLIntermediate _promoteJoinsForSubqueryScopedKeypath:]
  -[NSSQLIntermediate promoteJoinsInKeypathsForExpression:]
  -[NSSQLIntermediate _promoteJoinsForKeypathExpression:]
  -[NSSQLIntermediate _promoteJoinsForFunctionExpression:]
  -[NSSQLIntermediate _promoteJoinsForAggregateExpression:]
  -[NSSQLIntermediate _promoteJoinsForTernaryExpression:]
  -[NSSQLIntermediate _generateSQLForKeyPathExpression:allowToMany:inContext:]
  -[NSSQLIntermediate _generateSQLForConstantCollection:reboundFrom:inContext:]
  -[NSSQLIntermediate _generateSQLForVariableExpression:allowToMany:inContext:]
  -[NSSQLIntermediate _canDoASubselectForExpression:inContext:]
  -[NSSQLIntermediate _generateSQLForFunctionExpression:allowToMany:inContext:]
  -[NSSQLIntermediate _generateSQLForExpressionCollection:allowToMany:inContext:]
  -[NSSQLIntermediate _generateSQLForFetchExpression:allowToMany:inContext:]
  -[NSSQLIntermediate _generateSQLForTernaryExpression:allowToMany:inContext:]
  -[NSSQLIntermediate isSimpleNoIndexFunction:]


PFCloudKitMetadataMigrationContext : NSObject
 @property  NSArray *migrationStatements
 @property  NSArray *sqlEntitiesToCreate
 @property  BOOL hasWorkToDo
 @property  NSManagedObjectModel *currentModel
 @property  NSSQLModel *sqlModel
 @property  NSManagedObjectModel *storeMetadataModel
 @property  NSSQLModel *storeSQLModel
 @property  NSNumber *storeMetadataVersion
 @property  NSDictionary *storeMetadataVersionHashes
 @property  BOOL needsMetdataMigrationToNSCKRecordMetadata
 @property  BOOL needsOldTableDrop
 @property  BOOL needsMirroredRelationshipsLinkedToZone

  // instance methods
  -[PFCloudKitMetadataMigrationContext init]
  -[PFCloudKitMetadataMigrationContext dealloc]
  -[PFCloudKitMetadataMigrationContext hasWorkToDo]
  -[PFCloudKitMetadataMigrationContext addMigrationStatement:]
  -[PFCloudKitMetadataMigrationContext addSQLEntityToCreate:]
  -[PFCloudKitMetadataMigrationContext migrationStatements]
  -[PFCloudKitMetadataMigrationContext sqlEntitiesToCreate]
  -[PFCloudKitMetadataMigrationContext currentModel]
  -[PFCloudKitMetadataMigrationContext setCurrentModel:]
  -[PFCloudKitMetadataMigrationContext sqlModel]
  -[PFCloudKitMetadataMigrationContext setSqlModel:]
  -[PFCloudKitMetadataMigrationContext storeMetadataModel]
  -[PFCloudKitMetadataMigrationContext setStoreMetadataModel:]
  -[PFCloudKitMetadataMigrationContext storeSQLModel]
  -[PFCloudKitMetadataMigrationContext setStoreSQLModel:]
  -[PFCloudKitMetadataMigrationContext needsMetdataMigrationToNSCKRecordMetadata]
  -[PFCloudKitMetadataMigrationContext setNeedsMetdataMigrationToNSCKRecordMetadata:]
  -[PFCloudKitMetadataMigrationContext storeMetadataVersion]
  -[PFCloudKitMetadataMigrationContext setStoreMetadataVersion:]
  -[PFCloudKitMetadataMigrationContext storeMetadataVersionHashes]
  -[PFCloudKitMetadataMigrationContext setStoreMetadataVersionHashes:]
  -[PFCloudKitMetadataMigrationContext needsOldTableDrop]
  -[PFCloudKitMetadataMigrationContext setNeedsOldTableDrop:]
  -[PFCloudKitMetadataMigrationContext needsMirroredRelationshipsLinkedToZone]
  -[PFCloudKitMetadataMigrationContext setNeedsMirroredRelationshipsLinkedToZone:]


CDDCloudKitServerConfiguration : NSObject <NSSecureCoding>
 @property  NSString *storeDirectoryPath
 @property  NSString *machServiceName
 @property  PFCloudKitContainerProvider *containerProvider
 @property  CKScheduler *scheduler

  // class methods
  +[CDDCloudKitServerConfiguration supportsSecureCoding]

  // instance methods
  -[CDDCloudKitServerConfiguration init]
  -[CDDCloudKitServerConfiguration dealloc]
  -[CDDCloudKitServerConfiguration copyWithZone:]
  -[CDDCloudKitServerConfiguration encodeWithCoder:]
  -[CDDCloudKitServerConfiguration initWithCoder:]
  -[CDDCloudKitServerConfiguration setMachServiceName:]
  -[CDDCloudKitServerConfiguration machServiceName]
  -[CDDCloudKitServerConfiguration storeDirectoryPath]
  -[CDDCloudKitServerConfiguration containerProvider]
  -[CDDCloudKitServerConfiguration scheduler]
  -[CDDCloudKitServerConfiguration setContainerProvider:]
  -[CDDCloudKitServerConfiguration setStoreDirectoryPath:]
  -[CDDCloudKitServerConfiguration initFromOriginal:]
  -[CDDCloudKitServerConfiguration setScheduler:]


_NSPersistentHistoryToken : NSPersistentHistoryToken
  // class methods
  +[_NSPersistentHistoryToken supportsSecureCoding]

  // instance methods
  -[_NSPersistentHistoryToken dealloc]
  -[_NSPersistentHistoryToken isEqual:]
  -[_NSPersistentHistoryToken compare:]
  -[_NSPersistentHistoryToken encodeWithCoder:]
  -[_NSPersistentHistoryToken initWithCoder:]
  -[_NSPersistentHistoryToken initWithDictionary:]
  -[_NSPersistentHistoryToken storeTokens]
  -[_NSPersistentHistoryToken initWithTransactionNumber:andStoreID:]
  -[_NSPersistentHistoryToken compareToken:error:]


NSPersistentHistoryToken : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[NSPersistentHistoryToken supportsSecureCoding]

  // instance methods
  -[NSPersistentHistoryToken copyWithZone:]
  -[NSPersistentHistoryToken encodeWithCoder:]
  -[NSPersistentHistoryToken initWithCoder:]
  -[NSPersistentHistoryToken storeTokens]


CDDCloudKitRegistrationMessage : CDDCloudKitMessage
 @property  NSString *bundleIdentifier
 @property  NSFileHandle *storeFileHandle
 @property  NSString *storePath
 @property  NSString *storeFileProtectionClass
 @property  NSString *storeType
 @property  NSString *storeConfigurationName
 @property  NSString *containerIdentifier

  // class methods
  +[CDDCloudKitRegistrationMessage supportsSecureCoding]

  // instance methods
  -[CDDCloudKitRegistrationMessage dealloc]
  -[CDDCloudKitRegistrationMessage encodeWithCoder:]
  -[CDDCloudKitRegistrationMessage initWithCoder:]
  -[CDDCloudKitRegistrationMessage bundleIdentifier]
  -[CDDCloudKitRegistrationMessage containerIdentifier]
  -[CDDCloudKitRegistrationMessage storePath]
  -[CDDCloudKitRegistrationMessage storeFileHandle]
  -[CDDCloudKitRegistrationMessage storeConfigurationName]
  -[CDDCloudKitRegistrationMessage storeFileProtectionClass]
  -[CDDCloudKitRegistrationMessage initWithFileHandle:forStoreWithDescription:andBundleIdentifier:]
  -[CDDCloudKitRegistrationMessage storeType]


NSSQLiteAdapter : NSObject
  // class methods
  +[NSSQLiteAdapter generateSubselectForColumn:givenObjects:]
  +[NSSQLiteAdapter generateStatementForCheckingUniquePropertiesOnObjects:usingSQLCore:]
  +[NSSQLiteAdapter generateStatementForCheckingMulticolumnConstraint:onObjects:usingSQLCore:]

  // instance methods
  -[NSSQLiteAdapter dealloc]
  -[NSSQLiteAdapter sqlCore]
  -[NSSQLiteAdapter _useModel:]
  -[NSSQLiteAdapter newSelectStatementWithFetchRequest:ignoreInheritance:]
  -[NSSQLiteAdapter generateDeleteStatementsForRequest:error:]
  -[NSSQLiteAdapter initWithSQLCore:]
  -[NSSQLiteAdapter newCreateTableStatementForEntity:]
  -[NSSQLiteAdapter newCreateTableStatementForManyToMany:]
  -[NSSQLiteAdapter newDropTableStatementForTableNamed:]
  -[NSSQLiteAdapter newStatementWithSQLString:]
  -[NSSQLiteAdapter sqlTypeForExpressionConstantValue:]
  -[NSSQLiteAdapter newRenameTableStatementFromManyToMany:toManyToMany:orToRandomSpot:]
  -[NSSQLiteAdapter newCopyAndInsertStatementForManyToMany:toManyToMany:intermediateTableName:invertColumns:]
  -[NSSQLiteAdapter newSimplePrimaryKeyUpdateStatementForEntity:]
  -[NSSQLiteAdapter newComplexPrimaryKeyUpdateStatementForEntity:]
  -[NSSQLiteAdapter generateSQLStatmentForSourcesAndOrderKeysForDestination:inToMany:]
  -[NSSQLiteAdapter generateSQLStatmentForSourcesAndOrderKeysForDestination:inManyToMany:]
  -[NSSQLiteAdapter newStatementWithEntity:]
  -[NSSQLiteAdapter newGeneratorWithStatement:]
  -[NSSQLiteAdapter _statementForFetchRequestContext:ignoreInheritance:countOnly:nestingLevel:]
  -[NSSQLiteAdapter newStatementWithoutEntity]
  -[NSSQLiteAdapter generateBatchDeleteUpdateHistoryStatementEntity:andRelationship:useInverse:]
  -[NSSQLiteAdapter generateBatchDeleteUpdateHistoryStatementEntity:andRelationship:]
  -[NSSQLiteAdapter typeStringForColumn:]
  -[NSSQLiteAdapter _generateFragmentsForEntity:inArray:]
  -[NSSQLiteAdapter typeStringForSQLType:]
  -[NSSQLiteAdapter newCreateIndexStatementForColumnWithName:inTableWithName:]
  -[NSSQLiteAdapter newDropIndexStatementForColumnWithName:inTableWithName:]
  -[NSSQLiteAdapter newCreateIndexStatementForColumn:]
  -[NSSQLiteAdapter newCreateIndexStatementForCorrelationTable:]
  -[NSSQLiteAdapter generateBinaryIndexStatementsForIndex:onEntity:]
  -[NSSQLiteAdapter generateRTreeIndexStatementsForIndex:onEntity:]
  -[NSSQLiteAdapter newCreateIndexStatementsForEntity:defaultIndicesOnly:]
  -[NSSQLiteAdapter newDropIndexStatementForColumn:]
  -[NSSQLiteAdapter newDropIndexStatementForCorrelationTable:]
  -[NSSQLiteAdapter generateDropBinaryIndexStatementsForIndex:onEntity:]
  -[NSSQLiteAdapter generateDropRTreeIndexStatementsForIndex:onEntity:]
  -[NSSQLiteAdapter newDropIndexStatementsForEntity:defaultIndicesOnly:]
  -[NSSQLiteAdapter createSQLStatementsForTriggerAttribute:withSQLEntity:]
  -[NSSQLiteAdapter createSQLStatementsForRTreeTriggersForLocationAttribute:withSQLEntity:existingRtreeTables:]
  -[NSSQLiteAdapter generateCorrelationTableTriggerStatementsForRelationship:existing:correlationTableTriggers:error:]
  -[NSSQLiteAdapter generateTriggerForEntity:alreadyCreated:correlations:batchHistory:fragments:error:]
  -[NSSQLiteAdapter generateBatchDeleteUpdateHistoryTriggerForEntity:andRelationship:batchHistory:error:]
  -[NSSQLiteAdapter createCleanupSQLForRelationship:existing:correlationTableTriggers:batchHistory:error:]
  -[NSSQLiteAdapter generateTriggerStatementsForEntity:usingRelationshipCleanupSQL:error:]
  -[NSSQLiteAdapter generateDeleteHistoryTriggerForEntity:error:]
  -[NSSQLiteAdapter _cachedTriggersForEntity:]
  -[NSSQLiteAdapter _generateExternalDataRefStatementsForEntities:inRequestContext:]
  -[NSSQLiteAdapter _cacheTriggers:forEntity:]
  -[NSSQLiteAdapter sqliteVersion]
  -[NSSQLiteAdapter newInsertStatementWithRow:]
  -[NSSQLiteAdapter newUpdateStatementWithRow:originalRow:withMask:]
  -[NSSQLiteAdapter newConstrainedValuesUpdateStatementWithRow:]
  -[NSSQLiteAdapter newDeleteStatementWithRow:]
  -[NSSQLiteAdapter newSelectStatementWithFetchRequestContext:ignoreInheritance:]
  -[NSSQLiteAdapter newCountStatementWithFetchRequestContext:]
  -[NSSQLiteAdapter newCorrelationInsertStatementForRelationship:]
  -[NSSQLiteAdapter newCorrelationDeleteStatementForRelationship:]
  -[NSSQLiteAdapter newCorrelationMasterReorderStatementForRelationship:]
  -[NSSQLiteAdapter newCorrelationMasterReorderStatementPart2ForRelationship:]
  -[NSSQLiteAdapter newCorrelationReorderStatementForRelationship:]
  -[NSSQLiteAdapter newCreateTempTableStatementForEntity:withAttributesToConstrain:]
  -[NSSQLiteAdapter newCreatePrimaryKeyTableStatement]
  -[NSSQLiteAdapter newPrimaryKeyInitializeStatementForEntity:withInitialMaxPK:]
  -[NSSQLiteAdapter newDropTableStatementOrFailForTableNamed:]
  -[NSSQLiteAdapter newRenameTableStatementFrom:to:]
  -[NSSQLiteAdapter newCreateIndexStatementForColumns:name:]
  -[NSSQLiteAdapter newCreateIndexStatementsForEntity:]
  -[NSSQLiteAdapter newDropIndexStatementsForEntity:]
  -[NSSQLiteAdapter newCreateTriggersForEntity:existingRtreeTables:]


_PFSQLiteSnapshotWrapper : NSObject <NSCopying>
 @property  NSData *data
 @property  r^v bytes

  // instance methods
  -[_PFSQLiteSnapshotWrapper dealloc]
  -[_PFSQLiteSnapshotWrapper isEqual:]
  -[_PFSQLiteSnapshotWrapper bytes]
  -[_PFSQLiteSnapshotWrapper copyWithZone:]
  -[_PFSQLiteSnapshotWrapper mutableCopy]
  -[_PFSQLiteSnapshotWrapper compare:]
  -[_PFSQLiteSnapshotWrapper initWithData:]
  -[_PFSQLiteSnapshotWrapper data]
  -[_PFSQLiteSnapshotWrapper initWithSnapshot:]
  -[_PFSQLiteSnapshotWrapper externalReferenceCount]
  -[_PFSQLiteSnapshotWrapper incrementExternalReferenceCount]
  -[_PFSQLiteSnapshotWrapper decrementExternalReferenceCount]


NSSQLiteConnection : NSObject
 @property  BOOL isWriter

  // class methods
  +[NSSQLiteConnection initialize]
  +[NSSQLiteConnection _replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:]
  +[NSSQLiteConnection _destroyPersistentStoreAtURL:options:error:]
  +[NSSQLiteConnection _rekeyPersistentStoreAtURL:options:withKey:error:]
  +[NSSQLiteConnection readMagicWordFromPath:options:]
  +[NSSQLiteConnection openAtPath:withKey:handle:flags:module:checkpointOnClose:]
  +[NSSQLiteConnection _databaseOpenURLStringForURL:]
  +[NSSQLiteConnection _setDebugFlags:]
  +[NSSQLiteConnection __INode_Changed_AllThatIsLeftToUsIsHonor__]

  // instance methods
  -[NSSQLiteConnection dealloc]
  -[NSSQLiteConnection disconnect]
  -[NSSQLiteConnection beginTransaction]
  -[NSSQLiteConnection isOpen]
  -[NSSQLiteConnection execute]
  -[NSSQLiteConnection commitTransaction]
  -[NSSQLiteConnection connect]
  -[NSSQLiteConnection adapter]
  -[NSSQLiteConnection freeQueryGenerationWithIdentifier:]
  -[NSSQLiteConnection reopenQueryGenerationWithIdentifier:error:]
  -[NSSQLiteConnection connectionManager]
  -[NSSQLiteConnection fetchTableCreationSQL]
  -[NSSQLiteConnection _performBlock:]
  -[NSSQLiteConnection beginReadTransaction]
  -[NSSQLiteConnection adoptQueryGenerationWithIdentifier:]
  -[NSSQLiteConnection rollbackTransaction]
  -[NSSQLiteConnection endFetchAndRecycleStatement:]
  -[NSSQLiteConnection setExclusiveLockingMode:]
  -[NSSQLiteConnection initForSQLCore:]
  -[NSSQLiteConnection performAndWait:]
  -[NSSQLiteConnection clearPrefetchRequestCache]
  -[NSSQLiteConnection _clearSaveGeneratedCachedStatements]
  -[NSSQLiteConnection isLocalFS]
  -[NSSQLiteConnection prepareAndExecuteSQLStatement:]
  -[NSSQLiteConnection fetchTableNames]
  -[NSSQLiteConnection _hasTableWithName:]
  -[NSSQLiteConnection _dropTableWithName:]
  -[NSSQLiteConnection _dropAllTriggers]
  -[NSSQLiteConnection copyRawIntegerRowsForSQL:]
  -[NSSQLiteConnection _hasPersistentHistoryTables]
  -[NSSQLiteConnection _hasHistoryTransactionStringTable]
  -[NSSQLiteConnection _hasOldHistoryTrackingTables]
  -[NSSQLiteConnection _dropOldHistoryTrackingTables]
  -[NSSQLiteConnection dropHistoryTrackingTables]
  -[NSSQLiteConnection numberOfTombstones]
  -[NSSQLiteConnection createTablesForEntities:]
  -[NSSQLiteConnection addTombstoneColumnsForRange:]
  -[NSSQLiteConnection hasAncillaryEntitiesInHistory]
  -[NSSQLiteConnection dropHistoryBeforeTransactionID:]
  -[NSSQLiteConnection hasTransactionStringColumnsInTransactionTable]
  -[NSSQLiteConnection addTransactionStringColumnsToTransactionTable]
  -[NSSQLiteConnection hasHistoryRows]
  -[NSSQLiteConnection hasCachedModelTable]
  -[NSSQLiteConnection saveCachedModel:]
  -[NSSQLiteConnection fetchMetadata]
  -[NSSQLiteConnection saveMetadata:]
  -[NSSQLiteConnection canConnect]
  -[NSSQLiteConnection databaseIsEmpty]
  -[NSSQLiteConnection hasMetadataTable]
  -[NSSQLiteConnection recreateIndices]
  -[NSSQLiteConnection fetchCachedModel]
  -[NSSQLiteConnection initAsQueryGenerationTrackingConnectionForSQLCore:]
  -[NSSQLiteConnection _registerNewQueryGenerationSnapshot:]
  -[NSSQLiteConnection registerCurrentQueryGenerationWithStore:]
  -[NSSQLiteConnection currentQueryGenerationIdentifier]
  -[NSSQLiteConnection newFetchUUIDSForSubentitiesRootedAt:]
  -[NSSQLiteConnection dropUbiquityTables]
  -[NSSQLiteConnection fetchUbiquityKnowledgeVector]
  -[NSSQLiteConnection updateUbiquityKnowledgeVector:]
  -[NSSQLiteConnection updateUbiquityKnowledgeForPeerWithID:andTransactionNumber:]
  -[NSSQLiteConnection replaceUbiquityKnowledgeVector:]
  -[NSSQLiteConnection allPeerRanges]
  -[NSSQLiteConnection addPeerRange:]
  -[NSSQLiteConnection addPeerRangeForPeerID:entityName:rangeStart:rangeEnd:peerRangeStart:peerRangeEnd:]
  -[NSSQLiteConnection createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:]
  -[NSSQLiteConnection createMapOfEntityNameToPKMaxForEntitiesFromPKTable:]
  -[NSSQLiteConnection createMapOfEntityNameToPKMaxForEntities:]
  -[NSSQLiteConnection setUbiquityTableValue:forKey:]
  -[NSSQLiteConnection ubiquityTableKeysAndValues]
  -[NSSQLiteConnection ubiquityTableValueForKey:]
  -[NSSQLiteConnection configureUbiquityMetadataTable]
  -[NSSQLiteConnection _forceDisconnectOnError]
  -[NSSQLiteConnection fetchMaxPrimaryKeyForEntity:]
  -[NSSQLiteConnection _dropKnownHistoryTrackingTables]
  -[NSSQLiteConnection columnsToFetch]
  -[NSSQLiteConnection _ensureWalFileExists]
  -[NSSQLiteConnection _performPostSaveTasks:andForceFullVacuum:]
  -[NSSQLiteConnection _executeSQLString:]
  -[NSSQLiteConnection _currentQueryGenerationSnapshot:]
  -[NSSQLiteConnection releaseSQLStatement]
  -[NSSQLiteConnection _ensureNoStatementPrepared]
  -[NSSQLiteConnection _ensureNoFetchInProgress]
  -[NSSQLiteConnection _ensureDatabaseOpen]
  -[NSSQLiteConnection _fetchMaxPrimaryKeyForEntity:]
  -[NSSQLiteConnection createTableForEntity:]
  -[NSSQLiteConnection createManyToManyTablesForEntity:]
  -[NSSQLiteConnection createIndexesForEntity:]
  -[NSSQLiteConnection createTriggersForEntities:]
  -[NSSQLiteConnection performIntegrityCheck]
  -[NSSQLiteConnection _registerExtraFunctions]
  -[NSSQLiteConnection _restoreBusyTimeOutSettings]
  -[NSSQLiteConnection _configureSynchronousMode]
  -[NSSQLiteConnection _configureIntegrityCheck]
  -[NSSQLiteConnection createSchema]
  -[NSSQLiteConnection _configurePragmaOptions:createdSchema:]
  -[NSSQLiteConnection forceTransactionClosed]
  -[NSSQLiteConnection _clearTransactionCaches]
  -[NSSQLiteConnection _clearCachedStatements]
  -[NSSQLiteConnection _finalizeStatement]
  -[NSSQLiteConnection hasOpenTransaction]
  -[NSSQLiteConnection _ensureNoTransactionOpen]
  -[NSSQLiteConnection prepareSQLStatement:]
  -[NSSQLiteConnection cacheCurrentDBStatementOn:]
  -[NSSQLiteConnection resetSQLStatement]
  -[NSSQLiteConnection transactionDidBegin]
  -[NSSQLiteConnection _setupVacuumIfNecessary]
  -[NSSQLiteConnection transactionDidCommit]
  -[NSSQLiteConnection transactionDidRollback]
  -[NSSQLiteConnection statementCacheForEntity:]
  -[NSSQLiteConnection addVMCachedStatement:]
  -[NSSQLiteConnection _bindVariablesWithInsertedRow:]
  -[NSSQLiteConnection _clearBindVariablesForInsertedRow]
  -[NSSQLiteConnection _rowsChangedByLastExecute]
  -[NSSQLiteConnection cachedUpdateStatementForEntity:andDeltasMask:]
  -[NSSQLiteConnection cacheUpdateStatement:forEntity:andDeltasMask:]
  -[NSSQLiteConnection _bindVariablesWithUpdatedRow:andOriginalRow:forDeltasMask:]
  -[NSSQLiteConnection _clearBindVariablesForUpdateStatement:forDeltasMask:]
  -[NSSQLiteConnection cachedUpdateConstrainedValuesStatmentForEntity:]
  -[NSSQLiteConnection cacheUpdateConstrainedValuesStatement:forEntity:]
  -[NSSQLiteConnection _bindVariablesForConstrainedValuesWithRow:]
  -[NSSQLiteConnection _clearBindVariablesForConstrainedValuesUpdateStatement:]
  -[NSSQLiteConnection _bindVariablesWithDeletedRow:]
  -[NSSQLiteConnection executeCorrelationChangesForValue1:value2:value3:value4:]
  -[NSSQLiteConnection writeCorrelationInsertsFromTracker:]
  -[NSSQLiteConnection writeCorrelationDeletesFromTracker:]
  -[NSSQLiteConnection writeCorrelationMasterReordersFromTracker:]
  -[NSSQLiteConnection writeCorrelationReordersFromTracker:]
  -[NSSQLiteConnection bindTempTableForBindIntarray:]
  -[NSSQLiteConnection bindTempTablesForStatementIfNecessary:]
  -[NSSQLiteConnection _endFetch]
  -[NSSQLiteConnection isFetchInProgress]
  -[NSSQLiteConnection sqlStatement]
  -[NSSQLiteConnection setColumnsToFetch:]
  -[NSSQLiteConnection _clearOtherStatements]
  -[NSSQLiteConnection _countOfVMCachedStatements]
  -[NSSQLiteConnection _newValueForColumn:atIndex:inStatement:]
  -[NSSQLiteConnection handleCorruptedDB:]
  -[NSSQLiteConnection newFetchedArray]
  -[NSSQLiteConnection fetchCreationSQLForType:containing:]
  -[NSSQLiteConnection _hasTableWithName:isTemp:]
  -[NSSQLiteConnection createMetadata]
  -[NSSQLiteConnection metadataColumns]
  -[NSSQLiteConnection _decompressedModelWithData:]
  -[NSSQLiteConnection createCachedModelTable]
  -[NSSQLiteConnection _compressedDataWithModel:]
  -[NSSQLiteConnection _configurePageSize]
  -[NSSQLiteConnection _configureAutoVacuum]
  -[NSSQLiteConnection willCreateSchema]
  -[NSSQLiteConnection didCreateSchema]
  -[NSSQLiteConnection createPrimaryKeyTableForModel:knownEmpty:]
  -[NSSQLiteConnection fetchIndexCreationSQL]
  -[NSSQLiteConnection _getCurrentAutoVacuumValue]
  -[NSSQLiteConnection _tableHasRows:]
  -[NSSQLiteConnection processRelationshipUpdatesForRequestContext:]
  -[NSSQLiteConnection _insertTransactionStringsForRequestContext:]
  -[NSSQLiteConnection _insertTransactionForRequestContext:andStrings:]
  -[NSSQLiteConnection insertChanges:type:transactionID:context:]
  -[NSSQLiteConnection insertUpdates:transactionID:updatedAttributes:]
  -[NSSQLiteConnection _hasOldHistoryTrackingTablesV0]
  -[NSSQLiteConnection _hasOldHistoryTrackingTablesV1]
  -[NSSQLiteConnection _dropOldHistoryTrackingTablesV0]
  -[NSSQLiteConnection _dropOldHistoryTrackingTablesV1]
  -[NSSQLiteConnection _hasTempTableWithName:]
  -[NSSQLiteConnection insertBatchDeleteChangesForTransactionID:]
  -[NSSQLiteConnection _insertTransactionStringForMigrationAuthor:]
  -[NSSQLiteConnection generatePrimaryKeysForEntity:batch:]
  -[NSSQLiteConnection prepareInsertStatementForAncillaryEntity:]
  -[NSSQLiteConnection _lastInsertRowID]
  -[NSSQLiteConnection transactionStringForName:]
  -[NSSQLiteConnection _createTransactionStringWithName:]
  -[NSSQLiteConnection _transactionsStringAndPKsForStrings:]
  -[NSSQLiteConnection insertDictionaryBlock:forEntity:includeOnConflict:]
  -[NSSQLiteConnection _batchInsertThrowWithErrorCode:andMessage:forKey:andValue:additionalDetail:]
  -[NSSQLiteConnection prepareInsertStatementForEntity:includeConstraints:includeOnConflict:]
  -[NSSQLiteConnection _validateProperty:withValue:]
  -[NSSQLiteConnection rowsChangedByLastStatement]
  -[NSSQLiteConnection _useContextObjects]
  -[NSSQLiteConnection _countOfRowsInTable:]
  -[NSSQLiteConnection _adoptQueryGenerationWithSnapshot:]
  -[NSSQLiteConnection registerCurrentQueryGenerationWithStore:retries:]
  -[NSSQLiteConnection fetchTriggerCreationSQL]
  -[NSSQLiteConnection _isQueryGenerationTrackingConnection]
  -[NSSQLiteConnection isWriter]
  -[NSSQLiteConnection setIsWriter:]
  -[NSSQLiteConnection insertRow:]
  -[NSSQLiteConnection prefetchRequestCache]
  -[NSSQLiteConnection updateRow:forRequestContext:]
  -[NSSQLiteConnection updateConstrainedValuesForRow:]
  -[NSSQLiteConnection deleteRow:forRequestContext:]
  -[NSSQLiteConnection uncacheVMStatement:]
  -[NSSQLiteConnection writeCorrelationChangesFromTracker:]
  -[NSSQLiteConnection selectRowsWithStatement:cached:]
  -[NSSQLiteConnection selectCountWithStatement:]
  -[NSSQLiteConnection fetchResultSet:usingFetchPlan:]
  -[NSSQLiteConnection fetchBufferResultSet:usingFetchPlan:]
  -[NSSQLiteConnection setSecureDeleteMode:]
  -[NSSQLiteConnection _vmstatement]
  -[NSSQLiteConnection fetchTableCreationSQLContaining:]
  -[NSSQLiteConnection _setSaveRequest:]
  -[NSSQLiteConnection _clearSaveRequest]
  -[NSSQLiteConnection hasPrimaryKeyTable]
  -[NSSQLiteConnection _buffersForRegisteredFunctions]
  -[NSSQLiteConnection logQueryPlanForStatement:]
  -[NSSQLiteConnection processSaveRequest:]
  -[NSSQLiteConnection processInsertRequest:withOIDs:]
  -[NSSQLiteConnection processUpdateRequest:withOIDs:forAttributes:]
  -[NSSQLiteConnection hasHistoryTransactionWithNumber:]
  -[NSSQLiteConnection processDeleteRequest:]
  -[NSSQLiteConnection processMigrationRequestForHash:]
  -[NSSQLiteConnection processExternalDataReferenceFilesDeletedByRequest:]
  -[NSSQLiteConnection insertArray:forEntity:includeOnConflict:]
  -[NSSQLiteConnection insertManagedObjectBlock:forEntity:includeOnConflict:]
  -[NSSQLiteConnection gatherObjectIDsFromTable:]
  -[NSSQLiteConnection registerMigrationUpdateFunctionWithMigrator:]
  -[NSSQLiteConnection executeAttributeUniquenessCheckSQLStatement:returningColumns:]
  -[NSSQLiteConnection executeMulticolumnUniquenessCheckSQLStatement:returningColumns:]
  -[NSSQLiteConnection _checkActiveGenerationsForIdentfier:]
  -[NSSQLiteConnection createSetOfObjectIDsUpdatedByTriggers]
  -[NSSQLiteConnection clearObjectIDsUpdatedByTriggers]
  -[NSSQLiteConnection triggerUpdatedRowInTable:withEntityID:primaryKey:columnName:newValue:]
  -[NSSQLiteConnection createSetOfObjectIDsInsertUpdatedByDATriggers]
  -[NSSQLiteConnection clearObjectIDsInsertUpdatededByDATriggers]
  -[NSSQLiteConnection derivedAttributeUpdatedInsertedRowInTable:withEntityID:primaryKey:columnName:newValue:]
  -[NSSQLiteConnection createSetOfObjectIDsUpdatedByDATriggers]
  -[NSSQLiteConnection clearObjectIDsUpdatededByDATriggers]
  -[NSSQLiteConnection derivedAttributeUpdatedRowInTable:withEntityID:primaryKey:columnName:newValue:]


NSSQLJoinIntermediate : NSSQLIntermediate
  // class methods
  +[NSSQLJoinIntermediate createToOneJoinIntermediateForProperty:lastStep:inScope:context:]
  +[NSSQLJoinIntermediate createToManyJoinIntermediateForProperty:lastStep:inScope:context:]
  +[NSSQLJoinIntermediate createManyToManyJoinIntermediateForProperty:direct:lastStep:inScope:context:]
  +[NSSQLJoinIntermediate createJoinIntermediatesForKeypath:startEntity:startAlias:forScope:inStatementIntermediate:inContext:]

  // instance methods
  -[NSSQLJoinIntermediate dealloc]
  -[NSSQLJoinIntermediate destinationEntity]
  -[NSSQLJoinIntermediate relationship]
  -[NSSQLJoinIntermediate generateSQLStringInContext:]
  -[NSSQLJoinIntermediate sourceEntity]
  -[NSSQLJoinIntermediate setJoinType:]
  -[NSSQLJoinIntermediate destinationAlias]
  -[NSSQLJoinIntermediate initForRelationship:sourceAlias:destinationAlias:correlationAlias:direct:inScope:]
  -[NSSQLJoinIntermediate sourceAlias]
  -[NSSQLJoinIntermediate setSourceAlias:]
  -[NSSQLJoinIntermediate _generateToOneSQLStringInContext:]
  -[NSSQLJoinIntermediate _generateToManySQLStringInContext:]
  -[NSSQLJoinIntermediate _generateManyToManySQLStringInContext:]
  -[NSSQLJoinIntermediate isDirect]
  -[NSSQLJoinIntermediate setDirect:]
  -[NSSQLJoinIntermediate setDestinationAlias:]
  -[NSSQLJoinIntermediate correlationAlias]
  -[NSSQLJoinIntermediate joinType]


NSSQLKeypathExpressionIntermediate : NSSQLExpressionIntermediate
 @property  BOOL substitutePK

  // instance methods
  -[NSSQLKeypathExpressionIntermediate generateSQLStringInContext:]
  -[NSSQLKeypathExpressionIntermediate setSubstitutePK:]
  -[NSSQLKeypathExpressionIntermediate _generateSQLForKeyPathExpression:allowToMany:inContext:]
  -[NSSQLKeypathExpressionIntermediate _propertyDescriptionForKeypath:startingAtEntity:allowToMany:lastKeyVisited:inContext:]
  -[NSSQLKeypathExpressionIntermediate _propertyDescriptionsForKeypath:rootedAtEntity:allowToMany:lastKeyVisited:inContext:]
  -[NSSQLKeypathExpressionIntermediate _generateSQLForProperty:startEntity:startAlias:keypath:inContext:]
  -[NSSQLKeypathExpressionIntermediate substitutePK]


NSSQLLimitIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLLimitIntermediate generateSQLStringInContext:]
  -[NSSQLLimitIntermediate initWithLimit:inScope:]


NSSQLManyToMany : NSSQLRelationship
  // instance methods
  -[NSSQLManyToMany dealloc]
  -[NSSQLManyToMany inverseManyToMany]
  -[NSSQLManyToMany columnName]
  -[NSSQLManyToMany correlationTableName]
  -[NSSQLManyToMany isReflexive]
  -[NSSQLManyToMany inverseColumnName]
  -[NSSQLManyToMany inverseOrderColumnName]
  -[NSSQLManyToMany orderColumnName]
  -[NSSQLManyToMany initWithEntity:propertyDescription:]
  -[NSSQLManyToMany _setColumnName:]
  -[NSSQLManyToMany _setInverseManyToMany:]
  -[NSSQLManyToMany isMaster]
  -[NSSQLManyToMany columnSQLType]
  -[NSSQLManyToMany orderColumnSQLType]
  -[NSSQLManyToMany _setCorrelationTableName:]
  -[NSSQLManyToMany _setOrderColumnName:]
  -[NSSQLManyToMany isTableSchemaEqual:]


PFCloudKitImporterFetchRecordsWorkItem : PFCloudKitImporterWorkItem <PFCloudKitSerializerDelegate>
 @property  NSDictionary *assetPathToSafeSaveURL
 @property  NSArray *encounteredErrors
 @property  NSArray *updatedRecords
 @property  NSArray *updatedRecordIDs
 @property  unsigned long totalAssetBytes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PFCloudKitImporterFetchRecordsWorkItem dealloc]
  -[PFCloudKitImporterFetchRecordsWorkItem initWithOptions:request:]
  -[PFCloudKitImporterFetchRecordsWorkItem doWorkWithCompletion:]
  -[PFCloudKitImporterFetchRecordsWorkItem fetchRecordsRequest]
  -[PFCloudKitImporterFetchRecordsWorkItem fetchFinishedForRecord:withID:error:]
  -[PFCloudKitImporterFetchRecordsWorkItem fetchOperationFinishedWithError:completion:]
  -[PFCloudKitImporterFetchRecordsWorkItem removeDownloadedAssetFiles]
  -[PFCloudKitImporterFetchRecordsWorkItem addUpdatedRecord:]
  -[PFCloudKitImporterFetchRecordsWorkItem newMirroringResultByApplyingAccumulatedChanges:]
  -[PFCloudKitImporterFetchRecordsWorkItem cloudKitSerializer:failedToUpdateRelationship:withError:]
  -[PFCloudKitImporterFetchRecordsWorkItem cloudKitSerializer:safeSaveURLForAsset:]
  -[PFCloudKitImporterFetchRecordsWorkItem assetPathToSafeSaveURL]
  -[PFCloudKitImporterFetchRecordsWorkItem totalAssetBytes]
  -[PFCloudKitImporterFetchRecordsWorkItem updatedRecords]
  -[PFCloudKitImporterFetchRecordsWorkItem updatedRecordIDs]
  -[PFCloudKitImporterFetchRecordsWorkItem encounteredErrors]


PFCloudKitContainerProvider : NSObject
  // instance methods
  -[PFCloudKitContainerProvider containerWithIdentifier:]
  -[PFCloudKitContainerProvider containerWithIdentifier:options:]


NSSQLModel : NSStoreMapping
  // instance methods
  -[NSSQLModel dealloc]
  -[NSSQLModel finalize]
  -[NSSQLModel entities]
  -[NSSQLModel managedObjectModel]
  -[NSSQLModel configurationName]
  -[NSSQLModel entityForID:]
  -[NSSQLModel initWithManagedObjectModel:configurationName:]
  -[NSSQLModel entitiesByName]
  -[NSSQLModel _entityOffset]
  -[NSSQLModel initWithManagedObjectModel:configurationName:retainHashHack:]
  -[NSSQLModel entityNamed:]
  -[NSSQLModel entityIDForName:]
  -[NSSQLModel initWithManagedObjectModel:configurationName:brokenHashVersion:]
  -[NSSQLModel _modelHasPrecomputedKeyOrder]
  -[NSSQLModel _recordHasVirtualToOnes]
  -[NSSQLModel _useLeopardStyleHashing]
  -[NSSQLModel _useSnowLeopardStyleHashing]
  -[NSSQLModel _precomputedKeyOrderForEntity:]
  -[NSSQLModel _addIndexedEntity:]
  -[NSSQLModel _generateModel:error:]
  -[NSSQLModel initWithManagedObjectModel:configurationName:retainHashHack:brokenHashVersion:]
  -[NSSQLModel _entityMapping]
  -[NSSQLModel _sqlEntityWithRenamingIdentifier:]
  -[NSSQLModel _lastEntityID]
  -[NSSQLModel _retainHashHack]


NSSQLOffsetIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLOffsetIntermediate generateSQLStringInContext:]
  -[NSSQLOffsetIntermediate initWithOffset:inScope:]


NSSQLUbiquitizedStoreConnectionManager : NSSQLConnectionManager
  // instance methods
  -[NSSQLUbiquitizedStoreConnectionManager dealloc]
  -[NSSQLUbiquitizedStoreConnectionManager disconnectAllConnections]
  -[NSSQLUbiquitizedStoreConnectionManager initWithSQLCore:priority:seedConnection:]
  -[NSSQLUbiquitizedStoreConnectionManager initializationConnection]
  -[NSSQLUbiquitizedStoreConnectionManager setExclusiveLockingMode:]
  -[NSSQLUbiquitizedStoreConnectionManager handleStoreRequest:]
  -[NSSQLUbiquitizedStoreConnectionManager scheduleBarrierBlock:]
  -[NSSQLUbiquitizedStoreConnectionManager scheduleConnectionsBarrier:]
  -[NSSQLUbiquitizedStoreConnectionManager routeStoreRequest:]


NSCloudKitMirroringRequestManager : NSObject
 @property  NSCloudKitMirroringImportRequest *pendingImportRequest
 @property  NSCloudKitMirroringExportRequest *pendingExportRequest
 @property  NSCloudKitMirroringDelegateSetupRequest *pendingSetupRequest
 @property  NSCloudKitMirroringDelegateResetRequest *pendingDelegateResetRequest
 @property  NSCloudKitMirroringResetZoneRequest *pendingResetRequest
 @property  NSCloudKitMirroringFetchRecordsRequest *pendingFetchRecordsRequest
 @property  NSCloudKitMirroringResetMetadataRequest *pendingResetMetadataRequest
 @property  NSCloudKitMirroringRequest *activeRequest
 @property  NSCloudKitMirroringDelegateSerializationRequest *pendingSerializationRequest
 @property  NSCloudKitMirroringInitializeSchemaRequest *pendingInitializeSchemaRequest
 @property  NSCloudKitMirroringExportProgressRequest *pendingExportProgressRequest

  // instance methods
  -[NSCloudKitMirroringRequestManager dealloc]
  -[NSCloudKitMirroringRequestManager duplicateRequestErrorForRequest:]
  -[NSCloudKitMirroringRequestManager enqueueRequest:error:]
  -[NSCloudKitMirroringRequestManager dequeueNextRequest]
  -[NSCloudKitMirroringRequestManager requestFinished:]
  -[NSCloudKitMirroringRequestManager dequeueAllPendingRequests]
  -[NSCloudKitMirroringRequestManager pendingImportRequest]
  -[NSCloudKitMirroringRequestManager pendingExportRequest]
  -[NSCloudKitMirroringRequestManager pendingSetupRequest]
  -[NSCloudKitMirroringRequestManager pendingDelegateResetRequest]
  -[NSCloudKitMirroringRequestManager pendingResetRequest]
  -[NSCloudKitMirroringRequestManager pendingFetchRecordsRequest]
  -[NSCloudKitMirroringRequestManager pendingResetMetadataRequest]
  -[NSCloudKitMirroringRequestManager pendingSerializationRequest]
  -[NSCloudKitMirroringRequestManager pendingInitializeSchemaRequest]
  -[NSCloudKitMirroringRequestManager pendingExportProgressRequest]
  -[NSCloudKitMirroringRequestManager activeRequest]


PFStoreComparisonCache : NSObject
  // instance methods
  -[PFStoreComparisonCache init]
  -[PFStoreComparisonCache dealloc]
  -[PFStoreComparisonCache objectIDForIdentifier:inStore:]
  -[PFStoreComparisonCache setObjectID:forIdentifier:]
  -[PFStoreComparisonCache identifiersForStore:]


NSCKHistoryAnalyzerState : NSManagedObject <PFHistoryAnalyzerObjectState>
 @property  NSNumber *entityId
 @property  NSNumber *entityPK
 @property  NSNumber *originalChangeTypeNum
 @property  NSNumber *finalChangeTypeNum
 @property  NSManagedObjectID *analyzedObjectID
 @property  NSNumber *originalTransactionNumber
 @property  long long originalChangeType
 @property  NSNumber *finalTransactionNumber
 @property  long long finalChangeType
 @property  NSDictionary *tombstone
 @property  NSString *finalChangeAuthor

  // class methods
  +[NSCKHistoryAnalyzerState entityPath]
  +[NSCKHistoryAnalyzerState countAnalyzerStatesInStore:matchingPredicate:withManagedObjectContext:error:]
  +[NSCKHistoryAnalyzerState insertAnalyzerStateForChange:inStore:withManagedObjectContext:error:]
  +[NSCKHistoryAnalyzerState fetchStateForChangedObjectID:withManagedObjectContext:error:]
  +[NSCKHistoryAnalyzerState purgeAnalyzedHistoryFromStore:withManagedObjectContext:error:]
  +[NSCKHistoryAnalyzerState countAnalyzerStatesInStore:withManagedObjectContext:error:]

  // instance methods
  -[NSCKHistoryAnalyzerState tombstone]
  -[NSCKHistoryAnalyzerState updateWithChange:]
  -[NSCKHistoryAnalyzerState analyzedObjectID]
  -[NSCKHistoryAnalyzerState originalChangeType]
  -[NSCKHistoryAnalyzerState finalChangeType]


NSConstraintValidator : NSObject
  // instance methods
  -[NSConstraintValidator dealloc]
  -[NSConstraintValidator reset]
  -[NSConstraintValidator initWithManagedObjectContext:]
  -[NSConstraintValidator registerObjects:]
  -[NSConstraintValidator validateForSave]
  -[NSConstraintValidator registerObject:]
  -[NSConstraintValidator validateCaches]
  -[NSConstraintValidator _addConstraintRoot:forEntity:]


NSSQLOptLockKey : NSSQLColumn
  // instance methods
  -[NSSQLOptLockKey name]
  -[NSSQLOptLockKey initWithEntity:propertyDescription:]


NSCloudKitMirroringDelegateResetRequest : NSCloudKitMirroringRequest
 @property  NSError *causedByError

  // instance methods
  -[NSCloudKitMirroringDelegateResetRequest dealloc]
  -[NSCloudKitMirroringDelegateResetRequest initWithError:completionBlock:]
  -[NSCloudKitMirroringDelegateResetRequest causedByError]


PFCloudKitMetadataPurger : NSObject
  // instance methods
  -[PFCloudKitMetadataPurger purgeMetadataFromStore:inMonitor:withOptions:forRecordZones:inDatabaseWithScope:andTransactionAuthor:error:]
  -[PFCloudKitMetadataPurger purgeMetadataFromStore:inMonitor:withOptions:forRecordZones:inDatabaseWithScope:error:]
  -[PFCloudKitMetadataPurger purgeMetadataMatchingObjectIDs:inRequest:inStore:withMonitor:error:]


NSSQLOrderIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLOrderIntermediate dealloc]
  -[NSSQLOrderIntermediate generateSQLStringInContext:]
  -[NSSQLOrderIntermediate initWithSortDescriptors:inScope:]
  -[NSSQLOrderIntermediate _generateSQLForOrderedManyToManyInverse:inContext:]
  -[NSSQLOrderIntermediate _generateSQLForOrderedToManyInverse:inContext:]


_PFFetchPlanHeader : NSObject

NSSQLPredicateAnalyser : NSObject <NSPredicateVisitor>
  // instance methods
  -[NSSQLPredicateAnalyser init]
  -[NSSQLPredicateAnalyser dealloc]
  -[NSSQLPredicateAnalyser visitPredicate:]
  -[NSSQLPredicateAnalyser visitPredicateExpression:]
  -[NSSQLPredicateAnalyser visitPredicateOperator:]
  -[NSSQLPredicateAnalyser allModifierPredicates]
  -[NSSQLPredicateAnalyser keypaths]
  -[NSSQLPredicateAnalyser subqueries]
  -[NSSQLPredicateAnalyser setExpressions]


NSCKMetadataEntry : NSManagedObject
 @property  NSNumber *boolValueNum
 @property  NSString *key
 @property  NSString *stringValue
 @property  BOOL boolValue
 @property  NSObject<NSSecureCoding> *transformedValue
 @property  NSNumber *integerValue
 @property  NSDate *dateValue

  // class methods
  +[NSCKMetadataEntry entityPath]
  +[NSCKMetadataEntry entryForKey:fromStore:inManagedObjectContext:error:]
  +[NSCKMetadataEntry entriesForKeys:fromStore:inManagedObjectContext:error:]
  +[NSCKMetadataEntry insertMetadataEntryWithKey:boolValue:forStore:intoManagedObjectContext:]
  +[NSCKMetadataEntry insertMetadataEntryWithKey:stringValue:forStore:intoManagedObjectContext:]
  +[NSCKMetadataEntry updateOrInsertMetadataEntryWithKey:boolValue:forStore:intoManagedObjectContext:error:]
  +[NSCKMetadataEntry entriesForKeys:onlyFetchingProperties:fromStore:inManagedObjectContext:error:]
  +[NSCKMetadataEntry _insertMetadataEntryWithKey:forStore:intoManagedObjectContext:]
  +[NSCKMetadataEntry _updateOrInsertMetadataEntryWithKey:valueSettingBlock:forStore:intoManagedObjectContext:error:]
  +[NSCKMetadataEntry insertMetadataEntryWithKey:transformedValue:forStore:intoManagedObjectContext:]
  +[NSCKMetadataEntry insertMetadataEntryWithKey:integerValue:forStore:intoManagedObjectContext:]
  +[NSCKMetadataEntry updateOrInsertMetadataEntryWithKey:stringValue:forStore:intoManagedObjectContext:error:]
  +[NSCKMetadataEntry updateOrInsertMetadataEntryWithKey:transformedValue:forStore:intoManagedObjectContext:error:]
  +[NSCKMetadataEntry updateOrInsertMetadataEntryWithKey:integerValue:forStore:intoManagedObjectContext:error:]

  // instance methods
  -[NSCKMetadataEntry boolValue]
  -[NSCKMetadataEntry setBoolValue:]
  -[NSCKMetadataEntry describeValue]


NSCloudKitMirroringRequest : NSPersistentStoreRequest
 @property  NSUUID *requestIdentifier
 @property  NSCloudKitMirroringRequestOptions *options
 @property  @? requestCompletionBlock

  // instance methods
  -[NSCloudKitMirroringRequest dealloc]
  -[NSCloudKitMirroringRequest copyWithZone:]
  -[NSCloudKitMirroringRequest options]
  -[NSCloudKitMirroringRequest requestCompletionBlock]
  -[NSCloudKitMirroringRequest initWithOptions:completionBlock:]
  -[NSCloudKitMirroringRequest requestType]
  -[NSCloudKitMirroringRequest validateForUseWithStore:error:]
  -[NSCloudKitMirroringRequest requestIdentifier]


NSCloudKitMirroringExportRequest : NSCloudKitMirroringRequest

NSCloudKitMirroringImportRequest : NSCloudKitMirroringRequest

NSCloudKitMirroringResetZoneRequest : NSCloudKitMirroringRequest

NSCloudKitMirroringResetMetadataRequest : NSCloudKitMirroringRequest
 @property  NSSet *objectIDsToReset

  // instance methods
  -[NSCloudKitMirroringResetMetadataRequest dealloc]
  -[NSCloudKitMirroringResetMetadataRequest copyWithZone:]
  -[NSCloudKitMirroringResetMetadataRequest objectIDsToReset]
  -[NSCloudKitMirroringResetMetadataRequest setObjectIDsToReset:]


NSCloudKitMirroringInitializeSchemaRequest : NSCloudKitMirroringRequest
 @property  unsigned long schemaInitializationOptions

  // instance methods
  -[NSCloudKitMirroringInitializeSchemaRequest setSchemaInitializationOptions:]
  -[NSCloudKitMirroringInitializeSchemaRequest schemaInitializationOptions]


NSConstraintCacheKey : NSObject
  // instance methods
  -[NSConstraintCacheKey dealloc]
  -[NSConstraintCacheKey isEqual:]
  -[NSConstraintCacheKey copyWithZone:]
  -[NSConstraintCacheKey initWithValues:]


NSConstraintCache : NSObject
 @property  NSArray *constraint
 @property  NSArray *extension
 @property  NSEntityDescription *entity
 @property  NSArray *children

  // class methods
  +[NSConstraintCache createCachesForEntity:forValidator:]

  // instance methods
  -[NSConstraintCache dealloc]
  -[NSConstraintCache reset]
  -[NSConstraintCache entity]
  -[NSConstraintCache children]
  -[NSConstraintCache extension]
  -[NSConstraintCache constraint]
  -[NSConstraintCache registerObject:]
  -[NSConstraintCache validateForSave:]
  -[NSConstraintCache _constraint:extends:]
  -[NSConstraintCache _alreadyHasChildForEntity:constraint:]
  -[NSConstraintCache initForEntity:constraint:extension:]
  -[NSConstraintCache _addChild:]
  -[NSConstraintCache extendConstraint:onParentEntity:parentCache:]
  -[NSConstraintCache keyForValues:]
  -[NSConstraintCache registerObject:forValues:]
  -[NSConstraintCache _intraStoreConflictsExistForValues:]


NSSQLPrimaryKey : NSSQLColumn
  // instance methods
  -[NSSQLPrimaryKey dealloc]
  -[NSSQLPrimaryKey name]
  -[NSSQLPrimaryKey _setName:]
  -[NSSQLPrimaryKey initWithEntity:propertyDescription:]
  -[NSSQLPrimaryKey copyValuesForReadOnlyFetch:]
  -[NSSQLPrimaryKey sqlTypeString]


NSSQLProperty : NSObject
 @property  BOOL constrained

  // instance methods
  -[NSSQLProperty dealloc]
  -[NSSQLProperty isEqual:]
  -[NSSQLProperty name]
  -[NSSQLProperty entity]
  -[NSSQLProperty isConstrained]
  -[NSSQLProperty setConstrained:]
  -[NSSQLProperty propertyDescription]
  -[NSSQLProperty isToMany]
  -[NSSQLProperty isToOne]
  -[NSSQLProperty isManyToMany]
  -[NSSQLProperty columnName]
  -[NSSQLProperty propertyType]
  -[NSSQLProperty isAttribute]
  -[NSSQLProperty sqlType]
  -[NSSQLProperty slot]
  -[NSSQLProperty externalName]
  -[NSSQLProperty initWithEntity:propertyDescription:]
  -[NSSQLProperty copyValuesForReadOnlyFetch:]
  -[NSSQLProperty isColumn]
  -[NSSQLProperty isRelationship]
  -[NSSQLProperty setEntityForReadOnlyFetch:]
  -[NSSQLProperty isUnique]
  -[NSSQLProperty isPrimaryKey]
  -[NSSQLProperty setPropertyDescription:]
  -[NSSQLProperty isForeignKey]
  -[NSSQLProperty isForeignEntityKey]
  -[NSSQLProperty isForeignOrderKey]
  -[NSSQLProperty isEntityKey]
  -[NSSQLProperty isOptLockKey]


NSSQLReadOnlySelectIntermediate : NSSQLSelectIntermediate
  // instance methods
  -[NSSQLReadOnlySelectIntermediate dealloc]
  -[NSSQLReadOnlySelectIntermediate initWithScope:]
  -[NSSQLReadOnlySelectIntermediate generateSQLStringInContext:]
  -[NSSQLReadOnlySelectIntermediate onlyFetchesAggregates]
  -[NSSQLReadOnlySelectIntermediate resolveVariableExpression:inContext:]


NSSQLRelationship : NSSQLProperty
  // instance methods
  -[NSSQLRelationship dealloc]
  -[NSSQLRelationship name]
  -[NSSQLRelationship isOrdered]
  -[NSSQLRelationship _setName:]
  -[NSSQLRelationship destinationEntity]
  -[NSSQLRelationship inverseRelationship]
  -[NSSQLRelationship correlationTableName]
  -[NSSQLRelationship relationshipDescription]
  -[NSSQLRelationship foreignKey]
  -[NSSQLRelationship initWithEntity:propertyDescription:]
  -[NSSQLRelationship copyValuesForReadOnlyFetch:]
  -[NSSQLRelationship sourceEntity]
  -[NSSQLRelationship _setInverseRelationship:]
  -[NSSQLRelationship initForReadOnlyFetchWithEntity:propertyDescription:]
  -[NSSQLRelationship _setForeignOrderKey:]


NSSQLRow : NSPersistentCacheRow
  // class methods
  +[NSSQLRow allocWithZone:]
  +[NSSQLRow initialize]
  +[NSSQLRow newBatchRowAllocation:count:forSQLEntity:withOwnedObjectIDs:andTimestamp:]
  +[NSSQLRow allocForSQLEntity:]

  // instance methods
  -[NSSQLRow dealloc]
  -[NSSQLRow isEqual:]
  -[NSSQLRow copy]
  -[NSSQLRow valueForKey:]
  -[NSSQLRow version]
  -[NSSQLRow objectID]
  -[NSSQLRow setObjectID:]
  -[NSSQLRow setForeignEntityKeySlot:entityKey:]
  -[NSSQLRow setForeignOrderKeySlot:orderKey:]
  -[NSSQLRow setForeignKeySlot:int64:]
  -[NSSQLRow setOptLock:]
  -[NSSQLRow initWithSQLEntity:ownedObjectID:andTimestamp:]
  -[NSSQLRow knownKeyValuesPointer]
  -[NSSQLRow _snapshot_]
  -[NSSQLRow sqlEntity]
  -[NSSQLRow pk64]
  -[NSSQLRow sqlEntityID]
  -[NSSQLRow optLock]
  -[NSSQLRow foreignKeyForSlot:]
  -[NSSQLRow foreignEntityKeyForSlot:]
  -[NSSQLRow foreignOrderKeyForSlot:]
  -[NSSQLRow attributeValueForSlot:]
  -[NSSQLRow newUpdateMaskForConstrainedValues]
  -[NSSQLRow _versionNumber]
  -[NSSQLRow newUpdateMaskFrom:]
  -[NSSQLRow newUpdateMaskWithChangedConstraintsFrom:]
  -[NSSQLRow initWithSQLEntity:objectID:]
  -[NSSQLRow newObjectIDForToOne:]
  -[NSSQLRow _validateToOnes]
  -[NSSQLRow newColumnMaskFrom:columnInclusionOptions:]
  -[NSSQLRow hasUniqueConstraintDiffFrom:]


NSSQLObjectFaultRequestContext : NSSQLStoreRequestContext
 @property  NSManagedObjectID *objectID
 @property  BOOL forConflictAnalysis

  // instance methods
  -[NSSQLObjectFaultRequestContext dealloc]
  -[NSSQLObjectFaultRequestContext objectID]
  -[NSSQLObjectFaultRequestContext fetchRequest]
  -[NSSQLObjectFaultRequestContext executeRequestCore:]
  -[NSSQLObjectFaultRequestContext initWithObjectID:context:sqlCore:]
  -[NSSQLObjectFaultRequestContext forConflictAnalysis]
  -[NSSQLObjectFaultRequestContext createFetchRequestContext]
  -[NSSQLObjectFaultRequestContext setForConflictAnalysis:]


NSSQLRowCache : NSPersistentStoreCache
  // class methods
  +[NSSQLRowCache initialize]

  // instance methods
  -[NSSQLRowCache dealloc]
  -[NSSQLRowCache sqlCore]
  -[NSSQLRowCache initWithPersistentStore:]


NSSQLSelectIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLSelectIntermediate dealloc]
  -[NSSQLSelectIntermediate generateSQLStringInContext:]
  -[NSSQLSelectIntermediate isTargetColumnsScoped]
  -[NSSQLSelectIntermediate setFetchColumns:]
  -[NSSQLSelectIntermediate setUseDistinct:]
  -[NSSQLSelectIntermediate setIsCount:]
  -[NSSQLSelectIntermediate onlyFetchesAggregates]
  -[NSSQLSelectIntermediate initWithEntity:alias:fetchColumns:inScope:]
  -[NSSQLSelectIntermediate resolveVariableExpression:inContext:]
  -[NSSQLSelectIntermediate initForCorrelationTarget:alias:fetchColumns:inScope:]
  -[NSSQLSelectIntermediate setColumnAlias:]
  -[NSSQLSelectIntermediate setFetchEntity:]


NSSQLSimpleWhereIntermediate : NSSQLWhereIntermediate
  // instance methods
  -[NSSQLSimpleWhereIntermediate dealloc]
  -[NSSQLSimpleWhereIntermediate generateSQLStringInContext:]
  -[NSSQLSimpleWhereIntermediate isWhereScoped]
  -[NSSQLSimpleWhereIntermediate initWithPredicate:inScope:]
  -[NSSQLSimpleWhereIntermediate _lastScopedItem]
  -[NSSQLSimpleWhereIntermediate _isNilExpression:]
  -[NSSQLSimpleWhereIntermediate _generateSQLType3InContext:]
  -[NSSQLSimpleWhereIntermediate _sqlTokenForPredicateOperator:inContext:]
  -[NSSQLSimpleWhereIntermediate _cfStringOptionsFromPredicateOptions:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForString:expressionPath:wildStart:wildEnd:allowToMany:inContext:]
  -[NSSQLSimpleWhereIntermediate _upperBoundSearchStringForString:context:]
  -[NSSQLSimpleWhereIntermediate _generateSQLSubstringWildStart:wildEnd:inContext:]
  -[NSSQLSimpleWhereIntermediate _entityDestinationIfKeyOfSomeSort:]
  -[NSSQLSimpleWhereIntermediate _prefetchSourceOfUnidirectionalVirtualInverse:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForConstKeyArray:targetEntity:reboundFrom:inContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForConst:inManyToMany:expression:inContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForConst:inToMany:inContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForConst:inAttribute:expression:inContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLType1InContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLType2InContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForMatchingOperator:inContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLBeginsWithStringInContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLEndsWithStringInContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLContainmentStringInContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLBetweenStringInContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLBoundByStringInContext:]
  -[NSSQLSimpleWhereIntermediate _generateSQLForWildSubStringForGlob:wildStart:wildEnd:]


NSSQLiteStatement : NSObject
 @property  NSCachedFetchRequestInfo *cachedStatementInfo
 @property  BOOL trackChangedRowCount

  // instance methods
  -[NSSQLiteStatement dealloc]
  -[NSSQLiteStatement entity]
  -[NSSQLiteStatement fakeEntityForFetch]
  -[NSSQLiteStatement isReadOnly]
  -[NSSQLiteStatement sqlString]
  -[NSSQLiteStatement initWithEntity:sqlString:]
  -[NSSQLiteStatement clearCaches:]
  -[NSSQLiteStatement cachedSQLiteStatement]
  -[NSSQLiteStatement addBindVariable:]
  -[NSSQLiteStatement initWithEntity:]
  -[NSSQLiteStatement setImpossibleCondition:]
  -[NSSQLiteStatement setSQLString:]
  -[NSSQLiteStatement setBindIntarrays:]
  -[NSSQLiteStatement setBindVariables:]
  -[NSSQLiteStatement cacheFakeEntityForFetch:]
  -[NSSQLiteStatement setCachedStatementInfo:]
  -[NSSQLiteStatement bindVariables]
  -[NSSQLiteStatement isImpossibleCondition]
  -[NSSQLiteStatement setTrackChangedRowCount:]
  -[NSSQLiteStatement bindIntarrays]
  -[NSSQLiteStatement setCachedSQLiteStatement:forConnection:]
  -[NSSQLiteStatement removeAllBindVariables]
  -[NSSQLiteStatement addBindIntarray:]
  -[NSSQLiteStatement removeAllBindIntarrays]
  -[NSSQLiteStatement cachedStatementInfo]
  -[NSSQLiteStatement trackChangedRowCount]


PFCloudKitExporter : NSObject
 @property  PFCloudKitExporterOptions *options
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSCloudKitMirroringRequest *request
 @property  NSObject<PFCloudKitExporterDelegate> *delegate
 @property  PFCloudKitExportContext *exportContext
 @property  PFCloudKitStoreMonitor *monitor
 @property  NSDictionary *operationIDToResult

  // instance methods
  -[PFCloudKitExporter dealloc]
  -[PFCloudKitExporter options]
  -[PFCloudKitExporter delegate]
  -[PFCloudKitExporter setDelegate:]
  -[PFCloudKitExporter .cxx_destruct]
  -[PFCloudKitExporter monitor]
  -[PFCloudKitExporter request]
  -[PFCloudKitExporter workQueue]
  -[PFCloudKitExporter exportIfNecessary]
  -[PFCloudKitExporter analyzeHistoryInStore:withManagedObjectContext:error:]
  -[PFCloudKitExporter executeOperation:]
  -[PFCloudKitExporter finishExportWithResult:]
  -[PFCloudKitExporter exportOperationFinished:withSavedRecords:deletedRecordIDs:operationError:]
  -[PFCloudKitExporter updateMetadataForSavedRecords:deletedRecordIDs:inStore:withManagedObjectContext:]
  -[PFCloudKitExporter initWithOptions:request:monitor:workQueue:]
  -[PFCloudKitExporter exportIfNecessaryWithCompletion:]
  -[PFCloudKitExporter exportContext]
  -[PFCloudKitExporter operationIDToResult]


_NSCoreDataInternal : NSObject
  // class methods
  +[_NSCoreDataInternal pflogFaultLog]


NSSQLStoreMappingGenerator : NSObject
  // class methods
  +[NSSQLStoreMappingGenerator invalidate]
  +[NSSQLStoreMappingGenerator defaultMappingGenerator]

  // instance methods
  -[NSSQLStoreMappingGenerator init]
  -[NSSQLStoreMappingGenerator dealloc]
  -[NSSQLStoreMappingGenerator newGeneratedPropertyName:]
  -[NSSQLStoreMappingGenerator uniqueNameWithBase:]
  -[NSSQLStoreMappingGenerator generateTableName:isAncillary:]
  -[NSSQLStoreMappingGenerator newUniqueNameWithBase:withLength:]


NSSQLSubqueryExpressionIntermediatePredicateVisitor : NSObject
  // instance methods
  -[NSSQLSubqueryExpressionIntermediatePredicateVisitor dealloc]
  -[NSSQLSubqueryExpressionIntermediatePredicateVisitor visitPredicate:]
  -[NSSQLSubqueryExpressionIntermediatePredicateVisitor visitPredicateExpression:]
  -[NSSQLSubqueryExpressionIntermediatePredicateVisitor initWithScope:]
  -[NSSQLSubqueryExpressionIntermediatePredicateVisitor checkPredicate:]


NSSQLSubqueryExpressionIntermediate : NSSQLExpressionIntermediate
  // instance methods
  -[NSSQLSubqueryExpressionIntermediate dealloc]
  -[NSSQLSubqueryExpressionIntermediate generateSQLStringInContext:]
  -[NSSQLSubqueryExpressionIntermediate initWithExpression:trailingKeypath:inScope:]
  -[NSSQLSubqueryExpressionIntermediate governingAliasForKeypathExpression:]
  -[NSSQLSubqueryExpressionIntermediate keypathExpressionIsSafeLHSForIn:]
  -[NSSQLSubqueryExpressionIntermediate governingEntityForKeypathExpression:]
  -[NSSQLSubqueryExpressionIntermediate _promoteJoinsForSubqueryScopedKeypaths]
  -[NSSQLSubqueryExpressionIntermediate fetchIntermediateForKeypathExpression:]
  -[NSSQLSubqueryExpressionIntermediate selectDistinct]
  -[NSSQLSubqueryExpressionIntermediate _promoteJoinsForSubqueryScopedKeypath:]
  -[NSSQLSubqueryExpressionIntermediate _generateSQLForVariableExpression:allowToMany:inContext:]
  -[NSSQLSubqueryExpressionIntermediate _isKeypathScopedToSubquery:]
  -[NSSQLSubqueryExpressionIntermediate _setVariableColumn:]
  -[NSSQLSubqueryExpressionIntermediate canDoDirectJoinGivenPredicate:]
  -[NSSQLSubqueryExpressionIntermediate _createCollectionJoinsForFetchInContext:]
  -[NSSQLSubqueryExpressionIntermediate _createSelectClauseInFetchWithContext:]


NSSQLToMany : NSSQLRelationship
  // instance methods
  -[NSSQLToMany isToMany]
  -[NSSQLToMany initWithEntity:propertyDescription:]
  -[NSSQLToMany inverseToOne]


_PFModelMap : NSObject
 @property  NSManagedObjectModel *clientModel
 @property  NSArray *allEntities
 @property  NSDictionary *entitiesByPath
 @property  unsigned long clientEntityCount
 @property  NSArray *models
 @property  unsigned long entityCount

  // class methods
  +[_PFModelMap ancillaryModelFactoryClasses]

  // instance methods
  -[_PFModelMap dealloc]
  -[_PFModelMap models]
  -[_PFModelMap addManagedObjectModel:]
  -[_PFModelMap entityForPath:]
  -[_PFModelMap entityCount]
  -[_PFModelMap entityForClassName:inContext:]
  -[_PFModelMap entitiesForContext:configuration:]
  -[_PFModelMap initWithClientModel:]
  -[_PFModelMap slotForEntity:]
  -[_PFModelMap entityForSlot:]
  -[_PFModelMap clientModel]
  -[_PFModelMap allEntities]
  -[_PFModelMap entitiesByPath]
  -[_PFModelMap clientEntityCount]


NSSQLToOne : NSSQLRelationship
  // instance methods
  -[NSSQLToOne dealloc]
  -[NSSQLToOne isOptional]
  -[NSSQLToOne columnName]
  -[NSSQLToOne slot]
  -[NSSQLToOne foreignEntityKey]
  -[NSSQLToOne foreignKey]
  -[NSSQLToOne foreignOrderKey]
  -[NSSQLToOne initWithEntity:propertyDescription:]
  -[NSSQLToOne copyValuesForReadOnlyFetch:]
  -[NSSQLToOne isVirtual]
  -[NSSQLToOne initWithEntity:inverseToMany:]
  -[NSSQLToOne initForReadOnlyFetchWithEntity:propertyDescription:]
  -[NSSQLToOne _setForeignOrderKey:]
  -[NSSQLToOne initWithEntity:propertyDescription:virtualForToMany:]


NSSQLWhereIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLWhereIntermediate predicate]
  -[NSSQLWhereIntermediate initWithPredicate:inScope:]


NSStoreMapNode : NSObject
  // class methods
  +[NSStoreMapNode initialize]
  +[NSStoreMapNode supportsSecureCoding]

  // instance methods
  -[NSStoreMapNode dealloc]
  -[NSStoreMapNode isEqual:]
  -[NSStoreMapNode key]
  -[NSStoreMapNode encodeWithCoder:]
  -[NSStoreMapNode initWithCoder:]
  -[NSStoreMapNode objectID]
  -[NSStoreMapNode entity]
  -[NSStoreMapNode configurationName]
  -[NSStoreMapNode knownKeyValuesPointer]
  -[NSStoreMapNode _snapshot_]
  -[NSStoreMapNode _versionNumber]
  -[NSStoreMapNode _setVersionNumber:]
  -[NSStoreMapNode initWithObjectID:]
  -[NSStoreMapNode _setMap:]
  -[NSStoreMapNode setDestinations:forRelationship:]
  -[NSStoreMapNode destinationsForRelationship:]
  -[NSStoreMapNode _relatedNodes]


NSStoreMapping : NSObject
  // instance methods
  -[NSStoreMapping dealloc]
  -[NSStoreMapping isEqual:]
  -[NSStoreMapping externalName]
  -[NSStoreMapping initWithExternalName:]
  -[NSStoreMapping copyValuesForReadOnlyFetch:]
  -[NSStoreMapping setExternalName:]


NSStoreMappingGenerator : NSObject
  // class methods
  +[NSStoreMappingGenerator invalidate]
  +[NSStoreMappingGenerator defaultMappingGenerator]

  // instance methods
  -[NSStoreMappingGenerator externalNameForEntityName:]
  -[NSStoreMappingGenerator mappingsDictForConfigurationWithName:inModel:]
  -[NSStoreMappingGenerator externalNameForPropertyName:]
  -[NSStoreMappingGenerator mappingForAttribute:forConfigurationWithName:]
  -[NSStoreMappingGenerator mappingForRelationship:forConfigurationWithName:]
  -[NSStoreMappingGenerator primaryKeyForEntity:]
  -[NSStoreMappingGenerator joinsForRelationship:]
  -[NSStoreMappingGenerator mappingForEntity:forConfigurationWithName:]
  -[NSStoreMappingGenerator mappingsForConfigurationWithName:inModel:]
  -[NSStoreMappingGenerator internalNameForEntityName:version:]
  -[NSStoreMappingGenerator internalNameForPropertyName:version:]


NSStoreMigrationPolicy : NSObject
  // class methods
  +[NSStoreMigrationPolicy migrationDebugLevel]
  +[NSStoreMigrationPolicy setMigrationDebugLevel:]
  +[NSStoreMigrationPolicy migrationStoreOptionsFromStoreOptions:]
  +[NSStoreMigrationPolicy destinationURLForMigrationSourceURL:createDocumentReplacementDirectory:error:]

  // instance methods
  -[NSStoreMigrationPolicy dealloc]
  -[NSStoreMigrationPolicy setPersistentStoreCoordinator:]
  -[NSStoreMigrationPolicy persistentStoreCoordinator]
  -[NSStoreMigrationPolicy setDestinationURL:]
  -[NSStoreMigrationPolicy destinationURL]
  -[NSStoreMigrationPolicy sourceType]
  -[NSStoreMigrationPolicy sourceModel]
  -[NSStoreMigrationPolicy destinationModel]
  -[NSStoreMigrationPolicy mappingModel]
  -[NSStoreMigrationPolicy setPersistentStoreCoordinator:sourceURL:configuration:metadata:options:]
  -[NSStoreMigrationPolicy _gatherDataAndPerformMigration:]
  -[NSStoreMigrationPolicy resourceBundles]
  -[NSStoreMigrationPolicy _sourceModelForVersionHashes:withMetadata:inBundles:outPaths:]
  -[NSStoreMigrationPolicy sourceOptions]
  -[NSStoreMigrationPolicy sourceMetadata]
  -[NSStoreMigrationPolicy setSourceMetadata:]
  -[NSStoreMigrationPolicy destinationType]
  -[NSStoreMigrationPolicy migrateStoreAtURL:toURL:storeType:options:withManager:error:]
  -[NSStoreMigrationPolicy sourceModelForStoreAtURL:metadata:error:]
  -[NSStoreMigrationPolicy createMigrationManagerForSourceModel:destinationModel:error:]
  -[NSStoreMigrationPolicy migrateStoreAtURL:withManager:metadata:options:error:]
  -[NSStoreMigrationPolicy sourceConfiguration]
  -[NSStoreMigrationPolicy sourceURL]
  -[NSStoreMigrationPolicy externalDataReferencesURLForDestination:forStoreOfType:]
  -[NSStoreMigrationPolicy setSourceModel:]
  -[NSStoreMigrationPolicy mappingModelForSourceModel:destinationModel:error:]
  -[NSStoreMigrationPolicy setMappingModel:]
  -[NSStoreMigrationPolicy destinationOptionsForMigration:sourceMetadata:error:]
  -[NSStoreMigrationPolicy setDestinationOptions:]
  -[NSStoreMigrationPolicy destinationOptions]
  -[NSStoreMigrationPolicy destinationTypeForMigration:sourceMetadata:error:]
  -[NSStoreMigrationPolicy setDestinationType:]
  -[NSStoreMigrationPolicy destinationConfigurationForMigration:sourceMetadata:error:]
  -[NSStoreMigrationPolicy setDestinationConfiguration:]
  -[NSStoreMigrationPolicy setMigrationManager:]
  -[NSStoreMigrationPolicy migrationManager]
  -[NSStoreMigrationPolicy willPerformMigrationWithManager:]
  -[NSStoreMigrationPolicy handleMigrationError:inManager:]
  -[NSStoreMigrationPolicy didPerformMigrationWithManager:]
  -[NSStoreMigrationPolicy destinationConfiguration]
  -[NSStoreMigrationPolicy addMigratedStoreToCoordinator:withType:configuration:URL:options:error:]
  -[NSStoreMigrationPolicy setSourceURL:]
  -[NSStoreMigrationPolicy setSourceConfiguration:]
  -[NSStoreMigrationPolicy setSourceOptions:]
  -[NSStoreMigrationPolicy setResourceBundles:]


_NS128bitWrapper : NSObject <NSCopying>
  // instance methods
  -[_NS128bitWrapper isEqual:]
  -[_NS128bitWrapper copyWithZone:]
  -[_NS128bitWrapper compare:]
  -[_NS128bitWrapper initWithBytes:]


NSTemporaryObjectID : NSManagedObjectID
  // class methods
  +[NSTemporaryObjectID alloc]
  +[NSTemporaryObjectID retain]
  +[NSTemporaryObjectID release]
  +[NSTemporaryObjectID allocWithZone:]
  +[NSTemporaryObjectID initialize]
  +[NSTemporaryObjectID automaticallyNotifiesObserversForKey:]
  +[NSTemporaryObjectID accessInstanceVariablesDirectly]
  +[NSTemporaryObjectID version]
  +[NSTemporaryObjectID _retain_1]
  +[NSTemporaryObjectID _release_1]
  +[NSTemporaryObjectID initWithEntity:andUUIDString:]
  +[NSTemporaryObjectID setObjectStoreIdentifier:]
  +[NSTemporaryObjectID _storeDeallocated]
  +[NSTemporaryObjectID initWithEntity:]
  +[NSTemporaryObjectID allocateBatch:forEntity:count:]
  +[NSTemporaryObjectID classForStore:]

  // instance methods
  -[NSTemporaryObjectID retainCount]
  -[NSTemporaryObjectID dealloc]
  -[NSTemporaryObjectID isEqual:]
  -[NSTemporaryObjectID retain]
  -[NSTemporaryObjectID release]
  -[NSTemporaryObjectID finalize]
  -[NSTemporaryObjectID entity]
  -[NSTemporaryObjectID URIRepresentation]
  -[NSTemporaryObjectID persistentStore]
  -[NSTemporaryObjectID _storeIdentifier]
  -[NSTemporaryObjectID isTemporaryID]
  -[NSTemporaryObjectID _referenceData]
  -[NSTemporaryObjectID initWithEntity:andUUIDString:]
  -[NSTemporaryObjectID _setPersistentStore:]
  -[NSTemporaryObjectID _retainedURIString]
  -[NSTemporaryObjectID _isPersistentStoreAlive]
  -[NSTemporaryObjectID initWithEntity:]
  -[NSTemporaryObjectID _temporaryIDCounter]


_NSTemporaryObjectID2 : NSTemporaryObjectID
  // class methods
  +[_NSTemporaryObjectID2 initWithEntity:andUUIDString:]

  // instance methods
  -[_NSTemporaryObjectID2 dealloc]
  -[_NSTemporaryObjectID2 isEqual:]
  -[_NSTemporaryObjectID2 finalize]
  -[_NSTemporaryObjectID2 persistentStore]
  -[_NSTemporaryObjectID2 _storeIdentifier]
  -[_NSTemporaryObjectID2 _referenceData]
  -[_NSTemporaryObjectID2 _setPersistentStore:]
  -[_NSTemporaryObjectID2 _isPersistentStoreAlive]


NSValidationErrorLocalizationPolicy : NSObject <NSCopying>
  // instance methods
  -[NSValidationErrorLocalizationPolicy dealloc]
  -[NSValidationErrorLocalizationPolicy copyWithZone:]
  -[NSValidationErrorLocalizationPolicy initWithURL:]
  -[NSValidationErrorLocalizationPolicy localizedEntityNameForEntity:]
  -[NSValidationErrorLocalizationPolicy localizedPropertyNameForProperty:]
  -[NSValidationErrorLocalizationPolicy localizedModelStringForKey:]
  -[NSValidationErrorLocalizationPolicy _ensureFullLocalizationDictionaryIsLoaded]
  -[NSValidationErrorLocalizationPolicy localizationDictionary]
  -[NSValidationErrorLocalizationPolicy setLocalizationDictionary:]
  -[NSValidationErrorLocalizationPolicy _ensureLocalizationDictionaryIsInitialized]
  -[NSValidationErrorLocalizationPolicy _localizedStringForKey:value:]
  -[NSValidationErrorLocalizationPolicy _cachedObjectForKey:value:]
  -[NSValidationErrorLocalizationPolicy _localizedPropertyNameForProperty:entity:]


NSMergedPolicyLocalizationPolicy : NSValidationErrorLocalizationPolicy
  // instance methods
  -[NSMergedPolicyLocalizationPolicy init]
  -[NSMergedPolicyLocalizationPolicy dealloc]
  -[NSMergedPolicyLocalizationPolicy copyWithZone:]
  -[NSMergedPolicyLocalizationPolicy addPolicy:]
  -[NSMergedPolicyLocalizationPolicy _ensureFullLocalizationDictionaryIsLoaded]
  -[NSMergedPolicyLocalizationPolicy _localizedStringForKey:value:]


NSManagedImmutableObject : NSObject
 @property  NSEntityDescription *entity
 @property  NSManagedObjectID *objectID

  // class methods
  +[NSManagedImmutableObject retain]
  +[NSManagedImmutableObject release]
  +[NSManagedImmutableObject _retain_1]
  +[NSManagedImmutableObject _release_1]
  +[NSManagedImmutableObject allocWithEntity:]
  +[NSManagedImmutableObject _isGeneratedClass]
  +[NSManagedImmutableObject classForEntity:]
  +[NSManagedImmutableObject _isGeneratedClass_1]
  +[NSManagedImmutableObject _PFMOClassFactoryData]

  // instance methods
  -[NSManagedImmutableObject respondsToSelector:]
  -[NSManagedImmutableObject methodForSelector:]
  -[NSManagedImmutableObject methodSignatureForSelector:]
  -[NSManagedImmutableObject valueForKey:]
  -[NSManagedImmutableObject implementsSelector:]


NSCKDatabaseMetadata : NSManagedObject
 @property  NSNumber *hasSubscriptionNum
 @property  NSNumber *databaseScopeNum
 @property  NSString *databaseName
 @property  long long databaseScope
 @property  CKServerChangeToken *currentChangeToken
 @property  NSDate *lastFetchDate
 @property  BOOL hasSubscription
 @property  NSSet *recordZones
 @property  BOOL hasChanges

  // class methods
  +[NSCKDatabaseMetadata entityPath]
  +[NSCKDatabaseMetadata databaseMetadataForScope:forStore:inContext:error:]
  +[NSCKDatabaseMetadata stringForScope:]

  // instance methods
  -[NSCKDatabaseMetadata hasSubscription]
  -[NSCKDatabaseMetadata setHasSubscription:]
  -[NSCKDatabaseMetadata databaseScope]
  -[NSCKDatabaseMetadata setDatabaseScope:]


_NSDefaultSectionInfo : NSObject <NSFetchedResultsSectionInfo>
 @property  unsigned long sectionOffset
 @property  unsigned long sectionNumber
 @property  unsigned long oldSectionNumber
 @property  NSString *name
 @property  NSString *indexTitle
 @property  unsigned long numberOfObjects
 @property  NSArray *objects

  // instance methods
  -[_NSDefaultSectionInfo dealloc]
  -[_NSDefaultSectionInfo name]
  -[_NSDefaultSectionInfo indexOfObject:]
  -[_NSDefaultSectionInfo encodeWithCoder:]
  -[_NSDefaultSectionInfo initWithCoder:]
  -[_NSDefaultSectionInfo objects]
  -[_NSDefaultSectionInfo setController:]
  -[_NSDefaultSectionInfo sectionOffset]
  -[_NSDefaultSectionInfo numberOfObjects]
  -[_NSDefaultSectionInfo sectionNumber]
  -[_NSDefaultSectionInfo indexTitle]
  -[_NSDefaultSectionInfo initWithController:name:indexTitle:sectionOffset:]
  -[_NSDefaultSectionInfo setNumberOfObjects:]
  -[_NSDefaultSectionInfo setSectionOffset:]
  -[_NSDefaultSectionInfo setOldSectionNumber:]
  -[_NSDefaultSectionInfo clearSectionObjectsCache]
  -[_NSDefaultSectionInfo oldSectionNumber]


NSSQLTernaryExpressionIntermediate : NSSQLExpressionIntermediate
  // instance methods
  -[NSSQLTernaryExpressionIntermediate dealloc]
  -[NSSQLTernaryExpressionIntermediate generateSQLStringInContext:]
  -[NSSQLTernaryExpressionIntermediate disambiguatingEntity]
  -[NSSQLTernaryExpressionIntermediate disambiguationKeypath]
  -[NSSQLTernaryExpressionIntermediate disambiguationKeypathHasToMany]
  -[NSSQLTernaryExpressionIntermediate setDisambiguatingEntity:withKeypath:hasToMany:]
  -[NSSQLTernaryExpressionIntermediate _generateSQLForPredicate:inContext:]


NSSQLiteInPlaceMigrationManager : NSMigrationManager
  // class methods
  +[NSSQLiteInPlaceMigrationManager _canMigrateWithMappingModel:]

  // instance methods
  -[NSSQLiteInPlaceMigrationManager dealloc]
  -[NSSQLiteInPlaceMigrationManager migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:]


PFCloudKitMetricsClient : NSObject
  // instance methods
  -[PFCloudKitMetricsClient logMetric:]


PFCloudKitBaseMetric : NSObject <PFCloudKitMetric>
 @property  NSString *containerIdentifier
 @property  NSString *processName
 @property  NSString *name
 @property  NSDictionary *payload

  // instance methods
  -[PFCloudKitBaseMetric dealloc]
  -[PFCloudKitBaseMetric name]
  -[PFCloudKitBaseMetric processName]
  -[PFCloudKitBaseMetric containerIdentifier]
  -[PFCloudKitBaseMetric payload]
  -[PFCloudKitBaseMetric initWithContainerIdentifier:]


PFCloudKitUnhandledPartialErrorMetric : PFCloudKitBaseMetric
 @property  NSString *errorDomain
 @property  NSNumber *errorCode

  // instance methods
  -[PFCloudKitUnhandledPartialErrorMetric dealloc]
  -[PFCloudKitUnhandledPartialErrorMetric name]
  -[PFCloudKitUnhandledPartialErrorMetric payload]
  -[PFCloudKitUnhandledPartialErrorMetric initWithContainerIdentifier:error:]
  -[PFCloudKitUnhandledPartialErrorMetric errorCode]
  -[PFCloudKitUnhandledPartialErrorMetric errorDomain]


PFCloudKitFatalErrorMetric : PFCloudKitUnhandledPartialErrorMetric
 @property  NSString *requestClass

  // instance methods
  -[PFCloudKitFatalErrorMetric dealloc]
  -[PFCloudKitFatalErrorMetric name]
  -[PFCloudKitFatalErrorMetric payload]
  -[PFCloudKitFatalErrorMetric initWithContainerIdentifier:result:]
  -[PFCloudKitFatalErrorMetric requestClass]


PFCloudKitSizeMetric : PFCloudKitBaseMetric
 @property  NSNumber *sizeInBytes

  // instance methods
  -[PFCloudKitSizeMetric dealloc]
  -[PFCloudKitSizeMetric sizeInBytes]
  -[PFCloudKitSizeMetric payload]
  -[PFCloudKitSizeMetric initWithContainerIdentifier:]
  -[PFCloudKitSizeMetric addByteSize:]


PFCloudKitExportedRecordBytesMetric : PFCloudKitSizeMetric
  // instance methods
  -[PFCloudKitExportedRecordBytesMetric name]


PFCloudKitImportedRecordBytesMetric : PFCloudKitSizeMetric
  // instance methods
  -[PFCloudKitImportedRecordBytesMetric name]


PFCloudKitFetchedRecordBytesMetric : PFCloudKitSizeMetric
  // instance methods
  -[PFCloudKitFetchedRecordBytesMetric name]


PFCloudKitFetchedAssetBytesMetric : PFCloudKitSizeMetric
  // instance methods
  -[PFCloudKitFetchedAssetBytesMetric name]


_NSSQLEntityMigrationDescription : NSObject
 @property  NSSQLEntity *sourceEntity
 @property  NSSQLEntity *destinationEntity
 @property  NSEntityMapping *entityMapping
 @property  int migrationType
 @property  BOOL migrationNeedsCopyDueToConstraintMigration

  // instance methods
  -[_NSSQLEntityMigrationDescription dealloc]
  -[_NSSQLEntityMigrationDescription destinationEntity]
  -[_NSSQLEntityMigrationDescription sourceEntity]
  -[_NSSQLEntityMigrationDescription _populateSQLValuesByPropertyFromTransforms:migrationContext:]
  -[_NSSQLEntityMigrationDescription _populateSQLValuesForVirtualToOnesWithMigrationContext:]
  -[_NSSQLEntityMigrationDescription entityMapping]
  -[_NSSQLEntityMigrationDescription _populateSQLValuesForDestinationToOne:fromSourceToOne:]
  -[_NSSQLEntityMigrationDescription _unmappedRelationshipForFormerlyVirtualToOne:migrationContext:]
  -[_NSSQLEntityMigrationDescription _generateSQLValueMappingsWithMigrationContext:]
  -[_NSSQLEntityMigrationDescription transformedManyToManys]
  -[_NSSQLEntityMigrationDescription initWithEntityMapping:sourceEntity:destinationEntity:]
  -[_NSSQLEntityMigrationDescription _changeToCopyMigrationType]
  -[_NSSQLEntityMigrationDescription sourceEntitiesByToOneWithNewEntityKey]
  -[_NSSQLEntityMigrationDescription sqlValueForColumnName:migrationContext:]
  -[_NSSQLEntityMigrationDescription populateForeignKeyUpdateDataWithMigrationContext:]
  -[_NSSQLEntityMigrationDescription addedManyToManys]
  -[_NSSQLEntityMigrationDescription removedManyToManys]
  -[_NSSQLEntityMigrationDescription nextPropertyTransform]
  -[_NSSQLEntityMigrationDescription newCloudKitMetadataUpdateStatements]
  -[_NSSQLEntityMigrationDescription migrationType]
  -[_NSSQLEntityMigrationDescription migrationNeedsCopyDueToConstraintMigration]
  -[_NSSQLEntityMigrationDescription setMigrationNeedsCopyDueToConstraintMigration:]


NSSQLUpdateIntermediate : NSSQLStatementIntermediate
  // instance methods
  -[NSSQLUpdateIntermediate dealloc]
  -[NSSQLUpdateIntermediate generateSQLStringInContext:]
  -[NSSQLUpdateIntermediate isUpdateScoped]
  -[NSSQLUpdateIntermediate setUpdateColumnsIntermediate:]
  -[NSSQLUpdateIntermediate initWithEntity:inScope:]
  -[NSSQLUpdateIntermediate updateColumnsIntermediate]


NSSQLiteIntarrayTable : NSObject
 @property  ^{sqlite3_intarray=} intarrayTable
 @property  NSString *intarrayTableName

  // instance methods
  -[NSSQLiteIntarrayTable dealloc]
  -[NSSQLiteIntarrayTable setIntarrayTableName:]
  -[NSSQLiteIntarrayTable setIntarrayTable:]
  -[NSSQLiteIntarrayTable intarrayTable]
  -[NSSQLiteIntarrayTable intarrayTableName]


_NSSQLTableMigrationDescription : NSObject
 @property  int migrationType
 @property  NSSQLEntity *rootEntity

  // instance methods
  -[_NSSQLTableMigrationDescription dealloc]
  -[_NSSQLTableMigrationDescription rootEntity]
  -[_NSSQLTableMigrationDescription newCloudKitMetadataUpdateStatements]
  -[_NSSQLTableMigrationDescription migrationType]
  -[_NSSQLTableMigrationDescription _addedManyToManys]
  -[_NSSQLTableMigrationDescription _removedManyToManys]
  -[_NSSQLTableMigrationDescription _transformedManyToManys]
  -[_NSSQLTableMigrationDescription _sourceRootEntity]
  -[_NSSQLTableMigrationDescription _doAttributesHaveChangesRequiringCopyForMigration:withContext:]
  -[_NSSQLTableMigrationDescription _doRelationshipsHaveChangesRequiringCopyForMigration:inContext:]
  -[_NSSQLTableMigrationDescription _determineSchemaTransformationComplexityInMigrationContext:]
  -[_NSSQLTableMigrationDescription _hasComplexSchemaTransformationsInMigrationContext:]
  -[_NSSQLTableMigrationDescription _tempNameForTableName:]
  -[_NSSQLTableMigrationDescription createDeleteStatementForEntityMigrations:migrationContext:]
  -[_NSSQLTableMigrationDescription createInsertStatementForEntityMigration:migrationContext:]
  -[_NSSQLTableMigrationDescription createFEKUpdateStatementsForEntityMigration:migrationContext:]
  -[_NSSQLTableMigrationDescription createUpdateStatementForEntityMigration:migrationContext:]
  -[_NSSQLTableMigrationDescription createDefaultValuePopulationStatementsForAddedColumnsEntityMigration:migrationContext:]
  -[_NSSQLTableMigrationDescription newCopyAndInsertStatementForToOne:toManyToMany:fromTableName:invertColumns:migrationContext:]
  -[_NSSQLTableMigrationDescription _retainedRemovedSubEntitiesOfEntity:]
  -[_NSSQLTableMigrationDescription initWithRootEntity:migrationType:]
  -[_NSSQLTableMigrationDescription addEntityMigrationDescription:]
  -[_NSSQLTableMigrationDescription appendStatementsToRenameTables:migrationContext:]
  -[_NSSQLTableMigrationDescription appendStatementsToCreateOrDropTables:migrationContext:]
  -[_NSSQLTableMigrationDescription appendStatementsToPerformMigration:migrationContext:]
  -[_NSSQLTableMigrationDescription appendStatementsToCompleteMigration:migrationContext:]


PFMirroredRelationship : NSObject
  // class methods
  +[PFMirroredRelationship isValidMirroredRelationshipRecord:values:]
  +[PFMirroredRelationship mirroredRelationshipWithManyToManyRecord:values:andManagedObjectModel:]
  +[PFMirroredRelationship mirroredRelationshipWithDeletedRecordType:recordID:andManagedObjectModel:]
  +[PFMirroredRelationship mirroredRelationshipWithManagedObject:withRecordID:relatedToObjectWithRecordID:byRelationship:]

  // instance methods
  -[PFMirroredRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:error:]


PFMirroredManyToManyRelationship : PFMirroredRelationship
 @property  unsigned long type
 @property  NSRelationshipDescription *relationshipDescription
 @property  NSRelationshipDescription *inverseRelationshipDescription
 @property  CKRecordID *manyToManyRecordID
 @property  NSString *manyToManyRecordType
 @property  CKRecordID *ckRecordID
 @property  CKRecordID *relatedCKRecordID

  // class methods
  +[PFMirroredManyToManyRelationship _isValidMirroredRelationshipRecord:values:]
  +[PFMirroredManyToManyRelationship orderedRelationshipsForRecordType:andManagedObjectModel:]
  +[PFMirroredManyToManyRelationship recordNamesFromManyToManyCKRecordName:]
  +[PFMirroredManyToManyRelationship orderRelationships:]
  +[PFMirroredManyToManyRelationship ckRecordTypeForOrderedRelationships:]
  +[PFMirroredManyToManyRelationship ckRecordNameForOrderedRecordNames:]

  // instance methods
  -[PFMirroredManyToManyRelationship dealloc]
  -[PFMirroredManyToManyRelationship type]
  -[PFMirroredManyToManyRelationship relationshipDescription]
  -[PFMirroredManyToManyRelationship inverseRelationshipDescription]
  -[PFMirroredManyToManyRelationship recordTypeToRecordID]
  -[PFMirroredManyToManyRelationship ckRecordID]
  -[PFMirroredManyToManyRelationship relatedCKRecordID]
  -[PFMirroredManyToManyRelationship initWithRecordID:recordType:managedObjectModel:andType:]
  -[PFMirroredManyToManyRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:error:]
  -[PFMirroredManyToManyRelationship _setManyToManyRecordID:manyToManyRecordType:ckRecordID:relatedCKRecordID:relationshipDescription:inverseRelationshipDescription:type:]
  -[PFMirroredManyToManyRelationship manyToManyRecordID]
  -[PFMirroredManyToManyRelationship manyToManyRecordType]


PFMirroredManyToManyRelationshipV2 : PFMirroredManyToManyRelationship
  // class methods
  +[PFMirroredManyToManyRelationshipV2 _isValidMirroredRelationshipRecord:values:]

  // instance methods
  -[PFMirroredManyToManyRelationshipV2 initWithRecordID:forRecordWithID:relatedToRecordWithID:byRelationship:withInverse:andType:]
  -[PFMirroredManyToManyRelationshipV2 initWithRecord:andValues:withManagedObjectModel:andType:]
  -[PFMirroredManyToManyRelationshipV2 populateRecordValues:]


PFMirroredOneToManyRelationship : PFMirroredRelationship
 @property  NSRelationshipDescription *relationshipDescription
 @property  NSRelationshipDescription *inverseRelationshipDescription
 @property  NSManagedObjectID *objectID
 @property  CKRecordID *recordID
 @property  CKRecordID *relatedObjectRecordID

  // instance methods
  -[PFMirroredOneToManyRelationship dealloc]
  -[PFMirroredOneToManyRelationship objectID]
  -[PFMirroredOneToManyRelationship recordID]
  -[PFMirroredOneToManyRelationship relationshipDescription]
  -[PFMirroredOneToManyRelationship inverseRelationshipDescription]
  -[PFMirroredOneToManyRelationship recordTypesToRecordIDs]
  -[PFMirroredOneToManyRelationship initWithManagedObject:withRecordName:relatedToRecordWithRecordName:byRelationship:]
  -[PFMirroredOneToManyRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:error:]
  -[PFMirroredOneToManyRelationship relatedObjectRecordID]


PFCloudKitImporterOptions : NSObject
 @property  CKDatabase *database
 @property  CKRecordZone *recordZone
 @property  PFCloudKitStoreMonitor *monitor
 @property  NSCloudKitMirroringDelegateOptions *options
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSURL *assetStorageURL

  // instance methods
  -[PFCloudKitImporterOptions dealloc]
  -[PFCloudKitImporterOptions copy]
  -[PFCloudKitImporterOptions options]
  -[PFCloudKitImporterOptions monitor]
  -[PFCloudKitImporterOptions database]
  -[PFCloudKitImporterOptions workQueue]
  -[PFCloudKitImporterOptions recordZone]
  -[PFCloudKitImporterOptions assetStorageURL]
  -[PFCloudKitImporterOptions initWithOptions:monitor:assetStorageURL:workQueue:zone:andDatabase:]


_NSSQLiteStoreMigrator : NSObject
 @property  NSSQLiteAdapter *adapter
 @property  NSSQLModel *dstModel
 @property  NSSQLModel *srcModel
 @property  NSMutableDictionary *historyMigrationCache
 @property  BOOL hasCloudKitTables
 @property  NSSQLiteConnection *connection

  // class methods
  +[_NSSQLiteStoreMigrator _annotatesMigrationMetadata]
  +[_NSSQLiteStoreMigrator _setAnnotatesMigrationMetadata:]

  // instance methods
  -[_NSSQLiteStoreMigrator dealloc]
  -[_NSSQLiteStoreMigrator connection]
  -[_NSSQLiteStoreMigrator _disconnect]
  -[_NSSQLiteStoreMigrator adapter]
  -[_NSSQLiteStoreMigrator historyMigrationCache]
  -[_NSSQLiteStoreMigrator srcModel]
  -[_NSSQLiteStoreMigrator dstModel]
  -[_NSSQLiteStoreMigrator initWithStore:destinationModel:mappingModel:]
  -[_NSSQLiteStoreMigrator performMigration:]
  -[_NSSQLiteStoreMigrator entityMigrationDescriptionForEntity:]
  -[_NSSQLiteStoreMigrator hasCloudKitTables]
  -[_NSSQLiteStoreMigrator tableMigrationDescriptionForEntity:]
  -[_NSSQLiteStoreMigrator _originalRootsForAddedEntity:]
  -[_NSSQLiteStoreMigrator createEntityMigrationStatements]
  -[_NSSQLiteStoreMigrator createStatementsForUpdatingEntityKeys]
  -[_NSSQLiteStoreMigrator generatePKTableUpdateStatements]
  -[_NSSQLiteStoreMigrator deleteStatementsForHistory]
  -[_NSSQLiteStoreMigrator updateStatementsForHistoryChanges]
  -[_NSSQLiteStoreMigrator validateMigratedDataFromEntityMapping:error:]
  -[_NSSQLiteStoreMigrator _countNullsInColumn:forEntity:]
  -[_NSSQLiteStoreMigrator _countUnreferencedPrimaryKeysForEntity:inForeignKeyColumnName:fromTable:]
  -[_NSSQLiteStoreMigrator validateMandatoryAttribute:onEntity:error:]
  -[_NSSQLiteStoreMigrator validateMandatoryRelationship:onEntity:error:]
  -[_NSSQLiteStoreMigrator _populateTableMigrationDescriptions]
  -[_NSSQLiteStoreMigrator _determinePropertyDependenciesOnIDForEntity:]
  -[_NSSQLiteStoreMigrator _determineAttributeTriggerToMigrateForAttributeNamed:withSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _determineRTreeExtensionsToMigrateForAttributeNamed:withSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _determineIndexesToMigrateForSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _determineUniquenessConstraintsToMigrateForSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _determineDerivedAttributesToMigrateForSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _indexMigrationBlockForSourceEntity:andDestinationEntity:]
  -[_NSSQLiteStoreMigrator _sourceTableIsClean:]
  -[_NSSQLiteStoreMigrator _determineReindexedEntitiesAndAffectedProperties]
  -[_NSSQLiteStoreMigrator _populateEntityMigrationDescriptionsAndEntityMap]
  -[_NSSQLiteStoreMigrator _addEntityMigration:toTableMigrationForRootEntity:tableMigrationType:]
  -[_NSSQLiteStoreMigrator shiftTombstones]
  -[_NSSQLiteStoreMigrator clearTombstoneColumnsForRange:]
  -[_NSSQLiteStoreMigrator _addReindexedProperty:toSetForEntity:]
  -[_NSSQLiteStoreMigrator setHistoryMigrationCache:]
  -[_NSSQLiteStoreMigrator setHasCloudKitTables:]


PFCloudKitSerializer : NSObject
 @property  NSCloudKitMirroringDelegateOptions *mirroringOptions
 @property  NSDictionary *manyToManyRecordNameToRecord
 @property  NSObject<PFCloudKitSerializerDelegate> *delegate
 @property  CKRecordZone *recordZone
 @property  NSArray *writtenAssetURLs
 @property  NSString *recordNamePrefix

  // class methods
  +[PFCloudKitSerializer isPrivateAttribute:]
  +[PFCloudKitSerializer recordTypeForEntity:]
  +[PFCloudKitSerializer estimateByteSizeOfRecordID:]
  +[PFCloudKitSerializer mtmKeyForObjectWithRecordName:relatedToObjectWithRecordName:byRelationship:withInverse:]
  +[PFCloudKitSerializer assetStorageDirectoryURLForStore:]
  +[PFCloudKitSerializer newSetOfRecordKeysForAttribute:includeCKAssetsForFileBackedFutures:]
  +[PFCloudKitSerializer newSetOfRecordKeysForEntitiesInConfiguration:inManagedObjectModel:includeCKAssetsForFileBackedFutures:]
  +[PFCloudKitSerializer assetsOnRecord:withOptions:]
  +[PFCloudKitSerializer isMirroredRelationshipRecordType:]
  +[PFCloudKitSerializer newArchivedDataForSystemFieldsOfRecord:]
  +[PFCloudKitSerializer applyCDPrefixToName:]
  +[PFCloudKitSerializer isVariableLengthAttributeType:]
  +[PFCloudKitSerializer sizeOfVariableLengthAttribute:withValue:]
  +[PFCloudKitSerializer shouldTrackAttribute:]
  +[PFCloudKitSerializer ckAssetAttributeNameForAttributeName:]
  +[PFCloudKitSerializer generateCKAssetFileURLForObjectInStore:]
  +[PFCloudKitSerializer shouldTrackRelationship:]
  +[PFCloudKitSerializer entityNameForRecordType:]
  +[PFCloudKitSerializer estimatedByteSizeOfValue:andKey:]
  +[PFCloudKitSerializer newSetOfRecordKeysForEntity:includeCKAssetsForFileBackedFutures:]
  +[PFCloudKitSerializer newSetOfRecordKeysForRelationship:]
  +[PFCloudKitSerializer shouldTrackProperty:]
  +[PFCloudKitSerializer estimateByteSizeOfRecord:]

  // instance methods
  -[PFCloudKitSerializer init]
  -[PFCloudKitSerializer dealloc]
  -[PFCloudKitSerializer delegate]
  -[PFCloudKitSerializer setDelegate:]
  -[PFCloudKitSerializer .cxx_destruct]
  -[PFCloudKitSerializer recordZone]
  -[PFCloudKitSerializer mirroringOptions]
  -[PFCloudKitSerializer initWithZone:mirroringOptions:metadataCache:recordNamePrefix:]
  -[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:onlyUpdatingAttributes:andRelationships:error:]
  -[PFCloudKitSerializer writtenAssetURLs]
  -[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:includeRelationships:error:]
  -[PFCloudKitSerializer getRecordMetadataForObject:inManagedObjectContext:error:]
  -[PFCloudKitSerializer setValue:forKey:usingEncryption:onRecord:]
  -[PFCloudKitSerializer shouldEncryptValueForAttribute:]
  -[PFCloudKitSerializer getValueStoreForRecord:]
  -[PFCloudKitSerializer getValueFromRecord:forKey:isEncrypted:]
  -[PFCloudKitSerializer updateAttributes:andRelationships:onManagedObject:fromRecord:withRecordMetadata:importContext:]
  -[PFCloudKitSerializer manyToManyRecordNameToRecord]
  -[PFCloudKitSerializer setMtmRecord:toMtmRecordName:]
  -[PFCloudKitSerializer addURLToWrittenAssetURLs:]
  -[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:error:]
  -[PFCloudKitSerializer applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:error:]
  -[PFCloudKitSerializer recordNamePrefix]


NSSQLGroupByIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLGroupByIntermediate dealloc]
  -[NSSQLGroupByIntermediate generateSQLStringInContext:]
  -[NSSQLGroupByIntermediate initWithProperties:inScope:]


NSSQLHavingIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLHavingIntermediate dealloc]
  -[NSSQLHavingIntermediate generateSQLStringInContext:]
  -[NSSQLHavingIntermediate initWithPredicate:inScope:inContext:]
  -[NSSQLHavingIntermediate isHavingScoped]


NSPersistentStoreRequest : NSObject <NSCopying>
 @property  NSArray *affectedStores
 @property  unsigned long requestType

  // class methods
  +[NSPersistentStoreRequest initialize]

  // instance methods
  -[NSPersistentStoreRequest dealloc]
  -[NSPersistentStoreRequest copyWithZone:]
  -[NSPersistentStoreRequest requestType]
  -[NSPersistentStoreRequest _secureOperation]
  -[NSPersistentStoreRequest _setSecureOperation:]
  -[NSPersistentStoreRequest setAffectedStores:]
  -[NSPersistentStoreRequest affectedStores]


NSAsynchronousFetchRequest : NSPersistentStoreRequest
 @property  NSFetchRequest *fetchRequest
 @property  @? completionBlock
 @property  long long estimatedResultCount

  // instance methods
  -[NSAsynchronousFetchRequest dealloc]
  -[NSAsynchronousFetchRequest completionBlock]
  -[NSAsynchronousFetchRequest fetchRequest]
  -[NSAsynchronousFetchRequest requestType]
  -[NSAsynchronousFetchRequest initWithFetchRequest:completionBlock:]
  -[NSAsynchronousFetchRequest estimatedResultCount]
  -[NSAsynchronousFetchRequest setEstimatedResultCount:]


_NSPropertyDescriptionProxy : NSObject <NSSecureCoding>
  // class methods
  +[_NSPropertyDescriptionProxy resolveInstanceMethod:]
  +[_NSPropertyDescriptionProxy supportsSecureCoding]

  // instance methods
  -[_NSPropertyDescriptionProxy isEqual:]
  -[_NSPropertyDescriptionProxy class]
  -[_NSPropertyDescriptionProxy isKindOfClass:]
  -[_NSPropertyDescriptionProxy methodSignatureForSelector:]
  -[_NSPropertyDescriptionProxy forwardingTargetForSelector:]
  -[_NSPropertyDescriptionProxy encodeWithCoder:]
  -[_NSPropertyDescriptionProxy initWithCoder:]
  -[_NSPropertyDescriptionProxy entity]
  -[_NSPropertyDescriptionProxy _entitysReferenceID]
  -[_NSPropertyDescriptionProxy _underlyingProperty]
  -[_NSPropertyDescriptionProxy _createCachesAndOptimizeState]
  -[_NSPropertyDescriptionProxy _versionHash:inStyle:]
  -[_NSPropertyDescriptionProxy _setEntity:]
  -[_NSPropertyDescriptionProxy _setEntityAndMaintainIndices:]
  -[_NSPropertyDescriptionProxy _setEntitysReferenceID:]
  -[_NSPropertyDescriptionProxy initWithPropertyDescription:]


_NSPropertyDescriptionProxy2 : _NSPropertyDescriptionProxy
  // class methods
  +[_NSPropertyDescriptionProxy2 classForKeyedUnarchiver]

  // instance methods
  -[_NSPropertyDescriptionProxy2 retain]
  -[_NSPropertyDescriptionProxy2 release]
  -[_NSPropertyDescriptionProxy2 _tryRetain]
  -[_NSPropertyDescriptionProxy2 _isDeallocating]
  -[_NSPropertyDescriptionProxy2 classForCoder]
  -[_NSPropertyDescriptionProxy2 classForArchiver]


NSDerivedAttributeDescription : NSAttributeDescription
 @property  NSExpression *derivationExpression

  // class methods
  +[NSDerivedAttributeDescription supportsSecureCoding]

  // instance methods
  -[NSDerivedAttributeDescription dealloc]
  -[NSDerivedAttributeDescription isEqual:]
  -[NSDerivedAttributeDescription copyWithZone:]
  -[NSDerivedAttributeDescription encodeWithCoder:]
  -[NSDerivedAttributeDescription initWithCoder:]
  -[NSDerivedAttributeDescription setDefaultValue:]
  -[NSDerivedAttributeDescription setReadOnly:]
  -[NSDerivedAttributeDescription isTransient]
  -[NSDerivedAttributeDescription _propertyType]
  -[NSDerivedAttributeDescription isReadOnly]
  -[NSDerivedAttributeDescription derivationExpression]
  -[NSDerivedAttributeDescription filteringPredicate]
  -[NSDerivedAttributeDescription _isSchemaEqual:]
  -[NSDerivedAttributeDescription _createCachesAndOptimizeState]
  -[NSDerivedAttributeDescription _versionHash:inStyle:]
  -[NSDerivedAttributeDescription _writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:]
  -[NSDerivedAttributeDescription setRenamingIdentifier:]
  -[NSDerivedAttributeDescription setTransient:]
  -[NSDerivedAttributeDescription _validateKeypaths:]
  -[NSDerivedAttributeDescription setDerivationExpression:]
  -[NSDerivedAttributeDescription setFilteringPredicate:]


_PFEvanescentData : NSData /usr/lib/libicucore.A.dylib
 @property  NSURL *url
 @property  r^v mapping

  // class methods
  +[_PFEvanescentData classForKeyedUnarchiver]

  // instance methods
  -[_PFEvanescentData dealloc]
  -[_PFEvanescentData length]
  -[_PFEvanescentData isEqual:]
  -[_PFEvanescentData bytes]
  -[_PFEvanescentData copyWithZone:]
  -[_PFEvanescentData invalidate]
  -[_PFEvanescentData getBytes:length:]
  -[_PFEvanescentData getBytes:range:]
  -[_PFEvanescentData classForCoder]
  -[_PFEvanescentData initWithURL:]
  -[_PFEvanescentData subdataWithRange:]
  -[_PFEvanescentData classForArchiver]
  -[_PFEvanescentData initWithPath:]
  -[_PFEvanescentData isEqualToData:]
  -[_PFEvanescentData enumerateByteRangesUsingBlock:]
  -[_PFEvanescentData getBytes:]
  -[_PFEvanescentData url]
  -[_PFEvanescentData mapping]
  -[_PFEvanescentData _destroyMapping]
  -[_PFEvanescentData _openMapping]
  -[_PFEvanescentData _closeMapping]


_PFEncodedData : NSData /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFEncodedData classForKeyedUnarchiver]

  // instance methods
  -[_PFEncodedData init]
  -[_PFEncodedData retainCount]
  -[_PFEncodedData length]
  -[_PFEncodedData retain]
  -[_PFEncodedData release]
  -[_PFEncodedData bytes]
  -[_PFEncodedData _tryRetain]
  -[_PFEncodedData _isDeallocating]
  -[_PFEncodedData copyWithZone:]
  -[_PFEncodedData mutableCopyWithZone:]
  -[_PFEncodedData mutableCopy]
  -[_PFEncodedData getBytes:length:]
  -[_PFEncodedData getBytes:range:]
  -[_PFEncodedData initWithCoder:]
  -[_PFEncodedData classForCoder]
  -[_PFEncodedData subdataWithRange:]
  -[_PFEncodedData writeToFile:atomically:]
  -[_PFEncodedData classForArchiver]
  -[_PFEncodedData writeToURL:atomically:]
  -[_PFEncodedData writeToURL:options:error:]
  -[_PFEncodedData isEqualToData:]
  -[_PFEncodedData writeToFile:options:error:]
  -[_PFEncodedData rangeOfData:options:range:]
  -[_PFEncodedData privateCopy]


_PFResultData : NSData /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFResultData classForKeyedUnarchiver]

  // instance methods
  -[_PFResultData init]
  -[_PFResultData retainCount]
  -[_PFResultData dealloc]
  -[_PFResultData length]
  -[_PFResultData retain]
  -[_PFResultData release]
  -[_PFResultData bytes]
  -[_PFResultData copyWithZone:]
  -[_PFResultData mutableCopyWithZone:]
  -[_PFResultData mutableCopy]
  -[_PFResultData getBytes:length:]
  -[_PFResultData getBytes:range:]
  -[_PFResultData initWithCoder:]
  -[_PFResultData classForCoder]
  -[_PFResultData subdataWithRange:]
  -[_PFResultData writeToFile:atomically:]
  -[_PFResultData classForArchiver]
  -[_PFResultData writeToURL:atomically:]
  -[_PFResultData writeToURL:options:error:]
  -[_PFResultData isEqualToData:]
  -[_PFResultData writeToFile:options:error:]
  -[_PFResultData rangeOfData:options:range:]
  -[_PFResultData setParentObject:]
  -[_PFResultData privateCopy]


_PFExternalReferenceData : NSData /usr/lib/libicucore.A.dylib
  // class methods
  +[_PFExternalReferenceData classForKeyedUnarchiver]
  +[_PFExternalReferenceData _updateFileDescriptorsInUseReserveNew:]
  +[_PFExternalReferenceData _releaseReservedMapFileDescriptor]
  +[_PFExternalReferenceData _reserveMapFileDescriptor]

  // instance methods
  -[_PFExternalReferenceData dealloc]
  -[_PFExternalReferenceData length]
  -[_PFExternalReferenceData isEqual:]
  -[_PFExternalReferenceData bytes]
  -[_PFExternalReferenceData copy]
  -[_PFExternalReferenceData mutableCopy]
  -[_PFExternalReferenceData finalize]
  -[_PFExternalReferenceData getBytes:length:]
  -[_PFExternalReferenceData getBytes:range:]
  -[_PFExternalReferenceData classForCoder]
  -[_PFExternalReferenceData subdataWithRange:]
  -[_PFExternalReferenceData classForArchiver]
  -[_PFExternalReferenceData isEqualToData:]
  -[_PFExternalReferenceData UUID]
  -[_PFExternalReferenceData filename]
  -[_PFExternalReferenceData initWithStoreBytes:length:externalLocation:safeguardLocation:protectionLevel:]
  -[_PFExternalReferenceData initWithStoreBytes:length:externalLocation:safeguardLocation:protectionLevel:ubiquitousLocation:]
  -[_PFExternalReferenceData hasExternalReferenceContent]
  -[_PFExternalReferenceData _externalReferenceLocation]
  -[_PFExternalReferenceData _originalData]
  -[_PFExternalReferenceData _safeguardLocation]
  -[_PFExternalReferenceData preferredProtectionLevel]
  -[_PFExternalReferenceData _bytesLengthForExternalReference]
  -[_PFExternalReferenceData doCleanupOnDealloc]
  -[_PFExternalReferenceData _safeguardLocationString]
  -[_PFExternalReferenceData externalReferenceLocationString]
  -[_PFExternalReferenceData databaseValue]
  -[_PFExternalReferenceData _bytesPtrForStore]
  -[_PFExternalReferenceData _bytesLengthForStore]
  -[_PFExternalReferenceData constructSafeguardStringFromString:]
  -[_PFExternalReferenceData _doCleanup]
  -[_PFExternalReferenceData _bytesPtrForExternalReference]
  -[_PFExternalReferenceData _attemptToMapData:]
  -[_PFExternalReferenceData _exceptionForReadError:]
  -[_PFExternalReferenceData _retrieveExternalData]
  -[_PFExternalReferenceData _isEqualHelper:]
  -[_PFExternalReferenceData initForUbiquityDictionary:store:]
  -[_PFExternalReferenceData initForExternalLocation:safeguardLocation:data:protectionLevel:]
  -[_PFExternalReferenceData _setBytesForExternalReference:]
  -[_PFExternalReferenceData _writeExternalReferenceToInterimLocation]
  -[_PFExternalReferenceData _moveExternalReferenceToPermanentLocation]
  -[_PFExternalReferenceData _deleteExternalReferenceFromPermanentLocation]
  -[_PFExternalReferenceData _externalReferenceLocationString]
  -[_PFExternalReferenceData _createdByUbiquityImport]


_NSFaultingMutableOrderedSet : NSMutableOrderedSet /usr/lib/libicucore.A.dylib
 @property  NSManagedObject *source
 @property  NSPropertyDescription *relationship
 @property  BOOL fault

  // class methods
  +[_NSFaultingMutableOrderedSet alloc]
  +[_NSFaultingMutableOrderedSet allocWithZone:]
  +[_NSFaultingMutableOrderedSet accessInstanceVariablesDirectly]
  +[_NSFaultingMutableOrderedSet classForKeyedUnarchiver]

  // instance methods
  -[_NSFaultingMutableOrderedSet retainCount]
  -[_NSFaultingMutableOrderedSet dealloc]
  -[_NSFaultingMutableOrderedSet isEqual:]
  -[_NSFaultingMutableOrderedSet retain]
  -[_NSFaultingMutableOrderedSet release]
  -[_NSFaultingMutableOrderedSet _tryRetain]
  -[_NSFaultingMutableOrderedSet _isDeallocating]
  -[_NSFaultingMutableOrderedSet copyWithZone:]
  -[_NSFaultingMutableOrderedSet mutableCopyWithZone:]
  -[_NSFaultingMutableOrderedSet isFault]
  -[_NSFaultingMutableOrderedSet count]
  -[_NSFaultingMutableOrderedSet objectEnumerator]
  -[_NSFaultingMutableOrderedSet addObject:]
  -[_NSFaultingMutableOrderedSet getObjects:]
  -[_NSFaultingMutableOrderedSet countByEnumeratingWithState:objects:count:]
  -[_NSFaultingMutableOrderedSet objectAtIndex:]
  -[_NSFaultingMutableOrderedSet getObjects:range:]
  -[_NSFaultingMutableOrderedSet insertObject:atIndex:]
  -[_NSFaultingMutableOrderedSet removeObjectAtIndex:]
  -[_NSFaultingMutableOrderedSet removeAllObjects]
  -[_NSFaultingMutableOrderedSet initWithOrderedSet:]
  -[_NSFaultingMutableOrderedSet indexOfObject:]
  -[_NSFaultingMutableOrderedSet setValue:forKey:]
  -[_NSFaultingMutableOrderedSet containsObject:]
  -[_NSFaultingMutableOrderedSet removeObjectsInRange:]
  -[_NSFaultingMutableOrderedSet replaceObjectAtIndex:withObject:]
  -[_NSFaultingMutableOrderedSet insertObjects:count:atIndex:]
  -[_NSFaultingMutableOrderedSet enumerateObjectsWithOptions:usingBlock:]
  -[_NSFaultingMutableOrderedSet classForCoder]
  -[_NSFaultingMutableOrderedSet descriptionWithLocale:]
  -[_NSFaultingMutableOrderedSet sortRange:options:usingComparator:]
  -[_NSFaultingMutableOrderedSet addObjects:count:]
  -[_NSFaultingMutableOrderedSet addObjectsFromArray:]
  -[_NSFaultingMutableOrderedSet insertObjects:atIndexes:]
  -[_NSFaultingMutableOrderedSet minusOrderedSet:]
  -[_NSFaultingMutableOrderedSet minusSet:]
  -[_NSFaultingMutableOrderedSet removeObjectsInArray:]
  -[_NSFaultingMutableOrderedSet sortWithOptions:usingComparator:]
  -[_NSFaultingMutableOrderedSet sortUsingComparator:]
  -[_NSFaultingMutableOrderedSet unionOrderedSet:]
  -[_NSFaultingMutableOrderedSet unionSet:]
  -[_NSFaultingMutableOrderedSet allObjects]
  -[_NSFaultingMutableOrderedSet indexesOfObjectsAtIndexes:options:passingTest:]
  -[_NSFaultingMutableOrderedSet indexesOfObjectsWithOptions:passingTest:]
  -[_NSFaultingMutableOrderedSet indexOfObjectWithOptions:passingTest:]
  -[_NSFaultingMutableOrderedSet indexOfObjectAtIndexes:options:passingTest:]
  -[_NSFaultingMutableOrderedSet enumerateObjectsAtIndexes:options:usingBlock:]
  -[_NSFaultingMutableOrderedSet source]
  -[_NSFaultingMutableOrderedSet isEqualToOrderedSet:]
  -[_NSFaultingMutableOrderedSet valueForKey:]
  -[_NSFaultingMutableOrderedSet replacementObjectForCoder:]
  -[_NSFaultingMutableOrderedSet classForArchiver]
  -[_NSFaultingMutableOrderedSet valueForKeyPath:]
  -[_NSFaultingMutableOrderedSet initWithSource:destinations:forRelationship:inContext:]
  -[_NSFaultingMutableOrderedSet initWithSource:forRelationship:asFault:]
  -[_NSFaultingMutableOrderedSet willRead]
  -[_NSFaultingMutableOrderedSet turnIntoFault]
  -[_NSFaultingMutableOrderedSet relationship]
  -[_NSFaultingMutableOrderedSet willReadWithContents:]
  -[_NSFaultingMutableOrderedSet _shouldProcessKVOChange]
  -[_NSFaultingMutableOrderedSet _isIdenticalFault:]
  -[_NSFaultingMutableOrderedSet _orderedObjectsAndKeys]
  -[_NSFaultingMutableOrderedSet _reorderObjectsToLocationsByOrderKey:error:]
  -[_NSFaultingMutableOrderedSet _assignOrderKeysUsingCount:]
  -[_NSFaultingMutableOrderedSet _orderKeyForObject:]
  -[_NSFaultingMutableOrderedSet willChange]
  -[_NSFaultingMutableOrderedSet _setProcessingIdempotentKVO:]
  -[_NSFaultingMutableOrderedSet _updateOrderKeysFromOrderOfObjectIDs:]
  -[_NSFaultingMutableOrderedSet _populateOrderKeysUsingSnapshot:orderKeys:newIndexes:reorderedIndexes:]
  -[_NSFaultingMutableOrderedSet _newOrderKeys]
  -[_NSFaultingMutableOrderedSet _hasOrderKeys]


NSSQLForeignOrderKey : NSSQLColumn
  // instance methods
  -[NSSQLForeignOrderKey dealloc]
  -[NSSQLForeignOrderKey name]
  -[NSSQLForeignOrderKey _setName:]
  -[NSSQLForeignOrderKey toOneRelationship]
  -[NSSQLForeignOrderKey foreignKey]
  -[NSSQLForeignOrderKey initWithEntity:propertyDescription:]
  -[NSSQLForeignOrderKey copyValuesForReadOnlyFetch:]
  -[NSSQLForeignOrderKey initWithEntity:foreignKey:]
  -[NSSQLForeignOrderKey initForReadOnlyFetchingOfEntity:toOneRelationship:]
  -[NSSQLForeignOrderKey setFKForReadOnlyFetch:]


PFCloudKitOptionsValidator : NSObject
 @property  NSCloudKitMirroringDelegateOptions *parsedOptions

  // instance methods
  -[PFCloudKitOptionsValidator dealloc]
  -[PFCloudKitOptionsValidator _validateContainerIdentifier:error:]
  -[PFCloudKitOptionsValidator _validateHistoryTrackingOptions:error:]
  -[PFCloudKitOptionsValidator _validateContainerOptions:error:]
  -[PFCloudKitOptionsValidator _validateAssetThreshold:error:]
  -[PFCloudKitOptionsValidator _validateMemoryThreshold:error:]
  -[PFCloudKitOptionsValidator validateOptions:andStoreOptions:error:]
  -[PFCloudKitOptionsValidator parsedOptions]


PFCloudKitImporterZoneDeletedWorkItem : PFCloudKitImporterWorkItem
 @property  CKRecordZoneID *deletedRecordZoneID

  // instance methods
  -[PFCloudKitImporterZoneDeletedWorkItem dealloc]
  -[PFCloudKitImporterZoneDeletedWorkItem doWorkWithCompletion:]
  -[PFCloudKitImporterZoneDeletedWorkItem initWithDeletedRecordZoneID:options:request:]
  -[PFCloudKitImporterZoneDeletedWorkItem deletedRecordZoneID]


_CDSnapshot : NSObject <NSCopying, NSMutableCopying>
 @property  NSEntityDescription *entity
 @property  NSManagedObjectID *objectID

  // class methods
  +[_CDSnapshot alloc]
  +[_CDSnapshot allocWithZone:]
  +[_CDSnapshot initialize]
  +[_CDSnapshot _entityDeallocated]
  +[_CDSnapshot classForEntity:]
  +[_CDSnapshot newBatchAllocation:count:withOwnedObjectIDs:]
  +[_CDSnapshot resetGeneratedClasses]

  // instance methods
  -[_CDSnapshot retainCount]
  -[_CDSnapshot dealloc]
  -[_CDSnapshot isEqual:]
  -[_CDSnapshot retain]
  -[_CDSnapshot release]
  -[_CDSnapshot _tryRetain]
  -[_CDSnapshot _isDeallocating]
  -[_CDSnapshot copyWithZone:]
  -[_CDSnapshot mutableCopyWithZone:]
  -[_CDSnapshot copy]
  -[_CDSnapshot mutableCopy]
  -[_CDSnapshot finalize]
  -[_CDSnapshot setValue:forKey:]
  -[_CDSnapshot valueForKey:]
  -[_CDSnapshot objectID]
  -[_CDSnapshot entity]
  -[_CDSnapshot _snapshot_]
  -[_CDSnapshot initWithObjectID:]
  -[_CDSnapshot _descriptionValues]


NSSQLFetchDictionaryCountIntermediate : NSSQLStatementIntermediate
  // instance methods
  -[NSSQLFetchDictionaryCountIntermediate dealloc]
  -[NSSQLFetchDictionaryCountIntermediate generateSQLStringInContext:]
  -[NSSQLFetchDictionaryCountIntermediate initWithFetchIntermediate:inScope:]


PFCloudKitImportDatabaseContext : NSObject
 @property  NSSet *interestingZoneIDs
 @property  NSSet *changedRecordZoneIDs
 @property  NSSet *deletedRecordZoneIDs
 @property  NSSet *purgedRecordZoneIDs
 @property  CKServerChangeToken *updatedChangeToken

  // instance methods
  -[PFCloudKitImportDatabaseContext dealloc]
  -[PFCloudKitImportDatabaseContext initWithInterestingZoneIDs:]
  -[PFCloudKitImportDatabaseContext zoneWithIDChanged:]
  -[PFCloudKitImportDatabaseContext zoneWithIDWasDeleted:]
  -[PFCloudKitImportDatabaseContext zoneWithIDWasPurged:]
  -[PFCloudKitImportDatabaseContext setUpdatedChangeToken:]
  -[PFCloudKitImportDatabaseContext hasWorkToDo]
  -[PFCloudKitImportDatabaseContext updatedChangeToken]
  -[PFCloudKitImportDatabaseContext changedRecordZoneIDs]
  -[PFCloudKitImportDatabaseContext deletedRecordZoneIDs]
  -[PFCloudKitImportDatabaseContext purgedRecordZoneIDs]
  -[PFCloudKitImportDatabaseContext interestingZoneIDs]


NSIncrementalStore : NSPersistentStore
  // class methods
  +[NSIncrementalStore metadataForPersistentStoreWithURL:error:]
  +[NSIncrementalStore setMetadata:forPersistentStoreWithURL:error:]
  +[NSIncrementalStore identifierForNewStoreAtURL:]

  // instance methods
  -[NSIncrementalStore dealloc]
  -[NSIncrementalStore setMetadata:]
  -[NSIncrementalStore metadata]
  -[NSIncrementalStore load:]
  -[NSIncrementalStore loadMetadata:]
  -[NSIncrementalStore _setMetadata:includeVersioning:]
  -[NSIncrementalStore newValuesForObjectWithID:withContext:error:]
  -[NSIncrementalStore _rawMetadata__]
  -[NSIncrementalStore executeRequest:withContext:error:]
  -[NSIncrementalStore newValueForRelationship:forObjectWithID:withContext:error:]
  -[NSIncrementalStore obtainPermanentIDsForObjects:error:]
  -[NSIncrementalStore _newObjectIDForEntityDescription:pk:]
  -[NSIncrementalStore referenceObjectForObjectID:]
  -[NSIncrementalStore _preflightCrossCheck]
  -[NSIncrementalStore managedObjectContextDidRegisterObjectsWithIDs:]
  -[NSIncrementalStore managedObjectContextDidUnregisterObjectsWithIDs:]
  -[NSIncrementalStore _prepareForExecuteRequest:withContext:error:]
  -[NSIncrementalStore newObjectIDForEntity:referenceObject:]


NSIncrementalStoreNode : NSObject
 @property  NSManagedObjectID *objectID
 @property  unsigned long version

  // class methods
  +[NSIncrementalStoreNode initialize]

  // instance methods
  -[NSIncrementalStoreNode dealloc]
  -[NSIncrementalStoreNode version]
  -[NSIncrementalStoreNode objectID]
  -[NSIncrementalStoreNode knownKeyValuesPointer]
  -[NSIncrementalStoreNode initWithObjectID:withValues:version:]
  -[NSIncrementalStoreNode valueForPropertyDescription:]
  -[NSIncrementalStoreNode initWithObjectID:fromSQLRow:]
  -[NSIncrementalStoreNode _snapshot_]
  -[NSIncrementalStoreNode _versionNumber]
  -[NSIncrementalStoreNode _propertyCache]
  -[NSIncrementalStoreNode updateWithValues:version:]
  -[NSIncrementalStoreNode updateFromSQLRow:]


_NSFaultingMutableOrderedSetMutationMethods : NSObject
  // class methods
  +[_NSFaultingMutableOrderedSetMutationMethods _createMutationMethodsForClass:forKey:]


PFCloudKitStoreMonitorProvider : NSObject
  // instance methods
  -[PFCloudKitStoreMonitorProvider createMonitorForObservedStore:]


_NSNotifyingWrapperMutableOrderedSet : NSMutableOrderedSet /usr/lib/libicucore.A.dylib
  // class methods
  +[_NSNotifyingWrapperMutableOrderedSet classForKeyedUnarchiver]

  // instance methods
  -[_NSNotifyingWrapperMutableOrderedSet dealloc]
  -[_NSNotifyingWrapperMutableOrderedSet copyWithZone:]
  -[_NSNotifyingWrapperMutableOrderedSet mutableCopyWithZone:]
  -[_NSNotifyingWrapperMutableOrderedSet count]
  -[_NSNotifyingWrapperMutableOrderedSet objectEnumerator]
  -[_NSNotifyingWrapperMutableOrderedSet addObject:]
  -[_NSNotifyingWrapperMutableOrderedSet removeObject:]
  -[_NSNotifyingWrapperMutableOrderedSet getObjects:]
  -[_NSNotifyingWrapperMutableOrderedSet array]
  -[_NSNotifyingWrapperMutableOrderedSet countByEnumeratingWithState:objects:count:]
  -[_NSNotifyingWrapperMutableOrderedSet objectAtIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet getObjects:range:]
  -[_NSNotifyingWrapperMutableOrderedSet setObject:atIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet insertObject:atIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet exchangeObjectAtIndex:withObjectAtIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet removeObjectAtIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet removeAllObjects]
  -[_NSNotifyingWrapperMutableOrderedSet replaceObjectsInRange:withObjects:count:]
  -[_NSNotifyingWrapperMutableOrderedSet indexOfObject:]
  -[_NSNotifyingWrapperMutableOrderedSet setValue:forKey:]
  -[_NSNotifyingWrapperMutableOrderedSet containsObject:]
  -[_NSNotifyingWrapperMutableOrderedSet removeObjectsInRange:]
  -[_NSNotifyingWrapperMutableOrderedSet replaceObjectAtIndex:withObject:]
  -[_NSNotifyingWrapperMutableOrderedSet insertObjects:count:atIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet enumerateObjectsWithOptions:usingBlock:]
  -[_NSNotifyingWrapperMutableOrderedSet classForCoder]
  -[_NSNotifyingWrapperMutableOrderedSet descriptionWithLocale:]
  -[_NSNotifyingWrapperMutableOrderedSet firstObject]
  -[_NSNotifyingWrapperMutableOrderedSet lastObject]
  -[_NSNotifyingWrapperMutableOrderedSet set]
  -[_NSNotifyingWrapperMutableOrderedSet objectsAtIndexes:]
  -[_NSNotifyingWrapperMutableOrderedSet removeObjectsAtIndexes:]
  -[_NSNotifyingWrapperMutableOrderedSet sortRange:options:usingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet addObjects:count:]
  -[_NSNotifyingWrapperMutableOrderedSet addObjectsFromArray:]
  -[_NSNotifyingWrapperMutableOrderedSet insertObjects:atIndexes:]
  -[_NSNotifyingWrapperMutableOrderedSet intersectOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet intersectSet:]
  -[_NSNotifyingWrapperMutableOrderedSet moveObjectsAtIndexes:toIndex:]
  -[_NSNotifyingWrapperMutableOrderedSet minusOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet minusSet:]
  -[_NSNotifyingWrapperMutableOrderedSet removeObjectsInArray:]
  -[_NSNotifyingWrapperMutableOrderedSet replaceObjectsAtIndexes:withObjects:]
  -[_NSNotifyingWrapperMutableOrderedSet sortWithOptions:usingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet sortUsingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet unionOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet unionSet:]
  -[_NSNotifyingWrapperMutableOrderedSet allObjects]
  -[_NSNotifyingWrapperMutableOrderedSet descriptionWithLocale:indent:]
  -[_NSNotifyingWrapperMutableOrderedSet indexesOfObjectsAtIndexes:options:passingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet indexesOfObjectsWithOptions:passingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet indexOfObjectWithOptions:passingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet indexOfObjectAtIndexes:options:passingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet sortedArrayWithOptions:usingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet enumerateObjectsAtIndexes:options:usingBlock:]
  -[_NSNotifyingWrapperMutableOrderedSet enumerateObjectsUsingBlock:]
  -[_NSNotifyingWrapperMutableOrderedSet indexOfObject:inSortedRange:options:usingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet indexOfObjectPassingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet indexesOfObjectsPassingTest:]
  -[_NSNotifyingWrapperMutableOrderedSet reverseObjectEnumerator]
  -[_NSNotifyingWrapperMutableOrderedSet sortedArrayUsingComparator:]
  -[_NSNotifyingWrapperMutableOrderedSet intersectsOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet intersectsSet:]
  -[_NSNotifyingWrapperMutableOrderedSet isSubsetOfOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet isSubsetOfSet:]
  -[_NSNotifyingWrapperMutableOrderedSet isEqualToOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet reversedOrderedSet]
  -[_NSNotifyingWrapperMutableOrderedSet valueForKey:]
  -[_NSNotifyingWrapperMutableOrderedSet classForArchiver]
  -[_NSNotifyingWrapperMutableOrderedSet valueForKeyPath:]
  -[_NSNotifyingWrapperMutableOrderedSet initWithContainer:key:mutableOrderedSet:]
  -[_NSNotifyingWrapperMutableOrderedSet _orderedObjectsAndKeys]
  -[_NSNotifyingWrapperMutableOrderedSet _reorderObjectsToLocationsByOrderKey:error:]


_NSProxyWrapperMutableOrderedSet : _NSNotifyingWrapperMutableOrderedSet
  // instance methods
  -[_NSProxyWrapperMutableOrderedSet dealloc]
  -[_NSProxyWrapperMutableOrderedSet addObject:]
  -[_NSProxyWrapperMutableOrderedSet insertObject:atIndex:]
  -[_NSProxyWrapperMutableOrderedSet removeObjectAtIndex:]
  -[_NSProxyWrapperMutableOrderedSet removeAllObjects]
  -[_NSProxyWrapperMutableOrderedSet removeObjectsInRange:]
  -[_NSProxyWrapperMutableOrderedSet replaceObjectAtIndex:withObject:]
  -[_NSProxyWrapperMutableOrderedSet insertObjects:count:atIndex:]
  -[_NSProxyWrapperMutableOrderedSet removeObjectsAtIndexes:]
  -[_NSProxyWrapperMutableOrderedSet sortRange:options:usingComparator:]
  -[_NSProxyWrapperMutableOrderedSet addObjects:count:]
  -[_NSProxyWrapperMutableOrderedSet addObjectsFromArray:]
  -[_NSProxyWrapperMutableOrderedSet insertObjects:atIndexes:]
  -[_NSProxyWrapperMutableOrderedSet intersectOrderedSet:]
  -[_NSProxyWrapperMutableOrderedSet intersectSet:]
  -[_NSProxyWrapperMutableOrderedSet minusOrderedSet:]
  -[_NSProxyWrapperMutableOrderedSet minusSet:]
  -[_NSProxyWrapperMutableOrderedSet removeObjectsInArray:]
  -[_NSProxyWrapperMutableOrderedSet sortWithOptions:usingComparator:]
  -[_NSProxyWrapperMutableOrderedSet sortUsingComparator:]
  -[_NSProxyWrapperMutableOrderedSet unionOrderedSet:]
  -[_NSProxyWrapperMutableOrderedSet unionSet:]
  -[_NSProxyWrapperMutableOrderedSet initWithContainer:key:mutableOrderedSet:mutationMethods:]


_PFUbiquityRecordImportOperation : PFUbiquityImportOperation <NSManagedObjectContextFaultingDelegate>
 @property  NSManagedObjectContext *moc
 @property  NSPersistentStoreCoordinator *psc
 @property  PFUbiquityTransactionLog *transactionLog
 @property  NSMutableSet *insertedObjectIDs
 @property  NSMutableSet *updatedObjectIDs
 @property  NSMutableSet *deletedObjectIDs
 @property  NSMutableDictionary *resolvedConflicts
 @property  PFUbiquityKnowledgeVector *logScore
 @property  NSObject<_PFUbiquityRecordImportOperationDelegate> *delegate
 @property  BOOL lockedExistingCoord
 @property  PFUbiquityKnowledgeVector *initialStoreKnowledgeVector
 @property  PFUbiquityKnowledgeVector *updatedStoreKnowledgeVector
 @property  PFUbiquityImportContext *importContext
 @property  BOOL transactionDidRollBack
 @property  BOOL success
 @property  NSError *operationError
 @property  BOOL wroteKV
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_PFUbiquityRecordImportOperation init]
  -[_PFUbiquityRecordImportOperation dealloc]
  -[_PFUbiquityRecordImportOperation copy]
  -[_PFUbiquityRecordImportOperation delegate]
  -[_PFUbiquityRecordImportOperation setDelegate:]
  -[_PFUbiquityRecordImportOperation cancel]
  -[_PFUbiquityRecordImportOperation main]
  -[_PFUbiquityRecordImportOperation success]
  -[_PFUbiquityRecordImportOperation context:shouldHandleInaccessibleFault:forObjectID:andTrigger:]
  -[_PFUbiquityRecordImportOperation deletedObjectIDs]
  -[_PFUbiquityRecordImportOperation operationError]
  -[_PFUbiquityRecordImportOperation setLogScore:]
  -[_PFUbiquityRecordImportOperation initWithTransactionLog:persistentStore:andLocalPeerID:]
  -[_PFUbiquityRecordImportOperation retainedDelegate]
  -[_PFUbiquityRecordImportOperation moc]
  -[_PFUbiquityRecordImportOperation psc]
  -[_PFUbiquityRecordImportOperation transactionLog]
  -[_PFUbiquityRecordImportOperation processObjects:withState:andImportContext:outError:]
  -[_PFUbiquityRecordImportOperation importContext]
  -[_PFUbiquityRecordImportOperation initialStoreKnowledgeVector]
  -[_PFUbiquityRecordImportOperation applyChangesFromStoreSaveSnapshot:withImportContext:withError:]
  -[_PFUbiquityRecordImportOperation updatedStoreKnowledgeVector]
  -[_PFUbiquityRecordImportOperation respondToStoreTransactionStateChangeNotification:]
  -[_PFUbiquityRecordImportOperation insertedObjectIDs]
  -[_PFUbiquityRecordImportOperation notifyDelegateOfError:]
  -[_PFUbiquityRecordImportOperation setImportContext:]
  -[_PFUbiquityRecordImportOperation fillManagedObject:withGlobalID:fromUbiquityDictionary:missingObjects:importContext:withError:]
  -[_PFUbiquityRecordImportOperation updatedObjectIDs]
  -[_PFUbiquityRecordImportOperation logScore]
  -[_PFUbiquityRecordImportOperation resolvedConflicts]
  -[_PFUbiquityRecordImportOperation lockedExistingCoord]
  -[_PFUbiquityRecordImportOperation setLockedExistingCoord:]
  -[_PFUbiquityRecordImportOperation setUpdatedStoreKnowledgeVector:]
  -[_PFUbiquityRecordImportOperation transactionDidRollBack]
  -[_PFUbiquityRecordImportOperation wroteKV]


_PFUbiquityRecordsExporter : NSObject
 @property  NSString *localPeerID
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  PFUbiquityLocation *localRootLocation
 @property  PFUbiquityLocation *currentRootLocation
 @property  NSDate *lastTransactionDate
 @property  BOOL pendingTempLogMove
 @property  BOOL allowTempLogStorage
 @property  BOOL useLocalStorage
 @property  BOOL throwOptimisticLockingException

  // instance methods
  -[_PFUbiquityRecordsExporter init]
  -[_PFUbiquityRecordsExporter dealloc]
  -[_PFUbiquityRecordsExporter localPeerID]
  -[_PFUbiquityRecordsExporter ubiquityRootLocation]
  -[_PFUbiquityRecordsExporter setLastTransactionDate:]
  -[_PFUbiquityRecordsExporter lastTransactionDate]
  -[_PFUbiquityRecordsExporter managedObjectContextDidSave:]
  -[_PFUbiquityRecordsExporter cleanUpFromRolledbackPendingTransaction:withNotification:]
  -[_PFUbiquityRecordsExporter shouldRespondToSaveNotification:]
  -[_PFUbiquityRecordsExporter setUseLocalStorage:]
  -[_PFUbiquityRecordsExporter createDictionaryForObjectsInSaveNotification:forTransactionOfType:withExportContext:andSaveSnapshot:]
  -[_PFUbiquityRecordsExporter createArrayForExternalDataReferencesInSaveNotification:withExportContext:andSaveSnapshot:]
  -[_PFUbiquityRecordsExporter scheduleTempLogMove]
  -[_PFUbiquityRecordsExporter moveLogsFromTempDirectory]
  -[_PFUbiquityRecordsExporter initWithLocalPeerID:forStoreName:ubiquityRootLocation:localRootLocation:andProcessingQueue:]
  -[_PFUbiquityRecordsExporter currentRootLocation]
  -[_PFUbiquityRecordsExporter beginWatchingForChangesFromStore:]
  -[_PFUbiquityRecordsExporter stopWatchingForChanges]
  -[_PFUbiquityRecordsExporter setUbiquityRootLocation:]
  -[_PFUbiquityRecordsExporter pendingTempLogMove]
  -[_PFUbiquityRecordsExporter allowTempLogStorage]
  -[_PFUbiquityRecordsExporter setAllowTempLogStorage:]
  -[_PFUbiquityRecordsExporter localRootLocation]
  -[_PFUbiquityRecordsExporter useLocalStorage]
  -[_PFUbiquityRecordsExporter throwOptimisticLockingException]
  -[_PFUbiquityRecordsExporter setThrowOptimisticLockingException:]


_PFUbiquityRecordsImporter : NSObject <_PFUbiquityRecordImportOperationDelegate, NSManagedObjectContextFaultingDelegate, PFUbiquityBaselineRollOperationDelegate, PFUbiquityBaselineRecoveryOperationDelegate, PFUbiquityBaselineRollResponseOperationDelegate>
 @property  NSOperationQueue *importQueue
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  BOOL isMonitoring
 @property  NSObject<OS_dispatch_source> *logRestartTimer
 @property  NSRecursiveLock *schedulingLock
 @property  BOOL importOnlyActiveStores
 @property  BOOL throttleNotifications
 @property  BOOL allowBaselineRoll
 @property  PFUbiquityRecordsImporterSchedulingContext *schedulingContext
 @property  PFUbiquitySwitchboardCacheWrapper *sideLoadCacheWrapper
 @property  NSPersistentStore *privateStore
 @property  NSPersistentStoreCoordinator *privatePSC
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_PFUbiquityRecordsImporter initialize]
  +[_PFUbiquityRecordsImporter createPrivateCoordinatorForStore:error:]
  +[_PFUbiquityRecordsImporter addPrivateStore:toCoordinator:atURL:error:]
  +[_PFUbiquityRecordsImporter canProcessContentsOfUbiquityRootPath:]
  +[_PFUbiquityRecordsImporter createPrivateCoordinatorAndStoreForStore:atURL:error:]
  +[_PFUbiquityRecordsImporter executeBlockOnRootQueue:]
  +[_PFUbiquityRecordsImporter afterDelay:executeBlockOnRootQueue:]

  // instance methods
  -[_PFUbiquityRecordsImporter init]
  -[_PFUbiquityRecordsImporter dealloc]
  -[_PFUbiquityRecordsImporter context:shouldHandleInaccessibleFault:forObjectID:andTrigger:]
  -[_PFUbiquityRecordsImporter privateStore]
  -[_PFUbiquityRecordsImporter localPeerID]
  -[_PFUbiquityRecordsImporter storeName]
  -[_PFUbiquityRecordsImporter ubiquityRootLocation]
  -[_PFUbiquityRecordsImporter tearDown]
  -[_PFUbiquityRecordsImporter operation:failedWithError:]
  -[_PFUbiquityRecordsImporter operationDidFinish:]
  -[_PFUbiquityRecordsImporter requestBaselineRollForStore:]
  -[_PFUbiquityRecordsImporter operationWasInterruptedDuringImport:]
  -[_PFUbiquityRecordsImporter metadataInconsistencyDetectedForStore:]
  -[_PFUbiquityRecordsImporter initWithLocalPeerID:andUbiquityRootLocation:]
  -[_PFUbiquityRecordsImporter setUbiquityRootLocation:]
  -[_PFUbiquityRecordsImporter importQueue]
  -[_PFUbiquityRecordsImporter canProcessTransactionLogWithScore:afterLogWithScore:]
  -[_PFUbiquityRecordsImporter isMonitoring]
  -[_PFUbiquityRecordsImporter setAllowBaselineRoll:]
  -[_PFUbiquityRecordsImporter schedulingLock]
  -[_PFUbiquityRecordsImporter createSortedOperationsArrayWithMetadata:isFirstImport:]
  -[_PFUbiquityRecordsImporter checkSchedulingContextForMissingLocalPeerOperations:error:]
  -[_PFUbiquityRecordsImporter scheduleTransactionLogOperations:synchronous:error:]
  -[_PFUbiquityRecordsImporter batchDownloadTransactionLogsAtLocations:error:]
  -[_PFUbiquityRecordsImporter schedulePendingLogs:error:]
  -[_PFUbiquityRecordsImporter createNewSetOfObjectIDsForCoordinator:fromObjectIDs:]
  -[_PFUbiquityRecordsImporter shouldThrottleNotificationsWithOperation:]
  -[_PFUbiquityRecordsImporter postImportNotificationForStoreName:andLocalPeerID:withUserInfo:]
  -[_PFUbiquityRecordsImporter scheduleRecoveryTimer]
  -[_PFUbiquityRecordsImporter discoverAndImportAllAvailableLogs:error:]
  -[_PFUbiquityRecordsImporter logRestartTimer]
  -[_PFUbiquityRecordsImporter setLogRestartTimer:]
  -[_PFUbiquityRecordsImporter allowBaselineRoll]
  -[_PFUbiquityRecordsImporter executeBlockOnPrivateQueue:]
  -[_PFUbiquityRecordsImporter scheduleBaselineRecoveryOperationWithActiveBaselineOperation:]
  -[_PFUbiquityRecordsImporter baselineRollOperationEncounteredAnInconsistentBaselineState:]
  -[_PFUbiquityRecordsImporter baselineRollOperationWasUnableToLockPersistentStore:]
  -[_PFUbiquityRecordsImporter recoveryOperation:didReplaceLocalStoreFileWithBaseline:]
  -[_PFUbiquityRecordsImporter recoveryOperation:encounteredAnError:duringRecoveryOfBaseline:]
  -[_PFUbiquityRecordsImporter rollResponseOperation:successfullyAdoptedBaseline:]
  -[_PFUbiquityRecordsImporter rollResponseOperation:encounteredAnError:whileTryingToAdoptBaseline:]
  -[_PFUbiquityRecordsImporter initWithLocalPeerID:ubiquityRootLocation:storeName:andPrivateStore:]
  -[_PFUbiquityRecordsImporter isPeerForked:andLocalKV:]
  -[_PFUbiquityRecordsImporter startMonitor:]
  -[_PFUbiquityRecordsImporter compareScoreKnowledgeVector:withScoreDictionary:]
  -[_PFUbiquityRecordsImporter scheduleBaselineRollResponseOperationForBaselineAtLocation:]
  -[_PFUbiquityRecordsImporter throttleNotifications]
  -[_PFUbiquityRecordsImporter setThrottleNotifications:]
  -[_PFUbiquityRecordsImporter importOnlyActiveStores]
  -[_PFUbiquityRecordsImporter setImportOnlyActiveStores:]
  -[_PFUbiquityRecordsImporter schedulingContext]
  -[_PFUbiquityRecordsImporter sideLoadCacheWrapper]
  -[_PFUbiquityRecordsImporter setSideLoadCacheWrapper:]
  -[_PFUbiquityRecordsImporter privatePSC]


NSSQLLocationAttributeRTreeExtension : NSObject <NSSQLAttributeExtension>
 @property  NSObject *userInfoObject
 @property  NSArray *components
 @property  NSAttributeDescription *attributeDescription
 @property  NSSQLEntity *sqlEntity
 @property  NSString *rtreeTableName
 @property  NSAttributeDescription *latProp
 @property  NSAttributeDescription *longProp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *insertSQLStrings
 @property  NSArray *dropSQLStrings
 @property  NSArray *bulkUpdateSQLStrings

  // class methods
  +[NSSQLLocationAttributeRTreeExtension newRTReeTableNameForAttribute:onEntity:]

  // instance methods
  -[NSSQLLocationAttributeRTreeExtension dealloc]
  -[NSSQLLocationAttributeRTreeExtension components]
  -[NSSQLLocationAttributeRTreeExtension validate:]
  -[NSSQLLocationAttributeRTreeExtension sqlEntity]
  -[NSSQLLocationAttributeRTreeExtension attributeDescription]
  -[NSSQLLocationAttributeRTreeExtension generateSQLStrings]
  -[NSSQLLocationAttributeRTreeExtension initWithObjectFromUserInfo:onAttributeNamed:onEntity:]
  -[NSSQLLocationAttributeRTreeExtension isEqualToExtension:]
  -[NSSQLLocationAttributeRTreeExtension insertSQLStrings]
  -[NSSQLLocationAttributeRTreeExtension dropSQLStrings]
  -[NSSQLLocationAttributeRTreeExtension bulkUpdateSQLStrings]
  -[NSSQLLocationAttributeRTreeExtension rtreeTableName]
  -[NSSQLLocationAttributeRTreeExtension validatePropertyWithDescription:andName:forUseAs:onAttributeNamed:onEntityNamed:error:]
  -[NSSQLLocationAttributeRTreeExtension userInfoObject]
  -[NSSQLLocationAttributeRTreeExtension latProp]
  -[NSSQLLocationAttributeRTreeExtension longProp]


_PFUbiquityStack : NSObject
 @property  NSManagedObjectContext *metadataMOC
 @property  PFUbiquityMetadataFactoryEntry *metadataEntry
 @property  NSString *localPeerID
 @property  PFUbiquityLocation *ubiquityRootURL
 @property  NSString *storeName
 @property  PFUbiquityLocation *metadataStoreFileLocation

  // instance methods
  -[_PFUbiquityStack init]
  -[_PFUbiquityStack dealloc]
  -[_PFUbiquityStack allPeers]
  -[_PFUbiquityStack localPeerID]
  -[_PFUbiquityStack storeName]
  -[_PFUbiquityStack ubiquityRootURL]
  -[_PFUbiquityStack metadataMOC]
  -[_PFUbiquityStack createMetadataStoreKnowledgeVector:]
  -[_PFUbiquityStack createMinMetadataStoreKnowledgeVector:]
  -[_PFUbiquityStack metadataStoreFileLocation]
  -[_PFUbiquityStack initWithMetadataEntry:]
  -[_PFUbiquityStack purgeAndInitializeMetadataStoreFileWithError:]
  -[_PFUbiquityStack purgeMetadataForStoreMetadata:withError:]
  -[_PFUbiquityStack peerForPeerID:createIfMissing:]
  -[_PFUbiquityStack metadataEntry]


NSXPCStoreConnectionManager : NSObject
 @property  unsigned long maxConnections
 @property  NSArray *availableConnections

  // instance methods
  -[NSXPCStoreConnectionManager dealloc]
  -[NSXPCStoreConnectionManager initForStore:]
  -[NSXPCStoreConnectionManager disconnectAllConnections]
  -[NSXPCStoreConnectionManager sendMessageWithContext:]
  -[NSXPCStoreConnectionManager _checkinConnection:]
  -[NSXPCStoreConnectionManager _checkoutConnection]
  -[NSXPCStoreConnectionManager maxConnections]
  -[NSXPCStoreConnectionManager availableConnections]


PFUbiquityPeerState : NSManagedObject
 @property  NSString *lastProcessedTransactionLogURL
 @property  NSString *storeName
 @property  NSNumber *transactionNumber
 @property  PFUbiquityPeer *peer
 @property  PFUbiquityStoreMetadata *storeMetadata

  // class methods
  +[PFUbiquityPeerState peerStateForStoreName:andPeerID:inManagedObjectContext:createIfMissing:]
  +[PFUbiquityPeerState peerStatesMatchingStoreName:inManagedObjectContext:]
  +[PFUbiquityPeerState peerStateForStoreName:andPeerID:inManagedObjectContext:]
  +[PFUbiquityPeerState peerStatesMatchingStoreName:inManagedObjectContext:omittingLocalPeerID:]

  // instance methods
  -[PFUbiquityPeerState initWithStoreName:insertIntoManagedObjectContext:]


CDDCloudKitScheduledActivity : NSManagedObject
 @property  NSNumber *activityTypeNum
 @property  NSUUID *activityUUID
 @property  unsigned long activityType
 @property  NSDate *scheduledAt
 @property  CDDCloudKitRegisteredClient *registeredClient
 @property  NSNumber *isUserRequestedBackupTask

  // class methods
  +[CDDCloudKitScheduledActivity entityName]

  // instance methods
  -[CDDCloudKitScheduledActivity activityType]
  -[CDDCloudKitScheduledActivity setActivityType:]
  -[CDDCloudKitScheduledActivity populateFromCriteria:]
  -[CDDCloudKitScheduledActivity xpcActivityCriteria]


NSPersistentStoreDescription : NSObject <NSCopying>
 @property  NSPersistentCloudKitContainerOptions *cloudKitContainerOptions
 @property  NSString *type
 @property  NSString *configuration
 @property  NSURL *URL
 @property  NSDictionary *options
 @property  BOOL readOnly
 @property  double timeout
 @property  NSDictionary *sqlitePragmas
 @property  BOOL shouldAddStoreAsynchronously
 @property  BOOL shouldMigrateStoreAutomatically
 @property  BOOL shouldInferMappingModelAutomatically

  // class methods
  +[NSPersistentStoreDescription persistentStoreDescriptionWithURL:]
  +[NSPersistentStoreDescription inMemoryPersistentStoreDescription]

  // instance methods
  -[NSPersistentStoreDescription init]
  -[NSPersistentStoreDescription dealloc]
  -[NSPersistentStoreDescription isEqual:]
  -[NSPersistentStoreDescription copyWithZone:]
  -[NSPersistentStoreDescription options]
  -[NSPersistentStoreDescription type]
  -[NSPersistentStoreDescription setType:]
  -[NSPersistentStoreDescription initWithURL:]
  -[NSPersistentStoreDescription setURL:]
  -[NSPersistentStoreDescription URL]
  -[NSPersistentStoreDescription timeout]
  -[NSPersistentStoreDescription setTimeout:]
  -[NSPersistentStoreDescription setOption:forKey:]
  -[NSPersistentStoreDescription setConfiguration:]
  -[NSPersistentStoreDescription configuration]
  -[NSPersistentStoreDescription setOption:forMirroringKey:]
  -[NSPersistentStoreDescription mirroringDelegate]
  -[NSPersistentStoreDescription setReadOnly:]
  -[NSPersistentStoreDescription isReadOnly]
  -[NSPersistentStoreDescription mirroringOptions]
  -[NSPersistentStoreDescription cloudKitContainerOptions]
  -[NSPersistentStoreDescription setMirroringDelegate:]
  -[NSPersistentStoreDescription shouldAddStoreAsynchronously]
  -[NSPersistentStoreDescription setCloudKitContainerOptions:]
  -[NSPersistentStoreDescription sqlitePragmas]
  -[NSPersistentStoreDescription setValue:forPragmaNamed:]
  -[NSPersistentStoreDescription setShouldAddStoreAsynchronously:]
  -[NSPersistentStoreDescription shouldInvokeCompletionHandlerConcurrently]
  -[NSPersistentStoreDescription setShouldInvokeCompletionHandlerConcurrently:]
  -[NSPersistentStoreDescription shouldMigrateStoreAutomatically]
  -[NSPersistentStoreDescription setShouldMigrateStoreAutomatically:]
  -[NSPersistentStoreDescription shouldInferMappingModelAutomatically]
  -[NSPersistentStoreDescription setShouldInferMappingModelAutomatically:]
  -[NSPersistentStoreDescription usesPersistentHistoryTracking]
  -[NSPersistentStoreDescription setUsesPersistentHistoryTracking:]


NSSQLKeypathTriggerAttributeExtension : NSObject <NSSQLAttributeExtension>
 @property  id objectFromUserInfo
 @property  NSString *keypath
 @property  NSSQLEntity *entity
 @property  NSSQLAttribute *attribute
 @property  NSSQLRelationship *countedRelationship
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *insertSQLStrings
 @property  NSArray *dropSQLStrings
 @property  NSArray *bulkUpdateSQLStrings

  // instance methods
  -[NSSQLKeypathTriggerAttributeExtension dealloc]
  -[NSSQLKeypathTriggerAttributeExtension attribute]
  -[NSSQLKeypathTriggerAttributeExtension entity]
  -[NSSQLKeypathTriggerAttributeExtension validate:]
  -[NSSQLKeypathTriggerAttributeExtension generateSQLStrings]
  -[NSSQLKeypathTriggerAttributeExtension initWithObjectFromUserInfo:onAttributeNamed:onEntity:]
  -[NSSQLKeypathTriggerAttributeExtension isEqualToExtension:]
  -[NSSQLKeypathTriggerAttributeExtension insertSQLStrings]
  -[NSSQLKeypathTriggerAttributeExtension dropSQLStrings]
  -[NSSQLKeypathTriggerAttributeExtension bulkUpdateSQLStrings]
  -[NSSQLKeypathTriggerAttributeExtension validateExpression:error:]
  -[NSSQLKeypathTriggerAttributeExtension validateAttribute:]
  -[NSSQLKeypathTriggerAttributeExtension validateKeypath:]
  -[NSSQLKeypathTriggerAttributeExtension keypath]
  -[NSSQLKeypathTriggerAttributeExtension objectFromUserInfo]
  -[NSSQLKeypathTriggerAttributeExtension countedRelationship]


PFCloudKitMetadataCache : NSObject
  // instance methods
  -[PFCloudKitMetadataCache init]
  -[PFCloudKitMetadataCache dealloc]
  -[PFCloudKitMetadataCache cacheMetadataForObjectsWithIDs:andRecordsWithIDs:inStore:withManagedObjectContext:error:]
  -[PFCloudKitMetadataCache zoneMetadataForZoneID:]
  -[PFCloudKitMetadataCache cacheZoneMetadata:]
  -[PFCloudKitMetadataCache mirroredRelationshipForKey:]
  -[PFCloudKitMetadataCache mtmKeysRelatedToObjectWithID:byRelationshipWithName:]
  -[PFCloudKitMetadataCache recordMetadataForObject:]
  -[PFCloudKitMetadataCache registerRecordMetadata:forObject:]
  -[PFCloudKitMetadataCache recordMetadataForRecordID:]
  -[PFCloudKitMetadataCache _addMirroredRelationshipMTMKey:forObjectWithID:andRelationshipName:]
  -[PFCloudKitMetadataCache _metadataForRecordID:]
  -[PFCloudKitMetadataCache recordMetadataForObjectID:]
  -[PFCloudKitMetadataCache mirroredRelationshipForRecordID:]
  -[PFCloudKitMetadataCache registerMirroredRelationship:forKey:]


NSSQLIndexIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLIndexIntermediate dealloc]
  -[NSSQLIndexIntermediate generateSQLStringInContext:]
  -[NSSQLIndexIntermediate isIndexScoped]
  -[NSSQLIndexIntermediate initForIndex:withScope:]
  -[NSSQLIndexIntermediate isIndexExpressionScoped]
  -[NSSQLIndexIntermediate governingEntity]
  -[NSSQLIndexIntermediate _generateSQLForExpressionDescription:inContext:]


PFCloudKitExporterOptions : NSObject
 @property  CKRecordZone *recordZone
 @property  CKDatabase *database
 @property  NSCloudKitMirroringDelegateOptions *mirroringDelegateOptions
 @property  unsigned long perOperationBytesThreshold
 @property  unsigned long perOperationObjectThreshold

  // instance methods
  -[PFCloudKitExporterOptions dealloc]
  -[PFCloudKitExporterOptions copy]
  -[PFCloudKitExporterOptions database]
  -[PFCloudKitExporterOptions recordZone]
  -[PFCloudKitExporterOptions mirroringDelegateOptions]
  -[PFCloudKitExporterOptions initWithZone:database:options:]
  -[PFCloudKitExporterOptions setPerOperationObjectThreshold:]
  -[PFCloudKitExporterOptions setPerOperationBytesThreshold:]
  -[PFCloudKitExporterOptions perOperationBytesThreshold]
  -[PFCloudKitExporterOptions perOperationObjectThreshold]


PFUbiquityRemotePeerState : NSManagedObject
 @property  NSNumber *transactionNumber
 @property  NSString *peerID
 @property  NSString *storeName
 @property  PFUbiquityPeer *peer

  // class methods
  +[PFUbiquityRemotePeerState remotePeerStatesMatchingStoreName:inManagedObjectContext:]
  +[PFUbiquityRemotePeerState remotePeerStatesMatchingStoreName:andPeerID:inManagedObjectContext:]

  // instance methods
  -[PFUbiquityRemotePeerState initWithStoreName:andRemotePeerID:insertIntoManagedObjectContext:]


NSSQLEntity_DerivedAttributesExtension : NSObject
  // instance methods
  -[NSSQLEntity_DerivedAttributesExtension dealloc]
  -[NSSQLEntity_DerivedAttributesExtension entity]
  -[NSSQLEntity_DerivedAttributesExtension initWithEntity:]
  -[NSSQLEntity_DerivedAttributesExtension migrationSQL]
  -[NSSQLEntity_DerivedAttributesExtension addDerivationKeypath:forAttribute:]
  -[NSSQLEntity_DerivedAttributesExtension derivedAttributes]
  -[NSSQLEntity_DerivedAttributesExtension triggerSQL]
  -[NSSQLEntity_DerivedAttributesExtension _generateTriggerSQL]


NSCKImportPendingRelationship : NSManagedObject
 @property  NSString *recordName
 @property  NSString *cdEntityName
 @property  NSString *relatedRecordName
 @property  NSString *relatedEntityName
 @property  NSString *relationshipName
 @property  NSNumber *needsDelete
 @property  NSCKImportOperation *operation

  // class methods
  +[NSCKImportPendingRelationship entityPath]
  +[NSCKImportPendingRelationship insertPendingRelationshipForFailedRelationship:forOperation:inStore:withManagedObjectContext:]


NSPersistentContainer : NSObject
 @property  NSString *name
 @property  NSManagedObjectContext *viewContext
 @property  NSManagedObjectModel *managedObjectModel
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSArray *persistentStoreDescriptions

  // class methods
  +[NSPersistentContainer _newModelForName:]
  +[NSPersistentContainer defaultDirectoryURL]
  +[NSPersistentContainer persistentStoreDescriptionClass]
  +[NSPersistentContainer persistentContainerWithName:]
  +[NSPersistentContainer persistentContainerWithName:managedObjectModel:]
  +[NSPersistentContainer persistentContainerWithPath:managedObjectModel:]
  +[NSPersistentContainer persistentContainerWithPath:]
  +[NSPersistentContainer persistentContainerWithPath:modelNamed:]
  +[NSPersistentContainer persistentContainerUsingCachedModelWithPath:]

  // instance methods
  -[NSPersistentContainer init]
  -[NSPersistentContainer dealloc]
  -[NSPersistentContainer name]
  -[NSPersistentContainer initWithName:]
  -[NSPersistentContainer managedObjectModel]
  -[NSPersistentContainer persistentStoreCoordinator]
  -[NSPersistentContainer load:]
  -[NSPersistentContainer initWithName:managedObjectModel:]
  -[NSPersistentContainer persistentStoreDescriptions]
  -[NSPersistentContainer setPersistentStoreDescriptions:]
  -[NSPersistentContainer _loadStoreDescriptons:withCompletionHandler:]
  -[NSPersistentContainer newBackgroundContext]
  -[NSPersistentContainer loadPersistentStoresWithCompletionHandler:]
  -[NSPersistentContainer viewContext]
  -[NSPersistentContainer performBackgroundTask:]


PFCloudKitImporterZoneChangedWorkItem : PFCloudKitImporterWorkItem <PFCloudKitSerializerDelegate>
 @property  NSArray *changedRecordZoneIDs
 @property  NSUUID *importOperationIdentifier
 @property  NSDictionary *assetPathToSafeSaveURL
 @property  NSArray *encounteredErrors
 @property  NSArray *updatedRecords
 @property  NSDictionary *recordTypeToDeletedRecordID
 @property  NSArray *allRecordIDs
 @property  unsigned long currentOperationBytes
 @property  unsigned long totalOperationBytes
 @property  unsigned long totalRecordBytes
 @property  NSDictionary *fetchedZoneIDToChangeToken
 @property  NSArray *incrementalResults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PFCloudKitImporterZoneChangedWorkItem dealloc]
  -[PFCloudKitImporterZoneChangedWorkItem recordTypeToDeletedRecordID]
  -[PFCloudKitImporterZoneChangedWorkItem doWorkWithCompletion:]
  -[PFCloudKitImporterZoneChangedWorkItem changedRecordZoneIDs]
  -[PFCloudKitImporterZoneChangedWorkItem initWithChangedRecordZoneIDs:options:request:]
  -[PFCloudKitImporterZoneChangedWorkItem totalRecordBytes]
  -[PFCloudKitImporterZoneChangedWorkItem fetchOperationFinishedWithError:completion:]
  -[PFCloudKitImporterZoneChangedWorkItem removeDownloadedAssetFiles]
  -[PFCloudKitImporterZoneChangedWorkItem addUpdatedRecord:]
  -[PFCloudKitImporterZoneChangedWorkItem newMirroringResultByApplyingAccumulatedChanges:]
  -[PFCloudKitImporterZoneChangedWorkItem cloudKitSerializer:failedToUpdateRelationship:withError:]
  -[PFCloudKitImporterZoneChangedWorkItem cloudKitSerializer:safeSaveURLForAsset:]
  -[PFCloudKitImporterZoneChangedWorkItem assetPathToSafeSaveURL]
  -[PFCloudKitImporterZoneChangedWorkItem updatedRecords]
  -[PFCloudKitImporterZoneChangedWorkItem encounteredErrors]
  -[PFCloudKitImporterZoneChangedWorkItem addDeletedRecordID:ofType:]
  -[PFCloudKitImporterZoneChangedWorkItem serverChangeTokenUpdated:forRecordZoneWithID:]
  -[PFCloudKitImporterZoneChangedWorkItem fetchFinishedForZoneWithID:serverChangeToken:error:]
  -[PFCloudKitImporterZoneChangedWorkItem applyAccumulatedChanges:error:]
  -[PFCloudKitImporterZoneChangedWorkItem checkAndApplyChangesIfNeeded:]
  -[PFCloudKitImporterZoneChangedWorkItem importOperationIdentifier]
  -[PFCloudKitImporterZoneChangedWorkItem currentOperationBytes]
  -[PFCloudKitImporterZoneChangedWorkItem totalOperationBytes]
  -[PFCloudKitImporterZoneChangedWorkItem allRecordIDs]
  -[PFCloudKitImporterZoneChangedWorkItem fetchedZoneIDToChangeToken]
  -[PFCloudKitImporterZoneChangedWorkItem incrementalResults]


NSCloudKitMirroringDelegate : NSObject <PFCloudKitExporterDelegate, NSPersistentStoreMirroringDelegate>
 @property  NSCloudKitMirroringDelegateOptions *options
 @property  NSString *ckDatabaseName
 @property  NSObject<OS_dispatch_semaphore> *cloudKitQueueSemaphore
 @property  NSObject<OS_dispatch_queue> *cloudKitQueue
 @property  CKRecordZone *recordZone
 @property  CKDatabaseSubscription *databaseSubscription
 @property  CKContainer *container
 @property  CKDatabase *database
 @property  CKScheduler *scheduler
 @property  CKNotificationListener *notificationListener
 @property  NSError *lastInitializationError
 @property  NSPersistentStore *observedStore
 @property  NSPersistentStoreCoordinator *observedCoordinator
 @property  BOOL hadObservedStore
 @property  BOOL successfullyInitialized
 @property  PFCloudKitExporterOptions *exporterOptions
 @property  NSCloudKitMirroringRequestManager *requestManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSCloudKitMirroringDelegate initialize]
  +[NSCloudKitMirroringDelegate checkAndCreateDirectoryAtURL:wipeIfExists:error:]
  +[NSCloudKitMirroringDelegate cloudKitMetadataTransformerName]
  +[NSCloudKitMirroringDelegate cloudKitMachServiceName]
  +[NSCloudKitMirroringDelegate createCloudKitServerWithMachServiceName:andStorageDirectoryPath:]
  +[NSCloudKitMirroringDelegate isFirstPartyContainerIdentifier:]
  +[NSCloudKitMirroringDelegate stringForResetReason:]
  +[NSCloudKitMirroringDelegate checkForCloudKitTablesInStoreAtURL:withPersistentStoreCoordinator:withConfiguration:]
  +[NSCloudKitMirroringDelegate makeACopyOfTheStoreAtURL:withCoordinator:error:]
  +[NSCloudKitMirroringDelegate printMetadataForStoreAtURL:withConfiguration:operateOnACopy:]
  +[NSCloudKitMirroringDelegate printRepresentativeSchemaForModelAtURL:orStoreAtURL:withConfiguration:]
  +[NSCloudKitMirroringDelegate checkIfContentsOfStore:matchContentsOfStore:error:]

  // instance methods
  -[NSCloudKitMirroringDelegate dealloc]
  -[NSCloudKitMirroringDelegate options]
  -[NSCloudKitMirroringDelegate container]
  -[NSCloudKitMirroringDelegate initWithOptions:]
  -[NSCloudKitMirroringDelegate .cxx_destruct]
  -[NSCloudKitMirroringDelegate _setContainer:]
  -[NSCloudKitMirroringDelegate database]
  -[NSCloudKitMirroringDelegate recordZone]
  -[NSCloudKitMirroringDelegate initWithCloudKitContainerOptions:]
  -[NSCloudKitMirroringDelegate validateManagedObjectModel:forUseWithStoreWithDescription:error:]
  -[NSCloudKitMirroringDelegate persistentStoreCoordinator:didSuccessfullyAddPersistentStore:withDescription:]
  -[NSCloudKitMirroringDelegate tearDown]
  -[NSCloudKitMirroringDelegate scheduler]
  -[NSCloudKitMirroringDelegate lastInitializationError]
  -[NSCloudKitMirroringDelegate executeMirroringRequest:error:]
  -[NSCloudKitMirroringDelegate _setDatabase:]
  -[NSCloudKitMirroringDelegate databaseSubscription]
  -[NSCloudKitMirroringDelegate logResetSyncNotification:]
  -[NSCloudKitMirroringDelegate exporter:willScheduleOperations:]
  -[NSCloudKitMirroringDelegate _respondToAccountOrIdentityChangeNotification:]
  -[NSCloudKitMirroringDelegate _respondToApplicationActivationNotification:]
  -[NSCloudKitMirroringDelegate _respondToApplicationDeactivationNotification:]
  -[NSCloudKitMirroringDelegate notificationListener]
  -[NSCloudKitMirroringDelegate removeNotificationRegistrations]
  -[NSCloudKitMirroringDelegate observeChangesForStore:inPersistentStoreCoordinator:]
  -[NSCloudKitMirroringDelegate _openTransactionWithLabel:andExecuteWorkBlock:]
  -[NSCloudKitMirroringDelegate _setUpCloudKitIntegration]
  -[NSCloudKitMirroringDelegate requestManager]
  -[NSCloudKitMirroringDelegate checkAndExecuteNextRequest]
  -[NSCloudKitMirroringDelegate resetAfterError:andKeepContainer:]
  -[NSCloudKitMirroringDelegate coordinatorWillRemoveStore:]
  -[NSCloudKitMirroringDelegate storesDidChange:]
  -[NSCloudKitMirroringDelegate ckAccountOrIdentityChangedHandler:]
  -[NSCloudKitMirroringDelegate managedObjectContextSaved:]
  -[NSCloudKitMirroringDelegate remoteStoreDidChange:]
  -[NSCloudKitMirroringDelegate _scheduleAutomatedExportWithLabel:activity:completionHandler:]
  -[NSCloudKitMirroringDelegate _scheduleAutomatedImportWithLabel:activity:completionHandler:]
  -[NSCloudKitMirroringDelegate checkAndScheduleImportIfNecessary:]
  -[NSCloudKitMirroringDelegate applicationDidActivate:]
  -[NSCloudKitMirroringDelegate applicationWillDeactivate:]
  -[NSCloudKitMirroringDelegate newActivityWithIdentifier:]
  -[NSCloudKitMirroringDelegate _enqueueRequest:]
  -[NSCloudKitMirroringDelegate _performFetchRecordsRequest:]
  -[NSCloudKitMirroringDelegate _performImportWithRequest:]
  -[NSCloudKitMirroringDelegate _performExportWithRequest:]
  -[NSCloudKitMirroringDelegate _performResetZoneRequest:]
  -[NSCloudKitMirroringDelegate _performMetadataResetRequest:]
  -[NSCloudKitMirroringDelegate _performSetupRequest:]
  -[NSCloudKitMirroringDelegate _performDelegateResetRequest:]
  -[NSCloudKitMirroringDelegate _performSchemaInitializationRequest:]
  -[NSCloudKitMirroringDelegate _performSerializationRequest:]
  -[NSCloudKitMirroringDelegate _performExportProgressRequest:]
  -[NSCloudKitMirroringDelegate resetAfterError:]
  -[NSCloudKitMirroringDelegate _finishedRequest:withResult:]
  -[NSCloudKitMirroringDelegate _beginWatchingForChanges]
  -[NSCloudKitMirroringDelegate recoverFromError:]
  -[NSCloudKitMirroringDelegate _requestAbortedNotInitialized:]
  -[NSCloudKitMirroringDelegate _requestEncounteredRecoverableError:withResult:]
  -[NSCloudKitMirroringDelegate _requestEncounteredUnrecoverableError:withResult:]
  -[NSCloudKitMirroringDelegate _recoverFromPartialError:withMonitor:]
  -[NSCloudKitMirroringDelegate _recoverFromError:withMonitor:]
  -[NSCloudKitMirroringDelegate postWillResetNotificationForError:]
  -[NSCloudKitMirroringDelegate postDidResetNotificationForError:]
  -[NSCloudKitMirroringDelegate _postResetSyncNotificationWithName:forError:]
  -[NSCloudKitMirroringDelegate resetNotificationUserInfoForError:]
  -[NSCloudKitMirroringDelegate scheduleExportWithMonitor:]
  -[NSCloudKitMirroringDelegate observedStore]
  -[NSCloudKitMirroringDelegate _dateExceedsSchedulingThreshold:]
  -[NSCloudKitMirroringDelegate _executeRequest:]
  -[NSCloudKitMirroringDelegate handleErrorInResult:]
  -[NSCloudKitMirroringDelegate finishedAutomatedRequestWithResult:]
  -[NSCloudKitMirroringDelegate _createSchemaWithMonitor:options:error:]
  -[NSCloudKitMirroringDelegate _setObservedStore:observedCoordinator:]
  -[NSCloudKitMirroringDelegate _setZone:]
  -[NSCloudKitMirroringDelegate _setAccountNotificationBackoffInterval:]
  -[NSCloudKitMirroringDelegate _setRequestManager:]
  -[NSCloudKitMirroringDelegate _setAppActivateObserver:]
  -[NSCloudKitMirroringDelegate _setAppDeactivateObserver:]
  -[NSCloudKitMirroringDelegate checkForNewChanges]
  -[NSCloudKitMirroringDelegate fetchChangesAndUpdateObservedStore]
  -[NSCloudKitMirroringDelegate ckDatabaseName]
  -[NSCloudKitMirroringDelegate cloudKitQueueSemaphore]
  -[NSCloudKitMirroringDelegate cloudKitQueue]
  -[NSCloudKitMirroringDelegate observedCoordinator]
  -[NSCloudKitMirroringDelegate successfullyInitialized]
  -[NSCloudKitMirroringDelegate exporterOptions]
  -[NSCloudKitMirroringDelegate hadObservedStore]


PFUbiquityLogging : NSObject
 @property  int desiredLogLevel

  // class methods
  +[PFUbiquityLogging initialize]
  +[PFUbiquityLogging canLogMessageAtLevel:]
  +[PFUbiquityLogging setLoggingLevel:]

  // instance methods
  -[PFUbiquityLogging init]
  -[PFUbiquityLogging dealloc]
  -[PFUbiquityLogging userDefaultsChanged:]
  -[PFUbiquityLogging checkUserDefaults]
  -[PFUbiquityLogging setDesiredLogLevel:]
  -[PFUbiquityLogging desiredLogLevel]


PFUBLogEventID : NSObject
 @property  NSString *idString
 @property  long long hash
 @property  long long eventType

  // class methods
  +[PFUBLogEventID initialize]

  // instance methods
  -[PFUBLogEventID eventType]
  -[PFUBLogEventID initWithEventType:]
  -[PFUBLogEventID initWithCustomKey:]
  -[PFUBLogEventID idString]


PFUbiquityEventLogging : NSObject
 @property  long long logLevel

  // class methods
  +[PFUbiquityEventLogging initialize]
  +[PFUbiquityEventLogging sharedEventLogger]

  // instance methods
  -[PFUbiquityEventLogging init]
  -[PFUbiquityEventLogging dealloc]
  -[PFUbiquityEventLogging logLevel]
  -[PFUbiquityEventLogging logEvent:ID:message:]
  -[PFUbiquityEventLogging createEventTrackingID:]
  -[PFUbiquityEventLogging createCustomEventTrackingID:]
  -[PFUbiquityEventLogging beginEvent:]
  -[PFUbiquityEventLogging logEventData:message:]
  -[PFUbiquityEventLogging diagnostic:message:]
  -[PFUbiquityEventLogging debug:message:]
  -[PFUbiquityEventLogging info:message:]
  -[PFUbiquityEventLogging warning:message:]
  -[PFUbiquityEventLogging error:message:]
  -[PFUbiquityEventLogging fatal:message:]
  -[PFUbiquityEventLogging endEvent:]
  -[PFUbiquityEventLogging incompleteEvents]
  -[PFUbiquityEventLogging setLogLevel:]


PFUbiquityFilePresenter : NSObject <NSFilePresenter>
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *localPeerID
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSDictionary *locationToStatus
 @property  NSDictionary *locationToSafeSaveFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes

  // class methods
  +[PFUbiquityFilePresenter initialize]
  +[PFUbiquityFilePresenter usesCloudDocsFramework]
  +[PFUbiquityFilePresenter startDownloadForItems:onQueue:withBlock:]
  +[PFUbiquityFilePresenter sharedPrivateOperationQueue]
  +[PFUbiquityFilePresenter cloudDocsRootFolder]
  +[PFUbiquityFilePresenter registerInitialSyncHandlerForURL:andContainerID:onQueue:withBlock:]

  // instance methods
  -[PFUbiquityFilePresenter init]
  -[PFUbiquityFilePresenter dealloc]
  -[PFUbiquityFilePresenter presentedItemURL]
  -[PFUbiquityFilePresenter presentedItemOperationQueue]
  -[PFUbiquityFilePresenter presentedSubitemDidChangeAtURL:]
  -[PFUbiquityFilePresenter presentedSubitemUbiquityDidChangeAtURL:]
  -[PFUbiquityFilePresenter relinquishPresentedItemToReader:]
  -[PFUbiquityFilePresenter relinquishPresentedItemToWriter:]
  -[PFUbiquityFilePresenter copyStatusDictionary]
  -[PFUbiquityFilePresenter localPeerID]
  -[PFUbiquityFilePresenter ubiquityRootLocation]
  -[PFUbiquityFilePresenter logWasExported:]
  -[PFUbiquityFilePresenter logWasImported:]
  -[PFUbiquityFilePresenter logImportWasCancelled:]
  -[PFUbiquityFilePresenter logsWereScheduled:]
  -[PFUbiquityFilePresenter setupAssistantDiscoveredPathsFromMetadataQuery:]
  -[PFUbiquityFilePresenter printStatus:]
  -[PFUbiquityFilePresenter processPendingURLs]
  -[PFUbiquityFilePresenter isiCloudExtension:]
  -[PFUbiquityFilePresenter retainedStatusForLocation:]
  -[PFUbiquityFilePresenter initWithUbiquityRootLocation:localPeerID:storeName:processingQueue:]
  -[PFUbiquityFilePresenter exporterDidMoveLog:]
  -[PFUbiquityFilePresenter registerSafeSaveFile:]
  -[PFUbiquityFilePresenter unregisterSafeSaveFile:]
  -[PFUbiquityFilePresenter locationToStatus]
  -[PFUbiquityFilePresenter locationToSafeSaveFile]


PFUbiquityRecordImportConflict : NSObject
 @property  NSString *conflictingObjectGlobalIDStr
 @property  NSManagedObject *sourceObject
 @property  NSDictionary *conflictingLogContent
 @property  PFUbiquityKnowledgeVector *conflictingLogKnowledgeVector
 @property  PFUbiquityKnowledgeVector *currentKnowledgeVector
 @property  int conflictingLogTransactionType
 @property  NSDate *conflictLogDate
 @property  NSNumber *conflictingLogTransactionNumber
 @property  NSArray *transactionHistory
 @property  NSDictionary *globalIDIndexToLocalIDURIMap
 @property  PFUbiquityImportContext *importContext
 @property  NSDictionary *relationshipToObjectIDsToCheck

  // class methods
  +[PFUbiquityRecordImportConflict initialize]
  +[PFUbiquityRecordImportConflict resolvedTypeForConflictingLogType:andLatestTransactionEntry:skipObject:]
  +[PFUbiquityRecordImportConflict electAncestorKnowledgeVectorForKnowledgeVector:withExportingPeerID:fromPeerSnapshotCollection:]
  +[PFUbiquityRecordImportConflict createSnapshotFromManagedObject:withSourceObject:]
  +[PFUbiquityRecordImportConflict createTransactionLogForTransactionEntry:withImportContext:error:]

  // instance methods
  -[PFUbiquityRecordImportConflict init]
  -[PFUbiquityRecordImportConflict dealloc]
  -[PFUbiquityRecordImportConflict sourceObject]
  -[PFUbiquityRecordImportConflict resolveConflict:]
  -[PFUbiquityRecordImportConflict importContext]
  -[PFUbiquityRecordImportConflict setCurrentKnowledgeVector:]
  -[PFUbiquityRecordImportConflict setConflictLogDate:]
  -[PFUbiquityRecordImportConflict setSourceObject:]
  -[PFUbiquityRecordImportConflict setConflictingLogTransactionType:]
  -[PFUbiquityRecordImportConflict setConflictingLogKnowledgeVector:]
  -[PFUbiquityRecordImportConflict currentKnowledgeVector]
  -[PFUbiquityRecordImportConflict setConflictingLogTransactionNumber:]
  -[PFUbiquityRecordImportConflict setTransactionHistory:]
  -[PFUbiquityRecordImportConflict setGlobalIDIndexToLocalIDURIMap:]
  -[PFUbiquityRecordImportConflict setImportContext:]
  -[PFUbiquityRecordImportConflict createSnapshotFromLogContent:withTransactionLog:]
  -[PFUbiquityRecordImportConflict setConflictingLogContent:]
  -[PFUbiquityRecordImportConflict relationshipToObjectIDsToCheck]
  -[PFUbiquityRecordImportConflict setConflictingObjectGlobalIDStr:]
  -[PFUbiquityRecordImportConflict addObjectIDsForDiff:forRelationship:]
  -[PFUbiquityRecordImportConflict addObjectID:forRelationship:]
  -[PFUbiquityRecordImportConflict _newNormalizedSnapshot:forObject:]
  -[PFUbiquityRecordImportConflict transactionHistory]
  -[PFUbiquityRecordImportConflict createSnapshotDictionaryFromLogEntry:withError:]
  -[PFUbiquityRecordImportConflict conflictingLogKnowledgeVector]
  -[PFUbiquityRecordImportConflict resolveMergeConflictForLogContent:previousSnapshot:andAncestorSnapshot:withOldVersion:andNewVersion:error:]
  -[PFUbiquityRecordImportConflict createSnapshotFromBaselineForEntry:error:]
  -[PFUbiquityRecordImportConflict createSnapshotDictionaryForObjectWithEntry:inTransactionLog:withError:]
  -[PFUbiquityRecordImportConflict globalIDIndexToLocalIDURIMap]
  -[PFUbiquityRecordImportConflict createSetOfManagedObjectIDsForGlobalIDsInRelationship:withValue:withGlobalIDToLocalIDURIMap:andTransactionLog:]
  -[PFUbiquityRecordImportConflict conflictingObjectGlobalIDStr]
  -[PFUbiquityRecordImportConflict conflictingLogContent]
  -[PFUbiquityRecordImportConflict conflictingLogTransactionType]
  -[PFUbiquityRecordImportConflict conflictLogDate]
  -[PFUbiquityRecordImportConflict conflictingLogTransactionNumber]


PFUbiquityMergeConflict : NSMergeConflict
 @property  NSDictionary *ancestorSnapshot

  // instance methods
  -[PFUbiquityMergeConflict dealloc]
  -[PFUbiquityMergeConflict initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:]
  -[PFUbiquityMergeConflict ancestorSnapshot]
  -[PFUbiquityMergeConflict setAncestorSnapshot:]


PFUbiquityMergePolicy : NSMergePolicy
  // instance methods
  -[PFUbiquityMergePolicy mergeToManyRelationshipForSourceObject:withOldSnapshot:newSnapshot:andAncestor:andLegacyPath:]


NSCKExportedObject : NSManagedObject
 @property  NSNumber *changeTypeNum
 @property  NSNumber *typeNum
 @property  NSString *ckRecordName
 @property  NSString *zoneName
 @property  long long changeType
 @property  unsigned long type
 @property  NSCKExportOperation *operation

  // class methods
  +[NSCKExportedObject entityPath]

  // instance methods
  -[NSCKExportedObject type]
  -[NSCKExportedObject setType:]
  -[NSCKExportedObject changeType]
  -[NSCKExportedObject setChangeType:]


PFUbiquitySwitchboard : NSObject
  // class methods
  +[PFUbiquitySwitchboard initialize]
  +[PFUbiquitySwitchboard ubiquitousExternalReferenceLocationForUUID:inStore:]
  +[PFUbiquitySwitchboard sharedSwitchboard]

  // instance methods
  -[PFUbiquitySwitchboard init]
  -[PFUbiquitySwitchboard dealloc]
  -[PFUbiquitySwitchboard retainedEntryForStoreName:andLocalPeerID:]
  -[PFUbiquitySwitchboard unregisterCoordinator:]
  -[PFUbiquitySwitchboard unregisterPersistentStore:inCoordinator:]
  -[PFUbiquitySwitchboard createSetOfCoordinatorsForPersistentStoreName:andLocalPeerID:atUbiquityRootLocation:]
  -[PFUbiquitySwitchboard coordinatorWillRemoveStore:]
  -[PFUbiquitySwitchboard filePresenterForUbiquityRootLocation:andLocalPeerID:]
  -[PFUbiquitySwitchboard _removeFilePresenter:]
  -[PFUbiquitySwitchboard addEntryToPreviousEntries:]
  -[PFUbiquitySwitchboard entryForStore:]
  -[PFUbiquitySwitchboard cacheFilePresenterForUbiquityRootLocation:andLocalPeerID:]
  -[PFUbiquitySwitchboard removeFilePresenterCachedForUbiquityRootLocation:andLocalPeerID:]
  -[PFUbiquitySwitchboard _addFilePresenter:]
  -[PFUbiquitySwitchboard registerUbiquitizedPersistentStore:withURL:forLocalPeerID:withLocalRootLocation:andUbiquityRootLocation:error:]
  -[PFUbiquitySwitchboard _quietlyMoveEntryToPreviousEntries:]
  -[PFUbiquitySwitchboard removeEntryFromPreviousEntries:]
  -[PFUbiquitySwitchboard releaseAllEntriesForStoreName:andPeerID:]


NSGenerationalRowCache : NSObject
  // instance methods
  -[NSGenerationalRowCache dealloc]
  -[NSGenerationalRowCache initWithStore:]
  -[NSGenerationalRowCache removeRowCacheForGenerationWithIdentifier:]
  -[NSGenerationalRowCache rowCacheForGeneration:]
  -[NSGenerationalRowCache forgetAllExternalData]
  -[NSGenerationalRowCache removeRowCacheForGeneration:]


NSSQLIndex : NSObject
 @property  NSFetchIndexDescription *indexDescription
 @property  NSSQLEntity *sqlEntity
 @property  NSMutableArray *createTableStatements
 @property  NSMutableArray *dropTableStatements
 @property  NSMutableArray *updateTableStatements

  // instance methods
  -[NSSQLIndex dealloc]
  -[NSSQLIndex isEqual:]
  -[NSSQLIndex sqlEntity]
  -[NSSQLIndex initForIndexDescription:sqlEntity:]
  -[NSSQLIndex indexDescription]
  -[NSSQLIndex setCreateTableStatements:]
  -[NSSQLIndex setDropTableStatements:]
  -[NSSQLIndex setUpdateTableStatements:]
  -[NSSQLIndex createTableStatements]
  -[NSSQLIndex dropTableStatements]
  -[NSSQLIndex updateTableStatements]
  -[NSSQLIndex generateStatementsForStore:]
  -[NSSQLIndex dropStatementsForStore:]
  -[NSSQLIndex bulkUpdateStatementsForStore:]
  -[NSSQLIndex isUnique]


PFUbiquitySwitchboardEntry : NSObject
 @property  unsigned long activeStoreCount
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  PFUbiquityLocation *localRootLocation
 @property  PFUbiquityFilePresenter *filePresenter
 @property  PFUbiquityFilePresenter *localFilePresenter
 @property  PFUbiquityContainerMonitor *monitor
 @property  PFUbiquitySetupAssistant *finishingSetupAssistant
 @property  PFUbiquitySwitchboardEntryMetadata *metadata

  // instance methods
  -[PFUbiquitySwitchboardEntry init]
  -[PFUbiquitySwitchboardEntry dealloc]
  -[PFUbiquitySwitchboardEntry monitor]
  -[PFUbiquitySwitchboardEntry setMetadata:]
  -[PFUbiquitySwitchboardEntry metadata]
  -[PFUbiquitySwitchboardEntry filePresenter]
  -[PFUbiquitySwitchboardEntry localPeerID]
  -[PFUbiquitySwitchboardEntry storeName]
  -[PFUbiquitySwitchboardEntry ubiquityRootLocation]
  -[PFUbiquitySwitchboardEntry unregisterPersistentStore:inCoordinator:]
  -[PFUbiquitySwitchboardEntry cacheWrapperForStoreName:]
  -[PFUbiquitySwitchboardEntry metaForStoreName:]
  -[PFUbiquitySwitchboardEntry setUbiquityRootLocation:]
  -[PFUbiquitySwitchboardEntry localRootLocation]
  -[PFUbiquitySwitchboardEntry executeBlockOnPrivateQueue:]
  -[PFUbiquitySwitchboardEntry createSetOfActiveStoreNames]
  -[PFUbiquitySwitchboardEntry createSetOfPersistentStoreCoordinatorsRegisteredForStoreName:]
  -[PFUbiquitySwitchboardEntry localFilePresenter]
  -[PFUbiquitySwitchboardEntry initWithLocalPeerID:storeName:withURL:ubiquityRootLocation:andLocalRootLocation:]
  -[PFUbiquitySwitchboardEntry registerPersistentStore:withStoreName:]
  -[PFUbiquitySwitchboardEntry unregisterPersistentStoreCoordinator:]
  -[PFUbiquitySwitchboardEntry activeStoreCount]
  -[PFUbiquitySwitchboardEntry entryWillBeRemovedFromSwitchboard]
  -[PFUbiquitySwitchboardEntry filePresenterWasNotifiedTransactionLogs:]
  -[PFUbiquitySwitchboardEntry filePresenterNoticedBaselineFileChange:]
  -[PFUbiquitySwitchboardEntry containerIdentifierChanged:]
  -[PFUbiquitySwitchboardEntry setupFinished]
  -[PFUbiquitySwitchboardEntry synchronouslyExecuteBlockOnPrivateQueue:]
  -[PFUbiquitySwitchboardEntry containerStateChanged:]
  -[PFUbiquitySwitchboardEntry monitorStateChanged:]
  -[PFUbiquitySwitchboardEntry finishSetupForStore:withSetupAssistant:synchronously:error:finishBlock:]
  -[PFUbiquitySwitchboardEntry afterDelay:executeBlockOnPrivateQueue:]
  -[PFUbiquitySwitchboardEntry afterDelay:executeBlockOnGlobalConcurrentQueue:]
  -[PFUbiquitySwitchboardEntry setActiveStoreCount:]
  -[PFUbiquitySwitchboardEntry finishingSetupAssistant]


PFUbiquitySwitchboardEntryMetadata : NSObject
 @property  PFUbiquitySwitchboardCacheWrapper *cacheWrapper
 @property  _PFUbiquityRecordsImporter *importer
 @property  _PFUbiquityRecordsExporter *exporter
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSSet *stores
 @property  NSString *activeModelVersionHash
 @property  NSPersistentStoreCoordinator *privatePSC
 @property  NSSQLCore *privateStore
 @property  PFUbiquityRecordsImporterSchedulingContext *schedulingContext
 @property  BOOL useLocalStorage
 @property  BOOL useLocalAccount
 @property  PFUbiquityBaselineHeuristics *baselineHeuristics

  // instance methods
  -[PFUbiquitySwitchboardEntryMetadata dealloc]
  -[PFUbiquitySwitchboardEntryMetadata stores]
  -[PFUbiquitySwitchboardEntryMetadata privateStore]
  -[PFUbiquitySwitchboardEntryMetadata ubiquityRootLocation]
  -[PFUbiquitySwitchboardEntryMetadata tearDown]
  -[PFUbiquitySwitchboardEntryMetadata cacheWrapper]
  -[PFUbiquitySwitchboardEntryMetadata baselineHeuristics]
  -[PFUbiquitySwitchboardEntryMetadata setCacheWrapper:]
  -[PFUbiquitySwitchboardEntryMetadata importer]
  -[PFUbiquitySwitchboardEntryMetadata setUseLocalStorage:]
  -[PFUbiquitySwitchboardEntryMetadata setUbiquityRootLocation:]
  -[PFUbiquitySwitchboardEntryMetadata useLocalStorage]
  -[PFUbiquitySwitchboardEntryMetadata schedulingContext]
  -[PFUbiquitySwitchboardEntryMetadata privatePSC]
  -[PFUbiquitySwitchboardEntryMetadata initWithLocalPeerID:ubiquityRootLocation:localRootLocation:storeName:andPrivateQueue:]
  -[PFUbiquitySwitchboardEntryMetadata addPersistentStore:]
  -[PFUbiquitySwitchboardEntryMetadata removePersistentStore:]
  -[PFUbiquitySwitchboardEntryMetadata exporter]
  -[PFUbiquitySwitchboardEntryMetadata setUseLocalAccount:]
  -[PFUbiquitySwitchboardEntryMetadata activeModelVersionHash]
  -[PFUbiquitySwitchboardEntryMetadata useLocalAccount]


PFUbiquityFileCoordinator : NSFileCoordinator /usr/lib/libcompression.dylib
 @property  NSString *localPeerID

  // class methods
  +[PFUbiquityFileCoordinator newFileCoordinatorForUbiquitousExternalDataReferenceLocation:]
  +[PFUbiquityFileCoordinator newFileCoordinatorForUbiquityRootLocation:andLocalPeerID:]
  +[PFUbiquityFileCoordinator newFileCoordinatorForUbiquityRootLocation:]

  // instance methods
  -[PFUbiquityFileCoordinator dealloc]
  -[PFUbiquityFileCoordinator initWithFilePresenter:]
  -[PFUbiquityFileCoordinator localPeerID]
  -[PFUbiquityFileCoordinator coordinateReadingItemAtLocation:options:retryOnError:error:byAccessor:]
  -[PFUbiquityFileCoordinator shouldRetryForError:ignoreFile:]


NSSQLCorrelationTableUpdateTracker : NSObject
 @property  NSSQLManyToMany *relationship

  // instance methods
  -[NSSQLCorrelationTableUpdateTracker dealloc]
  -[NSSQLCorrelationTableUpdateTracker hasInserts]
  -[NSSQLCorrelationTableUpdateTracker relationship]
  -[NSSQLCorrelationTableUpdateTracker enumerateInsertsUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker hasDeletes]
  -[NSSQLCorrelationTableUpdateTracker enumerateDeletesUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker hasMasterReorders]
  -[NSSQLCorrelationTableUpdateTracker enumerateMasterReordersUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker enumerateMasterReordersPart2UsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker hasReorders]
  -[NSSQLCorrelationTableUpdateTracker enumerateReordersUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker enumerateInsertsOIDsUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker enumerateReordersOIDsUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker enumerateMasterReordersOIDsUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker enumerateDeletesOIDsUsingBlock:]
  -[NSSQLCorrelationTableUpdateTracker _organizeValues:]
  -[NSSQLCorrelationTableUpdateTracker initForRelationship:]
  -[NSSQLCorrelationTableUpdateTracker trackInserts:deletes:reorders:forObjectWithID:]
  -[NSSQLCorrelationTableUpdateTracker trackReorders:forObjectWithID:]


NSCloudKitMirroringDelegateSerializationRequest : NSCloudKitMirroringRequest
 @property  unsigned long resultType
 @property  NSSet *objectIDsToSerialize

  // class methods
  +[NSCloudKitMirroringDelegateSerializationRequest stringForResultType:]

  // instance methods
  -[NSCloudKitMirroringDelegateSerializationRequest dealloc]
  -[NSCloudKitMirroringDelegateSerializationRequest copyWithZone:]
  -[NSCloudKitMirroringDelegateSerializationRequest resultType]
  -[NSCloudKitMirroringDelegateSerializationRequest setResultType:]
  -[NSCloudKitMirroringDelegateSerializationRequest initWithOptions:completionBlock:]
  -[NSCloudKitMirroringDelegateSerializationRequest setObjectIDsToSerialize:]
  -[NSCloudKitMirroringDelegateSerializationRequest objectIDsToSerialize]


NSSQLPersistentHistoryChangeRequestContext : NSSQLStoreRequestContext
 @property  NSPersistentHistoryChangeRequest *request
 @property  BOOL shouldUseBatches

  // instance methods
  -[NSSQLPersistentHistoryChangeRequestContext dealloc]
  -[NSSQLPersistentHistoryChangeRequestContext request]
  -[NSSQLPersistentHistoryChangeRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLPersistentHistoryChangeRequestContext isWritingRequest]
  -[NSSQLPersistentHistoryChangeRequestContext executePrologue]
  -[NSSQLPersistentHistoryChangeRequestContext executeRequestUsingConnection:]
  -[NSSQLPersistentHistoryChangeRequestContext fetchRequestDescribingChanges]
  -[NSSQLPersistentHistoryChangeRequestContext shouldUseBatches]
  -[NSSQLPersistentHistoryChangeRequestContext _transactionFromResult:withChanges:]
  -[NSSQLPersistentHistoryChangeRequestContext _changeFromResult:withTransaction:]
  -[NSSQLPersistentHistoryChangeRequestContext _processResult:]
  -[NSSQLPersistentHistoryChangeRequestContext createCountRequestContextForChanges]
  -[NSSQLPersistentHistoryChangeRequestContext fetchRequestContextForChanges]
  -[NSSQLPersistentHistoryChangeRequestContext createRequestContextForChangesWithTransactionIDs:]
  -[NSSQLPersistentHistoryChangeRequestContext createDeleteTransactionsRequestContext]


PFUbiquityBaseline : PFUbiquitySafeSaveFile
 @property  PFUbiquityLocation *baselineArchiveLocation
 @property  PFUbiquityLocation *baselineStagingLocation
 @property  PFUbiquityLocation *baselinePeerArchiveLocation
 @property  PFUbiquityBaselineMetadata *metadata
 @property  NSDictionary *storeFilenameToData
 @property  NSString *storeFilename
 @property  NSString *storeName
 @property  NSString *modelVersionHash
 @property  _PFZipFileArchive *baselineArchive
 @property  NSPersistentStore *store

  // class methods
  +[PFUbiquityBaseline checkPeerReceiptsUnderRootLocation:forAgreementWithLocalPeerID:storeName:modelVersionHash:error:]
  +[PFUbiquityBaseline createArchiveWithModel:metadata:storeFilenameToData:storeFilename:error:]
  +[PFUbiquityBaseline metadataFromBaselineArchive:]
  +[PFUbiquityBaseline metadataFromCurrentBaselineForStoreWithName:peerID:modelVersionHash:andUbiquityRootLocation:withError:]
  +[PFUbiquityBaseline isPeerReceiptTooOld:]
  +[PFUbiquityBaseline createModelFromBaselineModelWithModelVersionHash:peerID:storeName:andUbiquityRootLocation:]
  +[PFUbiquityBaseline createBaselineOptimizedModelForStoreName:peerID:modelVersionHash:andUbiquityRootLocation:]
  +[PFUbiquityBaseline createBaselineGCModelForStoreName:peerID:modelVersionHash:andUbiquityRootLocation:]
  +[PFUbiquityBaseline removePeerSpecificIdentifiersFromStore:withLocalPeerID:]
  +[PFUbiquityBaseline createStringOfContentsOfBaselineFile:]

  // instance methods
  -[PFUbiquityBaseline init]
  -[PFUbiquityBaseline dealloc]
  -[PFUbiquityBaseline store]
  -[PFUbiquityBaseline setMetadata:]
  -[PFUbiquityBaseline metadata]
  -[PFUbiquityBaseline modelVersionHash]
  -[PFUbiquityBaseline storeName]
  -[PFUbiquityBaseline initWithBaselineLocation:andLocalPeerID:]
  -[PFUbiquityBaseline createPersistentStoreCoordinatorForCurrentBaseline:]
  -[PFUbiquityBaseline baselineArchiveLocation]
  -[PFUbiquityBaseline baselineStagingLocation]
  -[PFUbiquityBaseline clearOutStagingLocationWithError:]
  -[PFUbiquityBaseline storeFilenameToData]
  -[PFUbiquityBaseline storeFilename]
  -[PFUbiquityBaseline constructBaselineArchive:]
  -[PFUbiquityBaseline baselinePeerArchiveLocation]
  -[PFUbiquityBaseline unpackStoreFilesToStagingLocation:]
  -[PFUbiquityBaseline haveTransactionLogsForPeer:between:and:]
  -[PFUbiquityBaseline makeCurrentBaselineWithError:]
  -[PFUbiquityBaseline replaceLocalPersistentStoreAtURL:ofType:withOptions:usingPersistentStoreCoordinator:error:]
  -[PFUbiquityBaseline _createPersistentStoreCoordinatorForCurrentBaseline:error:]
  -[PFUbiquityBaseline optimizedModelData]
  -[PFUbiquityBaseline gcModelData]
  -[PFUbiquityBaseline moveToPermanentLocation:]
  -[PFUbiquityBaseline createManagedObjectModelFromCurrentBaseline]
  -[PFUbiquityBaseline baselineArchive]
  -[PFUbiquityBaseline createSetOfInUseExternalDataRefUUIDs:]
  -[PFUbiquityBaseline initWithLocalPeerID:ubiquityRootLocation:forStoreWithName:andManagedObjectModel:]
  -[PFUbiquityBaseline prepareForBaselineRollOfPersistentStore:andLocalPeerID:error:]
  -[PFUbiquityBaseline gatherContentsFromMigratedBaseline:withStoreFileURL:error:]
  -[PFUbiquityBaseline gatherContentsAndConstructArchiveWithError:]
  -[PFUbiquityBaseline loadFileFromLocation:error:]
  -[PFUbiquityBaseline canReplaceStoreAtKnowledgeVector:]
  -[PFUbiquityBaseline isUploaded:]
  -[PFUbiquityBaseline metadataMatchesCurrentMetadata:]
  -[PFUbiquityBaseline importBaselineForStoreAtURL:ofType:options:withLocalPeerID:stack:andPersistentStoreCoordinator:error:]
  -[PFUbiquityBaseline updateCurrentStoreIdentifier:error:]
  -[PFUbiquityBaseline writeFileToLocation:error:]
  -[PFUbiquityBaseline baselineMetadataData]
  -[PFUbiquityBaseline storeData]
  -[PFUbiquityBaseline createManagedObjectModel]
  -[PFUbiquityBaseline removeUnusedExternalDataReferences:]


_PFPersistentHistoryModel : NSObject <_PFAncillaryModelFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_PFPersistentHistoryModel ancillaryModelNamespace]
  +[_PFPersistentHistoryModel ancillaryEntityOffset]
  +[_PFPersistentHistoryModel ancillaryEntityCount]
  +[_PFPersistentHistoryModel _tombstonesForEntity:]
  +[_PFPersistentHistoryModel resetCaches]
  +[_PFPersistentHistoryModel _hasTombstonesInUserInfo:]
  +[_PFPersistentHistoryModel newPersistentHistoryManagedObjectModelForSQLModel:options:]
  +[_PFPersistentHistoryModel newPersistentHistorySQLModelForSQLModel:options:]
  +[_PFPersistentHistoryModel _maxCountOfTombstonesInModel:]
  +[_PFPersistentHistoryModel _tombstonesColumnsForEntity:]
  +[_PFPersistentHistoryModel _entitiesWithTooManyTombstonesInModel:]
  +[_PFPersistentHistoryModel createModelsWithTombstoneCount:andOptions:]


_PFPersistentHistoryFetchModel : NSObject <_PFAncillaryModelFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_PFPersistentHistoryFetchModel newFetchHistoryModelForCoordinator:andOptions:]
  +[_PFPersistentHistoryFetchModel ancillaryModelNamespace]
  +[_PFPersistentHistoryFetchModel ancillaryEntityOffset]
  +[_PFPersistentHistoryFetchModel ancillaryEntityCount]


NSSQLCoreDispatchManager : NSObject
  // instance methods
  -[NSSQLCoreDispatchManager dealloc]
  -[NSSQLCoreDispatchManager disconnectAllConnections]
  -[NSSQLCoreDispatchManager initWithSQLCore:seedConnection:]
  -[NSSQLCoreDispatchManager setExclusiveLockingMode:]
  -[NSSQLCoreDispatchManager scheduleBarrierBlock:]
  -[NSSQLCoreDispatchManager routeStoreRequest:]


PFUbiquityBaselineMetadata : NSObject <NSCoding, NSSecureCoding>
 @property  NSString *storeName
 @property  NSString *authorPeerID
 @property  NSString *modelVersionHash
 @property  PFUbiquityLocation *rootLocation
 @property  PFUbiquityKnowledgeVector *previousKnowledgeVector
 @property  PFUbiquityKnowledgeVector *knowledgeVector
 @property  NSDictionary *peerRanges

  // class methods
  +[PFUbiquityBaselineMetadata supportsSecureCoding]

  // instance methods
  -[PFUbiquityBaselineMetadata init]
  -[PFUbiquityBaselineMetadata dealloc]
  -[PFUbiquityBaselineMetadata isEqual:]
  -[PFUbiquityBaselineMetadata encodeWithCoder:]
  -[PFUbiquityBaselineMetadata initWithCoder:]
  -[PFUbiquityBaselineMetadata initWithLocalPeerID:storeName:modelVersionHash:andUbiquityRootLocation:]
  -[PFUbiquityBaselineMetadata modelVersionHash]
  -[PFUbiquityBaselineMetadata storeName]
  -[PFUbiquityBaselineMetadata knowledgeVector]
  -[PFUbiquityBaselineMetadata setKnowledgeVector:]
  -[PFUbiquityBaselineMetadata peerRanges]
  -[PFUbiquityBaselineMetadata gatherMetadataWithStore:andError:]
  -[PFUbiquityBaselineMetadata authorPeerID]
  -[PFUbiquityBaselineMetadata previousKnowledgeVector]
  -[PFUbiquityBaselineMetadata createNewLocalRangeWithRangeStart:andRangeEnd:forEntityNamed:]
  -[PFUbiquityBaselineMetadata addDictionaryForPeerRange:]
  -[PFUbiquityBaselineMetadata createPeerRangeDictionary:]
  -[PFUbiquityBaselineMetadata setPreviousKnowledgeVectorFromCurrentMetadata:]
  -[PFUbiquityBaselineMetadata _migrateToModelVersionHash:]
  -[PFUbiquityBaselineMetadata rootLocation]


NSSQLCountRequestContext : NSSQLFetchRequestContext
  // instance methods
  -[NSSQLCountRequestContext executeRequestCore:]
  -[NSSQLCountRequestContext _createStatement]


NSSQLVariableExpressionIntermediate : NSSQLExpressionIntermediate
  // instance methods
  -[NSSQLVariableExpressionIntermediate generateSQLStringInContext:]


PFUbiquityExportContext : NSObject
 @property  NSString *localPeerID
 @property  BOOL useLocalStorage

  // instance methods
  -[PFUbiquityExportContext dealloc]
  -[PFUbiquityExportContext localPeerID]
  -[PFUbiquityExportContext initWithLocalPeerID:andUbiquityRootLocation:]
  -[PFUbiquityExportContext setUseLocalStorage:]
  -[PFUbiquityExportContext storeExportContextForStoreName:]
  -[PFUbiquityExportContext storeExportContextForStore:]
  -[PFUbiquityExportContext useLocalStorage]


PFUbiquityStoreExportContext : NSObject
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  NSSet *transactionEntries
 @property  NSSQLCore *store
 @property  PFUbiquitySwitchboardCacheWrapper *cacheWrapper

  // instance methods
  -[PFUbiquityStoreExportContext dealloc]
  -[PFUbiquityStoreExportContext store]
  -[PFUbiquityStoreExportContext setStore:]
  -[PFUbiquityStoreExportContext localPeerID]
  -[PFUbiquityStoreExportContext storeName]
  -[PFUbiquityStoreExportContext ubiquityRootLocation]
  -[PFUbiquityStoreExportContext cacheWrapper]
  -[PFUbiquityStoreExportContext setCacheWrapper:]
  -[PFUbiquityStoreExportContext transactionEntries]
  -[PFUbiquityStoreExportContext initWithStoreName:andUbiquityRootLocation:forLocalPeerID:]
  -[PFUbiquityStoreExportContext addTransactionEntryForGlobalID:andTransactionType:]


PFUbiquityGlobalObjectID : NSObject <NSCopying>
 @property  NSString *storeName
 @property  NSString *entityName
 @property  NSString *primaryKey
 @property  NSString *owningPeerID
 @property  unsigned long hash
 @property  NSManagedObjectID *managedObjectID
 @property  unsigned long primaryKeyInteger

  // instance methods
  -[PFUbiquityGlobalObjectID init]
  -[PFUbiquityGlobalObjectID dealloc]
  -[PFUbiquityGlobalObjectID isEqual:]
  -[PFUbiquityGlobalObjectID copyWithZone:]
  -[PFUbiquityGlobalObjectID compare:]
  -[PFUbiquityGlobalObjectID initWithString:]
  -[PFUbiquityGlobalObjectID entityName]
  -[PFUbiquityGlobalObjectID primaryKey]
  -[PFUbiquityGlobalObjectID storeName]
  -[PFUbiquityGlobalObjectID owningPeerID]
  -[PFUbiquityGlobalObjectID managedObjectID]
  -[PFUbiquityGlobalObjectID setManagedObjectID:]
  -[PFUbiquityGlobalObjectID createGlobalIDString]
  -[PFUbiquityGlobalObjectID updateHash]
  -[PFUbiquityGlobalObjectID initFromCopyWithStoreName:entityName:primaryKey:peerID:andHash:managedObjectID:primaryKeyInteger:]
  -[PFUbiquityGlobalObjectID primaryKeyInteger]
  -[PFUbiquityGlobalObjectID initWithStoreName:entityName:primaryKeyInteger:andPeerID:]
  -[PFUbiquityGlobalObjectID initWithStoreName:entityName:primaryKey:andPeerID:]
  -[PFUbiquityGlobalObjectID initWithCompressedString:forStoreWithName:andEntityNames:primaryKeys:peerIDs:]
  -[PFUbiquityGlobalObjectID createCompressedStringWithEntityNameToIndex:primaryKeyToIndex:peerIDToIndex:]


NSSQLAttributeExtensionFactory : NSObject
  // class methods
  +[NSSQLAttributeExtensionFactory newExtensionsForAttribute:error:]
  +[NSSQLAttributeExtensionFactory createUnvalidatedTriggerForString:onAttribute:]


PFUbiquitySaveSnapshot : NSObject
 @property  NSDate *transactionDate
 @property  NSString *modelVersionHash
 @property  NSString *exportingPeerID
 @property  NSArray *storeNames
 @property  NSString *localPeerID

  // instance methods
  -[PFUbiquitySaveSnapshot dealloc]
  -[PFUbiquitySaveSnapshot modelVersionHash]
  -[PFUbiquitySaveSnapshot localPeerID]
  -[PFUbiquitySaveSnapshot exportingPeerID]
  -[PFUbiquitySaveSnapshot storeSaveSnapshotForStoreName:]
  -[PFUbiquitySaveSnapshot transactionDate]
  -[PFUbiquitySaveSnapshot setTransactionDate:]
  -[PFUbiquitySaveSnapshot initWithSaveNotification:withLocalPeerID:]
  -[PFUbiquitySaveSnapshot storeNames]
  -[PFUbiquitySaveSnapshot storeSaveSnapshotForStore:]
  -[PFUbiquitySaveSnapshot initWithTransactionLog:]


NSSQLSavePlan : NSObject
 @property  NSSaveChangesRequest *saveRequest
 @property  NSManagedObjectContext *savingContext
 @property  int transactionInMemorySequence
 @property  <_NSCoreDataCollectionWithoutKeys> *externalDataReferencesToSave
 @property  <_NSCoreDataCollectionWithoutKeys> *externalDataReferencesToDelete
 @property  <_NSCoreDataCollectionWithoutKeys> *fileBackedFuturesToCopy
 @property  <_NSCoreDataCollectionWithoutKeys> *fileBackedFuturesToDelete

  // instance methods
  -[NSSQLSavePlan dealloc]
  -[NSSQLSavePlan entityForEntityDescription:]
  -[NSSQLSavePlan externalDataReferencesToDelete]
  -[NSSQLSavePlan fileBackedFuturesToDelete]
  -[NSSQLSavePlan setTransactionInMemorySequence:]
  -[NSSQLSavePlan hasChangesForWriting]
  -[NSSQLSavePlan transactionInMemorySequence]
  -[NSSQLSavePlan newRowsToAddToRowCache]
  -[NSSQLSavePlan newPrimaryRowsUpdatedForRowCache]
  -[NSSQLSavePlan newRowsToRemoveFromRowCache]
  -[NSSQLSavePlan newCorrelationTableUpdates]
  -[NSSQLSavePlan toManyRelationshipChanges]
  -[NSSQLSavePlan _knownPrimaryKeyForObjectID:]
  -[NSSQLSavePlan _knownEntityKeyForObjectID:]
  -[NSSQLSavePlan _populateOrderKeysInOrderedSet:usingSourceObjectID:inverseRelationship:newIndexes:reorderedIndexes:]
  -[NSSQLSavePlan _orderKeyForObject:fromSourceObjectID:inverseRelationship:inOrderedSet:]
  -[NSSQLSavePlan _registerChangedFOKs:deletions:forSourceObject:andRelationship:]
  -[NSSQLSavePlan _newRowCacheRowForToManyUpdatesForRelationship:rowCacheOriginal:originalOrderKeys:originalSnapshot:value:added:deleted:sourceRowPK:properties:sourceObject:newIndexes:reorderedIndexes:]
  -[NSSQLSavePlan _findOrCreateChangeSnapshotForGlobalID:]
  -[NSSQLSavePlan _correlationTableUpdateTrackerForRelationship:]
  -[NSSQLSavePlan _knownPrimaryKeyForObject:]
  -[NSSQLSavePlan _knownEntityKeyForObject:]
  -[NSSQLSavePlan _knownOrderKeyForObject:from:inverseToMany:]
  -[NSSQLSavePlan _addFileBackedFutureToDelete:]
  -[NSSQLSavePlan _addExternalReferenceDataToDelete:]
  -[NSSQLSavePlan _addFileBackedFutureToCopy:]
  -[NSSQLSavePlan _addExternalReferenceDataToSave:]
  -[NSSQLSavePlan _recordToManyChangesForObject:inRow:usingTimestamp:inserted:]
  -[NSSQLSavePlan _entityForObject:]
  -[NSSQLSavePlan _prepareForDeletionOfDatabaseExternalPropertiesForObject:]
  -[NSSQLSavePlan _populateRow:fromObject:timestamp:inserted:]
  -[NSSQLSavePlan _prepareForDeletionOfExternalDataReferencesForObject:]
  -[NSSQLSavePlan _prepareForDeletionOfFileBackedFuturesForObject:]
  -[NSSQLSavePlan _createCorrelationTrackerUpdatesForDeletedObject:]
  -[NSSQLSavePlan _createRowsForSave]
  -[NSSQLSavePlan _computeUpdatedRowSplit]
  -[NSSQLSavePlan prepareRows]
  -[NSSQLSavePlan initForRequestContext:]
  -[NSSQLSavePlan saveRequest]
  -[NSSQLSavePlan savingContext]
  -[NSSQLSavePlan newObjectsForFastLockConflictDetection]
  -[NSSQLSavePlan newObjectsForExhaustiveLockConflictDetection]
  -[NSSQLSavePlan newObjectsForUniquenessConflictDetectionGivenReportedFailures:]
  -[NSSQLSavePlan newAncillaryRowsUpdatedForRowCache]
  -[NSSQLSavePlan foreignOrderKeysBeingUpdated]
  -[NSSQLSavePlan foreignOrderKeysBeingDeleted]
  -[NSSQLSavePlan externalDataReferencesToSave]
  -[NSSQLSavePlan fileBackedFuturesToCopy]


PFCloudKitExportContext : NSObject
 @property  NSArray *writtenAssetURLs
 @property  unsigned long totalBytes
 @property  unsigned long totalRecords
 @property  unsigned long totalRecordIDs

  // instance methods
  -[PFCloudKitExportContext dealloc]
  -[PFCloudKitExportContext initWithOptions:]
  -[PFCloudKitExportContext processAnalyzedHistoryInStore:inManagedObjectContext:error:]
  -[PFCloudKitExportContext checkForObjectsNeedingExportInStore:andReturnCount:withManagedObjectContext:error:]
  -[PFCloudKitExportContext newOperationBySerializingDirtyObjectsInStore:inManagedObjectContext:error:]
  -[PFCloudKitExportContext modifyRecordsOperationFinishedForStore:withSavedRecords:deletedRecordIDs:operationError:managedObjectContext:error:]
  -[PFCloudKitExportContext writtenAssetURLs]
  -[PFCloudKitExportContext totalBytes]
  -[PFCloudKitExportContext currentBatchExceedsThresholds:]
  -[PFCloudKitExportContext totalRecords]
  -[PFCloudKitExportContext totalRecordIDs]


PFUbiquityStoreSaveSnapshot : NSObject
 @property  NSArray *entityNames
 @property  NSArray *peerIDs
 @property  NSArray *globalObjectIDs
 @property  NSArray *primaryKeys
 @property  NSDictionary *insertedObjects
 @property  NSDictionary *updatedObjects
 @property  NSDictionary *deletedObjects
 @property  NSDictionary *peerStates
 @property  NSNumber *transactionNumber
 @property  NSString *exportingPeerID
 @property  NSString *localPeerID
 @property  PFUbiquityKnowledgeVector *storeKV
 @property  NSDictionary *globalObjectIDToPermanentManagedObjectID
 @property  NSDictionary *managedObjectIDToGlobalObjectID
 @property  NSDictionary *entityNameToIndex
 @property  NSDictionary *peerIDToIndex
 @property  NSDictionary *primaryKeyToIndex
 @property  NSDictionary *globalObjectIDToIndex
 @property  PFUbiquityGlobalObjectIDCache *globalObjectIDCache

  // instance methods
  -[PFUbiquityStoreSaveSnapshot init]
  -[PFUbiquityStoreSaveSnapshot dealloc]
  -[PFUbiquityStoreSaveSnapshot insertedObjects]
  -[PFUbiquityStoreSaveSnapshot transactionNumber]
  -[PFUbiquityStoreSaveSnapshot updatedObjects]
  -[PFUbiquityStoreSaveSnapshot deletedObjects]
  -[PFUbiquityStoreSaveSnapshot primaryKeys]
  -[PFUbiquityStoreSaveSnapshot localPeerID]
  -[PFUbiquityStoreSaveSnapshot setDeletedObjects:]
  -[PFUbiquityStoreSaveSnapshot exportingPeerID]
  -[PFUbiquityStoreSaveSnapshot setExportingPeerID:]
  -[PFUbiquityStoreSaveSnapshot setTransactionNumber:]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDFromCompressedObjectID:]
  -[PFUbiquityStoreSaveSnapshot createKnowledgeVectorFromPeerStates]
  -[PFUbiquityStoreSaveSnapshot _setFilesDeletedInTransaction:]
  -[PFUbiquityStoreSaveSnapshot reserveTransactionNumberWithStoreExportContext:]
  -[PFUbiquityStoreSaveSnapshot generatePeerStates]
  -[PFUbiquityStoreSaveSnapshot resetFromOptimisticLockingException]
  -[PFUbiquityStoreSaveSnapshot addManagedObject:withTransactionType:andStoreExportContext:withError:]
  -[PFUbiquityStoreSaveSnapshot filesInsertedInTransaction]
  -[PFUbiquityStoreSaveSnapshot peerStates]
  -[PFUbiquityStoreSaveSnapshot compressedGlobalObjectIDFromGlobalObjectID:]
  -[PFUbiquityStoreSaveSnapshot storeKV]
  -[PFUbiquityStoreSaveSnapshot initWithExportingPeerID:]
  -[PFUbiquityStoreSaveSnapshot setLocalPeerID:]
  -[PFUbiquityStoreSaveSnapshot initForExport:]
  -[PFUbiquityStoreSaveSnapshot entityNames]
  -[PFUbiquityStoreSaveSnapshot peerIDs]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDs]
  -[PFUbiquityStoreSaveSnapshot managedObjectIDToGlobalObjectID]
  -[PFUbiquityStoreSaveSnapshot entityNameToIndex]
  -[PFUbiquityStoreSaveSnapshot peerIDToIndex]
  -[PFUbiquityStoreSaveSnapshot primaryKeyToIndex]
  -[PFUbiquityStoreSaveSnapshot checkIndecies:]
  -[PFUbiquityStoreSaveSnapshot noSyncCheckIndex:forValue:fromArrayOfValues:]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDForManagedObject:withStoreExportContext:]
  -[PFUbiquityStoreSaveSnapshot createUbiquityDictionary:withStoreExportContext:error:]
  -[PFUbiquityStoreSaveSnapshot checkIndex:forValue:fromArrayOfValues:]
  -[PFUbiquityStoreSaveSnapshot transactionNumberFromPeerStates:]
  -[PFUbiquityStoreSaveSnapshot filesDeletedInTransaction]
  -[PFUbiquityStoreSaveSnapshot setTransactionNumber:peerStates:andPeerIDs:]
  -[PFUbiquityStoreSaveSnapshot setEntityNames:globalObjectIDs:primaryKeys:forStoreName:withRootLocation:]
  -[PFUbiquityStoreSaveSnapshot setInsertedObjects:]
  -[PFUbiquityStoreSaveSnapshot setUpdatedObjects:]
  -[PFUbiquityStoreSaveSnapshot prepareForGlobalIDReplacement]
  -[PFUbiquityStoreSaveSnapshot replaceGlobalObjectID:withGlobalObjectID:]
  -[PFUbiquityStoreSaveSnapshot finishGlobalIDReplacement]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDToIndex]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDToPermanentManagedObjectID]
  -[PFUbiquityStoreSaveSnapshot setStoreKV:]
  -[PFUbiquityStoreSaveSnapshot globalObjectIDCache]
  -[PFUbiquityStoreSaveSnapshot setGlobalObjectIDCache:]


NSPersistentCloudKitContainerOptions : NSObject
 @property  BOOL useEncryptedStorage
 @property  NSString *apsConnectionMachServiceName
 @property  NSString *containerIdentifier

  // instance methods
  -[NSPersistentCloudKitContainerOptions dealloc]
  -[NSPersistentCloudKitContainerOptions containerIdentifier]
  -[NSPersistentCloudKitContainerOptions setUseEncryptedStorage:]
  -[NSPersistentCloudKitContainerOptions useEncryptedStorage]
  -[NSPersistentCloudKitContainerOptions initWithContainerIdentifier:]
  -[NSPersistentCloudKitContainerOptions apsConnectionMachServiceName]
  -[NSPersistentCloudKitContainerOptions setApsConnectionMachServiceName:]


PFCloudKitStoreComparer : NSObject
 @property  BOOL checkCloudKitMetadata
 @property  PFCloudKitStoreComparisonCache *cache

  // class methods
  +[PFCloudKitStoreComparer trimExcessiveValuesForLog:]

  // instance methods
  -[PFCloudKitStoreComparer init]
  -[PFCloudKitStoreComparer dealloc]
  -[PFCloudKitStoreComparer cache]
  -[PFCloudKitStoreComparer ensureContentsOfStore:matchContentsOfStore:error:]
  -[PFCloudKitStoreComparer ensureStoresAgreeOnCloudKitTables:error:]
  -[PFCloudKitStoreComparer compareContentOfStore:toStore:error:]
  -[PFCloudKitStoreComparer compareCloudKitMetadataOfStore:toStore:error:]
  -[PFCloudKitStoreComparer deriveIdentifierForNonCloudObjectID:]
  -[PFCloudKitStoreComparer populateCacheForStore:inContext:error:]
  -[PFCloudKitStoreComparer getObjectMatchingRecordID:fromStore:withManagedObjectContext:]
  -[PFCloudKitStoreComparer compareAttributesOnObject:toObject:error:]
  -[PFCloudKitStoreComparer compareRelationshipsOfRecordID:withStoreObject:andOtherObject:error:]
  -[PFCloudKitStoreComparer validateValue:againstOtherValue:forIgnoredAttribute:]
  -[PFCloudKitStoreComparer isValue:equalToValue:forAttribute:]
  -[PFCloudKitStoreComparer getRecordIDsForRelationship:onObject:]
  -[PFCloudKitStoreComparer checkCloudKitMetadata]


NSCKImportOperation : NSManagedObject
 @property  NSDate *importDate
 @property  NSUUID *operationUUID
 @property  NSData *changeTokenBytes
 @property  NSSet *pendingRelationships

  // class methods
  +[NSCKImportOperation entityPath]
  +[NSCKImportOperation fetchUnfinishedImportOperationsInStore:withManagedObjectContext:error:]
  +[NSCKImportOperation fetchOperationWithIdentifier:fromStore:inManagedObjectContext:error:]
  +[NSCKImportOperation purgeFinishedImportOperationsInStore:withManagedObjectContext:error:]


NSBatchDeleteRequest : NSPersistentStoreRequest
 @property  unsigned long resultType
 @property  NSFetchRequest *fetchRequest

  // class methods
  +[NSBatchDeleteRequest decodeFromXPCArchive:withContext:]

  // instance methods
  -[NSBatchDeleteRequest dealloc]
  -[NSBatchDeleteRequest resultType]
  -[NSBatchDeleteRequest fetchRequest]
  -[NSBatchDeleteRequest setResultType:]
  -[NSBatchDeleteRequest initWithFetchRequest:]
  -[NSBatchDeleteRequest requestType]
  -[NSBatchDeleteRequest encodeForXPC]
  -[NSBatchDeleteRequest _secureOperation]
  -[NSBatchDeleteRequest _setSecureOperation:]
  -[NSBatchDeleteRequest _resolveEntityWithContext:]
  -[NSBatchDeleteRequest setShouldPerformSecureOperation:]
  -[NSBatchDeleteRequest shouldPerformSecureOperation]
  -[NSBatchDeleteRequest initWithObjectIDs:]


NSBatchDeleteResult : NSPersistentStoreResult
 @property  id result
 @property  unsigned long resultType

  // instance methods
  -[NSBatchDeleteResult dealloc]
  -[NSBatchDeleteResult result]
  -[NSBatchDeleteResult resultType]
  -[NSBatchDeleteResult initWithResultType:andObject:]
  -[NSBatchDeleteResult initWithSubresults:]


NSSQLObjectIDRequestContext : NSSQLStoreRequestContext
 @property  NSDictionary *entitiesAndCounts
 @property  NSSQLModel *model

  // instance methods
  -[NSSQLObjectIDRequestContext dealloc]
  -[NSSQLObjectIDRequestContext model]
  -[NSSQLObjectIDRequestContext isWritingRequest]
  -[NSSQLObjectIDRequestContext executeRequestCore:]
  -[NSSQLObjectIDRequestContext initForEntitiesAndCounts:context:sqlCore:]
  -[NSSQLObjectIDRequestContext entitiesAndCounts]


NSFetchIndexElementDescription : NSObject <NSSecureCoding, NSCoding>
 @property  NSPropertyDescription *property
 @property  NSString *propertyName
 @property  unsigned long collationType
 @property  BOOL ascending
 @property  NSFetchIndexDescription *indexDescription

  // class methods
  +[NSFetchIndexElementDescription supportsSecureCoding]

  // instance methods
  -[NSFetchIndexElementDescription dealloc]
  -[NSFetchIndexElementDescription isEqual:]
  -[NSFetchIndexElementDescription copyWithZone:]
  -[NSFetchIndexElementDescription encodeWithCoder:]
  -[NSFetchIndexElementDescription initWithCoder:]
  -[NSFetchIndexElementDescription _setAscending:]
  -[NSFetchIndexElementDescription propertyName]
  -[NSFetchIndexElementDescription _isEditable]
  -[NSFetchIndexElementDescription _throwIfNotEditable]
  -[NSFetchIndexElementDescription property]
  -[NSFetchIndexElementDescription initWithPropertyName:collationType:]
  -[NSFetchIndexElementDescription initWithProperty:collationType:]
  -[NSFetchIndexElementDescription collationType]
  -[NSFetchIndexElementDescription isAscending]
  -[NSFetchIndexElementDescription initWithPropertyName:property:collationType:ascending:]
  -[NSFetchIndexElementDescription _setIsUnique:]
  -[NSFetchIndexElementDescription indexDescription]
  -[NSFetchIndexElementDescription _setIndexDescription:]
  -[NSFetchIndexElementDescription _isUnique]
  -[NSFetchIndexElementDescription _setUniqueBit:]
  -[NSFetchIndexElementDescription _validateCollationType:forProperty:]
  -[NSFetchIndexElementDescription _resolveProperty]
  -[NSFetchIndexElementDescription setCollationType:]
  -[NSFetchIndexElementDescription setAscending:]


PFUbiquityTransactionLog : NSObject
 @property  BOOL useTemporaryLogLocation
 @property  BOOL inTemporaryLocation
 @property  BOOL inStagingLocation
 @property  BOOL inPermanentLocation
 @property  NSString *storeName
 @property  NSString *exportingPeerID
 @property  NSString *modelVersionHash
 @property  NSString *fileProtectionOption
 @property  NSNumber *transactionNumber
 @property  NSString *transactionLogFilename
 @property  int transactionLogType
 @property  PFUbiquityLocation *transactionLogLocation
 @property  PFUbiquityLocation *temporaryTransactionLogLocation
 @property  PFUbiquityLocation *stagingTransactionLogLocation
 @property  PFUbiquitySaveSnapshot *saveSnapshot
 @property  PFUbiquityLocation *currentLocation
 @property  PFUbiquityKnowledgeVector *knowledgeVector
 @property  NSString *localPeerID
 @property  BOOL loadUsingRetry
 @property  BOOL loadedComparisonMetadata
 @property  BOOL loadedImportMetadata
 @property  BOOL loadedInsertedObjectData
 @property  BOOL loadedUpdatedObjectData
 @property  BOOL loadedDeletedObjectData

  // class methods
  +[PFUbiquityTransactionLog pruneTemporaryLogDirectoryForPeerRootLocation:error:]
  +[PFUbiquityTransactionLog transactionLogTypeFromLocation:]
  +[PFUbiquityTransactionLog createTransactionLogFilenameForLogType:]
  +[PFUbiquityTransactionLog createDataFromExtendedAttrsForLog:error:]
  +[PFUbiquityTransactionLog updateModificationTimesForLocation:]
  +[PFUbiquityTransactionLog truncateLogFilesForPeerID:storeName:modelVersionHash:beforeKnowledgeVector:withLocalPeerID:andUbiquityRootLocation:]
  +[PFUbiquityTransactionLog transactionLogFilenameUUID]
  +[PFUbiquityTransactionLog truncateLogFilesBeforeBaselineMetadata:withLocalPeerID:andUbiquityRootLocation:]
  +[PFUbiquityTransactionLog generateTransactionLogFilename]

  // instance methods
  -[PFUbiquityTransactionLog init]
  -[PFUbiquityTransactionLog dealloc]
  -[PFUbiquityTransactionLog transactionNumber]
  -[PFUbiquityTransactionLog modelVersionHash]
  -[PFUbiquityTransactionLog localPeerID]
  -[PFUbiquityTransactionLog storeName]
  -[PFUbiquityTransactionLog transactionLogLocation]
  -[PFUbiquityTransactionLog loadInsertedObjectsDataWithError:]
  -[PFUbiquityTransactionLog loadUpdatedObjectsDataWithError:]
  -[PFUbiquityTransactionLog loadDeletedObjectsDataWithError:]
  -[PFUbiquityTransactionLog releaseContents:]
  -[PFUbiquityTransactionLog loadComparisonMetadataWithError:]
  -[PFUbiquityTransactionLog exportingPeerID]
  -[PFUbiquityTransactionLog saveSnapshot]
  -[PFUbiquityTransactionLog loadImportMetadataWithError:]
  -[PFUbiquityTransactionLog knowledgeVector]
  -[PFUbiquityTransactionLog moveFileToPermanentLocationWithError:]
  -[PFUbiquityTransactionLog initWithStoreName:andSaveSnapshot:andRootLocation:]
  -[PFUbiquityTransactionLog setUseTemporaryLogLocation:]
  -[PFUbiquityTransactionLog writeToDiskWithError:andUpdateFilenameInTransactionEntries:]
  -[PFUbiquityTransactionLog transactionLogType]
  -[PFUbiquityTransactionLog transactionLogFilename]
  -[PFUbiquityTransactionLog currentLocation]
  -[PFUbiquityTransactionLog initWithTransactionLogLocation:andLocalPeerID:]
  -[PFUbiquityTransactionLog temporaryTransactionLogLocation]
  -[PFUbiquityTransactionLog stagingTransactionLogLocation]
  -[PFUbiquityTransactionLog inPermanentLocation]
  -[PFUbiquityTransactionLog inTemporaryLocation]
  -[PFUbiquityTransactionLog inStagingLocation]
  -[PFUbiquityTransactionLog releaseInsertedObjects]
  -[PFUbiquityTransactionLog releaseUpdatedObjects]
  -[PFUbiquityTransactionLog releaseDeletedObjects]
  -[PFUbiquityTransactionLog loadPlistAtLocation:withError:]
  -[PFUbiquityTransactionLog loadContents:]
  -[PFUbiquityTransactionLog useTemporaryLogLocation]
  -[PFUbiquityTransactionLog populateContents]
  -[PFUbiquityTransactionLog writeContentsOfZipArchive:intoExtendedAttributesForFile:error:]
  -[PFUbiquityTransactionLog cleanupExternalDataReferences]
  -[PFUbiquityTransactionLog deleteLogFileWithError:]
  -[PFUbiquityTransactionLog initWithTransactionLogURL:ubiquityRootLocation:andLocalPeerID:]
  -[PFUbiquityTransactionLog rewriteToDiskWithError:]
  -[PFUbiquityTransactionLog generatePeerCodeKnowledgeVectorWithManagedObjectContext:]
  -[PFUbiquityTransactionLog fileProtectionOption]
  -[PFUbiquityTransactionLog loadUsingRetry]
  -[PFUbiquityTransactionLog setLoadUsingRetry:]
  -[PFUbiquityTransactionLog loadedComparisonMetadata]
  -[PFUbiquityTransactionLog loadedImportMetadata]
  -[PFUbiquityTransactionLog loadedInsertedObjectData]
  -[PFUbiquityTransactionLog loadedUpdatedObjectData]
  -[PFUbiquityTransactionLog loadedDeletedObjectData]


NSXPCSaveRequestContext : NSObject
 @property  BOOL forceUpdates
 @property  unsigned long interrupts
 @property  NSDictionary *changeCache
 @property  NSSet *rowsToDelete

  // instance methods
  -[NSXPCSaveRequestContext dealloc]
  -[NSXPCSaveRequestContext request]
  -[NSXPCSaveRequestContext managedObjectContext]
  -[NSXPCSaveRequestContext changeCache]
  -[NSXPCSaveRequestContext rowsToDelete]
  -[NSXPCSaveRequestContext newEncodedSaveRequest]
  -[NSXPCSaveRequestContext setInterrupts:]
  -[NSXPCSaveRequestContext initForStore:request:metadata:forceInsertsToUpdates:context:]
  -[NSXPCSaveRequestContext interrupts]
  -[NSXPCSaveRequestContext _updateRollbackCacheForObjectWithID:relationship:withValuesFrom:]
  -[NSXPCSaveRequestContext _cacheNodePropertiesFromObject:]
  -[NSXPCSaveRequestContext _addRowForInsertOrUpdate:]
  -[NSXPCSaveRequestContext _encodeObjectValues:options:]
  -[NSXPCSaveRequestContext _encodeObjectsForSave:forDelete:]
  -[NSXPCSaveRequestContext rowForID:]
  -[NSXPCSaveRequestContext forceUpdates]


NSSQLRelationshipFaultRequestContext : NSSQLStoreRequestContext
 @property  NSRelationshipDescription *relationship
 @property  NSManagedObjectID *objectID
 @property  NSSQLModel *sqlModel

  // instance methods
  -[NSSQLRelationshipFaultRequestContext dealloc]
  -[NSSQLRelationshipFaultRequestContext objectID]
  -[NSSQLRelationshipFaultRequestContext executeRequestCore:]
  -[NSSQLRelationshipFaultRequestContext relationship]
  -[NSSQLRelationshipFaultRequestContext initWithObjectID:relationship:context:sqlCore:]
  -[NSSQLRelationshipFaultRequestContext sqlModel]


_PFFreeMapEntry : NSObject
  // instance methods
  -[_PFFreeMapEntry init]
  -[_PFFreeMapEntry dealloc]
  -[_PFFreeMapEntry decrement]
  -[_PFFreeMapEntry addOwner:]
  -[_PFFreeMapEntry removeOwner:]
  -[_PFFreeMapEntry removeAllOwners]


PFUbiquityImportContext : NSObject
 @property  _PFUbiquityStack *stack
 @property  PFUbiquityStoreMetadata *storeMetadata
 @property  PFUbiquityPeer *actingPeer
 @property  PFUbiquityKnowledgeVector *knowledgeVector
 @property  PFUbiquityKnowledgeVector *currentKnowledgeVector
 @property  NSString *exportingPeerID
 @property  PFUbiquityTransactionLog *transactionLog
 @property  PFUbiquityStoreSaveSnapshot *storeSaveSnapshot
 @property  NSDictionary *globalIDToLocalIDURICache
 @property  PFUbiquitySwitchboardCacheWrapper *cacheWrapper
 @property  NSMutableDictionary *globalIDToFetchedObject
 @property  PFUbiquityBaselineHeuristics *heuristics

  // instance methods
  -[PFUbiquityImportContext init]
  -[PFUbiquityImportContext dealloc]
  -[PFUbiquityImportContext setStack:]
  -[PFUbiquityImportContext stack]
  -[PFUbiquityImportContext cacheWrapper]
  -[PFUbiquityImportContext setGlobalIDToLocalIDURICache:]
  -[PFUbiquityImportContext prefetchManagedObjectsInContext:error:]
  -[PFUbiquityImportContext transactionLog]
  -[PFUbiquityImportContext initWithStack:andStoreMetadata:]
  -[PFUbiquityImportContext setHeuristics:]
  -[PFUbiquityImportContext setCacheWrapper:]
  -[PFUbiquityImportContext setStoreMetadata:]
  -[PFUbiquityImportContext exportingPeerID]
  -[PFUbiquityImportContext setExportingPeerID:]
  -[PFUbiquityImportContext setTransactionLog:]
  -[PFUbiquityImportContext setStoreSaveSnapshot:]
  -[PFUbiquityImportContext storeSaveSnapshot]
  -[PFUbiquityImportContext knowledgeVector]
  -[PFUbiquityImportContext setKnowledgeVector:]
  -[PFUbiquityImportContext setCurrentKnowledgeVector:]
  -[PFUbiquityImportContext globalIDToLocalIDURICache]
  -[PFUbiquityImportContext globalIDToFetchedObject]
  -[PFUbiquityImportContext currentKnowledgeVector]
  -[PFUbiquityImportContext heuristics]
  -[PFUbiquityImportContext actingPeer]
  -[PFUbiquityImportContext storeMetadata]
  -[PFUbiquityImportContext setActingPeer:]
  -[PFUbiquityImportContext initWithStoreName:andUbiquityRootLocation:withLocalPeerID:]


PFCloudKitSchemaGenerator : NSObject
 @property  NSPersistentStoreCoordinator *coordinator
 @property  NSPersistentStore *store
 @property  NSManagedObjectContext *managedObjectContext
 @property  NSManagedObjectModel *model
 @property  CKRecordZone *recordZone
 @property  NSString *configurationName
 @property  NSCloudKitMirroringDelegateOptions *mirroringOptions

  // class methods
  +[PFCloudKitSchemaGenerator newRepresentativeRecordForStaticFieldsInEntity:inZoneWithID:]
  +[PFCloudKitSchemaGenerator representativeValueFor:]

  // instance methods
  -[PFCloudKitSchemaGenerator init]
  -[PFCloudKitSchemaGenerator dealloc]
  -[PFCloudKitSchemaGenerator .cxx_destruct]
  -[PFCloudKitSchemaGenerator store]
  -[PFCloudKitSchemaGenerator model]
  -[PFCloudKitSchemaGenerator managedObjectContext]
  -[PFCloudKitSchemaGenerator coordinator]
  -[PFCloudKitSchemaGenerator configurationName]
  -[PFCloudKitSchemaGenerator recordZone]
  -[PFCloudKitSchemaGenerator mirroringOptions]
  -[PFCloudKitSchemaGenerator initWithObservedStore:zone:mirroringOptions:]
  -[PFCloudKitSchemaGenerator newRepresentativeRecords:]
  -[PFCloudKitSchemaGenerator representativeObjectForEntity:withManagedObjectContext:cache:populate:]
  -[PFCloudKitSchemaGenerator populateValuesOnObject:]
  -[PFCloudKitSchemaGenerator populateRelationshipsOnObject:withCache:]


PFUbiquityLocation : NSObject <NSCopying>
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *ubiquityRootLocationPath
 @property  BOOL isRootUbiquitous
 @property  int ubiquityLocationType
 @property  NSString *exportingPeerID
 @property  NSString *storeName
 @property  NSString *modelVersionHash
 @property  NSString *filename
 @property  BOOL usesStagingLogDirectory
 @property  BOOL usesTemporaryLogDirectory
 @property  BOOL usesCurrentBaselineDirectory
 @property  BOOL usesBaselineStagingDirectory
 @property  BOOL usesBaselineDirectory
 @property  BOOL usesNosyncDirectory
 @property  unsigned long hash
 @property  NSArray *otherPathComponents
 @property  BOOL isTransactionLogLocation
 @property  BOOL isDirectory

  // class methods
  +[PFUbiquityLocation initialize]
  +[PFUbiquityLocation pathByTruncatingBeforeLibraryMobileDocuments:]
  +[PFUbiquityLocation createPeerRootLocationForPeerID:withUbiquityRootLocation:]
  +[PFUbiquityLocation createVersionHashStringForModel:]
  +[PFUbiquityLocation createArrayOfSubLocationsAtLocation:error:]
  +[PFUbiquityLocation createUbiquityLocationForRootURL:]
  +[PFUbiquityLocation createTransactionLogLocationForPeerID:storeName:modelVersionHash:logFilename:andUbiquityRootLocation:]
  +[PFUbiquityLocation createUbiquityLocationForURL:withUbiquityRootLocation:]
  +[PFUbiquityLocation createBaselineLocation:forStoreName:andModelVersionHash:withUbiquityRootLocation:]
  +[PFUbiquityLocation createTemporaryTransactionLogLocationFromTransactionLogLocation:]
  +[PFUbiquityLocation createStagingTransactionLogLocationFromTransactionLogLocation:]
  +[PFUbiquityLocation createUbiquityExternalDataReferenceFileLocationForUUID:andStore:withUbiquityRootLocation:]
  +[PFUbiquityLocation createPeerBaselineFileSafeSaveLocationForLocalPeerID:andBaselineFileLocation:]
  +[PFUbiquityLocation createBaselineStagingLocation:forStoreName:modelVersionHash:andFilename:withUbiquityRootLocation:]
  +[PFUbiquityLocation createPeerStoreVersionLocationForPeerID:storeName:andModelVersionHash:withUbiquityRootLocation:]
  +[PFUbiquityLocation createCurrentBaselineLocation:forStoreName:peerID:andModelVersionHash:forFileNamed:withUbiquityRootLocation:]
  +[PFUbiquityLocation createUbiquityExternalDataReferenceStoreLocationForStoreName:withUbiquityRootLocation:]
  +[PFUbiquityLocation locationSentinel]
  +[PFUbiquityLocation setLocationSentinel:]
  +[PFUbiquityLocation createUbiquityLocationForRootPath:]
  +[PFUbiquityLocation createUbiquityLocationForPath:withUbiquityRootLocation:]
  +[PFUbiquityLocation createTransactionLogLocationFromTemporaryOrStagingLogLocation:]
  +[PFUbiquityLocation createUbiquityExternalDataReferenceFileLocationForUUID:andLog:]
  +[PFUbiquityLocation createPeerStoreLocationForPeerID:andStoreName:withUbiquityRootLocation:]
  +[PFUbiquityLocation createStringByAppendingSubpath:toPath:]
  +[PFUbiquityLocation createUbiquityLocationForRootPath:checkIsUbiquitous:]
  +[PFUbiquityLocation createUbiquityLocationForPath:withUbiquityRootPath:]
  +[PFUbiquityLocation isUbiquityLocationPath:equalToPath:]
  +[PFUbiquityLocation createUbiquityExternalDataReferenceFileLocationForUUID:storeName:andUbiquityRootLocation:]
  +[PFUbiquityLocation localLocationSentinel]
  +[PFUbiquityLocation createLocalBasePathWithLocalPeerID:containerID:storeName:andStoreURL:]
  +[PFUbiquityLocation createUbiquityLocationForURL:withUbiquityRootURL:]
  +[PFUbiquityLocation createUbiquityLocationForSubpath:ofUbiquityRootPath:]
  +[PFUbiquityLocation createMetadataRootLocationForUbiquityRootLocation:]
  +[PFUbiquityLocation createMetadataStoreFileLocationForLocalPeerID:storeName:andUbiquityRootLocation:]
  +[PFUbiquityLocation createMetadataPeerLocationForLocalPeerID:andUbiquityRootLocation:]
  +[PFUbiquityLocation createMetadataPeerStoreLocationForLocalPeerID:storeName:andUbiquityRootLocation:]
  +[PFUbiquityLocation createMetadataUUIDLocationForLocalPeerID:storeName:UUID:andUbiquityRootLocation:]
  +[PFUbiquityLocation createPeerBaselineFileLocationForLocalPeerID:andBaselineFileLocation:]
  +[PFUbiquityLocation createStagingPeerStoreVersionLocationForExportingPeerID:storeName:andModelVersionHash:withUbiquityRootLocation:]
  +[PFUbiquityLocation createUbiquityPeerReceiptFileLocationForPeerWithID:storeName:andModelVersionHash:withUbiquityRootLocation:]
  +[PFUbiquityLocation createUbiquityPeerReceiptSafeSaveLocationFromReceiptFileLocation:]
  +[PFUbiquityLocation createMapOfLocationsForOldManagedObjectModel:andNewManagedObjectModel:inUbiquityPeerStoreLocation:]
  +[PFUbiquityLocation createLocalStoresPathWithLocalPeerID:containerID:storeName:andStoreURL:]
  +[PFUbiquityLocation createLocalContainerRootLocationWithLocalPeerID:containerID:storeName:andStoreURL:]

  // instance methods
  -[PFUbiquityLocation init]
  -[PFUbiquityLocation dealloc]
  -[PFUbiquityLocation isEqual:]
  -[PFUbiquityLocation copyWithZone:]
  -[PFUbiquityLocation setStoreName:]
  -[PFUbiquityLocation isDirectory]
  -[PFUbiquityLocation filename]
  -[PFUbiquityLocation setFilename:]
  -[PFUbiquityLocation ubiquityLocationType]
  -[PFUbiquityLocation modelVersionHash]
  -[PFUbiquityLocation fileExistsAtLocation]
  -[PFUbiquityLocation createFullPath]
  -[PFUbiquityLocation storeName]
  -[PFUbiquityLocation ubiquityRootLocation]
  -[PFUbiquityLocation ubiquityRootLocationPath]
  -[PFUbiquityLocation createRelativePath]
  -[PFUbiquityLocation isRootUbiquitous]
  -[PFUbiquityLocation createFullURL]
  -[PFUbiquityLocation exportingPeerID]
  -[PFUbiquityLocation setExportingPeerID:]
  -[PFUbiquityLocation setUbiquityRootLocation:]
  -[PFUbiquityLocation usesNosyncDirectory]
  -[PFUbiquityLocation removeFileAtLocation:error:]
  -[PFUbiquityLocation usesCurrentBaselineDirectory]
  -[PFUbiquityLocation updateHash]
  -[PFUbiquityLocation initWithUbiquityRootPath:]
  -[PFUbiquityLocation setUbiquityRootLocationPath:]
  -[PFUbiquityLocation setModelVersionHash:]
  -[PFUbiquityLocation otherPathComponents]
  -[PFUbiquityLocation setOtherPathComponents:]
  -[PFUbiquityLocation setUbiquityLocationType:]
  -[PFUbiquityLocation setHash:]
  -[PFUbiquityLocation setIsRootUbiquitous:]
  -[PFUbiquityLocation usesBaselineStagingDirectory]
  -[PFUbiquityLocation fileExistsAtLocationWithLocalPeerID:error:]
  -[PFUbiquityLocation __isDirectory]
  -[PFUbiquityLocation initWithUbiquityRootURL:]
  -[PFUbiquityLocation usesStagingLogDirectory]
  -[PFUbiquityLocation usesTemporaryLogDirectory]
  -[PFUbiquityLocation usesBaselineDirectory]
  -[PFUbiquityLocation isTransactionLogLocation]
  -[PFUbiquityLocation fileAtLocationIsUploaded:]
  -[PFUbiquityLocation fileAtLocationIsDownloaded:]
  -[PFUbiquityLocation isEqualToURL:]


PFCloudKitHistoryAnalyzerContext : PFHistoryAnalyzerContext
 @property  NSManagedObjectContext *managedObjectContext

  // instance methods
  -[PFCloudKitHistoryAnalyzerContext dealloc]
  -[PFCloudKitHistoryAnalyzerContext reset:]
  -[PFCloudKitHistoryAnalyzerContext managedObjectContext]
  -[PFCloudKitHistoryAnalyzerContext initWithOptions:managedObjectContext:]
  -[PFCloudKitHistoryAnalyzerContext cloudKitAnalyzerOptions]
  -[PFCloudKitHistoryAnalyzerContext resetStateForObjectID:error:]
  -[PFCloudKitHistoryAnalyzerContext processChange:error:]
  -[PFCloudKitHistoryAnalyzerContext analyzerStateForChangedObjectID:error:]
  -[PFCloudKitHistoryAnalyzerContext finishProcessing:]
  -[PFCloudKitHistoryAnalyzerContext fetchSortedStates:]
  -[PFCloudKitHistoryAnalyzerContext newAnalyzerStateForChange:error:]


PFUbiquityTransactionLogMigrator : NSObject
 @property  BOOL throttleLogs

  // instance methods
  -[PFUbiquityTransactionLogMigrator dealloc]
  -[PFUbiquityTransactionLogMigrator populateMappingsByEntityName]
  -[PFUbiquityTransactionLogMigrator migrateTransactionLogFromLocation:toLocation:error:]
  -[PFUbiquityTransactionLogMigrator migrateBaselineFromLocation:toLocation:error:]
  -[PFUbiquityTransactionLogMigrator throttleLogs]
  -[PFUbiquityTransactionLogMigrator createDestinationObjectsFromSourceObjects:migrationContext:]
  -[PFUbiquityTransactionLogMigrator createDestinationGlobalObjectIDFromSourceGlobalObjectID:]
  -[PFUbiquityTransactionLogMigrator createDestinationObjectContentFromSourceObjectContent:withEntityMapping:migrationContext:]
  -[PFUbiquityTransactionLogMigrator initWithSourceModel:destinationModel:mappingModel:localPeerID:]
  -[PFUbiquityTransactionLogMigrator migrateTransactionLogsForStoreName:andLocalPeerID:atUbiquityRootLocation:error:]


_PFUbiquityMigrationContext : NSObject
 @property  PFUbiquityTransactionLog *transactionLog
 @property  PFUbiquityStoreSaveSnapshot *sourceStoreSaveSnapshot
 @property  PFUbiquityStoreSaveSnapshot *destinationStoreSaveSnapshot

  // instance methods
  -[_PFUbiquityMigrationContext dealloc]
  -[_PFUbiquityMigrationContext transactionLog]
  -[_PFUbiquityMigrationContext setTransactionLog:]
  -[_PFUbiquityMigrationContext setSourceStoreSaveSnapshot:]
  -[_PFUbiquityMigrationContext setDestinationStoreSaveSnapshot:]
  -[_PFUbiquityMigrationContext destinationStoreSaveSnapshot]
  -[_PFUbiquityMigrationContext sourceGlobalObjectIDFromCompressedID:]
  -[_PFUbiquityMigrationContext sourceStoreSaveSnapshot]


PFUbiquityBaselineRollOperation : PFUbiquityBaselineOperation
 @property  NSObject<PFUbiquityBaselineRollOperationDelegate> *delegate

  // instance methods
  -[PFUbiquityBaselineRollOperation init]
  -[PFUbiquityBaselineRollOperation dealloc]
  -[PFUbiquityBaselineRollOperation isEqual:]
  -[PFUbiquityBaselineRollOperation delegate]
  -[PFUbiquityBaselineRollOperation setDelegate:]
  -[PFUbiquityBaselineRollOperation main]
  -[PFUbiquityBaselineRollOperation retainedDelegate]
  -[PFUbiquityBaselineRollOperation haveConsistentStateForBaselineRoll]
  -[PFUbiquityBaselineRollOperation rollBaselineWithError:]


NSSQLStatementIntermediate : NSSQLIntermediate
  // instance methods
  -[NSSQLStatementIntermediate dealloc]
  -[NSSQLStatementIntermediate governingAliasForKeypathExpression:]
  -[NSSQLStatementIntermediate keypathExpressionIsSafeLHSForIn:]
  -[NSSQLStatementIntermediate governingEntityForKeypathExpression:]
  -[NSSQLStatementIntermediate setLimitIntermediate:]
  -[NSSQLStatementIntermediate whereIntermediate]
  -[NSSQLStatementIntermediate correlationToken]
  -[NSSQLStatementIntermediate orderIntermediate]
  -[NSSQLStatementIntermediate limitIntermediate]
  -[NSSQLStatementIntermediate governingAlias]
  -[NSSQLStatementIntermediate setWhereIntermediate:]
  -[NSSQLStatementIntermediate setOrderIntermediate:]
  -[NSSQLStatementIntermediate initWithEntity:alias:inScope:]
  -[NSSQLStatementIntermediate governingEntity]
  -[NSSQLStatementIntermediate setGoverningAlias:]
  -[NSSQLStatementIntermediate setCorrelationToken:]
  -[NSSQLStatementIntermediate setGoverningEntity:]


NSCKMirroredRelationship : NSManagedObject
 @property  NSString *ckRecordID
 @property  NSData *ckRecordSystemFields
 @property  NSString *cdEntityName
 @property  NSString *recordName
 @property  NSString *relatedEntityName
 @property  NSString *relatedRecordName
 @property  NSString *relationshipName
 @property  NSNumber *isPending
 @property  NSNumber *needsDelete
 @property  NSNumber *isUploaded
 @property  NSCKRecordZoneMetadata *recordZone

  // class methods
  +[NSCKMirroredRelationship entityPath]
  +[NSCKMirroredRelationship fetchMirroredRelationshipsMatchingPredicate:fromStore:inManagedObjectContext:error:]
  +[NSCKMirroredRelationship fetchMirroredRelationshipsMatchingRelatingRecords:andRelatingRecordIDs:fromStore:inManagedObjectContext:error:]
  +[NSCKMirroredRelationship orderRelationships:]
  +[NSCKMirroredRelationship insertMirroredRelationshipForManyToMany:inZoneWithMetadata:inStore:withManagedObjectContext:]
  +[NSCKMirroredRelationship mirroredRelationshipForManyToMany:inStore:withManagedObjectContext:error:]
  +[NSCKMirroredRelationship fetchPendingMirroredRelationshipsInStore:withManagedObjectContext:error:]
  +[NSCKMirroredRelationship purgeMirroredRelationshipsWithRecordIDs:withManagedObjectContext:error:]
  +[NSCKMirroredRelationship markRelationshipsForDeletedRecordIDs:withManagedObjectContext:error:]
  +[NSCKMirroredRelationship countMirroredRelationshipsInStore:matchingPredicate:withManagedObjectContext:error:]
  +[NSCKMirroredRelationship updateMirroredRelationshipsMatchingRecords:forStore:withManagedObjectContext:usingBlock:error:]
  +[NSCKMirroredRelationship fetchMirroredRelationshipsForObject:withRecordID:relatedToObjectsByRelationship:inManagedObjectContext:error:]
  +[NSCKMirroredRelationship mirroredRelationshipForObject:relatedToObject:relatedByRelationship:error:]
  +[NSCKMirroredRelationship countMirroredRelationshipsInStore:withManagedObjectContext:error:]

  // instance methods
  -[NSCKMirroredRelationship createRecordID]
  -[NSCKMirroredRelationship createRecordIDForRecord]
  -[NSCKMirroredRelationship createRecordIDForRelatedRecord]
  -[NSCKMirroredRelationship updateRelationshipValueUsingImportContext:andManagedObjectContext:isDelete:error:]


_PFZipFileArchive : NSObject
 @property  NSArray *entryNames

  // class methods
  +[_PFZipFileArchive readInt32FromBytes:offset:]
  +[_PFZipFileArchive writeInt64:toData:]
  +[_PFZipFileArchive writeInt32:toData:]
  +[_PFZipFileArchive writeInt16:toData:]
  +[_PFZipFileArchive readInt16FromBytes:offset:]
  +[_PFZipFileArchive createStringFromBytes:offset:length:]

  // instance methods
  -[_PFZipFileArchive init]
  -[_PFZipFileArchive dealloc]
  -[_PFZipFileArchive finalize]
  -[_PFZipFileArchive invalidate]
  -[_PFZipFileArchive isValid]
  -[_PFZipFileArchive writeToFile:options:error:]
  -[_PFZipFileArchive load:]
  -[_PFZipFileArchive archiveData]
  -[_PFZipFileArchive initWithPath:options:error:]
  -[_PFZipFileArchive contentsForEntryName:]
  -[_PFZipFileArchive initWithEntryNames:contents:properties:options:]
  -[_PFZipFileArchive initWithData:options:error:]
  -[_PFZipFileArchive openArchiveFile:]
  -[_PFZipFileArchive addLocalFileHeaderWithBytes:offset:]
  -[_PFZipFileArchive addCentralDirectoryEndRecordWithBytes:offset:]
  -[_PFZipFileArchive addCentralDirectoryHeaderWithBytes:offset:]
  -[_PFZipFileArchive compareBytes:length:withLocalFileHeader:]
  -[_PFZipFileArchive initWithEntryNames:dataProvider:options:]
  -[_PFZipFileArchive entryNames]
  -[_PFZipFileArchive streamForEntryName:]
  -[_PFZipFileArchive writeContentsForEntryName:toFile:options:error:]
  -[_PFZipFileArchive propertiesForEntryName:]
  -[_PFZipFileArchive archiveStream]
  -[_PFZipFileArchive readDataForLocalFileHeader:fromBytes:error:]
  -[_PFZipFileArchive createDataForEntryName:cache:error:]


PFZipCentralDirectoryFileHeader : NSObject
 @property  unsigned short versionMadeBy
 @property  unsigned short versionNeededToExtract
 @property  unsigned short generalPurposeBit
 @property  unsigned short compressionMethod
 @property  unsigned short lastModTime
 @property  unsigned short lastModDate
 @property  unsigned int crc32
 @property  unsigned int compressedSize
 @property  unsigned int uncompressedSize
 @property  unsigned short filenameLength
 @property  unsigned short extraFieldLength
 @property  unsigned short fileCommentLength
 @property  unsigned short fileStartDiskNumber
 @property  unsigned short internalFileAttrs
 @property  unsigned int externalFileAttrs
 @property  unsigned int localFileHeaderRelativeOffset
 @property  NSString *filename
 @property  NSData *extraFieldData
 @property  NSString *fileComment

  // instance methods
  -[PFZipCentralDirectoryFileHeader init]
  -[PFZipCentralDirectoryFileHeader dealloc]
  -[PFZipCentralDirectoryFileHeader filename]
  -[PFZipCentralDirectoryFileHeader setFilename:]
  -[PFZipCentralDirectoryFileHeader loadFromBytes:offset:]
  -[PFZipCentralDirectoryFileHeader crc32]
  -[PFZipCentralDirectoryFileHeader uncompressedSize]
  -[PFZipCentralDirectoryFileHeader compressedSize]
  -[PFZipCentralDirectoryFileHeader localFileHeaderRelativeOffset]
  -[PFZipCentralDirectoryFileHeader compressionMethod]
  -[PFZipCentralDirectoryFileHeader setExtraFieldData:]
  -[PFZipCentralDirectoryFileHeader setFileComment:]
  -[PFZipCentralDirectoryFileHeader loadFromData:offset:]
  -[PFZipCentralDirectoryFileHeader appendToData:]
  -[PFZipCentralDirectoryFileHeader versionMadeBy]
  -[PFZipCentralDirectoryFileHeader setVersionMadeBy:]
  -[PFZipCentralDirectoryFileHeader versionNeededToExtract]
  -[PFZipCentralDirectoryFileHeader setVersionNeededToExtract:]
  -[PFZipCentralDirectoryFileHeader generalPurposeBit]
  -[PFZipCentralDirectoryFileHeader setGeneralPurposeBit:]
  -[PFZipCentralDirectoryFileHeader setCompressionMethod:]
  -[PFZipCentralDirectoryFileHeader lastModTime]
  -[PFZipCentralDirectoryFileHeader setLastModTime:]
  -[PFZipCentralDirectoryFileHeader lastModDate]
  -[PFZipCentralDirectoryFileHeader setLastModDate:]
  -[PFZipCentralDirectoryFileHeader setCrc32:]
  -[PFZipCentralDirectoryFileHeader setCompressedSize:]
  -[PFZipCentralDirectoryFileHeader setUncompressedSize:]
  -[PFZipCentralDirectoryFileHeader filenameLength]
  -[PFZipCentralDirectoryFileHeader extraFieldLength]
  -[PFZipCentralDirectoryFileHeader fileCommentLength]
  -[PFZipCentralDirectoryFileHeader fileStartDiskNumber]
  -[PFZipCentralDirectoryFileHeader setFileStartDiskNumber:]
  -[PFZipCentralDirectoryFileHeader internalFileAttrs]
  -[PFZipCentralDirectoryFileHeader setInternalFileAttrs:]
  -[PFZipCentralDirectoryFileHeader externalFileAttrs]
  -[PFZipCentralDirectoryFileHeader setExternalFileAttrs:]
  -[PFZipCentralDirectoryFileHeader setLocalFileHeaderRelativeOffset:]
  -[PFZipCentralDirectoryFileHeader extraFieldData]
  -[PFZipCentralDirectoryFileHeader fileComment]


PFZipEndOfCentralDirectoryRecord : NSObject
 @property  unsigned short numberOfDisk
 @property  unsigned short diskWhereCentralDirectoryStarts
 @property  unsigned short numberOfCentralDirectoryRecordsOnThisDisk
 @property  unsigned short totalNumberOfCentralDirectoryRecords
 @property  unsigned int byteSizeOfCentralDirectory
 @property  unsigned int centralDirectoryOffset
 @property  unsigned short commentLength
 @property  NSString *comment

  // instance methods
  -[PFZipEndOfCentralDirectoryRecord init]
  -[PFZipEndOfCentralDirectoryRecord dealloc]
  -[PFZipEndOfCentralDirectoryRecord comment]
  -[PFZipEndOfCentralDirectoryRecord loadFromBytes:offset:]
  -[PFZipEndOfCentralDirectoryRecord loadFromData:offset:]
  -[PFZipEndOfCentralDirectoryRecord appendToData:]
  -[PFZipEndOfCentralDirectoryRecord setComment:]
  -[PFZipEndOfCentralDirectoryRecord numberOfDisk]
  -[PFZipEndOfCentralDirectoryRecord setNumberOfDisk:]
  -[PFZipEndOfCentralDirectoryRecord diskWhereCentralDirectoryStarts]
  -[PFZipEndOfCentralDirectoryRecord setDiskWhereCentralDirectoryStarts:]
  -[PFZipEndOfCentralDirectoryRecord numberOfCentralDirectoryRecordsOnThisDisk]
  -[PFZipEndOfCentralDirectoryRecord setNumberOfCentralDirectoryRecordsOnThisDisk:]
  -[PFZipEndOfCentralDirectoryRecord totalNumberOfCentralDirectoryRecords]
  -[PFZipEndOfCentralDirectoryRecord setTotalNumberOfCentralDirectoryRecords:]
  -[PFZipEndOfCentralDirectoryRecord byteSizeOfCentralDirectory]
  -[PFZipEndOfCentralDirectoryRecord setByteSizeOfCentralDirectory:]
  -[PFZipEndOfCentralDirectoryRecord centralDirectoryOffset]
  -[PFZipEndOfCentralDirectoryRecord setCentralDirectoryOffset:]
  -[PFZipEndOfCentralDirectoryRecord commentLength]


PFZipLocalFileHeader : NSObject
 @property  unsigned short versionNeededToExtract
 @property  unsigned short generalPurposeBit
 @property  unsigned short compressionMethod
 @property  unsigned short lastModTime
 @property  unsigned short lastModDate
 @property  unsigned int crc32
 @property  unsigned int compressedSize
 @property  unsigned int uncompressedSize
 @property  unsigned short filenameLength
 @property  unsigned short extraFieldLength
 @property  NSString *filename
 @property  NSData *extraFieldData
 @property  unsigned int totalHeaderLength

  // instance methods
  -[PFZipLocalFileHeader init]
  -[PFZipLocalFileHeader dealloc]
  -[PFZipLocalFileHeader filename]
  -[PFZipLocalFileHeader setFilename:]
  -[PFZipLocalFileHeader loadFromBytes:offset:]
  -[PFZipLocalFileHeader crc32]
  -[PFZipLocalFileHeader uncompressedSize]
  -[PFZipLocalFileHeader compressedSize]
  -[PFZipLocalFileHeader totalHeaderLength]
  -[PFZipLocalFileHeader compressionMethod]
  -[PFZipLocalFileHeader setExtraFieldData:]
  -[PFZipLocalFileHeader loadFromData:offset:]
  -[PFZipLocalFileHeader appendToData:]
  -[PFZipLocalFileHeader versionNeededToExtract]
  -[PFZipLocalFileHeader setVersionNeededToExtract:]
  -[PFZipLocalFileHeader generalPurposeBit]
  -[PFZipLocalFileHeader setGeneralPurposeBit:]
  -[PFZipLocalFileHeader setCompressionMethod:]
  -[PFZipLocalFileHeader lastModTime]
  -[PFZipLocalFileHeader setLastModTime:]
  -[PFZipLocalFileHeader lastModDate]
  -[PFZipLocalFileHeader setLastModDate:]
  -[PFZipLocalFileHeader setCrc32:]
  -[PFZipLocalFileHeader setCompressedSize:]
  -[PFZipLocalFileHeader setUncompressedSize:]
  -[PFZipLocalFileHeader filenameLength]
  -[PFZipLocalFileHeader extraFieldLength]
  -[PFZipLocalFileHeader extraFieldData]


NSSQLFetchRequestContext : NSSQLStoreRequestContext
 @property  NSSQLFetchRequestContext *parentContext
 @property  NSFetchRequest *request
 @property  NSSQLiteStatement *fetchStatement
 @property  NSFetchRequest *originalRequest
 @property  BOOL storeIsUbiquitized
 @property  NSString *externalDataReferencesDirectory
 @property  NSString *externalDataLinksDirectory
 @property  NSString *fileBackedFuturesDirectory
 @property  int fileProtectionLevel
 @property  NSSQLModel *sqlModel
 @property  NSSQLEntity *sqlEntityForFetchRequest
 @property  NSFaultHandler *faultHandler
 @property  _PFFetchPlanHeader *fetchPlan
 @property  NSArray *objectIDsToRegisterWithContext
 @property  NSArray *objectsToAwaken
 @property  BOOL isFaultRequest
 @property  BOOL shouldUseBatches
 @property  BOOL isUsingCachedStatement
 @property  NSDictionary *prefetchingSubstitutionVariables
 @property  NSArray *faultsThatWereFired

  // instance methods
  -[NSSQLFetchRequestContext dealloc]
  -[NSSQLFetchRequestContext visitPredicate:]
  -[NSSQLFetchRequestContext visitPredicateExpression:]
  -[NSSQLFetchRequestContext request]
  -[NSSQLFetchRequestContext originalRequest]
  -[NSSQLFetchRequestContext parentContext]
  -[NSSQLFetchRequestContext faultHandler]
  -[NSSQLFetchRequestContext objectIDFactoryForSQLEntity:]
  -[NSSQLFetchRequestContext fileBackedFuturesDirectory]
  -[NSSQLFetchRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLFetchRequestContext executeRequestCore:]
  -[NSSQLFetchRequestContext fetchStatement]
  -[NSSQLFetchRequestContext executePrologue]
  -[NSSQLFetchRequestContext fileProtectionLevel]
  -[NSSQLFetchRequestContext externalDataReferencesDirectory]
  -[NSSQLFetchRequestContext externalDataLinksDirectory]
  -[NSSQLFetchRequestContext inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSSQLFetchRequestContext manyToOnePrefetchRequestForRelationshipNamed:onEntity:]
  -[NSSQLFetchRequestContext manyToManyPrefetchRequestsForRelationshipNamed:onEntity:]
  -[NSSQLFetchRequestContext executeEpilogue]
  -[NSSQLFetchRequestContext setPrefetchingSubstitutionVariables:]
  -[NSSQLFetchRequestContext prefetchingSubstitutionVariables]
  -[NSSQLFetchRequestContext sqlModel]
  -[NSSQLFetchRequestContext fetchPlan]
  -[NSSQLFetchRequestContext isUsingCachedStatement]
  -[NSSQLFetchRequestContext storeIsUbiquitized]
  -[NSSQLFetchRequestContext ubiquitousExternalReferenceLocationForUUID:]
  -[NSSQLFetchRequestContext addFaultsThatWereFired:]
  -[NSSQLFetchRequestContext setIsFaultRequest:]
  -[NSSQLFetchRequestContext shouldUseBatches]
  -[NSSQLFetchRequestContext _createStatement]
  -[NSSQLFetchRequestContext initWithRequest:connection:context:sqlCore:parentContext:]
  -[NSSQLFetchRequestContext _setupBindVariablesForCachedStatement:usingValues:]
  -[NSSQLFetchRequestContext cachedStatement]
  -[NSSQLFetchRequestContext cacheStatement:]
  -[NSSQLFetchRequestContext _fireFaultsForValue:]
  -[NSSQLFetchRequestContext _preparePredicate:]
  -[NSSQLFetchRequestContext objectIDsToRegisterWithContext]
  -[NSSQLFetchRequestContext persistRows:]
  -[NSSQLFetchRequestContext createChildContextForNestedFetchRequest:]
  -[NSSQLFetchRequestContext addObjectIDsToRegister:]
  -[NSSQLFetchRequestContext addObjectsToAwaken:]
  -[NSSQLFetchRequestContext objectsToAwaken]
  -[NSSQLFetchRequestContext setFetchStatement:]
  -[NSSQLFetchRequestContext sqlEntityForFetchRequest]
  -[NSSQLFetchRequestContext isFaultRequest]
  -[NSSQLFetchRequestContext faultsThatWereFired]
  -[NSSQLFetchRequestContext setIsUsingCachedStatement:]


NSSQLXPCFetchRequestContext : NSSQLFetchRequestContext
  // instance methods
  -[NSSQLXPCFetchRequestContext executeRequestCore:]
  -[NSSQLXPCFetchRequestContext executeEpilogue]


NSSQLObjectIDSetFetchRequestContext : NSSQLFetchRequestContext
  // instance methods
  -[NSSQLObjectIDSetFetchRequestContext dealloc]
  -[NSSQLObjectIDSetFetchRequestContext executeRequestCore:]
  -[NSSQLObjectIDSetFetchRequestContext executeEpilogue]
  -[NSSQLObjectIDSetFetchRequestContext initWithRequest:context:sqlCore:idSets:columnName:]


PFUbiquityPeer : NSManagedObject
 @property  NSString *peerKey
 @property  NSString *peerCode
 @property  NSSet *remoteStates
 @property  NSSet *primaryKeyRanges
 @property  NSSet *transactionEntries
 @property  NSSet *localPeerStates

  // class methods
  +[PFUbiquityPeer allPeersInManagedObjectContext:]
  +[PFUbiquityPeer peerForPeerID:inManagedObjectContext:createIfMissing:]


NSSQLSaveChangesRequestContext : NSSQLStoreRequestContext
 @property  NSDictionary *metadataToWrite
 @property  NSSQLSavePlan *savePlan
 @property  NSSQLModel *model
 @property  NSSaveChangesRequest *request
 @property  NSFaultHandler *faultHandler
 @property  NSMutableDictionary *originalCachedRows
 @property  NSString *externalDataReferencesDirectory
 @property  NSString *externalDataLinksDirectory
 @property  NSString *fileBackedFuturesDirectory

  // instance methods
  -[NSSQLSaveChangesRequestContext dealloc]
  -[NSSQLSaveChangesRequestContext model]
  -[NSSQLSaveChangesRequestContext request]
  -[NSSQLSaveChangesRequestContext faultHandler]
  -[NSSQLSaveChangesRequestContext fileBackedFuturesDirectory]
  -[NSSQLSaveChangesRequestContext initWithRequest:context:sqlCore:]
  -[NSSQLSaveChangesRequestContext isWritingRequest]
  -[NSSQLSaveChangesRequestContext executeRequestCore:]
  -[NSSQLSaveChangesRequestContext executePrologue]
  -[NSSQLSaveChangesRequestContext externalDataReferencesDirectory]
  -[NSSQLSaveChangesRequestContext externalDataLinksDirectory]
  -[NSSQLSaveChangesRequestContext rowCache]
  -[NSSQLSaveChangesRequestContext executeEpilogue]
  -[NSSQLSaveChangesRequestContext savePlan]
  -[NSSQLSaveChangesRequestContext hasChangesForWriting]
  -[NSSQLSaveChangesRequestContext metadataToWrite]
  -[NSSQLSaveChangesRequestContext originalRowForObjectID:]
  -[NSSQLSaveChangesRequestContext addDataMask:forEntityKey:]
  -[NSSQLSaveChangesRequestContext dataMaskForKey:]
  -[NSSQLSaveChangesRequestContext setOriginalRow:forObjectID:]
  -[NSSQLSaveChangesRequestContext contextRowCache]
  -[NSSQLSaveChangesRequestContext originalCachedRows]


PFUbiquityTransactionEntry : NSManagedObject
 @property  int transactionType
 @property  NSURL *transactionLogURL
 @property  NSNumber *transactionTypeNum
 @property  NSString *localIDStr
 @property  NSNumber *transactionNumber
 @property  NSString *globalIDStr
 @property  NSDate *transactionDate
 @property  NSString *transactionLogFilename
 @property  NSString *knowledgeVectorString
 @property  PFUbiquityPeer *actingPeer
 @property  PFUbiquityStoreMetadata *storeMetadata

  // class methods
  +[PFUbiquityTransactionEntry newTransactionEntryForObjectWithCompressedGlobalID:withTransactionType:importContext:]
  +[PFUbiquityTransactionEntry createTransactionEntriesForCompressedObjectIDs:withTransactionType:withImportContext:]
  +[PFUbiquityTransactionEntry transactionEntriesMatchingGlobalObjectID:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry transactionEntriesMatchingLocalObjectID:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry transactionEntriesAfterPeerState:forStoreName:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry deleteTransactionEntriesAfterPeerState:forStoreName:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry transactionEntriesForPeerID:withTransactionNumber:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry transactionEntriesForPeerID:beforeTransacationNumber:forStoreNamed:inManagedObjectContext:]
  +[PFUbiquityTransactionEntry transactionEntryForGlobalIDString:withActingPeerID:atTransactionNumber:inManagedObjectContext:]

  // instance methods
  -[PFUbiquityTransactionEntry setTransactionType:]
  -[PFUbiquityTransactionEntry transactionType]
  -[PFUbiquityTransactionEntry initAndInsertIntoManagedObjectContext:]
  -[PFUbiquityTransactionEntry transactionLogURL]


PFCloudKitMetadataModelMigrator : NSObject
 @property  NSSQLCore *store
 @property  NSManagedObjectContext *metadataContext
 @property  PFCloudKitMetadataMigrationContext *context

  // instance methods
  -[PFCloudKitMetadataModelMigrator dealloc]
  -[PFCloudKitMetadataModelMigrator context]
  -[PFCloudKitMetadataModelMigrator store]
  -[PFCloudKitMetadataModelMigrator initWithStore:metadataContext:]
  -[PFCloudKitMetadataModelMigrator checkAndPerformMigrationIfNecessary:]
  -[PFCloudKitMetadataModelMigrator computeAncillaryEntityPrimaryKeyTableEntriesForStore:error:]
  -[PFCloudKitMetadataModelMigrator addDropTableStatementsForOldMetadataTablesToContext:withAdapter:]
  -[PFCloudKitMetadataModelMigrator fetchSchemaSQLForEntity:usingConnection:]
  -[PFCloudKitMetadataModelMigrator addMigrationStatementToContext:forRenamingAttributeNamed:withOldColumnName:toAttributeName:onOldSQLEntity:andCurrentSQLEntity:]
  -[PFCloudKitMetadataModelMigrator addMigrationStatementsToDeleteDuplicateMirroredRelationshipsToContext:withManagedObjectContext:andSQLEntity:error:]
  -[PFCloudKitMetadataModelMigrator addMigrationStatementForAddingAttribute:toContext:inStore:]
  -[PFCloudKitMetadataModelMigrator checkForCorruptedRecordMetadataInStore:inManagedObjectContext:error:]
  -[PFCloudKitMetadataModelMigrator cleanUpAfterClientMigrationWithStore:andContext:error:]
  -[PFCloudKitMetadataModelMigrator migrateMetadataForObjectsInStore:toNSCKRecordMetadataUsingContext:error:]
  -[PFCloudKitMetadataModelMigrator checkForRecordMetadataZoneCorruptionInStore:error:]
  -[PFCloudKitMetadataModelMigrator prepareContextWithConnection:error:]
  -[PFCloudKitMetadataModelMigrator calculateMigrationStepsWithConnection:error:]
  -[PFCloudKitMetadataModelMigrator applyMigrationChangesWithConnection:error:]
  -[PFCloudKitMetadataModelMigrator commitMigrationMetadataAndCleanup:]
  -[PFCloudKitMetadataModelMigrator migrateBatchOfObjects:forStore:inContext:error:]
  -[PFCloudKitMetadataModelMigrator metadataContext]


PFUbiquityPeerSnapshot : NSObject
 @property  NSDictionary *logSnapshot
 @property  NSDictionary *diffFromPrevious
 @property  PFUbiquityKnowledgeVector *knowledgeVector
 @property  NSNumber *transactionNumber
 @property  NSDate *transactionDate
 @property  NSString *exportingPeerID

  // instance methods
  -[PFUbiquityPeerSnapshot dealloc]
  -[PFUbiquityPeerSnapshot isEqual:]
  -[PFUbiquityPeerSnapshot compare:]
  -[PFUbiquityPeerSnapshot transactionNumber]
  -[PFUbiquityPeerSnapshot exportingPeerID]
  -[PFUbiquityPeerSnapshot knowledgeVector]
  -[PFUbiquityPeerSnapshot transactionDate]
  -[PFUbiquityPeerSnapshot initWithTranasctionEntry:andLogSnapshot:]
  -[PFUbiquityPeerSnapshot logSnapshot]
  -[PFUbiquityPeerSnapshot diffFromPrevious]
  -[PFUbiquityPeerSnapshot initWithExportingPeerID:logSnapshot:transactionNumber:transactionDate:andKnowledgeVector:]
  -[PFUbiquityPeerSnapshot computeDiffToPreviousSnapshot:]
  -[PFUbiquityPeerSnapshot removeValuesChangedByPeerSnapshot:]


PFUbiquityPeerSnapshotCollection : NSObject
  // instance methods
  -[PFUbiquityPeerSnapshotCollection init]
  -[PFUbiquityPeerSnapshotCollection dealloc]
  -[PFUbiquityPeerSnapshotCollection addSnapshot:]
  -[PFUbiquityPeerSnapshotCollection allPeerIDs]
  -[PFUbiquityPeerSnapshotCollection calculateSnapshotDiffsWithError:]
  -[PFUbiquityPeerSnapshotCollection snapshotForKnowledgeVector:]
  -[PFUbiquityPeerSnapshotCollection snapshotForPeerID:andTransactionNumber:]
  -[PFUbiquityPeerSnapshotCollection knowledgeVectorsForTransactionNumber:exportedByPeerWithID:]


_NSDataFileBackedFuture : NSData /usr/lib/libicucore.A.dylib <_NSFileBackedFuture, NSSecureCoding>
 @property  NSURL *fileURL
 @property  unsigned long fileSize
 @property  NSUUID *UUID
 @property  NSURL *_fileURLForSaving
 @property  NSURL *originalFileURL

  // class methods
  +[_NSDataFileBackedFuture supportsSecureCoding]
  +[_NSDataFileBackedFuture classForKeyedUnarchiver]

  // instance methods
  -[_NSDataFileBackedFuture dealloc]
  -[_NSDataFileBackedFuture length]
  -[_NSDataFileBackedFuture isEqual:]
  -[_NSDataFileBackedFuture bytes]
  -[_NSDataFileBackedFuture encodeWithCoder:]
  -[_NSDataFileBackedFuture initWithCoder:]
  -[_NSDataFileBackedFuture classForCoder]
  -[_NSDataFileBackedFuture classForArchiver]
  -[_NSDataFileBackedFuture fileSize]
  -[_NSDataFileBackedFuture UUID]
  -[_NSDataFileBackedFuture fileURL]
  -[_NSDataFileBackedFuture initWithStoreMetadata:directory:]
  -[_NSDataFileBackedFuture _storeMetadata]
  -[_NSDataFileBackedFuture _bytesPtrForStore]
  -[_NSDataFileBackedFuture _bytesLengthForStore]
  -[_NSDataFileBackedFuture initWithStoreMetadata:directory:originalFileURL:]
  -[_NSDataFileBackedFuture originalFileURL]
  -[_NSDataFileBackedFuture _fileURLForSaving]
  -[_NSDataFileBackedFuture _isCloudKitSupportOriginated]
  -[_NSDataFileBackedFuture initWithURL:UUID:size:]
  -[_NSDataFileBackedFuture initWithDirectoryURL:UUID:originalURL:]
  -[_NSDataFileBackedFuture initWithURLForSaving:]
  -[_NSDataFileBackedFuture _evictFile:]
  -[_NSDataFileBackedFuture fileURLNoReally]
  -[_NSDataFileBackedFuture _interimLocationURL]
  -[_NSDataFileBackedFuture _underlyingData]
  -[_NSDataFileBackedFuture _setStoreMetadata:]
  -[_NSDataFileBackedFuture _copyToInterimLocation]
  -[_NSDataFileBackedFuture _moveToPermanentLocation]
  -[_NSDataFileBackedFuture setOriginalFileURL:]


_NSCloudKitDataFileBackedFuture : _NSDataFileBackedFuture
  // instance methods
  -[_NSCloudKitDataFileBackedFuture initWithStoreMetadata:directory:originalFileURL:]
  -[_NSCloudKitDataFileBackedFuture _isCloudKitSupportOriginated]
  -[_NSCloudKitDataFileBackedFuture _copyToInterimLocation]
  -[_NSCloudKitDataFileBackedFuture _moveToPermanentLocation]


PFCloudKitStoreMonitor : NSObject
 @property  NSObject<OS_dispatch_group> *monitorGroup
 @property  NSPersistentStoreCoordinator *monitoredCoordinator
 @property  NSPersistentStore *monitoredStore
 @property  int retryCount
 @property  int timeoutSeconds
 @property  BOOL declaredDead
 @property  BOOL storeIsAlive
 @property  NSString *storeIdentifier

  // instance methods
  -[PFCloudKitStoreMonitor dealloc]
  -[PFCloudKitStoreMonitor .cxx_destruct]
  -[PFCloudKitStoreMonitor performBlock:]
  -[PFCloudKitStoreMonitor timeoutSeconds]
  -[PFCloudKitStoreMonitor retryCount]
  -[PFCloudKitStoreMonitor initForStore:]
  -[PFCloudKitStoreMonitor storeIsAlive]
  -[PFCloudKitStoreMonitor newBackgroundContextForMonitoredCoordinator]
  -[PFCloudKitStoreMonitor storeIdentifier]
  -[PFCloudKitStoreMonitor retainedMonitoredCoordinator]
  -[PFCloudKitStoreMonitor coordinatorWillRemoveStore:]
  -[PFCloudKitStoreMonitor declareStoreDead]
  -[PFCloudKitStoreMonitor pfcloudstoremonitor_is_holding_your_store_open_waiting_for_cloudkit_activity_to_finish]
  -[PFCloudKitStoreMonitor instantiateNewBackgroundContext]
  -[PFCloudKitStoreMonitor monitorGroup]
  -[PFCloudKitStoreMonitor monitoredCoordinator]
  -[PFCloudKitStoreMonitor monitoredStore]
  -[PFCloudKitStoreMonitor declaredDead]


PFUbiquityToManyConflictDiff : NSObject
 @property  NSMutableSet *insertedObjectIDs
 @property  NSMutableSet *deletedObjectIDs
 @property  NSString *relationshipKey

  // instance methods
  -[PFUbiquityToManyConflictDiff init]
  -[PFUbiquityToManyConflictDiff dealloc]
  -[PFUbiquityToManyConflictDiff isEqual:]
  -[PFUbiquityToManyConflictDiff deletedObjectIDs]
  -[PFUbiquityToManyConflictDiff insertedObjectIDs]
  -[PFUbiquityToManyConflictDiff initForRelationshipAtKey:]
  -[PFUbiquityToManyConflictDiff diffWithLogSnapshot:andPreviousSnapshot:]
  -[PFUbiquityToManyConflictDiff relationshipKey]


PFCloudKitLogging : NSObject
  // class methods
  +[PFCloudKitLogging setCatastrophicLoggingLevel]

  // instance methods
  -[PFCloudKitLogging init]
  -[PFCloudKitLogging dealloc]


PFUbiquityMigrationManager : NSObject
 @property  NSManagedObjectModel *sourceModel
 @property  NSManagedObjectModel *destinationModel
 @property  PFUbiquityLocation *rootLocation

  // instance methods
  -[PFUbiquityMigrationManager dealloc]
  -[PFUbiquityMigrationManager sourceModel]
  -[PFUbiquityMigrationManager destinationModel]
  -[PFUbiquityMigrationManager rootLocation]
  -[PFUbiquityMigrationManager initWithDestinationModel:sourceModel:ubiquityRootLocation:localPeerID:]
  -[PFUbiquityMigrationManager initWithDestinationModel:storeName:previousModelVersionHash:ubiquityRootLocation:localPeerID:]
  -[PFUbiquityMigrationManager migrateTransactionLogs:andBaselineIfNecessaryForStoreName:peerID:error:]


PFUbiquityBaselineRecoveryOperation : PFUbiquityBaselineOperation
 @property  NSObject<PFUbiquityBaselineRecoveryOperationDelegate> *delegate

  // instance methods
  -[PFUbiquityBaselineRecoveryOperation isEqual:]
  -[PFUbiquityBaselineRecoveryOperation delegate]
  -[PFUbiquityBaselineRecoveryOperation setDelegate:]
  -[PFUbiquityBaselineRecoveryOperation main]
  -[PFUbiquityBaselineRecoveryOperation retainedDelegate]
  -[PFUbiquityBaselineRecoveryOperation electBaselineURLFromVersions:withBaseline:error:]
  -[PFUbiquityBaselineRecoveryOperation hasCurrentBaseline]
  -[PFUbiquityBaselineRecoveryOperation conflictsExistForBaseline:]
  -[PFUbiquityBaselineRecoveryOperation resolveConflictsForBaseline:withError:]
  -[PFUbiquityBaselineRecoveryOperation shouldReplaceLocalStoreWithBaseline:]
  -[PFUbiquityBaselineRecoveryOperation replaceLocalStoreWithBaseline:error:]
  -[PFUbiquityBaselineRecoveryOperation electAncestorBaselineForConflictedBaselines:dissentingBaselines:]


PFUbiquityStoreMetadata : NSManagedObject
 @property  NSDictionary *storeOptions
 @property  NSURL *ubiquityRootURL
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSData *storeOptionsBinaryPlistData
 @property  NSString *modelVersionHashString
 @property  NSString *storeURLString
 @property  NSString *ubiquityName
 @property  NSString *storeType
 @property  NSString *ubiquityRootURLString
 @property  NSString *storeIdentifier
 @property  NSString *ubiquityRelativePath
 @property  NSSet *transactionEntries
 @property  NSSet *peerStates
 @property  NSSet *primaryKeyRanges

  // class methods
  +[PFUbiquityStoreMetadata metadataForStoreWithName:inManagedObjectContext:]
  +[PFUbiquityStoreMetadata storeMetadatasWithName:inManagedObjectContext:]
  +[PFUbiquityStoreMetadata baselineRootDirectoryForUbiquityName:andUbiquityLogURL:]
  +[PFUbiquityStoreMetadata allStoreMetadataInManagedObjectContext:]
  +[PFUbiquityStoreMetadata baselineStoreURLForUbiquityName:andUbiquityLogURL:]
  +[PFUbiquityStoreMetadata baselineModelURLForUbiquityName:andUbiquityLogURL:]
  +[PFUbiquityStoreMetadata baselineGCModelURLForUbiquityName:andUbiquityLogURL:]
  +[PFUbiquityStoreMetadata baselineMetaFileURLForUbiquityName:andUbiquityLogURL:]
  +[PFUbiquityStoreMetadata isBaselineRootURL:]

  // instance methods
  -[PFUbiquityStoreMetadata ubiquityRootLocation]
  -[PFUbiquityStoreMetadata ubiquityRootURL]
  -[PFUbiquityStoreMetadata setStoreOptions:]
  -[PFUbiquityStoreMetadata peerStateForPeerID:]
  -[PFUbiquityStoreMetadata initWithUbiquityName:andUbiquityRootLocation:insertIntoManagedObjectContext:]
  -[PFUbiquityStoreMetadata updateWithStore:andRootLocation:]
  -[PFUbiquityStoreMetadata loadFromBaselineMetadata:withLocalPeerID:]
  -[PFUbiquityStoreMetadata updatePeerStatesToMatchKnowledgeVector:]
  -[PFUbiquityStoreMetadata storeOptions]


PFUbiquityPeerRange : NSManagedObject
 @property  NSNumber *peerStart
 @property  NSNumber *end
 @property  NSNumber *peerEnd
 @property  NSString *peerEntityName
 @property  NSNumber *start
 @property  PFUbiquityPeer *peer
 @property  PFUbiquityStoreMetadata *storeMetadata

  // instance methods
  -[PFUbiquityPeerRange loadFromBaselineDictionary:]


PFUbiquityKnowledgeVector : NSObject <NSCoding, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  unsigned long length

  // class methods
  +[PFUbiquityKnowledgeVector supportsSecureCoding]
  +[PFUbiquityKnowledgeVector createSetOfAllPeerIDsInKnowledgeVectors:]
  +[PFUbiquityKnowledgeVector createKnowledgeVectorDictionaryFromString:]

  // instance methods
  -[PFUbiquityKnowledgeVector init]
  -[PFUbiquityKnowledgeVector dealloc]
  -[PFUbiquityKnowledgeVector length]
  -[PFUbiquityKnowledgeVector isEqual:]
  -[PFUbiquityKnowledgeVector copyWithZone:]
  -[PFUbiquityKnowledgeVector compare:]
  -[PFUbiquityKnowledgeVector encodeWithCoder:]
  -[PFUbiquityKnowledgeVector initWithCoder:]
  -[PFUbiquityKnowledgeVector transactionNumberForPeerID:]
  -[PFUbiquityKnowledgeVector initWithStoreKnowledgeVectorDictionary:]
  -[PFUbiquityKnowledgeVector updateWithKnowledgeVector:]
  -[PFUbiquityKnowledgeVector isZeroVector]
  -[PFUbiquityKnowledgeVector isAncestorOfKnowledgeVector:]
  -[PFUbiquityKnowledgeVector allPeerIDs]
  -[PFUbiquityKnowledgeVector conflictsWithKnowledgeVector:]
  -[PFUbiquityKnowledgeVector createStoreKnowledgeVectorDictionary]
  -[PFUbiquityKnowledgeVector newKnowledgeVectorByDecrementingPeerWithID:]
  -[PFUbiquityKnowledgeVector createKnowledgeVectorString]
  -[PFUbiquityKnowledgeVector newKnowledgeVectorBySubtractingVector:]
  -[PFUbiquityKnowledgeVector initWithKnowledgeVectorDictionary:]
  -[PFUbiquityKnowledgeVector newKnowledgeVectorByAddingKnowledgeVector:]
  -[PFUbiquityKnowledgeVector createAncestorVectorForConflictingVector:]
  -[PFUbiquityKnowledgeVector newKnowledgeVectorByIncrementingPeerWithID:]
  -[PFUbiquityKnowledgeVector createSetOfAllPeerIDsWithOtherVector:]
  -[PFUbiquityKnowledgeVector _updateHash]
  -[PFUbiquityKnowledgeVector initFromCopy:storeKVDict:hash:]
  -[PFUbiquityKnowledgeVector initWithKnowledgeVectorDictionary:andStoreKnowledgeVectorDictionary:]
  -[PFUbiquityKnowledgeVector initWithKnowledgeVectorString:]
  -[PFUbiquityKnowledgeVector hasPeerIDInCommonWith:]
  -[PFUbiquityKnowledgeVector isDescendantOfKnowledgeVector:]
  -[PFUbiquityKnowledgeVector decrementToMinimumWithKnowledgeVector:]
  -[PFUbiquityKnowledgeVector canMergeWithKnowledgeVector:]


PFUbiquityPeerReceipt : PFUbiquitySafeSaveFile
 @property  PFUbiquityLocation *receiptFileLocation
 @property  PFUbiquityKnowledgeVector *kv
 @property  NSDate *writeDate

  // instance methods
  -[PFUbiquityPeerReceipt init]
  -[PFUbiquityPeerReceipt dealloc]
  -[PFUbiquityPeerReceipt initWithLocalPeerID:andKnowledgeVector:forPeerID:storeName:modelVersionHash:andUbiquityRootLocation:]
  -[PFUbiquityPeerReceipt kv]
  -[PFUbiquityPeerReceipt initWithLocalPeerID:andReceiptFileLocation:]
  -[PFUbiquityPeerReceipt writeDate]
  -[PFUbiquityPeerReceipt loadFileFromLocation:error:]
  -[PFUbiquityPeerReceipt writeFileToLocation:error:]
  -[PFUbiquityPeerReceipt initWithLocalPeerID:receiptPeerID:storeName:modelVersionHash:andUbiquityRootLocation:]
  -[PFUbiquityPeerReceipt receiptFileLocation]
  -[PFUbiquityPeerReceipt setWriteDate:]


PFUbiquityImportOperation : NSOperation /usr/lib/libcompression.dylib
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSPersistentStore *store
 @property  NSObject *delegate

  // instance methods
  -[PFUbiquityImportOperation init]
  -[PFUbiquityImportOperation dealloc]
  -[PFUbiquityImportOperation delegate]
  -[PFUbiquityImportOperation setDelegate:]
  -[PFUbiquityImportOperation cancel]
  -[PFUbiquityImportOperation store]
  -[PFUbiquityImportOperation localPeerID]
  -[PFUbiquityImportOperation storeName]
  -[PFUbiquityImportOperation ubiquityRootLocation]
  -[PFUbiquityImportOperation initWithPersistentStore:localPeerID:andUbiquityRootLocation:]
  -[PFUbiquityImportOperation retainedDelegate]
  -[PFUbiquityImportOperation storeWillBeRemoved:]
  -[PFUbiquityImportOperation lockDelegateLock]
  -[PFUbiquityImportOperation unlockDelegateLock]
  -[PFUbiquityImportOperation initWithStoreName:localPeerID:andUbiquityRootLocation:]


NSCloudKitMirroringResult : NSPersistentStoreResult
 @property  NSCloudKitMirroringRequest *request
 @property  BOOL success
 @property  BOOL madeChanges
 @property  NSError *error

  // instance methods
  -[NSCloudKitMirroringResult dealloc]
  -[NSCloudKitMirroringResult error]
  -[NSCloudKitMirroringResult request]
  -[NSCloudKitMirroringResult success]
  -[NSCloudKitMirroringResult initWithRequest:success:madeChanges:error:]
  -[NSCloudKitMirroringResult madeChanges]


PFUbiquityStoreMetadataMedic : NSObject
 @property  NSString *localPeerID
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *storeName
 @property  NSPersistentStore *store
 @property  NSSQLiteConnection *connection

  // instance methods
  -[PFUbiquityStoreMetadataMedic dealloc]
  -[PFUbiquityStoreMetadataMedic connection]
  -[PFUbiquityStoreMetadataMedic store]
  -[PFUbiquityStoreMetadataMedic localPeerID]
  -[PFUbiquityStoreMetadataMedic storeName]
  -[PFUbiquityStoreMetadataMedic ubiquityRootLocation]
  -[PFUbiquityStoreMetadataMedic initWithStore:localPeerID:andUbiquityRootLocation:]
  -[PFUbiquityStoreMetadataMedic recoverMetadataWithError:]
  -[PFUbiquityStoreMetadataMedic recoverBaselineMetadataWithImportContext:error:]
  -[PFUbiquityStoreMetadataMedic recoverTransactionLogMetadataWithImportContext:error:]
  -[PFUbiquityStoreMetadataMedic addTransactionHistoryEntriesForObjectIDs:withImportContext:error:]
  -[PFUbiquityStoreMetadataMedic cacheMetadataForTransactionLog:withImportContext:error:]


CDDCloudKitRegisteredClient : NSManagedObject
 @property  NSString *bundleIdentifier
 @property  NSString *storePath
 @property  NSString *storeConfigurationName
 @property  NSString *fileProtectionType
 @property  NSSet *scheduledActivities
 @property  NSString *containerIdentifier

  // class methods
  +[CDDCloudKitRegisteredClient entityName]


PFHistoryAnalyzer : NSObject
 @property  PFHistoryAnalyzerOptions *options

  // instance methods
  -[PFHistoryAnalyzer init]
  -[PFHistoryAnalyzer dealloc]
  -[PFHistoryAnalyzer options]
  -[PFHistoryAnalyzer initWithOptions:]
  -[PFHistoryAnalyzer processTransaction:withContext:error:]
  -[PFHistoryAnalyzer instantiateNewAnalyzerContext]
  -[PFHistoryAnalyzer newAnalyzerContextForStore:sinceLastHistoryToken:inManagedObjectContext:error:]


PFUbiquityBaselineRollResponseOperation : PFUbiquityBaselineRollOperation
 @property  NSObject<PFUbiquityBaselineRollResponseOperationDelegate> *delegate

  // instance methods
  -[PFUbiquityBaselineRollResponseOperation delegate]
  -[PFUbiquityBaselineRollResponseOperation setDelegate:]
  -[PFUbiquityBaselineRollResponseOperation main]
  -[PFUbiquityBaselineRollResponseOperation retainedDelegate]
  -[PFUbiquityBaselineRollResponseOperation canAdoptBaseline:byReplacingLocalStoreFile:withStack:withError:]


NSCloudKitMirroringExportProgressRequest : NSCloudKitMirroringRequest
 @property  NSSet *objectIDsToFetch

  // instance methods
  -[NSCloudKitMirroringExportProgressRequest dealloc]
  -[NSCloudKitMirroringExportProgressRequest copyWithZone:]
  -[NSCloudKitMirroringExportProgressRequest initWithOptions:completionBlock:]
  -[NSCloudKitMirroringExportProgressRequest setObjectIDsToFetch:]
  -[NSCloudKitMirroringExportProgressRequest objectIDsToFetch]


NSCloudKitMirroringExportProgressResult : NSCloudKitMirroringResult
 @property  NSDictionary *objectIDToLastExportedToken

  // instance methods
  -[NSCloudKitMirroringExportProgressResult dealloc]
  -[NSCloudKitMirroringExportProgressResult initWithRequest:objectIDToLastExportedToken:error:]
  -[NSCloudKitMirroringExportProgressResult objectIDToLastExportedToken]


PFUbiquityBaselineOperation : PFUbiquityImportOperation
 @property  NSString *modelVersionHash
 @property  NSManagedObjectModel *model

  // instance methods
  -[PFUbiquityBaselineOperation dealloc]
  -[PFUbiquityBaselineOperation model]
  -[PFUbiquityBaselineOperation modelVersionHash]
  -[PFUbiquityBaselineOperation initWithPersistentStore:localPeerID:andUbiquityRootLocation:]


PFUbiquitySetupAssistant : NSObject
 @property  NSDictionary *options
 @property  BOOL ubiquityEnabled
 @property  BOOL needsMetadataRecovery
 @property  NSString *localPeerID
 @property  NSURL *ubiquityRootURL
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  PFUbiquityLocation *localRootLocation
 @property  PFUbiquityContainerIdentifier *containerIdentifier
 @property  BOOL useLocalAccount
 @property  BOOL storeWasMigrated
 @property  NSURL *actualStoreFileURL
 @property  BOOL abortSetup
 @property  PFUbiquityKnowledgeVector *storeKV
 @property  unsigned long retryDelaySec
 @property  BOOL cacheFilePresenterForUbiquityRoot
 @property  BOOL failSetup
 @property  NSError *failSetupError

  // class methods
  +[PFUbiquitySetupAssistant removeUbiquityMetadataFromStore:]
  +[PFUbiquitySetupAssistant findContainerIDForToken:storeName:haveExistingMappings:]
  +[PFUbiquitySetupAssistant createDefaultLocalPeerID]
  +[PFUbiquitySetupAssistant createActualStoreURLForStoreURL:localPeerID:containerIdentifier:andStoreName:]
  +[PFUbiquitySetupAssistant setContainerIdentifierUUID:forIdentityToken:forStoreName:]
  +[PFUbiquitySetupAssistant doBasicSanityCheckForUbiquityRootURL:withError:]
  +[PFUbiquitySetupAssistant createBaselineFromMostRecentLocation:localPeerID:error:]
  +[PFUbiquitySetupAssistant generateMachineUUIDString]
  +[PFUbiquitySetupAssistant ubiquityMetadataTablesPresentInStore:]
  +[PFUbiquitySetupAssistant cleanUserDefaultsForStore:]

  // instance methods
  -[PFUbiquitySetupAssistant init]
  -[PFUbiquitySetupAssistant dealloc]
  -[PFUbiquitySetupAssistant options]
  -[PFUbiquitySetupAssistant containerIdentifier]
  -[PFUbiquitySetupAssistant localPeerID]
  -[PFUbiquitySetupAssistant ubiquityRootLocation]
  -[PFUbiquitySetupAssistant initWithPersistentStoreCoordinator:andStoreOptions:forPersistentStoreOfType:atURL:]
  -[PFUbiquitySetupAssistant validateOptionsWithError:]
  -[PFUbiquitySetupAssistant ubiquityEnabled]
  -[PFUbiquitySetupAssistant actualStoreFileURL]
  -[PFUbiquitySetupAssistant setStoreWasMigrated:]
  -[PFUbiquitySetupAssistant performCoordinatorPostStoreSetup:error:]
  -[PFUbiquitySetupAssistant setCacheFilePresenterForUbiquityRoot:]
  -[PFUbiquitySetupAssistant canReadFromUbiquityRootLocation:]
  -[PFUbiquitySetupAssistant ubiquityRootURL]
  -[PFUbiquitySetupAssistant localRootLocation]
  -[PFUbiquitySetupAssistant coordinatorWillRemoveStore:]
  -[PFUbiquitySetupAssistant setAbortSetup:]
  -[PFUbiquitySetupAssistant storeKV]
  -[PFUbiquitySetupAssistant useLocalAccount]
  -[PFUbiquitySetupAssistant setFailSetupError:]
  -[PFUbiquitySetupAssistant doPostValidationInit:]
  -[PFUbiquitySetupAssistant longDescription]
  -[PFUbiquitySetupAssistant getCurrentUbiquityIdentityToken]
  -[PFUbiquitySetupAssistant ubiquityIdentityTokenChanged:]
  -[PFUbiquitySetupAssistant initializeStoreKnowledgeVectorFromStore:error:]
  -[PFUbiquitySetupAssistant finishSetupWithRetry:]
  -[PFUbiquitySetupAssistant finishSetupForStore:error:]
  -[PFUbiquitySetupAssistant cleanUpFromFailedSetup:]
  -[PFUbiquitySetupAssistant detectAndFixForkedContainer:store:error:]
  -[PFUbiquitySetupAssistant initializeReceiptFile:]
  -[PFUbiquitySetupAssistant initializeContainerIdentifierWithStore:error:]
  -[PFUbiquitySetupAssistant initializeStack:]
  -[PFUbiquitySetupAssistant initializeBaselineForStore:error:]
  -[PFUbiquitySetupAssistant checkKnowledgeVectorsAndBaselineWithStore:error:]
  -[PFUbiquitySetupAssistant sideLoadStore:error:]
  -[PFUbiquitySetupAssistant respondToBaselineRoll:]
  -[PFUbiquitySetupAssistant attemptMetadataRecoveryForStore:error:]
  -[PFUbiquitySetupAssistant moveLocalLogFilesToUbiquityLocation:]
  -[PFUbiquitySetupAssistant pruneStagingDirectoryForStore:error:]
  -[PFUbiquitySetupAssistant seedStore:error:]
  -[PFUbiquitySetupAssistant initialSyncComplete]
  -[PFUbiquitySetupAssistant migrationAssistant]
  -[PFUbiquitySetupAssistant updateDictionary:withShortcutSnapshot:]
  -[PFUbiquitySetupAssistant updateDictionary:withPhraseLearningJPSnapshot:]
  -[PFUbiquitySetupAssistant updateDictionary:withPhraseLearningSnapshot:]
  -[PFUbiquitySetupAssistant updateDictionary:withBigramSnapshot:]
  -[PFUbiquitySetupAssistant removeEntriesFromDictionary:withPhraseLearningJPSnapshot:]
  -[PFUbiquitySetupAssistant removeEntriesFromDictionary:withPhraseLearningSnapshot:]
  -[PFUbiquitySetupAssistant removeEntriesFromDictionary:withBigramSnapshot:]
  -[PFUbiquitySetupAssistant fixdictionary:withDeletes:]
  -[PFUbiquitySetupAssistant insertEntriesInDicitonary:inUserDictionaryManagedObjectContext:]
  -[PFUbiquitySetupAssistant insertEntriesInDicitonary:inLearningDictionaryManagedObjectContext:]
  -[PFUbiquitySetupAssistant migrateMetadataRoot:]
  -[PFUbiquitySetupAssistant exportedLog:]
  -[PFUbiquitySetupAssistant tryToReplaceLocalStore:withStoreSideLoadedByImporter:]
  -[PFUbiquitySetupAssistant createSetOfLocalLogLocations:]
  -[PFUbiquitySetupAssistant rewriteTransactionLogs:toMatchStore:error:]
  -[PFUbiquitySetupAssistant checkAndPerformMigrationForStore:error:]
  -[PFUbiquitySetupAssistant removeEntriesFromDictionary:withShortcutSnapshot:]
  -[PFUbiquitySetupAssistant insertEntriesInDicitonary:inLearningDictionaryJPManagedObjectContext:]
  -[PFUbiquitySetupAssistant insertEntriesInDicitonary:inBigramManagedObjectContext:]
  -[PFUbiquitySetupAssistant isInitialSyncComplete]
  -[PFUbiquitySetupAssistant _setUbiquityRootLocation:storeName:localPeerID:andModelVersionHash:]
  -[PFUbiquitySetupAssistant needsMetadataRecovery]
  -[PFUbiquitySetupAssistant storeWasMigrated]
  -[PFUbiquitySetupAssistant abortSetup]
  -[PFUbiquitySetupAssistant retryDelaySec]
  -[PFUbiquitySetupAssistant setRetryDelaySec:]
  -[PFUbiquitySetupAssistant failSetup]
  -[PFUbiquitySetupAssistant setFailSetup:]
  -[PFUbiquitySetupAssistant failSetupError]
  -[PFUbiquitySetupAssistant cacheFilePresenterForUbiquityRoot]


NSCloudKitMirroringDelegateSetupRequest : NSCloudKitMirroringRequest

NSCloudKitMirroringDelegateSetupResult : NSCloudKitMirroringResult
 @property  CKContainer *container
 @property  CKDatabase *database

  // instance methods
  -[NSCloudKitMirroringDelegateSetupResult dealloc]
  -[NSCloudKitMirroringDelegateSetupResult container]
  -[NSCloudKitMirroringDelegateSetupResult database]
  -[NSCloudKitMirroringDelegateSetupResult initWithRequest:success:error:container:database:]


PFHistoryAnalyzerContext : NSObject
 @property  PFHistoryAnalyzerOptions *options
 @property  NSSet *processedTransactionIDs
 @property  NSPersistentHistoryToken *finalHistoryToken
 @property  BOOL isFinished

  // instance methods
  -[PFHistoryAnalyzerContext dealloc]
  -[PFHistoryAnalyzerContext options]
  -[PFHistoryAnalyzerContext initWithOptions:]
  -[PFHistoryAnalyzerContext isFinished]
  -[PFHistoryAnalyzerContext reset:]
  -[PFHistoryAnalyzerContext finalHistoryToken]
  -[PFHistoryAnalyzerContext resetStateForObjectID:error:]
  -[PFHistoryAnalyzerContext processChange:error:]
  -[PFHistoryAnalyzerContext analyzerStateForChangedObjectID:error:]
  -[PFHistoryAnalyzerContext finishProcessing:]
  -[PFHistoryAnalyzerContext fetchSortedStates:]
  -[PFHistoryAnalyzerContext newAnalyzerStateForChange:error:]
  -[PFHistoryAnalyzerContext processTransaction:error:]
  -[PFHistoryAnalyzerContext shouldPruneAnalyzerState:]
  -[PFHistoryAnalyzerContext processFinalState:]
  -[PFHistoryAnalyzerContext processedTransactionIDs]


PFUbiquityContainerIdentifier : NSObject <NSFilePresenter>
 @property  NSString *uuidString
 @property  PFUbiquityLocation *uuidFileLocation
 @property  BOOL usedExistingUUIDFile
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes

  // instance methods
  -[PFUbiquityContainerIdentifier init]
  -[PFUbiquityContainerIdentifier dealloc]
  -[PFUbiquityContainerIdentifier presentedItemURL]
  -[PFUbiquityContainerIdentifier presentedItemOperationQueue]
  -[PFUbiquityContainerIdentifier accommodatePresentedItemDeletionWithCompletionHandler:]
  -[PFUbiquityContainerIdentifier uuidString]
  -[PFUbiquityContainerIdentifier initWithLocalPeerID:storeName:andUbiquityRootLocation:]
  -[PFUbiquityContainerIdentifier identifyContainer:]
  -[PFUbiquityContainerIdentifier usedExistingUUIDFile]
  -[PFUbiquityContainerIdentifier replaceIdentifierWithUUID:error:]
  -[PFUbiquityContainerIdentifier setUUIDStringFromLocation:]
  -[PFUbiquityContainerIdentifier writeToDisk:]
  -[PFUbiquityContainerIdentifier uuidFileLocation]


PFUbiquityPeerRangeCache : NSObject
 @property  NSString *localPeerID
 @property  NSString *storeName
 @property  NSPersistentStore *privateStore
 @property  NSDictionary *translatedGlobalIDs

  // class methods
  +[PFUbiquityPeerRangeCache initialize]
  +[PFUbiquityPeerRangeCache integerFromPrimaryKeyString:]
  +[PFUbiquityPeerRangeCache peerRangeStartForPrimaryKey:]

  // instance methods
  -[PFUbiquityPeerRangeCache dealloc]
  -[PFUbiquityPeerRangeCache privateStore]
  -[PFUbiquityPeerRangeCache localPeerID]
  -[PFUbiquityPeerRangeCache storeName]
  -[PFUbiquityPeerRangeCache cachePeerRanges:]
  -[PFUbiquityPeerRangeCache createMapOfManagedObjectIDsForStoreSaveSnapshot:error:]
  -[PFUbiquityPeerRangeCache refreshPeerRangeCache:]
  -[PFUbiquityPeerRangeCache createGlobalObjectIDForManagedObjectID:]
  -[PFUbiquityPeerRangeCache cacheSQLCorePeerRange:error:]
  -[PFUbiquityPeerRangeCache cachedRangeForOwningPeerID:andEntityName:withPrimaryKey:]
  -[PFUbiquityPeerRangeCache cachedRangeForLocalPrimaryKey:ofEntityNamed:]
  -[PFUbiquityPeerRangeCache createMapOfManagedObjectIDsForGlobalIDs:count:error:]
  -[PFUbiquityPeerRangeCache localPrimaryKeyForOwningPeerID:andEntityName:withPrimaryKey:]
  -[PFUbiquityPeerRangeCache initWithPrivateStore:storeName:andLocalPeerID:]
  -[PFUbiquityPeerRangeCache describeCaches]
  -[PFUbiquityPeerRangeCache describeCachesVerbose]
  -[PFUbiquityPeerRangeCache translatedGlobalIDs]


PFUbiquitySQLCorePeerRange : NSObject
 @property  NSString *owningPeerID
 @property  NSString *entityName
 @property  NSNumber *rangeStart
 @property  NSNumber *rangeEnd
 @property  NSNumber *peerStart
 @property  NSNumber *peerEnd

  // instance methods
  -[PFUbiquitySQLCorePeerRange dealloc]
  -[PFUbiquitySQLCorePeerRange entityName]
  -[PFUbiquitySQLCorePeerRange owningPeerID]
  -[PFUbiquitySQLCorePeerRange rangeStart]
  -[PFUbiquitySQLCorePeerRange rangeEnd]
  -[PFUbiquitySQLCorePeerRange peerStart]
  -[PFUbiquitySQLCorePeerRange peerEnd]
  -[PFUbiquitySQLCorePeerRange initWithOwningPeerID:entityName:rangeStart:rangeEnd:peerStart:peerEnd:]


PFUbiquityMetadataFactory : NSObject
  // class methods
  +[PFUbiquityMetadataFactory initialize]
  +[PFUbiquityMetadataFactory sharedFactory]

  // instance methods
  -[PFUbiquityMetadataFactory init]
  -[PFUbiquityMetadataFactory dealloc]
  -[PFUbiquityMetadataFactory newMetadataManagedObjectModel]
  -[PFUbiquityMetadataFactory newStackForLocalPeerID:storeName:andUbiquityRootLocation:error:]
  -[PFUbiquityMetadataFactory entryForLocalPeerID:storeName:andUbiquityRootLocation:]
  -[PFUbiquityMetadataFactory removeCachedCoordinatorsForLocalPeerID:storeName:andUbiquityRootLocation:]
  -[PFUbiquityMetadataFactory cacheEntryForLocalPeerID:storeName:andUbiquityRootLocation:error:]
  -[PFUbiquityMetadataFactory newMetadataEntryForLocalPeerID:storeName:andUbiquityRootLocation:error:]
  -[PFUbiquityMetadataFactory createMetadataModel]
  -[PFUbiquityMetadataFactory newEntityForName:]
  -[PFUbiquityMetadataFactory newAttributeNamed:attributeType:isOptional:isTransient:withDefaultValue:andMinValue:andMaxValue:]
  -[PFUbiquityMetadataFactory newRelationshipNamed:withDestinationEntity:andInverseRelationship:isOptional:isToMany:andDeleteRule:]
  -[PFUbiquityMetadataFactory addModelingToolUserInfoToEntity:]
  -[PFUbiquityMetadataFactory addModelingToolUserInfoToProperty:]
  -[PFUbiquityMetadataFactory removeAllCoordinatorsForRootLocation:]


PFUbiquityMetadataFactoryEntry : NSObject
 @property  PFUbiquityLocation *metadataStoreFileLocation
 @property  PFUbiquityMetadataFactoryFilePresenter *filePresenter
 @property  NSPersistentStoreCoordinator *psc
 @property  NSPersistentStore *store

  // instance methods
  -[PFUbiquityMetadataFactoryEntry init]
  -[PFUbiquityMetadataFactoryEntry dealloc]
  -[PFUbiquityMetadataFactoryEntry store]
  -[PFUbiquityMetadataFactoryEntry filePresenter]
  -[PFUbiquityMetadataFactoryEntry psc]
  -[PFUbiquityMetadataFactoryEntry metadataStoreFileLocation]
  -[PFUbiquityMetadataFactoryEntry initWithMetadataStoreFileLocation:]
  -[PFUbiquityMetadataFactoryEntry initializePersistentStoreCoordinator:]


PFCloudKitThrottledNotificationObserver : NSObject
 @property  NSString *label
 @property  long long notificationStalenessInterval
 @property  @? notificationHandlerBlock

  // instance methods
  -[PFCloudKitThrottledNotificationObserver dealloc]
  -[PFCloudKitThrottledNotificationObserver setLabel:]
  -[PFCloudKitThrottledNotificationObserver label]
  -[PFCloudKitThrottledNotificationObserver initWithLabel:]
  -[PFCloudKitThrottledNotificationObserver setNotificationStalenessInterval:]
  -[PFCloudKitThrottledNotificationObserver setNotificationHandlerBlock:]
  -[PFCloudKitThrottledNotificationObserver noteRecievedNotification:]
  -[PFCloudKitThrottledNotificationObserver notificationStalenessInterval]
  -[PFCloudKitThrottledNotificationObserver notificationHandlerBlock]


PFUbiquityPeerRangeReservationContext : NSObject
 @property  NSPersistentStoreCoordinator *psc
 @property  NSPersistentStore *store
 @property  NSManagedObjectContext *moc
 @property  NSArray *globalObjectIDs
 @property  long long numRangesToReserve
 @property  NSDictionary *peerEntityNameRangeStartSet

  // instance methods
  -[PFUbiquityPeerRangeReservationContext init]
  -[PFUbiquityPeerRangeReservationContext dealloc]
  -[PFUbiquityPeerRangeReservationContext store]
  -[PFUbiquityPeerRangeReservationContext moc]
  -[PFUbiquityPeerRangeReservationContext psc]
  -[PFUbiquityPeerRangeReservationContext globalObjectIDs]
  -[PFUbiquityPeerRangeReservationContext initWithPersistentStore:andGlobalObjectIDs:]
  -[PFUbiquityPeerRangeReservationContext prepareForRangeReservationWithRangeStart:andGlobalID:andEntityName:]
  -[PFUbiquityPeerRangeReservationContext createLocalIDStringForStoreUUID:entityName:andPrimaryKeyString:]
  -[PFUbiquityPeerRangeReservationContext numRangesToReserve]
  -[PFUbiquityPeerRangeReservationContext createNewPeerRangesWithCache:Error:]
  -[PFUbiquityPeerRangeReservationContext peerEntityNameRangeStartSet]


NSCKExportMetadata : NSManagedObject
 @property  NSDate *exportedAt
 @property  NSString *identifier
 @property  NSPersistentHistoryToken *historyToken
 @property  NSSet *operations

  // class methods
  +[NSCKExportMetadata entityPath]


NSCloudKitMirroringDelegatePreJazzkonMetadata : NSObject
 @property  NSPersistentStore *store
 @property  NSDictionary *keyToPreviousServerChangeToken
 @property  BOOL loaded
 @property  BOOL hasChanges
 @property  BOOL hasInitializedZone
 @property  BOOL hasInitializedZoneSubscription
 @property  BOOL hasInitializedDatabaseSubscription
 @property  NSString *ckIdentityRecordName
 @property  BOOL hasCheckedCKIdentity
 @property  NSPersistentHistoryToken *lastHistoryToken

  // class methods
  +[NSCloudKitMirroringDelegatePreJazzkonMetadata allDefaultsKeys]

  // instance methods
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata dealloc]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata isEqual:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata .cxx_destruct]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata hasChanges]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata initWithStore:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata store]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata save:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata load:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata changeTokenForDatabaseScope:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata hasInitializedDatabaseSubscription]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata hasInitializedZoneSubscription]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata hasInitializedZone]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata changeTokenForZoneWithID:inDatabaseWithScope:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata lastHistoryToken]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata ckIdentityRecordName]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata hasCheckedCKIdentity]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata safeString:isEqualToString:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata safeDictionary:isEqualToDictionary:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata _keyForZoneWithID:inDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata _keyForZoneName:owner:databseScope:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata _keyForDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata _keyForDatabaseScope:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata _setChangeToken:forKey:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata updateStoreMetadata:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata cliDescription]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setHasInitializedZone:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setHasInitializedZoneSubscription:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setHasInitializedDatabaseSubscription:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setCKIdentityRecordName:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setHasCheckedCKIdentity:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata changeTokenForZoneWithID:inDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata changeTokenForDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setChangeToken:forZoneWithID:inDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setChangeToken:forDatabase:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata purgeCachedChangeTokens]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata countChangeTokens]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata setLastHistoryToken:]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata loaded]
  -[NSCloudKitMirroringDelegatePreJazzkonMetadata keyToPreviousServerChangeToken]


PFUbiquityMetadataFactoryFilePresenter : NSObject <NSFilePresenter>
 @property  NSURL *presentedItemURL
 @property  PFUbiquityLocation *presentedItemLocation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes

  // class methods
  +[PFUbiquityMetadataFactoryFilePresenter initialize]

  // instance methods
  -[PFUbiquityMetadataFactoryFilePresenter init]
  -[PFUbiquityMetadataFactoryFilePresenter dealloc]
  -[PFUbiquityMetadataFactoryFilePresenter presentedItemURL]
  -[PFUbiquityMetadataFactoryFilePresenter presentedItemOperationQueue]
  -[PFUbiquityMetadataFactoryFilePresenter savePresentedItemChangesWithCompletionHandler:]
  -[PFUbiquityMetadataFactoryFilePresenter accommodatePresentedItemDeletionWithCompletionHandler:]
  -[PFUbiquityMetadataFactoryFilePresenter relinquishPresentedItemToReader:]
  -[PFUbiquityMetadataFactoryFilePresenter relinquishPresentedItemToWriter:]
  -[PFUbiquityMetadataFactoryFilePresenter initWithMetadataStoreFileLocation:]
  -[PFUbiquityMetadataFactoryFilePresenter presentedItemLocation]


PFUbiquityTransactionLogCache : NSObject
  // instance methods
  -[PFUbiquityTransactionLogCache init]
  -[PFUbiquityTransactionLogCache dealloc]
  -[PFUbiquityTransactionLogCache cacheExportedLog:]
  -[PFUbiquityTransactionLogCache initWithLocalPeerID:andGlobalIDCache:]
  -[PFUbiquityTransactionLogCache retainedCachedLogForLocation:loadWithRetry:error:]
  -[PFUbiquityTransactionLogCache removeLogsCachedForStoreNamed:withUbiquityRootLocation:]


_PFChangeInfo : NSObject
 @property  NSManagedObject *object
 @property  unsigned long changeType
 @property  NSIndexPath *startIndexPath
 @property  NSIndexPath *finalIndexPath
 @property  _NSDefaultSectionInfo *startSectionInfo
 @property  _NSDefaultSectionInfo *finalSectionInfo

  // instance methods
  -[_PFChangeInfo dealloc]
  -[_PFChangeInfo isEqual:]
  -[_PFChangeInfo object]
  -[_PFChangeInfo initWithObject:]
  -[_PFChangeInfo changeType]
  -[_PFChangeInfo startIndexPath]
  -[_PFChangeInfo setStartIndexPath:]
  -[_PFChangeInfo initWithObject:changeType:]
  -[_PFChangeInfo setStartSectionInfo:]
  -[_PFChangeInfo startSectionInfo]
  -[_PFChangeInfo setChangeType:]
  -[_PFChangeInfo finalSectionInfo]
  -[_PFChangeInfo finalIndexPath]
  -[_PFChangeInfo setFinalIndexPath:]
  -[_PFChangeInfo setFinalSectionInfo:]


NSCloudKitMirroringDelegateOptions : NSObject
 @property  CKScheduler *scheduler
 @property  CKNotificationListener *notificationListener
 @property  BOOL skipCloudKitSetup
 @property  PFCloudKitContainerProvider *containerProvider
 @property  PFCloudKitStoreMonitorProvider *storeMonitorProvider
 @property  PFCloudKitMetricsClient *metricsClient
 @property  PFCloudKitMetadataPurger *metadataPurger
 @property  BOOL useDaemon
 @property  BOOL useTestDaemon
 @property  NSString *containerIdentifier
 @property  NSNumber *ckAssetThresholdBytes
 @property  BOOL initializeSchema
 @property  CKContainerOptions *containerOptions
 @property  BOOL useEncryptedStorage
 @property  NSNumber *operationMemoryThresholdBytes
 @property  BOOL automaticallyDownloadFileBackedFutures
 @property  BOOL automaticallyScheduleImportAndExportOperations
 @property  BOOL preserveLegacyRecordMetadataBehavior
 @property  NSString *apsConnectionMachServiceName

  // instance methods
  -[NSCloudKitMirroringDelegateOptions init]
  -[NSCloudKitMirroringDelegateOptions dealloc]
  -[NSCloudKitMirroringDelegateOptions copy]
  -[NSCloudKitMirroringDelegateOptions containerIdentifier]
  -[NSCloudKitMirroringDelegateOptions setUseEncryptedStorage:]
  -[NSCloudKitMirroringDelegateOptions setCkAssetThresholdBytes:]
  -[NSCloudKitMirroringDelegateOptions setContainerIdentifier:]
  -[NSCloudKitMirroringDelegateOptions setContainerOptions:]
  -[NSCloudKitMirroringDelegateOptions useEncryptedStorage]
  -[NSCloudKitMirroringDelegateOptions initWithCloudKitContainerOptions:]
  -[NSCloudKitMirroringDelegateOptions initWithContainerIdentifier:]
  -[NSCloudKitMirroringDelegateOptions containerProvider]
  -[NSCloudKitMirroringDelegateOptions scheduler]
  -[NSCloudKitMirroringDelegateOptions setContainerProvider:]
  -[NSCloudKitMirroringDelegateOptions setAutomaticallyScheduleImportAndExportOperations:]
  -[NSCloudKitMirroringDelegateOptions setUseDaemon:]
  -[NSCloudKitMirroringDelegateOptions metricsClient]
  -[NSCloudKitMirroringDelegateOptions skipCloudKitSetup]
  -[NSCloudKitMirroringDelegateOptions containerOptions]
  -[NSCloudKitMirroringDelegateOptions setScheduler:]
  -[NSCloudKitMirroringDelegateOptions operationMemoryThresholdBytes]
  -[NSCloudKitMirroringDelegateOptions ckAssetThresholdBytes]
  -[NSCloudKitMirroringDelegateOptions preserveLegacyRecordMetadataBehavior]
  -[NSCloudKitMirroringDelegateOptions metadataPurger]
  -[NSCloudKitMirroringDelegateOptions automaticallyDownloadFileBackedFutures]
  -[NSCloudKitMirroringDelegateOptions useTestDaemon]
  -[NSCloudKitMirroringDelegateOptions automaticallyScheduleImportAndExportOperations]
  -[NSCloudKitMirroringDelegateOptions notificationListener]
  -[NSCloudKitMirroringDelegateOptions apsConnectionMachServiceName]
  -[NSCloudKitMirroringDelegateOptions storeMonitorProvider]
  -[NSCloudKitMirroringDelegateOptions useDaemon]
  -[NSCloudKitMirroringDelegateOptions setSkipCloudKitSetup:]
  -[NSCloudKitMirroringDelegateOptions setApsConnectionMachServiceName:]
  -[NSCloudKitMirroringDelegateOptions setInitializeSchema:]
  -[NSCloudKitMirroringDelegateOptions initializeSchema]
  -[NSCloudKitMirroringDelegateOptions setOperationMemoryThresholdBytes:]
  -[NSCloudKitMirroringDelegateOptions setAutomaticallyDownloadFileBackedFutures:]
  -[NSCloudKitMirroringDelegateOptions setNotificationListener:]
  -[NSCloudKitMirroringDelegateOptions setMetricsClient:]
  -[NSCloudKitMirroringDelegateOptions setStoreMonitorProvider:]
  -[NSCloudKitMirroringDelegateOptions setMetadataPurger:]
  -[NSCloudKitMirroringDelegateOptions setUseTestDaemon:]
  -[NSCloudKitMirroringDelegateOptions setPreserveLegacyRecordMetadataBehavior:]


NSCKExportOperation : NSManagedObject
 @property  NSNumber *statusNum
 @property  NSString *identifier
 @property  NSCKExportMetadata *exportMetadata
 @property  unsigned long status
 @property  NSSet *objects

  // class methods
  +[NSCKExportOperation entityPath]

  // instance methods
  -[NSCKExportOperation status]
  -[NSCKExportOperation setStatus:]


NSCachingFetchRequest : NSFetchRequest
 @property  id _identifier
 @property  NSDictionary *substitutionVariables

  // class methods
  +[NSCachingFetchRequest _generateIdentifier]

  // instance methods
  -[NSCachingFetchRequest init]
  -[NSCachingFetchRequest dealloc]
  -[NSCachingFetchRequest copyWithZone:]
  -[NSCachingFetchRequest _identifier]
  -[NSCachingFetchRequest substitutionVariables]
  -[NSCachingFetchRequest setSubstitutionVariables:]
  -[NSCachingFetchRequest _isCachingFetchRequest]
  -[NSCachingFetchRequest _copyForDirtyContext]
  -[NSCachingFetchRequest _disableSQLStatementCaching]
  -[NSCachingFetchRequest _cachedInfoForRequestor:]
  -[NSCachingFetchRequest _cacheInfo:forRequestor:]
  -[NSCachingFetchRequest _sanityCheckVariables:]


PFUbiquityTransactionHistoryCache : NSObject
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  PFUbiquityGlobalObjectIDCache *globalIDCache
 @property  PFUbiquityKnowledgeVector *cacheKV
 @property  PFUbiquityKnowledgeVector *minCacheKV
 @property  NSArray *cachedGlobalIDs

  // instance methods
  -[PFUbiquityTransactionHistoryCache init]
  -[PFUbiquityTransactionHistoryCache dealloc]
  -[PFUbiquityTransactionHistoryCache ubiquityRootLocation]
  -[PFUbiquityTransactionHistoryCache cacheTransactionHistory:]
  -[PFUbiquityTransactionHistoryCache cacheKV]
  -[PFUbiquityTransactionHistoryCache minCacheKV]
  -[PFUbiquityTransactionHistoryCache purgeCacheAndWritePendingEntries:error:]
  -[PFUbiquityTransactionHistoryCache writePendingEntries:]
  -[PFUbiquityTransactionHistoryCache cachedTransactionHistoryForGlobalID:]
  -[PFUbiquityTransactionHistoryCache addTransactionEntryLight:needsWrite:error:]
  -[PFUbiquityTransactionHistoryCache addTransactionEntryLights:error:]
  -[PFUbiquityTransactionHistoryCache globalIDCache]
  -[PFUbiquityTransactionHistoryCache describeCaches]
  -[PFUbiquityTransactionHistoryCache describeCachesVerbose]
  -[PFUbiquityTransactionHistoryCache addTransactionEntry:error:]
  -[PFUbiquityTransactionHistoryCache initWithLocalPeerID:storeName:privateStore:andUbiquityRootLocation:]
  -[PFUbiquityTransactionHistoryCache cachedGlobalIDs]
  -[PFUbiquityTransactionHistoryCache setGlobalIDCache:]


PFUbiquityTransactionEntryLight : NSObject
 @property  PFUbiquityGlobalObjectID *globalID
 @property  int transactionType
 @property  NSString *actingPeerID
 @property  NSString *storeName
 @property  NSNumber *transactionNumber
 @property  PFUbiquityLocation *transactionLogLocation
 @property  PFUbiquityKnowledgeVector *knowledgeVector
 @property  NSDate *transactionDate

  // instance methods
  -[PFUbiquityTransactionEntryLight init]
  -[PFUbiquityTransactionEntryLight dealloc]
  -[PFUbiquityTransactionEntryLight setStoreName:]
  -[PFUbiquityTransactionEntryLight transactionNumber]
  -[PFUbiquityTransactionEntryLight storeName]
  -[PFUbiquityTransactionEntryLight transactionLogLocation]
  -[PFUbiquityTransactionEntryLight knowledgeVector]
  -[PFUbiquityTransactionEntryLight setKnowledgeVector:]
  -[PFUbiquityTransactionEntryLight setTransactionNumber:]
  -[PFUbiquityTransactionEntryLight transactionDate]
  -[PFUbiquityTransactionEntryLight setActingPeerID:]
  -[PFUbiquityTransactionEntryLight setGlobalID:]
  -[PFUbiquityTransactionEntryLight globalID]
  -[PFUbiquityTransactionEntryLight setTransactionLogLocation:]
  -[PFUbiquityTransactionEntryLight setTransactionDate:]
  -[PFUbiquityTransactionEntryLight setTransactionType:]
  -[PFUbiquityTransactionEntryLight transactionType]
  -[PFUbiquityTransactionEntryLight actingPeerID]
  -[PFUbiquityTransactionEntryLight initWithTransactionEntry:ubiquityRootLocation:andGlobalIDCache:]


PFUbiquityGlobalObjectIDCache : NSObject
 @property  NSString *storeName
 @property  NSString *localPeerID

  // class methods
  +[PFUbiquityGlobalObjectIDCache stringValueFromArray:atIndexDescribedByStringNumber:]

  // instance methods
  -[PFUbiquityGlobalObjectIDCache init]
  -[PFUbiquityGlobalObjectIDCache dealloc]
  -[PFUbiquityGlobalObjectIDCache setStoreName:]
  -[PFUbiquityGlobalObjectIDCache localPeerID]
  -[PFUbiquityGlobalObjectIDCache storeName]
  -[PFUbiquityGlobalObjectIDCache setLocalPeerID:]
  -[PFUbiquityGlobalObjectIDCache initWithLocalPeerID:forStoreName:]
  -[PFUbiquityGlobalObjectIDCache createGlobalIDForCompressedString:withEntityNames:primaryKeys:peerIDs:]
  -[PFUbiquityGlobalObjectIDCache purgeCache]
  -[PFUbiquityGlobalObjectIDCache createGlobalIDForGlobalIDString:]
  -[PFUbiquityGlobalObjectIDCache createGlobalIDForPrimaryKeyString:entityName:andOwningPeerID:]
  -[PFUbiquityGlobalObjectIDCache createGlobalIDForPrimarKey:entityName:andOwningPeerID:]


PFUbiquitySwitchboardCacheWrapper : NSObject
 @property  PFUbiquityGlobalObjectIDCache *globalIDCache
 @property  PFUbiquityPeerRangeCache *peerRangeCache
 @property  PFUbiquityTransactionLogCache *transactionLogCache
 @property  PFUbiquityTransactionHistoryCache *transactionHistoryCache
 @property  PFUbiquityPeerReceipt *peerReceipt
 @property  PFUbiquityKnowledgeVector *kv
 @property  PFUbiquityKnowledgeVector *baselineKV
 @property  NSString *localPeerID
 @property  PFUbiquityLocation *ubiquityRootLocation
 @property  NSString *storeName

  // instance methods
  -[PFUbiquitySwitchboardCacheWrapper init]
  -[PFUbiquitySwitchboardCacheWrapper dealloc]
  -[PFUbiquitySwitchboardCacheWrapper localPeerID]
  -[PFUbiquitySwitchboardCacheWrapper storeName]
  -[PFUbiquitySwitchboardCacheWrapper ubiquityRootLocation]
  -[PFUbiquitySwitchboardCacheWrapper peerRangeCache]
  -[PFUbiquitySwitchboardCacheWrapper transactionHistoryCache]
  -[PFUbiquitySwitchboardCacheWrapper baselineKV]
  -[PFUbiquitySwitchboardCacheWrapper setKv:]
  -[PFUbiquitySwitchboardCacheWrapper scheduleReceiptFileWrite:]
  -[PFUbiquitySwitchboardCacheWrapper kv]
  -[PFUbiquitySwitchboardCacheWrapper transactionLogCache]
  -[PFUbiquitySwitchboardCacheWrapper setUbiquityRootLocation:]
  -[PFUbiquitySwitchboardCacheWrapper cacheWrapperWillBeRemovedFromEntry]
  -[PFUbiquitySwitchboardCacheWrapper initWithStoreName:privateStore:forLocalPeerID:andUbiquityRootLocation:]
  -[PFUbiquitySwitchboardCacheWrapper setBaselineKV:]
  -[PFUbiquitySwitchboardCacheWrapper globalIDCache]
  -[PFUbiquitySwitchboardCacheWrapper _appWillResignActive:]
  -[PFUbiquitySwitchboardCacheWrapper writeReceiptFile:error:]
  -[PFUbiquitySwitchboardCacheWrapper peerReceipt]


PFUbiquitySafeSaveFile : NSObject
 @property  PFUbiquityLocation *permanentLocation
 @property  PFUbiquityLocation *safeSaveLocation
 @property  PFUbiquityLocation *currentLocation
 @property  NSString *localPeerID
 @property  NSError *safeSaveError
 @property  BOOL isRegistered
 @property  BOOL continueCheckingUpload
 @property  BOOL safeSaveSuccess
 @property  BOOL moveAfterSave
 @property  BOOL existsAtSafeSaveLocation
 @property  BOOL existsAtPermanentLocation
 @property  BOOL existsInCloud
 @property  BOOL downloadSuccess
 @property  BOOL continueCheckingDownload
 @property  NSError *downloadError

  // instance methods
  -[PFUbiquitySafeSaveFile init]
  -[PFUbiquitySafeSaveFile dealloc]
  -[PFUbiquitySafeSaveFile isRegistered]
  -[PFUbiquitySafeSaveFile writeFile:]
  -[PFUbiquitySafeSaveFile removeFile:]
  -[PFUbiquitySafeSaveFile localPeerID]
  -[PFUbiquitySafeSaveFile continueCheckingDownload]
  -[PFUbiquitySafeSaveFile checkFileDownload]
  -[PFUbiquitySafeSaveFile continueCheckingUpload]
  -[PFUbiquitySafeSaveFile checkSafeSaveFileUpload]
  -[PFUbiquitySafeSaveFile permanentLocation]
  -[PFUbiquitySafeSaveFile safeSaveLocation]
  -[PFUbiquitySafeSaveFile initWithPermanentLocation:safeSaveLocation:andLocalPeerID:]
  -[PFUbiquitySafeSaveFile currentLocation]
  -[PFUbiquitySafeSaveFile setCurrentLocation:]
  -[PFUbiquitySafeSaveFile existsInCloud]
  -[PFUbiquitySafeSaveFile loadFile:]
  -[PFUbiquitySafeSaveFile downloadLatestVersion:error:]
  -[PFUbiquitySafeSaveFile moveToPermanentLocation:]
  -[PFUbiquitySafeSaveFile loadFileFromLocation:error:]
  -[PFUbiquitySafeSaveFile writeFileToLocation:error:]
  -[PFUbiquitySafeSaveFile safeSaveFile:moveToPermanentLocation:error:]
  -[PFUbiquitySafeSaveFile existsAtSafeSaveLocation]
  -[PFUbiquitySafeSaveFile waitForFileToUpload:]
  -[PFUbiquitySafeSaveFile isFileUploaded:]
  -[PFUbiquitySafeSaveFile existsAtPermanentLocation]
  -[PFUbiquitySafeSaveFile removeFileFromLocation:error:]
  -[PFUbiquitySafeSaveFile isFileDownloaded:]
  -[PFUbiquitySafeSaveFile waitForFileToDownload:]
  -[PFUbiquitySafeSaveFile checkSafeSaveFileUploadAsync]
  -[PFUbiquitySafeSaveFile setSafeSaveSuccess:]
  -[PFUbiquitySafeSaveFile safeSaveFinishedUpload]
  -[PFUbiquitySafeSaveFile setSafeSaveError:]
  -[PFUbiquitySafeSaveFile setDownloadSuccess:]
  -[PFUbiquitySafeSaveFile downloadFinished]
  -[PFUbiquitySafeSaveFile setDownloadError:]
  -[PFUbiquitySafeSaveFile safeSaveError]
  -[PFUbiquitySafeSaveFile safeSaveSuccess]
  -[PFUbiquitySafeSaveFile moveAfterSave]
  -[PFUbiquitySafeSaveFile downloadSuccess]
  -[PFUbiquitySafeSaveFile downloadError]


PFUbiquityRecordsImporterSchedulingContext : NSObject
 @property  NSSet *pendingLogLocations
 @property  NSSet *scheduledLogLocations
 @property  NSSet *failedLogLocations
 @property  NSSet *ignoredLogLocations
 @property  NSDictionary *logLocationsToEncounteredErrors

  // instance methods
  -[PFUbiquityRecordsImporterSchedulingContext init]
  -[PFUbiquityRecordsImporterSchedulingContext dealloc]
  -[PFUbiquityRecordsImporterSchedulingContext pendingLogLocations]
  -[PFUbiquityRecordsImporterSchedulingContext transactionLogAtLocation:failedToOpenWithError:]
  -[PFUbiquityRecordsImporterSchedulingContext transactionLogAtLocationWasIgnored:]
  -[PFUbiquityRecordsImporterSchedulingContext transactionLogAtLocationWasScheduled:]
  -[PFUbiquityRecordsImporterSchedulingContext logLocationsToEncounteredErrors]
  -[PFUbiquityRecordsImporterSchedulingContext failedLogLocations]
  -[PFUbiquityRecordsImporterSchedulingContext scheduledLogLocations]
  -[PFUbiquityRecordsImporterSchedulingContext addPendingLogLocation:]
  -[PFUbiquityRecordsImporterSchedulingContext addPendingLogLocations:]
  -[PFUbiquityRecordsImporterSchedulingContext ignoredLogLocations]
  -[PFUbiquityRecordsImporterSchedulingContext initWithPendingLogLocations:]
  -[PFUbiquityRecordsImporterSchedulingContext failedTransactionLogAtLocationRecovered:]
  -[PFUbiquityRecordsImporterSchedulingContext unionWithSchedulingContext:]


PFUbiquityMigrationAssistant : NSObject
 @property  NSString *previousModelVersionHash
 @property  NSString *currentModelVersionHash

  // instance methods
  -[PFUbiquityMigrationAssistant dealloc]
  -[PFUbiquityMigrationAssistant initWithUbiquityRootLocation:peerID:ubiquityName:modelVersionHash:]
  -[PFUbiquityMigrationAssistant transactionLogLocationsForModelVersionHash:]
  -[PFUbiquityMigrationAssistant transactionLogLocationsByModelVersionHash]
  -[PFUbiquityMigrationAssistant baselineLocationsByModelVersionHash]
  -[PFUbiquityMigrationAssistant latestBaselineLocationSkipModelVersionHash:]
  -[PFUbiquityMigrationAssistant _populateBaselineAndTransactionLogLocations]
  -[PFUbiquityMigrationAssistant receiptLocations]
  -[PFUbiquityMigrationAssistant canUseReceipts]
  -[PFUbiquityMigrationAssistant orderedReceipts]
  -[PFUbiquityMigrationAssistant latestTransactionLogForModelVersionHash:]
  -[PFUbiquityMigrationAssistant electPreviousModelVersionHashFromTransactionLogsError:]
  -[PFUbiquityMigrationAssistant previousModelVersionHash]
  -[PFUbiquityMigrationAssistant currentModelVersionHash]


PFUbiquityContainerMonitor : NSObject
 @property  int containerState
 @property  int monitorState
 @property  PFUbiquityContainerIdentifier *containerIdentifier
 @property  <NSObject><NSCopying><NSCoding> *currentIdentityToken

  // instance methods
  -[PFUbiquityContainerMonitor init]
  -[PFUbiquityContainerMonitor dealloc]
  -[PFUbiquityContainerMonitor containerIdentifier]
  -[PFUbiquityContainerMonitor startMonitor:]
  -[PFUbiquityContainerMonitor stopMonitor]
  -[PFUbiquityContainerMonitor initWithProcessingQueue:localPeerID:storeName:andUbiquityRootLocation:]
  -[PFUbiquityContainerMonitor containerState]
  -[PFUbiquityContainerMonitor monitorState]
  -[PFUbiquityContainerMonitor currentIdentityToken]
  -[PFUbiquityContainerMonitor willChangeContainerState]
  -[PFUbiquityContainerMonitor didChangeContainerState]
  -[PFUbiquityContainerMonitor willChangeMonitorState]
  -[PFUbiquityContainerMonitor didChangeMonitorState]
  -[PFUbiquityContainerMonitor willChangeContainerIdentifier:]
  -[PFUbiquityContainerMonitor containerDeleteDetected:]
  -[PFUbiquityContainerMonitor didChangeContainerIdentifier:]
  -[PFUbiquityContainerMonitor _applicationResumed:]
  -[PFUbiquityContainerMonitor ubiquityIdentityChanged:]
  -[PFUbiquityContainerMonitor setMonitorState:]
  -[PFUbiquityContainerMonitor setContainerIdentifier:transitionType:]
  -[PFUbiquityContainerMonitor scheduleCheckBlock:]
  -[PFUbiquityContainerMonitor checkStoresAndContainer:]
  -[PFUbiquityContainerMonitor setContainerState:]


NSPredicate(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSPredicate(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSPredicate(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSComparisonPredicateOperator(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSComparisonPredicateOperator(_NSCoreDataSQLPredicateCategories) minimalFormInContext:ofPredicate:]

NSInPredicateOperator(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSInPredicateOperator(_NSCoreDataSQLPredicateCategories) minimalFormInContext:ofPredicate:]

NSCompoundPredicateOperator(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSCompoundPredicateOperator(_NSCoreDataSQLPredicateCategories) minimalFormInContext:ofPredicates:]

NSComparisonPredicate(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSComparisonPredicate(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSComparisonPredicate(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]
	-[NSComparisonPredicate(_NSCoreDataSQLPredicateCategories) _isForeignObjectExpression:givenContext:]

NSCompoundPredicate(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSCompoundPredicate(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSCompoundPredicate(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSExpression(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSExpression(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSExpression(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSFunctionExpression(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSFunctionExpression(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSFunctionExpression(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]
	-[NSFunctionExpression(_NSCoreDataSQLPredicateCategories) _mapKVCOperatorsToFunctionsInContext:]

NSSetExpression(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSSetExpression(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSSetExpression(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSSubqueryExpression(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSSubqueryExpression(_NSCoreDataSQLPredicateCategories) minimalFormInContext:]
	-[NSSubqueryExpression(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSTernaryExpression(_NSCoreDataSQLPredicateCategories)
	// instance methods
	-[NSTernaryExpression(_NSCoreDataSQLPredicateCategories) _keypathsForDerivedPropertyValidation:]

NSString(_CoreData_Extensions)
	// instance methods
	-[NSString(_CoreData_Extensions) _caseInsensitiveNumericCompare:]

NSProcessInfo(_nop_missing_selectors)
	// instance methods
	-[NSProcessInfo(_nop_missing_selectors) _disableAutomaticTerminationWithoutSettingRelaunchable:]
	-[NSProcessInfo(_nop_missing_selectors) _enableAutomaticTerminationWithoutSettingRelaunchable:]

NSNumber(NSFetchedResultSupport)
NSDictionary(NSFetchedResultSupport)
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCalendarDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicateOperator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicateOperator 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantValueExpression 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSEqualityPredicateOperator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFalsePredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileVersion 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFunctionExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSInPredicateOperator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyPathExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyPathSpecifierExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationQueue 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOrderedCollectionChange 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOrderedCollectionDifference 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerFunctions 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicateOperator 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSecureUnarchiveFromDataTransformer 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSelfExpression 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSetExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSubqueryExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSTernaryExpression 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSTruePredicate 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValueTransformer 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
