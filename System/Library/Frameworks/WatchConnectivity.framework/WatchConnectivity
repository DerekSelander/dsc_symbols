|| __DATA.__objc_data _OBJC_CLASS_$_WCComplicationManager
|| __DATA.__objc_data _OBJC_CLASS_$_WCContentIndex
|| __DATA.__objc_data _OBJC_CLASS_$_WCDProtoUserInfoTransfer
|| __DATA.__objc_data _OBJC_CLASS_$_WCDataMessageRecord
|| __DATA.__objc_data _OBJC_CLASS_$_WCDictionaryMessageRecord
|| __DATA.__objc_data _OBJC_CLASS_$_WCMessageRecord
|| __DATA.__objc_data _OBJC_CLASS_$_WCPrivateXPCManager
|| __DATA.__objc_data _OBJC_CLASS_$_WCSessionFile
|| __DATA.__objc_data _OBJC_CLASS_$_WCUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WCComplicationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WCContentIndex
|| __DATA.__objc_data _OBJC_METACLASS_$_WCDProtoUserInfoTransfer
|| __DATA.__objc_data _OBJC_METACLASS_$_WCDataMessageRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_WCDictionaryMessageRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_WCMessageRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_WCPrivateXPCManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WCSessionFile
|| __DATA.__objc_data _OBJC_METACLASS_$_WCUserInfo
|| __DATA_CONST.__const _WCApplicationContextFileName
|| __DATA_CONST.__const _WCComplicationUserInfoIDFileName
|| __DATA_CONST.__const _WCErrorDomain
|| __DATA_CONST.__const _WCFileTransferDataFileName
|| __DATA_CONST.__const _WCFileTransferResultErrorKey
|| __DATA_CONST.__const _WCFileTransferResultsFileName
|| __DATA_CONST.__const _WCInternalErrorDomain
|| __DATA_CONST.__const _WCPrivateServiceComplicationsManagerEntitlement
|| __DATA_CONST.__const _WCPrivateServiceShouldConnectNotification
|| __DATA_CONST.__const _WCPrivateServiceTestToolEntitlement
|| __DATA_CONST.__const _WCServiceAlwaysReachableEntitlement
|| __DATA_CONST.__const _WCServiceIncreasedPriorityTrafficEntitlement
|| __DATA_CONST.__const _WCServiceListenerResumedNotification
|| __DATA_CONST.__const _WCSessionFilePersistentFileName
|| __DATA_CONST.__const _WCUserInfoTransferObjectFileName
|| __DATA_CONST.__const _WCUserInfoTransferResultErrorKey
|| __DATA_CONST.__const _WCUserInfoTransferResultsFileName
|| __DATA_CONST.__const _WCUserInfoTransferWireDataFileName
|| __DATA_CONST.__const _WCWakeDaemonNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCActiveDeviceSwitchTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCFileStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCMessageRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCMessageResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCQueueManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCSessionFileTransfer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCSessionState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCSessionUserInfoTransfer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WCXPCManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCActiveDeviceSwitchTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCFileStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCMessageRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCMessageResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCQueueManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCSessionFileTransfer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCSessionState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCSessionUserInfoTransfer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WCXPCManager
|| __TEXT.__const _WCPayloadSizeLimitApplicationContext
|| __TEXT.__const _WCPayloadSizeLimitMessage
|| __TEXT.__const _WCPayloadSizeLimitUserInfo
|| __TEXT.__text _WCApplicationSupportURLInContainer
|| __TEXT.__text _WCCheckFileAndConsumeSandboxTokenForProcessID
|| __TEXT.__text _WCCheckFileAndCreateExtensionForProcess
|| __TEXT.__text _WCCompactStringFromCollection
|| __TEXT.__text _WCDProtoUserInfoTransferReadFrom
|| __TEXT.__text _WCDashboardLog
|| __TEXT.__text _WCDashboardLogJSON
|| __TEXT.__text _WCDeleteItemAtURL
|| __TEXT.__text _WCDeserializePayloadData
|| __TEXT.__text _WCFileTransfersURLInContainer
|| __TEXT.__text _WCInboxAppContextFolderURLInContainer
|| __TEXT.__text _WCInboxURLInContainer
|| __TEXT.__text _WCIsDataAcceptableSizeForType
|| __TEXT.__text _WCIsFileDirectory
|| __TEXT.__text _WCIsSizeAcceptableForType
|| __TEXT.__text _WCSerializePayloadDictionary
|| __TEXT.__text _WCSessionFilesURLInContainer
|| __TEXT.__text _WCTransferIdentifierFromComplicationIdentifier
|| __TEXT.__text _WCTransferredFilesURLInContainer
|| __TEXT.__text _WCTransferredUserInfoInboxURLInContainer
|| __TEXT.__text _WCUserInfoTransfersInContainer
|| __TEXT.__text _WCWatchDirectoryLocationInContainer
|| __TEXT.__text _wc_log
|| __TEXT.__text _wc_pushkit_log
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFCopyTypeIDDescription
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLog
__ CoreFoundation: _CFNullGetTypeID
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetGetTypeID
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLGetTypeID
__ CoreFoundation: _CFUUIDGetTypeID
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLGenerationIdentifierKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsRegularFileKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreUtils: _CUMetricsLog
__ CoreUtils: _NSPrintF
__ CoreUtils: _OBJC_CLASS_$_CUDashboardClient
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSProgressByteCompletedCountKey
__ Foundation: _NSProgressByteTotalCountKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSInvocationOperation
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
WCDProtoUserInfoTransfer : PBCodable /usr/lib/libobjc.A.dylib <NSCopying>
 @property  BOOL hasVersion
 @property  unsigned int version
 @property  BOOL hasClientData
 @property  NSData *clientData
 @property  BOOL hasTransferIdentifier
 @property  NSString *transferIdentifier

  // instance methods
  -[WCDProtoUserInfoTransfer isEqual:]
  -[WCDProtoUserInfoTransfer copyWithZone:]
  -[WCDProtoUserInfoTransfer .cxx_destruct]
  -[WCDProtoUserInfoTransfer version]
  -[WCDProtoUserInfoTransfer dictionaryRepresentation]
  -[WCDProtoUserInfoTransfer setVersion:]
  -[WCDProtoUserInfoTransfer writeTo:]
  -[WCDProtoUserInfoTransfer mergeFrom:]
  -[WCDProtoUserInfoTransfer readFrom:]
  -[WCDProtoUserInfoTransfer copyTo:]
  -[WCDProtoUserInfoTransfer hasVersion]
  -[WCDProtoUserInfoTransfer setHasVersion:]
  -[WCDProtoUserInfoTransfer transferIdentifier]
  -[WCDProtoUserInfoTransfer clientData]
  -[WCDProtoUserInfoTransfer setClientData:]
  -[WCDProtoUserInfoTransfer setTransferIdentifier:]
  -[WCDProtoUserInfoTransfer hasClientData]
  -[WCDProtoUserInfoTransfer hasTransferIdentifier]


WCActiveDeviceSwitchTask : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL clientReadyForSessionState
 @property  unsigned long taskState

  // class methods
  +[WCActiveDeviceSwitchTask taskStateToString:]

  // instance methods
  -[WCActiveDeviceSwitchTask taskState]
  -[WCActiveDeviceSwitchTask setTaskState:]
  -[WCActiveDeviceSwitchTask clientReadyForSessionState]
  -[WCActiveDeviceSwitchTask setClientReadyForSessionState:]


WCDictionaryMessageRecord : WCMessageRecord
 @property  @? responseHandler

  // instance methods
  -[WCDictionaryMessageRecord .cxx_destruct]
  -[WCDictionaryMessageRecord responseHandler]
  -[WCDictionaryMessageRecord expectsResponse]
  -[WCDictionaryMessageRecord initWithIdentifier:responseHandler:errorHandler:]


WCMessageRecord : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL expectsResponse
 @property  NSString *identifier
 @property  @? errorHandler
 @property  NSObject<OS_dispatch_source> *timeoutTimer

  // instance methods
  -[WCMessageRecord dealloc]
  -[WCMessageRecord isEqual:]
  -[WCMessageRecord .cxx_destruct]
  -[WCMessageRecord identifier]
  -[WCMessageRecord errorHandler]
  -[WCMessageRecord expectsResponse]
  -[WCMessageRecord setTimeoutTimer:]
  -[WCMessageRecord timeoutTimer]
  -[WCMessageRecord initWithIdentifier:errorHandler:]


WCMessageRequest : WCMessage <NSSecureCoding>
 @property  BOOL expectsResponse

  // class methods
  +[WCMessageRequest supportsSecureCoding]

  // instance methods
  -[WCMessageRequest isEqual:]
  -[WCMessageRequest encodeWithCoder:]
  -[WCMessageRequest initWithCoder:]
  -[WCMessageRequest expectsResponse]
  -[WCMessageRequest setExpectsResponse:]
  -[WCMessageRequest initWithPairingID:identifier:data:dictionaryMessage:expectsResponse:]


WCMessage : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *pairingID
 @property  NSString *identifier
 @property  NSData *data
 @property  BOOL dictionaryMessage

  // class methods
  +[WCMessage supportsSecureCoding]

  // instance methods
  -[WCMessage isEqual:]
  -[WCMessage encodeWithCoder:]
  -[WCMessage initWithCoder:]
  -[WCMessage .cxx_destruct]
  -[WCMessage data]
  -[WCMessage identifier]
  -[WCMessage pairingID]
  -[WCMessage initWithPairingID:identifier:data:dictionaryMessage:]
  -[WCMessage isDictionaryMessage]


WCSessionUserInfoTransfer : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  WCUserInfo *userInfoStorage
 @property  NSDate *creationDate
 @property  NSError *transferError
 @property  NSString *transferIdentifier
 @property  NSData *userInfoData
 @property  NSString *complicationTransferIdentifier
 @property  BOOL currentComplicationInfo
 @property  BOOL transferring
 @property  NSDictionary *userInfo

  // class methods
  +[WCSessionUserInfoTransfer supportsSecureCoding]

  // instance methods
  -[WCSessionUserInfoTransfer init]
  -[WCSessionUserInfoTransfer isEqual:]
  -[WCSessionUserInfoTransfer userInfo]
  -[WCSessionUserInfoTransfer compare:]
  -[WCSessionUserInfoTransfer encodeWithCoder:]
  -[WCSessionUserInfoTransfer initWithCoder:]
  -[WCSessionUserInfoTransfer .cxx_destruct]
  -[WCSessionUserInfoTransfer cancel]
  -[WCSessionUserInfoTransfer creationDate]
  -[WCSessionUserInfoTransfer setCreationDate:]
  -[WCSessionUserInfoTransfer userInfoData]
  -[WCSessionUserInfoTransfer transferIdentifier]
  -[WCSessionUserInfoTransfer protobufData]
  -[WCSessionUserInfoTransfer setTransferIdentifier:]
  -[WCSessionUserInfoTransfer initWithTranferIdentifier:complicationTransferIdentifier:currentComplication:]
  -[WCSessionUserInfoTransfer updateUserInfoData:error:]
  -[WCSessionUserInfoTransfer userInfoStorage]
  -[WCSessionUserInfoTransfer updateUserInfo:error:]
  -[WCSessionUserInfoTransfer verifyUserInfo]
  -[WCSessionUserInfoTransfer isCurrentComplicationInfo]
  -[WCSessionUserInfoTransfer isTransferring]
  -[WCSessionUserInfoTransfer initWithComplicationTransferIdentifier:]
  -[WCSessionUserInfoTransfer initWithProtoBufFileURL:]
  -[WCSessionUserInfoTransfer setCurrentComplicationInfo:]
  -[WCSessionUserInfoTransfer setTransferring:]
  -[WCSessionUserInfoTransfer setUserInfoStorage:]
  -[WCSessionUserInfoTransfer transferError]
  -[WCSessionUserInfoTransfer setTransferError:]
  -[WCSessionUserInfoTransfer complicationTransferIdentifier]
  -[WCSessionUserInfoTransfer setComplicationTransferIdentifier:]


WCSessionState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  BOOL reachable
 @property  BOOL paired
 @property  BOOL appInstalled
 @property  BOOL complicationEnabled
 @property  BOOL standalone
 @property  BOOL companionAppInstalled
 @property  unsigned long remainingComplicationUserInfoTransfers
 @property  BOOL iOSDeviceNeedsFirstUnlock
 @property  NSString *pairingID
 @property  NSSet *pairedDevicesPairingIDs
 @property  NSString *appInstallationID
 @property  NSURL *watchDirectoryURL

  // class methods
  +[WCSessionState supportsSecureCoding]

  // instance methods
  -[WCSessionState encodeWithCoder:]
  -[WCSessionState initWithCoder:]
  -[WCSessionState .cxx_destruct]
  -[WCSessionState isReachable]
  -[WCSessionState isPaired]
  -[WCSessionState isAppInstalled]
  -[WCSessionState pairingID]
  -[WCSessionState initWithReachable:paired:appInstalled:complicationEnabled:remainingComplicationUserInfoTransfers:iOSDeviceNeedsFirstUnlock:pairingID:pairedDevicesPairingIDs:appInstallationID:standaloneApp:companionAppInstalled:]
  -[WCSessionState isComplicationEnabled]
  -[WCSessionState remainingComplicationUserInfoTransfers]
  -[WCSessionState pairedDevicesPairingIDs]
  -[WCSessionState appInstallationID]
  -[WCSessionState initWithReachable:iOSDeviceNeedsFirstUnlock:activePairingID:standaloneApp:companionAppInstalled:]
  -[WCSessionState initWithReachable:paired:appInstalled:complicationEnabled:remainingComplicationUserInfoTransfers:activePairingID:pairedDevicesPairingIDs:appInstallationID:]
  -[WCSessionState watchDirectoryURL]
  -[WCSessionState isStandaloneApp]
  -[WCSessionState isCompanionAppInstalled]
  -[WCSessionState iOSDeviceNeedsFirstUnlock]


WCSession : NSObject /usr/lib/libSystem.B.dylib <WCXPCManagerDelegate>
 @property  long long activationState
 @property  BOOL paired
 @property  NSURL *watchDirectoryURL
 @property  BOOL hasContentPending
 @property  BOOL reachable
 @property  BOOL complicationEnabled
 @property  unsigned long remainingComplicationUserInfoTransfers
 @property  NSDictionary *applicationContext
 @property  NSDictionary *receivedApplicationContext
 @property  BOOL watchAppInstalled
 @property  BOOL iOSDeviceNeedsUnlockAfterRebootForReachability
 @property  BOOL companionAppInstalled
 @property  NSOperationQueue *delegateOperationQueue
 @property  NSOperationQueue *backgroundWorkOperationQueue
 @property  NSOperationQueue *workOperationQueue
 @property  NSMutableDictionary *currentMessages
 @property  NSMutableSet *currentMessageIdentifiersAwaitingReply
 @property  NSMutableDictionary *internalOutstandingUserInfoTransfers
 @property  NSMutableDictionary *internalOutstandingFileTransfers
 @property  WCSessionUserInfoTransfer *currentComplicationUserInfoTransfer
 @property  WCQueueManager *queueManager
 @property  NSString *pairingID
 @property  BOOL hasCompletedInitialActivation
 @property  BOOL connectionWasInterrupted
 @property  BOOL delegateSupportsAsyncActivate
 @property  BOOL delegateSupportsActiveDeviceSwitch
 @property  NSMutableArray *switchTasksQueue
 @property  <WCSessionDelegate> *delegate
 @property  NSArray *outstandingUserInfoTransfers
 @property  NSArray *outstandingFileTransfers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WCSession automaticallyNotifiesObserversForKey:]
  +[WCSession isSupported]
  +[WCSession defaultSession]

  // instance methods
  -[WCSession init]
  -[WCSession dealloc]
  -[WCSession isEqual:]
  -[WCSession delegate]
  -[WCSession setDelegate:]
  -[WCSession .cxx_destruct]
  -[WCSession _init]
  -[WCSession observeValueForKeyPath:ofObject:change:context:]
  -[WCSession activationState]
  -[WCSession handleRequest:]
  -[WCSession setPaired:]
  -[WCSession isReachable]
  -[WCSession setReachable:]
  -[WCSession isPaired]
  -[WCSession setApplicationContext:]
  -[WCSession pairingID]
  -[WCSession setPairingID:]
  -[WCSession handleResponse:]
  -[WCSession setActivationState:]
  -[WCSession applicationContext]
  -[WCSession cancelUserInfo:]
  -[WCSession isComplicationEnabled]
  -[WCSession remainingComplicationUserInfoTransfers]
  -[WCSession watchDirectoryURL]
  -[WCSession isCompanionAppInstalled]
  -[WCSession switchTasksQueue]
  -[WCSession delegateSupportsActiveDeviceSwitch]
  -[WCSession delegateOperationQueue]
  -[WCSession delegateSupportsAsyncActivate]
  -[WCSession setDelegateSupportsAsyncActivate:]
  -[WCSession setDelegateSupportsActiveDeviceSwitch:]
  -[WCSession onqueue_loadOutstandingFileTransfers]
  -[WCSession onqueue_loadOutstandingUserInfoTransfers]
  -[WCSession onqueue_loadAppContexts]
  -[WCSession setWatchDirectoryURL:]
  -[WCSession setWatchAppInstalled:]
  -[WCSession setComplicationEnabled:]
  -[WCSession setRemainingComplicationUserInfoTransfers:]
  -[WCSession updatePairingID:]
  -[WCSession setReceivedApplicationContext:]
  -[WCSession internalOutstandingUserInfoTransfers]
  -[WCSession onqueue_cancelUserInfo:]
  -[WCSession onqueue_notifyOfUserInfoError:withUserInfoTransfer:]
  -[WCSession internalOutstandingFileTransfers]
  -[WCSession onqueue_cancelFileTransfer:]
  -[WCSession onqueue_notifyOfFileError:withFileTransfer:]
  -[WCSession isWatchAppInstalled]
  -[WCSession queueManager]
  -[WCSession logAndTestIfUnactivatedOrMissingDelegate]
  -[WCSession onqueue_loadPersistedContent]
  -[WCSession errorIfPreconditionsNotSatisfied]
  -[WCSession setInternalOutstandingUserInfoTransfers:]
  -[WCSession setInternalOutstandingFileTransfers:]
  -[WCSession onqueue_loadFileTransferProgress]
  -[WCSession onqueue_createProgressForFileTransfer:]
  -[WCSession onqueue_updateProgressForFileTransfer:progress:]
  -[WCSession onqueue_removeProgressForFileTransfer:]
  -[WCSession onqueue_updateClientProgressForFileTransfer:]
  -[WCSession onqueue_handleProgressFinishedForFileTransfer:]
  -[WCSession errorIfNotReachable]
  -[WCSession onqueue_sendMessageData:replyHandler:errorHandler:dictionaryMessage:]
  -[WCSession _onqueue_notifyOfMessageError:messageID:withErrorHandler:]
  -[WCSession currentMessages]
  -[WCSession createAndStartTimerOnWorkQueueWithHandler:]
  -[WCSession onqueue_handleMessageCompletionWithError:withMessageID:]
  -[WCSession storeAppContext:withAppContextData:]
  -[WCSession fileSizeFromURL:]
  -[WCSession onqueue_addOutstandingFileTransfer:]
  -[WCSession notifyOfFileError:withFileTransfer:]
  -[WCSession onqueue_removeOutstandingFileTransfer:]
  -[WCSession onqueue_transferUserInfo:withUserInfo:]
  -[WCSession onqueue_setCurrentComplicationUserInfoTransfer:]
  -[WCSession onqueue_removeOutstandingUserInfoTransfer:]
  -[WCSession onqueue_addOutstandingUserInfoTransfer:]
  -[WCSession onqueue_sendResponseData:identifier:dictionaryMessage:]
  -[WCSession _onqueue_sendResponseError:identifier:dictionaryMessage:]
  -[WCSession setConnectionWasInterrupted:]
  -[WCSession onqueue_startNextDeviceSwitch]
  -[WCSession onqueue_completeSwitchTask:withSessionState:]
  -[WCSession onqueue_handleUpdateSessionState:]
  -[WCSession connectionWasInterrupted]
  -[WCSession xpcConnectionRestoredWithState:]
  -[WCSession setHasContentPending:]
  -[WCSession hasContentPending]
  -[WCSession onqueue_dequeueContent]
  -[WCSession onqueue_handleDictionaryMessageRequest:withPairingID:]
  -[WCSession onqueue_handleDataMessageRequest:withPairingID:]
  -[WCSession currentMessageIdentifiersAwaitingReply]
  -[WCSession onqueue_sendResponseDictionary:identifier:]
  -[WCSession onqueue_handleResponseDictionary:record:withPairingID:]
  -[WCSession onqueue_handleResponseData:record:withPairingID:]
  -[WCSession handleSentMessageWithIdentifier:error:]
  -[WCSession storeReceivedAppContext:withAppContextData:]
  -[WCSession verifySessionFile:]
  -[WCSession reportFileTransfer:]
  -[WCSession onDelegateQueueIfTriggeringKVO_updateSessionState:triggerKVO:]
  -[WCSession onqueue_cancelTransfersIfAppropriate]
  -[WCSession hasCompletedInitialActivation]
  -[WCSession setHasCompletedInitialActivation:]
  -[WCSession backgroundWorkOperationQueue]
  -[WCSession onqueue_cancelMessagesIfAppropriate]
  -[WCSession didSessionStateChange:withChangeHandler:]
  -[WCSession didPairingIDChange:]
  -[WCSession didWatchURLChange:]
  -[WCSession handleApplicationContextWithPairingID:]
  -[WCSession handleFileResultWithPairingID:]
  -[WCSession handleIncomingFileWithPairingID:]
  -[WCSession handleUserInfoResultWithPairingID:]
  -[WCSession handleIncomingUserInfoWithPairingID:]
  -[WCSession roundValue:toSignificantFigures:]
  -[WCSession handleActiveDeviceSwitchStarted]
  -[WCSession handleSessionStateChanged:]
  -[WCSession handleMessageSendingAllowed]
  -[WCSession xpcConnectionInterrupted]
  -[WCSession currentPairingID]
  -[WCSession supportsActiveDeviceSwitch]
  -[WCSession activateSession]
  -[WCSession outstandingUserInfoTransfers]
  -[WCSession outstandingFileTransfers]
  -[WCSession sendMessage:replyHandler:errorHandler:]
  -[WCSession sendMessageData:replyHandler:errorHandler:]
  -[WCSession updateApplicationContext:error:]
  -[WCSession transferFile:metadata:]
  -[WCSession cancelFileTransfer:]
  -[WCSession transferUserInfo:]
  -[WCSession transferCurrentComplicationUserInfo:]
  -[WCSession receivedApplicationContext]
  -[WCSession notifyOfUserInfoError:withUserInfoTransfer:]
  -[WCSession iOSDeviceNeedsUnlockAfterRebootForReachability]
  -[WCSession setIOSDeviceNeedsUnlockAfterRebootForReachability:]
  -[WCSession setCompanionAppInstalled:]
  -[WCSession workOperationQueue]
  -[WCSession setCurrentMessageIdentifiersAwaitingReply:]
  -[WCSession currentComplicationUserInfoTransfer]
  -[WCSession setCurrentComplicationUserInfoTransfer:]
  -[WCSession setQueueManager:]
  -[WCSession setSwitchTasksQueue:]


WCComplicationManager : NSObject /usr/lib/libSystem.B.dylib <WCPrivateXPCManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSObject<WCComplicationManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WCComplicationManager init]
  -[WCComplicationManager delegate]
  -[WCComplicationManager setDelegate:]
  -[WCComplicationManager .cxx_destruct]
  -[WCComplicationManager delegateQueue]
  -[WCComplicationManager xpcManager:handlePingForExtensionBundleID:]
  -[WCComplicationManager xpcManager:isExtensionPrivileged:completionHandler:]
  -[WCComplicationManager xpcManager:handlePairedSyncComplicationsStartedWithCompletionHandler:]


WCMessageResponse : WCMessage <NSSecureCoding>
 @property  NSError *error

  // class methods
  +[WCMessageResponse supportsSecureCoding]

  // instance methods
  -[WCMessageResponse isEqual:]
  -[WCMessageResponse encodeWithCoder:]
  -[WCMessageResponse initWithCoder:]
  -[WCMessageResponse .cxx_destruct]
  -[WCMessageResponse error]
  -[WCMessageResponse setError:]


WCDataMessageRecord : WCMessageRecord
 @property  @? responseHandler

  // instance methods
  -[WCDataMessageRecord .cxx_destruct]
  -[WCDataMessageRecord responseHandler]
  -[WCDataMessageRecord expectsResponse]
  -[WCDataMessageRecord initWithIdentifier:responseHandler:errorHandler:]


WCContentIndex : NSObject /usr/lib/libSystem.B.dylib <NSFilePresenter>
 @property  BOOL invalidated
 @property  NSURL *itemURL
 @property  NSOperationQueue *operationQueue
 @property  NSMutableArray *cachedContentIndex
 @property  id lastGenerationIdentifier
 @property  NSArray *index
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes

  // instance methods
  -[WCContentIndex isEqual:]
  -[WCContentIndex invalidate]
  -[WCContentIndex .cxx_destruct]
  -[WCContentIndex operationQueue]
  -[WCContentIndex setOperationQueue:]
  -[WCContentIndex index]
  -[WCContentIndex presentedItemURL]
  -[WCContentIndex presentedItemOperationQueue]
  -[WCContentIndex presentedItemDidChange]
  -[WCContentIndex presentedItemDidMoveToURL:]
  -[WCContentIndex commit]
  -[WCContentIndex invalidated]
  -[WCContentIndex setInvalidated:]
  -[WCContentIndex itemURL]
  -[WCContentIndex setItemURL:]
  -[WCContentIndex loadContentIfNecessary]
  -[WCContentIndex lastGenerationIdentifier]
  -[WCContentIndex setCachedContentIndex:]
  -[WCContentIndex setLastGenerationIdentifier:]
  -[WCContentIndex cachedContentIndex]
  -[WCContentIndex initWithContainingFolder:]
  -[WCContentIndex addContentIdentifier:]
  -[WCContentIndex removeContentIdentifier:]


WCUserInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *userInfo
 @property  NSDictionary *clientUserInfo
 @property  NSData *userInfoData

  // class methods
  +[WCUserInfo supportsSecureCoding]

  // instance methods
  -[WCUserInfo userInfo]
  -[WCUserInfo encodeWithCoder:]
  -[WCUserInfo initWithCoder:]
  -[WCUserInfo .cxx_destruct]
  -[WCUserInfo setUserInfo:]
  -[WCUserInfo userInfoData]
  -[WCUserInfo setUserInfoData:]
  -[WCUserInfo clientUserInfo]
  -[WCUserInfo setClientUserInfo:]
  -[WCUserInfo updateUserInfoData:error:]
  -[WCUserInfo updateUserInfo:error:]
  -[WCUserInfo verifyUserInfo]


WCPrivateXPCManager : NSObject /usr/lib/libSystem.B.dylib <NSXPCConnectionDelegate, WCXPCPrivateManagerClientProtocol>
 @property  NSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  int listenerResumedToken
 @property  int privateServiceShouldConnectToken
 @property  NSObject<WCPrivateXPCManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WCPrivateXPCManager initialize]
  +[WCPrivateXPCManager sharedManager]
  +[WCPrivateXPCManager privateDaemonInterface]
  +[WCPrivateXPCManager privateClientInterface]

  // instance methods
  -[WCPrivateXPCManager init]
  -[WCPrivateXPCManager dealloc]
  -[WCPrivateXPCManager delegate]
  -[WCPrivateXPCManager setDelegate:]
  -[WCPrivateXPCManager .cxx_destruct]
  -[WCPrivateXPCManager connection:handleInvocation:isReply:]
  -[WCPrivateXPCManager connection]
  -[WCPrivateXPCManager delegateQueue]
  -[WCPrivateXPCManager setupConnection]
  -[WCPrivateXPCManager listenerResumedToken]
  -[WCPrivateXPCManager setListenerResumedToken:]
  -[WCPrivateXPCManager handlePingForExtensionBundleID:]
  -[WCPrivateXPCManager isExtensionPrivileged:completionHandler:]
  -[WCPrivateXPCManager fakeIncomingPayloadOnSubService:ofType:clientData:resource:resourceSandboxToken:completionHandler:]
  -[WCPrivateXPCManager handlePairedSyncComplicationsStartedWithCompletionHandler:]
  -[WCPrivateXPCManager privateServiceShouldConnectToken]
  -[WCPrivateXPCManager setPrivateServiceShouldConnectToken:]


WCSessionFile : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDictionary *metadata
 @property  NSDate *creationDate
 @property  WCUserInfo *userInfoStorage
 @property  NSString *relativePath
 @property  NSString *fileIdentifier
 @property  NSNumber *fileSize
 @property  NSData *userInfoData
 @property  NSURL *fileURL

  // class methods
  +[WCSessionFile supportsSecureCoding]

  // instance methods
  -[WCSessionFile isEqual:]
  -[WCSessionFile compare:]
  -[WCSessionFile encodeWithCoder:]
  -[WCSessionFile initWithCoder:]
  -[WCSessionFile .cxx_destruct]
  -[WCSessionFile fileSize]
  -[WCSessionFile relativePath]
  -[WCSessionFile fileURL]
  -[WCSessionFile setFileURL:]
  -[WCSessionFile creationDate]
  -[WCSessionFile setMetadata:]
  -[WCSessionFile metadata]
  -[WCSessionFile setCreationDate:]
  -[WCSessionFile userInfoData]
  -[WCSessionFile setFileSize:]
  -[WCSessionFile initWithFileURL:]
  -[WCSessionFile setRelativePath:]
  -[WCSessionFile setFileIdentifier:]
  -[WCSessionFile fileIdentifier]
  -[WCSessionFile updateUserInfoData:error:]
  -[WCSessionFile userInfoStorage]
  -[WCSessionFile updateUserInfo:error:]
  -[WCSessionFile setUserInfoStorage:]
  -[WCSessionFile verifyMetadata]
  -[WCSessionFile initWithIdentifier:fileURL:relativePath:]
  -[WCSessionFile initWithIdentifier:relativePath:]


WCSessionFileTransfer : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *transferDate
 @property  NSString *transferIdentifier
 @property  BOOL transferring
 @property  NSError *transferError
 @property  NSProgress *internalProgress
 @property  id progressToken
 @property  WCSessionFile *file
 @property  NSProgress *progress

  // class methods
  +[WCSessionFileTransfer supportsSecureCoding]

  // instance methods
  -[WCSessionFileTransfer init]
  -[WCSessionFileTransfer isEqual:]
  -[WCSessionFileTransfer compare:]
  -[WCSessionFileTransfer encodeWithCoder:]
  -[WCSessionFileTransfer initWithCoder:]
  -[WCSessionFileTransfer .cxx_destruct]
  -[WCSessionFileTransfer cancel]
  -[WCSessionFileTransfer progress]
  -[WCSessionFileTransfer file]
  -[WCSessionFileTransfer initWithFile:]
  -[WCSessionFileTransfer transferIdentifier]
  -[WCSessionFileTransfer progressToken]
  -[WCSessionFileTransfer setProgressToken:]
  -[WCSessionFileTransfer internalProgress]
  -[WCSessionFileTransfer setInternalProgress:]
  -[WCSessionFileTransfer setTransferIdentifier:]
  -[WCSessionFileTransfer isTransferring]
  -[WCSessionFileTransfer setTransferring:]
  -[WCSessionFileTransfer transferError]
  -[WCSessionFileTransfer setTransferError:]
  -[WCSessionFileTransfer setTransferDate:]
  -[WCSessionFileTransfer transferDate]
  -[WCSessionFileTransfer initializeProgress]


WCFileStorage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *fileQueue
 @property  NSArray *outstandingFileTransfers
 @property  WCContentIndex *fileIndex
 @property  WCContentIndex *fileResultsIndex
 @property  WCContentIndex *userInfoIndex
 @property  WCContentIndex *userInfoResultsIndex
 @property  NSString *pairingID

  // class methods
  +[WCFileStorage sharedInstance]

  // instance methods
  -[WCFileStorage init]
  -[WCFileStorage .cxx_destruct]
  -[WCFileStorage homeDirectoryURL]
  -[WCFileStorage pairingID]
  -[WCFileStorage setPairingID:]
  -[WCFileStorage fileQueue]
  -[WCFileStorage createWatchDirectoryIfNeeded:]
  -[WCFileStorage deleteAppContextReceived:]
  -[WCFileStorage loadOutstandingUserInfoTransfersAndComplicationUserInfo:]
  -[WCFileStorage persistOutgoingUserInfoTransfer:]
  -[WCFileStorage deleteOutstandingUserInfoTransfer:]
  -[WCFileStorage loadOutstandingFileTransfers]
  -[WCFileStorage persistOutgoingFileTransfer:]
  -[WCFileStorage deleteOutstandingFileTransfer:]
  -[WCFileStorage persistAppContextData:received:]
  -[WCFileStorage loadAppContextReceived:]
  -[WCFileStorage loadAppContextDataFromInbox]
  -[WCFileStorage deleteAppContextDataFromInbox]
  -[WCFileStorage cleanupSessionFileFromInbox:]
  -[WCFileStorage enumerateIncomingFilesWithBlock:]
  -[WCFileStorage enumerateFileTransferResultsWithBlock:]
  -[WCFileStorage deleteUserInfoTransferFromInbox:]
  -[WCFileStorage enumerateIncomingUserInfosWithBlock:]
  -[WCFileStorage enumerateUserInfoResultsWithBlock:]
  -[WCFileStorage cleanUpWatchContentDirectoryWithCurrentAppInstallationID:]
  -[WCFileStorage cleanUpOldPairingIDFoldersWithPairedDevicesPairingIDs:]
  -[WCFileStorage outstandingFileTransfers]
  -[WCFileStorage resetIndexes]
  -[WCFileStorage fileIndex]
  -[WCFileStorage setFileIndex:]
  -[WCFileStorage fileResultsIndex]
  -[WCFileStorage setFileResultsIndex:]
  -[WCFileStorage userInfoIndex]
  -[WCFileStorage setUserInfoIndex:]
  -[WCFileStorage userInfoResultsIndex]
  -[WCFileStorage setUserInfoResultsIndex:]
  -[WCFileStorage outgoingFileTransferPath]
  -[WCFileStorage appendPathForFileTransfer:toPath:]
  -[WCFileStorage removeItemAtURL:numberOfRetries:error:]
  -[WCFileStorage appContextFolderURL:]
  -[WCFileStorage deleteRelatedMetadataForSessionFileFromInbox:]
  -[WCFileStorage deleteFileFolderForSessionFileFromInbox:]
  -[WCFileStorage cleanUpOldPairingIDFolderInFolder:pairedDevicesPairingIDs:]
  -[WCFileStorage receivedAppContextFolderURL]
  -[WCFileStorage localAppContextFolderURL]
  -[WCFileStorage setFileQueue:]
  -[WCFileStorage setOutstandingFileTransfers:]


WCQueuedMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  WCMessage *message
 @property  @? completionHandler
 @property  NSDate *creationDate
 @property  long long retryCount

  // instance methods
  -[WCQueuedMessage compare:]
  -[WCQueuedMessage .cxx_destruct]
  -[WCQueuedMessage creationDate]
  -[WCQueuedMessage message]
  -[WCQueuedMessage setMessage:]
  -[WCQueuedMessage completionHandler]
  -[WCQueuedMessage setCompletionHandler:]
  -[WCQueuedMessage retryCount]
  -[WCQueuedMessage setRetryCount:]
  -[WCQueuedMessage initWithMessage:completionHandler:]


WCQueueManager : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL canSend
 @property  BOOL messageOutstanding
 @property  NSMutableArray *messageQueue
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *inFlightMessages

  // instance methods
  -[WCQueueManager init]
  -[WCQueueManager .cxx_destruct]
  -[WCQueueManager workQueue]
  -[WCQueueManager setWorkQueue:]
  -[WCQueueManager sendMessage:completionHandler:]
  -[WCQueueManager canSend]
  -[WCQueueManager messageQueue]
  -[WCQueueManager setMessageQueue:]
  -[WCQueueManager cancelQueuedMessages]
  -[WCQueueManager allowMessageSending]
  -[WCQueueManager handleSentMessageWithIdentifier:error:]
  -[WCQueueManager onqueue_allowMessageSending]
  -[WCQueueManager setCanSend:]
  -[WCQueueManager onqueue_attemptToSend]
  -[WCQueueManager onqueue_sendMessage:completionHandler:]
  -[WCQueueManager onqueue_enqueueMessage:]
  -[WCQueueManager messageOutstanding]
  -[WCQueueManager onqueue_peekMessage]
  -[WCQueueManager inFlightMessages]
  -[WCQueueManager setMessageOutstanding:]
  -[WCQueueManager onqueue_handleAcceptanceWithCurrentAccepted:nextAvailable:]
  -[WCQueueManager onqueue_handleFailedDaemonConnectionForQueuedMessage:]
  -[WCQueueManager onqueue_dequeueMessage]
  -[WCQueueManager onqueue_handleSentMessageWithIdentifier:error:]
  -[WCQueueManager onqueue_cancelQueuedMessages]
  -[WCQueueManager onqueue_clearQueuedMessages]
  -[WCQueueManager onqueue_cancelDaemonMessages]
  -[WCQueueManager setInFlightMessages:]


WCXPCManager : NSObject /usr/lib/libSystem.B.dylib <NSXPCConnectionDelegate, WCXPCManagerClientProtocol, WCXPCManagerDaemonProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  int listenerResumedToken
 @property  BOOL connectionInvalidated
 @property  BOOL reconnectFailed
 @property  unsigned long reconnectRetryCount
 @property  NSXPCConnection *connection
 @property  NSObject<WCXPCManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WCXPCManager initialize]
  +[WCXPCManager sharedManager]
  +[WCXPCManager clientInterface]
  +[WCXPCManager daemonInterface]

  // instance methods
  -[WCXPCManager init]
  -[WCXPCManager delegate]
  -[WCXPCManager setDelegate:]
  -[WCXPCManager .cxx_destruct]
  -[WCXPCManager connection:handleInvocation:isReply:]
  -[WCXPCManager connection]
  -[WCXPCManager workQueue]
  -[WCXPCManager handleRequest:]
  -[WCXPCManager connectionInvalidated]
  -[WCXPCManager setupConnection]
  -[WCXPCManager listenerResumedToken]
  -[WCXPCManager setListenerResumedToken:]
  -[WCXPCManager invalidateConnection]
  -[WCXPCManager handleResponse:]
  -[WCXPCManager sessionReadyForInitialStateForClientPairingID:supportsActiveDeviceSwitch:withErrorHandler:]
  -[WCXPCManager updateApplicationContext:clientPairingID:errorHandler:]
  -[WCXPCManager transferFile:sandboxToken:clientPairingID:errorHandler:]
  -[WCXPCManager cancelSendWithIdentifier:]
  -[WCXPCManager transferUserInfo:withURL:clientPairingID:errorHandler:]
  -[WCXPCManager handleSentMessageWithIdentifier:error:]
  -[WCXPCManager acknowledgeFileIndexWithIdentifier:clientPairingID:]
  -[WCXPCManager acknowledgeFileResultIndexWithIdentifier:clientPairingID:]
  -[WCXPCManager acknowledgeUserInfoIndexWithIdentifier:clientPairingID:]
  -[WCXPCManager acknowledgeUserInfoResultIndexWithIdentifier:clientPairingID:]
  -[WCXPCManager handleApplicationContextWithPairingID:]
  -[WCXPCManager handleFileResultWithPairingID:]
  -[WCXPCManager handleIncomingFileWithPairingID:]
  -[WCXPCManager handleUserInfoResultWithPairingID:]
  -[WCXPCManager handleIncomingUserInfoWithPairingID:]
  -[WCXPCManager handleActiveDeviceSwitchStarted]
  -[WCXPCManager handleSessionStateChanged:]
  -[WCXPCManager handleMessageSendingAllowed]
  -[WCXPCManager sendMessage:clientPairingID:acceptanceHandler:errorHandler:]
  -[WCXPCManager cancelAllOutstandingMessages]
  -[WCXPCManager sendMessage:clientPairingID:acceptanceHandler:]
  -[WCXPCManager setReconnectRetryCount:]
  -[WCXPCManager onqueue_retryConnectIfNecessary]
  -[WCXPCManager handleInterruptedConnection]
  -[WCXPCManager onqueue_reconnect]
  -[WCXPCManager reconnectFailed]
  -[WCXPCManager reconnectRetryCount]
  -[WCXPCManager setReconnectFailed:]
  -[WCXPCManager setConnectionInvalidated:]


NSError(WCError)
	// class methods
	+[NSError(WCError) wcErrorWithCode:]
	+[NSError(WCError) userInfoDictionaryWithErrorStringsForErrorCode:]
	+[NSError(WCError) wcErrorWithCode:userInfo:]
	+[NSError(WCError) wcErrorWithCode:underlyingWCErrorWithCode:]
	+[NSError(WCError) wcErrorWithCode:underlyingError:]
	+[NSError(WCError) wcErrorFromReceivedCode:]
	+[NSError(WCError) wcInternalErrorWithCode:]
	+[NSError(WCError) wcErrorFromInternalError:]

01 00 0100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUDashboardClient 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSInvocationOperation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
