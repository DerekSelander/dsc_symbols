|| __DATA.__data _CHHapticAudioResourceKeyLoopEnabled
|| __DATA.__data _CHHapticAudioResourceKeyUseVolumeEnvelope
|| __DATA.__data _CHHapticDynamicParameterIDAudioAttackTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioBrightnessControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioDecayTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioPanControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioPitchControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioReleaseTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDAudioVolumeControl
|| __DATA.__data _CHHapticDynamicParameterIDHapticAttackTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDHapticDecayTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDHapticIntensityControl
|| __DATA.__data _CHHapticDynamicParameterIDHapticReleaseTimeControl
|| __DATA.__data _CHHapticDynamicParameterIDHapticSharpnessControl
|| __DATA.__data _CHHapticEventParameterIDAttackTime
|| __DATA.__data _CHHapticEventParameterIDAudioBrightness
|| __DATA.__data _CHHapticEventParameterIDAudioPan
|| __DATA.__data _CHHapticEventParameterIDAudioPitch
|| __DATA.__data _CHHapticEventParameterIDAudioVolume
|| __DATA.__data _CHHapticEventParameterIDDecayTime
|| __DATA.__data _CHHapticEventParameterIDHapticFullnessSelect
|| __DATA.__data _CHHapticEventParameterIDHapticIntensity
|| __DATA.__data _CHHapticEventParameterIDHapticSharpness
|| __DATA.__data _CHHapticEventParameterIDHapticSharpnessSelect
|| __DATA.__data _CHHapticEventParameterIDReleaseTime
|| __DATA.__data _CHHapticEventParameterIDSustained
|| __DATA.__data _CHHapticEventTypeAudioClick
|| __DATA.__data _CHHapticEventTypeAudioContinuous
|| __DATA.__data _CHHapticEventTypeAudioCustom
|| __DATA.__data _CHHapticEventTypeHapticContinuous
|| __DATA.__data _CHHapticEventTypeHapticTransient
|| __DATA.__data _CHHapticEventTypeWheelsOfTime
|| __DATA.__data _CHHapticPatternKeyAudioPowerUsage
|| __DATA.__data _CHHapticPatternKeyConfiguration
|| __DATA.__data _CHHapticPatternKeyEvent
|| __DATA.__data _CHHapticPatternKeyEventDuration
|| __DATA.__data _CHHapticPatternKeyEventParameters
|| __DATA.__data _CHHapticPatternKeyEventType
|| __DATA.__data _CHHapticPatternKeyEventWaveformLoopEnabled
|| __DATA.__data _CHHapticPatternKeyEventWaveformPath
|| __DATA.__data _CHHapticPatternKeyEventWaveformUseVolumeEnvelope
|| __DATA.__data _CHHapticPatternKeyHapticPowerUsage
|| __DATA.__data _CHHapticPatternKeyLocality
|| __DATA.__data _CHHapticPatternKeyParameter
|| __DATA.__data _CHHapticPatternKeyParameterCurve
|| __DATA.__data _CHHapticPatternKeyParameterCurveControlPoints
|| __DATA.__data _CHHapticPatternKeyParameterID
|| __DATA.__data _CHHapticPatternKeyParameterValue
|| __DATA.__data _CHHapticPatternKeyPattern
|| __DATA.__data _CHHapticPatternKeyPriority
|| __DATA.__data _CHHapticPatternKeyTime
|| __DATA.__data _CHHapticPatternKeyUsageCategory
|| __DATA.__data _CHHapticPatternKeyVersion
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticParameterCurveValue
|| __DATA.__objc_data _OBJC_CLASS_$_AVHapticSequence
|| __DATA.__objc_data _OBJC_CLASS_$_CHHapticDynamicParameter
|| __DATA.__objc_data _OBJC_CLASS_$_CHHapticParameterCurve
|| __DATA.__objc_data _OBJC_CLASS_$_CHHapticParameterCurveControlPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticParameterCurveValue
|| __DATA.__objc_data _OBJC_METACLASS_$_AVHapticSequence
|| __DATA.__objc_data _OBJC_METACLASS_$_CHHapticDynamicParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_CHHapticParameterCurve
|| __DATA.__objc_data _OBJC_METACLASS_$_CHHapticParameterCurveControlPoint
|| __DATA_CONST.__const _CHHapticEngineOptionKeyAudioPowerUsage
|| __DATA_CONST.__const _CHHapticEngineOptionKeyHapticPowerUsage
|| __DATA_CONST.__const _CHHapticEngineOptionKeyLocality
|| __DATA_CONST.__const _CHHapticEngineOptionKeyPriority
|| __DATA_CONST.__const _CHHapticEngineOptionKeyUsageCategory
|| __DATA_CONST.__const _CHHapticLocalityDefault
|| __DATA_CONST.__const _CHHapticLocalityDefaultWithFullStrength
|| __DATA_CONST.__const _CHHapticLocalityFullGamut
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyConnectedToPower
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardDeletion
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardDeletionRapid
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardDeletionRepeat
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardInputCandidate
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardInputSeparator
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardInputText
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardOther
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyKeyboardSwitchMode
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyScreenLocked
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyTestPattern01
|| __DATA_CONST.__const _CHHapticPatternLibraryKeyTestPattern02
|| __DATA_CONST.__const _CHHapticPowerUsageHigh
|| __DATA_CONST.__const _CHHapticPowerUsageLow
|| __DATA_CONST.__const _CHHapticPriorityExclusive
|| __DATA_CONST.__const _CHHapticPriorityHigh
|| __DATA_CONST.__const _CHHapticPriorityHighest
|| __DATA_CONST.__const _CHHapticPriorityLow
|| __DATA_CONST.__const _CHHapticUsageCategoryDefault
|| __DATA_CONST.__const _CHHapticUsageCategoryDefaultWithConstantVolume
|| __DATA_CONST.__const _CHHapticUsageCategorySystemSound
|| __DATA_CONST.__const _CHHapticUsageCategoryUIFeedback
|| __DATA_CONST.__const _CHHapticUsageCategoryiOSKeyboard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVHapticPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVHapticPlayerChannel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHHapticEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHHapticEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHHapticEventParameter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CHHapticPattern
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVHapticPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVHapticPlayerChannel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHHapticEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHHapticEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHHapticEventParameter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CHHapticPattern
__ AudioSession: _AVAudioSessionCategoryPlayback
__ AudioSession: _AVAudioSessionCategorySystemSoundsAndHaptics
__ AudioSession: _AVAudioSessionModeDefault
__ AudioSession: _AVAudioSessionModeHapticsConstantVolume
__ AudioSession: _OBJC_CLASS_$_AVAudioSession
__ AudioToolboxCore: _ExtAudioFileDispose
__ AudioToolboxCore: _ExtAudioFileGetProperty
__ AudioToolboxCore: _ExtAudioFileOpenURL
__ AudioToolboxCore: _ExtAudioFileRead
__ AudioToolboxCore: _ExtAudioFileSetProperty
__ AudioToolboxCore: _OBJC_CLASS_$_AVHapticEvent
__ AudioToolboxCore: _OBJC_CLASS_$_AVHapticPlayerParameterCurve
__ AudioToolboxCore: _OBJC_CLASS_$_AVHapticPlayerParameterCurveControlPoint
__ AudioToolboxCore: _clientParamToSynthParam
__ AudioToolboxCore: _clientParamValueToFixedParamValue
__ AudioToolboxCore: _createHapticCommandWriter
__ AudioToolboxCore: _destroyHapticCommandWriter
__ AudioToolboxCore: _reserveForWrite
__ AudioToolboxCore: _updateReservedWriteIndex
__ AudioToolboxCore: _writeCommand
__ AudioToolboxCore: _writeCommandToReserved
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAbsoluteTimeGetGregorianDate
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringFindAndReplace
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFStringTrim
__ CoreFoundation: _CFTimeZoneCopySystem
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSClassFromString
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ libAudioStatistics.dylib: _OBJC_CLASS_$_CAReporter
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_type_shmem
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi
__ libc++.1.dylib: __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__15mutexD1Ev
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyCppObjectAtomic
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
PatternPlayer : PatternPlayerBase <CHHapticPatternPlayerExtended>
 @property  BOOL isMuted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PatternPlayer setIsMuted:]
  -[PatternPlayer dealloc]
  -[PatternPlayer isMuted]
  -[PatternPlayer .cxx_destruct]
  -[PatternPlayer init]
  -[PatternPlayer stopAtTime:error:]
  -[PatternPlayer startAtTime:error:]
  -[PatternPlayer sendParameters:atTime:error:]
  -[PatternPlayer startAtTime:withImmediateParameters:error:]
  -[PatternPlayer scheduleParameterCurve:atTime:error:]
  -[PatternPlayer cancelAndReturnError:]
  -[PatternPlayer releaseExternalResources:events:]
  -[PatternPlayer processImmediateParameters:]
  -[PatternPlayer initWithPlayable:engine:privileged:error:]
  -[PatternPlayer doSetMute:]
  -[PatternPlayer clearExternalResources:]


CHHapticParameterAttributesImpl : NSObject <CHHapticParameterAttributes>
 @property  float minValue
 @property  float maxValue
 @property  float defaultValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CHHapticParameterAttributesImpl defaultValue]
  -[CHHapticParameterAttributesImpl minValue]
  -[CHHapticParameterAttributesImpl maxValue]
  -[CHHapticParameterAttributesImpl init]
  -[CHHapticParameterAttributesImpl initWithMinValue:maxValue:defaultValue:]


CHDefaultHapticDeviceCapability : NSObject <CHHapticDeviceCapability>
 @property  unsigned long maximumNumberOfHapticChannels
 @property  unsigned long maximumNumberOfAudioChannels
 @property  BOOL supportsHaptics
 @property  BOOL supportsAudio

  // instance methods
  -[CHDefaultHapticDeviceCapability initPrivate]
  -[CHDefaultHapticDeviceCapability init]
  -[CHDefaultHapticDeviceCapability supportsAudio]
  -[CHDefaultHapticDeviceCapability supportsHaptics]
  -[CHDefaultHapticDeviceCapability attributesForEventParameter:eventType:error:]
  -[CHDefaultHapticDeviceCapability attributesForDynamicParameter:error:]
  -[CHDefaultHapticDeviceCapability maximumNumberOfHapticChannels]
  -[CHDefaultHapticDeviceCapability maximumNumberOfAudioChannels]
  -[CHDefaultHapticDeviceCapability maximumValueForEventParameter:]
  -[CHDefaultHapticDeviceCapability minimumValueForEventParameter:]
  -[CHDefaultHapticDeviceCapability defaultValueForEventParameter:eventType:]
  -[CHDefaultHapticDeviceCapability maximumValueForDynamicParameter:]
  -[CHDefaultHapticDeviceCapability minimumValueForDynamicParameter:]
  -[CHDefaultHapticDeviceCapability defaultValueForDynamicParameter:]


CHHapticParameterCurve : NSObject
 @property  NSString *parameterID
 @property  double relativeTime
 @property  NSArray *controlPoints

  // instance methods
  -[CHHapticParameterCurve .cxx_destruct]
  -[CHHapticParameterCurve init]
  -[CHHapticParameterCurve relativeTime]
  -[CHHapticParameterCurve setRelativeTime:]
  -[CHHapticParameterCurve controlPoints]
  -[CHHapticParameterCurve parameterID]
  -[CHHapticParameterCurve initWithParameterID:controlPoints:relativeTime:]


CHHapticParameterCurveControlPoint : NSObject
 @property  double relativeTime
 @property  float value

  // instance methods
  -[CHHapticParameterCurveControlPoint setValue:]
  -[CHHapticParameterCurveControlPoint value]
  -[CHHapticParameterCurveControlPoint init]
  -[CHHapticParameterCurveControlPoint relativeTime]
  -[CHHapticParameterCurveControlPoint setRelativeTime:]
  -[CHHapticParameterCurveControlPoint initWithRelativeTime:value:]


HapticServerConfig : NSObject
 @property  BOOL usingInternalHaptics
 @property  BOOL supportsAudioPlayback
 @property  BOOL supportsHapticPlayback
 @property  BOOL supportsAdvancedPatternPlayers
 @property  float hapticContinuousTimeLimit
 @property  NSString *currentLocality
 @property  float defaultHapticTransientEventSharpness
 @property  float defaultHapticContinuousEventSharpness
 @property  float defaultHapticTransientEventIntensity
 @property  float defaultHapticContinuousEventIntensity
 @property  {vector<unsigned long hapticTransientIDs
 @property  {vector<unsigned long hapticContinuousSustainedIDs
 @property  {vector<unsigned long hapticContinuousNonsustainedIDs

  // instance methods
  -[HapticServerConfig .cxx_construct]
  -[HapticServerConfig .cxx_destruct]
  -[HapticServerConfig initWithHapticPlayer:withOptions:error:]
  -[HapticServerConfig usingInternalHaptics]
  -[HapticServerConfig supportsAudioPlayback]
  -[HapticServerConfig supportsHapticPlayback]
  -[HapticServerConfig supportsAdvancedPatternPlayers]
  -[HapticServerConfig hapticContinuousTimeLimit]
  -[HapticServerConfig currentLocality]
  -[HapticServerConfig defaultHapticTransientEventSharpness]
  -[HapticServerConfig defaultHapticContinuousEventSharpness]
  -[HapticServerConfig defaultHapticTransientEventIntensity]
  -[HapticServerConfig defaultHapticContinuousEventIntensity]
  -[HapticServerConfig hapticTransientIDs]
  -[HapticServerConfig hapticContinuousSustainedIDs]
  -[HapticServerConfig hapticContinuousNonsustainedIDs]


AdvancedPatternPlayer : PatternPlayerBase <CHHapticAdvancedPatternPlayerExtended>
 @property  double seekOffset
 @property  BOOL running
 @property  BOOL paused
 @property  BOOL loopEnabled
 @property  double loopEnd
 @property  float playbackRate
 @property  BOOL isMuted
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AdvancedPatternPlayer resetState]
  -[AdvancedPatternPlayer running]
  -[AdvancedPatternPlayer setIsMuted:]
  -[AdvancedPatternPlayer setPlaybackRate:]
  -[AdvancedPatternPlayer dealloc]
  -[AdvancedPatternPlayer isMuted]
  -[AdvancedPatternPlayer .cxx_destruct]
  -[AdvancedPatternPlayer playbackRate]
  -[AdvancedPatternPlayer paused]
  -[AdvancedPatternPlayer seekToOffset:error:]
  -[AdvancedPatternPlayer setCompletionHandler:]
  -[AdvancedPatternPlayer completionHandler]
  -[AdvancedPatternPlayer init]
  -[AdvancedPatternPlayer stopAtTime:error:]
  -[AdvancedPatternPlayer startAtTime:error:]
  -[AdvancedPatternPlayer sendParameters:atTime:error:]
  -[AdvancedPatternPlayer activateChannelByIndex:atTime:error:]
  -[AdvancedPatternPlayer setVolume:atTime:error:]
  -[AdvancedPatternPlayer setLoopEnd:]
  -[AdvancedPatternPlayer setLoopEnabled:]
  -[AdvancedPatternPlayer earlyUnduckAudioAtTime:error:]
  -[AdvancedPatternPlayer scheduleParameterCurve:atTime:error:]
  -[AdvancedPatternPlayer cancelAndReturnError:]
  -[AdvancedPatternPlayer doSetMute:]
  -[AdvancedPatternPlayer clearExternalResources:]
  -[AdvancedPatternPlayer pauseAtTime:error:]
  -[AdvancedPatternPlayer resumeAtTime:error:]
  -[AdvancedPatternPlayer loopEnabled]
  -[AdvancedPatternPlayer loopEnd]
  -[AdvancedPatternPlayer setRunning]
  -[AdvancedPatternPlayer setPaused]
  -[AdvancedPatternPlayer finishInit]
  -[AdvancedPatternPlayer initWithPattern:engine:privileged:error:]
  -[AdvancedPatternPlayer doStartFromStoppedAtTime:error:]
  -[AdvancedPatternPlayer doStartFromPausedAtTime:error:]
  -[AdvancedPatternPlayer doResumeAtTime:error:]
  -[AdvancedPatternPlayer patternDuration]
  -[AdvancedPatternPlayer initWithRingtoneData:engine:error:]
  -[AdvancedPatternPlayer initWithVibePatternDictionary:engine:error:]
  -[AdvancedPatternPlayer seekOffset]
  -[AdvancedPatternPlayer setSeekOffset:]


EventToDictionaryConverter : NSObject
  // class methods
  +[EventToDictionaryConverter eventTypeToNSString:]
  +[EventToDictionaryConverter paramTypeToNSString:]
  +[EventToDictionaryConverter convertEvents:]


PatternPlayerBase : NSObject <PatternPlayerDetails>
 @property  CHHapticEngine *engine
 @property  NSString *patternID
 @property  double patternDuration

  // instance methods
  -[PatternPlayerBase setEngine:]
  -[PatternPlayerBase engine]
  -[PatternPlayerBase .cxx_destruct]
  -[PatternPlayerBase patternDuration]
  -[PatternPlayerBase needsResetForAction:]
  -[PatternPlayerBase patternID]


HapticDictionaryWriter : NSObject
  // instance methods
  -[HapticDictionaryWriter patternToDictionary:events:parameters:parameterCurves:embeddedResourceInfo:configuration:]
  -[HapticDictionaryWriter eventToDictionary:embeddedResourceInfo:]
  -[HapticDictionaryWriter eventParamsToArray:]
  -[HapticDictionaryWriter paramToDictionary:]
  -[HapticDictionaryWriter paramCurveToDictionary:]
  -[HapticDictionaryWriter paramCurveControlPointsToArray:]


HapticCommandConverter : NSObject
 @property  HapticServerConfig *serverConfig

  // instance methods
  -[HapticCommandConverter .cxx_destruct]
  -[HapticCommandConverter serverConfig]
  -[HapticCommandConverter initWithServerConfig:]
  -[HapticCommandConverter eventForAudioEventType:time:eventParams:duration:]
  -[HapticCommandConverter transientHapticEventTypeFromSharpness:]
  -[HapticCommandConverter transientHapticEventTypeForDefaultSharpness]
  -[HapticCommandConverter eventForTransientHapticAtTime:params:duration:]
  -[HapticCommandConverter eventForLegacyTransientHapticAtTime:params:duration:]
  -[HapticCommandConverter continuousHapticEventTypeFromSharpness:sustained:]
  -[HapticCommandConverter continuousHapticEventTypeForDefaultSharpness:]
  -[HapticCommandConverter eventForContinuousHapticEventType:time:params:duration:]
  -[HapticCommandConverter eventForSPIEventType:time:eventParams:duration:]
  -[HapticCommandConverter eventForEventEntry:engine:privileged:]
  -[HapticCommandConverter eventForDynamicParameterEntry:]
  -[HapticCommandConverter eventForParameterCurveEntry:]
  -[HapticCommandConverter CHtoAVParameterCurve:]


HapticDictionaryReader : NSObject
  // instance methods
  -[HapticDictionaryReader readAndVerifyVersion:error:]
  -[HapticDictionaryReader parseConfiguration:error:]
  -[HapticDictionaryReader scanForEmbeddedResources:]
  -[HapticDictionaryReader parseEventsAndParameters:withBaseURL:reply:]
  -[HapticDictionaryReader parseEvent:withBaseURL:]
  -[HapticDictionaryReader parseEventParams:]
  -[HapticDictionaryReader parseParam:]
  -[HapticDictionaryReader parseParamCurve:]
  -[HapticDictionaryReader parseParamCurveControlPoints:]


CHHapticEventParameter : NSObject
 @property  NSString *parameterID
 @property  float value

  // instance methods
  -[CHHapticEventParameter .cxx_destruct]
  -[CHHapticEventParameter setValue:]
  -[CHHapticEventParameter value]
  -[CHHapticEventParameter init]
  -[CHHapticEventParameter initWithParameterID:value:]
  -[CHHapticEventParameter parameterID]


CHHapticDynamicParameter : NSObject
 @property  NSString *parameterID
 @property  float value
 @property  double relativeTime

  // instance methods
  -[CHHapticDynamicParameter .cxx_destruct]
  -[CHHapticDynamicParameter setValue:]
  -[CHHapticDynamicParameter value]
  -[CHHapticDynamicParameter init]
  -[CHHapticDynamicParameter initWithParameterID:value:relativeTime:]
  -[CHHapticDynamicParameter relativeTime]
  -[CHHapticDynamicParameter setRelativeTime:]
  -[CHHapticDynamicParameter parameterID]


PlaybackAction : NSObject
 @property  long long action
 @property  float time

  // instance methods
  -[PlaybackAction time]
  -[PlaybackAction setTime:]
  -[PlaybackAction action]
  -[PlaybackAction setAction:]


CHMetrics : NSObject
  // class methods
  +[CHMetrics currentTime]

  // instance methods
  -[CHMetrics .cxx_construct]
  -[CHMetrics dealloc]
  -[CHMetrics .cxx_destruct]
  -[CHMetrics isEnabled]
  -[CHMetrics initWithEngine:audioSessionID:sessionIsShared:isSPI:]
  -[CHMetrics handleServerRecovery]
  -[CHMetrics handleEngineStart]
  -[CHMetrics handleEngineStop]
  -[CHMetrics handleParamCurveEncountered]
  -[CHMetrics handleInitForPlayer:events:isAdvanced:patternID:]
  -[CHMetrics handleStartForPlayer:time:isAdvanced:patternID:]
  -[CHMetrics handleActionForPlayer:action:time:isAdvanced:]
  -[CHMetrics handleFinishedForPlayersAtTime:]
  -[CHMetrics setReporter]
  -[CHMetrics startReporter]
  -[CHMetrics stopReporter]
  -[CHMetrics getIDForPlayer:]
  -[CHMetrics dispatchOnLocal:]
  -[CHMetrics logMetric:value:]
  -[CHMetrics logPowerLogMetric:]
  -[CHMetrics addPatternLibraryMetric:]
  -[CHMetrics sendPatternLibraryMetrics]
  -[CHMetrics logPatternLibraryMetric:]
  -[CHMetrics sendDetailedMetricsForPlayerID:endTime:]
  -[CHMetrics markPlaybackAction:action:time:]
  -[CHMetrics markAdvancedPlaybackAction:action:time:]
  -[CHMetrics resetPlaybackData:]
  -[CHMetrics resetAdvancedPlaybackData:]
  -[CHMetrics prepareData:events:]
  -[CHMetrics preparePlaybackData:events:]
  -[CHMetrics prepareAdvancedPlaybackData:events:]
  -[CHMetrics removePlaybackData:]
  -[CHMetrics getLoopsForPlayer:endTime:]
  -[CHMetrics getLoopsForAdvancedPlayer:endTime:]
  -[CHMetrics isEventType:inList:]
  -[CHMetrics continousDictionary:slot:intensity:]
  -[CHMetrics continuousSharpnessSlotKeyFromSlotValue:]
  -[CHMetrics legacyTransientDictionary:eventType:intensity:]
  -[CHMetrics transientDictionary:index:intensity:]
  -[CHMetrics transientSharpnessIndexKeyFromIndexValue:]
  -[CHMetrics intensityBinKeyFromValue:]
  -[CHMetrics setMetricsTestModeEnabled]
  -[CHMetrics getMetricsForPlayer:]
  -[CHMetrics retainData:forTestingPlayer:]


AVHapticSequenceEntry : NSObject
 @property  @? handler
 @property  BOOL running
 @property  BOOL detached

  // instance methods
  -[AVHapticSequenceEntry setRunning:]
  -[AVHapticSequenceEntry running]
  -[AVHapticSequenceEntry setHandler:]
  -[AVHapticSequenceEntry .cxx_destruct]
  -[AVHapticSequenceEntry handler]
  -[AVHapticSequenceEntry initWithHandler:]
  -[AVHapticSequenceEntry detached]
  -[AVHapticSequenceEntry setDetached:]


AVHapticClient : NSObject <NSXPCListenerDelegate, CHHapticClientInterface>
 @property  BOOL connected
 @property  unsigned long clientID
 @property  NSArray *channelKeys
 @property  BOOL prewarmed
 @property  BOOL running
 @property  int state
 @property  int serverProcessID
 @property  double hapticLatency
 @property  @? asyncStopCallback
 @property  @? completionCallback
 @property  @? connectionCallback
 @property  BOOL disconnecting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVHapticClient allocateResources:]
  -[AVHapticClient disconnect]
  -[AVHapticClient running]
  -[AVHapticClient releaseResources]
  -[AVHapticClient clientID]
  -[AVHapticClient setConnected:]
  -[AVHapticClient connected]
  -[AVHapticClient .cxx_construct]
  -[AVHapticClient state]
  -[AVHapticClient dealloc]
  -[AVHapticClient .cxx_destruct]
  -[AVHapticClient setCompletionCallback:]
  -[AVHapticClient finish:]
  -[AVHapticClient stopPrewarm]
  -[AVHapticClient prewarm:]
  -[AVHapticClient setState:]
  -[AVHapticClient stopRunning]
  -[AVHapticClient loadHapticEvent:reply:]
  -[AVHapticClient createCustomAudioEvent:format:frames:options:reply:]
  -[AVHapticClient copyCustomAudioEvent:options:reply:]
  -[AVHapticClient referenceCustomAudioEvent:reply:]
  -[AVHapticClient releaseCustomAudioEvent:reply:]
  -[AVHapticClient startRunning:]
  -[AVHapticClient stopRunning:]
  -[AVHapticClient getAsyncDelegateForMethod:errorHandler:]
  -[AVHapticClient getSyncDelegateForMethod:errorHandler:]
  -[AVHapticClient sequenceFinished:error:]
  -[AVHapticClient clientCompletedWithError:]
  -[AVHapticClient clientStoppedForReason:error:]
  -[AVHapticClient clientDisconnectingForReason:error:]
  -[AVHapticClient initWithOptions:error:]
  -[AVHapticClient completionCallback]
  -[AVHapticClient prewarmed]
  -[AVHapticClient queryServerCapabilities:reply:]
  -[AVHapticClient hapticLatency]
  -[AVHapticClient expectNotifyAfter:]
  -[AVHapticClient setChannelEventBehavior:channel:]
  -[AVHapticClient resetChannel:atTime:]
  -[AVHapticClient doSendEvents:withImmediateParameters:atTime:channel:sorted:outToken:error:]
  -[AVHapticClient doScheduleParamCurve:atTime:channel:paramCurve:error:]
  -[AVHapticClient doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:]
  -[AVHapticClient sendEvents:withImmediateParameters:atTime:channel:outToken:error:]
  -[AVHapticClient clearEventsFromTime:channel:]
  -[AVHapticClient setParameter:atTime:value:channel:]
  -[AVHapticClient scheduleParameterCurve:curve:atTime:channel:error:]
  -[AVHapticClient loadAndPrepareHapticSequenceFromData:reply:]
  -[AVHapticClient loadAndPrepareHapticSequenceFromEvents:reply:]
  -[AVHapticClient loadAndPrepareHapticSequenceFromVibePattern:reply:]
  -[AVHapticClient setSequenceEventBehavior:behavior:channel:]
  -[AVHapticClient setSequenceFinishedHandlerForID:finishedHandler:]
  -[AVHapticClient getSequenceFinishedHandlerForID:]
  -[AVHapticClient callSequenceFinishedHandlersWithError:]
  -[AVHapticClient setRunStateForSequenceEntryWithID:running:]
  -[AVHapticClient detachSequenceEntryforID:]
  -[AVHapticClient prepareHapticSequence:error:]
  -[AVHapticClient enableSequenceLooping:enable:error:]
  -[AVHapticClient setSequenceLoopLength:length:error:]
  -[AVHapticClient setSequencePlaybackRate:rate:error:]
  -[AVHapticClient startHapticSequence:atTime:withOffset:]
  -[AVHapticClient stopHapticSequence:atTime:]
  -[AVHapticClient pauseHapticSequence:atTime:]
  -[AVHapticClient resumeHapticSequence:atTime:]
  -[AVHapticClient seekHapticSequence:toTime:]
  -[AVHapticClient resetHapticSequence:atTime:]
  -[AVHapticClient sendUnduckAudioCommand:atTime:]
  -[AVHapticClient setSequenceChannelParameter:atTime:value:sequenceID:channel:]
  -[AVHapticClient clearSequenceEvents:atTime:]
  -[AVHapticClient detachHapticSequence:]
  -[AVHapticClient doInit]
  -[AVHapticClient setupConnectionWithOptions:error:]
  -[AVHapticClient setChannelKeys:]
  -[AVHapticClient setPlayerBehavior:error:]
  -[AVHapticClient clearAssignedChannels]
  -[AVHapticClient requestAssignedChannels:error:]
  -[AVHapticClient removeAssignedChannelID:error:]
  -[AVHapticClient handleServerConnectionInterruption]
  -[AVHapticClient handleServerConnectionInvalidation]
  -[AVHapticClient calculateHapticCommandParamCurveMemorySize:]
  -[AVHapticClient destroySharedMemory]
  -[AVHapticClient channelKeys]
  -[AVHapticClient connectionCallback]
  -[AVHapticClient setConnectionCallback:]
  -[AVHapticClient disconnecting]
  -[AVHapticClient serverProcessID]
  -[AVHapticClient setServerProcessID:]
  -[AVHapticClient asyncStopCallback]
  -[AVHapticClient setAsyncStopCallback:]


CHHapticPattern : NSObject <CHHapticPlayable>
 @property  float version
 @property  NSDictionary *configurationDictionary
 @property  double duration
 @property  NSArray *events
 @property  NSArray *parameters
 @property  NSArray *parameterCurves
 @property  NSString *patternID
 @property  NSString *locality
 @property  NSString *priority
 @property  NSString *hapticPowerUsage
 @property  NSString *audioPowerUsage
 @property  NSString *usageCategory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHHapticPattern patternForKey:error:]
  +[CHHapticPattern addHapticsForWheelsOfTime:]
  +[CHHapticPattern eventListFromEvents:parameters:parameterCurves:engine:privileged:]

  // instance methods
  -[CHHapticPattern initWithContentsOfURL:error:]
  -[CHHapticPattern events]
  -[CHHapticPattern parameters]
  -[CHHapticPattern initWithDictionary:error:]
  -[CHHapticPattern .cxx_destruct]
  -[CHHapticPattern duration]
  -[CHHapticPattern version]
  -[CHHapticPattern priority]
  -[CHHapticPattern configurationDictionary]
  -[CHHapticPattern locality]
  -[CHHapticPattern init]
  -[CHHapticPattern initWithEvents:parameters:error:]
  -[CHHapticPattern initWithEvents:parameterCurves:error:]
  -[CHHapticPattern parameterCurves]
  -[CHHapticPattern patternID]
  -[CHHapticPattern resolveExternalResources:error:]
  -[CHHapticPattern hapticPowerUsage]
  -[CHHapticPattern audioPowerUsage]
  -[CHHapticPattern usageCategory]
  -[CHHapticPattern doInitWithDictionary:error:]
  -[CHHapticPattern exportDictionaryAndReturnError:]
  -[CHHapticPattern exportDictionaryWithConfigurationAndReturnError:]
  -[CHHapticPattern eventListFromDictionary:error:]


CHEmbeddedAudioResourceInfo : NSObject
 @property  NSURL *url
 @property  NSDictionary *options

  // instance methods
  -[CHEmbeddedAudioResourceInfo initWithURL:options:]
  -[CHEmbeddedAudioResourceInfo .cxx_destruct]
  -[CHEmbeddedAudioResourceInfo options]
  -[CHEmbeddedAudioResourceInfo url]


CHHapticEngine : NSObject
 @property  AVHapticPlayer *player
 @property  BOOL running
 @property  CHMetrics *metrics
 @property  BOOL activateAudioSessionOnStart
 @property  AVAudioSession *avAudioSession
 @property  unsigned int audioSessionID
 @property  BOOL sessionIsShared
 @property  @? clientFinishedHandler
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned long currentPlayerBehavior
 @property  BOOL needsAudioPowerBudget
 @property  HapticServerConfig *serverConfig
 @property  BOOL muteHapticsWhileRecordingAudio
 @property  BOOL followAudioRoute
 @property  BOOL highPriority
 @property  NSArray *availableLocalities
 @property  NSString *locality
 @property  NSString *priority
 @property  NSString *hapticPowerUsage
 @property  NSString *audioPowerUsage
 @property  NSString *usageCategory
 @property  double autoShutdownTimeout
 @property  double currentTime
 @property  @? stoppedHandler
 @property  @? resetHandler
 @property  BOOL playsHapticsOnly
 @property  BOOL playsAudioOnly
 @property  BOOL isMutedForAudio
 @property  BOOL isMutedForHaptics
 @property  BOOL autoShutdownEnabled

  // class methods
  +[CHHapticEngine lazyInitResourceMap]
  +[CHHapticEngine doRegisterAudioResource:options:fromPattern:player:error:]
  +[CHHapticEngine doUnregisterAudioResource:fromPattern:player:error:]
  +[CHHapticEngine initialize]
  +[CHHapticEngine clearResourceMap]
  +[CHHapticEngine dispatchOnGlobal:]
  +[CHHapticEngine supports1stPartyHaptics]
  +[CHHapticEngine supportsHapticServer]
  +[CHHapticEngine capabilitiesForHardware]
  +[CHHapticEngine resourceIsRegistered:]

  // instance methods
  -[CHHapticEngine currentTime]
  -[CHHapticEngine setRunning:]
  -[CHHapticEngine running]
  -[CHHapticEngine audioSessionID]
  -[CHHapticEngine stopWithCompletionHandler:]
  -[CHHapticEngine setHighPriority:]
  -[CHHapticEngine stopAndWait]
  -[CHHapticEngine .cxx_construct]
  -[CHHapticEngine dealloc]
  -[CHHapticEngine resetHandler]
  -[CHHapticEngine .cxx_destruct]
  -[CHHapticEngine setTimer:]
  -[CHHapticEngine timer]
  -[CHHapticEngine serverConfig]
  -[CHHapticEngine player]
  -[CHHapticEngine setResetHandler:]
  -[CHHapticEngine highPriority]
  -[CHHapticEngine setAutoShutdownEnabled:]
  -[CHHapticEngine priority]
  -[CHHapticEngine startAndReturnError:]
  -[CHHapticEngine metrics]
  -[CHHapticEngine startWithCompletionHandler:]
  -[CHHapticEngine stopPrewarm]
  -[CHHapticEngine isAutoShutdownEnabled]
  -[CHHapticEngine locality]
  -[CHHapticEngine handleMediaServerDeath:]
  -[CHHapticEngine init]
  -[CHHapticEngine resourceIsRegistered:]
  -[CHHapticEngine prewarmWithCompletionHandler:]
  -[CHHapticEngine setFollowAudioRoute:]
  -[CHHapticEngine playsHapticsOnly]
  -[CHHapticEngine setPlaysHapticsOnly:]
  -[CHHapticEngine setPlaysAudioOnly:]
  -[CHHapticEngine initWithAudioSession:sessionIsShared:options:error:]
  -[CHHapticEngine createPrivilegedPlayerWithPlayable:error:]
  -[CHHapticEngine createPlayerWithPattern:error:]
  -[CHHapticEngine setMuteHapticsWhileRecordingAudio:]
  -[CHHapticEngine notifyWhenPlayersFinished:]
  -[CHHapticEngine registerAudioResource:options:error:]
  -[CHHapticEngine setStoppedHandler:]
  -[CHHapticEngine initWithAudioSessionID:error:]
  -[CHHapticEngine createAdvancedPlayerWithRingtonePattern:error:]
  -[CHHapticEngine createAdvancedPlayerWithRingtoneData:error:]
  -[CHHapticEngine handleConnectionError]
  -[CHHapticEngine getDurationForResource:]
  -[CHHapticEngine createAdvancedPlayerWithVibePatternDictionary:error:]
  -[CHHapticEngine createAdvancedPlayerWithPattern:error:]
  -[CHHapticEngine unregisterAudioResource:error:]
  -[CHHapticEngine initWithOptions:error:]
  -[CHHapticEngine initAndReturnError:]
  -[CHHapticEngine initWithAudioSession:sessionIsShared:error:]
  -[CHHapticEngine autoShutdownTimeout]
  -[CHHapticEngine setAutoShutdownTimeout:]
  -[CHHapticEngine setupUnsharedAudioSession:isConstantVolume:needsAudioPowerBudget:error:]
  -[CHHapticEngine setupSystemSoundAudioSession:needsAudioPowerBudget:error:]
  -[CHHapticEngine getUsageCategory:]
  -[CHHapticEngine setupEngineWithCategory:session:needsAudioPowerBudget:error:]
  -[CHHapticEngine updateAudioConfigurations:session:]
  -[CHHapticEngine dispatchOnLocal:]
  -[CHHapticEngine setMetricsTestModeEnabled]
  -[CHHapticEngine getMetricsForPlayer:]
  -[CHHapticEngine hapticPowerUsage]
  -[CHHapticEngine audioPowerUsage]
  -[CHHapticEngine usageCategory]
  -[CHHapticEngine handleMediaServerRecovery:]
  -[CHHapticEngine isBehaviorSet:]
  -[CHHapticEngine toggleBehavior:set:]
  -[CHHapticEngine playsAudioOnly]
  -[CHHapticEngine muteHapticsWhileRecordingAudio]
  -[CHHapticEngine isMutedForAudio]
  -[CHHapticEngine setIsMutedForAudio:]
  -[CHHapticEngine isMutedForHaptics]
  -[CHHapticEngine setIsMutedForHaptics:]
  -[CHHapticEngine followAudioRoute]
  -[CHHapticEngine availableLocalities]
  -[CHHapticEngine needsAudioPowerBudget]
  -[CHHapticEngine connectAudioSession:]
  -[CHHapticEngine disconnectAudioSession:]
  -[CHHapticEngine getSessionIDFromAVAudioSession:]
  -[CHHapticEngine getReporterIDFromAVAudioSession:]
  -[CHHapticEngine createHapticPlayerWithOptions:]
  -[CHHapticEngine finishInit:]
  -[CHHapticEngine startIdleTimerWithHandler:]
  -[CHHapticEngine beginIdleTimer]
  -[CHHapticEngine cancelIdleTimer]
  -[CHHapticEngine handleFinish:]
  -[CHHapticEngine updateEngineBehavior]
  -[CHHapticEngine updateEngineBehaviorWithError:]
  -[CHHapticEngine createOptionsFromAudioSessionID:shared:]
  -[CHHapticEngine storeOptions:]
  -[CHHapticEngine doInit:sessionIsShared:options:error:]
  -[CHHapticEngine initWithAudioSession:error:]
  -[CHHapticEngine reconfigureAudioSession]
  -[CHHapticEngine doInitWithOptions:error:]
  -[CHHapticEngine doStartWithCompletionHandler:]
  -[CHHapticEngine doStartEngineAndWait:]
  -[CHHapticEngine doStopEngineAndWait:]
  -[CHHapticEngine doStopWithCompletionHandler:]
  -[CHHapticEngine isResourceLoopEnabled:]
  -[CHHapticEngine doFindPublicAudioResourceID:]
  -[CHHapticEngine addPublicAudioResourceID:withURL:options:]
  -[CHHapticEngine hasPublicAudioResourceID:]
  -[CHHapticEngine idForPublicAudioResourceURL:withOptions:]
  -[CHHapticEngine removePublicAudioResourceID:]
  -[CHHapticEngine doUnregisterAllPublicAudioResources]
  -[CHHapticEngine playPatternFromURL:error:]
  -[CHHapticEngine playPatternFromData:error:]
  -[CHHapticEngine doPlayPattern:error:]
  -[CHHapticEngine stoppedHandler]
  -[CHHapticEngine avAudioSession]
  -[CHHapticEngine sessionIsShared]
  -[CHHapticEngine clientFinishedHandler]
  -[CHHapticEngine setClientFinishedHandler:]
  -[CHHapticEngine currentPlayerBehavior]
  -[CHHapticEngine setCurrentPlayerBehavior:]
  -[CHHapticEngine activateAudioSessionOnStart]
  -[CHHapticEngine setActivateAudioSessionOnStart:]
  -[CHHapticEngine dispatchSyncOnLocal:]
  -[CHHapticEngine checkEngineStateOnStart:]
  -[CHHapticEngine checkEngineRunning:]
  -[CHHapticEngine notifyPlayerStarted:atTime:]
  -[CHHapticEngine notifyPlayerStopped:atTime:]
  -[CHHapticEngine getAvailableChannel:]
  -[CHHapticEngine releaseChannel:]
  -[CHHapticEngine doReferenceAudioResourceByID:]


AVHapticPlayerChannel : NSObject
 @property  unsigned long chanID
 @property  AVHapticClient *client
 @property  unsigned long eventBehavior

  // instance methods
  -[AVHapticPlayerChannel .cxx_destruct]
  -[AVHapticPlayerChannel setClient:]
  -[AVHapticPlayerChannel client]
  -[AVHapticPlayerChannel eventBehavior]
  -[AVHapticPlayerChannel invalidate]
  -[AVHapticPlayerChannel initWithChannelID:client:]
  -[AVHapticPlayerChannel setEventBehavior:]
  -[AVHapticPlayerChannel sendEvents:atTime:error:]
  -[AVHapticPlayerChannel sendEvents:withImmediateParameters:atTime:error:]
  -[AVHapticPlayerChannel clearEvents:error:]
  -[AVHapticPlayerChannel setParameter:value:atTime:error:]
  -[AVHapticPlayerChannel scheduleParameterCurve:curve:atTime:error:]
  -[AVHapticPlayerChannel resetAtTime:error:]
  -[AVHapticPlayerChannel chanID]
  -[AVHapticPlayerChannel setChanID:]


AVHapticPlayer : NSObject
 @property  AVHapticClient *client
 @property  BOOL resourcesAllocated
 @property  @? stopRunningHandler
 @property  unsigned long behavior
 @property  NSArray *channels
 @property  double currentMediaTime
 @property  double hapticLatency
 @property  @? connectionErrorHandler

  // class methods
  +[AVHapticPlayer isSupported]
  +[AVHapticPlayer supportsAudio]
  +[AVHapticPlayer supportsHaptics]

  // instance methods
  -[AVHapticPlayer behavior]
  -[AVHapticPlayer setBehavior:]
  -[AVHapticPlayer dealloc]
  -[AVHapticPlayer .cxx_destruct]
  -[AVHapticPlayer client]
  -[AVHapticPlayer channels]
  -[AVHapticPlayer stopPrewarm]
  -[AVHapticPlayer currentMediaTime]
  -[AVHapticPlayer prewarmWithCompletionHandler:]
  -[AVHapticPlayer stopRunning]
  -[AVHapticPlayer deallocateRenderResources]
  -[AVHapticPlayer releaseChannels]
  -[AVHapticPlayer loadHapticEvent:reply:]
  -[AVHapticPlayer createCustomAudioEvent:format:frames:options:reply:]
  -[AVHapticPlayer copyCustomAudioEvent:options:reply:]
  -[AVHapticPlayer referenceCustomAudioEvent:reply:]
  -[AVHapticPlayer releaseCustomAudioEvent:reply:]
  -[AVHapticPlayer initWithOptions:error:]
  -[AVHapticPlayer queryServerCapabilities:reply:]
  -[AVHapticPlayer hapticLatency]
  -[AVHapticPlayer expectNotifyAfter:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromData:reply:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromEvents:reply:]
  -[AVHapticPlayer loadAndPrepareHapticSequenceFromVibePattern:reply:]
  -[AVHapticPlayer prepareHapticSequence:error:]
  -[AVHapticPlayer enableSequenceLooping:enable:error:]
  -[AVHapticPlayer setSequenceLoopLength:length:error:]
  -[AVHapticPlayer setSequencePlaybackRate:rate:error:]
  -[AVHapticPlayer stopHapticSequence:atTime:]
  -[AVHapticPlayer pauseHapticSequence:atTime:]
  -[AVHapticPlayer resumeHapticSequence:atTime:]
  -[AVHapticPlayer seekHapticSequence:toTime:]
  -[AVHapticPlayer resetHapticSequence:atTime:]
  -[AVHapticPlayer sendUnduckAudioCommand:atTime:]
  -[AVHapticPlayer clearSequenceEvents:atTime:]
  -[AVHapticPlayer detachHapticSequence:]
  -[AVHapticPlayer createOptionsFromAudioSessionID:shared:]
  -[AVHapticPlayer doInitWithOptions:error:]
  -[AVHapticPlayer initWithSessionID:error:]
  -[AVHapticPlayer initWithSessionID:sessionIsShared:error:]
  -[AVHapticPlayer setBehavior:error:]
  -[AVHapticPlayer getBehavior]
  -[AVHapticPlayer setNumberOfChannels:error:]
  -[AVHapticPlayer addChannel:]
  -[AVHapticPlayer removeChannel:error:]
  -[AVHapticPlayer setConnectionErrorHandler:]
  -[AVHapticPlayer connectionErrorHandler]
  -[AVHapticPlayer invalidateChannels]
  -[AVHapticPlayer allocateRenderResourcesWithCompletionHandler:]
  -[AVHapticPlayer startRunningWithCompletionHandler:]
  -[AVHapticPlayer stopRunningWithCompletionHandler:]
  -[AVHapticPlayer finishWithCompletionHandler:]
  -[AVHapticPlayer playHapticSequence:atTime:offset:]
  -[AVHapticPlayer setSequenceChannelParam:atTime:channel:param:value:error:]
  -[AVHapticPlayer stopRunningHandler]
  -[AVHapticPlayer setStopRunningHandler:]
  -[AVHapticPlayer resourcesAllocated]


AVHapticSequence : NSObject
 @property  AVHapticPlayer *player
 @property  unsigned long seqID
 @property  double duration
 @property  double lastStartTime
 @property  unsigned long activeChannel
 @property  unsigned long eventBehavior
 @property  BOOL loopingEnabled
 @property  float playbackRate
 @property  unsigned long channelCount
 @property  @? completionHandler

  // instance methods
  -[AVHapticSequence activeChannel]
  -[AVHapticSequence setActiveChannel:]
  -[AVHapticSequence setDuration:]
  -[AVHapticSequence channelCount]
  -[AVHapticSequence setPlaybackRate:]
  -[AVHapticSequence dealloc]
  -[AVHapticSequence .cxx_destruct]
  -[AVHapticSequence playbackRate]
  -[AVHapticSequence duration]
  -[AVHapticSequence player]
  -[AVHapticSequence eventBehavior]
  -[AVHapticSequence setPlayer:]
  -[AVHapticSequence setCompletionHandler:]
  -[AVHapticSequence completionHandler]
  -[AVHapticSequence init]
  -[AVHapticSequence stopAtTime:error:]
  -[AVHapticSequence setLoopingEnabled:]
  -[AVHapticSequence activateChannelByIndex:atTime:error:]
  -[AVHapticSequence setVolume:atTime:error:]
  -[AVHapticSequence loopingEnabled]
  -[AVHapticSequence earlyUnduckAudioAtTime:error:]
  -[AVHapticSequence cancelAndReturnError:]
  -[AVHapticSequence pauseAtTime:error:]
  -[AVHapticSequence resumeAtTime:error:]
  -[AVHapticSequence setEventBehavior:]
  -[AVHapticSequence resetAtTime:error:]
  -[AVHapticSequence initWithData:player:error:]
  -[AVHapticSequence initWithEvents:player:error:]
  -[AVHapticSequence initWithDictionary:player:error:]
  -[AVHapticSequence setLoopingEnabled:error:]
  -[AVHapticSequence getChannelCount]
  -[AVHapticSequence setLoopLength:error:]
  -[AVHapticSequence prepareToPlayAndReturnError:]
  -[AVHapticSequence playAtTime:offset:error:]
  -[AVHapticSequence seekToTime:error:]
  -[AVHapticSequence setParameter:value:channel:atTime:error:]
  -[AVHapticSequence seqID]
  -[AVHapticSequence setSeqID:]
  -[AVHapticSequence lastStartTime]
  -[AVHapticSequence setLastStartTime:]


AVHapticParameterCurveValue : NSObject
 @property  double time
 @property  float value

  // instance methods
  -[AVHapticParameterCurveValue time]
  -[AVHapticParameterCurveValue setTime:]
  -[AVHapticParameterCurveValue setValue:]
  -[AVHapticParameterCurveValue value]


CHHapticEvent : NSObject <CHHapticPlayable>
 @property  unsigned long audioResID
 @property  double fullDuration
 @property  NSString *type
 @property  NSArray *eventParameters
 @property  double relativeTime
 @property  double duration
 @property  NSArray *events
 @property  NSArray *parameters
 @property  NSArray *parameterCurves
 @property  NSString *patternID
 @property  NSString *locality
 @property  NSString *priority
 @property  NSString *hapticPowerUsage
 @property  NSString *audioPowerUsage
 @property  NSString *usageCategory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CHHapticEvent parameterValuesFromLegacyEventType:sharpness:fullness:error:]

  // instance methods
  -[CHHapticEvent getType]
  -[CHHapticEvent events]
  -[CHHapticEvent setDuration:]
  -[CHHapticEvent parameters]
  -[CHHapticEvent type]
  -[CHHapticEvent .cxx_destruct]
  -[CHHapticEvent duration]
  -[CHHapticEvent priority]
  -[CHHapticEvent locality]
  -[CHHapticEvent init]
  -[CHHapticEvent initWithEventType:parameters:relativeTime:duration:]
  -[CHHapticEvent initWithEventType:parameters:relativeTime:]
  -[CHHapticEvent initWithAudioResourceID:parameters:relativeTime:]
  -[CHHapticEvent parameterCurves]
  -[CHHapticEvent relativeTime]
  -[CHHapticEvent setRelativeTime:]
  -[CHHapticEvent eventParameters]
  -[CHHapticEvent initWithAudioResourceID:parameters:relativeTime:duration:]
  -[CHHapticEvent patternID]
  -[CHHapticEvent resolveExternalResources:error:]
  -[CHHapticEvent hapticPowerUsage]
  -[CHHapticEvent audioPowerUsage]
  -[CHHapticEvent usageCategory]
  -[CHHapticEvent fullDuration]
  -[CHHapticEvent initWithAudioResourceIndex:parameters:time:duration:]
  -[CHHapticEvent audioResID]


01 00 0200 /System/Library/PrivateFrameworks/AudioSession.framework/AudioSession: AVAudioSession 
01 00 0300 /System/Library/PrivateFrameworks/AudioToolboxCore.framework/AudioToolboxCore: AVHapticEvent 
01 00 0300 /System/Library/PrivateFrameworks/AudioToolboxCore.framework/AudioToolboxCore: AVHapticPlayerParameterCurve 
01 00 0300 /System/Library/PrivateFrameworks/AudioToolboxCore.framework/AudioToolboxCore: AVHapticPlayerParameterCurveControlPoint 
01 00 0400 /usr/lib/libAudioStatistics.dylib: CAReporter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
