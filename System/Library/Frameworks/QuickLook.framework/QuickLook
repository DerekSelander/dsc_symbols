|| __DATA.__objc_data _OBJC_CLASS_$_QLAnimatedImage
|| __DATA.__objc_data _OBJC_CLASS_$_QLContactItemTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_QLCustomItemViewController
|| __DATA.__objc_data _OBJC_CLASS_$_QLDataFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_QLDataItemTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_QLDelegateProxy
|| __DATA.__objc_data _OBJC_CLASS_$_QLDetailItemViewControllerState
|| __DATA.__objc_data _OBJC_CLASS_$_QLDismissAction
|| __DATA.__objc_data _OBJC_CLASS_$_QLEditedItem
|| __DATA.__objc_data _OBJC_CLASS_$_QLImageItemContents
|| __DATA.__objc_data _OBJC_CLASS_$_QLImageItemDataContents
|| __DATA.__objc_data _OBJC_CLASS_$_QLImageItemURLContents
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemAggregatedViewController
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemFetcherFactory
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemThumbnailGenerationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemThumbnailGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_QLNetworkStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_QLNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_QLPreviewContext
|| __DATA.__objc_data _OBJC_CLASS_$_QLPreviewItemEditedCopy
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnail
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnailCreationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnailDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_QLToolbarButtonOption
|| __DATA.__objc_data _OBJC_CLASS_$_QLURLItemTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLAnimatedImage
|| __DATA.__objc_data _OBJC_METACLASS_$_QLContactItemTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLCustomItemViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDataFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDataItemTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDelegateProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDetailItemViewControllerState
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDismissAction
|| __DATA.__objc_data _OBJC_METACLASS_$_QLEditedItem
|| __DATA.__objc_data _OBJC_METACLASS_$_QLImageItemContents
|| __DATA.__objc_data _OBJC_METACLASS_$_QLImageItemDataContents
|| __DATA.__objc_data _OBJC_METACLASS_$_QLImageItemURLContents
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemAggregatedViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemFetcherFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemThumbnailGenerationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemThumbnailGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLNetworkStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_QLNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_QLPreviewContext
|| __DATA.__objc_data _OBJC_METACLASS_$_QLPreviewItemEditedCopy
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnail
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnailCreationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnailDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_QLToolbarButtonOption
|| __DATA.__objc_data _OBJC_METACLASS_$_QLURLItemTransformer
|| __DATA_CONST.__const _QLActionButtonIdentifier
|| __DATA_CONST.__const _QLAudioItemViewControllerQuickTimeImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLAudioScrubberViewContainerAccessibilityIdentifier
|| __DATA_CONST.__const _QLCustomItemViewControllerErrorDomain
|| __DATA_CONST.__const _QLCustomToolBarAccessibilityIdentifier
|| __DATA_CONST.__const _QLCustomToolBarModalAccessibilityIdentifier
|| __DATA_CONST.__const _QLDoneButtonIdentifier
|| __DATA_CONST.__const _QLImageItemViewControllerImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLListButtonIdentifier
|| __DATA_CONST.__const _QLLivePhotoViewControllerLivePhotoBadgeAccessibilityIdentifier
|| __DATA_CONST.__const _QLLivePhotoViewControllerLivePhotoViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLMarkupImageItemViewControllerMarkupImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarPlayButtonPausedAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarPlayButtonPlayingAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarRotateRightButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarTrimButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLMovieScrubberViewContainerAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayCustomActionButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayDefaultActionButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayDoneButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayListButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayMarkupButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayPlayButtonDefaultAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFViewControllerViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLRemoteItemViewControllerHostViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLWKWebViewControllerWkWebViewAccessibilityIdentifier
|| __DATA_CONST.__const _kQLPreviewContentIDScheme
|| __DATA_CONST.__const _kQLPreviewOptionPasswordKey
|| __DATA_CONST.__const _kQLPreviewPropertyAllowJavascriptKey
|| __DATA_CONST.__const _kQLPreviewPropertyAttachmentDataKey
|| __DATA_CONST.__const _kQLPreviewPropertyAttachmentsKey
|| __DATA_CONST.__const _kQLPreviewPropertyHeightKey
|| __DATA_CONST.__const _kQLPreviewPropertyMIMETypeKey
|| __DATA_CONST.__const _kQLPreviewPropertyTextEncodingNameKey
|| __DATA_CONST.__const _kQLPreviewPropertyWidthKey
|| __DATA_CONST.__const _kQLTestingNotificationTimestampKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLDetailItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLImageItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLPreviewConverter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLScrollableContentItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLToolbarButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLDetailItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLImageItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLPreviewConverter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLScrollableContentItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLToolbarButton
|| __TEXT.__const _QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions
|| __TEXT.__const _QLPreviewItemEditingModeUpdateContentsAndDisplayDismissActions
|| __TEXT.__text _NSStringFromQLNetworkState
|| __TEXT.__text _QLCGSizeFromQLItemThumbnailSize
|| __TEXT.__text _QLConvertPointFromAnchorPointToNewAnchorPoint
|| __TEXT.__text _QLLocalizedDictionaryString
|| __TEXT.__text _QLLocalizedString
|| __TEXT.__text _QLLocalizedStringFromTable
|| __TEXT.__text _QLLocalizedStringWithDefaultValue
|| __TEXT.__text _QLNotify
|| __TEXT.__text _QLNotifySelector
|| __TEXT.__text _QLPreviewControllerSupportsContentType
|| __TEXT.__text _QLPreviewGetSupportedMIMETypes
|| __TEXT.__text _QLPreviewNeedsHelpUnzippingURL
|| __TEXT.__text _QLPreviewRequestAppendDataToAttachment
|| __TEXT.__text _QLPreviewRequestCreateAttachmentURL
|| __TEXT.__text _QLPreviewRequestGetDocumentObject
|| __TEXT.__text _QLPreviewRequestIsCancelled
|| __TEXT.__text _QLPreviewRequestSetDataRepresentation
|| __TEXT.__text _QLPreviewRequestSetDocumentObject
|| __TEXT.__text _QLPreviewRequestSetError
|| __TEXT.__text _QLPreviewRequestStartDataRepresentation
|| __TEXT.__text _QLRunInBackgroundThread
|| __TEXT.__text _QLRunInMainThread
|| __TEXT.__text _QLRunInMainThreadSync
|| __TEXT.__text _QLSizeAspectRatioEqualToSizeAspectRatioWithTolerance
|| __TEXT.__text _QLTypeCopyBestMimeTypeForFileNameAndMimeType
|| __TEXT.__text _QLTypeCopyBestMimeTypeForURLAndMimeType
|| __TEXT.__text _QLTypeCopyUTIForURLAndMimeType
|| __TEXT.__text __QLContentTypeConformsToContentTypeInSet
|| __TEXT.__text __QLContentTypeConformsToRawImage
|| __TEXT.__text __QLContentTypeEqualsToContentTypeInSet
|| __TEXT.__text __QLCopyArchiveExtensionIfIsArchiveFileName
|| __TEXT.__text __QLCopyPackageExtensionIfIsArchiveFileName
|| __TEXT.__text __QLTypeCopyUTIForFileNameAndMimeType
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVFormatIDKey
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonKeyAlbumName
__ AVFoundation: _AVMetadataCommonKeyArtist
__ AVFoundation: _AVMetadataCommonKeyArtwork
__ AVFoundation: _AVMetadataCommonKeyTitle
__ AVFoundation: _AVMetadataFormatQuickTimeUserData
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVMetadataKeySpaceQuickTimeUserData
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVMediaDataStorage
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableMovie
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVEditBehavior
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ Categories: _CTCategoryIdentifierEntertainment
__ Celestial: _AVSystemController_PIDToInheritApplicationStateFrom
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactVCardSerialization
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyPreferredLocalizationsFromArray
__ CoreFoundation: _CFBundleCopyResourceURLForLocalization
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringConvertEncodingToNSStringEncoding
__ CoreFoundation: _CFStringConvertIANACharSetNameToEncoding
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasPrefix
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingPathExtension
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsHiddenKey
__ CoreFoundation: _NSURLIsPackageKey
__ CoreFoundation: _NSURLIsUbiquitousItemKey
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusCurrent
__ CoreFoundation: _NSURLUbiquitousItemDownloadingStatusKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: __CFURLCopySecurityScopeFromFileURL
__ CoreFoundation: __CFURLIsItemPromiseAtURL
__ CoreFoundation: __CFURLPromiseCopyPhysicalURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGPDFDocumentCreateWithProvider
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer
__ CoreMedia: _CMSampleBufferGetDuration
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyDescription
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeEqual
__ CoreServices: __UTTypeIsWildcard
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeArchive
__ CoreServices: _kUTTypeAudio
__ CoreServices: _kUTTypeCalendarEvent
__ CoreServices: _kUTTypeData
__ CoreServices: _kUTTypeDirectory
__ CoreServices: _kUTTypeFlatRTFD
__ CoreServices: _kUTTypeGIF
__ CoreServices: _kUTTypeHTML
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeJSON
__ CoreServices: _kUTTypeLivePhoto
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypePackage
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypeRTF
__ CoreServices: _kUTTypeRTFD
__ CoreServices: _kUTTypeRawImage
__ CoreServices: _kUTTypeScalableVectorGraphics
__ CoreServices: _kUTTypeText
__ CoreServices: _kUTTypeVCard
__ CoreServices: _kUTTypeWebArchive
__ CoreServices: _kUTTypeXML
__ DeviceManagement: _OBJC_CLASS_$_DMFApplicationPolicyMonitor
__ DeviceManagement: _OBJC_CLASS_$_DMFCategoryPolicyMonitor
__ FileProvider: _OBJC_CLASS_$_FPItem
__ FileProvider: _OBJC_CLASS_$_FPItemManager
__ FileProvider: _OBJC_CLASS_$_FPSandboxingURLWrapper
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLStringErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileAccessIntent
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLProtocol
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLResponse
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Foundation: _OBJC_METACLASS_$_NSURLProtocol
__ Foundation: __NSDictionaryOfVariableBindings
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCopyTypeIdentifiers
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImagePropertyAPNGDelayTime
__ ImageIO: _kCGImagePropertyAPNGUnclampedDelayTime
__ ImageIO: _kCGImagePropertyGIFDelayTime
__ ImageIO: _kCGImagePropertyGIFDictionary
__ ImageIO: _kCGImagePropertyGIFUnclampedDelayTime
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ MediaPlayer: _MPMediaItemPropertyAlbumTitle
__ MediaPlayer: _MPMediaItemPropertyArtist
__ MediaPlayer: _MPMediaItemPropertyArtwork
__ MediaPlayer: _MPMediaItemPropertyPlaybackDuration
__ MediaPlayer: _MPMediaItemPropertyTitle
__ MediaPlayer: _MPNowPlayingInfoPropertyElapsedPlaybackTime
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItemArtwork
__ MediaPlayer: _OBJC_CLASS_$_MPNowPlayingInfoCenter
__ MediaPlayer: _OBJC_CLASS_$_MPRemoteCommandCenter
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuickLookSupport: _OBJC_CLASS_$_QLExtensionManager
__ QuickLookSupport: _OBJC_CLASS_$_QLExtensionThumbnailGenerator
__ QuickLookSupport: _OBJC_CLASS_$_QLUTIManager
__ QuickLookSupport: _OBJC_CLASS_$_QLZipArchive
__ QuickLookSupport: _QLAdaptSizeToRect
__ QuickLookSupport: _QLFrameworkBundle
__ QuickLookSupport: _QLGuessEncodingForTextFileAtURL
__ QuickLookSupport: _QLGuessEncodingForTextFileFromData
__ QuickLookSupport: _QLPreviewCopyEmbeddedPDF
__ QuickLookSupport: _QLSInitLogging
__ QuickLookSupport: _QLScaledPlatformImageFromImageSource
__ QuickLookSupport: __qlsLogHandle
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLAsynchronousOperation
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLFileThumbnailRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailAddition
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerationRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerator
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailItem
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailProvider
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailReply
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailServiceProxy
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLURLHandler
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLUTIAnalyzer
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLAsynchronousOperation
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLFileThumbnailRequest
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLThumbnailProvider
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLThumbnailReply
__ QuickLookThumbnailing: _QLThumbnailErrorDomain
__ QuickLookThumbnailing: _QL_SANDBOX_READ
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSBackgroundColorDocumentAttribute
__ UIKit: _NSCharacterEncodingDocumentAttribute
__ UIKit: _NSDocumentTypeDocumentAttribute
__ UIKit: _NSDocumentTypeDocumentOption
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSPaperMarginDocumentAttribute
__ UIKit: _NSPaperSizeDocumentAttribute
__ UIKit: _NSPlainTextDocumentType
__ UIKit: _NSRTFDTextDocumentType
__ UIKit: _NSRTFTextDocumentType
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIDocumentPasswordView
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPageViewController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPrintInfo
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_CLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISimpleTextPrintFormatter
__ UIKit: _OBJC_CLASS_$_UIStatusBarHideAnimationParameters
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPageViewController
__ UIKit: _OBJC_METACLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMarkupAsPDF
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIBackgroundModeAudio
__ UIKit: _UIBackgroundModesKey
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsBeginPDFContextToData
__ UIKit: _UIGraphicsBeginPDFPage
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsEndPDFContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyInputUpArrow
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIPageViewControllerOptionInterPageSpacingKey
__ UIKit: _UIRectFill
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UIStatusBarHiddenKey
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: __UIAccessibilityZoomTouchEnabled
__ UIKit: __UIApplicationIsExtension
__ UIKit: __UIApplicationLinkedOnVersion
__ UIKit: __UIStringFromWhitePointAdaptivityStyle
__ UIKit: __UIViewServiceErrorDomain
__ UIKit: ___UIApplicationLinkedOnOrAfter
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_crash_fmt
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_io_close
__ libSystem.B.dylib: _dispatch_io_create_with_path
__ libSystem.B.dylib: _dispatch_io_write
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
QLScreenTimeItemViewController : QLItemViewController
 @property  NSString *bundleIdentifier
 @property  NSString *categoryIdentifier
 @property  STLockoutViewController *lockoutViewController

  // instance methods
  -[QLScreenTimeItemViewController .cxx_destruct]
  -[QLScreenTimeItemViewController bundleIdentifier]
  -[QLScreenTimeItemViewController initWithBundleIdentifier:]
  -[QLScreenTimeItemViewController setBundleIdentifier:]
  -[QLScreenTimeItemViewController setCategoryIdentifier:]
  -[QLScreenTimeItemViewController categoryIdentifier]
  -[QLScreenTimeItemViewController lockoutViewController]
  -[QLScreenTimeItemViewController setLockoutViewController:]
  -[QLScreenTimeItemViewController canSwipeToDismiss]
  -[QLScreenTimeItemViewController initWithCategoryIdentifier:]
  -[QLScreenTimeItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLScreenTimeItemViewController canPinchToDismiss]
  -[QLScreenTimeItemViewController canEnterFullScreen]


QLActivityItemProvider : NSObject /usr/lib/libSystem.B.dylib <UIActivityItemSource>
 @property  QLPreviewPrinter *printer
 @property  QLItem *activityPreviewItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLActivityItemProvider .cxx_destruct]
  -[QLActivityItemProvider activityViewControllerPlaceholderItem:]
  -[QLActivityItemProvider activityViewController:itemForActivityType:]
  -[QLActivityItemProvider activityViewController:subjectForActivityType:]
  -[QLActivityItemProvider printer]
  -[QLActivityItemProvider setPrinter:]
  -[QLActivityItemProvider printInfo]
  -[QLActivityItemProvider activityViewControllerPlaceholderItems:]
  -[QLActivityItemProvider activityPreviewItem]
  -[QLActivityItemProvider mainItem]
  -[QLActivityItemProvider _pdfPreviewDataAtURL:]
  -[QLActivityItemProvider setActivityPreviewItem:]


QLStateManagerProxy : NSObject /usr/lib/libSystem.B.dylib
 @property  <QLPreviewControllerStateProtocolHostOnly> *stateManager

  // instance methods
  -[QLStateManagerProxy respondsToSelector:]
  -[QLStateManagerProxy methodSignatureForSelector:]
  -[QLStateManagerProxy forwardInvocation:]
  -[QLStateManagerProxy forwardingTargetForSelector:]
  -[QLStateManagerProxy .cxx_destruct]
  -[QLStateManagerProxy dropMethod]
  -[QLStateManagerProxy stateManager]
  -[QLStateManagerProxy setStateManager:]


QLPreviewControllerView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[QLPreviewControllerView init]


QLNavigationState : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL navigationBarHidden
 @property  BOOL toolBarHidden
 @property  BOOL translucentNavigationBar
 @property  BOOL translucentToolbar
 @property  UINavigationController *navigationController

  // instance methods
  -[QLNavigationState .cxx_destruct]
  -[QLNavigationState navigationController]
  -[QLNavigationState setNavigationBarHidden:]
  -[QLNavigationState setNavigationController:]
  -[QLNavigationState navigationBarHidden]
  -[QLNavigationState toolBarHidden]
  -[QLNavigationState setToolBarHidden:]
  -[QLNavigationState translucentNavigationBar]
  -[QLNavigationState setTranslucentNavigationBar:]
  -[QLNavigationState translucentToolbar]
  -[QLNavigationState setTranslucentToolbar:]


QLPreviewController : UIViewController /System/Library/Frameworks/WebKit.framework/WebKit <UIScreenshotServiceDelegate, UIDocumentInteractionControllerDelegate, UIGestureRecognizerDelegate, QLPreviewItemStoreDelegate, QLPreviewItemProvider, QLPreviewControllerStateProtocolHostOnly, UIPageViewControllerDelegate, UIViewControllerTransitioningDelegate, UINavigationControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *previewKeyCommands
 @property  BOOL canChangeCurrentPage
 @property  BOOL overlayHidden
 @property  BOOL fullScreen
 @property  BOOL previousStatusBarHidden
 @property  long long numberOfPreviewItems
 @property  QLItem *internalCurrentPreviewItem
 @property  UIViewController<QLPreviewCollectionProtocol> *previewCollection
 @property  <QLPrintingProtocol> *printer
 @property  NSArray *previewToolbarButtons
 @property  NSArray *excludedToolbarButtonIdentifiers
 @property  UIAlertController *doneButtonAlertController
 @property  QLNavigationState *previousNavigationVCState
 @property  UINavigationController *internalNavigationController
 @property  BOOL willTransitionToInternalView
 @property  BOOL didTransitionFromInternalView
 @property  BOOL allowInteractiveTransitions
 @property  QLToolbarController *toolbarController
 @property  QLPreviewItemStore *previewItemStore
 @property  QLActivityItemProvider *currentItemProvider
 @property  QLCustomURLSharingProxyDelegate *customURLSharingProxyDelegate
 @property  UIDocumentInteractionController *sharingInteractionController
 @property  <QLRemotePopoverTracker> *shareSheetPopoverTracker
 @property  @? shareSheetDismissCompletion
 @property  NSURL *accessedUrlForDocumentInteractionController
 @property  NSArray *originalLeftBarButtonItems
 @property  NSArray *originalRightBarButtonItems
 @property  NSString *currentTitleFromItemViewController
 @property  <QLPreviewControllerDelegate> *strongDelegate
 @property  UIPanGestureRecognizer *slideGesture
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  UIRotationGestureRecognizer *rotationGesture
 @property  QLSwipeDownTracker *swipeDownTracker
 @property  QLPinchRotationTracker *pinchRotationTracker
 @property  QLStateManager *stateManager
 @property  QLTransitionController *currentAnimator
 @property  BOOL canShowToolbar
 @property  BOOL canShowNavBar
 @property  BOOL currentPreviewHasRemoteUnsavedEdits
 @property  BOOL isObtainingEditsFromServiceBeforeDismissing
 @property  BOOL isTopPreviewController
 @property  unsigned long quickLookVisibility
 @property  unsigned long appearanceActions
 @property  BOOL isContentManaged
 @property  BOOL useCustomActionButton
 @property  BOOL showActionAsDefaultButton
 @property  NSArray *additionalLeftBarButtonItems
 @property  NSArray *additionalRightBarButtonItems
 @property  UIColor *toolbarTintColor
 @property  UIColor *navigationBarTintColor
 @property  UIColor *backgroundColor
 @property  UIColor *fullscreenBackgroundColor
 @property  unsigned long presentationMode
 @property  <QLPreviewControllerDataSource> *dataSource
 @property  long long currentPreviewItemIndex
 @property  <QLPreviewItem> *currentPreviewItem
 @property  <QLPreviewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewController canPreviewItem:]
  +[QLPreviewController presentPreviewItem:onViewController:withDelegate:animated:]
  +[QLPreviewController controllerWithItemStore:]
  +[QLPreviewController printPageRendererForItem:]
  +[QLPreviewController logDeprecatedMessageForMethodName:]
  +[QLPreviewController logDeprecatedMessageForSelector:]
  +[QLPreviewController contentTypeForPreviewItem:]
  +[QLPreviewController titleForPreviewItem:]
  +[QLPreviewController copyPreviewItemToPasteboard:]
  +[QLPreviewController canPreviewDocumentType:]
  +[QLPreviewController canPreviewMIMEType:]

  // instance methods
  -[QLPreviewController dealloc]
  -[QLPreviewController delegate]
  -[QLPreviewController setDelegate:]
  -[QLPreviewController .cxx_destruct]
  -[QLPreviewController mode]
  -[QLPreviewController isContentManaged]
  -[QLPreviewController sourceIsManaged]
  -[QLPreviewController dataSource]
  -[QLPreviewController setDataSource:]
  -[QLPreviewController fullScreen]
  -[QLPreviewController currentItem]
  -[QLPreviewController backgroundColor]
  -[QLPreviewController setBackgroundColor:]
  -[QLPreviewController loadView]
  -[QLPreviewController accessibilityPerformEscape]
  -[QLPreviewController initWithNibName:bundle:]
  -[QLPreviewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[QLPreviewController viewWillAppear:]
  -[QLPreviewController viewWillDisappear:]
  -[QLPreviewController viewDidLoad]
  -[QLPreviewController reloadData]
  -[QLPreviewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLPreviewController animationControllerForPresentedController:presentingController:sourceController:]
  -[QLPreviewController animationControllerForDismissedController:]
  -[QLPreviewController interactionControllerForPresentation:]
  -[QLPreviewController interactionControllerForDismissal:]
  -[QLPreviewController willMoveToParentViewController:]
  -[QLPreviewController viewDidAppear:]
  -[QLPreviewController viewDidDisappear:]
  -[QLPreviewController _updateBackgroundColor]
  -[QLPreviewController setNavigationBarTintColor:]
  -[QLPreviewController setToolbarTintColor:]
  -[QLPreviewController beginInteractiveTransition]
  -[QLPreviewController preferredStatusBarUpdateAnimation]
  -[QLPreviewController prefersHomeIndicatorAutoHidden]
  -[QLPreviewController _reloadDataIfNeeded]
  -[QLPreviewController childViewControllerForStatusBarHidden]
  -[QLPreviewController _preferredModalPresentationStyle]
  -[QLPreviewController _preferredWhitePointAdaptivityStyle]
  -[QLPreviewController prefersStatusBarHidden]
  -[QLPreviewController keyCommands]
  -[QLPreviewController _childViewControllerForWhitePointAdaptivityStyle]
  -[QLPreviewController setIsContentManaged:]
  -[QLPreviewController _doneButton]
  -[QLPreviewController applicationDidBecomeActive:]
  -[QLPreviewController applicationDidEnterBackground:]
  -[QLPreviewController printer]
  -[QLPreviewController setPrinter:]
  -[QLPreviewController documentInteractionControllerDidDismissOptionsMenu:]
  -[QLPreviewController excludedActivityTypesForDocumentInteractionController:]
  -[QLPreviewController _actionButton]
  -[QLPreviewController setFullScreen:]
  -[QLPreviewController setAppearanceActions:]
  -[QLPreviewController additionalActivitiesForDocumentInteractionController:]
  -[QLPreviewController activityItemForDocumentInteractionController:]
  -[QLPreviewController printInfoForDocumentInteractionController:]
  -[QLPreviewController currentPreviewItem]
  -[QLPreviewController setAdditionalRightBarButtonItems:]
  -[QLPreviewController presentPreviewItem:onViewController:withDelegate:animated:]
  -[QLPreviewController _doneButtonTapped:]
  -[QLPreviewController _actionButtonTapped:]
  -[QLPreviewController flexibleSpace]
  -[QLPreviewController _preferredBackgroundColor]
  -[QLPreviewController initWithPreviewItems:]
  -[QLPreviewController setCurrentOrbMode:]
  -[QLPreviewController setCurrentPreviewItemIndex:]
  -[QLPreviewController _prepareDelayedAppearance]
  -[QLPreviewController setLoadingTextForMissingFiles:]
  -[QLPreviewController refreshCurrentPreviewItem]
  -[QLPreviewController currentPreviewItemIndex]
  -[QLPreviewController navigationBarTintColor]
  -[QLPreviewController currentItemProvider]
  -[QLPreviewController internalCurrentPreviewItem]
  -[QLPreviewController setCurrentItemProvider:]
  -[QLPreviewController stateManager]
  -[QLPreviewController setStateManager:]
  -[QLPreviewController _commontInit]
  -[QLPreviewController setAllowInteractiveTransitions:]
  -[QLPreviewController _registerForApplicationStateChangesNotifications]
  -[QLPreviewController parentIsNavigationController]
  -[QLPreviewController _savePreviousNavigationVCState]
  -[QLPreviewController setPreviousStatusBarHidden:]
  -[QLPreviewController setQuickLookVisibility:animated:]
  -[QLPreviewController originalLeftBarButtonItems]
  -[QLPreviewController setOriginalLeftBarButtonItems:]
  -[QLPreviewController originalRightBarButtonItems]
  -[QLPreviewController setOriginalRightBarButtonItems:]
  -[QLPreviewController _computePresentationMode]
  -[QLPreviewController _setPresentationMode:]
  -[QLPreviewController _setPreferredWhitePointAdaptivityStyle:]
  -[QLPreviewController _presentPreviewCollection]
  -[QLPreviewController _isToolbarVisibleForTraitCollection:]
  -[QLPreviewController internalNavigationController]
  -[QLPreviewController updateOverlayAnimated:animatedButtons:forceRefresh:withTraitCollection:]
  -[QLPreviewController showNoDataViewIfNeeded]
  -[QLPreviewController _updateToolbarSuperview]
  -[QLPreviewController presentationMode]
  -[QLPreviewController previousNavigationVCState]
  -[QLPreviewController _notifyFirstAppearanceIfNeeded]
  -[QLPreviewController setCurrentAnimator:]
  -[QLPreviewController _updateAppearance:]
  -[QLPreviewController registerForScreenshotService]
  -[QLPreviewController didTransitionFromInternalView]
  -[QLPreviewController currentPreviewHasUnsavedEdits]
  -[QLPreviewController didEditCopyOfPreviewItemAtIndex:editedCopy:]
  -[QLPreviewController toolbarController]
  -[QLPreviewController willTransitionToInternalView]
  -[QLPreviewController _isBeingFullyDismissed]
  -[QLPreviewController quickLookVisibility]
  -[QLPreviewController updateStatusBarAnimated:]
  -[QLPreviewController unregisterFromScreenshotService]
  -[QLPreviewController currentAnimator]
  -[QLPreviewController setStrongDelegate:]
  -[QLPreviewController _basePreviewControllerIsBeingFullyDismissed]
  -[QLPreviewController _invalidatePreviewCollectionIfNeeded]
  -[QLPreviewController _updateOverlayButtonsForTraitCollection:animated:]
  -[QLPreviewController updateOverlayAnimated:forceRefresh:withTraitCollection:]
  -[QLPreviewController updateRemoteOverlayIfNeeded]
  -[QLPreviewController _unregisterForApplicationStateChangesNotifications]
  -[QLPreviewController hasItemsToPreview]
  -[QLPreviewController previewItemStore]
  -[QLPreviewController _showPreviewCollection]
  -[QLPreviewController _removePreviewCollectionFromViewHierarchy]
  -[QLPreviewController _presentLoadedPreviewCollection:]
  -[QLPreviewController _configurePreviewCollectionIfNeeded]
  -[QLPreviewController _invalidatePreviewCollectionIfNeededNow]
  -[QLPreviewController appearanceActions]
  -[QLPreviewController _updateAllowInteractiveTransitionsIfNeeded]
  -[QLPreviewController allowInteractiveTransitions]
  -[QLPreviewController updateOverlayAnimated:forceRefresh:]
  -[QLPreviewController previewCollection]
  -[QLPreviewController prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewController setCurrentPreviewHasRemoteUnsavedEdits:]
  -[QLPreviewController _refreshCurrentPreviewItemAnimated:]
  -[QLPreviewController _setCurrentPreviewItemIndex:updatePreview:animated:]
  -[QLPreviewController previewItemAtIndex:withCompletionHandler:]
  -[QLPreviewController _isQuickLookVisible]
  -[QLPreviewController _updateBarTintColors]
  -[QLPreviewController fullscreenBackgroundColor]
  -[QLPreviewController _updateViewHierarchyPresentation]
  -[QLPreviewController _shouldAllowInteractiveTransitions]
  -[QLPreviewController numberOfPreviewItems]
  -[QLPreviewController toolbarTintColor]
  -[QLPreviewController setCanShowToolbar:]
  -[QLPreviewController setCanShowNavBar:]
  -[QLPreviewController _setFullScreen:animated:force:]
  -[QLPreviewController _promptUserAndOpenURLIfNeeded:]
  -[QLPreviewController showShareSheetFromBarButton:]
  -[QLPreviewController showShareSheetFromRemoteViewWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewController dismissQuickLook]
  -[QLPreviewController _previousPreview]
  -[QLPreviewController _nextPreview]
  -[QLPreviewController _dismissQuickLookFromKeyboardCommand]
  -[QLPreviewController _keyCommandWasPerformed:]
  -[QLPreviewController setPreviewKeyCommands:]
  -[QLPreviewController setCanChangeCurrentPage:]
  -[QLPreviewController previewItemAtIndex:]
  -[QLPreviewController setWillTransitionToInternalView:]
  -[QLPreviewController setDidTransitionFromInternalView:]
  -[QLPreviewController editedItems]
  -[QLPreviewController didEditCopyOfPreviewItemAtIndex:editedCopy:completionHandler:]
  -[QLPreviewController setCurrentTitleFromItemViewController:]
  -[QLPreviewController updateNavigationTitle]
  -[QLPreviewController _topPreviewController]
  -[QLPreviewController _topViewControllerBelongsToHierarchy:]
  -[QLPreviewController hideNoDataView]
  -[QLPreviewController itemStore:editedFileBehaviorForItem:]
  -[QLPreviewController itemStore:canHandleEditedCopyOfPreviewItem:]
  -[QLPreviewController itemStore:canShareItem:]
  -[QLPreviewController itemStore:canEditItem:]
  -[QLPreviewController itemStore:editingModeForPreviewItem:]
  -[QLPreviewController setFullscreenBackgroundColor:]
  -[QLPreviewController previewCollectionUpdatePreviewItem:]
  -[QLPreviewController previewCollectionPrefersWhitePointAdaptivityStyle:]
  -[QLPreviewController setToolbarCanBeVisible:]
  -[QLPreviewController setNavBarCanBeVisible:]
  -[QLPreviewController updateOverlayButtons:]
  -[QLPreviewController updateKeyCommands]
  -[QLPreviewController setAccessoryViewVisible:]
  -[QLPreviewController openURLIfAllowed:]
  -[QLPreviewController showShareSheet]
  -[QLPreviewController showShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewController triggerQuickLookDismissal]
  -[QLPreviewController currentPreviewItemViewControllerHasUnsavedEdits:]
  -[QLPreviewController forwardMessage:toItemAtIndex:withUUID:completionHandler:]
  -[QLPreviewController expandContentOfItemAtIndex:withUUID:unarchivedItemsURLWrapper:]
  -[QLPreviewController presentAlertControllerForScenario:]
  -[QLPreviewController updatePreviewItemAtIndex:editedCopy:completionHandler:]
  -[QLPreviewController updatePreferredContentSize:]
  -[QLPreviewController updateTitle:]
  -[QLPreviewController remoteViewControllerWasInvalidated]
  -[QLPreviewController waitForPreviewCollectionWithCompletionHandler:]
  -[QLPreviewController setOverlayHidden:animated:]
  -[QLPreviewController setUseCustomActionButton:]
  -[QLPreviewController setShowActionAsDefaultButton:]
  -[QLPreviewController setQuickLookVisibility:]
  -[QLPreviewController isTopPreviewController]
  -[QLPreviewController _topViewController]
  -[QLPreviewController _quickLookWillBecomeVisible]
  -[QLPreviewController previewKeyCommands]
  -[QLPreviewController canChangeCurrentPage]
  -[QLPreviewController overlayHidden]
  -[QLPreviewController setOverlayHidden:]
  -[QLPreviewController previousStatusBarHidden]
  -[QLPreviewController previewToolbarButtons]
  -[QLPreviewController excludedToolbarButtonIdentifiers]
  -[QLPreviewController doneButtonAlertController]
  -[QLPreviewController setDoneButtonAlertController:]
  -[QLPreviewController setInternalNavigationController:]
  -[QLPreviewController customURLSharingProxyDelegate]
  -[QLPreviewController setCustomURLSharingProxyDelegate:]
  -[QLPreviewController sharingInteractionController]
  -[QLPreviewController setSharingInteractionController:]
  -[QLPreviewController shareSheetPopoverTracker]
  -[QLPreviewController setShareSheetPopoverTracker:]
  -[QLPreviewController shareSheetDismissCompletion]
  -[QLPreviewController setShareSheetDismissCompletion:]
  -[QLPreviewController accessedUrlForDocumentInteractionController]
  -[QLPreviewController setAccessedUrlForDocumentInteractionController:]
  -[QLPreviewController currentTitleFromItemViewController]
  -[QLPreviewController strongDelegate]
  -[QLPreviewController slideGesture]
  -[QLPreviewController setSlideGesture:]
  -[QLPreviewController pinchGesture]
  -[QLPreviewController setPinchGesture:]
  -[QLPreviewController rotationGesture]
  -[QLPreviewController setRotationGesture:]
  -[QLPreviewController swipeDownTracker]
  -[QLPreviewController setSwipeDownTracker:]
  -[QLPreviewController pinchRotationTracker]
  -[QLPreviewController setPinchRotationTracker:]
  -[QLPreviewController canShowToolbar]
  -[QLPreviewController canShowNavBar]
  -[QLPreviewController currentPreviewHasRemoteUnsavedEdits]
  -[QLPreviewController isObtainingEditsFromServiceBeforeDismissing]
  -[QLPreviewController setIsObtainingEditsFromServiceBeforeDismissing:]
  -[QLPreviewController useCustomActionButton]
  -[QLPreviewController showActionAsDefaultButton]
  -[QLPreviewController additionalLeftBarButtonItems]
  -[QLPreviewController setAdditionalLeftBarButtonItems:]
  -[QLPreviewController additionalRightBarButtonItems]
  -[QLPreviewController _listButton]
  -[QLPreviewController didSelectPreviewItem:]
  -[QLPreviewController _isInPickMode]
  -[QLPreviewController fetchPDFRepresentationWithCompletion:]
  -[QLPreviewController _didEditCopyOfPreviewItemAtIndex:editedCopy:synchronously:completionHandler:]
  -[QLPreviewController _handleEditedPreviewItem:editedCopy:synchronously:completionHandler:]
  -[QLPreviewController _updatePreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController _synchronouslyUpdateContentsOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController _asynchronouslyUpdateContentsOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController obtainAndUpdateEditedCopyOfCurrentPreviewItem:]
  -[QLPreviewController shareableURLForCurrentPreviewItem:]
  -[QLPreviewController _updateOverlayButtonsIfNeededWithTraitCollection:animated:updatedToolbarButtons:]
  -[QLPreviewController _toolBarButtonsWithTraitCollection:]
  -[QLPreviewController _navigationBarLeftButtonsWithTraitCollection:]
  -[QLPreviewController _navigationBarRightButtonsWithTraitCollection:]
  -[QLPreviewController _numberOfButtonsExcludingSpacersInButtons:disappearingOnTap:]
  -[QLPreviewController _updateCurrentPopoverButtonIfNeeded:newNavigationLeftButtons:]
  -[QLPreviewController _buttonWithAccessibilityIdentifierPointer:inButtons:]
  -[QLPreviewController _listDescriptionStringWithTitle:]
  -[QLPreviewController _listButtonTapped:]
  -[QLPreviewController _copyBarButtons:]
  -[QLPreviewController _toolbarButtonPressed:]
  -[QLPreviewController _additionalLeftButtonItems]
  -[QLPreviewController _needsListButton]
  -[QLPreviewController _additionalRightButtonItems]
  -[QLPreviewController _canPerformBarButtonAction]
  -[QLPreviewController _displayedButtonWithAccessibilityIdentifier:]
  -[QLPreviewController _showShareSheetFromBarButton:]
  -[QLPreviewController _stopAccessingUrlForDocumentInteractionController]
  -[QLPreviewController _setupDocumentInteractionControllerForPresentation:]
  -[QLPreviewController _setupDocumentInteractionControllerForPresentationWithURL:isCustomURL:completionHandler:]
  -[QLPreviewController _performQuickLookDismissalAnimated:]
  -[QLPreviewController _notifyPreviewCollectionOfDoneButtonTapWithSender:]
  -[QLPreviewController _obtainEditsFromServiceAndNotifyPreviewCollectionOfDoneButtonTappedWithSender:]
  -[QLPreviewController _willStartObtainingEditsFromService]
  -[QLPreviewController _didObtainEditsFromService]
  -[QLPreviewController _displayDismissActionsForEditedPreviewItemsIfNeeded:fromBarButtonItem:]
  -[QLPreviewController _editedItemsForDoneActionControllerWithItems:]
  -[QLPreviewController _triggerOverlayUpdateAfterDelay]
  -[QLPreviewController currentOrbMode]
  -[QLPreviewController animatorForShowing:previewController:presentingController:]
  -[QLPreviewController currentTracker]


QLImageItemContents : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  UIImage *image

  // class methods
  +[QLImageItemContents supportsSecureCoding]

  // instance methods
  -[QLImageItemContents encodeWithCoder:]
  -[QLImageItemContents initWithCoder:]
  -[QLImageItemContents .cxx_destruct]
  -[QLImageItemContents image]
  -[QLImageItemContents setImage:]
  -[QLImageItemContents initWithImage:]


QLImageItemURLContents : QLImageItemContents <NSSecureCoding>
 @property  NSURL *imageURL

  // class methods
  +[QLImageItemURLContents supportsSecureCoding]
  +[QLImageItemURLContents imageItemContentsWithImage:imageURL:]

  // instance methods
  -[QLImageItemURLContents encodeWithCoder:]
  -[QLImageItemURLContents initWithCoder:]
  -[QLImageItemURLContents .cxx_destruct]
  -[QLImageItemURLContents imageURL]
  -[QLImageItemURLContents setImageURL:]


QLImageItemDataContents : QLImageItemContents <NSSecureCoding>
 @property  NSData *imageData

  // class methods
  +[QLImageItemDataContents supportsSecureCoding]
  +[QLImageItemDataContents imageItemContentsWithImage:imageData:]

  // instance methods
  -[QLImageItemDataContents encodeWithCoder:]
  -[QLImageItemDataContents initWithCoder:]
  -[QLImageItemDataContents .cxx_destruct]
  -[QLImageItemDataContents imageData]
  -[QLImageItemDataContents setImageData:]


QLPXObservable : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long currentChanges

  // instance methods
  -[QLPXObservable init]
  -[QLPXObservable .cxx_destruct]
  -[QLPXObservable _willChange]
  -[QLPXObservable _didChange]
  -[QLPXObservable enumerateObserversUsingBlock:]
  -[QLPXObservable performChanges:]
  -[QLPXObservable registerChangeObserver:context:]
  -[QLPXObservable mutableChangeObject]
  -[QLPXObservable _observersQueue_copyChangeObserversForWriteIfNeeded]
  -[QLPXObservable willPerformChanges]
  -[QLPXObservable didPerformChanges]
  -[QLPXObservable _publishChanges]
  -[QLPXObservable didPublishChanges]
  -[QLPXObservable _applyPendingChanges]
  -[QLPXObservable unregisterChangeObserver:context:]
  -[QLPXObservable signalChange:]
  -[QLPXObservable currentChanges]


_UIToolbarConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  long long barStyle
 @property  BOOL translucent
 @property  UIImage *shadowImage
 @property  UIImage *backgroundImage
 @property  UIColor *backgroundColor
 @property  UIColor *barTintColor

  // instance methods
  -[_UIToolbarConfiguration copyWithZone:]
  -[_UIToolbarConfiguration .cxx_destruct]
  -[_UIToolbarConfiguration backgroundImage]
  -[_UIToolbarConfiguration setBackgroundImage:]
  -[_UIToolbarConfiguration backgroundColor]
  -[_UIToolbarConfiguration setBackgroundColor:]
  -[_UIToolbarConfiguration shadowImage]
  -[_UIToolbarConfiguration setShadowImage:]
  -[_UIToolbarConfiguration setBarStyle:]
  -[_UIToolbarConfiguration barStyle]
  -[_UIToolbarConfiguration isTranslucent]
  -[_UIToolbarConfiguration setTranslucent:]
  -[_UIToolbarConfiguration setBarTintColor:]
  -[_UIToolbarConfiguration barTintColor]


QLToolbarController : NSObject /usr/lib/libSystem.B.dylib
 @property  UIToolbar *originalToolbar
 @property  UIToolbar *customToolbar
 @property  UIView *accessoryView
 @property  double preferredAccesoryViewHeight
 @property  BOOL accessoryViewHidden
 @property  BOOL originalToolbarHidden
 @property  BOOL hidden
 @property  double toolbarAlpha
 @property  double originalToolbarAlpha
 @property  double accessoryViewAlpha
 @property  double hiddenProgress
 @property  double accessoryViewHiddenProgress
 @property  UIColor *barTintColor
 @property  UIView *preferredSuperview
 @property  UIView *preferredParentViewForSafeAreaInset

  // instance methods
  -[QLToolbarController init]
  -[QLToolbarController .cxx_destruct]
  -[QLToolbarController isHidden]
  -[QLToolbarController setHidden:]
  -[QLToolbarController setBarTintColor:]
  -[QLToolbarController barTintColor]
  -[QLToolbarController setAccessoryView:]
  -[QLToolbarController accessoryView]
  -[QLToolbarController updateLayout]
  -[QLToolbarController _totalHeight]
  -[QLToolbarController setOriginalToolbar:]
  -[QLToolbarController originalToolbar]
  -[QLToolbarController restoreOriginalToolbar]
  -[QLToolbarController setPreferredSuperview:preferredParentViewForSafeAreaInset:]
  -[QLToolbarController customToolbar]
  -[QLToolbarController setAccessoryViewHidden:]
  -[QLToolbarController isAccessoryViewHidden]
  -[QLToolbarController preferredSuperview]
  -[QLToolbarController _originalToolbarHeightIncludingSafeAreaBottomInset:]
  -[QLToolbarController _toolbarExtensionHeight]
  -[QLToolbarController _embedAccessoryView]
  -[QLToolbarController isOriginalToolbarHidden]
  -[QLToolbarController _toolbarSafeAreaInsetBottom]
  -[QLToolbarController accessoryViewHiddenProgress]
  -[QLToolbarController _computeClippingExtensionContainerHeightForCurrentHiddenProgress]
  -[QLToolbarController _layoutAccessoryView:]
  -[QLToolbarController restoreOriginalConfiguration]
  -[QLToolbarController _computeClippingExtensionContainerBottomConstraint]
  -[QLToolbarController hiddenProgress]
  -[QLToolbarController _tryToSetUp:]
  -[QLToolbarController setAccessoryViewHiddenProgress:]
  -[QLToolbarController setHiddenProgress:]
  -[QLToolbarController setAccessoryView:animated:]
  -[QLToolbarController setOriginalToolbarHidden:]
  -[QLToolbarController setPreferredAccesoryViewHeight:]
  -[QLToolbarController setToolbarAlpha:]
  -[QLToolbarController setAccessoryViewAlpha:]
  -[QLToolbarController setOriginalToolbarAlpha:]
  -[QLToolbarController preferredAccesoryViewHeight]
  -[QLToolbarController toolbarAlpha]
  -[QLToolbarController originalToolbarAlpha]
  -[QLToolbarController accessoryViewAlpha]
  -[QLToolbarController preferredParentViewForSafeAreaInset]


QLItemPresenterViewController : QLItemAggregatedViewController <QLDownloadingItemViewControllerDelegate, QLItemViewControllerPresentingDelegate>
 @property  QLItemViewController *previewProvider
 @property  QLErrorItemViewController *errorViewController
 @property  QLLoadingItemViewController *loadingViewController
 @property  QLDownloadingItemViewController *downloadingController
 @property  QLScreenTimeItemViewController *screenTimeController
 @property  @? loadingCompletionHandler
 @property  QLItem *previewItem
 @property  id contents
 @property  QLPreviewContext *context
 @property  BOOL printing
 @property  NSString *hostApplicationBundleIdentifier
 @property  DMFApplicationPolicyMonitor *screenTimeApplicationMonitor
 @property  DMFCategoryPolicyMonitor *screenTimeCategoryMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  QLItemPresenterViewController *itemPresenterViewController

  // instance methods
  -[QLItemPresenterViewController init]
  -[QLItemPresenterViewController .cxx_destruct]
  -[QLItemPresenterViewController contents]
  -[QLItemPresenterViewController isLoaded]
  -[QLItemPresenterViewController context]
  -[QLItemPresenterViewController setContext:]
  -[QLItemPresenterViewController setContents:]
  -[QLItemPresenterViewController previewProvider]
  -[QLItemPresenterViewController setPreviewProvider:]
  -[QLItemPresenterViewController errorViewController]
  -[QLItemPresenterViewController setErrorViewController:]
  -[QLItemPresenterViewController isLoading]
  -[QLItemPresenterViewController printing]
  -[QLItemPresenterViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLItemPresenterViewController setAppearance:animated:]
  -[QLItemPresenterViewController transitionWillFinish:didComplete:]
  -[QLItemPresenterViewController transitionDidFinish:didComplete:]
  -[QLItemPresenterViewController transitionDidStart:]
  -[QLItemPresenterViewController loadingViewController]
  -[QLItemPresenterViewController showPreviewViewController:]
  -[QLItemPresenterViewController showPreviewViewController:animatingWithCrossfade:]
  -[QLItemPresenterViewController setLoadingCompletionHandler:]
  -[QLItemPresenterViewController _setupScreenTimeHandling]
  -[QLItemPresenterViewController _showReadyToDisplayPreviewViewControllerDeferredIfNeeded:]
  -[QLItemPresenterViewController downloadingController]
  -[QLItemPresenterViewController showPreviewViewController:animatingWithCrossfade:updatingIsReadyForDisplay:]
  -[QLItemPresenterViewController _showLoadingViewControllerDeferredIfNeeded]
  -[QLItemPresenterViewController previewItem]
  -[QLItemPresenterViewController _startLoadingPreviewWithContents:]
  -[QLItemPresenterViewController _performReadyBlockIfNedded]
  -[QLItemPresenterViewController canAnimateFromDetailViewToFullScreenPreview]
  -[QLItemPresenterViewController _performLoadingCompletionHandlerWithError:]
  -[QLItemPresenterViewController loadingFailed]
  -[QLItemPresenterViewController _cancelAllDeferredApperanceUpdates]
  -[QLItemPresenterViewController previewWillAppear:]
  -[QLItemPresenterViewController previewDidAppear:]
  -[QLItemPresenterViewController previewWillDisappear:]
  -[QLItemPresenterViewController previewDidDisappear:]
  -[QLItemPresenterViewController showErrorViewController]
  -[QLItemPresenterViewController additionalItemViewControllerDescription]
  -[QLItemPresenterViewController _processIsEntitledToCheckScreenTimePolicy]
  -[QLItemPresenterViewController _processIsEntitledToConfigureScreenTime]
  -[QLItemPresenterViewController _shouldApplyScreenTimeMoviePolicyForItem:]
  -[QLItemPresenterViewController _setupScreenTimeCategoryHandling]
  -[QLItemPresenterViewController screenTimePolicyBundleIdentifier]
  -[QLItemPresenterViewController _setupScreenTimeApplicationHandling]
  -[QLItemPresenterViewController _queryScreenTimeCategoryPolicy]
  -[QLItemPresenterViewController _queryScreenTimePolicyForBundleIdentifier:]
  -[QLItemPresenterViewController _didReceiveNewScreenTimeApplicationPolicies:error:]
  -[QLItemPresenterViewController _didReceiveNewScreenTimeCategoryPolicy:error:]
  -[QLItemPresenterViewController _didReceiveNewScreenTimePolicy:]
  -[QLItemPresenterViewController _hideScreenTimeViewControllerIfNeeded]
  -[QLItemPresenterViewController _showScreenTimeViewController]
  -[QLItemPresenterViewController screenTimeController]
  -[QLItemPresenterViewController showPreviewProviderViewController]
  -[QLItemPresenterViewController hostApplicationBundleIdentifier]
  -[QLItemPresenterViewController downloadingItemViewControllerDidFinishLoadingPreviewItem:withContents:]
  -[QLItemPresenterViewController previewItemViewController:didFailWithError:]
  -[QLItemPresenterViewController itemPresenterViewController]
  -[QLItemPresenterViewController initWithHostApplicationBundleIdentifier:]
  -[QLItemPresenterViewController initForPrinting:]
  -[QLItemPresenterViewController isReadyForDisplayWithCompletionHandler:]
  -[QLItemPresenterViewController setLoadingViewController:]
  -[QLItemPresenterViewController setDownloadingController:]
  -[QLItemPresenterViewController setScreenTimeController:]
  -[QLItemPresenterViewController loadingCompletionHandler]
  -[QLItemPresenterViewController setPreviewItem:]
  -[QLItemPresenterViewController setPrinting:]
  -[QLItemPresenterViewController setHostApplicationBundleIdentifier:]
  -[QLItemPresenterViewController screenTimeApplicationMonitor]
  -[QLItemPresenterViewController setScreenTimeApplicationMonitor:]
  -[QLItemPresenterViewController screenTimeCategoryMonitor]
  -[QLItemPresenterViewController setScreenTimeCategoryMonitor:]


QLItemThumbnailGenerationOperation : QLAsynchronousOperation /usr/lib/libMobileGestalt.dylib
 @property  <QLItemThumbnailGeneratorProtocol> *generator
 @property  QLItem *item
 @property  {CGSize=dd} size
 @property  double scale
 @property  UIImage *thumbnail

  // instance methods
  -[QLItemThumbnailGenerationOperation .cxx_destruct]
  -[QLItemThumbnailGenerationOperation size]
  -[QLItemThumbnailGenerationOperation item]
  -[QLItemThumbnailGenerationOperation setItem:]
  -[QLItemThumbnailGenerationOperation main]
  -[QLItemThumbnailGenerationOperation scale]
  -[QLItemThumbnailGenerationOperation setSize:]
  -[QLItemThumbnailGenerationOperation setScale:]
  -[QLItemThumbnailGenerationOperation generator]
  -[QLItemThumbnailGenerationOperation setGenerator:]
  -[QLItemThumbnailGenerationOperation thumbnail]
  -[QLItemThumbnailGenerationOperation setThumbnail:]
  -[QLItemThumbnailGenerationOperation initWithThumbnailGenerator:item:size:scale:]


QLEditedItem : NSObject /usr/lib/libSystem.B.dylib
 @property  <QLPreviewItem> *item
 @property  NSURL *editedFileURL

  // instance methods
  -[QLEditedItem .cxx_destruct]
  -[QLEditedItem item]
  -[QLEditedItem setItem:]
  -[QLEditedItem editedFileURL]
  -[QLEditedItem initWithItem:editedFileURL:]
  -[QLEditedItem setEditedFileURL:]


QLDismissAction : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completionHandler
 @property  NSString *title
 @property  long long alertStyle
 @property  BOOL shouldDismissQuickLookAutomatically

  // class methods
  +[QLDismissAction actionWithTitle:handler:]
  +[QLDismissAction actionWithTitle:alertStyle:shouldDismissQuickLookAutomatically:handler:]

  // instance methods
  -[QLDismissAction .cxx_destruct]
  -[QLDismissAction title]
  -[QLDismissAction setTitle:]
  -[QLDismissAction completionHandler]
  -[QLDismissAction setCompletionHandler:]
  -[QLDismissAction alertStyle]
  -[QLDismissAction setAlertStyle:]
  -[QLDismissAction initWithTitle:alertStyle:shouldDismissQuickLookAutomatically:handler:]
  -[QLDismissAction shouldDismissQuickLookAutomatically]
  -[QLDismissAction setShouldDismissQuickLookAutomatically:]


QLDataFetcher : QLItemFetcher
  // class methods
  +[QLDataFetcher supportsSecureCoding]

  // instance methods
  -[QLDataFetcher dealloc]
  -[QLDataFetcher encodeWithCoder:]
  -[QLDataFetcher initWithCoder:]
  -[QLDataFetcher .cxx_destruct]
  -[QLDataFetcher itemSize]
  -[QLDataFetcher shareableItem]
  -[QLDataFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLDataFetcher _deleteTempraryFileIfNeeded]
  -[QLDataFetcher loadDataIfNeeded]
  -[QLDataFetcher _createTemporaryFileIfNeeded]
  -[QLDataFetcher _temporaryFilename]
  -[QLDataFetcher initWithItem:contentType:]
  -[QLDataFetcher initWithData:contentType:previewItemTitle:]
  -[QLDataFetcher prepareShareableItem:]
  -[QLDataFetcher fetchedContent]
  -[QLDataFetcher newItemProvider]


QLPreviewConverter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *previewFileName
 @property  NSString *previewUTI
 @property  NSURLRequest *previewRequest
 @property  NSURLResponse *previewResponse
 @property  QLPreviewParts *previewParts

  // class methods
  +[QLPreviewConverter isIWorkDocumentType:]
  +[QLPreviewConverter isSpreadSheetDocumentType:]
  +[QLPreviewConverter _officeMIMETypes]
  +[QLPreviewConverter _iWorkMIMETypes]
  +[QLPreviewConverter _rtfMIMETypes]
  +[QLPreviewConverter _csvMIMETypes]
  +[QLPreviewConverter _spreadSheetMIMETypes]
  +[QLPreviewConverter _officeUTIs]
  +[QLPreviewConverter _iWorkUTIs]
  +[QLPreviewConverter _rtfUTIs]
  +[QLPreviewConverter _lpdfUTIs]
  +[QLPreviewConverter _csvUTIs]
  +[QLPreviewConverter _spreadSheetUTIs]
  +[QLPreviewConverter canConvertDocumentType:]
  +[QLPreviewConverter isSafeURL:]
  +[QLPreviewConverter convertibleMIMETypes]
  +[QLPreviewConverter convertibleUTIs]
  +[QLPreviewConverter isOfficeDocumentType:]
  +[QLPreviewConverter isCSVDocumentType:]
  +[QLPreviewConverter isLPDFDocumentType:]
  +[QLPreviewConverter isRTFDocumentType:]
  +[QLPreviewConverter isSafeRequest:]

  // instance methods
  -[QLPreviewConverter dealloc]
  -[QLPreviewConverter .cxx_destruct]
  -[QLPreviewConverter cancel]
  -[QLPreviewConverter appendData:]
  -[QLPreviewConverter isCancelled]
  -[QLPreviewConverter appendDataArray:]
  -[QLPreviewConverter finishedAppendingData]
  -[QLPreviewConverter finishConverting]
  -[QLPreviewConverter initWithConnection:delegate:response:options:]
  -[QLPreviewConverter initWithData:name:uti:options:]
  -[QLPreviewConverter safeRequestForRequest:]
  -[QLPreviewConverter previewRequest]
  -[QLPreviewConverter previewResponse]
  -[QLPreviewConverter previewFileName]
  -[QLPreviewConverter previewUTI]
  -[QLPreviewConverter _register]
  -[QLPreviewConverter _closeIOCahnnel]
  -[QLPreviewConverter isComputed]
  -[QLPreviewConverter _writeDataArrayIntoStream:]
  -[QLPreviewConverter _createDispatchIOChannel]
  -[QLPreviewConverter setHtmlErrorDisabled:]
  -[QLPreviewConverter htmlErrorDisabled]
  -[QLPreviewConverter initWithURL:uti:options:]
  -[QLPreviewConverter previewParts]


QLScrubView : UIView /System/Library/Frameworks/WebKit.framework/WebKit <UIGestureRecognizerDelegate>
 @property  <QLScrubViewDataSource> *dataSource
 @property  <QLScrubViewDelegate> *delegate
 @property  double topOffset
 @property  double bottomOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLScrubView defaultWidth]

  // instance methods
  -[QLScrubView init]
  -[QLScrubView delegate]
  -[QLScrubView setDelegate:]
  -[QLScrubView .cxx_destruct]
  -[QLScrubView dataSource]
  -[QLScrubView setDataSource:]
  -[QLScrubView setFrame:]
  -[QLScrubView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLScrubView layoutSubviews]
  -[QLScrubView panReceived:]
  -[QLScrubView tapReceived:]
  -[QLScrubView longTapReceived:]
  -[QLScrubView _removeThumbviews]
  -[QLScrubView _updateSelectedThumbnailView]
  -[QLScrubView _notifyPageChanged]
  -[QLScrubView _updatePageLabelPosition]
  -[QLScrubView _showPageLabel]
  -[QLScrubView _handleSwipAtLocation:]
  -[QLScrubView _hidePageLabel]
  -[QLScrubView topOffset]
  -[QLScrubView _thumbnailFrameForPageAtIndex:]
  -[QLScrubView reloadThumbnails]
  -[QLScrubView selectPageNumber:]
  -[QLScrubView setTopOffset:]
  -[QLScrubView bottomOffset]
  -[QLScrubView setBottomOffset:]


QLPageNumberView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  long long pageNumber
 @property  long long pageCount

  // instance methods
  -[QLPageNumberView .cxx_destruct]
  -[QLPageNumberView initWithFrame:]
  -[QLPageNumberView layoutSubviews]
  -[QLPageNumberView sizeToFit]
  -[QLPageNumberView drawRect:]
  -[QLPageNumberView pageCount]
  -[QLPageNumberView setPageCount:]
  -[QLPageNumberView pageNumber]
  -[QLPageNumberView setPageNumber:]
  -[QLPageNumberView _indexFormatter]
  -[QLPageNumberView _updateString]
  -[QLPageNumberView _copyMutablePathForRoundedRect:radius:inverted:]


QLAVPlayerItemViewController : QLItemViewController <AVPlayerViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLAVPlayerItemViewController .cxx_destruct]
  -[QLAVPlayerItemViewController pause]
  -[QLAVPlayerItemViewController play]
  -[QLAVPlayerItemViewController imageSize]
  -[QLAVPlayerItemViewController preferredWhitePointAdaptivityStyle]
  -[QLAVPlayerItemViewController playerViewController:shouldExitFullScreenWithReason:]
  -[QLAVPlayerItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLAVPlayerItemViewController canEnterFullScreen]
  -[QLAVPlayerItemViewController hostApplicationDidEnterBackground:]
  -[QLAVPlayerItemViewController hostApplicationDidBecomeActive]
  -[QLAVPlayerItemViewController previewDidDisappear:]
  -[QLAVPlayerItemViewController enterFullScreen:]
  -[QLAVPlayerItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLAVPlayerItemViewController performFirstTimeAppearanceActions:]


QLPULayerAnimationGroup : QLPUTimedAnimationGroup
 @property  CALayer *referenceLayer

  // instance methods
  -[QLPULayerAnimationGroup init]
  -[QLPULayerAnimationGroup .cxx_destruct]
  -[QLPULayerAnimationGroup currentTime]
  -[QLPULayerAnimationGroup initWithReferenceLayer:]
  -[QLPULayerAnimationGroup referenceLayer]
  -[QLPULayerAnimationGroup updateAnimations]


QLListViewController : UINavigationController /System/Library/Frameworks/WebKit.framework/WebKit <UITableViewDataSource, UITableViewDelegate, UIPopoverPresentationControllerDelegate>
 @property  <QLListViewControllerDelegate> *archiveDelegate
 @property  UIBarButtonItem *barButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLListViewController .cxx_destruct]
  -[QLListViewController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[QLListViewController prepareForPopoverPresentation:]
  -[QLListViewController tableView:numberOfRowsInSection:]
  -[QLListViewController tableView:cellForRowAtIndexPath:]
  -[QLListViewController _dismiss]
  -[QLListViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[QLListViewController tableView:shouldHighlightRowAtIndexPath:]
  -[QLListViewController tableView:didSelectRowAtIndexPath:]
  -[QLListViewController barButton]
  -[QLListViewController _generateItemsAndFolders]
  -[QLListViewController _updateNavigationBarVisibilityForPresentationStyle:]
  -[QLListViewController archiveDelegate]
  -[QLListViewController _addPath:fromPreviewItem:intoArray:]
  -[QLListViewController initWithPreviewItemStore:currentPreviewItem:]
  -[QLListViewController setBarButton:]
  -[QLListViewController setArchiveDelegate:]


QLMovieEdits : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long rightRotationsCount
 @property  double trimStartTime
 @property  double trimEndTime

  // class methods
  +[QLMovieEdits editsWithRightRotationsCount:trimStartTime:trimEndTime:]

  // instance methods
  -[QLMovieEdits init]
  -[QLMovieEdits isEqual:]
  -[QLMovieEdits trimStartTime]
  -[QLMovieEdits trimEndTime]
  -[QLMovieEdits resetEditingValues]
  -[QLMovieEdits setRightRotationsCount:]
  -[QLMovieEdits setTrimStartTime:]
  -[QLMovieEdits setTrimEndTime:]
  -[QLMovieEdits rightRotationsCount]
  -[QLMovieEdits resetTrimmingValues]
  -[QLMovieEdits rotated]
  -[QLMovieEdits trimmed]
  -[QLMovieEdits incrementRightRotationsCount]
  -[QLMovieEdits hasEdits]


QLWKWebItemViewController : QLItemViewController <WKNavigationDelegate, QLPrintingProtocol, QLScrubViewDataSource, QLScrubViewDelegate, UIScrollViewDelegate>
 @property  NSOperationQueue *operationQueue
 @property  NSCache *indexToThumbnailsCache
 @property  WKWebView *webView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLWKWebItemViewController _shouldDisableJavaScriptForContentType:]

  // instance methods
  -[QLWKWebItemViewController .cxx_destruct]
  -[QLWKWebItemViewController operationQueue]
  -[QLWKWebItemViewController setOperationQueue:]
  -[QLWKWebItemViewController loadView]
  -[QLWKWebItemViewController webView]
  -[QLWKWebItemViewController scrollViewDidScroll:]
  -[QLWKWebItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLWKWebItemViewController preferredWhitePointAdaptivityStyle]
  -[QLWKWebItemViewController scrollView]
  -[QLWKWebItemViewController transitioningView]
  -[QLWKWebItemViewController scrubView]
  -[QLWKWebItemViewController printer]
  -[QLWKWebItemViewController setWebView:]
  -[QLWKWebItemViewController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[QLWKWebItemViewController webView:didFailProvisionalNavigation:withError:]
  -[QLWKWebItemViewController webView:didFinishNavigation:]
  -[QLWKWebItemViewController webView:didFailNavigation:withError:]
  -[QLWKWebItemViewController webViewWebContentProcessDidTerminate:]
  -[QLWKWebItemViewController _webViewDidRequestPasswordForQuickLookDocument:]
  -[QLWKWebItemViewController currentPageNumber]
  -[QLWKWebItemViewController _renderer]
  -[QLWKWebItemViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLWKWebItemViewController canSwipeToDismiss]
  -[QLWKWebItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLWKWebItemViewController canPinchToDismiss]
  -[QLWKWebItemViewController setAppearance:animated:]
  -[QLWKWebItemViewController transitionWillFinish:didComplete:]
  -[QLWKWebItemViewController transitionDidStart:]
  -[QLWKWebItemViewController previewWillAppear:]
  -[QLWKWebItemViewController previewDidAppear:]
  -[QLWKWebItemViewController numberOfPagesInScrubView:]
  -[QLWKWebItemViewController scrubView:didSelectPageAtIndex:]
  -[QLWKWebItemViewController scrubView:pageSizeAtIndex:]
  -[QLWKWebItemViewController scrubView:thumbnailForPage:size:withCompletionBlock:]
  -[QLWKWebItemViewController _registerRemoteProxy]
  -[QLWKWebItemViewController _updateScrubberVisibilityAnimated:]
  -[QLWKWebItemViewController previewBecameFullScreen:animated:]
  -[QLWKWebItemViewController _updateConstraintConstants:]
  -[QLWKWebItemViewController _updateScrubberVisibilityAnimated:reloadThumbnailsIfNeeded:]
  -[QLWKWebItemViewController _updateScrubberForTraitCollection:animated:reloadThumbnailsIfNeeded:]
  -[QLWKWebItemViewController _showScrubberIfNeeded:reloadThumbnails:]
  -[QLWKWebItemViewController _hideScrubberIfNeeded:]
  -[QLWKWebItemViewController _prepareThumbnailView]
  -[QLWKWebItemViewController _thumbnailAtIndex:]
  -[QLWKWebItemViewController _addThumbnailToCache:atIndex:]
  -[QLWKWebItemViewController _scrollToPage:]
  -[QLWKWebItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLWKWebItemViewController prepareForDrawingPages:ofSize:]
  -[QLWKWebItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLWKWebItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLWKWebItemViewController indexToThumbnailsCache]
  -[QLWKWebItemViewController setIndexToThumbnailsCache:]


QLTextItemViewController : QLItemViewController <UITextViewDelegate, QLPrintingProtocol>
 @property  UISimpleTextPrintFormatter *printFormatter
 @property  UIPrintPageRenderer *pageRenderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLTextItemViewController .cxx_destruct]
  -[QLTextItemViewController preferredWhitePointAdaptivityStyle]
  -[QLTextItemViewController scrollView]
  -[QLTextItemViewController printer]
  -[QLTextItemViewController printFormatter]
  -[QLTextItemViewController textView:shouldInteractWithURL:inRange:]
  -[QLTextItemViewController canSwipeToDismiss]
  -[QLTextItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLTextItemViewController canPinchToDismiss]
  -[QLTextItemViewController setAppearance:animated:]
  -[QLTextItemViewController _updateConstraintConstants:]
  -[QLTextItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLTextItemViewController prepareForDrawingPages:ofSize:]
  -[QLTextItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLTextItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLTextItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLTextItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLTextItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLTextItemViewController _setupTextViewColorsWithDocumentAttributes:]
  -[QLTextItemViewController _documentAttributesContainTextColors:]
  -[QLTextItemViewController registeredKeyCommands]
  -[QLTextItemViewController pageRenderer]
  -[QLTextItemViewController shouldRecognizeGestureRecognizer:]


QLDebugItemViewController : QLItemViewController
  // instance methods
  -[QLDebugItemViewController .cxx_destruct]
  -[QLDebugItemViewController canSwipeToDismiss]
  -[QLDebugItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDebugItemViewController canPinchToDismiss]
  -[QLDebugItemViewController canEnterFullScreen]
  -[QLDebugItemViewController setAppearance:animated:]
  -[QLDebugItemViewController previewWillAppear:]
  -[QLDebugItemViewController previewDidAppear:]
  -[QLDebugItemViewController previewWillDisappear:]
  -[QLDebugItemViewController previewDidDisappear:]
  -[QLDebugItemViewController _addLog:logLevel:]
  -[QLDebugItemViewController _encounterMethodCall:]
  -[QLDebugItemViewController previewIsAppearingWithProgress:]
  -[QLDebugItemViewController previewWillFinishAppearing]
  -[QLDebugItemViewController _encounterMethodCall:animatedValue:]
  -[QLDebugItemViewController _attributesForLogLevel:]


QLLivePhotoItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLLivePhotoItemTransformer allowedOutputClasses]

  // instance methods
  -[QLLivePhotoItemTransformer transformedContentsFromURL:context:error:]


QLTransitionController : NSObject /usr/lib/libSystem.B.dylib <UIViewControllerAnimatedTransitioning, QLTransitionControllerProtocol>
 @property  NSDate *setupDate
 @property  BOOL hasPerformedTransition
 @property  QLTransitionContext *quickLookTransitionContext
 @property  UIViewController *presenterViewController
 @property  QLPreviewController *previewController
 @property  UIViewController<QLCustomTransitioning> *animatedController
 @property  <UIViewControllerContextTransitioning> *transitionContext
 @property  id transitionDriver
 @property  double duration
 @property  unsigned long transitionState
 @property  BOOL showing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLTransitionController .cxx_destruct]
  -[QLTransitionController duration]
  -[QLTransitionController setDuration:]
  -[QLTransitionController transitionContext]
  -[QLTransitionController transitionDuration:]
  -[QLTransitionController completeTransition:]
  -[QLTransitionController animateTransition:]
  -[QLTransitionController setTransitionContext:]
  -[QLTransitionController showing]
  -[QLTransitionController setShowing:]
  -[QLTransitionController previewController]
  -[QLTransitionController presenterViewController]
  -[QLTransitionController transitionState]
  -[QLTransitionController tearDownTransition:]
  -[QLTransitionController transitionDriver]
  -[QLTransitionController updateTransitionWithProgress:]
  -[QLTransitionController completeTransition:withDuration:]
  -[QLTransitionController setSetupDate:]
  -[QLTransitionController _view:applyFrameFromTransitionContextAsFinalFrame:isToView:]
  -[QLTransitionController setQuickLookTransitionContext:]
  -[QLTransitionController setTransitionState:]
  -[QLTransitionController quickLookTransitionContext]
  -[QLTransitionController _prepareTimedForcedDismissal]
  -[QLTransitionController _performStartBlockIfNeeded]
  -[QLTransitionController _performForcedDismissal]
  -[QLTransitionController _completeOverlayTransition:]
  -[QLTransitionController _completeBackgroundTransition:]
  -[QLTransitionController hasPerformedTransition]
  -[QLTransitionController setHasPerformedTransition:]
  -[QLTransitionController _performTransition]
  -[QLTransitionController setUpWithTransitionContext:completionHandler:]
  -[QLTransitionController _updateOverlayTransitionWithProgress:]
  -[QLTransitionController _updateBackgroundTransitionWithProgress:]
  -[QLTransitionController _requiredVisualStateTransitions]
  -[QLTransitionController setupDate]
  -[QLTransitionController forceDismissalIfNeeded]
  -[QLTransitionController animatedController]


QLTransitionContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  UIView *sourceView
 @property  UIView *sourceViewSnapshot
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} uncroppedFrame
 @property  double topNavigationOffset
 @property  double hostNavigationOffset
 @property  BOOL usingViewForZoomTransition
 @property  {CGSize=dd} previewItemSize

  // class methods
  +[QLTransitionContext supportsSecureCoding]
  +[QLTransitionContext useZoomTransitionForPreviewController:]
  +[QLTransitionContext firstChildNavigationControllerFromViewController:]
  +[QLTransitionContext useViewTransitionForPreviewController:]
  +[QLTransitionContext useImageTransitionForPreviewController:]

  // instance methods
  -[QLTransitionContext encodeWithCoder:]
  -[QLTransitionContext initWithCoder:]
  -[QLTransitionContext .cxx_destruct]
  -[QLTransitionContext sourceView]
  -[QLTransitionContext setSourceViewSnapshot:]
  -[QLTransitionContext sourceViewSnapshot]
  -[QLTransitionContext setSourceView:]
  -[QLTransitionContext setSourceFrame:]
  -[QLTransitionContext sourceFrame]
  -[QLTransitionContext uncroppedFrame]
  -[QLTransitionContext setUncroppedFrame:]
  -[QLTransitionContext topNavigationOffset]
  -[QLTransitionContext setTopNavigationOffset:]
  -[QLTransitionContext hostNavigationOffset]
  -[QLTransitionContext setHostNavigationOffset:]
  -[QLTransitionContext previewItemSize]
  -[QLTransitionContext initWithQLPreviewController:containerView:toViewController:]
  -[QLTransitionContext prepareContextToSend]
  -[QLTransitionContext _snapshotSourceViewIfNeeded]
  -[QLTransitionContext sourceViewSnapshotImage]
  -[QLTransitionContext setUpTransitionSourceView]
  -[QLTransitionContext setPreviewItemSize:]
  -[QLTransitionContext setUsingViewForZoomTransition:]
  -[QLTransitionContext usingViewForZoomTransition]


QLTransitionDriver : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGSize=dd} transitionPreviewSize
 @property  QLItem *transitionPreviewItem
 @property  UIView *transitionContainer
 @property  UIView *destinationView
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} uncroppedFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitionContainerOriginalFrame
 @property  BOOL transitionContainerMasksToBounds
 @property  <QLDismissGestureTracking> *gestureTracker
 @property  BOOL presenting
 @property  double duration
 @property  double topNavigationOffset
 @property  double hostNavigationOffset

  // instance methods
  -[QLTransitionDriver .cxx_destruct]
  -[QLTransitionDriver duration]
  -[QLTransitionDriver setDuration:]
  -[QLTransitionDriver presenting]
  -[QLTransitionDriver sourceView]
  -[QLTransitionDriver setSourceView:]
  -[QLTransitionDriver setPresenting:]
  -[QLTransitionDriver tearDown]
  -[QLTransitionDriver gestureTracker]
  -[QLTransitionDriver animateTransition]
  -[QLTransitionDriver setTransitionContainer:]
  -[QLTransitionDriver setGestureTracker:]
  -[QLTransitionDriver setDestinationView:]
  -[QLTransitionDriver setSourceViewFrame:]
  -[QLTransitionDriver uncroppedFrame]
  -[QLTransitionDriver setUncroppedFrame:]
  -[QLTransitionDriver topNavigationOffset]
  -[QLTransitionDriver setTopNavigationOffset:]
  -[QLTransitionDriver hostNavigationOffset]
  -[QLTransitionDriver setHostNavigationOffset:]
  -[QLTransitionDriver setTransitionPreviewItem:]
  -[QLTransitionDriver setTransitionPreviewSize:]
  -[QLTransitionDriver animateFinishTransition]
  -[QLTransitionDriver transitionPreviewSize]
  -[QLTransitionDriver transitionPreviewItem]
  -[QLTransitionDriver transitionContainer]
  -[QLTransitionDriver destinationView]
  -[QLTransitionDriver sourceViewFrame]
  -[QLTransitionDriver transitionContainerOriginalFrame]
  -[QLTransitionDriver setTransitionContainerOriginalFrame:]
  -[QLTransitionDriver transitionContainerMasksToBounds]
  -[QLTransitionDriver setTransitionContainerMasksToBounds:]


QLUbiquitousItemFetcher : QLItemFetcher
 @property  NSURL *fileURL

  // class methods
  +[QLUbiquitousItemFetcher supportsSecureCoding]

  // instance methods
  -[QLUbiquitousItemFetcher dealloc]
  -[QLUbiquitousItemFetcher encodeWithCoder:]
  -[QLUbiquitousItemFetcher initWithCoder:]
  -[QLUbiquitousItemFetcher .cxx_destruct]
  -[QLUbiquitousItemFetcher observeValueForKeyPath:ofObject:change:context:]
  -[QLUbiquitousItemFetcher fileURL]
  -[QLUbiquitousItemFetcher itemSize]
  -[QLUbiquitousItemFetcher shareableItem]
  -[QLUbiquitousItemFetcher isLongFetchOperation]
  -[QLUbiquitousItemFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLUbiquitousItemFetcher fetchedContent]
  -[QLUbiquitousItemFetcher newItemProvider]
  -[QLUbiquitousItemFetcher initWithZippingPackageIfNeeded:]
  -[QLUbiquitousItemFetcher _removeUpdateBlockIfNeeded:]
  -[QLUbiquitousItemFetcher _createURLForPackageIfNeeded]
  -[QLUbiquitousItemFetcher subscribeToPreviewItemProgress]
  -[QLUbiquitousItemFetcher _deleteTempraryZipPackageFileIfNeeded]
  -[QLUbiquitousItemFetcher initWithSandboxingURLWrapper:shouldZipPackageIfNeeded:]
  -[QLUbiquitousItemFetcher initWithURL:shouldZipPackageIfNeeded:]
  -[QLUbiquitousItemFetcher canBeCanceled]
  -[QLUbiquitousItemFetcher cancelFetch]


QLItemAggregatedViewController : QLItemViewController
 @property  QLItemViewController *currentPreviewViewController

  // instance methods
  -[QLItemAggregatedViewController delegate]
  -[QLItemAggregatedViewController setDelegate:]
  -[QLItemAggregatedViewController .cxx_destruct]
  -[QLItemAggregatedViewController title]
  -[QLItemAggregatedViewController appearance]
  -[QLItemAggregatedViewController preferredContentSize]
  -[QLItemAggregatedViewController safeAreaLayoutGuide]
  -[QLItemAggregatedViewController accessoryView]
  -[QLItemAggregatedViewController preferredWhitePointAdaptivityStyle]
  -[QLItemAggregatedViewController scrollView]
  -[QLItemAggregatedViewController transitioningView]
  -[QLItemAggregatedViewController draggableView]
  -[QLItemAggregatedViewController currentPreviewViewController]
  -[QLItemAggregatedViewController setCurrentPreviewViewController:]
  -[QLItemAggregatedViewController printer]
  -[QLItemAggregatedViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLItemAggregatedViewController canSwipeToDismiss]
  -[QLItemAggregatedViewController canPinchToDismiss]
  -[QLItemAggregatedViewController canEnterFullScreen]
  -[QLItemAggregatedViewController fullscreenBackgroundColor]
  -[QLItemAggregatedViewController setAppearance:animated:]
  -[QLItemAggregatedViewController canShowNavBar]
  -[QLItemAggregatedViewController transitionWillFinish:didComplete:]
  -[QLItemAggregatedViewController transitionDidFinish:didComplete:]
  -[QLItemAggregatedViewController transitionDidStart:]
  -[QLItemAggregatedViewController showPreviewViewController:]
  -[QLItemAggregatedViewController showPreviewViewController:animatingWithCrossfade:]
  -[QLItemAggregatedViewController previewWillAppear:]
  -[QLItemAggregatedViewController previewDidAppear:]
  -[QLItemAggregatedViewController previewWillDisappear:]
  -[QLItemAggregatedViewController previewDidDisappear:]
  -[QLItemAggregatedViewController canPerformFirstTimeAppearanceActions:]
  -[QLItemAggregatedViewController performFirstTimeAppearanceActions:]
  -[QLItemAggregatedViewController previewBecameFullScreen:animated:]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewContentOffset]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewContentInset]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLItemAggregatedViewController registeredKeyCommands]
  -[QLItemAggregatedViewController shouldRecognizeGestureRecognizer:]
  -[QLItemAggregatedViewController previewIsAppearingWithProgress:]
  -[QLItemAggregatedViewController previewWillFinishAppearing]
  -[QLItemAggregatedViewController toolbarButtonsForTraitCollection:]
  -[QLItemAggregatedViewController excludedToolbarButtonIdentifiersForTraitCollection:]
  -[QLItemAggregatedViewController handlePerformedKeyCommandIfNeeded:]
  -[QLItemAggregatedViewController canToggleFullScreen]
  -[QLItemAggregatedViewController canShowToolBar]
  -[QLItemAggregatedViewController parallaxView]
  -[QLItemAggregatedViewController prepareForInvalidationWithCompletionHandler:]
  -[QLItemAggregatedViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLItemAggregatedViewController savePreviewEditedCopyWithCompletionHandler:]


QLImageItemContentsTransformer : QLImageItemTransformer <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLImageItemContentsTransformer allowedOutputClasses]

  // instance methods
  -[QLImageItemContentsTransformer transformedContentsFromURL:context:error:]
  -[QLImageItemContentsTransformer transformedContentsFromData:context:error:]


QLItemViewController : UIViewController /System/Library/Frameworks/WebKit.framework/WebKit <UIDragInteractionDelegate_Private, QLLocalPreviewingController, QLToolbarButtonAction>
 @property  UIDragInteraction *dragInteraction
 @property  BOOL didAppearOnce
 @property  BOOL isLoaded
 @property  BOOL isLoading
 @property  BOOL loadingFailed
 @property  id contents
 @property  QLPreviewContext *context
 @property  QLAppearance *appearance
 @property  <QLItemViewControllerPresentingDelegate> *presentingDelegate
 @property  PUProgressIndicatorView *saveEditProgressView
 @property  NSObject<OS_dispatch_queue> *saveEditsQueue
 @property  BOOL isSavingEdits
 @property  UIView *accessoryView
 @property  NSArray *registeredKeyCommands
 @property  <QLPreviewItemViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLItemViewController shouldBeRemoteForMediaContentType:]
  +[QLItemViewController supportedAudiovisualContentTypes]

  // instance methods
  -[QLItemViewController init]
  -[QLItemViewController delegate]
  -[QLItemViewController setDelegate:]
  -[QLItemViewController .cxx_destruct]
  -[QLItemViewController contents]
  -[QLItemViewController isLoaded]
  -[QLItemViewController context]
  -[QLItemViewController setContext:]
  -[QLItemViewController setContents:]
  -[QLItemViewController appearance]
  -[QLItemViewController setAppearance:]
  -[QLItemViewController accessoryView]
  -[QLItemViewController preferredWhitePointAdaptivityStyle]
  -[QLItemViewController setDragInteraction:]
  -[QLItemViewController dragInteraction:itemsForBeginningSession:]
  -[QLItemViewController _dragInteraction:dataOwnerForSession:]
  -[QLItemViewController dragInteraction]
  -[QLItemViewController scrollView]
  -[QLItemViewController transitioningView]
  -[QLItemViewController draggableView]
  -[QLItemViewController isLoading]
  -[QLItemViewController setIsLoading:]
  -[QLItemViewController setIsLoaded:]
  -[QLItemViewController presentingDelegate]
  -[QLItemViewController setPresentingDelegate:]
  -[QLItemViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLItemViewController canSwipeToDismiss]
  -[QLItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLItemViewController canPinchToDismiss]
  -[QLItemViewController canEnterFullScreen]
  -[QLItemViewController fullscreenBackgroundColor]
  -[QLItemViewController setAppearance:animated:]
  -[QLItemViewController canShowNavBar]
  -[QLItemViewController transitionWillFinish:didComplete:]
  -[QLItemViewController transitionDidFinish:didComplete:]
  -[QLItemViewController transitionDidStart:]
  -[QLItemViewController presenterShouldHandleLoadingView:readyToDisplay:]
  -[QLItemViewController preloadViewControllerForContext:]
  -[QLItemViewController loadPreviewControllerIfNeededWithContents:context:completionHandler:]
  -[QLItemViewController loadingFailed]
  -[QLItemViewController previewWillAppear:]
  -[QLItemViewController previewDidAppear:]
  -[QLItemViewController previewWillDisappear:]
  -[QLItemViewController previewDidDisappear:]
  -[QLItemViewController additionalItemViewControllerDescription]
  -[QLItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLItemViewController performFirstTimeAppearanceActions:]
  -[QLItemViewController didAppearOnce]
  -[QLItemViewController previewBecameFullScreen:animated:]
  -[QLItemViewController notifyDelegatesDidFailWithError:]
  -[QLItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLItemViewController registeredKeyCommands]
  -[QLItemViewController shouldRecognizeGestureRecognizer:]
  -[QLItemViewController previewIsAppearingWithProgress:]
  -[QLItemViewController previewWillFinishAppearing]
  -[QLItemViewController toolbarButtonsForTraitCollection:]
  -[QLItemViewController excludedToolbarButtonIdentifiersForTraitCollection:]
  -[QLItemViewController handlePerformedKeyCommandIfNeeded:]
  -[QLItemViewController canToggleFullScreen]
  -[QLItemViewController canShowToolBar]
  -[QLItemViewController parallaxView]
  -[QLItemViewController prepareForInvalidationWithCompletionHandler:]
  -[QLItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLItemViewController savePreviewEditedCopyWithCompletionHandler:]
  -[QLItemViewController updateScrollViewContentOffset:withPreviousAppearance:]
  -[QLItemViewController setLoadingFailed:]
  -[QLItemViewController _addDragInteractionIfNeeded]
  -[QLItemViewController performCompletionBlocksWithError:]
  -[QLItemViewController supportsScrollingUpAndDownUsingKeyCommands]
  -[QLItemViewController _scrollScrollViewWithKeyCommand:]
  -[QLItemViewController _scrollScrollViewByPercentualOffset:]
  -[QLItemViewController saveEditsQueue]
  -[QLItemViewController editProgressIndicatorMessage]
  -[QLItemViewController updateInterfaceForSavingEdits]
  -[QLItemViewController updateInterfaceAfterSavingEdits]
  -[QLItemViewController prepareForActionSheetPresentation]
  -[QLItemViewController updateScrollViewContentOffset]
  -[QLItemViewController _cancelTouchToken]
  -[QLItemViewController shouldAlwaysRunFullscreen]
  -[QLItemViewController performFirstTimeAppearanceActionsIfNeeded:]
  -[QLItemViewController editedCopyToSaveChangesWithOutputType:completionHandler:]
  -[QLItemViewController showSaveEditsProgressIndicatorAfterDelay]
  -[QLItemViewController hideSaveEditProgressIndicator]
  -[QLItemViewController didStartSavingEdits]
  -[QLItemViewController didFinishSavingEdits]
  -[QLItemViewController setDidAppearOnce:]
  -[QLItemViewController saveEditProgressView]
  -[QLItemViewController setSaveEditProgressView:]
  -[QLItemViewController setSaveEditsQueue:]
  -[QLItemViewController isSavingEdits]
  -[QLItemViewController setIsSavingEdits:]


QLRemoteItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLRemoteItemTransformer allowedOutputClasses]

  // instance methods
  -[QLRemoteItemTransformer transformedContentsFromURL:context:error:]
  -[QLRemoteItemTransformer transformedContentsFromSpotlightSearchableItemInfo:context:error:]


QLListCellDataGenerationOperation : QLAsynchronousOperation /usr/lib/libMobileGestalt.dylib
 @property  unsigned long index
 @property  QLListCell *cell
 @property  QLItem *item
 @property  <QLListCellDataGenerationOperationDelegate> *delegate

  // instance methods
  -[QLListCellDataGenerationOperation delegate]
  -[QLListCellDataGenerationOperation setDelegate:]
  -[QLListCellDataGenerationOperation .cxx_destruct]
  -[QLListCellDataGenerationOperation index]
  -[QLListCellDataGenerationOperation item]
  -[QLListCellDataGenerationOperation setItem:]
  -[QLListCellDataGenerationOperation main]
  -[QLListCellDataGenerationOperation setIndex:]
  -[QLListCellDataGenerationOperation cell]
  -[QLListCellDataGenerationOperation setCell:]
  -[QLListCellDataGenerationOperation _didGenerateThumbnail:]
  -[QLListCellDataGenerationOperation _didDetermineFileSize:fileTypeString:]
  -[QLListCellDataGenerationOperation _finishIfNeeded]
  -[QLListCellDataGenerationOperation initWithListCell:index:item:delegate:]


QLLoopingMediaItemViewController : QLMediaItemBaseViewController
  // instance methods
  -[QLLoopingMediaItemViewController dealloc]
  -[QLLoopingMediaItemViewController .cxx_destruct]
  -[QLLoopingMediaItemViewController pause]
  -[QLLoopingMediaItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLLoopingMediaItemViewController play]
  -[QLLoopingMediaItemViewController player]
  -[QLLoopingMediaItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLoopingMediaItemViewController fullscreenBackgroundColor]
  -[QLLoopingMediaItemViewController previewDidAppear:]
  -[QLLoopingMediaItemViewController startObservingItem]
  -[QLLoopingMediaItemViewController stopObservingItem]
  -[QLLoopingMediaItemViewController setupPlayerWithMediaAsset:]


QLPreviewCollectionHostContext : NSExtensionContext /usr/lib/libobjc.A.dylib <QLPreviewCollectionServiceProtocol>
  // class methods
  +[QLPreviewCollectionHostContext _extensionAuxiliaryHostProtocol]
  +[QLPreviewCollectionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewCollectionHostContext setIsContentManaged:]
  -[QLPreviewCollectionHostContext keyCommandWasPerformed:]
  -[QLPreviewCollectionHostContext setAllowInteractiveTransitions:]
  -[QLPreviewCollectionHostContext saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollectionHostContext hostApplicationDidEnterBackground:]
  -[QLPreviewCollectionHostContext hostApplicationDidBecomeActive]
  -[QLPreviewCollectionHostContext invalidateService]
  -[QLPreviewCollectionHostContext preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollectionHostContext notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollectionHostContext setLoadingString:]
  -[QLPreviewCollectionHostContext configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollectionHostContext hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollectionHostContext prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollectionHostContext toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollectionHostContext keyCommandsWithCompletionHandler:]
  -[QLPreviewCollectionHostContext tearDownTransition:]
  -[QLPreviewCollectionHostContext setAppearance:animated:]
  -[QLPreviewCollectionHostContext setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollectionHostContext startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollectionHostContext _protocolService]
  -[QLPreviewCollectionHostContext getNetworkObserverWithCompletionBlock:]
  -[QLPreviewCollectionHostContext setNotificationCenter:]
  -[QLPreviewCollectionHostContext configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLPreviewCollectionHostContext getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLPreviewCollectionHostContext toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollectionHostContext _synchronousProtocolServiceWithErrorHandler:]
  -[QLPreviewCollectionHostContext _protocolServiceWithErrorHandler:]


QLPreviewCollectionServiceContext : NSExtensionContext /usr/lib/libobjc.A.dylib <QLPreviewCollectionHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewCollectionServiceContext _extensionAuxiliaryHostProtocol]
  +[QLPreviewCollectionServiceContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewCollectionServiceContext .cxx_destruct]
  -[QLPreviewCollectionServiceContext setIsContentManaged:]
  -[QLPreviewCollectionServiceContext keyCommandWasPerformed:]
  -[QLPreviewCollectionServiceContext setAllowInteractiveTransitions:]
  -[QLPreviewCollectionServiceContext saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollectionServiceContext hostApplicationDidEnterBackground:]
  -[QLPreviewCollectionServiceContext hostApplicationDidBecomeActive]
  -[QLPreviewCollectionServiceContext invalidateService]
  -[QLPreviewCollectionServiceContext preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollectionServiceContext setLoadingString:]
  -[QLPreviewCollectionServiceContext configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollectionServiceContext hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollectionServiceContext prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollectionServiceContext keyCommandsWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext tearDownTransition:]
  -[QLPreviewCollectionServiceContext setAppearance:animated:]
  -[QLPreviewCollectionServiceContext setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollectionServiceContext _previewCollection]
  -[QLPreviewCollectionServiceContext updateTransitionWithProgress:]
  -[QLPreviewCollectionServiceContext completeTransition:withDuration:]
  -[QLPreviewCollectionServiceContext startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollectionServiceContext getNetworkObserverWithCompletionBlock:]
  -[QLPreviewCollectionServiceContext setNotificationCenter:]
  -[QLPreviewCollectionServiceContext configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLPreviewCollectionServiceContext getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollectionServiceContext _protocolHost]


QLServiceViewController : UIViewController /System/Library/Frameworks/WebKit.framework/WebKit
 @property  NSUUID *uuid
 @property  UIViewController *mainViewController

  // class methods
  +[QLServiceViewController _getServiceWithUUID:]
  +[QLServiceViewController _serviceViewControllers]

  // instance methods
  -[QLServiceViewController init]
  -[QLServiceViewController .cxx_destruct]
  -[QLServiceViewController uuid]
  -[QLServiceViewController mainViewController]
  -[QLServiceViewController invalidateService]
  -[QLServiceViewController preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLServiceViewController configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLServiceViewController _registerServiceViewController]


QLRemotePreviewCollection : _UIRemoteViewController /System/Library/Frameworks/WebKit.framework/WebKit <QLPreviewCollectionProtocol>
 @property  id request
 @property  QLRemotePreviewCollection *accessoryViewController
 @property  QLPreviewCollectionHostContext *hostContext
 @property  BOOL isAvailable
 @property  BOOL allowInteractiveTransitions

  // instance methods
  -[QLRemotePreviewCollection .cxx_destruct]
  -[QLRemotePreviewCollection isAvailable]
  -[QLRemotePreviewCollection setRequest:]
  -[QLRemotePreviewCollection request]
  -[QLRemotePreviewCollection setIsAvailable:]
  -[QLRemotePreviewCollection accessoryViewController]
  -[QLRemotePreviewCollection setAccessoryViewController:]
  -[QLRemotePreviewCollection accessoryView]
  -[QLRemotePreviewCollection viewServiceDidTerminateWithError:]
  -[QLRemotePreviewCollection setIsContentManaged:]
  -[QLRemotePreviewCollection isRemote]
  -[QLRemotePreviewCollection keyCommandWasPerformed:]
  -[QLRemotePreviewCollection setHostContext:]
  -[QLRemotePreviewCollection hostContext]
  -[QLRemotePreviewCollection setAllowInteractiveTransitions:]
  -[QLRemotePreviewCollection saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLRemotePreviewCollection hostApplicationDidEnterBackground:]
  -[QLRemotePreviewCollection hostApplicationDidBecomeActive]
  -[QLRemotePreviewCollection invalidateService]
  -[QLRemotePreviewCollection preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLRemotePreviewCollection notifyFirstTimeAppearanceWithActions:]
  -[QLRemotePreviewCollection setLoadingString:]
  -[QLRemotePreviewCollection configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLRemotePreviewCollection allowInteractiveTransitions]
  -[QLRemotePreviewCollection hostViewControlerTransitionToState:animated:]
  -[QLRemotePreviewCollection prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLRemotePreviewCollection toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLRemotePreviewCollection keyCommandsWithCompletionHandler:]
  -[QLRemotePreviewCollection tearDownTransition:]
  -[QLRemotePreviewCollection setAppearance:animated:]
  -[QLRemotePreviewCollection setCurrentPreviewItemIndex:animated:]
  -[QLRemotePreviewCollection startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLRemotePreviewCollection configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLRemotePreviewCollection getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLRemotePreviewCollection toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLRemotePreviewCollection _resetRemoteConfiguration]
  -[QLRemotePreviewCollection _presentViewControllerForError:]


QLRemoteAccessoryViewController : QLRemotePreviewCollection
  // class methods
  +[QLRemoteAccessoryViewController __shouldHostRemoteTextEffectsWindow]


QLCacheItem : NSObject /usr/lib/libSystem.B.dylib
 @property  QLItem *item

  // instance methods
  -[QLCacheItem invalidate]
  -[QLCacheItem .cxx_destruct]
  -[QLCacheItem item]
  -[QLCacheItem setItem:]
  -[QLCacheItem addCompletionHandler:]
  -[QLCacheItem _performHandlers]


QLDataSource : NSObject /usr/lib/libSystem.B.dylib <QLPreviewItemProvider>
  // instance methods
  -[QLDataSource .cxx_destruct]
  -[QLDataSource initWithPreviewItems:]
  -[QLDataSource previewItemAtIndex:withCompletionHandler:]


QLPreviewItemStore : NSObject /usr/lib/libSystem.B.dylib <QLPreviewItemProvider, QLPreviewControllerDataSource>
 @property  <QLPreviewItemProvider> *itemProvider
 @property  unsigned long numberOfItems
 @property  {_NSRange=QQ} possibleRange
 @property  <QLPreviewItemStoreDelegate> *delegate
 @property  BOOL isArchive

  // instance methods
  -[QLPreviewItemStore init]
  -[QLPreviewItemStore dealloc]
  -[QLPreviewItemStore clearCache]
  -[QLPreviewItemStore delegate]
  -[QLPreviewItemStore setDelegate:]
  -[QLPreviewItemStore .cxx_destruct]
  -[QLPreviewItemStore itemProvider]
  -[QLPreviewItemStore setItemProvider:]
  -[QLPreviewItemStore _commonInit]
  -[QLPreviewItemStore numberOfItems]
  -[QLPreviewItemStore clearItems]
  -[QLPreviewItemStore numberOfPreviewItemsInPreviewController:]
  -[QLPreviewItemStore previewController:previewItemAtIndex:]
  -[QLPreviewItemStore isArchive]
  -[QLPreviewItemStore initWithPreviewItems:]
  -[QLPreviewItemStore possibleRange]
  -[QLPreviewItemStore previewItemAtIndex:withCompletionHandler:]
  -[QLPreviewItemStore initWithItemsOfDirectoryAtURL:]
  -[QLPreviewItemStore reloadWithNumberOfPreviewItems:]
  -[QLPreviewItemStore indexOfPreviewItem:]


QLImageItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLImageItemTransformer allowedOutputClasses]
  +[QLImageItemTransformer animatableContentTypes]

  // instance methods
  -[QLImageItemTransformer _maximumDimension]
  -[QLImageItemTransformer transformedContentsFromURL:context:error:]
  -[QLImageItemTransformer transformedContentsFromData:context:error:]
  -[QLImageItemTransformer _contentsFromCGImageSource:context:scale:]


QLPXSwipeDownTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {QLPXDisplayVelocity=dddd} trackedVelocity
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  QLPXChangeDirectionNumberFilter *verticalDirectionFilter
 @property  QLPXInitialHysteresisNumberFilter *horizontalTranslationFilter
 @property  unsigned long options
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping

  // instance methods
  -[QLPXSwipeDownTracker init]
  -[QLPXSwipeDownTracker options]
  -[QLPXSwipeDownTracker initWithOptions:]
  -[QLPXSwipeDownTracker .cxx_destruct]
  -[QLPXSwipeDownTracker trackedCenter]
  -[QLPXSwipeDownTracker trackedTransform]
  -[QLPXSwipeDownTracker trackedVelocity]
  -[QLPXSwipeDownTracker finalAnimationSpringDamping]
  -[QLPXSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]
  -[QLPXSwipeDownTracker dismissalProgress]
  -[QLPXSwipeDownTracker trackGestureTranslation:velocity:]
  -[QLPXSwipeDownTracker setTrackedCenter:]
  -[QLPXSwipeDownTracker setTrackedBounds:]
  -[QLPXSwipeDownTracker setTrackedTransform:]
  -[QLPXSwipeDownTracker verticalDirectionFilter]
  -[QLPXSwipeDownTracker setVerticalDirectionFilter:]
  -[QLPXSwipeDownTracker horizontalTranslationFilter]
  -[QLPXSwipeDownTracker setHorizontalTranslationFilter:]
  -[QLPXSwipeDownTracker setTrackedVelocity:]
  -[QLPXSwipeDownTracker setDismissalProgress:]
  -[QLPXSwipeDownTracker setShouldFinishDismissal:]
  -[QLPXSwipeDownTracker shouldFinishDismissal]
  -[QLPXSwipeDownTracker trackedBounds]
  -[QLPXSwipeDownTracker finalAnimationDuration]


QLListCellManager : NSObject /usr/lib/libSystem.B.dylib <QLListCellDataGenerationOperationDelegate>
 @property  NSMutableDictionary *operations
 @property  NSOperationQueue *generationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLListCellManager init]
  -[QLListCellManager dealloc]
  -[QLListCellManager .cxx_destruct]
  -[QLListCellManager operations]
  -[QLListCellManager setOperations:]
  -[QLListCellManager generationQueue]
  -[QLListCellManager _operationDidFinish:]
  -[QLListCellManager setupCell:withItem:atIndex:]
  -[QLListCellManager operation:didGenerateThumbnail:]
  -[QLListCellManager operation:didDetermineFileSize:fileTypeString:]
  -[QLListCellManager setGenerationQueue:]


QLPreviewItemEditedCopy : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  FPSandboxingURLWrapper *urlWrapper
 @property  FPSandboxingURLWrapper *directoryURLWrapper
 @property  NSUUID *uuid
 @property  unsigned long version
 @property  NSURL *url
 @property  NSURL *createdContainerTemporaryURL
 @property  NSString *outputURLContentType

  // class methods
  +[QLPreviewItemEditedCopy supportsSecureCoding]

  // instance methods
  -[QLPreviewItemEditedCopy isEqual:]
  -[QLPreviewItemEditedCopy encodeWithCoder:]
  -[QLPreviewItemEditedCopy initWithCoder:]
  -[QLPreviewItemEditedCopy .cxx_destruct]
  -[QLPreviewItemEditedCopy version]
  -[QLPreviewItemEditedCopy setVersion:]
  -[QLPreviewItemEditedCopy url]
  -[QLPreviewItemEditedCopy uuid]
  -[QLPreviewItemEditedCopy urlWrapper]
  -[QLPreviewItemEditedCopy setUrlWrapper:]
  -[QLPreviewItemEditedCopy setUuid:]
  -[QLPreviewItemEditedCopy removeFromDisk]
  -[QLPreviewItemEditedCopy containerStillExists]
  -[QLPreviewItemEditedCopy outputURLContentType]
  -[QLPreviewItemEditedCopy initWithEditedCopyURL:createdContainerTemporaryURL:]
  -[QLPreviewItemEditedCopy initWithEditedCopyURL:]
  -[QLPreviewItemEditedCopy createdContainerTemporaryURL]
  -[QLPreviewItemEditedCopy bumpVersion]
  -[QLPreviewItemEditedCopy directoryURLWrapper]
  -[QLPreviewItemEditedCopy setDirectoryURLWrapper:]


QLCustomItemViewController : UIViewController /System/Library/Frameworks/WebKit.framework/WebKit <QLRemotePopoverTracker>
 @property  UIView *shareSheetPresentationView
 @property  <QLCustomItemViewControllerHost> *hostViewControllerProxy
 @property  NSDictionary *previewOptions
 @property  BOOL isShareEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLCustomItemViewController .cxx_destruct]
  -[QLCustomItemViewController setFullScreen:]
  -[QLCustomItemViewController setAppearance:animated:]
  -[QLCustomItemViewController getFrameWithCompletionBlock:]
  -[QLCustomItemViewController hostViewControllerProxy]
  -[QLCustomItemViewController presentActivityViewControllerFromView:withURL:]
  -[QLCustomItemViewController didDismissActivityViewController]
  -[QLCustomItemViewController presentationModeDidChange:animated:]
  -[QLCustomItemViewController dismissPreviewController]
  -[QLCustomItemViewController presentActivityViewControllerFromView:]
  -[QLCustomItemViewController forwardMessageToHost:completionHandler:]
  -[QLCustomItemViewController previewOptions]
  -[QLCustomItemViewController setPreviewOptions:]
  -[QLCustomItemViewController isShareEnabled]
  -[QLCustomItemViewController setIsShareEnabled:]
  -[QLCustomItemViewController shareSheetPresentationView]
  -[QLCustomItemViewController setShareSheetPresentationView:]
  -[QLCustomItemViewController setHostViewControllerProxy:]


QLSpotlightSearchableItemInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *queryString
 @property  NSString *searchableItemUniqueIdentifier
 @property  NSString *applicationBundleIdentifier

  // class methods
  +[QLSpotlightSearchableItemInfo supportsSecureCoding]
  +[QLSpotlightSearchableItemInfo spotlightInfoWithUniqueIdentifier:queryString:applicationBundleIdentifier:]

  // instance methods
  -[QLSpotlightSearchableItemInfo encodeWithCoder:]
  -[QLSpotlightSearchableItemInfo initWithCoder:]
  -[QLSpotlightSearchableItemInfo .cxx_destruct]
  -[QLSpotlightSearchableItemInfo setApplicationBundleIdentifier:]
  -[QLSpotlightSearchableItemInfo applicationBundleIdentifier]
  -[QLSpotlightSearchableItemInfo queryString]
  -[QLSpotlightSearchableItemInfo setQueryString:]
  -[QLSpotlightSearchableItemInfo setSearchableItemUniqueIdentifier:]
  -[QLSpotlightSearchableItemInfo searchableItemUniqueIdentifier]


QLInteractiveTransitionController : QLTransitionController <UIViewControllerInteractiveTransitioning>
 @property  double completeProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart

  // instance methods
  -[QLInteractiveTransitionController transitionDuration:]
  -[QLInteractiveTransitionController startInteractiveTransition:]
  -[QLInteractiveTransitionController updateTransitionWithProgress:]
  -[QLInteractiveTransitionController completeTransition:withDuration:]
  -[QLInteractiveTransitionController _performForcedDismissal]
  -[QLInteractiveTransitionController setCompleteProgress:]
  -[QLInteractiveTransitionController updateTransitionWithProgress:isFinal:]
  -[QLInteractiveTransitionController completeProgress]


QLItemDataThumbnailGenerator : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completionHandler

  // instance methods
  -[QLItemDataThumbnailGenerator .cxx_destruct]
  -[QLItemDataThumbnailGenerator completionHandler]
  -[QLItemDataThumbnailGenerator setCompletionHandler:]
  -[QLItemDataThumbnailGenerator _executeCompletionHandlerWithImage:]
  -[QLItemDataThumbnailGenerator generateThumbnailWithData:contentType:size:scale:completionBlock:]


QLFPItemFetcher : QLUbiquitousItemFetcher <FPItemCollectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLFPItemFetcher supportsSecureCoding]

  // instance methods
  -[QLFPItemFetcher dealloc]
  -[QLFPItemFetcher encodeWithCoder:]
  -[QLFPItemFetcher initWithCoder:]
  -[QLFPItemFetcher .cxx_destruct]
  -[QLFPItemFetcher fileURL]
  -[QLFPItemFetcher itemSize]
  -[QLFPItemFetcher shareableItem]
  -[QLFPItemFetcher isLongFetchOperation]
  -[QLFPItemFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLFPItemFetcher prepareShareableItem:]
  -[QLFPItemFetcher _registerItemCollectionIfNeeded]
  -[QLFPItemFetcher _unregisterItemCollectionIfNeeded]
  -[QLFPItemFetcher _urlHandler:]
  -[QLFPItemFetcher dataForCollectionShouldBeReloaded:]
  -[QLFPItemFetcher collection:didUpdateObservedItem:]
  -[QLFPItemFetcher collection:didInsertItemsAtIndexPaths:]
  -[QLFPItemFetcher collection:didMoveItemsFromIndexPaths:toIndexPaths:]
  -[QLFPItemFetcher collection:didDeleteItemsAtIndexPaths:]
  -[QLFPItemFetcher collection:didUpdateItemsAtIndexPaths:changes:]
  -[QLFPItemFetcher collection:didPerformBatchUpdateWithReplayBlock:]
  -[QLFPItemFetcher initWithFPItem:shouldZipPackageIfNeeded:]


QLContactItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLContactItemTransformer allowedOutputClasses]

  // instance methods
  -[QLContactItemTransformer transformedContentsFromData:context:error:]


QLWaveformView : UIView /System/Library/Frameworks/WebKit.framework/WebKit <PHVideoScrubberFilmstripView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AVAsset *asset
 @property  UIImage *placeholderImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  AVVideoComposition *videoComposition

  // instance methods
  -[QLWaveformView .cxx_destruct]
  -[QLWaveformView asset]
  -[QLWaveformView setAsset:]
  -[QLWaveformView visibleRect]
  -[QLWaveformView layoutSubviews]
  -[QLWaveformView updateImage]
  -[QLWaveformView setVisibleRect:]
  -[QLWaveformView setPlaceholderImage:]
  -[QLWaveformView placeholderImage]
  -[QLWaveformView _updateWithWaveformImage:]
  -[QLWaveformView _expandWaveform]


QLWaveformScrubberViewProvider : NSObject /usr/lib/libSystem.B.dylib <PHVideoScrubberFilmstripViewProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLWaveformScrubberViewProvider generateWaveformForWidth:asset:updateHandler:]

  // instance methods
  -[QLWaveformScrubberViewProvider createFilmstripViewForVideoScrubberView:]


QLPageViewController : UIPageViewController /System/Library/Frameworks/WebKit.framework/WebKit <UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIScrollViewDelegate>
 @property  unsigned long currentPageIndex
 @property  UIViewController *currentPage
 @property  <QLPageViewControllerDataSource> *indexedDataSource
 @property  <UIScrollViewDelegate> *scrollViewDelegate
 @property  UIScrollView *scrollView
 @property  double parallaxIntensity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPageViewController init]
  -[QLPageViewController initWithCoder:]
  -[QLPageViewController delegate]
  -[QLPageViewController setDelegate:]
  -[QLPageViewController .cxx_destruct]
  -[QLPageViewController setDataSource:]
  -[QLPageViewController scrollViewDidScroll:]
  -[QLPageViewController scrollViewWillBeginDragging:]
  -[QLPageViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[QLPageViewController scrollViewDidEndDecelerating:]
  -[QLPageViewController viewWillAppear:]
  -[QLPageViewController scrollView]
  -[QLPageViewController currentPage]
  -[QLPageViewController initWithTransitionStyle:navigationOrientation:options:]
  -[QLPageViewController pageViewController:willTransitionToViewControllers:]
  -[QLPageViewController pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:]
  -[QLPageViewController pageViewController:viewControllerBeforeViewController:]
  -[QLPageViewController pageViewController:viewControllerAfterViewController:]
  -[QLPageViewController setViewControllers:direction:animated:completion:]
  -[QLPageViewController _setUp]
  -[QLPageViewController currentPageIndex]
  -[QLPageViewController setCurrentPageIndex:]
  -[QLPageViewController scrollViewDelegate]
  -[QLPageViewController setScrollViewDelegate:]
  -[QLPageViewController _setCurrentPageIndex:direction:animated:completion:]
  -[QLPageViewController _viewControllerAtIndex:offset:]
  -[QLPageViewController _unsetParallaxEffect]
  -[QLPageViewController _retrieveAndStoreViewControllerAtIndex:offset:]
  -[QLPageViewController indexedDataSource]
  -[QLPageViewController _rearrangeCachedViewControllersWithNewCurrentPageIndex:]
  -[QLPageViewController _setViewControllers:direction:animated:completion:]
  -[QLPageViewController _cachedViewControllerAtIndex:offset:]
  -[QLPageViewController _loadAndCacheViewControllersBeforeAndAfterIndex:]
  -[QLPageViewController _applyParallaxEffectWithTransitionProgress:]
  -[QLPageViewController _indexOfViewController:]
  -[QLPageViewController setCurrentPageIndex:animated:]
  -[QLPageViewController clearInternalCache]
  -[QLPageViewController setParallaxIntensity:]
  -[QLPageViewController setIndexedDataSource:]
  -[QLPageViewController parallaxIntensity]


QLPHSwipeDownTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  QLPXSwipeDownTracker *impl
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {QLPHDisplayVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping

  // instance methods
  -[QLPHSwipeDownTracker init]
  -[QLPHSwipeDownTracker .cxx_destruct]
  -[QLPHSwipeDownTracker impl]
  -[QLPHSwipeDownTracker trackedCenter]
  -[QLPHSwipeDownTracker trackedTransform]
  -[QLPHSwipeDownTracker trackedVelocity]
  -[QLPHSwipeDownTracker finalAnimationSpringDamping]
  -[QLPHSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]
  -[QLPHSwipeDownTracker dismissalProgress]
  -[QLPHSwipeDownTracker trackGestureTranslation:velocity:]
  -[QLPHSwipeDownTracker shouldFinishDismissal]
  -[QLPHSwipeDownTracker trackedBounds]
  -[QLPHSwipeDownTracker finalAnimationDuration]


QLPXCompoundNumberFilter : QLPXNumberFilter
 @property  NSArray *filters

  // instance methods
  -[QLPXCompoundNumberFilter .cxx_destruct]
  -[QLPXCompoundNumberFilter filters]
  -[QLPXCompoundNumberFilter setFilters:]
  -[QLPXCompoundNumberFilter updatedOutput]


QLPXAngleNumberFilter : QLPXNumberFilter
  // instance methods
  -[QLPXAngleNumberFilter updatedOutput]


QLPXInitialHysteresisNumberFilter : QLPXNumberFilter
 @property  double hysteresis
 @property  double outputDerivative

  // instance methods
  -[QLPXInitialHysteresisNumberFilter hysteresis]
  -[QLPXInitialHysteresisNumberFilter setHysteresis:]
  -[QLPXInitialHysteresisNumberFilter outputDerivative]
  -[QLPXInitialHysteresisNumberFilter updatedOutput]


QLPXChangeDirectionNumberFilter : QLPXNumberFilter
 @property  double minimumChange

  // instance methods
  -[QLPXChangeDirectionNumberFilter initWithInput:]
  -[QLPXChangeDirectionNumberFilter setMinimumChange:]
  -[QLPXChangeDirectionNumberFilter minimumChange]
  -[QLPXChangeDirectionNumberFilter updatedOutput]
  -[QLPXChangeDirectionNumberFilter initialOutputForInput:]


QLPXVelocityNumberFilter : QLPXNumberFilter
  // class methods
  +[QLPXVelocityNumberFilter gestureVelocityFilter]

  // instance methods
  -[QLPXVelocityNumberFilter initWithInput:]
  -[QLPXVelocityNumberFilter updatedOutput]


QLItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLItemTransformer allowedOutputClasses]

  // instance methods
  -[QLItemTransformer transformedContentsFromURL:context:error:]
  -[QLItemTransformer transformedContentsFromData:context:error:]


QLURLItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLURLItemTransformer allowedOutputClasses]

  // instance methods
  -[QLURLItemTransformer transformedContentsFromURL:context:error:]


QLDataItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLDataItemTransformer allowedOutputClasses]

  // instance methods
  -[QLDataItemTransformer transformedContentsFromData:context:error:]


QLThumbnailCreationOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentRect
 @property  UIImage *image
 @property  NSError *error
 @property  NSURL *documentURL
 @property  double maximumDimension
 @property  double scaleFactor
 @property  unsigned long useMode
 @property  BOOL generateIfNeeded

  // instance methods
  -[QLThumbnailCreationOperation .cxx_destruct]
  -[QLThumbnailCreationOperation error]
  -[QLThumbnailCreationOperation start]
  -[QLThumbnailCreationOperation main]
  -[QLThumbnailCreationOperation setError:]
  -[QLThumbnailCreationOperation setFinished:]
  -[QLThumbnailCreationOperation isFinished]
  -[QLThumbnailCreationOperation isExecuting]
  -[QLThumbnailCreationOperation isConcurrent]
  -[QLThumbnailCreationOperation documentURL]
  -[QLThumbnailCreationOperation image]
  -[QLThumbnailCreationOperation setImage:]
  -[QLThumbnailCreationOperation scaleFactor]
  -[QLThumbnailCreationOperation setScaleFactor:]
  -[QLThumbnailCreationOperation contentRect]
  -[QLThumbnailCreationOperation _finish]
  -[QLThumbnailCreationOperation setContentRect:]
  -[QLThumbnailCreationOperation setDocumentURL:]
  -[QLThumbnailCreationOperation _finishIfCancelled]
  -[QLThumbnailCreationOperation setExecuting:]
  -[QLThumbnailCreationOperation maximumDimension]
  -[QLThumbnailCreationOperation _finishWithError:]
  -[QLThumbnailCreationOperation retrieveThumbnailForTaggedLogicalURL:]
  -[QLThumbnailCreationOperation updateLastHitDateOfAddition:onPhysicalURL:]
  -[QLThumbnailCreationOperation setMaximumDimension:]
  -[QLThumbnailCreationOperation useMode]
  -[QLThumbnailCreationOperation setUseMode:]
  -[QLThumbnailCreationOperation generateIfNeeded]
  -[QLThumbnailCreationOperation setGenerateIfNeeded:]


QLThumbnailDescriptor : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGSize=dd} size
 @property  double scaleFactor

  // class methods
  +[QLThumbnailDescriptor descriptorWithSize:scaleFactor:]

  // instance methods
  -[QLThumbnailDescriptor size]
  -[QLThumbnailDescriptor setSize:]
  -[QLThumbnailDescriptor scaleFactor]
  -[QLThumbnailDescriptor setScaleFactor:]


QLThumbnail : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *url

  // class methods
  +[QLThumbnail sharedQueue]
  +[QLThumbnail defaultDescriptors]

  // instance methods
  -[QLThumbnail initWithURL:]
  -[QLThumbnail .cxx_destruct]
  -[QLThumbnail url]
  -[QLThumbnail setUrl:]
  -[QLThumbnail thumbnailCreationOperationForUseMode:descriptor:generateIfNeeded:]
  -[QLThumbnail thumbnailCreationOperationForUseMode:descriptor:]
  -[QLThumbnail imageForUseMode:descriptor:generateIfNeeded:contentRect:error:]
  -[QLThumbnail provideImages:error:]


QLMediaItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLMediaItemTransformer allowedOutputClasses]

  // instance methods
  -[QLMediaItemTransformer transformedContentsFromURL:context:error:]


QLItemProviderFetcher : QLItemFetcher <QLPreviewItemURLProviderDownloadTracker, QLPreviewItemURLProvider>
 @property  id lastContent
 @property  NSItemProvider *itemProvider
 @property  <QLPreviewItemURLProvider> *urlProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLItemProviderFetcher supportsSecureCoding]

  // instance methods
  -[QLItemProviderFetcher dealloc]
  -[QLItemProviderFetcher encodeWithCoder:]
  -[QLItemProviderFetcher initWithCoder:]
  -[QLItemProviderFetcher .cxx_destruct]
  -[QLItemProviderFetcher itemProvider]
  -[QLItemProviderFetcher setItemProvider:]
  -[QLItemProviderFetcher itemSize]
  -[QLItemProviderFetcher shareableItem]
  -[QLItemProviderFetcher isLongFetchOperation]
  -[QLItemProviderFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLItemProviderFetcher fetchedContent]
  -[QLItemProviderFetcher newItemProvider]
  -[QLItemProviderFetcher canBeCanceled]
  -[QLItemProviderFetcher updatedURLWithProgress:]
  -[QLItemProviderFetcher getURLWithDownloadTracker:completionHandler:]
  -[QLItemProviderFetcher setUrlProvider:]
  -[QLItemProviderFetcher _updateCompletionBlockWithAllowedOutputClasses:URL:]
  -[QLItemProviderFetcher lastContent]
  -[QLItemProviderFetcher initWithContentType:fileSize:]
  -[QLItemProviderFetcher urlProvider]
  -[QLItemProviderFetcher setLastContent:]


QLPinchRotationTracker : NSObject /usr/lib/libSystem.B.dylib <QLDismissGestureTracking>
 @property  {CGPoint=dd} anchorPoint
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {_QLDismissGestureTrackingVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  double targetZoom
 @property  double minimumZoomForDismissal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPinchRotationTracker init]
  -[QLPinchRotationTracker update]
  -[QLPinchRotationTracker anchorPoint]
  -[QLPinchRotationTracker trackedCenter]
  -[QLPinchRotationTracker trackedTransform]
  -[QLPinchRotationTracker trackedVelocity]
  -[QLPinchRotationTracker finalAnimationSpringDamping]
  -[QLPinchRotationTracker setMinimumZoomForDismissal:]
  -[QLPinchRotationTracker setTargetZoom:]
  -[QLPinchRotationTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]
  -[QLPinchRotationTracker trackGestureLocation:]
  -[QLPinchRotationTracker trackRotation:]
  -[QLPinchRotationTracker trackScale:]
  -[QLPinchRotationTracker dismissalProgress]
  -[QLPinchRotationTracker shouldFinishDismissal]
  -[QLPinchRotationTracker trackedBounds]
  -[QLPinchRotationTracker finalAnimationDuration]
  -[QLPinchRotationTracker targetZoom]
  -[QLPinchRotationTracker minimumZoomForDismissal]


QLRoundProgressLayer : CALayer /System/Library/PrivateFrameworks/Celestial.framework/Celestial
 @property  double progress

  // class methods
  +[QLRoundProgressLayer needsDisplayForKey:]

  // instance methods
  -[QLRoundProgressLayer initWithLayer:]
  -[QLRoundProgressLayer needsDisplayOnBoundsChange]


QLRoundProgressView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  double progress

  // class methods
  +[QLRoundProgressView layerClass]

  // instance methods
  -[QLRoundProgressView progress]
  -[QLRoundProgressView setProgress:]
  -[QLRoundProgressView initWithFrame:]
  -[QLRoundProgressView didMoveToWindow]
  -[QLRoundProgressView drawLayer:inContext:]
  -[QLRoundProgressView setProgress:animated:]


QLNetworkStateObserver : NSObject /usr/lib/libSystem.B.dylib <RadiosPreferencesDelegate, QLNetworkStateListener>
 @property  unsigned long networkState
 @property  <QLNetworkStateListener> *remoteObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLNetworkStateObserver sharedInstance]
  +[QLNetworkStateObserver usingRemoteNetworkObserver]
  +[QLNetworkStateObserver networkAccessShouldGoThroughCloudDocsDaemon]

  // instance methods
  -[QLNetworkStateObserver init]
  -[QLNetworkStateObserver dealloc]
  -[QLNetworkStateObserver .cxx_destruct]
  -[QLNetworkStateObserver _update]
  -[QLNetworkStateObserver remoteObserver]
  -[QLNetworkStateObserver airplaneModeChanged]
  -[QLNetworkStateObserver updateState:]
  -[QLNetworkStateObserver startObserving]
  -[QLNetworkStateObserver stopObserving]
  -[QLNetworkStateObserver _commonInit]
  -[QLNetworkStateObserver isConnected]
  -[QLNetworkStateObserver networkState]
  -[QLNetworkStateObserver _updateNetworkActivityIndicator]
  -[QLNetworkStateObserver isWifiCapable]
  -[QLNetworkStateObserver setRemoteObserver:]
  -[QLNetworkStateObserver pushOperation]
  -[QLNetworkStateObserver popOperation]
  -[QLNetworkStateObserver _updateRemoteObserver]
  -[QLNetworkStateObserver _updateNetworkStateWithFlags:]
  -[QLNetworkStateObserver _setNetworkState:]
  -[QLNetworkStateObserver _updateNetworkStateWithNotifyToken:]
  -[QLNetworkStateObserver _unregisterReachability]
  -[QLNetworkStateObserver _updateCompletionBlocks]
  -[QLNetworkStateObserver setNetworkState:]
  -[QLNetworkStateObserver networkStateWithCompletionBlock:]


QLItemFetcherFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[QLItemFetcherFactory fetcherForPreviewItem:]
  +[QLItemFetcherFactory possibleFetcherClasses]


QLItemFetcher : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  long long fetchingState
 @property  NSNumber *itemSize

  // class methods
  +[QLItemFetcher supportsSecureCoding]

  // instance methods
  -[QLItemFetcher init]
  -[QLItemFetcher encodeWithCoder:]
  -[QLItemFetcher initWithCoder:]
  -[QLItemFetcher .cxx_destruct]
  -[QLItemFetcher itemSize]
  -[QLItemFetcher unregisterObserver:]
  -[QLItemFetcher _notifyObservers]
  -[QLItemFetcher shareableItem]
  -[QLItemFetcher isLongFetchOperation]
  -[QLItemFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLItemFetcher setFetchingState:]
  -[QLItemFetcher fetchingState]
  -[QLItemFetcher prepareShareableItem:]
  -[QLItemFetcher fetchedContent]
  -[QLItemFetcher newItemProvider]
  -[QLItemFetcher canBeCanceled]
  -[QLItemFetcher cancelFetch]
  -[QLItemFetcher registerObserver:withBlock:]


QLThreadInvoker : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[QLThreadInvoker .cxx_destruct]
  -[QLThreadInvoker initWithConnection:data:error:]
  -[QLThreadInvoker connectionDidReceiveData:]
  -[QLThreadInvoker connectionDidReceiveDataLengthReceived:]
  -[QLThreadInvoker connectionDidFailWithError:]


QLPreviewURLProtocol : NSURLProtocol /usr/lib/libobjc.A.dylib
  // class methods
  +[QLPreviewURLProtocol initialize]
  +[QLPreviewURLProtocol canInitWithRequest:]
  +[QLPreviewURLProtocol canonicalRequestForRequest:]
  +[QLPreviewURLProtocol registerPreview:]
  +[QLPreviewURLProtocol appendData:forURL:lastChunk:]
  +[QLPreviewURLProtocol _errorForAbort]
  +[QLPreviewURLProtocol _unregisterURL:]
  +[QLPreviewURLProtocol _errorForCancel]
  +[QLPreviewURLProtocol startLoadingProtocol:]
  +[QLPreviewURLProtocol stopLoadingProtocol:]
  +[QLPreviewURLProtocol newUniqueURLWithName:]
  +[QLPreviewURLProtocol newURLWithContentID:baseURL:]
  +[QLPreviewURLProtocol registerURL:mimeType:textEncoding:]
  +[QLPreviewURLProtocol _errorForNoPreview]
  +[QLPreviewURLProtocol unregisterURLs:andPreview:]
  +[QLPreviewURLProtocol setError:forURL:]
  +[QLPreviewURLProtocol errorForURL:]
  +[QLPreviewURLProtocol mimeTypeForAttachmentURL:]

  // instance methods
  -[QLPreviewURLProtocol stopLoading]
  -[QLPreviewURLProtocol startLoading]


QLPreviewParts : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *url
 @property  NSData *data
 @property  NSString *fileName
 @property  NSString *uti
 @property  NSString *password
 @property  BOOL progressive
 @property  NSURLConnection *connection
 @property  BOOL shouldRemoveURLAfterGeneration
 @property  id delegate
 @property  BOOL htmlErrorDisabled
 @property  NSURLRequest *previewRequest
 @property  NSURLResponse *previewResponse
 @property  NSURL *previewURL
 @property  NSSet *attachmentURLs
 @property  long long pageCount
 @property  float pageWidth
 @property  float pageHeight
 @property  BOOL computed
 @property  BOOL cancelled

  // class methods
  +[QLPreviewParts registerPreview:]
  +[QLPreviewParts unregisterPreview:]
  +[QLPreviewParts isSafeURL:]
  +[QLPreviewParts isSafeRequest:]
  +[QLPreviewParts safeURLScheme]
  +[QLPreviewParts relativeStringForSafeURL:]

  // instance methods
  -[QLPreviewParts dealloc]
  -[QLPreviewParts delegate]
  -[QLPreviewParts setDelegate:]
  -[QLPreviewParts password]
  -[QLPreviewParts .cxx_destruct]
  -[QLPreviewParts data]
  -[QLPreviewParts cancel]
  -[QLPreviewParts setData:]
  -[QLPreviewParts isCancelled]
  -[QLPreviewParts setError:]
  -[QLPreviewParts url]
  -[QLPreviewParts setPassword:]
  -[QLPreviewParts connection]
  -[QLPreviewParts setConnection:]
  -[QLPreviewParts uti]
  -[QLPreviewParts setUti:]
  -[QLPreviewParts setUrl:]
  -[QLPreviewParts pageCount]
  -[QLPreviewParts fileName]
  -[QLPreviewParts setFileName:]
  -[QLPreviewParts safeRequestForRequest:]
  -[QLPreviewParts previewRequest]
  -[QLPreviewParts previewResponse]
  -[QLPreviewParts previewURL]
  -[QLPreviewParts pageWidth]
  -[QLPreviewParts pageHeight]
  -[QLPreviewParts attachmentURLs]
  -[QLPreviewParts isComputed]
  -[QLPreviewParts setShouldRemoveURLAfterGeneration:]
  -[QLPreviewParts startComputingPreview]
  -[QLPreviewParts setHtmlErrorDisabled:]
  -[QLPreviewParts htmlErrorDisabled]
  -[QLPreviewParts startDataRepresentationWithContentType:properties:]
  -[QLPreviewParts appendData:forURL:lastChunk:]
  -[QLPreviewParts newAttachmentURLWithID:properties:]
  -[QLPreviewParts setDocumentObject:callbacks:]
  -[QLPreviewParts documentObject]
  -[QLPreviewParts mimeTypeForAttachmentURL:]
  -[QLPreviewParts _voidRequest]
  -[QLPreviewParts _requestForURL:]
  -[QLPreviewParts computePreviewInThread]
  -[QLPreviewParts _protectRepresentedObjectSafely]
  -[QLPreviewParts computePreview]
  -[QLPreviewParts _discardRepresentedObjectSafely]
  -[QLPreviewParts _registerURL:mimeType:textEncoding:]
  -[QLPreviewParts newSafeAttachmentURLWithID:mimeType:textEncoding:]
  -[QLPreviewParts cfEncodingForAttachmentURL:]
  -[QLPreviewParts progressive]
  -[QLPreviewParts setProgressive:]
  -[QLPreviewParts shouldRemoveURLAfterGeneration]


QLKeyCommand : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  UIKeyCommand *keyCommand
 @property  unsigned long keyCommandIdentifier

  // class methods
  +[QLKeyCommand supportsSecureCoding]
  +[QLKeyCommand keyCommandWithKeyCommand:identifier:]

  // instance methods
  -[QLKeyCommand encodeWithCoder:]
  -[QLKeyCommand initWithCoder:]
  -[QLKeyCommand .cxx_destruct]
  -[QLKeyCommand keyCommand]
  -[QLKeyCommand keyCommandIdentifier]
  -[QLKeyCommand setKeyCommand:]
  -[QLKeyCommand setKeyCommandIdentifier:]


QLSwipeDownTracker : QLPHSwipeDownTracker <QLDismissGestureTracking>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGPoint=dd} anchorPoint
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {_QLDismissGestureTrackingVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal

  // instance methods
  -[QLSwipeDownTracker anchorPoint]
  -[QLSwipeDownTracker trackedTransform]
  -[QLSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]


QLPXNumberFilter : QLPXObservable <QLPXMutableNumberFilter>
 @property  double output
 @property  double currentTime
 @property  double lastTime
 @property  double input
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double time

  // instance methods
  -[QLPXNumberFilter init]
  -[QLPXNumberFilter input]
  -[QLPXNumberFilter time]
  -[QLPXNumberFilter setTime:]
  -[QLPXNumberFilter setInput:]
  -[QLPXNumberFilter currentTime]
  -[QLPXNumberFilter lastTime]
  -[QLPXNumberFilter _needsUpdate]
  -[QLPXNumberFilter output]
  -[QLPXNumberFilter initWithInput:]
  -[QLPXNumberFilter performChanges:]
  -[QLPXNumberFilter _setNeedsUpdate]
  -[QLPXNumberFilter mutableChangeObject]
  -[QLPXNumberFilter didPerformChanges]
  -[QLPXNumberFilter updatedOutput]
  -[QLPXNumberFilter initialOutputForInput:]
  -[QLPXNumberFilter _updateIfNeeded]
  -[QLPXNumberFilter _invalidateOutput]
  -[QLPXNumberFilter _updateOutputIfNeeded]
  -[QLPXNumberFilter _setOutput:]
  -[QLPXNumberFilter _setLastTime:]
  -[QLPXNumberFilter invalidateOutput]


QLWebLocationItemViewController : QLItemViewController
  // instance methods
  -[QLWebLocationItemViewController dealloc]
  -[QLWebLocationItemViewController .cxx_destruct]
  -[QLWebLocationItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLWebLocationItemViewController loadView]
  -[QLWebLocationItemViewController scrollView]
  -[QLWebLocationItemViewController canSwipeToDismiss]
  -[QLWebLocationItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLWebLocationItemViewController canPinchToDismiss]
  -[QLWebLocationItemViewController canEnterFullScreen]
  -[QLWebLocationItemViewController setAppearance:animated:]
  -[QLWebLocationItemViewController _updateConstraintConstants:]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewIndicatorInset]


QLPreviewPrinter : UIPrintPageRenderer /System/Library/Frameworks/WebKit.framework/WebKit
 @property  <QLPrintingProtocol> *printer

  // instance methods
  -[QLPreviewPrinter .cxx_destruct]
  -[QLPreviewPrinter numberOfPages]
  -[QLPreviewPrinter printer]
  -[QLPreviewPrinter prepareForDrawingPages:]
  -[QLPreviewPrinter drawPageAtIndex:inRect:]
  -[QLPreviewPrinter initWithPreviewPrinter:]


QLPreviewItemPrinter : QLPreviewPrinter
 @property  <QLPrintingProtocol> *itemPrinter

  // instance methods
  -[QLPreviewItemPrinter .cxx_destruct]
  -[QLPreviewItemPrinter initWithItem:]
  -[QLPreviewItemPrinter numberOfPages]
  -[QLPreviewItemPrinter printer]
  -[QLPreviewItemPrinter prepareForDrawingPages:]
  -[QLPreviewItemPrinter drawPageAtIndex:inRect:]
  -[QLPreviewItemPrinter _didReceivePrinter:]
  -[QLPreviewItemPrinter _waitForPrinterSynchronously]
  -[QLPreviewItemPrinter itemPrinter]
  -[QLPreviewItemPrinter setItemPrinter:]


_QLAudioScrubberViewContainer : UIView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[_QLAudioScrubberViewContainer init]
  -[_QLAudioScrubberViewContainer intrinsicContentSize]


QLAudioItemViewController : QLMediaItemViewController <UIGestureRecognizerDelegate>
 @property  NSLayoutConstraint *topScrubber
 @property  UIView *scrubberContainer
 @property  BOOL scrubbing
 @property  double scrubberVerticalOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLAudioItemViewController dealloc]
  -[QLAudioItemViewController .cxx_destruct]
  -[QLAudioItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLAudioItemViewController accessoryView]
  -[QLAudioItemViewController _tapRecognized:]
  -[QLAudioItemViewController setScrubbing:]
  -[QLAudioItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLAudioItemViewController canEnterFullScreen]
  -[QLAudioItemViewController transitionDidFinish:didComplete:]
  -[QLAudioItemViewController transitionDidStart:]
  -[QLAudioItemViewController previewDidAppear:]
  -[QLAudioItemViewController previewDidDisappear:]
  -[QLAudioItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLAudioItemViewController performFirstTimeAppearanceActions:]
  -[QLAudioItemViewController addScrubberWithDeferral]
  -[QLAudioItemViewController didChangePlayingStatus]
  -[QLAudioItemViewController setPlayControlsHidden:animated:]
  -[QLAudioItemViewController timeLabelScrollView]
  -[QLAudioItemViewController topScrubber]
  -[QLAudioItemViewController setTopScrubber:]
  -[QLAudioItemViewController scrubberContainer]
  -[QLAudioItemViewController setScrubberContainer:]
  -[QLAudioItemViewController scrubbing]
  -[QLAudioItemViewController scrubberVerticalOffset]
  -[QLAudioItemViewController setScrubberVerticalOffset:]


QLNotificationCenter : NSObject /usr/lib/libSystem.B.dylib <QLNotificationCenterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLNotificationCenter sharedInstance]

  // instance methods
  -[QLNotificationCenter init]
  -[QLNotificationCenter .cxx_destruct]
  -[QLNotificationCenter postNotificationName:userInfo:]
  -[QLNotificationCenter _indexOfObserver:]
  -[QLNotificationCenter registerObserver:]
  -[QLNotificationCenter unregisterObserver:]
  -[QLNotificationCenter setRemoteNotificationCenter:]
  -[QLNotificationCenter _tryPostingNotificationName:userInfo:]
  -[QLNotificationCenter _bufferNotificationName:userInfo:]
  -[QLNotificationCenter _sendEnqueuedNotifications]


QLStringWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  NSAttributedString *string
 @property  NSDictionary *attributes

  // instance methods
  -[QLStringWrapper string]
  -[QLStringWrapper setString:]
  -[QLStringWrapper .cxx_destruct]
  -[QLStringWrapper attributes]
  -[QLStringWrapper setAttributes:]


QLTextItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLTextItemTransformer allowedOutputClasses]

  // instance methods
  -[QLTextItemTransformer transformedContentsFromURL:context:error:]
  -[QLTextItemTransformer transformedContentsFromData:context:error:]
  -[QLTextItemTransformer wrapperFromData:encoding:mimeType:error:]


QLPULayerAnimation : QLPUAnimationGroup <CAAnimationDelegate>
 @property  CAAnimation *_animation
 @property  CALayer *layer
 @property  NSString *key
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPULayerAnimation init]
  -[QLPULayerAnimation key]
  -[QLPULayerAnimation .cxx_destruct]
  -[QLPULayerAnimation layer]
  -[QLPULayerAnimation animationDidStop:finished:]
  -[QLPULayerAnimation animationDidStart:]
  -[QLPULayerAnimation _animation]
  -[QLPULayerAnimation initWithLayer:key:]
  -[QLPULayerAnimation finishImmediately]
  -[QLPULayerAnimation setSpeed:timeOffset:beginTime:]
  -[QLPULayerAnimation isReadyToComplete]
  -[QLPULayerAnimation _updateLayerAnimation]
  -[QLPULayerAnimation _setAnimation:]


QLLivePhotoItemViewController : QLScrollableContentItemViewController <PHLivePhotoViewDelegate, UIGestureRecognizerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLLivePhotoItemViewController .cxx_destruct]
  -[QLLivePhotoItemViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLLivePhotoItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLLivePhotoItemViewController imageSize]
  -[QLLivePhotoItemViewController preferredWhitePointAdaptivityStyle]
  -[QLLivePhotoItemViewController livePhotoView:willBeginPlaybackWithStyle:]
  -[QLLivePhotoItemViewController livePhotoView:didEndPlaybackWithStyle:]
  -[QLLivePhotoItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLivePhotoItemViewController canEnterFullScreen]
  -[QLLivePhotoItemViewController setAppearance:animated:]
  -[QLLivePhotoItemViewController transitionDidFinish:didComplete:]
  -[QLLivePhotoItemViewController transitionDidStart:]
  -[QLLivePhotoItemViewController previewWillAppear:]
  -[QLLivePhotoItemViewController previewDidAppear:]
  -[QLLivePhotoItemViewController previewDidDisappear:]
  -[QLLivePhotoItemViewController previewBecameFullScreen:animated:]
  -[QLLivePhotoItemViewController previewWillFinishAppearing]
  -[QLLivePhotoItemViewController canToggleFullScreen]
  -[QLLivePhotoItemViewController _updateLivePhotoBadgeAnimated:]
  -[QLLivePhotoItemViewController _wasJustPlaying]
  -[QLLivePhotoItemViewController didEndZoomingAtScale:]
  -[QLLivePhotoItemViewController willBeginZooming]


QLPreviewScrollView : UIScrollView /System/Library/Frameworks/WebKit.framework/WebKit <UIScrollViewDelegate>
 @property  BOOL needsZoomUpdate
 @property  {CGSize=dd} contentViewSize
 @property  double minZoomScale
 @property  double maxZoomScale
 @property  double pinchMaxZoomScale
 @property  double fillZoomScale
 @property  double fitZoomScale
 @property  double contentIsSmallerThanView
 @property  <QLPreviewScrollViewZoomDelegate> *zoomDelegate
 @property  BOOL preventZoomUpdate
 @property  BOOL shouldFit
 @property  {UIEdgeInsets=dddd} peripheryInsetsLandscape
 @property  {UIEdgeInsets=dddd} peripheryInsetsPortrait
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPreviewScrollView init]
  -[QLPreviewScrollView .cxx_destruct]
  -[QLPreviewScrollView layoutSubviews]
  -[QLPreviewScrollView viewForZoomingInScrollView:]
  -[QLPreviewScrollView scrollViewWillBeginZooming:withView:]
  -[QLPreviewScrollView scrollViewDidEndZooming:withView:atScale:]
  -[QLPreviewScrollView minZoomScale]
  -[QLPreviewScrollView maxZoomScale]
  -[QLPreviewScrollView resetZoomScale]
  -[QLPreviewScrollView setShouldFit:]
  -[QLPreviewScrollView _updateScrollViewZomming]
  -[QLPreviewScrollView preventZoomUpdate]
  -[QLPreviewScrollView needsZoomUpdate]
  -[QLPreviewScrollView updateZoomScales]
  -[QLPreviewScrollView setNeedsZoomUpdate:]
  -[QLPreviewScrollView updateZoomScalesWithSize:]
  -[QLPreviewScrollView zoomDelegate]
  -[QLPreviewScrollView contentViewSize]
  -[QLPreviewScrollView _maxZoomScaleForContentSize:]
  -[QLPreviewScrollView shouldFit]
  -[QLPreviewScrollView setContentViewSize:]
  -[QLPreviewScrollView zoomRectForScale:withCenter:]
  -[QLPreviewScrollView pinchMaxZoomScale]
  -[QLPreviewScrollView fillZoomScale]
  -[QLPreviewScrollView fitZoomScale]
  -[QLPreviewScrollView contentIsSmallerThanView]
  -[QLPreviewScrollView setZoomDelegate:]
  -[QLPreviewScrollView setPreventZoomUpdate:]
  -[QLPreviewScrollView peripheryInsetsLandscape]
  -[QLPreviewScrollView setPeripheryInsetsLandscape:]
  -[QLPreviewScrollView peripheryInsetsPortrait]
  -[QLPreviewScrollView setPeripheryInsetsPortrait:]


QLScrollableContentItemViewController : QLItemViewController <QLPreviewScrollViewZoomDelegate>
 @property  UIView *contentView
 @property  BOOL shouldFit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLScrollableContentItemViewController init]
  -[QLScrollableContentItemViewController .cxx_destruct]
  -[QLScrollableContentItemViewController contentView]
  -[QLScrollableContentItemViewController setContentView:]
  -[QLScrollableContentItemViewController loadView]
  -[QLScrollableContentItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLScrollableContentItemViewController imageSize]
  -[QLScrollableContentItemViewController scrollView]
  -[QLScrollableContentItemViewController _doubleTapRecognized:]
  -[QLScrollableContentItemViewController canPinchToDismiss]
  -[QLScrollableContentItemViewController setAppearance:animated:]
  -[QLScrollableContentItemViewController transitionWillFinish:didComplete:]
  -[QLScrollableContentItemViewController previewWillAppear:]
  -[QLScrollableContentItemViewController previewDidAppear:]
  -[QLScrollableContentItemViewController previewDidDisappear:]
  -[QLScrollableContentItemViewController parallaxView]
  -[QLScrollableContentItemViewController supportsScrollingUpAndDownUsingKeyCommands]
  -[QLScrollableContentItemViewController setShouldFit:]
  -[QLScrollableContentItemViewController didEndZoomingAtScale:]
  -[QLScrollableContentItemViewController willBeginZooming]
  -[QLScrollableContentItemViewController previewScrollViewShouldResizeContentBasedOnPeripheryInsets:]
  -[QLScrollableContentItemViewController shouldFit]
  -[QLScrollableContentItemViewController previewScrollView:extraMinimumZoomForMinimumZoomScale:maximumZoomScale:]
  -[QLScrollableContentItemViewController previewScrollViewWillBeginZooming:]
  -[QLScrollableContentItemViewController previewScrollView:didEndZoomingAtScale:]
  -[QLScrollableContentItemViewController _updateScrollViewZoomUpdate:]
  -[QLScrollableContentItemViewController shouldLayoutContentBasedOnPeripheryInsets]


QLItemThumbnailGenerator : NSObject /usr/lib/libSystem.B.dylib <QLItemThumbnailGeneratorProtocol>
 @property  QLExtensionThumbnailGenerator *extensionGenerator
 @property  QLItemURLThumbnailGenerator *urlGenerator
 @property  QLItemDataThumbnailGenerator *dataGenerator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLItemThumbnailGenerator .cxx_destruct]
  -[QLItemThumbnailGenerator generateThumbnailForItem:ofSize:minimumSize:scale:completionBlock:]
  -[QLItemThumbnailGenerator generateThumbnailForItem:ofSize:minimumSize:scale:badgeType:completionBlock:]
  -[QLItemThumbnailGenerator _fetcherClassesForPreviewItem:]
  -[QLItemThumbnailGenerator extensionGenerator]
  -[QLItemThumbnailGenerator urlGenerator]
  -[QLItemThumbnailGenerator dataGenerator]
  -[QLItemThumbnailGenerator setExtensionGenerator:]
  -[QLItemThumbnailGenerator setUrlGenerator:]
  -[QLItemThumbnailGenerator setDataGenerator:]


QLLoadingItemViewController : QLItemViewController
  // instance methods
  -[QLLoadingItemViewController setDelegate:]
  -[QLLoadingItemViewController .cxx_destruct]
  -[QLLoadingItemViewController canSwipeToDismiss]
  -[QLLoadingItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLoadingItemViewController canPinchToDismiss]
  -[QLLoadingItemViewController canEnterFullScreen]
  -[QLLoadingItemViewController previewBecameFullScreen:animated:]
  -[QLLoadingItemViewController _updateLoadingLabel]


QLDictionaryItemTransformer : NSObject /usr/lib/libSystem.B.dylib <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLDictionaryItemTransformer allowedOutputClasses]

  // instance methods
  -[QLDictionaryItemTransformer transformedContentsFromURL:context:error:]
  -[QLDictionaryItemTransformer transformedContentsFromData:context:error:]


QLMovieItemAggregatedViewController : QLItemAggregatedViewController
  // instance methods
  -[QLMovieItemAggregatedViewController .cxx_destruct]
  -[QLMovieItemAggregatedViewController loadPreviewControllerWithContents:context:completionHandler:]


QLZoomTransitionDriver : QLTransitionDriver
  // class methods
  +[QLZoomTransitionDriver cropView:toAvoidNavigationOffset:presenting:animationDuration:]

  // instance methods
  -[QLZoomTransitionDriver .cxx_destruct]
  -[QLZoomTransitionDriver tearDown]
  -[QLZoomTransitionDriver animateTransition]
  -[QLZoomTransitionDriver animateFinishTransition]
  -[QLZoomTransitionDriver _performZoomTransition]


QLListCell : UITableViewCell /System/Library/Frameworks/WebKit.framework/WebKit
 @property  QLItem *item
 @property  NSString *folderName
 @property  long long fileDepthLevel
 @property  NSString *subtitleString
 @property  UIImage *thumbnail
 @property  unsigned long row

  // class methods
  +[QLListCell listCell]

  // instance methods
  -[QLListCell .cxx_destruct]
  -[QLListCell item]
  -[QLListCell setItem:]
  -[QLListCell prepareForReuse]
  -[QLListCell row]
  -[QLListCell awakeFromNib]
  -[QLListCell thumbnail]
  -[QLListCell setThumbnail:]
  -[QLListCell folderName]
  -[QLListCell setSubtitleString:]
  -[QLListCell subtitleString]
  -[QLListCell setRow:]
  -[QLListCell setFileDepthLevel:]
  -[QLListCell setFolderName:]
  -[QLListCell _folderImage]
  -[QLListCell fileDepthLevel]


QLImageData : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[QLImageData dealloc]
  -[QLImageData count]
  -[QLImageData type]
  -[QLImageData size]
  -[QLImageData orientation]
  -[QLImageData imageAtIndex:]
  -[QLImageData initWithImageSource:]
  -[QLImageData durations]


QLPreviewContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  <QLItemThumbnailGeneratorProtocolInternal> *thumbnailGenerator
 @property  NSString *previewTitle
 @property  NSString *contentType
 @property  BOOL canBeEdited
 @property  BOOL canBeShared
 @property  unsigned long editedFileBehavior
 @property  unsigned long previewItemType
 @property  UIColor *backgroundColor
 @property  NSNumber *itemSize
 @property  long long processIdentifier
 @property  QLItem *item
 @property  NSDictionary *clientPreviewOptions
 @property  NSString *password

  // class methods
  +[QLPreviewContext supportsSecureCoding]

  // instance methods
  -[QLPreviewContext isEqual:]
  -[QLPreviewContext encodeWithCoder:]
  -[QLPreviewContext initWithCoder:]
  -[QLPreviewContext password]
  -[QLPreviewContext .cxx_destruct]
  -[QLPreviewContext processIdentifier]
  -[QLPreviewContext item]
  -[QLPreviewContext setItem:]
  -[QLPreviewContext setPassword:]
  -[QLPreviewContext contentType]
  -[QLPreviewContext setContentType:]
  -[QLPreviewContext backgroundColor]
  -[QLPreviewContext setBackgroundColor:]
  -[QLPreviewContext canBeEdited]
  -[QLPreviewContext itemSize]
  -[QLPreviewContext setItemSize:]
  -[QLPreviewContext setProcessIdentifier:]
  -[QLPreviewContext canBeShared]
  -[QLPreviewContext previewItemType]
  -[QLPreviewContext previewTitle]
  -[QLPreviewContext thumbnailGenerator]
  -[QLPreviewContext setCanBeEdited:]
  -[QLPreviewContext setEditedFileBehavior:]
  -[QLPreviewContext setCanBeShared:]
  -[QLPreviewContext editedFileBehavior]
  -[QLPreviewContext clientPreviewOptions]
  -[QLPreviewContext setThumbnailGenerator:]
  -[QLPreviewContext setPreviewTitle:]
  -[QLPreviewContext setPreviewItemType:]
  -[QLPreviewContext setClientPreviewOptions:]


QLVideoScrubberView : UIView /System/Library/Frameworks/WebKit.framework/WebKit <PHVideoScrubberViewInteractionDelegate>
 @property  BOOL touchGestureIsActive
 @property  BOOL userInteractingWithScrubber
 @property  UIScrollView *scrollView
 @property  PHVideoScrubberView *photosScrubber
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLVideoScrubberView .cxx_destruct]
  -[QLVideoScrubberView layoutSubviews]
  -[QLVideoScrubberView scrollView]
  -[QLVideoScrubberView isUserInteractingWithScrubber]
  -[QLVideoScrubberView photosScrubber]
  -[QLVideoScrubberView _updateUserInteractingWithScrubberIfNeeded]
  -[QLVideoScrubberView setUserInteractingWithScrubber:]
  -[QLVideoScrubberView didBeginTouchingVideoScrubberView:]
  -[QLVideoScrubberView didEndTouchingVideoScrubberView:]
  -[QLVideoScrubberView videoScrubberView:willBeginDraggingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:didEndDraggingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:willBeginDeceleratingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:didEndDeceleratingInScrollView:]
  -[QLVideoScrubberView touchGestureIsActive]
  -[QLVideoScrubberView setTouchGestureIsActive:]


QLPUAnimationGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  QLPUAnimationGroup *superAnimationGroup
 @property  NSMutableArray *subAnimationGroups
 @property  @? completionHandler
 @property  BOOL readyToComplete
 @property  double elapsedTime
 @property  BOOL paused

  // class methods
  +[QLPUAnimationGroup pushAnimationGroup:]
  +[QLPUAnimationGroup popAnimationGroup:]
  +[QLPUAnimationGroup animationGroupWithAnimations:]

  // instance methods
  -[QLPUAnimationGroup dealloc]
  -[QLPUAnimationGroup .cxx_destruct]
  -[QLPUAnimationGroup isPaused]
  -[QLPUAnimationGroup complete]
  -[QLPUAnimationGroup completionHandler]
  -[QLPUAnimationGroup setCompletionHandler:]
  -[QLPUAnimationGroup setPaused:]
  -[QLPUAnimationGroup elapsedTime]
  -[QLPUAnimationGroup setElapsedTime:]
  -[QLPUAnimationGroup finishImmediately]
  -[QLPUAnimationGroup subAnimationGroups]
  -[QLPUAnimationGroup isReadyToComplete]
  -[QLPUAnimationGroup completeIfNeeded]
  -[QLPUAnimationGroup addSubAnimationGroup:]
  -[QLPUAnimationGroup superAnimationGroup]
  -[QLPUAnimationGroup setSuperAnimationGroup:]
  -[QLPUAnimationGroup pauseAnimations]
  -[QLPUAnimationGroup resumeAnimations]


QLAnimatedImage : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[QLAnimatedImage dealloc]
  -[QLAnimatedImage .cxx_destruct]
  -[QLAnimatedImage duration]
  -[QLAnimatedImage frameCount]
  -[QLAnimatedImage initWithImageSource:]
  -[QLAnimatedImage generateDurations]
  -[QLAnimatedImage time:belongsToIndex:]
  -[QLAnimatedImage indexForTime:]
  -[QLAnimatedImage frameAtTime:]


QLFileIconImageView : UIImageView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  double cornerRadius

  // instance methods
  -[QLFileIconImageView initWithCoder:]
  -[QLFileIconImageView setCornerRadius:]
  -[QLFileIconImageView cornerRadius]


QLDetailItemViewControllerState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *actionButtonTitle
 @property  UIView *actionButtonView
 @property  BOOL informationVisible

  // class methods
  +[QLDetailItemViewControllerState detailItemViewControllerStateWithActionButtonTitle:actionButtonView:informationVisible:]

  // instance methods
  -[QLDetailItemViewControllerState .cxx_destruct]
  -[QLDetailItemViewControllerState setActionButtonTitle:]
  -[QLDetailItemViewControllerState setActionButtonView:]
  -[QLDetailItemViewControllerState setInformationVisible:]
  -[QLDetailItemViewControllerState actionButtonTitle]
  -[QLDetailItemViewControllerState actionButtonView]
  -[QLDetailItemViewControllerState isInformationVisible]


QLDetailItemViewController : QLItemViewController
 @property  QLDetailItemViewControllerState *state
 @property  NSArray *information
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} fileThumbnailFrame

  // instance methods
  -[QLDetailItemViewController .cxx_destruct]
  -[QLDetailItemViewController state]
  -[QLDetailItemViewController setState:]
  -[QLDetailItemViewController initWithNibName:bundle:]
  -[QLDetailItemViewController viewDidLoad]
  -[QLDetailItemViewController performAction]
  -[QLDetailItemViewController setState:animated:]
  -[QLDetailItemViewController setInformation:]
  -[QLDetailItemViewController information]
  -[QLDetailItemViewController canSwipeToDismiss]
  -[QLDetailItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDetailItemViewController canPinchToDismiss]
  -[QLDetailItemViewController canEnterFullScreen]
  -[QLDetailItemViewController setAppearance:animated:]
  -[QLDetailItemViewController setFileThumbnailFrame:]
  -[QLDetailItemViewController _setActionButtonView:animated:actionButtonLabel:informationVisible:]
  -[QLDetailItemViewController _updateInformation]
  -[QLDetailItemViewController fileThumbnailFrame]


QLPasswordItemViewController : QLItemViewController <UIDocumentPasswordViewDelegate>
  // instance methods
  -[QLPasswordItemViewController invalidate]
  -[QLPasswordItemViewController .cxx_destruct]
  -[QLPasswordItemViewController loadView]
  -[QLPasswordItemViewController userDidEnterPassword:forPasswordView:]
  -[QLPasswordItemViewController canSwipeToDismiss]
  -[QLPasswordItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLPasswordItemViewController canPinchToDismiss]
  -[QLPasswordItemViewController canEnterFullScreen]
  -[QLPasswordItemViewController previewDidAppear:]
  -[QLPasswordItemViewController previewWillDisappear:]
  -[QLPasswordItemViewController passwordView]


QLImageItemViewController : QLScrollableContentItemViewController <QLAnimationTimerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLImageItemViewController .cxx_destruct]
  -[QLImageItemViewController imageSize]
  -[QLImageItemViewController preferredWhitePointAdaptivityStyle]
  -[QLImageItemViewController draggableView]
  -[QLImageItemViewController animationTimerFired:]
  -[QLImageItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLImageItemViewController setAppearance:animated:]
  -[QLImageItemViewController previewDidAppear:]
  -[QLImageItemViewController previewDidDisappear:]


QLMediaItemBaseViewController : QLScrollableContentItemViewController <QLToolbarButtonAction>
 @property  NSError *error
 @property  double mediaDuration
 @property  double elapsedTime
 @property  double remainingTime
 @property  AVPlayer *player
 @property  UIView *playerView
 @property  AVPlayerLayer *playerLayer
 @property  double currentPlaybackHeadPosition
 @property  long long playingStatus
 @property  BOOL playable
 @property  BOOL endOfMediaReached
 @property  BOOL visualTracksEnabled
 @property  double mediaVolume
 @property  AVAsset *mediaAsset
 @property  BOOL isFullScreen
 @property  BOOL isVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMediaItemBaseViewController dealloc]
  -[QLMediaItemBaseViewController .cxx_destruct]
  -[QLMediaItemBaseViewController error]
  -[QLMediaItemBaseViewController pause]
  -[QLMediaItemBaseViewController stop]
  -[QLMediaItemBaseViewController setError:]
  -[QLMediaItemBaseViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMediaItemBaseViewController isVisible]
  -[QLMediaItemBaseViewController play]
  -[QLMediaItemBaseViewController imageSize]
  -[QLMediaItemBaseViewController elapsedTime]
  -[QLMediaItemBaseViewController remainingTime]
  -[QLMediaItemBaseViewController setRemainingTime:]
  -[QLMediaItemBaseViewController isFullScreen]
  -[QLMediaItemBaseViewController player]
  -[QLMediaItemBaseViewController setPlayer:]
  -[QLMediaItemBaseViewController playerLayer]
  -[QLMediaItemBaseViewController setMediaVolume:]
  -[QLMediaItemBaseViewController mediaVolume]
  -[QLMediaItemBaseViewController setElapsedTime:]
  -[QLMediaItemBaseViewController togglePlayback]
  -[QLMediaItemBaseViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMediaItemBaseViewController hostApplicationDidEnterBackground:]
  -[QLMediaItemBaseViewController hostApplicationDidBecomeActive]
  -[QLMediaItemBaseViewController setAppearance:animated:]
  -[QLMediaItemBaseViewController previewDidAppear:]
  -[QLMediaItemBaseViewController previewDidDisappear:]
  -[QLMediaItemBaseViewController previewBecameFullScreen:animated:]
  -[QLMediaItemBaseViewController previewIsAppearingWithProgress:]
  -[QLMediaItemBaseViewController toolbarButtonsForTraitCollection:]
  -[QLMediaItemBaseViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLMediaItemBaseViewController playable]
  -[QLMediaItemBaseViewController setupPlayerWithMediaAsset:]
  -[QLMediaItemBaseViewController didChangePlayingStatus]
  -[QLMediaItemBaseViewController mediaDuration]
  -[QLMediaItemBaseViewController playingStatus]
  -[QLMediaItemBaseViewController _assetIsDecodable:]
  -[QLMediaItemBaseViewController setupPlayerViewWithPlayer:]
  -[QLMediaItemBaseViewController playerItemDidReachEnd:]
  -[QLMediaItemBaseViewController observePlayingTime:]
  -[QLMediaItemBaseViewController _updatePlayingStatus]
  -[QLMediaItemBaseViewController _updateExternalPlayback]
  -[QLMediaItemBaseViewController didReachEndOfMedia]
  -[QLMediaItemBaseViewController shouldDisplayPlayButtonInNavigationBar]
  -[QLMediaItemBaseViewController endOfMediaReached]
  -[QLMediaItemBaseViewController setCurrentPlaybackHeadPosition:]
  -[QLMediaItemBaseViewController resetToBeginning]
  -[QLMediaItemBaseViewController currentPlaybackHeadPosition]
  -[QLMediaItemBaseViewController playerView]
  -[QLMediaItemBaseViewController visualTracksEnabled]
  -[QLMediaItemBaseViewController mediaAsset]
  -[QLMediaItemBaseViewController setMediaDuration:]


_QLMovieScrubberViewContainer : UIView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[_QLMovieScrubberViewContainer init]
  -[_QLMovieScrubberViewContainer intrinsicContentSize]


QLMovieItemViewController : QLMediaItemViewController <AVPictureInPictureControllerDelegate, AVEditBehaviorDelegate>
 @property  AVPlayerViewController *playerViewController
 @property  QLOverlayPlayButton *playButton
 @property  QLVideoScrubberView *scrubber
 @property  NSLayoutConstraint *bottomScrubberConstraint
 @property  UIView *scrubberContainer
 @property  UIScrollView *scrubberContainerScrollView
 @property  double scrubberVerticalOffset
 @property  PHPlaceholderView *airPlayPlaceholderView
 @property  UIView *playerViewContainer
 @property  UIScrollView *playerViewControllerScrollView
 @property  AVEditBehavior *editBehavior
 @property  BOOL isEditing
 @property  QLMovieEdits *edits
 @property  QLMovieEdits *editsSinceLastSave
 @property  BOOL isSavingEditsBeforeDismissing
 @property  BOOL assetCanBeRotated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMovieItemViewController init]
  -[QLMovieItemViewController dealloc]
  -[QLMovieItemViewController .cxx_destruct]
  -[QLMovieItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMovieItemViewController play]
  -[QLMovieItemViewController accessoryView]
  -[QLMovieItemViewController isEditing]
  -[QLMovieItemViewController preferredWhitePointAdaptivityStyle]
  -[QLMovieItemViewController scrollView]
  -[QLMovieItemViewController transitioningView]
  -[QLMovieItemViewController editButtonTapped]
  -[QLMovieItemViewController playerViewController]
  -[QLMovieItemViewController setPlayerViewController:]
  -[QLMovieItemViewController playButton]
  -[QLMovieItemViewController setPlayButton:]
  -[QLMovieItemViewController editBehaviorAlertActionsForDoneButtonTap:]
  -[QLMovieItemViewController editBehaviorDidCancel:]
  -[QLMovieItemViewController scrubber]
  -[QLMovieItemViewController _enterEditMode]
  -[QLMovieItemViewController canSwipeToDismiss]
  -[QLMovieItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMovieItemViewController canPinchToDismiss]
  -[QLMovieItemViewController canEnterFullScreen]
  -[QLMovieItemViewController transitionDidFinish:didComplete:]
  -[QLMovieItemViewController transitionDidStart:]
  -[QLMovieItemViewController previewDidAppear:]
  -[QLMovieItemViewController previewDidDisappear:]
  -[QLMovieItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLMovieItemViewController performFirstTimeAppearanceActions:]
  -[QLMovieItemViewController registeredKeyCommands]
  -[QLMovieItemViewController toolbarButtonsForTraitCollection:]
  -[QLMovieItemViewController handlePerformedKeyCommandIfNeeded:]
  -[QLMovieItemViewController canToggleFullScreen]
  -[QLMovieItemViewController parallaxView]
  -[QLMovieItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLMovieItemViewController savePreviewEditedCopyWithCompletionHandler:]
  -[QLMovieItemViewController editProgressIndicatorMessage]
  -[QLMovieItemViewController updateInterfaceForSavingEdits]
  -[QLMovieItemViewController updateInterfaceAfterSavingEdits]
  -[QLMovieItemViewController didChangePlayingStatus]
  -[QLMovieItemViewController setPlayControlsHidden:animated:]
  -[QLMovieItemViewController timeLabelScrollView]
  -[QLMovieItemViewController scrubberContainer]
  -[QLMovieItemViewController setScrubberContainer:]
  -[QLMovieItemViewController scrubberVerticalOffset]
  -[QLMovieItemViewController setScrubberVerticalOffset:]
  -[QLMovieItemViewController setupPlayerViewWithPlayer:]
  -[QLMovieItemViewController shouldDisplayPlayButtonInNavigationBar]
  -[QLMovieItemViewController _setupEditBehavior]
  -[QLMovieItemViewController setScrubber:]
  -[QLMovieItemViewController _updatePlaceHolderView]
  -[QLMovieItemViewController addScrubberIfNeededWithDeferral]
  -[QLMovieItemViewController scrollViewInView:]
  -[QLMovieItemViewController _videoIsPlaying]
  -[QLMovieItemViewController _updatePlayButtonVisibility]
  -[QLMovieItemViewController _enterEditModeIfPossible]
  -[QLMovieItemViewController shouldAllowEditingContents]
  -[QLMovieItemViewController _updateEditsTrimmingValuesWithTrimStartTime:trimEndTime:]
  -[QLMovieItemViewController _updateEditMode]
  -[QLMovieItemViewController _showFailedToSaveChangesAlertWithError:]
  -[QLMovieItemViewController _saveMovieIfEdited:withCompletionHandler:]
  -[QLMovieItemViewController _updateInterfaceAfterExitingEditMode]
  -[QLMovieItemViewController _resetTrimmingValues]
  -[QLMovieItemViewController _rotateIfPossible]
  -[QLMovieItemViewController _rotateMovieRight]
  -[QLMovieItemViewController _saveMovieIfEditedWithEditedCopy:shouldDismissAfterSaving:completionHandler:]
  -[QLMovieItemViewController _exitEditMode:]
  -[QLMovieItemViewController _rotateRightButtonTapped]
  -[QLMovieItemViewController airPlayPlaceholderView]
  -[QLMovieItemViewController bottomScrubberConstraint]
  -[QLMovieItemViewController setBottomScrubberConstraint:]
  -[QLMovieItemViewController scrubberContainerScrollView]
  -[QLMovieItemViewController setScrubberContainerScrollView:]
  -[QLMovieItemViewController playerViewContainer]
  -[QLMovieItemViewController setPlayerViewContainer:]
  -[QLMovieItemViewController playerViewControllerScrollView]
  -[QLMovieItemViewController setPlayerViewControllerScrollView:]
  -[QLMovieItemViewController editBehavior]
  -[QLMovieItemViewController setEditBehavior:]
  -[QLMovieItemViewController setIsEditing:]
  -[QLMovieItemViewController edits]
  -[QLMovieItemViewController setEdits:]
  -[QLMovieItemViewController editsSinceLastSave]
  -[QLMovieItemViewController setEditsSinceLastSave:]
  -[QLMovieItemViewController isSavingEditsBeforeDismissing]
  -[QLMovieItemViewController setIsSavingEditsBeforeDismissing:]
  -[QLMovieItemViewController assetCanBeRotated]
  -[QLMovieItemViewController setAssetCanBeRotated:]


QLBarButtonItem : UIBarButtonItem /System/Library/Frameworks/WebKit.framework/WebKit
 @property  unsigned long QLType

  // instance methods
  -[QLBarButtonItem isEqual:]
  -[QLBarButtonItem QLType]
  -[QLBarButtonItem setQLType:]


QLCustomURLSharingProxyDelegate : NSObject /usr/lib/libSystem.B.dylib <UIDocumentInteractionControllerDelegate>
 @property  <UIDocumentInteractionControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLCustomURLSharingProxyDelegate delegate]
  -[QLCustomURLSharingProxyDelegate setDelegate:]
  -[QLCustomURLSharingProxyDelegate .cxx_destruct]
  -[QLCustomURLSharingProxyDelegate initWithDelegate:]
  -[QLCustomURLSharingProxyDelegate documentInteractionControllerDidDismissOptionsMenu:]


QLRemotePreviewHostContext : NSExtensionContext /usr/lib/libobjc.A.dylib <QLRemotePreviewService>
 @property  QLRemoteItemViewController *remoteItemViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLRemotePreviewHostContext _extensionAuxiliaryHostProtocol]
  +[QLRemotePreviewHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLRemotePreviewHostContext .cxx_destruct]
  -[QLRemotePreviewHostContext protocolService]
  -[QLRemotePreviewHostContext loadPreviewControllerWithContents:context:completionHandler:]
  -[QLRemotePreviewHostContext invalidateService]
  -[QLRemotePreviewHostContext setAppearance:animated:]
  -[QLRemotePreviewHostContext previewWillAppear:]
  -[QLRemotePreviewHostContext previewDidAppear:]
  -[QLRemotePreviewHostContext previewWillDisappear:]
  -[QLRemotePreviewHostContext previewDidDisappear:]
  -[QLRemotePreviewHostContext setHostViewControllerProxy:]
  -[QLRemotePreviewHostContext protocolServiceWithErrorHandler:]
  -[QLRemotePreviewHostContext previewControllerWantsFullScreen:]
  -[QLRemotePreviewHostContext previewControllerDidUpdateTitle:]
  -[QLRemotePreviewHostContext previewControllerDidUpdatePreferredContentSize:]
  -[QLRemotePreviewHostContext getPrinterProxyWithCompletionHandler:]
  -[QLRemotePreviewHostContext remoteItemViewController]
  -[QLRemotePreviewHostContext setRemoteItemViewController:]


QLRemotePreviewServiceContext : NSExtensionContext /usr/lib/libobjc.A.dylib <QLRemotePreviewHost>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLRemotePreviewServiceContext _extensionAuxiliaryHostProtocol]
  +[QLRemotePreviewServiceContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLRemotePreviewServiceContext dealloc]
  -[QLRemotePreviewServiceContext .cxx_destruct]
  -[QLRemotePreviewServiceContext observeValueForKeyPath:ofObject:change:context:]
  -[QLRemotePreviewServiceContext previewViewController]
  -[QLRemotePreviewServiceContext loadPreviewControllerWithContents:context:completionHandler:]
  -[QLRemotePreviewServiceContext invalidateService]
  -[QLRemotePreviewServiceContext setAppearance:animated:]
  -[QLRemotePreviewServiceContext previewWillAppear:]
  -[QLRemotePreviewServiceContext previewDidAppear:]
  -[QLRemotePreviewServiceContext previewWillDisappear:]
  -[QLRemotePreviewServiceContext previewDidDisappear:]
  -[QLRemotePreviewServiceContext setHostViewControllerProxy:]
  -[QLRemotePreviewServiceContext previewControllerWantsFullScreen:]
  -[QLRemotePreviewServiceContext previewControllerDidUpdateTitle:]
  -[QLRemotePreviewServiceContext previewControllerDidUpdatePreferredContentSize:]
  -[QLRemotePreviewServiceContext getPrinterProxyWithCompletionHandler:]
  -[QLRemotePreviewServiceContext protocolHost]
  -[QLRemotePreviewServiceContext _startObservingPreviewControllerAttributeChanges]
  -[QLRemotePreviewServiceContext _stopObservingPreviewControllerAttributeChanges]


QLRemotePreviewHostViewController : _UIRemoteViewController /System/Library/Frameworks/WebKit.framework/WebKit
 @property  QLRemoteItemViewController *remoteItemViewController
 @property  NSExtension *extension
 @property  id request

  // instance methods
  -[QLRemotePreviewHostViewController .cxx_destruct]
  -[QLRemotePreviewHostViewController setRequest:]
  -[QLRemotePreviewHostViewController request]
  -[QLRemotePreviewHostViewController viewServiceDidTerminateWithError:]
  -[QLRemotePreviewHostViewController setExtension:]
  -[QLRemotePreviewHostViewController extension]
  -[QLRemotePreviewHostViewController remoteItemViewController]
  -[QLRemotePreviewHostViewController setRemoteItemViewController:]


QLCustomItemViewControllerHostProxy : NSObject /usr/lib/libSystem.B.dylib <QLCustomItemViewControllerHost>
 @property  <QLCustomItemViewControllerHost> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLCustomItemViewControllerHostProxy delegate]
  -[QLCustomItemViewControllerHostProxy setDelegate:]
  -[QLCustomItemViewControllerHostProxy .cxx_destruct]
  -[QLCustomItemViewControllerHostProxy setFullScreen:]
  -[QLCustomItemViewControllerHostProxy dismissQuickLook]
  -[QLCustomItemViewControllerHostProxy presentShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLCustomItemViewControllerHostProxy forwardMessageToHostOfCustomViewController:completionHandler:]


QLRemoteItemViewController : QLItemViewController <QLPrintingProtocol, QLCustomItemViewControllerHost, QLRemotePopoverTracker>
 @property  QLRemotePreviewHostViewController *remoteViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLRemoteItemViewController init]
  -[QLRemoteItemViewController dealloc]
  -[QLRemoteItemViewController .cxx_destruct]
  -[QLRemoteItemViewController remoteViewController]
  -[QLRemoteItemViewController viewServiceDidTerminateWithError:]
  -[QLRemoteItemViewController printer]
  -[QLRemoteItemViewController setRemoteViewController:]
  -[QLRemoteItemViewController setFullScreen:]
  -[QLRemoteItemViewController canSwipeToDismiss]
  -[QLRemoteItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLRemoteItemViewController canPinchToDismiss]
  -[QLRemoteItemViewController canEnterFullScreen]
  -[QLRemoteItemViewController fullscreenBackgroundColor]
  -[QLRemoteItemViewController dismissQuickLook]
  -[QLRemoteItemViewController setAppearance:animated:]
  -[QLRemoteItemViewController canShowNavBar]
  -[QLRemoteItemViewController presenterShouldHandleLoadingView:readyToDisplay:]
  -[QLRemoteItemViewController preloadViewControllerForContext:]
  -[QLRemoteItemViewController previewWillAppear:]
  -[QLRemoteItemViewController previewDidAppear:]
  -[QLRemoteItemViewController previewWillDisappear:]
  -[QLRemoteItemViewController previewDidDisappear:]
  -[QLRemoteItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLRemoteItemViewController prepareForDrawingPages:ofSize:]
  -[QLRemoteItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLRemoteItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLRemoteItemViewController canShowToolBar]
  -[QLRemoteItemViewController getFrameWithCompletionBlock:]
  -[QLRemoteItemViewController presentShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLRemoteItemViewController forwardMessageToHostOfCustomViewController:completionHandler:]
  -[QLRemoteItemViewController previewControllerWantsFullScreen:]
  -[QLRemoteItemViewController previewControllerDidUpdateTitle:]
  -[QLRemoteItemViewController previewControllerDidUpdatePreferredContentSize:]
  -[QLRemoteItemViewController _loadRemoteViewControllerForContext:]
  -[QLRemoteItemViewController _registerLoadingHandler:]
  -[QLRemoteItemViewController _performSetUpWithRemoteViewController:extension:request:hostContext:]
  -[QLRemoteItemViewController _performLoadHandlerIfNeeded]


QLAppearance : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double topInset
 @property  double bottomInset
 @property  unsigned long presentationMode
 @property  {UIEdgeInsets=dddd} peripheryInsets

  // class methods
  +[QLAppearance supportsSecureCoding]

  // instance methods
  -[QLAppearance encodeWithCoder:]
  -[QLAppearance initWithCoder:]
  -[QLAppearance topInset]
  -[QLAppearance peripheryInsets]
  -[QLAppearance bottomInset]
  -[QLAppearance presentationMode]
  -[QLAppearance initWithTopInset:bottomInset:presentationMode:peripheryInsets:]


QLBasePreviewParts : QLPreviewParts
  // class methods
  +[QLBasePreviewParts canConvertDocumentType:]
  +[QLBasePreviewParts dataCallbackForUTI:andSize:]
  +[QLBasePreviewParts isBundleURL:]
  +[QLBasePreviewParts urlCallbackForUTI:]

  // instance methods
  -[QLBasePreviewParts computePreview]


QLThumbnailView : UIView /System/Library/Frameworks/WebKit.framework/WebKit
 @property  UIImage *image
 @property  long long pageNumber
 @property  BOOL alwaysVisible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unselectedFrame

  // instance methods
  -[QLThumbnailView .cxx_destruct]
  -[QLThumbnailView image]
  -[QLThumbnailView setImage:]
  -[QLThumbnailView setFrame:]
  -[QLThumbnailView initWithFrame:]
  -[QLThumbnailView drawRect:]
  -[QLThumbnailView pageNumber]
  -[QLThumbnailView setPageNumber:]
  -[QLThumbnailView setAlwaysVisible:]
  -[QLThumbnailView setUnselectedFrame:]
  -[QLThumbnailView alwaysVisible]
  -[QLThumbnailView unselectedFrame]


QLMediaItemViewController : QLMediaItemBaseViewController <QLMediaScrubberGestureDelegate, UIGestureRecognizerDelegate>
 @property  QLMediaScrubberGesture *scrubGesture
 @property  UITapGestureRecognizer *tapToPlayGesture
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMediaItemViewController dealloc]
  -[QLMediaItemViewController .cxx_destruct]
  -[QLMediaItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMediaItemViewController stringFromTimeInterval:]
  -[QLMediaItemViewController gestureRecognizerShouldBegin:]
  -[QLMediaItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMediaItemViewController hostApplicationDidEnterBackground:]
  -[QLMediaItemViewController setAppearance:animated:]
  -[QLMediaItemViewController transitionDidFinish:didComplete:]
  -[QLMediaItemViewController previewDidAppear:]
  -[QLMediaItemViewController previewWillDisappear:]
  -[QLMediaItemViewController previewDidDisappear:]
  -[QLMediaItemViewController previewBecameFullScreen:animated:]
  -[QLMediaItemViewController registeredKeyCommands]
  -[QLMediaItemViewController previewIsAppearingWithProgress:]
  -[QLMediaItemViewController handlePerformedKeyCommandIfNeeded:]
  -[QLMediaItemViewController showTimeLabelIfNeeded]
  -[QLMediaItemViewController hideTimeLabelAfterDelay]
  -[QLMediaItemViewController timeLabelScrollView]
  -[QLMediaItemViewController observePlayingTime:]
  -[QLMediaItemViewController scrubGesture]
  -[QLMediaItemViewController tapToPlayGestureChanged:]
  -[QLMediaItemViewController _registerForCommandCenterHandlers]
  -[QLMediaItemViewController _updateCommandCenterPlayingInfoWithCurrentPlaybackTimeInformation]
  -[QLMediaItemViewController removeTimeLabel]
  -[QLMediaItemViewController _unregisterForCommandCenterHandlers]
  -[QLMediaItemViewController hideTimeLabelAnimated:]
  -[QLMediaItemViewController setTimeLabelNeedsUpdate]
  -[QLMediaItemViewController labelTextWithFormat:elapsedInterval:remainingInterval:]
  -[QLMediaItemViewController showTimeLabel]
  -[QLMediaItemViewController setUpTimeLabelIfNeeded]
  -[QLMediaItemViewController hideTimeLabel]
  -[QLMediaItemViewController userTappedPlayInControlCenter:]
  -[QLMediaItemViewController userTappedPauseInControlCenter:]
  -[QLMediaItemViewController userScrubbedInControlCenter:]
  -[QLMediaItemViewController _playingInfoWithPlaybackDuration:elapsedTime:]
  -[QLMediaItemViewController scrubberDidStartScrubbing:]
  -[QLMediaItemViewController scrubber:didChangeValue:]
  -[QLMediaItemViewController scrubberDidEndScrubbing:]
  -[QLMediaItemViewController setScrubGesture:]
  -[QLMediaItemViewController tapToPlayGesture]
  -[QLMediaItemViewController setTapToPlayGesture:]


QLDownloadingItemViewController : QLDetailItemViewController
 @property  BOOL downloaded
 @property  QLRoundProgressView *progressView
 @property  <QLDownloadingItemViewControllerDelegate> *downloadingDelegate
 @property  BOOL showsLoadingPreviewSpinner

  // instance methods
  -[QLDownloadingItemViewController .cxx_destruct]
  -[QLDownloadingItemViewController viewDidLoad]
  -[QLDownloadingItemViewController performAction]
  -[QLDownloadingItemViewController downloaded]
  -[QLDownloadingItemViewController setDownloaded:]
  -[QLDownloadingItemViewController progressView]
  -[QLDownloadingItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDownloadingItemViewController setAppearance:animated:]
  -[QLDownloadingItemViewController setShowsLoadingPreviewSpinner:]
  -[QLDownloadingItemViewController setDownloadingDelegate:]
  -[QLDownloadingItemViewController previewDidAppear:]
  -[QLDownloadingItemViewController previewDidDisappear:]
  -[QLDownloadingItemViewController _startDownload:]
  -[QLDownloadingItemViewController shouldAutoDownloadInNetworkState:downloadSize:]
  -[QLDownloadingItemViewController _updateFileSizeWithProgress:animated:]
  -[QLDownloadingItemViewController _toggleDownload:]
  -[QLDownloadingItemViewController _stopDownload:]
  -[QLDownloadingItemViewController _startDownloadOperation]
  -[QLDownloadingItemViewController _setDownloading:animated:]
  -[QLDownloadingItemViewController _presentConnectivityAlert]
  -[QLDownloadingItemViewController downloadingDelegate]
  -[QLDownloadingItemViewController showsLoadingPreviewSpinner]


QLSingleItemThumbnailGenerator : NSObject /usr/lib/libSystem.B.dylib <QLItemThumbnailGeneratorProtocolInternal, NSSecureCoding>
 @property  QLItemThumbnailGenerator *thumbnailGenerator
 @property  QLItem *item
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLSingleItemThumbnailGenerator supportsSecureCoding]

  // instance methods
  -[QLSingleItemThumbnailGenerator encodeWithCoder:]
  -[QLSingleItemThumbnailGenerator initWithCoder:]
  -[QLSingleItemThumbnailGenerator .cxx_destruct]
  -[QLSingleItemThumbnailGenerator item]
  -[QLSingleItemThumbnailGenerator setItem:]
  -[QLSingleItemThumbnailGenerator initWithItem:]
  -[QLSingleItemThumbnailGenerator thumbnailGenerator]
  -[QLSingleItemThumbnailGenerator generateThumbnailWithSize:completionBlock:]
  -[QLSingleItemThumbnailGenerator setThumbnailGenerator:]
  -[QLSingleItemThumbnailGenerator _provideThumbnailForUbiquitousURLWithSize:completionBlock:]
  -[QLSingleItemThumbnailGenerator _handleThumbnailGenerationFinishedWithThumbnail:size:clientCompletionBlock:]
  -[QLSingleItemThumbnailGenerator genericIconWithSize:]


QLOverlayPlayButton : UIView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[QLOverlayPlayButton init]
  -[QLOverlayPlayButton .cxx_destruct]
  -[QLOverlayPlayButton intrinsicContentSize]
  -[QLOverlayPlayButton initWithFrame:]
  -[QLOverlayPlayButton setTarget:action:]
  -[QLOverlayPlayButton _playButtonTapped:]
  -[QLOverlayPlayButton _playButtonActivate:]
  -[QLOverlayPlayButton _playButtonDeactivate:]


QLMediaScrubberGesture : UIPanGestureRecognizer /System/Library/Frameworks/WebKit.framework/WebKit
 @property  <QLMediaScrubberGestureDelegate> *scrubberDelegate
 @property  float value
 @property  float minimumValue
 @property  float maximumValue

  // instance methods
  -[QLMediaScrubberGesture .cxx_destruct]
  -[QLMediaScrubberGesture value]
  -[QLMediaScrubberGesture setValue:]
  -[QLMediaScrubberGesture setMinimumValue:]
  -[QLMediaScrubberGesture setMaximumValue:]
  -[QLMediaScrubberGesture minimumValue]
  -[QLMediaScrubberGesture maximumValue]
  -[QLMediaScrubberGesture initWithPlayer:]
  -[QLMediaScrubberGesture nominalFrameRate]
  -[QLMediaScrubberGesture clampedEstimatedFrameRate]
  -[QLMediaScrubberGesture setScrubberDelegate:]
  -[QLMediaScrubberGesture scrubbGestureDidChange:]
  -[QLMediaScrubberGesture scrubberDelegate]


QLItemURLThumbnailGenerator : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completionHandler

  // instance methods
  -[QLItemURLThumbnailGenerator .cxx_destruct]
  -[QLItemURLThumbnailGenerator completionHandler]
  -[QLItemURLThumbnailGenerator setCompletionHandler:]
  -[QLItemURLThumbnailGenerator _executeCompletionHandlerWithImage:]
  -[QLItemURLThumbnailGenerator generateThumbnailWithURL:size:scale:completionBlock:]


QLAsynchronousBlockOperation : QLAsynchronousOperation /usr/lib/libMobileGestalt.dylib
 @property  @? block

  // instance methods
  -[QLAsynchronousBlockOperation .cxx_destruct]
  -[QLAsynchronousBlockOperation main]
  -[QLAsynchronousBlockOperation block]
  -[QLAsynchronousBlockOperation initWithBlock:]
  -[QLAsynchronousBlockOperation setBlock:]


QLSlideTransitionDriver : QLTransitionDriver
  // instance methods
  -[QLSlideTransitionDriver tearDown]
  -[QLSlideTransitionDriver animateTransition]
  -[QLSlideTransitionDriver animateFinishTransition]
  -[QLSlideTransitionDriver _animateTransitionUserSlideDismissal]
  -[QLSlideTransitionDriver _animateTransition]


QLToolbarUnderlyingButton : UIButton /System/Library/Frameworks/WebKit.framework/WebKit
 @property  NSString *identifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} selectedIndicatorBounds
 @property  BOOL offsetRoundedSelectedIndicator

  // instance methods
  -[QLToolbarUnderlyingButton .cxx_destruct]
  -[QLToolbarUnderlyingButton identifier]
  -[QLToolbarUnderlyingButton setIdentifier:]
  -[QLToolbarUnderlyingButton _selectedIndicatorBounds]
  -[QLToolbarUnderlyingButton selectedIndicatorBounds]
  -[QLToolbarUnderlyingButton setSelectedIndicatorBounds:]
  -[QLToolbarUnderlyingButton offsetRoundedSelectedIndicator]
  -[QLToolbarUnderlyingButton setOffsetRoundedSelectedIndicator:]


QLToolbarButtonItemRepresentation : UIBarButtonItem /System/Library/Frameworks/WebKit.framework/WebKit
 @property  NSString *identifier
 @property  unsigned long placement
 @property  BOOL disappearsOnTap
 @property  QLToolbarButton *originalButton
 @property  QLPreviewController *presentingViewController

  // instance methods
  -[QLToolbarButtonItemRepresentation isEqual:]
  -[QLToolbarButtonItemRepresentation .cxx_destruct]
  -[QLToolbarButtonItemRepresentation identifier]
  -[QLToolbarButtonItemRepresentation setIdentifier:]
  -[QLToolbarButtonItemRepresentation presentingViewController]
  -[QLToolbarButtonItemRepresentation placement]
  -[QLToolbarButtonItemRepresentation setPlacement:]
  -[QLToolbarButtonItemRepresentation setPresentingViewController:]
  -[QLToolbarButtonItemRepresentation setDisappearsOnTap:]
  -[QLToolbarButtonItemRepresentation disappearsOnTap]
  -[QLToolbarButtonItemRepresentation originalButton]
  -[QLToolbarButtonItemRepresentation setOriginalButton:]


QLToolbarButtonOption : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *title
 @property  long long style

  // class methods
  +[QLToolbarButtonOption supportsSecureCoding]

  // instance methods
  -[QLToolbarButtonOption isEqual:]
  -[QLToolbarButtonOption encodeWithCoder:]
  -[QLToolbarButtonOption initWithCoder:]
  -[QLToolbarButtonOption .cxx_destruct]
  -[QLToolbarButtonOption identifier]
  -[QLToolbarButtonOption initWithIdentifier:]
  -[QLToolbarButtonOption title]
  -[QLToolbarButtonOption setTitle:]
  -[QLToolbarButtonOption style]
  -[QLToolbarButtonOption setStyle:]


QLToolbarButton : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *identifier
 @property  UIImage *image
 @property  NSString *systemImageName
 @property  long long systemItem
 @property  NSString *title
 @property  NSString *accessibilityIdentifier
 @property  NSArray *options
 @property  unsigned long placement
 @property  BOOL forceToNavBar
 @property  BOOL selected
 @property  BOOL enabled
 @property  BOOL roundedSelectedIndicator
 @property  BOOL disappearsOnTap

  // class methods
  +[QLToolbarButton supportsSecureCoding]

  // instance methods
  -[QLToolbarButton init]
  -[QLToolbarButton isEqual:]
  -[QLToolbarButton options]
  -[QLToolbarButton enabled]
  -[QLToolbarButton setEnabled:]
  -[QLToolbarButton encodeWithCoder:]
  -[QLToolbarButton initWithCoder:]
  -[QLToolbarButton .cxx_destruct]
  -[QLToolbarButton identifier]
  -[QLToolbarButton initWithIdentifier:]
  -[QLToolbarButton title]
  -[QLToolbarButton setTitle:]
  -[QLToolbarButton setOptions:]
  -[QLToolbarButton image]
  -[QLToolbarButton setImage:]
  -[QLToolbarButton setAccessibilityIdentifier:]
  -[QLToolbarButton accessibilityIdentifier]
  -[QLToolbarButton systemItem]
  -[QLToolbarButton setSelected:]
  -[QLToolbarButton selected]
  -[QLToolbarButton placement]
  -[QLToolbarButton setPlacement:]
  -[QLToolbarButton handleLongPress:]
  -[QLToolbarButton systemImageName]
  -[QLToolbarButton setSystemItem:]
  -[QLToolbarButton setDisappearsOnTap:]
  -[QLToolbarButton setSystemImageName:]
  -[QLToolbarButton setForceToNavBar:]
  -[QLToolbarButton invalidateCurrentState]
  -[QLToolbarButton disappearsOnTap]
  -[QLToolbarButton forceToNavBar]
  -[QLToolbarButton barButtonWithTarget:action:maxSize:]
  -[QLToolbarButton roundedSelectedIndicator]
  -[QLToolbarButton setRoundedSelectedIndicator:]


QLPreviewCollection : UIViewController /System/Library/Frameworks/WebKit.framework/WebKit <QLTransitionControllerProtocol, QLPageViewControllerDataSource, QLPageViewControllerDelegate, QLPreviewItemViewControllerDelegate, UIGestureRecognizerDelegate, QLPreviewCollectionProtocol>
 @property  BOOL fullScreen
 @property  BOOL isEditing
 @property  BOOL isTransitioningPage
 @property  @? prepareForInvalidationCompletionHandler
 @property  UIPanGestureRecognizer *slideGesture
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  UIRotationGestureRecognizer *rotationGesture
 @property  QLSwipeDownTracker *swipeDownTracker
 @property  QLPinchRotationTracker *pinchRotationTracker
 @property  QLTransitionContext *transitionContext
 @property  <QLTransitionControllerProtocol> *transitionController
 @property  QLTransitionDriver *transitionDriver
 @property  NSString *hostApplicationBundleIdentifier
 @property  BOOL hasTriggeredInteractiveTransitionAnimation
 @property  QLPageViewController *pageViewController
 @property  <QLPreviewControllerStateProtocol> *stateManager
 @property  QLItemViewController *currentPreviewItemViewController
 @property  BOOL isAvailable
 @property  BOOL allowInteractiveTransitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewCollection previewCollectionUsingRemoteViewController:completionHandler:]
  +[QLPreviewCollection quickLookExtension]
  +[QLPreviewCollection remotePreviewCollectionWithCompletionHandler:]

  // instance methods
  -[QLPreviewCollection init]
  -[QLPreviewCollection .cxx_destruct]
  -[QLPreviewCollection isAvailable]
  -[QLPreviewCollection setIsAvailable:]
  -[QLPreviewCollection fullScreen]
  -[QLPreviewCollection loadView]
  -[QLPreviewCollection gestureRecognizerShouldBegin:]
  -[QLPreviewCollection gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLPreviewCollection gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[QLPreviewCollection gestureRecognizer:shouldReceiveTouch:]
  -[QLPreviewCollection viewWillAppear:]
  -[QLPreviewCollection _updatePreferredContentSize]
  -[QLPreviewCollection transitionContext]
  -[QLPreviewCollection viewDidAppear:]
  -[QLPreviewCollection viewDidDisappear:]
  -[QLPreviewCollection accessoryView]
  -[QLPreviewCollection isEditing]
  -[QLPreviewCollection setTransitionContext:]
  -[QLPreviewCollection _isBeingDismissed]
  -[QLPreviewCollection _isVisible]
  -[QLPreviewCollection setIsContentManaged:]
  -[QLPreviewCollection isRemote]
  -[QLPreviewCollection transitionInProgress]
  -[QLPreviewCollection setFullScreen:]
  -[QLPreviewCollection keyCommandWasPerformed:]
  -[QLPreviewCollection setTransitionController:]
  -[QLPreviewCollection transitionController]
  -[QLPreviewCollection gestureTracker]
  -[QLPreviewCollection stateManager]
  -[QLPreviewCollection setStateManager:]
  -[QLPreviewCollection setAllowInteractiveTransitions:]
  -[QLPreviewCollection saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollection hostApplicationDidEnterBackground:]
  -[QLPreviewCollection hostApplicationDidBecomeActive]
  -[QLPreviewCollection invalidateService]
  -[QLPreviewCollection preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollection notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollection setLoadingString:]
  -[QLPreviewCollection configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollection allowInteractiveTransitions]
  -[QLPreviewCollection hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollection prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollection toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollection keyCommandsWithCompletionHandler:]
  -[QLPreviewCollection tearDownTransition:]
  -[QLPreviewCollection setAppearance:animated:]
  -[QLPreviewCollection setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollection slideGesture]
  -[QLPreviewCollection setSlideGesture:]
  -[QLPreviewCollection pinchGesture]
  -[QLPreviewCollection setPinchGesture:]
  -[QLPreviewCollection rotationGesture]
  -[QLPreviewCollection setRotationGesture:]
  -[QLPreviewCollection swipeDownTracker]
  -[QLPreviewCollection setSwipeDownTracker:]
  -[QLPreviewCollection pinchRotationTracker]
  -[QLPreviewCollection setPinchRotationTracker:]
  -[QLPreviewCollection currentPreviewItemViewController]
  -[QLPreviewCollection _setUpTransitionDriverForPresenting:duration:]
  -[QLPreviewCollection transitionDriver]
  -[QLPreviewCollection setTransitionDriver:]
  -[QLPreviewCollection setHasTriggeredInteractiveTransitionAnimation:]
  -[QLPreviewCollection pageViewController]
  -[QLPreviewCollection updateTransitionWithProgress:]
  -[QLPreviewCollection triggerInteractiveTransitionAnimationIfNeeded]
  -[QLPreviewCollection completeTransition:withDuration:]
  -[QLPreviewCollection startNonInteractiveTransitionPresenting:]
  -[QLPreviewCollection _tearDownTransition:]
  -[QLPreviewCollection rotationOrPinchGestureRecognized:]
  -[QLPreviewCollection slideToDismissGestureRecognized:]
  -[QLPreviewCollection hostApplicationBundleIdentifier]
  -[QLPreviewCollection previewItemViewController:didFailWithError:]
  -[QLPreviewCollection setHostApplicationBundleIdentifier:]
  -[QLPreviewCollection previewItemViewController:wantsFullScreen:]
  -[QLPreviewCollection previewItemViewController:wantsToOpenURL:]
  -[QLPreviewCollection startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollection previewItemViewControllerDidChangeCurrentPreviewController:]
  -[QLPreviewCollection dragDataOwnerForPreviewItemViewController:]
  -[QLPreviewCollection toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollection setRemoteAccessoryContainer:]
  -[QLPreviewCollection pageViewController:willTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:didTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:viewControllerAtIndex:]
  -[QLPreviewCollection pageViewController:parallaxViewInPage:withIndex:]
  -[QLPreviewCollection pageViewController:isTransitioningFromPage:withIndex:toPage:withIndex:withProgress:]
  -[QLPreviewCollection pageViewController:willCancelTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:didCancelTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:willBeginInteractiveTransitionFromPage:withIndex:toPage:withIndex:]
  -[QLPreviewCollection loadingTextForPreviewItemViewController:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdateOverlay:animated:]
  -[QLPreviewCollection previewItemViewController:didEnableEditMode:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdateKeyCommands:]
  -[QLPreviewCollection previewItemViewControllerWantsToDismissQuickLook:]
  -[QLPreviewCollection previewItemViewControllerDidEditCopyOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewCollection previewItemViewController:hasUnsavedEdits:]
  -[QLPreviewCollection setIsEditing:]
  -[QLPreviewCollection previewItemViewControllerDidUpdateTitle:]
  -[QLPreviewCollection previewItemViewControllerDidUpdatePreferredContentSize:]
  -[QLPreviewCollection previewItemViewController:wantsToShowShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewCollection previewItemViewController:wantsToForwardMessageToHost:completionHandler:]
  -[QLPreviewCollection previewItemViewControllerWantsToShowNoInternetConnectivityAlert:]
  -[QLPreviewCollection _installGestures]
  -[QLPreviewCollection updateCurrentPreviewConfiguration]
  -[QLPreviewCollection _updatePreviewVisibility:]
  -[QLPreviewCollection _cleanAccessoryViewContainer]
  -[QLPreviewCollection _updateOverlay:]
  -[QLPreviewCollection _updateFullscreenBackgroundColor]
  -[QLPreviewCollection _updateFullscreen]
  -[QLPreviewCollection _updateAccessoryViewWithPreviewItemViewController:]
  -[QLPreviewCollection _updateWhitePointAdaptivityStyle]
  -[QLPreviewCollection _updatePrinter]
  -[QLPreviewCollection _updateTitleFromController]
  -[QLPreviewCollection _notifyHostPreviewCollectionIsReadyForInvalidationIfNeeded]
  -[QLPreviewCollection _setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollection _defaultKeyCommands]
  -[QLPreviewCollection _toggleFullscreenIfPossible]
  -[QLPreviewCollection hasTriggeredInteractiveTransitionAnimation]
  -[QLPreviewCollection _updateOverlayVisibility]
  -[QLPreviewCollection setIsTransitioningPage:]
  -[QLPreviewCollection _tapGestureRecognized]
  -[QLPreviewCollection pinchDismissGestureInProgress]
  -[QLPreviewCollection _itemViewControllerIsCurrentlyPresentedItemViewController:]
  -[QLPreviewCollection _updateCanChangeCurrentPage]
  -[QLPreviewCollection previewItemViewControllerWantsToShowShareSheet:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdatePrinter:]
  -[QLPreviewCollection expandContentOfPreviewItemViewController:unarchivedItemsURL:]
  -[QLPreviewCollection _sandboxExtensionForEditedFileAtURL:]
  -[QLPreviewCollection setPageViewController:]
  -[QLPreviewCollection isTransitioningPage]
  -[QLPreviewCollection prepareForInvalidationCompletionHandler]
  -[QLPreviewCollection setPrepareForInvalidationCompletionHandler:]


QLPUTimedAnimationGroup : QLPUAnimationGroup
 @property  double beginTime
 @property  double currentTime

  // instance methods
  -[QLPUTimedAnimationGroup init]
  -[QLPUTimedAnimationGroup _update]
  -[QLPUTimedAnimationGroup beginTime]
  -[QLPUTimedAnimationGroup setBeginTime:]
  -[QLPUTimedAnimationGroup elapsedTime]
  -[QLPUTimedAnimationGroup currentTime]
  -[QLPUTimedAnimationGroup setElapsedTime:]
  -[QLPUTimedAnimationGroup updateAnimations]
  -[QLPUTimedAnimationGroup pauseAnimations]
  -[QLPUTimedAnimationGroup resumeAnimations]


QLSpotlightFetcher : QLItemFetcher
 @property  QLSpotlightSearchableItemInfo *info

  // class methods
  +[QLSpotlightFetcher supportsSecureCoding]

  // instance methods
  -[QLSpotlightFetcher encodeWithCoder:]
  -[QLSpotlightFetcher initWithCoder:]
  -[QLSpotlightFetcher .cxx_destruct]
  -[QLSpotlightFetcher info]
  -[QLSpotlightFetcher itemSize]
  -[QLSpotlightFetcher isLongFetchOperation]
  -[QLSpotlightFetcher fetchContentWithAllowedOutputClasses:inQueue:updateBlock:completionBlock:]
  -[QLSpotlightFetcher initWithSearchableItemUniqueIdentifier:queryString:applicationBundleIdentifier:]


QLErrorView : _UIContentUnavailableView /System/Library/Frameworks/WebKit.framework/WebKit
  // instance methods
  -[QLErrorView initWithTitle:]


QLErrorItemViewController : QLItemViewController
 @property  QLItem *previewItem
 @property  NSError *error

  // instance methods
  -[QLErrorItemViewController .cxx_destruct]
  -[QLErrorItemViewController error]
  -[QLErrorItemViewController setError:]
  -[QLErrorItemViewController loadView]
  -[QLErrorItemViewController canSwipeToDismiss]
  -[QLErrorItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLErrorItemViewController canPinchToDismiss]
  -[QLErrorItemViewController canEnterFullScreen]
  -[QLErrorItemViewController previewItem]
  -[QLErrorItemViewController setPreviewItem:]
  -[QLErrorItemViewController errorView]
  -[QLErrorItemViewController _updateLabelsWithCurrentErrorIfNeeded]


QLImageAnimationTimer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *observers
 @property  CADisplayLink *displayLink

  // class methods
  +[QLImageAnimationTimer sharedTimer]

  // instance methods
  -[QLImageAnimationTimer init]
  -[QLImageAnimationTimer .cxx_destruct]
  -[QLImageAnimationTimer setObservers:]
  -[QLImageAnimationTimer observers]
  -[QLImageAnimationTimer displayLink]
  -[QLImageAnimationTimer setDisplayLink:]
  -[QLImageAnimationTimer removeAnimationTimerObserver:]
  -[QLImageAnimationTimer addAnimationTimerObserver:]
  -[QLImageAnimationTimer animationTimerFired:]


QLDelegateProxy : NSProxy /usr/lib/libobjc.A.dylib
 @property  id firstDelegate
 @property  id secondDelegate

  // instance methods
  -[QLDelegateProxy respondsToSelector:]
  -[QLDelegateProxy methodSignatureForSelector:]
  -[QLDelegateProxy forwardInvocation:]
  -[QLDelegateProxy forwardingTargetForSelector:]
  -[QLDelegateProxy .cxx_destruct]
  -[QLDelegateProxy setSecondDelegate:]
  -[QLDelegateProxy setFirstDelegate:]
  -[QLDelegateProxy firstDelegate]
  -[QLDelegateProxy secondDelegate]


QLItem : NSObject /usr/lib/libSystem.B.dylib <QLTExtensionThumbnailItem, QLPreviewItemPrivateProtocol, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *contentType
 @property  BOOL needsAccessToExternalResources
 @property  BOOL hasDeterminedShouldUseExtensionPreview
 @property  BOOL shouldUseExtensionPreview
 @property  BOOL hasDeterminedShouldUseExtensionThumbnail
 @property  BOOL shouldUseExtensionThumbnail
 @property  <QLPreviewItemPrivateProtocol> *originalPreviewItem
 @property  NSURL *previewItemURL
 @property  NSData *previewItemData
 @property  FPItem *fpItem
 @property  <QLPreviewItemDataProvider> *previewItemDataProvider
 @property  NSString *searchableItemIdentifier
 @property  NSString *spotlightQueryString
 @property  NSString *searchableItemApplicationBundleIdentifier
 @property  NSString *relativePath
 @property  NSItemProvider *previewItemProvider
 @property  NSNumber *itemSize
 @property  QLItemFetcher *fetcher
 @property  <QLItemThumbnailGeneratorProtocolInternal> *thumbnailGenerator
 @property  QLUTIAnalyzer *UTIAnalyzer
 @property  NSString *previewItemContentType
 @property  UIColor *backgroundColorOverride
 @property  NSString *previewItemTitle
 @property  QLPreviewItemEditedCopy *editedCopy
 @property  QLPreviewItemEditedCopy *lastSavedEditedCopy
 @property  NSString *password
 @property  NSUUID *uuid
 @property  unsigned long previewItemType
 @property  long long processIdentifier
 @property  BOOL isPromisedItem
 @property  BOOL canBeEdited
 @property  BOOL canHandleEditedCopy
 @property  BOOL originalContentWasUpdated
 @property  long long editingMode
 @property  BOOL canBeShared
 @property  unsigned long editedFileBehavior
 @property  BOOL hasDeterminedShouldUseExtensionPreview
 @property  BOOL shouldUseExtensionPreview
 @property  BOOL hasDeterminedShouldUseExtensionThumbnail
 @property  BOOL shouldUseExtensionThumbnail
 @property  FPSandboxingURLWrapper *sandboxingURLWrapper
 @property  NSDictionary *clientPreviewOptions
 @property  BOOL needsAccessToExternalResources
 @property  BOOL useAVPlayerViewController
 @property  BOOL useFullPDFTransition
 @property  BOOL useLoadingTimeout
 @property  NSNumber *previewItemProviderProgress
 @property  NSURL *editedFileURL
 @property  BOOL wantsPreviewInDebugViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *previewItemURLForDisplay
 @property  double autoPlaybackPosition
 @property  BOOL wantsDefaultMediaPlayer
 @property  NSString *MIMEType
 @property  NSDictionary *previewOptions

  // class methods
  +[QLItem supportsSecureCoding]
  +[QLItem supportedContentTypes]
  +[QLItem itemWithPreviewItem:]
  +[QLItem shouldUseRemoteCollection:]
  +[QLItem contentTypesToPreviewTypes]
  +[QLItem rtfContentTypes]
  +[QLItem contentTypeConformsToRTFD:]
  +[QLItem webContentTypes]
  +[QLItem encodedClasses]
  +[QLItem customExtensionCommunicationEncodedClasses]

  // instance methods
  -[QLItem init]
  -[QLItem dealloc]
  -[QLItem isEqual:]
  -[QLItem encodeWithCoder:]
  -[QLItem initWithCoder:]
  -[QLItem initWithURL:]
  -[QLItem password]
  -[QLItem .cxx_destruct]
  -[QLItem processIdentifier]
  -[QLItem uuid]
  -[QLItem relativePath]
  -[QLItem setPassword:]
  -[QLItem contentType]
  -[QLItem setUuid:]
  -[QLItem MIMEType]
  -[QLItem _commonInit]
  -[QLItem canBeEdited]
  -[QLItem itemSize]
  -[QLItem setItemSize:]
  -[QLItem initWithFPItem:]
  -[QLItem setProcessIdentifier:]
  -[QLItem setUseLoadingTimeout:]
  -[QLItem setPreviewItemProviderProgress:]
  -[QLItem initWithDataProvider:contentType:previewTitle:]
  -[QLItem previewItemTitle]
  -[QLItem previewItemURL]
  -[QLItem setPreviewItemURL:]
  -[QLItem setPreviewItemTitle:]
  -[QLItem editedFileURL]
  -[QLItem setPreviewItemContentType:]
  -[QLItem previewItemContentType]
  -[QLItem setRelativePath:]
  -[QLItem canBeShared]
  -[QLItem fetcher]
  -[QLItem setFetcher:]
  -[QLItem spotlightQueryString]
  -[QLItem isPromisedItem]
  -[QLItem backgroundColorOverride]
  -[QLItem shareableURL]
  -[QLItem previewItemType]
  -[QLItem defaultWhitePointAdaptivityStyle]
  -[QLItem originalPreviewItem]
  -[QLItem editedCopy]
  -[QLItem lastSavedEditedCopy]
  -[QLItem canBePreviewed]
  -[QLItem canBePrintedWithCustomPrinter]
  -[QLItem originalContentWasUpdated]
  -[QLItem editingMode]
  -[QLItem fpItem]
  -[QLItem useLoadingTimeout]
  -[QLItem maxLoadingTime]
  -[QLItem createPreviewContext]
  -[QLItem transformerClass]
  -[QLItem previewSizeForItemViewControllerSize:]
  -[QLItem previewItemPrintingViewControllerClassName]
  -[QLItem previewItemViewControllerClassName]
  -[QLItem previewItemDataProvider]
  -[QLItem sandboxingURLWrapper]
  -[QLItem provideURLWrapper:]
  -[QLItem needsAccessToExternalResources]
  -[QLItem setNeedsAccessToExternalResources:]
  -[QLItem useExtensionPreview]
  -[QLItem searchableItemIdentifier]
  -[QLItem _uncachedExtensionPreviewItemType]
  -[QLItem _uncachedPreviewItemType]
  -[QLItem useAVPlayerViewController]
  -[QLItem UTIAnalyzer]
  -[QLItem hasDeterminedShouldUseExtensionPreview]
  -[QLItem setShouldUseExtensionPreview:]
  -[QLItem searchableItemApplicationBundleIdentifier]
  -[QLItem shouldUseExtensionPreview]
  -[QLItem setHasDeterminedShouldUseExtensionPreview:]
  -[QLItem hasDeterminedShouldUseExtensionThumbnail]
  -[QLItem isStandardQuickLookType]
  -[QLItem setShouldUseExtensionThumbnail:]
  -[QLItem shouldUseExtensionThumbnail]
  -[QLItem setHasDeterminedShouldUseExtensionThumbnail:]
  -[QLItem shouldUseRemoteViewController]
  -[QLItem _getPreviewItemType]
  -[QLItem useExtensionThumbnail]
  -[QLItem maximumNumberOfCachedPreviews]
  -[QLItem saveURL]
  -[QLItem setEditedCopy:]
  -[QLItem prepareSaveURL:]
  -[QLItem thumbnailGenerator]
  -[QLItem initWithURLSandboxWrapper:]
  -[QLItem setCanBeEdited:]
  -[QLItem setEditingMode:]
  -[QLItem setEditedFileBehavior:]
  -[QLItem setCanHandleEditedCopy:]
  -[QLItem setCanBeShared:]
  -[QLItem previewOptions]
  -[QLItem setPreviewOptions:]
  -[QLItem previewItemData]
  -[QLItem previewItemProvider]
  -[QLItem setLastSavedEditedCopy:]
  -[QLItem setOriginalContentWasUpdated:]
  -[QLItem prepareShareableURL:]
  -[QLItem editedFileBehavior]
  -[QLItem useFullPDFTransition]
  -[QLItem clientPreviewOptions]
  -[QLItem setThumbnailGenerator:]
  -[QLItem setPreviewItemType:]
  -[QLItem setClientPreviewOptions:]
  -[QLItem internalCopy]
  -[QLItem setOriginalPreviewItem:]
  -[QLItem setUseAVPlayerViewController:]
  -[QLItem setBackgroundColorOverride:]
  -[QLItem setIsPromisedItem:]
  -[QLItem setUTIAnalyzer:]
  -[QLItem _removeEditedCopyIfExists]
  -[QLItem wantsPreviewInDebugViewController]
  -[QLItem previewItemProviderProgress]
  -[QLItem setPreviewItemData:]
  -[QLItem setFpItem:]
  -[QLItem setPreviewItemProvider:]
  -[QLItem setUseFullPDFTransition:]
  -[QLItem setSearchableItemIdentifier:]
  -[QLItem setSpotlightQueryString:]
  -[QLItem setSearchableItemApplicationBundleIdentifier:]
  -[QLItem setWantsPreviewInDebugViewController:]
  -[QLItem setPreviewItemDataProvider:]
  -[QLItem setSandboxingURLWrapper:]
  -[QLItem canHandleEditedCopy]
  -[QLItem initWithPreviewItemProvider:contentType:previewTitle:fileSize:]
  -[QLItem initWithData:contentType:previewTitle:]
  -[QLItem initWithURL:MIMEType:]
  -[QLItem initWithSearchableItemUniqueIdentifier:queryString:applicationBundleIdentifier:previewTitle:]
  -[QLItem initWithSearchableItemUniqueIdentifier:applicationBundleIdentifier:]


UIToolbar(_UIToolbarConfiguration)
	// instance methods
	-[UIToolbar(_UIToolbarConfiguration) configuration]
	-[UIToolbar(_UIToolbarConfiguration) configureWithConfiguration:]
	-[UIToolbar(_UIToolbarConfiguration) configureTransparent]

UIView(_QLUtilities)
	// class methods
	+[UIView(_QLUtilities) qlph_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:]
	+[UIView(_QLUtilities) _qlpu_animateView:toCenter:bounds:transform:withInitialVelocity:usingSpringAnimation:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:usingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:]
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:usingDefaultDampedSpringWithDelay:initialVelocity:options:completion:]
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:completion:]
	+[UIView(_QLUtilities) _qlpu_animateViews:withAnimationBlock:completionHandler:]
	+[UIView(_QLUtilities) qlpu_animateViews:withDuration:delay:options:animations:completion:]

	// instance methods
	-[UIView(_QLUtilities) QL_setAnchorPointAndUpdatePosition:]
	-[UIView(_QLUtilities) _qlpu_animationDictionary]

QLExtensionManager(Internal)
	// class methods
	+[QLExtensionManager(Internal) ql_applicationBundleIdentifierOfExtensionForItem:]
	+[QLExtensionManager(Internal) ql_previewExtensionCustomLoadingTimeForItem:]
	+[QLExtensionManager(Internal) extensionForItem:]
	+[QLExtensionManager(Internal) ql_isPreviewExtensionThatHaveCustomPresentationViewForItem:]

	// instance methods
	-[QLExtensionManager(Internal) remoteViewControllerForContentType:applicationBundleIdentifier:extensionType:generatonType:withCompletionHandler:]

UIImage(_QLUtilities)
	// class methods
	+[UIImage(_QLUtilities) imageWithImage:scaledToSize:]

NSString(_QLUtilities)
	// class methods
	+[NSString(_QLUtilities) formattedStringForByteCount:]

MPMediaItem(_QLUtilities)
	// class methods
	+[MPMediaItem(_QLUtilities) playingInfoFromAsset:withDefaultTitle:]
	+[MPMediaItem(_QLUtilities) playingInfoFromAsset:withDefaultTitle:playbackDuration:elapsedTime:]

AVAsset(_QLUtilities)
	// class methods
	+[AVAsset(_QLUtilities) assetIsAutoloopMedia:completionHandler:]

	// instance methods
	-[AVAsset(_QLUtilities) ql_canBeRotated]

NSBundle(_QLUtilities)
	// class methods
	+[NSBundle(_QLUtilities) mainBundleSupportsBackgroundAudio]
	+[NSBundle(_QLUtilities) mainBundleRequiresStatusBarHidden]

	// instance methods
	-[NSBundle(_QLUtilities) ql_applicationName]

UIColor(_QLUtilities)
	// class methods
	+[UIColor(_QLUtilities) _ql_markupBackgroundColor]

NSURL(_QLUtilities)
	// class methods
	+[NSURL(_QLUtilities) _QLTemporaryFileURLWithContentType:uuid:]
	+[NSURL(_QLUtilities) _QLTemporaryFileURLWithContentType:forOriginalFileAtURL:temporaryFileURL:temporaryDirectoryURL:fallbackUUID:]
	+[NSURL(_QLUtilities) _QLTemporaryFileURLWithContentType:filename:]
	+[NSURL(_QLUtilities) _QLCreateTemporaryDirectory:]
	+[NSURL(_QLUtilities) _QLCreateTemporaryDirectoryForOriginalFileAtURL:error:]

	// instance methods
	-[NSURL(_QLUtilities) previewItemURL]
	-[NSURL(_QLUtilities) _QLNeedsDownload]
	-[NSURL(_QLUtilities) _QLUrlFileSize]
	-[NSURL(_QLUtilities) _QLIsPackageURL]
	-[NSURL(_QLUtilities) _QLSingleFileSizeForURL:]
	-[NSURL(_QLUtilities) _QLNeedsCoordination]
	-[NSURL(_QLUtilities) _QLIsHiddenFile]

NSExtension(_QLPreviewControllerUtilities)
	// instance methods
	-[NSExtension(_QLPreviewControllerUtilities) ql_isPreviewExtensionThatHaveCustomPresentationView]
	-[NSExtension(_QLPreviewControllerUtilities) ql_previewExtensionCustomLoadingTime]

UIBarButtonItem(QLUIBarButtonItemCopy)
	// instance methods
	-[UIBarButtonItem(QLUIBarButtonItemCopy) ql_copySystemItem]

NSLayoutConstraint(_QLUtilities)
	// instance methods
	-[NSLayoutConstraint(_QLUtilities) ql_activatedConstraint]

01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 1000 /System/Library/Frameworks/AVKit.framework/AVKit: AVEditBehavior 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMediaDataStorage 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMovie 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 1000 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 1500 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 1300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0c00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactVCardSerialization 
01 00 0300 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFApplicationPolicyMonitor 
01 00 0300 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFCategoryPolicyMonitor 
01 00 0600 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItem 
01 00 0600 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemManager 
01 00 0600 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPSandboxingURLWrapper 
01 00 1d00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1d00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1d00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItemArtwork 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNowPlayingInfoCenter 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRemoteCommandCenter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileAccessIntent 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLProtocol 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLResponse 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLAsynchronousOperation 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLExtensionManager 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLExtensionThumbnailGenerator 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLFileThumbnailRequest 
01 00 0840 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailAddition 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerationRequest 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerator 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailItem 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailProvider 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailReply 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailServiceProxy 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLURLHandler 
01 00 0800 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLUTIAnalyzer 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLUTIManager 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLZipArchive 
01 00 0a00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPasswordView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageConfiguration 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageViewController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInfo 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintPageRenderer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIRotationGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UISimpleTextPrintFormatter 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarHideAnimationParameters 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1600 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1700 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
