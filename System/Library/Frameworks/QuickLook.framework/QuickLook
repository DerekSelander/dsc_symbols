|| __DATA.__objc_data _OBJC_CLASS_$_ARQLInlineTouch
|| __DATA.__objc_data _OBJC_CLASS_$_ARQLSandboxingURLWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_QLAnimatedImage
|| __DATA.__objc_data _OBJC_CLASS_$_QLContactItemTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_QLDelegateProxy
|| __DATA.__objc_data _OBJC_CLASS_$_QLDetachedSceneDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_QLDetailItemViewControllerState
|| __DATA.__objc_data _OBJC_CLASS_$_QLDismissAction
|| __DATA.__objc_data _OBJC_CLASS_$_QLEditedItem
|| __DATA.__objc_data _OBJC_CLASS_$_QLImageAnalysisManager
|| __DATA.__objc_data _OBJC_CLASS_$_QLImageItemContentsTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_QLItemAggregatedViewController
|| __DATA.__objc_data _OBJC_CLASS_$_QLNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_QLPreviewMockScene
|| __DATA.__objc_data _OBJC_CLASS_$_QLPreviewSceneActivationConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_QLPreviewSceneOptions
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnail
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnailCreationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_QLThumbnailDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_QLTransitionController
|| __DATA.__objc_data _OBJC_CLASS_$_QLWKWebItemViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_ARQLInlineTouch
|| __DATA.__objc_data _OBJC_METACLASS_$_ARQLSandboxingURLWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_QLAnimatedImage
|| __DATA.__objc_data _OBJC_METACLASS_$_QLContactItemTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDelegateProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDetachedSceneDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDetailItemViewControllerState
|| __DATA.__objc_data _OBJC_METACLASS_$_QLDismissAction
|| __DATA.__objc_data _OBJC_METACLASS_$_QLEditedItem
|| __DATA.__objc_data _OBJC_METACLASS_$_QLImageAnalysisManager
|| __DATA.__objc_data _OBJC_METACLASS_$_QLImageItemContentsTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_QLItemAggregatedViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_QLNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_QLPreviewMockScene
|| __DATA.__objc_data _OBJC_METACLASS_$_QLPreviewSceneActivationConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_QLPreviewSceneOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnail
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnailCreationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_QLThumbnailDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_QLTransitionController
|| __DATA.__objc_data _OBJC_METACLASS_$_QLWKWebItemViewController
|| __DATA_CONST.__const _QLActionButtonIdentifier
|| __DATA_CONST.__const _QLAudioItemViewControllerQuickTimeImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLAudioScrubberViewContainerAccessibilityIdentifier
|| __DATA_CONST.__const _QLCustomToolBarAccessibilityIdentifier
|| __DATA_CONST.__const _QLCustomToolBarModalAccessibilityIdentifier
|| __DATA_CONST.__const _QLDetachedSceneActivityType
|| __DATA_CONST.__const _QLDetachedSceneActivityURLsKey
|| __DATA_CONST.__const _QLDetachedSceneEditingModesKey
|| __DATA_CONST.__const _QLDetachedSceneSelectedIndexKey
|| __DATA_CONST.__const _QLDoneButtonIdentifier
|| __DATA_CONST.__const _QLFindOnPageBarSearchCancelButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLFindOnPageBarSearchMatchLabelAccessibilityIdentifier
|| __DATA_CONST.__const _QLFindOnPageBarSearchNextResultButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLFindOnPageBarSearchPreviousResultButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLFindOnPageBarSearchSearchFieldAccessibilityIdentifier
|| __DATA_CONST.__const _QLGenericActivityType
|| __DATA_CONST.__const _QLImageItemViewControllerImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLListButtonIdentifier
|| __DATA_CONST.__const _QLLivePhotoViewControllerLivePhotoBadgeAccessibilityIdentifier
|| __DATA_CONST.__const _QLLivePhotoViewControllerLivePhotoViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLMarkupImageItemViewControllerMarkupImageViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarPlayButtonPausedAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarPlayButtonPlayingAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarRotateRightButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLMediaItemViewControllerBarTrimButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLMovieScrubberViewContainerAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayCopyToButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayCustomActionButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayDefaultActionButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayDoneButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayImageAnalysisButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayListButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayMarkupButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayOpenInButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLOverlayPlayButtonDefaultAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFItemViewControllerBarFormFillingRightButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFItemViewControllerBarSearchRightButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFViewControllerPasswordTextFieldAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFViewControllerVerifyPasswordTextFieldAccessibilityIdentifier
|| __DATA_CONST.__const _QLPDFViewControllerViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLRemoteItemViewControllerHostViewAccessibilityIdentifier
|| __DATA_CONST.__const _QLTextItemViewControllerBarSearchRightButtonAccessibilityIdentifier
|| __DATA_CONST.__const _QLWKWebViewControllerWkWebViewAccessibilityIdentifier
|| __DATA_CONST.__const _kQLTestingNotificationTimestampKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLDetailItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLImageItemTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLImageItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QLScrollableContentItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLDetailItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLImageItemTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLImageItemViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QLScrollableContentItemViewController
|| __TEXT.__const _QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions
|| __TEXT.__const _QLPreviewItemEditingModeUpdateContentsAndDisplayDismissActions
|| __TEXT.__text _QLConvertPointFromAnchorPointToNewAnchorPoint
|| __TEXT.__text _QLNotify
|| __TEXT.__text _QLNotifySelector
|| __TEXT.__text _QLSizeAspectRatioEqualToSizeAspectRatioWithTolerance
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVFormatIDKey
__ AVFAudio: _AVLinearPCMBitDepthKey
__ AVFAudio: _AVLinearPCMIsFloatKey
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonIdentifierTitle
__ AVFoundation: _AVMetadataCommonKeyAlbumName
__ AVFoundation: _AVMetadataCommonKeyArtist
__ AVFoundation: _AVMetadataCommonKeyArtwork
__ AVFoundation: _AVMetadataCommonKeyTitle
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVMediaDataStorage
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableMovie
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVEditBehavior
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ Categories: _CTCategoryIdentifierEntertainment
__ Celestial: _AVSystemController_PIDToInheritApplicationStateFrom
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactVCardSerialization
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringConvertEncodingToIANACharSetName
__ CoreFoundation: _CFStringConvertNSStringEncodingToEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLContentTypeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: __CFURLCopySecurityScopeFromFileURL
__ CoreFoundation: __CFURLIsItemPromiseAtURL
__ CoreFoundation: __CFURLPromiseCopyPhysicalURL
__ CoreFoundation: __CFURLPromiseSetPhysicalURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPDFDocumentCreateWithProvider
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPathAddArcToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer
__ CoreMedia: _CMSampleBufferGetDuration
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreServices: _LSFileProviderStringKey
__ CoreServices: _LSRequireOpenInPlaceKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ CoreServices: __LSHandlerRankOwner
__ DeviceManagement: _OBJC_CLASS_$_DMFApplicationPolicyMonitor
__ DeviceManagement: _OBJC_CLASS_$_DMFCategoryPolicyMonitor
__ FileProvider: _FPExtendBookmarkForDocumentURL
__ FileProvider: _FPURLMightBeInFileProvider
__ FileProvider: _OBJC_CLASS_$_FPItemManager
__ FileProvider: _OBJC_CLASS_$_FPSandboxingURLWrapper
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileAccessIntent
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Foundation: __NSDictionaryOfVariableBindings
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImagePropertyAPNGDelayTime
__ ImageIO: _kCGImagePropertyAPNGUnclampedDelayTime
__ ImageIO: _kCGImagePropertyGIFDelayTime
__ ImageIO: _kCGImagePropertyGIFDictionary
__ ImageIO: _kCGImagePropertyGIFUnclampedDelayTime
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImageSourceSkipMetadata
__ ImageIO: _kCGImageSourceUseHardwareAcceleration
__ LinkPresentation: _OBJC_CLASS_$_LPFileMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPImage
__ LinkPresentation: _OBJC_CLASS_$_LPImageProperties
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ MediaPlayer: _MPMediaItemPropertyAlbumTitle
__ MediaPlayer: _MPMediaItemPropertyArtist
__ MediaPlayer: _MPMediaItemPropertyArtwork
__ MediaPlayer: _MPMediaItemPropertyPlaybackDuration
__ MediaPlayer: _MPMediaItemPropertyTitle
__ MediaPlayer: _MPNowPlayingInfoPropertyElapsedPlaybackTime
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItemArtwork
__ MediaPlayer: _OBJC_CLASS_$_MPNowPlayingInfoCenter
__ MediaPlayer: _OBJC_CLASS_$_MPRemoteCommandCenter
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuickLookSupport: _OBJC_CLASS_$_QLExtensionManager
__ QuickLookSupport: _OBJC_CLASS_$_QLFilePreviewRequest
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewExtensionRenderer
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewMultiPartURLProtocol
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewParts
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewProvider
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewReply
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewReplyAttachment
__ QuickLookSupport: _OBJC_CLASS_$_QLPreviewURLProtocol
__ QuickLookSupport: _OBJC_CLASS_$_QLUTIManager
__ QuickLookSupport: _OBJC_METACLASS_$_QLPreviewParts
__ QuickLookSupport: _OBJC_METACLASS_$_QLPreviewProvider
__ QuickLookSupport: _OBJC_METACLASS_$_QLPreviewReply
__ QuickLookSupport: _OBJC_METACLASS_$_QLPreviewReplyAttachment
__ QuickLookSupport: _QLAdaptSizeToRect
__ QuickLookSupport: _QLFrameworkBundle
__ QuickLookSupport: _QLPreviewCopyEmbeddedPDF
__ QuickLookSupport: _QLPreviewErrorDomain
__ QuickLookSupport: _QLSInitLogging
__ QuickLookSupport: _QLScaledPlatformImageFromImageSource
__ QuickLookSupport: __qlsLogHandle
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLAsynchronousOperation
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLFileThumbnailRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailAddition
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerationRequest
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailGenerator
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailProvider
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailReply
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLThumbnailServiceProxy
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLURLHandler
__ QuickLookThumbnailing: _OBJC_CLASS_$_QLUTIAnalyzer
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLAsynchronousOperation
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLFileThumbnailRequest
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLThumbnailProvider
__ QuickLookThumbnailing: _OBJC_METACLASS_$_QLThumbnailReply
__ QuickLookThumbnailing: _QLThumbnailErrorDomain
__ QuickLookUICore: _NSStringFromQLNetworkState
__ QuickLookUICore: _OBJC_CLASS_$_QLAppearance
__ QuickLookUICore: _OBJC_CLASS_$_QLCustomItemViewController
__ QuickLookUICore: _OBJC_CLASS_$_QLDataItemTransformer
__ QuickLookUICore: _OBJC_CLASS_$_QLGeneratorFetcher
__ QuickLookUICore: _OBJC_CLASS_$_QLImageItemContents
__ QuickLookUICore: _OBJC_CLASS_$_QLImageItemDataContents
__ QuickLookUICore: _OBJC_CLASS_$_QLImageItemURLContents
__ QuickLookUICore: _OBJC_CLASS_$_QLItem
__ QuickLookUICore: _OBJC_CLASS_$_QLItemProviderFetcher
__ QuickLookUICore: _OBJC_CLASS_$_QLItemThumbnailGenerator
__ QuickLookUICore: _OBJC_CLASS_$_QLItemTransformer
__ QuickLookUICore: _OBJC_CLASS_$_QLItemViewController
__ QuickLookUICore: _OBJC_CLASS_$_QLKeyCommand
__ QuickLookUICore: _OBJC_CLASS_$_QLNetworkStateObserver
__ QuickLookUICore: _OBJC_CLASS_$_QLPreviewConverter
__ QuickLookUICore: _OBJC_CLASS_$_QLSpotlightFetcher
__ QuickLookUICore: _OBJC_CLASS_$_QLSpotlightSearchableItemInfo
__ QuickLookUICore: _OBJC_CLASS_$_QLTextItemTransformer
__ QuickLookUICore: _OBJC_CLASS_$_QLToolbarButton
__ QuickLookUICore: _OBJC_CLASS_$_QLToolbarButtonItemRepresentation
__ QuickLookUICore: _OBJC_CLASS_$_QLToolbarButtonOption
__ QuickLookUICore: _OBJC_CLASS_$_QLURLItemTransformer
__ QuickLookUICore: _OBJC_METACLASS_$_QLCustomItemViewController
__ QuickLookUICore: _OBJC_METACLASS_$_QLImageItemContents
__ QuickLookUICore: _OBJC_METACLASS_$_QLImageItemDataContents
__ QuickLookUICore: _OBJC_METACLASS_$_QLImageItemURLContents
__ QuickLookUICore: _OBJC_METACLASS_$_QLItem
__ QuickLookUICore: _OBJC_METACLASS_$_QLItemThumbnailGenerator
__ QuickLookUICore: _OBJC_METACLASS_$_QLItemTransformer
__ QuickLookUICore: _OBJC_METACLASS_$_QLItemViewController
__ QuickLookUICore: _OBJC_METACLASS_$_QLPreviewConverter
__ QuickLookUICore: _OBJC_METACLASS_$_QLToolbarButton
__ QuickLookUICore: _OBJC_METACLASS_$_QLToolbarButtonItemRepresentation
__ QuickLookUICore: _OBJC_METACLASS_$_QLToolbarButtonOption
__ QuickLookUICore: _QLCGSizeFromQLItemThumbnailSize
__ QuickLookUICore: _QLCustomItemViewControllerErrorDomain
__ QuickLookUICore: _QLDelayBeforeShowingSaveEditProgressIndicator
__ QuickLookUICore: _QLImageWithSizeShouldNotBeScaled
__ QuickLookUICore: _QLItemViewControllerVendorForItem
__ QuickLookUICore: _QLItemViewControllerVendorForURL
__ QuickLookUICore: _QLLocalizedDictionaryString
__ QuickLookUICore: _QLLocalizedString
__ QuickLookUICore: _QLLocalizedStringFromTable
__ QuickLookUICore: _QLLocalizedStringWithDefaultValue
__ QuickLookUICore: _QLPreviewControllerSupportsContentType
__ QuickLookUICore: _QLPreviewGetSupportedMIMETypes
__ QuickLookUICore: _QLPreviewNeedsHelpUnzippingURL
__ QuickLookUICore: _QLPreviewRequestAppendDataToAttachment
__ QuickLookUICore: _QLPreviewRequestCreateAttachmentURL
__ QuickLookUICore: _QLPreviewRequestIsCancelled
__ QuickLookUICore: _QLPreviewRequestSetDataRepresentation
__ QuickLookUICore: _QLPreviewRequestSetError
__ QuickLookUICore: _QLPreviewRequestStartDataRepresentation
__ QuickLookUICore: _QLRunInBackgroundThread
__ QuickLookUICore: _QLRunInMainThread
__ QuickLookUICore: _QLRunInMainThreadSync
__ QuickLookUICore: _QLToolbarButtonOptionCancelIdentifier
__ QuickLookUICore: _QLTypeCopyUTIForURLAndMimeType
__ QuickLookUICore: __QLContentTypeConformsToContentTypeInSet
__ QuickLookUICore: __QLLayoutIsRTL
__ QuickLookUICore: _kQLPreviewContentIDScheme
__ QuickLookUICore: _kQLPreviewExtensionIdentifier
__ QuickLookUICore: _kQLPreviewOptionPasswordKey
__ QuickLookUICore: _kQLPreviewPropertyAllowJavascriptKey
__ QuickLookUICore: _kQLPreviewPropertyAttachmentDataKey
__ QuickLookUICore: _kQLPreviewPropertyAttachmentsKey
__ QuickLookUICore: _kQLPreviewPropertyHeightKey
__ QuickLookUICore: _kQLPreviewPropertyMIMETypeKey
__ QuickLookUICore: _kQLPreviewPropertyTextEncodingNameKey
__ QuickLookUICore: _kQLPreviewPropertyWidthKey
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SoftLinking: __sl_dlopen
__ UIKit: _NSBackgroundColorAttributeName
__ UIKit: _NSBackgroundColorDocumentAttribute
__ UIKit: _NSDocumentTypeDocumentOption
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSPaperMarginDocumentAttribute
__ UIKit: _NSPaperSizeDocumentAttribute
__ UIKit: _NSPlainTextDocumentType
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIActivityItemsConfiguration
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDeferredMenuElement
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIDocumentPasswordView
__ UIKit: _OBJC_CLASS_$_UIDocumentPickerViewController
__ UIKit: _OBJC_CLASS_$_UIDocumentProperties
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPageViewController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPrintInfo
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_CLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISceneConfiguration
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISimpleTextPrintFormatter
__ UIKit: _OBJC_CLASS_$_UIStatusBarHideAnimationParameters
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITabBarAppearance
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UIToolbarAppearance
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$_UIWindowSceneActivationConfiguration
__ UIKit: _OBJC_CLASS_$_UIWindowSceneActivationRequestOptions
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIBarButtonItem
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPageViewController
__ UIKit: _OBJC_METACLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIPrintPageRenderer
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindowSceneActivationConfiguration
__ UIKit: _OBJC_METACLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata
__ UIKit: _UIActivityTypeCopyToPasteboard
__ UIKit: _UIActivityTypeMarkupAsPDF
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIActivityTypeSaveToCameraRoll
__ UIKit: _UIActivityTypeSharePlay
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIBackgroundModeAudio
__ UIKit: _UIBackgroundModesKey
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsBeginPDFContextToData
__ UIKit: _UIGraphicsBeginPDFPage
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsEndPDFContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIPageViewControllerOptionInterPageSpacingKey
__ UIKit: _UIRectFill
__ UIKit: _UISceneSessionRoleQuickLook
__ UIKit: _UISceneWillDeactivateNotification
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UIStatusBarHiddenKey
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ UIKit: __UIAccessibilityZoomTouchEnabled
__ UIKit: __UIApplicationIsExtension
__ UIKit: __UIBarsDesktopNavigationBarEnabled
__ UIKit: __UIStringFromWhitePointAdaptivityStyle
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateRequestDeactivate
__ UIKit: __UIViewServiceErrorDomain
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: _UTTypeAudio
__ UniformTypeIdentifiers: _UTTypeGIF
__ UniformTypeIdentifiers: _UTTypeHEIC
__ UniformTypeIdentifiers: _UTTypeImage
__ UniformTypeIdentifiers: _UTTypeJSON
__ UniformTypeIdentifiers: _UTTypeM3UPlaylist
__ UniformTypeIdentifiers: _UTTypePDF
__ UniformTypeIdentifiers: _UTTypePNG
__ UniformTypeIdentifiers: _UTTypePresentation
__ UniformTypeIdentifiers: _UTTypePropertyList
__ UniformTypeIdentifiers: _UTTypeXML
__ UniformTypeIdentifiers: _UTTypeXMLPropertyList
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ VisionKitCore: _OBJC_CLASS_$_VKCImageAnalysisInteraction
__ VisionKitCore: _OBJC_CLASS_$_VKCImageAnalyzer
__ VisionKitCore: _OBJC_CLASS_$_VKCImageAnalyzerRequest
__ VoiceShortcutClient: _OBJC_CLASS_$_VCVoiceShortcutClient
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualActionContext
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualActionFile
__ VoiceShortcutClient: _OBJC_CLASS_$_WFContextualActionRunnerClient
__ VoiceShortcutClient: _WFExportAsFilesActionIdentifier
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_CLASS_$__WKWebsiteDataStoreConfiguration
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _SANDBOX_EXTENSION_NOFOLLOW
__ libSystem.B.dylib: _SANDBOX_EXTENSION_NO_REPORT
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _strlen
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
QLShortcutsActionsRunner : NSObject <WFContextualActionRunnerClientDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLShortcutsActionsRunner .cxx_destruct]
  -[QLShortcutsActionsRunner workflowRunnerClient:didFinishRunningWorkflowWithOutputFiles:error:cancelled:]
  -[QLShortcutsActionsRunner runAction:withContext:completionHandler:]


QLScreenTimeItemViewController : QLItemViewController
 @property  long long policy
 @property  NSString *bundleIdentifier
 @property  NSString *categoryIdentifier
 @property  STBlockingViewController *blockingViewController

  // instance methods
  -[QLScreenTimeItemViewController setCategoryIdentifier:]
  -[QLScreenTimeItemViewController categoryIdentifier]
  -[QLScreenTimeItemViewController .cxx_destruct]
  -[QLScreenTimeItemViewController setBundleIdentifier:]
  -[QLScreenTimeItemViewController initWithBundleIdentifier:]
  -[QLScreenTimeItemViewController bundleIdentifier]
  -[QLScreenTimeItemViewController setPolicy:]
  -[QLScreenTimeItemViewController policy]
  -[QLScreenTimeItemViewController hideBlockingViewControllerWithCompletionHandler:]
  -[QLScreenTimeItemViewController canSwipeToDismiss]
  -[QLScreenTimeItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLScreenTimeItemViewController canEnterFullScreen]
  -[QLScreenTimeItemViewController canPinchToDismiss]
  -[QLScreenTimeItemViewController initWithCategoryIdentifier:]
  -[QLScreenTimeItemViewController showBlockingViewControllerWithPolicy:]
  -[QLScreenTimeItemViewController _updateBlockingViewControllerWithCurrentPolicy]
  -[QLScreenTimeItemViewController blockingViewController]
  -[QLScreenTimeItemViewController setBlockingViewController:]


QLActivityItemProvider : NSObject <UIActivityItemSource>
 @property  QLPreviewPrinter *printer
 @property  QLItem *activityPreviewItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLActivityItemProvider setPrinter:]
  -[QLActivityItemProvider .cxx_destruct]
  -[QLActivityItemProvider printInfo]
  -[QLActivityItemProvider printer]
  -[QLActivityItemProvider activityViewControllerPlaceholderItem:]
  -[QLActivityItemProvider activityViewController:itemForActivityType:]
  -[QLActivityItemProvider activityViewController:subjectForActivityType:]
  -[QLActivityItemProvider activityViewControllerPlaceholderItems:]
  -[QLActivityItemProvider mainItem]
  -[QLActivityItemProvider _pdfPreviewDataAtURL:]
  -[QLActivityItemProvider activityPreviewItem]
  -[QLActivityItemProvider setActivityPreviewItem:]


QLStateManagerProxy : NSObject
 @property  <QLPreviewControllerStateProtocolHostOnly> *stateManager

  // instance methods
  -[QLStateManagerProxy methodSignatureForSelector:]
  -[QLStateManagerProxy respondsToSelector:]
  -[QLStateManagerProxy .cxx_destruct]
  -[QLStateManagerProxy forwardingTargetForSelector:]
  -[QLStateManagerProxy forwardInvocation:]
  -[QLStateManagerProxy stateManager]
  -[QLStateManagerProxy dropMethod]
  -[QLStateManagerProxy setStateManager:]


QLPreviewControllerView : UIView
  // instance methods
  -[QLPreviewControllerView init]


QLNavigationState : NSObject
 @property  BOOL navigationBarHidden
 @property  BOOL toolBarHidden
 @property  BOOL translucentNavigationBar
 @property  BOOL translucentToolbar
 @property  UINavigationController *navigationController

  // instance methods
  -[QLNavigationState navigationController]
  -[QLNavigationState .cxx_destruct]
  -[QLNavigationState setNavigationController:]
  -[QLNavigationState setNavigationBarHidden:]
  -[QLNavigationState navigationBarHidden]
  -[QLNavigationState toolBarHidden]
  -[QLNavigationState setToolBarHidden:]
  -[QLNavigationState translucentNavigationBar]
  -[QLNavigationState setTranslucentNavigationBar:]
  -[QLNavigationState translucentToolbar]
  -[QLNavigationState setTranslucentToolbar:]


QLPreviewController : UIViewController <UIScreenshotServiceDelegate, UIDocumentPickerDelegate, UIDocumentInteractionControllerDelegate, UIGestureRecognizerDelegate, QLPreviewItemStoreDelegate, QLPreviewItemProvider, QLPreviewControllerStateProtocolHostOnly, UIPageViewControllerDelegate, UIViewControllerTransitioningDelegate, UINavigationControllerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableDictionary *previewKeyCommands
 @property  BOOL canChangeCurrentPage
 @property  BOOL overlayHidden
 @property  BOOL fullScreen
 @property  BOOL isInteractivePopEnabled
 @property  BOOL previousStatusBarHidden
 @property  long long numberOfPreviewItems
 @property  QLItem *internalCurrentPreviewItem
 @property  UIViewController<QLPreviewCollectionProtocol> *previewCollection
 @property  <QLPrintingProtocol> *printer
 @property  NSArray *previewToolbarButtons
 @property  NSArray *excludedToolbarButtonIdentifiers
 @property  UIAlertController *doneButtonAlertController
 @property  QLNavigationState *previousNavigationVCState
 @property  UINavigationController *internalNavigationController
 @property  BOOL willTransitionToInternalView
 @property  BOOL didTransitionFromInternalView
 @property  BOOL allowInteractiveTransitions
 @property  QLToolbarController *toolbarController
 @property  QLPreviewItemStore *previewItemStore
 @property  QLActivityItemProvider *currentItemProvider
 @property  QLCustomURLSharingProxyDelegate *customURLSharingProxyDelegate
 @property  UIDocumentInteractionController *sharingInteractionController
 @property  <QLRemotePopoverTracker> *shareSheetPopoverTracker
 @property  @? shareSheetDismissCompletion
 @property  NSURL *accessedUrlForSharingController
 @property  NSArray *originalLeftBarButtonItems
 @property  NSArray *originalRightBarButtonItems
 @property  NSString *currentTitleFromItemViewController
 @property  <QLPreviewControllerDelegate> *strongDelegate
 @property  UIPanGestureRecognizer *slideGesture
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  UIRotationGestureRecognizer *rotationGesture
 @property  QLSwipeDownTracker *swipeDownTracker
 @property  QLPinchRotationTracker *pinchRotationTracker
 @property  QLStateManager *stateManager
 @property  QLTransitionController *currentAnimator
 @property  BOOL canShowToolbar
 @property  BOOL canShowNavBar
 @property  BOOL forceDismissActionsPresentation
 @property  BOOL currentPreviewHasRemoteUnsavedEdits
 @property  BOOL isObtainingEditsFromServiceBeforeDismissing
 @property  BOOL isTopPreviewController
 @property  unsigned long quickLookVisibility
 @property  unsigned long appearanceActions
 @property  BOOL isContentManaged
 @property  NSString *personaUniqueString
 @property  BOOL useCustomActionButton
 @property  BOOL alwaysDisplayPreviewItemTitle
 @property  BOOL showActionAsDefaultButton
 @property  BOOL forceModalPresentation
 @property  NSArray *additionalLeftBarButtonItems
 @property  NSArray *additionalRightBarButtonItems
 @property  unsigned long presentationStyle
 @property  UIColor *toolbarTintColor
 @property  UIColor *navigationBarTintColor
 @property  UIColor *backgroundColor
 @property  UIColor *fullscreenBackgroundColor
 @property  unsigned long presentationMode
 @property  unsigned long forcedSupportedInterfaceOrientations
 @property  NSString *overrideParentApplicationDisplayIdentifier
 @property  <QLPreviewControllerDataSource> *dataSource
 @property  long long currentPreviewItemIndex
 @property  <QLPreviewItem> *currentPreviewItem
 @property  <QLPreviewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewController canPreviewItem:]
  +[QLPreviewController presentPreviewItem:onViewController:withDelegate:animated:]
  +[QLPreviewController controllerWithItemStore:]
  +[QLPreviewController printPageRendererForItem:]
  +[QLPreviewController logDeprecatedMessageForMethodName:]
  +[QLPreviewController logDeprecatedMessageForSelector:]
  +[QLPreviewController contentTypeForPreviewItem:]
  +[QLPreviewController titleForPreviewItem:]
  +[QLPreviewController copyPreviewItemToPasteboard:]
  +[QLPreviewController canPreviewDocumentType:]
  +[QLPreviewController canPreviewMIMEType:]

  // instance methods
  -[QLPreviewController presentationMode]
  -[QLPreviewController _doneButton]
  -[QLPreviewController animationControllerForPresentedController:presentingController:sourceController:]
  -[QLPreviewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLPreviewController interactionControllerForPresentation:]
  -[QLPreviewController interactionControllerForDismissal:]
  -[QLPreviewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[QLPreviewController animationControllerForDismissedController:]
  -[QLPreviewController setIsContentManaged:]
  -[QLPreviewController reloadData]
  -[QLPreviewController dataSource]
  -[QLPreviewController userActivity]
  -[QLPreviewController setStrongDelegate:]
  -[QLPreviewController currentTracker]
  -[QLPreviewController presentationStyle]
  -[QLPreviewController isContentManaged]
  -[QLPreviewController setPresentationStyle:]
  -[QLPreviewController currentItem]
  -[QLPreviewController setNavigationBarTintColor:]
  -[QLPreviewController setDelegate:]
  -[QLPreviewController _updateBackgroundColor]
  -[QLPreviewController setAccessoryViewVisible:]
  -[QLPreviewController delegate]
  -[QLPreviewController setPrinter:]
  -[QLPreviewController initWithNibName:bundle:]
  -[QLPreviewController viewDidAppear:]
  -[QLPreviewController dealloc]
  -[QLPreviewController applicationDidEnterBackground:]
  -[QLPreviewController mode]
  -[QLPreviewController .cxx_destruct]
  -[QLPreviewController viewDidLoad]
  -[QLPreviewController _preferredModalPresentationStyle]
  -[QLPreviewController activityItemsConfiguration]
  -[QLPreviewController viewWillAppear:]
  -[QLPreviewController loadView]
  -[QLPreviewController childViewControllerForStatusBarHidden]
  -[QLPreviewController navigationController:willShowViewController:animated:]
  -[QLPreviewController backgroundColor]
  -[QLPreviewController setBackgroundColor:]
  -[QLPreviewController prefersStatusBarHidden]
  -[QLPreviewController preferredStatusBarUpdateAnimation]
  -[QLPreviewController setDataSource:]
  -[QLPreviewController supportedInterfaceOrientations]
  -[QLPreviewController viewDidDisappear:]
  -[QLPreviewController personaUniqueString]
  -[QLPreviewController screenshotService:generatePDFRepresentationWithCompletion:]
  -[QLPreviewController setFullScreen:]
  -[QLPreviewController viewWillDisappear:]
  -[QLPreviewController beginInteractiveTransition]
  -[QLPreviewController setOverrideParentApplicationDisplayIdentifier:]
  -[QLPreviewController setPersonaUniqueString:]
  -[QLPreviewController strongDelegate]
  -[QLPreviewController applicationDidBecomeActive:]
  -[QLPreviewController stateManager]
  -[QLPreviewController printer]
  -[QLPreviewController pinchGesture]
  -[QLPreviewController traitCollectionDidChange:]
  -[QLPreviewController prefersHomeIndicatorAutoHidden]
  -[QLPreviewController keyCommands]
  -[QLPreviewController overrideParentApplicationDisplayIdentifier]
  -[QLPreviewController setPinchGesture:]
  -[QLPreviewController willMoveToParentViewController:]
  -[QLPreviewController sourceIsManaged]
  -[QLPreviewController accessibilityPerformEscape]
  -[QLPreviewController setToolbarTintColor:]
  -[QLPreviewController _reloadDataIfNeeded]
  -[QLPreviewController _preferredBackgroundColor]
  -[QLPreviewController _preferredWhitePointAdaptivityStyle]
  -[QLPreviewController _childViewControllerForWhitePointAdaptivityStyle]
  -[QLPreviewController setUserActivity:]
  -[QLPreviewController documentPickerWasCancelled:]
  -[QLPreviewController documentPicker:didPickDocumentsAtURLs:]
  -[QLPreviewController fullScreen]
  -[QLPreviewController _actionButton]
  -[QLPreviewController _actionButtonTapped:]
  -[QLPreviewController _prepareDelayedAppearance]
  -[QLPreviewController currentPreviewItemIndex]
  -[QLPreviewController refreshCurrentPreviewItem]
  -[QLPreviewController setCurrentOrbMode:]
  -[QLPreviewController setCurrentPreviewItemIndex:]
  -[QLPreviewController setAdditionalLeftBarButtonItems:]
  -[QLPreviewController setAdditionalRightBarButtonItems:]
  -[QLPreviewController initWithPreviewItems:]
  -[QLPreviewController setLoadingTextForMissingFiles:]
  -[QLPreviewController _doneButtonTapped:]
  -[QLPreviewController toolbarController]
  -[QLPreviewController currentPreviewItem]
  -[QLPreviewController frameForAdditionalButtonWithActionName:]
  -[QLPreviewController setAppearanceActions:]
  -[QLPreviewController presentPreviewItem:onViewController:withDelegate:animated:]
  -[QLPreviewController documentInteractionControllerDidDismissOptionsMenu:]
  -[QLPreviewController excludedActivityTypesForDocumentInteractionController:]
  -[QLPreviewController additionalActivitiesForDocumentInteractionController:]
  -[QLPreviewController activityItemForDocumentInteractionController:]
  -[QLPreviewController printInfoForDocumentInteractionController:]
  -[QLPreviewController editedItems]
  -[QLPreviewController swipeDownTracker]
  -[QLPreviewController setSwipeDownTracker:]
  -[QLPreviewController navigationBarTintColor]
  -[QLPreviewController setOverlayHidden:]
  -[QLPreviewController overlayHidden]
  -[QLPreviewController setForcedSupportedInterfaceOrientations:]
  -[QLPreviewController _updateAppearance:]
  -[QLPreviewController updatePreferredContentSize:]
  -[QLPreviewController prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewController dismissQuickLook]
  -[QLPreviewController canShowNavBar]
  -[QLPreviewController fullscreenBackgroundColor]
  -[QLPreviewController internalNavigationController]
  -[QLPreviewController sceneWillDeactivate:]
  -[QLPreviewController flexibleSpace]
  -[QLPreviewController _topNavigationItem]
  -[QLPreviewController updateTitleMenuAndDocumentProperties]
  -[QLPreviewController updateTitleMenuWithItem:]
  -[QLPreviewController createDocumentPropertiesWithItem:shareableURL:]
  -[QLPreviewController updateDocumentPropertiesActivityProviderWithShareableURL:]
  -[QLPreviewController updateDocumentPropertiesDragItemsProviderWithItem:shareableURL:]
  -[QLPreviewController updateDocumentPropertiesMetadataForItem:withShareableURL:]
  -[QLPreviewController titleMenuElementsForItem:atURL:withSuggestedActions:]
  -[QLPreviewController presentError:forAction:]
  -[QLPreviewController handleShortcutsActionOutputFile:forAction:]
  -[QLPreviewController saveToFilesActionForItem:atURL:]
  -[QLPreviewController exportActionForItem:atURL:]
  -[QLPreviewController printActionForItem:atURL:]
  -[QLPreviewController activityControllerForURL:]
  -[QLPreviewController lockPDFActionForItem:atURL:]
  -[QLPreviewController saveToPhotosActionForItem:atURL:]
  -[QLPreviewController presentSaveToPhotoError:forItem:]
  -[QLPreviewController itemProviderForItem:shareableURL:]
  -[QLPreviewController setStateManager:]
  -[QLPreviewController setScreenEdgePanWidth:]
  -[QLPreviewController _previousPreview]
  -[QLPreviewController _nextPreview]
  -[QLPreviewController _dismissQuickLookFromKeyboardCommand]
  -[QLPreviewController _keyCommandWasPerformed:]
  -[QLPreviewController itemStore:canShareItem:]
  -[QLPreviewController itemStore:canEditItem:]
  -[QLPreviewController itemStore:canHandleEditedCopyOfPreviewItem:]
  -[QLPreviewController itemStore:editedFileBehaviorForItem:]
  -[QLPreviewController itemStore:editingModeForPreviewItem:]
  -[QLPreviewController previewItemAtIndex:withCompletionHandler:]
  -[QLPreviewController setFullscreenBackgroundColor:]
  -[QLPreviewController previewCollectionUpdatePreviewItem:]
  -[QLPreviewController setToolbarCanBeVisible:]
  -[QLPreviewController setNavBarCanBeVisible:]
  -[QLPreviewController updateOverlayButtons:]
  -[QLPreviewController updateKeyCommands]
  -[QLPreviewController openURLIfAllowed:]
  -[QLPreviewController showShareSheet]
  -[QLPreviewController showShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewController triggerQuickLookDismissal]
  -[QLPreviewController getStateRestorationUserInfo:]
  -[QLPreviewController updateStateRestorationWithUserInfo:]
  -[QLPreviewController setCanChangeCurrentPage:]
  -[QLPreviewController currentPreviewItemViewControllerHasUnsavedEdits:]
  -[QLPreviewController forwardMessage:toItemAtIndex:withUUID:completionHandler:]
  -[QLPreviewController setPreviewItemDisplayState:onItemAtIndex:]
  -[QLPreviewController previewItemDisplayStateForItem:]
  -[QLPreviewController expandContentOfItemAtIndex:withUUID:unarchivedItemsURLWrapper:]
  -[QLPreviewController presentAlertControllerForScenario:]
  -[QLPreviewController updatePreviewItemAtIndex:editedCopy:completionHandler:]
  -[QLPreviewController updateTitle:]
  -[QLPreviewController remoteViewControllerWasInvalidated]
  -[QLPreviewController _updateNavigationBarBehaviorStyle]
  -[QLPreviewController _isBeingFullyDismissed]
  -[QLPreviewController _basePreviewControllerIsBeingFullyDismissed]
  -[QLPreviewController _registerForApplicationStateChangesNotifications]
  -[QLPreviewController _unregisterForApplicationStateChangesNotifications]
  -[QLPreviewController _presentPreviewCollection]
  -[QLPreviewController _presentLoadedPreviewCollection:]
  -[QLPreviewController _invalidatePreviewCollectionIfNeeded]
  -[QLPreviewController _invalidatePreviewCollectionIfNeededNow]
  -[QLPreviewController _notifyFirstAppearanceIfNeeded]
  -[QLPreviewController _configurePreviewCollectionIfNeeded]
  -[QLPreviewController _showPreviewCollection]
  -[QLPreviewController _removePreviewCollectionFromViewHierarchy]
  -[QLPreviewController viewForAdditionalButtonWithActionName:]
  -[QLPreviewController waitForPreviewCollectionWithCompletionHandler:]
  -[QLPreviewController _setCurrentPreviewItemIndex:updatePreview:animated:]
  -[QLPreviewController setCurrentPreviewItemIndex:animated:]
  -[QLPreviewController internalCurrentPreviewItem]
  -[QLPreviewController _setFullScreen:animated:force:]
  -[QLPreviewController setOverlayHidden:animated:]
  -[QLPreviewController _setPresentationMode:]
  -[QLPreviewController _updateViewHierarchyPresentation]
  -[QLPreviewController _updateToolbarSuperview]
  -[QLPreviewController previewItemAtIndex:]
  -[QLPreviewController numberOfPreviewItems]
  -[QLPreviewController setAllowInteractiveTransitions:]
  -[QLPreviewController setUseCustomActionButton:]
  -[QLPreviewController setShowActionAsDefaultButton:]
  -[QLPreviewController hasItemsToPreview]
  -[QLPreviewController setQuickLookVisibility:]
  -[QLPreviewController setQuickLookVisibility:animated:]
  -[QLPreviewController _updateBarTintColors]
  -[QLPreviewController previewCollectionPrefersWhitePointAdaptivityStyle:]
  -[QLPreviewController _updateOverlayButtonsForTraitCollection:animated:]
  -[QLPreviewController _promptUserAndOpenURLIfNeeded:]
  -[QLPreviewController setCurrentPreviewHasRemoteUnsavedEdits:]
  -[QLPreviewController currentPreviewHasUnsavedEdits]
  -[QLPreviewController _updateAllowInteractiveTransitionsIfNeeded]
  -[QLPreviewController _shouldAllowInteractiveTransitions]
  -[QLPreviewController previewItemAtIndex:wasUpdatedWithLifecycleState:withError:]
  -[QLPreviewController isTopPreviewController]
  -[QLPreviewController _topPreviewController]
  -[QLPreviewController _topViewController]
  -[QLPreviewController _topViewControllerBelongsToHierarchy:]
  -[QLPreviewController _quickLookWillBecomeVisible]
  -[QLPreviewController _isQuickLookVisible]
  -[QLPreviewController _savePreviousNavigationVCState]
  -[QLPreviewController parentIsNavigationController]
  -[QLPreviewController showNoDataViewIfNeeded]
  -[QLPreviewController hideNoDataView]
  -[QLPreviewController hasEditedItems]
  -[QLPreviewController _refreshCurrentPreviewItemAnimated:]
  -[QLPreviewController applyPreviewItemDisplayState:toItem:]
  -[QLPreviewController _setPreferredWhitePointAdaptivityStyle:]
  -[QLPreviewController _adoptPersona:andPerformBlock:]
  -[QLPreviewController previewKeyCommands]
  -[QLPreviewController setPreviewKeyCommands:]
  -[QLPreviewController canChangeCurrentPage]
  -[QLPreviewController isInteractivePopEnabled]
  -[QLPreviewController setIsInteractivePopEnabled:]
  -[QLPreviewController previousStatusBarHidden]
  -[QLPreviewController setPreviousStatusBarHidden:]
  -[QLPreviewController previewCollection]
  -[QLPreviewController previewToolbarButtons]
  -[QLPreviewController excludedToolbarButtonIdentifiers]
  -[QLPreviewController doneButtonAlertController]
  -[QLPreviewController setDoneButtonAlertController:]
  -[QLPreviewController previousNavigationVCState]
  -[QLPreviewController setInternalNavigationController:]
  -[QLPreviewController willTransitionToInternalView]
  -[QLPreviewController setWillTransitionToInternalView:]
  -[QLPreviewController didTransitionFromInternalView]
  -[QLPreviewController setDidTransitionFromInternalView:]
  -[QLPreviewController allowInteractiveTransitions]
  -[QLPreviewController previewItemStore]
  -[QLPreviewController currentItemProvider]
  -[QLPreviewController setCurrentItemProvider:]
  -[QLPreviewController customURLSharingProxyDelegate]
  -[QLPreviewController setCustomURLSharingProxyDelegate:]
  -[QLPreviewController sharingInteractionController]
  -[QLPreviewController setSharingInteractionController:]
  -[QLPreviewController shareSheetPopoverTracker]
  -[QLPreviewController setShareSheetPopoverTracker:]
  -[QLPreviewController shareSheetDismissCompletion]
  -[QLPreviewController setShareSheetDismissCompletion:]
  -[QLPreviewController accessedUrlForSharingController]
  -[QLPreviewController setAccessedUrlForSharingController:]
  -[QLPreviewController originalLeftBarButtonItems]
  -[QLPreviewController setOriginalLeftBarButtonItems:]
  -[QLPreviewController originalRightBarButtonItems]
  -[QLPreviewController setOriginalRightBarButtonItems:]
  -[QLPreviewController currentTitleFromItemViewController]
  -[QLPreviewController setCurrentTitleFromItemViewController:]
  -[QLPreviewController slideGesture]
  -[QLPreviewController setSlideGesture:]
  -[QLPreviewController rotationGesture]
  -[QLPreviewController setRotationGesture:]
  -[QLPreviewController pinchRotationTracker]
  -[QLPreviewController setPinchRotationTracker:]
  -[QLPreviewController currentAnimator]
  -[QLPreviewController setCurrentAnimator:]
  -[QLPreviewController canShowToolbar]
  -[QLPreviewController setCanShowToolbar:]
  -[QLPreviewController setCanShowNavBar:]
  -[QLPreviewController forceDismissActionsPresentation]
  -[QLPreviewController setForceDismissActionsPresentation:]
  -[QLPreviewController currentPreviewHasRemoteUnsavedEdits]
  -[QLPreviewController isObtainingEditsFromServiceBeforeDismissing]
  -[QLPreviewController setIsObtainingEditsFromServiceBeforeDismissing:]
  -[QLPreviewController quickLookVisibility]
  -[QLPreviewController appearanceActions]
  -[QLPreviewController useCustomActionButton]
  -[QLPreviewController alwaysDisplayPreviewItemTitle]
  -[QLPreviewController setAlwaysDisplayPreviewItemTitle:]
  -[QLPreviewController showActionAsDefaultButton]
  -[QLPreviewController forceModalPresentation]
  -[QLPreviewController setForceModalPresentation:]
  -[QLPreviewController additionalLeftBarButtonItems]
  -[QLPreviewController additionalRightBarButtonItems]
  -[QLPreviewController toolbarTintColor]
  -[QLPreviewController forcedSupportedInterfaceOrientations]
  -[QLPreviewController _listButton]
  -[QLPreviewController _isInPickMode]
  -[QLPreviewController _computePresentationMode]
  -[QLPreviewController registerForScreenshotService]
  -[QLPreviewController unregisterFromScreenshotService]
  -[QLPreviewController didEditCopyOfPreviewItemAtIndex:editedCopy:completionHandler:]
  -[QLPreviewController didEditCopyOfPreviewItemAtIndex:editedCopy:]
  -[QLPreviewController _didEditCopyOfPreviewItemAtIndex:editedCopy:synchronously:completionHandler:]
  -[QLPreviewController _updatePreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController _handleEditedPreviewItem:editedCopy:synchronously:completionHandler:]
  -[QLPreviewController _synchronouslyUpdateContentsOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController _asynchronouslyUpdateContentsOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewController shareableURLForCurrentPreviewItem:]
  -[QLPreviewController obtainAndUpdateEditedCopyOfCurrentPreviewItem:]
  -[QLPreviewController presentSaveToFilesForEditedItems:]
  -[QLPreviewController _openInButtonTapped:]
  -[QLPreviewController _copyToButtonTapped:]
  -[QLPreviewController _listButtonTapped:]
  -[QLPreviewController _toolbarButtonPressed:]
  -[QLPreviewController updateOverlayAnimated:forceRefresh:]
  -[QLPreviewController updateOverlayAnimated:forceRefresh:withTraitCollection:]
  -[QLPreviewController updateOverlayAnimated:animatedButtons:forceRefresh:withTraitCollection:]
  -[QLPreviewController _updateOverlayButtonsIfNeededWithTraitCollection:animated:updatedToolbarButtons:]
  -[QLPreviewController _barButtonItemArray:isEqualToArray:]
  -[QLPreviewController _numberOfButtonsExcludingSpacersInButtons:disappearingOnTap:]
  -[QLPreviewController updateStatusBarAnimated:]
  -[QLPreviewController updateRemoteOverlayIfNeeded]
  -[QLPreviewController _buttonWithAccessibilityIdentifierPointer:inButtons:]
  -[QLPreviewController _updateCurrentPopoverButtonIfNeeded:newNavigationLeftButtons:]
  -[QLPreviewController updateNavigationTitle]
  -[QLPreviewController _canDisplayOpenInButtonForItem:]
  -[QLPreviewController _shouldDisplayOpenInInChromeIfAvailable]
  -[QLPreviewController _openInButton]
  -[QLPreviewController _additionalLeftButtonItems]
  -[QLPreviewController _additionalRightButtonItems]
  -[QLPreviewController _toolBarButtonsWithTraitCollection:]
  -[QLPreviewController _navigationBarRightButtonsWithTraitCollection:]
  -[QLPreviewController _navigationBarLeftButtonsWithTraitCollection:]
  -[QLPreviewController _openInTitleForOpenInType:claimBinding:]
  -[QLPreviewController _performOpenInWithFileURL:claimBinding:additionalLaunchServicesOptions:completion:]
  -[QLPreviewController showShareSheetFromBarButton:]
  -[QLPreviewController _showShareSheetFromBarButton:]
  -[QLPreviewController showShareSheetFromRemoteViewWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewController _setupDocumentInteractionControllerForPresentation:]
  -[QLPreviewController _setupDocumentInteractionControllerForPresentationWithURL:isCustomURL:completionHandler:]
  -[QLPreviewController _stopAccessingUrlForSharingController]
  -[QLPreviewController _obtainEditsFromServiceAndNotifyPreviewCollectionOfDoneButtonTappedWithSender:]
  -[QLPreviewController _saveEditsIfNecessary:]
  -[QLPreviewController _notifyPreviewCollectionOfDoneButtonTapWithSender:]
  -[QLPreviewController _displayDismissActionsForEditedPreviewItemsIfNeeded:fromBarButtonItem:]
  -[QLPreviewController _performQuickLookDismissalAnimated:]
  -[QLPreviewController _canPerformBarButtonAction]
  -[QLPreviewController _willStartObtainingEditsFromService]
  -[QLPreviewController _didObtainEditsFromService]
  -[QLPreviewController _triggerOverlayUpdateAfterDelay]
  -[QLPreviewController shareSheetDidDismiss]
  -[QLPreviewController didSelectPreviewItem:]
  -[QLPreviewController _editedItemsForDoneActionControllerWithItems:]
  -[QLPreviewController _needsListButton]
  -[QLPreviewController _isToolbarVisibleForTraitCollection:]
  -[QLPreviewController _copyBarButtons:]
  -[QLPreviewController _displayedButtonWithAccessibilityIdentifier:]
  -[QLPreviewController currentOrbMode]
  -[QLPreviewController animatorForShowing:previewController:presentingController:]


QLDetachedSceneDelegate : NSObject <QLPreviewControllerDelegate, QLPreviewControllerDataSource, UIWindowSceneDelegate>
 @property  QLPreviewController *quicklookController
 @property  NSUserActivity *quicklookActivity
 @property  NSArray *urls
 @property  unsigned long selectedURLIndex
 @property  NSDictionary *editingModes
 @property  UIWindow *window
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLDetachedSceneDelegate sceneDidDisconnect:]
  -[QLDetachedSceneDelegate setWindow:]
  -[QLDetachedSceneDelegate previewController:previewItemAtIndex:]
  -[QLDetachedSceneDelegate sceneWillResignActive:]
  -[QLDetachedSceneDelegate numberOfPreviewItemsInPreviewController:]
  -[QLDetachedSceneDelegate sceneWillEnterForeground:]
  -[QLDetachedSceneDelegate window]
  -[QLDetachedSceneDelegate .cxx_destruct]
  -[QLDetachedSceneDelegate urls]
  -[QLDetachedSceneDelegate stateRestorationActivityForScene:]
  -[QLDetachedSceneDelegate sceneDidBecomeActive:]
  -[QLDetachedSceneDelegate previewController:editingModeForPreviewItem:]
  -[QLDetachedSceneDelegate setUrls:]
  -[QLDetachedSceneDelegate scene:willConnectToSession:options:]
  -[QLDetachedSceneDelegate previewControllerWillDismiss:]
  -[QLDetachedSceneDelegate activityFromOptions:]
  -[QLDetachedSceneDelegate quicklookController]
  -[QLDetachedSceneDelegate setQuicklookController:]
  -[QLDetachedSceneDelegate quicklookActivity]
  -[QLDetachedSceneDelegate setQuicklookActivity:]
  -[QLDetachedSceneDelegate selectedURLIndex]
  -[QLDetachedSceneDelegate setSelectedURLIndex:]
  -[QLDetachedSceneDelegate editingModes]
  -[QLDetachedSceneDelegate setEditingModes:]


QLPXObservable : NSObject
 @property  unsigned long currentChanges

  // instance methods
  -[QLPXObservable didPublishChanges]
  -[QLPXObservable _didChange]
  -[QLPXObservable _publishChanges]
  -[QLPXObservable mutableChangeObject]
  -[QLPXObservable .cxx_destruct]
  -[QLPXObservable performChanges:]
  -[QLPXObservable didPerformChanges]
  -[QLPXObservable _observersQueue_copyChangeObserversForWriteIfNeeded]
  -[QLPXObservable _willChange]
  -[QLPXObservable init]
  -[QLPXObservable registerChangeObserver:context:]
  -[QLPXObservable unregisterChangeObserver:context:]
  -[QLPXObservable signalChange:]
  -[QLPXObservable enumerateObserversUsingBlock:]
  -[QLPXObservable willPerformChanges]
  -[QLPXObservable currentChanges]
  -[QLPXObservable _applyPendingChanges]


_UIToolbarConfiguration : NSObject <NSCopying>
 @property  long long barStyle
 @property  BOOL translucent
 @property  UIImage *shadowImage
 @property  UIImage *backgroundImage
 @property  UIColor *backgroundColor
 @property  UIColor *barTintColor

  // instance methods
  -[_UIToolbarConfiguration setBackgroundImage:]
  -[_UIToolbarConfiguration setTranslucent:]
  -[_UIToolbarConfiguration shadowImage]
  -[_UIToolbarConfiguration backgroundImage]
  -[_UIToolbarConfiguration setShadowImage:]
  -[_UIToolbarConfiguration .cxx_destruct]
  -[_UIToolbarConfiguration backgroundColor]
  -[_UIToolbarConfiguration setBarStyle:]
  -[_UIToolbarConfiguration setBackgroundColor:]
  -[_UIToolbarConfiguration barStyle]
  -[_UIToolbarConfiguration copyWithZone:]
  -[_UIToolbarConfiguration isTranslucent]
  -[_UIToolbarConfiguration barTintColor]
  -[_UIToolbarConfiguration setBarTintColor:]


QLToolbarController : NSObject
 @property  UIToolbar *originalToolbar
 @property  UIToolbar *customToolbar
 @property  UIView *accessoryView
 @property  double preferredAccesoryViewHeight
 @property  BOOL accessoryViewHidden
 @property  BOOL originalToolbarHidden
 @property  BOOL hidden
 @property  double toolbarAlpha
 @property  double originalToolbarAlpha
 @property  double accessoryViewAlpha
 @property  double hiddenProgress
 @property  double accessoryViewHiddenProgress
 @property  UIColor *barTintColor
 @property  UIView *preferredSuperview
 @property  UIView *preferredParentViewForSafeAreaInset

  // instance methods
  -[QLToolbarController accessoryView]
  -[QLToolbarController updateLayout]
  -[QLToolbarController .cxx_destruct]
  -[QLToolbarController setAccessoryView:]
  -[QLToolbarController isHidden]
  -[QLToolbarController setHidden:]
  -[QLToolbarController barTintColor]
  -[QLToolbarController setBarTintColor:]
  -[QLToolbarController init]
  -[QLToolbarController _totalHeight]
  -[QLToolbarController originalToolbar]
  -[QLToolbarController customToolbar]
  -[QLToolbarController _tryToSetUp:]
  -[QLToolbarController _toolbarSafeAreaInsetBottom]
  -[QLToolbarController _computeClippingExtensionContainerBottomConstraint]
  -[QLToolbarController _computeClippingExtensionContainerHeightForCurrentHiddenProgress]
  -[QLToolbarController _originalToolbarHeightIncludingSafeAreaBottomInset:]
  -[QLToolbarController _layoutAccessoryView:]
  -[QLToolbarController _toolbarExtensionHeight]
  -[QLToolbarController _embedAccessoryView]
  -[QLToolbarController restoreOriginalToolbar]
  -[QLToolbarController restoreOriginalConfiguration]
  -[QLToolbarController setPreferredSuperview:preferredParentViewForSafeAreaInset:]
  -[QLToolbarController setAccessoryViewHidden:]
  -[QLToolbarController isAccessoryViewHidden]
  -[QLToolbarController setAccessoryViewHiddenProgress:]
  -[QLToolbarController accessoryViewHiddenProgress]
  -[QLToolbarController setHiddenProgress:]
  -[QLToolbarController setAccessoryView:animated:]
  -[QLToolbarController setOriginalToolbar:]
  -[QLToolbarController isOriginalToolbarHidden]
  -[QLToolbarController setOriginalToolbarHidden:]
  -[QLToolbarController setPreferredAccesoryViewHeight:]
  -[QLToolbarController setToolbarAlpha:]
  -[QLToolbarController setAccessoryViewAlpha:]
  -[QLToolbarController setOriginalToolbarAlpha:]
  -[QLToolbarController preferredAccesoryViewHeight]
  -[QLToolbarController toolbarAlpha]
  -[QLToolbarController originalToolbarAlpha]
  -[QLToolbarController accessoryViewAlpha]
  -[QLToolbarController hiddenProgress]
  -[QLToolbarController preferredSuperview]
  -[QLToolbarController preferredParentViewForSafeAreaInset]


QLReducedMotionTransitionDriver : QLTransitionDriver
  // instance methods
  -[QLReducedMotionTransitionDriver animateTransition]


QLItemPresenterViewController : QLItemAggregatedViewController <QLDownloadingItemViewControllerDelegate, QLItemViewControllerPresentingDelegate>
 @property  QLErrorItemViewController *errorViewController
 @property  QLLoadingItemViewController *loadingViewController
 @property  QLDownloadingItemViewController *downloadingController
 @property  QLScreenTimeItemViewController *screenTimeController
 @property  @? loadingCompletionHandler
 @property  QLItem *previewItem
 @property  id contents
 @property  QLPreviewContext *context
 @property  BOOL printing
 @property  NSString *hostApplicationBundleIdentifier
 @property  NSString *parentApplicationDisplayIdentifier
 @property  DMFApplicationPolicyMonitor *screenTimeApplicationMonitor
 @property  DMFCategoryPolicyMonitor *screenTimeCategoryMonitor
 @property  <QLItemPresenterViewControllerDelegate> *delegate
 @property  QLItemViewController *previewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  QLItemPresenterViewController *itemPresenterViewController

  // instance methods
  -[QLItemPresenterViewController isLoaded]
  -[QLItemPresenterViewController preferredContentSize]
  -[QLItemPresenterViewController contents]
  -[QLItemPresenterViewController isLoading]
  -[QLItemPresenterViewController .cxx_destruct]
  -[QLItemPresenterViewController setContents:]
  -[QLItemPresenterViewController setContext:]
  -[QLItemPresenterViewController context]
  -[QLItemPresenterViewController init]
  -[QLItemPresenterViewController previewProvider]
  -[QLItemPresenterViewController setPreviewProvider:]
  -[QLItemPresenterViewController errorViewController]
  -[QLItemPresenterViewController setErrorViewController:]
  -[QLItemPresenterViewController setPrinting:]
  -[QLItemPresenterViewController hostApplicationBundleIdentifier]
  -[QLItemPresenterViewController loadingViewController]
  -[QLItemPresenterViewController setLoadingViewController:]
  -[QLItemPresenterViewController printing]
  -[QLItemPresenterViewController previewItemViewController:didFailWithError:]
  -[QLItemPresenterViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLItemPresenterViewController previewWillAppear:]
  -[QLItemPresenterViewController previewDidAppear:]
  -[QLItemPresenterViewController previewWillDisappear:]
  -[QLItemPresenterViewController previewDidDisappear:]
  -[QLItemPresenterViewController setAppearance:animated:]
  -[QLItemPresenterViewController transitionDidStart:]
  -[QLItemPresenterViewController transitionWillFinish:didComplete:]
  -[QLItemPresenterViewController transitionDidFinish:didComplete:]
  -[QLItemPresenterViewController updatePreviewItemDisplayState:]
  -[QLItemPresenterViewController additionalItemViewControllerDescription]
  -[QLItemPresenterViewController loadingFailed]
  -[QLItemPresenterViewController previewItem]
  -[QLItemPresenterViewController setPreviewItem:]
  -[QLItemPresenterViewController setHostApplicationBundleIdentifier:]
  -[QLItemPresenterViewController showPreviewViewController:animatingWithCrossfade:]
  -[QLItemPresenterViewController downloadingItemViewControllerShouldForceAutodownloadFile:]
  -[QLItemPresenterViewController downloadingItemViewControllerDidFinishLoadingPreviewItem:withContents:]
  -[QLItemPresenterViewController parentApplicationDisplayIdentifier]
  -[QLItemPresenterViewController itemPresenterViewController]
  -[QLItemPresenterViewController initWithHostApplicationBundleIdentifier:parentApplicationDisplayIdentifier:]
  -[QLItemPresenterViewController initForPrinting:]
  -[QLItemPresenterViewController _showLoadingViewControllerDeferredIfNeeded]
  -[QLItemPresenterViewController _showReadyToDisplayPreviewViewControllerDeferredIfNeeded:]
  -[QLItemPresenterViewController _performReadyBlockIfNedded]
  -[QLItemPresenterViewController _performLoadingCompletionHandlerWithError:]
  -[QLItemPresenterViewController showErrorViewController]
  -[QLItemPresenterViewController showPreviewProviderViewController]
  -[QLItemPresenterViewController showPreviewViewController:]
  -[QLItemPresenterViewController showPreviewViewController:animatingWithCrossfade:updatingIsReadyForDisplay:]
  -[QLItemPresenterViewController isReadyForDisplayWithCompletionHandler:]
  -[QLItemPresenterViewController canAnimateFromDetailViewToFullScreenPreview]
  -[QLItemPresenterViewController _startLoadingPreviewWithContents:]
  -[QLItemPresenterViewController _currentPreviewControllerIsErrorViewController]
  -[QLItemPresenterViewController downloadingController]
  -[QLItemPresenterViewController _cancelAllDeferredApperanceUpdates]
  -[QLItemPresenterViewController _setupScreenTimeHandling]
  -[QLItemPresenterViewController _setupScreenTimeCategoryHandling]
  -[QLItemPresenterViewController _setupScreenTimeApplicationHandling]
  -[QLItemPresenterViewController _queryScreenTimePolicyForBundleIdentifier:]
  -[QLItemPresenterViewController _queryScreenTimeCategoryPolicy]
  -[QLItemPresenterViewController _didReceiveNewScreenTimeCategoryPolicy:error:]
  -[QLItemPresenterViewController _didReceiveNewScreenTimeApplicationPolicies:error:]
  -[QLItemPresenterViewController _didReceiveNewScreenTimePolicy:]
  -[QLItemPresenterViewController _showScreenTimeViewControllerWithPolicy:]
  -[QLItemPresenterViewController _hideScreenTimeViewControllerIfNeeded]
  -[QLItemPresenterViewController screenTimeController]
  -[QLItemPresenterViewController screenTimePolicyBundleIdentifier]
  -[QLItemPresenterViewController _shouldApplyScreenTimeMoviePolicyForItem:]
  -[QLItemPresenterViewController _processIsEntitledToCheckScreenTimePolicy]
  -[QLItemPresenterViewController _processIsEntitledToConfigureScreenTime]
  -[QLItemPresenterViewController setDownloadingController:]
  -[QLItemPresenterViewController setScreenTimeController:]
  -[QLItemPresenterViewController loadingCompletionHandler]
  -[QLItemPresenterViewController setLoadingCompletionHandler:]
  -[QLItemPresenterViewController setParentApplicationDisplayIdentifier:]
  -[QLItemPresenterViewController screenTimeApplicationMonitor]
  -[QLItemPresenterViewController setScreenTimeApplicationMonitor:]
  -[QLItemPresenterViewController screenTimeCategoryMonitor]
  -[QLItemPresenterViewController setScreenTimeCategoryMonitor:]


QLTransitionController : NSObject <UIViewControllerAnimatedTransitioning, QLTransitionControllerProtocol>
 @property  NSDate *setupDate
 @property  BOOL hasPerformedTransition
 @property  QLTransitionContext *quickLookTransitionContext
 @property  UIViewController *presenterViewController
 @property  QLPreviewController *previewController
 @property  UIViewController<QLCustomTransitioning> *animatedController
 @property  <UIViewControllerContextTransitioning> *transitionContext
 @property  id transitionDriver
 @property  double duration
 @property  unsigned long transitionState
 @property  BOOL showing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLTransitionController setDuration:]
  -[QLTransitionController animateTransition:]
  -[QLTransitionController transitionDuration:]
  -[QLTransitionController transitionContext]
  -[QLTransitionController setTransitionContext:]
  -[QLTransitionController transitionState]
  -[QLTransitionController .cxx_destruct]
  -[QLTransitionController completeTransition:]
  -[QLTransitionController duration]
  -[QLTransitionController setTransitionState:]
  -[QLTransitionController _performTransition]
  -[QLTransitionController showing]
  -[QLTransitionController setShowing:]
  -[QLTransitionController previewController]
  -[QLTransitionController presenterViewController]
  -[QLTransitionController updateTransitionWithProgress:]
  -[QLTransitionController completeTransition:withDuration:]
  -[QLTransitionController setUpWithTransitionContext:completionHandler:]
  -[QLTransitionController _prepareTimedForcedDismissal]
  -[QLTransitionController _performStartBlockIfNeeded]
  -[QLTransitionController tearDownTransition:]
  -[QLTransitionController _requiredVisualStateTransitions]
  -[QLTransitionController _updateOverlayTransitionWithProgress:]
  -[QLTransitionController _updateBackgroundTransitionWithProgress:]
  -[QLTransitionController _completeOverlayTransition:]
  -[QLTransitionController _completeBackgroundTransition:]
  -[QLTransitionController _view:applyFrameFromTransitionContextAsFinalFrame:isToView:]
  -[QLTransitionController forceDismissalIfNeeded]
  -[QLTransitionController _performForcedDismissal]
  -[QLTransitionController quickLookTransitionContext]
  -[QLTransitionController setQuickLookTransitionContext:]
  -[QLTransitionController animatedController]
  -[QLTransitionController transitionDriver]
  -[QLTransitionController setupDate]
  -[QLTransitionController setSetupDate:]
  -[QLTransitionController hasPerformedTransition]
  -[QLTransitionController setHasPerformedTransition:]


QLEditedItem : NSObject
 @property  <QLPreviewItem> *item
 @property  NSURL *editedFileURL

  // instance methods
  -[QLEditedItem setItem:]
  -[QLEditedItem .cxx_destruct]
  -[QLEditedItem item]
  -[QLEditedItem editedFileURL]
  -[QLEditedItem initWithItem:editedFileURL:]
  -[QLEditedItem setEditedFileURL:]


QLDismissAction : NSObject
 @property  @? completionHandler
 @property  NSString *title
 @property  long long alertStyle
 @property  BOOL shouldDismissQuickLookAutomatically

  // class methods
  +[QLDismissAction actionWithTitle:handler:]
  +[QLDismissAction actionWithTitle:alertStyle:shouldDismissQuickLookAutomatically:handler:]

  // instance methods
  -[QLDismissAction .cxx_destruct]
  -[QLDismissAction setAlertStyle:]
  -[QLDismissAction title]
  -[QLDismissAction alertStyle]
  -[QLDismissAction setTitle:]
  -[QLDismissAction setCompletionHandler:]
  -[QLDismissAction completionHandler]
  -[QLDismissAction initWithTitle:alertStyle:shouldDismissQuickLookAutomatically:handler:]
  -[QLDismissAction shouldDismissQuickLookAutomatically]
  -[QLDismissAction setShouldDismissQuickLookAutomatically:]


QLScrubView : UIView <UIGestureRecognizerDelegate>
 @property  <QLScrubViewDataSource> *dataSource
 @property  <QLScrubViewDelegate> *delegate
 @property  double topOffset
 @property  double bottomOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLScrubView defaultWidth]

  // instance methods
  -[QLScrubView topOffset]
  -[QLScrubView dataSource]
  -[QLScrubView setDelegate:]
  -[QLScrubView setFrame:]
  -[QLScrubView delegate]
  -[QLScrubView setTopOffset:]
  -[QLScrubView .cxx_destruct]
  -[QLScrubView layoutSubviews]
  -[QLScrubView setDataSource:]
  -[QLScrubView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLScrubView init]
  -[QLScrubView reloadThumbnails]
  -[QLScrubView bottomOffset]
  -[QLScrubView setBottomOffset:]
  -[QLScrubView panReceived:]
  -[QLScrubView tapReceived:]
  -[QLScrubView longTapReceived:]
  -[QLScrubView _notifyPageChanged]
  -[QLScrubView _removeThumbviews]
  -[QLScrubView selectPageNumber:]
  -[QLScrubView _handleSwipAtLocation:]
  -[QLScrubView _thumbnailFrameForPageAtIndex:]
  -[QLScrubView _showPageLabel]
  -[QLScrubView _updatePageLabelPosition]
  -[QLScrubView _hidePageLabel]
  -[QLScrubView _updateSelectedThumbnailView]


QLPageNumberView : UIView
 @property  long long pageNumber
 @property  long long pageCount

  // instance methods
  -[QLPageNumberView sizeToFit]
  -[QLPageNumberView .cxx_destruct]
  -[QLPageNumberView pageCount]
  -[QLPageNumberView layoutSubviews]
  -[QLPageNumberView drawRect:]
  -[QLPageNumberView initWithFrame:]
  -[QLPageNumberView setPageCount:]
  -[QLPageNumberView pageNumber]
  -[QLPageNumberView setPageNumber:]
  -[QLPageNumberView _indexFormatter]
  -[QLPageNumberView _updateString]
  -[QLPageNumberView _copyMutablePathForRoundedRect:radius:inverted:]


QLPULayerAnimationGroup : QLPUTimedAnimationGroup
 @property  CALayer *referenceLayer

  // instance methods
  -[QLPULayerAnimationGroup currentTime]
  -[QLPULayerAnimationGroup referenceLayer]
  -[QLPULayerAnimationGroup updateAnimations]
  -[QLPULayerAnimationGroup .cxx_destruct]
  -[QLPULayerAnimationGroup initWithReferenceLayer:]
  -[QLPULayerAnimationGroup init]


QLListViewController : UINavigationController <UITableViewDataSource, UITableViewDelegate, UIPopoverPresentationControllerDelegate>
 @property  <QLListViewControllerDelegate> *archiveDelegate
 @property  UIBarButtonItem *barButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLListViewController tableView:cellForRowAtIndexPath:]
  -[QLListViewController tableView:numberOfRowsInSection:]
  -[QLListViewController presentationController:viewControllerForAdaptivePresentationStyle:]
  -[QLListViewController tableView:shouldHighlightRowAtIndexPath:]
  -[QLListViewController tableView:estimatedHeightForRowAtIndexPath:]
  -[QLListViewController prepareForPopoverPresentation:]
  -[QLListViewController tableView:didSelectRowAtIndexPath:]
  -[QLListViewController _dismiss]
  -[QLListViewController .cxx_destruct]
  -[QLListViewController barButton]
  -[QLListViewController initWithPreviewItemStore:currentPreviewItem:]
  -[QLListViewController _updateNavigationBarVisibilityForPresentationStyle:]
  -[QLListViewController setBarButton:]
  -[QLListViewController _generateItemsAndFolders]
  -[QLListViewController _addPath:fromPreviewItem:intoArray:]
  -[QLListViewController archiveDelegate]
  -[QLListViewController setArchiveDelegate:]


QLMovieEdits : NSObject
 @property  unsigned long rightRotationsCount
 @property  double trimStartTime
 @property  double trimEndTime

  // class methods
  +[QLMovieEdits editsWithRightRotationsCount:trimStartTime:trimEndTime:]

  // instance methods
  -[QLMovieEdits isEqual:]
  -[QLMovieEdits init]
  -[QLMovieEdits rotated]
  -[QLMovieEdits setTrimStartTime:]
  -[QLMovieEdits setTrimEndTime:]
  -[QLMovieEdits trimStartTime]
  -[QLMovieEdits trimEndTime]
  -[QLMovieEdits trimmed]
  -[QLMovieEdits hasEdits]
  -[QLMovieEdits incrementRightRotationsCount]
  -[QLMovieEdits resetTrimmingValues]
  -[QLMovieEdits resetEditingValues]
  -[QLMovieEdits rightRotationsCount]
  -[QLMovieEdits setRightRotationsCount:]


QLWKWebItemViewController : QLItemViewController <WKNavigationDelegate, WKURLSchemeHandler, QLPrintingProtocol, QLScrubViewDataSource, QLScrubViewDelegate, UIScrollViewDelegate>
 @property  NSOperationQueue *operationQueue
 @property  NSCache *indexToThumbnailsCache
 @property  WKWebView *webView
 @property  QLPreviewParts *generatedDocument
 @property  NSURLSessionDataTask *generatedDocumentURLSessionTask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLWKWebItemViewController _shouldDisableJavaScriptForContentType:]

  // instance methods
  -[QLWKWebItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLWKWebItemViewController webView:decidePolicyForNavigationAction:decisionHandler:]
  -[QLWKWebItemViewController scrollViewDidScroll:]
  -[QLWKWebItemViewController webView:startURLSchemeTask:]
  -[QLWKWebItemViewController operationQueue]
  -[QLWKWebItemViewController setOperationQueue:]
  -[QLWKWebItemViewController webView:didFailProvisionalNavigation:withError:]
  -[QLWKWebItemViewController dealloc]
  -[QLWKWebItemViewController .cxx_destruct]
  -[QLWKWebItemViewController scrollView]
  -[QLWKWebItemViewController loadView]
  -[QLWKWebItemViewController setWebView:]
  -[QLWKWebItemViewController webView:didFailNavigation:withError:]
  -[QLWKWebItemViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLWKWebItemViewController webViewWebContentProcessDidTerminate:]
  -[QLWKWebItemViewController transitioningView]
  -[QLWKWebItemViewController printer]
  -[QLWKWebItemViewController webView:didFinishNavigation:]
  -[QLWKWebItemViewController webView:stopURLSchemeTask:]
  -[QLWKWebItemViewController webView]
  -[QLWKWebItemViewController preferredWhitePointAdaptivityStyle]
  -[QLWKWebItemViewController scrubView]
  -[QLWKWebItemViewController _renderer]
  -[QLWKWebItemViewController _webViewDidRequestPasswordForQuickLookDocument:]
  -[QLWKWebItemViewController currentPageNumber]
  -[QLWKWebItemViewController canSwipeToDismiss]
  -[QLWKWebItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLWKWebItemViewController canClickToToggleFullscreen]
  -[QLWKWebItemViewController canPinchToDismiss]
  -[QLWKWebItemViewController previewBecameFullScreen:animated:]
  -[QLWKWebItemViewController previewWillAppear:]
  -[QLWKWebItemViewController previewDidAppear:]
  -[QLWKWebItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLWKWebItemViewController setAppearance:animated:]
  -[QLWKWebItemViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLWKWebItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLWKWebItemViewController transitionDidStart:]
  -[QLWKWebItemViewController transitionWillFinish:didComplete:]
  -[QLWKWebItemViewController scrubView:didSelectPageAtIndex:]
  -[QLWKWebItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLWKWebItemViewController prepareForDrawingPages:ofSize:]
  -[QLWKWebItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLWKWebItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLWKWebItemViewController numberOfPagesInScrubView:]
  -[QLWKWebItemViewController scrubView:thumbnailForPage:size:withCompletionBlock:]
  -[QLWKWebItemViewController scrubView:pageSizeAtIndex:]
  -[QLWKWebItemViewController _registerRemoteProxy]
  -[QLWKWebItemViewController _prepareThumbnailView]
  -[QLWKWebItemViewController _updateScrubberVisibilityAnimated:]
  -[QLWKWebItemViewController _updateScrubberVisibilityAnimated:reloadThumbnailsIfNeeded:]
  -[QLWKWebItemViewController _updateScrubberForTraitCollection:animated:reloadThumbnailsIfNeeded:]
  -[QLWKWebItemViewController _showScrubberIfNeeded:reloadThumbnails:]
  -[QLWKWebItemViewController _hideScrubberIfNeeded:]
  -[QLWKWebItemViewController _scrollToPage:]
  -[QLWKWebItemViewController _thumbnailAtIndex:]
  -[QLWKWebItemViewController _addThumbnailToCache:atIndex:]
  -[QLWKWebItemViewController _updateConstraintConstants:]
  -[QLWKWebItemViewController indexToThumbnailsCache]
  -[QLWKWebItemViewController setIndexToThumbnailsCache:]
  -[QLWKWebItemViewController generatedDocument]
  -[QLWKWebItemViewController setGeneratedDocument:]
  -[QLWKWebItemViewController generatedDocumentURLSessionTask]
  -[QLWKWebItemViewController setGeneratedDocumentURLSessionTask:]


QLTextItemViewController : QLItemViewController <UITextViewDelegate, QLPrintingProtocol>
 @property  UISimpleTextPrintFormatter *printFormatter
 @property  UIPrintPageRenderer *pageRenderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLTextItemViewController .cxx_destruct]
  -[QLTextItemViewController scrollView]
  -[QLTextItemViewController printFormatter]
  -[QLTextItemViewController printer]
  -[QLTextItemViewController preferredWhitePointAdaptivityStyle]
  -[QLTextItemViewController textView:shouldInteractWithURL:inRange:]
  -[QLTextItemViewController canSwipeToDismiss]
  -[QLTextItemViewController pageRenderer]
  -[QLTextItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLTextItemViewController canToggleFullScreen]
  -[QLTextItemViewController canClickToToggleFullscreen]
  -[QLTextItemViewController canPinchToDismiss]
  -[QLTextItemViewController previewDidAppear:]
  -[QLTextItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLTextItemViewController setAppearance:animated:]
  -[QLTextItemViewController toolbarButtonsForTraitCollection:]
  -[QLTextItemViewController shouldRecognizeGestureRecognizer:]
  -[QLTextItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLTextItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLTextItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLTextItemViewController registeredKeyCommands]
  -[QLTextItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLTextItemViewController prepareForDrawingPages:ofSize:]
  -[QLTextItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLTextItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLTextItemViewController _updateConstraintConstants:]
  -[QLTextItemViewController _isContentPotentiallySuspicious:context:]
  -[QLTextItemViewController _setupTextViewColorsWithDocumentAttributes:]
  -[QLTextItemViewController _documentAttributesContainTextColors:]


QLDebugItemViewController : QLItemViewController
  // instance methods
  -[QLDebugItemViewController .cxx_destruct]
  -[QLDebugItemViewController canSwipeToDismiss]
  -[QLDebugItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDebugItemViewController canEnterFullScreen]
  -[QLDebugItemViewController canPinchToDismiss]
  -[QLDebugItemViewController previewWillAppear:]
  -[QLDebugItemViewController previewIsAppearingWithProgress:]
  -[QLDebugItemViewController previewWillFinishAppearing]
  -[QLDebugItemViewController previewDidAppear:]
  -[QLDebugItemViewController previewWillDisappear:]
  -[QLDebugItemViewController previewDidDisappear:]
  -[QLDebugItemViewController setAppearance:animated:]
  -[QLDebugItemViewController _encounterMethodCall:]
  -[QLDebugItemViewController _encounterMethodCall:animatedValue:]
  -[QLDebugItemViewController _addLog:logLevel:]
  -[QLDebugItemViewController _attributesForLogLevel:]


QLLivePhotoItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLLivePhotoItemTransformer allowedOutputClasses]

  // instance methods
  -[QLLivePhotoItemTransformer transformedContentsFromURL:context:error:]


QLTransitionContext : NSObject <NSSecureCoding>
 @property  UIView *sourceView
 @property  UIView *sourceViewSnapshot
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceFrame
 @property  BOOL isSourceTransformed
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceBounds
 @property  {CGPoint=dd} sourceCenter
 @property  {CGAffineTransform=dddddd} sourceTransform
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} uncroppedFrame
 @property  double topNavigationOffset
 @property  double hostNavigationOffset
 @property  BOOL usingViewForZoomTransition
 @property  {CGSize=dd} previewItemSize

  // class methods
  +[QLTransitionContext supportsSecureCoding]
  +[QLTransitionContext useZoomTransitionForPreviewController:]
  +[QLTransitionContext useImageTransitionForPreviewController:]
  +[QLTransitionContext useViewTransitionForPreviewController:]
  +[QLTransitionContext firstChildNavigationControllerFromViewController:]

  // instance methods
  -[QLTransitionContext setSourceFrame:]
  -[QLTransitionContext setSourceView:]
  -[QLTransitionContext sourceFrame]
  -[QLTransitionContext encodeWithCoder:]
  -[QLTransitionContext .cxx_destruct]
  -[QLTransitionContext sourceView]
  -[QLTransitionContext initWithCoder:]
  -[QLTransitionContext sourceViewSnapshot]
  -[QLTransitionContext setSourceViewSnapshot:]
  -[QLTransitionContext prepareContextToSend]
  -[QLTransitionContext _snapshotSourceViewIfNeeded]
  -[QLTransitionContext sourceViewSnapshotImage]
  -[QLTransitionContext initWithQLPreviewController:containerView:toViewController:]
  -[QLTransitionContext setUpTransitionSourceView]
  -[QLTransitionContext isSourceTransformed]
  -[QLTransitionContext setIsSourceTransformed:]
  -[QLTransitionContext sourceBounds]
  -[QLTransitionContext setSourceBounds:]
  -[QLTransitionContext sourceCenter]
  -[QLTransitionContext setSourceCenter:]
  -[QLTransitionContext sourceTransform]
  -[QLTransitionContext setSourceTransform:]
  -[QLTransitionContext uncroppedFrame]
  -[QLTransitionContext setUncroppedFrame:]
  -[QLTransitionContext topNavigationOffset]
  -[QLTransitionContext setTopNavigationOffset:]
  -[QLTransitionContext hostNavigationOffset]
  -[QLTransitionContext setHostNavigationOffset:]
  -[QLTransitionContext usingViewForZoomTransition]
  -[QLTransitionContext setUsingViewForZoomTransition:]
  -[QLTransitionContext previewItemSize]
  -[QLTransitionContext setPreviewItemSize:]


ARQLSandboxingURLWrapper : NSObject <NSSecureCoding>
 @property  NSURL *url

  // class methods
  +[ARQLSandboxingURLWrapper supportsSecureCoding]
  +[ARQLSandboxingURLWrapper wrapperWithURL:readonly:error:]
  +[ARQLSandboxingURLWrapper assembleURL:sandbox:physicalURL:physicalSandbox:]
  +[ARQLSandboxingURLWrapper wrapperWithURL:extensionClass:report:error:]
  +[ARQLSandboxingURLWrapper wrapperWithURL:extensionClass:error:]

  // instance methods
  -[ARQLSandboxingURLWrapper encodeWithCoder:]
  -[ARQLSandboxingURLWrapper .cxx_destruct]
  -[ARQLSandboxingURLWrapper initWithURL:extensionClass:report:error:]
  -[ARQLSandboxingURLWrapper url]
  -[ARQLSandboxingURLWrapper initWithCoder:]
  -[ARQLSandboxingURLWrapper issueSandboxExtensionForURL:extensionClass:report:error:]


QLTransitionDriver : NSObject
 @property  {CGSize=dd} transitionPreviewSize
 @property  QLItem *transitionPreviewItem
 @property  UIView *transitionContainer
 @property  UIView *destinationView
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceViewFrame
 @property  BOOL isSourceViewTransformed
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceViewBounds
 @property  {CGPoint=dd} sourceViewCenter
 @property  {CGAffineTransform=dddddd} sourceViewTransform
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} uncroppedFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} transitionContainerOriginalFrame
 @property  BOOL transitionContainerMasksToBounds
 @property  <QLDismissGestureTracking> *gestureTracker
 @property  BOOL presenting
 @property  double duration
 @property  double topNavigationOffset
 @property  double hostNavigationOffset

  // instance methods
  -[QLTransitionDriver setSourceView:]
  -[QLTransitionDriver tearDown]
  -[QLTransitionDriver setDuration:]
  -[QLTransitionDriver .cxx_destruct]
  -[QLTransitionDriver setPresenting:]
  -[QLTransitionDriver duration]
  -[QLTransitionDriver gestureTracker]
  -[QLTransitionDriver sourceView]
  -[QLTransitionDriver presenting]
  -[QLTransitionDriver animateTransition]
  -[QLTransitionDriver uncroppedFrame]
  -[QLTransitionDriver setUncroppedFrame:]
  -[QLTransitionDriver topNavigationOffset]
  -[QLTransitionDriver setTopNavigationOffset:]
  -[QLTransitionDriver hostNavigationOffset]
  -[QLTransitionDriver setHostNavigationOffset:]
  -[QLTransitionDriver transitionPreviewSize]
  -[QLTransitionDriver setTransitionPreviewSize:]
  -[QLTransitionDriver transitionPreviewItem]
  -[QLTransitionDriver setTransitionPreviewItem:]
  -[QLTransitionDriver transitionContainer]
  -[QLTransitionDriver setTransitionContainer:]
  -[QLTransitionDriver destinationView]
  -[QLTransitionDriver setDestinationView:]
  -[QLTransitionDriver sourceViewFrame]
  -[QLTransitionDriver setSourceViewFrame:]
  -[QLTransitionDriver isSourceViewTransformed]
  -[QLTransitionDriver setIsSourceViewTransformed:]
  -[QLTransitionDriver sourceViewBounds]
  -[QLTransitionDriver setSourceViewBounds:]
  -[QLTransitionDriver sourceViewCenter]
  -[QLTransitionDriver setSourceViewCenter:]
  -[QLTransitionDriver sourceViewTransform]
  -[QLTransitionDriver setSourceViewTransform:]
  -[QLTransitionDriver transitionContainerOriginalFrame]
  -[QLTransitionDriver setTransitionContainerOriginalFrame:]
  -[QLTransitionDriver transitionContainerMasksToBounds]
  -[QLTransitionDriver setTransitionContainerMasksToBounds:]
  -[QLTransitionDriver setGestureTracker:]


QLItemAggregatedViewController : QLItemViewController
 @property  QLItemViewController *currentPreviewViewController

  // instance methods
  -[QLItemAggregatedViewController appearance]
  -[QLItemAggregatedViewController accessoryView]
  -[QLItemAggregatedViewController preferredContentSize]
  -[QLItemAggregatedViewController setDelegate:]
  -[QLItemAggregatedViewController delegate]
  -[QLItemAggregatedViewController draggableView]
  -[QLItemAggregatedViewController gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[QLItemAggregatedViewController .cxx_destruct]
  -[QLItemAggregatedViewController scrollView]
  -[QLItemAggregatedViewController title]
  -[QLItemAggregatedViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLItemAggregatedViewController transitioningView]
  -[QLItemAggregatedViewController printer]
  -[QLItemAggregatedViewController preferredWhitePointAdaptivityStyle]
  -[QLItemAggregatedViewController safeAreaLayoutGuide]
  -[QLItemAggregatedViewController currentPreviewViewController]
  -[QLItemAggregatedViewController setCurrentPreviewViewController:]
  -[QLItemAggregatedViewController canSwipeToDismiss]
  -[QLItemAggregatedViewController hostApplicationDidBecomeActive]
  -[QLItemAggregatedViewController canEnterFullScreen]
  -[QLItemAggregatedViewController canToggleFullScreen]
  -[QLItemAggregatedViewController canClickToToggleFullscreen]
  -[QLItemAggregatedViewController canPinchToDismiss]
  -[QLItemAggregatedViewController canShowToolBar]
  -[QLItemAggregatedViewController canShowNavBar]
  -[QLItemAggregatedViewController canBeLocked]
  -[QLItemAggregatedViewController requestLockForCurrentItem]
  -[QLItemAggregatedViewController previewBecameFullScreen:animated:]
  -[QLItemAggregatedViewController previewWillAppear:]
  -[QLItemAggregatedViewController previewIsAppearingWithProgress:]
  -[QLItemAggregatedViewController previewWillFinishAppearing]
  -[QLItemAggregatedViewController previewDidAppear:]
  -[QLItemAggregatedViewController previewWillDisappear:]
  -[QLItemAggregatedViewController previewDidDisappear:]
  -[QLItemAggregatedViewController prepareForActionSheetPresentation]
  -[QLItemAggregatedViewController actionSheetDidDismiss]
  -[QLItemAggregatedViewController documentMenuActionWillBegin]
  -[QLItemAggregatedViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLItemAggregatedViewController setAppearance:animated:]
  -[QLItemAggregatedViewController hostSceneWillDeactivate]
  -[QLItemAggregatedViewController hostApplicationDidEnterBackground:]
  -[QLItemAggregatedViewController toolbarButtonsForTraitCollection:]
  -[QLItemAggregatedViewController excludedToolbarButtonIdentifiersForTraitCollection:]
  -[QLItemAggregatedViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLItemAggregatedViewController shouldRecognizeGestureRecognizer:]
  -[QLItemAggregatedViewController edgePanGestureWidth]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewContentOffset]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewContentInset]
  -[QLItemAggregatedViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLItemAggregatedViewController fullscreenBackgroundColor]
  -[QLItemAggregatedViewController prepareForInvalidationWithCompletionHandler:]
  -[QLItemAggregatedViewController registeredKeyCommands]
  -[QLItemAggregatedViewController handlePerformedKeyCommandIfNeeded:]
  -[QLItemAggregatedViewController transitionDidStart:]
  -[QLItemAggregatedViewController transitionWillFinish:didComplete:]
  -[QLItemAggregatedViewController transitionDidFinish:didComplete:]
  -[QLItemAggregatedViewController parallaxView]
  -[QLItemAggregatedViewController canPerformFirstTimeAppearanceActions:]
  -[QLItemAggregatedViewController performFirstTimeAppearanceActions:]
  -[QLItemAggregatedViewController notifyStateRestorationWithUserInfo:]
  -[QLItemAggregatedViewController stateRestorationDictionary]
  -[QLItemAggregatedViewController savePreviewEditedCopyWithCompletionHandler:]
  -[QLItemAggregatedViewController showPreviewViewController:animatingWithCrossfade:]
  -[QLItemAggregatedViewController showPreviewViewController:]


QLImageItemContentsTransformer : QLImageItemTransformer <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLImageItemContentsTransformer allowedOutputClasses]

  // instance methods
  -[QLImageItemContentsTransformer transformedContentsFromURL:context:error:]
  -[QLImageItemContentsTransformer transformedContentsFromData:context:error:]


QLRemoteItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLRemoteItemTransformer allowedOutputClasses]

  // instance methods
  -[QLRemoteItemTransformer transformedContentsFromURL:context:error:]
  -[QLRemoteItemTransformer transformedContentsFromSpotlightSearchableItemInfo:context:error:]


QLListCellDataGenerationOperation : QLAsynchronousOperation
 @property  unsigned long index
 @property  QLListCell *cell
 @property  QLItem *item
 @property  <QLListCellDataGenerationOperationDelegate> *delegate

  // instance methods
  -[QLListCellDataGenerationOperation setItem:]
  -[QLListCellDataGenerationOperation setIndex:]
  -[QLListCellDataGenerationOperation setDelegate:]
  -[QLListCellDataGenerationOperation index]
  -[QLListCellDataGenerationOperation delegate]
  -[QLListCellDataGenerationOperation .cxx_destruct]
  -[QLListCellDataGenerationOperation item]
  -[QLListCellDataGenerationOperation main]
  -[QLListCellDataGenerationOperation cell]
  -[QLListCellDataGenerationOperation setCell:]
  -[QLListCellDataGenerationOperation _finishIfNeeded]
  -[QLListCellDataGenerationOperation initWithListCell:index:item:delegate:]
  -[QLListCellDataGenerationOperation _didGenerateThumbnail:]
  -[QLListCellDataGenerationOperation _didDetermineFileSize:fileTypeString:]


QLLoopingMediaItemViewController : QLMediaItemBaseViewController
  // instance methods
  -[QLLoopingMediaItemViewController pause]
  -[QLLoopingMediaItemViewController dealloc]
  -[QLLoopingMediaItemViewController .cxx_destruct]
  -[QLLoopingMediaItemViewController player]
  -[QLLoopingMediaItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLLoopingMediaItemViewController play]
  -[QLLoopingMediaItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLoopingMediaItemViewController previewDidAppear:]
  -[QLLoopingMediaItemViewController setupPlayerWithMediaAsset:]
  -[QLLoopingMediaItemViewController startObservingItem]
  -[QLLoopingMediaItemViewController stopObservingItem]


QLPreviewCollectionHostContext : NSExtensionContext <QLPreviewCollectionServiceProtocol, QLPreviewCollectionHostProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewCollectionHostContext _extensionAuxiliaryHostProtocol]
  +[QLPreviewCollectionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewCollectionHostContext setNotificationCenter:]
  -[QLPreviewCollectionHostContext setIsContentManaged:]
  -[QLPreviewCollectionHostContext hostApplicationDidBecomeActive]
  -[QLPreviewCollectionHostContext prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollectionHostContext requestLockForCurrentItem]
  -[QLPreviewCollectionHostContext actionSheetDidDismiss]
  -[QLPreviewCollectionHostContext documentMenuActionWillBegin]
  -[QLPreviewCollectionHostContext setAppearance:animated:]
  -[QLPreviewCollectionHostContext hostSceneWillDeactivate]
  -[QLPreviewCollectionHostContext hostApplicationDidEnterBackground:]
  -[QLPreviewCollectionHostContext setScreenEdgePanWidth:]
  -[QLPreviewCollectionHostContext setPreviewItemDisplayState:onItemAtIndex:]
  -[QLPreviewCollectionHostContext setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollectionHostContext setAllowInteractiveTransitions:]
  -[QLPreviewCollectionHostContext tearDownTransition:]
  -[QLPreviewCollectionHostContext configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollectionHostContext toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollectionHostContext toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollectionHostContext shouldDisplayLockActivityWithCompletionHandler:]
  -[QLPreviewCollectionHostContext keyCommandsWithCompletionHandler:]
  -[QLPreviewCollectionHostContext keyCommandWasPerformed:]
  -[QLPreviewCollectionHostContext notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollectionHostContext notifyStateRestorationUserInfo:]
  -[QLPreviewCollectionHostContext getCurrentPreviewActivityUserInfoWithCompletionHandler:]
  -[QLPreviewCollectionHostContext startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollectionHostContext setLoadingString:]
  -[QLPreviewCollectionHostContext overrideParentApplicationDisplayIdentifierWithIdentifier:]
  -[QLPreviewCollectionHostContext preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollectionHostContext invalidateService]
  -[QLPreviewCollectionHostContext hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollectionHostContext saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollectionHostContext saveIntoPhotoLibraryMediaWithURLWrapper:previewItemType:completionHandler:]
  -[QLPreviewCollectionHostContext configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLPreviewCollectionHostContext getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLPreviewCollectionHostContext getNetworkObserverWithCompletionBlock:]
  -[QLPreviewCollectionHostContext _protocolService]
  -[QLPreviewCollectionHostContext _protocolServiceWithErrorHandler:]
  -[QLPreviewCollectionHostContext _synchronousProtocolServiceWithErrorHandler:]


QLPreviewCollectionServiceContext : NSExtensionContext <QLPreviewCollectionServiceProtocol>
  // class methods
  +[QLPreviewCollectionServiceContext _extensionAuxiliaryHostProtocol]
  +[QLPreviewCollectionServiceContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewCollectionServiceContext setNotificationCenter:]
  -[QLPreviewCollectionServiceContext setIsContentManaged:]
  -[QLPreviewCollectionServiceContext .cxx_destruct]
  -[QLPreviewCollectionServiceContext updateTransitionWithProgress:]
  -[QLPreviewCollectionServiceContext hostApplicationDidBecomeActive]
  -[QLPreviewCollectionServiceContext prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext requestLockForCurrentItem]
  -[QLPreviewCollectionServiceContext actionSheetDidDismiss]
  -[QLPreviewCollectionServiceContext documentMenuActionWillBegin]
  -[QLPreviewCollectionServiceContext setAppearance:animated:]
  -[QLPreviewCollectionServiceContext hostSceneWillDeactivate]
  -[QLPreviewCollectionServiceContext hostApplicationDidEnterBackground:]
  -[QLPreviewCollectionServiceContext setScreenEdgePanWidth:]
  -[QLPreviewCollectionServiceContext setPreviewItemDisplayState:onItemAtIndex:]
  -[QLPreviewCollectionServiceContext setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollectionServiceContext setAllowInteractiveTransitions:]
  -[QLPreviewCollectionServiceContext _previewCollection]
  -[QLPreviewCollectionServiceContext completeTransition:withDuration:]
  -[QLPreviewCollectionServiceContext tearDownTransition:]
  -[QLPreviewCollectionServiceContext configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollectionServiceContext toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollectionServiceContext toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollectionServiceContext shouldDisplayLockActivityWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext keyCommandsWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext keyCommandWasPerformed:]
  -[QLPreviewCollectionServiceContext notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollectionServiceContext notifyStateRestorationUserInfo:]
  -[QLPreviewCollectionServiceContext getCurrentPreviewActivityUserInfoWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollectionServiceContext setLoadingString:]
  -[QLPreviewCollectionServiceContext overrideParentApplicationDisplayIdentifierWithIdentifier:]
  -[QLPreviewCollectionServiceContext preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext invalidateService]
  -[QLPreviewCollectionServiceContext hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollectionServiceContext saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollectionServiceContext saveIntoPhotoLibraryMediaWithURLWrapper:previewItemType:completionHandler:]
  -[QLPreviewCollectionServiceContext configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLPreviewCollectionServiceContext getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLPreviewCollectionServiceContext getNetworkObserverWithCompletionBlock:]
  -[QLPreviewCollectionServiceContext _protocolHost]


QLServiceViewController : UIViewController
 @property  NSUUID *uuid
 @property  UIViewController *mainViewController

  // class methods
  +[QLServiceViewController _serviceViewControllers]
  +[QLServiceViewController _getServiceWithUUID:]

  // instance methods
  -[QLServiceViewController mainViewController]
  -[QLServiceViewController uuid]
  -[QLServiceViewController .cxx_destruct]
  -[QLServiceViewController init]
  -[QLServiceViewController preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLServiceViewController invalidateService]
  -[QLServiceViewController configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLServiceViewController _registerServiceViewController]


QLRemotePreviewCollection : _UIRemoteViewController <QLPreviewCollectionProtocol>
 @property  id request
 @property  QLRemotePreviewCollection *accessoryViewController
 @property  QLPreviewCollectionHostContext *hostContext
 @property  BOOL isAvailable
 @property  BOOL allowInteractiveTransitions

  // instance methods
  -[QLRemotePreviewCollection isRemote]
  -[QLRemotePreviewCollection accessoryViewController]
  -[QLRemotePreviewCollection setAccessoryViewController:]
  -[QLRemotePreviewCollection setIsContentManaged:]
  -[QLRemotePreviewCollection accessoryView]
  -[QLRemotePreviewCollection setRequest:]
  -[QLRemotePreviewCollection isAvailable]
  -[QLRemotePreviewCollection .cxx_destruct]
  -[QLRemotePreviewCollection viewServiceDidTerminateWithError:]
  -[QLRemotePreviewCollection request]
  -[QLRemotePreviewCollection setIsAvailable:]
  -[QLRemotePreviewCollection _updateTouchGrabbingView]
  -[QLRemotePreviewCollection hostContext]
  -[QLRemotePreviewCollection hostApplicationDidBecomeActive]
  -[QLRemotePreviewCollection setHostContext:]
  -[QLRemotePreviewCollection prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLRemotePreviewCollection requestLockForCurrentItem]
  -[QLRemotePreviewCollection actionSheetDidDismiss]
  -[QLRemotePreviewCollection documentMenuActionWillBegin]
  -[QLRemotePreviewCollection setAppearance:animated:]
  -[QLRemotePreviewCollection hostSceneWillDeactivate]
  -[QLRemotePreviewCollection hostApplicationDidEnterBackground:]
  -[QLRemotePreviewCollection setScreenEdgePanWidth:]
  -[QLRemotePreviewCollection previewItemDisplayState:wasAppliedToItemAtIndex:]
  -[QLRemotePreviewCollection setPreviewItemDisplayState:onItemAtIndex:]
  -[QLRemotePreviewCollection setCurrentPreviewItemIndex:animated:]
  -[QLRemotePreviewCollection setAllowInteractiveTransitions:]
  -[QLRemotePreviewCollection allowInteractiveTransitions]
  -[QLRemotePreviewCollection tearDownTransition:]
  -[QLRemotePreviewCollection configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLRemotePreviewCollection toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLRemotePreviewCollection toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLRemotePreviewCollection shouldDisplayLockActivityWithCompletionHandler:]
  -[QLRemotePreviewCollection keyCommandsWithCompletionHandler:]
  -[QLRemotePreviewCollection keyCommandWasPerformed:]
  -[QLRemotePreviewCollection notifyFirstTimeAppearanceWithActions:]
  -[QLRemotePreviewCollection notifyStateRestorationUserInfo:]
  -[QLRemotePreviewCollection getCurrentPreviewActivityUserInfoWithCompletionHandler:]
  -[QLRemotePreviewCollection startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLRemotePreviewCollection setLoadingString:]
  -[QLRemotePreviewCollection overrideParentApplicationDisplayIdentifierWithIdentifier:]
  -[QLRemotePreviewCollection preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLRemotePreviewCollection invalidateService]
  -[QLRemotePreviewCollection hostViewControlerTransitionToState:animated:]
  -[QLRemotePreviewCollection saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLRemotePreviewCollection saveIntoPhotoLibraryMediaWithURLWrapper:previewItemType:completionHandler:]
  -[QLRemotePreviewCollection configureAsAccessoryViewContainerForPreviewCollection:]
  -[QLRemotePreviewCollection getPreviewCollectionUUIDWithCompletionHandler:]
  -[QLRemotePreviewCollection _presentViewControllerForError:]
  -[QLRemotePreviewCollection _resetRemoteConfiguration]
  -[QLRemotePreviewCollection _isNavigationControllerGrabbingViewForInteractivePopNeeded]
  -[QLRemotePreviewCollection _addGrabbingViewIfNecessaryWithWidth:]
  -[QLRemotePreviewCollection navigationScreenEdgePanGestureRecognizer]


QLRemoteAccessoryViewController : QLRemotePreviewCollection
  // class methods
  +[QLRemoteAccessoryViewController __shouldHostRemoteTextEffectsWindow]


QLCacheItem : NSObject
 @property  QLItem *item

  // instance methods
  -[QLCacheItem setItem:]
  -[QLCacheItem .cxx_destruct]
  -[QLCacheItem item]
  -[QLCacheItem invalidate]
  -[QLCacheItem addCompletionHandler:]
  -[QLCacheItem _performHandlers]


QLDataSource : NSObject <QLPreviewItemProvider>
  // instance methods
  -[QLDataSource .cxx_destruct]
  -[QLDataSource initWithPreviewItems:]
  -[QLDataSource previewItemAtIndex:withCompletionHandler:]


QLPreviewItemStore : NSObject <QLPreviewItemProvider, QLPreviewControllerDataSource>
 @property  <QLPreviewItemProvider> *itemProvider
 @property  unsigned long numberOfItems
 @property  {_NSRange=QQ} possibleRange
 @property  <QLPreviewItemStoreDelegate> *delegate
 @property  BOOL isArchive

  // instance methods
  -[QLPreviewItemStore previewController:previewItemAtIndex:]
  -[QLPreviewItemStore numberOfPreviewItemsInPreviewController:]
  -[QLPreviewItemStore setDelegate:]
  -[QLPreviewItemStore possibleRange]
  -[QLPreviewItemStore itemProvider]
  -[QLPreviewItemStore delegate]
  -[QLPreviewItemStore numberOfItems]
  -[QLPreviewItemStore dealloc]
  -[QLPreviewItemStore .cxx_destruct]
  -[QLPreviewItemStore clearItems]
  -[QLPreviewItemStore clearCache]
  -[QLPreviewItemStore init]
  -[QLPreviewItemStore setItemProvider:]
  -[QLPreviewItemStore initWithPreviewItems:]
  -[QLPreviewItemStore isArchive]
  -[QLPreviewItemStore previewItemAtIndex:withCompletionHandler:]
  -[QLPreviewItemStore initWithItemsOfDirectoryAtURL:]
  -[QLPreviewItemStore reloadWithNumberOfPreviewItems:]
  -[QLPreviewItemStore hasLoadedItemsMatching:]
  -[QLPreviewItemStore loadedItemsMatching:]
  -[QLPreviewItemStore indexOfPreviewItem:]


QLImageItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLImageItemTransformer allowedOutputClasses]
  +[QLImageItemTransformer animatableContentTypes]

  // instance methods
  -[QLImageItemTransformer _maximumDimension]
  -[QLImageItemTransformer transformedContentsFromURL:context:error:]
  -[QLImageItemTransformer transformedContentsFromData:context:error:]
  -[QLImageItemTransformer _contentsFromCGImageSource:context:scale:]


QLPXSwipeDownTracker : NSObject
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {QLPXDisplayVelocity=dddd} trackedVelocity
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  QLPXChangeDirectionNumberFilter *verticalDirectionFilter
 @property  QLPXInitialHysteresisNumberFilter *horizontalTranslationFilter
 @property  unsigned long options
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping

  // instance methods
  -[QLPXSwipeDownTracker .cxx_destruct]
  -[QLPXSwipeDownTracker options]
  -[QLPXSwipeDownTracker initWithOptions:]
  -[QLPXSwipeDownTracker init]
  -[QLPXSwipeDownTracker trackGestureTranslation:velocity:]
  -[QLPXSwipeDownTracker dismissalProgress]
  -[QLPXSwipeDownTracker setDismissalProgress:]
  -[QLPXSwipeDownTracker shouldFinishDismissal]
  -[QLPXSwipeDownTracker setShouldFinishDismissal:]
  -[QLPXSwipeDownTracker trackedCenter]
  -[QLPXSwipeDownTracker setTrackedCenter:]
  -[QLPXSwipeDownTracker trackedBounds]
  -[QLPXSwipeDownTracker setTrackedBounds:]
  -[QLPXSwipeDownTracker trackedTransform]
  -[QLPXSwipeDownTracker setTrackedTransform:]
  -[QLPXSwipeDownTracker trackedVelocity]
  -[QLPXSwipeDownTracker setTrackedVelocity:]
  -[QLPXSwipeDownTracker finalAnimationDuration]
  -[QLPXSwipeDownTracker finalAnimationSpringDamping]
  -[QLPXSwipeDownTracker verticalDirectionFilter]
  -[QLPXSwipeDownTracker setVerticalDirectionFilter:]
  -[QLPXSwipeDownTracker horizontalTranslationFilter]
  -[QLPXSwipeDownTracker setHorizontalTranslationFilter:]
  -[QLPXSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]


QLListCellManager : NSObject <QLListCellDataGenerationOperationDelegate>
 @property  NSMutableDictionary *operations
 @property  NSOperationQueue *generationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLListCellManager operations]
  -[QLListCellManager setOperations:]
  -[QLListCellManager dealloc]
  -[QLListCellManager .cxx_destruct]
  -[QLListCellManager init]
  -[QLListCellManager generationQueue]
  -[QLListCellManager _operationDidFinish:]
  -[QLListCellManager setGenerationQueue:]
  -[QLListCellManager operation:didDetermineFileSize:fileTypeString:]
  -[QLListCellManager operation:didGenerateThumbnail:]
  -[QLListCellManager setupCell:withItem:atIndex:]


QLInteractiveTransitionController : QLTransitionController <UIViewControllerInteractiveTransitioning>
 @property  double completeProgress
 @property  double completionSpeed
 @property  long long completionCurve
 @property  BOOL wantsInteractiveStart
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLInteractiveTransitionController startInteractiveTransition:]
  -[QLInteractiveTransitionController transitionDuration:]
  -[QLInteractiveTransitionController updateTransitionWithProgress:]
  -[QLInteractiveTransitionController completeTransition:withDuration:]
  -[QLInteractiveTransitionController _performForcedDismissal]
  -[QLInteractiveTransitionController setCompleteProgress:]
  -[QLInteractiveTransitionController updateTransitionWithProgress:isFinal:]
  -[QLInteractiveTransitionController completeProgress]


QLContactItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLContactItemTransformer allowedOutputClasses]

  // instance methods
  -[QLContactItemTransformer transformedContentsFromData:context:error:]


QLWaveformView : UIView <PHVideoScrubberFilmstripView>
 @property  AVAsset *asset
 @property  UIImage *placeholderImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLWaveformView setVisibleRect:]
  -[QLWaveformView setPlaceholderImage:]
  -[QLWaveformView setAsset:]
  -[QLWaveformView .cxx_destruct]
  -[QLWaveformView asset]
  -[QLWaveformView updateImage]
  -[QLWaveformView layoutSubviews]
  -[QLWaveformView visibleRect]
  -[QLWaveformView placeholderImage]
  -[QLWaveformView _expandWaveform]
  -[QLWaveformView _updateWithWaveformImage:]


QLWaveformScrubberViewProvider : NSObject <PHVideoScrubberFilmstripViewProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLWaveformScrubberViewProvider generateWaveformForWidth:asset:updateHandler:]

  // instance methods
  -[QLWaveformScrubberViewProvider createFilmstripViewForVideoScrubberView:]


QLPageViewController : UIPageViewController <UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIScrollViewDelegate>
 @property  unsigned long currentPageIndex
 @property  UIViewController *currentPage
 @property  <QLPageViewControllerDataSource> *indexedDataSource
 @property  <UIScrollViewDelegate> *scrollViewDelegate
 @property  UIScrollView *scrollView
 @property  double parallaxIntensity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPageViewController scrollViewDidScroll:]
  -[QLPageViewController setDelegate:]
  -[QLPageViewController delegate]
  -[QLPageViewController scrollViewDelegate]
  -[QLPageViewController scrollViewDidEndDecelerating:]
  -[QLPageViewController .cxx_destruct]
  -[QLPageViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[QLPageViewController scrollView]
  -[QLPageViewController viewWillAppear:]
  -[QLPageViewController setScrollViewDelegate:]
  -[QLPageViewController setCurrentPageIndex:]
  -[QLPageViewController setDataSource:]
  -[QLPageViewController currentPage]
  -[QLPageViewController currentPageIndex]
  -[QLPageViewController _setUp]
  -[QLPageViewController scrollViewWillBeginDragging:]
  -[QLPageViewController setCurrentPageIndex:animated:]
  -[QLPageViewController init]
  -[QLPageViewController initWithCoder:]
  -[QLPageViewController pageViewController:willTransitionToViewControllers:]
  -[QLPageViewController pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:]
  -[QLPageViewController pageViewController:viewControllerBeforeViewController:]
  -[QLPageViewController pageViewController:viewControllerAfterViewController:]
  -[QLPageViewController initWithTransitionStyle:navigationOrientation:options:]
  -[QLPageViewController setViewControllers:direction:animated:completion:]
  -[QLPageViewController clearInternalCache]
  -[QLPageViewController _loadAndCacheViewControllersBeforeAndAfterIndex:]
  -[QLPageViewController _rearrangeCachedViewControllersWithNewCurrentPageIndex:]
  -[QLPageViewController _indexOfViewController:]
  -[QLPageViewController _cachedViewControllerAtIndex:offset:]
  -[QLPageViewController _viewControllerAtIndex:offset:]
  -[QLPageViewController _retrieveAndStoreViewControllerAtIndex:offset:]
  -[QLPageViewController _setCurrentPageIndex:direction:animated:completion:]
  -[QLPageViewController _setViewControllers:direction:animated:completion:]
  -[QLPageViewController setParallaxIntensity:]
  -[QLPageViewController _applyParallaxEffectWithTransitionProgress:]
  -[QLPageViewController _unsetParallaxEffect]
  -[QLPageViewController indexedDataSource]
  -[QLPageViewController setIndexedDataSource:]
  -[QLPageViewController parallaxIntensity]


QLPHSwipeDownTracker : NSObject
 @property  QLPXSwipeDownTracker *impl
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {QLPHDisplayVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping

  // instance methods
  -[QLPHSwipeDownTracker impl]
  -[QLPHSwipeDownTracker .cxx_destruct]
  -[QLPHSwipeDownTracker init]
  -[QLPHSwipeDownTracker trackGestureTranslation:velocity:]
  -[QLPHSwipeDownTracker dismissalProgress]
  -[QLPHSwipeDownTracker shouldFinishDismissal]
  -[QLPHSwipeDownTracker trackedCenter]
  -[QLPHSwipeDownTracker trackedBounds]
  -[QLPHSwipeDownTracker trackedTransform]
  -[QLPHSwipeDownTracker trackedVelocity]
  -[QLPHSwipeDownTracker finalAnimationDuration]
  -[QLPHSwipeDownTracker finalAnimationSpringDamping]
  -[QLPHSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]


QLPXCompoundNumberFilter : QLPXNumberFilter
 @property  NSArray *filters

  // instance methods
  -[QLPXCompoundNumberFilter setFilters:]
  -[QLPXCompoundNumberFilter filters]
  -[QLPXCompoundNumberFilter .cxx_destruct]
  -[QLPXCompoundNumberFilter updatedOutput]


QLPXAngleNumberFilter : QLPXNumberFilter
  // instance methods
  -[QLPXAngleNumberFilter updatedOutput]


QLPXInitialHysteresisNumberFilter : QLPXNumberFilter
 @property  double hysteresis
 @property  double outputDerivative

  // instance methods
  -[QLPXInitialHysteresisNumberFilter setHysteresis:]
  -[QLPXInitialHysteresisNumberFilter hysteresis]
  -[QLPXInitialHysteresisNumberFilter updatedOutput]
  -[QLPXInitialHysteresisNumberFilter outputDerivative]


QLPXChangeDirectionNumberFilter : QLPXNumberFilter
 @property  double minimumChange

  // instance methods
  -[QLPXChangeDirectionNumberFilter initWithInput:]
  -[QLPXChangeDirectionNumberFilter updatedOutput]
  -[QLPXChangeDirectionNumberFilter initialOutputForInput:]
  -[QLPXChangeDirectionNumberFilter minimumChange]
  -[QLPXChangeDirectionNumberFilter setMinimumChange:]


QLPXVelocityNumberFilter : QLPXNumberFilter
  // class methods
  +[QLPXVelocityNumberFilter gestureVelocityFilter]

  // instance methods
  -[QLPXVelocityNumberFilter initWithInput:]
  -[QLPXVelocityNumberFilter updatedOutput]


QLGeneratedPreviewParts : QLPreviewParts
 @property  NSData *data
 @property  NSDictionary *attachments
 @property  unsigned long stringEncoding
 @property  NSString *mimeType
 @property  NSMutableDictionary *idToURL

  // instance methods
  -[QLGeneratedPreviewParts mimeType]
  -[QLGeneratedPreviewParts .cxx_destruct]
  -[QLGeneratedPreviewParts setData:]
  -[QLGeneratedPreviewParts setAttachments:]
  -[QLGeneratedPreviewParts attachments]
  -[QLGeneratedPreviewParts data]
  -[QLGeneratedPreviewParts setMimeType:]
  -[QLGeneratedPreviewParts stringEncoding]
  -[QLGeneratedPreviewParts setStringEncoding:]
  -[QLGeneratedPreviewParts URLRequestForContentID:]
  -[QLGeneratedPreviewParts computePreview:]
  -[QLGeneratedPreviewParts initWithData:encoding:mimeType:attachments:]
  -[QLGeneratedPreviewParts _processAttachment:withID:]
  -[QLGeneratedPreviewParts newAttachmentURLWithID:mimeType:encoding:]
  -[QLGeneratedPreviewParts _registerURL:forContentID:]
  -[QLGeneratedPreviewParts idToURL]
  -[QLGeneratedPreviewParts setIdToURL:]


QLThumbnailCreationOperation : NSOperation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentRect
 @property  UIImage *image
 @property  NSError *error
 @property  NSURL *documentURL
 @property  double maximumDimension
 @property  double scaleFactor
 @property  unsigned long useMode
 @property  BOOL generateIfNeeded

  // instance methods
  -[QLThumbnailCreationOperation contentRect]
  -[QLThumbnailCreationOperation isFinished]
  -[QLThumbnailCreationOperation setScaleFactor:]
  -[QLThumbnailCreationOperation isConcurrent]
  -[QLThumbnailCreationOperation setFinished:]
  -[QLThumbnailCreationOperation error]
  -[QLThumbnailCreationOperation scaleFactor]
  -[QLThumbnailCreationOperation .cxx_destruct]
  -[QLThumbnailCreationOperation setError:]
  -[QLThumbnailCreationOperation isExecuting]
  -[QLThumbnailCreationOperation image]
  -[QLThumbnailCreationOperation _finish]
  -[QLThumbnailCreationOperation setContentRect:]
  -[QLThumbnailCreationOperation setExecuting:]
  -[QLThumbnailCreationOperation _finishWithError:]
  -[QLThumbnailCreationOperation start]
  -[QLThumbnailCreationOperation setImage:]
  -[QLThumbnailCreationOperation main]
  -[QLThumbnailCreationOperation documentURL]
  -[QLThumbnailCreationOperation setDocumentURL:]
  -[QLThumbnailCreationOperation _finishIfCancelled]
  -[QLThumbnailCreationOperation maximumDimension]
  -[QLThumbnailCreationOperation updateLastHitDateOfAddition:onPhysicalURL:]
  -[QLThumbnailCreationOperation retrieveThumbnailForTaggedLogicalURL:]
  -[QLThumbnailCreationOperation setMaximumDimension:]
  -[QLThumbnailCreationOperation useMode]
  -[QLThumbnailCreationOperation setUseMode:]
  -[QLThumbnailCreationOperation generateIfNeeded]
  -[QLThumbnailCreationOperation setGenerateIfNeeded:]


QLThumbnailDescriptor : NSObject
 @property  {CGSize=dd} size
 @property  double scaleFactor

  // class methods
  +[QLThumbnailDescriptor descriptorWithSize:scaleFactor:]

  // instance methods
  -[QLThumbnailDescriptor setScaleFactor:]
  -[QLThumbnailDescriptor scaleFactor]
  -[QLThumbnailDescriptor size]
  -[QLThumbnailDescriptor setSize:]


QLThumbnail : NSObject
 @property  NSURL *url

  // class methods
  +[QLThumbnail sharedQueue]
  +[QLThumbnail defaultDescriptors]

  // instance methods
  -[QLThumbnail setUrl:]
  -[QLThumbnail initWithURL:]
  -[QLThumbnail .cxx_destruct]
  -[QLThumbnail url]
  -[QLThumbnail thumbnailCreationOperationForUseMode:descriptor:generateIfNeeded:]
  -[QLThumbnail thumbnailCreationOperationForUseMode:descriptor:]
  -[QLThumbnail imageForUseMode:descriptor:generateIfNeeded:contentRect:error:]
  -[QLThumbnail provideImages:error:]


QLMediaItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLMediaItemTransformer allowedOutputClasses]

  // instance methods
  -[QLMediaItemTransformer transformedContentsFromURL:context:error:]


QLPinchRotationTracker : NSObject <QLDismissGestureTracking>
 @property  {CGPoint=dd} anchorPoint
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {_QLDismissGestureTrackingVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  double targetZoom
 @property  double minimumZoomForDismissal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPinchRotationTracker anchorPoint]
  -[QLPinchRotationTracker update]
  -[QLPinchRotationTracker init]
  -[QLPinchRotationTracker dismissalProgress]
  -[QLPinchRotationTracker shouldFinishDismissal]
  -[QLPinchRotationTracker trackedCenter]
  -[QLPinchRotationTracker trackedBounds]
  -[QLPinchRotationTracker trackedTransform]
  -[QLPinchRotationTracker trackedVelocity]
  -[QLPinchRotationTracker finalAnimationDuration]
  -[QLPinchRotationTracker finalAnimationSpringDamping]
  -[QLPinchRotationTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]
  -[QLPinchRotationTracker trackGestureLocation:]
  -[QLPinchRotationTracker trackScale:]
  -[QLPinchRotationTracker trackRotation:]
  -[QLPinchRotationTracker targetZoom]
  -[QLPinchRotationTracker setTargetZoom:]
  -[QLPinchRotationTracker minimumZoomForDismissal]
  -[QLPinchRotationTracker setMinimumZoomForDismissal:]


QLRoundProgressLayer : CALayer
 @property  double progress

  // class methods
  +[QLRoundProgressLayer needsDisplayForKey:]

  // instance methods
  -[QLRoundProgressLayer initWithLayer:]
  -[QLRoundProgressLayer needsDisplayOnBoundsChange]


QLRoundProgressView : UIView
 @property  double progress

  // class methods
  +[QLRoundProgressView layerClass]

  // instance methods
  -[QLRoundProgressView progress]
  -[QLRoundProgressView drawLayer:inContext:]
  -[QLRoundProgressView setProgress:]
  -[QLRoundProgressView initWithFrame:]
  -[QLRoundProgressView didMoveToWindow]
  -[QLRoundProgressView setProgress:animated:]


QLWebItemTransformer : QLItemTransformer
  // class methods
  +[QLWebItemTransformer allowedOutputClasses]

  // instance methods
  -[QLWebItemTransformer transformedContentsFromURL:context:error:]
  -[QLWebItemTransformer transformedContentsFromData:context:error:]


QLSwipeDownTracker : QLPHSwipeDownTracker <QLDismissGestureTracking>
 @property  {CGPoint=dd} anchorPoint
 @property  {CGPoint=dd} trackedCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} trackedBounds
 @property  {CGAffineTransform=dddddd} trackedTransform
 @property  {_QLDismissGestureTrackingVelocity=dddd} trackedVelocity
 @property  double finalAnimationDuration
 @property  double finalAnimationSpringDamping
 @property  double dismissalProgress
 @property  BOOL shouldFinishDismissal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLSwipeDownTracker anchorPoint]
  -[QLSwipeDownTracker trackedTransform]
  -[QLSwipeDownTracker startTrackingCenter:bounds:transform:withInitialGestureLocation:]


QLPXNumberFilter : QLPXObservable <QLPXMutableNumberFilter>
 @property  double output
 @property  double currentTime
 @property  double lastTime
 @property  double input
 @property  double time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPXNumberFilter input]
  -[QLPXNumberFilter currentTime]
  -[QLPXNumberFilter _updateIfNeeded]
  -[QLPXNumberFilter time]
  -[QLPXNumberFilter _setLastTime:]
  -[QLPXNumberFilter mutableChangeObject]
  -[QLPXNumberFilter _needsUpdate]
  -[QLPXNumberFilter setTime:]
  -[QLPXNumberFilter initWithInput:]
  -[QLPXNumberFilter performChanges:]
  -[QLPXNumberFilter setInput:]
  -[QLPXNumberFilter _setNeedsUpdate]
  -[QLPXNumberFilter didPerformChanges]
  -[QLPXNumberFilter updatedOutput]
  -[QLPXNumberFilter lastTime]
  -[QLPXNumberFilter init]
  -[QLPXNumberFilter output]
  -[QLPXNumberFilter initialOutputForInput:]
  -[QLPXNumberFilter _setOutput:]
  -[QLPXNumberFilter invalidateOutput]
  -[QLPXNumberFilter _invalidateOutput]
  -[QLPXNumberFilter _updateOutputIfNeeded]


QLWebLocationItemViewController : QLItemViewController
  // instance methods
  -[QLWebLocationItemViewController dealloc]
  -[QLWebLocationItemViewController .cxx_destruct]
  -[QLWebLocationItemViewController scrollView]
  -[QLWebLocationItemViewController loadView]
  -[QLWebLocationItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLWebLocationItemViewController canSwipeToDismiss]
  -[QLWebLocationItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLWebLocationItemViewController canEnterFullScreen]
  -[QLWebLocationItemViewController canPinchToDismiss]
  -[QLWebLocationItemViewController setAppearance:animated:]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewContentOffset]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewContentInset]
  -[QLWebLocationItemViewController automaticallyUpdateScrollViewIndicatorInset]
  -[QLWebLocationItemViewController _updateConstraintConstants:]


QLPreviewPrinter : UIPrintPageRenderer
 @property  <QLPrintingProtocol> *printer

  // instance methods
  -[QLPreviewPrinter .cxx_destruct]
  -[QLPreviewPrinter printer]
  -[QLPreviewPrinter numberOfPages]
  -[QLPreviewPrinter drawPageAtIndex:inRect:]
  -[QLPreviewPrinter prepareForDrawingPages:]
  -[QLPreviewPrinter initWithPreviewPrinter:]


QLPreviewItemPrinter : QLPreviewPrinter
 @property  <QLPrintingProtocol> *itemPrinter
 @property  QLItemPresenterViewController *presenter

  // instance methods
  -[QLPreviewItemPrinter setPresenter:]
  -[QLPreviewItemPrinter .cxx_destruct]
  -[QLPreviewItemPrinter presenter]
  -[QLPreviewItemPrinter printer]
  -[QLPreviewItemPrinter numberOfPages]
  -[QLPreviewItemPrinter initWithItem:]
  -[QLPreviewItemPrinter drawPageAtIndex:inRect:]
  -[QLPreviewItemPrinter prepareForDrawingPages:]
  -[QLPreviewItemPrinter _didReceivePrinter:]
  -[QLPreviewItemPrinter _waitForPrinterSynchronously]
  -[QLPreviewItemPrinter itemPrinter]
  -[QLPreviewItemPrinter setItemPrinter:]


_QLAudioScrubberViewContainer : UIView
  // instance methods
  -[_QLAudioScrubberViewContainer intrinsicContentSize]
  -[_QLAudioScrubberViewContainer init]


QLAudioItemViewController : QLMediaItemViewController <UIGestureRecognizerDelegate>
 @property  NSLayoutConstraint *topScrubber
 @property  UIView *scrubberContainer
 @property  BOOL scrubbing
 @property  double scrubberVerticalOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLAudioItemViewController accessoryView]
  -[QLAudioItemViewController setScrubbing:]
  -[QLAudioItemViewController dealloc]
  -[QLAudioItemViewController .cxx_destruct]
  -[QLAudioItemViewController scrubbing]
  -[QLAudioItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLAudioItemViewController _tapRecognized:]
  -[QLAudioItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLAudioItemViewController canEnterFullScreen]
  -[QLAudioItemViewController previewDidAppear:]
  -[QLAudioItemViewController previewDidDisappear:]
  -[QLAudioItemViewController transitionDidStart:]
  -[QLAudioItemViewController transitionDidFinish:didComplete:]
  -[QLAudioItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLAudioItemViewController performFirstTimeAppearanceActions:]
  -[QLAudioItemViewController addScrubberWithDeferral]
  -[QLAudioItemViewController setPlayControlsHidden:animated:]
  -[QLAudioItemViewController didChangePlayingStatus]
  -[QLAudioItemViewController timeLabelScrollView]
  -[QLAudioItemViewController topScrubber]
  -[QLAudioItemViewController setTopScrubber:]
  -[QLAudioItemViewController scrubberContainer]
  -[QLAudioItemViewController setScrubberContainer:]
  -[QLAudioItemViewController scrubberVerticalOffset]
  -[QLAudioItemViewController setScrubberVerticalOffset:]


QLNotificationCenter : NSObject <QLNotificationCenterProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLNotificationCenter sharedInstance]

  // instance methods
  -[QLNotificationCenter unregisterObserver:]
  -[QLNotificationCenter .cxx_destruct]
  -[QLNotificationCenter registerObserver:]
  -[QLNotificationCenter postNotificationName:userInfo:]
  -[QLNotificationCenter init]
  -[QLNotificationCenter _indexOfObserver:]
  -[QLNotificationCenter _tryPostingNotificationName:userInfo:]
  -[QLNotificationCenter _bufferNotificationName:userInfo:]
  -[QLNotificationCenter setRemoteNotificationCenter:]
  -[QLNotificationCenter _sendEnqueuedNotifications]


QLPULayerAnimation : QLPUAnimationGroup <CAAnimationDelegate>
 @property  CAAnimation *_animation
 @property  CALayer *layer
 @property  NSString *key
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPULayerAnimation _animation]
  -[QLPULayerAnimation animationDidStart:]
  -[QLPULayerAnimation finishImmediately]
  -[QLPULayerAnimation layer]
  -[QLPULayerAnimation _setAnimation:]
  -[QLPULayerAnimation .cxx_destruct]
  -[QLPULayerAnimation animationDidStop:finished:]
  -[QLPULayerAnimation setSpeed:timeOffset:beginTime:]
  -[QLPULayerAnimation key]
  -[QLPULayerAnimation isReadyToComplete]
  -[QLPULayerAnimation initWithLayer:key:]
  -[QLPULayerAnimation init]
  -[QLPULayerAnimation _updateLayerAnimation]


QLLivePhotoItemViewController : QLScrollableContentItemViewController <PHLivePhotoViewDelegate, UIGestureRecognizerDelegate, QLImageAnalysisManagerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *imageAnalysisView
 @property  UIImage *imageForAnalysis
 @property  NSDictionary *clientPreviewOptions

  // instance methods
  -[QLLivePhotoItemViewController livePhotoView:willBeginPlaybackWithStyle:]
  -[QLLivePhotoItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLLivePhotoItemViewController livePhotoView:didEndPlaybackWithStyle:]
  -[QLLivePhotoItemViewController imageSize]
  -[QLLivePhotoItemViewController gestureRecognizerShouldBegin:]
  -[QLLivePhotoItemViewController livePhotoView:canBeginPlaybackWithStyle:]
  -[QLLivePhotoItemViewController .cxx_destruct]
  -[QLLivePhotoItemViewController gestureRecognizer:shouldReceiveTouch:]
  -[QLLivePhotoItemViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLLivePhotoItemViewController livePhotoView:extraMinimumTouchDurationForTouch:withStyle:]
  -[QLLivePhotoItemViewController traitCollectionDidChange:]
  -[QLLivePhotoItemViewController preferredWhitePointAdaptivityStyle]
  -[QLLivePhotoItemViewController didScroll:]
  -[QLLivePhotoItemViewController didZoom:]
  -[QLLivePhotoItemViewController clientPreviewOptions]
  -[QLLivePhotoItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLivePhotoItemViewController canEnterFullScreen]
  -[QLLivePhotoItemViewController canToggleFullScreen]
  -[QLLivePhotoItemViewController previewBecameFullScreen:animated:]
  -[QLLivePhotoItemViewController previewWillAppear:]
  -[QLLivePhotoItemViewController previewWillFinishAppearing]
  -[QLLivePhotoItemViewController previewDidAppear:]
  -[QLLivePhotoItemViewController previewWillDisappear:]
  -[QLLivePhotoItemViewController previewDidDisappear:]
  -[QLLivePhotoItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLLivePhotoItemViewController setAppearance:animated:]
  -[QLLivePhotoItemViewController toolbarButtonsForTraitCollection:]
  -[QLLivePhotoItemViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLLivePhotoItemViewController transitionDidStart:]
  -[QLLivePhotoItemViewController transitionDidFinish:didComplete:]
  -[QLLivePhotoItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLLivePhotoItemViewController performFirstTimeAppearanceActions:]
  -[QLLivePhotoItemViewController imageAnalysisView]
  -[QLLivePhotoItemViewController imageForAnalysis]
  -[QLLivePhotoItemViewController imageAnalyzerWantsUpdateInfoButtonWithAnimation:]
  -[QLLivePhotoItemViewController imageAnalyzerWantsUpdateOverlayViews]
  -[QLLivePhotoItemViewController imageAnalysisInteractionWillPresentVisualSearchController]
  -[QLLivePhotoItemViewController imageAnalysisInteractionDidDismissVisualSearchController]
  -[QLLivePhotoItemViewController _updateLivePhotoBadgeAnimated:]
  -[QLLivePhotoItemViewController _wasJustPlaying]
  -[QLLivePhotoItemViewController didEndZoomingAtScale:]
  -[QLLivePhotoItemViewController willBeginZooming]
  -[QLLivePhotoItemViewController _setupAndStartImageAnalysisIfNeeded]
  -[QLLivePhotoItemViewController _updateAnalysisButtonsContainerConstraints]
  -[QLLivePhotoItemViewController adjustImageInteractionForScrollEvent:]
  -[QLLivePhotoItemViewController _updateImageAnalysisInteractionAnimated:]
  -[QLLivePhotoItemViewController _isPointInNonImageSubjectItems:]


QLPreviewScrollView : UIScrollView <UIScrollViewDelegate>
 @property  BOOL needsZoomUpdate
 @property  {CGSize=dd} contentViewSize
 @property  double minZoomScale
 @property  double maxZoomScale
 @property  double pinchMaxZoomScale
 @property  double fillZoomScale
 @property  double fitZoomScale
 @property  double contentIsSmallerThanView
 @property  <QLPreviewScrollViewZoomDelegate> *zoomDelegate
 @property  BOOL preventZoomUpdate
 @property  BOOL shouldFit
 @property  {UIEdgeInsets=dddd} peripheryInsetsLandscape
 @property  {UIEdgeInsets=dddd} peripheryInsetsPortrait
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLPreviewScrollView scrollViewWillBeginZooming:withView:]
  -[QLPreviewScrollView scrollViewDidEndZooming:withView:atScale:]
  -[QLPreviewScrollView scrollViewDidScroll:]
  -[QLPreviewScrollView viewForZoomingInScrollView:]
  -[QLPreviewScrollView zoomDelegate]
  -[QLPreviewScrollView .cxx_destruct]
  -[QLPreviewScrollView scrollViewDidZoom:]
  -[QLPreviewScrollView layoutSubviews]
  -[QLPreviewScrollView setZoomDelegate:]
  -[QLPreviewScrollView init]
  -[QLPreviewScrollView minZoomScale]
  -[QLPreviewScrollView maxZoomScale]
  -[QLPreviewScrollView updateZoomScales]
  -[QLPreviewScrollView resetZoomScale]
  -[QLPreviewScrollView setContentViewSize:]
  -[QLPreviewScrollView contentViewSize]
  -[QLPreviewScrollView zoomRectForScale:withCenter:]
  -[QLPreviewScrollView setNeedsZoomUpdate:]
  -[QLPreviewScrollView _updateScrollViewZomming]
  -[QLPreviewScrollView _maxZoomScaleForContentSize:]
  -[QLPreviewScrollView updateZoomScalesWithSize:]
  -[QLPreviewScrollView needsZoomUpdate]
  -[QLPreviewScrollView pinchMaxZoomScale]
  -[QLPreviewScrollView fillZoomScale]
  -[QLPreviewScrollView fitZoomScale]
  -[QLPreviewScrollView contentIsSmallerThanView]
  -[QLPreviewScrollView preventZoomUpdate]
  -[QLPreviewScrollView setPreventZoomUpdate:]
  -[QLPreviewScrollView shouldFit]
  -[QLPreviewScrollView setShouldFit:]
  -[QLPreviewScrollView peripheryInsetsLandscape]
  -[QLPreviewScrollView setPeripheryInsetsLandscape:]
  -[QLPreviewScrollView peripheryInsetsPortrait]
  -[QLPreviewScrollView setPeripheryInsetsPortrait:]


QLScrollableContentItemViewController : QLItemViewController <QLPreviewScrollViewZoomDelegate>
 @property  UIView *contentView
 @property  BOOL shouldFit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLScrollableContentItemViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[QLScrollableContentItemViewController contentView]
  -[QLScrollableContentItemViewController _doubleTapRecognized:]
  -[QLScrollableContentItemViewController imageSize]
  -[QLScrollableContentItemViewController .cxx_destruct]
  -[QLScrollableContentItemViewController scrollView]
  -[QLScrollableContentItemViewController loadView]
  -[QLScrollableContentItemViewController setContentView:]
  -[QLScrollableContentItemViewController init]
  -[QLScrollableContentItemViewController didScroll:]
  -[QLScrollableContentItemViewController didZoom:]
  -[QLScrollableContentItemViewController canPinchToDismiss]
  -[QLScrollableContentItemViewController previewWillAppear:]
  -[QLScrollableContentItemViewController previewDidAppear:]
  -[QLScrollableContentItemViewController previewDidDisappear:]
  -[QLScrollableContentItemViewController setAppearance:animated:]
  -[QLScrollableContentItemViewController supportsScrollingUpAndDownUsingKeyCommands]
  -[QLScrollableContentItemViewController transitionWillFinish:didComplete:]
  -[QLScrollableContentItemViewController parallaxView]
  -[QLScrollableContentItemViewController didEndZoomingAtScale:]
  -[QLScrollableContentItemViewController willBeginZooming]
  -[QLScrollableContentItemViewController previewScrollViewShouldResizeContentBasedOnPeripheryInsets:]
  -[QLScrollableContentItemViewController previewScrollView:extraMinimumZoomForMinimumZoomScale:maximumZoomScale:]
  -[QLScrollableContentItemViewController previewScrollViewWillBeginZooming:]
  -[QLScrollableContentItemViewController previewScrollView:didEndZoomingAtScale:]
  -[QLScrollableContentItemViewController previewScrollViewDidZoom:]
  -[QLScrollableContentItemViewController previewScrollViewDidScroll:]
  -[QLScrollableContentItemViewController shouldFit]
  -[QLScrollableContentItemViewController setShouldFit:]
  -[QLScrollableContentItemViewController _updateScrollViewZoomUpdate:]
  -[QLScrollableContentItemViewController shouldLayoutContentBasedOnPeripheryInsets]


QLPreviewMockScene : NSObject <QLPreviewControllerConforming>
 @property  <QLPreviewControllerConformingDataSource> *dataSource
 @property  <QLPreviewControllerConformingDelegate> *delegate
 @property  long long currentPreviewItemIndex
 @property  <QLPreviewItem> *currentPreviewItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewMockScene canPreviewItem:]
  +[QLPreviewMockScene requestPreviewMockSceneActivation]

  // instance methods
  -[QLPreviewMockScene reloadData]
  -[QLPreviewMockScene dataSource]
  -[QLPreviewMockScene setDelegate:]
  -[QLPreviewMockScene delegate]
  -[QLPreviewMockScene .cxx_destruct]
  -[QLPreviewMockScene setDataSource:]
  -[QLPreviewMockScene init]
  -[QLPreviewMockScene currentPreviewItemIndex]
  -[QLPreviewMockScene refreshCurrentPreviewItem]
  -[QLPreviewMockScene setCurrentPreviewItemIndex:]
  -[QLPreviewMockScene dismissPreview]
  -[QLPreviewMockScene presentPreview]
  -[QLPreviewMockScene currentPreviewItem]


QLLoadingItemViewController : QLItemViewController
  // instance methods
  -[QLLoadingItemViewController setDelegate:]
  -[QLLoadingItemViewController .cxx_destruct]
  -[QLLoadingItemViewController canSwipeToDismiss]
  -[QLLoadingItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLLoadingItemViewController canEnterFullScreen]
  -[QLLoadingItemViewController canPinchToDismiss]
  -[QLLoadingItemViewController previewBecameFullScreen:animated:]
  -[QLLoadingItemViewController _updateLoadingLabel]


QLDictionaryItemTransformer : NSObject <QLItemTransformerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLDictionaryItemTransformer allowedOutputClasses]

  // instance methods
  -[QLDictionaryItemTransformer transformedContentsFromURL:context:error:]
  -[QLDictionaryItemTransformer transformedContentsFromData:context:error:]


QLMovieItemAggregatedViewController : QLItemAggregatedViewController
  // instance methods
  -[QLMovieItemAggregatedViewController .cxx_destruct]
  -[QLMovieItemAggregatedViewController loadPreviewControllerWithContents:context:completionHandler:]


QLZoomTransitionDriver : QLTransitionDriver
  // class methods
  +[QLZoomTransitionDriver cropView:toAvoidNavigationOffset:presenting:animationDuration:]

  // instance methods
  -[QLZoomTransitionDriver tearDown]
  -[QLZoomTransitionDriver .cxx_destruct]
  -[QLZoomTransitionDriver animateTransition]
  -[QLZoomTransitionDriver _performZoomTransition]


QLListCell : UITableViewCell
 @property  QLItem *item
 @property  NSString *folderName
 @property  long long fileDepthLevel
 @property  NSString *subtitleString
 @property  UIImage *thumbnail
 @property  unsigned long row

  // class methods
  +[QLListCell listCell]

  // instance methods
  -[QLListCell setItem:]
  -[QLListCell setThumbnail:]
  -[QLListCell .cxx_destruct]
  -[QLListCell prepareForReuse]
  -[QLListCell setSubtitleString:]
  -[QLListCell item]
  -[QLListCell row]
  -[QLListCell awakeFromNib]
  -[QLListCell thumbnail]
  -[QLListCell subtitleString]
  -[QLListCell setRow:]
  -[QLListCell folderName]
  -[QLListCell setFolderName:]
  -[QLListCell _folderImage]
  -[QLListCell setFileDepthLevel:]
  -[QLListCell fileDepthLevel]


QLImageData : NSObject
  // instance methods
  -[QLImageData type]
  -[QLImageData orientation]
  -[QLImageData dealloc]
  -[QLImageData durations]
  -[QLImageData count]
  -[QLImageData size]
  -[QLImageData imageAtIndex:]
  -[QLImageData initWithImageSource:]


QLImageAnalysisManager : NSObject <VKCImageAnalysisInteractionDelegate>
 @property  VKCImageAnalysisInteraction *imageInteraction
 @property  VKCImageAnalyzer *imageAnalyzer
 @property  int imageAnalysisRequestId
 @property  <QLImageAnalysisManagerDelegate> *delegate
 @property  QLToolbarButton *imageAnalysisToolbarButton
 @property  BOOL shouldHighlightTextAndDDAfterNextAnalysis
 @property  BOOL shouldEnterVisualSearchAfterNextAnalysis
 @property  BOOL shouldUpliftSubjectAfterNextAnalysis
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLImageAnalysisManager shouldStartImageAnalysisForPresentationMode:]

  // instance methods
  -[QLImageAnalysisManager setImageInteraction:]
  -[QLImageAnalysisManager imageInteraction]
  -[QLImageAnalysisManager imageAnalysisInteractionDidDismissVisualSearchController:]
  -[QLImageAnalysisManager imageAnalysisInteraction:shouldBeginAtPoint:forAnalysisType:]
  -[QLImageAnalysisManager imageAnalyzer]
  -[QLImageAnalysisManager imageAnalysisInteraction:didTapVisualSearchIndicatorWithNormalizedBoundingBox:]
  -[QLImageAnalysisManager setDelegate:]
  -[QLImageAnalysisManager delegate]
  -[QLImageAnalysisManager dealloc]
  -[QLImageAnalysisManager .cxx_destruct]
  -[QLImageAnalysisManager hasActiveTextSelection]
  -[QLImageAnalysisManager dataDetectorExistsAtPoint:]
  -[QLImageAnalysisManager image]
  -[QLImageAnalysisManager actionInfoItemExistsAtPoint:]
  -[QLImageAnalysisManager textExistsAtPoint:]
  -[QLImageAnalysisManager cancelAllRequests]
  -[QLImageAnalysisManager visualSearchExistsAtPoint:]
  -[QLImageAnalysisManager imageSubjectExistsAtPoint:]
  -[QLImageAnalysisManager setImageAnalyzer:]
  -[QLImageAnalysisManager imageAnalysisInteraction:prepareForCalloutAction:competion:]
  -[QLImageAnalysisManager dataDetectorDetectionControllerWillPresentAction:]
  -[QLImageAnalysisManager dataDetectorDetectionControllerDidDismissAction:]
  -[QLImageAnalysisManager initWithDelegate:presentingView:]
  -[QLImageAnalysisManager _setupImageAnalysis]
  -[QLImageAnalysisManager _setupNotificationsObservation]
  -[QLImageAnalysisManager _setupAnalysisButtonsContainerInView:]
  -[QLImageAnalysisManager _defaultInteractionTypes]
  -[QLImageAnalysisManager _updateAnalysisButtonWithAnimation:]
  -[QLImageAnalysisManager _updateAnalysisButtonContainerWithAnimation:]
  -[QLImageAnalysisManager _activateInteractionTypes:]
  -[QLImageAnalysisManager setupAnalysisButtonsContainer]
  -[QLImageAnalysisManager imageAnalysisQueue]
  -[QLImageAnalysisManager startImageAnalysis]
  -[QLImageAnalysisManager _startImageAnalysisWithRequest:]
  -[QLImageAnalysisManager _handleImageAnalysis:error:]
  -[QLImageAnalysisManager _updateInfoButtonWithAnimation:]
  -[QLImageAnalysisManager updateBottomRightContainerPositionForImageView:view:]
  -[QLImageAnalysisManager updateForFullScreen:animated:]
  -[QLImageAnalysisManager stopImageAnalysis]
  -[QLImageAnalysisManager imageAnalysisToolbarButton]
  -[QLImageAnalysisManager hasAnalysis]
  -[QLImageAnalysisManager isAnalysisOngoing]
  -[QLImageAnalysisManager addInteractionIfNeeded]
  -[QLImageAnalysisManager enableMarkupMode:]
  -[QLImageAnalysisManager isInteractionActive]
  -[QLImageAnalysisManager hasResultsForVisualSearch]
  -[QLImageAnalysisManager isVisualSearchEnabled]
  -[QLImageAnalysisManager isTextSelectionEnabled]
  -[QLImageAnalysisManager isImageSubjectHighlightingEnabled]
  -[QLImageAnalysisManager infoButtonTapped]
  -[QLImageAnalysisManager shouldHideInteraction:animated:]
  -[QLImageAnalysisManager activateVisualSearchInteraction]
  -[QLImageAnalysisManager adjustImageInteractionForScrollView:]
  -[QLImageAnalysisManager imageAnalysisPopoverWillAppear]
  -[QLImageAnalysisManager imageAnalysisPopoverDidDisappear]
  -[QLImageAnalysisManager shouldHighlightTextAndDDAfterNextAnalysis]
  -[QLImageAnalysisManager setShouldHighlightTextAndDDAfterNextAnalysis:]
  -[QLImageAnalysisManager shouldEnterVisualSearchAfterNextAnalysis]
  -[QLImageAnalysisManager setShouldEnterVisualSearchAfterNextAnalysis:]
  -[QLImageAnalysisManager shouldUpliftSubjectAfterNextAnalysis]
  -[QLImageAnalysisManager setShouldUpliftSubjectAfterNextAnalysis:]
  -[QLImageAnalysisManager imageAnalysisRequestId]
  -[QLImageAnalysisManager setImageAnalysisRequestId:]


QLVideoScrubberView : UIView <PHVideoScrubberViewInteractionDelegate>
 @property  BOOL touchGestureIsActive
 @property  BOOL userInteractingWithScrubber
 @property  UIScrollView *scrollView
 @property  PHVideoScrubberView *photosScrubber
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLVideoScrubberView .cxx_destruct]
  -[QLVideoScrubberView scrollView]
  -[QLVideoScrubberView layoutSubviews]
  -[QLVideoScrubberView didBeginTouchingVideoScrubberView:]
  -[QLVideoScrubberView didEndTouchingVideoScrubberView:]
  -[QLVideoScrubberView videoScrubberView:willBeginDraggingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:didEndDraggingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:willBeginDeceleratingInScrollView:]
  -[QLVideoScrubberView videoScrubberView:didEndDeceleratingInScrollView:]
  -[QLVideoScrubberView photosScrubber]
  -[QLVideoScrubberView _updateUserInteractingWithScrubberIfNeeded]
  -[QLVideoScrubberView isUserInteractingWithScrubber]
  -[QLVideoScrubberView setUserInteractingWithScrubber:]
  -[QLVideoScrubberView touchGestureIsActive]
  -[QLVideoScrubberView setTouchGestureIsActive:]


QLPUAnimationGroup : NSObject
 @property  QLPUAnimationGroup *superAnimationGroup
 @property  NSMutableArray *subAnimationGroups
 @property  @? completionHandler
 @property  BOOL readyToComplete
 @property  double elapsedTime
 @property  BOOL paused

  // class methods
  +[QLPUAnimationGroup animationGroupWithAnimations:]
  +[QLPUAnimationGroup pushAnimationGroup:]
  +[QLPUAnimationGroup popAnimationGroup:]

  // instance methods
  -[QLPUAnimationGroup elapsedTime]
  -[QLPUAnimationGroup finishImmediately]
  -[QLPUAnimationGroup complete]
  -[QLPUAnimationGroup setElapsedTime:]
  -[QLPUAnimationGroup setPaused:]
  -[QLPUAnimationGroup isPaused]
  -[QLPUAnimationGroup dealloc]
  -[QLPUAnimationGroup .cxx_destruct]
  -[QLPUAnimationGroup isReadyToComplete]
  -[QLPUAnimationGroup setCompletionHandler:]
  -[QLPUAnimationGroup completionHandler]
  -[QLPUAnimationGroup addSubAnimationGroup:]
  -[QLPUAnimationGroup setSuperAnimationGroup:]
  -[QLPUAnimationGroup completeIfNeeded]
  -[QLPUAnimationGroup pauseAnimations]
  -[QLPUAnimationGroup resumeAnimations]
  -[QLPUAnimationGroup superAnimationGroup]
  -[QLPUAnimationGroup subAnimationGroups]


QLPreviewSceneOptions : NSObject
 @property  long long initialPreviewIndex

  // instance methods
  -[QLPreviewSceneOptions initialPreviewIndex]
  -[QLPreviewSceneOptions setInitialPreviewIndex:]


QLPreviewSceneActivationConfiguration : UIWindowSceneActivationConfiguration
  // instance methods
  -[QLPreviewSceneActivationConfiguration setOptions:]
  -[QLPreviewSceneActivationConfiguration initWithItemsAtURLs:options:]


QLAnimatedImage : NSObject
  // instance methods
  -[QLAnimatedImage frameCount]
  -[QLAnimatedImage dealloc]
  -[QLAnimatedImage .cxx_destruct]
  -[QLAnimatedImage duration]
  -[QLAnimatedImage frameAtTime:]
  -[QLAnimatedImage initWithImageSource:]
  -[QLAnimatedImage indexForTime:]
  -[QLAnimatedImage generateDurations]
  -[QLAnimatedImage time:belongsToIndex:]


QLFileIconImageView : UIImageView
 @property  double cornerRadius

  // instance methods
  -[QLFileIconImageView setCornerRadius:]
  -[QLFileIconImageView cornerRadius]
  -[QLFileIconImageView initWithCoder:]


QLDetailItemViewControllerState : NSObject
 @property  NSString *actionButtonTitle
 @property  UIView *actionButtonView
 @property  BOOL informationVisible

  // class methods
  +[QLDetailItemViewControllerState detailItemViewControllerStateWithActionButtonTitle:actionButtonView:informationVisible:]

  // instance methods
  -[QLDetailItemViewControllerState .cxx_destruct]
  -[QLDetailItemViewControllerState setActionButtonTitle:]
  -[QLDetailItemViewControllerState actionButtonTitle]
  -[QLDetailItemViewControllerState actionButtonView]
  -[QLDetailItemViewControllerState setActionButtonView:]
  -[QLDetailItemViewControllerState isInformationVisible]
  -[QLDetailItemViewControllerState setInformationVisible:]


QLDetailItemViewController : QLItemViewController
 @property  QLDetailItemViewControllerState *state
 @property  NSArray *information

  // instance methods
  -[QLDetailItemViewController performAction]
  -[QLDetailItemViewController initWithNibName:bundle:]
  -[QLDetailItemViewController state]
  -[QLDetailItemViewController .cxx_destruct]
  -[QLDetailItemViewController viewDidLoad]
  -[QLDetailItemViewController setState:animated:]
  -[QLDetailItemViewController information]
  -[QLDetailItemViewController setState:]
  -[QLDetailItemViewController setInformation:]
  -[QLDetailItemViewController canSwipeToDismiss]
  -[QLDetailItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDetailItemViewController canEnterFullScreen]
  -[QLDetailItemViewController canPinchToDismiss]
  -[QLDetailItemViewController setAppearance:animated:]
  -[QLDetailItemViewController _updateInformation]
  -[QLDetailItemViewController _setActionButtonView:animated:actionButtonLabel:informationVisible:]
  -[QLDetailItemViewController _scalableSystemFontOfSize:]


QLPasswordItemViewController : QLItemViewController <UIDocumentPasswordViewDelegate>
  // instance methods
  -[QLPasswordItemViewController .cxx_destruct]
  -[QLPasswordItemViewController loadView]
  -[QLPasswordItemViewController invalidate]
  -[QLPasswordItemViewController userDidEnterPassword:forPasswordView:]
  -[QLPasswordItemViewController canSwipeToDismiss]
  -[QLPasswordItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLPasswordItemViewController canEnterFullScreen]
  -[QLPasswordItemViewController canPinchToDismiss]
  -[QLPasswordItemViewController previewDidAppear:]
  -[QLPasswordItemViewController previewWillDisappear:]
  -[QLPasswordItemViewController passwordView]


QLImageItemViewController : QLScrollableContentItemViewController <QLAnimationTimerObserver, UIAdaptivePresentationControllerDelegate, QLImageAnalysisManagerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *imageAnalysisView
 @property  UIImage *imageForAnalysis
 @property  NSDictionary *clientPreviewOptions

  // instance methods
  -[QLImageItemViewController presentationControllerDidDismiss:]
  -[QLImageItemViewController imageSize]
  -[QLImageItemViewController draggableView]
  -[QLImageItemViewController .cxx_destruct]
  -[QLImageItemViewController traitCollectionDidChange:]
  -[QLImageItemViewController preferredWhitePointAdaptivityStyle]
  -[QLImageItemViewController didScroll:]
  -[QLImageItemViewController didZoom:]
  -[QLImageItemViewController animationTimerFired:]
  -[QLImageItemViewController clientPreviewOptions]
  -[QLImageItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLImageItemViewController previewBecameFullScreen:animated:]
  -[QLImageItemViewController previewDidAppear:]
  -[QLImageItemViewController previewWillDisappear:]
  -[QLImageItemViewController previewDidDisappear:]
  -[QLImageItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLImageItemViewController setAppearance:animated:]
  -[QLImageItemViewController toolbarButtonsForTraitCollection:]
  -[QLImageItemViewController shouldAcceptTouch:ofGestureRecognizer:]
  -[QLImageItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLImageItemViewController performFirstTimeAppearanceActions:]
  -[QLImageItemViewController draggableViewShouldStartDragSession:]
  -[QLImageItemViewController imageAnalysisView]
  -[QLImageItemViewController imageForAnalysis]
  -[QLImageItemViewController imageAnalyzerWantsUpdateInfoButtonWithAnimation:]
  -[QLImageItemViewController imageAnalyzerWantsUpdateOverlayViews]
  -[QLImageItemViewController imageAnalysisInteractionWillPresentVisualSearchController]
  -[QLImageItemViewController imageAnalysisInteractionDidDismissVisualSearchController]
  -[QLImageItemViewController _setupAndStartImageAnalysisIfNeeded]
  -[QLImageItemViewController _updateAnalysisButtonsContainerConstraints]
  -[QLImageItemViewController adjustImageInteractionForScrollEvent:]


QLMediaItemBaseViewController : QLScrollableContentItemViewController <QLToolbarButtonAction>
 @property  NSError *error
 @property  double mediaDuration
 @property  double elapsedTime
 @property  double remainingTime
 @property  AVPlayer *player
 @property  UIView *playerView
 @property  AVPlayerLayer *playerLayer
 @property  double currentPlaybackHeadPosition
 @property  long long playingStatus
 @property  BOOL playable
 @property  BOOL endOfMediaReached
 @property  BOOL visualTracksEnabled
 @property  double mediaVolume
 @property  AVAsset *mediaAsset
 @property  BOOL isFullScreen
 @property  BOOL isVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMediaItemBaseViewController elapsedTime]
  -[QLMediaItemBaseViewController playerLayer]
  -[QLMediaItemBaseViewController playable]
  -[QLMediaItemBaseViewController imageSize]
  -[QLMediaItemBaseViewController setElapsedTime:]
  -[QLMediaItemBaseViewController isVisible]
  -[QLMediaItemBaseViewController setRemainingTime:]
  -[QLMediaItemBaseViewController error]
  -[QLMediaItemBaseViewController pause]
  -[QLMediaItemBaseViewController dealloc]
  -[QLMediaItemBaseViewController .cxx_destruct]
  -[QLMediaItemBaseViewController setError:]
  -[QLMediaItemBaseViewController stop]
  -[QLMediaItemBaseViewController remainingTime]
  -[QLMediaItemBaseViewController setMediaVolume:]
  -[QLMediaItemBaseViewController player]
  -[QLMediaItemBaseViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMediaItemBaseViewController playerView]
  -[QLMediaItemBaseViewController mediaVolume]
  -[QLMediaItemBaseViewController setPlayer:]
  -[QLMediaItemBaseViewController togglePlayback]
  -[QLMediaItemBaseViewController isFullScreen]
  -[QLMediaItemBaseViewController play]
  -[QLMediaItemBaseViewController hostApplicationDidBecomeActive]
  -[QLMediaItemBaseViewController mediaDuration]
  -[QLMediaItemBaseViewController mediaAsset]
  -[QLMediaItemBaseViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMediaItemBaseViewController previewBecameFullScreen:animated:]
  -[QLMediaItemBaseViewController previewIsAppearingWithProgress:]
  -[QLMediaItemBaseViewController previewDidAppear:]
  -[QLMediaItemBaseViewController previewDidDisappear:]
  -[QLMediaItemBaseViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLMediaItemBaseViewController setAppearance:animated:]
  -[QLMediaItemBaseViewController hostApplicationDidEnterBackground:]
  -[QLMediaItemBaseViewController toolbarButtonsForTraitCollection:]
  -[QLMediaItemBaseViewController playerItemDidReachEnd:]
  -[QLMediaItemBaseViewController setupPlayerWithMediaAsset:]
  -[QLMediaItemBaseViewController didChangePlayingStatus]
  -[QLMediaItemBaseViewController setupPlayerViewWithPlayer:]
  -[QLMediaItemBaseViewController _updateExternalPlayback]
  -[QLMediaItemBaseViewController _updatePlayingStatus]
  -[QLMediaItemBaseViewController endOfMediaReached]
  -[QLMediaItemBaseViewController shouldDisplayPlayButtonInNavigationBar]
  -[QLMediaItemBaseViewController resetToBeginning]
  -[QLMediaItemBaseViewController setCurrentPlaybackHeadPosition:]
  -[QLMediaItemBaseViewController currentPlaybackHeadPosition]
  -[QLMediaItemBaseViewController observePlayingTime:]
  -[QLMediaItemBaseViewController didReachEndOfMedia]
  -[QLMediaItemBaseViewController _assetIsDecodable:]
  -[QLMediaItemBaseViewController playingStatus]
  -[QLMediaItemBaseViewController visualTracksEnabled]
  -[QLMediaItemBaseViewController setMediaDuration:]


_QLMovieScrubberViewContainer : UIView
  // instance methods
  -[_QLMovieScrubberViewContainer intrinsicContentSize]
  -[_QLMovieScrubberViewContainer init]


QLMovieItemViewController : QLMediaItemViewController <AVPictureInPictureControllerDelegate, AVEditBehaviorDelegate, AVPlayerViewControllerDelegatePrivate>
 @property  AVPlayerViewController *playerViewController
 @property  QLOverlayPlayButton *playButton
 @property  QLVideoScrubberView *scrubber
 @property  NSLayoutConstraint *bottomScrubberConstraint
 @property  UIView *scrubberContainer
 @property  UIScrollView *scrubberContainerScrollView
 @property  double scrubberVerticalOffset
 @property  PHPlaceholderView *airPlayPlaceholderView
 @property  UIView *playerViewContainer
 @property  UIScrollView *playerViewControllerScrollView
 @property  NSNumber *assetIsHDR
 @property  PXUIAssetBadgeView *hdrBadgeView
 @property  AVEditBehavior *editBehavior
 @property  BOOL isEditing
 @property  QLMovieEdits *edits
 @property  QLMovieEdits *editsSinceLastSave
 @property  BOOL isSavingEditsBeforeDismissing
 @property  BOOL assetCanBeRotated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMovieItemViewController accessoryView]
  -[QLMovieItemViewController editButtonTapped]
  -[QLMovieItemViewController dealloc]
  -[QLMovieItemViewController playerViewController]
  -[QLMovieItemViewController .cxx_destruct]
  -[QLMovieItemViewController scrollView]
  -[QLMovieItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMovieItemViewController transitioningView]
  -[QLMovieItemViewController isEditing]
  -[QLMovieItemViewController play]
  -[QLMovieItemViewController init]
  -[QLMovieItemViewController preferredWhitePointAdaptivityStyle]
  -[QLMovieItemViewController playerViewContainer]
  -[QLMovieItemViewController setPlayerViewContainer:]
  -[QLMovieItemViewController setPlayerViewController:]
  -[QLMovieItemViewController playerViewControllerWillPerformAnalysisCalloutAction:]
  -[QLMovieItemViewController playButton]
  -[QLMovieItemViewController edits]
  -[QLMovieItemViewController canSwipeToDismiss]
  -[QLMovieItemViewController setEdits:]
  -[QLMovieItemViewController setScrubber:]
  -[QLMovieItemViewController scrubber]
  -[QLMovieItemViewController setPlayButton:]
  -[QLMovieItemViewController editBehaviorAlertActionsForDoneButtonTap:]
  -[QLMovieItemViewController editBehaviorDidCancel:]
  -[QLMovieItemViewController setIsEditing:]
  -[QLMovieItemViewController _enterEditMode]
  -[QLMovieItemViewController editBehavior]
  -[QLMovieItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMovieItemViewController canEnterFullScreen]
  -[QLMovieItemViewController canToggleFullScreen]
  -[QLMovieItemViewController canPinchToDismiss]
  -[QLMovieItemViewController previewBecameFullScreen:animated:]
  -[QLMovieItemViewController previewWillAppear:]
  -[QLMovieItemViewController previewDidAppear:]
  -[QLMovieItemViewController previewDidDisappear:]
  -[QLMovieItemViewController buttonPressedWithIdentifier:completionHandler:]
  -[QLMovieItemViewController toolbarButtonsForTraitCollection:]
  -[QLMovieItemViewController registeredKeyCommands]
  -[QLMovieItemViewController handlePerformedKeyCommandIfNeeded:]
  -[QLMovieItemViewController transitionDidStart:]
  -[QLMovieItemViewController transitionDidFinish:didComplete:]
  -[QLMovieItemViewController parallaxView]
  -[QLMovieItemViewController canPerformFirstTimeAppearanceActions:]
  -[QLMovieItemViewController performFirstTimeAppearanceActions:]
  -[QLMovieItemViewController savePreviewEditedCopyWithCompletionHandler:]
  -[QLMovieItemViewController editProgressIndicatorMessage]
  -[QLMovieItemViewController updateInterfaceForSavingEdits]
  -[QLMovieItemViewController updateInterfaceAfterSavingEdits]
  -[QLMovieItemViewController setPlayControlsHidden:animated:]
  -[QLMovieItemViewController didChangePlayingStatus]
  -[QLMovieItemViewController timeLabelScrollView]
  -[QLMovieItemViewController scrubberContainer]
  -[QLMovieItemViewController setScrubberContainer:]
  -[QLMovieItemViewController scrubberVerticalOffset]
  -[QLMovieItemViewController setScrubberVerticalOffset:]
  -[QLMovieItemViewController setupPlayerViewWithPlayer:]
  -[QLMovieItemViewController shouldDisplayPlayButtonInNavigationBar]
  -[QLMovieItemViewController _enterEditModeIfPossible]
  -[QLMovieItemViewController _rotateIfPossible]
  -[QLMovieItemViewController addScrubberIfNeededWithDeferral]
  -[QLMovieItemViewController _setupScrubberPlaceholderThumbnail]
  -[QLMovieItemViewController _metadataItemTitle]
  -[QLMovieItemViewController scrollViewInView:]
  -[QLMovieItemViewController _updatePlayButtonVisibility]
  -[QLMovieItemViewController _videoIsPlaying]
  -[QLMovieItemViewController _isInteractingWithAnalysis]
  -[QLMovieItemViewController shouldAllowEditingContents]
  -[QLMovieItemViewController shouldHandleRegisteringForCommandCenterHandlers]
  -[QLMovieItemViewController _setupEditBehavior]
  -[QLMovieItemViewController _exitEditMode:]
  -[QLMovieItemViewController _updateEditsTrimmingValuesWithTrimStartTime:trimEndTime:]
  -[QLMovieItemViewController _updateInterfaceAfterExitingEditMode]
  -[QLMovieItemViewController _resetTrimmingValues]
  -[QLMovieItemViewController _updateEditMode]
  -[QLMovieItemViewController _rotateRightButtonTapped]
  -[QLMovieItemViewController _rotateMovieRight]
  -[QLMovieItemViewController _saveMovieIfEdited:withCompletionHandler:]
  -[QLMovieItemViewController _saveMovieIfEditedWithEditedCopy:shouldDismissAfterSaving:completionHandler:]
  -[QLMovieItemViewController _showFailedToSaveChangesAlertWithError:]
  -[QLMovieItemViewController airPlayPlaceholderView]
  -[QLMovieItemViewController _updatePlaceHolderView]
  -[QLMovieItemViewController _showHDRBadgeViewIfNeeded]
  -[QLMovieItemViewController _showHDRBadgeView:]
  -[QLMovieItemViewController _addHDRBadgeViewToHierarchyIfNeeded:]
  -[QLMovieItemViewController _displayHDRBadgeView:]
  -[QLMovieItemViewController _hideHDRBadgeViewAfterDelayIfNeeded:]
  -[QLMovieItemViewController _hideHDRBadgeViewIfVisible]
  -[QLMovieItemViewController _updateHDRBadgeViewVisibilityWithNewPlayingStatus:]
  -[QLMovieItemViewController _updateHDRBadgeViewVisibilityForFullscreenMode:]
  -[QLMovieItemViewController hdrBadgeView]
  -[QLMovieItemViewController assetIsHDR]
  -[QLMovieItemViewController bottomScrubberConstraint]
  -[QLMovieItemViewController setBottomScrubberConstraint:]
  -[QLMovieItemViewController scrubberContainerScrollView]
  -[QLMovieItemViewController setScrubberContainerScrollView:]
  -[QLMovieItemViewController playerViewControllerScrollView]
  -[QLMovieItemViewController setPlayerViewControllerScrollView:]
  -[QLMovieItemViewController setAssetIsHDR:]
  -[QLMovieItemViewController setHdrBadgeView:]
  -[QLMovieItemViewController setEditBehavior:]
  -[QLMovieItemViewController editsSinceLastSave]
  -[QLMovieItemViewController setEditsSinceLastSave:]
  -[QLMovieItemViewController isSavingEditsBeforeDismissing]
  -[QLMovieItemViewController setIsSavingEditsBeforeDismissing:]
  -[QLMovieItemViewController assetCanBeRotated]
  -[QLMovieItemViewController setAssetCanBeRotated:]


QLBarButtonItem : UIBarButtonItem
 @property  unsigned long QLType

  // instance methods
  -[QLBarButtonItem _qlIsEqual:]
  -[QLBarButtonItem QLType]
  -[QLBarButtonItem setQLType:]


QLCustomURLSharingProxyDelegate : NSObject <UIDocumentInteractionControllerDelegate>
 @property  <UIDocumentInteractionControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLCustomURLSharingProxyDelegate setDelegate:]
  -[QLCustomURLSharingProxyDelegate delegate]
  -[QLCustomURLSharingProxyDelegate .cxx_destruct]
  -[QLCustomURLSharingProxyDelegate initWithDelegate:]
  -[QLCustomURLSharingProxyDelegate documentInteractionControllerDidDismissOptionsMenu:]


QLPreviewExtensionHostContext : NSExtensionContext <QLRemotePreviewService>
 @property  QLRemoteItemViewController *remoteItemViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewExtensionHostContext _extensionAuxiliaryHostProtocol]
  +[QLPreviewExtensionHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewExtensionHostContext .cxx_destruct]
  -[QLPreviewExtensionHostContext protocolService]
  -[QLPreviewExtensionHostContext protocolServiceWithErrorHandler:]
  -[QLPreviewExtensionHostContext generatePreviewForURL:completion:]
  -[QLPreviewExtensionHostContext loadPreviewControllerWithContents:context:completionHandler:]
  -[QLPreviewExtensionHostContext previewWillAppear:]
  -[QLPreviewExtensionHostContext previewDidAppear:]
  -[QLPreviewExtensionHostContext previewWillDisappear:]
  -[QLPreviewExtensionHostContext previewDidDisappear:]
  -[QLPreviewExtensionHostContext setAppearance:animated:]
  -[QLPreviewExtensionHostContext setHostViewControllerProxy:]
  -[QLPreviewExtensionHostContext getARQLInlineProxy3WithCompletionHandler:]
  -[QLPreviewExtensionHostContext invalidateService]
  -[QLPreviewExtensionHostContext getPrinterProxyWithCompletionHandler:]
  -[QLPreviewExtensionHostContext getARQLInlineProxyWithCompletionHandler:]
  -[QLPreviewExtensionHostContext getARQLInlineProxy2WithCompletionHandler:]
  -[QLPreviewExtensionHostContext previewControllerWantsFullScreen:]
  -[QLPreviewExtensionHostContext previewControllerDidUpdateTitle:]
  -[QLPreviewExtensionHostContext previewControllerDidUpdatePreferredContentSize:]
  -[QLPreviewExtensionHostContext remoteItemViewController]
  -[QLPreviewExtensionHostContext setRemoteItemViewController:]


QLPreviewExtensionServiceContext_iOS : NSExtensionContext <QLRemotePreviewHost, QLPreviewProviderContext>
 @property  QLPreviewProvider<QLPreviewingController> *previewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewExtensionServiceContext_iOS _extensionAuxiliaryHostProtocol]
  +[QLPreviewExtensionServiceContext_iOS _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[QLPreviewExtensionServiceContext_iOS dealloc]
  -[QLPreviewExtensionServiceContext_iOS .cxx_destruct]
  -[QLPreviewExtensionServiceContext_iOS observeValueForKeyPath:ofObject:change:context:]
  -[QLPreviewExtensionServiceContext_iOS previewProvider]
  -[QLPreviewExtensionServiceContext_iOS setPreviewProvider:]
  -[QLPreviewExtensionServiceContext_iOS previewViewController]
  -[QLPreviewExtensionServiceContext_iOS protocolHost]
  -[QLPreviewExtensionServiceContext_iOS generatePreviewForURL:completion:]
  -[QLPreviewExtensionServiceContext_iOS loadPreviewControllerWithContents:context:completionHandler:]
  -[QLPreviewExtensionServiceContext_iOS previewWillAppear:]
  -[QLPreviewExtensionServiceContext_iOS previewDidAppear:]
  -[QLPreviewExtensionServiceContext_iOS previewWillDisappear:]
  -[QLPreviewExtensionServiceContext_iOS previewDidDisappear:]
  -[QLPreviewExtensionServiceContext_iOS setAppearance:animated:]
  -[QLPreviewExtensionServiceContext_iOS setHostViewControllerProxy:]
  -[QLPreviewExtensionServiceContext_iOS getARQLInlineProxy3WithCompletionHandler:]
  -[QLPreviewExtensionServiceContext_iOS invalidateService]
  -[QLPreviewExtensionServiceContext_iOS getPrinterProxyWithCompletionHandler:]
  -[QLPreviewExtensionServiceContext_iOS getARQLInlineProxyWithCompletionHandler:]
  -[QLPreviewExtensionServiceContext_iOS getARQLInlineProxy2WithCompletionHandler:]
  -[QLPreviewExtensionServiceContext_iOS previewControllerWantsFullScreen:]
  -[QLPreviewExtensionServiceContext_iOS previewControllerDidUpdateTitle:]
  -[QLPreviewExtensionServiceContext_iOS previewControllerDidUpdatePreferredContentSize:]
  -[QLPreviewExtensionServiceContext_iOS _startObservingPreviewControllerAttributeChanges]
  -[QLPreviewExtensionServiceContext_iOS _stopObservingPreviewControllerAttributeChanges]


QLRemotePreviewHostViewController : _UIRemoteViewController
 @property  QLRemoteItemViewController *remoteItemViewController
 @property  NSExtension *extension
 @property  id request

  // instance methods
  -[QLRemotePreviewHostViewController extension]
  -[QLRemotePreviewHostViewController setRequest:]
  -[QLRemotePreviewHostViewController setExtension:]
  -[QLRemotePreviewHostViewController .cxx_destruct]
  -[QLRemotePreviewHostViewController viewServiceDidTerminateWithError:]
  -[QLRemotePreviewHostViewController request]
  -[QLRemotePreviewHostViewController remoteItemViewController]
  -[QLRemotePreviewHostViewController setRemoteItemViewController:]


QLCustomItemViewControllerHostProxy : NSObject <QLCustomItemViewControllerHost>
 @property  <QLCustomItemViewControllerHost> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLCustomItemViewControllerHostProxy setDelegate:]
  -[QLCustomItemViewControllerHostProxy delegate]
  -[QLCustomItemViewControllerHostProxy .cxx_destruct]
  -[QLCustomItemViewControllerHostProxy setFullScreen:]
  -[QLCustomItemViewControllerHostProxy presentShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLCustomItemViewControllerHostProxy forwardMessageToHostOfCustomViewController:completionHandler:]
  -[QLCustomItemViewControllerHostProxy dismissQuickLook]


QLRemoteItemViewController : QLItemViewController <QLPrintingProtocol, QLCustomItemViewControllerHost, QLRemotePopoverTracker>
 @property  QLRemotePreviewHostViewController *remoteViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLRemoteItemViewController dealloc]
  -[QLRemoteItemViewController setRemoteViewController:]
  -[QLRemoteItemViewController .cxx_destruct]
  -[QLRemoteItemViewController remoteViewController]
  -[QLRemoteItemViewController viewServiceDidTerminateWithError:]
  -[QLRemoteItemViewController setFullScreen:]
  -[QLRemoteItemViewController printer]
  -[QLRemoteItemViewController init]
  -[QLRemoteItemViewController canSwipeToDismiss]
  -[QLRemoteItemViewController presentShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLRemoteItemViewController forwardMessageToHostOfCustomViewController:completionHandler:]
  -[QLRemoteItemViewController dismissQuickLook]
  -[QLRemoteItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLRemoteItemViewController canEnterFullScreen]
  -[QLRemoteItemViewController canClickToToggleFullscreen]
  -[QLRemoteItemViewController canPinchToDismiss]
  -[QLRemoteItemViewController canShowToolBar]
  -[QLRemoteItemViewController canShowNavBar]
  -[QLRemoteItemViewController previewWillAppear:]
  -[QLRemoteItemViewController previewDidAppear:]
  -[QLRemoteItemViewController previewWillDisappear:]
  -[QLRemoteItemViewController previewDidDisappear:]
  -[QLRemoteItemViewController setAppearance:animated:]
  -[QLRemoteItemViewController fullscreenBackgroundColor]
  -[QLRemoteItemViewController presenterShouldHandleLoadingView:readyToDisplay:]
  -[QLRemoteItemViewController preloadViewControllerForContext:]
  -[QLRemoteItemViewController getFrameWithCompletionBlock:]
  -[QLRemoteItemViewController numberOfPagesWithSize:completionHandler:]
  -[QLRemoteItemViewController prepareForDrawingPages:ofSize:]
  -[QLRemoteItemViewController pdfDataForPageAtIndex:withCompletionHandler:]
  -[QLRemoteItemViewController provideCurrentPageAndVisibleRectWithCompletionHandler:]
  -[QLRemoteItemViewController previewControllerWantsFullScreen:]
  -[QLRemoteItemViewController previewControllerDidUpdateTitle:]
  -[QLRemoteItemViewController previewControllerDidUpdatePreferredContentSize:]
  -[QLRemoteItemViewController _loadRemoteViewControllerForContext:]
  -[QLRemoteItemViewController _performSetUpWithRemoteViewController:extension:request:hostContext:]
  -[QLRemoteItemViewController _performLoadHandlerIfNeeded]
  -[QLRemoteItemViewController _registerLoadingHandler:]


QLThumbnailView : UIView
 @property  UIImage *image
 @property  long long pageNumber
 @property  BOOL alwaysVisible
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unselectedFrame

  // instance methods
  -[QLThumbnailView setFrame:]
  -[QLThumbnailView .cxx_destruct]
  -[QLThumbnailView drawRect:]
  -[QLThumbnailView image]
  -[QLThumbnailView initWithFrame:]
  -[QLThumbnailView setImage:]
  -[QLThumbnailView pageNumber]
  -[QLThumbnailView setPageNumber:]
  -[QLThumbnailView alwaysVisible]
  -[QLThumbnailView setAlwaysVisible:]
  -[QLThumbnailView unselectedFrame]
  -[QLThumbnailView setUnselectedFrame:]


QLMediaItemViewController : QLMediaItemBaseViewController <QLMediaScrubberGestureDelegate, UIGestureRecognizerDelegate>
 @property  QLMediaScrubberGesture *scrubGesture
 @property  UITapGestureRecognizer *tapToPlayGesture
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QLMediaItemViewController gestureRecognizerShouldBegin:]
  -[QLMediaItemViewController dealloc]
  -[QLMediaItemViewController stringFromTimeInterval:]
  -[QLMediaItemViewController .cxx_destruct]
  -[QLMediaItemViewController observeValueForKeyPath:ofObject:change:context:]
  -[QLMediaItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLMediaItemViewController previewBecameFullScreen:animated:]
  -[QLMediaItemViewController previewIsAppearingWithProgress:]
  -[QLMediaItemViewController previewDidAppear:]
  -[QLMediaItemViewController previewWillDisappear:]
  -[QLMediaItemViewController previewDidDisappear:]
  -[QLMediaItemViewController setAppearance:animated:]
  -[QLMediaItemViewController hostApplicationDidEnterBackground:]
  -[QLMediaItemViewController registeredKeyCommands]
  -[QLMediaItemViewController handlePerformedKeyCommandIfNeeded:]
  -[QLMediaItemViewController transitionDidFinish:didComplete:]
  -[QLMediaItemViewController timeLabelScrollView]
  -[QLMediaItemViewController observePlayingTime:]
  -[QLMediaItemViewController shouldHandleRegisteringForCommandCenterHandlers]
  -[QLMediaItemViewController tapToPlayGestureChanged:]
  -[QLMediaItemViewController hideTimeLabel]
  -[QLMediaItemViewController userTappedPlayInControlCenter:]
  -[QLMediaItemViewController userTappedPauseInControlCenter:]
  -[QLMediaItemViewController userScrubbedInControlCenter:]
  -[QLMediaItemViewController togglePlaybackFromControlCenter:]
  -[QLMediaItemViewController scrubberDidStartScrubbing:]
  -[QLMediaItemViewController scrubber:didChangeValue:]
  -[QLMediaItemViewController scrubberDidEndScrubbing:]
  -[QLMediaItemViewController setUpTimeLabelIfNeeded]
  -[QLMediaItemViewController removeTimeLabel]
  -[QLMediaItemViewController setTimeLabelNeedsUpdate]
  -[QLMediaItemViewController showTimeLabelIfNeeded]
  -[QLMediaItemViewController showTimeLabel]
  -[QLMediaItemViewController hideTimeLabelAfterDelay]
  -[QLMediaItemViewController hideTimeLabelAnimated:]
  -[QLMediaItemViewController labelTextWithFormat:elapsedInterval:remainingInterval:]
  -[QLMediaItemViewController _playingInfoWithPlaybackDuration:elapsedTime:]
  -[QLMediaItemViewController _registerForCommandCenterHandlers]
  -[QLMediaItemViewController _unregisterForCommandCenterHandlers]
  -[QLMediaItemViewController _updateCommandCenterPlayingInfoWithCurrentPlaybackTimeInformation]
  -[QLMediaItemViewController scrubGesture]
  -[QLMediaItemViewController setScrubGesture:]
  -[QLMediaItemViewController tapToPlayGesture]
  -[QLMediaItemViewController setTapToPlayGesture:]


QLDownloadingItemViewController : QLDetailItemViewController
 @property  BOOL downloaded
 @property  QLRoundProgressView *progressView
 @property  <QLDownloadingItemViewControllerDelegate> *downloadingDelegate
 @property  BOOL showsLoadingPreviewSpinner

  // instance methods
  -[QLDownloadingItemViewController performAction]
  -[QLDownloadingItemViewController .cxx_destruct]
  -[QLDownloadingItemViewController viewDidLoad]
  -[QLDownloadingItemViewController progressView]
  -[QLDownloadingItemViewController downloaded]
  -[QLDownloadingItemViewController setDownloaded:]
  -[QLDownloadingItemViewController startDownload:]
  -[QLDownloadingItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLDownloadingItemViewController previewDidAppear:]
  -[QLDownloadingItemViewController previewDidDisappear:]
  -[QLDownloadingItemViewController setAppearance:animated:]
  -[QLDownloadingItemViewController shouldAutoDownloadInNetworkState:downloadSize:forceIfPossible:]
  -[QLDownloadingItemViewController _updateFileSizeWithProgress:animated:]
  -[QLDownloadingItemViewController setShowsLoadingPreviewSpinner:]
  -[QLDownloadingItemViewController _toggleDownload:]
  -[QLDownloadingItemViewController startDownloadIfNeeded]
  -[QLDownloadingItemViewController _startDownload:]
  -[QLDownloadingItemViewController _stopDownload:]
  -[QLDownloadingItemViewController _setDownloading:animated:]
  -[QLDownloadingItemViewController _presentConnectivityAlert]
  -[QLDownloadingItemViewController _startDownloadOperation]
  -[QLDownloadingItemViewController downloadingDelegate]
  -[QLDownloadingItemViewController setDownloadingDelegate:]
  -[QLDownloadingItemViewController showsLoadingPreviewSpinner]


QLOverlayPlayButton : UIView
  // instance methods
  -[QLOverlayPlayButton .cxx_destruct]
  -[QLOverlayPlayButton layoutSubviews]
  -[QLOverlayPlayButton intrinsicContentSize]
  -[QLOverlayPlayButton initWithFrame:]
  -[QLOverlayPlayButton init]
  -[QLOverlayPlayButton setTarget:action:]
  -[QLOverlayPlayButton _playButtonTapped:]
  -[QLOverlayPlayButton _playButtonActivate:]
  -[QLOverlayPlayButton _playButtonDeactivate:]


QLMediaScrubberGesture : UIPanGestureRecognizer
 @property  <QLMediaScrubberGestureDelegate> *scrubberDelegate
 @property  float value
 @property  float minimumValue
 @property  float maximumValue

  // instance methods
  -[QLMediaScrubberGesture maximumValue]
  -[QLMediaScrubberGesture .cxx_destruct]
  -[QLMediaScrubberGesture setMinimumValue:]
  -[QLMediaScrubberGesture nominalFrameRate]
  -[QLMediaScrubberGesture setMaximumValue:]
  -[QLMediaScrubberGesture initWithPlayer:]
  -[QLMediaScrubberGesture setValue:]
  -[QLMediaScrubberGesture minimumValue]
  -[QLMediaScrubberGesture value]
  -[QLMediaScrubberGesture scrubberDelegate]
  -[QLMediaScrubberGesture setScrubberDelegate:]
  -[QLMediaScrubberGesture clampedEstimatedFrameRate]
  -[QLMediaScrubberGesture scrubbGestureDidChange:]


QLAsynchronousBlockOperation : QLAsynchronousOperation
 @property  @? block

  // instance methods
  -[QLAsynchronousBlockOperation .cxx_destruct]
  -[QLAsynchronousBlockOperation setBlock:]
  -[QLAsynchronousBlockOperation block]
  -[QLAsynchronousBlockOperation initWithBlock:]
  -[QLAsynchronousBlockOperation main]


ARQLInlineTouch : NSObject <NSSecureCoding>
 @property  double timestamp
 @property  {CGPoint=dd} cgLocation
 @property  {CGPoint=dd} cgPreviousLocation
 @property  long long phase
 @property  NSString *uid

  // class methods
  +[ARQLInlineTouch supportsSecureCoding]
  +[ARQLInlineTouch removeUIDForUITouch:]
  +[ARQLInlineTouch touchToUUIDMapping]

  // instance methods
  -[ARQLInlineTouch uid]
  -[ARQLInlineTouch setUid:]
  -[ARQLInlineTouch phase]
  -[ARQLInlineTouch setPhase:]
  -[ARQLInlineTouch setTimestamp:]
  -[ARQLInlineTouch encodeWithCoder:]
  -[ARQLInlineTouch .cxx_destruct]
  -[ARQLInlineTouch timestamp]
  -[ARQLInlineTouch initWithCoder:]
  -[ARQLInlineTouch initWithUITouch:]
  -[ARQLInlineTouch cgLocation]
  -[ARQLInlineTouch setCgLocation:]
  -[ARQLInlineTouch cgPreviousLocation]
  -[ARQLInlineTouch setCgPreviousLocation:]
  -[ARQLInlineTouch uuidForTouch:]


QLSlideTransitionDriver : QLTransitionDriver
  // instance methods
  -[QLSlideTransitionDriver tearDown]
  -[QLSlideTransitionDriver _animateTransition]
  -[QLSlideTransitionDriver animateTransition]
  -[QLSlideTransitionDriver _animateTransitionUserSlideDismissal]


QLPreviewCollection : UIViewController <QLTransitionControllerProtocol, QLPageViewControllerDataSource, QLPageViewControllerDelegate, QLPreviewItemViewControllerDelegate, QLItemPresenterViewControllerDelegate, UIGestureRecognizerDelegatePrivate, QLPreviewCollectionProtocol>
 @property  BOOL fullScreen
 @property  BOOL isEditing
 @property  BOOL currentItemViewControllerIsPerformingFocusedAction
 @property  BOOL isTransitioningPage
 @property  @? prepareForInvalidationCompletionHandler
 @property  NSString *overrideParentApplicationDisplayIdentifier
 @property  UIPanGestureRecognizer *slideGesture
 @property  UIPinchGestureRecognizer *pinchGesture
 @property  UIRotationGestureRecognizer *rotationGesture
 @property  QLSwipeDownTracker *swipeDownTracker
 @property  QLPinchRotationTracker *pinchRotationTracker
 @property  QLTransitionContext *transitionContext
 @property  <QLTransitionControllerProtocol> *transitionController
 @property  QLTransitionDriver *transitionDriver
 @property  NSString *parentApplicationDisplayIdentifier
 @property  NSString *hostApplicationBundleIdentifier
 @property  BOOL hasTriggeredInteractiveTransitionAnimation
 @property  QLPageViewController *pageViewController
 @property  <QLPreviewControllerStateProtocol><QLPreviewControllerStateProtocol_UIKit> *stateManager
 @property  QLItemViewController *currentPreviewItemViewController
 @property  BOOL isAvailable
 @property  BOOL allowInteractiveTransitions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[QLPreviewCollection quickLookExtension]
  +[QLPreviewCollection remotePreviewCollectionWithCompletionHandler:]
  +[QLPreviewCollection previewCollectionClassName]
  +[QLPreviewCollection previewCollectionUsingRemoteViewController:completionHandler:]

  // instance methods
  -[QLPreviewCollection transitionInProgress]
  -[QLPreviewCollection isRemote]
  -[QLPreviewCollection _isVisible]
  -[QLPreviewCollection setPageViewController:]
  -[QLPreviewCollection setIsContentManaged:]
  -[QLPreviewCollection _updatePreferredContentSize]
  -[QLPreviewCollection accessoryView]
  -[QLPreviewCollection isAvailable]
  -[QLPreviewCollection gestureRecognizerShouldBegin:]
  -[QLPreviewCollection transitionContext]
  -[QLPreviewCollection viewDidAppear:]
  -[QLPreviewCollection setTransitionContext:]
  -[QLPreviewCollection gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[QLPreviewCollection .cxx_destruct]
  -[QLPreviewCollection setTransitionController:]
  -[QLPreviewCollection viewWillAppear:]
  -[QLPreviewCollection loadView]
  -[QLPreviewCollection pageViewController]
  -[QLPreviewCollection gestureRecognizer:shouldReceiveTouch:]
  -[QLPreviewCollection transitionController]
  -[QLPreviewCollection gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[QLPreviewCollection gestureTracker]
  -[QLPreviewCollection viewDidDisappear:]
  -[QLPreviewCollection setFullScreen:]
  -[QLPreviewCollection setOverrideParentApplicationDisplayIdentifier:]
  -[QLPreviewCollection isEditing]
  -[QLPreviewCollection stateManager]
  -[QLPreviewCollection pinchGesture]
  -[QLPreviewCollection overrideParentApplicationDisplayIdentifier]
  -[QLPreviewCollection init]
  -[QLPreviewCollection setIsAvailable:]
  -[QLPreviewCollection setPinchGesture:]
  -[QLPreviewCollection _isBeingDismissed]
  -[QLPreviewCollection fullScreen]
  -[QLPreviewCollection updateTransitionWithProgress:]
  -[QLPreviewCollection swipeDownTracker]
  -[QLPreviewCollection setSwipeDownTracker:]
  -[QLPreviewCollection hostApplicationDidBecomeActive]
  -[QLPreviewCollection hostApplicationBundleIdentifier]
  -[QLPreviewCollection setIsEditing:]
  -[QLPreviewCollection _isBeingPresented]
  -[QLPreviewCollection previewItemViewController:wantsToForwardMessageToHost:completionHandler:]
  -[QLPreviewCollection previewItemViewController:didFailWithError:]
  -[QLPreviewCollection prepareForActionSheetPresentationWithCompletionHandler:]
  -[QLPreviewCollection dragDataOwnerForPreviewItemViewController:]
  -[QLPreviewCollection requestLockForCurrentItem]
  -[QLPreviewCollection actionSheetDidDismiss]
  -[QLPreviewCollection documentMenuActionWillBegin]
  -[QLPreviewCollection setAppearance:animated:]
  -[QLPreviewCollection hostSceneWillDeactivate]
  -[QLPreviewCollection hostApplicationDidEnterBackground:]
  -[QLPreviewCollection setHostApplicationBundleIdentifier:]
  -[QLPreviewCollection setStateManager:]
  -[QLPreviewCollection setScreenEdgePanWidth:]
  -[QLPreviewCollection previewItemDisplayState:wasAppliedToItemAtIndex:]
  -[QLPreviewCollection setPreviewItemDisplayState:onItemAtIndex:]
  -[QLPreviewCollection setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollection setAllowInteractiveTransitions:]
  -[QLPreviewCollection allowInteractiveTransitions]
  -[QLPreviewCollection slideGesture]
  -[QLPreviewCollection setSlideGesture:]
  -[QLPreviewCollection rotationGesture]
  -[QLPreviewCollection setRotationGesture:]
  -[QLPreviewCollection pinchRotationTracker]
  -[QLPreviewCollection setPinchRotationTracker:]
  -[QLPreviewCollection completeTransition:withDuration:]
  -[QLPreviewCollection startNonInteractiveTransitionPresenting:]
  -[QLPreviewCollection _setUpTransitionDriverForPresenting:duration:]
  -[QLPreviewCollection _tearDownTransition:]
  -[QLPreviewCollection rotationOrPinchGestureRecognized:]
  -[QLPreviewCollection slideToDismissGestureRecognized:]
  -[QLPreviewCollection parentApplicationDisplayIdentifier]
  -[QLPreviewCollection tearDownTransition:]
  -[QLPreviewCollection transitionDriver]
  -[QLPreviewCollection configureWithNumberOfItems:currentPreviewItemIndex:itemProvider:stateManager:]
  -[QLPreviewCollection toolbarButtonsForTraitCollection:withCompletionHandler:]
  -[QLPreviewCollection toolbarButtonPressedWithIdentifier:completionHandler:]
  -[QLPreviewCollection shouldDisplayLockActivityWithCompletionHandler:]
  -[QLPreviewCollection keyCommandsWithCompletionHandler:]
  -[QLPreviewCollection keyCommandWasPerformed:]
  -[QLPreviewCollection notifyFirstTimeAppearanceWithActions:]
  -[QLPreviewCollection notifyStateRestorationUserInfo:]
  -[QLPreviewCollection getCurrentPreviewActivityUserInfoWithCompletionHandler:]
  -[QLPreviewCollection startTransitionWithSourceViewProvider:transitionController:presenting:useInteractiveTransition:completionHandler:]
  -[QLPreviewCollection setLoadingString:]
  -[QLPreviewCollection overrideParentApplicationDisplayIdentifierWithIdentifier:]
  -[QLPreviewCollection preparePreviewCollectionForInvalidationWithCompletionHandler:]
  -[QLPreviewCollection invalidateService]
  -[QLPreviewCollection hostViewControlerTransitionToState:animated:]
  -[QLPreviewCollection saveCurrentPreviewEditsSynchronously:withCompletionHandler:]
  -[QLPreviewCollection saveIntoPhotoLibraryMediaWithURLWrapper:previewItemType:completionHandler:]
  -[QLPreviewCollection pageViewController:willTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:didTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:parallaxViewInPage:withIndex:]
  -[QLPreviewCollection pageViewController:isTransitioningFromPage:withIndex:toPage:withIndex:withProgress:]
  -[QLPreviewCollection pageViewController:willCancelTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:didCancelTransitionFromPage:withIndex:toPage:withIndex:animated:]
  -[QLPreviewCollection pageViewController:willBeginInteractiveTransitionFromPage:withIndex:toPage:withIndex:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdateOverlay:animated:]
  -[QLPreviewCollection _toggleFullscreenIfPossible]
  -[QLPreviewCollection _tapGestureRecognized]
  -[QLPreviewCollection pageViewController:viewControllerAtIndex:]
  -[QLPreviewCollection previewItemViewController:wantsFullScreen:]
  -[QLPreviewCollection previewItemViewController:wantsToSetRemoteEdgePanGestureWidth:]
  -[QLPreviewCollection previewItemViewControllerWantsToShowShareSheet:]
  -[QLPreviewCollection previewItemViewController:wantsToShowShareSheetWithPopoverTracker:customSharedURL:dismissCompletion:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdateKeyCommands:]
  -[QLPreviewCollection previewItemViewController:wantsToOpenURL:]
  -[QLPreviewCollection previewItemViewControllerWantsToShowNoInternetConnectivityAlert:]
  -[QLPreviewCollection previewItemViewControllerWantsUpdatePrinter:]
  -[QLPreviewCollection previewItemViewControllerDidUpdateTitle:]
  -[QLPreviewCollection previewItemViewControllerDidUpdatePreferredContentSize:]
  -[QLPreviewCollection previewItemViewControllerWantsToDismissQuickLook:]
  -[QLPreviewCollection previewItemViewControllerDidChangeCurrentPreviewController:]
  -[QLPreviewCollection expandContentOfPreviewItemViewController:unarchivedItemsURL:]
  -[QLPreviewCollection loadingTextForPreviewItemViewController:]
  -[QLPreviewCollection previewItemViewController:didEnableEditMode:]
  -[QLPreviewCollection previewItemViewControllerDidEditCopyOfPreviewItem:editedCopy:completionHandler:]
  -[QLPreviewCollection previewItemViewController:hasUnsavedEdits:]
  -[QLPreviewCollection previewItemViewControllerDidAcquireLock:]
  -[QLPreviewCollection previewItemViewControllerDidHandOverLock:]
  -[QLPreviewCollection previewItemViewController:wantsToUpdateStateRestorationWithUserInfo:]
  -[QLPreviewCollection previewItemViewController:wantsToUpdatePreviewItemDisplayState:]
  -[QLPreviewCollection itemPresenterViewControllerShouldForceAutodownloadFile:]
  -[QLPreviewCollection _updatePreviewVisibility:]
  -[QLPreviewCollection updateCurrentPreviewConfiguration]
  -[QLPreviewCollection setRemoteAccessoryContainer:]
  -[QLPreviewCollection currentPreviewItemViewController]
  -[QLPreviewCollection _notifyHostPreviewCollectionIsReadyForInvalidationIfNeeded]
  -[QLPreviewCollection _setCurrentPreviewItemIndex:animated:]
  -[QLPreviewCollection _defaultKeyCommands]
  -[QLPreviewCollection triggerInteractiveTransitionAnimationIfNeeded]
  -[QLPreviewCollection pinchDismissGestureInProgress]
  -[QLPreviewCollection _updateFullscreenBackgroundColor]
  -[QLPreviewCollection _updateFullscreen]
  -[QLPreviewCollection _updateOverlay:]
  -[QLPreviewCollection _updateOverlayVisibility]
  -[QLPreviewCollection _updateTitleFromController]
  -[QLPreviewCollection _updatePrinter]
  -[QLPreviewCollection _cleanAccessoryViewContainer]
  -[QLPreviewCollection _updateAccessoryViewWithPreviewItemViewController:]
  -[QLPreviewCollection _updateWhitePointAdaptivityStyle]
  -[QLPreviewCollection _installGestures]
  -[QLPreviewCollection setCurrentItemViewControllerIsPerformingFocusedAction:]
  -[QLPreviewCollection setIsTransitioningPage:]
  -[QLPreviewCollection _updateCanChangeCurrentPage]
  -[QLPreviewCollection _updateEnableChangingPageUsingGestures]
  -[QLPreviewCollection _sandboxExtensionForEditedFileAtURL:]
  -[QLPreviewCollection _itemViewControllerIsCurrentlyPresentedItemViewController:]
  -[QLPreviewCollection currentItemViewControllerIsPerformingFocusedAction]
  -[QLPreviewCollection isTransitioningPage]
  -[QLPreviewCollection prepareForInvalidationCompletionHandler]
  -[QLPreviewCollection setPrepareForInvalidationCompletionHandler:]
  -[QLPreviewCollection setTransitionDriver:]
  -[QLPreviewCollection hasTriggeredInteractiveTransitionAnimation]
  -[QLPreviewCollection setHasTriggeredInteractiveTransitionAnimation:]


QLPUTimedAnimationGroup : QLPUAnimationGroup
 @property  double beginTime
 @property  double currentTime

  // instance methods
  -[QLPUTimedAnimationGroup currentTime]
  -[QLPUTimedAnimationGroup elapsedTime]
  -[QLPUTimedAnimationGroup setBeginTime:]
  -[QLPUTimedAnimationGroup setElapsedTime:]
  -[QLPUTimedAnimationGroup updateAnimations]
  -[QLPUTimedAnimationGroup beginTime]
  -[QLPUTimedAnimationGroup _update]
  -[QLPUTimedAnimationGroup init]
  -[QLPUTimedAnimationGroup pauseAnimations]
  -[QLPUTimedAnimationGroup resumeAnimations]


QLErrorView : _UIContentUnavailableView
  // instance methods
  -[QLErrorView initWithTitle:]


QLErrorItemViewController : QLItemViewController
 @property  QLItem *previewItem
 @property  NSError *error

  // instance methods
  -[QLErrorItemViewController error]
  -[QLErrorItemViewController .cxx_destruct]
  -[QLErrorItemViewController setError:]
  -[QLErrorItemViewController loadView]
  -[QLErrorItemViewController canSwipeToDismiss]
  -[QLErrorItemViewController errorView]
  -[QLErrorItemViewController loadPreviewControllerWithContents:context:completionHandler:]
  -[QLErrorItemViewController canEnterFullScreen]
  -[QLErrorItemViewController canPinchToDismiss]
  -[QLErrorItemViewController previewItem]
  -[QLErrorItemViewController setPreviewItem:]
  -[QLErrorItemViewController _updateLabelsWithCurrentErrorIfNeeded]


QLImageAnimationTimer : NSObject
 @property  NSMutableSet *observers
 @property  CADisplayLink *displayLink

  // class methods
  +[QLImageAnimationTimer sharedTimer]

  // instance methods
  -[QLImageAnimationTimer displayLink]
  -[QLImageAnimationTimer setDisplayLink:]
  -[QLImageAnimationTimer .cxx_destruct]
  -[QLImageAnimationTimer setObservers:]
  -[QLImageAnimationTimer init]
  -[QLImageAnimationTimer observers]
  -[QLImageAnimationTimer animationTimerFired:]
  -[QLImageAnimationTimer addAnimationTimerObserver:]
  -[QLImageAnimationTimer removeAnimationTimerObserver:]


QLDelegateProxy : NSProxy
 @property  id firstDelegate
 @property  id secondDelegate

  // instance methods
  -[QLDelegateProxy methodSignatureForSelector:]
  -[QLDelegateProxy respondsToSelector:]
  -[QLDelegateProxy .cxx_destruct]
  -[QLDelegateProxy forwardingTargetForSelector:]
  -[QLDelegateProxy forwardInvocation:]
  -[QLDelegateProxy firstDelegate]
  -[QLDelegateProxy setFirstDelegate:]
  -[QLDelegateProxy secondDelegate]
  -[QLDelegateProxy setSecondDelegate:]


QLItem(PreviewController)
	// class methods
	+[QLItem(PreviewController) shouldUseRemoteCollection:]
	+[QLItem(PreviewController) openInTypeForItem:appIsContentManaged:]

	// instance methods
	-[QLItem(PreviewController) contentType]
	-[QLItem(PreviewController) provideURLWrapper:]
	-[QLItem(PreviewController) isEdited]
	-[QLItem(PreviewController) transformerClass]
	-[QLItem(PreviewController) previewItemPrintingViewControllerClassName]
	-[QLItem(PreviewController) previewItemViewControllerClassName]
	-[QLItem(PreviewController) previewItemViewControllerClassNameForType:]
	-[QLItem(PreviewController) imageRawSizeOfContents:withPreviewItemType:imageIsAnimated:]
	-[QLItem(PreviewController) previewSizeForItemViewControllerSize:]
	-[QLItem(PreviewController) shouldUseRemoteViewController]
	-[QLItem(PreviewController) canBePrintedWithCustomPrinter]
	-[QLItem(PreviewController) defaultWhitePointAdaptivityStyle]
	-[QLItem(PreviewController) preferredContentSizeForOrbPlatterWithURL:]
	-[QLItem(PreviewController) predictedPreferredContentSizeForOrbPlatter]

UIToolbar(_UIToolbarConfiguration)
	// instance methods
	-[UIToolbar(_UIToolbarConfiguration) configuration]
	-[UIToolbar(_UIToolbarConfiguration) configureWithConfiguration:]
	-[UIToolbar(_UIToolbarConfiguration) configureTransparent]

UIView(_QLUtilities)
	// class methods
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:usingDefaultDampedSpringWithDelay:initialVelocity:options:completion:]
	+[UIView(_QLUtilities) qlpu_animateView:toCenter:bounds:transform:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:completion:]
	+[UIView(_QLUtilities) _qlpu_animateView:toCenter:bounds:transform:withInitialVelocity:usingSpringAnimation:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:withDuration:delay:options:animations:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:withDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:usingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:]
	+[UIView(_QLUtilities) qlpu_animateViews:usingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:]
	+[UIView(_QLUtilities) _qlpu_animateViews:withAnimationBlock:completionHandler:]
	+[UIView(_QLUtilities) qlph_animateView:toCenter:bounds:transform:withDuration:delay:usingSpringWithDamping:initialVelocity:options:completion:]

	// instance methods
	-[UIView(_QLUtilities) QL_setAnchorPointAndUpdatePosition:]
	-[UIView(_QLUtilities) _qlpu_animationDictionary]

QLExtensionManager(Internal)
	// instance methods
	-[QLExtensionManager(Internal) remoteViewControllerForContentType:applicationBundleIdentifier:extensionType:generatonType:withCompletionHandler:]

(_QLUtilities)
	// class methods
	+[(_QLUtilities) ql_pdfSearchOptions]

UIViewController(_QLUtilities)
	// instance methods
	-[UIViewController(_QLUtilities) QL_disableChromelessBarsUI]

MPMediaItem(_QLUtilities)
	// class methods
	+[MPMediaItem(_QLUtilities) playingInfoFromAsset:withDefaultTitle:]
	+[MPMediaItem(_QLUtilities) playingInfoFromAsset:withDefaultTitle:playbackDuration:elapsedTime:]
	+[MPMediaItem(_QLUtilities) ql_propertyTitleFromAsset:]

QLItemViewController(DetermineShouldBeRemoteCommonMethods)
	// class methods
	+[QLItemViewController(DetermineShouldBeRemoteCommonMethods) shouldBeRemoteForMediaContentType:]
	+[QLItemViewController(DetermineShouldBeRemoteCommonMethods) supportedAudiovisualContentTypes]

NSBundle(_QLUtilities)
	// class methods
	+[NSBundle(_QLUtilities) mainBundleSupportsBackgroundAudio]
	+[NSBundle(_QLUtilities) mainBundleRequiresStatusBarHidden]

	// instance methods
	-[NSBundle(_QLUtilities) ql_applicationName]

UIBarButtonItem(QLUIBarButtonItemCopy)
	// instance methods
	-[UIBarButtonItem(QLUIBarButtonItemCopy) ql_copySystemItem]

QLPreviewReply(PDFSupport)
	// instance methods
	-[QLPreviewReply(PDFSupport) updateFromDocumentCreationBlock]

(QLPreviewConvenienceAdditions)
	// instance methods
	-[(QLPreviewConvenienceAdditions) previewItemURL]

NSLayoutConstraint(_QLUtilities)
	// instance methods
	-[NSLayoutConstraint(_QLUtilities) ql_activatedConstraint]

WKWebViewConfiguration(QLUtilities)
	// instance methods
	-[WKWebViewConfiguration(QLUtilities) ql_initWithForegroundPriorityAndSourceBundleIdentifier:]
	-[WKWebViewConfiguration(QLUtilities) _sharedDataStoreForBundleIdentifier:]

01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 1f00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 1500 /System/Library/Frameworks/AVKit.framework/AVKit: AVEditBehavior 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMediaDataStorage 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMovie 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 1500 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 1900 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 1700 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1200 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactVCardSerialization 
01 00 0a00 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFApplicationPolicyMonitor 
01 00 0a00 /System/Library/PrivateFrameworks/DeviceManagement.framework/DeviceManagement: DMFCategoryPolicyMonitor 
01 00 0c00 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemManager 
01 00 0c00 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPSandboxingURLWrapper 
01 00 0300 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPFileMetadata 
01 00 0300 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImage 
01 00 0300 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPImageProperties 
01 00 0300 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItemArtwork 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNowPlayingInfoCenter 
01 00 0d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRemoteCommandCenter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileAccessIntent 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLAppearance 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLAsynchronousOperation 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLCustomItemViewController 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLDataItemTransformer 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLExtensionManager 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLFilePreviewRequest 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLFileThumbnailRequest 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLGeneratorFetcher 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLImageItemContents 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLImageItemDataContents 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLImageItemURLContents 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLItem 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLItemProviderFetcher 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLItemThumbnailGenerator 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLItemTransformer 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLItemViewController 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLKeyCommand 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLNetworkStateObserver 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLPreviewConverter 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewExtensionRenderer 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewMultiPartURLProtocol 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewParts 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewProvider 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewReply 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewReplyAttachment 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLPreviewURLProtocol 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLSpotlightFetcher 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLSpotlightSearchableItemInfo 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLTextItemTransformer 
01 00 0f40 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailAddition 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerationRequest 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailGenerator 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailProvider 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailReply 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLThumbnailServiceProxy 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLToolbarButton 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLToolbarButtonItemRepresentation 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLToolbarButtonOption 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLURLHandler 
01 00 0400 /System/Library/PrivateFrameworks/QuickLookUICore.framework/QuickLookUICore: QLURLItemTransformer 
01 00 0f00 /System/Library/Frameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing: QLUTIAnalyzer 
01 00 0b00 /System/Library/PrivateFrameworks/QuickLookSupport.framework/QuickLookSupport: QLUTIManager 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityItemsConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDeferredMenuElement 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPasswordView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPickerViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentProperties 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPageViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInfo 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintPageRenderer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRotationGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISimpleTextPrintFormatter 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarHideAnimationParameters 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarAppearance 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbarAppearance 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowSceneActivationConfiguration 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowSceneActivationRequestOptions 
01 00 0100 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0500 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 0e00 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCVoiceShortcutClient 
01 00 0600 /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore: VKCImageAnalysisInteraction 
01 00 0600 /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore: VKCImageAnalyzer 
01 00 0600 /System/Library/PrivateFrameworks/VisionKitCore.framework/VisionKitCore: VKCImageAnalyzerRequest 
01 00 0e00 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualActionContext 
01 00 0e00 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualActionFile 
01 00 0e00 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: WFContextualActionRunnerClient 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebsiteDataStoreConfiguration 
