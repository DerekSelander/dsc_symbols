|| __DATA.__common _kCIFormat420f601
|| __DATA.__common _kCIFormat420f709
|| __DATA.__common _kCIFormat420v601
|| __DATA.__common _kCIFormat420v709
|| __DATA.__common _kCIFormat444f601
|| __DATA.__common _kCIFormat444f709
|| __DATA.__common _kCIFormat444v601
|| __DATA.__common _kCIFormat444v709
|| __DATA.__common _kCIFormatNil
|| __DATA.__data _kCIBurstImageFaceProperty_FocusScore
|| __DATA.__data _kCIBurstImageFaceProperty_H
|| __DATA.__data _kCIBurstImageFaceProperty_ID
|| __DATA.__data _kCIBurstImageFaceProperty_LeftEyeBlinkScore
|| __DATA.__data _kCIBurstImageFaceProperty_LeftEyeOpen
|| __DATA.__data _kCIBurstImageFaceProperty_LeftEyePosX
|| __DATA.__data _kCIBurstImageFaceProperty_LeftEyePosY
|| __DATA.__data _kCIBurstImageFaceProperty_RightEyeBlinkScore
|| __DATA.__data _kCIBurstImageFaceProperty_RightEyeOpen
|| __DATA.__data _kCIBurstImageFaceProperty_RightEyePosX
|| __DATA.__data _kCIBurstImageFaceProperty_RightEyePosY
|| __DATA.__data _kCIBurstImageFaceProperty_RollAngle
|| __DATA.__data _kCIBurstImageFaceProperty_SmallFace
|| __DATA.__data _kCIBurstImageFaceProperty_SmileScore
|| __DATA.__data _kCIBurstImageFaceProperty_Smiling
|| __DATA.__data _kCIBurstImageFaceProperty_Timestamp
|| __DATA.__data _kCIBurstImageFaceProperty_W
|| __DATA.__data _kCIBurstImageFaceProperty_X
|| __DATA.__data _kCIBurstImageFaceProperty_Y
|| __DATA.__data _kCIBurstImageFaceProperty_YawAngle
|| __DATA.__data _kCIBurstImageProperty_AlgorithmVersion
|| __DATA.__data _kCIBurstImageProperty_FacesArray
|| __DATA.__data _kCIBurstImageProperty_ISPFacesArray
|| __DATA.__data _kCIBurstImageProperty_ImageScore
|| __DATA.__data _kCIBurstImageProperty_ImageTimestamp
|| __DATA.__data _kCIBurstImageProperty_ImageYUVData
|| __DATA.__data _kCIBurstImageProperty_TimeConverted
|| __DATA.__data _kCIBurstImageProperty_TimeDoneAnalysis
|| __DATA.__data _kCIBurstImageProperty_TimeDoneFaceBlinkDetection
|| __DATA.__data _kCIBurstImageProperty_TimeDoneFaceDetection
|| __DATA.__data _kCIBurstImageProperty_TimeDoneFaceFocusScore
|| __DATA.__data _kCIBurstImageProperty_TimeQueued
|| __DATA.__data _kCIBurstImageProperty_TimeReceived
|| __DATA.__data _kCIBurstImageProperty_TimeStartedAnalysis
|| __DATA.__data _kCIBurstImageProperty_TimeStartedFaceDetection
|| __DATA.__data _kCIBurstImageSetInit_Version
|| __DATA.__data _kCIBurstImageSetVersion_Default
|| __DATA.__data _kCIBurstImageSetVersion_Latest
|| __DATA.__data _kCIBurstImageYUVDataProperty_BytesPerRow
|| __DATA.__data _kCIBurstImageYUVDataProperty_Height
|| __DATA.__data _kCIBurstImageYUVDataProperty_UVData
|| __DATA.__data _kCIBurstImageYUVDataProperty_Width
|| __DATA.__data _kCIBurstImageYUVDataProperty_YData
|| __DATA.__data _kCIFormat420f
|| __DATA.__data _kCIFormat420f10
|| __DATA.__data _kCIFormat420f10packed
|| __DATA.__data _kCIFormat420v
|| __DATA.__data _kCIFormat420v10
|| __DATA.__data _kCIFormat420v10packed
|| __DATA.__data _kCIFormatA16
|| __DATA.__data _kCIFormatA2BGR10
|| __DATA.__data _kCIFormatA2RGB10
|| __DATA.__data _kCIFormatA8
|| __DATA.__data _kCIFormatABGR8
|| __DATA.__data _kCIFormatARGB10WideGamut
|| __DATA.__data _kCIFormatARGB16
|| __DATA.__data _kCIFormatARGB8
|| __DATA.__data _kCIFormatARGBf
|| __DATA.__data _kCIFormatAf
|| __DATA.__data _kCIFormatAh
|| __DATA.__data _kCIFormatAllowSRGB
|| __DATA.__data _kCIFormatBGRA8
|| __DATA.__data _kCIFormatBGRX8
|| __DATA.__data _kCIFormatCbYCrY8
|| __DATA.__data _kCIFormatCbYCrY8f
|| __DATA.__data _kCIFormatI16
|| __DATA.__data _kCIFormatI8
|| __DATA.__data _kCIFormatIf
|| __DATA.__data _kCIFormatIh
|| __DATA.__data _kCIFormatL16
|| __DATA.__data _kCIFormatL8
|| __DATA.__data _kCIFormatLA16
|| __DATA.__data _kCIFormatLA8
|| __DATA.__data _kCIFormatLAf
|| __DATA.__data _kCIFormatLAh
|| __DATA.__data _kCIFormatLf
|| __DATA.__data _kCIFormatLh
|| __DATA.__data _kCIFormatR16
|| __DATA.__data _kCIFormatR8
|| __DATA.__data _kCIFormatRG16
|| __DATA.__data _kCIFormatRG8
|| __DATA.__data _kCIFormatRGB10WideGamut
|| __DATA.__data _kCIFormatRGB16
|| __DATA.__data _kCIFormatRGB8
|| __DATA.__data _kCIFormatRGBA14
|| __DATA.__data _kCIFormatRGBA16
|| __DATA.__data _kCIFormatRGBA8
|| __DATA.__data _kCIFormatRGBAf
|| __DATA.__data _kCIFormatRGBAh
|| __DATA.__data _kCIFormatRGBX8
|| __DATA.__data _kCIFormatRGBf
|| __DATA.__data _kCIFormatRGBh
|| __DATA.__data _kCIFormatRGf
|| __DATA.__data _kCIFormatRGh
|| __DATA.__data _kCIFormatRf
|| __DATA.__data _kCIFormatRh
|| __DATA.__data _kCIFormatXBGR8
|| __DATA.__data _kCIFormatXRGB8
|| __DATA.__data _kCIFormatYCbYCr8
|| __DATA.__data _kCIFormatYCbYCr8f
|| __DATA.__objc_data _OBJC_CLASS_$_CIAztecCodeDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CIBarcodeDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CIBitmapContext
|| __DATA.__objc_data _OBJC_CLASS_$_CIBlendKernel
|| __DATA.__objc_data _OBJC_CLASS_$_CIBurstImageSet
|| __DATA.__objc_data _OBJC_CLASS_$_CIColor
|| __DATA.__objc_data _OBJC_CLASS_$_CIColorKernel
|| __DATA.__objc_data _OBJC_CLASS_$_CIContext
|| __DATA.__objc_data _OBJC_CLASS_$_CIContextCache
|| __DATA.__objc_data _OBJC_CLASS_$_CIDataMatrixCodeDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CIDetector
|| __DATA.__objc_data _OBJC_CLASS_$_CIDualRedEyeRepairSession
|| __DATA.__objc_data _OBJC_CLASS_$_CIDualRedEyeRepairTuning
|| __DATA.__objc_data _OBJC_CLASS_$_CIFaceFeature
|| __DATA.__objc_data _OBJC_CLASS_$_CIFeature
|| __DATA.__objc_data _OBJC_CLASS_$_CIFilterShape
|| __DATA.__objc_data _OBJC_CLASS_$_CIImage
|| __DATA.__objc_data _OBJC_CLASS_$_CIImageAccumulator
|| __DATA.__objc_data _OBJC_CLASS_$_CIImageProcessorKernel
|| __DATA.__objc_data _OBJC_CLASS_$_CIKernel
|| __DATA.__objc_data _OBJC_CLASS_$_CIPDF417CodeDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CIQRCodeDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CIQRCodeFeature
|| __DATA.__objc_data _OBJC_CLASS_$_CIRectangleFeature
|| __DATA.__objc_data _OBJC_CLASS_$_CIRenderDestination
|| __DATA.__objc_data _OBJC_CLASS_$_CIRenderInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CIRenderTask
|| __DATA.__objc_data _OBJC_CLASS_$_CISampler
|| __DATA.__objc_data _OBJC_CLASS_$_CITextFeature
|| __DATA.__objc_data _OBJC_CLASS_$_CIVector
|| __DATA.__objc_data _OBJC_CLASS_$_CIWarpKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_CIAztecCodeDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIBarcodeDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIBitmapContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CIBlendKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_CIBurstImageSet
|| __DATA.__objc_data _OBJC_METACLASS_$_CIColor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIColorKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_CIContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CIContextCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CIDataMatrixCodeDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_CIDualRedEyeRepairSession
|| __DATA.__objc_data _OBJC_METACLASS_$_CIDualRedEyeRepairTuning
|| __DATA.__objc_data _OBJC_METACLASS_$_CIFaceFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_CIFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_CIFilterShape
|| __DATA.__objc_data _OBJC_METACLASS_$_CIImage
|| __DATA.__objc_data _OBJC_METACLASS_$_CIImageAccumulator
|| __DATA.__objc_data _OBJC_METACLASS_$_CIImageProcessorKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_CIKernel
|| __DATA.__objc_data _OBJC_METACLASS_$_CIPDF417CodeDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIQRCodeDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CIQRCodeFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_CIRectangleFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_CIRenderDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_CIRenderInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CIRenderTask
|| __DATA.__objc_data _OBJC_METACLASS_$_CISampler
|| __DATA.__objc_data _OBJC_METACLASS_$_CITextFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_CIVector
|| __DATA.__objc_data _OBJC_METACLASS_$_CIWarpKernel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIAztecCodeDescriptor.dataCodewordCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIAztecCodeDescriptor.errorCorrectedPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIAztecCodeDescriptor.isCompact
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIAztecCodeDescriptor.layerCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIBitmapContext._bcpriv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIBurstImageSet._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIColor._pad
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIColor._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIContext._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIDataMatrixCodeDescriptor.columnCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIDataMatrixCodeDescriptor.eccVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIDataMatrixCodeDescriptor.errorCorrectedPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIDataMatrixCodeDescriptor.rowCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.bounds
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.faceAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasFaceAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasLeftEyePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasMouthPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasRightEyePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasSmile
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasTrackingFrameCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.hasTrackingID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.leftEyeClosed
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.leftEyePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.mouthPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.rightEyeClosed
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.rightEyePosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.trackingFrameCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFaceFeature.trackingID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFilter._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFilterShape._pad
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIFilterShape._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIImage._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIImageAccumulator._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIKernel._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIPDF417CodeDescriptor.columnCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIPDF417CodeDescriptor.errorCorrectedPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIPDF417CodeDescriptor.isCompact
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIPDF417CodeDescriptor.rowCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeDescriptor.errorCorrectedPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeDescriptor.errorCorrectionLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeDescriptor.maskPattern
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeDescriptor.symbolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.bottomLeft
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.bottomRight
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.bounds
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.symbolDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.topLeft
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIQRCodeFeature.topRight
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRectangleFeature.bottomLeft
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRectangleFeature.bottomRight
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRectangleFeature.bounds
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRectangleFeature.topLeft
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRectangleFeature.topRight
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRenderDestination._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRenderInfo._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIRenderTask._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CISampler._priv
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIVector._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_CIVector._u
|| __DATA_CONST.__const _CIDetectorAccuracy
|| __DATA_CONST.__const _CIDetectorAccuracyHigh
|| __DATA_CONST.__const _CIDetectorAccuracyLow
|| __DATA_CONST.__const _CIDetectorAspectRatio
|| __DATA_CONST.__const _CIDetectorBetterEyeLocs
|| __DATA_CONST.__const _CIDetectorDetectDiacritics
|| __DATA_CONST.__const _CIDetectorExtraCharacters
|| __DATA_CONST.__const _CIDetectorEyeBlink
|| __DATA_CONST.__const _CIDetectorFocalLength
|| __DATA_CONST.__const _CIDetectorImageOrientation
|| __DATA_CONST.__const _CIDetectorLanguage
|| __DATA_CONST.__const _CIDetectorLanguageASCII
|| __DATA_CONST.__const _CIDetectorLanguageDanish
|| __DATA_CONST.__const _CIDetectorLanguageDutch
|| __DATA_CONST.__const _CIDetectorLanguageEnglish
|| __DATA_CONST.__const _CIDetectorLanguageFrench
|| __DATA_CONST.__const _CIDetectorLanguageGerman
|| __DATA_CONST.__const _CIDetectorLanguageIcelandic
|| __DATA_CONST.__const _CIDetectorLanguageItalian
|| __DATA_CONST.__const _CIDetectorLanguageNone
|| __DATA_CONST.__const _CIDetectorLanguageNorwegian
|| __DATA_CONST.__const _CIDetectorLanguagePortuguese
|| __DATA_CONST.__const _CIDetectorLanguageSpanish
|| __DATA_CONST.__const _CIDetectorLanguageSwedish
|| __DATA_CONST.__const _CIDetectorMaxFeatureCount
|| __DATA_CONST.__const _CIDetectorMinFeatureSize
|| __DATA_CONST.__const _CIDetectorNumberOfAngles
|| __DATA_CONST.__const _CIDetectorReturnSubFeatures
|| __DATA_CONST.__const _CIDetectorSmile
|| __DATA_CONST.__const _CIDetectorTracking
|| __DATA_CONST.__const _CIDetectorTypeFace
|| __DATA_CONST.__const _CIDetectorTypeQRCode
|| __DATA_CONST.__const _CIDetectorTypeRectangle
|| __DATA_CONST.__const _CIDetectorTypeText
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_DeviceModelName
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_ExifOrientation
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_NormalizedSNR
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_PortType
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_TuningParametersByPortType
|| __DATA_CONST.__const _CIDualRedEyeRepairMetadataKey_WouldAutoFlashTurnOn
|| __DATA_CONST.__const _CIFeatureTypeFace
|| __DATA_CONST.__const _CIFeatureTypeQRCode
|| __DATA_CONST.__const _CIFeatureTypeRectangle
|| __DATA_CONST.__const _CIFeatureTypeText
|| __DATA_CONST.__const _CITextDetectorMinimizeFalseDetections
|| __DATA_CONST.__const _kCIActiveKeys
|| __DATA_CONST.__const _kCIApplyOptionColorSpace
|| __DATA_CONST.__const _kCIApplyOptionDefinition
|| __DATA_CONST.__const _kCIApplyOptionExtent
|| __DATA_CONST.__const _kCIApplyOptionUserInfo
|| __DATA_CONST.__const _kCIAttributeClass
|| __DATA_CONST.__const _kCIAttributeDefault
|| __DATA_CONST.__const _kCIAttributeDescription
|| __DATA_CONST.__const _kCIAttributeDisplayName
|| __DATA_CONST.__const _kCIAttributeFilterAvailable_Mac
|| __DATA_CONST.__const _kCIAttributeFilterAvailable_iOS
|| __DATA_CONST.__const _kCIAttributeFilterCategories
|| __DATA_CONST.__const _kCIAttributeFilterDisplayName
|| __DATA_CONST.__const _kCIAttributeFilterName
|| __DATA_CONST.__const _kCIAttributeIdentity
|| __DATA_CONST.__const _kCIAttributeMax
|| __DATA_CONST.__const _kCIAttributeMin
|| __DATA_CONST.__const _kCIAttributeName
|| __DATA_CONST.__const _kCIAttributeReferenceDocumentation
|| __DATA_CONST.__const _kCIAttributeSliderMax
|| __DATA_CONST.__const _kCIAttributeSliderMin
|| __DATA_CONST.__const _kCIAttributeType
|| __DATA_CONST.__const _kCIAttributeTypeAngle
|| __DATA_CONST.__const _kCIAttributeTypeBoolean
|| __DATA_CONST.__const _kCIAttributeTypeColor
|| __DATA_CONST.__const _kCIAttributeTypeCount
|| __DATA_CONST.__const _kCIAttributeTypeDistance
|| __DATA_CONST.__const _kCIAttributeTypeGradient
|| __DATA_CONST.__const _kCIAttributeTypeImage
|| __DATA_CONST.__const _kCIAttributeTypeInteger
|| __DATA_CONST.__const _kCIAttributeTypeOffset
|| __DATA_CONST.__const _kCIAttributeTypeOpaqueColor
|| __DATA_CONST.__const _kCIAttributeTypePosition
|| __DATA_CONST.__const _kCIAttributeTypePosition3
|| __DATA_CONST.__const _kCIAttributeTypeRectangle
|| __DATA_CONST.__const _kCIAttributeTypeScalar
|| __DATA_CONST.__const _kCIAttributeTypeTime
|| __DATA_CONST.__const _kCIAttributeTypeTransform
|| __DATA_CONST.__const _kCIAutoPerspectiveContext
|| __DATA_CONST.__const _kCIAutoPerspectiveFocalLength
|| __DATA_CONST.__const _kCIAutoPerspectiveGenerateDebugImage
|| __DATA_CONST.__const _kCIAutoPerspectiveLineSearchRangeH
|| __DATA_CONST.__const _kCIAutoPerspectiveLineSearchRangeV
|| __DATA_CONST.__const _kCIAutoPerspectiveMinimumPitchCorrectionArea
|| __DATA_CONST.__const _kCIAutoPerspectiveMinimumYawCorrectionArea
|| __DATA_CONST.__const _kCIAutoPerspectivePitchLimit
|| __DATA_CONST.__const _kCIAutoPerspectiveRollLimit
|| __DATA_CONST.__const _kCIAutoPerspectiveSaliencyHeatMap
|| __DATA_CONST.__const _kCIAutoPerspectiveVersion
|| __DATA_CONST.__const _kCIAutoPerspectiveVersion1
|| __DATA_CONST.__const _kCIAutoPerspectiveVersion2
|| __DATA_CONST.__const _kCIAutoPerspectiveYawLimit
|| __DATA_CONST.__const _kCICategoryApplePrivate
|| __DATA_CONST.__const _kCICategoryBlur
|| __DATA_CONST.__const _kCICategoryBuiltIn
|| __DATA_CONST.__const _kCICategoryColorAdjustment
|| __DATA_CONST.__const _kCICategoryColorEffect
|| __DATA_CONST.__const _kCICategoryCompositeOperation
|| __DATA_CONST.__const _kCICategoryDistortionEffect
|| __DATA_CONST.__const _kCICategoryFilterGenerator
|| __DATA_CONST.__const _kCICategoryGenerator
|| __DATA_CONST.__const _kCICategoryGeometryAdjustment
|| __DATA_CONST.__const _kCICategoryGradient
|| __DATA_CONST.__const _kCICategoryHalftoneEffect
|| __DATA_CONST.__const _kCICategoryHighDynamicRange
|| __DATA_CONST.__const _kCICategoryInterlaced
|| __DATA_CONST.__const _kCICategoryLightingEffect
|| __DATA_CONST.__const _kCICategoryNonSquarePixels
|| __DATA_CONST.__const _kCICategoryReduction
|| __DATA_CONST.__const _kCICategorySharpen
|| __DATA_CONST.__const _kCICategoryStillImage
|| __DATA_CONST.__const _kCICategoryStylize
|| __DATA_CONST.__const _kCICategoryTileEffect
|| __DATA_CONST.__const _kCICategoryTransition
|| __DATA_CONST.__const _kCICategoryVideo
|| __DATA_CONST.__const _kCICategoryXMPSerializable
|| __DATA_CONST.__const _kCIContextAllowClampToAlpha
|| __DATA_CONST.__const _kCIContextAllowHalfPrecision
|| __DATA_CONST.__const _kCIContextAllowLowPower
|| __DATA_CONST.__const _kCIContextCacheIntermediates
|| __DATA_CONST.__const _kCIContextColorCubeSize
|| __DATA_CONST.__const _kCIContextDefaultCGImageFormat
|| __DATA_CONST.__const _kCIContextDisableSoftwareFallback
|| __DATA_CONST.__const _kCIContextEnableBlending
|| __DATA_CONST.__const _kCIContextHighQualityDownsample
|| __DATA_CONST.__const _kCIContextInlineAffineTransforms
|| __DATA_CONST.__const _kCIContextIntermediateMemoryTarget
|| __DATA_CONST.__const _kCIContextName
|| __DATA_CONST.__const _kCIContextOpenGLShareContext
|| __DATA_CONST.__const _kCIContextOutputColorSpace
|| __DATA_CONST.__const _kCIContextOutputPremultiplied
|| __DATA_CONST.__const _kCIContextParametricColorMatching
|| __DATA_CONST.__const _kCIContextPriorityRequestHigh
|| __DATA_CONST.__const _kCIContextPriorityRequestLow
|| __DATA_CONST.__const _kCIContextQuality
|| __DATA_CONST.__const _kCIContextUseMetalRenderer
|| __DATA_CONST.__const _kCIContextUseSoftwareRenderer
|| __DATA_CONST.__const _kCIContextWorkingColorSpace
|| __DATA_CONST.__const _kCIContextWorkingFormat
|| __DATA_CONST.__const _kCIImageAVDepthData
|| __DATA_CONST.__const _kCIImageAVPortraitEffectsMatte
|| __DATA_CONST.__const _kCIImageAVSemanticSegmentationMatte
|| __DATA_CONST.__const _kCIImageAccumulatorAbortable
|| __DATA_CONST.__const _kCIImageAccumulatorBlendKernel
|| __DATA_CONST.__const _kCIImageAccumulatorColorSpace
|| __DATA_CONST.__const _kCIImageAlphaOne
|| __DATA_CONST.__const _kCIImageApplyOrientationProperty
|| __DATA_CONST.__const _kCIImageAutoAdjustCrop
|| __DATA_CONST.__const _kCIImageAutoAdjustEnhance
|| __DATA_CONST.__const _kCIImageAutoAdjustFeatures
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel_DominantAngleDiffThreshold
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel_MaxAngle
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel_MinAngle
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel_UseVerticalDetector
|| __DATA_CONST.__const _kCIImageAutoAdjustLevel_VerticalAngleThreshold
|| __DATA_CONST.__const _kCIImageAutoAdjustRedEye
|| __DATA_CONST.__const _kCIImageAuxiliaryDepth
|| __DATA_CONST.__const _kCIImageAuxiliaryDisparity
|| __DATA_CONST.__const _kCIImageAuxiliaryPortraitEffectsMatte
|| __DATA_CONST.__const _kCIImageAuxiliarySemanticSegmentationHairMatte
|| __DATA_CONST.__const _kCIImageAuxiliarySemanticSegmentationSkinMatte
|| __DATA_CONST.__const _kCIImageAuxiliarySemanticSegmentationTeethMatte
|| __DATA_CONST.__const _kCIImageCacheHint
|| __DATA_CONST.__const _kCIImageCacheImmediately
|| __DATA_CONST.__const _kCIImageClampToEdge
|| __DATA_CONST.__const _kCIImageColorSpace
|| __DATA_CONST.__const _kCIImageEdgeRepeat
|| __DATA_CONST.__const _kCIImageEdgesAreClear
|| __DATA_CONST.__const _kCIImageFlipped
|| __DATA_CONST.__const _kCIImageIgnorePixelFormatFor601Fixup
|| __DATA_CONST.__const _kCIImageNearestSampling
|| __DATA_CONST.__const _kCIImageOpaque
|| __DATA_CONST.__const _kCIImagePremultiplied
|| __DATA_CONST.__const _kCIImageProcessorAllowPartialOutputRegion
|| __DATA_CONST.__const _kCIImageProcessorSynchronizeInputs
|| __DATA_CONST.__const _kCIImageProperties
|| __DATA_CONST.__const _kCIImageProviderContentDigest
|| __DATA_CONST.__const _kCIImageProviderName
|| __DATA_CONST.__const _kCIImageProviderTileSize
|| __DATA_CONST.__const _kCIImageProviderUserInfo
|| __DATA_CONST.__const _kCIImageRepresentationAVDepthData
|| __DATA_CONST.__const _kCIImageRepresentationAVPortraitEffectsMatte
|| __DATA_CONST.__const _kCIImageRepresentationAVSemanticSegmentationMattes
|| __DATA_CONST.__const _kCIImageRepresentationDepthImage
|| __DATA_CONST.__const _kCIImageRepresentationDisparityImage
|| __DATA_CONST.__const _kCIImageRepresentationPortraitEffectsMatteImage
|| __DATA_CONST.__const _kCIImageRepresentationSemanticSegmentationHairMatteImage
|| __DATA_CONST.__const _kCIImageRepresentationSemanticSegmentationSkinMatteImage
|| __DATA_CONST.__const _kCIImageRepresentationSemanticSegmentationTeethMatteImage
|| __DATA_CONST.__const _kCIImageTextScaleFactor
|| __DATA_CONST.__const _kCIImageTextureFormat
|| __DATA_CONST.__const _kCIImageTextureTarget
|| __DATA_CONST.__const _kCIImageYCCMatrix
|| __DATA_CONST.__const _kCIInputAllowDraftModeKey
|| __DATA_CONST.__const _kCIInputAmountKey
|| __DATA_CONST.__const _kCIInputAngleKey
|| __DATA_CONST.__const _kCIInputAspectRatioKey
|| __DATA_CONST.__const _kCIInputBackgroundImageKey
|| __DATA_CONST.__const _kCIInputBaselineExposureKey
|| __DATA_CONST.__const _kCIInputBiasKey
|| __DATA_CONST.__const _kCIInputBoostKey
|| __DATA_CONST.__const _kCIInputBoostShadowAmountKey
|| __DATA_CONST.__const _kCIInputBrightnessKey
|| __DATA_CONST.__const _kCIInputCenterKey
|| __DATA_CONST.__const _kCIInputColorKey
|| __DATA_CONST.__const _kCIInputColorNoiseReductionAmountKey
|| __DATA_CONST.__const _kCIInputContrastKey
|| __DATA_CONST.__const _kCIInputDecoderVersionKey
|| __DATA_CONST.__const _kCIInputDepthImageKey
|| __DATA_CONST.__const _kCIInputDisableGamutMapKey
|| __DATA_CONST.__const _kCIInputDisparityImageKey
|| __DATA_CONST.__const _kCIInputEVKey
|| __DATA_CONST.__const _kCIInputEnableChromaticNoiseTrackingKey
|| __DATA_CONST.__const _kCIInputEnableEDRModeKey
|| __DATA_CONST.__const _kCIInputEnableSharpeningKey
|| __DATA_CONST.__const _kCIInputEnableVendorLensCorrectionKey
|| __DATA_CONST.__const _kCIInputExtentKey
|| __DATA_CONST.__const _kCIInputGradientImageKey
|| __DATA_CONST.__const _kCIInputIgnoreImageOrientationKey
|| __DATA_CONST.__const _kCIInputImageKey
|| __DATA_CONST.__const _kCIInputImageOrientationKey
|| __DATA_CONST.__const _kCIInputIntensityKey
|| __DATA_CONST.__const _kCIInputLinearSpaceFilter
|| __DATA_CONST.__const _kCIInputLuminanceNoiseReductionAmountKey
|| __DATA_CONST.__const _kCIInputMaskImageKey
|| __DATA_CONST.__const _kCIInputMatteImageKey
|| __DATA_CONST.__const _kCIInputMoireAmountKey
|| __DATA_CONST.__const _kCIInputNeutralChromaticityXKey
|| __DATA_CONST.__const _kCIInputNeutralChromaticityYKey
|| __DATA_CONST.__const _kCIInputNeutralLocationKey
|| __DATA_CONST.__const _kCIInputNeutralTemperatureKey
|| __DATA_CONST.__const _kCIInputNeutralTintKey
|| __DATA_CONST.__const _kCIInputNoiseReductionAmountKey
|| __DATA_CONST.__const _kCIInputNoiseReductionContrastAmountKey
|| __DATA_CONST.__const _kCIInputNoiseReductionDetailAmountKey
|| __DATA_CONST.__const _kCIInputNoiseReductionSharpnessAmountKey
|| __DATA_CONST.__const _kCIInputRadiusKey
|| __DATA_CONST.__const _kCIInputRefractionKey
|| __DATA_CONST.__const _kCIInputSaturationKey
|| __DATA_CONST.__const _kCIInputScaleFactorKey
|| __DATA_CONST.__const _kCIInputScaleKey
|| __DATA_CONST.__const _kCIInputShadingImageKey
|| __DATA_CONST.__const _kCIInputSharpnessKey
|| __DATA_CONST.__const _kCIInputTargetImageKey
|| __DATA_CONST.__const _kCIInputTimeKey
|| __DATA_CONST.__const _kCIInputTransformKey
|| __DATA_CONST.__const _kCIInputVersionKey
|| __DATA_CONST.__const _kCIInputWeightsKey
|| __DATA_CONST.__const _kCIInputWidthKey
|| __DATA_CONST.__const _kCIKernelMessageDescription
|| __DATA_CONST.__const _kCIKernelMessageFilename
|| __DATA_CONST.__const _kCIKernelMessageLineNumber
|| __DATA_CONST.__const _kCIKernelMessageOffset
|| __DATA_CONST.__const _kCIKernelMessageType
|| __DATA_CONST.__const _kCIKernelMessageTypeError
|| __DATA_CONST.__const _kCIKernelMessageTypeFatal
|| __DATA_CONST.__const _kCIKernelMessageTypeFunctionName
|| __DATA_CONST.__const _kCIKernelMessageTypeInternalError
|| __DATA_CONST.__const _kCIKernelMessageTypeNote
|| __DATA_CONST.__const _kCIKernelMessageTypeRemark
|| __DATA_CONST.__const _kCIKernelMessageTypeSyntaxError
|| __DATA_CONST.__const _kCIKernelMessageTypeWarning
|| __DATA_CONST.__const _kCIKernelOutputFormat
|| __DATA_CONST.__const _kCIOutputImageKey
|| __DATA_CONST.__const _kCIOutputNativeSizeKey
|| __DATA_CONST.__const _kCISamplerAffineMatrix
|| __DATA_CONST.__const _kCISamplerBlur
|| __DATA_CONST.__const _kCISamplerBlurFormat
|| __DATA_CONST.__const _kCISamplerColorSpace
|| __DATA_CONST.__const _kCISamplerFilterLinear
|| __DATA_CONST.__const _kCISamplerFilterMode
|| __DATA_CONST.__const _kCISamplerFilterNearest
|| __DATA_CONST.__const _kCISamplerFilterPoint
|| __DATA_CONST.__const _kCISamplerWrapBlack
|| __DATA_CONST.__const _kCISamplerWrapClamp
|| __DATA_CONST.__const _kCISamplerWrapMode
|| __DATA_CONST.__const _kCISamplerWrapPeriodic
|| __DATA_CONST.__const _kCISupportedDecoderVersionsKey
|| __DATA_CONST.__const _kCIUIParameterSet
|| __DATA_CONST.__const _kCIUISetAdvanced
|| __DATA_CONST.__const _kCIUISetBasic
|| __DATA_CONST.__const _kCIUISetDevelopment
|| __DATA_CONST.__const _kCIUISetIntermediate
|| __DATA_CONST.__const _kCIVNDetectOptionRequestAttributes
|| __DATA_CONST.__const _kCIVNDetectOptionRequestFast
|| __DATA_CONST.__const _kCIVNDetectOptionRequestLandmarks
|| __DATA_CONST.__const _kCIVNDetectOptionRequestPose
|| __DATA_CONST.__const _kCIVNDetectOptionRequestSegments
|| __DATA_CONST.__const _kCIVNLandmarkAllPoints
|| __DATA_CONST.__const _kCIVNLandmarkFace
|| __DATA_CONST.__const _kCIVNLandmarkFaceContour
|| __DATA_CONST.__const _kCIVNLandmarkInnerLips
|| __DATA_CONST.__const _kCIVNLandmarkLeftEye
|| __DATA_CONST.__const _kCIVNLandmarkLeftEyebrow
|| __DATA_CONST.__const _kCIVNLandmarkLeftPupil
|| __DATA_CONST.__const _kCIVNLandmarkMedianLine
|| __DATA_CONST.__const _kCIVNLandmarkNose
|| __DATA_CONST.__const _kCIVNLandmarkNoseCrest
|| __DATA_CONST.__const _kCIVNLandmarkOuterLips
|| __DATA_CONST.__const _kCIVNLandmarkPropsJunkiness
|| __DATA_CONST.__const _kCIVNLandmarkPropsOrientation
|| __DATA_CONST.__const _kCIVNLandmarkRightEye
|| __DATA_CONST.__const _kCIVNLandmarkRightEyebrow
|| __DATA_CONST.__const _kCIVNLandmarkRightPupil
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CIFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CIFilter
|| __TEXT.__text _AVCameraCalibrationDataClass
|| __TEXT.__text _AVCameraCalibrationDataIntrinsicLensDistortionCenter
|| __TEXT.__text _AVCameraCalibrationDataIntrinsicMatrix
|| __TEXT.__text _AVCameraCalibrationDataIntrinsicMatrixReferenceDimensions
|| __TEXT.__text _AVCameraCalibrationDataInverseLensDistortionLookupTable
|| __TEXT.__text _AVCameraCalibrationDataLensDistortionLookupTable
|| __TEXT.__text _AVDepthDataClass
|| __TEXT.__text _AVDepthDataGetAccuracy
|| __TEXT.__text _AVDepthDataGetPortraitScore
|| __TEXT.__text _AVFDepthCameraCalibrationData
|| __TEXT.__text _AVFDepthDataByConvertingToDepthDataType
|| __TEXT.__text _AVFDepthDataByReplacingDepthDataMapWithPixelBuffer
|| __TEXT.__text _AVFDepthDataDictionaryRepresentation
|| __TEXT.__text _AVFDepthDataFromDictionary
|| __TEXT.__text _AVFDepthDataMap
|| __TEXT.__text _AVFDepthDataType
|| __TEXT.__text _AVFPortraitEffectsMatteImage
|| __TEXT.__text _AVPortraitEffectsMatteClass
|| __TEXT.__text _AVPortraitEffectsMatteDictionaryRepresentation
|| __TEXT.__text _AVPortraitEffectsMatteFromDictionary
|| __TEXT.__text _AVSemanticSegmentationMatteByReplacingDepthDataMapWithPixelBuffer
|| __TEXT.__text _AVSemanticSegmentationMatteClass
|| __TEXT.__text _AVSemanticSegmentationMatteDataType
|| __TEXT.__text _AVSemanticSegmentationMatteDictionaryRepresentationForAuxiliaryType
|| __TEXT.__text _AVSemanticSegmentationMatteFromDictionary
|| __TEXT.__text _AVSemanticSegmentationMatteImage
|| __TEXT.__text _AVSemanticSegmentationMatteType
|| __TEXT.__text _CIRedEyeUtilsSizeFromScale
|| __TEXT.__text _CIVNAreaOfBoundsOfLandmarkRegion
|| __TEXT.__text _CIVNAverage
|| __TEXT.__text _CIVNBoundingRect
|| __TEXT.__text _CIVNBoundsOfLandmarkRegion
|| __TEXT.__text _CIVNDenormalizedLandmarks
|| __TEXT.__text _CIVNDetectFaces
|| __TEXT.__text _CIVNLandmarkInOrientedImage
|| __TEXT.__text _CIVNOrientedImageLandmarkEyeRegions
|| __TEXT.__text _CIVNPointInOrientedImage
|| __TEXT.__text _CIVNRectInOrientedImage
|| __TEXT.__text _CIVNgetOrientation
|| __TEXT.__text _CI_GenericRGBLinear_to_TempTint
|| __TEXT.__text _CI_TempTint_to_xy
|| __TEXT.__text _CI_xy_to_TempTint
|| __TEXT.__text _RRmaximumRh
|| __TEXT.__text _areaForAxes
|| __TEXT.__text _axesForEyePointsV2
|| __TEXT.__text _axesForEyePointsV3
|| __TEXT.__text _dump
|| __TEXT.__text _dump420f
|| __TEXT.__text _dumpLinearPNG
|| __TEXT.__text _dumpfilepathWithTag
|| __TEXT.__text _expandFromCenter
|| __TEXT.__text _focusStatsForRegion
|| __TEXT.__text _metaFilterForFilter
|| __TEXT.__text _open_memstream
|| __TEXT.__text _orientedPupilFromLandmarks
|| __TEXT.__text _repairROIforEyePoints
|| __TEXT.__text _semanticPupils
|| __TEXT.__text _semanticPupilsForFaceObservation
__ Accelerate: _vDSP_dotpr
__ Accelerate: _vDSP_vabs
__ Accelerate: _vDSP_vflt32
__ Accelerate: _vDSP_vsbsm
__ Accelerate: _vDSP_vsmsa
__ Accelerate: _vDSP_vsub
__ Accelerate: _vImageBufferFill_ARGBFFFF
__ Accelerate: _vImageConvert_16Fto16U
__ Accelerate: _vImageConvert_16Uto16F
__ Accelerate: _vImageConvert_Planar16FtoPlanar8
__ Accelerate: _vImageConvert_Planar16FtoPlanarF
__ Accelerate: _vImageConvert_Planar16UtoARGB16U
__ Accelerate: _vImageConvert_Planar8toPlanar16F
__ Accelerate: _vImageConvert_Planar8toPlanarF
__ Accelerate: _vImageConvert_PlanarFtoPlanar16F
__ Accelerate: _vImageConvert_PlanarFtoPlanar8
__ Accelerate: _vImageConvert_RGB16UtoRGBA16U
__ Accelerate: _vImageConvert_RGB888toRGBA8888
__ Accelerate: _vImageConvert_RGBFFFtoRGBAFFFF
__ Accelerate: _vImageExtractChannel_ARGB16U
__ Accelerate: _vImageExtractChannel_ARGBFFFF
__ Accelerate: _vImageHistogramCalculation_ARGB8888
__ Accelerate: _vImageHistogramCalculation_ARGBFFFF
__ Accelerate: _vImageOverwriteChannels_ARGBFFFF
__ Accelerate: _vImagePermuteChannelsWithMaskedInsert_ARGB16U
__ Accelerate: _vImagePermuteChannels_ARGB16U
__ Accelerate: _vImagePermuteChannels_ARGB8888
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ ColorSync: _ColorSyncMakeProfile
__ ColorSync: _ColorSyncProfileCopyHeader
__ ColorSync: _ColorSyncProfileCreateMutableCopy
__ ColorSync: _ColorSyncProfileSetHeader
__ ColorSync: _ColorSyncProfileSetTag
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFAttributedStringGetLength
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetFunctionPointerForName
__ CoreFoundation: _CFBundleLoadExecutable
__ CoreFoundation: _CFDataCreateCopy
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDataSetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetRetainCount
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringFindWithOptions
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFURLCreateFromFileSystemRepresentation
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsPackageKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorMalloc
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBitmapInfo
__ CoreGraphics: _CGBitmapContextGetBitsPerComponent
__ CoreGraphics: _CGBitmapContextGetColorSpace
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorConversionInfoIterateColorSpaceFunctionsWithCallbacks
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGColorCreateWithPattern
__ CoreGraphics: _CGColorEqualToColor
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorMatrixGetMatrix
__ CoreGraphics: _CGColorMatrixGetTypeID
__ CoreGraphics: _CGColorNxMTransformGetTransform
__ CoreGraphics: _CGColorNxMTransformGetTypeID
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCopyICCData
__ CoreGraphics: _CGColorSpaceCopyICCProfileDescription
__ CoreGraphics: _CGColorSpaceCreateCalibratedGray
__ CoreGraphics: _CGColorSpaceCreateCalibratedRGB
__ CoreGraphics: _CGColorSpaceCreateDeviceCMYK
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateICCBased
__ CoreGraphics: _CGColorSpaceCreateLab
__ CoreGraphics: _CGColorSpaceCreatePattern
__ CoreGraphics: _CGColorSpaceCreateWithICCData
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceCreateWithPlatformColorSpace
__ CoreGraphics: _CGColorSpaceCreateWithPropertyList
__ CoreGraphics: _CGColorSpaceEqualToColorSpace
__ CoreGraphics: _CGColorSpaceGetBaseColorSpace
__ CoreGraphics: _CGColorSpaceGetCalibratedGrayData
__ CoreGraphics: _CGColorSpaceGetCalibratedRGBData
__ CoreGraphics: _CGColorSpaceGetLabData
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetName
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorSpaceGetType
__ CoreGraphics: _CGColorSpaceGetTypeID
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGColorSpaceSupportsOutput
__ CoreGraphics: _CGColorTRCGetFunction
__ CoreGraphics: _CGColorTRCGetTypeID
__ CoreGraphics: _CGColorTransformConvertColor
__ CoreGraphics: _CGColorTransformConvertColorComponents
__ CoreGraphics: _CGColorTransformCreate
__ CoreGraphics: _CGColorTransformRelease
__ CoreGraphics: _CGContextAddCurveToPoint
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextCopyDeviceColorSpace
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawImageFromRect
__ CoreGraphics: _CGContextDrawLayerAtPoint
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFlush
__ CoreGraphics: _CGContextGetType
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRetain
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetFillColor
__ CoreGraphics: _CGContextSetFillColorSpace
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetGrayFillColor
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetPatternPhase
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetShouldSmoothFonts
__ CoreGraphics: _CGContextSetStrokeColor
__ CoreGraphics: _CGContextSetStrokeColorSpace
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataConsumerCreateWithCFData
__ CoreGraphics: _CGDataConsumerCreateWithURL
__ CoreGraphics: _CGDataConsumerRelease
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGDataProviderCreateDirect
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderCreateWithCopyOfData
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderCreateWithFilename
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGDataProviderReleaseBytePtr
__ CoreGraphics: _CGDataProviderRetain
__ CoreGraphics: _CGDataProviderRetainBytePtr
__ CoreGraphics: _CGImageBlockCreate
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockGetRect
__ CoreGraphics: _CGImageBlockSetCreate
__ CoreGraphics: _CGImageBlockSetGetCount
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetGetRect
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageBlockSetRetain
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateCopyWithColorSpace
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageCreateWithImageProvider
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetIdentifier
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetMask
__ CoreGraphics: _CGImageGetMaskingColors
__ CoreGraphics: _CGImageGetRenderingIntent
__ CoreGraphics: _CGImageGetShouldInterpolate
__ CoreGraphics: _CGImageGetTypeID
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyIOSurface
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageProviderCreate
__ CoreGraphics: _CGImageProviderGetAlphaInfo
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageProviderGetComponentType
__ CoreGraphics: _CGImageProviderGetPixelSize
__ CoreGraphics: _CGImageProviderGetProperty
__ CoreGraphics: _CGImageProviderGetSize
__ CoreGraphics: _CGImageProviderRelease
__ CoreGraphics: _CGImageProviderRetain
__ CoreGraphics: _CGImageProviderSetProperty
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGLayerCreateWithContext
__ CoreGraphics: _CGLayerGetContext
__ CoreGraphics: _CGLayerGetSize
__ CoreGraphics: _CGPDFContextBeginPage
__ CoreGraphics: _CGPDFContextClose
__ CoreGraphics: _CGPDFContextCreate
__ CoreGraphics: _CGPDFContextEndPage
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPatternCreate
__ CoreGraphics: _CGPatternRelease
__ CoreGraphics: _CGPointMakeWithDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSNewRegionWithRect
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceAdobeRGB1998
__ CoreGraphics: _kCGColorSpaceDisplayP3
__ CoreGraphics: _kCGColorSpaceExtendedLinearGray
__ CoreGraphics: _kCGColorSpaceExtendedLinearSRGB
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceLinearGray
__ CoreGraphics: _kCGColorSpaceLinearSRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImageBlockBaseAddressAlignmentRequest
__ CoreGraphics: _kCGImageBlockBytesPerRowAlignmentRequest
__ CoreGraphics: _kCGImageBlockColorSpaceRequest
__ CoreGraphics: _kCGImageBlockFormatRequest
__ CoreGraphics: _kCGImageBlockMarkAsReadOnlyRequest
__ CoreGraphics: _kCGImageBlockSingletonRequest
__ CoreGraphics: _kCGImageBlockTileRequest
__ CoreGraphics: _kCGImageProviderAlphaIsNotPremultiplied
__ CoreGraphics: _kCGImageProviderAlphaIsOne
__ CoreGraphics: _kCGImageProviderAlphaIsPremultiplied
__ CoreGraphics: _kCGPDFContextCreator
__ CoreGraphics: _kCGPDFContextMediaBox
__ CoreGraphics: _kCGPDFContextTitle
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _FigDispatchQueueCreateWithPriority
__ CoreMedia: _kFigAppleMakerNote_AEAverage
__ CoreMedia: _kFigAppleMakerNote_AEMatrix
__ CoreMedia: _kFigAppleMakerNote_AEStable
__ CoreMedia: _kFigAppleMakerNote_AETarget
__ CoreMedia: _kFigAppleMakerNote_AFStable
__ CoreMedia: _kFigAppleMakerNote_Timestamp
__ CoreText: _CTFontCreateWithName
__ CoreText: _CTFrameDraw
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTParagraphStyleCreate
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTParagraphStyleAttributeName
__ CoreVideo: _CVBufferGetAttachment
__ CoreVideo: _CVBufferGetAttachments
__ CoreVideo: _CVBufferSetAttachment
__ CoreVideo: _CVCreateColorSpaceFromIOSurfaceBulkAttachments
__ CoreVideo: _CVImageBufferCreateColorSpaceFromAttachments
__ CoreVideo: _CVImageBufferGetEncodedSize
__ CoreVideo: _CVImageBufferIsFlipped
__ CoreVideo: _CVMetalTextureGetTexture
__ CoreVideo: _CVMetalTextureGetTypeID
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBaseAddressOfPlane
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetBytesPerRowOfPlane
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetHeightOfPlane
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetPlaneCount
__ CoreVideo: _CVPixelBufferGetTypeID
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferGetWidthOfPlane
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVImageBufferColorPrimariesKey
__ CoreVideo: _kCVImageBufferColorPrimaries_DCI_P3
__ CoreVideo: _kCVImageBufferColorPrimaries_EBU_3213
__ CoreVideo: _kCVImageBufferColorPrimaries_ITU_R_2020
__ CoreVideo: _kCVImageBufferColorPrimaries_ITU_R_709_2
__ CoreVideo: _kCVImageBufferColorPrimaries_P22
__ CoreVideo: _kCVImageBufferColorPrimaries_P3_D65
__ CoreVideo: _kCVImageBufferColorPrimaries_SMPTE_C
__ CoreVideo: _kCVImageBufferGammaLevelKey
__ CoreVideo: _kCVImageBufferTransferFunctionKey
__ CoreVideo: _kCVImageBufferTransferFunction_ITU_R_2020
__ CoreVideo: _kCVImageBufferTransferFunction_ITU_R_709_2
__ CoreVideo: _kCVImageBufferTransferFunction_Linear
__ CoreVideo: _kCVImageBufferTransferFunction_SMPTE_240M_1995
__ CoreVideo: _kCVImageBufferTransferFunction_SMPTE_ST_428_1
__ CoreVideo: _kCVImageBufferTransferFunction_UseGamma
__ CoreVideo: _kCVImageBufferTransferFunction_sRGB
__ CoreVideo: _kCVImageBufferYCbCrMatrixKey
__ CoreVideo: _kCVImageBufferYCbCrMatrix_DCI_P3
__ CoreVideo: _kCVImageBufferYCbCrMatrix_ITU_R_2020
__ CoreVideo: _kCVImageBufferYCbCrMatrix_ITU_R_601_4
__ CoreVideo: _kCVImageBufferYCbCrMatrix_ITU_R_709_2
__ CoreVideo: _kCVImageBufferYCbCrMatrix_P3_D65
__ CoreVideo: _kCVImageBufferYCbCrMatrix_SMPTE_240M_1995
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ CoreVideo: _kCVPixelFormatOpenGLESCompatibility
__ FaceCore: _FCRDetectionParamDetectionRegion
__ FaceCore: _FCRDetectionParamEnhancedEyesAndMouthLocalization
__ FaceCore: _FCRDetectionParamInitialAngle
__ FaceCore: _FCRExtractionParamEnhancedEyesAndMouthLocalization
__ FaceCore: _FCRExtractionParamExtractBlink
__ FaceCore: _FCRExtractionParamExtractFaceprint
__ FaceCore: _FCRExtractionParamExtractLandmarkPoints
__ FaceCore: _FCRExtractionParamExtractSmile
__ FaceCore: _FCRExtractionParamInitialAngle
__ FaceCore: _FCRFaceDetectionParameters
__ FaceCore: _FCRFaceExpressionLeftEyeClosed
__ FaceCore: _FCRFaceExpressionLeftEyeClosedScore
__ FaceCore: _FCRFaceExpressionRightEyeClosed
__ FaceCore: _FCRFaceExpressionRightEyeClosedScore
__ FaceCore: _FCRFaceExpressionSmile
__ FaceCore: _FCRFaceExpressionSmileScore
__ FaceCore: _FCRFastFaceDetectionParameters
__ FaceCore: _FCRKeypointTrackingParameters
__ FaceCore: _FCRSetupParamMinFaceSize
__ FaceCore: _FCRSetupParamNumberOfAngles
__ FaceCore: _FCRStandardTrackingParameters
__ FaceCore: _OBJC_CLASS_$_FCRFace
__ FaceCore: _OBJC_CLASS_$_FCRFaceDetector
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAffineTransform
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationQueue
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUserActivity
__ Foundation: _OBJC_CLASS_$_NSValue
__ GraphVisualizer: _OBJC_CLASS_$_GVGraph
__ GraphVisualizer: _OBJC_CLASS_$_GVNode
__ GraphVisualizer: _OBJC_METACLASS_$_GVNode
__ IOSurface: _IOSurfaceCopyValue
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBaseAddressOfPlane
__ IOSurface: _IOSurfaceGetBulkAttachments
__ IOSurface: _IOSurfaceGetBytesPerElement
__ IOSurface: _IOSurfaceGetBytesPerElementOfPlane
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _IOSurfaceGetBytesPerRowOfPlane
__ IOSurface: _IOSurfaceGetElementHeightOfPlane
__ IOSurface: _IOSurfaceGetElementWidthOfPlane
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetHeightOfPlane
__ IOSurface: _IOSurfaceGetID
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetPlaneCount
__ IOSurface: _IOSurfaceGetPropertyMaximum
__ IOSurface: _IOSurfaceGetSeed
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceGetWidthOfPlane
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceLockPlane
__ IOSurface: _IOSurfaceSetPurgeable
__ IOSurface: _IOSurfaceSetValue
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _IOSurfaceUnlockPlane
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceCacheMode
__ IOSurface: _kIOSurfaceClientAddress
__ IOSurface: _kIOSurfaceColorSpace
__ IOSurface: _kIOSurfaceElementHeight
__ IOSurface: _kIOSurfaceElementWidth
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfaceName
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfacePlaneBytesPerElement
__ IOSurface: _kIOSurfacePlaneBytesPerRow
__ IOSurface: _kIOSurfacePlaneElementWidth
__ IOSurface: _kIOSurfacePlaneHeight
__ IOSurface: _kIOSurfacePlaneInfo
__ IOSurface: _kIOSurfacePlaneOffset
__ IOSurface: _kIOSurfacePlaneSize
__ IOSurface: _kIOSurfacePlaneWidth
__ IOSurface: _kIOSurfaceWidth
__ IOSurface: _kIOSurfaceYCbCrMatrix
__ IOSurface: _kIOSurfaceYCbCrMatrix_ITU_R_601_4_String
__ IOSurface: _kIOSurfaceYCbCrMatrix_ITU_R_709_2_String
__ IOSurface: _kIOSurfaceYCbCrMatrix_SMPTE_240M_1995_String
__ ImageIO: _CGImageCreateFromIOSurface
__ ImageIO: _CGImageDestinationAddAuxiliaryDataInfo
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageMetadataCopyTagWithPath
__ ImageIO: _CGImageMetadataCreateFromData
__ ImageIO: _CGImageMetadataCreateFromXMPData
__ ImageIO: _CGImageMetadataCreateMutable
__ ImageIO: _CGImageMetadataCreateMutableCopy
__ ImageIO: _CGImageMetadataCreateSerializedData
__ ImageIO: _CGImageMetadataGetTypeID
__ ImageIO: _CGImageMetadataPropertyCreate
__ ImageIO: _CGImageMetadataPropertyGetValue
__ ImageIO: _CGImageMetadataPropertySetValue
__ ImageIO: _CGImageMetadataRegisterNamespaceForPrefix
__ ImageIO: _CGImageMetadataSetTagWithPath
__ ImageIO: _CGImageMetadataSetValueWithPath
__ ImageIO: _CGImageMetadataTagCopyValue
__ ImageIO: _CGImageMetadataTagCreate
__ ImageIO: _CGImageMetadataTagGetType
__ ImageIO: _CGImageMetadataValueCreate
__ ImageIO: _CGImageMetadataValueGetNamespaceURI
__ ImageIO: _CGImageMetadataValueGetValue
__ ImageIO: _CGImageMetadataValueSetNamespaceURI
__ ImageIO: _CGImageMetadataValueSetSuggestedNamespacePrefix
__ ImageIO: _CGImageSourceCopyAuxiliaryDataInfoAtIndex
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCopyTypeIdentifiers
__ ImageIO: _CGImageSourceCreateIOSurfaceAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _CGImageSourceGetTypeWithExtension
__ ImageIO: _GetMetadataPropertyMatchingSchemaAndPropertyName
__ ImageIO: _kCGImageAuxiliaryDataInfoData
__ ImageIO: _kCGImageAuxiliaryDataInfoDataDescription
__ ImageIO: _kCGImageAuxiliaryDataInfoMetadata
__ ImageIO: _kCGImageAuxiliaryDataTypeDepth
__ ImageIO: _kCGImageAuxiliaryDataTypeDisparity
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImagePropertyExifAuxDictionary
__ ImageIO: _kCGImagePropertyExifAuxROIRegionFocusType
__ ImageIO: _kCGImagePropertyExifAuxROIRegionList
__ ImageIO: _kCGImagePropertyExifAuxROIRegionType
__ ImageIO: _kCGImagePropertyExifCustomRendered
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifFlash
__ ImageIO: _kCGImagePropertyExifPixelXDimension
__ ImageIO: _kCGImagePropertyExifPixelYDimension
__ ImageIO: _kCGImagePropertyIPTCDictionary
__ ImageIO: _kCGImagePropertyIPTCKeywords
__ ImageIO: _kCGImagePropertyJPEGChromaSubsamplingX
__ ImageIO: _kCGImagePropertyJPEGChromaSubsamplingY
__ ImageIO: _kCGImagePropertyMakerAppleDictionary
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFCompression
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFModel
__ ImageIO: _kCGImagePropertyTIFFOrientation
__ ImageIO: _kCGImageSourceNoiseTransitionEnabled
__ ImageIO: _kCGImageSourceRasterizationDPI
__ ImageIO: _kCGImageSourceRawReconstructionDefaults
__ ImageIO: _kCGImageSourceRawReconstructionMethodVersions
__ ImageIO: _kCGImageSourceRawReconstructionOptions
__ ImageIO: _kCGImageSourceSharpenEnabled
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceShouldCacheImmediately
__ ImageIO: _kCGImageSourceShouldExtendRaw
__ ImageIO: _kCGImageSourceShouldUseMethodVersion
__ ImageIO: _kCGImageSourceSubsampleFactor
__ ImageIO: _kCGImageSourceTypeIdentifierHint
__ ImageIO: _kCGImageSourceUseHardwareAcceleration
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _MTLPixelFormatGetInfoForDevice
__ Metal: _OBJC_CLASS_$_MTLCaptureManager
__ Metal: _OBJC_CLASS_$_MTLFunctionConstantValues
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLSamplerDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ Metal: _OBJC_CLASS_$_MTLTileRenderPipelineDescriptor
__ MetalPerformanceShaders: _MPSSupportsMTLDevice
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageAreaMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageAreaMin
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageBox
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageConvolution
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageDescriptor
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageGaussianBlur
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageIntegral
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageStatisticsMean
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageStatisticsMinAndMax
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageThresholdBinary
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSImageThresholdBinaryInverse
__ MetalPerformanceShaders: _OBJC_CLASS_$_MPSTemporaryImage
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glGetIntegerv
__ OpenGLES: _glGetTexLevelParameteriv
__ OpenGLES: _glTexImage2D
__ OpenGLES: _kEAGLContextPropertyAccelerated
__ OpenGLES: _kEAGLContextPropertyClientLabel
__ OpenGLES: _kEAGLContextPropertyClientRetainRelease
__ OpenGLES: _kEAGLContextPropertySharegroup
__ OpenGLES: _kEAGLContextPropertyVisibleInDebugTools
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___fpclassifyd
__ libSystem.B.dylib: ___fpclassifyf
__ libSystem.B.dylib: ___invert_f3
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___memset_chk
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___strcat_chk
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: ___strncat_chk
__ libSystem.B.dylib: ___vsnprintf_chk
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _atexit_b
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _atol
__ libSystem.B.dylib: _bcopy
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cbrt
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _cosf
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_qos_class
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _erf
__ libSystem.B.dylib: _erfc
__ libSystem.B.dylib: _erff
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _exp2f
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freelocale
__ libSystem.B.dylib: _frexp
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _funopen
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpagesize
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _hypotf
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _ldexp
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _log2f
__ libSystem.B.dylib: _logf
__ libSystem.B.dylib: _lrintf
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _lroundf
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _memset_pattern4
__ libSystem.B.dylib: _memset_pattern8
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _mprotect
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _newlocale
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_pidoriginatorinfo
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strcpy
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtod
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _tanh
__ libSystem.B.dylib: _uselocale
__ libSystem.B.dylib: _uuid_generate
__ libSystem.B.dylib: _uuid_unparse
__ libSystem.B.dylib: _vfprintf
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm
__ libc++.1.dylib: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7replaceEmmPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm
__ libc++.1.dylib: __ZNSt3__14cerrE
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16__sortIRNS_6__lessIddEEPdEEvT0_S5_T_
__ libc++.1.dylib: __ZNSt3__16chrono12steady_clock3nowEv
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_pure_virtual
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addIvar
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_copyIvarList
__ libobjc.A.dylib: _class_copyMethodList
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _class_replaceMethod
__ libobjc.A.dylib: _ivar_getName
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _method_exchangeImplementations
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getName
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateClassPair
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _object_getInstanceVariable
__ libobjc.A.dylib: _object_getIvar
__ libobjc.A.dylib: _object_setIvar
__ libobjc.A.dylib: _property_copyAttributeList
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _sel_getName
__ libobjc.A.dylib: _sel_getUid
AutoCropper : NSObject
 @property  BOOL shouldFavorBottom
 @property  BOOL shouldFavorTop
 @property  {CGSize=dd} originalImageSize

  // instance methods
  -[AutoCropper init]
  -[AutoCropper setShouldFavorTop:]
  -[AutoCropper setShouldFavorBottom:]
  -[AutoCropper rectContainingRect:andOtherRect:]
  -[AutoCropper rectWithSize:andPoint:inPosition:fromOriginalSize:]
  -[AutoCropper scaleRect:toFitSize:withAnchorPoint:]
  -[AutoCropper determineBestPositionWithinSize:forImportantRect:restrictRect:]
  -[AutoCropper scaleRect:byScale:]
  -[AutoCropper expandRect:toContainRect:]
  -[AutoCropper computeClippingWithinSize:andImportantRect:]
  -[AutoCropper getRatioOfSize:]
  -[AutoCropper clusterRects:]
  -[AutoCropper computeClippingWithinSize:andImportantRects:]
  -[AutoCropper computeClippingWithinSize:forImportantRect:andType:restrictRect:]
  -[AutoCropper computeClippingWithinSize:forMultipleRects:]
  -[AutoCropper shouldFavorTop]
  -[AutoCropper shouldFavorBottom]
  -[AutoCropper originalImageSize]
  -[AutoCropper setOriginalImageSize:]


CIBilateralGridHash : NSObject
  // instance methods
  -[CIBilateralGridHash dealloc]
  -[CIBilateralGridHash clear]
  -[CIBilateralGridHash _computeBilateralSpaceYCC444:region:cropRect:sigma_s:sigma_r_luma:sigma_r_chroma:]
  -[CIBilateralGridHash _computeBlurIndices]
  -[CIBilateralGridHash _computeCoordIndices]
  -[CIBilateralGridHash _computeInterpIndices]
  -[CIBilateralGridHash _createWithSurface:region:cropRect:sigma_s:sigma_r_luma:sigma_r_chroma:]
  -[CIBilateralGridHash countVertices]
  -[CIBilateralGridHash width]
  -[CIBilateralGridHash height]
  -[CIBilateralGridHash countDims]
  -[CIBilateralGridHash _addHashKeyAtX:Y:key:isKeyExist:]
  -[CIBilateralGridHash _hashMapFindKey:to:]
  -[CIBilateralGridHash _hashMapAddKey:andValue:]
  -[CIBilateralGridHash sigma_s]
  -[CIBilateralGridHash sigma_r_luma]
  -[CIBilateralGridHash sigma_r_chroma]
  -[CIBilateralGridHash initWithWidth:height:maxHashTableSize:]
  -[CIBilateralGridHash createWithSurface:region:cropRect:sigma_s:sigma_r_luma:sigma_r_chroma:]
  -[CIBilateralGridHash splat:pout:]
  -[CIBilateralGridHash splat_w_mul_x:inPixelBuffer:pout:]
  -[CIBilateralGridHash slice:outPixelBuffer:]
  -[CIBilateralGridHash slice_trilinear:pin:pout:]
  -[CIBilateralGridHash blur:pout:]
  -[CIBilateralGridHash normalize:pout:]
  -[CIBilateralGridHash normalize_blur:pout:]
  -[CIBilateralGridHash splat_ones:]
  -[CIBilateralGridHash blur_ones:]
  -[CIBilateralGridHash blur_n:]
  -[CIBilateralGridHash blur_indices:n_blur_indices:]
  -[CIBilateralGridHash hash_table]
  -[CIBilateralGridHash hash_matrix]
  -[CIBilateralGridHash blur_table]
  -[CIBilateralGridHash coord_indices]
  -[CIBilateralGridHash coord_table]
  -[CIBilateralGridHash interp_indices]
  -[CIBilateralGridHash interp_table]
  -[CIBilateralGridHash interp_pad]


CIBilateralSolverCPU : NSObject
 @property  BOOL useTrilinearInterpolation

  // class methods
  +[CIBilateralSolverCPU _computeAx:A:Dn:lambda:x:output:]

  // instance methods
  -[CIBilateralSolverCPU dealloc]
  -[CIBilateralSolverCPU _doBistochastize:nIterations:]
  -[CIBilateralSolverCPU _doSolve:t:c:x:lambda:pcgMaxIterations:]
  -[CIBilateralSolverCPU _pcg:A:lambda:b:x:M:tol:maxIterations:]
  -[CIBilateralSolverCPU initWithWidth:height:maxVertices:]
  -[CIBilateralSolverCPU doSolveWithBilateralGridhash:reference:disparity:confidence:output:lambda:maxIterations:]
  -[CIBilateralSolverCPU useTrilinearInterpolation]
  -[CIBilateralSolverCPU setUseTrilinearInterpolation:]


CIBilateralSolverGPU : NSObject
 @property  BOOL useTrilinearInterpolation

  // instance methods
  -[CIBilateralSolverGPU .cxx_destruct]
  -[CIBilateralSolverGPU useTrilinearInterpolation]
  -[CIBilateralSolverGPU setUseTrilinearInterpolation:]
  -[CIBilateralSolverGPU _setupPipelinesAsync:]
  -[CIBilateralSolverGPU _setupMetal]
  -[CIBilateralSolverGPU _setupPipelineCache]
  -[CIBilateralSolverGPU _setupBuffer]
  -[CIBilateralSolverGPU _prepareResources:]
  -[CIBilateralSolverGPU _doBistochastizeWithCommandBuffer:t_tex:c_tex:lambda:nIterations:]
  -[CIBilateralSolverGPU _doPCGWithCommandBuffer:nIterations:]
  -[CIBilateralSolverGPU _doSliceTrilinearWithCommandBuffer:ref_tex:o_tex:]
  -[CIBilateralSolverGPU _doSliceWithCommandBuffer:o_tex:]
  -[CIBilateralSolverGPU initWithWidth:height:maxVertices:commandBuffer:]
  -[CIBilateralSolverGPU doSolveWithBilateralGridhash:reference:disparity:confidence:output:lambda:maxIterations:offsets:]


CIAccordionFoldTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  NSNumber *inputBottomHeight
 @property  NSNumber *inputNumberOfFolds
 @property  NSNumber *inputFoldShadowAmount
 @property  NSNumber *inputTime

  // class methods
  +[CIAccordionFoldTransition customAttributes]

  // instance methods
  -[CIAccordionFoldTransition _kernelWarpS]
  -[CIAccordionFoldTransition _kernelWarpT]
  -[CIAccordionFoldTransition _kernelMix]
  -[CIAccordionFoldTransition _kernel]
  -[CIAccordionFoldTransition outputImage]
  -[CIAccordionFoldTransition inputImage]
  -[CIAccordionFoldTransition setInputImage:]
  -[CIAccordionFoldTransition inputTargetImage]
  -[CIAccordionFoldTransition setInputTargetImage:]
  -[CIAccordionFoldTransition inputBottomHeight]
  -[CIAccordionFoldTransition setInputBottomHeight:]
  -[CIAccordionFoldTransition inputNumberOfFolds]
  -[CIAccordionFoldTransition setInputNumberOfFolds:]
  -[CIAccordionFoldTransition inputFoldShadowAmount]
  -[CIAccordionFoldTransition setInputFoldShadowAmount:]
  -[CIAccordionFoldTransition inputTime]
  -[CIAccordionFoldTransition setInputTime:]


CIClamp : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent

  // class methods
  +[CIClamp customAttributes]

  // instance methods
  -[CIClamp outputImage]
  -[CIClamp inputImage]
  -[CIClamp setInputImage:]
  -[CIClamp inputExtent]
  -[CIClamp setInputExtent:]


CIAffineClamp : CIFilter
 @property  CIImage *inputImage
 @property  NSValue *inputTransform

  // class methods
  +[CIAffineClamp customAttributes]

  // instance methods
  -[CIAffineClamp outputImage]
  -[CIAffineClamp inputImage]
  -[CIAffineClamp setInputImage:]
  -[CIAffineClamp inputTransform]
  -[CIAffineClamp setInputTransform:]


CISimpleTile : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CISimpleTile customAttributes]

  // instance methods
  -[CISimpleTile _kernel]
  -[CISimpleTile outputImage]
  -[CISimpleTile inputImage]
  -[CISimpleTile setInputImage:]


CIAffineTile : CIFilter
 @property  CIImage *inputImage
 @property  NSValue *inputTransform

  // class methods
  +[CIAffineTile customAttributes]

  // instance methods
  -[CIAffineTile _kernel]
  -[CIAffineTile outputImage]
  -[CIAffineTile inputImage]
  -[CIAffineTile setInputImage:]
  -[CIAffineTile inputTransform]
  -[CIAffineTile setInputTransform:]


CIAffineTransform : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  NSValue *inputTransform

  // class methods
  +[CIAffineTransform customAttributes]

  // instance methods
  -[CIAffineTransform outputImage]
  -[CIAffineTransform inputImage]
  -[CIAffineTransform setInputImage:]
  -[CIAffineTransform inputTransform]
  -[CIAffineTransform setInputTransform:]
  -[CIAffineTransform _outputProperties]
  -[CIAffineTransform _initFromProperties:]


CIASGPercent : CIFilter
  // class methods
  +[CIASGPercent customAttributes]

  // instance methods
  -[CIASGPercent outputImage]
  -[CIASGPercent outputImageScale:outset:hKernel:vKernel:]


CIASG50Percent : CIASGPercent
  // instance methods
  -[CIASG50Percent outputImage]


CIASG66Percent : CIASGPercent
  // instance methods
  -[CIASG66Percent outputImage]


CIASG75Percent : CIASGPercent
  // instance methods
  -[CIASG75Percent outputImage]


CIASG80Percent : CIASGPercent
  // instance methods
  -[CIASG80Percent outputImage]


CIASG60Percent : CIASGPercent
  // instance methods
  -[CIASG60Percent outputImage]


CIAppleSmithGossettScale : CIFilter
  // class methods
  +[CIAppleSmithGossettScale customAttributes]

  // instance methods
  -[CIAppleSmithGossettScale outputImage]


CIAreaHistogram : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent
 @property  NSNumber *inputScale
 @property  NSNumber *inputCount

  // class methods
  +[CIAreaHistogram customAttributes]

  // instance methods
  -[CIAreaHistogram outputImage]
  -[CIAreaHistogram inputImage]
  -[CIAreaHistogram setInputImage:]
  -[CIAreaHistogram inputExtent]
  -[CIAreaHistogram setInputExtent:]
  -[CIAreaHistogram inputScale]
  -[CIAreaHistogram _netExtent]
  -[CIAreaHistogram _inputsAreOK]
  -[CIAreaHistogram outputImageNonMPS]
  -[CIAreaHistogram outputData]
  -[CIAreaHistogram setInputScale:]
  -[CIAreaHistogram inputCount]
  -[CIAreaHistogram setInputCount:]


CIPercentileRed : CIFilter
 @property  NSNumber *inputPercentile
 @property  NSNumber *inputCount
 @property  NSNumber *inputScale
 @property  NSNumber *inputNormalize
 @property  NSNumber *inputClip
 @property  NSNumber *inputHard

  // class methods
  +[CIPercentileRed customAttributes]

  // instance methods
  -[CIPercentileRed outputImage]
  -[CIPercentileRed inputScale]
  -[CIPercentileRed setInputScale:]
  -[CIPercentileRed inputCount]
  -[CIPercentileRed setInputCount:]
  -[CIPercentileRed inputPercentile]
  -[CIPercentileRed setInputPercentile:]
  -[CIPercentileRed inputNormalize]
  -[CIPercentileRed setInputNormalize:]
  -[CIPercentileRed inputClip]
  -[CIPercentileRed setInputClip:]
  -[CIPercentileRed inputHard]
  -[CIPercentileRed setInputHard:]


CIBarcodeDescriptor : NSObject <NSSecureCoding, NSCopying>
  // class methods
  +[CIBarcodeDescriptor supportsSecureCoding]

  // instance methods
  -[CIBarcodeDescriptor init]
  -[CIBarcodeDescriptor copyWithZone:]
  -[CIBarcodeDescriptor encodeWithCoder:]
  -[CIBarcodeDescriptor initWithCoder:]


CIQRCodeDescriptor : CIBarcodeDescriptor
 @property  NSData *errorCorrectedPayload
 @property  long long symbolVersion
 @property  unsigned char maskPattern
 @property  long long errorCorrectionLevel

  // class methods
  +[CIQRCodeDescriptor supportsSecureCoding]
  +[CIQRCodeDescriptor descriptorWithPayload:symbolVersion:maskPattern:errorCorrectionLevel:]

  // instance methods
  -[CIQRCodeDescriptor dealloc]
  -[CIQRCodeDescriptor copyWithZone:]
  -[CIQRCodeDescriptor isValid]
  -[CIQRCodeDescriptor encodeWithCoder:]
  -[CIQRCodeDescriptor initWithCoder:]
  -[CIQRCodeDescriptor initWithPayload:symbolVersion:maskPattern:errorCorrectionLevel:]
  -[CIQRCodeDescriptor errorCorrectedPayload]
  -[CIQRCodeDescriptor symbolVersion]
  -[CIQRCodeDescriptor maskPattern]
  -[CIQRCodeDescriptor errorCorrectionLevel]


CIAztecCodeDescriptor : CIBarcodeDescriptor
 @property  NSData *errorCorrectedPayload
 @property  BOOL isCompact
 @property  long long layerCount
 @property  long long dataCodewordCount

  // class methods
  +[CIAztecCodeDescriptor supportsSecureCoding]
  +[CIAztecCodeDescriptor descriptorWithPayload:isCompact:layerCount:dataCodewordCount:]

  // instance methods
  -[CIAztecCodeDescriptor dealloc]
  -[CIAztecCodeDescriptor copyWithZone:]
  -[CIAztecCodeDescriptor isValid]
  -[CIAztecCodeDescriptor encodeWithCoder:]
  -[CIAztecCodeDescriptor initWithCoder:]
  -[CIAztecCodeDescriptor errorCorrectedPayload]
  -[CIAztecCodeDescriptor initWithPayload:isCompact:layerCount:dataCodewordCount:]
  -[CIAztecCodeDescriptor isCompact]
  -[CIAztecCodeDescriptor layerCount]
  -[CIAztecCodeDescriptor dataCodewordCount]


CIPDF417CodeDescriptor : CIBarcodeDescriptor
 @property  NSData *errorCorrectedPayload
 @property  BOOL isCompact
 @property  long long rowCount
 @property  long long columnCount

  // class methods
  +[CIPDF417CodeDescriptor supportsSecureCoding]
  +[CIPDF417CodeDescriptor descriptorWithPayload:isCompact:rowCount:columnCount:]

  // instance methods
  -[CIPDF417CodeDescriptor dealloc]
  -[CIPDF417CodeDescriptor copyWithZone:]
  -[CIPDF417CodeDescriptor isValid]
  -[CIPDF417CodeDescriptor encodeWithCoder:]
  -[CIPDF417CodeDescriptor initWithCoder:]
  -[CIPDF417CodeDescriptor rowCount]
  -[CIPDF417CodeDescriptor columnCount]
  -[CIPDF417CodeDescriptor errorCorrectedPayload]
  -[CIPDF417CodeDescriptor isCompact]
  -[CIPDF417CodeDescriptor initWithPayload:isCompact:rowCount:columnCount:]


CIDataMatrixCodeDescriptor : CIBarcodeDescriptor
 @property  NSData *errorCorrectedPayload
 @property  long long rowCount
 @property  long long columnCount
 @property  long long eccVersion

  // class methods
  +[CIDataMatrixCodeDescriptor supportsSecureCoding]
  +[CIDataMatrixCodeDescriptor descriptorWithPayload:rowCount:columnCount:eccVersion:]

  // instance methods
  -[CIDataMatrixCodeDescriptor dealloc]
  -[CIDataMatrixCodeDescriptor copyWithZone:]
  -[CIDataMatrixCodeDescriptor encodeWithCoder:]
  -[CIDataMatrixCodeDescriptor initWithCoder:]
  -[CIDataMatrixCodeDescriptor rowCount]
  -[CIDataMatrixCodeDescriptor columnCount]
  -[CIDataMatrixCodeDescriptor errorCorrectedPayload]
  -[CIDataMatrixCodeDescriptor initWithPayload:rowCount:columnCount:eccVersion:]
  -[CIDataMatrixCodeDescriptor eccVersion]


CIBarcodeDetector : CIDetector
 @property  CIContext *context

  // instance methods
  -[CIBarcodeDetector dealloc]
  -[CIBarcodeDetector finalize]
  -[CIBarcodeDetector context]
  -[CIBarcodeDetector setContext:]
  -[CIBarcodeDetector featuresInImage:options:]
  -[CIBarcodeDetector initWithContext:options:]
  -[CIBarcodeDetector featuresInImage:]


CIBarsSwipeTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  NSNumber *inputAngle
 @property  NSNumber *inputWidth
 @property  NSNumber *inputBarOffset
 @property  NSNumber *inputTime

  // class methods
  +[CIBarsSwipeTransition customAttributes]

  // instance methods
  -[CIBarsSwipeTransition _kernel]
  -[CIBarsSwipeTransition outputImage]
  -[CIBarsSwipeTransition inputImage]
  -[CIBarsSwipeTransition setInputImage:]
  -[CIBarsSwipeTransition inputTargetImage]
  -[CIBarsSwipeTransition setInputTargetImage:]
  -[CIBarsSwipeTransition inputTime]
  -[CIBarsSwipeTransition setInputTime:]
  -[CIBarsSwipeTransition inputAngle]
  -[CIBarsSwipeTransition setInputAngle:]
  -[CIBarsSwipeTransition inputWidth]
  -[CIBarsSwipeTransition setInputWidth:]
  -[CIBarsSwipeTransition inputBarOffset]
  -[CIBarsSwipeTransition setInputBarOffset:]


CICheapBilateral : CIFilter
 @property  CIImage *inputSource
 @property  NSNumber *inputSigmaSpace
 @property  NSNumber *inputSigmaRange

  // class methods
  +[CICheapBilateral customAttributes]

  // instance methods
  -[CICheapBilateral outputImage]
  -[CICheapBilateral inputSource]
  -[CICheapBilateral setInputSource:]
  -[CICheapBilateral inputSigmaSpace]
  -[CICheapBilateral setInputSigmaSpace:]
  -[CICheapBilateral inputSigmaRange]
  -[CICheapBilateral setInputSigmaRange:]


CIBitmapContext : CIContext
  // class methods
  +[CIBitmapContext context]
  +[CIBitmapContext contextWithOptions:]
  +[CIBitmapContext contextWithBitmap:rowBytes:bounds:format:]
  +[CIBitmapContext contextWithBitmap:rowBytes:bounds:format:options:]

  // instance methods
  -[CIBitmapContext init]
  -[CIBitmapContext dealloc]
  -[CIBitmapContext initWithOptions:]
  -[CIBitmapContext initWithBitmap:rowBytes:bounds:format:]
  -[CIBitmapContext initWithBitmap:rowBytes:bounds:format:options:]
  -[CIBitmapContext setBitmap:rowBytes:bounds:format:]
  -[CIBitmapContext drawImage:inRect:fromRect:]
  -[CIBitmapContext bounds]


CIBlendModeFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBackgroundImage

  // class methods
  +[CIBlendModeFilter customAttributes]

  // instance methods
  -[CIBlendModeFilter _kernel]
  -[CIBlendModeFilter outputImage]
  -[CIBlendModeFilter inputImage]
  -[CIBlendModeFilter setInputImage:]
  -[CIBlendModeFilter inputBackgroundImage]
  -[CIBlendModeFilter setInputBackgroundImage:]


CIMultiplyBlendMode : CIBlendModeFilter
  // instance methods
  -[CIMultiplyBlendMode _kernel]


CIScreenBlendMode : CIBlendModeFilter
  // instance methods
  -[CIScreenBlendMode _kernel]


CIOverlayBlendMode : CIBlendModeFilter
  // instance methods
  -[CIOverlayBlendMode _kernel]


CIDarkenBlendMode : CIBlendModeFilter
  // instance methods
  -[CIDarkenBlendMode _kernel]


CILightenBlendMode : CIBlendModeFilter
  // instance methods
  -[CILightenBlendMode _kernel]


CIColorDodgeBlendMode : CIBlendModeFilter
  // instance methods
  -[CIColorDodgeBlendMode _kernel]


CIColorBurnBlendMode : CIBlendModeFilter
  // instance methods
  -[CIColorBurnBlendMode _kernel]


CIHardLightBlendMode : CIBlendModeFilter
  // instance methods
  -[CIHardLightBlendMode _kernel]


CISoftLightBlendMode : CIBlendModeFilter
  // instance methods
  -[CISoftLightBlendMode _kernel]


CIDifferenceBlendMode : CIBlendModeFilter
  // instance methods
  -[CIDifferenceBlendMode _kernel]


CIExclusionBlendMode : CIBlendModeFilter
  // instance methods
  -[CIExclusionBlendMode _kernel]


CIPDFNonSeparableBlendMode : CIBlendModeFilter
  // instance methods
  -[CIPDFNonSeparableBlendMode init]
  -[CIPDFNonSeparableBlendMode _kernel]
  -[CIPDFNonSeparableBlendMode _defaultVersion]
  -[CIPDFNonSeparableBlendMode setDefaults]
  -[CIPDFNonSeparableBlendMode _kernel_v0]
  -[CIPDFNonSeparableBlendMode _kernel_v1]
  -[CIPDFNonSeparableBlendMode _maxVersion]


CIHueBlendMode : CIPDFNonSeparableBlendMode
  // instance methods
  -[CIHueBlendMode _kernel_v0]
  -[CIHueBlendMode _kernel_v1]


CISaturationBlendMode : CIPDFNonSeparableBlendMode
  // instance methods
  -[CISaturationBlendMode _kernel_v0]
  -[CISaturationBlendMode _kernel_v1]


CIColorBlendMode : CIPDFNonSeparableBlendMode
  // instance methods
  -[CIColorBlendMode _kernel_v0]
  -[CIColorBlendMode _kernel_v1]


CILuminosityBlendMode : CIPDFNonSeparableBlendMode
  // instance methods
  -[CILuminosityBlendMode _kernel_v0]
  -[CILuminosityBlendMode _kernel_v1]


CISubtractBlendMode : CIBlendModeFilter
  // class methods
  +[CISubtractBlendMode customAttributes]

  // instance methods
  -[CISubtractBlendMode _kernel]


CIDivideBlendMode : CIBlendModeFilter
  // class methods
  +[CIDivideBlendMode customAttributes]

  // instance methods
  -[CIDivideBlendMode _kernel]


CILinearBurnBlendMode : CIBlendModeFilter
  // class methods
  +[CILinearBurnBlendMode customAttributes]

  // instance methods
  -[CILinearBurnBlendMode init]
  -[CILinearBurnBlendMode _kernel]
  -[CILinearBurnBlendMode _defaultVersion]
  -[CILinearBurnBlendMode setDefaults]
  -[CILinearBurnBlendMode _kernel_v0]
  -[CILinearBurnBlendMode _kernel_v1]
  -[CILinearBurnBlendMode _maxVersion]


CILinearDodgeBlendMode : CIBlendModeFilter
  // class methods
  +[CILinearDodgeBlendMode customAttributes]

  // instance methods
  -[CILinearDodgeBlendMode _kernel]


CIVividLightBlendMode : CIBlendModeFilter
  // class methods
  +[CIVividLightBlendMode customAttributes]

  // instance methods
  -[CIVividLightBlendMode _kernel]


CILinearLightBlendMode : CIBlendModeFilter
  // class methods
  +[CILinearLightBlendMode customAttributes]

  // instance methods
  -[CILinearLightBlendMode _kernel]


CIPinLightBlendMode : CIBlendModeFilter
  // class methods
  +[CIPinLightBlendMode customAttributes]

  // instance methods
  -[CIPinLightBlendMode _kernel]


CIHardMixBlendMode : CIBlendModeFilter
  // class methods
  +[CIHardMixBlendMode customAttributes]

  // instance methods
  -[CIHardMixBlendMode _kernel]


CIMix : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBackgroundImage
 @property  NSNumber *inputAmount

  // class methods
  +[CIMix customAttributes]

  // instance methods
  -[CIMix _kernel]
  -[CIMix outputImage]
  -[CIMix inputImage]
  -[CIMix setInputImage:]
  -[CIMix inputBackgroundImage]
  -[CIMix setInputBackgroundImage:]
  -[CIMix inputAmount]
  -[CIMix setInputAmount:]


CIBlendWithMask : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBackgroundImage
 @property  CIImage *inputMaskImage

  // class methods
  +[CIBlendWithMask customAttributes]

  // instance methods
  -[CIBlendWithMask _kernel]
  -[CIBlendWithMask outputImage]
  -[CIBlendWithMask inputImage]
  -[CIBlendWithMask setInputImage:]
  -[CIBlendWithMask inputBackgroundImage]
  -[CIBlendWithMask setInputBackgroundImage:]
  -[CIBlendWithMask _maskFillColorValue]
  -[CIBlendWithMask _kernelB0]
  -[CIBlendWithMask inputMaskImage]
  -[CIBlendWithMask setInputMaskImage:]


CIBlendWithRedMask : CIBlendWithMask
  // class methods
  +[CIBlendWithRedMask customAttributes]

  // instance methods
  -[CIBlendWithRedMask _kernel]
  -[CIBlendWithRedMask _maskFillColorValue]
  -[CIBlendWithRedMask _kernelB0]


CIBlendWithBlueMask : CIBlendWithMask
  // class methods
  +[CIBlendWithBlueMask customAttributes]

  // instance methods
  -[CIBlendWithBlueMask _kernel]
  -[CIBlendWithBlueMask _maskFillColorValue]
  -[CIBlendWithBlueMask _kernelB0]


CIBlendWithAlphaMask : CIBlendWithMask
  // class methods
  +[CIBlendWithAlphaMask customAttributes]

  // instance methods
  -[CIBlendWithAlphaMask _kernel]
  -[CIBlendWithAlphaMask _maskFillColorValue]
  -[CIBlendWithAlphaMask _kernelB0]


CIBloom : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputIntensity

  // class methods
  +[CIBloom customAttributes]

  // instance methods
  -[CIBloom _kernel]
  -[CIBloom outputImage]
  -[CIBloom inputImage]
  -[CIBloom setInputImage:]
  -[CIBloom _isIdentity]
  -[CIBloom inputRadius]
  -[CIBloom setInputRadius:]
  -[CIBloom inputIntensity]
  -[CIBloom setInputIntensity:]


CIGloom : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputIntensity

  // class methods
  +[CIGloom customAttributes]

  // instance methods
  -[CIGloom _kernel]
  -[CIGloom outputImage]
  -[CIGloom inputImage]
  -[CIGloom setInputImage:]
  -[CIGloom _isIdentity]
  -[CIGloom inputRadius]
  -[CIGloom setInputRadius:]
  -[CIGloom inputIntensity]
  -[CIGloom setInputIntensity:]


CIBoxBlur : CIFilter
  // class methods
  +[CIBoxBlur customAttributes]

  // instance methods
  -[CIBoxBlur outputImage]


CIBumpDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputScale

  // class methods
  +[CIBumpDistortion customAttributes]

  // instance methods
  -[CIBumpDistortion _kernel]
  -[CIBumpDistortion outputImage]
  -[CIBumpDistortion inputImage]
  -[CIBumpDistortion setInputImage:]
  -[CIBumpDistortion inputScale]
  -[CIBumpDistortion setInputScale:]
  -[CIBumpDistortion inputRadius]
  -[CIBumpDistortion setInputRadius:]
  -[CIBumpDistortion inputCenter]
  -[CIBumpDistortion setInputCenter:]


CIBumpDistortionLinear : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputAngle
 @property  NSNumber *inputScale

  // class methods
  +[CIBumpDistortionLinear customAttributes]

  // instance methods
  -[CIBumpDistortionLinear _kernel]
  -[CIBumpDistortionLinear outputImage]
  -[CIBumpDistortionLinear inputImage]
  -[CIBumpDistortionLinear setInputImage:]
  -[CIBumpDistortionLinear inputScale]
  -[CIBumpDistortionLinear setInputScale:]
  -[CIBumpDistortionLinear inputAngle]
  -[CIBumpDistortionLinear setInputAngle:]
  -[CIBumpDistortionLinear inputRadius]
  -[CIBumpDistortionLinear setInputRadius:]
  -[CIBumpDistortionLinear inputCenter]
  -[CIBumpDistortionLinear setInputCenter:]


CIBurstActionClassifier : NSObject
 @property  float testMaxInnerDistance
 @property  float testInOutRatio
 @property  float testMaxPeakRegistrationError
 @property  float testMeanPeakRegistrationError
 @property  float testMinRegionOfInterestSize
 @property  float testMaxRegistrationErrorSkewness
 @property  float testMaxRegistrationErrorIntegral
 @property  float testAverageCameraTravelDistance
 @property  float testAverageRegistrationErrorSkewness
 @property  float testBeginningVsEndAEMatrixVsAverageAdjacentAEMatrix
 @property  ^{__SVMParameters=[7{__SVMScaleOffset=ff}]ddii^{CIBurstSupportVector}^{CIBurstSupportVector}} svmParameters

  // instance methods
  -[CIBurstActionClassifier init]
  -[CIBurstActionClassifier setSvmParameters:]
  -[CIBurstActionClassifier svmParameters]
  -[CIBurstActionClassifier computeKernelValueWithSupportVector:]
  -[CIBurstActionClassifier scaleVector]
  -[CIBurstActionClassifier predictResult]
  -[CIBurstActionClassifier initWithVersion:]
  -[CIBurstActionClassifier isBurstAction]
  -[CIBurstActionClassifier testAverageCameraTravelDistance]
  -[CIBurstActionClassifier setTestAverageCameraTravelDistance:]
  -[CIBurstActionClassifier testMaxRegistrationErrorIntegral]
  -[CIBurstActionClassifier setTestMaxRegistrationErrorIntegral:]
  -[CIBurstActionClassifier testMaxPeakRegistrationError]
  -[CIBurstActionClassifier setTestMaxPeakRegistrationError:]
  -[CIBurstActionClassifier testMeanPeakRegistrationError]
  -[CIBurstActionClassifier setTestMeanPeakRegistrationError:]
  -[CIBurstActionClassifier testBeginningVsEndAEMatrixVsAverageAdjacentAEMatrix]
  -[CIBurstActionClassifier setTestBeginningVsEndAEMatrixVsAverageAdjacentAEMatrix:]
  -[CIBurstActionClassifier testInOutRatio]
  -[CIBurstActionClassifier setTestInOutRatio:]
  -[CIBurstActionClassifier testMaxInnerDistance]
  -[CIBurstActionClassifier setTestMaxInnerDistance:]
  -[CIBurstActionClassifier testAverageRegistrationErrorSkewness]
  -[CIBurstActionClassifier setTestAverageRegistrationErrorSkewness:]
  -[CIBurstActionClassifier testMinRegionOfInterestSize]
  -[CIBurstActionClassifier setTestMinRegionOfInterestSize:]
  -[CIBurstActionClassifier testMaxRegistrationErrorSkewness]
  -[CIBurstActionClassifier setTestMaxRegistrationErrorSkewness:]


CIBurstClusterDivider : NSObject
 @property  float dividerScore
 @property  int trueLocalMaximum
 @property  int leftImage
 @property  float actionAmount
 @property  float noiseThreshold
 @property  float highNoiseThreshold

  // instance methods
  -[CIBurstClusterDivider dividerScore]
  -[CIBurstClusterDivider leftImage]
  -[CIBurstClusterDivider actionAmount]
  -[CIBurstClusterDivider compareDividers:]
  -[CIBurstClusterDivider compareIndices:]
  -[CIBurstClusterDivider compareActionAmounts:]
  -[CIBurstClusterDivider setDividerScore:]
  -[CIBurstClusterDivider setLeftImage:]
  -[CIBurstClusterDivider trueLocalMaximum]
  -[CIBurstClusterDivider setTrueLocalMaximum:]
  -[CIBurstClusterDivider setActionAmount:]
  -[CIBurstClusterDivider noiseThreshold]
  -[CIBurstClusterDivider setNoiseThreshold:]
  -[CIBurstClusterDivider highNoiseThreshold]
  -[CIBurstClusterDivider setHighNoiseThreshold:]


CIBurstFaceConfigEntry : NSObject
 @property  int faceId
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceRect
 @property  int framesSinceLast

  // instance methods
  -[CIBurstFaceConfigEntry initWithRect:withFaceId:]
  -[CIBurstFaceConfigEntry faceId]
  -[CIBurstFaceConfigEntry setFaceId:]
  -[CIBurstFaceConfigEntry faceRect]
  -[CIBurstFaceConfigEntry setFaceRect:]
  -[CIBurstFaceConfigEntry framesSinceLast]
  -[CIBurstFaceConfigEntry setFramesSinceLast:]


CIBurstFaceScoreEntry : NSObject
 @property  float maxScore
 @property  float minScore
 @property  int numScores

  // instance methods
  -[CIBurstFaceScoreEntry computeAverage]
  -[CIBurstFaceScoreEntry initWithScore:]
  -[CIBurstFaceScoreEntry addScore:]
  -[CIBurstFaceScoreEntry computeStandardDeviation]
  -[CIBurstFaceScoreEntry maxScore]
  -[CIBurstFaceScoreEntry setMaxScore:]
  -[CIBurstFaceScoreEntry minScore]
  -[CIBurstFaceScoreEntry setMinScore:]
  -[CIBurstFaceScoreEntry numScores]
  -[CIBurstFaceScoreEntry setNumScores:]


CIBurstFaceInfo : NSObject
 @property  int swFaceId
 @property  {CGPoint=dd} swCenter
 @property  {CGSize=dd} swSize
 @property  int swLastFrameSeen
 @property  int hwFaceId
 @property  {CGPoint=dd} hwCenter
 @property  {CGSize=dd} hwSize
 @property  int hwLastFrameSeen

  // instance methods
  -[CIBurstFaceInfo init]
  -[CIBurstFaceInfo setSwFaceId:]
  -[CIBurstFaceInfo setSwCenter:]
  -[CIBurstFaceInfo setSwSize:]
  -[CIBurstFaceInfo setSwLastFrameSeen:]
  -[CIBurstFaceInfo setHwFaceId:]
  -[CIBurstFaceInfo setHwCenter:]
  -[CIBurstFaceInfo setHwSize:]
  -[CIBurstFaceInfo setHwLastFrameSeen:]
  -[CIBurstFaceInfo hwCenter]
  -[CIBurstFaceInfo hwSize]
  -[CIBurstFaceInfo swCenter]
  -[CIBurstFaceInfo swSize]
  -[CIBurstFaceInfo hwFaceId]
  -[CIBurstFaceInfo hwFaceRect]
  -[CIBurstFaceInfo swFaceId]
  -[CIBurstFaceInfo swFaceRect]
  -[CIBurstFaceInfo overlapWithHwRect:]
  -[CIBurstFaceInfo overlapWithSwRect:]
  -[CIBurstFaceInfo swLastFrameSeen]
  -[CIBurstFaceInfo hwLastFrameSeen]


CIBurstImageFaceAnalysisContext : NSObject
 @property  double timeFaceDetectionDone
 @property  double timeBlinkDetectionDone
 @property  BOOL forceFaceDetectionEnable
 @property  double latestFaceTimestamp
 @property  int version

  // instance methods
  -[CIBurstImageFaceAnalysisContext dealloc]
  -[CIBurstImageFaceAnalysisContext version]
  -[CIBurstImageFaceAnalysisContext setVersion:]
  -[CIBurstImageFaceAnalysisContext initWithVersion:]
  -[CIBurstImageFaceAnalysisContext padRoiRect:paddingX:paddingY:]
  -[CIBurstImageFaceAnalysisContext setupFaceDetector]
  -[CIBurstImageFaceAnalysisContext calculateFaceCoreROI:imageStat:needFaceCore:]
  -[CIBurstImageFaceAnalysisContext findOverlappingFaceStat:imageStat:]
  -[CIBurstImageFaceAnalysisContext addFaceToArray:]
  -[CIBurstImageFaceAnalysisContext findFacesInImage:imageStat:]
  -[CIBurstImageFaceAnalysisContext calculateFaceFocusInImage:imageStat:]
  -[CIBurstImageFaceAnalysisContext calcFaceScores:]
  -[CIBurstImageFaceAnalysisContext adjustFaceIdsForImageStat:]
  -[CIBurstImageFaceAnalysisContext extractFacesFromMetadata:]
  -[CIBurstImageFaceAnalysisContext addFacesToImageStat:imageSize:]
  -[CIBurstImageFaceAnalysisContext dumpFaceInfoArray]
  -[CIBurstImageFaceAnalysisContext timeBlinkDetectionDone]
  -[CIBurstImageFaceAnalysisContext setTimeBlinkDetectionDone:]
  -[CIBurstImageFaceAnalysisContext timeFaceDetectionDone]
  -[CIBurstImageFaceAnalysisContext setTimeFaceDetectionDone:]
  -[CIBurstImageFaceAnalysisContext forceFaceDetectionEnable]
  -[CIBurstImageFaceAnalysisContext setForceFaceDetectionEnable:]
  -[CIBurstImageFaceAnalysisContext latestFaceTimestamp]
  -[CIBurstImageFaceAnalysisContext setLatestFaceTimestamp:]


CIBurstImageSet : NSObject
  // class methods
  +[CIBurstImageSet defaultVersionString]
  +[CIBurstImageSet burstImageSet]
  +[CIBurstImageSet burstImageSetWithOptions:]

  // instance methods
  -[CIBurstImageSet init]
  -[CIBurstImageSet dealloc]
  -[CIBurstImageSet initWithOptions:]
  -[CIBurstImageSet burstId]
  -[CIBurstImageSet addImageFromIOSurface:properties:identifier:completionBlock:]
  -[CIBurstImageSet secondsSinceStart]
  -[CIBurstImageSet bestImageIdentifiers]
  -[CIBurstImageSet allImageIdentifiers]
  -[CIBurstImageSet statsForImageWithIdentifier:]
  -[CIBurstImageSet isAction]
  -[CIBurstImageSet isPortrait]
  -[CIBurstImageSet imageClusterForIdentifier:]
  -[CIBurstImageSet coverImageIdentifier]
  -[CIBurstImageSet imageClusterCount]
  -[CIBurstImageSet imageClusterForIndex:]
  -[CIBurstImageSet setLoggingListener:withUserInfo:]


CIBurstImageSetInternal : NSObject
 @property  NSMutableArray *clusterArray
 @property  int temporalOrder
 @property  NSCountedSet *faceIDCounts
 @property  NSMutableArray *allImageIdentifiers
 @property  NSMutableDictionary *statsByImageIdentifier
 @property  NSMutableDictionary *clusterByImageIdentifier
 @property  NSString *burstLogFileName
 @property  CIBurstActionClassifier *actionClassifier
 @property  int maxNumPendingFrames
 @property  BOOL enableAnalysis
 @property  int dummyAnalysisCount
 @property  BOOL enableFaceCore
 @property  BOOL enableDumpYUV
 @property  NSString *burstCoverSelection
 @property  NSString *burstId
 @property  NSArray *bestImageIdentifiersArray
 @property  NSString *versionString
 @property  int version

  // class methods
  +[CIBurstImageSetInternal defaultVersionString]

  // instance methods
  -[CIBurstImageSetInternal dealloc]
  -[CIBurstImageSetInternal initWithOptions:]
  -[CIBurstImageSetInternal version]
  -[CIBurstImageSetInternal setVersion:]
  -[CIBurstImageSetInternal temporalOrder]
  -[CIBurstImageSetInternal burstId]
  -[CIBurstImageSetInternal addImageFromIOSurface:properties:identifier:completionBlock:]
  -[CIBurstImageSetInternal bestImageIdentifiersArray]
  -[CIBurstImageSetInternal bestImageIdentifiers]
  -[CIBurstImageSetInternal burstLogFileName]
  -[CIBurstImageSetInternal allImageIdentifiers]
  -[CIBurstImageSetInternal maxNumPendingFrames]
  -[CIBurstImageSetInternal enableAnalysis]
  -[CIBurstImageSetInternal enableFaceCore]
  -[CIBurstImageSetInternal dummyAnalysisCount]
  -[CIBurstImageSetInternal isFaceDetectionForced]
  -[CIBurstImageSetInternal enableDumpYUV]
  -[CIBurstImageSetInternal isAction]
  -[CIBurstImageSetInternal isPortrait]
  -[CIBurstImageSetInternal burstDocumentDirectory]
  -[CIBurstImageSetInternal burstCoverSelection]
  -[CIBurstImageSetInternal imageClusterForIdentifier:]
  -[CIBurstImageSetInternal clusterArray]
  -[CIBurstImageSetInternal statsByImageIdentifier]
  -[CIBurstImageSetInternal setVersionString:]
  -[CIBurstImageSetInternal versionString]
  -[CIBurstImageSetInternal setBurstId:]
  -[CIBurstImageSetInternal setTemporalOrder:]
  -[CIBurstImageSetInternal processClusters:]
  -[CIBurstImageSetInternal addYUVImage:properties:identifier:imageProps:completionBlock:]
  -[CIBurstImageSetInternal computeEmotion:]
  -[CIBurstImageSetInternal computeCameraTravelDistance]
  -[CIBurstImageSetInternal computeBeginningVsEndAEMatrixDiffVsAverageAdjacent]
  -[CIBurstImageSetInternal computeActionSelectionThreshold]
  -[CIBurstImageSetInternal computeAllImageScores]
  -[CIBurstImageSetInternal performEmotionalRejectionOnCluster:]
  -[CIBurstImageSetInternal findBestImage:useActionScores:]
  -[CIBurstImageSetInternal selectCoverPhotoFromMultiple:burstSize:]
  -[CIBurstImageSetInternal setBestImageIdentifiersArray:]
  -[CIBurstImageSetInternal setClusterArray:]
  -[CIBurstImageSetInternal faceIDCounts]
  -[CIBurstImageSetInternal setFaceIDCounts:]
  -[CIBurstImageSetInternal setAllImageIdentifiers:]
  -[CIBurstImageSetInternal actionClassifier]
  -[CIBurstImageSetInternal setActionClassifier:]
  -[CIBurstImageSetInternal setStatsByImageIdentifier:]
  -[CIBurstImageSetInternal clusterByImageIdentifier]
  -[CIBurstImageSetInternal setClusterByImageIdentifier:]
  -[CIBurstImageSetInternal setBurstLogFileName:]
  -[CIBurstImageSetInternal setMaxNumPendingFrames:]
  -[CIBurstImageSetInternal setEnableAnalysis:]
  -[CIBurstImageSetInternal setDummyAnalysisCount:]
  -[CIBurstImageSetInternal setEnableFaceCore:]
  -[CIBurstImageSetInternal setEnableDumpYUV:]
  -[CIBurstImageSetInternal setBurstCoverSelection:]


CIBurstFaceStat : NSObject <NSCopying>
 @property  BOOL leftEyeOpen
 @property  BOOL rightEyeOpen
 @property  BOOL smiling
 @property  float leftEyeBlinkScore
 @property  float rightEyeBlinkScore
 @property  float smileScore
 @property  BOOL hasLeftEye
 @property  BOOL hasRightEye
 @property  BOOL foundByFaceCore
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedFaceRect
 @property  int faceId
 @property  int framesSinceLast
 @property  float focusScore
 @property  float faceScore
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} leftEyeRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rightEyeRect
 @property  int FCRLeftEyeFeaturesOffset
 @property  int FCRRightEyeFeaturesOffset
 @property  int FCRSmileFeaturesOffset
 @property  int FCRBlinkFeaturesSize
 @property  int FCRSmileFeaturesSize
 @property  NSMutableArray *FCRSmileAndBlinkFeatures
 @property  int hwFaceId
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} hwFaceRect
 @property  float normalizedFocusScore
 @property  float normalizedSigma
 @property  BOOL hasRollAngle
 @property  BOOL hasYawAngle
 @property  float rollAngle
 @property  float yawAngle
 @property  double timestamp
 @property  BOOL isSyncedWithImage
 @property  BOOL smallFace

  // instance methods
  -[CIBurstFaceStat dealloc]
  -[CIBurstFaceStat copyWithZone:]
  -[CIBurstFaceStat timestamp]
  -[CIBurstFaceStat setTimestamp:]
  -[CIBurstFaceStat faceId]
  -[CIBurstFaceStat setFaceId:]
  -[CIBurstFaceStat faceRect]
  -[CIBurstFaceStat setFaceRect:]
  -[CIBurstFaceStat framesSinceLast]
  -[CIBurstFaceStat setFramesSinceLast:]
  -[CIBurstFaceStat setHwFaceId:]
  -[CIBurstFaceStat hwFaceId]
  -[CIBurstFaceStat hwFaceRect]
  -[CIBurstFaceStat setHwFaceRect:]
  -[CIBurstFaceStat hasLeftEye]
  -[CIBurstFaceStat hasRightEye]
  -[CIBurstFaceStat isSyncedWithImage]
  -[CIBurstFaceStat hasRollAngle]
  -[CIBurstFaceStat rollAngle]
  -[CIBurstFaceStat hasYawAngle]
  -[CIBurstFaceStat yawAngle]
  -[CIBurstFaceStat leftEyeRect]
  -[CIBurstFaceStat leftEyeBlinkScore]
  -[CIBurstFaceStat rightEyeRect]
  -[CIBurstFaceStat rightEyeBlinkScore]
  -[CIBurstFaceStat smileScore]
  -[CIBurstFaceStat setNormalizedFaceRect:]
  -[CIBurstFaceStat setFoundByFaceCore:]
  -[CIBurstFaceStat setHasLeftEye:]
  -[CIBurstFaceStat setHasRightEye:]
  -[CIBurstFaceStat setLeftEyeOpen:]
  -[CIBurstFaceStat setRightEyeOpen:]
  -[CIBurstFaceStat setSmiling:]
  -[CIBurstFaceStat setLeftEyeBlinkScore:]
  -[CIBurstFaceStat setRightEyeBlinkScore:]
  -[CIBurstFaceStat setSmileScore:]
  -[CIBurstFaceStat setLeftEyeRect:]
  -[CIBurstFaceStat setRightEyeRect:]
  -[CIBurstFaceStat leftEyeOpen]
  -[CIBurstFaceStat rightEyeOpen]
  -[CIBurstFaceStat foundByFaceCore]
  -[CIBurstFaceStat setFocusScore:]
  -[CIBurstFaceStat focusScore]
  -[CIBurstFaceStat setNormalizedFocusScore:]
  -[CIBurstFaceStat setNormalizedSigma:]
  -[CIBurstFaceStat setHasRollAngle:]
  -[CIBurstFaceStat setRollAngle:]
  -[CIBurstFaceStat setHasYawAngle:]
  -[CIBurstFaceStat setYawAngle:]
  -[CIBurstFaceStat setIsSyncedWithImage:]
  -[CIBurstFaceStat normalizedFaceRect]
  -[CIBurstFaceStat smiling]
  -[CIBurstFaceStat smallFace]
  -[CIBurstFaceStat FCRLeftEyeFeaturesOffset]
  -[CIBurstFaceStat FCRRightEyeFeaturesOffset]
  -[CIBurstFaceStat FCRSmileFeaturesOffset]
  -[CIBurstFaceStat FCRBlinkFeaturesSize]
  -[CIBurstFaceStat FCRSmileFeaturesSize]
  -[CIBurstFaceStat normalizedFocusScore]
  -[CIBurstFaceStat normalizedSigma]
  -[CIBurstFaceStat faceScore]
  -[CIBurstFaceStat initWithFaceStat:]
  -[CIBurstFaceStat setFaceScore:]
  -[CIBurstFaceStat setFCRLeftEyeFeaturesOffset:]
  -[CIBurstFaceStat setFCRRightEyeFeaturesOffset:]
  -[CIBurstFaceStat setFCRSmileFeaturesOffset:]
  -[CIBurstFaceStat setFCRBlinkFeaturesSize:]
  -[CIBurstFaceStat setFCRSmileFeaturesSize:]
  -[CIBurstFaceStat FCRSmileAndBlinkFeatures]
  -[CIBurstFaceStat setFCRSmileAndBlinkFeatures:]
  -[CIBurstFaceStat setSmallFace:]


CIBurstImageStat : NSObject
 @property  NSString *imageId
 @property  int orientation
 @property  NSMutableArray *faceStatArray
 @property  BOOL exclude
 @property  BOOL AEStable
 @property  int AEAverage
 @property  int AETarget
 @property  BOOL AFStable
 @property  int temporalOrder
 @property  float avgHorzDiffY
 @property  float blurExtent
 @property  float imageScore
 @property  float actionScore
 @property  double timeReceived
 @property  double timestamp
 @property  float maxSkewness
 @property  float registrationErrorX
 @property  float registrationErrorY
 @property  float registrationErrorIntegral
 @property  float actionClusteringScore
 @property  BOOL hasRegistrationData
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} facesRoiRect
 @property  int numHWFaces
 @property  BOOL emotionallyRejected
 @property  BOOL doLimitedSharpnessAndBlur
 @property  float tx
 @property  float ty
 @property  BOOL isGarbage
 @property  float roiSize
 @property  int AEDelta
 @property  ^{__IOSurface=} fullsizeJpegData
 @property  int fullsizeJpegSize
 @property  int version

  // instance methods
  -[CIBurstImageStat dealloc]
  -[CIBurstImageStat initWithIdentifier:]
  -[CIBurstImageStat version]
  -[CIBurstImageStat setVersion:]
  -[CIBurstImageStat timestamp]
  -[CIBurstImageStat orientation]
  -[CIBurstImageStat setTimestamp:]
  -[CIBurstImageStat faceStatArray]
  -[CIBurstImageStat temporalOrder]
  -[CIBurstImageStat setFacesRoiRect:]
  -[CIBurstImageStat setNumHWFaces:]
  -[CIBurstImageStat numHWFaces]
  -[CIBurstImageStat facesRoiRect]
  -[CIBurstImageStat imageId]
  -[CIBurstImageStat isGarbage]
  -[CIBurstImageStat registrationErrorIntegral]
  -[CIBurstImageStat computeImageData:faceIDCounts:]
  -[CIBurstImageStat AEAverage]
  -[CIBurstImageStat AETarget]
  -[CIBurstImageStat AEStable]
  -[CIBurstImageStat AFStable]
  -[CIBurstImageStat aeMatrix]
  -[CIBurstImageStat setTemporalOrder:]
  -[CIBurstImageStat setTimeReceived:]
  -[CIBurstImageStat setEmotionallyRejected:]
  -[CIBurstImageStat avgHorzDiffY]
  -[CIBurstImageStat blurExtent]
  -[CIBurstImageStat setImageScore:]
  -[CIBurstImageStat setActionScore:]
  -[CIBurstImageStat tx]
  -[CIBurstImageStat ty]
  -[CIBurstImageStat computeAEMatrixDifference:]
  -[CIBurstImageStat canRegister]
  -[CIBurstImageStat allocateMeanStdPingPongBuffers::::]
  -[CIBurstImageStat assignMeanStdBuffers:]
  -[CIBurstImageStat performRegistration:deltaCol:deltaRow:]
  -[CIBurstImageStat maxSkewness]
  -[CIBurstImageStat setMaxSkewness:]
  -[CIBurstImageStat setTx:]
  -[CIBurstImageStat setTy:]
  -[CIBurstImageStat computeSmoothedGridROI:nextStat:]
  -[CIBurstImageStat doLimitedSharpnessAndBlur]
  -[CIBurstImageStat hasRegistrationData]
  -[CIBurstImageStat collapseSharpnessGrid]
  -[CIBurstImageStat setIsGarbage:]
  -[CIBurstImageStat flagAsGarbage]
  -[CIBurstImageStat roiSize]
  -[CIBurstImageStat registrationErrorX]
  -[CIBurstImageStat registrationErrorY]
  -[CIBurstImageStat computeScore:]
  -[CIBurstImageStat writeGridROI:]
  -[CIBurstImageStat actionScore]
  -[CIBurstImageStat imageScore]
  -[CIBurstImageStat emotionallyRejected]
  -[CIBurstImageStat computeImageDistance:]
  -[CIBurstImageStat actionClusteringScore]
  -[CIBurstImageStat compareImageOrder:]
  -[CIBurstImageStat setFullsizeJpegData:]
  -[CIBurstImageStat getSharpnessAndBlurLimits]
  -[CIBurstImageStat setAEDelta:]
  -[CIBurstImageStat setRegistrationErrorX:]
  -[CIBurstImageStat setRegistrationErrorY:]
  -[CIBurstImageStat setHasRegistrationData:]
  -[CIBurstImageStat setRegistrationErrorIntegral:]
  -[CIBurstImageStat setActionClusteringScore:]
  -[CIBurstImageStat updateROI:]
  -[CIBurstImageStat computeImageColorHistogram:]
  -[CIBurstImageStat computeImageSharpnessOnGrid:]
  -[CIBurstImageStat computeBlurStatsOnGrid:]
  -[CIBurstImageStat computeImageProjections:]
  -[CIBurstImageStat computeFacialFocusScoreSum]
  -[CIBurstImageStat computeRuleOfThreeDistance]
  -[CIBurstImageStat computeSmilePercentage]
  -[CIBurstImageStat setAEMatrix:]
  -[CIBurstImageStat computeAEMatrix:]
  -[CIBurstImageStat compareImageStats:]
  -[CIBurstImageStat colorHistogram]
  -[CIBurstImageStat setImageId:]
  -[CIBurstImageStat setOrientation:]
  -[CIBurstImageStat setFaceStatArray:]
  -[CIBurstImageStat exclude]
  -[CIBurstImageStat setExclude:]
  -[CIBurstImageStat setAEStable:]
  -[CIBurstImageStat setAEAverage:]
  -[CIBurstImageStat setAETarget:]
  -[CIBurstImageStat setAFStable:]
  -[CIBurstImageStat setAvgHorzDiffY:]
  -[CIBurstImageStat setBlurExtent:]
  -[CIBurstImageStat timeReceived]
  -[CIBurstImageStat setDoLimitedSharpnessAndBlur:]
  -[CIBurstImageStat setRoiSize:]
  -[CIBurstImageStat AEDelta]
  -[CIBurstImageStat fullsizeJpegData]
  -[CIBurstImageStat fullsizeJpegSize]
  -[CIBurstImageStat setFullsizeJpegSize:]


CIBurstThumbnailCluster : NSObject
 @property  NSMutableArray *burstImages
 @property  NSMutableDictionary *imageProps
 @property  CIBurstYUVImage *image
 @property  ^{__IOSurface=} fullsizeJpegData
 @property  @? completionBlock

  // instance methods
  -[CIBurstThumbnailCluster init]
  -[CIBurstThumbnailCluster dealloc]
  -[CIBurstThumbnailCluster completionBlock]
  -[CIBurstThumbnailCluster setCompletionBlock:]
  -[CIBurstThumbnailCluster burstImages]
  -[CIBurstThumbnailCluster releaseImage]
  -[CIBurstThumbnailCluster imageProps]
  -[CIBurstThumbnailCluster image]
  -[CIBurstThumbnailCluster initWithImageData:dict:identifier:imageProps:completionBlock:]
  -[CIBurstThumbnailCluster addItemsFromCluster:]
  -[CIBurstThumbnailCluster setFullsizeJpegData:]
  -[CIBurstThumbnailCluster fullsizeJpegData]
  -[CIBurstThumbnailCluster setImageProps:]
  -[CIBurstThumbnailCluster setImage:]
  -[CIBurstThumbnailCluster computeMergeCost:::]
  -[CIBurstThumbnailCluster setBurstImages:]


CIBurstYUVImage : NSObject
 @property  int width
 @property  int height
 @property  int bytesPerRow
 @property  char * Ybuffer
 @property  char * Cbuffer

  // instance methods
  -[CIBurstYUVImage dealloc]
  -[CIBurstYUVImage width]
  -[CIBurstYUVImage height]
  -[CIBurstYUVImage bytesPerRow]
  -[CIBurstYUVImage Ybuffer]
  -[CIBurstYUVImage initWithCGImage:maxDimension:]
  -[CIBurstYUVImage Cbuffer]
  -[CIBurstYUVImage initWithIOSurface:maxDimension:]
  -[CIBurstYUVImage convertRGBAToYUV420:rgbaBytesPerRow:]
  -[CIBurstYUVImage initWithCIImage:ctx:maxDimension:]
  -[CIBurstYUVImage pixelBuffer]
  -[CIBurstYUVImage setWidth:]
  -[CIBurstYUVImage setHeight:]
  -[CIBurstYUVImage setYbuffer:]
  -[CIBurstYUVImage setCbuffer:]
  -[CIBurstYUVImage setBytesPerRow:]


CICMYKHalftone : CIFilter
  // class methods
  +[CICMYKHalftone customAttributes]

  // instance methods
  -[CICMYKHalftone outputImage]
  -[CICMYKHalftone _CICMYK_convert]
  -[CICMYKHalftone _CIWhite]
  -[CICMYKHalftone _CICMYK_cyan]
  -[CICMYKHalftone _CICMYK_magenta]
  -[CICMYKHalftone _CICMYK_yellow]
  -[CICMYKHalftone _CICMYK_black]


CICameraCalibrationLensCorrection : CIFilter
  // class methods
  +[CICameraCalibrationLensCorrection customAttributes]

  // instance methods
  -[CICameraCalibrationLensCorrection setValue:forKey:]
  -[CICameraCalibrationLensCorrection outputImage]
  -[CICameraCalibrationLensCorrection ReferenceensDistortionPointForPoint:lookupTable:distortionOpticalCenter:imageSize:]
  -[CICameraCalibrationLensCorrection regionOf:destRect:userInfo:]


CICheapBlur : CIFilter
  // class methods
  +[CICheapBlur customAttributes]

  // instance methods
  -[CICheapBlur outputImage]
  -[CICheapBlur _CICheapBlur]
  -[CICheapBlur _CILerp]


CICheatBlur : CIFilter
  // class methods
  +[CICheatBlur customAttributes]

  // instance methods
  -[CICheatBlur outputImage]
  -[CICheatBlur _CIBox6]
  -[CICheatBlur _CIBox4]
  -[CICheatBlur _CICross4]


CICheckerboardGenerator : CIFilter
 @property  CIVector *inputCenter
 @property  NSNumber *inputWidth
 @property  NSNumber *inputSharpness
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1

  // class methods
  +[CICheckerboardGenerator customAttributes]

  // instance methods
  -[CICheckerboardGenerator _kernel]
  -[CICheckerboardGenerator outputImage]
  -[CICheckerboardGenerator inputWidth]
  -[CICheckerboardGenerator setInputWidth:]
  -[CICheckerboardGenerator inputCenter]
  -[CICheckerboardGenerator setInputCenter:]
  -[CICheckerboardGenerator inputSharpness]
  -[CICheckerboardGenerator setInputSharpness:]
  -[CICheckerboardGenerator inputColor0]
  -[CICheckerboardGenerator setInputColor0:]
  -[CICheckerboardGenerator inputColor1]
  -[CICheckerboardGenerator setInputColor1:]


CICircleGenerator : CIFilter
  // class methods
  +[CICircleGenerator customAttributes]

  // instance methods
  -[CICircleGenerator outputImage]
  -[CICircleGenerator _CICircle]


CICircleSplashDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius

  // class methods
  +[CICircleSplashDistortion customAttributes]

  // instance methods
  -[CICircleSplashDistortion _kernel]
  -[CICircleSplashDistortion outputImage]
  -[CICircleSplashDistortion inputImage]
  -[CICircleSplashDistortion setInputImage:]
  -[CICircleSplashDistortion inputRadius]
  -[CICircleSplashDistortion setInputRadius:]
  -[CICircleSplashDistortion inputCenter]
  -[CICircleSplashDistortion setInputCenter:]


CICircularWrap : CIFilter
  // class methods
  +[CICircularWrap customAttributes]

  // instance methods
  -[CICircularWrap _kernel]
  -[CICircularWrap outputImage]


CIColor : NSObject <NSSecureCoding, NSCopying>
 @property  unsigned long numberOfComponents
 @property  r^d components
 @property  double alpha
 @property  ^{CGColorSpace=} colorSpace
 @property  double red
 @property  double green
 @property  double blue
 @property  NSString *stringRepresentation

  // class methods
  +[CIColor supportsSecureCoding]
  +[CIColor colorWithRed:green:blue:]
  +[CIColor colorWithRed:green:blue:alpha:]
  +[CIColor colorWithRed:green:blue:alpha:colorSpace:]
  +[CIColor colorWithCGColor:]
  +[CIColor colorWithRed:green:blue:colorSpace:]
  +[CIColor colorWithString:]
  +[CIColor blackColor]
  +[CIColor whiteColor]
  +[CIColor grayColor]
  +[CIColor redColor]
  +[CIColor greenColor]
  +[CIColor blueColor]
  +[CIColor cyanColor]
  +[CIColor magentaColor]
  +[CIColor yellowColor]
  +[CIColor clearColor]

  // instance methods
  -[CIColor init]
  -[CIColor dealloc]
  -[CIColor isEqual:]
  -[CIColor copyWithZone:]
  -[CIColor encodeWithCoder:]
  -[CIColor initWithCoder:]
  -[CIColor initWithString:]
  -[CIColor components]
  -[CIColor initWithCGColor:]
  -[CIColor initWithRed:green:blue:alpha:]
  -[CIColor initWithRed:green:blue:alpha:colorSpace:]
  -[CIColor red]
  -[CIColor green]
  -[CIColor blue]
  -[CIColor alpha]
  -[CIColor cgColor]
  -[CIColor numberOfComponents]
  -[CIColor colorSpace]
  -[CIColor initWithRed:green:blue:]
  -[CIColor initWithRed:green:blue:colorSpace:]
  -[CIColor stringRepresentation]
  -[CIColor debugQuickLookObject]


CIColorBalance : CIFilter
 @property  CIImage *inputImage
 @property  CIColor *inputColor
 @property  NSNumber *inputStrength
 @property  NSNumber *inputWarmth
 @property  NSNumber *inputDamping

  // class methods
  +[CIColorBalance customAttributes]

  // instance methods
  -[CIColorBalance _kernel]
  -[CIColorBalance outputImage]
  -[CIColorBalance inputImage]
  -[CIColorBalance setInputImage:]
  -[CIColorBalance inputColor]
  -[CIColorBalance setInputColor:]
  -[CIColorBalance inputStrength]
  -[CIColorBalance setInputStrength:]
  -[CIColorBalance inputWarmth]
  -[CIColorBalance setInputWarmth:]
  -[CIColorBalance inputDamping]
  -[CIColorBalance setInputDamping:]


CIColorClamp : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputMinComponents
 @property  CIVector *inputMaxComponents

  // class methods
  +[CIColorClamp customAttributes]

  // instance methods
  -[CIColorClamp _kernel]
  -[CIColorClamp outputImage]
  -[CIColorClamp inputImage]
  -[CIColorClamp setInputImage:]
  -[CIColorClamp _kernelAlphaPreserving]
  -[CIColorClamp inputMinComponents]
  -[CIColorClamp setInputMinComponents:]
  -[CIColorClamp inputMaxComponents]
  -[CIColorClamp setInputMaxComponents:]


CIColorControls : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputSaturation
 @property  NSNumber *inputBrightness
 @property  NSNumber *inputContrast

  // class methods
  +[CIColorControls customAttributes]

  // instance methods
  -[CIColorControls outputImage]
  -[CIColorControls inputImage]
  -[CIColorControls setInputImage:]
  -[CIColorControls inputSaturation]
  -[CIColorControls setInputSaturation:]
  -[CIColorControls inputBrightness]
  -[CIColorControls setInputBrightness:]
  -[CIColorControls inputContrast]
  -[CIColorControls setInputContrast:]


CIHueAdjust : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputAngle

  // class methods
  +[CIHueAdjust customAttributes]

  // instance methods
  -[CIHueAdjust outputImage]
  -[CIHueAdjust inputImage]
  -[CIHueAdjust setInputImage:]
  -[CIHueAdjust inputAngle]
  -[CIHueAdjust setInputAngle:]


CIColorCube : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputCubeDimension
 @property  NSData *inputCubeData

  // class methods
  +[CIColorCube customAttributes]

  // instance methods
  -[CIColorCube dealloc]
  -[CIColorCube _kernel]
  -[CIColorCube outputImage]
  -[CIColorCube inputImage]
  -[CIColorCube setInputImage:]
  -[CIColorCube _checkInputs]
  -[CIColorCube cubeImage]
  -[CIColorCube _kernelOpaque]
  -[CIColorCube setInputCubeData:]
  -[CIColorCube inputCubeDimension]
  -[CIColorCube setInputCubeDimension:]
  -[CIColorCube inputCubeData]


CIColorCubeWithColorSpace : CIColorCube
 @property  id inputColorSpace

  // class methods
  +[CIColorCubeWithColorSpace customAttributes]

  // instance methods
  -[CIColorCubeWithColorSpace outputImage]
  -[CIColorCubeWithColorSpace inputColorSpace]
  -[CIColorCubeWithColorSpace setInputColorSpace:]


CIColorCubesMixedWithMask : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputMaskImage
 @property  NSNumber *inputCubeDimension
 @property  NSData *inputCube0Data
 @property  NSData *inputCube1Data
 @property  id inputColorSpace

  // class methods
  +[CIColorCubesMixedWithMask customAttributes]

  // instance methods
  -[CIColorCubesMixedWithMask outputImage]
  -[CIColorCubesMixedWithMask inputImage]
  -[CIColorCubesMixedWithMask setInputImage:]
  -[CIColorCubesMixedWithMask inputMaskImage]
  -[CIColorCubesMixedWithMask setInputMaskImage:]
  -[CIColorCubesMixedWithMask _checkInputs]
  -[CIColorCubesMixedWithMask inputCubeDimension]
  -[CIColorCubesMixedWithMask setInputCubeDimension:]
  -[CIColorCubesMixedWithMask inputColorSpace]
  -[CIColorCubesMixedWithMask setInputColorSpace:]
  -[CIColorCubesMixedWithMask inputCube0Data]
  -[CIColorCubesMixedWithMask setInputCube0Data:]
  -[CIColorCubesMixedWithMask inputCube1Data]
  -[CIColorCubesMixedWithMask setInputCube1Data:]


CIColorCurves : CIFilter
 @property  CIImage *inputImage
 @property  NSData *inputCurvesData
 @property  CIVector *inputCurvesDomain
 @property  id inputColorSpace

  // class methods
  +[CIColorCurves customAttributes]

  // instance methods
  -[CIColorCurves dealloc]
  -[CIColorCurves _kernel]
  -[CIColorCurves outputImage]
  -[CIColorCurves inputImage]
  -[CIColorCurves setInputImage:]
  -[CIColorCurves _checkInputs]
  -[CIColorCurves inputColorSpace]
  -[CIColorCurves setInputColorSpace:]
  -[CIColorCurves curvesImage]
  -[CIColorCurves setInputCurvesData:]
  -[CIColorCurves inputCurvesDomain]
  -[CIColorCurves setInputCurvesDomain:]
  -[CIColorCurves inputCurvesData]


CIColorMonochrome : CIFilter
 @property  CIImage *inputImage
 @property  CIColor *inputColor
 @property  NSNumber *inputIntensity

  // class methods
  +[CIColorMonochrome customAttributes]

  // instance methods
  -[CIColorMonochrome _kernel]
  -[CIColorMonochrome outputImage]
  -[CIColorMonochrome inputImage]
  -[CIColorMonochrome setInputImage:]
  -[CIColorMonochrome inputIntensity]
  -[CIColorMonochrome setInputIntensity:]
  -[CIColorMonochrome inputColor]
  -[CIColorMonochrome setInputColor:]


CIPalettize : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputPaletteImage
 @property  NSNumber *inputPerceptual

  // class methods
  +[CIPalettize customAttributes]

  // instance methods
  -[CIPalettize outputImage]
  -[CIPalettize inputImage]
  -[CIPalettize setInputImage:]
  -[CIPalettize _kernelApplyPalette]
  -[CIPalettize inputPaletteImage]
  -[CIPalettize setInputPaletteImage:]
  -[CIPalettize inputPerceptual]
  -[CIPalettize setInputPerceptual:]


CIDither : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputIntensity

  // class methods
  +[CIDither customAttributes]
  +[CIDither _kernelDither]

  // instance methods
  -[CIDither outputImage]
  -[CIDither inputImage]
  -[CIDither setInputImage:]
  -[CIDither inputIntensity]
  -[CIDither setInputIntensity:]


CIDesaturateShadows : CIFilter
 @property  NSNumber *inputIntensity
 @property  NSNumber *inputThreshold
 @property  NSNumber *inputSoftness

  // class methods
  +[CIDesaturateShadows customAttributes]

  // instance methods
  -[CIDesaturateShadows outputImage]
  -[CIDesaturateShadows inputIntensity]
  -[CIDesaturateShadows setInputIntensity:]
  -[CIDesaturateShadows inputThreshold]
  -[CIDesaturateShadows setInputThreshold:]
  -[CIDesaturateShadows inputSoftness]
  -[CIDesaturateShadows setInputSoftness:]


CIColorMap : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputGradientImage

  // class methods
  +[CIColorMap customAttributes]

  // instance methods
  -[CIColorMap _kernel]
  -[CIColorMap outputImage]
  -[CIColorMap inputImage]
  -[CIColorMap setInputImage:]
  -[CIColorMap inputGradientImage]
  -[CIColorMap setInputGradientImage:]


CIColorMatrix : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputRVector
 @property  CIVector *inputGVector
 @property  CIVector *inputBVector
 @property  CIVector *inputAVector
 @property  CIVector *inputBiasVector

  // class methods
  +[CIColorMatrix customAttributes]

  // instance methods
  -[CIColorMatrix outputImage]
  -[CIColorMatrix inputImage]
  -[CIColorMatrix setInputImage:]
  -[CIColorMatrix inputRVector]
  -[CIColorMatrix setInputRVector:]
  -[CIColorMatrix inputGVector]
  -[CIColorMatrix setInputGVector:]
  -[CIColorMatrix inputBVector]
  -[CIColorMatrix setInputBVector:]
  -[CIColorMatrix inputAVector]
  -[CIColorMatrix setInputAVector:]
  -[CIColorMatrix inputBiasVector]
  -[CIColorMatrix setInputBiasVector:]


CIColorInvert : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIColorInvert customAttributes]

  // instance methods
  -[CIColorInvert outputImage]
  -[CIColorInvert inputImage]
  -[CIColorInvert setInputImage:]


CIColorPolynomial : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputRedCoefficients
 @property  CIVector *inputGreenCoefficients
 @property  CIVector *inputBlueCoefficients
 @property  CIVector *inputAlphaCoefficients

  // class methods
  +[CIColorPolynomial customAttributes]

  // instance methods
  -[CIColorPolynomial _kernel]
  -[CIColorPolynomial outputImage]
  -[CIColorPolynomial inputImage]
  -[CIColorPolynomial setInputImage:]
  -[CIColorPolynomial _isIdentity]
  -[CIColorPolynomial inputRedCoefficients]
  -[CIColorPolynomial setInputRedCoefficients:]
  -[CIColorPolynomial inputGreenCoefficients]
  -[CIColorPolynomial setInputGreenCoefficients:]
  -[CIColorPolynomial inputBlueCoefficients]
  -[CIColorPolynomial setInputBlueCoefficients:]
  -[CIColorPolynomial inputAlphaCoefficients]
  -[CIColorPolynomial setInputAlphaCoefficients:]


CIColorCrossPolynomial : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputRedCoefficients
 @property  CIVector *inputGreenCoefficients
 @property  CIVector *inputBlueCoefficients

  // class methods
  +[CIColorCrossPolynomial customAttributes]

  // instance methods
  -[CIColorCrossPolynomial _kernel]
  -[CIColorCrossPolynomial outputImage]
  -[CIColorCrossPolynomial inputImage]
  -[CIColorCrossPolynomial setInputImage:]
  -[CIColorCrossPolynomial _isIdentity]
  -[CIColorCrossPolynomial inputRedCoefficients]
  -[CIColorCrossPolynomial setInputRedCoefficients:]
  -[CIColorCrossPolynomial inputGreenCoefficients]
  -[CIColorCrossPolynomial setInputGreenCoefficients:]
  -[CIColorCrossPolynomial inputBlueCoefficients]
  -[CIColorCrossPolynomial setInputBlueCoefficients:]


CIColorPosterize : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputLevels

  // class methods
  +[CIColorPosterize customAttributes]

  // instance methods
  -[CIColorPosterize _kernel]
  -[CIColorPosterize outputImage]
  -[CIColorPosterize inputImage]
  -[CIColorPosterize setInputImage:]
  -[CIColorPosterize _isIdentity]
  -[CIColorPosterize inputLevels]
  -[CIColorPosterize setInputLevels:]


CIFusionDelta : CIFilter
  // class methods
  +[CIFusionDelta customAttributes]

  // instance methods
  -[CIFusionDelta outputImage]
  -[CIFusionDelta _isIdentity]
  -[CIFusionDelta kernel]


CIFusionTwoImagesDelta : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputSecondaryImage
 @property  NSNumber *inputProtectStrength
 @property  NSNumber *inputApertureScaling
 @property  CIVector *inputAdditive
 @property  CIVector *inputSubtractive
 @property  NSNumber *inputMaxBlur

  // instance methods
  -[CIFusionTwoImagesDelta outputImage]
  -[CIFusionTwoImagesDelta inputImage]
  -[CIFusionTwoImagesDelta setInputImage:]
  -[CIFusionTwoImagesDelta kernel]
  -[CIFusionTwoImagesDelta inputApertureScaling]
  -[CIFusionTwoImagesDelta inputMaxBlur]
  -[CIFusionTwoImagesDelta inputSecondaryImage]
  -[CIFusionTwoImagesDelta setInputSecondaryImage:]
  -[CIFusionTwoImagesDelta inputProtectStrength]
  -[CIFusionTwoImagesDelta setInputProtectStrength:]
  -[CIFusionTwoImagesDelta setInputApertureScaling:]
  -[CIFusionTwoImagesDelta inputAdditive]
  -[CIFusionTwoImagesDelta setInputAdditive:]
  -[CIFusionTwoImagesDelta inputSubtractive]
  -[CIFusionTwoImagesDelta setInputSubtractive:]
  -[CIFusionTwoImagesDelta setInputMaxBlur:]


CILineOverlay : CIFilter
  // class methods
  +[CILineOverlay customAttributes]

  // instance methods
  -[CILineOverlay outputImage]
  -[CILineOverlay _CIComicNoiseReduction]
  -[CILineOverlay _CISobelEdges]
  -[CILineOverlay _CIColorControls]


CISpotColor : CIFilter
  // class methods
  +[CISpotColor customAttributes]

  // instance methods
  -[CISpotColor outputImage]
  -[CISpotColor _CISpotColor]


CIComicEffect : CIFilter
  // class methods
  +[CIComicEffect customAttributes]

  // instance methods
  -[CIComicEffect outputImage]


_CICompositeFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBackgroundImage

  // class methods
  +[_CICompositeFilter customAttributes]
  +[_CICompositeFilter _kernel]

  // instance methods
  -[_CICompositeFilter outputImage]
  -[_CICompositeFilter inputImage]
  -[_CICompositeFilter setInputImage:]
  -[_CICompositeFilter inputBackgroundImage]
  -[_CICompositeFilter setInputBackgroundImage:]


CISourceOverCompositing : _CICompositeFilter
  // class methods
  +[CISourceOverCompositing _kernel]

  // instance methods
  -[CISourceOverCompositing outputImage]


CISourceInCompositing : _CICompositeFilter
  // class methods
  +[CISourceInCompositing _kernel]


CISourceOutCompositing : _CICompositeFilter
  // class methods
  +[CISourceOutCompositing _kernel]


CISourceAtopCompositing : _CICompositeFilter
  // class methods
  +[CISourceAtopCompositing _kernel]


CIAdditionCompositing : _CICompositeFilter
  // class methods
  +[CIAdditionCompositing _kernel]

  // instance methods
  -[CIAdditionCompositing outputImage]


CIMultiplyCompositing : _CICompositeFilter
  // class methods
  +[CIMultiplyCompositing _kernel]


CIMinimumCompositing : _CICompositeFilter
  // class methods
  +[CIMinimumCompositing _kernel]


CIMaximumCompositing : _CICompositeFilter
  // class methods
  +[CIMaximumCompositing _kernel]


CIPlusDarkerCompositing : _CICompositeFilter
  // class methods
  +[CIPlusDarkerCompositing customAttributes]
  +[CIPlusDarkerCompositing _kernel]

  // instance methods
  -[CIPlusDarkerCompositing outputImage]


CIPlusLighterCompositing : _CICompositeFilter
  // class methods
  +[CIPlusLighterCompositing customAttributes]
  +[CIPlusLighterCompositing _kernel]

  // instance methods
  -[CIPlusLighterCompositing outputImage]


CIConstantColorGenerator : CIFilter
 @property  CIColor *inputColor

  // class methods
  +[CIConstantColorGenerator customAttributes]

  // instance methods
  -[CIConstantColorGenerator outputImage]
  -[CIConstantColorGenerator inputColor]
  -[CIConstantColorGenerator setInputColor:]


CIContext : NSObject
 @property  ^{Context=^^?{atomic<unsigned int>=AI}^{CGColorSpace}^{CGColorSpace}iBBBBB^{CGContext}fB{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}IQQi[64c]B^{ObjectCache<CI::MainProgram _internalContext
 @property  unsigned long identifier
 @property  ^{CGColorSpace=} workingColorSpace
 @property  int workingFormat

  // class methods
  +[CIContext context]
  +[CIContext defaultWorkingColorSpace]
  +[CIContext _singletonContext]
  +[CIContext defaultGrayColorSpace]
  +[CIContext defaultRGBColorSpace]
  +[CIContext contextWithOptions:]
  +[CIContext internalContextWithMTLDevice:options:]
  +[CIContext internalGLContextWithOptions:]
  +[CIContext internalContextWithEAGLContext:options:]
  +[CIContext internalContextWithMTLCommandQueue:options:]
  +[CIContext contextWithMTLCommandQueue:options:]
  +[CIContext _crashed_because_nonaddressable_memory_was_passed_to_render:toBitmap:rowBytes:bounds:format:colorSpace:]
  +[CIContext contextWithCGContext:options:]
  +[CIContext contextWithEAGLContext:]
  +[CIContext contextWithEAGLContext:options:]
  +[CIContext contextWithMTLDevice:]
  +[CIContext contextWithMTLDevice:options:]
  +[CIContext contextWithMTLCommandQueue:]
  +[CIContext internalCLContextWithOptions:glContext:]
  +[CIContext internalCLContextWithOptions:]

  // instance methods
  -[CIContext init]
  -[CIContext dealloc]
  -[CIContext invalidate]
  -[CIContext objectForKey:]
  -[CIContext initWithOptions:]
  -[CIContext lock]
  -[CIContext unlock]
  -[CIContext setObject:forKey:]
  -[CIContext identifier]
  -[CIContext clearCaches]
  -[CIContext device]
  -[CIContext render:toBitmap:rowBytes:bounds:format:colorSpace:]
  -[CIContext render:toCVPixelBuffer:]
  -[CIContext _internalContext]
  -[CIContext _outputColorSpace]
  -[CIContext drawImage:inRect:fromRect:]
  -[CIContext bounds]
  -[CIContext render:toIOSurface:bounds:colorSpace:]
  -[CIContext _initWithInternalRepresentation:]
  -[CIContext initWithCGContext:options:]
  -[CIContext initWithEAGLContext:]
  -[CIContext initWithEAGLContext:options:]
  -[CIContext initWithMTLDevice:options:]
  -[CIContext initWithMTLCommandQueue:options:]
  -[CIContext _gpuContextCheck]
  -[CIContext render:toCVPixelBuffer:bounds:colorSpace:]
  -[CIContext startTaskToRender:fromRect:toDestination:atPoint:error:]
  -[CIContext _isGLBackedContext]
  -[CIContext _isCGBackedContext]
  -[CIContext createCGImage:fromRect:format:colorSpace:]
  -[CIContext createCGImage:fromRect:]
  -[CIContext render:toTexture:target:bounds:colorSpace:]
  -[CIContext createIOSurface:fromRect:]
  -[CIContext workingColorSpace]
  -[CIContext CTM]
  -[CIContext _isMetalInternalContext]
  -[CIContext abort]
  -[CIContext _isGLInternalContext]
  -[CIContext _insertEventMarker:]
  -[CIContext render:]
  -[CIContext drawImage:atPoint:fromRect:]
  -[CIContext render:toTexture:bounds:colorSpace:]
  -[CIContext render:toMTLTexture:commandBuffer:bounds:colorSpace:]
  -[CIContext createIOSurface:]
  -[CIContext createCGLayerWithSize:info:]
  -[CIContext maximumInputImageSize]
  -[CIContext maximumOutputImageSize]
  -[CIContext inputImageMaximumSize]
  -[CIContext outputImageMaximumSize]
  -[CIContext workingFormat]
  -[CIContext reclaimResources]
  -[CIContext flatten:fromRect:format:colorSpace:]
  -[CIContext measureRequirementsOf:query::results:]
  -[CIContext setCTM:]
  -[CIContext setBounds:]
  -[CIContext createColorCubeDataForFilters:dimension:]
  -[CIContext _pdfDataRepresentation]
  -[CIContext _createCGImage:fromRect:format:colorSpace:deferred:]
  -[CIContext _createClone]
  -[CIContext createCGImage:fromRect:format:]
  -[CIContext createCGImage:fromRect:format:colorSpace:deferred:]
  -[CIContext TIFFRepresentationOfImage:format:colorSpace:options:]
  -[CIContext PNGRepresentationOfImage:format:colorSpace:options:]
  -[CIContext JPEGRepresentationOfImage:colorSpace:options:]
  -[CIContext HEIFRepresentationOfImage:format:colorSpace:options:]
  -[CIContext writeTIFFRepresentationOfImage:toURL:format:colorSpace:options:error:]
  -[CIContext writePNGRepresentationOfImage:toURL:format:colorSpace:options:error:]
  -[CIContext writeJPEGRepresentationOfImage:toURL:colorSpace:options:error:]
  -[CIContext writeHEIFRepresentationOfImage:toURL:format:colorSpace:options:error:]
  -[CIContext depthBlurEffectFilterForImage:disparityImage:portraitEffectsMatte:hairSemanticSegmentation:orientation:options:]
  -[CIContext _performFaceDetection:image:orientation:filter:]
  -[CIContext depthBlurEffectFilterForImageData:options:]
  -[CIContext depthBlurEffectFilterForImageURL:options:]
  -[CIContext depthBlurEffectFilterForImage:disparityImage:portraitEffectsMatte:orientation:options:]
  -[CIContext prepareRender:fromRect:toDestination:atPoint:error:]
  -[CIContext startTaskToRender:toDestination:error:]
  -[CIContext _startTaskToRender:toDestination:forPrepareRender:forClear:error:]
  -[CIContext startTaskToClear:error:]


CIContextCache : NSObject
  // class methods
  +[CIContextCache resetStatistics]
  +[CIContextCache peakNonVolatileSize]
  +[CIContextCache currentNonVolatileSize]
  +[CIContextCache countAllocated]


CIConvolutionProcessor : CIImageProcessorKernel
  // class methods
  +[CIConvolutionProcessor outputFormat]
  +[CIConvolutionProcessor applyBoxToImage:width:height:]
  +[CIConvolutionProcessor roiForInput:arguments:outputRect:]
  +[CIConvolutionProcessor processWithInputs:arguments:output:error:]
  +[CIConvolutionProcessor synchronizeInputs]
  +[CIConvolutionProcessor canReduceOutputChannels]
  +[CIConvolutionProcessor formatForInputAtIndex:]
  +[CIConvolutionProcessor allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIConvolutionProcessor allowSRGBTranferFuntionOnOutput]
  +[CIConvolutionProcessor applyConToImage:width:height:bias:weights:]


CIConvolution3X3 : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputWeights
 @property  NSNumber *inputBias

  // class methods
  +[CIConvolution3X3 customAttributes]

  // instance methods
  -[CIConvolution3X3 outputImage]
  -[CIConvolution3X3 inputImage]
  -[CIConvolution3X3 setInputImage:]
  -[CIConvolution3X3 _isIdentity]
  -[CIConvolution3X3 inputWeights]
  -[CIConvolution3X3 setInputWeights:]
  -[CIConvolution3X3 inputBias]
  -[CIConvolution3X3 setInputBias:]


CIConvolution5X5 : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputWeights
 @property  NSNumber *inputBias

  // class methods
  +[CIConvolution5X5 customAttributes]

  // instance methods
  -[CIConvolution5X5 outputImage]
  -[CIConvolution5X5 inputImage]
  -[CIConvolution5X5 setInputImage:]
  -[CIConvolution5X5 _isIdentity]
  -[CIConvolution5X5 inputWeights]
  -[CIConvolution5X5 setInputWeights:]
  -[CIConvolution5X5 inputBias]
  -[CIConvolution5X5 setInputBias:]


CIConvolution7X7 : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputWeights
 @property  NSNumber *inputBias

  // class methods
  +[CIConvolution7X7 customAttributes]

  // instance methods
  -[CIConvolution7X7 outputImage]
  -[CIConvolution7X7 inputImage]
  -[CIConvolution7X7 setInputImage:]
  -[CIConvolution7X7 _isIdentity]
  -[CIConvolution7X7 inputWeights]
  -[CIConvolution7X7 setInputWeights:]
  -[CIConvolution7X7 inputBias]
  -[CIConvolution7X7 setInputBias:]


CIConvolution9Horizontal : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputWeights
 @property  NSNumber *inputBias

  // class methods
  +[CIConvolution9Horizontal customAttributes]

  // instance methods
  -[CIConvolution9Horizontal outputImage]
  -[CIConvolution9Horizontal inputImage]
  -[CIConvolution9Horizontal setInputImage:]
  -[CIConvolution9Horizontal _isIdentity]
  -[CIConvolution9Horizontal inputWeights]
  -[CIConvolution9Horizontal setInputWeights:]
  -[CIConvolution9Horizontal inputBias]
  -[CIConvolution9Horizontal setInputBias:]


CIConvolution9Vertical : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputWeights
 @property  NSNumber *inputBias

  // class methods
  +[CIConvolution9Vertical customAttributes]

  // instance methods
  -[CIConvolution9Vertical outputImage]
  -[CIConvolution9Vertical inputImage]
  -[CIConvolution9Vertical setInputImage:]
  -[CIConvolution9Vertical _isIdentity]
  -[CIConvolution9Vertical inputWeights]
  -[CIConvolution9Vertical setInputWeights:]
  -[CIConvolution9Vertical inputBias]
  -[CIConvolution9Vertical setInputBias:]


CICopyMachineTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  CIVector *inputExtent
 @property  CIColor *inputColor
 @property  NSNumber *inputTime
 @property  NSNumber *inputAngle
 @property  NSNumber *inputWidth
 @property  NSNumber *inputOpacity

  // class methods
  +[CICopyMachineTransition customAttributes]

  // instance methods
  -[CICopyMachineTransition _kernel]
  -[CICopyMachineTransition outputImage]
  -[CICopyMachineTransition inputImage]
  -[CICopyMachineTransition setInputImage:]
  -[CICopyMachineTransition inputTargetImage]
  -[CICopyMachineTransition setInputTargetImage:]
  -[CICopyMachineTransition inputTime]
  -[CICopyMachineTransition setInputTime:]
  -[CICopyMachineTransition inputExtent]
  -[CICopyMachineTransition setInputExtent:]
  -[CICopyMachineTransition inputAngle]
  -[CICopyMachineTransition setInputAngle:]
  -[CICopyMachineTransition inputWidth]
  -[CICopyMachineTransition setInputWidth:]
  -[CICopyMachineTransition inputColor]
  -[CICopyMachineTransition setInputColor:]
  -[CICopyMachineTransition inputOpacity]
  -[CICopyMachineTransition setInputOpacity:]


CIPredictionModel : NSObject <MLFeatureProvider>
 @property  MLModel *model
 @property  {CIPredictionModelImageFeatures=@qqI} inputImageFeatures
 @property  {CIPredictionModelImageFeatures=@qqI} outputImageFeatures
 @property  NSSet *featureNames

  // instance methods
  -[CIPredictionModel dealloc]
  -[CIPredictionModel model]
  -[CIPredictionModel processInputModel:]
  -[CIPredictionModel processInputFeatureWithName:featureDescription:]
  -[CIPredictionModel processOutputFeatureWithName:featureDescription:]
  -[CIPredictionModel outputImageFeatures]
  -[CIPredictionModel featureValueForName:]
  -[CIPredictionModel inputImageFeatures]
  -[CIPredictionModel featureNames]
  -[CIPredictionModel initWithModel:]
  -[CIPredictionModel predictUsingInputBuffer:error:]
  -[CIPredictionModel setModel:]
  -[CIPredictionModel setInputImageFeatures:]
  -[CIPredictionModel setOutputImageFeatures:]


CICoreMLKernel : CIImageProcessorKernel
  // class methods
  +[CICoreMLKernel outputFormat]
  +[CICoreMLKernel roiForInput:arguments:outputRect:]
  +[CICoreMLKernel processWithInputs:arguments:output:error:]
  +[CICoreMLKernel formatForInputAtIndex:]
  +[CICoreMLKernel copyInput:toBuffer:usingFormat:]
  +[CICoreMLKernel copyToOutput:fromBuffer:usingFormat:]


CIFeatureProviderMultiArray : NSObject <MLFeatureProvider>
 @property  MLMultiArray *multiArray
 @property  NSString *name
 @property  NSSet *featureNames

  // instance methods
  -[CIFeatureProviderMultiArray name]
  -[CIFeatureProviderMultiArray setName:]
  -[CIFeatureProviderMultiArray featureValueForName:]
  -[CIFeatureProviderMultiArray featureNames]
  -[CIFeatureProviderMultiArray setMultiArray:]
  -[CIFeatureProviderMultiArray initWithName:array:]
  -[CIFeatureProviderMultiArray multiArray]


CIFeatureProviderImage : NSObject <MLFeatureProvider>
 @property  NSString *name
 @property  ^{__CVBuffer=} buffer
 @property  NSSet *featureNames

  // instance methods
  -[CIFeatureProviderImage name]
  -[CIFeatureProviderImage setName:]
  -[CIFeatureProviderImage featureValueForName:]
  -[CIFeatureProviderImage featureNames]
  -[CIFeatureProviderImage setBuffer:]
  -[CIFeatureProviderImage buffer]
  -[CIFeatureProviderImage initWithName:buffer:]


CICoreMLProcessorImageArray : CIImageProcessorKernel
  // class methods
  +[CICoreMLProcessorImageArray outputFormat]
  +[CICoreMLProcessorImageArray roiForInput:arguments:outputRect:]
  +[CICoreMLProcessorImageArray processWithInputs:arguments:output:error:]
  +[CICoreMLProcessorImageArray formatForInputAtIndex:]
  +[CICoreMLProcessorImageArray copyInput:toBuffer:usingFormat:]


CICoreMLModelFilter : CIFilter
 @property  CIImage *inputImage
 @property  MLModel *inputModel
 @property  NSNumber *inputHeadIndex
 @property  NSNumber *inputSoftmaxNormalization

  // class methods
  +[CICoreMLModelFilter customAttributes]

  // instance methods
  -[CICoreMLModelFilter outputImage]
  -[CICoreMLModelFilter inputImage]
  -[CICoreMLModelFilter setInputImage:]
  -[CICoreMLModelFilter inputModel]
  -[CICoreMLModelFilter setInputModel:]
  -[CICoreMLModelFilter inputHeadIndex]
  -[CICoreMLModelFilter setInputHeadIndex:]
  -[CICoreMLModelFilter inputSoftmaxNormalization]
  -[CICoreMLModelFilter setInputSoftmaxNormalization:]


CICrop : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  CIVector *inputRectangle

  // class methods
  +[CICrop customAttributes]

  // instance methods
  -[CICrop outputImage]
  -[CICrop inputImage]
  -[CICrop setInputImage:]
  -[CICrop _outputProperties]
  -[CICrop _initFromProperties:]
  -[CICrop setInputRectangle:]
  -[CICrop inputRectangle]


CICrystallize : CIFilter
  // class methods
  +[CICrystallize customAttributes]

  // instance methods
  -[CICrystallize outputImage]
  -[CICrystallize _CICrystallize]


CIDepthOfField : CIFilter
  // class methods
  +[CIDepthOfField customAttributes]

  // instance methods
  -[CIDepthOfField outputImage]
  -[CIDepthOfField _CIAlphaNormalize]
  -[CIDepthOfField _CITiltShift]
  -[CIDepthOfField _DistanceColored]


CIDetector : NSObject
  // class methods
  +[CIDetector detectorOfType:context:options:]

  // instance methods
  -[CIDetector init]
  -[CIDetector featuresInImage:options:]
  -[CIDetector featuresInImage:]


CIConvolution : CIFilter
  // instance methods
  -[CIConvolution outputImage]
  -[CIConvolution _CIConvolutionAdd_1]
  -[CIConvolution _CIConvolutionAdd_2]
  -[CIConvolution _CIConvolutionAdd_3]
  -[CIConvolution _CIConvolutionAdd_4]
  -[CIConvolution _CIConvolutionAdd_5]
  -[CIConvolution _CIConvolutionAdd_6]
  -[CIConvolution _CIConvolutionAdd_7]
  -[CIConvolution _CIConvolutionAdd_8]
  -[CIConvolution doConvolutionPass:weights:sums:]
  -[CIConvolution samplesPerPass]


CIBokehBlur : CIFilter
  // class methods
  +[CIBokehBlur customAttributes]

  // instance methods
  -[CIBokehBlur dealloc]
  -[CIBokehBlur setValue:forKey:]
  -[CIBokehBlur outputImage]


CIDiscBlur : CIFilter
  // class methods
  +[CIDiscBlur customAttributes]

  // instance methods
  -[CIDiscBlur dealloc]
  -[CIDiscBlur setValue:forKey:]
  -[CIDiscBlur outputImage]


CIRingBlur : CIFilter
  // class methods
  +[CIRingBlur customAttributes]

  // instance methods
  -[CIRingBlur outputImage]


CIDisintegrateWithMaskTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  CIImage *inputMaskImage
 @property  NSNumber *inputTime
 @property  NSNumber *inputShadowRadius
 @property  NSNumber *inputShadowDensity
 @property  CIVector *inputShadowOffset

  // class methods
  +[CIDisintegrateWithMaskTransition customAttributes]

  // instance methods
  -[CIDisintegrateWithMaskTransition _kernel]
  -[CIDisintegrateWithMaskTransition outputImage]
  -[CIDisintegrateWithMaskTransition inputImage]
  -[CIDisintegrateWithMaskTransition setInputImage:]
  -[CIDisintegrateWithMaskTransition inputTargetImage]
  -[CIDisintegrateWithMaskTransition setInputTargetImage:]
  -[CIDisintegrateWithMaskTransition inputTime]
  -[CIDisintegrateWithMaskTransition setInputTime:]
  -[CIDisintegrateWithMaskTransition inputMaskImage]
  -[CIDisintegrateWithMaskTransition setInputMaskImage:]
  -[CIDisintegrateWithMaskTransition _kernelG]
  -[CIDisintegrateWithMaskTransition inputShadowRadius]
  -[CIDisintegrateWithMaskTransition setInputShadowRadius:]
  -[CIDisintegrateWithMaskTransition inputShadowDensity]
  -[CIDisintegrateWithMaskTransition setInputShadowDensity:]
  -[CIDisintegrateWithMaskTransition inputShadowOffset]
  -[CIDisintegrateWithMaskTransition setInputShadowOffset:]


CIDisparityRefinement : CIFilter
 @property  CIImage *inputDisparityImage
 @property  CIImage *inputImage
 @property  NSNumber *inputPropagateKernel
 @property  NSNumber *inputSmoothSigma
 @property  NSNumber *inputPropagateMinWeightSum
 @property  NSNumber *inputPropagateSigmaLuma
 @property  NSNumber *inputPropagateSigmaChma
 @property  NSNumber *inputScale
 @property  CIVector *inputOriginalSize

  // class methods
  +[CIDisparityRefinement customAttributes]

  // instance methods
  -[CIDisparityRefinement outputImage]
  -[CIDisparityRefinement inputImage]
  -[CIDisparityRefinement setInputImage:]
  -[CIDisparityRefinement inputScale]
  -[CIDisparityRefinement setInputScale:]
  -[CIDisparityRefinement _initialConversionRGB]
  -[CIDisparityRefinement _pyramidGenerateLevel]
  -[CIDisparityRefinement _smoothDisparity]
  -[CIDisparityRefinement _propagateDisparityR1]
  -[CIDisparityRefinement _propagateDisparity]
  -[CIDisparityRefinement initialConversionForSize:useMetal:]
  -[CIDisparityRefinement generatePyramidLevel:useMetal:]
  -[CIDisparityRefinement shiftmapLevelZeroWithSize:useMetal:]
  -[CIDisparityRefinement propagateDisparity:pyramids:useMetal:computedPyramidLevels:]
  -[CIDisparityRefinement smoothDisparityImage:useMetal:]
  -[CIDisparityRefinement outputImageUsingMetal:]
  -[CIDisparityRefinement _propagateDisparityR1Combined]
  -[CIDisparityRefinement _propagateDisparityCombined]
  -[CIDisparityRefinement _combineImages]
  -[CIDisparityRefinement inputDisparityImage]
  -[CIDisparityRefinement setInputDisparityImage:]
  -[CIDisparityRefinement inputPropagateKernel]
  -[CIDisparityRefinement setInputPropagateKernel:]
  -[CIDisparityRefinement inputSmoothSigma]
  -[CIDisparityRefinement setInputSmoothSigma:]
  -[CIDisparityRefinement inputPropagateMinWeightSum]
  -[CIDisparityRefinement setInputPropagateMinWeightSum:]
  -[CIDisparityRefinement inputPropagateSigmaLuma]
  -[CIDisparityRefinement setInputPropagateSigmaLuma:]
  -[CIDisparityRefinement inputPropagateSigmaChma]
  -[CIDisparityRefinement setInputPropagateSigmaChma:]
  -[CIDisparityRefinement inputOriginalSize]
  -[CIDisparityRefinement setInputOriginalSize:]


CIDisparitySmoothing : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputNumIterations

  // class methods
  +[CIDisparitySmoothing customAttributes]

  // instance methods
  -[CIDisparitySmoothing outputImage]
  -[CIDisparitySmoothing inputImage]
  -[CIDisparitySmoothing setInputImage:]
  -[CIDisparitySmoothing _customBoxBlur5Kernel]
  -[CIDisparitySmoothing outputImageMetal]
  -[CIDisparitySmoothing inputNumIterations]
  -[CIDisparitySmoothing setInputNumIterations:]


CIDisparitySmoothingProcessor : CIImageProcessorKernel
  // class methods
  +[CIDisparitySmoothingProcessor outputFormat]
  +[CIDisparitySmoothingProcessor roiForInput:arguments:outputRect:]
  +[CIDisparitySmoothingProcessor processWithInputs:arguments:output:error:]
  +[CIDisparitySmoothingProcessor synchronizeInputs]
  +[CIDisparitySmoothingProcessor formatForInputAtIndex:]
  +[CIDisparitySmoothingProcessor hasValidPipelines]
  +[CIDisparitySmoothingProcessor releasePipelines]
  +[CIDisparitySmoothingProcessor compilePipelines:]
  +[CIDisparitySmoothingProcessor compilePipelinesIfNeeded:]
  +[CIDisparitySmoothingProcessor outputIsOpaque]


CIDisplacementDistortion : CIFilter
  // class methods
  +[CIDisplacementDistortion customAttributes]

  // instance methods
  -[CIDisplacementDistortion outputImage]
  -[CIDisplacementDistortion _CIDisplaceFromImage]


CIDissolveTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  NSNumber *inputTime

  // class methods
  +[CIDissolveTransition customAttributes]

  // instance methods
  -[CIDissolveTransition _kernel]
  -[CIDissolveTransition outputImage]
  -[CIDissolveTransition inputImage]
  -[CIDissolveTransition setInputImage:]
  -[CIDissolveTransition inputTargetImage]
  -[CIDissolveTransition setInputTargetImage:]
  -[CIDissolveTransition inputTime]
  -[CIDissolveTransition setInputTime:]
  -[CIDissolveTransition _fadeKernel]


CIDocumentEnhancer : CIFilter
 @property  NSNumber *inputAmount

  // class methods
  +[CIDocumentEnhancer customAttributes]

  // instance methods
  -[CIDocumentEnhancer outputImage]
  -[CIDocumentEnhancer inputAmount]
  -[CIDocumentEnhancer setInputAmount:]


CIPaperWash : CIFilter
 @property  NSNumber *inputSaturation
 @property  NSNumber *inputGreyscale

  // class methods
  +[CIPaperWash customAttributes]

  // instance methods
  -[CIPaperWash outputImage]
  -[CIPaperWash inputSaturation]
  -[CIPaperWash setInputSaturation:]
  -[CIPaperWash inputGreyscale]
  -[CIPaperWash setInputGreyscale:]


CIContrastEnhancer : CIFilter
 @property  NSNumber *inputIntensity
 @property  NSNumber *inputLocal
 @property  NSNumber *inputScale
 @property  NSNumber *inputPerceptual

  // class methods
  +[CIContrastEnhancer customAttributes]

  // instance methods
  -[CIContrastEnhancer outputImage]
  -[CIContrastEnhancer inputScale]
  -[CIContrastEnhancer setInputScale:]
  -[CIContrastEnhancer inputIntensity]
  -[CIContrastEnhancer setInputIntensity:]
  -[CIContrastEnhancer inputPerceptual]
  -[CIContrastEnhancer setInputPerceptual:]
  -[CIContrastEnhancer inputLocal]
  -[CIContrastEnhancer setInputLocal:]


CIDroste : CIFilter
  // class methods
  +[CIDroste customAttributes]

  // instance methods
  -[CIDroste outputImage]
  -[CIDroste _CIDroste]


CheapRandomness : CIFilter
 @property  NSNumber *inputDither
 @property  NSNumber *inputScale

  // instance methods
  -[CheapRandomness outputImage]
  -[CheapRandomness inputScale]
  -[CheapRandomness setInputScale:]
  -[CheapRandomness inputDither]
  -[CheapRandomness setInputDither:]


RadialFalloffFilter : CIFilter
 @property  CIVector *inputExtent
 @property  CIImage *inputCenter
 @property  NSNumber *inputFalloff
 @property  NSNumber *inputRadius
 @property  NSNumber *inputAnisotropic

  // instance methods
  -[RadialFalloffFilter outputImage]
  -[RadialFalloffFilter inputExtent]
  -[RadialFalloffFilter setInputExtent:]
  -[RadialFalloffFilter inputRadius]
  -[RadialFalloffFilter setInputRadius:]
  -[RadialFalloffFilter inputCenter]
  -[RadialFalloffFilter setInputCenter:]
  -[RadialFalloffFilter inputFalloff]
  -[RadialFalloffFilter setInputFalloff:]
  -[RadialFalloffFilter inputAnisotropic]
  -[RadialFalloffFilter setInputAnisotropic:]


PercentileClipProcessor_RGBA8_CPU : CIImageProcessorKernel
  // class methods
  +[PercentileClipProcessor_RGBA8_CPU outputFormat]
  +[PercentileClipProcessor_RGBA8_CPU roiForInput:arguments:outputRect:]
  +[PercentileClipProcessor_RGBA8_CPU processWithInputs:arguments:output:error:]
  +[PercentileClipProcessor_RGBA8_CPU canReduceOutputChannels]
  +[PercentileClipProcessor_RGBA8_CPU formatForInputAtIndex:]
  +[PercentileClipProcessor_RGBA8_CPU centerInImg:fromRect:toRect:offset:]
  +[PercentileClipProcessor_RGBA8_CPU allowPartialOutputRegion]


HistoClip_RGBA8_CPU : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputCenterLeft
 @property  CIImage *inputCenterRight
 @property  CIVector *inputCenterExtentLeft
 @property  CIVector *inputCenterExtentRight
 @property  NSNumber *inputPercentileRepair
 @property  NSNumber *inputPercentileSpecular
 @property  NSNumber *inputPercentRepair
 @property  NSNumber *inputPercentSpecular
 @property  NSNumber *inputInterPeakMinRepair
 @property  NSNumber *inputAbortMaxCenterDist
 @property  NSNumber *inputMinDensity
 @property  NSNumber *inputMaxRelDensity
 @property  NSNumber *inputDensityRadius
 @property  NSNumber *inputMinInterDispersion
 @property  NSNumber *inputMaxInterDispersion
 @property  NSNumber *inputMinGobalLocalMeanDiff
 @property  CIVector *inputMinimum
 @property  CIVector *inputMaxArea
 @property  CIVector *inputMaxAreaRatio
 @property  CIVector *inputCenterOffsetLeft
 @property  CIVector *inputCenterOffsetRight
 @property  CIImage *inputDetectionLeft
 @property  CIImage *inputDetectionRight
 @property  NSNumber *inputTuning

  // instance methods
  -[HistoClip_RGBA8_CPU outputImage]
  -[HistoClip_RGBA8_CPU inputImage]
  -[HistoClip_RGBA8_CPU setInputImage:]
  -[HistoClip_RGBA8_CPU inputCenterLeft]
  -[HistoClip_RGBA8_CPU setInputCenterLeft:]
  -[HistoClip_RGBA8_CPU inputCenterRight]
  -[HistoClip_RGBA8_CPU setInputCenterRight:]
  -[HistoClip_RGBA8_CPU inputCenterExtentLeft]
  -[HistoClip_RGBA8_CPU setInputCenterExtentLeft:]
  -[HistoClip_RGBA8_CPU inputCenterExtentRight]
  -[HistoClip_RGBA8_CPU setInputCenterExtentRight:]
  -[HistoClip_RGBA8_CPU inputPercentileRepair]
  -[HistoClip_RGBA8_CPU setInputPercentileRepair:]
  -[HistoClip_RGBA8_CPU inputPercentileSpecular]
  -[HistoClip_RGBA8_CPU setInputPercentileSpecular:]
  -[HistoClip_RGBA8_CPU inputPercentRepair]
  -[HistoClip_RGBA8_CPU setInputPercentRepair:]
  -[HistoClip_RGBA8_CPU inputPercentSpecular]
  -[HistoClip_RGBA8_CPU setInputPercentSpecular:]
  -[HistoClip_RGBA8_CPU inputInterPeakMinRepair]
  -[HistoClip_RGBA8_CPU setInputInterPeakMinRepair:]
  -[HistoClip_RGBA8_CPU inputAbortMaxCenterDist]
  -[HistoClip_RGBA8_CPU setInputAbortMaxCenterDist:]
  -[HistoClip_RGBA8_CPU inputMinDensity]
  -[HistoClip_RGBA8_CPU setInputMinDensity:]
  -[HistoClip_RGBA8_CPU inputMaxRelDensity]
  -[HistoClip_RGBA8_CPU setInputMaxRelDensity:]
  -[HistoClip_RGBA8_CPU inputDensityRadius]
  -[HistoClip_RGBA8_CPU setInputDensityRadius:]
  -[HistoClip_RGBA8_CPU inputMinInterDispersion]
  -[HistoClip_RGBA8_CPU setInputMinInterDispersion:]
  -[HistoClip_RGBA8_CPU inputMaxInterDispersion]
  -[HistoClip_RGBA8_CPU setInputMaxInterDispersion:]
  -[HistoClip_RGBA8_CPU inputMinGobalLocalMeanDiff]
  -[HistoClip_RGBA8_CPU setInputMinGobalLocalMeanDiff:]
  -[HistoClip_RGBA8_CPU inputMinimum]
  -[HistoClip_RGBA8_CPU setInputMinimum:]
  -[HistoClip_RGBA8_CPU inputMaxArea]
  -[HistoClip_RGBA8_CPU setInputMaxArea:]
  -[HistoClip_RGBA8_CPU inputMaxAreaRatio]
  -[HistoClip_RGBA8_CPU setInputMaxAreaRatio:]
  -[HistoClip_RGBA8_CPU inputCenterOffsetLeft]
  -[HistoClip_RGBA8_CPU setInputCenterOffsetLeft:]
  -[HistoClip_RGBA8_CPU inputCenterOffsetRight]
  -[HistoClip_RGBA8_CPU setInputCenterOffsetRight:]
  -[HistoClip_RGBA8_CPU inputDetectionLeft]
  -[HistoClip_RGBA8_CPU setInputDetectionLeft:]
  -[HistoClip_RGBA8_CPU inputDetectionRight]
  -[HistoClip_RGBA8_CPU setInputDetectionRight:]
  -[HistoClip_RGBA8_CPU inputTuning]
  -[HistoClip_RGBA8_CPU setInputTuning:]


ConvexFillProcessor : CIImageProcessorKernel
  // class methods
  +[ConvexFillProcessor outputFormat]
  +[ConvexFillProcessor roiForInput:arguments:outputRect:]
  +[ConvexFillProcessor processWithInputs:arguments:output:error:]
  +[ConvexFillProcessor canReduceOutputChannels]
  +[ConvexFillProcessor formatForInputAtIndex:]
  +[ConvexFillProcessor allowPartialOutputRegion]


CIConvexFill : CIFilter
 @property  CIImage *inputCenter
 @property  NSNumber *inputThreshold
 @property  CIVector *inputAreaThresholdLoHi
 @property  NSNumber *inputSplat

  // instance methods
  -[CIConvexFill outputImage]
  -[CIConvexFill inputCenter]
  -[CIConvexFill setInputCenter:]
  -[CIConvexFill inputThreshold]
  -[CIConvexFill setInputThreshold:]
  -[CIConvexFill inputAreaThresholdLoHi]
  -[CIConvexFill setInputAreaThresholdLoHi:]
  -[CIConvexFill inputSplat]
  -[CIConvexFill setInputSplat:]


CISeedFillProcessor : CIImageProcessorKernel
  // class methods
  +[CISeedFillProcessor outputFormat]
  +[CISeedFillProcessor roiForInput:arguments:outputRect:]
  +[CISeedFillProcessor processWithInputs:arguments:output:error:]
  +[CISeedFillProcessor canReduceOutputChannels]
  +[CISeedFillProcessor formatForInputAtIndex:]
  +[CISeedFillProcessor allowPartialOutputRegion]


CISeedFill : CIFilter
 @property  CIImage *inputCenter
 @property  NSNumber *inputThreshold
 @property  CIVector *inputExtent
 @property  NSNumber *inputSplat

  // instance methods
  -[CISeedFill outputImage]
  -[CISeedFill inputExtent]
  -[CISeedFill setInputExtent:]
  -[CISeedFill inputCenter]
  -[CISeedFill setInputCenter:]
  -[CISeedFill inputThreshold]
  -[CISeedFill setInputThreshold:]
  -[CISeedFill inputSplat]
  -[CISeedFill setInputSplat:]


CICircularityDescriptor : CIFilter
 @property  CIVector *inputExtent
 @property  CIImage *inputCentroid

  // instance methods
  -[CICircularityDescriptor outputImage]
  -[CICircularityDescriptor inputExtent]
  -[CICircularityDescriptor setInputExtent:]
  -[CICircularityDescriptor inputCentroid]
  -[CICircularityDescriptor setInputCentroid:]


RedEyeSpecular : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputSource
 @property  CIImage *inputSpecularMask
 @property  NSNumber *inputSpecularThreshold
 @property  NSNumber *inputSpecIntensity
 @property  NSNumber *inputDebugFlag

  // instance methods
  -[RedEyeSpecular outputImage]
  -[RedEyeSpecular inputImage]
  -[RedEyeSpecular setInputImage:]
  -[RedEyeSpecular inputSource]
  -[RedEyeSpecular setInputSource:]
  -[RedEyeSpecular inputSpecularMask]
  -[RedEyeSpecular setInputSpecularMask:]
  -[RedEyeSpecular inputSpecularThreshold]
  -[RedEyeSpecular setInputSpecularThreshold:]
  -[RedEyeSpecular inputSpecIntensity]
  -[RedEyeSpecular setInputSpecIntensity:]
  -[RedEyeSpecular inputDebugFlag]
  -[RedEyeSpecular setInputDebugFlag:]


RedEyeRecolor : CIFilter
 @property  CIImage *inputSource
 @property  CIImage *inputMask
 @property  NSNumber *inputNoiseAmount
 @property  NSNumber *inputBrightness
 @property  NSNumber *inputRecovery
 @property  CIVector *inputExtent
 @property  NSNumber *inputWhiteCutoff
 @property  NSNumber *inputChroma

  // instance methods
  -[RedEyeRecolor outputImage]
  -[RedEyeRecolor inputExtent]
  -[RedEyeRecolor setInputExtent:]
  -[RedEyeRecolor inputSource]
  -[RedEyeRecolor setInputSource:]
  -[RedEyeRecolor inputBrightness]
  -[RedEyeRecolor setInputBrightness:]
  -[RedEyeRecolor kernelRecovery]
  -[RedEyeRecolor kernelRepair]
  -[RedEyeRecolor inputMask]
  -[RedEyeRecolor setInputMask:]
  -[RedEyeRecolor inputNoiseAmount]
  -[RedEyeRecolor setInputNoiseAmount:]
  -[RedEyeRecolor inputRecovery]
  -[RedEyeRecolor setInputRecovery:]
  -[RedEyeRecolor inputWhiteCutoff]
  -[RedEyeRecolor setInputWhiteCutoff:]
  -[RedEyeRecolor inputChroma]
  -[RedEyeRecolor setInputChroma:]


RedPupilLocalizer : CIFilter
 @property  NSNumber *inputIterations
 @property  NSNumber *inputScale
 @property  NSNumber *inputDecay
 @property  NSNumber *inputGamma
 @property  NSNumber *inputClip
 @property  NSNumber *inputLocalizationRadius
 @property  CIVector *inputExtent
 @property  NSNumber *inputDebug
 @property  CIVector *inputAxisLong
 @property  CIVector *inputAxisShort
 @property  CIVector *inputPupilCenter
 @property  NSNumber *inputSearchAxisLong
 @property  NSNumber *inputSearchAxisShort

  // instance methods
  -[RedPupilLocalizer outputImage]
  -[RedPupilLocalizer inputExtent]
  -[RedPupilLocalizer setInputExtent:]
  -[RedPupilLocalizer inputScale]
  -[RedPupilLocalizer setInputScale:]
  -[RedPupilLocalizer inputClip]
  -[RedPupilLocalizer setInputClip:]
  -[RedPupilLocalizer inputIterations]
  -[RedPupilLocalizer setInputIterations:]
  -[RedPupilLocalizer inputDecay]
  -[RedPupilLocalizer setInputDecay:]
  -[RedPupilLocalizer inputGamma]
  -[RedPupilLocalizer setInputGamma:]
  -[RedPupilLocalizer inputLocalizationRadius]
  -[RedPupilLocalizer setInputLocalizationRadius:]
  -[RedPupilLocalizer inputDebug]
  -[RedPupilLocalizer setInputDebug:]
  -[RedPupilLocalizer inputAxisLong]
  -[RedPupilLocalizer setInputAxisLong:]
  -[RedPupilLocalizer inputAxisShort]
  -[RedPupilLocalizer setInputAxisShort:]
  -[RedPupilLocalizer inputPupilCenter]
  -[RedPupilLocalizer setInputPupilCenter:]
  -[RedPupilLocalizer inputSearchAxisLong]
  -[RedPupilLocalizer setInputSearchAxisLong:]
  -[RedPupilLocalizer inputSearchAxisShort]
  -[RedPupilLocalizer setInputSearchAxisShort:]


RedEyeFace : NSObject
 @property  int imageOrientation
 @property  float faceOrientation
 @property  float junkiness
 @property  float areaMax
 @property  VNFaceObservation *observation
 @property  VNFaceLandmarks2D *landmarks
 @property  CIImage *segmentationSkin
 @property  CIImage *segmentationSclera
 @property  CIImage *segmentationIris
 @property  NSArray *uvLeft
 @property  NSArray *uvRight
 @property  CIVector *faceRect
 @property  CIVector *roiRenderOriginLeft
 @property  CIVector *roiRenderOriginRight
 @property  CIVector *roiRenderSize
 @property  CIVector *pupilLeft
 @property  CIVector *pupilRight

  // instance methods
  -[RedEyeFace init]
  -[RedEyeFace dealloc]
  -[RedEyeFace setObservation:]
  -[RedEyeFace faceRect]
  -[RedEyeFace setFaceRect:]
  -[RedEyeFace landmarks]
  -[RedEyeFace setLandmarks:]
  -[RedEyeFace setSegmentationSkin:]
  -[RedEyeFace setSegmentationSclera:]
  -[RedEyeFace setSegmentationIris:]
  -[RedEyeFace setUvLeft:]
  -[RedEyeFace setUvRight:]
  -[RedEyeFace setRoiRenderOriginLeft:]
  -[RedEyeFace setRoiRenderOriginRight:]
  -[RedEyeFace setRoiRenderSize:]
  -[RedEyeFace setPupilLeft:]
  -[RedEyeFace setPupilRight:]
  -[RedEyeFace imageOrientation]
  -[RedEyeFace setImageOrientation:]
  -[RedEyeFace faceOrientation]
  -[RedEyeFace setFaceOrientation:]
  -[RedEyeFace junkiness]
  -[RedEyeFace setJunkiness:]
  -[RedEyeFace areaMax]
  -[RedEyeFace setAreaMax:]
  -[RedEyeFace observation]
  -[RedEyeFace segmentationSkin]
  -[RedEyeFace segmentationSclera]
  -[RedEyeFace segmentationIris]
  -[RedEyeFace uvLeft]
  -[RedEyeFace uvRight]
  -[RedEyeFace roiRenderOriginLeft]
  -[RedEyeFace roiRenderOriginRight]
  -[RedEyeFace roiRenderSize]
  -[RedEyeFace pupilLeft]
  -[RedEyeFace pupilRight]


CIDualRedEyeRepairSession : NSObject
 @property  NSArray *observations
 @property  CIRenderDestination *destination
 @property  CIImage *primaryImage
 @property  CIImage *secondaryImage
 @property  NSDictionary *metadata
 @property  NSDictionary *imageProperties
 @property  NSArray *faces
 @property  CIDualRedEyeRepairTuning *tuning
 @property  NSDate *timestamp
 @property  NSDictionary *tuningParametersByPortType
 @property  <MTLCommandBuffer> *commandBuffer
 @property  CIContext *context
 @property  <MTLCommandQueue> *commandQueue
 @property  <MTLTexture> *primaryTexture
 @property  <MTLTexture> *secondaryTexture
 @property  <MTLTexture> *outputTexture

  // class methods
  +[CIDualRedEyeRepairSession _contextRGBAh]

  // instance methods
  -[CIDualRedEyeRepairSession init]
  -[CIDualRedEyeRepairSession dealloc]
  -[CIDualRedEyeRepairSession context]
  -[CIDualRedEyeRepairSession timestamp]
  -[CIDualRedEyeRepairSession setContext:]
  -[CIDualRedEyeRepairSession setTimestamp:]
  -[CIDualRedEyeRepairSession destination]
  -[CIDualRedEyeRepairSession commandBuffer]
  -[CIDualRedEyeRepairSession setTuning:]
  -[CIDualRedEyeRepairSession cleanupState]
  -[CIDualRedEyeRepairSession setObservations:]
  -[CIDualRedEyeRepairSession setDestination:]
  -[CIDualRedEyeRepairSession setPrimaryImage:]
  -[CIDualRedEyeRepairSession setSecondaryImage:]
  -[CIDualRedEyeRepairSession setMetadata:]
  -[CIDualRedEyeRepairSession setImageProperties:]
  -[CIDualRedEyeRepairSession setFaces:]
  -[CIDualRedEyeRepairSession customizeRepairFilter:forFace:]
  -[CIDualRedEyeRepairSession setTuningParametersByPortType:]
  -[CIDualRedEyeRepairSession prepareRepair]
  -[CIDualRedEyeRepairSession commandQueue]
  -[CIDualRedEyeRepairSession primaryTexture]
  -[CIDualRedEyeRepairSession secondaryTexture]
  -[CIDualRedEyeRepairSession outputTexture]
  -[CIDualRedEyeRepairSession primaryImage]
  -[CIDualRedEyeRepairSession renderUsingPixelBuffers]
  -[CIDualRedEyeRepairSession renderUsingProvidedCommandQueue]
  -[CIDualRedEyeRepairSession validateRenderState]
  -[CIDualRedEyeRepairSession tuning]
  -[CIDualRedEyeRepairSession observations]
  -[CIDualRedEyeRepairSession metadata]
  -[CIDualRedEyeRepairSession faces]
  -[CIDualRedEyeRepairSession tuningParametersByPortType]
  -[CIDualRedEyeRepairSession imageProperties]
  -[CIDualRedEyeRepairSession dumpInputs]
  -[CIDualRedEyeRepairSession validateSetPrimary]
  -[CIDualRedEyeRepairSession dumpObservation:index:]
  -[CIDualRedEyeRepairSession redEyeFaceFromObservation:exifOrientation:]
  -[CIDualRedEyeRepairSession _repairPrimaryWithSecondary:to:]
  -[CIDualRedEyeRepairSession dumpSecondary]
  -[CIDualRedEyeRepairSession validateRepair]
  -[CIDualRedEyeRepairSession secondaryImage]
  -[CIDualRedEyeRepairSession setCommandBuffer:]
  -[CIDualRedEyeRepairSession repairFace:filter:]
  -[CIDualRedEyeRepairSession prewarm]
  -[CIDualRedEyeRepairSession prepareRepairWithTuningParametersByPortType:]
  -[CIDualRedEyeRepairSession setPrimary:observations:metadata:]
  -[CIDualRedEyeRepairSession repairPrimaryWithSecondary:]
  -[CIDualRedEyeRepairSession setCommandQueue:]
  -[CIDualRedEyeRepairSession setPrimaryTexture:]
  -[CIDualRedEyeRepairSession setSecondaryTexture:]
  -[CIDualRedEyeRepairSession setOutputTexture:]


CIRedEyeRaw : CIFilter
 @property  CIImage *inputPrimary
 @property  CIImage *inputSecondary
 @property  CIVector *inputSize
 @property  CIVector *inputOriginLeft
 @property  CIVector *inputOriginRight
 @property  CIVector *inputAxisShortLeft
 @property  CIVector *inputAxisShortRight
 @property  CIVector *inputAxisLongLeft
 @property  CIVector *inputAxisLongRight
 @property  CIVector *inputPupilCenterLeft
 @property  CIVector *inputPupilCenterRight
 @property  NSNumber *inputRepairSource
 @property  NSNumber *inputRepairDarken
 @property  NSNumber *inputRepairChroma
 @property  NSNumber *inputCutoff
 @property  NSNumber *inputSpecMin
 @property  NSNumber *inputSpecMax
 @property  NSNumber *inputSpecIntensity
 @property  NSNumber *inputOrientationHint
 @property  NSNumber *inputOrientationScale
 @property  NSNumber *inputSpecular
 @property  NSNumber *inputShowMask
 @property  NSNumber *inputRepairPercent
 @property  NSNumber *inputInterPeakMin
 @property  NSNumber *inputRepairPercentile
 @property  NSNumber *inputClipMin
 @property  NSNumber *inputMidSpectrumWhiteOffsetsX
 @property  NSNumber *inputMidSpectrumWhiteOffsetsY
 @property  NSNumber *inputClosingErosion
 @property  NSNumber *inputClosingDilation
 @property  NSNumber *inputSplat
 @property  NSNumber *inputFlooding
 @property  NSNumber *inputGamma
 @property  NSNumber *inputFeathering
 @property  NSNumber *inputFSmooth
 @property  NSNumber *inputRepairDither
 @property  NSNumber *inputRecover
 @property  NSNumber *inputSpecArea
 @property  NSNumber *inputSpecAreaScale
 @property  NSNumber *inputWhiteCutoff
 @property  NSNumber *inputSpecularCutoff
 @property  NSNumber *inputAbortDensityLo
 @property  NSNumber *inputAbortDensityDiff
 @property  NSNumber *inputCircularity
 @property  NSNumber *inputIntersect
 @property  NSNumber *inputSkinThreshold
 @property  NSNumber *inputSkinThresholdMed
 @property  NSNumber *inputScleraThreshold
 @property  NSNumber *inputFalloffDensity
 @property  NSNumber *inputFalloffRepair
 @property  NSNumber *inputFalloffSpecular
 @property  NSNumber *inputRadiusRepair
 @property  NSNumber *inputRadiusDensity
 @property  NSNumber *inputRadiusSpecular
 @property  NSNumber *inputCenterSpecRad
 @property  NSNumber *inputScale
 @property  NSNumber *inputParam
 @property  NSNumber *inputParam2
 @property  NSNumber *inputParam3
 @property  NSNumber *inputParam4
 @property  NSNumber *inputCentroidIterations
 @property  NSNumber *inputCentroidGamma
 @property  NSNumber *inputCentroidRadius
 @property  NSNumber *inputCentroidRadiusSmall
 @property  NSNumber *inputSearchLong
 @property  NSNumber *inputSearchShort
 @property  NSNumber *inputRefilterSpace
 @property  NSNumber *inputRefilterRange
 @property  NSNumber *inputDetectWhite
 @property  NSNumber *inputDetectRed
 @property  NSNumber *inputMinInterDispersion
 @property  NSNumber *inputMaxInterDispersion
 @property  NSNumber *inputMinMaskDiff
 @property  NSNumber *inputGlintThreshold
 @property  NSNumber *inputTargetClosing
 @property  NSNumber *inputUseFaceSegmentationMask
 @property  NSNumber *inputDetectionThresholdIrisSmall
 @property  NSNumber *inputDetectionThresholdScleraSmall
 @property  NSNumber *inputDetectionThresholdSkinSmall
 @property  NSNumber *inputScleraProtectionThresholdIrisSmall
 @property  NSNumber *inputScleraProtectionThresholdScleraSmall
 @property  NSNumber *inputScleraProtectionThresholdSkinSmall
 @property  NSNumber *inputSkinProtectionThresholdSmall
 @property  NSNumber *inputDetectionThresholdIrisMedium
 @property  NSNumber *inputDetectionThresholdScleraMedium
 @property  NSNumber *inputDetectionThresholdSkinMedium
 @property  NSNumber *inputScleraProtectionThresholdIrisMedium
 @property  NSNumber *inputScleraProtectionThresholdScleraMedium
 @property  NSNumber *inputScleraProtectionThresholdSkinMedium
 @property  NSNumber *inputSkinProtectionThresholdMedium
 @property  NSNumber *inputDetectionThresholdIrisLarge
 @property  NSNumber *inputDetectionThresholdScleraLarge
 @property  NSNumber *inputDetectionThresholdSkinLarge
 @property  NSNumber *inputScleraProtectionThresholdIrisLarge
 @property  NSNumber *inputScleraProtectionThresholdScleraLarge
 @property  NSNumber *inputScleraProtectionThresholdSkinLarge
 @property  NSNumber *inputSkinProtectionThresholdLarge
 @property  CIImage *inputIrisMask
 @property  CIImage *inputScleraMask
 @property  CIImage *inputSkinMask

  // instance methods
  -[CIRedEyeRaw outputImage]
  -[CIRedEyeRaw inputScale]
  -[CIRedEyeRaw setInputScale:]
  -[CIRedEyeRaw inputMinInterDispersion]
  -[CIRedEyeRaw setInputMinInterDispersion:]
  -[CIRedEyeRaw inputMaxInterDispersion]
  -[CIRedEyeRaw setInputMaxInterDispersion:]
  -[CIRedEyeRaw inputSplat]
  -[CIRedEyeRaw setInputSplat:]
  -[CIRedEyeRaw inputSpecIntensity]
  -[CIRedEyeRaw setInputSpecIntensity:]
  -[CIRedEyeRaw inputWhiteCutoff]
  -[CIRedEyeRaw setInputWhiteCutoff:]
  -[CIRedEyeRaw inputGamma]
  -[CIRedEyeRaw setInputGamma:]
  -[CIRedEyeRaw inputIrisMask]
  -[CIRedEyeRaw inputScleraMask]
  -[CIRedEyeRaw inputSkinMask]
  -[CIRedEyeRaw irisProtectionMaskWithThresholdIris:thresholdSclera:thresholdSkin:]
  -[CIRedEyeRaw skinProtectionMaskWithThreshold:]
  -[CIRedEyeRaw inputPrimary]
  -[CIRedEyeRaw setInputPrimary:]
  -[CIRedEyeRaw inputSecondary]
  -[CIRedEyeRaw setInputSecondary:]
  -[CIRedEyeRaw inputSize]
  -[CIRedEyeRaw setInputSize:]
  -[CIRedEyeRaw inputOriginLeft]
  -[CIRedEyeRaw setInputOriginLeft:]
  -[CIRedEyeRaw inputOriginRight]
  -[CIRedEyeRaw setInputOriginRight:]
  -[CIRedEyeRaw inputAxisShortLeft]
  -[CIRedEyeRaw setInputAxisShortLeft:]
  -[CIRedEyeRaw inputAxisShortRight]
  -[CIRedEyeRaw setInputAxisShortRight:]
  -[CIRedEyeRaw inputAxisLongLeft]
  -[CIRedEyeRaw setInputAxisLongLeft:]
  -[CIRedEyeRaw inputAxisLongRight]
  -[CIRedEyeRaw setInputAxisLongRight:]
  -[CIRedEyeRaw inputPupilCenterLeft]
  -[CIRedEyeRaw setInputPupilCenterLeft:]
  -[CIRedEyeRaw inputPupilCenterRight]
  -[CIRedEyeRaw setInputPupilCenterRight:]
  -[CIRedEyeRaw inputOrientationHint]
  -[CIRedEyeRaw setInputOrientationHint:]
  -[CIRedEyeRaw inputOrientationScale]
  -[CIRedEyeRaw setInputOrientationScale:]
  -[CIRedEyeRaw inputRepairSource]
  -[CIRedEyeRaw setInputRepairSource:]
  -[CIRedEyeRaw inputRepairDarken]
  -[CIRedEyeRaw setInputRepairDarken:]
  -[CIRedEyeRaw inputRepairChroma]
  -[CIRedEyeRaw setInputRepairChroma:]
  -[CIRedEyeRaw inputCutoff]
  -[CIRedEyeRaw setInputCutoff:]
  -[CIRedEyeRaw inputSpecMin]
  -[CIRedEyeRaw setInputSpecMin:]
  -[CIRedEyeRaw inputSpecMax]
  -[CIRedEyeRaw setInputSpecMax:]
  -[CIRedEyeRaw inputSpecular]
  -[CIRedEyeRaw setInputSpecular:]
  -[CIRedEyeRaw inputShowMask]
  -[CIRedEyeRaw setInputShowMask:]
  -[CIRedEyeRaw inputRepairPercent]
  -[CIRedEyeRaw setInputRepairPercent:]
  -[CIRedEyeRaw inputInterPeakMin]
  -[CIRedEyeRaw setInputInterPeakMin:]
  -[CIRedEyeRaw inputRepairPercentile]
  -[CIRedEyeRaw setInputRepairPercentile:]
  -[CIRedEyeRaw inputClipMin]
  -[CIRedEyeRaw setInputClipMin:]
  -[CIRedEyeRaw inputMidSpectrumWhiteOffsetsX]
  -[CIRedEyeRaw setInputMidSpectrumWhiteOffsetsX:]
  -[CIRedEyeRaw inputMidSpectrumWhiteOffsetsY]
  -[CIRedEyeRaw setInputMidSpectrumWhiteOffsetsY:]
  -[CIRedEyeRaw inputClosingErosion]
  -[CIRedEyeRaw setInputClosingErosion:]
  -[CIRedEyeRaw inputClosingDilation]
  -[CIRedEyeRaw setInputClosingDilation:]
  -[CIRedEyeRaw inputFlooding]
  -[CIRedEyeRaw setInputFlooding:]
  -[CIRedEyeRaw inputFeathering]
  -[CIRedEyeRaw setInputFeathering:]
  -[CIRedEyeRaw inputFSmooth]
  -[CIRedEyeRaw setInputFSmooth:]
  -[CIRedEyeRaw inputRepairDither]
  -[CIRedEyeRaw setInputRepairDither:]
  -[CIRedEyeRaw inputRecover]
  -[CIRedEyeRaw setInputRecover:]
  -[CIRedEyeRaw inputSpecArea]
  -[CIRedEyeRaw setInputSpecArea:]
  -[CIRedEyeRaw inputSpecAreaScale]
  -[CIRedEyeRaw setInputSpecAreaScale:]
  -[CIRedEyeRaw inputSpecularCutoff]
  -[CIRedEyeRaw setInputSpecularCutoff:]
  -[CIRedEyeRaw inputAbortDensityLo]
  -[CIRedEyeRaw setInputAbortDensityLo:]
  -[CIRedEyeRaw inputAbortDensityDiff]
  -[CIRedEyeRaw setInputAbortDensityDiff:]
  -[CIRedEyeRaw inputCircularity]
  -[CIRedEyeRaw setInputCircularity:]
  -[CIRedEyeRaw inputIntersect]
  -[CIRedEyeRaw setInputIntersect:]
  -[CIRedEyeRaw inputSkinThreshold]
  -[CIRedEyeRaw setInputSkinThreshold:]
  -[CIRedEyeRaw inputSkinThresholdMed]
  -[CIRedEyeRaw setInputSkinThresholdMed:]
  -[CIRedEyeRaw inputScleraThreshold]
  -[CIRedEyeRaw setInputScleraThreshold:]
  -[CIRedEyeRaw inputCenterSpecRad]
  -[CIRedEyeRaw setInputCenterSpecRad:]
  -[CIRedEyeRaw inputFalloffDensity]
  -[CIRedEyeRaw setInputFalloffDensity:]
  -[CIRedEyeRaw inputFalloffRepair]
  -[CIRedEyeRaw setInputFalloffRepair:]
  -[CIRedEyeRaw inputFalloffSpecular]
  -[CIRedEyeRaw setInputFalloffSpecular:]
  -[CIRedEyeRaw inputRadiusRepair]
  -[CIRedEyeRaw setInputRadiusRepair:]
  -[CIRedEyeRaw inputRadiusDensity]
  -[CIRedEyeRaw setInputRadiusDensity:]
  -[CIRedEyeRaw inputRadiusSpecular]
  -[CIRedEyeRaw setInputRadiusSpecular:]
  -[CIRedEyeRaw inputCentroidIterations]
  -[CIRedEyeRaw setInputCentroidIterations:]
  -[CIRedEyeRaw inputCentroidGamma]
  -[CIRedEyeRaw setInputCentroidGamma:]
  -[CIRedEyeRaw inputCentroidRadius]
  -[CIRedEyeRaw setInputCentroidRadius:]
  -[CIRedEyeRaw inputCentroidRadiusSmall]
  -[CIRedEyeRaw setInputCentroidRadiusSmall:]
  -[CIRedEyeRaw inputSearchLong]
  -[CIRedEyeRaw setInputSearchLong:]
  -[CIRedEyeRaw inputSearchShort]
  -[CIRedEyeRaw setInputSearchShort:]
  -[CIRedEyeRaw inputParam]
  -[CIRedEyeRaw setInputParam:]
  -[CIRedEyeRaw inputParam2]
  -[CIRedEyeRaw setInputParam2:]
  -[CIRedEyeRaw inputParam3]
  -[CIRedEyeRaw setInputParam3:]
  -[CIRedEyeRaw inputParam4]
  -[CIRedEyeRaw setInputParam4:]
  -[CIRedEyeRaw inputRefilterSpace]
  -[CIRedEyeRaw setInputRefilterSpace:]
  -[CIRedEyeRaw inputRefilterRange]
  -[CIRedEyeRaw setInputRefilterRange:]
  -[CIRedEyeRaw inputDetectWhite]
  -[CIRedEyeRaw setInputDetectWhite:]
  -[CIRedEyeRaw inputDetectRed]
  -[CIRedEyeRaw setInputDetectRed:]
  -[CIRedEyeRaw inputMinMaskDiff]
  -[CIRedEyeRaw setInputMinMaskDiff:]
  -[CIRedEyeRaw inputGlintThreshold]
  -[CIRedEyeRaw setInputGlintThreshold:]
  -[CIRedEyeRaw inputTargetClosing]
  -[CIRedEyeRaw setInputTargetClosing:]
  -[CIRedEyeRaw inputUseFaceSegmentationMask]
  -[CIRedEyeRaw setInputUseFaceSegmentationMask:]
  -[CIRedEyeRaw inputDetectionThresholdIrisSmall]
  -[CIRedEyeRaw setInputDetectionThresholdIrisSmall:]
  -[CIRedEyeRaw inputDetectionThresholdScleraSmall]
  -[CIRedEyeRaw setInputDetectionThresholdScleraSmall:]
  -[CIRedEyeRaw inputDetectionThresholdSkinSmall]
  -[CIRedEyeRaw setInputDetectionThresholdSkinSmall:]
  -[CIRedEyeRaw inputScleraProtectionThresholdIrisSmall]
  -[CIRedEyeRaw setInputScleraProtectionThresholdIrisSmall:]
  -[CIRedEyeRaw inputScleraProtectionThresholdScleraSmall]
  -[CIRedEyeRaw setInputScleraProtectionThresholdScleraSmall:]
  -[CIRedEyeRaw inputScleraProtectionThresholdSkinSmall]
  -[CIRedEyeRaw setInputScleraProtectionThresholdSkinSmall:]
  -[CIRedEyeRaw inputSkinProtectionThresholdSmall]
  -[CIRedEyeRaw setInputSkinProtectionThresholdSmall:]
  -[CIRedEyeRaw inputDetectionThresholdIrisMedium]
  -[CIRedEyeRaw setInputDetectionThresholdIrisMedium:]
  -[CIRedEyeRaw inputDetectionThresholdScleraMedium]
  -[CIRedEyeRaw setInputDetectionThresholdScleraMedium:]
  -[CIRedEyeRaw inputDetectionThresholdSkinMedium]
  -[CIRedEyeRaw setInputDetectionThresholdSkinMedium:]
  -[CIRedEyeRaw inputScleraProtectionThresholdIrisMedium]
  -[CIRedEyeRaw setInputScleraProtectionThresholdIrisMedium:]
  -[CIRedEyeRaw inputScleraProtectionThresholdScleraMedium]
  -[CIRedEyeRaw setInputScleraProtectionThresholdScleraMedium:]
  -[CIRedEyeRaw inputScleraProtectionThresholdSkinMedium]
  -[CIRedEyeRaw setInputScleraProtectionThresholdSkinMedium:]
  -[CIRedEyeRaw inputSkinProtectionThresholdMedium]
  -[CIRedEyeRaw setInputSkinProtectionThresholdMedium:]
  -[CIRedEyeRaw inputDetectionThresholdIrisLarge]
  -[CIRedEyeRaw setInputDetectionThresholdIrisLarge:]
  -[CIRedEyeRaw inputDetectionThresholdScleraLarge]
  -[CIRedEyeRaw setInputDetectionThresholdScleraLarge:]
  -[CIRedEyeRaw inputDetectionThresholdSkinLarge]
  -[CIRedEyeRaw setInputDetectionThresholdSkinLarge:]
  -[CIRedEyeRaw inputScleraProtectionThresholdIrisLarge]
  -[CIRedEyeRaw setInputScleraProtectionThresholdIrisLarge:]
  -[CIRedEyeRaw inputScleraProtectionThresholdScleraLarge]
  -[CIRedEyeRaw setInputScleraProtectionThresholdScleraLarge:]
  -[CIRedEyeRaw inputScleraProtectionThresholdSkinLarge]
  -[CIRedEyeRaw setInputScleraProtectionThresholdSkinLarge:]
  -[CIRedEyeRaw inputSkinProtectionThresholdLarge]
  -[CIRedEyeRaw setInputSkinProtectionThresholdLarge:]
  -[CIRedEyeRaw setInputIrisMask:]
  -[CIRedEyeRaw setInputScleraMask:]
  -[CIRedEyeRaw setInputSkinMask:]


CIDualRedEyeRepairTuning : NSObject
 @property  NSDictionary *repairTuning
 @property  NSDictionary *sessionTuning

  // class methods
  +[CIDualRedEyeRepairTuning repairParametersForTuning:]
  +[CIDualRedEyeRepairTuning sessionParametersForTuning:]
  +[CIDualRedEyeRepairTuning defaultRepairParameters]
  +[CIDualRedEyeRepairTuning defaultSessionParameters]

  // instance methods
  -[CIDualRedEyeRepairTuning dealloc]
  -[CIDualRedEyeRepairTuning initWithTuning:]
  -[CIDualRedEyeRepairTuning repairTuning]
  -[CIDualRedEyeRepairTuning sessionTuning]
  -[CIDualRedEyeRepairTuning setTuningParametersByPortType:withCameraMetadata:]
  -[CIDualRedEyeRepairTuning setRepairTuning:]
  -[CIDualRedEyeRepairTuning setSessionTuning:]
  -[CIDualRedEyeRepairTuning tuningFromCameraModel:portType:]
  -[CIDualRedEyeRepairTuning updateWithCaptureSetup:portType:]


CIEdgePreserveUpsampleFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputSmallImage
 @property  NSNumber *inputSpatialSigma
 @property  NSNumber *inputLumaSigma

  // class methods
  +[CIEdgePreserveUpsampleFilter customAttributes]

  // instance methods
  -[CIEdgePreserveUpsampleFilter outputImage]
  -[CIEdgePreserveUpsampleFilter inputImage]
  -[CIEdgePreserveUpsampleFilter setInputImage:]
  -[CIEdgePreserveUpsampleFilter _kernelGuideMono]
  -[CIEdgePreserveUpsampleFilter _kernelGuideCombine]
  -[CIEdgePreserveUpsampleFilter _kernelJointUpsamp]
  -[CIEdgePreserveUpsampleFilter _kernelJointUpsampRG]
  -[CIEdgePreserveUpsampleFilter _kernelGuideCombine4]
  -[CIEdgePreserveUpsampleFilter inputSmallImage]
  -[CIEdgePreserveUpsampleFilter setInputSmallImage:]
  -[CIEdgePreserveUpsampleFilter inputSpatialSigma]
  -[CIEdgePreserveUpsampleFilter setInputSpatialSigma:]
  -[CIEdgePreserveUpsampleFilter inputLumaSigma]
  -[CIEdgePreserveUpsampleFilter setInputLumaSigma:]


CIEdgePreserveUpsampleRGFilter : CIEdgePreserveUpsampleFilter
  // instance methods
  -[CIEdgePreserveUpsampleRGFilter outputImage]


CIEdgeWork : CIFilter
  // class methods
  +[CIEdgeWork customAttributes]

  // instance methods
  -[CIEdgeWork outputImage]
  -[CIEdgeWork _CIEdgeWork]
  -[CIEdgeWork _CIEdgeWorkContrast]


CIEdges : CIFilter
  // class methods
  +[CIEdges customAttributes]

  // instance methods
  -[CIEdges outputImage]
  -[CIEdges _CIEdges]


CIGaborGradients : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIGaborGradients customAttributes]

  // instance methods
  -[CIGaborGradients outputImage]
  -[CIGaborGradients inputImage]
  -[CIGaborGradients setInputImage:]


CIExposureAdjust : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputEV

  // class methods
  +[CIExposureAdjust customAttributes]

  // instance methods
  -[CIExposureAdjust outputImage]
  -[CIExposureAdjust inputImage]
  -[CIExposureAdjust setInputImage:]
  -[CIExposureAdjust _isIdentity]
  -[CIExposureAdjust inputEV]
  -[CIExposureAdjust setInputEV:]


CIFaceBalance : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  NSNumber *inputOrigI
 @property  NSNumber *inputOrigQ
 @property  NSNumber *inputStrength
 @property  NSNumber *inputWarmth

  // class methods
  +[CIFaceBalance customAttributes]

  // instance methods
  -[CIFaceBalance _kernel]
  -[CIFaceBalance outputImage]
  -[CIFaceBalance inputImage]
  -[CIFaceBalance setInputImage:]
  -[CIFaceBalance _outputProperties]
  -[CIFaceBalance _initFromProperties:]
  -[CIFaceBalance _isIdentity]
  -[CIFaceBalance inputStrength]
  -[CIFaceBalance setInputStrength:]
  -[CIFaceBalance inputWarmth]
  -[CIFaceBalance setInputWarmth:]
  -[CIFaceBalance setInputOrigI:]
  -[CIFaceBalance setInputOrigQ:]
  -[CIFaceBalance inputOrigI]
  -[CIFaceBalance inputOrigQ]


CIFaceMaskApply : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputParameterImage
 @property  CIVector *inputFacesCenterX
 @property  CIVector *inputFacesCenterY
 @property  CIVector *inputFacesChinX
 @property  CIVector *inputFacesChinY
 @property  CIVector *inputK0
 @property  CIVector *inputK1
 @property  CIVector *inputK2
 @property  CIVector *inputK3
 @property  NSNumber *inputK4
 @property  NSDictionary *inputTuningParameters

  // class methods
  +[CIFaceMaskApply _kernel]

  // instance methods
  -[CIFaceMaskApply outputImage]
  -[CIFaceMaskApply inputImage]
  -[CIFaceMaskApply setInputImage:]
  -[CIFaceMaskApply inputParameterImage]
  -[CIFaceMaskApply setInputParameterImage:]
  -[CIFaceMaskApply inputFacesCenterX]
  -[CIFaceMaskApply setInputFacesCenterX:]
  -[CIFaceMaskApply inputFacesCenterY]
  -[CIFaceMaskApply setInputFacesCenterY:]
  -[CIFaceMaskApply inputFacesChinX]
  -[CIFaceMaskApply setInputFacesChinX:]
  -[CIFaceMaskApply inputFacesChinY]
  -[CIFaceMaskApply setInputFacesChinY:]
  -[CIFaceMaskApply inputK0]
  -[CIFaceMaskApply setInputK0:]
  -[CIFaceMaskApply inputK1]
  -[CIFaceMaskApply setInputK1:]
  -[CIFaceMaskApply inputK2]
  -[CIFaceMaskApply setInputK2:]
  -[CIFaceMaskApply inputK3]
  -[CIFaceMaskApply setInputK3:]
  -[CIFaceMaskApply inputK4]
  -[CIFaceMaskApply setInputK4:]
  -[CIFaceMaskApply inputTuningParameters]
  -[CIFaceMaskApply setInputTuningParameters:]


CIFaceMaskDelta : CIFilter
 @property  CIVector *inputImageSize
 @property  CIImage *inputParameterImage
 @property  CIVector *inputFacesCenterX
 @property  CIVector *inputFacesCenterY
 @property  CIVector *inputFacesChinX
 @property  CIVector *inputFacesChinY
 @property  CIVector *inputFacesLeftEyeX
 @property  CIVector *inputFacesLeftEyeY
 @property  CIVector *inputFacesRightEyeX
 @property  CIVector *inputFacesRightEyeY
 @property  CIVector *inputK0
 @property  CIVector *inputK1
 @property  CIVector *inputK2
 @property  CIVector *inputK3
 @property  NSNumber *inputDistanceAdd
 @property  NSNumber *inputAdditiveMaxBlur
 @property  NSNumber *inputSubtractiveMaxBlur
 @property  NSNumber *inputApertureScaling
 @property  NSNumber *inputMaxBlur
 @property  NSNumber *inputSubjectDistanceMinimumFocusDistance
 @property  NSNumber *inputSubjectDistanceMaximumFocusDistance
 @property  NSNumber *inputSubjectDistanceScalingFactor
 @property  NSNumber *inputSubjectDistanceOffset
 @property  CIVector *inputFocusRect
 @property  NSDictionary *inputTuningParameters

  // instance methods
  -[CIFaceMaskDelta outputImage]
  -[CIFaceMaskDelta inputApertureScaling]
  -[CIFaceMaskDelta inputMaxBlur]
  -[CIFaceMaskDelta setInputApertureScaling:]
  -[CIFaceMaskDelta setInputMaxBlur:]
  -[CIFaceMaskDelta inputParameterImage]
  -[CIFaceMaskDelta setInputParameterImage:]
  -[CIFaceMaskDelta inputFacesCenterX]
  -[CIFaceMaskDelta setInputFacesCenterX:]
  -[CIFaceMaskDelta inputFacesCenterY]
  -[CIFaceMaskDelta setInputFacesCenterY:]
  -[CIFaceMaskDelta inputFacesChinX]
  -[CIFaceMaskDelta setInputFacesChinX:]
  -[CIFaceMaskDelta inputFacesChinY]
  -[CIFaceMaskDelta setInputFacesChinY:]
  -[CIFaceMaskDelta inputK0]
  -[CIFaceMaskDelta setInputK0:]
  -[CIFaceMaskDelta inputK1]
  -[CIFaceMaskDelta setInputK1:]
  -[CIFaceMaskDelta inputK2]
  -[CIFaceMaskDelta setInputK2:]
  -[CIFaceMaskDelta inputK3]
  -[CIFaceMaskDelta setInputK3:]
  -[CIFaceMaskDelta inputTuningParameters]
  -[CIFaceMaskDelta setInputTuningParameters:]
  -[CIFaceMaskDelta _isValidFace:]
  -[CIFaceMaskDelta findMostProminentFace]
  -[CIFaceMaskDelta _landmarksToDist:minimumDistance:maximumDistance:scalingFactor:offset:]
  -[CIFaceMaskDelta distanceToAdd]
  -[CIFaceMaskDelta inputImageSize]
  -[CIFaceMaskDelta setInputImageSize:]
  -[CIFaceMaskDelta inputFacesLeftEyeX]
  -[CIFaceMaskDelta setInputFacesLeftEyeX:]
  -[CIFaceMaskDelta inputFacesLeftEyeY]
  -[CIFaceMaskDelta setInputFacesLeftEyeY:]
  -[CIFaceMaskDelta inputFacesRightEyeX]
  -[CIFaceMaskDelta setInputFacesRightEyeX:]
  -[CIFaceMaskDelta inputFacesRightEyeY]
  -[CIFaceMaskDelta setInputFacesRightEyeY:]
  -[CIFaceMaskDelta inputDistanceAdd]
  -[CIFaceMaskDelta setInputDistanceAdd:]
  -[CIFaceMaskDelta inputAdditiveMaxBlur]
  -[CIFaceMaskDelta setInputAdditiveMaxBlur:]
  -[CIFaceMaskDelta inputSubtractiveMaxBlur]
  -[CIFaceMaskDelta setInputSubtractiveMaxBlur:]
  -[CIFaceMaskDelta inputFocusRect]
  -[CIFaceMaskDelta setInputFocusRect:]
  -[CIFaceMaskDelta inputSubjectDistanceMinimumFocusDistance]
  -[CIFaceMaskDelta setInputSubjectDistanceMinimumFocusDistance:]
  -[CIFaceMaskDelta inputSubjectDistanceMaximumFocusDistance]
  -[CIFaceMaskDelta setInputSubjectDistanceMaximumFocusDistance:]
  -[CIFaceMaskDelta inputSubjectDistanceScalingFactor]
  -[CIFaceMaskDelta setInputSubjectDistanceScalingFactor:]
  -[CIFaceMaskDelta inputSubjectDistanceOffset]
  -[CIFaceMaskDelta setInputSubjectDistanceOffset:]


CIFaceMaskCalculator : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputFacesLeftEyeX
 @property  CIVector *inputFacesLeftEyeY
 @property  CIVector *inputFacesCenterX
 @property  CIVector *inputFacesCenterY
 @property  CIVector *inputFacesRightEyeX
 @property  CIVector *inputFacesRightEyeY
 @property  CIVector *inputFacesChinX
 @property  CIVector *inputFacesChinY
 @property  NSNumber *inputMaxBlur
 @property  NSNumber *inputFacesCapMultip
 @property  NSNumber *inputFacesMaxBlurOnEyes
 @property  NSNumber *inputFacesMaxBlurDistFromFocus
 @property  NSNumber *inputFacesLinearBlurGrowthM
 @property  NSNumber *inputFacesLinearBlurGrowthC
 @property  NSNumber *inputFacesEyeToEyebrowRatio
 @property  NSNumber *inputFacesDistToBlurScaling
 @property  NSNumber *inputFacesGainMultip
 @property  NSNumber *inputApertureScaling
 @property  NSDictionary *inputTuningParameters

  // instance methods
  -[CIFaceMaskCalculator _kernel]
  -[CIFaceMaskCalculator outputImage]
  -[CIFaceMaskCalculator inputImage]
  -[CIFaceMaskCalculator setInputImage:]
  -[CIFaceMaskCalculator inputApertureScaling]
  -[CIFaceMaskCalculator inputMaxBlur]
  -[CIFaceMaskCalculator setInputApertureScaling:]
  -[CIFaceMaskCalculator setInputMaxBlur:]
  -[CIFaceMaskCalculator inputFacesCenterX]
  -[CIFaceMaskCalculator setInputFacesCenterX:]
  -[CIFaceMaskCalculator inputFacesCenterY]
  -[CIFaceMaskCalculator setInputFacesCenterY:]
  -[CIFaceMaskCalculator inputFacesChinX]
  -[CIFaceMaskCalculator setInputFacesChinX:]
  -[CIFaceMaskCalculator inputFacesChinY]
  -[CIFaceMaskCalculator setInputFacesChinY:]
  -[CIFaceMaskCalculator inputTuningParameters]
  -[CIFaceMaskCalculator setInputTuningParameters:]
  -[CIFaceMaskCalculator inputFacesLeftEyeX]
  -[CIFaceMaskCalculator setInputFacesLeftEyeX:]
  -[CIFaceMaskCalculator inputFacesLeftEyeY]
  -[CIFaceMaskCalculator setInputFacesLeftEyeY:]
  -[CIFaceMaskCalculator inputFacesRightEyeX]
  -[CIFaceMaskCalculator setInputFacesRightEyeX:]
  -[CIFaceMaskCalculator inputFacesRightEyeY]
  -[CIFaceMaskCalculator setInputFacesRightEyeY:]
  -[CIFaceMaskCalculator metalKernel]
  -[CIFaceMaskCalculator outputImage_V4]
  -[CIFaceMaskCalculator inputFacesCapMultip]
  -[CIFaceMaskCalculator setInputFacesCapMultip:]
  -[CIFaceMaskCalculator inputFacesMaxBlurOnEyes]
  -[CIFaceMaskCalculator setInputFacesMaxBlurOnEyes:]
  -[CIFaceMaskCalculator inputFacesMaxBlurDistFromFocus]
  -[CIFaceMaskCalculator setInputFacesMaxBlurDistFromFocus:]
  -[CIFaceMaskCalculator inputFacesLinearBlurGrowthM]
  -[CIFaceMaskCalculator setInputFacesLinearBlurGrowthM:]
  -[CIFaceMaskCalculator inputFacesLinearBlurGrowthC]
  -[CIFaceMaskCalculator setInputFacesLinearBlurGrowthC:]
  -[CIFaceMaskCalculator inputFacesEyeToEyebrowRatio]
  -[CIFaceMaskCalculator setInputFacesEyeToEyebrowRatio:]
  -[CIFaceMaskCalculator inputFacesDistToBlurScaling]
  -[CIFaceMaskCalculator setInputFacesDistToBlurScaling:]
  -[CIFaceMaskCalculator inputFacesGainMultip]
  -[CIFaceMaskCalculator setInputFacesGainMultip:]


CIFaceMaskKernel : CIImageProcessorKernel
  // class methods
  +[CIFaceMaskKernel outputFormat]
  +[CIFaceMaskKernel roiForInput:arguments:outputRect:]
  +[CIFaceMaskKernel processWithInputs:arguments:output:error:]
  +[CIFaceMaskKernel synchronizeInputs]
  +[CIFaceMaskKernel formatForInputAtIndex:]
  +[CIFaceMaskKernel hasValidPipelines]
  +[CIFaceMaskKernel releasePipelines]
  +[CIFaceMaskKernel compilePipelines:]
  +[CIFaceMaskKernel compilePipelinesIfNeeded:]
  +[CIFaceMaskKernel hasValidBuffers]
  +[CIFaceMaskKernel releaseBuffers]
  +[CIFaceMaskKernel allocateBuffers:]
  +[CIFaceMaskKernel allocateBuffersIfNeeded:]


CIFaceSegmentationFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRegion
 @property  NSNumber *inputOrientation
 @property  CIVector *inputFaceRect

  // instance methods
  -[CIFaceSegmentationFilter outputImage]
  -[CIFaceSegmentationFilter inputImage]
  -[CIFaceSegmentationFilter setInputImage:]
  -[CIFaceSegmentationFilter inputRegion]
  -[CIFaceSegmentationFilter setInputRegion:]
  -[CIFaceSegmentationFilter inputOrientation]
  -[CIFaceSegmentationFilter setInputOrientation:]
  -[CIFaceSegmentationFilter inputFaceRect]
  -[CIFaceSegmentationFilter setInputFaceRect:]


FBSProcessor : CIImageProcessorKernel
  // class methods
  +[FBSProcessor outputFormat]
  +[FBSProcessor roiForInput:arguments:outputRect:]
  +[FBSProcessor synchronizeInputs]
  +[FBSProcessor formatForInputAtIndex:]
  +[FBSProcessor allowPartialOutputRegion]
  +[FBSProcessor skipFormatChecks]


FBSProcessorCPU : FBSProcessor
  // class methods
  +[FBSProcessorCPU processWithInputs:arguments:output:error:]


FBSProcessorGPU : FBSProcessor
  // class methods
  +[FBSProcessorGPU processWithInputs:arguments:output:error:]


CIFastBilateralSolver : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDisparityImage
 @property  CIImage *inputConfidenceMapImage
 @property  NSNumber *inputMaxNumVertices
 @property  NSNumber *inputSigmaS
 @property  NSNumber *inputSigmaRLuma
 @property  NSNumber *inputSigmaRChroma
 @property  NSNumber *inputLambda
 @property  NSNumber *inputMaxNumIterations

  // class methods
  +[CIFastBilateralSolver customAttributes]

  // instance methods
  -[CIFastBilateralSolver outputImage]
  -[CIFastBilateralSolver inputImage]
  -[CIFastBilateralSolver setInputImage:]
  -[CIFastBilateralSolver inputDisparityImage]
  -[CIFastBilateralSolver setInputDisparityImage:]
  -[CIFastBilateralSolver inputConfidenceMapImage]
  -[CIFastBilateralSolver setInputConfidenceMapImage:]
  -[CIFastBilateralSolver inputMaxNumVertices]
  -[CIFastBilateralSolver setInputMaxNumVertices:]
  -[CIFastBilateralSolver inputSigmaS]
  -[CIFastBilateralSolver setInputSigmaS:]
  -[CIFastBilateralSolver inputSigmaRLuma]
  -[CIFastBilateralSolver setInputSigmaRLuma:]
  -[CIFastBilateralSolver inputSigmaRChroma]
  -[CIFastBilateralSolver setInputSigmaRChroma:]
  -[CIFastBilateralSolver inputLambda]
  -[CIFastBilateralSolver setInputLambda:]
  -[CIFastBilateralSolver inputMaxNumIterations]
  -[CIFastBilateralSolver setInputMaxNumIterations:]


CIFeature : NSObject
 @property  NSString *type
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds

  // instance methods
  -[CIFeature init]
  -[CIFeature type]
  -[CIFeature bounds]


CIFaceFeature : CIFeature
 @property  NSDictionary *landmarks
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  BOOL hasLeftEyePosition
 @property  {CGPoint=dd} leftEyePosition
 @property  BOOL hasRightEyePosition
 @property  {CGPoint=dd} rightEyePosition
 @property  BOOL hasMouthPosition
 @property  {CGPoint=dd} mouthPosition
 @property  BOOL hasTrackingID
 @property  int trackingID
 @property  BOOL hasTrackingFrameCount
 @property  int trackingFrameCount
 @property  BOOL hasFaceAngle
 @property  float faceAngle
 @property  BOOL hasSmile
 @property  BOOL leftEyeClosed
 @property  BOOL rightEyeClosed

  // instance methods
  -[CIFaceFeature dealloc]
  -[CIFaceFeature type]
  -[CIFaceFeature bounds]
  -[CIFaceFeature faceAngle]
  -[CIFaceFeature hasLeftEyePosition]
  -[CIFaceFeature hasRightEyePosition]
  -[CIFaceFeature landmarks]
  -[CIFaceFeature leftEyePosition]
  -[CIFaceFeature rightEyePosition]
  -[CIFaceFeature initWithBounds:hasLeftEyePosition:leftEyePosition:hasRightEyePosition:rightEyePosition:hasMouthPosition:mouthPosition:hasFaceAngle:faceAngle:hasTrackingID:trackingID:hasTrackingFrameCount:trackingFrameCount:hasSmile:leftEyeClosed:rightEyeClosed:landmarks:]
  -[CIFaceFeature hasMouthPosition]
  -[CIFaceFeature mouthPosition]
  -[CIFaceFeature hasTrackingID]
  -[CIFaceFeature trackingID]
  -[CIFaceFeature hasTrackingFrameCount]
  -[CIFaceFeature trackingFrameCount]
  -[CIFaceFeature hasFaceAngle]
  -[CIFaceFeature hasSmile]
  -[CIFaceFeature leftEyeClosed]
  -[CIFaceFeature rightEyeClosed]


CIRectangleFeature : CIFeature
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} topLeft
 @property  {CGPoint=dd} topRight
 @property  {CGPoint=dd} bottomLeft
 @property  {CGPoint=dd} bottomRight

  // instance methods
  -[CIRectangleFeature type]
  -[CIRectangleFeature bounds]
  -[CIRectangleFeature initWithBounds:topLeft:topRight:bottomLeft:bottomRight:]
  -[CIRectangleFeature topLeft]
  -[CIRectangleFeature topRight]
  -[CIRectangleFeature bottomLeft]
  -[CIRectangleFeature bottomRight]


CIQRCodeFeature : CIFeature <NSSecureCoding, NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} topLeft
 @property  {CGPoint=dd} topRight
 @property  {CGPoint=dd} bottomLeft
 @property  {CGPoint=dd} bottomRight
 @property  NSString *messageString
 @property  CIQRCodeDescriptor *symbolDescriptor

  // class methods
  +[CIQRCodeFeature supportsSecureCoding]
  +[CIQRCodeFeature featureWithInternalRepresentation:]

  // instance methods
  -[CIQRCodeFeature dealloc]
  -[CIQRCodeFeature copyWithZone:]
  -[CIQRCodeFeature type]
  -[CIQRCodeFeature encodeWithCoder:]
  -[CIQRCodeFeature initWithCoder:]
  -[CIQRCodeFeature initWithInternalRepresentation:]
  -[CIQRCodeFeature bounds]
  -[CIQRCodeFeature topLeft]
  -[CIQRCodeFeature topRight]
  -[CIQRCodeFeature bottomLeft]
  -[CIQRCodeFeature bottomRight]
  -[CIQRCodeFeature messageString]
  -[CIQRCodeFeature symbolDescriptor]


CITextFeature : CIFeature
 @property  NSString *messageString
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} topLeft
 @property  {CGPoint=dd} topRight
 @property  {CGPoint=dd} bottomLeft
 @property  {CGPoint=dd} bottomRight
 @property  NSArray *subFeatures

  // instance methods
  -[CITextFeature dealloc]
  -[CITextFeature type]
  -[CITextFeature bounds]
  -[CITextFeature topLeft]
  -[CITextFeature topRight]
  -[CITextFeature bottomLeft]
  -[CITextFeature bottomRight]
  -[CITextFeature messageString]
  -[CITextFeature initWithBounds:topLeft:topRight:bottomLeft:bottomRight:subFeatures:messageString:]
  -[CITextFeature subFeatures]


CIFilter : NSObject <NSSecureCoding, NSCopying>
 @property  CIImage *outputImage
 @property  NSString *name
 @property  BOOL enabled
 @property  NSArray *inputKeys
 @property  NSArray *outputKeys
 @property  NSDictionary *attributes

  // class methods
  +[CIFilter supportsSecureCoding]
  +[CIFilter keyPathsForValuesAffectingValueForKey:]
  +[CIFilter customAttributes]
  +[CIFilter filterWithName:]
  +[CIFilter filterWithName:withInputParameters:]
  +[CIFilter _propertyArrayFromFilters:inputImageExtent:]
  +[CIFilter _filterArrayFromProperties:inputImageExtent:]
  +[CIFilter serializedXMPFromFilters:inputImageExtent:]
  +[CIFilter filterArrayFromSerializedXMP:inputImageExtent:error:]
  +[CIFilter filterWithString:]
  +[CIFilter _imageMetadataFromFilters:inputImageExtent:]
  +[CIFilter _filterArrayFromImageMetadata:inputImageExtent:]
  +[CIFilter _filterArrayFromProperties:]
  +[CIFilter filterWithName:setDefaults:]
  +[CIFilter filterNamesInCategories:]
  +[CIFilter filterWithName:keysAndValues:]
  +[CIFilter filterNamesInCategory:]
  +[CIFilter registerFilterName:constructor:classAttributes:]
  +[CIFilter localizedNameForFilterName:]
  +[CIFilter localizedNameForCategory:]
  +[CIFilter localizedDescriptionForFilterName:]
  +[CIFilter localizedReferenceDocumentationForFilterName:]
  +[CIFilter filterWithName:compatibilityVersion:]
  +[CIFilter filterWithName:compatibilityVersion:keysAndValues:]
  +[CIFilter allCategories:]
  +[CIFilter metalFilterWithName:]
  +[CIFilter filterWithImageURL:options:]
  +[CIFilter filterWithImageData:options:]
  +[CIFilter filterWithCVPixelBuffer:properties:options:]
  +[CIFilter supportedRawCameraModels]
  +[CIFilter gaussianGradientFilter]
  +[CIFilter hueSaturationValueGradientFilter]
  +[CIFilter linearGradientFilter]
  +[CIFilter radialGradientFilter]
  +[CIFilter smoothLinearGradientFilter]
  +[CIFilter sharpenLuminanceFilter]
  +[CIFilter unsharpMaskFilter]
  +[CIFilter circularScreenFilter]
  +[CIFilter CMYKHalftone]
  +[CIFilter dotScreenFilter]
  +[CIFilter hatchedScreenFilter]
  +[CIFilter lineScreenFilter]
  +[CIFilter bicubicScaleTransformFilter]
  +[CIFilter edgePreserveUpsampleFilter]
  +[CIFilter keystoneCorrectionCombinedFilter]
  +[CIFilter keystoneCorrectionHorizontalFilter]
  +[CIFilter keystoneCorrectionVerticalFilter]
  +[CIFilter lanczosScaleTransformFilter]
  +[CIFilter perspectiveCorrectionFilter]
  +[CIFilter perspectiveRotateFilter]
  +[CIFilter perspectiveTransformFilter]
  +[CIFilter perspectiveTransformWithExtentFilter]
  +[CIFilter straightenFilter]
  +[CIFilter accordionFoldTransitionFilter]
  +[CIFilter barsSwipeTransitionFilter]
  +[CIFilter copyMachineTransitionFilter]
  +[CIFilter disintegrateWithMaskTransitionFilter]
  +[CIFilter dissolveTransitionFilter]
  +[CIFilter flashTransitionFilter]
  +[CIFilter modTransitionFilter]
  +[CIFilter pageCurlTransitionFilter]
  +[CIFilter pageCurlWithShadowTransitionFilter]
  +[CIFilter rippleTransitionFilter]
  +[CIFilter swipeTransitionFilter]
  +[CIFilter additionCompositingFilter]
  +[CIFilter colorBlendModeFilter]
  +[CIFilter colorBurnBlendModeFilter]
  +[CIFilter colorDodgeBlendModeFilter]
  +[CIFilter darkenBlendModeFilter]
  +[CIFilter differenceBlendModeFilter]
  +[CIFilter divideBlendModeFilter]
  +[CIFilter exclusionBlendModeFilter]
  +[CIFilter hardLightBlendModeFilter]
  +[CIFilter hueBlendModeFilter]
  +[CIFilter lightenBlendModeFilter]
  +[CIFilter linearBurnBlendModeFilter]
  +[CIFilter linearDodgeBlendModeFilter]
  +[CIFilter luminosityBlendModeFilter]
  +[CIFilter maximumCompositingFilter]
  +[CIFilter minimumCompositingFilter]
  +[CIFilter multiplyBlendModeFilter]
  +[CIFilter multiplyCompositingFilter]
  +[CIFilter overlayBlendModeFilter]
  +[CIFilter pinLightBlendModeFilter]
  +[CIFilter saturationBlendModeFilter]
  +[CIFilter screenBlendModeFilter]
  +[CIFilter softLightBlendModeFilter]
  +[CIFilter sourceAtopCompositingFilter]
  +[CIFilter sourceInCompositingFilter]
  +[CIFilter sourceOutCompositingFilter]
  +[CIFilter sourceOverCompositingFilter]
  +[CIFilter subtractBlendModeFilter]
  +[CIFilter colorClampFilter]
  +[CIFilter colorControlsFilter]
  +[CIFilter colorMatrixFilter]
  +[CIFilter colorPolynomialFilter]
  +[CIFilter depthToDisparityFilter]
  +[CIFilter disparityToDepthFilter]
  +[CIFilter exposureAdjustFilter]
  +[CIFilter gammaAdjustFilter]
  +[CIFilter hueAdjustFilter]
  +[CIFilter linearToSRGBToneCurveFilter]
  +[CIFilter sRGBToneCurveToLinearFilter]
  +[CIFilter temperatureAndTintFilter]
  +[CIFilter toneCurveFilter]
  +[CIFilter vibranceFilter]
  +[CIFilter whitePointAdjustFilter]
  +[CIFilter colorCrossPolynomialFilter]
  +[CIFilter colorCubeFilter]
  +[CIFilter colorCubesMixedWithMaskFilter]
  +[CIFilter colorCubeWithColorSpaceFilter]
  +[CIFilter colorCurvesFilter]
  +[CIFilter colorInvertFilter]
  +[CIFilter colorMapFilter]
  +[CIFilter colorMonochromeFilter]
  +[CIFilter colorPosterizeFilter]
  +[CIFilter ditherFilter]
  +[CIFilter documentEnhancerFilter]
  +[CIFilter falseColorFilter]
  +[CIFilter LabDeltaE]
  +[CIFilter maskToAlphaFilter]
  +[CIFilter maximumComponentFilter]
  +[CIFilter minimumComponentFilter]
  +[CIFilter paletteCentroidFilter]
  +[CIFilter palettizeFilter]
  +[CIFilter photoEffectChromeFilter]
  +[CIFilter photoEffectFadeFilter]
  +[CIFilter photoEffectInstantFilter]
  +[CIFilter photoEffectMonoFilter]
  +[CIFilter photoEffectNoirFilter]
  +[CIFilter photoEffectProcessFilter]
  +[CIFilter photoEffectTonalFilter]
  +[CIFilter photoEffectTransferFilter]
  +[CIFilter sepiaToneFilter]
  +[CIFilter thermalFilter]
  +[CIFilter vignetteFilter]
  +[CIFilter vignetteEffectFilter]
  +[CIFilter xRayFilter]
  +[CIFilter affineClampFilter]
  +[CIFilter affineTileFilter]
  +[CIFilter eightfoldReflectedTileFilter]
  +[CIFilter fourfoldReflectedTileFilter]
  +[CIFilter fourfoldRotatedTileFilter]
  +[CIFilter fourfoldTranslatedTileFilter]
  +[CIFilter glideReflectedTileFilter]
  +[CIFilter kaleidoscopeFilter]
  +[CIFilter opTileFilter]
  +[CIFilter parallelogramTileFilter]
  +[CIFilter perspectiveTileFilter]
  +[CIFilter sixfoldReflectedTileFilter]
  +[CIFilter sixfoldRotatedTileFilter]
  +[CIFilter triangleKaleidoscopeFilter]
  +[CIFilter triangleTileFilter]
  +[CIFilter twelvefoldReflectedTileFilter]
  +[CIFilter attributedTextImageGeneratorFilter]
  +[CIFilter aztecCodeGeneratorFilter]
  +[CIFilter barcodeGeneratorFilter]
  +[CIFilter checkerboardGeneratorFilter]
  +[CIFilter code128BarcodeGeneratorFilter]
  +[CIFilter lenticularHaloGeneratorFilter]
  +[CIFilter meshGeneratorFilter]
  +[CIFilter PDF417BarcodeGenerator]
  +[CIFilter QRCodeGenerator]
  +[CIFilter randomGeneratorFilter]
  +[CIFilter roundedRectangleGeneratorFilter]
  +[CIFilter starShineGeneratorFilter]
  +[CIFilter stripesGeneratorFilter]
  +[CIFilter sunbeamsGeneratorFilter]
  +[CIFilter textImageGeneratorFilter]
  +[CIFilter blendWithAlphaMaskFilter]
  +[CIFilter blendWithBlueMaskFilter]
  +[CIFilter blendWithMaskFilter]
  +[CIFilter blendWithRedMaskFilter]
  +[CIFilter bloomFilter]
  +[CIFilter comicEffectFilter]
  +[CIFilter convolution3X3Filter]
  +[CIFilter convolution5X5Filter]
  +[CIFilter convolution7X7Filter]
  +[CIFilter convolution9HorizontalFilter]
  +[CIFilter convolution9VerticalFilter]
  +[CIFilter coreMLModelFilter]
  +[CIFilter crystallizeFilter]
  +[CIFilter depthOfFieldFilter]
  +[CIFilter edgesFilter]
  +[CIFilter edgeWorkFilter]
  +[CIFilter gaborGradientsFilter]
  +[CIFilter gloomFilter]
  +[CIFilter heightFieldFromMaskFilter]
  +[CIFilter hexagonalPixellateFilter]
  +[CIFilter highlightShadowAdjustFilter]
  +[CIFilter lineOverlayFilter]
  +[CIFilter mixFilter]
  +[CIFilter pixellateFilter]
  +[CIFilter pointillizeFilter]
  +[CIFilter saliencyMapFilter]
  +[CIFilter shadedMaterialFilter]
  +[CIFilter spotColorFilter]
  +[CIFilter spotLightFilter]
  +[CIFilter bokehBlurFilter]
  +[CIFilter boxBlurFilter]
  +[CIFilter discBlurFilter]
  +[CIFilter gaussianBlurFilter]
  +[CIFilter maskedVariableBlurFilter]
  +[CIFilter medianFilter]
  +[CIFilter morphologyGradientFilter]
  +[CIFilter morphologyMaximumFilter]
  +[CIFilter morphologyMinimumFilter]
  +[CIFilter morphologyRectangleMaximumFilter]
  +[CIFilter morphologyRectangleMinimumFilter]
  +[CIFilter motionBlurFilter]
  +[CIFilter noiseReductionFilter]
  +[CIFilter zoomBlurFilter]
  +[CIFilter metalFilterWithName:withInputParameters:]
  +[CIFilter getMinMaxSimulatedApertureFrom:minValue:maxValue:version:]

  // instance methods
  -[CIFilter dealloc]
  -[CIFilter name]
  -[CIFilter copyWithZone:]
  -[CIFilter mutableCopyWithZone:]
  -[CIFilter finalize]
  -[CIFilter userInfo]
  -[CIFilter setEnabled:]
  -[CIFilter encodeWithCoder:]
  -[CIFilter initWithCoder:]
  -[CIFilter setName:]
  -[CIFilter attributes]
  -[CIFilter valueForUndefinedKey:]
  -[CIFilter setValue:forUndefinedKey:]
  -[CIFilter setUserInfo:]
  -[CIFilter isEnabled]
  -[CIFilter customAttributes]
  -[CIFilter outputImage]
  -[CIFilter setDefaults]
  -[CIFilter _isIdentity]
  -[CIFilter inputKeys]
  -[CIFilter _crashed_when_dealloc_called_setValue_nil_forKey_probably_because_the_subclass_already_released_it:className:overridesDealloc:]
  -[CIFilter outputKeys]
  -[CIFilter _copyFilterWithZone:]
  -[CIFilter apply:arguments:options:]
  -[CIFilter apply:]
  -[CIFilter _filterClassInCategory:]
  -[CIFilter _serializedXMPString]
  -[CIFilter setIdentity]
  -[CIFilter setOption:forKey:]
  -[CIFilter compatibilityVersion]
  -[CIFilter apply:image:arguments:inoutSpace:]
  -[CIFilter apply:image:arguments:inSpace:]


CIFilterClassAttributes : NSObject
  // class methods
  +[CIFilterClassAttributes classAttributesForClass:]
  +[CIFilterClassAttributes classAttributesForName:]
  +[CIFilterClassAttributes _attributesWithClass:]


CIFilterClassCategories : NSObject
  // class methods
  +[CIFilterClassCategories classCategoriesForClass:]


CIFilterClassDefaults : NSObject
  // class methods
  +[CIFilterClassDefaults classDefaultsForClass:]


CIFilterClassInfo : NSObject
  // class methods
  +[CIFilterClassInfo classInfoForClass:]

  // instance methods
  -[CIFilterClassInfo init]
  -[CIFilterClassInfo dealloc]
  -[CIFilterClassInfo inputKeys]
  -[CIFilterClassInfo inputClasses]
  -[CIFilterClassInfo outputKeys]
  -[CIFilterClassInfo initWithClass:]


CIFilterShape : NSObject <NSCopying>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent

  // class methods
  +[CIFilterShape _shapeInfinite]
  +[CIFilterShape shapeWithRect:]

  // instance methods
  -[CIFilterShape dealloc]
  -[CIFilterShape copyWithZone:]
  -[CIFilterShape finalize]
  -[CIFilterShape extent]
  -[CIFilterShape initWithRect:]
  -[CIFilterShape initWithStruct:]
  -[CIFilterShape transformBy:interior:]
  -[CIFilterShape insetByX:Y:]
  -[CIFilterShape unionWith:]
  -[CIFilterShape unionWithRect:]
  -[CIFilterShape intersectWith:]
  -[CIFilterShape intersectWithRect:]
  -[CIFilterShape CGSRegion]


CIFlashTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  CIVector *inputCenter
 @property  CIVector *inputExtent
 @property  CIColor *inputColor
 @property  NSNumber *inputTime
 @property  NSNumber *inputMaxStriationRadius
 @property  NSNumber *inputStriationStrength
 @property  NSNumber *inputStriationContrast
 @property  NSNumber *inputFadeThreshold

  // class methods
  +[CIFlashTransition customAttributes]

  // instance methods
  -[CIFlashTransition outputImage]
  -[CIFlashTransition inputImage]
  -[CIFlashTransition setInputImage:]
  -[CIFlashTransition inputTargetImage]
  -[CIFlashTransition setInputTargetImage:]
  -[CIFlashTransition inputTime]
  -[CIFlashTransition setInputTime:]
  -[CIFlashTransition inputExtent]
  -[CIFlashTransition setInputExtent:]
  -[CIFlashTransition inputCenter]
  -[CIFlashTransition setInputCenter:]
  -[CIFlashTransition inputColor]
  -[CIFlashTransition setInputColor:]
  -[CIFlashTransition _geomKernel]
  -[CIFlashTransition _colorKernel]
  -[CIFlashTransition inputMaxStriationRadius]
  -[CIFlashTransition setInputMaxStriationRadius:]
  -[CIFlashTransition inputStriationStrength]
  -[CIFlashTransition setInputStriationStrength:]
  -[CIFlashTransition inputStriationContrast]
  -[CIFlashTransition setInputStriationContrast:]
  -[CIFlashTransition inputFadeThreshold]
  -[CIFlashTransition setInputFadeThreshold:]


CIFocalPlaneProcessor : CIImageProcessorKernel
  // class methods
  +[CIFocalPlaneProcessor outputFormat]
  +[CIFocalPlaneProcessor roiForInput:arguments:outputRect:]
  +[CIFocalPlaneProcessor processWithInputs:arguments:output:error:]
  +[CIFocalPlaneProcessor synchronizeInputs]
  +[CIFocalPlaneProcessor formatForInputAtIndex:]
  +[CIFocalPlaneProcessor allowPartialOutputRegion]


CIFocalPlanePreprocessorInternal : CIFilter
  // class methods
  +[CIFocalPlanePreprocessorInternal customAttributes]

  // instance methods
  -[CIFocalPlanePreprocessorInternal outputImage]


CIFocalPlaneNative : CIFilter
  // class methods
  +[CIFocalPlaneNative customAttributes]

  // instance methods
  -[CIFocalPlaneNative outputImage]
  -[CIFocalPlaneNative _focalPlanePreProcessorKernelPow2]
  -[CIFocalPlaneNative _focalPlanePreProcessorKernel]


CIFocalPlane : CIFocalPlanePreprocessorInternal
  // instance methods
  -[CIFocalPlane outputImage]


CIGVNode : GVNode /System/Library/Frameworks/CoreText.framework/CoreText
 @property  CIGVGraph *graph
 @property  ^v node
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent
 @property  int shape
 @property  int color
 @property  ^{__CFString=} title
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} badgeFrame
 @property  ^{__CFString=} label
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} labelFrame
 @property  ^{__CFArray=} images
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imagesFrame
 @property  ^{__CFArray=} rois
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} roisFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentFrame
 @property  {CGSize=dd} contentInsertSize
 @property  {CGSize=dd} contentCornerSize

  // class methods
  +[CIGVNode textAttributesForTitle]
  +[CIGVNode textAttributesForLabel]

  // instance methods
  -[CIGVNode init]
  -[CIGVNode dealloc]
  -[CIGVNode title]
  -[CIGVNode setTitle:]
  -[CIGVNode node]
  -[CIGVNode extent]
  -[CIGVNode color]
  -[CIGVNode setLabel:]
  -[CIGVNode shape]
  -[CIGVNode updateSize]
  -[CIGVNode updateBadgeSize]
  -[CIGVNode updateContentSize]
  -[CIGVNode contentInsertSize]
  -[CIGVNode label]
  -[CIGVNode initWithCINode:extent:]
  -[CIGVNode images]
  -[CIGVNode rois]
  -[CIGVNode setShape:]
  -[CIGVNode setColor:]
  -[CIGVNode addImage:]
  -[CIGVNode addRoi:]
  -[CIGVNode titleFrame]
  -[CIGVNode badgeFrame]
  -[CIGVNode contentCornerSize]
  -[CIGVNode labelFrame]
  -[CIGVNode imagesFrame]
  -[CIGVNode roisFrame]
  -[CIGVNode contentFrame]
  -[CIGVNode graph]
  -[CIGVNode setGraph:]


CGRenderer : NSObject <CIGVRenderer>
 @property  BOOL drawWithSplines
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int direction
 @property  {CGSize=dd} separation
 @property  BOOL drawEdgesFirst

  // instance methods
  -[CGRenderer init]
  -[CGRenderer dealloc]
  -[CGRenderer setFileURL:]
  -[CGRenderer _colorForNodeColor:]
  -[CGRenderer _drawNodeContent:]
  -[CGRenderer _drawNodeBadge:]
  -[CGRenderer _drawCubicSpline:]
  -[CGRenderer _drawPolyline:]
  -[CGRenderer setCanvasWidth:height:]
  -[CGRenderer drawNode:]
  -[CGRenderer drawEdge:withPath:]
  -[CGRenderer direction]
  -[CGRenderer separation]
  -[CGRenderer drawEdgesFirst]
  -[CGRenderer setFileTitle:]
  -[CGRenderer flushRender]
  -[CGRenderer setDirection:]
  -[CGRenderer setSeparation:]
  -[CGRenderer setDrawEdgesFirst:]
  -[CGRenderer drawWithSplines]
  -[CGRenderer setDrawWithSplines:]


PDFRenderer : CGRenderer
  // instance methods
  -[PDFRenderer init]
  -[PDFRenderer dealloc]
  -[PDFRenderer setFileURL:]
  -[PDFRenderer setCanvasWidth:height:]
  -[PDFRenderer setFileTitle:]
  -[PDFRenderer flushRender]
  -[PDFRenderer pdfdata]


PNGRenderer : CGRenderer
  // instance methods
  -[PNGRenderer init]
  -[PNGRenderer dealloc]
  -[PNGRenderer setFileURL:]
  -[PNGRenderer setCanvasWidth:height:]
  -[PNGRenderer flushRender]
  -[PNGRenderer cgimage]


DOTRenderer : NSObject <CIGVRenderer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int direction
 @property  {CGSize=dd} separation
 @property  BOOL drawEdgesFirst

  // instance methods
  -[DOTRenderer init]
  -[DOTRenderer dealloc]
  -[DOTRenderer setFileURL:]
  -[DOTRenderer setCanvasWidth:height:]
  -[DOTRenderer drawNode:]
  -[DOTRenderer drawEdge:withPath:]
  -[DOTRenderer direction]
  -[DOTRenderer separation]
  -[DOTRenderer drawEdgesFirst]
  -[DOTRenderer setFileTitle:]
  -[DOTRenderer flushRender]
  -[DOTRenderer setDirection:]
  -[DOTRenderer setSeparation:]
  -[DOTRenderer setDrawEdgesFirst:]


CIModifyBlurmap : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputPersonAlpha
 @property  CIImage *inputHairAlpha
 @property  CIImage *inputFaceMaskDeltaImage
 @property  NSNumber *inputScale
 @property  NSNumber *inputDistanceAdd
 @property  NSNumber *inputApertureScaling
 @property  NSNumber *inputRelativeApertureScalingStrength
 @property  NSNumber *inputSmoothstepMin
 @property  NSNumber *inputSmoothstepMax
 @property  NSNumber *inputMaxBlur
 @property  NSNumber *inputPersonDistance
 @property  NSNumber *inputPersonThreshold
 @property  CIVector *inputPersonAdditive
 @property  CIVector *inputPersonSubtractive
 @property  NSNumber *inputPersonMaxBlur
 @property  NSNumber *inputHairDistance
 @property  NSNumber *inputHairThreshold
 @property  CIVector *inputHairAdditive
 @property  CIVector *inputHairSubtractive
 @property  NSNumber *inputHairMaxBlur
 @property  NSNumber *inputProtectBodyStrength
 @property  CIVector *inputLeftEyeX
 @property  CIVector *inputLeftEyeY
 @property  CIVector *inputRightEyeX
 @property  CIVector *inputRightEyeY
 @property  CIVector *inputFaceMidPointX
 @property  CIVector *inputFaceMidPointY
 @property  NSNumber *inputEyeProtectionMaxFaces
 @property  NSNumber *inputEyeProtectionFaceWeightsSmoothStepMin
 @property  NSNumber *inputEyeProtectionFaceWeightsSmoothStepMax
 @property  NSNumber *inputEyeProtectionOvalDimsDistanceScale
 @property  NSNumber *inputEyeProtectionOvalDimsDistanceOffset
 @property  NSNumber *inputEyeProtectionOvalDimsRadiusHorizontal
 @property  NSNumber *inputEyeProtectionOvalDimsRadiusVertical
 @property  NSNumber *inputEyeProtectionOvalFallOffSmoothStepMin
 @property  NSNumber *inputEyeProtectionOvalFallOffSmoothStepMax
 @property  NSNumber *inputEyeProtectionPersonMaskSmoothStepMin
 @property  NSNumber *inputEyeProtectionPersonMaskSmoothStepMax
 @property  NSNumber *inputEyeProtectionPreventStrength
 @property  NSNumber *inputEyeProtectionSubtractiveMaxBlur
 @property  NSNumber *inputEyeProtectionSubtractiveApertureScaling

  // class methods
  +[CIModifyBlurmap customAttributes]

  // instance methods
  -[CIModifyBlurmap outputImage]
  -[CIModifyBlurmap inputImage]
  -[CIModifyBlurmap setInputImage:]
  -[CIModifyBlurmap inputScale]
  -[CIModifyBlurmap setInputScale:]
  -[CIModifyBlurmap inputApertureScaling]
  -[CIModifyBlurmap inputMaxBlur]
  -[CIModifyBlurmap setInputApertureScaling:]
  -[CIModifyBlurmap setInputMaxBlur:]
  -[CIModifyBlurmap inputDistanceAdd]
  -[CIModifyBlurmap setInputDistanceAdd:]
  -[CIModifyBlurmap inputPersonAlpha]
  -[CIModifyBlurmap setInputPersonAlpha:]
  -[CIModifyBlurmap inputHairAlpha]
  -[CIModifyBlurmap setInputHairAlpha:]
  -[CIModifyBlurmap inputFaceMaskDeltaImage]
  -[CIModifyBlurmap setInputFaceMaskDeltaImage:]
  -[CIModifyBlurmap inputSmoothstepMin]
  -[CIModifyBlurmap setInputSmoothstepMin:]
  -[CIModifyBlurmap inputSmoothstepMax]
  -[CIModifyBlurmap setInputSmoothstepMax:]
  -[CIModifyBlurmap inputRelativeApertureScalingStrength]
  -[CIModifyBlurmap setInputRelativeApertureScalingStrength:]
  -[CIModifyBlurmap inputPersonDistance]
  -[CIModifyBlurmap setInputPersonDistance:]
  -[CIModifyBlurmap inputPersonThreshold]
  -[CIModifyBlurmap setInputPersonThreshold:]
  -[CIModifyBlurmap inputPersonAdditive]
  -[CIModifyBlurmap setInputPersonAdditive:]
  -[CIModifyBlurmap inputPersonSubtractive]
  -[CIModifyBlurmap setInputPersonSubtractive:]
  -[CIModifyBlurmap inputPersonMaxBlur]
  -[CIModifyBlurmap setInputPersonMaxBlur:]
  -[CIModifyBlurmap inputHairDistance]
  -[CIModifyBlurmap setInputHairDistance:]
  -[CIModifyBlurmap inputHairThreshold]
  -[CIModifyBlurmap setInputHairThreshold:]
  -[CIModifyBlurmap inputHairAdditive]
  -[CIModifyBlurmap setInputHairAdditive:]
  -[CIModifyBlurmap inputHairSubtractive]
  -[CIModifyBlurmap setInputHairSubtractive:]
  -[CIModifyBlurmap inputHairMaxBlur]
  -[CIModifyBlurmap setInputHairMaxBlur:]
  -[CIModifyBlurmap inputProtectBodyStrength]
  -[CIModifyBlurmap setInputProtectBodyStrength:]
  -[CIModifyBlurmap inputLeftEyeX]
  -[CIModifyBlurmap setInputLeftEyeX:]
  -[CIModifyBlurmap inputLeftEyeY]
  -[CIModifyBlurmap setInputLeftEyeY:]
  -[CIModifyBlurmap inputRightEyeX]
  -[CIModifyBlurmap setInputRightEyeX:]
  -[CIModifyBlurmap inputRightEyeY]
  -[CIModifyBlurmap setInputRightEyeY:]
  -[CIModifyBlurmap inputFaceMidPointX]
  -[CIModifyBlurmap setInputFaceMidPointX:]
  -[CIModifyBlurmap inputFaceMidPointY]
  -[CIModifyBlurmap setInputFaceMidPointY:]
  -[CIModifyBlurmap inputEyeProtectionMaxFaces]
  -[CIModifyBlurmap setInputEyeProtectionMaxFaces:]
  -[CIModifyBlurmap inputEyeProtectionFaceWeightsSmoothStepMin]
  -[CIModifyBlurmap setInputEyeProtectionFaceWeightsSmoothStepMin:]
  -[CIModifyBlurmap inputEyeProtectionFaceWeightsSmoothStepMax]
  -[CIModifyBlurmap setInputEyeProtectionFaceWeightsSmoothStepMax:]
  -[CIModifyBlurmap inputEyeProtectionOvalDimsDistanceScale]
  -[CIModifyBlurmap setInputEyeProtectionOvalDimsDistanceScale:]
  -[CIModifyBlurmap inputEyeProtectionOvalDimsDistanceOffset]
  -[CIModifyBlurmap setInputEyeProtectionOvalDimsDistanceOffset:]
  -[CIModifyBlurmap inputEyeProtectionOvalDimsRadiusHorizontal]
  -[CIModifyBlurmap setInputEyeProtectionOvalDimsRadiusHorizontal:]
  -[CIModifyBlurmap inputEyeProtectionOvalDimsRadiusVertical]
  -[CIModifyBlurmap setInputEyeProtectionOvalDimsRadiusVertical:]
  -[CIModifyBlurmap inputEyeProtectionOvalFallOffSmoothStepMin]
  -[CIModifyBlurmap setInputEyeProtectionOvalFallOffSmoothStepMin:]
  -[CIModifyBlurmap inputEyeProtectionOvalFallOffSmoothStepMax]
  -[CIModifyBlurmap setInputEyeProtectionOvalFallOffSmoothStepMax:]
  -[CIModifyBlurmap inputEyeProtectionPersonMaskSmoothStepMin]
  -[CIModifyBlurmap setInputEyeProtectionPersonMaskSmoothStepMin:]
  -[CIModifyBlurmap inputEyeProtectionPersonMaskSmoothStepMax]
  -[CIModifyBlurmap setInputEyeProtectionPersonMaskSmoothStepMax:]
  -[CIModifyBlurmap inputEyeProtectionPreventStrength]
  -[CIModifyBlurmap setInputEyeProtectionPreventStrength:]
  -[CIModifyBlurmap inputEyeProtectionSubtractiveMaxBlur]
  -[CIModifyBlurmap setInputEyeProtectionSubtractiveMaxBlur:]
  -[CIModifyBlurmap inputEyeProtectionSubtractiveApertureScaling]
  -[CIModifyBlurmap setInputEyeProtectionSubtractiveApertureScaling:]


CIGammaAdjust : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputPower

  // class methods
  +[CIGammaAdjust customAttributes]

  // instance methods
  -[CIGammaAdjust outputImage]
  -[CIGammaAdjust inputImage]
  -[CIGammaAdjust setInputImage:]
  -[CIGammaAdjust _isIdentity]
  -[CIGammaAdjust inputPower]
  -[CIGammaAdjust setInputPower:]


CIBlurProcessor : CIImageProcessorKernel
  // class methods
  +[CIBlurProcessor outputFormat]
  +[CIBlurProcessor roiForInput:arguments:outputRect:]
  +[CIBlurProcessor processWithInputs:arguments:output:error:]
  +[CIBlurProcessor synchronizeInputs]
  +[CIBlurProcessor canReduceOutputChannels]
  +[CIBlurProcessor formatForInputAtIndex:]
  +[CIBlurProcessor allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIBlurProcessor allowSRGBTranferFuntionOnOutput]


CIGaussianBlur : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius

  // class methods
  +[CIGaussianBlur customAttributes]

  // instance methods
  -[CIGaussianBlur outputImage]
  -[CIGaussianBlur inputImage]
  -[CIGaussianBlur setInputImage:]
  -[CIGaussianBlur _isIdentity]
  -[CIGaussianBlur inputRadius]
  -[CIGaussianBlur setInputRadius:]


CIGaussianBlurXY : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputSigmaX
 @property  NSNumber *inputSigmaY

  // class methods
  +[CIGaussianBlurXY customAttributes]

  // instance methods
  -[CIGaussianBlurXY outputImage]
  -[CIGaussianBlurXY inputImage]
  -[CIGaussianBlurXY setInputImage:]
  -[CIGaussianBlurXY _isIdentity]
  -[CIGaussianBlurXY inputSigmaX]
  -[CIGaussianBlurXY setInputSigmaX:]
  -[CIGaussianBlurXY inputSigmaY]
  -[CIGaussianBlurXY setInputSigmaY:]


CIGenericMetalProcessorSingleChannel : CIGenericMetalProcessor
  // class methods
  +[CIGenericMetalProcessorSingleChannel outputFormat]
  +[CIGenericMetalProcessorSingleChannel formatForInputAtIndex:]


CIGenericMetalProcessor : CIImageProcessorKernel
  // class methods
  +[CIGenericMetalProcessor applyWithExtent:inputs:arguments:error:]
  +[CIGenericMetalProcessor roiForInput:arguments:outputRect:]
  +[CIGenericMetalProcessor processWithInputs:arguments:output:error:]
  +[CIGenericMetalProcessor synchronizeInputs]
  +[CIGenericMetalProcessor formatForInputAtIndex:]
  +[CIGenericMetalProcessor applyWithExtent:shader:inputs:roiMethods:insetRects:scaleFactors:arguments:error:]
  +[CIGenericMetalProcessor applyWithExtent:shader:inputs:arguments:error:]
  +[CIGenericMetalProcessor outputIsOpaque]
  +[CIGenericMetalProcessor skipFormatChecks]
  +[CIGenericMetalProcessor applyWithExtent:shader:inputs:insetRects:arguments:error:]
  +[CIGenericMetalProcessor applyWithExtent:shader:inputs:scaleFactors:arguments:error:]
  +[CIGenericMetalProcessor applyWithExtent:shader:inputs:className:arguments:error:]


CIGlassDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTexture
 @property  CIVector *inputCenter
 @property  NSNumber *inputScale

  // class methods
  +[CIGlassDistortion customAttributes]

  // instance methods
  -[CIGlassDistortion _kernel]
  -[CIGlassDistortion outputImage]
  -[CIGlassDistortion inputImage]
  -[CIGlassDistortion setInputImage:]
  -[CIGlassDistortion inputScale]
  -[CIGlassDistortion setInputScale:]
  -[CIGlassDistortion inputCenter]
  -[CIGlassDistortion setInputCenter:]
  -[CIGlassDistortion inputTexture]
  -[CIGlassDistortion setInputTexture:]


CIRadialGradient : CIFilter
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius0
 @property  NSNumber *inputRadius1
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1

  // class methods
  +[CIRadialGradient customAttributes]

  // instance methods
  -[CIRadialGradient _kernel]
  -[CIRadialGradient outputImage]
  -[CIRadialGradient inputCenter]
  -[CIRadialGradient setInputCenter:]
  -[CIRadialGradient inputColor0]
  -[CIRadialGradient setInputColor0:]
  -[CIRadialGradient inputColor1]
  -[CIRadialGradient setInputColor1:]
  -[CIRadialGradient inputRadius0]
  -[CIRadialGradient setInputRadius0:]
  -[CIRadialGradient inputRadius1]
  -[CIRadialGradient setInputRadius1:]


CILinearGradient : CIFilter
 @property  CIVector *inputPoint0
 @property  CIVector *inputPoint1
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1

  // class methods
  +[CILinearGradient customAttributes]

  // instance methods
  -[CILinearGradient _kernel]
  -[CILinearGradient outputImage]
  -[CILinearGradient inputColor0]
  -[CILinearGradient setInputColor0:]
  -[CILinearGradient inputColor1]
  -[CILinearGradient setInputColor1:]
  -[CILinearGradient inputPoint0]
  -[CILinearGradient inputPoint1]
  -[CILinearGradient setInputPoint0:]
  -[CILinearGradient setInputPoint1:]


CISmoothLinearGradient : CIFilter
 @property  CIVector *inputPoint0
 @property  CIVector *inputPoint1
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1

  // class methods
  +[CISmoothLinearGradient customAttributes]

  // instance methods
  -[CISmoothLinearGradient _kernel]
  -[CISmoothLinearGradient outputImage]
  -[CISmoothLinearGradient inputColor0]
  -[CISmoothLinearGradient setInputColor0:]
  -[CISmoothLinearGradient inputColor1]
  -[CISmoothLinearGradient setInputColor1:]
  -[CISmoothLinearGradient inputPoint0]
  -[CISmoothLinearGradient inputPoint1]
  -[CISmoothLinearGradient setInputPoint0:]
  -[CISmoothLinearGradient setInputPoint1:]


CIGaussianGradient : CIFilter
 @property  CIVector *inputCenter
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1
 @property  NSNumber *inputRadius

  // class methods
  +[CIGaussianGradient customAttributes]

  // instance methods
  -[CIGaussianGradient _kernel]
  -[CIGaussianGradient outputImage]
  -[CIGaussianGradient inputRadius]
  -[CIGaussianGradient setInputRadius:]
  -[CIGaussianGradient inputCenter]
  -[CIGaussianGradient setInputCenter:]
  -[CIGaussianGradient inputColor0]
  -[CIGaussianGradient setInputColor0:]
  -[CIGaussianGradient inputColor1]
  -[CIGaussianGradient setInputColor1:]


CIHueSaturationValueGradient : CIFilter
 @property  NSNumber *inputValue
 @property  NSNumber *inputRadius
 @property  NSNumber *inputSoftness
 @property  NSNumber *inputDither
 @property  id inputColorSpace

  // class methods
  +[CIHueSaturationValueGradient customAttributes]

  // instance methods
  -[CIHueSaturationValueGradient _kernel]
  -[CIHueSaturationValueGradient outputImage]
  -[CIHueSaturationValueGradient inputRadius]
  -[CIHueSaturationValueGradient setInputRadius:]
  -[CIHueSaturationValueGradient inputColorSpace]
  -[CIHueSaturationValueGradient setInputColorSpace:]
  -[CIHueSaturationValueGradient inputSoftness]
  -[CIHueSaturationValueGradient setInputSoftness:]
  -[CIHueSaturationValueGradient inputDither]
  -[CIHueSaturationValueGradient setInputDither:]
  -[CIHueSaturationValueGradient _kernelD]
  -[CIHueSaturationValueGradient inputValue]
  -[CIHueSaturationValueGradient setInputValue:]


CIGuidedFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputGuideImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputEpsilon

  // class methods
  +[CIGuidedFilter customAttributes]

  // instance methods
  -[CIGuidedFilter outputImage]
  -[CIGuidedFilter inputImage]
  -[CIGuidedFilter setInputImage:]
  -[CIGuidedFilter inputRadius]
  -[CIGuidedFilter setInputRadius:]
  -[CIGuidedFilter _fullFloatBoxFilter]
  -[CIGuidedFilter _multiplyImagesKernel]
  -[CIGuidedFilter _boxFilter:fullFloat:]
  -[CIGuidedFilter _swizzleImageXXX1:]
  -[CIGuidedFilter _swizzleImageYYZ1:]
  -[CIGuidedFilter _swizzleImageYZZ1:]
  -[CIGuidedFilter multiplyImages:imageB:]
  -[CIGuidedFilter subtract:minus:]
  -[CIGuidedFilter _computeABKernel]
  -[CIGuidedFilter _downsampledColorImage:]
  -[CIGuidedFilter _combineRGB_and_A]
  -[CIGuidedFilter computeAB:]
  -[CIGuidedFilter _upsampleImage:targetImageSize:]
  -[CIGuidedFilter _finalResult]
  -[CIGuidedFilter inputGuideImage]
  -[CIGuidedFilter setInputGuideImage:]
  -[CIGuidedFilter inputEpsilon]
  -[CIGuidedFilter setInputEpsilon:]


_CIScreenFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputAngle
 @property  NSNumber *inputWidth
 @property  NSNumber *inputSharpness

  // class methods
  +[_CIScreenFilter customAttributes]
  +[_CIScreenFilter _kernel]
  +[_CIScreenFilter _kernel_code]

  // instance methods
  -[_CIScreenFilter outputImage]
  -[_CIScreenFilter inputImage]
  -[_CIScreenFilter setInputImage:]
  -[_CIScreenFilter inputAngle]
  -[_CIScreenFilter setInputAngle:]
  -[_CIScreenFilter inputWidth]
  -[_CIScreenFilter setInputWidth:]
  -[_CIScreenFilter inputCenter]
  -[_CIScreenFilter setInputCenter:]
  -[_CIScreenFilter inputSharpness]
  -[_CIScreenFilter setInputSharpness:]


CIDotScreen : _CIScreenFilter
  // class methods
  +[CIDotScreen _kernel_code]


CIHatchedScreen : _CIScreenFilter
  // class methods
  +[CIHatchedScreen _kernel_code]


CILineScreen : _CIScreenFilter
  // class methods
  +[CILineScreen _kernel_code]


CICircularScreen : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputWidth
 @property  NSNumber *inputSharpness

  // class methods
  +[CICircularScreen customAttributes]

  // instance methods
  -[CICircularScreen _kernel]
  -[CICircularScreen outputImage]
  -[CICircularScreen inputImage]
  -[CICircularScreen setInputImage:]
  -[CICircularScreen inputWidth]
  -[CICircularScreen setInputWidth:]
  -[CICircularScreen inputCenter]
  -[CICircularScreen setInputCenter:]
  -[CICircularScreen inputSharpness]
  -[CICircularScreen setInputSharpness:]


CIHeightFieldFromMask : CIFilter
  // class methods
  +[CIHeightFieldFromMask customAttributes]

  // instance methods
  -[CIHeightFieldFromMask outputImage]
  -[CIHeightFieldFromMask _CIResetalpha]


CIHighlightShadowAdjust : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputShadowAmount
 @property  NSNumber *inputHighlightAmount

  // class methods
  +[CIHighlightShadowAdjust customAttributes]

  // instance methods
  -[CIHighlightShadowAdjust outputImage]
  -[CIHighlightShadowAdjust inputImage]
  -[CIHighlightShadowAdjust setInputImage:]
  -[CIHighlightShadowAdjust _outputProperties]
  -[CIHighlightShadowAdjust _initFromProperties:]
  -[CIHighlightShadowAdjust _defaultVersion]
  -[CIHighlightShadowAdjust setDefaults]
  -[CIHighlightShadowAdjust _maxVersion]
  -[CIHighlightShadowAdjust _isIdentity]
  -[CIHighlightShadowAdjust inputRadius]
  -[CIHighlightShadowAdjust setInputRadius:]
  -[CIHighlightShadowAdjust _kernelSnoB_v0]
  -[CIHighlightShadowAdjust _kernelSHnoB_v0]
  -[CIHighlightShadowAdjust _kernelSH_v0]
  -[CIHighlightShadowAdjust _kernelSHnoB_v1]
  -[CIHighlightShadowAdjust _kernelSH_v1]
  -[CIHighlightShadowAdjust _kernelSHnoB_v2]
  -[CIHighlightShadowAdjust _kernelSH_v2]
  -[CIHighlightShadowAdjust setInputShadowAmount:]
  -[CIHighlightShadowAdjust setInputHighlightAmount:]
  -[CIHighlightShadowAdjust inputShadowAmount]
  -[CIHighlightShadowAdjust inputHighlightAmount]


CIHistogramDisplayFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputHeight
 @property  NSNumber *inputHighLimit
 @property  NSNumber *inputLowLimit

  // class methods
  +[CIHistogramDisplayFilter customAttributes]

  // instance methods
  -[CIHistogramDisplayFilter _kernel]
  -[CIHistogramDisplayFilter outputImage]
  -[CIHistogramDisplayFilter inputImage]
  -[CIHistogramDisplayFilter setInputImage:]
  -[CIHistogramDisplayFilter inputHeight]
  -[CIHistogramDisplayFilter setInputHeight:]
  -[CIHistogramDisplayFilter inputHighLimit]
  -[CIHistogramDisplayFilter setInputHighLimit:]
  -[CIHistogramDisplayFilter inputLowLimit]
  -[CIHistogramDisplayFilter setInputLowLimit:]


CIHoleDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius

  // class methods
  +[CIHoleDistortion customAttributes]

  // instance methods
  -[CIHoleDistortion outputImage]
  -[CIHoleDistortion inputImage]
  -[CIHoleDistortion setInputImage:]
  -[CIHoleDistortion _isIdentity]
  -[CIHoleDistortion inputRadius]
  -[CIHoleDistortion setInputRadius:]
  -[CIHoleDistortion inputCenter]
  -[CIHoleDistortion setInputCenter:]
  -[CIHoleDistortion _geomKernel]
  -[CIHoleDistortion _colorKernel]
  -[CIHoleDistortion computeDOD]


CIImage : NSObject <NSSecureCoding, NSCopying>
 @property  AVDepthData *depthData
 @property  AVPortraitEffectsMatte *portraitEffectsMatte
 @property  AVSemanticSegmentationMatte *semanticSegmentationMatte
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent
 @property  NSDictionary *properties
 @property  CIFilterShape *definition
 @property  NSURL *url
 @property  ^{CGColorSpace=} colorSpace
 @property  ^{__CVBuffer=} pixelBuffer
 @property  ^{CGImage=} CGImage

  // class methods
  +[CIImage supportsSecureCoding]
  +[CIImage imageWithBitmapData:bytesPerRow:size:format:colorSpace:]
  +[CIImage emptyImage]
  +[CIImage imageForRenderingWithMPS:orNonMPS:]
  +[CIImage imageWithInternalRepresentation:]
  +[CIImage imageWithColor:]
  +[CIImage imageWithData:]
  +[CIImage imageWithData:options:]
  +[CIImage imageWithContentsOfURL:]
  +[CIImage imageWithContentsOfURL:options:]
  +[CIImage noiseImageNearest]
  +[CIImage imageWithArrayOfImages:selector:]
  +[CIImage imageWithBitmapData:bytesPerRow:size:format:options:]
  +[CIImage imageWithCGImage:]
  +[CIImage imageWithMTLTexture:options:]
  +[CIImage imageWithCVPixelBuffer:options:]
  +[CIImage imageWithCVPixelBuffer:]
  +[CIImage imageYCC444:matrix:fullRange:colorSpace:]
  +[CIImage noiseImage]
  +[CIImage imageWithIOSurface:options:]
  +[CIImage imageWithCGImage:options:]
  +[CIImage imageWithCGLayer:options:]
  +[CIImage imageWithCVImageBuffer:options:]
  +[CIImage imageWithContentsOfFile:options:]
  +[CIImage blackImage]
  +[CIImage whiteImage]
  +[CIImage grayImage]
  +[CIImage redImage]
  +[CIImage greenImage]
  +[CIImage blueImage]
  +[CIImage cyanImage]
  +[CIImage magentaImage]
  +[CIImage yellowImage]
  +[CIImage clearImage]
  +[CIImage nullImage]
  +[CIImage imageWithIOSurface:]
  +[CIImage imageWithCGImageSource:index:options:]
  +[CIImage imageWithCGLayer:]
  +[CIImage imageWithTexture:size:flipped:colorSpace:]
  +[CIImage imageWithTexture:size:options:]
  +[CIImage imageWithTexture:size:flipped:options:]
  +[CIImage imageWithCVImageBuffer:]
  +[CIImage noiseImagePadded]
  +[CIImage imageWithContentsOfFile:]
  +[CIImage imageForRenderingWithMetal:orNonMetal:]
  +[CIImage imageForRenderingWithMetalContext:orOpenGLContextUsingMetal:orNonMetalContext:]
  +[CIImage imageWithDepthData:options:]
  +[CIImage imageWithDepthData:]
  +[CIImage imageWithPortaitEffectsMatte:options:]
  +[CIImage imageWithPortaitEffectsMatte:]
  +[CIImage imageWithPortraitEffectsMatte:options:]
  +[CIImage imageWithPortraitEffectsMatte:]
  +[CIImage imageWithSemanticSegmentationMatte:options:]
  +[CIImage imageWithSemanticSegmentationMatte:]
  +[CIImage imageWithAttributedString:format:]
  +[CIImage imageWithAttributedString:format:options:]
  +[CIImage clearImage:]
  +[CIImage imageWithImageProvider:userInfo:size:format:flipped:colorSpace:]
  +[CIImage imageWithImageProvider:size::format:colorSpace:options:]
  +[CIImage imageWithYCCImage:matrix:fullRange:colorSpace:]
  +[CIImage imageWithYImage:CrCbImage:CrCbScale:matrix:fullRange:colorSpace:]
  +[CIImage smartToneAdjustmentsForValue:andStatistics:]
  +[CIImage smartToneAdjustmentsForValue:localLightAutoValue:andStatistics:]
  +[CIImage smartColorAdjustmentsForValue:andStatistics:]

  // instance methods
  -[CIImage init]
  -[CIImage dealloc]
  -[CIImage copyWithZone:]
  -[CIImage finalize]
  -[CIImage userInfo]
  -[CIImage encodeWithCoder:]
  -[CIImage initWithCoder:]
  -[CIImage initWithData:]
  -[CIImage initWithContentsOfFile:]
  -[CIImage initWithContentsOfURL:]
  -[CIImage setValue:forKeyPath:]
  -[CIImage url]
  -[CIImage setUserInfo:]
  -[CIImage TIFFRepresentation]
  -[CIImage extent]
  -[CIImage imageByApplyingTransform:]
  -[CIImage imageByClampingToRect:]
  -[CIImage imageByClampingToExtent]
  -[CIImage filteredImage:keysAndValues:]
  -[CIImage imageBySamplingNearest]
  -[CIImage imageByCroppingToRect:]
  -[CIImage imageByApplyingFilter:withInputParameters:]
  -[CIImage imageWithExtent:processorDescription:argumentDigest:inputFormat:outputFormat:options:roiCallback:processor:]
  -[CIImage imageByCompositingOverImage:]
  -[CIImage imageByUnpremultiplyingAlpha]
  -[CIImage imageByPremultiplyingAlpha]
  -[CIImage _internalRepresentation]
  -[CIImage imageByApplyingGaussianBlurWithSigma:]
  -[CIImage pixelBuffer]
  -[CIImage depthData]
  -[CIImage colorSpace]
  -[CIImage _imageByApplyingGamma:]
  -[CIImage initWithImageProvider:width:height:format:colorSpace:options:]
  -[CIImage isOpaque]
  -[CIImage imageByColorMatchingWorkingSpaceToColorSpace:]
  -[CIImage imageByColorMatchingColorSpaceToWorkingSpace:]
  -[CIImage imageByApplyingFilter:]
  -[CIImage _initWithInternalRepresentation:]
  -[CIImage initWithIOSurface:]
  -[CIImage regionOfInterestForImage:inRect:]
  -[CIImage _pdfDataRepresentation]
  -[CIImage properties]
  -[CIImage imageByApplyingTransform:highQualityDownsample:]
  -[CIImage imageBySamplingLinear]
  -[CIImage imageBySettingAlphaOneInExtent:]
  -[CIImage _imageByRenderingToIntermediate]
  -[CIImage imageTransformForOrientation:]
  -[CIImage imageBySettingProperties:]
  -[CIImage initWithColor:]
  -[CIImage initWithIOSurface:options:]
  -[CIImage _initWithIOSurface:options:owner:]
  -[CIImage CGImage]
  -[CIImage initWithCGImage:options:]
  -[CIImage initWithCGImageSource:index:options:]
  -[CIImage _initNaiveWithCGImage:options:]
  -[CIImage _setOriginalCGImage:options:]
  -[CIImage initWithCVPixelBuffer:options:]
  -[CIImage _pixelBufferFromAuxProps:]
  -[CIImage initAuxiliaryWithImageSource:options:depth:]
  -[CIImage initMatteWithImageSource:options:]
  -[CIImage initWithCGLayer:options:]
  -[CIImage initWithBitmapData:bytesPerRow:size:format:options:]
  -[CIImage initWithBitmapData:bytesPerRow:size:format:colorSpace:]
  -[CIImage _initWithBitmapData:bytesPerRow:size:format:options:]
  -[CIImage initWithTexture:size:flipped:colorSpace:]
  -[CIImage initWithTexture:size:options:]
  -[CIImage initWithTexture:size:flipped:options:]
  -[CIImage initWithMTLTexture:options:]
  -[CIImage _initWithCVImageBuffer:options:]
  -[CIImage _setOriginalCVPixelBuffer:options:]
  -[CIImage initWithCVImageBuffer:options:]
  -[CIImage initWithEmptyClearColor]
  -[CIImage imageTransformForCGOrientation:]
  -[CIImage initWithData:options:]
  -[CIImage initWithContentsOfURL:options:]
  -[CIImage initWithContentsOfFile:options:]
  -[CIImage initForRenderingWithMetal:orNonMetal:]
  -[CIImage initWithArrayOfImages:selector:]
  -[CIImage initForRenderingWithMPS:orNonMPS:]
  -[CIImage initForRenderingWithMetalContext:orOpenGLContextUsingMetal:orNonMetalContext:]
  -[CIImage initWithCGImage:]
  -[CIImage _originalCGImage]
  -[CIImage initWithCGLayer:]
  -[CIImage _originalCVPixelBuffer]
  -[CIImage portraitEffectsMatte]
  -[CIImage semanticSegmentationMatte]
  -[CIImage initWithCVPixelBuffer:]
  -[CIImage initWithCVImageBuffer:]
  -[CIImage initWithColorR:G:B:A:]
  -[CIImage imageByApplyingOrientation:]
  -[CIImage imageByApplyingCGOrientation:]
  -[CIImage _imageByPremultiplying]
  -[CIImage _imageByUnpremultiplying]
  -[CIImage _imageByClampingAlpha]
  -[CIImage _imageByApplyingBlur:]
  -[CIImage _imageByMatchingWorkingSpaceToColorSpace:]
  -[CIImage imageByColorMatchingWorkingSpaceToRGBorGrayColorSpace:]
  -[CIImage _imageByMatchingColorSpaceToWorkingSpace:]
  -[CIImage imageByTaggingWithColorSpace:]
  -[CIImage imageByInsertingIntermediate]
  -[CIImage imageByInsertingIntermediate:]
  -[CIImage imageBySettingPropertiesNoCopy:]
  -[CIImage _imageBySamplingNearest]
  -[CIImage _imageBySamplingLinear]
  -[CIImage definition]
  -[CIImage setCacheHint:]
  -[CIImage cacheHint]
  -[CIImage writeToTIFF:]
  -[CIImage printTree]
  -[CIImage initWithDepthData:options:]
  -[CIImage initWithDepthData:]
  -[CIImage initWithPortaitEffectsMatte:options:]
  -[CIImage initWithPortraitEffectsMatte:options:]
  -[CIImage initWithPortaitEffectsMatte:]
  -[CIImage initWithPortraitEffectsMatte:]
  -[CIImage initWithSemanticSegmentationMatte:options:]
  -[CIImage initWithSemanticSegmentationMatte:]
  -[CIImage initWithAttributedString:format:options:]
  -[CIImage initWithAttributedString:format:]
  -[CIImage _autoRedEyeFilterWithFeatures:imageProperties:context:options:]
  -[CIImage _scaleImageToMaxDimension:]
  -[CIImage getAutoRotateFilter:ciImage:inputRect:rotateCropRect:minTiltAngle:maxTiltAngle:detectVerticalLines:thrVertAngle:thrDomAngleDiff:]
  -[CIImage getAutocropRect:rotateXfrm:inputImageRect:clipRect:]
  -[CIImage autoAdjustmentFiltersWithOptions:]
  -[CIImage autoAdjustmentFiltersWithImageProperties:options:]
  -[CIImage pointWithDictionary:name:index:transformedBy:]
  -[CIImage _dictForFeature:invOrientationTransform:extent:]
  -[CIImage autoAdjustmentFilters]
  -[CIImage imageWithMesh:transform:]
  -[CIImage inverseImageTransformForOrientation:]
  -[CIImage autoRedEyeFilterWithFeatures:imageProperties:options:]
  -[CIImage autoRedEyeFilterWithFeatures:options:]
  -[CIImage autoRotateFilterFFT:image:inputRect:minTiltAngle:maxTiltAngle:detectVerticalLines:thrVertAngle:thrDomAngleDiff:]
  -[CIImage calcIntersection:slope1:pt2:slope2:]
  -[CIImage initWithImageProvider:userInfo:size:format:flipped:colorSpace:]
  -[CIImage initWithImageProvider:size::format:colorSpace:options:]
  -[CIImage _initWithImageProvider:width:height:format:colorSpace:surfaceCache:options:]
  -[CIImage localLightStatisticsWithProxy:]
  -[CIImage localLightStatistics]
  -[CIImage localLightStatisticsNoProxy]
  -[CIImage autoPerspectiveFilterWithOptions:]
  -[CIImage autoPerspectiveResultWithOptions:]
  -[CIImage smartBlackAndWhiteStatistics]
  -[CIImage smartBlackAndWhiteAdjustmentsForValue:andStatistics:]
  -[CIImage smartToneAdjustmentsForValue:andStatistics:]
  -[CIImage smartToneAdjustmentsForValue:localLightAutoValue:andStatistics:]
  -[CIImage smartColorAdjustmentsForValue:andStatistics:]
  -[CIImage smartToneStatistics]
  -[CIImage smartColorStatistics]
  -[CIImage metalImageByApplyingFilter:withInputParameters:]
  -[CIImage metalImageByApplyingFilter:]


CIImageAccumulator : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent
 @property  int format

  // class methods
  +[CIImageAccumulator imageAccumulatorWithExtent:format:options:]
  +[CIImageAccumulator imageAccumulatorWithExtent:format:]
  +[CIImageAccumulator imageAccumulatorWithExtent:format:colorSpace:]

  // instance methods
  -[CIImageAccumulator init]
  -[CIImageAccumulator dealloc]
  -[CIImageAccumulator clear]
  -[CIImageAccumulator extent]
  -[CIImageAccumulator format]
  -[CIImageAccumulator image]
  -[CIImageAccumulator setImage:]
  -[CIImageAccumulator colorSpace]
  -[CIImageAccumulator initWithExtent:format:options:]
  -[CIImageAccumulator initWithExtent:format:]
  -[CIImageAccumulator initWithExtent:format:colorSpace:]
  -[CIImageAccumulator setImage:dirtyRect:]
  -[CIImageAccumulator commitUpdates:]


CIImageProcessorInOut : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} region
 @property  ^{__IOSurface=} surface
 @property  BOOL usesSRGBTransferFunction
 @property  ^{__CVBuffer=} pixelBuffer
 @property  unsigned long bytesPerRow
 @property  int format
 @property  ^v device

  // instance methods
  -[CIImageProcessorInOut dealloc]
  -[CIImageProcessorInOut device]
  -[CIImageProcessorInOut region]
  -[CIImageProcessorInOut bytesPerRow]
  -[CIImageProcessorInOut format]
  -[CIImageProcessorInOut pixelBuffer]
  -[CIImageProcessorInOut surface]
  -[CIImageProcessorInOut initWithSurface:texture:allowSRGB:bounds:context:]
  -[CIImageProcessorInOut usesSRGBTransferFunction]


CIImageProcessorOutput : CIImageProcessorInOut <CIImageProcessorOutput>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} region
 @property  unsigned long bytesPerRow
 @property  int format
 @property  ^v baseAddress
 @property  ^{__IOSurface=} surface
 @property  ^{__CVBuffer=} pixelBuffer
 @property  <MTLTexture> *metalTexture
 @property  <MTLCommandBuffer> *metalCommandBuffer

  // instance methods
  -[CIImageProcessorOutput dealloc]
  -[CIImageProcessorOutput contextID]
  -[CIImageProcessorOutput baseAddress]
  -[CIImageProcessorOutput workingColorSpace]
  -[CIImageProcessorOutput metalCommandBuffer]
  -[CIImageProcessorOutput metalTexture]
  -[CIImageProcessorOutput initWithSurface:texture:allowSRGB:bounds:context:]
  -[CIImageProcessorOutput metalCommandBufferRequested]
  -[CIImageProcessorOutput metalContext]


CIImageProcessorInput : CIImageProcessorInOut <CIImageProcessorInput>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} region
 @property  unsigned long bytesPerRow
 @property  int format
 @property  r^v baseAddress
 @property  ^{__IOSurface=} surface
 @property  ^{__CVBuffer=} pixelBuffer
 @property  <MTLTexture> *metalTexture

  // instance methods
  -[CIImageProcessorInput dealloc]
  -[CIImageProcessorInput baseAddress]
  -[CIImageProcessorInput metalTexture]
  -[CIImageProcessorInput initWithSurface:texture:allowSRGB:bounds:context:]


CIImageProcessorKernel : NSObject
  // class methods
  +[CIImageProcessorKernel outputFormat]
  +[CIImageProcessorKernel applyWithExtent:inputs:arguments:error:]
  +[CIImageProcessorKernel roiForInput:arguments:outputRect:]
  +[CIImageProcessorKernel processWithInputs:arguments:output:error:]
  +[CIImageProcessorKernel synchronizeInputs]
  +[CIImageProcessorKernel canReduceOutputChannels]
  +[CIImageProcessorKernel formatForInputAtIndex:]
  +[CIImageProcessorKernel allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIImageProcessorKernel allowSRGBTranferFuntionOnOutput]
  +[CIImageProcessorKernel outputIsOpaque]
  +[CIImageProcessorKernel allowPartialOutputRegion]
  +[CIImageProcessorKernel skipFormatChecks]
  +[CIImageProcessorKernel _digestForArgs:]


CIImageRowReader : NSObject <ImageRowReading>
  // class methods
  +[CIImageRowReader forImage:usingContext:]
  +[CIImageRowReader fromImage:]
  +[CIImageRowReader forImage:downscaleToMax:colorspace:]
  +[CIImageRowReader forImage:downscaleToMax:colorspace:usingContext:]
  +[CIImageRowReader forImage:usingContext:colorspace:]
  +[CIImageRowReader fromImageFile:]
  +[CIImageRowReader forImage:downscaleToMax:]
  +[CIImageRowReader withDictionary:]

  // instance methods
  -[CIImageRowReader init]
  -[CIImageRowReader dealloc]
  -[CIImageRowReader width]
  -[CIImageRowReader height]
  -[CIImageRowReader red]
  -[CIImageRowReader green]
  -[CIImageRowReader blue]
  -[CIImageRowReader alpha]
  -[CIImageRowReader _dumpImage:colorspace:]
  -[CIImageRowReader rowAtIndex:]
  -[CIImageRowReader bytesPerPixel]
  -[CIImageRowReader dumpImage:]
  -[CIImageRowReader dumpImageAsDeviceRGB:]
  -[CIImageRowReader dumpImageAsDict:]


CIFileSaverProcessor : CIImageProcessorKernel
  // class methods
  +[CIFileSaverProcessor roiForInput:arguments:outputRect:]
  +[CIFileSaverProcessor processWithInputs:arguments:output:error:]
  +[CIFileSaverProcessor synchronizeInputs]
  +[CIFileSaverProcessor canReduceOutputChannels]
  +[CIFileSaverProcessor allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIFileSaverProcessor allowSRGBTranferFuntionOnOutput]
  +[CIFileSaverProcessor allowPartialOutputRegion]


CIImageWriter : CIFilter
 @property  CIImage *inputImage
 @property  NSString *inputFilename
 @property  NSNumber *inputShouldDumpInputValues
 @property  CIFilter *inputOriginalFilter

  // class methods
  +[CIImageWriter customAttributes]

  // instance methods
  -[CIImageWriter outputImage]
  -[CIImageWriter inputImage]
  -[CIImageWriter setInputImage:]
  -[CIImageWriter inputShouldDumpInputValues]
  -[CIImageWriter inputFilename]
  -[CIImageWriter setInputFilename:]
  -[CIImageWriter setInputShouldDumpInputValues:]
  -[CIImageWriter inputOriginalFilter]
  -[CIImageWriter setInputOriginalFilter:]


CIIntegralImageProcessorGPU : CIImageProcessorKernel
  // class methods
  +[CIIntegralImageProcessorGPU outputFormat]
  +[CIIntegralImageProcessorGPU processWithInputs:arguments:output:error:]
  +[CIIntegralImageProcessorGPU canReduceOutputChannels]


CIIntegralImageProcessorCPU : CIImageProcessorKernel
  // class methods
  +[CIIntegralImageProcessorCPU outputFormat]
  +[CIIntegralImageProcessorCPU processWithInputs:arguments:output:error:]
  +[CIIntegralImageProcessorCPU canReduceOutputChannels]


CIIntegralImage : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIIntegralImage customAttributes]

  // instance methods
  -[CIIntegralImage outputImage]
  -[CIIntegralImage inputImage]
  -[CIIntegralImage setInputImage:]


CIKaleidoscope : CIFilter
  // class methods
  +[CIKaleidoscope customAttributes]

  // instance methods
  -[CIKaleidoscope _kernel]
  -[CIKaleidoscope outputImage]
  -[CIKaleidoscope _outputExtent]


CIKernel : NSObject
 @property  BOOL perservesAlpha
 @property  BOOL canReduceOutputChannels
 @property  BOOL preservesRange
 @property  {CGSize=dd} outputGroupSize
 @property  NSString *name

  // class methods
  +[CIKernel kernelWithString:]
  +[CIKernel redEyeMetalKernelWithFunctionName:outputPixelFormat:error:]
  +[CIKernel redEyeMetalKernelWithFunctionName:error:]
  +[CIKernel SDOFV2MetalKernelNamed:]
  +[CIKernel allocForType:]
  +[CIKernel kernelsWithString:andMetalLibrary:messageLog:]
  +[CIKernel kernelWithFunctionName:fromMetalLibraryData:options:error:]
  +[CIKernel kernelsWithString:fromMetalLibraryData:]
  +[CIKernel kernelsWithString:messageLog:]
  +[CIKernel kernelsWithString:]
  +[CIKernel kernelWithString:fromMetalLibraryData:]
  +[CIKernel kernelWithFunctionName:fromMetalLibraryData:error:]
  +[CIKernel kernelWithFunctionName:fromMetalLibraryData:outputPixelFormat:error:]
  +[CIKernel kernelWithFunctionName:fromMetalLibraryData:outputGroupSize:error:]
  +[CIKernel kernelWithFunctionName:fromMetalLibraryData:constants:error:]
  +[CIKernel colorMatrixBiasKernel]
  +[CIKernel redEyeMetalKernelWithFunctionName:fromMetalLibraryURL:outputPixelFormat:error:]
  +[CIKernel redEyeMetalKernelWithFunctionName:fromMetalLibraryURL:error:]
  +[CIKernel SDOFV3MetalKernelNamed:]

  // instance methods
  -[CIKernel init]
  -[CIKernel dealloc]
  -[CIKernel name]
  -[CIKernel finalize]
  -[CIKernel initWithString:]
  -[CIKernel parameters]
  -[CIKernel applyWithExtent:roiCallback:arguments:]
  -[CIKernel setCanReduceOutputChannels:]
  -[CIKernel _internalRepresentation]
  -[CIKernel setPreservesRange:]
  -[CIKernel applyWithExtent:roiCallback:arguments:options:]
  -[CIKernel setPerservesAlpha:]
  -[CIKernel _initWithInternalRepresentation:]
  -[CIKernel canReduceOutputChannels]
  -[CIKernel ROISelector]
  -[CIKernel _initWithReflection:]
  -[CIKernel _initWithString:andMetalLibrary:usingCruftCompatibility:]
  -[CIKernel _initWithReflection:constants:]
  -[CIKernel _initWithString:usingCruftCompatibility:]
  -[CIKernel _isValidOutputPixelFormat:]
  -[CIKernel _outputFormatUsingDictionary:andKernel:]
  -[CIKernel perservesAlpha]
  -[CIKernel preservesRange]
  -[CIKernel outputGroupSize]
  -[CIKernel setOutputGroupSize:]
  -[CIKernel setROISelector:]


CIColorKernel : CIKernel
 @property  BOOL perservesAlpha

  // class methods
  +[CIColorKernel kernelWithString:]
  +[CIColorKernel SDOFV2MetalKernelNamed:]
  +[CIColorKernel SDOFV3MetalKernelNamed:]

  // instance methods
  -[CIColorKernel initWithString:]
  -[CIColorKernel applyWithExtent:arguments:]
  -[CIColorKernel applyWithExtent:roiCallback:arguments:]
  -[CIColorKernel setCanReduceOutputChannels:]
  -[CIColorKernel setPreservesRange:]
  -[CIColorKernel applyWithExtent:roiCallback:arguments:options:]
  -[CIColorKernel setPerservesAlpha:]
  -[CIColorKernel applyWithExtent:arguments:options:]
  -[CIColorKernel canReduceOutputChannels]
  -[CIColorKernel _initWithReflection:constants:]
  -[CIColorKernel perservesAlpha]
  -[CIColorKernel preservesRange]


CIWarpKernel : CIKernel
 @property  BOOL perservesAlpha
 @property  BOOL preservesRange

  // class methods
  +[CIWarpKernel kernelWithString:]

  // instance methods
  -[CIWarpKernel initWithString:]
  -[CIWarpKernel applyWithExtent:roiCallback:inputImage:arguments:]
  -[CIWarpKernel applyWithExtent:roiCallback:arguments:]
  -[CIWarpKernel setCanReduceOutputChannels:]
  -[CIWarpKernel setPreservesRange:]
  -[CIWarpKernel applyWithExtent:roiCallback:arguments:options:]
  -[CIWarpKernel setPerservesAlpha:]
  -[CIWarpKernel canReduceOutputChannels]
  -[CIWarpKernel _initWithReflection:constants:]
  -[CIWarpKernel perservesAlpha]
  -[CIWarpKernel preservesRange]
  -[CIWarpKernel autogenerateROI:args:arguments:extent:]
  -[CIWarpKernel applyWithExtent:roiCallback:inputImage:arguments:options:]
  -[CIWarpKernel generateGeneralKernelFromWarpKernel:args:]
  -[CIWarpKernel generateMainFromWarpKernel:args:]
  -[CIWarpKernel makeGridImage:nx:ny:]


CIBlendKernel : CIColorKernel
  // class methods
  +[CIBlendKernel clear]
  +[CIBlendKernel source]
  +[CIBlendKernel kernelWithString:]
  +[CIBlendKernel kernelWithString:extentType:]
  +[CIBlendKernel componentAdd]
  +[CIBlendKernel componentMultiply]
  +[CIBlendKernel componentMin]
  +[CIBlendKernel componentMax]
  +[CIBlendKernel destination]
  +[CIBlendKernel sourceOver]
  +[CIBlendKernel destinationOver]
  +[CIBlendKernel sourceIn]
  +[CIBlendKernel destinationIn]
  +[CIBlendKernel sourceOut]
  +[CIBlendKernel destinationOut]
  +[CIBlendKernel sourceAtop]
  +[CIBlendKernel destinationAtop]
  +[CIBlendKernel exclusiveOr]
  +[CIBlendKernel multiply]
  +[CIBlendKernel screen]
  +[CIBlendKernel overlay]
  +[CIBlendKernel darken]
  +[CIBlendKernel lighten]
  +[CIBlendKernel colorDodge]
  +[CIBlendKernel colorBurn]
  +[CIBlendKernel hardLight]
  +[CIBlendKernel softLight]
  +[CIBlendKernel difference]
  +[CIBlendKernel exclusion]
  +[CIBlendKernel hue]
  +[CIBlendKernel saturation]
  +[CIBlendKernel color]
  +[CIBlendKernel luminosity]
  +[CIBlendKernel subtract]
  +[CIBlendKernel divide]
  +[CIBlendKernel linearBurn]
  +[CIBlendKernel linearDodge]
  +[CIBlendKernel vividLight]
  +[CIBlendKernel linearLight]
  +[CIBlendKernel pinLight]
  +[CIBlendKernel hardMix]
  +[CIBlendKernel darkerColor]
  +[CIBlendKernel lighterColor]
  +[CIBlendKernel plusDarker]
  +[CIBlendKernel plusLighter]

  // instance methods
  -[CIBlendKernel initWithString:]
  -[CIBlendKernel setIsForeIfBackIsClear:]
  -[CIBlendKernel setIsClearIfForeIsClear:]
  -[CIBlendKernel setIsClearIfBackIsClear:]
  -[CIBlendKernel setIsBackIfForeIsClear:]
  -[CIBlendKernel applyWithForeground:background:]
  -[CIBlendKernel initWithString:extentType:]
  -[CIBlendKernel getBlendBehaviorBit:]
  -[CIBlendKernel setBlendBehaviorBit:value:]
  -[CIBlendKernel isBackIfForeIsClear]
  -[CIBlendKernel isForeIfBackIsClear]
  -[CIBlendKernel isClearIfForeIsClear]
  -[CIBlendKernel isClearIfBackIsClear]
  -[CIBlendKernel applyWithForeground:background:colorSpace:]


CILabDeltaE : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputImage2

  // class methods
  +[CILabDeltaE customAttributes]

  // instance methods
  -[CILabDeltaE _kernel]
  -[CILabDeltaE outputImage]
  -[CILabDeltaE inputImage]
  -[CILabDeltaE setInputImage:]
  -[CILabDeltaE inputImage2]
  -[CILabDeltaE setInputImage2:]


CILanczosScaleTransform : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale
 @property  NSNumber *inputAspectRatio

  // class methods
  +[CILanczosScaleTransform customAttributes]

  // instance methods
  -[CILanczosScaleTransform outputImage]
  -[CILanczosScaleTransform inputImage]
  -[CILanczosScaleTransform setInputImage:]
  -[CILanczosScaleTransform inputScale]
  -[CILanczosScaleTransform setInputScale:]
  -[CILanczosScaleTransform _isIdentity]
  -[CILanczosScaleTransform outputImageNewScaleX:scaleY:]
  -[CILanczosScaleTransform outputImageOldScaleX:scaleY:]
  -[CILanczosScaleTransform inputAspectRatio]
  -[CILanczosScaleTransform setInputAspectRatio:]


CIGlassLozenge : CIFilter
  // class methods
  +[CIGlassLozenge customAttributes]

  // instance methods
  -[CIGlassLozenge outputImage]
  -[CIGlassLozenge _CILozengeRefraction]


CITorusLensDistortion : CIFilter
  // class methods
  +[CITorusLensDistortion customAttributes]

  // instance methods
  -[CITorusLensDistortion outputImage]
  -[CITorusLensDistortion _CITorusRefraction]


CILensModelCalculatorCPU : CIImageProcessorKernel
  // class methods
  +[CILensModelCalculatorCPU outputFormat]
  +[CILensModelCalculatorCPU roiForInput:arguments:outputRect:]
  +[CILensModelCalculatorCPU processWithInputs:arguments:output:error:]
  +[CILensModelCalculatorCPU synchronizeInputs]
  +[CILensModelCalculatorCPU formatForInputAtIndex:]


CILensModelCalculator : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputMinMaxImage
 @property  CIVector *inputOriginalSize
 @property  CIVector *inputFocusRect
 @property  NSNumber *inputSimulatedAperture
 @property  NSNumber *inputIntrinsicMatrixFocalLength
 @property  NSDictionary *inputTuningParameters

  // class methods
  +[CILensModelCalculator customAttributes]

  // instance methods
  -[CILensModelCalculator outputImage]
  -[CILensModelCalculator inputImage]
  -[CILensModelCalculator setInputImage:]
  -[CILensModelCalculator kernel]
  -[CILensModelCalculator inputOriginalSize]
  -[CILensModelCalculator setInputOriginalSize:]
  -[CILensModelCalculator inputTuningParameters]
  -[CILensModelCalculator setInputTuningParameters:]
  -[CILensModelCalculator inputFocusRect]
  -[CILensModelCalculator setInputFocusRect:]
  -[CILensModelCalculator cpuParams]
  -[CILensModelCalculator inputMinMaxImage]
  -[CILensModelCalculator setInputMinMaxImage:]
  -[CILensModelCalculator inputSimulatedAperture]
  -[CILensModelCalculator setInputSimulatedAperture:]
  -[CILensModelCalculator inputIntrinsicMatrixFocalLength]
  -[CILensModelCalculator setInputIntrinsicMatrixFocalLength:]


CILensModelApply : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputLensModelParams

  // instance methods
  -[CILensModelApply outputImage]
  -[CILensModelApply inputImage]
  -[CILensModelApply setInputImage:]
  -[CILensModelApply kernel]
  -[CILensModelApply inputLensModelParams]
  -[CILensModelApply setInputLensModelParams:]


CILensModelKernelMetalProcessor : CIImageProcessorKernel
  // class methods
  +[CILensModelKernelMetalProcessor outputFormat]
  +[CILensModelKernelMetalProcessor roiForInput:arguments:outputRect:]
  +[CILensModelKernelMetalProcessor processWithInputs:arguments:output:error:]
  +[CILensModelKernelMetalProcessor synchronizeInputs]
  +[CILensModelKernelMetalProcessor formatForInputAtIndex:]
  +[CILensModelKernelMetalProcessor hasValidPipelines]
  +[CILensModelKernelMetalProcessor releasePipelines]
  +[CILensModelKernelMetalProcessor compilePipelines:]
  +[CILensModelKernelMetalProcessor compilePipelinesIfNeeded:]


CILenticularHaloGenerator : CIFilter
  // class methods
  +[CILenticularHaloGenerator customAttributes]

  // instance methods
  -[CILenticularHaloGenerator outputImage]
  -[CILenticularHaloGenerator _CILenticularHalo]


CILightTunnel : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRotation
 @property  NSNumber *inputRadius

  // class methods
  +[CILightTunnel customAttributes]

  // instance methods
  -[CILightTunnel _kernel]
  -[CILightTunnel outputImage]
  -[CILightTunnel inputImage]
  -[CILightTunnel setInputImage:]
  -[CILightTunnel inputRadius]
  -[CILightTunnel setInputRadius:]
  -[CILightTunnel inputCenter]
  -[CILightTunnel setInputCenter:]
  -[CILightTunnel inputRotation]
  -[CILightTunnel setInputRotation:]


CILocalContrast : CIFilter
  // class methods
  +[CILocalContrast customAttributes]

  // instance methods
  -[CILocalContrast outputImage]
  -[CILocalContrast _kernelLocalContrast]


CILocalLightMapPrepare : CIFilter
  // class methods
  +[CILocalLightMapPrepare customAttributes]

  // instance methods
  -[CILocalLightMapPrepare outputImage]


CILocalLightFilter : CIFilter
  // class methods
  +[CILocalLightFilter customAttributes]

  // instance methods
  -[CILocalLightFilter outputImage]
  -[CILocalLightFilter _polyKernel]
  -[CILocalLightFilter _shadowKernel]


CILumaMap : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CILumaMap customAttributes]

  // instance methods
  -[CILumaMap dealloc]
  -[CILumaMap _kernel]
  -[CILumaMap outputImage]
  -[CILumaMap inputImage]
  -[CILumaMap setInputImage:]
  -[CILumaMap setDefaults]
  -[CILumaMap lumaTable]


CIXRay : CILumaMap
  // class methods
  +[CIXRay customAttributes]

  // instance methods
  -[CIXRay lumaTable]


CIThermal : CILumaMap
  // class methods
  +[CIThermal customAttributes]

  // instance methods
  -[CIThermal lumaTable]


CIMaskToAlpha : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIMaskToAlpha customAttributes]

  // instance methods
  -[CIMaskToAlpha _kernel]
  -[CIMaskToAlpha outputImage]
  -[CIMaskToAlpha inputImage]
  -[CIMaskToAlpha setInputImage:]


CIMaskedVariableBlur : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputMask
 @property  NSNumber *inputRadius

  // class methods
  +[CIMaskedVariableBlur customAttributes]

  // instance methods
  -[CIMaskedVariableBlur outputImage]
  -[CIMaskedVariableBlur inputImage]
  -[CIMaskedVariableBlur setInputImage:]
  -[CIMaskedVariableBlur _isIdentity]
  -[CIMaskedVariableBlur inputRadius]
  -[CIMaskedVariableBlur setInputRadius:]
  -[CIMaskedVariableBlur inputMask]
  -[CIMaskedVariableBlur setInputMask:]
  -[CIMaskedVariableBlur _kernelD2]
  -[CIMaskedVariableBlur downTwo:]
  -[CIMaskedVariableBlur upCubic:scale:]
  -[CIMaskedVariableBlur _kernelCombine]


CIMattingRGBDProcessor : CIImageProcessorKernel
  // class methods
  +[CIMattingRGBDProcessor outputFormat]
  +[CIMattingRGBDProcessor roiForInput:arguments:outputRect:]
  +[CIMattingRGBDProcessor processWithInputs:arguments:output:error:]
  +[CIMattingRGBDProcessor synchronizeInputs]
  +[CIMattingRGBDProcessor formatForInputAtIndex:]
  +[CIMattingRGBDProcessor allowPartialOutputRegion]


CIMattingSolverInternal : CIFilter
  // class methods
  +[CIMattingSolverInternal customAttributes]

  // instance methods
  -[CIMattingSolverInternal outputImage]


CIMattingSolver : CIMattingSolverInternal
  // instance methods
  -[CIMattingSolver outputImage]


CIMedianFilter : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIMedianFilter customAttributes]

  // instance methods
  -[CIMedianFilter outputImage]
  -[CIMedianFilter inputImage]
  -[CIMedianFilter setInputImage:]
  -[CIMedianFilter _kernel3x3]


CIMeshGenerator : CIFilter
 @property  NSNumber *inputWidth
 @property  CIColor *inputColor
 @property  NSArray *inputMesh

  // class methods
  +[CIMeshGenerator customAttributes]

  // instance methods
  -[CIMeshGenerator outputImage]
  -[CIMeshGenerator inputWidth]
  -[CIMeshGenerator setInputWidth:]
  -[CIMeshGenerator inputColor]
  -[CIMeshGenerator setInputColor:]
  -[CIMeshGenerator extentOfMeshStart:count:halfWidth:]
  -[CIMeshGenerator _CIMesh32]
  -[CIMeshGenerator _CIMesh16]
  -[CIMeshGenerator _CIMesh8]
  -[CIMeshGenerator _CIMesh4]
  -[CIMeshGenerator _CIMesh2]
  -[CIMeshGenerator _CIMesh1]
  -[CIMeshGenerator inputMesh]
  -[CIMeshGenerator setInputMesh:]


CIMetalConverter : NSObject
  // instance methods
  -[CIMetalConverter dealloc]
  -[CIMetalConverter initWithDevice:kernelName:]
  -[CIMetalConverter encodeToCommandBuffer:sourceBuffer:sourceRowBytes:destinationTexture:]
  -[CIMetalConverter encodeToCommandBuffer:sourceBuffer:sourceRowBytes:destinationBuffer:destinationRowBytes:destinationSize:]


CIMetalProcessor : CIImageProcessorKernel
  // class methods
  +[CIMetalProcessor outputFormat]
  +[CIMetalProcessor roiForInput:arguments:outputRect:]
  +[CIMetalProcessor processWithInputs:arguments:output:error:]
  +[CIMetalProcessor synchronizeInputs]
  +[CIMetalProcessor formatForInputAtIndex:]
  +[CIMetalProcessor allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIMetalProcessor allowSRGBTranferFuntionOnOutput]
  +[CIMetalProcessor allowPartialOutputRegion]
  +[CIMetalProcessor setFilterParams:arguments:filter:]
  +[CIMetalProcessor setFilterParamsAndImages:arguments:filter:]


CIMetalWrapper : CIFilter
 @property  NSMutableDictionary *_dict
 @property  NSString *inputFilterName

  // instance methods
  -[CIMetalWrapper init]
  -[CIMetalWrapper dealloc]
  -[CIMetalWrapper setValue:forKey:]
  -[CIMetalWrapper _dict]
  -[CIMetalWrapper attributes]
  -[CIMetalWrapper outputImage]
  -[CIMetalWrapper inputKeys]
  -[CIMetalWrapper dummyImagesForImages:]
  -[CIMetalWrapper set_dict:]
  -[CIMetalWrapper inputFilterName]
  -[CIMetalWrapper setInputFilterName:]


CIMinimumComponent : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIMinimumComponent customAttributes]

  // instance methods
  -[CIMinimumComponent _kernel]
  -[CIMinimumComponent outputImage]
  -[CIMinimumComponent inputImage]
  -[CIMinimumComponent setInputImage:]


CIMaximumComponent : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIMaximumComponent customAttributes]

  // instance methods
  -[CIMaximumComponent _kernel]
  -[CIMaximumComponent outputImage]
  -[CIMaximumComponent inputImage]
  -[CIMaximumComponent setInputImage:]


CIMirror : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputPoint
 @property  NSNumber *inputAngle

  // class methods
  +[CIMirror customAttributes]

  // instance methods
  -[CIMirror _kernel]
  -[CIMirror outputImage]
  -[CIMirror inputImage]
  -[CIMirror setInputImage:]
  -[CIMirror inputAngle]
  -[CIMirror setInputAngle:]
  -[CIMirror computeDOD:tst:off:mtx:]
  -[CIMirror inputPoint]
  -[CIMirror setInputPoint:]


CIModTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputTime
 @property  NSNumber *inputAngle
 @property  NSNumber *inputRadius
 @property  NSNumber *inputCompression

  // class methods
  +[CIModTransition customAttributes]

  // instance methods
  -[CIModTransition _kernel]
  -[CIModTransition outputImage]
  -[CIModTransition inputImage]
  -[CIModTransition setInputImage:]
  -[CIModTransition inputTargetImage]
  -[CIModTransition setInputTargetImage:]
  -[CIModTransition inputTime]
  -[CIModTransition setInputTime:]
  -[CIModTransition inputAngle]
  -[CIModTransition setInputAngle:]
  -[CIModTransition inputRadius]
  -[CIModTransition setInputRadius:]
  -[CIModTransition inputCenter]
  -[CIModTransition setInputCenter:]
  -[CIModTransition inputCompression]
  -[CIModTransition setInputCompression:]


CIMorphology : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius

  // instance methods
  -[CIMorphology inputImage]
  -[CIMorphology setInputImage:]
  -[CIMorphology inputRadius]
  -[CIMorphology setInputRadius:]


CICheapMorphology : CIMorphology
  // class methods
  +[CICheapMorphology customAttributes]

  // instance methods
  -[CICheapMorphology outputImage]
  -[CICheapMorphology regionOf:destRect:Offset:]


CIMorphologyMinimum : CIMorphology
  // class methods
  +[CIMorphologyMinimum customAttributes]

  // instance methods
  -[CIMorphologyMinimum outputImage]


CIMorphologyMaximum : CIMorphology
  // class methods
  +[CIMorphologyMaximum customAttributes]

  // instance methods
  -[CIMorphologyMaximum outputImage]


CIMorphologyGradient : CIMorphology
  // class methods
  +[CIMorphologyGradient customAttributes]

  // instance methods
  -[CIMorphologyGradient outputImage]


CIMorphologyLaplacian : CIMorphology
  // class methods
  +[CIMorphologyLaplacian customAttributes]

  // instance methods
  -[CIMorphologyLaplacian outputImage]


CIPseudoMedian : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputWeights

  // class methods
  +[CIPseudoMedian customAttributes]

  // instance methods
  -[CIPseudoMedian outputImage]
  -[CIPseudoMedian inputImage]
  -[CIPseudoMedian setInputImage:]
  -[CIPseudoMedian inputRadius]
  -[CIPseudoMedian setInputRadius:]
  -[CIPseudoMedian inputWeights]
  -[CIPseudoMedian setInputWeights:]


CIMorphologyProcessor : CIImageProcessorKernel
  // class methods
  +[CIMorphologyProcessor outputFormat]
  +[CIMorphologyProcessor roiForInput:arguments:outputRect:]
  +[CIMorphologyProcessor processWithInputs:arguments:output:error:]
  +[CIMorphologyProcessor synchronizeInputs]
  +[CIMorphologyProcessor canReduceOutputChannels]
  +[CIMorphologyProcessor formatForInputAtIndex:]
  +[CIMorphologyProcessor allowSRGBTranferFuntionOnInputAtIndex:]
  +[CIMorphologyProcessor allowSRGBTranferFuntionOnOutput]
  +[CIMorphologyProcessor applyBoxToImage:width:height:doMin:]


CIMorphologyRectangle : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputWidth
 @property  NSNumber *inputHeight

  // class methods
  +[CIMorphologyRectangle customAttributes]

  // instance methods
  -[CIMorphologyRectangle outputImage]
  -[CIMorphologyRectangle inputImage]
  -[CIMorphologyRectangle setInputImage:]
  -[CIMorphologyRectangle inputWidth]
  -[CIMorphologyRectangle setInputWidth:]
  -[CIMorphologyRectangle _isIdentity]
  -[CIMorphologyRectangle inputHeight]
  -[CIMorphologyRectangle setInputHeight:]
  -[CIMorphologyRectangle _doMinimum]


CIMorphologyRectangleMaximum : CIMorphologyRectangle

CIMorphologyRectangleMinimum : CIMorphologyRectangle
  // instance methods
  -[CIMorphologyRectangleMinimum _doMinimum]


CIMotionBlur : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputAngle

  // class methods
  +[CIMotionBlur customAttributes]

  // instance methods
  -[CIMotionBlur _kernel]
  -[CIMotionBlur outputImage]
  -[CIMotionBlur inputImage]
  -[CIMotionBlur setInputImage:]
  -[CIMotionBlur inputAngle]
  -[CIMotionBlur setInputAngle:]
  -[CIMotionBlur _isIdentity]
  -[CIMotionBlur inputRadius]
  -[CIMotionBlur setInputRadius:]
  -[CIMotionBlur _blur:pass:weightsFactor:legacyExtent:]


CIZoomBlur : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputAmount

  // class methods
  +[CIZoomBlur customAttributes]

  // instance methods
  -[CIZoomBlur valueForUndefinedKey:]
  -[CIZoomBlur setValue:forUndefinedKey:]
  -[CIZoomBlur _kernel]
  -[CIZoomBlur outputImage]
  -[CIZoomBlur inputImage]
  -[CIZoomBlur setInputImage:]
  -[CIZoomBlur inputAmount]
  -[CIZoomBlur setInputAmount:]
  -[CIZoomBlur _isIdentity]
  -[CIZoomBlur inputCenter]
  -[CIZoomBlur setInputCenter:]
  -[CIZoomBlur _kernelNew]
  -[CIZoomBlur _blur:pass:weightsFactor:]


CIOpTile : CIFilter
  // class methods
  +[CIOpTile customAttributes]

  // instance methods
  -[CIOpTile outputImage]
  -[CIOpTile _CIOpTile]


CIOpacity : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputOpacity

  // class methods
  +[CIOpacity customAttributes]

  // instance methods
  -[CIOpacity outputImage]
  -[CIOpacity inputImage]
  -[CIOpacity setInputImage:]
  -[CIOpacity inputOpacity]
  -[CIOpacity setInputOpacity:]


CIPageCurlTransition : CIFilter
  // class methods
  +[CIPageCurlTransition customAttributes]

  // instance methods
  -[CIPageCurlTransition outputImage]
  -[CIPageCurlTransition _CIPageCurlTransNoEmap]
  -[CIPageCurlTransition _CIPageCurlTransition]


CIPageCurlWithShadowTransition : CIFilter
  // class methods
  +[CIPageCurlWithShadowTransition customAttributes]

  // instance methods
  -[CIPageCurlWithShadowTransition outputImage]
  -[CIPageCurlWithShadowTransition _CIPageCurlWithShadowTransition]
  -[CIPageCurlWithShadowTransition _CIPageCurlNoShadowTransition]


CIParallelogramTile : CIFilter
  // class methods
  +[CIParallelogramTile customAttributes]

  // instance methods
  -[CIParallelogramTile outputImage]


CIPerspectiveTransformWithExtent : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent
 @property  CIVector *inputTopLeft
 @property  CIVector *inputTopRight
 @property  CIVector *inputBottomRight
 @property  CIVector *inputBottomLeft

  // class methods
  +[CIPerspectiveTransformWithExtent customAttributes]

  // instance methods
  -[CIPerspectiveTransformWithExtent _kernel]
  -[CIPerspectiveTransformWithExtent outputImage]
  -[CIPerspectiveTransformWithExtent inputImage]
  -[CIPerspectiveTransformWithExtent setInputImage:]
  -[CIPerspectiveTransformWithExtent inputExtent]
  -[CIPerspectiveTransformWithExtent setInputExtent:]
  -[CIPerspectiveTransformWithExtent inputTopLeft]
  -[CIPerspectiveTransformWithExtent setInputTopLeft:]
  -[CIPerspectiveTransformWithExtent inputTopRight]
  -[CIPerspectiveTransformWithExtent setInputTopRight:]
  -[CIPerspectiveTransformWithExtent inputBottomRight]
  -[CIPerspectiveTransformWithExtent setInputBottomRight:]
  -[CIPerspectiveTransformWithExtent inputBottomLeft]
  -[CIPerspectiveTransformWithExtent setInputBottomLeft:]


CIPerspectiveTransform : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputTopLeft
 @property  CIVector *inputTopRight
 @property  CIVector *inputBottomRight
 @property  CIVector *inputBottomLeft

  // class methods
  +[CIPerspectiveTransform customAttributes]

  // instance methods
  -[CIPerspectiveTransform outputImage]
  -[CIPerspectiveTransform inputImage]
  -[CIPerspectiveTransform setInputImage:]
  -[CIPerspectiveTransform inputTopLeft]
  -[CIPerspectiveTransform setInputTopLeft:]
  -[CIPerspectiveTransform inputTopRight]
  -[CIPerspectiveTransform setInputTopRight:]
  -[CIPerspectiveTransform inputBottomRight]
  -[CIPerspectiveTransform setInputBottomRight:]
  -[CIPerspectiveTransform inputBottomLeft]
  -[CIPerspectiveTransform setInputBottomLeft:]


CIPerspectiveTile : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputTopLeft
 @property  CIVector *inputTopRight
 @property  CIVector *inputBottomRight
 @property  CIVector *inputBottomLeft

  // class methods
  +[CIPerspectiveTile customAttributes]

  // instance methods
  -[CIPerspectiveTile _kernel]
  -[CIPerspectiveTile outputImage]
  -[CIPerspectiveTile inputImage]
  -[CIPerspectiveTile setInputImage:]
  -[CIPerspectiveTile inputTopLeft]
  -[CIPerspectiveTile setInputTopLeft:]
  -[CIPerspectiveTile inputTopRight]
  -[CIPerspectiveTile setInputTopRight:]
  -[CIPerspectiveTile inputBottomRight]
  -[CIPerspectiveTile setInputBottomRight:]
  -[CIPerspectiveTile inputBottomLeft]
  -[CIPerspectiveTile setInputBottomLeft:]


CIPerspectiveCorrection : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputTopLeft
 @property  CIVector *inputTopRight
 @property  CIVector *inputBottomRight
 @property  CIVector *inputBottomLeft
 @property  NSNumber *inputCrop

  // class methods
  +[CIPerspectiveCorrection customAttributes]

  // instance methods
  -[CIPerspectiveCorrection _kernel]
  -[CIPerspectiveCorrection outputImage]
  -[CIPerspectiveCorrection inputImage]
  -[CIPerspectiveCorrection setInputImage:]
  -[CIPerspectiveCorrection inputTopLeft]
  -[CIPerspectiveCorrection setInputTopLeft:]
  -[CIPerspectiveCorrection inputTopRight]
  -[CIPerspectiveCorrection setInputTopRight:]
  -[CIPerspectiveCorrection inputBottomRight]
  -[CIPerspectiveCorrection setInputBottomRight:]
  -[CIPerspectiveCorrection inputBottomLeft]
  -[CIPerspectiveCorrection setInputBottomLeft:]
  -[CIPerspectiveCorrection inputCrop]
  -[CIPerspectiveCorrection setInputCrop:]


CIPhotoEffect : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIPhotoEffect customAttributes]

  // instance methods
  -[CIPhotoEffect init]
  -[CIPhotoEffect outputImage]
  -[CIPhotoEffect inputImage]
  -[CIPhotoEffect setInputImage:]
  -[CIPhotoEffect _defaultVersion]
  -[CIPhotoEffect setDefaults]
  -[CIPhotoEffect _maxVersion]
  -[CIPhotoEffect cubeName]
  -[CIPhotoEffect cubePath]
  -[CIPhotoEffect cubeColorSpaceName]


CIPhotoEffectNoir : CIPhotoEffect
  // instance methods
  -[CIPhotoEffectNoir _defaultVersion]
  -[CIPhotoEffectNoir _maxVersion]


CIPhotoEffectChrome : CIPhotoEffect

CIPhotoEffectFade : CIPhotoEffect

CIPhotoEffectInstant : CIPhotoEffect
  // instance methods
  -[CIPhotoEffectInstant _defaultVersion]
  -[CIPhotoEffectInstant _maxVersion]


CIPhotoEffectMono : CIPhotoEffect
  // instance methods
  -[CIPhotoEffectMono _defaultVersion]
  -[CIPhotoEffectMono _maxVersion]


CIPhotoEffectProcess : CIPhotoEffect

CIPhotoEffectTonal : CIPhotoEffect
  // instance methods
  -[CIPhotoEffectTonal _defaultVersion]
  -[CIPhotoEffectTonal _maxVersion]


CIPhotoEffectTransfer : CIPhotoEffect
  // instance methods
  -[CIPhotoEffectTransfer _defaultVersion]
  -[CIPhotoEffectTransfer _maxVersion]


CIPhotoEffectStageMono : CIPhotoEffect

CIPhotoEffect3D : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDepthMap
 @property  NSNumber *inputThreshold
 @property  NSNumber *inputGrainAmount
 @property  NSNumber *inputScale

  // class methods
  +[CIPhotoEffect3D customAttributes]

  // instance methods
  -[CIPhotoEffect3D init]
  -[CIPhotoEffect3D outputImage]
  -[CIPhotoEffect3D inputImage]
  -[CIPhotoEffect3D setInputImage:]
  -[CIPhotoEffect3D inputScale]
  -[CIPhotoEffect3D setInputScale:]
  -[CIPhotoEffect3D _defaultVersion]
  -[CIPhotoEffect3D setDefaults]
  -[CIPhotoEffect3D _maxVersion]
  -[CIPhotoEffect3D inputThreshold]
  -[CIPhotoEffect3D setInputThreshold:]
  -[CIPhotoEffect3D cubeName]
  -[CIPhotoEffect3D cubePath]
  -[CIPhotoEffect3D cubeColorSpaceName]
  -[CIPhotoEffect3D _maxVersionBG]
  -[CIPhotoEffect3D backgroundCubeName]
  -[CIPhotoEffect3D applyCubeWithName:toImage:]
  -[CIPhotoEffect3D _CIPhotoEffectDepthBlend]
  -[CIPhotoEffect3D backgroundCubePath]
  -[CIPhotoEffect3D inputDepthMap]
  -[CIPhotoEffect3D setInputDepthMap:]
  -[CIPhotoEffect3D inputGrainAmount]
  -[CIPhotoEffect3D setInputGrainAmount:]


CIPhotoEffect3DVivid : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DVivid _defaultVersion]
  -[CIPhotoEffect3DVivid _maxVersion]


CIPhotoEffect3DVividWarm : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DVividWarm _defaultVersion]
  -[CIPhotoEffect3DVividWarm _maxVersion]


CIPhotoEffect3DVividCool : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DVividCool _defaultVersion]
  -[CIPhotoEffect3DVividCool _maxVersion]


CIPhotoEffect3DDramatic : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DDramatic _defaultVersion]
  -[CIPhotoEffect3DDramatic _maxVersion]


CIPhotoEffect3DDramaticWarm : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DDramaticWarm _defaultVersion]
  -[CIPhotoEffect3DDramaticWarm _maxVersion]


CIPhotoEffect3DDramaticCool : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DDramaticCool _defaultVersion]
  -[CIPhotoEffect3DDramaticCool _maxVersion]


CIPhotoEffect3DSilverplate : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DSilverplate _defaultVersion]
  -[CIPhotoEffect3DSilverplate _maxVersion]


CIPhotoEffect3DCommercial : CIPhotoEffect3D

CIPhotoEffect3DNoir : CIPhotoEffect3D
  // instance methods
  -[CIPhotoEffect3DNoir _defaultVersion]
  -[CIPhotoEffect3DNoir setDefaults]
  -[CIPhotoEffect3DNoir _maxVersion]


CIPhotoGrain : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputISO
 @property  NSNumber *inputAmount
 @property  NSNumber *inputSeed

  // class methods
  +[CIPhotoGrain customAttributes]

  // instance methods
  -[CIPhotoGrain outputImage]
  -[CIPhotoGrain inputImage]
  -[CIPhotoGrain setInputImage:]
  -[CIPhotoGrain inputAmount]
  -[CIPhotoGrain setInputAmount:]
  -[CIPhotoGrain _interpolateGrainKernel]
  -[CIPhotoGrain _paddedTileKernel]
  -[CIPhotoGrain _grainBlendAndMixKernel]
  -[CIPhotoGrain inputISO]
  -[CIPhotoGrain setInputISO:]
  -[CIPhotoGrain inputSeed]
  -[CIPhotoGrain setInputSeed:]


CIPinchDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputScale

  // class methods
  +[CIPinchDistortion customAttributes]

  // instance methods
  -[CIPinchDistortion outputImage]
  -[CIPinchDistortion inputImage]
  -[CIPinchDistortion setInputImage:]
  -[CIPinchDistortion inputScale]
  -[CIPinchDistortion setInputScale:]
  -[CIPinchDistortion inputRadius]
  -[CIPinchDistortion setInputRadius:]
  -[CIPinchDistortion inputCenter]
  -[CIPinchDistortion setInputCenter:]
  -[CIPinchDistortion computeDOD:scale:]
  -[CIPinchDistortion _pinchDistortionScaleLT1]
  -[CIPinchDistortion _pinchDistortionScaleGE1]


CIPixellate : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputScale

  // class methods
  +[CIPixellate customAttributes]

  // instance methods
  -[CIPixellate _kernel]
  -[CIPixellate outputImage]
  -[CIPixellate inputImage]
  -[CIPixellate setInputImage:]
  -[CIPixellate inputScale]
  -[CIPixellate setInputScale:]
  -[CIPixellate inputCenter]
  -[CIPixellate setInputCenter:]


CIHexagonalPixellate : CIFilter
  // class methods
  +[CIHexagonalPixellate customAttributes]

  // instance methods
  -[CIHexagonalPixellate outputImage]
  -[CIHexagonalPixellate _CIHexagonalPixellate]


CIPointillize : CIFilter
  // class methods
  +[CIPointillize customAttributes]

  // instance methods
  -[CIPointillize outputImage]
  -[CIPointillize _CIPointillize]


CIBlurmapSmoothing : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIBlurmapSmoothing customAttributes]

  // instance methods
  -[CIBlurmapSmoothing outputImage]
  -[CIBlurmapSmoothing inputImage]
  -[CIBlurmapSmoothing setInputImage:]
  -[CIBlurmapSmoothing inputScale]
  -[CIBlurmapSmoothing setInputScale:]
  -[CIBlurmapSmoothing inputTuningParameters]
  -[CIBlurmapSmoothing setInputTuningParameters:]
  -[CIBlurmapSmoothing _kernelH]
  -[CIBlurmapSmoothing _kernelV]
  -[CIBlurmapSmoothing inputDraftMode]
  -[CIBlurmapSmoothing performPass:reference:values:rect:]
  -[CIBlurmapSmoothing setInputDraftMode:]


CIPortraitBlurNoise : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputLumaNoiseAmpl
 @property  NSNumber *inputLumaNoiseModelCoeff
 @property  CIVector *inputExtent
 @property  NSNumber *inputUseMetal

  // instance methods
  -[CIPortraitBlurNoise _kernel]
  -[CIPortraitBlurNoise outputImage]
  -[CIPortraitBlurNoise inputImage]
  -[CIPortraitBlurNoise setInputImage:]
  -[CIPortraitBlurNoise inputExtent]
  -[CIPortraitBlurNoise setInputExtent:]
  -[CIPortraitBlurNoise _kernelMetal]
  -[CIPortraitBlurNoise inputLumaNoiseAmpl]
  -[CIPortraitBlurNoise setInputLumaNoiseAmpl:]
  -[CIPortraitBlurNoise inputLumaNoiseModelCoeff]
  -[CIPortraitBlurNoise setInputLumaNoiseModelCoeff:]
  -[CIPortraitBlurNoise inputUseMetal]
  -[CIPortraitBlurNoise setInputUseMetal:]


CIPortraitBlurDirectionalBlur : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputMaxBlur
 @property  NSNumber *inputHorizontalBlur
 @property  NSNumber *inputAntiAliasBlurStrength
 @property  NSNumber *inputUseMetal

  // instance methods
  -[CIPortraitBlurDirectionalBlur _kernel]
  -[CIPortraitBlurDirectionalBlur outputImage]
  -[CIPortraitBlurDirectionalBlur inputImage]
  -[CIPortraitBlurDirectionalBlur setInputImage:]
  -[CIPortraitBlurDirectionalBlur inputMaxBlur]
  -[CIPortraitBlurDirectionalBlur setInputMaxBlur:]
  -[CIPortraitBlurDirectionalBlur _kernelMetal]
  -[CIPortraitBlurDirectionalBlur inputUseMetal]
  -[CIPortraitBlurDirectionalBlur setInputUseMetal:]
  -[CIPortraitBlurDirectionalBlur inputHorizontalBlur]
  -[CIPortraitBlurDirectionalBlur setInputHorizontalBlur:]
  -[CIPortraitBlurDirectionalBlur inputAntiAliasBlurStrength]
  -[CIPortraitBlurDirectionalBlur setInputAntiAliasBlurStrength:]


CIPortraitBlur : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBlurmapImage
 @property  CIImage *inputMatteImage
 @property  NSNumber *inputLumaNoiseScale
 @property  NSNumber *inputScale
 @property  NSNumber *inputAperture
 @property  NSDictionary *inputTuningParameters
 @property  NSString *inputShape
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIPortraitBlur customAttributes]

  // instance methods
  -[CIPortraitBlur _kernel]
  -[CIPortraitBlur outputImage]
  -[CIPortraitBlur inputImage]
  -[CIPortraitBlur setInputImage:]
  -[CIPortraitBlur inputScale]
  -[CIPortraitBlur setInputScale:]
  -[CIPortraitBlur inputTuningParameters]
  -[CIPortraitBlur setInputTuningParameters:]
  -[CIPortraitBlur inputMatteImage]
  -[CIPortraitBlur inputDraftMode]
  -[CIPortraitBlur setInputDraftMode:]
  -[CIPortraitBlur _kernelMetal]
  -[CIPortraitBlur _kernelWithShapesMetal]
  -[CIPortraitBlur _kernelsWithShapes]
  -[CIPortraitBlur _ourBlendKernelMetal]
  -[CIPortraitBlur _ourBlendKernel]
  -[CIPortraitBlur outputImage:]
  -[CIPortraitBlur outputImageV2]
  -[CIPortraitBlur outputImageV3]
  -[CIPortraitBlur inputBlurmapImage]
  -[CIPortraitBlur setInputBlurmapImage:]
  -[CIPortraitBlur setInputMatteImage:]
  -[CIPortraitBlur inputLumaNoiseScale]
  -[CIPortraitBlur setInputLumaNoiseScale:]
  -[CIPortraitBlur inputAperture]
  -[CIPortraitBlur setInputAperture:]
  -[CIPortraitBlur inputShape]
  -[CIPortraitBlur setInputShape:]


CIPortraitBlurPreProcess : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBlurmapImage
 @property  NSNumber *inputUseMetal

  // instance methods
  -[CIPortraitBlurPreProcess _kernel]
  -[CIPortraitBlurPreProcess outputImage]
  -[CIPortraitBlurPreProcess inputImage]
  -[CIPortraitBlurPreProcess setInputImage:]
  -[CIPortraitBlurPreProcess _kernelMetal]
  -[CIPortraitBlurPreProcess inputUseMetal]
  -[CIPortraitBlurPreProcess setInputUseMetal:]
  -[CIPortraitBlurPreProcess inputBlurmapImage]
  -[CIPortraitBlurPreProcess setInputBlurmapImage:]


CIHighlightRecoveryProcessor : CIImageProcessorKernel
  // class methods
  +[CIHighlightRecoveryProcessor outputFormat]
  +[CIHighlightRecoveryProcessor roiForInput:arguments:outputRect:]
  +[CIHighlightRecoveryProcessor processWithInputs:arguments:output:error:]
  +[CIHighlightRecoveryProcessor synchronizeInputs]
  +[CIHighlightRecoveryProcessor formatForInputAtIndex:]
  +[CIHighlightRecoveryProcessor allowPartialOutputRegion]
  +[CIHighlightRecoveryProcessor functionConstantValuesTuningParameters:]
  +[CIHighlightRecoveryProcessor compilePipelineForDevice:functionName:constantValues:]


CISDOFHighlightRecovery : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale
 @property  NSNumber *inputApertureScaling
 @property  NSNumber *inputIterations
 @property  NSNumber *inputMaxBlur
 @property  CIVector *inputBlurRadius
 @property  CIVector *inputMaxIntensity
 @property  CIVector *inputMinIntensity

  // class methods
  +[CISDOFHighlightRecovery customAttributes]

  // instance methods
  -[CISDOFHighlightRecovery outputImage]
  -[CISDOFHighlightRecovery inputImage]
  -[CISDOFHighlightRecovery setInputImage:]
  -[CISDOFHighlightRecovery inputScale]
  -[CISDOFHighlightRecovery setInputScale:]
  -[CISDOFHighlightRecovery inputApertureScaling]
  -[CISDOFHighlightRecovery inputMaxBlur]
  -[CISDOFHighlightRecovery setInputApertureScaling:]
  -[CISDOFHighlightRecovery setInputMaxBlur:]
  -[CISDOFHighlightRecovery inputIterations]
  -[CISDOFHighlightRecovery setInputIterations:]
  -[CISDOFHighlightRecovery inputBlurRadius]
  -[CISDOFHighlightRecovery setInputBlurRadius:]
  -[CISDOFHighlightRecovery inputMaxIntensity]
  -[CISDOFHighlightRecovery setInputMaxIntensity:]
  -[CISDOFHighlightRecovery inputMinIntensity]
  -[CISDOFHighlightRecovery setInputMinIntensity:]


CIHighlightRecovery : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale
 @property  NSNumber *inputApertureScaling
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputDraftMode

  // instance methods
  -[CIHighlightRecovery outputImage]
  -[CIHighlightRecovery inputImage]
  -[CIHighlightRecovery setInputImage:]
  -[CIHighlightRecovery inputScale]
  -[CIHighlightRecovery setInputScale:]
  -[CIHighlightRecovery inputApertureScaling]
  -[CIHighlightRecovery setInputApertureScaling:]
  -[CIHighlightRecovery inputTuningParameters]
  -[CIHighlightRecovery setInputTuningParameters:]
  -[CIHighlightRecovery inputDraftMode]
  -[CIHighlightRecovery setInputDraftMode:]


CIPortraitAntialias : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputMaxBlurInPixels
 @property  NSNumber *inputAntiAliasRadius
 @property  NSNumber *inputLumaNoiseAmpl
 @property  NSNumber *inputLumaNoiseModelCoeff
 @property  NSNumber *inputScale
 @property  CIVector *inputRect
 @property  CIVector *inputSensorSize

  // instance methods
  -[CIPortraitAntialias outputImage]
  -[CIPortraitAntialias inputImage]
  -[CIPortraitAntialias setInputImage:]
  -[CIPortraitAntialias inputScale]
  -[CIPortraitAntialias setInputScale:]
  -[CIPortraitAntialias inputLumaNoiseAmpl]
  -[CIPortraitAntialias setInputLumaNoiseAmpl:]
  -[CIPortraitAntialias inputLumaNoiseModelCoeff]
  -[CIPortraitAntialias setInputLumaNoiseModelCoeff:]
  -[CIPortraitAntialias _kernel:withAddedNoise:]
  -[CIPortraitAntialias _noiseGeneratorKernel]
  -[CIPortraitAntialias noiseColorKernel]
  -[CIPortraitAntialias outputImage:horizontal:]
  -[CIPortraitAntialias inputMaxBlurInPixels]
  -[CIPortraitAntialias setInputMaxBlurInPixels:]
  -[CIPortraitAntialias inputAntiAliasRadius]
  -[CIPortraitAntialias setInputAntiAliasRadius:]
  -[CIPortraitAntialias inputRect]
  -[CIPortraitAntialias setInputRect:]
  -[CIPortraitAntialias inputSensorSize]
  -[CIPortraitAntialias setInputSensorSize:]


CISparseRendererPreFiltering : CIFilter
 @property  CIImage *inputImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputApertureScaling
 @property  NSNumber *inputScale

  // instance methods
  -[CISparseRendererPreFiltering outputImage]
  -[CISparseRendererPreFiltering inputImage]
  -[CISparseRendererPreFiltering setInputImage:]
  -[CISparseRendererPreFiltering inputScale]
  -[CISparseRendererPreFiltering setInputScale:]
  -[CISparseRendererPreFiltering inputApertureScaling]
  -[CISparseRendererPreFiltering setInputApertureScaling:]
  -[CISparseRendererPreFiltering inputTuningParameters]
  -[CISparseRendererPreFiltering setInputTuningParameters:]
  -[CISparseRendererPreFiltering _kernel:]
  -[CISparseRendererPreFiltering outputImage:horizontal:width:]
  -[CISparseRendererPreFiltering dumpImage:extent:prefixFilename:]


CISparseRenderer : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputMatteImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputScale
 @property  NSNumber *inputApertureScaling
 @property  NSNumber *inputDraftMode
 @property  NSNumber *inputAperture

  // class methods
  +[CISparseRenderer customAttributes]

  // instance methods
  -[CISparseRenderer outputImage]
  -[CISparseRenderer inputImage]
  -[CISparseRenderer setInputImage:]
  -[CISparseRenderer inputScale]
  -[CISparseRenderer setInputScale:]
  -[CISparseRenderer inputApertureScaling]
  -[CISparseRenderer setInputApertureScaling:]
  -[CISparseRenderer inputTuningParameters]
  -[CISparseRenderer setInputTuningParameters:]
  -[CISparseRenderer inputMatteImage]
  -[CISparseRenderer inputDraftMode]
  -[CISparseRenderer setInputDraftMode:]
  -[CISparseRenderer setInputMatteImage:]
  -[CISparseRenderer inputAperture]
  -[CISparseRenderer setInputAperture:]
  -[CISparseRenderer stepsLUTGenerator]
  -[CISparseRenderer baseVecsLUTGenerator]
  -[CISparseRenderer _useD2XRenderer]
  -[CISparseRenderer stepsLUT:]
  -[CISparseRenderer baseVecsLUT:]
  -[CISparseRenderer _lutKernel:alpha:]
  -[CISparseRenderer _kernel:alpha:]
  -[CISparseRenderer _packageParams:extent:image:haveAlpha:]


CIPortraitBlurV2 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputMatteImage
 @property  CIImage *inputBlurmapImage
 @property  NSNumber *inputLumaNoiseScale
 @property  NSNumber *inputScale
 @property  NSNumber *inputAperture
 @property  NSDictionary *inputTuningParameters
 @property  NSString *inputShape
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIPortraitBlurV2 customAttributes]

  // instance methods
  -[CIPortraitBlurV2 outputImage]
  -[CIPortraitBlurV2 inputImage]
  -[CIPortraitBlurV2 setInputImage:]
  -[CIPortraitBlurV2 inputScale]
  -[CIPortraitBlurV2 setInputScale:]
  -[CIPortraitBlurV2 inputTuningParameters]
  -[CIPortraitBlurV2 setInputTuningParameters:]
  -[CIPortraitBlurV2 inputMatteImage]
  -[CIPortraitBlurV2 inputDraftMode]
  -[CIPortraitBlurV2 setInputDraftMode:]
  -[CIPortraitBlurV2 inputBlurmapImage]
  -[CIPortraitBlurV2 setInputBlurmapImage:]
  -[CIPortraitBlurV2 setInputMatteImage:]
  -[CIPortraitBlurV2 inputLumaNoiseScale]
  -[CIPortraitBlurV2 setInputLumaNoiseScale:]
  -[CIPortraitBlurV2 inputAperture]
  -[CIPortraitBlurV2 setInputAperture:]
  -[CIPortraitBlurV2 inputShape]
  -[CIPortraitBlurV2 setInputShape:]
  -[CIPortraitBlurV2 sensorSize]
  -[CIPortraitBlurV2 effectiveScale]


CIPortraitBlurCombiner : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBlurImage
 @property  CIImage *inputMatteImage
 @property  NSDictionary *inputTuningParameters

  // instance methods
  -[CIPortraitBlurCombiner outputImage]
  -[CIPortraitBlurCombiner inputImage]
  -[CIPortraitBlurCombiner setInputImage:]
  -[CIPortraitBlurCombiner inputTuningParameters]
  -[CIPortraitBlurCombiner setInputTuningParameters:]
  -[CIPortraitBlurCombiner inputMatteImage]
  -[CIPortraitBlurCombiner _ourBlendKernelMetal]
  -[CIPortraitBlurCombiner setInputMatteImage:]
  -[CIPortraitBlurCombiner nonMetalKernel]
  -[CIPortraitBlurCombiner nonMetalKernelYCC]
  -[CIPortraitBlurCombiner _blendKernel:]
  -[CIPortraitBlurCombiner inputBlurImage]
  -[CIPortraitBlurCombiner setInputBlurImage:]


CIPremultiply : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIPremultiply customAttributes]

  // instance methods
  -[CIPremultiply outputImage]
  -[CIPremultiply inputImage]
  -[CIPremultiply setInputImage:]


CIUnpremultiply : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIUnpremultiply customAttributes]

  // instance methods
  -[CIUnpremultiply outputImage]
  -[CIUnpremultiply inputImage]
  -[CIUnpremultiply setInputImage:]


CIRAWFilterImpl : CIFilter
 @property  NSDictionary *rawDictionary
 @property  NSDictionary *rawReconstructionDefaultsDictionary
 @property  NSNumber *sushiMode
 @property  int rawMajorVersion
 @property  NSArray *filters
 @property  int subsampling
 @property  {CGSize=dd} nativeSize

  // class methods
  +[CIRAWFilterImpl automaticallyNotifiesObserversForKey:]
  +[CIRAWFilterImpl keyPathsForValuesAffectingValueForKey:]
  +[CIRAWFilterImpl customAttributes]
  +[CIRAWFilterImpl filterWithImageURL:options:]
  +[CIRAWFilterImpl filterWithImageData:options:]
  +[CIRAWFilterImpl filterWithCVPixelBuffer:properties:options:]
  +[CIRAWFilterImpl supportedRawCameraModels]
  +[CIRAWFilterImpl optionKeys]
  +[CIRAWFilterImpl applyMatrix:toCIImage:]
  +[CIRAWFilterImpl convertNeutralX:y:toTemperature:tint:]
  +[CIRAWFilterImpl convertNeutralTemperature:tint:toX:y:]

  // instance methods
  -[CIRAWFilterImpl init]
  -[CIRAWFilterImpl dealloc]
  -[CIRAWFilterImpl copyWithZone:]
  -[CIRAWFilterImpl outputImage]
  -[CIRAWFilterImpl inputImage]
  -[CIRAWFilterImpl setInputImage:]
  -[CIRAWFilterImpl setDefaults]
  -[CIRAWFilterImpl inputBias]
  -[CIRAWFilterImpl setInputBias:]
  -[CIRAWFilterImpl setInputEV:]
  -[CIRAWFilterImpl outputKeys]
  -[CIRAWFilterImpl setInputDraftMode:]
  -[CIRAWFilterImpl initWithImageSource:options:]
  -[CIRAWFilterImpl initWithCVPixelBuffer:properties:options:]
  -[CIRAWFilterImpl defaultInputLuminanceNoiseReductionAmount]
  -[CIRAWFilterImpl setInputLuminanceNoiseReductionAmount:]
  -[CIRAWFilterImpl defaultInputColorNoiseReductionAmount]
  -[CIRAWFilterImpl setInputColorNoiseReductionAmount:]
  -[CIRAWFilterImpl defaultInputNoiseReductionContrastAmount]
  -[CIRAWFilterImpl setInputNoiseReductionContrastAmount:]
  -[CIRAWFilterImpl defaultInputNoiseReductionDetailAmount]
  -[CIRAWFilterImpl setInputNoiseReductionDetailAmount:]
  -[CIRAWFilterImpl defaultInputNoiseReductionSharpnessAmount]
  -[CIRAWFilterImpl setInputNoiseReductionSharpnessAmount:]
  -[CIRAWFilterImpl defaultInputMoireAmount]
  -[CIRAWFilterImpl setInputMoireAmount:]
  -[CIRAWFilterImpl defaultInputEnableVendorLensCorrection]
  -[CIRAWFilterImpl setInputEnableVendorLensCorrection:]
  -[CIRAWFilterImpl setInputIgnoreOrientation:]
  -[CIRAWFilterImpl setInputEnableNoiseTracking:]
  -[CIRAWFilterImpl setInputNoiseReductionAmount:]
  -[CIRAWFilterImpl setInputEnableSharpening:]
  -[CIRAWFilterImpl setInputScaleFactor:]
  -[CIRAWFilterImpl setInputBoost:]
  -[CIRAWFilterImpl defaultBoostShadowAmount]
  -[CIRAWFilterImpl setInputBoostShadowAmount:]
  -[CIRAWFilterImpl defaultImageOrientation]
  -[CIRAWFilterImpl setInputImageOrientation:]
  -[CIRAWFilterImpl defaultDecoderVersion]
  -[CIRAWFilterImpl setInputDecoderVersion:]
  -[CIRAWFilterImpl defaultInputBaselineExposureAmount]
  -[CIRAWFilterImpl setInputBaselineExposure:]
  -[CIRAWFilterImpl defaultInputBiasAmount]
  -[CIRAWFilterImpl defaultInputHueMagMRAmount]
  -[CIRAWFilterImpl setInputHueMagMR:]
  -[CIRAWFilterImpl defaultInputHueMagRYAmount]
  -[CIRAWFilterImpl setInputHueMagRY:]
  -[CIRAWFilterImpl defaultInputHueMagYGAmount]
  -[CIRAWFilterImpl setInputHueMagYG:]
  -[CIRAWFilterImpl defaultInputHueMagGCAmount]
  -[CIRAWFilterImpl setInputHueMagGC:]
  -[CIRAWFilterImpl defaultInputHueMagCBAmount]
  -[CIRAWFilterImpl setInputHueMagCB:]
  -[CIRAWFilterImpl defaultInputHueMagBMAmount]
  -[CIRAWFilterImpl setInputHueMagBM:]
  -[CIRAWFilterImpl setInputDisableGamutMap:]
  -[CIRAWFilterImpl defaultNeutralTemperature]
  -[CIRAWFilterImpl setInputNeutralTemperature:]
  -[CIRAWFilterImpl defaultNeutralTint]
  -[CIRAWFilterImpl setInputNeutralTint:]
  -[CIRAWFilterImpl defaultNeutralChromaticityX]
  -[CIRAWFilterImpl setInputNeutralChromaticityX:]
  -[CIRAWFilterImpl defaultNeutralChromaticityY]
  -[CIRAWFilterImpl setInputNeutralChromaticityY:]
  -[CIRAWFilterImpl defaultInputEnableEDRMode]
  -[CIRAWFilterImpl setInputEnableEDRMode:]
  -[CIRAWFilterImpl inputNeutralChromaticityX]
  -[CIRAWFilterImpl inputNeutralChromaticityY]
  -[CIRAWFilterImpl inputNeutralTemperature]
  -[CIRAWFilterImpl inputNeutralTint]
  -[CIRAWFilterImpl inputNeutralLocation]
  -[CIRAWFilterImpl inputBaselineExposure]
  -[CIRAWFilterImpl inputDisableGamutMap]
  -[CIRAWFilterImpl inputHueMagMR]
  -[CIRAWFilterImpl inputHueMagRY]
  -[CIRAWFilterImpl inputHueMagYG]
  -[CIRAWFilterImpl inputHueMagGC]
  -[CIRAWFilterImpl inputHueMagCB]
  -[CIRAWFilterImpl inputHueMagBM]
  -[CIRAWFilterImpl inputLinearSpaceFilter]
  -[CIRAWFilterImpl rawReconstructionDefaultsDictionary]
  -[CIRAWFilterImpl rawOptions]
  -[CIRAWFilterImpl rawDictionary]
  -[CIRAWFilterImpl whitePointArray]
  -[CIRAWFilterImpl whitePoint]
  -[CIRAWFilterImpl getWhitePointVectorsR:g:b:]
  -[CIRAWFilterImpl sushiMode]
  -[CIRAWFilterImpl invalidateFilters]
  -[CIRAWFilterImpl rawOptionsWithSubsampling:]
  -[CIRAWFilterImpl subsampling]
  -[CIRAWFilterImpl transformedImageIgnoringOrientation:]
  -[CIRAWFilterImpl filters]
  -[CIRAWFilterImpl nativeSize]
  -[CIRAWFilterImpl getScaleTransform:]
  -[CIRAWFilterImpl getOrientationTransform:]
  -[CIRAWFilterImpl rawMajorVersion]
  -[CIRAWFilterImpl invalidateInputImage]
  -[CIRAWFilterImpl setTempTintAtPoint:]
  -[CIRAWFilterImpl supportedDecoderVersions]
  -[CIRAWFilterImpl RAWFiltersValueForKeyPath:]
  -[CIRAWFilterImpl setInputNeutralLocation:]
  -[CIRAWFilterImpl supportedSushiModes]
  -[CIRAWFilterImpl setInputLinearSpaceFilter:]
  -[CIRAWFilterImpl activeKeys]
  -[CIRAWFilterImpl outputNativeSize]
  -[CIRAWFilterImpl updateTemperatureAndTint]
  -[CIRAWFilterImpl updateChomaticityXAndY]
  -[CIRAWFilterImpl setInputRequestedSushiMode:]


CIRAWTemperatureAdjust : CIFilter
  // instance methods
  -[CIRAWTemperatureAdjust outputImage]


CIRAWGamutMapping : CIFilter
  // instance methods
  -[CIRAWGamutMapping outputImage]


CIPerspectiveAutoCalc : NSObject
 @property  double pitch
 @property  double yaw
 @property  double roll
 @property  double confidence
 @property  BOOL generateDebugImage
 @property  CIImage *debugImage
 @property  long long pitchFailureReason
 @property  long long yawFailureReason

  // instance methods
  -[CIPerspectiveAutoCalc dealloc]
  -[CIPerspectiveAutoCalc confidence]
  -[CIPerspectiveAutoCalc initWithContext:image:config:]
  -[CIPerspectiveAutoCalc compute]
  -[CIPerspectiveAutoCalc pitch]
  -[CIPerspectiveAutoCalc yaw]
  -[CIPerspectiveAutoCalc roll]
  -[CIPerspectiveAutoCalc generateDebugImage]
  -[CIPerspectiveAutoCalc setGenerateDebugImage:]
  -[CIPerspectiveAutoCalc debugImage]
  -[CIPerspectiveAutoCalc pitchFailureReason]
  -[CIPerspectiveAutoCalc yawFailureReason]


CIRandomGenerator : CIFilter
  // class methods
  +[CIRandomGenerator customAttributes]

  // instance methods
  -[CIRandomGenerator _kernel]
  -[CIRandomGenerator outputImage]


CIRectangleDetector : CIDetector
 @property  CIContext *context

  // instance methods
  -[CIRectangleDetector dealloc]
  -[CIRectangleDetector finalize]
  -[CIRectangleDetector context]
  -[CIRectangleDetector setContext:]
  -[CIRectangleDetector featuresInImage:options:]
  -[CIRectangleDetector initWithContext:options:]
  -[CIRectangleDetector featuresInImage:]
  -[CIRectangleDetector releaseResources]


CIRectangleGenerator : CIFilter
  // class methods
  +[CIRectangleGenerator customAttributes]

  // instance methods
  -[CIRectangleGenerator outputImage]
  -[CIRectangleGenerator _CIRectangle]


CIRoundedRectangleGenerator : CIFilter
 @property  CIVector *inputExtent
 @property  NSNumber *inputRadius
 @property  CIColor *inputColor

  // class methods
  +[CIRoundedRectangleGenerator customAttributes]

  // instance methods
  -[CIRoundedRectangleGenerator outputImage]
  -[CIRoundedRectangleGenerator inputExtent]
  -[CIRoundedRectangleGenerator setInputExtent:]
  -[CIRoundedRectangleGenerator inputRadius]
  -[CIRoundedRectangleGenerator setInputRadius:]
  -[CIRoundedRectangleGenerator inputColor]
  -[CIRoundedRectangleGenerator setInputColor:]


CIRedEyeCorrection : CIFilter
 @property  CIImage *inputImage
 @property  NSString *inputCameraModel
 @property  NSDictionary *inputCorrectionInfo

  // instance methods
  -[CIRedEyeCorrection outputImage]
  -[CIRedEyeCorrection inputImage]
  -[CIRedEyeCorrection setInputImage:]
  -[CIRedEyeCorrection setDefaults]
  -[CIRedEyeCorrection _isIdentity]
  -[CIRedEyeCorrection inputCameraModel]
  -[CIRedEyeCorrection setInputCameraModel:]
  -[CIRedEyeCorrection inputCorrectionInfo]
  -[CIRedEyeCorrection setInputCorrectionInfo:]


CIRedEyeCorrections : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  NSString *inputCameraModel
 @property  NSArray *inputCorrectionInfo

  // instance methods
  -[CIRedEyeCorrections outputImage]
  -[CIRedEyeCorrections inputImage]
  -[CIRedEyeCorrections setInputImage:]
  -[CIRedEyeCorrections _outputProperties]
  -[CIRedEyeCorrections _initFromProperties:]
  -[CIRedEyeCorrections setDefaults]
  -[CIRedEyeCorrections _isIdentity]
  -[CIRedEyeCorrections inputCameraModel]
  -[CIRedEyeCorrections setInputCameraModel:]
  -[CIRedEyeCorrections inputCorrectionInfo]
  -[CIRedEyeCorrections setInputCorrectionInfo:]


CIRedEyeRepair2 : NSObject
  // class methods
  +[CIRedEyeRepair2 fileExistsAtPath:]
  +[CIRedEyeRepair2 pathWithDirectory:file:]
  +[CIRedEyeRepair2 drawBitmask:withOval:index:comparison:salientMode:debugComments:]
  +[CIRedEyeRepair2 initAdjustmentData:]
  +[CIRedEyeRepair2 processAdjustmentData:intoRadiusChange:andShift:whichRadius:radiusValue:debugComments:]
  +[CIRedEyeRepair2 directoryExistsAtPath:]
  +[CIRedEyeRepair2 createDirectoryAtPath:]
  +[CIRedEyeRepair2 directoryContents:]
  +[CIRedEyeRepair2 deleteAtPath:]
  +[CIRedEyeRepair2 renameFile:toFile:inDirectory:]
  +[CIRedEyeRepair2 drawBitmask:index:debugComments:]
  +[CIRedEyeRepair2 graphBitmaskGrowData:size:index:debugComments:]
  +[CIRedEyeRepair2 bitmask:debugComments:toOval:]
  +[CIRedEyeRepair2 supportRectangleWithFaceArray:options:]
  +[CIRedEyeRepair2 supportRectangleWithRepair:imageSize:]
  +[CIRedEyeRepair2 faceContextWithFaceArray:index:]
  +[CIRedEyeRepair2 ovalOutlinePointWithT:OC:]
  +[CIRedEyeRepair2 circleRadiusAndCenter:withPoint1:point2:andPoint3:]
  +[CIRedEyeRepair2 LHSpoint:isToLeftOfLineFromPoint:toPoint:]
  +[CIRedEyeRepair2 start12BitRandom:]
  +[CIRedEyeRepair2 radiusOfEllipseInDirection:a:b:angle:]
  +[CIRedEyeRepair2 next12BitRandom]
  +[CIRedEyeRepair2 applyFalloffFunction:toAlpha:discFactor:]
  +[CIRedEyeRepair2 adjacencyScoreInBitmask:atColumn:row:radius:]
  +[CIRedEyeRepair2 summarizeBitmap:withBitmask:radius:rect:returningInsideSummary:outsideBorderSummary:]
  +[CIRedEyeRepair2 computeBorderPoints:rect:inside:outside:]
  +[CIRedEyeRepair2 averageDifferenceBetweenInsideSummary:andOutsideBorderSummary:]
  +[CIRedEyeRepair2 printBorder:name:]
  +[CIRedEyeRepair2 countOfAdjacentValues:in:ofValue:atCol:row:radius:addingTo:]
  +[CIRedEyeRepair2 verifyBorderPoints:rect:inside:outside:error:]
  +[CIRedEyeRepair2 analyzeCoarseGrowBitmaskData:dataSize:context:]
  +[CIRedEyeRepair2 analyzeFineGrowBitmaskData:dataSize:context:]
  +[CIRedEyeRepair2 insertIntoProminenceVettingHopper:measure:max:outside:confidence:distance:area:borderMax:borderMin:row:column:]
  +[CIRedEyeRepair2 imageWithREDEYEFORMATBitmap:]
  +[CIRedEyeRepair2 printProminenceSearchResultsWithTitle:hopperElement:maxData:toLine:maxLength:]
  +[CIRedEyeRepair2 ovalBoundsWithOC:]
  +[CIRedEyeRepair2 intersectRayOrigin:unitVector:withEllipseOrigin:a:b:angle:]

  // instance methods
  -[CIRedEyeRepair2 dealloc]
  -[CIRedEyeRepair2 initWithExternalBuffer:subRectangle:rowBytes:options:]
  -[CIRedEyeRepair2 autoRepairWithFaceArray:]
  -[CIRedEyeRepair2 failureCauses]
  -[CIRedEyeRepair2 repairArray]
  -[CIRedEyeRepair2 inverseImageTransformForOrientation:]
  -[CIRedEyeRepair2 executeRepair:]
  -[CIRedEyeRepair2 repairExternalBuffer]
  -[CIRedEyeRepair2 stringOption:in:theDefault:]
  -[CIRedEyeRepair2 intOption:in:theDefault:]
  -[CIRedEyeRepair2 boolOption:in:theDefault:]
  -[CIRedEyeRepair2 floatOption:in:theDefault:]
  -[CIRedEyeRepair2 extentOption:in:theDefault:]
  -[CIRedEyeRepair2 setUpWithOptions:]
  -[CIRedEyeRepair2 bitmapRectWithImageSubRectangle:]
  -[CIRedEyeRepair2 printFaceArray]
  -[CIRedEyeRepair2 updateWithFaceIndex:]
  -[CIRedEyeRepair2 characterizePupilAndSpecularShine]
  -[CIRedEyeRepair2 alignPupils]
  -[CIRedEyeRepair2 doRepairExtraction]
  -[CIRedEyeRepair2 transformRepairArray:]
  -[CIRedEyeRepair2 globalBitmapPointWithDictionaryPoint:]
  -[CIRedEyeRepair2 globalBitmapRectWithDictionaryRectArray:]
  -[CIRedEyeRepair2 bitmaskWithDictionary:]
  -[CIRedEyeRepair2 unpackGlobalRepairDictionary:]
  -[CIRedEyeRepair2 dictionaryPointWithGlobalBitmapPoint:]
  -[CIRedEyeRepair2 dictionaryRectArrayWithGlobalBitmapRect:]
  -[CIRedEyeRepair2 dictionaryWithBitmask:print:]
  -[CIRedEyeRepair2 packGlobalRepairDictionary:print:]
  -[CIRedEyeRepair2 packRepairDictionary:print:]
  -[CIRedEyeRepair2 leftHandedTransform:ofPoint:]
  -[CIRedEyeRepair2 transformGlobalRepairRecord:transform:]
  -[CIRedEyeRepair2 mutableCopyOfArray:]
  -[CIRedEyeRepair2 unpackRepairDictionary:]
  -[CIRedEyeRepair2 validateRepair:]
  -[CIRedEyeRepair2 computeSyntheticPupilBitmapWithRepair:returningBitmap:atImageLocation:]
  -[CIRedEyeRepair2 computeFilteredOvalBitmapWithRepair:returningBitmap:atImageLocation:]
  -[CIRedEyeRepair2 computeFilteredArbitraryBitmapWithRepair:returningBitmap:atImageLocation:]
  -[CIRedEyeRepair2 setInspector:]
  -[CIRedEyeRepair2 repairMap]
  -[CIRedEyeRepair2 repairRect]
  -[CIRedEyeRepair2 bitmapPointWithDictionaryPoint:]
  -[CIRedEyeRepair2 dictionaryPointWithBitmapPoint:]
  -[CIRedEyeRepair2 bitmapRectWithDictionaryRectArray:]
  -[CIRedEyeRepair2 dictionaryRectArrayWithBitmapRect:]
  -[CIRedEyeRepair2 repairWithSide:]
  -[CIRedEyeRepair2 packRepairDictionary:]
  -[CIRedEyeRepair2 printExecuteRepairError:]
  -[CIRedEyeRepair2 falloffFunctionName:]
  -[CIRedEyeRepair2 printRepair:]
  -[CIRedEyeRepair2 localComputeBitmaskWithChannel:x:y:options:eyeCase:returningMaxData:isSpecularData:maxSpecularData:specularBitmask:]
  -[CIRedEyeRepair2 improveBitmask:radius:inChannel:rect:]
  -[CIRedEyeRepair2 facePoseYawAngle]
  -[CIRedEyeRepair2 findProminenceWithSide:record:]
  -[CIRedEyeRepair2 averageColorUnderBitmask:rect:eye:HSV:minSE:avgSE:maxSE:satSE:satSEFraction:satSERect:]
  -[CIRedEyeRepair2 gatherFaceStatistics]
  -[CIRedEyeRepair2 allocateAndPopulateBitmaps]
  -[CIRedEyeRepair2 eyeOpennessWithEyeIndex:]
  -[CIRedEyeRepair2 initChoiceRecord:type:title:plusWhiteTitle:name:canPlusWhite:canSpecular:metrics:]
  -[CIRedEyeRepair2 bitmaskWithSharpeningEdgeInRect:]
  -[CIRedEyeRepair2 acquireProminences:onSide:metrics:]
  -[CIRedEyeRepair2 winningProminence:metrics:]
  -[CIRedEyeRepair2 repairWithProminence:white:onSide:metrics:rect:]
  -[CIRedEyeRepair2 freeChoiceRecord:]
  -[CIRedEyeRepair2 freeBitmaps]
  -[CIRedEyeRepair2 pupilFractionWithEyeIndex:andPupilCenter:]
  -[CIRedEyeRepair2 pupilAspectWithEyeIndex:andPupilCenter:]
  -[CIRedEyeRepair2 is2MImageWithBase:]
  -[CIRedEyeRepair2 needsEyelidOcclusionWithBase:side:upper:]
  -[CIRedEyeRepair2 hasBeautyMarkWithBase:side:]
  -[CIRedEyeRepair2 extractIrisColors:]
  -[CIRedEyeRepair2 analyzeIrisColors:side:]


CIRedEyeRepair3 : NSObject
  // class methods
  +[CIRedEyeRepair3 supportRectangleWithFaceArray:options:]
  +[CIRedEyeRepair3 supportRectangleWithRepair:imageSize:]
  +[CIRedEyeRepair3 yawAngleWithFaceDictionary:]
  +[CIRedEyeRepair3 bitmapRect:point:polygon:andDistMatrix:forEye:inFaceDictionary:settings:]
  +[CIRedEyeRepair3 faceContext:withFaceArray:index:settings:]
  +[CIRedEyeRepair3 settingsWithOptions:]
  +[CIRedEyeRepair3 bitmapRectWithImageSubRectangle:settings:]
  +[CIRedEyeRepair3 insertIntoThreadHopper:index:recChannel:hue:saturation:luminance:shapeMetricTotal:xPosition:]
  +[CIRedEyeRepair3 insertIntoConnectionHopper:index1:drop1:index2:drop2:score:]

  // instance methods
  -[CIRedEyeRepair3 dealloc]
  -[CIRedEyeRepair3 initWithExternalBuffer:subRectangle:rowBytes:options:]
  -[CIRedEyeRepair3 autoRepairWithFaceArray:]
  -[CIRedEyeRepair3 repairArray]
  -[CIRedEyeRepair3 inverseImageTransformForOrientation:]
  -[CIRedEyeRepair3 executeRepair:]
  -[CIRedEyeRepair3 repairExternalBuffer]
  -[CIRedEyeRepair3 printFaceArray]
  -[CIRedEyeRepair3 updateWithFaceIndex:]
  -[CIRedEyeRepair3 transformRepairArray:]
  -[CIRedEyeRepair3 globalBitmapPointWithDictionaryPoint:]
  -[CIRedEyeRepair3 globalBitmapRectWithDictionaryRectArray:]
  -[CIRedEyeRepair3 dictionaryPointWithGlobalBitmapPoint:]
  -[CIRedEyeRepair3 dictionaryRectArrayWithGlobalBitmapRect:]
  -[CIRedEyeRepair3 leftHandedTransform:ofPoint:]
  -[CIRedEyeRepair3 mutableCopyOfArray:]
  -[CIRedEyeRepair3 setInspector:]
  -[CIRedEyeRepair3 repairMap]
  -[CIRedEyeRepair3 repairRect]
  -[CIRedEyeRepair3 bitmapPointWithDictionaryPoint:]
  -[CIRedEyeRepair3 dictionaryPointWithBitmapPoint:]
  -[CIRedEyeRepair3 bitmapRectWithDictionaryRectArray:]
  -[CIRedEyeRepair3 dictionaryRectArrayWithBitmapRect:]
  -[CIRedEyeRepair3 repairWithSide:]
  -[CIRedEyeRepair3 centroidWithConvexHull:]
  -[CIRedEyeRepair3 dictionaryPointArrayWithEyeBitmapPoint:]
  -[CIRedEyeRepair3 dictionaryPointArrayWithBitmapPoint:]
  -[CIRedEyeRepair3 dictionaryPointArrayWithGlobalBitmapPoint:]
  -[CIRedEyeRepair3 globalBitmapPointWithDictionaryPointArray:]
  -[CIRedEyeRepair3 unpackToGlobalRepairDictionary:convexHull:facts:]
  -[CIRedEyeRepair3 stringWithRER3Error:]
  -[CIRedEyeRepair3 gatherFaceStatistics:]
  -[CIRedEyeRepair3 repairDictionary:withEyeIndex:]
  -[CIRedEyeRepair3 transformGlobalsWithTransform:]
  -[CIRedEyeRepair3 transformConvexHull:withTransform:]
  -[CIRedEyeRepair3 packGlobalRepairDictionary:withConvexHull:facts:]
  -[CIRedEyeRepair3 executeRepairWithRepairDictionary:]
  -[CIRedEyeRepair3 bitmapPointWithDictionaryPointArray:]
  -[CIRedEyeRepair3 saveRepairDictionary:withConvexHull:facts:]
  -[CIRedEyeRepair3 openRepairDictionary:convexHull:facts:]
  -[CIRedEyeRepair3 start12BitRandom:]
  -[CIRedEyeRepair3 next12BitRandom]
  -[CIRedEyeRepair3 termShapePoints:]
  -[CIRedEyeRepair3 point:toGridRow:column:]
  -[CIRedEyeRepair3 removeThreadAtIndex:]
  -[CIRedEyeRepair3 gatherThreadInfo:]
  -[CIRedEyeRepair3 lookForPoint:onLine:nearestPoint:]
  -[CIRedEyeRepair3 forAllGridPointsNear:withinRadius:do:context:]
  -[CIRedEyeRepair3 initHull:withOrientation:]
  -[CIRedEyeRepair3 termHull:]
  -[CIRedEyeRepair3 addPoint:toHull:]
  -[CIRedEyeRepair3 trimConcaveFromHull:]
  -[CIRedEyeRepair3 trimEndPointFromHull:]
  -[CIRedEyeRepair3 trimStartPointFromHull:]
  -[CIRedEyeRepair3 isConvex:]
  -[CIRedEyeRepair3 renderHull:toBitmap:]
  -[CIRedEyeRepair3 printThreadWithIndex:]
  -[CIRedEyeRepair3 newThread:]
  -[CIRedEyeRepair3 putThreadAtIndex:]
  -[CIRedEyeRepair3 printThreadsOnlyClosed:message:]
  -[CIRedEyeRepair3 forAllGridThreadsNear:withinRadius:do:context:]
  -[CIRedEyeRepair3 printConnectionHopper:message:]
  -[CIRedEyeRepair3 connectThreads:drop1:and:drop2:]
  -[CIRedEyeRepair3 computeLengthsAnglesAndDeltaAnglesForShape:]
  -[CIRedEyeRepair3 newShape:]
  -[CIRedEyeRepair3 initShapePoints:withMaxPoints:]
  -[CIRedEyeRepair3 addPoint:toShapePoints:]
  -[CIRedEyeRepair3 updatedCheckpoint:withCheckpoint:checkpointIndex:angle:width:height:inChannel:threadIndex:returningEdgeWidth:]
  -[CIRedEyeRepair3 newShape:byInterpolatingBetweenCheckpoints:nc:usingVectorField:]
  -[CIRedEyeRepair3 removeRedundantPointsFromShape:closerThan:]
  -[CIRedEyeRepair3 removeSmallBumpsFromShape:center:threshold:]
  -[CIRedEyeRepair3 removeSpikesFromShape:]
  -[CIRedEyeRepair3 improvedShape:withShape:]
  -[CIRedEyeRepair3 insertPoint:andDirection:intoGrid:]
  -[CIRedEyeRepair3 closeThreadIndex:usingVectorField:]
  -[CIRedEyeRepair3 attemptClosureOfThreadIndex:]
  -[CIRedEyeRepair3 threadCentroid:]
  -[CIRedEyeRepair3 threadSignedArea:centroid:]
  -[CIRedEyeRepair3 shape:withThreadAtIndex:centroid:]
  -[CIRedEyeRepair3 slidingWindowAnalysisOfShape:into:]
  -[CIRedEyeRepair3 copyShape:into:transform:height:]
  -[CIRedEyeRepair3 convexHull:ofOriented:shape:]
  -[CIRedEyeRepair3 measureHull:majorAxis:majorTo:majorDiameter:minorAxis:minorTo:minorDiameter:]
  -[CIRedEyeRepair3 color:underConvexHull:saturated:]
  -[CIRedEyeRepair3 RGBtoHSV:]
  -[CIRedEyeRepair3 hopperElement:isMoreScleraThanElement:]
  -[CIRedEyeRepair3 swapHopperElement:withElement:]
  -[CIRedEyeRepair3 initGridWithBitmap:scale:]
  -[CIRedEyeRepair3 edgePoint:withBitmap:center:perp:]
  -[CIRedEyeRepair3 regressionWithPointIndex:]
  -[CIRedEyeRepair3 replacePointAndDirection:]
  -[CIRedEyeRepair3 nextPointIndexWithPointIndex:]
  -[CIRedEyeRepair3 linkUpPointIndex:toPointIndex:]
  -[CIRedEyeRepair3 findThreadsInGrid]
  -[CIRedEyeRepair3 connectThreadsInGrid]
  -[CIRedEyeRepair3 recognizeThreadsWinningThreadIndex:info:]
  -[CIRedEyeRepair3 copyGridInto:transform:height:]
  -[CIRedEyeRepair3 convexHull:ofOriented:threadIndex:]
  -[CIRedEyeRepair3 termGrid]
  -[CIRedEyeRepair3 condenseFourChannelRecognitionMap:intoOneChanneMap:]
  -[CIRedEyeRepair3 magnitudeMap:fromGabor:]
  -[CIRedEyeRepair3 renderEyePolygonToBitmap:]
  -[CIRedEyeRepair3 analyzeMask:usingConvexHull:producingOptimizedMask:]
  -[CIRedEyeRepair3 widenedHull:withHull:by:]
  -[CIRedEyeRepair3 renderConvexHull:distance:fieldToBitmap:]
  -[CIRedEyeRepair3 initBitmaps]
  -[CIRedEyeRepair3 prepareTransformWithEyeIndex:]
  -[CIRedEyeRepair3 prepareBitmapsWithString:]
  -[CIRedEyeRepair3 prominenceConvexHull:facts:]
  -[CIRedEyeRepair3 termBitmaps]
  -[CIRedEyeRepair3 prepareMasksWithConvexHull:]
  -[CIRedEyeRepair3 focusStatsWithBitmap:IOD:]
  -[CIRedEyeRepair3 isBlurryWithFocusStats:]


CIFaceCoreDetector : CIDetector
 @property  CIContext *context
 @property  FCRFaceDetector *faceCoreDetector

  // instance methods
  -[CIFaceCoreDetector dealloc]
  -[CIFaceCoreDetector finalize]
  -[CIFaceCoreDetector context]
  -[CIFaceCoreDetector setContext:]
  -[CIFaceCoreDetector featuresInImage:options:]
  -[CIFaceCoreDetector initWithContext:options:]
  -[CIFaceCoreDetector featuresInImage:]
  -[CIFaceCoreDetector setFaceCoreDetector:]
  -[CIFaceCoreDetector adjustedImageFromImage:orientation:inverseCTM:]
  -[CIFaceCoreDetector createFaceCoreDataFromCIImage:width:height:]
  -[CIFaceCoreDetector faceCoreDetector]
  -[CIFaceCoreDetector ctmForImageWithBounds:orientation:]


CIReductionFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent

  // class methods
  +[CIReductionFilter customAttributes]

  // instance methods
  -[CIReductionFilter outputImage]
  -[CIReductionFilter inputImage]
  -[CIReductionFilter setInputImage:]
  -[CIReductionFilter inputExtent]
  -[CIReductionFilter setInputExtent:]
  -[CIReductionFilter _reduceCrop]
  -[CIReductionFilter offsetAndCrop]


CIAreaAverage : CIReductionFilter
  // instance methods
  -[CIAreaAverage outputImage]
  -[CIAreaAverage outputImageNonMPS]
  -[CIAreaAverage outputImageMPS]


CIColumnAverage : CIReductionFilter
  // instance methods
  -[CIColumnAverage outputImage]


CIRowAverage : CIColumnAverage
  // instance methods
  -[CIRowAverage outputImage]


CIAreaMinMax : CIReductionFilter
  // class methods
  +[CIAreaMinMax customAttributes]

  // instance methods
  -[CIAreaMinMax outputImage]
  -[CIAreaMinMax outputImageNonMPS]
  -[CIAreaMinMax outputImageMPS]


CIAreaMaximum : CIReductionFilter
  // instance methods
  -[CIAreaMaximum outputImage]
  -[CIAreaMaximum _reduce2X2]
  -[CIAreaMaximum _reduce1X4]
  -[CIAreaMaximum _reduce4X1]


CIAreaMinimum : CIReductionFilter
  // instance methods
  -[CIAreaMinimum outputImage]
  -[CIAreaMinimum _reduce2X2]
  -[CIAreaMinimum _reduce1X4]
  -[CIAreaMinimum _reduce4X1]


CIAreaMaximumAlpha : CIReductionFilter
  // instance methods
  -[CIAreaMaximumAlpha outputImage]
  -[CIAreaMaximumAlpha _reduce2X2]
  -[CIAreaMaximumAlpha _reduce1X4]
  -[CIAreaMaximumAlpha _reduce4X1]


CIAreaMinimumAlpha : CIAreaMaximumAlpha
  // instance methods
  -[CIAreaMinimumAlpha _reduce2X2]
  -[CIAreaMinimumAlpha _reduce1X4]
  -[CIAreaMinimumAlpha _reduce4X1]


CIAreaMinMaxRed : CIReductionFilter
  // class methods
  +[CIAreaMinMaxRed customAttributes]

  // instance methods
  -[CIAreaMinMaxRed outputImage]
  -[CIAreaMinMaxRed _reduceCrop]
  -[CIAreaMinMaxRed _reduce2X2]
  -[CIAreaMinMaxRed _reduce1X4]
  -[CIAreaMinMaxRed _reduce4X1]
  -[CIAreaMinMaxRed _reduce4x4]


CIAreaMinMaxNormalize : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent

  // class methods
  +[CIAreaMinMaxNormalize customAttributes]

  // instance methods
  -[CIAreaMinMaxNormalize outputImage]
  -[CIAreaMinMaxNormalize inputImage]
  -[CIAreaMinMaxNormalize setInputImage:]
  -[CIAreaMinMaxNormalize inputExtent]
  -[CIAreaMinMaxNormalize setInputExtent:]


CIAreaMinMaxRedNormalize : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputExtent

  // class methods
  +[CIAreaMinMaxRedNormalize customAttributes]

  // instance methods
  -[CIAreaMinMaxRedNormalize outputImage]
  -[CIAreaMinMaxRedNormalize inputImage]
  -[CIAreaMinMaxRedNormalize setInputImage:]
  -[CIAreaMinMaxRedNormalize inputExtent]
  -[CIAreaMinMaxRedNormalize setInputExtent:]


CIKMeans : CIReductionFilter
 @property  CIImage *inputMeans
 @property  NSNumber *inputCount
 @property  NSNumber *inputPasses
 @property  NSNumber *inputPerceptual

  // class methods
  +[CIKMeans customAttributes]

  // instance methods
  -[CIKMeans outputImage]
  -[CIKMeans inputCount]
  -[CIKMeans setInputCount:]
  -[CIKMeans inputPasses]
  -[CIKMeans inputPerceptual]
  -[CIKMeans setInputPerceptual:]
  -[CIKMeans _combine:]
  -[CIKMeans _kernelKmeans]
  -[CIKMeans defuse:seed:]
  -[CIKMeans setInputPasses:]
  -[CIKMeans inputMeans]
  -[CIKMeans setInputMeans:]


CIAreaCentroid : CIReductionFilter
  // class methods
  +[CIAreaCentroid customAttributes]

  // instance methods
  -[CIAreaCentroid outputImage]
  -[CIAreaCentroid _kernelWeightedCoordinate]
  -[CIAreaCentroid _kernelCentroid]


CIAreaRedCentroid : CIAreaCentroid
  // class methods
  +[CIAreaRedCentroid customAttributes]

  // instance methods
  -[CIAreaRedCentroid outputImage]


CIAreaRedRadialCentroid : CIAreaRedCentroid
 @property  CIImage *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputRadialMode
 @property  NSNumber *inputMinWeight

  // class methods
  +[CIAreaRedRadialCentroid customAttributes]

  // instance methods
  -[CIAreaRedRadialCentroid outputImage]
  -[CIAreaRedRadialCentroid inputRadius]
  -[CIAreaRedRadialCentroid setInputRadius:]
  -[CIAreaRedRadialCentroid inputCenter]
  -[CIAreaRedRadialCentroid setInputCenter:]
  -[CIAreaRedRadialCentroid _kernelCenter]
  -[CIAreaRedRadialCentroid _kernelDisk]
  -[CIAreaRedRadialCentroid _kernelGaussian]
  -[CIAreaRedRadialCentroid inputRadialMode]
  -[CIAreaRedRadialCentroid setInputRadialMode:]
  -[CIAreaRedRadialCentroid inputMinWeight]
  -[CIAreaRedRadialCentroid setInputMinWeight:]


CICircularMaskFromPointImage : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputCoordinate
 @property  NSNumber *inputInnerRadius
 @property  NSNumber *inputOuterRadius

  // class methods
  +[CICircularMaskFromPointImage customAttributes]

  // instance methods
  -[CICircularMaskFromPointImage outputImage]
  -[CICircularMaskFromPointImage inputImage]
  -[CICircularMaskFromPointImage setInputImage:]
  -[CICircularMaskFromPointImage _kernelDraw]
  -[CICircularMaskFromPointImage inputCoordinate]
  -[CICircularMaskFromPointImage setInputCoordinate:]
  -[CICircularMaskFromPointImage inputInnerRadius]
  -[CICircularMaskFromPointImage setInputInnerRadius:]
  -[CICircularMaskFromPointImage inputOuterRadius]
  -[CICircularMaskFromPointImage setInputOuterRadius:]


CIPaletteCentroid : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputPaletteImage
 @property  NSNumber *inputPerceptual

  // class methods
  +[CIPaletteCentroid customAttributes]

  // instance methods
  -[CIPaletteCentroid outputImage]
  -[CIPaletteCentroid inputImage]
  -[CIPaletteCentroid setInputImage:]
  -[CIPaletteCentroid inputPaletteImage]
  -[CIPaletteCentroid setInputPaletteImage:]
  -[CIPaletteCentroid inputPerceptual]
  -[CIPaletteCentroid setInputPerceptual:]
  -[CIPaletteCentroid _kernelClusterMask]


CITileFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputAngle
 @property  NSNumber *inputWidth

  // class methods
  +[CITileFilter customAttributes]

  // instance methods
  -[CITileFilter _kernel]
  -[CITileFilter inputImage]
  -[CITileFilter setInputImage:]
  -[CITileFilter inputAngle]
  -[CITileFilter setInputAngle:]
  -[CITileFilter inputWidth]
  -[CITileFilter setInputWidth:]
  -[CITileFilter inputCenter]
  -[CITileFilter setInputCenter:]
  -[CITileFilter _kernel_name]
  -[CITileFilter _kernel_source]
  -[CITileFilter _croppedCenterPixelImage]


CITile2Filter : CITileFilter
 @property  NSNumber *inputAcuteAngle

  // class methods
  +[CITile2Filter customAttributes]

  // instance methods
  -[CITile2Filter outputImage]
  -[CITile2Filter inputAcuteAngle]
  -[CITile2Filter _roiArea]
  -[CITile2Filter _roiCenter]
  -[CITile2Filter _singlePixelImage]
  -[CITile2Filter _roiRect]
  -[CITile2Filter setInputAcuteAngle:]


CIFourfoldRotatedTile : CITileFilter
  // instance methods
  -[CIFourfoldRotatedTile outputImage]
  -[CIFourfoldRotatedTile _kernel_name]
  -[CIFourfoldRotatedTile _kernel_source]


CISixfoldRotatedTile : CITileFilter
  // instance methods
  -[CISixfoldRotatedTile outputImage]
  -[CISixfoldRotatedTile _kernel_name]
  -[CISixfoldRotatedTile _kernel_source]


CITwelvefoldReflectedTile : CITileFilter
  // instance methods
  -[CITwelvefoldReflectedTile outputImage]
  -[CITwelvefoldReflectedTile _kernel_name]
  -[CITwelvefoldReflectedTile _kernel_source]


CIFourfoldTranslatedTile : CITile2Filter
  // instance methods
  -[CIFourfoldTranslatedTile outputImage]
  -[CIFourfoldTranslatedTile _kernel_name]
  -[CIFourfoldTranslatedTile _kernel_source]


CIGlideReflectedTile : CITileFilter
  // instance methods
  -[CIGlideReflectedTile outputImage]
  -[CIGlideReflectedTile _kernel_name]
  -[CIGlideReflectedTile _kernel_source]


CIEightfoldReflectedTile : CITileFilter
  // instance methods
  -[CIEightfoldReflectedTile outputImage]
  -[CIEightfoldReflectedTile _kernel_name]
  -[CIEightfoldReflectedTile _kernel_source]


CIFourfoldReflectedTile : CITile2Filter
  // instance methods
  -[CIFourfoldReflectedTile outputImage]
  -[CIFourfoldReflectedTile _kernel_name]
  -[CIFourfoldReflectedTile _kernel_source]


CISixfoldReflectedTile : CITileFilter
  // instance methods
  -[CISixfoldReflectedTile outputImage]
  -[CISixfoldReflectedTile _kernel_name]
  -[CISixfoldReflectedTile _kernel_source]


CIRenderDestination : NSObject
 @property  unsigned long width
 @property  unsigned long height
 @property  unsigned long alphaMode
 @property  BOOL flipped
 @property  BOOL dithered
 @property  BOOL clamped
 @property  ^{CGColorSpace=} colorSpace
 @property  CIBlendKernel *blendKernel
 @property  BOOL blendsInDestinationColorSpace

  // class methods
  +[CIRenderDestination _crashed_because_nonaddressable_memory_was_passed_to_initWithBitmapData:width:height:bytesPerRow:format:]

  // instance methods
  -[CIRenderDestination init]
  -[CIRenderDestination dealloc]
  -[CIRenderDestination width]
  -[CIRenderDestination height]
  -[CIRenderDestination format]
  -[CIRenderDestination _internalRepresentation]
  -[CIRenderDestination colorSpace]
  -[CIRenderDestination initWithPixelBuffer:]
  -[CIRenderDestination setColorSpace:]
  -[CIRenderDestination setAlphaMode:]
  -[CIRenderDestination setClamped:]
  -[CIRenderDestination initWithGLTexture:target:width:height:]
  -[CIRenderDestination setFlipped:]
  -[CIRenderDestination initWithMTLTexture:commandBuffer:]
  -[CIRenderDestination initWithIOSurface:]
  -[CIRenderDestination setLabel:]
  -[CIRenderDestination initWithBitmapData:width:height:bytesPerRow:format:]
  -[CIRenderDestination initWithWidth:height:pixelFormat:commandBuffer:mtlTextureProvider:]
  -[CIRenderDestination setBlendKernel:]
  -[CIRenderDestination label]
  -[CIRenderDestination _internalRenderDestination]
  -[CIRenderDestination _initWithInternalRenderDestination:width:height:format:colorspace:]
  -[CIRenderDestination _set_YCC_matrix:fullRange:deep:]
  -[CIRenderDestination _render:withContext:]
  -[CIRenderDestination initWithWidth:height:pixelFormat:colorSpace:pixelBufferProvider:]
  -[CIRenderDestination initWithWidth:height:pixelFormat:colorSpace:surfaceProvider:]
  -[CIRenderDestination alphaMode]
  -[CIRenderDestination isFlipped]
  -[CIRenderDestination isDithered]
  -[CIRenderDestination setDithered:]
  -[CIRenderDestination ditherDepth]
  -[CIRenderDestination isClamped]
  -[CIRenderDestination blendKernel]
  -[CIRenderDestination blendsInDestinationColorSpace]
  -[CIRenderDestination setBlendsInDestinationColorSpace:]
  -[CIRenderDestination imageRepresentation]


CIRenderInfo : NSObject
 @property  double kernelExecutionTime
 @property  long long passCount
 @property  long long pixelsProcessed

  // class methods
  +[CIRenderInfo renderInfoWithCompletedTask:]

  // instance methods
  -[CIRenderInfo init]
  -[CIRenderInfo dealloc]
  -[CIRenderInfo _pdfDataRepresentation]
  -[CIRenderInfo kernelExecutionTime]
  -[CIRenderInfo initWithCompletedTask:]
  -[CIRenderInfo kernelExecutionCycles]
  -[CIRenderInfo passCount]
  -[CIRenderInfo pixelsProcessed]
  -[CIRenderInfo pixelsOverdrawn]
  -[CIRenderInfo timeForNodeID:]


CIRenderTask : NSObject
  // class methods
  +[CIRenderTask rendertaskWithInternalTask:]

  // instance methods
  -[CIRenderTask init]
  -[CIRenderTask dealloc]
  -[CIRenderTask waitUntilCompletedAndReturnError:]
  -[CIRenderTask _pdfDataRepresentation]
  -[CIRenderTask internalRepresentation]
  -[CIRenderTask initWithInternalTask:]


CIRippleTransition : CIFilter
  // class methods
  +[CIRippleTransition customAttributes]

  // instance methods
  -[CIRippleTransition outputImage]
  -[CIRippleTransition _CIRippleTransition]


CISRGBToneCurveToLinear : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CISRGBToneCurveToLinear customAttributes]

  // instance methods
  -[CISRGBToneCurveToLinear outputImage]
  -[CISRGBToneCurveToLinear inputImage]
  -[CISRGBToneCurveToLinear setInputImage:]


CILinearToSRGBToneCurve : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CILinearToSRGBToneCurve customAttributes]

  // instance methods
  -[CILinearToSRGBToneCurve outputImage]
  -[CILinearToSRGBToneCurve inputImage]
  -[CILinearToSRGBToneCurve setInputImage:]


CISaliencyMapKernel : CIImageProcessorKernel
  // class methods
  +[CISaliencyMapKernel outputFormat]
  +[CISaliencyMapKernel roiForInput:arguments:outputRect:]
  +[CISaliencyMapKernel processWithInputs:arguments:output:error:]
  +[CISaliencyMapKernel formatForInputAtIndex:]


CISaliencyMapFilter : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CISaliencyMapFilter customAttributes]

  // instance methods
  -[CISaliencyMapFilter outputImage]
  -[CISaliencyMapFilter inputImage]
  -[CISaliencyMapFilter setInputImage:]


CISampleNearest : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CISampleNearest customAttributes]

  // instance methods
  -[CISampleNearest outputImage]
  -[CISampleNearest inputImage]
  -[CISampleNearest setInputImage:]


CISampler : NSObject <NSCopying>
 @property  CIFilterShape *definition
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extent

  // class methods
  +[CISampler samplerWithImage:options:]
  +[CISampler samplerWithImage:]
  +[CISampler samplerWithImage:keysAndValues:]

  // instance methods
  -[CISampler init]
  -[CISampler dealloc]
  -[CISampler copyWithZone:]
  -[CISampler extent]
  -[CISampler _internalRepresentation]
  -[CISampler colorSpace]
  -[CISampler definition]
  -[CISampler initWithImage:]
  -[CISampler initWithImage:options:]
  -[CISampler _initWithImage:key0:vargs:]
  -[CISampler initWithImage:keysAndValues:]
  -[CISampler opaqueShape]
  -[CISampler wrapMode]


CISepiaTone : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputIntensity

  // class methods
  +[CISepiaTone customAttributes]

  // instance methods
  -[CISepiaTone _kernel]
  -[CISepiaTone outputImage]
  -[CISepiaTone inputImage]
  -[CISepiaTone setInputImage:]
  -[CISepiaTone _isIdentity]
  -[CISepiaTone inputIntensity]
  -[CISepiaTone setInputIntensity:]


CIShadedMaterial : CIFilter
  // class methods
  +[CIShadedMaterial customAttributes]

  // instance methods
  -[CIShadedMaterial outputImage]
  -[CIShadedMaterial _CIShadedmaterial_0]
  -[CIShadedMaterial _CIShadedmaterial]


CIPerspectiveAutoCalcV2 : CIPerspectiveAutoCalc
 @property  double unlimitedPitch
 @property  double unlimitedYaw
 @property  double unlimitedRoll

  // instance methods
  -[CIPerspectiveAutoCalcV2 dealloc]
  -[CIPerspectiveAutoCalcV2 .cxx_destruct]
  -[CIPerspectiveAutoCalcV2 .cxx_construct]
  -[CIPerspectiveAutoCalcV2 initWithContext:image:config:]
  -[CIPerspectiveAutoCalcV2 compute]
  -[CIPerspectiveAutoCalcV2 unlimitedPitch]
  -[CIPerspectiveAutoCalcV2 unlimitedYaw]
  -[CIPerspectiveAutoCalcV2 unlimitedRoll]
  -[CIPerspectiveAutoCalcV2 standardizeImage]
  -[CIPerspectiveAutoCalcV2 createGradientMap]
  -[CIPerspectiveAutoCalcV2 normalizeGradientMap]
  -[CIPerspectiveAutoCalcV2 thresholdGradientMap]
  -[CIPerspectiveAutoCalcV2 extractLineSegments]
  -[CIPerspectiveAutoCalcV2 clusterLineSegments]
  -[CIPerspectiveAutoCalcV2 setupCostFunction]
  -[CIPerspectiveAutoCalcV2 runOptimization]
  -[CIPerspectiveAutoCalcV2 computeConfidence]
  -[CIPerspectiveAutoCalcV2 evaluateCost:]
  -[CIPerspectiveAutoCalcV2 evaluateCostXZ:]
  -[CIPerspectiveAutoCalcV2 evaluateCostYZ:]


CINoiseReduction : CIFilter
  // class methods
  +[CINoiseReduction customAttributes]

  // instance methods
  -[CINoiseReduction outputImage]
  -[CINoiseReduction _CINoiseReduction]


CIProSharpenEdges : CIFilter
  // class methods
  +[CIProSharpenEdges customAttributes]

  // instance methods
  -[CIProSharpenEdges outputImage]
  -[CIProSharpenEdges _CIEdgesPrep]
  -[CIProSharpenEdges _CIFindEdges]
  -[CIProSharpenEdges _CIConvertRGBtoY]
  -[CIProSharpenEdges _CIBlur1]
  -[CIProSharpenEdges _CIBlur2]
  -[CIProSharpenEdges _CIBlur4]
  -[CIProSharpenEdges _CISharpenCombineEdges]


CISharpenLuminance : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputSharpness
 @property  NSNumber *inputRadius

  // class methods
  +[CISharpenLuminance customAttributes]

  // instance methods
  -[CISharpenLuminance _kernel]
  -[CISharpenLuminance outputImage]
  -[CISharpenLuminance inputImage]
  -[CISharpenLuminance setInputImage:]
  -[CISharpenLuminance _isIdentity]
  -[CISharpenLuminance inputRadius]
  -[CISharpenLuminance setInputRadius:]
  -[CISharpenLuminance inputSharpness]
  -[CISharpenLuminance setInputSharpness:]


CISkyAndGrassAdjust : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputSkyAmount
 @property  NSNumber *inputGrassAmount

  // class methods
  +[CISkyAndGrassAdjust customAttributes]

  // instance methods
  -[CISkyAndGrassAdjust _kernel]
  -[CISkyAndGrassAdjust outputImage]
  -[CISkyAndGrassAdjust inputImage]
  -[CISkyAndGrassAdjust setInputImage:]
  -[CISkyAndGrassAdjust inputSkyAmount]
  -[CISkyAndGrassAdjust setInputSkyAmount:]
  -[CISkyAndGrassAdjust inputGrassAmount]
  -[CISkyAndGrassAdjust setInputGrassAmount:]


CISmartBlackAndWhite : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputStrength
 @property  NSNumber *inputNeutralGamma
 @property  NSNumber *inputTone
 @property  NSNumber *inputHue
 @property  NSNumber *inputGrain
 @property  NSNumber *inputSeed
 @property  NSNumber *inputScaleFactor

  // class methods
  +[CISmartBlackAndWhite customAttributes]

  // instance methods
  -[CISmartBlackAndWhite _kernel]
  -[CISmartBlackAndWhite outputImage]
  -[CISmartBlackAndWhite inputImage]
  -[CISmartBlackAndWhite setInputImage:]
  -[CISmartBlackAndWhite inputStrength]
  -[CISmartBlackAndWhite setInputStrength:]
  -[CISmartBlackAndWhite inputSeed]
  -[CISmartBlackAndWhite setInputSeed:]
  -[CISmartBlackAndWhite setInputScaleFactor:]
  -[CISmartBlackAndWhite inputScaleFactor]
  -[CISmartBlackAndWhite getNonNormalizedSettings:]
  -[CISmartBlackAndWhite createHueArray]
  -[CISmartBlackAndWhite hueArrayImage:]
  -[CISmartBlackAndWhite inputNeutralGamma]
  -[CISmartBlackAndWhite setInputNeutralGamma:]
  -[CISmartBlackAndWhite inputTone]
  -[CISmartBlackAndWhite setInputTone:]
  -[CISmartBlackAndWhite inputHue]
  -[CISmartBlackAndWhite setInputHue:]
  -[CISmartBlackAndWhite inputGrain]
  -[CISmartBlackAndWhite setInputGrain:]


CISmartToneFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputExposure
 @property  NSNumber *inputContrast
 @property  NSNumber *inputBrightness
 @property  NSNumber *inputShadows
 @property  NSNumber *inputHighlights
 @property  NSNumber *inputBlack
 @property  NSNumber *inputRawHighlights
 @property  NSNumber *inputLocalLight
 @property  NSData *inputLightMap
 @property  NSNumber *inputUseCube
 @property  id inputUseCubeColorSpace

  // class methods
  +[CISmartToneFilter customAttributes]

  // instance methods
  -[CISmartToneFilter dealloc]
  -[CISmartToneFilter setValue:forKey:]
  -[CISmartToneFilter outputImage]
  -[CISmartToneFilter inputImage]
  -[CISmartToneFilter setInputImage:]
  -[CISmartToneFilter _isIdentity]
  -[CISmartToneFilter inputBrightness]
  -[CISmartToneFilter setInputBrightness:]
  -[CISmartToneFilter inputContrast]
  -[CISmartToneFilter setInputContrast:]
  -[CISmartToneFilter inputLightMap]
  -[CISmartToneFilter inputLocalLight]
  -[CISmartToneFilter _kernelH]
  -[CISmartToneFilter inputUseCube]
  -[CISmartToneFilter inputUseCubeColorSpace]
  -[CISmartToneFilter _kernelBneg]
  -[CISmartToneFilter _kernelBpos]
  -[CISmartToneFilter _kernelRH]
  -[CISmartToneFilter _kernelC]
  -[CISmartToneFilter inputExposure]
  -[CISmartToneFilter setInputExposure:]
  -[CISmartToneFilter inputShadows]
  -[CISmartToneFilter setInputShadows:]
  -[CISmartToneFilter inputHighlights]
  -[CISmartToneFilter setInputHighlights:]
  -[CISmartToneFilter inputBlack]
  -[CISmartToneFilter setInputBlack:]
  -[CISmartToneFilter inputRawHighlights]
  -[CISmartToneFilter setInputRawHighlights:]
  -[CISmartToneFilter setInputLocalLight:]
  -[CISmartToneFilter setInputLightMap:]
  -[CISmartToneFilter setInputUseCube:]
  -[CISmartToneFilter setInputUseCubeColorSpace:]


CISmartColorFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputVibrancy
 @property  NSNumber *inputContrast
 @property  NSNumber *inputCast
 @property  NSNumber *inputUseCube
 @property  id inputUseCubeColorSpace

  // class methods
  +[CISmartColorFilter customAttributes]

  // instance methods
  -[CISmartColorFilter dealloc]
  -[CISmartColorFilter setValue:forKey:]
  -[CISmartColorFilter outputImage]
  -[CISmartColorFilter inputImage]
  -[CISmartColorFilter setInputImage:]
  -[CISmartColorFilter _isIdentity]
  -[CISmartColorFilter inputContrast]
  -[CISmartColorFilter setInputContrast:]
  -[CISmartColorFilter inputUseCube]
  -[CISmartColorFilter inputUseCubeColorSpace]
  -[CISmartColorFilter setInputUseCube:]
  -[CISmartColorFilter setInputUseCubeColorSpace:]
  -[CISmartColorFilter _kernelV_lt1]
  -[CISmartColorFilter _kernelV_gt1]
  -[CISmartColorFilter _kernelCPos]
  -[CISmartColorFilter _kernelCNeg]
  -[CISmartColorFilter _kernelCast]
  -[CISmartColorFilter inputVibrancy]
  -[CISmartColorFilter setInputVibrancy:]
  -[CISmartColorFilter inputCast]
  -[CISmartColorFilter setInputCast:]


CIBicubicScaleTransform : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale
 @property  NSNumber *inputAspectRatio
 @property  NSNumber *inputB
 @property  NSNumber *inputC

  // class methods
  +[CIBicubicScaleTransform customAttributes]

  // instance methods
  -[CIBicubicScaleTransform _scale]
  -[CIBicubicScaleTransform outputImage]
  -[CIBicubicScaleTransform inputImage]
  -[CIBicubicScaleTransform setInputImage:]
  -[CIBicubicScaleTransform inputScale]
  -[CIBicubicScaleTransform setInputScale:]
  -[CIBicubicScaleTransform _isIdentity]
  -[CIBicubicScaleTransform inputAspectRatio]
  -[CIBicubicScaleTransform setInputAspectRatio:]
  -[CIBicubicScaleTransform inputB]
  -[CIBicubicScaleTransform setInputB:]
  -[CIBicubicScaleTransform inputC]
  -[CIBicubicScaleTransform setInputC:]


CISoftCubicUpsample : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale

  // class methods
  +[CISoftCubicUpsample customAttributes]

  // instance methods
  -[CISoftCubicUpsample _scale]
  -[CISoftCubicUpsample outputImage]
  -[CISoftCubicUpsample inputImage]
  -[CISoftCubicUpsample setInputImage:]
  -[CISoftCubicUpsample inputScale]
  -[CISoftCubicUpsample setInputScale:]
  -[CISoftCubicUpsample _isIdentity]


CISpotLight : CIFilter
  // class methods
  +[CISpotLight customAttributes]

  // instance methods
  -[CISpotLight outputImage]
  -[CISpotLight _CISpotLight]


CIStarShineGenerator : CIFilter
 @property  CIVector *inputCenter
 @property  CIColor *inputColor
 @property  NSNumber *inputRadius
 @property  NSNumber *inputCrossScale
 @property  NSNumber *inputCrossAngle
 @property  NSNumber *inputCrossOpacity
 @property  NSNumber *inputCrossWidth
 @property  NSNumber *inputEpsilon

  // class methods
  +[CIStarShineGenerator customAttributes]

  // instance methods
  -[CIStarShineGenerator _kernel]
  -[CIStarShineGenerator outputImage]
  -[CIStarShineGenerator inputRadius]
  -[CIStarShineGenerator setInputRadius:]
  -[CIStarShineGenerator inputCenter]
  -[CIStarShineGenerator setInputCenter:]
  -[CIStarShineGenerator inputColor]
  -[CIStarShineGenerator setInputColor:]
  -[CIStarShineGenerator inputEpsilon]
  -[CIStarShineGenerator setInputEpsilon:]
  -[CIStarShineGenerator inputCrossAngle]
  -[CIStarShineGenerator setInputCrossAngle:]
  -[CIStarShineGenerator inputCrossScale]
  -[CIStarShineGenerator setInputCrossScale:]
  -[CIStarShineGenerator inputCrossWidth]
  -[CIStarShineGenerator setInputCrossWidth:]
  -[CIStarShineGenerator inputCrossOpacity]
  -[CIStarShineGenerator setInputCrossOpacity:]


CIStraightenFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputAngle

  // class methods
  +[CIStraightenFilter customAttributes]

  // instance methods
  -[CIStraightenFilter outputImage]
  -[CIStraightenFilter inputImage]
  -[CIStraightenFilter setInputImage:]
  -[CIStraightenFilter inputAngle]
  -[CIStraightenFilter setInputAngle:]


CIStretch : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputPoint
 @property  CIVector *inputSize

  // class methods
  +[CIStretch customAttributes]

  // instance methods
  -[CIStretch _kernel]
  -[CIStretch outputImage]
  -[CIStretch inputImage]
  -[CIStretch setInputImage:]
  -[CIStretch setDefaults]
  -[CIStretch inputSize]
  -[CIStretch setInputSize:]
  -[CIStretch inputPoint]
  -[CIStretch setInputPoint:]
  -[CIStretch computeDOD:]


CIStretchCrop : CIFilter
  // class methods
  +[CIStretchCrop customAttributes]

  // instance methods
  -[CIStretchCrop _kernel]
  -[CIStretchCrop outputImage]


CINinePartStretched : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputBreakpoint0
 @property  CIVector *inputBreakpoint1
 @property  CIVector *inputGrowAmount

  // class methods
  +[CINinePartStretched customAttributes]

  // instance methods
  -[CINinePartStretched _kernel]
  -[CINinePartStretched outputImage]
  -[CINinePartStretched inputImage]
  -[CINinePartStretched setInputImage:]
  -[CINinePartStretched inputBreakpoint0]
  -[CINinePartStretched setInputBreakpoint0:]
  -[CINinePartStretched inputBreakpoint1]
  -[CINinePartStretched setInputBreakpoint1:]
  -[CINinePartStretched inputGrowAmount]
  -[CINinePartStretched setInputGrowAmount:]


CINinePartTiled : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputBreakpoint0
 @property  CIVector *inputBreakpoint1
 @property  CIVector *inputGrowAmount
 @property  NSNumber *inputFlipYTiles

  // class methods
  +[CINinePartTiled customAttributes]

  // instance methods
  -[CINinePartTiled outputImage]
  -[CINinePartTiled inputImage]
  -[CINinePartTiled setInputImage:]
  -[CINinePartTiled inputBreakpoint0]
  -[CINinePartTiled setInputBreakpoint0:]
  -[CINinePartTiled inputBreakpoint1]
  -[CINinePartTiled setInputBreakpoint1:]
  -[CINinePartTiled inputGrowAmount]
  -[CINinePartTiled setInputGrowAmount:]
  -[CINinePartTiled _kernelAlt]
  -[CINinePartTiled inputFlipYTiles]
  -[CINinePartTiled setInputFlipYTiles:]


CIStripesGenerator : CIFilter
 @property  CIVector *inputCenter
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1
 @property  NSNumber *inputWidth
 @property  NSNumber *inputSharpness

  // class methods
  +[CIStripesGenerator customAttributes]

  // instance methods
  -[CIStripesGenerator _kernel]
  -[CIStripesGenerator outputImage]
  -[CIStripesGenerator inputWidth]
  -[CIStripesGenerator setInputWidth:]
  -[CIStripesGenerator inputCenter]
  -[CIStripesGenerator setInputCenter:]
  -[CIStripesGenerator inputSharpness]
  -[CIStripesGenerator setInputSharpness:]
  -[CIStripesGenerator inputColor0]
  -[CIStripesGenerator setInputColor0:]
  -[CIStripesGenerator inputColor1]
  -[CIStripesGenerator setInputColor1:]


CISunbeamsGenerator : CIFilter
  // class methods
  +[CISunbeamsGenerator customAttributes]

  // instance methods
  -[CISunbeamsGenerator outputImage]
  -[CISunbeamsGenerator _CISunbeams]


CISwipeTransition : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputTargetImage
 @property  CIVector *inputExtent
 @property  CIColor *inputColor
 @property  NSNumber *inputTime
 @property  NSNumber *inputAngle
 @property  NSNumber *inputWidth
 @property  NSNumber *inputOpacity

  // class methods
  +[CISwipeTransition customAttributes]

  // instance methods
  -[CISwipeTransition _kernel]
  -[CISwipeTransition outputImage]
  -[CISwipeTransition inputImage]
  -[CISwipeTransition setInputImage:]
  -[CISwipeTransition inputTargetImage]
  -[CISwipeTransition setInputTargetImage:]
  -[CISwipeTransition inputTime]
  -[CISwipeTransition setInputTime:]
  -[CISwipeTransition inputExtent]
  -[CISwipeTransition setInputExtent:]
  -[CISwipeTransition inputAngle]
  -[CISwipeTransition setInputAngle:]
  -[CISwipeTransition inputWidth]
  -[CISwipeTransition setInputWidth:]
  -[CISwipeTransition inputColor]
  -[CISwipeTransition setInputColor:]
  -[CISwipeTransition inputOpacity]
  -[CISwipeTransition setInputOpacity:]


CITemperatureAndTint : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputNeutral
 @property  CIVector *inputTargetNeutral

  // class methods
  +[CITemperatureAndTint customAttributes]

  // instance methods
  -[CITemperatureAndTint outputImage]
  -[CITemperatureAndTint inputImage]
  -[CITemperatureAndTint setInputImage:]
  -[CITemperatureAndTint inputNeutral]
  -[CITemperatureAndTint setInputNeutral:]
  -[CITemperatureAndTint inputTargetNeutral]
  -[CITemperatureAndTint setInputTargetNeutral:]


CIWhitePointAdjust : CIFilter
 @property  CIImage *inputImage
 @property  CIColor *inputColor

  // class methods
  +[CIWhitePointAdjust customAttributes]

  // instance methods
  -[CIWhitePointAdjust _kernel]
  -[CIWhitePointAdjust outputImage]
  -[CIWhitePointAdjust inputImage]
  -[CIWhitePointAdjust setInputImage:]
  -[CIWhitePointAdjust _isIdentity]
  -[CIWhitePointAdjust inputColor]
  -[CIWhitePointAdjust setInputColor:]


CIFalseColor : CIFilter
 @property  CIImage *inputImage
 @property  CIColor *inputColor0
 @property  CIColor *inputColor1

  // class methods
  +[CIFalseColor customAttributes]

  // instance methods
  -[CIFalseColor _kernel]
  -[CIFalseColor outputImage]
  -[CIFalseColor inputImage]
  -[CIFalseColor setInputImage:]
  -[CIFalseColor inputColor0]
  -[CIFalseColor setInputColor0:]
  -[CIFalseColor inputColor1]
  -[CIFalseColor setInputColor1:]


CITextDetector : CIDetector
 @property  CIContext *context

  // instance methods
  -[CITextDetector dealloc]
  -[CITextDetector finalize]
  -[CITextDetector context]
  -[CITextDetector setContext:]
  -[CITextDetector featuresInImage:options:]
  -[CITextDetector initWithContext:options:]
  -[CITextDetector featuresInImage:]
  -[CITextDetector adjustedImageFromImage:orientation:inverseCTM:]
  -[CITextDetector ctmForImageWithBounds:orientation:]


CITextImageGenerator : CIFilter
 @property  NSString *inputText
 @property  NSString *inputFontName
 @property  NSNumber *inputFontSize
 @property  NSNumber *inputScaleFactor

  // class methods
  +[CITextImageGenerator customAttributes]

  // instance methods
  -[CITextImageGenerator outputImage]
  -[CITextImageGenerator setInputScaleFactor:]
  -[CITextImageGenerator inputScaleFactor]
  -[CITextImageGenerator inputText]
  -[CITextImageGenerator setInputText:]
  -[CITextImageGenerator inputFontName]
  -[CITextImageGenerator setInputFontName:]
  -[CITextImageGenerator inputFontSize]
  -[CITextImageGenerator setInputFontSize:]


CIAttributedTextImageGenerator : CIFilter
 @property  NSAttributedString *inputText
 @property  NSNumber *inputScaleFactor

  // class methods
  +[CIAttributedTextImageGenerator customAttributes]

  // instance methods
  -[CIAttributedTextImageGenerator outputImage]
  -[CIAttributedTextImageGenerator setInputScaleFactor:]
  -[CIAttributedTextImageGenerator inputScaleFactor]
  -[CIAttributedTextImageGenerator inputText]
  -[CIAttributedTextImageGenerator setInputText:]


CIToneCurve : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  CIVector *inputPoint0
 @property  CIVector *inputPoint1
 @property  CIVector *inputPoint2
 @property  CIVector *inputPoint3
 @property  CIVector *inputPoint4

  // class methods
  +[CIToneCurve customAttributes]
  +[CIToneCurve curveImageFromPoints:]
  +[CIToneCurve splineCurveTable:tableSize:gamma:from:]
  +[CIToneCurve curveImageFromPoints:linear:]

  // instance methods
  -[CIToneCurve dealloc]
  -[CIToneCurve outputImage]
  -[CIToneCurve inputImage]
  -[CIToneCurve setInputImage:]
  -[CIToneCurve _outputProperties]
  -[CIToneCurve _initFromProperties:]
  -[CIToneCurve _isIdentity]
  -[CIToneCurve inputPoint0]
  -[CIToneCurve inputPoint1]
  -[CIToneCurve setInputPoint0:]
  -[CIToneCurve setInputPoint1:]
  -[CIToneCurve _kernel16]
  -[CIToneCurve setInputPoint2:]
  -[CIToneCurve setInputPoint3:]
  -[CIToneCurve setInputPoint4:]
  -[CIToneCurve inputPoint2]
  -[CIToneCurve inputPoint3]
  -[CIToneCurve inputPoint4]


CITriangleKaleidoscope : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputPoint
 @property  NSNumber *inputSize
 @property  NSNumber *inputRotation
 @property  NSNumber *inputDecay

  // class methods
  +[CITriangleKaleidoscope customAttributes]

  // instance methods
  -[CITriangleKaleidoscope outputImage]
  -[CITriangleKaleidoscope inputImage]
  -[CITriangleKaleidoscope setInputImage:]
  -[CITriangleKaleidoscope inputRotation]
  -[CITriangleKaleidoscope inputDecay]
  -[CITriangleKaleidoscope setInputDecay:]
  -[CITriangleKaleidoscope inputSize]
  -[CITriangleKaleidoscope setInputSize:]
  -[CITriangleKaleidoscope _geomKernel]
  -[CITriangleKaleidoscope _colorKernel]
  -[CITriangleKaleidoscope setInputRotation:]
  -[CITriangleKaleidoscope inputPoint]
  -[CITriangleKaleidoscope setInputPoint:]


CITriangleTile : CIFilter
  // class methods
  +[CITriangleTile customAttributes]

  // instance methods
  -[CITriangleTile outputImage]
  -[CITriangleTile _CITriangleTile]


CITwirlDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputAngle

  // class methods
  +[CITwirlDistortion customAttributes]

  // instance methods
  -[CITwirlDistortion _kernel]
  -[CITwirlDistortion outputImage]
  -[CITwirlDistortion inputImage]
  -[CITwirlDistortion setInputImage:]
  -[CITwirlDistortion inputAngle]
  -[CITwirlDistortion setInputAngle:]
  -[CITwirlDistortion inputRadius]
  -[CITwirlDistortion setInputRadius:]
  -[CITwirlDistortion inputCenter]
  -[CITwirlDistortion setInputCenter:]


CIUnsharpMask : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputRadius
 @property  NSNumber *inputIntensity

  // class methods
  +[CIUnsharpMask customAttributes]

  // instance methods
  -[CIUnsharpMask _kernel]
  -[CIUnsharpMask outputImage]
  -[CIUnsharpMask inputImage]
  -[CIUnsharpMask setInputImage:]
  -[CIUnsharpMask _isIdentity]
  -[CIUnsharpMask inputRadius]
  -[CIUnsharpMask setInputRadius:]
  -[CIUnsharpMask inputIntensity]
  -[CIUnsharpMask setInputIntensity:]


CIVNFeature : CIFeature
 @property  float confidence

  // instance methods
  -[CIVNFeature confidence]
  -[CIVNFeature initWithObservation:inImage:]


CIVNDetector : CIDetector
  // instance methods
  -[CIVNDetector dealloc]
  -[CIVNDetector initWithContext:options:]
  -[CIVNDetector featuresInImage:withContext:]


CIVNFaceDetector : CIDetector
 @property  CIContext *context

  // instance methods
  -[CIVNFaceDetector dealloc]
  -[CIVNFaceDetector context]
  -[CIVNFaceDetector featuresInImage:options:]
  -[CIVNFaceDetector initWithContext:options:]


CIVNRectFeature : CIVNFeature
 @property  CIRectangleFeature *ciRectangleFeature

  // instance methods
  -[CIVNRectFeature initWithVNObservation:]
  -[CIVNRectFeature ciRectangleFeature]


CIVNRectDetector : CIVNDetector
  // instance methods
  -[CIVNRectDetector featuresInImage:withContext:]


CIVariableBoxBlur : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputRadiusImage
 @property  NSNumber *inputScale

  // class methods
  +[CIVariableBoxBlur customAttributes]

  // instance methods
  -[CIVariableBoxBlur outputImage]
  -[CIVariableBoxBlur inputImage]
  -[CIVariableBoxBlur setInputImage:]
  -[CIVariableBoxBlur inputScale]
  -[CIVariableBoxBlur setInputScale:]
  -[CIVariableBoxBlur inputRadiusImage]
  -[CIVariableBoxBlur setInputRadiusImage:]


CIVector : NSObject <NSCopying, NSSecureCoding>
 @property  ^d _values
 @property  unsigned long count
 @property  double X
 @property  double Y
 @property  double Z
 @property  double W
 @property  {CGPoint=dd} CGPointValue
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} CGRectValue
 @property  {CGAffineTransform=dddddd} CGAffineTransformValue
 @property  NSString *stringRepresentation

  // class methods
  +[CIVector supportsSecureCoding]
  +[CIVector vectorWithX:Y:Z:W:]
  +[CIVector vectorWithX:Y:Z:]
  +[CIVector vectorWithCGPoint:]
  +[CIVector vectorWithX:Y:]
  +[CIVector vectorWithCGRect:]
  +[CIVector vectorWithX:]
  +[CIVector vectorWithValues:count:]
  +[CIVector vectorWithString:]
  +[CIVector vectorWithCGAffineTransform:]

  // instance methods
  -[CIVector init]
  -[CIVector dealloc]
  -[CIVector isEqual:]
  -[CIVector copyWithZone:]
  -[CIVector finalize]
  -[CIVector count]
  -[CIVector encodeWithCoder:]
  -[CIVector initWithCoder:]
  -[CIVector _values]
  -[CIVector initWithString:]
  -[CIVector X]
  -[CIVector Y]
  -[CIVector Z]
  -[CIVector W]
  -[CIVector CGRectValue]
  -[CIVector stringRepresentation]
  -[CIVector valueAtIndex:]
  -[CIVector CGPointValue]
  -[CIVector _norm]
  -[CIVector _dot:]
  -[CIVector _orthonormalizeTo:]
  -[CIVector CGAffineTransformValue]
  -[CIVector initWithValues:count:]
  -[CIVector initWithX:]
  -[CIVector initWithX:Y:]
  -[CIVector initWithX:Y:Z:]
  -[CIVector initWithX:Y:Z:W:]
  -[CIVector initWithCGPoint:]
  -[CIVector initWithCGRect:]
  -[CIVector initWithCGAffineTransform:]


CIVibrance : CIFilter <_CIFilterProperties>
 @property  CIImage *inputImage
 @property  NSNumber *inputAmount

  // class methods
  +[CIVibrance customAttributes]

  // instance methods
  -[CIVibrance outputImage]
  -[CIVibrance inputImage]
  -[CIVibrance setInputImage:]
  -[CIVibrance _outputProperties]
  -[CIVibrance _initFromProperties:]
  -[CIVibrance inputAmount]
  -[CIVibrance setInputAmount:]
  -[CIVibrance _isIdentity]
  -[CIVibrance _kernelNeg]
  -[CIVibrance _kernelPos]


CIVignette : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputIntensity
 @property  NSNumber *inputRadius

  // class methods
  +[CIVignette customAttributes]

  // instance methods
  -[CIVignette _kernel]
  -[CIVignette outputImage]
  -[CIVignette inputImage]
  -[CIVignette setInputImage:]
  -[CIVignette _isIdentity]
  -[CIVignette inputRadius]
  -[CIVignette setInputRadius:]
  -[CIVignette inputIntensity]
  -[CIVignette setInputIntensity:]


CIVignetteEffect : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputIntensity
 @property  NSNumber *inputFalloff

  // class methods
  +[CIVignetteEffect customAttributes]

  // instance methods
  -[CIVignetteEffect outputImage]
  -[CIVignetteEffect inputImage]
  -[CIVignetteEffect setInputImage:]
  -[CIVignetteEffect _isIdentity]
  -[CIVignetteEffect inputRadius]
  -[CIVignetteEffect setInputRadius:]
  -[CIVignetteEffect inputIntensity]
  -[CIVignetteEffect setInputIntensity:]
  -[CIVignetteEffect inputCenter]
  -[CIVignetteEffect setInputCenter:]
  -[CIVignetteEffect inputFalloff]
  -[CIVignetteEffect setInputFalloff:]
  -[CIVignetteEffect _poskernel]
  -[CIVignetteEffect _negkernel]


CIPerspectiveAutoCalcV1 : CIPerspectiveAutoCalc
 @property  double minimumPitchCorrectionAreaCoverage
 @property  double minimumYawCorrectionAreaCoverage
 @property  float pitchCorrectionAreaCoverage
 @property  float yawCorrectionAreaCoverage

  // instance methods
  -[CIPerspectiveAutoCalcV1 dealloc]
  -[CIPerspectiveAutoCalcV1 .cxx_destruct]
  -[CIPerspectiveAutoCalcV1 confidence]
  -[CIPerspectiveAutoCalcV1 .cxx_construct]
  -[CIPerspectiveAutoCalcV1 initWithContext:image:config:]
  -[CIPerspectiveAutoCalcV1 compute]
  -[CIPerspectiveAutoCalcV1 setMinimumPitchCorrectionAreaCoverage:]
  -[CIPerspectiveAutoCalcV1 setMinimumYawCorrectionAreaCoverage:]
  -[CIPerspectiveAutoCalcV1 pitchCorrectionAreaCoverage]
  -[CIPerspectiveAutoCalcV1 yawCorrectionAreaCoverage]
  -[CIPerspectiveAutoCalcV1 standardizeImage]
  -[CIPerspectiveAutoCalcV1 createGradientMap]
  -[CIPerspectiveAutoCalcV1 normalizeGradientMap]
  -[CIPerspectiveAutoCalcV1 thresholdGradientMap]
  -[CIPerspectiveAutoCalcV1 extractLineSegments]
  -[CIPerspectiveAutoCalcV1 clusterLineSegments]
  -[CIPerspectiveAutoCalcV1 rangeLimitGradientMap]
  -[CIPerspectiveAutoCalcV1 computeGuides]
  -[CIPerspectiveAutoCalcV1 computeTransform]
  -[CIPerspectiveAutoCalcV1 minimumPitchCorrectionAreaCoverage]
  -[CIPerspectiveAutoCalcV1 minimumYawCorrectionAreaCoverage]


CIVortexDistortion : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputCenter
 @property  NSNumber *inputRadius
 @property  NSNumber *inputAngle

  // class methods
  +[CIVortexDistortion customAttributes]

  // instance methods
  -[CIVortexDistortion _kernel]
  -[CIVortexDistortion outputImage]
  -[CIVortexDistortion inputImage]
  -[CIVortexDistortion setInputImage:]
  -[CIVortexDistortion inputAngle]
  -[CIVortexDistortion setInputAngle:]
  -[CIVortexDistortion _isIdentity]
  -[CIVortexDistortion inputRadius]
  -[CIVortexDistortion setInputRadius:]
  -[CIVortexDistortion inputCenter]
  -[CIVortexDistortion setInputCenter:]


CIWrapMirror : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIWrapMirror customAttributes]

  // instance methods
  -[CIWrapMirror _kernel]
  -[CIWrapMirror outputImage]
  -[CIWrapMirror inputImage]
  -[CIWrapMirror setInputImage:]


CIDepthToDisparity : CIDepthDisparityConverter

CIDisparityToDepth : CIDepthDisparityConverter

CIDepthDisparityConverter : CIFilter
 @property  CIImage *inputImage

  // class methods
  +[CIDepthDisparityConverter customAttributes]

  // instance methods
  -[CIDepthDisparityConverter outputImage]
  -[CIDepthDisparityConverter inputImage]
  -[CIDepthDisparityConverter setInputImage:]


CISegmentationFusion : CIFilter
  // class methods
  +[CISegmentationFusion customAttributes]

  // instance methods
  -[CISegmentationFusion outputImage]
  -[CISegmentationFusion _isIdentity]
  -[CISegmentationFusion kernel]


CILensModelApplyV3 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputLensModelImage

  // instance methods
  -[CILensModelApplyV3 outputImage]
  -[CILensModelApplyV3 inputImage]
  -[CILensModelApplyV3 setInputImage:]
  -[CILensModelApplyV3 kernel]
  -[CILensModelApplyV3 inputLensModelImage]
  -[CILensModelApplyV3 setInputLensModelImage:]


CIDisparityWeightsV3 : CIFilter
 @property  CIImage *inputImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputScale

  // instance methods
  -[CIDisparityWeightsV3 outputImage]
  -[CIDisparityWeightsV3 inputImage]
  -[CIDisparityWeightsV3 setInputImage:]
  -[CIDisparityWeightsV3 inputScale]
  -[CIDisparityWeightsV3 setInputScale:]
  -[CIDisparityWeightsV3 inputTuningParameters]
  -[CIDisparityWeightsV3 setInputTuningParameters:]
  -[CIDisparityWeightsV3 weightsXKernel]
  -[CIDisparityWeightsV3 weightsYKernel]


CIDisparityPreprocV3 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputAlphaImage

  // instance methods
  -[CIDisparityPreprocV3 outputImage]
  -[CIDisparityPreprocV3 inputImage]
  -[CIDisparityPreprocV3 setInputImage:]
  -[CIDisparityPreprocV3 preprocKernel]
  -[CIDisparityPreprocV3 preprocKernelNoAlpha]
  -[CIDisparityPreprocV3 inputAlphaImage]
  -[CIDisparityPreprocV3 setInputAlphaImage:]


CIDisparityRefinementSparseSamplerV3 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputPreprocImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputScale

  // instance methods
  -[CIDisparityRefinementSparseSamplerV3 outputImage]
  -[CIDisparityRefinementSparseSamplerV3 inputImage]
  -[CIDisparityRefinementSparseSamplerV3 setInputImage:]
  -[CIDisparityRefinementSparseSamplerV3 inputScale]
  -[CIDisparityRefinementSparseSamplerV3 setInputScale:]
  -[CIDisparityRefinementSparseSamplerV3 inputTuningParameters]
  -[CIDisparityRefinementSparseSamplerV3 setInputTuningParameters:]
  -[CIDisparityRefinementSparseSamplerV3 sampleKernel]
  -[CIDisparityRefinementSparseSamplerV3 inputPreprocImage]
  -[CIDisparityRefinementSparseSamplerV3 setInputPreprocImage:]


CIDisparityRefinementAntialiasV3 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputPreprocImage
 @property  CIImage *inputDisparityWeightImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputScale

  // instance methods
  -[CIDisparityRefinementAntialiasV3 outputImage]
  -[CIDisparityRefinementAntialiasV3 inputImage]
  -[CIDisparityRefinementAntialiasV3 setInputImage:]
  -[CIDisparityRefinementAntialiasV3 inputScale]
  -[CIDisparityRefinementAntialiasV3 setInputScale:]
  -[CIDisparityRefinementAntialiasV3 inputTuningParameters]
  -[CIDisparityRefinementAntialiasV3 setInputTuningParameters:]
  -[CIDisparityRefinementAntialiasV3 inputPreprocImage]
  -[CIDisparityRefinementAntialiasV3 setInputPreprocImage:]
  -[CIDisparityRefinementAntialiasV3 antialiasKernel]
  -[CIDisparityRefinementAntialiasV3 inputDisparityWeightImage]
  -[CIDisparityRefinementAntialiasV3 setInputDisparityWeightImage:]


CIDisparityRefinementV3 : CIFilter
 @property  NSNumber *inputScale
 @property  CIImage *inputImage
 @property  CIImage *inputMainImage
 @property  CIImage *inputMatteImage
 @property  NSDictionary *inputTuningParameters
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIDisparityRefinementV3 customAttributes]

  // instance methods
  -[CIDisparityRefinementV3 outputImage]
  -[CIDisparityRefinementV3 inputImage]
  -[CIDisparityRefinementV3 setInputImage:]
  -[CIDisparityRefinementV3 inputScale]
  -[CIDisparityRefinementV3 setInputScale:]
  -[CIDisparityRefinementV3 inputTuningParameters]
  -[CIDisparityRefinementV3 setInputTuningParameters:]
  -[CIDisparityRefinementV3 inputMatteImage]
  -[CIDisparityRefinementV3 inputMainImage]
  -[CIDisparityRefinementV3 inputDraftMode]
  -[CIDisparityRefinementV3 setInputDraftMode:]
  -[CIDisparityRefinementV3 setInputMatteImage:]
  -[CIDisparityRefinementV3 alphaImageForMainImage:disparity:]
  -[CIDisparityRefinementV3 setInputMainImage:]


CIDepthEffectMakeBlurMap : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputShiftmapImage
 @property  CIImage *inputMatteImage
 @property  CIImage *inputHairImage
 @property  NSNumber *inputAperture
 @property  CIVector *inputLeftEyePosition
 @property  CIVector *inputRightEyePosition
 @property  CIVector *inputChinPosition
 @property  CIVector *inputFaceMidPoint
 @property  CIVector *inputFocusRect
 @property  NSNumber *inputScale
 @property  AVCameraCalibrationData *inputCalibrationData
 @property  id inputAuxDataMetadata
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIDepthEffectMakeBlurMap customAttributes]

  // instance methods
  -[CIDepthEffectMakeBlurMap setValue:forUndefinedKey:]
  -[CIDepthEffectMakeBlurMap outputImage]
  -[CIDepthEffectMakeBlurMap inputImage]
  -[CIDepthEffectMakeBlurMap setInputImage:]
  -[CIDepthEffectMakeBlurMap inputScale]
  -[CIDepthEffectMakeBlurMap setInputScale:]
  -[CIDepthEffectMakeBlurMap inputFocusRect]
  -[CIDepthEffectMakeBlurMap setInputFocusRect:]
  -[CIDepthEffectMakeBlurMap inputMatteImage]
  -[CIDepthEffectMakeBlurMap inputDraftMode]
  -[CIDepthEffectMakeBlurMap setInputDraftMode:]
  -[CIDepthEffectMakeBlurMap setInputMatteImage:]
  -[CIDepthEffectMakeBlurMap inputAperture]
  -[CIDepthEffectMakeBlurMap setInputAperture:]
  -[CIDepthEffectMakeBlurMap calibrationData]
  -[CIDepthEffectMakeBlurMap originalShiftMapSize]
  -[CIDepthEffectMakeBlurMap intrinsicMatrixFocalLength]
  -[CIDepthEffectMakeBlurMap inputLeftEyePosition]
  -[CIDepthEffectMakeBlurMap inputRightEyePosition]
  -[CIDepthEffectMakeBlurMap inputFaceMidPoint]
  -[CIDepthEffectMakeBlurMap inputChinPosition]
  -[CIDepthEffectMakeBlurMap upsampledShiftMap:]
  -[CIDepthEffectMakeBlurMap smoothShiftMapV2:]
  -[CIDepthEffectMakeBlurMap lensModelParams:]
  -[CIDepthEffectMakeBlurMap lensModelApply:shiftMap:]
  -[CIDepthEffectMakeBlurMap needToRunFaceMask]
  -[CIDepthEffectMakeBlurMap faceMaskParams:useNormalizedCoords:]
  -[CIDepthEffectMakeBlurMap faceMaskApply:blurMap:]
  -[CIDepthEffectMakeBlurMap refineShiftMapV3WithMainImage:shiftmap:lensModel:]
  -[CIDepthEffectMakeBlurMap faceMaskDelta:extent:parameters:distanceToAdd:]
  -[CIDepthEffectMakeBlurMap blurMapV2:]
  -[CIDepthEffectMakeBlurMap blurMapV3:shiftmap:alphaImage:]
  -[CIDepthEffectMakeBlurMap blurMapV4:shiftmap:alphaImage:hairImage:]
  -[CIDepthEffectMakeBlurMap inputShiftmapImage]
  -[CIDepthEffectMakeBlurMap setInputShiftmapImage:]
  -[CIDepthEffectMakeBlurMap inputHairImage]
  -[CIDepthEffectMakeBlurMap setInputHairImage:]
  -[CIDepthEffectMakeBlurMap setInputLeftEyePosition:]
  -[CIDepthEffectMakeBlurMap setInputRightEyePosition:]
  -[CIDepthEffectMakeBlurMap setInputChinPosition:]
  -[CIDepthEffectMakeBlurMap setInputFaceMidPoint:]
  -[CIDepthEffectMakeBlurMap inputAuxDataMetadata]
  -[CIDepthEffectMakeBlurMap setInputAuxDataMetadata:]
  -[CIDepthEffectMakeBlurMap inputCalibrationData]
  -[CIDepthEffectMakeBlurMap setInputCalibrationData:]


CIDepthEffectApplyBlurMap : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputBlurMap
 @property  CIImage *inputMatteImage
 @property  NSNumber *inputAperture
 @property  NSNumber *inputLumaNoiseScale
 @property  NSNumber *inputScale
 @property  id inputAuxDataMetadata
 @property  NSString *inputShape
 @property  NSNumber *inputDraftMode

  // class methods
  +[CIDepthEffectApplyBlurMap customAttributes]

  // instance methods
  -[CIDepthEffectApplyBlurMap outputImage]
  -[CIDepthEffectApplyBlurMap inputImage]
  -[CIDepthEffectApplyBlurMap setInputImage:]
  -[CIDepthEffectApplyBlurMap inputScale]
  -[CIDepthEffectApplyBlurMap setInputScale:]
  -[CIDepthEffectApplyBlurMap inputMatteImage]
  -[CIDepthEffectApplyBlurMap inputDraftMode]
  -[CIDepthEffectApplyBlurMap setInputDraftMode:]
  -[CIDepthEffectApplyBlurMap setInputMatteImage:]
  -[CIDepthEffectApplyBlurMap inputLumaNoiseScale]
  -[CIDepthEffectApplyBlurMap setInputLumaNoiseScale:]
  -[CIDepthEffectApplyBlurMap inputAperture]
  -[CIDepthEffectApplyBlurMap setInputAperture:]
  -[CIDepthEffectApplyBlurMap inputShape]
  -[CIDepthEffectApplyBlurMap setInputShape:]
  -[CIDepthEffectApplyBlurMap inputAuxDataMetadata]
  -[CIDepthEffectApplyBlurMap setInputAuxDataMetadata:]
  -[CIDepthEffectApplyBlurMap inputBlurMap]
  -[CIDepthEffectApplyBlurMap setInputBlurMap:]


CIDepthEffect : CIDepthBlurEffect

CIDepthBlurEffect : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputDisparityImage
 @property  CIImage *inputMatteImage
 @property  CIImage *inputHairImage
 @property  NSNumber *inputAperture
 @property  NSNumber *inputLumaNoiseScale
 @property  CIVector *inputLeftEyePositions
 @property  CIVector *inputRightEyePositions
 @property  CIVector *inputChinPositions
 @property  CIVector *inputNosePositions
 @property  CIVector *inputFocusRect
 @property  NSNumber *inputScaleFactor
 @property  AVCameraCalibrationData *inputCalibrationData
 @property  id inputAuxDataMetadata
 @property  NSString *inputShape

  // class methods
  +[CIDepthBlurEffect customAttributes]
  +[CIDepthBlurEffect getDraftMode:]
  +[CIDepthBlurEffect tuningParametersFromMetadata:]
  +[CIDepthBlurEffect metadataFromDictionary:metadata:]
  +[CIDepthBlurEffect replaceRenderingParameters:tuningParameters:]
  +[CIDepthBlurEffect augmentMetadataWithRenderingPropertiesForImage:]

  // instance methods
  -[CIDepthBlurEffect setValue:forUndefinedKey:]
  -[CIDepthBlurEffect outputImage]
  -[CIDepthBlurEffect inputImage]
  -[CIDepthBlurEffect setInputImage:]
  -[CIDepthBlurEffect inputDisparityImage]
  -[CIDepthBlurEffect setInputDisparityImage:]
  -[CIDepthBlurEffect inputFocusRect]
  -[CIDepthBlurEffect setInputFocusRect:]
  -[CIDepthBlurEffect inputMatteImage]
  -[CIDepthBlurEffect setInputMatteImage:]
  -[CIDepthBlurEffect inputLumaNoiseScale]
  -[CIDepthBlurEffect setInputLumaNoiseScale:]
  -[CIDepthBlurEffect inputAperture]
  -[CIDepthBlurEffect setInputAperture:]
  -[CIDepthBlurEffect inputShape]
  -[CIDepthBlurEffect setInputShape:]
  -[CIDepthBlurEffect setInputScaleFactor:]
  -[CIDepthBlurEffect inputScaleFactor]
  -[CIDepthBlurEffect inputHairImage]
  -[CIDepthBlurEffect setInputHairImage:]
  -[CIDepthBlurEffect inputAuxDataMetadata]
  -[CIDepthBlurEffect setInputAuxDataMetadata:]
  -[CIDepthBlurEffect inputCalibrationData]
  -[CIDepthBlurEffect setInputCalibrationData:]
  -[CIDepthBlurEffect _getFocusRect:focusRect:]
  -[CIDepthBlurEffect inputLeftEyePositions]
  -[CIDepthBlurEffect setInputLeftEyePositions:]
  -[CIDepthBlurEffect inputRightEyePositions]
  -[CIDepthBlurEffect setInputRightEyePositions:]
  -[CIDepthBlurEffect inputChinPositions]
  -[CIDepthBlurEffect setInputChinPositions:]
  -[CIDepthBlurEffect inputNosePositions]
  -[CIDepthBlurEffect setInputNosePositions:]


CUIScaleClampFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputScale

  // class methods
  +[CUIScaleClampFilter customAttributes]

  // instance methods
  -[CUIScaleClampFilter _kernel]
  -[CUIScaleClampFilter outputImage]
  -[CUIScaleClampFilter inputImage]
  -[CUIScaleClampFilter setInputImage:]
  -[CUIScaleClampFilter inputScale]
  -[CUIScaleClampFilter setInputScale:]


CUIInnerGlowOrShadowFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputOffset
 @property  NSNumber *inputRange
 @property  NSNumber *inputRadius
 @property  CIColor *inputColor

  // class methods
  +[CUIInnerGlowOrShadowFilter customAttributes]

  // instance methods
  -[CUIInnerGlowOrShadowFilter _kernel]
  -[CUIInnerGlowOrShadowFilter outputImage]
  -[CUIInnerGlowOrShadowFilter inputImage]
  -[CUIInnerGlowOrShadowFilter setInputImage:]
  -[CUIInnerGlowOrShadowFilter inputRadius]
  -[CUIInnerGlowOrShadowFilter setInputRadius:]
  -[CUIInnerGlowOrShadowFilter inputColor]
  -[CUIInnerGlowOrShadowFilter setInputColor:]
  -[CUIInnerGlowOrShadowFilter inputOffset]
  -[CUIInnerGlowOrShadowFilter setInputOffset:]
  -[CUIInnerGlowOrShadowFilter inputRange]
  -[CUIInnerGlowOrShadowFilter setInputRange:]


CUIOuterGlowOrShadowFilter : CIFilter
 @property  CIImage *inputImage
 @property  CIVector *inputOffset
 @property  NSNumber *inputRange
 @property  NSNumber *inputRadius
 @property  NSNumber *inputSize
 @property  NSNumber *inputSpread
 @property  CIColor *inputColor

  // class methods
  +[CUIOuterGlowOrShadowFilter customAttributes]

  // instance methods
  -[CUIOuterGlowOrShadowFilter _kernel]
  -[CUIOuterGlowOrShadowFilter outputImage]
  -[CUIOuterGlowOrShadowFilter inputImage]
  -[CUIOuterGlowOrShadowFilter setInputImage:]
  -[CUIOuterGlowOrShadowFilter inputRadius]
  -[CUIOuterGlowOrShadowFilter setInputRadius:]
  -[CUIOuterGlowOrShadowFilter inputColor]
  -[CUIOuterGlowOrShadowFilter setInputColor:]
  -[CUIOuterGlowOrShadowFilter inputSize]
  -[CUIOuterGlowOrShadowFilter setInputSize:]
  -[CUIOuterGlowOrShadowFilter inputOffset]
  -[CUIOuterGlowOrShadowFilter setInputOffset:]
  -[CUIOuterGlowOrShadowFilter inputRange]
  -[CUIOuterGlowOrShadowFilter setInputRange:]
  -[CUIOuterGlowOrShadowFilter inputSpread]
  -[CUIOuterGlowOrShadowFilter setInputSpread:]


CUIShapeEffectBlur1 : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputFill
 @property  CIVector *inputOffset
 @property  NSNumber *inputRadius
 @property  CIColor *inputGlowColorInner
 @property  CIColor *inputGlowColorOuter
 @property  CIColor *inputShadowColorInner
 @property  CIColor *inputShadowColorOuter
 @property  NSNumber *inputShadowBlurInner
 @property  NSNumber *inputShadowBlurOuter

  // class methods
  +[CUIShapeEffectBlur1 customAttributes]

  // instance methods
  -[CUIShapeEffectBlur1 _kernel]
  -[CUIShapeEffectBlur1 outputImage]
  -[CUIShapeEffectBlur1 inputImage]
  -[CUIShapeEffectBlur1 setInputImage:]
  -[CUIShapeEffectBlur1 inputRadius]
  -[CUIShapeEffectBlur1 setInputRadius:]
  -[CUIShapeEffectBlur1 inputOffset]
  -[CUIShapeEffectBlur1 setInputOffset:]
  -[CUIShapeEffectBlur1 inputFill]
  -[CUIShapeEffectBlur1 setInputFill:]
  -[CUIShapeEffectBlur1 inputGlowColorInner]
  -[CUIShapeEffectBlur1 setInputGlowColorInner:]
  -[CUIShapeEffectBlur1 inputGlowColorOuter]
  -[CUIShapeEffectBlur1 setInputGlowColorOuter:]
  -[CUIShapeEffectBlur1 inputShadowColorInner]
  -[CUIShapeEffectBlur1 setInputShadowColorInner:]
  -[CUIShapeEffectBlur1 inputShadowColorOuter]
  -[CUIShapeEffectBlur1 setInputShadowColorOuter:]
  -[CUIShapeEffectBlur1 inputShadowBlurInner]
  -[CUIShapeEffectBlur1 setInputShadowBlurInner:]
  -[CUIShapeEffectBlur1 inputShadowBlurOuter]
  -[CUIShapeEffectBlur1 setInputShadowBlurOuter:]


CUIOuterBevelEmbossFilter : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputSize
 @property  NSNumber *inputSoften
 @property  NSNumber *inputAngle
 @property  CIColor *inputHighlightColor
 @property  CIColor *inputShadowColor

  // class methods
  +[CUIOuterBevelEmbossFilter customAttributes]

  // instance methods
  -[CUIOuterBevelEmbossFilter _kernel]
  -[CUIOuterBevelEmbossFilter outputImage]
  -[CUIOuterBevelEmbossFilter inputImage]
  -[CUIOuterBevelEmbossFilter setInputImage:]
  -[CUIOuterBevelEmbossFilter inputAngle]
  -[CUIOuterBevelEmbossFilter setInputAngle:]
  -[CUIOuterBevelEmbossFilter inputSize]
  -[CUIOuterBevelEmbossFilter setInputSize:]
  -[CUIOuterBevelEmbossFilter _kernelC]
  -[CUIOuterBevelEmbossFilter inputSoften]
  -[CUIOuterBevelEmbossFilter setInputSoften:]
  -[CUIOuterBevelEmbossFilter inputHighlightColor]
  -[CUIOuterBevelEmbossFilter setInputHighlightColor:]
  -[CUIOuterBevelEmbossFilter inputShadowColor]
  -[CUIOuterBevelEmbossFilter setInputShadowColor:]


CUIInnerBevelEmbossFilter : CUIOuterBevelEmbossFilter
  // instance methods
  -[CUIInnerBevelEmbossFilter outputImage]
  -[CUIInnerBevelEmbossFilter _kernelInvertMask]
  -[CUIInnerBevelEmbossFilter _kernelMultiplyByMask]


CIEnhancementCalculation : NSObject
 @property  {?=dd} originalFaceColor
 @property  CIEnhancementHistogram *lumHist
 @property  CIEnhancementHistogram *rgbSumHist
 @property  CIEnhancementHistogram *satHist
 @property  CIEnhancementHistogram *borderHist

  // class methods
  +[CIEnhancementCalculation bestWarmthForI:q:percentChange:]

  // instance methods
  -[CIEnhancementCalculation init]
  -[CIEnhancementCalculation dealloc]
  -[CIEnhancementCalculation faceBalanceWarmth]
  -[CIEnhancementCalculation faceBalanceStrength]
  -[CIEnhancementCalculation originalFaceColor]
  -[CIEnhancementCalculation vibrance]
  -[CIEnhancementCalculation curveCount]
  -[CIEnhancementCalculation curvePointAtIndex:]
  -[CIEnhancementCalculation shadow]
  -[CIEnhancementCalculation setFaceColorFromChromaI:andChromaQ:]
  -[CIEnhancementCalculation rawShadow]
  -[CIEnhancementCalculation putShadowsAnalysisInto:]
  -[CIEnhancementCalculation downSampleHistogram:to:storeIn:]
  -[CIEnhancementCalculation printAnalysis]
  -[CIEnhancementCalculation setCurvePercent:]
  -[CIEnhancementCalculation setLuminanceHistogram:]
  -[CIEnhancementCalculation setRGBSumHistogram:]
  -[CIEnhancementCalculation setBorderHistogram:]
  -[CIEnhancementCalculation setSaturationHistogram:]
  -[CIEnhancementCalculation setupFaceColor:redIndex:greenIndex:blueIndex:]
  -[CIEnhancementCalculation setExposureValue:]
  -[CIEnhancementCalculation setShadowsMin:max:zeroExposure:]
  -[CIEnhancementCalculation printHistogram:downsampledTo:]
  -[CIEnhancementCalculation printHistogramsDownsampledTo:]
  -[CIEnhancementCalculation lumHist]
  -[CIEnhancementCalculation rgbSumHist]
  -[CIEnhancementCalculation satHist]
  -[CIEnhancementCalculation borderHist]


CIEnhancementCalculator : CIEnhancementCalculation
 @property  BOOL faceBalanceEnabled
 @property  BOOL vibranceEnabled
 @property  BOOL curvesEnabled
 @property  BOOL shadowsEnabled

  // instance methods
  -[CIEnhancementCalculator init]
  -[CIEnhancementCalculator dealloc]
  -[CIEnhancementCalculator setFaceBalanceEnabled:]
  -[CIEnhancementCalculator setVibranceEnabled:]
  -[CIEnhancementCalculator setCurvesEnabled:]
  -[CIEnhancementCalculator setShadowsEnabled:]
  -[CIEnhancementCalculator faceBalanceEnabled]
  -[CIEnhancementCalculator setupFaceColorFromImage:usingContext:features:]
  -[CIEnhancementCalculator setupHistogramsUsing:redIndex:greenIndex:blueIndex:]
  -[CIEnhancementCalculator vibranceEnabled]
  -[CIEnhancementCalculator curvesEnabled]
  -[CIEnhancementCalculator shadowsEnabled]
  -[CIEnhancementCalculator analyzeFeatures:usingContext:baseImage:]
  -[CIEnhancementCalculator histogramFromRows:componentOffset:]
  -[CIEnhancementCalculator setupFaceColorFromImage:usingContext:detectorOpts:]


CIEnhancementHistogram : NSObject
  // class methods
  +[CIEnhancementHistogram histogramFromData:]
  +[CIEnhancementHistogram histogramFromFloatData:]
  +[CIEnhancementHistogram histogramFromDoubleData:]

  // instance methods
  -[CIEnhancementHistogram values]


CIAutoEnhanceFace : NSObject
 @property  int size
 @property  int centerX
 @property  int centerY
 @property  double I
 @property  double Q

  // instance methods
  -[CIAutoEnhanceFace size]
  -[CIAutoEnhanceFace faceRect]
  -[CIAutoEnhanceFace initWithBounds:andImage:usingContext:]
  -[CIAutoEnhanceFace I]
  -[CIAutoEnhanceFace Q]
  -[CIAutoEnhanceFace centerX]
  -[CIAutoEnhanceFace centerY]


XFocalPlane : NSObject
 @property  {?=fffff} config
 @property  <MTLBuffer> *minMaxAtomic_buf
 @property  <MTLBuffer> *minMaxResult_buf
 @property  <MTLBuffer> *zeroShiftResult_buf

  // instance methods
  -[XFocalPlane dealloc]
  -[XFocalPlane .cxx_destruct]
  -[XFocalPlane config]
  -[XFocalPlane initWithDevice:library:]
  -[XFocalPlane setConfig:]
  -[XFocalPlane allocateResources]
  -[XFocalPlane encodeDisparityRefinementPreprocessingOn:alphaTexture:inputDisparityTexture:outputDisparityTexture:configuration:]
  -[XFocalPlane releaseResources]
  -[XFocalPlane _compileShadersWithLibrary:]
  -[XFocalPlane encodeFocalPlaneCalcOn:disparityTexture:]
  -[XFocalPlane encodeMinMaxOn:inputTexture:]
  -[XFocalPlane minMaxAtomic_buf]
  -[XFocalPlane minMaxResult_buf]
  -[XFocalPlane zeroShiftResult_buf]


RedEyeGlintFinder : CIFilter
  // instance methods
  -[RedEyeGlintFinder outputImage]


XMattingBoxTensorFilter : NSObject
  // class methods
  +[XMattingBoxTensorFilter supportedPixelFormats]

  // instance methods
  -[XMattingBoxTensorFilter .cxx_destruct]
  -[XMattingBoxTensorFilter initWithDevice:library:]
  -[XMattingBoxTensorFilter allocateResources:]
  -[XMattingBoxTensorFilter releaseResources]
  -[XMattingBoxTensorFilter _compileShadersWithLibrary:]
  -[XMattingBoxTensorFilter encodeSeparableSlidingStackOnCommandBuffer:sourceTexture:destinationTexture:]
  -[XMattingBoxTensorFilter encodeOnCommandBuffer:sourceTexture:destinationTexture:]


XMattingRGBDFilter : NSObject <MattingFilter>
 @property  {?=IIIIIfB} config
 @property  XMattingBoxTensorFilter *boxTensorFilter
 @property  BOOL stateComputed
 @property  BOOL coefficientsComputed

  // instance methods
  -[XMattingRGBDFilter dealloc]
  -[XMattingRGBDFilter .cxx_destruct]
  -[XMattingRGBDFilter config]
  -[XMattingRGBDFilter initWithDevice:library:]
  -[XMattingRGBDFilter setConfig:]
  -[XMattingRGBDFilter allocateResources:]
  -[XMattingRGBDFilter releaseResources]
  -[XMattingRGBDFilter _compileShadersWithLibrary:]
  -[XMattingRGBDFilter encodeNearestNeighborDownSamplingOn:inputTexture:outputTexture:]
  -[XMattingRGBDFilter encodeDisparityToAlphaOn:disparityTexture:destinationTexture:]
  -[XMattingRGBDFilter encodeCoefficientsOn:guideStack:alphaStack:mean_I:var_I:coefficients:]
  -[XMattingRGBDFilter encodeApplyCoefficientsOn:colorGuide:disparityGuide:constraints:destinationAlphaTexture:]
  -[XMattingRGBDFilter encodeStateOn:colorGuide:disparityGuide:initialSegmentation:constraints:]
  -[XMattingRGBDFilter encodeStepOn:]
  -[XMattingRGBDFilter encodeUpsampleOn:segmentation:colorGuide:disparityGuide:outputMatte:]
  -[XMattingRGBDFilter boxTensorFilter]
  -[XMattingRGBDFilter setBoxTensorFilter:]
  -[XMattingRGBDFilter stateComputed]
  -[XMattingRGBDFilter coefficientsComputed]
  -[XMattingRGBDFilter encodePushOn:textureArray:texture:]


XMattingRGBFilter : NSObject <MattingFilter>
 @property  {?=IIIIIfB} config
 @property  XMattingBoxTensorFilter *boxTensorFilter
 @property  BOOL stateComputed
 @property  BOOL coefficientsComputed

  // instance methods
  -[XMattingRGBFilter dealloc]
  -[XMattingRGBFilter .cxx_destruct]
  -[XMattingRGBFilter config]
  -[XMattingRGBFilter initWithDevice:library:]
  -[XMattingRGBFilter setConfig:]
  -[XMattingRGBFilter allocateResources:]
  -[XMattingRGBFilter releaseResources]
  -[XMattingRGBFilter _compileShadersWithLibrary:]
  -[XMattingRGBFilter encodeNearestNeighborDownSamplingOn:inputTexture:outputTexture:]
  -[XMattingRGBFilter encodeCoefficientsOn:guideStack:alphaStack:mean_I:var_I:coefficients:]
  -[XMattingRGBFilter encodeApplyCoefficientsOn:colorGuide:disparityGuide:constraints:destinationAlphaTexture:]
  -[XMattingRGBFilter encodeStateOn:colorGuide:disparityGuide:initialSegmentation:constraints:]
  -[XMattingRGBFilter encodeStepOn:]
  -[XMattingRGBFilter encodeUpsampleOn:segmentation:colorGuide:disparityGuide:outputMatte:]
  -[XMattingRGBFilter boxTensorFilter]
  -[XMattingRGBFilter setBoxTensorFilter:]
  -[XMattingRGBFilter stateComputed]
  -[XMattingRGBFilter coefficientsComputed]


XMattingSolver : NSObject
 @property  {?=IIIIfIBffII} config

  // instance methods
  -[XMattingSolver .cxx_destruct]
  -[XMattingSolver config]
  -[XMattingSolver initWithDevice:library:]
  -[XMattingSolver setConfig:]
  -[XMattingSolver allocateResources:]
  -[XMattingSolver enqueueSolveOn:constraints:colorGuide:extraGuide:inputTexture:outputTexture:]
  -[XMattingSolver releaseResources]
  -[XMattingSolver _compileShadersWithLibrary:]
  -[XMattingSolver encodeConstraintsOn:segmentation:constraints:]
  -[XMattingSolver encodeApplySolverConstraintsOn:constraints:filteredSegmentation:segmentation:]


RedEyeMinMorphology : CIFilter
  // instance methods
  -[RedEyeMinMorphology outputImage]


RedEyeMaxMorphology : CIFilter
  // instance methods
  -[RedEyeMaxMorphology outputImage]


RedEyeDifference : CIFilter
  // instance methods
  -[RedEyeDifference outputImage]


RedEyeGradient : CIFilter
  // instance methods
  -[RedEyeGradient outputImage]


RedEyeChannel : CIFilter
  // instance methods
  -[RedEyeChannel outputImage]
  -[RedEyeChannel filterNameForChannel:]
  -[RedEyeChannel parameterNamesForChannel:]


CIRedEyeRepair : NSObject
  // class methods
  +[CIRedEyeRepair supportRectangleWithFaceArray:imageSize:]
  +[CIRedEyeRepair supportRectangleWithRepair:imageSize:]
  +[CIRedEyeRepair upperRepairDistance:]
  +[CIRedEyeRepair upperRepairDistanceFraction:]
  +[CIRedEyeRepair supportRectangleWithPoint:imageSize:IOD:]

  // instance methods
  -[CIRedEyeRepair dealloc]
  -[CIRedEyeRepair format]
  -[CIRedEyeRepair setColorSpace:]
  -[CIRedEyeRepair faces]
  -[CIRedEyeRepair autoRepairWithFaceArray:]
  -[CIRedEyeRepair repairArray]
  -[CIRedEyeRepair initWithExternalBuffer:subRectangle:fullSize:rowBytes:cameraModel:]
  -[CIRedEyeRepair executeRepair:]
  -[CIRedEyeRepair repairExternalBuffer]
  -[CIRedEyeRepair repairs]
  -[CIRedEyeRepair getBlockSetWithImage:into:width:height:]
  -[CIRedEyeRepair getDataProviderBytePtrWithImage:into:width:height:]
  -[CIRedEyeRepair getDataProviderCopyWithImage:into:]
  -[CIRedEyeRepair initWithDeskView:andFrame:]
  -[CIRedEyeRepair skinInit]
  -[CIRedEyeRepair initializeNonDebugVariables]
  -[CIRedEyeRepair initWithFrameExternalBuffer:]
  -[CIRedEyeRepair repairWithTag:]
  -[CIRedEyeRepair upperRepairSizeFraction:]
  -[CIRedEyeRepair lowerRepairSizeFraction:]
  -[CIRedEyeRepair lowerRepairSize:]
  -[CIRedEyeRepair upperRepairSize:]
  -[CIRedEyeRepair extractReusableAlignedBitmapsAroundPoint:YR:subYBitmap:subCbCrBitmap:]
  -[CIRedEyeRepair averageValueFromY:withinSkinMask:butOutsideAlpha:]
  -[CIRedEyeRepair computeTrimmedBitmaps:newY:newCbCr:IR:newTrimY:newTrimCbCr:returningYR:andCbCrR:]
  -[CIRedEyeRepair undoRepair:]
  -[CIRedEyeRepair redEyeRemovalWithPoint:alignPupilShades:matching:force:IOD:tap:]
  -[CIRedEyeRepair redoRepairWithTag:IOD:]
  -[CIRedEyeRepair insertIntoProminenceVettingHopper:max:outside:confidence:distance:row:column:IOD:]
  -[CIRedEyeRepair gatherProminencesWithC:MC:maxwindowsize:repairsize:IR:fr:intoHopper:faceIndex:left:coss:sins:bitmapName:]
  -[CIRedEyeRepair gatherProminencesWithC:MC:altC:altMC:maxwindowsize:repairsize:IR:fr:intoHopper:faceIndex:left:]
  -[CIRedEyeRepair confidenceWithIOD:repair:andProminenceDifference:]
  -[CIRedEyeRepair extractAndGatherProminencesWithRect:face:faceIndex:left:maxwindowsize:repairsize:returningRedHopper:whiteHopper:redChannel:redChannelMask:]
  -[CIRedEyeRepair repairDecisionWithFaceRecord:left:redHopper:whiteHopper:]
  -[CIRedEyeRepair extractAverageFaceY:contrast:faceIndex:]
  -[CIRedEyeRepair applyEyeRepairWithEye:left:IOD:autoPupilTonality:match:faceIndex:whiteHopper:]
  -[CIRedEyeRepair distanceMaskFromPolyToCb:Cr:]
  -[CIRedEyeRepair prepareLineFunctions]
  -[CIRedEyeRepair autoRepairExtractAndSearchLeft:right:data:repairSize:autoPupilTonality:faceIndex:]
  -[CIRedEyeRepair getFloat:d:s:]
  -[CIRedEyeRepair orientPointX:Y:]
  -[CIRedEyeRepair getInt:d:s:]
  -[CIRedEyeRepair getBool:d:s:]
  -[CIRedEyeRepair orientRectangleMinX:maxX:minY:maxY:]
  -[CIRedEyeRepair redEyeRemovalWithData:]
  -[CIRedEyeRepair initWithCGImage:cameraModel:]
  -[CIRedEyeRepair createRepairedImage]
  -[CIRedEyeRepair initWithIOSurface:format:colorSpace:cameraModel:]
  -[CIRedEyeRepair initWithExternalBuffer:size:rowBytes:]
  -[CIRedEyeRepair debug]
  -[CIRedEyeRepair setDebug:]
  -[CIRedEyeRepair logRepairs]
  -[CIRedEyeRepair setLogRepairs:]
  -[CIRedEyeRepair redEyeThresholdKind]
  -[CIRedEyeRepair setRedEyeThresholdKind:]
  -[CIRedEyeRepair renderAlpha]
  -[CIRedEyeRepair setRenderAlpha:]
  -[CIRedEyeRepair infillBackground]
  -[CIRedEyeRepair setInfillBackground:]
  -[CIRedEyeRepair renderSpecularShine]
  -[CIRedEyeRepair setRenderSpecularShine:]
  -[CIRedEyeRepair specularSize]
  -[CIRedEyeRepair setSpecularSize:]
  -[CIRedEyeRepair specularSoftness]
  -[CIRedEyeRepair setSpecularSoftness:]
  -[CIRedEyeRepair pupilShadeAlignment]
  -[CIRedEyeRepair setPupilShadeAlignment:]
  -[CIRedEyeRepair autoPupilTonality]
  -[CIRedEyeRepair setAutoPupilTonality:]
  -[CIRedEyeRepair forceLoValue]
  -[CIRedEyeRepair setForceLoValue:]
  -[CIRedEyeRepair loValue]
  -[CIRedEyeRepair setLoValue:]
  -[CIRedEyeRepair standardTemplate]
  -[CIRedEyeRepair nRepairs]
  -[CIRedEyeRepair lastRepairTag]
  -[CIRedEyeRepair redoLastRepair]
  -[CIRedEyeRepair executeRepairArray:]
  -[CIRedEyeRepair setFaceIndex:]
  -[CIRedEyeRepair setLeft:]


CIKernelLibrary : NSObject
 @property  unsigned long functionCount

  // class methods
  +[CIKernelLibrary libraryWithData:error:]
  +[CIKernelLibrary internalLibraryWithName:device:]

  // instance methods
  -[CIKernelLibrary dealloc]
  -[CIKernelLibrary functionWithName:]
  -[CIKernelLibrary functionCount]
  -[CIKernelLibrary externFunctionNames]
  -[CIKernelLibrary initWithData:error:]
  -[CIKernelLibrary newFunctionWithName:device:]


CIBlurmapRefinementThreshold : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputThreshold

  // instance methods
  -[CIBlurmapRefinementThreshold outputImage]
  -[CIBlurmapRefinementThreshold inputImage]
  -[CIBlurmapRefinementThreshold setInputImage:]
  -[CIBlurmapRefinementThreshold inputThreshold]
  -[CIBlurmapRefinementThreshold setInputThreshold:]
  -[CIBlurmapRefinementThreshold kernel]


CIBlurmapRefinementLinearMapping : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputSecondaryImage
 @property  NSNumber *inputScalingFactor

  // instance methods
  -[CIBlurmapRefinementLinearMapping outputImage]
  -[CIBlurmapRefinementLinearMapping inputImage]
  -[CIBlurmapRefinementLinearMapping setInputImage:]
  -[CIBlurmapRefinementLinearMapping kernel]
  -[CIBlurmapRefinementLinearMapping inputSecondaryImage]
  -[CIBlurmapRefinementLinearMapping setInputSecondaryImage:]
  -[CIBlurmapRefinementLinearMapping kernelNoSecondaryImage]
  -[CIBlurmapRefinementLinearMapping inputScalingFactor]
  -[CIBlurmapRefinementLinearMapping setInputScalingFactor:]


CIBlurmapRefinementDistanceDelta : CIFilter
 @property  CIImage *inputImage
 @property  CIImage *inputSecondaryImage
 @property  NSNumber *inputDistance
 @property  NSNumber *inputThreshold
 @property  NSNumber *inputScalingFactor

  // instance methods
  -[CIBlurmapRefinementDistanceDelta outputImage]
  -[CIBlurmapRefinementDistanceDelta inputImage]
  -[CIBlurmapRefinementDistanceDelta setInputImage:]
  -[CIBlurmapRefinementDistanceDelta inputThreshold]
  -[CIBlurmapRefinementDistanceDelta setInputThreshold:]
  -[CIBlurmapRefinementDistanceDelta inputSecondaryImage]
  -[CIBlurmapRefinementDistanceDelta setInputSecondaryImage:]
  -[CIBlurmapRefinementDistanceDelta inputScalingFactor]
  -[CIBlurmapRefinementDistanceDelta setInputScalingFactor:]
  -[CIBlurmapRefinementDistanceDelta inputDistance]
  -[CIBlurmapRefinementDistanceDelta setInputDistance:]


CIPerspectiveRotate : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputFocalLength
 @property  NSNumber *inputPitch
 @property  NSNumber *inputYaw
 @property  NSNumber *inputRoll
 @property  {?=[3]} outputTransform

  // class methods
  +[CIPerspectiveRotate customAttributes]

  // instance methods
  -[CIPerspectiveRotate .cxx_construct]
  -[CIPerspectiveRotate outputImage]
  -[CIPerspectiveRotate inputImage]
  -[CIPerspectiveRotate setInputImage:]
  -[CIPerspectiveRotate computeCameraIntrinsics]
  -[CIPerspectiveRotate outputTransform]
  -[CIPerspectiveRotate inputFocalLength]
  -[CIPerspectiveRotate setInputFocalLength:]
  -[CIPerspectiveRotate inputPitch]
  -[CIPerspectiveRotate setInputPitch:]
  -[CIPerspectiveRotate inputYaw]
  -[CIPerspectiveRotate setInputYaw:]
  -[CIPerspectiveRotate inputRoll]
  -[CIPerspectiveRotate setInputRoll:]


CIKeystoneCorrection : CIFilter
 @property  CIImage *inputImage
 @property  NSNumber *inputFocalLength
 @property  CIVector *inputTopLeft
 @property  CIVector *inputTopRight
 @property  CIVector *inputBottomRight
 @property  CIVector *inputBottomLeft
 @property  {?=[3]} outputTransform
 @property  CIFilter *outputRotationFilter

  // class methods
  +[CIKeystoneCorrection customAttributes]

  // instance methods
  -[CIKeystoneCorrection .cxx_construct]
  -[CIKeystoneCorrection outputImage]
  -[CIKeystoneCorrection inputImage]
  -[CIKeystoneCorrection setInputImage:]
  -[CIKeystoneCorrection inputTopLeft]
  -[CIKeystoneCorrection setInputTopLeft:]
  -[CIKeystoneCorrection inputTopRight]
  -[CIKeystoneCorrection setInputTopRight:]
  -[CIKeystoneCorrection inputBottomRight]
  -[CIKeystoneCorrection setInputBottomRight:]
  -[CIKeystoneCorrection inputBottomLeft]
  -[CIKeystoneCorrection setInputBottomLeft:]
  -[CIKeystoneCorrection computeCameraIntrinsics]
  -[CIKeystoneCorrection outputTransform]
  -[CIKeystoneCorrection inputFocalLength]
  -[CIKeystoneCorrection setInputFocalLength:]
  -[CIKeystoneCorrection computeRotation]
  -[CIKeystoneCorrection outputRotationFilter]


CIKeystoneCorrectionCombined : CIKeystoneCorrection
  // instance methods
  -[CIKeystoneCorrectionCombined computeRotation]


CIKeystoneCorrectionHorizontal : CIKeystoneCorrection
  // instance methods
  -[CIKeystoneCorrectionHorizontal computeRotation]


CIKeystoneCorrectionVertical : CIKeystoneCorrection
  // instance methods
  -[CIKeystoneCorrectionVertical computeRotation]


NSUserActivity(CIBarcodeDescriptor)
	// instance methods
	-[NSUserActivity(CIBarcodeDescriptor) detectedBarcodeDescriptor]
	-[NSUserActivity(CIBarcodeDescriptor) setDetectedCode:]

CIFilter(Interposer)
	// class methods
	+[CIFilter(Interposer) load]
	+[CIFilter(Interposer) indexForWrapperNumber:]
	+[CIFilter(Interposer) exchangeImplementationsForClass]
	+[CIFilter(Interposer) wrapClassIfNeeded:]
	+[CIFilter(Interposer) filterName:replacement:arguments:]
	+[CIFilter(Interposer) filterName:append:arguments:]
	+[CIFilter(Interposer) filterName:prepend:imageName:arguments:]
	+[CIFilter(Interposer) addFilterToSkip:]
	+[CIFilter(Interposer) filterName:replacement:]

	// instance methods
	-[CIFilter(Interposer) _prependSingleFilter:]
	-[CIFilter(Interposer) _appendSingleFilterTo:filterAndSettings:]
	-[CIFilter(Interposer) _prepend:]
	-[CIFilter(Interposer) _append:image:]
	-[CIFilter(Interposer) outputImageCatchAll:]
	-[CIFilter(Interposer) wrappedOutputImage10]
	-[CIFilter(Interposer) wrappedOutputImage11]
	-[CIFilter(Interposer) wrappedOutputImage12]
	-[CIFilter(Interposer) wrappedOutputImage13]
	-[CIFilter(Interposer) wrappedOutputImage14]
	-[CIFilter(Interposer) wrappedOutputImage15]
	-[CIFilter(Interposer) wrappedOutputImage16]
	-[CIFilter(Interposer) wrappedOutputImage17]
	-[CIFilter(Interposer) wrappedOutputImage18]
	-[CIFilter(Interposer) wrappedOutputImage19]
	-[CIFilter(Interposer) wrappedOutputImage20]
	-[CIFilter(Interposer) wrappedOutputImage21]
	-[CIFilter(Interposer) wrappedOutputImage22]
	-[CIFilter(Interposer) wrappedOutputImage23]
	-[CIFilter(Interposer) wrappedOutputImage24]
	-[CIFilter(Interposer) wrappedOutputImage25]
	-[CIFilter(Interposer) wrappedOutputImage26]
	-[CIFilter(Interposer) wrappedOutputImage27]
	-[CIFilter(Interposer) wrappedOutputImage28]
	-[CIFilter(Interposer) wrappedOutputImage29]
	-[CIFilter(Interposer) wrappedOutputImage30]
	-[CIFilter(Interposer) wrappedOutputImage31]
	-[CIFilter(Interposer) wrappedOutputImage32]
	-[CIFilter(Interposer) wrappedOutputImage33]
	-[CIFilter(Interposer) wrappedOutputImage34]
	-[CIFilter(Interposer) wrappedOutputImage35]
	-[CIFilter(Interposer) wrappedOutputImage36]
	-[CIFilter(Interposer) wrappedOutputImage37]
	-[CIFilter(Interposer) wrappedOutputImage38]
	-[CIFilter(Interposer) wrappedOutputImage39]
	-[CIFilter(Interposer) wrappedOutputImage40]
	-[CIFilter(Interposer) wrappedOutputImage41]
	-[CIFilter(Interposer) wrappedOutputImage42]
	-[CIFilter(Interposer) wrappedOutputImage43]
	-[CIFilter(Interposer) wrappedOutputImage44]
	-[CIFilter(Interposer) wrappedOutputImage45]
	-[CIFilter(Interposer) wrappedOutputImage46]
	-[CIFilter(Interposer) wrappedOutputImage47]
	-[CIFilter(Interposer) wrappedOutputImage48]
	-[CIFilter(Interposer) wrappedOutputImage49]
	-[CIFilter(Interposer) wrappedOutputImage50]
	-[CIFilter(Interposer) wrappedOutputImage51]
	-[CIFilter(Interposer) wrappedOutputImage52]
	-[CIFilter(Interposer) wrappedOutputImage53]
	-[CIFilter(Interposer) wrappedOutputImage54]
	-[CIFilter(Interposer) wrappedOutputImage55]
	-[CIFilter(Interposer) wrappedOutputImage56]
	-[CIFilter(Interposer) wrappedOutputImage57]
	-[CIFilter(Interposer) wrappedOutputImage58]
	-[CIFilter(Interposer) wrappedOutputImage59]
	-[CIFilter(Interposer) wrappedOutputImage60]
	-[CIFilter(Interposer) wrappedOutputImage61]
	-[CIFilter(Interposer) wrappedOutputImage62]
	-[CIFilter(Interposer) wrappedOutputImage63]
	-[CIFilter(Interposer) wrappedOutputImage64]
	-[CIFilter(Interposer) wrappedOutputImage65]
	-[CIFilter(Interposer) wrappedOutputImage66]
	-[CIFilter(Interposer) wrappedOutputImage67]
	-[CIFilter(Interposer) wrappedOutputImage68]
	-[CIFilter(Interposer) wrappedOutputImage69]
	-[CIFilter(Interposer) wrappedOutputImage70]
	-[CIFilter(Interposer) wrappedOutputImage71]
	-[CIFilter(Interposer) wrappedOutputImage72]
	-[CIFilter(Interposer) wrappedOutputImage73]
	-[CIFilter(Interposer) wrappedOutputImage74]
	-[CIFilter(Interposer) wrappedOutputImage75]
	-[CIFilter(Interposer) wrappedOutputImage76]
	-[CIFilter(Interposer) wrappedOutputImage77]
	-[CIFilter(Interposer) wrappedOutputImage78]
	-[CIFilter(Interposer) wrappedOutputImage79]
	-[CIFilter(Interposer) wrappedOutputImage80]
	-[CIFilter(Interposer) wrappedOutputImage81]
	-[CIFilter(Interposer) wrappedOutputImage82]
	-[CIFilter(Interposer) wrappedOutputImage83]
	-[CIFilter(Interposer) wrappedOutputImage84]
	-[CIFilter(Interposer) wrappedOutputImage85]
	-[CIFilter(Interposer) wrappedOutputImage86]
	-[CIFilter(Interposer) wrappedOutputImage87]
	-[CIFilter(Interposer) wrappedOutputImage88]
	-[CIFilter(Interposer) wrappedOutputImage89]
	-[CIFilter(Interposer) wrappedOutputImage90]
	-[CIFilter(Interposer) wrappedOutputImage91]
	-[CIFilter(Interposer) wrappedOutputImage92]
	-[CIFilter(Interposer) wrappedOutputImage93]
	-[CIFilter(Interposer) wrappedOutputImage94]
	-[CIFilter(Interposer) wrappedOutputImage95]
	-[CIFilter(Interposer) wrappedOutputImage96]
	-[CIFilter(Interposer) wrappedOutputImage97]
	-[CIFilter(Interposer) wrappedOutputImage98]
	-[CIFilter(Interposer) wrappedOutputImage99]

01 00 0b00 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 1240 /System/Library/PrivateFrameworks/FaceCore.framework/FaceCore: FCRFace 
01 00 1240 /System/Library/PrivateFrameworks/FaceCore.framework/FaceCore: FCRFaceDetector 
01 00 0640 /System/Library/PrivateFrameworks/GraphVisualizer.framework/GraphVisualizer: GVGraph 
01 00 0640 /System/Library/PrivateFrameworks/GraphVisualizer.framework/GraphVisualizer: GVNode 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageAreaMax 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageAreaMin 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageBox 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageConvolution 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageDescriptor 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageGaussianBlur 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageIntegral 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageStatisticsMean 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageStatisticsMinAndMax 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageThresholdBinary 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSImageThresholdBinaryInverse 
01 00 0900 /System/Library/Frameworks/MetalPerformanceShaders.framework/MetalPerformanceShaders: MPSTemporaryImage 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLCaptureManager 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLFunctionConstantValues 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLSamplerDescriptor 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0800 /System/Library/Frameworks/Metal.framework/Metal: MTLTileRenderPipelineDescriptor 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAffineTransform 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationQueue 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUserActivity 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
