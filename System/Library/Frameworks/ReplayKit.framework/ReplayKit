|| __DATA.__data ___RPLogLevel
|| __DATA.__objc_data _OBJC_CLASS_$_RPAppAudioCaptureManager
|| __DATA.__objc_data _OBJC_CLASS_$_RPAudioMixUtility
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastActivityExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastActivityHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastActivityViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastController
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastExtensionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastHandler
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastHostViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastMP4ClipHandler
|| __DATA.__objc_data _OBJC_CLASS_$_RPBroadcastSampleHandler
|| __DATA.__objc_data _OBJC_CLASS_$_RPDaemonProxy
|| __DATA.__objc_data _OBJC_CLASS_$_RPExtensionContext
|| __DATA.__objc_data _OBJC_CLASS_$_RPExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_RPFlatVideoOverlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_RPHighFidelityVideoOverlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_RPIOSurfaceObject
|| __DATA.__objc_data _OBJC_CLASS_$_RPModalPresentationWindow
|| __DATA.__objc_data _OBJC_CLASS_$_RPPGPipViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPPipView
|| __DATA.__objc_data _OBJC_CLASS_$_RPPipViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_RPScreenRecorder
|| __DATA.__objc_data _OBJC_CLASS_$_RPStoreInfo
|| __DATA.__objc_data _OBJC_CLASS_$_RPStoreManager
|| __DATA.__objc_data _OBJC_CLASS_$_RPSystemBroadcastPickerView
|| __DATA.__objc_data _OBJC_CLASS_$_RPVideoEditorExtensionHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_RPVideoEditorHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPAppAudioCaptureManager
|| __DATA.__objc_data _OBJC_METACLASS_$_RPAudioMixUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastActivityExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastActivityHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastActivityViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastExtensionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastHostViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastMP4ClipHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_RPBroadcastSampleHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_RPDaemonProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_RPExtensionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RPExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RPFlatVideoOverlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_RPHighFidelityVideoOverlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_RPIOSurfaceObject
|| __DATA.__objc_data _OBJC_METACLASS_$_RPModalPresentationWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_RPPGPipViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPPipView
|| __DATA.__objc_data _OBJC_METACLASS_$_RPPipViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_RPScreenRecorder
|| __DATA.__objc_data _OBJC_METACLASS_$_RPStoreInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_RPStoreManager
|| __DATA.__objc_data _OBJC_METACLASS_$_RPSystemBroadcastPickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_RPVideoEditorExtensionHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_RPVideoEditorHostViewController
|| __DATA_CONST.__const _RPApplicationInfoBundleIdentifierKey
|| __DATA_CONST.__const _RPRecordingErrorDomain
|| __DATA_CONST.__const _RPVideoEditorExtensionAppNameKey
|| __DATA_CONST.__const _RPVideoEditorExtensionBundleIdentifierKey
|| __DATA_CONST.__const _RPVideoEditorExtensionFileAttachmentKey
|| __DATA_CONST.__const _RPVideoEditorExtensionMoviePathKey
|| __DATA_CONST.__const _RPVideoEditorExtensionOverrideShareMessageKey
|| __DATA_CONST.__const _RPVideoEditorExtensionOverrideTintColorKey
|| __DATA_CONST.__const _RPVideoSampleOrientationKey
|| __TEXT.__const _ReplayKitVersionNumber
|| __TEXT.__const _ReplayKitVersionString
|| __TEXT.__text _RPLogSetLogLevel
|| __TEXT.__text _RPSampleBufferUtilities_CopySampleBufferFromSourceBuffer
|| __TEXT.__text _RPSampleBufferUtilities_CreateAudioSampleBuffer
|| __TEXT.__text _RPSampleBufferUtilities_CreateDecodeAudioSampleBuffer
|| __TEXT.__text _RPSampleBufferUtilities_CreateEmptyAudioSampleBufferWithTimeInterval
|| __TEXT.__text _RPSampleBufferUtilities_CreateSampleBufferFromIOSurface
|| __TEXT.__text _RPSampleBufferUtilities_CreateSampleBufferWithPixelBuffer
|| __TEXT.__text _RPSampleBufferUtilities_EncodeAudioSampleBuffer
|| __TEXT.__text _RPSampleBufferUtilities_ReleaseAudioSampleBuffer
|| __TEXT.__text _RPSampleBufferUtilities_SecondsPresentationTimeForSample
__ AVConference: _OBJC_CLASS_$_AVConferencePreview
__ AVFoundation: _AVAssetExportPresetHighestQuality
__ AVFoundation: _AVCaptureSessionPresetHigh
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AppleMediaServices: _AMSLookupItemArtworkCropStyleBoundedBox
__ AppleMediaServices: _AMSLookupItemArtworkFormatJPG
__ AppleMediaServices: _AMSLookupKeyProfileProduct
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ AudioToolbox: _AudioQueueAddPropertyListener
__ AudioToolbox: _AudioQueueAllocateBuffer
__ AudioToolbox: _AudioQueueDispose
__ AudioToolbox: _AudioQueueEnqueueBuffer
__ AudioToolbox: _AudioQueueFreeBuffer
__ AudioToolbox: _AudioQueueGetProperty
__ AudioToolbox: _AudioQueueNewInput
__ AudioToolbox: _AudioQueueRemovePropertyListener
__ AudioToolbox: _AudioQueueSetProperty
__ AudioToolbox: _AudioQueueStart
__ AudioToolbox: _AudioQueueStop
__ Celestial: _AVSystemController_CarPlayIsConnectedAttribute
__ Celestial: _AVSystemController_CarPlayIsConnectedDidChangeNotification
__ Celestial: _AVSystemController_CurrentExternalScreenAttribute
__ Celestial: _AVSystemController_ExternalScreenDidChangeNotification
__ Celestial: _AVSystemController_ExternalScreenType_AirPlay
__ Celestial: _AVSystemController_ExternalScreenType_TVOut
__ Celestial: _AVSystemController_SubscribeToNotificationsAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleNameKey
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextSetGrayFillColor
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectZero
__ CoreMedia: _CMAudioFormatDescriptionCreate
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMAudioSampleBufferCreateReadyWithPacketDescriptions
__ CoreMedia: _CMAudioSampleBufferCreateWithPacketDescriptions
__ CoreMedia: _CMBlockBufferAssureBlockMemory
__ CoreMedia: _CMBlockBufferCreateWithMemoryBlock
__ CoreMedia: _CMBlockBufferReplaceDataBytes
__ CoreMedia: _CMClockMakeHostTimeFromSystemUnits
__ CoreMedia: _CMSampleBufferCreate
__ CoreMedia: _CMSampleBufferCreateCopyWithNewTiming
__ CoreMedia: _CMSampleBufferCreateForImageBuffer
__ CoreMedia: _CMSampleBufferCreateReadyWithImageBuffer
__ CoreMedia: _CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer
__ CoreMedia: _CMSampleBufferGetDuration
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetNumSamples
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMSampleBufferGetSampleTimingInfo
__ CoreMedia: _CMSampleBufferGetSampleTimingInfoArray
__ CoreMedia: _CMSampleBufferSetDataBufferFromAudioBufferList
__ CoreMedia: _CMSampleBufferSetOutputPresentationTimeStamp
__ CoreMedia: _CMSetAttachment
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMVideoFormatDescriptionCreateForImageBuffer
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreMedia: _kCMTimingInfoInvalid
__ CoreServices: _kUTTypeData
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ Foundation: _NSClassFromString
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceLookupFromXPCObject
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCFeatureScreenRecordingAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ Pegasus: _OBJC_CLASS_$_PGPictureInPictureProxy
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingController
__ UIKit: _OBJC_CLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIApplicationRotationFollowingWindow
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIScreenCapturedDidChangeNotification
__ UIKit: _UIWindowLevelAlert
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _SANDBOX_EXTENSION_DEFAULT
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
RPBroadcastMP4ClipHandler : RPBroadcastHandler
  // instance methods
  -[RPBroadcastMP4ClipHandler beginRequestWithExtensionContext:]
  -[RPBroadcastMP4ClipHandler processMP4ClipWithURL:setupInfo:finished:]
  -[RPBroadcastMP4ClipHandler finishedProcessingMP4ClipWithUpdatedBroadcastConfiguration:error:]


RPAppAudioCaptureManager : NSObject
  // class methods
  +[RPAppAudioCaptureManager audioStreamBasicDescriptionWithStereo:]

  // instance methods
  -[RPAppAudioCaptureManager .cxx_destruct]
  -[RPAppAudioCaptureManager stop]
  -[RPAppAudioCaptureManager init]
  -[RPAppAudioCaptureManager handleStartAudioQueueFailed:didFailHandler:]
  -[RPAppAudioCaptureManager startWithProcessID:outputHandler:didStartHandler:]
  -[RPAppAudioCaptureManager resumeWithProcessID:]


RPPGPipViewController : UIViewController <AVConferencePreviewClientDelegate, PGPictureInPictureProxyDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RPPGPipViewController .cxx_destruct]
  -[RPPGPipViewController init]
  -[RPPGPipViewController viewDidLayoutSubviews]
  -[RPPGPipViewController loadView]
  -[RPPGPipViewController observeValueForKeyPath:ofObject:change:context:]
  -[RPPGPipViewController viewDidDisappear:]
  -[RPPGPipViewController setupPreview]
  -[RPPGPipViewController didStartPreview]
  -[RPPGPipViewController didPausePreview]
  -[RPPGPipViewController didStopPreview]
  -[RPPGPipViewController didChangeLocalVideoAttributes:]
  -[RPPGPipViewController didChangeLocalScreenAttributes:]
  -[RPPGPipViewController cameraDidBecomeAvailableForUniqueID:]
  -[RPPGPipViewController cameraDidBecomeInterruptedForForUniqueID:reason:]
  -[RPPGPipViewController cameraWithPosition:]
  -[RPPGPipViewController updateViewGeometry]
  -[RPPGPipViewController stopPipSession]
  -[RPPGPipViewController layoutPreviewLayer]
  -[RPPGPipViewController startPipSession]


RPSystemBroadcastPickerView : UIView <NSCoding>
 @property  UIButton *broadcastPickerButton
 @property  NSString *preferredExtension
 @property  BOOL showsMicrophoneButton

  // instance methods
  -[RPSystemBroadcastPickerView initWithCoder:]
  -[RPSystemBroadcastPickerView preferredExtension]
  -[RPSystemBroadcastPickerView .cxx_destruct]
  -[RPSystemBroadcastPickerView initWithFrame:]
  -[RPSystemBroadcastPickerView buttonPressed:]
  -[RPSystemBroadcastPickerView addBroadcastPickerButton]
  -[RPSystemBroadcastPickerView broadcastPickerButton]
  -[RPSystemBroadcastPickerView screenCaptureChanged]
  -[RPSystemBroadcastPickerView setPreferredExtension:]
  -[RPSystemBroadcastPickerView showsMicrophoneButton]
  -[RPSystemBroadcastPickerView setShowsMicrophoneButton:]
  -[RPSystemBroadcastPickerView setBroadcastPickerButton:]


RPStoreInfo : NSObject
 @property  NSString *bundleID
 @property  NSString *appName
 @property  NSString *author
 @property  NSURL *itemURL
 @property  NSURL *appArtworkURL

  // instance methods
  -[RPStoreInfo appName]
  -[RPStoreInfo bundleID]
  -[RPStoreInfo setItemURL:]
  -[RPStoreInfo .cxx_destruct]
  -[RPStoreInfo dictionary]
  -[RPStoreInfo author]
  -[RPStoreInfo setBundleID:]
  -[RPStoreInfo itemURL]
  -[RPStoreInfo setAuthor:]
  -[RPStoreInfo setAppName:]
  -[RPStoreInfo appArtworkURL]
  -[RPStoreInfo setAppArtworkURL:]


RPStoreManager : NSObject
  // class methods
  +[RPStoreManager sharedManager]

  // instance methods
  -[RPStoreManager loadItemDetailsForBundleIdentifier:completionHandler:]


RPScreenRecorder : NSObject <RPPreviewViewControllerDelegate, UINavigationControllerDelegate, UIPopoverPresentationControllerDelegate>
 @property  unsigned long previousAudioSessionOptions
 @property  NSString *previousAudioCategory
 @property  BOOL recording
 @property  BOOL available
 @property  UIWindow *windowToRecord
 @property  UIView *cameraPreviewView
 @property  RPPipViewController *pipViewController
 @property  RPPGPipViewController *pgPipViewController
 @property  @? saveVideoToCameraRollCompletionBlock
 @property  BOOL hasUserConsentForCamera
 @property  BOOL hasUserConsentForMicrophone
 @property  @? captureHandler
 @property  RPBroadcastController *activeBroadcastController
 @property  BOOL paused
 @property  int processIDForAudioCapture
 @property  BOOL systemRecording
 @property  NSURL *broadcastURL
 @property  <RPScreenRecorderPrivateDelegate> *privateDelegate
 @property  <RPScreenRecordeScreenCapureKitDelegate> *screenCaptureKitDelegate
 @property  <RPScreenRecorderDelegate> *secondDelegate
 @property  <RPScreenRecorderDelegate> *delegate
 @property  BOOL microphoneEnabled
 @property  BOOL cameraEnabled
 @property  long long cameraPosition
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RPScreenRecorder sharedRecorder]

  // instance methods
  -[RPScreenRecorder isRecording]
  -[RPScreenRecorder applicationWindow]
  -[RPScreenRecorder setSecondDelegate:]
  -[RPScreenRecorder resumeInAppRecording]
  -[RPScreenRecorder startClipBufferingWithCompletionHandler:]
  -[RPScreenRecorder setScreenCaptureKitDelegate:]
  -[RPScreenRecorder recordingTimerDidUpdate:]
  -[RPScreenRecorder recordingDidStopWithError:movieURL:]
  -[RPScreenRecorder captureHandlerWithSample:timingData:]
  -[RPScreenRecorder setSystemRecording:]
  -[RPScreenRecorder setCameraPreviewView:]
  -[RPScreenRecorder activeBroadcastController]
  -[RPScreenRecorder updateStateWithActive:error:]
  -[RPScreenRecorder saveVideoToCameraRollCompletionBlock]
  -[RPScreenRecorder stopCaptureWithHandler:]
  -[RPScreenRecorder setWindowToRecord:]
  -[RPScreenRecorder pgPipViewController]
  -[RPScreenRecorder recordingDidPause]
  -[RPScreenRecorder setWindowRotationLocked:]
  -[RPScreenRecorder setCameraPosition:]
  -[RPScreenRecorder previousAudioCategory]
  -[RPScreenRecorder handleUnavailableState]
  -[RPScreenRecorder secondDelegate]
  -[RPScreenRecorder resumeInAppCapture]
  -[RPScreenRecorder setAvailable:]
  -[RPScreenRecorder setSaveVideoToCameraRollCompletionBlock:]
  -[RPScreenRecorder resumeInAppClip]
  -[RPScreenRecorder .cxx_destruct]
  -[RPScreenRecorder setPreviousAudioCategory:]
  -[RPScreenRecorder stopSystemRecording:]
  -[RPScreenRecorder stopInAppBroadcastWithHandler:]
  -[RPScreenRecorder isAvailable]
  -[RPScreenRecorder saveClipToCameraRoll:handler:]
  -[RPScreenRecorder isScreenRecordingAvailable]
  -[RPScreenRecorder broadcastURL]
  -[RPScreenRecorder clientDidUpdateBroadcastServiceInfo:]
  -[RPScreenRecorder setCaptureHandler:]
  -[RPScreenRecorder screenRecordingSupportedOnDevice]
  -[RPScreenRecorder updateProcessIDForAudioCapture:]
  -[RPScreenRecorder setDelegate:]
  -[RPScreenRecorder cameraPosition]
  -[RPScreenRecorder setRecording:]
  -[RPScreenRecorder currentWindowSize]
  -[RPScreenRecorder updateScreenRecordingStateWithCurrentState:]
  -[RPScreenRecorder setPipViewController:]
  -[RPScreenRecorder hasUserConsentForMicrophone]
  -[RPScreenRecorder pauseInAppCapture]
  -[RPScreenRecorder videoQueue]
  -[RPScreenRecorder init]
  -[RPScreenRecorder audioQueue]
  -[RPScreenRecorder resumeInAppBroadcast]
  -[RPScreenRecorder discardRecordingWithHandler:]
  -[RPScreenRecorder previousAudioSessionOptions]
  -[RPScreenRecorder captureHandlerWithAudioSample:bufferType:]
  -[RPScreenRecorder screenRecordingAllowed]
  -[RPScreenRecorder currentWindowLayerContextID]
  -[RPScreenRecorder captureHandler]
  -[RPScreenRecorder setBroadcastURL:]
  -[RPScreenRecorder didStopRecordingWithError:previewViewController:]
  -[RPScreenRecorder stopClipBufferingWithCompletionHandler:]
  -[RPScreenRecorder windowToRecord]
  -[RPScreenRecorder screenCaptureKitDelegate]
  -[RPScreenRecorder setPrivateDelegate:]
  -[RPScreenRecorder stopRecordingWithHandler:]
  -[RPScreenRecorder stopSystemRecordingWithURLHandler:]
  -[RPScreenRecorder startSystemBroadcastWithHandler:]
  -[RPScreenRecorder setPaused:]
  -[RPScreenRecorder startRecordingWithMicrophoneEnabled:handler:]
  -[RPScreenRecorder startInAppBroadcastWithHandler:]
  -[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]
  -[RPScreenRecorder setupSystemBroadcastWithExtension:handler:]
  -[RPScreenRecorder processIDForAudioCapture]
  -[RPScreenRecorder saveVideo:handler:]
  -[RPScreenRecorder pauseInAppBroadcast]
  -[RPScreenRecorder delegate]
  -[RPScreenRecorder instantiatePipView]
  -[RPScreenRecorder removePipView]
  -[RPScreenRecorder updateRecordingAvailability:]
  -[RPScreenRecorder startCaptureWithHandler:completionHandler:]
  -[RPScreenRecorder cameraPreviewView]
  -[RPScreenRecorder shouldResumeSessionType:]
  -[RPScreenRecorder processQueue]
  -[RPScreenRecorder registerAppForStateChangeSetRotationLock:]
  -[RPScreenRecorder exportClipToURL:duration:completionHandler:]
  -[RPScreenRecorder pipViewController]
  -[RPScreenRecorder recordingLockInterrupted:]
  -[RPScreenRecorder setPgPipViewController:]
  -[RPScreenRecorder setMicrophoneEnabled:]
  -[RPScreenRecorder saveVideoToCameraRoll:handler:]
  -[RPScreenRecorder hasUserConsentForCamera]
  -[RPScreenRecorder setActiveBroadcastController:]
  -[RPScreenRecorder dealloc]
  -[RPScreenRecorder stopSystemBroadcastWithHandler:]
  -[RPScreenRecorder privateDelegate]
  -[RPScreenRecorder notifyDelegateOfUpdatedState]
  -[RPScreenRecorder isCameraEnabled]
  -[RPScreenRecorder setHasUserConsentForMicrophone:]
  -[RPScreenRecorder resumeSystemBroadcast]
  -[RPScreenRecorder pauseInAppRecording]
  -[RPScreenRecorder setPreviousAudioSessionOptions:]
  -[RPScreenRecorder systemRecording]
  -[RPScreenRecorder startRecordingWithHandler:]
  -[RPScreenRecorder stopRecordingWithVideoURLHandler:]
  -[RPScreenRecorder setHasUserConsentForCamera:]
  -[RPScreenRecorder stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:]
  -[RPScreenRecorder resumeSystemRecording]
  -[RPScreenRecorder isMicrophoneEnabled]
  -[RPScreenRecorder stopRecordingWithOutputURL:completionHandler:]
  -[RPScreenRecorder setCameraEnabled:]
  -[RPScreenRecorder shouldNotifyDidStop]
  -[RPScreenRecorder isPaused]


RPIOSurfaceObject : NSObject <NSSecureCoding>
  // class methods
  +[RPIOSurfaceObject supportsSecureCoding]

  // instance methods
  -[RPIOSurfaceObject initWithCoder:]
  -[RPIOSurfaceObject ioSurface]
  -[RPIOSurfaceObject dealloc]
  -[RPIOSurfaceObject encodeWithCoder:]
  -[RPIOSurfaceObject setIOSurface:]


RPBroadcastActivityHostViewController : _UIRemoteViewController <RPBroadcastActivityCommunicationHostProtocol>
 @property  RPBroadcastActivityViewController *broadcastActivityViewController

  // instance methods
  -[RPBroadcastActivityHostViewController .cxx_destruct]
  -[RPBroadcastActivityHostViewController viewDidLoad]
  -[RPBroadcastActivityHostViewController modalPresentationStyle]
  -[RPBroadcastActivityHostViewController popoverArrowDirection]
  -[RPBroadcastActivityHostViewController extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:]
  -[RPBroadcastActivityHostViewController popoverControllerSourceRect]
  -[RPBroadcastActivityHostViewController presentationInfoWithCompletion:]
  -[RPBroadcastActivityHostViewController broadcastActivityViewController]
  -[RPBroadcastActivityHostViewController setBroadcastActivityViewController:]


RPBroadcastActivityExtensionHostContext : NSExtensionContext <RPBroadcastActivityCommunicationHostProtocol>
 @property  RPBroadcastActivityHostViewController *hostViewController

  // class methods
  +[RPBroadcastActivityExtensionHostContext _extensionAuxiliaryVendorProtocol]
  +[RPBroadcastActivityExtensionHostContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[RPBroadcastActivityExtensionHostContext .cxx_destruct]
  -[RPBroadcastActivityExtensionHostContext setHostViewController:]
  -[RPBroadcastActivityExtensionHostContext hostViewController]
  -[RPBroadcastActivityExtensionHostContext extensionObjectProxy]
  -[RPBroadcastActivityExtensionHostContext extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:]
  -[RPBroadcastActivityExtensionHostContext presentationInfoWithCompletion:]


RPPipView : UIView
 @property  AVCaptureVideoPreviewLayer *previewLayer

  // instance methods
  -[RPPipView .cxx_destruct]
  -[RPPipView layoutSubviews]
  -[RPPipView previewLayer]
  -[RPPipView setPreviewLayer:]
  -[RPPipView addPreviewLayer:]


RPPipViewController : UIViewController
 @property  AVCaptureSession *pipSession
 @property  AVCaptureDevice *videoDevice
 @property  AVCaptureDeviceInput *videoInput
 @property  long long initialOrientation
 @property  long long previousOrientation
 @property  double previousOrientationWidth
 @property  double previousOrientationHeight
 @property  long long cameraPosition

  // instance methods
  -[RPPipViewController setCameraPosition:]
  -[RPPipViewController .cxx_destruct]
  -[RPPipViewController cameraPosition]
  -[RPPipViewController viewDidAppear:]
  -[RPPipViewController videoInput]
  -[RPPipViewController videoDevice]
  -[RPPipViewController viewWillAppear:]
  -[RPPipViewController loadView]
  -[RPPipViewController viewDidDisappear:]
  -[RPPipViewController setPreviousOrientation:]
  -[RPPipViewController previousOrientation]
  -[RPPipViewController initialOrientation]
  -[RPPipViewController setInitialOrientation:]
  -[RPPipViewController setVideoInput:]
  -[RPPipViewController cameraWithPosition:]
  -[RPPipViewController stopPipSession]
  -[RPPipViewController startPipSession]
  -[RPPipViewController initWithOrientation:position:]
  -[RPPipViewController setPipSession:]
  -[RPPipViewController pipSession]
  -[RPPipViewController setVideoDevice:]
  -[RPPipViewController _pipView]
  -[RPPipViewController setPreviousOrientationWidth:]
  -[RPPipViewController setPreviousOrientationHeight:]
  -[RPPipViewController _updateViewGeometry]
  -[RPPipViewController setUpPipSession]
  -[RPPipViewController _captureVideoOrientationForUIDeviceOrientation:]
  -[RPPipViewController _deviceOrientationDidChange]
  -[RPPipViewController previousOrientationWidth]
  -[RPPipViewController previousOrientationHeight]


RPBroadcastSampleHandler : RPBroadcastHandler <RPExtensionContextDelegate>
 @property  <RPBroadcastDaemonProtocol> *daemonProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RPBroadcastSampleHandler .cxx_destruct]
  -[RPBroadcastSampleHandler videoQueue]
  -[RPBroadcastSampleHandler daemonProxy]
  -[RPBroadcastSampleHandler audioQueue]
  -[RPBroadcastSampleHandler group]
  -[RPBroadcastSampleHandler beginRequestWithExtensionContext:]
  -[RPBroadcastSampleHandler updateBroadcastURL:]
  -[RPBroadcastSampleHandler updateServiceInfo:]
  -[RPBroadcastSampleHandler finishBroadcastWithError:]
  -[RPBroadcastSampleHandler _setupListenerWithEndpoint:]
  -[RPBroadcastSampleHandler _processPayloadWithVideoSample:]
  -[RPBroadcastSampleHandler _processPayloadWithAudioSample:type:]
  -[RPBroadcastSampleHandler broadcastAnnotatedWithApplicationInfo:]
  -[RPBroadcastSampleHandler broadcastStartedWithSetupInfo:]
  -[RPBroadcastSampleHandler broadcastPaused]
  -[RPBroadcastSampleHandler broadcastResumed]
  -[RPBroadcastSampleHandler broadcastFinished]
  -[RPBroadcastSampleHandler processSampleBuffer:withType:]
  -[RPBroadcastSampleHandler _processPayload:]
  -[RPBroadcastSampleHandler processPayload:completion:]
  -[RPBroadcastSampleHandler setDaemonProxy:]
  -[RPBroadcastSampleHandler extensionContext:setEndpoint:]


RPVideoEditorHostViewController : _UIRemoteViewController <RPVideoEditorExtensionHostProtocol>
 @property  RPPreviewViewController *previewViewController
 @property  RPVideoEditorExtensionHostContext *hostContext

  // instance methods
  -[RPVideoEditorHostViewController previewViewController]
  -[RPVideoEditorHostViewController .cxx_destruct]
  -[RPVideoEditorHostViewController setPreviewViewController:]
  -[RPVideoEditorHostViewController hostContext]
  -[RPVideoEditorHostViewController setHostContext:]
  -[RPVideoEditorHostViewController extensionDidFinishWithActivityTypes:]


RPVideoEditorExtensionHostContext : NSExtensionContext <RPVideoEditorExtensionHostProtocol>
 @property  RPVideoEditorHostViewController *hostViewController

  // class methods
  +[RPVideoEditorExtensionHostContext _extensionAuxiliaryVendorProtocol]
  +[RPVideoEditorExtensionHostContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[RPVideoEditorExtensionHostContext .cxx_destruct]
  -[RPVideoEditorExtensionHostContext setHostViewController:]
  -[RPVideoEditorExtensionHostContext hostViewController]
  -[RPVideoEditorExtensionHostContext extensionObjectProxy]
  -[RPVideoEditorExtensionHostContext extensionDidFinishWithActivityTypes:]


RPAudioMixUtility : NSObject
  // class methods
  +[RPAudioMixUtility tempFileURL]
  +[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]
  +[RPAudioMixUtility mixAudioForMovie:withCompletionHandler:]


RPBroadcastExtensionProxy : NSObject <NSXPCListenerDelegate, RPBroadcastExtensionProtocol, RPBroadcastDaemonProtocol>
 @property  NSXPCListener *listener
 @property  NSExtension *broadcastUploadExtension
 @property  NSXPCConnection *connection
 @property  @? connectionReadyHandler
 @property  NSXPCListenerEndpoint *listenerEndpoint
 @property  @? serviceInfoHandler
 @property  @? broadcastURLHandler
 @property  @? errorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RPBroadcastExtensionProxy ping]
  -[RPBroadcastExtensionProxy listenerEndpoint]
  -[RPBroadcastExtensionProxy invalidateConnection]
  -[RPBroadcastExtensionProxy .cxx_destruct]
  -[RPBroadcastExtensionProxy setListener:]
  -[RPBroadcastExtensionProxy setConnection:]
  -[RPBroadcastExtensionProxy setErrorHandler:]
  -[RPBroadcastExtensionProxy listener]
  -[RPBroadcastExtensionProxy connection]
  -[RPBroadcastExtensionProxy errorHandler]
  -[RPBroadcastExtensionProxy setListenerEndpoint:]
  -[RPBroadcastExtensionProxy listener:shouldAcceptNewConnection:]
  -[RPBroadcastExtensionProxy updateBroadcastURL:]
  -[RPBroadcastExtensionProxy connectionReadyHandler]
  -[RPBroadcastExtensionProxy setConnectionReadyHandler:]
  -[RPBroadcastExtensionProxy updateServiceInfo:]
  -[RPBroadcastExtensionProxy finishBroadcastWithError:]
  -[RPBroadcastExtensionProxy processPayload:completion:]
  -[RPBroadcastExtensionProxy setBroadcastUploadExtension:]
  -[RPBroadcastExtensionProxy setupNewConnection:]
  -[RPBroadcastExtensionProxy broadcastUploadExtension]
  -[RPBroadcastExtensionProxy initWithBroadcastUploadExtension:]
  -[RPBroadcastExtensionProxy initWithBroadcastUploadListenerEndpoint:]
  -[RPBroadcastExtensionProxy establishConnectionWithHandler:]
  -[RPBroadcastExtensionProxy serviceInfoHandler]
  -[RPBroadcastExtensionProxy setServiceInfoHandler:]
  -[RPBroadcastExtensionProxy broadcastURLHandler]
  -[RPBroadcastExtensionProxy setBroadcastURLHandler:]


RPDaemonProxy : NSObject <NSXPCConnectionDelegate, RPDaemonProtocol, RPClientProtocol>
 @property  NSXPCConnection *connection
 @property  NSURL *broadcastURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RPDaemonProxy daemonProxy]

  // instance methods
  -[RPDaemonProxy setupBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:]
  -[RPDaemonProxy startClipBufferingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withCompletionHandler:]
  -[RPDaemonProxy recordingTimerDidUpdate:]
  -[RPDaemonProxy recordingDidStopWithError:movieURL:]
  -[RPDaemonProxy captureHandlerWithSample:timingData:]
  -[RPDaemonProxy setBroadcastPickerPreferredExt:showsMicButton:]
  -[RPDaemonProxy recordingDidPause]
  -[RPDaemonProxy stopAllActiveClients]
  -[RPDaemonProxy resumeInAppCaptureWithWindowLayerContextID:completionHandler:]
  -[RPDaemonProxy startInAppCaptureWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:]
  -[RPDaemonProxy resumeInAppRecordingWithWindowLayerContextID:completionHandler:]
  -[RPDaemonProxy .cxx_destruct]
  -[RPDaemonProxy stopInAppBroadcastWithHandler:]
  -[RPDaemonProxy saveClipToCameraRoll:handler:]
  -[RPDaemonProxy broadcastURL]
  -[RPDaemonProxy setConnection:]
  -[RPDaemonProxy updateScreenRecordingStateWithCurrentState:]
  -[RPDaemonProxy pauseInAppCapture]
  -[RPDaemonProxy startInAppRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:]
  -[RPDaemonProxy init]
  -[RPDaemonProxy issueSandboxExtensionForMainBundleRead]
  -[RPDaemonProxy stopCurrentActiveSessionWithHandler:]
  -[RPDaemonProxy resumeInAppClipWithWindowLayerContextID:completionHandler:]
  -[RPDaemonProxy connection]
  -[RPDaemonProxy macApplicationDidResignActive]
  -[RPDaemonProxy captureHandlerWithAudioSample:bufferType:]
  -[RPDaemonProxy issueSandboxExtensionForClientFileWrite:]
  -[RPDaemonProxy openControlCenterSystemRecordingView]
  -[RPDaemonProxy setBroadcastURL:]
  -[RPDaemonProxy stopClipBufferingWithCompletionHandler:]
  -[RPDaemonProxy stopInAppRecordingWithHandler:]
  -[RPDaemonProxy startInAppBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:]
  -[RPDaemonProxy stopSystemRecordingWithURLHandler:]
  -[RPDaemonProxy saveVideo:handler:]
  -[RPDaemonProxy pauseInAppBroadcast]
  -[RPDaemonProxy stopInAppRecordingWithUrl:handler:]
  -[RPDaemonProxy shouldResumeSessionType:]
  -[RPDaemonProxy startSystemBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:]
  -[RPDaemonProxy reportCameraUsage:]
  -[RPDaemonProxy getSystemBroadcastPickerInfo:]
  -[RPDaemonProxy exportClipToURL:duration:completionHandler:]
  -[RPDaemonProxy stopSystemRecordingWithHandler:]
  -[RPDaemonProxy recordingLockInterrupted:]
  -[RPDaemonProxy setMicrophoneEnabled:]
  -[RPDaemonProxy saveVideoToCameraRoll:handler:]
  -[RPDaemonProxy resumeSystemBroadcastWithCompletionHandler:]
  -[RPDaemonProxy stopSystemBroadcastWithHandler:]
  -[RPDaemonProxy resumeInAppBroadcastWithWindowLayerContextID:completionHandler:]
  -[RPDaemonProxy updateProcessIDForAudioCaptureWithPID:]
  -[RPDaemonProxy pauseInAppRecording]
  -[RPDaemonProxy startSystemRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:]
  -[RPDaemonProxy resumeSystemRecordingWithCompletionHandler:]
  -[RPDaemonProxy updateBroadcastServiceInfo:]
  -[RPDaemonProxy macApplicationDidBecomeActiveWithContextID:completionHandler:]
  -[RPDaemonProxy consumeSandboxExtension:processNewConnection:]
  -[RPDaemonProxy discardInAppRecordingWithHandler:]
  -[RPDaemonProxy setupSystemBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:]
  -[RPDaemonProxy connection:handleInvocation:isReply:]
  -[RPDaemonProxy getSystemBroadcastExtensionInfo:]
  -[RPDaemonProxy updateBroadcastURL:]
  -[RPDaemonProxy stopInAppCaptureWithHandler:]


RPHighFidelityVideoOverlayButton : UIView <RPVideoOverlayButton>
 @property  id target
 @property  SEL action

  // instance methods
  -[RPHighFidelityVideoOverlayButton _playButtonTapped:]
  -[RPHighFidelityVideoOverlayButton .cxx_destruct]
  -[RPHighFidelityVideoOverlayButton setAction:]
  -[RPHighFidelityVideoOverlayButton action]
  -[RPHighFidelityVideoOverlayButton initWithStyle:]
  -[RPHighFidelityVideoOverlayButton setTarget:]
  -[RPHighFidelityVideoOverlayButton target]
  -[RPHighFidelityVideoOverlayButton setTarget:action:]
  -[RPHighFidelityVideoOverlayButton _playButtonDeactivate:]
  -[RPHighFidelityVideoOverlayButton _playButtonActivate:]
  -[RPHighFidelityVideoOverlayButton style]


RPFlatVideoOverlayButton : UIButton <RPVideoOverlayButton>
 @property  id target
 @property  SEL action

  // instance methods
  -[RPFlatVideoOverlayButton .cxx_destruct]
  -[RPFlatVideoOverlayButton setAction:]
  -[RPFlatVideoOverlayButton action]
  -[RPFlatVideoOverlayButton initWithStyle:]
  -[RPFlatVideoOverlayButton _handleTap:]
  -[RPFlatVideoOverlayButton setTarget:]
  -[RPFlatVideoOverlayButton target]
  -[RPFlatVideoOverlayButton setTarget:action:]
  -[RPFlatVideoOverlayButton style]
  -[RPFlatVideoOverlayButton _normalButtonImage]
  -[RPFlatVideoOverlayButton _highlightedButtonImage]
  -[RPFlatVideoOverlayButton _createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:]


RPBroadcastActivityViewController : UIViewController
 @property  UIPopoverPresentationController *popoverPresentationControllerProxy
 @property  RPBroadcastActivityHostViewController *hostViewController
 @property  @? didFinishHandler
 @property  <RPBroadcastActivityViewControllerDelegate> *delegate

  // class methods
  +[RPBroadcastActivityViewController viewControllerForExtension:inputItems:completionHandler:]
  +[RPBroadcastActivityViewController loadBroadcastActivityViewControllerWithPreferredExtension:handler:broadcastActivitiesNotInstalledAlertTitle:broadcastActivitiesNotInstalledAlertMessage:atPoint:fromWindow:]
  +[RPBroadcastActivityViewController loadBroadcastActivityViewControllerWithPreferredExtension:handler:]
  +[RPBroadcastActivityViewController loadBroadcastActivityViewControllerWithHandler:]

  // instance methods
  -[RPBroadcastActivityViewController popoverPresentationController]
  -[RPBroadcastActivityViewController .cxx_destruct]
  -[RPBroadcastActivityViewController setDelegate:]
  -[RPBroadcastActivityViewController dismissViewControllerAnimated:completion:]
  -[RPBroadcastActivityViewController setModalPresentationStyle:]
  -[RPBroadcastActivityViewController delegate]
  -[RPBroadcastActivityViewController setHostViewController:]
  -[RPBroadcastActivityViewController hostViewController]
  -[RPBroadcastActivityViewController extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:]
  -[RPBroadcastActivityViewController setDidFinishHandler:]
  -[RPBroadcastActivityViewController setPopoverPresentationControllerProxy:]
  -[RPBroadcastActivityViewController popoverPresentationControllerProxy]
  -[RPBroadcastActivityViewController didFinishHandler]


RPBroadcastConfiguration : NSObject <NSCoding, NSSecureCoding>
 @property  double clipDuration
 @property  NSDictionary *videoCompressionProperties

  // class methods
  +[RPBroadcastConfiguration supportsSecureCoding]

  // instance methods
  -[RPBroadcastConfiguration initWithCoder:]
  -[RPBroadcastConfiguration .cxx_destruct]
  -[RPBroadcastConfiguration videoCompressionProperties]
  -[RPBroadcastConfiguration encodeWithCoder:]
  -[RPBroadcastConfiguration clipDuration]
  -[RPBroadcastConfiguration setClipDuration:]
  -[RPBroadcastConfiguration setVideoCompressionProperties:]


RPModalPresentationWindow : UIApplicationRotationFollowingWindow
  // instance methods
  -[RPModalPresentationWindow presentViewController:animated:completion:]
  -[RPModalPresentationWindow init]
  -[RPModalPresentationWindow presentAlertController:animated:completion:]
  -[RPModalPresentationWindow _presentationViewController]
  -[RPModalPresentationWindow isInternalWindow]
  -[RPModalPresentationWindow dealloc]
  -[RPModalPresentationWindow mainWindow]


RPBroadcastHandler : NSObject <NSXPCListenerDelegate, NSExtensionRequestHandling>
 @property  NSDictionary *serviceInfo
 @property  NSExtensionContext *extensionContext
 @property  NSXPCListenerEndpoint *listenerEndpoint
 @property  NSXPCConnection *connection
 @property  NSXPCListener *listener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RPBroadcastHandler listenerEndpoint]
  -[RPBroadcastHandler .cxx_destruct]
  -[RPBroadcastHandler setListener:]
  -[RPBroadcastHandler setConnection:]
  -[RPBroadcastHandler extensionContext]
  -[RPBroadcastHandler init]
  -[RPBroadcastHandler listener]
  -[RPBroadcastHandler connection]
  -[RPBroadcastHandler setListenerEndpoint:]
  -[RPBroadcastHandler setExtensionContext:]
  -[RPBroadcastHandler listener:shouldAcceptNewConnection:]
  -[RPBroadcastHandler serviceInfo]
  -[RPBroadcastHandler beginRequestWithExtensionContext:]
  -[RPBroadcastHandler setServiceInfo:]
  -[RPBroadcastHandler updateBroadcastURL:]
  -[RPBroadcastHandler _completeRequestWithReturnItems:]
  -[RPBroadcastHandler updateServiceInfo:]


RPBroadcastController : NSObject
 @property  NSDictionary *serviceInfo
 @property  NSURL *broadcastURL
 @property  NSString *broadcastExtensionBundleIdentifier
 @property  BOOL broadcasting
 @property  BOOL paused
 @property  <RPBroadcastControllerDelegate> *delegate
 @property  NSString *broadcastExtensionBundleID

  // instance methods
  -[RPBroadcastController resumeBroadcast]
  -[RPBroadcastController .cxx_destruct]
  -[RPBroadcastController broadcastURL]
  -[RPBroadcastController broadcastExtensionBundleID]
  -[RPBroadcastController setDelegate:]
  -[RPBroadcastController broadcastExtensionBundleIdentifier]
  -[RPBroadcastController init]
  -[RPBroadcastController finishBroadcastWithHandler:]
  -[RPBroadcastController setBroadcastURL:]
  -[RPBroadcastController pauseBroadcast]
  -[RPBroadcastController startSystemBroadcastWithHandler:]
  -[RPBroadcastController startBroadcastWithHandler:]
  -[RPBroadcastController delegate]
  -[RPBroadcastController setBroadcastExtensionBundleIdentifier:]
  -[RPBroadcastController initWithCurrentSession]
  -[RPBroadcastController finishSystemBroadcastWithHandler:]
  -[RPBroadcastController initWithExtensionBundleID:broadcastURL:]
  -[RPBroadcastController isBroadcasting]
  -[RPBroadcastController serviceInfo]
  -[RPBroadcastController setServiceInfo:]
  -[RPBroadcastController isPaused]


RPExtensionHostContext : NSExtensionContext
  // class methods
  +[RPExtensionHostContext _extensionAuxiliaryVendorProtocol]
  +[RPExtensionHostContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[RPExtensionHostContext didConnectToVendor:]


RPPreviewViewController : UIViewController <RPVideoEditorViewControllerDelegate>
 @property  BOOL wasStatusBarHidden
 @property  NSURL *movieURL
 @property  RPVideoEditorHostViewController *hostViewController
 @property  <RPPreviewViewControllerDelegate> *previewControllerDelegate

  // class methods
  +[RPPreviewViewController viewControllerForExtension:inputItems:completionHandler:]
  +[RPPreviewViewController loadPreviewViewControllerWithMovieURL:attachmentURL:overrideShareMessage:overrideTintColor:completion:]
  +[RPPreviewViewController loadPreviewViewControllerWithMovieURL:completion:]

  // instance methods
  -[RPPreviewViewController .cxx_destruct]
  -[RPPreviewViewController viewDidAppear:]
  -[RPPreviewViewController viewWillDisappear:]
  -[RPPreviewViewController viewWillAppear:]
  -[RPPreviewViewController setHostViewController:]
  -[RPPreviewViewController movieURL]
  -[RPPreviewViewController hostViewController]
  -[RPPreviewViewController viewDidDisappear:]
  -[RPPreviewViewController setMovieURL:]
  -[RPPreviewViewController setPreviewControllerDelegate:]
  -[RPPreviewViewController extensionDidFinishWithActivityTypes:]
  -[RPPreviewViewController setWasStatusBarHidden:]
  -[RPPreviewViewController wasStatusBarHidden]
  -[RPPreviewViewController previewControllerDelegate]
  -[RPPreviewViewController videoEditor:didFinishWithActivityTypes:]


RPExtensionContext : NSExtensionContext <RPExtensionVendorProtocol>
 @property  <RPExtensionContextDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RPExtensionContext _extensionAuxiliaryVendorProtocol]
  +[RPExtensionContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[RPExtensionContext .cxx_destruct]
  -[RPExtensionContext setDelegate:]
  -[RPExtensionContext delegate]
  -[RPExtensionContext setEndpoint:completionHandler:]


RPBroadcastHostViewController : _UIRemoteViewController
 @property  RPBroadcastExtensionHostContext *hostContext
 @property  NSXPCListenerEndpoint *listenerEndpoint

  // instance methods
  -[RPBroadcastHostViewController listenerEndpoint]
  -[RPBroadcastHostViewController .cxx_destruct]
  -[RPBroadcastHostViewController hostContext]
  -[RPBroadcastHostViewController setListenerEndpoint:]
  -[RPBroadcastHostViewController setHostContext:]
  -[RPBroadcastHostViewController completeSetupWithBroadcastURL:]
  -[RPBroadcastHostViewController updateBroadcastHandlerListenerEndpoint]


RPBroadcastExtensionHostContext : NSExtensionContext <RPBroadcastExtensionHostProtocol, RPBroadcastExtensionInitProtocol>
 @property  RPBroadcastHostViewController *hostViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RPBroadcastExtensionHostContext _extensionAuxiliaryVendorProtocol]
  +[RPBroadcastExtensionHostContext _extensionAuxiliaryHostProtocol]

  // instance methods
  -[RPBroadcastExtensionHostContext .cxx_destruct]
  -[RPBroadcastExtensionHostContext setHostViewController:]
  -[RPBroadcastExtensionHostContext hostViewController]
  -[RPBroadcastExtensionHostContext extensionObjectProxy]
  -[RPBroadcastExtensionHostContext updateBroadcastHandlerListenerEndpoint:]
  -[RPBroadcastExtensionHostContext completeSetupWithBroadcastURL:]


NSBundle(RPExtensions)
	// class methods
	+[NSBundle(RPExtensions) fallbackBundle]
	+[NSBundle(RPExtensions) localizedBundle]
	+[NSBundle(RPExtensions) _rpFrameworkBundle]
	+[NSBundle(RPExtensions) executablePathWithPID:]
	+[NSBundle(RPExtensions) _rpLocalizedAppNameFromBundleID:]
	+[NSBundle(RPExtensions) _rpLocalizedStringFromFrameworkBundleWithKey:]
	+[NSBundle(RPExtensions) baseIdentifier:]
	+[NSBundle(RPExtensions) bundleWithPID:]

	// instance methods
	-[NSBundle(RPExtensions) _rpLocalizedAppName]

UIActivity(RPExtensions)
	// class methods
	+[UIActivity(RPExtensions) streamActivitiesWithCompletion:]

NSFileManager(RPExtensions)
	// instance methods
	-[NSFileManager(RPExtensions) _srTempPath]
	-[NSFileManager(RPExtensions) dateSuffix]
	-[NSFileManager(RPExtensions) _srDeleteFilesOlderThanTimeToLiveInSeconds:]
	-[NSFileManager(RPExtensions) _srDeviceFreeDiskSpace]
	-[NSFileManager(RPExtensions) _srSizeOfTempDir:]
	-[NSFileManager(RPExtensions) _srSetupTempDirectory]
	-[NSFileManager(RPExtensions) outputPath:bundleID:]
	-[NSFileManager(RPExtensions) trimmedOutputPath:]
	-[NSFileManager(RPExtensions) _srDeleteAllTempFiles]
	-[NSFileManager(RPExtensions) _srRemoveFile:completion:]
	-[NSFileManager(RPExtensions) _srMoveFileFromURL:toURL:completion:]
	-[NSFileManager(RPExtensions) _srDeleteFilesWithPrefix:]
	-[NSFileManager(RPExtensions) _srGetCreationDateForFile:]
	-[NSFileManager(RPExtensions) _srDeviceHasSufficientFreeSpaceForRecording]
	-[NSFileManager(RPExtensions) _srDeviceHasSufficientSpaceForCurrentRecording]

(ReplayKitErrors)
	// class methods
	+[(ReplayKitErrors) _rpUserErrorForCode:userInfo:]

(ReplayKitString)
	// class methods
	+[(ReplayKitString) _rpLocalizationNotNeeded:]

NSExtensionItem(RPExtensions)
	// class methods
	+[NSExtensionItem(RPExtensions) itemWithTitle:attachmentItem:]

NSExtension(RPExtensions)
	// class methods
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:baseIdentifier:activationRule:unwantedActivationRule:completion:]
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:baseIdentifier:completion:]
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:baseIdentifier:unwantedActivationRule:completion:]
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:activationRule:completion:]
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:unwantedActivationRule:completion:]
	+[NSExtension(RPExtensions) extensionsWithMatchingPointName:completion:]

	// instance methods
	-[NSExtension(RPExtensions) processMode]

UIView(RPVideoOverlayButton)
	// class methods
	+[UIView(RPVideoOverlayButton) _srVideoOverlayButtonWithStyle:]

(RPExtensions)
	// class methods
	+[(RPExtensions) _srGetStringFromDate:]

NSExtensionContext(RPBroadcastExtension)
	// instance methods
	-[NSExtensionContext(RPBroadcastExtension) completeRequestWithBroadcastURL:broadcastConfiguration:setupInfo:]
	-[NSExtensionContext(RPBroadcastExtension) completeRequestWithBroadcastURL:setupInfo:]
	-[NSExtensionContext(RPBroadcastExtension) loadBroadcastingApplicationInfoWithCompletion:]

01 00 0f00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0f00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0f00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 0300 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVConferencePreview 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 1100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 0100 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0c00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0200 /System/Library/PrivateFrameworks/Pegasus.framework/Pegasus: PGPictureInPictureProxy 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationExtensionActivity 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationRotationFollowingWindow 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
