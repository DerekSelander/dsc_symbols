|| __DATA.__objc_data _OBJC_CLASS_$_ASAchievementManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivityDataBulletinManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivityDataManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivityDataNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivityDataValidator
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivitySharingManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivitySharingPlugin
|| __DATA.__objc_data _OBJC_CLASS_$_ASActivitySharingProfileExtension
|| __DATA.__objc_data _OBJC_CLASS_$_ASAsyncTransactionQueue
|| __DATA.__objc_data _OBJC_CLASS_$_ASCloudKitManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASCloudKitServerChangeTokenCache
|| __DATA.__objc_data _OBJC_CLASS_$_ASCloudKitUtility
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompanionBulletinPostingManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompetitionAwardingSource
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompetitionBulletinManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompetitionManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompetitionStore
|| __DATA.__objc_data _OBJC_CLASS_$_ASCompetitionTemplateSource
|| __DATA.__objc_data _OBJC_CLASS_$_ASContactsManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaeCompetitionListEntryBulkDeletionJournalEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionBulkDeletionJournalEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionDeletionJournalEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionEntity
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionJournalEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionListEntryEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionListEntryEntity
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabaseCompetitionListEntryJournalEntry
|| __DATA.__objc_data _OBJC_CLASS_$_ASDatabseCompetitionEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_ASFakeBulletinManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASFakingManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASFriendInviteBulletinManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASFriendListManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASFriendListQueryServer
|| __DATA.__objc_data _OBJC_CLASS_$_ASFriendNotificationContainer
|| __DATA.__objc_data _OBJC_CLASS_$_ASGatewayManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASGizmoBulletinPostingManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASIDSMessageCenter
|| __DATA.__objc_data _OBJC_CLASS_$_ASMessage
|| __DATA.__objc_data _OBJC_CLASS_$_ASMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_ASMessageQueue
|| __DATA.__objc_data _OBJC_CLASS_$_ASNotificationSentinelKeys
|| __DATA.__objc_data _OBJC_CLASS_$_ASNotificationStep
|| __DATA.__objc_data _OBJC_CLASS_$_ASOnWristMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_ASPeriodicUpdateManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASRelationshipBeganPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_ASRelationshipManager
|| __DATA.__objc_data _OBJC_CLASS_$_ASServer
|| __DATA.__objc_data _OBJC_CLASS_$_ASSetupManager
|| __DATA.__objc_data _OBJC_CLASS_$__ASContactPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_ASAchievementManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivityDataBulletinManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivityDataManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivityDataNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivityDataValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivitySharingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivitySharingPlugin
|| __DATA.__objc_data _OBJC_METACLASS_$_ASActivitySharingProfileExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_ASAsyncTransactionQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCloudKitManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCloudKitServerChangeTokenCache
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCloudKitUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompanionBulletinPostingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompetitionAwardingSource
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompetitionBulletinManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompetitionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompetitionStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ASCompetitionTemplateSource
|| __DATA.__objc_data _OBJC_METACLASS_$_ASContactsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaeCompetitionListEntryBulkDeletionJournalEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionBulkDeletionJournalEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionDeletionJournalEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionJournalEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionListEntryEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionListEntryEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabaseCompetitionListEntryJournalEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_ASDatabseCompetitionEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFakeBulletinManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFakingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFriendInviteBulletinManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFriendListManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFriendListQueryServer
|| __DATA.__objc_data _OBJC_METACLASS_$_ASFriendNotificationContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_ASGatewayManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASGizmoBulletinPostingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASIDSMessageCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_ASMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_ASMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_ASMessageQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_ASNotificationSentinelKeys
|| __DATA.__objc_data _OBJC_METACLASS_$_ASNotificationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_ASOnWristMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_ASPeriodicUpdateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASRelationshipBeganPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_ASRelationshipManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ASServer
|| __DATA.__objc_data _OBJC_METACLASS_$_ASSetupManager
|| __DATA.__objc_data _OBJC_METACLASS_$__ASContactPlaceholder
|| __DATA_CONST.__const _ASCloudKitActivityDataRecordZoneName
|| __DATA_CONST.__const _ASCloudKitContainerIdentifier
|| __DATA_CONST.__const _ASCloudKitManagerErrorDomain
|| __DATA_CONST.__const _ASCloudKitRelationshipRecordZoneName
|| __DATA_CONST.__const _ASCompetitionCompetitionUUIDKey
|| __DATA_CONST.__const _ASCompetitionCurrentCacheIndexKey
|| __DATA_CONST.__const _ASCompetitionDurationDateComponentsKey
|| __DATA_CONST.__const _ASCompetitionFriendUUIDKey
|| __DATA_CONST.__const _ASCompetitionLastPushedCacheIndexKey
|| __DATA_CONST.__const _ASCompetitionListCKSystemFieldsKey
|| __DATA_CONST.__const _ASCompetitionListFriendUUIDKey
|| __DATA_CONST.__const _ASCompetitionListOwnerKey
|| __DATA_CONST.__const _ASCompetitionListTypeKey
|| __DATA_CONST.__const _ASCompetitionMaximumNumberOfPointsPerDayKey
|| __DATA_CONST.__const _ASCompetitionOpponentScoreKey
|| __DATA_CONST.__const _ASCompetitionPreferredVictoryBadgeStylesKey
|| __DATA_CONST.__const _ASCompetitionScoreKey
|| __DATA_CONST.__const _ASCompetitionStartDateComponentsKey
|| __DATA_CONST.__const _ASCompetitionTypeKey
|| __DATA_CONST.__const _ASFakeAchievementTemplateUniqueNameFallback
|| __DATA_CONST.__const _ASFakeAchievementTemplateUniqueNameKey
|| __DATA_CONST.__const _ASFakeAchievementValueKey
|| __DATA_CONST.__const _ASFakeAchievementWorkoutTypeKey
|| __DATA_CONST.__const _ASFakeCompetitionBadgeStyleKey
|| __DATA_CONST.__const _ASFakeCompetitionMyWinCountKey
|| __DATA_CONST.__const _ASFakeCompetitionOpponentWinCountKey
|| __DATA_CONST.__const _ASFakeCompetitionOpponentWonPreviouslyKey
|| __DATA_CONST.__const _ASFakeContactAddressFallback
|| __DATA_CONST.__const _ASFakeContactAddressKey
|| __DATA_CONST.__const _ASFakeContactNameFallback
|| __DATA_CONST.__const _ASFakeContactNameKey
|| __DATA_CONST.__const _ASFakeFriendUUIDKey
|| __DATA_CONST.__const _ASFakeSnapshotEnergyBurnedGoalKey
|| __DATA_CONST.__const _ASFakeSnapshotExerciseGoalKey
|| __DATA_CONST.__const _ASFakeSnapshotMoveMinuteEnabledKey
|| __DATA_CONST.__const _ASFakeSnapshotMoveMinuteGoalKey
|| __DATA_CONST.__const _ASFakeSnapshotStandGoalKey
|| __DATA_CONST.__const _ASFakeWorkoutDistanceKey
|| __DATA_CONST.__const _ASFakeWorkoutDurationKey
|| __DATA_CONST.__const _ASFakeWorkoutEnergyBurnedKey
|| __DATA_CONST.__const _ASFakeWorkoutGoalKey
|| __DATA_CONST.__const _ASFakeWorkoutGoalTypeKey
|| __DATA_CONST.__const _ASFakeWorkoutIndoorKey
|| __DATA_CONST.__const _ASFakeWorkoutTypeKey
|| __DATA_CONST.__const _ASMessagePayloadKey
|| __DATA_CONST.__const _ASMessageRetryCountKey
|| __DATA_CONST.__const _ASMessageSenderAddressKey
|| __DATA_CONST.__const _ASMessageTypeKey
|| __DATA_CONST.__const _ASPeriodicUpdateActivityIdentifier
|| __DATA_CONST.__const _ASRelationshipManagerErrorDomain
|| __DATA_CONST.__const _ASRelationshipTransaction
|| __DATA_CONST.__const _kASKeyValueDomain
|| __DATA_CONST.__const _kASNotificationLocalDefaultsDomain
|| __DATA_CONST.__const _kASNotificationNanoUserDefaultsDomain
|| __TEXT.__const _ASFakeAchievementValueFallback
|| __TEXT.__const _ASFakeAchievementWorkoutTypeFallback
|| __TEXT.__const _ASFakeSnapshotEnergyBurnedGoal
|| __TEXT.__const _ASFakeSnapshotExerciseGoal
|| __TEXT.__const _ASFakeSnapshotMoveMinuteEnabled
|| __TEXT.__const _ASFakeSnapshotMoveMinuteGoal
|| __TEXT.__const _ASFakeSnapshotStandGoal
|| __TEXT.__const _ASFakeWorkoutDistanceFallback
|| __TEXT.__const _ASFakeWorkoutDurationFallback
|| __TEXT.__const _ASFakeWorkoutEnergyBurnedFallback
|| __TEXT.__const _ASFakeWorkoutGoalFallback
|| __TEXT.__const _ASFakeWorkoutGoalTypeFallback
|| __TEXT.__const _ASFakeWorkoutIndoorFallback
|| __TEXT.__const _ASFakeWorkoutTypeFallback
|| __TEXT.__const _ASMaxMessageRetryCount
|| __TEXT.__const _ASPeriodicUpdateFetchMinimumInterval
|| __TEXT.__const _ASRelationshipReconcileContactChangeCoalesceInterval
|| __TEXT.__text _ASAllDatabaseCompetitionKeys
|| __TEXT.__text _ASAllDatabaseCompetitionListEntryKeys
|| __TEXT.__text _ASCloudKitShareParticipantsAreEqual
|| __TEXT.__text _ASDeleteLegacyContactsCache
|| __TEXT.__text _ASFindContactWithDestinationsInContacts
|| __TEXT.__text _ASKeyValueDomain
|| __TEXT.__text _ASReadContactFromDiskCache
|| __TEXT.__text _ASReadContactsFromDiskCache
|| __TEXT.__text _ASRemoveAllActivitySharingUserDefaults
|| __TEXT.__text _ASWriteContactToDiskCache
|| __TEXT.__text _ASWriteContactsToDiskCache
|| __TEXT.__text _CodableAchievementBulletinForFriendAchievement
|| __TEXT.__text _CodableBulletinForFriends
|| __TEXT.__text _CodableCompetitionAcceptedBulletinForFriend
|| __TEXT.__text _CodableCompetitionBulletinForFriendForTypeWithTitle
|| __TEXT.__text _CodableCompetitionEndedBulletinForFriend
|| __TEXT.__text _CodableCompetitionRequestBulletinForFriend
|| __TEXT.__text _CodableCompetitionScoreCapCelebrationBulletinForFriends
|| __TEXT.__text _CodableGoalCompletionBulletinForFriendActivitySnapshot
|| __TEXT.__text _CodableWorkoutBulletinForFriendWorkout
|| __TEXT.__text _NSStringFromASMessageType
|| __TEXT.__text _RegisterFitnessAppBadgeCountProvider
|| __TEXT.__text _RequestFitnessAppBadgeCountUpdate
|| __TEXT.__text __ASCloudKitSubscriptionIdentifier
|| __TEXT.__text __ContactCachePathForUUID
|| __TEXT.__text __ContactsCacheDirectoryPath
|| __TEXT.__text __ContactsCacheFilenames
|| __TEXT.__text __CreateContactsCacheDirectory
|| __TEXT.__text __CreateSubscription
|| __TEXT.__text __SanitizedBoolCompletion
|| __TEXT.__text __SanitizedError
|| __TEXT.__text __SanitizedSuccessCompletion
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ ActivityAchievements: _ACHCodableFromAchievement
__ ActivityAchievements: _ACHTemplateUniqueNameIsMonthlyChallenge
__ ActivityAchievements: _OBJC_CLASS_$_ACHEarnedInstance
__ ActivityAchievementsDaemon: _ACHRequestProfileExtensionWithError
__ ActivitySharing: _ASAchievementLocalizationPathForTemplate
__ ActivitySharing: _ASAchievementsFromCodableAchievements
__ ActivitySharing: _ASActivityAppIdentifier
__ ActivitySharing: _ASActivityAppIsInstalled
__ ActivitySharing: _ASActivityAppIsVisible
__ ActivitySharing: _ASAllGoalsMetForSnapshot
__ ActivitySharing: _ASAnalyticsUpdateWithFriends
__ ActivitySharing: _ASBestCompetitionVictoryBadgeStyleForPreferredStyles
__ ActivitySharing: _ASCacheIndexForLocalDate
__ ActivitySharing: _ASCleanSnapshotForUpload
__ ActivitySharing: _ASClientTaskIdentifier
__ ActivitySharing: _ASCloudKitAchievementRecordType
__ ActivitySharing: _ASCloudKitActivityDataRootRecordType
__ ActivitySharing: _ASCloudKitActivitySnapshotRecordType
__ ActivitySharing: _ASCloudKitCompetitionListRecordType
__ ActivitySharing: _ASCloudKitNotificationEventRecordType
__ ActivitySharing: _ASCloudKitRelationshipEventRecordType
__ ActivitySharing: _ASCloudKitRelationshipRecordType
__ ActivitySharing: _ASCloudKitWorkoutRecordType
__ ActivitySharing: _ASCodableAchievementsFromAchievements
__ ActivitySharing: _ASCodableFriendListFromFriends
__ ActivitySharing: _ASCodableWorkoutsFromWorkouts
__ ActivitySharing: _ASCompetitionCalculateStartDateComponentsForFriend
__ ActivitySharing: _ASCompetitionCalculateStartDateComponentsForFriendWithProposedStartDate
__ ActivitySharing: _ASCompetitionCalculateUpdatedScores
__ ActivitySharing: _ASCompetitionDailyScoreForParticipantWithCacheIndex
__ ActivitySharing: _ASCompetitionDurationDateComponentsForNewCompetitions
__ ActivitySharing: _ASCompetitionIsReadyToComplete
__ ActivitySharing: _ASCompetitionMaximumPointsPerDayForNewCompetitions
__ ActivitySharing: _ASCompetitionNeedsScoreUpdateForSummary
__ ActivitySharing: _ASCompetitionParticipationResourcePath
__ ActivitySharing: _ASCompetitionParticipationTemplate
__ ActivitySharing: _ASCompetitionParticipationTemplateUniqueName
__ ActivitySharing: _ASCompetitionRequestHasExpired
__ ActivitySharing: _ASCompetitionVictoryPropertyListPathForStyle
__ ActivitySharing: _ASCompetitionVictoryResourcePathForStyle
__ ActivitySharing: _ASCompetitionVictoryTemplateForFriend
__ ActivitySharing: _ASCompetitionVictoryTemplateNameForFriend
__ ActivitySharing: _ASCompetitionsEligibleForArchival
__ ActivitySharing: _ASCompetitionsSortedByEndDate
__ ActivitySharing: _ASContactStorePredicateForDestination
__ ActivitySharing: _ASEphemeralCompetitionVictoryAchievementForFriendAchievement
__ ActivitySharing: _ASEphemeralCompetitionVictoryAchievementForStyle
__ ActivitySharing: _ASEphemeralEarnedAchievement
__ ActivitySharing: _ASEphemeralEarnedAchievementForFriendAchievement
__ ActivitySharing: _ASFormattedSequence
__ ActivitySharing: _ASFriendAchievementFromTemplateAndEarnedInstance
__ ActivitySharing: _ASFriendsSortedByEarliestCompetitionVictoryOrPotentialVictoryDate
__ ActivitySharing: _ASFullNameForContactStoreContact
__ ActivitySharing: _ASIgnoredMostRecentCompetitionRequestFromContact
__ ActivitySharing: _ASIsCompetitionVictoryTemplate
__ ActivitySharing: _ASIsM8Device
__ ActivitySharing: _ASLogAchievements
__ ActivitySharing: _ASLogActivityData
__ ActivitySharing: _ASLogCloudKit
__ ActivitySharing: _ASLogCompetitions
__ ActivitySharing: _ASLogDatabase
__ ActivitySharing: _ASLogDefault
__ ActivitySharing: _ASLogFriendList
__ ActivitySharing: _ASLogNotifications
__ ActivitySharing: _ASLogPeriodicUpdates
__ ActivitySharing: _ASLogRelationships
__ ActivitySharing: _ASLoggingInitialize
__ ActivitySharing: _ASMaxNumber
__ ActivitySharing: _ASNumberOfNewFriendsAllowedForFriends
__ ActivitySharing: _ASPairedDeviceSupportsCompetitions
__ ActivitySharing: _ASPreferredCompetitionVictoryBadgeStylesForFriend
__ ActivitySharing: _ASRelationshipNeedsSupportedFeaturesUpdate
__ ActivitySharing: _ASSanitizedContactDestination
__ ActivitySharing: _ASSanitizedContactDestinations
__ ActivitySharing: _ASServerInterface
__ ActivitySharing: _ASShortNameForContactStoreContact
__ ActivitySharing: _ASUpdateSupportedFeaturesForRelationship
__ ActivitySharing: _ASValidateEligibilityForAcceptingCompetitionRequest
__ ActivitySharing: _ASValidateEligibilityForIncomingCompetitionRequest
__ ActivitySharing: _ASValidateEligibilityForOutgoingCompetitionRequest
__ ActivitySharing: _ASWorkoutNotificationRecordIDForType
__ ActivitySharing: _ASWorkoutRecordIDForUUID
__ ActivitySharing: _ASWorkoutsFromCodableWorkouts
__ ActivitySharing: _ActivitySharingBundle
__ ActivitySharing: _OBJC_CLASS_$_ASActivityDataNotification
__ ActivitySharing: _OBJC_CLASS_$_ASActivityDataNotificationGroup
__ ActivitySharing: _OBJC_CLASS_$_ASActivityDataNotificationRulesEngine
__ ActivitySharing: _OBJC_CLASS_$_ASBulletinStore
__ ActivitySharing: _OBJC_CLASS_$_ASCodableActivityDataPreview
__ ActivitySharing: _OBJC_CLASS_$_ASCodableBulletin
__ ActivitySharing: _OBJC_CLASS_$_ASCodableCloudKitCompetition
__ ActivitySharing: _OBJC_CLASS_$_ASCodableCloudKitDateComponents
__ ActivitySharing: _OBJC_CLASS_$_ASCodableContact
__ ActivitySharing: _OBJC_CLASS_$_ASCodableDatabaseCompetition
__ ActivitySharing: _OBJC_CLASS_$_ASCodableDatabaseCompetitionListEntry
__ ActivitySharing: _OBJC_CLASS_$_ASCodableDatabaseCompetitionPreferredVictoryBadgeStyles
__ ActivitySharing: _OBJC_CLASS_$_ASCodableDatabaseCompetitionScore
__ ActivitySharing: _OBJC_CLASS_$_ASCodableFinalizeHandshake
__ ActivitySharing: _OBJC_CLASS_$_ASCodableInviteRequest
__ ActivitySharing: _OBJC_CLASS_$_ASCodableInviteResponse
__ ActivitySharing: _OBJC_CLASS_$_ASCodableShareLocations
__ ActivitySharing: _OBJC_CLASS_$_ASCodableWithdrawInviteRequest
__ ActivitySharing: _OBJC_CLASS_$_ASCompetition
__ ActivitySharing: _OBJC_CLASS_$_ASCompetitionList
__ ActivitySharing: _OBJC_CLASS_$_ASContact
__ ActivitySharing: _OBJC_CLASS_$_ASDemoData
__ ActivitySharing: _OBJC_CLASS_$_ASFriend
__ ActivitySharing: _OBJC_CLASS_$_ASFriendListQuery
__ ActivitySharing: _OBJC_CLASS_$_ASNotificationEvent
__ ActivitySharing: _OBJC_CLASS_$_ASRelationship
__ ActivitySharing: _OBJC_CLASS_$_ASUserNotificationResponse
__ ActivitySharing: __ASCreateActivityDataRootRecordWithID
__ ActivitySharing: __ASCreateRecordsFromCloudKitCodablesAndRecordZoneID
__ ActivitySharing: _kASAchievementLocalizedPlaceholderCompetitionEndDayKey
__ ActivitySharing: _kASAchievementLocalizedPlaceholderFriendNameKey
__ ActivitySharing: _kASActivitySharingIsSetup
__ ActivitySharing: _kASActivitySharingIsSetupLegacy
__ ActivitySharing: _kASActivitySharingPluginDatabaseCompetitionListsTableName
__ ActivitySharing: _kASActivitySharingPluginDatabaseCompetitionsTableName
__ ActivitySharing: _kASActivitySharingPluginDatabaseSchemaName
__ ActivitySharing: _kASBulletinsActivityDataCategoryIdentifier
__ ActivitySharing: _kASBulletinsGenericCategoryIdentifier
__ ActivitySharing: _kASBulletinsInviteCategoryIdentifier
__ ActivitySharing: _kASChangeTokenExpirationInterval
__ ActivitySharing: _kASChangeTokenTimestampDefaultsKey
__ ActivitySharing: _kASCloudKitAccountStatusChangedNotificationKey
__ ActivitySharing: _kASCompetitionsAchievementTemplateSourceIdentifier
__ ActivitySharing: _kASDatabaseChangeTokenCacheDefaultsKey
__ ActivitySharing: _kASDiskDirectory
__ ActivitySharing: _kASDomain
__ ActivitySharing: _kASGatewayStatusChangedNotificationKey
__ ActivitySharing: _kASHasFriendsKey
__ ActivitySharing: _kASMaxNumberOfFriends
__ ActivitySharing: _kASNotificationAchievementDataKey
__ ActivitySharing: _kASNotificationActivitySnapshotDataKey
__ ActivitySharing: _kASNotificationCurrentCompetitionStageKey
__ ActivitySharing: _kASNotificationFriendListDataKey
__ ActivitySharing: _kASNotificationIsDemoBulletinKey
__ ActivitySharing: _kASNotificationTypeKey
__ ActivitySharing: _kASNotificationWorkoutDataKey
__ ActivitySharing: _kASNotificationsEnabledKey
__ ActivitySharing: _kASNumberOfBucketsCompanion
__ ActivitySharing: _kASNumberOfBucketsWatch
__ ActivitySharing: _kASPluginIdentifier
__ ActivitySharing: _kASPushServiceMachPort
__ ActivitySharing: _kASZoneChangeTokenCacheDefaultsKey
__ ActivitySharing: _kASiCloudServiceIdentifier
__ ActivitySharing: _kASiMessageServiceIdentifier
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKDatabaseScopeString
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKPushEnvironmentServerPreferred
__ CloudKit: _CKStringFromAccountStatus
__ CloudKit: _OBJC_CLASS_$_CKAcceptSharesOperation
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKDatabaseSubscription
__ CloudKit: _OBJC_CLASS_$_CKFetchDatabaseChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchShareMetadataOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchShareParticipantsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKReference
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_CLASS_$_CKShare
__ CloudKit: _OBJC_CLASS_$_CKUserIdentityLookupInfo
__ CloudKit: _OBJC_EHTYPE_$_CKException
__ CommunicationsFilter: _CMFBlockListIsItemBlocked
__ CommunicationsFilter: _CreateCMFItemFromString
__ CompanionHealthDaemon: _CHProfileExtensionForProfile
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ Fitness: _FIAreFitnessAppsRestricted
__ Fitness: _FIDeviceMeetsMinimumOSVersionDaytona
__ Fitness: _FILocalizedDayName
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ HealthDaemon: _HDCreateSerialUtilityDispatchQueue
__ HealthDaemon: _HDDataEntityPredicateForDataUUIDs
__ HealthDaemon: _HDDataEntityPredicateForOriginProductType
__ HealthDaemon: _HDDataEntityPredicateForType
__ HealthDaemon: _HDDataEntityPropertyCreationDate
__ HealthDaemon: _HDDataEntityPropertyDataID
__ HealthDaemon: _HDFitnessFriendAchievementEntityPredicateForFriendUUID
__ HealthDaemon: _HDFitnessFriendActivitySnapshotEntityPredicateForFriendUUID
__ HealthDaemon: _HDFitnessFriendWorkoutEntityEntityPredicateForFriendUUID
__ HealthDaemon: _HDHealthDaemonApplicationsInstalledBundleIdentifiersKey
__ HealthDaemon: _HDHealthDaemonApplicationsInstalledNotification
__ HealthDaemon: _HDHealthDaemonApplicationsUninstalledBundleIdentifiersKey
__ HealthDaemon: _HDHealthDaemonApplicationsUninstalledNotification
__ HealthDaemon: _HDHealthDaemonFitnessAppsAllowedNotification
__ HealthDaemon: _HDHealthDaemonFitnessAppsRestrictedNotification
__ HealthDaemon: _HDSQLEntityPropertyPersistentID
__ HealthDaemon: _HDSQLiteBindDataToProperty
__ HealthDaemon: _HDSQLiteBindInt64ToProperty
__ HealthDaemon: _HDSQLiteBindUUIDToProperty
__ HealthDaemon: _HDSQLiteColumnWithNameAsData
__ HealthDaemon: _HDSQLiteColumnWithNameAsInt64
__ HealthDaemon: _HDSQLiteColumnWithNameAsUUID
__ HealthDaemon: _HDSampleEntityPredicateForDataTypes
__ HealthDaemon: _HDSampleEntityPredicateForEndDate
__ HealthDaemon: _HDSampleEntityPropertyEndDate
__ HealthDaemon: _OBJC_CLASS_$_HDDaemonTransaction
__ HealthDaemon: _OBJC_CLASS_$_HDDataEntity
__ HealthDaemon: _OBJC_CLASS_$_HDEntityEncoder
__ HealthDaemon: _OBJC_CLASS_$_HDFitnessFriendAchievementEntity
__ HealthDaemon: _OBJC_CLASS_$_HDFitnessFriendActivitySnapshotEntity
__ HealthDaemon: _OBJC_CLASS_$_HDFitnessFriendWorkoutEntity
__ HealthDaemon: _OBJC_CLASS_$_HDJournalEntry
__ HealthDaemon: _OBJC_CLASS_$_HDKeyValueDomain
__ HealthDaemon: _OBJC_CLASS_$_HDQueryServer
__ HealthDaemon: _OBJC_CLASS_$_HDSQLiteComparisonPredicate
__ HealthDaemon: _OBJC_CLASS_$_HDSQLiteCompoundPredicate
__ HealthDaemon: _OBJC_CLASS_$_HDSQLitePredicate
__ HealthDaemon: _OBJC_CLASS_$_HDSampleEntity
__ HealthDaemon: _OBJC_CLASS_$_HDWorkoutEntity
__ HealthDaemon: _OBJC_METACLASS_$_HDDataEntity
__ HealthDaemon: _OBJC_METACLASS_$_HDEntityEncoder
__ HealthDaemon: _OBJC_METACLASS_$_HDJournalEntry
__ HealthDaemon: _OBJC_METACLASS_$_HDQueryServer
__ HealthDaemon: __HDSQLiteValueForDate
__ HealthDaemon: _kHDSQLiteQueryNoLimit
__ HealthKit: _HKCreateConcurrentDispatchQueue
__ HealthKit: _HKCreateSerialDispatchQueue
__ HealthKit: _HKCreateSerialUtilityDispatchQueue
__ HealthKit: _HKDateMax
__ HealthKit: _HKHealthKitFrameworkBundle
__ HealthKit: _HKHealthKitStringsTableName
__ HealthKit: _HKWithAutoreleasePool
__ HealthKit: _OBJC_CLASS_$_HKActivitySummary
__ HealthKit: _OBJC_CLASS_$_HKObjectType
__ HealthKit: _OBJC_CLASS_$_HKQuantity
__ HealthKit: _OBJC_CLASS_$_HKSampleType
__ HealthKit: _OBJC_CLASS_$_HKSource
__ HealthKit: _OBJC_CLASS_$_HKSourceRevision
__ HealthKit: _OBJC_CLASS_$_HKUnit
__ HealthKit: _OBJC_CLASS_$_HKWorkoutType
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: _OBJC_CLASS_$__HKFitnessFriendAchievement
__ HealthKit: _OBJC_CLASS_$__HKFitnessFriendActivitySnapshot
__ HealthKit: _OBJC_CLASS_$__HKFitnessFriendWorkout
__ HealthKit: __HKActivityCacheDateComponentsFromDate
__ HealthKit: __HKCacheIndexFromDateComponents
__ HealthKit: __HKEndDateForSnapshotIndex
__ HealthKit: __HKLogDroppedError
__ HealthKit: __HKMostRecentActivitySnapshotInSnapshots
__ HealthKit: __HKRequiredCalendarUnitsForCacheIndexDateComponents
__ HealthKit: __HKStartDateForSnapshotIndex
__ HealthKit: _kHKActivitySharingDomain
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumber
__ IDS: _IDSCopyRawAddressForDestination
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _IDSSendMessageOptionWantsClientAcknowledgementKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRPairedDeviceRegistryPairedDeviceDidChangeVersionDarwinNotification
__ ScreenTimeCore: _OBJC_CLASS_$_STConversation
__ ToneLibrary: _TLAlertTopicActivityFriendsGoalAttained
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationCategory
__ UserNotifications: _OBJC_CLASS_$_UNNotificationIcon
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_generate_audit_token
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
ASActivitySharingProfileExtension : NSObject /usr/lib/libSystem.B.dylib <HDProfileExtension, ASActivitySharingManagerProvider, ASActivitySharingPluginInterface>
 @property  ASActivitySharingManager *activitySharingManager
 @property  HDProfile *profile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASActivitySharingProfileExtension activitySharingManagerForProfile:]

  // instance methods
  -[ASActivitySharingProfileExtension initWithProfile:]
  -[ASActivitySharingProfileExtension .cxx_destruct]
  -[ASActivitySharingProfileExtension setActivitySharingManager:]
  -[ASActivitySharingProfileExtension activitySharingManager]
  -[ASActivitySharingProfileExtension profile]
  -[ASActivitySharingProfileExtension allFriends]


ASCompetitionAwardingSource : NSObject /usr/lib/libSystem.B.dylib <ACHEarnedInstanceAwarding>
 @property  <ASCompetitionAwardingSourceDataProvider> *dataProvider
 @property  NSString *uniqueName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCompetitionAwardingSource uniqueName]
  -[ASCompetitionAwardingSource .cxx_destruct]
  -[ASCompetitionAwardingSource dataProvider]
  -[ASCompetitionAwardingSource setDataProvider:]
  -[ASCompetitionAwardingSource earnedInstancesForHistoricalInterval:databaseContext:]
  -[ASCompetitionAwardingSource _queue_earnedInstancesForInterval:selectingCompetitionsUsingFilter:]
  -[ASCompetitionAwardingSource _allCompetitionsOrderedByEndDate]
  -[ASCompetitionAwardingSource initForCreatorDevice:]
  -[ASCompetitionAwardingSource earnedInstancesForIncrementalInterval:]


ASDatabaseCompetitionListEntryEntity : HDDataEntity /System/Library/Frameworks/HealthKit.framework/HealthKit
  // class methods
  +[ASDatabaseCompetitionListEntryEntity databaseTable]
  +[ASDatabaseCompetitionListEntryEntity columnDefinitionsWithCount:]
  +[ASDatabaseCompetitionListEntryEntity protectionClass]
  +[ASDatabaseCompetitionListEntryEntity uniquedColumns]
  +[ASDatabaseCompetitionListEntryEntity entityEncoderForProfile:transaction:purpose:encodingOptions:authorizationFilter:]
  +[ASDatabaseCompetitionListEntryEntity _insertCompetitionLists:profile:error:]
  +[ASDatabaseCompetitionListEntryEntity _insertCompetitionList:database:error:]
  +[ASDatabaseCompetitionListEntryEntity saveCompetitionList:profile:withError:]
  +[ASDatabaseCompetitionListEntryEntity enumerateAllCompetitionListsWithProfile:error:handler:]
  +[ASDatabaseCompetitionListEntryEntity removeAllCompetitionListsWithProfile:error:]


ASDatabaseCompetitionListEntryEncoder : HDEntityEncoder /System/Library/Frameworks/HealthKit.framework/HealthKit
  // instance methods
  -[ASDatabaseCompetitionListEntryEncoder objectForPersistentID:row:error:]
  -[ASDatabaseCompetitionListEntryEncoder applyPropertiesToObject:persistentID:row:error:]
  -[ASDatabaseCompetitionListEntryEncoder orderedProperties]
  -[ASDatabaseCompetitionListEntryEncoder codableRepresentationForPersistentID:row:error:]


ASDatabaseCompetitionListEntryJournalEntry : HDJournalEntry /System/Library/Frameworks/HealthKit.framework/HealthKit
 @property  ASCodableDatabaseCompetitionListEntry *competitionList

  // class methods
  +[ASDatabaseCompetitionListEntryJournalEntry supportsSecureCoding]
  +[ASDatabaseCompetitionListEntryJournalEntry applyEntries:withProfile:]

  // instance methods
  -[ASDatabaseCompetitionListEntryJournalEntry .cxx_destruct]
  -[ASDatabaseCompetitionListEntryJournalEntry encodeWithCoder:]
  -[ASDatabaseCompetitionListEntryJournalEntry initWithCoder:]
  -[ASDatabaseCompetitionListEntryJournalEntry initWithCompetitionList:]
  -[ASDatabaseCompetitionListEntryJournalEntry competitionList]


ASDatabaeCompetitionListEntryBulkDeletionJournalEntry : HDJournalEntry /System/Library/Frameworks/HealthKit.framework/HealthKit
  // class methods
  +[ASDatabaeCompetitionListEntryBulkDeletionJournalEntry applyEntries:withProfile:]


ASFakingManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  HDProfile *profile
 @property  ASActivityDataManager *activityDataManager
 @property  ASCloudKitManager *cloudKitManager
 @property  ASCompetitionManager *competitionManager
 @property  ASContactsManager *contactsManager
 @property  ASFriend *fakeFriend
 @property  _HKFitnessFriendWorkout *fakeWorkout
 @property  ACHAchievement *fakeAchievement
 @property  _HKFitnessFriendAchievement *fakeFriendAchievement
 @property  _HKFitnessFriendActivitySnapshot *fakeSnapshot
 @property  _HKFitnessFriendActivitySnapshot *fakeCompleteSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASFakingManager setContactsManager:]
  -[ASFakingManager contactsManager]
  -[ASFakingManager cloudKitManager]
  -[ASFakingManager pushFakeActivityDataToAllFriendsWithCompletion:]
  -[ASFakingManager .cxx_destruct]
  -[ASFakingManager setCloudKitManager:]
  -[ASFakingManager profile]
  -[ASFakingManager activityDataManager]
  -[ASFakingManager setProfile:]
  -[ASFakingManager competitionManager]
  -[ASFakingManager setActivityDataManager:]
  -[ASFakingManager setCompetitionManager:]
  -[ASFakingManager fakeFriendWithCompetitionStatus:competition:]
  -[ASFakingManager _contactWithFakeCompetitionStatus:]
  -[ASFakingManager _fakeCompetitionHistory]
  -[ASFakingManager _fakeSnapshotWithCompleteRings:]
  -[ASFakingManager fakeSnapshot]
  -[ASFakingManager fakeFriendAchievement]
  -[ASFakingManager fakeWorkout]
  -[ASFakingManager fakeCompetitionWithStartDate:winningParticipant:]
  -[ASFakingManager activitySharingManagerReady:]
  -[ASFakingManager fakeFriend]
  -[ASFakingManager fakeAchievement]
  -[ASFakingManager fakeCompleteSnapshot]


ASMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *payload
 @property  long long retryCount
 @property  int type
 @property  NSString *senderAddress
 @property  @? ephemeralCompletionBlock

  // instance methods
  -[ASMessage setRetryCount:]
  -[ASMessage setPayload:]
  -[ASMessage payload]
  -[ASMessage retryCount]
  -[ASMessage setType:]
  -[ASMessage .cxx_destruct]
  -[ASMessage initWithDictionary:]
  -[ASMessage type]
  -[ASMessage dictionaryRepresentation]
  -[ASMessage setSenderAddress:]
  -[ASMessage senderAddress]
  -[ASMessage ephemeralCompletionBlock]
  -[ASMessage setEphemeralCompletionBlock:]


ASMessageQueue : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ASMessageQueue init]
  -[ASMessageQueue dealloc]
  -[ASMessageQueue .cxx_destruct]
  -[ASMessageQueue _synchronizePreferences]
  -[ASMessageQueue initWithQueueName:]
  -[ASMessageQueue messageWithIdentifier:]
  -[ASMessageQueue enumerateQueuedMessagesUsingBlock:]
  -[ASMessageQueue setMessage:identifier:]
  -[ASMessageQueue removeMessageWithIdentifier:]


ASRelationshipBeganPlaceholder : NSObject /usr/lib/libSystem.B.dylib
 @property  id token
 @property  NSSet *blocksWaitingOnSuccess

  // instance methods
  -[ASRelationshipBeganPlaceholder initWithToken:]
  -[ASRelationshipBeganPlaceholder .cxx_destruct]
  -[ASRelationshipBeganPlaceholder token]
  -[ASRelationshipBeganPlaceholder registerBlockWaitingOnSuccess:]
  -[ASRelationshipBeganPlaceholder blocksWaitingOnSuccess]


ASRelationshipManager : NSObject /usr/lib/libSystem.B.dylib <ASIDSMessageCenterDelegate, ASCloudKitManagerChangesObserver, ASGatewayManagerChangesObserver, ASFriendInviteBulletinManagerDelegate, ASActivitySharingManagerReadyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isReadyToProcessChanges

  // instance methods
  -[ASRelationshipManager sendWithdrawInviteRequestToFriendWithUUID:completion:]
  -[ASRelationshipManager setMuteEnabled:forFriendWithUUID:completion:]
  -[ASRelationshipManager init]
  -[ASRelationshipManager dealloc]
  -[ASRelationshipManager .cxx_destruct]
  -[ASRelationshipManager removeFriendWithUUID:completion:]
  -[ASRelationshipManager acceptInviteRequestFromFriendWithUUID:completion:]
  -[ASRelationshipManager ignoreInviteRequestFromFriendWithUUID:completion:]
  -[ASRelationshipManager setActivityDataVisible:toFriendWithUUID:completion:]
  -[ASRelationshipManager activitySharingManagerReady:]
  -[ASRelationshipManager _processPersistedMessagesIfNeeded]
  -[ASRelationshipManager beginReceivingMessages]
  -[ASRelationshipManager _contactStoreDidChangeNotification:]
  -[ASRelationshipManager endReceivingMessages]
  -[ASRelationshipManager insertPlaceholderRelationshipEvent:friendUUID:]
  -[ASRelationshipManager _queue_saveRelationship:contact:withExtraRecords:completion:]
  -[ASRelationshipManager _performBlockWaitingForFriendshipBeganForFriendWithUUID:block:]
  -[ASRelationshipManager _queue_saveRelationship:contact:completion:]
  -[ASRelationshipManager _queue_removeFriendWithUUID:eventType:completion:]
  -[ASRelationshipManager _insertInviteForContact:destination:serviceIdentifier:]
  -[ASRelationshipManager _currentActivityDataPreview]
  -[ASRelationshipManager _queue_saveRelationshipAndFetchOrCreateShares:contact:completion:]
  -[ASRelationshipManager _queue_insertPlaceholderFriendshipDidBeginForContactWithUUID:]
  -[ASRelationshipManager _queue_removePlaceholderRelationshipBeganForContactWithUUID:success:]
  -[ASRelationshipManager _queue_addPersonWithCloudKitAddress:toShares:completion:]
  -[ASRelationshipManager _queue_fetchSharesForRelationship:completion:]
  -[ASRelationshipManager _contactWithInviteRequest:fromSender:]
  -[ASRelationshipManager _processActivityDataPreview:friendUUID:]
  -[ASRelationshipManager _contactWithOutgoingHandshakeToken:]
  -[ASRelationshipManager _queue_acceptShares:forRelationship:contact:completion:]
  -[ASRelationshipManager _contactWithIncomingHandshakeToken:]
  -[ASRelationshipManager _queue_reconcileCloudKitRelationships:]
  -[ASRelationshipManager _queue_processRemoteRelationships:completion:]
  -[ASRelationshipManager _contactWithUUIDPreferringPlaceholders:]
  -[ASRelationshipManager _queue_handleSavedRecords:forContact:]
  -[ASRelationshipManager _queue_allRelationshipsByRecordID]
  -[ASRelationshipManager _queue_reconcileAddressBookAgainstRelationships:]
  -[ASRelationshipManager _queue_allContactsByRecordID]
  -[ASRelationshipManager _contactWithRemoteRelationshipRecordZoneID:]
  -[ASRelationshipManager messageCenter:didReceiveInviteRequest:fromSenderAddress:messageHandledCompletion:]
  -[ASRelationshipManager messageCenter:didReceiveInviteResponse:fromSenderAddress:messageHandledCompletion:]
  -[ASRelationshipManager messageCenter:didReceiveFinalizeHandshake:fromSenderAddress:messageHandledCompletion:]
  -[ASRelationshipManager messageCenter:didReceiveWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:]
  -[ASRelationshipManager isReadyToProcessChanges]
  -[ASRelationshipManager cloudKitManager:didBeginUpdatesForFetchWithType:]
  -[ASRelationshipManager cloudKitManager:didRecieveNewRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:]
  -[ASRelationshipManager cloudKitManager:didRecieveNewRemoteRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:]
  -[ASRelationshipManager gatewayManagerStatusDidChange]
  -[ASRelationshipManager friendInviteBulletinManagerDidReceiveActionResponse:fromContactWithUUID:]
  -[ASRelationshipManager processRetryMessages]
  -[ASRelationshipManager updateRelationshipWithCompetitionEvent:friendUUID:completion:]
  -[ASRelationshipManager updateRelationshipsForCurrentFeatureSupportWithCompletion:]
  -[ASRelationshipManager sendInviteToPersonWithDestination:callerID:serviceIdentifier:completion:]
  -[ASRelationshipManager notificationManager:didReceiveActionResponse:fromContactWithUUID:]
  -[ASRelationshipManager removePlaceholderRelationshipEventWithToken:]


ASOnWristMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  <ASOnWristMonitorDelegate> *delegate

  // instance methods
  -[ASOnWristMonitor .cxx_destruct]
  -[ASOnWristMonitor setDelegate:]
  -[ASOnWristMonitor delegate]
  -[ASOnWristMonitor getWristState:]


ASFakeBulletinManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASFakeBulletinManager dealloc]
  -[ASFakeBulletinManager .cxx_destruct]
  -[ASFakeBulletinManager activitySharingManagerReady:]
  -[ASFakeBulletinManager deregisterBulletins]
  -[ASFakeBulletinManager _showFakeWorkoutNotification]
  -[ASFakeBulletinManager _showFakeAchievementNotification]
  -[ASFakeBulletinManager _showFakeGoalCompletionNotification]
  -[ASFakeBulletinManager _showFakeBatchNotification]
  -[ASFakeBulletinManager _showFakeGoalCompletionDuringCompetitionNotification]
  -[ASFakeBulletinManager _showFakeCompetitionRequestNotification]
  -[ASFakeBulletinManager _showFakeCompetitionAcceptedNotification]
  -[ASFakeBulletinManager _showFakeCompetitionEndedWinnerNotification]
  -[ASFakeBulletinManager _showFakeCompetitionEndedLoserNotification]
  -[ASFakeBulletinManager _showFakeCompetitionScoreCapCelebrationNotification]
  -[ASFakeBulletinManager _showFakeInvitationRequest]
  -[ASFakeBulletinManager _showFakeInvitationResponse]
  -[ASFakeBulletinManager _showFakeInviteAttemptNeedsSetup]
  -[ASFakeBulletinManager _showFakeNeedToSignIn]
  -[ASFakeBulletinManager _showFakeNeedToUpgrade]
  -[ASFakeBulletinManager _fakeContact]
  -[ASFakeBulletinManager registerBulletins]


ASFriendNotificationContainer : NSObject /usr/lib/libSystem.B.dylib
 @property  UNNotificationRequest *notificationRequest
 @property  NSString *friendUUID
 @property  long long notificationRequestType

  // class methods
  +[ASFriendNotificationContainer containerWithNotificationRequest:friendUUID:bulletinType:]

  // instance methods
  -[ASFriendNotificationContainer .cxx_destruct]
  -[ASFriendNotificationContainer friendUUID]
  -[ASFriendNotificationContainer notificationRequest]
  -[ASFriendNotificationContainer initWithNotificationRequest:friendUUID:bulletinType:]
  -[ASFriendNotificationContainer notificationRequestType]


ASCompetitionBulletinManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCompetitionBulletinManager .cxx_destruct]
  -[ASCompetitionBulletinManager activitySharingManagerReady:]
  -[ASCompetitionBulletinManager showCompetitionRequestNotificationForFriend:competition:withPostingStyle:]
  -[ASCompetitionBulletinManager showCompetitionAcceptedNotificationForFriend:competition:withPostingStyle:]
  -[ASCompetitionBulletinManager showCompetitionEndedNotificationForFriend:competition:withPostingStyle:]
  -[ASCompetitionBulletinManager showCompetitionScoreCapCelebrationForFriends:withPostingStyle:]
  -[ASCompetitionBulletinManager showGizmoVersionTooLowForCompetitionRequestFrom:]
  -[ASCompetitionBulletinManager withdrawCompetitionRequestNotificationForFriendWithUUID:]


ASCompetitionTemplateSource : NSObject /usr/lib/libSystem.B.dylib <ACHTemplateSource>
 @property  <ASCompetitionTemplateSourceDataProvider> *dataProvider
 @property  NSString *identifier
 @property  long long runCadence
 @property  NSObject<ACHTemplateSourceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCompetitionTemplateSource .cxx_destruct]
  -[ASCompetitionTemplateSource identifier]
  -[ASCompetitionTemplateSource dataProvider]
  -[ASCompetitionTemplateSource setDataProvider:]
  -[ASCompetitionTemplateSource sourceShouldRunForDate:]
  -[ASCompetitionTemplateSource templatesForDate:completion:]
  -[ASCompetitionTemplateSource localizationBundleURLForTemplate:]
  -[ASCompetitionTemplateSource resourceBundleURLForTemplate:]
  -[ASCompetitionTemplateSource propertyListBundleURLForTemplate:]
  -[ASCompetitionTemplateSource stickerBundleURLForTemplate:]
  -[ASCompetitionTemplateSource runCadence]
  -[ASCompetitionTemplateSource customPlaceholderValuesForTemplate:]
  -[ASCompetitionTemplateSource _competitionForVictoryTemplate:]
  -[ASCompetitionTemplateSource _friendForVictoryTemplate:]
  -[ASCompetitionTemplateSource unusedTemplateNamesForFriendWithUUID:]


ASActivityDataBulletinManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASActivityDataBulletinManager .cxx_destruct]
  -[ASActivityDataBulletinManager activitySharingManagerReady:]
  -[ASActivityDataBulletinManager showActivityNotifications:withPostingStyle:]


ASActivitySharingPlugin : NSObject /usr/lib/libSystem.B.dylib <HDPlugin, HDDatabaseSchemaProvider, HDTaskServerClassProvider>
 @property  NSString *pluginIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *schemaName

  // instance methods
  -[ASActivitySharingPlugin init]
  -[ASActivitySharingPlugin currentSchemaVersionForProtectionClass:]
  -[ASActivitySharingPlugin taskServerClasses]
  -[ASActivitySharingPlugin schemaName]
  -[ASActivitySharingPlugin extensionForHealthDaemon:]
  -[ASActivitySharingPlugin _dropTableSQLStringForCompetitions]
  -[ASActivitySharingPlugin _createTableSQLStringForCompetitionLists]
  -[ASActivitySharingPlugin extensionForProfile:]
  -[ASActivitySharingPlugin pluginIdentifier]
  -[ASActivitySharingPlugin registerMigrationStepsForProtectionClass:migrator:]
  -[ASActivitySharingPlugin _dropTableSQLStringForCompetitionLists]
  -[ASActivitySharingPlugin databaseEntitiesForProtectionClass:]


ASCompanionBulletinPostingManager : NSObject /usr/lib/libSystem.B.dylib <UNUserNotificationCenterDelegate, ASBulletinPostingManager, ASActivitySharingManagerReadyObserver>
 @property  <ASBulletinPostingManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCompanionBulletinPostingManager postNotificationRequest:]
  -[ASCompanionBulletinPostingManager init]
  -[ASCompanionBulletinPostingManager .cxx_destruct]
  -[ASCompanionBulletinPostingManager setDelegate:]
  -[ASCompanionBulletinPostingManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[ASCompanionBulletinPostingManager delegate]
  -[ASCompanionBulletinPostingManager handleNotificationResponse:completion:]
  -[ASCompanionBulletinPostingManager removeNotificationWithIdentifier:]
  -[ASCompanionBulletinPostingManager activitySharingManagerReady:]
  -[ASCompanionBulletinPostingManager enqueueBulletins:withPostingSyle:]
  -[ASCompanionBulletinPostingManager removeCompetitionNotificationsForFriendUUID:]
  -[ASCompanionBulletinPostingManager _withdrawNotificationRequestsWithIdentifiers:]
  -[ASCompanionBulletinPostingManager registerNotificationCategories:]
  -[ASCompanionBulletinPostingManager postFakeBulletins:]


ASCloudKitServerChangeTokenCache : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL expired

  // class methods
  +[ASCloudKitServerChangeTokenCache changeTokenCacheFromUserDefaultsWithSerialQueue:]

  // instance methods
  -[ASCloudKitServerChangeTokenCache copyWithZone:]
  -[ASCloudKitServerChangeTokenCache initWithSerialQueue:]
  -[ASCloudKitServerChangeTokenCache setExpired:]
  -[ASCloudKitServerChangeTokenCache serverChangeTokenForRecordZoneID:]
  -[ASCloudKitServerChangeTokenCache .cxx_destruct]
  -[ASCloudKitServerChangeTokenCache isExpired]
  -[ASCloudKitServerChangeTokenCache setServerChangeToken:forRecordZoneID:]
  -[ASCloudKitServerChangeTokenCache persistToUserDefaults]
  -[ASCloudKitServerChangeTokenCache serverChangeTokenForDatabase:]
  -[ASCloudKitServerChangeTokenCache setServerChangeToken:forDatabase:]


ASActivityDataNotificationManager : NSObject /usr/lib/libSystem.B.dylib <HDDataObserver, ASCloudKitManagerChangesObserver, ASActivitySharingManagerReadyObserver>
 @property  ASActivityDataNotificationRulesEngine *notificationRulesEngine
 @property  NSNumber *workoutAnchor
 @property  NSNumber *achievementAnchor
 @property  NSNumber *goalCompletionAnchor
 @property  ASCloudKitManager *cloudKitManager
 @property  ASActivityDataManager *activityDataManager
 @property  ASContactsManager *contactsManager
 @property  ASFriendListManager *friendListManager
 @property  ASActivityDataBulletinManager *activityDataBulletinManager
 @property  ASPeriodicUpdateManager *periodicUpdateManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isReadyToProcessChanges

  // instance methods
  -[ASActivityDataNotificationManager setContactsManager:]
  -[ASActivityDataNotificationManager contactsManager]
  -[ASActivityDataNotificationManager init]
  -[ASActivityDataNotificationManager cloudKitManager]
  -[ASActivityDataNotificationManager dealloc]
  -[ASActivityDataNotificationManager .cxx_destruct]
  -[ASActivityDataNotificationManager periodicUpdateManager]
  -[ASActivityDataNotificationManager endObserving]
  -[ASActivityDataNotificationManager setCloudKitManager:]
  -[ASActivityDataNotificationManager friendListManager]
  -[ASActivityDataNotificationManager beginObserving]
  -[ASActivityDataNotificationManager samplesOfTypesWereRemoved:anchor:]
  -[ASActivityDataNotificationManager activityDataBulletinManager]
  -[ASActivityDataNotificationManager activityDataManager]
  -[ASActivityDataNotificationManager samplesAdded:anchor:]
  -[ASActivityDataNotificationManager setActivityDataManager:]
  -[ASActivityDataNotificationManager activitySharingManagerReady:]
  -[ASActivityDataNotificationManager isReadyToProcessChanges]
  -[ASActivityDataNotificationManager cloudKitManager:didBeginUpdatesForFetchWithType:]
  -[ASActivityDataNotificationManager cloudKitManager:didEndUpdatesForFetchWithType:]
  -[ASActivityDataNotificationManager cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:]
  -[ASActivityDataNotificationManager cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:]
  -[ASActivityDataNotificationManager cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:]
  -[ASActivityDataNotificationManager cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:]
  -[ASActivityDataNotificationManager _queue_showFriendNotificationsIfRequired]
  -[ASActivityDataNotificationManager _notifyAboutWorkoutsDetectionIfRequired:]
  -[ASActivityDataNotificationManager _nanoUserDefaultsDomainWithProfile:]
  -[ASActivityDataNotificationManager _nanoUserDefaultsDomainKeyForFriendWithUUID:keyTypeString:]
  -[ASActivityDataNotificationManager _localUserDefaultsDomainWithProfile:]
  -[ASActivityDataNotificationManager _queue_selectWorkoutNotifications]
  -[ASActivityDataNotificationManager _queue_selectAchievementNotifications]
  -[ASActivityDataNotificationManager _queue_selectGoalCompletionNotifications]
  -[ASActivityDataNotificationManager workoutAnchor]
  -[ASActivityDataNotificationManager _mostRecentWorkoutCompletionDateForFriendWithUUID:]
  -[ASActivityDataNotificationManager _setMostRecentWorkoutCompletionDate:forFriendWithUUID:]
  -[ASActivityDataNotificationManager setWorkoutAnchor:]
  -[ASActivityDataNotificationManager achievementAnchor]
  -[ASActivityDataNotificationManager _mostRecentMonthlyAchievementEarnedDateForFriendWithUUID:]
  -[ASActivityDataNotificationManager _mostRecentAchievementEarnedDateForFriendWithUUID:]
  -[ASActivityDataNotificationManager _setMostRecentAchievementEarnedDate:forFriendWithUUID:]
  -[ASActivityDataNotificationManager _setMostRecentMonthlyAchievementEarnedDate:forFriendWithUUID:]
  -[ASActivityDataNotificationManager setAchievementAnchor:]
  -[ASActivityDataNotificationManager goalCompletionAnchor]
  -[ASActivityDataNotificationManager _mostRecentGoalCompletedSnapshotIndexForFriendWithUUID:]
  -[ASActivityDataNotificationManager _setMostRecentGoalCompletedSnapshotIndex:forFriendWithUUID:]
  -[ASActivityDataNotificationManager setGoalCompletionAnchor:]
  -[ASActivityDataNotificationManager notificationRulesEngine]
  -[ASActivityDataNotificationManager setNotificationRulesEngine:]
  -[ASActivityDataNotificationManager setFriendListManager:]
  -[ASActivityDataNotificationManager setActivityDataBulletinManager:]
  -[ASActivityDataNotificationManager setPeriodicUpdateManager:]


ASNotificationStep : NSObject /usr/lib/libSystem.B.dylib
 @property  NSSet *recordTypes
 @property  @? objectsTransformationBlock
 @property  @? objectTransformationBlock
 @property  @? shouldNotifyObserverBlock
 @property  @? notifyObserverBlock

  // instance methods
  -[ASNotificationStep recordTypes]
  -[ASNotificationStep .cxx_destruct]
  -[ASNotificationStep setRecordTypes:]
  -[ASNotificationStep objectsTransformationBlock]
  -[ASNotificationStep objectTransformationBlock]
  -[ASNotificationStep objectsTransformedFromRecords:cloudKitManager:]
  -[ASNotificationStep setObjectsTransformationBlock:]
  -[ASNotificationStep setObjectTransformationBlock:]
  -[ASNotificationStep shouldNotifyObserverBlock]
  -[ASNotificationStep setShouldNotifyObserverBlock:]
  -[ASNotificationStep notifyObserverBlock]
  -[ASNotificationStep setNotifyObserverBlock:]


ASCloudKitManager : NSObject /usr/lib/libSystem.B.dylib <APSConnectionDelegate, ASActivitySharingManagerReadyObserver>
 @property  ASCloudKitUtility *cloudKitUtility
 @property  CKContainer *container
 @property  NSDate *dateOfLastSuccessfulFetch
 @property  BOOL readyForOperations
 @property  BOOL hasCompletedFirstFetch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASCloudKitManager relationshipZone]
  +[ASCloudKitManager activityDataRecordZoneID]
  +[ASCloudKitManager activityDataRootRecordID]
  +[ASCloudKitManager _activityDataShareRecordID]
  +[ASCloudKitManager shareURLForShare:]

  // instance methods
  -[ASCloudKitManager connection:didReceiveIncomingMessage:]
  -[ASCloudKitManager connection:didReceiveToken:forTopic:identifier:]
  -[ASCloudKitManager connection:didReceivePublicToken:]
  -[ASCloudKitManager init]
  -[ASCloudKitManager dealloc]
  -[ASCloudKitManager .cxx_destruct]
  -[ASCloudKitManager container]
  -[ASCloudKitManager setContainer:]
  -[ASCloudKitManager expireChangeTokenWithCompletion:]
  -[ASCloudKitManager removeObserver:]
  -[ASCloudKitManager fetchCloudKitAccountStatusWithCompletion:]
  -[ASCloudKitManager addObserver:]
  -[ASCloudKitManager forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:activity:completion:]
  -[ASCloudKitManager activitySharingManagerReady:]
  -[ASCloudKitManager fetchShareParticipantWithCloudKitAddress:completion:]
  -[ASCloudKitManager fetchOrCreateActivityDataShareWithCompletion:]
  -[ASCloudKitManager fetchAllChangesWithPriority:activity:completion:]
  -[ASCloudKitManager saveRecordsIntoPrivateDatabase:priority:completion:]
  -[ASCloudKitManager fetchCloudKitAddressWithCompletion:]
  -[ASCloudKitManager removeParticpantWithCloudKitAddress:fromShares:completion:]
  -[ASCloudKitManager fetchShareWithShareRecordID:completion:]
  -[ASCloudKitManager createShareWithRootRecord:otherRecordsToSave:completion:]
  -[ASCloudKitManager addParticipantWithCloudKitAddress:toShares:completion:]
  -[ASCloudKitManager acceptSharesWithURLs:completion:]
  -[ASCloudKitManager hasCompletedFirstFetch]
  -[ASCloudKitManager setReadyForOperations:]
  -[ASCloudKitManager _createNotificationSteps]
  -[ASCloudKitManager _queue_pushDisable]
  -[ASCloudKitManager setCloudKitUtility:]
  -[ASCloudKitManager _cloudKitAccountStatusChanged:]
  -[ASCloudKitManager _fetchCloudKitAccountStatusAndNotifyOfChanges]
  -[ASCloudKitManager _queue_pushEnable]
  -[ASCloudKitManager cloudKitUtility]
  -[ASCloudKitManager readyForOperations]
  -[ASCloudKitManager _createActivityDataShareWithCompletion:]
  -[ASCloudKitManager _queue_callFetchCompletionBlocksWithSuccess:error:]
  -[ASCloudKitManager _handleNewPrivateDatabaseRecordChanges:sharedDatabaseRecordChanges:fetchType:]
  -[ASCloudKitManager _fetchAllChangesWithPriority:activity:]
  -[ASCloudKitManager _queue_setHasCompletedFirstFetch:]
  -[ASCloudKitManager setDateOfLastSuccessfulFetch:]
  -[ASCloudKitManager _queue_startFetchAllChangesOperationWithPriority:activity:changeTokenCache:completion:]
  -[ASCloudKitManager _performBlockWhenAllObserversBecomeReady:]
  -[ASCloudKitManager _queue_cancelAllExecutingFetches]
  -[ASCloudKitManager _fetchAllChangesWithPriority:activity:completion:]
  -[ASCloudKitManager dateOfLastSuccessfulFetch]
  -[ASCloudKitManager _subscribeToChangesInDatabase:subscriptionPrefix:recordTypes:recordTypesToDelete:completion:]
  -[ASCloudKitManager _subscribeToChangesInSharedDatabaseWithCompletion:]
  -[ASCloudKitManager _subscribeToChangesInPrivateDatabaseWithCompletion:]
  -[ASCloudKitManager _handleIncomingNotification:]
  -[ASCloudKitManager _queue_apsEnvironmentString]
  -[ASCloudKitManager _verifyOrCreateSubscriptionsWithCompletion:]
  -[ASCloudKitManager _cancelNewAccountTasksTimer]
  -[ASCloudKitManager _saveCloudKitAddressToKeyValueStore]
  -[ASCloudKitManager _performAndRetryNewAccountTasksWithRetryInterval:shouldCreateSubscriptions:shouldFetch:]
  -[ASCloudKitManager _performNewAccountTasksCreatingSubscriptions:fetching:completion:]
  -[ASCloudKitManager _fetchCloudKitAddressWithCompletion:]
  -[ASCloudKitManager _handleAccountStatusChange:]
  -[ASCloudKitManager _queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:]
  -[ASCloudKitManager _performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:shouldFetch:]
  -[ASCloudKitManager _queue_clearChangeTokenCacheAndFriendListWithCompletion:]
  -[ASCloudKitManager _queue_notifyObserversOfStatusChanged]
  -[ASCloudKitManager _observerQueue_friendUUIDForActivityDataShareRecordZoneID:]
  -[ASCloudKitManager _observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:]
  -[ASCloudKitManager _observerQueue_clearFriendUUIDByZoneIDCache]
  -[ASCloudKitManager _observerQueue_performNotificationStep:onRecords:dispatchGroup:]
  -[ASCloudKitManager _observerQueue_notifyObserversOfEndUpdatesForFetchWithType:]
  -[ASCloudKitManager beginHandlingOperations]
  -[ASCloudKitManager endHandlingOperations]
  -[ASCloudKitManager fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:priority:activity:completion:]
  -[ASCloudKitManager setHasCompletedFirstFetch:]
  -[ASCloudKitManager observerDidBecomeReadyToProcessChanges:]


ASAsyncTransactionQueue : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ASAsyncTransactionQueue performTransaction:]
  -[ASAsyncTransactionQueue .cxx_destruct]
  -[ASAsyncTransactionQueue initWithDescription:targetSerialQueue:]


ASAchievementManager : NSObject /usr/lib/libSystem.B.dylib <ASCompetitionTemplateSourceDataProvider, ASCompetitionAwardingSourceDataProvider, ASFriendListObserver, ASActivitySharingManagerReadyObserver>
 @property  NSSet *friends
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASAchievementManager friends]
  -[ASAchievementManager .cxx_destruct]
  -[ASAchievementManager friendWithUUID:]
  -[ASAchievementManager removeAllTemplates]
  -[ASAchievementManager activitySharingManagerReady:]
  -[ASAchievementManager removeUnusedTemplatesForFriendWithUUID:]
  -[ASAchievementManager _removeUnusedTemplatesForFriendWithUUID:templateStore:]
  -[ASAchievementManager friendListDidUpdate:]
  -[ASAchievementManager friendListDidLoadCompetitions]
  -[ASAchievementManager initWithIsWatch:]
  -[ASAchievementManager requestTemplateUpdate]
  -[ASAchievementManager requestEarnedInstanceUpdate]
  -[ASAchievementManager removeAllUnusedTemplates]


ASMessageHandler : NSObject /usr/lib/libSystem.B.dylib
 @property  Class protobufClass
 @property  SEL handleReceiveMessageAction
 @property  SEL handleErrorSendingMessageAction

  // instance methods
  -[ASMessageHandler protobufClass]
  -[ASMessageHandler setProtobufClass:]
  -[ASMessageHandler handleReceiveMessageAction]
  -[ASMessageHandler setHandleReceiveMessageAction:]
  -[ASMessageHandler handleErrorSendingMessageAction]
  -[ASMessageHandler setHandleErrorSendingMessageAction:]


ASIDSMessageCenter : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate>
 @property  <ASIDSMessageCenterDelegate> *delegate
 @property  NSString *serviceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASIDSMessageCenter serviceIdentifier]
  -[ASIDSMessageCenter service:account:incomingUnhandledProtobuf:fromID:context:]
  -[ASIDSMessageCenter service:account:identifier:hasBeenDeliveredWithContext:]
  -[ASIDSMessageCenter dealloc]
  -[ASIDSMessageCenter .cxx_destruct]
  -[ASIDSMessageCenter initWithServiceIdentifier:]
  -[ASIDSMessageCenter service:account:identifier:didSendWithSuccess:error:]
  -[ASIDSMessageCenter setDelegate:]
  -[ASIDSMessageCenter delegate]
  -[ASIDSMessageCenter beginReceivingMessages]
  -[ASIDSMessageCenter endReceivingMessages]
  -[ASIDSMessageCenter processRetryMessageQueue]
  -[ASIDSMessageCenter sendInviteRequest:toDestinations:completion:]
  -[ASIDSMessageCenter sendInviteResponse:toDestinations:completion:]
  -[ASIDSMessageCenter sendWithdrawInviteRequest:toDestinations:completion:]
  -[ASIDSMessageCenter sendFinalizeHandshake:toDestinations:completion:]
  -[ASIDSMessageCenter processPersistedMessageQueue]
  -[ASIDSMessageCenter _processMessageQueue:preprocessingBlock:]
  -[ASIDSMessageCenter _sendMessage:type:destinations:completion:]
  -[ASIDSMessageCenter _handleInviteRequest:fromSenderAddress:messageHandledCompletion:]
  -[ASIDSMessageCenter _handleErrorSendingInviteRequest:]
  -[ASIDSMessageCenter _handleInviteResponse:fromSenderAddress:messageHandledCompletion:]
  -[ASIDSMessageCenter _handleErrorSendingInviteResponse:]
  -[ASIDSMessageCenter _handleFinalizeHandshake:fromSenderAddress:messageHandledCompletion:]
  -[ASIDSMessageCenter _handleErrorSendingFinalizeHandshake:]
  -[ASIDSMessageCenter _handleWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:]
  -[ASIDSMessageCenter _handleErrorSendingWithdrawInviteRequest:]
  -[ASIDSMessageCenter _messageHandlerForType:]
  -[ASIDSMessageCenter _dispatchAction:invocationBlock:]
  -[ASIDSMessageCenter _handleMessage:identifier:]
  -[ASIDSMessageCenter _handleMessageSendSuccess:error:identifier:]
  -[ASIDSMessageCenter _handleErrorForMessage:]
  -[ASIDSMessageCenter _idsIdentifiersForDestinations:]
  -[ASIDSMessageCenter _idsIdentifierForDestination:]


ASFriendListManager : NSObject /usr/lib/libSystem.B.dylib <ASContactsManagerObserver, ASCompetitionManagerObserver, CHFitnessAppBadgeCountProvider, ASActivitySharingManagerReadyObserver>
 @property  HDProfile *profile
 @property  ASActivityDataManager *activityDataManager
 @property  ASContactsManager *contactsManager
 @property  ASRelationshipManager *relationshipManager
 @property  ASPeriodicUpdateManager *periodicUpdateManager
 @property  ASCompetitionManager *competitionManager
 @property  ASAchievementManager *achievementManager
 @property  BOOL isWatch
 @property  BOOL hasFriendsToShareWith
 @property  NSSet *friends
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long badgeCount

  // instance methods
  -[ASFriendListManager setContactsManager:]
  -[ASFriendListManager contactsManager]
  -[ASFriendListManager clearFriendListWithCompletion:]
  -[ASFriendListManager init]
  -[ASFriendListManager friends]
  -[ASFriendListManager dealloc]
  -[ASFriendListManager .cxx_destruct]
  -[ASFriendListManager periodicUpdateManager]
  -[ASFriendListManager achievementManager]
  -[ASFriendListManager endObserving]
  -[ASFriendListManager badgeCount]
  -[ASFriendListManager relationshipManager]
  -[ASFriendListManager setIsWatch:]
  -[ASFriendListManager isWatch]
  -[ASFriendListManager removeObserver:]
  -[ASFriendListManager profile]
  -[ASFriendListManager activityDataManager]
  -[ASFriendListManager setProfile:]
  -[ASFriendListManager addObserver:]
  -[ASFriendListManager competitionManager]
  -[ASFriendListManager queryAppBadgeCountWithCompletion:]
  -[ASFriendListManager friendWithUUID:]
  -[ASFriendListManager setActivityDataManager:]
  -[ASFriendListManager setCompetitionManager:]
  -[ASFriendListManager activitySharingManagerReady:]
  -[ASFriendListManager setPeriodicUpdateManager:]
  -[ASFriendListManager initWithIsWatch:]
  -[ASFriendListManager setRelationshipManager:]
  -[ASFriendListManager setAchievementManager:]
  -[ASFriendListManager _handleHasFriendsChanged]
  -[ASFriendListManager _queue_updateFriendList]
  -[ASFriendListManager _queue_friendWithUUID:]
  -[ASFriendListManager _allContactsPreferringPlaceholderContacts]
  -[ASFriendListManager _queue_friendListDidUpdate]
  -[ASFriendListManager _queue_notifyObserversOfCompetitionsLoaded]
  -[ASFriendListManager _queue_notifyObserversOfFriendListChanges]
  -[ASFriendListManager _queue_hasFriendsToShareWith]
  -[ASFriendListManager contactsManagerDidUpdateContacts:]
  -[ASFriendListManager competitionManagerDidLoadCachedCompetitions:]
  -[ASFriendListManager competitionManager:didUpdateCompetitionsForFriendsWithUUIDs:]
  -[ASFriendListManager initializeFriendListAndBeginObserving]
  -[ASFriendListManager fetchfriendDataWithRemoteUUID:completion:]
  -[ASFriendListManager updateFriendListWithNewSnapshots:achievements:workouts:]
  -[ASFriendListManager updateFriendListWithDeletedWorkoutEvents:]
  -[ASFriendListManager hasFriendsToShareWith]


ASDatabaseCompetitionEntity : HDDataEntity /System/Library/Frameworks/HealthKit.framework/HealthKit
  // class methods
  +[ASDatabaseCompetitionEntity databaseTable]
  +[ASDatabaseCompetitionEntity columnDefinitionsWithCount:]
  +[ASDatabaseCompetitionEntity protectionClass]
  +[ASDatabaseCompetitionEntity uniquedColumns]
  +[ASDatabaseCompetitionEntity entityEncoderForProfile:transaction:purpose:encodingOptions:authorizationFilter:]
  +[ASDatabaseCompetitionEntity _insertCompetitions:profile:error:]
  +[ASDatabaseCompetitionEntity _competitionsWithPredicate:profile:error:]
  +[ASDatabaseCompetitionEntity _insertCompetition:database:error:]
  +[ASDatabaseCompetitionEntity saveCompetitions:profile:withError:]
  +[ASDatabaseCompetitionEntity removeCompetitionsForFriendUUID:type:profile:withError:]
  +[ASDatabaseCompetitionEntity removeAllCompetitionsWithProfile:error:]
  +[ASDatabaseCompetitionEntity allDatabaseCompetitionsWithProfile:withError:]


ASDatabseCompetitionEncoder : HDEntityEncoder /System/Library/Frameworks/HealthKit.framework/HealthKit
  // instance methods
  -[ASDatabseCompetitionEncoder objectForPersistentID:row:error:]
  -[ASDatabseCompetitionEncoder applyPropertiesToObject:persistentID:row:error:]
  -[ASDatabseCompetitionEncoder orderedProperties]
  -[ASDatabseCompetitionEncoder codableRepresentationForPersistentID:row:error:]


ASDatabaseCompetitionJournalEntry : HDJournalEntry /System/Library/Frameworks/HealthKit.framework/HealthKit
 @property  ASCodableDatabaseCompetition *databaseCompetition

  // class methods
  +[ASDatabaseCompetitionJournalEntry supportsSecureCoding]
  +[ASDatabaseCompetitionJournalEntry applyEntries:withProfile:]

  // instance methods
  -[ASDatabaseCompetitionJournalEntry .cxx_destruct]
  -[ASDatabaseCompetitionJournalEntry encodeWithCoder:]
  -[ASDatabaseCompetitionJournalEntry initWithCoder:]
  -[ASDatabaseCompetitionJournalEntry initWithDatabaseCompetition:]
  -[ASDatabaseCompetitionJournalEntry databaseCompetition]


ASDatabaseCompetitionDeletionJournalEntry : HDJournalEntry /System/Library/Frameworks/HealthKit.framework/HealthKit
  // class methods
  +[ASDatabaseCompetitionDeletionJournalEntry supportsSecureCoding]
  +[ASDatabaseCompetitionDeletionJournalEntry applyEntries:withProfile:]

  // instance methods
  -[ASDatabaseCompetitionDeletionJournalEntry .cxx_destruct]
  -[ASDatabaseCompetitionDeletionJournalEntry encodeWithCoder:]
  -[ASDatabaseCompetitionDeletionJournalEntry initWithCoder:]
  -[ASDatabaseCompetitionDeletionJournalEntry initWithFriendUUID:type:]


ASDatabaseCompetitionBulkDeletionJournalEntry : HDJournalEntry /System/Library/Frameworks/HealthKit.framework/HealthKit
  // class methods
  +[ASDatabaseCompetitionBulkDeletionJournalEntry applyEntries:withProfile:]


ASCompetitionManager : NSObject /usr/lib/libSystem.B.dylib <ASCloudKitManagerChangesObserver, HDDatabaseProtectedDataObserver, ASActivityDataManagerObserver, ASActivitySharingManagerReadyObserver, ASPeriodicUpdateRecordProvider>
 @property  BOOL isReadyToProcessChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASCompetitionManager sendCompetitionRequestToFriendWithUUID:completion:]
  -[ASCompetitionManager .cxx_destruct]
  -[ASCompetitionManager database:protectedDataDidBecomeAvailable:]
  -[ASCompetitionManager completeCompetitionWithFriendWithUUID:completion:]
  -[ASCompetitionManager acceptCompetitionRequestFromFriendWithUUID:completion:]
  -[ASCompetitionManager ignoreCompetitionRequestFromFriendWithUUID:completion:]
  -[ASCompetitionManager removeObserver:]
  -[ASCompetitionManager recordsToSave]
  -[ASCompetitionManager recordIDsToDelete]
  -[ASCompetitionManager addObserver:]
  -[ASCompetitionManager updateAllActiveCompetitionsWithScores:completion:]
  -[ASCompetitionManager activitySharingManagerReady:]
  -[ASCompetitionManager isReadyToProcessChanges]
  -[ASCompetitionManager cloudKitManager:didBeginUpdatesForFetchWithType:]
  -[ASCompetitionManager cloudKitManager:didEndUpdatesForFetchWithType:]
  -[ASCompetitionManager cloudKitManager:didReceiveNewCompetitionListsForSelf:moreComing:changesProcessedHandler:]
  -[ASCompetitionManager cloudKitManager:didReceiveNewCompetitionLists:moreComing:changesProcessedHandler:]
  -[ASCompetitionManager _localUserDefaultsDomainWithProfile:]
  -[ASCompetitionManager initWithIsWatch:]
  -[ASCompetitionManager competitionsForFriendWithUUID:]
  -[ASCompetitionManager deleteCachedCompetitions]
  -[ASCompetitionManager _loadCachedCompetitionsAndNotifyObservers]
  -[ASCompetitionManager _loadOrCreateCurrentCompetitionListForFriendWithUUID:]
  -[ASCompetitionManager _archivedCompetitionListByMergingCurrentCompetitionList:]
  -[ASCompetitionManager _saveCurrentCompetitionList:archivedCompetitionList:contact:completion:]
  -[ASCompetitionManager _queue_setActivityDataVisibleIfNecessaryForContact:completion:]
  -[ASCompetitionManager _queue_updateScoresWithTodaySummary:yesterdaySummary:]
  -[ASCompetitionManager _queue_handleNewRemoteCompetitionList:contact:]
  -[ASCompetitionManager _queue_notifyObserversOfCompetitionUpdatesForFriendsWithUUIDs:]
  -[ASCompetitionManager _handleCompetitionRequestFromFriendWithUUID:]
  -[ASCompetitionManager _handleAcceptedCompetitionFromFriendWithUUID:]
  -[ASCompetitionManager _queue_showCompetitionEndedWithFriendWithUUID:]
  -[ASCompetitionManager _queue_completeCompetitionIfNecessaryForFriendWithUUID:]
  -[ASCompetitionManager _contactsWithActiveCompetitions]
  -[ASCompetitionManager _recordForCurrentCompetitionList:contact:]
  -[ASCompetitionManager _queue_handleSavedCompetitionListRecords:]
  -[ASCompetitionManager _scoreCapCelebrationAnchorWithProfile:]
  -[ASCompetitionManager _queue_autoAcceptCompetitionRequestFromContact:completion:]
  -[ASCompetitionManager _queue_showCompetitionRequestFromFriendWithUUID:competition:]
  -[ASCompetitionManager _localCompetitionForRemoteCompetition:friendUUID:]
  -[ASCompetitionManager _queue_showCompetitionAcceptedForFriendWithUUID:competition:]
  -[ASCompetitionManager _queue_showScoreCapCelebrationForFriendsWithCappedInProgressCompetitions:]
  -[ASCompetitionManager _setScoreCapCelebrationAnchor:]
  -[ASCompetitionManager loadCachedCompetitions]
  -[ASCompetitionManager activityDataManager:didUpdateTodaySummary:yesterdaySummary:]
  -[ASCompetitionManager periodicUpdateManager:didSaveRecords:]
  -[ASCompetitionManager periodicUpdateManager:didFailToSaveRecords:]


ASActivitySharingManager : NSObject /usr/lib/libSystem.B.dylib <HDHealthDaemonReadyObserver, HDNanoSyncManagerObserver>
 @property  HDProfile *profile
 @property  BOOL isWatch
 @property  ASAchievementManager *achievementManager
 @property  ASActivityDataManager *activityDataManager
 @property  ASActivityDataNotificationManager *activityDataNotificationManager
 @property  ASActivityDataBulletinManager *activityDataBulletinManager
 @property  ASCloudKitManager *cloudKitManager
 @property  ASCompetitionManager *competitionManager
 @property  ASCompetitionBulletinManager *competitionBulletinManager
 @property  ASContactsManager *contactsManager
 @property  ASFakeBulletinManager *fakeBulletinManager
 @property  ASFakingManager *fakingManager
 @property  ASFriendInviteBulletinManager *friendInviteBulletinManager
 @property  ASFriendListManager *friendListManager
 @property  ASGatewayManager *gatewayManager
 @property  ASPeriodicUpdateManager *periodicUpdateManager
 @property  ASRelationshipManager *relationshipManager
 @property  <ASBulletinPostingManager> *bulletinPostingManager
 @property  ASSetupManager *setupManager
 @property  HDKeyValueDomain *deviceLocalActivitySharingKeyValueDomain
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASActivitySharingManager setupManager]
  -[ASActivitySharingManager daemonReady:]
  -[ASActivitySharingManager _waitUntilSubmanagersReady]
  -[ASActivitySharingManager contactsManager]
  -[ASActivitySharingManager clearFriendListWithCompletion:]
  -[ASActivitySharingManager sendWithdrawInviteRequestToFriendWithUUID:completion:]
  -[ASActivitySharingManager setMuteEnabled:forFriendWithUUID:completion:]
  -[ASActivitySharingManager fetchAllDataWithCompletion:]
  -[ASActivitySharingManager cloudKitManager]
  -[ASActivitySharingManager gatewayManager]
  -[ASActivitySharingManager competitionBulletinManager]
  -[ASActivitySharingManager initWithProfile:isWatch:]
  -[ASActivitySharingManager dealloc]
  -[ASActivitySharingManager pushFakeActivityDataToAllFriendsWithCompletion:]
  -[ASActivitySharingManager _mainQueue_shouldCompleteSetup]
  -[ASActivitySharingManager sendCompetitionRequestToFriendWithUUID:completion:]
  -[ASActivitySharingManager _mainQueue_completeSetupIfNeeded]
  -[ASActivitySharingManager .cxx_destruct]
  -[ASActivitySharingManager periodicUpdateManager]
  -[ASActivitySharingManager removeFriendWithUUID:completion:]
  -[ASActivitySharingManager pushActivityDataToAllFriendsWithCompletion:]
  -[ASActivitySharingManager achievementManager]
  -[ASActivitySharingManager completeCompetitionWithFriendWithUUID:completion:]
  -[ASActivitySharingManager cloudKitAccountStatusWithCompletion:]
  -[ASActivitySharingManager fakingManager]
  -[ASActivitySharingManager _applicationsUninstalled:]
  -[ASActivitySharingManager friendListManager]
  -[ASActivitySharingManager removeFriendListObserver:]
  -[ASActivitySharingManager expireChangeTokenWithCompletion:]
  -[ASActivitySharingManager acceptInviteRequestFromFriendWithUUID:completion:]
  -[ASActivitySharingManager relationshipManager]
  -[ASActivitySharingManager nanoSyncManager:pairedDevicesChanged:]
  -[ASActivitySharingManager _activateActivitySharingManager]
  -[ASActivitySharingManager _handleFitnessAppsRestricted:]
  -[ASActivitySharingManager acceptCompetitionRequestFromFriendWithUUID:completion:]
  -[ASActivitySharingManager bulletinPostingManager]
  -[ASActivitySharingManager ignoreCompetitionRequestFromFriendWithUUID:completion:]
  -[ASActivitySharingManager _handleFitnessAppsAllowed:]
  -[ASActivitySharingManager isWatch]
  -[ASActivitySharingManager fakeBulletinManager]
  -[ASActivitySharingManager fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:]
  -[ASActivitySharingManager _mainQueue_notifySubmanagersOfManagerReady]
  -[ASActivitySharingManager addFriendListObserver:]
  -[ASActivitySharingManager ignoreInviteRequestFromFriendWithUUID:completion:]
  -[ASActivitySharingManager _deactivateActivitySharingManager]
  -[ASActivitySharingManager deviceLocalActivitySharingKeyValueDomain]
  -[ASActivitySharingManager profile]
  -[ASActivitySharingManager activityDataBulletinManager]
  -[ASActivitySharingManager setActivityDataVisible:toFriendWithUUID:completion:]
  -[ASActivitySharingManager activityDataManager]
  -[ASActivitySharingManager fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:]
  -[ASActivitySharingManager _mainQueue_nanoRegistryInfoChanged]
  -[ASActivitySharingManager competitionManager]
  -[ASActivitySharingManager _applicationsInstalled:]
  -[ASActivitySharingManager activityDataNotificationManager]
  -[ASActivitySharingManager sendInviteRequestToDestination:callerID:serviceIdentifier:completion:]
  -[ASActivitySharingManager fetchFriendWithRemoteUUID:completion:]
  -[ASActivitySharingManager _mainQueue_stopSubmanagerProcessingIfNeeded]
  -[ASActivitySharingManager allFriends]
  -[ASActivitySharingManager friendInviteBulletinManager]
  -[ASActivitySharingManager _mainQueue_startSubmanagerProcessingIfNeeded]
  -[ASActivitySharingManager handleNotificationResponse:completion:]
  -[ASActivitySharingManager queryAppBadgeCountWithCompletion:]


ASServer : NSObject /usr/lib/libSystem.B.dylib <HDTaskServer, ASServerInterface, _HKXPCExportable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASServer taskIdentifier]
  +[ASServer requiredEntitlements]
  +[ASServer createTaskServerWithUUID:configuration:client:delegate:error:]

  // instance methods
  -[ASServer taskUUID]
  -[ASServer remoteInterface]
  -[ASServer connectionInvalidated]
  -[ASServer .cxx_destruct]
  -[ASServer exportedInterface]
  -[ASServer initWithUUID:configuration:client:delegate:]
  -[ASServer remote_sendInviteRequestToDestination:callerID:serviceIdentifier:completion:]
  -[ASServer remote_acceptInviteRequestFromFriendWithUUID:completion:]
  -[ASServer remote_sendWithdrawInviteRequestToFriendWithUUID:completion:]
  -[ASServer remote_ignoreInviteRequestFromFriendWithUUID:completion:]
  -[ASServer remote_sendCompetitionRequestToFriendWithUUID:completion:]
  -[ASServer remote_acceptCompetitionRequestFromFriendWithUUID:completion:]
  -[ASServer remote_ignoreCompetitionRequestFromFriendWithUUID:completion:]
  -[ASServer remote_completeCompetitionWithFriendWithUUID:completion:]
  -[ASServer remote_setActivityDataVisible:toFriendWithUUID:completion:]
  -[ASServer remote_setMuteEnabled:forFriendWithUUID:completion:]
  -[ASServer remote_removeFriendWithUUID:completion:]
  -[ASServer remote_pushActivityDataWithCompletion:]
  -[ASServer remote_pushFakeActivityDataWithCompletion:]
  -[ASServer remote_fetchAllDataWithCompletion:]
  -[ASServer remote_fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:]
  -[ASServer remote_cloudKitAccountStatusWithCompletion:]
  -[ASServer remote_clearFriendListWithCompletion:]
  -[ASServer remote_fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:]
  -[ASServer remote_expireChangeTokenWithCompletion:]
  -[ASServer remote_friendWithRemoteUUID:completion:]
  -[ASServer remote_handleNotificationResponse:completion:]
  -[ASServer remote_queryAppBadgeCountWithCompletion:]
  -[ASServer initWithUUID:client:activitySharingManager:]


ASSetupManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASSetupManager activitySharingManagerReady:]
  -[ASSetupManager _migrateToTwoWaySyncSetupDefault]


ASActivityDataManager : NSObject /usr/lib/libSystem.B.dylib <HDCurrentActivitySummaryHelperObserver, HDDatabaseProtectedDataObserver, HDDataObserver, ASCloudKitManagerChangesObserver, ACHAchievementStoreObserving, ASActivitySharingManagerReadyObserver, ASPeriodicUpdateRecordProvider>
 @property  HDProfile *profile
 @property  ASActivitySharingManager *activitySharingManager
 @property  ASCloudKitManager *cloudKitManager
 @property  ASFriendListManager *friendListManager
 @property  ASPeriodicUpdateManager *periodicUpdateManager
 @property  BOOL isWatch
 @property  _HKFitnessFriendActivitySnapshot *currentActivitySnapshot
 @property  NSSet *currentWorkouts
 @property  NSSet *currentAchievements
 @property  HKActivitySummary *currentActivitySummary
 @property  HKActivitySummary *yesterdayActivitySummary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isReadyToProcessChanges

  // instance methods
  -[ASActivityDataManager yesterdayActivitySummary]
  -[ASActivityDataManager init]
  -[ASActivityDataManager cloudKitManager]
  -[ASActivityDataManager dealloc]
  -[ASActivityDataManager .cxx_destruct]
  -[ASActivityDataManager periodicUpdateManager]
  -[ASActivityDataManager database:protectedDataDidBecomeAvailable:]
  -[ASActivityDataManager setCloudKitManager:]
  -[ASActivityDataManager friendListManager]
  -[ASActivityDataManager setIsWatch:]
  -[ASActivityDataManager isWatch]
  -[ASActivityDataManager setActivitySharingManager:]
  -[ASActivityDataManager activitySharingManager]
  -[ASActivityDataManager removeObserver:]
  -[ASActivityDataManager profile]
  -[ASActivityDataManager recordsToSave]
  -[ASActivityDataManager recordIDsToDelete]
  -[ASActivityDataManager fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:]
  -[ASActivityDataManager setProfile:]
  -[ASActivityDataManager addObserver:]
  -[ASActivityDataManager samplesAdded:anchor:]
  -[ASActivityDataManager currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:]
  -[ASActivityDataManager currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:]
  -[ASActivityDataManager _queue_samplesAdded:]
  -[ASActivityDataManager achievementStore:didAddAchievements:]
  -[ASActivityDataManager achievementStore:didUpdateAchievements:]
  -[ASActivityDataManager achievementStore:didRemoveAchievements:]
  -[ASActivityDataManager achievementStoreDidFinishInitialFetch:]
  -[ASActivityDataManager recordsFromActivityDataCodables:]
  -[ASActivityDataManager activitySharingManagerReady:]
  -[ASActivityDataManager deleteActivityDataForFriendWithUUID:]
  -[ASActivityDataManager saveActivitySnapshots:workouts:achievements:]
  -[ASActivityDataManager currentActivitySnapshot]
  -[ASActivityDataManager currentWorkouts]
  -[ASActivityDataManager currentAchievements]
  -[ASActivityDataManager isReadyToProcessChanges]
  -[ASActivityDataManager cloudKitManager:didReceiveNewActivitySnapshotsForSelf:moreComing:changesProcessedHandler:]
  -[ASActivityDataManager cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:]
  -[ASActivityDataManager cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:]
  -[ASActivityDataManager cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:]
  -[ASActivityDataManager cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:]
  -[ASActivityDataManager setFriendListManager:]
  -[ASActivityDataManager setPeriodicUpdateManager:]
  -[ASActivityDataManager initWithIsWatch:]
  -[ASActivityDataManager activitySnapshotsForFriendWithUUID:]
  -[ASActivityDataManager achievementsForFriendWithUUID:]
  -[ASActivityDataManager workoutsForFriendWithUUID:]
  -[ASActivityDataManager deleteAllActivitySharingData]
  -[ASActivityDataManager currentActivitySummary]
  -[ASActivityDataManager periodicUpdateManager:didSaveRecords:]
  -[ASActivityDataManager periodicUpdateManager:didFailToSaveRecords:]
  -[ASActivityDataManager beginObservingData]
  -[ASActivityDataManager endObservingData]
  -[ASActivityDataManager _persistedAnchorWithKey:]
  -[ASActivityDataManager _persistedAnchorTokenWithKey:]
  -[ASActivityDataManager _queue_getAndHandleAllActivitySharingData]
  -[ASActivityDataManager _filterAchievements:forSnapshotIndex:]
  -[ASActivityDataManager _ckQueue_processActivitySnapshotsForSelf:]
  -[ASActivityDataManager _ckQueue_handleNewSnapshotsForSelf:moreComing:]
  -[ASActivityDataManager _handleNewSnapshots:workouts:achievements:moreComing:]
  -[ASActivityDataManager _ckQueue_handleDeletedWorkoutEvents:completion:]
  -[ASActivityDataManager _workoutsForActivitySnapshot:anchor:completion:]
  -[ASActivityDataManager _queue_insertSamples:]
  -[ASActivityDataManager _queue_saveFitnessFriendActivitySnapshots:workouts:achievements:]
  -[ASActivityDataManager _queue_deleteAllActivitySharingData]
  -[ASActivityDataManager _queue_deleteActivityDataForFriendWithUUID:]
  -[ASActivityDataManager _endDatePredicate]
  -[ASActivityDataManager _queue_handleNewSnapshots:workouts:achievements:]
  -[ASActivityDataManager _hasMoveGoalForActivitySummary:]
  -[ASActivityDataManager _workoutsAfterAnchor:withPredicate:profile:]
  -[ASActivityDataManager _localSourceUUID]
  -[ASActivityDataManager _isAlertSuppressionEnabled]
  -[ASActivityDataManager _findDeletedWorkoutEventsWithAnchor:completion:]
  -[ASActivityDataManager _activitySnapshotsToPushWithYesterdaySnapshot:todaySnapshot:]
  -[ASActivityDataManager _achievementsToPushWithYesterdaySnapshot:todaySnapshot:currentTodayAchievementAnchorToken:currentYesterdayAchievementAnchorToken:]
  -[ASActivityDataManager _workoutsToPushWithYesterdaySnapshot:todaySnapshot:currentWorkoutAnchor:]
  -[ASActivityDataManager notificationEventsToPushWithYesterdaySnapshot:todaySnapshot:achievements:workouts:currentDeletedWorkoutAnchor:currentGoalCompletionAnchor:]
  -[ASActivityDataManager _queue_setLastPushedWorkoutAnchor:]
  -[ASActivityDataManager _queue_setLastPushedDeletedWorkoutAnchor:]
  -[ASActivityDataManager _queue_setLastPushedTodayAchievementAnchorToken:]
  -[ASActivityDataManager _queue_setLastPushedGoalCompletionAnchor:]
  -[ASActivityDataManager _queue_persistAnchorValue:forKey:]
  -[ASActivityDataManager _queue_persistAnchorTokenValue:forKey:]


_ASContactPlaceholder : NSObject /usr/lib/libSystem.B.dylib
 @property  id token
 @property  ASContact *contact

  // instance methods
  -[_ASContactPlaceholder contact]
  -[_ASContactPlaceholder setContact:]
  -[_ASContactPlaceholder .cxx_destruct]
  -[_ASContactPlaceholder token]
  -[_ASContactPlaceholder setToken:]


ASContactsManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  NSSet *contacts
 @property  NSSet *placeholderContacts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASContactsManager init]
  -[ASContactsManager contacts]
  -[ASContactsManager setContacts:]
  -[ASContactsManager .cxx_destruct]
  -[ASContactsManager _endTransaction]
  -[ASContactsManager _beginTransaction]
  -[ASContactsManager removeObserver:]
  -[ASContactsManager addObserver:]
  -[ASContactsManager removePlaceholderContactWithToken:]
  -[ASContactsManager contactWithUUID:]
  -[ASContactsManager saveContact:]
  -[ASContactsManager contactWithDestinations:]
  -[ASContactsManager createContactWithDestinations:]
  -[ASContactsManager savePlaceholderContact:]
  -[ASContactsManager contactMatchingCriteriaBlock:]
  -[ASContactsManager placeholderContactWithUUID:]
  -[ASContactsManager setContactsUsingTransaction:]
  -[ASContactsManager removeAllPlaceholderContacts]
  -[ASContactsManager placeholderContacts]
  -[ASContactsManager loadCachedContacts]
  -[ASContactsManager _contactStoreContactWithIdentifier:]
  -[ASContactsManager _queue_allContacts]
  -[ASContactsManager _setContacts:waitForTransaction:]
  -[ASContactsManager _findMatchingContactStoreContactForDestinations:]
  -[ASContactsManager _waitForTransaction]
  -[ASContactsManager _queue_notifyObservers]
  -[ASContactsManager _persistContacts:]


ASFriendListQueryServer : HDQueryServer /System/Library/Frameworks/HealthKit.framework/HealthKit <ASFriendListObserver>
 @property  ASActivitySharingManager *activitySharingManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ASFriendListQueryServer queryClass]

  // instance methods
  -[ASFriendListQueryServer _queue_start]
  -[ASFriendListQueryServer .cxx_destruct]
  -[ASFriendListQueryServer _shouldListenForUpdates]
  -[ASFriendListQueryServer _queue_stop]
  -[ASFriendListQueryServer setActivitySharingManager:]
  -[ASFriendListQueryServer activitySharingManager]
  -[ASFriendListQueryServer _shouldExecuteWhenProtectedDataIsUnavailable]
  -[ASFriendListQueryServer initWithUUID:configuration:client:delegate:]
  -[ASFriendListQueryServer friendListDidUpdate:]
  -[ASFriendListQueryServer friendListDidLoadCompetitions]


ASGatewayManager : NSObject /usr/lib/libSystem.B.dylib <ASCloudKitManagerChangesObserver, ASActivitySharingManagerReadyObserver>
 @property  BOOL hasReachedMaximumNumberOfFriends
 @property  BOOL isReadyToProcessChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASGatewayManager init]
  -[ASGatewayManager updateState]
  -[ASGatewayManager .cxx_destruct]
  -[ASGatewayManager removeObserver:]
  -[ASGatewayManager addObserver:]
  -[ASGatewayManager activitySharingManagerReady:]
  -[ASGatewayManager hasReachedMaximumNumberOfFriends]
  -[ASGatewayManager inviteCompatibilityVersion]
  -[ASGatewayManager shouldFilterIncomingMessageFromContact:]
  -[ASGatewayManager isInviteVersionCompatible:]
  -[ASGatewayManager gatewayStatusWithCompletion:]
  -[ASGatewayManager isReadyToProcessChanges]
  -[ASGatewayManager cloudKitManagerDidUpdateAccountStatus:]
  -[ASGatewayManager _queue_notifyObservers]
  -[ASGatewayManager _shouldFilterWhitelistContactDestinations:]
  -[ASGatewayManager _shouldFilterBlacklistContactDestinations:]


ASGizmoBulletinPostingManager : NSObject /usr/lib/libSystem.B.dylib <ASOnWristMonitorDelegate, HDNanoAlertSuppressionObserver, HDDatabaseProtectedDataObserver, UNUserNotificationCenterDelegate, ASBulletinPostingManager, ASActivitySharingManagerReadyObserver>
 @property  <ASBulletinPostingManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASGizmoBulletinPostingManager postNotificationRequest:]
  -[ASGizmoBulletinPostingManager init]
  -[ASGizmoBulletinPostingManager dealloc]
  -[ASGizmoBulletinPostingManager .cxx_destruct]
  -[ASGizmoBulletinPostingManager database:protectedDataDidBecomeAvailable:]
  -[ASGizmoBulletinPostingManager _postNotificationRequest:]
  -[ASGizmoBulletinPostingManager setDelegate:]
  -[ASGizmoBulletinPostingManager userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[ASGizmoBulletinPostingManager delegate]
  -[ASGizmoBulletinPostingManager handleNotificationResponse:completion:]
  -[ASGizmoBulletinPostingManager removeNotificationWithIdentifier:]
  -[ASGizmoBulletinPostingManager activitySharingManagerReady:]
  -[ASGizmoBulletinPostingManager enqueueBulletins:withPostingSyle:]
  -[ASGizmoBulletinPostingManager removeCompetitionNotificationsForFriendUUID:]
  -[ASGizmoBulletinPostingManager _withdrawNotificationRequestsWithIdentifiers:]
  -[ASGizmoBulletinPostingManager registerNotificationCategories:]
  -[ASGizmoBulletinPostingManager postFakeBulletins:]
  -[ASGizmoBulletinPostingManager _postQueuedNotificationRequestsIfPossible]
  -[ASGizmoBulletinPostingManager _batchedNotificationRequestsFromCodableBulletins:withAdditions:]
  -[ASGizmoBulletinPostingManager _notificationRequestFromCodableBulletin:withAdditions:]
  -[ASGizmoBulletinPostingManager _expirationDateForBulletinType:publishDate:]
  -[ASGizmoBulletinPostingManager _threadIdentifierForBulletinType:]
  -[ASGizmoBulletinPostingManager recordIDForFriendUUID:]
  -[ASGizmoBulletinPostingManager removeRecordIDForFriendUUID:]
  -[ASGizmoBulletinPostingManager _batchedNotificationRequestsFromCodableBulletins:]
  -[ASGizmoBulletinPostingManager _queue_postNotificationRequests:]
  -[ASGizmoBulletinPostingManager onWristMonitorUpdatedOnWristState]
  -[ASGizmoBulletinPostingManager alertSuppressionInvalidatedForSuppressionId:reason:]
  -[ASGizmoBulletinPostingManager _notificationRequestFromCodableBulletin:]


ASActivityDataValidator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ASActivityDataValidator validatedSamplesFromAchievements:workouts:activitySnapshots:friendListManager:]
  +[ASActivityDataValidator _removeInvalidWorkouts:]
  +[ASActivityDataValidator _shiftedAchievements:friendTimeZones:friendListManager:]
  +[ASActivityDataValidator _unhiddenSamplesInFilterableSamples:friendTimeZones:friendListManager:]
  +[ASActivityDataValidator _copyAchievement:]


ASCompetitionStore : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ASCompetitionStore initWithProfile:]
  -[ASCompetitionStore .cxx_destruct]
  -[ASCompetitionStore deleteCachedCompetitions]
  -[ASCompetitionStore archivedCompetitionListForFriendWithUUID:]
  -[ASCompetitionStore currentRemoteCompetitionForContact:]
  -[ASCompetitionStore currentCompetitionListForFriendWithUUID:]
  -[ASCompetitionStore saveCompetitionLists:]
  -[ASCompetitionStore saveRemoteCompetitionList:]
  -[ASCompetitionStore loadCachedCompetitions]
  -[ASCompetitionStore _queue_saveCompetitionListsToCache:owner:]
  -[ASCompetitionStore _cachedCompetitionListForFriendWithUUID:type:owner:]
  -[ASCompetitionStore _saveCompetitionLists:owner:]
  -[ASCompetitionStore _saveCompetitionListToDatabase:owner:error:]
  -[ASCompetitionStore _removeCompetitionsWithFriendFromDatabase:type:error:]
  -[ASCompetitionStore _saveCompetitionsToDatabase:friendUUID:type:error:]
  -[ASCompetitionStore _queue_competitionListCacheForType:owner:]


ASPeriodicUpdateManager : NSObject /usr/lib/libSystem.B.dylib <ASActivitySharingManagerReadyObserver>
 @property  BOOL hasRegisteredForUpdates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASPeriodicUpdateManager removeProvider:]
  -[ASPeriodicUpdateManager init]
  -[ASPeriodicUpdateManager .cxx_destruct]
  -[ASPeriodicUpdateManager addProvider:]
  -[ASPeriodicUpdateManager activitySharingManagerReady:]
  -[ASPeriodicUpdateManager requestImmediateUpdateWithCompletion:]
  -[ASPeriodicUpdateManager initWithIsWatch:]
  -[ASPeriodicUpdateManager beginPeriodicUpdates]
  -[ASPeriodicUpdateManager endPeriodicUpdates]
  -[ASPeriodicUpdateManager _queue_performUpdateForActivity:withCompletion:]
  -[ASPeriodicUpdateManager hasRegisteredForUpdates]


ASNotificationSentinelKeys : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ASNotificationSentinelKeys awaitingSentinelKey]
  +[ASNotificationSentinelKeys sentinelKey]


ASCloudKitUtility : NSObject /usr/lib/libSystem.B.dylib
 @property  CKContainer *container

  // class methods
  +[ASCloudKitUtility shareURLForShare:]

  // instance methods
  -[ASCloudKitUtility init]
  -[ASCloudKitUtility .cxx_destruct]
  -[ASCloudKitUtility container]
  -[ASCloudKitUtility setContainer:]
  -[ASCloudKitUtility initWithContainer:]
  -[ASCloudKitUtility forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:activity:completion:]
  -[ASCloudKitUtility removeParticpantWithCloudKitAddress:fromShares:completion:]
  -[ASCloudKitUtility fetchShareWithShareRecordID:completion:]
  -[ASCloudKitUtility addParticipantWithCloudKitAddress:toShares:completion:]
  -[ASCloudKitUtility acceptSharesWithURLs:completion:]
  -[ASCloudKitUtility createShareAndAssociatedZoneWithShareRecordID:rootRecord:otherRecordsToSave:completion:]
  -[ASCloudKitUtility cancelAllExecutingFetches]
  -[ASCloudKitUtility fetchChangesInPrivateDatabaseWithServerChangeTokenCache:priority:activity:completion:]
  -[ASCloudKitUtility fetchChangesInSharedDatabaseWithServerChangeTokenCache:priority:activity:completion:]
  -[ASCloudKitUtility saveSubscriptions:andDeleteSubscriptionsWithIdentifiers:inDatabase:completion:]
  -[ASCloudKitUtility saveRecordsIntoPrivateDatabase:priority:activity:completion:]
  -[ASCloudKitUtility fetchShareParticipantForEmailAddress:completion:]
  -[ASCloudKitUtility _saveRecordsIntoPrivateDatabase:recordIDsToDelete:savePolicy:priority:activity:completion:]
  -[ASCloudKitUtility _createRecordZonesWithIDs:priority:completion:]
  -[ASCloudKitUtility _saveRecordsIntoPrivateDatabaseCreatingZones:recordIDsToDelete:savePolicy:priority:activity:completion:]
  -[ASCloudKitUtility _fetchShareWithShareRecordID:completion:]
  -[ASCloudKitUtility _acceptShareMetadatas:completion:]
  -[ASCloudKitUtility _fetchChangesInZones:inDatabase:serverChangeTokenCache:priority:allowRetry:completion:]
  -[ASCloudKitUtility _fetchChangesInDatabase:serverChangeTokenCache:priority:activity:completion:]


ASFriendInviteBulletinManager : NSObject /usr/lib/libSystem.B.dylib <ASBulletinPostingManagerDelegate, ASActivitySharingManagerReadyObserver>
 @property  <ASFriendInviteBulletinManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ASFriendInviteBulletinManager init]
  -[ASFriendInviteBulletinManager .cxx_destruct]
  -[ASFriendInviteBulletinManager setDelegate:]
  -[ASFriendInviteBulletinManager delegate]
  -[ASFriendInviteBulletinManager activitySharingManagerReady:]
  -[ASFriendInviteBulletinManager withdrawInviteNotificationsForContact:]
  -[ASFriendInviteBulletinManager showInviteAttemptNeedToUpgradeFrom:]
  -[ASFriendInviteBulletinManager showVersionTooLowForIncomingInviteFrom:]
  -[ASFriendInviteBulletinManager showInviteRequestFromContact:withPostingStyle:]
  -[ASFriendInviteBulletinManager showInviteAttemptNeedToSignInFrom:]
  -[ASFriendInviteBulletinManager showVersionTooLowForOutgoingInviteTo:]
  -[ASFriendInviteBulletinManager showVersionTooHighForOutgoingInviteTo:]
  -[ASFriendInviteBulletinManager showInviteAcceptResponseFrom:]
  -[ASFriendInviteBulletinManager showMaxNumberOfFriendsError]
  -[ASFriendInviteBulletinManager showErrorAcceptingInviteFrom:]
  -[ASFriendInviteBulletinManager showInviteAttemptNeedsSetupFromContact:]
  -[ASFriendInviteBulletinManager bulletinPostingManager:didReceiveNotificationResponse:]
  -[ASFriendInviteBulletinManager _inviteNotificationCategories]
  -[ASFriendInviteBulletinManager _isSharingSetup]
  -[ASFriendInviteBulletinManager _notificationRequestForInvitationFromContact:requestIdentifier:]
  -[ASFriendInviteBulletinManager _submitNotificationRequest:forContact:]
  -[ASFriendInviteBulletinManager _notificationRequestForInvitationFromContact:categoryIdentifier:requestIdentifier:title:formatString:]
  -[ASFriendInviteBulletinManager _showIncompatibleVersionForContact:title:formatString:]
  -[ASFriendInviteBulletinManager _userInfoForInvitationResponseFromContact:notificationContent:message:]
  -[ASFriendInviteBulletinManager _notificationRequestForInvitationFromContactUUID:categoryIdentifier:requestIdentifier:title:message:]
  -[ASFriendInviteBulletinManager _newPrepopulatedNotificationContentForNotificationContent:title:message:]
  -[ASFriendInviteBulletinManager _newPrepolulatedUserInfoForInvitationFromContactUUID:categoryIdentifier:notificationContent:title:message:]


_HKFitnessFriendActivitySnapshot(Filterable)
	// instance methods
	-[_HKFitnessFriendActivitySnapshot(Filterable) filter_friendUUID]
	-[_HKFitnessFriendActivitySnapshot(Filterable) filter_date]

_HKFitnessFriendWorkout(Filterable)
	// instance methods
	-[_HKFitnessFriendWorkout(Filterable) filter_friendUUID]
	-[_HKFitnessFriendWorkout(Filterable) filter_date]

_HKFitnessFriendAchievement(Filterable)
	// instance methods
	-[_HKFitnessFriendAchievement(Filterable) filter_friendUUID]
	-[_HKFitnessFriendAchievement(Filterable) filter_date]

01 00 0300 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0400 /System/Library/PrivateFrameworks/ActivityAchievements.framework/ActivityAchievements: ACHEarnedInstance 
01 00 0700 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASActivityDataNotification 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASActivityDataNotificationGroup 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASActivityDataNotificationRulesEngine 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASBulletinStore 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableActivityDataPreview 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableBulletin 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableCloudKitCompetition 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableCloudKitDateComponents 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableContact 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableDatabaseCompetition 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableDatabaseCompetitionListEntry 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableDatabaseCompetitionPreferredVictoryBadgeStyles 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableDatabaseCompetitionScore 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableFinalizeHandshake 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableInviteRequest 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableInviteResponse 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableShareLocations 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCodableWithdrawInviteRequest 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCompetition 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASCompetitionList 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASContact 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASDemoData 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASFriend 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASFriendListQuery 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASNotificationEvent 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASRelationship 
01 00 0500 /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing: ASUserNotificationResponse 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAcceptSharesOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabaseSubscription 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchDatabaseChangesOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchShareMetadataOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchShareParticipantsOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKReference 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShare 
01 00 0900 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentityLookupInfo 
01 00 0b00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0b00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDDaemonTransaction 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDDataEntity 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDEntityEncoder 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDFitnessFriendAchievementEntity 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDFitnessFriendActivitySnapshotEntity 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDFitnessFriendWorkoutEntity 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDJournalEntry 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDKeyValueDomain 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDQueryServer 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSQLiteComparisonPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSQLiteCompoundPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSQLitePredicate 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDSampleEntity 
01 00 0f00 /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon: HDWorkoutEntity 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKActivitySummary 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObjectType 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKQuantity 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSampleType 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSource 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKSourceRevision 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKUnit 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKWorkoutType 
01 00 1100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 1100 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1600 /System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore: STConversation 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationSound 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationCategory 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationIcon 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1800 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKFitnessFriendAchievement 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKFitnessFriendActivitySnapshot 
01 00 1000 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKFitnessFriendWorkout 
