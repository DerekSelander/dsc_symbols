|| __DATA.__objc_data _OBJC_CLASS_$_FrequentlyVisitedSitesController
|| __DATA.__objc_data _OBJC_METACLASS_$_FrequentlyVisitedSitesController
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassBookmarks
__ AppSupport: _CPFSSizeStrings
__ AppSupport: _CPSharedResourcesDirectory
__ AuthenticationServices: _OBJC_CLASS_$__ASCredentialProviderExtensionConfigurationViewController
__ CFNetwork: _CFHTTPCookieStorageDeleteAllCookies
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: __CFURLStorageSessionCopyCookieStorage
__ CFNetwork: __CFURLStorageSessionCreate
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ ContactsUI: _OBJC_CLASS_$_CNContactPickerViewController
__ ContactsUI: _OBJC_METACLASS_$_CNContactPickerViewController
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _kUTTypeFolder
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ DocumentManagerCore: _DOCDocumentSourceIdentifierLocal
__ DocumentManagerCore: _DOCLocalizedProviderOnlyDisplayName
__ DocumentManagerCore: _OBJC_CLASS_$_DOCDownloadSettings
__ FileProvider: _OBJC_CLASS_$_FPItemID
__ FileProvider: _OBJC_CLASS_$_FPItemManager
__ FileProvider: _OBJC_CLASS_$_FPProviderDomain
__ Foundation: _NSClassFromString
__ Foundation: _NSExtensionPointName
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSValue
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ IconServices: _kISImageDescriptorTableUIName
__ ManagedConfiguration: _MCEffectiveSettingsChangedNotification
__ ManagedConfiguration: _MCFeaturePasswordAutoFillAllowed
__ ManagedConfiguration: _MCFeatureSafariAcceptCookies
__ ManagedConfiguration: _MCFeatureSafariAutoFillAllowed
__ ManagedConfiguration: _MCFeatureSafariFraudWarningForced
__ ManagedConfiguration: _MCFeatureSafariJavaScriptAllowed
__ ManagedConfiguration: _MCFeatureSafariPopUpsAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileSafari: _OBJC_CLASS_$_SFAutomaticTabClosingUtilities
__ MobileSafari: _OBJC_CLASS_$_SFHighlightBannerTracker
__ MobileSafari: _OBJC_CLASS_$_SFIconGenerator
__ MobileSafari: _OBJC_CLASS_$_SFStoreBannerTracker
__ MobileSafari: _OBJC_CLASS_$_SFWebExtensionsController
__ MobileSafari: _OBJC_CLASS_$__SFSiteMetadataManager
__ MobileSafari: _SFAutomaticTabClosingIntervalSettingsTitle
__ MobileSafari: _SFDisableBackgroundColorInTabBarKey
__ MobileSafari: _SFEnableStandaloneTabBarKey
__ MobileSafari: _SFPreferredCapsuleLayoutStyleKey
__ MobileSafari: _SFStartPageCachedNumberOfTrackersKey
__ MobileSafari: _SFUnifiedBarShowRectangularTabsInSeparateBarKey
__ MobileSafari: _SFWebExtensionsEnabledSettingsKey
__ MobileSafari: _SFWebExtensionsSettingsIncludesContentBlockersSettingsKey
__ MobileSafari: __SFAutomaticallyArchiveReadingListItemsEnabledKey
__ MobileSafari: __SFDeviceHasHomeButton
__ MobileSafari: __SFDeviceIsPad
__ MobileSafari: __SFDownloadExpirationIntervalDefaultsKey
__ MobileSafari: __SFNanoBlockAllCookiesEnabledKey
__ MobileSafari: __SFSafariHighLevelDomainsAndPortsToUseOnlyAvailableIdentityWithoutPromptingSettingsKey
__ MobileSafari: __SFSafariIconImageCacheDirectoryPath
__ MobileSafari: __SFSafariTemporaryDirectoryPath
__ MobileSafari: __SFWarnAboutFraudulentWebsitesDefaultsKey
__ MobileSafari: __SFWebKitWebAuthenticationDefaultsKey
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ OnBoardingKit: _OBJC_CLASS_$_OBBundle
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ PlugInKit: _PKPlugInKitErrorDomain
__ Preferences: _OBJC_CLASS_$_DevicePINController
__ Preferences: _OBJC_CLASS_$_DevicePINPane
__ Preferences: _OBJC_CLASS_$_PSConfirmationSpecifier
__ Preferences: _OBJC_CLASS_$_PSEditableListController
__ Preferences: _OBJC_CLASS_$_PSEditableTableCell
__ Preferences: _OBJC_CLASS_$_PSFooterHyperlinkView
__ Preferences: _OBJC_CLASS_$_PSListController
__ Preferences: _OBJC_CLASS_$_PSListItemsController
__ Preferences: _OBJC_CLASS_$_PSRootController
__ Preferences: _OBJC_CLASS_$_PSSetupController
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Preferences: _OBJC_CLASS_$_PSSystemPolicyForApp
__ Preferences: _OBJC_CLASS_$_PSTableCell
__ Preferences: _OBJC_CLASS_$_PSTextFieldSpecifier
__ Preferences: _OBJC_CLASS_$_PSUsageSizeHeader
__ Preferences: _OBJC_IVAR_$_PSListController._specifiers
__ Preferences: _OBJC_IVAR_$_PSListController._table
__ Preferences: _OBJC_IVAR_$_PSSpecifier.setter
__ Preferences: _OBJC_METACLASS_$_PSEditableListController
__ Preferences: _OBJC_METACLASS_$_PSEditableTableCell
__ Preferences: _OBJC_METACLASS_$_PSListController
__ Preferences: _OBJC_METACLASS_$_PSTableCell
__ Preferences: _PSAccessoryKey
__ Preferences: _PSBundlePathKey
__ Preferences: _PSCellClassKey
__ Preferences: _PSConfirmationCancelKey
__ Preferences: _PSConfirmationDestructiveKey
__ Preferences: _PSConfirmationOKKey
__ Preferences: _PSConfirmationPromptKey
__ Preferences: _PSConfirmationTitleKey
__ Preferences: _PSContainerBundleIDKey
__ Preferences: _PSControlKey
__ Preferences: _PSDefaultValueKey
__ Preferences: _PSDefaultsKey
__ Preferences: _PSDeletionActionKey
__ Preferences: _PSEnabledKey
__ Preferences: _PSFooterCellClassGroupKey
__ Preferences: _PSFooterHyperlinkViewActionKey
__ Preferences: _PSFooterHyperlinkViewLinkRangeKey
__ Preferences: _PSFooterHyperlinkViewTargetKey
__ Preferences: _PSFooterHyperlinkViewTitleKey
__ Preferences: _PSFooterTextGroupKey
__ Preferences: _PSHeaderCellClassGroupKey
__ Preferences: _PSHeaderViewKey
__ Preferences: _PSHighLegibilityAlternateFont
__ Preferences: _PSIDKey
__ Preferences: _PSIconImageKey
__ Preferences: _PSIsN56
__ Preferences: _PSIsRadioGroupKey
__ Preferences: _PSKeyNameKey
__ Preferences: _PSNegateValueKey
__ Preferences: _PSPrioritizeValueTextDisplayKey
__ Preferences: _PSRadioGroupCheckedSpecifierKey
__ Preferences: _PSSetupCustomClassKey
__ Preferences: _PSTableCellKey
__ Preferences: _PSValueKey
__ SafariFoundation: _OBJC_CLASS_$_SFCredentialProviderExtensionHelperProxy
__ SafariFoundation: _OBJC_CLASS_$_SFCredentialProviderExtensionManager
__ SafariSafeBrowsing: _SSBSafeBrowsingEnabledDefaultsKey
__ SafariSafeBrowsing: _SSBSafeBrowsingEnabledStateDidChangeNotification
__ SafariServices: _OBJC_CLASS_$_SFContentBlockerManager
__ SafariServices: _OBJC_CLASS_$_SFFolderPickerList
__ SafariServices: _OBJC_CLASS_$__SFAccountManagerLockedView
__ SafariServices: _OBJC_CLASS_$__SFAccountManagerViewController
__ SafariServices: _OBJC_CLASS_$__SFAutomationController
__ SafariServices: _OBJC_CLASS_$__SFBrowserSavedState
__ SafariServices: _OBJC_CLASS_$__SFContentBlockersPreferenceManager
__ SafariServices: _OBJC_CLASS_$__SFCreditCardCaptureViewController
__ SafariServices: _OBJC_CLASS_$__SFDownloadManager
__ SafariServices: _OBJC_CLASS_$__SFFeatureAvailability
__ SafariServices: _OBJC_CLASS_$__SFFolderPickerTableViewCellLayoutManager
__ SafariServices: _OBJC_CLASS_$__SFGeolocationPermissionManager
__ SafariServices: _OBJC_CLASS_$__SFPageZoomPreferenceManager
__ SafariServices: _OBJC_CLASS_$__SFPerSitePreferenceDisplayInformation
__ SafariServices: _OBJC_CLASS_$__SFPerSitePreferenceNotifyingListController
__ SafariServices: _OBJC_CLASS_$__SFPerSitePreferencesUtilities
__ SafariServices: _OBJC_CLASS_$__SFRecentWebSearchesController
__ SafariServices: _OBJC_CLASS_$__SFRequestDesktopSitePreferenceManager
__ SafariServices: _OBJC_CLASS_$__SFRequestDesktopSiteQuirksManager
__ SafariServices: _OBJC_CLASS_$__SFSafariDataSharingController
__ SafariServices: _OBJC_CLASS_$__SFSearchEngineController
__ SafariServices: _OBJC_CLASS_$__SFSettingsAuthentication
__ SafariServices: _OBJC_CLASS_$__SFUserMediaPermissionController
__ SafariServices: _OBJC_METACLASS_$__SFPerSitePreferenceNotifyingListController
__ SafariServices: _SFAggregateDIconsInTabEnabledKey
__ SafariServices: _SFAggregateDSafeBrowsingDisabledKey
__ SafariServices: _SFAggregateDSiteSpecificSearchEnabledKey
__ SafariServices: _SFAggregateDSiteSpecificSearchProviderRemovedKey
__ SafariServices: _SFContentBlockerExtensionPointIdentifier
__ SafariServices: __SFIncrementAggdKey
__ SafariServices: __SFRequestDesktopSitePreferenceDidChangeDistributedNotification
__ SafariServices: __SFSetAggdKey
__ Security: _OBJC_CLASS_$_OTClique
__ Security: _OBJC_CLASS_$_OTConfigurationContext
__ Security: _OTDefaultContext
__ Security: _SecTrustFlushResponseCache
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSApplicationService
__ UIKit: _DOCExtensionIcon
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentPickerViewController
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMenuItem
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPickerView
__ UIKit: _OBJC_CLASS_$_UIPopoverController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISearchController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWebGeolocationPolicyDecider
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIMenuControllerWillHideMenuNotification
__ UIKit: _UISystemFontBoldForSize
__ UIKit: _UISystemRootDirectory
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: __UIApplicationLoadWebKit
__ WebBookmarks: _OBJC_CLASS_$_WBCollectionConfiguration
__ WebBookmarks: _OBJC_CLASS_$_WBFeatureManager
__ WebBookmarks: _OBJC_CLASS_$_WBSettingsTask
__ WebBookmarks: _OBJC_CLASS_$_WBSettingsTaskHandler
__ WebBookmarks: _OBJC_CLASS_$_WBTabCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmark
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkWebFilterSettings
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarksSettingsGateway
__ WebBookmarks: _OBJC_METACLASS_$_WBSettingsTaskHandler
__ WebBookmarks: _WebBookmarksChangedFolderIDKey
__ WebBookmarks: _WebBookmarksDidReloadNotification
__ WebBookmarks: _WebBookmarksFolderContentsDidChangeNotification
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$__WKWebAuthenticationPanel
__ WebUI: _OBJC_CLASS_$_WBSAllowedLegacyTLSHostManager
__ WebUI: _OBJC_CLASS_$_WBSAnalyticsLogger
__ WebUI: _OBJC_CLASS_$_WBSAppLink
__ WebUI: _OBJC_CLASS_$_WBSAutoFillQuirksManager
__ WebUI: _OBJC_CLASS_$_WBSAutomaticReaderActivationManager
__ WebUI: _OBJC_CLASS_$_WBSContentBlockerStatisticsSQLiteStore
__ WebUI: _OBJC_CLASS_$_WBSCreditCardData
__ WebUI: _OBJC_CLASS_$_WBSCreditCardFormatter
__ WebUI: _OBJC_CLASS_$_WBSDigitalHealthManager
__ WebUI: _OBJC_CLASS_$_WBSExtensionsController
__ WebUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSiteCandidate
__ WebUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
__ WebUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSitesController
__ WebUI: _OBJC_CLASS_$_WBSImageUtilities
__ WebUI: _OBJC_CLASS_$_WBSParsecSubscriptionManager
__ WebUI: _OBJC_CLASS_$_WBSPasswordWarningStore
__ WebUI: _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
__ WebUI: _OBJC_CLASS_$_WBSPrivacyProxyAvailabilityManager
__ WebUI: _OBJC_CLASS_$_WBSQuickWebsiteSearchController
__ WebUI: _OBJC_CLASS_$_WBSSharedFeatureAvailability
__ WebUI: _OBJC_CLASS_$_WBSWebExtensionMatchPattern
__ WebUI: _OBJC_CLASS_$_WBSWebExtensionNewTabOverridePreferencesManager
__ WebUI: _OBJC_CLASS_$_WBSWebExtensionsController
__ WebUI: _OBJC_CLASS_$_WBUCreditCardDataController
__ WebUI: _OBJC_CLASS_$_WBUFeatureManager
__ WebUI: _OBJC_CLASS_$_WBUFormDataController
__ WebUI: _OBJC_IVAR_$_WBSFrequentlyVisitedSitesController._bannedURLStore
__ WebUI: _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
__ WebUI: _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesController
__ WebUI: _OBJC_METACLASS_$_WBUFeatureManager
__ WebUI: _WBSCreditCardTypeFromNumber
__ WebUI: _WBSCreditCardTypeFromNumberAllowingPartialMatch
__ WebUI: _WBSExtensionEnabledStateDidChangeNotification
__ WebUI: _WBSExtensionWasRemovedNotification
__ WebUI: _WBSExtensionsWereDisabledNotification
__ WebUI: _WBSMakeAccessibilityIdentifier
__ WebUI: _WBSNormalizedCreditCardNumber
__ WebUI: _WBSPasswordManagerURLDidAuthenticateKey
__ WebUI: _WBSPasswordManagerURLTrue
__ WebUI: _WBSPerSitePreferenceNameAppInfoOverlay
__ WebUI: _WBSPrivacyProxyChangeNotification
__ WebUI: _WBSQuickWebsiteSearchControllerDidFinishLoadingNotification
__ WebUI: _WBSRemoteAutoFillQuirksLastUpdateTimePreferenceKey
__ WebUI: _WBSWebExtensionErrorDomain
__ WebUI: _WBSWebExtensionPermissionDidChangeNotification
__ WebUI: _WBSWebExtensionURLScheme
__ WebUI: _kMobileSafariChangedExtensionSettingsNotification
__ WebUI: _safariMobileApplicationBundleIdentifier
__ WebUI: _webuiCookieAcceptPolicyPreferencesKey
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kill
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _sysctl
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SafariMediaCapturePerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariMediaCapturePerSitePreferenceSettingsController .cxx_destruct]
  -[SafariMediaCapturePerSitePreferenceSettingsController preference]
  -[SafariMediaCapturePerSitePreferenceSettingsController perSitePreferenceValueDidChange]
  -[SafariMediaCapturePerSitePreferenceSettingsController notifyPerSitePreferenceValueDidChange]
  -[SafariMediaCapturePerSitePreferenceSettingsController preferenceManager]


SafariSavedPasswordsController : SafariAutoFillListController <_SFAccountManagerViewControllerDelegate, PSListControllerURLHandler, _SFSettingsAuthenticationRequiring>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *authenticationPrompt
 @property  BOOL showsAuthenticationPromptAsTitle
 @property  BOOL hasBeenAuthenticated

  // instance methods
  -[SafariSavedPasswordsController contentScrollView]
  -[SafariSavedPasswordsController .cxx_destruct]
  -[SafariSavedPasswordsController viewDidLoad]
  -[SafariSavedPasswordsController viewDidAppear:]
  -[SafariSavedPasswordsController initWithNibName:bundle:]
  -[SafariSavedPasswordsController handleURL:withCompletion:]
  -[SafariSavedPasswordsController canBeShownFromSuspendedState]
  -[SafariSavedPasswordsController viewWillDisappear:]
  -[SafariSavedPasswordsController viewWillAppear:]
  -[SafariSavedPasswordsController dealloc]
  -[SafariSavedPasswordsController _applicationDidBecomeActive:]
  -[SafariSavedPasswordsController _applicationDidResignActive:]
  -[SafariSavedPasswordsController handleResourceDictionaryWhenAlreadyPresented:]
  -[SafariSavedPasswordsController _applicationDidEnterBackground:]
  -[SafariSavedPasswordsController _applicationDidEnterForeground:]
  -[SafariSavedPasswordsController hideContentUnavailableViewForEditableSavedAccountTableViewController:]
  -[SafariSavedPasswordsController editableSavedAccountTableViewController:showContentUnavailableViewForSearchQuery:]
  -[SafariSavedPasswordsController editableSavedAccountTableViewControllerShouldShowAutoFillItem:]
  -[SafariSavedPasswordsController editableSavedAccountTableViewControllerShouldShowSecurityRecommendationsItem:]
  -[SafariSavedPasswordsController handleAutoFillDrillInForEditableSavedAccountTableViewController:]
  -[SafariSavedPasswordsController setHasBeenAuthenticated:]
  -[SafariSavedPasswordsController hasBeenAuthenticated]
  -[SafariSavedPasswordsController showsAuthenticationPromptAsTitle]
  -[SafariSavedPasswordsController authenticationPrompt]
  -[SafariSavedPasswordsController _setUpAutoFillQuirksManager]
  -[SafariSavedPasswordsController _authenticateSoon]
  -[SafariSavedPasswordsController _tearDownLockView]
  -[SafariSavedPasswordsController _processInitialResourceDictionary]


SafariSavedCreditCardEditableTableCell : SafariSettingsEditableTableCell
  // instance methods
  -[SafariSavedCreditCardEditableTableCell textField:shouldChangeCharactersInRange:replacementString:]


SafariSavedCreditCardExpirationDateTableCell : PSTableCell <UIPickerViewDataSource, UIPickerViewDelegate, UIPopoverControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariSavedCreditCardExpirationDateTableCell .cxx_destruct]
  -[SafariSavedCreditCardExpirationDateTableCell canBecomeFirstResponder]
  -[SafariSavedCreditCardExpirationDateTableCell becomeFirstResponder]
  -[SafariSavedCreditCardExpirationDateTableCell popoverControllerDidDismissPopover:]
  -[SafariSavedCreditCardExpirationDateTableCell pickerView:attributedTitleForRow:forComponent:]
  -[SafariSavedCreditCardExpirationDateTableCell setValue:]
  -[SafariSavedCreditCardExpirationDateTableCell numberOfComponentsInPickerView:]
  -[SafariSavedCreditCardExpirationDateTableCell pickerView:numberOfRowsInComponent:]
  -[SafariSavedCreditCardExpirationDateTableCell pickerView:widthForComponent:]
  -[SafariSavedCreditCardExpirationDateTableCell refreshCellContentsWithSpecifier:]
  -[SafariSavedCreditCardExpirationDateTableCell pickerView:didSelectRow:inComponent:]
  -[SafariSavedCreditCardExpirationDateTableCell _pickerView]
  -[SafariSavedCreditCardExpirationDateTableCell dealloc]
  -[SafariSavedCreditCardExpirationDateTableCell inputView]
  -[SafariSavedCreditCardExpirationDateTableCell _updateDetailTextLabel]
  -[SafariSavedCreditCardExpirationDateTableCell _pickerTitleFont]
  -[SafariSavedCreditCardExpirationDateTableCell _monthNumberFormatter]


SafariSavedCreditCardDetailController : PSListController <_SFCreditCardCaptureViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariSavedCreditCardDetailController specifiers]
  -[SafariSavedCreditCardDetailController .cxx_destruct]
  -[SafariSavedCreditCardDetailController setSpecifier:]
  -[SafariSavedCreditCardDetailController tableView:didSelectRowAtIndexPath:]
  -[SafariSavedCreditCardDetailController tableView:cellForRowAtIndexPath:]
  -[SafariSavedCreditCardDetailController canBecomeFirstResponder]
  -[SafariSavedCreditCardDetailController _edit:]
  -[SafariSavedCreditCardDetailController init]
  -[SafariSavedCreditCardDetailController tableView:shouldShowMenuForRowAtIndexPath:]
  -[SafariSavedCreditCardDetailController shouldSelectResponderOnAppearance]
  -[SafariSavedCreditCardDetailController viewWillDisappear:]
  -[SafariSavedCreditCardDetailController canPerformAction:withSender:]
  -[SafariSavedCreditCardDetailController viewWillAppear:]
  -[SafariSavedCreditCardDetailController dealloc]
  -[SafariSavedCreditCardDetailController _cancelEditing:]
  -[SafariSavedCreditCardDetailController _willHideUIMenuController:]
  -[SafariSavedCreditCardDetailController creditCardCaptureViewControllerDidCancel:]
  -[SafariSavedCreditCardDetailController creditCardCaptureViewController:didCaptureCreditCard:]
  -[SafariSavedCreditCardDetailController _specifierWithName:]
  -[SafariSavedCreditCardDetailController _updateDoneButtonForCardNumberString:]
  -[SafariSavedCreditCardDetailController _setValue:forSpecifier:]
  -[SafariSavedCreditCardDetailController _valueOfSpecifier:]
  -[SafariSavedCreditCardDetailController _updateSpecifiersFromCreditCardData:]
  -[SafariSavedCreditCardDetailController _setEditing:]
  -[SafariSavedCreditCardDetailController _updateSpecifiers]
  -[SafariSavedCreditCardDetailController _useCameraSpecifiers]
  -[SafariSavedCreditCardDetailController _updateRightBarButtonItem]
  -[SafariSavedCreditCardDetailController _deleteCreditCard:]
  -[SafariSavedCreditCardDetailController _useCamera:]
  -[SafariSavedCreditCardDetailController _endEditing:]
  -[SafariSavedCreditCardDetailController _deleteButtonSpecifiers]
  -[SafariSavedCreditCardDetailController _removeCreditCardDataAndPopViewController]
  -[SafariSavedCreditCardDetailController _isActionACopyMethod:]
  -[SafariSavedCreditCardDetailController _isSpecifierACreditCardInfoField:]
  -[SafariSavedCreditCardDetailController _isThereDefaultCreditCardInfoAtIndexPath:]
  -[SafariSavedCreditCardDetailController safari_copyCreditCardholderName:]
  -[SafariSavedCreditCardDetailController safari_copyCreditCardNumber:]
  -[SafariSavedCreditCardDetailController safari_copyCreditCardExpirationDate:]
  -[SafariSavedCreditCardDetailController safari_copyCreditCardName:]


SafariCNContactPickerViewController : CNContactPickerViewController
  // instance methods
  -[SafariCNContactPickerViewController supportedInterfaceOrientations]


SafariAutoFillSettingsController : SafariSettingsListController <CNContactPickerDelegate, DevicePINControllerDelegate, UIPopoverControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariAutoFillSettingsController willRotateToInterfaceOrientation:duration:]
  -[SafariAutoFillSettingsController specifiers]
  -[SafariAutoFillSettingsController didRotateFromInterfaceOrientation:]
  -[SafariAutoFillSettingsController .cxx_destruct]
  -[SafariAutoFillSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariAutoFillSettingsController popoverControllerDidDismissPopover:]
  -[SafariAutoFillSettingsController init]
  -[SafariAutoFillSettingsController willResignActive]
  -[SafariAutoFillSettingsController didCancelEnteringPIN]
  -[SafariAutoFillSettingsController dealloc]
  -[SafariAutoFillSettingsController myInfo:]
  -[SafariAutoFillSettingsController didAcceptSetPIN]
  -[SafariAutoFillSettingsController didAcceptEnteredPIN]
  -[SafariAutoFillSettingsController _contactStoreChanged:]
  -[SafariAutoFillSettingsController contactPicker:didSelectContact:]
  -[SafariAutoFillSettingsController contactPickerDidCancel:]
  -[SafariAutoFillSettingsController updateUseContactInfoSpecifiers]
  -[SafariAutoFillSettingsController _formDataController]
  -[SafariAutoFillSettingsController meCardName]
  -[SafariAutoFillSettingsController _enablingAutoFillWithoutPasscodePromptEndedWithResult:]
  -[SafariAutoFillSettingsController _showPasscodeSetupSheetWithCompletionHandler:]
  -[SafariAutoFillSettingsController _promptForEnablingAutoFillWithoutPasscodeWithTitle:message:allowAnyway:completionHandler:]
  -[SafariAutoFillSettingsController _setShouldAutoFill:specifier:message:setter:]
  -[SafariAutoFillSettingsController _setupMeCardPicker]
  -[SafariAutoFillSettingsController showMeCardPicker]
  -[SafariAutoFillSettingsController presentPopoverContactListInTable:index:specifier:]
  -[SafariAutoFillSettingsController _dismissMeCardPicker]
  -[SafariAutoFillSettingsController useContactInfo:]
  -[SafariAutoFillSettingsController shouldAutoFillCreditCards:]
  -[SafariAutoFillSettingsController setShouldAutoFillCreditCards:specifier:]
  -[SafariAutoFillSettingsController setUseContactInfo:forSpecifier:]


SafariCreditCardTableCell : PSTableCell
  // class methods
  +[SafariCreditCardTableCell cellStyle]

  // instance methods
  -[SafariCreditCardTableCell layoutSubviews]
  -[SafariCreditCardTableCell refreshCellContentsWithSpecifier:]


SafariSavedCreditCardsController : SafariAutoFillListController <_SFSettingsAuthenticationRequiring>
 @property  NSString *authenticationPrompt
 @property  BOOL showsAuthenticationPromptAsTitle
 @property  BOOL hasBeenAuthenticated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariSavedCreditCardsController specifiers]
  -[SafariSavedCreditCardsController setEditing:animated:]
  -[SafariSavedCreditCardsController _deleteBarButtonItem]
  -[SafariSavedCreditCardsController .cxx_destruct]
  -[SafariSavedCreditCardsController tableView:didDeselectRowAtIndexPath:]
  -[SafariSavedCreditCardsController tableView:didSelectRowAtIndexPath:]
  -[SafariSavedCreditCardsController _addItem:]
  -[SafariSavedCreditCardsController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SafariSavedCreditCardsController canBeShownFromSuspendedState]
  -[SafariSavedCreditCardsController tableView:willBeginEditingRowAtIndexPath:]
  -[SafariSavedCreditCardsController viewWillAppear:]
  -[SafariSavedCreditCardsController _updateEditButton]
  -[SafariSavedCreditCardsController tableView:editingStyleForRowAtIndexPath:]
  -[SafariSavedCreditCardsController tableView:didEndEditingRowAtIndexPath:]
  -[SafariSavedCreditCardsController _cancelBarButtonItem]
  -[SafariSavedCreditCardsController _editBarButtonItem]
  -[SafariSavedCreditCardsController _cancelEditing]
  -[SafariSavedCreditCardsController _updateDeleteButton]
  -[SafariSavedCreditCardsController setHasBeenAuthenticated:]
  -[SafariSavedCreditCardsController hasBeenAuthenticated]
  -[SafariSavedCreditCardsController showsAuthenticationPromptAsTitle]
  -[SafariSavedCreditCardsController authenticationPrompt]
  -[SafariSavedCreditCardsController _deleteButtonTapped]
  -[SafariSavedCreditCardsController _showEditBarButtonItemAnimated:]
  -[SafariSavedCreditCardsController _specifiersForVirtualCardSection]
  -[SafariSavedCreditCardsController titleForAddItem]
  -[SafariSavedCreditCardsController controllerClassForAddItem]
  -[SafariSavedCreditCardsController _specifiersForAddItem]
  -[SafariSavedCreditCardsController _createVirtualCardSectionSpecifiers]
  -[SafariSavedCreditCardsController _specifiersToAddOrRemoveWhenTogglingEditButton]
  -[SafariSavedCreditCardsController _toggleEditing]
  -[SafariSavedCreditCardsController _autoFillItemCount]
  -[SafariSavedCreditCardsController deleteConfirmationTitle]
  -[SafariSavedCreditCardsController deleteConfirmationMessage]
  -[SafariSavedCreditCardsController _deleteSelectedItems]
  -[SafariSavedCreditCardsController deleteItemsForSpecifiers:]
  -[SafariSavedCreditCardsController isSpecifierForAutoFillItem:]
  -[SafariSavedCreditCardsController _viewVirtualCardInWallet:]


SafariMicrophonePerSitePreferenceSettingsController : SafariMediaCapturePerSitePreferenceSettingsController
  // instance methods
  -[SafariMicrophonePerSitePreferenceSettingsController preference]


SafariReaderPerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariReaderPerSitePreferenceSettingsController .cxx_destruct]
  -[SafariReaderPerSitePreferenceSettingsController preference]
  -[SafariReaderPerSitePreferenceSettingsController preferenceManager]


SafariFavoritesFolderPickerContoller : SafariSettingsListController
  // instance methods
  -[SafariFavoritesFolderPickerContoller specifiers]
  -[SafariFavoritesFolderPickerContoller tableView:willDisplayCell:forRowAtIndexPath:]
  -[SafariFavoritesFolderPickerContoller .cxx_destruct]
  -[SafariFavoritesFolderPickerContoller tableView:didSelectRowAtIndexPath:]
  -[SafariFavoritesFolderPickerContoller init]
  -[SafariFavoritesFolderPickerContoller willBecomeActive]
  -[SafariFavoritesFolderPickerContoller dealloc]
  -[SafariFavoritesFolderPickerContoller _webBookmarksDidReload:]
  -[SafariFavoritesFolderPickerContoller _showBookmarksBeingSyncedAlert]


SafariPageZoomPerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariPageZoomPerSitePreferenceSettingsController preference]
  -[SafariPageZoomPerSitePreferenceSettingsController preferenceManager]


SafariVisualPickerSettingsTableCell : PSTableCell
  // class methods
  +[SafariVisualPickerSettingsTableCell visualPickerSpecifierWithLeadingButton:trailingButton:preferenceDomain:preferenceKey:]

  // instance methods
  -[SafariVisualPickerSettingsTableCell .cxx_destruct]
  -[SafariVisualPickerSettingsTableCell buttonTapped:]
  -[SafariVisualPickerSettingsTableCell initWithStyle:reuseIdentifier:specifier:]


IconSettingsButton : UIButton
 @property  NSNumber *preferenceValue

  // instance methods
  -[IconSettingsButton .cxx_destruct]
  -[IconSettingsButton setSelected:]
  -[IconSettingsButton setPreferenceValue:]
  -[IconSettingsButton preferenceValue]
  -[IconSettingsButton initWithImage:title:preferenceValue:]


SafariSettingsVisualPickerButtonConfiguration : NSObject
 @property  NSDictionary *_dictionaryRepresentation
 @property  NSString *imageName
 @property  NSNumber *preferenceValue
 @property  NSString *title

  // instance methods
  -[SafariSettingsVisualPickerButtonConfiguration setTitle:]
  -[SafariSettingsVisualPickerButtonConfiguration _dictionaryRepresentation]
  -[SafariSettingsVisualPickerButtonConfiguration .cxx_destruct]
  -[SafariSettingsVisualPickerButtonConfiguration imageName]
  -[SafariSettingsVisualPickerButtonConfiguration title]
  -[SafariSettingsVisualPickerButtonConfiguration setImageName:]
  -[SafariSettingsVisualPickerButtonConfiguration setPreferenceValue:]
  -[SafariSettingsVisualPickerButtonConfiguration preferenceValue]
  -[SafariSettingsVisualPickerButtonConfiguration initWithTitle:imageName:preferenceValue:]


SafariRequestDesktopSitePerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariRequestDesktopSitePerSitePreferenceSettingsController .cxx_destruct]
  -[SafariRequestDesktopSitePerSitePreferenceSettingsController preference]
  -[SafariRequestDesktopSitePerSitePreferenceSettingsController notifyPerSitePreferenceValueDidChange]
  -[SafariRequestDesktopSitePerSitePreferenceSettingsController preferenceManager]


SafariDownloadsTableCell : PSTableCell
  // class methods
  +[SafariDownloadsTableCell cellStyle]

  // instance methods
  -[SafariDownloadsTableCell refreshCellContentsWithSpecifier:]


SafariDownloadsSettingsController : SafariSettingsListController <UIDocumentPickerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariDownloadsSettingsController specifiers]
  -[SafariDownloadsSettingsController .cxx_destruct]
  -[SafariDownloadsSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariDownloadsSettingsController tableView:cellForRowAtIndexPath:]
  -[SafariDownloadsSettingsController documentPicker:didPickDocumentsAtURLs:]
  -[SafariDownloadsSettingsController _itemManager]
  -[SafariDownloadsSettingsController _downloadSettings]
  -[SafariDownloadsSettingsController _updateSpecifiersWithProviderDomains:]
  -[SafariDownloadsSettingsController _updateSelectedFolder]
  -[SafariDownloadsSettingsController _updateFooterWithProviderDomain:]
  -[SafariDownloadsSettingsController _showFolderPicker]
  -[SafariDownloadsSettingsController _setDownloadsLocationForProviderDomain:]
  -[SafariDownloadsSettingsController _setDefaultDownloadsLocationItem:]


FrequentlyVisitedSitesController : WBSFrequentlyVisitedSitesController
  // class methods
  +[FrequentlyVisitedSitesController sharedController]

  // instance methods
  -[FrequentlyVisitedSitesController initWithBookmarkCollection:]
  -[FrequentlyVisitedSitesController .cxx_destruct]
  -[FrequentlyVisitedSitesController dealloc]
  -[FrequentlyVisitedSitesController _canonicalizedFavoritesURLStringSet]
  -[FrequentlyVisitedSitesController _saveFrequentlyVisitedSites:]
  -[FrequentlyVisitedSitesController frequentlyVisitedSites]
  -[FrequentlyVisitedSitesController clearFrequentlyVisitedSites]
  -[FrequentlyVisitedSitesController _receivedBookmarksFolderContentChangedNotification:]
  -[FrequentlyVisitedSitesController _clearFrequentlyVisitedSitesInBookmarksDB]
  -[FrequentlyVisitedSitesController _updateCachedFrequentlyVisitedSitesWithCandidates:]
  -[FrequentlyVisitedSitesController promoteFrequentlyVisitedSite:toFavoriteAtIndex:]
  -[FrequentlyVisitedSitesController banFrequentlyVisitedSite:inMemoryBookmarkChangeTrackingAvailable:]
  -[FrequentlyVisitedSitesController saveFrequentlyVisitedSitesToBookmarksDBWithCompletion:]
  -[FrequentlyVisitedSitesController _existingIconsDataFromBookmarksDB]


SafariPerSitePreferenceSettingsController : _SFPerSitePreferenceNotifyingListController
 @property  <WBSPerSitePreferenceManager> *preferenceManager
 @property  WBSPerSitePreference *preference

  // instance methods
  -[SafariPerSitePreferenceSettingsController tableView:canEditRowAtIndexPath:]
  -[SafariPerSitePreferenceSettingsController setEditing:animated:]
  -[SafariPerSitePreferenceSettingsController _deleteBarButtonItem]
  -[SafariPerSitePreferenceSettingsController .cxx_destruct]
  -[SafariPerSitePreferenceSettingsController tableView:didDeselectRowAtIndexPath:]
  -[SafariPerSitePreferenceSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariPerSitePreferenceSettingsController viewDidLoad]
  -[SafariPerSitePreferenceSettingsController preference]
  -[SafariPerSitePreferenceSettingsController tableView:cellForRowAtIndexPath:]
  -[SafariPerSitePreferenceSettingsController loadSpecifiersFromPlistName:target:bundle:]
  -[SafariPerSitePreferenceSettingsController _cancelBarButtonItem]
  -[SafariPerSitePreferenceSettingsController reloadSpecifiers]
  -[SafariPerSitePreferenceSettingsController _cancelEditing:]
  -[SafariPerSitePreferenceSettingsController perSitePreferenceValueDidChange]
  -[SafariPerSitePreferenceSettingsController preferenceManager]
  -[SafariPerSitePreferenceSettingsController _setUpSpecifiersCachesIfNeeded]
  -[SafariPerSitePreferenceSettingsController _specifiersForDomains:]
  -[SafariPerSitePreferenceSettingsController _editableSpecifiersForDomains:]
  -[SafariPerSitePreferenceSettingsController _loadDomains]
  -[SafariPerSitePreferenceSettingsController _updateDeleteButtonEnabled]
  -[SafariPerSitePreferenceSettingsController _setPreferenceValue:forSpecifier:]
  -[SafariPerSitePreferenceSettingsController _preferenceValueForSpecifier:]
  -[SafariPerSitePreferenceSettingsController _preferenceSpecifierNamed:set:get:]
  -[SafariPerSitePreferenceSettingsController _displayInformation]
  -[SafariPerSitePreferenceSettingsController _preferenceValues]
  -[SafariPerSitePreferenceSettingsController _didRetrieveValue:forSpecifier:]
  -[SafariPerSitePreferenceSettingsController _fallbackPreferenceValue]
  -[SafariPerSitePreferenceSettingsController _clearSettingsForDomains:]
  -[SafariPerSitePreferenceSettingsController _setUpConstantSpecifiers]
  -[SafariPerSitePreferenceSettingsController _setDefaultPreferenceValue:forSpecifier:]
  -[SafariPerSitePreferenceSettingsController _getDefaultPreferenceValueForSpecifier:]
  -[SafariPerSitePreferenceSettingsController _clearAllSettings:]
  -[SafariPerSitePreferenceSettingsController _clearSelectedDomains:]
  -[SafariPerSitePreferenceSettingsController _defaultPreferenceValueForMultipleOptionSpecifier:]
  -[SafariPerSitePreferenceSettingsController _otherWebsitesSpecifier]
  -[SafariPerSitePreferenceSettingsController _clearAllSettingsSpecifier]


SafariQuickWebsiteSearchSettingsController : SafariSettingsListController
  // instance methods
  -[SafariQuickWebsiteSearchSettingsController specifiers]
  -[SafariQuickWebsiteSearchSettingsController tableView:canEditRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController setEditing:animated:]
  -[SafariQuickWebsiteSearchSettingsController _deleteBarButtonItem]
  -[SafariQuickWebsiteSearchSettingsController .cxx_destruct]
  -[SafariQuickWebsiteSearchSettingsController tableView:willSelectRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController tableView:didDeselectRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController initWithNibName:bundle:]
  -[SafariQuickWebsiteSearchSettingsController tableView:willBeginEditingRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController willBecomeActive]
  -[SafariQuickWebsiteSearchSettingsController viewWillAppear:]
  -[SafariQuickWebsiteSearchSettingsController _updateEditButton]
  -[SafariQuickWebsiteSearchSettingsController dealloc]
  -[SafariQuickWebsiteSearchSettingsController tableView:didEndEditingRowAtIndexPath:]
  -[SafariQuickWebsiteSearchSettingsController _cancelBarButtonItem]
  -[SafariQuickWebsiteSearchSettingsController _cancelEditing:]
  -[SafariQuickWebsiteSearchSettingsController _updateDeleteButton]
  -[SafariQuickWebsiteSearchSettingsController _quickWebsiteSearchControllerDidFinishLoading:]
  -[SafariQuickWebsiteSearchSettingsController _setUseSiteSpecificSearch:specifier:]
  -[SafariQuickWebsiteSearchSettingsController _hasSearchProviders]
  -[SafariQuickWebsiteSearchSettingsController _deleteItemsForSpecifiers:]
  -[SafariQuickWebsiteSearchSettingsController _deleteSelectedItems:]


SafariDeveloperSettingsController : SafariSettingsListController
  // instance methods
  -[SafariDeveloperSettingsController specifiers]
  -[SafariDeveloperSettingsController tableView:cellForRowAtIndexPath:]
  -[SafariDeveloperSettingsController setRemoteInspectorEnabled:specifier:]
  -[SafariDeveloperSettingsController remoteInspectorEnabled:]
  -[SafariDeveloperSettingsController setRemoteAutomationEnabled:specifier:]
  -[SafariDeveloperSettingsController _remoteAutomationEnabled:]
  -[SafariDeveloperSettingsController _setRemoteInspectorEnabled:]
  -[SafariDeveloperSettingsController _setRemoteAutomationEnabled:]
  -[SafariDeveloperSettingsController _automationController]
  -[SafariDeveloperSettingsController isJavaScriptRestricted:]
  -[SafariDeveloperSettingsController isJavaScriptEnabled:]


SafariSettingsTaskHandler : WBSettingsTaskHandler
  // class methods
  +[SafariSettingsTaskHandler sharedHandler]


SafariSettingsEditableTableCell : PSEditableTableCell
  // instance methods
  -[SafariSettingsEditableTableCell copy:]
  -[SafariSettingsEditableTableCell refreshCellContentsWithSpecifier:]
  -[SafariSettingsEditableTableCell canPerformAction:withSender:]
  -[SafariSettingsEditableTableCell dealloc]
  -[SafariSettingsEditableTableCell initWithStyle:reuseIdentifier:specifier:]
  -[SafariSettingsEditableTableCell _textFieldChanged:]
  -[SafariSettingsEditableTableCell safari_sharePassword:]


SafariHideInternetAddressSettingsController : SafariSettingsListController
  // class methods
  +[SafariHideInternetAddressSettingsController _hideInternetAddressOptionList]
  +[SafariHideInternetAddressSettingsController _hideInternetAddressIndexForState:]
  +[SafariHideInternetAddressSettingsController _hideInternetAddressStateForIndex:]

  // instance methods
  -[SafariHideInternetAddressSettingsController specifiers]
  -[SafariHideInternetAddressSettingsController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SafariHideInternetAddressSettingsController .cxx_destruct]
  -[SafariHideInternetAddressSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariHideInternetAddressSettingsController learnMore]


SafariSettingsController : SafariSettingsListController <MCProfileConnectionObserver, WBSExtensionsControllerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SafariSettingsController privacyProxyAvailabilityManager]

  // instance methods
  -[SafariSettingsController profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[SafariSettingsController _bookmarksDidReload:]
  -[SafariSettingsController specifiers]
  -[SafariSettingsController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SafariSettingsController suspend]
  -[SafariSettingsController .cxx_destruct]
  -[SafariSettingsController tableView:cellForRowAtIndexPath:]
  -[SafariSettingsController init]
  -[SafariSettingsController profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[SafariSettingsController willBecomeActive]
  -[SafariSettingsController viewWillAppear:]
  -[SafariSettingsController dealloc]
  -[SafariSettingsController viewDidDisappear:]
  -[SafariSettingsController extensionsControllerExtensionListDidChange:]
  -[SafariSettingsController _hideInternetAddressChanged:]
  -[SafariSettingsController _mobileSafariChangedExtensionSettings]
  -[SafariSettingsController _clearNewTabOverrideIfNecessaryOnChange:]
  -[SafariSettingsController _specifiersForPerSitePreferences]
  -[SafariSettingsController isTabBarAvailable:]
  -[SafariSettingsController _specifierForEnablingStandaloneTabBar]
  -[SafariSettingsController _specifierForSearchFieldPosition]
  -[SafariSettingsController _specifierForEnablingBackgroundColorInTabBar]
  -[SafariSettingsController _tabOverrideTopLevelDetailString]
  -[SafariSettingsController _specifierForClosingTabsAutomatically]
  -[SafariSettingsController _downloadsFolderTitle]
  -[SafariSettingsController _updateDownloadsFolderTitle]
  -[SafariSettingsController _hideInternetAddressDetailText]
  -[SafariSettingsController setSearchEngineInSpecifiers:]
  -[SafariSettingsController _synchronizeNanoUserDefaults]
  -[SafariSettingsController _enabledContentBlockerCount]
  -[SafariSettingsController _setValueForClosingTabsAutomatically:]
  -[SafariSettingsController _valueForClosingTabsAutomatically]
  -[SafariSettingsController _isCloudHistoryEnabled]
  -[SafariSettingsController showCloseTabsConfirmation]
  -[SafariSettingsController _areTabGroupsInUse]
  -[SafariSettingsController safariClearHistoryAndDataAndTabs]
  -[SafariSettingsController safariClearHistoryAndData]
  -[SafariSettingsController safariClearHistoryAndDataAndTabs:]
  -[SafariSettingsController _setSafariAcceptCookiesForPolicy:]
  -[SafariSettingsController setCookieStoragePolicy:andNotifySpecifierWithID:]
  -[SafariSettingsController _updateBlockAllNewWebsiteDataPolicyToBlockAllWebsiteData:]
  -[SafariSettingsController _confirmBlockAllCookies:]
  -[SafariSettingsController _cancelBlockAllCookiesPrompt:]
  -[SafariSettingsController _presentPrivacyFlowWithBundleIdentifier:]
  -[SafariSettingsController areSiriSuggestionsSupported]
  -[SafariSettingsController setIconsInTabEnabled:forSpecifier:]
  -[SafariSettingsController isFavoritesFolderRestricted:]
  -[SafariSettingsController favoritesFolderTitle]
  -[SafariSettingsController isSafariFraudWarningRestricted:]
  -[SafariSettingsController isSafariFraudWarningEnabled:]
  -[SafariSettingsController safariFraudWarningsToggled:forSpecifier:]
  -[SafariSettingsController _copyFile:toFile:]
  -[SafariSettingsController safariToggleApplePayDisclosureAllowed:forSpecifier:]
  -[SafariSettingsController _valueForAutomaticallyDownloadReadingListItems]
  -[SafariSettingsController _setSafariAutomaticallyDownloadReadingListItems:forSpecifier:]
  -[SafariSettingsController isOfflineReadingListAvailable:]
  -[SafariSettingsController isClearHistoryRestricted:]
  -[SafariSettingsController showClearHistoryAndDataConfirmation:]
  -[SafariSettingsController isAutoFillAvailable:]
  -[SafariSettingsController isAutoFillRestricted:]
  -[SafariSettingsController isShowFavoritesBarAvailable:]
  -[SafariSettingsController siteSpecificSearchSettingsEnabledString]
  -[SafariSettingsController isBlockPopUpsRestricted:]
  -[SafariSettingsController isBlockPopUpsEnabled:]
  -[SafariSettingsController isTrackerProtectionRestricted:]
  -[SafariSettingsController trackerProtectionEnabled]
  -[SafariSettingsController safariToggleTrackerProtection:forSpecifier:]
  -[SafariSettingsController isBlockAllNewWebsiteDataRestricted:]
  -[SafariSettingsController blockAllNewWebsiteDataEnabled]
  -[SafariSettingsController safariToggleBlockAllNewWebsiteData:forSpecifier:]
  -[SafariSettingsController isContentBlockersAvailable:]
  -[SafariSettingsController enabledContentBlockerCountString]
  -[SafariSettingsController safariTogglePrivateClickMeasurement:forSpecifier:]
  -[SafariSettingsController showPrivacyExplanationSheet:]
  -[SafariSettingsController showSearchExplanationSheet:]


FrequentlyVisitedSitesBannedURLStore : WBSFrequentlyVisitedSitesBannedURLStore
  // class methods
  +[FrequentlyVisitedSitesBannedURLStore sharedStore]


NonTruncatingUsageCell : PSTableCell
  // instance methods
  -[NonTruncatingUsageCell layoutSubviews]
  -[NonTruncatingUsageCell initWithStyle:reuseIdentifier:specifier:]


SafariStorageSettingsController : PSEditableListController <UISearchControllerDelegate, UISearchResultsUpdating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SafariStorageSettingsController deleteAllData]
  +[SafariStorageSettingsController _clearContentBlockerStatistics]

  // instance methods
  -[SafariStorageSettingsController specifiers]
  -[SafariStorageSettingsController willPresentSearchController:]
  -[SafariStorageSettingsController willDismissSearchController:]
  -[SafariStorageSettingsController updateSearchResultsForSearchController:]
  -[SafariStorageSettingsController .cxx_destruct]
  -[SafariStorageSettingsController viewDidLoad]
  -[SafariStorageSettingsController setEditable:]
  -[SafariStorageSettingsController _updateToolbarItems]
  -[SafariStorageSettingsController tableView:willBeginEditingRowAtIndexPath:]
  -[SafariStorageSettingsController viewWillDisappear:]
  -[SafariStorageSettingsController _setContentInset:]
  -[SafariStorageSettingsController tableView:didEndEditingRowAtIndexPath:]
  -[SafariStorageSettingsController _toggleEditing]
  -[SafariStorageSettingsController _showDeleteAllOriginsAlert]
  -[SafariStorageSettingsController _createDomainSpecifiers]
  -[SafariStorageSettingsController _getSpecifierDiskUsage:]
  -[SafariStorageSettingsController _deleteOriginData:]
  -[SafariStorageSettingsController _addWebsiteDataRecord:toDictionary:]
  -[SafariStorageSettingsController _totalUsageString]
  -[SafariStorageSettingsController _specifiersForDomainList]
  -[SafariStorageSettingsController _updateTotalUsageSpecifier]
  -[SafariStorageSettingsController _addDomainSpecifiers]
  -[SafariStorageSettingsController _addWebSecurityDomainsToDictionary:withCompletion:]
  -[SafariStorageSettingsController showAllDomainSpecifiers]
  -[SafariStorageSettingsController _specifiersForLoadingSpinner]
  -[SafariStorageSettingsController _specifiersForSearchResults]
  -[SafariStorageSettingsController _deleteAllOrigins]


SafariSettingsFeatureManager : WBUFeatureManager
  // class methods
  +[SafariSettingsFeatureManager sharedFeatureManager]


SafariWebExtensionPermissionsExplanationSection : NSObject
 @property  long long type
 @property  NSArray *sites
 @property  BOOL includesCurrentTab
 @property  BOOL appliesToAllSites
 @property  NSString *extensionName

  // instance methods
  -[SafariWebExtensionPermissionsExplanationSection sites]
  -[SafariWebExtensionPermissionsExplanationSection setType:]
  -[SafariWebExtensionPermissionsExplanationSection .cxx_destruct]
  -[SafariWebExtensionPermissionsExplanationSection subtitle]
  -[SafariWebExtensionPermissionsExplanationSection title]
  -[SafariWebExtensionPermissionsExplanationSection type]
  -[SafariWebExtensionPermissionsExplanationSection extensionName]
  -[SafariWebExtensionPermissionsExplanationSection setSites:]
  -[SafariWebExtensionPermissionsExplanationSection setExtensionName:]
  -[SafariWebExtensionPermissionsExplanationSection initWithType:sites:appliesToAllSites:includesCurrentTab:extensionName:]
  -[SafariWebExtensionPermissionsExplanationSection includesCurrentTab]
  -[SafariWebExtensionPermissionsExplanationSection setIncludesCurrentTab:]
  -[SafariWebExtensionPermissionsExplanationSection appliesToAllSites]
  -[SafariWebExtensionPermissionsExplanationSection setAppliesToAllSites:]


SafariWebExtensionPermissionsExplanation : NSObject
 @property  long long titleType
 @property  NSArray *sections
 @property  BOOL showsEditWebsitesButton
 @property  BOOL showsAlwaysAllowOnEveryWebsiteButton
 @property  NSString *extensionName

  // instance methods
  -[SafariWebExtensionPermissionsExplanation specifiers]
  -[SafariWebExtensionPermissionsExplanation setSections:]
  -[SafariWebExtensionPermissionsExplanation sections]
  -[SafariWebExtensionPermissionsExplanation titleType]
  -[SafariWebExtensionPermissionsExplanation .cxx_destruct]
  -[SafariWebExtensionPermissionsExplanation initWithExtension:]
  -[SafariWebExtensionPermissionsExplanation title]
  -[SafariWebExtensionPermissionsExplanation setTitleType:]
  -[SafariWebExtensionPermissionsExplanation extensionName]
  -[SafariWebExtensionPermissionsExplanation setExtensionName:]
  -[SafariWebExtensionPermissionsExplanation showsEditWebsitesButton]
  -[SafariWebExtensionPermissionsExplanation setShowsEditWebsitesButton:]
  -[SafariWebExtensionPermissionsExplanation showsAlwaysAllowOnEveryWebsiteButton]
  -[SafariWebExtensionPermissionsExplanation setShowsAlwaysAllowOnEveryWebsiteButton:]


SafariWebExtensionsPermissionsSettingsController : SafariSettingsListController <WBSExtensionsControllerObserver>
  // instance methods
  -[SafariWebExtensionsPermissionsSettingsController specifiers]
  -[SafariWebExtensionsPermissionsSettingsController .cxx_destruct]
  -[SafariWebExtensionsPermissionsSettingsController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[SafariWebExtensionsPermissionsSettingsController init]
  -[SafariWebExtensionsPermissionsSettingsController viewWillDisappear:]
  -[SafariWebExtensionsPermissionsSettingsController viewWillAppear:]
  -[SafariWebExtensionsPermissionsSettingsController tableView:editingStyleForRowAtIndexPath:]
  -[SafariWebExtensionsPermissionsSettingsController extensionsControllerExtensionListDidChange:]
  -[SafariWebExtensionsPermissionsSettingsController _tabOverrideTopLevelDetailString]
  -[SafariWebExtensionsPermissionsSettingsController _webExtensionPermissionDidChange:]
  -[SafariWebExtensionsPermissionsSettingsController _extensionEnabledStateDidChange:]
  -[SafariWebExtensionsPermissionsSettingsController _reloadSpecifiersSoon]
  -[SafariWebExtensionsPermissionsSettingsController _setExtensionIfNeeded]
  -[SafariWebExtensionsPermissionsSettingsController _setWebExtensionEnabled:forSpecifier:]
  -[SafariWebExtensionsPermissionsSettingsController _enabledStateOfWebExtensionForSpecifier:]
  -[SafariWebExtensionsPermissionsSettingsController _hostAppDisplayName:]
  -[SafariWebExtensionsPermissionsSettingsController _specifiersForExtensionErrors]
  -[SafariWebExtensionsPermissionsSettingsController _showWebExtensionPreferencesButtonTapped:]
  -[SafariWebExtensionsPermissionsSettingsController _perDomainSpecifierForMatchPattern:withName:]
  -[SafariWebExtensionsPermissionsSettingsController _setDomainPermission:forSpecifier:]
  -[SafariWebExtensionsPermissionsSettingsController _domainPermissionForSpecifier:]


SafariWebExtensionsDetailsTableCell : PSTableCell
  // class methods
  +[SafariWebExtensionsDetailsTableCell cellStyle]

  // instance methods
  -[SafariWebExtensionsDetailsTableCell updateConstraints]
  -[SafariWebExtensionsDetailsTableCell .cxx_destruct]
  -[SafariWebExtensionsDetailsTableCell refreshCellContentsWithSpecifier:]
  -[SafariWebExtensionsDetailsTableCell initWithStyle:reuseIdentifier:]


SettingsSpinnerCell : PSTableCell
  // instance methods
  -[SettingsSpinnerCell .cxx_destruct]
  -[SettingsSpinnerCell layoutSubviews]
  -[SettingsSpinnerCell initWithStyle:reuseIdentifier:]


SafariPasswordManagersController : PSListController <MCProfileConnectionObserver, SFCredentialProviderExtensionManagerObserver, _ASCredentialProviderExtensionConfigurationViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariPasswordManagersController profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[SafariPasswordManagersController specifiers]
  -[SafariPasswordManagersController .cxx_destruct]
  -[SafariPasswordManagersController tableView:didSelectRowAtIndexPath:]
  -[SafariPasswordManagersController viewDidAppear:]
  -[SafariPasswordManagersController init]
  -[SafariPasswordManagersController profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[SafariPasswordManagersController credentialProviderExtensionManagerExtensionListDidChange:]
  -[SafariPasswordManagersController viewWillAppear:]
  -[SafariPasswordManagersController dealloc]
  -[SafariPasswordManagersController viewDidDisappear:]
  -[SafariPasswordManagersController credentialProviderExtensionConfigurationViewControllerDidFinish:completion:]
  -[SafariPasswordManagersController _formDataController]
  -[SafariPasswordManagersController _setValue:forPasswordAutoFillSpecifier:]
  -[SafariPasswordManagersController _valueOfPasswordAutoFillSpecifier:]
  -[SafariPasswordManagersController _keychainAutoFillEnabled]
  -[SafariPasswordManagersController _valueOfThirdPartyPasswordManagerSpecifier:]
  -[SafariPasswordManagersController _setKeychainAutoFillEnabled:]
  -[SafariPasswordManagersController _setValue:forThirdPartyPasswordManagerSpecifier:]


SafariContentBlockersSettingsController : SafariSettingsListController <SFContentBlockerManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariContentBlockersSettingsController specifiers]
  -[SafariContentBlockersSettingsController .cxx_destruct]
  -[SafariContentBlockersSettingsController viewWillAppear:]
  -[SafariContentBlockersSettingsController viewDidDisappear:]
  -[SafariContentBlockersSettingsController contentBlockerManagerExtensionListDidChange:]
  -[SafariContentBlockersSettingsController _setValue:forSpecifier:]
  -[SafariContentBlockersSettingsController _valueOfSpecifier:]
  -[SafariContentBlockersSettingsController _showContentUnavailableView]
  -[SafariContentBlockersSettingsController _hideContentUnavailableView]


SafariSettingsListController : PSListController
  // instance methods
  -[SafariSettingsListController tableView:didSelectRowAtIndexPath:]
  -[SafariSettingsListController loadSpecifiersFromPlistName:target:bundle:]
  -[SafariSettingsListController reloadSpecifierAtIndex:animated:]
  -[SafariSettingsListController prepareHandlingURLForSpecifierID:resourceDictionary:animatePush:]
  -[SafariSettingsListController postDistributedNotificationNamed:]
  -[SafariSettingsListController updateRestrictionsForSpecifiers:]
  -[SafariSettingsListController safariSharedDefaultsValueForKey:]
  -[SafariSettingsListController setSafariSharedDefaultsValue:forKey:]
  -[SafariSettingsListController synchronizeSafariSharedDefaults]
  -[SafariSettingsListController synchronizeSafariDefaults]
  -[SafariSettingsListController safariDefaultsValueForKey:]
  -[SafariSettingsListController setSafariDefaultsValue:forKey:]
  -[SafariSettingsListController _evaluateBoolSelectorWithPropertyKey:specifier:defaultValue:]
  -[SafariSettingsListController userInterfaceIdiomIsPhone:]
  -[SafariSettingsListController userInterfaceIdiomIsPad:]


SafariNewTabOverrideSettingsController : SafariSettingsListController <WBSExtensionsControllerObserver>
  // class methods
  +[SafariNewTabOverrideSettingsController topLevelDetailString]
  +[SafariNewTabOverrideSettingsController canUseCurrentNewTabOverrideSelection]
  +[SafariNewTabOverrideSettingsController _specifierTitleForExtensionNamed:]
  +[SafariNewTabOverrideSettingsController _defaultStartPageTitleTopLevel]
  +[SafariNewTabOverrideSettingsController _defaultStartPageTitleDrillIn]

  // instance methods
  -[SafariNewTabOverrideSettingsController specifiers]
  -[SafariNewTabOverrideSettingsController tableView:willDisplayCell:forRowAtIndexPath:]
  -[SafariNewTabOverrideSettingsController .cxx_destruct]
  -[SafariNewTabOverrideSettingsController tableView:didSelectRowAtIndexPath:]
  -[SafariNewTabOverrideSettingsController viewWillAppear:]
  -[SafariNewTabOverrideSettingsController viewDidDisappear:]
  -[SafariNewTabOverrideSettingsController extensionsControllerExtensionListDidChange:]
  -[SafariNewTabOverrideSettingsController _computeCurrentCheckmarkIndexPath]
  -[SafariNewTabOverrideSettingsController _reloadSpecifiersSoon:]


SafariCameraPerSitePreferenceSettingsController : SafariMediaCapturePerSitePreferenceSettingsController
  // instance methods
  -[SafariCameraPerSitePreferenceSettingsController preference]


SafariAutoFillListController : SafariSettingsListController
 @property  BOOL isKeychainSyncEnabled

  // instance methods
  -[SafariAutoFillListController isKeychainSyncEnabled]


SafariLocationPerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariLocationPerSitePreferenceSettingsController .cxx_destruct]
  -[SafariLocationPerSitePreferenceSettingsController preference]
  -[SafariLocationPerSitePreferenceSettingsController preferenceManager]


SafariWebKitExperimentalFeaturesSettingsController : SafariSettingsListController
  // instance methods
  -[SafariWebKitExperimentalFeaturesSettingsController specifiers]
  -[SafariWebKitExperimentalFeaturesSettingsController _featureWithName:]
  -[SafariWebKitExperimentalFeaturesSettingsController setExperimentalFeature:specifier:]
  -[SafariWebKitExperimentalFeaturesSettingsController getExperimentalFeature:]
  -[SafariWebKitExperimentalFeaturesSettingsController resetAllExperimentalFeatures:]


SafariContentBlockersPerSitePreferenceSettingsController : SafariPerSitePreferenceSettingsController
  // instance methods
  -[SafariContentBlockersPerSitePreferenceSettingsController .cxx_destruct]
  -[SafariContentBlockersPerSitePreferenceSettingsController preference]
  -[SafariContentBlockersPerSitePreferenceSettingsController dealloc]
  -[SafariContentBlockersPerSitePreferenceSettingsController preferenceManager]


SafariSettingsClass : NSObject

SafariWebExtensionsSettingsController : SafariSettingsListController <SFContentBlockerManagerObserver, WBSExtensionsControllerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariWebExtensionsSettingsController specifiers]
  -[SafariWebExtensionsSettingsController .cxx_destruct]
  -[SafariWebExtensionsSettingsController viewWillAppear:]
  -[SafariWebExtensionsSettingsController viewDidDisappear:]
  -[SafariWebExtensionsSettingsController _managedConfigurationSettingsDidChange:]
  -[SafariWebExtensionsSettingsController contentBlockerManagerExtensionListDidChange:]
  -[SafariWebExtensionsSettingsController extensionsControllerExtensionListDidChange:]
  -[SafariWebExtensionsSettingsController isContentBlockersAvailable:]
  -[SafariWebExtensionsSettingsController _extensionEnabledStateDidChange:]
  -[SafariWebExtensionsSettingsController _reloadSpecifiersSoon:]
  -[SafariWebExtensionsSettingsController _setContentBlockerValue:forSpecifier:]
  -[SafariWebExtensionsSettingsController _valueOfContentBlockerSpecifier:]
  -[SafariWebExtensionsSettingsController _valueOfWebExtensionSpecifier:]
  -[SafariWebExtensionsSettingsController _moreExtensionsButtonTapped:]


PSSpecifier(StorageSettings)
	// instance methods
	-[PSSpecifier(StorageSettings) diskUsage]
	-[PSSpecifier(StorageSettings) setUsage:]
	-[PSSpecifier(StorageSettings) domain]

01 00 0700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0a00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0b00 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactPickerViewController 
01 00 0a00 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0e00 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 0300 /System/Library/PrivateFrameworks/DocumentManagerCore.framework/DocumentManagerCore: DOCDownloadSettings 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: DevicePINController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: DevicePINPane 
01 00 2100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemID 
01 00 2100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPItemManager 
01 00 2100 /System/Library/Frameworks/FileProvider.framework/FileProvider: FPProviderDomain 
01 00 0100 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 1e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 1300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0600 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBundle 
01 00 0500 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 1800 /System/Library/Frameworks/Security.framework/Security: OTClique 
01 00 1800 /System/Library/Frameworks/Security.framework/Security: OTConfigurationContext 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSConfirmationSpecifier 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSEditableListController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSEditableTableCell 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSFooterHyperlinkView 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSListItemsController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSRootController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSetupController 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSystemPolicyForApp 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTableCell 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSTextFieldSpecifier 
01 00 1400 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSUsageSizeHeader 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSApplicationService 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFAutomaticTabClosingUtilities 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFContentBlockerManager 
01 00 1500 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFCredentialProviderExtensionHelperProxy 
01 00 1500 /System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation: SFCredentialProviderExtensionManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFFolderPickerList 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFHighlightBannerTracker 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFIconGenerator 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFStoreBannerTracker 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFWebExtensionsController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPickerViewController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuItem 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIPickerView 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebGeolocationPolicyDecider 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBCollectionConfiguration 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBFeatureManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSAllowedLegacyTLSHostManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSAnalyticsLogger 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSAppLink 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSAutoFillQuirksManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSAutomaticReaderActivationManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSContentBlockerStatisticsSQLiteStore 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSCreditCardData 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSCreditCardFormatter 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSDigitalHealthManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSExtensionsController 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSFrequentlyVisitedSiteCandidate 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSFrequentlyVisitedSitesBannedURLStore 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSFrequentlyVisitedSitesController 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSImageUtilities 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSParsecSubscriptionManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSPasswordWarningStore 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSPerSitePreferencesSQLiteStore 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSPrivacyProxyAvailabilityManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSQuickWebsiteSearchController 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSSharedFeatureAvailability 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSWebExtensionMatchPattern 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSWebExtensionNewTabOverridePreferencesManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBSWebExtensionsController 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBSettingsTask 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBSettingsTaskHandler 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTabCollection 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUCreditCardDataController 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFeatureManager 
01 00 1c00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFormDataController 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmark 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkCollection 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkWebFilterSettings 
01 00 1a00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarksSettingsGateway 
01 00 0400 /System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices: _ASCredentialProviderExtensionConfigurationViewController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAccountManagerLockedView 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAccountManagerViewController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAutomationController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserSavedState 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFContentBlockersPreferenceManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFCreditCardCaptureViewController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownloadManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFeatureAvailability 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFolderPickerTableViewCellLayoutManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFGeolocationPermissionManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPageZoomPreferenceManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPerSitePreferenceDisplayInformation 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPerSitePreferenceNotifyingListController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPerSitePreferencesUtilities 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFRecentWebSearchesController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFRequestDesktopSitePreferenceManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFRequestDesktopSiteQuirksManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSafariDataSharingController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSearchEngineController 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSettingsAuthentication 
01 00 0200 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFSiteMetadataManager 
01 00 1600 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFUserMediaPermissionController 
01 00 1900 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 1b00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebAuthenticationPanel 
