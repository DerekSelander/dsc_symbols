|| __DATA.__data _kMediaLibraryMusicAppInstalledNotification
|| __DATA.__data _kMediaLibraryMusicAppUninstalledNotification
|| __DATA.__data _kMediaLibraryNeedFilterChange
|| __DATA.__objc_data _OBJC_CLASS_$_ACCPlatformPluginSystem
|| __DATA.__objc_data _OBJC_CLASS_$_ACCPlatformProcessAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_MediaLibraryHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WorkspaceObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCPlatformPluginSystem
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCPlatformProcessAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_MediaLibraryHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WorkspaceObserver
|| __DATA_CONST.__const _ACCPlatformApplicationNotificationStateChanged
|| __DATA_CONST.__const _ACCPlatformApplicationStateDisplayIDKey
|| __DATA_CONST.__const _ACCPlatformApplicationStateKey
|| __DATA_CONST.__const _ACCPlatformApplicationStateProcessIDKey
|| __TEXT.__text _ACCGetOSVersion
|| __TEXT.__text _IsAppVisibleInCurrentMode
|| __TEXT.__text _IsExistAppMusic
|| __TEXT.__text _IsExistAppPodcasts
|| __TEXT.__text _IsExistAppiBooks
|| __TEXT.__text _WeakLinkClass
|| __TEXT.__text _WeakLinkStringConstant
|| __TEXT.__text _WeakLinkSymbol
|| __TEXT.__text _init_logging
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AssertionServices: _OBJC_METACLASS_$_BKSProcessAssertion
__ CoreDuet: _OBJC_CLASS_$__DKEventQuery
__ CoreDuet: _OBJC_CLASS_$__DKEventStream
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspaceObserver
__ CoreServices: _OBJC_METACLASS_$_LSApplicationWorkspaceObserver
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ MediaPlayer: _OBJC_CLASS_$_MPMediaLibrary
__ MediaPlayer: _OBJC_CLASS_$_MPRadioLibrary
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ SpringBoardServices: _SBGetScreenLockStatus
__ SpringBoardServices: _SBSCopyDisplayIdentifiersForExternalAccessoryProtocol
__ SpringBoardServices: _SBSSpringBoardServerPort
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
ACCPlatformProcessAssertion : BKSProcessAssertion /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 @property  unsigned long startTime
 @property  NSObject<OS_dispatch_source> *processAssertionTimer

  // instance methods
  -[ACCPlatformProcessAssertion dealloc]
  -[ACCPlatformProcessAssertion .cxx_destruct]
  -[ACCPlatformProcessAssertion startTime]
  -[ACCPlatformProcessAssertion setStartTime:]
  -[ACCPlatformProcessAssertion initWithBundleIdentifier:flags:reason:name:withHandler:]
  -[ACCPlatformProcessAssertion processAssertionTimer]
  -[ACCPlatformProcessAssertion setProcessAssertionTimer:]


ACCPlatformPluginSystem : NSObject /usr/lib/libSystem.B.dylib <FBSDisplayLayoutObserver, ACCPlatformSystemPluginProtocol>
 @property  BOOL isRunning
 @property  NSMutableSet *foregroundAppBundleIDsMutable
 @property  NSMutableDictionary *activeProcessAssertions
 @property  NSLock *applicationStateLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pluginName

  // instance methods
  -[ACCPlatformPluginSystem .cxx_destruct]
  -[ACCPlatformPluginSystem isRunning]
  -[ACCPlatformPluginSystem stopObservingApplicationState]
  -[ACCPlatformPluginSystem isDeviceLocked]
  -[ACCPlatformPluginSystem layoutMonitor:didUpdateDisplayLayout:withContext:]
  -[ACCPlatformPluginSystem applicationInfoForPID:]
  -[ACCPlatformPluginSystem setIsRunning:]
  -[ACCPlatformPluginSystem pluginName]
  -[ACCPlatformPluginSystem initPlugin]
  -[ACCPlatformPluginSystem startPlugin]
  -[ACCPlatformPluginSystem stopPlugin]
  -[ACCPlatformPluginSystem unlockedSinceBoot]
  -[ACCPlatformPluginSystem appNameForBundleID:]
  -[ACCPlatformPluginSystem launchApplication:]
  -[ACCPlatformPluginSystem applicationStateLock]
  -[ACCPlatformPluginSystem _observeApplicationState:]
  -[ACCPlatformPluginSystem foregroundAppBundleIDsMutable]
  -[ACCPlatformPluginSystem _convertDictionaryToPlatformACCDictionary:]
  -[ACCPlatformPluginSystem applicationInfoForBundleID:]
  -[ACCPlatformPluginSystem activeProcessAssertions]
  -[ACCPlatformPluginSystem isApplicationRunning:]
  -[ACCPlatformPluginSystem toggleProcessAssertionForBundleID:]
  -[ACCPlatformPluginSystem isAppVisibleInCurrentMode:]
  -[ACCPlatformPluginSystem applicationsInstalledWithExternalAccessoryProtocol:]
  -[ACCPlatformPluginSystem launchURL:]
  -[ACCPlatformPluginSystem isAppInstalledWithBundleID:]
  -[ACCPlatformPluginSystem startObservingApplicationState]
  -[ACCPlatformPluginSystem isApplicationInForeground:]
  -[ACCPlatformPluginSystem foregroundAppBundleIDs]
  -[ACCPlatformPluginSystem cancelProcessAssertionForBundleID:]
  -[ACCPlatformPluginSystem launchBundleIDToBackground:]
  -[ACCPlatformPluginSystem supportsExternalAccessoryBackgroundMode:]
  -[ACCPlatformPluginSystem isDeviceLockSettingEnabled]
  -[ACCPlatformPluginSystem timeSinceBootInSecs]
  -[ACCPlatformPluginSystem secondsSinceLastLockModeEvent:]
  -[ACCPlatformPluginSystem isLockScreenUIDisplayed]
  -[ACCPlatformPluginSystem createFolder:mode:]
  -[ACCPlatformPluginSystem mediaLibraryUIDString:]
  -[ACCPlatformPluginSystem takeOneTimeProcessAssertionForBundleID:]
  -[ACCPlatformPluginSystem setForegroundAppBundleIDsMutable:]
  -[ACCPlatformPluginSystem setActiveProcessAssertions:]
  -[ACCPlatformPluginSystem setApplicationStateLock:]


MediaLibraryHelper : NSObject /usr/lib/libSystem.B.dylib <WorkspaceObserverDelegate>
 @property  BOOL showMusic
 @property  BOOL showPodcasts
 @property  BOOL showAudioBooks
 @property  BOOL iTunesRadioEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MediaLibraryHelper init]
  -[MediaLibraryHelper dealloc]
  -[MediaLibraryHelper .cxx_destruct]
  -[MediaLibraryHelper applicationsDidInstall:]
  -[MediaLibraryHelper applicationsWillUninstall:]
  -[MediaLibraryHelper applicationsDidUninstall:]
  -[MediaLibraryHelper _updateITunesRadioEnabled]
  -[MediaLibraryHelper handleAppInstall:]
  -[MediaLibraryHelper handleAppUninstall:]
  -[MediaLibraryHelper iTunesRadioEnabled]
  -[MediaLibraryHelper getFilteredMediaTypesMask:]
  -[MediaLibraryHelper showMusic]
  -[MediaLibraryHelper showPodcasts]
  -[MediaLibraryHelper showAudioBooks]


WorkspaceObserver : LSApplicationWorkspaceObserver
 @property  NSObject<WorkspaceObserverDelegate> *delegate

  // instance methods
  -[WorkspaceObserver delegate]
  -[WorkspaceObserver setDelegate:]
  -[WorkspaceObserver .cxx_destruct]
  -[WorkspaceObserver applicationsWillInstall:]
  -[WorkspaceObserver applicationsDidInstall:]
  -[WorkspaceObserver applicationsWillUninstall:]
  -[WorkspaceObserver applicationsDidUninstall:]
  -[WorkspaceObserver startObserving]
  -[WorkspaceObserver stopObserving]


01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0500 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspaceObserver 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaLibrary 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRadioLibrary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventQuery 
01 00 0900 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventStream 
01 00 0900 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
