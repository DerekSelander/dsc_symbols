|| __DATA.__data _kMediaLibraryMusicAppInstalledNotification
|| __DATA.__data _kMediaLibraryMusicAppUninstalledNotification
|| __DATA.__data _kMediaLibraryNeedFilterChange
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryShim
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMediaLibraryShimInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMemUsageStat
|| __DATA.__objc_data _OBJC_CLASS_$_ACCMemUsageStatInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ACCSettingsState
|| __DATA.__objc_data _OBJC_CLASS_$_ACCStatInfoAccumulator
|| __DATA.__objc_data _OBJC_CLASS_$_MediaLibraryHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WorkspaceObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryShim
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryShimInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMemUsageStat
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCMemUsageStatInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCSettingsState
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCStatInfoAccumulator
|| __DATA.__objc_data _OBJC_METACLASS_$_MediaLibraryHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WorkspaceObserver
|| __DATA_CONST.__const _kIBooksAppBundleID
|| __DATA_CONST.__const _kMobileiPodAppBundleID
|| __DATA_CONST.__const _kMusicAppBundleID
|| __DATA_CONST.__const _kPodcastsAppBundleID
|| __DATA_CONST.__const _kVideoAppBundleID
|| __DATA_CONST.__const _kiTunesUAppBundleID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCMediaLibraryFeaturePlugin
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCMediaLibraryFeaturePlugin
|| __TEXT.__text _ACCGetOSVersion
|| __TEXT.__text _ACCMediaLibraryFeatureRequestedInfoDesc
|| __TEXT.__text _ACCMediaLibraryShimGetCurTimeMs
|| __TEXT.__text _ACCMediaLibraryShimUIDString
|| __TEXT.__text _ACCRadioLibraryUIDString
|| __TEXT.__text _IsAppVisibleInCurrentMode
|| __TEXT.__text _IsExistAppMusic
|| __TEXT.__text _IsExistAppPodcasts
|| __TEXT.__text _IsExistAppiBooks
|| __TEXT.__text _WeakLinkClass
|| __TEXT.__text _WeakLinkStringConstant
|| __TEXT.__text _WeakLinkSymbol
|| __TEXT.__text _ascii_to_hex
|| __TEXT.__text _createHexString
|| __TEXT.__text _getMemoryUse
|| __TEXT.__text _init_logging
|| __TEXT.__text _obfuscatedPointer
|| __TEXT.__text _printBytes
|| __TEXT.__text _removeNewline
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdateHidingRemoteItems
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdateItemDictionary
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdatePlayAllSongsCapable
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdatePlaylistContentStyle
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdatePlaylistDictionary
__ AccessoryMediaLibrary: _ACCMediaLibraryUpdatePlaylistItemDictionary
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryProvider
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryUpdateItem
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryUpdateLibraryInfo
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylist
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylistContent
__ AccessoryMediaLibrary: _OBJC_CLASS_$_ACCMediaLibraryUpdatePlaylistContentItem
__ CoreAccessories: _acc_strings_bundle
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspaceObserver
__ CoreServices: _OBJC_METACLASS_$_LSApplicationWorkspaceObserver
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ MediaPlayer: _MPCloudControllerCanShowCloudTracksDidChangeNotification
__ MediaPlayer: _MPMediaItemPropertyAlbumArtist
__ MediaPlayer: _MPMediaItemPropertyAlbumArtistPersistentID
__ MediaPlayer: _MPMediaItemPropertyAlbumPersistentID
__ MediaPlayer: _MPMediaItemPropertyAlbumTitle
__ MediaPlayer: _MPMediaItemPropertyAlbumTrackCount
__ MediaPlayer: _MPMediaItemPropertyAlbumTrackNumber
__ MediaPlayer: _MPMediaItemPropertyArtist
__ MediaPlayer: _MPMediaItemPropertyArtistPersistentID
__ MediaPlayer: _MPMediaItemPropertyComposer
__ MediaPlayer: _MPMediaItemPropertyComposerPersistentID
__ MediaPlayer: _MPMediaItemPropertyDiscCount
__ MediaPlayer: _MPMediaItemPropertyDiscNumber
__ MediaPlayer: _MPMediaItemPropertyGenre
__ MediaPlayer: _MPMediaItemPropertyGenrePersistentID
__ MediaPlayer: _MPMediaItemPropertyHasNonPurgeableAsset
__ MediaPlayer: _MPMediaItemPropertyIsCompilation
__ MediaPlayer: _MPMediaItemPropertyMediaType
__ MediaPlayer: _MPMediaItemPropertyPersistentID
__ MediaPlayer: _MPMediaItemPropertyPlaybackDuration
__ MediaPlayer: _MPMediaItemPropertyRating
__ MediaPlayer: _MPMediaItemPropertyStoreAdvertisementUniqueID
__ MediaPlayer: _MPMediaItemPropertyTitle
__ MediaPlayer: _MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
__ MediaPlayer: _MPMediaLibraryDidChangeNotification
__ MediaPlayer: _MPMediaLibraryDynamicPropertiesDidChangeNotification
__ MediaPlayer: _MPMediaPlaylistPropertyIsFolder
__ MediaPlayer: _MPMediaPlaylistPropertyIsGeniusMix
__ MediaPlayer: _MPMediaPlaylistPropertyIsHidden
__ MediaPlayer: _MPMediaPlaylistPropertyName
__ MediaPlayer: _MPMediaPlaylistPropertyParentPersistentID
__ MediaPlayer: _MPMediaPlaylistPropertyPersistentID
__ MediaPlayer: _MPRadioLibraryStationsDidChangeNotification
__ MediaPlayer: _OBJC_CLASS_$_MPCloudController
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItem
__ MediaPlayer: _OBJC_CLASS_$_MPMediaItemCollection
__ MediaPlayer: _OBJC_CLASS_$_MPMediaLibrary
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPlaylist
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ MediaPlayer: _OBJC_CLASS_$_MPMusicPlayerController
__ MediaPlayer: _OBJC_CLASS_$_MPRadioLibrary
__ MediaRemote: _MRMediaRemoteSendCommandToApp
__ MediaRemote: _MRMediaRemoteSetAppPlaybackQueue
__ MediaRemote: _MRSystemAppPlaybackQueueCreate
__ MediaRemote: _MRSystemAppPlaybackQueueDestroy
__ MediaRemote: _MRSystemAppPlaybackQueueInternalPrepareBundleIDForPlayback
__ MediaRemote: _MRSystemAppPlaybackQueueSetLocalQueryData
__ MediaRemote: _MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_assert_log
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
ACCSettingsState : NSObject
 @property  long long defaultValue
 @property  long long invalidValue
 @property  long long intValue
 @property  BOOL boolValue
 @property  BOOL exists
 @property  NSString *key
 @property  NSString *applicationID
 @property  NSString *notificationName

  // instance methods
  -[ACCSettingsState defaultValue]
  -[ACCSettingsState applicationID]
  -[ACCSettingsState notificationName]
  -[ACCSettingsState .cxx_destruct]
  -[ACCSettingsState update]
  -[ACCSettingsState exists]
  -[ACCSettingsState boolValue]
  -[ACCSettingsState intValue]
  -[ACCSettingsState key]
  -[ACCSettingsState dealloc]
  -[ACCSettingsState initWithKey:applicationID:notification:defaultValue:invalidValue:]
  -[ACCSettingsState _readLoggingPrefs]
  -[ACCSettingsState _registerForLoggingPrefsNotification]
  -[ACCSettingsState invalidValue]


MediaLibraryHelper : NSObject <WorkspaceObserverDelegate>
 @property  BOOL showMusic
 @property  BOOL showPodcasts
 @property  BOOL showAudioBooks
 @property  BOOL iTunesRadioEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MediaLibraryHelper applicationsDidUninstall:]
  -[MediaLibraryHelper applicationsDidInstall:]
  -[MediaLibraryHelper .cxx_destruct]
  -[MediaLibraryHelper applicationsWillUninstall:]
  -[MediaLibraryHelper init]
  -[MediaLibraryHelper dealloc]
  -[MediaLibraryHelper _updateITunesRadioEnabled]
  -[MediaLibraryHelper handleAppInstall:]
  -[MediaLibraryHelper handleAppUninstall:]
  -[MediaLibraryHelper iTunesRadioEnabled]
  -[MediaLibraryHelper getFilteredMediaTypesMask:]
  -[MediaLibraryHelper showMusic]
  -[MediaLibraryHelper showPodcasts]
  -[MediaLibraryHelper showAudioBooks]


ACCMediaLibraryShimInfo : NSObject
 @property  BOOL enableLibraryUpdate
 @property  NSArray *stationsGroupList
 @property  ACCMediaLibraryShim *context
 @property  ACCMediaLibraryAccessory *accessory
 @property  BOOL isShuttingDown
 @property  id mpMediaLibrary
 @property  NSString *anchor
 @property  NSObject<OS_dispatch_queue> *libraryUpdateQ
 @property  int libraryType
 @property  NSString *UIDString
 @property  NSString *name
 @property  NSObject<OS_dispatch_semaphore> *waitForWindowSem
 @property  BOOL subscribedToAppleMusic
 @property  NSObject<OS_dispatch_queue> *mpMusicPlayerControllerQueue
 @property  MPMusicPlayerController *mpMusicPlayerControllerHandler

  // class methods
  +[ACCMediaLibraryShimInfo getMediaItemForContentItem:propertyList:playlistContent:]
  +[ACCMediaLibraryShimInfo isItemAd:]

  // instance methods
  -[ACCMediaLibraryShimInfo isShuttingDown]
  -[ACCMediaLibraryShimInfo accessory]
  -[ACCMediaLibraryShimInfo mpMusicPlayerControllerQueue]
  -[ACCMediaLibraryShimInfo name]
  -[ACCMediaLibraryShimInfo _canShowCloudTracksDidChangeNotification:]
  -[ACCMediaLibraryShimInfo setAnchor:]
  -[ACCMediaLibraryShimInfo .cxx_destruct]
  -[ACCMediaLibraryShimInfo anchor]
  -[ACCMediaLibraryShimInfo setMpMusicPlayerControllerHandler:]
  -[ACCMediaLibraryShimInfo mpMusicPlayerControllerHandler]
  -[ACCMediaLibraryShimInfo libraryType]
  -[ACCMediaLibraryShimInfo dealloc]
  -[ACCMediaLibraryShimInfo setMpMusicPlayerControllerQueue:]
  -[ACCMediaLibraryShimInfo context]
  -[ACCMediaLibraryShimInfo mpMediaLibrary]
  -[ACCMediaLibraryShimInfo shuttingDown]
  -[ACCMediaLibraryShimInfo subscribedToAppleMusic]
  -[ACCMediaLibraryShimInfo getPlaylistItems:]
  -[ACCMediaLibraryShimInfo _handlePlaylistContentForEntify:style:revision:]
  -[ACCMediaLibraryShimInfo _checkAndWaitForWindowOk:]
  -[ACCMediaLibraryShimInfo _isVisibleUpdate:]
  -[ACCMediaLibraryShimInfo _attemptUpdate:]
  -[ACCMediaLibraryShimInfo _handleMediaLibraryPlaylistUpdate:forLibrary:forProperties:success:]
  -[ACCMediaLibraryShimInfo _handleMediaLibraryItemUpdate:forLibrary:forProperties:success:forceDelete:]
  -[ACCMediaLibraryShimInfo _sendRadioLibraryUpdates]
  -[ACCMediaLibraryShimInfo _beginRadioLibraryUpdates]
  -[ACCMediaLibraryShimInfo _beginMediaLibraryUpdatesWithAnchor:validity:]
  -[ACCMediaLibraryShimInfo dbUpdateListDesc]
  -[ACCMediaLibraryShimInfo _mediaLibraryChanged:]
  -[ACCMediaLibraryShimInfo _radioLibraryChanged:]
  -[ACCMediaLibraryShimInfo _getUIDString]
  -[ACCMediaLibraryShimInfo _registerForMPNotifications]
  -[ACCMediaLibraryShimInfo UIDString]
  -[ACCMediaLibraryShimInfo _getMediaItemForPersistentID:]
  -[ACCMediaLibraryShimInfo playWithQuery:andFirstItem:]
  -[ACCMediaLibraryShimInfo _startPlaybackOfRadioStation:]
  -[ACCMediaLibraryShimInfo _startPlaybackOfCollection:ofType:withFirst:orIndex:]
  -[ACCMediaLibraryShimInfo _startMLPlaybackOfAllSongsStartItem:]
  -[ACCMediaLibraryShimInfo initWithMediaLibrary:accessory:Context:LibraryType:]
  -[ACCMediaLibraryShimInfo startSendingMediaLibraryUpdates:lastRevision:requestedTransferID:requestedMetaList:requestedMetaProperties:]
  -[ACCMediaLibraryShimInfo stopSendingMediaLibraryUpdates]
  -[ACCMediaLibraryShimInfo startPlaybackOfItems:withFirst:]
  -[ACCMediaLibraryShimInfo startPlaybackOfCollection:ofType:withFirst:]
  -[ACCMediaLibraryShimInfo startPlaybackOfCollection:ofType:withFirstPersistentID:]
  -[ACCMediaLibraryShimInfo startMLPlaybackWithResume:]
  -[ACCMediaLibraryShimInfo startMLPlaybackOfAllSongs]
  -[ACCMediaLibraryShimInfo startMLPlaybackOfAllSongsStartPersistentID:]
  -[ACCMediaLibraryShimInfo confirmMediaLibraryUpdateLastRevision:updateCount:]
  -[ACCMediaLibraryShimInfo confirmMediaLibraryPlaylistContentUpdateLastRevision:]
  -[ACCMediaLibraryShimInfo libraryUpdateQ]
  -[ACCMediaLibraryShimInfo waitForWindowSem]
  -[ACCMediaLibraryShimInfo enableLibraryUpdate]
  -[ACCMediaLibraryShimInfo stationsGroupList]
  -[ACCMediaLibraryShimInfo setStationsGroupList:]


ACCMediaLibraryShim : NSObject
 @property  BOOL isSubscribedToAppleMusic
 @property  ACCSettingsState *measureMemoryUsage
 @property  ACCMediaLibraryAccessory *accessory
 @property  BOOL isShuttingDown
 @property  NSObject<OS_dispatch_queue> *libraryInfoUpdateQ
 @property  NSMutableDictionary *libraryList
 @property  ACCMediaLibraryShimInfo *deviceLibrary
 @property  ACCMediaLibraryShimInfo *radioLibrary
 @property  BOOL radioIsEnabled
 @property  BOOL subscribedToAppleMusic
 @property  unsigned int windowPerLibrary
 @property  <ACCMediaLibraryShimDelegate> *delegate
 @property  ACCMemUsageStat *memUse

  // class methods
  +[ACCMediaLibraryShim isMusicAppVisible]
  +[ACCMediaLibraryShim allowCachedTracksForAppleMusic]

  // instance methods
  -[ACCMediaLibraryShim isShuttingDown]
  -[ACCMediaLibraryShim accessory]
  -[ACCMediaLibraryShim measureMemoryUsage]
  -[ACCMediaLibraryShim .cxx_destruct]
  -[ACCMediaLibraryShim memUse]
  -[ACCMediaLibraryShim setMeasureMemoryUsage:]
  -[ACCMediaLibraryShim delegate]
  -[ACCMediaLibraryShim dealloc]
  -[ACCMediaLibraryShim shuttingDown]
  -[ACCMediaLibraryShim windowPerLibrary]
  -[ACCMediaLibraryShim setWindowPerLibrary:]
  -[ACCMediaLibraryShim subscribedToAppleMusic]
  -[ACCMediaLibraryShim isGeniusMixesSupported]
  -[ACCMediaLibraryShim radioIsEnabled]
  -[ACCMediaLibraryShim _updateSubscribedToAppleMusicStatus:]
  -[ACCMediaLibraryShim _updateMediaLibraryInfomationUpdates:]
  -[ACCMediaLibraryShim _mediaLibrariesAvailableChanged:]
  -[ACCMediaLibraryShim _handlMediaLibraryNeedFilterChange:]
  -[ACCMediaLibraryShim _setupNewLibraries:forAccessory:]
  -[ACCMediaLibraryShim _checkForDifferentRadioLibrary]
  -[ACCMediaLibraryShim _checkForDifferentMediaLibraries]
  -[ACCMediaLibraryShim _sendLibraryInfoList]
  -[ACCMediaLibraryShim _handleSubscribedToAppleMusicChanged:]
  -[ACCMediaLibraryShim initWithAccessory:windowPerLibrary:delegate:]
  -[ACCMediaLibraryShim startShimForAccessoryAttach:]
  -[ACCMediaLibraryShim startSendingMediaLibraryInfomationUpdates]
  -[ACCMediaLibraryShim stopSendingMediaLibraryInfomationUpdates]
  -[ACCMediaLibraryShim startMediaLibraryUpdate:lastRevision:requestedInfo:]
  -[ACCMediaLibraryShim stopMediaLibraryUpdate:]
  -[ACCMediaLibraryShim stopAllMediaLibraryUpdate]
  -[ACCMediaLibraryShim playMediaLibraryCurrentSelection:]
  -[ACCMediaLibraryShim playMediaLibraryItems:itemList:firstItemIndex:]
  -[ACCMediaLibraryShim playMediaLibraryCollection:collection:type:firstItemIndex:]
  -[ACCMediaLibraryShim playMediaLibraryCollection:collection:type:firstItemPersistentID:]
  -[ACCMediaLibraryShim playAllSongs:]
  -[ACCMediaLibraryShim playAllSongs:firstItemPersistentID:]
  -[ACCMediaLibraryShim confirmMediaLibraryUpdate:lastRevision:updateCount:]
  -[ACCMediaLibraryShim confirmMediaLibraryPlaylistContentUpdate:lastRevision:]
  -[ACCMediaLibraryShim libraryInfoUpdateQ]
  -[ACCMediaLibraryShim libraryList]
  -[ACCMediaLibraryShim deviceLibrary]
  -[ACCMediaLibraryShim radioLibrary]
  -[ACCMediaLibraryShim isSubscribedToAppleMusic]
  -[ACCMediaLibraryShim setIsSubscribedToAppleMusic:]


ACCMediaLibraryFeaturePlugin : NSObject <ACCMediaLibraryProviderDelegateProtocol, ACCMediaLibraryShimDelegate, ACCFeaturePluginProtocol>
 @property  BOOL isRunning
 @property  ACCMediaLibraryProvider *mediaLibraryProvider
 @property  NSMutableDictionary *mediaLibraryShimList
 @property  NSObject<OS_dispatch_queue> *mediaLibraryCBProcessQ
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  ACCMediaLibraryProvider *provider
 @property  NSString *pluginName

  // instance methods
  -[ACCMediaLibraryFeaturePlugin stopPlugin]
  -[ACCMediaLibraryFeaturePlugin setIsRunning:]
  -[ACCMediaLibraryFeaturePlugin pluginName]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:play:itemList:firstItemIndex:accessory:]
  -[ACCMediaLibraryFeaturePlugin initPlugin]
  -[ACCMediaLibraryFeaturePlugin startPlugin]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:stopUpdate:accessory:]
  -[ACCMediaLibraryFeaturePlugin .cxx_destruct]
  -[ACCMediaLibraryFeaturePlugin isRunning]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:accessoryUpdate:windowPerLibrary:]
  -[ACCMediaLibraryFeaturePlugin setMediaLibraryProvider:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:confirmUpdate:lastRevision:updateCount:accessory:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:accessoryArrived:windowPerLibrary:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:play:collection:type:firstItemIndex:accessory:]
  -[ACCMediaLibraryFeaturePlugin mediaLibraryCBProcessQ]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:confirmPlaylistContentUpdate:lastRevision:accessory:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:startUpdate:lastRevision:requestedInfo:accessory:]
  -[ACCMediaLibraryFeaturePlugin notify:stateChange:enabled:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:stopAllUpdate:]
  -[ACCMediaLibraryFeaturePlugin setMediaLibraryCBProcessQ:]
  -[ACCMediaLibraryFeaturePlugin setMediaLibraryShimList:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:accessoryLeft:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:playAllSongs:firstItemPersistentID:accessory:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:play:collection:type:firstItemPersistentID:accessory:]
  -[ACCMediaLibraryFeaturePlugin mediaLibraryShimList]
  -[ACCMediaLibraryFeaturePlugin notifyAvailableLibraries:]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:playAllSongs:accessory:]
  -[ACCMediaLibraryFeaturePlugin provider]
  -[ACCMediaLibraryFeaturePlugin mediaLibraryProvider]
  -[ACCMediaLibraryFeaturePlugin mediaLibrary:playCurrentSelection:accessory:]


WorkspaceObserver : LSApplicationWorkspaceObserver
 @property  NSObject<WorkspaceObserverDelegate> *delegate

  // instance methods
  -[WorkspaceObserver applicationsDidUninstall:]
  -[WorkspaceObserver applicationsDidInstall:]
  -[WorkspaceObserver startObserving]
  -[WorkspaceObserver .cxx_destruct]
  -[WorkspaceObserver applicationsWillUninstall:]
  -[WorkspaceObserver setDelegate:]
  -[WorkspaceObserver applicationsWillInstall:]
  -[WorkspaceObserver stopObserving]
  -[WorkspaceObserver delegate]


ACCStatInfoAccumulator : NSObject
 @property  NSString *name
 @property  NSDate *startTime
 @property  NSDate *lastUpdateTime
 @property  unsigned long start
 @property  unsigned long max
 @property  unsigned long last
 @property  unsigned long accum
 @property  unsigned long count
 @property  unsigned long average

  // instance methods
  -[ACCStatInfoAccumulator max]
  -[ACCStatInfoAccumulator add:]
  -[ACCStatInfoAccumulator name]
  -[ACCStatInfoAccumulator .cxx_destruct]
  -[ACCStatInfoAccumulator accum]
  -[ACCStatInfoAccumulator count]
  -[ACCStatInfoAccumulator initWithName:]
  -[ACCStatInfoAccumulator last]
  -[ACCStatInfoAccumulator init]
  -[ACCStatInfoAccumulator lastUpdateTime]
  -[ACCStatInfoAccumulator reset]
  -[ACCStatInfoAccumulator startTime]
  -[ACCStatInfoAccumulator average]
  -[ACCStatInfoAccumulator start]
  -[ACCStatInfoAccumulator set:]
  -[ACCStatInfoAccumulator timeIntervalSinceStart]
  -[ACCStatInfoAccumulator timeIntervalSinceLastUpdate]
  -[ACCStatInfoAccumulator initWithName:initValue:]


ACCMemUsageStatInfo : NSObject
 @property  NSString *name
 @property  NSDate *startTime
 @property  NSDate *lastUpdateTime
 @property  ACCStatInfoAccumulator *residentMem
 @property  ACCStatInfoAccumulator *virtualMem
 @property  ACCStatInfoAccumulator *physFootprintMem

  // instance methods
  -[ACCMemUsageStatInfo name]
  -[ACCMemUsageStatInfo setInfo:]
  -[ACCMemUsageStatInfo .cxx_destruct]
  -[ACCMemUsageStatInfo initWithName:]
  -[ACCMemUsageStatInfo init]
  -[ACCMemUsageStatInfo lastUpdateTime]
  -[ACCMemUsageStatInfo startTime]
  -[ACCMemUsageStatInfo residentMem]
  -[ACCMemUsageStatInfo virtualMem]
  -[ACCMemUsageStatInfo physFootprintMem]
  -[ACCMemUsageStatInfo initWithName:andInfo:]
  -[ACCMemUsageStatInfo updateResident:virtualValue:physFootprintValue:]
  -[ACCMemUsageStatInfo timeIntervalSinceStart]
  -[ACCMemUsageStatInfo timeIntervalSinceLastUpdate]


ACCMemUsageStat : NSObject
 @property  NSString *name
 @property  ACCMemUsageStatInfo *statInfo
 @property  NSMutableDictionary *markList

  // instance methods
  -[ACCMemUsageStat mark:]
  -[ACCMemUsageStat statInfo]
  -[ACCMemUsageStat name]
  -[ACCMemUsageStat .cxx_destruct]
  -[ACCMemUsageStat update]
  -[ACCMemUsageStat initWithName:]
  -[ACCMemUsageStat init]
  -[ACCMemUsageStat timeIntervalSinceStart]
  -[ACCMemUsageStat timeIntervalSinceLastUpdate]
  -[ACCMemUsageStat getMark:]
  -[ACCMemUsageStat removeMark:]
  -[ACCMemUsageStat timeIntervalSinceMark:]
  -[ACCMemUsageStat markList]


01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryProvider 
01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryUpdateItem 
01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryUpdateLibraryInfo 
01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryUpdatePlaylist 
01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryUpdatePlaylistContent 
01 00 0400 /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary: ACCMediaLibraryUpdatePlaylistContentItem 
01 00 0c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0c00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspaceObserver 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPCloudController 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItem 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaItemCollection 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaLibrary 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPlaylist 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMusicPlayerController 
01 00 0700 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRadioLibrary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
