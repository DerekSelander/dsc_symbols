|| __DATA.__common _gAllocatedBytes
|| __DATA.__data _gACMLoggingLevel
|| __DATA.__objc_data _OBJC_CLASS_$_ACCAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_ACCAnalyticsLogger
|| __DATA.__objc_data _OBJC_CLASS_$_ACCAnalyticsLoggerSQLiteStore
|| __DATA.__objc_data _OBJC_CLASS_$_ACCObjCType
|| __DATA.__objc_data _OBJC_CLASS_$_ACCSQLite
|| __DATA.__objc_data _OBJC_CLASS_$_ACCSQLiteStatement
|| __DATA.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryAuthCP
|| __DATA.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryConfigStream
|| __DATA.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryEA
|| __DATA.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryOOBPairing
|| __DATA.__objc_data _OBJC_CLASS_$_ACCUserDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_ACCUserNotification
|| __DATA.__objc_data _OBJC_CLASS_$_ACCUserNotificationManager
|| __DATA.__objc_data _OBJC_CLASS_$_BootArgs
|| __DATA.__objc_data _OBJC_CLASS_$_DeferredAuthCPServiceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_DeferredEAServiceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCAnalyticsLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCAnalyticsLoggerSQLiteStore
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCObjCType
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCSQLite
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCSQLiteStatement
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryAuthCP
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryConfigStream
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryEA
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryOOBPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCUserDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_ACCUserNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_BootArgs
|| __DATA.__objc_data _OBJC_METACLASS_$_DeferredAuthCPServiceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_DeferredEAServiceWrapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._className
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._code
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._encoding
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCObjCType._size
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCSQLiteStatement._SQL
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCSQLiteStatement._SQLite
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCSQLiteStatement._handle
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCSQLiteStatement._reset
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCSQLiteStatement._temporaryBoundObjects
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCTransportIOAccessoryBase._ioConnect
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCTransportIOAccessoryBase._ioNotificationObject
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCTransportIOAccessoryBase._ioNotificationPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_ACCTransportIOAccessoryBase._notificationPortQueue
|| __DATA_CONST.__const _ACCAnalyticsLoggerColumnData
|| __DATA_CONST.__const _ACCAnalyticsLoggerColumnDate
|| __DATA_CONST.__const _ACCAnalyticsLoggerColumnEventType
|| __DATA_CONST.__const _ACCAnalyticsLoggerColumnSuccessCount
|| __DATA_CONST.__const _ACCAnalyticsLoggerColumnWrapFailureCount
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroDBCountsString
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventBuild
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventModelString
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventPlatform
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventProductType
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventProductVersion
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventTime
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroEventType
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroHealthSummaryEvent
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroPostTime
|| __DATA_CONST.__const _ACCAnalyticsLoggerFigaroTopic
|| __DATA_CONST.__const _ACCAnalyticsLoggerTableAllEvents
|| __DATA_CONST.__const _ACCAnalyticsLoggerTableSuccessCount
|| __DATA_CONST.__const _ACCAnalyticsLoggerUploadDate
|| __DATA_CONST.__const _ACCAnalyticsUserDefaultsSuite
|| __DATA_CONST.__const _ACCTransportIOAccessory_IOAccessoryManagerArrivedNotification
|| __DATA_CONST.__const _ACCTransportIOAccessory_USBHostPluginArrivedNotification
|| __DATA_CONST.__const _ACCUserDefaultsDomain
|| __DATA_CONST.__const _ACCUserDefaultsIapdDomain
|| __DATA_CONST.__const _ACCUserDefaultsIapdKey_ChargingPowerBehavior
|| __DATA_CONST.__const _ACCUserDefaultsIapdKey_ChargingPowerOverride
|| __DATA_CONST.__const _ACCUserDefaultsIapdKey_PretendAccessoryType
|| __DATA_CONST.__const _ACCUserDefaultsIapdKey_PretendBatteryLevel
|| __DATA_CONST.__const _ACCUserDefaultsIapdNotification
|| __DATA_CONST.__const _ACCUserDefaultsKey_ACCAuthProtocolAllowMutualAuth
|| __DATA_CONST.__const _ACCUserDefaultsKey_ACCAuthProtocolMaxMessageSize
|| __DATA_CONST.__const _ACCUserDefaultsKey_ACCAuthProtocolPretendAuth
|| __DATA_CONST.__const _ACCUserDefaultsKey_ACCAuthProtocolRoleSupport
|| __DATA_CONST.__const _ACCUserDefaultsKey_AllowACCAuthProtocolOnAllTransport
|| __DATA_CONST.__const _ACCUserDefaultsKey_AllowMFi4DevCertsOnProdDevice
|| __DATA_CONST.__const _ACCUserDefaultsKey_AllowNFCColorOverride
|| __DATA_CONST.__const _ACCUserDefaultsKey_AuthCPStartDelayMs
|| __DATA_CONST.__const _ACCUserDefaultsKey_AuthTTRForAllTransports
|| __DATA_CONST.__const _ACCUserDefaultsKey_BypassTrustDialog
|| __DATA_CONST.__const _ACCUserDefaultsKey_DeviceIdentityPreArmDateOverride
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableAACPAuth
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableACCAuthProtocolOnInductive
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableAMSHookUp
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableCertSupport
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableCertVerification
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableChinaInductiveTx
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableIAPHVCFixForAuth
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableSNOnly
|| __DATA_CONST.__const _ACCUserDefaultsKey_DisableWirelessCTA
|| __DATA_CONST.__const _ACCUserDefaultsKey_EnableACCAuthProtocolOnNFC
|| __DATA_CONST.__const _ACCUserDefaultsKey_EnableAuthTimeoutTTR
|| __DATA_CONST.__const _ACCUserDefaultsKey_EnableDEVNCertSupport
|| __DATA_CONST.__const _ACCUserDefaultsKey_EnableTrustDialog
|| __DATA_CONST.__const _ACCUserDefaultsKey_ForceAuthFail
|| __DATA_CONST.__const _ACCUserDefaultsKey_ForceAuthTimeout
|| __DATA_CONST.__const _ACCUserDefaultsKey_IdentityCertRefreshInterval
|| __DATA_CONST.__const _ACCUserDefaultsKey_IdentityCertRefreshState
|| __DATA_CONST.__const _ACCUserDefaultsKey_IdentityCertUseIndex
|| __DATA_CONST.__const _ACCUserDefaultsKey_IdentityCertUseTime
|| __DATA_CONST.__const _ACCUserDefaultsKey_IgnoreAACPAuthStatus
|| __DATA_CONST.__const _ACCUserDefaultsKey_IgnoreIsOnAC
|| __DATA_CONST.__const _ACCUserDefaultsKey_KeepAACPAuthData
|| __DATA_CONST.__const _ACCUserDefaultsKey_KnownAccessories
|| __DATA_CONST.__const _ACCUserDefaultsKey_NFCAnalyticsDate
|| __DATA_CONST.__const _ACCUserDefaultsKey_NFCColorOverride
|| __DATA_CONST.__const _ACCUserDefaultsKey_NFCSecondaryColorOverride
|| __DATA_CONST.__const _ACCUserDefaultsKey_OverrideCanReceiveInductivePowerOID
|| __DATA_CONST.__const _ACCUserDefaultsKey_PowerSourceUpdateBehavior
|| __DATA_CONST.__const _ACCUserDefaultsKey_ShowHiddenAccessories
|| __DATA_CONST.__const _ACCUserDefaultsKey_TreatAuthCPDEVNAsV3
|| __DATA_CONST.__const _ACCUserDefaultsKey_UseCertDataPropertyForAuth
|| __DATA_CONST.__const _ACCUserDefaultsLoggingDomain
|| __DATA_CONST.__const _ACCUserDefaultsLoggingKey_TransportSignpost
|| __DATA_CONST.__const _ACCUserDefaultsNotification
|| __DATA_CONST.__const _kCFACCUserDefaultsIapdKey_ChargingPowerBehavior
|| __DATA_CONST.__const _kCFACCUserDefaultsIapdKey_ChargingPowerOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsIapdKey_PretendAccessoryType
|| __DATA_CONST.__const _kCFACCUserDefaultsIapdKey_PretendBatteryLevel
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ACCAuthProtocolAllowMutualAuth
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ACCAuthProtocolMaxMessageSize
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ACCAuthProtocolPretendAuth
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ACCAuthProtocolRoleSupport
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AllowACCAuthProtocolOnAllTransport
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AllowMFi4DevCertsOnProdDevice
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AllowNFCColorOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AuthCPStartDelayMs
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AuthTTRForAllTransports
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_AuthenticationOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DeviceIdentityPreArmDateOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableAACPAuth
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableACCAuthProtocolOnInductive
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableAMSHookUp
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableCertSupport
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableCertVerification
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableChinaInductiveTx
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableIAPHVCFixForAuth
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableSNOnly
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_DisableWirelessCTA
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_EnableACCAuthProtocolOnNFC
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_EnableAuthTimeoutTTR
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_EnableDEVNCertSupport
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_EnableTrustDialog
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ForceAuthFail
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_ForceAuthTimeout
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IdentityCertRefreshInterval
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IdentityCertRefreshState
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IdentityCertUseIndex
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IdentityCertUseTime
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IgnoreAACPAuthStatus
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_IgnoreIsOnAC
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_KeepAACPAuthData
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_MaxOutboundiAP2PacketSize
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_NFCAnalyticsDate
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_NFCColorOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_NFCSecondaryColorOverride
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_OverrideCanReceiveInductivePowerOID
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_PowerSourceUpdateBehavior
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_TreatAuthCPDEVNAsV3
|| __DATA_CONST.__const _kCFACCUserDefaultsKey_UseCertDataPropertyForAuth
|| __DATA_CONST.__const _kCFACCUserDefaultsLoggingKey_TransportSignpost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCSettingsState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessoryPort
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportIOAccessorySharedManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACCTransportPluginIOAccessoryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCSettingsState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessoryPort
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportIOAccessorySharedManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACCTransportPluginIOAccessoryManager
|| __TEXT.__text _ACCSQLiteJournalSuffixes
|| __TEXT.__text _ACMContextAddCredential
|| __TEXT.__text _ACMContextAddCredentialWithScope
|| __TEXT.__text _ACMContextContainsCredentialType
|| __TEXT.__text _ACMContextContainsCredentialTypeEx
|| __TEXT.__text _ACMContextContainsPassphraseCredentialWithPurpose
|| __TEXT.__text _ACMContextCreate
|| __TEXT.__text _ACMContextCreateWithExternalForm
|| __TEXT.__text _ACMContextCredentialGetProperty
|| __TEXT.__text _ACMContextDelete
|| __TEXT.__text _ACMContextGetData
|| __TEXT.__text _ACMContextGetDataEx
|| __TEXT.__text _ACMContextGetDataProperty
|| __TEXT.__text _ACMContextGetExternalForm
|| __TEXT.__text _ACMContextGetInfo
|| __TEXT.__text _ACMContextGetTrackingNumber
|| __TEXT.__text _ACMContextRemoveCredentialsByType
|| __TEXT.__text _ACMContextRemoveCredentialsByTypeAndScope
|| __TEXT.__text _ACMContextRemoveCredentialsByValue
|| __TEXT.__text _ACMContextRemoveCredentialsByValueAndScope
|| __TEXT.__text _ACMContextRemovePassphraseCredentialsByPurposeAndScope
|| __TEXT.__text _ACMContextReplacePassphraseCredentialsWithScope
|| __TEXT.__text _ACMContextSetData
|| __TEXT.__text _ACMContextSetDataEx
|| __TEXT.__text _ACMContextVerifyAclConstraint
|| __TEXT.__text _ACMContextVerifyAclConstraintForOperation
|| __TEXT.__text _ACMContextVerifyPolicy
|| __TEXT.__text _ACMContextVerifyPolicyEx
|| __TEXT.__text _ACMContextVerifyPolicyWithPreflight
|| __TEXT.__text _ACMCredentialCreate
|| __TEXT.__text _ACMCredentialDelete
|| __TEXT.__text _ACMCredentialGetProperty
|| __TEXT.__text _ACMCredentialGetPropertyData
|| __TEXT.__text _ACMCredentialGetType
|| __TEXT.__text _ACMCredentialSetProperty
|| __TEXT.__text _ACMGetAclAuthMethod
|| __TEXT.__text _ACMGetEnvironmentVariable
|| __TEXT.__text _ACMGlobalContextAddCredential
|| __TEXT.__text _ACMGlobalContextCredentialGetProperty
|| __TEXT.__text _ACMGlobalContextRemoveCredentialsByType
|| __TEXT.__text _ACMGlobalContextVerifyPolicy
|| __TEXT.__text _ACMKernelControl
|| __TEXT.__text _ACMParseAclAndCopyConstraintCharacteristics
|| __TEXT.__text _ACMPing
|| __TEXT.__text _ACMRequirementGetPriority
|| __TEXT.__text _ACMRequirementGetProperties
|| __TEXT.__text _ACMRequirementGetProperty
|| __TEXT.__text _ACMRequirementGetPropertyData
|| __TEXT.__text _ACMRequirementGetState
|| __TEXT.__text _ACMRequirementGetSubrequirements
|| __TEXT.__text _ACMRequirementGetType
|| __TEXT.__text _ACMSetEnvironmentVariable
|| __TEXT.__text _ACMSetEnvironmentVariableWithAccessPolicy
|| __TEXT.__text _AuthCPNotifyEvent
|| __TEXT.__text _CompareCredentials
|| __TEXT.__text _CopyCredential
|| __TEXT.__text _DeallocCredentialList
|| __TEXT.__text _DeserializeAddCredential
|| __TEXT.__text _DeserializeAddCredentialType
|| __TEXT.__text _DeserializeCredential
|| __TEXT.__text _DeserializeCredentialList
|| __TEXT.__text _DeserializeGetContextProperty
|| __TEXT.__text _DeserializeProcessAcl
|| __TEXT.__text _DeserializeRemoveCredential
|| __TEXT.__text _DeserializeReplacePassphraseCredential
|| __TEXT.__text _DeserializeRequirement
|| __TEXT.__text _DeserializeVerifyAclConstraint
|| __TEXT.__text _DeserializeVerifyPolicy
|| __TEXT.__text _EnableAccessoryPowerForPortService
|| __TEXT.__text _GetSerializedAddCredentialSize
|| __TEXT.__text _GetSerializedCredentialSize
|| __TEXT.__text _GetSerializedGetContextPropertySize
|| __TEXT.__text _GetSerializedProcessAclSize
|| __TEXT.__text _GetSerializedRemoveCredentialSize
|| __TEXT.__text _GetSerializedReplacePassphraseCredentialSize
|| __TEXT.__text _GetSerializedRequirementSize
|| __TEXT.__text _GetSerializedVerifyAclConstraintSize
|| __TEXT.__text _GetSerializedVerifyPolicySize
|| __TEXT.__text _LibCall_ACMContexAddCredentialWithScope
|| __TEXT.__text _LibCall_ACMContexRemoveCredentialsByTypeAndScope
|| __TEXT.__text _LibCall_ACMContextCreate
|| __TEXT.__text _LibCall_ACMContextCreateWithExternalForm
|| __TEXT.__text _LibCall_ACMContextCredentialGetProperty
|| __TEXT.__text _LibCall_ACMContextDelete
|| __TEXT.__text _LibCall_ACMContextGetData
|| __TEXT.__text _LibCall_ACMContextGetInfo
|| __TEXT.__text _LibCall_ACMContextLoadFromImage
|| __TEXT.__text _LibCall_ACMContextRemoveCredentialsByValueAndScope
|| __TEXT.__text _LibCall_ACMContextSetData
|| __TEXT.__text _LibCall_ACMContextUnloadToImage
|| __TEXT.__text _LibCall_ACMContextUnloadToImage_Block
|| __TEXT.__text _LibCall_ACMContextVerifyAclConstraint
|| __TEXT.__text _LibCall_ACMContextVerifyAclConstraintForOperation
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyAndCopyRequirementEx
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyEx
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyEx_Block
|| __TEXT.__text _LibCall_ACMContextVerifyPolicyWithPreflight_Block
|| __TEXT.__text _LibCall_ACMContextVerifyPolicy_Block
|| __TEXT.__text _LibCall_ACMCredentialCreate
|| __TEXT.__text _LibCall_ACMCredentialDelete
|| __TEXT.__text _LibCall_ACMCredentialGetPropertyData
|| __TEXT.__text _LibCall_ACMCredentialGetType
|| __TEXT.__text _LibCall_ACMCredentialSetProperty
|| __TEXT.__text _LibCall_ACMGetAclAuthMethod_Block
|| __TEXT.__text _LibCall_ACMGetEnvironmentVariable
|| __TEXT.__text _LibCall_ACMGetEnvironmentVariable_Block
|| __TEXT.__text _LibCall_ACMGlobalContextCredentialGetProperty
|| __TEXT.__text _LibCall_ACMGlobalContextCredentialGetProperty_Block
|| __TEXT.__text _LibCall_ACMGlobalContextVerifyPolicyEx
|| __TEXT.__text _LibCall_ACMGlobalContextVerifyPolicy_Block
|| __TEXT.__text _LibCall_ACMKernDoubleClickNotify
|| __TEXT.__text _LibCall_ACMKernelControl
|| __TEXT.__text _LibCall_ACMKernelControl_Block
|| __TEXT.__text _LibCall_ACMPing
|| __TEXT.__text _LibCall_ACMPublishTrustedAccessories
|| __TEXT.__text _LibCall_ACMRequirementDelete
|| __TEXT.__text _LibCall_ACMRequirementGetPriority
|| __TEXT.__text _LibCall_ACMRequirementGetPropertyData
|| __TEXT.__text _LibCall_ACMRequirementGetState
|| __TEXT.__text _LibCall_ACMRequirementGetType
|| __TEXT.__text _LibCall_ACMSecContextProcessAcl
|| __TEXT.__text _LibCall_ACMSecContextProcessAclAndCopyAuthMethod
|| __TEXT.__text _LibCall_ACMSecContextVerifyAclConstraintAndCopyRequirement
|| __TEXT.__text _LibCall_ACMSecSetBiometryAvailability
|| __TEXT.__text _LibCall_ACMSecSetBuiltinBiometry
|| __TEXT.__text _LibCall_ACMSetEnvironmentVariable
|| __TEXT.__text _LibCall_ACMTRMLoadState
|| __TEXT.__text _LibCall_ACMTRMLoadState_Block
|| __TEXT.__text _LibCall_ACMTRMSaveState
|| __TEXT.__text _LibCall_BuildCommand
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_Deserialize
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_GetSize
|| __TEXT.__text _LibSer_ContextCredentialGetProperty_Serialize
|| __TEXT.__text _LibSer_DeleteContext_Deserialize
|| __TEXT.__text _LibSer_DeleteContext_GetSize
|| __TEXT.__text _LibSer_DeleteContext_Serialize
|| __TEXT.__text _LibSer_GetAclAuthMethod_Deserialize
|| __TEXT.__text _LibSer_GetAclAuthMethod_GetSize
|| __TEXT.__text _LibSer_GetAclAuthMethod_Serialize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_Deserialize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_GetSize
|| __TEXT.__text _LibSer_GlobalContextCredentialGetProperty_Serialize
|| __TEXT.__text _LibSer_RemoveCredentialByType_Deserialize
|| __TEXT.__text _LibSer_RemoveCredentialByType_GetSize
|| __TEXT.__text _LibSer_RemoveCredentialByType_Serialize
|| __TEXT.__text _LibSer_StorageAnyCmd_DeserializeCommonFields
|| __TEXT.__text _LibSer_StorageGetData_Deserialize
|| __TEXT.__text _LibSer_StorageGetData_GetSize
|| __TEXT.__text _LibSer_StorageGetData_Serialize
|| __TEXT.__text _LibSer_StorageSetData_Deserialize
|| __TEXT.__text _LibSer_StorageSetData_GetSize
|| __TEXT.__text _LibSer_StorageSetData_Serialize
|| __TEXT.__text _SerializeAddCredential
|| __TEXT.__text _SerializeCredential
|| __TEXT.__text _SerializeCredentialList
|| __TEXT.__text _SerializeGetContextProperty
|| __TEXT.__text _SerializeProcessAcl
|| __TEXT.__text _SerializeRemoveCredential
|| __TEXT.__text _SerializeReplacePassphraseCredential
|| __TEXT.__text _SerializeRequirement
|| __TEXT.__text _SerializeVerifyAclConstraint
|| __TEXT.__text _SerializeVerifyPolicy
|| __TEXT.__text _Util_AllocCredential
|| __TEXT.__text _Util_AllocRequirement
|| __TEXT.__text _Util_CreateRequirement
|| __TEXT.__text _Util_DeallocCredential
|| __TEXT.__text _Util_DeallocRequirement
|| __TEXT.__text _Util_GetBitCount
|| __TEXT.__text _Util_KeybagLockStateToEnvVar
|| __TEXT.__text _Util_ReadFromBuffer
|| __TEXT.__text _Util_SafeDeallocParameters
|| __TEXT.__text _Util_WriteToBuffer
|| __TEXT.__text _Util_hexDumpToStrHelper
|| __TEXT.__text _Util_isNonNullEqualMemory
|| __TEXT.__text _Util_isNullOrZeroMemory
|| __TEXT.__text _WeakLinkClass
|| __TEXT.__text _WeakLinkStringConstant
|| __TEXT.__text _WeakLinkSymbol
|| __TEXT.__text ___isForcePassthroughIOAccessoryManagerPort
|| __TEXT.__text __checkSpringBoardStarted
|| __TEXT.__text __getAuthErrorString
|| __TEXT.__text __getFDRStatusString
|| __TEXT.__text __modelNumber
|| __TEXT.__text __platform
|| __TEXT.__text __productType
|| __TEXT.__text __productVersion
|| __TEXT.__text _acc_analytics_createBucketizeBatteryPackConnectionDuration
|| __TEXT.__text _acc_analytics_createBucketizePowerSourceChargingTime
|| __TEXT.__text _acc_analytics_createBucketizedAnalyticEventDuration
|| __TEXT.__text _acc_analytics_createBucketizedBatteryChargeDelta
|| __TEXT.__text _acc_analytics_createBucketizedBatteryChargeLevel
|| __TEXT.__text _acc_analytics_createBucketizedInductiveAuthDuration
|| __TEXT.__text _acc_analytics_createBucketizedUnlockDialogAnalyticEventTime
|| __TEXT.__text _acc_analytics_createBucketizedWiredAuthDuration
|| __TEXT.__text _acc_policies_allowACCAuthProtocolOnAllTransport
|| __TEXT.__text _acc_policies_allowACCAuthProtocolOnTransport
|| __TEXT.__text _acc_policies_allowAudioProductCertsOnTransport
|| __TEXT.__text _acc_policies_deviceDidPreArmDeviceIdentity
|| __TEXT.__text _acc_policies_deviceNeedsPreArmDeviceIdentity
|| __TEXT.__text _acc_policies_endpointRequiresChargingCurrentLimit
|| __TEXT.__text _acc_policies_endpointRequiresUserAuthorization
|| __TEXT.__text _acc_policies_isTransportSupervised
|| __TEXT.__text _acc_policies_productTypeNeedsPreArmDeviceIdentity
|| __TEXT.__text _acc_policies_shouldFailAuthOnOOBPairingFailure
|| __TEXT.__text _acc_policies_shouldHideAccessoryWithModelNumber
|| __TEXT.__text _acc_policies_shouldOverrideNameOnAccessoryWithModelNumber
|| __TEXT.__text _acc_policies_shouldResetLightningBusWhenTransportIsNoLongerRestricted
|| __TEXT.__text _acc_policies_supportInductivePowerTX
|| __TEXT.__text _acc_restrictedMode_accessoryAttached
|| __TEXT.__text _acc_restrictedMode_accessoryDetached
|| __TEXT.__text _acc_tapToRadar_InitiateAuthFailureTTR
|| __TEXT.__text _acc_tapToRadar_InitiateAuthTimeoutTTR
|| __TEXT.__text _acc_tapToRadar_authFailure
|| __TEXT.__text _acc_tapToRadar_authTimeout
|| __TEXT.__text _acc_userDefaultsIapd_boolForKey
|| __TEXT.__text _acc_userDefaultsIapd_copyArrayForKey
|| __TEXT.__text _acc_userDefaultsIapd_copyDictionaryForKey
|| __TEXT.__text _acc_userDefaultsIapd_copyDoubleForKey
|| __TEXT.__text _acc_userDefaultsIapd_copyIntegerForKey
|| __TEXT.__text _acc_userDefaultsIapd_copyStringForKey
|| __TEXT.__text _acc_userDefaultsLogging_boolForKey
|| __TEXT.__text _acc_userDefaults_boolForKey
|| __TEXT.__text _acc_userDefaults_copyArrayForKey
|| __TEXT.__text _acc_userDefaults_copyDictionaryForKey
|| __TEXT.__text _acc_userDefaults_copyDoubleForKey
|| __TEXT.__text _acc_userDefaults_copyIntegerForKey
|| __TEXT.__text _acc_userDefaults_copyStringForKey
|| __TEXT.__text _acc_userDefaults_setArrayForKey
|| __TEXT.__text _acc_userDefaults_setDoubleForKey
|| __TEXT.__text _acc_userDefaults_setIntegerForKey
|| __TEXT.__text _acc_userNotifications_accessoryNotSupported
|| __TEXT.__text _acc_userNotifications_chargingNotSupported
|| __TEXT.__text _acc_userNotifications_devBatteryPackMismatch
|| __TEXT.__text _acc_userNotifications_disabledHSAID
|| __TEXT.__text _acc_userNotifications_generateIdentifier
|| __TEXT.__text _acc_userNotifications_prodBatteryPackMismatch
|| __TEXT.__text _acc_userNotifications_unlockToUseAccessories
|| __TEXT.__text _acm_explicit_bzero
|| __TEXT.__text _acm_get_mem
|| __TEXT.__text _acm_mem_alloc
|| __TEXT.__text _acm_mem_alloc_data
|| __TEXT.__text _acm_mem_alloc_info
|| __TEXT.__text _acm_mem_free
|| __TEXT.__text _acm_mem_free_data
|| __TEXT.__text _acm_mem_free_info
|| __TEXT.__text _getDEVNTempCertCapsForCable
|| __TEXT.__text _init_logging
|| __TEXT.__text _init_logging_signposts
|| __TEXT.__text _loadFrontBoard
|| __TEXT.__text _logModuleForTransport
|| __TEXT.__text _notifyUserHSAIDDisabled
|| __TEXT.__text _platform_systemInfo_copyBluetoothMACAddress
|| __TEXT.__text _platform_systemInfo_copyBluetoothMACAddressData
|| __TEXT.__text _platform_systemInfo_copySystemName
|| __TEXT.__text _platform_systemInfo_copyUniqueDeviceID
|| __TEXT.__text _platform_systemInfo_deviceType
|| __TEXT.__text _platform_systemInfo_isATV
|| __TEXT.__text _platform_systemInfo_isApplePencilGen1Supported
|| __TEXT.__text _platform_systemInfo_isApplePencilSupported
|| __TEXT.__text _platform_systemInfo_isFPGA
|| __TEXT.__text _platform_systemInfo_isIPad
|| __TEXT.__text _platform_systemInfo_isIPhone
|| __TEXT.__text _platform_systemInfo_isIPod
|| __TEXT.__text _platform_systemInfo_isInternalBuild
|| __TEXT.__text _platform_systemInfo_isWatch
|| __TEXT.__text _platform_systemInfo_supportsBatteryAuthentication
|| __TEXT.__text _prefetchDeviceIdentityCertificates
|| __TEXT.__text _systemInfo_copyDeviceClass
|| __TEXT.__text _systemInfo_copyProductType
|| __TEXT.__text _systemInfo_copyRegionCode
|| __TEXT.__text _systemInfo_getCurrentUnixTime
|| __TEXT.__text _systemInfo_getCurrentUnixTimeMS
|| __TEXT.__text _systemInfo_isDeveloperBuild
|| __TEXT.__text _systemInfo_isHomePod
|| __TEXT.__text _systemInfo_isInternalBuild
|| __TEXT.__text _systemInfo_systemSupportsPearl
|| __TEXT.__text _systemInfo_systemSupportsWAPI
|| __TEXT.__text _verifyAclConstraintInternal
__ CoreAccessories: _ACCPlatformIAPDBridge_PrimaryPortNumber
__ CoreAccessories: _ACCPlatformIAPDPort_B139B164Connected
__ CoreAccessories: _ACCPlatformIAPDPort_ConnectionUUID
__ CoreAccessories: _ACCPlatformIAPDPort_RequestB139B164ConnectedNotification
__ CoreAccessories: _ACCPlatformIAPDPort_RequestPrimaryPort
__ CoreAccessories: _ACCPlatformIAPDPort_ResistorID
__ CoreAccessories: _ACCPlatformIAPDPort_ResistorIDChangedNotification
__ CoreAccessories: _ACCPlatformIAPDPort_ReturnB139B164ConnectedNotification
__ CoreAccessories: _ACCPlatformIAPDPort_ReturnPrimaryPort
__ CoreAccessories: _ACCPlatformPowerPlugin_BatteryPackModeDidChangeNotification
__ CoreAccessories: _ACCPlatformPowerPlugin_ConnectionUUID
__ CoreAccessories: _ACCPlatformPowerPlugin_PowerDidChangeNotification
__ CoreAccessories: _ACCPlatformPowerPlugin_USBCurrentLimitDidChangeNotification
__ CoreAccessories: _ACCPlatformUSBModePlugin_ConnectionUUID
__ CoreAccessories: _ACCPlatformUSBModePlugin_USBMode
__ CoreAccessories: _ACCPlatformUSBModePlugin_USBModeDidChangeNotification
__ CoreAccessories: _OBJC_CLASS_$_ACCHWComponentAuth
__ CoreAccessories: _OBJC_CLASS_$_ACCTransportPlugin
__ CoreAccessories: _OBJC_METACLASS_$_ACCTransportPlugin
__ CoreAccessories: _acc_strings_bundle
__ CoreAccessories: _copyCertificateForFDRData
__ CoreAccessories: _kACCInfo_AccessoryDeviceUID
__ CoreAccessories: _kACCInfo_FirmwareVersionActive
__ CoreAccessories: _kACCInfo_HardwareVersion
__ CoreAccessories: _kACCInfo_Manufacturer
__ CoreAccessories: _kACCInfo_Model
__ CoreAccessories: _kACCInfo_Name
__ CoreAccessories: _kACCInfo_PPID
__ CoreAccessories: _kACCInfo_RegionCode
__ CoreAccessories: _kACCInfo_SerialNumber
__ CoreAccessories: _kACCProperties_Connection_DigitalID
__ CoreAccessories: _kACCProperties_Connection_PrimaryPortNumber
__ CoreAccessories: _kACCProperties_Endpoint_EA_SessionOpen
__ CoreAccessories: _kACCProperties_Endpoint_PortNumber
__ CoreAccessories: _kACCProperties_Endpoint_ResistorID
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationDisplayAlert
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CrashReporterSupport: _DiagnosticLogSubmissionEnabled
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLAuthenticationMethodServerTrust
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOConnectCallMethod
__ IOKit: _IOConnectCallScalarMethod
__ IOKit: _IOConnectCallStructMethod
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IOObjectRetain
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IORegistryEntryGetParentEntry
__ IOKit: _IORegistryEntryGetRegistryEntryID
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceClose
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceGetState
__ IOKit: _IOServiceMatching
__ IOKit: _IOServiceOpen
__ IOKit: _kIOMasterPortDefault
__ MFAAuthentication: _MFAAAddCertDataEntryToCache
__ MFAAuthentication: _MFAACanChargeHighVoltage
__ MFAAuthentication: _MFAACanChargeInductive
__ MFAAuthentication: _MFAACanReceiveInductivePower
__ MFAAuthentication: _MFAACanUseAccPwrLoV
__ MFAAuthentication: _MFAACanUseAccPwrUHPM
__ MFAAuthentication: _MFAACertificateAuthV2Class
__ MFAAuthentication: _MFAACertificateAuthVersionNumber
__ MFAAuthentication: _MFAACreateCapsFromAuthCert
__ MFAAuthentication: _MFAACreateCertDataFromSerialNumber
__ MFAAuthentication: _MFAACreateCertificateCache
__ MFAAuthentication: _MFAACreateCertificateSerialNumber
__ MFAAuthentication: _MFAACreateDEVNCertCapsForCable
__ MFAAuthentication: _MFAACreateRandomNonce
__ MFAAuthentication: _MFAACreateSerialNumberDataFromString
__ MFAAuthentication: _MFAACreateSerialNumberStringFromData
__ MFAAuthentication: _MFAADeallocAuthCertCaps
__ MFAAuthentication: _MFAADeallocCertificateCache
__ MFAAuthentication: _MFAADeviceIdentityCopyCertificate
__ MFAAuthentication: _MFAAIsAppleBatteryModule
__ MFAAuthentication: _MFAAIsAppleTouchControllerModule
__ MFAAuthentication: _MFAAIsDesenseBuild
__ MFAAuthentication: _MFAAIsDevelopmentHW
__ MFAAuthentication: _MFAAIsInternalBuild
__ MFAAuthentication: _MFAARemoveCertDataEntryFromCache
__ MFAAuthentication: _MFAAVerifyCertificateSerialNumber
__ MFAAuthentication: _MFAAVerifyCertificateSerialNumberBySerialNumber
__ MFAAuthentication: _MFAAVerifyNonceSignature
__ MFAAuthentication: _OBJC_CLASS_$_MFAACertificateManager
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ Security: _SecCertificateCopyComponentAttributes
__ Security: _SecCertificateCreateWithData
__ Security: _SecTrustEvaluate
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SpringBoardServices: _SBUserNotificationIgnoresQuietMode
__ SpringBoardServices: _SBUserNotificationSystemAperturePresentationKey
__ SpringBoardServices: _SBUserNotificationSystemSoundIDKey
__ libFDR.dylib: _AMFDRSealingMapCopyLocalDataForClass
__ libIOAccessoryManager.dylib: _IOAccesoryManagerGetDigitalIDAccessoryVersionInfo
__ libIOAccessoryManager.dylib: _IOAccessoryConfigStreamInterfaceGetCategories
__ libIOAccessoryManager.dylib: _IOAccessoryConfigStreamInterfaceGetCategoryProperties
__ libIOAccessoryManager.dylib: _IOAccessoryConfigStreamInterfaceGetProperty
__ libIOAccessoryManager.dylib: _IOAccessoryConfigStreamInterfaceRequestGetProperty
__ libIOAccessoryManager.dylib: _IOAccessoryConfigStreamInterfaceSetProperty
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceDockType
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceFirmwareRevision
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceHardwareRevision
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceModelNumber
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceName
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceSerialNumber
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyDeviceVendorName
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceCopyProtocolString
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceReceiveData
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceRegisterReceiveCallback
__ libIOAccessoryManager.dylib: _IOAccessoryEAInterfaceSendData
__ libIOAccessoryManager.dylib: _IOAccessoryManagerAllowFeatures
__ libIOAccessoryManager.dylib: _IOAccessoryManagerConfigurePower
__ libIOAccessoryManager.dylib: _IOAccessoryManagerConfigureUSBMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerCopyAccessoryDeviceUID
__ libIOAccessoryManager.dylib: _IOAccessoryManagerCopyDeviceInfo
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetAccessoryID
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetActivePowerMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetBatteryPackMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetDigitalID
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetPowerDuringSleep
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetPrimaryPort
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetServiceWithPrimaryPort
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetSleepPowerCurrentLimit
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetType
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUSBChargingVoltage
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUSBConnectType
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUSBCurrentLimit
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUSBCurrentLimitBase
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUSBCurrentLimitOffset
__ libIOAccessoryManager.dylib: _IOAccessoryManagerGetUpstreamService
__ libIOAccessoryManager.dylib: _IOAccessoryManagerPowerDuringSleepIsSupported
__ libIOAccessoryManager.dylib: _IOAccessoryManagerPowerModeCurrentLimit
__ libIOAccessoryManager.dylib: _IOAccessoryManagerRestoreUSBCurrentLimitBase
__ libIOAccessoryManager.dylib: _IOAccessoryManagerRevokeFeatures
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetAccessoryRequestedCurrent
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetAccessoryUsedCurrent
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetBatteryPackMode
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetPowerDuringSleep
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetUSBCurrentLimitBase
__ libIOAccessoryManager.dylib: _IOAccessoryManagerSetUSBCurrentOffset
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceDockType
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceFirmwareRevision
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceHardwareRevision
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceModelNumber
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceName
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceSerialNumber
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceCopyDeviceVendorName
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceGetActivePairingType
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceGetPairingData
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceGetPairingInfo
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceGetSupportedPairingTypes
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceRegisterReceiveCallback
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceSendPairingData
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceSendPairingInfo
__ libIOAccessoryManager.dylib: _IOAccessoryOOBPairingInterfaceSupports2Way
__ libIOAccessoryManager.dylib: _IOAccessoryPortCreateRunLoopSource
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetManagerPrimaryPort
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetManagerService
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetPort
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetServiceWithPort
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetStreamType
__ libIOAccessoryManager.dylib: _IOAccessoryPortGetTransportType
__ libIOAccessoryManager.dylib: _IOAccessoryPortTransmitData
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _usleep
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_close_v2
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
ACCTransportIOAccessoryOOBPairing : ACCTransportIOAccessoryBase
 @property  NSString *deviceVendorName
 @property  NSString *deviceName
 @property  NSString *deviceModelNumber
 @property  NSString *deviceHardwareRevision
 @property  NSString *deviceFirmwareRevision
 @property  NSString *deviceSerialNumber
 @property  NSString *deviceDockType
 @property  NSString *deviceUID
 @property  NSMutableData *deviceSupportedTypes
 @property  int activeType
 @property  NSNumber *supports2way
 @property  <ACCTransportIOAccessoryOOBPairingProtocol> *delegate
 @property  NSString *endpointUUID
 @property  NSString *parentConnectionUUID

  // instance methods
  -[ACCTransportIOAccessoryOOBPairing deviceUID]
  -[ACCTransportIOAccessoryOOBPairing setDeviceName:]
  -[ACCTransportIOAccessoryOOBPairing deviceVendorName]
  -[ACCTransportIOAccessoryOOBPairing setDelegate:]
  -[ACCTransportIOAccessoryOOBPairing setDeviceSerialNumber:]
  -[ACCTransportIOAccessoryOOBPairing delegate]
  -[ACCTransportIOAccessoryOOBPairing setDeviceFirmwareRevision:]
  -[ACCTransportIOAccessoryOOBPairing dealloc]
  -[ACCTransportIOAccessoryOOBPairing initWithDelegate:andIOService:]
  -[ACCTransportIOAccessoryOOBPairing .cxx_destruct]
  -[ACCTransportIOAccessoryOOBPairing transmitData:]
  -[ACCTransportIOAccessoryOOBPairing supportsType:]
  -[ACCTransportIOAccessoryOOBPairing deviceFirmwareRevision]
  -[ACCTransportIOAccessoryOOBPairing setEndpointUUID:]
  -[ACCTransportIOAccessoryOOBPairing setDeviceVendorName:]
  -[ACCTransportIOAccessoryOOBPairing deviceName]
  -[ACCTransportIOAccessoryOOBPairing deviceModelNumber]
  -[ACCTransportIOAccessoryOOBPairing setDeviceHardwareRevision:]
  -[ACCTransportIOAccessoryOOBPairing setDeviceUID:]
  -[ACCTransportIOAccessoryOOBPairing endpointUUID]
  -[ACCTransportIOAccessoryOOBPairing deviceSerialNumber]
  -[ACCTransportIOAccessoryOOBPairing setDeviceModelNumber:]
  -[ACCTransportIOAccessoryOOBPairing deviceHardwareRevision]
  -[ACCTransportIOAccessoryOOBPairing openServiceSession]
  -[ACCTransportIOAccessoryOOBPairing closeServiceSession]
  -[ACCTransportIOAccessoryOOBPairing _handleIncomingOOBPairingInfoData:]
  -[ACCTransportIOAccessoryOOBPairing _registerReadCallback]
  -[ACCTransportIOAccessoryOOBPairing _checkAccInfo]
  -[ACCTransportIOAccessoryOOBPairing _convertOOBPairingTypeFromIOAccessory:]
  -[ACCTransportIOAccessoryOOBPairing deviceDockType]
  -[ACCTransportIOAccessoryOOBPairing deviceSupportedTypes]
  -[ACCTransportIOAccessoryOOBPairing supports2way]
  -[ACCTransportIOAccessoryOOBPairing activeType]
  -[ACCTransportIOAccessoryOOBPairing setActiveType:]
  -[ACCTransportIOAccessoryOOBPairing parentConnectionUUID]
  -[ACCTransportIOAccessoryOOBPairing setParentConnectionUUID:]
  -[ACCTransportIOAccessoryOOBPairing setDeviceDockType:]
  -[ACCTransportIOAccessoryOOBPairing setDeviceSupportedTypes:]
  -[ACCTransportIOAccessoryOOBPairing setSupports2way:]


ACCAnalytics : ACCAnalyticsLogger
  // class methods
  +[ACCAnalytics loggerForUser:]

  // instance methods
  -[ACCAnalytics logACCAnalyticsForEventNamed:withAttributes:]


ACCTransportIOAccessoryConfigStream : ACCTransportIOAccessoryBase
 @property  NSString *deviceIdentifier
 @property  NSString *deviceName
 @property  NSString *deviceManufacturer
 @property  NSString *deviceModel
 @property  NSString *deviceHardwareVersion
 @property  NSString *deviceFirmwareVersion
 @property  NSString *deviceSerialNumber
 @property  NSString *devicePPID
 @property  BOOL accInfoValid
 @property  BOOL requestPending
 @property  BOOL categoriesAvailable
 @property  unsigned short requestedCategoryID
 @property  unsigned char requestedPropertyID
 @property  NSObject<OS_dispatch_source> *requestTimer
 @property  <ACCTransportIOAccessoryConfigStreamProtocol> *delegate
 @property  NSString *endpointUUID
 @property  NSString *parentConnectionUUID

  // instance methods
  -[ACCTransportIOAccessoryConfigStream deviceModel]
  -[ACCTransportIOAccessoryConfigStream setDeviceIdentifier:]
  -[ACCTransportIOAccessoryConfigStream deviceIdentifier]
  -[ACCTransportIOAccessoryConfigStream setDeviceName:]
  -[ACCTransportIOAccessoryConfigStream setDelegate:]
  -[ACCTransportIOAccessoryConfigStream setDeviceSerialNumber:]
  -[ACCTransportIOAccessoryConfigStream setRequestPending:]
  -[ACCTransportIOAccessoryConfigStream delegate]
  -[ACCTransportIOAccessoryConfigStream dealloc]
  -[ACCTransportIOAccessoryConfigStream initWithDelegate:andIOService:]
  -[ACCTransportIOAccessoryConfigStream .cxx_destruct]
  -[ACCTransportIOAccessoryConfigStream transmitData:]
  -[ACCTransportIOAccessoryConfigStream setDeviceHardwareVersion:]
  -[ACCTransportIOAccessoryConfigStream deviceHardwareVersion]
  -[ACCTransportIOAccessoryConfigStream setEndpointUUID:]
  -[ACCTransportIOAccessoryConfigStream setDeviceModel:]
  -[ACCTransportIOAccessoryConfigStream deviceName]
  -[ACCTransportIOAccessoryConfigStream requestPending]
  -[ACCTransportIOAccessoryConfigStream endpointUUID]
  -[ACCTransportIOAccessoryConfigStream deviceSerialNumber]
  -[ACCTransportIOAccessoryConfigStream requestTimer]
  -[ACCTransportIOAccessoryConfigStream setRequestTimer:]
  -[ACCTransportIOAccessoryConfigStream deviceManufacturer]
  -[ACCTransportIOAccessoryConfigStream setDeviceManufacturer:]
  -[ACCTransportIOAccessoryConfigStream openServiceSession]
  -[ACCTransportIOAccessoryConfigStream closeServiceSession]
  -[ACCTransportIOAccessoryConfigStream _checkAccInfo]
  -[ACCTransportIOAccessoryConfigStream parentConnectionUUID]
  -[ACCTransportIOAccessoryConfigStream setParentConnectionUUID:]
  -[ACCTransportIOAccessoryConfigStream _getCategories]
  -[ACCTransportIOAccessoryConfigStream _getPropertyData:forCategory:]
  -[ACCTransportIOAccessoryConfigStream _getStringProperty:forCategory:]
  -[ACCTransportIOAccessoryConfigStream _registerForInterestNotifications]
  -[ACCTransportIOAccessoryConfigStream IOAccessoryConfigStreamCopyCategories]
  -[ACCTransportIOAccessoryConfigStream IOAccessoryConfigStreamCopyDataForCategoryID:propertyID:]
  -[ACCTransportIOAccessoryConfigStream IOAccessoryConfigStreamRequestGetPropertyForCategoryID:propertyID:]
  -[ACCTransportIOAccessoryConfigStream IOAccessoryConfigStreamSetPropertyData:categoryID:propertyID:]
  -[ACCTransportIOAccessoryConfigStream handlePropertyDataReceived]
  -[ACCTransportIOAccessoryConfigStream deviceFirmwareVersion]
  -[ACCTransportIOAccessoryConfigStream devicePPID]
  -[ACCTransportIOAccessoryConfigStream categoriesAvailable]
  -[ACCTransportIOAccessoryConfigStream setCategoriesAvailable:]
  -[ACCTransportIOAccessoryConfigStream requestedCategoryID]
  -[ACCTransportIOAccessoryConfigStream setRequestedCategoryID:]
  -[ACCTransportIOAccessoryConfigStream requestedPropertyID]
  -[ACCTransportIOAccessoryConfigStream setRequestedPropertyID:]
  -[ACCTransportIOAccessoryConfigStream setDeviceFirmwareVersion:]
  -[ACCTransportIOAccessoryConfigStream setDevicePPID:]
  -[ACCTransportIOAccessoryConfigStream accInfoValid]
  -[ACCTransportIOAccessoryConfigStream setAccInfoValid:]


ACCAnalyticsLogger : NSObject <NSURLSessionDelegate>
 @property  int user
 @property  NSMutableArray *pluginEventsBeforeFirstUnlock
 @property  NSMutableArray *accessorydEventsBeforeFirstUnlock
 @property  NSLock *eventCacheLock
 @property  NSObject<OS_dispatch_queue> *loggingQueue
 @property  NSURL *figaroUploadURL
 @property  NSString *figaroTopicName
 @property  NSURL *figaroBagURL
 @property  BOOL allowsInsecureFigaroCert
 @property  BOOL ignoreServerDisablingMessages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACCAnalyticsLogger fuzzyDaysSinceDate:]
  +[ACCAnalyticsLogger loggerForUser:]
  +[ACCAnalyticsLogger databasePathForUser:]
  +[ACCAnalyticsLogger addBuiltInFieldsToEvent:]

  // instance methods
  -[ACCAnalyticsLogger setUser:]
  -[ACCAnalyticsLogger URLSession:didReceiveChallenge:completionHandler:]
  -[ACCAnalyticsLogger datePropertyForKey:]
  -[ACCAnalyticsLogger user]
  -[ACCAnalyticsLogger .cxx_destruct]
  -[ACCAnalyticsLogger initForUser:]
  -[ACCAnalyticsLogger setDateProperty:forKey:]
  -[ACCAnalyticsLogger loggingQueue]
  -[ACCAnalyticsLogger setLoggingQueue:]
  -[ACCAnalyticsLogger logEventNamed:withAttributes:]
  -[ACCAnalyticsLogger _logEventNamed:withAttributes:]
  -[ACCAnalyticsLogger resetUploadDateAndClearDBEntries:dueToError:]
  -[ACCAnalyticsLogger eventDictForEventName:withAttributes:]
  -[ACCAnalyticsLogger eventDictWithBlacklistedFieldsStrippedFrom:]
  -[ACCAnalyticsLogger figaroUploadURL]
  -[ACCAnalyticsLogger forceUploadWithError:httpStatusCode:]
  -[ACCAnalyticsLogger _onQueuePostJSON:error:httpStatusCode:]
  -[ACCAnalyticsLogger getLoggingJSON:error:]
  -[ACCAnalyticsLogger ignoreServerDisablingMessages]
  -[ACCAnalyticsLogger setIgnoreServerDisablingMessages:]
  -[ACCAnalyticsLogger allowsInsecureFigaroCert]
  -[ACCAnalyticsLogger setAllowsInsecureFigaroCert:]
  -[ACCAnalyticsLogger figaroBagURL]
  -[ACCAnalyticsLogger figaroTopicName]
  -[ACCAnalyticsLogger pluginEventsBeforeFirstUnlock]
  -[ACCAnalyticsLogger setPluginEventsBeforeFirstUnlock:]
  -[ACCAnalyticsLogger accessorydEventsBeforeFirstUnlock]
  -[ACCAnalyticsLogger setAccessorydEventsBeforeFirstUnlock:]
  -[ACCAnalyticsLogger eventCacheLock]
  -[ACCAnalyticsLogger setEventCacheLock:]


ACCAnalyticsLoggerSQLiteStore : ACCSQLite
 @property  NSArray *allEvents
 @property  NSDate *uploadDate

  // class methods
  +[ACCAnalyticsLoggerSQLiteStore storeWithPath:schema:]

  // instance methods
  -[ACCAnalyticsLoggerSQLiteStore summaryCounts]
  -[ACCAnalyticsLoggerSQLiteStore addEventDict:toTable:]
  -[ACCAnalyticsLoggerSQLiteStore dealloc]
  -[ACCAnalyticsLoggerSQLiteStore clearAllData]
  -[ACCAnalyticsLoggerSQLiteStore setUploadDate:]
  -[ACCAnalyticsLoggerSQLiteStore tryToOpenDatabase]
  -[ACCAnalyticsLoggerSQLiteStore allEvents]
  -[ACCAnalyticsLoggerSQLiteStore uploadDate]
  -[ACCAnalyticsLoggerSQLiteStore successCount]
  -[ACCAnalyticsLoggerSQLiteStore wrapFailureCount]
  -[ACCAnalyticsLoggerSQLiteStore incrementSuccessCount]
  -[ACCAnalyticsLoggerSQLiteStore incrementWrapFailureCount]


ACCObjCType : NSObject
 @property  long long code
 @property  NSString *encoding
 @property  NSString *name
 @property  NSString *className
 @property  unsigned long size
 @property  unsigned long flags
 @property  BOOL number
 @property  BOOL integerNumber
 @property  BOOL floatingPointNumber
 @property  BOOL object

  // class methods
  +[ACCObjCType typeForEncoding:]
  +[ACCObjCType typeForValue:]

  // instance methods
  -[ACCObjCType encoding]
  -[ACCObjCType getBytes:forObject:]
  -[ACCObjCType .cxx_destruct]
  -[ACCObjCType flags]
  -[ACCObjCType isObject]
  -[ACCObjCType className]
  -[ACCObjCType objectWithBytes:]
  -[ACCObjCType size]
  -[ACCObjCType code]
  -[ACCObjCType isIntegerNumber]
  -[ACCObjCType name]
  -[ACCObjCType isNumber]
  -[ACCObjCType isFloatingPointNumber]
  -[ACCObjCType initWithCode:encoding:name:className:size:flags:]


ACCSQLite : NSObject
 @property  ^{sqlite3=} db
 @property  unsigned long openCount
 @property  BOOL corrupt
 @property  NSMutableDictionary *statementsBySQL
 @property  NSDateFormatter *dateFormatter
 @property  NSString *path
 @property  NSString *schema
 @property  NSString *schemaVersion
 @property  NSString *objectClassPrefix
 @property  int userVersion
 @property  long long synchronousMode
 @property  BOOL isOpen
 @property  BOOL hasMigrated
 @property  BOOL shouldVacuum
 @property  BOOL traced
 @property  <ACCSQLiteDelegate> *delegate

  // instance methods
  -[ACCSQLite changes]
  -[ACCSQLite schema]
  -[ACCSQLite vacuum]
  -[ACCSQLite openWithError:]
  -[ACCSQLite dateFormatter]
  -[ACCSQLite removePropertyForKey:]
  -[ACCSQLite synchronousMode]
  -[ACCSQLite propertyForKey:]
  -[ACCSQLite datePropertyForKey:]
  -[ACCSQLite setCorrupt:]
  -[ACCSQLite hasMigrated]
  -[ACCSQLite remove]
  -[ACCSQLite begin]
  -[ACCSQLite setDb:]
  -[ACCSQLite rollback]
  -[ACCSQLite setDelegate:]
  -[ACCSQLite setOpenCount:]
  -[ACCSQLite path]
  -[ACCSQLite delegate]
  -[ACCSQLite end]
  -[ACCSQLite schemaVersion]
  -[ACCSQLite db]
  -[ACCSQLite dealloc]
  -[ACCSQLite close]
  -[ACCSQLite setSynchronousMode:]
  -[ACCSQLite setProperty:forKey:]
  -[ACCSQLite .cxx_destruct]
  -[ACCSQLite creationDate]
  -[ACCSQLite open]
  -[ACCSQLite openCount]
  -[ACCSQLite setUserVersion:]
  -[ACCSQLite executeSQL:]
  -[ACCSQLite userVersion]
  -[ACCSQLite lastInsertRowID]
  -[ACCSQLite setDateProperty:forKey:]
  -[ACCSQLite corrupt]
  -[ACCSQLite isOpen]
  -[ACCSQLite setDateFormatter:]
  -[ACCSQLite dropAllTables]
  -[ACCSQLite executeSQL:arguments:]
  -[ACCSQLite select:from:where:bindings:orderBy:limit:block:]
  -[ACCSQLite selectFrom:where:bindings:orderBy:limit:block:]
  -[ACCSQLite update:set:where:bindings:limit:]
  -[ACCSQLite insertOrReplaceInto:values:]
  -[ACCSQLite deleteFrom:where:bindings:]
  -[ACCSQLite deleteFrom:matchingValues:]
  -[ACCSQLite allTableNames]
  -[ACCSQLite columnNamesForTable:]
  -[ACCSQLite select:from:]
  -[ACCSQLite select:from:where:bindings:]
  -[ACCSQLite selectAllFrom:where:bindings:]
  -[ACCSQLite selectCountFrom:where:bindings:]
  -[ACCSQLite initWithPath:schema:]
  -[ACCSQLite setTraced:]
  -[ACCSQLite selectFrom:where:bindings:limit:]
  -[ACCSQLite _tableNameForClass:]
  -[ACCSQLite dbUserVersion]
  -[ACCSQLite objectClassPrefix]
  -[ACCSQLite setObjectClassPrefix:]
  -[ACCSQLite shouldVacuum]
  -[ACCSQLite setShouldVacuum:]
  -[ACCSQLite traced]
  -[ACCSQLite _synchronousModeString]
  -[ACCSQLite _createSchemaHash]
  -[ACCSQLite analyze]
  -[ACCSQLite statementForSQL:]
  -[ACCSQLite removeAllStatements]
  -[ACCSQLite statementsBySQL]
  -[ACCSQLite _periodicVacuum]


BootArgs : NSObject
  // class methods
  +[BootArgs integerForKey:]
  +[BootArgs stringForKey:]
  +[BootArgs numberForKey:]
  +[BootArgs boolForKey:]
  +[BootArgs intForKey:]
  +[BootArgs configuredBootArgs]
  +[BootArgs configuredBootArgsString]

  // instance methods
  -[BootArgs init]


ACCSQLiteStatement : NSObject
 @property  NSMutableArray *temporaryBoundObjects
 @property  ACCSQLite *SQLite
 @property  NSString *SQL
 @property  ^{sqlite3_stmt=} handle
 @property  BOOL reset

  // instance methods
  -[ACCSQLiteStatement SQL]
  -[ACCSQLiteStatement step]
  -[ACCSQLiteStatement isReset]
  -[ACCSQLiteStatement resetAfterStepError]
  -[ACCSQLiteStatement doubleAtIndex:]
  -[ACCSQLiteStatement int64AtIndex:]
  -[ACCSQLiteStatement columnCount]
  -[ACCSQLiteStatement columnNameAtIndex:]
  -[ACCSQLiteStatement columnTypeAtIndex:]
  -[ACCSQLiteStatement setReset:]
  -[ACCSQLiteStatement setTemporaryBoundObjects:]
  -[ACCSQLiteStatement SQLite]
  -[ACCSQLiteStatement reset]
  -[ACCSQLiteStatement bindValue:atIndex:]
  -[ACCSQLiteStatement handle]
  -[ACCSQLiteStatement .cxx_destruct]
  -[ACCSQLiteStatement blobAtIndex:]
  -[ACCSQLiteStatement bindDouble:atIndex:]
  -[ACCSQLiteStatement textAtIndex:]
  -[ACCSQLiteStatement bindValues:]
  -[ACCSQLiteStatement intAtIndex:]
  -[ACCSQLiteStatement bindNullAtIndex:]
  -[ACCSQLiteStatement allObjects]
  -[ACCSQLiteStatement temporaryBoundObjects]
  -[ACCSQLiteStatement bindText:atIndex:]
  -[ACCSQLiteStatement bindInt64:atIndex:]
  -[ACCSQLiteStatement initWithSQLite:SQL:handle:]
  -[ACCSQLiteStatement allObjectsByColumnName]
  -[ACCSQLiteStatement objectAtIndex:]
  -[ACCSQLiteStatement finalizeStatement]
  -[ACCSQLiteStatement bindBlob:atIndex:]
  -[ACCSQLiteStatement bindInt:atIndex:]
  -[ACCSQLiteStatement retainedTemporaryBoundObject:]


ACCTransportIOAccessoryBase : NSObject
 @property  unsigned int upstreamManagerService
 @property  int primaryPortNumber
 @property  unsigned int ioService
 @property  int ioServiceClassType

  // instance methods
  -[ACCTransportIOAccessoryBase dealloc]
  -[ACCTransportIOAccessoryBase .cxx_destruct]
  -[ACCTransportIOAccessoryBase transmitData:]
  -[ACCTransportIOAccessoryBase transportClassTerminated]
  -[ACCTransportIOAccessoryBase ioService]
  -[ACCTransportIOAccessoryBase initWithIOAccessoryClass:ioService:]
  -[ACCTransportIOAccessoryBase ioServiceClassType]
  -[ACCTransportIOAccessoryBase primaryPortNumber]
  -[ACCTransportIOAccessoryBase setPrimaryPortNumber:]
  -[ACCTransportIOAccessoryBase upstreamManagerService]
  -[ACCTransportIOAccessoryBase setUpstreamManagerService:]


ACCUserNotification : NSObject
 @property  NSDictionary *userNotificationCFDict
 @property  ^{__CFUserNotification=} userNotificationCF
 @property  NSString *uuid
 @property  int type
 @property  NSString *title
 @property  NSString *message
 @property  NSString *defaultButtonName
 @property  NSString *otherButtonName
 @property  NSURL *iconURL
 @property  BOOL isModal
 @property  BOOL dismissOnUnlock
 @property  BOOL ignoreQuietMode
 @property  BOOL presentViaSystemAperture
 @property  NSNumber *systemSoundID
 @property  double timeout
 @property  NSString *identifier
 @property  NSString *groupIdentifier

  // instance methods
  -[ACCUserNotification setMessage:]
  -[ACCUserNotification identifier]
  -[ACCUserNotification setIconURL:]
  -[ACCUserNotification iconURL]
  -[ACCUserNotification groupIdentifier]
  -[ACCUserNotification type]
  -[ACCUserNotification setTimeout:]
  -[ACCUserNotification uuid]
  -[ACCUserNotification .cxx_destruct]
  -[ACCUserNotification systemSoundID]
  -[ACCUserNotification timeout]
  -[ACCUserNotification setType:]
  -[ACCUserNotification title]
  -[ACCUserNotification setIdentifier:]
  -[ACCUserNotification setSystemSoundID:]
  -[ACCUserNotification message]
  -[ACCUserNotification setTitle:]
  -[ACCUserNotification init]
  -[ACCUserNotification setGroupIdentifier:]
  -[ACCUserNotification isModal]
  -[ACCUserNotification setIsModal:]
  -[ACCUserNotification createBackingUserNotification]
  -[ACCUserNotification setUserNotificationCF:]
  -[ACCUserNotification defaultButtonName]
  -[ACCUserNotification setDefaultButtonName:]
  -[ACCUserNotification otherButtonName]
  -[ACCUserNotification setOtherButtonName:]
  -[ACCUserNotification dismissOnUnlock]
  -[ACCUserNotification setDismissOnUnlock:]
  -[ACCUserNotification ignoreQuietMode]
  -[ACCUserNotification setIgnoreQuietMode:]
  -[ACCUserNotification presentViaSystemAperture]
  -[ACCUserNotification setPresentViaSystemAperture:]
  -[ACCUserNotification userNotificationCFDict]
  -[ACCUserNotification setUserNotificationCFDict:]
  -[ACCUserNotification userNotificationCF]


ACCTransportIOAccessoryPort : ACCTransportIOAccessoryBase
 @property  <ACCTransportIOAccessoryPortProtocol> *delegate
 @property  BOOL isAuthenticated
 @property  int portIDNumber
 @property  int portTransportType
 @property  int resistorID
 @property  int portStreamType
 @property  NSString *ioAccPortEndpointUUID
 @property  NSString *ioAccPortParentConnectionUUID

  // instance methods
  -[ACCTransportIOAccessoryPort setIsAuthenticated:]
  -[ACCTransportIOAccessoryPort portIDNumber]
  -[ACCTransportIOAccessoryPort setIoAccPortParentConnectionUUID:]
  -[ACCTransportIOAccessoryPort setDelegate:]
  -[ACCTransportIOAccessoryPort _handleResistorIDChange:]
  -[ACCTransportIOAccessoryPort delegate]
  -[ACCTransportIOAccessoryPort isAuthenticated]
  -[ACCTransportIOAccessoryPort _handleAccessoryPortDetach]
  -[ACCTransportIOAccessoryPort dealloc]
  -[ACCTransportIOAccessoryPort initWithDelegate:andIOService:]
  -[ACCTransportIOAccessoryPort .cxx_destruct]
  -[ACCTransportIOAccessoryPort _registerForIOAccessoryPortInterestNotifications]
  -[ACCTransportIOAccessoryPort transmitData:]
  -[ACCTransportIOAccessoryPort _handleIncomingData:]
  -[ACCTransportIOAccessoryPort setIoAccPortEndpointUUID:]
  -[ACCTransportIOAccessoryPort ioAccPortParentConnectionUUID]
  -[ACCTransportIOAccessoryPort portStreamType]
  -[ACCTransportIOAccessoryPort ioAccPortEndpointUUID]
  -[ACCTransportIOAccessoryPort resistorID]
  -[ACCTransportIOAccessoryPort _handlePropertyChange]
  -[ACCTransportIOAccessoryPort portServiceRegistrationComplete]
  -[ACCTransportIOAccessoryPort portTransportType]


ACCUserDefaults : NSUserDefaults
  // class methods
  +[ACCUserDefaults sharedDefaults]
  +[ACCUserDefaults sharedDefaultsIapd]
  +[ACCUserDefaults sharedDefaultsLogging]

  // instance methods
  -[ACCUserDefaults init]


ACCTransportIOAccessoryManager : ACCTransportIOAccessoryBase
 @property  NSMutableSet *mutableioAccessoryChildPorts
 @property  NSMutableSet *mutableioAccessoryEAChildPorts
 @property  NSMutableSet *mutableioAccessoryAuthCPChildPorts
 @property  NSMutableSet *mutableioAccessoryOOBPairingChildPorts
 @property  NSMutableSet *mutableioAccessoryConfigStreamChildPorts
 @property  int resistorID
 @property  NSString *deviceName
 @property  NSString *deviceVendorName
 @property  NSString *deviceModelNumber
 @property  NSString *deviceSerialNumber
 @property  NSString *deviceHardwareRevision
 @property  NSString *deviceFirmwareRevision
 @property  NSString *ppid
 @property  NSData *digitalID
 @property  NSString *regionCode
 @property  BOOL bIsInductive
 @property  BOOL bIsInductivePowerToAccessory
 @property  ^{IONotificationPort=} batteryNotifyPortRef
 @property  unsigned int batteryIterator
 @property  unsigned char batteryChargeLevelPercent
 @property  unsigned int notificationRef
 @property  BOOL bIsWatch
 @property  NSSet *ioAccessoryChildPorts
 @property  NSSet *eaProtocolChildPorts
 @property  NSSet *authCPChildPorts
 @property  NSSet *oobPairingChildPorts
 @property  NSSet *configStreamChildPorts
 @property  int accessoryPowerMode
 @property  BOOL needsOOBPairing
 @property  BOOL isAuthenticated
 @property  BOOL isAuthTimedOut
 @property  BOOL isRootPort
 @property  int connectionType
 @property  BOOL bAccConnected
 @property  NSObject<OS_dispatch_source> *authTimerAccessory
 @property  NSString *connectionUUID

  // instance methods
  -[ACCTransportIOAccessoryManager setBatteryChargeLevelPercent:]
  -[ACCTransportIOAccessoryManager setBatteryNotifyPortRef:]
  -[ACCTransportIOAccessoryManager batteryChargeLevelPercent]
  -[ACCTransportIOAccessoryManager setFeaturesFromAuthStatus:authCert:certType:]
  -[ACCTransportIOAccessoryManager setPpid:]
  -[ACCTransportIOAccessoryManager setIsAuthenticated:]
  -[ACCTransportIOAccessoryManager batteryNotifyPortRef]
  -[ACCTransportIOAccessoryManager ppid]
  -[ACCTransportIOAccessoryManager _registerForBatteryNotifications]
  -[ACCTransportIOAccessoryManager setNeedsOOBPairing:]
  -[ACCTransportIOAccessoryManager setAccessoryPowerMode:]
  -[ACCTransportIOAccessoryManager getUSBMode]
  -[ACCTransportIOAccessoryManager setUSBMode:]
  -[ACCTransportIOAccessoryManager setIsAuthTimedOut:]
  -[ACCTransportIOAccessoryManager regionCode]
  -[ACCTransportIOAccessoryManager setDeviceName:]
  -[ACCTransportIOAccessoryManager deviceVendorName]
  -[ACCTransportIOAccessoryManager setRegionCode:]
  -[ACCTransportIOAccessoryManager setBAccConnected:]
  -[ACCTransportIOAccessoryManager setConnectionUUID:]
  -[ACCTransportIOAccessoryManager cableType]
  -[ACCTransportIOAccessoryManager _handlePowerChangeNotification]
  -[ACCTransportIOAccessoryManager mutableioAccessoryConfigStreamChildPorts]
  -[ACCTransportIOAccessoryManager isAuthTimedOut]
  -[ACCTransportIOAccessoryManager ioAccessoryChildPorts]
  -[ACCTransportIOAccessoryManager bIsInductive]
  -[ACCTransportIOAccessoryManager setDeviceSerialNumber:]
  -[ACCTransportIOAccessoryManager mutableioAccessoryChildPorts]
  -[ACCTransportIOAccessoryManager sleepPowerCurrentLimitInmA]
  -[ACCTransportIOAccessoryManager setNotificationRef:]
  -[ACCTransportIOAccessoryManager setPowerDuringSleepEnabled:]
  -[ACCTransportIOAccessoryManager isAuthenticated]
  -[ACCTransportIOAccessoryManager setDeviceFirmwareRevision:]
  -[ACCTransportIOAccessoryManager USBCurrentLimitOffsetInmA]
  -[ACCTransportIOAccessoryManager dealloc]
  -[ACCTransportIOAccessoryManager setBatteryIterator:]
  -[ACCTransportIOAccessoryManager digitalID]
  -[ACCTransportIOAccessoryManager authTimerAccessory]
  -[ACCTransportIOAccessoryManager _pokeResistorID]
  -[ACCTransportIOAccessoryManager mutableioAccessoryAuthCPChildPorts]
  -[ACCTransportIOAccessoryManager _stopAuthTimer]
  -[ACCTransportIOAccessoryManager .cxx_destruct]
  -[ACCTransportIOAccessoryManager setResistorID:]
  -[ACCTransportIOAccessoryManager authCPChildPorts]
  -[ACCTransportIOAccessoryManager bAccConnected]
  -[ACCTransportIOAccessoryManager _IOAccUSBModeTypeForSetUSBMode:]
  -[ACCTransportIOAccessoryManager notificationRef]
  -[ACCTransportIOAccessoryManager isBatteryPackModeEnabled]
  -[ACCTransportIOAccessoryManager setUSBCurrentOffset:]
  -[ACCTransportIOAccessoryManager USBChargingVoltageInmV]
  -[ACCTransportIOAccessoryManager batteryIterator]
  -[ACCTransportIOAccessoryManager _registerForIOAccessoryManagerInterestNotifications]
  -[ACCTransportIOAccessoryManager setUSBCurrentLimitBase:]
  -[ACCTransportIOAccessoryManager setMutableioAccessoryEAChildPorts:]
  -[ACCTransportIOAccessoryManager needsOOBPairing]
  -[ACCTransportIOAccessoryManager connectionType]
  -[ACCTransportIOAccessoryManager deviceFirmwareRevision]
  -[ACCTransportIOAccessoryManager _connectionTypeForPrimaryPort]
  -[ACCTransportIOAccessoryManager configStreamChildPorts]
  -[ACCTransportIOAccessoryManager removeIOAccessoryChildPort:]
  -[ACCTransportIOAccessoryManager addIOAccessoryChildPort:]
  -[ACCTransportIOAccessoryManager _sendNotification:]
  -[ACCTransportIOAccessoryManager _ACCPlatformUSBModeForIOAccessoryUSBConnectType:]
  -[ACCTransportIOAccessoryManager USBCurrentLimitBaseInmA]
  -[ACCTransportIOAccessoryManager _handleResistorIDChangeNotification:]
  -[ACCTransportIOAccessoryManager transportClassTerminated]
  -[ACCTransportIOAccessoryManager resetAccessoryBaseCurrent]
  -[ACCTransportIOAccessoryManager eaProtocolChildPorts]
  -[ACCTransportIOAccessoryManager setBatteryPackMode:]
  -[ACCTransportIOAccessoryManager setDeviceVendorName:]
  -[ACCTransportIOAccessoryManager setAccessoryUsedCurrent:]
  -[ACCTransportIOAccessoryManager _handleBatteryPackNotification]
  -[ACCTransportIOAccessoryManager _connectionUUIDsForNotification]
  -[ACCTransportIOAccessoryManager accessoryPowerModeCurrentLimitInmA:]
  -[ACCTransportIOAccessoryManager accessoryPowerMode]
  -[ACCTransportIOAccessoryManager supervisedTransportsRestricted]
  -[ACCTransportIOAccessoryManager mutableioAccessoryOOBPairingChildPorts]
  -[ACCTransportIOAccessoryManager accessoryChargingCurrentInmA]
  -[ACCTransportIOAccessoryManager setMutableioAccessoryChildPorts:]
  -[ACCTransportIOAccessoryManager bIsWatch]
  -[ACCTransportIOAccessoryManager isPowerDuringSleepSupported]
  -[ACCTransportIOAccessoryManager deviceName]
  -[ACCTransportIOAccessoryManager deviceModelNumber]
  -[ACCTransportIOAccessoryManager setMutableioAccessoryConfigStreamChildPorts:]
  -[ACCTransportIOAccessoryManager setDeviceHardwareRevision:]
  -[ACCTransportIOAccessoryManager connectionUUID]
  -[ACCTransportIOAccessoryManager USBCurrentLimitInmA]
  -[ACCTransportIOAccessoryManager deviceSerialNumber]
  -[ACCTransportIOAccessoryManager _processAccessoryInfo]
  -[ACCTransportIOAccessoryManager _handleUSBCurrentLimitNotification]
  -[ACCTransportIOAccessoryManager oobPairingChildPorts]
  -[ACCTransportIOAccessoryManager initWithIOService:]
  -[ACCTransportIOAccessoryManager setMutableioAccessoryAuthCPChildPorts:]
  -[ACCTransportIOAccessoryManager setDeviceModelNumber:]
  -[ACCTransportIOAccessoryManager _clearAccessoryInfo]
  -[ACCTransportIOAccessoryManager bIsInductivePowerToAccessory]
  -[ACCTransportIOAccessoryManager isRootPort]
  -[ACCTransportIOAccessoryManager isPowerDuringSleepEnabled]
  -[ACCTransportIOAccessoryManager mutableioAccessoryEAChildPorts]
  -[ACCTransportIOAccessoryManager resistorID]
  -[ACCTransportIOAccessoryManager deviceHardwareRevision]
  -[ACCTransportIOAccessoryManager setAccessoryRequestedCurrent:]
  -[ACCTransportIOAccessoryManager setDigitalID:]
  -[ACCTransportIOAccessoryManager setMutableioAccessoryOOBPairingChildPorts:]


DeferredAuthCPServiceWrapper : NSObject
 @property  unsigned int service
 @property  ACCTransportIOAccessoryManager *mgr

  // instance methods
  -[DeferredAuthCPServiceWrapper setService:]
  -[DeferredAuthCPServiceWrapper .cxx_destruct]
  -[DeferredAuthCPServiceWrapper service]
  -[DeferredAuthCPServiceWrapper initWithIOService:withMgr:]
  -[DeferredAuthCPServiceWrapper mgr]
  -[DeferredAuthCPServiceWrapper setMgr:]


DeferredEAServiceWrapper : NSObject
 @property  unsigned int service
 @property  ACCTransportIOAccessoryManager *mgr

  // instance methods
  -[DeferredEAServiceWrapper setService:]
  -[DeferredEAServiceWrapper .cxx_destruct]
  -[DeferredEAServiceWrapper service]
  -[DeferredEAServiceWrapper initWithIOService:withMgr:]
  -[DeferredEAServiceWrapper mgr]
  -[DeferredEAServiceWrapper setMgr:]


ACCTransportIOAccessorySharedManager : NSObject <ACCTransportIOAccessoryListenerProtocol, ACCTransportIOAccessoryManagerProtocol, ACCTransportIOAccessoryPortProtocol, ACCTransportIOAccessoryAuthCPProtocol, ACCTransportIOAccessoryEAProtocol, ACCTransportIOAccessoryOOBPairingProtocol, ACCTransportIOAccessoryConfigStreamProtocol>
 @property  NSObject<OS_dispatch_queue> *listQ
 @property  NSMutableSet *allIOAccessories
 @property  NSMutableSet *allIOAccessoryManagers
 @property  NSMutableSet *rootIOAccessoryManagers
 @property  ACCTransportIOAccessoryListener *ioAccessoryListener
 @property  ACCTransportIOAccessoryManager *rootE75Manager
 @property  ACCTransportIOAccessoryManager *rootOrionManager
 @property  NSRecursiveLock *accessoryPortLock
 @property  ACCSettingsState *enableDirectAWCAuth
 @property  BOOL bIsWatch
 @property  NSMutableArray *deferAuthCPServiceArray
 @property  NSMutableArray *deferEAServiceArray
 @property  ACCTransportPluginIOAccessoryManager *delegate
 @property  BOOL isB139OrB164Connected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACCTransportIOAccessorySharedManager sharedManager]
  +[ACCTransportIOAccessorySharedManager IOAccessoryClassStringForIOAccessoryClassType:]
  +[ACCTransportIOAccessorySharedManager IOAccessoryClassTypeForIOAccessoryClassString:]

  // instance methods
  -[ACCTransportIOAccessorySharedManager USBCurrentLimitInmA:]
  -[ACCTransportIOAccessorySharedManager sleepPowerCurrentLimitInmA:]
  -[ACCTransportIOAccessorySharedManager configureAccessoryPowerMode:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager USBCurrentLimitBaseInmA:]
  -[ACCTransportIOAccessorySharedManager CableType:]
  -[ACCTransportIOAccessorySharedManager USBModeForConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager USBChargingVoltageInmV:]
  -[ACCTransportIOAccessorySharedManager setPowerDuringSleepEnabled:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager USBCurrentLimitOffsetInmA:]
  -[ACCTransportIOAccessorySharedManager _managerForConnectionUUIDHasActiveEndpoint:]
  -[ACCTransportIOAccessorySharedManager setAccessoryRequestedCurrent:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryAuthCPServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager isBatteryPackModeEnabled:]
  -[ACCTransportIOAccessorySharedManager setUSBMode:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager accessoryPowerModeCurrentLimitInmA:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager resetAccessoryBaseCurrent:]
  -[ACCTransportIOAccessorySharedManager setAccessoryUsedCurrent:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager USBModeForEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager resetLightningBusForEndpointWithUUID:]
  -[ACCTransportIOAccessorySharedManager setBatteryPackMode:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager setUSBMode:forEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager lockAccessoryPorts]
  -[ACCTransportIOAccessorySharedManager isPowerDuringSleepSupported:]
  -[ACCTransportIOAccessorySharedManager setUSBCurrentLimitBase:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager isPowerDuringSleepEnabled:]
  -[ACCTransportIOAccessorySharedManager setUSBCurrentOffset:forConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager accessoryChargingCurrentInmA:]
  -[ACCTransportIOAccessorySharedManager setIoAccessoryListener:]
  -[ACCTransportIOAccessorySharedManager isB139OrB164Connected]
  -[ACCTransportIOAccessorySharedManager _basePortForEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager unlockAccessoryPorts]
  -[ACCTransportIOAccessorySharedManager deferEAServiceArray]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerServiceDetached:]
  -[ACCTransportIOAccessorySharedManager _clearChildPortEndpointsForManagerDisconnection:]
  -[ACCTransportIOAccessorySharedManager setDelegate:]
  -[ACCTransportIOAccessorySharedManager _basePortForConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager rootE75Manager]
  -[ACCTransportIOAccessorySharedManager setDeferAuthCPServiceArray:]
  -[ACCTransportIOAccessorySharedManager transmitData:forEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryEAServiceArrived:]
  -[ACCTransportIOAccessorySharedManager allIOAccessories]
  -[ACCTransportIOAccessorySharedManager rootIOAccessoryManagers]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortPropertyChanged:]
  -[ACCTransportIOAccessorySharedManager delegate]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager digitalIDDataForUpstreamConnection:]
  -[ACCTransportIOAccessorySharedManager _managerForIOService:shouldCreateNewService:]
  -[ACCTransportIOAccessorySharedManager setAllIOAccessories:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryAuthCPServiceArrived:]
  -[ACCTransportIOAccessorySharedManager dealloc]
  -[ACCTransportIOAccessorySharedManager IOAccessoryEADataArrived:eaEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager _managerForConnectionUUID:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerSupervisedTransportsRestrictedDidChange:forManager:]
  -[ACCTransportIOAccessorySharedManager handleOpenEASessionNotification:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager _connectionTypeForIOAccessoryPort:]
  -[ACCTransportIOAccessorySharedManager closeEASession:]
  -[ACCTransportIOAccessorySharedManager .cxx_destruct]
  -[ACCTransportIOAccessorySharedManager setEnableDirectAWCAuth:]
  -[ACCTransportIOAccessorySharedManager managerForIOAccessoryManagerService:]
  -[ACCTransportIOAccessorySharedManager allIOAccessoryManagers]
  -[ACCTransportIOAccessorySharedManager _createEAProtocolsForManager:]
  -[ACCTransportIOAccessorySharedManager _endpointTransportTypeForIOAccessoryPort:]
  -[ACCTransportIOAccessorySharedManager _createModuleConnectionAndEndpoint:]
  -[ACCTransportIOAccessorySharedManager startIOACCTransportManager]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortServiceArrived:]
  -[ACCTransportIOAccessorySharedManager stopIOACCTransportManager]
  -[ACCTransportIOAccessorySharedManager _managerForBaseEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager _managerForBase:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortArrived:withEndpointProtocol:publish:]
  -[ACCTransportIOAccessorySharedManager _handleRequestForPrimaryPort:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryAuthCPServiceAuthStatusChanged:authType:authCert:certType:authCTA:service:]
  -[ACCTransportIOAccessorySharedManager accessoryPortLock]
  -[ACCTransportIOAccessorySharedManager rootOrionManager]
  -[ACCTransportIOAccessorySharedManager openEASession:withEAEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager _portForManagerMatchingPrimaryPort:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingServiceArrived:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingDataFinishedForEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryConfigStreamServiceArrived:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerServiceArrived:]
  -[ACCTransportIOAccessorySharedManager setDeferEAServiceArray:]
  -[ACCTransportIOAccessorySharedManager _handleRequestForIAPDPortB139B164Connected:]
  -[ACCTransportIOAccessorySharedManager _IOAccessoryPortDetachInternal:]
  -[ACCTransportIOAccessorySharedManager setAccessoryPortLock:]
  -[ACCTransportIOAccessorySharedManager _addIOAccessoryManagerWithIOService:]
  -[ACCTransportIOAccessorySharedManager enableDirectAWCAuth]
  -[ACCTransportIOAccessorySharedManager _managerContainingBase:]
  -[ACCTransportIOAccessorySharedManager handleCloseEASessionNotification:]
  -[ACCTransportIOAccessorySharedManager shouldEnableDirectAWCAuth]
  -[ACCTransportIOAccessorySharedManager setFeaturesFromAuthStatus:andAuthCert:certType:forConnectionUUID:withConnectionType:]
  -[ACCTransportIOAccessorySharedManager _processEAService:andPublish:]
  -[ACCTransportIOAccessorySharedManager listQ]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerServiceInfoSet:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryManagerResistorIDChanged:forManager:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingDataStartedForEndpointUUID:]
  -[ACCTransportIOAccessorySharedManager _basePortForService:]
  -[ACCTransportIOAccessorySharedManager bIsWatch]
  -[ACCTransportIOAccessorySharedManager setRootIOAccessoryManagers:]
  -[ACCTransportIOAccessorySharedManager _handleUSBHostPluginArrived:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryConfigStreamServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryConfigStreamUpdateAccesssoryInfo:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortDataArrived:endpointUUID:]
  -[ACCTransportIOAccessorySharedManager _accPlatformPowerModeToIOAccessoryPowerMode:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager ioAccessoryListener]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingDataArrived:endpointUUID:]
  -[ACCTransportIOAccessorySharedManager deferAuthCPServiceArray]
  -[ACCTransportIOAccessorySharedManager setAllIOAccessoryManagers:]
  -[ACCTransportIOAccessorySharedManager _addACCTransportToManager:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryEAServiceTerminated:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortDetach:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryConfigStreamMessageArrived:endpointUUID:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryPortPublish:]
  -[ACCTransportIOAccessorySharedManager IOAccessoryOOBPairingInfoArrived:endpointUUID:]
  -[ACCTransportIOAccessorySharedManager init]
  -[ACCTransportIOAccessorySharedManager setListQ:]
  -[ACCTransportIOAccessorySharedManager _createEAEndpointForProtocol:andManager:]


ACCTransportIOAccessoryListener : NSObject
 @property  <ACCTransportIOAccessoryListenerProtocol> *delegate

  // instance methods
  -[ACCTransportIOAccessoryListener startListening]
  -[ACCTransportIOAccessoryListener stopListening]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryAuthCPClass]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryOOBPairingClass]
  -[ACCTransportIOAccessoryListener setDelegate:]
  -[ACCTransportIOAccessoryListener _ioAccessoryOOBPairingTerminated:]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryPortClass]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryManagerClass]
  -[ACCTransportIOAccessoryListener delegate]
  -[ACCTransportIOAccessoryListener _ioAccessoryPortAttached:]
  -[ACCTransportIOAccessoryListener dealloc]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryManagerClass]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryConfigStreamClass]
  -[ACCTransportIOAccessoryListener .cxx_destruct]
  -[ACCTransportIOAccessoryListener _ioAccessoryConfigStreamTerminated:]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryConfigStreamClass]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryPortClass]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryAuthCPClass]
  -[ACCTransportIOAccessoryListener _startListeningForIOAccessoryEAClass]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryOOBPairingClass]
  -[ACCTransportIOAccessoryListener _ioAccessoryPortTerminated:]
  -[ACCTransportIOAccessoryListener initWithDelegate:]
  -[ACCTransportIOAccessoryListener _ioAccessoryManagerAttached:]
  -[ACCTransportIOAccessoryListener _ioAccessoryAuthCPAttached:]
  -[ACCTransportIOAccessoryListener _ioAccessoryAuthCPTerminated:]
  -[ACCTransportIOAccessoryListener _ioAccessoryConfigStreamAttached:]
  -[ACCTransportIOAccessoryListener _ioAccessoryOOBPairingAttached:]
  -[ACCTransportIOAccessoryListener _ioAccessoryEAAttached:]
  -[ACCTransportIOAccessoryListener _stopListeningForIOAccessoryEAClass]
  -[ACCTransportIOAccessoryListener _ioAccessoryManagerTerminated:]
  -[ACCTransportIOAccessoryListener _ioAccessoryEATerminated:]


ACCUserNotificationManager : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableSet *userNotifications
 @property  NSMutableDictionary *completionHandlers
 @property  NSRecursiveLock *lock

  // class methods
  +[ACCUserNotificationManager sharedManager]

  // instance methods
  -[ACCUserNotificationManager completionHandlers]
  -[ACCUserNotificationManager setCompletionHandlers:]
  -[ACCUserNotificationManager userNotifications]
  -[ACCUserNotificationManager .cxx_destruct]
  -[ACCUserNotificationManager setQueue:]
  -[ACCUserNotificationManager setLock:]
  -[ACCUserNotificationManager queue]
  -[ACCUserNotificationManager lock]
  -[ACCUserNotificationManager init]
  -[ACCUserNotificationManager dismissNotificationWithIdentifier:]
  -[ACCUserNotificationManager presentNotification:completionHandler:]
  -[ACCUserNotificationManager dismissNotification:]
  -[ACCUserNotificationManager dismissNotificationsWithGroupIdentifier:]
  -[ACCUserNotificationManager dismisssAllNotifications]
  -[ACCUserNotificationManager userNotificationWithUUID:]
  -[ACCUserNotificationManager removeUserNotification:]
  -[ACCUserNotificationManager setUserNotifications:]


ACCTransportPluginIOAccessoryManager : ACCTransportPlugin <ACCTransportPluginProtocol, ACCPlatformUSBModePluginProtocol, ACCPlatformPowerPluginProtocol, ACCPlatformLightningPluginProtocol>
 @property  BOOL isRunning
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pluginName

  // instance methods
  -[ACCTransportPluginIOAccessoryManager USBCurrentLimitInmA:]
  -[ACCTransportPluginIOAccessoryManager sleepPowerCurrentLimitInmA:]
  -[ACCTransportPluginIOAccessoryManager configureAccessoryPowerMode:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager USBCurrentLimitBaseInmA:]
  -[ACCTransportPluginIOAccessoryManager CableType:]
  -[ACCTransportPluginIOAccessoryManager USBModeForConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager pluginName]
  -[ACCTransportPluginIOAccessoryManager USBChargingVoltageInmV:]
  -[ACCTransportPluginIOAccessoryManager setPowerDuringSleepEnabled:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager USBCurrentLimitOffsetInmA:]
  -[ACCTransportPluginIOAccessoryManager setAccessoryRequestedCurrent:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager isBatteryPackModeEnabled:]
  -[ACCTransportPluginIOAccessoryManager setUSBMode:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager accessoryPowerModeCurrentLimitInmA:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager resetAccessoryBaseCurrent:]
  -[ACCTransportPluginIOAccessoryManager setAccessoryUsedCurrent:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager USBModeForEndpointUUID:]
  -[ACCTransportPluginIOAccessoryManager resetLightningBusForEndpointWithUUID:]
  -[ACCTransportPluginIOAccessoryManager setBatteryPackMode:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager setUSBMode:forEndpointUUID:]
  -[ACCTransportPluginIOAccessoryManager isPowerDuringSleepSupported:]
  -[ACCTransportPluginIOAccessoryManager setUSBCurrentLimitBase:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager isPowerDuringSleepEnabled:]
  -[ACCTransportPluginIOAccessoryManager setUSBCurrentOffset:forConnectionUUID:]
  -[ACCTransportPluginIOAccessoryManager accessoryChargingCurrentInmA:]
  -[ACCTransportPluginIOAccessoryManager startPlugin]
  -[ACCTransportPluginIOAccessoryManager stopPlugin]
  -[ACCTransportPluginIOAccessoryManager setIsRunning:]
  -[ACCTransportPluginIOAccessoryManager isRunning]
  -[ACCTransportPluginIOAccessoryManager initPlugin]
  -[ACCTransportPluginIOAccessoryManager authStatusDidChange:forConnectionWithUUID:previousAuthStatus:authType:connectionIsAuthenticated:connectionWasAuthenticated:]
  -[ACCTransportPluginIOAccessoryManager sendOutgoingData:forEndpointWithUUID:connectionUUID:]


ACCSettingsState : NSObject
 @property  long long defaultValue
 @property  long long invalidValue
 @property  long long intValue
 @property  BOOL boolValue
 @property  BOOL exists
 @property  NSString *key
 @property  NSString *applicationID
 @property  NSString *notificationName

  // instance methods
  -[ACCSettingsState intValue]
  -[ACCSettingsState exists]
  -[ACCSettingsState notificationName]
  -[ACCSettingsState applicationID]
  -[ACCSettingsState defaultValue]
  -[ACCSettingsState dealloc]
  -[ACCSettingsState .cxx_destruct]
  -[ACCSettingsState update]
  -[ACCSettingsState key]
  -[ACCSettingsState boolValue]
  -[ACCSettingsState initWithKey:applicationID:notification:defaultValue:invalidValue:]
  -[ACCSettingsState _readLoggingPrefs]
  -[ACCSettingsState _registerForLoggingPrefsNotification]
  -[ACCSettingsState invalidValue]


ACCTransportIOAccessoryEA : ACCTransportIOAccessoryBase
 @property  NSString *eaProtocol
 @property  NSString *deviceVendorName
 @property  NSString *deviceName
 @property  NSString *deviceModelNumber
 @property  NSString *deviceHardwareRevision
 @property  NSString *deviceFirmwareRevision
 @property  NSString *deviceSerialNumber
 @property  NSString *deviceDockType
 @property  <ACCTransportIOAccessoryEAProtocol> *delegate
 @property  NSString *endpointUUID
 @property  NSString *parentConnectionUUID
 @property  BOOL sessionOpen

  // instance methods
  -[ACCTransportIOAccessoryEA setDeviceName:]
  -[ACCTransportIOAccessoryEA deviceVendorName]
  -[ACCTransportIOAccessoryEA setDelegate:]
  -[ACCTransportIOAccessoryEA setDeviceSerialNumber:]
  -[ACCTransportIOAccessoryEA delegate]
  -[ACCTransportIOAccessoryEA setDeviceFirmwareRevision:]
  -[ACCTransportIOAccessoryEA dealloc]
  -[ACCTransportIOAccessoryEA initWithDelegate:andIOService:]
  -[ACCTransportIOAccessoryEA .cxx_destruct]
  -[ACCTransportIOAccessoryEA transmitData:]
  -[ACCTransportIOAccessoryEA deviceFirmwareRevision]
  -[ACCTransportIOAccessoryEA setEndpointUUID:]
  -[ACCTransportIOAccessoryEA setDeviceVendorName:]
  -[ACCTransportIOAccessoryEA deviceName]
  -[ACCTransportIOAccessoryEA deviceModelNumber]
  -[ACCTransportIOAccessoryEA setDeviceHardwareRevision:]
  -[ACCTransportIOAccessoryEA endpointUUID]
  -[ACCTransportIOAccessoryEA deviceSerialNumber]
  -[ACCTransportIOAccessoryEA setDeviceModelNumber:]
  -[ACCTransportIOAccessoryEA deviceHardwareRevision]
  -[ACCTransportIOAccessoryEA deviceDockType]
  -[ACCTransportIOAccessoryEA parentConnectionUUID]
  -[ACCTransportIOAccessoryEA setParentConnectionUUID:]
  -[ACCTransportIOAccessoryEA setDeviceDockType:]
  -[ACCTransportIOAccessoryEA openEAServiceSession]
  -[ACCTransportIOAccessoryEA closeEAServiceSession]
  -[ACCTransportIOAccessoryEA _handleIncomingEAData]
  -[ACCTransportIOAccessoryEA _registerEAReadCallback]
  -[ACCTransportIOAccessoryEA _checkEAInfo]
  -[ACCTransportIOAccessoryEA eaProtocol]
  -[ACCTransportIOAccessoryEA sessionOpen]
  -[ACCTransportIOAccessoryEA setEaProtocol:]


ACCTransportIOAccessoryAuthCP : ACCTransportIOAccessoryBase
 @property  NSObject<OS_dispatch_queue> *authWorkQueue
 @property  NSObject<OS_dispatch_source> *authTimerSource
 @property  unsigned char authTryCurrent
 @property  unsigned char authTryMaximum
 @property  unsigned char authVersionMajor
 @property  unsigned short deviceID
 @property  {_AuthCertCapsInt_t=QQQQ} authCertCaps
 @property  r^v pAuthCertCache
 @property  unsigned int ioServiceUpstream
 @property  int accConnectionType
 @property  BOOL bIsShuttingDown
 @property  int certType
 @property  NSDictionary *certInfo
 @property  BOOL representsInductiveTransport
 @property  int representsInternalModule
 @property  unsigned int authFlags
 @property  unsigned long authTimerStartTimestamp
 @property  int fdrValidationStatus
 @property  int authErrorDescription
 @property  unsigned int forcedReAuthCount
 @property  BOOL certIsCached
 @property  unsigned char softwareErrorRetry
 @property  ^{IONotificationPort=} batteryNotifyPortRef
 @property  unsigned int battery_iter
 @property  <ACCTransportIOAccessoryAuthCPProtocol> *delegate
 @property  int authStatus
 @property  BOOL authTimedOut
 @property  NSData *pAuthCertificate
 @property  NSString *connectionUUID
 @property  NSString *endpointUUID
 @property  int authType

  // instance methods
  -[ACCTransportIOAccessoryAuthCP setBatteryNotifyPortRef:]
  -[ACCTransportIOAccessoryAuthCP deviceID]
  -[ACCTransportIOAccessoryAuthCP batteryNotifyPortRef]
  -[ACCTransportIOAccessoryAuthCP setConnectionUUID:]
  -[ACCTransportIOAccessoryAuthCP setDelegate:]
  -[ACCTransportIOAccessoryAuthCP setDeviceID:]
  -[ACCTransportIOAccessoryAuthCP delegate]
  -[ACCTransportIOAccessoryAuthCP dealloc]
  -[ACCTransportIOAccessoryAuthCP .cxx_destruct]
  -[ACCTransportIOAccessoryAuthCP setAuthFlags:]
  -[ACCTransportIOAccessoryAuthCP battery_iter]
  -[ACCTransportIOAccessoryAuthCP setEndpointUUID:]
  -[ACCTransportIOAccessoryAuthCP setBattery_iter:]
  -[ACCTransportIOAccessoryAuthCP authType]
  -[ACCTransportIOAccessoryAuthCP connectionUUID]
  -[ACCTransportIOAccessoryAuthCP endpointUUID]
  -[ACCTransportIOAccessoryAuthCP authFlags]
  -[ACCTransportIOAccessoryAuthCP authStatus]
  -[ACCTransportIOAccessoryAuthCP initWithDelegate:andIOService:connectionType:]
  -[ACCTransportIOAccessoryAuthCP startShutdownProcess]
  -[ACCTransportIOAccessoryAuthCP requiresAuthenticationProcess]
  -[ACCTransportIOAccessoryAuthCP doPostAuthentication]
  -[ACCTransportIOAccessoryAuthCP _authInternalModuleWithCert:withError:]
  -[ACCTransportIOAccessoryAuthCP _authWithAuthIC:withCert:withError:]
  -[ACCTransportIOAccessoryAuthCP _checkBatteryPackMismatch:]
  -[ACCTransportIOAccessoryAuthCP startAuthenticationProcess]
  -[ACCTransportIOAccessoryAuthCP _validateDownstreamCertSerialNumber]
  -[ACCTransportIOAccessoryAuthCP _handleAuthDeviceInfo:versionMajor:versionMinor:]
  -[ACCTransportIOAccessoryAuthCP _handleAuthCertSerialNumber:certData:]
  -[ACCTransportIOAccessoryAuthCP _handleAuthCertificate:serialNumber:authError:]
  -[ACCTransportIOAccessoryAuthCP _handleAuthSignature:certData:nonceData:]
  -[ACCTransportIOAccessoryAuthCP _resetAfterAuthCompletion]
  -[ACCTransportIOAccessoryAuthCP _handleAuthTimerTimeout]
  -[ACCTransportIOAccessoryAuthCP _finishAuthentication:authCert:]
  -[ACCTransportIOAccessoryAuthCP _validateCertCapsForCertificate:authError:]
  -[ACCTransportIOAccessoryAuthCP _fdrCertCheck]
  -[ACCTransportIOAccessoryAuthCP _incrementAuthStat:dict:]
  -[ACCTransportIOAccessoryAuthCP _validateAuthCPFlagsForCertificate]
  -[ACCTransportIOAccessoryAuthCP _publishAuth:fdrStatus:trusted:publishToUI:ioconnect:]
  -[ACCTransportIOAccessoryAuthCP _copyOrCreateStatsSubDict:forSerialNumber:]
  -[ACCTransportIOAccessoryAuthCP _publishAuthStats:fdrStatus:]
  -[ACCTransportIOAccessoryAuthCP _logToAnalytics]
  -[ACCTransportIOAccessoryAuthCP _representsHardwareComponent]
  -[ACCTransportIOAccessoryAuthCP authTimedOut]
  -[ACCTransportIOAccessoryAuthCP pAuthCertificate]
  -[ACCTransportIOAccessoryAuthCP representsInductiveTransport]
  -[ACCTransportIOAccessoryAuthCP setRepresentsInductiveTransport:]
  -[ACCTransportIOAccessoryAuthCP representsInternalModule]
  -[ACCTransportIOAccessoryAuthCP setRepresentsInternalModule:]
  -[ACCTransportIOAccessoryAuthCP accConnectionType]
  -[ACCTransportIOAccessoryAuthCP setAccConnectionType:]
  -[ACCTransportIOAccessoryAuthCP authWorkQueue]
  -[ACCTransportIOAccessoryAuthCP setAuthWorkQueue:]
  -[ACCTransportIOAccessoryAuthCP authTimerSource]
  -[ACCTransportIOAccessoryAuthCP setAuthTimerSource:]
  -[ACCTransportIOAccessoryAuthCP authTryCurrent]
  -[ACCTransportIOAccessoryAuthCP setAuthTryCurrent:]
  -[ACCTransportIOAccessoryAuthCP authTryMaximum]
  -[ACCTransportIOAccessoryAuthCP setAuthTryMaximum:]
  -[ACCTransportIOAccessoryAuthCP authVersionMajor]
  -[ACCTransportIOAccessoryAuthCP setAuthVersionMajor:]
  -[ACCTransportIOAccessoryAuthCP authCertCaps]
  -[ACCTransportIOAccessoryAuthCP setAuthCertCaps:]
  -[ACCTransportIOAccessoryAuthCP pAuthCertCache]
  -[ACCTransportIOAccessoryAuthCP setPAuthCertCache:]
  -[ACCTransportIOAccessoryAuthCP ioServiceUpstream]
  -[ACCTransportIOAccessoryAuthCP setIoServiceUpstream:]
  -[ACCTransportIOAccessoryAuthCP bIsShuttingDown]
  -[ACCTransportIOAccessoryAuthCP setBIsShuttingDown:]
  -[ACCTransportIOAccessoryAuthCP certType]
  -[ACCTransportIOAccessoryAuthCP setCertType:]
  -[ACCTransportIOAccessoryAuthCP certInfo]
  -[ACCTransportIOAccessoryAuthCP setCertInfo:]
  -[ACCTransportIOAccessoryAuthCP authTimerStartTimestamp]
  -[ACCTransportIOAccessoryAuthCP setAuthTimerStartTimestamp:]
  -[ACCTransportIOAccessoryAuthCP fdrValidationStatus]
  -[ACCTransportIOAccessoryAuthCP setFdrValidationStatus:]
  -[ACCTransportIOAccessoryAuthCP authErrorDescription]
  -[ACCTransportIOAccessoryAuthCP setAuthErrorDescription:]
  -[ACCTransportIOAccessoryAuthCP forcedReAuthCount]
  -[ACCTransportIOAccessoryAuthCP setForcedReAuthCount:]
  -[ACCTransportIOAccessoryAuthCP certIsCached]
  -[ACCTransportIOAccessoryAuthCP setCertIsCached:]
  -[ACCTransportIOAccessoryAuthCP softwareErrorRetry]
  -[ACCTransportIOAccessoryAuthCP setSoftwareErrorRetry:]


(ACCSQLiteAdditions)
	// class methods
	+[(ACCSQLiteAdditions) ACCSQLiteClassName]

(CKUtilsAdditions)
	// class methods
	+[(CKUtilsAdditions) CKDataWithHexString:stringIsUppercase:]
	+[(CKUtilsAdditions) CKDataWithHexString:]

	// instance methods
	-[(CKUtilsAdditions) CKLowercaseHexStringWithoutSpaces]
	-[(CKUtilsAdditions) CKHexString]
	-[(CKUtilsAdditions) CKUppercaseHexStringWithoutSpaces]

01 00 0c00 /System/Library/PrivateFrameworks/CoreAccessories.framework/CoreAccessories: ACCHWComponentAuth 
01 00 0c00 /System/Library/PrivateFrameworks/CoreAccessories.framework/CoreAccessories: ACCTransportPlugin 
01 00 1300 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0a00 /System/Library/PrivateFrameworks/MFAAuthentication.framework/MFAAuthentication: MFAACertificateManager 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
