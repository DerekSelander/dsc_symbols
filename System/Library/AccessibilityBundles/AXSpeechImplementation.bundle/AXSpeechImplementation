|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSpeechActionPublicImplementation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSpeechPublicInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___AXSpeechActionPublicImplementation_super
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSpeechActionPublicImplementation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSpeechPublicInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___AXSpeechActionPublicImplementation_super
|| __TEXT.__text _AXPublicSpeechLanguageCanonicalFormToGeneralLanguage
|| __TEXT.__text __AXSortAVSpeechSynthesisVoices
__ AVFAudio: _AVSpeechSynthesisVoiceIdentifierAlex
__ AVFAudio: _AVSpeechUtteranceDefaultSpeechRate
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisMarker
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisProviderRequest
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisProviderVoice
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisVoice
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesizer
__ AVFAudio: _OBJC_CLASS_$_AVSpeechUtterance
__ AccessibilityUtilities: _AXCLanguageConvertToCanonicalForm
__ AccessibilityUtilities: _AXGetComponentsInNamedSiriVoiceIdentifier
__ AccessibilityUtilities: _AXLanguageCanonicalFormToGeneralLanguage
__ AccessibilityUtilities: _AXLogSpeechAssetDownload
__ AccessibilityUtilities: _AXLogSpeechSynthesis
__ AccessibilityUtilities: _AXSystemRootDirectory
__ AccessibilityUtilities: _AXTTSLogCommon
__ AccessibilityUtilities: _OBJC_CLASS_$_AXAlternativeVoices
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSettings
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ SSMLServices: _OBJC_CLASS_$_SSMLServices
__ SoftLinking: __sl_dlopen
__ TextToSpeech: _OBJC_CLASS_$_TTSAXResourceManager
__ TextToSpeech: _OBJC_CLASS_$_TTSSpeechSynthesizer
__ TextToSpeech: _OBJC_CLASS_$_TTSSpeechVoice
__ TextToSpeech: _TTSSupportsNeuralVoices
__ libAXSafeCategoryBundle.dylib: _OBJC_CLASS_$_UIAccessibilitySafeCategory
__ libAXSafeCategoryBundle.dylib: _OBJC_METACLASS_$_UIAccessibilitySafeCategory
__ libAXSafeCategoryBundle.dylib: _UIAccessibilityInstallSafeCategory
__ libAXSpeechManager.dylib: _AXAlexVoiceIdentifier
__ libAccessibility.dylib: __AXSAssistiveTouchScannerEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchSpeakingRate
__ libAccessibility.dylib: __AXSVoiceOverTouchVolume
__ libAccessibility.dylib: _kAXVoiceAssetsCacheUpdatedNotification
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__AXSpeechActionPublicImplementation_super : UIAccessibilitySafeCategory

AXSpeechPublicInterface : NSObject
  // class methods
  +[AXSpeechPublicInterface warningSquelcher]


AXSpeechActionPublicImplementation : __AXSpeechActionPublicImplementation_super
  // class methods
  +[AXSpeechActionPublicImplementation safeCategoryBaseClass]
  +[AXSpeechActionPublicImplementation safeCategoryTargetClassName]

  // instance methods
  -[AXSpeechActionPublicImplementation dealloc]
  -[AXSpeechActionPublicImplementation utterance]
  -[AXSpeechActionPublicImplementation setUtterance:]


AVSpeechUtterance(Implementation)
	// class methods
	+[AVSpeechUtterance(Implementation) speechUtteranceWithString:]
	+[AVSpeechUtterance(Implementation) speechUtteranceWithAttributedString:]
	+[AVSpeechUtterance(Implementation) speechUtteranceWithSSMLRepresentation:]
	+[AVSpeechUtterance(Implementation) transformUtteranceBasedOnSSMLIfDetected:]

	// instance methods
	-[AVSpeechUtterance(Implementation) initWithAttributedString:]
	-[AVSpeechUtterance(Implementation) action]
	-[AVSpeechUtterance(Implementation) initWithString:]
	-[AVSpeechUtterance(Implementation) description]
	-[AVSpeechUtterance(Implementation) setAction:]
	-[AVSpeechUtterance(Implementation) setProcessEmoticons:]
	-[AVSpeechUtterance(Implementation) setUseMonarchStyleSpeechRate:]
	-[AVSpeechUtterance(Implementation) ssmlRepresentation]
	-[AVSpeechUtterance(Implementation) setSsmlRepresentation:]
	-[AVSpeechUtterance(Implementation) initWithSSMLRepresentation:]
	-[AVSpeechUtterance(Implementation) audioBufferCallback]
	-[AVSpeechUtterance(Implementation) setAudioBufferCallback:]
	-[AVSpeechUtterance(Implementation) markerCallback]
	-[AVSpeechUtterance(Implementation) setMarkerCallback:]
	-[AVSpeechUtterance(Implementation) useMonarchStyleSpeechRate]
	-[AVSpeechUtterance(Implementation) prefersAssistiveTechnologyExceptions]
	-[AVSpeechUtterance(Implementation) setPrefersAssistiveTechnologyExceptions:]
	-[AVSpeechUtterance(Implementation) processEmoticons]
	-[AVSpeechUtterance(Implementation) hasGeneratedSSML]
	-[AVSpeechUtterance(Implementation) _generateSSML]
	-[AVSpeechUtterance(Implementation) parentUtterance]
	-[AVSpeechUtterance(Implementation) setParentUtterance:]
	-[AVSpeechUtterance(Implementation) setParentUtteranceRangeOffset:]
	-[AVSpeechUtterance(Implementation) parentUtteranceRangeOffset]
	-[AVSpeechUtterance(Implementation) setIsFirstChildOfParentUtterance:]
	-[AVSpeechUtterance(Implementation) isFirstChildOfParentUtterance]
	-[AVSpeechUtterance(Implementation) setIsLastChildOfParentUtterance:]
	-[AVSpeechUtterance(Implementation) isLastChildOfParentUtterance]

AVSpeechSynthesizer(Implementation_Shared)
	// class methods
	+[AVSpeechSynthesizer(Implementation_Shared) setAssetFlushedCallback:]
	+[AVSpeechSynthesizer(Implementation_Shared) assetFlushedCallback]

	// instance methods
	-[AVSpeechSynthesizer(Implementation_Shared) setAudioSessionCategory:]
	-[AVSpeechSynthesizer(Implementation_Shared) isPaused]
	-[AVSpeechSynthesizer(Implementation_Shared) dealloc]
	-[AVSpeechSynthesizer(Implementation_Shared) audioSessionCategory]
	-[AVSpeechSynthesizer(Implementation_Shared) isSpeaking]
	-[AVSpeechSynthesizer(Implementation_Shared) speechManager]
	-[AVSpeechSynthesizer(Implementation_Shared) init]
	-[AVSpeechSynthesizer(Implementation_Shared) audioSession]
	-[AVSpeechSynthesizer(Implementation_Shared) continueSpeaking]
	-[AVSpeechSynthesizer(Implementation_Shared) setIsInternalSynth:]
	-[AVSpeechSynthesizer(Implementation_Shared) stopSpeakingAtBoundary:]
	-[AVSpeechSynthesizer(Implementation_Shared) setAudioSessionCategoryOptions:]
	-[AVSpeechSynthesizer(Implementation_Shared) pauseSpeakingAtBoundary:]
	-[AVSpeechSynthesizer(Implementation_Shared) setSetActiveOptions:]
	-[AVSpeechSynthesizer(Implementation_Shared) setUsesApplicationAudioSession:]
	-[AVSpeechSynthesizer(Implementation_Shared) speakUtterance:]
	-[AVSpeechSynthesizer(Implementation_Shared) setSupportsAccurateWordCallbacks:]
	-[AVSpeechSynthesizer(Implementation_Shared) setSkipLuthorRules:]
	-[AVSpeechSynthesizer(Implementation_Shared) setAudioSessionInactiveTimeout:]
	-[AVSpeechSynthesizer(Implementation_Shared) supportsAccurateWordCallbacks]
	-[AVSpeechSynthesizer(Implementation_Shared) skipLuthorRules]
	-[AVSpeechSynthesizer(Implementation_Shared) writeUtterance:toBufferCallback:]
	-[AVSpeechSynthesizer(Implementation_Shared) writeUtterance:toBufferCallback:toMarkerCallback:]
	-[AVSpeechSynthesizer(Implementation_Shared) outputChannels]
	-[AVSpeechSynthesizer(Implementation_Shared) setOutputChannels:]
	-[AVSpeechSynthesizer(Implementation_Shared) usesApplicationAudioSession]
	-[AVSpeechSynthesizer(Implementation_Shared) mixToTelephonyUplink]
	-[AVSpeechSynthesizer(Implementation_Shared) setMixToTelephonyUplink:]
	-[AVSpeechSynthesizer(Implementation_Shared) audioQueueFlags]
	-[AVSpeechSynthesizer(Implementation_Shared) setAudioQueueFlags:]
	-[AVSpeechSynthesizer(Implementation_Shared) audioSessionCategoryOptions]
	-[AVSpeechSynthesizer(Implementation_Shared) setActiveOptions]
	-[AVSpeechSynthesizer(Implementation_Shared) isInAudioInterruption]
	-[AVSpeechSynthesizer(Implementation_Shared) isInternalSynth]
	-[AVSpeechSynthesizer(Implementation_Shared) prepareSpeechManager]
	-[AVSpeechSynthesizer(Implementation_Shared) tearDownWarmupManager]
	-[AVSpeechSynthesizer(Implementation_Shared) _convertBoundary:]
	-[AVSpeechSynthesizer(Implementation_Shared) _speakUtterance:]
	-[AVSpeechSynthesizer(Implementation_Shared) _handleSpeechDone:successful:]
	-[AVSpeechSynthesizer(Implementation_Shared) _effectiveUtterancesFromUtterance:]
	-[AVSpeechSynthesizer(Implementation_Shared) processSpeechJobFinished:successful:]
	-[AVSpeechSynthesizer(Implementation_Shared) _enqueueNextJob]
	-[AVSpeechSynthesizer(Implementation_Shared) setInflightUtterance:]
	-[AVSpeechSynthesizer(Implementation_Shared) inflightUtterance]
	-[AVSpeechSynthesizer(Implementation_Shared) speechQueue]
	-[AVSpeechSynthesizer(Implementation_Shared) initializedWebKitUsage]
	-[AVSpeechSynthesizer(Implementation_Shared) setInitializedWebKitUsage:]
	-[AVSpeechSynthesizer(Implementation_Shared) detectSSMLAndModifyUtterances]
	-[AVSpeechSynthesizer(Implementation_Shared) setDetectSSMLAndModifyUtterances:]
	-[AVSpeechSynthesizer(Implementation_Shared) _applyWebKitBehaviors]

AVSpeechSynthesisVoice(Implementation)
	// class methods
	+[AVSpeechSynthesisVoice(Implementation) speechVoices]
	+[AVSpeechSynthesisVoice(Implementation) currentLanguageCode]
	+[AVSpeechSynthesisVoice(Implementation) _voiceFromInternalVoiceListWithIdentifier:]
	+[AVSpeechSynthesisVoice(Implementation) voiceWithLanguage:]
	+[AVSpeechSynthesisVoice(Implementation) voiceWithIdentifier:]
	+[AVSpeechSynthesisVoice(Implementation) _speechVoicesIncludingSiri]
	+[AVSpeechSynthesisVoice(Implementation) _remapOldIdentifierIfNecessary:]
	+[AVSpeechSynthesisVoice(Implementation) _voiceWithIdentifier:includingSiri:]
	+[AVSpeechSynthesisVoice(Implementation) _speechVoicesIncludingSiriAndSuperCompact]
	+[AVSpeechSynthesisVoice(Implementation) _speechVoicesIncludingSiri:]
	+[AVSpeechSynthesisVoice(Implementation) test_speechVoices]
	+[AVSpeechSynthesisVoice(Implementation) test_setSpeechVoices:]
	+[AVSpeechSynthesisVoice(Implementation) test_setInternalSpeechVoices:]

	// instance methods
	-[AVSpeechSynthesisVoice(Implementation) setQuality:]
	-[AVSpeechSynthesisVoice(Implementation) isDefault]
	-[AVSpeechSynthesisVoice(Implementation) canBeDownloaded]
	-[AVSpeechSynthesisVoice(Implementation) isInstalled]
	-[AVSpeechSynthesisVoice(Implementation) setCanBeDownloaded:]
	-[AVSpeechSynthesisVoice(Implementation) quality]
	-[AVSpeechSynthesisVoice(Implementation) identifier]
	-[AVSpeechSynthesisVoice(Implementation) setLanguage:]
	-[AVSpeechSynthesisVoice(Implementation) setAssetSize:]
	-[AVSpeechSynthesisVoice(Implementation) assetSize]
	-[AVSpeechSynthesisVoice(Implementation) encodeWithCoder:]
	-[AVSpeechSynthesisVoice(Implementation) gender]
	-[AVSpeechSynthesisVoice(Implementation) setNonCombinedVoiceId:]
	-[AVSpeechSynthesisVoice(Implementation) isSystemVoice]
	-[AVSpeechSynthesisVoice(Implementation) nonCombinedVoiceId]
	-[AVSpeechSynthesisVoice(Implementation) synthesisProviderVoice]
	-[AVSpeechSynthesisVoice(Implementation) setIsInstalled:]
	-[AVSpeechSynthesisVoice(Implementation) setIdentifier:]
	-[AVSpeechSynthesisVoice(Implementation) setSynthesisProviderVoice:]
	-[AVSpeechSynthesisVoice(Implementation) setGender:]
	-[AVSpeechSynthesisVoice(Implementation) language]
	-[AVSpeechSynthesisVoice(Implementation) name]
	-[AVSpeechSynthesisVoice(Implementation) isFallbackDefault]
	-[AVSpeechSynthesisVoice(Implementation) initWithLanguage:]
	-[AVSpeechSynthesisVoice(Implementation) description]
	-[AVSpeechSynthesisVoice(Implementation) nonLocalizedName]
	-[AVSpeechSynthesisVoice(Implementation) isEqual:]
	-[AVSpeechSynthesisVoice(Implementation) setIsDefault:]
	-[AVSpeechSynthesisVoice(Implementation) initWithCoder:]
	-[AVSpeechSynthesisVoice(Implementation) nameWithoutQuality]
	-[AVSpeechSynthesisVoice(Implementation) audioFileSettings]
	-[AVSpeechSynthesisVoice(Implementation) setIsCombinedVoice:]
	-[AVSpeechSynthesisVoice(Implementation) setNonLocalizedNameWithoutQuality:]
	-[AVSpeechSynthesisVoice(Implementation) setIsFallbackDefault:]
	-[AVSpeechSynthesisVoice(Implementation) isCombinedVoice]
	-[AVSpeechSynthesisVoice(Implementation) siriDisplayName]
	-[AVSpeechSynthesisVoice(Implementation) _enhancedLocalizedNameFormat]
	-[AVSpeechSynthesisVoice(Implementation) _premiumLocalizedNameFormat]
	-[AVSpeechSynthesisVoice(Implementation) isSynthesisProviderVoice]
	-[AVSpeechSynthesisVoice(Implementation) supportsSSML]
	-[AVSpeechSynthesisVoice(Implementation) setBackupName:]
	-[AVSpeechSynthesisVoice(Implementation) backupName]
	-[AVSpeechSynthesisVoice(Implementation) nonLocalizedNameWithoutQuality]

AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private)
	// instance methods
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) setVoice:]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) voice]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) hash]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) description]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) isEqual:]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) initWithCoder:]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) initWithSSMLRepresentation:voice:]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) ssmlRepresentation]
	-[AVSpeechSynthesisProviderRequest(AXSpeechPublicInterface_Private) setSsmlRepresentation:]

AVSpeechSynthesisMarker(Implementation_Shared)
	// instance methods
	-[AVSpeechSynthesisMarker(Implementation_Shared) initWithMarkerType:forTextRange:atByteSampleOffset:]

01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisMarker 
01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisProviderRequest 
01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisProviderVoice 
01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisVoice 
01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesizer 
01 00 0800 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechUtterance 
01 00 0100 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXAlternativeVoices 
01 00 0100 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSettings 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/PrivateFrameworks/SSMLServices.framework/SSMLServices: SSMLServices 
01 00 0500 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSAXResourceManager 
01 00 0500 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSpeechSynthesizer 
01 00 0500 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSpeechVoice 
01 00 0200 /usr/lib/libAXSafeCategoryBundle.dylib: UIAccessibilitySafeCategory 
