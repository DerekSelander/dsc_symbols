|| __DATA.__common _s_streamNames
|| __DATA.__data _JTAssetExportPresetLowQuality
|| __DATA.__data _JTAssetExportPresetMessages
|| __DATA.__data _JTClipErrorDomain
|| __DATA.__data _kAssetAdjustedFingerprintKey
|| __DATA.__data _kAssetIdentiferKey
|| __DATA.__data _kAssetMasterFingerprintKey
|| __DATA.__data _kDelegateObserverPath
|| __DATA.__data _kJTEffectPropertiesAnalyticsKey
|| __DATA.__data _kJTEffectPropertiesEffectsKey
|| __DATA.__data _kJTEffectPropertiesFiltersKey
|| __DATA.__data _kJTEffectPropertiesIdentifierKey
|| __DATA.__data _kJTEffectPropertiesKey
|| __DATA.__data _kJTEffectPropertiesOverlaysKey
|| __DATA.__data _kJTEffectPropertiesPlistKey
|| __DATA.__data _kJTEffectPropertiesTextEditColorKey
|| __DATA.__data _kJTEffectPropertiesTextEditDisableTextEditing
|| __DATA.__data _kJTEffectPropertiesTextEditTintColorKey
|| __DATA.__data _kJTEffectPropertiesTitleCardsKey
|| __DATA.__data _kMediaItemDurationKey
|| __DATA.__data _kMediaItemLocalFileNameKey
|| __DATA.__data _kMediaItemTypeKey
|| __DATA.__data _kMediaStartOffset
|| __DATA.__data _kOriginalIsHEVC4kAsset
|| __DATA.__data _kRecordedWithInAppCamera
|| __DATA.__objc_data _OBJC_CLASS_$_BEAlertAction
|| __DATA.__objc_data _OBJC_CLASS_$_BEAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXActionLogging
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnalyticsKeys
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnalyticsManager
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnimationDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnimationHelper
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnimojiEffectRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAnimojiPlaybackDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CFXApplicationState
|| __DATA.__objc_data _OBJC_CLASS_$_CFXAvailability
|| __DATA.__objc_data _OBJC_CLASS_$_CFXBundle
|| __DATA.__objc_data _OBJC_CLASS_$_CFXBundleUtils
|| __DATA.__objc_data _OBJC_CLASS_$_CFXCameraControlsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXCameraViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXClipPlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXControlsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXCounterRotationLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CFXCounterRotationView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffect
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectBrowserContentPresenterViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectBrowserView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectBrowserViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectComposition
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectEditorView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectHostAppDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectMessagesStickerProperties
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectMessagesStickerUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectPickerView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXEffectType
|| __DATA.__objc_data _OBJC_CLASS_$_CFXExportClipDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFaceReticleView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFaceTrackingPlaybackDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFaceTrackingRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFaceTrackingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFeedbackController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFilterPickerCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFilterPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFrame
|| __DATA.__objc_data _OBJC_CLASS_$_CFXFullScreenTextEditViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXLiveCaptureViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_CFXMediaItemAdjustmentsData
|| __DATA.__objc_data _OBJC_CLASS_$_CFXMetadataValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CFXNextRenderedFrameCallback
|| __DATA.__objc_data _OBJC_CLASS_$_CFXNonTransformedLiveCaptureContainerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXOverlayEffectPickerView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXOverlayPickerAnimatedPreviewWriter
|| __DATA.__objc_data _OBJC_CLASS_$_CFXPlayButtonView
|| __DATA.__objc_data _OBJC_CLASS_$_CFXPreviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXRemoteCommandClient
|| __DATA.__objc_data _OBJC_CLASS_$_CFXRemoteCommandServer
|| __DATA.__objc_data _OBJC_CLASS_$_CFXRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CFXReviewControlsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXReviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CFXViewfinderFlipTransition
|| __DATA.__objc_data _OBJC_CLASS_$_EditListCompositionState
|| __DATA.__objc_data _OBJC_CLASS_$_JTARKitCameraSessionController
|| __DATA.__objc_data _OBJC_CLASS_$_JTAVPlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_JTAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_JTAnimojiEffect
|| __DATA.__objc_data _OBJC_CLASS_$_JTAssetMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTAudioClip
|| __DATA.__objc_data _OBJC_CLASS_$_JTAudioMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTAutoPurgeDictionary
|| __DATA.__objc_data _OBJC_CLASS_$_JTCacheDictionary
|| __DATA.__objc_data _OBJC_CLASS_$_JTCaptureMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTClip
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipCompositionUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipPlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipSequenceDisplayViewController
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipSequenceExporter
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipSequencePlayer
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipSequencePlayerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTClipUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_JTCollectionView
|| __DATA.__objc_data _OBJC_CLASS_$_JTCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_CLASS_$_JTComposition
|| __DATA.__objc_data _OBJC_CLASS_$_JTCompositionClipDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_JTCompositionItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTCompositionSettings
|| __DATA.__objc_data _OBJC_CLASS_$_JTCompositionTrackGroup
|| __DATA.__objc_data _OBJC_CLASS_$_JTCompositionUpdateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTCustomImageSensor
|| __DATA.__objc_data _OBJC_CLASS_$_JTCustomRenderProperties
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffect
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectAnimationView
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectCategory
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectContinousPreviewOptions
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectEditingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectFactory
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectFrame
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectPickerPreviewDiskCache
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectPreviewManager
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectPropertiesConstants
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectTextEditingProperties
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectsPreviewGenerationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectsPreviewGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectsPreviewGeneratorJob
|| __DATA.__objc_data _OBJC_CLASS_$_JTEffectsPreviewRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_JTExportController
|| __DATA.__objc_data _OBJC_CLASS_$_JTFaceAnchor
|| __DATA.__objc_data _OBJC_CLASS_$_JTFileManagementUtils
|| __DATA.__objc_data _OBJC_CLASS_$_JTFilterEffect
|| __DATA.__objc_data _OBJC_CLASS_$_JTFilterEffectCategory
|| __DATA.__objc_data _OBJC_CLASS_$_JTFixedSizeUIImageView
|| __DATA.__objc_data _OBJC_CLASS_$_JTFormatters
|| __DATA.__objc_data _OBJC_CLASS_$_JTFrameRateCalculator
|| __DATA.__objc_data _OBJC_CLASS_$_JTImage
|| __DATA.__objc_data _OBJC_CLASS_$_JTImageIOSurfaceView
|| __DATA.__objc_data _OBJC_CLASS_$_JTImageMTKView
|| __DATA.__objc_data _OBJC_CLASS_$_JTImageView
|| __DATA.__objc_data _OBJC_CLASS_$_JTInstrucionGraphBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_JTLayer
|| __DATA.__objc_data _OBJC_CLASS_$_JTLocalAssetMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTMotionData
|| __DATA.__objc_data _OBJC_CLASS_$_JTMovieCompositionItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTOrientationMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_JTOverlayDebugRect
|| __DATA.__objc_data _OBJC_CLASS_$_JTOverlayDebugView
|| __DATA.__objc_data _OBJC_CLASS_$_JTOverlayEffect
|| __DATA.__objc_data _OBJC_CLASS_$_JTOverlayEffectCategory
|| __DATA.__objc_data _OBJC_CLASS_$_JTPassThroughContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_JTPickerCameraSource
|| __DATA.__objc_data _OBJC_CLASS_$_JTPixelBufferPool
|| __DATA.__objc_data _OBJC_CLASS_$_JTPixelRotationSession
|| __DATA.__objc_data _OBJC_CLASS_$_JTReaderWriterExportController
|| __DATA.__objc_data _OBJC_CLASS_$_JTSeekRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTStillCompositionItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTStillMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTSuspendedInteractionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_JTTextEffect
|| __DATA.__objc_data _OBJC_CLASS_$_JTTextEffectEditorTextView
|| __DATA.__objc_data _OBJC_CLASS_$_JTTextEffectEditorView
|| __DATA.__objc_data _OBJC_CLASS_$_JTThermalMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_JTThreadSafeArray
|| __DATA.__objc_data _OBJC_CLASS_$_JTThreadSafeDictionary
|| __DATA.__objc_data _OBJC_CLASS_$_JTThumbnailGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_JTTitleCardCategory
|| __DATA.__objc_data _OBJC_CLASS_$_JTTrackedEffectProperties
|| __DATA.__objc_data _OBJC_CLASS_$_JTVideoCameraController
|| __DATA.__objc_data _OBJC_CLASS_$_JTVideoMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_JTVideoMediaUtils
|| __DATA.__objc_data _OBJC_CLASS_$_JTVideoWriter
|| __DATA.__objc_data _OBJC_CLASS_$_JTView
|| __DATA.__objc_data _OBJC_CLASS_$_JTViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SampleBufferRef
|| __DATA.__objc_data _OBJC_CLASS_$_UIViewWindowNotifier
|| __DATA.__objc_data _OBJC_CLASS_$_WriterReorderQ
|| __DATA.__objc_data _OBJC_METACLASS_$_BEAlertAction
|| __DATA.__objc_data _OBJC_METACLASS_$_BEAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXActionLogging
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnalyticsKeys
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnalyticsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnimationDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnimationHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnimojiEffectRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAnimojiPlaybackDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXApplicationState
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXAvailability
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXBundleUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXCameraControlsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXCameraViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXCaptureViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXClipPlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXControlsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXCounterRotationLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXCounterRotationView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectBrowserContentPresenterViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectBrowserView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectBrowserViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectComposition
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectEditorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectHostAppDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectMessagesStickerProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectMessagesStickerUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectPickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXEffectType
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXExportClipDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFaceReticleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFaceTrackingPlaybackDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFaceTrackingRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFaceTrackingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFeedbackController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFilterEffectPickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFilterPickerCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFilterPickerCollectionViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXFullScreenTextEditViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXLiveCaptureViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXMediaItemAdjustmentsData
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXMetadataValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXNextRenderedFrameCallback
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXNonTransformedLiveCaptureContainerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXOverlayEffectPickerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXOverlayPickerAnimatedPreviewWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXPlayButtonView
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXPreviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXRemoteCommandClient
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXRemoteCommandServer
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXReviewControlsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXReviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CFXViewfinderFlipTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_EditListCompositionState
|| __DATA.__objc_data _OBJC_METACLASS_$_JTARKitCameraSessionController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAVPlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAnimojiEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAssetMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAudioClip
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAudioMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTAutoPurgeDictionary
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCacheDictionary
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCaptureMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClip
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipCompositionUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipPlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipSequenceDisplayViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipSequenceExporter
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipSequencePlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipSequencePlayerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTClipUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCollectionView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCollectionViewFlowLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_JTComposition
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCompositionClipDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCompositionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCompositionSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCompositionTrackGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCompositionUpdateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCustomImageSensor
|| __DATA.__objc_data _OBJC_METACLASS_$_JTCustomRenderProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectAnimationView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectContinousPreviewOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectEditingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectFrame
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectPickerPreviewDiskCache
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectPreviewManager
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectPropertiesConstants
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectTextEditingProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectsPreviewGenerationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectsPreviewGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectsPreviewGeneratorJob
|| __DATA.__objc_data _OBJC_METACLASS_$_JTEffectsPreviewRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_JTExportController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFaceAnchor
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFileManagementUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFilterEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFilterEffectCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFixedSizeUIImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFormatters
|| __DATA.__objc_data _OBJC_METACLASS_$_JTFrameRateCalculator
|| __DATA.__objc_data _OBJC_METACLASS_$_JTImage
|| __DATA.__objc_data _OBJC_METACLASS_$_JTImageIOSurfaceView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTImageMTKView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTInstrucionGraphBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_JTLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_JTLocalAssetMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTMotionData
|| __DATA.__objc_data _OBJC_METACLASS_$_JTMovieCompositionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTOrientationMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_JTOverlayDebugRect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTOverlayDebugView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTOverlayEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTOverlayEffectCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_JTPassThroughContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTPickerCameraSource
|| __DATA.__objc_data _OBJC_METACLASS_$_JTPixelBufferPool
|| __DATA.__objc_data _OBJC_METACLASS_$_JTPixelRotationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_JTReaderWriterExportController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTSeekRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTStillCompositionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTStillMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTSuspendedInteractionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_JTTextEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_JTTextEffectEditorTextView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTTextEffectEditorView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTThermalMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_JTThreadSafeArray
|| __DATA.__objc_data _OBJC_METACLASS_$_JTThreadSafeDictionary
|| __DATA.__objc_data _OBJC_METACLASS_$_JTThumbnailGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_JTTitleCardCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_JTTrackedEffectProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_JTVideoCameraController
|| __DATA.__objc_data _OBJC_METACLASS_$_JTVideoMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_JTVideoMediaUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_JTVideoWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_JTView
|| __DATA.__objc_data _OBJC_METACLASS_$_JTViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SampleBufferRef
|| __DATA.__objc_data _OBJC_METACLASS_$_UIViewWindowNotifier
|| __DATA.__objc_data _OBJC_METACLASS_$_WriterReorderQ
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTCompositionUpdateRequest._readyForDisplayReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTCompositionUpdateRequest._refreshCompletedReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffect._effectID
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffect._renderEffect
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffect._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffectsPreviewGenerator._renderer
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffectsPreviewRequestHandler._job
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTEffectsPreviewRequestHandler._req
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._arFrameMetadataAdaptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._audioBufferQ
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._audioFormatHint
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._depthAdaptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._depthDimensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._depthPixelBufferAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._faceAnchorMetadataAdaptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._faceMetadataAdaptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._finishingLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._finishingWritingMovie
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._metadataAdaptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieARFrameAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieAssetWriter
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieAudioAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieDepthAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieFaceAnchorAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieFaceMetadataAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieMetadataAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._movieVideoAssetWriterInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._preparingWriter
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._reorderQ
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._sessionEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._sessionsStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._wroteFirstAudioSample
|| __DATA.__objc_ivar _OBJC_IVAR_$_JTVideoWriter._wroteSessionStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SampleBufferRef._arFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_SampleBufferRef._faceAnchor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SampleBufferRef._s
|| __DATA.__objc_ivar _OBJC_IVAR_$_WriterReorderQ._lastReorderedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_WriterReorderQ._q
|| __DATA_CONST.__const _CFXActionAddEffectKey
|| __DATA_CONST.__const _CFXActionCancelCameraKey
|| __DATA_CONST.__const _CFXActionExportStillKey
|| __DATA_CONST.__const _CFXActionExportVideoKey
|| __DATA_CONST.__const _CFXActionFlipCameraKey
|| __DATA_CONST.__const _CFXActionLocationLive
|| __DATA_CONST.__const _CFXActionLocationPostCapture
|| __DATA_CONST.__const _CFXActionLogItemEffectIDKey
|| __DATA_CONST.__const _CFXActionLogItemEffectNameKey
|| __DATA_CONST.__const _CFXActionLogItemEffectTrackingTypeKey
|| __DATA_CONST.__const _CFXActionLogItemEffectTypeKey
|| __DATA_CONST.__const _CFXActionLogItemEffectsKey
|| __DATA_CONST.__const _CFXActionLogItemRemainingMemoryKey
|| __DATA_CONST.__const _CFXActionLogItemUserEventKey
|| __DATA_CONST.__const _CFXActionLogItemViewLocationKey
|| __DATA_CONST.__const _CFXActionRemoveEffectKey
|| __DATA_CONST.__const _CFXActionRemoveEffectsKey
|| __DATA_CONST.__const _CFXActionRotateDeviceKey
|| __DATA_CONST.__const _CFXActionStartVideoKey
|| __DATA_CONST.__const _CFXActionStopVideoKey
|| __DATA_CONST.__const _CFXActionTakePhotoKey
|| __DATA_CONST.__const _CFXAddShapeNotification
|| __DATA_CONST.__const _CFXAddStickerNotification
|| __DATA_CONST.__const _CFXAddTextNotification
|| __DATA_CONST.__const _CFXAnimojiRendererMetadata_ARFrame
|| __DATA_CONST.__const _CFXAnimojiRendererMetadata_AVCaptureVideoOrientation
|| __DATA_CONST.__const _CFXAnimojiRendererMetadata_Effect
|| __DATA_CONST.__const _CFXAnimojiRendererMetadata_OriginalBufferSize
|| __DATA_CONST.__const _CFXAnimojiRendererMetadata_UIInterfaceOrientation
|| __DATA_CONST.__const _CFXEffectTypeIdentifierAnimoji
|| __DATA_CONST.__const _CFXEffectTypeIdentifierEmojiStickers
|| __DATA_CONST.__const _CFXEffectTypeIdentifierFilter
|| __DATA_CONST.__const _CFXEffectTypeIdentifierShapes
|| __DATA_CONST.__const _CFXEffectTypeIdentifierText
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_ARFrame
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_AVCaptureVideoOrientation
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_DeviceInterfaceOrientation
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_JTFaceAnchor
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_OriginalBufferSize
|| __DATA_CONST.__const _CFXFaceTrackingRendererMetadata_UIInterfaceOrientation
|| __DATA_CONST.__const _CFXFaceTrackingRendererNode_3DFacePlane
|| __DATA_CONST.__const _CFXFaceTrackingRendererNode_Billboard
|| __DATA_CONST.__const _CFXFaceTrackingRendererNode_FaceAnchor
|| __DATA_CONST.__const _CFXFaceTrackingRendererNode_FaceRect
|| __DATA_CONST.__const _CFXFiltersBundleIdentifier
|| __DATA_CONST.__const _CFXRemoveEffectsNotification
|| __DATA_CONST.__const _CFXSetAnimojiNotification
|| __DATA_CONST.__const _CFXSetFilterNotification
|| __DATA_CONST.__const _CFX_AspectRatioCrop
|| __DATA_CONST.__const _CFX_BillboardCompositionScale
|| __DATA_CONST.__const _CFX_CaptureEffectInsertionSize
|| __DATA_CONST.__const _CFX_DEBUG_CFXFaceTrackingRenderer_DebugFaceRect
|| __DATA_CONST.__const _CFX_DEBUG_DrawEffectEditorBounds
|| __DATA_CONST.__const _CFX_DEBUG_DrawNonTrackedOverlayBoundsWhenTracking
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBounds
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBoundsOptionShowAdditionalRects
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBoundsOptionShowCornerPoints
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBoundsOptionShowDocumentBoundingBox
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBoundsOptionShowMidpoint
|| __DATA_CONST.__const _CFX_DEBUG_DrawOverlayBoundsOptionShowObjectAlignedBoundingBox
|| __DATA_CONST.__const _CFX_DEMO_UseMirroredFrontCameraInStreamMode
|| __DATA_CONST.__const _CFX_DEMO_effectPlacementKey
|| __DATA_CONST.__const _CFX_DisableFaceTimeAnimationLooping
|| __DATA_CONST.__const _CFX_DisableFaceTracking
|| __DATA_CONST.__const _CFX_EnableFaceTrackingBackCamera
|| __DATA_CONST.__const _CFX_EnableFrameMetricsLogging
|| __DATA_CONST.__const _CFX_MaxCameraToFacePlaneDistance
|| __DATA_CONST.__const _CFX_MaxCameraToFaceTrackingDistance
|| __DATA_CONST.__const _CFX_MinimizePickerCameraPreviewThermalThrottling
|| __DATA_CONST.__const _FunCamExifCameraOwnerName
|| __DATA_CONST.__const _JTCaptureSessionInterruptedKey
|| __DATA_CONST.__const _JTCaptureSessionInterruptedNotification
|| __DATA_CONST.__const _JTCustomRendering_Animoji
|| __DATA_CONST.__const _JTCustomRendering_FaceTracking
|| __DATA_CONST.__const _JTFrameMetricsEventRendered
|| __DATA_CONST.__const _JTLastCameraPositionDefault
|| __DATA_CONST.__const _JTOrientationMonitorCaptureInterfaceOrientation
|| __DATA_CONST.__const _JTOrientationMonitorWindowInterfaceOrientation
|| __DATA_CONST.__const _JTThermalMonitorLevelChangedNotification
|| __DATA_CONST.__const _PVFrameSetMetadataARFrameKey
|| __DATA_CONST.__const _PVFrameSetMetadataDeviceOrientationKey
|| __DATA_CONST.__const _PVFrameSetMetadataFaceAnchorKey
|| __DATA_CONST.__const _PVFrameSetMetadataOriginalBufferSizeKey
|| __DATA_CONST.__const _SPI_kOSThermalNotificationPressureLevelName
|| __DATA_CONST.__const _kAggdKeyPrefixConstant
|| __DATA_CONST.__const _kAnalyticsEventActiveTime
|| __DATA_CONST.__const _kAnalyticsEventAnimojiUsed
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyAnimoji
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyBackCamera
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyEffectEmojiSticker
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyEffectFilter
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyEffectLabel
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyEffectMessagesSticker
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyEffectShape
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyFrontCamera
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyPhoto
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeySent
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeySourceFuncam
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyVideo
|| __DATA_CONST.__const _kAnalyticsEventAssembleKeyWith
|| __DATA_CONST.__const _kAnalyticsEventCountOrDurationValueKey
|| __DATA_CONST.__const _kAnalyticsEventEmojiStickerUsed
|| __DATA_CONST.__const _kAnalyticsEventFilterUsed
|| __DATA_CONST.__const _kAnalyticsEventLabelUsed
|| __DATA_CONST.__const _kAnalyticsEventLaunched
|| __DATA_CONST.__const _kAnalyticsEventMessagesStickerUsed
|| __DATA_CONST.__const _kAnalyticsEventNameKey
|| __DATA_CONST.__const _kAnalyticsEventNumberOfStills
|| __DATA_CONST.__const _kAnalyticsEventNumberOfVideos
|| __DATA_CONST.__const _kAnalyticsEventSentPostCaptureWithFuncamAnimoji
|| __DATA_CONST.__const _kAnalyticsEventSentPostCaptureWithFuncamPhoto
|| __DATA_CONST.__const _kAnalyticsEventSentPostCaptureWithFuncamVideo
|| __DATA_CONST.__const _kAnalyticsEventShapeUsed
|| __DATA_CONST.__const _kAnalyticsEventThermalHeavyToModerate
|| __DATA_CONST.__const _kAnalyticsEventThermalHeavyToTrapping
|| __DATA_CONST.__const _kAnalyticsEventThermalLightToModerate
|| __DATA_CONST.__const _kAnalyticsEventThermalLightToNominal
|| __DATA_CONST.__const _kAnalyticsEventThermalModerateToHeavy
|| __DATA_CONST.__const _kAnalyticsEventThermalModerateToLight
|| __DATA_CONST.__const _kAnalyticsEventThermalNominalToLight
|| __DATA_CONST.__const _kAnalyticsEventThermalSleepingToTrapping
|| __DATA_CONST.__const _kAnalyticsEventThermalTrappingToHeavy
|| __DATA_CONST.__const _kAnalyticsEventThermalTrappingToSleeping
|| __DATA_CONST.__const _kAnalyticsEventTimeStampKey
|| __DATA_CONST.__const _kAnalyticsEventVideoDuration
|| __DATA_CONST.__const _kClipARSelfiesListKey
|| __DATA_CONST.__const _kClipAnimojisListKey
|| __DATA_CONST.__const _kClipAudioAnalysisKey
|| __DATA_CONST.__const _kClipAudioClipKey
|| __DATA_CONST.__const _kClipAudioEnableKey
|| __DATA_CONST.__const _kClipAudioInitialStartOffsetKey
|| __DATA_CONST.__const _kClipDurationKey
|| __DATA_CONST.__const _kClipEffectsListKey
|| __DATA_CONST.__const _kClipFiltersListKey
|| __DATA_CONST.__const _kClipLiveTitlesListKey
|| __DATA_CONST.__const _kClipMediaItemKey
|| __DATA_CONST.__const _kClipMediaStartOffsetKey
|| __DATA_CONST.__const _kClipOverlaysListKey
|| __DATA_CONST.__const _kClipPresentationTimeKey
|| __DATA_CONST.__const _kClipProvisionalAudioInitialStartOffsetKey
|| __DATA_CONST.__const _kClipSketchesListKey
|| __DATA_CONST.__const _kClipTranscriptionEditKey
|| __DATA_CONST.__const _kClipTranscriptionFormattedStringKey
|| __DATA_CONST.__const _kClipTranscriptionKey
|| __DATA_CONST.__const _kClipTranscriptionRunKey
|| __DATA_CONST.__const _kClipTransformAnimationKey
|| __DATA_CONST.__const _kClipTransformInitialStartOffset
|| __DATA_CONST.__const _kClipUUIDKey
|| __DATA_CONST.__const _kDisableThermalTrackingKey
|| __DATA_CONST.__const _kDotConstant
|| __DATA_CONST.__const _kEditableOverlaysCategoryID
|| __DATA_CONST.__const _kEmojiStickersCategoryID
|| __DATA_CONST.__const _kEmojisOverlayCategoryID
|| __DATA_CONST.__const _kFacetimeBundleIdentifier
|| __DATA_CONST.__const _kJTAccessibilityOverlayEffectLabelKey
|| __DATA_CONST.__const _kJTEffectEffectIDCoderKey
|| __DATA_CONST.__const _kJTEffectEffectParameterCoderKey
|| __DATA_CONST.__const _kJTEffectEffectTypeCoderKey
|| __DATA_CONST.__const _kJTFaceAnchorCameraTransformKey
|| __DATA_CONST.__const _kJTFaceAnchorFaceRectKey
|| __DATA_CONST.__const _kJTFaceAnchorFocalLengthKey
|| __DATA_CONST.__const _kJTFaceAnchorTransformKey
|| __DATA_CONST.__const _kJTOverlayEffectTrackingPropsKey
|| __DATA_CONST.__const _kJTThermalMonitorLevelChangedKey
|| __DATA_CONST.__const _kJTTrackedEffectProperties_disableKey
|| __DATA_CONST.__const _kJTTrackedEffectProperties_typeKey
|| __DATA_CONST.__const _kMediaserverdCrashed
|| __DATA_CONST.__const _kMessagesBundleIdentifier
|| __DATA_CONST.__const _kShapeOverlaysCategoryID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CFXCaptureViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CFXFilterEffectPickerView
|| __TEXT.__const _CFXAnimojiPortraitFocalLength_16x9
|| __TEXT.__const _CFXAnimojiPortraitFocalLength_4x3
|| __TEXT.__const _CFXAspectRatioFourThree
|| __TEXT.__const _CFXAspectRatioSixteenNine
|| __TEXT.__const _CFXAspectRatioSquare
|| __TEXT.__const _CFXCameraModePhoto
|| __TEXT.__const _CFXCameraModeStream
|| __TEXT.__const _CFXCameraModeVideo
|| __TEXT.__const _CFXEffectPreviewStartAtNextRenderTime
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppAnimationDuration
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppBottomMargin
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppDefaultTopMargin
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppDockCornerRadius
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppDockHeight
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppLeftMargin
|| __TEXT.__const _CFXMessagesAlwaysExpandedAppWidth
|| __TEXT.__const _CFXMinOverlayTouchSize
|| __TEXT.__const _CameraEffectsKitVersionNumber
|| __TEXT.__const _CameraEffectsKitVersionString
|| __TEXT.__const _kAppsDockHeight
|| __TEXT.__const _kCFXFilterPickerInfiniteScrollingCenterCopyIndex
|| __TEXT.__const _kCFXFilterPickerInfiniteScrollingItemCountMultiplier
|| __TEXT.__const _kCompactFilterPickerCellContentCornerRadius
|| __TEXT.__const _kCompactFilterPickerCellSelectionCornerRadius
|| __TEXT.__const _kCompactFilterPickerCellSelectorBorderWidth
|| __TEXT.__const _kCompactFilterPickerCellSize
|| __TEXT.__const _kCompactFilterPickerCollectionViewHeight
|| __TEXT.__const _kCompactFilterPickerSelectionCenterThreshold
|| __TEXT.__const _kCompactFilterPickerSelectionFontSize
|| __TEXT.__const _kCompactFilterPickerTitleBaselineDistanceFromCell
|| __TEXT.__const _kCompactFilterPickerTitleTextHeight
|| __TEXT.__const _kDefaultEffectPickerBottomInset
|| __TEXT.__const _kDefaultEffectPickerCellContentCornerRadius
|| __TEXT.__const _kDefaultEffectPickerCellHorizontalSpacing
|| __TEXT.__const _kDefaultEffectPickerCellSelectionCornerRadius
|| __TEXT.__const _kDefaultEffectPickerCellVerticalSpacing
|| __TEXT.__const _kDefaultEffectPickerColumns
|| __TEXT.__const _kDefaultEffectPickerLeftInset
|| __TEXT.__const _kDefaultEffectPickerRightInset
|| __TEXT.__const _kDefaultEffectPickerSelectionMargin
|| __TEXT.__const _kDefaultEffectPickerSelectorBorderWidth
|| __TEXT.__const _kDefaultEffectPickerTitleHeight
|| __TEXT.__const _kDefaultEffectPickerTopInset
|| __TEXT.__const _kDefaultEffectPreviewAnimationRange
|| __TEXT.__const _kDefaultEffectPreviewRenderTime
|| __TEXT.__const _kDefaultFrameRate
|| __TEXT.__const _kDefaultPlaybackTimeObserverInterval
|| __TEXT.__const _kDefaultRenderHeight
|| __TEXT.__const _kDefaultRenderWidth
|| __TEXT.__const _kDefaultTimeScale
|| __TEXT.__const _kExpandedLayoutColumnCount
|| __TEXT.__const _kJTFaceAnchorScaleMultiplier
|| __TEXT.__const _kProjectThumbnailMaxClipCount
|| __TEXT.__const _kThumbnailDimension
|| __TEXT.__text _AXDurationStringForDuration
|| __TEXT.__text _CFXAddShapeNotificationGetEffectIdentifier
|| __TEXT.__text _CFXAddShapeNotificationUserInfoForEffect
|| __TEXT.__text _CFXAddStickerNotificationGetOffset
|| __TEXT.__text _CFXAddStickerNotificationGetRotation
|| __TEXT.__text _CFXAddStickerNotificationGetScale
|| __TEXT.__text _CFXAddStickerNotificationGetURL
|| __TEXT.__text _CFXAddStickerNotificationUserInfo
|| __TEXT.__text _CFXAddTextNotificationGetEffectIdentifier
|| __TEXT.__text _CFXAddTextNotificationGetEffectString
|| __TEXT.__text _CFXAddTextNotificationUserInfoForEffect
|| __TEXT.__text _CFXAspectRatioCropOverride
|| __TEXT.__text _CFXAspectRatioForAspectRatioCrop
|| __TEXT.__text _CFXCanonicalAspectRatioCropForCaptureModeAndDesiredAspectRatioCrop
|| __TEXT.__text _CFXCreateDispatchQueue
|| __TEXT.__text _CFXPreviewAspectRatioForAspectRatioCrop
|| __TEXT.__text _CFXRemoveEffectsNotificationGetEffectTypeIdentifiers
|| __TEXT.__text _CFXRemoveEffectsNotificationUserInfoForEffectTypes
|| __TEXT.__text _CFXSetAnimojiNotificationGetEffectIdentifier
|| __TEXT.__text _CFXSetAnimojiNotificationUserInfoForEffect
|| __TEXT.__text _CFXSetFilterNotificationGetEffectIdentifier
|| __TEXT.__text _CFXSetFilterNotificationUserInfoForEffect
|| __TEXT.__text _CGPointCeil
|| __TEXT.__text _CGPointFloor
|| __TEXT.__text _CGPointRound
|| __TEXT.__text _CGRectCenterOverRect
|| __TEXT.__text _CGRectCenterOverRectHorizontally
|| __TEXT.__text _CGRectCenterOverRectVertically
|| __TEXT.__text _CGRectCenterRectAtNormalizedPointInRect
|| __TEXT.__text _CGRectCenterRectInRect
|| __TEXT.__text _CGRectCouldContainRect
|| __TEXT.__text _CGRectFillRectToAspectInRect
|| __TEXT.__text _CGRectFitRectToAspectInRect
|| __TEXT.__text _CGRectFitRectToAspectInRectNoExpansion
|| __TEXT.__text _CGRectFloorIntegral
|| __TEXT.__text _CGRectForInnerSizeCenteredInOuterSize
|| __TEXT.__text _CGRectGetCenterPoint
|| __TEXT.__text _CGRectLeftRightSidesSpanRect
|| __TEXT.__text _CGRectMoveToKeepCenterWithinRect
|| __TEXT.__text _CGRectMoveToKeepWithinRect
|| __TEXT.__text _CGRectMoveToKeepWithinRectHorizontally
|| __TEXT.__text _CGRectMoveToKeepWithinRectVertically
|| __TEXT.__text _CGRectRotate
|| __TEXT.__text _CGRectScaleAndCenter
|| __TEXT.__text _CGRectStraighten
|| __TEXT.__text _CGRectTopBottomSidesSpanRect
|| __TEXT.__text _CGRectTopQuarterRectInRect
|| __TEXT.__text _CGRectTranslateHorizontallyToContain
|| __TEXT.__text _CGRectTranslateToShareBottomEdge
|| __TEXT.__text _CGRectTranslateToShareLeftEdge
|| __TEXT.__text _CGRectTranslateToShareRightEdge
|| __TEXT.__text _CGRectTranslateToShareTopEdge
|| __TEXT.__text _CGRectTranslateVerticallyToContain
|| __TEXT.__text _CGSizeAngleAndDistance
|| __TEXT.__text _CGSizeCouldContainSize
|| __TEXT.__text _CGSizeFillSizeToAspectInSize
|| __TEXT.__text _CGSizeFillSizeToAspectInSizeLimitedToProVideoMaxSize
|| __TEXT.__text _CGSizeFillingTargetSizeLimitedToMaxSize
|| __TEXT.__text _CGSizeFitToAspectInSize
|| __TEXT.__text _CGSizeIntegral
|| __TEXT.__text _CGSizeScale
|| __TEXT.__text _CMTimeCopyDescriptionWithScale
|| __TEXT.__text _CMTimeFromFrameTime
|| __TEXT.__text _CMTimeGetDistanceToRange
|| __TEXT.__text _CMTimeMakeWithARFrameTimestamp
|| __TEXT.__text _CMTimeRangeConvertScale
|| __TEXT.__text _CMTimeRangeCopyDescriptionWithScale
|| __TEXT.__text _CMTimeRangeForStartAndDuration
|| __TEXT.__text _CoreGraphicsSerializationQueue
|| __TEXT.__text _DurationCMTimeFromFrameTime
|| __TEXT.__text _DurationSecondsFromFrameTime
|| __TEXT.__text _EffectClassForType
|| __TEXT.__text _FrameTimeFromCMTime
|| __TEXT.__text _FrameTimeFromSeconds
|| __TEXT.__text _FrameTimeIntegerFloorFromSeconds
|| __TEXT.__text _JTAutomationLogFrameMetrics
|| __TEXT.__text _JTCameraModeForCaptureModeAndAspectRatioCrop
|| __TEXT.__text _JTCaptureCapabilitiesIs1080pCapableDevice
|| __TEXT.__text _JTCaptureCapabilitiesIsDepthCapableDevice
|| __TEXT.__text _JTCroppedFrameSizeForCameraModeAndOrientation
|| __TEXT.__text _JTIsCTMCameraMode
|| __TEXT.__text _JTLogSubsystem
|| __TEXT.__text _JTLog_DebugEffectEditingUI
|| __TEXT.__text _JTLog_DebugEffectEditorRenderer
|| __TEXT.__text _JTLog_DebugFaceAnchor
|| __TEXT.__text _JTLog_DebugOverlays
|| __TEXT.__text _JTLog_DebugPlayback
|| __TEXT.__text _JTLog_DebugReorder
|| __TEXT.__text _JTLog_DebugWriter
|| __TEXT.__text _JTLog_action
|| __TEXT.__text _JTLog_animoji
|| __TEXT.__text _JTLog_automation
|| __TEXT.__text _JTLog_camera
|| __TEXT.__text _JTLog_core
|| __TEXT.__text _JTLog_effects
|| __TEXT.__text _JTLog_export
|| __TEXT.__text _JTLog_facetracking
|| __TEXT.__text _JTLog_metadata
|| __TEXT.__text _JTLog_multipass
|| __TEXT.__text _JTLog_pickerUI
|| __TEXT.__text _JTLog_playback
|| __TEXT.__text _JTLog_thermal
|| __TEXT.__text _JTLog_viewerUI
|| __TEXT.__text _JTMaximumVideoDimensionForCameraMode
|| __TEXT.__text _JTMaximumVideoDimensionsForCameraMode
|| __TEXT.__text _JTMinimumVideoDimensionsForCameraMode
|| __TEXT.__text _JTNSStringForCMTime
|| __TEXT.__text _JTTextEffectCGPointApplyAffineTransform
|| __TEXT.__text _JTUncroppedFrameSizeForCameraModeAndOrientation
|| __TEXT.__text _NSStringFromCFXAspectRatioCrop
|| __TEXT.__text _NSStringFromJTCameraMode
|| __TEXT.__text _NSStringFromJTEffectType
|| __TEXT.__text _NSStringFromJTTrackingType
|| __TEXT.__text _NSStringFromOSThermalPressureLevel
|| __TEXT.__text _PointIsInPolygon
|| __TEXT.__text _SecondsFromFrameTime
|| __TEXT.__text _billboardCompositionScaleOverride
|| __TEXT.__text _deepColorSafeDrawInRect
|| __TEXT.__text _drawImageAtTargetSizeInBottomLeftQuadrantUsingContext
|| __TEXT.__text _drawImageAtTargetSizeInBottomRightQuadrantUsingContext
|| __TEXT.__text _drawImageAtTargetSizeInLeftHalfUsingContext
|| __TEXT.__text _drawImageAtTargetSizeInRightHalfUsingContext
|| __TEXT.__text _drawImageAtTargetSizeInTopLeftQuadrantUsingContext
|| __TEXT.__text _drawImageAtTargetSizeInTopRightQuadrantUsingContext
|| __TEXT.__text _drawImageAtTargetSizeUsingContext
|| __TEXT.__text _drawImageInRectWithClippingRectUsingContext
|| __TEXT.__text _exifBrightnessForCMSampleBuffer
|| __TEXT.__text _exposureOffsetForCMSampleBuffer
|| __TEXT.__text _exposureTimeForCMSampleBuffer
|| __TEXT.__text _imageWithoutDeepColor
|| __TEXT.__text _isDrawEffectsEditorBoundsEnabled
|| __TEXT.__text _isDrawNonTrackedOverlayBoundsWhenTrackingEnabled
|| __TEXT.__text _isDrawOverlayBoundsEnabled
|| __TEXT.__text _isDrawOverlayBoundsOptionShowAdditionalRectsEnabled
|| __TEXT.__text _isDrawOverlayBoundsOptionShowCornerPointsEnabled
|| __TEXT.__text _isDrawOverlayBoundsOptionShowDocumentBoundingBoxEnabled
|| __TEXT.__text _isDrawOverlayBoundsOptionShowMidpointEnabled
|| __TEXT.__text _isDrawOverlayBoundsOptionShowObjectAlignedBoundingBoxEnabled
|| __TEXT.__text _isFaceTrackingEnabled
|| __TEXT.__text _isFaceTrackingEnabledOnBackCamera
|| __TEXT.__text _isFrameMetricsLoggingEnabled
|| __TEXT.__text _isoForCMSampleBuffer
|| __TEXT.__text _logCameraIntrinsics
|| __TEXT.__text _logMetadataInCMSampleBuffer
|| __TEXT.__text _matrix4x4_translation
|| __TEXT.__text _matrix_perspective
|| __TEXT.__text _pctOfTotalFromPctOfPart
|| __TEXT.__text _renderImageWithUpOrientation
|| __TEXT.__text _shutterSpeedForCMSampleBuffer
|| __TEXT.__text _useMirroredFrontCameraInStreamMode
|| __TEXT.__text _valueAtPctBetweenValues
__ ARKit: _ARCameraFieldOfViewFromIntrinsics
__ ARKit: _ARErrorDomain
__ ARKit: _ARIntrinsicsFromDeviceFormat
__ ARKit: _OBJC_CLASS_$_ARDeviceOrientationSensor
__ ARKit: _OBJC_CLASS_$_ARFaceAnchor
__ ARKit: _OBJC_CLASS_$_ARFaceData
__ ARKit: _OBJC_CLASS_$_ARFaceTrackingConfiguration
__ ARKit: _OBJC_CLASS_$_ARFrame
__ ARKit: _OBJC_CLASS_$_ARImageData
__ ARKit: _OBJC_CLASS_$_ARMotionSensor
__ ARKit: _OBJC_CLASS_$_ARSession
__ AVFoundation: _AVAssetExportPreset1280x720
__ AVFoundation: _AVAssetExportPreset1920x1080
__ AVFoundation: _AVAssetExportPreset3840x2160
__ AVFoundation: _AVAssetExportPreset640x480
__ AVFoundation: _AVAssetExportPreset960x540
__ AVFoundation: _AVAudioSessionOrientationBack
__ AVFoundation: _AVAudioSessionPolarPatternOmnidirectional
__ AVFoundation: _AVAudioSessionPortBuiltInMic
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVAudioTimePitchAlgorithmLowQualityZeroLatency
__ AVFoundation: _AVAudioTimePitchAlgorithmSpectral
__ AVFoundation: _AVAudioTimePitchAlgorithmTimeDomain
__ AVFoundation: _AVAudioTimePitchAlgorithmVarispeed
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTelephotoCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTripleCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTrueDepthCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureSessionDidStartRunningNotification
__ AVFoundation: _AVCaptureSessionDidStopRunningNotification
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionInterruptionEndedNotification
__ AVFoundation: _AVCaptureSessionInterruptionReasonKey
__ AVFoundation: _AVCaptureSessionInterruptionSystemPressureStateKey
__ AVFoundation: _AVCaptureSessionPreset1280x720
__ AVFoundation: _AVCaptureSessionPreset1920x1080
__ AVFoundation: _AVCaptureSessionPresetPhoto
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVCaptureSessionWasInterruptedNotification
__ AVFoundation: _AVChannelLayoutKey
__ AVFoundation: _AVEncoderBitRateKey
__ AVFoundation: _AVErrorDeviceKey
__ AVFoundation: _AVFileTypeHEIC
__ AVFoundation: _AVFileTypeJPEG
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVFormatIDKey
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVLayerVideoGravityResize
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMakeRectWithAspectRatioInsideRect
__ AVFoundation: _AVMediaCharacteristicAudible
__ AVFoundation: _AVMediaCharacteristicVisual
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeMetadata
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonKeyFormat
__ AVFoundation: _AVMetadataIdentifierQuickTimeMetadataDetectedFace
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVMetadataKeySpaceQuickTimeMetadata
__ AVFoundation: _AVMetadataObjectTypeFace
__ AVFoundation: _AVMetadataObjectTypeTrackedFaces
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyArtwork
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyIsMontage
__ AVFoundation: _AVNumberOfChannelsKey
__ AVFoundation: _AVOutputSettingsPreset3840x2160
__ AVFoundation: _AVOutputSettingsPresetHEVC3840x2160
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVSampleRateKey
__ AVFoundation: _AVTrackAssociationTypeMetadataReferent
__ AVFoundation: _AVURLAssetPreferPreciseDurationAndTimingKey
__ AVFoundation: _AVVideoAllowFrameReorderingKey
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoCodecTypeHEVC
__ AVFoundation: _AVVideoCodecTypeJPEG
__ AVFoundation: _AVVideoColorPrimariesKey
__ AVFoundation: _AVVideoColorPrimaries_ITU_R_709_2
__ AVFoundation: _AVVideoColorPropertiesKey
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoH264EntropyModeCABAC
__ AVFoundation: _AVVideoH264EntropyModeKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoProfileLevelH264Baseline30
__ AVFoundation: _AVVideoProfileLevelH264Baseline31
__ AVFoundation: _AVVideoProfileLevelH264Baseline41
__ AVFoundation: _AVVideoProfileLevelH264HighAutoLevel
__ AVFoundation: _AVVideoProfileLevelH264MainAutoLevel
__ AVFoundation: _AVVideoProfileLevelKey
__ AVFoundation: _AVVideoTransferFunctionKey
__ AVFoundation: _AVVideoTransferFunction_ITU_R_709_2
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _AVVideoYCbCrMatrixKey
__ AVFoundation: _AVVideoYCbCrMatrix_ITU_R_709_2
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetReader
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderAudioMixOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderOutputMetadataAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderTrackOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetReaderVideoCompositionOutput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputMetadataAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputPixelBufferAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureAudioDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDataOutputSynchronizer
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDepthDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCompositionTrackSegment
__ AVFoundation: _OBJC_CLASS_$_AVMetadataFaceObject
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMix
__ AVFoundation: _OBJC_CLASS_$_AVMutableAudioMixInputParameters
__ AVFoundation: _OBJC_CLASS_$_AVMutableComposition
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVOutputSettingsAssistant
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVTimedMetadataGroup
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AVKit: _OBJC_METACLASS_$_AVPlayerViewController
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AppleCVA: _kCVAFaceKit_FailureType
__ AppleCVA: _kCVAFaceKit_TrackedFacesArray
__ AudioToolbox: _AudioServicesPlaySystemSound
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ AvatarKit: _AVTInitializeShaderCache
__ AvatarKit: _OBJC_CLASS_$_AVTAnimoji
__ AvatarKit: _OBJC_CLASS_$_AVTFaceTracker
__ AvatarKit: _OBJC_CLASS_$_AVTFaceTrackingInfo
__ AvatarKit: _OBJC_CLASS_$_AVTRenderer
__ AvatarUI: _OBJC_CLASS_$_AVTAvatarFetchRequest
__ AvatarUI: _OBJC_CLASS_$_AVTAvatarRecordRendering
__ AvatarUI: _OBJC_CLASS_$_AVTAvatarStore
__ CameraUI: _CAMDynamicShutterSettingsDefault
__ CameraUI: _CAMMotionControllerCaptureOrientationChangedNotification
__ CameraUI: _OBJC_CLASS_$_CAMBottomBar
__ CameraUI: _OBJC_CLASS_$_CAMCaptureCapabilities
__ CameraUI: _OBJC_CLASS_$_CAMControlStatusBar
__ CameraUI: _OBJC_CLASS_$_CAMCreativeCameraButton
__ CameraUI: _OBJC_CLASS_$_CAMDynamicShutterControl
__ CameraUI: _OBJC_CLASS_$_CAMElapsedTimeView
__ CameraUI: _OBJC_CLASS_$_CAMFlashButton
__ CameraUI: _OBJC_CLASS_$_CAMFlipButton
__ CameraUI: _OBJC_CLASS_$_CAMFullscreenViewfinderLayout
__ CameraUI: _OBJC_CLASS_$_CAMMotionController
__ CameraUI: _OBJC_CLASS_$_CAMSnapshotView
__ CameraUI: _OBJC_CLASS_$_CAMViewfinderReticleView
__ CameraUI: _OBJC_CLASS_$_CAMZoomControl
__ CameraUI: _OBJC_CLASS_$_CAMZoomControlUtilities
__ CameraUI: _OBJC_CLASS_$_CAMZoomSlider
__ CameraUI: _OBJC_CLASS_$_CAMZoomSliderUtilities
__ CameraUI: _OBJC_CLASS_$_CUShutterButton
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceIsWideGamutRGB
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIInputRadiusKey
__ CoreImage: _kCIInputTransformKey
__ CoreMedia: _CMAudioFormatDescriptionEqual
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMClockGetHostTimeClock
__ CoreMedia: _CMClockGetTime
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMGetAttachment
__ CoreMedia: _CMMetadataFormatDescriptionCreateWithMetadataSpecifications
__ CoreMedia: _CMMetadataFormatDescriptionGetIdentifiers
__ CoreMedia: _CMSampleBufferCreateReadyWithImageBuffer
__ CoreMedia: _CMSampleBufferGetDuration
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMSampleBufferGetOutputPresentationTimeStamp
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMSampleBufferGetSampleTimingInfo
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeCopyDescription
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMappingMake
__ CoreMedia: _CMTimeMaximum
__ CoreMedia: _CMTimeMinimum
__ CoreMedia: _CMTimeMultiply
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeContainsTimeRange
__ CoreMedia: _CMTimeRangeCopyDescription
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeGetIntersection
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionCreateForImageBuffer
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _kCMMetadataBaseDataType_Float32
__ CoreMedia: _kCMMetadataBaseDataType_RawData
__ CoreMedia: _kCMMetadataBaseDataType_UInt64
__ CoreMedia: _kCMMetadataFormatDescriptionMetadataSpecificationKey_DataType
__ CoreMedia: _kCMMetadataFormatDescriptionMetadataSpecificationKey_Identifier
__ CoreMedia: _kCMSampleBufferAttachmentKey_DroppedFrameReason
__ CoreMedia: _kCMSampleBufferDroppedFrameReason_Discontinuity
__ CoreMedia: _kCMSampleBufferDroppedFrameReason_FrameWasLate
__ CoreMedia: _kCMSampleBufferDroppedFrameReason_OutOfBuffers
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeRangeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ CoreServices: _kUTTypeMPEG4
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypeQuickTimeMovie
__ CoreVideo: _CVBufferGetAttachment
__ CoreVideo: _CVBufferPropagateAttachments
__ CoreVideo: _CVBufferRelease
__ CoreVideo: _CVBufferSetAttachment
__ CoreVideo: _CVMetalTextureCacheCreate
__ CoreVideo: _CVMetalTextureCacheCreateTextureFromImage
__ CoreVideo: _CVMetalTextureCacheFlush
__ CoreVideo: _CVMetalTextureGetTexture
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetBytesPerRow
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetHeightOfPlane
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferGetWidthOfPlane
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferPoolCreate
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferPoolFlush
__ CoreVideo: _CVPixelBufferPoolRelease
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _CVPixelBufferUnlockBaseAddress
__ CoreVideo: _kCVImageBufferColorPrimariesKey
__ CoreVideo: _kCVImageBufferColorPrimaries_ITU_R_709_2
__ CoreVideo: _kCVImageBufferTransferFunctionKey
__ CoreVideo: _kCVImageBufferTransferFunction_ITU_R_709_2
__ CoreVideo: _kCVImageBufferYCbCrMatrixKey
__ CoreVideo: _kCVImageBufferYCbCrMatrix_ITU_R_601_4
__ CoreVideo: _kCVImageBufferYCbCrMatrix_ITU_R_709_2
__ CoreVideo: _kCVMetalTextureCacheMaximumTextureAgeKey
__ CoreVideo: _kCVPixelBufferBytesPerRowAlignmentKey
__ CoreVideo: _kCVPixelBufferExtendedPixelsBottomKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferMetalCompatibilityKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferPlaneAlignmentKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ Espresso: _OBJC_CLASS_$_EspressoImage2Image
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostDidEnterBackgroundNotification
__ Foundation: _NSExtensionHostWillResignActiveNotification
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationAddImageAndMetadata
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageDestinationSetProperties
__ ImageIO: _CGImageMetadataCreateMutableCopy
__ ImageIO: _CGImageMetadataRemoveTagWithPath
__ ImageIO: _CGImageSourceCopyMetadataAtIndex
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateThumbnailAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImageDestinationLossyCompressionQuality
__ ImageIO: _kCGImagePropertyAPNGDelayTime
__ ImageIO: _kCGImagePropertyAPNGLoopCount
__ ImageIO: _kCGImagePropertyAPNGUnclampedDelayTime
__ ImageIO: _kCGImagePropertyExifCameraOwnerName
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifLensModel
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFOrientation
__ ImageIO: _kCGImageSourceCreateThumbnailFromImageAlways
__ ImageIO: _kCGImageSourceCreateThumbnailWithTransform
__ ImageIO: _kCGImageSourceShouldCache
__ ImageIO: _kCGImageSourceThumbnailMaxPixelSize
__ Messages: _OBJC_CLASS_$_MSMessagesAppViewController
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLSamplerDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MetalKit: _OBJC_CLASS_$_MTKTextureLoader
__ MetalKit: _OBJC_CLASS_$_MTKView
__ MetalKit: _OBJC_METACLASS_$_MTKView
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCollection
__ Photos: _OBJC_CLASS_$_PHAssetCollectionChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCreationRequest
__ Photos: _OBJC_CLASS_$_PHAssetResourceCreationOptions
__ Photos: _OBJC_CLASS_$_PHContentEditingInputRequestOptions
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHVideoRequestOptions
__ Photos: _PHContentEditingInputResultIsInCloudKey
__ Photos: _PHImageResultIsInCloudKey
__ PhotosUI: _OBJC_CLASS_$_PUReviewScreenDoneButton
__ PhotosUI: _OBJC_CLASS_$_PUReviewScreenUtilities
__ ProVideo: _AffineTransformByDemotingProjectiveTransform
__ ProVideo: _BoundingRect
__ ProVideo: _CGAffineTransformFromPVAnimInfo
__ ProVideo: _CreatePVLPThrottlingControlParameters
__ ProVideo: _MakePVCameraFrameMetadata
__ ProVideo: _MakePVFaceDetection
__ ProVideo: _OBJC_CLASS_$_PCMatrix44Double
__ ProVideo: _OBJC_CLASS_$_PVCMSampleBuffer
__ ProVideo: _OBJC_CLASS_$_PVEffect
__ ProVideo: _OBJC_CLASS_$_PVEffectResources
__ ProVideo: _OBJC_CLASS_$_PVFrameSet
__ ProVideo: _OBJC_CLASS_$_PVImageBuffer
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphEffectNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphGeneratorNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphImageBufferSourceNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphImageSourceNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphSourceCompositeNode
__ ProVideo: _OBJC_CLASS_$_PVInstructionGraphSourceTrackNode
__ ProVideo: _OBJC_CLASS_$_PVLivePlayer
__ ProVideo: _OBJC_CLASS_$_PVLivePlayerCARenderLink
__ ProVideo: _OBJC_CLASS_$_PVLivePlayerCameraRenderLink
__ ProVideo: _OBJC_CLASS_$_PVLivePlayerCameraSource
__ ProVideo: _OBJC_CLASS_$_PVLivePlayerImageSource
__ ProVideo: _OBJC_CLASS_$_PVLivePlayerThermalThrottlingPolicy
__ ProVideo: _OBJC_CLASS_$_PVMultiBlendLayerParams
__ ProVideo: _OBJC_CLASS_$_PVRenderRequest
__ ProVideo: _OBJC_CLASS_$_PVRenderer
__ ProVideo: _OBJC_CLASS_$_PVTransformAnimation
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositing
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositingExporter
__ ProVideo: _OBJC_CLASS_$_PVVideoCompositionInstruction
__ ProVideo: _PCMatrixAxisZ
__ ProVideo: _PVTransformAnimationInfoForLiveCapture
__ ProVideo: _PVTransformAnimationInfoForPlayback
__ ProVideo: _PVTransformAnimationInfoIdentity
__ ProVideo: _PVVideoCompositingContextGPURenderAPIKey
__ ProVideo: _ProjectiveTransformFromAffineTransform
__ ProVideo: _kEffectID_Compositing_MultiBlend
__ ProVideo: _kEffectID_Effect_AgedFilmFC
__ ProVideo: _kEffectID_Effect_Butterflies
__ ProVideo: _kEffectID_Effect_CamcorderFilterFC
__ ProVideo: _kEffectID_Effect_ComicTownA
__ ProVideo: _kEffectID_Effect_ComicTownB
__ ProVideo: _kEffectID_Effect_ComicTownC
__ ProVideo: _kEffectID_Effect_Curves
__ ProVideo: _kEffectID_Effect_MoNone
__ ProVideo: _kEffectID_Effect_StyleTransferBlue
__ ProVideo: _kEffectID_Effect_StyleTransferBrown
__ ProVideo: _kEffectID_Effect_StyleTransferCharcoal
__ ProVideo: _kEffectID_Effect_StyleTransferWatercolor
__ ProVideo: _kEffectID_Effect_StyleTransferWatercolorMono
__ ProVideo: _kEffectID_Overlay_100Percent
__ ProVideo: _kEffectID_Overlay_BasicArrow
__ ProVideo: _kEffectID_Overlay_BasicDate
__ ProVideo: _kEffectID_Overlay_BasicTime
__ ProVideo: _kEffectID_Overlay_BoldType
__ ProVideo: _kEffectID_Overlay_BoldTypeAlt
__ ProVideo: _kEffectID_Overlay_Bubble
__ ProVideo: _kEffectID_Overlay_Check
__ ProVideo: _kEffectID_Overlay_Chill
__ ProVideo: _kEffectID_Overlay_ChineseNewYearOverlay
__ ProVideo: _kEffectID_Overlay_Circle
__ ProVideo: _kEffectID_Overlay_Comic
__ ProVideo: _kEffectID_Overlay_Doughnut
__ ProVideo: _kEffectID_Overlay_DrawnCursing
__ ProVideo: _kEffectID_Overlay_DrawnExclamationPoint
__ ProVideo: _kEffectID_Overlay_DrawnGears
__ ProVideo: _kEffectID_Overlay_DrawnHeart
__ ProVideo: _kEffectID_Overlay_DrawnLookHereSign
__ ProVideo: _kEffectID_Overlay_DrawnQuestionMark
__ ProVideo: _kEffectID_Overlay_DrawnScribble
__ ProVideo: _kEffectID_Overlay_Emoji
__ ProVideo: _kEffectID_Overlay_EmojiCollision
__ ProVideo: _kEffectID_Overlay_EmojiConfettiBall
__ ProVideo: _kEffectID_Overlay_EmojiDizzy
__ ProVideo: _kEffectID_Overlay_EmojiDrop
__ ProVideo: _kEffectID_Overlay_EmojiFire
__ ProVideo: _kEffectID_Overlay_EmojiGemStone
__ ProVideo: _kEffectID_Overlay_EmojiHeart
__ ProVideo: _kEffectID_Overlay_EmojiHeartWithArrow
__ ProVideo: _kEffectID_Overlay_EmojiHighVoltage
__ ProVideo: _kEffectID_Overlay_EmojiLightBulb
__ ProVideo: _kEffectID_Overlay_EmojiMoneyWithWings
__ ProVideo: _kEffectID_Overlay_EmojiMusicalNote
__ ProVideo: _kEffectID_Overlay_EmojiPartyPopper
__ ProVideo: _kEffectID_Overlay_EmojiRainbow
__ ProVideo: _kEffectID_Overlay_EmojiRevolvingHearts
__ ProVideo: _kEffectID_Overlay_EmojiSparkles
__ ProVideo: _kEffectID_Overlay_EmojiStar
__ ProVideo: _kEffectID_Overlay_EmojiThoughtCloud
__ ProVideo: _kEffectID_Overlay_EmojiZzz
__ ProVideo: _kEffectID_Overlay_FCArrowShapes
__ ProVideo: _kEffectID_Overlay_FCArrowShapes1
__ ProVideo: _kEffectID_Overlay_FCArrowShapes2
__ ProVideo: _kEffectID_Overlay_FCBurstShapes
__ ProVideo: _kEffectID_Overlay_FCBurstShapes1
__ ProVideo: _kEffectID_Overlay_FCBurstShapes2
__ ProVideo: _kEffectID_Overlay_FCCircleShapes
__ ProVideo: _kEffectID_Overlay_FCDoubleArrowShapes
__ ProVideo: _kEffectID_Overlay_FCDoubleArrowShapes1
__ ProVideo: _kEffectID_Overlay_FCDoubleArrowShapes2
__ ProVideo: _kEffectID_Overlay_FCSpeechBubble
__ ProVideo: _kEffectID_Overlay_FCThoughtBubble
__ ProVideo: _kEffectID_Overlay_FunLabel
__ ProVideo: _kEffectID_Overlay_FunSticker
__ ProVideo: _kEffectID_Overlay_FunThought
__ ProVideo: _kEffectID_Overlay_GenericTemplate
__ ProVideo: _kEffectID_Overlay_Handwritten
__ ProVideo: _kEffectID_Overlay_HeartSticker
__ ProVideo: _kEffectID_Overlay_Label
__ ProVideo: _kEffectID_Overlay_Location
__ ProVideo: _kEffectID_Overlay_NewsDate
__ ProVideo: _kEffectID_Overlay_NewsLabel
__ ProVideo: _kEffectID_Overlay_NewsLocator
__ ProVideo: _kEffectID_Overlay_NewsStyle
__ ProVideo: _kEffectID_Overlay_NewsTime
__ ProVideo: _kEffectID_Overlay_SimpleArrow
__ ProVideo: _kEffectID_Overlay_SpeechBubble
__ ProVideo: _kEffectID_Overlay_Square
__ ProVideo: _kEffectID_Overlay_Temp
__ ProVideo: _kEffectID_Overlay_TextArrow
__ ProVideo: _kEffectID_Overlay_ThirdPartyOne
__ ProVideo: _kEffectID_Overlay_ThirdPartyTwo
__ ProVideo: _kEffectID_Overlay_Time
__ ProVideo: _kEffectID_Overlay_X
__ ProVideo: _kEffectID_SiriTitle_StyleA
__ ProVideo: _kEffectID_SiriTitle_StyleB
__ ProVideo: _kEffectID_SiriTitle_StyleC
__ ProVideo: _kEffectID_SiriTitle_StyleD
__ ProVideo: _kEffectID_SiriTitle_StyleE
__ ProVideo: _kEffectID_SiriTitle_StyleF
__ ProVideo: _kEffectID_SiriTitle_StyleG
__ ProVideo: _kEffectID_TitleCard_BokehBackground
__ ProVideo: _kEffectID_TitleCard_BoldGraphic
__ ProVideo: _kEffectID_TitleCard_Cascade
__ ProVideo: _kEffectID_TitleCard_Cinema
__ ProVideo: _kEffectID_TitleCard_ConfettiCelebration
__ ProVideo: _kEffectID_TitleCard_DIYHandmade
__ ProVideo: _kEffectID_TitleCard_Dimensional
__ ProVideo: _kEffectID_TitleCard_Gold
__ ProVideo: _kEffectID_TitleCard_GraphicBoldPattern
__ ProVideo: _kEffectID_TitleCard_Kaleidoscope
__ ProVideo: _kEffectID_TitleCard_PaintedBackground
__ ProVideo: _kEffectID_TitleCard_Particulate
__ ProVideo: _kEffectID_TitleCard_Simple1
__ ProVideo: _kEffectID_TitleCard_Simple2
__ ProVideo: _kEffectID_TitleCard_SimpleBlack
__ ProVideo: _kEffectID_TitleCard_SimpleGradient
__ ProVideo: _kEffectID_TitleCard_String
__ ProVideo: _kEffectID_TitleCard_Summer
__ ProVideo: _kEffectID_Title_MoNone
__ ProVideo: _kEffectID_Transition_MoCrossDissolve
__ ProVideo: _kFFEffectType_VideoFilter
__ ProVideo: _kFFEffectType_VideoGenerator
__ ProVideo: _kFFEffectType_VideoTitle
__ ProVideo: _kPVCameraFrameMetadataKey
__ ProVideo: _kPVCrossDissolveRampKey
__ ProVideo: _kPVDisableAnimatedLayerKey
__ ProVideo: _kPVDisablePosterLayerKey
__ ProVideo: _kPVEnableLoopedRangeRenderCaching
__ ProVideo: _kPVEnablePosterFrameCaching
__ ProVideo: _kPVEnableTextDynamicLineSpacing_MainTitle
__ ProVideo: _kPVFaceMetadataArrayKey
__ ProVideo: _kPVFlipTextKey
__ ProVideo: _kPVImageSequencePathKey
__ ProVideo: _kPVMultiBlendEffectParamsKey
__ ProVideo: _kPVOrientationKey
__ ProVideo: _kPVOutputAspectKey
__ ProVideo: _kPVParentTransformAnimationKey
__ ProVideo: _kPVRenderAtPosterTimeKey
__ ProVideo: _kPVRenderStartOffset
__ ProVideo: _kPVRendererPoolDestinationBuffers
__ ProVideo: _kPVStickerPathKey
__ ProVideo: _kPVStyleTransferQualityLevel
__ ProVideo: _kPVTextOneLineScaleThreshold_MainTitle
__ ProVideo: _kPVTextRenderingDisabled
__ ProVideo: _kPVTitleEffect_BuildInKey
__ ProVideo: _kPVTitleEffect_BuildOutKey
__ ProVideo: _kPVTitleEffect_ForceDisableBackgroundShape
__ ProVideo: _kPVTitleEffect_ForceDisableLoop
__ ProVideo: _kPVTitleEffect_MainTitleFontName
__ ProVideo: _kPVTitleEffect_MainTitleFontScale
__ ProVideo: _kPVTitleEffect_MainTitleFontSize
__ ProVideo: _kPVTitleEffect_MainTitleStringKey
__ ProVideo: _kPVTitleEffect_SubTitleFontName
__ ProVideo: _kPVTitleEffect_SubTitleFontScale
__ ProVideo: _kPVTitleEffect_SubTitleFontSize
__ ProVideo: _kPVTitleEffect_SubTitleStringKey
__ ProVideo: _kPVTopLevelAdditionalScaleKey
__ ProVideo: _kPVTopLevelOpacityKey
__ ProVideo: _kPVTopLevelTransformKey
__ ProVideo: _kPVTransformAnimationKey
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning_LiveCount
__ ProVideo: _kPVVideoCompositingTooManyLiveCompositorsWarning_MaxExpected
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DGetAffineTransform
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DInvert
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ SceneKit: _OBJC_CLASS_$_SCNBillboardConstraint
__ SceneKit: _OBJC_CLASS_$_SCNBox
__ SceneKit: _OBJC_CLASS_$_SCNCamera
__ SceneKit: _OBJC_CLASS_$_SCNNode
__ SceneKit: _OBJC_CLASS_$_SCNPlane
__ SceneKit: _OBJC_CLASS_$_SCNRenderer
__ SceneKit: _OBJC_CLASS_$_SCNScene
__ SceneKit: _OBJC_CLASS_$_SCNTransaction
__ SceneKit: _SCNHitTestIgnoreHiddenNodesKey
__ SceneKit: _SCNHitTestOptionSearchMode
__ SceneKit: _SCNMatrix4Identity
__ SceneKit: _SCNShaderModifierEntryPointSurface
__ SceneKit: _SCNVector3Zero
__ UIKit: _CGPointFromString
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStrokeWidthAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSShadow
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewFlowLayoutInvalidationContext
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINib
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIRotationGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UIStoryboard
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$__UIButtonFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIButtonFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UIDiscreteFeedback
__ UIKit: _OBJC_METACLASS_$_UIAlertAction
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UICollectionView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewFlowLayout
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityTraitButton
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidChangeStatusBarOrientationNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontSymbolicTrait
__ UIKit: _UIFontSystemFontDesignAlternate
__ UIKit: _UIFontSystemFontDesignCompact
__ UIKit: _UIFontSystemFontDesignDefault
__ UIKit: _UIFontSystemFontDesignRounded
__ UIKit: _UIFontWeightBlack
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightHeavy
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightThin
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIFontWeightUltraLight
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIRectGetCenter
__ UIKit: _UIViewNoIntrinsicMetric
__ VideoProcessing: _OBJC_CLASS_$_VCPCaptureAnalysisSession
__ VideoProcessing: _VCPCaptureAnalysisFaceAnchorResultKey
__ VideoProcessing: _VCPCaptureAnalysisFaceBoundsPropertyKey
__ VideoProcessing: _VCPCaptureAnalysisFaceRollAnglesPropertyKey
__ VideoProcessing: _VCPCaptureAnalysisFocalLengthInPixelsPropertyKey
__ VideoToolbox: _VTImageRotationSessionCreate
__ VideoToolbox: _VTImageRotationSessionInvalidate
__ VideoToolbox: _VTImageRotationSessionRelease
__ VideoToolbox: _VTImageRotationSessionTransferImage
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTImageRotationPropertyKey_EnableHighSpeedTransfer
__ VideoToolbox: _kVTImageRotationPropertyKey_FlipHorizontalOrientation
__ VideoToolbox: _kVTPixelTransferPropertyKey_ScalingMode
__ VideoToolbox: _kVTScalingMode_Trim
__ iMessageApps: _OBJC_CLASS_$_IMADockViewController
__ iMessageApps: _OBJC_CLASS_$_IMASticker
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _atan2f
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _host_statistics
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_proc_available_memory
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: _tanf
__ libSystem.B.dylib: _uname
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CFXAnimationDelegate : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CAAnimationDelegate>
 @property  @? completion
 @property  @? start
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXAnimationDelegate .cxx_destruct]
  -[CFXAnimationDelegate start]
  -[CFXAnimationDelegate setCompletion:]
  -[CFXAnimationDelegate completion]
  -[CFXAnimationDelegate animationDidStop:finished:]
  -[CFXAnimationDelegate animationDidStart:]
  -[CFXAnimationDelegate setStart:]


CFXAnimationHelper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXAnimationHelper animateLayer:forButtonHighlighted:layoutStyle:]
  +[CFXAnimationHelper configurePowerSensitiveAnimation:]
  +[CFXAnimationHelper animateLayer:toFrame:fromCurrentState:]
  +[CFXAnimationHelper _animationWithKeyPath:]
  +[CFXAnimationHelper _highlightScaleForLayoutStyle:]


CFXViewfinderFlipTransition : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  UIView *viewfinderView
 @property  CAMSnapshotView *_frontSnapshotView
 @property  CAMSnapshotView *_backSnapshotView
 @property  CAMSnapshotView *_targetSnapshotView
 @property  unsigned long _currentAnimationID

  // instance methods
  -[CFXViewfinderFlipTransition .cxx_destruct]
  -[CFXViewfinderFlipTransition _currentAnimationID]
  -[CFXViewfinderFlipTransition _frontSnapshotView]
  -[CFXViewfinderFlipTransition _backSnapshotView]
  -[CFXViewfinderFlipTransition _targetSnapshotView]
  -[CFXViewfinderFlipTransition _setFrontSnapshotView:]
  -[CFXViewfinderFlipTransition _getCurrentRadians:targetRadians:forDirection:withAnimation:onFrontSnapshotLayer:]
  -[CFXViewfinderFlipTransition _frontSnapshotTargetRadiansForDirection:fromRadians:]
  -[CFXViewfinderFlipTransition _snapshotFlipAnimationFromValue:toValue:]
  -[CFXViewfinderFlipTransition _backSnapshotTargetRadiansForDirection:frontSnapshotRadians:]
  -[CFXViewfinderFlipTransition _setCurrentAnimationID:]
  -[CFXViewfinderFlipTransition _setBackSnapshotView:]
  -[CFXViewfinderFlipTransition _cleanupFromFlipTransition]
  -[CFXViewfinderFlipTransition _setTargetSnapshotView:]
  -[CFXViewfinderFlipTransition performFlipTransitionWithDirection:completionHandler:]
  -[CFXViewfinderFlipTransition completeTransitionToLivePreviewWithCompletionHandler:]
  -[CFXViewfinderFlipTransition viewfinderView]
  -[CFXViewfinderFlipTransition setViewfinderView:]
  -[CFXViewfinderFlipTransition initWithViewfinderView:]


JTEffectsPreviewRequestHandler : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // instance methods
  -[JTEffectsPreviewRequestHandler .cxx_destruct]
  -[JTEffectsPreviewRequestHandler initWithRequest:]
  -[JTEffectsPreviewRequestHandler buildPVRenderRequest]
  -[JTEffectsPreviewRequestHandler buildCallbackMap:]


CFXFilterEffectPickerView : CFXEffectPickerView
 @property  UIView *contentView
 @property  JTCollectionView *collectionView
 @property  JTCollectionViewFlowLayout *collectionViewLayout
 @property  UIView *compactSelectionView
 @property  UILabel *compactSelectedTitleView
 @property  unsigned long cachedEffectCount
 @property  BOOL displayExpandedLayout
 @property  {CGSize=dd} lastViewSize
 @property  UISelectionFeedbackGenerator *selectionFeedbackGenerator
 @property  NSIndexPath *lastScrollIndexPath
 @property  {CGPoint=dd} previousScrollOffset
 @property  <CFXFilterEffectPickerViewDataSource> *dataSource
 @property  <CFXFilterEffectPickerViewDelegate> *delegate

  // instance methods
  -[CFXFilterEffectPickerView delegate]
  -[CFXFilterEffectPickerView setDelegate:]
  -[CFXFilterEffectPickerView .cxx_destruct]
  -[CFXFilterEffectPickerView dataSource]
  -[CFXFilterEffectPickerView setDataSource:]
  -[CFXFilterEffectPickerView contentView]
  -[CFXFilterEffectPickerView setContentView:]
  -[CFXFilterEffectPickerView layoutSubviews]
  -[CFXFilterEffectPickerView scrollViewWillBeginDragging:]
  -[CFXFilterEffectPickerView scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[CFXFilterEffectPickerView scrollViewDidEndDragging:willDecelerate:]
  -[CFXFilterEffectPickerView scrollViewDidEndDecelerating:]
  -[CFXFilterEffectPickerView collectionView]
  -[CFXFilterEffectPickerView setCollectionViewLayout:]
  -[CFXFilterEffectPickerView reloadData]
  -[CFXFilterEffectPickerView setCollectionView:]
  -[CFXFilterEffectPickerView collectionViewLayout]
  -[CFXFilterEffectPickerView selectedIndex]
  -[CFXFilterEffectPickerView selectionFeedbackGenerator]
  -[CFXFilterEffectPickerView setSelectionFeedbackGenerator:]
  -[CFXFilterEffectPickerView configureCell:]
  -[CFXFilterEffectPickerView isDisplayingExpandedLayout]
  -[CFXFilterEffectPickerView isDisplayingCompactLayout]
  -[CFXFilterEffectPickerView subviewsDidLoad]
  -[CFXFilterEffectPickerView buildCompactSelectionViews]
  -[CFXFilterEffectPickerView removeCompactSelectionViews]
  -[CFXFilterEffectPickerView setCompactSelectionView:]
  -[CFXFilterEffectPickerView compactSelectionView]
  -[CFXFilterEffectPickerView setCompactSelectedTitleView:]
  -[CFXFilterEffectPickerView compactSelectedTitleView]
  -[CFXFilterEffectPickerView lastViewSize]
  -[CFXFilterEffectPickerView setLastViewSize:]
  -[CFXFilterEffectPickerView setDisplayExpandedLayout:]
  -[CFXFilterEffectPickerView CFX_selectInitialItem]
  -[CFXFilterEffectPickerView configureCollectionViewLayout]
  -[CFXFilterEffectPickerView setCachedEffectCount:]
  -[CFXFilterEffectPickerView updatePreviewEffectsWhenReloadComplete]
  -[CFXFilterEffectPickerView indexPathForCenterOfCollectionView]
  -[CFXFilterEffectPickerView setLastScrollIndexPath:]
  -[CFXFilterEffectPickerView setPreviousScrollOffset:]
  -[CFXFilterEffectPickerView didScrollCollectionView]
  -[CFXFilterEffectPickerView layoutAttributesForNearestItemToCenterWithOffset:]
  -[CFXFilterEffectPickerView lastScrollIndexPath]
  -[CFXFilterEffectPickerView previousScrollOffset]
  -[CFXFilterEffectPickerView CFX_updateTitleForCenterItemAtIndex:]
  -[CFXFilterEffectPickerView selectCenterItem]
  -[CFXFilterEffectPickerView CFX_selectItemAtCellIndex:animated:]
  -[CFXFilterEffectPickerView effectPickerNibName]
  -[CFXFilterEffectPickerView effectPickerCellNibName]
  -[CFXFilterEffectPickerView effectPickerCellReuseIdentifier]
  -[CFXFilterEffectPickerView didSelectItemAtCellIndex:]
  -[CFXFilterEffectPickerView selectEffectWithIdentifier:]
  -[CFXFilterEffectPickerView orientationDidChange]
  -[CFXFilterEffectPickerView cachedEffectCount]


JTThermalMonitor : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL hasGoneAboveNominal
 @property  int currentThermalLevel
 @property  int highestThermalLevel
 @property  BOOL thermalLevelExceededNominal
 @property  int thermalLevel
 @property  int highestThermalLevelReached

  // class methods
  +[JTThermalMonitor sharedInstance]

  // instance methods
  -[JTThermalMonitor init]
  -[JTThermalMonitor setQueue:]
  -[JTThermalMonitor queue]
  -[JTThermalMonitor .cxx_destruct]
  -[JTThermalMonitor _postNotification:]
  -[JTThermalMonitor thermalLevel]
  -[JTThermalMonitor currentThermalLevel]
  -[JTThermalMonitor setCurrentThermalLevel:]
  -[JTThermalMonitor setHighestThermalLevel:]
  -[JTThermalMonitor _updateThermalLevelsWithToken:]
  -[JTThermalMonitor _analyticValueForThermalLevelBefore:after:]
  -[JTThermalMonitor highestThermalLevel]
  -[JTThermalMonitor getStateForNotifyToken:]
  -[JTThermalMonitor _disabledThermalTracking]
  -[JTThermalMonitor thermalLevelExceededNominal]
  -[JTThermalMonitor highestThermalLevelReached]
  -[JTThermalMonitor thermalLevelLabel]
  -[JTThermalMonitor hasGoneAboveNominal]
  -[JTThermalMonitor setHasGoneAboveNominal:]


CFXFaceTrackingPlaybackDelegate : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PVCompositeDelegate>
 @property  ARFrame *stillImageARFrame
 @property  JTFaceAnchor *stillImageFaceAnchor
 @property  AVAssetTrack *metadataAssetTrack
 @property  AVAssetTrack *arFrameMetadataAssetTrack
 @property  AVAssetTrack *faceAnchorMetadataAssetTrack
 @property  AVAssetReader *metadataAssetReader
 @property  AVAssetReaderTrackOutput *metadataTrackReaderOutput
 @property  AVAssetReaderOutputMetadataAdaptor *assetReaderOutputMetadataAdaptor
 @property  AVMetadataItem *currentMetadataItem
 @property  AVMetadataItem *nextMetadataItem

  // instance methods
  -[CFXFaceTrackingPlaybackDelegate .cxx_destruct]
  -[CFXFaceTrackingPlaybackDelegate initWithAssetURL:]
  -[CFXFaceTrackingPlaybackDelegate CFX_setUpMetadataReaderForTrack:]
  -[CFXFaceTrackingPlaybackDelegate CFX_ARFrameForTime:]
  -[CFXFaceTrackingPlaybackDelegate stillImageARFrame]
  -[CFXFaceTrackingPlaybackDelegate CFX_JTFaceAnchorForTime:]
  -[CFXFaceTrackingPlaybackDelegate stillImageFaceAnchor]
  -[CFXFaceTrackingPlaybackDelegate CFX_updateCurrentMetadataItemForTime:]
  -[CFXFaceTrackingPlaybackDelegate currentMetadataItem]
  -[CFXFaceTrackingPlaybackDelegate metadataAssetReader]
  -[CFXFaceTrackingPlaybackDelegate setMetadataTrackReaderOutput:]
  -[CFXFaceTrackingPlaybackDelegate metadataAssetTrack]
  -[CFXFaceTrackingPlaybackDelegate nextMetadataItem]
  -[CFXFaceTrackingPlaybackDelegate setCurrentMetadataItem:]
  -[CFXFaceTrackingPlaybackDelegate setNextMetadataItem:]
  -[CFXFaceTrackingPlaybackDelegate renderWithInputs:time:metadata:]
  -[CFXFaceTrackingPlaybackDelegate initWithImageARFrame:]
  -[CFXFaceTrackingPlaybackDelegate initWithImageFaceAnchor:]
  -[CFXFaceTrackingPlaybackDelegate setStillImageARFrame:]
  -[CFXFaceTrackingPlaybackDelegate setStillImageFaceAnchor:]
  -[CFXFaceTrackingPlaybackDelegate setMetadataAssetTrack:]
  -[CFXFaceTrackingPlaybackDelegate arFrameMetadataAssetTrack]
  -[CFXFaceTrackingPlaybackDelegate setArFrameMetadataAssetTrack:]
  -[CFXFaceTrackingPlaybackDelegate faceAnchorMetadataAssetTrack]
  -[CFXFaceTrackingPlaybackDelegate setFaceAnchorMetadataAssetTrack:]
  -[CFXFaceTrackingPlaybackDelegate setMetadataAssetReader:]
  -[CFXFaceTrackingPlaybackDelegate metadataTrackReaderOutput]
  -[CFXFaceTrackingPlaybackDelegate assetReaderOutputMetadataAdaptor]
  -[CFXFaceTrackingPlaybackDelegate setAssetReaderOutputMetadataAdaptor:]


CFXCameraViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXCaptureViewControllerDelegate, CFXRemoteCommandServerDelegate, CFXEffectBrowserContentPresenterViewControllerDelegate, CFXEffectBrowserViewControllerDelegate>
 @property  CFXCaptureViewController *captureViewController
 @property  CFXEffectBrowserViewController *effectBrowserViewController
 @property  CFXCameraControlsViewController *cameraControlsViewController
 @property  long long initialFlashMode
 @property  BOOL cameraControlsShown
 @property  NSString *effectBrowserPresentedAppIdentifier
 @property  CFXRemoteCommandServer *remoteCommandServer
 @property  CFXCounterRotationView *bottomControlsSnapshotContainer
 @property  UIView *effectsPickerSnapshotContainerView
 @property  NSObject<OS_dispatch_queue> *externalCaptureSessionInputDeserializationQueue
 @property  NSObject<OS_dispatch_queue> *externalCaptureSessionInputProcessingQueue
 @property  NSObject<OS_dispatch_queue> *externalCaptureSessionOutputProcessingQueue
 @property  JTPixelRotationSession *externalCaptureSessionRotationSession
 @property  long long externalCaptureSessionCameraPosition
 @property  JTThreadSafeDictionary *externalCaptureSessionInputFrameTimestamps
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} externalPresentationRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} externalContentRect
 @property  long long aspectRatioCrop
 @property  long long captureMode
 @property  <CFXCameraViewControllerDelegate> *delegate
 @property  long long devicePosition
 @property  UIView *effectsPickerDrawer
 @property  BOOL effectsPickerHidden
 @property  long long effectsState
 @property  long long flashMode
 @property  long long mode
 @property  BOOL showsViewfinder
 @property  double userInterfaceAlpha
 @property  BOOL usesInternalCaptureSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXCameraViewController initialize]
  +[CFXCameraViewController preheatWithWindow:captureMode:devicePosition:aspectRatioCrop:]
  +[CFXCameraViewController preheatWithWindow:captureMode:devicePosition:]

  // instance methods
  -[CFXCameraViewController dealloc]
  -[CFXCameraViewController delegate]
  -[CFXCameraViewController setDelegate:]
  -[CFXCameraViewController .cxx_destruct]
  -[CFXCameraViewController mode]
  -[CFXCameraViewController loadView]
  -[CFXCameraViewController viewDidLoad]
  -[CFXCameraViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CFXCameraViewController viewDidLayoutSubviews]
  -[CFXCameraViewController viewDidAppear:]
  -[CFXCameraViewController initWithMode:]
  -[CFXCameraViewController flashMode]
  -[CFXCameraViewController devicePosition]
  -[CFXCameraViewController setEffectsPickerDrawer:]
  -[CFXCameraViewController captureMode]
  -[CFXCameraViewController aspectRatioCrop]
  -[CFXCameraViewController startCaptureSession]
  -[CFXCameraViewController stopCaptureSession]
  -[CFXCameraViewController shouldRotateCellsForDeviceOrientation]
  -[CFXCameraViewController initWithCaptureMode:devicePosition:flashMode:]
  -[CFXCameraViewController initWithCaptureMode:devicePosition:flashMode:aspectRatioCrop:]
  -[CFXCameraViewController initWithCaptureMode:devicePosition:]
  -[CFXCameraViewController captureViewController]
  -[CFXCameraViewController setCaptureViewController:]
  -[CFXCameraViewController initialFlashMode]
  -[CFXCameraViewController setCameraControlsViewController:]
  -[CFXCameraViewController cameraControlsViewController]
  -[CFXCameraViewController setEffectBrowserViewController:]
  -[CFXCameraViewController effectBrowserViewController]
  -[CFXCameraViewController bottomControlsSnapshotContainer]
  -[CFXCameraViewController setBottomControlsSnapshotContainer:]
  -[CFXCameraViewController setEffectsPickerSnapshotContainerView:]
  -[CFXCameraViewController effectsPickerDrawer]
  -[CFXCameraViewController effectsPickerSnapshotContainerView]
  -[CFXCameraViewController effectBrowserPresentedAppIdentifier]
  -[CFXCameraViewController userInterfaceAlpha]
  -[CFXCameraViewController setUserInterfaceAlpha:]
  -[CFXCameraViewController setCameraControlsShown:]
  -[CFXCameraViewController cameraControlsShown]
  -[CFXCameraViewController noteInputFrameWithTimestamp:]
  -[CFXCameraViewController externalCaptureSessionInputProcessingQueue]
  -[CFXCameraViewController setExternalCaptureSessionRotationSession:]
  -[CFXCameraViewController externalPresentationRect]
  -[CFXCameraViewController externalContentRect]
  -[CFXCameraViewController setExternalPresentationRect:]
  -[CFXCameraViewController setExternalContentRect:]
  -[CFXCameraViewController externalCaptureSessionCameraPosition]
  -[CFXCameraViewController setExternalCaptureSessionCameraPosition:]
  -[CFXCameraViewController usesInternalCaptureSession]
  -[CFXCameraViewController renderFrameWithImageDataArchive:pixelBuffer:orientation:presentationRect:contentsRect:]
  -[CFXCameraViewController renderFrameWithImageDataArchive:imagePixelBuffer:depthPixelBuffer:orientation:presentationRect:contentsRect:]
  -[CFXCameraViewController externalCaptureSessionInputDeserializationQueue]
  -[CFXCameraViewController renderFrameWithImageData:orientation:presentationRect:contentsRect:]
  -[CFXCameraViewController effectBrowserViewController:didSelectAppWithIdentifier:]
  -[CFXCameraViewController setEffectBrowserPresentedAppIdentifier:]
  -[CFXCameraViewController effectsState]
  -[CFXCameraViewController externalCaptureSessionOutputProcessingQueue]
  -[CFXCameraViewController externalCaptureSessionRotationSession]
  -[CFXCameraViewController noteOutputFrameWithTimestamp:]
  -[CFXCameraViewController updateUIForVideoRecording:]
  -[CFXCameraViewController externalCaptureSessionInputFrameTimestamps]
  -[CFXCameraViewController captureViewController:didCaptureMediaItem:]
  -[CFXCameraViewController captureViewController:didChangeEffectComposition:]
  -[CFXCameraViewController captureViewController:didRenderFrame:]
  -[CFXCameraViewController captureViewControllerDoneButtonWasTapped:]
  -[CFXCameraViewController captureViewControllerEffectsButtonWasTapped:]
  -[CFXCameraViewController captureViewControllerPresentationRectWasDoubleTapped:]
  -[CFXCameraViewController captureViewController:presentationRectWasPinchedWithState:scale:velocity:]
  -[CFXCameraViewController captureViewControllerStartCaptureSession:]
  -[CFXCameraViewController captureViewControllerStopCaptureSession:]
  -[CFXCameraViewController captureViewControllerCameraFlipButtonWasTapped:]
  -[CFXCameraViewController cameraControlsViewControllerForCaptureViewController:]
  -[CFXCameraViewController captureViewControllerDidStartVideoRecording:]
  -[CFXCameraViewController captureViewControllerDidStopVideoRecording:]
  -[CFXCameraViewController remoteCommandServer:didReceiveAddShapeCommandWithIdentifier:]
  -[CFXCameraViewController remoteCommandServer:didReceiveAddStickerCommandWithURL:offset:scale:rotation:]
  -[CFXCameraViewController remoteCommandServer:didReceiveAddTextCommandWithIdentifier:string:]
  -[CFXCameraViewController remoteCommandServer:didReceiveRemoveEffectsCommandWithTypeIdentifiers:]
  -[CFXCameraViewController remoteCommandServer:didReceiveSetAnimojiCommandWithIdentifier:]
  -[CFXCameraViewController remoteCommandServer:didReceiveSetFilterCommandWithIdentifier:]
  -[CFXCameraViewController effectBrowserViewController:screenTopBarHeightForWindowBounds:orientation:]
  -[CFXCameraViewController effectBrowserViewController:willChangeDockHeight:]
  -[CFXCameraViewController shouldAlwaysPresentExpandedAppsForEffectBrowserViewController:]
  -[CFXCameraViewController effectBrowserViewController:didDropOverlayEffect:atScreenLocation:atScreenSize:rotationAngle:]
  -[CFXCameraViewController effectBrowserViewController:didRemoveAllEffectsOfType:]
  -[CFXCameraViewController effectBrowserViewController:didSelectEffect:]
  -[CFXCameraViewController effectBrowserViewController:filterPickerPreviewBackgroundImageAtSizeInPixels:completion:]
  -[CFXCameraViewController selectedFilterIdentifierForEffectBrowserViewController:]
  -[CFXCameraViewController selectedAnimojiIdentifierForEffectBrowserViewController:]
  -[CFXCameraViewController localizedPromptForHidingAnimojiForEffectBrowserViewController:]
  -[CFXCameraViewController allowLandscapeForEffectBrowserViewController:]
  -[CFXCameraViewController effectBrowserViewController:didSelectApp:]
  -[CFXCameraViewController effectBrowserViewControllerDidStartCaptureSession:]
  -[CFXCameraViewController effectBrowserViewControllerDidStopCaptureSession:]
  -[CFXCameraViewController setShowsViewfinder:]
  -[CFXCameraViewController setUsesInternalCaptureSession:]
  -[CFXCameraViewController isEffectsPickerHidden]
  -[CFXCameraViewController setEffectsPickerHidden:animated:]
  -[CFXCameraViewController setTransitionState:animated:]
  -[CFXCameraViewController removeAllEffects]
  -[CFXCameraViewController renderFrameWithImageDataArchive:pixelBuffer:]
  -[CFXCameraViewController showsViewfinder]
  -[CFXCameraViewController setInitialFlashMode:]
  -[CFXCameraViewController remoteCommandServer]
  -[CFXCameraViewController setRemoteCommandServer:]
  -[CFXCameraViewController setExternalCaptureSessionInputFrameTimestamps:]


JTCollectionViewFlowLayout : UICollectionViewFlowLayout /System/Library/Frameworks/AVFoundation.framework/AVFoundation
  // instance methods
  -[JTCollectionViewFlowLayout invalidationContextForBoundsChange:]
  -[JTCollectionViewFlowLayout shouldInvalidateLayoutForBoundsChange:]


CFXFilterPickerCollectionView : JTCollectionView
 @property  BOOL enableInfiniteHorizontalScrolling

  // instance methods
  -[CFXFilterPickerCollectionView layoutSubviews]
  -[CFXFilterPickerCollectionView enableInfiniteHorizontalScrolling]
  -[CFXFilterPickerCollectionView setEnableInfiniteHorizontalScrolling:]


JTClip : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <JTMediaItemDelegate, NSCopying>
 @property  NSString *uuid
 @property  JTMediaItem *mediaItem
 @property  NSMutableArray *effects
 @property  NSMutableArray *filters
 @property  NSMutableArray *liveTitles
 @property  NSMutableArray *overlays
 @property  NSMutableArray *sketches
 @property  NSMutableArray *arSelfies
 @property  NSMutableArray *animojis
 @property  JTAudioClip *audioClip
 @property  <JTClipDelegate> *delegate
 @property  int presentationTime
 @property  int presentationEndTime
 @property  int duration
 @property  int mediaStartOffset
 @property  int mediaType
 @property  {CGSize=dd} mediaSize
 @property  BOOL isPastedClip
 @property  UIImage *thumbnail
 @property  NSArray *transcription
 @property  NSDate *transcriptionRunDate
 @property  NSDate *transcriptionEditDate
 @property  NSString *transcriptionFormattedString
 @property  BOOL isTrimClip
 @property  PVTransformAnimation *transformAnimation
 @property  int transformInitialStartOffset
 @property  BOOL audioEnabled
 @property  BOOL originalSelfieAudioEnabled
 @property  float audioVolume
 @property  NSMutableDictionary *audioAnalysis
 @property  int audioInitialStartOffset
 @property  int provisionalAudioInitialStartOffset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[JTClip defaultClip]
  +[JTClip createVideoClipWithLocalURL:completionHandler:]
  +[JTClip defaultClipWithLocalAsset:]
  +[JTClip createStillClipWithLocalURL:completionHandler:]
  +[JTClip createVideoClipWithAssetIdentifier:progressHandlerBlock:completionHandler:]
  +[JTClip createVideoClipWithLocalURL:effectStack:completionHandler:]
  +[JTClip createStillClipWithAssetIdentifier:progressHandlerBlock:completionHandler:]
  +[JTClip createStillClipPreviewWithLocalURL:effectStack:maximumPreviewDimension:completionHandler:]
  +[JTClip createStillClipWithImage:completionHandler:]
  +[JTClip createCaptureClip]

  // instance methods
  -[JTClip init]
  -[JTClip dealloc]
  -[JTClip isEqual:]
  -[JTClip copyWithZone:]
  -[JTClip delegate]
  -[JTClip setDelegate:]
  -[JTClip .cxx_destruct]
  -[JTClip uuid]
  -[JTClip duration]
  -[JTClip setUuid:]
  -[JTClip filters]
  -[JTClip mediaType]
  -[JTClip setDuration:]
  -[JTClip setFilters:]
  -[JTClip overlays]
  -[JTClip setOverlays:]
  -[JTClip isVideo]
  -[JTClip presentationTime]
  -[JTClip setPresentationTime:]
  -[JTClip thumbnail]
  -[JTClip setThumbnail:]
  -[JTClip setAudioEnabled:]
  -[JTClip audioVolume]
  -[JTClip setAudioVolume:]
  -[JTClip mediaItem]
  -[JTClip setMediaItem:]
  -[JTClip isCamera]
  -[JTClip isAssetLoaded]
  -[JTClip initWithMediaItem:]
  -[JTClip transformAnimation]
  -[JTClip audioEnabled]
  -[JTClip mediaSize]
  -[JTClip effects]
  -[JTClip addEffect:]
  -[JTClip removeAllEffects]
  -[JTClip stringForMediaType:]
  -[JTClip clipType]
  -[JTClip audioClip]
  -[JTClip liveTitles]
  -[JTClip sketches]
  -[JTClip arSelfies]
  -[JTClip addEffectStack:]
  -[JTClip isAssetMissing]
  -[JTClip isAssetInTrash]
  -[JTClip needsDerivativeMedia]
  -[JTClip isStill]
  -[JTClip isPastedClip]
  -[JTClip hasProjectLocalAsset]
  -[JTClip setMediaStartOffset:]
  -[JTClip generateThumbnail]
  -[JTClip clipHasChanged]
  -[JTClip animojis]
  -[JTClip _addEffect:]
  -[JTClip _removeAllEffectsOfType:notifyDelegate:]
  -[JTClip _effectsOfType:]
  -[JTClip clipHasAnUpdatedThumbnail]
  -[JTClip thumbnailWithTargetSize:requestedTime:includeEffects:includeTransform:completionHandler:]
  -[JTClip effectsOfType:]
  -[JTClip mediaStartOffset]
  -[JTClip removeStyleTranferOnUnsupportedDevice:]
  -[JTClip thumbnailWithTargetSize:requestedTime:includeFilters:includeOverlays:includeTransform:completionHandler:]
  -[JTClip isTrimClip]
  -[JTClip clipWillLoad]
  -[JTClip clipDidLoadWithError:]
  -[JTClip mediaItemWillLoad:]
  -[JTClip mediaItemDidLoad:error:]
  -[JTClip mediaItem:hasAnUpdatedThumbnail:]
  -[JTClip filtersForClip]
  -[JTClip transformInfoOfClip]
  -[JTClip isICPLAsset]
  -[JTClip isAssetLocal]
  -[JTClip isAssetUnavailable]
  -[JTClip isStillFromCamera]
  -[JTClip isValidForProject]
  -[JTClip presentationEndTime]
  -[JTClip canSaveClipToCameraRoll]
  -[JTClip projectLocalAssetURL]
  -[JTClip setProjectLocalAssetURL:]
  -[JTClip setTransformAnimation:]
  -[JTClip transformHasChanged]
  -[JTClip effectHasChanged:]
  -[JTClip removeEffect:]
  -[JTClip removeAllEffectsOfType:]
  -[JTClip removeAllFiltersWithoutGeneratingAThumbnail]
  -[JTClip effectStack]
  -[JTClip effectStackExcludingType:]
  -[JTClip hasEffectOfType:]
  -[JTClip thumbnailsWithTargetSize:requestedTimes:completionHandler:]
  -[JTClip thumbnailWithTargetSize:requestedTime:completionHandler:]
  -[JTClip clipAudioHasChanged]
  -[JTClip transcription]
  -[JTClip transcriptionRunDate]
  -[JTClip setTranscriptionRunDate:]
  -[JTClip transcriptionEditDate]
  -[JTClip setTranscriptionEditDate:]
  -[JTClip transcriptionFormattedString]
  -[JTClip setTranscriptionFormattedString:]
  -[JTClip audioAnalysis]
  -[JTClip setAudioAnalysis:]
  -[JTClip audioInitialStartOffset]
  -[JTClip setAudioInitialStartOffset:]
  -[JTClip provisionalAudioInitialStartOffset]
  -[JTClip setProvisionalAudioInitialStartOffset:]
  -[JTClip setIsPastedClip:]
  -[JTClip setIsTrimClip:]
  -[JTClip transformInitialStartOffset]
  -[JTClip setTransformInitialStartOffset:]
  -[JTClip originalSelfieAudioEnabled]
  -[JTClip setOriginalSelfieAudioEnabled:]
  -[JTClip setAudioClip:]
  -[JTClip setEffects:]
  -[JTClip setLiveTitles:]
  -[JTClip setSketches:]
  -[JTClip setArSelfies:]
  -[JTClip setAnimojis:]


CFXAvailability : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXAvailability availableEffects]


JTClipSequencePlayerRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *uniqueID
 @property  @? block
 @property  double queuedTime
 @property  double startTime
 @property  unsigned long type
 @property  @? completionBlock
 @property  JTClipSequencePlayer *player

  // class methods
  +[JTClipSequencePlayerRequest stringFromRequestType:]

  // instance methods
  -[JTClipSequencePlayerRequest type]
  -[JTClipSequencePlayerRequest setType:]
  -[JTClipSequencePlayerRequest .cxx_destruct]
  -[JTClipSequencePlayerRequest block]
  -[JTClipSequencePlayerRequest completionBlock]
  -[JTClipSequencePlayerRequest setCompletionBlock:]
  -[JTClipSequencePlayerRequest uniqueID]
  -[JTClipSequencePlayerRequest setBlock:]
  -[JTClipSequencePlayerRequest startTime]
  -[JTClipSequencePlayerRequest setStartTime:]
  -[JTClipSequencePlayerRequest setQueuedTime:]
  -[JTClipSequencePlayerRequest queuedTime]
  -[JTClipSequencePlayerRequest player]
  -[JTClipSequencePlayerRequest setPlayer:]
  -[JTClipSequencePlayerRequest initWithBlock:ofType:]


JTCompositionUpdateRequest : JTClipSequencePlayerRequest
 @property  BOOL hasCompleted

  // instance methods
  -[JTCompositionUpdateRequest initWithBlock:]
  -[JTCompositionUpdateRequest hasCompleted]
  -[JTCompositionUpdateRequest setReadyForDisplayReceived]
  -[JTCompositionUpdateRequest setRefreshCompletedReceived]


JTSeekRequest : JTClipSequencePlayerRequest
 @property  int seekTime

  // instance methods
  -[JTSeekRequest seekTime]
  -[JTSeekRequest setSeekTime:]
  -[JTSeekRequest initWithBlock:withSeekTime:]


JTClipCompositionUpdateRequest : JTClipSequencePlayerRequest
 @property  NSString *clipUUID

  // instance methods
  -[JTClipCompositionUpdateRequest .cxx_destruct]
  -[JTClipCompositionUpdateRequest clipUUID]
  -[JTClipCompositionUpdateRequest initWithBlock:withClip:]
  -[JTClipCompositionUpdateRequest setClipUUID:]


JTClipSequencePlayer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <JTCompositionClipsDataSource> *clipsDataSource
 @property  JTComposition *composition
 @property  AVPlayer *player
 @property  id playerProVideoPeriodicObserver
 @property  id playerPlaybackTimePeriodicObserver
 @property  JTClipSequencePlayerRequest *pendingRequest
 @property  NSMutableArray *requestQueue
 @property  {?=qiIq} wasCurrentTime
 @property  {?=qiIq} cachedCurrentTimeForCompositionUpdate
 @property  BOOL wasAudioMuted
 @property  BOOL wasPlaying
 @property  BOOL restoringPlayerStateAfterCompositionUpdate
 @property  NSString *displayName
 @property  <JTClipSequencePlaybackDelegate> *playbackDelegate
 @property  NSObject<JTAVPlayerViewer> *playerView
 @property  {CGSize=dd} renderSize
 @property  {?=qiIq} playbackTimeChangedObserverInterval

  // instance methods
  -[JTClipSequencePlayer dealloc]
  -[JTClipSequencePlayer .cxx_destruct]
  -[JTClipSequencePlayer observeValueForKeyPath:ofObject:change:context:]
  -[JTClipSequencePlayer duration]
  -[JTClipSequencePlayer displayName]
  -[JTClipSequencePlayer setDisplayName:]
  -[JTClipSequencePlayer enqueueRequest:]
  -[JTClipSequencePlayer teardown]
  -[JTClipSequencePlayer currentTime]
  -[JTClipSequencePlayer isPlaying]
  -[JTClipSequencePlayer requestQueue]
  -[JTClipSequencePlayer setRequestQueue:]
  -[JTClipSequencePlayer player]
  -[JTClipSequencePlayer setPlayer:]
  -[JTClipSequencePlayer play:]
  -[JTClipSequencePlayer pause:]
  -[JTClipSequencePlayer renderSize]
  -[JTClipSequencePlayer composition]
  -[JTClipSequencePlayer playbackDelegate]
  -[JTClipSequencePlayer setPlaybackDelegate:]
  -[JTClipSequencePlayer destroyPlayer]
  -[JTClipSequencePlayer setComposition:]
  -[JTClipSequencePlayer playerView]
  -[JTClipSequencePlayer removeAllRequests]
  -[JTClipSequencePlayer createPlayer]
  -[JTClipSequencePlayer setPendingRequest:]
  -[JTClipSequencePlayer pendingRequest]
  -[JTClipSequencePlayer isAudioMuted]
  -[JTClipSequencePlayer warnTooManyLiveCompositors:]
  -[JTClipSequencePlayer clearQueuedRequests]
  -[JTClipSequencePlayer executeRequestCompletionBlock:success:wasCancelled:error:]
  -[JTClipSequencePlayer isRequestOfTypeQueued:]
  -[JTClipSequencePlayer setCachedCurrentTimeForCompositionUpdate:]
  -[JTClipSequencePlayer handleUpdateCompositionCompleted:wasCancelled:error:]
  -[JTClipSequencePlayer handleClipCompositionUpdateTimedOut]
  -[JTClipSequencePlayer completePendingRequest:wasCancelled:error:]
  -[JTClipSequencePlayer executeNextRequest]
  -[JTClipSequencePlayer checkPendingRequestForTimeOut]
  -[JTClipSequencePlayer completeRequest:success:wasCancelled:error:]
  -[JTClipSequencePlayer requestWithBlock:ofType:completion:]
  -[JTClipSequencePlayer isRequestOfTypePendingOrQueued:]
  -[JTClipSequencePlayer throttleRequestWithCompletionBlock:ofType:]
  -[JTClipSequencePlayer doPlay]
  -[JTClipSequencePlayer setupPlaybackTimeChangedObserver]
  -[JTClipSequencePlayer setPlaybackTimeChangedObserverInterval:]
  -[JTClipSequencePlayer removeCompositorCompletionBlock]
  -[JTClipSequencePlayer doPause]
  -[JTClipSequencePlayer configureCompositorCompletionBlock]
  -[JTClipSequencePlayer clipsDataSource]
  -[JTClipSequencePlayer cancelQueuedRequestOfType:]
  -[JTClipSequencePlayer handleSeekCompleted:]
  -[JTClipSequencePlayer seek:cancelQueuedRequest:tolerance:completion:]
  -[JTClipSequencePlayer doMuteAudio:]
  -[JTClipSequencePlayer handleChangeAudioMutedCompleted]
  -[JTClipSequencePlayer updateComposition:]
  -[JTClipSequencePlayer doUpdateComposition]
  -[JTClipSequencePlayer setWasPlaying:]
  -[JTClipSequencePlayer setWasCurrentTime:]
  -[JTClipSequencePlayer setWasAudioMuted:]
  -[JTClipSequencePlayer wasCurrentTime]
  -[JTClipSequencePlayer wasAudioMuted]
  -[JTClipSequencePlayer setAudioMuted:completionBlock:]
  -[JTClipSequencePlayer removeRequestOfType:]
  -[JTClipSequencePlayer setRestoringPlayerStateAfterCompositionUpdate:]
  -[JTClipSequencePlayer wasPlaying]
  -[JTClipSequencePlayer appendRequests:]
  -[JTClipSequencePlayer firstQueuedRequestOfType:]
  -[JTClipSequencePlayer seek:tolerance:completion:]
  -[JTClipSequencePlayer dispatchBlockWhenDone:]
  -[JTClipSequencePlayer cancelQueuedCompositionUpdateRequestFromClip:]
  -[JTClipSequencePlayer doClipCompositionUpdate:]
  -[JTClipSequencePlayer handleUpdateCompositionForClipCompleted:]
  -[JTClipSequencePlayer updateLiveTransformForClip:]
  -[JTClipSequencePlayer handleCompositionRefreshCompleted:]
  -[JTClipSequencePlayer cachedCurrentTimeForCompositionUpdate]
  -[JTClipSequencePlayer handlePlaybackBegan]
  -[JTClipSequencePlayer handlePlaybackPaused]
  -[JTClipSequencePlayer handleReadyForDisplay:]
  -[JTClipSequencePlayer setPlayerProVideoPeriodicObserver:]
  -[JTClipSequencePlayer playerPlaybackTimePeriodicObserver]
  -[JTClipSequencePlayer playbackTimeChangedObserverInterval]
  -[JTClipSequencePlayer restoringPlayerStateAfterCompositionUpdate]
  -[JTClipSequencePlayer setPlayerPlaybackTimePeriodicObserver:]
  -[JTClipSequencePlayer playerProVideoPeriodicObserver]
  -[JTClipSequencePlayer initWithClipsDataSource:seekPosition:audioMuted:]
  -[JTClipSequencePlayer resetPlaybackTimeChangedObserverInterval]
  -[JTClipSequencePlayer setPlayerView:completionBlock:]
  -[JTClipSequencePlayer notifyPlayerViewSizeChanged]
  -[JTClipSequencePlayer updateCompositionForClip:completion:]
  -[JTClipSequencePlayer liveTransformForClip:]
  -[JTClipSequencePlayer setClipsDataSource:]


JTLocalAssetMediaItem : JTMediaItem
 @property  NSString *localFileName
 @property  NSURL *localFileURL

  // instance methods
  -[JTLocalAssetMediaItem dealloc]
  -[JTLocalAssetMediaItem isEqual:]
  -[JTLocalAssetMediaItem copyWithZone:]
  -[JTLocalAssetMediaItem initWithURL:]
  -[JTLocalAssetMediaItem .cxx_destruct]
  -[JTLocalAssetMediaItem info]
  -[JTLocalAssetMediaItem canSaveToCameraRoll]
  -[JTLocalAssetMediaItem localFileName]
  -[JTLocalAssetMediaItem localFileURL]
  -[JTLocalAssetMediaItem setLocalFileURL:]
  -[JTLocalAssetMediaItem initWithInfo:delegate:]
  -[JTLocalAssetMediaItem setLocalFileName:]


JTSuspendedInteractionRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *tag
 @property  NSArray *excludedChildViewControllers

  // class methods
  +[JTSuspendedInteractionRequest requestWithTag:excludedViewControllers:]

  // instance methods
  -[JTSuspendedInteractionRequest isEqual:]
  -[JTSuspendedInteractionRequest .cxx_destruct]
  -[JTSuspendedInteractionRequest tag]
  -[JTSuspendedInteractionRequest setTag:]
  -[JTSuspendedInteractionRequest setExcludedChildViewControllers:]
  -[JTSuspendedInteractionRequest excludedChildViewControllers]


JTViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  JTView *view
 @property  NSMutableDictionary *suspendedChildViewControllerRequests
 @property  NSMutableArray *suspendInteractionTags
 @property  BOOL debuggingUIEnabled
 @property  UIViewController *viewControllerDrivingStatusAppearance

  // instance methods
  -[JTViewController .cxx_destruct]
  -[JTViewController view]
  -[JTViewController setView:]
  -[JTViewController viewDidLoad]
  -[JTViewController viewDidAppear:]
  -[JTViewController viewDidDisappear:]
  -[JTViewController prefersHomeIndicatorAutoHidden]
  -[JTViewController prefersStatusBarHidden]
  -[JTViewController logSuspendedChildViewControllersToString:indentLevel:]
  -[JTViewController suspendInteractionTags]
  -[JTViewController debuggingUIEnabled]
  -[JTViewController setDebuggingUIEnabled:]
  -[JTViewController suspendedChildViewControllerRequests]
  -[JTViewController setChildViewControllerInteractionEnabledWithRequest:enabled:]
  -[JTViewController timeoutInteractionSuspended:]
  -[JTViewController resumeInteractionForChildViewControllersWithTag:]
  -[JTViewController resumeInteractionWithTag:]
  -[JTViewController suspendInteractionWithTag:]
  -[JTViewController viewControllerDrivingStatusAppearance]
  -[JTViewController logSuspendedViewControllers]
  -[JTViewController suspendChildViewControllersInteractionWithTag:timeout:excluding:]
  -[JTViewController setViewControllerDrivingStatusAppearance:]
  -[JTViewController setSuspendedChildViewControllerRequests:]
  -[JTViewController setSuspendInteractionTags:]


CFXNextRenderedFrameCallback : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  {?=qiIq} sendAfterRenderTime
 @property  @? block

  // instance methods
  -[CFXNextRenderedFrameCallback .cxx_destruct]
  -[CFXNextRenderedFrameCallback block]
  -[CFXNextRenderedFrameCallback initWithBlock:sendAfterRenderTime:]
  -[CFXNextRenderedFrameCallback sendAfterRenderTime]


CFXLiveCaptureViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXRendererDelegate, JTVideoCameraVideoDelegate, JTVideoCameraAudioDelegate, UIGestureRecognizerDelegate>
 @property  UIView *containerView
 @property  JTImageView *renderImageView
 @property  UIView *debugControlsView
 @property  UIView *uncroppedRenderImagePlaceHolderView
 @property  CFXRenderer *renderer
 @property  CFXEffectComposition *composition
 @property  NSObject<OS_dispatch_queue> *recordingQ
 @property  {?=qiIq} lastRenderTime
 @property  {?=qiIq} lastRenderPreparedTime
 @property  BOOL isCapturing_recordingQ
 @property  JTVideoWriter *videoWriter
 @property  JTImage *liveCaptureRenderedImage
 @property  NSObject<OS_dispatch_queue> *liveCaptureRenderedImageQ
 @property  NSMutableArray *renderFrameCompletionBlocks
 @property  <CFXLiveCaptureViewControllerDelegate> *delegate
 @property  {?=dd} normalizedMinimumHitTestArea
 @property  BOOL useLocalCameraViewfinder
 @property  UIView *localCameraViewfinderView
 @property  UIView *uncroppedCameraViewfinderPlaceholderView
 @property  long long captureMode
 @property  BOOL isCapturing
 @property  BOOL livePlayerIsSaturated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXLiveCaptureViewController instantiate]

  // instance methods
  -[CFXLiveCaptureViewController initWithCoder:]
  -[CFXLiveCaptureViewController delegate]
  -[CFXLiveCaptureViewController setDelegate:]
  -[CFXLiveCaptureViewController .cxx_destruct]
  -[CFXLiveCaptureViewController containerView]
  -[CFXLiveCaptureViewController setContainerView:]
  -[CFXLiveCaptureViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CFXLiveCaptureViewController viewWillAppear:]
  -[CFXLiveCaptureViewController viewWillDisappear:]
  -[CFXLiveCaptureViewController viewDidLoad]
  -[CFXLiveCaptureViewController didReceiveMemoryWarning]
  -[CFXLiveCaptureViewController renderer]
  -[CFXLiveCaptureViewController setRenderer:]
  -[CFXLiveCaptureViewController composition]
  -[CFXLiveCaptureViewController lastRenderTime]
  -[CFXLiveCaptureViewController setCaptureMode:]
  -[CFXLiveCaptureViewController setComposition:]
  -[CFXLiveCaptureViewController isCapturing]
  -[CFXLiveCaptureViewController captureMode]
  -[CFXLiveCaptureViewController setUseLocalCameraViewfinder:]
  -[CFXLiveCaptureViewController livePlayerIsSaturated]
  -[CFXLiveCaptureViewController willDropCameraFrame]
  -[CFXLiveCaptureViewController CFX_installGestures]
  -[CFXLiveCaptureViewController debugControlsView]
  -[CFXLiveCaptureViewController setDebugControlsView:]
  -[CFXLiveCaptureViewController stopRenderingCameraFrames]
  -[CFXLiveCaptureViewController renderImageView]
  -[CFXLiveCaptureViewController CFX_createUncroppedCameraPlaceholderViewIfNecessary]
  -[CFXLiveCaptureViewController uncroppedRenderImagePlaceHolderView]
  -[CFXLiveCaptureViewController setUncroppedRenderImagePlaceHolderView:]
  -[CFXLiveCaptureViewController liveCaptureRenderedImageQ]
  -[CFXLiveCaptureViewController setLastRenderPreparedTime:]
  -[CFXLiveCaptureViewController setLastRenderTime:]
  -[CFXLiveCaptureViewController renderFrameCompletionBlocks]
  -[CFXLiveCaptureViewController useLocalCameraViewfinder]
  -[CFXLiveCaptureViewController setLiveCaptureRenderedImage:]
  -[CFXLiveCaptureViewController liveCaptureRenderedImage]
  -[CFXLiveCaptureViewController recordingQ]
  -[CFXLiveCaptureViewController videoWriter]
  -[CFXLiveCaptureViewController lastRenderPreparedTime]
  -[CFXLiveCaptureViewController removeAllEffectsOfType:completion:]
  -[CFXLiveCaptureViewController removeAllEffects:]
  -[CFXLiveCaptureViewController isCapturing_recordingQ]
  -[CFXLiveCaptureViewController setVideoWriter:]
  -[CFXLiveCaptureViewController setIsCapturing_recordingQ:]
  -[CFXLiveCaptureViewController CFX_setAnimationEnabledForOverlays:]
  -[CFXLiveCaptureViewController CFX_livePreviewTapped:]
  -[CFXLiveCaptureViewController CFX_livePreviewPanned:]
  -[CFXLiveCaptureViewController CFX_livePreviewPinched:]
  -[CFXLiveCaptureViewController CFX_livePreviewRotated:]
  -[CFXLiveCaptureViewController CFX_livePreviewDoubleTapped:]
  -[CFXLiveCaptureViewController locationInCaptureViewForGestureRecognizer:]
  -[CFXLiveCaptureViewController renderer:didPrepareToRenderFrameAtTime:]
  -[CFXLiveCaptureViewController renderer:didRenderFrame:]
  -[CFXLiveCaptureViewController renderVideoFrame:]
  -[CFXLiveCaptureViewController processAudioSample:]
  -[CFXLiveCaptureViewController shutdownLivePlayer]
  -[CFXLiveCaptureViewController localCameraViewfinderView]
  -[CFXLiveCaptureViewController uncroppedCameraViewfinderPlaceholderView]
  -[CFXLiveCaptureViewController startButtonTouchUpInside:]
  -[CFXLiveCaptureViewController stopButtonTouchUpInside:]
  -[CFXLiveCaptureViewController toggleDebugControlsView:]
  -[CFXLiveCaptureViewController setlastRenderPreparedTime:]
  -[CFXLiveCaptureViewController executeAfterNextFrameIsRendered:]
  -[CFXLiveCaptureViewController startRenderingCameraFrames]
  -[CFXLiveCaptureViewController pauseRenderingCameraFrames]
  -[CFXLiveCaptureViewController resumeRenderingCameraFrames]
  -[CFXLiveCaptureViewController flushRenderer]
  -[CFXLiveCaptureViewController clearFaceTrackingRenderer]
  -[CFXLiveCaptureViewController startVideoRecordingWithFlashMode:]
  -[CFXLiveCaptureViewController stopVideoRecording:]
  -[CFXLiveCaptureViewController cancelVideoRecording]
  -[CFXLiveCaptureViewController takeStillPhotoWithFlashMode:completion:]
  -[CFXLiveCaptureViewController normalizedMinimumHitTestArea]
  -[CFXLiveCaptureViewController setRenderImageView:]
  -[CFXLiveCaptureViewController setRecordingQ:]
  -[CFXLiveCaptureViewController setLiveCaptureRenderedImageQ:]
  -[CFXLiveCaptureViewController setRenderFrameCompletionBlocks:]


CFXEffectType : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSOrderedSet *effects
 @property  int jtEffectType
 @property  NSString *localizedTitle
 @property  NSString *identifier

  // class methods
  +[CFXEffectType initialize]
  +[CFXEffectType effectTypeWithIdentifier:]
  +[CFXEffectType effectTypeIdentifiers]

  // instance methods
  -[CFXEffectType isEqual:]
  -[CFXEffectType .cxx_destruct]
  -[CFXEffectType identifier]
  -[CFXEffectType initWithIdentifier:]
  -[CFXEffectType localizedTitle]
  -[CFXEffectType setLocalizedTitle:]
  -[CFXEffectType effects]
  -[CFXEffectType setEffects:]
  -[CFXEffectType jtEffectType]
  -[CFXEffectType setJtEffectType:]


CFXEffectComposition : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *filters
 @property  NSMutableArray *overlays
 @property  NSMutableArray *animojis
 @property  NSObject<OS_dispatch_queue> *concurrentQueue
 @property  unsigned long count
 @property  NSArray *effects
 @property  NSArray *jtEffects
 @property  BOOL hasFaceTrackedOverlays
 @property  BOOL isEmpty
 @property  BOOL requiresFaceTracking

  // instance methods
  -[CFXEffectComposition init]
  -[CFXEffectComposition count]
  -[CFXEffectComposition isEmpty]
  -[CFXEffectComposition .cxx_destruct]
  -[CFXEffectComposition filters]
  -[CFXEffectComposition setFilters:]
  -[CFXEffectComposition overlays]
  -[CFXEffectComposition setOverlays:]
  -[CFXEffectComposition concurrentQueue]
  -[CFXEffectComposition setConcurrentQueue:]
  -[CFXEffectComposition requiresFaceTracking]
  -[CFXEffectComposition jtEffects]
  -[CFXEffectComposition effects]
  -[CFXEffectComposition addEffect:completion:]
  -[CFXEffectComposition jtEffectsForType:]
  -[CFXEffectComposition animojis]
  -[CFXEffectComposition hasEffectOfType:]
  -[CFXEffectComposition setAnimojis:]
  -[CFXEffectComposition removeAllEffectsOfType:completion:]
  -[CFXEffectComposition removeAllEffects:]
  -[CFXEffectComposition CFX_effectsForJettyType:]
  -[CFXEffectComposition hasFaceTrackedOverlays]
  -[CFXEffectComposition removeEffect:completion:]
  -[CFXEffectComposition removeAllOverlayEffects:]
  -[CFXEffectComposition indexOfEffect:]
  -[CFXEffectComposition insertEffectAtIndex:atIndex:]


JTFilterEffect : JTEffect
  // class methods
  +[JTFilterEffect supportsSecureCoding]

  // instance methods
  -[JTFilterEffect isEqual:]
  -[JTFilterEffect copyWithZone:]
  -[JTFilterEffect encodeWithCoder:]
  -[JTFilterEffect initWithCoder:]
  -[JTFilterEffect setForceRenderAtPosterFrame:]
  -[JTFilterEffect enablePresentationState:]
  -[JTFilterEffect initWithEffectID:]


CFXBundle : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

CFXEffectBrowserContentPresenterViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXEffectBrowserContentPresenterDelegate>
 @property  <CFXEffectBrowserContentPresenterViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXEffectBrowserContentPresenterViewController delegate]
  -[CFXEffectBrowserContentPresenterViewController setDelegate:]
  -[CFXEffectBrowserContentPresenterViewController .cxx_destruct]
  -[CFXEffectBrowserContentPresenterViewController loadView]
  -[CFXEffectBrowserContentPresenterViewController effectBrowserViewController:presentExpandedAppViewController:animated:completion:]
  -[CFXEffectBrowserContentPresenterViewController effectBrowserViewController:dismissExpandedAppViewController:animated:completion:]
  -[CFXEffectBrowserContentPresenterViewController expandedAppViewControllerSizeForEffectBrowserViewController:]
  -[CFXEffectBrowserContentPresenterViewController CFX_alwaysExpandedAppHeight]
  -[CFXEffectBrowserContentPresenterViewController CFX_constraintsForAlwaysExpandedAppView:containerView:]
  -[CFXEffectBrowserContentPresenterViewController configureEffectBrowserContentPresentationForOrientation]


JTAVPlayerViewController : AVPlayerViewController /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices <JTAVPlayerViewer>
 @property  <JTAVPlayerViewerDelegate> *playerViewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  AVPlayer *player
 @property  NSString *videoGravity
 @property  {CGSize=dd} displaySize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} videoBounds
 @property  BOOL readyForDisplay

  // instance methods
  -[JTAVPlayerViewController initWithCoder:]
  -[JTAVPlayerViewController .cxx_destruct]
  -[JTAVPlayerViewController viewDidLoad]
  -[JTAVPlayerViewController displaySize]
  -[JTAVPlayerViewController playerViewDelegate]
  -[JTAVPlayerViewController setPlayerViewDelegate:]


JTAudioMediaItem : JTMediaItem
  // instance methods
  -[JTAudioMediaItem init]
  -[JTAudioMediaItem dealloc]
  -[JTAudioMediaItem isEqual:]
  -[JTAudioMediaItem copyWithZone:]
  -[JTAudioMediaItem info]
  -[JTAudioMediaItem initWithInfo:delegate:]
  -[JTAudioMediaItem hasAudibleCharacteristic]


JTFormatters : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTFormatters dateFormatter]
  +[JTFormatters dateFormatterLongStyle]
  +[JTFormatters dateFormatterMonthDay]
  +[JTFormatters dateFormatterDayOfWeekMonthDayYear]
  +[JTFormatters dateComponentsFormatterHourMinSec]
  +[JTFormatters dateComponentsFormatterMinSec]


JTEffectAnimationView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CAAnimationDelegate>
 @property  BOOL animationDidBegin
 @property  BOOL animationDidEnd
 @property  JTEffectFrame *fromEffectFrame
 @property  JTEffectFrame *toEffectFrame
 @property  PCMatrix44Double *fromTransform
 @property  PCMatrix44Double *toTransform
 @property  @? animationCompletedBlock
 @property  JTEffectFrame *effectFrame
 @property  {CATransform3D=dddddddddddddddd} animatedTransform
 @property  double fractionComplete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTEffectAnimationView .cxx_destruct]
  -[JTEffectAnimationView fractionComplete]
  -[JTEffectAnimationView animationDidStop:finished:]
  -[JTEffectAnimationView fromTransform]
  -[JTEffectAnimationView toTransform]
  -[JTEffectAnimationView setFromTransform:]
  -[JTEffectAnimationView setToTransform:]
  -[JTEffectAnimationView setFromEffectFrame:]
  -[JTEffectAnimationView setToEffectFrame:]
  -[JTEffectAnimationView setAnimationDidBegin:]
  -[JTEffectAnimationView setAnimationCompletedBlock:]
  -[JTEffectAnimationView setAnimationDidEnd:]
  -[JTEffectAnimationView animationCompletedBlock]
  -[JTEffectAnimationView initWithEffectFrame:toEffectFrame:fromTransform:toTransform:]
  -[JTEffectAnimationView animateTransform:completion:]
  -[JTEffectAnimationView animatedTransform]
  -[JTEffectAnimationView effectFrame]
  -[JTEffectAnimationView toEffectFrame]
  -[JTEffectAnimationView animationDidBegin]
  -[JTEffectAnimationView animationDidEnd]
  -[JTEffectAnimationView fromEffectFrame]


CFXApplicationState : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL isRegisteredForEvents
 @property  long long applicationState

  // class methods
  +[CFXApplicationState sharedInstance]
  +[CFXApplicationState beginMonitoringApplicationState]

  // instance methods
  -[CFXApplicationState init]
  -[CFXApplicationState dealloc]
  -[CFXApplicationState applicationState]
  -[CFXApplicationState applicationWillResignActive:]
  -[CFXApplicationState applicationDidBecomeActive:]
  -[CFXApplicationState applicationDidEnterBackground:]
  -[CFXApplicationState setApplicationState:]
  -[CFXApplicationState unregisterForEvents]
  -[CFXApplicationState registerForEvents]
  -[CFXApplicationState isRegisteredForEvents]
  -[CFXApplicationState setIsRegisteredForEvents:]


JTAnimojiEffect : JTEffect
 @property  UIImage *thumbnail

  // class methods
  +[JTAnimojiEffect supportsSecureCoding]
  +[JTAnimojiEffect isAvatarKitAvailable]
  +[JTAnimojiEffect animojiIDs]

  // instance methods
  -[JTAnimojiEffect displayName]
  -[JTAnimojiEffect thumbnail]
  -[JTAnimojiEffect renderEffect]
  -[JTAnimojiEffect initWithEffectID:]
  -[JTAnimojiEffect _cachedRenderEffect]
  -[JTAnimojiEffect transform:basisOrigin:]
  -[JTAnimojiEffect _convertRenderEffectRect:toBasisRect:basisOrigin:]
  -[JTAnimojiEffect _convertRenderEffectPoints:toBasisRect:basisOrigin:]
  -[JTAnimojiEffect _convertRenderEffectPoints:numPoints:toBasisRect:basisOrigin:]
  -[JTAnimojiEffect _convertRenderEffectPoints:numPoints:fromBasisRect:basisOrigin:]
  -[JTAnimojiEffect _affineTransformFromEffectRect:toSize:basisOrigin:]


CFXOverlayEffectPickerView : CFXEffectPickerView <JTCollectionViewDelegate>
 @property  UIView *contentView
 @property  JTCollectionView *collectionView
 @property  JTCollectionViewFlowLayout *collectionViewLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXOverlayEffectPickerView .cxx_destruct]
  -[CFXOverlayEffectPickerView contentView]
  -[CFXOverlayEffectPickerView setContentView:]
  -[CFXOverlayEffectPickerView collectionView]
  -[CFXOverlayEffectPickerView setCollectionViewLayout:]
  -[CFXOverlayEffectPickerView setCollectionView:]
  -[CFXOverlayEffectPickerView collectionViewLayout]
  -[CFXOverlayEffectPickerView subviewsDidLoad]
  -[CFXOverlayEffectPickerView effectPickerNibName]
  -[CFXOverlayEffectPickerView effectPickerCellNibName]
  -[CFXOverlayEffectPickerView effectPickerCellReuseIdentifier]
  -[CFXOverlayEffectPickerView updateThumbnailColumnSizeForCollectionSize]
  -[CFXOverlayEffectPickerView didResizeCollectionViewToSize:]


JTPixelBufferPool : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  {CGSize=dd} size
 @property  unsigned int type

  // instance methods
  -[JTPixelBufferPool dealloc]
  -[JTPixelBufferPool type]
  -[JTPixelBufferPool size]
  -[JTPixelBufferPool initWithSize:]
  -[JTPixelBufferPool createPixelBuffer]
  -[JTPixelBufferPool initWithSize:type:]


JTCustomImageSensor : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <ARSensor>
 @property  <ARSensorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long powerUsage

  // instance methods
  -[JTCustomImageSensor delegate]
  -[JTCustomImageSensor setDelegate:]
  -[JTCustomImageSensor .cxx_destruct]
  -[JTCustomImageSensor stop]
  -[JTCustomImageSensor start]
  -[JTCustomImageSensor providedDataTypes]
  -[JTCustomImageSensor createImageDataFromFrameSet:captureDevice:captureSession:trackedFacesMetadata:faceObjectsMetadata:]
  -[JTCustomImageSensor outputSensorData:]


JTCaptureMediaItem : JTMediaItem
  // instance methods
  -[JTCaptureMediaItem init]
  -[JTCaptureMediaItem isEqual:]
  -[JTCaptureMediaItem copyWithZone:]


JTVideoCameraController : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <AVCaptureDataOutputSynchronizerDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVCapturePhotoCaptureDelegate, AVCaptureMetadataOutputObjectsDelegate, JTARKitFrameDelegate, CFXFaceTrackingRendererDelegate>
 @property  long long cameraMode_captureSessionQueue
 @property  long long cameraMode_queryDataQueue
 @property  BOOL captureSessionRunning_queryDataQueue
 @property  NSString *cameraType_queryDataQueue
 @property  long long currentCameraPosition_captureSessionQueue
 @property  long long currentCameraPosition_dataOutSynchQueue
 @property  long long currentCameraPosition_queryDataQueue
 @property  double cameraDeviceMaxZoom_captureSessionQueue
 @property  double cameraDeviceCurrentZoom_captureSessionQueue
 @property  double cameraDeviceCurrentZoom_queryDataQueue
 @property  {?=[3]} cameraDeviceIntrinsics_dataOutSynchQueue
 @property  long long cachedMovieRecordingTorchMode
 @property  NSArray *pvDetectedFacesArray_dataOutSynchQueue
 @property  NSArray *metadataFaceObjectsArray_dataOutSynchQueue
 @property  NSArray *metadataTrackedFacesArray_dataOutSynchQueue
 @property  long long captureVideoOrientation_dataOutSynchQueue
 @property  long long captureVideoOrientation_queryDataQueue
 @property  long long captureVideoOrientation_metadataOutQueue
 @property  ARFrame *mostRecentFrame_queryDataQueue
 @property  ARFrame *stillImageFrame_queryDataQueue
 @property  JTFaceAnchor *mostRecentFaceAnchor_queryDataQueue
 @property  JTFaceAnchor *stillImageFaceAnchor_queryDataQueue
 @property  BOOL isRecordingMovie_captureSessionQueue
 @property  BOOL hasValidFaceData_queryDataQueue
 @property  BOOL sessionRequiresFaceTracking_queryDataQueue
 @property  BOOL isFlashScene_queryDataQueue
 @property  VCPCaptureAnalysisSession *vcpAnalyzer
 @property  NSNumber *currentlyTrackedFaceID
 @property  long long cameraMode
 @property  BOOL cameraSessionRunning
 @property  BOOL audioEnabled
 @property  BOOL depthEnabled
 @property  BOOL ARKitEnabled
 @property  BOOL isFlashScene
 @property  {?=ii} depthDimensions
 @property  double zoomFactor
 @property  JTFaceAnchor *mostRecentFaceAnchor
 @property  JTFaceAnchor *stillImageFaceAnchor
 @property  BOOL hasValidFaceData
 @property  BOOL sessionRequiresFaceTracking
 @property  ARFrame *stillImageFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[JTVideoCameraController sharedInstance]

  // instance methods
  -[JTVideoCameraController init]
  -[JTVideoCameraController dealloc]
  -[JTVideoCameraController clear]
  -[JTVideoCameraController .cxx_destruct]
  -[JTVideoCameraController observeValueForKeyPath:ofObject:change:context:]
  -[JTVideoCameraController cameraType]
  -[JTVideoCameraController captureOutput:didOutputSampleBuffer:fromConnection:]
  -[JTVideoCameraController captureOutput:didFinishProcessingPhoto:error:]
  -[JTVideoCameraController captureOutput:didOutputMetadataObjects:fromConnection:]
  -[JTVideoCameraController dataOutputSynchronizer:didOutputSynchronizedDataCollection:]
  -[JTVideoCameraController isFlashScene]
  -[JTVideoCameraController zoomFactor]
  -[JTVideoCameraController faceTrackingEnabled]
  -[JTVideoCameraController depthEnabled]
  -[JTVideoCameraController depthDimensions]
  -[JTVideoCameraController setZoomFactor:]
  -[JTVideoCameraController cameraPosition]
  -[JTVideoCameraController cameraMode]
  -[JTVideoCameraController audioEnabled]
  -[JTVideoCameraController stillImageFaceAnchor]
  -[JTVideoCameraController setMostRecentFaceAnchor:]
  -[JTVideoCameraController prepareCameraForMode:position:]
  -[JTVideoCameraController sessionRequiresFaceTracking]
  -[JTVideoCameraController notifyExternalImageData:orientation:effectComposition:]
  -[JTVideoCameraController cameraSessionRunning]
  -[JTVideoCameraController setCaptureTorchMode:completion:]
  -[JTVideoCameraController startCameraSession:]
  -[JTVideoCameraController stopCameraSession:]
  -[JTVideoCameraController setSessionRequiresFaceTracking:]
  -[JTVideoCameraController addVideoRenderDelegate:]
  -[JTVideoCameraController addAudioRenderDelegate:]
  -[JTVideoCameraController removeVideoRenderDelegate:async:]
  -[JTVideoCameraController removeAudioRenderDelegate:async:]
  -[JTVideoCameraController videoAndAudioOutputSettings:]
  -[JTVideoCameraController enableRecordingMovieMode:completion:]
  -[JTVideoCameraController captureStillImageWithFlash:completion:]
  -[JTVideoCameraController thermalLevelChanged:]
  -[JTVideoCameraController captureSessionDidStartRunningNotification:]
  -[JTVideoCameraController captureSessionDidStopRunningNotification:]
  -[JTVideoCameraController captureSessionRuntimeErrorNotification:]
  -[JTVideoCameraController captureSessionWasInterruptedNotification:]
  -[JTVideoCameraController captureSessionInterruptionEndedNotification:]
  -[JTVideoCameraController setMostRecentFrame_queryDataQueue:]
  -[JTVideoCameraController setStillImageFrame_queryDataQueue:]
  -[JTVideoCameraController setMostRecentFaceAnchor_queryDataQueue:]
  -[JTVideoCameraController setStillImageFaceAnchor_queryDataQueue:]
  -[JTVideoCameraController setHasValidFaceData_queryDataQueue:]
  -[JTVideoCameraController setCaptureSessionRunning_queryDataQueue:]
  -[JTVideoCameraController JT_setPhotoOrientationFromInterfaceOrientationCaptureSessionQueue:]
  -[JTVideoCameraController JT_setIsFlashScene:]
  -[JTVideoCameraController cameraMode_queryDataQueue]
  -[JTVideoCameraController captureSessionRunning_queryDataQueue]
  -[JTVideoCameraController JT_isAudioEnabledCaptureSessionQueue]
  -[JTVideoCameraController JT_isDepthEnabledCaptureSessionQueue]
  -[JTVideoCameraController JT_isARKitEnabledCaptureSessionQueue]
  -[JTVideoCameraController isFlashScene_queryDataQueue]
  -[JTVideoCameraController cameraDeviceCurrentZoom_queryDataQueue]
  -[JTVideoCameraController cameraDeviceMaxZoom_captureSessionQueue]
  -[JTVideoCameraController JT_setZoomFactor_captureSessionQueue:]
  -[JTVideoCameraController setCameraDeviceCurrentZoom_captureSessionQueue:]
  -[JTVideoCameraController setCameraDeviceCurrentZoom_queryDataQueue:]
  -[JTVideoCameraController stillImageFrame_queryDataQueue]
  -[JTVideoCameraController mostRecentFaceAnchor_queryDataQueue]
  -[JTVideoCameraController setSessionRequiresFaceTracking_queryDataQueue:]
  -[JTVideoCameraController sessionRequiresFaceTracking_queryDataQueue]
  -[JTVideoCameraController stillImageFaceAnchor_queryDataQueue]
  -[JTVideoCameraController hasValidFaceData_queryDataQueue]
  -[JTVideoCameraController JT_calculateFrameRateRequiresLockCaptureSessionQueue:]
  -[JTVideoCameraController JT_resetSessionCaptureSessionQueue]
  -[JTVideoCameraController JT_isUsingInternalMicCaptureSessionQueue]
  -[JTVideoCameraController JT_configureInternalMicToUseOmnidirectionalPatternCaptureSessionQueue]
  -[JTVideoCameraController cameraMode_captureSessionQueue]
  -[JTVideoCameraController currentCameraPosition_captureSessionQueue]
  -[JTVideoCameraController setCameraMode_captureSessionQueue:]
  -[JTVideoCameraController setCameraMode_queryDataQueue:]
  -[JTVideoCameraController JT_configureCaptureSessionForPosition:errorCaptureSessionQueue:]
  -[JTVideoCameraController startCameraSessionInPosition:completion:]
  -[JTVideoCameraController JT_cameraIsPearlCaptureSessionQueue]
  -[JTVideoCameraController JT_setupARCameraSessionController]
  -[JTVideoCameraController JT_configureCaptureSessionPresetCaptureSessionQueue]
  -[JTVideoCameraController JT_configureDepthCameraApplyZoomCaptureSessionQueue:]
  -[JTVideoCameraController JT_setIdealResolutionOnVideoDataOutVideoSettingsCaptureSessionQueue]
  -[JTVideoCameraController JT_configureMicForCameraPositionCaptureSessionQueue:]
  -[JTVideoCameraController cameraType_queryDataQueue]
  -[JTVideoCameraController currentCameraPosition_queryDataQueue]
  -[JTVideoCameraController captureVideoOrientation_queryDataQueue]
  -[JTVideoCameraController JT_switchToCameraPosition:errPtrCaptureSessionQueue:]
  -[JTVideoCameraController switchCameraToPosition:completion:]
  -[JTVideoCameraController JT_rampToZoom:rate:durationCaptureSessionQueue:]
  -[JTVideoCameraController JT_setMinFrameRate:maxFrameRate:requiresLockCaptureSessionQueue:]
  -[JTVideoCameraController minFrameRate:maxFrameRate:]
  -[JTVideoCameraController isRecordingMovie_captureSessionQueue]
  -[JTVideoCameraController setIsRecordingMovie_captureSessionQueue:]
  -[JTVideoCameraController setCachedMovieRecordingTorchMode:]
  -[JTVideoCameraController cachedMovieRecordingTorchMode]
  -[JTVideoCameraController mostRecentFrame_queryDataQueue]
  -[JTVideoCameraController setCaptureVideoOrientation_dataOutSynchQueue:]
  -[JTVideoCameraController setCameraDeviceIntrinsics_dataOutSynchQueue:]
  -[JTVideoCameraController JT_setCaptureDeviceType:captureDevicePositionCaptureSessionQueue:]
  -[JTVideoCameraController preProcessFrameWithPixelBuffer:metadata:timestamp:]
  -[JTVideoCameraController JT_currentARHWFaceDetection:]
  -[JTVideoCameraController JT_processPixelBufferForFaceTransform:forNormalizedFaceRect:withRollAngle:withTimestamp:andDuration:detectionOrientation:interfaceOrientation:needsMirroring:]
  -[JTVideoCameraController JT_createPVFrameSetFromPixelBuffer:withMetadata:timeInterval:]
  -[JTVideoCameraController JT_notifyVideoDelegatesOfFrameSetDataOutSynchQueue:]
  -[JTVideoCameraController setPvDetectedFacesArray_dataOutSynchQueue:]
  -[JTVideoCameraController setMetadataFaceObjectsArray_dataOutSynchQueue:]
  -[JTVideoCameraController setMetadataTrackedFacesArray_dataOutSynchQueue:]
  -[JTVideoCameraController JT_processMetadataObjectsMetadataOutQueue:]
  -[JTVideoCameraController pvDetectedFacesArray_dataOutSynchQueue]
  -[JTVideoCameraController metadataTrackedFacesArray_dataOutSynchQueue]
  -[JTVideoCameraController metadataFaceObjectsArray_dataOutSynchQueue]
  -[JTVideoCameraController JT_currentAVMetadataFaceObject:]
  -[JTVideoCameraController captureVideoOrientation_dataOutSynchQueue]
  -[JTVideoCameraController captureVideoOrientation_metadataOutQueue]
  -[JTVideoCameraController JT_setSelfieExposurePointOfInterestFromFaceMetadataCaptureSessionQueue:]
  -[JTVideoCameraController JT_setupPhotosCaptureSessionQueue:]
  -[JTVideoCameraController JT_setupVideoCaptureSessionQueue:]
  -[JTVideoCameraController JT_setupAudioCaptureSessionQueue:]
  -[JTVideoCameraController JT_resetVideoDataOutVideoSettingsCaptureSessionQueue]
  -[JTVideoCameraController JT_biggestDepthFormat:ofTypeCaptureSessionQueue:]
  -[JTVideoCameraController setCurrentCameraPosition_captureSessionQueue:]
  -[JTVideoCameraController setCameraType_queryDataQueue:]
  -[JTVideoCameraController setCurrentCameraPosition_queryDataQueue:]
  -[JTVideoCameraController setCurrentCameraPosition_dataOutSynchQueue:]
  -[JTVideoCameraController setIsFlashScene_queryDataQueue:]
  -[JTVideoCameraController JT_cameraForPosition:]
  -[JTVideoCameraController JT_setupDepthCaptureSessionQueue]
  -[JTVideoCameraController JT_enableCameraIntrinsicMatrixDeliveryCaptureSessionQueue]
  -[JTVideoCameraController setCameraDeviceMaxZoom_captureSessionQueue:]
  -[JTVideoCameraController setCaptureVideoOrientation_metadataOutQueue:]
  -[JTVideoCameraController setCaptureVideoOrientation_queryDataQueue:]
  -[JTVideoCameraController audioSessionRouteChangedNotification:]
  -[JTVideoCameraController currentlyTrackedFaceID]
  -[JTVideoCameraController setCurrentlyTrackedFaceID:]
  -[JTVideoCameraController JT_getFocalLengthForSceneCamera]
  -[JTVideoCameraController vcpAnalyzer]
  -[JTVideoCameraController didUpdateFrame:]
  -[JTVideoCameraController deviceIsUsingBackCamera]
  -[JTVideoCameraController ARKitEnabled]
  -[JTVideoCameraController stillImageFrame]
  -[JTVideoCameraController mostRecentFaceAnchor]
  -[JTVideoCameraController hasValidFaceData]
  -[JTVideoCameraController captureVideoOrientation]
  -[JTVideoCameraController switchCamera:]
  -[JTVideoCameraController scaleCurrentZoomFactor:]
  -[JTVideoCameraController resetZoomFactor]
  -[JTVideoCameraController setFFCZoom:completion:]
  -[JTVideoCameraController rampToZoom:rate:]
  -[JTVideoCameraController rampToZoom:duration:]
  -[JTVideoCameraController stopRampToZoom:]
  -[JTVideoCameraController setMinFrameRate:maxFrameRate:]
  -[JTVideoCameraController debugFrameRateLabel]
  -[JTVideoCameraController supportedFlashModes:]
  -[JTVideoCameraController focusAndExposeCameraOnPoint:]
  -[JTVideoCameraController createLivePlayerCameraSource]
  -[JTVideoCameraController removeLivePlayerCameraSource:]
  -[JTVideoCameraController saveToPhotoLibrary:]
  -[JTVideoCameraController currentCameraPosition_dataOutSynchQueue]
  -[JTVideoCameraController cameraDeviceCurrentZoom_captureSessionQueue]
  -[JTVideoCameraController cameraDeviceIntrinsics_dataOutSynchQueue]


CFXRemoteCommandServer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <CFXRemoteCommandServerDelegate> *delegate
 @property  NSDistributedNotificationCenter *distributedNotificationCenter

  // instance methods
  -[CFXRemoteCommandServer delegate]
  -[CFXRemoteCommandServer setDelegate:]
  -[CFXRemoteCommandServer .cxx_destruct]
  -[CFXRemoteCommandServer initWithDelegate:]
  -[CFXRemoteCommandServer distributedNotificationCenter]
  -[CFXRemoteCommandServer setDistributedNotificationCenter:]
  -[CFXRemoteCommandServer onAddShapeNotification:]
  -[CFXRemoteCommandServer onAddStickerNotification:]
  -[CFXRemoteCommandServer onAddTextNotification:]
  -[CFXRemoteCommandServer onRemoveEffectsNotification:]
  -[CFXRemoteCommandServer onSetAnimojiNotification:]
  -[CFXRemoteCommandServer onSetFilterNotification:]


CFXAnalyticsKeys : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXAnalyticsKeys allIncrementScalarEvents]
  +[CFXAnalyticsKeys allDistributionEvents]
  +[CFXAnalyticsKeys allEventNames]
  +[CFXAnalyticsKeys allIncrementScalarEffectEvents]


CFXEffectPickerView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation <UICollectionViewDataSource, JTEffectPreviewManagerDelegate, UICollectionViewDelegateFlowLayout>
 @property  BOOL previewingIsWaitingForConfiguration
 @property  JTEffectPreviewManager *previewManager
 @property  {CGSize=dd} cellSize
 @property  {CGSize=dd} thumbnailSize
 @property  BOOL continuousPreviewEnabled
 @property  UIImage *previewBackgroundImage
 @property  BOOL useCameraForContinuousPreview
 @property  <CFXEffectPickerViewDataSource> *dataSource
 @property  <CFXEffectPickerViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXEffectPickerView initWithCoder:]
  -[CFXEffectPickerView delegate]
  -[CFXEffectPickerView setDelegate:]
  -[CFXEffectPickerView .cxx_destruct]
  -[CFXEffectPickerView dataSource]
  -[CFXEffectPickerView setDataSource:]
  -[CFXEffectPickerView cellSize]
  -[CFXEffectPickerView contentView]
  -[CFXEffectPickerView initWithFrame:]
  -[CFXEffectPickerView scrollViewDidScroll:]
  -[CFXEffectPickerView collectionView]
  -[CFXEffectPickerView reloadData]
  -[CFXEffectPickerView collectionView:numberOfItemsInSection:]
  -[CFXEffectPickerView collectionView:cellForItemAtIndexPath:]
  -[CFXEffectPickerView collectionViewLayout]
  -[CFXEffectPickerView collectionView:didSelectItemAtIndexPath:]
  -[CFXEffectPickerView collectionView:layout:sizeForItemAtIndexPath:]
  -[CFXEffectPickerView thumbnailSize]
  -[CFXEffectPickerView setThumbnailSize:]
  -[CFXEffectPickerView setCellSize:]
  -[CFXEffectPickerView startPreviewing]
  -[CFXEffectPickerView stopPreviewing]
  -[CFXEffectPickerView sharedInit]
  -[CFXEffectPickerView configureCell:]
  -[CFXEffectPickerView subviewsDidLoad]
  -[CFXEffectPickerView updatePreviewEffectsWhenReloadComplete]
  -[CFXEffectPickerView didScrollCollectionView]
  -[CFXEffectPickerView applyEffectAtCellIndex:]
  -[CFXEffectPickerView effectPickerNibName]
  -[CFXEffectPickerView effectPickerCellNibName]
  -[CFXEffectPickerView effectPickerCellReuseIdentifier]
  -[CFXEffectPickerView didSelectItemAtCellIndex:]
  -[CFXEffectPickerView orientationDidChange]
  -[CFXEffectPickerView didResizeCollectionViewToSize:]
  -[CFXEffectPickerView collectionView:didResize:]
  -[CFXEffectPickerView previewManager]
  -[CFXEffectPickerView previewingIsWaitingForConfiguration]
  -[CFXEffectPickerView setPreviewingIsWaitingForConfiguration:]
  -[CFXEffectPickerView setPreviewManager:]
  -[CFXEffectPickerView previewBackgroundImage]
  -[CFXEffectPickerView isContinuousPreviewEnabled]
  -[CFXEffectPickerView isUsingCameraForContinuousPreview]
  -[CFXEffectPickerView updatePreviewEffects]
  -[CFXEffectPickerView effectIndexForCellIndex:]
  -[CFXEffectPickerView numberOfCollectionViewItems]
  -[CFXEffectPickerView effectDidLoadForCell:effect:]
  -[CFXEffectPickerView effectPreviewManager:didUpdatePreviewsFor:]
  -[CFXEffectPickerView setContinuousPreviewEnabled:]
  -[CFXEffectPickerView setUseCameraForContinuousPreview:]
  -[CFXEffectPickerView setPreviewBackgroundImage:]


JTVideoMediaUtils : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL cachedAssetInformationValid
 @property  {CGSize=dd} cachedNaturalSize
 @property  float cachedFrameRate
 @property  {CGAffineTransform=dddddd} cachedTransform
 @property  unsigned int cachedCodec4cc
 @property  int cachedDurationAt30fps
 @property  {?=qiIq} cachedPreciseAssetDuration
 @property  unsigned long cachedVideoTrackCount
 @property  unsigned long cachedAudioTrackCount
 @property  BOOL cacheWillDieDuringLoad

  // instance methods
  -[JTVideoMediaUtils transform]
  -[JTVideoMediaUtils frameRate]
  -[JTVideoMediaUtils cachedAssetInformationValid]
  -[JTVideoMediaUtils setCachedAssetInformationValid:]
  -[JTVideoMediaUtils setCachedVideoTrackCount:]
  -[JTVideoMediaUtils setCachedNaturalSize:]
  -[JTVideoMediaUtils setCachedFrameRate:]
  -[JTVideoMediaUtils setCachedTransform:]
  -[JTVideoMediaUtils cachedVideoTrackCount]
  -[JTVideoMediaUtils cachedPreciseAssetDuration]
  -[JTVideoMediaUtils setCachedPreciseAssetDuration:]
  -[JTVideoMediaUtils setCachedCodec4cc:]
  -[JTVideoMediaUtils setCachedDurationAt30fps:]
  -[JTVideoMediaUtils setCachedAudioTrackCount:]
  -[JTVideoMediaUtils cachedAudioTrackCount]
  -[JTVideoMediaUtils setCacheWillDieDuringLoad:]
  -[JTVideoMediaUtils cachedFrameRate]
  -[JTVideoMediaUtils cachedDurationAt30fps]
  -[JTVideoMediaUtils cachedCodec4cc]
  -[JTVideoMediaUtils cachedNaturalSize]
  -[JTVideoMediaUtils cacheWillDieDuringLoad]
  -[JTVideoMediaUtils isUnsupportedAudio]
  -[JTVideoMediaUtils cachedTransform]
  -[JTVideoMediaUtils cacheTrackInformationWithAVAsset:]
  -[JTVideoMediaUtils requestAVAssetAsyncWithAsset:needsDerivativeMedia:frameRate:completion:]
  -[JTVideoMediaUtils durationAt30fpsWithAssetDuration:]
  -[JTVideoMediaUtils isOriginalHEVC4k]
  -[JTVideoMediaUtils hasAudibleCharacteristicWithIsMissing:]
  -[JTVideoMediaUtils naturalSizeWithIsMissing:asset:]
  -[JTVideoMediaUtils hasVideoTracks]
  -[JTVideoMediaUtils hasAudioTracks]


JTTextEffectEditorTextView : UITextView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  BOOL prefersMovingBeforeScalingWhenAvoidingKeyboardUI

  // instance methods
  -[JTTextEffectEditorTextView canPerformAction:withSender:]
  -[JTTextEffectEditorTextView hitTest:withEvent:]
  -[JTTextEffectEditorTextView unmarkText]
  -[JTTextEffectEditorTextView textEditingFrame]
  -[JTTextEffectEditorTextView prefersMovingBeforeScalingWhenAvoidingKeyboardUI]
  -[JTTextEffectEditorTextView setPrefersMovingBeforeScalingWhenAvoidingKeyboardUI:]


JTFaceAnchor : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSSecureCoding>
 @property  {?=[4]} cameraTransform
 @property  {?=[4]} transform
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceRect
 @property  double focalLength
 @property  void screenRelativePosition
 @property  double rollAngle

  // class methods
  +[JTFaceAnchor supportsSecureCoding]
  +[JTFaceAnchor faceAnchorWithARFrame:forInterfaceOrientation:withFaceRectScaleFactor:]
  +[JTFaceAnchor CFX_transformFaceAnchor:withDegreeOfRotation:]
  +[JTFaceAnchor CFX_mirrorPoseTransformLeftRight:]
  +[JTFaceAnchor CFX_zyxEulerAnglesFromMatrix:]

  // instance methods
  -[JTFaceAnchor encodeWithCoder:]
  -[JTFaceAnchor initWithCoder:]
  -[JTFaceAnchor transform]
  -[JTFaceAnchor faceRect]
  -[JTFaceAnchor setFaceRect:]
  -[JTFaceAnchor rollAngle]
  -[JTFaceAnchor focalLength]
  -[JTFaceAnchor setFocalLength:]
  -[JTFaceAnchor setTransform:]
  -[JTFaceAnchor cameraTransform]
  -[JTFaceAnchor setCameraTransform:]
  -[JTFaceAnchor initWithTransform:forFaceRect:needsMirroring:withFaceRectScaleFactor:]
  -[JTFaceAnchor screenRelativePosition]
  -[JTFaceAnchor focalLengthForViewport:]


JTCompositionSettings : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  int timeScale
 @property  int frameRate
 @property  {CGSize=dd} frameSize
 @property  {CGSize=dd} renderSize

  // class methods
  +[JTCompositionSettings sharedInstance]

  // instance methods
  -[JTCompositionSettings init]
  -[JTCompositionSettings setQueue:]
  -[JTCompositionSettings queue]
  -[JTCompositionSettings .cxx_destruct]
  -[JTCompositionSettings setFrameSize:]
  -[JTCompositionSettings renderSize]
  -[JTCompositionSettings setRenderSize:]
  -[JTCompositionSettings timeScale]
  -[JTCompositionSettings setFrameRate:]
  -[JTCompositionSettings frameRate]
  -[JTCompositionSettings setTimeScale:]
  -[JTCompositionSettings frameSize]


JTEffectFrame : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  {?=qiIq} time
 @property  BOOL isPosterFrame
 @property  {CGPoint=dd} center
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} scale
 @property  double rotation
 @property  {CGSize=dd} relativeToSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} midpoint
 @property  {CGPoint=dd} trackedMidpoint
 @property  {CGPoint=dd} imagePoints0
 @property  {CGPoint=dd} imagePoints1
 @property  {CGPoint=dd} imagePoints2
 @property  {CGPoint=dd} imagePoints3
 @property  {CGPoint=dd} trackedImagePoints0
 @property  {CGPoint=dd} trackedImagePoints1
 @property  {CGPoint=dd} trackedImagePoints2
 @property  {CGPoint=dd} trackedImagePoints3
 @property  PCMatrix44Double *transform
 @property  PCMatrix44Double *objectTransform
 @property  PCMatrix44Double *clipTransform

  // instance methods
  -[JTEffectFrame init]
  -[JTEffectFrame .cxx_destruct]
  -[JTEffectFrame size]
  -[JTEffectFrame transform]
  -[JTEffectFrame scale]
  -[JTEffectFrame time]
  -[JTEffectFrame bounds]
  -[JTEffectFrame setBounds:]
  -[JTEffectFrame setSize:]
  -[JTEffectFrame center]
  -[JTEffectFrame setCenter:]
  -[JTEffectFrame setScale:]
  -[JTEffectFrame setTime:]
  -[JTEffectFrame setTransform:]
  -[JTEffectFrame rotation]
  -[JTEffectFrame setRotation:]
  -[JTEffectFrame midpoint]
  -[JTEffectFrame relativeToSize]
  -[JTEffectFrame setIsPosterFrame:]
  -[JTEffectFrame setRelativeToSize:]
  -[JTEffectFrame setMidpoint:]
  -[JTEffectFrame setTrackedMidpoint:]
  -[JTEffectFrame setImagePoints0:]
  -[JTEffectFrame setImagePoints1:]
  -[JTEffectFrame setImagePoints2:]
  -[JTEffectFrame setImagePoints3:]
  -[JTEffectFrame setTrackedImagePoints0:]
  -[JTEffectFrame setTrackedImagePoints1:]
  -[JTEffectFrame setTrackedImagePoints2:]
  -[JTEffectFrame setTrackedImagePoints3:]
  -[JTEffectFrame setObjectTransform:]
  -[JTEffectFrame setClipTransform:]
  -[JTEffectFrame isPosterFrame]
  -[JTEffectFrame trackedMidpoint]
  -[JTEffectFrame imagePoints0]
  -[JTEffectFrame imagePoints1]
  -[JTEffectFrame imagePoints2]
  -[JTEffectFrame imagePoints3]
  -[JTEffectFrame trackedImagePoints0]
  -[JTEffectFrame trackedImagePoints1]
  -[JTEffectFrame trackedImagePoints2]
  -[JTEffectFrame trackedImagePoints3]
  -[JTEffectFrame objectTransform]
  -[JTEffectFrame clipTransform]


CFXNonTransformedLiveCaptureContainerViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  UIView *liveCaptureContainer
 @property  UIView *liveCaptureContainerContainer
 @property  CFXLiveCaptureViewController *liveCaptureViewController

  // instance methods
  -[CFXNonTransformedLiveCaptureContainerViewController .cxx_destruct]
  -[CFXNonTransformedLiveCaptureContainerViewController viewDidLoad]
  -[CFXNonTransformedLiveCaptureContainerViewController prepareForSegue:sender:]
  -[CFXNonTransformedLiveCaptureContainerViewController liveCaptureViewController]
  -[CFXNonTransformedLiveCaptureContainerViewController liveCaptureContainer]
  -[CFXNonTransformedLiveCaptureContainerViewController liveCaptureContainerContainer]
  -[CFXNonTransformedLiveCaptureContainerViewController setLiveCaptureContainer:]
  -[CFXNonTransformedLiveCaptureContainerViewController setLiveCaptureContainerContainer:]


JTEffectsPreviewGenerator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *name

  // instance methods
  -[JTEffectsPreviewGenerator init]
  -[JTEffectsPreviewGenerator dealloc]
  -[JTEffectsPreviewGenerator name]
  -[JTEffectsPreviewGenerator .cxx_destruct]
  -[JTEffectsPreviewGenerator setName:]
  -[JTEffectsPreviewGenerator initWithRendererOptions:]
  -[JTEffectsPreviewGenerator trackStats:]
  -[JTEffectsPreviewGenerator _renderJob:completionHandler:]
  -[JTEffectsPreviewGenerator generatePreviewRequest:completionHandler:]
  -[JTEffectsPreviewGenerator perfLog]


SampleBufferRef : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  PVImageBuffer *backingPVImage

  // instance methods
  -[SampleBufferRef dealloc]
  -[SampleBufferRef .cxx_destruct]
  -[SampleBufferRef presentationTime]
  -[SampleBufferRef initWithSampleBuffer:]
  -[SampleBufferRef sampleBuffer]
  -[SampleBufferRef arFrame]
  -[SampleBufferRef initWithSampleBuffer:arFrame:]
  -[SampleBufferRef initWithSampleBuffer:faceAnchor:]
  -[SampleBufferRef faceAnchor]
  -[SampleBufferRef backingPVImage]
  -[SampleBufferRef setBackingPVImage:]


WriterReorderQ : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // instance methods
  -[WriterReorderQ init]
  -[WriterReorderQ .cxx_destruct]
  -[WriterReorderQ getReorderBuffer:]
  -[WriterReorderQ clearQueuedBuffer]


JTVideoWriter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSURL *url
 @property  NSString *fileType
 @property  NSDictionary *videoOutputSettings
 @property  NSDictionary *audioOutputSettings
 @property  NSDictionary *depthPixelBufferAttributes
 @property  BOOL wroteSessionStartTime
 @property  BOOL forInternalRecord
 @property  BOOL storeDepthDataAsVideoTrack
 @property  {?=ii} depthDimensions
 @property  <JTVideoWriterDelegate> *delegate
 @property  BOOL trackOutOfOrderVideoBuffers

  // class methods
  +[JTVideoWriter ARFrameMetadataTrackForAsset:]
  +[JTVideoWriter faceAnchorMetadataTrackForAsset:]
  +[JTVideoWriter JT_funcamCameraPositionMetadataIdentifier]
  +[JTVideoWriter JT_funcamCaptureInterfaceOrientationMetadataIdentifier]
  +[JTVideoWriter JT_arFrameMetadataIdentifier]
  +[JTVideoWriter JT_metadataAssetTrackFromAsset:metadataIdentifier:]
  +[JTVideoWriter JT_faceAnchorMetadataIdentifier]
  +[JTVideoWriter CreateCMSampleBufferForPVImageBuffer:timingInfo:]
  +[JTVideoWriter metadataForVideo:completion:]

  // instance methods
  -[JTVideoWriter delegate]
  -[JTVideoWriter setDelegate:]
  -[JTVideoWriter .cxx_destruct]
  -[JTVideoWriter fileType]
  -[JTVideoWriter url]
  -[JTVideoWriter startSessionAtSourceTime:]
  -[JTVideoWriter finishWritingWithCompletionHandler:]
  -[JTVideoWriter audioOutputSettings]
  -[JTVideoWriter videoOutputSettings]
  -[JTVideoWriter setDepthDimensions:]
  -[JTVideoWriter depthDimensions]
  -[JTVideoWriter writeCameraFrameSet:]
  -[JTVideoWriter writeAudioBuffer:]
  -[JTVideoWriter initWithURL:fileType:videoOutputSettings:audioOutputSettings:audioFormatHint:]
  -[JTVideoWriter setStoreDepthDataAsVideoTrack:]
  -[JTVideoWriter startWriter:]
  -[JTVideoWriter storeDepthDataAsVideoTrack]
  -[JTVideoWriter _canStart:]
  -[JTVideoWriter _setupWriter:]
  -[JTVideoWriter _setupVideoOutput:]
  -[JTVideoWriter _setupDepthOutput:]
  -[JTVideoWriter forInternalRecord]
  -[JTVideoWriter _setupFaceMetadataOutput:]
  -[JTVideoWriter _setupARFrameMetadata]
  -[JTVideoWriter _setupFaceAnchorMetadata]
  -[JTVideoWriter _setupAutoExposureMetadataOutput:]
  -[JTVideoWriter _setupAudioOutput:]
  -[JTVideoWriter trackOutOfOrderVideoBuffers]
  -[JTVideoWriter _startSessionAtSourceTime_noLock:]
  -[JTVideoWriter copyDepthBufferAsBGRA:]
  -[JTVideoWriter _writeDepthBuffer:]
  -[JTVideoWriter _writeFaceDetectMetadata:pts:]
  -[JTVideoWriter _writeVideoBuffer:]
  -[JTVideoWriter _writeDepthBufferForAVDepthData:withTimingInfo:]
  -[JTVideoWriter _writeMetadata:withTimingInfo:]
  -[JTVideoWriter _writeBuffer:type:arFrame:faceAnchor:]
  -[JTVideoWriter _writeBuffer:type:]
  -[JTVideoWriter JT_FunCamMetadata]
  -[JTVideoWriter _drainQueuedAudioBufferBeforeSessionStart_noLock]
  -[JTVideoWriter _writeARFrameMetadata:time:]
  -[JTVideoWriter _writeFaceAnchorMetadata:time:]
  -[JTVideoWriter _writeAutoExposureMetadata:]
  -[JTVideoWriter _queueAudioBufferBeforeSessionStart:]
  -[JTVideoWriter setForInternalRecord:]
  -[JTVideoWriter writeImageBuffer:timingInfo:]
  -[JTVideoWriter depthPixelBufferAttributes]
  -[JTVideoWriter wroteSessionStartTime]
  -[JTVideoWriter setTrackOutOfOrderVideoBuffers:]


JTCustomRenderProperties : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <PVCompositeDelegate> *renderingDelegate
 @property  id metadata
 @property  BOOL wantsPickerTapPoint

  // class methods
  +[JTCustomRenderProperties newCustomRenderProperties:metadata:]

  // instance methods
  -[JTCustomRenderProperties .cxx_destruct]
  -[JTCustomRenderProperties metadata]
  -[JTCustomRenderProperties renderingDelegate]
  -[JTCustomRenderProperties wantsPickerTapPoint]
  -[JTCustomRenderProperties setWantsPickerTapPoint:]


JTMovieCompositionItem : JTCompositionItem
 @property  AVAsset *asset
 @property  AVAsset *audioAssetOverwrite
 @property  int audioAssetOverwriteStartOffset

  // instance methods
  -[JTMovieCompositionItem .cxx_destruct]
  -[JTMovieCompositionItem asset]
  -[JTMovieCompositionItem setAsset:]
  -[JTMovieCompositionItem initWithClip:timeScale:]
  -[JTMovieCompositionItem audioAssetOverwrite]
  -[JTMovieCompositionItem speedRangesForSourceRange:destinationRange:]
  -[JTMovieCompositionItem segmentWithCharacteristic:sourceRange:destinationRange:]
  -[JTMovieCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[JTMovieCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[JTMovieCompositionItem audioAssetOverwriteStartOffset]
  -[JTMovieCompositionItem applySpeed:]
  -[JTMovieCompositionItem hasVideoContent]
  -[JTMovieCompositionItem needAudioLoop]
  -[JTMovieCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[JTMovieCompositionItem videoTrackSegmentsLoopedWithDestinationRange:]
  -[JTMovieCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[JTMovieCompositionItem audioTrackSegmentsLoopedWithDestinationTime:]
  -[JTMovieCompositionItem setAudioAssetOverwrite:]
  -[JTMovieCompositionItem setAudioAssetOverwriteStartOffset:]


CFXCameraControlsViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  UIView *effectButtonContainerPad
 @property  UIView *shutterButtonContainerPad
 @property  UIView *flipButtonContainerPad
 @property  UIView *backgroundView
 @property  UIView *bottomBlackView
 @property  UIView *appStripBackgroundView
 @property  UIView *appStripBackgroundContainerView
 @property  NSLayoutConstraint *backgroundViewHeightConstraint
 @property  NSLayoutConstraint *bottomBlackViewHeightConstraint
 @property  NSLayoutConstraint *bottomBlackViewTopConstraint
 @property  NSLayoutConstraint *bottomBlackViewWidthConstraint
 @property  NSLayoutConstraint *bottomBlackViewTrailingConstraint
 @property  NSLayoutConstraint *appStripBackgroundContainerViewTopConstraint
 @property  NSLayoutConstraint *appStripBackgroundContainerViewBottomConstraint
 @property  NSLayoutConstraint *appStripBackgroundContainerViewHeightConstraint
 @property  NSLayoutConstraint *appStripBackgroundContainerViewLeadingConstraint
 @property  NSLayoutConstraint *appStripBackgroundContainerViewTrailingConstraint
 @property  CFXFeedbackController *feedbackController
 @property  long long captureMode
 @property  CAMBottomBar *bottomBar
 @property  CUShutterButton *shutterButton
 @property  BOOL dockIsMagnified
 @property  double dockMagnifiedHeightDelta
 @property  CAMCreativeCameraButton *effectButton
 @property  CAMFlipButton *flipButton
 @property  <CFXCameraControlsViewControllerDelegate> *delegate
 @property  UIColor *backgroundColor

  // instance methods
  -[CFXCameraControlsViewController init]
  -[CFXCameraControlsViewController delegate]
  -[CFXCameraControlsViewController setDelegate:]
  -[CFXCameraControlsViewController .cxx_destruct]
  -[CFXCameraControlsViewController observeValueForKeyPath:ofObject:change:context:]
  -[CFXCameraControlsViewController backgroundColor]
  -[CFXCameraControlsViewController setBackgroundColor:]
  -[CFXCameraControlsViewController backgroundView]
  -[CFXCameraControlsViewController viewWillAppear:]
  -[CFXCameraControlsViewController viewDidLoad]
  -[CFXCameraControlsViewController viewWillLayoutSubviews]
  -[CFXCameraControlsViewController viewDidAppear:]
  -[CFXCameraControlsViewController viewDidDisappear:]
  -[CFXCameraControlsViewController setBackgroundView:]
  -[CFXCameraControlsViewController shutterButton]
  -[CFXCameraControlsViewController setCaptureMode:]
  -[CFXCameraControlsViewController setShutterButton:]
  -[CFXCameraControlsViewController setBottomBar:]
  -[CFXCameraControlsViewController bottomBar]
  -[CFXCameraControlsViewController feedbackController]
  -[CFXCameraControlsViewController setFeedbackController:]
  -[CFXCameraControlsViewController flipButton]
  -[CFXCameraControlsViewController setFlipButton:]
  -[CFXCameraControlsViewController captureMode]
  -[CFXCameraControlsViewController initWithDelegate:captureMode:]
  -[CFXCameraControlsViewController configureUIForOrientation]
  -[CFXCameraControlsViewController setShutterButtonAlpha:]
  -[CFXCameraControlsViewController updateUIForDockMagnify:dockHeightDelta:]
  -[CFXCameraControlsViewController updateUIForVideoRecording:]
  -[CFXCameraControlsViewController setEffectButton:]
  -[CFXCameraControlsViewController effectButton]
  -[CFXCameraControlsViewController effectsButtonTapped:]
  -[CFXCameraControlsViewController shutterButtonTapped:]
  -[CFXCameraControlsViewController switchCameraButtonTapped:]
  -[CFXCameraControlsViewController bottomBlackView]
  -[CFXCameraControlsViewController appStripBackgroundView]
  -[CFXCameraControlsViewController setAppStripBackgroundView:]
  -[CFXCameraControlsViewController appStripBackgroundContainerView]
  -[CFXCameraControlsViewController CFX_smallPhoneDockHeightAdjustment]
  -[CFXCameraControlsViewController dockIsMagnified]
  -[CFXCameraControlsViewController appStripBackgroundContainerViewTopConstraint]
  -[CFXCameraControlsViewController appStripBackgroundContainerViewHeightConstraint]
  -[CFXCameraControlsViewController appStripBackgroundContainerViewBottomConstraint]
  -[CFXCameraControlsViewController appStripBackgroundContainerViewLeadingConstraint]
  -[CFXCameraControlsViewController appStripBackgroundContainerViewTrailingConstraint]
  -[CFXCameraControlsViewController setDockIsMagnified:]
  -[CFXCameraControlsViewController setDockMagnifiedHeightDelta:]
  -[CFXCameraControlsViewController setShutterButtonEnabled:]
  -[CFXCameraControlsViewController effectButtonContainerPad]
  -[CFXCameraControlsViewController setEffectButtonContainerPad:]
  -[CFXCameraControlsViewController shutterButtonContainerPad]
  -[CFXCameraControlsViewController setShutterButtonContainerPad:]
  -[CFXCameraControlsViewController flipButtonContainerPad]
  -[CFXCameraControlsViewController setFlipButtonContainerPad:]
  -[CFXCameraControlsViewController setBottomBlackView:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerView:]
  -[CFXCameraControlsViewController backgroundViewHeightConstraint]
  -[CFXCameraControlsViewController setBackgroundViewHeightConstraint:]
  -[CFXCameraControlsViewController bottomBlackViewHeightConstraint]
  -[CFXCameraControlsViewController setBottomBlackViewHeightConstraint:]
  -[CFXCameraControlsViewController bottomBlackViewTopConstraint]
  -[CFXCameraControlsViewController setBottomBlackViewTopConstraint:]
  -[CFXCameraControlsViewController bottomBlackViewWidthConstraint]
  -[CFXCameraControlsViewController setBottomBlackViewWidthConstraint:]
  -[CFXCameraControlsViewController bottomBlackViewTrailingConstraint]
  -[CFXCameraControlsViewController setBottomBlackViewTrailingConstraint:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerViewTopConstraint:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerViewBottomConstraint:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerViewHeightConstraint:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerViewLeadingConstraint:]
  -[CFXCameraControlsViewController setAppStripBackgroundContainerViewTrailingConstraint:]
  -[CFXCameraControlsViewController dockMagnifiedHeightDelta]


JTAutoPurgeDictionary : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long count
 @property  BOOL suspendPurging
 @property  <JTAutoPurgeDictionaryDelegate> *delegate

  // instance methods
  -[JTAutoPurgeDictionary init]
  -[JTAutoPurgeDictionary dealloc]
  -[JTAutoPurgeDictionary count]
  -[JTAutoPurgeDictionary removeAllObjects]
  -[JTAutoPurgeDictionary objectForKey:]
  -[JTAutoPurgeDictionary delegate]
  -[JTAutoPurgeDictionary setDelegate:]
  -[JTAutoPurgeDictionary setObject:forKey:]
  -[JTAutoPurgeDictionary .cxx_destruct]
  -[JTAutoPurgeDictionary addEntriesFromDictionary:]
  -[JTAutoPurgeDictionary highMemoryWarning]
  -[JTAutoPurgeDictionary suspendPurging]
  -[JTAutoPurgeDictionary copyOfDictionary]
  -[JTAutoPurgeDictionary setSuspendPurging:]


EditListCompositionState : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  JTCompositionTrackGroup *currentTrackGroup
 @property  JTCompositionTrackGroup *alternateTrackGroup
 @property  JTClip *clip
 @property  int overlapLeft
 @property  int overlapRight
 @property  BOOL isLastClip
 @property  BOOL clipRequiresCA
 @property  {?={?=qiIq}{?=qiIq}} videoCompTimeRange
 @property  {?={?=qiIq}{?=qiIq}} audioCompTimeRange
 @property  int audioStartOffset
 @property  int audioEndOffset

  // instance methods
  -[EditListCompositionState .cxx_destruct]
  -[EditListCompositionState clip]
  -[EditListCompositionState setClip:]
  -[EditListCompositionState audioStartOffset]
  -[EditListCompositionState audioEndOffset]
  -[EditListCompositionState currentTrackGroup]
  -[EditListCompositionState alternateTrackGroup]
  -[EditListCompositionState setCurrentTrackGroup:]
  -[EditListCompositionState setAlternateTrackGroup:]
  -[EditListCompositionState swapTrackGroup]
  -[EditListCompositionState overlapLeft]
  -[EditListCompositionState setOverlapLeft:]
  -[EditListCompositionState overlapRight]
  -[EditListCompositionState setOverlapRight:]
  -[EditListCompositionState isLastClip]
  -[EditListCompositionState setIsLastClip:]
  -[EditListCompositionState clipRequiresCA]
  -[EditListCompositionState setClipRequiresCA:]
  -[EditListCompositionState videoCompTimeRange]
  -[EditListCompositionState setVideoCompTimeRange:]
  -[EditListCompositionState audioCompTimeRange]
  -[EditListCompositionState setAudioCompTimeRange:]
  -[EditListCompositionState setAudioStartOffset:]
  -[EditListCompositionState setAudioEndOffset:]


JTComposition : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  AVPlayerItem *playerItem
 @property  AVMutableComposition *avComposition
 @property  AVMutableVideoComposition *videoComposition
 @property  AVMutableAudioMix *audioMix
 @property  {?=qiIq} duration
 @property  AVPlayerItem *avPlayerItem
 @property  JTCompositionTrackGroup *trackGroupA
 @property  JTCompositionTrackGroup *trackGroupB
 @property  NSMutableArray *backgroundAudioTracks
 @property  NSMutableArray *foregroundAudioTracks
 @property  NSMutableArray *audioMixParameters
 @property  <JTCompositionClipsDataSource> *clipsDataSource
 @property  NSMutableArray *videoCompositionInstructions
 @property  {CGSize=dd} previousRenderSize
 @property  long long backgroundAudioTrackCount
 @property  long long foregroundAudioTrackCount
 @property  BOOL needsUpdate
 @property  JTClip *liveTransformClip
 @property  {PVTransformAnimationInfo={?=qiIq}{CGPoint=dd}dd} liveCompositionTransform
 @property  NSMutableDictionary *assetsUsed
 @property  float globalAudioVolume
 @property  JTCompositionDuckingTimes *compositionDuckingTimes
 @property  {CGSize=dd} viewSize

  // instance methods
  -[JTComposition dealloc]
  -[JTComposition .cxx_destruct]
  -[JTComposition duration]
  -[JTComposition needsUpdate]
  -[JTComposition update]
  -[JTComposition setDuration:]
  -[JTComposition setViewSize:]
  -[JTComposition viewSize]
  -[JTComposition validate]
  -[JTComposition setNeedsUpdate:]
  -[JTComposition setAudioMix:]
  -[JTComposition videoComposition]
  -[JTComposition setVideoComposition:]
  -[JTComposition audioMix]
  -[JTComposition playerItem]
  -[JTComposition setPlayerItem:]
  -[JTComposition avPlayerItem]
  -[JTComposition setAvPlayerItem:]
  -[JTComposition playerItemDidReachEnd:]
  -[JTComposition clipsDataSource]
  -[JTComposition initWithClipsDataSource:]
  -[JTComposition markDirty]
  -[JTComposition applyPlayerItemProperties]
  -[JTComposition noteEffectChangeForClip:]
  -[JTComposition useLiveTransformForClip:]
  -[JTComposition updateLiveTransformForClip:]
  -[JTComposition setClipsDataSource:]
  -[JTComposition previousRenderSize]
  -[JTComposition JT_preferredRenderScale]
  -[JTComposition setAvComposition:]
  -[JTComposition setVideoCompositionInstructions:]
  -[JTComposition setAudioMixParameters:]
  -[JTComposition setBackgroundAudioTracks:]
  -[JTComposition avComposition]
  -[JTComposition backgroundAudioTracks]
  -[JTComposition setForegroundAudioTracks:]
  -[JTComposition foregroundAudioTracks]
  -[JTComposition setTrackGroupA:]
  -[JTComposition trackGroupA]
  -[JTComposition setTrackGroupB:]
  -[JTComposition trackGroupB]
  -[JTComposition setGlobalAudioVolume:]
  -[JTComposition setAssetsUsed:]
  -[JTComposition setPreviousRenderSize:]
  -[JTComposition setLiveTransformClip:]
  -[JTComposition setLiveCompositionTransform:]
  -[JTComposition audioMixParameters]
  -[JTComposition videoCompositionInstructions]
  -[JTComposition assetsUsed]
  -[JTComposition clipIsForegroundAudio:]
  -[JTComposition globalAudioVolume]
  -[JTComposition newInstructionGraphNodeForClip:clipTransform:compositionTrackID:requiresTweening:isContainedClip:]
  -[JTComposition clipTransform:]
  -[JTComposition instructionToShowClip:withTrackID:withTransform:timeRange:requiresCARendering:]
  -[JTComposition volumeForClip:]
  -[JTComposition instructionToShowImageWithClip:withTransform:timeRange:requiresCARendering:]
  -[JTComposition makeAudioPointsArrayForClip:shouldUseDuckingArrays:]
  -[JTComposition sourceTimeRangeForClip:endOfComposition:projectStartTime:]
  -[JTComposition assetUsed:]
  -[JTComposition addVolumeRampToTrackGroup:forClip:shouldUseDucking:]
  -[JTComposition sourceTimeRangeForAudioClip:endOfComposition:]
  -[JTComposition assembleAudioCompositionTrackGroups:audioItem:clip:shouldUseDucking:shouldLoopClipContents:]
  -[JTComposition writeVolumeRampToCompositionFromTrackGroup:endOfComposition:]
  -[JTComposition clipHasEnabledVoiceover:]
  -[JTComposition emptySegments:]
  -[JTComposition removeTrackFromAudioMix:]
  -[JTComposition removeTrackIfEmpty:]
  -[JTComposition logRemovedTrack:trackID:]
  -[JTComposition setRenderScale]
  -[JTComposition logAddedTrack:trackID:]
  -[JTComposition buildClipList]
  -[JTComposition foregroundAudioClips:]
  -[JTComposition addBackTracksIfRemoved]
  -[JTComposition updateCustomRendererMapForClip:]
  -[JTComposition CARenderingRequiredForClip:]
  -[JTComposition compositionItemsForState:compositionItem:backfillCompositionItem:]
  -[JTComposition updateVideoAndAudioInstructionForState:previousInstructions:waitingForResource:]
  -[JTComposition dissolveGraphNode:from:to:]
  -[JTComposition burnInPlaybackSettings:]
  -[JTComposition instructionToHideTrackID:whileHidingTrackID:timeRange:requiresCARendering:]
  -[JTComposition updateBackgroundAudioCompositionTracks:]
  -[JTComposition updateForegroundAudioCompositionTracks:withClips:]
  -[JTComposition setCompositionDuckingTimes:]
  -[JTComposition animojiCustomRendererPropsForClip:currentCustomProperties:]
  -[JTComposition faceTrackingCustomRendererPropsForClip:currentCustomProperties:]
  -[JTComposition rebuildCompositionInstructionsForVideoStillTitleCard:]
  -[JTComposition liveTransformClip]
  -[JTComposition removeEmptyTracks]
  -[JTComposition updateRenderSizeIfNeeded]
  -[JTComposition refreshAVComposition]
  -[JTComposition finalizeVideoComposition]
  -[JTComposition setupVideoCompositionContext:]
  -[JTComposition timeRangeForClip:]
  -[JTComposition refreshCompositionInstructionsWithinRange:]
  -[JTComposition outputFrameRate]
  -[JTComposition naturalSizeForClipAfterTransform:]
  -[JTComposition addAudioPointsToArray:atFrameTime:volume:]
  -[JTComposition AVComposition]
  -[JTComposition applyExportProperties]
  -[JTComposition clearPlayerItemProperties]
  -[JTComposition refreshEffectParameters:]
  -[JTComposition compositionDuckingTimes]
  -[JTComposition backgroundAudioTrackCount]
  -[JTComposition setBackgroundAudioTrackCount:]
  -[JTComposition foregroundAudioTrackCount]
  -[JTComposition setForegroundAudioTrackCount:]
  -[JTComposition liveCompositionTransform]


JTMotionData : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CMMotionManager *motionManager
 @property  NSOperationQueue *motionQueue
 @property  CMAttitude *refAttitude
 @property  {?=dddd} currentAttitude
 @property  double yawRadians
 @property  double rollRadians
 @property  double pitchRadians
 @property  BOOL started

  // class methods
  +[JTMotionData sharedInstance]

  // instance methods
  -[JTMotionData init]
  -[JTMotionData .cxx_destruct]
  -[JTMotionData started]
  -[JTMotionData setStarted:]
  -[JTMotionData currentOrientation]
  -[JTMotionData motionManager]
  -[JTMotionData setMotionManager:]
  -[JTMotionData yawRadians]
  -[JTMotionData rollRadians]
  -[JTMotionData pitchRadians]
  -[JTMotionData setYawRadians:]
  -[JTMotionData setPitchRadians:]
  -[JTMotionData setRollRadians:]
  -[JTMotionData startMotion]
  -[JTMotionData stopMotion]
  -[JTMotionData setMotionQueue:]
  -[JTMotionData motionQueue]
  -[JTMotionData getOrientation:]
  -[JTMotionData setCurrentAttitude:]
  -[JTMotionData syntheticOrientation]
  -[JTMotionData refAttitude]
  -[JTMotionData setRefAttitude:]
  -[JTMotionData currentAttitude]


JTTrackedEffectProperties : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying, NSSecureCoding>
 @property  int internalTrackingType
 @property  BOOL disableTracking
 @property  int trackingType

  // class methods
  +[JTTrackedEffectProperties supportsSecureCoding]

  // instance methods
  -[JTTrackedEffectProperties init]
  -[JTTrackedEffectProperties copyWithZone:]
  -[JTTrackedEffectProperties encodeWithCoder:]
  -[JTTrackedEffectProperties initWithCoder:]
  -[JTTrackedEffectProperties trackingType]
  -[JTTrackedEffectProperties setTrackingType:]
  -[JTTrackedEffectProperties setDisableTracking:]
  -[JTTrackedEffectProperties setInternalTrackingType:]
  -[JTTrackedEffectProperties isTrackingDisabled]
  -[JTTrackedEffectProperties internalTrackingType]
  -[JTTrackedEffectProperties enableTrackingState:]


CFXPreviewViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXEffectEditorViewDelegate, CFXFullScreenTextEditViewControllerDelegate, JTClipSequenceDisplayViewControllerDelegate, ExportDelegate, CFXPlayButtonViewDelegate, UIViewWindowListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *playerContainerView
 @property  UIView *appStripAndPreviewControlsContainer
 @property  UIButton *exportButton
 @property  NSLayoutConstraint *previewControlsContainerHeightConstraint
 @property  NSLayoutConstraint *previewControlsContainerWidthConstraint
 @property  NSLayoutConstraint *previewControlsContainerTrailingConstraint
 @property  NSLayoutConstraint *previewControlsContainerLeadingConstraint
 @property  NSLayoutConstraint *previewControlsContainerTopConstraint
 @property  BOOL userInterfaceHidden
 @property  BOOL saveMediaItemToFunCamPhotosAlbumUponExport
 @property  unsigned long appliedDirectOverlayEditingGestures
 @property  UIView *bottomControlsDrawer
 @property  BOOL dockIsMagnified
 @property  double dockMagnifiedHeightDelta
 @property  CFXEffectBrowserContentPresenterViewController *effectBrowserContentPresenterViewController
 @property  UIView *previewControlsContainerView
 @property  CFXPlayButtonView *playButton
 @property  CFXMediaItem *mediaItem
 @property  JTClip *previewClip
 @property  CFXClipPlayerViewController *previewPlayer
 @property  JTClipSequenceExporter *exporter
 @property  JTEffectsPreviewGenerator *stillImagePreviewGenerator
 @property  CFXEffectEditorView *effectEditor
 @property  {?=dd} normalizedMinimumHitTestArea
 @property  <CFXPreviewViewControllerDelegate> *delegate
 @property  UIView *effectsPickerDrawer
 @property  BOOL presentingFilterPicker
 @property  BOOL capturedWithBackCamera
 @property  CFXControlsViewController *previewControls
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXPreviewViewController setLiveCaptureSnapshotView:]
  +[CFXPreviewViewController liveCaptureSnapshotView]

  // instance methods
  -[CFXPreviewViewController delegate]
  -[CFXPreviewViewController setDelegate:]
  -[CFXPreviewViewController .cxx_destruct]
  -[CFXPreviewViewController observeValueForKeyPath:ofObject:change:context:]
  -[CFXPreviewViewController viewWillAppear:]
  -[CFXPreviewViewController viewDidLoad]
  -[CFXPreviewViewController viewDidLayoutSubviews]
  -[CFXPreviewViewController viewDidAppear:]
  -[CFXPreviewViewController viewDidDisappear:]
  -[CFXPreviewViewController prepareForSegue:sender:]
  -[CFXPreviewViewController exporter]
  -[CFXPreviewViewController mediaItem]
  -[CFXPreviewViewController setMediaItem:]
  -[CFXPreviewViewController playButton]
  -[CFXPreviewViewController setPlayButton:]
  -[CFXPreviewViewController playbackDidStart:]
  -[CFXPreviewViewController exportMediaItemToFileURL:]
  -[CFXPreviewViewController setEffectsPickerDrawer:]
  -[CFXPreviewViewController effectBrowserContentPresenterViewController]
  -[CFXPreviewViewController effectsPickerDrawer]
  -[CFXPreviewViewController configureUIForOrientation]
  -[CFXPreviewViewController addOverlayEffect:atScreenLocation:atScreenSize:rotationAngle:]
  -[CFXPreviewViewController addEffect:]
  -[CFXPreviewViewController updateUIForDockMagnify:dockHeightDelta:]
  -[CFXPreviewViewController playbackDidStop:currentTime:]
  -[CFXPreviewViewController normalizedMinimumHitTestArea]
  -[CFXPreviewViewController dockIsMagnified]
  -[CFXPreviewViewController setDockIsMagnified:]
  -[CFXPreviewViewController setDockMagnifiedHeightDelta:]
  -[CFXPreviewViewController dockMagnifiedHeightDelta]
  -[CFXPreviewViewController shouldExportOnly]
  -[CFXPreviewViewController exportButton]
  -[CFXPreviewViewController playerContainerView]
  -[CFXPreviewViewController previewClip]
  -[CFXPreviewViewController CFX_setFrameAndRenderSizes]
  -[CFXPreviewViewController previewPlayer]
  -[CFXPreviewViewController setPlayButtonHiddenIfPossible:]
  -[CFXPreviewViewController CFX_setEffectAnimationsEnabledIfPossible:]
  -[CFXPreviewViewController previewControlsContainerHeightConstraint]
  -[CFXPreviewViewController setAppliedDirectOverlayEditingGestures:]
  -[CFXPreviewViewController previewControls]
  -[CFXPreviewViewController previewControlsContainerTopConstraint]
  -[CFXPreviewViewController previewControlsContainerWidthConstraint]
  -[CFXPreviewViewController previewControlsContainerLeadingConstraint]
  -[CFXPreviewViewController previewControlsContainerTrailingConstraint]
  -[CFXPreviewViewController bottomControlsDrawer]
  -[CFXPreviewViewController configureBottomControlsForOrientation]
  -[CFXPreviewViewController setPreviewPlayer:]
  -[CFXPreviewViewController setPreviewControls:]
  -[CFXPreviewViewController setBottomControlsDrawer:]
  -[CFXPreviewViewController appStripAndPreviewControlsContainer]
  -[CFXPreviewViewController previewControlsContainerView]
  -[CFXPreviewViewController shouldUseFaceTracking]
  -[CFXPreviewViewController CFX_addEffect:]
  -[CFXPreviewViewController removeEffectEditor]
  -[CFXPreviewViewController presentFullScreenTextEditorForEffect:insertingEffect:]
  -[CFXPreviewViewController setStillImagePreviewGenerator:]
  -[CFXPreviewViewController stillImagePreviewGenerator]
  -[CFXPreviewViewController CFX_saveImageToURL:image:compressionQuality:asHEIF:metadata:]
  -[CFXPreviewViewController CFX_notifyDelegateExportMediaItemFinishedWithError:]
  -[CFXPreviewViewController setSaveMediaItemToFunCamPhotosAlbumUponExport:]
  -[CFXPreviewViewController CFX_setIsExporting:]
  -[CFXPreviewViewController CFX_setEffectAnimationsEnabledIfPossible:updatePlayer:]
  -[CFXPreviewViewController exportStillImageWithEffects]
  -[CFXPreviewViewController setExporter:]
  -[CFXPreviewViewController CFX_hidePreviewUI]
  -[CFXPreviewViewController CFX_showPreviewUI]
  -[CFXPreviewViewController displayEffectEditorForEffect:forMode:]
  -[CFXPreviewViewController CFX_togglePreviewUI]
  -[CFXPreviewViewController appliedDirectOverlayEditingGestures]
  -[CFXPreviewViewController effectEditor]
  -[CFXPreviewViewController isEditingEffect]
  -[CFXPreviewViewController setEffectEditor:]
  -[CFXPreviewViewController playerContentFrame]
  -[CFXPreviewViewController CFX_layoutPlayerContainerView]
  -[CFXPreviewViewController isPresentingFilterPicker]
  -[CFXPreviewViewController shouldKeepPlayButtonHidden]
  -[CFXPreviewViewController userInterfaceIsHidden]
  -[CFXPreviewViewController setUserInterfaceHidden:]
  -[CFXPreviewViewController updateEffectEditorLayout]
  -[CFXPreviewViewController updateFullScreenTextEditorLayout]
  -[CFXPreviewViewController saveMediaItemToFunCamPhotosAlbumUponExport]
  -[CFXPreviewViewController CFX_addURLToCameraRoll:isStill:completionHandler:]
  -[CFXPreviewViewController capturedWithBackCamera]
  -[CFXPreviewViewController CFX_addAssetWithIdentifier:intoAlbum:completionHandler:]
  -[CFXPreviewViewController CFX_addAssetAtURL:resourceType:completionHandler:]
  -[CFXPreviewViewController CFX_createAlbumWithCompletionHandler:]
  -[CFXPreviewViewController CFX_fetchAssetWithLocalIdentifier:]
  -[CFXPreviewViewController playbackAreaTapped:normalizedClipPoint:atTime:]
  -[CFXPreviewViewController playbackAreaPanned:gesture:normalizedClipPoint:translationDelta:atTime:timeScale:]
  -[CFXPreviewViewController playbackAreaPinched:gesture:normalizedClipPoints:normalizedCenterPoint:scaleDelta:atTime:timeScale:]
  -[CFXPreviewViewController playbackAreaRotated:gesture:normalizedClipPoints:normalizedCenterPoint:rotateDelta:atTime:]
  -[CFXPreviewViewController playbackAreaDoubleTapped:]
  -[CFXPreviewViewController animationDurationForCompositionTransition:shouldScale:]
  -[CFXPreviewViewController didFinishExport:]
  -[CFXPreviewViewController exportProgressedTo:]
  -[CFXPreviewViewController playButtonViewDidTapPlay:]
  -[CFXPreviewViewController playButtonViewDidTapPause:]
  -[CFXPreviewViewController view:willMoveToWindow:]
  -[CFXPreviewViewController setPresentingFilterPicker:]
  -[CFXPreviewViewController exportButtonTapped:]
  -[CFXPreviewViewController filterPickerPreviewBackgroundImageAtSizeInPixels:completion:]
  -[CFXPreviewViewController bottomControlsSnapshot]
  -[CFXPreviewViewController hideBottomControls]
  -[CFXPreviewViewController showBottomControls]
  -[CFXPreviewViewController bottomControlsBounds]
  -[CFXPreviewViewController bottomControlsCenter]
  -[CFXPreviewViewController setCapturedWithBackCamera:]
  -[CFXPreviewViewController setPlayerContainerView:]
  -[CFXPreviewViewController setAppStripAndPreviewControlsContainer:]
  -[CFXPreviewViewController setExportButton:]
  -[CFXPreviewViewController setPreviewControlsContainerHeightConstraint:]
  -[CFXPreviewViewController setPreviewControlsContainerWidthConstraint:]
  -[CFXPreviewViewController setPreviewControlsContainerTrailingConstraint:]
  -[CFXPreviewViewController setPreviewControlsContainerLeadingConstraint:]
  -[CFXPreviewViewController setPreviewControlsContainerTopConstraint:]
  -[CFXPreviewViewController setEffectBrowserContentPresenterViewController:]
  -[CFXPreviewViewController setPreviewControlsContainerView:]
  -[CFXPreviewViewController fullScreenTextEditViewController:didBeginEditingEffect:]
  -[CFXPreviewViewController fullScreenTextEditViewController:didFinishEditingEffect:withUpdatedText:]
  -[CFXPreviewViewController fullScreenTextEditViewController:didFinishEditingByRemovingEffect:]
  -[CFXPreviewViewController fullScreenTextEditViewController:willBeginAnimationBeforeEditingEffect:]
  -[CFXPreviewViewController fullScreenTextEditViewController:didBeginAnimationBeforeEditingEffect:completion:]
  -[CFXPreviewViewController fullScreenTextEditViewController:willBeginAnimationAfterEditingEffect:updatedText:]
  -[CFXPreviewViewController fullScreenTextEditViewController:didFinishAnimationAfterEditingEffect:completion:]
  -[CFXPreviewViewController effectEditorView:effectAtPoint:]
  -[CFXPreviewViewController effectEditorView:isEffectAtPoint:effect:]
  -[CFXPreviewViewController effectEditorView:frameForEffect:relativeToBounds:includeTracking:adjustForMinimumHitTestArea:]
  -[CFXPreviewViewController effectEditorView:viewInfoForEffect:relativeToBounds:]
  -[CFXPreviewViewController effectEditorView:removeButtonPositionForEffect:relativeToBounds:]
  -[CFXPreviewViewController effectEditorViewDidBeginEditing:]
  -[CFXPreviewViewController effectEditorView:spacingBetweenCenterPointOfEffect:point:relativeToBounds:]
  -[CFXPreviewViewController effectEditorView:didTransformEffect:transform:relativeToBounds:]
  -[CFXPreviewViewController effectEditorView:shouldEditTextForEffect:]
  -[CFXPreviewViewController effectEditorView:didBeginEditingTextForEffect:]
  -[CFXPreviewViewController effectEditorView:textEditingPropertiesForEffect:relativeToBounds:displayScale:]
  -[CFXPreviewViewController effectEditorView:textForEffect:]
  -[CFXPreviewViewController effectEditorView:didEditTextForEffect:newText:]
  -[CFXPreviewViewController effectEditorView:didEndEditingTextForEffect:wasCancelled:]
  -[CFXPreviewViewController effectEditorView:didRemoveEffect:]
  -[CFXPreviewViewController effectEditorViewDidEndEditing:]
  -[CFXPreviewViewController effectEditorView:didEndEditingByTappingOutSideEffectAtScreenPoint:]
  -[CFXPreviewViewController effectEditorView:didMoveEffect:withTouchPoint:withTransform:]
  -[CFXPreviewViewController effectEditorView:presentCustomTextEditingUI:]
  -[CFXPreviewViewController effectEditorView:maximumTextLengthForEffect:]
  -[CFXPreviewViewController effectEditorViewShouldShowFaceReticle:]
  -[CFXPreviewViewController CFX_previewPlayerCurrentTime]
  -[CFXPreviewViewController dispatchWhenPlayerReadyForDisplayEffectUpdate:]


UIViewWindowNotifier : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  <UIViewWindowListener> *windowListener

  // instance methods
  -[UIViewWindowNotifier .cxx_destruct]
  -[UIViewWindowNotifier willMoveToWindow:]
  -[UIViewWindowNotifier windowListener]
  -[UIViewWindowNotifier setWindowListener:]


JTInstrucionGraphBuilder : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  {CGSize=dd} outputSize
 @property  int renderingIntent
 @property  int timeScale

  // instance methods
  -[JTInstrucionGraphBuilder setOutputSize:]
  -[JTInstrucionGraphBuilder outputSize]
  -[JTInstrucionGraphBuilder timeScale]
  -[JTInstrucionGraphBuilder setTimeScale:]
  -[JTInstrucionGraphBuilder initWithOutputSize:]
  -[JTInstrucionGraphBuilder setRenderingIntent:]
  -[JTInstrucionGraphBuilder instructionGraphForJTClip:presentationTimeRange:sourceTransform:compositionTrackID:liveTransform:excludingEffectType:customRendererProperties:]
  -[JTInstrucionGraphBuilder _sourceNodeForVideoMediaItem:sourceTransform:compositionTrackID:transformAnimation:]
  -[JTInstrucionGraphBuilder _sourceNodeForStillMediaItem:sourceTransform:transformAnimation:presentationRange:]
  -[JTInstrucionGraphBuilder applyEffectStack:presentationRange:toInput:]
  -[JTInstrucionGraphBuilder applyTrackedEffects:presentationRange:renderDelegate:transform:metadata:toInput:]
  -[JTInstrucionGraphBuilder sourceNodeForMediaItem:sourceTransform:compositionTrackID:transformAnimation:presentationTimeRange:]
  -[JTInstrucionGraphBuilder JT_calculateCompositeNodeTransformForCrop]
  -[JTInstrucionGraphBuilder blendNodeForClipSourceNodes:]
  -[JTInstrucionGraphBuilder aggregateAndApplyTrackableEffects:presentationRange:renderDelegate:transform:metadata:toInput:]
  -[JTInstrucionGraphBuilder sourceNodeForImageBuffer:sourceTransform:]
  -[JTInstrucionGraphBuilder sourceNodeForGeneratorEffect:effectRange:]
  -[JTInstrucionGraphBuilder applyEffectStack:toInput:]
  -[JTInstrucionGraphBuilder arSelfieEffectNode:inputNode:maskNode:bgImageNodes:]
  -[JTInstrucionGraphBuilder _buildTestXFormAnimation:baseTransform:clipNaturalSize:]
  -[JTInstrucionGraphBuilder renderingIntent]


JTCompositionClipDataSource : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <JTCompositionClipsDataSource>
 @property  BOOL dontRenderLiveTitles
 @property  BOOL duckAllAudioClips
 @property  JTClip *clip
 @property  JTAudioClip *backgroundAudioClip
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTCompositionClipDataSource .cxx_destruct]
  -[JTCompositionClipDataSource duration]
  -[JTCompositionClipDataSource clip]
  -[JTCompositionClipDataSource imageScale]
  -[JTCompositionClipDataSource naturalSize]
  -[JTCompositionClipDataSource isFullScreen]
  -[JTCompositionClipDataSource setClip:]
  -[JTCompositionClipDataSource supportsDeepColor]
  -[JTCompositionClipDataSource timeScale]
  -[JTCompositionClipDataSource frameRate]
  -[JTCompositionClipDataSource currentClip]
  -[JTCompositionClipDataSource clipCount]
  -[JTCompositionClipDataSource clipAtIndex:]
  -[JTCompositionClipDataSource screenCanShow2160P]
  -[JTCompositionClipDataSource isExporting]
  -[JTCompositionClipDataSource containsEffectsThatRequireCustomRendering]
  -[JTCompositionClipDataSource use2160Pcontent:]
  -[JTCompositionClipDataSource duckAllAudioClips]
  -[JTCompositionClipDataSource backgroundAudioClip]
  -[JTCompositionClipDataSource fullScreenPlaybackOnExternalDisplay]
  -[JTCompositionClipDataSource dontRenderLiveTitles]
  -[JTCompositionClipDataSource indexOfClip:]
  -[JTCompositionClipDataSource initWithClip:backgroundAudioClip:]
  -[JTCompositionClipDataSource setDontRenderLiveTitles:]
  -[JTCompositionClipDataSource setDuckAllAudioClips:]
  -[JTCompositionClipDataSource setBackgroundAudioClip:]


JTClipPlayerViewController : JTClipSequenceDisplayViewController
 @property  UIView *playerContainerView
 @property  UIView *placeholderContainerView
 @property  UIViewController<JTAVPlayerViewer> *avPlayerView
 @property  JTCompositionClipDataSource *clipDataSource
 @property  JTClip *clip
 @property  BOOL disableProjectBackgroundAudio

  // instance methods
  -[JTClipPlayerViewController .cxx_destruct]
  -[JTClipPlayerViewController viewWillAppear:]
  -[JTClipPlayerViewController prepareForSegue:sender:]
  -[JTClipPlayerViewController clip]
  -[JTClipPlayerViewController setClip:]
  -[JTClipPlayerViewController playerContainerView]
  -[JTClipPlayerViewController updateCompositionForEffectChange]
  -[JTClipPlayerViewController setPlayerContainerView:]
  -[JTClipPlayerViewController setDontRenderLiveTitles:]
  -[JTClipPlayerViewController setDuckAllAudioClips:]
  -[JTClipPlayerViewController clipDataSource]
  -[JTClipPlayerViewController reloadClip]
  -[JTClipPlayerViewController setClipDataSource:]
  -[JTClipPlayerViewController reloadClipAndSeekToStart:]
  -[JTClipPlayerViewController setAvPlayerView:]
  -[JTClipPlayerViewController avPlayerView]
  -[JTClipPlayerViewController setDisableProjectBackgroundAudio:]
  -[JTClipPlayerViewController playerViewer]
  -[JTClipPlayerViewController disableProjectBackgroundAudio]
  -[JTClipPlayerViewController placeholderContainerView]
  -[JTClipPlayerViewController setPlaceholderContainerView:]


CFXFaceTrackingRenderer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <SCNSceneRendererDelegate>
 @property  NSLock *renderLock
 @property  SCNRenderer *renderer
 @property  SCNNode *cameraNode
 @property  ^{__CVMetalTextureCache=} metalTextureCache
 @property  ^{OpaqueVTPixelTransferSession=} transferSession
 @property  ^{OpaqueVTImageRotationSession=} rotationSession
 @property  {CGSize=dd} workingSize
 @property  {CGSize=dd} outputSize
 @property  ^{__CVPixelBufferPool=} inputBufferPool
 @property  SCNNode *faceAnchorNode
 @property  SCNNode *faceRectNode
 @property  SCNNode *billboardTransformPlaneNode
 @property  SCNNode *transform3DPlaneNode
 @property  BOOL usingARFaceAnchor
 @property  <CFXFaceTrackingRendererDelegate> *delegate
 @property  BOOL clearGeometryPerFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXFaceTrackingRenderer sharedInstance]
  +[CFXFaceTrackingRenderer billboardCompositionScaleForBufferSize:]

  // instance methods
  -[CFXFaceTrackingRenderer init]
  -[CFXFaceTrackingRenderer dealloc]
  -[CFXFaceTrackingRenderer clear]
  -[CFXFaceTrackingRenderer delegate]
  -[CFXFaceTrackingRenderer setDelegate:]
  -[CFXFaceTrackingRenderer .cxx_destruct]
  -[CFXFaceTrackingRenderer setOutputSize:]
  -[CFXFaceTrackingRenderer outputSize]
  -[CFXFaceTrackingRenderer flush]
  -[CFXFaceTrackingRenderer renderer]
  -[CFXFaceTrackingRenderer setRenderer:]
  -[CFXFaceTrackingRenderer setInputBufferSize:]
  -[CFXFaceTrackingRenderer transferSession]
  -[CFXFaceTrackingRenderer cameraNode]
  -[CFXFaceTrackingRenderer setClearGeometryPerFrame:]
  -[CFXFaceTrackingRenderer newPixelBufferRenderedFromARFrame:withInputs:renderSize:interfaceOrientation:withFaceRectScaleFactor:]
  -[CFXFaceTrackingRenderer newPixelBufferRenderedWithFaceAnchor:withInputs:renderSize:]
  -[CFXFaceTrackingRenderer renderWithInputs:time:metadata:]
  -[CFXFaceTrackingRenderer resetCameraTransform]
  -[CFXFaceTrackingRenderer setUsingARFaceAnchor:]
  -[CFXFaceTrackingRenderer setRenderLock:]
  -[CFXFaceTrackingRenderer setCameraNode:]
  -[CFXFaceTrackingRenderer renderLock]
  -[CFXFaceTrackingRenderer setWorkingSize:]
  -[CFXFaceTrackingRenderer setupSCNRenderer]
  -[CFXFaceTrackingRenderer workingSize]
  -[CFXFaceTrackingRenderer CFX_inputsOfTrackingType:fromInputs:]
  -[CFXFaceTrackingRenderer updateSceneForFaceAnchor:withInputs:]
  -[CFXFaceTrackingRenderer renderFrameWithCompletionBlock:]
  -[CFXFaceTrackingRenderer CFX_ClearGeometry]
  -[CFXFaceTrackingRenderer metalTextureCache]
  -[CFXFaceTrackingRenderer faceAnchorNode]
  -[CFXFaceTrackingRenderer setFaceAnchorNode:]
  -[CFXFaceTrackingRenderer updateFaceTrackedNodesForParentNode:usingFaceAnchor:withInputs:]
  -[CFXFaceTrackingRenderer faceRectNode]
  -[CFXFaceTrackingRenderer setFaceRectNode:]
  -[CFXFaceTrackingRenderer CFX_ClearUnusedNodesWithInputs:]
  -[CFXFaceTrackingRenderer billboardTransformPlaneNode]
  -[CFXFaceTrackingRenderer CFX_billboardNodeWithWidth:height:]
  -[CFXFaceTrackingRenderer setBillboardTransformPlaneNode:]
  -[CFXFaceTrackingRenderer CFX_DEBUG_PlaneOutlineNodeWithWidth:height:thickness:color:]
  -[CFXFaceTrackingRenderer transform3DPlaneNode]
  -[CFXFaceTrackingRenderer CFX_pitchYawNodeWithWidth:height:]
  -[CFXFaceTrackingRenderer setTransform3DPlaneNode:]
  -[CFXFaceTrackingRenderer CFX_translationFromPlaneToPointOnFaceMesh]
  -[CFXFaceTrackingRenderer CFX_DEBUG_3DAxesNodeWithWidth:]
  -[CFXFaceTrackingRenderer CFX_updateNode:withImageBuffer:]
  -[CFXFaceTrackingRenderer CFX_ClearGeometryOfPlaneNode:]
  -[CFXFaceTrackingRenderer clearGeometryPerFrame]
  -[CFXFaceTrackingRenderer CFX_updateWithExplicitTransaction:]
  -[CFXFaceTrackingRenderer resetSceneNodes]
  -[CFXFaceTrackingRenderer setupInputBufferPoolForSize:]
  -[CFXFaceTrackingRenderer inputBufferPool]
  -[CFXFaceTrackingRenderer setInputBufferPool:]
  -[CFXFaceTrackingRenderer pointTranslatedToSceneKitForHitTest:]
  -[CFXFaceTrackingRenderer normalizedTopLeftFacePlanePointFromNormalizedUIKitPoint:onFacePlane:]
  -[CFXFaceTrackingRenderer CFX_LocalCoordinatesOfBillboardAtPoint:]
  -[CFXFaceTrackingRenderer compositionSubRectOfBillboardWithFaceAnchor:bufferSize:]
  -[CFXFaceTrackingRenderer relativeScaleBetweenTrackingModesWithFaceAnchor:]
  -[CFXFaceTrackingRenderer resetRenderer]
  -[CFXFaceTrackingRenderer setMetalTextureCache:]
  -[CFXFaceTrackingRenderer setTransferSession:]
  -[CFXFaceTrackingRenderer rotationSession]
  -[CFXFaceTrackingRenderer setRotationSession:]
  -[CFXFaceTrackingRenderer usingARFaceAnchor]


CFXFullScreenTextEditViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXEffectEditorViewDelegate>
 @property  CFXEffect *workingEffect
 @property  CFXEffectEditorView *effectEditor
 @property  <CFXFullScreenTextEditViewControllerDelegate> *delegate
 @property  BOOL effectWasRemoved
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} effectEditorFrameRelativeToScreen
 @property  UIView *dimmingView
 @property  BOOL isRunningAnimation
 @property  BOOL insertingEffect
 @property  CFXEffect *textEffect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXFullScreenTextEditViewController displayFullScreenTextEditorForEffect:inViewController:delegate:cameraViewWindowFrame:insertingEffect:]
  +[CFXFullScreenTextEditViewController isFullScreenTextEditorPresented]
  +[CFXFullScreenTextEditViewController notifyCameraViewWindowFrameChanged:]
  +[CFXFullScreenTextEditViewController CFX_fadeTimingParameters]
  +[CFXFullScreenTextEditViewController removeFullScreenTextEditor]

  // instance methods
  -[CFXFullScreenTextEditViewController dealloc]
  -[CFXFullScreenTextEditViewController delegate]
  -[CFXFullScreenTextEditViewController .cxx_destruct]
  -[CFXFullScreenTextEditViewController viewWillDisappear:]
  -[CFXFullScreenTextEditViewController viewDidLoad]
  -[CFXFullScreenTextEditViewController viewDidAppear:]
  -[CFXFullScreenTextEditViewController setDimmingView:]
  -[CFXFullScreenTextEditViewController dimmingView]
  -[CFXFullScreenTextEditViewController keyboardDidHide:]
  -[CFXFullScreenTextEditViewController effectEditor]
  -[CFXFullScreenTextEditViewController setEffectEditor:]
  -[CFXFullScreenTextEditViewController initWithTextEffect:CGSize:insertingEffect:delegate:]
  -[CFXFullScreenTextEditViewController setEffectEditorFrameRelativeToScreen:]
  -[CFXFullScreenTextEditViewController effectEditorFrameRelativeToScreen]
  -[CFXFullScreenTextEditViewController textEffect]
  -[CFXFullScreenTextEditViewController didTappedEmptyDimmedArea:]
  -[CFXFullScreenTextEditViewController configureWorkingEffect]
  -[CFXFullScreenTextEditViewController insertingEffect]
  -[CFXFullScreenTextEditViewController workingEffect]
  -[CFXFullScreenTextEditViewController CFX_animateWithDuration:animatingIn:completion:]
  -[CFXFullScreenTextEditViewController scaleTextToFitTextEditingBounds:]
  -[CFXFullScreenTextEditViewController isRunningAnimation]
  -[CFXFullScreenTextEditViewController effectWasRemoved]
  -[CFXFullScreenTextEditViewController setEffectWasRemoved:]
  -[CFXFullScreenTextEditViewController setIsRunningAnimation:]
  -[CFXFullScreenTextEditViewController effectEditorView:effectAtPoint:]
  -[CFXFullScreenTextEditViewController effectEditorView:isEffectAtPoint:effect:]
  -[CFXFullScreenTextEditViewController effectEditorView:frameForEffect:relativeToBounds:includeTracking:adjustForMinimumHitTestArea:]
  -[CFXFullScreenTextEditViewController effectEditorView:viewInfoForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:removeButtonPositionForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorViewDidBeginEditing:]
  -[CFXFullScreenTextEditViewController effectEditorView:spacingBetweenCenterPointOfEffect:point:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:didTransformEffect:transform:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:shouldEditTextForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:didBeginEditingTextForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:textEditingPropertiesForEffect:relativeToBounds:displayScale:]
  -[CFXFullScreenTextEditViewController effectEditorView:textForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:didEditTextForEffect:newText:]
  -[CFXFullScreenTextEditViewController effectEditorView:didEndEditingTextForEffect:wasCancelled:]
  -[CFXFullScreenTextEditViewController effectEditorView:didRemoveEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:shouldDisableEditingAnimationForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:durationForBeginEditingAnimationForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:willBeginAnimationBeforeEditingEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:didStartBeginEditingAnimationForEffect:completion:]
  -[CFXFullScreenTextEditViewController effectEditorView:didCompleteBeginEditingAnimationForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:beginEditingAnimationFromFrameForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:beginEditingAnimationToFrameForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:durationForEndEditingAnimationForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:willBeginAnimationAfterEditingEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:endEditingAnimationFromFrameForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:endEditingAnimationToFrameForEffect:relativeToBounds:]
  -[CFXFullScreenTextEditViewController effectEditorView:didStartEndEditingAnimationForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:didCompleteEndEditingAnimationForEffect:completion:]
  -[CFXFullScreenTextEditViewController effectEditorViewIsTrackingEffect:]
  -[CFXFullScreenTextEditViewController effectEditorView:trackingTransformWithEffectFrame:trackingTransformWithObjectTransform:fractionComplete:]
  -[CFXFullScreenTextEditViewController effectEditorViewDidEndEditing:]
  -[CFXFullScreenTextEditViewController effectEditorView:maximumTextLengthForEffect:]
  -[CFXFullScreenTextEditViewController effectEditorViewShouldPreviewEditEffect:]
  -[CFXFullScreenTextEditViewController setWorkingEffect:]
  -[CFXFullScreenTextEditViewController setInsertingEffect:]


JTPassThroughContainerView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  <JTPassThroughContainerViewDelegate> *delegate

  // instance methods
  -[JTPassThroughContainerView delegate]
  -[JTPassThroughContainerView setDelegate:]
  -[JTPassThroughContainerView .cxx_destruct]
  -[JTPassThroughContainerView hitTest:withEvent:]


CFXActionLogging : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXActionLogging actionLogAsJSONForEvent:atLocation:withEffectStack:]
  +[CFXActionLogging CFX_actionLogDictionaryWithEvent:atLocation:withEffectStack:]
  +[CFXActionLogging remainingMemory]
  +[CFXActionLogging actionLogAsStringForEvent:atLocation:withEffectStack:]


CFXFrame : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  PVFrameSet *pvFrameSet
 @property  ARFrame *arFrame
 @property  ARFaceAnchor *arFaceAnchor
 @property  {?=qiIq} latency
 @property  ^{__CVBuffer=} pixelBuffer
 @property  {?=qiIq} timestamp
 @property  {?=qiIq} requestTime

  // instance methods
  -[CFXFrame dealloc]
  -[CFXFrame isEqual:]
  -[CFXFrame encodeWithCoder:]
  -[CFXFrame .cxx_destruct]
  -[CFXFrame timestamp]
  -[CFXFrame latency]
  -[CFXFrame setTimestamp:]
  -[CFXFrame pixelBuffer]
  -[CFXFrame requestTime]
  -[CFXFrame setRequestTime:]
  -[CFXFrame setLatency:]
  -[CFXFrame setPixelBuffer:]
  -[CFXFrame arFrame]
  -[CFXFrame initWithPixelBuffer:faceAnchor:timestamp:]
  -[CFXFrame initWithFrameSet:]
  -[CFXFrame isEqualToFrame:]
  -[CFXFrame initWithARFrame:]
  -[CFXFrame pvFrameSet]
  -[CFXFrame setPvFrameSet:]
  -[CFXFrame setArFrame:]
  -[CFXFrame arFaceAnchor]
  -[CFXFrame setArFaceAnchor:]


JTEffectCategory : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *categoryID
 @property  NSString *displayName
 @property  NSArray *effectIDs

  // instance methods
  -[JTEffectCategory .cxx_destruct]
  -[JTEffectCategory displayName]
  -[JTEffectCategory setDisplayName:]
  -[JTEffectCategory categoryID]
  -[JTEffectCategory setCategoryID:]
  -[JTEffectCategory effectIDs]
  -[JTEffectCategory setEffectIDs:]


JTOverlayEffectCategory : JTEffectCategory

JTTitleCardCategory : JTEffectCategory

JTFilterEffectCategory : JTEffectCategory

JTEffectFactory : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTEffectFactory sharedInstance]

  // instance methods
  -[JTEffectFactory init]
  -[JTEffectFactory filters]
  -[JTEffectFactory overlays]
  -[JTEffectFactory overlayEffect:properties:]
  -[JTEffectFactory animojis]
  -[JTEffectFactory isStyleTransferEffectID:]
  -[JTEffectFactory _effectCategories:]
  -[JTEffectFactory _effects:category:]
  -[JTEffectFactory _effects:]
  -[JTEffectFactory _effectsIDsForType:]
  -[JTEffectFactory _filterEffects]
  -[JTEffectFactory _animojiEffects]
  -[JTEffectFactory _liveTitleEffects]
  -[JTEffectFactory _overlayEffects]
  -[JTEffectFactory _titleCardEffects]
  -[JTEffectFactory CFX_isExpensiveEffectID:]
  -[JTEffectFactory overlayCategories]
  -[JTEffectFactory titleCardCategories]
  -[JTEffectFactory propertiesForEffectID:]
  -[JTEffectFactory overlays:]
  -[JTEffectFactory styleTransferEffectIDs]
  -[JTEffectFactory effectsForType:]
  -[JTEffectFactory effectIDsForType:]
  -[JTEffectFactory createEffectForType:forType:]
  -[JTEffectFactory animojiEffect:properties:]
  -[JTEffectFactory filterEffect:properties:]


CFXEffect : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  BOOL isNone
 @property  JTEffect *jtEffect
 @property  NSString *identifier
 @property  NSString *localizedTitle

  // class methods
  +[CFXEffect initEffectRegistry]
  +[CFXEffect preWarmShaderCache]
  +[CFXEffect effectWithIdentifier:forEffectType:]
  +[CFXEffect effectWithJTEffect:]
  +[CFXEffect effectIdentifiersForEffectType:]

  // instance methods
  -[CFXEffect isEqual:]
  -[CFXEffect copyWithZone:]
  -[CFXEffect .cxx_destruct]
  -[CFXEffect identifier]
  -[CFXEffect localizedTitle]
  -[CFXEffect isNone]
  -[CFXEffect jtEffect]
  -[CFXEffect initWithJTEffect:]
  -[CFXEffect setJtEffect:]


CFXEffectPickerViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXEffectPickerViewDelegate, CFXEffectPickerViewDataSource, CFXFilterEffectPickerViewDataSource, CFXFilterEffectPickerViewDelegate, FunCamFilterPickerPresentationDelegate>
 @property  NSArray *effects
 @property  NSObject<OS_dispatch_queue> *effectLoadingQueue
 @property  CFXEffectPickerView *pickerView
 @property  BOOL previewing
 @property  UIImage *previewBackgroundImage
 @property  CFXEffectType *effectType
 @property  <CFXEffectPickerViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXEffectPickerViewController effectPickerViewController]

  // instance methods
  -[CFXEffectPickerViewController delegate]
  -[CFXEffectPickerViewController setDelegate:]
  -[CFXEffectPickerViewController .cxx_destruct]
  -[CFXEffectPickerViewController viewWillAppear:]
  -[CFXEffectPickerViewController viewWillDisappear:]
  -[CFXEffectPickerViewController viewDidLoad]
  -[CFXEffectPickerViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CFXEffectPickerViewController willMoveToParentViewController:]
  -[CFXEffectPickerViewController isPreviewing]
  -[CFXEffectPickerViewController pickerView]
  -[CFXEffectPickerViewController setPickerView:]
  -[CFXEffectPickerViewController effectType]
  -[CFXEffectPickerViewController setEffectType:]
  -[CFXEffectPickerViewController startPreviewing]
  -[CFXEffectPickerViewController stopPreviewing]
  -[CFXEffectPickerViewController setPreviewing:]
  -[CFXEffectPickerViewController shouldRotateCellsForDeviceOrientation]
  -[CFXEffectPickerViewController shouldDisplayExpandedModeForFilterPickerView:]
  -[CFXEffectPickerViewController numberOfEffectsInPickerView:]
  -[CFXEffectPickerViewController effectPickerView:indexForEffectID:]
  -[CFXEffectPickerViewController selectedFilterIndexForFilterPickerView:]
  -[CFXEffectPickerViewController effectPickerView:effectTitleAtIndex:]
  -[CFXEffectPickerViewController effects]
  -[CFXEffectPickerViewController setEffects:]
  -[CFXEffectPickerViewController previewBackgroundImage]
  -[CFXEffectPickerViewController effectPickerView:didPickEffectAtIndex:]
  -[CFXEffectPickerViewController effectPickerView:effectIdentifierAtIndex:]
  -[CFXEffectPickerViewController effectPickerView:effectAtIndex:forPreviewingAtSizeInPixels:completionBlock:]
  -[CFXEffectPickerViewController setPreviewBackgroundImage:]
  -[CFXEffectPickerViewController setEffectLoadingQueue:]
  -[CFXEffectPickerViewController CFX_restartPreviewing]
  -[CFXEffectPickerViewController CFX_stopPreviewing]
  -[CFXEffectPickerViewController CFX_loadEffectsForType:]
  -[CFXEffectPickerViewController CFX_createPickerViewForEffectType:]
  -[CFXEffectPickerViewController CFX_indexForEffectIdentifier:]
  -[CFXEffectPickerViewController CFX_configureEffect:previewSizeInPixels:]
  -[CFXEffectPickerViewController effectLoadingQueue]
  -[CFXEffectPickerViewController filterPickerPresentationModeDidChange]
  -[CFXEffectPickerViewController effectPickerView:effectAtIndex:]


JTImageIOSurfaceView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation <JTImageViewRendering>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  JTImage *jtImage
 @property  long long renderingType
 @property  BOOL flipX
 @property  BOOL flipY
 @property  BOOL enableDebugDrawing

  // instance methods
  -[JTImageIOSurfaceView initWithCoder:]
  -[JTImageIOSurfaceView .cxx_destruct]
  -[JTImageIOSurfaceView initWithFrame:]
  -[JTImageIOSurfaceView renderingType]
  -[JTImageIOSurfaceView setJtImage:]
  -[JTImageIOSurfaceView setRenderingType:]
  -[JTImageIOSurfaceView JTImageIOSurfaceView_commonInit]
  -[JTImageIOSurfaceView updateDebugDrawing]
  -[JTImageIOSurfaceView jtImage]
  -[JTImageIOSurfaceView flipX]
  -[JTImageIOSurfaceView setFlipX:]
  -[JTImageIOSurfaceView flipY]
  -[JTImageIOSurfaceView setFlipY:]
  -[JTImageIOSurfaceView enableDebugDrawing]
  -[JTImageIOSurfaceView setEnableDebugDrawing:]


JTEffectTextEditingProperties : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSAttributedString *attributedText
 @property  BOOL isAllCaps
 @property  NSDictionary *defaultTypingAttributes
 @property  UIColor *customColor
 @property  UIColor *customTextEditTintColor
 @property  double rotation
 @property  {CGSize=dd} size
 @property  {CGPoint=dd} center
 @property  {CGPoint=dd} scale
 @property  BOOL isEmoji

  // instance methods
  -[JTEffectTextEditingProperties .cxx_destruct]
  -[JTEffectTextEditingProperties size]
  -[JTEffectTextEditingProperties scale]
  -[JTEffectTextEditingProperties setSize:]
  -[JTEffectTextEditingProperties center]
  -[JTEffectTextEditingProperties setCenter:]
  -[JTEffectTextEditingProperties setScale:]
  -[JTEffectTextEditingProperties rotation]
  -[JTEffectTextEditingProperties setRotation:]
  -[JTEffectTextEditingProperties setAttributedText:]
  -[JTEffectTextEditingProperties attributedText]
  -[JTEffectTextEditingProperties isEmoji]
  -[JTEffectTextEditingProperties isAllCaps]
  -[JTEffectTextEditingProperties setIsAllCaps:]
  -[JTEffectTextEditingProperties defaultTypingAttributes]
  -[JTEffectTextEditingProperties setDefaultTypingAttributes:]
  -[JTEffectTextEditingProperties customColor]
  -[JTEffectTextEditingProperties setCustomColor:]
  -[JTEffectTextEditingProperties customTextEditTintColor]
  -[JTEffectTextEditingProperties setCustomTextEditTintColor:]
  -[JTEffectTextEditingProperties setIsEmoji:]


CFXEffectHostAppDelegate : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PVHostApplicationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXEffectHostAppDelegate effectTemplatesDirectoryName]
  -[CFXEffectHostAppDelegate effectTemplatesBundle]
  -[CFXEffectHostAppDelegate wantsExtraLineSpacingForDiacritics]
  -[CFXEffectHostAppDelegate wantsDynamicLineSpacingForDiacritics]
  -[CFXEffectHostAppDelegate wantsToScaleEmojiToCapHeight]
  -[CFXEffectHostAppDelegate wantsToSkipSuggestedLineBreaksInParagraphLayout]
  -[CFXEffectHostAppDelegate wantsToUseBinarySearchForScalingToBothMargins]
  -[CFXEffectHostAppDelegate wantsToLimitLinesOfText]
  -[CFXEffectHostAppDelegate getNumberOfLinesToLimitTextTo]
  -[CFXEffectHostAppDelegate wantsToImproveQualityOfDraftQualityText]
  -[CFXEffectHostAppDelegate wantsToDownscaleGlyphsToOutputSize]
  -[CFXEffectHostAppDelegate wantsToSetTranscriptionsUsingArray]
  -[CFXEffectHostAppDelegate wantsToIgnoreTextBoundsOfTransparentObjects]
  -[CFXEffectHostAppDelegate wantsToIgnoreTextBoundsOfNewlinesOfTranscriptions]
  -[CFXEffectHostAppDelegate wantsToUseCachedTextureForText]
  -[CFXEffectHostAppDelegate wantsToIncludeSubstituteFontNameInAttributedString]
  -[CFXEffectHostAppDelegate wantsToIncludeTrackingValueInAttributedString]
  -[CFXEffectHostAppDelegate wantsToComputeTypographicHeightWithoutLastLineLeading]
  -[CFXEffectHostAppDelegate wantsToAdjustTextBoundsHeightUsingCapHeight]
  -[CFXEffectHostAppDelegate wantsToCacheTopLevelGroupRender]
  -[CFXEffectHostAppDelegate getMaxGlyphResolution]


JTFileManagementUtils : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTFileManagementUtils temporaryPhotoURL:fileName:]
  +[JTFileManagementUtils videoRecordingURL:]
  +[JTFileManagementUtils capturedPhotoURL:isHEIF:]
  +[JTFileManagementUtils photoExportURL:isHEIF:]
  +[JTFileManagementUtils videoExportURL:]
  +[JTFileManagementUtils _videoRecordingURL:]
  +[JTFileManagementUtils _createDirectoryAtURL:error:]
  +[JTFileManagementUtils _videoExportURL:]
  +[JTFileManagementUtils _capturedPhotoURL:isHEIF:]
  +[JTFileManagementUtils _photoExportURL:isHEIF:]
  +[JTFileManagementUtils _temporaryPhotoURL:fileName:]
  +[JTFileManagementUtils _audioRecordingURL:]
  +[JTFileManagementUtils cachedExportFilePath:]
  +[JTFileManagementUtils _cleanupDirectory:]
  +[JTFileManagementUtils _tempFileURLWithDirectory:file:error:]
  +[JTFileManagementUtils audioRecordingURL:]
  +[JTFileManagementUtils cleanupOldProjects]
  +[JTFileManagementUtils cleanupTemporaryDirectories]
  +[JTFileManagementUtils ODRAssetsAreEmbedded]


CFXMediaItemAdjustmentsData : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSSecureCoding>
 @property  long long cameraMode
 @property  NSArray *effectStack

  // class methods
  +[CFXMediaItemAdjustmentsData supportsSecureCoding]
  +[CFXMediaItemAdjustmentsData secureCodingClassWhitelist]

  // instance methods
  -[CFXMediaItemAdjustmentsData encodeWithCoder:]
  -[CFXMediaItemAdjustmentsData initWithCoder:]
  -[CFXMediaItemAdjustmentsData .cxx_destruct]
  -[CFXMediaItemAdjustmentsData cameraMode]
  -[CFXMediaItemAdjustmentsData effectStack]
  -[CFXMediaItemAdjustmentsData initWithCameraMode:effectStack:]


CFXMediaItem : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL initializedWithoutSettingAllProperties
 @property  BOOL adjustmentsDataWasSet
 @property  long long cameraMode
 @property  JTClip *clip
 @property  NSData *adjustmentsData
 @property  NSURL *adjustedAssetURL
 @property  NSURL *originalAssetURL
 @property  long long type

  // instance methods
  -[CFXMediaItem init]
  -[CFXMediaItem type]
  -[CFXMediaItem setType:]
  -[CFXMediaItem .cxx_destruct]
  -[CFXMediaItem clip]
  -[CFXMediaItem originalAssetURL]
  -[CFXMediaItem setOriginalAssetURL:]
  -[CFXMediaItem cameraMode]
  -[CFXMediaItem adjustmentsData]
  -[CFXMediaItem setAdjustmentsData:]
  -[CFXMediaItem adjustedAssetURL]
  -[CFXMediaItem setAdjustedAssetURL:]
  -[CFXMediaItem setAdjustmentsDataWasSet:]
  -[CFXMediaItem createClipForMediaType:assetURL:cameraMode:effectStack:]
  -[CFXMediaItem initializedWithoutSettingAllProperties]
  -[CFXMediaItem adjustmentsDataWasSet]
  -[CFXMediaItem initWithCameraMode:clip:originalAssetURL:]
  -[CFXMediaItem initWithType:originalAssetURL:adjustmentsData:]
  -[CFXMediaItem setInitializedWithoutSettingAllProperties:]


JTCollectionView : UICollectionView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  {CGSize=dd} lastCollectionViewSize
 @property  BOOL inLayout

  // instance methods
  -[JTCollectionView layoutIfNeeded]
  -[JTCollectionView layoutSubviews]
  -[JTCollectionView selectedItem]
  -[JTCollectionView _accessibilityOpaqueElementScrollsContentIntoView]
  -[JTCollectionView firstVisibleIndexPath]
  -[JTCollectionView setInLayout:]
  -[JTCollectionView lastCollectionViewSize]
  -[JTCollectionView setLastCollectionViewSize:]
  -[JTCollectionView sortedIndexPathsForVisibleItems]
  -[JTCollectionView inLayout]
  -[JTCollectionView visibleSections]


JTEffectPickerPreviewDiskCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *cacheDirectoryPath

  // class methods
  +[JTEffectPickerPreviewDiskCache createCacheAtDirectory:]
  +[JTEffectPickerPreviewDiskCache cachedPathForEffect:directoryPath:]

  // instance methods
  -[JTEffectPickerPreviewDiskCache .cxx_destruct]
  -[JTEffectPickerPreviewDiskCache cacheDirectoryPath]
  -[JTEffectPickerPreviewDiskCache initWithDirectory:]
  -[JTEffectPickerPreviewDiskCache hasPreviewForEffectID:]
  -[JTEffectPickerPreviewDiskCache previewForEffectID:completion:]
  -[JTEffectPickerPreviewDiskCache savePreviewForEffectID:image:completion:]


JTFixedSizeUIImageView : UIImageView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
  // instance methods
  -[JTFixedSizeUIImageView intrinsicContentSize]
  -[JTFixedSizeUIImageView sizeThatFits:]


JTImageView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  long long currentImageViewType
 @property  UIView *imageView
 @property  JTImage *jtImage
 @property  long long imageViewType
 @property  BOOL preferIOSurfaceForYUV
 @property  BOOL preferMetalKit
 @property  BOOL enableDebugDrawing
 @property  BOOL disableIOSurface
 @property  BOOL disableMetalKit

  // class methods
  +[JTImageView colorFromRenderingType:]
  +[JTImageView colorFromImageViewType:]
  +[JTImageView normalizedQuadVertices:viewSize:textureSize:contentMode:]

  // instance methods
  -[JTImageView initWithCoder:]
  -[JTImageView .cxx_destruct]
  -[JTImageView initWithFrame:]
  -[JTImageView setContentMode:]
  -[JTImageView imageView]
  -[JTImageView setImageView:]
  -[JTImageView setJtImage:]
  -[JTImageView updateDebugDrawing]
  -[JTImageView jtImage]
  -[JTImageView flipX]
  -[JTImageView enableDebugDrawing]
  -[JTImageView setEnableDebugDrawing:]
  -[JTImageView JTImageView_commonInit]
  -[JTImageView setCurrentImageViewType:]
  -[JTImageView preferredImageViewTypeForImage:]
  -[JTImageView updateImageViewImage]
  -[JTImageView reconfigureImageView]
  -[JTImageView stringFromImageViewType:]
  -[JTImageView setImageViewType:]
  -[JTImageView setPreferIOSurfaceForYUV:]
  -[JTImageView setDisableIOSurface:]
  -[JTImageView setPreferMetalKit:]
  -[JTImageView setDisableMetalKit:]
  -[JTImageView imageViewType]
  -[JTImageView currentImageViewType]
  -[JTImageView preferIOSurfaceForYUV]
  -[JTImageView preferMetalKit]
  -[JTImageView disableIOSurface]
  -[JTImageView disableMetalKit]


CFXEffectMessagesStickerUtilities : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXEffectMessagesStickerUtilities animatedPreviewsDirectory]
  +[CFXEffectMessagesStickerUtilities animatedPreviewFileNameForOverlayID:]
  +[CFXEffectMessagesStickerUtilities JFX_recommendedStickerPreviewSizeInPixelsForStickerSize:]
  +[CFXEffectMessagesStickerUtilities cacheAnimatedStickerPreviewsForOverlayTypeId:atStickerSize:previewDuration:previewFrameRate:previewCompletedBlock:]
  +[CFXEffectMessagesStickerUtilities overlayIDFromAnimatedPreviewFileName:]
  +[CFXEffectMessagesStickerUtilities numberOfStickersForEffectTypeId:]
  +[CFXEffectMessagesStickerUtilities stickerPropertiesForIndex:forEffectTypeId:]


CFXCounterRotationLayer : CALayer /System/Library/Frameworks/AVKit.framework/AVKit
 @property  double zRotation

  // instance methods
  -[CFXCounterRotationLayer addAnimation:forKey:]
  -[CFXCounterRotationLayer zRotation]
  -[CFXCounterRotationLayer setZRotation:]


CFXCounterRotationView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  double zRotation
 @property  {CGAffineTransform=dddddd} transform

  // class methods
  +[CFXCounterRotationView layerClass]

  // instance methods
  -[CFXCounterRotationView zRotation]
  -[CFXCounterRotationView setZRotation:]
  -[CFXCounterRotationView snapshotLayer]


JTThumbnailGenerator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  PHImageManager *imageManager
 @property  BOOL cacheRenderers
 @property  AVAssetImageGenerator *cachedAssetImageGenerator
 @property  JTEffectsPreviewGenerator *cachedEffectsPreviewGenerator

  // class methods
  +[JTThumbnailGenerator prepareStillForThumbnail:scale:targetSize:returnTargetImageSize:]
  +[JTThumbnailGenerator createEffectsPreviewGenerator]

  // instance methods
  -[JTThumbnailGenerator init]
  -[JTThumbnailGenerator .cxx_destruct]
  -[JTThumbnailGenerator imageManager]
  -[JTThumbnailGenerator setImageManager:]
  -[JTThumbnailGenerator thumbnailsWithAsset:needsDerivativeMedia:targetSize:requestedTimes:timeScale:effectStack:transforms:completionHandler:]
  -[JTThumbnailGenerator thumbnailsWithVideoURL:targetSize:requestedTimes:timeScale:effectStack:transforms:completionHandler:]
  -[JTThumbnailGenerator thumbnailsWithStillURL:targetSize:requestedTimes:timeScale:effectStack:transforms:completionHandler:]
  -[JTThumbnailGenerator thumbnailWithAsset:needsDerivativeMedia:targetSize:requestedTime:timeScale:effectStack:transform:progressHandlerBlock:completionHandler:]
  -[JTThumbnailGenerator thumbnailWithVideoURL:targetSize:requestedTime:timeScale:effectStack:transform:completionHandler:]
  -[JTThumbnailGenerator thumbnailWithStillURL:targetSize:effectStack:transform:completionHandler:]
  -[JTThumbnailGenerator cacheRenderers]
  -[JTThumbnailGenerator cachedAssetImageGenerator]
  -[JTThumbnailGenerator generateImagesWithAVAsset:targetSizeInPixels:requestedTime:timeScale:effectStack:transforms:completionHandler:]
  -[JTThumbnailGenerator deepCopyEffectStackWithEffects:]
  -[JTThumbnailGenerator finalizeImage:effectStack:transform:targetImageSize:targetSize:previewGenerator:completionHandler:]
  -[JTThumbnailGenerator thumbnailWithStillImage:targetSize:effectStack:transform:previewGenerator:completionHandler:]
  -[JTThumbnailGenerator thumbnailForTitleCardWithEffect:targetSize:effectStack:completionHandler:]
  -[JTThumbnailGenerator setCachedAssetImageGenerator:]
  -[JTThumbnailGenerator thumbnailsForTitleCardWithEffect:targetSize:requestedTimes:effectStack:transforms:completionHandler:]
  -[JTThumbnailGenerator transformAnimationInfoWithTransform:imageSize:targetImageSize:targetSize:]
  -[JTThumbnailGenerator projectThumbnailWithImages:targetSize:completionHandler:]
  -[JTThumbnailGenerator setCacheRenderers:]
  -[JTThumbnailGenerator cachedEffectsPreviewGenerator]
  -[JTThumbnailGenerator setCachedEffectsPreviewGenerator:]
  -[JTThumbnailGenerator initCacheEfectsPreviewGenerator:]


CFXReviewViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXPreviewViewControllerDelegate, CFXEffectBrowserContentPresenterViewControllerDelegate, CFXEffectBrowserViewControllerDelegate>
 @property  CFXEffectBrowserViewController *effectBrowserViewController
 @property  CFXPreviewViewController *internalPreviewViewController
 @property  CFXReviewControlsViewController *reviewControlsViewController
 @property  CFXMediaItem *mediaItem
 @property  NSObject<OS_dispatch_group> *metadataReaderGroup
 @property  BOOL mediaCapturedInFunCam
 @property  BOOL mediaCapturedInFunCam_metadata
 @property  long long mediaCaptureDevicePosition
 @property  long long mediaCaptureDevicePosition_metadata
 @property  long long mediaCaptureInterfaceOrientation
 @property  long long mediaCaptureInterfaceOrientation_metadata
 @property  long long cameraModeUsedForCapture
 @property  CFXCounterRotationView *bottomControlsSnapshotContainer
 @property  NSData *adjustmentsData
 @property  <CFXReviewViewControllerDelegate> *delegate
 @property  UIView *effectsPickerDrawer
 @property  BOOL mediaItemRequiresExport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXReviewViewController initialize]

  // instance methods
  -[CFXReviewViewController delegate]
  -[CFXReviewViewController setDelegate:]
  -[CFXReviewViewController .cxx_destruct]
  -[CFXReviewViewController loadView]
  -[CFXReviewViewController viewDidLoad]
  -[CFXReviewViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CFXReviewViewController viewDidLayoutSubviews]
  -[CFXReviewViewController viewDidAppear:]
  -[CFXReviewViewController mediaItem]
  -[CFXReviewViewController setMediaItem:]
  -[CFXReviewViewController initWithMediaItem:]
  -[CFXReviewViewController adjustmentsData]
  -[CFXReviewViewController exportMediaItemToFileURL:]
  -[CFXReviewViewController setEffectsPickerDrawer:]
  -[CFXReviewViewController setEffectBrowserViewController:]
  -[CFXReviewViewController effectBrowserViewController]
  -[CFXReviewViewController bottomControlsSnapshotContainer]
  -[CFXReviewViewController setBottomControlsSnapshotContainer:]
  -[CFXReviewViewController effectsPickerDrawer]
  -[CFXReviewViewController effectBrowserViewController:screenTopBarHeightForWindowBounds:orientation:]
  -[CFXReviewViewController effectBrowserViewController:willChangeDockHeight:]
  -[CFXReviewViewController shouldAlwaysPresentExpandedAppsForEffectBrowserViewController:]
  -[CFXReviewViewController effectBrowserViewController:didDropOverlayEffect:atScreenLocation:atScreenSize:rotationAngle:]
  -[CFXReviewViewController effectBrowserViewController:didRemoveAllEffectsOfType:]
  -[CFXReviewViewController effectBrowserViewController:didSelectEffect:]
  -[CFXReviewViewController effectBrowserViewController:filterPickerPreviewBackgroundImageAtSizeInPixels:completion:]
  -[CFXReviewViewController selectedFilterIdentifierForEffectBrowserViewController:]
  -[CFXReviewViewController selectedAnimojiIdentifierForEffectBrowserViewController:]
  -[CFXReviewViewController localizedPromptForHidingAnimojiForEffectBrowserViewController:]
  -[CFXReviewViewController allowLandscapeForEffectBrowserViewController:]
  -[CFXReviewViewController effectBrowserViewController:didDismissPickerForEffectType:]
  -[CFXReviewViewController effectBrowserViewController:didPresentPickerForEffectType:]
  -[CFXReviewViewController mediaItemForEffectBrowserViewController:]
  -[CFXReviewViewController orientationUsedForCapture]
  -[CFXReviewViewController cameraModeUsedForCapture]
  -[CFXReviewViewController previewViewController:didStartExportingMediaItem:]
  -[CFXReviewViewController selectedAppIdentifierForPreviewViewController:]
  -[CFXReviewViewController previewViewControllerDidStartEditingText:]
  -[CFXReviewViewController previewViewController:didProgress:exportingMediaItem:]
  -[CFXReviewViewController previewViewControllerDidHideUserInterface:]
  -[CFXReviewViewController previewViewControllerDidShowUserInterface:]
  -[CFXReviewViewController previewViewController:didFinishExportingMediaItem:withError:]
  -[CFXReviewViewController mediaCapturedInFunCam]
  -[CFXReviewViewController previewViewControllerDidStopEditingText:]
  -[CFXReviewViewController CFX_resetAndLoadPreviewViewController]
  -[CFXReviewViewController internalPreviewViewController]
  -[CFXReviewViewController metadataReaderGroup]
  -[CFXReviewViewController mediaCaptureDevicePosition_metadata]
  -[CFXReviewViewController mediaCaptureInterfaceOrientation_metadata]
  -[CFXReviewViewController mediaCaptureDevicePosition]
  -[CFXReviewViewController CFX_updateAnalyticsForSentMediaItem:]
  -[CFXReviewViewController mediaCaptureInterfaceOrientation]
  -[CFXReviewViewController mediaCapturedInFunCam_metadata]
  -[CFXReviewViewController setInternalPreviewViewController:]
  -[CFXReviewViewController mediaItemRequiresExport]
  -[CFXReviewViewController reviewControlsViewController]
  -[CFXReviewViewController setReviewControlsViewController:]
  -[CFXReviewViewController setMetadataReaderGroup:]
  -[CFXReviewViewController setMediaCapturedInFunCam_metadata:]
  -[CFXReviewViewController setMediaCaptureDevicePosition_metadata:]
  -[CFXReviewViewController setMediaCaptureInterfaceOrientation_metadata:]
  -[CFXReviewViewController setCameraModeUsedForCapture:]


JTARKitCameraSessionController : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <ARSessionDelegate>
 @property  ARSession *arSession
 @property  ARFaceTrackingConfiguration *faceTrackingConfiguration
 @property  JTCustomImageSensor *customImageSensor
 @property  CMMotionManager *motionManager
 @property  ARMotionSensor *motionSensor
 @property  ARDeviceOrientationSensor *orientationSensor
 @property  AVCaptureSession *underlyingAVCaptureSession
 @property  AVCaptureDevice *underlyingAVCaptureDevice
 @property  NSObject<OS_dispatch_queue> *arSessionDelegateQueue
 @property  <JTARKitFrameDelegate> *frameDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTARKitCameraSessionController dealloc]
  -[JTARKitCameraSessionController .cxx_destruct]
  -[JTARKitCameraSessionController setFrameDelegate:]
  -[JTARKitCameraSessionController frameDelegate]
  -[JTARKitCameraSessionController motionManager]
  -[JTARKitCameraSessionController session:didUpdateFrame:]
  -[JTARKitCameraSessionController setMotionManager:]
  -[JTARKitCameraSessionController arSession]
  -[JTARKitCameraSessionController processExternalSensorData:]
  -[JTARKitCameraSessionController provideSensorFrameSet:trackedFacesMetadata:faceObjectsMetadata:]
  -[JTARKitCameraSessionController initWithAVCaptureSession:captureDevice:arSessionDelegateQueue:]
  -[JTARKitCameraSessionController startARSession]
  -[JTARKitCameraSessionController setUnderlyingAVCaptureSession:]
  -[JTARKitCameraSessionController setUnderlyingAVCaptureDevice:]
  -[JTARKitCameraSessionController JT_setupARSession:]
  -[JTARKitCameraSessionController JT_resetARSession]
  -[JTARKitCameraSessionController faceTrackingConfiguration]
  -[JTARKitCameraSessionController customImageSensor]
  -[JTARKitCameraSessionController underlyingAVCaptureDevice]
  -[JTARKitCameraSessionController underlyingAVCaptureSession]
  -[JTARKitCameraSessionController setArSession:]
  -[JTARKitCameraSessionController arSessionDelegateQueue]
  -[JTARKitCameraSessionController setCustomImageSensor:]
  -[JTARKitCameraSessionController setMotionSensor:]
  -[JTARKitCameraSessionController setOrientationSensor:]
  -[JTARKitCameraSessionController setFaceTrackingConfiguration:]
  -[JTARKitCameraSessionController motionSensor]
  -[JTARKitCameraSessionController orientationSensor]
  -[JTARKitCameraSessionController setArSessionDelegateQueue:]


JTCompositionTrackGroup : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *timePitchAlgorithm
 @property  NSMutableArray *extraAudioTrackGroups
 @property  ^{opaqueCMFormatDescription=} audioFormatDescription
 @property  BOOL seenSpeedClip
 @property  BOOL seenMoreThanOneASBD
 @property  AVMutableAudioMixInputParameters *audioParameters
 @property  NSDictionary *fmTrackInfoDict
 @property  {?=qiIq} lastRampToZeroEnd
 @property  BOOL isFlexMusic
 @property  {?=qiIq} cursorForMovieAudio
 @property  int timeScale
 @property  BOOL videoTrackInUse
 @property  NSMutableArray *videoSegments
 @property  NSMutableArray *audioSegments
 @property  NSString *label
 @property  AVMutableCompositionTrack *videoTrack
 @property  AVMutableCompositionTrack *audioTrack
 @property  NSString *preferredAudioTimePitchAlgorithm
 @property  int actualVideoTrackID
 @property  int usableVideoTrackID
 @property  {?=qiIq} cursor
 @property  {?=qiIq} cursorAtLastVideoInsertion
 @property  {?=qiIq} timeOfLastVolumeChange
 @property  {?=qiIq} timeOfLastRequest
 @property  float volumeAtLastVolumeChange
 @property  float volumeChangePending
 @property  {?=qiIq} fadeOutStart
 @property  {?=qiIq} fadeOutDuration
 @property  AVMutableComposition *composition
 @property  BOOL isExporting

  // class methods
  +[JTCompositionTrackGroup visualDescriptionForSegments:]

  // instance methods
  -[JTCompositionTrackGroup dealloc]
  -[JTCompositionTrackGroup .cxx_destruct]
  -[JTCompositionTrackGroup cursor]
  -[JTCompositionTrackGroup setLabel:]
  -[JTCompositionTrackGroup apply:]
  -[JTCompositionTrackGroup label]
  -[JTCompositionTrackGroup audioParameters]
  -[JTCompositionTrackGroup setFadeOutDuration:]
  -[JTCompositionTrackGroup fadeOutDuration]
  -[JTCompositionTrackGroup validate]
  -[JTCompositionTrackGroup composition]
  -[JTCompositionTrackGroup timeScale]
  -[JTCompositionTrackGroup audioFormatDescription]
  -[JTCompositionTrackGroup setComposition:]
  -[JTCompositionTrackGroup videoSegments]
  -[JTCompositionTrackGroup videoTrack]
  -[JTCompositionTrackGroup setVideoTrack:]
  -[JTCompositionTrackGroup setTimeScale:]
  -[JTCompositionTrackGroup markDirty]
  -[JTCompositionTrackGroup isExporting]
  -[JTCompositionTrackGroup initWithLabel:timeScale:]
  -[JTCompositionTrackGroup setAudioTrack:]
  -[JTCompositionTrackGroup setFadeOutStart:]
  -[JTCompositionTrackGroup actualVideoTrackID]
  -[JTCompositionTrackGroup requestVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[JTCompositionTrackGroup requestVolume:atTime:]
  -[JTCompositionTrackGroup requestVolumeRampFromStartVolume:toEndVolume:timeRange:fillEmptySegment:]
  -[JTCompositionTrackGroup audioTrack]
  -[JTCompositionTrackGroup commitPendingVolumeToTime:]
  -[JTCompositionTrackGroup applyPaddingToTime:]
  -[JTCompositionTrackGroup applyAudioMixParameters:]
  -[JTCompositionTrackGroup applyCompositionItemAsLoopedAudio:forTimeRange:]
  -[JTCompositionTrackGroup applyCompositionItem:atTime:]
  -[JTCompositionTrackGroup setPreferredAudioTimePitchAlgorithm:]
  -[JTCompositionTrackGroup setIsExporting:]
  -[JTCompositionTrackGroup applyCompositionItem:skipAudio:]
  -[JTCompositionTrackGroup usableVideoTrackID]
  -[JTCompositionTrackGroup setAudioFormatDescription:]
  -[JTCompositionTrackGroup removeExtraAudioTrackGroups]
  -[JTCompositionTrackGroup containsVideoSegments]
  -[JTCompositionTrackGroup containsAudioSegments]
  -[JTCompositionTrackGroup setSeenSpeedClip:]
  -[JTCompositionTrackGroup setSeenMoreThanOneASBD:]
  -[JTCompositionTrackGroup resetVolumeState]
  -[JTCompositionTrackGroup extraAudioTrackGroups]
  -[JTCompositionTrackGroup setExtraAudioTrackGroups:]
  -[JTCompositionTrackGroup _updateIsFlexMusic:]
  -[JTCompositionTrackGroup lastRampToZeroEnd]
  -[JTCompositionTrackGroup applyCompositionItem:atTime:skipAudio:]
  -[JTCompositionTrackGroup preferredAudioTimePitchAlgorithm]
  -[JTCompositionTrackGroup apply_version2_to_track:withSegments:assets:]
  -[JTCompositionTrackGroup apply_version2:]
  -[JTCompositionTrackGroup setAudioParameters:]
  -[JTCompositionTrackGroup setTimeOfLastVolumeChange:]
  -[JTCompositionTrackGroup setVolumeAtLastVolumeChange:]
  -[JTCompositionTrackGroup setVolumeChangePending:]
  -[JTCompositionTrackGroup setTimeOfLastRequest:]
  -[JTCompositionTrackGroup setLastRampToZeroEnd:]
  -[JTCompositionTrackGroup fadeOutStart]
  -[JTCompositionTrackGroup linearFadeOutValueForTime:]
  -[JTCompositionTrackGroup volumeAtLastVolumeChange]
  -[JTCompositionTrackGroup timeOfLastVolumeChange]
  -[JTCompositionTrackGroup isFlexMusic]
  -[JTCompositionTrackGroup setFadedVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[JTCompositionTrackGroup volumeChangePending]
  -[JTCompositionTrackGroup commitVolumeRampFromStartVolume:toEndVolume:timeRange:]
  -[JTCompositionTrackGroup shouldCommitVolume:]
  -[JTCompositionTrackGroup containsSegments]
  -[JTCompositionTrackGroup addExtraAudioTrackGroup:]
  -[JTCompositionTrackGroup asbd:isEqualTo:]
  -[JTCompositionTrackGroup applyCompositionItem:]
  -[JTCompositionTrackGroup apply_version1]
  -[JTCompositionTrackGroup audioSegments]
  -[JTCompositionTrackGroup setAudioSegments:]
  -[JTCompositionTrackGroup cursorAtLastVideoInsertion]
  -[JTCompositionTrackGroup timeOfLastRequest]
  -[JTCompositionTrackGroup timePitchAlgorithm]
  -[JTCompositionTrackGroup setTimePitchAlgorithm:]
  -[JTCompositionTrackGroup seenSpeedClip]
  -[JTCompositionTrackGroup seenMoreThanOneASBD]
  -[JTCompositionTrackGroup fmTrackInfoDict]
  -[JTCompositionTrackGroup setFmTrackInfoDict:]
  -[JTCompositionTrackGroup setIsFlexMusic:]
  -[JTCompositionTrackGroup cursorForMovieAudio]
  -[JTCompositionTrackGroup videoTrackInUse]
  -[JTCompositionTrackGroup setVideoTrackInUse:]
  -[JTCompositionTrackGroup setVideoSegments:]


JTImage : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  UIImage *image
 @property  PVImageBuffer *pvImageBuffer

  // class methods
  +[JTImage jtImageWithUIImage:]

  // instance methods
  -[JTImage .cxx_destruct]
  -[JTImage image]
  -[JTImage initWithUIImage:]
  -[JTImage initWithPVImage:]
  -[JTImage bluredImageWithFlippedXAxis:]
  -[JTImage pvImageBuffer]
  -[JTImage hasPVImageBufferAndCanCreateCVPixelBufferWithoutCopy]


JTTextEffect : JTEffect
 @property  unsigned long dynamicTextType
 @property  UIColor *customTextEditTintColor
 @property  BOOL textBakedIn

  // class methods
  +[JTTextEffect supportsSecureCoding]
  +[JTTextEffect JT_systemFontWeightFromName:]
  +[JTTextEffect JT_systemFontDesignFromName:]
  +[JTTextEffect JT_symbolicTraitsFromName:]
  +[JTTextEffect JT_fontWithName:]
  +[JTTextEffect transformFromEffectSize:toBasis:localToWorld:basisOrigin:]
  +[JTTextEffect dynamicTextPlaceholderMap]
  +[JTTextEffect placeHolderTextForDynamicTextType:]

  // instance methods
  -[JTTextEffect copyWithZone:]
  -[JTTextEffect encodeWithCoder:]
  -[JTTextEffect initWithCoder:]
  -[JTTextEffect stringAtIndex:]
  -[JTTextEffect strings]
  -[JTTextEffect maxCharacters]
  -[JTTextEffect initWithEffectID:]
  -[JTTextEffect beginTextEditing]
  -[JTTextEffect hasDynamicText]
  -[JTTextEffect wasDynamicTextSet]
  -[JTTextEffect updateDynamicTextWithCompletionBlock:]
  -[JTTextEffect customTextEditTintColor]
  -[JTTextEffect enableDynamicLineSpacingForDiacritics:]
  -[JTTextEffect setString:atIndex:]
  -[JTTextEffect setFont:atIndex:]
  -[JTTextEffect setFontSize:atIndex:]
  -[JTTextEffect defaultAttributedString:]
  -[JTTextEffect dynamicTextType]
  -[JTTextEffect editUIProperties]
  -[JTTextEffect setupLocalizedText]
  -[JTTextEffect setFontScale:atIndex:]
  -[JTTextEffect defaultTypingAttributes:]
  -[JTTextEffect textFrames:]
  -[JTTextEffect textFrames:relativeTo:basisOrigin:]
  -[JTTextEffect textTransforms:relativeTo:basisOrigin:]
  -[JTTextEffect textHitTest:time:relativeTo:basisOrigin:]
  -[JTTextEffect endTextEditing]
  -[JTTextEffect setDynamicTextString:forType:]
  -[JTTextEffect textBakedIn]
  -[JTTextEffect customTextEditColor]


JTEffectContinousPreviewOptions : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  {?=qiIq} effectAnimationDuration
 @property  BOOL loopAnimation
 @property  unsigned long preferredUpdatesPerSecond
 @property  BOOL useCameraAsBackground

  // instance methods
  -[JTEffectContinousPreviewOptions copyWithZone:]
  -[JTEffectContinousPreviewOptions initWithFrameRate:]
  -[JTEffectContinousPreviewOptions initForLiveCameraWithFrameRate:]
  -[JTEffectContinousPreviewOptions effectAnimationDuration]
  -[JTEffectContinousPreviewOptions setEffectAnimationDuration:]
  -[JTEffectContinousPreviewOptions loopAnimation]
  -[JTEffectContinousPreviewOptions setLoopAnimation:]
  -[JTEffectContinousPreviewOptions preferredUpdatesPerSecond]
  -[JTEffectContinousPreviewOptions setPreferredUpdatesPerSecond:]
  -[JTEffectContinousPreviewOptions useCameraAsBackground]
  -[JTEffectContinousPreviewOptions setUseCameraAsBackground:]


JTEffectPreviewManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PVLivePlayerDelegate>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  JTCacheDictionary *previewCache
 @property  JTFrameRateCalculator *fpsCalc
 @property  JTEffectPickerPreviewDiskCache *previewDiskCache
 @property  NSObject<OS_dispatch_queue> *previewQueue
 @property  NSObject *pickerPreviewingToken
 @property  JTEffectsPreviewGenerator *staticPreviewGenerator
 @property  PVLivePlayer *continousPreviewPlayer
 @property  JTEffectContinousPreviewOptions *continousPreviewOptions
 @property  NSArray *continousPreviewProVideoEffects
 @property  NSArray *continousPreviewAnimojis
 @property  NSArray *effectStackAppliedBeforeContinousPreview
 @property  JTPixelRotationSession *pixelRotationSession
 @property  {CGSize=dd} previewRenderSize
 @property  BOOL continouslyPreviewing
 @property  JTImage *defaultPreviewImage
 @property  {CGSize=dd} previewSize
 @property  JTImage *backgroundImage
 @property  BOOL allowCachingStaticPreviewsToDisk
 @property  NSArray *continousPreviewEffects
 @property  <JTEffectPreviewManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTEffectPreviewManager dealloc]
  -[JTEffectPreviewManager delegate]
  -[JTEffectPreviewManager setDelegate:]
  -[JTEffectPreviewManager .cxx_destruct]
  -[JTEffectPreviewManager callbackQueue]
  -[JTEffectPreviewManager backgroundImage]
  -[JTEffectPreviewManager setBackgroundImage:]
  -[JTEffectPreviewManager previewSize]
  -[JTEffectPreviewManager setPreviewSize:]
  -[JTEffectPreviewManager highQualityRendering]
  -[JTEffectPreviewManager previewCache]
  -[JTEffectPreviewManager previewQueue]
  -[JTEffectPreviewManager defaultPreviewImage]
  -[JTEffectPreviewManager fpsCalc]
  -[JTEffectPreviewManager isContinouslyPreviewing]
  -[JTEffectPreviewManager initWithPreviewSize:callbackQueue:]
  -[JTEffectPreviewManager startCachingPreviewsContinuouslyWithOptions:]
  -[JTEffectPreviewManager setContinousPreviewEffects:]
  -[JTEffectPreviewManager cachedPreviewForEffect:completion:]
  -[JTEffectPreviewManager cachedPreviewForEffectIDs:completion:]
  -[JTEffectPreviewManager JT_stopCachingPreviewsContinuously]
  -[JTEffectPreviewManager previewRenderSize]
  -[JTEffectPreviewManager setPreviewRenderSize:]
  -[JTEffectPreviewManager setContinousPreviewAnimojis:]
  -[JTEffectPreviewManager setContinousPreviewProVideoEffects:]
  -[JTEffectPreviewManager continousPreviewOptions]
  -[JTEffectPreviewManager continousPreviewProVideoEffects]
  -[JTEffectPreviewManager setContinouslyPreviewing:]
  -[JTEffectPreviewManager setContinousPreviewOptions:]
  -[JTEffectPreviewManager setContinousPreviewPlayer:]
  -[JTEffectPreviewManager continousPreviewPlayer]
  -[JTEffectPreviewManager pickerPreviewingToken]
  -[JTEffectPreviewManager setDefaultPreviewImage:]
  -[JTEffectPreviewManager effectStackAppliedBeforeContinousPreview]
  -[JTEffectPreviewManager rendersDefaultContinousPreviewImage]
  -[JTEffectPreviewManager adjustAnimationInfoForLiveCaptureRequest:]
  -[JTEffectPreviewManager lowPriorityScheduling]
  -[JTEffectPreviewManager staticPreviewGenerator]
  -[JTEffectPreviewManager centerAnimationInfoForRequest:]
  -[JTEffectPreviewManager continousPreviewAnimojis]
  -[JTEffectPreviewManager JT_canCacheEffectToDisk:]
  -[JTEffectPreviewManager previewDiskCache]
  -[JTEffectPreviewManager JT_renderPreviewForEffect:completion:]
  -[JTEffectPreviewManager allowCachingStaticPreviewsToDisk]
  -[JTEffectPreviewManager JT_dispatchBlockOnCallbackQueueImmediatelyWhenPossible:]
  -[JTEffectPreviewManager preparePreviewForEffect:completion:]
  -[JTEffectPreviewManager setStaticPreviewGenerator:]
  -[JTEffectPreviewManager buildRenderRequest:time:]
  -[JTEffectPreviewManager renderRequestComplete:results:completedOutOfOrder:]
  -[JTEffectPreviewManager continousPreviewEffects]
  -[JTEffectPreviewManager stopCachingPreviewsContinuously]
  -[JTEffectPreviewManager preferredSchedulingQueueSize]
  -[JTEffectPreviewManager hasCachedPreviewForEffectID:]
  -[JTEffectPreviewManager purgeCachedPreviewForEffectID:]
  -[JTEffectPreviewManager purgeCachedPreviewsForAllEffects]
  -[JTEffectPreviewManager setAllowCachingStaticPreviewsToDisk:]
  -[JTEffectPreviewManager setPickerPreviewingToken:]
  -[JTEffectPreviewManager setEffectStackAppliedBeforeContinousPreview:]
  -[JTEffectPreviewManager pixelRotationSession]
  -[JTEffectPreviewManager setPixelRotationSession:]


JTExportController : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  JTComposition *composition
 @property  NSArray *presets
 @property  NSString *currentPreset
 @property  UIImage *poster
 @property  <ExportDelegate> *delegate
 @property  NSString *exportPath
 @property  BOOL usingExistingRenderFile
 @property  NSTimer *progressTimer
 @property  unsigned long exportingIndexPresets
 @property  BOOL cancel
 @property  long long status

  // class methods
  +[JTExportController dataRateForPreset:size:]
  +[JTExportController videoDataRateForPreset:size:]
  +[JTExportController audioDataRateForPreset:]
  +[JTExportController estimatedFileSizeForDuration:frameRate:preset:size:]

  // instance methods
  -[JTExportController dealloc]
  -[JTExportController delegate]
  -[JTExportController setDelegate:]
  -[JTExportController .cxx_destruct]
  -[JTExportController cancel]
  -[JTExportController progress]
  -[JTExportController status]
  -[JTExportController setStatus:]
  -[JTExportController setCancel:]
  -[JTExportController composition]
  -[JTExportController cancelExport]
  -[JTExportController poster]
  -[JTExportController setPoster:]
  -[JTExportController currentPreset]
  -[JTExportController setCurrentPreset:]
  -[JTExportController setComposition:]
  -[JTExportController closeSession]
  -[JTExportController stopProgressTimer]
  -[JTExportController startProgressTimer]
  -[JTExportController presets]
  -[JTExportController progressTimer]
  -[JTExportController setProgressTimer:]
  -[JTExportController setPresets:]
  -[JTExportController setExportingIndexPresets:]
  -[JTExportController setExportPath:]
  -[JTExportController exportingIndexPresets]
  -[JTExportController nextPreset]
  -[JTExportController hasExistingFile]
  -[JTExportController updateProgressViewWithProgress:reduced:]
  -[JTExportController continueExportAfterDelay]
  -[JTExportController informDelegateOfCompletion]
  -[JTExportController serviceProgressTimer:]
  -[JTExportController initWithWithComposition:presets:toFile:poster:delegate:]
  -[JTExportController beginAsynchronousExport]
  -[JTExportController noteSessionProgressed:]
  -[JTExportController metadataToAdd]
  -[JTExportController exportPath]
  -[JTExportController usingExistingRenderFile]
  -[JTExportController setUsingExistingRenderFile:]


CFXOverlayPickerAnimatedPreviewWriter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  JTOverlayEffect *overlay
 @property  {CGSize=dd} previewSizeInPixels
 @property  NSString *destinationPath
 @property  NSDictionary *frameProperties
 @property  unsigned long currentFrameCount
 @property  unsigned long previewFrameRate
 @property  double previewDuration
 @property  unsigned long previewStartFrameIndex
 @property  unsigned long targetFrameCount
 @property  {?=qiIq} currentRenderTime
 @property  JTEffectsPreviewGenerator *previewGenerator
 @property  NSObject<OS_dispatch_queue> *writerQueue
 @property  @? completionBlock
 @property  BOOL isFirstAnimatedFrame

  // instance methods
  -[CFXOverlayPickerAnimatedPreviewWriter .cxx_destruct]
  -[CFXOverlayPickerAnimatedPreviewWriter completionBlock]
  -[CFXOverlayPickerAnimatedPreviewWriter setCompletionBlock:]
  -[CFXOverlayPickerAnimatedPreviewWriter overlay]
  -[CFXOverlayPickerAnimatedPreviewWriter previewDuration]
  -[CFXOverlayPickerAnimatedPreviewWriter destinationPath]
  -[CFXOverlayPickerAnimatedPreviewWriter setDestinationPath:]
  -[CFXOverlayPickerAnimatedPreviewWriter setOverlay:]
  -[CFXOverlayPickerAnimatedPreviewWriter writerQueue]
  -[CFXOverlayPickerAnimatedPreviewWriter frameProperties]
  -[CFXOverlayPickerAnimatedPreviewWriter setFrameProperties:]
  -[CFXOverlayPickerAnimatedPreviewWriter initWithOverlayEffectId:previewSizeInPixels:previewDuration:previewFrameRate:previewStartFrameIndex:]
  -[CFXOverlayPickerAnimatedPreviewWriter writeAnimatedPreviewToPath:completion:]
  -[CFXOverlayPickerAnimatedPreviewWriter CFX_initializeEffectForPreviewing]
  -[CFXOverlayPickerAnimatedPreviewWriter previewFrameRate]
  -[CFXOverlayPickerAnimatedPreviewWriter previewSizeInPixels]
  -[CFXOverlayPickerAnimatedPreviewWriter CFX_beginWriting]
  -[CFXOverlayPickerAnimatedPreviewWriter CFX_finishWriting]
  -[CFXOverlayPickerAnimatedPreviewWriter targetFrameCount]
  -[CFXOverlayPickerAnimatedPreviewWriter setPreviewGenerator:]
  -[CFXOverlayPickerAnimatedPreviewWriter setIsFirstAnimatedFrame:]
  -[CFXOverlayPickerAnimatedPreviewWriter CFX_writeNextEffectFrame]
  -[CFXOverlayPickerAnimatedPreviewWriter currentRenderTime]
  -[CFXOverlayPickerAnimatedPreviewWriter previewGenerator]
  -[CFXOverlayPickerAnimatedPreviewWriter currentFrameCount]
  -[CFXOverlayPickerAnimatedPreviewWriter setCurrentFrameCount:]
  -[CFXOverlayPickerAnimatedPreviewWriter isFirstAnimatedFrame]
  -[CFXOverlayPickerAnimatedPreviewWriter setCurrentRenderTime:]
  -[CFXOverlayPickerAnimatedPreviewWriter previewStartFrameIndex]
  -[CFXOverlayPickerAnimatedPreviewWriter setPreviewFrameRate:]
  -[CFXOverlayPickerAnimatedPreviewWriter setPreviewDuration:]
  -[CFXOverlayPickerAnimatedPreviewWriter setPreviewStartFrameIndex:]
  -[CFXOverlayPickerAnimatedPreviewWriter setTargetFrameCount:]


JTStillCompositionItem : JTMovieCompositionItem
  // instance methods
  -[JTStillCompositionItem initWithClip:timeScale:]
  -[JTStillCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[JTStillCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[JTStillCompositionItem hasVideoContent]
  -[JTStillCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[JTStillCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[JTStillCompositionItem needSilenceAtEnd]


CFXAnalyticsManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *analyticsDurationData
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[CFXAnalyticsManager sharedInstance]

  // instance methods
  -[CFXAnalyticsManager init]
  -[CFXAnalyticsManager setQueue:]
  -[CFXAnalyticsManager queue]
  -[CFXAnalyticsManager .cxx_destruct]
  -[CFXAnalyticsManager trackEventWithName:]
  -[CFXAnalyticsManager trackFilterWithEffectId:]
  -[CFXAnalyticsManager trackAnimojiWithEffectId:]
  -[CFXAnalyticsManager trackShapeWithEffectId:]
  -[CFXAnalyticsManager trackLabelWithEffectId:]
  -[CFXAnalyticsManager trackMessagesStickerWithEffectId:]
  -[CFXAnalyticsManager trackEmojiStickerWithEffectId:]
  -[CFXAnalyticsManager trackMediaSentWithAnimoji:video:frontCamera:filterCount:labelCount:messagesStickerCount:shapeCount:emojiStickerCount:]
  -[CFXAnalyticsManager checkIfEventExistsWithName:]
  -[CFXAnalyticsManager persistAnalyticsDataWithEventName:value:]
  -[CFXAnalyticsManager roundWithNumber:]
  -[CFXAnalyticsManager CFX_composedAnalyticsKeyWithAnimoji:video:frontCamera:effectType:]
  -[CFXAnalyticsManager appendAppbundleWithEvent:]
  -[CFXAnalyticsManager analyticsDurationData]
  -[CFXAnalyticsManager dictionaryWithEventName:value:]
  -[CFXAnalyticsManager isIncrementScalar:]
  -[CFXAnalyticsManager isDistribution:]
  -[CFXAnalyticsManager trackEventWithName:count:]
  -[CFXAnalyticsManager startTrackingTimeIntervalEventWithName:]
  -[CFXAnalyticsManager stopTrackingTimeIntervalEventWithName:]
  -[CFXAnalyticsManager setAnalyticsDurationData:]


JTOverlayEffect : JTTextEffect
 @property  float opacity
 @property  NSString *accessibilityOverlayEffectLabel
 @property  BOOL flipText
 @property  BOOL flipTail
 @property  JTTrackedEffectProperties *trackingProps

  // class methods
  +[JTOverlayEffect supportsSecureCoding]
  +[JTOverlayEffect effectIDToImageSequenceIDMap]

  // instance methods
  -[JTOverlayEffect isEqual:]
  -[JTOverlayEffect copyWithZone:]
  -[JTOverlayEffect encodeWithCoder:]
  -[JTOverlayEffect initWithCoder:]
  -[JTOverlayEffect .cxx_destruct]
  -[JTOverlayEffect opacity]
  -[JTOverlayEffect setOpacity:]
  -[JTOverlayEffect maxCharacters]
  -[JTOverlayEffect accessibilityName]
  -[JTOverlayEffect setForceRenderAtPosterFrame:]
  -[JTOverlayEffect setTransformAnimation:]
  -[JTOverlayEffect enablePresentationState:]
  -[JTOverlayEffect trackingProps]
  -[JTOverlayEffect initWithEffectID:]
  -[JTOverlayEffect isTextFlipped]
  -[JTOverlayEffect imageFrame:atPosterFrameTimeRelativeTo:basisOrigin:includeDropShadow:]
  -[JTOverlayEffect applyScaleToFitFrame:withComponentTime:relativeRect:]
  -[JTOverlayEffect setImageSequencePathToDownloadedAssets]
  -[JTOverlayEffect pickerScale]
  -[JTOverlayEffect setSingleLineScaleThreshold:]
  -[JTOverlayEffect setTrackingProps:]
  -[JTOverlayEffect customPickerRotation]
  -[JTOverlayEffect customPrimaryFillColor]
  -[JTOverlayEffect accessibilityOverlayEffectLabel]
  -[JTOverlayEffect setAccessibilityOverlayEffectLabel:]
  -[JTOverlayEffect serializableEffectParameters]
  -[JTOverlayEffect supportsFlippingText]
  -[JTOverlayEffect imagePoints:time:relativeTo:basisOrigin:includeDropShadow:]
  -[JTOverlayEffect imagePointsAtPosterFrameTime:time:relativeTo:basisOrigin:includeDropShadow:]
  -[JTOverlayEffect JT_convertBounds:relativeTo:basisOrigin:]
  -[JTOverlayEffect JT_convertTransform:relativeTo:basisOrigin:]
  -[JTOverlayEffect applyInverseOfTransformAnimation:withComponentTime:relativeRect:]
  -[JTOverlayEffect objectBoundsAtPosterFrame:relativeTo:basisOrigin:includeDropShadow:includeMasks:]
  -[JTOverlayEffect objectBounds:time:relativeTo:basisOrigin:includeDropShadow:includeMasks:]
  -[JTOverlayEffect transformAtPosterFrame:relativeTo:basisOrigin:]
  -[JTOverlayEffect transformAtTime:relativeTo:basisOrigin:]
  -[JTOverlayEffect objectTransformRelativeTo:basisOrigin:]
  -[JTOverlayEffect clipTransformAtTime:relativeTo:basisOrigin:]
  -[JTOverlayEffect JT_viewInfoForViewBounds:time:isPosterFrame:includeDropShadow:]
  -[JTOverlayEffect hitTest:time:relativeTo:basisOrigin:withMinimumOverlaySize:]
  -[JTOverlayEffect JT_isPoint:inPolyWithPoints:numPoints:withMinimumOverlaySize:]
  -[JTOverlayEffect hitTestAtPosterFrameTime:time:relativeTo:basisOrigin:withMinimumOverlaySize:]
  -[JTOverlayEffect hitAreaScale]
  -[JTOverlayEffect isAppearanceEqual:]
  -[JTOverlayEffect setRenderStartOffset:]
  -[JTOverlayEffect setFlipText:]
  -[JTOverlayEffect setFlipTail:]
  -[JTOverlayEffect isTailFlipped]
  -[JTOverlayEffect supportsFlippingTail]
  -[JTOverlayEffect imageFrame:relativeTo:basisOrigin:includeDropShadow:]
  -[JTOverlayEffect copyOfOverlayWithFrameAt:withClip:relativeToRect:currentPlaybackTime:]
  -[JTOverlayEffect viewInfoForViewBoundsAtPosterFrame:time:includeDropShadow:]
  -[JTOverlayEffect viewInfoForViewBounds:atTime:includeDropShadow:]
  -[JTOverlayEffect hitTest:time:relativeTo:basisOrigin:]
  -[JTOverlayEffect hitTestAtPosterFrameTime:time:relativeTo:basisOrigin:]
  -[JTOverlayEffect closeButtonInset]
  -[JTOverlayEffect includeDropShadowWhenPositioningCloseButton]


CFXEffectBrowserView : JTPassThroughContainerView
  // instance methods
  -[CFXEffectBrowserView pointInside:withEvent:]


CFXEffectBrowserViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <AVTAvatarPickerDelegate, CFXEffectPickerViewControllerDelegate, IMADockViewControllerDelegate>
 @property  <CFXEffectBrowserViewControllerDelegate> *delegate
 @property  CFXEffectPickerViewController *effectPickerViewController
 @property  UIView *messagesAppsDockContainerView
 @property  IMADockViewController *messagesAppsDockViewController
 @property  NSObject<OS_dispatch_semaphore> *animatedPreviewWritingSemaphore
 @property  NSObject<OS_dispatch_queue> *animatedPreviewWritingQueue
 @property  NSObject<OS_dispatch_group> *animatedPreviewProcessingGroup
 @property  UIViewController *contentPresenter
 @property  NSLayoutConstraint *madWidthConstraint
 @property  NSLayoutConstraint *madHeightConstraint
 @property  NSLayoutConstraint *madLeadingConstraint
 @property  NSLayoutConstraint *madTrailingConstraint
 @property  NSLayoutConstraint *madTopConstraint
 @property  NSLayoutConstraint *madBottomConstraint
 @property  NSLayoutConstraint *madExpandedAppButtonsHeightConstraint
 @property  NSString *selectedAppIdentifier
 @property  <CFXEffectBrowserContentPresenterDelegate> *contentPresenterDelegate
 @property  BOOL showAppIconBorders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIViewController *dockPresentationViewController
 @property  BOOL expandedAppShouldDismissOnDragSuccess
 @property  {CGSize=dd} expandedAppViewControllerSize

  // class methods
  +[CFXEffectBrowserViewController CFX_sizeOfImageAtURL:]
  +[CFXEffectBrowserViewController CFX_droppedSizeForSticker:dropTarget:]

  // instance methods
  -[CFXEffectBrowserViewController dealloc]
  -[CFXEffectBrowserViewController delegate]
  -[CFXEffectBrowserViewController setDelegate:]
  -[CFXEffectBrowserViewController .cxx_destruct]
  -[CFXEffectBrowserViewController loadView]
  -[CFXEffectBrowserViewController viewDidLoad]
  -[CFXEffectBrowserViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CFXEffectBrowserViewController viewDidLayoutSubviews]
  -[CFXEffectBrowserViewController addSticker:]
  -[CFXEffectBrowserViewController effectPickerViewController]
  -[CFXEffectBrowserViewController setEffectPickerViewController:]
  -[CFXEffectBrowserViewController avatarPicker:didSelectAvatarRecord:]
  -[CFXEffectBrowserViewController avatarPickerDidEndCameraSession:]
  -[CFXEffectBrowserViewController avatarPickerWillStartCameraSession:]
  -[CFXEffectBrowserViewController shouldRotateCellsForDeviceOrientation]
  -[CFXEffectBrowserViewController initWithDelegate:contentPresenter:]
  -[CFXEffectBrowserViewController setContentPresenterDelegate:]
  -[CFXEffectBrowserViewController setShowAppIconBorders:]
  -[CFXEffectBrowserViewController configureUIForOrientation]
  -[CFXEffectBrowserViewController hideBrowserAnimated:completion:]
  -[CFXEffectBrowserViewController refreshEffectBrowserForCameraFlip]
  -[CFXEffectBrowserViewController selectedAnimojiIdentifierForEffectBrowserViewController:]
  -[CFXEffectBrowserViewController localizedPromptForHidingAnimojiForEffectBrowserViewController:]
  -[CFXEffectBrowserViewController effectPickerViewController:didPickEffect:]
  -[CFXEffectBrowserViewController selectedFilterIdentifierForEffectPickerViewController:]
  -[CFXEffectBrowserViewController selectedAppIdentifier]
  -[CFXEffectBrowserViewController messagesAppsDockViewController]
  -[CFXEffectBrowserViewController initMessagesAppsDockViewController]
  -[CFXEffectBrowserViewController madTopConstraint]
  -[CFXEffectBrowserViewController madWidthConstraint]
  -[CFXEffectBrowserViewController madHeightConstraint]
  -[CFXEffectBrowserViewController madBottomConstraint]
  -[CFXEffectBrowserViewController madLeadingConstraint]
  -[CFXEffectBrowserViewController madTrailingConstraint]
  -[CFXEffectBrowserViewController removeEffectPickerViewController]
  -[CFXEffectBrowserViewController messagesAppsDockContainerView]
  -[CFXEffectBrowserViewController setMessagesAppsDockViewController:]
  -[CFXEffectBrowserViewController setMessagesAppsDockContainerView:]
  -[CFXEffectBrowserViewController contentPresenterDelegate]
  -[CFXEffectBrowserViewController setMadWidthConstraint:]
  -[CFXEffectBrowserViewController setMadHeightConstraint:]
  -[CFXEffectBrowserViewController setMadLeadingConstraint:]
  -[CFXEffectBrowserViewController setMadTrailingConstraint:]
  -[CFXEffectBrowserViewController setMadTopConstraint:]
  -[CFXEffectBrowserViewController setMadBottomConstraint:]
  -[CFXEffectBrowserViewController setMadExpandedAppButtonsHeightConstraint:]
  -[CFXEffectBrowserViewController madExpandedAppButtonsHeightConstraint]
  -[CFXEffectBrowserViewController CFX_updateAVTAvatarPickerforMessagesAppViewController:]
  -[CFXEffectBrowserViewController compactCurrentMessagesApp]
  -[CFXEffectBrowserViewController CFX_addSticker:atDropTarget:]
  -[CFXEffectBrowserViewController setSelectedAppIdentifier:]
  -[CFXEffectBrowserViewController displayPickerForEffectTypeIdentifier:messagesAppViewController:embedInMessageAppViewController:]
  -[CFXEffectBrowserViewController contentPresenter]
  -[CFXEffectBrowserViewController addSticker:atDropTarget:]
  -[CFXEffectBrowserViewController dockPresentationViewController]
  -[CFXEffectBrowserViewController didSelectAppWithBundleIdentifier:]
  -[CFXEffectBrowserViewController presentExpandedAppViewController:animated:completion:]
  -[CFXEffectBrowserViewController dismissExpandedAppViewController:animated:completion:]
  -[CFXEffectBrowserViewController expandedAppShouldDismissOnDragSuccess]
  -[CFXEffectBrowserViewController expandedAppViewControllerSize]
  -[CFXEffectBrowserViewController dockDidMagnify:]
  -[CFXEffectBrowserViewController showAppIconBorders]
  -[CFXEffectBrowserViewController commitAnimatedLayoutChanges]
  -[CFXEffectBrowserViewController animatedPreviewWritingSemaphore]
  -[CFXEffectBrowserViewController setAnimatedPreviewWritingSemaphore:]
  -[CFXEffectBrowserViewController animatedPreviewWritingQueue]
  -[CFXEffectBrowserViewController setAnimatedPreviewWritingQueue:]
  -[CFXEffectBrowserViewController animatedPreviewProcessingGroup]
  -[CFXEffectBrowserViewController setAnimatedPreviewProcessingGroup:]
  -[CFXEffectBrowserViewController setContentPresenter:]


JTEffectsPreviewGeneratorJob : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSArray *outputNodes
 @property  NSArray *callbackKeys

  // instance methods
  -[JTEffectsPreviewGeneratorJob init]
  -[JTEffectsPreviewGeneratorJob .cxx_destruct]
  -[JTEffectsPreviewGeneratorJob outputNodes]
  -[JTEffectsPreviewGeneratorJob callbackKeys]
  -[JTEffectsPreviewGeneratorJob initWithRenderOutputs:callbackKeys:]


JTCacheDictionary : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *dictionary
 @property  NSMutableOrderedSet *keys
 @property  NSObject<OS_dispatch_queue> *cacheQueue
 @property  unsigned long capacity
 @property  unsigned long count

  // instance methods
  -[JTCacheDictionary dealloc]
  -[JTCacheDictionary initWithCapacity:]
  -[JTCacheDictionary count]
  -[JTCacheDictionary removeAllObjects]
  -[JTCacheDictionary objectForKey:]
  -[JTCacheDictionary removeObjectForKey:]
  -[JTCacheDictionary setObject:forKey:]
  -[JTCacheDictionary .cxx_destruct]
  -[JTCacheDictionary dictionary]
  -[JTCacheDictionary objectsForKeys:notFoundMarker:]
  -[JTCacheDictionary addEntriesFromDictionary:]
  -[JTCacheDictionary keys]
  -[JTCacheDictionary setKeys:]
  -[JTCacheDictionary capacity]
  -[JTCacheDictionary setCapacity:]
  -[JTCacheDictionary cacheQueue]
  -[JTCacheDictionary highMemoryWarning]
  -[JTCacheDictionary JT_removeLeastRecentlyUsedIfAtCapacity]
  -[JTCacheDictionary JT_markRecentlyUsed:]


CFXMetadataValidator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXMetadataValidator validateARImageData:]
  +[CFXMetadataValidator validateFaceTrackedARFrame:]


JTFrameRateCalculator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long receivedRenderCount
 @property  unsigned long droppedRenderCount
 @property  unsigned long receivedDisplayFrameCount
 @property  unsigned long droppedDisplayFrameCount
 @property  double windowSize
 @property  NSDate *stateDate
 @property  NSString *name

  // instance methods
  -[JTFrameRateCalculator name]
  -[JTFrameRateCalculator .cxx_destruct]
  -[JTFrameRateCalculator setName:]
  -[JTFrameRateCalculator log:]
  -[JTFrameRateCalculator initWithWindowSize:]
  -[JTFrameRateCalculator windowSize]
  -[JTFrameRateCalculator setWindowSize:]
  -[JTFrameRateCalculator JT_restart]
  -[JTFrameRateCalculator stateDate]
  -[JTFrameRateCalculator receivedRenderCount]
  -[JTFrameRateCalculator droppedRenderCount]
  -[JTFrameRateCalculator droppedDisplayFrameCount]
  -[JTFrameRateCalculator receivedDisplayFrameCount]
  -[JTFrameRateCalculator setReceivedRenderCount:]
  -[JTFrameRateCalculator setDroppedRenderCount:]
  -[JTFrameRateCalculator setReceivedDisplayFrameCount:]
  -[JTFrameRateCalculator setDroppedDisplayFrameCount:]
  -[JTFrameRateCalculator setStateDate:]
  -[JTFrameRateCalculator tickReceived]
  -[JTFrameRateCalculator tickDropped]
  -[JTFrameRateCalculator tickFrameReceived]
  -[JTFrameRateCalculator tickDroppedDisplay]


JTReaderWriterExportController : JTExportController
 @property  float progress
 @property  int numberOfPasses
 @property  NSError *error
 @property  BOOL firstPassDone
 @property  PVVideoCompositing *customCompositor

  // instance methods
  -[JTReaderWriterExportController .cxx_destruct]
  -[JTReaderWriterExportController error]
  -[JTReaderWriterExportController setError:]
  -[JTReaderWriterExportController progress]
  -[JTReaderWriterExportController setProgress:]
  -[JTReaderWriterExportController cancelExport]
  -[JTReaderWriterExportController continueExportAfterDelay]
  -[JTReaderWriterExportController noteSessionProgressed:]
  -[JTReaderWriterExportController applyCompositionAspectRatioToAVPresetSize:compositionSize:]
  -[JTReaderWriterExportController mapAssetReaderStatusToExportStatus:]
  -[JTReaderWriterExportController mapAssetWriterStatusToExportStatus:]
  -[JTReaderWriterExportController updateSessionProgress]
  -[JTReaderWriterExportController updateStatusAndErrorFromReader:andWriter:]
  -[JTReaderWriterExportController fileTypeFromExtension]
  -[JTReaderWriterExportController videoCompressionSettings:]
  -[JTReaderWriterExportController videoDecompressionSettingsForVideoCompressionSettings:]
  -[JTReaderWriterExportController setCustomCompositor:]
  -[JTReaderWriterExportController customCompositor]
  -[JTReaderWriterExportController audioCompressionSettings]
  -[JTReaderWriterExportController setNumberOfPasses:]
  -[JTReaderWriterExportController setFirstPassDone:]
  -[JTReaderWriterExportController transferSampleBuffers:assetReader:assetWriterInput:assetWriter:timeRangeToExport:queue:pass:completionBlock:]
  -[JTReaderWriterExportController continueExportForNextPreset]
  -[JTReaderWriterExportController numberOfPasses]
  -[JTReaderWriterExportController firstPassDone]
  -[JTReaderWriterExportController testAspectRatio]


JTView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  BOOL debuggingUIEnabled

  // class methods
  +[JTView layerClass]

  // instance methods
  -[JTView layoutSubviews]
  -[JTView debuggingUIEnabled]
  -[JTView setDebuggingUIEnabled:]
  -[JTView enableDebugMode:]


JTEffect : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSSecureCoding, NSCopying>
 @property  NSString *effectID
 @property  BOOL isNone
 @property  int type
 @property  BOOL forceRenderAtPosterFrame
 @property  BOOL forceDisableLooping
 @property  NSDictionary *effectParameters
 @property  {CGSize=dd} renderSize
 @property  double outputAspect
 @property  BOOL renderEffectResourcesAreReady

  // class methods
  +[JTEffect supportsSecureCoding]
  +[JTEffect effectIDIsNone:]
  +[JTEffect posterFrameCannotBeCached:]
  +[JTEffect rotationFromAffineTransform:]
  +[JTEffect scaleFromAffineTransform:]
  +[JTEffect loopedRangeRenderCanBeCached:]

  // instance methods
  -[JTEffect dealloc]
  -[JTEffect isEqual:]
  -[JTEffect copyWithZone:]
  -[JTEffect type]
  -[JTEffect setType:]
  -[JTEffect encodeWithCoder:]
  -[JTEffect initWithCoder:]
  -[JTEffect .cxx_destruct]
  -[JTEffect displayName]
  -[JTEffect setParameter:forKey:]
  -[JTEffect isNone]
  -[JTEffect renderSize]
  -[JTEffect effectParameters]
  -[JTEffect setRenderSize:]
  -[JTEffect setEffectParameters:]
  -[JTEffect parameterForKey:]
  -[JTEffect accessibilityName]
  -[JTEffect effectID]
  -[JTEffect setForceRenderAtPosterFrame:]
  -[JTEffect enablePresentationState:]
  -[JTEffect renderEffect]
  -[JTEffect initWithEffectID:]
  -[JTEffect _cachedRenderEffect]
  -[JTEffect transform:basisOrigin:]
  -[JTEffect _convertRenderEffectRect:toBasisRect:basisOrigin:]
  -[JTEffect _convertRenderEffectPoints:toBasisRect:basisOrigin:]
  -[JTEffect _convertRenderEffectPoints:numPoints:toBasisRect:basisOrigin:]
  -[JTEffect _convertRenderEffectPoints:numPoints:fromBasisRect:basisOrigin:]
  -[JTEffect _affineTransformFromEffectRect:toSize:basisOrigin:]
  -[JTEffect rangeForPresentationRange:]
  -[JTEffect applyTransform:withComponentTime:relativeTo:basisOrigin:]
  -[JTEffect renderEffectResourcesAreReady]
  -[JTEffect loadRenderEffect]
  -[JTEffect setBuildInAnimation:]
  -[JTEffect serializableEffectParameters]
  -[JTEffect forceRenderAtPosterFrame]
  -[JTEffect setOutputAspect:]
  -[JTEffect isConfiguredForOutputAspect:]
  -[JTEffect setIsInInteractiveMode:]
  -[JTEffect isInInteractiveMode]
  -[JTEffect parametersClassWhitelist]
  -[JTEffect _createCachedRenderEffect_noLock]
  -[JTEffect outputAspect]
  -[JTEffect isConfiguredForOutputAspectMatchingSize:]
  -[JTEffect setForceDisableLooping:]
  -[JTEffect forceDisableLooping]
  -[JTEffect buildInAnimation]
  -[JTEffect setBuildOutAnimation:]
  -[JTEffect buildOutAnimation]
  -[JTEffect getParentTransformAnimation]
  -[JTEffect setParentTransformAnimation:]
  -[JTEffect setTransform:relativeTo:basisOrigin:]
  -[JTEffect setTopLevelAdditionalScale:]
  -[JTEffect removeTopLevelAdditionalScale]


JTImageMTKView : MTKView /System/Library/Frameworks/CoreImage.framework/CoreImage <JTImageViewRendering>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  JTImage *jtImage
 @property  long long renderingType
 @property  BOOL flipX
 @property  BOOL flipY
 @property  BOOL enableDebugDrawing

  // class methods
  +[JTImageMTKView buildSamplerStateWithDevice:addressMode:filter:]
  +[JTImageMTKView buildRenderPipelineWithLabel:vertexFunction:fragmentFunction:device:view:error:]

  // instance methods
  -[JTImageMTKView dealloc]
  -[JTImageMTKView initWithCoder:]
  -[JTImageMTKView .cxx_destruct]
  -[JTImageMTKView setContentMode:]
  -[JTImageMTKView layoutSubviews]
  -[JTImageMTKView drawRect:]
  -[JTImageMTKView updateTexture]
  -[JTImageMTKView initWithFrame:device:]
  -[JTImageMTKView renderingType]
  -[JTImageMTKView setJtImage:]
  -[JTImageMTKView setRenderingType:]
  -[JTImageMTKView updateDebugDrawing]
  -[JTImageMTKView jtImage]
  -[JTImageMTKView flipX]
  -[JTImageMTKView setFlipX:]
  -[JTImageMTKView flipY]
  -[JTImageMTKView setFlipY:]
  -[JTImageMTKView enableDebugDrawing]
  -[JTImageMTKView setEnableDebugDrawing:]
  -[JTImageMTKView cleanupTextures]
  -[JTImageMTKView cleanupTextureCache]
  -[JTImageMTKView setupTextureCache]
  -[JTImageMTKView JTImageMTKView_commonInit]
  -[JTImageMTKView configureRenderPipelineForColorAttachments:]
  -[JTImageMTKView updateVertices]


CFXReviewControlsViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
  // instance methods
  -[CFXReviewControlsViewController init]


CFXPlayButtonView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  CAShapeLayer *playControlMaskLayer
 @property  UIView *contentView
 @property  UIButton *playButton
 @property  UIImage *playImage
 @property  UIImage *pauseImage
 @property  <CFXPlayButtonViewDelegate> *delegate

  // instance methods
  -[CFXPlayButtonView initWithCoder:]
  -[CFXPlayButtonView delegate]
  -[CFXPlayButtonView setDelegate:]
  -[CFXPlayButtonView .cxx_destruct]
  -[CFXPlayButtonView contentView]
  -[CFXPlayButtonView setContentView:]
  -[CFXPlayButtonView initWithFrame:]
  -[CFXPlayButtonView layoutSubviews]
  -[CFXPlayButtonView playButton]
  -[CFXPlayButtonView setPlayButton:]
  -[CFXPlayButtonView playImage]
  -[CFXPlayButtonView pauseImage]
  -[CFXPlayButtonView setPlayImage:]
  -[CFXPlayButtonView setPauseImage:]
  -[CFXPlayButtonView playButtonTapped:]
  -[CFXPlayButtonView sharedInit]
  -[CFXPlayButtonView notifyPlaybackDidStart]
  -[CFXPlayButtonView notifyPlaybackDidStop]
  -[CFXPlayButtonView setPlayControlMaskLayer:]
  -[CFXPlayButtonView playControlMaskLayer]
  -[CFXPlayButtonView notifyWasTapped]


JTEffectsPreviewGenerationRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL scaleAnimationTransformInfoToOutputSize
 @property  PVImageBuffer *image
 @property  JTEffect *generatorEffect
 @property  NSArray *effectStack
 @property  {CGSize=dd} outputSize
 @property  {?=qiIq} renderTime
 @property  NSDictionary *customRenderingProperties
 @property  NSArray *pickerPreviewEffectList
 @property  {PVTransformAnimationInfo={?=qiIq}{CGPoint=dd}dd} animationTransformInfo
 @property  BOOL highQuality
 @property  int priority
 @property  unsigned int parentCode
 @property  unsigned int childCode

  // instance methods
  -[JTEffectsPreviewGenerationRequest .cxx_destruct]
  -[JTEffectsPreviewGenerationRequest priority]
  -[JTEffectsPreviewGenerationRequest setPriority:]
  -[JTEffectsPreviewGenerationRequest image]
  -[JTEffectsPreviewGenerationRequest outputSize]
  -[JTEffectsPreviewGenerationRequest highQuality]
  -[JTEffectsPreviewGenerationRequest setHighQuality:]
  -[JTEffectsPreviewGenerationRequest renderTime]
  -[JTEffectsPreviewGenerationRequest generatorJobWithGraphBuilder:]
  -[JTEffectsPreviewGenerationRequest parentCode]
  -[JTEffectsPreviewGenerationRequest setParentCode:]
  -[JTEffectsPreviewGenerationRequest childCode]
  -[JTEffectsPreviewGenerationRequest setChildCode:]
  -[JTEffectsPreviewGenerationRequest effectStack]
  -[JTEffectsPreviewGenerationRequest initWithInput:effectStack:outputSize:renderTime:]
  -[JTEffectsPreviewGenerationRequest setTransformAnimationInfo:scaleToOutput:]
  -[JTEffectsPreviewGenerationRequest setCustomRenderingProperties:]
  -[JTEffectsPreviewGenerationRequest initWithInputGenerator:effectStack:outputSize:renderTime:]
  -[JTEffectsPreviewGenerationRequest setAnimationTransformInfo:]
  -[JTEffectsPreviewGenerationRequest setPickerPreviewEffectList:]
  -[JTEffectsPreviewGenerationRequest animationTransformInfo]
  -[JTEffectsPreviewGenerationRequest generatorEffect]
  -[JTEffectsPreviewGenerationRequest scaleAnimationTransformInfoToOutputSize]
  -[JTEffectsPreviewGenerationRequest placeholderGeneratorBackground]
  -[JTEffectsPreviewGenerationRequest sourceTransform]
  -[JTEffectsPreviewGenerationRequest customRenderingProperties]
  -[JTEffectsPreviewGenerationRequest sourceIGNodeUsingGraphBuilder:]
  -[JTEffectsPreviewGenerationRequest setScaleAnimationTransformInfoToOutputSize:]
  -[JTEffectsPreviewGenerationRequest renderWithInputs:inputIDs:time:metadata:]
  -[JTEffectsPreviewGenerationRequest pickerPreviewEffectList]


CFXControlsViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  UIView *controlsContainerView
 @property  UIView *effectsPickerDrawer
 @property  UIView *effectsBrowser
 @property  BOOL usesInternalCaptureSession
 @property  NSLayoutConstraint *controlsContainerViewHeightConstraint
 @property  NSLayoutConstraint *controlsContainerViewWidthConstraint
 @property  NSLayoutConstraint *controlsContainerViewTrailingConstraint
 @property  NSLayoutConstraint *controlsContainerViewLeadingConstraint
 @property  NSLayoutConstraint *controlsContainerViewTopConstraint
 @property  CFXEffectBrowserContentPresenterViewController *effectBrowserContentPresenterViewController

  // instance methods
  -[CFXControlsViewController .cxx_destruct]
  -[CFXControlsViewController viewDidLoad]
  -[CFXControlsViewController setEffectsPickerDrawer:]
  -[CFXControlsViewController controlsContainerViewTopConstraint]
  -[CFXControlsViewController controlsContainerViewLeadingConstraint]
  -[CFXControlsViewController controlsContainerViewTrailingConstraint]
  -[CFXControlsViewController controlsContainerViewWidthConstraint]
  -[CFXControlsViewController controlsContainerViewHeightConstraint]
  -[CFXControlsViewController controlsContainerView]
  -[CFXControlsViewController effectBrowserContentPresenterViewController]
  -[CFXControlsViewController setEffectsBrowser:]
  -[CFXControlsViewController effectsPickerSnapshot]
  -[CFXControlsViewController effectsPickerCenter]
  -[CFXControlsViewController effectsPickerDrawer]
  -[CFXControlsViewController usesInternalCaptureSession]
  -[CFXControlsViewController setUsesInternalCaptureSession:]
  -[CFXControlsViewController setEffectBrowserContentPresenterViewController:]
  -[CFXControlsViewController effectsBrowser]
  -[CFXControlsViewController setControlsContainerView:]
  -[CFXControlsViewController setControlsContainerViewHeightConstraint:]
  -[CFXControlsViewController setControlsContainerViewWidthConstraint:]
  -[CFXControlsViewController setControlsContainerViewTrailingConstraint:]
  -[CFXControlsViewController setControlsContainerViewLeadingConstraint:]
  -[CFXControlsViewController setControlsContainerViewTopConstraint:]


CFXRemoteCommandClient : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSDistributedNotificationCenter *distributedNotificationCenter

  // instance methods
  -[CFXRemoteCommandClient init]
  -[CFXRemoteCommandClient .cxx_destruct]
  -[CFXRemoteCommandClient distributedNotificationCenter]
  -[CFXRemoteCommandClient setDistributedNotificationCenter:]
  -[CFXRemoteCommandClient addShapeWithEffectIdentifier:]
  -[CFXRemoteCommandClient addStickerWithURL:offset:scale:rotation:]
  -[CFXRemoteCommandClient addTextWithEffectIdentifier:string:]
  -[CFXRemoteCommandClient removeEffectsWithEffectTypeIdentifiers:]
  -[CFXRemoteCommandClient setAnimojiWithEffectIdentifier:]
  -[CFXRemoteCommandClient setFilterWithEffectIdentifier:]


JTThreadSafeArray : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *array
 @property  NSObject<OS_dispatch_queue> *concurrentQueue
 @property  unsigned long count

  // instance methods
  -[JTThreadSafeArray init]
  -[JTThreadSafeArray count]
  -[JTThreadSafeArray addObject:]
  -[JTThreadSafeArray removeObject:]
  -[JTThreadSafeArray array]
  -[JTThreadSafeArray objectAtIndex:]
  -[JTThreadSafeArray insertObject:atIndex:]
  -[JTThreadSafeArray removeObjectAtIndex:]
  -[JTThreadSafeArray removeAllObjects]
  -[JTThreadSafeArray indexOfObject:]
  -[JTThreadSafeArray containsObject:]
  -[JTThreadSafeArray replaceObjectAtIndex:withObject:]
  -[JTThreadSafeArray enumerateObjectsWithOptions:usingBlock:]
  -[JTThreadSafeArray objectsAtIndexes:]
  -[JTThreadSafeArray removeObjectsInArray:]
  -[JTThreadSafeArray setArray:]
  -[JTThreadSafeArray enumerateObjectsUsingBlock:]
  -[JTThreadSafeArray .cxx_destruct]
  -[JTThreadSafeArray sortUsingSelector:]
  -[JTThreadSafeArray moveObjectAtIndex:toIndex:]
  -[JTThreadSafeArray concurrentQueue]
  -[JTThreadSafeArray setConcurrentQueue:]
  -[JTThreadSafeArray copyOfArray]


CFXFilterPickerCollectionViewCell : CFXEffectPickerCollectionViewCell
 @property  UILabel *titleView
 @property  UIView *selectionView
 @property  BOOL compactMode

  // class methods
  +[CFXFilterPickerCollectionViewCell selectionColor]

  // instance methods
  -[CFXFilterPickerCollectionViewCell .cxx_destruct]
  -[CFXFilterPickerCollectionViewCell prepareForReuse]
  -[CFXFilterPickerCollectionViewCell setEffect:]
  -[CFXFilterPickerCollectionViewCell setSelected:]
  -[CFXFilterPickerCollectionViewCell titleView]
  -[CFXFilterPickerCollectionViewCell setTitleView:]
  -[CFXFilterPickerCollectionViewCell selectionView]
  -[CFXFilterPickerCollectionViewCell setSelectionView:]
  -[CFXFilterPickerCollectionViewCell setCompactMode:]
  -[CFXFilterPickerCollectionViewCell CFX_updateLayerProperties]
  -[CFXFilterPickerCollectionViewCell isInCompactMode]
  -[CFXFilterPickerCollectionViewCell CFX_updateTitle]
  -[CFXFilterPickerCollectionViewCell CFX_updateSelectionView]
  -[CFXFilterPickerCollectionViewCell configureCellAppearence]


CFXEffectEditorView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation <UIGestureRecognizerDelegate, JTTextEffectEditorViewDelegate, JTOverlayDebugViewDelegate>
 @property  CFXEffect *editEffect
 @property  BOOL isEditing
 @property  BOOL isTextEditing
 @property  {CGAffineTransform=dddddd} editTransform
 @property  double displayScale
 @property  BOOL effectWasEdited
 @property  UIButton *removeButton
 @property  JTOverlayDebugView *debugOverlayView
 @property  JTTextEffectEditorView *textEditorView
 @property  JTEffectsPreviewGenerator *previewGenerator
 @property  JTImageView *editEffectPreview
 @property  NSObject<OS_dispatch_queue> *effectRenderingQueue
 @property  NSString *oldEditText
 @property  BOOL truncateTextToMaximumLength
 @property  unsigned long maximumTextLength
 @property  CADisplayLink *editControlsTrackingDisplayLink
 @property  CFXFaceReticleView *faceTrackingReticle
 @property  {CGPoint=dd} lastTouchLocation
 @property  {CGPoint=dd} lastSpacingBetweenTouchAndCenterOfEffect
 @property  JTEffectAnimationView *effectAnimationView
 @property  CADisplayLink *effectAnimationDisplayLink
 @property  unsigned long appliedEditingGestures
 @property  double lastFaceRectacleUpdateTime
 @property  double lastEffectMovedNotifyTime
 @property  BOOL isEndingEditing
 @property  BOOL isBeginningEditing
 @property  NSMutableArray *beginEditingCompletionBlocks
 @property  NSMutableArray *endEditingCompletionBlocks
 @property  <CFXEffectEditorViewDelegate> *delegate
 @property  unsigned long mode
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} textEditingFrame
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXEffectEditorView dealloc]
  -[CFXEffectEditorView delegate]
  -[CFXEffectEditorView setDelegate:]
  -[CFXEffectEditorView .cxx_destruct]
  -[CFXEffectEditorView mode]
  -[CFXEffectEditorView displayScale]
  -[CFXEffectEditorView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CFXEffectEditorView layoutSubviews]
  -[CFXEffectEditorView isEditing]
  -[CFXEffectEditorView didRotate:]
  -[CFXEffectEditorView didTap:]
  -[CFXEffectEditorView setDisplayScale:]
  -[CFXEffectEditorView setIsEditing:]
  -[CFXEffectEditorView handlePanGesture:]
  -[CFXEffectEditorView handlePinchGesture:]
  -[CFXEffectEditorView setIsBeginningEditing:]
  -[CFXEffectEditorView isBeginningEditing]
  -[CFXEffectEditorView isEndingEditing]
  -[CFXEffectEditorView setIsEndingEditing:]
  -[CFXEffectEditorView didPan:]
  -[CFXEffectEditorView textEditingFrame]
  -[CFXEffectEditorView editEffect]
  -[CFXEffectEditorView handleRotateGesture:]
  -[CFXEffectEditorView initWithMode:delegate:]
  -[CFXEffectEditorView beginEditingEffect:]
  -[CFXEffectEditorView endEditingAnimated:withCompletionBlock:]
  -[CFXEffectEditorView beginTextEditing]
  -[CFXEffectEditorView beginEditingEffect:animated:withCompletionBlock:]
  -[CFXEffectEditorView notifyEffectTransformDidChange]
  -[CFXEffectEditorView notifyEffectTrackingDidChangeToType:]
  -[CFXEffectEditorView setPreviewGenerator:]
  -[CFXEffectEditorView previewGenerator]
  -[CFXEffectEditorView CFX_setupGestures]
  -[CFXEffectEditorView CFX_setupControls]
  -[CFXEffectEditorView CFX_setUserInteractionEnabledIfPossible:]
  -[CFXEffectEditorView editControlsTrackingDisplayLink]
  -[CFXEffectEditorView effectAnimationDisplayLink]
  -[CFXEffectEditorView CFX_effectPreviewBoundsDidChange]
  -[CFXEffectEditorView CFX_updateEditControlsLayout]
  -[CFXEffectEditorView CFX_updateTextEditFieldLayout]
  -[CFXEffectEditorView effectRenderingQueue]
  -[CFXEffectEditorView CFX_previewEditEffectIfNeeded]
  -[CFXEffectEditorView didPinch:]
  -[CFXEffectEditorView CFX_isPreviewingEditEffect]
  -[CFXEffectEditorView CFX_endEditingEffect]
  -[CFXEffectEditorView CFX_beginEditingEffect:isAnimating:]
  -[CFXEffectEditorView CFX_beginTextEditing]
  -[CFXEffectEditorView isTextEditing]
  -[CFXEffectEditorView CFX_hideEditControls]
  -[CFXEffectEditorView appliedEditingGestures]
  -[CFXEffectEditorView setAppliedEditingGestures:]
  -[CFXEffectEditorView CFX_scaleEffect:]
  -[CFXEffectEditorView CFX_showEditControls]
  -[CFXEffectEditorView CFX_rotateEffect:]
  -[CFXEffectEditorView updateSpacingBetweenTouchAndCenterOfEffectWithGesture:]
  -[CFXEffectEditorView setLastTouchLocation:]
  -[CFXEffectEditorView lastTouchLocation]
  -[CFXEffectEditorView setLastSpacingBetweenTouchAndCenterOfEffect:]
  -[CFXEffectEditorView CFX_updateExternalEffectTrackingRunningState]
  -[CFXEffectEditorView CFX_addBeginEditingCompletionBlock:]
  -[CFXEffectEditorView beginEditingCompletionBlocks]
  -[CFXEffectEditorView setBeginEditingCompletionBlocks:]
  -[CFXEffectEditorView CFX_performTextEditOnlyModeEnterAnimationWithCompletionBlock:]
  -[CFXEffectEditorView CFX_useFaceReticle]
  -[CFXEffectEditorView faceTrackingReticle]
  -[CFXEffectEditorView CFX_addEndEditingCompletionBlock:]
  -[CFXEffectEditorView removeButton]
  -[CFXEffectEditorView setEditEffect:]
  -[CFXEffectEditorView CFX_stopTrackingExternalEffectChanges]
  -[CFXEffectEditorView endEditingCompletionBlocks]
  -[CFXEffectEditorView setEndEditingCompletionBlocks:]
  -[CFXEffectEditorView CFX_performTextEditOnlyModeExitAnimationWithCompletionBlock:]
  -[CFXEffectEditorView CFX_endTextEditing:]
  -[CFXEffectEditorView CFX_textEditingFrame]
  -[CFXEffectEditorView setEffectWasEdited:]
  -[CFXEffectEditorView setEditTransform:]
  -[CFXEffectEditorView CFX_beginPreviewingEditEffect]
  -[CFXEffectEditorView CFX_endPreviewingEditEffect]
  -[CFXEffectEditorView editTransform]
  -[CFXEffectEditorView CFX_applyEffectTransformChanges]
  -[CFXEffectEditorView lastSpacingBetweenTouchAndCenterOfEffect]
  -[CFXEffectEditorView lastEffectMovedNotifyTime]
  -[CFXEffectEditorView setLastEffectMovedNotifyTime:]
  -[CFXEffectEditorView CFX_boundsInPixels]
  -[CFXEffectEditorView CFX_isRemoveAvailableInCurrentMode]
  -[CFXEffectEditorView setRemoveButton:]
  -[CFXEffectEditorView tapRemoveButton:]
  -[CFXEffectEditorView setFaceTrackingReticle:]
  -[CFXEffectEditorView setDebugOverlayView:]
  -[CFXEffectEditorView debugOverlayView]
  -[CFXEffectEditorView CFX_hideEditControls:]
  -[CFXEffectEditorView CFX_isRemoveAlwaysAvailableInCurrentMode]
  -[CFXEffectEditorView CFX_updateDebugOverlayViews]
  -[CFXEffectEditorView CFX_removeEffect]
  -[CFXEffectEditorView externalEffectTrackingDisplayLinkFired:]
  -[CFXEffectEditorView setEditControlsTrackingDisplayLink:]
  -[CFXEffectEditorView CFX_startTrackingExternalEffectChanges]
  -[CFXEffectEditorView CFX_updateOverlayForTranslation]
  -[CFXEffectEditorView CFX_updateTrackingTypeForTouchLocation]
  -[CFXEffectEditorView lastFaceRectacleUpdateTime]
  -[CFXEffectEditorView setLastFaceRectacleUpdateTime:]
  -[CFXEffectEditorView CFX_getTextEditingProperties]
  -[CFXEffectEditorView setIsTextEditing:]
  -[CFXEffectEditorView setOldEditText:]
  -[CFXEffectEditorView setMaximumTextLength:]
  -[CFXEffectEditorView setTextEditorView:]
  -[CFXEffectEditorView textEditorView]
  -[CFXEffectEditorView setTruncateTextToMaximumLength:]
  -[CFXEffectEditorView oldEditText]
  -[CFXEffectEditorView CFX_updateEffectText:updateTextProperties:]
  -[CFXEffectEditorView truncateTextToMaximumLength]
  -[CFXEffectEditorView maximumTextLength]
  -[CFXEffectEditorView setEditEffectPreview:]
  -[CFXEffectEditorView editEffectPreview]
  -[CFXEffectEditorView CFX_effectAnimationDisplayLinkFired:]
  -[CFXEffectEditorView setEffectAnimationDisplayLink:]
  -[CFXEffectEditorView CFX_applyEffectAnimationView]
  -[CFXEffectEditorView effectAnimationView]
  -[CFXEffectEditorView setEffectAnimationView:]
  -[CFXEffectEditorView CFX_startApplyingEffectAnimationViewDisplayLink]
  -[CFXEffectEditorView CFX_springForTextEditAnimation]
  -[CFXEffectEditorView CFX_stopApplyingEffectAnimationViewDisplayLink]
  -[CFXEffectEditorView CFX_forceHideEditControls]
  -[CFXEffectEditorView isDrawOverlayBoundsOptionShowAdditionalRectsEnabled]
  -[CFXEffectEditorView textEffectEditorView:textChanged:shouldUpdateTextEditingProperties:]
  -[CFXEffectEditorView textEffectEditorView:shouldChangeTextInRange:replacementText:]
  -[CFXEffectEditorView overlayDebugViewShowDocumentBoundingBox]
  -[CFXEffectEditorView overlayDebugViewShowObjectAlignedBoundingBox]
  -[CFXEffectEditorView overlayDebugViewShowMidpoint]
  -[CFXEffectEditorView overlayDebugViewShowCornerPoints]
  -[CFXEffectEditorView overlayDebugViewShowNonTrackedWhenTracking]
  -[CFXEffectEditorView overlayDebugViewAdditionalNonTrackedRectsToDraw]
  -[CFXEffectEditorView overlayDebugViewAdditionalTrackedRectsToDraw]
  -[CFXEffectEditorView endTextEditing:]
  -[CFXEffectEditorView effectWasEdited]


JTPickerCameraSource : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableSet *registeredPickers
 @property  NSObject<OS_dispatch_queue> *registeredPickersQueue
 @property  PVLivePlayerCameraSource *registeredPickersSource
 @property  PVLivePlayerCameraSource *pickerSource
 @property  BOOL isPickerPreviewing

  // class methods
  +[JTPickerCameraSource sharedInstance]

  // instance methods
  -[JTPickerCameraSource init]
  -[JTPickerCameraSource .cxx_destruct]
  -[JTPickerCameraSource registerPickerAsPreviewingWithObject:]
  -[JTPickerCameraSource pickerSource]
  -[JTPickerCameraSource unregisterPickerAsPreviewingWithObject:]
  -[JTPickerCameraSource registeredPickersQueue]
  -[JTPickerCameraSource registeredPickers]
  -[JTPickerCameraSource registeredPickersSource]
  -[JTPickerCameraSource setRegisteredPickersSource:]
  -[JTPickerCameraSource isPickerPreviewing]
  -[JTPickerCameraSource setRegisteredPickers:]
  -[JTPickerCameraSource setRegisteredPickersQueue:]


CFXFeedbackController : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  _UIButtonFeedbackGenerator *_shutterButtonLatchingOnFeedbackGenerator
 @property  _UIButtonFeedbackGenerator *_shutterButtonLatchingOffFeedbackGenerator
 @property  _UIButtonFeedbackGenerator *_shutterButtonMomentaryFeedbackGenerator
 @property  NSMutableSet *_activePairedFeedbackGenerators
 @property  CUShutterButton *shutterButton
 @property  unsigned long feedbackToPerform

  // instance methods
  -[CFXFeedbackController init]
  -[CFXFeedbackController .cxx_destruct]
  -[CFXFeedbackController shutterButton]
  -[CFXFeedbackController _feedbackGeneratorForPairedFeedback:]
  -[CFXFeedbackController _activePairedFeedbackGenerators]
  -[CFXFeedbackController _debugStringForPairedFeedback:]
  -[CFXFeedbackController _shutterButtonMomentaryFeedbackGenerator]
  -[CFXFeedbackController _shutterButtonLatchingOnFeedbackGenerator]
  -[CFXFeedbackController _shutterButtonLatchingOffFeedbackGenerator]
  -[CFXFeedbackController prepareButtonFeedback:]
  -[CFXFeedbackController performPressButtonFeedback:]
  -[CFXFeedbackController performReleaseButtonFeedback:]
  -[CFXFeedbackController initWithShutterButton:]
  -[CFXFeedbackController shutterButtonDown:]
  -[CFXFeedbackController shutterButtonUp:]
  -[CFXFeedbackController shutterButtonFeedbackForCurrentConfiguration]
  -[CFXFeedbackController setFeedbackToPerform:]
  -[CFXFeedbackController feedbackToPerform]


JTAnimation : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTAnimation performAnimation:duration:completion:]
  +[JTAnimation performAnimation:curve:duration:completion:delay:userInteractionEnabled:]
  +[JTAnimation performWithAnimator:animation:duration:completion:delay:userInteractionEnabled:]
  +[JTAnimation performAnimation:timingParameters:duration:completion:delay:userInteractionEnabled:]
  +[JTAnimation performAnimation:timingParameters:duration:completion:delay:]


CFXCaptureViewController : UIViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <CFXEffectEditorViewDelegate, CFXFullScreenTextEditViewControllerDelegate, JTPassThroughContainerViewDelegate, CAMControlVisibilityUpdateDelegate, CAMZoomControlDelegate, CAMZoomSliderDelegate, CFXAnimojiTrackingLossDelegate, CAMDynamicShutterControlDelegate, CAMControlStatusBarDelegate, CFXLiveCaptureViewControllerDelegate, CFXCameraControlsViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView *cameraControlsContainerView
 @property  NSLayoutConstraint *topBarTopConstraint
 @property  NSLayoutConstraint *topBarContaineHeightConstraint
 @property  CAMTopBar *topBar
 @property  CAMElapsedTimeView *elapsedTimeView
 @property  PUReviewScreenDoneButton *doneButton
 @property  CAMFlashButton *flashButton
 @property  CFXViewfinderFlipTransition *viewfinderFlipTransition
 @property  CAMSnapshotView *liveCaptureContainerSnapshot
 @property  CAMZoomControl *zoomControl
 @property  CAMZoomSlider *zoomSlider
 @property  double zoomFactorAtPinchStart
 @property  BOOL isRecording
 @property  BOOL observingOrientationChanges
 @property  unsigned long appliedDirectOverlayEditingGestures
 @property  BOOL dockIsMagnified
 @property  double dockMagnifiedHeightDelta
 @property  CFXEffectBrowserContentPresenterViewController *effectBrowserContentPresenterViewController
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} zoomControlFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} zoomSliderFrame
 @property  BOOL captureContainerUncroppedFrameWasCalculatedWithContentRect
 @property  BOOL cameraIsFlipping
 @property  JTPassThroughContainerView *effectEditorContainerView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} presentationRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} externalUncroppedPresentationRect
 @property  BOOL configuredForOrientation
 @property  CFXFaceReticleView *animojiTrackingLossReticle
 @property  UIView *animojiReticleFacePromptView
 @property  BOOL isShowingAnimojiReticle
 @property  NSLayoutConstraint *facePromptLabelYConstraint
 @property  UIView *presentationView
 @property  CAMViewfinderReticleView *reticleView
 @property  UIView *bottomControlsContainer
 @property  CAMDynamicShutterControl *dynamicShutterControl
 @property  CAMControlStatusBar *controlStatusBar
 @property  {?=qqqqBqqq} dynamicShutterSettings
 @property  BOOL switchedToVideoMode
 @property  JTThreadSafeArray *runOnceAnimatedOverlays
 @property  CFXLiveCaptureViewController *cameraViewController
 @property  NSObject<OS_dispatch_group> *editingOverlayWithGestureGroup
 @property  CFXEffectEditorView *effectEditor
 @property  <CFXCaptureViewControllerDelegate> *delegate
 @property  CFXControlsViewController *cameraControls
 @property  long long aspectRatioCrop
 @property  double userInterfaceAlpha
 @property  long long captureMode
 @property  long long flashMode
 @property  CFXEffectComposition *composition
 @property  UIView *effectsPickerDrawer
 @property  BOOL useLocalCameraViewfinder
 @property  BOOL livePlayerIsSaturated
 @property  UIView *nonTransformedContainerView
 @property  NSLayoutConstraint *captureControlsContainerHeightConstraint
 @property  NSLayoutConstraint *captureControlsContainerWidthConstraint
 @property  NSLayoutConstraint *captureControlsContainerTrailingConstraint
 @property  NSLayoutConstraint *captureControlsContainerLeadingConstraint
 @property  NSLayoutConstraint *captureControlsContainerTopConstraint
 @property  UIView *liveCaptureContainer
 @property  UIView *liveCaptureContainerContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXCaptureViewController dealloc]
  -[CFXCaptureViewController delegate]
  -[CFXCaptureViewController setDelegate:]
  -[CFXCaptureViewController .cxx_destruct]
  -[CFXCaptureViewController observeValueForKeyPath:ofObject:change:context:]
  -[CFXCaptureViewController viewWillAppear:]
  -[CFXCaptureViewController viewWillDisappear:]
  -[CFXCaptureViewController viewDidLoad]
  -[CFXCaptureViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CFXCaptureViewController viewDidAppear:]
  -[CFXCaptureViewController shouldPerformSegueWithIdentifier:sender:]
  -[CFXCaptureViewController prepareForSegue:sender:]
  -[CFXCaptureViewController presentationView]
  -[CFXCaptureViewController setDoneButton:]
  -[CFXCaptureViewController doneButton]
  -[CFXCaptureViewController presentationRect]
  -[CFXCaptureViewController composition]
  -[CFXCaptureViewController flashMode]
  -[CFXCaptureViewController setFlashMode:]
  -[CFXCaptureViewController isRecording]
  -[CFXCaptureViewController doneButtonTapped:]
  -[CFXCaptureViewController setCaptureMode:]
  -[CFXCaptureViewController setComposition:]
  -[CFXCaptureViewController setCameraViewController:]
  -[CFXCaptureViewController cameraViewController]
  -[CFXCaptureViewController setTopBar:]
  -[CFXCaptureViewController topBar]
  -[CFXCaptureViewController setPresentationView:]
  -[CFXCaptureViewController setPresentationRect:]
  -[CFXCaptureViewController setIsRecording:]
  -[CFXCaptureViewController handlePinchGestureRecognizer:]
  -[CFXCaptureViewController setEffectsPickerDrawer:]
  -[CFXCaptureViewController flashModeDidChange]
  -[CFXCaptureViewController controlStatusBar]
  -[CFXCaptureViewController elapsedTimeView]
  -[CFXCaptureViewController zoomControl]
  -[CFXCaptureViewController zoomSliderDidBeginAutozooming:]
  -[CFXCaptureViewController zoomSliderDidEndAutozooming:]
  -[CFXCaptureViewController zoomSliderDidEndZooming:]
  -[CFXCaptureViewController updateControlVisibilityAnimated:]
  -[CFXCaptureViewController setFlashButton:]
  -[CFXCaptureViewController flashButton]
  -[CFXCaptureViewController zoomControl:didChangeZoomFactor:interactionType:]
  -[CFXCaptureViewController canToggleBetweenZoomFactorsForZoomControl:]
  -[CFXCaptureViewController toggleBetweenZoomFactorsForZoomControl:]
  -[CFXCaptureViewController captureMode]
  -[CFXCaptureViewController aspectRatioCrop]
  -[CFXCaptureViewController setAspectRatioCrop:]
  -[CFXCaptureViewController setElapsedTimeView:]
  -[CFXCaptureViewController setZoomSlider:]
  -[CFXCaptureViewController setZoomControl:]
  -[CFXCaptureViewController dynamicShutterControlDidShortPress:]
  -[CFXCaptureViewController dynamicShutterControlGesturesDidBegin:]
  -[CFXCaptureViewController dynamicShutterControlGesturesDidEnd:]
  -[CFXCaptureViewController dynamicShutterControlGesturesDidCancel:]
  -[CFXCaptureViewController dynamicShutterControlDidStart:]
  -[CFXCaptureViewController dynamicShutterControlDidStop:]
  -[CFXCaptureViewController dynamicShutterControlDidPressLockButton:]
  -[CFXCaptureViewController dynamicShutterControlDidPresentCounter:]
  -[CFXCaptureViewController dynamicShutterControlDidDismissCounter:]
  -[CFXCaptureViewController shutterControlTouchAttemptedWhileDisabled:]
  -[CFXCaptureViewController controlStatusBar:didCreateIndicatorForType:]
  -[CFXCaptureViewController controlStatusBar:didReceiveTapInIndicatorForType:]
  -[CFXCaptureViewController zoomSlider]
  -[CFXCaptureViewController cameraDidStop]
  -[CFXCaptureViewController updateUIForDevicePosition:]
  -[CFXCaptureViewController cameraControls]
  -[CFXCaptureViewController setCaptureControlsContainerTopConstraint:]
  -[CFXCaptureViewController setCaptureControlsContainerLeadingConstraint:]
  -[CFXCaptureViewController setCaptureControlsContainerTrailingConstraint:]
  -[CFXCaptureViewController setCaptureControlsContainerWidthConstraint:]
  -[CFXCaptureViewController setCaptureControlsContainerHeightConstraint:]
  -[CFXCaptureViewController effectBrowserContentPresenterViewController]
  -[CFXCaptureViewController setLiveCaptureViewController:]
  -[CFXCaptureViewController liveCaptureContainer]
  -[CFXCaptureViewController liveCaptureContainerContainer]
  -[CFXCaptureViewController setLiveCaptureContainer:]
  -[CFXCaptureViewController setLiveCaptureContainerContainer:]
  -[CFXCaptureViewController setNonTransformedContainerView:]
  -[CFXCaptureViewController cameraDidStart]
  -[CFXCaptureViewController nonTransformedContainerView]
  -[CFXCaptureViewController liveCaptureSnapshot]
  -[CFXCaptureViewController effectsPickerDrawer]
  -[CFXCaptureViewController setUseLocalCameraViewfinder:]
  -[CFXCaptureViewController userInterfaceAlpha]
  -[CFXCaptureViewController setUserInterfaceAlpha:]
  -[CFXCaptureViewController configureUIForOrientation]
  -[CFXCaptureViewController removeLiveCaptureSnapshot]
  -[CFXCaptureViewController removeAnimojiTrackingReticle]
  -[CFXCaptureViewController showLiveCaptureSnapshotBlurred:animated:completion:]
  -[CFXCaptureViewController saveLiveCaptureSnapshotForReview]
  -[CFXCaptureViewController removeAllEffectsAnimated:]
  -[CFXCaptureViewController setLiveCapturePresentationFrame:withContentRect:]
  -[CFXCaptureViewController removeEffectsForCameraSwitch]
  -[CFXCaptureViewController livePlayerIsSaturated]
  -[CFXCaptureViewController willDropCameraFrame]
  -[CFXCaptureViewController addOverlayEffect:atScreenLocation:atScreenSize:rotationAngle:]
  -[CFXCaptureViewController removeAllEffectsOfType:animated:]
  -[CFXCaptureViewController addEffect:]
  -[CFXCaptureViewController updateUIForDockMagnify:dockHeightDelta:]
  -[CFXCaptureViewController updateUIForVideoRecording:]
  -[CFXCaptureViewController addOverlayEffect:atNormalizedPlanePoint:scale:rotationAngle:]
  -[CFXCaptureViewController addEffect:allowImmediateTextEditing:]
  -[CFXCaptureViewController liveCaptureViewController:didRenderFrame:]
  -[CFXCaptureViewController useLocalCameraViewfinder]
  -[CFXCaptureViewController liveCaptureViewController:livePreviewTappedAtNormalizedPoint:]
  -[CFXCaptureViewController liveCaptureViewController:livePreviewPannedAtNormalizedPoint:gesture:]
  -[CFXCaptureViewController liveCaptureViewController:livePreviewPinchedAtNormalizedCenterPoint:gesture:]
  -[CFXCaptureViewController liveCaptureViewController:livePreviewRotatedAtNormalizedCenterPoint:gesture:]
  -[CFXCaptureViewController liveCaptureViewController:livePreviewDoubleTappedAtNormalizedCenterPoint:gesture:]
  -[CFXCaptureViewController shutdownLivePlayer]
  -[CFXCaptureViewController insertCamBottomBar:]
  -[CFXCaptureViewController doneButtonForCameraControlsViewController:]
  -[CFXCaptureViewController flashButtonForCameraControlsViewController:]
  -[CFXCaptureViewController needsBlackBackgroundForCTMControls]
  -[CFXCaptureViewController dockIsMagnified]
  -[CFXCaptureViewController setDockIsMagnified:]
  -[CFXCaptureViewController setDockMagnifiedHeightDelta:]
  -[CFXCaptureViewController cameraControlsViewControllerEffectsButtonWasTapped:]
  -[CFXCaptureViewController cameraControlsViewControllerShutterButtonWasTapped:]
  -[CFXCaptureViewController cameraControlsViewControllerSwitchCameraButtonWasTapped:]
  -[CFXCaptureViewController dockMagnifiedHeightDelta]
  -[CFXCaptureViewController CFX_setFrameAndRenderSizes]
  -[CFXCaptureViewController setAppliedDirectOverlayEditingGestures:]
  -[CFXCaptureViewController shouldUseFaceTracking]
  -[CFXCaptureViewController presentFullScreenTextEditorForEffect:insertingEffect:]
  -[CFXCaptureViewController displayEffectEditorForEffect:forMode:]
  -[CFXCaptureViewController appliedDirectOverlayEditingGestures]
  -[CFXCaptureViewController effectEditor]
  -[CFXCaptureViewController isEditingEffect]
  -[CFXCaptureViewController setEffectEditor:]
  -[CFXCaptureViewController updateEffectEditorLayout]
  -[CFXCaptureViewController updateFullScreenTextEditorLayout]
  -[CFXCaptureViewController setEffectBrowserContentPresenterViewController:]
  -[CFXCaptureViewController fullScreenTextEditViewController:shouldDisableEditingAnimationForEffect:]
  -[CFXCaptureViewController fullScreenTextEditViewController:didBeginEditingEffect:]
  -[CFXCaptureViewController fullScreenTextEditViewController:didFinishEditingEffect:withUpdatedText:]
  -[CFXCaptureViewController fullScreenTextEditViewController:didFinishEditingByRemovingEffect:]
  -[CFXCaptureViewController fullScreenTextEditViewController:willBeginAnimationBeforeEditingEffect:]
  -[CFXCaptureViewController fullScreenTextEditViewController:didBeginAnimationBeforeEditingEffect:completion:]
  -[CFXCaptureViewController fullScreenTextEditViewController:willBeginAnimationAfterEditingEffect:updatedText:]
  -[CFXCaptureViewController fullScreenTextEditViewController:didFinishAnimationAfterEditingEffect:completion:]
  -[CFXCaptureViewController effectEditorView:effectAtPoint:]
  -[CFXCaptureViewController effectEditorView:isEffectAtPoint:effect:]
  -[CFXCaptureViewController effectEditorView:frameForEffect:relativeToBounds:includeTracking:adjustForMinimumHitTestArea:]
  -[CFXCaptureViewController effectEditorView:viewInfoForEffect:relativeToBounds:]
  -[CFXCaptureViewController effectEditorView:removeButtonPositionForEffect:relativeToBounds:]
  -[CFXCaptureViewController effectEditorViewDidBeginEditing:]
  -[CFXCaptureViewController effectEditorView:spacingBetweenCenterPointOfEffect:point:relativeToBounds:]
  -[CFXCaptureViewController effectEditorView:didTransformEffect:transform:relativeToBounds:]
  -[CFXCaptureViewController effectEditorView:shouldEditTextForEffect:]
  -[CFXCaptureViewController effectEditorView:didBeginEditingTextForEffect:]
  -[CFXCaptureViewController effectEditorView:textEditingPropertiesForEffect:relativeToBounds:displayScale:]
  -[CFXCaptureViewController effectEditorView:textForEffect:]
  -[CFXCaptureViewController effectEditorView:didEditTextForEffect:newText:]
  -[CFXCaptureViewController effectEditorView:didEndEditingTextForEffect:wasCancelled:]
  -[CFXCaptureViewController effectEditorView:didRemoveEffect:]
  -[CFXCaptureViewController effectEditorViewDidEndEditing:]
  -[CFXCaptureViewController effectEditorView:didEndEditingEffect:]
  -[CFXCaptureViewController effectEditorView:didMoveEffect:withTouchPoint:withTransform:]
  -[CFXCaptureViewController effectEditorView:presentCustomTextEditingUI:]
  -[CFXCaptureViewController effectEditorView:maximumTextLengthForEffect:]
  -[CFXCaptureViewController effectEditorViewShouldShowFaceReticle:]
  -[CFXCaptureViewController passThroughContainerView:shouldHandleTouchWithinView:atPoint:]
  -[CFXCaptureViewController setZoomControlFrame:]
  -[CFXCaptureViewController setZoomSliderFrame:]
  -[CFXCaptureViewController setIsShowingAnimojiReticle:]
  -[CFXCaptureViewController setObservingOrientationChanges:]
  -[CFXCaptureViewController topBarContaineHeightConstraint]
  -[CFXCaptureViewController topBarTopConstraint]
  -[CFXCaptureViewController setEditingOverlayWithGestureGroup:]
  -[CFXCaptureViewController zoomSliderValueDidChange:forEvent:]
  -[CFXCaptureViewController updateZoomUIVisibility]
  -[CFXCaptureViewController isMessagesOnPhone]
  -[CFXCaptureViewController cameraControlsContainerView]
  -[CFXCaptureViewController setConfiguredForOrientation:]
  -[CFXCaptureViewController setSwitchedToVideoMode:]
  -[CFXCaptureViewController setDynamicShutterControl:]
  -[CFXCaptureViewController dynamicShutterControl]
  -[CFXCaptureViewController setDynamicShutterSettings:]
  -[CFXCaptureViewController setBottomControlsContainer:]
  -[CFXCaptureViewController bottomControlsContainer]
  -[CFXCaptureViewController setControlStatusBar:]
  -[CFXCaptureViewController configureCTMUIForCaptureMode]
  -[CFXCaptureViewController setReticleView:]
  -[CFXCaptureViewController reticleView]
  -[CFXCaptureViewController setRunOnceAnimatedOverlays:]
  -[CFXCaptureViewController updateTopBar]
  -[CFXCaptureViewController configureUIForWindowOrientation:bounds:]
  -[CFXCaptureViewController CFX_applyAutoRotationCorrectionToEditorViews]
  -[CFXCaptureViewController runOnceAnimatedOverlays]
  -[CFXCaptureViewController externalUncroppedPresentationRect]
  -[CFXCaptureViewController CFX_generateAutoRotationCorrectionFrameWithInterfaceOrientation:]
  -[CFXCaptureViewController effectEditorContainerView]
  -[CFXCaptureViewController updateAnimojiTrackingReticleAndLabelLayout]
  -[CFXCaptureViewController applyAutoRotationCorrectionToEditorViewsWithTransitionCoordinator:]
  -[CFXCaptureViewController setCameraControls:]
  -[CFXCaptureViewController layoutZoomUI]
  -[CFXCaptureViewController captureControlsContainerTopConstraint]
  -[CFXCaptureViewController captureControlsContainerWidthConstraint]
  -[CFXCaptureViewController captureControlsContainerHeightConstraint]
  -[CFXCaptureViewController captureControlsContainerLeadingConstraint]
  -[CFXCaptureViewController captureControlsContainerTrailingConstraint]
  -[CFXCaptureViewController configuredForOrientation]
  -[CFXCaptureViewController CFX_adjustOverlaysForCaptureOrientationChanged:oldCaptureOrientation:]
  -[CFXCaptureViewController CFX_captureFlashModeForCAMFlashMode:]
  -[CFXCaptureViewController CFX_camFlashModeForCaptureFlashMode:]
  -[CFXCaptureViewController CFX_captureTorchModeForCAMFlashMode:]
  -[CFXCaptureViewController setTorchModeForFlashMode:]
  -[CFXCaptureViewController observingOrientationChanges]
  -[CFXCaptureViewController removeEffectEditorAnimated:]
  -[CFXCaptureViewController enableAnimationForOverlayEffect:]
  -[CFXCaptureViewController effectCompositionDidChange:]
  -[CFXCaptureViewController overlayTransformForLocalViewfinder]
  -[CFXCaptureViewController CFX_addEffect:allowImmediateTextEditing:]
  -[CFXCaptureViewController liveCaptureContainerSnapshot]
  -[CFXCaptureViewController setLiveCaptureContainerSnapshot:]
  -[CFXCaptureViewController setExternalUncroppedPresentationRect:]
  -[CFXCaptureViewController setCaptureContainerUncroppedFrameWasCalculatedWithContentRect:]
  -[CFXCaptureViewController configureZoomControl]
  -[CFXCaptureViewController CFX_getCaptureDevice:captureDevicePosition:captureMode:]
  -[CFXCaptureViewController zoomControlFrame]
  -[CFXCaptureViewController layoutZoomControlForCTM]
  -[CFXCaptureViewController layoutZoomControlRelativeToBottomBarAndPreview:]
  -[CFXCaptureViewController zoomSliderFrame]
  -[CFXCaptureViewController layoutZoomSliderRelativeToBottomBarAndPreview]
  -[CFXCaptureViewController CFX_handleZoomPinchGestureRecognizer:]
  -[CFXCaptureViewController CFX_maxZoomForCamera]
  -[CFXCaptureViewController CFX_setZoomSliderFromZoomFactor:]
  -[CFXCaptureViewController editingOverlayWithGestureGroup]
  -[CFXCaptureViewController stopVideoRecording]
  -[CFXCaptureViewController startVideoRecording]
  -[CFXCaptureViewController updateZoomUIForCapturing:animated:]
  -[CFXCaptureViewController JFX_capturePhoto]
  -[CFXCaptureViewController cameraIsFlipping]
  -[CFXCaptureViewController setCameraIsFlipping:]
  -[CFXCaptureViewController setViewfinderFlipTransition:]
  -[CFXCaptureViewController viewfinderFlipTransition]
  -[CFXCaptureViewController CFX_isRenderingAnimatedOverlaysThatDontLoop]
  -[CFXCaptureViewController isShowingAnimojiReticle]
  -[CFXCaptureViewController setAnimojiTrackingLossReticle:]
  -[CFXCaptureViewController animojiTrackingLossReticle]
  -[CFXCaptureViewController animojiReticleFacePromptView]
  -[CFXCaptureViewController CFX_setupFaceInViewPromptLabel]
  -[CFXCaptureViewController setAnimojiReticleFacePromptView:]
  -[CFXCaptureViewController setFacePromptLabelYConstraint:]
  -[CFXCaptureViewController facePromptLabelYConstraint]
  -[CFXCaptureViewController fadeInFaceInViewPromptLabel]
  -[CFXCaptureViewController fadeOutFaceInViewPromptLabel]
  -[CFXCaptureViewController captureContainerUncroppedFrameWasCalculatedWithContentRect]
  -[CFXCaptureViewController setEffectEditorContainerView:]
  -[CFXCaptureViewController CFX_cameraViewFinderUncroppedFrame]
  -[CFXCaptureViewController CFX_performBackCameraZoomWithPinchGestureRecognizer:]
  -[CFXCaptureViewController CFX_performFrontCameraZoomWithPinchGestureRecognizer:]
  -[CFXCaptureViewController setZoomFactorAtPinchStart:]
  -[CFXCaptureViewController zoomFactorAtPinchStart]
  -[CFXCaptureViewController switchedToVideoMode]
  -[CFXCaptureViewController CFX_hideAppStripUpperBackgroundView:]
  -[CFXCaptureViewController completedVideoRecordWithURL:]
  -[CFXCaptureViewController dynamicShutterSettings]
  -[CFXCaptureViewController dynamicShutterControlStopLockedRecording]
  -[CFXCaptureViewController toggleCTMFlashButton]
  -[CFXCaptureViewController setupAnimojiFaceReticleForTrackingLoss]
  -[CFXCaptureViewController showAnimojiFaceReticleForTrackingLoss]
  -[CFXCaptureViewController hideAnimojiFaceReticleForTrackingGain]
  -[CFXCaptureViewController shouldShowAnimojiFaceReticle]
  -[CFXCaptureViewController configureWithControlsViewController:]
  -[CFXCaptureViewController flashButtonTapped:]
  -[CFXCaptureViewController CFX_toggleCaptureUI]
  -[CFXCaptureViewController returnCTMUIToPhotoMode]
  -[CFXCaptureViewController setCameraControlsContainerView:]
  -[CFXCaptureViewController setTopBarTopConstraint:]
  -[CFXCaptureViewController setTopBarContaineHeightConstraint:]
  -[CFXCaptureViewController CFX_executeBlockAfterNextFrameRendered:]


JTClipSequenceDisplayViewController : JTViewController <UIGestureRecognizerDelegate, JTAVPlayerViewerDelegate, JTClipSequencePlaybackDelegate>
 @property  UIView *videoDisplayOverlayView
 @property  BOOL dontRemovePlaceHolderOnDisplay
 @property  int cachedDuration
 @property  int cachedCurrentTime
 @property  int cachedMuted
 @property  BOOL cachedWasPlaying
 @property  {CGSize=dd} cachedRenderSizeInPixels
 @property  UIView *viewFlashed
 @property  UIColor *restoreToColor
 @property  JTClipSequencePlayer *clipsPlayer
 @property  UIView *placeHolderView
 @property  {CGSize=dd} lastPlayerViewSize
 @property  <JTClipSequenceDisplayViewControllerDelegate> *delegate
 @property  <JTCompositionClipsDataSource> *clipsDataSource
 @property  NSString *displayName
 @property  BOOL disableVideoDisplayGestures
 @property  {?=qiIq} playbackTimeChangedObserverInterval
 @property  BOOL muted
 @property  long long videoContentMode
 @property  {CGSize=dd} renderSizeInPixels
 @property  BOOL isDisplaying
 @property  BOOL dontRenderLiveTitles
 @property  BOOL duckAllAudioClips
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTClipSequenceDisplayViewController init]
  -[JTClipSequenceDisplayViewController dealloc]
  -[JTClipSequenceDisplayViewController initWithCoder:]
  -[JTClipSequenceDisplayViewController delegate]
  -[JTClipSequenceDisplayViewController setDelegate:]
  -[JTClipSequenceDisplayViewController .cxx_destruct]
  -[JTClipSequenceDisplayViewController pause]
  -[JTClipSequenceDisplayViewController observeValueForKeyPath:ofObject:change:context:]
  -[JTClipSequenceDisplayViewController duration]
  -[JTClipSequenceDisplayViewController displayName]
  -[JTClipSequenceDisplayViewController setDisplayName:]
  -[JTClipSequenceDisplayViewController play]
  -[JTClipSequenceDisplayViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[JTClipSequenceDisplayViewController viewDidLoad]
  -[JTClipSequenceDisplayViewController viewDidLayoutSubviews]
  -[JTClipSequenceDisplayViewController viewDidAppear:]
  -[JTClipSequenceDisplayViewController viewDidDisappear:]
  -[JTClipSequenceDisplayViewController didReceiveMemoryWarning]
  -[JTClipSequenceDisplayViewController currentTime]
  -[JTClipSequenceDisplayViewController isPlaying]
  -[JTClipSequenceDisplayViewController isDisplaying]
  -[JTClipSequenceDisplayViewController setMuted:]
  -[JTClipSequenceDisplayViewController playWithCompletionHandler:]
  -[JTClipSequenceDisplayViewController isMuted]
  -[JTClipSequenceDisplayViewController seekToTime:]
  -[JTClipSequenceDisplayViewController videoContentMode]
  -[JTClipSequenceDisplayViewController setVideoContentMode:]
  -[JTClipSequenceDisplayViewController appDidEnterBackground:]
  -[JTClipSequenceDisplayViewController appWillResignActive:]
  -[JTClipSequenceDisplayViewController appDidBecomeActive:]
  -[JTClipSequenceDisplayViewController frameRate]
  -[JTClipSequenceDisplayViewController playbackDidStart:]
  -[JTClipSequenceDisplayViewController sharedInit]
  -[JTClipSequenceDisplayViewController playbackReadyForDisplayChanged:isReady:]
  -[JTClipSequenceDisplayViewController setPlaybackTimeChangedObserverInterval:]
  -[JTClipSequenceDisplayViewController clipsDataSource]
  -[JTClipSequenceDisplayViewController playbackDidStop:currentTime:]
  -[JTClipSequenceDisplayViewController dispatchBlockWhenDone:]
  -[JTClipSequenceDisplayViewController updateLiveTransformForClip:]
  -[JTClipSequenceDisplayViewController playbackTimeChangedObserverInterval]
  -[JTClipSequenceDisplayViewController playbackTimeDidChange:currentTime:]
  -[JTClipSequenceDisplayViewController playerWillBeDestroyed:]
  -[JTClipSequenceDisplayViewController resetPlaybackTimeChangedObserverInterval]
  -[JTClipSequenceDisplayViewController liveTransformForClip:]
  -[JTClipSequenceDisplayViewController setClipsDataSource:]
  -[JTClipSequenceDisplayViewController duckAllAudioClips]
  -[JTClipSequenceDisplayViewController dontRenderLiveTitles]
  -[JTClipSequenceDisplayViewController playerContainerView]
  -[JTClipSequenceDisplayViewController pauseWithCompletionBlock:]
  -[JTClipSequenceDisplayViewController playbackAreaDoubleTapped:]
  -[JTClipSequenceDisplayViewController setDontRenderLiveTitles:]
  -[JTClipSequenceDisplayViewController setDuckAllAudioClips:]
  -[JTClipSequenceDisplayViewController setNeedsCompositionUpdate]
  -[JTClipSequenceDisplayViewController setNeedsCompositionUpdateForClip:]
  -[JTClipSequenceDisplayViewController playerViewer]
  -[JTClipSequenceDisplayViewController placeholderContainerView]
  -[JTClipSequenceDisplayViewController contentModeToVideoGravity:]
  -[JTClipSequenceDisplayViewController setRestoreToColor:]
  -[JTClipSequenceDisplayViewController updateDelegatePlayer]
  -[JTClipSequenceDisplayViewController lastPlayerViewSize]
  -[JTClipSequenceDisplayViewController setLastPlayerViewSize:]
  -[JTClipSequenceDisplayViewController clipsPlayer]
  -[JTClipSequenceDisplayViewController reloadClipDataSourceOnBecomingActive]
  -[JTClipSequenceDisplayViewController updateCachedPlaybackProperties]
  -[JTClipSequenceDisplayViewController unloadClipDataSource]
  -[JTClipSequenceDisplayViewController preparePlaceHolder]
  -[JTClipSequenceDisplayViewController setCachedDuration:]
  -[JTClipSequenceDisplayViewController setCachedCurrentTime:]
  -[JTClipSequenceDisplayViewController setCachedMuted:]
  -[JTClipSequenceDisplayViewController renderSizeInPixels]
  -[JTClipSequenceDisplayViewController setCachedRenderSizeInPixels:]
  -[JTClipSequenceDisplayViewController placeHolderView]
  -[JTClipSequenceDisplayViewController setClipsPlayer:]
  -[JTClipSequenceDisplayViewController reloadClipDataSource]
  -[JTClipSequenceDisplayViewController reloadClipDataSourceIfNeeded]
  -[JTClipSequenceDisplayViewController cachedCurrentTime]
  -[JTClipSequenceDisplayViewController cachedMuted]
  -[JTClipSequenceDisplayViewController beginFlash]
  -[JTClipSequenceDisplayViewController endFlash]
  -[JTClipSequenceDisplayViewController mediaserverdCrashed]
  -[JTClipSequenceDisplayViewController videoDisplayOverlayView]
  -[JTClipSequenceDisplayViewController setVideoDisplayOverlayView:]
  -[JTClipSequenceDisplayViewController setPlaceHolderView:]
  -[JTClipSequenceDisplayViewController setDontRemovePlaceHolderOnDisplay:]
  -[JTClipSequenceDisplayViewController addPlaceHolder]
  -[JTClipSequenceDisplayViewController dontRemovePlaceHolderOnDisplay]
  -[JTClipSequenceDisplayViewController cachedRenderSizeInPixels]
  -[JTClipSequenceDisplayViewController cachedDuration]
  -[JTClipSequenceDisplayViewController cachedWasPlaying]
  -[JTClipSequenceDisplayViewController playbackDidReachEnd]
  -[JTClipSequenceDisplayViewController setCachedWasPlaying:]
  -[JTClipSequenceDisplayViewController playerBecameReadyForDisplayChanged:]
  -[JTClipSequenceDisplayViewController removePlaceHolder]
  -[JTClipSequenceDisplayViewController prepareVideoDisplayView]
  -[JTClipSequenceDisplayViewController updateVideoDisplayViewBounds]
  -[JTClipSequenceDisplayViewController disableVideoDisplayGestures]
  -[JTClipSequenceDisplayViewController installVideoDisplayGestures]
  -[JTClipSequenceDisplayViewController playbackAreaTapped:]
  -[JTClipSequenceDisplayViewController playbackAreaPanned:]
  -[JTClipSequenceDisplayViewController playbackAreaPinched:]
  -[JTClipSequenceDisplayViewController playbackAreaRotated:]
  -[JTClipSequenceDisplayViewController convertPointInPlaybackSizeToClipPointNormalized:]
  -[JTClipSequenceDisplayViewController viewToFlash]
  -[JTClipSequenceDisplayViewController setViewFlashed:]
  -[JTClipSequenceDisplayViewController viewFlashed]
  -[JTClipSequenceDisplayViewController restoreToColor]
  -[JTClipSequenceDisplayViewController playbackDidReachEnd:]
  -[JTClipSequenceDisplayViewController displayPlaceHolder]
  -[JTClipSequenceDisplayViewController setPlaybackTimeChangeNotificationPeriod:]
  -[JTClipSequenceDisplayViewController videoDisplayBounds]
  -[JTClipSequenceDisplayViewController convertPointInPlaybackSizeToClipPoint:]
  -[JTClipSequenceDisplayViewController setDisableVideoDisplayGestures:]


CFXRenderer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PVLivePlayerDelegate>
 @property  long long captureMode
 @property  long long cameraMode
 @property  JTPixelRotationSession *pixelRotationSession
 @property  <CFXRendererDelegate> *delegate
 @property  PVLivePlayer *livePlayer
 @property  BOOL livePlayerIsSaturated
 @property  PVLivePlayerCameraSource *cameraSource
 @property  CFXAnimojiEffectRenderer *animojiRenderer
 @property  CFXFaceTrackingRenderer *faceTrackingRenderer
 @property  JTFrameRateCalculator *fpsCalc
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXRenderer initialize]

  // instance methods
  -[CFXRenderer dealloc]
  -[CFXRenderer delegate]
  -[CFXRenderer setDelegate:]
  -[CFXRenderer .cxx_destruct]
  -[CFXRenderer pause]
  -[CFXRenderer resume]
  -[CFXRenderer flush]
  -[CFXRenderer shutdown]
  -[CFXRenderer cameraMode]
  -[CFXRenderer setCaptureMode:]
  -[CFXRenderer setCameraSource:]
  -[CFXRenderer cameraSource]
  -[CFXRenderer captureMode]
  -[CFXRenderer initWithDelegate:captureMode:]
  -[CFXRenderer livePlayerIsSaturated]
  -[CFXRenderer willDropCameraFrame]
  -[CFXRenderer renderFrame:effectComposition:]
  -[CFXRenderer fpsCalc]
  -[CFXRenderer faceTrackingRenderer]
  -[CFXRenderer animojiRenderer]
  -[CFXRenderer buildRenderRequest:time:]
  -[CFXRenderer renderRequestComplete:results:completedOutOfOrder:]
  -[CFXRenderer livePlayerDroppedFrame:sources:time:]
  -[CFXRenderer pixelRotationSession]
  -[CFXRenderer setPixelRotationSession:]
  -[CFXRenderer livePlayer]
  -[CFXRenderer CFX_PVFrameSetFromCFXFrame:]
  -[CFXRenderer CFX_JTEffectsFromCFXEffectComposition:forRenderTime:]
  -[CFXRenderer setLivePlayer:]
  -[CFXRenderer setAnimojiRenderer:]
  -[CFXRenderer setFaceTrackingRenderer:]


JTCompositionItem : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  JTClip *clip
 @property  BOOL isFinalClip
 @property  {?={?=qiIq}{?=qiIq}} sourceTimeRange
 @property  {?=qiIq} destinationDuration
 @property  {?=qiIq} audioStartOffset
 @property  {?=qiIq} audioEndOffset
 @property  BOOL hasVideoContent
 @property  BOOL isMuted
 @property  BOOL isFreezeFrame
 @property  float speed
 @property  BOOL isWaitingForResource
 @property  BOOL needSilenceAtEnd
 @property  BOOL needAudioLoop
 @property  int timeScale

  // class methods
  +[JTCompositionItem compositionItemWithClip:timeScale:]
  +[JTCompositionItem silenceAsset]
  +[JTCompositionItem mediaserverdCrashed]

  // instance methods
  -[JTCompositionItem dealloc]
  -[JTCompositionItem .cxx_destruct]
  -[JTCompositionItem speed]
  -[JTCompositionItem setSpeed:]
  -[JTCompositionItem clip]
  -[JTCompositionItem isMuted]
  -[JTCompositionItem setClip:]
  -[JTCompositionItem timeScale]
  -[JTCompositionItem setTimeScale:]
  -[JTCompositionItem initWithClip:timeScale:]
  -[JTCompositionItem sourceTimeRange]
  -[JTCompositionItem isFreezeFrame]
  -[JTCompositionItem emptyTrackSegmentWithDestinationRange:]
  -[JTCompositionItem audioTrackSegmentsWithDestinationTime:paddedFromTime:]
  -[JTCompositionItem destinationDuration]
  -[JTCompositionItem audioStartOffset]
  -[JTCompositionItem audioEndOffset]
  -[JTCompositionItem audioTrackSegmentsLoopedForDestinationTimeRange:]
  -[JTCompositionItem emptyTrackSegmentWithDestinationTime:]
  -[JTCompositionItem hasVideoContent]
  -[JTCompositionItem needAudioLoop]
  -[JTCompositionItem videoTrackSegmentsWithDestinationRange:]
  -[JTCompositionItem videoTrackSegmentsLoopedWithDestinationRange:]
  -[JTCompositionItem audioTrackSegmentsWithDestinationTime:]
  -[JTCompositionItem audioTrackSegmentsLoopedWithDestinationTime:]
  -[JTCompositionItem setAudioStartOffset:]
  -[JTCompositionItem setAudioEndOffset:]
  -[JTCompositionItem setIsFinalClip:]
  -[JTCompositionItem setSourceTimeRange:]
  -[JTCompositionItem setDestinationDuration:]
  -[JTCompositionItem isWaitingForResource]
  -[JTCompositionItem isFinalClip]
  -[JTCompositionItem needSilenceAtEnd]
  -[JTCompositionItem emptyVideoTrackSegmentsWithDestinationRange:]
  -[JTCompositionItem emptyAudioTrackSegmentsWithDestinationTime:]


JTMediaItem : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  int mediaType
 @property  int mediaState
 @property  int mediaLoadState
 @property  int durationAt30fps
 @property  long long captureInterfaceOrientation
 @property  <JTMediaItemDelegate> *delegate

  // class methods
  +[JTMediaItem supportsSecureCoding]

  // instance methods
  -[JTMediaItem init]
  -[JTMediaItem dealloc]
  -[JTMediaItem isEqual:]
  -[JTMediaItem copyWithZone:]
  -[JTMediaItem delegate]
  -[JTMediaItem setDelegate:]
  -[JTMediaItem .cxx_destruct]
  -[JTMediaItem info]
  -[JTMediaItem mediaType]
  -[JTMediaItem setMediaType:]
  -[JTMediaItem captureInterfaceOrientation]
  -[JTMediaItem durationAt30fps]
  -[JTMediaItem mediaState]
  -[JTMediaItem mediaLoadState]
  -[JTMediaItem canSaveToCameraRoll]
  -[JTMediaItem initWithInfo:delegate:]
  -[JTMediaItem hasAudibleCharacteristic]
  -[JTMediaItem setCaptureInterfaceOrientation:]
  -[JTMediaItem canBeAddedToSequence]
  -[JTMediaItem canHaveFilter]
  -[JTMediaItem hasVisualCharacteristic]
  -[JTMediaItem hasPhotoCharacteristic]
  -[JTMediaItem setMediaState:]
  -[JTMediaItem setMediaLoadState:]
  -[JTMediaItem setDurationAt30fps:]


CFXFaceTrackingUtilities : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXFaceTrackingUtilities faceRectScaleFactorForInterfaceOrientation:andDeviceInterfaceOrientation:]
  +[CFXFaceTrackingUtilities isFaceAnchorInRange:]
  +[CFXFaceTrackingUtilities renderSizeForBufferSize:orientation:]
  +[CFXFaceTrackingUtilities adjustIntrinsics:forRenderSize:capturedSize:interfaceOrientation:]
  +[CFXFaceTrackingUtilities planeSizeInModelSpaceWithFaceAnchor:bufferSize:]
  +[CFXFaceTrackingUtilities pointOnFaceMesh]
  +[CFXFaceTrackingUtilities inputBufferIsLandscapeAspect:]
  +[CFXFaceTrackingUtilities CFX_projectionMatrixWithFaceAnchor:bufferSize:]
  +[CFXFaceTrackingUtilities CFX_modelPointFromCompositionPoint:withFaceAnchor:bufferSize:]
  +[CFXFaceTrackingUtilities CFX_screenPointFromModelPoint:withFaceAnchor:locatedOnFace:bufferSize:]
  +[CFXFaceTrackingUtilities maxCameraToFaceDistance]
  +[CFXFaceTrackingUtilities compositionPointFromScreenPoint:locatedOnFace:withFaceAnchor:bufferSize:]
  +[CFXFaceTrackingUtilities screenPointFromCompositionPoint:locatedOnFace:withFaceAnchor:bufferSize:]
  +[CFXFaceTrackingUtilities screenRectOfFaceWithFaceAnchor:bufferSize:]


JTLayer : CALayer /System/Library/Frameworks/AVKit.framework/AVKit
 @property  BOOL debuggingUIEnabled

  // instance methods
  -[JTLayer debuggingUIEnabled]
  -[JTLayer setDebuggingUIEnabled:]
  -[JTLayer initWithDebugEnabled]


JTVideoMediaItem : JTAssetMediaItem
 @property  AVAsset *avAsset
 @property  JTThumbnailGenerator *thumbnailGenerator
 @property  JTVideoMediaUtils *videoMediaItemUtils
 @property  BOOL originalIsHEVC4k
 @property  {CGSize=dd} naturalSize
 @property  {CGAffineTransform=dddddd} transform
 @property  {CGSize=dd} naturalSizeWithTransform
 @property  int mediaStartOffset
 @property  float frameRate
 @property  BOOL isHighFrameRate
 @property  BOOL hasVideoTracks
 @property  BOOL hasAudioTracks
 @property  BOOL capturedByInAppCamera
 @property  BOOL needsDerivativeMedia
 @property  BOOL isUnsupportedAudio

  // class methods
  +[JTVideoMediaItem videoMediaItemWithAssetIdentifier:progressHandlerBlock:delegate:completionHandler:]
  +[JTVideoMediaItem videoMediaItemWithLocalURL:delegate:completionHandler:]

  // instance methods
  -[JTVideoMediaItem dealloc]
  -[JTVideoMediaItem isEqual:]
  -[JTVideoMediaItem copyWithZone:]
  -[JTVideoMediaItem .cxx_destruct]
  -[JTVideoMediaItem transform]
  -[JTVideoMediaItem info]
  -[JTVideoMediaItem commonInit]
  -[JTVideoMediaItem assetURL]
  -[JTVideoMediaItem naturalSize]
  -[JTVideoMediaItem avAsset]
  -[JTVideoMediaItem thumbnailGenerator]
  -[JTVideoMediaItem setThumbnailGenerator:]
  -[JTVideoMediaItem frameRate]
  -[JTVideoMediaItem durationAt30fps]
  -[JTVideoMediaItem needsDerivativeMedia]
  -[JTVideoMediaItem setMediaStartOffset:]
  -[JTVideoMediaItem naturalSizeWithTransform]
  -[JTVideoMediaItem mediaStartOffset]
  -[JTVideoMediaItem initWithInfo:delegate:]
  -[JTVideoMediaItem hasAudibleCharacteristic]
  -[JTVideoMediaItem isUnsupportedAudio]
  -[JTVideoMediaItem hasVideoTracks]
  -[JTVideoMediaItem hasAudioTracks]
  -[JTVideoMediaItem mediaserverdCrashed]
  -[JTVideoMediaItem canBeAddedToSequence]
  -[JTVideoMediaItem hasVisualCharacteristic]
  -[JTVideoMediaItem setAvAsset:]
  -[JTVideoMediaItem cacheAssetInformation]
  -[JTVideoMediaItem videoMediaItemUtils]
  -[JTVideoMediaItem loadAVAssetWithCompletionHandler:]
  -[JTVideoMediaItem generateThumbnailWithProgressHandler:completionHandler:]
  -[JTVideoMediaItem setVideoMediaItemUtils:]
  -[JTVideoMediaItem setAssetIs4kHEVC:]
  -[JTVideoMediaItem transform:fillDest:]
  -[JTVideoMediaItem isHighFrameRate]
  -[JTVideoMediaItem capturedByInAppCamera]
  -[JTVideoMediaItem setCapturedByInAppCamera:]
  -[JTVideoMediaItem originalIsHEVC4k]
  -[JTVideoMediaItem setOriginalIsHEVC4k:]


CFXEffectPickerCollectionViewCell : UICollectionViewCell /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  JTImageView *imageView
 @property  JTImage *image
 @property  CFXEffect *effect
 @property  NSString *effectIdentifier

  // instance methods
  -[CFXEffectPickerCollectionViewCell .cxx_destruct]
  -[CFXEffectPickerCollectionViewCell prepareForReuse]
  -[CFXEffectPickerCollectionViewCell image]
  -[CFXEffectPickerCollectionViewCell setImage:]
  -[CFXEffectPickerCollectionViewCell accessibilityLabel]
  -[CFXEffectPickerCollectionViewCell accessibilityTraits]
  -[CFXEffectPickerCollectionViewCell isAccessibilityElement]
  -[CFXEffectPickerCollectionViewCell setEffect:]
  -[CFXEffectPickerCollectionViewCell imageView]
  -[CFXEffectPickerCollectionViewCell effect]
  -[CFXEffectPickerCollectionViewCell awakeFromNib]
  -[CFXEffectPickerCollectionViewCell setImageView:]
  -[CFXEffectPickerCollectionViewCell setEffectIdentifier:]
  -[CFXEffectPickerCollectionViewCell effectIdentifier]
  -[CFXEffectPickerCollectionViewCell configureCellAppearence]


JTThreadSafeDictionary : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *dict
 @property  NSObject<OS_dispatch_queue> *concurrentQueue
 @property  unsigned long count
 @property  NSArray *allKeys
 @property  NSArray *allValues

  // instance methods
  -[JTThreadSafeDictionary init]
  -[JTThreadSafeDictionary dealloc]
  -[JTThreadSafeDictionary count]
  -[JTThreadSafeDictionary allKeys]
  -[JTThreadSafeDictionary removeAllObjects]
  -[JTThreadSafeDictionary setValue:forKey:]
  -[JTThreadSafeDictionary objectForKey:]
  -[JTThreadSafeDictionary removeObjectForKey:]
  -[JTThreadSafeDictionary allValues]
  -[JTThreadSafeDictionary setObject:forKey:]
  -[JTThreadSafeDictionary .cxx_destruct]
  -[JTThreadSafeDictionary objectsForKeys:notFoundMarker:]
  -[JTThreadSafeDictionary addEntriesFromDictionary:]
  -[JTThreadSafeDictionary removeObjectsForKeys:]
  -[JTThreadSafeDictionary setDictionary:]
  -[JTThreadSafeDictionary valueForKey:]
  -[JTThreadSafeDictionary dict]
  -[JTThreadSafeDictionary setDict:]
  -[JTThreadSafeDictionary concurrentQueue]
  -[JTThreadSafeDictionary setConcurrentQueue:]


JTPixelRotationSession : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  JTPixelBufferPool *pixelBufferPool
 @property  unsigned int rotationDegrees
 @property  BOOL mirror

  // class methods
  +[JTPixelRotationSession applyDeviceRotationCorrectionWithSession:toFrameSet:]

  // instance methods
  -[JTPixelRotationSession dealloc]
  -[JTPixelRotationSession .cxx_destruct]
  -[JTPixelRotationSession pixelBufferPool]
  -[JTPixelRotationSession rotationDegrees]
  -[JTPixelRotationSession initWithRotation:mirror:]
  -[JTPixelRotationSession mirror]
  -[JTPixelRotationSession createRotatedPixelBuffer:]
  -[JTPixelRotationSession createRotatedFrameSet:]
  -[JTPixelRotationSession JT_releaseImageRotationSession]
  -[JTPixelRotationSession setPixelBufferPool:]


JTAssetMediaItem : JTLocalAssetMediaItem
 @property  NSString *assetIdentifier
 @property  NSString *masterFingerprint
 @property  NSString *adjustedFingerprint
 @property  PHAsset *asset
 @property  NSURL *assetLocalURL

  // instance methods
  -[JTAssetMediaItem init]
  -[JTAssetMediaItem dealloc]
  -[JTAssetMediaItem isEqual:]
  -[JTAssetMediaItem copyWithZone:]
  -[JTAssetMediaItem .cxx_destruct]
  -[JTAssetMediaItem info]
  -[JTAssetMediaItem asset]
  -[JTAssetMediaItem setAsset:]
  -[JTAssetMediaItem cancelDownload]
  -[JTAssetMediaItem setMasterFingerprint:]
  -[JTAssetMediaItem setAssetIdentifier:]
  -[JTAssetMediaItem assetIdentifier]
  -[JTAssetMediaItem masterFingerprint]
  -[JTAssetMediaItem initWithAssetIdentifier:]
  -[JTAssetMediaItem initWithInfo:delegate:]
  -[JTAssetMediaItem assetLocalURL]
  -[JTAssetMediaItem setAssetLocalURL:]
  -[JTAssetMediaItem checkIfAssetIsMissing]
  -[JTAssetMediaItem fetchAssetForce:]
  -[JTAssetMediaItem setAdjustedFingerprint:]
  -[JTAssetMediaItem adjustedFingerprint]
  -[JTAssetMediaItem downloadAssetsWithProgressHandler:completionHandler:]
  -[JTAssetMediaItem reloadAsset]


JTEffectEditingUtilities : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTEffectEditingUtilities setStreamingMode:]
  +[JTEffectEditingUtilities addTransformToEffect:transform:relativeToBounds:time:restrictToBounds:]
  +[JTEffectEditingUtilities updateEffectText:newText:]
  +[JTEffectEditingUtilities canApplyEffectAsTracked]
  +[JTEffectEditingUtilities configureOverlayForInsertion:atScaleRelativeToComposition:includeTracking:previewViewCorrectionTransform:]
  +[JTEffectEditingUtilities configureOverlayForInsertion:atNormalizedCompositionPoint:scaleX:scaleY:rotationAngle:includeTracking:previewViewCorrectionTransform:]
  +[JTEffectEditingUtilities canEditTextForEffect:]
  +[JTEffectEditingUtilities updateEffectVisibility:value:]
  +[JTEffectEditingUtilities hitTestEffectsAtPosterFrame:atNormalizedPoint:atTime:includeTracking:minimumHitTestArea:]
  +[JTEffectEditingUtilities disableAnimationForEffects:]
  +[JTEffectEditingUtilities textForEffect:]
  +[JTEffectEditingUtilities hitTestEffectsAtPosterFrame:atPoint:relativeToBounds:atTime:includeTracking:]
  +[JTEffectEditingUtilities frameForEffect:atTime:relativeToBounds:includeTracking:minimumHitTestArea:]
  +[JTEffectEditingUtilities viewInfoForEffect:forViewBoundsAtPosterFrame:time:includeDropShadow:]
  +[JTEffectEditingUtilities removeButtonPositionForEffect:atTime:atPosterFrameRelativeToBounds:includeTracking:viewCorrectionTransform:]
  +[JTEffectEditingUtilities createTextEditingPropertiesForEffect:relativeTo:atTime:displayScale:]
  +[JTEffectEditingUtilities beginTextEditingForEffect:]
  +[JTEffectEditingUtilities updateEffectToDefaultTextIfEmpty:]
  +[JTEffectEditingUtilities endTextEditingForEffect:]
  +[JTEffectEditingUtilities maximumTextLengthForEffect:]
  +[JTEffectEditingUtilities spacingBetweenCenterPointOfEffect:point:relativeToBounds:atTime:includeTracking:]
  +[JTEffectEditingUtilities trackingTransformWithEffect:effectFrame:objectTransform:fractionComplete:]
  +[JTEffectEditingUtilities hitTestEffects:atPoint:relativeToBounds:atTime:includeTracking:]
  +[JTEffectEditingUtilities changeTrackingTypeIfNecessary:forTouchPoint:withBounds:completion:]
  +[JTEffectEditingUtilities frameForEffect:atTime:relativeToBounds:]
  +[JTEffectEditingUtilities enableAnimationForEffects:animationStartTime:]
  +[JTEffectEditingUtilities compositionBounds]
  +[JTEffectEditingUtilities rectForCustomizedOverlay:relativeToBounds:scaleX:scaleY:]
  +[JTEffectEditingUtilities CFX_motionRectForEffectFromFaceTrackRect:forEffect:relativeToSize:]
  +[JTEffectEditingUtilities CFX_compositionSize]
  +[JTEffectEditingUtilities CFX_placementPointForOverlay:withBounds:inCompositionRect:]
  +[JTEffectEditingUtilities CFX_frameForEffect:fitToBounds:]
  +[JTEffectEditingUtilities CFX_screenRectForOverlayRect:inCompositionRect:withFaceAnchor:]
  +[JTEffectEditingUtilities CFX_screenPointFromCompositionPoint:locatedOnFace:withFaceAnchor:bufferSize:]
  +[JTEffectEditingUtilities CFX_hitTestEffects:withinEffectPoints:atTime:forcePosterFrame:includeTracking:minimumHitTestArea:]
  +[JTEffectEditingUtilities CFX_trackingTypeForOverlayIntersectionWithFaceRect:withCurrentTrackingType:]
  +[JTEffectEditingUtilities CFX_faceTrackRectForEffectFromUIKitCGRect:forEffect:relativeToSize:]
  +[JTEffectEditingUtilities CFX_compositionPointFromScreenPoint:locatedOnFace:withFaceAnchor:bufferSize:]
  +[JTEffectEditingUtilities CFX_faceTrackPointFromCGPoint:overlay:relativeToSize:]
  +[JTEffectEditingUtilities CFX_convertPoint:fromSize:toSize:invertY:]
  +[JTEffectEditingUtilities CFX_originAfterApplyingCenteredCropOnPoint:outerSize:innerSize:]
  +[JTEffectEditingUtilities CFX_closeButtonInsetForEffect:viewBounds:]
  +[JTEffectEditingUtilities CFX_ApplyTextFlipIfNeeded:transform:]
  +[JTEffectEditingUtilities isStreamingMode]
  +[JTEffectEditingUtilities shouldRenderTextWithMotionWhileEditingTextForEffect:]
  +[JTEffectEditingUtilities setTextRenderingEnabledForEffect:value:]
  +[JTEffectEditingUtilities hitTestEffectsAtPosterFrame:atNormalizedPoints:atTime:includeTracking:]
  +[JTEffectEditingUtilities hitTestEffects:atNormalizedPoint:atTime:includeTracking:]
  +[JTEffectEditingUtilities overlayHitTestPointsForFrame:compositionSize:]
  +[JTEffectEditingUtilities areFaceTrackedEffects:]
  +[JTEffectEditingUtilities currentFaceRectRelativeToBounds:]
  +[JTEffectEditingUtilities setTrackingTypeForEffect:trackingType:]


CFXBundleUtils : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CFXBundleUtils isRunningMessagesExtension]
  +[CFXBundleUtils bundleForAnalytics]
  +[CFXBundleUtils isRunningFacetime]


CFXAnimojiPlaybackDelegate : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PVCompositeDelegate>
 @property  CFXAnimojiEffectRenderer *animojiRenderer
 @property  ARFrame *stillImageARFrame
 @property  AVAsset *assetWithDepthVideoTrack
 @property  AVAssetTrack *depthVideoTrack
 @property  AVAssetReaderTrackOutput *depthVideoTrackReaderOutput
 @property  AVAssetReader *depthVideoAssetReader
 @property  PVCMSampleBuffer *currentDepthSample
 @property  PVCMSampleBuffer *nextDepthSample
 @property  AVAssetTrack *metadataAssetTrack
 @property  AVAssetReader *metadataAssetReader
 @property  AVAssetReaderTrackOutput *metadataTrackReaderOutput
 @property  AVAssetReaderOutputMetadataAdaptor *assetReaderOutputMetadataAdaptor
 @property  AVMetadataItem *currentMetadataItem
 @property  AVMetadataItem *nextMetadataItem

  // instance methods
  -[CFXAnimojiPlaybackDelegate .cxx_destruct]
  -[CFXAnimojiPlaybackDelegate initWithAssetURL:]
  -[CFXAnimojiPlaybackDelegate CFX_setUpMetadataReaderForTrack:]
  -[CFXAnimojiPlaybackDelegate stillImageARFrame]
  -[CFXAnimojiPlaybackDelegate CFX_updateCurrentMetadataItemForTime:]
  -[CFXAnimojiPlaybackDelegate currentMetadataItem]
  -[CFXAnimojiPlaybackDelegate metadataAssetReader]
  -[CFXAnimojiPlaybackDelegate setMetadataTrackReaderOutput:]
  -[CFXAnimojiPlaybackDelegate metadataAssetTrack]
  -[CFXAnimojiPlaybackDelegate nextMetadataItem]
  -[CFXAnimojiPlaybackDelegate setCurrentMetadataItem:]
  -[CFXAnimojiPlaybackDelegate setNextMetadataItem:]
  -[CFXAnimojiPlaybackDelegate renderWithInputs:time:metadata:]
  -[CFXAnimojiPlaybackDelegate initWithImageARFrame:]
  -[CFXAnimojiPlaybackDelegate setStillImageARFrame:]
  -[CFXAnimojiPlaybackDelegate setMetadataAssetTrack:]
  -[CFXAnimojiPlaybackDelegate setMetadataAssetReader:]
  -[CFXAnimojiPlaybackDelegate metadataTrackReaderOutput]
  -[CFXAnimojiPlaybackDelegate assetReaderOutputMetadataAdaptor]
  -[CFXAnimojiPlaybackDelegate setAssetReaderOutputMetadataAdaptor:]
  -[CFXAnimojiPlaybackDelegate animojiRenderer]
  -[CFXAnimojiPlaybackDelegate setAnimojiRenderer:]
  -[CFXAnimojiPlaybackDelegate CFX_setUpDepthReaderForTrack:]
  -[CFXAnimojiPlaybackDelegate CFX_ARFrameForTime:depthTexture:]
  -[CFXAnimojiPlaybackDelegate CFX_updateCurrentDepthBufferForTime:]
  -[CFXAnimojiPlaybackDelegate currentDepthSample]
  -[CFXAnimojiPlaybackDelegate depthVideoAssetReader]
  -[CFXAnimojiPlaybackDelegate setDepthVideoTrackReaderOutput:]
  -[CFXAnimojiPlaybackDelegate setDepthVideoAssetReader:]
  -[CFXAnimojiPlaybackDelegate depthVideoTrack]
  -[CFXAnimojiPlaybackDelegate nextDepthSample]
  -[CFXAnimojiPlaybackDelegate setCurrentDepthSample:]
  -[CFXAnimojiPlaybackDelegate depthVideoTrackReaderOutput]
  -[CFXAnimojiPlaybackDelegate setNextDepthSample:]
  -[CFXAnimojiPlaybackDelegate assetWithDepthVideoTrack]
  -[CFXAnimojiPlaybackDelegate setAssetWithDepthVideoTrack:]
  -[CFXAnimojiPlaybackDelegate setDepthVideoTrack:]


JTStillMediaItem : JTAssetMediaItem
 @property  {CGSize=dd} sourceImageSize
 @property  JTThumbnailGenerator *thumbnailGenerator

  // class methods
  +[JTStillMediaItem stillMediaItemWithAssetIdentifier:progressHandlerBlock:delegate:completionHandler:]
  +[JTStillMediaItem stillMediaItemWithLocalURL:delegate:completionHandler:]

  // instance methods
  -[JTStillMediaItem isEqual:]
  -[JTStillMediaItem copyWithZone:]
  -[JTStillMediaItem .cxx_destruct]
  -[JTStillMediaItem info]
  -[JTStillMediaItem commonInit]
  -[JTStillMediaItem assetURL]
  -[JTStillMediaItem thumbnailGenerator]
  -[JTStillMediaItem setThumbnailGenerator:]
  -[JTStillMediaItem durationAt30fps]
  -[JTStillMediaItem sizeForQuality:]
  -[JTStillMediaItem initWithInfo:delegate:]
  -[JTStillMediaItem canBeAddedToSequence]
  -[JTStillMediaItem hasVisualCharacteristic]
  -[JTStillMediaItem hasPhotoCharacteristic]
  -[JTStillMediaItem generateThumbnailWithProgressHandler:completionHandler:]
  -[JTStillMediaItem generateLocalURLForAsset]
  -[JTStillMediaItem setSourceImageSize:]
  -[JTStillMediaItem sourceImageSize]
  -[JTStillMediaItem playBackImageSize:]
  -[JTStillMediaItem exportImageSize:]
  -[JTStillMediaItem imageSizeForRenderingIntent:originalSize:]
  -[JTStillMediaItem sizeForMaxPixels:sourceSize:]
  -[JTStillMediaItem thumbImageSize:]
  -[JTStillMediaItem imageForURL:renderingIntent:]
  -[JTStillMediaItem isImageValid:renderingIntent:size:]


JTClipUtilities : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[JTClipUtilities disableBuildAnimationForClip:shouldDisable:]
  +[JTClipUtilities disableBuildInForEffectsWithSameAppearenceInClip:otherClip:]


JTClipSequenceExporter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <JTCompositionClipsDataSource> *clipsDataSource
 @property  JTComposition *composition
 @property  JTReaderWriterExportController *exportController
 @property  NSDate *exportStartTime
 @property  NSDate *exportEndTime
 @property  <ExportDelegate> *delegate

  // instance methods
  -[JTClipSequenceExporter dealloc]
  -[JTClipSequenceExporter delegate]
  -[JTClipSequenceExporter setDelegate:]
  -[JTClipSequenceExporter .cxx_destruct]
  -[JTClipSequenceExporter cancel]
  -[JTClipSequenceExporter tearDown]
  -[JTClipSequenceExporter composition]
  -[JTClipSequenceExporter setComposition:]
  -[JTClipSequenceExporter clipsDataSource]
  -[JTClipSequenceExporter initWithClipsDataSource:]
  -[JTClipSequenceExporter setClipsDataSource:]
  -[JTClipSequenceExporter startWithPresets:toFilePath:poster:]
  -[JTClipSequenceExporter didFinishExport:]
  -[JTClipSequenceExporter exportProgressedTo:]
  -[JTClipSequenceExporter setExportStartTime:]
  -[JTClipSequenceExporter setExportController:]
  -[JTClipSequenceExporter exportController]
  -[JTClipSequenceExporter setExportEndTime:]
  -[JTClipSequenceExporter exportEndTime]
  -[JTClipSequenceExporter exportStartTime]
  -[JTClipSequenceExporter estimatedFileSizeForDuration:frameRate:preset:]
  -[JTClipSequenceExporter timeElapsedDuringExport]


JTEffectPropertiesConstants : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation

JTAudioClip : JTClip
 @property  NSURL *mediaItemURL

  // instance methods
  -[JTAudioClip init]
  -[JTAudioClip isEqual:]
  -[JTAudioClip copyWithZone:]
  -[JTAudioClip setDuration:]
  -[JTAudioClip mediaItemURL]
  -[JTAudioClip setMediaItemURL:]


CFXFaceReticleView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  BOOL isShowingFaceIndicator
 @property  UIImageView *reticleImageView
 @property  UISelectionFeedbackGenerator *feedbackGenerator
 @property  BOOL canPerformFadeInAnimations
 @property  BOOL canPerformFadeOutAnimations
 @property  UIViewPropertyAnimator *bounceAnimator
 @property  UIViewPropertyAnimator *fadeOutAnimator
 @property  UIViewPropertyAnimator *animojiBounceAnimator
 @property  UIViewPropertyAnimator *animojiFadeOutAnimator
 @property  NSMutableArray *reticleLayersToAnimate
 @property  <CFXFaceTrackingRendererHapticsDelegate> *hapticsDelegate

  // instance methods
  -[CFXFaceReticleView .cxx_destruct]
  -[CFXFaceReticleView setFeedbackGenerator:]
  -[CFXFaceReticleView feedbackGenerator]
  -[CFXFaceReticleView setFadeOutAnimator:]
  -[CFXFaceReticleView fadeOutAnimator]
  -[CFXFaceReticleView userFeedbackForTrackingType:needsHaptics:]
  -[CFXFaceReticleView fadeOutAndEndHapticWithCompletionBlock:]
  -[CFXFaceReticleView initWithFrame:reticleType:]
  -[CFXFaceReticleView updateFrameForDisplayRelativeToBounds:]
  -[CFXFaceReticleView showAndAnimateAnimojiFaceReticle]
  -[CFXFaceReticleView hideAnimojiFaceReticleAnimatedWithCompletion:]
  -[CFXFaceReticleView setupAnimojiReticleLayers]
  -[CFXFaceReticleView reticleImageView]
  -[CFXFaceReticleView fadeInAnimation]
  -[CFXFaceReticleView fadeOutAnimationWithCompletion:]
  -[CFXFaceReticleView shouldUseHapticFeedback:]
  -[CFXFaceReticleView canPerformFadeInAnimations]
  -[CFXFaceReticleView setCanPerformFadeInAnimations:]
  -[CFXFaceReticleView setCanPerformFadeOutAnimations:]
  -[CFXFaceReticleView setBounceAnimator:]
  -[CFXFaceReticleView bounceAnimator]
  -[CFXFaceReticleView canPerformFadeOutAnimations]
  -[CFXFaceReticleView setReticleLayersToAnimate:]
  -[CFXFaceReticleView reticleLayersToAnimate]
  -[CFXFaceReticleView setAnimojiBounceAnimator:]
  -[CFXFaceReticleView animojiBounceAnimator]
  -[CFXFaceReticleView animojiFadeInAnimation]
  -[CFXFaceReticleView setAnimojiFadeOutAnimator:]
  -[CFXFaceReticleView animojiFadeOutAnimator]
  -[CFXFaceReticleView animojiCloseAnimationWithCompletion:]
  -[CFXFaceReticleView hapticsDelegate]
  -[CFXFaceReticleView setHapticsDelegate:]
  -[CFXFaceReticleView isShowingFaceIndicator]
  -[CFXFaceReticleView setIsShowingFaceIndicator:]
  -[CFXFaceReticleView setReticleImageView:]


CFXExportClipDataSource : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <JTCompositionClipsDataSource>
 @property  JTClip *clip
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CFXExportClipDataSource .cxx_destruct]
  -[CFXExportClipDataSource duration]
  -[CFXExportClipDataSource clip]
  -[CFXExportClipDataSource imageScale]
  -[CFXExportClipDataSource naturalSize]
  -[CFXExportClipDataSource isFullScreen]
  -[CFXExportClipDataSource setClip:]
  -[CFXExportClipDataSource supportsDeepColor]
  -[CFXExportClipDataSource timeScale]
  -[CFXExportClipDataSource frameRate]
  -[CFXExportClipDataSource currentClip]
  -[CFXExportClipDataSource clipCount]
  -[CFXExportClipDataSource clipAtIndex:]
  -[CFXExportClipDataSource screenCanShow2160P]
  -[CFXExportClipDataSource isExporting]
  -[CFXExportClipDataSource use2160Pcontent:]
  -[CFXExportClipDataSource duckAllAudioClips]
  -[CFXExportClipDataSource backgroundAudioClip]
  -[CFXExportClipDataSource fullScreenPlaybackOnExternalDisplay]
  -[CFXExportClipDataSource dontRenderLiveTitles]
  -[CFXExportClipDataSource initWithClip:]
  -[CFXExportClipDataSource indexOfClip:]


BEAlertController : UIAlertController /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  BOOL isSheet
 @property  long long alertTag

  // class methods
  +[BEAlertController showOneButtonAlertWithTitle:message:buttonTitle:buttonHandler:]
  +[BEAlertController showOneButtonSheetOnViewController:withTitle:message:buttonTitle:buttonHandler:]
  +[BEAlertController showTwoButtonAlertWithTitle:message:button1Title:button1Style:button1Handler:button2Title:button2Style:button2Handler:]
  +[BEAlertController showTwoButtonSheetOnViewController:withTitle:message:button1Title:button1Style:button1Handler:button2Title:button2Style:button2Handler:]

  // instance methods
  -[BEAlertController textFieldCount]
  -[BEAlertController buttonCount]
  -[BEAlertController viewDidDisappear:]
  -[BEAlertController isSheet]
  -[BEAlertController setIsSheet:]
  -[BEAlertController cancelButtonAction]
  -[BEAlertController showAnimated:]
  -[BEAlertController dismissWithNoActionAnimated:]
  -[BEAlertController dismissWithCancelActionAnimated:]
  -[BEAlertController initAlertWithTitle:message:]
  -[BEAlertController addAlertCancelButtonWithTitle:tag:action:]
  -[BEAlertController initSheetWithTitle:message:]
  -[BEAlertController showOnViewController:animated:]
  -[BEAlertController addAlertButtonWithTitle:style:tag:action:]
  -[BEAlertController initWithStyle:title:message:]
  -[BEAlertController buttonActionWithTag:]
  -[BEAlertController textFieldWithTag:]
  -[BEAlertController addAlertButton:]
  -[BEAlertController addAlertButtonWithTitle:tag:action:]
  -[BEAlertController addAlertDestructiveButtonWithTitle:tag:action:]
  -[BEAlertController addAlertTextFieldWithTag:configurationBlock:]
  -[BEAlertController showInView:viewController:animated:]
  -[BEAlertController showFromRect:inView:viewController:arrowDirection:animated:]
  -[BEAlertController dismissWithActionForTag:animated:]
  -[BEAlertController textInFieldWithTag:]
  -[BEAlertController alertTag]
  -[BEAlertController setAlertTag:]


BEAlertAction : UIAlertAction /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  long long tag
 @property  @? actionHandler

  // instance methods
  -[BEAlertAction .cxx_destruct]
  -[BEAlertAction tag]
  -[BEAlertAction setActionHandler:]
  -[BEAlertAction actionHandler]
  -[BEAlertAction setTag:]
  -[BEAlertAction initWithTitle:style:tag:action:]
  -[BEAlertAction doActionHandler]


JTOrientationMonitor : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  UIWindow *window
 @property  long long windowInterfaceOrientation_internal
 @property  CAMMotionController *motionController
 @property  long long captureInterfaceOrientation_internal
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long windowInterfaceOrientation
 @property  long long captureInterfaceOrientation
 @property  long long statusBarOrientation

  // class methods
  +[JTOrientationMonitor sharedInstance]
  +[JTOrientationMonitor automaticallyNotifiesObserversForKey:]
  +[JTOrientationMonitor initializeWithWindow:]
  +[JTOrientationMonitor rotationFromCaptureDevicePosition:captureVideoOrientation:toInterfaceOrientation:]
  +[JTOrientationMonitor CFX_sharedInstanceWithWindow:]

  // instance methods
  -[JTOrientationMonitor dealloc]
  -[JTOrientationMonitor setQueue:]
  -[JTOrientationMonitor queue]
  -[JTOrientationMonitor .cxx_destruct]
  -[JTOrientationMonitor window]
  -[JTOrientationMonitor setWindow:]
  -[JTOrientationMonitor initWithWindow:]
  -[JTOrientationMonitor statusBarOrientation]
  -[JTOrientationMonitor windowInterfaceOrientation]
  -[JTOrientationMonitor motionController]
  -[JTOrientationMonitor captureInterfaceOrientation]
  -[JTOrientationMonitor CFX_setWindowInterfaceOrientation:]
  -[JTOrientationMonitor applicationDidChangeStatusBarOrientationNotification:]
  -[JTOrientationMonitor camMotionControllerCaptureOrientationChangedNotification:]
  -[JTOrientationMonitor CFX_setCaptureInterfaceOrientation:]
  -[JTOrientationMonitor windowInterfaceOrientation_internal]
  -[JTOrientationMonitor captureInterfaceOrientation_internal]
  -[JTOrientationMonitor setWindowInterfaceOrientation_internal:]
  -[JTOrientationMonitor setCaptureInterfaceOrientation_internal:]
  -[JTOrientationMonitor setMotionController:]


CFXClipPlayerViewController : JTClipPlayerViewController
  // instance methods
  -[CFXClipPlayerViewController displayCompositionUpdateLoadingView:]


CFXEffectMessagesStickerProperties : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *effectID
 @property  NSURL *previewUrl
 @property  NSString *localizedDescription

  // instance methods
  -[CFXEffectMessagesStickerProperties localizedDescription]
  -[CFXEffectMessagesStickerProperties .cxx_destruct]
  -[CFXEffectMessagesStickerProperties effectID]
  -[CFXEffectMessagesStickerProperties initWithEffectID:previewUrl:localizedDescription:]
  -[CFXEffectMessagesStickerProperties previewUrl]


JTTextEffectEditorView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation <UITextDragDelegate, UITextPasteDelegate, UITextViewDelegate, JTTextEffectEditorTextViewDelegate>
 @property  JTTextEffectEditorTextView *editField
 @property  NSString *text
 @property  <JTTextEffectEditorViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[JTTextEffectEditorView delegate]
  -[JTTextEffectEditorView setDelegate:]
  -[JTTextEffectEditorView .cxx_destruct]
  -[JTTextEffectEditorView text]
  -[JTTextEffectEditorView initWithFrame:]
  -[JTTextEffectEditorView selectAll]
  -[JTTextEffectEditorView textDraggableView:itemsForDrag:]
  -[JTTextEffectEditorView textViewDidChange:]
  -[JTTextEffectEditorView textView:shouldChangeTextInRange:replacementText:]
  -[JTTextEffectEditorView textPasteConfigurationSupporting:shouldAnimatePasteOfAttributedString:toRange:]
  -[JTTextEffectEditorView sharedInit]
  -[JTTextEffectEditorView textEffectEditorTextViewDidUnmarkText:]
  -[JTTextEffectEditorView endTextEditing]
  -[JTTextEffectEditorView applyTextEditingProperties:]
  -[JTTextEffectEditorView textEditingFrameRelativeToView:]
  -[JTTextEffectEditorView CFX_setupTextField]
  -[JTTextEffectEditorView editField]
  -[JTTextEffectEditorView CFX_adjustFrameAndTextContainerInsetsForEditField:]
  -[JTTextEffectEditorView selectAtEnd]
  -[JTTextEffectEditorView setEditField:]


JTOverlayDebugRect : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double borderWidth
 @property  UIColor *borderColor
 @property  BOOL ignoreTransform

  // instance methods
  -[JTOverlayDebugRect .cxx_destruct]
  -[JTOverlayDebugRect frame]
  -[JTOverlayDebugRect setBorderColor:]
  -[JTOverlayDebugRect setFrame:]
  -[JTOverlayDebugRect borderWidth]
  -[JTOverlayDebugRect setBorderWidth:]
  -[JTOverlayDebugRect borderColor]
  -[JTOverlayDebugRect setIgnoreTransform:]
  -[JTOverlayDebugRect ignoreTransform]


JTOverlayDebugView : UIView /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  UIView *rootContainerView
 @property  UIView *nonTrackedContainerView
 @property  UIView *trackedContainerView
 @property  UIView *nonTrackedDocumentBoundingBoxView
 @property  CAShapeLayer *nonTrackedDocumentBoundingBoxLayer
 @property  UIView *trackedDocumentBoundingBoxView
 @property  CAShapeLayer *trackedDocumentBoundingBox
 @property  UIView *nonTrackedObjectAlignedBoundingBoxView
 @property  UIView *trackedObjectAlignedBoundingBoxView
 @property  UIView *nonTrackedMidpointView
 @property  UIView *trackedMidpointView
 @property  UIView *nonTrackedPointsView
 @property  UIView *trackedPointsView
 @property  UIView *nonTrackedAdditionalRectsContainerView
 @property  UIView *trackedAdditionalRectsContainerView
 @property  UIColor *nonTrackedDocumentBoundingBoxColor
 @property  UIColor *trackedDocumentBoundingBoxColor
 @property  UIColor *nonTrackedObjectAlignedBoundingBoxColor
 @property  UIColor *trackedObjectAlignedBoundingBoxColor
 @property  UIColor *nonTrackedMidpointColor
 @property  UIColor *nonTrackedCornerPoint0Color
 @property  UIColor *nonTrackedCornerPoint1Color
 @property  UIColor *nonTrackedCornerPoint2Color
 @property  UIColor *nonTrackedCornerPoint3Color
 @property  UIColor *trackedMidpointColor
 @property  UIColor *trackedCornerPoint0Color
 @property  UIColor *trackedCornerPoint1Color
 @property  UIColor *trackedCornerPoint2Color
 @property  UIColor *trackedCornerPoint3Color
 @property  NSArray *additionalNonTrackedRectsToDraw
 @property  NSArray *additionalTrackedRectsToDraw
 @property  <JTOverlayDebugViewDelegate> *delegate

  // instance methods
  -[JTOverlayDebugView initWithCoder:]
  -[JTOverlayDebugView delegate]
  -[JTOverlayDebugView setDelegate:]
  -[JTOverlayDebugView .cxx_destruct]
  -[JTOverlayDebugView initWithFrame:]
  -[JTOverlayDebugView setupViews]
  -[JTOverlayDebugView initWithFrame:delegate:]
  -[JTOverlayDebugView updateWithEffectFrame:effect:]
  -[JTOverlayDebugView setRootContainerView:]
  -[JTOverlayDebugView rootContainerView]
  -[JTOverlayDebugView setNonTrackedContainerView:]
  -[JTOverlayDebugView nonTrackedContainerView]
  -[JTOverlayDebugView setTrackedContainerView:]
  -[JTOverlayDebugView trackedContainerView]
  -[JTOverlayDebugView setNonTrackedDocumentBoundingBoxView:]
  -[JTOverlayDebugView nonTrackedDocumentBoundingBoxView]
  -[JTOverlayDebugView setNonTrackedDocumentBoundingBoxLayer:]
  -[JTOverlayDebugView nonTrackedDocumentBoundingBoxLayer]
  -[JTOverlayDebugView setNonTrackedObjectAlignedBoundingBoxView:]
  -[JTOverlayDebugView nonTrackedObjectAlignedBoundingBoxView]
  -[JTOverlayDebugView setNonTrackedMidpointView:]
  -[JTOverlayDebugView nonTrackedMidpointView]
  -[JTOverlayDebugView setNonTrackedPointsView:]
  -[JTOverlayDebugView nonTrackedPointsView]
  -[JTOverlayDebugView setNonTrackedAdditionalRectsContainerView:]
  -[JTOverlayDebugView nonTrackedAdditionalRectsContainerView]
  -[JTOverlayDebugView setTrackedDocumentBoundingBoxView:]
  -[JTOverlayDebugView trackedDocumentBoundingBoxView]
  -[JTOverlayDebugView setTrackedDocumentBoundingBox:]
  -[JTOverlayDebugView trackedDocumentBoundingBox]
  -[JTOverlayDebugView setTrackedObjectAlignedBoundingBoxView:]
  -[JTOverlayDebugView trackedObjectAlignedBoundingBoxView]
  -[JTOverlayDebugView setTrackedMidpointView:]
  -[JTOverlayDebugView trackedMidpointView]
  -[JTOverlayDebugView setTrackedPointsView:]
  -[JTOverlayDebugView trackedPointsView]
  -[JTOverlayDebugView setTrackedAdditionalRectsContainerView:]
  -[JTOverlayDebugView trackedAdditionalRectsContainerView]
  -[JTOverlayDebugView showDocumentBoundingBox]
  -[JTOverlayDebugView showObjectAlignedBoundingBox]
  -[JTOverlayDebugView showNonTrackedWhenTracking]
  -[JTOverlayDebugView trackedDocumentBoundingBoxColor]
  -[JTOverlayDebugView updateDocumentBoundingBoxView:transform:borderLayer:borderColor:borderPhase:]
  -[JTOverlayDebugView trackedObjectAlignedBoundingBoxColor]
  -[JTOverlayDebugView updateObjectAlignedBoundingBoxView:bounds:color:transform:]
  -[JTOverlayDebugView trackedCornerPoint0Color]
  -[JTOverlayDebugView trackedCornerPoint1Color]
  -[JTOverlayDebugView trackedCornerPoint2Color]
  -[JTOverlayDebugView trackedCornerPoint3Color]
  -[JTOverlayDebugView showCornerPoints]
  -[JTOverlayDebugView updatePointsView:points:colors:pointSize:hidden:]
  -[JTOverlayDebugView trackedMidpointColor]
  -[JTOverlayDebugView showMidpoint]
  -[JTOverlayDebugView additionalTrackedRectsToDraw]
  -[JTOverlayDebugView updateAdditionalRectsView:rects:transform:]
  -[JTOverlayDebugView nonTrackedDocumentBoundingBoxColor]
  -[JTOverlayDebugView nonTrackedObjectAlignedBoundingBoxColor]
  -[JTOverlayDebugView nonTrackedCornerPoint0Color]
  -[JTOverlayDebugView nonTrackedCornerPoint1Color]
  -[JTOverlayDebugView nonTrackedCornerPoint2Color]
  -[JTOverlayDebugView nonTrackedCornerPoint3Color]
  -[JTOverlayDebugView nonTrackedMidpointColor]
  -[JTOverlayDebugView additionalNonTrackedRectsToDraw]
  -[JTOverlayDebugView setNonTrackedDocumentBoundingBoxColor:]
  -[JTOverlayDebugView setTrackedDocumentBoundingBoxColor:]
  -[JTOverlayDebugView setNonTrackedObjectAlignedBoundingBoxColor:]
  -[JTOverlayDebugView setTrackedObjectAlignedBoundingBoxColor:]
  -[JTOverlayDebugView setNonTrackedMidpointColor:]
  -[JTOverlayDebugView setNonTrackedCornerPoint0Color:]
  -[JTOverlayDebugView setNonTrackedCornerPoint1Color:]
  -[JTOverlayDebugView setNonTrackedCornerPoint2Color:]
  -[JTOverlayDebugView setNonTrackedCornerPoint3Color:]
  -[JTOverlayDebugView setTrackedMidpointColor:]
  -[JTOverlayDebugView setTrackedCornerPoint0Color:]
  -[JTOverlayDebugView setTrackedCornerPoint1Color:]
  -[JTOverlayDebugView setTrackedCornerPoint2Color:]
  -[JTOverlayDebugView setTrackedCornerPoint3Color:]


CFXAnimojiEffectRenderer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <SCNSceneRendererDelegate>
 @property  AVTRenderer *renderer
 @property  AVTAvatarStore *avatarStore
 @property  NSString *currentAvatarIdentifier
 @property  NSLock *rendererLock
 @property  ^{__CVMetalTextureCache=} metalTextureCache
 @property  ^{__CVMetalTextureCache=} metalDepthTextureCache
 @property  {CGSize=dd} workingSize
 @property  ^{__CVPixelBufferPool=} inputBufferPool
 @property  double systemTimeForAVTRenderer
 @property  BOOL asynchronouslyLoadNewPuppets
 @property  <CFXAnimojiTrackingLossDelegate> *trackingLossDelegate
 @property  BOOL allowAntialiasing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CFXAnimojiEffectRenderer sharedInstance]
  +[CFXAnimojiEffectRenderer setupAVTMetalShaderCache]

  // instance methods
  -[CFXAnimojiEffectRenderer init]
  -[CFXAnimojiEffectRenderer dealloc]
  -[CFXAnimojiEffectRenderer clear]
  -[CFXAnimojiEffectRenderer .cxx_destruct]
  -[CFXAnimojiEffectRenderer flush]
  -[CFXAnimojiEffectRenderer renderer]
  -[CFXAnimojiEffectRenderer setRenderer:]
  -[CFXAnimojiEffectRenderer avatarStore]
  -[CFXAnimojiEffectRenderer setAvatarStore:]
  -[CFXAnimojiEffectRenderer renderWithInputs:time:metadata:]
  -[CFXAnimojiEffectRenderer setAllowAntialiasing:]
  -[CFXAnimojiEffectRenderer setWorkingSize:]
  -[CFXAnimojiEffectRenderer workingSize]
  -[CFXAnimojiEffectRenderer metalTextureCache]
  -[CFXAnimojiEffectRenderer setupInputBufferPoolForSize:]
  -[CFXAnimojiEffectRenderer inputBufferPool]
  -[CFXAnimojiEffectRenderer setInputBufferPool:]
  -[CFXAnimojiEffectRenderer setMetalTextureCache:]
  -[CFXAnimojiEffectRenderer setTrackingLossDelegate:]
  -[CFXAnimojiEffectRenderer setAsynchronouslyLoadNewPuppets:]
  -[CFXAnimojiEffectRenderer newPixelBufferRenderedFromARFrame:withEffect:depthTexture:pauseSimulationPhysicsAndDepth:captureOrientation:interfaceOrientation:]
  -[CFXAnimojiEffectRenderer rendererLock]
  -[CFXAnimojiEffectRenderer setCurrentAvatarIdentifier:]
  -[CFXAnimojiEffectRenderer clearRenderer_renderLocked]
  -[CFXAnimojiEffectRenderer inputBufferIsPortraitAspect:]
  -[CFXAnimojiEffectRenderer newPixelBufferRenderedFromARFrame:withEffect:captureOrientation:interfaceOrientation:]
  -[CFXAnimojiEffectRenderer currentAvatarIdentifier]
  -[CFXAnimojiEffectRenderer asynchronouslyLoadNewPuppets]
  -[CFXAnimojiEffectRenderer asyncLoadNewPuppet:currentPuppet:captureOrientation:interfaceOrientation:primeFrame:]
  -[CFXAnimojiEffectRenderer _createNewRendererForPuppet:]
  -[CFXAnimojiEffectRenderer CFX_getRenderer:forAnimojiEffect:primeFrame:captureOrientation:interfaceOrientation:]
  -[CFXAnimojiEffectRenderer CFX_setupPuppetRender:forFrame:captureOrientation:interfaceOrientation:isInitialSetup:]
  -[CFXAnimojiEffectRenderer renderAnimoji:withPresentationTime:depthTexture:completionBlock:]
  -[CFXAnimojiEffectRenderer CFX_focalLengthForFrame:workingSize:interfaceOrientation:]
  -[CFXAnimojiEffectRenderer trackingLossDelegate]
  -[CFXAnimojiEffectRenderer CFX_depthDataToTexture:]
  -[CFXAnimojiEffectRenderer renderFrame:withEffect:depthTexture:pauseSimulationPhysicsAndDepth:captureOrientation:interfaceOrientation:completionBlock:]
  -[CFXAnimojiEffectRenderer testCurrentPuppetisEqualToPuppet:]
  -[CFXAnimojiEffectRenderer updateCurrentRenderer:puppetName:]
  -[CFXAnimojiEffectRenderer setSystemTimeForAVTRenderer:]
  -[CFXAnimojiEffectRenderer allowAntialiasing]
  -[CFXAnimojiEffectRenderer systemTimeForAVTRenderer]
  -[CFXAnimojiEffectRenderer setRendererLock:]
  -[CFXAnimojiEffectRenderer metalDepthTextureCache]
  -[CFXAnimojiEffectRenderer setMetalDepthTextureCache:]


ARFaceAnchor(DebugOutput)
	// instance methods
	-[ARFaceAnchor(DebugOutput) description]

UIDevice(Additions)
	// instance methods
	-[UIDevice(Additions) aspectRatio]
	-[UIDevice(Additions) screenBounds]
	-[UIDevice(Additions) imageScale]
	-[UIDevice(Additions) memorySize]
	-[UIDevice(Additions) screenHeight]
	-[UIDevice(Additions) orientationString]
	-[UIDevice(Additions) cpuFamily]
	-[UIDevice(Additions) thumbnailScale]
	-[UIDevice(Additions) osBuildNumber:]
	-[UIDevice(Additions) enoughPowerForStyleTransfer]
	-[UIDevice(Additions) isSelfieCompatible]
	-[UIDevice(Additions) numberOfCPU]
	-[UIDevice(Additions) hasMoreThan1GBOfMemory]
	-[UIDevice(Additions) osVersionAtLeast:]
	-[UIDevice(Additions) enoughPowerForLargerPhotoThumbnails]
	-[UIDevice(Additions) canEncode2160P:]
	-[UIDevice(Additions) enoughMemoryFor2160P]
	-[UIDevice(Additions) enoughPowerFor2160P]
	-[UIDevice(Additions) hasPlentyOfMemory]
	-[UIDevice(Additions) enoughMemoryForRendering12MPPhoto]
	-[UIDevice(Additions) _deviceHasTrueDepth]
	-[UIDevice(Additions) _deviceHasDualBackCam]
	-[UIDevice(Additions) hasDualBackCam]
	-[UIDevice(Additions) isLargePhone]
	-[UIDevice(Additions) isWidePhone]
	-[UIDevice(Additions) freeMemory]
	-[UIDevice(Additions) CFX_disableExpensiveFilters]
	-[UIDevice(Additions) squareCompositionSize]
	-[UIDevice(Additions) enoughPowerForUIBlur]
	-[UIDevice(Additions) canEncode2160P]
	-[UIDevice(Additions) canEncodeHEVC2160P]
	-[UIDevice(Additions) screenCanShow2160P]
	-[UIDevice(Additions) canDecodeHEVC2160P]
	-[UIDevice(Additions) deviceCharacteristicsDict]
	-[UIDevice(Additions) maxPixelsForImage:]
	-[UIDevice(Additions) allowsDepthFromDualBackCamera]

NSString(Matrix_Utilities)
	// class methods
	+[NSString(Matrix_Utilities) stringFromSCNMatrix4:]
	+[NSString(Matrix_Utilities) stringFromMat4:]

NSBundle(CFX)
	// class methods
	+[NSBundle(CFX) cfxBundle]

UIApplication(UIApplicationAdditions)
	// instance methods
	-[UIApplication(UIApplicationAdditions) topmostViewController]
	-[UIApplication(UIApplicationAdditions) isAlertControllerPresenting]

UIImage(Blur)
	// class methods
	+[UIImage(Blur) imageWithColor:]
	+[UIImage(Blur) imageWithColor:andSize:]
	+[UIImage(Blur) isSizeSwappedForImageOrientation:]
	+[UIImage(Blur) transformForImageOrientation:andSize:]

	// instance methods
	-[UIImage(Blur) tintedImage]
	-[UIImage(Blur) bluredImageWithFlippedXAxis:]
	-[UIImage(Blur) adjustFitInSize:normalizeOrientation:]
	-[UIImage(Blur) drawImageIntoSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Blur) scaledSized:maintainAspectRatio:]
	-[UIImage(Blur) extendedRangeSafeDrawInRect:]
	-[UIImage(Blur) extendedRangeSafeDrawInRect:opaque:scale:]
	-[UIImage(Blur) cropImage:]
	-[UIImage(Blur) _isSRGB]
	-[UIImage(Blur) drawInRect:fromRect:blendMode:alpha:]
	-[UIImage(Blur) scaledImageEqualOrSmallerThanSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Blur) scaledSizeEqualOrSmallerThanSize:maintainAspectRatio:normalizeOrientation:]
	-[UIImage(Blur) scaledImageWithMaxDimension:]
	-[UIImage(Blur) cropped16X9Image]

CIImage(Blur)
	// instance methods
	-[CIImage(Blur) bluredImageWithFlippedXAxis:]

NSDictionary(Additions)
	// instance methods
	-[NSDictionary(Additions) boolForKey:]
	-[NSDictionary(Additions) integerForKey:]
	-[NSDictionary(Additions) floatForKey:]
	-[NSDictionary(Additions) doubleForKey:]
	-[NSDictionary(Additions) boolForKey:defaultValue:]
	-[NSDictionary(Additions) intForKey:defaultValue:]
	-[NSDictionary(Additions) floatForKey:defaultValue:]
	-[NSDictionary(Additions) doubleForKey:defaultValue:]
	-[NSDictionary(Additions) objectForIndex:]
	-[NSDictionary(Additions) objectForKey:defaultValue:]
	-[NSDictionary(Additions) integerForKey:defaultValue:]
	-[NSDictionary(Additions) intForKey:]
	-[NSDictionary(Additions) rectForKey:]
	-[NSDictionary(Additions) mutableDeepCopy]
	-[NSDictionary(Additions) unsignedIntegerForKey:]
	-[NSDictionary(Additions) rectForKey:defaultValue:]
	-[NSDictionary(Additions) objectOrNullForKey:]

NSMutableDictionary(Additions)
	// instance methods
	-[NSMutableDictionary(Additions) setInteger:forKey:]
	-[NSMutableDictionary(Additions) setFloat:forKey:]
	-[NSMutableDictionary(Additions) setDouble:forKey:]
	-[NSMutableDictionary(Additions) setBool:forKey:]
	-[NSMutableDictionary(Additions) setInt:forKey:]
	-[NSMutableDictionary(Additions) setObject:forIndex:]
	-[NSMutableDictionary(Additions) setUnsignedInteger:forKey:]
	-[NSMutableDictionary(Additions) copyObjectFromDictionary:forKey:]
	-[NSMutableDictionary(Additions) setObjectOrRemoveIfNil:forKey:]
	-[NSMutableDictionary(Additions) copyObjectFromDictionaryRemoveIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setRect:forKey:]
	-[NSMutableDictionary(Additions) setRectIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setObjectIfNotNil:forKey:]
	-[NSMutableDictionary(Additions) setBoolIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setIntIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setFloatIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setDoubleIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) setObjectIfNotPresent:forKey:]
	-[NSMutableDictionary(Additions) copyObjectsFromDictionary:forKeys:]
	-[NSMutableDictionary(Additions) copyObjectsFromDictionaryRemoveIfNotPresent:forKeys:]
	-[NSMutableDictionary(Additions) removeObjectsForKeysOtherThan:]

PHAsset(CloudSupport)
	// instance methods
	-[PHAsset(CloudSupport) isAssetLocalWithCompletion:requiresDerivative:]

NSObject(JTAdditions)
	// instance methods
	-[NSObject(JTAdditions) mutableDeepCopy]
	-[NSObject(JTAdditions) jtRemoveObserver:forKeyPath:context:]
	-[NSObject(JTAdditions) jtRemoveObserver:forKeyPath:]

AVAssetReaderAudioMixOutput(AVAssetReaderAudioMixOutput_AudioMixConvenienceAdditions)
	// class methods
	+[AVAssetReaderAudioMixOutput(AVAssetReaderAudioMixOutput_AudioMixConvenienceAdditions) assetReaderAudioMixOutputWithAudioMix:appliedToAsset:audioSettings:]

AVAssetReaderVideoCompositionOutput(AVAssetReaderVideoCompositionOutput_VideoCompositionConvenienceAdditions)
	// class methods
	+[AVAssetReaderVideoCompositionOutput(AVAssetReaderVideoCompositionOutput_VideoCompositionConvenienceAdditions) assetReaderVideoCompositionOutputWithVideoComposition:appliedToAsset:videoSettings:]

UIViewController(JTAdditions)
	// instance methods
	-[UIViewController(JTAdditions) jtAddChildViewController:constrainRelativeToSafeAreas:]
	-[UIViewController(JTAdditions) displaySnapshot:atCenterPoint:atIndex:forTransitionToSize:fadeOut:withTransitionCoordinator:preTransitionBlock:postTransitionBlock:]
	-[UIViewController(JTAdditions) animateCounterRotationView:fadeOut:toWindowOrientation:fromWindowOrientation:forTransitionToSize:withTransitionCoordinator:postTransitionBlock:postRemoveFromSuperviewBlock:]
	-[UIViewController(JTAdditions) counterRotationViewForSnapshot:atCenterPoint:toWindowOrientation:fromWindowOrientation:]
	-[UIViewController(JTAdditions) applyRotationTransformForPortrait]
	-[UIViewController(JTAdditions) jtRemoveFromParentViewController]
	-[UIViewController(JTAdditions) jtCenterAdjustedForOrientationForPortraitFrame:]
	-[UIViewController(JTAdditions) jtAddChildViewController:]
	-[UIViewController(JTAdditions) jtAddChildViewController:containerView:constrainToContainer:relativeToSafeArea:]
	-[UIViewController(JTAdditions) jtAddChildViewController:containerView:]
	-[UIViewController(JTAdditions) jtCenterAdjustedForOrientationForPortraitFrameWithParentFrame:frame:]
	-[UIViewController(JTAdditions) jtDisplayScale]

PVImageBuffer(JTAdditions)
	// instance methods
	-[PVImageBuffer(JTAdditions) copyOfUIImage]
	-[PVImageBuffer(JTAdditions) copyOfUIImage:]
	-[PVImageBuffer(JTAdditions) copyOfUIImageFromRectInPixels:atSizeInPixels:]

NSArray(MutableDeepCopy)
	// instance methods
	-[NSArray(MutableDeepCopy) mutableDeepCopy]

NSSet(MutableDeepCopy)
	// instance methods
	-[NSSet(MutableDeepCopy) mutableDeepCopy]

01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARDeviceOrientationSensor 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARFaceAnchor 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARFaceData 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARFaceTrackingConfiguration 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARFrame 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARImageData 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARMotionSensor 
01 00 1400 /System/Library/Frameworks/ARKit.framework/ARKit: ARSession 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReader 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderAudioMixOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderOutputMetadataAdaptor 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderTrackOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetReaderVideoCompositionOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputMetadataAdaptor 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputPixelBufferAdaptor 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureAudioDataOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDataOutputSynchronizer 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDepthDataOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoSettings 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCompositionTrackSegment 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataFaceObject 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMix 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableAudioMixInputParameters 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableComposition 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputSettingsAssistant 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0e00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 1140 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTAnimoji 
01 00 0940 /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI: AVTAvatarFetchRequest 
01 00 0940 /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI: AVTAvatarRecordRendering 
01 00 0940 /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI: AVTAvatarStore 
01 00 1140 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTFaceTracker 
01 00 1140 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTFaceTrackingInfo 
01 00 1140 /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit: AVTRenderer 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTimedMetadataGroup 
01 00 1f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMBottomBar 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMCaptureCapabilities 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMControlStatusBar 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMCreativeCameraButton 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMDynamicShutterControl 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMElapsedTimeView 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMFlashButton 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMFlipButton 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMFullscreenViewfinderLayout 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMMotionController 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMSnapshotView 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMViewfinderReticleView 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMZoomControl 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMZoomControlUtilities 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMZoomSlider 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CAMZoomSliderUtilities 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1800 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1800 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1800 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0800 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CUShutterButton 
01 00 0500 /System/Library/PrivateFrameworks/Espresso.framework/Espresso: EspressoImage2Image 
01 00 0b00 /System/Library/PrivateFrameworks/iMessageApps.framework/iMessageApps: IMADockViewController 
01 00 0b00 /System/Library/PrivateFrameworks/iMessageApps.framework/iMessageApps: IMASticker 
01 00 0600 /System/Library/Frameworks/Messages.framework/Messages: MSMessagesAppViewController 
01 00 1700 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKTextureLoader 
01 00 1700 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKView 
01 00 1a00 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 1a00 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 1a00 /System/Library/Frameworks/Metal.framework/Metal: MTLSamplerDescriptor 
01 00 1a00 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: NSShadow 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 2000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PCMatrix44Double 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollection 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollectionChangeRequest 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCreationRequest 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHAssetResourceCreationOptions 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingInputRequestOptions 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 1500 /System/Library/Frameworks/Photos.framework/Photos: PHVideoRequestOptions 
01 00 0700 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUReviewScreenDoneButton 
01 00 0700 /System/Library/Frameworks/PhotosUI.framework/PhotosUI: PUReviewScreenUtilities 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVCMSampleBuffer 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVEffect 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVEffectResources 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVFrameSet 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVImageBuffer 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphEffectNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphGeneratorNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphImageBufferSourceNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphImageSourceNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphSourceCompositeNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVInstructionGraphSourceTrackNode 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayer 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayerCARenderLink 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayerCameraRenderLink 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayerCameraSource 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayerImageSource 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVLivePlayerThermalThrottlingPolicy 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVMultiBlendLayerParams 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVRenderRequest 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVRenderer 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVTransformAnimation 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositing 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositingExporter 
01 00 0c00 /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo: PVVideoCompositionInstruction 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNBillboardConstraint 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNBox 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNCamera 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNNode 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNPlane 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNRenderer 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNScene 
01 00 0a00 /System/Library/Frameworks/SceneKit.framework/SceneKit: SCNTransaction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayout 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewFlowLayoutInvalidationContext 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UINib 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRotationGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStoryboard 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0240 /System/Library/PrivateFrameworks/VideoProcessing.framework/VideoProcessing: VCPCaptureAnalysisSession 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIButtonFeedbackGenerator 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIButtonFeedbackGeneratorConfiguration 
01 00 1e00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiscreteFeedback 
