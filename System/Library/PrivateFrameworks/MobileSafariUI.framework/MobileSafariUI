|| __DATA.__data _kPageLoadStatsErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_CompletionDetailViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DownloadsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_HistoryTableViewCellModel
|| __DATA.__objc_data _OBJC_CLASS_$_HistoryTableViewDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_IndexMove
|| __DATA.__objc_data _OBJC_CLASS_$_LibrarySectionController
|| __DATA.__objc_data _OBJC_CLASS_$_NavigationBar
|| __DATA.__objc_data _OBJC_CLASS_$_PageLoadTestStatistics
|| __DATA.__objc_data _OBJC_CLASS_$_QuickWebsiteSearchCompletionItem
|| __DATA.__objc_data _OBJC_CLASS_$_ReadingListCompletionItem
|| __DATA.__objc_data _OBJC_CLASS_$_ReadingListCompletionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_ReadingListMetadataFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_SearchQueryRestorationCompletionItem
|| __DATA.__objc_data _OBJC_CLASS_$_SetChange
|| __DATA.__objc_data _OBJC_CLASS_$_SidebarViewController
|| __DATA.__objc_data _OBJC_CLASS_$_TabDocumentMenuProvider
|| __DATA.__objc_data _OBJC_CLASS_$_TabGroupLibrarySectionController
|| __DATA.__objc_data _OBJC_CLASS_$_UnifiedTabBar
|| __DATA.__objc_data _OBJC_METACLASS_$_CompletionDetailViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DownloadsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_HistoryTableViewCellModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HistoryTableViewDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_IndexMove
|| __DATA.__objc_data _OBJC_METACLASS_$_LibrarySectionController
|| __DATA.__objc_data _OBJC_METACLASS_$_NavigationBar
|| __DATA.__objc_data _OBJC_METACLASS_$_PageLoadTestStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$_QuickWebsiteSearchCompletionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ReadingListCompletionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_ReadingListCompletionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_ReadingListMetadataFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SearchQueryRestorationCompletionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SetChange
|| __DATA.__objc_data _OBJC_METACLASS_$_SidebarViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_TabDocumentMenuProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_TabGroupLibrarySectionController
|| __DATA.__objc_data _OBJC_METACLASS_$_UnifiedTabBar
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._isReadingDefaults
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._isRunningCanvasTest
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._isRunningShowBookmarksTest
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._shouldReadDefaultsOnResume
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._startedBookmarksTest
|| __DATA.__objc_ivar _OBJC_IVAR_$_Application._willEnterSuspendedState
|| __DATA.__objc_ivar _OBJC_IVAR_$_PageLoadTestStatistics._framesToLoad
|| __DATA.__objc_ivar _OBJC_IVAR_$_PageLoadTestStatistics._onloadEventsHandled
|| __DATA.__objc_ivar _OBJC_IVAR_$_PageLoadTestStatistics._pageLoadingTimeoutTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PageLoadTestStatistics._pendingResourceLoad
|| __DATA.__objc_ivar _OBJC_IVAR_$_PageLoadTestStatistics._waitForNewPageLoadEventsTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._activeTabGroup
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._browserController
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._didReadWindowState
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._normalTabDocuments
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._privateTabDocuments
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._saveStateTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._stateValidateTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._tabDocumentBeingHiddenFromTabView
|| __DATA.__objc_ivar _OBJC_IVAR_$_TabController._tabGroupManager
|| __DATA_CONST.__const _BrowserRootViewControllerDidTransitionSizeNotification
|| __DATA_CONST.__const _CollectionTypeSharedWithYou
|| __DATA_CONST.__const _CompletionListBundleIdentifierPrefix
|| __DATA_CONST.__const _ReaderFormatActivityType
|| __DATA_CONST.__const _UniversalSearchBagLoadErrorUserInfoDictionaryKey
|| __DATA_CONST.__const _UniversalSearchBagUserInfoDictionaryKey
|| __DATA_CONST.__const _UniversalSearchDidLoadBagNotification
|| __DATA_CONST.__const _bookmarkWithUpdatedMetadataKey
|| __DATA_CONST.__const _cloudTabStoreUpdateTypeDeviceStore
|| __DATA_CONST.__const _cloudTabStoreUpdateTypeKey
|| __DATA_CONST.__const _cloudTabStoreUpdateTypeUserRequestsStore
|| __DATA_CONST.__const _kCloudTabStoreDidUpdateNotification
|| __DATA_CONST.__const _kCloudTabStorePrefChangedNotification
|| __DATA_CONST.__const _kCollectionTypeBookmarks
|| __DATA_CONST.__const _kCollectionTypeCloudTabs
|| __DATA_CONST.__const _kCollectionTypeHistory
|| __DATA_CONST.__const _kCollectionTypeReadingList
|| __DATA_CONST.__const _kFindOnPageBundleIdentifierSuffix
|| __DATA_CONST.__const _kReadingListBundleIdentifierSuffix
|| __DATA_CONST.__const _lastBookmarksDatabaseHealthReportDateKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AbstractCatalogViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ActionPanel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AddBookmarkUIActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_Application
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ApplicationShortcutController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BookmarkImporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BookmarksBarLabelButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BookmarksBarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BookmarksDatabaseHealthReporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BookmarksNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserControllerDefaultUIDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserRootViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserSceneDelegateRouter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserToolbar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BrowserWindowController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CapsuleNavigationBarRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CatalogViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CloudTabStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CompletionList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CompletionListGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DelayedSpinner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FindOnPageCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FindOnPageCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FindOnPageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FrequentlyVisitedSitesController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_History
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LaunchStateController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LibraryConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MediaCaptureStatusBarManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_QuickWebsiteSearchQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ReadingListLeadImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ReadingListTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SearchStateCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SearchSuggestion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SearchSuggestionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StartPageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StatusBarSpinnerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabBarItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabBarManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabCloseUndoGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabDocumentDropHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabGroupAlertController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabOverview
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabOverviewInterpolatedLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabOverviewItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabOverviewItemView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabSnapshotCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabSnapshotGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabSnapshotImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TabThumbnailView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TiltedTabItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TiltedTabView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_URLCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UnifiedField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UnifiedTabBarItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UniversalSearchCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UniversalSearchCompositeResultCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UniversalSearchSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UserActivityController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VibrantTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebViewSnapshotContentProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AbstractCatalogViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ActionPanel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AddBookmarkUIActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_Application
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ApplicationShortcutController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BookmarkImporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BookmarksBarLabelButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BookmarksBarView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BookmarksDatabaseHealthReporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BookmarksNavigationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserControllerDefaultUIDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserRootViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserSceneDelegateRouter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserToolbar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BrowserWindowController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CapsuleNavigationBarRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CatalogViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CloudTabStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CompletionList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CompletionListGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DelayedSpinner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FindOnPageCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FindOnPageCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FindOnPageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FrequentlyVisitedSitesController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_History
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LaunchStateController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LibraryConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MediaCaptureStatusBarManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_QuickWebsiteSearchQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ReadingListLeadImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ReadingListTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SearchStateCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SearchSuggestion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SearchSuggestionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StartPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StatusBarSpinnerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabBarItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabBarManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabCloseUndoGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabDocumentDropHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabDocumentView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabGroupAlertController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabOverview
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabOverviewInterpolatedLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabOverviewItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabOverviewItemView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabSnapshotCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabSnapshotGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabSnapshotImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TabThumbnailView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TiltedTabItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TiltedTabView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_URLCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UnifiedField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UnifiedTabBarItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UniversalSearchCompletionProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UniversalSearchCompositeResultCompletionItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UniversalSearchSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UserActivityController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VibrantTableViewCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebViewSnapshotContentProvider
|| __TEXT.__const _bookmarksBarHeight
|| __TEXT.__const _hideRefreshControlDelay
|| __TEXT.__const _imageWidthSpace
|| __TEXT.__const _invalidSnapshotSize
|| __TEXT.__const _kBookmarksViewStateExpriationTimeInterval
|| __TEXT.__const _kFindOnPageMaximumNumberOfMatches
|| __TEXT.__const _kFindOnPageUndefinedMatchIndex
|| __TEXT.__const _kFindOnPageUndefinedNumberOfMatches
|| __TEXT.__const _lowTabCapacityLimit
|| __TEXT.__const _maximumWidthUsingTiltedTabView
|| __TEXT.__const _searchStateCacheInvalidParsecQueryID
|| __TEXT.__const _spaceToLeaveForProgressAboveTabBar
|| __TEXT.__text _MobileSafariUIMain
|| __TEXT.__text _TabOverviewLocationCenterOfLocations
|| __TEXT.__text _TabOverviewLocationEqualToLocationWithEpsilon
|| __TEXT.__text _WebViewGeometryDescription
|| __TEXT.__text _WebViewGeometryDescriptionOfDifferenceFromGeometry
|| __TEXT.__text _bookmarksBarLabelButtonFont
|| __TEXT.__text _isScreenSizeCurrentlyBigEnoughForTabBar
|| __TEXT.__text _preferredHeaderModeForSnapshot
|| __TEXT.__text _resolvedContentSizeCategoryForTraitCollection
|| __TEXT.__text _sidebarPreferredWidth
|| __TEXT.__text _snapshotSizeByAddingBorderOptions
|| __TEXT.__text _snapshotSizeForSuggestedSize
|| __TEXT.__text _startPageSectionIdentifierForCollectionType
|| __TEXT.__text _startPageTitleForCollectionType
|| __TEXT.__text _stringForCurrentCapsuleLayoutPreference
|| __TEXT.__text _stringForCurrentTabBarLayoutPreference
|| __TEXT.__text _systemImageNameForCompletionIcon
|| __TEXT.__text _tabSnapshotHasTransparentBorderPadding
|| __TEXT.__text _tiltedTabConcealedStateCornerRadius
|| __TEXT.__text _tiltedTabRevealedStateCornerRadius
|| __TEXT.__text _tiltedTabTopBackdropHeightForTraitCollection
|| __TEXT.__text _twoFingerTapNavigationOutcomeForState
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassBookmarks
__ AppSupport: _CPCanSendMail
__ AppSupport: _CPDateFormatStringForFormatType
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPWeekdayNoYearDateFormat
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ BackBoardServices: _BKSHIDEventSetDigitizerInfo
__ BackBoardServices: _OBJC_CLASS_$_BKSMousePointerService
__ CFNetwork: _CFURLConnectionInvalidateConnectionCache
__ CFNetwork: _NSURLAuthenticationMethodClientCertificate
__ CFNetwork: _OBJC_CLASS_$_NSHTTPCookieStorage
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLCache
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderer
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRendererSettings
__ ContactsUI: _OBJC_CLASS_$_CNAvatarImageRenderingScope
__ ContactsUI: _OBJC_CLASS_$_CNMonogrammer
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGImageBlockGetBytesPerRow
__ CoreGraphics: _CGImageBlockGetData
__ CoreGraphics: _CGImageBlockGetRect
__ CoreGraphics: _CGImageBlockSetGetCount
__ CoreGraphics: _CGImageBlockSetGetImageBlock
__ CoreGraphics: _CGImageBlockSetGetRect
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetRenderingIntent
__ CoreGraphics: _CGImageGetShouldInterpolate
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageHasAlpha
__ CoreGraphics: _CGImageProviderCopyImageBlockSetWithOptions
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathCreateWithEllipseInRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGImageBlockBaseAddressAlignmentRequest
__ CoreGraphics: _kCGImageBlockBytesPerRowAlignmentRequest
__ CoreGraphics: _kCGImageBlockFormatBGRx8
__ CoreGraphics: _kCGImageBlockFormatRequest
__ CoreGraphics: _kCGImageBlockMarkAsReadOnlyRequest
__ CoreGraphics: _kCGImageBlockSingletonRequest
__ CoreServices: _LSReferrerURLKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePNG
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypeURL
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _kCTNewCarrierChangeNotification
__ CoreText: _CTLineCopyHighlightPathForStringRange
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTLineGetOffsetForStringIndex
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSExtensionItemAttachmentsKey
__ Foundation: _NSFileCreationDate
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLog
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLErrorKey
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionItem
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_METACLASS_$_NSString
__ Foundation: __NSDictionaryOfVariableBindings
__ IOKit: _IOHIDEventAppendEvent
__ IOKit: _IOHIDEventCreateDigitizerEvent
__ IOKit: _IOHIDEventCreateDigitizerFingerEvent
__ IOKit: _IOHIDEventSetFloatValue
__ IOKit: _IOHIDEventSetIntegerValue
__ IOKit: _IOHIDEventSystemClientCreate
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImagePropertyASTCBlockSize
__ ImageIO: _kCGImagePropertyASTCEncoder
__ ImageIO: _kCGImagePropertyASTCUseLZFSE
__ ImageIO: _kCGImagePropertyEncoder
__ ImageIO: _kCGImagePropertyPNGCompressionFilter
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImageSourceShouldCacheImmediately
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INIntentResponse
__ Intents: _OBJC_METACLASS_$_INIntent
__ Intents: _OBJC_METACLASS_$_INIntentResponse
__ JavaScriptCore: _WTFLogAlways
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _ASDownloadOptionAllowBatteryPower
__ MobileAsset: _OBJC_CLASS_$_ASAssetQuery
__ MobileSafari: _OBJC_CLASS_$_SFAddPKPassesViewController
__ MobileSafari: _OBJC_CLASS_$_SFAppLinkBanner
__ MobileSafari: _OBJC_CLASS_$_SFApplicationManifestFetcher
__ MobileSafari: _OBJC_CLASS_$_SFAutomaticTabClosingUtilities
__ MobileSafari: _OBJC_CLASS_$_SFBannerModel
__ MobileSafari: _OBJC_CLASS_$_SFBannerTheme
__ MobileSafari: _OBJC_CLASS_$_SFBlockBasedCAAnimationDelegate
__ MobileSafari: _OBJC_CLASS_$_SFBookmarksLockCoordinator
__ MobileSafari: _OBJC_CLASS_$_SFBrowserApplication
__ MobileSafari: _OBJC_CLASS_$_SFBrowserController
__ MobileSafari: _OBJC_CLASS_$_SFBrowserMenuProvider
__ MobileSafari: _OBJC_CLASS_$_SFCapsuleCollectionView
__ MobileSafari: _OBJC_CLASS_$_SFCapsuleNavigationBar
__ MobileSafari: _OBJC_CLASS_$_SFCapsuleNavigationBarTheme
__ MobileSafari: _OBJC_CLASS_$_SFCapsuleURLField
__ MobileSafari: _OBJC_CLASS_$_SFCapsuleView
__ MobileSafari: _OBJC_CLASS_$_SFDefaultStartPageVisualStyleProvider
__ MobileSafari: _OBJC_CLASS_$_SFDeviceUtilities
__ MobileSafari: _OBJC_CLASS_$_SFDialog
__ MobileSafari: _OBJC_CLASS_$_SFDialogController
__ MobileSafari: _OBJC_CLASS_$_SFFeatureManager
__ MobileSafari: _OBJC_CLASS_$_SFGradientView
__ MobileSafari: _OBJC_CLASS_$_SFHighlightBanner
__ MobileSafari: _OBJC_CLASS_$_SFHighlightBannerTracker
__ MobileSafari: _OBJC_CLASS_$_SFManageWebExtensionsViewController
__ MobileSafari: _OBJC_CLASS_$_SFMoreMenuButton
__ MobileSafari: _OBJC_CLASS_$_SFNavigationBarItem
__ MobileSafari: _OBJC_CLASS_$_SFNavigationBarToggleButton
__ MobileSafari: _OBJC_CLASS_$_SFOrderedContainerView
__ MobileSafari: _OBJC_CLASS_$_SFPopoverSizingTableViewController
__ MobileSafari: _OBJC_CLASS_$_SFScrollingPanGestureRecognizer
__ MobileSafari: _OBJC_CLASS_$_SFSectionCustomizationItem
__ MobileSafari: _OBJC_CLASS_$_SFSectionModel
__ MobileSafari: _OBJC_CLASS_$_SFStartPageViewController
__ MobileSafari: _OBJC_CLASS_$_SFStepperView
__ MobileSafari: _OBJC_CLASS_$_SFStoreBannerTracker
__ MobileSafari: _OBJC_CLASS_$_SFSystemAlert
__ MobileSafari: _OBJC_CLASS_$_SFTabHoverPreviewController
__ MobileSafari: _OBJC_CLASS_$_SFThemeColorEffectView
__ MobileSafari: _OBJC_CLASS_$_SFTouchDownGestureRecognizer
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedBar
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedBarContentArrangement
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedBarTheme
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedTabBar
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedTabBarItem
__ MobileSafari: _OBJC_CLASS_$_SFUnifiedTabBarItemArrangement
__ MobileSafari: _OBJC_CLASS_$_SFVibrantSeparatorView
__ MobileSafari: _OBJC_CLASS_$_SFVoiceSearchManager
__ MobileSafari: _OBJC_CLASS_$_SFWebExtensionButton
__ MobileSafari: _OBJC_CLASS_$_SFWebExtensionButtonConfiguration
__ MobileSafari: _OBJC_CLASS_$_SFWebExtensionPermissionBanner
__ MobileSafari: _OBJC_CLASS_$_SFWebExtensionsController
__ MobileSafari: _OBJC_CLASS_$__SFBarTheme
__ MobileSafari: _OBJC_CLASS_$__SFDimmingButton
__ MobileSafari: _OBJC_CLASS_$__SFFaviconProvider
__ MobileSafari: _OBJC_CLASS_$__SFFluidProgressView
__ MobileSafari: _OBJC_CLASS_$__SFSiteIcon
__ MobileSafari: _OBJC_CLASS_$__SFSiteIconView
__ MobileSafari: _OBJC_CLASS_$__SFSiteMetadataManager
__ MobileSafari: _OBJC_CLASS_$__SFTouchIconFetchOperation
__ MobileSafari: _OBJC_METACLASS_$_SFBrowserApplication
__ MobileSafari: _OBJC_METACLASS_$_SFBrowserController
__ MobileSafari: _OBJC_METACLASS_$_SFPopoverSizingTableViewController
__ MobileSafari: _OBJC_METACLASS_$_SFUnifiedBar
__ MobileSafari: _OBJC_METACLASS_$_SFUnifiedTabBar
__ MobileSafari: _OBJC_METACLASS_$_SFUnifiedTabBarItem
__ MobileSafari: _SFAutomaticTabClosingIntervalAnalyticsTitle
__ MobileSafari: _SFAutomaticTabClosingIntervalPromptTitle
__ MobileSafari: _SFAutomaticTabClosingIntervalSettingsTitle
__ MobileSafari: _SFAutomaticTabClosingIntervalTimeInterval
__ MobileSafari: _SFBarContentAlphaForSquishTransformFactor
__ MobileSafari: _SFCapsuleToolbarHeight
__ MobileSafari: _SFCapsuleWithToolbarBackgroundCornerRadius
__ MobileSafari: _SFChromeVisibilityForScrollDistance
__ MobileSafari: _SFControlEventClickDown
__ MobileSafari: _SFCreateAppSuggestionBannerFromMetaTagContent
__ MobileSafari: _SFDataOwnerForWebViewInteraction
__ MobileSafari: _SFDeferrableUpdateViewDidMoveToWindow
__ MobileSafari: _SFDeferrableUpdateViewShouldAttemptToUpdateContents
__ MobileSafari: _SFDeviceIsAlwaysReachable
__ MobileSafari: _SFDidPromptSearchEngineAlertUDIDKey
__ MobileSafari: _SFDisableBackgroundColorInTabBarKey
__ MobileSafari: _SFEnableInterstellar
__ MobileSafari: _SFEnableStandaloneTabBarKey
__ MobileSafari: _SFEnableTabGroupSuggestions
__ MobileSafari: _SFFocusGroupIdentifierForOwner
__ MobileSafari: _SFLoweredBarAdditionalBottomObscuredInsetKey
__ MobileSafari: _SFLoweredBarVerticalMinimizingSwipeThresholdKey
__ MobileSafari: _SFManageWebExtensionsViewDidDismissNotification
__ MobileSafari: _SFMobileDeviceSystemImageNameForOrientation
__ MobileSafari: _SFNSStringFromScrollIndicatorInsets
__ MobileSafari: _SFPreferredCapsuleLayoutStyleKey
__ MobileSafari: _SFRubberBandOffsetForOffset
__ MobileSafari: _SFShouldHandleSelectionForPresses
__ MobileSafari: _SFStartPageCachedNumberOfTrackersKey
__ MobileSafari: _SFStartPageDefaultTopPadding
__ MobileSafari: _SFStartPageLastCloudDeviceKey
__ MobileSafari: _SFStartPageTrackerCountForPrivateBrowsing
__ MobileSafari: _SFSupportsPegasus
__ MobileSafari: _SFSystemImageNameForBarItem
__ MobileSafari: _SFSystemImageNameForMediaStateIcon
__ MobileSafari: _SFSystemImageNameForTogglingMediaStateIcon
__ MobileSafari: _SFTintImage
__ MobileSafari: _SFTitleForTogglingMediaStateIcon
__ MobileSafari: _SFTopCapsuleBackgroundCornerRadius
__ MobileSafari: _SFUnifiedBarMaximumActiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMaximumNarrowActiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumActiveTabWidthRatioKey
__ MobileSafari: _SFUnifiedBarMinimumLandscapeActiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumLandscapeInactiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumNarrowActiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumNarrowInactiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumPortraitActiveTabWidthKey
__ MobileSafari: _SFUnifiedBarMinimumPortraitInactiveTabWidthKey
__ MobileSafari: _SFVoiceSearchAvailabilityDidChangeNotification
__ MobileSafari: _SFWebExtensionButtonIconSize
__ MobileSafari: __SFAccessibilityIdentifierForBarItem
__ MobileSafari: __SFAllowMediaCaptureOnInsecureSites
__ MobileSafari: __SFApplePayDisclosureAllowedKey
__ MobileSafari: __SFApplicationNameForUserAgent
__ MobileSafari: __SFAudioPlaybackRequiresUserActionKey
__ MobileSafari: __SFBackdropGroupNameForOwner
__ MobileSafari: __SFBarItemNull
__ MobileSafari: __SFCGPointsEqualWithEpsilon
__ MobileSafari: __SFCGRectGrowToSize
__ MobileSafari: __SFCeilingFloatToPixels
__ MobileSafari: __SFClamp
__ MobileSafari: __SFClampPercent
__ MobileSafari: __SFCloudTabsDeviceUUIDForRestorationDefaultsKey
__ MobileSafari: __SFCustomUserAgentStringIfNeeded
__ MobileSafari: __SFDarkTintStyleForStyle
__ MobileSafari: __SFDefaultLayoutMargins
__ MobileSafari: __SFDemoSiriSuggestionsKey
__ MobileSafari: __SFDeviceHasRectangularScreen
__ MobileSafari: __SFDeviceIsPad
__ MobileSafari: __SFDeviceSupportsDesktopSitesByDefault
__ MobileSafari: __SFDeviceSupportsHighQualityGraphics
__ MobileSafari: __SFDeviceSupportsWebKitFullscreenAPI
__ MobileSafari: __SFDisableICECandidateFiltering
__ MobileSafari: __SFEnableEnumeratingAllNetworkInterfaces
__ MobileSafari: __SFEnableMediaCapture
__ MobileSafari: __SFEnableMockCaptureDevices
__ MobileSafari: __SFEqualWithEpsilon
__ MobileSafari: __SFFloorFloatToPixels
__ MobileSafari: __SFIconsInTabsEnabledKey
__ MobileSafari: __SFImageForMediaStateIcon
__ MobileSafari: __SFInlineMediaPlaybackRequiresPlaysInlineAttributeKey
__ MobileSafari: __SFInternalSettingsDidChangeNotification
__ MobileSafari: __SFInterpolate
__ MobileSafari: __SFInvisibleAutoplayNotPermittedKey
__ MobileSafari: __SFIsDarkTintStyle
__ MobileSafari: __SFIsPrivateTintStyle
__ MobileSafari: __SFJavaScriptCanOpenWindowsAutomaticallyDefaultsKey
__ MobileSafari: __SFJavaScriptEnabledDefaultsKey
__ MobileSafari: __SFLegacyEncryptedMediaAPIEnabledKey
__ MobileSafari: __SFLightTintStyleForStyle
__ MobileSafari: __SFMainContentUserGestureOverrideEnabledKey
__ MobileSafari: __SFMediaPlaybackAllowsInlineKey
__ MobileSafari: __SFMediaSourceEnabledKey
__ MobileSafari: __SFMediaStateIconIsMuted
__ MobileSafari: __SFMobileDeviceIconForOrientation
__ MobileSafari: __SFNewTabGroupIconForOrientation
__ MobileSafari: __SFOfflineReadingListArchiveUsedDefaultsKey
__ MobileSafari: __SFOnePixel
__ MobileSafari: __SFOpenLinksInBackgroundDefaultsKey
__ MobileSafari: __SFRectIsInvalid
__ MobileSafari: __SFRoundEdgeInsetsToPixels
__ MobileSafari: __SFRoundFloatToPixels
__ MobileSafari: __SFRoundPointToPixels
__ MobileSafari: __SFRoundRectToPixels
__ MobileSafari: __SFRoundSizeToPixels
__ MobileSafari: __SFSafariHighLevelDomainsAndPortsToUseOnlyAvailableIdentityWithoutPromptingSettingsKey
__ MobileSafari: __SFSafariIconImageCacheDirectoryPath
__ MobileSafari: __SFSafariIconLinkImage
__ MobileSafari: __SFSafariPerSitePreferenceDidChangeNotification
__ MobileSafari: __SFSafariTestContentDirectoryPath
__ MobileSafari: __SFScreenNativeScale
__ MobileSafari: __SFScreenScale
__ MobileSafari: __SFShouldCaptureAudioInUIProcessKey
__ MobileSafari: __SFSizeClassForWidth
__ MobileSafari: __SFStringForBarItem
__ MobileSafari: __SFToolbarContentSizeCategoryForPreferredCategory
__ MobileSafari: __SFVideoPlaybackRequiresUserActionKey
__ MobileSafari: __SFWarnAboutFraudulentWebsitesDefaultsKey
__ MobileSafari: __SFWebKitSiteSpecificHacksEnabledKey
__ MobileSafari: __SFWidthIsCompactSizeClass
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CARenderServerGetFrameCounter
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DEqualToTransform
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DInvert
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _CA_CGRectApplyTransform
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAAnimationRelative
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterVibrantDark
__ QuartzCore: _kCAFilterVibrantLight
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SafariServices: _OBJC_CLASS_$_SFBlockBasedPopoverSourceInfo
__ SafariServices: _OBJC_CLASS_$_SFBrowserDocumentTrackerInfo
__ SafariServices: _OBJC_CLASS_$_SFContentBlockerManager
__ SafariServices: _OBJC_CLASS_$_SFPageZoomStepperController
__ SafariServices: _OBJC_CLASS_$_SFPrivacyReportOnboardingController
__ SafariServices: _OBJC_CLASS_$_SFPrivacyReportViewController
__ SafariServices: _OBJC_CLASS_$_SFReaderAppearanceThemeSelector
__ SafariServices: _OBJC_CLASS_$_SFReaderTextSizeStepperController
__ SafariServices: _OBJC_CLASS_$_SFSafariViewController
__ SafariServices: _OBJC_CLASS_$_SSReadingList
__ SafariServices: _OBJC_CLASS_$__SFActivity
__ SafariServices: _OBJC_CLASS_$__SFActivityExtensionItemProvider
__ SafariServices: _OBJC_CLASS_$__SFActivityItemProvider
__ SafariServices: _OBJC_CLASS_$__SFActivityItemProviderCollection
__ SafariServices: _OBJC_CLASS_$__SFActivityViewController
__ SafariServices: _OBJC_CLASS_$__SFAdaptivePreviewViewController
__ SafariServices: _OBJC_CLASS_$__SFAddBookmarkActivity
__ SafariServices: _OBJC_CLASS_$__SFAutomationController
__ SafariServices: _OBJC_CLASS_$__SFBarHoverAssistant
__ SafariServices: _OBJC_CLASS_$__SFBarManager
__ SafariServices: _OBJC_CLASS_$__SFBookmarkInfoViewController
__ SafariServices: _OBJC_CLASS_$__SFBookmarkTextEntryTableViewCell
__ SafariServices: _OBJC_CLASS_$__SFBookmarkTextEntryTableViewController
__ SafariServices: _OBJC_CLASS_$__SFBrowserConfiguration
__ SafariServices: _OBJC_CLASS_$__SFBrowserSavedState
__ SafariServices: _OBJC_CLASS_$__SFBrowserView
__ SafariServices: _OBJC_CLASS_$__SFBrowserWindowSettings
__ SafariServices: _OBJC_CLASS_$__SFBrowserWindowStateData
__ SafariServices: _OBJC_CLASS_$__SFCalendarEventDetector
__ SafariServices: _OBJC_CLASS_$__SFContactPreviewViewController
__ SafariServices: _OBJC_CLASS_$__SFCrashBanner
__ SafariServices: _OBJC_CLASS_$__SFDigitalHealthViewController
__ SafariServices: _OBJC_CLASS_$__SFDownload
__ SafariServices: _OBJC_CLASS_$__SFDownloadActivityItemProvider
__ SafariServices: _OBJC_CLASS_$__SFDownloadCurrentPageActivity
__ SafariServices: _OBJC_CLASS_$__SFDownloadDispatcher
__ SafariServices: _OBJC_CLASS_$__SFDownloadManager
__ SafariServices: _OBJC_CLASS_$__SFDynamicBarAnimator
__ SafariServices: _OBJC_CLASS_$__SFFeatureAvailability
__ SafariServices: _OBJC_CLASS_$__SFFindOnPageUIActivity
__ SafariServices: _OBJC_CLASS_$__SFFindOnPageView
__ SafariServices: _OBJC_CLASS_$__SFFormAutoFillController
__ SafariServices: _OBJC_CLASS_$__SFFormAutoFillInputSession
__ SafariServices: _OBJC_CLASS_$__SFGeolocationPermissionManager
__ SafariServices: _OBJC_CLASS_$__SFICSPreviewViewController
__ SafariServices: _OBJC_CLASS_$__SFInjectedJavaScriptController
__ SafariServices: _OBJC_CLASS_$__SFLinkPreviewHeader
__ SafariServices: _OBJC_CLASS_$__SFLinkPreviewHelper
__ SafariServices: _OBJC_CLASS_$__SFLinkWithPreviewActivityItemProvider
__ SafariServices: _OBJC_CLASS_$__SFMailContentProvider
__ SafariServices: _OBJC_CLASS_$__SFManagedFeatureObserver
__ SafariServices: _OBJC_CLASS_$__SFMediaCaptureStatusBarManager
__ SafariServices: _OBJC_CLASS_$__SFMicrodataExtractor
__ SafariServices: _OBJC_CLASS_$__SFNavigationBar
__ SafariServices: _OBJC_CLASS_$__SFNavigationIntent
__ SafariServices: _OBJC_CLASS_$__SFNavigationIntentBuilder
__ SafariServices: _OBJC_CLASS_$__SFNavigationResult
__ SafariServices: _OBJC_CLASS_$__SFNavigationUtilitiesManager
__ SafariServices: _OBJC_CLASS_$__SFPageFormatMenuController
__ SafariServices: _OBJC_CLASS_$__SFPageLoadErrorController
__ SafariServices: _OBJC_CLASS_$__SFPageZoomPreferenceManager
__ SafariServices: _OBJC_CLASS_$__SFPerSitePreferencesPopoverViewController
__ SafariServices: _OBJC_CLASS_$__SFPerSitePreferencesVendor
__ SafariServices: _OBJC_CLASS_$__SFPopoverPresentationDelegate
__ SafariServices: _OBJC_CLASS_$__SFPrintActivityItemProvider
__ SafariServices: _OBJC_CLASS_$__SFPrintController
__ SafariServices: _OBJC_CLASS_$__SFQRCodeDetectionController
__ SafariServices: _OBJC_CLASS_$__SFQuickLookDocument
__ SafariServices: _OBJC_CLASS_$__SFQuickLookDocumentWriter
__ SafariServices: _OBJC_CLASS_$__SFReaderController
__ SafariServices: _OBJC_CLASS_$__SFReaderCustomProtocols
__ SafariServices: _OBJC_CLASS_$__SFReaderFontOptionsGroupController
__ SafariServices: _OBJC_CLASS_$__SFRecentWebSearchesController
__ SafariServices: _OBJC_CLASS_$__SFReloadOptionsController
__ SafariServices: _OBJC_CLASS_$__SFSafariSharingExtensionController
__ SafariServices: _OBJC_CLASS_$__SFSaveToFilesOperation
__ SafariServices: _OBJC_CLASS_$__SFSearchEngineController
__ SafariServices: _OBJC_CLASS_$__SFSecIdentityPreferencesController
__ SafariServices: _OBJC_CLASS_$__SFSettingsAlertController
__ SafariServices: _OBJC_CLASS_$__SFSharingLinkExtractor
__ SafariServices: _OBJC_CLASS_$__SFSingleBookmarkNavigationController
__ SafariServices: _OBJC_CLASS_$__SFSyntheticClickContext
__ SafariServices: _OBJC_CLASS_$__SFTabStateData
__ SafariServices: _OBJC_CLASS_$__SFTelephonyNavigationMitigationPolicy
__ SafariServices: _OBJC_CLASS_$__SFToolbar
__ SafariServices: _OBJC_CLASS_$__SFTranslationTargetLocaleAlertController
__ SafariServices: _OBJC_CLASS_$__SFUIViewPopoverSourceInfo
__ SafariServices: _OBJC_CLASS_$__SFUserActivityController
__ SafariServices: _OBJC_CLASS_$__SFUserMediaPermissionController
__ SafariServices: _OBJC_CLASS_$__SFWebClipMetadataFetcher
__ SafariServices: _OBJC_CLASS_$__SFWebExtensionActivity
__ SafariServices: _OBJC_CLASS_$__SFWebView
__ SafariServices: _OBJC_IVAR_$__SFMediaCaptureStatusBarManager._hasStatusBarOverride
__ SafariServices: _OBJC_IVAR_$__SFMediaCaptureStatusBarManager._recordingDocument
__ SafariServices: _OBJC_METACLASS_$__SFActivity
__ SafariServices: _OBJC_METACLASS_$__SFActivityExtensionItemProvider
__ SafariServices: _OBJC_METACLASS_$__SFActivityItemProvider
__ SafariServices: _OBJC_METACLASS_$__SFActivityViewController
__ SafariServices: _OBJC_METACLASS_$__SFAddBookmarkActivity
__ SafariServices: _OBJC_METACLASS_$__SFAutomationController
__ SafariServices: _OBJC_METACLASS_$__SFBrowserSavedState
__ SafariServices: _OBJC_METACLASS_$__SFBrowserWindowSettings
__ SafariServices: _OBJC_METACLASS_$__SFFindOnPageView
__ SafariServices: _OBJC_METACLASS_$__SFLinkWithPreviewActivityItemProvider
__ SafariServices: _OBJC_METACLASS_$__SFMediaCaptureStatusBarManager
__ SafariServices: _OBJC_METACLASS_$__SFNavigationBar
__ SafariServices: _OBJC_METACLASS_$__SFRecentWebSearchesController
__ SafariServices: _OBJC_METACLASS_$__SFToolbar
__ SafariServices: _SFAggregateDIconsInTabEnabledKey
__ SafariServices: _SFContentBlockerDidChangeDistributedNotification
__ SafariServices: _SFDebugMenuEnabled
__ SafariServices: _SFDownloadsUserActivityType
__ SafariServices: _SFMediaCaptureUserActivityType
__ SafariServices: _SFReloadUserActivityType
__ SafariServices: _SFToggleReaderUserActivityType
__ SafariServices: __SFAnalyticsValueForShortcutItemType
__ SafariServices: __SFAutomaticPasswordInputViewButtonPressedNotification
__ SafariServices: __SFAutomaticPasswordInputViewNotificationAutoFillContextProviderIdentifierUserInfoKey
__ SafariServices: __SFAutomaticPasswordInputViewNotificationPressedButtonUserInfoKey
__ SafariServices: __SFBookmarksUserActivityType
__ SafariServices: __SFContextInfoWithComment
__ SafariServices: __SFDeveloperPreferencesDidChangeNotification
__ SafariServices: __SFDeviceRegionCodeIsRussia
__ SafariServices: __SFDownloadDidChangeCompletedURLNotification
__ SafariServices: __SFDownloadDidChangeNotification
__ SafariServices: __SFDownloadDidStartNotification
__ SafariServices: __SFDownloadDidStopNotification
__ SafariServices: __SFDownloadManagerDidFinishLastDownloadNotification
__ SafariServices: __SFDownloadManagerHasUnviewedDownloadsDidChangeNotification
__ SafariServices: __SFDownloadManagerTotalProgressDidChangeNotification
__ SafariServices: __SFDownloadsDidChangeNotification
__ SafariServices: __SFIncrementAggdKey
__ SafariServices: __SFLocalizedTitleStringForShortcutItemType
__ SafariServices: __SFMailContentTypeNull
__ SafariServices: __SFPopoverSourceInfoUnwrap
__ SafariServices: __SFPreferredMailContentTypeForActivityContentType
__ SafariServices: __SFReaderPageGroupIdentifier
__ SafariServices: __SFReaderURLScheme
__ SafariServices: __SFReadingListUserActivityType
__ SafariServices: __SFSafariShortcutItemTypeOpenBookmarksView
__ SafariServices: __SFSafariShortcutItemTypeOpenNewPrivateTab
__ SafariServices: __SFSafariShortcutItemTypeOpenNewTab
__ SafariServices: __SFSafariShortcutItemTypeOpenReadingListView
__ SafariServices: __SFSafariStateActiveDocumentIndexKey
__ SafariServices: __SFSafariStateBrowserWindowSceneIDKey
__ SafariServices: __SFSafariStateBrowserWindowUUIDKey
__ SafariServices: __SFSafariStateDocumentSourceApplicationBundleIdentifierKey
__ SafariServices: __SFSafariStateDocumentTitleKey
__ SafariServices: __SFSafariStateDocumentURLKey
__ SafariServices: __SFSafariStateDocumentUUIDKey
__ SafariServices: __SFSafariStateDocumentsFileVersionKey
__ SafariServices: __SFSafariStateDocumentsKey
__ SafariServices: __SFSafariStatePrivateActiveDocumentIndexKey
__ SafariServices: __SFSafariStatePrivateDocumentsKey
__ SafariServices: __SFSearchEngineControllerDefaultSearchEngineDidChangeNotification
__ SafariServices: __SFSearchEngineControllerInstanceDidFinishPopulatingSearchEnginesNotification
__ SafariServices: __SFSearchEngineStringDefaultsKey
__ SafariServices: __SFSetAggdKey
__ SafariServices: __SFSetAggdKeyAlways
__ SafariServices: __SFTabStateSessionStateKey
__ SafariServices: __SFTabStateShowingReaderKey
__ SafariServices: __SFTypeIsExtractableArchive
__ SafariSharedUI: _OBJC_CLASS_$_WBSAllowedLegacyTLSHostManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSAnalyticsLogger
__ SafariSharedUI: _OBJC_CLASS_$_WBSAppLink
__ SafariSharedUI: _OBJC_CLASS_$_WBSBookmarkAndHistoryCompletionMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSBrowserTabCompletionInfo
__ SafariSharedUI: _OBJC_CLASS_$_WBSBrowserTabCompletionMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSBrowserTabCompletionProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudBookmarksMigrationCoordinator
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudHistoryConfiguration
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudHistoryPushAgentProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudTab
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudTabDevice
__ SafariSharedUI: _OBJC_CLASS_$_WBSCloudTabStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSCompletionQuery
__ SafariSharedUI: _OBJC_CLASS_$_WBSContentBlockerStatisticsSQLiteStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSCyclerBookmarkLeafRepresentation
__ SafariSharedUI: _OBJC_CLASS_$_WBSCyclerConnectionManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSCyclerItemListRepresentation
__ SafariSharedUI: _OBJC_CLASS_$_WBSDiagnosticStateCollector
__ SafariSharedUI: _OBJC_CLASS_$_WBSDigitalHealthManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSDistributedNotificationObserver
__ SafariSharedUI: _OBJC_CLASS_$_WBSEncryptedCloudKeyValueStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSExtensionsController
__ SafariSharedUI: _OBJC_CLASS_$_WBSFaviconRequest
__ SafariSharedUI: _OBJC_CLASS_$_WBSFeatureAvailability
__ SafariSharedUI: _OBJC_CLASS_$_WBSFileLogger
__ SafariSharedUI: _OBJC_CLASS_$_WBSFluidProgressController
__ SafariSharedUI: _OBJC_CLASS_$_WBSFluidProgressState
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouCloudTabsDataSource
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouLinkRecommendation
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouRecentParsecResultsManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouRecommendationMediator
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouRecommendationMediatorDataSource
__ SafariSharedUI: _OBJC_CLASS_$_WBSForYouTopic
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormAutoFillCorrectionsHistoryObserver
__ SafariSharedUI: _OBJC_CLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSiteCandidate
__ SafariSharedUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSFrequentlyVisitedSitesController
__ SafariSharedUI: _OBJC_CLASS_$_WBSHighlightManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistory
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistoryConnectionProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistoryContextController
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistoryItem
__ SafariSharedUI: _OBJC_CLASS_$_WBSHistorySessionController
__ SafariSharedUI: _OBJC_CLASS_$_WBSLeadImageCacheRequest
__ SafariSharedUI: _OBJC_CLASS_$_WBSLeadImageSaver
__ SafariSharedUI: _OBJC_CLASS_$_WBSMemoryFootprint
__ SafariSharedUI: _OBJC_CLASS_$_WBSOpenSearchURLTemplate
__ SafariSharedUI: _OBJC_CLASS_$_WBSPair
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecABGroupIdentifierUserDefaultsStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecABGroupManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecDSession
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecSearchUtilities
__ SafariSharedUI: _OBJC_CLASS_$_WBSParsecSubscriptionManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPasswordWarningStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
__ SafariSharedUI: _OBJC_CLASS_$_WBSPermissionDialogThrottler
__ SafariSharedUI: _OBJC_CLASS_$_WBSPhishingClassifierController
__ SafariSharedUI: _OBJC_CLASS_$_WBSPrivacyProxyAvailabilityManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSPrivacyReportData
__ SafariSharedUI: _OBJC_CLASS_$_WBSPrivacyTransparencyController
__ SafariSharedUI: _OBJC_CLASS_$_WBSProcessProxyOverride
__ SafariSharedUI: _OBJC_CLASS_$_WBSQuerySuggestion
__ SafariSharedUI: _OBJC_CLASS_$_WBSQuickWebsiteSearchController
__ SafariSharedUI: _OBJC_CLASS_$_WBSResultRanker
__ SafariSharedUI: _OBJC_CLASS_$_WBSSQLiteDatabase
__ SafariSharedUI: _OBJC_CLASS_$_WBSSafariBookmarksSyncAgentProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSSafariExtensionStateObserver
__ SafariSharedUI: _OBJC_CLASS_$_WBSSafariSettingsSyncEngine
__ SafariSharedUI: _OBJC_CLASS_$_WBSSameDocumentNavigationToHistoryVisitCorrelator
__ SafariSharedUI: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariSharedUI: _OBJC_CLASS_$_WBSSearchImpressionAnalyticsRecorder
__ SafariSharedUI: _OBJC_CLASS_$_WBSSearchParameters
__ SafariSharedUI: _OBJC_CLASS_$_WBSSharedFeatureAvailability
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiriIntelligenceDonor
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiriIntelligenceHistorySearch
__ SafariSharedUI: _OBJC_CLASS_$_WBSStartPageBackgroundManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSStartPageSectionManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSSystemNoteTakingController
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabOrderManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSThemeColorUtilities
__ SafariSharedUI: _OBJC_CLASS_$_WBSTopHitCompletionMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSTranslationConsentAlertHelper
__ SafariSharedUI: _OBJC_CLASS_$_WBSTranslationContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSTrialManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSUISafariSandboxBrokerConnection
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionDatabase
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionUserTypedString
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLSpoofingMitigator
__ SafariSharedUI: _OBJC_CLASS_$_WBSUnifiedBarAnalyticsRecorder
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionNewTabOverridePreferencesManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionURLSchemeHandler
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionUtilities
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionsController
__ SafariSharedUI: _OBJC_IVAR_$_WBSFrequentlyVisitedSitesController._bannedURLStore
__ SafariSharedUI: _OBJC_METACLASS_$_WBSCloudBookmarksMigrationCoordinator
__ SafariSharedUI: _OBJC_METACLASS_$_WBSCloudHistoryConfiguration
__ SafariSharedUI: _OBJC_METACLASS_$_WBSCloudTabStore
__ SafariSharedUI: _OBJC_METACLASS_$_WBSForYouCloudTabsDataSource
__ SafariSharedUI: _OBJC_METACLASS_$_WBSForYouRecommendationMediator
__ SafariSharedUI: _OBJC_METACLASS_$_WBSForYouRecommendationMediatorDataSource
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesBannedURLStore
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFrequentlyVisitedSitesController
__ SafariSharedUI: _OBJC_METACLASS_$_WBSHighlightManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSParsecDSession
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSafariSettingsSyncEngine
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSystemNoteTakingController
__ SafariSharedUI: _OBJC_METACLASS_$_WBSUISafariSandboxBrokerConnection
__ SafariSharedUI: _OBJC_METACLASS_$_WBSURLCompletionDatabase
__ SafariSharedUI: _WBSChromeExtensionURLScheme
__ SafariSharedUI: _WBSCloudHistoryConfigurationMultipleDeviceFetchChangesThrottlingPolicyStringKey
__ SafariSharedUI: _WBSCloudHistoryConfigurationMultipleDeviceSaveChangesThrottlingPolicyStringKey
__ SafariSharedUI: _WBSCloudHistoryConfigurationSingleDeviceFetchChangesThrottlingPolicyStringKey
__ SafariSharedUI: _WBSCloudHistoryConfigurationSingleDeviceSaveChangesThrottlingPolicyStringKey
__ SafariSharedUI: _WBSCloudHistoryStoreManateeStateDidChangeNotification
__ SafariSharedUI: _WBSCloudHistoryStoreUsesManateeContainerNotificationKey
__ SafariSharedUI: _WBSCloudKitShareBearBundleIdentifier
__ SafariSharedUI: _WBSCloudSettingRecordName
__ SafariSharedUI: _WBSCloudSettingValue
__ SafariSharedUI: _WBSDebugCloudKitBookmarkMigrationTimescaleKey
__ SafariSharedUI: _WBSDebugJSJITDisabledKey
__ SafariSharedUI: _WBSDebugShowTabAncestryInTabTitlePreferenceKey
__ SafariSharedUI: _WBSDefaultSampledPageTopColorMaxDifference
__ SafariSharedUI: _WBSDefaultSampledPageTopColorMinHeight
__ SafariSharedUI: _WBSDomainWithModifiedContentBlockersPreferenceUserInfoKey
__ SafariSharedUI: _WBSDomainWithModifiedPageZoomPreferenceUserInfoKey
__ SafariSharedUI: _WBSDomainWithModifiedReaderPreferenceUserInfoKey
__ SafariSharedUI: _WBSEnableCloudSettingsSyncPreferenceKey
__ SafariSharedUI: _WBSExtensionEnabledStateDidChangeNotification
__ SafariSharedUI: _WBSExtensionWasAddedNotification
__ SafariSharedUI: _WBSExtensionWasRemovedNotification
__ SafariSharedUI: _WBSForYouLinkRecommendationSourceDownvoteActionTitle
__ SafariSharedUI: _WBSForYouRecommendationMediatorContentDidChangeNotification
__ SafariSharedUI: _WBSForYouRecommendationMediatorRecommendationKey
__ SafariSharedUI: _WBSFrequentlyVisitedSitesDidChangeNotification
__ SafariSharedUI: _WBSHasExtensionsInstalledKey
__ SafariSharedUI: _WBSHighlightCenterEnabledDidChangeNotification
__ SafariSharedUI: _WBSHighlightsContentDidChangeNotification
__ SafariSharedUI: _WBSHistoryDidRemoveHostnamesNotification
__ SafariSharedUI: _WBSHistoryItemsKey
__ SafariSharedUI: _WBSHistoryItemsWereAddedNotification
__ SafariSharedUI: _WBSHistoryItemsWereRemovedNotification
__ SafariSharedUI: _WBSHistorySessionsDidChangeNotification
__ SafariSharedUI: _WBSHistoryWasClearedNotification
__ SafariSharedUI: _WBSHistoryWasLoadedNotification
__ SafariSharedUI: _WBSIsEqual
__ SafariSharedUI: _WBSIsiPad
__ SafariSharedUI: _WBSLastKnownStartPageAppearancePreferenceKey
__ SafariSharedUI: _WBSLastKnownStartPageBackgroundImageNameKey
__ SafariSharedUI: _WBSLogWithDifferentialPrivacy
__ SafariSharedUI: _WBSMLPhishingDetailsText
__ SafariSharedUI: _WBSMLPhishingPageTitle
__ SafariSharedUI: _WBSMLPhishingWarningText
__ SafariSharedUI: _WBSMakeAccessibilityIdentifier
__ SafariSharedUI: _WBSNotesPIPVisibilityChangedKey
__ SafariSharedUI: _WBSNotesSupportedInPrivateBrowsingPreferenceKey
__ SafariSharedUI: _WBSPageZoomFactorUserInfoKey
__ SafariSharedUI: _WBSPageZoomPreferenceDidChangeNotification
__ SafariSharedUI: _WBSParsecABGroupManagerDidChangeGroupIdentifierNotification
__ SafariSharedUI: _WBSParsecDSessionDidLoadBagNotification
__ SafariSharedUI: _WBSParsecDomainSafariBookmark
__ SafariSharedUI: _WBSParsecDomainSafariFindOnPage
__ SafariSharedUI: _WBSParsecDomainSafariOther
__ SafariSharedUI: _WBSParsecDomainServerMaps
__ SafariSharedUI: _WBSParsecDomainServerMovie
__ SafariSharedUI: _WBSParsecDomainServerWeb
__ SafariSharedUI: _WBSPerSiteAutomaticReaderActivationPreferenceDidChangeNotification
__ SafariSharedUI: _WBSPerSiteContentBlockersPreferenceDidChangeNotification
__ SafariSharedUI: _WBSPrivacyProxyChangeNotification
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentCloudBackgroundImageWasDeletedOnServerNotificationName
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentCloudBackgroundImageWasUpdatedOnServerNotificationName
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentCloudSettingsWereUpdatedOnServerNotificationName
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentCloudTabsWereUpdatedOnServerNotificationName
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentDidUpdateBookmarksNotificationName
__ SafariSharedUI: _WBSSafariBookmarksSyncAgentSyncResultKey
__ SafariSharedUI: _WBSSafariSettingsDidChangeMobileStartPageVisibilityNotificationName
__ SafariSharedUI: _WBSSafariSettingsDidDismissStartPageCustomizationToggleNotificationName
__ SafariSharedUI: _WBSSafariSettingsStartPageBackgroundImageVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageCloudTabsVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageFavoritesVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageFrequentlyVisitedSitesVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageHighlightsVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPagePrivacyReportVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageReadingListVisibilityKey
__ SafariSharedUI: _WBSSafariSettingsStartPageSectionOrderKey
__ SafariSharedUI: _WBSSafariSettingsStartPageSiriSuggestionsVisibilityKey
__ SafariSharedUI: _WBSSearchProviderShortNameQihoo
__ SafariSharedUI: _WBSShowBackgroundImagePreferenceKey
__ SafariSharedUI: _WBSSiriSearchSuggestionsEnabledDidChangeNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDeletedRemotelyNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDidChangeNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDidChangeRemotelyNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageNeedsCloudKitUpdateNotification
__ SafariSharedUI: _WBSStartPageSectionCloudTabs
__ SafariSharedUI: _WBSStartPageSectionFavorites
__ SafariSharedUI: _WBSStartPageSectionFrequentlyVisited
__ SafariSharedUI: _WBSStartPageSectionHighlights
__ SafariSharedUI: _WBSStartPageSectionIdentifierIcon
__ SafariSharedUI: _WBSStartPageSectionIdentifierTitle
__ SafariSharedUI: _WBSStartPageSectionManagerSectionOrderDidChangeNotification
__ SafariSharedUI: _WBSStartPageSectionManagerSectionsDidChangeNotification
__ SafariSharedUI: _WBSStartPageSectionPrivacyReport
__ SafariSharedUI: _WBSStartPageSectionPrivateBrowsingExplanation
__ SafariSharedUI: _WBSStartPageSectionReadingList
__ SafariSharedUI: _WBSStartPageSectionSiriSuggestions
__ SafariSharedUI: _WBSStartPageSectionTopLevelBookmarks
__ SafariSharedUI: _WBSStatusCodeGroupFromStatusCode
__ SafariSharedUI: _WBSTopSitesScore
__ SafariSharedUI: _WBSTranslationDetectionDidChangeNotificationName
__ SafariSharedUI: _WBSTranslationDetectionDidChangeNotificationNotificationLevelUserInfoKey
__ SafariSharedUI: _WBSTranslationStateDidChangeNotificationName
__ SafariSharedUI: _WBSUISafariSandboxBrokerInterface
__ SafariSharedUI: _WBSUnifiedFieldInputTypeForString
__ SafariSharedUI: _WBSUniversalSearchEnabledPreferenceKey
__ SafariSharedUI: _WBSWebExtensionCaptureVisibleTabPNGValue
__ SafariSharedUI: _WBSWebExtensionDisplayListNeedsUpdateNotification
__ SafariSharedUI: _WBSWebExtensionPermissionDidChangeNotification
__ SafariSharedUI: _WBSWebExtensionPermissionDidChangePermissionsWereUpdatedDueToAnExternalChangeNotificationUserInfoKey
__ SafariSharedUI: _WBSWebExtensionTabIDNone
__ SafariSharedUI: _WBSWebExtensionURLScheme
__ SafariSharedUI: _WBSWebExtensionUnknownLanguageCode
__ SafariSharedUI: _WBSWebExtensionWindowIDNone
__ SafariSharedUI: _WBSWebExtensionWindowStateFullscreen
__ SafariSharedUI: _WBSWebExtensionWindowStateNormal
__ SafariSharedUI: _WBSWebExtensionWindowTypeNormal
__ SafariSharedUI: _WBSWebProcessPlugInDefaultSearchEngineKey
__ SafariSharedUI: _WBSWebProcessPlugInParsecABGroupIdentifierKey
__ SafariSharedUI: _WBSWebProcessPlugInParsecABTestingEnabledKey
__ SafariSharedUI: _WBSWebProcessPlugInSearchEnginesForRedirectToSafeSearchKey
__ SafariSharedUI: _WBSWebsiteShouldStartWithReaderEnabledUserInfoKey
__ SafariSharedUI: _WBSZoomPreferenceIdentifier
__ SafariSharedUI: __WBSLocalizedString
__ SafariSharedUI: __ZN12SafariShared25SuddenTerminationDisabler23enableSuddenTerminationEv
__ SafariSharedUI: __ZN12SafariShared25SuddenTerminationDisablerC1EP8NSString
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController20configureProcessPoolEP13WKProcessPool
__ SafariSharedUI: __ZN12SafariShared28ReaderAvailabilityController38updateReaderOrTranslationLastActivatedEP13WKProcessPool
__ SafariSharedUI: __ZN12SafariShared33BookmarkAndHistoryCompletionMatch19hasMatchWithOptionsEP8NSStringS2_P31WBSURLCompletionUserTypedStringm
__ SafariSharedUI: _commandNameKey
__ SafariSharedUI: _extensionComposedIdentifierKey
__ SafariSharedUI: _kMobileSafariChangedExtensionSettingsNotification
__ SafariSharedUI: _showInternalTranslationActions
__ ScreenTimeCore: _STManagementStateStateDidChange
__ ScreenTimeCore: _STSettingsDidChangeNotification
__ SearchFoundation: _OBJC_CLASS_$_SFCardViewDisappearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFCompactRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFDetailedRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFResultRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultSection
__ SearchFoundation: _OBJC_CLASS_$_SFResultsReceivedAfterTimeoutFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFRichText
__ SearchFoundation: _OBJC_CLASS_$_SFRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFSearchResult
__ SearchFoundation: _OBJC_CLASS_$_SFSearchSuggestion
__ SearchFoundation: _OBJC_CLASS_$_SFSuggestionEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSymbolImage
__ SearchFoundation: _OBJC_CLASS_$_SFText
__ SearchFoundation: _OBJC_CLASS_$_SFVisibleSuggestionsFeedback
__ SearchFoundation: _OBJC_METACLASS_$_SFResultSection
__ SearchFoundation: _OBJC_METACLASS_$_SFSearchResult
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecTrustFlushResponseCache
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ Sharing: _OBJC_CLASS_$_SFClient
__ SocialLayer: _OBJC_CLASS_$_SLAttributionView
__ SocialLayer: _OBJC_CLASS_$_SLHighlight
__ SocialLayer: _OBJC_CLASS_$_SLHighlightCenter
__ SocialLayer: _SLHideContextMenuIdentifier
__ SoftLinking: __sl_dlopen
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperConfigurationManager
__ SpringBoardFoundation: _SBFWallpaperDidChangeNotification
__ SpringBoardServices: _OBJC_CLASS_$_SBSWallpaperService
__ SpringBoardServices: _SBSApplicationLaunchOptionBreadcrumbBundleIdKey
__ SpringBoardServices: _SBSApplicationLaunchOptionBrowserActivationWithNoURLKey
__ SpringBoardServices: _SBSApplicationLaunchOptionBrowserReuseTabKey
__ SpringBoardUIServices: _SBSAcquireWallpaperAnimationSuspensionAssertion
__ UIAccessibility: _UIAccessibilityTraitTabButton
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSDocumentTypeDocumentAttribute
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSRTFTextDocumentType
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSectionSnapshot
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSShadow
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivity
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutIcon
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutItem
__ UIKit: _OBJC_CLASS_$_UIAutonomousSingleAppModeConfiguration
__ UIKit: _OBJC_CLASS_$_UIAutonomousSingleAppModeSession
__ UIKit: _OBJC_CLASS_$_UIBackgroundConfiguration
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICellAccessoryCheckmark
__ UIKit: _OBJC_CLASS_$_UICellAccessoryCustomView
__ UIKit: _OBJC_CLASS_$_UICellAccessoryReorder
__ UIKit: _OBJC_CLASS_$_UICollectionLayoutListConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCellRegistration
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSourceReorderingHandlers
__ UIKit: _OBJC_CLASS_$_UICollectionViewDropProposal
__ UIKit: _OBJC_CLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewSupplementaryRegistration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UICommand
__ UIKit: _OBJC_CLASS_$_UIContextMenuConfiguration
__ UIKit: _OBJC_CLASS_$_UIContextMenuInteraction
__ UIKit: _OBJC_CLASS_$_UIContextualAction
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDictationInputModeOptions
__ UIKit: _OBJC_CLASS_$_UIDragInteraction
__ UIKit: _OBJC_CLASS_$_UIDragItem
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIDropInteraction
__ UIKit: _OBJC_CLASS_$_UIDropProposal
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIFocusSystem
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIInterpolatingMotionEffect
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputMode
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UIKeyboardSceneDelegate
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILargeContentViewerInteraction
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuController
__ UIKit: _OBJC_CLASS_$_UIMenuItem
__ UIKit: _OBJC_CLASS_$_UIMenuSystem
__ UIKit: _OBJC_CLASS_$_UIMotionEffect
__ UIKit: _OBJC_CLASS_$_UIMotionEffectGroup
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerEffect
__ UIKit: _OBJC_CLASS_$_UIPointerHighlightEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPopoverPresentationController
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIPreviewForceInteractionProgress
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIPrintInteractionController
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIReferenceLibraryViewController
__ UIKit: _OBJC_CLASS_$_UIRefreshControl
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UISceneActivationRequestOptions
__ UIKit: _OBJC_CLASS_$_UISceneConnectionOptions
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISegmentedControl
__ UIKit: _OBJC_CLASS_$_UISocialActivity
__ UIKit: _OBJC_CLASS_$_UISpringLoadedInteraction
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStoryboard
__ UIKit: _OBJC_CLASS_$_UISwipeAction
__ UIKit: _OBJC_CLASS_$_UISwipeActionsConfiguration
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewCellLayoutManager
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewDropProposal
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextCursorAssertionController
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextSuggestion
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWebClip
__ UIKit: _OBJC_CLASS_$_UIWebClipIcon
__ UIKit: _OBJC_CLASS_$_UIWebGeolocationPolicyDecider
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSection
__ UIKit: _OBJC_CLASS_$__UICollectionViewListLayoutSectionConfiguration
__ UIKit: _OBJC_CLASS_$__UIContentUnavailableView
__ UIKit: _OBJC_CLASS_$__UIContextualMenuGestureRecognizer
__ UIKit: _OBJC_CLASS_$__UINavigationBarPalette
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_CLASS_$__UISheetDetent
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_CLASS_$__UIVisualEffectBackdropView
__ UIKit: _OBJC_METACLASS_$_UIActivity
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIApplicationExtensionActivity
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICellAccessoryCustomView
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_METACLASS_$_UIDropInteraction
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UINavigationBar
__ UIKit: _OBJC_METACLASS_$_UINavigationController
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewCellLayoutManager
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIToolbar
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UIContentUnavailableView
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIActivityTypeAddToReadingList
__ UIKit: _UIActivityTypeAirDrop
__ UIKit: _UIActivityTypeMail
__ UIKit: _UIActivityTypeOpenInIBooks
__ UIKit: _UIActivityTypePrint
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationAutomaticSnapshotDefaultPNG
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIApplicationLaunchOptionsAppLinkOpenStrategyChangedKey
__ UIKit: _UIApplicationLaunchOptionsSourceApplicationKey
__ UIKit: _UIApplicationLaunchOptionsUserActivityDictionaryKey
__ UIKit: _UIApplicationLaunchOptionsUserActivityTypeKey
__ UIKit: _UIApplicationMain
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryUnspecified
__ UIKit: _UIDictationControllerDictationDidFinish
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMakeWithEdges
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsMin
__ UIKit: _UIEdgeInsetsReplace
__ UIKit: _UIEdgeInsetsSubtract
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleSubheadline1
__ UIKit: _UIFontTextStyleSubheadline2
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImageSymbolSizeMedium
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyInputUpArrow
__ UIKit: _UIKeyboardAlwaysShowCandidateBarForCurrentInputMode
__ UIKit: _UIKeyboardDidChangeFrameNotification
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardGetCurrentInputMode
__ UIKit: _UIKeyboardInputMode_dictation
__ UIKit: _UIKeyboardPrivateWillChangeFrameNotification
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIPasteboardChangedNotification
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectGetCorners
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UIScrollViewDecelerationRateNormal
__ UIKit: _UISheetPresentationControllerDetentIdentifierLarge
__ UIKit: _UIStatusBarWindowLevel
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITextFieldTextDidChangeNotification
__ UIKit: _UITextInputCurrentInputModeDidChangeNotification
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UIWindowDidResignKeyNotification
__ UIKit: _UIWindowSceneSessionRoleApplication
__ UIKit: __UIApplicationSystemNavigationActionChangedNotification
__ UIKit: __UISceneDidCompleteSystemSnapshotSequence
__ UIKit: __UISceneWillBeginSystemSnapshotSequence
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateRequestDeactivate
__ UIKit: __UIViewDefaultLayoutMargin
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ UniformTypeIdentifiers: _UTTypeImage
__ UniformTypeIdentifiers: _UTTypeRTF
__ UniformTypeIdentifiers: __UTTypePassesData
__ WebBookmarks: _BookmarksRootID
__ WebBookmarks: _OBJC_CLASS_$_SafariFetcherServerProxy
__ WebBookmarks: _OBJC_CLASS_$_WBCollectionConfiguration
__ WebBookmarks: _OBJC_CLASS_$_WBDatabaseLockAcquisitor
__ WebBookmarks: _OBJC_CLASS_$_WBLocalTabAttributes
__ WebBookmarks: _OBJC_CLASS_$_WBReadingList
__ WebBookmarks: _OBJC_CLASS_$_WBReadonlyTabCollection
__ WebBookmarks: _OBJC_CLASS_$_WBReusableTabManager
__ WebBookmarks: _OBJC_CLASS_$_WBSavedStateManager
__ WebBookmarks: _OBJC_CLASS_$_WBTab
__ WebBookmarks: _OBJC_CLASS_$_WBTabCollection
__ WebBookmarks: _OBJC_CLASS_$_WBTabCyclerCommandHandler
__ WebBookmarks: _OBJC_CLASS_$_WBTabGroup
__ WebBookmarks: _OBJC_CLASS_$_WBTabGroupManager
__ WebBookmarks: _OBJC_CLASS_$_WBWindowState
__ WebBookmarks: _OBJC_CLASS_$_WebBookmark
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkReadonlyCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkWebFilterSettings
__ WebBookmarks: _OBJC_METACLASS_$_WBReusableTabManager
__ WebBookmarks: _OBJC_METACLASS_$_WebBookmarkCollection
__ WebBookmarks: _WebBookmarkWebFilterSettingsDidChange
__ WebBookmarks: _WebBookmarksChangedFolderIDKey
__ WebBookmarks: _WebBookmarksDataclassDidChangeNotification
__ WebBookmarks: _WebBookmarksDetectedLocalMigrationStateTransitionNotification
__ WebBookmarks: _WebBookmarksDidReloadNotification
__ WebBookmarks: _WebBookmarksDidVacuumDatabaseDistributedNotification
__ WebBookmarks: _WebBookmarksFolderContentsDidChangeNotification
__ WebBookmarks: _WebBookmarksFromMigrationStateKey
__ WebBookmarks: _WebBookmarksHistoryFolderTitle
__ WebBookmarks: _WebBookmarksReadingListFetchingNotification
__ WebBookmarks: _WebBookmarksReadingListFolderTitle
__ WebBookmarks: _WebBookmarksResetCloudHistoryAccountDefaultsKey
__ WebBookmarks: _WebBookmarksRootBookmarkTitle
__ WebBookmarks: _WebBookmarksSpecialFoldersDidChangeNotification
__ WebBookmarks: _WebBookmarksToMigrationStateKey
__ WebKit: _OBJC_CLASS_$_WKBackForwardListItem
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKSecurityOrigin
__ WebKit: _OBJC_CLASS_$_WKSnapshotConfiguration
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$_WebCoreStatistics
__ WebKit: _OBJC_CLASS_$_WebDatabaseManager
__ WebKit: _OBJC_CLASS_$_WebKitStatistics
__ WebKit: _OBJC_CLASS_$_WebView
__ WebKit: _OBJC_CLASS_$__WKAutomationSession
__ WebKit: _OBJC_CLASS_$__WKAutomationSessionConfiguration
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_CLASS_$__WKSessionState
__ WebKit: _OBJC_CLASS_$__WKVisitedLinkStore
__ WebKit: _WebDatabaseDirectoryDefaultsKey
__ WebKit: _WebStorageDirectoryDefaultsKey
__ WebKit: __WKLegacyErrorDomain
__ WebUI: _OBJC_CLASS_$_WBUCreditCardDataController
__ WebUI: _OBJC_CLASS_$_WBUFeatureManager
__ WebUI: _OBJC_CLASS_$_WBUHistory
__ WebUI: _OBJC_METACLASS_$_WBUFeatureManager
__ WebUI: _OBJC_METACLASS_$_WBUHistory
__ WebUI: _WBUFeatureManagerCloudTabsAvailabilityDidChangeNotification
__ WebUI: _webuiCookieAcceptPolicyPreferencesKey
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create_static
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: _CCRandomGenerateBytes
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atanf
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async_f
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _exp2f
__ libSystem.B.dylib: _expm1
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _ferror
__ libSystem.B.dylib: _fgetln
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getopt_long_only
__ libSystem.B.dylib: _host_info
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_num_zones
__ libSystem.B.dylib: _malloc_zones
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _nanosleep
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _optarg
__ libSystem.B.dylib: _opterr
__ libSystem.B.dylib: _optind
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _proc_pid_rusage
__ libSystem.B.dylib: _pthread_main_np
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _rewind
__ libSystem.B.dylib: _scalable_zone_info
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _sinf
__ libSystem.B.dylib: _srand
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _syslog
__ libSystem.B.dylib: _task_info
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_deallocOnMainThreadHelper
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _method_setImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _property_getAttributes
ActionPanel : _SFActivityViewController <_SFActivityDelegate, AddBookmarkActivityDelegate>
 @property  <ActionPanelDelegate> *delegate
 @property  TabDocument *tabDocument
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ActionPanel createActivityItemProviderCollectionForTabDocument:]

  // instance methods
  -[ActionPanel .cxx_destruct]
  -[ActionPanel viewDidAppear:]
  -[ActionPanel setSharingURL:]
  -[ActionPanel viewWillDisappear:]
  -[ActionPanel _reload]
  -[ActionPanel addBookmarkActivityCanSaveBookmarkChanges:]
  -[ActionPanel addBookmarkActivityFailedToAcquireBookmarkLock:]
  -[ActionPanel excludedActivityTypes]
  -[ActionPanel _performActivity:]
  -[ActionPanel _executeActivity]
  -[ActionPanel _prepareActivity:completion:]
  -[ActionPanel activityDidComplete:withReturnedItems:success:]
  -[ActionPanel webViewForCustomizationController:]
  -[ActionPanel isContentObscuredByDigitalHealthForCustomizationController:]
  -[ActionPanel isDisplayingQuickLookDocumentForCustomizationController:]
  -[ActionPanel isReaderAvailableForCustomizationController:]
  -[ActionPanel isShowingReaderForCustomizationController:]
  -[ActionPanel provenanceForSafariActivity:]
  -[ActionPanel _preparePostToSocialNetwork:]
  -[ActionPanel _prepareMail:completion:]
  -[ActionPanel initWithTabDocument:activityDelegate:menuStyle:]
  -[ActionPanel downloadsViewController]
  -[ActionPanel updateReloadActivity]
  -[ActionPanel tabDocument]


NavigationBar : _SFNavigationBar
 @property  UnifiedField *textField

  // instance methods
  -[NavigationBar textField]
  -[NavigationBar newTextField]
  -[NavigationBar placeholderHorizontalInset]
  -[NavigationBar setExpanded:textFieldSelectionRange:]
  -[NavigationBar setTextFieldPlaceHolderColor:]


Application : SFBrowserApplication <PageLoadTestRunnerDelegate, TabSnapshotCacheStressTestRunnerDelegate, MCProfileConnectionObserver, SFBrowserApplicationProxy, SFUIApplicationModifierFlagsProviding, UIApplicationDelegatePrivate, WBDatabaseLockAcquisitorDelegate, WBSBrowserTabCompletionProviderSource, _SFDownloadDelegate, WBSUnifiedBarAnalyticsRecorderDelegate, BKSMousePointerDeviceObserver, WBSSystemNoteTakingControllerDelegate, SFWebExtensionsControllerDelegate, _SFNavigationIntentHandling>
 @property  BOOL isRunningPPT
 @property  BOOL shouldRestoreStateForPPT
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BrowserWindowController *browserWindowController
 @property  NSArray *browserControllers
 @property  BrowserController *primaryBrowserController
 @property  BOOL isCloudHistoryEnabled
 @property  AutomationController *automationController
 @property  ReadingListLeadImageCache *readingListLeadImageCache
 @property  BOOL usesDefaultBrowsingModeInAllWindows
 @property  BOOL usesPrivateBrowsingModeInAnyWindow
 @property  unsigned long maximumTabCount
 @property  ForYouRecommendationMediator *existingForYouRecommendationMediator
 @property  WBSForYouRecentParsecResultsManager *forYouRecentParsecResultsManager
 @property  SafariSettingsSyncEngine *settingsSyncEngine
 @property  WBSParsecABGroupManager *abGroupManager
 @property  HighlightManager *highlightManager
 @property  <WBSPhishingClassifier> *phishingClassifier
 @property  WBSAllowedLegacyTLSHostManager *legacyTLSHostManager
 @property  SystemNoteTakingController *systemNoteTakingController
 @property  WBSavedStateManager *savedStateManager
 @property  WBTabGroupManager *tabGroupManager
 @property  WBTabGroupManager *ephemeralTabGroupManager
 @property  BOOL hasPointerDevice
 @property  BOOL usesLoweredSearchBar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIScene *currentScene
 @property  long long currentKeyboardModifierFlags
 @property  <WBSUnifiedBarAnalyticsProviding> *unifiedBarAnalyticsProvider

  // class methods
  +[Application initialize]
  +[Application sharedApplication]
  +[Application browserControllerUIDelegateProvider]
  +[Application contextClient]
  +[Application systemMemorySize]
  +[Application setBrowserControllerUIDelegateProvider:]
  +[Application commandLineTestOption:arg:]
  +[Application sharedTestRunner]
  +[Application postTestNotificationName:object:userInfo:]
  +[Application postTestNotificationName:object:]

  // instance methods
  -[Application savedStateManager]
  -[Application downloadDidStart:]
  -[Application profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[Application runTest:options:]
  -[Application applicationWillTerminate]
  -[Application buildMenuWithBuilder:]
  -[Application _applicationWillResignActive:]
  -[Application isRunningPPT]
  -[Application application:didFinishLaunchingWithOptions:]
  -[Application mousePointerDevicesDidDisconnect:]
  -[Application mousePointerDevicesDidConnect:]
  -[Application downloadDidFinish:]
  -[Application .cxx_destruct]
  -[Application isCloudHistoryEnabled]
  -[Application updateTabCount]
  -[Application canAddNewTabForPrivateBrowsing:]
  -[Application _handleHIDEvent:]
  -[Application proxy]
  -[Application profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[Application dispatchNavigationIntent:]
  -[Application saveChangesToCloudHistoryStore]
  -[Application applicationWillSuspend]
  -[Application currentScene]
  -[Application handleNavigationIntent:completion:]
  -[Application browserWindowController]
  -[Application _extendLaunchTest]
  -[Application clearCachedTabCompletionData]
  -[Application handleKeyUIEvent:]
  -[Application _applicationWillEnterForeground:]
  -[Application _applicationDidBecomeActive:]
  -[Application application:didDiscardSceneSessions:]
  -[Application _historyWasCleared:]
  -[Application downloadShouldContinueAfterReceivingResponse:decisionHandler:]
  -[Application downloadDidFail:]
  -[Application browserControllers]
  -[Application downloadDidReceiveResponse:]
  -[Application userDefaultsDidChange:]
  -[Application observeValueForKeyPath:ofObject:change:context:]
  -[Application _applicationDidEnterBackground:]
  -[Application didReceiveMemoryWarning]
  -[Application _readDefaults]
  -[Application tabCollection]
  -[Application databaseLockAcquisitor:acquiredLock:]
  -[Application tabGroupManager]
  -[Application unifiedBarAnalyticsProvider]
  -[Application tabInfosForBrowserTabCompletionProvider:]
  -[Application selectedTabInfoForBrowserTabCompletionProvider:]
  -[Application legacyTLSHostManager]
  -[Application sfWebExtensionsController:navigationIntentUUIDForWindow:]
  -[Application sfWebExtensionsController:windowForWebView:extension:]
  -[Application sfWebExtensionsControllerLastFocusedWindow:]
  -[Application notifyAddedLinkPreviewMetadata:toUserActivity:webView:]
  -[Application noteTakingController:addHighlightForUserActivity:completion:]
  -[Application isNoteTakingControllerSupportedInPrivateBrowsing:]
  -[Application extensionBaseURIMapChangedForExtensionsController:]
  -[Application extensionsController:closeOpenExtensionTabsWithBaseURI:]
  -[Application abGroupManager]
  -[Application maximumTabCount]
  -[Application sfWebExtensionsControllerDidChangeExtensionForPermissionBanner:]
  -[Application sfWebExtensionsController:reusableTabWithID:]
  -[Application sfWebExtensionsController:tabForWebView:]
  -[Application sfWebExtensionsController:createNewTabInWindow:tabIndex:url:makeActive:completionHandler:]
  -[Application sfWebExtensionsController:duplicateTab:]
  -[Application sfWebExtensionsController:relateParentTab:toTab:]
  -[Application sfWebExtensionsController:tabWithID:]
  -[Application sfWebExtensionsController:captureVisibleTab:format:quality:completionHandler:]
  -[Application sfWebExtensionsController:canSendMessageFromWebView:]
  -[Application sfWebExtensionsController:windowWithID:]
  -[Application sfWebExtensionsControllerAllWindows:]
  -[Application sfWebExtensionsControllerCompileContentBlocker:identifier:rules:completionHandler:]
  -[Application sfWebExtensionsControllerContentBlockerListDidChange:]
  -[Application currentKeyboardModifierFlags]
  -[Application primaryBrowserController]
  -[Application _saveBrowserState]
  -[Application _suspendOrResumeWallpaperAnimationIfNeeded]
  -[Application usesLoweredSearchBar]
  -[Application _performBookmarksDatabaseTasksInBackground]
  -[Application _reportBookmarksDatabaseHealth]
  -[Application _reloadSearchEngines]
  -[Application _managedProfileConfigurationDidUpdate]
  -[Application _maximumTabCount]
  -[Application _numberOfTabsForPrivateBrowsing:]
  -[Application auditTabCount]
  -[Application automationController]
  -[Application _didEnableCustomizationSync]
  -[Application _pruneExpiredScenes]
  -[Application _prewarmAutomationControllerIfEnabled]
  -[Application _export30DaysWorthOfHistoryAfterUpgrade]
  -[Application _updateKeyboardCorrectionLearningAllowed]
  -[Application _historyHostnamesWereRemoved:]
  -[Application _appleKeyboardsChanged:]
  -[Application _updateCloudFeatureAvailability]
  -[Application _showSearchEngineAlertIfNeeded]
  -[Application _addDefaultsObserver]
  -[Application _reportLaunchAnalyticsSoon]
  -[Application _connectToCyclerIfNecessary]
  -[Application _downloadDidStartNotification:]
  -[Application _downloadDidStopNotification:]
  -[Application existingForYouRecommendationMediator]
  -[Application setExistingForYouRecommendationMediator:]
  -[Application shouldRestoreStateForPPT]
  -[Application _resetCloudHistoryAccountIfNeeded]
  -[Application _getBookmarksDataClassEnabledWithCompletionHandler:]
  -[Application _browserControllerForTabWithUUID:]
  -[Application tabUUIDsMatchingQuery:completionHandler:]
  -[Application sceneForTabWithUUID:]
  -[Application isTabActiveWithUUID:]
  -[Application _browserControllerForExternalNavigation]
  -[Application usesDefaultBrowsingModeInAllWindows]
  -[Application usesPrivateBrowsingModeInAnyWindow]
  -[Application readingListLeadImageCache]
  -[Application createRecommendationMediatorOrReuseExistingOneIfPossible]
  -[Application forYouRecentParsecResultsManager]
  -[Application phishingClassifier]
  -[Application highlightManager]
  -[Application systemNoteTakingController]
  -[Application ephemeralTabGroupManager]
  -[Application hasPointerDevice]
  -[Application settingsSyncEngine]
  -[Application _browserControllerForApplicationTesting]
  -[Application prepareBookmarksTest]
  -[Application startCanvasTest:]
  -[Application prepareTabViewBringUpTest]
  -[Application prepareTabViewRotationTest]
  -[Application prepareTabViewOpenTest]
  -[Application prepareTabViewSelectTest]
  -[Application prepareTabViewCloseTest]
  -[Application startKeyboardSplitAndMergeTest]
  -[Application startKeyboardBringupTest]
  -[Application startKeyboardRotationTest]
  -[Application runLargeFormFocusTest]
  -[Application runLargeFormTypingTest]
  -[Application runGeneratePasswordTest]
  -[Application runTabOverviewTest]
  -[Application runTabSnapshotCacheStressTest]
  -[Application runBookmarksViewTest]
  -[Application startSearchPerformanceUnifiedFieldKeyTimeTest]
  -[Application startSearchPerformanceDetailedTestWithCF:]
  -[Application startSearchPerformanceTest]
  -[Application startSidebarTest]
  -[Application startTabBarTest]
  -[Application startHistoryTest]
  -[Application runMemoryOrIOTestWithType:]
  -[Application prepareTabViewScrollTest]
  -[Application loadBlankPageforKeyboardTests]
  -[Application _loadAlternateHTMLString:completionHandler:]
  -[Application _observeNotificationOnce:handler:]
  -[Application _loadLargeForm:]
  -[Application _typeTextInForm:completionHandler:]
  -[Application _runFormTypingTextWithSetupScript:]
  -[Application _loadTabsForTesting:presentTabView:completion:]
  -[Application _preparePageLoadTestControllerParameters]
  -[Application _prepareTabViewBringUpTest]
  -[Application loadTabsForTesting:presentTabView:]
  -[Application startTabViewBringUpTest]
  -[Application _prepareTabViewOpenTest]
  -[Application startTabViewOpenTest]
  -[Application _prepareTabViewSelectTest]
  -[Application startTabViewSelectTest]
  -[Application _prepareTabViewCloseTest]
  -[Application startTabViewCloseTest]
  -[Application _prepareTabViewRotationTest]
  -[Application startTabViewRotationTest]
  -[Application _prepareTabViewScrollTest]
  -[Application startTabViewScrollTest]
  -[Application loadTabsForTesting:presentTabView:completion:]
  -[Application _scrollContentWithTestName:scrollingBounds:swipes:completionHandler:]
  -[Application _runSidebarTest]
  -[Application _populateInMemoryBookmarksDBForTestNamed:]
  -[Application startedPurpleTest]
  -[Application _pollCanvasTest:]
  -[Application finishedCanvasTestWithURL:forTabDocument:]
  -[Application finishedPurpleTest:]
  -[Application overrideBrowserStateForTestNamed:browserController:]
  -[Application _syntheticHTMLString]
  -[Application _runTabBarSwitchTabTest]
  -[Application _runTabOverviewScrollPerfTest]
  -[Application _runTabOverviewPresentingAndDismissalTest]
  -[Application _runTabOverviewOpenNewTabTest]
  -[Application startBookmarksTest]
  -[Application _switchToBookmarksCollectionForTestNamed:]
  -[Application _scrollViewForTestNamed:]
  -[Application startSearchPerformanceTestWithTestStrings:]
  -[Application startSearchPerformanceTestWithTestStrings:perQuery:withCF:]
  -[Application _generateMemoryFootprintResults:]
  -[Application searchParametersWithCFEnabled:]
  -[Application _doSearchTestOnCVC:WithTestStrings:andDispatchGroup:]
  -[Application _resetHistoryWithCompressedDatabaseAtURL:error:]
  -[Application startHistoryLoadTest]
  -[Application startCommandLineTest]
  -[Application checkExtendedLaunchPageLoad:forTabDocument:]
  -[Application _numberOption:]
  -[Application failedPurpleTestWithError:]
  -[Application finishedBookmarksTest]
  -[Application isRunningShowBookmarksTest]
  -[Application isRunningCanvasTest]
  -[Application didStartBookmarksTest]
  -[Application pageLoadTestRunnerFinished:]
  -[Application tabSnapshotCacheStressTestRunnerDidFinish:]


TabOverviewItemLayoutInfo : NSObject
  // instance methods
  -[TabOverviewItemLayoutInfo .cxx_destruct]
  -[TabOverviewItemLayoutInfo init]
  -[TabOverviewItemLayoutInfo dealloc]


CloudTabsForYouDataSource : WBSForYouCloudTabsDataSource
  // instance methods
  -[CloudTabsForYouDataSource _cloudTabsDidUpdate:]
  -[CloudTabsForYouDataSource .cxx_destruct]
  -[CloudTabsForYouDataSource dealloc]
  -[CloudTabsForYouDataSource initWithTabStore:]


CyclerCommandHandler : NSObject <WBDatabaseLockAcquisitorDelegate, WBSCyclerTestTarget>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CyclerCommandHandler initWithBookmarkCollection:]
  -[CyclerCommandHandler .cxx_destruct]
  -[CyclerCommandHandler init]
  -[CyclerCommandHandler databaseLockAcquisitor:acquiredLock:]
  -[CyclerCommandHandler _startMonitoringSyncStatusWithCompletionHandler:]
  -[CyclerCommandHandler fetchTopLevelBookmarkList:]
  -[CyclerCommandHandler clearBookmarksWithOptions:completionHandler:]
  -[CyclerCommandHandler createBookmarkWithTitle:url:inListWithIdentifier:atIndex:reply:]
  -[CyclerCommandHandler createBookmarkListWithTitle:inListWithIdentifier:atIndex:reply:]
  -[CyclerCommandHandler deleteBookmarkWithIdentifier:reply:]
  -[CyclerCommandHandler moveBookmarkWithIdentifier:intoListWithIdentifier:atIndex:reply:]
  -[CyclerCommandHandler setTitle:forBookmarkWithIdentifier:reply:]
  -[CyclerCommandHandler setURL:forBookmarkWithIdentifier:reply:]
  -[CyclerCommandHandler syncBookmarksWithCompletionHandler:]
  -[CyclerCommandHandler _cyclerRepresentationOfBookmark:]
  -[CyclerCommandHandler _tryToAcquireDatabaseLockWithCompletionHandler:]
  -[CyclerCommandHandler _adjustInsertionIndex:forInsertionIntoListWithIdentifier:]
  -[CyclerCommandHandler _isSpecialBookmark:]
  -[CyclerCommandHandler _isBookmarkSyncEnabled]


TabOverviewInterpolatedLocation : NSObject
 @property  {?={CGPoint=dd}dd} location
 @property  {?={CGPoint=dd}dd} targetLocation
 @property  double minimumTranslationSpeed
 @property  double decelerationFactor

  // instance methods
  -[TabOverviewInterpolatedLocation resetToLocation:]
  -[TabOverviewInterpolatedLocation location]
  -[TabOverviewInterpolatedLocation endInteraction]
  -[TabOverviewInterpolatedLocation targetLocation]
  -[TabOverviewInterpolatedLocation setTargetLocation:]
  -[TabOverviewInterpolatedLocation isInSteadyStateWithConstraints:]
  -[TabOverviewInterpolatedLocation isInSteadyStateWithConstraints:epsilon:]
  -[TabOverviewInterpolatedLocation moveLogScaleBy:centeringOffset:withLastCenteringOffset:atTime:shiftLocation:]
  -[TabOverviewInterpolatedLocation initWithLocation:decelerationFactor:]
  -[TabOverviewInterpolatedLocation shiftTargetLocation:]
  -[TabOverviewInterpolatedLocation setDecelerationFactor:]
  -[TabOverviewInterpolatedLocation decelerationFactorForTargetLocation:]
  -[TabOverviewInterpolatedLocation interpolateByTimeInterval:roundingAtSize:zScaleFactor:withHorizontalBounceFactor:verticalBounceFactor:constraints:]
  -[TabOverviewInterpolatedLocation resetRenderedLocation]
  -[TabOverviewInterpolatedLocation beginInteractionAtTime:]
  -[TabOverviewInterpolatedLocation moveBy:atTime:]
  -[TabOverviewInterpolatedLocation moveInstantaneouslyBy:]
  -[TabOverviewInterpolatedLocation moveLogScaleBy:centeringOffset:withLastCenteringOffset:atTime:]
  -[TabOverviewInterpolatedLocation minimumTranslationSpeed]
  -[TabOverviewInterpolatedLocation setMinimumTranslationSpeed:]
  -[TabOverviewInterpolatedLocation decelerationFactor]


TabViewPopoverSourceInfo : NSObject <_SFPopoverSourceInfo>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} popoverSourceRect
 @property  UIView *popoverSourceView
 @property  BOOL shouldDismissIfSourceRemovedAfterRepositioning
 @property  BOOL shouldPassthroughSuperview
 @property  BOOL shouldHideArrow
 @property  unsigned long permittedArrowDirections
 @property  long long provenance
 @property  UIBarButtonItem *barButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabViewPopoverSourceInfo .cxx_destruct]
  -[TabViewPopoverSourceInfo popoverSourceView]
  -[TabViewPopoverSourceInfo popoverSourceRect]
  -[TabViewPopoverSourceInfo initWithBrowserController:barItem:]


VibrantTableViewCell : UITableViewCell
 @property  BOOL usesVibrantEffect

  // instance methods
  -[VibrantTableViewCell setUsesVibrantEffect:]
  -[VibrantTableViewCell usesVibrantEffect]


CapsuleNavigationBarViewController : UIViewController <SFCapsuleCollectionViewGestureObserving, TabControllerDocumentObserving, TabDocumentNavigationObserving, UIContextMenuInteractionDelegate, UIDragInteractionDelegate, UIDropInteractionDelegate, _UIScrollViewScrollObserver, PKScribbleInteractionElementSource, SFCapsuleCollectionViewDataSource, SFCapsuleCollectionViewDelegate, TabOverviewPresentationObserving>
 @property  NSArray *tabDocuments
 @property  TabController *tabController
 @property  <CapsuleNavigationBarViewControllerDelegate> *delegate
 @property  UIResponder *customNextResponder
 @property  SFCapsuleCollectionView *capsuleCollectionView
 @property  UnifiedField *unifiedField
 @property  BOOL capsuleIsFocused
 @property  BOOL capsuleIsMinimized
 @property  BOOL focusingForScribble
 @property  BOOL performingWebViewTapTransition
 @property  SFCapsuleNavigationBar *selectedItemNavigationBar
 @property  BOOL transitioningToNormalStateForKeyboardDismissal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CapsuleNavigationBarViewController tabCollectionViewDidDismiss:]
  -[CapsuleNavigationBarViewController nextResponder]
  -[CapsuleNavigationBarViewController tabDocumentDidCommitNavigation:]
  -[CapsuleNavigationBarViewController tabCollectionViewWillPresent:]
  -[CapsuleNavigationBarViewController tabCollectionViewDidPresent:]
  -[CapsuleNavigationBarViewController tabCollectionViewDidCancelDismissal:]
  -[CapsuleNavigationBarViewController contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[CapsuleNavigationBarViewController tabCollectionViewWillDismiss:]
  -[CapsuleNavigationBarViewController contextMenuInteraction:willDisplayMenuForConfiguration:animator:]
  -[CapsuleNavigationBarViewController contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[CapsuleNavigationBarViewController _dropInteraction:dataOwnerForSession:]
  -[CapsuleNavigationBarViewController tabController]
  -[CapsuleNavigationBarViewController _keyboardWillHide:]
  -[CapsuleNavigationBarViewController _keyboardWillShow:]
  -[CapsuleNavigationBarViewController tabDocuments]
  -[CapsuleNavigationBarViewController _observeScrollViewDidScroll:]
  -[CapsuleNavigationBarViewController contextMenuInteraction:configurationForMenuAtLocation:]
  -[CapsuleNavigationBarViewController .cxx_destruct]
  -[CapsuleNavigationBarViewController contextMenuInteraction:willEndForConfiguration:animator:]
  -[CapsuleNavigationBarViewController dragInteraction:previewForLiftingItem:session:]
  -[CapsuleNavigationBarViewController viewDidLoad]
  -[CapsuleNavigationBarViewController dropInteraction:canHandleSession:]
  -[CapsuleNavigationBarViewController setDelegate:]
  -[CapsuleNavigationBarViewController viewDidAppear:]
  -[CapsuleNavigationBarViewController setCustomNextResponder:]
  -[CapsuleNavigationBarViewController tabController:didSwitchFromTabDocument:toTabDocument:]
  -[CapsuleNavigationBarViewController dragInteraction:itemsForBeginningSession:]
  -[CapsuleNavigationBarViewController dropInteraction:sessionDidUpdate:]
  -[CapsuleNavigationBarViewController _scribbleInteraction:frameForElement:]
  -[CapsuleNavigationBarViewController customNextResponder]
  -[CapsuleNavigationBarViewController _scribbleInteraction:requestElementsInRect:completion:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewDidUpdateMinimizationGesture:]
  -[CapsuleNavigationBarViewController tabControllerDocumentCountDidChange:]
  -[CapsuleNavigationBarViewController dragInteraction:sessionWillBegin:]
  -[CapsuleNavigationBarViewController viewWillAppear:]
  -[CapsuleNavigationBarViewController _scribbleInteraction:focusElement:initialFocusSelectionReferencePoint:completion:]
  -[CapsuleNavigationBarViewController tabDocumentWillEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[CapsuleNavigationBarViewController delegate]
  -[CapsuleNavigationBarViewController _dragInteraction:dataOwnerForSession:]
  -[CapsuleNavigationBarViewController dropInteraction:performDrop:]
  -[CapsuleNavigationBarViewController loadView]
  -[CapsuleNavigationBarViewController viewDidDisappear:]
  -[CapsuleNavigationBarViewController unifiedField]
  -[CapsuleNavigationBarViewController capsuleCollectionView:willChangeToLayoutStyle:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewLayoutStyleDidChange:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:shouldHideShadowForItemAtIndex:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:didUpdateProgress:toSelectItemAtIndex:progressToTopAction:snapToAxis:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewWillHideKeyboard:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewAllowsMinimizationGesture:]
  -[CapsuleNavigationBarViewController numberOfItemsInCapsuleCollectionView:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewWillReloadData:]
  -[CapsuleNavigationBarViewController topActionForCapsuleCollectionView:]
  -[CapsuleNavigationBarViewController trailingActionForCapsuleCollectionView:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:contentViewForItemAtIndex:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:didSelectItemAtIndex:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:didBeginSelectionGestureOnAxis:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:willEndSelectionGestureWithCoordinator:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewDidEndSelectionGesture:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewBoundaryEdgesForScrollableContent:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewDidBeginMinimizationGesture:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:selectedItemWillChangeToState:options:coordinator:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewContentScaleCompletesMinimization:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:distanceToTopEdgeIncludingDeceleration:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewMinimizedContentScale:]
  -[CapsuleNavigationBarViewController createToolbarForCapsuleCollectionView:]
  -[CapsuleNavigationBarViewController capsuleCollectionViewShouldDelayToolbarPresentation:]
  -[CapsuleNavigationBarViewController capsuleCollectionView:heightForItemAtIndex:width:state:]
  -[CapsuleNavigationBarViewController updateAdditionalBottomObscuredInset]
  -[CapsuleNavigationBarViewController _updateSelectedItemAccessoryViews]
  -[CapsuleNavigationBarViewController _updateHidingCapsuleAnimated:]
  -[CapsuleNavigationBarViewController _switchObservingFromTabDocument:toTabDocument:]
  -[CapsuleNavigationBarViewController _updateTabDocumentsAnimated:]
  -[CapsuleNavigationBarViewController transitionToState:options:animated:completionHandler:]
  -[CapsuleNavigationBarViewController _contextMenuActionProvider]
  -[CapsuleNavigationBarViewController _showsOnlyActiveTab]
  -[CapsuleNavigationBarViewController _updateTabDocumentsWithoutUpdatingCollectionView]
  -[CapsuleNavigationBarViewController _activeWebViewIsFirstResponder]
  -[CapsuleNavigationBarViewController transitionToState:animated:completionHandler:]
  -[CapsuleNavigationBarViewController _collectionViewIndexOfTabDocument:]
  -[CapsuleNavigationBarViewController capsuleCollectionView]
  -[CapsuleNavigationBarViewController _reattachCapsuleToCollectionView]
  -[CapsuleNavigationBarViewController _attachSelectedCapsuleToTabOverview]
  -[CapsuleNavigationBarViewController _installDetachedCapsuleInCollectionView]
  -[CapsuleNavigationBarViewController beginHidingCapsuleAnimated:]
  -[CapsuleNavigationBarViewController endHidingCapsuleAnimated:]
  -[CapsuleNavigationBarViewController tabOverviewDidUpdateInteractivePresentation:]
  -[CapsuleNavigationBarViewController _tabDocumentAtCollectionViewIndex:]
  -[CapsuleNavigationBarViewController _boundaryEdgesForScrollView:]
  -[CapsuleNavigationBarViewController _shouldBeginAdjustingScrollViewContentOffsetForMinimization]
  -[CapsuleNavigationBarViewController _adjustScrollViewContentOffsetForMinimization]
  -[CapsuleNavigationBarViewController _dragPreviewForNavigationBar:]
  -[CapsuleNavigationBarViewController selectedItemNavigationBar]
  -[CapsuleNavigationBarViewController tabController:didReplaceTabDocument:withTabDocument:]
  -[CapsuleNavigationBarViewController tabController:didCloseTabDocuments:atIndexes:info:]
  -[CapsuleNavigationBarViewController tabController:didInsertTabDocument:]
  -[CapsuleNavigationBarViewController tabController:didMoveTabDocument:overTabDocument:]
  -[CapsuleNavigationBarViewController tabControllerDidChangeCurrentTabDocuments:]
  -[CapsuleNavigationBarViewController tabControllerWillBeginUpdates:]
  -[CapsuleNavigationBarViewController tabControllerDidEndUpdates:]
  -[CapsuleNavigationBarViewController tabOverviewWillBeginInteractivePresentation:]
  -[CapsuleNavigationBarViewController tabOverviewWillEndInteractivePresentation:]
  -[CapsuleNavigationBarViewController willTransitionFromTabView:toTabView:]
  -[CapsuleNavigationBarViewController setTabController:]
  -[CapsuleNavigationBarViewController capsuleIsMinimized]
  -[CapsuleNavigationBarViewController performingWebViewTapTransition]
  -[CapsuleNavigationBarViewController updateVisibleContextMenu]
  -[CapsuleNavigationBarViewController webViewDidFirstMeaningfulPaintForTabDocument:]
  -[CapsuleNavigationBarViewController capsuleIsFocused]
  -[CapsuleNavigationBarViewController focusingForScribble]
  -[CapsuleNavigationBarViewController transitioningToNormalStateForKeyboardDismissal]


VibrantSeparatorView : UIView
 @property  BOOL usesVibrantEffect
 @property  UIColor *nonVibrantColor

  // instance methods
  -[VibrantSeparatorView .cxx_destruct]
  -[VibrantSeparatorView setUsesVibrantEffect:]
  -[VibrantSeparatorView usesVibrantEffect]
  -[VibrantSeparatorView setNonVibrantColor:]
  -[VibrantSeparatorView nonVibrantColor]


SystemNoteTakingController : WBSSystemNoteTakingController
  // instance methods
  -[SystemNoteTakingController _isSystemNoteTakingEnabledForSafari]


BookmarksBarLabelButton : UIButton
 @property  WebBookmark *bookmark
 @property  BOOL usesLightControls
 @property  <BookmarksBarLabelButtonDelegate> *delegate
 @property  {UIEdgeInsets=dddd} cursorRegionInset

  // class methods
  +[BookmarksBarLabelButton labelButton]

  // instance methods
  -[BookmarksBarLabelButton imageRectForContentRect:]
  -[BookmarksBarLabelButton bookmark]
  -[BookmarksBarLabelButton titleRectForContentRect:]
  -[BookmarksBarLabelButton .cxx_destruct]
  -[BookmarksBarLabelButton setBookmark:]
  -[BookmarksBarLabelButton canBecomeFirstResponder]
  -[BookmarksBarLabelButton setDelegate:]
  -[BookmarksBarLabelButton initWithFrame:]
  -[BookmarksBarLabelButton pointInside:withEvent:]
  -[BookmarksBarLabelButton delegate]
  -[BookmarksBarLabelButton pointerInteraction:regionForRequest:defaultRegion:]
  -[BookmarksBarLabelButton _handleLongPressGestureRecognizer:]
  -[BookmarksBarLabelButton _openInNewTabs:]
  -[BookmarksBarLabelButton _bookmarksBarLabelButtonHitRect]
  -[BookmarksBarLabelButton usesLightControls]
  -[BookmarksBarLabelButton setUsesLightControls:]
  -[BookmarksBarLabelButton cursorRegionInset]
  -[BookmarksBarLabelButton setCursorRegionInset:]


LibrarySectionController : NSObject
 @property  LibraryConfiguration *configuration
 @property  NSString *title
 @property  NSArray *itemControllers
 @property  <LibraryContentObserver> *contentObserver
 @property  UIViewController *presentingViewController
 @property  NSArray *filteredItemControllers

  // instance methods
  -[LibrarySectionController configuration]
  -[LibrarySectionController .cxx_destruct]
  -[LibrarySectionController setPresentingViewController:]
  -[LibrarySectionController presentingViewController]
  -[LibrarySectionController title]
  -[LibrarySectionController initWithConfiguration:]
  -[LibrarySectionController contentDidChange]
  -[LibrarySectionController itemControllers]
  -[LibrarySectionController filteredItemControllers]
  -[LibrarySectionController updateToolbarIfNeeded]
  -[LibrarySectionController registerItemsWithRegistration:]
  -[LibrarySectionController contentObserver]
  -[LibrarySectionController setContentObserver:]


BookmarksBarView : UIView <BookmarksBarLabelButtonDelegate, BookmarksNavigationControllerDelegate, UIPopoverPresentationControllerDelegate, _SFNavigationIntentHandling, SFUnifiedBarContentView>
 @property  <BookmarksBarViewDelegate> *delegate
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  BOOL showsSeparator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TabGroupProvider> *tabGroupProvider
 @property  {CGSize=dd} preferredSize
 @property  double barBackgroundAlpha
 @property  SFUnifiedBarMetrics *barMetrics
 @property  SFUnifiedBarTheme *barTheme
 @property  BOOL contentHidden
 @property  {NSDirectionalEdgeInsets=dddd} contentInset
 @property  {CGPoint=dd} midpointForCenteredContent
 @property  BOOL pinsScrollPositionToTrailingEdgeDuringResize
 @property  double preferredBottomSpacing
 @property  double topSpacingAdjustment
 @property  unsigned long sizeClass
 @property  double squishTransformFactor
 @property  {UIEdgeInsets=dddd} squishedContentInset
 @property  NSArray *squishedAccessoryViews
 @property  BOOL showsSquishedAccessoryViews
 @property  double themeColorVisibility
 @property  BOOL isCurrentlyScrollable

  // instance methods
  -[BookmarksBarView tabGroupProvider]
  -[BookmarksBarView presentationControllerDidDismiss:]
  -[BookmarksBarView setNavigationIntentHandler:]
  -[BookmarksBarView popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[BookmarksBarView traitCollectionDidChange:]
  -[BookmarksBarView bookmarksNavigationControllerReloadDidFail:]
  -[BookmarksBarView .cxx_destruct]
  -[BookmarksBarView layoutSubviews]
  -[BookmarksBarView setShowsSeparator:]
  -[BookmarksBarView setDelegate:]
  -[BookmarksBarView preferredSize]
  -[BookmarksBarView dispatchNavigationIntent:]
  -[BookmarksBarView _buttonTapped:]
  -[BookmarksBarView handleNavigationIntent:completion:]
  -[BookmarksBarView setLinkPreviewProvider:]
  -[BookmarksBarView initWithFrame:]
  -[BookmarksBarView delegate]
  -[BookmarksBarView navigationIntentHandler]
  -[BookmarksBarView bookmarksNavigationControllerViewDidAppear:]
  -[BookmarksBarView dealloc]
  -[BookmarksBarView bookmarksNavigationControllerViewDidDisappear:]
  -[BookmarksBarView linkPreviewProvider]
  -[BookmarksBarView showsSeparator]
  -[BookmarksBarView preferredBottomSpacing]
  -[BookmarksBarView topSpacingAdjustment]
  -[BookmarksBarView bookmarksBarLabelButtonDidSelectOpenInNewTab:]
  -[BookmarksBarView _clearBookmarksNavigationController]
  -[BookmarksBarView _setButtonUsedToShowNavigationController:]
  -[BookmarksBarView _presentCurrentBookmarksPopoverFromButton:animated:]
  -[BookmarksBarView _dismissCurrentBookmarksPopover]
  -[BookmarksBarView _createAllLabelButtons]
  -[BookmarksBarView _reloadBookmarkLabels]
  -[BookmarksBarView _receivedBookmarksChangedNotification:]
  -[BookmarksBarView containingBookmarkForNavigationController:]
  -[BookmarksBarView bookmarksNavigationControllerDidReload:]


BookmarksNavigationController : UINavigationController <BookmarksTableViewControllerDelegate, HistoryTableViewControllerDelegate, ReadingListViewControllerDelegate, _SFBookmarkInfoViewControllerDelegate, UINavigationBarDelegate, UINavigationControllerDelegate, _SFNavigationIntentHandling>
 @property  BOOL doneButtonHidden
 @property  BOOL allowsEditing
 @property  <BookmarksNavigationControllerDelegate> *bookmarksNavigationControllerDelegate
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  {UIEdgeInsets=dddd} contentInset
 @property  {UIEdgeInsets=dddd} tableSeparatorInset
 @property  BOOL hasTranslucentAppearance
 @property  BOOL contentBorrowed
 @property  NSString *currentCollection
 @property  <TabGroupProvider> *tabGroupProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BookmarksNavigationController test_setSavedStateCollection:]
  +[BookmarksNavigationController test_savedStateCollection]

  // instance methods
  -[BookmarksNavigationController tabGroupProvider]
  -[BookmarksNavigationController isContentBorrowed]
  -[BookmarksNavigationController setNavigationIntentHandler:]
  -[BookmarksNavigationController traitCollectionDidChange:]
  -[BookmarksNavigationController allowsEditing]
  -[BookmarksNavigationController _keyboardWillShow:]
  -[BookmarksNavigationController navigationController:didShowViewController:animated:]
  -[BookmarksNavigationController .cxx_destruct]
  -[BookmarksNavigationController viewDidLoad]
  -[BookmarksNavigationController _folderContentsDidChange:]
  -[BookmarksNavigationController viewDidAppear:]
  -[BookmarksNavigationController setContentInset:]
  -[BookmarksNavigationController dispatchNavigationIntent:]
  -[BookmarksNavigationController setBookmarksNavigationControllerDelegate:]
  -[BookmarksNavigationController handleNavigationIntent:completion:]
  -[BookmarksNavigationController _doneButtonPressed]
  -[BookmarksNavigationController setLinkPreviewProvider:]
  -[BookmarksNavigationController viewWillDisappear:]
  -[BookmarksNavigationController _setContentOverlayInsets:]
  -[BookmarksNavigationController viewDidLayoutSubviews]
  -[BookmarksNavigationController viewWillAppear:]
  -[BookmarksNavigationController setAllowsEditing:]
  -[BookmarksNavigationController currentCollection]
  -[BookmarksNavigationController viewWillTransitionToSize:withTransitionCoordinator:]
  -[BookmarksNavigationController navigationIntentHandler]
  -[BookmarksNavigationController setContentBorrowed:]
  -[BookmarksNavigationController dealloc]
  -[BookmarksNavigationController contentInset]
  -[BookmarksNavigationController bookmarksNavigationControllerDelegate]
  -[BookmarksNavigationController viewDidDisappear:]
  -[BookmarksNavigationController navigationController:willShowViewController:animated:]
  -[BookmarksNavigationController linkPreviewProvider]
  -[BookmarksNavigationController setCurrentCollection:]
  -[BookmarksNavigationController rootBookmark]
  -[BookmarksNavigationController bookmarkInfoViewControllerShouldUseTranslucentAppearance:]
  -[BookmarksNavigationController hasTranslucentAppearance]
  -[BookmarksNavigationController safari_prefersHalfHeightSheetPresentationWithLoweredBar]
  -[BookmarksNavigationController _webBookmarksDidReload:]
  -[BookmarksNavigationController topBookmarksTableViewController]
  -[BookmarksNavigationController topReadingListViewController]
  -[BookmarksNavigationController initWithBookmarksDelegate:linkPreviewProvider:topBookmark:skipOffset:]
  -[BookmarksNavigationController rebaseOnDescendentBookmark:]
  -[BookmarksNavigationController rebaseOnAncestorBookmark:skipOffset:]
  -[BookmarksNavigationController setRootBookmark:skipOffset:]
  -[BookmarksNavigationController reloadViewControllers]
  -[BookmarksNavigationController _initWithBookmarksDelegate:linkPreviewProvider:topBookmark:skipOffset:activeCollection:showOnlyActiveCollection:]
  -[BookmarksNavigationController _bookmarkCollectionHasBecomeAvailable:]
  -[BookmarksNavigationController _updateBookmarkCollection]
  -[BookmarksNavigationController _setupCollections]
  -[BookmarksNavigationController _loadSavedPanelState]
  -[BookmarksNavigationController _restorePanelState]
  -[BookmarksNavigationController newBookmarksTableViewControllerWithFolder:skipOffset:]
  -[BookmarksNavigationController topmostBookmarksTableViewController]
  -[BookmarksNavigationController _isVisibleFolderID:]
  -[BookmarksNavigationController _setContentsDirty]
  -[BookmarksNavigationController _updateToolbarItemsForViewController:animated:]
  -[BookmarksNavigationController _setupCollectionSegmentedControlIfNeeded]
  -[BookmarksNavigationController _favoritesFolderBasedOnContentRestriction]
  -[BookmarksNavigationController _lastExistingBookmarkWithUUIDs:]
  -[BookmarksNavigationController _bookmarkSyncTimerDidFire:]
  -[BookmarksNavigationController _savePanelState]
  -[BookmarksNavigationController _clearBookmarkSyncTimer]
  -[BookmarksNavigationController _setEditingFromToolbarButton:]
  -[BookmarksNavigationController topHistoryTableViewController]
  -[BookmarksNavigationController _reloadSucceeded]
  -[BookmarksNavigationController _reloadFailed]
  -[BookmarksNavigationController _pathForBookmark:startingFromAncestor:]
  -[BookmarksNavigationController _updateClearHistoryButton]
  -[BookmarksNavigationController _didPressNewFolderButton]
  -[BookmarksNavigationController _didPressEditingDoneButton]
  -[BookmarksNavigationController _didPressEditButton]
  -[BookmarksNavigationController _createToolbarItemsIfNecessary]
  -[BookmarksNavigationController _toolbarItemsForViewController:]
  -[BookmarksNavigationController setDoneButtonHidden:]
  -[BookmarksNavigationController setPinnedPaletteForPanelViewController:]
  -[BookmarksNavigationController _segmentedControlItemForCollection:]
  -[BookmarksNavigationController _selectedCollectionChanged:]
  -[BookmarksNavigationController newRootViewControllerForCollection:]
  -[BookmarksNavigationController _restoreCurrentCollectionState]
  -[BookmarksNavigationController _createSavedPanelStateForTesting]
  -[BookmarksNavigationController _updateDoneButtonItemForViewController:]
  -[BookmarksNavigationController _shouldShowPaletteForViewController:]
  -[BookmarksNavigationController panelViewController:updateToolbarItemsAnimated:]
  -[BookmarksNavigationController panelViewControllerShouldTranslucentAppearance:]
  -[BookmarksNavigationController contentInsetForBookmarksTableViewController:]
  -[BookmarksNavigationController separatorInsetForBookmarksTableViewController:]
  -[BookmarksNavigationController bookmarksTableViewControllerDidBeginEditing:]
  -[BookmarksNavigationController bookmarksTableViewControllerDidEndEditing:]
  -[BookmarksNavigationController historyTableViewControllerDidBeginEditing:]
  -[BookmarksNavigationController historyTableViewControllerDidEndEditing:]
  -[BookmarksNavigationController readingListViewControllerCurrentReadingListItem:]
  -[BookmarksNavigationController readingListViewController:setBookmark:asRead:]
  -[BookmarksNavigationController readingListViewController:updateUnreadFilterShowingAllBookmarks:]
  -[BookmarksNavigationController readingListViewControllerDidBeginEditing:]
  -[BookmarksNavigationController readingListViewControllerDidEndEditing:]
  -[BookmarksNavigationController initWithBookmarksDelegate:linkPreviewProvider:]
  -[BookmarksNavigationController initWithBookmarksDelegate:linkPreviewProvider:collection:]
  -[BookmarksNavigationController _applicationSuspended:]
  -[BookmarksNavigationController setRootBookmarkUUIDString:]
  -[BookmarksNavigationController bookmarkSourceContentsChanged:]
  -[BookmarksNavigationController toggleEditBookmarks]
  -[BookmarksNavigationController reloadBookmarksForFolder:]
  -[BookmarksNavigationController setTableSeparatorInset:]
  -[BookmarksNavigationController tableSeparatorInset]
  -[BookmarksNavigationController setHasTranslucentAppearance:]
  -[BookmarksNavigationController doneButtonHidden]


BookmarksTableViewCellLayoutManager : UITableViewCellLayoutManager
 @property  NSString *currentContentSizeCategory

  // class methods
  +[BookmarksTableViewCellLayoutManager sharedManager]

  // instance methods
  -[BookmarksTableViewCellLayoutManager accessoryStartingRectForCell:forNewEditingState:showingDeleteConfirmation:]
  -[BookmarksTableViewCellLayoutManager textRectForCell:rowWidth:forSizing:]
  -[BookmarksTableViewCellLayoutManager currentContentSizeCategory]
  -[BookmarksTableViewCellLayoutManager layoutSubviewsOfCell:]
  -[BookmarksTableViewCellLayoutManager .cxx_destruct]
  -[BookmarksTableViewCellLayoutManager accessoryEndingRectForCell:forNewEditingState:showingDeleteConfirmation:]
  -[BookmarksTableViewCellLayoutManager setCurrentContentSizeCategory:]
  -[BookmarksTableViewCellLayoutManager _numberOfLinesForCurrentContentSize]


BookmarksTableViewController : SFPopoverSizingTableViewController <UISearchBarDelegate, UITableViewDragDelegate, UITableViewDropDelegate, _SFBookmarkInfoViewControllerDelegate, _SFWebBookmarkActionHandler, BookmarksPanelStateRestoring>
 @property  WebBookmarkCollection *collection
 @property  int folderID
 @property  WebBookmark *folder
 @property  <BookmarksTableViewControllerDelegate> *delegate
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  BOOL previewing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BookmarksTableViewController isPreviewing]
  -[BookmarksTableViewController setNavigationIntentHandler:]
  -[BookmarksTableViewController tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:]
  -[BookmarksTableViewController traitCollectionDidChange:]
  -[BookmarksTableViewController tableView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[BookmarksTableViewController setCollection:]
  -[BookmarksTableViewController collection]
  -[BookmarksTableViewController setFolder:]
  -[BookmarksTableViewController numberOfSectionsInTableView:]
  -[BookmarksTableViewController setEditing:animated:]
  -[BookmarksTableViewController _updateTitle]
  -[BookmarksTableViewController tableView:previewForDismissingContextMenuWithConfiguration:]
  -[BookmarksTableViewController tableView:previewForHighlightingContextMenuWithConfiguration:]
  -[BookmarksTableViewController tableView:numberOfRowsInSection:]
  -[BookmarksTableViewController .cxx_destruct]
  -[BookmarksTableViewController tableView:willSelectRowAtIndexPath:]
  -[BookmarksTableViewController tableView:shouldSpringLoadRowAtIndexPath:withContext:]
  -[BookmarksTableViewController tableView:didSelectRowAtIndexPath:]
  -[BookmarksTableViewController viewDidLoad]
  -[BookmarksTableViewController _updateContentOffsetIfNeeded]
  -[BookmarksTableViewController tableView:cellForRowAtIndexPath:]
  -[BookmarksTableViewController setDelegate:]
  -[BookmarksTableViewController viewDidAppear:]
  -[BookmarksTableViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[BookmarksTableViewController deleteBookmark:userInfo:]
  -[BookmarksTableViewController willMoveToParentViewController:]
  -[BookmarksTableViewController tableView:moveRowAtIndexPath:toIndexPath:]
  -[BookmarksTableViewController scrollViewDidChangeAdjustedContentInset:]
  -[BookmarksTableViewController searchBarSearchButtonClicked:]
  -[BookmarksTableViewController setLinkPreviewProvider:]
  -[BookmarksTableViewController viewWillDisappear:]
  -[BookmarksTableViewController folder]
  -[BookmarksTableViewController viewDidLayoutSubviews]
  -[BookmarksTableViewController viewWillAppear:]
  -[BookmarksTableViewController tableView:canMoveRowAtIndexPath:]
  -[BookmarksTableViewController currentStateDictionary]
  -[BookmarksTableViewController delegate]
  -[BookmarksTableViewController navigationIntentHandler]
  -[BookmarksTableViewController bookmarksNavigationController]
  -[BookmarksTableViewController editBookmark:userInfo:]
  -[BookmarksTableViewController tableView:editingStyleForRowAtIndexPath:]
  -[BookmarksTableViewController tableView:canFocusRowAtIndexPath:]
  -[BookmarksTableViewController loadView]
  -[BookmarksTableViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[BookmarksTableViewController bookmark:didProduceNavigationIntent:userInfo:]
  -[BookmarksTableViewController searchBar:textDidChange:]
  -[BookmarksTableViewController _tableView:dataOwnerForDragSession:atIndexPath:]
  -[BookmarksTableViewController tableView:itemsForAddingToDragSession:atIndexPath:point:]
  -[BookmarksTableViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[BookmarksTableViewController _tableView:dataOwnerForDropSession:withDestinationIndexPath:]
  -[BookmarksTableViewController tableView:canHandleDropSession:]
  -[BookmarksTableViewController tableView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[BookmarksTableViewController tableView:performDropWithCoordinator:]
  -[BookmarksTableViewController updateUserActivityState:]
  -[BookmarksTableViewController folderID]
  -[BookmarksTableViewController linkPreviewProvider]
  -[BookmarksTableViewController setPreviewing:]
  -[BookmarksTableViewController updateSeparatorInset]
  -[BookmarksTableViewController bookmarkInfoViewControllerShouldUseTranslucentAppearance:]
  -[BookmarksTableViewController hasTranslucentAppearance]
  -[BookmarksTableViewController safari_wantsDoneButtonInModalBookmarksPanel]
  -[BookmarksTableViewController minimumNumberOfRows]
  -[BookmarksTableViewController reloadBookmarks]
  -[BookmarksTableViewController initWithFolder:inCollection:skipOffset:]
  -[BookmarksTableViewController restoreStateWithDictionary:]
  -[BookmarksTableViewController _recreateBookmarkLists]
  -[BookmarksTableViewController _inRootFolder]
  -[BookmarksTableViewController bookmarksTableViewCellWithReuseIdentifier:]
  -[BookmarksTableViewController _fontForCurrentTraitCollection]
  -[BookmarksTableViewController _bookmarkAtIndexPath:]
  -[BookmarksTableViewController _tableViewCellForBookmark:]
  -[BookmarksTableViewController initWithFolder:inCollection:]
  -[BookmarksTableViewController _pushInfoViewControllerForBookmark:]
  -[BookmarksTableViewController _newViewControllerForFolder:]
  -[BookmarksTableViewController _updateTableViewCellsTextStyleForEditing:]
  -[BookmarksTableViewController _deleteBookmark:atIndexPath:]
  -[BookmarksTableViewController _dragItemsAtIndexPath:includingFolders:]
  -[BookmarksTableViewController _moveBookmarks:toFolderID:toIndex:shouldReorder:isAddingBookmark:]
  -[BookmarksTableViewController setScrollViewScrollsToTop:]
  -[BookmarksTableViewController selectedBookmarks]
  -[BookmarksTableViewController safari_tableViewScrollPositionSaveIdentifier]


WallpaperImageView : UIImageView
  // instance methods
  -[WallpaperImageView willMoveToWindow:]
  -[WallpaperImageView _rootViewControllerDidTransitionSize:]
  -[WallpaperImageView _updateWallpaperImageAnchorAnimationForWindow:]


QuickWebsiteSearchQuery : NSObject
 @property  NSString *websiteNamePrefix
 @property  NSString *searchTerms

  // instance methods
  -[QuickWebsiteSearchQuery searchTerms]
  -[QuickWebsiteSearchQuery .cxx_destruct]
  -[QuickWebsiteSearchQuery initWithUserEnteredString:]
  -[QuickWebsiteSearchQuery websiteNamePrefix]


TranslationActivity : TabDocumentActivity
 @property  WBSTranslationContext *translationContext

  // class methods
  +[TranslationActivity allTranslationActivities]

  // instance methods
  -[TranslationActivity _systemImageName]
  -[TranslationActivity activityType]
  -[TranslationActivity translationContext]
  -[TranslationActivity activityTitleWithTranslationContext:]
  -[TranslationActivity canPerformWithTranslationContext:]
  -[TranslationActivity prepareWithTranslationContext:]
  -[TranslationActivity performActivityWithTranslationContext:]
  -[TranslationActivity activityTitleWithTabDocument:]
  -[TranslationActivity canPerformWithTabDocument:]
  -[TranslationActivity prepareWithTabDocument:]
  -[TranslationActivity performActivityWithTabDocument:]


ExitTranslationActivity : TranslationActivity
  // instance methods
  -[ExitTranslationActivity actionType]
  -[ExitTranslationActivity activityTitle]
  -[ExitTranslationActivity canPerformWithTranslationContext:]
  -[ExitTranslationActivity performActivityWithTranslationContext:]


TranslationToAutoLocaleActivity : TranslationActivity
  // instance methods
  -[TranslationToAutoLocaleActivity actionType]
  -[TranslationToAutoLocaleActivity activityTitleWithTranslationContext:]
  -[TranslationToAutoLocaleActivity canPerformWithTranslationContext:]
  -[TranslationToAutoLocaleActivity performActivityWithTranslationContext:]


TranslationToChosenLocaleActivity : TranslationActivity <_SFTranslationTargetLocaleAlertControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TranslationToChosenLocaleActivity activityViewController]
  -[TranslationToChosenLocaleActivity .cxx_destruct]
  -[TranslationToChosenLocaleActivity actionType]
  -[TranslationToChosenLocaleActivity activityTitle]
  -[TranslationToChosenLocaleActivity translationAlertController:didSelectLocale:]
  -[TranslationToChosenLocaleActivity translationAlertControllerShouldDismissAfterSelection:]
  -[TranslationToChosenLocaleActivity translationAlertController:validateTargetLocale:completionHandler:]
  -[TranslationToChosenLocaleActivity canPerformWithTranslationContext:]
  -[TranslationToChosenLocaleActivity prepareWithTranslationContext:]


TranslationFeedbackActivity : TranslationActivity
  // instance methods
  -[TranslationFeedbackActivity _systemImageName]
  -[TranslationFeedbackActivity actionType]
  -[TranslationFeedbackActivity activityTitle]
  -[TranslationFeedbackActivity canPerformWithTranslationContext:]
  -[TranslationFeedbackActivity performActivityWithTranslationContext:]


TranslationRadarActivity : TranslationActivity
  // instance methods
  -[TranslationRadarActivity _systemImageName]
  -[TranslationRadarActivity actionType]
  -[TranslationRadarActivity activityTitle]
  -[TranslationRadarActivity canPerformWithTranslationContext:]
  -[TranslationRadarActivity performActivityWithTranslationContext:]


ContinuousReadingController : NSObject
 @property  BOOL unreadReadingListItemsOnly

  // instance methods
  -[ContinuousReadingController .cxx_destruct]
  -[ContinuousReadingController dealloc]
  -[ContinuousReadingController _tabDocument]
  -[ContinuousReadingController _clearCachedItems]
  -[ContinuousReadingController _updateCachedItemsIfNeeded]
  -[ContinuousReadingController _itemAtIndex:inReadingList:]
  -[ContinuousReadingController initWithTabController:]
  -[ContinuousReadingController currentReadingListItem]
  -[ContinuousReadingController nextReadingListItem]
  -[ContinuousReadingController previousReadingListItem]
  -[ContinuousReadingController unreadReadingListItemsOnly]
  -[ContinuousReadingController setUnreadReadingListItemsOnly:]


MainLibrarySectionController : LibrarySectionController
  // instance methods
  -[MainLibrarySectionController .cxx_destruct]
  -[MainLibrarySectionController title]
  -[MainLibrarySectionController initWithConfiguration:]
  -[MainLibrarySectionController itemControllers]
  -[MainLibrarySectionController updateToolbarIfNeeded]
  -[MainLibrarySectionController registerItemsWithRegistration:]


BrowserController : SFBrowserController <SFOverlayProviderDelegate, ActionPanelDelegate, AddBookmarkActivityDelegate, BookmarksBarViewDelegate, BookmarksNavigationControllerDelegate, BrowserRootViewControllerDelegate, CatalogViewControllerDelegate, ContinuousReadingViewControllerDelegate, DownloadOpenHandler, LinkPreviewProvider, QLPreviewControllerDelegate, SFBrowserControllerProxy, SKStoreProductViewControllerDelegate, TabControllerDocumentObserving, TabOverviewPresentationObserving, TabSnapshotGeneratorDelegate, UIGestureRecognizerDelegatePrivate, UIScreenshotServiceDelegate, UIScrollViewDelegate, UITextFieldDelegate, WBSDigitalHealthManagerDelegate, _SFBarManagerDelegate, _SFDigitalHealthViewControllerDelegate, _SFDynamicBarAnimatorDelegate, _SFMailContentProviderDataSource, _SFSaveToFilesOperationDelegate, _SFSingleBookmarkNavigationControllerDelegate, TabBarManagerObserving, WBSWebExtensionCommandHandling, LibraryItemOpenHandler, WBSUnifiedBarAnalyticsProviding, TabGroupAlertControllerDelegate, CompletionDetailViewControllerDelegate, SFBrowserKeyCommandSafariMethods, StartPageDataSource, TabDocumentDelegate, UIWindowSceneDelegate, _SFBrowserContentController, _SFNavigationBarDelegate, _SFNavigationIntentHandling>
 @property  BOOL privateBrowsingEnabled
 @property  _SFWebView *webView
 @property  BrowserRootViewController *rootViewController
 @property  TabController *tabController
 @property  BrowserWindowController *browserWindowController
 @property  NSUUID *UUID
 @property  _SFBrowserWindowStateData *windowStateData
 @property  WBSavedStateManager *savedStateManager
 @property  WBWindowState *windowState
 @property  BOOL readerViewStale
 @property  BOOL readerShouldBeShownIfPossible
 @property  TabDocument *previousContinuousItemDocument
 @property  TabDocument *nextContinuousItemDocument
 @property  TabDocument *cachedDocumentOnContinuousTransition
 @property  ContinuousReadingController *continuousReadingController
 @property  BOOL interfaceFillsScreen
 @property  BOOL fullScreenInPortrait
 @property  double lastInteractionTime
 @property  BOOL canPerformPostLaunchActions
 @property  BOOL usesNarrowLayout
 @property  BOOL usesTabBar
 @property  long long analyticsLayoutProvenance
 @property  BOOL usesCompactUnifiedBar
 @property  BOOL shouldUseCompactUnifiedBar
 @property  long long tabBarDisplayMode
 @property  long long overrideBarTintStyleForUnifiedBar
 @property  BOOL showingCrashBanner
 @property  BookmarksNavigationController *bookmarksNavigationController
 @property  NSString *currentBookmarksCollection
 @property  BOOL showingCompletionDetail
 @property  BOOL showingCompletionListCompletions
 @property  BOOL suspendedOrSuspending
 @property  UIViewController *viewControllerToPresentFrom
 @property  float zoomScale
 @property  _SFBrowserSavedState *savedState
 @property  BOOL avoidSnapshotOfActiveTabIfPossible
 @property  BOOL shouldSnapshotActiveTab
 @property  BOOL privateBrowsingAvailable
 @property  BOOL controlledByAutomation
 @property  _SFBrowserConfiguration *configuration
 @property  UIPinchGestureRecognizer *tabViewPinchRecognizer
 @property  BOOL tabViewPinchActive
 @property  BOOL wantsUnifiedFieldFocused
 @property  BOOL shouldKeepKeyboardFocused
 @property  long long favoritesState
 @property  BOOL showingFavorites
 @property  BOOL favoritesAreEmbedded
 @property  BOOL favoritesFieldFocused
 @property  BOOL favoritesFieldShouldBeExpanded
 @property  BOOL favoritesAreShowingInPopover
 @property  _SFBarManager *barManager
 @property  BOOL shouldUseClassicTabOverview
 @property  WKProcessPool *processPool
 @property  WKPreferences *wkPreferences
 @property  BOOL canFocusNavigationBarURL
 @property  SKStoreProductViewController *presentedStoreProductViewController
 @property  UITextRange *textRangeToRestoreAfterParsecCardDismissal
 @property  _SFActivityViewController *presentedActivityViewController
 @property  NSString *searchCountKey
 @property  long long idOfParsecQueryOriginatingFromSearchSuggestion
 @property  BOOL presentingModalBookmarksController
 @property  <LoadProgressObserver> *loadProgressObserver
 @property  WBSDigitalHealthManager *digitalHealthManager
 @property  TabDocument *tabDocumentPlayingPIPVideo
 @property  BOOL isShowingInOneThirdMode
 @property  UserActivityController *userActivityController
 @property  ApplicationShortcutController *shortcutController
 @property  UIWindowScene *scene
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} webExtensionWindowGeometry
 @property  {CGSize=dd} webExtensionTabSize
 @property  <WBSWebExtensionWindow> *activeWebExtensionWindow
 @property  BOOL activeWebExtensionWindowIsFocused
 @property  NSArray *webExtensionWindows
 @property  NSArray *tabDocumentsForActiveTabThatCanReceiveMessages
 @property  LibraryController *libraryController
 @property  BOOL showingAppInfoOverlay
 @property  BOOL overridesUndoManagerForClosedTabs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <TabGroupProvider> *tabGroupProvider
 @property  BOOL canCreateNewBookmark
 @property  BOOL readerAvailable
 @property  BOOL showingReader
 @property  BOOL canCreateNewTab
 @property  BOOL canCloseTab
 @property  BOOL customTabGroupsEnabled
 @property  NSString *activeLibraryType
 @property  BOOL shouldReportUnifiedTabBarAnalytics
 @property  long long unifiedTabBarLayoutStyle
 @property  unsigned long numberOfTabsInCurrentTabBar
 @property  BOOL tabBarIsCurrentlyScrollable
 @property  BOOL tabsShowOnlyIcons
 @property  BOOL backgroundColorInTabBarEnabled
 @property  UIWindow *window
 @property  <_SFBrowserDocument> *activeDocument
 @property  BOOL keepBarsMinimized
 @property  BOOL hasUnviewedDownloads
 @property  unsigned long downloadsCount
 @property  <WBSWebExtensionTab> *activeTabForExtensions
 @property  BOOL hasDedicatedExtensionsButton
 @property  _SFPerSitePreferencesVendor *perSitePreferencesVendor
 @property  _SFPageZoomPreferenceManager *pageZoomManager
 @property  BOOL supportsPrivacyReport
 @property  BOOL hasDedicatedMediaStateButton
 @property  BOOL hasDedicatedDownloadsToolbarItem

  // class methods
  +[BrowserController sharedProcessPool]

  // instance methods
  -[BrowserController savedStateManager]
  -[BrowserController perSitePreferencesVendor]
  -[BrowserController tabCollectionViewDidDismiss:]
  -[BrowserController tabDocumentDidChangeMediaState:]
  -[BrowserController canHideBars]
  -[BrowserController _initSubviews]
  -[BrowserController tabDocumentCanCloseWindow:]
  -[BrowserController updateTabGroupButtonsVisibility]
  -[BrowserController canCloseTab]
  -[BrowserController webExtensionWindowWithID:]
  -[BrowserController previousFindResultKeyPressed]
  -[BrowserController toggleBookmarksKeyPressed]
  -[BrowserController goForward]
  -[BrowserController shouldUseClassicTabOverview]
  -[BrowserController share:]
  -[BrowserController toggleTabView]
  -[BrowserController isShowingAppInfoOverlay]
  -[BrowserController tabDocumentDidChangeSafeAreaInsets:]
  -[BrowserController validateExtensionToolbarItemsInWindow:]
  -[BrowserController findKeyPressed]
  -[BrowserController shouldSnapshotActiveTab]
  -[BrowserController isPrivateBrowsingAvailable]
  -[BrowserController barManager]
  -[BrowserController toggleTabViewKeyPressed]
  -[BrowserController didBecomeActive]
  -[BrowserController tabItem:matchesSearchText:]
  -[BrowserController tabDocumentFluidProgressRocketAnimationDidComplete:]
  -[BrowserController linkPreviewViewControllerForURL:]
  -[BrowserController navigationBarStopLoadingButtonWasTapped:]
  -[BrowserController tabOverviewWillShiftScrollPositionForBoundsChange:]
  -[BrowserController isShowingFavorites]
  -[BrowserController dynamicBarAnimatorStateDidChange:]
  -[BrowserController loadURL:]
  -[BrowserController closeAllTabs:]
  -[BrowserController tabGroupProvider]
  -[BrowserController navigateBackKeyPressed]
  -[BrowserController pageZoomManager]
  -[BrowserController reloadKeyPressed]
  -[BrowserController showTabView]
  -[BrowserController usesTabBar]
  -[BrowserController switchFromTabDocument:toTabDocument:]
  -[BrowserController updateSearchEngineIfNeeded]
  -[BrowserController shouldDeferHistoryUpdatesForWKWebView:]
  -[BrowserController nextTabKeyPressed:]
  -[BrowserController setNeedsSnapshotUpdateForActiveTab]
  -[BrowserController showHistoryCollectionKeyPressed]
  -[BrowserController sidebarTrailingButtonWasTapped]
  -[BrowserController setProgressEnabled:]
  -[BrowserController shortcutController]
  -[BrowserController webViewForMailContentProvider:]
  -[BrowserController keepBarsMinimized]
  -[BrowserController supportsPrivacyReport]
  -[BrowserController nextResponder]
  -[BrowserController previousContinuousItemDocument]
  -[BrowserController tabDocumentCanBecomeCurrentUserActivity:]
  -[BrowserController tabDocumentCommitPreviewedDocumentAsNewTab:inBackground:]
  -[BrowserController libraryController]
  -[BrowserController activeDocument]
  -[BrowserController usesNarrowLayout]
  -[BrowserController verticalScrollOffsetForReaderViewInTabDocument:]
  -[BrowserController overlayDidHide:]
  -[BrowserController userActivityController]
  -[BrowserController tabDocumentsForActiveTabThatCanReceiveMessages]
  -[BrowserController isReaderAvailable]
  -[BrowserController showBars]
  -[BrowserController pasteAndGo:]
  -[BrowserController windowState]
  -[BrowserController toggleVoiceSearch]
  -[BrowserController openNewWindow:]
  -[BrowserController _bookmarksDidReload:]
  -[BrowserController tabDocumentDidCommitNavigation:]
  -[BrowserController loadProgressObserver]
  -[BrowserController presentModalViewController:completion:]
  -[BrowserController updateSearchEngine]
  -[BrowserController tabDocumentSavedSessionStateData:]
  -[BrowserController shouldKeepKeyboardFocused]
  -[BrowserController interfaceFillsScreen]
  -[BrowserController processPool]
  -[BrowserController presentedStoreProductViewController]
  -[BrowserController validateCommand:]
  -[BrowserController webView]
  -[BrowserController tabCollectionViewWillPresent:]
  -[BrowserController scrollViewWillBeginZooming:withView:]
  -[BrowserController didEnterBackground]
  -[BrowserController clearParsecQueryOriginatingFromSearchSuggestion]
  -[BrowserController sceneDidEnterBackground:]
  -[BrowserController openDownload:]
  -[BrowserController sceneDidDisconnect:]
  -[BrowserController tabDocumentDidUpdateURL:]
  -[BrowserController addReadingListBookmarkForCurrentTab]
  -[BrowserController goBack]
  -[BrowserController tabCollectionViewDidPresent:]
  -[BrowserController previewControllerDidDismiss:]
  -[BrowserController dynamicBarAnimatorOutputsDidChange:]
  -[BrowserController setKeepBarsMinimized:]
  -[BrowserController showCrashBanner:animated:]
  -[BrowserController tabDocumentDidChangeSafeAreaShouldAffectObscuredInsets:]
  -[BrowserController updateInternalPreferences]
  -[BrowserController willEnterForeground]
  -[BrowserController tabCollectionViewWillDismiss:]
  -[BrowserController loadURLInNewTab:inBackground:animated:]
  -[BrowserController productViewControllerDidFinish:]
  -[BrowserController catalogViewControllerPopoverWidth:]
  -[BrowserController setPrivateBrowsingEnabled:]
  -[BrowserController scene:willConnectToSession:options:]
  -[BrowserController _didChangeToFirstResponder:]
  -[BrowserController navigationBarDidLayoutSubviews:]
  -[BrowserController sceneWillEnterForeground:]
  -[BrowserController continuousReadingViewControllerWillCommitToLoadNextItem:]
  -[BrowserController isControlledByAutomation]
  -[BrowserController tabDocumentWillDisableLinkPreview]
  -[BrowserController overrideBarTintStyleForUnifiedBar]
  -[BrowserController increaseSize:]
  -[BrowserController setZoomScale:]
  -[BrowserController barManager:canHandleLongPressForBarItem:]
  -[BrowserController openNewPrivateWindow:]
  -[BrowserController sceneWillResignActive:]
  -[BrowserController UUID]
  -[BrowserController _handleKeyUIEvent:]
  -[BrowserController sceneDidBecomeActive:]
  -[BrowserController clearBadgeOnPageFormatMenu]
  -[BrowserController setNeedsSnapshotUpdateForActiveTabIfTabIsBlank]
  -[BrowserController dataOwnerForNavigationBar:]
  -[BrowserController unifiedTabBarActiveTabWasTapped]
  -[BrowserController catalogViewControllerWillUnfocusUnifiedField:]
  -[BrowserController restoreInterfaceAfterElementFullscreen]
  -[BrowserController tabDocument:didFinishLoadingWithError:]
  -[BrowserController rootViewController]
  -[BrowserController topBarsHeightForSnapshotGenerator:]
  -[BrowserController initWithUUID:sceneID:browserWindowController:controlledByAutomation:]
  -[BrowserController hasUnviewedDownloads]
  -[BrowserController shouldReportUnifiedTabBarAnalytics]
  -[BrowserController catalogViewControllerDidScroll:animated:]
  -[BrowserController catalogViewControllerShouldSuppressPopover:]
  -[BrowserController setNextContinuousItemDocument:]
  -[BrowserController tabController]
  -[BrowserController _perSitePageZoomPreferenceDidChange:]
  -[BrowserController undoManager]
  -[BrowserController catalogViewController:loadURL:inExternalApplication:]
  -[BrowserController bookmarksBarView:bookmarksNavigationControllerViewDidDisappear:]
  -[BrowserController continuousReadingViewControllerNextWebViewLandingOffset:includeBottomBar:]
  -[BrowserController currentBookmarksCollection]
  -[BrowserController barManager:didReceiveTouchDownForBarItem:]
  -[BrowserController decreaseSize:]
  -[BrowserController _bookmarksPresentationStyle]
  -[BrowserController reinsertBorrowedContentViewForTab:]
  -[BrowserController catalogViewControllerStartPageVisualStyleProvider:]
  -[BrowserController initWithStateData:browserWindowController:savedState:controlledByAutomation:]
  -[BrowserController _presentModalViewController:fromBarItem:completion:]
  -[BrowserController showDemoModeFeatureDisabledAlert]
  -[BrowserController _keyboardWillHide:]
  -[BrowserController tabDocumentCanDisplayModalUI:]
  -[BrowserController navigationBarCancelButtonWasTapped:]
  -[BrowserController previousTabKeyPressed:]
  -[BrowserController _keyboardWillShow:]
  -[BrowserController isShowingReader]
  -[BrowserController zoomScale]
  -[BrowserController isPresentingModalBookmarksController]
  -[BrowserController autoFillFormKeyPressed]
  -[BrowserController setFavoritesAreEmbedded:animated:]
  -[BrowserController activeWebExtensionWindowIsFocused]
  -[BrowserController usesCompactUnifiedBar]
  -[BrowserController userDefaultsDidChangeValueForKey:]
  -[BrowserController browserViewController:toolbarPlacementForViewSize:]
  -[BrowserController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[BrowserController updateButtonBarContentsAnimated:]
  -[BrowserController configuration]
  -[BrowserController scene:willContinueUserActivityWithType:]
  -[BrowserController navigateForwardKeyPressed]
  -[BrowserController emptySelectorForOpenInNewTabModifierLinkTap]
  -[BrowserController windowStateData]
  -[BrowserController endIgnoringUserInteraction:]
  -[BrowserController tabDocumentDidUpdateThemeColor:]
  -[BrowserController isShowingInOneThirdMode]
  -[BrowserController bookmarksNavigationController:tabItem:matchesSearchText:]
  -[BrowserController bookmarksNavigationControllerReloadDidFail:]
  -[BrowserController updateWebKitExperimentalFeatures]
  -[BrowserController avoidSnapshotOfActiveTabIfPossible]
  -[BrowserController dynamicBarAnimatorWillEnterSteadyState:]
  -[BrowserController browserViewController:didChangeSidebarStyle:]
  -[BrowserController downloadsViewControllerForActionPanel:]
  -[BrowserController updateAppBannerFrame]
  -[BrowserController closeActiveTab:]
  -[BrowserController navigationBarMetricsDidChange:]
  -[BrowserController navigationBarMinimizationChanged]
  -[BrowserController reopenLastClosedTabPressed]
  -[BrowserController scene:openURLContexts:]
  -[BrowserController saveToFilesOperationSupportsDownloads:]
  -[BrowserController browserViewController:didCreateNavigationBar:]
  -[BrowserController canFocusNavigationBarURL]
  -[BrowserController _defaultSearchEngineDidChange:]
  -[BrowserController .cxx_destruct]
  -[BrowserController commitLinkPreviewViewController:]
  -[BrowserController scene]
  -[BrowserController browserViewController:adjustedTopObscuredInsetForBanners:]
  -[BrowserController makeSpaceForTabWithPrivateBrowsing:resultHandler:]
  -[BrowserController scrollViewDidEndScrollingAnimation:]
  -[BrowserController browserViewController:traitCollectionDidChange:]
  -[BrowserController navigationBarVoiceSearchButtonWasTapped:]
  -[BrowserController navigationBarURLWasTapped:completionHandler:]
  -[BrowserController toggleShowingFavoritesBarKeyPressed]
  -[BrowserController favoritesAreShowingInPopover]
  -[BrowserController rootViewControllerViewTransitionFromSize:includingSidebar:animated:]
  -[BrowserController setCanFocusNavigationBarURL:]
  -[BrowserController setTextRangeToRestoreAfterParsecCardDismissal:]
  -[BrowserController tabDocument:didCreatePreviewDocument:]
  -[BrowserController tabDocumentDidUpdateBackForward:]
  -[BrowserController clearReaderViews]
  -[BrowserController tabDocumentCanShowJavaScriptAlertConfirmOrTextInput:]
  -[BrowserController isFavoritesFieldFocused]
  -[BrowserController markReadingListBookmark:asRead:postNotification:]
  -[BrowserController isPrivateBrowsingEnabled]
  -[BrowserController loadURLInNewTab:inBackground:]
  -[BrowserController sidebarContentViewControllerForBrowserViewController:]
  -[BrowserController loadURLInNewTab:title:UUID:inBackground:animated:fromExternalApplication:restoringCloudTab:]
  -[BrowserController _parsecABGroupIdentifierDidChange:]
  -[BrowserController tabDocumentIsBackgroundPreloading:]
  -[BrowserController updateContinuousPreviewViewFrame]
  -[BrowserController bookmarksNavigationControllerIsPresentedInsideBlankTab:]
  -[BrowserController dynamicBarAnimator:canTransitionToState:byDraggingWithOffset:]
  -[BrowserController webExtensionsButtonTapped:]
  -[BrowserController canBecomeFirstResponder]
  -[BrowserController catalogViewControllerShouldRequestSuggestions:]
  -[BrowserController setFavoritesFieldFocused:forVoiceSearch:animated:completionHandler:]
  -[BrowserController setShouldKeepKeyboardFocused:]
  -[BrowserController continuousReadingViewControllerCommitToLoadPreviousItem:]
  -[BrowserController tabDocumentOrderIndex:]
  -[BrowserController scrollViewDidScrollToTop:]
  -[BrowserController linkPreviewProviderWillDismissPreview]
  -[BrowserController pageZoomPreferenceManagerForTabDocument:]
  -[BrowserController saveWebpageAlternativeKeyPressed]
  -[BrowserController isShowingCompletionListCompletions]
  -[BrowserController updateTabViewPinchRecognizer]
  -[BrowserController textRangeToRestoreAfterParsecCardDismissal]
  -[BrowserController scene:didFailToContinueUserActivityWithType:error:]
  -[BrowserController setCurrentBookmarksCollection:]
  -[BrowserController setScrollViewZoomEnabled:]
  -[BrowserController removeAppBannerFromTabDocument:animated:]
  -[BrowserController tabDocument:didChangePIPState:]
  -[BrowserController numberOfTabsInCurrentTabBar]
  -[BrowserController setFavoritesState:forVoiceSearch:animated:completionHandler:]
  -[BrowserController beginTrackingDropSessionForTabBarVisibility:]
  -[BrowserController becomeFirstResponder]
  -[BrowserController navigationBar:didProduceNavigationIntent:]
  -[BrowserController activeTabForExtensions]
  -[BrowserController actionPanelAddTabDocumentToReadingList:completion:]
  -[BrowserController switchToTabWithUUID:inWindowWithUUID:]
  -[BrowserController updateFavoritesForNewDocument]
  -[BrowserController setWantsUnifiedFieldFocused:]
  -[BrowserController statusBarHeightChanged]
  -[BrowserController hasDedicatedMediaStateButton]
  -[BrowserController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[BrowserController _downloadManagerDidFinishLastDownload:]
  -[BrowserController loadCloudTabsForDeviceRestoration:]
  -[BrowserController catalogViewController:didPasteText:]
  -[BrowserController setLastInteractionTime:]
  -[BrowserController document:willMakeReaderVisible:]
  -[BrowserController scrollViewDidEndZooming:withView:atScale:]
  -[BrowserController invalidateSourceApplication]
  -[BrowserController navigationBarTranslateButtonWasTappedWithSourceInfo:]
  -[BrowserController tabViewPinchActive]
  -[BrowserController tabsShowOnlyIcons]
  -[BrowserController browserViewControllerDidLayOutSubviews:]
  -[BrowserController clearContinuousItemDocuments]
  -[BrowserController addToReadingList:]
  -[BrowserController previewController:transitionViewForPreviewItem:]
  -[BrowserController setUpWithURL:launchOptions:]
  -[BrowserController currentContentUUIDForNavigationBar:]
  -[BrowserController tabDocumentShouldHandleCertificateError:]
  -[BrowserController takeFindStringKeyPressed]
  -[BrowserController tabDocumentShouldCloseAndSwitchToParentTab:]
  -[BrowserController _automaticPasswordInputViewNotification:]
  -[BrowserController tabController:didSwitchFromTabDocument:toTabDocument:]
  -[BrowserController updatePopoverPositionAfterSizeTransition]
  -[BrowserController fraudWarningsToggled]
  -[BrowserController areCustomTabGroupsEnabled]
  -[BrowserController catalogViewControllerDidBeginEditing:]
  -[BrowserController willResignActive]
  -[BrowserController dismissTransientUIAnimated:]
  -[BrowserController setShowingReader:animated:forTabDocument:]
  -[BrowserController focusAddressFieldKeyPressed]
  -[BrowserController addToBookmarks:]
  -[BrowserController readerShouldBeShownIfPossible]
  -[BrowserController setTabDocumentPlayingPIPVideo:]
  -[BrowserController scrollViewDidEndDragging:willDecelerate:]
  -[BrowserController windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:]
  -[BrowserController setAppBannerPinnedToTop:forTabDocument:]
  -[BrowserController catalogViewControllerPopoverWillDismiss:dismissalReason:]
  -[BrowserController hasDedicatedExtensionsButton]
  -[BrowserController autoFillStateChangedMessageReceived]
  -[BrowserController _showTabGroupPicker:]
  -[BrowserController bookmarksNavigationControllerDidPressDoneButton:]
  -[BrowserController dispatchNavigationIntent:]
  -[BrowserController browserViewControllerInterfaceFillsScreen:]
  -[BrowserController catalogViewControllerPresentingInPortraitAspectRatio:]
  -[BrowserController closeOtherTabsKeyPressed]
  -[BrowserController idOfParsecQueryOriginatingFromSearchSuggestion]
  -[BrowserController activeWebExtensionWindow]
  -[BrowserController showBookmarksPanelWithNonAnimatedTransition]
  -[BrowserController continuousReadingViewController:didCommitToLoadItem:]
  -[BrowserController _downloadsDidChange:]
  -[BrowserController _parsecBagDidLoad:]
  -[BrowserController resetPageZoomLevelAndFontSize]
  -[BrowserController activityViewControllerSupportsDownloads:]
  -[BrowserController scrollViewDidScroll:]
  -[BrowserController tabDocumentCanBeginInputSessionForStreamlinedLogin:]
  -[BrowserController tabDocumentDidChangeLocationWithinPageForMainFrame:]
  -[BrowserController favoritesState]
  -[BrowserController screenshotService:generatePDFRepresentationWithCompletion:]
  -[BrowserController catalogViewController:willRepositionPopoverToRect:inView:]
  -[BrowserController continuousReadingViewController:scrollViewDidScroll:]
  -[BrowserController focusAddressFieldAlternativeKeyPressed]
  -[BrowserController reloadSidebarAnimated:]
  -[BrowserController setFavoritesState:animated:]
  -[BrowserController switchToTabKeyPressed:]
  -[BrowserController endTrackingDropSessionForTabBarVisibility:]
  -[BrowserController clearDocumentForContinuousReading:]
  -[BrowserController navigationBarFormatMenuButtonBecameUnavailable:]
  -[BrowserController catalogViewController:didSelectSearch:]
  -[BrowserController browserViewController:didCreateUnifiedBar:]
  -[BrowserController barManager:didReceiveLongPressForBarItem:]
  -[BrowserController setShowingCrashBanner:animated:]
  -[BrowserController shouldIncreaseTopSpacingForStartPageController:]
  -[BrowserController updateScrollToTopView]
  -[BrowserController webExtensionWindowForTabDocument:]
  -[BrowserController canCreateNewTab]
  -[BrowserController newTabGroupKeyPressed]
  -[BrowserController animateLinkImage:fromRect:inView:toBarItem:]
  -[BrowserController activeLibraryType]
  -[BrowserController _perSitePreferencesDidChange:]
  -[BrowserController popUpPolicyForTabDocument:]
  -[BrowserController readerControllerForMailContentProvider:]
  -[BrowserController saveToFilesOperation:presentViewController:]
  -[BrowserController linkPreviewViewControllerForNavigationIntent:]
  -[BrowserController updateShowingSidebarForLoad]
  -[BrowserController browserViewControllerDidChangeToolbarPlacement:]
  -[BrowserController webExtensionTabSize]
  -[BrowserController handleNavigationIntent:completion:]
  -[BrowserController webViewDidFirstVisuallyNonEmptyLayoutForTabDocument:]
  -[BrowserController createAndAddToHomeScreenBundleForWebClip:]
  -[BrowserController previewController:shouldOpenURL:forPreviewItem:]
  -[BrowserController updateExposedScrollViewRect]
  -[BrowserController isShowingCompletionDetail]
  -[BrowserController toggleShowingReaderForUserAction]
  -[BrowserController tabDocumentDidEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[BrowserController _hasUnviewedDownloadsDidChange:]
  -[BrowserController navigationBarDidUpdateBackdropEffect:]
  -[BrowserController browserWindowController]
  -[BrowserController tabBarManager:didCreateTabBar:]
  -[BrowserController browserViewController:didChangeShowingSidebar:]
  -[BrowserController initWithWindowState:browserWindowController:controlledByAutomation:]
  -[BrowserController addBookmarkNavControllerCanSaveBookmarkChanges:]
  -[BrowserController updatePrivateBrowsingAvailability]
  -[BrowserController downloadsCount]
  -[BrowserController showReaderForTabDocument:animated:]
  -[BrowserController clearSpeculativeLoadDocument]
  -[BrowserController _didChangePowerState]
  -[BrowserController toggleBookmarksPresentation]
  -[BrowserController cancelKeyPressed]
  -[BrowserController catalogViewControllerDidSelectFindOnPage:]
  -[BrowserController browserViewController:sidebarStyleForViewSize:]
  -[BrowserController fullScreenInPortrait]
  -[BrowserController openNewPrivateTab:]
  -[BrowserController digitalHealthViewController:didFinishDismissingBlockingViewController:]
  -[BrowserController nextTabGroupKeyPressed]
  -[BrowserController browserViewControllerAdditionalContentHeightForBanners:]
  -[BrowserController barManager:willRegisterBarWithToken:]
  -[BrowserController contentSizeForSnapshotGenerator:]
  -[BrowserController togglePrivateBrowsingEnabled]
  -[BrowserController tabViewPinchRecognizer]
  -[BrowserController _hideCrashBanner]
  -[BrowserController dismissTransientUIAnimated:preserveFavoritesState:]
  -[BrowserController tabDocumentDidUpdatePersistentState:]
  -[BrowserController makeSidebarButton]
  -[BrowserController barManager:visibleBarItemsForLayout:availableItems:]
  -[BrowserController printControllerForContentProvider:]
  -[BrowserController addAllTabsToBookmarks:]
  -[BrowserController initWithWindowState:browserWindowController:]
  -[BrowserController snapshotTabDocument:size:topBackdropHeight:options:completion:]
  -[BrowserController windowScene:performActionForShortcutItem:completionHandler:]
  -[BrowserController scrollSidebarToTopAnimated:]
  -[BrowserController closeTabGroupKeyPressed]
  -[BrowserController pasteAndSearch:]
  -[BrowserController canPerformAction:withSender:]
  -[BrowserController tabDocumentPlayingPIPVideo]
  -[BrowserController mergeAllWindows:]
  -[BrowserController tabDocumentShouldHandleAuthentication:]
  -[BrowserController scrollViewWillBeginDragging:]
  -[BrowserController didCompleteScrolling]
  -[BrowserController isTabGroupActiveForType:uuidString:]
  -[BrowserController tabDocument:dismissViewControllerAnimated:]
  -[BrowserController updateApplePayPreferences]
  -[BrowserController tabControllerDocumentCountDidChange:]
  -[BrowserController dismissCompletionDetail]
  -[BrowserController navigationBarFormatMenuButtonWasTapped:]
  -[BrowserController tabDocumentShouldDeferAppBannerRemoval:]
  -[BrowserController loadURLInNewTab:inBackground:animated:fromExternalApplication:]
  -[BrowserController tabDocumentWillShowInlineDialog:]
  -[BrowserController setPresentedStoreProductViewController:]
  -[BrowserController isReaderViewStale]
  -[BrowserController catalogViewController:presentViewControllerWithinPopover:completionHandler:]
  -[BrowserController emptySelectorForDownloadModifierLinkTap]
  -[BrowserController scrollViewShouldScrollToTop:]
  -[BrowserController navigationBarURLForSharing:]
  -[BrowserController webExtensionWindowGeometry]
  -[BrowserController wkPreferences]
  -[BrowserController didChangeContinuousReadingItemInActiveDocument]
  -[BrowserController savedState]
  -[BrowserController updateShowingTabBarAnimated:]
  -[BrowserController webExtensionButtonTapped:extension:]
  -[BrowserController browserViewController:adjustedBottomObscuredInset:]
  -[BrowserController tabDocumentDidDimissPreviewedDocument:]
  -[BrowserController tabDocumentShouldBecomeActive:]
  -[BrowserController setOverridesUndoManagerForClosedTabs:]
  -[BrowserController prepareToNavigateInTabDocument:]
  -[BrowserController completionDetailViewControllerDidDismiss:]
  -[BrowserController clearCachedTabCompletionData]
  -[BrowserController isContinuousReadingDocument:]
  -[BrowserController updateInsetsForBackgroundWebView:]
  -[BrowserController _tabViewPinch:]
  -[BrowserController isShowingCrashBanner]
  -[BrowserController renameTabGroupKeyPressed]
  -[BrowserController rootViewControllerViewDidTransitionFromSize:animated:]
  -[BrowserController addBookmarkForCurrentTab]
  -[BrowserController catalogViewController:completionItem:wasAcceptedForString:]
  -[BrowserController catalogViewController:cacheSearchQueryID:]
  -[BrowserController searchCountKey]
  -[BrowserController showBookmarksCollectionKeyPressed]
  -[BrowserController showReadingListCollectionKeyPressed]
  -[BrowserController setReaderViewStale:]
  -[BrowserController updatePolicyForStartPageController:]
  -[BrowserController tabDocumentWillEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[BrowserController toggleDownloadsKeyPressed]
  -[BrowserController browserViewController:didCreateToolbar:]
  -[BrowserController tabDocument:didCreateNewTabDocument:]
  -[BrowserController tabDocumentDidUpdateShowingContinuous:]
  -[BrowserController didCancelDismissingTabOverview]
  -[BrowserController toggleAlwaysShowBookmarksBarMessageReceived]
  -[BrowserController presentPrintControllerForTabDocument:frame:initiatedByWebContent:]
  -[BrowserController adoptSceneID:]
  -[BrowserController rootViewControllerViewWillTransitionToSize:]
  -[BrowserController webExtensionKeyCommandPressed:]
  -[BrowserController tabBarDisplayMode]
  -[BrowserController setPresentingModalBookmarksController:withExclusiveCollection:bookmarkUUIDString:animated:]
  -[BrowserController compressedNavigationBarWasTapped:]
  -[BrowserController nextContinuousItemDocument]
  -[BrowserController canCreateNewBookmark]
  -[BrowserController previewController:editingModeForPreviewItem:]
  -[BrowserController tabDocument:presentViewControllerAnimated:]
  -[BrowserController catalogViewControllerDidEndEditing:]
  -[BrowserController addBookmarkActivityCanSaveBookmarkChanges:]
  -[BrowserController setUsesNarrowLayout:]
  -[BrowserController tabDocument:didExtractArticleText:withMetadata:]
  -[BrowserController isAnyPageLoaded]
  -[BrowserController setFavoritesState:animated:completionHandler:]
  -[BrowserController digitalHealthManager]
  -[BrowserController actionPanel:prepareForMailActivityWithMailController:completionHandler:]
  -[BrowserController navigationBarMediaStateMuteButtonWasTapped:]
  -[BrowserController presentedActivityViewController]
  -[BrowserController cancelFavoritesAnimated:]
  -[BrowserController addBookmarkActivityFailedToAcquireBookmarkLock:]
  -[BrowserController continuousReadingViewControllerForBrowserViewController:]
  -[BrowserController setCachedDocumentOnContinuousTransition:]
  -[BrowserController presentPrivacyReport]
  -[BrowserController tabDocumentDidBeginNavigationGesture:]
  -[BrowserController dismissCatalogViewController:]
  -[BrowserController isSuspendedOrSuspending]
  -[BrowserController itemProviderForNavigationBar:]
  -[BrowserController bookmarksNavigationControllerViewDidAppear:]
  -[BrowserController setShowingCrashBanner:]
  -[BrowserController addBookmarkNavController:didFinishWithResult:bookmark:]
  -[BrowserController toggleReaderKeyPressed]
  -[BrowserController newTabAlternativeKeyPressed]
  -[BrowserController emptySelectorForAddLinkToReadingListModifierLinkTap]
  -[BrowserController bookmarksNavigationController]
  -[BrowserController dynamicBarAnimator:minimumTopBarHeightForOffset:]
  -[BrowserController hideReaderForTabDocument:animated:deactivationMode:]
  -[BrowserController setFavoritesFieldFocused:animated:]
  -[BrowserController borrowContentViewForTab:withTopBackdropView:ofHeight:]
  -[BrowserController favoritesAreEmbedded]
  -[BrowserController wantsUnifiedFieldFocused]
  -[BrowserController lastInteractionTime]
  -[BrowserController setReaderShouldBeShownIfPossible:]
  -[BrowserController dealloc]
  -[BrowserController hasDedicatedDownloadsToolbarItem]
  -[BrowserController closeWindow]
  -[BrowserController nextFindResultKeyPressed]
  -[BrowserController navigationBar:multipleExtensionsButtonTapped:]
  -[BrowserController bookmarksNavigationController:editFavoritesGridViewBookmark:]
  -[BrowserController browserPersonaForActivityViewController:]
  -[BrowserController openLibrary:]
  -[BrowserController presentDownloadsViewController]
  -[BrowserController _shouldUseNarrowLayout]
  -[BrowserController bookmarksNavigationControllerCurrentContinuousReadingItem:]
  -[BrowserController readerViewIsVisibleForMailContentProvider:]
  -[BrowserController _perSiteAutomaticReaderActivationPreferenceDidChange:]
  -[BrowserController presentAutomaticTabClosingAlertController]
  -[BrowserController tabDocumentDidCompleteCheckForAppBanner:]
  -[BrowserController catalogViewController:mightSelectCompletionItem:forString:]
  -[BrowserController previousReadingListItemKeyPressed]
  -[BrowserController newTabWithAlternativeOrderingKeyPressed]
  -[BrowserController policyDidChangeForDigitalHealthManager:]
  -[BrowserController setFavoritesState:]
  -[BrowserController showHistoryCollectionAlternativeKeyPressed]
  -[BrowserController _voiceSearchAvailabilityDidChange:]
  -[BrowserController clearHistoryMessageReceived]
  -[BrowserController closeAllTabsMatchingSearch:]
  -[BrowserController browserViewController:didUpdateBannerTheme:]
  -[BrowserController _contentBlockersPerSitePreferenceDidChange:]
  -[BrowserController previousTabGroupKeyPressed]
  -[BrowserController finalObscuredInsetsForScrollView:withVelocity:targetContentOffset:]
  -[BrowserController saveKeyPressed]
  -[BrowserController tabDocument:didDetectReaderAvailability:]
  -[BrowserController shouldUseCompactUnifiedBar]
  -[BrowserController cancelFavorites]
  -[BrowserController tabDocumentDidClearLibraryType:]
  -[BrowserController dismissPageFormatMenu]
  -[BrowserController backgroundColorInTabBarEnabled]
  -[BrowserController attachToScene:]
  -[BrowserController tabDocumentDidUpdateTitle:]
  -[BrowserController showReadingListAutomaticArchiveAlertIfNeededWithCompletion:]
  -[BrowserController analyticsLayoutProvenance]
  -[BrowserController viewControllerToPresentFrom]
  -[BrowserController _closePreviewDocumentTimerFired:]
  -[BrowserController navigationBarReloadButtonWasTapped:]
  -[BrowserController switchToTabWithUUID:inWindowWithUUID:forTabGroupWithUUID:]
  -[BrowserController setShowingReader:animated:]
  -[BrowserController tabDocumentCommitPreviewedDocument:]
  -[BrowserController _openPageFormatMenu:]
  -[BrowserController _wantsPriorityOverFocusUpdates]
  -[BrowserController editBookmarksKeyPressed]
  -[BrowserController emptySelectorForOpenInNewTabOppositePreferenceModifierLinkTap]
  -[BrowserController bookmarksNavigationControllerViewDidDisappear:]
  -[BrowserController browserViewControllerShouldTemporarilyHideBottomToolbar:]
  -[BrowserController editBookmark:]
  -[BrowserController emailCurrentPage]
  -[BrowserController getContextForCurrentPageWithCompletionHandler:]
  -[BrowserController didCloseBrowserWindow]
  -[BrowserController closeTabDocument:animated:]
  -[BrowserController willStartLoadFromUserTap:]
  -[BrowserController bookmarksNavigationController:provideContextResponseWithBlock:]
  -[BrowserController setPreviousContinuousItemDocument:]
  -[BrowserController bookmarksNavigationControllerDidTapOutsideFavorites:]
  -[BrowserController dynamicBarAnimatorWillLeaveSteadyState:]
  -[BrowserController updateDynamicBarGeometry]
  -[BrowserController detachFromScene]
  -[BrowserController showSharedWithYouCollectionKeyPressed]
  -[BrowserController catalogViewController:didSelectAddress:]
  -[BrowserController navigationBarTranslateButtonWasTapped:]
  -[BrowserController bookmarksBarView:bookmarksNavigationControllerViewDidAppear:]
  -[BrowserController updateSpeculativeLoadingPreferences]
  -[BrowserController bookmarksNavigationController:setBookmark:asRead:]
  -[BrowserController openNewTab:]
  -[BrowserController favoritesFieldShouldBeExpanded]
  -[BrowserController bookmarksNavigationControllerContentDidBecomeDirty:]
  -[BrowserController navigationBar:extensionButtonTapped:extension:]
  -[BrowserController catalogViewController:focusNextKeyView:]
  -[BrowserController navigationBar:didCreateLeadingToolbar:trailingToolbar:]
  -[BrowserController tabDocumentDidAddAlert:]
  -[BrowserController addBookmarkFolderForCurrentTabs]
  -[BrowserController webExtensionWindows]
  -[BrowserController closePreviewDocument]
  -[BrowserController browserViewController:adjustedBottomContentInset:]
  -[BrowserController cachedDocumentOnContinuousTransition]
  -[BrowserController tabDocumentWillDismissInlineDialog:]
  -[BrowserController updateInterface]
  -[BrowserController writePrivateBrowsingEnabled:]
  -[BrowserController tabBarIsCurrentlyScrollable]
  -[BrowserController tabDocumentDidChangeCanStopLoadingState:]
  -[BrowserController carrierBundledChanged]
  -[BrowserController didDismissTabGroupAlertViewController:]
  -[BrowserController tabDocument:canShowDownload:]
  -[BrowserController scrollViewDidEndDecelerating:]
  -[BrowserController barManager:didReceiveTapForBarItem:]
  -[BrowserController navigationBarReaderButtonWasTapped:]
  -[BrowserController printKeyPressed]
  -[BrowserController continuousReadingController]
  -[BrowserController browserViewControllerDidChangeBarInsets:]
  -[BrowserController tabDocumentCanRedirectToExternalApplication:]
  -[BrowserController browserViewControllerShouldFreezeWebViewUpdatesForSizeTransition:]
  -[BrowserController cancelSpeculativeLoad]
  -[BrowserController scene:continueUserActivity:]
  -[BrowserController prepareForTabDocumentWebViewFullscreenMayReturnToInline:]
  -[BrowserController tabBarManagerDidUpdateDisplayMode:]
  -[BrowserController beginIgnoringUserInteraction:]
  -[BrowserController bookmarksNavigationController:updateReadingListUnreadFilterShowingAllBookmarks:]
  -[BrowserController tabDocumentDidCancelRedirectToExternalApplication:]
  -[BrowserController tabDocumentDidStartLoading:]
  -[BrowserController didReceiveMemoryWarning]
  -[BrowserController saveToFilesOperation:didFinishWithSuccess:]
  -[BrowserController _downloadsTotalProgressDidChange:]
  -[BrowserController setCookiePolicyMessageReceived]
  -[BrowserController nextReadingListItemKeyPressed]
  -[BrowserController updateJavaScriptPreferences]
  -[BrowserController tabDocumentCanDownloadFile:]
  -[BrowserController navigationBarFormatMenuButtonStartedInteraction:]
  -[BrowserController reloadFromOriginKeyPressed]
  -[BrowserController canPerformPostLaunchActions]
  -[BrowserController unifiedTabBarLayoutStyle]
  -[BrowserController overridesUndoManagerForClosedTabs]


FrequentlyVisitedSitesBannedURLStore : WBSFrequentlyVisitedSitesBannedURLStore
  // class methods
  +[FrequentlyVisitedSitesBannedURLStore sharedStore]


LinkPreviewViewController : UIViewController <_SFDigitalHealthHostingViewController>
 @property  TabDocument *previewTabDocument
 @property  _SFLinkPreviewHeader *previewHeader
 @property  _SFBrowserView *browserView
 @property  _SFDigitalHealthViewController *digitalHealthViewController

  // instance methods
  -[LinkPreviewViewController viewWillLayoutSubviews]
  -[LinkPreviewViewController .cxx_destruct]
  -[LinkPreviewViewController setDigitalHealthViewController:]
  -[LinkPreviewViewController viewDidAppear:]
  -[LinkPreviewViewController digitalHealthViewController]
  -[LinkPreviewViewController displayHostedDigitalHealthView]
  -[LinkPreviewViewController browserView]
  -[LinkPreviewViewController loadView]
  -[LinkPreviewViewController previewHeader]
  -[LinkPreviewViewController initWithTabDocument:]
  -[LinkPreviewViewController updatePreviewLoadingUIWithURLString:]
  -[LinkPreviewViewController willCommitPreviewedWebView]
  -[LinkPreviewViewController previewTabDocument]


UniversalSearchSession : WBSParsecDSession
 @property  WBSParsecDFeedbackDispatcher *feedbackDispatcher

  // class methods
  +[UniversalSearchSession sharedSession]
  +[UniversalSearchSession shouldUseSearchFoundation]

  // instance methods
  -[UniversalSearchSession session:bag:didLoadWithError:]


TabCompletionProvider : CompletionProvider <WBSBrowserTabCompletionProviderSource, WBSBrowserTabCompletionProviderDelegate>
 @property  <TabCompletionProviderDataSource> *tabCompletionProviderDataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabCompletionProvider .cxx_destruct]
  -[TabCompletionProvider dealloc]
  -[TabCompletionProvider tabInfosForBrowserTabCompletionProvider:]
  -[TabCompletionProvider selectedTabInfoForBrowserTabCompletionProvider:]
  -[TabCompletionProvider didFindMatchesForCurrentQueryInBrowserTabCompletionProvider:]
  -[TabCompletionProvider bestTabCompletionMatchForQuery:withTopHitURL:isBestMatchTopHit:]
  -[TabCompletionProvider setQueryToComplete:]
  -[TabCompletionProvider invalidateCachedTabData]
  -[TabCompletionProvider tabCompletionProviderDataSource]
  -[TabCompletionProvider setTabCompletionProviderDataSource:]


AutomationOverlayWindow : UIWindow
 @property  <AutomationOverlayWindowDelegate> *automationWindowDelegate

  // instance methods
  -[AutomationOverlayWindow hitTest:withEvent:]
  -[AutomationOverlayWindow .cxx_destruct]
  -[AutomationOverlayWindow automationWindowDelegate]
  -[AutomationOverlayWindow setAutomationWindowDelegate:]


AddToFavoritesUIActivity : TabDocumentActivity <_SFSingleBookmarkNavigationControllerDelegate>
 @property  <AddBookmarkActivityDelegate> *delegate

  // instance methods
  -[AddToFavoritesUIActivity activityViewController]
  -[AddToFavoritesUIActivity .cxx_destruct]
  -[AddToFavoritesUIActivity _systemImageName]
  -[AddToFavoritesUIActivity activityType]
  -[AddToFavoritesUIActivity activityDidFinish:]
  -[AddToFavoritesUIActivity addBookmarkNavControllerCanSaveBookmarkChanges:]
  -[AddToFavoritesUIActivity activityTitle]
  -[AddToFavoritesUIActivity addBookmarkNavController:didFinishWithResult:bookmark:]
  -[AddToFavoritesUIActivity _embeddedActivityViewController]
  -[AddToFavoritesUIActivity canPerformWithTabDocument:]
  -[AddToFavoritesUIActivity prepareWithTabDocument:]


ToggleContentBlockersActivity : TabDocumentActivity
  // instance methods
  -[ToggleContentBlockersActivity activityType]
  -[ToggleContentBlockersActivity actionType]
  -[ToggleContentBlockersActivity activityTitleWithTabDocument:]
  -[ToggleContentBlockersActivity canPerformWithTabDocument:]
  -[ToggleContentBlockersActivity performActivityWithTabDocument:]
  -[ToggleContentBlockersActivity systemImageNameWithTabDocument:]


TabSnapshotQueueItem : NSObject
 @property  TabSnapshotRequest *request
 @property  @? completionHandler
 @property  <TabSnapshotContentProvider> *contentProvider
 @property  BOOL snappshottingIsInProgress

  // instance methods
  -[TabSnapshotQueueItem .cxx_destruct]
  -[TabSnapshotQueueItem contentProvider]
  -[TabSnapshotQueueItem request]
  -[TabSnapshotQueueItem setContentProvider:]
  -[TabSnapshotQueueItem completionHandler]
  -[TabSnapshotQueueItem initWithRequest:contentProvider:completionHandler:]
  -[TabSnapshotQueueItem appendCompletionHandler:]
  -[TabSnapshotQueueItem snappshottingIsInProgress]
  -[TabSnapshotQueueItem setSnappshottingIsInProgress:]


TabSnapshotRequest : NSObject
 @property  {CGSize=dd} size
 @property  double topBackdropHeight
 @property  unsigned long options
 @property  <NSObject><NSCopying> *identifier

  // instance methods
  -[TabSnapshotRequest options]
  -[TabSnapshotRequest .cxx_destruct]
  -[TabSnapshotRequest isEqual:]
  -[TabSnapshotRequest identifier]
  -[TabSnapshotRequest size]
  -[TabSnapshotRequest initWithSize:topBackdropHeight:options:identifier:]
  -[TabSnapshotRequest topBackdropHeight]
  -[TabSnapshotRequest initWithSize:topBackdropHeight:options:]


TabSnapshotGenerator : NSObject
 @property  <TabSnapshotGeneratorDelegate> *delegate

  // class methods
  +[TabSnapshotGenerator _snapshotRenderingQueue]

  // instance methods
  -[TabSnapshotGenerator .cxx_destruct]
  -[TabSnapshotGenerator setDelegate:]
  -[TabSnapshotGenerator init]
  -[TabSnapshotGenerator delegate]
  -[TabSnapshotGenerator snapshotWithRequest:contentProvider:completion:]
  -[TabSnapshotGenerator _beginNextItemIfIdle]
  -[TabSnapshotGenerator _snapshotItem:]
  -[TabSnapshotGenerator _didFinishItem:withImage:]
  -[TabSnapshotGenerator backgroundColorForContentProvider:]
  -[TabSnapshotGenerator contentRectForContentProvider:withSnapshotSize:]
  -[TabSnapshotGenerator contentShouldUnderlapTopBackdropForContentProvider:]
  -[TabSnapshotGenerator _renderView:afterScreenUpdates:]
  -[TabSnapshotGenerator renderSnapshotWithSize:backgroundColor:topBackdropHeight:options:drawing:]


JavaScriptDialogState : NSObject
 @property  NSString *message
 @property  long long type
 @property  @? completionHandler
 @property  NSString *currentInput

  // instance methods
  -[JavaScriptDialogState setCurrentInput:]
  -[JavaScriptDialogState .cxx_destruct]
  -[JavaScriptDialogState message]
  -[JavaScriptDialogState type]
  -[JavaScriptDialogState currentInput]
  -[JavaScriptDialogState completionHandler]
  -[JavaScriptDialogState initWithMessage:type:completionHandler:]


AutomationController : _SFAutomationController <_WKAutomationDelegate, _WKAutomationSessionDelegate>
 @property  _WKAutomationSession *automationSession
 @property  BOOL canCreateNewAutomationTabs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AutomationController _applicationDidEnterBackground]
  -[AutomationController terminateSession]
  -[AutomationController _uninstallGuidedAccessSession]
  -[AutomationController _automationSession:dismissCurrentJavaScriptDialogForWebView:]
  -[AutomationController .cxx_destruct]
  -[AutomationController createAutomationSessionWithIdentifier:configuration:]
  -[AutomationController _processPoolAllowsRemoteAutomation:]
  -[AutomationController _automationSession:messageOfCurrentJavaScriptDialogForWebView:]
  -[AutomationController _automationSession:acceptCurrentJavaScriptDialogForWebView:]
  -[AutomationController tabDocument:runJavaScriptAlertPanelWithMessage:completionHandler:]
  -[AutomationController tabDocument:runJavaScriptConfirmPanelWithMessage:completionHandler:]
  -[AutomationController _automationSession:isShowingJavaScriptDialogForWebView:]
  -[AutomationController _developerPreferencesChanged]
  -[AutomationController init]
  -[AutomationController createAutomationSessionWithIdentifier:]
  -[AutomationController _processPoolDidRequestInspectorDebuggablesToWakeUp:]
  -[AutomationController _uninstallAutomationSession]
  -[AutomationController _automationSessionDidDisconnectFromRemote:]
  -[AutomationController updatePreferencesForAutomation:]
  -[AutomationController tabDocument:runJavaScriptTextInputPanelWithPrompt:defaultText:completionHandler:]
  -[AutomationController automationSession]
  -[AutomationController _automationSession:currentPresentationForWebView:]
  -[AutomationController canCreateNewAutomationTabs]
  -[AutomationController _automationSession:typeOfCurrentJavaScriptDialogForWebView:]
  -[AutomationController _browserControllerForAutomation]
  -[AutomationController dealloc]
  -[AutomationController _automationSession:setUserInput:forCurrentJavaScriptDialogForWebView:]
  -[AutomationController _automationSession:requestSwitchToWebView:completionHandler:]
  -[AutomationController _automationSession:requestNewWebViewWithOptions:completionHandler:]
  -[AutomationController _processPool:didRequestAutomationSessionWithIdentifier:configuration:]


CloudHistoryConfiguration : WBSCloudHistoryConfiguration
  // class methods
  +[CloudHistoryConfiguration sharedConfiguration]

  // instance methods
  -[CloudHistoryConfiguration _reloadConfigurationDataIfNecessary]
  -[CloudHistoryConfiguration _cloudConfigurationAssetsSortedByVersionNumber]
  -[CloudHistoryConfiguration .cxx_destruct]
  -[CloudHistoryConfiguration remoteConfiguration]
  -[CloudHistoryConfiguration init]
  -[CloudHistoryConfiguration shouldUseLongLivedOperationsToSaveRecords]
  -[CloudHistoryConfiguration platformBuiltInConfiguration]


CloudTabTable : UIView <CloudTabItemViewDelegate, ViewReuseManagerDelegate>
 @property  <CloudTabTableDelegate> *delegate
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRect
 @property  double contentMinimumY
 @property  WBSCloudTab *focusedTab
 @property  double offsetAboveFocusedTab
 @property  double offsetBelowFocusedTab
 @property  @? layoutAnimator
 @property  NSArray *displayedTabs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CloudTabTable .cxx_destruct]
  -[CloudTabTable layoutSubviews]
  -[CloudTabTable setDelegate:]
  -[CloudTabTable setVisibleRect:]
  -[CloudTabTable sizeThatFits:]
  -[CloudTabTable delegate]
  -[CloudTabTable visibleRect]
  -[CloudTabTable _visibleItemRange]
  -[CloudTabTable _didSelectItemView:]
  -[CloudTabTable _rectForItemAtIndex:]
  -[CloudTabTable _layoutItemView:representingItemAtIndex:]
  -[CloudTabTable _shouldShowSeparatorForItemViewAtIndex:]
  -[CloudTabTable cloudTabItemViewDidStartEditing:]
  -[CloudTabTable cloudTabItemViewDidFinishEditing:]
  -[CloudTabTable cloudTabItemViewDeleteButtonWasTapped:]
  -[CloudTabTable cloudTabItemViewHighlightStateDidChange:]
  -[CloudTabTable viewReuseManager:willRecycleView:]
  -[CloudTabTable viewReuseManager:prepareView:toRepresentObjectAtIndex:]
  -[CloudTabTable initWithDevice:style:]
  -[CloudTabTable setFocusedTab:]
  -[CloudTabTable setOffsetAboveFocusedTab:]
  -[CloudTabTable setOffsetBelowFocusedTab:]
  -[CloudTabTable rectForTab:]
  -[CloudTabTable contentMinimumY]
  -[CloudTabTable updateDisplayedTabs]
  -[CloudTabTable focusedTab]
  -[CloudTabTable offsetAboveFocusedTab]
  -[CloudTabTable offsetBelowFocusedTab]
  -[CloudTabTable layoutAnimator]
  -[CloudTabTable setLayoutAnimator:]
  -[CloudTabTable displayedTabs]


HighlightRecognizer : UIGestureRecognizer
 @property  id highlightTarget
 @property  SEL highlightAction

  // instance methods
  -[HighlightRecognizer setHighlightAction:]
  -[HighlightRecognizer .cxx_destruct]
  -[HighlightRecognizer initWithTarget:action:]
  -[HighlightRecognizer touchesBegan:withEvent:]
  -[HighlightRecognizer numberOfTouches]
  -[HighlightRecognizer reset]
  -[HighlightRecognizer touchesCancelled:withEvent:]
  -[HighlightRecognizer setHighlightTarget:]
  -[HighlightRecognizer highlightAction]
  -[HighlightRecognizer highlightTarget]
  -[HighlightRecognizer touchesEnded:withEvent:]


BrowserRootViewController : UIViewController <TabBarDropExpansionViewDelegate, UIGestureRecognizerDelegate, SidebarContentDimmingViewDelegate, SFOrderedContainerViewDelegate, UIViewControllerStatusBarPartStyleProvider, CapsuleNavigationBarViewControllerDelegate, SFCapsuleCollectionViewGestureObserving, TabOverviewThemeProviding, _SFDigitalHealthHostingViewController, TabDocumentViewGeometryProviding>
 @property  _SFBrowserConfiguration *configuration
 @property  <BrowserRootViewControllerDelegate> *delegate
 @property  ViewWithCustomNextResponder *contentContainerView
 @property  UIView *documentAndTopBarsContainerView
 @property  UIView *tabBarClipperView
 @property  BOOL barStateAllowsHidingHomeIndicator
 @property  BookmarksBarView *bookmarksBar
 @property  BrowserToolbar *bottomToolbar
 @property  _SFDynamicBarAnimator *dynamicBarAnimator
 @property  NavigationBar *navigationBar
 @property  UIView<_SFBarCommon> *primaryBar
 @property  UIView<_SFNavigationBarCommon> *primaryNavigationBar
 @property  UIView<_SFNavigationBarCommon> *topBar
 @property  NSArray *bars
 @property  BOOL showingTabBar
 @property  TabBar *tabBar
 @property  TabHoverPreview *tabHoverPreview
 @property  UnifiedBar *unifiedBar
 @property  BOOL usingUnifiedBar
 @property  TabBarManager *tabBarManager
 @property  SFWebExtensionPermissionBanner *webExtensionBanner
 @property  CapsuleNavigationBarViewController *capsuleViewController
 @property  BOOL usingLoweredBar
 @property  NSNumber *capsuleCollectionViewLayout
 @property  BOOL usingBottomCapsule
 @property  BOOL insetsContentContainerFromStatusBar
 @property  SFBannerTheme *bannerTheme
 @property  UIRefreshControl *refreshControl
 @property  BOOL pullToRefreshIsEnabled
 @property  UIBarButtonItem *sidebarButtonItem
 @property  UIBarButtonItem *sidebarTrailingButtonItem
 @property  UIButton *floatingSidebarButton
 @property  UIButton *sidebarButtonEmbeddedInSidebar
 @property  SidebarContentDimmingView *sidebarContentDimmingView
 @property  long long toolbarPlacement
 @property  double navigationBarDesiredHeight
 @property  double navigationBarSquishedHeight
 @property  double maximumHeightObscuredByBottomToolbar
 @property  double offsetForDynamicBarAnimator
 @property  BOOL keepBarsMinimized
 @property  BOOL togglingTabBar
 @property  BOOL interactivelyMinimizingBars
 @property  BOOL usesFaintTopSeparator
 @property  double horizontalMarginForCatalogViewInPopover
 @property  BOOL isPerformingSizeTransition
 @property  _SFWebView *webView
 @property  UIScrollView *scrollView
 @property  BOOL documentSafeAreaInsetsFrozen
 @property  BOOL needsScrollToTopView
 @property  UIViewController *hostViewControllerForOverlay
 @property  BOOL showingSidebar
 @property  SidebarViewController *sidebarViewController
 @property  long long sidebarStyle
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentFrameInPageView
 @property  {CGSize=dd} webViewMinimumLayoutSize
 @property  {CGSize=dd} webViewMaximumUnobscuredLayoutSize
 @property  {UIEdgeInsets=dddd} webViewEffectiveSafeAreaInsets
 @property  BrowserController *browserController
 @property  CatalogViewController *catalogViewController
 @property  UnifiedField *unifiedField
 @property  BOOL statusBarIsScrolledOffScreen
 @property  UIView<TabThumbnailCollectionView> *tabThumbnailCollectionView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long preferredLeadingStatusBarStyle
 @property  long long preferredTrailingStatusBarStyle
 @property  long long preferredCenterStatusBarStyle
 @property  _SFDigitalHealthViewController *digitalHealthViewController

  // instance methods
  -[BrowserRootViewController tabCollectionViewDidDismiss:]
  -[BrowserRootViewController dynamicBarAnimator]
  -[BrowserRootViewController tabThumbnailCollectionView]
  -[BrowserRootViewController stopRefreshing]
  -[BrowserRootViewController keepBarsMinimized]
  -[BrowserRootViewController bannerTheme]
  -[BrowserRootViewController browserController]
  -[BrowserRootViewController preferredScreenEdgesDeferringSystemGestures]
  -[BrowserRootViewController preferredCenterStatusBarStyle]
  -[BrowserRootViewController preferredStatusBarStyle]
  -[BrowserRootViewController webView]
  -[BrowserRootViewController tabCollectionViewWillPresent:]
  -[BrowserRootViewController preferredLeadingStatusBarStyle]
  -[BrowserRootViewController bookmarksBar]
  -[BrowserRootViewController presentViewController:animated:completion:]
  -[BrowserRootViewController topBar]
  -[BrowserRootViewController updateAccessibilityIdentifier]
  -[BrowserRootViewController tabCollectionViewDidPresent:]
  -[BrowserRootViewController _loweredBarObscuredInsetsIgnoringKeyboard]
  -[BrowserRootViewController _boundingPathMayHaveChangedForView:relativeToBoundsOriginOnly:]
  -[BrowserRootViewController bars]
  -[BrowserRootViewController dynamicBarAnimatorOutputsDidChange:]
  -[BrowserRootViewController _capsuleShouldShowAlternateToolbarDuringTabViewTransition]
  -[BrowserRootViewController setKeepBarsMinimized:]
  -[BrowserRootViewController didToggleTabBar]
  -[BrowserRootViewController sidebarContentDimmingView]
  -[BrowserRootViewController initWithBrowserController:]
  -[BrowserRootViewController _updateTopBarStyles]
  -[BrowserRootViewController _layOutScrollToTopView]
  -[BrowserRootViewController capsuleNavigationBarViewController:shouldUnminimizeOnScrollForScrollView:]
  -[BrowserRootViewController tabCollectionViewDidCancelDismissal:]
  -[BrowserRootViewController isPerformingSizeTransition]
  -[BrowserRootViewController _avoidanceInsets]
  -[BrowserRootViewController obscuredScrollViewInsetsConsideringTargetState:insetsDueToSafeArea:]
  -[BrowserRootViewController sidebarViewController]
  -[BrowserRootViewController tabCollectionViewWillDismiss:]
  -[BrowserRootViewController setShowingTabBar:]
  -[BrowserRootViewController navigationBarDesiredHeight]
  -[BrowserRootViewController webExtensionBanner]
  -[BrowserRootViewController obscuredScrollViewInsetsForTabDocumentView:unobscuredSafeAreaInsets:]
  -[BrowserRootViewController prefersHomeIndicatorAutoHidden]
  -[BrowserRootViewController tabDocumentView:contentOffsetAdjustmentEdgeWithPreviousContentInset:]
  -[BrowserRootViewController didTransitionTabView]
  -[BrowserRootViewController prefersStatusBarHidden]
  -[BrowserRootViewController isShowingSidebar]
  -[BrowserRootViewController refreshControl]
  -[BrowserRootViewController primaryBar]
  -[BrowserRootViewController tabBarManager]
  -[BrowserRootViewController _multitaskingDragExclusionRects]
  -[BrowserRootViewController preferredFocusEnvironments]
  -[BrowserRootViewController _convertDocumentCoordinateSpaceRect:toCoordinateSpace:]
  -[BrowserRootViewController _createBottomToolbarIfNeeded]
  -[BrowserRootViewController _isTrackingDropSession]
  -[BrowserRootViewController capsuleNavigationBarViewController:selectedItemWillChangeToState:options:coordinator:]
  -[BrowserRootViewController viewWillLayoutSubviews]
  -[BrowserRootViewController capsuleNavigationBarViewControllerDidTapVoiceSearch:]
  -[BrowserRootViewController traitCollectionDidChange:]
  -[BrowserRootViewController preferredTrailingStatusBarStyle]
  -[BrowserRootViewController _updateTopBarAllowingRemoval:]
  -[BrowserRootViewController scrollView]
  -[BrowserRootViewController childViewControllerForStatusBarStyle]
  -[BrowserRootViewController unifiedBar]
  -[BrowserRootViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[BrowserRootViewController contentContainerViewFrameForBrowserSize:]
  -[BrowserRootViewController configuration]
  -[BrowserRootViewController shouldFreezeWebViewUpdatesForTabDocumentView:]
  -[BrowserRootViewController sidebarDimmingViewDismiss:]
  -[BrowserRootViewController statusBarIsScrolledOffScreen]
  -[BrowserRootViewController setDocumentSafeAreaInsetsFrozen:]
  -[BrowserRootViewController tabBar]
  -[BrowserRootViewController capsuleViewController]
  -[BrowserRootViewController documentAndTopBarsContainerView]
  -[BrowserRootViewController setTabThumbnailCollectionView:]
  -[BrowserRootViewController tabDocumentViewDidUpdateDistanceScrolled:]
  -[BrowserRootViewController usingLoweredBar]
  -[BrowserRootViewController willToggleTabBar]
  -[BrowserRootViewController .cxx_destruct]
  -[BrowserRootViewController _updateAllowsHidingHomeIndicatorMinimized:]
  -[BrowserRootViewController _updateSidebarStyle]
  -[BrowserRootViewController barStateAllowsHidingHomeIndicator]
  -[BrowserRootViewController safari_wantsTransparentApplicationBackground]
  -[BrowserRootViewController updateSuppressesStandaloneTabBar]
  -[BrowserRootViewController updateViewsAfterContentContainerViewBoundsChange]
  -[BrowserRootViewController webViewMaximumUnobscuredLayoutSize]
  -[BrowserRootViewController viewDidLoad]
  -[BrowserRootViewController _convertRect:fromViewInDocumentContainer:toCoordinateSpace:]
  -[BrowserRootViewController _frameForBottomToolbarForceHidden:]
  -[BrowserRootViewController _viewForConvertingToCoordinateSpace:]
  -[BrowserRootViewController _updateToolbarForToolbarPlacementAllowingRemoval:]
  -[BrowserRootViewController pullToRefreshIsEnabled]
  -[BrowserRootViewController setCatalogViewController:]
  -[BrowserRootViewController navigationBar]
  -[BrowserRootViewController setDigitalHealthViewController:]
  -[BrowserRootViewController tabHoverPreview]
  -[BrowserRootViewController updateUnifiedBarVisibility]
  -[BrowserRootViewController updateWebViewSizeAttributes]
  -[BrowserRootViewController setTabBar:]
  -[BrowserRootViewController _applyTopBackdropTheme]
  -[BrowserRootViewController _bottomBarOffset]
  -[BrowserRootViewController _updateBottomBarHeightAboveKeyboard]
  -[BrowserRootViewController capsuleCollectionViewLayout]
  -[BrowserRootViewController isTogglingTabBar]
  -[BrowserRootViewController canBecomeFirstResponder]
  -[BrowserRootViewController snapshotContentProviderForTab:]
  -[BrowserRootViewController tabBarDropExpansionView:didBeginTrackingDropSession:]
  -[BrowserRootViewController _loweredBarMaximumObscuredInsets]
  -[BrowserRootViewController _shouldHideUnifiedBar]
  -[BrowserRootViewController _updateCapsuleTopSeparatorColor]
  -[BrowserRootViewController _updateRefreshControlStyle]
  -[BrowserRootViewController setDelegate:]
  -[BrowserRootViewController overrideTraitCollectionForChildViewController:]
  -[BrowserRootViewController setPullToRefreshIsEnabled:]
  -[BrowserRootViewController setShowingSidebar:]
  -[BrowserRootViewController viewDidAppear:]
  -[BrowserRootViewController becomeFirstResponder]
  -[BrowserRootViewController _layOutFloatingSidebarButtonForSidebarShowing:]
  -[BrowserRootViewController _shouldCrossfadeCapsuleToolbar]
  -[BrowserRootViewController gestureRecognizerShouldRecognizeSimultaneouslyWithTouchEvents:]
  -[BrowserRootViewController isUsingBottomCapsule]
  -[BrowserRootViewController documentSafeAreaInsetsFrozen]
  -[BrowserRootViewController setTopBackdropTheme:]
  -[BrowserRootViewController isInteractivelyMinimizingBars]
  -[BrowserRootViewController keyboardInsetInCoordinateSpace:]
  -[BrowserRootViewController scrollViewContentInsetAdjustmentsForTabDocumentView:]
  -[BrowserRootViewController setTogglingTabBar:]
  -[BrowserRootViewController _continuousReadingViewController]
  -[BrowserRootViewController _registerLayoutStateUpdateHandler]
  -[BrowserRootViewController _updateBannerTheme]
  -[BrowserRootViewController hostViewControllerForOverlay]
  -[BrowserRootViewController setBookmarksBar:]
  -[BrowserRootViewController _prepareToShowSidebarViewControllerIfNeeded]
  -[BrowserRootViewController toolbarPlacement]
  -[BrowserRootViewController webViewEffectiveSafeAreaInsets]
  -[BrowserRootViewController _layOutTopBackdrop]
  -[BrowserRootViewController _refreshControlFired:]
  -[BrowserRootViewController _setToolbarPlacement:]
  -[BrowserRootViewController capsuleNavigationBarViewController:didCreateNavigationBar:]
  -[BrowserRootViewController capsuleNavigationBarViewControllerIsTrackingDropSession:]
  -[BrowserRootViewController scrollViewDidScroll:]
  -[BrowserRootViewController scrollIndicatorInsetsForTabDocumentView:]
  -[BrowserRootViewController tabOverview:topBarThemeForItem:]
  -[BrowserRootViewController _setUpRefreshControlIfNeeded]
  -[BrowserRootViewController _receivedTouchDown:]
  -[BrowserRootViewController capsuleNavigationBarViewControllerDidChangeCapsuleFocus:options:]
  -[BrowserRootViewController updateOrderedSubviewsForOrderedContainerView:]
  -[BrowserRootViewController gestureRecognizerShouldBegin:]
  -[BrowserRootViewController _setUpFloatingSidebarButton]
  -[BrowserRootViewController _webViewMinimumEffectiveSafeAreaInsets]
  -[BrowserRootViewController obscuredInsetsWithComponents:forRect:inCoordinateSpace:]
  -[BrowserRootViewController obscuredInsetsForRect:inCoordinateSpace:]
  -[BrowserRootViewController setStatusBarIsScrolledOffScreen:]
  -[BrowserRootViewController updateCapsuleLayoutStyle]
  -[BrowserRootViewController dismissViewControllerAnimated:completion:]
  -[BrowserRootViewController _isShowingEmbeddedSidebar]
  -[BrowserRootViewController bottomToolbar]
  -[BrowserRootViewController capsuleCollectionViewDidUpdateMinimizationGesture:]
  -[BrowserRootViewController _hideNavigationBarGestureRecognized:]
  -[BrowserRootViewController createToolbarForCapsuleNavigationBarViewController:]
  -[BrowserRootViewController digitalHealthViewController]
  -[BrowserRootViewController removeChildViewController:notifyDidMove:]
  -[BrowserRootViewController _prepareBarsForTransitionFromPreviousToolbarPlacement:]
  -[BrowserRootViewController setBarStateAllowsHidingHomeIndicator:]
  -[BrowserRootViewController _setUpTabGroupButton]
  -[BrowserRootViewController _loweredBarObscuredInsets]
  -[BrowserRootViewController isShowingTabBar]
  -[BrowserRootViewController tabBarDropExpansionView:didEndTrackingDropSession:]
  -[BrowserRootViewController capsuleNavigationController:obscuredInsetsDidChangeWithCoordinator:]
  -[BrowserRootViewController willTransitionTabView]
  -[BrowserRootViewController _shouldShowSidebarContentDimmingView]
  -[BrowserRootViewController _updateToolbarPlacementIfNeeded]
  -[BrowserRootViewController viewDidLayoutSubviews]
  -[BrowserRootViewController navigationBarSquishedHeight]
  -[BrowserRootViewController setUsesFaintTopSeparator:]
  -[BrowserRootViewController gestureRecognizer:shouldReceiveTouch:]
  -[BrowserRootViewController _webViewSafeAreaInsets]
  -[BrowserRootViewController _baseInsetsForVerticalScrollIndicator]
  -[BrowserRootViewController _convertDocumentCoordinateSpacePoint:toCoordinateSpace:]
  -[BrowserRootViewController _shouldShowThemeColorInTopBar]
  -[BrowserRootViewController _activeTabDocumentView]
  -[BrowserRootViewController _shouldPositionBottomToolbarAboveKeyboard]
  -[BrowserRootViewController capsuleCollectionView:selectionGestureDidChangeFromAxis:]
  -[BrowserRootViewController sidebarTrailingButtonItem]
  -[BrowserRootViewController usingUnifiedBar]
  -[BrowserRootViewController _baseInsetsForHorizontalScrollIndicator]
  -[BrowserRootViewController _frameForNavigationBar]
  -[BrowserRootViewController _isShowingFindOnPage]
  -[BrowserRootViewController _layOutBottomToolbar]
  -[BrowserRootViewController capsuleNavigationBarViewControllerAllowsMinimizationGesture:]
  -[BrowserRootViewController _sidebarDimmedContentFrameIncludingSidebarOnlyIfEmbedded:]
  -[BrowserRootViewController setNeedsPreferredStatusBarUpdateAfterCommitAnimated:]
  -[BrowserRootViewController displayHostedDigitalHealthView]
  -[BrowserRootViewController _sidebarTrailingButtonWasTapped]
  -[BrowserRootViewController delegate]
  -[BrowserRootViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[BrowserRootViewController _updateTopBarStylesAnimated:]
  -[BrowserRootViewController minimumWebViewLayoutSizeForTabDocumentView:]
  -[BrowserRootViewController updateTabHoverPreview]
  -[BrowserRootViewController setNeedsScrollToTopView:]
  -[BrowserRootViewController _destroySidebarContentDimmingViewIfNeeded]
  -[BrowserRootViewController _frameForSidebarWhenShowing:]
  -[BrowserRootViewController _layOutSidebarContentDimmingView]
  -[BrowserRootViewController insetsContentContainerFromStatusBar]
  -[BrowserRootViewController navigationBarFrameInCoordinateSpace:]
  -[BrowserRootViewController _frameForCatalogView]
  -[BrowserRootViewController setTopBackdropTheme:animated:]
  -[BrowserRootViewController dealloc]
  -[BrowserRootViewController contentContainerView]
  -[BrowserRootViewController _updateSidebarWallpaperObscuredInsets]
  -[BrowserRootViewController contentFrameInPageView]
  -[BrowserRootViewController _updateRefreshControl]
  -[BrowserRootViewController layOutTopBars]
  -[BrowserRootViewController catalogViewController]
  -[BrowserRootViewController _setShowingFloatingSidebarButton:]
  -[BrowserRootViewController updateThemeColorIfNeededAnimated:]
  -[BrowserRootViewController _keyboardWillChangeFrame:]
  -[BrowserRootViewController _navigationBarIsExpandedOnTop]
  -[BrowserRootViewController _showsTopBackdrop]
  -[BrowserRootViewController _topAuxiliaryBarsHeight]
  -[BrowserRootViewController layOutCatalogView]
  -[BrowserRootViewController setWebExtensionBanner:]
  -[BrowserRootViewController addChildViewController:]
  -[BrowserRootViewController setWebView:]
  -[BrowserRootViewController _interfaceFillsScreen]
  -[BrowserRootViewController offsetForDynamicBarAnimator]
  -[BrowserRootViewController loadView]
  -[BrowserRootViewController shouldApplyMinimumEffectiveDeviceWidthForTabDocumentView:]
  -[BrowserRootViewController sidebarButtonEmbeddedInSidebar]
  -[BrowserRootViewController updateUnifiedBarChromelessScrollDistance]
  -[BrowserRootViewController usesFaintTopSeparator]
  -[BrowserRootViewController _createSidebarContentDimmingViewIfNeeded]
  -[BrowserRootViewController bottomToolbarFrameInCoordinateSpace:includeKeyboard:]
  -[BrowserRootViewController _loweredBarMinimumObscuredInsets]
  -[BrowserRootViewController horizontalMarginForCatalogViewInPopover]
  -[BrowserRootViewController maximumHeightObscuredByBottomToolbar]
  -[BrowserRootViewController tabBarClipperView]
  -[BrowserRootViewController _layOutTabView]
  -[BrowserRootViewController _logCurrentLayoutState]
  -[BrowserRootViewController maximumObscuredInsetsForRect:inCoordinateSpace:]
  -[BrowserRootViewController primaryNavigationBar]
  -[BrowserRootViewController setShowingSidebar:completion:]
  -[BrowserRootViewController _showBarsFromBottomBarTap:]
  -[BrowserRootViewController _frameForContentContainerView]
  -[BrowserRootViewController floatingSidebarButton]
  -[BrowserRootViewController inElementFullscreenForTabDocumentView:]
  -[BrowserRootViewController maximumUnobscuredWebViewLayoutSizeForTabDocumentView:]
  -[BrowserRootViewController sidebarButtonItem]
  -[BrowserRootViewController unifiedField]
  -[BrowserRootViewController webViewMinimumLayoutSize]
  -[BrowserRootViewController didReceiveMemoryWarning]
  -[BrowserRootViewController capsuleNavigationBarViewControllerWillHideKeyboard:]
  -[BrowserRootViewController _layOutSidebar]
  -[BrowserRootViewController setConfiguration:]
  -[BrowserRootViewController minimumObscuredInsetsForRect:inCoordinateSpace:]
  -[BrowserRootViewController needsScrollToTopView]
  -[BrowserRootViewController capsuleNavigationBarViewControllerIsShowingFindOnPage:]
  -[BrowserRootViewController sidebarStyle]
  -[BrowserRootViewController sidebarObscuredInsetsForRect:inCoordinateSpace:]


BrowserToolbar : _SFToolbar
 @property  UIToolbar *replacementToolbar

  // instance methods
  -[BrowserToolbar setItems:animated:]
  -[BrowserToolbar _updateItemsForReplacementToolbar]
  -[BrowserToolbar .cxx_destruct]
  -[BrowserToolbar _sceneDidEnterBackground:]
  -[BrowserToolbar layoutSubviews]
  -[BrowserToolbar _sceneWillEnterForeground:]
  -[BrowserToolbar replacementToolbar]
  -[BrowserToolbar setReplacementToolbar:tintStyle:withAnimationDelay:]
  -[BrowserToolbar initWithPlacement:hideBackground:]


AutomationOverlayViewController : UIViewController <AutomationOverlayWindowDelegate>
 @property  BOOL allowsUserInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AutomationOverlayViewController .cxx_destruct]
  -[AutomationOverlayViewController touchesBegan:withEvent:]
  -[AutomationOverlayViewController touchesMoved:withEvent:]
  -[AutomationOverlayViewController touchesCancelled:withEvent:]
  -[AutomationOverlayViewController initWithDelegate:]
  -[AutomationOverlayViewController allowsUserInteraction]
  -[AutomationOverlayViewController loadView]
  -[AutomationOverlayViewController touchesEnded:withEvent:]
  -[AutomationOverlayViewController automationWindowAllowsUserInteraction:]
  -[AutomationOverlayViewController _interceptUserInteraction]
  -[AutomationOverlayViewController _toggleAllowsUserInteractionTemporarily:]
  -[AutomationOverlayViewController _setAllowsUserInteraction:completionHandler:]


CloudTabStore : WBSCloudTabStore <WBSCloudTabStoreDelegate>
 @property  BOOL _cloudKitDataNeedsFetching
 @property  NSUUID *currentDeviceUUID
 @property  <CloudTabStoreDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CloudTabStore sharedCloudTabStore]

  // instance methods
  -[CloudTabStore currentDevice]
  -[CloudTabStore stopObservingTabStoreStateChanges]
  -[CloudTabStore _notifyCloudTabStoreDidUpdateWithType:]
  -[CloudTabStore _removeConflictingDevice]
  -[CloudTabStore closeTabs:onDevice:]
  -[CloudTabStore _removeObjectFromKeyValueStore:forKey:]
  -[CloudTabStore _clearAllDevices]
  -[CloudTabStore _storeForIdentifier:]
  -[CloudTabStore _syncedDevicesStoreDidUpdate:]
  -[CloudTabStore closeTab:onDevice:]
  -[CloudTabStore _currentDeviceUUID]
  -[CloudTabStore _cloudKitDataDidUpdateOnServer:]
  -[CloudTabStore .cxx_destruct]
  -[CloudTabStore _cloudTabsEnabledDidChange]
  -[CloudTabStore saveCurrentDeviceCloudTabs:]
  -[CloudTabStore _setDictionaryInKeyValueStore:dictionary:forKey:]
  -[CloudTabStore setDelegate:]
  -[CloudTabStore _closeRequestedTabIfPossible:]
  -[CloudTabStore saveCurrentDeviceTabsFromBrowserSavedState:syncCompletionHandler:]
  -[CloudTabStore _waitForInitialCloudKitFetchToComplete:]
  -[CloudTabStore init]
  -[CloudTabStore synchronizeCloudTabDevices]
  -[CloudTabStore closeAllTabsOnDevice:]
  -[CloudTabStore _clearTabsForCurrentDeviceWithSyncCompletionHandler:]
  -[CloudTabStore saveCurrentDeviceCloudTabsForEnteringBackground:completion:]
  -[CloudTabStore didGetCachedDevicesFromCloudKitForCloudTabStore:]
  -[CloudTabStore _shouldUseCloudKitForSavingCurrentDevice]
  -[CloudTabStore _keyValueStoreDictionaryRepresentation:]
  -[CloudTabStore saveCurrentDeviceTabsFromBrowserSavedState:]
  -[CloudTabStore cloudTabsAreEnabled]
  -[CloudTabStore canSaveCloudTabsForCurrentDevice]
  -[CloudTabStore delegate]
  -[CloudTabStore currentDeviceUUID]
  -[CloudTabStore clearTabsForCurrentDevice]
  -[CloudTabStore _callFetchCloudKitDataCompletionHandlers]
  -[CloudTabStore _setCloudKitDataNeedsFetching:]
  -[CloudTabStore startObservingTabStoreStateChanges]
  -[CloudTabStore fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit]
  -[CloudTabStore _saveCurrentDeviceCloudTabs:syncCompletionHandler:]
  -[CloudTabStore syncedCloudTabDevices]
  -[CloudTabStore _cloudKitDataNeedsFetching]
  -[CloudTabStore didUpdateDevicesAndCloseRequestsFromCloudKitForCloudTabStore:error:]
  -[CloudTabStore _userRequestsStoreDidUpdate:]


ReusableTabManager : WBReusableTabManager
  // instance methods
  -[ReusableTabManager windowStates]
  -[ReusableTabManager tabGroupManager]
  -[ReusableTabManager enumerateReusableTabDocuments:]
  -[ReusableTabManager faviconForUUID:]
  -[ReusableTabManager reusableTabDocumentWithUUID:]


PrivateBrowsingObfuscationWindow : UIWindow
  // class methods
  +[PrivateBrowsingObfuscationWindow showPrivateBrowsingObfuscationWindowForApplicationWindow:]

  // instance methods
  -[PrivateBrowsingObfuscationWindow _canAffectStatusBarAppearance]


PrivateBrowsingObfuscationViewController : UIViewController
 @property  UIVisualEffectView *URLButtonBackground
 @property  UIVisualEffectView *topBarBackground
 @property  UIToolbar *bottomBar
 @property  UIVisualEffectView *capsuleBackground
 @property  SFCapsuleNavigationBarTheme *theme

  // instance methods
  -[PrivateBrowsingObfuscationViewController theme]
  -[PrivateBrowsingObfuscationViewController traitCollectionDidChange:]
  -[PrivateBrowsingObfuscationViewController .cxx_destruct]
  -[PrivateBrowsingObfuscationViewController viewDidLoad]
  -[PrivateBrowsingObfuscationViewController setTheme:]
  -[PrivateBrowsingObfuscationViewController bottomBar]
  -[PrivateBrowsingObfuscationViewController setBottomBar:]
  -[PrivateBrowsingObfuscationViewController _updateTheme]
  -[PrivateBrowsingObfuscationViewController URLButtonBackground]
  -[PrivateBrowsingObfuscationViewController setURLButtonBackground:]
  -[PrivateBrowsingObfuscationViewController topBarBackground]
  -[PrivateBrowsingObfuscationViewController setTopBarBackground:]
  -[PrivateBrowsingObfuscationViewController capsuleBackground]
  -[PrivateBrowsingObfuscationViewController setCapsuleBackground:]


UserNavigationDropInteraction : UIDropInteraction <UIDropInteractionDelegate, UIDropInteractionDelegate_Private>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UserNavigationDropInteraction _dropInteraction:dataOwnerForSession:]
  -[UserNavigationDropInteraction .cxx_destruct]
  -[UserNavigationDropInteraction dropInteraction:canHandleSession:]
  -[UserNavigationDropInteraction dropInteraction:sessionDidUpdate:]
  -[UserNavigationDropInteraction dropInteraction:performDrop:]
  -[UserNavigationDropInteraction initWithOpensNewTab:tabOrder:navigationHandler:]


ReadingListForYouDataSource : WBSForYouRecommendationMediatorDataSource
  // instance methods
  -[ReadingListForYouDataSource .cxx_destruct]
  -[ReadingListForYouDataSource dealloc]
  -[ReadingListForYouDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[ReadingListForYouDataSource _readingListContentsDidChange:]
  -[ReadingListForYouDataSource initWithBookmarkProvider:accessQueue:imageCache:]


UniqueAnimationKey : NSString
  // instance methods
  -[UniqueAnimationKey characterAtIndex:]
  -[UniqueAnimationKey getBytes:maxLength:usedLength:encoding:options:range:remainingRange:]
  -[UniqueAnimationKey length]
  -[UniqueAnimationKey initWithKey:]


UniqueAnimationKeyCounter : NSObject
 @property  BOOL finishedUsingAllKeys

  // instance methods
  -[UniqueAnimationKeyCounter nextAnimationKey]
  -[UniqueAnimationKeyCounter didFinishUsingAnimationKey]
  -[UniqueAnimationKeyCounter isFinishedUsingAllKeys]


UniqueAnimationKeyMonitor : NSObject
  // instance methods
  -[UniqueAnimationKeyMonitor .cxx_destruct]
  -[UniqueAnimationKeyMonitor dealloc]
  -[UniqueAnimationKeyMonitor initWithUniqueAnimationCounter:]


LibraryConfiguration : NSObject
 @property  <DownloadOpenHandler> *downloadOpenHandler
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <LibraryItemOpenHandler> *libraryItemOpenHandler
 @property  <TabGroupProvider> *tabGroupProvider
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  <BookmarksNavigationControllerDelegate> *bookmarksNavigationControllerDelegate

  // instance methods
  -[LibraryConfiguration tabGroupProvider]
  -[LibraryConfiguration libraryItemOpenHandler]
  -[LibraryConfiguration setNavigationIntentHandler:]
  -[LibraryConfiguration .cxx_destruct]
  -[LibraryConfiguration setTabGroupProvider:]
  -[LibraryConfiguration setLibraryItemOpenHandler:]
  -[LibraryConfiguration downloadOpenHandler]
  -[LibraryConfiguration setBookmarksNavigationControllerDelegate:]
  -[LibraryConfiguration setLinkPreviewProvider:]
  -[LibraryConfiguration navigationIntentHandler]
  -[LibraryConfiguration setDownloadOpenHandler:]
  -[LibraryConfiguration bookmarksNavigationControllerDelegate]
  -[LibraryConfiguration linkPreviewProvider]


CompletionListGroup : SFResultSection
 @property  NSString *headerViewReuseIdentifier
 @property  NSArray *completions
 @property  NSString *defaultHeaderTitle

  // instance methods
  -[CompletionListGroup defaultHeaderTitle]
  -[CompletionListGroup .cxx_destruct]
  -[CompletionListGroup completions]
  -[CompletionListGroup configureHeaderView:forCompletionList:]
  -[CompletionListGroup setCompletions:]
  -[CompletionListGroup headerView]
  -[CompletionListGroup headerViewReuseIdentifier]
  -[CompletionListGroup initWithTitle:completions:maximumNumberOfCompletions:]


URLCompletionMatchBookmarkData : NSObject <WBSURLCompletionMatchData>
 @property  WebBookmark *bookmark
 @property  NSString *originalURLString
 @property  BOOL containsBookmark
 @property  double lastVisitedTimeInterval
 @property  BOOL lastVisitWasFailure
 @property  BOOL shouldPreload
 @property  long long visitCount
 @property  long long visitCountScore
 @property  BOOL visitWasClientError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[URLCompletionMatchBookmarkData bookmark]
  -[URLCompletionMatchBookmarkData lastVisitedTimeInterval]
  -[URLCompletionMatchBookmarkData .cxx_destruct]
  -[URLCompletionMatchBookmarkData lastVisitWasFailure]
  -[URLCompletionMatchBookmarkData initWithBookmark:]
  -[URLCompletionMatchBookmarkData pageTitleAtIndex:]
  -[URLCompletionMatchBookmarkData pageTitleForUserVisibleURLStringAtIndex:]
  -[URLCompletionMatchBookmarkData originalURLString]
  -[URLCompletionMatchBookmarkData containsBookmark]
  -[URLCompletionMatchBookmarkData userVisibleURLStringForPageTitleAtIndex:]
  -[URLCompletionMatchBookmarkData userVisibleURLStringAtIndex:]
  -[URLCompletionMatchBookmarkData enumeratePageTitlesUsingBlock:]
  -[URLCompletionMatchBookmarkData enumerateUserVisibleURLsUsingBlock:]
  -[URLCompletionMatchBookmarkData topSitesScoreForPageTitleAtTime:]
  -[URLCompletionMatchBookmarkData visitCountScoreForPageTitleAtTime]
  -[URLCompletionMatchBookmarkData topSitesScoreForURLStringAtIndex:atTime:]
  -[URLCompletionMatchBookmarkData visitCountScoreForURLStringAtIndex:]
  -[URLCompletionMatchBookmarkData matchDataByMergingWithMatchData:]
  -[URLCompletionMatchBookmarkData matchesAutocompleteTrigger:isStrengthened:]
  -[URLCompletionMatchBookmarkData shouldPreload]
  -[URLCompletionMatchBookmarkData _userVisibleURLString]
  -[URLCompletionMatchBookmarkData _topSitesScoreAtTime:]
  -[URLCompletionMatchBookmarkData initWithBookmark:shouldPreload:]


PendingReadingListItem : NSObject
 @property  WebBookmark *bookmark
 @property  <ReadingListMetadataProvider> *provider

  // class methods
  +[PendingReadingListItem itemWithBookmark:provider:]

  // instance methods
  -[PendingReadingListItem bookmark]
  -[PendingReadingListItem .cxx_destruct]
  -[PendingReadingListItem provider]


ReadingListMetadataProvider : NSObject <ReadingListMetadataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReadingListMetadataProvider .cxx_destruct]
  -[ReadingListMetadataProvider init]
  -[ReadingListMetadataProvider fetchMetadataForBookmark:completion:]


ReadingListMetadataFetcher : NSObject
  // class methods
  +[ReadingListMetadataFetcher sharedMetadataFetcher]
  +[ReadingListMetadataFetcher shouldFetchMetadataForBookmark:]
  +[ReadingListMetadataFetcher shouldFetchThumbnailForBookmark:]

  // instance methods
  -[ReadingListMetadataFetcher .cxx_destruct]
  -[ReadingListMetadataFetcher _initWithBookmarkCollection:]
  -[ReadingListMetadataFetcher _queue:containsBookmark:]
  -[ReadingListMetadataFetcher _fetchNextItemMetadata]
  -[ReadingListMetadataFetcher _fetchNextItemThumbnail]
  -[ReadingListMetadataFetcher _fetchMetadataWithDefaultProviderForPendingItem:]
  -[ReadingListMetadataFetcher _setTitle:previewText:thumbnailURLString:thumbnailImage:forItem:]
  -[ReadingListMetadataFetcher _didFinishFetchingMetadataForItem:]
  -[ReadingListMetadataFetcher _didFailMetadataFetchForBookmarkWithID:]
  -[ReadingListMetadataFetcher _fetchThumbnailWithDefaultProviderForPendingItem:]
  -[ReadingListMetadataFetcher _setThumbnailImage:fromURL:forBookmarkWithID:]
  -[ReadingListMetadataFetcher _didFinishFetchingThumbnailForItem:]
  -[ReadingListMetadataFetcher _lockAndSaveBookmark:postNotification:]
  -[ReadingListMetadataFetcher _fetchMetadataForPendingItem:]
  -[ReadingListMetadataFetcher _fetchThumbnailForPendingItem:]
  -[ReadingListMetadataFetcher fetchMetadataForReadingListBookmark:withProvider:]
  -[ReadingListMetadataFetcher fetchThumbnailForReadingListBookmark:withProvider:]


TabGroupPickerViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDragDelegate, UICollectionViewDropDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabGroupPickerViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[TabGroupPickerViewController collectionView:canFocusItemAtIndexPath:]
  -[TabGroupPickerViewController collectionView:performDropWithCoordinator:]
  -[TabGroupPickerViewController _collectionView:dataOwnerForDropSession:withDestinationIndexPath:]
  -[TabGroupPickerViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[TabGroupPickerViewController _collectionView:dataOwnerForDragSession:atIndexPath:]
  -[TabGroupPickerViewController collectionView:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:]
  -[TabGroupPickerViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[TabGroupPickerViewController collectionView:didSelectItemAtIndexPath:]
  -[TabGroupPickerViewController doneButtonTapped]
  -[TabGroupPickerViewController setEditing:animated:]
  -[TabGroupPickerViewController .cxx_destruct]
  -[TabGroupPickerViewController viewDidLoad]
  -[TabGroupPickerViewController reloadData]
  -[TabGroupPickerViewController loadView]
  -[TabGroupPickerViewController initWithTabGroupProvider:]
  -[TabGroupPickerViewController _swipeActionsConfigurationForIndexPath:]
  -[TabGroupPickerViewController _shouldShowCheckmarkForTabGroup:]
  -[TabGroupPickerViewController _checkmarkAccessory]
  -[TabGroupPickerViewController _enumerateTabGroupSectionsWithBlock:]


CompletionDetailViewController : UINavigationController <UIAdaptivePresentationControllerDelegate>
 @property  <CompletionDetailViewControllerDelegate> *completionDetailViewControllerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CompletionDetailViewController presentationControllerDidDismiss:]
  -[CompletionDetailViewController .cxx_destruct]
  -[CompletionDetailViewController presentationControllerWillDismiss:]
  -[CompletionDetailViewController initWithRootViewController:]
  -[CompletionDetailViewController _dismissCompletionDetailSheet]
  -[CompletionDetailViewController _willDismissCompletionDetailSheet]
  -[CompletionDetailViewController _didDismissCompletionDetailSheet]
  -[CompletionDetailViewController completionDetailViewControllerDelegate]
  -[CompletionDetailViewController setCompletionDetailViewControllerDelegate:]


DownloadsViewController : SFPopoverSizingTableViewController <DownloadTableViewCellDelegate, UITableViewDragDelegate_Private>
 @property  <DownloadOpenHandler> *downloadOpenHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DownloadsViewController tableViewCellForSizeEstimation]

  // instance methods
  -[DownloadsViewController preferredContentSize]
  -[DownloadsViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[DownloadsViewController tableView:canEditRowAtIndexPath:]
  -[DownloadsViewController tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:]
  -[DownloadsViewController numberOfSectionsInTableView:]
  -[DownloadsViewController cancelDownload:]
  -[DownloadsViewController tableView:numberOfRowsInSection:]
  -[DownloadsViewController .cxx_destruct]
  -[DownloadsViewController tableView:didSelectRowAtIndexPath:]
  -[DownloadsViewController viewDidLoad]
  -[DownloadsViewController tableView:cellForRowAtIndexPath:]
  -[DownloadsViewController _dismiss]
  -[DownloadsViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[DownloadsViewController downloadOpenHandler]
  -[DownloadsViewController _downloadsDidChange:]
  -[DownloadsViewController tableView:shouldHighlightRowAtIndexPath:]
  -[DownloadsViewController initWithStyle:]
  -[DownloadsViewController tableView:dragPreviewParametersForRowAtIndexPath:]
  -[DownloadsViewController viewWillDisappear:]
  -[DownloadsViewController viewWillAppear:]
  -[DownloadsViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[DownloadsViewController setDownloadOpenHandler:]
  -[DownloadsViewController tableView:canFocusRowAtIndexPath:]
  -[DownloadsViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[DownloadsViewController resumeDownload:]
  -[DownloadsViewController _tableView:dataOwnerForDragSession:atIndexPath:]
  -[DownloadsViewController tableView:itemsForAddingToDragSession:atIndexPath:point:]
  -[DownloadsViewController maximumNumberOfRows]
  -[DownloadsViewController safari_prefersHalfHeightSheetPresentationWithLoweredBar]
  -[DownloadsViewController minimumNumberOfRows]
  -[DownloadsViewController quickLookTransitionViewForDownload:]
  -[DownloadsViewController _clearAllDownloads]
  -[DownloadsViewController _updateDoneButton]
  -[DownloadsViewController revealDownload:]


ManageWebExtensionsActivity : UIActivity <WBSExtensionsControllerObserver>
 @property  UIActivityViewController *parentActivityViewController

  // instance methods
  -[ManageWebExtensionsActivity activityViewController]
  -[ManageWebExtensionsActivity .cxx_destruct]
  -[ManageWebExtensionsActivity _systemImageName]
  -[ManageWebExtensionsActivity activityType]
  -[ManageWebExtensionsActivity canPerformWithActivityItems:]
  -[ManageWebExtensionsActivity init]
  -[ManageWebExtensionsActivity activityTitle]
  -[ManageWebExtensionsActivity dealloc]
  -[ManageWebExtensionsActivity _activityBadgeText]
  -[ManageWebExtensionsActivity _activityBadgeColor]
  -[ManageWebExtensionsActivity _activityBadgeTextColor]
  -[ManageWebExtensionsActivity extensionsControllerExtensionListDidChange:]
  -[ManageWebExtensionsActivity setParentActivityViewController:]
  -[ManageWebExtensionsActivity _reloadBadgeCount]
  -[ManageWebExtensionsActivity parentActivityViewController]


BookmarksNavigationBar : UINavigationBar
  // instance methods
  -[BookmarksNavigationBar traitCollectionDidChange:]
  -[BookmarksNavigationBar .cxx_destruct]
  -[BookmarksNavigationBar layoutSubviews]
  -[BookmarksNavigationBar initWithFrame:]


URLCompletionMatchBookmarkListData : NSObject <WBSURLCompletionMatchData>
 @property  NSString *originalURLString
 @property  BOOL containsBookmark
 @property  double lastVisitedTimeInterval
 @property  BOOL lastVisitWasFailure
 @property  BOOL shouldPreload
 @property  long long visitCount
 @property  long long visitCountScore
 @property  BOOL visitWasClientError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[URLCompletionMatchBookmarkListData bookmark]
  -[URLCompletionMatchBookmarkListData lastVisitedTimeInterval]
  -[URLCompletionMatchBookmarkListData .cxx_destruct]
  -[URLCompletionMatchBookmarkListData lastVisitWasFailure]
  -[URLCompletionMatchBookmarkListData pageTitleAtIndex:]
  -[URLCompletionMatchBookmarkListData pageTitleForUserVisibleURLStringAtIndex:]
  -[URLCompletionMatchBookmarkListData originalURLString]
  -[URLCompletionMatchBookmarkListData containsBookmark]
  -[URLCompletionMatchBookmarkListData userVisibleURLStringForPageTitleAtIndex:]
  -[URLCompletionMatchBookmarkListData userVisibleURLStringAtIndex:]
  -[URLCompletionMatchBookmarkListData enumeratePageTitlesUsingBlock:]
  -[URLCompletionMatchBookmarkListData enumerateUserVisibleURLsUsingBlock:]
  -[URLCompletionMatchBookmarkListData topSitesScoreForPageTitleAtTime:]
  -[URLCompletionMatchBookmarkListData visitCountScoreForPageTitleAtTime]
  -[URLCompletionMatchBookmarkListData topSitesScoreForURLStringAtIndex:atTime:]
  -[URLCompletionMatchBookmarkListData visitCountScoreForURLStringAtIndex:]
  -[URLCompletionMatchBookmarkListData matchDataByMergingWithMatchData:]
  -[URLCompletionMatchBookmarkListData matchesAutocompleteTrigger:isStrengthened:]
  -[URLCompletionMatchBookmarkListData shouldPreload]
  -[URLCompletionMatchBookmarkListData initWithBookmark:andBookmark:]
  -[URLCompletionMatchBookmarkListData initWithBookmark:historyMatchData:]
  -[URLCompletionMatchBookmarkListData _bookmarkUserVisibleURLString]
  -[URLCompletionMatchBookmarkListData _historyItemUserVisibleURLString]


TabOverviewItem : NSObject <TabCollectionItem>
 @property  BOOL isPlaceholder
 @property  NSString *title
 @property  UIImage *icon
 @property  unsigned long mediaStateIcon
 @property  NSUUID *UUID
 @property  long long dragState
 @property  BOOL recording
 @property  long long tintStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabOverviewItem isRecording]
  -[TabOverviewItem setIsPlaceholder:]
  -[TabOverviewItem UUID]
  -[TabOverviewItem icon]
  -[TabOverviewItem setTitle:]
  -[TabOverviewItem setTintStyle:]
  -[TabOverviewItem .cxx_destruct]
  -[TabOverviewItem tintStyle]
  -[TabOverviewItem setMediaStateIcon:]
  -[TabOverviewItem mediaStateIcon]
  -[TabOverviewItem setIcon:]
  -[TabOverviewItem title]
  -[TabOverviewItem setDragState:]
  -[TabOverviewItem isPlaceholder]
  -[TabOverviewItem dragState]
  -[TabOverviewItem setUUID:]


PencilInputCompletionProvider : CompletionProvider
  // instance methods
  -[PencilInputCompletionProvider setQueryToComplete:]
  -[PencilInputCompletionProvider maximumCachedCompletionCount]


PencilInputCompletionItem : NSObject <CompletionItem>
 @property  NSString *text
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PencilInputCompletionItem .cxx_destruct]
  -[PencilInputCompletionItem isEquivalentTo:]
  -[PencilInputCompletionItem parsecQueryID]
  -[PencilInputCompletionItem setParsecQueryID:]
  -[PencilInputCompletionItem text]
  -[PencilInputCompletionItem parsecDomainIdentifier]
  -[PencilInputCompletionItem sfSearchResultValue]
  -[PencilInputCompletionItem engagementDestination]
  -[PencilInputCompletionItem completionTableViewCellReuseIdentifier]
  -[PencilInputCompletionItem acceptCompletionWithActionHandler:]
  -[PencilInputCompletionItem auditAcceptedCompletionWithRank:]
  -[PencilInputCompletionItem completionTableViewCellForCompletionList:]
  -[PencilInputCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[PencilInputCompletionItem reflectedStringForUserTypedString:]
  -[PencilInputCompletionItem initWithUserQuery:navigationURL:searchQuery:]


CloudTabHeaderView : UIView
 @property  NSString *text
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} labelFrame

  // class methods
  +[CloudTabHeaderView defaultHeightForStyle:]

  // instance methods
  -[CloudTabHeaderView setText:]
  -[CloudTabHeaderView traitCollectionDidChange:]
  -[CloudTabHeaderView .cxx_destruct]
  -[CloudTabHeaderView layoutSubviews]
  -[CloudTabHeaderView labelFrame]
  -[CloudTabHeaderView sizeThatFits:]
  -[CloudTabHeaderView initWithStyle:]
  -[CloudTabHeaderView text]
  -[CloudTabHeaderView _iconSizeThatFits:]


HistoryLibraryItemController : LibraryItemController <HistoryTableViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HistoryLibraryItemController viewController]
  -[HistoryLibraryItemController .cxx_destruct]
  -[HistoryLibraryItemController selectionFollowsFocus]
  -[HistoryLibraryItemController panelViewControllerShouldTranslucentAppearance:]
  -[HistoryLibraryItemController updateListContentConfiguration:]


ContentAnimationTestRunner : PurplePageLoadTestRunner
  // instance methods
  -[ContentAnimationTestRunner .cxx_destruct]
  -[ContentAnimationTestRunner initWithTestName:browserController:]
  -[ContentAnimationTestRunner startPageAction:]
  -[ContentAnimationTestRunner outputDataForPage:]
  -[ContentAnimationTestRunner finishedTestPage:]
  -[ContentAnimationTestRunner writeOutputData]
  -[ContentAnimationTestRunner finishedTestRunner]
  -[ContentAnimationTestRunner performActionForPage:]
  -[ContentAnimationTestRunner finalStatusForPage:]


History : WBUHistory <WKHistoryDelegatePrivate>
 @property  _WKVisitedLinkStore *visitedLinkStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[History sharedHistory]
  +[History partOfDayFromHourOfDay:]
  +[History titleForHistoryItem:]
  +[History hourRangeFromPartOfDay:]
  +[History dayWithPeriodOfDayStringForDate:]
  +[History _localizedStringForWeekday:partOfDay:]
  +[History _localizedStringForTodayWithPartOfDay:]

  // instance methods
  -[History _updateForWKWebView:browserController:updates:]
  -[History removeItem:]
  -[History visitedLinkStore]
  -[History .cxx_destruct]
  -[History _weekdayMonthDateStringForDate:]
  -[History _webView:didNavigateWithNavigationData:]
  -[History titleForDate:]
  -[History cancelDeferredUpdates]
  -[History _removeAllVisitedLinks]
  -[History init]
  -[History _webView:didUpdateHistoryTitle:forURL:]
  -[History historyStoreShouldCheckDatabaseIntegrity:]
  -[History _webView:didPerformServerRedirectFromURL:toURL:]
  -[History _historyItemClass]
  -[History localeChanged:]
  -[History dealloc]
  -[History _webView:didPerformClientRedirectFromURL:toURL:]
  -[History newDateFormatterForLocale:formatType:]
  -[History commitDeferredUpdates]
  -[History _addVisitedLinksForItemsIfNeeded:]


SidebarViewController : UIViewController
 @property  double separatorWidth
 @property  {UIEdgeInsets=dddd} wallpaperObscuredInsets
 @property  UIViewController *contentViewController

  // instance methods
  -[SidebarViewController setContentViewController:]
  -[SidebarViewController viewWillLayoutSubviews]
  -[SidebarViewController .cxx_destruct]
  -[SidebarViewController viewDidLoad]
  -[SidebarViewController contentViewController]
  -[SidebarViewController viewDidLayoutSubviews]
  -[SidebarViewController separatorWidth]
  -[SidebarViewController setWallpaperObscuredInsets:]
  -[SidebarViewController _updateWallpaperImage]
  -[SidebarViewController _updateWallpaperInset]
  -[SidebarViewController _springBoardWallpaperDidChange:]
  -[SidebarViewController _setWallpaperImage:]
  -[SidebarViewController wallpaperObscuredInsets]


LoadingController : NSObject
 @property  WKWebView *webView
 @property  float estimatedProgress
 @property  BOOL canGoBack
 @property  BOOL canGoForward
 @property  NSString *title
 @property  NSURL *URL
 @property  NSString *titleForStatePersisting
 @property  NSURL *URLForStatePersisting
 @property  <LoadingControllerDelegate> *delegate

  // instance methods
  -[LoadingController goForward]
  -[LoadingController webView]
  -[LoadingController URLForStatePersisting]
  -[LoadingController goBack]
  -[LoadingController canGoBack]
  -[LoadingController estimatedProgress]
  -[LoadingController canGoForward]
  -[LoadingController loadRequest:userDriven:]
  -[LoadingController stopLoading]
  -[LoadingController setTitle:]
  -[LoadingController setURL:]
  -[LoadingController .cxx_destruct]
  -[LoadingController reloadFromOrigin:]
  -[LoadingController setDelegate:]
  -[LoadingController titleForStatePersisting]
  -[LoadingController loadRequest:userDriven:shouldOpenExternalURLs:]
  -[LoadingController title]
  -[LoadingController URL]
  -[LoadingController delegate]
  -[LoadingController setEstimatedProgress:]
  -[LoadingController setWebView:]
  -[LoadingController loadRequest:userDriven:shouldOpenExternalURLs:eventAttribution:]


HistoryTableViewController : PreviewTableViewController <BookmarksToolbarItemProvider, HistoryTableViewDataSourceDelegate, UISearchBarDelegate, UITableViewDragDelegate, BookmarksPanelStateRestoring, PreviewTableViewControllerDelegate>
 @property  <HistoryTableViewControllerDelegate> *delegate
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  <TabGroupProvider> *tabGroupProvider
 @property  NSArray *bookmarksPanelToolbarItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HistoryTableViewController _contentSizeCategoryDidChange:]
  -[HistoryTableViewController tabGroupProvider]
  -[HistoryTableViewController setNavigationIntentHandler:]
  -[HistoryTableViewController tableView:canEditRowAtIndexPath:]
  -[HistoryTableViewController tableView:viewForHeaderInSection:]
  -[HistoryTableViewController traitCollectionDidChange:]
  -[HistoryTableViewController _endEditing]
  -[HistoryTableViewController numberOfSectionsInTableView:]
  -[HistoryTableViewController setEditing:animated:]
  -[HistoryTableViewController tableView:numberOfRowsInSection:]
  -[HistoryTableViewController tableView:titleForHeaderInSection:]
  -[HistoryTableViewController .cxx_destruct]
  -[HistoryTableViewController tableView:didSelectRowAtIndexPath:]
  -[HistoryTableViewController setTabGroupProvider:]
  -[HistoryTableViewController viewDidLoad]
  -[HistoryTableViewController _updateContentOffsetIfNeeded]
  -[HistoryTableViewController tableView:cellForRowAtIndexPath:]
  -[HistoryTableViewController setDelegate:]
  -[HistoryTableViewController init]
  -[HistoryTableViewController _doneBarButtonItem]
  -[HistoryTableViewController willMoveToParentViewController:]
  -[HistoryTableViewController searchBarSearchButtonClicked:]
  -[HistoryTableViewController viewWillDisappear:]
  -[HistoryTableViewController viewDidLayoutSubviews]
  -[HistoryTableViewController viewWillAppear:]
  -[HistoryTableViewController currentStateDictionary]
  -[HistoryTableViewController delegate]
  -[HistoryTableViewController navigationIntentHandler]
  -[HistoryTableViewController tableView:trailingSwipeActionsForRowAtIndexPath:]
  -[HistoryTableViewController dealloc]
  -[HistoryTableViewController _separatorEffect]
  -[HistoryTableViewController tableView:canFocusRowAtIndexPath:]
  -[HistoryTableViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[HistoryTableViewController searchBar:textDidChange:]
  -[HistoryTableViewController _tableView:dataOwnerForDragSession:atIndexPath:]
  -[HistoryTableViewController tableView:itemsForAddingToDragSession:atIndexPath:point:]
  -[HistoryTableViewController safari_wantsDoneButtonInModalBookmarksPanel]
  -[HistoryTableViewController updateClearHistoryButtonEnable]
  -[HistoryTableViewController bookmarksPanelToolbarItems]
  -[HistoryTableViewController restoreStateWithDictionary:]
  -[HistoryTableViewController safari_tableViewScrollPositionSaveIdentifier]
  -[HistoryTableViewController _clearHistoryBarButtonItem]
  -[HistoryTableViewController _setUpClearHistoryMenu]
  -[HistoryTableViewController _clearHistoryText]
  -[HistoryTableViewController _saveChangesToCloudHistorySoon]
  -[HistoryTableViewController _shouldUseTranslucentAppearance]
  -[HistoryTableViewController _saveChangesToCloudHistory]
  -[HistoryTableViewController _urlForRowAtIndexPath:]
  -[HistoryTableViewController _deleteRowAtIndexPath:]
  -[HistoryTableViewController _updateClearHistoryMenuTitle]
  -[HistoryTableViewController historyTableViewDataSourceDidLoadContent:]
  -[HistoryTableViewController historyTableViewDataSourceWillChangeContent:]
  -[HistoryTableViewController historyTableViewDataSourceDidChangeContent:]
  -[HistoryTableViewController historyTableViewDataSource:didChangeSectionAtIndex:forChangeType:]
  -[HistoryTableViewController historyTableViewDataSource:didChangeRowAtIndexPath:forChangeType:]
  -[HistoryTableViewController previewTableViewController:URLForRowAtIndexPath:]
  -[HistoryTableViewController previewTableViewController:menuForRowAtIndexPath:]


MemoryAndIOTestRunner : NSObject
 @property  NSURL *testPageURL

  // instance methods
  -[MemoryAndIOTestRunner .cxx_destruct]
  -[MemoryAndIOTestRunner testPageURL]
  -[MemoryAndIOTestRunner initWithTestName:browserController:type:]
  -[MemoryAndIOTestRunner runTestWithCompletion:]
  -[MemoryAndIOTestRunner _collectTestResults]
  -[MemoryAndIOTestRunner _openNewTabAndLoadTestURL]
  -[MemoryAndIOTestRunner _collectCurrentLiveTabs]
  -[MemoryAndIOTestRunner _collectMemoryUsageInfo:]
  -[MemoryAndIOTestRunner _collectIOUsageInfo:]


AbstractCatalogViewController : UIViewController
 @property  double requiredContentWidth
 @property  UIViewController *foregroundChildViewController
 @property  CompletionListTableViewController *completionsViewController
 @property  CompletionListTableViewController *completionsViewControllerIfLoaded
 @property  SFStartPageViewController *startPageViewController
 @property  UniversalSearchFirstTimeExperienceViewController *universalSearchFirstTimeExperienceViewController

  // instance methods
  -[AbstractCatalogViewController didGainOwnershipOfStartPageViewController]
  -[AbstractCatalogViewController startPageViewController]
  -[AbstractCatalogViewController requiredContentWidth]
  -[AbstractCatalogViewController completionsViewControllerIfLoaded]
  -[AbstractCatalogViewController completionsViewController]
  -[AbstractCatalogViewController universalSearchFirstTimeExperienceViewController]
  -[AbstractCatalogViewController didGainOwnershipOfCompletionsViewController]
  -[AbstractCatalogViewController didGainOwnershipOfUniversalSearchFirstTimeExperienceViewController]
  -[AbstractCatalogViewController viewWillLayoutSubviews]
  -[AbstractCatalogViewController preferredContentSizeDidChangeForChildContentContainer:]
  -[AbstractCatalogViewController relinquishOwnershipOfUniversalSearchFirstTimeExperienceViewControllerFromCurrentParent]
  -[AbstractCatalogViewController viewWillAppear:]
  -[AbstractCatalogViewController relinquishOwnershipOfCompletionsViewControllerFromCurrentParent]
  -[AbstractCatalogViewController updatePreferredContentSize]
  -[AbstractCatalogViewController foregroundChildViewController]
  -[AbstractCatalogViewController isResponsibleForLayoutOfViewController:]
  -[AbstractCatalogViewController _takeOwnershipOfViewController:]
  -[AbstractCatalogViewController _relinquishOwnershipOfViewControllerFromCurrentParent:]
  -[AbstractCatalogViewController setForegroundChildViewControllerNeedsUpdate]
  -[AbstractCatalogViewController takeOwnershipOfCompletionsViewController]
  -[AbstractCatalogViewController takeOwnershipOfStartPageViewController]
  -[AbstractCatalogViewController relinquishOwnershipOfStartPageViewControllerFromCurrentParent]
  -[AbstractCatalogViewController takeOwnershipOfUniversalSearchFirstTimeExperienceViewController]


PageLoadTestRunner : NSObject
 @property  NSString *testName
 @property  NSString *logFile
 @property  NSString *outputFilename
 @property  NSString *suiteName
 @property  unsigned long skipCount
 @property  BOOL disableProgressBar
 @property  BOOL failFast
 @property  BOOL resetsZoomBetweenPages
 @property  double pageTimeout
 @property  double pageActionInterval
 @property  double pageRestInterval
 @property  int cacheClearDirective
 @property  BOOL collectHeapStatistics
 @property  BOOL checkForWorldLeaks
 @property  <PageLoadTestRunnerDelegate> *delegate
 @property  unsigned long tabCount
 @property  BOOL loadURLInNewTab
 @property  BrowserController *browserController

  // class methods
  +[PageLoadTestRunner heapStatistics]
  +[PageLoadTestRunner addLeakToArray:count:name:]
  +[PageLoadTestRunner worldLeaksString]
  +[PageLoadTestRunner closingBrowserWindowsForWorldLeakTest]

  // instance methods
  -[PageLoadTestRunner browserController]
  -[PageLoadTestRunner suiteName]
  -[PageLoadTestRunner log:]
  -[PageLoadTestRunner setOutputFilename:]
  -[PageLoadTestRunner .cxx_destruct]
  -[PageLoadTestRunner testName]
  -[PageLoadTestRunner setSkipCount:]
  -[PageLoadTestRunner outputFilename]
  -[PageLoadTestRunner setDelegate:]
  -[PageLoadTestRunner logFile]
  -[PageLoadTestRunner skipCount]
  -[PageLoadTestRunner finish]
  -[PageLoadTestRunner delegate]
  -[PageLoadTestRunner start]
  -[PageLoadTestRunner dealloc]
  -[PageLoadTestRunner setSuiteName:]
  -[PageLoadTestRunner setTestName:]
  -[PageLoadTestRunner setTestOptions:]
  -[PageLoadTestRunner setLogFile:]
  -[PageLoadTestRunner initWithTestName:browserController:]
  -[PageLoadTestRunner setResetsZoomBetweenPages:]
  -[PageLoadTestRunner startPageAction:]
  -[PageLoadTestRunner finishedTestPage:]
  -[PageLoadTestRunner finishedTestRunner]
  -[PageLoadTestRunner performActionForPage:]
  -[PageLoadTestRunner _closeLogStream]
  -[PageLoadTestRunner loadTestSuiteFile:]
  -[PageLoadTestRunner addPageURL:withProcessSwap:]
  -[PageLoadTestRunner setExistingProperty:to:]
  -[PageLoadTestRunner removeURLsInRange:]
  -[PageLoadTestRunner checkForWorldLeaksNow]
  -[PageLoadTestRunner clearCacheWithURL:]
  -[PageLoadTestRunner startNextPage]
  -[PageLoadTestRunner _startNextPageNow]
  -[PageLoadTestRunner startingTestRunner]
  -[PageLoadTestRunner _pageTimeoutExpired:]
  -[PageLoadTestRunner startingTestPage:]
  -[PageLoadTestRunner finishPage:stats:error:]
  -[PageLoadTestRunner checkForWorldLeaksSoon]
  -[PageLoadTestRunner finishedTestRunnerIteration]
  -[PageLoadTestRunner _updatePageLoad:stats:]
  -[PageLoadTestRunner _checkRedirect:]
  -[PageLoadTestRunner _pageRestExpired:]
  -[PageLoadTestRunner _handleActionTimer:]
  -[PageLoadTestRunner resetsZoomBetweenPages]
  -[PageLoadTestRunner closeBrowserWindows]
  -[PageLoadTestRunner finishCheckingForWorldLeaks]
  -[PageLoadTestRunner closeBrowserWindowsAndFinishCheckingForWorldLeaks]
  -[PageLoadTestRunner _pageLoadForTabDocument:]
  -[PageLoadTestRunner disableProgressBar]
  -[PageLoadTestRunner setDisableProgressBar:]
  -[PageLoadTestRunner failFast]
  -[PageLoadTestRunner setFailFast:]
  -[PageLoadTestRunner pageTimeout]
  -[PageLoadTestRunner setPageTimeout:]
  -[PageLoadTestRunner pageActionInterval]
  -[PageLoadTestRunner setPageActionInterval:]
  -[PageLoadTestRunner pageRestInterval]
  -[PageLoadTestRunner setPageRestInterval:]
  -[PageLoadTestRunner cacheClearDirective]
  -[PageLoadTestRunner setCacheClearDirective:]
  -[PageLoadTestRunner collectHeapStatistics]
  -[PageLoadTestRunner setCollectHeapStatistics:]
  -[PageLoadTestRunner checkForWorldLeaks]
  -[PageLoadTestRunner setCheckForWorldLeaks:]
  -[PageLoadTestRunner tabCount]
  -[PageLoadTestRunner setTabCount:]
  -[PageLoadTestRunner loadURLInNewTab]
  -[PageLoadTestRunner setLoadURLInNewTab:]


PurplePageLoadTestRunner : PageLoadTestRunner
 @property  BOOL showLoadTime
 @property  BOOL showFirstVisualLayoutTime
 @property  BOOL showRenderTime
 @property  BOOL showRenderFps

  // instance methods
  -[PurplePageLoadTestRunner .cxx_destruct]
  -[PurplePageLoadTestRunner initWithTestName:browserController:]
  -[PurplePageLoadTestRunner initRenderTestWithName:browserController:showRenderTime:showFPS:]
  -[PurplePageLoadTestRunner writeOutputData]
  -[PurplePageLoadTestRunner finishedTestRunner]
  -[PurplePageLoadTestRunner startingTestRunner]
  -[PurplePageLoadTestRunner finishedTestRunnerIteration]
  -[PurplePageLoadTestRunner collectPPTResults]
  -[PurplePageLoadTestRunner pptResultFor:measure:value:units:]
  -[PurplePageLoadTestRunner pptResultFor:measure:time:]
  -[PurplePageLoadTestRunner showLoadTime]
  -[PurplePageLoadTestRunner setShowLoadTime:]
  -[PurplePageLoadTestRunner showFirstVisualLayoutTime]
  -[PurplePageLoadTestRunner setShowFirstVisualLayoutTime:]
  -[PurplePageLoadTestRunner showRenderTime]
  -[PurplePageLoadTestRunner setShowRenderTime:]
  -[PurplePageLoadTestRunner showRenderFps]
  -[PurplePageLoadTestRunner setShowRenderFps:]


PurplePageMemoryTestRunner : PurplePageLoadTestRunner
  // instance methods
  -[PurplePageMemoryTestRunner initWithTestName:browserController:]
  -[PurplePageMemoryTestRunner _updatePageLoad:stats:]
  -[PurplePageMemoryTestRunner collectPPTResults]


PurpleFlowManagedPageLoadTestRunner : PurplePageLoadTestRunner
  // instance methods
  -[PurpleFlowManagedPageLoadTestRunner dealloc]
  -[PurpleFlowManagedPageLoadTestRunner initWithTestName:browserController:]
  -[PurpleFlowManagedPageLoadTestRunner startNextPage]


PageLoad : NSObject
 @property  BOOL swapProcess
 @property  NSURL *URL
 @property  NSURL *redirectURL
 @property  NSDate *uiProcessStartDate
 @property  NSDate *webContentProcessStartLoadDate
 @property  NSDate *redirectDate
 @property  NSDate *endLoadDate
 @property  NSDate *firstVisualLayoutDate
 @property  NSDate *domContentLoadedDate
 @property  NSDate *firstMeaningfulPaintDate
 @property  NSDate *allSubresourcesLoadedDate
 @property  NSError *error
 @property  NSDate *startRenderDate
 @property  {?=ii} heapBefore
 @property  {?=ii} heapAfter
 @property  unsigned long memoryBeforeWarning
 @property  unsigned long memoryAfterWarning
 @property  {CGSize=dd} contentSizeAtPageLoad
 @property  BOOL tooShortToScroll

  // instance methods
  -[PageLoad redirectURL]
  -[PageLoad setURL:]
  -[PageLoad .cxx_destruct]
  -[PageLoad framesPerSecond]
  -[PageLoad timer]
  -[PageLoad setTimer:]
  -[PageLoad URL]
  -[PageLoad status]
  -[PageLoad setStatus:]
  -[PageLoad statusString]
  -[PageLoad dealloc]
  -[PageLoad setRedirectURL:]
  -[PageLoad setError:]
  -[PageLoad error]
  -[PageLoad renderDuration]
  -[PageLoad startRenderTime:]
  -[PageLoad initWithURL:withProcessSwap:]
  -[PageLoad setHeapBefore:]
  -[PageLoad setUiProcessStartDate:]
  -[PageLoad swapProcess]
  -[PageLoad setWebContentProcessStartLoadDate:]
  -[PageLoad endLoadDate]
  -[PageLoad setEndLoadDate:]
  -[PageLoad firstVisualLayoutDate]
  -[PageLoad setFirstVisualLayoutDate:]
  -[PageLoad domContentLoadedDate]
  -[PageLoad setDomContentLoadedDate:]
  -[PageLoad firstMeaningfulPaintDate]
  -[PageLoad setFirstMeaningfulPaintDate:]
  -[PageLoad allSubresourcesLoadedDate]
  -[PageLoad setAllSubresourcesLoadedDate:]
  -[PageLoad setHeapAfter:]
  -[PageLoad startRenderFps:]
  -[PageLoad finishRenderFps:]
  -[PageLoad webContentProcessStartLoadDate]
  -[PageLoad uiProcessStartDate]
  -[PageLoad memoryBeforeWarning]
  -[PageLoad setMemoryBeforeWarning:]
  -[PageLoad memoryAfterWarning]
  -[PageLoad setMemoryAfterWarning:]
  -[PageLoad finishRenderTime:]
  -[PageLoad startRenderDate]
  -[PageLoad setStartRenderDate:]
  -[PageLoad heapBefore]
  -[PageLoad heapAfter]
  -[PageLoad setSwapProcess:]
  -[PageLoad redirectDate]
  -[PageLoad setRedirectDate:]
  -[PageLoad contentSizeAtPageLoad]
  -[PageLoad setContentSizeAtPageLoad:]
  -[PageLoad isTooShortToScroll]
  -[PageLoad setTooShortToScroll:]


PageLoadTestStatistics : NSObject
 @property  WKNavigation *navigation
 @property  NSDate *firstVisualLayoutDate
 @property  NSDate *loadStartDate
 @property  NSDate *lastOnloadEventDate
 @property  NSDate *mainFrameLoadDate
 @property  NSDate *lastResourceLoadDate
 @property  NSDate *lastPageLoadEventDate
 @property  NSDate *domContentLoadedDate
 @property  NSDate *firstMeaningfulPaintDate
 @property  NSDate *allSubresourcesLoadedDate
 @property  NSError *loadError
 @property  @? callbackBlock
 @property  unsigned long memoryBeforeWarning
 @property  unsigned long memoryAfterWarning
 @property  double pageLoadingTimeoutInterval

  // class methods
  +[PageLoadTestStatistics setRestInterval:]

  // instance methods
  -[PageLoadTestStatistics .cxx_destruct]
  -[PageLoadTestStatistics loadError]
  -[PageLoadTestStatistics navigation]
  -[PageLoadTestStatistics dealloc]
  -[PageLoadTestStatistics setNavigation:]
  -[PageLoadTestStatistics initWithCallback:]
  -[PageLoadTestStatistics callbackBlock]
  -[PageLoadTestStatistics setLoadError:]
  -[PageLoadTestStatistics setCallbackBlock:]
  -[PageLoadTestStatistics setPageLoadingTimeoutInterval:]
  -[PageLoadTestStatistics loadStartDate]
  -[PageLoadTestStatistics lastPageLoadEventDate]
  -[PageLoadTestStatistics firstVisualLayoutDate]
  -[PageLoadTestStatistics setFirstVisualLayoutDate:]
  -[PageLoadTestStatistics domContentLoadedDate]
  -[PageLoadTestStatistics setDomContentLoadedDate:]
  -[PageLoadTestStatistics firstMeaningfulPaintDate]
  -[PageLoadTestStatistics setFirstMeaningfulPaintDate:]
  -[PageLoadTestStatistics allSubresourcesLoadedDate]
  -[PageLoadTestStatistics setAllSubresourcesLoadedDate:]
  -[PageLoadTestStatistics memoryBeforeWarning]
  -[PageLoadTestStatistics setMemoryBeforeWarning:]
  -[PageLoadTestStatistics memoryAfterWarning]
  -[PageLoadTestStatistics setMemoryAfterWarning:]
  -[PageLoadTestStatistics _cancelWaitForNewPageLoadEventsTimer]
  -[PageLoadTestStatistics _cancelPageLoadingTimeoutTimerIfNeeded]
  -[PageLoadTestStatistics _maybePageLoadFinishedForTests]
  -[PageLoadTestStatistics _pageLoadFinishedForTests]
  -[PageLoadTestStatistics _pageLoadEventsAreStillPending]
  -[PageLoadTestStatistics _scheduleWaitForNewPageLoadEventsTimer]
  -[PageLoadTestStatistics _waitForNewPageLoadEventsTimerFired:]
  -[PageLoadTestStatistics failedNavigation:withError:]
  -[PageLoadTestStatistics _pageLoadTimeoutTimerFired:]
  -[PageLoadTestStatistics handledOnloadEvents]
  -[PageLoadTestStatistics startedPageLoad]
  -[PageLoadTestStatistics startedNavigation:]
  -[PageLoadTestStatistics finishedLoadingResources]
  -[PageLoadTestStatistics startedLoadingResources]
  -[PageLoadTestStatistics finishedFirstVisualLayout]
  -[PageLoadTestStatistics finishedNavigation:]
  -[PageLoadTestStatistics pageLoadFinishedForTestsWK2WithLoadData:]
  -[PageLoadTestStatistics setLoadStartDate:]
  -[PageLoadTestStatistics lastOnloadEventDate]
  -[PageLoadTestStatistics setLastOnloadEventDate:]
  -[PageLoadTestStatistics mainFrameLoadDate]
  -[PageLoadTestStatistics setMainFrameLoadDate:]
  -[PageLoadTestStatistics lastResourceLoadDate]
  -[PageLoadTestStatistics setLastResourceLoadDate:]
  -[PageLoadTestStatistics setLastPageLoadEventDate:]
  -[PageLoadTestStatistics pageLoadingTimeoutInterval]


ActionPanelActivityItemProvider : _SFLinkWithPreviewActivityItemProvider
 @property  TabDocument *tabDocument

  // instance methods
  -[ActionPanelActivityItemProvider activityViewController:thumbnailImageForActivityType:suggestedSize:]
  -[ActionPanelActivityItemProvider .cxx_destruct]
  -[ActionPanelActivityItemProvider initWithPlaceholderItem:URL:pageTitle:webView:]
  -[ActionPanelActivityItemProvider tabDocument]
  -[ActionPanelActivityItemProvider initWithTabDocument:]
  -[ActionPanelActivityItemProvider initWithPlaceholderItem:tabDocument:]


ActionPanelWebPageExtensionItemProvider : _SFActivityExtensionItemProvider
  // instance methods
  -[ActionPanelWebPageExtensionItemProvider initWithExtensionItem:tabDocument:]


TabGroupLibrarySectionController : LibrarySectionController
  // instance methods
  -[TabGroupLibrarySectionController itemControllers]
  -[TabGroupLibrarySectionController initWithConfiguration:forSyncedGroups:]


BookmarksDatabaseHealthReporter : NSObject
  // instance methods
  -[BookmarksDatabaseHealthReporter reportDatabaseHealth]
  -[BookmarksDatabaseHealthReporter _userDefaults]
  -[BookmarksDatabaseHealthReporter _shouldReportDatabaseHealth]


LibraryCollectionViewCell : UICollectionViewListCell
  // instance methods
  -[LibraryCollectionViewCell setAccessories:]
  -[LibraryCollectionViewCell _updateAccessories:]
  -[LibraryCollectionViewCell updateConfigurationUsingState:]


ReadingListLibraryItemController : LibraryItemController <ReadingListViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReadingListLibraryItemController viewController]
  -[ReadingListLibraryItemController .cxx_destruct]
  -[ReadingListLibraryItemController isSpringLoaded]
  -[ReadingListLibraryItemController selectionFollowsFocus]
  -[ReadingListLibraryItemController readingListViewControllerCurrentReadingListItem:]
  -[ReadingListLibraryItemController readingListViewController:setBookmark:asRead:]
  -[ReadingListLibraryItemController readingListViewController:updateUnreadFilterShowingAllBookmarks:]
  -[ReadingListLibraryItemController _bookmarksNavigationControllerDelegate]
  -[ReadingListLibraryItemController updateListContentConfiguration:]
  -[ReadingListLibraryItemController dropOperationForSession:]
  -[ReadingListLibraryItemController dropIntentForSession:]
  -[ReadingListLibraryItemController performDropWithProposal:session:]


SidebarContentDimmingView : UIView <UIGestureRecognizerDelegate>
 @property  UIView *passthroughView
 @property  <SidebarContentDimmingViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SidebarContentDimmingView .cxx_destruct]
  -[SidebarContentDimmingView setDelegate:]
  -[SidebarContentDimmingView setTransparent:]
  -[SidebarContentDimmingView pointInside:withEvent:]
  -[SidebarContentDimmingView delegate]
  -[SidebarContentDimmingView setPassthroughView:]
  -[SidebarContentDimmingView initWithFrame:dimmedContentFrame:]
  -[SidebarContentDimmingView setDimmedContentFrame:]
  -[SidebarContentDimmingView _dismissRecognized:]
  -[SidebarContentDimmingView passthroughView]


SafariSettingsSyncEngine : WBSSafariSettingsSyncEngine
  // instance methods
  -[SafariSettingsSyncEngine _cloudSettingsDidUpdateOnServer:]
  -[SafariSettingsSyncEngine .cxx_destruct]
  -[SafariSettingsSyncEngine startPageSectionsManager]
  -[SafariSettingsSyncEngine _backgroundImageChanged:]
  -[SafariSettingsSyncEngine init]
  -[SafariSettingsSyncEngine _cloudBackgroundImageDidUpdateOnServer:]
  -[SafariSettingsSyncEngine _didUpdateStartPageSectionOrder:]
  -[SafariSettingsSyncEngine _sectionIdentifierToSettingName:]
  -[SafariSettingsSyncEngine _didUpdateStartPageBackgroundImageVisibility]
  -[SafariSettingsSyncEngine _didUpdateStartPageVisibility:]
  -[SafariSettingsSyncEngine _cloudBackgroundImageWasDeletedOnServer:]
  -[SafariSettingsSyncEngine syncEnabled]
  -[SafariSettingsSyncEngine _customizationPaletteWasDismissed:]


RecentWebSearchesController : _SFRecentWebSearchesController
  // class methods
  +[RecentWebSearchesController sharedController]
  +[RecentWebSearchesController _shouldTrackSearches]


TabExplanationView : UIView
 @property  unsigned long variant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} labelsContainerFrame

  // instance methods
  -[TabExplanationView variant]
  -[TabExplanationView setQuery:]
  -[TabExplanationView traitCollectionDidChange:]
  -[TabExplanationView updateConstraints]
  -[TabExplanationView .cxx_destruct]
  -[TabExplanationView _basicLabel]
  -[TabExplanationView _updateLabelBlendMode]
  -[TabExplanationView setVariant:query:]
  -[TabExplanationView initWithVariant:query:]
  -[TabExplanationView labelsContainerFrame]


WebExtensionWindow : NSObject <WBSWebExtensionWindow>
 @property  BrowserController *browserController
 @property  BOOL isPrivateWindow
 @property  double idForWebExtensions
 @property  BOOL isFocused
 @property  BOOL isPrivate
 @property  BOOL isPopupWindow
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} webExtensionWindowGeometry
 @property  NSString *webExtensionWindowType
 @property  NSString *webExtensionWindowState
 @property  NSArray *webExtensionTabs
 @property  <WBSWebExtensionTab> *activeWebExtensionTab
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebExtensionWindow isFocused]
  -[WebExtensionWindow browserController]
  -[WebExtensionWindow isPrivate]
  -[WebExtensionWindow setIsPrivateWindow:]
  -[WebExtensionWindow initWithBrowserController:isPrivateWindow:]
  -[WebExtensionWindow .cxx_destruct]
  -[WebExtensionWindow validateToolbarItemForExtension:]
  -[WebExtensionWindow webExtensionWindowType]
  -[WebExtensionWindow isPopupWindow]
  -[WebExtensionWindow createNewTabAtIndex:url:makeActive:completionHandler:]
  -[WebExtensionWindow idForWebExtensions]
  -[WebExtensionWindow _webExtensionTabsWithoutCopying]
  -[WebExtensionWindow _isPrivateWithSingleTabShowingExplanationText]
  -[WebExtensionWindow isPrivateWindow]
  -[WebExtensionWindow webExtensionWindowGeometry]
  -[WebExtensionWindow activeWebExtensionTab]
  -[WebExtensionWindow webExtensionWindowState]
  -[WebExtensionWindow webExtensionTabs]


CloudTabItemView : UIButton <UIGestureRecognizerDelegate>
 @property  long long style
 @property  <CloudTabItemViewDelegate> *delegate
 @property  WBSCloudTab *cloudTab
 @property  BOOL editable
 @property  BOOL showsSeparator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CloudTabItemView defaultHeightForTraitCollection:]
  +[CloudTabItemView _numberOfLinesForTraitCollection:]
  +[CloudTabItemView _defaultItemHeightForTraitCollection:]

  // instance methods
  -[CloudTabItemView setHighlighted:]
  -[CloudTabItemView traitCollectionDidChange:]
  -[CloudTabItemView titleRectForContentRect:]
  -[CloudTabItemView setHighlighted:animated:]
  -[CloudTabItemView isEditable]
  -[CloudTabItemView .cxx_destruct]
  -[CloudTabItemView setStyle:]
  -[CloudTabItemView layoutSubviews]
  -[CloudTabItemView setShowsSeparator:]
  -[CloudTabItemView touchesBegan:withEvent:]
  -[CloudTabItemView setDelegate:]
  -[CloudTabItemView setEditable:]
  -[CloudTabItemView touchesMoved:withEvent:]
  -[CloudTabItemView _updateStyle]
  -[CloudTabItemView sizeThatFits:]
  -[CloudTabItemView touchesCancelled:withEvent:]
  -[CloudTabItemView gestureRecognizer:shouldReceiveTouch:]
  -[CloudTabItemView initWithFrame:]
  -[CloudTabItemView delegate]
  -[CloudTabItemView dealloc]
  -[CloudTabItemView cloudTab]
  -[CloudTabItemView style]
  -[CloudTabItemView touchesEnded:withEvent:]
  -[CloudTabItemView _deleteButtonTapped:]
  -[CloudTabItemView _setEditing:animated:]
  -[CloudTabItemView _panRecognized:]
  -[CloudTabItemView showsSeparator]
  -[CloudTabItemView setCloudTab:]
  -[CloudTabItemView _setUpDeleteConfirmationViewIfNecessary]
  -[CloudTabItemView _swipeOffsetFromPanGestureRecognizer]


WebsiteDataUtilities : NSObject
  // class methods
  +[WebsiteDataUtilities getDatabaseQuotaForOrigin:currentQuota:currentOriginUsage:currentDatabaseUsage:expectedUsage:dialogPresenter:completionHandler:]
  +[WebsiteDataUtilities getApplicationCacheQuotaForOrigin:currentQuota:totalBytesNeeded:dialogPresenter:completionHandler:]


PreviewTableViewController : UITableViewController
 @property  <PreviewTableViewControllerDelegate> *previewDelegate
 @property  <LinkPreviewProvider> *linkPreviewProvider

  // instance methods
  -[PreviewTableViewController tableView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[PreviewTableViewController tableView:previewForDismissingContextMenuWithConfiguration:]
  -[PreviewTableViewController tableView:previewForHighlightingContextMenuWithConfiguration:]
  -[PreviewTableViewController .cxx_destruct]
  -[PreviewTableViewController setLinkPreviewProvider:]
  -[PreviewTableViewController viewWillDisappear:]
  -[PreviewTableViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[PreviewTableViewController linkPreviewProvider]
  -[PreviewTableViewController setPreviewDelegate:]
  -[PreviewTableViewController previewDelegate]


TabIconAndTitleView : UIView
  // instance methods
  -[TabIconAndTitleView traitCollectionDidChange:]
  -[TabIconAndTitleView .cxx_destruct]
  -[TabIconAndTitleView layoutSubviews]


WhiteTabsTestRunner : ReplayPagesTestRunner
  // instance methods
  -[WhiteTabsTestRunner init]
  -[WhiteTabsTestRunner finishedTestPage:]
  -[WhiteTabsTestRunner collectPPTResults]


TabDocumentActivityItemProvider : _SFActivityItemProvider
 @property  TabDocument *tabDocument

  // instance methods
  -[TabDocumentActivityItemProvider .cxx_destruct]
  -[TabDocumentActivityItemProvider item]
  -[TabDocumentActivityItemProvider tabDocument]
  -[TabDocumentActivityItemProvider initWithTabDocument:]


ReadingListTableViewCell : VibrantTableViewCell
 @property  BOOL hasImage
 @property  NSString *fetchingStatusText
 @property  int bookmarkID
 @property  NSString *siteName
 @property  NSString *previewText

  // class methods
  +[ReadingListTableViewCell minimumCellHeight]

  // instance methods
  -[ReadingListTableViewCell traitCollectionDidChange:]
  -[ReadingListTableViewCell setSelected:animated:]
  -[ReadingListTableViewCell siteName]
  -[ReadingListTableViewCell .cxx_destruct]
  -[ReadingListTableViewCell setSiteName:]
  -[ReadingListTableViewCell setBookmark:]
  -[ReadingListTableViewCell layoutSubviews]
  -[ReadingListTableViewCell previewText]
  -[ReadingListTableViewCell _titleLabelFont]
  -[ReadingListTableViewCell setAlpha:]
  -[ReadingListTableViewCell prepareForReuse]
  -[ReadingListTableViewCell initWithStyle:reuseIdentifier:]
  -[ReadingListTableViewCell dealloc]
  -[ReadingListTableViewCell _setOpaque:forSubview:]
  -[ReadingListTableViewCell dragStateDidChange:]
  -[ReadingListTableViewCell setHasImage:]
  -[ReadingListTableViewCell setPreviewText:]
  -[ReadingListTableViewCell hasImage]
  -[ReadingListTableViewCell bookmarkID]
  -[ReadingListTableViewCell _updateNumberOfLines]
  -[ReadingListTableViewCell setUsesVibrantEffect:]
  -[ReadingListTableViewCell _detailLabelFont]
  -[ReadingListTableViewCell _siteNameFont]
  -[ReadingListTableViewCell _initializeAutoLayoutConstraints]
  -[ReadingListTableViewCell _updateVibrantEffect]
  -[ReadingListTableViewCell _scaledFontForTextStyle:addingSymbolicTraits:]
  -[ReadingListTableViewCell _createImageViewIfNeeded]
  -[ReadingListTableViewCell _setFetchingStatusTextForBookmark:]
  -[ReadingListTableViewCell setFetchingStatusText:]
  -[ReadingListTableViewCell _updateSelectedAnimated:]
  -[ReadingListTableViewCell fetchingStatusText]
  -[ReadingListTableViewCell setReadingListIcon:]
  -[ReadingListTableViewCell displayThumbnailIconForBookmark:synchronously:]
  -[ReadingListTableViewCell setBookmark:isArchiving:]


BrowserControllerDefaultUIDelegate : NSObject <AutomationOverlayViewControllerDelegate, MobileSafariWindowDelegate, BrowserControllerUIDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BrowserControllerDefaultUIDelegate initWithBrowserController:]
  -[BrowserControllerDefaultUIDelegate browserController:setCatalogViewController:]
  -[BrowserControllerDefaultUIDelegate browserControllerMakeKey:]
  -[BrowserControllerDefaultUIDelegate automationOverlayControllerDidCancelAutomation:]
  -[BrowserControllerDefaultUIDelegate browserControllerWillBeginObfuscating:]
  -[BrowserControllerDefaultUIDelegate browserController:tabSnapshotContentProviderForTabDocument:]
  -[BrowserControllerDefaultUIDelegate browserControllerMakeKeyAndVisible:]
  -[BrowserControllerDefaultUIDelegate .cxx_destruct]
  -[BrowserControllerDefaultUIDelegate browserControllerContentContainerViewFrameDidChange:]
  -[BrowserControllerDefaultUIDelegate browserControllerDidBeginIgnoringUserInteraction:]
  -[BrowserControllerDefaultUIDelegate _windowDidResignKeyWindow:]
  -[BrowserControllerDefaultUIDelegate browserController:willConnectToScene:session:options:]
  -[BrowserControllerDefaultUIDelegate browserControllerDidEndIgnoringUserInteraction:]
  -[BrowserControllerDefaultUIDelegate browserControllerNavigationBar:]
  -[BrowserControllerDefaultUIDelegate browserControllerWillBeginNavigationGesture:]
  -[BrowserControllerDefaultUIDelegate browserControllerLayOutCatalogView:]
  -[BrowserControllerDefaultUIDelegate browserControllerShouldUpdateSnapshotForActiveTab:]
  -[BrowserControllerDefaultUIDelegate _setUpAutomationOverlay]
  -[BrowserControllerDefaultUIDelegate browserControllerCatalogViewController:]
  -[BrowserControllerDefaultUIDelegate browserControllerStatusBarWidth:]
  -[BrowserControllerDefaultUIDelegate browserControllerStartPageUpdatePolicyDidChange:]
  -[BrowserControllerDefaultUIDelegate viewControllerToPresentFromForBrowserController:]
  -[BrowserControllerDefaultUIDelegate safariWindow:statusBarChangedFromHeight:toHeight:]
  -[BrowserControllerDefaultUIDelegate browserControllerDidEndObfuscating:]
  -[BrowserControllerDefaultUIDelegate browserController:tabDocumentViewGeometryProviderForTabDocumentView:]
  -[BrowserControllerDefaultUIDelegate browserControllerShouldIncreaseTopPaddingForStartPage:]
  -[BrowserControllerDefaultUIDelegate browserControllerWindowFrame:]
  -[BrowserControllerDefaultUIDelegate _tearDownAutomationOverlay]
  -[BrowserControllerDefaultUIDelegate automationOverlayController:didChangeAllowsUserInteraction:]
  -[BrowserControllerDefaultUIDelegate browserControllerDidEndNavigationGesture:]
  -[BrowserControllerDefaultUIDelegate automationOverlayControllerDidDisableAutomation:]
  -[BrowserControllerDefaultUIDelegate browserControllerCatalogViewPopoverWidth:]
  -[BrowserControllerDefaultUIDelegate automationOverlayControllerShouldAllowUserInteraction:]
  -[BrowserControllerDefaultUIDelegate browserController:didDisconnectFromScene:]


ReadingListContentUnavailableView : _UIContentUnavailableView
  // instance methods
  -[ReadingListContentUnavailableView pointInside:withEvent:]


ReadingListViewController : UIViewController <BookmarksToolbarItemProvider, PreviewTableViewControllerDelegate, UISearchBarDelegate, UITableViewDragDelegate, UITableViewDropDelegate, WebBookmarksClientDelegateProtocol, BookmarksPanelStateRestoring, UITableViewDelegate, UITableViewDataSource>
 @property  BOOL showingAllBookmarks
 @property  <ReadingListViewControllerDelegate> *delegate
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  <TabGroupProvider> *tabGroupProvider
 @property  UITableView *tableView
 @property  NSArray *bookmarksPanelToolbarItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReadingListViewController tabGroupProvider]
  -[ReadingListViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[ReadingListViewController setNavigationIntentHandler:]
  -[ReadingListViewController tableView:didEndDisplayingCell:forRowAtIndexPath:]
  -[ReadingListViewController viewWillLayoutSubviews]
  -[ReadingListViewController traitCollectionDidChange:]
  -[ReadingListViewController tableView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[ReadingListViewController numberOfSectionsInTableView:]
  -[ReadingListViewController setEditing:animated:]
  -[ReadingListViewController tableView:previewForDismissingContextMenuWithConfiguration:]
  -[ReadingListViewController tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:]
  -[ReadingListViewController tableView:previewForHighlightingContextMenuWithConfiguration:]
  -[ReadingListViewController tableView:didBeginMultipleSelectionInteractionAtIndexPath:]
  -[ReadingListViewController tableView:numberOfRowsInSection:]
  -[ReadingListViewController _deleteBarButtonItem]
  -[ReadingListViewController .cxx_destruct]
  -[ReadingListViewController tableView:didDeselectRowAtIndexPath:]
  -[ReadingListViewController tableView:didSelectRowAtIndexPath:]
  -[ReadingListViewController setTabGroupProvider:]
  -[ReadingListViewController viewDidLoad]
  -[ReadingListViewController tableView:cellForRowAtIndexPath:]
  -[ReadingListViewController tableViewDidFinishReload:]
  -[ReadingListViewController setDelegate:]
  -[ReadingListViewController viewDidAppear:]
  -[ReadingListViewController init]
  -[ReadingListViewController willMoveToParentViewController:]
  -[ReadingListViewController tableView]
  -[ReadingListViewController tableView:willBeginEditingRowAtIndexPath:]
  -[ReadingListViewController searchBarSearchButtonClicked:]
  -[ReadingListViewController setLinkPreviewProvider:]
  -[ReadingListViewController viewWillDisappear:]
  -[ReadingListViewController _postChangeNotification]
  -[ReadingListViewController scrollViewWillBeginDragging:]
  -[ReadingListViewController viewWillAppear:]
  -[ReadingListViewController _networkReachabilityChanged:]
  -[ReadingListViewController currentStateDictionary]
  -[ReadingListViewController delegate]
  -[ReadingListViewController navigationIntentHandler]
  -[ReadingListViewController tableView:leadingSwipeActionsForRowAtIndexPath:]
  -[ReadingListViewController tableView:trailingSwipeActionsForRowAtIndexPath:]
  -[ReadingListViewController dealloc]
  -[ReadingListViewController _separatorEffect]
  -[ReadingListViewController tableView:didEndEditingRowAtIndexPath:]
  -[ReadingListViewController tableView:canFocusRowAtIndexPath:]
  -[ReadingListViewController loadView]
  -[ReadingListViewController tableView:itemsForBeginningDragSession:atIndexPath:]
  -[ReadingListViewController searchBar:textDidChange:]
  -[ReadingListViewController _tableView:dataOwnerForDragSession:atIndexPath:]
  -[ReadingListViewController tableView:itemsForAddingToDragSession:atIndexPath:point:]
  -[ReadingListViewController tableView:contextMenuConfigurationForRowAtIndexPath:point:]
  -[ReadingListViewController _tableView:dataOwnerForDropSession:withDestinationIndexPath:]
  -[ReadingListViewController tableView:canHandleDropSession:]
  -[ReadingListViewController tableView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[ReadingListViewController tableView:performDropWithCoordinator:]
  -[ReadingListViewController updateUserActivityState:]
  -[ReadingListViewController viewDidDisappear:]
  -[ReadingListViewController linkPreviewProvider]
  -[ReadingListViewController bookmarksServerProxy:didStartFetchingReadingListItem:]
  -[ReadingListViewController bookmarksServerProxy:didStopFetchingReadingListItem:]
  -[ReadingListViewController bookmarksServerProxyDidFinishFetching:]
  -[ReadingListViewController _updateToolbarItemsAnimated:]
  -[ReadingListViewController _webBookmarksDidReload:]
  -[ReadingListViewController safari_wantsDoneButtonInModalBookmarksPanel]
  -[ReadingListViewController bookmarksPanelToolbarItems]
  -[ReadingListViewController restoreStateWithDictionary:]
  -[ReadingListViewController _bookmarkAtIndexPath:]
  -[ReadingListViewController safari_tableViewScrollPositionSaveIdentifier]
  -[ReadingListViewController updateAndScrollToCurrentSelectedItemIfNeeded:]
  -[ReadingListViewController _shouldUseTranslucentAppearance]
  -[ReadingListViewController previewTableViewController:URLForRowAtIndexPath:]
  -[ReadingListViewController previewTableViewController:menuForRowAtIndexPath:]
  -[ReadingListViewController _readingListBookmarkDidUpdate:]
  -[ReadingListViewController _didAddNewReadingListBookmark]
  -[ReadingListViewController _readingListBookmarkMetadataDidUpdate:]
  -[ReadingListViewController _connectSafariFetcherServerProxy]
  -[ReadingListViewController _disconnectSafariFetcherServerProxy]
  -[ReadingListViewController _clearExplanationView]
  -[ReadingListViewController _reloadReadingList]
  -[ReadingListViewController _unreadFilterButtonTitle]
  -[ReadingListViewController _unreadFilterBarButtonItem]
  -[ReadingListViewController _unreadFilterButtonIdentifier]
  -[ReadingListViewController _showExplanationView]
  -[ReadingListViewController _adjustContentOffsetIfNeeded]
  -[ReadingListViewController _restoreCellSeparator]
  -[ReadingListViewController _updateEditingButtonsEnabled]
  -[ReadingListViewController _reloadReadingListAndTable]
  -[ReadingListViewController _updateSearchBar]
  -[ReadingListViewController _didChangeUnreadFilter]
  -[ReadingListViewController _editButtonIdentifier]
  -[ReadingListViewController _saveOfflineBarButtonItem]
  -[ReadingListViewController _deleteBookmarks:]
  -[ReadingListViewController _updateTableViewByRemovingReadingListItemsAtIndexPaths:]
  -[ReadingListViewController _scheduleDelayedChangeNotification]
  -[ReadingListViewController _readingListItemsAtIndexPaths:lockAndPerformUpdate:performBlockIfLockFailed:]
  -[ReadingListViewController _saveForOffline:]
  -[ReadingListViewController _updateTableViewByComputingDifference]
  -[ReadingListViewController _setIconForBookmark:cell:synchronously:]
  -[ReadingListViewController _currentReadingListBookmark]
  -[ReadingListViewController _iconForUUID:iconData:]
  -[ReadingListViewController _fetchMetadataIfNeededForBookmark:]
  -[ReadingListViewController _createActions:forRowAtIndexPath:allowingNewlineInTitles:withBlock:]
  -[ReadingListViewController _updateTableViewByRemovingReadingListItemAtIndexPath:]
  -[ReadingListViewController _readingListItemAtIndexPath:lockAndPerformUpdates:performBlockIfLockFailed:]
  -[ReadingListViewController _createAction:forRowAtIndexPath:allowingNewlineInTitle:withBlock:]
  -[ReadingListViewController _readingListItemAtIndexPathDelete:]
  -[ReadingListViewController _readingListItemAtIndexPath:setUnread:]
  -[ReadingListViewController _URLForRowAtIndexPath:]
  -[ReadingListViewController didMarkBookmarkUnreadAtIndex:]
  -[ReadingListViewController bookmarksServerProxyConnectionInvalidated:]
  -[ReadingListViewController safari_tableViewForScrollPositionSaving]
  -[ReadingListViewController showingAllBookmarks]


OpenURLsIntent : INIntent
 @property  NSArray *urls


OpenURLsIntentResponse : INIntentResponse
 @property  long long code

  // instance methods
  -[OpenURLsIntentResponse setCode:]
  -[OpenURLsIntentResponse initWithCode:userActivity:]
  -[OpenURLsIntentResponse code]


ScrollDecelerationTestProcessor : ContentInteractionTestRunner
 @property  int iterationsRemaining
 @property  long long state

  // instance methods
  -[ScrollDecelerationTestProcessor setState:]
  -[ScrollDecelerationTestProcessor state]
  -[ScrollDecelerationTestProcessor initWithTestName:browserController:]
  -[ScrollDecelerationTestProcessor startPageAction:]
  -[ScrollDecelerationTestProcessor performActionForPage:]
  -[ScrollDecelerationTestProcessor setIterationsRemaining:]
  -[ScrollDecelerationTestProcessor iterationsRemaining]


NewsCompletionHeaderView : UITableViewHeaderFooterView
  // instance methods
  -[NewsCompletionHeaderView .cxx_destruct]
  -[NewsCompletionHeaderView layoutSubviews]
  -[NewsCompletionHeaderView setHeaderText:]
  -[NewsCompletionHeaderView initWithReuseIdentifier:]


SearchQueryRestorationCompletionItem : NSObject <CompletionItem>
 @property  WBSCompletionQuery *queryToRestore
 @property  NSArray *completionGroupsToRestore
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SearchQueryRestorationCompletionItem initWithQuery:]
  -[SearchQueryRestorationCompletionItem .cxx_destruct]
  -[SearchQueryRestorationCompletionItem isEquivalentTo:]
  -[SearchQueryRestorationCompletionItem parsecQueryID]
  -[SearchQueryRestorationCompletionItem setParsecQueryID:]
  -[SearchQueryRestorationCompletionItem parsecDomainIdentifier]
  -[SearchQueryRestorationCompletionItem sfSearchResultValue]
  -[SearchQueryRestorationCompletionItem engagementDestination]
  -[SearchQueryRestorationCompletionItem completionTableViewCellReuseIdentifier]
  -[SearchQueryRestorationCompletionItem acceptCompletionWithActionHandler:]
  -[SearchQueryRestorationCompletionItem auditAcceptedCompletionWithRank:]
  -[SearchQueryRestorationCompletionItem completionTableViewCellForCompletionList:]
  -[SearchQueryRestorationCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[SearchQueryRestorationCompletionItem reflectedStringForUserTypedString:]
  -[SearchQueryRestorationCompletionItem needsSectionHeader]
  -[SearchQueryRestorationCompletionItem queryToRestore]
  -[SearchQueryRestorationCompletionItem setQueryToRestore:]
  -[SearchQueryRestorationCompletionItem completionGroupsToRestore]
  -[SearchQueryRestorationCompletionItem setCompletionGroupsToRestore:]


BrowserWindowController : NSObject <CloudTabStoreDelegate, _SFNavigationIntentHandling>
 @property  BOOL cloudTabsEnabled
 @property  NSArray *browserControllers
 @property  <WBStateProvider> *stateProvider
 @property  _SFPerSitePreferencesVendor *perSitePreferencesVendor
 @property  _SFPageZoomPreferenceManager *privateBrowsingPageZoomManager
 @property  CloudTabStore *cloudTabStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[BrowserWindowController _printWindowToSceneMapping]

  // instance methods
  -[BrowserWindowController perSitePreferencesVendor]
  -[BrowserWindowController cloudTabStore]
  -[BrowserWindowController cloudTabStoreDidGetCachedDevicesFromCloudKit:]
  -[BrowserWindowController privateBrowsingPageZoomManager]
  -[BrowserWindowController _restoreWindowsWithState:shouldMergeAllWindowsIfNeeded:]
  -[BrowserWindowController updateCloudTabsForEnteringForeground]
  -[BrowserWindowController restoreEducationDeviceTabs]
  -[BrowserWindowController tearDownAutomationWindow]
  -[BrowserWindowController .cxx_destruct]
  -[BrowserWindowController saveCloudTabsUsingCloudTabStore:]
  -[BrowserWindowController _createCloudTabsStore]
  -[BrowserWindowController _browserWindowsToPersist]
  -[BrowserWindowController _restoreWindowsFromBrowserSavedState:]
  -[BrowserWindowController browserControllerWithUUID:]
  -[BrowserWindowController modeForNewWindowUserActivity:]
  -[BrowserWindowController _mergeTabsFromCloudTabsForDeviceRestorationIfNeededAfterCloudTabsFinishedSyncing:]
  -[BrowserWindowController initWithBrowserSavedState:perSitePreferencesVendor:browserControllerUIDelegateProvider:]
  -[BrowserWindowController restoreEducationDeviceCloudTabs:animated:]
  -[BrowserWindowController _allNormalLocalTabDocuments]
  -[BrowserWindowController _mergeAndSaveWindowStates:intoWindowState:]
  -[BrowserWindowController _mergeWindowStates:intoWindowState:]
  -[BrowserWindowController dispatchNavigationIntent:]
  -[BrowserWindowController setUpAutomationWindowWithCompletionHandler:]
  -[BrowserWindowController tabsOlderThan:inPrivateBrowsing:]
  -[BrowserWindowController removeWindowsNotMatchingSceneIDs:supportsMultipleScenes:]
  -[BrowserWindowController handleNavigationIntent:completion:]
  -[BrowserWindowController setCloudTabsEnabled:]
  -[BrowserWindowController _destroyCloudTabsStore]
  -[BrowserWindowController _windowDidClose:]
  -[BrowserWindowController _saveBrowserStateWithQuickUpdate:]
  -[BrowserWindowController cloudTabStore:didUpdateDevicesFromCloudKitWithError:]
  -[BrowserWindowController mergeAllWindowsIntoWindow:]
  -[BrowserWindowController _newAutomationWindowWithSceneID:]
  -[BrowserWindowController updateCloudTabsForEnteringBackground]
  -[BrowserWindowController numberOfTabsInPrivateBrowsing:]
  -[BrowserWindowController cloudTabsEnabled]
  -[BrowserWindowController initWithBrowserSavedState:]
  -[BrowserWindowController cloudTabStore:cloudTabsEnabledDidChange:]
  -[BrowserWindowController _sceneIDToLocalGroupTabs]
  -[BrowserWindowController stateProvider]
  -[BrowserWindowController oldestTabsWithLimit:inPrivateBrowsing:]
  -[BrowserWindowController initWithStateProvider:perSitePreferencesVendor:shouldMergeAllWindowsIfNeeded:browserControllerUIDelegateProvider:]
  -[BrowserWindowController _mergeTabsFromCloudTabsForDeviceRestoration:]
  -[BrowserWindowController updateCloudTabUpdatesEnabled]
  -[BrowserWindowController uiDelegateForBrowserController:]
  -[BrowserWindowController dealloc]
  -[BrowserWindowController tabsInPrivateBrowsing:]
  -[BrowserWindowController _cloudTabFeatureAvailabilityDidChange:]
  -[BrowserWindowController initWithStateProvider:]
  -[BrowserWindowController _printWindowToSceneMapping]
  -[BrowserWindowController saveBrowserState]
  -[BrowserWindowController browserControllers]
  -[BrowserWindowController cloudTabStore:didReceiveTabCloseRequest:]
  -[BrowserWindowController saveCloudTabs]
  -[BrowserWindowController openNewWindowWithPrivateBrowsingEnabled:fromWindow:]
  -[BrowserWindowController windowForSceneID:options:]


ScrollPerfTestRunner : PurplePageLoadTestRunner
  // instance methods
  -[ScrollPerfTestRunner .cxx_destruct]
  -[ScrollPerfTestRunner pageScrollView]
  -[ScrollPerfTestRunner initWithTestName:browserController:]
  -[ScrollPerfTestRunner startPageAction:]
  -[ScrollPerfTestRunner outputDataForPage:]
  -[ScrollPerfTestRunner finishedTestPage:]
  -[ScrollPerfTestRunner writeOutputData]
  -[ScrollPerfTestRunner finishedTestRunner]
  -[ScrollPerfTestRunner performActionForPage:]
  -[ScrollPerfTestRunner finalStatusForPage:]
  -[ScrollPerfTestRunner startingTestPage:]
  -[ScrollPerfTestRunner finishPage:stats:error:]
  -[ScrollPerfTestRunner pageWebView]
  -[ScrollPerfTestRunner machineConfigInfo]
  -[ScrollPerfTestRunner appendToFramerateHistory]
  -[ScrollPerfTestRunner advanceGesture]
  -[ScrollPerfTestRunner determineScrollDirection]
  -[ScrollPerfTestRunner touchPointForMoveIndex:]
  -[ScrollPerfTestRunner isPageTooShortToScroll]


TabBarItemLayoutInfo : NSObject
 @property  TabBar *tabBar
 @property  TabBarItem *tabBarItem
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  BOOL canClose
 @property  BOOL reordering
 @property  BOOL leadingEdgeVisible
 @property  BOOL trailingEdgeVisible
 @property  BOOL trailingActiveItem
 @property  double titleLayoutWidth
 @property  BOOL hidesTitleText
 @property  double titleAnchorAdditionalOffset
 @property  double contentOffset
 @property  TabBarItemView *tabBarItemView
 @property  TabBarItemView *viewForDragPreview
 @property  BOOL hasViews
 @property  BOOL visibleInTabBar
 @property  BOOL removedFromTabBar
 @property  unsigned long activeAnimationCount

  // instance methods
  -[TabBarItemLayoutInfo setContentOffset:]
  -[TabBarItemLayoutInfo contentOffset]
  -[TabBarItemLayoutInfo tabBar]
  -[TabBarItemLayoutInfo .cxx_destruct]
  -[TabBarItemLayoutInfo closeButtonTapped:]
  -[TabBarItemLayoutInfo tabBarItem]
  -[TabBarItemLayoutInfo setFrame:]
  -[TabBarItemLayoutInfo init]
  -[TabBarItemLayoutInfo frame]
  -[TabBarItemLayoutInfo dealloc]
  -[TabBarItemLayoutInfo setReordering:]
  -[TabBarItemLayoutInfo isReordering]
  -[TabBarItemLayoutInfo _reusableView]
  -[TabBarItemLayoutInfo activeAnimationCount]
  -[TabBarItemLayoutInfo setActiveAnimationCount:]
  -[TabBarItemLayoutInfo _clearViews]
  -[TabBarItemLayoutInfo hasViews]
  -[TabBarItemLayoutInfo _updateHidesTitleText]
  -[TabBarItemLayoutInfo _visibleEdge]
  -[TabBarItemLayoutInfo setTitleLayoutWidth:]
  -[TabBarItemLayoutInfo setTitleAnchorAdditionalOffset:]
  -[TabBarItemLayoutInfo updateTitleTruncation]
  -[TabBarItemLayoutInfo updateTabBarStyle]
  -[TabBarItemLayoutInfo setHidesTitleText:]
  -[TabBarItemLayoutInfo hidesTitleText]
  -[TabBarItemLayoutInfo mediaStateMuteButtonTapped:]
  -[TabBarItemLayoutInfo _requiresViews]
  -[TabBarItemLayoutInfo _clearView:]
  -[TabBarItemLayoutInfo _clearViewsIfNeeded]
  -[TabBarItemLayoutInfo initWithTabBar:item:]
  -[TabBarItemLayoutInfo itemDidUpdateTitle]
  -[TabBarItemLayoutInfo itemDidUpdateIcon]
  -[TabBarItemLayoutInfo itemDidUpdateIsActive]
  -[TabBarItemLayoutInfo itemDidUpdateIsPlaceholder]
  -[TabBarItemLayoutInfo itemDidUpdateMediaState]
  -[TabBarItemLayoutInfo setCanClose:]
  -[TabBarItemLayoutInfo setLeadingEdgeVisible:]
  -[TabBarItemLayoutInfo setTrailingEdgeVisible:]
  -[TabBarItemLayoutInfo setTrailingActiveItem:]
  -[TabBarItemLayoutInfo viewForDragPreview]
  -[TabBarItemLayoutInfo tabBarItemView]
  -[TabBarItemLayoutInfo setVisibleInTabBar:]
  -[TabBarItemLayoutInfo setRemovedFromTabBar:]
  -[TabBarItemLayoutInfo canClose]
  -[TabBarItemLayoutInfo isLeadingEdgeVisible]
  -[TabBarItemLayoutInfo isTrailingEdgeVisible]
  -[TabBarItemLayoutInfo isTrailingActiveItem]
  -[TabBarItemLayoutInfo titleLayoutWidth]
  -[TabBarItemLayoutInfo titleAnchorAdditionalOffset]
  -[TabBarItemLayoutInfo isVisibleInTabBar]
  -[TabBarItemLayoutInfo isRemovedFromTabBar]


TiltedTabThumbnailView : TabThumbnailView
 @property  TabSnapshotImageView *snapshotView
 @property  TiltedTabView *tiltedTabView

  // instance methods
  -[TiltedTabThumbnailView setTitleFont:]
  -[TiltedTabThumbnailView traitCollectionDidChange:]
  -[TiltedTabThumbnailView snapshotView]
  -[TiltedTabThumbnailView .cxx_destruct]
  -[TiltedTabThumbnailView layoutSubviews]
  -[TiltedTabThumbnailView tiltedTabView]
  -[TiltedTabThumbnailView initWithFrame:]
  -[TiltedTabThumbnailView headerHasFinishedAnimating]
  -[TiltedTabThumbnailView titleIsHorizontallyCentered]
  -[TiltedTabThumbnailView headerBackgroundViewFrame]
  -[TiltedTabThumbnailView setTiltedTabView:]


TiltedTabItemLayoutInfo : NSObject
  // instance methods
  -[TiltedTabItemLayoutInfo .cxx_destruct]
  -[TiltedTabItemLayoutInfo dealloc]


LibraryViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDragDelegate, UICollectionViewDropDelegate, LibraryContentObserver>
 @property  <LibraryViewControllerDelegate> *delegate
 @property  WebBookmarkCollection *collection
 @property  NSArray *sectionControllers
 @property  LibraryItemController *selectedItemController
 @property  LibraryItemController *presentedItemController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LibraryViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[LibraryViewController collectionView:canFocusItemAtIndexPath:]
  -[LibraryViewController collectionView:performDropWithCoordinator:]
  -[LibraryViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[LibraryViewController sectionControllers]
  -[LibraryViewController collectionView:selectionFollowsFocusForItemAtIndexPath:]
  -[LibraryViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[LibraryViewController collectionView:didSelectItemAtIndexPath:]
  -[LibraryViewController collection]
  -[LibraryViewController collectionView:shouldSpringLoadItemAtIndexPath:withContext:]
  -[LibraryViewController collectionView:shouldSelectItemAtIndexPath:]
  -[LibraryViewController .cxx_destruct]
  -[LibraryViewController viewDidLoad]
  -[LibraryViewController setDelegate:]
  -[LibraryViewController viewWillAppear:]
  -[LibraryViewController delegate]
  -[LibraryViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[LibraryViewController updateSelection]
  -[LibraryViewController scrollToTopAnimated:]
  -[LibraryViewController viewDidDisappear:]
  -[LibraryViewController setSectionControllers:]
  -[LibraryViewController librarySectionContentDidChange:]
  -[LibraryViewController reloadSectionControllersAnimated:]
  -[LibraryViewController presentedItemController]
  -[LibraryViewController setPresentedItemController:]
  -[LibraryViewController _swipeActionsConfigurationForIndexPath:]
  -[LibraryViewController _diffableDataSourceForCollectionView:]
  -[LibraryViewController _highlightCenterEnablementDidChange:]
  -[LibraryViewController updateSelectionByIgnoringExistingSelection:]
  -[LibraryViewController selectedItemController]
  -[LibraryViewController _enumerateItemControllersWithBlock:]
  -[LibraryViewController setSelectedItemController:]
  -[LibraryViewController _collectionViewDidSelectItem:atIndexPath:]
  -[LibraryViewController _applySnapshotForSection:animated:]
  -[LibraryViewController _lastSectionShouldFloat]


TopicListHeader : UICollectionReusableView
 @property  UILabel *label

  // class methods
  +[TopicListHeader _labelFont]

  // instance methods
  -[TopicListHeader label]
  -[TopicListHeader .cxx_destruct]
  -[TopicListHeader initWithFrame:]


ScaleTestProcessor : PurplePageLoadTestRunner
  // instance methods
  -[ScaleTestProcessor setZoomScale:]
  -[ScaleTestProcessor startPageAction:]
  -[ScaleTestProcessor doneRendering:]


ScrollTestProcessor : ContentInteractionTestRunner
 @property  BOOL startedScrollTest
 @property  int scrollDelta

  // instance methods
  -[ScrollTestProcessor initWithTestName:browserController:]
  -[ScrollTestProcessor setScrollDelta:]
  -[ScrollTestProcessor startPageAction:]
  -[ScrollTestProcessor performActionForPage:]
  -[ScrollTestProcessor setStartedScrollTest:]
  -[ScrollTestProcessor startedScrollTest]
  -[ScrollTestProcessor scrollDelta]


SearchQueryBuilder : NSObject
  // class methods
  +[SearchQueryBuilder searchQueryBuilderWithQuery:]
  +[SearchQueryBuilder searchQueryBuilderWithXWebSearchURL:]

  // instance methods
  -[SearchQueryBuilder queryString]
  -[SearchQueryBuilder searchURL]
  -[SearchQueryBuilder .cxx_destruct]
  -[SearchQueryBuilder initWithQueryString:]
  -[SearchQueryBuilder initWithSearchEngineInfo:queryString:]
  -[SearchQueryBuilder initWithXWebSearchURL:]
  -[SearchQueryBuilder searchEngineIsDefault]
  -[SearchQueryBuilder searchEngineInfo]


SearchSuggestion : NSObject <CompletionItem>
 @property  NSString *string
 @property  BOOL goesToURL
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SearchSuggestion .cxx_destruct]
  -[SearchSuggestion isEquivalentTo:]
  -[SearchSuggestion string]
  -[SearchSuggestion parsecQueryID]
  -[SearchSuggestion setParsecQueryID:]
  -[SearchSuggestion parsecDomainIdentifier]
  -[SearchSuggestion sfSearchResultValue]
  -[SearchSuggestion engagementDestination]
  -[SearchSuggestion restoresSearchState]
  -[SearchSuggestion completionTableViewCellReuseIdentifier]
  -[SearchSuggestion acceptCompletionWithActionHandler:]
  -[SearchSuggestion auditAcceptedCompletionWithRank:]
  -[SearchSuggestion completionTableViewCellForCompletionList:]
  -[SearchSuggestion configureCompletionTableViewCell:forCompletionList:]
  -[SearchSuggestion reflectedStringForUserTypedString:]
  -[SearchSuggestion completionTableViewCellCustomHeightForCompletionList:]
  -[SearchSuggestion needsSectionHeader]
  -[SearchSuggestion setHandlerForActionItem:]
  -[SearchSuggestion _initWithString:userQuery:]
  -[SearchSuggestion _accessoryButtonTapped:]
  -[SearchSuggestion initWithUserTypedQuery:]
  -[SearchSuggestion initWithRecentSearchString:userQuery:]
  -[SearchSuggestion initWithSearchEngineSuggestion:userQuery:]
  -[SearchSuggestion goesToURL]
  -[SearchSuggestion setGoesToURL:]


SearchSuggestionProvider : CompletionProvider <NSURLSessionDataDelegate>
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSMutableSet *pendingTasks
 @property  <LoadProgressObserver> *loadProgressObserver
 @property  UniversalSearchSession *universalSearchSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SearchSuggestionProvider connectionQueue]
  -[SearchSuggestionProvider loadProgressObserver]
  -[SearchSuggestionProvider setConnectionQueue:]
  -[SearchSuggestionProvider .cxx_destruct]
  -[SearchSuggestionProvider pendingTasks]
  -[SearchSuggestionProvider stop]
  -[SearchSuggestionProvider setPendingTasks:]
  -[SearchSuggestionProvider init]
  -[SearchSuggestionProvider dealloc]
  -[SearchSuggestionProvider setLoadProgressObserver:]
  -[SearchSuggestionProvider completionsForQuery:]
  -[SearchSuggestionProvider setQueryToComplete:]
  -[SearchSuggestionProvider maximumCachedCompletionCount]
  -[SearchSuggestionProvider _didFinishSearchTask:]
  -[SearchSuggestionProvider suggestionStringsForData:]
  -[SearchSuggestionProvider _willStartSearchTask:]
  -[SearchSuggestionProvider universalSearchSession]
  -[SearchSuggestionProvider setUniversalSearchSession:]


CompletionArrowView : UIImageView
 @property  UITableViewCell *parentCell

  // instance methods
  -[CompletionArrowView hitTest:withEvent:]
  -[CompletionArrowView .cxx_destruct]
  -[CompletionArrowView init]
  -[CompletionArrowView pointInside:withEvent:]
  -[CompletionArrowView parentCell]
  -[CompletionArrowView setParentCell:]


SearchSuggestionTableViewCell : CompletionListTableViewCell
 @property  BOOL hidesImage
 @property  BOOL hidesAccessoryView

  // class methods
  +[SearchSuggestionTableViewCell cachedImageForDefaultSearchProvider:]

  // instance methods
  -[SearchSuggestionTableViewCell traitCollectionDidChange:]
  -[SearchSuggestionTableViewCell .cxx_destruct]
  -[SearchSuggestionTableViewCell setHidesImage:]
  -[SearchSuggestionTableViewCell layoutSubviews]
  -[SearchSuggestionTableViewCell hidesImage]
  -[SearchSuggestionTableViewCell prepareForReuse]
  -[SearchSuggestionTableViewCell initWithStyle:reuseIdentifier:]
  -[SearchSuggestionTableViewCell setHidesAccessoryView:]
  -[SearchSuggestionTableViewCell hidesAccessoryView]


LibraryController : NSObject <LibraryItemRegistration, UINavigationControllerDelegate, LibraryViewControllerDelegate>
 @property  LibraryConfiguration *configuration
 @property  BrowserRootViewController *rootViewController
 @property  LibraryViewController *sidebarViewController
 @property  NSString *currentCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[LibraryController setSidebarViewController:]
  -[LibraryController sidebarViewController]
  -[LibraryController rootViewController]
  -[LibraryController configuration]
  -[LibraryController .cxx_destruct]
  -[LibraryController setRootViewController:]
  -[LibraryController _updateSidebarButton]
  -[LibraryController _reportSelectedItemForAnalytics:]
  -[LibraryController initWithConfiguration:]
  -[LibraryController libraryViewController:didSelectItem:]
  -[LibraryController registerItem:forCollectionType:]
  -[LibraryController currentCollection]
  -[LibraryController libraryViewController:shouldPersistSelectionForItem:]
  -[LibraryController browserViewControllerDidChangeSidebarStyle]
  -[LibraryController libraryViewControllerDidClearSelection:]
  -[LibraryController navigationController:willShowViewController:animated:]
  -[LibraryController setCurrentCollection:]


ReloadActivity : TabDocumentActivity
  // instance methods
  -[ReloadActivity activityType]
  -[ReloadActivity actionType]
  -[ReloadActivity activityTitleWithTabDocument:]
  -[ReloadActivity performActivityWithTabDocument:]
  -[ReloadActivity systemImageNameWithTabDocument:]


PageZoomActivity : TabDocumentActivity
  // instance methods
  -[PageZoomActivity activityType]
  -[PageZoomActivity activityTitle]
  -[PageZoomActivity performActivityWithTabDocument:]
  -[PageZoomActivity systemImageNameWithTabDocument:]
  -[PageZoomActivity actionTypeWithTabDocument:]


CapsuleHidingStepperViewController : StepperViewController <UIGestureRecognizerDelegate>
 @property  CapsuleNavigationBarViewController *capsuleViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CapsuleHidingStepperViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CapsuleHidingStepperViewController capsuleViewController]
  -[CapsuleHidingStepperViewController .cxx_destruct]
  -[CapsuleHidingStepperViewController viewDidLoad]
  -[CapsuleHidingStepperViewController viewDidAppear:]
  -[CapsuleHidingStepperViewController viewWillDisappear:]
  -[CapsuleHidingStepperViewController gestureRecognizer:shouldReceiveTouch:]
  -[CapsuleHidingStepperViewController viewWillAppear:]
  -[CapsuleHidingStepperViewController _didReceiveTap:]
  -[CapsuleHidingStepperViewController _didReceivePan:]
  -[CapsuleHidingStepperViewController setCapsuleViewController:]


UniversalSearchResultTableSectionHeaderView : UITableViewHeaderFooterView <UniversalSearchSectionHeaderViewWithFeedbackDelegate>
 @property  NSString *title
 @property  NSURL *reportProblemURL
 @property  <UniversalSearchFeedbackDelegate> *feedbackDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UniversalSearchResultTableSectionHeaderView setTitle:]
  -[UniversalSearchResultTableSectionHeaderView feedbackDelegate]
  -[UniversalSearchResultTableSectionHeaderView .cxx_destruct]
  -[UniversalSearchResultTableSectionHeaderView setFeedbackDelegate:]
  -[UniversalSearchResultTableSectionHeaderView title]
  -[UniversalSearchResultTableSectionHeaderView _handleParsecFeedbackButtonTap:]
  -[UniversalSearchResultTableSectionHeaderView setReportProblemURL:]
  -[UniversalSearchResultTableSectionHeaderView reportProblemURL]


TabBarDropExpansionView : UIView <UIDropInteractionDelegate_Private>
 @property  <TabBarDropExpansionViewDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabBarDropExpansionView hitTest:withEvent:]
  -[TabBarDropExpansionView _dropInteraction:dataOwnerForSession:]
  -[TabBarDropExpansionView initWithCoder:]
  -[TabBarDropExpansionView .cxx_destruct]
  -[TabBarDropExpansionView dropInteraction:canHandleSession:]
  -[TabBarDropExpansionView setDelegate:]
  -[TabBarDropExpansionView initWithFrame:]
  -[TabBarDropExpansionView pointInside:withEvent:]
  -[TabBarDropExpansionView delegate]
  -[TabBarDropExpansionView dropInteraction:sessionDidEnter:]
  -[TabBarDropExpansionView dropInteraction:sessionDidEnd:]


TabHoverPreview : UIView
 @property  NSString *titleText
 @property  NSString *secondaryTitleText
 @property  UIView *tabBar
 @property  BOOL insetsPreviewFromTabBarEdge
 @property  double topInset

  // instance methods
  -[TabHoverPreview topInset]
  -[TabHoverPreview tabBar]
  -[TabHoverPreview initWithTabBar:]
  -[TabHoverPreview .cxx_destruct]
  -[TabHoverPreview setSnapshotImage:]
  -[TabHoverPreview titleText]
  -[TabHoverPreview dismissPreview]
  -[TabHoverPreview setTitleText:]
  -[TabHoverPreview setTopInset:]
  -[TabHoverPreview setInsetsPreviewFromTabBarEdge:]
  -[TabHoverPreview _updateConstraintsWithItemView:]
  -[TabHoverPreview _setPositionalConstraintsActive:]
  -[TabHoverPreview secondaryTitleText]
  -[TabHoverPreview setSecondaryTitleText:]
  -[TabHoverPreview showPreviewForItemView:]
  -[TabHoverPreview insetsPreviewFromTabBarEdge]


UserActivityController : NSObject
 @property  BrowserController *browserController
 @property  TabDocument *tabDocumentPendingUserActivityPayload

  // instance methods
  -[UserActivityController browserController]
  -[UserActivityController initWithBrowserController:]
  -[UserActivityController .cxx_destruct]
  -[UserActivityController tabDocumentPendingUserActivityPayload]
  -[UserActivityController _prepareTabDocumentForNewUserActivityWithDelay:]
  -[UserActivityController didFailToContinueUserActivityWithType:error:]
  -[UserActivityController continueUserActivity:]
  -[UserActivityController willContinueUserActivityWithType:]
  -[UserActivityController _prepareTabDocumentForNewUserActivity]
  -[UserActivityController _tabDocumentWithURL:]
  -[UserActivityController setTabDocumentPendingUserActivityPayload:]
  -[UserActivityController _invalidateTabCreationDelayTimer]


SafariClearBrowsingDataInterval : NSObject
 @property  NSString *aggdIntervalKey
 @property  long long clearBrowsingDataInterval
 @property  NSString *descriptionOfInterval
 @property  @? dateAfterWhichDataShouldBeClearedBlock

  // instance methods
  -[SafariClearBrowsingDataInterval .cxx_destruct]
  -[SafariClearBrowsingDataInterval init]
  -[SafariClearBrowsingDataInterval descriptionOfInterval]
  -[SafariClearBrowsingDataInterval initWithDescription:dateAfterWhichDataShouldBeClearedBlock:]
  -[SafariClearBrowsingDataInterval dateAfterWhichDataShouldBeClearedBlock]
  -[SafariClearBrowsingDataInterval setDateAfterWhichDataShouldBeClearedBlock:]
  -[SafariClearBrowsingDataInterval aggdIntervalKey]
  -[SafariClearBrowsingDataInterval setAggdIntervalKey:]
  -[SafariClearBrowsingDataInterval clearBrowsingDataInterval]
  -[SafariClearBrowsingDataInterval setClearBrowsingDataInterval:]


SafariClearBrowsingDataController : NSObject
 @property  NSArray *availableIntervals

  // instance methods
  -[SafariClearBrowsingDataController .cxx_destruct]
  -[SafariClearBrowsingDataController init]
  -[SafariClearBrowsingDataController clearAllBrowsingData]
  -[SafariClearBrowsingDataController availableIntervals]
  -[SafariClearBrowsingDataController clearDataFromInterval:]
  -[SafariClearBrowsingDataController _clearBrowsingDataAddedAfterDate:]


SharedDataMigration : NSObject
  // class methods
  +[SharedDataMigration migrateTabDatabaseIfNeeded]
  +[SharedDataMigration _userCachesDirectoryPath]
  +[SharedDataMigration _migrateCacheFileFromSubpath:toSubpath:ensureIsDirectory:]
  +[SharedDataMigration migratePersistentStorageDefaults]
  +[SharedDataMigration migrateRecentSearches]
  +[SharedDataMigration migrateThumbnails]


TabDocumentActivity : _SFActivity
 @property  TabDocument *tabDocument
 @property  BOOL canPerformOnNewTabPage
 @property  long long actionType

  // instance methods
  -[TabDocumentActivity .cxx_destruct]
  -[TabDocumentActivity _systemImageName]
  -[TabDocumentActivity canPerformWithActivityItems:]
  -[TabDocumentActivity performActivity]
  -[TabDocumentActivity _activityImage]
  -[TabDocumentActivity actionType]
  -[TabDocumentActivity _prepareWithActivityItems:completion:]
  -[TabDocumentActivity activityTitle]
  -[TabDocumentActivity _embeddedActivityViewController]
  -[TabDocumentActivity tabDocument]
  -[TabDocumentActivity activityTitleWithTabDocument:]
  -[TabDocumentActivity canPerformWithTabDocument:]
  -[TabDocumentActivity prepareWithTabDocument:]
  -[TabDocumentActivity performActivityWithTabDocument:]
  -[TabDocumentActivity systemImageNameWithTabDocument:]
  -[TabDocumentActivity actionTypeWithTabDocument:]
  -[TabDocumentActivity activityImageWithTabDocument:]
  -[TabDocumentActivity canPerformOnNewTabPage]
  -[TabDocumentActivity prepareWithTabDocument:completion:]
  -[TabDocumentActivity embeddedActivityViewControllerWithTabDocument:]


PageTitleAndAddressTableViewCell : CompletionListTableViewCell
  // class methods
  +[PageTitleAndAddressTableViewCell defaultHeight]

  // instance methods
  -[PageTitleAndAddressTableViewCell _updateFont]
  -[PageTitleAndAddressTableViewCell traitCollectionDidChange:]
  -[PageTitleAndAddressTableViewCell initWithStyle:reuseIdentifier:]
  -[PageTitleAndAddressTableViewCell _updateNumberOfLines]


PageLoadTest : NSObject
  // instance methods
  -[PageLoadTest .cxx_destruct]
  -[PageLoadTest dealloc]
  -[PageLoadTest didFinishPageLoadWithLoadData:]
  -[PageLoadTest initWithTabDocument:]
  -[PageLoadTest initWithTabDocument:pagesNeedingMemoryWarningSent:]
  -[PageLoadTest _setUpWebProcessForPageLoadMeasurementCollection]
  -[PageLoadTest _invalidateRemoteObjects]
  -[PageLoadTest _setUpPageLoadTestEventsListener]
  -[PageLoadTest _enablePageLoadMeasurementCollection]
  -[PageLoadTest resetAfterWebProcessCrash]


TabOverviewItemView : UIView
 @property  UIButton *closeButton
 @property  BOOL showsCloseButton
 @property  UIImage *icon
 @property  NSString *title
 @property  BOOL recording
 @property  unsigned long mediaStateIcon
 @property  double titleHeight
 @property  {UIEdgeInsets=dddd} titlePadding
 @property  double shadowOpacity
 @property  _SFBarTheme *topBarTheme
 @property  double transitionProgress
 @property  long long tabLayout
 @property  UIView *attachedView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} attachedViewReferenceRect
 @property  TabSnapshotImageView *snapshotView
 @property  UIView *dimmingView
 @property  UIView *previewView
 @property  double cornerRadius
 @property  double topBackdropHeight
 @property  {CGSize=dd} windowSize

  // class methods
  +[TabOverviewItemView initialize]

  // instance methods
  -[TabOverviewItemView dimmingView]
  -[TabOverviewItemView isRecording]
  -[TabOverviewItemView setDimmingView:]
  -[TabOverviewItemView previewView]
  -[TabOverviewItemView titlePadding]
  -[TabOverviewItemView icon]
  -[TabOverviewItemView traitCollectionDidChange:]
  -[TabOverviewItemView setTitle:]
  -[TabOverviewItemView snapshotView]
  -[TabOverviewItemView .cxx_destruct]
  -[TabOverviewItemView focusEffect]
  -[TabOverviewItemView accessibilityLabel]
  -[TabOverviewItemView setMediaStateIcon:]
  -[TabOverviewItemView layoutSubviews]
  -[TabOverviewItemView titleHeight]
  -[TabOverviewItemView setRecording:]
  -[TabOverviewItemView mediaStateIcon]
  -[TabOverviewItemView setCornerRadius:]
  -[TabOverviewItemView accessibilityTraits]
  -[TabOverviewItemView transitionProgress]
  -[TabOverviewItemView setIcon:]
  -[TabOverviewItemView accessibilityIdentifier]
  -[TabOverviewItemView title]
  -[TabOverviewItemView initWithFrame:]
  -[TabOverviewItemView pointInside:withEvent:]
  -[TabOverviewItemView setWindowSize:]
  -[TabOverviewItemView cornerRadius]
  -[TabOverviewItemView shadowOpacity]
  -[TabOverviewItemView canBecomeFocused]
  -[TabOverviewItemView setTransitionProgress:]
  -[TabOverviewItemView closeButton]
  -[TabOverviewItemView setSnapshotView:]
  -[TabOverviewItemView windowSize]
  -[TabOverviewItemView _headerBackgroundColor]
  -[TabOverviewItemView setShadowOpacity:]
  -[TabOverviewItemView setShowsCloseButton:]
  -[TabOverviewItemView showsCloseButton]
  -[TabOverviewItemView setAttachedView:]
  -[TabOverviewItemView updateSnapshotWithImage:]
  -[TabOverviewItemView setAttachedViewReferenceRect:]
  -[TabOverviewItemView setTopBarTheme:]
  -[TabOverviewItemView insertBorrowedContentView:headerHeight:]
  -[TabOverviewItemView containsBorrowedContentView:]
  -[TabOverviewItemView removeBorrowedContentView:]
  -[TabOverviewItemView topBackdropHeight]
  -[TabOverviewItemView _updateContentSizeCategory]
  -[TabOverviewItemView effectiveHeaderMode]
  -[TabOverviewItemView setTopBackdropHeight:]
  -[TabOverviewItemView setTabLayout:]
  -[TabOverviewItemView attachedView]
  -[TabOverviewItemView attachedViewReferenceRect]
  -[TabOverviewItemView tabLayout]
  -[TabOverviewItemView topBarTheme]


TopHitCompletionView : UIView
 @property  UIColor *highlightColor

  // instance methods
  -[TopHitCompletionView setHighlightColor:]
  -[TopHitCompletionView .cxx_destruct]
  -[TopHitCompletionView highlightColor]
  -[TopHitCompletionView drawRect:]
  -[TopHitCompletionView setAttributedText:highlightStartIndex:]


TopHitCompletionPromotionRecognizer : UIGestureRecognizer
  // instance methods
  -[TopHitCompletionPromotionRecognizer touchesBegan:withEvent:]


UnifiedField : UITextField <UIGestureRecognizerDelegate, PKUITextInputPencilTextInput>
 @property  <UnifiedFieldDelegate> *delegate
 @property  double placeholderHorizontalInset
 @property  UIColor *placeholderColor
 @property  <CompletionItem> *reflectedItem
 @property  BOOL pastingText
 @property  NSArray *querySuggestions
 @property  BOOL lastInputWasQuerySuggestion
 @property  BOOL hasSelectedQuerySuggestion
 @property  CKContextCompleter *contextCompleter
 @property  long long voiceSearchState
 @property  BOOL usingPencilInput
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UITextRange *selectedTextRange
 @property  UITextRange *markedTextRange
 @property  NSDictionary *markedTextStyle
 @property  UITextPosition *beginningOfDocument
 @property  UITextPosition *endOfDocument
 @property  <UITextInputDelegate> *inputDelegate
 @property  <UITextInputTokenizer> *tokenizer
 @property  UIView *textInputView
 @property  long long selectionAffinity
 @property  id insertDictationResultPlaceholder
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules

  // instance methods
  -[UnifiedField rightViewRectForBounds:]
  -[UnifiedField keyboardInputShouldDelete:]
  -[UnifiedField placeholderRectForBounds:]
  -[UnifiedField pasteAndGo:]
  -[UnifiedField keyboardInput:shouldInsertText:isMarkedText:]
  -[UnifiedField setAttributedText:]
  -[UnifiedField _hasContent]
  -[UnifiedField setPlaceholderColor:]
  -[UnifiedField placeholderColor]
  -[UnifiedField _allCombinationsOfModifierKeys]
  -[UnifiedField setText:]
  -[UnifiedField supportsImagePaste]
  -[UnifiedField cut:]
  -[UnifiedField paste:]
  -[UnifiedField copy:]
  -[UnifiedField querySuggestions]
  -[UnifiedField selectCompletionKeyPressed]
  -[UnifiedField selectAll:]
  -[UnifiedField _setReflectedItem:updateUserTypedPrefix:]
  -[UnifiedField _topHitForCurrentText]
  -[UnifiedField gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[UnifiedField _updateMenuItems]
  -[UnifiedField isPastingText]
  -[UnifiedField .cxx_destruct]
  -[UnifiedField _layoutTopHitCompletionView]
  -[UnifiedField _textForPasteboard]
  -[UnifiedField editRect]
  -[UnifiedField nextCompletionSelectionByRowKeyPressed]
  -[UnifiedField layoutSubviews]
  -[UnifiedField previousCompletionSelectionBySectionKeyPressed]
  -[UnifiedField voiceSearchState]
  -[UnifiedField _promoteCompletionToSelectionSelectingSuffix:andMoveForward:]
  -[UnifiedField becomeFirstResponder]
  -[UnifiedField _textWithoutWhitespace]
  -[UnifiedField dictationDidFinish:]
  -[UnifiedField willBeginPencilTextInputEditing]
  -[UnifiedField isUsingPencilInput]
  -[UnifiedField insertTextSuggestion:]
  -[UnifiedField _waitingForTopHitForCurrentText]
  -[UnifiedField reflectedItem]
  -[UnifiedField dictationRecordingDidEnd]
  -[UnifiedField _setTopHit:]
  -[UnifiedField placeholderHorizontalInset]
  -[UnifiedField _cancelPendingTopHitNavigation]
  -[UnifiedField resignFirstResponder]
  -[UnifiedField focusAndInsertCursorAtEnd]
  -[UnifiedField keyCommands]
  -[UnifiedField focusNextKeyViewKeyPressed]
  -[UnifiedField moveLeftKeyPressed]
  -[UnifiedField _promoteCompletionToSelection]
  -[UnifiedField gestureRecognizer:shouldReceiveTouch:]
  -[UnifiedField pasteAndSearch:]
  -[UnifiedField canPerformAction:withSender:]
  -[UnifiedField lastInputWasQuerySuggestion]
  -[UnifiedField initWithFrame:]
  -[UnifiedField focusPreviousKeyViewKeyPressed]
  -[UnifiedField topHitDidBecomeReady]
  -[UnifiedField previousCompletionSelectionByRowKeyPressed]
  -[UnifiedField nextCompletionSelectionBySectionKeyPressed]
  -[UnifiedField _reflectedItemCompletionString]
  -[UnifiedField moveRightKeyPressed]
  -[UnifiedField _allowsReflectedTopHit]
  -[UnifiedField updateQuerySuggestionsFromUserTypedText]
  -[UnifiedField contextCompleter]
  -[UnifiedField hasSelectedQuerySuggestion]
  -[UnifiedField _voiceSearchInputModeForFirstResponder:]
  -[UnifiedField _removeTopHitCompletionView]
  -[UnifiedField _restoreUserTypedText]
  -[UnifiedField _updateQuerySuggestionsMatchingText:]
  -[UnifiedField _updateReturnKey]
  -[UnifiedField _endEditingWithCurrentText]
  -[UnifiedField setReflectedItem:]
  -[UnifiedField _unifiedFieldInputType]
  -[UnifiedField _wantsPriorityOverFocusUpdates]
  -[UnifiedField clearUserTypedText]
  -[UnifiedField setVoiceSearchState:]
  -[UnifiedField setContextCompleter:]
  -[UnifiedField dictationRecognitionFailed]
  -[UnifiedField _handlePasteboardChangedNotification:]
  -[UnifiedField _textDidChangeFromTyping]


FrequentlyVisitedSitesController : WBSFrequentlyVisitedSitesController
  // class methods
  +[FrequentlyVisitedSitesController sharedController]

  // instance methods
  -[FrequentlyVisitedSitesController initWithBookmarkCollection:]
  -[FrequentlyVisitedSitesController .cxx_destruct]
  -[FrequentlyVisitedSitesController dealloc]
  -[FrequentlyVisitedSitesController _canonicalizedFavoritesURLStringSet]
  -[FrequentlyVisitedSitesController _saveFrequentlyVisitedSites:]
  -[FrequentlyVisitedSitesController frequentlyVisitedSites]
  -[FrequentlyVisitedSitesController clearFrequentlyVisitedSites]
  -[FrequentlyVisitedSitesController _receivedBookmarksFolderContentChangedNotification:]
  -[FrequentlyVisitedSitesController _clearFrequentlyVisitedSitesInBookmarksDB]
  -[FrequentlyVisitedSitesController _updateCachedFrequentlyVisitedSitesWithCandidates:]
  -[FrequentlyVisitedSitesController promoteFrequentlyVisitedSite:toFavoriteAtIndex:]
  -[FrequentlyVisitedSitesController banFrequentlyVisitedSite:inMemoryBookmarkChangeTrackingAvailable:]
  -[FrequentlyVisitedSitesController saveFrequentlyVisitedSitesToBookmarksDBWithCompletion:]
  -[FrequentlyVisitedSitesController _existingIconsDataFromBookmarksDB]


UniversalSearchFirstTimeExperienceViewController : UIViewController <SearchUIFirstTimeExperienceDelegate>
 @property  <UniversalSearchFirstTimeExperienceViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[UniversalSearchFirstTimeExperienceViewController userDidInteractWithParsecFirstTimeUserExperience]
  +[UniversalSearchFirstTimeExperienceViewController hasShownParsecFirstTimeUserExperience]

  // instance methods
  -[UniversalSearchFirstTimeExperienceViewController viewWillLayoutSubviews]
  -[UniversalSearchFirstTimeExperienceViewController firstTimeExperienceContinueButtonPressed]
  -[UniversalSearchFirstTimeExperienceViewController .cxx_destruct]
  -[UniversalSearchFirstTimeExperienceViewController viewDidLoad]
  -[UniversalSearchFirstTimeExperienceViewController setDelegate:]
  -[UniversalSearchFirstTimeExperienceViewController viewDidAppear:]
  -[UniversalSearchFirstTimeExperienceViewController initWithNibName:bundle:]
  -[UniversalSearchFirstTimeExperienceViewController delegate]
  -[UniversalSearchFirstTimeExperienceViewController loadView]
  -[UniversalSearchFirstTimeExperienceViewController unifiedFieldDidChange]


TiltedTabDragPreviewContainer : UIView
 @property  TiltedTabThumbnailView *thumbnailView
 @property  BOOL hasAnimatedToDragTransform

  // instance methods
  -[TiltedTabDragPreviewContainer .cxx_destruct]
  -[TiltedTabDragPreviewContainer thumbnailView]
  -[TiltedTabDragPreviewContainer setThumbnailView:]
  -[TiltedTabDragPreviewContainer hasAnimatedToDragTransform]
  -[TiltedTabDragPreviewContainer setHasAnimatedToDragTransform:]


TiltedTabItem : NSObject <TabCollectionItem>
 @property  BOOL isPlaceholder
 @property  NSString *title
 @property  UIImage *icon
 @property  unsigned long mediaStateIcon
 @property  NSUUID *UUID
 @property  long long dragState
 @property  BOOL recording
 @property  long long tintStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TiltedTabItem isRecording]
  -[TiltedTabItem setIsPlaceholder:]
  -[TiltedTabItem UUID]
  -[TiltedTabItem icon]
  -[TiltedTabItem setTitle:]
  -[TiltedTabItem setTintStyle:]
  -[TiltedTabItem .cxx_destruct]
  -[TiltedTabItem tintStyle]
  -[TiltedTabItem setMediaStateIcon:]
  -[TiltedTabItem mediaStateIcon]
  -[TiltedTabItem setIcon:]
  -[TiltedTabItem title]
  -[TiltedTabItem setDragState:]
  -[TiltedTabItem isPlaceholder]
  -[TiltedTabItem dragState]
  -[TiltedTabItem setUUID:]


TiltedTabView : UIView <CAAnimationDelegate, CloudTabTableDelegate, ReorderingAutoscrollerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, _UIBasicAnimationFactory, UIInteractionProgressObserver, UISearchBarDelegate, UIKeyInput, TabThumbnailCollectionView>
 @property  <TiltedTabViewDelegate> *delegate
 @property  NSArray *items
 @property  NSArray *itemsMatchingSearchTerm
 @property  NSArray *itemsFullyInView
 @property  TiltedTabViewMetrics *metrics
 @property  TiltedTabItem *itemToActivate
 @property  BOOL defersActivation
 @property  TiltedTabItem *itemToAdd
 @property  BOOL canShowSearchBar
 @property  BOOL showingSearchBar
 @property  BOOL showsPrivateBrowsingExplanationView
 @property  UIScrollView *test_scrollView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  long long presentationState
 @property  NSString *searchTerm
 @property  BOOL searching
 @property  UIButton *sidebarButton
 @property  ReorderingAutoscroller *reorderingAutoscroller
 @property  BOOL supportsSystemDrag
 @property  unsigned long layoutAxes
 @property  BOOL supportsDropTransitionToItemView
 @property  BOOL canDragOntoActiveTab
 @property  BOOL hidesInactiveTabs
 @property  BOOL lastDecelerationWasInterrupted
 @property  double desiredSnapshotScale
 @property  unsigned long snapshotBorderOptions

  // instance methods
  -[TiltedTabView _keyboardWillAppear:]
  -[TiltedTabView hitTest:withEvent:]
  -[TiltedTabView _keyboardWillDisappear:]
  -[TiltedTabView isShowingSearchBar]
  -[TiltedTabView searchBarCancelButtonClicked:]
  -[TiltedTabView updateSnapshotForItem:animated:]
  -[TiltedTabView traitCollectionDidChange:]
  -[TiltedTabView presentAnimated:]
  -[TiltedTabView itemToActivate]
  -[TiltedTabView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[TiltedTabView itemToAdd]
  -[TiltedTabView _layoutItemsWithTransition:]
  -[TiltedTabView items]
  -[TiltedTabView searchBarTextDidBeginEditing:]
  -[TiltedTabView setDefersActivation:]
  -[TiltedTabView .cxx_destruct]
  -[TiltedTabView _tabPreviewGestureRecognized:]
  -[TiltedTabView spellCheckingType]
  -[TiltedTabView layoutSubviews]
  -[TiltedTabView _tiltedTabItemForLocation:]
  -[TiltedTabView _timingFunctionForAnimation]
  -[TiltedTabView activateItem:]
  -[TiltedTabView canBecomeFirstResponder]
  -[TiltedTabView frameForItem:]
  -[TiltedTabView setDelegate:]
  -[TiltedTabView cloudTabTable:didStartEditingTabItemView:]
  -[TiltedTabView canShowSearchBar]
  -[TiltedTabView cloudTabTable:closeCloudTab:onDevice:]
  -[TiltedTabView cloudTabTable:shouldDisplayTab:]
  -[TiltedTabView setSearchTerm:]
  -[TiltedTabView searchTerm]
  -[TiltedTabView animationDidStop:finished:]
  -[TiltedTabView itemAtPoint:]
  -[TiltedTabView init]
  -[TiltedTabView presentationState]
  -[TiltedTabView autocorrectionType]
  -[TiltedTabView scrollViewDidEndDragging:willDecelerate:]
  -[TiltedTabView scrollViewDidScroll:]
  -[TiltedTabView isItemAnimating:]
  -[TiltedTabView itemsMatchingSearchTerm]
  -[TiltedTabView isSearching]
  -[TiltedTabView searchBarShouldEndEditing:]
  -[TiltedTabView autocapitalizationType]
  -[TiltedTabView setItems:]
  -[TiltedTabView gestureRecognizerShouldBegin:]
  -[TiltedTabView beginSearching]
  -[TiltedTabView itemIsCoveredBySlidingWindow:windowSize:]
  -[TiltedTabView endSearching]
  -[TiltedTabView desiredSnapshotScale]
  -[TiltedTabView reorderingAutoscroller:handleScroll:]
  -[TiltedTabView itemsFullyInView]
  -[TiltedTabView searchBarSearchButtonClicked:]
  -[TiltedTabView interactionProgressDidUpdate:]
  -[TiltedTabView setCloudTabDevices:]
  -[TiltedTabView _tabSelectionRecognized:]
  -[TiltedTabView _tabCloseRecognized:]
  -[TiltedTabView searchBarTextDidEndEditing:]
  -[TiltedTabView setItemToActivate:]
  -[TiltedTabView gestureRecognizer:shouldReceiveTouch:]
  -[TiltedTabView scrollViewWillBeginDragging:]
  -[TiltedTabView smartInsertDeleteType]
  -[TiltedTabView supportsSystemDrag]
  -[TiltedTabView scrollViewShouldScrollToTop:]
  -[TiltedTabView metrics]
  -[TiltedTabView initWithFrame:]
  -[TiltedTabView sidebarButton]
  -[TiltedTabView safeAreaInsetsDidChange]
  -[TiltedTabView deleteBackward]
  -[TiltedTabView setItemToAdd:]
  -[TiltedTabView cloudTabTable:didSelectCloudTab:]
  -[TiltedTabView delegate]
  -[TiltedTabView cloudTabTable:didFinishEditingTabItemView:]
  -[TiltedTabView interactionProgress:didEnd:]
  -[TiltedTabView defersActivation]
  -[TiltedTabView setItems:withScrollPositionIdentifier:transition:]
  -[TiltedTabView snapshotSizeForSuggestedSize:]
  -[TiltedTabView smartDashesType]
  -[TiltedTabView _closeButtonPressed:]
  -[TiltedTabView _activateItemToActivate:]
  -[TiltedTabView dealloc]
  -[TiltedTabView targetItemForDropAtPoint:]
  -[TiltedTabView estimatedSnapshotsPerPageForBounds:withTraitCollection:]
  -[TiltedTabView insertText:]
  -[TiltedTabView targetedDragPreviewForLiftingItem:]
  -[TiltedTabView updateDragPreviewForItem:atPoint:]
  -[TiltedTabView cleanUpDragPreviewForItem:]
  -[TiltedTabView hasText]
  -[TiltedTabView setSidebarButton:]
  -[TiltedTabView enumerateItemsOrderedByVisibility:]
  -[TiltedTabView _tabPressUpdated:]
  -[TiltedTabView countOfVisibleItems]
  -[TiltedTabView _tabReorderRecognized:]
  -[TiltedTabView setShowsPrivateBrowsingExplanationView:animated:]
  -[TiltedTabView inputView]
  -[TiltedTabView searchBar:textDidChange:]
  -[TiltedTabView dismissAnimated:]
  -[TiltedTabView smartQuotesType]
  -[TiltedTabView _basicAnimationForView:withKeyPath:]
  -[TiltedTabView snapshotBorderOptions]
  -[TiltedTabView showsPrivateBrowsingExplanationView]
  -[TiltedTabView viewForItem:]
  -[TiltedTabView positionForBar:]
  -[TiltedTabView test_scrollView]
  -[TiltedTabView targetedDragPreviewForDroppingItem:]
  -[TiltedTabView _tabCommitGestureRecognized:]


TabDocumentDragMetadata : NSObject
 @property  UIView<TabCollectionView> *sourceTabView
 @property  TabDocument *tabDocument

  // instance methods
  -[TabDocumentDragMetadata .cxx_destruct]
  -[TabDocumentDragMetadata tabDocument]
  -[TabDocumentDragMetadata initWithTabDocument:sourceTabView:]
  -[TabDocumentDragMetadata sourceTabView]


CatalogViewControllerState : NSObject
 @property  long long favoritesState
 @property  NSString *queryString
 @property  BOOL showingCompletions
 @property  BOOL showingUniversalFirstTimeExperience
 @property  BOOL fieldIsEmpty
 @property  UIViewController *completionDetailViewController

  // instance methods
  -[CatalogViewControllerState setQueryString:]
  -[CatalogViewControllerState queryString]
  -[CatalogViewControllerState .cxx_destruct]
  -[CatalogViewControllerState setShowingCompletions:]
  -[CatalogViewControllerState favoritesState]
  -[CatalogViewControllerState setFavoritesState:]
  -[CatalogViewControllerState isShowingCompletions]
  -[CatalogViewControllerState isShowingUniversalFirstTimeExperience]
  -[CatalogViewControllerState setShowingUniversalFirstTimeExperience:]
  -[CatalogViewControllerState fieldIsEmpty]
  -[CatalogViewControllerState setFieldIsEmpty:]
  -[CatalogViewControllerState completionDetailViewController]
  -[CatalogViewControllerState setCompletionDetailViewController:]


UnifiedBar : SFUnifiedBar <SFUnifiedTabBarNavigationDelegate, _SFNavigationBarCommon, _SFBarRegistrationObserving>
 @property  <_SFNavigationBarDelegateCommon> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UITextField *textField
 @property  NSArray *popoverPassthroughViews
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} URLOutlineFrameInNavigationBarSpace
 @property  <_SFPopoverSourceInfo> *formatMenuButtonPopoverSourceInfo
 @property  <_SFPopoverSourceInfo> *URLOutlinePopoverSourceInfo

  // instance methods
  -[UnifiedBar textField]
  -[UnifiedBar .cxx_destruct]
  -[UnifiedBar canBecomeFirstResponder]
  -[UnifiedBar setDelegate:]
  -[UnifiedBar delegate]
  -[UnifiedBar metricsDidChange]
  -[UnifiedBar URLOutlineFrameInNavigationBarSpace]
  -[UnifiedBar animateSafariIconLinkFromPoint:inView:]
  -[UnifiedBar animateLinkImage:fromRect:inView:toBarItem:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
  -[UnifiedBar popoverSourceInfoForBarItem:]
  -[UnifiedBar urlOutlineFrameRelativeToView:]
  -[UnifiedBar popoverPassthroughViews]
  -[UnifiedBar formatMenuButtonPopoverSourceInfo]
  -[UnifiedBar URLOutlinePopoverSourceInfo]
  -[UnifiedBar viewForBarItem:]
  -[UnifiedBar didCompleteBarRegistrationWithToken:]
  -[UnifiedBar unifiedTabBarURLTapped:completionHandler:]
  -[UnifiedBar unifiedTabBarMenuButtonTapped:]
  -[UnifiedBar unifiedTabBarMenuButtonReceivedTouchDown:]
  -[UnifiedBar unifiedTabBarMenuButtonClicked:]
  -[UnifiedBar unifiedTabBarVoiceSearchButtonTapped:]
  -[UnifiedBar unifiedTabBarReloadButtonTapped:]
  -[UnifiedBar unifiedTabBarStopButtonTapped:]
  -[UnifiedBar unifiedTabBarReaderButtonTapped:]
  -[UnifiedBar unifiedTabBarTranslationButtonTapped:]
  -[UnifiedBar unifiedTabBarMediaStateMuteButtonTapped:]
  -[UnifiedBar unifiedTabBar:extensionButtonTapped:extension:]
  -[UnifiedBar unifiedTabBar:multipleExtensionButtonTapped:]
  -[UnifiedBar squishedBarTapped]


ScrollToTopView : UIView
 @property  @? targetBlock
 @property  @? showBarsBlock
 @property  double defaultHeight

  // instance methods
  -[ScrollToTopView defaultHeight]
  -[ScrollToTopView .cxx_destruct]
  -[ScrollToTopView _targetScrollView]
  -[ScrollToTopView initWithFrame:]
  -[ScrollToTopView _showBars]
  -[ScrollToTopView initWithTargetBlock:]
  -[ScrollToTopView setShowBarsBlock:]
  -[ScrollToTopView _tappedScrollToTopView:]
  -[ScrollToTopView targetBlock]
  -[ScrollToTopView setTargetBlock:]
  -[ScrollToTopView showBarsBlock]


HighlightManager : WBSHighlightManager
  // instance methods
  -[HighlightManager loadLinkMetadataForMessageWithGUID:completionHandler:]
  -[HighlightManager updateAttributionViews]
  -[HighlightManager _handleRemovalOfHighlights:]
  -[HighlightManager .cxx_destruct]
  -[HighlightManager attributionViewForHighlight:]
  -[HighlightManager setPresenter:forHighlightIdentifier:]
  -[HighlightManager _isInterstellarEnabledForSafari]


SearchStateItem : NSObject
 @property  NSDate *cacheDate
 @property  CompletionList *completionList
 @property  NSString *destinationTLD
 @property  BOOL didOriginateFromSearchSuggestion
 @property  long long parsecQueryID

  // instance methods
  -[SearchStateItem .cxx_destruct]
  -[SearchStateItem completionList]
  -[SearchStateItem setCompletionList:]
  -[SearchStateItem cacheDate]
  -[SearchStateItem setCacheDate:]
  -[SearchStateItem parsecQueryID]
  -[SearchStateItem setParsecQueryID:]
  -[SearchStateItem destinationTLD]
  -[SearchStateItem setDestinationTLD:]
  -[SearchStateItem didOriginateFromSearchSuggestion]
  -[SearchStateItem setDidOriginateFromSearchSuggestion:]


SearchStateCache : NSObject
  // instance methods
  -[SearchStateCache .cxx_destruct]
  -[SearchStateCache init]
  -[SearchStateCache cachedCompletionListForTabDocument:]
  -[SearchStateCache idOfParsecQueryOriginatingFromSearchSuggestionInTabDocument:]
  -[SearchStateCache clearParsecQueryOriginatingFromSearchSuggestionInTabDocument:]
  -[SearchStateCache cacheAcceptanceOfCompletionItem:withCompletionList:forTabDocument:]
  -[SearchStateCache removeCachedSearchStateForTabDocument:]
  -[SearchStateCache cacheSearchQueryID:forTab:]
  -[SearchStateCache _cacheQueryForTabDocument:]


QuickWebsiteSearchCompletionProvider : CompletionProvider
  // instance methods
  -[QuickWebsiteSearchCompletionProvider setQueryToComplete:]


MockBrowserSavedState : _SFBrowserSavedState
 @property  unsigned long tabsCount
 @property  NSString *initalURLString

  // instance methods
  -[MockBrowserSavedState .cxx_destruct]
  -[MockBrowserSavedState savedTabsStateForBrowserControllerWithUUID:]
  -[MockBrowserSavedState activeDocumentIsValidForBrowserControllerWithUUID:]
  -[MockBrowserSavedState savedTabsStateForBrowserControllerWithUUID:initialURLString:]
  -[MockBrowserSavedState tabsCount]
  -[MockBrowserSavedState setTabsCount:]
  -[MockBrowserSavedState initalURLString]
  -[MockBrowserSavedState setInitalURLString:]


DownloadsActivity : TabDocumentActivity
 @property  ActionPanel *parentViewController

  // instance methods
  -[DownloadsActivity .cxx_destruct]
  -[DownloadsActivity _systemImageName]
  -[DownloadsActivity activityType]
  -[DownloadsActivity init]
  -[DownloadsActivity actionType]
  -[DownloadsActivity setParentViewController:]
  -[DownloadsActivity parentViewController]
  -[DownloadsActivity activityTitle]
  -[DownloadsActivity _navigationController]
  -[DownloadsActivity _activityBadgeText]
  -[DownloadsActivity _activityBadgeColor]
  -[DownloadsActivity _activityBadgeTextColor]
  -[DownloadsActivity _embeddedActivityViewController]
  -[DownloadsActivity canPerformWithTabDocument:]
  -[DownloadsActivity performActivityWithTabDocument:]
  -[DownloadsActivity canPerformOnNewTabPage]
  -[DownloadsActivity _downloadsDidChange]


SafariCloudBookmarksMigrationCoordinator : WBSCloudBookmarksMigrationCoordinator <WBSCloudBookmarksMigrationCoordinatorLocalDataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SafariCloudBookmarksMigrationCoordinator migrationCoordinator]

  // instance methods
  -[SafariCloudBookmarksMigrationCoordinator initWithSyncAgent:]
  -[SafariCloudBookmarksMigrationCoordinator getLocalMigrationStateForMigrationCoordinator:completionHandler:]
  -[SafariCloudBookmarksMigrationCoordinator _evaluateMigrationEnabled]
  -[SafariCloudBookmarksMigrationCoordinator _detectedLocalMigrationStateTransition:]
  -[SafariCloudBookmarksMigrationCoordinator dealloc]
  -[SafariCloudBookmarksMigrationCoordinator observeValueForKeyPath:ofObject:change:context:]


ContinuousReadingBannerView : UIView
 @property  NSString *title
 @property  NSString *subtitle
 @property  UIImage *image
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIImageView *imageView
 @property  ContinuousReadingItem *continuousReadingItem
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleRect
 @property  {UIEdgeInsets=dddd} topHairlineInsets
 @property  SFBannerTheme *theme

  // class methods
  +[ContinuousReadingBannerView hairlineColor]
  +[ContinuousReadingBannerView makeHairlineSeparator]

  // instance methods
  -[ContinuousReadingBannerView _updateImage]
  -[ContinuousReadingBannerView titleLabel]
  -[ContinuousReadingBannerView setSubtitleLabel:]
  -[ContinuousReadingBannerView theme]
  -[ContinuousReadingBannerView imageView]
  -[ContinuousReadingBannerView setTitle:]
  -[ContinuousReadingBannerView image]
  -[ContinuousReadingBannerView titleRect]
  -[ContinuousReadingBannerView .cxx_destruct]
  -[ContinuousReadingBannerView _updateLabels]
  -[ContinuousReadingBannerView setFrame:]
  -[ContinuousReadingBannerView setTitleLabel:]
  -[ContinuousReadingBannerView layoutSubviews]
  -[ContinuousReadingBannerView setSubtitle:]
  -[ContinuousReadingBannerView _bottomHairline]
  -[ContinuousReadingBannerView subtitleLabel]
  -[ContinuousReadingBannerView subtitle]
  -[ContinuousReadingBannerView setTheme:]
  -[ContinuousReadingBannerView title]
  -[ContinuousReadingBannerView initWithFrame:]
  -[ContinuousReadingBannerView setImage:]
  -[ContinuousReadingBannerView dealloc]
  -[ContinuousReadingBannerView setImageView:]
  -[ContinuousReadingBannerView _topHairline]
  -[ContinuousReadingBannerView observeValueForKeyPath:ofObject:change:context:]
  -[ContinuousReadingBannerView _scaledImageSize]
  -[ContinuousReadingBannerView _textBaseline]
  -[ContinuousReadingBannerView continuousReadingItem]
  -[ContinuousReadingBannerView initWithContinuousReadingItem:]
  -[ContinuousReadingBannerView setTopHairlineInsets:]
  -[ContinuousReadingBannerView topHairlineInsets]


TabGroupLibraryItemController : LibraryItemController
 @property  WBTabGroup *tabGroup
 @property  BOOL tabGroupSynced

  // instance methods
  -[TabGroupLibraryItemController tabGroupProvider]
  -[TabGroupLibraryItemController dragItems]
  -[TabGroupLibraryItemController .cxx_destruct]
  -[TabGroupLibraryItemController isEqual:]
  -[TabGroupLibraryItemController isSpringLoaded]
  -[TabGroupLibraryItemController accessibilityIdentifier]
  -[TabGroupLibraryItemController isSelected]
  -[TabGroupLibraryItemController tabGroup]
  -[TabGroupLibraryItemController allowsMoveOperation]
  -[TabGroupLibraryItemController secondaryAction]
  -[TabGroupLibraryItemController updateListContentConfiguration:]
  -[TabGroupLibraryItemController initWithConfiguration:sectionController:tabGroup:]
  -[TabGroupLibraryItemController dropOperationForSession:]
  -[TabGroupLibraryItemController dropIntentForSession:]
  -[TabGroupLibraryItemController performDropWithProposal:session:]
  -[TabGroupLibraryItemController isTabGroupSynced]
  -[TabGroupLibraryItemController didSelectItem]
  -[TabGroupLibraryItemController shouldPersistSelection]
  -[TabGroupLibraryItemController _sessionContainsTabDocuments:]
  -[TabGroupLibraryItemController _sessionContainsTabGroup:]


PPTUniversalCompletionProvider : UniversalSearchCompletionProvider
  // instance methods
  -[PPTUniversalCompletionProvider .cxx_destruct]
  -[PPTUniversalCompletionProvider setQueryToComplete:]
  -[PPTUniversalCompletionProvider _generateResultsForString:]
  -[PPTUniversalCompletionProvider _generateSingleResult]


PPTSearchSuggestionProvider : SearchSuggestionProvider
  // instance methods
  -[PPTSearchSuggestionProvider .cxx_destruct]
  -[PPTSearchSuggestionProvider setQueryToComplete:]
  -[PPTSearchSuggestionProvider _generateResultsForQuery:]


UniversalSearchCompletionProvider : CompletionProvider <WBSParsecSearchSessionDelegate>
 @property  NSNumber *searchRenderTimeout
 @property  NSNumber *otherRenderTimeout
 @property  NSNumber *minRenderTimeout
 @property  UniversalSearchSession *parsecSearchSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UniversalSearchCompletionProvider setSearchRenderTimeout:]
  -[UniversalSearchCompletionProvider setParsecSearchSession:]
  -[UniversalSearchCompletionProvider .cxx_destruct]
  -[UniversalSearchCompletionProvider searchRenderTimeout]
  -[UniversalSearchCompletionProvider init]
  -[UniversalSearchCompletionProvider _parsecBagDidLoad:]
  -[UniversalSearchCompletionProvider parsecSearchSession]
  -[UniversalSearchCompletionProvider otherRenderTimeout]
  -[UniversalSearchCompletionProvider dealloc]
  -[UniversalSearchCompletionProvider currentKeyboardIdentifierWithLayoutsForSession:completionHandler:]
  -[UniversalSearchCompletionProvider session:didReceiveResults:forQuery:]
  -[UniversalSearchCompletionProvider completionsForQuery:]
  -[UniversalSearchCompletionProvider setQueryToComplete:]
  -[UniversalSearchCompletionProvider maximumCachedCompletionCount]
  -[UniversalSearchCompletionProvider _updateInputMode:]
  -[UniversalSearchCompletionProvider _updateStateFromBag:]
  -[UniversalSearchCompletionProvider currentInputTypeForSession:]
  -[UniversalSearchCompletionProvider shouldHideParsecResult:basedOnHideRankGivenTopHit:indexOfTopHitInFrequentlyVisitedSites:]
  -[UniversalSearchCompletionProvider minRenderTimeout]


TabBar : UIView <UIGestureRecognizerDelegate, UIScrollViewDelegate, TabCollectionView>
 @property  <TabBarDelegate> *delegate
 @property  NSArray *items
 @property  long long tintStyle
 @property  BOOL hidesTitles
 @property  double itemWidth
 @property  double minimumTabWidth
 @property  SFTabHoverPreviewController *tabHoverPreviewController
 @property  unsigned long indexOfCenterItem
 @property  unsigned long maxNumberOfVisibleTabs
 @property  BOOL draggingItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  ReorderingAutoscroller *reorderingAutoscroller
 @property  BOOL supportsSystemDrag
 @property  unsigned long layoutAxes
 @property  BOOL supportsDropTransitionToItemView
 @property  BOOL canDragOntoActiveTab
 @property  BOOL hidesInactiveTabs
 @property  BOOL lastDecelerationWasInterrupted

  // class methods
  +[TabBar defaultHeight]

  // instance methods
  -[TabBar _tap:]
  -[TabBar hitTest:withEvent:]
  -[TabBar addInteraction:]
  -[TabBar items]
  -[TabBar setTintStyle:]
  -[TabBar .cxx_destruct]
  -[TabBar tintStyle]
  -[TabBar _updateBackground]
  -[TabBar layoutSubviews]
  -[TabBar _didCompleteScrolling]
  -[TabBar activateItem:]
  -[TabBar frameForItem:]
  -[TabBar setDelegate:]
  -[TabBar itemAtPoint:]
  -[TabBar scrollViewDidEndDragging:willDecelerate:]
  -[TabBar _didReceiveMemoryWarning:]
  -[TabBar scrollViewDidScroll:]
  -[TabBar setItems:]
  -[TabBar gestureRecognizerShouldBegin:]
  -[TabBar itemWidth]
  -[TabBar gestureRecognizer:shouldReceiveTouch:]
  -[TabBar scrollViewWillBeginDragging:]
  -[TabBar _itemWidth]
  -[TabBar supportsSystemDrag]
  -[TabBar initWithFrame:]
  -[TabBar delegate]
  -[TabBar dealloc]
  -[TabBar targetItemForDropAtPoint:]
  -[TabBar targetedDragPreviewForLiftingItem:]
  -[TabBar scrollViewDidEndDecelerating:]
  -[TabBar observeValueForKeyPath:ofObject:change:context:]
  -[TabBar _hover:]
  -[TabBar viewForItem:]
  -[TabBar _frameForItemAtIndex:]
  -[TabBar _isScrollable]
  -[TabBar scrollToItem:animated:]
  -[TabBar indexOfCenterItem]
  -[TabBar tabHoverPreviewController]
  -[TabBar _activateItemIfNeeded:]
  -[TabBar setHidesTitles:]
  -[TabBar _itemDidPressCloseButton:]
  -[TabBar _toggleMediaStateMutedForItem:]
  -[TabBar _requestReusableTabBarItemView]
  -[TabBar _relinquishReusableTabBarItemView:]
  -[TabBar contextMenuOptionsForItem:]
  -[TabBar supportsDropTransitionToItemView]
  -[TabBar _reorder:]
  -[TabBar _scrollableItemCount]
  -[TabBar _scrollableWidth]
  -[TabBar _scrollToItemIfNeeded:]
  -[TabBar _edgeToAlignWithPreviewForItem:]
  -[TabBar _itemAtLocation:]
  -[TabBar _horizontalPositionForItemAtIndex:withSlowingFactor:]
  -[TabBar _horizontalPositionForItemAtIndex:]
  -[TabBar _effectiveIndexForIndex:ofItems:]
  -[TabBar _initialFrameForItemAtIndex:]
  -[TabBar _layoutItem:atIndex:inRect:itemCount:beforeActiveItem:]
  -[TabBar _layoutContainers]
  -[TabBar _updateReorderRecognizer]
  -[TabBar _layoutIndexes:ofItems:]
  -[TabBar _scrollTowardItem:byAmount:]
  -[TabBar _itemForTouch:]
  -[TabBar maxNumberOfVisibleTabs]
  -[TabBar _maximumTruncationIndexForTitle:]
  -[TabBar hidesTitles]
  -[TabBar minimumTabWidth]
  -[TabBar isDraggingItem]
  -[TabBar setDraggingItem:]


TabBarItem : NSObject <SFTabHoverPreviewItem, TabCollectionItem>
 @property  TabBar *tabBar
 @property  TabBarItemLayoutInfo *layoutInfo
 @property  NSString *title
 @property  UIImage *icon
 @property  BOOL active
 @property  BOOL isPlaceholder
 @property  unsigned long mediaStateIcon
 @property  NSUUID *UUID
 @property  long long dragState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabBarItem setIsPlaceholder:]
  -[TabBarItem layoutInfo]
  -[TabBarItem UUID]
  -[TabBarItem icon]
  -[TabBarItem setTitle:]
  -[TabBarItem isActive]
  -[TabBarItem tabBar]
  -[TabBarItem .cxx_destruct]
  -[TabBarItem setMediaStateIcon:]
  -[TabBarItem setTabBar:]
  -[TabBarItem mediaStateIcon]
  -[TabBarItem setLayoutInfo:]
  -[TabBarItem setIcon:]
  -[TabBarItem title]
  -[TabBarItem setActive:]
  -[TabBarItem setDragState:]
  -[TabBarItem isPlaceholder]
  -[TabBarItem dragState]
  -[TabBarItem setUUID:]


TabBarItemView : UIView
 @property  UIButton *closeButton
 @property  UIButton *mediaStateMuteButton
 @property  UIImage *icon
 @property  BOOL active
 @property  BOOL reordering
 @property  BOOL isPlaceholder
 @property  unsigned long mediaStateIcon
 @property  long long visibleEdge
 @property  BOOL hidesTitleText
 @property  double titleLayoutWidth
 @property  long long titleAnchorEdge
 @property  double titleAnchorAdditionalOffset
 @property  double contentOffset

  // instance methods
  -[TabBarItemView setIsPlaceholder:]
  -[TabBarItemView hitTest:withEvent:]
  -[TabBarItemView setContentOffset:]
  -[TabBarItemView icon]
  -[TabBarItemView contentOffset]
  -[TabBarItemView isActive]
  -[TabBarItemView initWithTabBar:]
  -[TabBarItemView .cxx_destruct]
  -[TabBarItemView setMediaStateIcon:]
  -[TabBarItemView setFrame:]
  -[TabBarItemView _layoutTitleLabel]
  -[TabBarItemView mediaStateIcon]
  -[TabBarItemView setIcon:]
  -[TabBarItemView setActive:]
  -[TabBarItemView setTitleText:]
  -[TabBarItemView setReordering:]
  -[TabBarItemView isPlaceholder]
  -[TabBarItemView setBounds:]
  -[TabBarItemView closeButton]
  -[TabBarItemView isReordering]
  -[TabBarItemView _hover:]
  -[TabBarItemView _hasRoomForIconAndCloseButton]
  -[TabBarItemView _showsCloseButton]
  -[TabBarItemView setVisibleEdge:]
  -[TabBarItemView setTitleAnchorEdge:]
  -[TabBarItemView setTitleLayoutWidth:]
  -[TabBarItemView setTitleAnchorAdditionalOffset:]
  -[TabBarItemView updateTitleTruncation]
  -[TabBarItemView updateTabBarStyle]
  -[TabBarItemView setHidesTitleText:]
  -[TabBarItemView hidesTitleText]
  -[TabBarItemView mediaStateMuteButton]
  -[TabBarItemView configureForDragPreview]
  -[TabBarItemView titleLayoutWidth]
  -[TabBarItemView titleAnchorAdditionalOffset]
  -[TabBarItemView _physicalEdgeForLogicalEdge:]
  -[TabBarItemView _titleBounds]
  -[TabBarItemView _closeButtonFrame]
  -[TabBarItemView _layoutTitleLabelUsingCachedTruncation]
  -[TabBarItemView _titleBoundingBox]
  -[TabBarItemView _iconPosition]
  -[TabBarItemView _truncatedTitleWithFont:desiredWidth:truncatedSize:]
  -[TabBarItemView _updateCloseButtonAlpha]
  -[TabBarItemView _updateMediaStateButtonButtonAlpha]
  -[TabBarItemView _layoutMediaStateIndicator]
  -[TabBarItemView _updateIconViewVisibility]
  -[TabBarItemView _layoutEdges]
  -[TabBarItemView _layoutTitleClipperView]
  -[TabBarItemView _layoutCloseButton]
  -[TabBarItemView _canUseCachedTitleTruncationOnBoundsChange]
  -[TabBarItemView _updateHighlightAlpha]
  -[TabBarItemView _showOrHideCloseButton]
  -[TabBarItemView _isHovering]
  -[TabBarItemView _updateMediaStateIndicator]
  -[TabBarItemView _isHoveringOverCloseButton]
  -[TabBarItemView visibleEdge]
  -[TabBarItemView titleAnchorEdge]


TabCloseUndoGroup : NSObject
 @property  long long type
 @property  NSString *name

  // instance methods
  -[TabCloseUndoGroup initWithType:]
  -[TabCloseUndoGroup name]
  -[TabCloseUndoGroup .cxx_destruct]
  -[TabCloseUndoGroup initWithName:]
  -[TabCloseUndoGroup type]
  -[TabCloseUndoGroup _initWithType:name:]


TabController : NSObject <TabBarDelegate, TabOverviewDelegate, TabSnapshotCacheDelegate, TiltedTabViewDelegate, TabBarManagerObserving, UITextFieldDelegate, SFTabHoverPreviewControllerDelegate, WBTabGroupManagerObserver, TabDocumentDragDropDataSource, WBSTabOrderProvider>
 @property  BOOL privateBrowsingEnabled
 @property  NSArray *tiltedTabViewToolbarItems
 @property  TabDocument *activeTabDocument
 @property  TabOverview *tabOverview
 @property  NSArray *tabDocuments
 @property  NSArray *privateTabDocuments
 @property  NSArray *allTabDocuments
 @property  NSSet *allSnapshotIdentifiers
 @property  unsigned long numberOfCurrentNonHiddenTabs
 @property  TabDocument *privateActiveTabDocument
 @property  TabDocument *normalActiveTabDocument
 @property  TabDocument *tabDocumentBeingActivated
 @property  BOOL tabViewDefersActivation
 @property  BOOL canCloseTab
 @property  BOOL canCloseOtherTabs
 @property  _SFBrowserSavedState *savedState
 @property  WBWindowState *windowState
 @property  BOOL updatingTabGroupTabs
 @property  long long privateBrowsingMode
 @property  BOOL controlledByAutomation
 @property  WBSTabOrderManager *tabOrderManager
 @property  BOOL canAddNewTabForCurrentBrowsingMode
 @property  TabDocument *tabDocumentForSpotlightSearch
 @property  CloudTabStore *cloudTabStore
 @property  TabBar *tabBar
 @property  TabBarManager *tabBarManager
 @property  BOOL hasTabBar
 @property  TiltedTabView *tiltedTabView
 @property  BOOL usesTiltedTabView
 @property  BOOL usesTabOverview
 @property  BOOL showingTabView
 @property  UIView<TabThumbnailCollectionView> *tabThumbnailCollectionView
 @property  long long tabThumbnailCollectionViewStyle
 @property  BOOL snapshotInvalidationIsPostponed
 @property  @? postponedSnapshotInvalidationCondition
 @property  BOOL snapshotsAreEnabled
 @property  long long tabDisplayMode
 @property  BOOL shouldTogglePrivateBrowsingOnSplit
 @property  BOOL hasTabsThatShouldBeObscuredForDigitalHealth
 @property  NSArray *tabDocumentsMatchingSearchTerm
 @property  TabDocument *hiddenPrivateTabDocumentWhenShowingPrivateBrowsingExplanationText
 @property  long long visibleTabCollectionViewType
 @property  BOOL canCreateTabGroupFromCurrentTabs
 @property  BOOL canRenameActiveTabGroup
 @property  UIMenu *tabExposeMenu
 @property  UIMenu *newTabGroupMenu
 @property  NSUndoManager *undoManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIView<TabCollectionView> *tabCollectionView
 @property  NSArray *currentTabDocuments
 @property  WBTabGroup *activeTabGroup
 @property  BOOL tabGroupOverviewIsPresented
 @property  BOOL createTabGroupAlertIsPresented
 @property  NSString *moveLocalTabsToNewGroupTitle
 @property  NSString *activeLibraryType
 @property  NSArray *tabGroups
 @property  NSArray *localTabGroups
 @property  NSArray *syncedTabGroups
 @property  NSSet *nonActiveTabGroups
 @property  unsigned long indexOfSelectedTab
 @property  <WBSOrderedTab> *selectedTabForTabOrderProvider
 @property  unsigned long numberOfTabs

  // instance methods
  -[TabController tabCollectionViewDidDismiss:]
  -[TabController canCloseTab]
  -[TabController tabThumbnailCollectionView]
  -[TabController openInTabGroupMenuWithNewTabGroupName:URL:descendantCount:handler:]
  -[TabController tabItem:matchesSearchText:]
  -[TabController cloudTabStore]
  -[TabController closeTab]
  -[TabController windowState]
  -[TabController tabCollectionViewWillPresent:]
  -[TabController renameTabGroup:]
  -[TabController tabCollectionView:validSnapshotExistsForItem:]
  -[TabController tabCollectionViewDidPresent:]
  -[TabController initWithBrowserController:]
  -[TabController openNewTabWithOptions:completionHandler:]
  -[TabController tabCollectionViewDidCancelDismissal:]
  -[TabController tabCollectionViewWillDismiss:]
  -[TabController _cancelVeryRecentlyClosedTabCountInvalidationTimer]
  -[TabController didTransitionTabView]
  -[TabController openBookmark:inTabGroup:]
  -[TabController switchToTabWithUUID:inTabGroupWithUUID:]
  -[TabController tabBarManager]
  -[TabController adoptTabsFromTabController:]
  -[TabController setPrivateBrowsingEnabled:]
  -[TabController tabSnapshotCache:shouldRequestSavedSnapshotWithIdentifier:]
  -[TabController capacityForTabSnapshotCache:]
  -[TabController setTabThumbnailCollectionViewStyle:]
  -[TabController tabGroupManager:didUpdateTabsInTabGroup:]
  -[TabController isControlledByAutomation]
  -[TabController visibleTabCollectionViewType]
  -[TabController setTabGroupOverviewIsPresented:]
  -[TabController openTabDocumentForLibraryType:]
  -[TabController _cloudTabsDidUpdate:]
  -[TabController setPostponedSnapshotInvalidationCondition:]
  -[TabController tiltedTabViewDidEndSearching:]
  -[TabController usesTiltedTabView]
  -[TabController undoManager]
  -[TabController existingPersistedTitleForTabDocument:]
  -[TabController removeSnapshotForDocument:]
  -[TabController tabCollectionView:didMoveItem:overItem:]
  -[TabController usesTabOverview]
  -[TabController insertInitialBlankTabDocumentWithPrivateBrowsingIfNeeded:]
  -[TabController allTabDocuments]
  -[TabController textFieldDidBeginEditing:]
  -[TabController tabDocuments]
  -[TabController setTabViewDefersActivation:]
  -[TabController removeSingleBlankTabFromActiveTabGroup]
  -[TabController setShouldTogglePrivateBrowsingOnSplit:]
  -[TabController tabSnapshotCacheDidFinishUpdating:]
  -[TabController updateSelectedTabGroupName]
  -[TabController updateTabGroupTabWithTabDocument:]
  -[TabController tabOverviewWillUpdateInteractivePresentation:]
  -[TabController effectiveSafeAreaInsetsForTabCollectionView:]
  -[TabController restoreEducationDeviceTabs]
  -[TabController setPrivateActiveTabDocument:]
  -[TabController updateTabBarAnimated:]
  -[TabController tabBar]
  -[TabController hasTabsThatShouldBeObscuredForDigitalHealth]
  -[TabController currentTabDocuments]
  -[TabController setSnapshotsAreEnabled:]
  -[TabController _dismissTabView]
  -[TabController tabGroupsMenuForTabGroupButton:]
  -[TabController .cxx_destruct]
  -[TabController updateTabViewsAnimatingTabBar:]
  -[TabController setTabDisplayMode:]
  -[TabController updateHibernatedTabDocumentsSavingState]
  -[TabController createTabGroupFromExistingTabs:completionHandler:]
  -[TabController canAddNewTabForCurrentBrowsingMode]
  -[TabController tabHoverPreviewControllerDismissPreview:]
  -[TabController tabCollectionView:closeCloudTab:onDevice:]
  -[TabController isShowingTabView]
  -[TabController closeAllOpenTabsAnimated:temporarily:]
  -[TabController createNewTabGroup]
  -[TabController insertTabDocuments:beforeTabDocument:inBackground:animated:]
  -[TabController _updateUserActivityTimerFired]
  -[TabController updateTabCount]
  -[TabController tabDocumentBeingActivated]
  -[TabController addNewTabGroupWithTitle:fromExistingTabs:]
  -[TabController tabCollectionViewItemHeaderHeight:]
  -[TabController isPrivateBrowsingEnabled]
  -[TabController closeOtherTabs]
  -[TabController selectPreviousTabGroup]
  -[TabController setTabBar:]
  -[TabController setActiveTabDocument:animated:deferActivation:]
  -[TabController tiltedTabView]
  -[TabController tiltedTabView:animateTopBackdropView:hidden:]
  -[TabController swipeActionsConfigurationForTabGroup:forPickerSheet:]
  -[TabController canAddNewTabForPrivateBrowsing:]
  -[TabController didBeginTrackingSession:]
  -[TabController nonActiveTabGroups]
  -[TabController setActiveTabDocument:]
  -[TabController updateEducationTabsLastSyncDate]
  -[TabController canCreateTabGroupFromCurrentTabs]
  -[TabController openInitialBlankTabDocumentIfNeeded]
  -[TabController moveTabGroup:beforeOrAfterTabGroup:]
  -[TabController tabDocumentWithIDForWebExtensions:]
  -[TabController tabOverview:willInteractivelyCloseItem:]
  -[TabController browserControllerContainingLocalTabGroupUUID:]
  -[TabController insertPlaceholderTabDocumentAfterDocument:]
  -[TabController normalActiveTabDocument]
  -[TabController switchOutOfSyncedTabGroup]
  -[TabController tabSnapshotCache:didCacheSnapshotWithIdentifier:]
  -[TabController openURL:inTabGroup:]
  -[TabController setPrivateBrowsingMode:]
  -[TabController tabGroupsMenuElementsWithOptions:newTabGroupName:hostTitle:descendantCount:isMoveAction:actionHandler:]
  -[TabController tabOverviewShouldReserveSpaceForSidebarButton:]
  -[TabController setPrivateBrowsingMode:animated:]
  -[TabController evictTabDocument:]
  -[TabController _undoCloseTabs:]
  -[TabController tabCollectionViewEndIgnoringUserInteraction:reason:]
  -[TabController didEndTrackingSession:]
  -[TabController invalidateSnapshotForTabDocument:]
  -[TabController syncedTabGroups]
  -[TabController tabDocumentWithUUID:]
  -[TabController tabViewDefersActivation]
  -[TabController moveTabDocument:toTabGroup:]
  -[TabController tabOverviewDidChangeAllowsInteractivePresentation:]
  -[TabController tiltedTabViewToolbarItems]
  -[TabController textFieldDidEndEditing:]
  -[TabController insertTabDocument:afterTabDocument:inBackground:animated:]
  -[TabController tabGroupManagerDidFinishSetup:]
  -[TabController tabBar:toggleMediaStateMutedForItem:]
  -[TabController tabCollectionViewDidUpdateItemVisibilityOrder:]
  -[TabController tabCollectionView:relinquishBorrowedContentView:forItem:]
  -[TabController tabGroups]
  -[TabController requestSnapshotForTabDocument:completion:]
  -[TabController privateBrowsingMode]
  -[TabController updateTabGroupTabWithTabDocument:notify:]
  -[TabController expectedSuperviewForTiltedTabView:]
  -[TabController selectNextTabGroup]
  -[TabController postponedSnapshotInvalidationCondition]
  -[TabController imageForTabGroup:]
  -[TabController moveLocalTabsToNewGroupTitle]
  -[TabController registerUndoWithType:actions:]
  -[TabController suggestedSnapshotSizeForTiltedTabView:]
  -[TabController tabOverview:closeItems:]
  -[TabController _didReceiveMemoryWarning:]
  -[TabController tabCollectionViewBeginIgnoringUserInteraction:reason:]
  -[TabController tabHoverPreviewControllerNeedsSnapshotUpdate:]
  -[TabController cachedContentImageForTabDocument:]
  -[TabController indexForTab:]
  -[TabController localTabGroups]
  -[TabController tabBar:canMoveItem:]
  -[TabController openNewTabWithOptions:libraryType:completionHandler:]
  -[TabController tabCollectionView:didSelectItem:]
  -[TabController updateSnapshotsForTabHoverPreviewIfNeeded]
  -[TabController activeLibraryType]
  -[TabController setActiveTabGroup:]
  -[TabController tabOverview]
  -[TabController setTabBarManager:]
  -[TabController updateTiltedTabViewToolbarItems:]
  -[TabController clearBrowserController]
  -[TabController tabCollectionView:canCloseItem:]
  -[TabController tabBarManager:didCreateTabBar:]
  -[TabController _saveStateFromTimer:]
  -[TabController itemsToKeepVisibleForTabOverview:]
  -[TabController itemsToKeepVisibleForTiltedTabView:]
  -[TabController originatingTabForTab:]
  -[TabController removeSingleBlankTabFromInactiveTabGroup:]
  -[TabController tabCollectionView:item:matchesSearchText:]
  -[TabController tabSnapshotCache:requestSnapshotWithIdentifier:completion:]
  -[TabController setActiveTabDocument:animated:]
  -[TabController tabCollectionView:cloudTab:matchesSearchText:]
  -[TabController tabDocumentForSpotlightSearch]
  -[TabController canRenameActiveTabGroup]
  -[TabController willTransitionTabView]
  -[TabController closeTabsAutomaticallyIfNecessary]
  -[TabController tabThumbnailCollectionViewStyle]
  -[TabController insertNewBlankTabDocumentAnimated:]
  -[TabController moveTabDocument:overTabDocument:]
  -[TabController setNormalActiveTabDocument:]
  -[TabController tabGroupManager:didRemoveTabGroup:]
  -[TabController tabGroupManager:didUpdateTabGroup:]
  -[TabController updateActiveTab]
  -[TabController numberOfTabs]
  -[TabController tabAtIndex:]
  -[TabController willLoseOwnershipOfTabDocument:]
  -[TabController performBatchUpdatesWithBlock:]
  -[TabController flushPendingSnapshotsWithCompletion:]
  -[TabController updatingTabGroupTabs]
  -[TabController tabGroupOverviewIsPresented]
  -[TabController closeTabDocuments:animated:]
  -[TabController savedState]
  -[TabController contextMenuConfigurationForTabGroup:forPickerSheet:]
  -[TabController tabCollectionView:snapshotForItem:]
  -[TabController menuForTabGroup:forPickerSheet:forEditMode:]
  -[TabController duplicateTabDocument:]
  -[TabController activeTabDocument]
  -[TabController makeActiveTabDocumentActive]
  -[TabController tabGroupManager:didUpdateTab:userDriven:]
  -[TabController tabExposeMenu]
  -[TabController logTabActivationInterval:forActivationType:]
  -[TabController hiddenPrivateTabDocumentWhenShowingPrivateBrowsingExplanationText]
  -[TabController _redoCloseTabsWithUUIDs:]
  -[TabController selectedTabForTabOrderProvider]
  -[TabController _currentTabs]
  -[TabController tiltedTabViewWillBeginSearching:]
  -[TabController addSnapshotCacheObserver:]
  -[TabController registerUndoWithName:actions:]
  -[TabController _newTabFromTabViewButton]
  -[TabController restoreRecentlyClosedTabDocumentWithTabStateData:]
  -[TabController blankTabDocumentToReuse]
  -[TabController privateTabDocuments]
  -[TabController updateSnapshotCacheAndSnapshotActiveTab]
  -[TabController insertTabDocumentFromTabStateData:]
  -[TabController tabDocumentForURL:]
  -[TabController canCloseOtherTabs]
  -[TabController currentItemForTiltedTabView:]
  -[TabController _validateSavedState:]
  -[TabController unhideTabDocuments:]
  -[TabController tabCollectionView]
  -[TabController tabDisplayMode]
  -[TabController tabHoverPreviewController:showPreviewForItem:]
  -[TabController dealloc]
  -[TabController activeTabGroup]
  -[TabController addDocumentObserver:]
  -[TabController hasTabBar]
  -[TabController insertNewTabDocumentWithDefaultOrdering:inBackground:animated:]
  -[TabController setWindowState:]
  -[TabController shouldTogglePrivateBrowsingOnSplit]
  -[TabController closeTabDocuments:]
  -[TabController tabGroupWithUUID:]
  -[TabController undoManagerForTabCollectionView:]
  -[TabController updateLocalTabGroupTitle]
  -[TabController currentItemForTabOverview:]
  -[TabController replaceTabDocument:withTabDocument:]
  -[TabController tabOrderManager]
  -[TabController closeAllOpenTabsAnimated:]
  -[TabController closeTabGroup:]
  -[TabController snapshotsAreEnabled]
  -[TabController sortTabsWithMode:]
  -[TabController saveTabDocumentUserActivitySoon:]
  -[TabController tabDocumentDidUpdateUUID:previousUUID:]
  -[TabController closeTabDocument:animated:]
  -[TabController setSavedState:]
  -[TabController privateActiveTabDocument]
  -[TabController tabGroupNamingTextDidChange:]
  -[TabController blankTabDocumentToReuseAllowingReorder:]
  -[TabController insertNewTabDocument:forcingOrderAfterTabDocument:inBackground:animated:]
  -[TabController newTabGroupMenu]
  -[TabController removeDocumentObserver:]
  -[TabController updateUsageTrackingInformationIfNecessary]
  -[TabController allSnapshotIdentifiers]
  -[TabController tabCollectionView:item:didProduceNavigationIntent:]
  -[TabController removeSnapshotCacheObserver:]
  -[TabController presentAlertToCreateTabGroupFromExistingTabs:withTitle:withMessage:withSuggestedName:okActionTitle:completionHandler:]
  -[TabController deactivateAllUsageTrackingInformationIfNecessary]
  -[TabController didGainOwnershipOfTabDocument:]
  -[TabController hideTabDocuments:]
  -[TabController setSnapshotInvalidationIsPostponed:]
  -[TabController tabCollectionView:borrowContentViewForItem:withTopBackdropView:ofHeight:]
  -[TabController numberOfCurrentNonHiddenTabs]
  -[TabController tabCollectionView:closeItem:]
  -[TabController replacePlaceholderTabDocument:withTabDocuments:transitionToDragStateWithBlock:]
  -[TabController closeTabDocuments:animated:allowAddingToRecentlyClosedTabs:showAutoCloseTabsAlert:]
  -[TabController snapshotInvalidationIsPostponed]
  -[TabController snapshotsToPresistOnDiskForTabSnapshotCache:]
  -[TabController tabDocumentsMatchingSearchTerm]
  -[TabController tabGroupManagerDidUpdateTabGroups:]
  -[TabController tabSnapshotCache:didEvictSnapshotWithIdentifier:]
  -[TabController indexOfSelectedTab]
  -[TabController createTabGroupAlertIsPresented]
  -[TabController tabSnapshotCacheShouldDeferNextSnapshotRequest:]
  -[TabController closeTabDocumentWithURL:UUID:]


TabSnapshotCacheStressTestRunner : NSObject <TabSnapshotCacheDelegate>
 @property  TabSnapshotCache *cache
 @property  NSMutableOrderedSet *currentUUIDs
 @property  unsigned long iterations
 @property  unsigned long cachesUntilNextIteration
 @property  unsigned long maxIterations
 @property  <TabSnapshotCacheStressTestRunnerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabSnapshotCacheStressTestRunner setCache:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCache:shouldRequestSavedSnapshotWithIdentifier:]
  -[TabSnapshotCacheStressTestRunner capacityForTabSnapshotCache:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCacheDidFinishUpdating:]
  -[TabSnapshotCacheStressTestRunner setIterations:]
  -[TabSnapshotCacheStressTestRunner .cxx_destruct]
  -[TabSnapshotCacheStressTestRunner cache]
  -[TabSnapshotCacheStressTestRunner setDelegate:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCache:didCacheSnapshotWithIdentifier:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCache:requestSnapshotWithIdentifier:completion:]
  -[TabSnapshotCacheStressTestRunner delegate]
  -[TabSnapshotCacheStressTestRunner start]
  -[TabSnapshotCacheStressTestRunner iterations]
  -[TabSnapshotCacheStressTestRunner snapshotsToPresistOnDiskForTabSnapshotCache:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCache:didEvictSnapshotWithIdentifier:]
  -[TabSnapshotCacheStressTestRunner tabSnapshotCacheShouldDeferNextSnapshotRequest:]
  -[TabSnapshotCacheStressTestRunner currentUUIDs]
  -[TabSnapshotCacheStressTestRunner setCurrentUUIDs:]
  -[TabSnapshotCacheStressTestRunner setMaxIterations:]
  -[TabSnapshotCacheStressTestRunner _runIteration]
  -[TabSnapshotCacheStressTestRunner _mutableOrderedSetOfUUIDsWithCount:]
  -[TabSnapshotCacheStressTestRunner _mutatedUUIDsFromUUIDs:]
  -[TabSnapshotCacheStressTestRunner maxIterations]
  -[TabSnapshotCacheStressTestRunner cachesUntilNextIteration]
  -[TabSnapshotCacheStressTestRunner setCachesUntilNextIteration:]


ViewWithCustomNextResponder : UIView
 @property  UIResponder *customNextResponder

  // instance methods
  -[ViewWithCustomNextResponder nextResponder]
  -[ViewWithCustomNextResponder .cxx_destruct]
  -[ViewWithCustomNextResponder setCustomNextResponder:]
  -[ViewWithCustomNextResponder customNextResponder]


BarContainerView : UIView
 @property  NSSet *barViews

  // instance methods
  -[BarContainerView hitTest:withEvent:]
  -[BarContainerView didMoveToSuperview]
  -[BarContainerView .cxx_destruct]
  -[BarContainerView registerBarView:]
  -[BarContainerView barViews]
  -[BarContainerView initWithFrame:]
  -[BarContainerView unregisterBarView:]


StatusBarSpinnerController : NSObject <LoadProgressObserver>
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[StatusBarSpinnerController didStartLoadingResource]
  -[StatusBarSpinnerController .cxx_destruct]
  -[StatusBarSpinnerController didStopLoadingResource]
  -[StatusBarSpinnerController init]
  -[StatusBarSpinnerController isEnabled]
  -[StatusBarSpinnerController updateProgressWithResource:]
  -[StatusBarSpinnerController didFailLoadingResource:]
  -[StatusBarSpinnerController _setProgress:]
  -[StatusBarSpinnerController _setResourcesLoading:]
  -[StatusBarSpinnerController setEnabled:]
  -[StatusBarSpinnerController _updateProgressIndicator]


ApplicationShortcutController : NSObject
 @property  BrowserController *browserController

  // class methods
  +[ApplicationShortcutController _shortcutItems]
  +[ApplicationShortcutController _shortcutItemWithType:systemImageName:]
  +[ApplicationShortcutController updateShortcutItemsIfNeeded]

  // instance methods
  -[ApplicationShortcutController browserController]
  -[ApplicationShortcutController setBrowserController:]
  -[ApplicationShortcutController .cxx_destruct]
  -[ApplicationShortcutController handleActionWithType:forShortcut:]
  -[ApplicationShortcutController init]
  -[ApplicationShortcutController _handleActionWithType:forShortcut:]
  -[ApplicationShortcutController _showBookmarksPanelWithSelectedCollection:]
  -[ApplicationShortcutController handleShortcutItemWithType:]
  -[ApplicationShortcutController _openNewEmptyTabWithURLFieldFocused:privateBrowsingState:]


UniversalSearchCompositeResultCompletionItem : NSObject <SearchUIFeedbackDelegate, CompletionItem>
 @property  NSArray *results
 @property  NSString *bestSectionHeader
 @property  BOOL accessoryItem
 @property  BOOL allowsAccessoryItem
 @property  BOOL restoresSearchState
 @property  NSString *title
 @property  BOOL shouldPrefetch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion

  // instance methods
  -[UniversalSearchCompositeResultCompletionItem resultsDidBecomeVisible:]
  -[UniversalSearchCompositeResultCompletionItem didEngageResult:]
  -[UniversalSearchCompositeResultCompletionItem didEngageCardSection:]
  -[UniversalSearchCompositeResultCompletionItem results]
  -[UniversalSearchCompositeResultCompletionItem .cxx_destruct]
  -[UniversalSearchCompositeResultCompletionItem isEquivalentTo:]
  -[UniversalSearchCompositeResultCompletionItem userVisibleURLString]
  -[UniversalSearchCompositeResultCompletionItem cardViewDidAppear:]
  -[UniversalSearchCompositeResultCompletionItem title]
  -[UniversalSearchCompositeResultCompletionItem didPerformCommand:]
  -[UniversalSearchCompositeResultCompletionItem parsecQueryID]
  -[UniversalSearchCompositeResultCompletionItem setParsecQueryID:]
  -[UniversalSearchCompositeResultCompletionItem _separatorStyle]
  -[UniversalSearchCompositeResultCompletionItem parsecDomainIdentifier]
  -[UniversalSearchCompositeResultCompletionItem sfSearchResultValue]
  -[UniversalSearchCompositeResultCompletionItem engagementDestination]
  -[UniversalSearchCompositeResultCompletionItem shouldPrefetchWithMatchLength:]
  -[UniversalSearchCompositeResultCompletionItem restoresSearchState]
  -[UniversalSearchCompositeResultCompletionItem completionTableViewCellReuseIdentifier]
  -[UniversalSearchCompositeResultCompletionItem acceptCompletionWithActionHandler:]
  -[UniversalSearchCompositeResultCompletionItem auditAcceptedCompletionWithRank:]
  -[UniversalSearchCompositeResultCompletionItem completionTableViewCellForCompletionList:]
  -[UniversalSearchCompositeResultCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[UniversalSearchCompositeResultCompletionItem reflectedStringForUserTypedString:]
  -[UniversalSearchCompositeResultCompletionItem _applySeparatorStyleToCell:forSeparatorStyle:]
  -[UniversalSearchCompositeResultCompletionItem _postFeedback:]
  -[UniversalSearchCompositeResultCompletionItem bestSectionHeader]
  -[UniversalSearchCompositeResultCompletionItem initWithResults:isAccessoryItem:forQueryId:]
  -[UniversalSearchCompositeResultCompletionItem allowsAccessoryItem]
  -[UniversalSearchCompositeResultCompletionItem isAccessoryItem]
  -[UniversalSearchCompositeResultCompletionItem shouldPrefetch]
  -[UniversalSearchCompositeResultCompletionItem setShouldPrefetch:]


ContentInteractionTestRunner : PageLoadTestRunner
 @property  int iterations

  // instance methods
  -[ContentInteractionTestRunner setIterations:]
  -[ContentInteractionTestRunner iterations]
  -[ContentInteractionTestRunner initWithTestName:browserController:]
  -[ContentInteractionTestRunner startPageAction:]
  -[ContentInteractionTestRunner startTrackingFrameRate]
  -[ContentInteractionTestRunner pageWebView]
  -[ContentInteractionTestRunner endTrackingFrameRate]
  -[ContentInteractionTestRunner startSubtest:]
  -[ContentInteractionTestRunner stopSubtest:]


AddToNewsUIActivity : UIApplicationExtensionActivity
 @property  TabDocument *tabDocument

  // class methods
  +[AddToNewsUIActivity activityCategory]
  +[AddToNewsUIActivity activityWithTabDocument:error:]

  // instance methods
  -[AddToNewsUIActivity .cxx_destruct]
  -[AddToNewsUIActivity canPerformWithActivityItems:]
  -[AddToNewsUIActivity init]
  -[AddToNewsUIActivity prepareWithActivityItems:]
  -[AddToNewsUIActivity tabDocument]
  -[AddToNewsUIActivity initWithApplicationExtension:tabDocument:]
  -[AddToNewsUIActivity setTabDocument:]


CloudTabItemDeleteButton : UIButton
  // class methods
  +[CloudTabItemDeleteButton deleteButton]

  // instance methods
  -[CloudTabItemDeleteButton .cxx_destruct]
  -[CloudTabItemDeleteButton layoutSubviews]
  -[CloudTabItemDeleteButton sizeThatFits:]
  -[CloudTabItemDeleteButton initWithFrame:]


CloudTabItemDeleteConfirmationView : UIView
 @property  double defaultWidth
 @property  UIButton *deleteButton

  // instance methods
  -[CloudTabItemDeleteConfirmationView .cxx_destruct]
  -[CloudTabItemDeleteConfirmationView layoutSubviews]
  -[CloudTabItemDeleteConfirmationView init]
  -[CloudTabItemDeleteConfirmationView defaultWidth]
  -[CloudTabItemDeleteConfirmationView deleteButton]


LibraryItemController : NSObject
 @property  LibrarySectionController *sectionController
 @property  LibraryConfiguration *configuration
 @property  BOOL isSelected
 @property  BOOL isHidden
 @property  BOOL shouldPersistSelection
 @property  BOOL selectionFollowsFocus
 @property  UIAction *secondaryAction
 @property  @? secondaryActionVisibilityProvider
 @property  UIContextMenuConfiguration *contextMenuConfiguration
 @property  UISwipeActionsConfiguration *swipeActionsConfiguration
 @property  NSArray *dragItems
 @property  BOOL isSpringLoaded
 @property  NSString *accessibilityIdentifier
 @property  UIViewController *viewController

  // instance methods
  -[LibraryItemController viewController]
  -[LibraryItemController dragItems]
  -[LibraryItemController configuration]
  -[LibraryItemController .cxx_destruct]
  -[LibraryItemController isHidden]
  -[LibraryItemController sectionController]
  -[LibraryItemController isSpringLoaded]
  -[LibraryItemController accessibilityIdentifier]
  -[LibraryItemController isSelected]
  -[LibraryItemController contextMenuConfiguration]
  -[LibraryItemController contentDidChange]
  -[LibraryItemController selectionFollowsFocus]
  -[LibraryItemController secondaryAction]
  -[LibraryItemController updateToolbarIfNeeded]
  -[LibraryItemController initWithConfiguration:sectionController:]
  -[LibraryItemController updateListContentConfiguration:]
  -[LibraryItemController dropOperationForSession:]
  -[LibraryItemController dropIntentForSession:]
  -[LibraryItemController performDropWithProposal:session:]
  -[LibraryItemController secondaryActionVisibilityProvider]
  -[LibraryItemController swipeActionsConfiguration]
  -[LibraryItemController didSelectItem]
  -[LibraryItemController shouldPersistSelection]
  -[LibraryItemController setSecondaryActionVisibilityProvider:]
  -[LibraryItemController setSwipeActionsConfiguration:]
  -[LibraryItemController setContextMenuConfiguration:]
  -[LibraryItemController didDeselectItem]


HistoryTableViewDataSource : NSObject
 @property  <HistoryTableViewDataSourceDelegate> *delegate

  // class methods
  +[HistoryTableViewDataSource initialize]

  // instance methods
  -[HistoryTableViewDataSource _updateIfNeeded]
  -[HistoryTableViewDataSource numberOfSections]
  -[HistoryTableViewDataSource .cxx_destruct]
  -[HistoryTableViewDataSource setDelegate:]
  -[HistoryTableViewDataSource initWithDelegate:]
  -[HistoryTableViewDataSource titleForHeaderInSection:]
  -[HistoryTableViewDataSource delegate]
  -[HistoryTableViewDataSource dealloc]
  -[HistoryTableViewDataSource numberOfRowsInSection:]
  -[HistoryTableViewDataSource filterUsingString:]
  -[HistoryTableViewDataSource historyTableViewCellModelForRowAtIndexPath:]
  -[HistoryTableViewDataSource deleteHistoryItemAtIndexPath:]
  -[HistoryTableViewDataSource historyItemForRowAtIndexPath:]
  -[HistoryTableViewDataSource historyChanged:]
  -[HistoryTableViewDataSource _browsingSessions]
  -[HistoryTableViewDataSource _browsingSessions:filteredUsingString:urlStrings:]
  -[HistoryTableViewDataSource _incrementallyUpdateWithNewSessions:forFilterChangeOnly:]
  -[HistoryTableViewDataSource _fetchURLStringsContainingTextContent:completionHandler:]
  -[HistoryTableViewDataSource _setCurrentBrowsingSessions:computingIndividualChanges:]
  -[HistoryTableViewDataSource _computeChangeSetBetweenOldHistorySessions:newHistorySessions:]
  -[HistoryTableViewDataSource _reportChangeToDelegate:]
  -[HistoryTableViewDataSource _computeChangeSetBetweenOldHistorySession:newHistorySession:oldSectionIndex:newSectionIndex:]
  -[HistoryTableViewDataSource _historyItemTitle:matchesFilterTokens:]
  -[HistoryTableViewDataSource _historyItemURL:matchesFilterStrings:]
  -[HistoryTableViewDataSource _historyItemURL:matchesFilter:]
  -[HistoryTableViewDataSource _historySession:filteredUsingHistoryItemsPredicate:]


HistoryTableViewDataSourceChange : NSObject
 @property  long long changeType
 @property  BOOL sectionChange
 @property  NSIndexPath *changeIndexPath

  // class methods
  +[HistoryTableViewDataSourceChange changeWithType:indexPath:isSectionChange:]

  // instance methods
  -[HistoryTableViewDataSourceChange changeType]
  -[HistoryTableViewDataSourceChange .cxx_destruct]
  -[HistoryTableViewDataSourceChange setChangeType:]
  -[HistoryTableViewDataSourceChange isSectionChange]
  -[HistoryTableViewDataSourceChange changeIndexPath]
  -[HistoryTableViewDataSourceChange setChangeIndexPath:]
  -[HistoryTableViewDataSourceChange setSectionChange:]


HistoryTableViewDataSourceChangeCollection : NSObject
 @property  NSArray *insertChanges
 @property  NSArray *deleteChanges

  // instance methods
  -[HistoryTableViewDataSourceChangeCollection .cxx_destruct]
  -[HistoryTableViewDataSourceChangeCollection init]
  -[HistoryTableViewDataSourceChangeCollection insertChanges]
  -[HistoryTableViewDataSourceChangeCollection deleteChanges]
  -[HistoryTableViewDataSourceChangeCollection setInsertChanges:]
  -[HistoryTableViewDataSourceChangeCollection setDeleteChanges:]


HistoryTableViewDataSourceSession : NSObject
 @property  NSDate *sessionDate
 @property  NSString *sessionIdentifier
 @property  NSOrderedSet *historyItems

  // class methods
  +[HistoryTableViewDataSourceSession initialize]
  +[HistoryTableViewDataSourceSession sessionWithDate:]
  +[HistoryTableViewDataSourceSession sessionIdentifierFromDate:]
  +[HistoryTableViewDataSourceSession _sessionDateFromDate:]
  +[HistoryTableViewDataSourceSession _sessionIdentifierFromDate:]

  // instance methods
  -[HistoryTableViewDataSourceSession initWithDate:]
  -[HistoryTableViewDataSourceSession .cxx_destruct]
  -[HistoryTableViewDataSourceSession sessionIdentifier]
  -[HistoryTableViewDataSourceSession historyItems]
  -[HistoryTableViewDataSourceSession isEqual:]
  -[HistoryTableViewDataSourceSession sessionDate]
  -[HistoryTableViewDataSourceSession setHistoryItems:]


ActivityPlus : UIActivity
  // instance methods
  -[ActivityPlus .cxx_destruct]
  -[ActivityPlus activityType]
  -[ActivityPlus canPerformWithActivityItems:]
  -[ActivityPlus performActivity]
  -[ActivityPlus prepareWithActivityItems:]
  -[ActivityPlus activityTitle]
  -[ActivityPlus activityImage]
  -[ActivityPlus initWithTitle:image:type:handler:]


TabDocumentMenuProvider : NSObject
  // class methods
  +[TabDocumentMenuProvider _shareCommand]
  +[TabDocumentMenuProvider actionProviderForTabDocument:dataSource:options:]
  +[TabDocumentMenuProvider moveMenuForTabDocument:dataSource:]
  +[TabDocumentMenuProvider _mainMenuForTabDocument:dataSource:options:]
  +[TabDocumentMenuProvider _bottomMenuForTabDocument:dataSource:options:]
  +[TabDocumentMenuProvider _toggleVoiceSearchActionForTabDocument:]
  +[TabDocumentMenuProvider _presentBookmarksModalActionForTabDocument:]
  +[TabDocumentMenuProvider _sortMenuForTabDocument:dataSource:]
  +[TabDocumentMenuProvider _closeOtherTabsActionForTabDocument:dataSource:]
  +[TabDocumentMenuProvider _stopReloadActionForTabDocument:]
  +[TabDocumentMenuProvider _toggleContentBlockersActionForTab:]
  +[TabDocumentMenuProvider _readerActionForTabDocument:]


BookmarksToolbar : UIToolbar
  // instance methods
  -[BookmarksToolbar traitCollectionDidChange:]
  -[BookmarksToolbar .cxx_destruct]
  -[BookmarksToolbar layoutSubviews]
  -[BookmarksToolbar initWithFrame:]


BarButton : UIButton
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} barButtonHitRect
 @property  BOOL shouldRespectContextMenuOrdering

  // instance methods
  -[BarButton _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[BarButton initWithFrame:]
  -[BarButton pointInside:withEvent:]
  -[BarButton pointerInteraction:regionForRequest:defaultRegion:]
  -[BarButton _barButtonHitRect]
  -[BarButton barButtonHitRect]
  -[BarButton setBarButtonHitRect:]
  -[BarButton shouldRespectContextMenuOrdering]
  -[BarButton setShouldRespectContextMenuOrdering:]


TabDocument : NSObject <_WKAppHighlightDelegate, SFHighlightAttributionPresenter, SFAppBannerMetaTagContentObserver, SFAppSuggestionBannerDelegate, LoadingControllerDelegate, QuickWebsiteSearchEventListener, SFFormAutoFillControllerDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, WKNavigationDelegatePrivate, WKUIDelegatePrivate, SFDialogControllerDelegate, SFDialogViewControllerPresenting, _SFFindOnPageViewDelegate, _SFLinkPreviewHandler, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFReaderControllerDelegate, _SFWebViewDelegate, _WKDiagnosticLoggingDelegate, _WKFullscreenDelegate, _WKIconLoadingDelegate, _WKInputDelegate, _WKWebAuthenticationPanelDelegate, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFQuickLookDocumentSource, WBSWebExtensionTab, WBReusableTab, LoadableResource, ReadingListMetadataProvider, WBSOrderedTab, WBSTabItemSearchSupport, _SFBrowserDocument, SFDialogPresenting, _SFDownloadDelegate, _SFMediaRecordingDocument, _SFNavigationIntentHandling>
 @property  BOOL showingContinuous
 @property  unsigned long changedPropertiesForOnUpdatedWebExtensionEvent
 @property  WBSFluidProgressState *progressState
 @property  BOOL active
 @property  _SFWebView *frontWebView
 @property  BrowserController *browserController
 @property  TabDocument *parentTabDocumentForBackClosesSpawnedTab
 @property  FindOnPageView *findOnPageView
 @property  _SFQuickLookDocument *quickLookDocument
 @property  BOOL wasOpenedFromLink
 @property  BOOL showingReader
 @property  BOOL shouldRestoreReader
 @property  long long readerViewTopScrollOffset
 @property  SFPinnableBanner *appBanner
 @property  BOOL shouldRevealAppLinkBannerForNextCommit
 @property  BOOL appBannerRemovalWasDeferred
 @property  SFBannerTheme *bannerTheme
 @property  NSString *sourceApplicationBundleIdentifierForNextCommit
 @property  BOOL storeBannersAreDisabled
 @property  long long externalAppRedirectState
 @property  UIImage *siteCustomIcon
 @property  BOOL siteCustomIconPrecomposed
 @property  BOOL showingErrorPage
 @property  TabOverviewItem *tabOverviewItem
 @property  TiltedTabItem *tiltedTabItem
 @property  WebBookmark *readingListBookmark
 @property  BOOL suppressingProgressAnimationForNavigationGesture
 @property  BOOL wantsReaderWhenActivated
 @property  BOOL privateBrowsingEnabled
 @property  BOOL displayingStandaloneImage
 @property  BOOL displayingStandaloneMedia
 @property  BOOL hibernatedDueToMemoryWarning
 @property  unsigned long sessionStateRestorationSource
 @property  <TabDocumentDelegate> *delegate
 @property  <LoadProgressObserver> *loadProgressObserver
 @property  _SFBrowserConfiguration *configuration
 @property  BOOL webViewIsFullscreen
 @property  BOOL isSecure
 @property  TabDocumentView *view
 @property  BOOL exitingElementFullscreen
 @property  LinkPreviewViewController *linkPreviewViewController
 @property  PageLoadTestStatistics *pageLoadStatistics
 @property  BOOL allowsProgrammaticFocusToBeginInputSession
 @property  _SFSafariSharingExtensionController *sharingExtensionController
 @property  _SFInjectedJavaScriptController *activityJSController
 @property  NSURL *URLFromExternalApplication
 @property  _SFWebClipMetadataFetcher *webClipMetadataFetcher
 @property  _SFPageLoadErrorController *pageLoadErrorController
 @property  SFDialogController *dialogController
 @property  BOOL showingInlineDialog
 @property  WBSSameDocumentNavigationToHistoryVisitCorrelator *sameDocumentNavigationToHistoryVisitCorrelator
 @property  _SFTabStateData *tabStateData
 @property  BOOL persistWhenHibernated
 @property  BOOL isBlank
 @property  BOOL isPlaceholder
 @property  BOOL hasBeenInserted
 @property  NSString *libraryType
 @property  BOOL preparingForNewUserActivity
 @property  TabBarItem *tabBarItem
 @property  NSArray *tabCollectionItems
 @property  UnifiedTabBarItem *unifiedTabBarItem
 @property  UnifiedTabBarItem *currentUnifiedTabBarItem
 @property  UIColor *themeColor
 @property  SFNavigationBarItem *navigationBarItem
 @property  BOOL isShowingSearchQueryInNavigationBar
 @property  _SFSafeBrowsingController *safeBrowsingController
 @property  BOOL hibernated
 @property  BOOL alive
 @property  BOOL wasRecentlyUnhibernated
 @property  _WKSessionState *sessionState
 @property  BOOL loading
 @property  BOOL canStopLoading
 @property  {CGPoint=dd} scrollPoint
 @property  NSString *titleForCloudTab
 @property  NSString *suggestedTitleForCurrentURL
 @property  NSURL *cachedCanonicalURLOrURLForSharing
 @property  ActionPanelActivityItemProvider *activityItemProvider
 @property  BOOL supportsReuseForSpotlightSearch
 @property  NSURL *tabReuseURL
 @property  NSUUID *uuid
 @property  BOOL canGoBackToParentTab
 @property  double lastViewedTime
 @property  BOOL closed
 @property  BOOL shouldPersist
 @property  WBTab *tabGroupTab
 @property  WBSHistoryVisit *lastVisit
 @property  NSString *customUserAgent
 @property  BOOL performingFirstLoadAfterOpenInBackground
 @property  BOOL performingRedirectAfterOpenInBackground
 @property  BOOL didFinishDocumentLoad
 @property  BOOL didFirstLayout
 @property  BOOL didFirstMeaningfulPaint
 @property  BOOL contentIsReadyForSnapshot
 @property  _SFPrintController *printController
 @property  NSUUID *ownerUUID
 @property  CSSearchableItemAttributeSet *searchableItemAttributes
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSArray *ancestorUUIDs
 @property  BOOL hasDoneReaderDetection
 @property  _SFWebView *readerWebView
 @property  BOOL controlledByAutomation
 @property  unsigned long mediaStateIcon
 @property  BOOL mediaCaptureEnabled
 @property  long long policy
 @property  BOOL shouldObscureForDigitalHealth
 @property  STBlockingViewController *associatedBlockingViewController
 @property  BOOL isMediaSuspendedForScreenTime
 @property  WBSHistoryContextController *contextController
 @property  double pageZoomFactor
 @property  BOOL hasFormControlInteraction
 @property  BOOL canShowPageFormatMenu
 @property  BOOL suppressWebExtensionEvents
 @property  BOOL previousLoadingCompleteStateForWebExtensionOnUpdatedEvent
 @property  NSString *previousTitleForWebExtensionOnUpdatedEvent
 @property  NSURL *previousURLForWebExtensionOnUpdatedEvent
 @property  BOOL showingStartPageOverriddenByExtension
 @property  NSUserActivity *userActivity
 @property  @? linkAddedToUserActivityCallback
 @property  NSUserActivity *userActivityFromNotes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WKBackForwardListItem *currentBackForwardListItem
 @property  NSURL *attributionPresenterURL
 @property  double idForWebExtensions
 @property  WKWebView *webViewForExtensions
 @property  NSArray *webViewsThatCanReceiveMessages
 @property  double parentTabIDForWebExtensions
 @property  NSURL *urlForExtensions
 @property  NSURL *expectedOrCurrentURL
 @property  NSURL *expectedOrCurrentURLOrLastActiveURLIfCrashed
 @property  NSURL *pendingURLForWebExtensions
 @property  BOOL isLoadingComplete
 @property  BOOL isAudible
 @property  BOOL isMuted
 @property  BOOL isFrontmost
 @property  BOOL isPinnedTab
 @property  BOOL isPrivate
 @property  NSString *tabTitle
 @property  {CGSize=dd} tabViewSize
 @property  <WBSWebExtensionWindow> *webExtensionWindow
 @property  double zoomFactor
 @property  WBSTranslationContext *translationContext
 @property  NSDictionary *extensionIdentifierToDynamicallyInjectedStyleSheets
 @property  double estimatedProgress
 @property  BOOL contentReady
 @property  NSString *identifier
 @property  NSArray *ancestorTabIdentifiers
 @property  NSString *windowIdentifier
 @property  BOOL shouldSelectOriginatingTabWhenClosed
 @property  BOOL closing
 @property  double lastActivationTime
 @property  NSString *title
 @property  NSString *titleForLastSearch
 @property  NSArray *titleWords
 @property  NSString *URLString
 @property  NSString *URLStringForLastSearch
 @property  NSArray *URLStringComponents
 @property  NSString *lastSearchTerm
 @property  BOOL matchedLastSearch
 @property  _SFWebView *webView
 @property  _SFWebView *activeWebView
 @property  _SFReloadOptionsController *reloadOptionsController
 @property  <SFReaderContext> *readerContext
 @property  NSURL *URLForPerSitePreferences
 @property  BOOL wasLoadedWithContentBlockersEnabled
 @property  BOOL canHideToolbar
 @property  BOOL canChangeSearchFieldPosition
 @property  SFBrowserDocumentTrackerInfo *trackerInfo
 @property  BOOL canOverrideStatusBar
 @property  BOOL audioOnly

  // class methods
  +[TabDocument urlForExternalURL:]
  +[TabDocument blankTabTitleWithLibraryType:controlledByAutomation:]
  +[TabDocument tabDocumentForWKWebView:]

  // instance methods
  -[TabDocument urlForExtensions]
  -[TabDocument setAppBanner:]
  -[TabDocument setTitleForLastSearch:]
  -[TabDocument wasOpenedFromLink]
  -[TabDocument webExtensionWindow]
  -[TabDocument pageLoadStatistics]
  -[TabDocument webClipMetadataFetcher]
  -[TabDocument itemForTabCollectionView:]
  -[TabDocument isPinnedTab]
  -[TabDocument resetTabViewItems]
  -[TabDocument webView:didFinishNavigation:]
  -[TabDocument pdfView]
  -[TabDocument isPDFDocument]
  -[TabDocument goForward]
  -[TabDocument didFirstLayout]
  -[TabDocument canHideToolbar]
  -[TabDocument safeBrowsingController]
  -[TabDocument reloadEnablingContentBlockers:]
  -[TabDocument unfreezeAfterNavigationGesture:]
  -[TabDocument updateTabIcon]
  -[TabDocument updateTabTitle]
  -[TabDocument isClosing]
  -[TabDocument select]
  -[TabDocument readerContext]
  -[TabDocument openInTabGroupMenuWithNewTabGroupName:URL:descendantCount:handler:]
  -[TabDocument restoreStateFromTab:]
  -[TabDocument hasFailedURL]
  -[TabDocument scrollPoint]
  -[TabDocument isClosed]
  -[TabDocument shouldObscureForDigitalHealth]
  -[TabDocument loadURL:]
  -[TabDocument readerWebView]
  -[TabDocument shouldPersist]
  -[TabDocument hibernate]
  -[TabDocument evictFromTabReuse]
  -[TabDocument siteCustomIconPrecomposed]
  -[TabDocument clearBackForwardList]
  -[TabDocument isAudible]
  -[TabDocument didFinishDocumentLoad]
  -[TabDocument findOnPageView]
  -[TabDocument webView:didFailProvisionalNavigation:withError:]
  -[TabDocument linkPreviewViewController]
  -[TabDocument setBannerTheme:]
  -[TabDocument titleForSharing]
  -[TabDocument bannerTheme]
  -[TabDocument showDownload:]
  -[TabDocument sfWebViewDidChangeSafeAreaInsets:]
  -[TabDocument updateUserActivity]
  -[TabDocument browserController]
  -[TabDocument _webView:contextMenuForElement:willCommitWithAnimator:]
  -[TabDocument setInitialURLForStatePersisting:title:]
  -[TabDocument setSiteCustomIcon:]
  -[TabDocument muteMediaCapture]
  -[TabDocument setNeedsNewTabSnapshot]
  -[TabDocument loadTestURL:withCallback:pagesNeedingMemoryWarningSent:]
  -[TabDocument setPersistWhenHibernated:]
  -[TabDocument isContentReady]
  -[TabDocument willClose]
  -[TabDocument unmute]
  -[TabDocument audioOnly]
  -[TabDocument setScrollPoint:]
  -[TabDocument setBrowserController:]
  -[TabDocument isReaderAvailable]
  -[TabDocument setClosed:]
  -[TabDocument storeBannersAreDisabled]
  -[TabDocument setOverlaidAccessoryViewsInset:]
  -[TabDocument pageZoomFactor]
  -[TabDocument downloadDidStart:]
  -[TabDocument mute]
  -[TabDocument navigationBarItem]
  -[TabDocument setOwnerUUID:]
  -[TabDocument wantsReaderWhenActivated]
  -[TabDocument isFrontmost]
  -[TabDocument loadProgressObserver]
  -[TabDocument addAppHighlightCreatingLink:]
  -[TabDocument isAlive]
  -[TabDocument shouldBlockAppSuggestionBanner:]
  -[TabDocument unhibernate]
  -[TabDocument sourceRectForPopoverActionPicker:]
  -[TabDocument webView]
  -[TabDocument performPageLevelAutoFill]
  -[TabDocument goToBackForwardListItem:]
  -[TabDocument pageLoadErrorControllerIsInPreviewMode:]
  -[TabDocument URLForStatePersisting]
  -[TabDocument tabStateDataForQuickUpdate]
  -[TabDocument updateAccessibilityIdentifier]
  -[TabDocument goBack]
  -[TabDocument loadURLForContinuousReadingList:fromBookmark:]
  -[TabDocument canGoBack]
  -[TabDocument initWithBrowserController:]
  -[TabDocument perSiteSettingsUIPresentSettings]
  -[TabDocument setIsPlaceholder:]
  -[TabDocument estimatedProgress]
  -[TabDocument canGoForward]
  -[TabDocument automaticPasswordSheetDismissed]
  -[TabDocument prepareToContinueUserActivity]
  -[TabDocument _webView:dataInteractionOperationWasHandled:forSession:itemProviders:]
  -[TabDocument isLoadingComplete]
  -[TabDocument URLStringForLastSearch]
  -[TabDocument tabStateData]
  -[TabDocument loadRequest:userDriven:]
  -[TabDocument themeColor]
  -[TabDocument ancestorUUIDs]
  -[TabDocument matchedLastSearch]
  -[TabDocument isPrivate]
  -[TabDocument canChangeSearchFieldPosition]
  -[TabDocument isMuted]
  -[TabDocument userActivity]
  -[TabDocument isExitingElementFullscreen]
  -[TabDocument reloadFromOrigin]
  -[TabDocument setLastViewedTime:]
  -[TabDocument _webView:dataInteraction:sessionWillBegin:]
  -[TabDocument isControlledByAutomation]
  -[TabDocument windowIdentifier]
  -[TabDocument displayNewTabOverridePageIfNecessary]
  -[TabDocument pageLoadErrorController:allowLegacyTLSConnectionForURL:navigateToURL:]
  -[TabDocument webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:]
  -[TabDocument pendingURLForWebExtensions]
  -[TabDocument activityJSController]
  -[TabDocument panel:dismissWebAuthenticationPanelWithResult:]
  -[TabDocument _isDeallocating]
  -[TabDocument permissionDialogThrottler]
  -[TabDocument reloadUserInitiated]
  -[TabDocument setTitleWords:]
  -[TabDocument printController:didCreatePrintInfo:]
  -[TabDocument linkPreviewHelper:redirectToExternalNavigationResult:]
  -[TabDocument readerController:didClickLinkRequestingNewWindowInReaderWithRequest:]
  -[TabDocument _webView:logDiagnosticMessageWithDomain:domain:]
  -[TabDocument quickLookDocument]
  -[TabDocument hideBannerForHighlightIdentifier:]
  -[TabDocument sourceApplicationBundleIdentifier]
  -[TabDocument activityItemProvider]
  -[TabDocument linkPreviewHelper:previewViewControllerForURL:]
  -[TabDocument activeWebView]
  -[TabDocument currentUnifiedTabBarItem]
  -[TabDocument readerPageArchiveURL]
  -[TabDocument setURLFromExternalApplication:]
  -[TabDocument stopLoading]
  -[TabDocument _webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:completionHandler:]
  -[TabDocument isSecure]
  -[TabDocument URLStringComponents]
  -[TabDocument _translationContextStateDidChange:]
  -[TabDocument translationContext:showFeedbackConsentAlertWithCompletionHandler:]
  -[TabDocument _webCryptoMasterKeyForWebView:]
  -[TabDocument zoomFactor]
  -[TabDocument readerController:didDeactivateReaderWithMode:]
  -[TabDocument sfWebViewDidBecomeFirstResponder:]
  -[TabDocument setSearchableItemAttributes:]
  -[TabDocument animateProgressForCompletedDocument]
  -[TabDocument suppressingProgressAnimationForNavigationGesture]
  -[TabDocument webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:]
  -[TabDocument hasDoneReaderDetection]
  -[TabDocument setLastSearchTerm:]
  -[TabDocument mediaCaptureEnabled]
  -[TabDocument setShouldRestoreReader:]
  -[TabDocument isShowingReader]
  -[TabDocument customUserVisibleStringForReadingListBookmarkURL:]
  -[TabDocument endSuppressingProgressAnimation]
  -[TabDocument isBlank]
  -[TabDocument setBrowserController:afterTabGroupReuse:]
  -[TabDocument translationContext:showTranslationErrorAlertWithTitle:message:]
  -[TabDocument presentingViewControllerForAction:]
  -[TabDocument _webView:hasVideoInPictureInPictureDidChange:]
  -[TabDocument _webView:didCommitLoadWithRequest:inFrame:]
  -[TabDocument translationContext:showFirstTimeConsentAlertWithCompletionHandler:]
  -[TabDocument _webView:didNegotiateModernTLSForURL:]
  -[TabDocument downloadDidFinish:]
  -[TabDocument parentTabDocumentForBackClosesSpawnedTab]
  -[TabDocument _webView:willGoToBackForwardListItem:inPageCache:]
  -[TabDocument pageLoadErrorController:loadFailedRequestAfterError:]
  -[TabDocument initForBackgroundLoadingWithBrowserController:relatedWebView:]
  -[TabDocument isActive]
  -[TabDocument shouldShowReaderOnActivate]
  -[TabDocument configuration]
  -[TabDocument animateElement:toBarItem:]
  -[TabDocument restoreScrollPositionWithCloudTab:]
  -[TabDocument setPageLoadStatistics:]
  -[TabDocument retainCount]
  -[TabDocument _backForwardList]
  -[TabDocument setZoomFactor:]
  -[TabDocument webView:didStartProvisionalNavigation:]
  -[TabDocument cachedCanonicalURLOrURLForSharing]
  -[TabDocument setIsMediaSuspendedForScreenTime:]
  -[TabDocument _webView:decideWebApplicationCacheQuotaForSecurityOrigin:currentQuota:totalBytesNeeded:decisionHandler:]
  -[TabDocument setSourceApplicationBundleIdentifier:]
  -[TabDocument overrideUndoManagerForSFWebView:]
  -[TabDocument trackerInfo]
  -[TabDocument _webView:alternateURLFromImage:userInfo:]
  -[TabDocument supportsReuseForSpotlightSearch]
  -[TabDocument backListMenuWithLimit:]
  -[TabDocument isLoading]
  -[TabDocument freezeForNavigationGesture]
  -[TabDocument setURLStringComponents:]
  -[TabDocument loadingController:willLoadRequest:userDriven:]
  -[TabDocument webView:didCommitNavigation:]
  -[TabDocument progressState]
  -[TabDocument webViewDidChangeSize]
  -[TabDocument _webViewDidEnableInspectorBrowserDomain:]
  -[TabDocument restoreSessionState:andNavigate:]
  -[TabDocument setSiteCustomIconPrecomposed:]
  -[TabDocument pageLoadErrorControllerDidAddAlert:]
  -[TabDocument .cxx_destruct]
  -[TabDocument setLibraryType:]
  -[TabDocument didFirstMeaningfulPaint]
  -[TabDocument previousTitleForWebExtensionOnUpdatedEvent]
  -[TabDocument setShowingContinuous:]
  -[TabDocument lastSearchTerm]
  -[TabDocument decreasePageZoomSetting]
  -[TabDocument tabGroupTab]
  -[TabDocument loadWindowDotOpenExternalNavigationResult:fromOriginalRequest:]
  -[TabDocument contextController]
  -[TabDocument _webView:fileUploadPanelContentIsManagedWithInitiatingFrame:]
  -[TabDocument _webView:logDiagnosticMessageWithEnhancedPrivacy:description:]
  -[TabDocument _webView:logDiagnosticMessageWithValue:description:value:]
  -[TabDocument URLString]
  -[TabDocument translationContextIsUsingPrivateBrowsing:]
  -[TabDocument _webView:didFailProvisionalLoadWithRequest:inFrame:withError:]
  -[TabDocument setPolicy:]
  -[TabDocument setMatchedLastSearch:]
  -[TabDocument isShowingContinuous]
  -[TabDocument tabBarItem]
  -[TabDocument dialogController:dismissViewController:withAdditionalAnimations:]
  -[TabDocument titleWords]
  -[TabDocument setDisplayingStandaloneMedia:]
  -[TabDocument setURLStringForLastSearch:]
  -[TabDocument tabCollectionItems]
  -[TabDocument printControllerPageIsLoading:]
  -[TabDocument reloadFromOriginUserInitiated]
  -[TabDocument setLinkPreviewViewController:]
  -[TabDocument pageLoadErrorControllerClosePage:]
  -[TabDocument updateReadingListItemPreviewText:]
  -[TabDocument increasePageZoomSetting]
  -[TabDocument webView:didReceiveServerRedirectForProvisionalNavigation:]
  -[TabDocument ancestorTabIdentifiers]
  -[TabDocument dialogController:didDismissDialog:]
  -[TabDocument titleForLastSearch]
  -[TabDocument dialogController:presentViewController:withAdditionalAnimations:]
  -[TabDocument isPrivateBrowsingEnabled]
  -[TabDocument createReaderWebViewForReaderController:]
  -[TabDocument restoreAllHighlightsData]
  -[TabDocument _webView:checkUserMediaPermissionForURL:mainFrameURL:frameIdentifier:decisionHandler:]
  -[TabDocument titleForCloudTab]
  -[TabDocument loadAlternateHTMLString:baseURL:forUnreachableURL:]
  -[TabDocument didActivateReader]
  -[TabDocument retain]
  -[TabDocument snapshotWithSize:topBackdropHeight:options:completion:]
  -[TabDocument doneWaitingToContinueUserActivity]
  -[TabDocument isShowingStartPageOverriddenByExtension]
  -[TabDocument printController]
  -[TabDocument didFindAppBannerWithContent:]
  -[TabDocument formAutoFillControllerShouldDisableStreamlinedLogin:]
  -[TabDocument readerController:didDetermineReaderAvailability:dueTo:]
  -[TabDocument wasLoadedWithContentBlockersEnabled]
  -[TabDocument _closeTabDocumentAnimated:]
  -[TabDocument dismissAppSuggestionBanner:]
  -[TabDocument setCustomUserAgent:]
  -[TabDocument userDeclinedAutomaticStrongPasswordForCurrentDomainOnTabWithUUID:]
  -[TabDocument updateAncestryWithParentTab:]
  -[TabDocument suggestedFileNameForQuickLookDocument:]
  -[TabDocument setDelegate:]
  -[TabDocument _webView:requestUserMediaAuthorizationForDevices:url:mainFrameURL:decisionHandler:]
  -[TabDocument _webView:renderingProgressDidChange:]
  -[TabDocument _initWithBrowserController:configuration:]
  -[TabDocument webView:shouldLoadIconWithParameters:completionHandler:]
  -[TabDocument isPreparingForNewUserActivity]
  -[TabDocument updateAncestryToChildOfTopLevelAncestorRelatedTab:]
  -[TabDocument expectedOrCurrentURL]
  -[TabDocument goBackToParentTab]
  -[TabDocument isPerformingFirstLoadAfterOpenInBackground]
  -[TabDocument sessionStateRestorationSource]
  -[TabDocument setWantsReaderWhenActivated:]
  -[TabDocument _unresponsiveWebProcessTimerFired:]
  -[TabDocument updateUsageTrackingInformationIfNecessaryGivenDocumentIsCurrent:]
  -[TabDocument changedPropertiesForOnUpdatedWebExtensionEvent]
  -[TabDocument setQuickLookDocument:]
  -[TabDocument shouldActivateReaderWhenAvailable]
  -[TabDocument webViewForFindOnPageView:]
  -[TabDocument _webView:willSubmitFormValues:userObject:submissionHandler:]
  -[TabDocument isMediaSuspendedForScreenTime]
  -[TabDocument setPreparingForNewUserActivity:]
  -[TabDocument lastViewedTime]
  -[TabDocument formAutoFillControllerDidFocusSensitiveFormField:]
  -[TabDocument policy]
  -[TabDocument _webView:takeFocus:]
  -[TabDocument setExternalAppRedirectState:]
  -[TabDocument _webView:decidePolicyForFocusedElement:]
  -[TabDocument invalidateSourceApplication]
  -[TabDocument initWithTabGroupTab:privateBrowsingEnabled:hibernated:bookmark:browserController:]
  -[TabDocument initWithTitle:URL:UUID:privateBrowsingEnabled:controlledByAutomation:hibernated:bookmark:browserController:relatedWebView:]
  -[TabDocument panel:updateWebAuthenticationPanel:]
  -[TabDocument tabViewSize]
  -[TabDocument _webView:didStartProvisionalLoadWithRequest:inFrame:]
  -[TabDocument addNavigationObserver:]
  -[TabDocument readerController:didTwoFingerTapLinkInReaderWithContext:]
  -[TabDocument formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:]
  -[TabDocument _webView:navigationDidFinishDocumentLoad:]
  -[TabDocument _webViewDidExitFullscreen:]
  -[TabDocument _webView:didStartInputSession:]
  -[TabDocument view]
  -[TabDocument _webView:shouldIncludeAppLinkActionsForElement:]
  -[TabDocument _webView:navigation:didFailProvisionalLoadInSubframe:withError:]
  -[TabDocument readingListBookmark]
  -[TabDocument pageLoadErrorControllerShouldHandleCertificateError:]
  -[TabDocument translationContextWillRequestTranslatingWebpage:]
  -[TabDocument tabTitle]
  -[TabDocument setSourceApplicationBundleIdentifierForNextCommit:]
  -[TabDocument URLForSharing]
  -[TabDocument hasBeenInserted]
  -[TabDocument panel:requestPINWithRemainingRetries:completionHandler:]
  -[TabDocument collectReadingListItemInfo]
  -[TabDocument mediaStateIcon]
  -[TabDocument _webView:navigation:didSameDocumentNavigation:]
  -[TabDocument canStopLoading]
  -[TabDocument dialogController:presentationPolicyForDialog:]
  -[TabDocument webViewForExtensions]
  -[TabDocument idForWebExtensions]
  -[TabDocument dispatchNavigationIntent:]
  -[TabDocument translationContext:shouldReportProgressInUnifiedField:]
  -[TabDocument webView:didReceiveAuthenticationChallenge:completionHandler:]
  -[TabDocument reloadOptionsController]
  -[TabDocument setUserActivityFromNotes:]
  -[TabDocument animateElementToDownloadsBarItemSoon:]
  -[TabDocument translationContext]
  -[TabDocument externalAppRedirectState]
  -[TabDocument pageLoadErrorControllerShouldPermanentlyAcceptCertificate:]
  -[TabDocument resetPageZoomSetting]
  -[TabDocument formAutoFillControllerURLForFormAutoFill:]
  -[TabDocument isAutomationEnabledForLinkPreviewHelper:]
  -[TabDocument presentingViewControllerForPrintController:]
  -[TabDocument commitPreviewViewController:]
  -[TabDocument setClosed:userDriven:]
  -[TabDocument setSupportsReuseForSpotlightSearch:]
  -[TabDocument didFailToContinueUserActivity]
  -[TabDocument webView:didFailNavigation:withError:]
  -[TabDocument linkPreviewHelper:addURLToReadingList:]
  -[TabDocument printControllerCanPresentPrintUI:]
  -[TabDocument hasQuickLookContent]
  -[TabDocument setShouldRevealAppLinkBannerForNextCommit:]
  -[TabDocument suggestedFilenameForDisplayedPDF]
  -[TabDocument currentBackForwardListItem]
  -[TabDocument applyHighlightFromNotesIfNeeded]
  -[TabDocument _webViewWillEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[TabDocument suggestedTitleForCurrentURL]
  -[TabDocument canOverrideStatusBar]
  -[TabDocument _webView:decidePolicyForSOAuthorizationLoadWithCurrentPolicy:forExtension:completionHandler:]
  -[TabDocument loadingDialogPageTitleForPrintController:]
  -[TabDocument sfWebView:shouldAllowGestureToRecognizeSimultaneoulsyWithTouchEvents:]
  -[TabDocument userActivityFromNotes]
  -[TabDocument _webView:willSnapshotBackForwardListItem:]
  -[TabDocument identifier]
  -[TabDocument translationContextReloadPageInOriginalLanguage:]
  -[TabDocument userDidManipulateVisibleRegion]
  -[TabDocument _webView:logDiagnosticMessage:description:valueDictionary:]
  -[TabDocument setTabReuseURL:]
  -[TabDocument handleNavigationIntent:completion:]
  -[TabDocument _webView:requestStorageAccessPanelForDomain:underCurrentDomain:completionHandler:]
  -[TabDocument _webViewDidExitElementFullscreen:]
  -[TabDocument titleForNewBookmark]
  -[TabDocument linkPreviewHelperWillDisableLinkPreview]
  -[TabDocument _tryRetain]
  -[TabDocument persistWhenHibernated]
  -[TabDocument wasHibernatedDueToMemoryWarning]
  -[TabDocument clearBrowserController]
  -[TabDocument statusBarIndicatorTappedWithCompletionHandler:]
  -[TabDocument setAppSuggestionBanner:isPinned:]
  -[TabDocument setSuppressWebExtensionEvents:]
  -[TabDocument canShowPageFormatMenu]
  -[TabDocument setReadingListBookmark:]
  -[TabDocument setMediaCaptureEnabled:]
  -[TabDocument formAutoFillControllerGetAuthenticationForAutoFill:completion:]
  -[TabDocument linkAddedToUserActivityCallback]
  -[TabDocument fetchMetadataForBookmark:completion:]
  -[TabDocument release]
  -[TabDocument _webView:dataOwnerForDropSession:]
  -[TabDocument isShowingReadingListArchive]
  -[TabDocument loadURL:title:deferNavigationWhenNotActive:]
  -[TabDocument _webView:insertTextSuggestion:inInputSession:]
  -[TabDocument setSessionStateRestorationSource:]
  -[TabDocument _webView:adjustedDataInteractionItemProvidersForItemProvider:representingObjects:additionalData:]
  -[TabDocument stopAdvertisingProactiveActivityContent]
  -[TabDocument readerController:didClickLinkInReaderWithRequest:]
  -[TabDocument appBannerRemovalWasDeferred]
  -[TabDocument URLForPerSitePreferences]
  -[TabDocument isPerformingRedirectAfterOpenInBackground]
  -[TabDocument readerURLForReaderController:]
  -[TabDocument setShowingReader:]
  -[TabDocument _webViewAdditionalContextForStrongPasswordAssistance:]
  -[TabDocument updateThemeColorAndUnderPageBackground:]
  -[TabDocument customUserAgent]
  -[TabDocument dialogController:willPresentDialog:]
  -[TabDocument initWithTitle:URL:UUID:privateBrowsingEnabled:hibernated:bookmark:browserController:]
  -[TabDocument isDisplayingStandaloneImage]
  -[TabDocument previousURLForWebExtensionOnUpdatedEvent]
  -[TabDocument removeRenderingProgressObserver:]
  -[TabDocument tabOverviewItem]
  -[TabDocument setChangedPropertiesForOnUpdatedWebExtensionEvent:]
  -[TabDocument translationContextNeedsScrollHeightVisibilityUpdate:]
  -[TabDocument _webView:didResignInputElementStrongPasswordAppearanceWithUserInfo:]
  -[TabDocument _webView:logDiagnosticMessageWithResult:description:result:]
  -[TabDocument associatedBlockingViewController]
  -[TabDocument frontWebView]
  -[TabDocument _webView:dataInteraction:session:didEndWithOperation:]
  -[TabDocument sessionState]
  -[TabDocument _webView:performDataInteractionOperationWithItemProviders:]
  -[TabDocument _webView:didFailLoadWithRequest:inFrame:withError:]
  -[TabDocument _webViewDidDisableInspectorBrowserDomain:]
  -[TabDocument dataForQuickLookDocument:]
  -[TabDocument toggleMediaStateMuted]
  -[TabDocument shouldRestoreReader]
  -[TabDocument formAutoFillControllerShouldShowIconsInPasswordPicker:]
  -[TabDocument title]
  -[TabDocument isPrivateBrowsingEnabledForPreviewHelper:]
  -[TabDocument URL]
  -[TabDocument currentFluidProgressStateSource]
  -[TabDocument clearBackForwardListKeepingCurrentItem]
  -[TabDocument _webView:decideDatabaseQuotaForSecurityOrigin:currentQuota:currentOriginUsage:currentDatabaseUsage:expectedUsage:decisionHandler:]
  -[TabDocument getApplicationManifestWithCompletionHandler:]
  -[TabDocument contentIsReadyForSnapshot]
  -[TabDocument pageLoadErrorControllerShouldReloadAfterError:]
  -[TabDocument panel:selectAssertionResponse:source:completionHandler:]
  -[TabDocument loadingControllerWillStartUserDrivenLoad:]
  -[TabDocument pageLoadErrorController]
  -[TabDocument translationConsentAlertHelperViewControllerToPresentDetailsFrom:]
  -[TabDocument sfWebViewDidEndFormControlInteraction:]
  -[TabDocument _webView:didFinishLoadWithRequest:inFrame:]
  -[TabDocument currentPageLoadedFromReadingList]
  -[TabDocument updateMenuButtonShowsBadge]
  -[TabDocument visibilityWillChangeForFindOnPageView:]
  -[TabDocument allowsProgrammaticFocusToBeginInputSession]
  -[TabDocument attributionPresenterURL]
  -[TabDocument didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:searchURLTemplate:]
  -[TabDocument setHasBeenInserted:]
  -[TabDocument suppressWebExtensionEvents]
  -[TabDocument updateUsesDarkTheme]
  -[TabDocument setNeedsSendTelemetryForProvisionalLoad]
  -[TabDocument setSuppressingProgressAnimationForNavigationGesture:]
  -[TabDocument _webView:logDiagnosticMessage:description:]
  -[TabDocument linkPreviewHelper:supportsAction:forURL:]
  -[TabDocument linkPreviewHelper:didProduceNavigationIntent:forAction:]
  -[TabDocument updateFindCompletionProviderWithMatchesCount:forString:forFindOnPageView:]
  -[TabDocument isShowingSearchQueryInNavigationBar]
  -[TabDocument URLStringForPrintController:]
  -[TabDocument _webViewFullscreenMayReturnToInline:]
  -[TabDocument setAssociatedBlockingViewController:]
  -[TabDocument _webView:focusRequiresStrongPasswordAssistance:]
  -[TabDocument isShowingErrorPage]
  -[TabDocument stopLoadingUserInitiated]
  -[TabDocument webViewIsFullscreen]
  -[TabDocument beginSuppressingProgressAnimation]
  -[TabDocument clearFluidProgressState]
  -[TabDocument _webView:accessoryViewCustomButtonTappedInFormInputSession:]
  -[TabDocument formAutoFillControllerUserChoseToUseGeneratedPassword:]
  -[TabDocument setActive:]
  -[TabDocument setPageZoomFactor:]
  -[TabDocument uuid]
  -[TabDocument delegate]
  -[TabDocument _webView:authenticationChallenge:shouldAllowLegacyTLS:]
  -[TabDocument forwardListMenuWithLimit:]
  -[TabDocument _webView:contextMenuDidEndForElement:]
  -[TabDocument committedURL]
  -[TabDocument readerViewTopScrollOffset]
  -[TabDocument libraryType]
  -[TabDocument _presentingViewControllerForWebView:]
  -[TabDocument goForwardAllowingNewTabToSpawnIfNeeded:]
  -[TabDocument safariApplicationVersionForTranslationContext:]
  -[TabDocument appBanner]
  -[TabDocument previousLoadingCompleteStateForWebExtensionOnUpdatedEvent]
  -[TabDocument displayAttributionBannerForHighlightIfNeeded:]
  -[TabDocument tiltedTabItem]
  -[TabDocument saveWebArchiveToPath:completion:]
  -[TabDocument resultOfLoadingURL:]
  -[TabDocument shouldSelectOriginatingTabWhenClosed]
  -[TabDocument siteCustomIcon]
  -[TabDocument sfWebViewDidStartFormControlInteraction:]
  -[TabDocument printControllerShouldPrintReader:]
  -[TabDocument mustShowBarsForBackForwardListItem:]
  -[TabDocument setParentTabDocumentForBackClosesSpawnedTab:]
  -[TabDocument initWithTabStateData:hibernated:browserController:]
  -[TabDocument _webView:didStartLoadForQuickLookDocumentInMainFrameWithFileName:uti:]
  -[TabDocument _webView:willUpdateDataInteractionOperationToOperation:forSession:]
  -[TabDocument unifiedTabBarItem]
  -[TabDocument _webView:didFinishLoadForQuickLookDocumentInMainFrame:]
  -[TabDocument _webView:runWebAuthenticationPanel:initiatedByFrame:completionHandler:]
  -[TabDocument lastVisit]
  -[TabDocument _webViewWebProcessDidCrash:]
  -[TabDocument linkPreviewHelperWillBeginDownload:]
  -[TabDocument clearPageLoadStatistics]
  -[TabDocument clearReaderView]
  -[TabDocument setWasOpenedFromLink:]
  -[TabDocument _webView:willStartInputSession:]
  -[TabDocument _webViewDidBeginNavigationGesture:]
  -[TabDocument fluidProgressRocketAnimationDidComplete]
  -[TabDocument prepareToUseReader]
  -[TabDocument sourceApplicationBundleIdentifierForNextCommit]
  -[TabDocument isDisplayingStandaloneMedia]
  -[TabDocument webView:decidePolicyForNavigationAction:preferences:decisionHandler:]
  -[TabDocument close]
  -[TabDocument _webView:imageOrMediaDocumentSizeChanged:]
  -[TabDocument _webView:contextMenuConfigurationForElement:completionHandler:]
  -[TabDocument _webView:didChangeSafeAreaShouldAffectObscuredInsets:]
  -[TabDocument pageLoadErrorController:presentViewController:]
  -[TabDocument suggestedFileExtensionForQuickLookDocument:]
  -[TabDocument didReplaceTabDocument:]
  -[TabDocument _webView:contextMenuWillPresentForElement:]
  -[TabDocument willDismissLinkPreviewViewController]
  -[TabDocument setAllowsProgrammaticFocusToBeginInputSession:]
  -[TabDocument _searchEngineControllerDidFinishPopulating:]
  -[TabDocument _webViewDidEndNavigationGesture:withNavigationToBackForwardListItem:]
  -[TabDocument dealloc]
  -[TabDocument clearReaderContext]
  -[TabDocument loadTestURL:withCallback:]
  -[TabDocument linkPreviewHelper:commitPreviewViewControllerForAction:withTabOrder:]
  -[TabDocument fetchCanonicalURLWithCompletionHandler:]
  -[TabDocument linkPreviewHelper:resultOfLoadingURL:]
  -[TabDocument loadCloudTab:]
  -[TabDocument _webView:finalObscuredInsetsForScrollView:withVelocity:targetContentOffset:]
  -[TabDocument loadURL:userDriven:]
  -[TabDocument setDisplayingStandaloneImage:]
  -[TabDocument _webView:contextMenuContentPreviewForElement:]
  -[TabDocument setHibernatedDueToMemoryWarning:]
  -[TabDocument pageLoadErrorControllerGetSecIdentityPreferencesController:]
  -[TabDocument extensionIdentifierToDynamicallyInjectedStyleSheets]
  -[TabDocument setStoreBannersAreDisabled:]
  -[TabDocument performAutoFillAction]
  -[TabDocument webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:]
  -[TabDocument readerController:didDetermineAdditionalTextSamples:dueTo:]
  -[TabDocument pageLoadErrorController:setAllowsSpecificHTTPSCertificate:forHost:]
  -[TabDocument setIsBlank:]
  -[TabDocument presentDialog:sender:]
  -[TabDocument _voiceSearchAvailabilityDidChange:]
  -[TabDocument _translationAvailabilityDidChange:]
  -[TabDocument setAllowsRemoteInspection:]
  -[TabDocument URLFromExternalApplication]
  -[TabDocument goBackAllowingNewTabToSpawnIfNeeded:]
  -[TabDocument _webView:mediaCaptureStateDidChange:]
  -[TabDocument isPlaceholder]
  -[TabDocument downloadShouldContinueAfterReceivingResponse:decisionHandler:]
  -[TabDocument setExtensionIdentifierToDynamicallyInjectedStyleSheets:]
  -[TabDocument webViewsThatCanReceiveMessages]
  -[TabDocument dialogController]
  -[TabDocument restoreSessionState:andNavigate:fromSafariViewService:]
  -[TabDocument _webView:gestureRecognizerCouldPinch:]
  -[TabDocument setAppBannerRemovalWasDeferred:]
  -[TabDocument isHibernated]
  -[TabDocument downloadDidFail:]
  -[TabDocument setPerformingFirstLoadAfterOpenInBackground:]
  -[TabDocument readingListBookmarkID]
  -[TabDocument shouldRevealAppLinkBannerForNextCommit]
  -[TabDocument addRenderingProgressObserver:]
  -[TabDocument endSuppressingProgressAnimationAnimated:]
  -[TabDocument pageTitleForPrintController:]
  -[TabDocument setLastVisit:]
  -[TabDocument _webViewCanBecomeFocused:]
  -[TabDocument parentTabIDForWebExtensions]
  -[TabDocument updateUsageTrackingInformationAfterLinkPreviewDismissal]
  -[TabDocument previewViewControllerForURL:]
  -[TabDocument _webView:storeAppHighlight:inNewGroup:requestOriginatedInApp:]
  -[TabDocument setLoadProgressObserver:]
  -[TabDocument ownerUUID]
  -[TabDocument presentNextDialogIfNeeded]
  -[TabDocument canGoBackToParentTab]
  -[TabDocument formAutoFillControllerCanPrefillForm:]
  -[TabDocument _webViewWillExitElementFullscreen:]
  -[TabDocument hasFormControlInteraction]
  -[TabDocument removeAutomaticPasswordButton]
  -[TabDocument createFluidProgressState]
  -[TabDocument sharingExtensionController]
  -[TabDocument setUuid:]
  -[TabDocument searchableItemAttributes]
  -[TabDocument setLinkAddedToUserActivityCallback:]
  -[TabDocument setPerformingRedirectAfterOpenInBackground:]
  -[TabDocument isShowingInlineDialog]
  -[TabDocument updateTabIconWithDelay:]
  -[TabDocument _webView:printFrame:]
  -[TabDocument observeValueForKeyPath:ofObject:change:context:]
  -[TabDocument clearReaderScrollInformation]
  -[TabDocument _webViewDidEnterFullscreen:]
  -[TabDocument sfWebView:didStartDownload:]
  -[TabDocument clearTabReuseURL]
  -[TabDocument snapshotWithSize:options:completion:]
  -[TabDocument _webView:contentRuleListWithIdentifier:performedAction:forURL:]
  -[TabDocument expectedOrCurrentURLOrLastActiveURLIfCrashed]
  -[TabDocument createBrowserReaderViewIfNeeded]
  -[TabDocument webView:decidePolicyForNavigationResponse:decisionHandler:]
  -[TabDocument dataForDisplayedPDF]
  -[TabDocument webViewDidClose:]
  -[TabDocument setReaderViewTopScrollOffset:]
  -[TabDocument tabReuseURL]
  -[TabDocument readerController:didExtractArticleText:withMetadata:]
  -[TabDocument removeNavigationObserver:]
  -[TabDocument linkPreviewHelperWillOpenUniveralLinkLocally:]
  -[TabDocument _webView:requestGeolocationAuthorizationForURL:frame:decisionHandler:]
  -[TabDocument snapshotForWebClipIcon:]
  -[TabDocument _webView:dataOwnerForDragSession:]
  -[TabDocument translationContext:urlForCurrentPageWithCompletionHandler:]
  -[TabDocument wasRecentlyUnhibernated]
  -[TabDocument lastActivationTime]
  -[TabDocument findOnPageCompletionProvider:setStringToComplete:]
  -[TabDocument panel:decidePolicyForLocalAuthenticatorWithCompletionHandler:]
  -[TabDocument sameDocumentNavigationToHistoryVisitCorrelator]
  -[TabDocument reload]
  -[TabDocument validateExtensionToolbarItems]
  -[TabDocument webViewDidScroll]


TabDocumentDropHandler : NSObject
 @property  unsigned long maximumNumberOfTabs
 @property  UIViewController *alertPresentationViewController

  // class methods
  +[TabDocumentDropHandler canHandleSession:]
  +[TabDocumentDropHandler tabDocumentsForDragItems:]
  +[TabDocumentDropHandler proposedOperationForSession:intoWindowWithPrivateBrowsingEnabled:]

  // instance methods
  -[TabDocumentDropHandler .cxx_destruct]
  -[TabDocumentDropHandler _minimumNumberOfNewTabsRequiringConfirmation]
  -[TabDocumentDropHandler dropItemsForSession:withOperation:restorationHandler:insertionHandler:completionHandler:]
  -[TabDocumentDropHandler init]
  -[TabDocumentDropHandler initWithMaximumNumberOfTabs:alertPresentationViewController:]
  -[TabDocumentDropHandler alertPresentationViewController]
  -[TabDocumentDropHandler dropItemsForSession:withOperation:restorationHandler:insertionHandler:]
  -[TabDocumentDropHandler promptIfNeededToConfirmNumberOfNavigationIntents:withCompletionHandler:]
  -[TabDocumentDropHandler initWithAlertPresentationViewController:]
  -[TabDocumentDropHandler maximumNumberOfTabs]
  -[TabDocumentDropHandler setAlertPresentationViewController:]


TabDocumentView : UIView
 @property  WKWebView *webView
 @property  WKWebView *readerWebView
 @property  BOOL showingReader
 @property  BOOL isAnimatingInteractiveGeometryChanges
 @property  double scrollDistance
 @property  <TabDocumentViewGeometryProviding> *geometryProvider

  // instance methods
  -[TabDocumentView readerWebView]
  -[TabDocumentView scrollDistance]
  -[TabDocumentView webView]
  -[TabDocumentView setGeometryProvider:]
  -[TabDocumentView setWebViewGeometryNeedsUpdate]
  -[TabDocumentView endInteractiveGeometryChanges]
  -[TabDocumentView isShowingReader]
  -[TabDocumentView applyGeometry:toWebView:]
  -[TabDocumentView .cxx_destruct]
  -[TabDocumentView applyGeometryToWebView:]
  -[TabDocumentView layoutSubviews]
  -[TabDocumentView beginInteractiveGeometryChanges]
  -[TabDocumentView _performReaderTransitionWithCompletion:]
  -[TabDocumentView currentGeometry]
  -[TabDocumentView setShowingReader:animated:completion:]
  -[TabDocumentView setReaderWebView:]
  -[TabDocumentView ensureContentOffsetWithinContentInsets]
  -[TabDocumentView isAnimatingInteractiveGeometryChanges]
  -[TabDocumentView geometryProvider]
  -[TabDocumentView setWebView:]


ToggleReaderActivity : TabDocumentActivity
  // instance methods
  -[ToggleReaderActivity _systemImageName]
  -[ToggleReaderActivity activityType]
  -[ToggleReaderActivity actionType]
  -[ToggleReaderActivity _isEnabled]
  -[ToggleReaderActivity _isDisabled]
  -[ToggleReaderActivity activityTitle]
  -[ToggleReaderActivity performActivityWithTabDocument:]


TabLimitCleanupGroup : NSObject
 @property  UIAlertAction *action
 @property  NSString *message

  // instance methods
  -[TabLimitCleanupGroup .cxx_destruct]
  -[TabLimitCleanupGroup action]
  -[TabLimitCleanupGroup message]
  -[TabLimitCleanupGroup initWithAlertMesssage:actionTitle:tabs:browserWindowController:resultHandler:]


TabLimitCleanupWizard : NSObject
  // instance methods
  -[TabLimitCleanupWizard .cxx_destruct]
  -[TabLimitCleanupWizard initForPrivateBrowsing:withBrowserController:resultHandler:]
  -[TabLimitCleanupWizard makeViewController]
  -[TabLimitCleanupWizard _smallCleanupGroup]
  -[TabLimitCleanupWizard _cleanupGroupForRange:]


CompletionListTableViewController : SFPopoverSizingTableViewController
 @property  UITableViewHeaderFooterView *defaultHeaderFooterView
 @property  UIView *defaultHeaderFooterBackgroundView

  // class methods
  +[CompletionListTableViewController tableViewCellForSizeEstimation]

  // instance methods
  -[CompletionListTableViewController updateContentInsets]
  -[CompletionListTableViewController .cxx_destruct]
  -[CompletionListTableViewController viewDidLoad]
  -[CompletionListTableViewController viewIsAppearing:]
  -[CompletionListTableViewController keyboardDidChangeFrame:]
  -[CompletionListTableViewController updateKeyboardBottomInsetFromKeyboardFrame:]
  -[CompletionListTableViewController maximumNumberOfRows]
  -[CompletionListTableViewController minimumNumberOfRows]
  -[CompletionListTableViewController defaultHeaderFooterView]
  -[CompletionListTableViewController defaultHeaderFooterBackgroundView]


BookmarksForYouDataSource : WBSForYouRecommendationMediatorDataSource
  // instance methods
  -[BookmarksForYouDataSource .cxx_destruct]
  -[BookmarksForYouDataSource dealloc]
  -[BookmarksForYouDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[BookmarksForYouDataSource _bookmarksDidChangeWithNotification:]
  -[BookmarksForYouDataSource initWithBookmarkProvider:accessQueue:bookmarkCollection:]


ReorderingAutoscroller : NSObject
 @property  <ReorderingAutoscrollerDelegate> *delegate
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} scrollableRect
 @property  {UIEdgeInsets=dddd} autoscrollInsets
 @property  double maximumSpeed

  // instance methods
  -[ReorderingAutoscroller .cxx_destruct]
  -[ReorderingAutoscroller setDelegate:]
  -[ReorderingAutoscroller init]
  -[ReorderingAutoscroller delegate]
  -[ReorderingAutoscroller dealloc]
  -[ReorderingAutoscroller _setVelocity:]
  -[ReorderingAutoscroller endInteraction]
  -[ReorderingAutoscroller setMaximumSpeed:]
  -[ReorderingAutoscroller maximumSpeed]
  -[ReorderingAutoscroller setScrollableRect:]
  -[ReorderingAutoscroller updateInteractionAtPoint:]
  -[ReorderingAutoscroller beginInteraction]
  -[ReorderingAutoscroller _autoscroll:]
  -[ReorderingAutoscroller scrollableRect]
  -[ReorderingAutoscroller autoscrollInsets]
  -[ReorderingAutoscroller setAutoscrollInsets:]


URLCompletionProvider : CompletionProvider
 @property  BOOL providesTopHits
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  NSArray *searchParametersList

  // instance methods
  -[URLCompletionProvider setParsecSearchSession:]
  -[URLCompletionProvider .cxx_destruct]
  -[URLCompletionProvider parsecSearchSession]
  -[URLCompletionProvider dealloc]
  -[URLCompletionProvider _applicationDidEnterBackground:]
  -[URLCompletionProvider searchParametersList]
  -[URLCompletionProvider setSearchParametersList:]
  -[URLCompletionProvider setQueryToComplete:]
  -[URLCompletionProvider maximumCachedCompletionCount]
  -[URLCompletionProvider clearCachedCompletions]
  -[URLCompletionProvider _historyDidChange:]
  -[URLCompletionProvider _bookmarksDidChange:]
  -[URLCompletionProvider _endURLCompletionBackgroundTask]
  -[URLCompletionProvider completionsForQuery:isCFSearch:]
  -[URLCompletionProvider getKeyForQueryString:isCFSearch:]
  -[URLCompletionProvider findCompletionsForKey:isCFSearch:]
  -[URLCompletionProvider _doUpdateForPrefix:withSearchParameters:]
  -[URLCompletionProvider initWithBookmarkProvider:cloudTabStore:maxResults:searchableCollectionsMask:]
  -[URLCompletionProvider cfErrorForQuery:]
  -[URLCompletionProvider providesTopHits]
  -[URLCompletionProvider setProvidesTopHits:]


URLCompletionDatabase : WBSURLCompletionDatabase <WBSURLCompletionDataSource>
 @property  int searchableCollectionsMask
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[URLCompletionDatabase .cxx_destruct]
  -[URLCompletionDatabase dealloc]
  -[URLCompletionDatabase enumerateMatchDataForTypedStringHint:options:withBlock:]
  -[URLCompletionDatabase fakeBookmarkMatchDataWithURLString:title:shouldPreload:]
  -[URLCompletionDatabase initWithCloudTabStore:searchableCollectionsMask:bookmarkProvider:]
  -[URLCompletionDatabase clearBookmarksCache]
  -[URLCompletionDatabase _updateCloudDevices:]
  -[URLCompletionDatabase searchableCollectionsMask]
  -[URLCompletionDatabase setSearchableCollectionsMask:]


ContinuousReadingViewController : NSObject <UIScrollViewDelegate>
 @property  UIScrollView *outerScrollView
 @property  UIView *view
 @property  ContinuousReadingPreviewView *previousItemPreviewView
 @property  ContinuousReadingPreviewView *previewView
 @property  ContinuousReadingBannerView *topBannerView
 @property  ContinuousReadingItem *currentItem
 @property  _SFWebView *currentWebView
 @property  BOOL suppressingAutoScroll
 @property  BOOL committingToContinuousDocument
 @property  BOOL scrollingToNextContinuousDocument
 @property  BOOL userInteractingWithContainer
 @property  double scrollOffsetYForCurrentDocument
 @property  <ContinuousReadingViewControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ContinuousReadingViewController innerScrollViewDidScroll:]
  -[ContinuousReadingViewController previewView]
  -[ContinuousReadingViewController setBannerTheme:animated:]
  -[ContinuousReadingViewController isCommittingToContinuousDocument]
  -[ContinuousReadingViewController updateContinuousPreviewViewSizeAttributes]
  -[ContinuousReadingViewController updateOuterScrollView]
  -[ContinuousReadingViewController .cxx_destruct]
  -[ContinuousReadingViewController isUserInteractingWithContainer]
  -[ContinuousReadingViewController _setOuterScrollView:]
  -[ContinuousReadingViewController currentItem]
  -[ContinuousReadingViewController setDelegate:]
  -[ContinuousReadingViewController setPreviousItemPreviewView:]
  -[ContinuousReadingViewController scrollViewWillEndDragging:withVelocity:targetContentOffset:]
  -[ContinuousReadingViewController view]
  -[ContinuousReadingViewController loadNextItem]
  -[ContinuousReadingViewController _willCommitToContinuousDocumentInPreviewView:]
  -[ContinuousReadingViewController isScrollingToNextContinuousDocument]
  -[ContinuousReadingViewController scrollViewDidScroll:]
  -[ContinuousReadingViewController setSuppressingAutoScroll:]
  -[ContinuousReadingViewController _scrollOffsetYForPreviousDocument]
  -[ContinuousReadingViewController topBannerView]
  -[ContinuousReadingViewController didCreateWebViewForPreviousDocument:]
  -[ContinuousReadingViewController _commitToPreviousContinuousDocument]
  -[ContinuousReadingViewController setCurrentWebView:]
  -[ContinuousReadingViewController didCreateWebViewForNextDocument:]
  -[ContinuousReadingViewController scrollOffsetYForCurrentDocument]
  -[ContinuousReadingViewController _commitToNextContinuousDocument]
  -[ContinuousReadingViewController delegate]
  -[ContinuousReadingViewController _scrollOffsetYForNextDocument]
  -[ContinuousReadingViewController _outerScrollView]
  -[ContinuousReadingViewController setCurrentItem:]
  -[ContinuousReadingViewController isSuppressingAutoScroll]
  -[ContinuousReadingViewController setPreviewView:]
  -[ContinuousReadingViewController previousItemPreviewView]
  -[ContinuousReadingViewController currentWebView]
  -[ContinuousReadingViewController scrollViewDidEndDecelerating:]
  -[ContinuousReadingViewController loadPreviousItem]


RotationTestProcessor : ContentInteractionTestRunner
 @property  int iterationsRemaining
 @property  long long testState

  // instance methods
  -[RotationTestProcessor setTestState:]
  -[RotationTestProcessor testState]
  -[RotationTestProcessor startRotation]
  -[RotationTestProcessor initWithTestName:browserController:]
  -[RotationTestProcessor startPageAction:]
  -[RotationTestProcessor performActionForPage:]
  -[RotationTestProcessor setIterationsRemaining:]
  -[RotationTestProcessor iterationsRemaining]


VibrantLabelView : UILabel
  // instance methods
  -[VibrantLabelView _reduceTransparencyStatusDidChange:]
  -[VibrantLabelView traitCollectionDidChange:]
  -[VibrantLabelView .cxx_destruct]
  -[VibrantLabelView setTextColor:]


PPTWebBookmarkCollection : WebBookmarkCollection
  // class methods
  +[PPTWebBookmarkCollection lockSync]
  +[PPTWebBookmarkCollection unlockSync]
  +[PPTWebBookmarkCollection isLockedSync]


ReadingListLeadImageCache : NSObject
  // instance methods
  -[ReadingListLeadImageCache clearCache]
  -[ReadingListLeadImageCache .cxx_destruct]
  -[ReadingListLeadImageCache initWithDirectoryURL:]
  -[ReadingListLeadImageCache loadImageSynchronouslyForIconUUID:]


WebClipViewController : UITableViewController <UITextFieldDelegate, _SFBookmarkTextEntryTableViewControllerDelegate>
 @property  UIWebClip *webClip
 @property  NSObject<WebClipViewControllerDelegate> *delegate
 @property  BOOL canEditAndSave
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebClipViewController textFieldShouldReturn:]
  -[WebClipViewController viewWillLayoutSubviews]
  -[WebClipViewController didRotateFromInterfaceOrientation:]
  -[WebClipViewController tableView:numberOfRowsInSection:]
  -[WebClipViewController .cxx_destruct]
  -[WebClipViewController tableView:willSelectRowAtIndexPath:]
  -[WebClipViewController tableView:didSelectRowAtIndexPath:]
  -[WebClipViewController viewDidLoad]
  -[WebClipViewController _add]
  -[WebClipViewController tableView:cellForRowAtIndexPath:]
  -[WebClipViewController setDelegate:]
  -[WebClipViewController webClip]
  -[WebClipViewController tableView:titleForFooterInSection:]
  -[WebClipViewController viewWillDisappear:]
  -[WebClipViewController viewDidLayoutSubviews]
  -[WebClipViewController viewWillAppear:]
  -[WebClipViewController delegate]
  -[WebClipViewController dealloc]
  -[WebClipViewController _cancel]
  -[WebClipViewController loadView]
  -[WebClipViewController viewDidDisappear:]
  -[WebClipViewController _textFieldChanged:]
  -[WebClipViewController _canEditFieldsInCurrentViewController]
  -[WebClipViewController _centerForIconView]
  -[WebClipViewController _cellInset]
  -[WebClipViewController bookmarkTextEntryTableViewController:dismissedWithText:]
  -[WebClipViewController bookmarkTextEntryTableViewControllerShouldUseTranslucentAppearance:]
  -[WebClipViewController setWebClip:]
  -[WebClipViewController initWithTabDocument:]
  -[WebClipViewController _shouldUseTranslucentAppearance]
  -[WebClipViewController updateUIAnimated:]
  -[WebClipViewController _canAddWebClip]
  -[WebClipViewController setCanEditAndSave:]
  -[WebClipViewController canEditAndSave]


PPTTestBrowserWindowSettings : _SFBrowserWindowSettings
  // instance methods
  -[PPTTestBrowserWindowSettings synchronize]


FindOnPageView : _SFFindOnPageView
  // instance methods
  -[FindOnPageView findOnPageCompletionProvider:setStringToComplete:]


TabGroupAlertController : UIAlertController
 @property  <TabGroupAlertControllerDelegate> *delegate
 @property  long long role

  // instance methods
  -[TabGroupAlertController setRole:]
  -[TabGroupAlertController .cxx_destruct]
  -[TabGroupAlertController setDelegate:]
  -[TabGroupAlertController dismissViewControllerAnimated:completion:]
  -[TabGroupAlertController role]
  -[TabGroupAlertController delegate]


TabBarManager : NSObject
 @property  long long displayMode
 @property  NSSet *hiddenItems
 @property  SFUnifiedTabBarItemArrangement *itemArrangement
 @property  UnifiedBar *unifiedBar
 @property  BOOL suppressesStandaloneTabBar
 @property  UnifiedTabBar *inlineTabBar
 @property  UnifiedTabBar *standaloneTabBar
 @property  UnifiedTabBar *effectiveTabBar
 @property  BookmarksBarView *bookmarksBar

  // instance methods
  -[TabBarManager bookmarksBar]
  -[TabBarManager displayMode]
  -[TabBarManager unifiedBar]
  -[TabBarManager .cxx_destruct]
  -[TabBarManager hiddenItems]
  -[TabBarManager init]
  -[TabBarManager setBookmarksBar:]
  -[TabBarManager setHiddenItems:]
  -[TabBarManager addObserver:]
  -[TabBarManager setDisplayMode:]
  -[TabBarManager removeObserver:]
  -[TabBarManager setActiveItem:animated:]
  -[TabBarManager itemArrangement]
  -[TabBarManager setItemArrangement:]
  -[TabBarManager setActiveItemIsExpanded:animated:completionHandler:]
  -[TabBarManager standaloneTabBar]
  -[TabBarManager inlineTabBar]
  -[TabBarManager scrollToActiveItemAnimated:]
  -[TabBarManager effectiveTabBar]
  -[TabBarManager setUnifiedBar:]
  -[TabBarManager setSuppressesStandaloneTabBar:]
  -[TabBarManager setItemArrangement:animated:keepingItemVisible:]
  -[TabBarManager _updateUnifiedBarContentArrangement]
  -[TabBarManager _setUsesInlineTabBar:]
  -[TabBarManager _updateUsesStandaloneTabBar]
  -[TabBarManager _inlineItemArrangementForItemArrangement:displayMode:]
  -[TabBarManager _configureStandaloneTabBar]
  -[TabBarManager _notifyDidUpdateDisplayMode]
  -[TabBarManager _notifyDidCreateTabBar:]
  -[TabBarManager _setUsesStandaloneTabBar:]
  -[TabBarManager _standaloneItemArrangementForItemArrangement:displayMode:]
  -[TabBarManager _setItemArrangement:animated:keepingItemVisible:completionHandler:]
  -[TabBarManager _canAnimateInlineTabBarForTransitionToItemArrangement:]
  -[TabBarManager _canAnimateStandaloneTabBarForTransitionToItemArrangement:]
  -[TabBarManager suppressesStandaloneTabBar]


PopoverCatalogViewController : AbstractCatalogViewController
 @property  CatalogViewController *primaryCatalogViewController

  // instance methods
  -[PopoverCatalogViewController didGainOwnershipOfStartPageViewController]
  -[PopoverCatalogViewController startPageViewController]
  -[PopoverCatalogViewController requiredContentWidth]
  -[PopoverCatalogViewController completionsViewControllerIfLoaded]
  -[PopoverCatalogViewController completionsViewController]
  -[PopoverCatalogViewController universalSearchFirstTimeExperienceViewController]
  -[PopoverCatalogViewController didGainOwnershipOfCompletionsViewController]
  -[PopoverCatalogViewController didGainOwnershipOfUniversalSearchFirstTimeExperienceViewController]
  -[PopoverCatalogViewController viewWillLayoutSubviews]
  -[PopoverCatalogViewController .cxx_destruct]
  -[PopoverCatalogViewController _preferredHeightForStartPage]
  -[PopoverCatalogViewController updateStartPagePreferredContentSize]
  -[PopoverCatalogViewController setPrimaryCatalogViewController:]
  -[PopoverCatalogViewController resetStartPagePreferredHeight]
  -[PopoverCatalogViewController primaryCatalogViewController]


ZoomTestProcessor : ContentInteractionTestRunner
 @property  CADisplayLink *displayLink
 @property  int iterationsRemaining
 @property  long long testState
 @property  BOOL didFirstZoomStep
 @property  BOOL zoomingIn
 @property  int stepsPerZoom

  // instance methods
  -[ZoomTestProcessor setDisplayLink:]
  -[ZoomTestProcessor .cxx_destruct]
  -[ZoomTestProcessor displayLink]
  -[ZoomTestProcessor setZoomingIn:]
  -[ZoomTestProcessor setTestState:]
  -[ZoomTestProcessor testState]
  -[ZoomTestProcessor initWithTestName:browserController:]
  -[ZoomTestProcessor setStepsPerZoom:]
  -[ZoomTestProcessor startPageAction:]
  -[ZoomTestProcessor performActionForPage:]
  -[ZoomTestProcessor setIterationsRemaining:]
  -[ZoomTestProcessor iterationsRemaining]
  -[ZoomTestProcessor stepsPerZoom]
  -[ZoomTestProcessor zoomingIn]
  -[ZoomTestProcessor didFirstZoomStep]
  -[ZoomTestProcessor setDidFirstZoomStep:]
  -[ZoomTestProcessor updateWithNewScale]
  -[ZoomTestProcessor zoomTestStep]
  -[ZoomTestProcessor startZoomingTest]


AddBookmarkUIActivity : _SFAddBookmarkActivity <_SFSingleBookmarkNavigationControllerDelegate>
 @property  <AddBookmarkActivityDelegate> *delegate

  // instance methods
  -[AddBookmarkUIActivity activityViewController]
  -[AddBookmarkUIActivity .cxx_destruct]
  -[AddBookmarkUIActivity activityDidFinish:]
  -[AddBookmarkUIActivity canPerformWithActivityItems:]
  -[AddBookmarkUIActivity addBookmarkNavControllerCanSaveBookmarkChanges:]
  -[AddBookmarkUIActivity prepareWithActivityItems:]
  -[AddBookmarkUIActivity addBookmarkNavController:didFinishWithResult:bookmark:]
  -[AddBookmarkUIActivity _embeddedActivityViewController]


MediaCaptureActivity : TabDocumentActivity
  // instance methods
  -[MediaCaptureActivity activityType]
  -[MediaCaptureActivity _wantsOriginalImageColor]
  -[MediaCaptureActivity _activityStatusTintColor]
  -[MediaCaptureActivity activityTitleWithTabDocument:]
  -[MediaCaptureActivity canPerformWithTabDocument:]
  -[MediaCaptureActivity performActivityWithTabDocument:]
  -[MediaCaptureActivity activityImageWithTabDocument:]


ToggleDesktopWebsiteActivity : TabDocumentActivity
  // instance methods
  -[ToggleDesktopWebsiteActivity activityType]
  -[ToggleDesktopWebsiteActivity actionType]
  -[ToggleDesktopWebsiteActivity activityTitleWithTabDocument:]
  -[ToggleDesktopWebsiteActivity canPerformWithTabDocument:]
  -[ToggleDesktopWebsiteActivity performActivityWithTabDocument:]
  -[ToggleDesktopWebsiteActivity systemImageNameWithTabDocument:]


AddToHomeScreenUIActivity : TabDocumentActivity <WebClipDelegate, WebClipViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AddToHomeScreenUIActivity activityViewController]
  -[AddToHomeScreenUIActivity .cxx_destruct]
  -[AddToHomeScreenUIActivity _systemImageName]
  -[AddToHomeScreenUIActivity activityType]
  -[AddToHomeScreenUIActivity activityDidFinish:]
  -[AddToHomeScreenUIActivity webClip:iconRequestDidFinishWithImage:precomposed:]
  -[AddToHomeScreenUIActivity webClip:startupImageRequestDidFinishWithImage:]
  -[AddToHomeScreenUIActivity webClip:startupLandscapeImageRequestDidFinishWithImage:]
  -[AddToHomeScreenUIActivity activityTitle]
  -[AddToHomeScreenUIActivity dealloc]
  -[AddToHomeScreenUIActivity _embeddedActivityViewController]
  -[AddToHomeScreenUIActivity prepareWithTabDocument:completion:]
  -[AddToHomeScreenUIActivity webClipViewController:didFinishWithResult:]
  -[AddToHomeScreenUIActivity _finishPreparing]
  -[AddToHomeScreenUIActivity _createWebClip]
  -[AddToHomeScreenUIActivity _manifestTitle]
  -[AddToHomeScreenUIActivity _updateImageFromActiveTabDocument]
  -[AddToHomeScreenUIActivity _downloadManifestIconWithCompletionHandler:]


TabThumbnailCloseButton : UIButton
  // instance methods
  -[TabThumbnailCloseButton .cxx_destruct]
  -[TabThumbnailCloseButton layoutSubviews]
  -[TabThumbnailCloseButton initWithFrame:]


TabThumbnailRecordingIndicator : UIView
 @property  unsigned long mediaStateIcon

  // instance methods
  -[TabThumbnailRecordingIndicator .cxx_destruct]
  -[TabThumbnailRecordingIndicator setMediaStateIcon:]
  -[TabThumbnailRecordingIndicator layoutSubviews]
  -[TabThumbnailRecordingIndicator mediaStateIcon]
  -[TabThumbnailRecordingIndicator initWithFrame:]


GridVisualizationView : UIView
  // instance methods
  -[GridVisualizationView initWithFrame:]
  -[GridVisualizationView drawRect:]


TabDragDropInteractionController : NSObject <UIDragInteractionDelegate_Private, UIDropInteractionDelegate_Private, UIDragInteractionDelegate, UIDropInteractionDelegate, UIContextMenuInteractionDelegate>
 @property  <TabDocumentDragDropDataSource> *dataSource
 @property  TabDocumentDropHandler *dropHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TabDragDropInteractionController dragInteraction:session:willAddItems:forInteraction:]
  -[TabDragDropInteractionController dropInteraction:item:willAnimateDropWithAnimator:]
  -[TabDragDropInteractionController contextMenuInteraction:previewForHighlightingMenuWithConfiguration:]
  -[TabDragDropInteractionController dragInteraction:prefersFullSizePreviewsForSession:]
  -[TabDragDropInteractionController initWithDataSource:dropHandler:]
  -[TabDragDropInteractionController contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[TabDragDropInteractionController contextMenuInteraction:previewForDismissingMenuWithConfiguration:]
  -[TabDragDropInteractionController _dropInteraction:dataOwnerForSession:]
  -[TabDragDropInteractionController _tabCollectionItemAtPoint:interaction:]
  -[TabDragDropInteractionController _transitionToDragState:fromDragState:forTabCollectionItemsInSession:interaction:]
  -[TabDragDropInteractionController _dragInteraction:dataOwnerForAddingToSession:withTouchAtPoint:]
  -[TabDragDropInteractionController dragInteraction:itemsForAddingToSession:withTouchAtPoint:]
  -[TabDragDropInteractionController contextMenuInteraction:configurationForMenuAtLocation:]
  -[TabDragDropInteractionController .cxx_destruct]
  -[TabDragDropInteractionController contextMenuInteraction:willEndForConfiguration:animator:]
  -[TabDragDropInteractionController dragInteraction:previewForLiftingItem:session:]
  -[TabDragDropInteractionController dropInteraction:sessionDidExit:]
  -[TabDragDropInteractionController _unhideTabDocumentsForLocalDragSession:]
  -[TabDragDropInteractionController dropInteraction:canHandleSession:]
  -[TabDragDropInteractionController _shouldMovePlaceholderItem:overTargetItem:withDropLocation:interaction:]
  -[TabDragDropInteractionController dataSource]
  -[TabDragDropInteractionController dragInteraction:itemsForBeginningSession:]
  -[TabDragDropInteractionController dropInteraction:sessionDidUpdate:]
  -[TabDragDropInteractionController _autoscrollerForInteraction:]
  -[TabDragDropInteractionController _viewForTransitionToItem:withTabCollectionView:]
  -[TabDragDropInteractionController _canOpenInCurrentTabForSession:tabView:]
  -[TabDragDropInteractionController dragInteraction:session:willEndWithOperation:]
  -[TabDragDropInteractionController _cleanUpDropPlaceholderForSession:interaction:]
  -[TabDragDropInteractionController _insertPlaceholderTabIfNeededForSession:interaction:]
  -[TabDragDropInteractionController dragInteraction:sessionWillBegin:]
  -[TabDragDropInteractionController _dragInteraction:dataOwnerForSession:]
  -[TabDragDropInteractionController dropInteraction:sessionDidEnter:]
  -[TabDragDropInteractionController _dragInteractionDidCancelLiftWithoutDragging:]
  -[TabDragDropInteractionController dropInteraction:performDrop:]
  -[TabDragDropInteractionController _tabViewIsFilteringTabs:]
  -[TabDragDropInteractionController dropInteraction:sessionDidEnd:]
  -[TabDragDropInteractionController _newDragItemsAtPoint:excludingTabDocuments:interaction:]
  -[TabDragDropInteractionController _cleanUpDragPreviewForSesssion:]
  -[TabDragDropInteractionController dropInteraction:previewForDroppingItem:withDefault:]
  -[TabDragDropInteractionController dropHandler]


BookmarkImporter : NSObject
  // instance methods
  -[BookmarkImporter importBuiltinBookmarks]
  -[BookmarkImporter _setLastImportedCarrierBookmarksInfo:]
  -[BookmarkImporter initWithBookmarkCollection:]
  -[BookmarkImporter _importFavoritesFolderBuiltinBookmarks]
  -[BookmarkImporter test_builtinFavoritesForLocale:deviceClass:]
  -[BookmarkImporter _importCarrierBookmarksIfNecessary]
  -[BookmarkImporter .cxx_destruct]
  -[BookmarkImporter _oldDeletedStaticBookmarks]
  -[BookmarkImporter _lastImportedCarrierBookmarksInfo]
  -[BookmarkImporter _clearOldDeletedStaticBookmarks]
  -[BookmarkImporter _importCarrierBookmarksIfNecessaryAsync]
  -[BookmarkImporter _currentDeviceClass]
  -[BookmarkImporter _importRootFolderBuiltinBookmarks]
  -[BookmarkImporter migrateYouTubeBookmarks]
  -[BookmarkImporter _myAccountBookmarkInfo]
  -[BookmarkImporter _carrierBundleBuiltinBookmarkInfo]
  -[BookmarkImporter _appendBuiltinBookmarkWithInfo:toParent:asCarrierBookmark:]
  -[BookmarkImporter _appendBookmarksFromSource:toParent:]
  -[BookmarkImporter _uniqueYouTubeBookmarkFolderName]
  -[BookmarkImporter _builtinFavoritesForLocale:deviceClass:]
  -[BookmarkImporter _googleChannelReplacementStringForDeviceClass:]
  -[BookmarkImporter _builtInBookmarkItemWithTemplate:forLocale:deviceClass:]
  -[BookmarkImporter _builtinBookmarkWithInfo:asCarrierBookmark:]
  -[BookmarkImporter _getCarrierBundleBuiltinBookmarkInfoWithCompletion:]


BarPopoverSourceInfo : NSObject <_SFPopoverSourceInfo>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} popoverSourceRect
 @property  UIView *popoverSourceView
 @property  BOOL shouldDismissIfSourceRemovedAfterRepositioning
 @property  BOOL shouldPassthroughSuperview
 @property  BOOL shouldHideArrow
 @property  unsigned long permittedArrowDirections
 @property  long long provenance
 @property  UIBarButtonItem *barButtonItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BarPopoverSourceInfo .cxx_destruct]
  -[BarPopoverSourceInfo barButtonItem]
  -[BarPopoverSourceInfo popoverSourceView]
  -[BarPopoverSourceInfo _sourceInfo]
  -[BarPopoverSourceInfo popoverSourceRect]
  -[BarPopoverSourceInfo shouldDismissIfSourceRemovedAfterRepositioning]
  -[BarPopoverSourceInfo initWithBrowserController:barItem:]


MobileSafariWindow : UIWindow
 @property  <MobileSafariWindowDelegate> *safariWindowDelegate

  // instance methods
  -[MobileSafariWindow sendEvent:]
  -[MobileSafariWindow initWithWindowScene:]
  -[MobileSafariWindow .cxx_destruct]
  -[MobileSafariWindow setSafariWindowDelegate:]
  -[MobileSafariWindow safariWindowDelegate]
  -[MobileSafariWindow handleStatusBarChangeFromHeight:toHeight:]
  -[MobileSafariWindow _didCompleteSystemSnapshot]
  -[MobileSafariWindow _willBeginSystemSnapshot]


HistoryTableViewCellModel : NSObject
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSURL *url
 @property  NSString *identifier

  // class methods
  +[HistoryTableViewCellModel urlForHistoryItem:]

  // instance methods
  -[HistoryTableViewCellModel url]
  -[HistoryTableViewCellModel .cxx_destruct]
  -[HistoryTableViewCellModel init]
  -[HistoryTableViewCellModel identifier]
  -[HistoryTableViewCellModel subtitle]
  -[HistoryTableViewCellModel title]
  -[HistoryTableViewCellModel initWithHistoryItem:]
  -[HistoryTableViewCellModel initWithTitle:subtitle:url:identifier:]


TouchEventGenerator : NSObject
  // class methods
  +[TouchEventGenerator sharedTouchEventGenerator]

  // instance methods
  -[TouchEventGenerator touchDown:]
  -[TouchEventGenerator liftUp:touchCount:]
  -[TouchEventGenerator moveToPoints:touchCount:duration:]
  -[TouchEventGenerator _updateTouchPoints:count:]
  -[TouchEventGenerator init]
  -[TouchEventGenerator liftUpAtPoints:touchCount:]
  -[TouchEventGenerator liftUp:]
  -[TouchEventGenerator touchDown:touchCount:]
  -[TouchEventGenerator _createIOHIDEventType:]
  -[TouchEventGenerator _sendHIDEvent:]
  -[TouchEventGenerator touchDownAtPoints:touchCount:]


PrivacyReportActivity : TabDocumentActivity
  // instance methods
  -[PrivacyReportActivity _systemImageName]
  -[PrivacyReportActivity activityType]
  -[PrivacyReportActivity actionType]
  -[PrivacyReportActivity activityTitle]
  -[PrivacyReportActivity performActivityWithTabDocument:]
  -[PrivacyReportActivity canPerformOnNewTabPage]
  -[PrivacyReportActivity _createPrivacyReportViewControllerWithURL:]


ActionCellAccessory : UICellAccessoryCustomView
  // instance methods
  -[ActionCellAccessory .cxx_destruct]
  -[ActionCellAccessory copyWithZone:]
  -[ActionCellAccessory applyContentConfiguration:forState:]
  -[ActionCellAccessory initWithAction:visibilityProvider:]


CapsuleNavigationBarRegistration : NSObject <_SFBarRegistrationToken>
 @property  SFCapsuleNavigationBar *bar
 @property  long long contentMode
 @property  long long state
 @property  unsigned long pageFormatItemState
 @property  UIButton *microphoneButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CapsuleNavigationBarRegistration bar]
  -[CapsuleNavigationBarRegistration updateBarAnimated:]
  -[CapsuleNavigationBarRegistration .cxx_destruct]
  -[CapsuleNavigationBarRegistration setBarItem:hidden:]
  -[CapsuleNavigationBarRegistration setBarItem:selected:]
  -[CapsuleNavigationBarRegistration popoverSourceInfoForItem:]
  -[CapsuleNavigationBarRegistration _progressView]
  -[CapsuleNavigationBarRegistration setProgress:forBarItem:]
  -[CapsuleNavigationBarRegistration setBarItem:enabled:]
  -[CapsuleNavigationBarRegistration dealloc]
  -[CapsuleNavigationBarRegistration _voiceSearchAvailabilityDidChange:]
  -[CapsuleNavigationBarRegistration containsBarItem:]
  -[CapsuleNavigationBarRegistration setBarItem:menu:]
  -[CapsuleNavigationBarRegistration viewForBarItem:]
  -[CapsuleNavigationBarRegistration pageFormatItemState]
  -[CapsuleNavigationBarRegistration setPageFormatItemState:]
  -[CapsuleNavigationBarRegistration microphoneButton]
  -[CapsuleNavigationBarRegistration _isBarItemHidden:]
  -[CapsuleNavigationBarRegistration initWithBar:barManager:]
  -[CapsuleNavigationBarRegistration _updateFormatMenuButton]
  -[CapsuleNavigationBarRegistration _touchDownActionForBarItem:]
  -[CapsuleNavigationBarRegistration _actionForBarItem:]
  -[CapsuleNavigationBarRegistration _longPressActionForBarItem:]
  -[CapsuleNavigationBarRegistration _updateDownloadState]


AlexaTestRunner : ReplayPagesTestRunner
  // instance methods
  -[AlexaTestRunner init]
  -[AlexaTestRunner collectPPTResults]


SharedWithYouSectionController : LibrarySectionController
  // instance methods
  -[SharedWithYouSectionController .cxx_destruct]
  -[SharedWithYouSectionController title]
  -[SharedWithYouSectionController initWithConfiguration:]
  -[SharedWithYouSectionController itemControllers]
  -[SharedWithYouSectionController registerItemsWithRegistration:]


MediaCaptureStatusBarManager : _SFMediaCaptureStatusBarManager
 @property  TabDocument *recordingTabDocument

  // instance methods
  -[MediaCaptureStatusBarManager recordingTabDocument]
  -[MediaCaptureStatusBarManager tabDidBecomeActive:]
  -[MediaCaptureStatusBarManager browserControllerWillExitTabView:]
  -[MediaCaptureStatusBarManager browserControllerWillEnterForeground:]
  -[MediaCaptureStatusBarManager browserControllerDidEnterBackground:]
  -[MediaCaptureStatusBarManager activateApp]
  -[MediaCaptureStatusBarManager browserControllerWillEnterTabView:]
  -[MediaCaptureStatusBarManager statusString]


CompletionProvider : NSObject
 @property  <CompletionProviderDelegate> *delegate
 @property  BOOL failing

  // instance methods
  -[CompletionProvider fail]
  -[CompletionProvider .cxx_destruct]
  -[CompletionProvider setDelegate:]
  -[CompletionProvider init]
  -[CompletionProvider delegate]
  -[CompletionProvider completionsForQuery:]
  -[CompletionProvider setCompletions:forString:]
  -[CompletionProvider setQueryToComplete:]
  -[CompletionProvider maximumCachedCompletionCount]
  -[CompletionProvider clearCachedCompletions]
  -[CompletionProvider completionsForQuery:isCFSearch:]
  -[CompletionProvider getKeyForQueryString:isCFSearch:]
  -[CompletionProvider findCompletionsForKey:isCFSearch:]
  -[CompletionProvider setCompletions:forString:isCFSearch:]
  -[CompletionProvider _pruneCachedCompletions]
  -[CompletionProvider isFailing]


ViewReuseManager : NSObject
 @property  Class reusableViewClass
 @property  <ViewReuseManagerDelegate> *delegate
 @property  BOOL alwaysSendPrepareForReuse
 @property  NSArray *trackedViews

  // instance methods
  -[ViewReuseManager initWithReusableViewClass:]
  -[ViewReuseManager reusableViewClass]
  -[ViewReuseManager setAlwaysSendPrepareForReuse:]
  -[ViewReuseManager .cxx_destruct]
  -[ViewReuseManager trackedViews]
  -[ViewReuseManager setDelegate:]
  -[ViewReuseManager insertView:inTrackedViewsAtIndex:]
  -[ViewReuseManager alwaysSendPrepareForReuse]
  -[ViewReuseManager recycleView:]
  -[ViewReuseManager updateTrackedViewsForRepresentedObjectsInRange:]
  -[ViewReuseManager init]
  -[ViewReuseManager removeViewFromTrackedViews:]
  -[ViewReuseManager _didReceiveMemoryWarning:]
  -[ViewReuseManager _addTrackedViewForRepresentedObjectAtIndex:]
  -[ViewReuseManager _recycleView:]
  -[ViewReuseManager delegate]
  -[ViewReuseManager _recycleViewsInCollection:]
  -[ViewReuseManager dealloc]
  -[ViewReuseManager makeView]


ForYouRecommendationMediator : WBSForYouRecommendationMediator
  // instance methods
  -[ForYouRecommendationMediator loadLinkPresentationMetadataForMessageWithGUID:completionHandler:]
  -[ForYouRecommendationMediator .cxx_destruct]
  -[ForYouRecommendationMediator updatedRecommendationsForTopics:withCompletionHandler:]
  -[ForYouRecommendationMediator _loadDemoSuggestions]
  -[ForYouRecommendationMediator _cloudTabsDataSourceIfAvailable]
  -[ForYouRecommendationMediator initWithContextClient:featureManager:historyProvider:]
  -[ForYouRecommendationMediator dealloc]
  -[ForYouRecommendationMediator _cloudTabFeatureAvailabilityDidChange:]
  -[ForYouRecommendationMediator dataSources]
  -[ForYouRecommendationMediator fetchImageForRecommendation:completionHandler:]


LaunchStateController : NSObject
  // class methods
  +[LaunchStateController sharedController]

  // instance methods
  -[LaunchStateController .cxx_destruct]
  -[LaunchStateController init]
  -[LaunchStateController doAfterUIBecomesActive:]
  -[LaunchStateController forceMarkUIBecomeActiveForTesting]
  -[LaunchStateController applicationUIDidBecomeActive]


TabOverviewInterpolatedValue : NSObject
  // instance methods
  -[TabOverviewInterpolatedValue .cxx_destruct]


CompletionList : NSObject <CompletionProviderDelegate, FindOnPageCompletionProviderDataSource, TabCompletionProviderDataSource>
 @property  URLCompletionProvider *URLCompletionProvider
 @property  SearchSuggestionProvider *suggestionProvider
 @property  ReadingListCompletionProvider *readingListProvider
 @property  FindOnPageCompletionProvider *findOnPageProvider
 @property  QuickWebsiteSearchCompletionProvider *quickWebsiteSearchProvider
 @property  CompletionProvider *firstRemoteCompletionProviderToRespondToQuery
 @property  UniversalSearchCompletionProvider *universalSearchProvider
 @property  TabCompletionProvider *tabCompletionProvider
 @property  PencilInputCompletionProvider *pencilInputCompletionProvider
 @property  NSDate *otherRenderTimeoutStartTime
 @property  NSDate *searchRenderTimeoutStartTime
 @property  NSDate *minRenderTimeoutStartTime
 @property  BrowserController *browserController
 @property  UniversalSearchSession *parsecSearchSession
 @property  <CompletionListDelegate> *delegate
 @property  <LoadProgressObserver> *loadProgressObserver
 @property  BOOL shouldIncludeSearchSuggestions
 @property  WBSCompletionQuery *query
 @property  BOOL usingPencilInput
 @property  BOOL hasCompletions
 @property  unsigned long maximumCompletionsPerGroup
 @property  BOOL networkIsReachable
 @property  BOOL hasParsecResults
 @property  unsigned long findOnPageGroupIndex
 @property  unsigned long cfFindOnPageGroupIndex
 @property  NSArray *searchParametersList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CompletionList _completionsByMergingRecentSearches:withSuggestions:andLiteralSearch:queryID:]
  +[CompletionList completionBookmarkProvider]

  // instance methods
  -[CompletionList browserController]
  -[CompletionList loadProgressObserver]
  -[CompletionList setQuery:]
  -[CompletionList query]
  -[CompletionList setParsecSearchSession:]
  -[CompletionList _setNeedsUpdate]
  -[CompletionList .cxx_destruct]
  -[CompletionList setDelegate:]
  -[CompletionList isUsingPencilInput]
  -[CompletionList _update]
  -[CompletionList stopCompleting]
  -[CompletionList numberOfGroups]
  -[CompletionList parsecSearchSession]
  -[CompletionList _updateTimerFired:]
  -[CompletionList clearCachedTabCompletionData]
  -[CompletionList delegate]
  -[CompletionList dealloc]
  -[CompletionList setLoadProgressObserver:]
  -[CompletionList suggestionProvider]
  -[CompletionList setSuggestionProvider:]
  -[CompletionList titleForGroupAtIndex:]
  -[CompletionList hasCompletions]
  -[CompletionList searchParametersList]
  -[CompletionList setSearchParametersList:]
  -[CompletionList setUniversalSearchProvider:]
  -[CompletionList restoreCachedCompletions]
  -[CompletionList windowUUIDsToTabDocumentsForTabCompletionProvider:]
  -[CompletionList currentWindowUUIDForTabCompletionProvider:]
  -[CompletionList tabGroupsForTabCompletionProvider:]
  -[CompletionList selectedTabDocumentForTabCompletionProvider:]
  -[CompletionList cacheCurrentCompletionsAfterAcceptanceOfCompletionItem:]
  -[CompletionList hasParsecResults]
  -[CompletionList windowHostingCompletionProvider:]
  -[CompletionList completionProvider:didFinishCompletingString:]
  -[CompletionList completionProviderDidFail:]
  -[CompletionList _invalidateUpdateTimer]
  -[CompletionList _groupWithTitle:completions:maximumCompletions:]
  -[CompletionList _groupWithTitle:completions:]
  -[CompletionList _groupsOnUnreachableNetworkForQuery:]
  -[CompletionList _shouldFetchSearchSuggestions]
  -[CompletionList _updateParsecCacheForQuery:withTopHit:withParsecCompletions:]
  -[CompletionList _recentSearchesForQuery:]
  -[CompletionList _removeSearchURLsFromCompletions:]
  -[CompletionList _searchForURLTopHits:intoTopHits:andAddresses:]
  -[CompletionList _addTopHitsWithSwitchToTabSectionIfNecessary:intoGroups:]
  -[CompletionList _searchRenderTimeoutHasElapsed]
  -[CompletionList _scheduleUpdateOnOrBeforeDate:withCurrentDate:]
  -[CompletionList _shouldShowGroupedCompletionForResults:]
  -[CompletionList _shouldShowParsecExpandedComposite:topHits:isExpandedComposite:hideTopHits:]
  -[CompletionList _resultsWithBottomPlacement:topHitAddresses:currentTopHit:]
  -[CompletionList _cacheResultsIfApplicable:]
  -[CompletionList _shouldShowAccessoryContainingCompletionForResults:]
  -[CompletionList _titleForTopHits:]
  -[CompletionList _addResult:intoGroup:unlessHiddenBy:topHit:]
  -[CompletionList _addResults:intoGroups:]
  -[CompletionList _removeTopHitsGroup:]
  -[CompletionList _bestTabCompletionItemWithTopHits:]
  -[CompletionList _groupByAddingCompletions:toGroup:]
  -[CompletionList _updateIconsForSearchUIRowsInGroups:topHit:]
  -[CompletionList _urlString:isProbablyContainedIn:]
  -[CompletionList _findOnPageGroupForQuery:]
  -[CompletionList _addTopHits:intoGroups:]
  -[CompletionList _addSwitchToTabSectionIfNecessary:intoGroups:]
  -[CompletionList _addSwitchToTabSectionWithTabCompletionMatch:intoGroups:]
  -[CompletionList tabCompletionProvider]
  -[CompletionList _groupsForQuery:allowPartialCompletions:findOnPageGroup:topHit:topHitReady:]
  -[CompletionList findOnPageGroupIndex]
  -[CompletionList cfFindOnPageGroupIndex]
  -[CompletionList _updateProviders]
  -[CompletionList clearCachedSearchQuery]
  -[CompletionList _topHitMatchesString:]
  -[CompletionList _groupOrNilAtIndex:]
  -[CompletionList updateRestorationCompletionItemForCompletionItem:isCF:]
  -[CompletionList _updateQueryIDForGroups]
  -[CompletionList _titleForFindOnPageHeaderWithMatchCount:]
  -[CompletionList tabDocumentForFindOnPageCompletionProvider:]
  -[CompletionList initWithParsecSearchSession:browserController:]
  -[CompletionList _removeCompletionsWithAddressInSet:fromArray:andTruncateTo:]
  -[CompletionList topHitForString:]
  -[CompletionList isTopHitReadyForString:]
  -[CompletionList defaultSectionTitleForGroupAtIndex:]
  -[CompletionList completionsForGroupAtIndex:]
  -[CompletionList headerViewReuseIdentifierForGroupAtIndex:]
  -[CompletionList headerViewForGroupAtIndex:]
  -[CompletionList configureHeaderView:forGroupAtIndex:]
  -[CompletionList setMaximumCompletionsPerGroup:]
  -[CompletionList setNetworkIsReachable:]
  -[CompletionList setShouldIncludeSearchSuggestions:]
  -[CompletionList didResumeSearchWithQuery:]
  -[CompletionList clearCachedSearches]
  -[CompletionList shouldIncludeSearchSuggestions]
  -[CompletionList setUsingPencilInput:]
  -[CompletionList maximumCompletionsPerGroup]
  -[CompletionList networkIsReachable]
  -[CompletionList URLCompletionProvider]
  -[CompletionList setURLCompletionProvider:]
  -[CompletionList readingListProvider]
  -[CompletionList setReadingListProvider:]
  -[CompletionList findOnPageProvider]
  -[CompletionList setFindOnPageProvider:]
  -[CompletionList quickWebsiteSearchProvider]
  -[CompletionList setQuickWebsiteSearchProvider:]
  -[CompletionList firstRemoteCompletionProviderToRespondToQuery]
  -[CompletionList setFirstRemoteCompletionProviderToRespondToQuery:]
  -[CompletionList universalSearchProvider]
  -[CompletionList setTabCompletionProvider:]
  -[CompletionList pencilInputCompletionProvider]
  -[CompletionList setPencilInputCompletionProvider:]
  -[CompletionList otherRenderTimeoutStartTime]
  -[CompletionList setOtherRenderTimeoutStartTime:]
  -[CompletionList searchRenderTimeoutStartTime]
  -[CompletionList setSearchRenderTimeoutStartTime:]
  -[CompletionList minRenderTimeoutStartTime]
  -[CompletionList setMinRenderTimeoutStartTime:]


BrowserSceneDelegateRouter : NSObject <UIWindowSceneDelegate>
 @property  UIWindow *window
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BrowserSceneDelegateRouter scene:willConnectToSession:options:]


BrowserCanvasDelegateRouter : BrowserSceneDelegateRouter

TouchIconFetcher : NSObject <TouchIconFetcherObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TouchIconFetcher initWithWebView:]
  -[TouchIconFetcher .cxx_destruct]
  -[TouchIconFetcher _webProcessActivityProxy]
  -[TouchIconFetcher invalidate]
  -[TouchIconFetcher didFetchTouchIconURLs:forURL:]
  -[TouchIconFetcher fetchTouchIconURLsWithCompletion:]
  -[TouchIconFetcher _setUpTouchIconFetcherObserver]


HideToolbarActivity : TabDocumentActivity
  // instance methods
  -[HideToolbarActivity activityType]
  -[HideToolbarActivity actionType]
  -[HideToolbarActivity activityTitle]
  -[HideToolbarActivity performActivityWithTabDocument:]
  -[HideToolbarActivity systemImageNameWithTabDocument:]


WebsiteSettingsActivity : TabDocumentActivity
  // instance methods
  -[WebsiteSettingsActivity _systemImageName]
  -[WebsiteSettingsActivity activityType]
  -[WebsiteSettingsActivity actionType]
  -[WebsiteSettingsActivity activityTitle]
  -[WebsiteSettingsActivity performActivityWithTabDocument:]


AddToQuickNoteActivity : TabDocumentActivity
  // instance methods
  -[AddToQuickNoteActivity _systemImageName]
  -[AddToQuickNoteActivity activityType]
  -[AddToQuickNoteActivity activityTitle]
  -[AddToQuickNoteActivity canPerformWithTabDocument:]
  -[AddToQuickNoteActivity performActivityWithTabDocument:]


SafariSandboxBrokerConnection : WBSUISafariSandboxBrokerConnection
  // instance methods
  -[SafariSandboxBrokerConnection .cxx_destruct]
  -[SafariSandboxBrokerConnection _connectionWithCompletionHandler:]


QuickWebsiteSearchCompletionItem : NSObject <CompletionItem>
 @property  WBSQuickWebsiteSearchProvider *searchProvider
 @property  QuickWebsiteSearchQuery *searchQuery
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[QuickWebsiteSearchCompletionItem searchQuery]
  -[QuickWebsiteSearchCompletionItem searchProvider]
  -[QuickWebsiteSearchCompletionItem .cxx_destruct]
  -[QuickWebsiteSearchCompletionItem isEquivalentTo:]
  -[QuickWebsiteSearchCompletionItem parsecQueryID]
  -[QuickWebsiteSearchCompletionItem setParsecQueryID:]
  -[QuickWebsiteSearchCompletionItem parsecDomainIdentifier]
  -[QuickWebsiteSearchCompletionItem sfSearchResultValue]
  -[QuickWebsiteSearchCompletionItem engagementDestination]
  -[QuickWebsiteSearchCompletionItem completionTableViewCellReuseIdentifier]
  -[QuickWebsiteSearchCompletionItem acceptCompletionWithActionHandler:]
  -[QuickWebsiteSearchCompletionItem auditAcceptedCompletionWithRank:]
  -[QuickWebsiteSearchCompletionItem completionTableViewCellForCompletionList:]
  -[QuickWebsiteSearchCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[QuickWebsiteSearchCompletionItem reflectedStringForUserTypedString:]
  -[QuickWebsiteSearchCompletionItem initWithProvider:query:forQueryID:]


ReadingListCompletionItem : NSObject <CompletionItem>
 @property  WebBookmark *bookmark
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReadingListCompletionItem bookmark]
  -[ReadingListCompletionItem .cxx_destruct]
  -[ReadingListCompletionItem isEquivalentTo:]
  -[ReadingListCompletionItem setBookmark:]
  -[ReadingListCompletionItem parsecQueryID]
  -[ReadingListCompletionItem setParsecQueryID:]
  -[ReadingListCompletionItem parsecDomainIdentifier]
  -[ReadingListCompletionItem sfSearchResultValue]
  -[ReadingListCompletionItem engagementDestination]
  -[ReadingListCompletionItem completionTableViewCellReuseIdentifier]
  -[ReadingListCompletionItem acceptCompletionWithActionHandler:]
  -[ReadingListCompletionItem auditAcceptedCompletionWithRank:]
  -[ReadingListCompletionItem completionTableViewCellForCompletionList:]
  -[ReadingListCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[ReadingListCompletionItem reflectedStringForUserTypedString:]
  -[ReadingListCompletionItem initWithReadingListBookmark:userQuery:]


ReadingListCompletionProvider : CompletionProvider
 @property  BOOL onlyIncludeAvailableOffline

  // instance methods
  -[ReadingListCompletionProvider .cxx_destruct]
  -[ReadingListCompletionProvider setQueryToComplete:]
  -[ReadingListCompletionProvider maximumCachedCompletionCount]
  -[ReadingListCompletionProvider initWithMaximumNumberOfCompletions:onlyIncludeAvailableOffline:]
  -[ReadingListCompletionProvider onlyIncludeAvailableOffline]


ZoomAnimationTestProcessor : ContentInteractionTestRunner
 @property  int iterationsRemaining
 @property  long long testState
 @property  int targetIndex
 @property  double initialZoom

  // instance methods
  -[ZoomAnimationTestProcessor dealloc]
  -[ZoomAnimationTestProcessor resetZoom]
  -[ZoomAnimationTestProcessor setTestState:]
  -[ZoomAnimationTestProcessor testState]
  -[ZoomAnimationTestProcessor initWithTestName:browserController:]
  -[ZoomAnimationTestProcessor startPageAction:]
  -[ZoomAnimationTestProcessor performActionForPage:]
  -[ZoomAnimationTestProcessor setIterationsRemaining:]
  -[ZoomAnimationTestProcessor iterationsRemaining]
  -[ZoomAnimationTestProcessor scrollViewWillBeginZooming:]
  -[ZoomAnimationTestProcessor scrollViewDidEndZooming:]
  -[ZoomAnimationTestProcessor setTargetIndex:]
  -[ZoomAnimationTestProcessor setInitialZoom:]
  -[ZoomAnimationTestProcessor advanceTest]
  -[ZoomAnimationTestProcessor targetIndex]
  -[ZoomAnimationTestProcessor initialZoom]
  -[ZoomAnimationTestProcessor startZoom]


ReaderFormatActivity : TabDocumentActivity
  // instance methods
  -[ReaderFormatActivity activityType]
  -[ReaderFormatActivity activityTitle]
  -[ReaderFormatActivity canPerformWithTabDocument:]
  -[ReaderFormatActivity performActivityWithTabDocument:]
  -[ReaderFormatActivity systemImageNameWithTabDocument:]
  -[ReaderFormatActivity embeddedActivityViewControllerWithTabDocument:]
  -[ReaderFormatActivity _navigationControllerWithTabDocument:]


FindOnPageCompletionTableViewCell : CompletionListTableViewCell
  // instance methods
  -[FindOnPageCompletionTableViewCell layoutSubviews]


FindOnPageCompletionItem : SFSearchResult <CompletionItem>
 @property  unsigned long numberOfMatches
 @property  NSString *completionTableHeaderViewReuseIdentifier
 @property  BOOL usesDefaultHeaderView
 @property  BOOL needsSectionHeader
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  BOOL restoresSearchState
 @property  <CompletionItemActionHandler> *handlerForActionItem
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FindOnPageCompletionItem isEquivalentTo:]
  -[FindOnPageCompletionItem numberOfMatches]
  -[FindOnPageCompletionItem string]
  -[FindOnPageCompletionItem parsecQueryID]
  -[FindOnPageCompletionItem setParsecQueryID:]
  -[FindOnPageCompletionItem parsecDomainIdentifier]
  -[FindOnPageCompletionItem sfSearchResultValue]
  -[FindOnPageCompletionItem engagementDestination]
  -[FindOnPageCompletionItem completionTableViewCellReuseIdentifier]
  -[FindOnPageCompletionItem acceptCompletionWithActionHandler:]
  -[FindOnPageCompletionItem auditAcceptedCompletionWithRank:]
  -[FindOnPageCompletionItem completionTableViewCellForCompletionList:]
  -[FindOnPageCompletionItem configureCompletionTableViewCell:forCompletionList:]
  -[FindOnPageCompletionItem reflectedStringForUserTypedString:]
  -[FindOnPageCompletionItem needsSectionHeader]
  -[FindOnPageCompletionItem initWithString:numberOfMatches:forQueryID:]


FindOnPageCompletionProvider : CompletionProvider
 @property  <FindOnPageCompletionProviderDataSource> *dataSource
 @property  long long parsecQueryID

  // instance methods
  -[FindOnPageCompletionProvider setDataSource:]
  -[FindOnPageCompletionProvider .cxx_destruct]
  -[FindOnPageCompletionProvider dataSource]
  -[FindOnPageCompletionProvider parsecQueryID]
  -[FindOnPageCompletionProvider completionsForQuery:]
  -[FindOnPageCompletionProvider setQueryToComplete:]


UnifiedTabBar : SFUnifiedTabBar <TabCollectionView>
 @property  <TabCollectionViewDelegate> *delegate
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  NSArray *items
 @property  ReorderingAutoscroller *reorderingAutoscroller
 @property  BOOL supportsSystemDrag
 @property  unsigned long layoutAxes
 @property  BOOL supportsDropTransitionToItemView
 @property  BOOL canDragOntoActiveTab
 @property  BOOL hidesInactiveTabs
 @property  BOOL lastDecelerationWasInterrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnifiedTabBar setNavigationIntentHandler:]
  -[UnifiedTabBar items]
  -[UnifiedTabBar .cxx_destruct]
  -[UnifiedTabBar activateItem:]
  -[UnifiedTabBar frameForItem:]
  -[UnifiedTabBar setDelegate:]
  -[UnifiedTabBar itemAtPoint:]
  -[UnifiedTabBar delegate]
  -[UnifiedTabBar navigationIntentHandler]
  -[UnifiedTabBar targetItemForDropAtPoint:]
  -[UnifiedTabBar targetedDragPreviewForLiftingItem:]
  -[UnifiedTabBar viewForItem:]
  -[UnifiedTabBar targetedDragPreviewForDroppingItem:]
  -[UnifiedTabBar didSelectItem:]
  -[UnifiedTabBar newSearchField]
  -[UnifiedTabBar canCloseItem:]
  -[UnifiedTabBar closeItem:]
  -[UnifiedTabBar targetedPreviewForDismissingMenuForItem:]
  -[UnifiedTabBar contextMenuOptionsForItem:]
  -[UnifiedTabBar willBeginShowingContextMenuForItem:]
  -[UnifiedTabBar didEndShowingContextMenuForItem:]
  -[UnifiedTabBar shouldSpringLoadItem:]
  -[UnifiedTabBar performDropWithNavigationIntent:]
  -[UnifiedTabBar layoutAxes]
  -[UnifiedTabBar supportsDropTransitionToItemView]
  -[UnifiedTabBar canDragOntoActiveTab]
  -[UnifiedTabBar hidesInactiveTabs]


UnifiedTabBarItem : SFUnifiedTabBarItem <TabCollectionItem>
 @property  NSString *title
 @property  unsigned long mediaStateIcon
 @property  NSUUID *UUID
 @property  BOOL isPlaceholder
 @property  long long dragState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[UnifiedTabBarItem setIsPlaceholder:]
  -[UnifiedTabBarItem setTitle:]
  -[UnifiedTabBarItem isDropping]
  -[UnifiedTabBarItem .cxx_destruct]
  -[UnifiedTabBarItem setMediaStateIcon:]
  -[UnifiedTabBarItem isDragging]
  -[UnifiedTabBarItem setIcon:]
  -[UnifiedTabBarItem setDragState:]
  -[UnifiedTabBarItem dragState]
  -[UnifiedTabBarItem setUUID:]
  -[UnifiedTabBarItem _updateHidden]
  -[UnifiedTabBarItem secondaryItem]


TabGroupCollectionViewCell : UICollectionViewListCell
 @property  UIButton *moreButton

  // instance methods
  -[TabGroupCollectionViewCell .cxx_destruct]
  -[TabGroupCollectionViewCell moreButton]
  -[TabGroupCollectionViewCell setMoreButton:]


ReaderFormatViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
 @property  <SFReaderContext> *readerContext
 @property  long long provenance
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReaderFormatViewController readerContext]
  -[ReaderFormatViewController collectionView:cellForItemAtIndexPath:]
  -[ReaderFormatViewController collectionView:numberOfItemsInSection:]
  -[ReaderFormatViewController collectionView:canFocusItemAtIndexPath:]
  -[ReaderFormatViewController numberOfSectionsInCollectionView:]
  -[ReaderFormatViewController collectionView:didSelectItemAtIndexPath:]
  -[ReaderFormatViewController .cxx_destruct]
  -[ReaderFormatViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[ReaderFormatViewController viewDidLoad]
  -[ReaderFormatViewController viewDidLayoutSubviews]
  -[ReaderFormatViewController viewWillAppear:]
  -[ReaderFormatViewController provenance]
  -[ReaderFormatViewController loadView]
  -[ReaderFormatViewController initWithReaderContext:provenance:]
  -[ReaderFormatViewController _updateCloseButton]


ReaderFontOptionCell : UICollectionViewListCell <_SFSettingsAlertOptionsGroupItemConfiguration>
 @property  BOOL enabled
 @property  UIView *accessoryView
 @property  NSAttributedString *attributedText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ReaderFontOptionCell setAttributedText:]
  -[ReaderFontOptionCell attributedText]
  -[ReaderFontOptionCell .cxx_destruct]
  -[ReaderFontOptionCell _updateAccessories]
  -[ReaderFontOptionCell setSelected:]
  -[ReaderFontOptionCell isEnabled]
  -[ReaderFontOptionCell updateConfigurationUsingState:]
  -[ReaderFontOptionCell setAccessoryView:]
  -[ReaderFontOptionCell accessoryView]
  -[ReaderFontOptionCell setEnabled:]
  -[ReaderFontOptionCell _listContentConfiguration]


TabSnapshotImageView : UIImageView
 @property  {CGPoint=dd} imagePosition
 @property  {UIEdgeInsets=dddd} cropInsets
 @property  BOOL keepImageAligned
 @property  double imageScaleRatio

  // class methods
  +[TabSnapshotImageView imageSizeOnScreen:]
  +[TabSnapshotImageView imageScaleRatioWithOnScreenImageSize:imageViewSize:cropInsets:]
  +[TabSnapshotImageView contentsRectWithSnapshotSize:imageViewSize:imagePosition:cropInsets:]

  // instance methods
  -[TabSnapshotImageView cropInsets]
  -[TabSnapshotImageView initWithImage:]
  -[TabSnapshotImageView layoutSubviews]
  -[TabSnapshotImageView setCropInsets:]
  -[TabSnapshotImageView initWithFrame:]
  -[TabSnapshotImageView setImage:]
  -[TabSnapshotImageView imagePosition]
  -[TabSnapshotImageView setImagePosition:]
  -[TabSnapshotImageView setKeepImageAligned:]
  -[TabSnapshotImageView _setUpImageView]
  -[TabSnapshotImageView updateImageAlignment]
  -[TabSnapshotImageView imageScaleRatio]
  -[TabSnapshotImageView keepImageAligned]


IndexMove : NSObject
 @property  long long indexBeforeMove
 @property  long long indexAfterMove
 @property  BOOL modified

  // instance methods
  -[IndexMove isEqual:]
  -[IndexMove isModified]
  -[IndexMove isEqualToMove:]
  -[IndexMove initWithIndexBeforeMove:indexAfterMove:modified:]
  -[IndexMove indexBeforeMove]
  -[IndexMove indexAfterMove]


SetChange : NSObject
 @property  NSIndexSet *insertedIndexes
 @property  NSIndexSet *deletedIndexes
 @property  NSIndexSet *modifiedIndexes
 @property  NSSet *moves
 @property  BOOL empty
 @property  BOOL singleDelete
 @property  BOOL insertAll
 @property  BOOL deleteAll

  // class methods
  +[SetChange emptyChange]

  // instance methods
  -[SetChange isEmpty]
  -[SetChange .cxx_destruct]
  -[SetChange moves]
  -[SetChange isEqual:]
  -[SetChange isDeleteAll]
  -[SetChange deletedIndexes]
  -[SetChange insertedIndexes]
  -[SetChange isEqualToChange:]
  -[SetChange initWithInsertedIndexes:deletedIndexes:modifiedIndexes:moves:]
  -[SetChange initAsInsertAllWithIndexes:]
  -[SetChange initAsDeleteAllWithIndexes:]
  -[SetChange modifiedIndexes]
  -[SetChange isSingleDelete]
  -[SetChange isInsertAll]


DelayedSpinner : NSObject
  // class methods
  +[DelayedSpinner hide]
  +[DelayedSpinner showWithDelay]
  +[DelayedSpinner _setShowStatusBarSpinnerTimer:]
  +[DelayedSpinner _showStatusBarSpinner:]
  +[DelayedSpinner _setShowStatusBarSpinner:withDelay:]


TabOverview : UIView <CloudTabTableDelegate, ReorderingAutoscrollerDelegate, _UIBasicAnimationFactory, _UIScrollToTopView, UIGestureRecognizerDelegate, UIPointerInteractionDelegate, UISearchBarDelegate, UISearchBarDelegate_Private, UIKeyInput, SFCapsuleCollectionViewToolbarContentProviding, TabThumbnailCollectionView>
 @property  <TabOverviewThemeProviding> *themeProvider
 @property  NSArray *items
 @property  NSArray *alternateItems
 @property  long long alternateItemPosition
 @property  NSArray *itemsMatchingSearchTerm
 @property  NSArray *itemsFullyInView
 @property  BOOL synchronizeClosingItems
 @property  BOOL animatingToolbarDismissal
 @property  double scalePercentageForActiveItem
 @property  BOOL allowsInteractivePresentation
 @property  BOOL presentingInteractively
 @property  BOOL targetItemLiftsFromGrid
 @property  TabOverviewItem *itemToActivate
 @property  BOOL defersActivation
 @property  <TabOverviewDelegate> *delegate
 @property  long long barPlacement
 @property  long long presentedTabLayout
 @property  UIButton *addTabButton
 @property  UIButton *privateBrowsingButton
 @property  UIButton *doneButton
 @property  UIButton *sidebarButton
 @property  BOOL inSteadyState
 @property  @? stateUpdateHandler
 @property  @? pptStateUpdateHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasText
 @property  long long autocapitalizationType
 @property  long long autocorrectionType
 @property  long long spellCheckingType
 @property  long long smartQuotesType
 @property  long long smartDashesType
 @property  long long smartInsertDeleteType
 @property  long long keyboardType
 @property  long long keyboardAppearance
 @property  long long returnKeyType
 @property  BOOL enablesReturnKeyAutomatically
 @property  BOOL secureTextEntry
 @property  NSString *textContentType
 @property  UITextInputPasswordRules *passwordRules
 @property  long long presentationState
 @property  NSString *searchTerm
 @property  BOOL searching
 @property  ReorderingAutoscroller *reorderingAutoscroller
 @property  BOOL supportsSystemDrag
 @property  unsigned long layoutAxes
 @property  BOOL supportsDropTransitionToItemView
 @property  BOOL canDragOntoActiveTab
 @property  BOOL hidesInactiveTabs
 @property  BOOL lastDecelerationWasInterrupted
 @property  double desiredSnapshotScale
 @property  unsigned long snapshotBorderOptions

  // instance methods
  -[TabOverview _tap:]
  -[TabOverview _pan:]
  -[TabOverview hitTest:withEvent:]
  -[TabOverview pointerInteraction:styleForRegion:]
  -[TabOverview searchBarCancelButtonClicked:]
  -[TabOverview undoManager]
  -[TabOverview isScrollEnabled]
  -[TabOverview traitCollectionDidChange:]
  -[TabOverview presentAnimated:]
  -[TabOverview itemToActivate]
  -[TabOverview willMoveToWindow:]
  -[TabOverview gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[TabOverview items]
  -[TabOverview _displayLinkFired:]
  -[TabOverview searchBarTextDidBeginEditing:]
  -[TabOverview setDefersActivation:]
  -[TabOverview .cxx_destruct]
  -[TabOverview isInSteadyState]
  -[TabOverview spellCheckingType]
  -[TabOverview layoutSubviews]
  -[TabOverview _timingFunctionForAnimation]
  -[TabOverview activateItem:]
  -[TabOverview touchesBegan:withEvent:]
  -[TabOverview canBecomeFirstResponder]
  -[TabOverview doneButton]
  -[TabOverview alternateItems]
  -[TabOverview frameForItem:]
  -[TabOverview setDelegate:]
  -[TabOverview cloudTabTable:didStartEditingTabItemView:]
  -[TabOverview cloudTabTable:closeCloudTab:onDevice:]
  -[TabOverview cloudTabTable:shouldDisplayTab:]
  -[TabOverview setSearchTerm:]
  -[TabOverview searchTerm]
  -[TabOverview itemAtPoint:]
  -[TabOverview _updateDisplayLink]
  -[TabOverview presentationState]
  -[TabOverview autocorrectionType]
  -[TabOverview _didReceiveMemoryWarning:]
  -[TabOverview isItemAnimating:]
  -[TabOverview itemsMatchingSearchTerm]
  -[TabOverview isSearching]
  -[TabOverview autocapitalizationType]
  -[TabOverview setItems:]
  -[TabOverview _contentSize]
  -[TabOverview _searchBar:proposedSearchFieldFrame:]
  -[TabOverview beginSearching]
  -[TabOverview endSearching]
  -[TabOverview desiredSnapshotScale]
  -[TabOverview reorderingAutoscroller:handleScroll:]
  -[TabOverview itemsFullyInView]
  -[TabOverview searchBarSearchButtonClicked:]
  -[TabOverview setCloudTabDevices:]
  -[TabOverview searchBarTextDidEndEditing:]
  -[TabOverview setItemToActivate:]
  -[TabOverview smartInsertDeleteType]
  -[TabOverview supportsSystemDrag]
  -[TabOverview initWithFrame:]
  -[TabOverview sidebarButton]
  -[TabOverview deleteBackward]
  -[TabOverview cloudTabTable:didSelectCloudTab:]
  -[TabOverview delegate]
  -[TabOverview cloudTabTable:didFinishEditingTabItemView:]
  -[TabOverview didMoveToWindow]
  -[TabOverview defersActivation]
  -[TabOverview snapshotSizeForSuggestedSize:]
  -[TabOverview smartDashesType]
  -[TabOverview _activateItemToActivate:]
  -[TabOverview dealloc]
  -[TabOverview targetItemForDropAtPoint:]
  -[TabOverview estimatedSnapshotsPerPageForBounds:withTraitCollection:]
  -[TabOverview insertText:]
  -[TabOverview targetedDragPreviewForLiftingItem:]
  -[TabOverview hasText]
  -[TabOverview setSidebarButton:]
  -[TabOverview pointerInteraction:regionForRequest:defaultRegion:]
  -[TabOverview enumerateItemsOrderedByVisibility:]
  -[TabOverview setShowsPrivateBrowsingExplanationView:animated:]
  -[TabOverview pressesBegan:withEvent:]
  -[TabOverview inputView]
  -[TabOverview searchBar:textDidChange:]
  -[TabOverview dismissAnimated:]
  -[TabOverview smartQuotesType]
  -[TabOverview _basicAnimationForView:withKeyPath:]
  -[TabOverview snapshotBorderOptions]
  -[TabOverview _scrollToTopFromTouchAtScreenLocation:resultHandler:]
  -[TabOverview viewForItem:]
  -[TabOverview didUpdateFocusInContext:withAnimationCoordinator:]
  -[TabOverview targetedDragPreviewForDroppingItem:]
  -[TabOverview _cancelSearch]
  -[TabOverview toolbarContentViewForCapsuleCollectionView:]
  -[TabOverview capsuleCollectionView:heightForToolbarContentView:]
  -[TabOverview capsuleCollectionView:relinquishToolbarContentView:]
  -[TabOverview _close:]
  -[TabOverview addTabButton]
  -[TabOverview test_scrollToTopWithoutAnimation]
  -[TabOverview pptStateUpdateHandler]
  -[TabOverview setPptStateUpdateHandler:]
  -[TabOverview addPresentationObserver:]
  -[TabOverview removePresentationObserver:]
  -[TabOverview setInteractiveInsertionProgress:forItem:]
  -[TabOverview attachView:withReferenceRect:toItem:]
  -[TabOverview setPresentedTabLayout:]
  -[TabOverview presentingInteractively]
  -[TabOverview scalePercentageForActiveItem]
  -[TabOverview endInteractivePresentationAllowingDismissalToTargetItem:]
  -[TabOverview beginInteractivePresentationWithOffset:scale:]
  -[TabOverview targetScaleWithTabLayout:]
  -[TabOverview updateInteractivePresentationWithOffset:scale:animated:]
  -[TabOverview endAnimation]
  -[TabOverview setBarPlacement:]
  -[TabOverview setTargetItemLiftsFromGrid:]
  -[TabOverview privateBrowsingButton]
  -[TabOverview allowsInteractivePresentation]
  -[TabOverview updateInteractivePresentationWithOffset:scale:]
  -[TabOverview endInteractivePresentation]
  -[TabOverview cancelInteractivePresentation]
  -[TabOverview presentedTabLayout]
  -[TabOverview setThemeProvider:]
  -[TabOverview animatingToolbarDismissal]
  -[TabOverview targetedPreviewForDismissingMenuForItem:]
  -[TabOverview willAnimateDropForItem:withAnimator:]
  -[TabOverview willBeginShowingContextMenuForItem:]
  -[TabOverview didEndShowingContextMenuForItem:]
  -[TabOverview reorderingAutoscroller]
  -[TabOverview supportsDropTransitionToItemView]
  -[TabOverview lastDecelerationWasInterrupted]
  -[TabOverview dismissWithAddTabAnimation]
  -[TabOverview setItems:alternateItems:atPosition:]
  -[TabOverview updateSnapshotForItem:]
  -[TabOverview setPrivateBrowsingButtonTitle:]
  -[TabOverview resetPresentationScrollPosition]
  -[TabOverview _tabClose:]
  -[TabOverview _updateScrollBoundsForKeyboardNotification:]
  -[TabOverview _dismissWithItemAtCurrentDecelerationFactor:]
  -[TabOverview stateUpdateHandler]
  -[TabOverview _isClosingLastItem]
  -[TabOverview targetItemLiftsFromGrid]
  -[TabOverview copyLocationFromItem:toItem:]
  -[TabOverview test_simulateScrollByOffset:inTime:]
  -[TabOverview itemHasAttachedView:]
  -[TabOverview themeProvider]
  -[TabOverview alternateItemPosition]
  -[TabOverview synchronizeClosingItems]
  -[TabOverview setSynchronizeClosingItems:]
  -[TabOverview barPlacement]
  -[TabOverview setStateUpdateHandler:]


WebViewSnapshotContentProvider : NSObject <TabSnapshotContentProvider>
 @property  WKWebView *webView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentFrame
 @property  UIImage *snapshotContentImage
 @property  UIView *snapshotContentView
 @property  UIColor *snapshotBackgroundColor
 @property  BOOL snapshotContentShouldUnderlapTopBackdrop
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebViewSnapshotContentProvider webView]
  -[WebViewSnapshotContentProvider contentFrame]
  -[WebViewSnapshotContentProvider .cxx_destruct]
  -[WebViewSnapshotContentProvider snapshotBackgroundColor]
  -[WebViewSnapshotContentProvider snapshotContentRectInBounds:]
  -[WebViewSnapshotContentProvider snapshotContentView]
  -[WebViewSnapshotContentProvider prepareForSnapshotOfSize:completion:]
  -[WebViewSnapshotContentProvider snapshotContentImage]
  -[WebViewSnapshotContentProvider snapshotContentShouldUnderlapTopBackdrop]
  -[WebViewSnapshotContentProvider initWithWebView:contentFrame:]


SharedWithYouLibraryItemController : LibraryItemController
  // instance methods
  -[SharedWithYouLibraryItemController viewController]
  -[SharedWithYouLibraryItemController .cxx_destruct]
  -[SharedWithYouLibraryItemController isHidden]
  -[SharedWithYouLibraryItemController isSelected]
  -[SharedWithYouLibraryItemController updateListContentConfiguration:]
  -[SharedWithYouLibraryItemController didSelectItem]


TabThumbnailView : UIView
 @property  UIView *headerBackgroundView
 @property  UIColor *headerBackgroundColor
 @property  UIImage *closeButtonImage
 @property  UIColor *titleColor
 @property  UIView *snapshotClipperView
 @property  UIView *blankSnapshotView
 @property  BOOL headerHasFinishedAnimating
 @property  {UIEdgeInsets=dddd} headerViewInsets
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} headerBackgroundViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} headerViewFrame
 @property  UIFont *titleFont
 @property  BOOL titleIsHorizontallyCentered
 @property  UIButton *closeButton
 @property  double closeButtonLeftInset
 @property  double extraTitleScale
 @property  BOOL showsCloseButton
 @property  UIImage *icon
 @property  NSString *title
 @property  BOOL hidesTabTitle
 @property  double titleAlpha
 @property  double headerBackgroundViewAlpha
 @property  BOOL recording
 @property  unsigned long mediaStateIcon
 @property  double titleHeight
 @property  double titleOffset
 @property  double titleScale
 @property  double headerCornerRadius
 @property  BOOL usesDarkTheme
 @property  long long tintStyle
 @property  long long preferredHeaderMode
 @property  long long effectiveHeaderMode
 @property  double verticalTextAlignmentAdjustment
 @property  BOOL accessibilityContentSize
 @property  @? layoutAnimator

  // class methods
  +[TabThumbnailView setShowsIconsInTabs:]
  +[TabThumbnailView titleHeightForAccessibilityContentSize:]
  +[TabThumbnailView titleFontForTraitCollection:]

  // instance methods
  -[TabThumbnailView isRecording]
  -[TabThumbnailView setTitleFont:]
  -[TabThumbnailView headerBackgroundColor]
  -[TabThumbnailView icon]
  -[TabThumbnailView traitCollectionDidChange:]
  -[TabThumbnailView setTitle:]
  -[TabThumbnailView setTitleAlpha:]
  -[TabThumbnailView setTintStyle:]
  -[TabThumbnailView titleAlpha]
  -[TabThumbnailView .cxx_destruct]
  -[TabThumbnailView headerCornerRadius]
  -[TabThumbnailView tintStyle]
  -[TabThumbnailView setMediaStateIcon:]
  -[TabThumbnailView layoutSubviews]
  -[TabThumbnailView titleHeight]
  -[TabThumbnailView usesDarkTheme]
  -[TabThumbnailView setRecording:]
  -[TabThumbnailView titleFont]
  -[TabThumbnailView mediaStateIcon]
  -[TabThumbnailView _shouldAnimatePropertyWithKey:]
  -[TabThumbnailView titleOffset]
  -[TabThumbnailView setIcon:]
  -[TabThumbnailView title]
  -[TabThumbnailView initWithFrame:]
  -[TabThumbnailView isAccessibilityContentSize]
  -[TabThumbnailView headerBackgroundView]
  -[TabThumbnailView setTitleOffset:]
  -[TabThumbnailView titleColor]
  -[TabThumbnailView closeButton]
  -[TabThumbnailView setTitleScale:]
  -[TabThumbnailView titleScale]
  -[TabThumbnailView updateHeaderView]
  -[TabThumbnailView setShowsCloseButton:]
  -[TabThumbnailView showsCloseButton]
  -[TabThumbnailView layoutAnimator]
  -[TabThumbnailView setLayoutAnimator:]
  -[TabThumbnailView setTitleHeight:]
  -[TabThumbnailView setVerticalTextAlignmentAdjustment:]
  -[TabThumbnailView setCloseButtonLeftInset:]
  -[TabThumbnailView snapshotClipperView]
  -[TabThumbnailView blankSnapshotView]
  -[TabThumbnailView setPreferredHeaderMode:]
  -[TabThumbnailView headerViewFrame]
  -[TabThumbnailView headerHasFinishedAnimating]
  -[TabThumbnailView titleIsHorizontallyCentered]
  -[TabThumbnailView headerBackgroundViewFrame]
  -[TabThumbnailView hidesTabTitle]
  -[TabThumbnailView setHidesTabTitle:]
  -[TabThumbnailView effectiveHeaderMode]
  -[TabThumbnailView setHeaderCornerRadius:]
  -[TabThumbnailView extraTitleScale]
  -[TabThumbnailView setExtraTitleScale:]
  -[TabThumbnailView closeButtonImage]
  -[TabThumbnailView headerViewInsets]
  -[TabThumbnailView _setHeaderColorScheme]
  -[TabThumbnailView setHeaderBackgroundViewAlpha:]
  -[TabThumbnailView headerBackgroundViewAlpha]
  -[TabThumbnailView closeButtonLeftInset]
  -[TabThumbnailView preferredHeaderMode]
  -[TabThumbnailView verticalTextAlignmentAdjustment]
  -[TabThumbnailView setHeaderHasFinishedAnimating:]


TabCollectionViewSpringLoadingBehavior : NSObject <UISpringLoadedInteractionBehavior, UISpringLoadedInteractionEffect>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TabCollectionViewSpringLoadingBehavior addSpringLoadedInteractionToTabView:]

  // instance methods
  -[TabCollectionViewSpringLoadingBehavior .cxx_destruct]
  -[TabCollectionViewSpringLoadingBehavior interaction:didChangeWithContext:]
  -[TabCollectionViewSpringLoadingBehavior init]
  -[TabCollectionViewSpringLoadingBehavior interactionDidFinish:]
  -[TabCollectionViewSpringLoadingBehavior shouldAllowInteraction:withContext:]


ReplayPagesTestRunner : PurplePageLoadTestRunner
 @property  BOOL eternal

  // instance methods
  -[ReplayPagesTestRunner dealloc]
  -[ReplayPagesTestRunner finishedTestPage:]
  -[ReplayPagesTestRunner loadTestSuiteFile:]
  -[ReplayPagesTestRunner startNextPage]
  -[ReplayPagesTestRunner eternal]
  -[ReplayPagesTestRunner setEternal:]


StepperViewController : UIViewController <_SFSettingsAlertStepperConfiguration, UIViewControllerTransitioningDelegate>
 @property  <_SFSettingsAlertStepperController> *stepperController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[StepperViewController .cxx_destruct]
  -[StepperViewController viewDidLoad]
  -[StepperViewController presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[StepperViewController loadView]
  -[StepperViewController setImage:forButton:]
  -[StepperViewController setText:forButton:]
  -[StepperViewController setEnabled:forButton:]
  -[StepperViewController initWithStepperController:]
  -[StepperViewController _buttonForStepperButton:]
  -[StepperViewController stepperController]
  -[StepperViewController setStepperController:]


InteractablePresentationController : UIPresentationController
  // instance methods
  -[InteractablePresentationController initWithPresentedViewController:presentingViewController:]
  -[InteractablePresentationController _shouldDisableInteractionDuringTransitions]


CompletionListTableViewCell : VibrantTableViewCell
  // instance methods
  -[CompletionListTableViewCell layoutSubviews]


BookmarkFolderLibraryItemController : LibraryItemController <BookmarksTableViewControllerDelegate, _SFNavigationIntentHandling, _SFBookmarkInfoViewControllerDelegate>
 @property  WebBookmark *folder
 @property  WebBookmarkCollection *collection
 @property  <WBBookmarkProvider> *bookmarkProvider
 @property  NSObject<OS_dispatch_queue> *bookmarkProviderQueue
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  <LinkPreviewProvider> *linkPreviewProvider
 @property  <TabGroupProvider> *tabGroupProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BookmarkFolderLibraryItemController tabGroupProvider]
  -[BookmarkFolderLibraryItemController viewController]
  -[BookmarkFolderLibraryItemController setNavigationIntentHandler:]
  -[BookmarkFolderLibraryItemController setCollection:]
  -[BookmarkFolderLibraryItemController collection]
  -[BookmarkFolderLibraryItemController .cxx_destruct]
  -[BookmarkFolderLibraryItemController setTabGroupProvider:]
  -[BookmarkFolderLibraryItemController _folderContentsDidChange:]
  -[BookmarkFolderLibraryItemController dispatchNavigationIntent:]
  -[BookmarkFolderLibraryItemController isEqual:]
  -[BookmarkFolderLibraryItemController topViewController]
  -[BookmarkFolderLibraryItemController handleNavigationIntent:completion:]
  -[BookmarkFolderLibraryItemController isSpringLoaded]
  -[BookmarkFolderLibraryItemController setLinkPreviewProvider:]
  -[BookmarkFolderLibraryItemController folder]
  -[BookmarkFolderLibraryItemController navigationIntentHandler]
  -[BookmarkFolderLibraryItemController dealloc]
  -[BookmarkFolderLibraryItemController linkPreviewProvider]
  -[BookmarkFolderLibraryItemController selectionFollowsFocus]
  -[BookmarkFolderLibraryItemController bookmarkInfoViewControllerShouldUseTranslucentAppearance:]
  -[BookmarkFolderLibraryItemController updateToolbarIfNeeded]
  -[BookmarkFolderLibraryItemController _updateToolbarItemsForViewController:animated:]
  -[BookmarkFolderLibraryItemController _setEditingFromToolbarButton:]
  -[BookmarkFolderLibraryItemController _didPressNewFolderButton]
  -[BookmarkFolderLibraryItemController _didPressEditingDoneButton]
  -[BookmarkFolderLibraryItemController _didPressEditButton]
  -[BookmarkFolderLibraryItemController _createToolbarItemsIfNecessary]
  -[BookmarkFolderLibraryItemController _toolbarItemsForViewController:]
  -[BookmarkFolderLibraryItemController contentInsetForBookmarksTableViewController:]
  -[BookmarkFolderLibraryItemController separatorInsetForBookmarksTableViewController:]
  -[BookmarkFolderLibraryItemController bookmarksTableViewControllerDidBeginEditing:]
  -[BookmarkFolderLibraryItemController bookmarksTableViewControllerDidEndEditing:]
  -[BookmarkFolderLibraryItemController bookmarksTableViewControllerWillDisappear:]
  -[BookmarkFolderLibraryItemController toggleEditBookmarks]
  -[BookmarkFolderLibraryItemController reloadBookmarksForFolder:]
  -[BookmarkFolderLibraryItemController initWithConfiguration:sectionController:folder:]
  -[BookmarkFolderLibraryItemController setBookmarkProvider:]
  -[BookmarkFolderLibraryItemController setBookmarkProviderQueue:]
  -[BookmarkFolderLibraryItemController updateListContentConfiguration:]
  -[BookmarkFolderLibraryItemController dropOperationForSession:]
  -[BookmarkFolderLibraryItemController dropIntentForSession:]
  -[BookmarkFolderLibraryItemController performDropWithProposal:session:]
  -[BookmarkFolderLibraryItemController bookmarkProvider]
  -[BookmarkFolderLibraryItemController bookmarkProviderQueue]


DownloadTableViewCell : UITableViewCell <SFDeferrableUpdateView, _SFDownloadIconCacheObserver>
 @property  _SFDownload *download
 @property  _SFDownloadIconCache *iconCache
 @property  <DownloadTableViewCellDelegate> *delegate
 @property  UIImageView *iconView

  // class methods
  +[DownloadTableViewCell tableViewCellForSizeEstimation]

  // instance methods
  -[DownloadTableViewCell iconCache]
  -[DownloadTableViewCell traitCollectionDidChange:]
  -[DownloadTableViewCell .cxx_destruct]
  -[DownloadTableViewCell setDelegate:]
  -[DownloadTableViewCell _buttonPressed:]
  -[DownloadTableViewCell setIconCache:]
  -[DownloadTableViewCell download]
  -[DownloadTableViewCell delegate]
  -[DownloadTableViewCell initWithStyle:reuseIdentifier:]
  -[DownloadTableViewCell didMoveToWindow]
  -[DownloadTableViewCell deferrableUpdateViewState]
  -[DownloadTableViewCell dealloc]
  -[DownloadTableViewCell iconView]
  -[DownloadTableViewCell setIconView:]
  -[DownloadTableViewCell updateContents]
  -[DownloadTableViewCell downloadIconCache:didGenerateNewIcon:forSource:]
  -[DownloadTableViewCell setDownload:]
  -[DownloadTableViewCell _busyStatus]
  -[DownloadTableViewCell _updateCellContentsForSizing]
  -[DownloadTableViewCell _downloadChanged:]
  -[DownloadTableViewCell _downloadURLChanged:]
  -[DownloadTableViewCell _updateCellContents]


ContinuousReadingPreviewView : UIView
 @property  UIView *headerView
 @property  ContinuousReadingBannerView *bannerView
 @property  UIView *contentBackgroundView
 @property  UILabel *headerLabel
 @property  ContinuousReadingItem *continuousReadingItem
 @property  WKWebView *contentView
 @property  double rubberBandingHeight
 @property  double headerHeight
 @property  BOOL prefetchingDisabled
 @property  BOOL previewingNextDocument
 @property  BOOL canShowContentView
 @property  UIImage *documentSnapshot
 @property  {CGSize=dd} contentViewSize

  // instance methods
  -[ContinuousReadingPreviewView headerHeight]
  -[ContinuousReadingPreviewView setBannerTheme:animated:]
  -[ContinuousReadingPreviewView .cxx_destruct]
  -[ContinuousReadingPreviewView layoutSubviews]
  -[ContinuousReadingPreviewView contentView]
  -[ContinuousReadingPreviewView setHeaderView:]
  -[ContinuousReadingPreviewView setHeaderLabel:]
  -[ContinuousReadingPreviewView headerView]
  -[ContinuousReadingPreviewView initWithFrame:]
  -[ContinuousReadingPreviewView bannerView]
  -[ContinuousReadingPreviewView setContentView:]
  -[ContinuousReadingPreviewView setBannerView:]
  -[ContinuousReadingPreviewView headerLabel]
  -[ContinuousReadingPreviewView contentViewSize]
  -[ContinuousReadingPreviewView setContentViewSize:]
  -[ContinuousReadingPreviewView contentBackgroundView]
  -[ContinuousReadingPreviewView setContentBackgroundView:]
  -[ContinuousReadingPreviewView replaceContentViewWithItsSnapshot]
  -[ContinuousReadingPreviewView setPrefetchingDisabled:]
  -[ContinuousReadingPreviewView rubberBandingHeight]
  -[ContinuousReadingPreviewView isPrefetchingDisabled]
  -[ContinuousReadingPreviewView continuousReadingItem]
  -[ContinuousReadingPreviewView initWithContinuousReadingItem:previewingNextDocument:]
  -[ContinuousReadingPreviewView canShowContentView]
  -[ContinuousReadingPreviewView setDocumentSnapshot:]
  -[ContinuousReadingPreviewView _layOutHeader]
  -[ContinuousReadingPreviewView _layOutContentView]
  -[ContinuousReadingPreviewView isPreviewingNextDocument]
  -[ContinuousReadingPreviewView documentSnapshot]


ContinuousReadingItem : NSObject
 @property  WebBookmark *readingListBookmark
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *previewText
 @property  NSURL *URL

  // class methods
  +[ContinuousReadingItem keyPathsForValuesAffectingValueForKey:]
  +[ContinuousReadingItem itemWithReadingListItem:]

  // instance methods
  -[ContinuousReadingItem .cxx_destruct]
  -[ContinuousReadingItem readingListBookmark]
  -[ContinuousReadingItem previewText]
  -[ContinuousReadingItem isEqual:]
  -[ContinuousReadingItem subtitle]
  -[ContinuousReadingItem title]
  -[ContinuousReadingItem URL]
  -[ContinuousReadingItem dealloc]
  -[ContinuousReadingItem _initWithReadingListItem:]
  -[ContinuousReadingItem _siteNameForReadingListItem]
  -[ContinuousReadingItem _readingListItemDidUpdate:]
  -[ContinuousReadingItem _setReadingListBookmark:]


CompletionListDismissalAnalyticsReporter : NSObject
 @property  BOOL acceptedCompletionListItem
 @property  long long unifiedFieldContentType

  // instance methods
  -[CompletionListDismissalAnalyticsReporter reportAnalytics]
  -[CompletionListDismissalAnalyticsReporter setUnifiedFieldContentType:]
  -[CompletionListDismissalAnalyticsReporter acceptedCompletionListItem]
  -[CompletionListDismissalAnalyticsReporter setAcceptedCompletionListItem:]
  -[CompletionListDismissalAnalyticsReporter unifiedFieldContentType]


CatalogViewController : AbstractCatalogViewController <SFStartPageDelegate, CompletionItemActionHandler, CompletionListDelegate, UITableViewDataSource, UITableViewDelegate, UnifiedFieldDelegate, SKStoreProductViewControllerDelegatePrivate, UIPopoverPresentationControllerDelegate, UniversalSearchFeedbackDelegate, UniversalSearchFirstTimeExperienceViewControllerDelegate, TabSnapshotContentProvider>
 @property  <CompletionItem> *lastTopHitMatch
 @property  UniversalSearchSession *parsecSearchSession
 @property  UnifiedField *textField
 @property  CompletionList *completionList
 @property  BOOL contentBorrowed
 @property  <CatalogViewControllerDelegate> *delegate
 @property  <LoadProgressObserver> *loadProgressObserver
 @property  UIView *favoritesView
 @property  BOOL isShowingUniversalSearchFirstTimeExperience
 @property  <_SFNavigationBarCommon> *navigationBar
 @property  {UIEdgeInsets=dddd} obscuredInsets
 @property  BOOL popoverIsShowing
 @property  NSString *queryString
 @property  BOOL usesPopoverStyleForFavorites
 @property  UIPopoverPresentationController *popoverPresentationController
 @property  StartPageController *startPageController
 @property  <SFStartPageScrollObserver> *startPageScrollObserver
 @property  NSString *libraryType
 @property  double chromelessScrollDistance
 @property  UIButton *sidebarButton
 @property  double navigationBarHeight
 @property  BOOL completionDetailIsPresented
 @property  BOOL showingCompletions
 @property  BOOL showingCompletionDetail
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIImage *snapshotContentImage
 @property  UIView *snapshotContentView
 @property  UIColor *snapshotBackgroundColor
 @property  BOOL snapshotContentShouldUnderlapTopBackdrop

  // instance methods
  -[CatalogViewController didGainOwnershipOfStartPageViewController]
  -[CatalogViewController _contentSizeCategoryDidChange:]
  -[CatalogViewController textField]
  -[CatalogViewController browserController]
  -[CatalogViewController viewSafeAreaInsetsDidChange]
  -[CatalogViewController toggleVoiceSearch]
  -[CatalogViewController loadProgressObserver]
  -[CatalogViewController reloadNavigationItemAnimated:]
  -[CatalogViewController startPageViewController]
  -[CatalogViewController _updateAlternateContentViewController]
  -[CatalogViewController requiredContentWidth]
  -[CatalogViewController setQueryString:]
  -[CatalogViewController queryString]
  -[CatalogViewController completionsViewControllerIfLoaded]
  -[CatalogViewController productViewController:didFinishWithResult:]
  -[CatalogViewController _ensureCompletionListAndParsecSession]
  -[CatalogViewController setNavigationBarPaletteHeight:alignmentInsets:]
  -[CatalogViewController completionsViewController]
  -[CatalogViewController universalSearchFirstTimeExperienceViewController]
  -[CatalogViewController isContentBorrowed]
  -[CatalogViewController _generateVisibleResultsFeedbackForEvent:]
  -[CatalogViewController didGainOwnershipOfCompletionsViewController]
  -[CatalogViewController didGainOwnershipOfUniversalSearchFirstTimeExperienceViewController]
  -[CatalogViewController setTextField:]
  -[CatalogViewController popoverPresentationController]
  -[CatalogViewController textFieldShouldBeginEditing:]
  -[CatalogViewController _shouldUsePopoverForCompletions]
  -[CatalogViewController updateStartPageHidesEmptyRootViewNavigationBar]
  -[CatalogViewController completionDetailIsPresented]
  -[CatalogViewController startPageCustomizationPolicy]
  -[CatalogViewController viewWillLayoutSubviews]
  -[CatalogViewController goToURLString:]
  -[CatalogViewController popoverPresentationController:willRepositionPopoverToRect:inView:]
  -[CatalogViewController tableView:viewForHeaderInSection:]
  -[CatalogViewController _dismissUniversalSearchFirstTimeExperience:dismissalReason:]
  -[CatalogViewController startPageViewControllerDidScroll:animated:]
  -[CatalogViewController traitCollectionDidChange:]
  -[CatalogViewController unifiedField:didEndEditingWithAddress:]
  -[CatalogViewController openURLInExternalApplication:]
  -[CatalogViewController firstTimeExperienceContinueButtonPressed]
  -[CatalogViewController setShowingCompletions:completionHandler:]
  -[CatalogViewController _keyboardWillHide:]
  -[CatalogViewController childViewControllerForStatusBarStyle]
  -[CatalogViewController _keyboardWillShow:]
  -[CatalogViewController textFieldDidBeginEditing:]
  -[CatalogViewController setParsecSearchSession:]
  -[CatalogViewController startPageControllerDidCompleteDismissGesture:]
  -[CatalogViewController tableView:heightForHeaderInSection:]
  -[CatalogViewController numberOfSectionsInTableView:]
  -[CatalogViewController didCancelUniversalSearchFirstTimeExperienceViewController:]
  -[CatalogViewController setUsesPopoverStyleForFavorites:]
  -[CatalogViewController _textFieldEditingChanged]
  -[CatalogViewController tableView:numberOfRowsInSection:]
  -[CatalogViewController _presentStagedCompletionDetailViewControllerAnimated:]
  -[CatalogViewController tableView:titleForHeaderInSection:]
  -[CatalogViewController _presentPopoverWithViewController:]
  -[CatalogViewController .cxx_destruct]
  -[CatalogViewController setLibraryType:]
  -[CatalogViewController unifiedField:willUpdateUserTypedText:toText:]
  -[CatalogViewController cancelUnifiedFieldSearch]
  -[CatalogViewController clearNavigationBarPalette]
  -[CatalogViewController tableView:didSelectRowAtIndexPath:]
  -[CatalogViewController unifiedField:focusNextKeyView:]
  -[CatalogViewController viewDidLoad]
  -[CatalogViewController _relevanceForResult:]
  -[CatalogViewController _dismissPopoverAnimated:dismissalReason:completionHandler:]
  -[CatalogViewController startPageViewController:trailingBarItemsForSection:]
  -[CatalogViewController navigationBar]
  -[CatalogViewController tableView:cellForRowAtIndexPath:]
  -[CatalogViewController _invalidatePendingVoiceSearchTimer]
  -[CatalogViewController _shouldPresentCompletionDetailViewControllerAfterSizeTransition:]
  -[CatalogViewController startPageViewController:leadingBarItemsForSection:]
  -[CatalogViewController goToURL:]
  -[CatalogViewController search:]
  -[CatalogViewController dismissCompletionDetailWindowAndResumeEditingIfNeeded:completionHandler:]
  -[CatalogViewController dismissCompletionsForSizeClassTransition]
  -[CatalogViewController tableViewDidFinishReload:]
  -[CatalogViewController setDelegate:]
  -[CatalogViewController _presentPopoverWithViewController:completionHandler:]
  -[CatalogViewController viewDidAppear:]
  -[CatalogViewController _selectedCompletionItemAtIndexPath:]
  -[CatalogViewController unifiedField:moveCompletionSelectionBySectionOffset:]
  -[CatalogViewController _showCompletionsInPopover]
  -[CatalogViewController completionList:topHitDidBecomeReadyForString:]
  -[CatalogViewController checkAndResetIfNextSnapshotRequiresScreenUpdates]
  -[CatalogViewController switchToTabWithUUID:inWindowWithUUID:]
  -[CatalogViewController _updateVisibilityForCompletionListTableView:]
  -[CatalogViewController beginTransitionToNewSizeClassWithState:]
  -[CatalogViewController _updateStartPageSafeAreaInsets]
  -[CatalogViewController unifiedTextField]
  -[CatalogViewController setShowingCompletions:]
  -[CatalogViewController updateStartPageCustomizationPolicy]
  -[CatalogViewController textFieldDidEndEditing:]
  -[CatalogViewController completionList]
  -[CatalogViewController _deselectCompletionsViewControllerSelectedRow]
  -[CatalogViewController unifiedField:topHitForText:]
  -[CatalogViewController unifiedField:shouldWaitForTopHitForText:]
  -[CatalogViewController _logQueryEngagement]
  -[CatalogViewController endTransitionToNewSizeClassWithState:]
  -[CatalogViewController completionListDidUpdate:forQuery:]
  -[CatalogViewController willMoveToParentViewController:]
  -[CatalogViewController scrollViewDidScroll:]
  -[CatalogViewController unifiedFieldReflectedItemDidChange:]
  -[CatalogViewController updateQuerySuggestionsFromResponse:]
  -[CatalogViewController stopCompleting]
  -[CatalogViewController didInteractWithUniversalSearchFirstTimeExperienceViewController:]
  -[CatalogViewController startPageScrollObserver]
  -[CatalogViewController snapshotBackgroundColor]
  -[CatalogViewController popoverPresentationControllerWillDismissPopover:]
  -[CatalogViewController relinquishOwnershipOfUniversalSearchFirstTimeExperienceViewControllerFromCurrentParent]
  -[CatalogViewController findOnPage]
  -[CatalogViewController isShowingCompletionDetail]
  -[CatalogViewController updateStartPageControlTintColor]
  -[CatalogViewController presentDetail:]
  -[CatalogViewController unifiedField:didEndEditingWithParsecTopHit:]
  -[CatalogViewController unifiedField:moveCompletionSelectionByRowOffset:]
  -[CatalogViewController isShowingUniversalSearchFirstTimeExperience]
  -[CatalogViewController _logTopHitWasChosen:]
  -[CatalogViewController setObscuredInsets:]
  -[CatalogViewController textFieldShouldClear:]
  -[CatalogViewController _setContentOverlayInsets:]
  -[CatalogViewController parsecSearchSession]
  -[CatalogViewController cancelFavoritesGestures]
  -[CatalogViewController setCompletionList:]
  -[CatalogViewController _keyboardDidShow:]
  -[CatalogViewController feedbackButtonWasTappedWithProblemURL:]
  -[CatalogViewController _completionsViewControllerIsTranslucent]
  -[CatalogViewController unifiedField:didEngageWithQuerySuggestion:forQueryString:]
  -[CatalogViewController relinquishOwnershipOfCompletionsViewControllerFromCurrentParent]
  -[CatalogViewController sidebarButton]
  -[CatalogViewController clearCachedTabCompletionData]
  -[CatalogViewController snapshotContentRectInBounds:]
  -[CatalogViewController startPageControllerDidCompleteUnfocusGesture:]
  -[CatalogViewController didTogglePrivateBrowsing]
  -[CatalogViewController delegate]
  -[CatalogViewController setNavigationBar:]
  -[CatalogViewController _completionItemAtIndexPath:]
  -[CatalogViewController setStartPageScrollObserver:]
  -[CatalogViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CatalogViewController libraryType]
  -[CatalogViewController initWithDelegate:browserController:]
  -[CatalogViewController resume]
  -[CatalogViewController unifiedFieldShouldPasteAndNavigate:]
  -[CatalogViewController test_simulateTyping:inGroup:startIndex:]
  -[CatalogViewController resetFavorites]
  -[CatalogViewController favoritesView]
  -[CatalogViewController _showStartPageInPopover]
  -[CatalogViewController _completionListQueryID]
  -[CatalogViewController startPageViewControllerTopPadding:]
  -[CatalogViewController _dismissUniversalSearchFirstTimeExperience:dismissalReason:completionHandler:]
  -[CatalogViewController _setShowingCompletions:popoverDismissalReason:completionHandler:]
  -[CatalogViewController chromelessScrollDistance]
  -[CatalogViewController displayPopover]
  -[CatalogViewController _updateBackgroundColorWhenShowingFavoritesNavigationController]
  -[CatalogViewController setContentBorrowed:]
  -[CatalogViewController dealloc]
  -[CatalogViewController unifiedFieldSelectCompletionItemIfAvailable:]
  -[CatalogViewController adaptivePresentationStyleForPresentationController:traitCollection:]
  -[CatalogViewController updatePreferredContentSize]
  -[CatalogViewController searchTextCompletionAccessoryButtonTappedForCompletionItem:]
  -[CatalogViewController _popoverDismissCompletion]
  -[CatalogViewController snapshotContentView]
  -[CatalogViewController _relevanceForItem:]
  -[CatalogViewController _clearParsecSearchSession]
  -[CatalogViewController _showCompletionsPopoverIfNecessary]
  -[CatalogViewController popoverIsShowing]
  -[CatalogViewController _parsecEnabledDidChange:]
  -[CatalogViewController unifiedFieldDidUpdateUserTypedText:forQueryString:didUpdateSuggestions:]
  -[CatalogViewController _commitVoiceSearchIfNecessary]
  -[CatalogViewController lastTopHitMatch]
  -[CatalogViewController isShowingCompletions]
  -[CatalogViewController usesPopoverStyleForFavorites]
  -[CatalogViewController _updateVoiceSearchState]
  -[CatalogViewController switchToTabWithUUID:inWindowWithUUID:forTabGroupWithUUID:]
  -[CatalogViewController resumeSearchWithQuery:]
  -[CatalogViewController _beginParsecSessionIfNeeded]
  -[CatalogViewController navigationBarHeight]
  -[CatalogViewController unifiedFieldVoiceSearchStateDidChange:]
  -[CatalogViewController updateStartPageTopSpacing]
  -[CatalogViewController setLoadProgressObserver:]
  -[CatalogViewController startPageViewControllerTitleForRootView:]
  -[CatalogViewController _reloadCompletionTable]
  -[CatalogViewController setLastTopHitMatch:]
  -[CatalogViewController startPageController]
  -[CatalogViewController startPageUpdatePolicyDidChange]
  -[CatalogViewController unifiedField:didEndEditingWithSearch:]
  -[CatalogViewController obscuredInsets]
  -[CatalogViewController unifiedFieldShouldMoveCompletionSelection:]
  -[CatalogViewController completionListDidRestoreCachedCompletions:]
  -[CatalogViewController startPageViewControllerShouldDeferLoadingContentUntilKeyboardAnimatesIn:]
  -[CatalogViewController showUniversalSearchFirstTimeExperienceIfNotShowing]


FeatureManager : WBUFeatureManager
 @property  BOOL addToHomeScreenAvailable
 @property  BOOL iconsInTabsEnabled
 @property  BOOL insetGroupedCompletionListEnabled
 @property  BOOL customTabGroupsEnabled
 @property  BOOL isSystemNoteTakingEnabled
 @property  BOOL floatingSidebarButtonEnabled
 @property  BOOL tabGroupButtonEnabled
 @property  BOOL tabGroupSuggestionsEnabled

  // class methods
  +[FeatureManager sharedFeatureManager]

  // instance methods
  -[FeatureManager isAddToHomeScreenAvailable]
  -[FeatureManager isInsetGroupedCompletionListEnabled]
  -[FeatureManager _updateAccessLevel]
  -[FeatureManager areTabGroupSuggestionsEnabled]
  -[FeatureManager init]
  -[FeatureManager isFloatingSidebarButtonEnabled]
  -[FeatureManager iconsInTabsEnabled]
  -[FeatureManager isCustomTabGroupsEnabled]
  -[FeatureManager isTabGroupButtonEnabled]
  -[FeatureManager isSystemNoteTakingEnabled]
  -[FeatureManager areSectionHeadersDisabled]


TabSnapshotCacheEntry : NSObject
 @property  NSUUID *identifier
 @property  BOOL group
 @property  NSMutableSet *groupMembers
 @property  UIImage *snapshot
 @property  long long state
 @property  BOOL updatingState
 @property  BOOL stateUpdateCancelled
 @property  BOOL fitsInCache

  // instance methods
  -[TabSnapshotCacheEntry isGroup]
  -[TabSnapshotCacheEntry groupMembers]
  -[TabSnapshotCacheEntry setSnapshot:]
  -[TabSnapshotCacheEntry .cxx_destruct]
  -[TabSnapshotCacheEntry setState:]
  -[TabSnapshotCacheEntry identifier]
  -[TabSnapshotCacheEntry state]
  -[TabSnapshotCacheEntry snapshot]
  -[TabSnapshotCacheEntry initWithIdentifier:isGroup:]
  -[TabSnapshotCacheEntry isUpdatingState]
  -[TabSnapshotCacheEntry setUpdatingState:]
  -[TabSnapshotCacheEntry stateUpdateCancelled]
  -[TabSnapshotCacheEntry setStateUpdateCancelled:]
  -[TabSnapshotCacheEntry fitsInCache]
  -[TabSnapshotCacheEntry setFitsInCache:]


TabSnapshotCacheContext : NSObject
 @property  NSOrderedSet *identifiersToCache
 @property  BOOL updating
 @property  unsigned long capacity

  // instance methods
  -[TabSnapshotCacheContext setCapacity:]
  -[TabSnapshotCacheContext setUpdating:]
  -[TabSnapshotCacheContext updating]
  -[TabSnapshotCacheContext capacity]
  -[TabSnapshotCacheContext .cxx_destruct]
  -[TabSnapshotCacheContext identifiersToCache]
  -[TabSnapshotCacheContext setIdentifiersToCache:]


TabSnapshotCache : NSObject
 @property  BOOL finishedUpdating
 @property  <TabSnapshotCacheObserving> *delegate

  // class methods
  +[TabSnapshotCache initialize]
  +[TabSnapshotCache removeSavedSnapshotsKeepingSnapshotsWithIdentifiers:]
  +[TabSnapshotCache defaultSnapshotCache]
  +[TabSnapshotCache supportsASTC]

  // instance methods
  -[TabSnapshotCache _finishUpdatingToState:cachedSnapshot:forEntry:]
  -[TabSnapshotCache setCapacity:forDelegate:]
  -[TabSnapshotCache _existingURLForSnapshotWithIdentifier:effectsVersion:]
  -[TabSnapshotCache _requestSavedSnapshotForIdentifier:]
  -[TabSnapshotCache removeIdentifier:fromGroupWithIdentifier:]
  -[TabSnapshotCache .cxx_destruct]
  -[TabSnapshotCache _entryForIdentifier:createIfNeeded:]
  -[TabSnapshotCache identifiersToCacheForDelegate:]
  -[TabSnapshotCache removeSnapshotWithIdentifier:]
  -[TabSnapshotCache setDelegate:]
  -[TabSnapshotCache _writeSnapshotImage:withIdentifier:]
  -[TabSnapshotCache _enumerateDelegatesAndIdentifiersForEntry:usingBlock:]
  -[TabSnapshotCache _beginUpdatingStateForIdentifier:]
  -[TabSnapshotCache _enumeratePossibleURLsForSnapshotWithIdentifier:withBlock:]
  -[TabSnapshotCache init]
  -[TabSnapshotCache setUpdating:forDelegate:]
  -[TabSnapshotCache _readSnapshotImageForIdentifier:]
  -[TabSnapshotCache _sendDidFinishUpdatingToDelegateIfNeeded]
  -[TabSnapshotCache _entryForIdentifier:]
  -[TabSnapshotCache _allIdentifiersToCache]
  -[TabSnapshotCache _saveSnapshotForIdentifier:]
  -[TabSnapshotCache _contextForDelegate:]
  -[TabSnapshotCache performBatchUpdatesWithBlock:]
  -[TabSnapshotCache requestNextSnapshotIfNecessary]
  -[TabSnapshotCache initWithThumbnailCacheDirectoryURL:]
  -[TabSnapshotCache isIdentifier:memberOfSameGroupAsIdentifier:]
  -[TabSnapshotCache isFinishedUpdating]
  -[TabSnapshotCache snapshotWithIdentifier:]
  -[TabSnapshotCache delegate]
  -[TabSnapshotCache invalidateSnapshotWithIdentifier:]
  -[TabSnapshotCache _finishUpdatingToState:forEntry:]
  -[TabSnapshotCache addSnapshotCacheObserver:]
  -[TabSnapshotCache _requestNextSnapshotIfNecessaryForDelegate:]
  -[TabSnapshotCache addIdentifier:toGroupWithIdentifier:]
  -[TabSnapshotCache hasValidSnapshotWithIdentifier:]
  -[TabSnapshotCache _determineInitialStateForIdentifier:]
  -[TabSnapshotCache _calculateFitsInCache]
  -[TabSnapshotCache setIdentifiersToCache:forDelegate:]
  -[TabSnapshotCache _preferredURLForSnapshotWithIdentifier:]
  -[TabSnapshotCache _URLForSnapshotWithIdentifier:isKTX:effectsVersion:]
  -[TabSnapshotCache removeSnapshotCacheObserver:]


StartPageController : NSObject <_SFWebBookmarkActionHandler, SFStartPageCustomizationDataSource, SFStartPageDataSource>
 @property  <StartPageDataSource> *dataSource
 @property  CloudTabStore *cloudTabStore
 @property  SFStartPageViewController *viewController
 @property  NSString *libraryType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[StartPageController initialize]

  // instance methods
  -[StartPageController initWithVisualStyleProvider:]
  -[StartPageController cloudTabStore]
  -[StartPageController _bookmarksDidReload:]
  -[StartPageController _selectedCloudTabsDevice]
  -[StartPageController setCloudTabStore:]
  -[StartPageController viewController]
  -[StartPageController _setReadingListRecommendationAsReadWithRecommendation:]
  -[StartPageController _historyWasCleared]
  -[StartPageController sectionsForStartPageViewController:]
  -[StartPageController startPageCustomizationViewController:didSelectBuiltInBackgroundImageAtURL:precomputedLuminance:]
  -[StartPageController _favoritesSection]
  -[StartPageController _sectionsDidChange:]
  -[StartPageController _cloudTabsDidChange]
  -[StartPageController _setLeadImageForCard:withRecommendation:]
  -[StartPageController setDataSource:]
  -[StartPageController _frequentlyVisitedSitesDidChange:]
  -[StartPageController _setUpDragItemProviderForBookmarksSection:]
  -[StartPageController .cxx_destruct]
  -[StartPageController setLibraryType:]
  -[StartPageController _updateImageForRecommendation:]
  -[StartPageController _requestLeadImageForRecommendation:]
  -[StartPageController startPageViewControllerDidChangeRootViewVisibility:]
  -[StartPageController _editActionForBookmarkUUID:]
  -[StartPageController _highlightsDidChange:]
  -[StartPageController isCloudSyncEnabled]
  -[StartPageController startPageViewController:detailSectionForItemIdentifier:]
  -[StartPageController startPageViewController:toggleSectionExpanded:]
  -[StartPageController _historyWasAltered]
  -[StartPageController updatePolicyDidChange]
  -[StartPageController dataSource]
  -[StartPageController _privacyReportDataDidChange]
  -[StartPageController _showEditUIForBookmarkWithUUID:]
  -[StartPageController deleteBookmark:userInfo:]
  -[StartPageController isBackgroundImageEnabledForStartPageCustomizationViewController:]
  -[StartPageController init]
  -[StartPageController _updateSiriSuggestionsMediator]
  -[StartPageController _siriSuggestionsWelcomeBanner]
  -[StartPageController _bookmarkSections]
  -[StartPageController _cloudTabsDidChange:]
  -[StartPageController _reloadPrivacyReportSection]
  -[StartPageController _fetchHandoffResult]
  -[StartPageController _appendSectionModelsForIdentifier:collectionType:toArray:]
  -[StartPageController customizationItemsForStartPageCustomizationViewController:]
  -[StartPageController _siriSuggestionsSection]
  -[StartPageController startPageCustomizationViewController:willModifySectionWithIdentifier:enabled:]
  -[StartPageController _cloudTabsSections]
  -[StartPageController _shareActionForSiriSuggestion:]
  -[StartPageController startPageCustomizationViewController:didSelectCustomBackgroundImage:]
  -[StartPageController _reportBookmarkNavigationAnalytics:withIntent:]
  -[StartPageController _scheduleHandoffApplicationUpdate:]
  -[StartPageController libraryType]
  -[StartPageController _updateRecommendationsForAllTopics]
  -[StartPageController startPageCustomizationViewController:didCustomizeSections:]
  -[StartPageController _openMenuElementForSiriSuggestion:forTabGroup:]
  -[StartPageController _privacyProxyStateDidChange]
  -[StartPageController _highlightsSection]
  -[StartPageController _frequentlyVisitedSection]
  -[StartPageController _downvoteActionForSiriSuggestion:]
  -[StartPageController bookmark:shareItems:userInfo:]
  -[StartPageController dealloc]
  -[StartPageController didReorderSectionIdentifiersForStartPageCustomizationViewController:]
  -[StartPageController _bookmarkFolderDidChange:]
  -[StartPageController _cloudTabsSectionWithDevice:]
  -[StartPageController _updateRecommendationsForTopics:]
  -[StartPageController startPageCustomizationViewController:didModifyBackgroundImageEnabled:]
  -[StartPageController editBookmark:userInfo:]
  -[StartPageController _banActionForSiriSuggestion:]
  -[StartPageController effectiveUpdatePolicy]
  -[StartPageController startPageViewController:isSectionExpanded:]
  -[StartPageController _bookmarkSectionForBookmark:orList:forFavoritesSection:forTopLevelBookmarks:]
  -[StartPageController _readingListSection]
  -[StartPageController setViewController:]
  -[StartPageController bookmark:didProduceNavigationIntent:userInfo:]
  -[StartPageController _setUpContextMenuForBookmarksSection:]
  -[StartPageController backgroundImageForStartPageCustomizationViewController:]
  -[StartPageController startPageViewController:didSelectItemWithIdentifier:]
  -[StartPageController _updatePrivacyReportData]
  -[StartPageController _setSiriSuggestions:]
  -[StartPageController _refreshSiriSuggestions]
  -[StartPageController _privacyReportSection]


TiltedTabViewMetrics : NSObject
  // instance methods
  -[TiltedTabViewMetrics init]


ExplanationCollectionViewCell : UICollectionViewCell
 @property  UILabel *headerLabel
 @property  UILabel *bodyLabel

  // instance methods
  -[ExplanationCollectionViewCell .cxx_destruct]
  -[ExplanationCollectionViewCell layoutSubviews]
  -[ExplanationCollectionViewCell bodyLabel]
  -[ExplanationCollectionViewCell initWithFrame:]
  -[ExplanationCollectionViewCell headerLabel]


WBSAnalyticsLogger(TabGroupsAnalyticsLogger)
	// instance methods
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) schedulePeriodicTabGroupsReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) schedulePeriodicStandaloneTabBarReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _tabGroupsAnalyticsLogger_timeUntilNextPeriodicCoreAnalyticsReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _performTabGroupsReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _performTabsForNonTabGroupUserReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _tabGroupsAnalyticsLogger_updatePeriodicCoreAnalyticsLastReportTime]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _standaloneTabBarAnalyticsLogger_timeUntilNextPeriodicCoreAnalyticsReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _performStandaloneTabBarReport]
	-[WBSAnalyticsLogger(TabGroupsAnalyticsLogger) _standaloneTabBarAnalyticsLogger_updatePeriodicCoreAnalyticsLastReportTime]

(TabOverviewLocation)
	// instance methods
	-[(TabOverviewLocation) sf_webViewGeometryValue]

UISceneConnectionOptions(SafariExtras)
UIMenu(RecentlyClosedTabs)
WebBookmark(SafariExtras)
WKSecurityOrigin(SafariExtras)
WBSBrowserTabCompletionMatch(SafariCompletionItem)
	// instance methods
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) isEquivalentTo:]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) completionTableViewCellReuseIdentifier]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) acceptCompletionWithActionHandler:]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) auditAcceptedCompletionWithRank:]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) completionTableViewCellForCompletionList:]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) configureCompletionTableViewCell:forCompletionList:]
	-[WBSBrowserTabCompletionMatch(SafariCompletionItem) reflectedStringForUserTypedString:]

CALayer(UniqueAnimationKey)
NSURLSession(ReadingListMetadataFetcherAdditions)
	// instance methods
	-[NSURLSession(ReadingListMetadataFetcherAdditions) fetchThumbnailForBookmark:completion:]

_SFNavigationIntent(SafariExtras)
UIView(SafariGraphicsUtilities)
UIMotionEffect(SafariGraphicsUtilities)
WBTab(MobileSafariUIExtras)
SFSearchResult(CompletionItem)
	// instance methods
	-[SFSearchResult(CompletionItem) resultsDidBecomeVisible:]
	-[SFSearchResult(CompletionItem) didEngageResult:]
	-[SFSearchResult(CompletionItem) didEngageCardSection:]
	-[SFSearchResult(CompletionItem) isEquivalentTo:]
	-[SFSearchResult(CompletionItem) userVisibleURLString]
	-[SFSearchResult(CompletionItem) cardViewDidAppear:]
	-[SFSearchResult(CompletionItem) didPerformCommand:]
	-[SFSearchResult(CompletionItem) parsecQueryID]
	-[SFSearchResult(CompletionItem) setParsecQueryID:]
	-[SFSearchResult(CompletionItem) parsecDomainIdentifier]
	-[SFSearchResult(CompletionItem) restoresSearchState]
	-[SFSearchResult(CompletionItem) completionTableViewCellReuseIdentifier]
	-[SFSearchResult(CompletionItem) acceptCompletionWithActionHandler:]
	-[SFSearchResult(CompletionItem) auditAcceptedCompletionWithRank:]
	-[SFSearchResult(CompletionItem) completionTableViewCellForCompletionList:]
	-[SFSearchResult(CompletionItem) configureCompletionTableViewCell:forCompletionList:]
	-[SFSearchResult(CompletionItem) reflectedStringForUserTypedString:]
	-[SFSearchResult(CompletionItem) completionTableHeaderView]
	-[SFSearchResult(CompletionItem) configureCompletionTableHeaderView:forCompletionListGroup:]
	-[SFSearchResult(CompletionItem) completionTableHeaderViewReuseIdentifier]
	-[SFSearchResult(CompletionItem) usesDefaultHeaderView]
	-[SFSearchResult(CompletionItem) handlerForActionItem]
	-[SFSearchResult(CompletionItem) setHandlerForActionItem:]
	-[SFSearchResult(CompletionItem) punchoutWithHandler:]
	-[SFSearchResult(CompletionItem) safari_setCompletionIconForCompactRow:]

UIViewController(TableViewScrollPositionSaving)
	// instance methods
	-[UIViewController(TableViewScrollPositionSaving) safari_tableViewScrollPositionSaveIdentifier]
	-[UIViewController(TableViewScrollPositionSaving) safari_tableViewForScrollPositionSaving]
	-[UIViewController(TableViewScrollPositionSaving) _safari_tableViewScrollPositionKey]

UITableView(SafariExtras)
_SFDigitalHealthViewController(TabSnapshotContentProvider)
	// instance methods
	-[_SFDigitalHealthViewController(TabSnapshotContentProvider) snapshotBackgroundColor]
	-[_SFDigitalHealthViewController(TabSnapshotContentProvider) snapshotContentRectInBounds:]
	-[_SFDigitalHealthViewController(TabSnapshotContentProvider) snapshotContentView]

UIDragItem(MobileSafariExtras)
NSItemProvider(SafariExtras)
	// class methods
	+[NSItemProvider(SafariExtras) safari_itemProviderForTabDocument:]

UIResponder(SafariExtras)
	// instance methods
	-[UIResponder(SafariExtras) safari_responderChainDescription]

WKWebView(TabDocumentViewExtras)
	// instance methods
	-[WKWebView(TabDocumentViewExtras) sf_setDisplayedWebViewGeometry:]
	-[WKWebView(TabDocumentViewExtras) sf_displayedWebViewGeometry]

UITableViewCell(SafariExtras)
	// instance methods
	-[UITableViewCell(SafariExtras) _safari_setLinkedPageTitle:description:]
	-[UITableViewCell(SafariExtras) _safari_setLinkedPageTitle:URL:]

WBSURLCompletionMatch(SafariCompletionItem)
	// instance methods
	-[WBSURLCompletionMatch(SafariCompletionItem) isEquivalentTo:]
	-[WBSURLCompletionMatch(SafariCompletionItem) _completionIcon]
	-[WBSURLCompletionMatch(SafariCompletionItem) _sectionName]
	-[WBSURLCompletionMatch(SafariCompletionItem) completionTableViewCellReuseIdentifier]
	-[WBSURLCompletionMatch(SafariCompletionItem) acceptCompletionWithActionHandler:]
	-[WBSURLCompletionMatch(SafariCompletionItem) auditAcceptedCompletionWithRank:]
	-[WBSURLCompletionMatch(SafariCompletionItem) completionTableViewCellForCompletionList:]
	-[WBSURLCompletionMatch(SafariCompletionItem) configureCompletionTableViewCell:forCompletionList:]
	-[WBSURLCompletionMatch(SafariCompletionItem) reflectedStringForUserTypedString:]
	-[WBSURLCompletionMatch(SafariCompletionItem) completionTableViewCellCustomHeightForCompletionList:]

WBSBookmarkAndHistoryCompletionMatch(SafariCompletionItem)
	// instance methods
	-[WBSBookmarkAndHistoryCompletionMatch(SafariCompletionItem) isEquivalentTo:]
	-[WBSBookmarkAndHistoryCompletionMatch(SafariCompletionItem) shouldPrefetchWithMatchLength:]

WebBookmarkCollection(SafariExtras)
	// class methods
	+[WebBookmarkCollection(SafariExtras) mainBookmarkCollection]

	// instance methods
	-[WebBookmarkCollection(SafariExtras) bookmarksInFavoritesList]
	-[WebBookmarkCollection(SafariExtras) receivedBookmarksDidChangeNotification:]

WKBackForwardListItem(SafariExtras)
UITableViewHeaderFooterView(SafariExtras)
(SafariExtras)
	// instance methods
	-[(SafariExtras) safari_changeFromSet:withModificationCheck:]

WBSParsecDSession(FeedbackHelpers)
UIImage(SafariImmediateDecoding)
01 00 1200 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 2300 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAssetQuery 
01 00 0800 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSMousePointerService 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 2400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 1300 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderer 
01 00 1300 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRendererSettings 
01 00 1300 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNAvatarImageRenderingScope 
01 00 1300 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNMonogrammer 
01 00 1700 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 1a00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0c00 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0c00 /System/Library/Frameworks/Intents.framework/Intents: INIntentResponse 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2200 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSectionSnapshot 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionItem 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPCookieStorage 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: NSShadow 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLCache 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1100 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperConfigurationManager 
01 00 2900 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSWallpaperService 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFAddPKPassesViewController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFAppLinkBanner 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFApplicationManifestFetcher 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFAutomaticTabClosingUtilities 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBannerModel 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBannerTheme 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBlockBasedCAAnimationDelegate 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFBlockBasedPopoverSourceInfo 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBookmarksLockCoordinator 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBrowserApplication 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBrowserController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFBrowserDocumentTrackerInfo 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFBrowserMenuProvider 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFCapsuleCollectionView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFCapsuleNavigationBar 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFCapsuleNavigationBarTheme 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFCapsuleURLField 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFCapsuleView 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCardViewDisappearFeedback 
01 00 2800 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFClient 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCompactRowCardSection 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFContentBlockerManager 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFDefaultStartPageVisualStyleProvider 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDetailedRowCardSection 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFDeviceUtilities 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFDialog 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFDialogController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFFeatureManager 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFGradientView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFHighlightBanner 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFHighlightBannerTracker 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFManageWebExtensionsViewController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFMoreMenuButton 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFNavigationBarItem 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFNavigationBarToggleButton 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFOrderedContainerView 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFPageZoomStepperController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFPopoverSizingTableViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFPrivacyReportOnboardingController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFPrivacyReportViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFReaderAppearanceThemeSelector 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFReaderTextSizeStepperController 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultRankingFeedback 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultSection 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultsReceivedAfterTimeoutFeedback 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRichText 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRowCardSection 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SFSafariViewController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFScrollingPanGestureRecognizer 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchResult 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchSuggestion 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFSectionCustomizationItem 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFSectionModel 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFStartPageViewController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFStepperView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFStoreBannerTracker 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSuggestionEngagementFeedback 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSymbolImage 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFSystemAlert 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFTabHoverPreviewController 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFText 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFThemeColorEffectView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFTouchDownGestureRecognizer 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedBar 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedBarContentArrangement 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedBarTheme 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedTabBar 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedTabBarItem 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFUnifiedTabBarItemArrangement 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFVibrantSeparatorView 
01 00 2600 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFVisibleSuggestionsFeedback 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFVoiceSearchManager 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFWebExtensionButton 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFWebExtensionButtonConfiguration 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFWebExtensionPermissionBanner 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: SFWebExtensionsController 
01 00 0500 /System/Library/PrivateFrameworks/SocialLayer.framework/SocialLayer: SLAttributionView 
01 00 0500 /System/Library/PrivateFrameworks/SocialLayer.framework/SocialLayer: SLHighlight 
01 00 0500 /System/Library/PrivateFrameworks/SocialLayer.framework/SocialLayer: SLHighlightCenter 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: SSReadingList 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: SafariFetcherServerProxy 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivity 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationExtensionActivity 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutIcon 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutItem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAutonomousSingleAppModeConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAutonomousSingleAppModeSession 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBackgroundConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryCheckmark 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryCustomView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryReorder 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionLayoutListConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCellRegistration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSourceReorderingHandlers 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDropProposal 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewListCell 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewSupplementaryRegistration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UICommand 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextMenuInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIContextualAction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDictationInputModeOptions 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragItem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDropProposal 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusSystem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIInterpolatingMotionEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputMode 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardSceneDelegate 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILargeContentViewerInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuItem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuSystem 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMotionEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMotionEffectGroup 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHighlightEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPopoverPresentationController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewForceInteractionProgress 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPrintInteractionController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIReferenceLibraryViewController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIRefreshControl 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneActivationRequestOptions 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISceneConnectionOptions 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISegmentedControl 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISocialActivity 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringLoadedInteraction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStoryboard 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeAction 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeActionsConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCellLayoutManager 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewDropProposal 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextCursorAssertionController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextSuggestion 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClip 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebClipIcon 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebGeolocationPolicyDecider 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0900 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBCollectionConfiguration 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBDatabaseLockAcquisitor 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBLocalTabAttributes 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBReadingList 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBReadonlyTabCollection 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBReusableTabManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAllowedLegacyTLSHostManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAnalyticsLogger 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSAppLink 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBookmarkAndHistoryCompletionMatch 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBrowserTabCompletionInfo 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBrowserTabCompletionMatch 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBrowserTabCompletionProvider 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCache 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudBookmarksMigrationCoordinator 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudHistoryConfiguration 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudHistoryPushAgentProxy 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudTab 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudTabDevice 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCloudTabStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCompletionQuery 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSContentBlockerStatisticsSQLiteStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCyclerBookmarkLeafRepresentation 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCyclerConnectionManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCyclerItemListRepresentation 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSDiagnosticStateCollector 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSDigitalHealthManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSDistributedNotificationObserver 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSEncryptedCloudKeyValueStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSExtensionsController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFaviconRequest 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFeatureAvailability 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFileLogger 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFluidProgressController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFluidProgressState 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouCloudTabsDataSource 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouLinkRecommendation 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouRecentParsecResultsManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouRecommendationMediator 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouRecommendationMediatorDataSource 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSForYouTopic 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormAutoFillCorrectionsHistoryObserver 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFormAutoFillCorrectionsSQLiteStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFrequentlyVisitedSiteCandidate 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFrequentlyVisitedSitesBannedURLStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFrequentlyVisitedSitesController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHighlightManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistory 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistoryConnectionProxy 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistoryContextController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistoryItem 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSHistorySessionController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSLeadImageCacheRequest 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSLeadImageSaver 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSMemoryFootprint 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSOpenSearchURLTemplate 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPair 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecABGroupIdentifierUserDefaultsStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecABGroupManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecDSession 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecSearchUtilities 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSParsecSubscriptionManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPasswordWarningStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPerSitePreferencesSQLiteStore 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPermissionDialogThrottler 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPhishingClassifierController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPrivacyProxyAvailabilityManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPrivacyReportData 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPrivacyTransparencyController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSProcessProxyOverride 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSQuerySuggestion 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSQuickWebsiteSearchController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSResultRanker 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSQLiteDatabase 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSafariBookmarksSyncAgentProxy 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSafariExtensionStateObserver 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSafariSettingsSyncEngine 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSameDocumentNavigationToHistoryVisitCorrelator 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSScopeExitHandler 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSearchImpressionAnalyticsRecorder 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSearchParameters 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSharedFeatureAvailability 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiriIntelligenceDonor 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiriIntelligenceHistorySearch 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSStartPageBackgroundManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSStartPageSectionManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSystemNoteTakingController 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabOrderManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSThemeColorUtilities 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTopHitCompletionMatch 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTranslationConsentAlertHelper 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTranslationContext 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTrialManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSUISafariSandboxBrokerConnection 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionDatabase 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionMatch 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionUserTypedString 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLSpoofingMitigator 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSUnifiedBarAnalyticsRecorder 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionNewTabOverridePreferencesManager 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionURLSchemeHandler 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionUtilities 
01 00 0b00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionsController 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBSavedStateManager 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTab 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTabCollection 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTabCyclerCommandHandler 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTabGroup 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBTabGroupManager 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUCreditCardDataController 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFeatureManager 
01 00 2f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUHistory 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBWindowState 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKBackForwardListItem 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKSecurityOrigin 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKSnapshotConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmark 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkCollection 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkReadonlyCollection 
01 00 2c00 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkWebFilterSettings 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebCoreStatistics 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebDatabaseManager 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebKitStatistics 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: WebView 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFActivity 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFActivityExtensionItemProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFActivityItemProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFActivityItemProviderCollection 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFActivityViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAdaptivePreviewViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAddBookmarkActivity 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFAutomationController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBarHoverAssistant 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBarManager 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFBarTheme 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBookmarkInfoViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBookmarkTextEntryTableViewCell 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBookmarkTextEntryTableViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserConfiguration 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserSavedState 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserView 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserWindowSettings 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFBrowserWindowStateData 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFCalendarEventDetector 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFContactPreviewViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFCrashBanner 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDigitalHealthViewController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFDimmingButton 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownload 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownloadActivityItemProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownloadCurrentPageActivity 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownloadDispatcher 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDownloadManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFDynamicBarAnimator 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFFaviconProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFeatureAvailability 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFindOnPageUIActivity 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFindOnPageView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFFluidProgressView 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFormAutoFillController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFFormAutoFillInputSession 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFGeolocationPermissionManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFICSPreviewViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFInjectedJavaScriptController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFLinkPreviewHeader 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFLinkPreviewHelper 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFLinkWithPreviewActivityItemProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFMailContentProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFManagedFeatureObserver 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFMediaCaptureStatusBarManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFMicrodataExtractor 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFNavigationBar 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFNavigationIntent 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFNavigationIntentBuilder 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFNavigationResult 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFNavigationUtilitiesManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPageFormatMenuController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPageLoadErrorController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPageZoomPreferenceManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPerSitePreferencesPopoverViewController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPerSitePreferencesVendor 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPopoverPresentationDelegate 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPrintActivityItemProvider 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFPrintController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFQRCodeDetectionController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFQuickLookDocument 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFQuickLookDocumentWriter 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFReaderController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFReaderCustomProtocols 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFReaderFontOptionsGroupController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFRecentWebSearchesController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFReloadOptionsController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSafariSharingExtensionController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSaveToFilesOperation 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSearchEngineController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSecIdentityPreferencesController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSettingsAlertController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSharingLinkExtractor 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSingleBookmarkNavigationController 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFSiteIcon 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFSiteIconView 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFSiteMetadataManager 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFSyntheticClickContext 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFTabStateData 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFTelephonyNavigationMitigationPolicy 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFToolbar 
01 00 0a00 /System/Library/PrivateFrameworks/MobileSafari.framework/MobileSafari: _SFTouchIconFetchOperation 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFTranslationTargetLocaleAlertController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFUIViewPopoverSourceInfo 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFUserActivityController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFUserMediaPermissionController 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFWebClipMetadataFetcher 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFWebExtensionActivity 
01 00 1000 /System/Library/Frameworks/SafariServices.framework/SafariServices: _SFWebView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSection 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICollectionViewListLayoutSectionConfiguration 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContentUnavailableView 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIContextualMenuGestureRecognizer 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationBarPalette 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetDetent 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
01 00 2b00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIVisualEffectBackdropView 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKAutomationSession 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKAutomationSessionConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKSessionState 
01 00 2d00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKVisitedLinkStore 
