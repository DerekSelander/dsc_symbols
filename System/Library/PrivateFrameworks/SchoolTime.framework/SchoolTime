|| __DATA.__objc_data _OBJC_CLASS_$_SCLDailySchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLHistoryGroup
|| __DATA.__objc_data _OBJC_CLASS_$_SCLMutableDailySchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLMutableScheduleSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SCLMutableScheduleTime
|| __DATA.__objc_data _OBJC_CLASS_$_SCLMutableSimpleSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBScheduleRecurrence
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBScheduleRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBScheduleRequestResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBScheduleSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBScheduleTime
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBTimeInterval
|| __DATA.__objc_data _OBJC_CLASS_$_SCLPBUnlockHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SCLRecurrenceSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleIntervalFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleRecurrence
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleTime
|| __DATA.__objc_data _OBJC_CLASS_$_SCLScheduleTimeFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchedulingEngine
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolMode
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeClientProxy
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeCoordinatorConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeManager
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeManagerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeServer
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSchoolModeServerSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncContext
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncErrorBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncErrorHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStateFailed
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStatePendingSend
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStateSending
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStateSent
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSettingsSyncStateSynced
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSimpleSchedule
|| __DATA.__objc_data _OBJC_CLASS_$_SCLState
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSuppressSchoolModeAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSuppressSchoolModeAssertionClient
|| __DATA.__objc_data _OBJC_CLASS_$_SCLSuppressSchoolModeAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_SCLTimeInterval
|| __DATA.__objc_data _OBJC_CLASS_$_SCLTimeIntervalsFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_SCLTransportController
|| __DATA.__objc_data _OBJC_CLASS_$_SCLTransportService
|| __DATA.__objc_data _OBJC_CLASS_$_SCLUnlockHistoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SCLUnlockHistoryPersistentStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLDailySchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLHistoryGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLMutableDailySchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLMutableScheduleSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLMutableScheduleTime
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLMutableSimpleSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBScheduleRecurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBScheduleRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBScheduleRequestResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBScheduleSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBScheduleTime
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBTimeInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLPBUnlockHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLRecurrenceSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleIntervalFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleRecurrence
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleTime
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLScheduleTimeFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchedulingEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolMode
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeClientProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeCoordinatorConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeManagerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSchoolModeServerSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncErrorBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncErrorHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStateFailed
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStatePendingSend
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStateSending
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStateSent
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSettingsSyncStateSynced
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSimpleSchedule
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLState
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSuppressSchoolModeAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSuppressSchoolModeAssertionClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLSuppressSchoolModeAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLTimeInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLTimeIntervalsFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLTransportController
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLTransportService
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLUnlockHistoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SCLUnlockHistoryPersistentStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleRecurrence._day
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleRecurrence._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleRecurrence._timeInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleRequestResponse._scheduleSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleSettings._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleSettings._isEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleSettings._recurrences
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleSettings._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleTime._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleTime._hour
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBScheduleTime._minute
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBTimeInterval._endTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBTimeInterval._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._calendarIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._scheduleEndHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._scheduleEndMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._scheduleStartHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._scheduleStartMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._startTimeIntervalSinceReferenceDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCLPBUnlockHistoryItem._timeZoneName
|| __DATA_CONST.__const _SCLErrorDomain
|| __DATA_CONST.__const _SCLIDSServiceName
|| __DATA_CONST.__const _SCLSchoolModeEditHistoryEntitlement
|| __DATA_CONST.__const _SCLSchoolModeFetchUnlockHistoryEntitlement
|| __DATA_CONST.__const _SCLSchoolModeSetScheduleEntitlement
|| __DATA_CONST.__const _SCLSchoolModeXPCMachServiceName
|| __TEXT.__const _SchoolTimeVersionNumber
|| __TEXT.__const _SchoolTimeVersionString
|| __TEXT.__text _NSStringForSCLDay
|| __TEXT.__text _SCLAutoUpdatingPairingID
|| __TEXT.__text _SCLDayForSCLPBDay
|| __TEXT.__text _SCLEntitlementError
|| __TEXT.__text _SCLEnumerateDaysInRepeatSchedule
|| __TEXT.__text _SCLGetNextDay
|| __TEXT.__text _SCLGetPreviousDay
|| __TEXT.__text _SCLIsNRDeviceEligibleForSchoolTime
|| __TEXT.__text _SCLIsStateTransitionEndOfUnlockPeriod
|| __TEXT.__text _SCLIsStateTransitionStartOfUnlockPeriod
|| __TEXT.__text _SCLPBDayForSCLDay
|| __TEXT.__text _SCLPBEmptyScheduleTime
|| __TEXT.__text _SCLPBScheduleRecurrenceForSCLScheduleRecurrence
|| __TEXT.__text _SCLPBScheduleRecurrenceReadFrom
|| __TEXT.__text _SCLPBScheduleRequestReadFrom
|| __TEXT.__text _SCLPBScheduleRequestResponseReadFrom
|| __TEXT.__text _SCLPBScheduleSettingsFromSCLScheduleSettings
|| __TEXT.__text _SCLPBScheduleSettingsReadFrom
|| __TEXT.__text _SCLPBScheduleTimeForSCLScheduleTime
|| __TEXT.__text _SCLPBScheduleTimeIsEmpty
|| __TEXT.__text _SCLPBScheduleTimeReadFrom
|| __TEXT.__text _SCLPBTimeIntervalReadFrom
|| __TEXT.__text _SCLPBUnlockHistoryItemFromSCLUnlockHistoryItem
|| __TEXT.__text _SCLPBUnlockHistoryItemReadFrom
|| __TEXT.__text _SCLPairingUnavailableError
|| __TEXT.__text _SCLRepeatScheduleContainsDay
|| __TEXT.__text _SCLRepeatScheduleForDay
|| __TEXT.__text _SCLSStateDataWithTitleDescriptionAndHints
|| __TEXT.__text _SCLScheduleRecurrenceForSCLPBScheduleRecurrence
|| __TEXT.__text _SCLScheduleSettingsFromSCLPBScheduleSettings
|| __TEXT.__text _SCLScheduleTimeForSCLPBScheduleTime
|| __TEXT.__text _SCLSchoolModeClientXPCInterface
|| __TEXT.__text _SCLSchoolModeServerXPCInterface
|| __TEXT.__text _SCLUnlockHistoryItemFromSCLPBUnlockHistoryItem
|| __TEXT.__text _SCLWatchServerRun
|| __TEXT.__text _scl_framework_log
|| __TEXT.__text _scl_pairing_log
|| __TEXT.__text _scl_persistence_log
|| __TEXT.__text _scl_transport_log
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreData: _NSSQLiteStoreType
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSPersistentContainer
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreDescription
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFPreferencesCopyValueWithContainer
__ CoreFoundation: __CFPreferencesSetValueWithContainer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDateIntervalFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSErrorDomain
__ IDS: _IDSSendMessageOptionWantsClientAcknowledgementKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ IDS: _OBJC_CLASS_$_IDSServiceDelegateProperties
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _NRDevicePropertyIsArchived
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRPairedDeviceRegistryDevice
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_C
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SCLSettingsSyncErrorBehavior : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long recoveryType
 @property  long long retryInterval

  // instance methods
  -[SCLSettingsSyncErrorBehavior retryInterval]
  -[SCLSettingsSyncErrorBehavior initWithRecoveryType:retryInterval:]
  -[SCLSettingsSyncErrorBehavior recoveryType]


SCLSettingsSyncErrorHandler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SCLSettingsSyncErrorHandler recoveryTypeForError:]
  -[SCLSettingsSyncErrorHandler behaviorForError:history:]


SCLPBUnlockHistoryItem : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasStartTimeIntervalSinceReferenceDate
 @property  double startTimeIntervalSinceReferenceDate
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasCalendarIdentifier
 @property  NSString *calendarIdentifier
 @property  BOOL hasTimeZoneName
 @property  NSString *timeZoneName
 @property  BOOL hasScheduleStartHour
 @property  unsigned int scheduleStartHour
 @property  BOOL hasScheduleStartMinute
 @property  unsigned int scheduleStartMinute
 @property  BOOL hasScheduleEndHour
 @property  unsigned int scheduleEndHour
 @property  BOOL hasScheduleEndMinute
 @property  unsigned int scheduleEndMinute

  // instance methods
  -[SCLPBUnlockHistoryItem copyWithZone:]
  -[SCLPBUnlockHistoryItem calendarIdentifier]
  -[SCLPBUnlockHistoryItem timeZoneName]
  -[SCLPBUnlockHistoryItem setTimeZoneName:]
  -[SCLPBUnlockHistoryItem .cxx_destruct]
  -[SCLPBUnlockHistoryItem hasTimeZoneName]
  -[SCLPBUnlockHistoryItem setHasDuration:]
  -[SCLPBUnlockHistoryItem readFrom:]
  -[SCLPBUnlockHistoryItem writeTo:]
  -[SCLPBUnlockHistoryItem isEqual:]
  -[SCLPBUnlockHistoryItem setDuration:]
  -[SCLPBUnlockHistoryItem setCalendarIdentifier:]
  -[SCLPBUnlockHistoryItem copyTo:]
  -[SCLPBUnlockHistoryItem dictionaryRepresentation]
  -[SCLPBUnlockHistoryItem hasCalendarIdentifier]
  -[SCLPBUnlockHistoryItem hasDuration]
  -[SCLPBUnlockHistoryItem mergeFrom:]
  -[SCLPBUnlockHistoryItem duration]
  -[SCLPBUnlockHistoryItem startTimeIntervalSinceReferenceDate]
  -[SCLPBUnlockHistoryItem setStartTimeIntervalSinceReferenceDate:]
  -[SCLPBUnlockHistoryItem setHasStartTimeIntervalSinceReferenceDate:]
  -[SCLPBUnlockHistoryItem hasStartTimeIntervalSinceReferenceDate]
  -[SCLPBUnlockHistoryItem setScheduleStartHour:]
  -[SCLPBUnlockHistoryItem setHasScheduleStartHour:]
  -[SCLPBUnlockHistoryItem hasScheduleStartHour]
  -[SCLPBUnlockHistoryItem setScheduleStartMinute:]
  -[SCLPBUnlockHistoryItem setHasScheduleStartMinute:]
  -[SCLPBUnlockHistoryItem hasScheduleStartMinute]
  -[SCLPBUnlockHistoryItem setScheduleEndHour:]
  -[SCLPBUnlockHistoryItem setHasScheduleEndHour:]
  -[SCLPBUnlockHistoryItem hasScheduleEndHour]
  -[SCLPBUnlockHistoryItem setScheduleEndMinute:]
  -[SCLPBUnlockHistoryItem setHasScheduleEndMinute:]
  -[SCLPBUnlockHistoryItem hasScheduleEndMinute]
  -[SCLPBUnlockHistoryItem scheduleStartHour]
  -[SCLPBUnlockHistoryItem scheduleStartMinute]
  -[SCLPBUnlockHistoryItem scheduleEndHour]
  -[SCLPBUnlockHistoryItem scheduleEndMinute]


SCLScheduleRecurrence : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  SCLTimeInterval *timeInterval
 @property  long long day

  // class methods
  +[SCLScheduleRecurrence supportsSecureCoding]
  +[SCLScheduleRecurrence dayOfWeekAndStartTimeComparator]

  // instance methods
  -[SCLScheduleRecurrence copyWithZone:]
  -[SCLScheduleRecurrence day]
  -[SCLScheduleRecurrence timeInterval]
  -[SCLScheduleRecurrence .cxx_destruct]
  -[SCLScheduleRecurrence encodeWithCoder:]
  -[SCLScheduleRecurrence isEqual:]
  -[SCLScheduleRecurrence initWithCoder:]
  -[SCLScheduleRecurrence initWithTimeInterval:day:]
  -[SCLScheduleRecurrence dateIntervalForActiveScheduleOnOrAfterDate:calendar:]
  -[SCLScheduleRecurrence isActiveAtDate:calendar:]
  -[SCLScheduleRecurrence intersectsRecurrence:]
  -[SCLScheduleRecurrence isContiguousWithRecurrence:]


SCLSchoolModeXPCClient : NSObject /usr/lib/libSystem.B.dylib <SCLSchoolModeXPCClient>
 @property  <SCLSchoolModeXPCClientDelegate> *delegate
 @property  NSXPCConnection *connection
 @property  SCLSchoolModeConfiguration *configuration
 @property  SCLState *state
 @property  SCLScheduleSettings *scheduleSettings
 @property  BOOL loaded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolModeXPCClient serverWithErrorHandler:]
  -[SCLSchoolModeXPCClient resume]
  -[SCLSchoolModeXPCClient .cxx_destruct]
  -[SCLSchoolModeXPCClient setConnection:]
  -[SCLSchoolModeXPCClient initWithDelegate:configuration:]
  -[SCLSchoolModeXPCClient configuration]
  -[SCLSchoolModeXPCClient _reconnect]
  -[SCLSchoolModeXPCClient setDelegate:]
  -[SCLSchoolModeXPCClient state]
  -[SCLSchoolModeXPCClient connection]
  -[SCLSchoolModeXPCClient invalidate]
  -[SCLSchoolModeXPCClient isLoaded]
  -[SCLSchoolModeXPCClient dumpState]
  -[SCLSchoolModeXPCClient delegate]
  -[SCLSchoolModeXPCClient setConfiguration:]
  -[SCLSchoolModeXPCClient scheduleSettings]
  -[SCLSchoolModeXPCClient applyServerSettings:]
  -[SCLSchoolModeXPCClient setActive:completion:]
  -[SCLSchoolModeXPCClient fetchRecentUnlockHistoryItemsWithCompletion:]
  -[SCLSchoolModeXPCClient addUnlockHistoryItem:completion:]
  -[SCLSchoolModeXPCClient deleteHistoryWithCompletion:]
  -[SCLSchoolModeXPCClient noteSignificantUserInteraction]
  -[SCLSchoolModeXPCClient triggerRemoteSync]
  -[SCLSchoolModeXPCClient didChangeUnlockHistory]
  -[SCLSchoolModeXPCClient applyScheduleSettings:completion:]


SCLPBScheduleSettings : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasVersion
 @property  unsigned int version
 @property  BOOL hasIsEnabled
 @property  BOOL isEnabled
 @property  NSMutableArray *recurrences

  // class methods
  +[SCLPBScheduleSettings recurrencesType]

  // instance methods
  -[SCLPBScheduleSettings copyWithZone:]
  -[SCLPBScheduleSettings setIsEnabled:]
  -[SCLPBScheduleSettings setHasVersion:]
  -[SCLPBScheduleSettings setRecurrences:]
  -[SCLPBScheduleSettings recurrences]
  -[SCLPBScheduleSettings .cxx_destruct]
  -[SCLPBScheduleSettings setHasIsEnabled:]
  -[SCLPBScheduleSettings setVersion:]
  -[SCLPBScheduleSettings isEnabled]
  -[SCLPBScheduleSettings readFrom:]
  -[SCLPBScheduleSettings writeTo:]
  -[SCLPBScheduleSettings isEqual:]
  -[SCLPBScheduleSettings hasIsEnabled]
  -[SCLPBScheduleSettings version]
  -[SCLPBScheduleSettings copyTo:]
  -[SCLPBScheduleSettings dictionaryRepresentation]
  -[SCLPBScheduleSettings hasVersion]
  -[SCLPBScheduleSettings mergeFrom:]
  -[SCLPBScheduleSettings addRecurrences:]
  -[SCLPBScheduleSettings recurrencesCount]
  -[SCLPBScheduleSettings clearRecurrences]
  -[SCLPBScheduleSettings recurrencesAtIndex:]


SCLSimpleSchedule : SCLSchedule
 @property  SCLScheduleTime *startTime
 @property  SCLScheduleTime *endTime
 @property  long long repeatSchedule

  // class methods
  +[SCLSimpleSchedule supportsSecureCoding]

  // instance methods
  -[SCLSimpleSchedule endTime]
  -[SCLSimpleSchedule copyWithZone:]
  -[SCLSimpleSchedule init]
  -[SCLSimpleSchedule recurrences]
  -[SCLSimpleSchedule .cxx_destruct]
  -[SCLSimpleSchedule encodeWithCoder:]
  -[SCLSimpleSchedule isEqual:]
  -[SCLSimpleSchedule repeatSchedule]
  -[SCLSimpleSchedule mutableCopyWithZone:]
  -[SCLSimpleSchedule initWithCoder:]
  -[SCLSimpleSchedule startTime]
  -[SCLSimpleSchedule initWithSimpleSchedule:]


SCLMutableSimpleSchedule : SCLSimpleSchedule
 @property  SCLScheduleTime *startTime
 @property  SCLScheduleTime *endTime
 @property  long long repeatSchedule

  // instance methods
  -[SCLMutableSimpleSchedule copyWithZone:]
  -[SCLMutableSimpleSchedule setEndTime:]
  -[SCLMutableSimpleSchedule setStartTime:]
  -[SCLMutableSimpleSchedule setRepeatSchedule:]


SCLSettingsSyncState : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long status
 @property  SCLSettingsSyncStateMachine *stateMachine

  // instance methods
  -[SCLSettingsSyncState setStateMachine:]
  -[SCLSettingsSyncState stateMachine]
  -[SCLSettingsSyncState .cxx_destruct]
  -[SCLSettingsSyncState xpcActivityStarted]
  -[SCLSettingsSyncState didEnterWithPreviousState:]
  -[SCLSettingsSyncState significantUserInteractionOccurred]
  -[SCLSettingsSyncState willExitWithNextState:]
  -[SCLSettingsSyncState initWithStateMachine:]
  -[SCLSettingsSyncState status]
  -[SCLSettingsSyncState settingsDidChange]
  -[SCLSettingsSyncState commitSettings]
  -[SCLSettingsSyncState enqueueFailedWithError:]
  -[SCLSettingsSyncState didEnqueueMessage:]
  -[SCLSettingsSyncState message:failedWithError:]
  -[SCLSettingsSyncState messageDidSend:]
  -[SCLSettingsSyncState messageWasDelivered:]
  -[SCLSettingsSyncState message:didFailToAcknowledgeWithError:]


SCLSettingsSyncStateSynced : SCLSettingsSyncState
  // instance methods
  -[SCLSettingsSyncStateSynced didEnterWithPreviousState:]
  -[SCLSettingsSyncStateSynced status]
  -[SCLSettingsSyncStateSynced settingsDidChange]


SCLSettingsSyncStatePendingSend : SCLSettingsSyncState
  // instance methods
  -[SCLSettingsSyncStatePendingSend xpcActivityStarted]
  -[SCLSettingsSyncStatePendingSend didEnterWithPreviousState:]
  -[SCLSettingsSyncStatePendingSend significantUserInteractionOccurred]
  -[SCLSettingsSyncStatePendingSend status]
  -[SCLSettingsSyncStatePendingSend settingsDidChange]
  -[SCLSettingsSyncStatePendingSend commitSettings]
  -[SCLSettingsSyncStatePendingSend enqueueFailedWithError:]
  -[SCLSettingsSyncStatePendingSend didEnqueueMessage:]


SCLSettingsSyncStateSending : SCLSettingsSyncState
  // instance methods
  -[SCLSettingsSyncStateSending status]
  -[SCLSettingsSyncStateSending settingsDidChange]
  -[SCLSettingsSyncStateSending message:failedWithError:]
  -[SCLSettingsSyncStateSending messageDidSend:]


SCLSettingsSyncStateSent : SCLSettingsSyncState
  // instance methods
  -[SCLSettingsSyncStateSent xpcActivityStarted]
  -[SCLSettingsSyncStateSent didEnterWithPreviousState:]
  -[SCLSettingsSyncStateSent status]
  -[SCLSettingsSyncStateSent settingsDidChange]
  -[SCLSettingsSyncStateSent messageWasDelivered:]
  -[SCLSettingsSyncStateSent message:didFailToAcknowledgeWithError:]


SCLSettingsSyncStateFailed : SCLSettingsSyncState
  // instance methods
  -[SCLSettingsSyncStateFailed xpcActivityStarted]
  -[SCLSettingsSyncStateFailed didEnterWithPreviousState:]
  -[SCLSettingsSyncStateFailed significantUserInteractionOccurred]
  -[SCLSettingsSyncStateFailed status]
  -[SCLSettingsSyncStateFailed settingsDidChange]
  -[SCLSettingsSyncStateFailed transitionToPendingState]
  -[SCLSettingsSyncStateFailed retryCriteriaWithInterval:]


SCLHistoryGroupKey : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCalendar *calendar
 @property  NSDate *referenceDate

  // instance methods
  -[SCLHistoryGroupKey .cxx_destruct]
  -[SCLHistoryGroupKey referenceDate]
  -[SCLHistoryGroupKey calendar]
  -[SCLHistoryGroupKey isEqual:]
  -[SCLHistoryGroupKey initWithCalendar:referenceDate:]


SCLHistoryGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *referenceDate
 @property  SCLSchedule *effectiveSchedule
 @property  NSCalendar *calendar
 @property  NSMutableArray *items

  // class methods
  +[SCLHistoryGroup historyGroupsByPrioritizingSchedule:forDate:inCalendar:items:]

  // instance methods
  -[SCLHistoryGroup setItems:]
  -[SCLHistoryGroup items]
  -[SCLHistoryGroup .cxx_destruct]
  -[SCLHistoryGroup referenceDate]
  -[SCLHistoryGroup calendar]
  -[SCLHistoryGroup canContainUnlockHistoryItem:]
  -[SCLHistoryGroup initWithEffectiveSchedule:calendar:referenceDate:]
  -[SCLHistoryGroup effectiveSchedule]


SCLScheduleFormatter : NSFormatter /usr/lib/libobjc.A.dylib
 @property  SCLTimeIntervalsFormatter *timeIntervalsFormatter
 @property  NSListFormatter *listFormatter
 @property  NSDateFormatter *standaloneWeekdayFormatter
 @property  NSDateIntervalFormatter *weekdayIntervalFormatter
 @property  NSLocale *locale
 @property  NSCalendar *calendar

  // instance methods
  -[SCLScheduleFormatter init]
  -[SCLScheduleFormatter setLocale:]
  -[SCLScheduleFormatter locale]
  -[SCLScheduleFormatter .cxx_destruct]
  -[SCLScheduleFormatter calendar]
  -[SCLScheduleFormatter setCalendar:]
  -[SCLScheduleFormatter _regenerateFormatters]
  -[SCLScheduleFormatter formatterItemsForSchedule:]
  -[SCLScheduleFormatter timeIntervalsFormatter]
  -[SCLScheduleFormatter stringForWeekdaysInItem:]
  -[SCLScheduleFormatter listFormatter]
  -[SCLScheduleFormatter stringFromSchedule:]
  -[SCLScheduleFormatter standaloneWeekdayFormatter]
  -[SCLScheduleFormatter weekdayIntervalFormatter]


SCLScheduleFormatterItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCalendar *calendar
 @property  NSArray *timeIntervals

  // instance methods
  -[SCLScheduleFormatterItem days]
  -[SCLScheduleFormatterItem addDay:]
  -[SCLScheduleFormatterItem .cxx_destruct]
  -[SCLScheduleFormatterItem calendar]
  -[SCLScheduleFormatterItem timeIntervals]
  -[SCLScheduleFormatterItem dayRanges]
  -[SCLScheduleFormatterItem initWithCalendar:timeIntervals:]
  -[SCLScheduleFormatterItem earliestWeekdayInCalendar]


SCLScheduleTimeFormatter : NSFormatter /usr/lib/libobjc.A.dylib
  // instance methods
  -[SCLScheduleTimeFormatter stringForObjectValue:]
  -[SCLScheduleTimeFormatter init]
  -[SCLScheduleTimeFormatter .cxx_destruct]
  -[SCLScheduleTimeFormatter stringForScheduleTime:]


SCLTimeIntervalsFormatter : NSFormatter /usr/lib/libobjc.A.dylib
 @property  SCLScheduleIntervalFormatter *intervalFormatter
 @property  NSListFormatter *listFormatter
 @property  NSLocale *locale
 @property  BOOL prefersHoursOnly
 @property  unsigned long intervalFormattingStyle

  // instance methods
  -[SCLTimeIntervalsFormatter stringForObjectValue:]
  -[SCLTimeIntervalsFormatter init]
  -[SCLTimeIntervalsFormatter setLocale:]
  -[SCLTimeIntervalsFormatter locale]
  -[SCLTimeIntervalsFormatter .cxx_destruct]
  -[SCLTimeIntervalsFormatter setPrefersHoursOnly:]
  -[SCLTimeIntervalsFormatter stringFromTimeIntervals:]
  -[SCLTimeIntervalsFormatter listFormatter]
  -[SCLTimeIntervalsFormatter intervalFormatter]
  -[SCLTimeIntervalsFormatter prefersHoursOnly]
  -[SCLTimeIntervalsFormatter intervalFormattingStyle]
  -[SCLTimeIntervalsFormatter setIntervalFormattingStyle:]


SCLTransportService : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate, IDSServiceDelegatePrivate>
 @property  NSHashTable *transportControllers
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *targetQueue
 @property  IDSService *service
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLTransportService service:account:identifier:fromID:hasBeenDeliveredWithContext:]
  -[SCLTransportService targetQueue]
  -[SCLTransportService service:account:incomingUnhandledProtobuf:fromID:context:]
  -[SCLTransportService .cxx_destruct]
  -[SCLTransportService service:account:identifier:didSendWithSuccess:error:context:]
  -[SCLTransportService service]
  -[SCLTransportService queue]
  -[SCLTransportService start]
  -[SCLTransportService transportControllers]
  -[SCLTransportService transportControllerForDevice:]
  -[SCLTransportService initWithTargetQueue:service:]
  -[SCLTransportService addTransportController:]
  -[SCLTransportService removeTransportController:]
  -[SCLTransportService sendProtobuf:toDevice:options:identifier:error:]


SCLSuppressSchoolModeAssertion : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *explanation
 @property  BOOL valid

  // instance methods
  -[SCLSuppressSchoolModeAssertion explanation]
  -[SCLSuppressSchoolModeAssertion connectionInvalidated]
  -[SCLSuppressSchoolModeAssertion .cxx_destruct]
  -[SCLSuppressSchoolModeAssertion initWithExplanation:]
  -[SCLSuppressSchoolModeAssertion acquireWithInvalidationHandler:]
  -[SCLSuppressSchoolModeAssertion isValid]
  -[SCLSuppressSchoolModeAssertion connectionInterrupted]
  -[SCLSuppressSchoolModeAssertion acquireWithError:]
  -[SCLSuppressSchoolModeAssertion invalidate]


SCLSchoolMode : NSObject /usr/lib/libSystem.B.dylib <SCLSchoolModeXPCClientDelegate>
 @property  unsigned long resumeState
 @property  NSString *identifier
 @property  BOOL loaded
 @property  SCLState *state
 @property  SCLScheduleSettings *scheduleSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolMode initWithIdentifier:delegate:]
  -[SCLSchoolMode init]
  -[SCLSchoolMode resume]
  -[SCLSchoolMode dealloc]
  -[SCLSchoolMode .cxx_destruct]
  -[SCLSchoolMode initWithIdentifier:]
  -[SCLSchoolMode identifier]
  -[SCLSchoolMode initWithConfiguration:]
  -[SCLSchoolMode state]
  -[SCLSchoolMode isLoaded]
  -[SCLSchoolMode dumpState]
  -[SCLSchoolMode delegate]
  -[SCLSchoolMode scheduleSettings]
  -[SCLSchoolMode setActive:completion:]
  -[SCLSchoolMode fetchRecentUnlockHistoryItemsWithCompletion:]
  -[SCLSchoolMode addUnlockHistoryItem:completion:]
  -[SCLSchoolMode deleteHistoryWithCompletion:]
  -[SCLSchoolMode noteSignificantUserInteraction]
  -[SCLSchoolMode triggerRemoteSync]
  -[SCLSchoolMode client:didUpdateToState:fromState:]
  -[SCLSchoolMode client:didLoadScheduleSettings:]
  -[SCLSchoolMode client:didUpdateScheduleSettings:]
  -[SCLSchoolMode clientDidChangeUnlockHistory:]
  -[SCLSchoolMode applyScheduleSettings:completion:]
  -[SCLSchoolMode initWithIdentifier:pairingID:delegate:]
  -[SCLSchoolMode resumeState]
  -[SCLSchoolMode setResumeState:]
  -[SCLSchoolMode _assertQueueIfReady]


SCLSchoolModeConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSXPCListenerEndpoint *testingEndpoint
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *targetQueue
 @property  <SCLSchoolModeDelegate> *delegate
 @property  NSUUID *pairingID
 @property  BOOL loadsSynchronously

  // instance methods
  -[SCLSchoolModeConfiguration copyWithZone:]
  -[SCLSchoolModeConfiguration init]
  -[SCLSchoolModeConfiguration targetQueue]
  -[SCLSchoolModeConfiguration setTargetQueue:]
  -[SCLSchoolModeConfiguration .cxx_destruct]
  -[SCLSchoolModeConfiguration pairingID]
  -[SCLSchoolModeConfiguration setPairingID:]
  -[SCLSchoolModeConfiguration setIdentifier:]
  -[SCLSchoolModeConfiguration identifier]
  -[SCLSchoolModeConfiguration setLoadsSynchronously:]
  -[SCLSchoolModeConfiguration setDelegate:]
  -[SCLSchoolModeConfiguration loadsSynchronously]
  -[SCLSchoolModeConfiguration delegate]
  -[SCLSchoolModeConfiguration testingEndpoint]
  -[SCLSchoolModeConfiguration setTestingEndpoint:]


SCLUnlockHistoryItem : NSObject /usr/lib/libSystem.B.dylib <NSCoding, NSSecureCoding>
 @property  NSDateInterval *unlockedInterval
 @property  NSCalendar *calendar
 @property  NSTimeZone *timeZone
 @property  SCLScheduleTime *scheduleStartTime
 @property  SCLScheduleTime *scheduleEndTime
 @property  SCLScheduleRecurrence *effectiveRecurrence

  // class methods
  +[SCLUnlockHistoryItem supportsSecureCoding]

  // instance methods
  -[SCLUnlockHistoryItem timeZone]
  -[SCLUnlockHistoryItem .cxx_destruct]
  -[SCLUnlockHistoryItem calendar]
  -[SCLUnlockHistoryItem encodeWithCoder:]
  -[SCLUnlockHistoryItem isEqual:]
  -[SCLUnlockHistoryItem initWithCoder:]
  -[SCLUnlockHistoryItem unlockedInterval]
  -[SCLUnlockHistoryItem scheduleStartTime]
  -[SCLUnlockHistoryItem scheduleEndTime]
  -[SCLUnlockHistoryItem effectiveRecurrence]
  -[SCLUnlockHistoryItem initWithInterval:calendar:timeZone:startTime:endTime:]
  -[SCLUnlockHistoryItem _loadEffectiveRecurrence]
  -[SCLUnlockHistoryItem initWithInterval:calendar:timeZone:]


SCLUnlockEvent : NSManagedObject /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
 @property  NSDate *startDate
 @property  short duration
 @property  NSString *calendarIdentifier
 @property  NSString *timeZoneName
 @property  NSUUID *identifier
 @property  short scheduleStartHour
 @property  short scheduleStartMinute
 @property  short scheduleEndHour
 @property  short scheduleEndMinute

  // class methods
  +[SCLUnlockEvent fetchRequest]


SCLSchedulingParameters : NSObject /usr/lib/libSystem.B.dylib <SCLSchedulingParameters, NSCopying>
 @property  NSCalendar *calendar
 @property  NSDate *evaluationDate
 @property  SCLScheduleSettings *scheduleSettings
 @property  BOOL suppressed
 @property  unsigned long activationSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchedulingParameters copyWithZone:]
  -[SCLSchedulingParameters .cxx_destruct]
  -[SCLSchedulingParameters calendar]
  -[SCLSchedulingParameters setCalendar:]
  -[SCLSchedulingParameters isSuppressed]
  -[SCLSchedulingParameters scheduleSettings]
  -[SCLSchedulingParameters setScheduleSettings:]
  -[SCLSchedulingParameters evaluationDate]
  -[SCLSchedulingParameters setEvaluationDate:]
  -[SCLSchedulingParameters activationSetting]
  -[SCLSchedulingParameters setActivationSetting:]
  -[SCLSchedulingParameters setSuppressed:]


SCLSchedulingEngine : NSObject /usr/lib/libSystem.B.dylib
 @property  SCLSchedulingParameters *schedulingParameters
 @property  <SCLSchedulingEngineDelegate> *delegate
 @property  SCLState *state
 @property  NSDate *lastEvaluationDate
 @property  NSDate *nextEvaluationDate

  // instance methods
  -[SCLSchedulingEngine .cxx_destruct]
  -[SCLSchedulingEngine setDelegate:]
  -[SCLSchedulingEngine state]
  -[SCLSchedulingEngine delegate]
  -[SCLSchedulingEngine _evaluateChangeFromParameters:toParameters:]
  -[SCLSchedulingEngine schedulingParameters]
  -[SCLSchedulingEngine updateParametersWithBlock:]
  -[SCLSchedulingEngine initWithParametersBlock:shouldStartManuallyActive:]
  -[SCLSchedulingEngine reevaluateStateAtDate:]
  -[SCLSchedulingEngine lastEvaluationDate]
  -[SCLSchedulingEngine nextEvaluationDate]
  -[SCLSchedulingEngine setSchedulingParameters:]


SCLSchoolModeServer : NSObject /usr/lib/libSystem.B.dylib <SCLSchedulingEngineDelegate, SCLSuppressSchoolModeAssertionManagerObserver>
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *targetQueue
 @property  int timeChangeToken
 @property  SCLSchedulingEngine *schedulingEngine
 @property  NSObject<OS_dispatch_source> *timerSource
 @property  SCLState *currentState
 @property  SCLSuppressSchoolModeAssertionManager *suppressionManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolModeServer currentState]
  -[SCLSchoolModeServer _scheduleTimerForDate:]
  -[SCLSchoolModeServer targetQueue]
  -[SCLSchoolModeServer setTargetQueue:]
  -[SCLSchoolModeServer timerSource]
  -[SCLSchoolModeServer .cxx_destruct]
  -[SCLSchoolModeServer observers]
  -[SCLSchoolModeServer setQueue:]
  -[SCLSchoolModeServer handleSignificantTimeChange]
  -[SCLSchoolModeServer handleLocaleChange]
  -[SCLSchoolModeServer setActive:]
  -[SCLSchoolModeServer queue]
  -[SCLSchoolModeServer removeObserver:]
  -[SCLSchoolModeServer timerFired]
  -[SCLSchoolModeServer setTimerSource:]
  -[SCLSchoolModeServer addObserver:]
  -[SCLSchoolModeServer invalidate]
  -[SCLSchoolModeServer schedulingEngine:didUpdateState:fromState:nextEvaluationDate:]
  -[SCLSchoolModeServer schedulingEngine]
  -[SCLSchoolModeServer setTimeChangeToken:]
  -[SCLSchoolModeServer suppressionManager]
  -[SCLSchoolModeServer configureParameters:forSuppressionStatus:]
  -[SCLSchoolModeServer setSchedulingEngine:]
  -[SCLSchoolModeServer timeChangeToken]
  -[SCLSchoolModeServer assertionManager:didUpdateAssertionsStatus:]
  -[SCLSchoolModeServer initWithQueue:suppressionManager:]
  -[SCLSchoolModeServer startWithScheduleSettings:shouldStartManuallyActive:]
  -[SCLSchoolModeServer applySchedule:]


SCLSchedule : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSArray *uniformTimeIntervals
 @property  BOOL valid
 @property  BOOL empty
 @property  long long scheduledDays
 @property  NSArray *recurrences

  // class methods
  +[SCLSchedule supportsSecureCoding]

  // instance methods
  -[SCLSchedule copyWithZone:]
  -[SCLSchedule recurrences]
  -[SCLSchedule encodeWithCoder:]
  -[SCLSchedule isValid]
  -[SCLSchedule isEqual:]
  -[SCLSchedule isEmpty]
  -[SCLSchedule mutableCopyWithZone:]
  -[SCLSchedule initWithCoder:]
  -[SCLSchedule recurrencesForDay:]
  -[SCLSchedule isScheduledForDay:]
  -[SCLSchedule timeIntervalsForDay:]
  -[SCLSchedule scheduledDays]
  -[SCLSchedule startTimeForDay:]
  -[SCLSchedule endTimeForDay:]
  -[SCLSchedule uniformTimeIntervals]


SCLTransportController : NSObject /usr/lib/libSystem.B.dylib <SCLSettingsSyncTransport>
 @property  NRDevice *NRDevice
 @property  NRPairedDeviceRegistry *deviceRegistry
 @property  IDSService *service
 @property  NSString *IDSDeviceIdentifier
 @property  IDSDevice *device
 @property  SCLTransportService *transportService
 @property  <SCLTransportControllerDelegate> *delegate
 @property  SCLSettingsSyncCoordinator *settingsSyncCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLTransportController device]
  -[SCLTransportController deviceRegistry]
  -[SCLTransportController .cxx_destruct]
  -[SCLTransportController service]
  -[SCLTransportController setDelegate:]
  -[SCLTransportController delegate]
  -[SCLTransportController setTransportService:]
  -[SCLTransportController IDSDeviceIdentifier]
  -[SCLTransportController service:incomingProtobuf:fromID:context:]
  -[SCLTransportController service:identifier:didSendWithSuccess:error:]
  -[SCLTransportController service:didDeliverMessageWithIdentifier:]
  -[SCLTransportController applySchedule:]
  -[SCLTransportController NRDevice]
  -[SCLTransportController handleIncomingSchedule:forType:]
  -[SCLTransportController handleIncomingHistoryItem:]
  -[SCLTransportController handleRemoteScheduleSettingsRequest]
  -[SCLTransportController settingsSyncCoordinator]
  -[SCLTransportController transportService]
  -[SCLTransportController sendSchedule:identifier:error:]
  -[SCLTransportController initWithNRDevice:deviceRegistry:service:deviceIdentifier:]
  -[SCLTransportController addUnlockHistoryItem:]
  -[SCLTransportController requestRemoteSettings]
  -[SCLTransportController setSettingsSyncCoordinator:]


SCLState : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL active
 @property  BOOL scheduleEnabled
 @property  BOOL inSchedule
 @property  unsigned long activeState

  // class methods
  +[SCLState supportsSecureCoding]

  // instance methods
  -[SCLState copyWithZone:]
  -[SCLState encodeWithCoder:]
  -[SCLState isActive]
  -[SCLState isEqual:]
  -[SCLState initWithCoder:]
  -[SCLState initWithActiveState:scheduleEnabled:inSchedule:]
  -[SCLState activeState]
  -[SCLState isScheduleEnabled]
  -[SCLState isInSchedule]
  -[SCLState initWithActive:scheduleEnabled:inSchedule:]


SCLPBScheduleRequestResponse : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasScheduleSettings
 @property  SCLPBScheduleSettings *scheduleSettings

  // instance methods
  -[SCLPBScheduleRequestResponse copyWithZone:]
  -[SCLPBScheduleRequestResponse .cxx_destruct]
  -[SCLPBScheduleRequestResponse readFrom:]
  -[SCLPBScheduleRequestResponse writeTo:]
  -[SCLPBScheduleRequestResponse isEqual:]
  -[SCLPBScheduleRequestResponse copyTo:]
  -[SCLPBScheduleRequestResponse dictionaryRepresentation]
  -[SCLPBScheduleRequestResponse mergeFrom:]
  -[SCLPBScheduleRequestResponse scheduleSettings]
  -[SCLPBScheduleRequestResponse setScheduleSettings:]
  -[SCLPBScheduleRequestResponse hasScheduleSettings]


SCLPBScheduleRecurrence : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasTimeInterval
 @property  SCLPBTimeInterval *timeInterval
 @property  BOOL hasDay
 @property  int day

  // instance methods
  -[SCLPBScheduleRecurrence copyWithZone:]
  -[SCLPBScheduleRecurrence day]
  -[SCLPBScheduleRecurrence setDay:]
  -[SCLPBScheduleRecurrence timeInterval]
  -[SCLPBScheduleRecurrence hasDay]
  -[SCLPBScheduleRecurrence .cxx_destruct]
  -[SCLPBScheduleRecurrence readFrom:]
  -[SCLPBScheduleRecurrence writeTo:]
  -[SCLPBScheduleRecurrence isEqual:]
  -[SCLPBScheduleRecurrence hasTimeInterval]
  -[SCLPBScheduleRecurrence setHasDay:]
  -[SCLPBScheduleRecurrence copyTo:]
  -[SCLPBScheduleRecurrence dictionaryRepresentation]
  -[SCLPBScheduleRecurrence mergeFrom:]
  -[SCLPBScheduleRecurrence setTimeInterval:]
  -[SCLPBScheduleRecurrence dayAsString:]
  -[SCLPBScheduleRecurrence StringAsDay:]


SCLPBScheduleRequest : PBRequest /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
  // instance methods
  -[SCLPBScheduleRequest copyWithZone:]
  -[SCLPBScheduleRequest readFrom:]
  -[SCLPBScheduleRequest writeTo:]
  -[SCLPBScheduleRequest isEqual:]
  -[SCLPBScheduleRequest copyTo:]
  -[SCLPBScheduleRequest dictionaryRepresentation]
  -[SCLPBScheduleRequest mergeFrom:]


SCLSchoolModeCoordinator : NSObject /usr/lib/libSystem.B.dylib <SCLTransportControllerDelegate, SCLSchoolModeServerObserver>
 @property  NSMutableSet *clients
 @property  NSURL *directoryURL
 @property  NSURL *scheduleURL
 @property  SCLUnlockHistoryItem *pendingUnlockItem
 @property  SCLPersistentSettings *persistentSettings
 @property  SCLSettingsSyncCoordinator *settingsSyncCoordinator
 @property  unsigned long stateHandle
 @property  SCLSchoolModeCoordinatorConfiguration *configuration
 @property  SCLState *currentState
 @property  SCLScheduleSettings *scheduleSettings
 @property  BOOL ready
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolModeCoordinator removeClient:]
  -[SCLSchoolModeCoordinator addClient:]
  -[SCLSchoolModeCoordinator clients]
  -[SCLSchoolModeCoordinator _configuration]
  -[SCLSchoolModeCoordinator isReady]
  -[SCLSchoolModeCoordinator currentState]
  -[SCLSchoolModeCoordinator stateHandle]
  -[SCLSchoolModeCoordinator dealloc]
  -[SCLSchoolModeCoordinator .cxx_destruct]
  -[SCLSchoolModeCoordinator server]
  -[SCLSchoolModeCoordinator setActive:]
  -[SCLSchoolModeCoordinator idsDevice]
  -[SCLSchoolModeCoordinator configuration]
  -[SCLSchoolModeCoordinator directoryURL]
  -[SCLSchoolModeCoordinator initWithConfiguration:]
  -[SCLSchoolModeCoordinator setStateHandle:]
  -[SCLSchoolModeCoordinator nrDevice]
  -[SCLSchoolModeCoordinator scheduleSettings]
  -[SCLSchoolModeCoordinator fetchRecentUnlockHistoryItemsWithCompletion:]
  -[SCLSchoolModeCoordinator addUnlockHistoryItem:completion:]
  -[SCLSchoolModeCoordinator deleteHistoryWithCompletion:]
  -[SCLSchoolModeCoordinator server:didUpdateState:fromState:]
  -[SCLSchoolModeCoordinator settingsSyncCoordinator]
  -[SCLSchoolModeCoordinator transportController:didReceiveSchedule:forInitialSync:]
  -[SCLSchoolModeCoordinator transportController:didReceiveUnlockHistoryItem:]
  -[SCLSchoolModeCoordinator currentScheduleSettingsForTransportController:]
  -[SCLSchoolModeCoordinator setSettingsSyncCoordinator:]
  -[SCLSchoolModeCoordinator transportController]
  -[SCLSchoolModeCoordinator _createSchoolTimeDirectoryIfNeeded]
  -[SCLSchoolModeCoordinator _registerForFirstUnlockIfNeeded]
  -[SCLSchoolModeCoordinator stateDataWithHints:]
  -[SCLSchoolModeCoordinator persistentSettings]
  -[SCLSchoolModeCoordinator scheduleURL]
  -[SCLSchoolModeCoordinator _requestRemoteScheduleSettingsIfNeeded]
  -[SCLSchoolModeCoordinator _lock_loadPersistentSchedule]
  -[SCLSchoolModeCoordinator historyStore]
  -[SCLSchoolModeCoordinator activateSettingsSyncCoordinatorWithSettings:]
  -[SCLSchoolModeCoordinator _updateClientsWithSchedule:notify:]
  -[SCLSchoolModeCoordinator _classCDataIsAvailable]
  -[SCLSchoolModeCoordinator applySchedule:forInitialSync:error:]
  -[SCLSchoolModeCoordinator _lock_updatePersistentSettingsWithBlock:]
  -[SCLSchoolModeCoordinator _noteHistoryDidUpdate]
  -[SCLSchoolModeCoordinator _persistSettings:]
  -[SCLSchoolModeCoordinator pendingUnlockItem]
  -[SCLSchoolModeCoordinator setPendingUnlockItem:]
  -[SCLSchoolModeCoordinator applySchedule:error:]
  -[SCLSchoolModeCoordinator purgeOldHistoryItems]
  -[SCLSchoolModeCoordinator setPersistentSettings:]


SCLSchoolModeCoordinatorConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NRDevice *NRDevice
 @property  IDSDevice *idsDevice
 @property  SCLTransportController *transportController
 @property  SCLSchoolModeServer *server
 @property  SCLUnlockHistoryPersistentStore *historyStore
 @property  NSURL *directoryURL
 @property  BOOL sendsRemoteScheduleSettings
 @property  BOOL sendsRemoteHistoryItems
 @property  BOOL manuallyManagedOnly
 @property  NSObject<OS_dispatch_queue> *targetQueue

  // instance methods
  -[SCLSchoolModeCoordinatorConfiguration copyWithZone:]
  -[SCLSchoolModeCoordinatorConfiguration targetQueue]
  -[SCLSchoolModeCoordinatorConfiguration setTargetQueue:]
  -[SCLSchoolModeCoordinatorConfiguration .cxx_destruct]
  -[SCLSchoolModeCoordinatorConfiguration server]
  -[SCLSchoolModeCoordinatorConfiguration setServer:]
  -[SCLSchoolModeCoordinatorConfiguration setIdsDevice:]
  -[SCLSchoolModeCoordinatorConfiguration setDirectoryURL:]
  -[SCLSchoolModeCoordinatorConfiguration idsDevice]
  -[SCLSchoolModeCoordinatorConfiguration directoryURL]
  -[SCLSchoolModeCoordinatorConfiguration NRDevice]
  -[SCLSchoolModeCoordinatorConfiguration transportController]
  -[SCLSchoolModeCoordinatorConfiguration sendsRemoteScheduleSettings]
  -[SCLSchoolModeCoordinatorConfiguration historyStore]
  -[SCLSchoolModeCoordinatorConfiguration sendsRemoteHistoryItems]
  -[SCLSchoolModeCoordinatorConfiguration setNRDevice:]
  -[SCLSchoolModeCoordinatorConfiguration setTransportController:]
  -[SCLSchoolModeCoordinatorConfiguration setHistoryStore:]
  -[SCLSchoolModeCoordinatorConfiguration setSendsRemoteHistoryItems:]
  -[SCLSchoolModeCoordinatorConfiguration setSendsRemoteScheduleSettings:]
  -[SCLSchoolModeCoordinatorConfiguration isManuallyManagedOnly]
  -[SCLSchoolModeCoordinatorConfiguration setManuallyManagedOnly:]


SCLTimeInterval : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  SCLScheduleTime *startTime
 @property  SCLScheduleTime *endTime

  // class methods
  +[SCLTimeInterval supportsSecureCoding]

  // instance methods
  -[SCLTimeInterval endTime]
  -[SCLTimeInterval copyWithZone:]
  -[SCLTimeInterval .cxx_destruct]
  -[SCLTimeInterval encodeWithCoder:]
  -[SCLTimeInterval isEqual:]
  -[SCLTimeInterval initWithStartTime:endTime:]
  -[SCLTimeInterval crossesDayBoundary]
  -[SCLTimeInterval initWithCoder:]
  -[SCLTimeInterval startTime]
  -[SCLTimeInterval intersectsTimeInterval:]
  -[SCLTimeInterval containsScheduleTime:]


SCLPBTimeInterval : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasStartTime
 @property  SCLPBScheduleTime *startTime
 @property  BOOL hasEndTime
 @property  SCLPBScheduleTime *endTime

  // instance methods
  -[SCLPBTimeInterval endTime]
  -[SCLPBTimeInterval copyWithZone:]
  -[SCLPBTimeInterval setEndTime:]
  -[SCLPBTimeInterval hasStartTime]
  -[SCLPBTimeInterval setStartTime:]
  -[SCLPBTimeInterval .cxx_destruct]
  -[SCLPBTimeInterval hasEndTime]
  -[SCLPBTimeInterval readFrom:]
  -[SCLPBTimeInterval writeTo:]
  -[SCLPBTimeInterval isEqual:]
  -[SCLPBTimeInterval copyTo:]
  -[SCLPBTimeInterval dictionaryRepresentation]
  -[SCLPBTimeInterval mergeFrom:]
  -[SCLPBTimeInterval startTime]


SCLPersistentSettings : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  SCLScheduleSettings *scheduleSettings
 @property  BOOL manualSchoolModeEnabled

  // class methods
  +[SCLPersistentSettings supportsSecureCoding]

  // instance methods
  -[SCLPersistentSettings copyWithZone:]
  -[SCLPersistentSettings init]
  -[SCLPersistentSettings .cxx_destruct]
  -[SCLPersistentSettings encodeWithCoder:]
  -[SCLPersistentSettings isEqual:]
  -[SCLPersistentSettings initWithCoder:]
  -[SCLPersistentSettings scheduleSettings]
  -[SCLPersistentSettings setScheduleSettings:]
  -[SCLPersistentSettings isManualSchoolModeEnabled]
  -[SCLPersistentSettings setManualSchoolModeEnabled:]


SCLScheduleSettings : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  BOOL enabled
 @property  unsigned long version
 @property  SCLSchedule *schedule

  // class methods
  +[SCLScheduleSettings supportsSecureCoding]
  +[SCLScheduleSettings version]

  // instance methods
  -[SCLScheduleSettings copyWithZone:]
  -[SCLScheduleSettings init]
  -[SCLScheduleSettings .cxx_destruct]
  -[SCLScheduleSettings encodeWithCoder:]
  -[SCLScheduleSettings isEnabled]
  -[SCLScheduleSettings schedule]
  -[SCLScheduleSettings isEqual:]
  -[SCLScheduleSettings version]
  -[SCLScheduleSettings mutableCopyWithZone:]
  -[SCLScheduleSettings initWithCoder:]
  -[SCLScheduleSettings dateIntervalForActiveScheduleOnOrAfterDate:calendar:]
  -[SCLScheduleSettings isActiveAtDate:calendar:]
  -[SCLScheduleSettings startTimeForDay:]
  -[SCLScheduleSettings endTimeForDay:]
  -[SCLScheduleSettings recurrenceForActiveScheduleOnOrAfterDate:calendar:]
  -[SCLScheduleSettings initWithSchoolModeScheduleSettings:]


SCLMutableScheduleSettings : SCLScheduleSettings
 @property  BOOL enabled
 @property  SCLSchedule *schedule

  // instance methods
  -[SCLMutableScheduleSettings copyWithZone:]
  -[SCLMutableScheduleSettings setSchedule:]
  -[SCLMutableScheduleSettings setEnabled:]


SCLScheduleIntervalFormatter : NSFormatter /usr/lib/libobjc.A.dylib
 @property  NSDateFormatter *shortFormatter
 @property  NSDateIntervalFormatter *briefFormatter
 @property  NSBundle *bundle
 @property  NSString *table
 @property  NSCalendar *referenceCalendar
 @property  NSTimeZone *referenceTimeZone
 @property  unsigned long formattingStyle
 @property  BOOL coalescesAMPMSymbols
 @property  BOOL prefersHoursOnly
 @property  NSLocale *locale

  // instance methods
  -[SCLScheduleIntervalFormatter stringForObjectValue:]
  -[SCLScheduleIntervalFormatter table]
  -[SCLScheduleIntervalFormatter bundle]
  -[SCLScheduleIntervalFormatter init]
  -[SCLScheduleIntervalFormatter setLocale:]
  -[SCLScheduleIntervalFormatter locale]
  -[SCLScheduleIntervalFormatter .cxx_destruct]
  -[SCLScheduleIntervalFormatter setTable:]
  -[SCLScheduleIntervalFormatter formattingStyle]
  -[SCLScheduleIntervalFormatter setBundle:]
  -[SCLScheduleIntervalFormatter setFormattingStyle:]
  -[SCLScheduleIntervalFormatter stringFromTimeInterval:]
  -[SCLScheduleIntervalFormatter referenceCalendar]
  -[SCLScheduleIntervalFormatter setPrefersHoursOnly:]
  -[SCLScheduleIntervalFormatter prefersHoursOnly]
  -[SCLScheduleIntervalFormatter setCoalescesAMPMSymbols:]
  -[SCLScheduleIntervalFormatter stringFromTime:toTime:]
  -[SCLScheduleIntervalFormatter newDateFormatterWithLocale:]
  -[SCLScheduleIntervalFormatter referenceTimeZone]
  -[SCLScheduleIntervalFormatter _stringForDateInterval:startComponents:endComponents:]
  -[SCLScheduleIntervalFormatter briefFormatter]
  -[SCLScheduleIntervalFormatter coalescesAMPMSymbols]
  -[SCLScheduleIntervalFormatter shortFormatter]
  -[SCLScheduleIntervalFormatter _shortIntervalFormat]
  -[SCLScheduleIntervalFormatter _stringForCoalescedAMPMSymbolsWithDateInterval:locale:startTimeComponents:endTimeComponents:]
  -[SCLScheduleIntervalFormatter setShortFormatter:]
  -[SCLScheduleIntervalFormatter setBriefFormatter:]
  -[SCLScheduleIntervalFormatter setReferenceCalendar:]
  -[SCLScheduleIntervalFormatter setReferenceTimeZone:]


SCLWatchServer : NSObject /usr/lib/libSystem.B.dylib
 @property  SCLSchoolModeManager *schoolModeManager

  // class methods
  +[SCLWatchServer sharedWatchServer]

  // instance methods
  -[SCLWatchServer run]
  -[SCLWatchServer .cxx_destruct]
  -[SCLWatchServer schoolModeManager]


SCLRecurrenceSchedule : SCLSchedule
  // class methods
  +[SCLRecurrenceSchedule supportsSecureCoding]
  +[SCLRecurrenceSchedule performBlockWithSharedFormatter:]

  // instance methods
  -[SCLRecurrenceSchedule init]
  -[SCLRecurrenceSchedule recurrences]
  -[SCLRecurrenceSchedule .cxx_destruct]
  -[SCLRecurrenceSchedule encodeWithCoder:]
  -[SCLRecurrenceSchedule isEqual:]
  -[SCLRecurrenceSchedule initWithCoder:]
  -[SCLRecurrenceSchedule initWithRecurrences:]
  -[SCLRecurrenceSchedule initWithTimeIntervals:repeatSchedule:]


SCLUnlockHistoryPersistentStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSManagedObjectContext *storeContext
 @property  NSURL *URL
 @property  NSPersistentContainer *persistentContainer

  // instance methods
  -[SCLUnlockHistoryPersistentStore persistentContainer]
  -[SCLUnlockHistoryPersistentStore initWithURL:]
  -[SCLUnlockHistoryPersistentStore dealloc]
  -[SCLUnlockHistoryPersistentStore .cxx_destruct]
  -[SCLUnlockHistoryPersistentStore URL]
  -[SCLUnlockHistoryPersistentStore insertItem:]
  -[SCLUnlockHistoryPersistentStore storeContext]
  -[SCLUnlockHistoryPersistentStore setStoreContext:]
  -[SCLUnlockHistoryPersistentStore loadStore]
  -[SCLUnlockHistoryPersistentStore recentHistoryItems]
  -[SCLUnlockHistoryPersistentStore deleteHistory:]
  -[SCLUnlockHistoryPersistentStore purgeOldItems]
  -[SCLUnlockHistoryPersistentStore recentItemsThresholdDate]


SCLSchoolModeServerSettings : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  SCLScheduleSettings *scheduleSettings
 @property  SCLState *state
 @property  BOOL loaded

  // class methods
  +[SCLSchoolModeServerSettings supportsSecureCoding]

  // instance methods
  -[SCLSchoolModeServerSettings copyWithZone:]
  -[SCLSchoolModeServerSettings setLoaded:]
  -[SCLSchoolModeServerSettings setState:]
  -[SCLSchoolModeServerSettings .cxx_destruct]
  -[SCLSchoolModeServerSettings initWithSettings:]
  -[SCLSchoolModeServerSettings encodeWithCoder:]
  -[SCLSchoolModeServerSettings state]
  -[SCLSchoolModeServerSettings isLoaded]
  -[SCLSchoolModeServerSettings initWithCoder:]
  -[SCLSchoolModeServerSettings scheduleSettings]
  -[SCLSchoolModeServerSettings setScheduleSettings:]


SCLDailySchedule : SCLSchedule
 @property  NSMutableDictionary *dayMap

  // class methods
  +[SCLDailySchedule supportsSecureCoding]

  // instance methods
  -[SCLDailySchedule copyWithZone:]
  -[SCLDailySchedule init]
  -[SCLDailySchedule recurrences]
  -[SCLDailySchedule .cxx_destruct]
  -[SCLDailySchedule encodeWithCoder:]
  -[SCLDailySchedule dayMap]
  -[SCLDailySchedule isEqual:]
  -[SCLDailySchedule mutableCopyWithZone:]
  -[SCLDailySchedule initWithCoder:]
  -[SCLDailySchedule initWithSchedule:]
  -[SCLDailySchedule startTimeForDay:]
  -[SCLDailySchedule endTimeForDay:]
  -[SCLDailySchedule scheduleForDay:]
  -[SCLDailySchedule setDayMap:]


SCLMutableDailySchedule : SCLDailySchedule
  // class methods
  +[SCLMutableDailySchedule supportsSecureCoding]

  // instance methods
  -[SCLMutableDailySchedule copyWithZone:]
  -[SCLMutableDailySchedule setStartTime:endTime:forDay:]
  -[SCLMutableDailySchedule removeScheduleForDay:]


SCLSettingsSyncCoordinator : NSObject /usr/lib/libSystem.B.dylib <SCLSettingsSyncStateMachineDelegate>
 @property  SCLSettingsSyncStateMachine *stateMachine
 @property  NSObject<OS_dispatch_source> *timerSource
 @property  NSURL *contextURL
 @property  NSString *xpcActivityName
 @property  SCLScheduleSettings *schedule
 @property  <SCLSettingsSyncTransport> *transport
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSettingsSyncCoordinator setTransport:]
  -[SCLSettingsSyncCoordinator transport]
  -[SCLSettingsSyncCoordinator stateMachine]
  -[SCLSettingsSyncCoordinator activate]
  -[SCLSettingsSyncCoordinator timerSource]
  -[SCLSettingsSyncCoordinator .cxx_destruct]
  -[SCLSettingsSyncCoordinator schedule]
  -[SCLSettingsSyncCoordinator queue]
  -[SCLSettingsSyncCoordinator setTimerSource:]
  -[SCLSettingsSyncCoordinator beginActivity:]
  -[SCLSettingsSyncCoordinator applySchedule:]
  -[SCLSettingsSyncCoordinator didDeliverMessageWithIdentifier:]
  -[SCLSettingsSyncCoordinator identifier:didSendWithSuccess:error:]
  -[SCLSettingsSyncCoordinator initWithFileURL:pairingID:schedule:queue:]
  -[SCLSettingsSyncCoordinator registerActivityWithCriteria:]
  -[SCLSettingsSyncCoordinator xpcActivityName]
  -[SCLSettingsSyncCoordinator contextURL]
  -[SCLSettingsSyncCoordinator commitTimerFired]
  -[SCLSettingsSyncCoordinator performSyncForStateMachine:]
  -[SCLSettingsSyncCoordinator stateMachine:scheduleRetryWithActivityCriteria:]
  -[SCLSettingsSyncCoordinator stateMachine:scheduleCommitTimerWithInterval:]
  -[SCLSettingsSyncCoordinator stateMachine:didTransitionFromState:toState:]
  -[SCLSettingsSyncCoordinator cancelRetryActivityForStateMachine:]
  -[SCLSettingsSyncCoordinator cancelCommitTimerForStateMachine:]
  -[SCLSettingsSyncCoordinator noteSignificantUserInteractionOccured]


SCLScheduleAttributes : NSObject /usr/lib/libSystem.B.dylib
 @property  SCLSchedule *schedule
 @property  unsigned long validationOptions
 @property  BOOL valid
 @property  NSError *validationError
 @property  long long scheduledDays
 @property  BOOL hasUniformIntervals
 @property  BOOL hasSingleIntervalPerDay

  // instance methods
  -[SCLScheduleAttributes .cxx_destruct]
  -[SCLScheduleAttributes isValid]
  -[SCLScheduleAttributes schedule]
  -[SCLScheduleAttributes validationError]
  -[SCLScheduleAttributes scheduledDays]
  -[SCLScheduleAttributes initWithSchedule:]
  -[SCLScheduleAttributes initWithSchedule:options:]
  -[SCLScheduleAttributes _prepareWithRecurrences:]
  -[SCLScheduleAttributes validationOptions]
  -[SCLScheduleAttributes hasUniformIntervals]
  -[SCLScheduleAttributes hasSingleIntervalPerDay]


SCLPBScheduleTime : PBCodable /System/Library/PrivateFrameworks/IDS.framework/IDS <NSCopying>
 @property  BOOL hasHour
 @property  unsigned int hour
 @property  BOOL hasMinute
 @property  unsigned int minute

  // instance methods
  -[SCLPBScheduleTime minute]
  -[SCLPBScheduleTime hour]
  -[SCLPBScheduleTime copyWithZone:]
  -[SCLPBScheduleTime setHasHour:]
  -[SCLPBScheduleTime setHasMinute:]
  -[SCLPBScheduleTime hasMinute]
  -[SCLPBScheduleTime hasHour]
  -[SCLPBScheduleTime readFrom:]
  -[SCLPBScheduleTime writeTo:]
  -[SCLPBScheduleTime setMinute:]
  -[SCLPBScheduleTime isEqual:]
  -[SCLPBScheduleTime copyTo:]
  -[SCLPBScheduleTime dictionaryRepresentation]
  -[SCLPBScheduleTime setHour:]
  -[SCLPBScheduleTime mergeFrom:]


SCLSuppressSchoolModeAssertionManager : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, SCLSuppressSchoolModeAssertionClientDelegate>
 @property  NSObject<OS_dispatch_queue> *targetQueue
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSXPCListener *listener
 @property  NSMutableSet *clients
 @property  NSMutableSet *acquiredClients
 @property  NSHashTable *observers
 @property  unsigned long stateHandle
 @property  unsigned long status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSuppressSchoolModeAssertionManager initWithTargetQueue:]
  -[SCLSuppressSchoolModeAssertionManager clients]
  -[SCLSuppressSchoolModeAssertionManager listener]
  -[SCLSuppressSchoolModeAssertionManager activate]
  -[SCLSuppressSchoolModeAssertionManager stateHandle]
  -[SCLSuppressSchoolModeAssertionManager targetQueue]
  -[SCLSuppressSchoolModeAssertionManager setListener:]
  -[SCLSuppressSchoolModeAssertionManager setTargetQueue:]
  -[SCLSuppressSchoolModeAssertionManager setObservers:]
  -[SCLSuppressSchoolModeAssertionManager dealloc]
  -[SCLSuppressSchoolModeAssertionManager .cxx_destruct]
  -[SCLSuppressSchoolModeAssertionManager observers]
  -[SCLSuppressSchoolModeAssertionManager setQueue:]
  -[SCLSuppressSchoolModeAssertionManager listener:shouldAcceptNewConnection:]
  -[SCLSuppressSchoolModeAssertionManager queue]
  -[SCLSuppressSchoolModeAssertionManager setClients:]
  -[SCLSuppressSchoolModeAssertionManager setStateHandle:]
  -[SCLSuppressSchoolModeAssertionManager clientDidInvalidate:]
  -[SCLSuppressSchoolModeAssertionManager removeObserver:]
  -[SCLSuppressSchoolModeAssertionManager addObserver:]
  -[SCLSuppressSchoolModeAssertionManager status]
  -[SCLSuppressSchoolModeAssertionManager _stateDataWithHints:]
  -[SCLSuppressSchoolModeAssertionManager acquiredClients]
  -[SCLSuppressSchoolModeAssertionManager performObserverBlock:]
  -[SCLSuppressSchoolModeAssertionManager clientDidAcquireAssertion:]
  -[SCLSuppressSchoolModeAssertionManager setAcquiredClients:]


SCLSuppressSchoolModeAssertionClient : NSObject /usr/lib/libSystem.B.dylib <SCLSuppressSchoolModeAssertionXPCServer>
 @property  BOOL acquired
 @property  NSString *explanation
 @property  BOOL entitled
 @property  <SCLSuppressSchoolModeAssertionClientDelegate> *delegate
 @property  NSXPCConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSuppressSchoolModeAssertionClient explanation]
  -[SCLSuppressSchoolModeAssertionClient .cxx_destruct]
  -[SCLSuppressSchoolModeAssertionClient initWithConnection:]
  -[SCLSuppressSchoolModeAssertionClient isEntitled]
  -[SCLSuppressSchoolModeAssertionClient connectionDidInvalidate]
  -[SCLSuppressSchoolModeAssertionClient isAcquired]
  -[SCLSuppressSchoolModeAssertionClient setDelegate:]
  -[SCLSuppressSchoolModeAssertionClient connection]
  -[SCLSuppressSchoolModeAssertionClient delegate]
  -[SCLSuppressSchoolModeAssertionClient setEntitled:]
  -[SCLSuppressSchoolModeAssertionClient setAcquired:]
  -[SCLSuppressSchoolModeAssertionClient acquireWithExplanation:UUID:completion:]


SCLScheduleTime : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  unsigned long hour
 @property  unsigned long minute
 @property  NSDateComponents *dateComponents

  // class methods
  +[SCLScheduleTime supportsSecureCoding]

  // instance methods
  -[SCLScheduleTime minute]
  -[SCLScheduleTime hour]
  -[SCLScheduleTime copyWithZone:]
  -[SCLScheduleTime init]
  -[SCLScheduleTime compare:]
  -[SCLScheduleTime encodeWithCoder:]
  -[SCLScheduleTime dateComponents]
  -[SCLScheduleTime initWithHour:minute:]
  -[SCLScheduleTime isEqual:]
  -[SCLScheduleTime mutableCopyWithZone:]
  -[SCLScheduleTime initWithCoder:]
  -[SCLScheduleTime initWithScheduleTime:]


SCLMutableScheduleTime : SCLScheduleTime
 @property  unsigned long hour
 @property  unsigned long minute

  // class methods
  +[SCLMutableScheduleTime supportsSecureCoding]

  // instance methods
  -[SCLMutableScheduleTime copyWithZone:]
  -[SCLMutableScheduleTime setMinute:]
  -[SCLMutableScheduleTime setHour:]


SCLSchoolModeClientProxy : NSObject /usr/lib/libSystem.B.dylib <SCLSchoolModeXPCServer>
 @property  NSUUID *pairingID
 @property  NSString *identifier
 @property  NSXPCConnection *connection
 @property  SCLSchoolModeCoordinator *coordinator
 @property  <SCLSchoolModeClientProxyDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolModeClientProxy coordinator]
  -[SCLSchoolModeClientProxy .cxx_destruct]
  -[SCLSchoolModeClientProxy setCoordinator:]
  -[SCLSchoolModeClientProxy pairingID]
  -[SCLSchoolModeClientProxy setPairingID:]
  -[SCLSchoolModeClientProxy setIdentifier:]
  -[SCLSchoolModeClientProxy identifier]
  -[SCLSchoolModeClientProxy initWithConnection:]
  -[SCLSchoolModeClientProxy setDelegate:]
  -[SCLSchoolModeClientProxy connection]
  -[SCLSchoolModeClientProxy dumpState]
  -[SCLSchoolModeClientProxy delegate]
  -[SCLSchoolModeClientProxy remoteClient]
  -[SCLSchoolModeClientProxy connectWithPairingID:identifier:completion:]
  -[SCLSchoolModeClientProxy applySchedule:completion:]
  -[SCLSchoolModeClientProxy setActive:completion:]
  -[SCLSchoolModeClientProxy fetchRecentUnlockHistoryItemsWithCompletion:]
  -[SCLSchoolModeClientProxy addUnlockHistoryItem:completion:]
  -[SCLSchoolModeClientProxy deleteHistoryWithCompletion:]
  -[SCLSchoolModeClientProxy noteSignificantUserInteraction]
  -[SCLSchoolModeClientProxy triggerRemoteSync]
  -[SCLSchoolModeClientProxy reconnectWithPairingID:identifier:]
  -[SCLSchoolModeClientProxy didUpdateScheduleSettings:notify:]
  -[SCLSchoolModeClientProxy unlockHistoryDidChange]
  -[SCLSchoolModeClientProxy didUpdateState:fromState:]
  -[SCLSchoolModeClientProxy serverSettings]
  -[SCLSchoolModeClientProxy sendServerSettings:]
  -[SCLSchoolModeClientProxy validateBooleanEntitlement:error:]
  -[SCLSchoolModeClientProxy validatePairing:]


SCLSchoolModeManager : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, SCLSchoolModeClientProxyDelegate>
 @property  NSMutableSet *clients
 @property  SCLSchoolModeManagerConfiguration *configuration
 @property  SCLTransportService *transportService
 @property  NSXPCListener *listener
 @property  unsigned long stateHandle
 @property  SCLSuppressSchoolModeAssertionManager *supppressionManager
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMapTable *coordinatorMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCLSchoolModeManager clients]
  -[SCLSchoolModeManager listener]
  -[SCLSchoolModeManager stateHandle]
  -[SCLSchoolModeManager dealloc]
  -[SCLSchoolModeManager .cxx_destruct]
  -[SCLSchoolModeManager listener:shouldAcceptNewConnection:]
  -[SCLSchoolModeManager activityCriteria]
  -[SCLSchoolModeManager queue]
  -[SCLSchoolModeManager configuration]
  -[SCLSchoolModeManager initWithConfiguration:]
  -[SCLSchoolModeManager setStateHandle:]
  -[SCLSchoolModeManager start]
  -[SCLSchoolModeManager transportService]
  -[SCLSchoolModeManager stateDataWithHints:]
  -[SCLSchoolModeManager clientProxyDidInvalidate:]
  -[SCLSchoolModeManager clientProxy:didConnectWithPairingID:]
  -[SCLSchoolModeManager coordinatorMap]
  -[SCLSchoolModeManager descriptionBuilderForNRDevice:]
  -[SCLSchoolModeManager supppressionManager]
  -[SCLSchoolModeManager loadPairedDevices]
  -[SCLSchoolModeManager _updateActivityRegistration]
  -[SCLSchoolModeManager handleDevicePairedNotification:]
  -[SCLSchoolModeManager handleDeviceUnpairedNotification:]
  -[SCLSchoolModeManager eligiblePairedDevices]
  -[SCLSchoolModeManager createControllerForDevice:]
  -[SCLSchoolModeManager isEligibleDevice:]
  -[SCLSchoolModeManager removeCoordinator:]
  -[SCLSchoolModeManager _handleActivityStarted:]


SCLSchoolModeManagerConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NRPairedDeviceRegistry *deviceRegistry
 @property  IDSService *service
 @property  BOOL managesSchoolTimeSession
 @property  BOOL allowsNonTinkerPairing
 @property  NSObject<OS_dispatch_workloop> *workloop

  // instance methods
  -[SCLSchoolModeManagerConfiguration copyWithZone:]
  -[SCLSchoolModeManagerConfiguration setService:]
  -[SCLSchoolModeManagerConfiguration setWorkloop:]
  -[SCLSchoolModeManagerConfiguration deviceRegistry]
  -[SCLSchoolModeManagerConfiguration .cxx_destruct]
  -[SCLSchoolModeManagerConfiguration service]
  -[SCLSchoolModeManagerConfiguration workloop]
  -[SCLSchoolModeManagerConfiguration setDeviceRegistry:]
  -[SCLSchoolModeManagerConfiguration setManagesSchoolTimeSession:]
  -[SCLSchoolModeManagerConfiguration setAllowsNonTinkerPairing:]
  -[SCLSchoolModeManagerConfiguration managesSchoolTimeSession]
  -[SCLSchoolModeManagerConfiguration allowsNonTinkerPairing]


SCLSettingsSyncContext : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  unsigned long syncStatus
 @property  NSString *messageIdentifier
 @property  NSError *error
 @property  NSArray *recoveryHistory

  // class methods
  +[SCLSettingsSyncContext supportsSecureCoding]

  // instance methods
  -[SCLSettingsSyncContext init]
  -[SCLSettingsSyncContext setError:]
  -[SCLSettingsSyncContext .cxx_destruct]
  -[SCLSettingsSyncContext encodeWithCoder:]
  -[SCLSettingsSyncContext messageIdentifier]
  -[SCLSettingsSyncContext setMessageIdentifier:]
  -[SCLSettingsSyncContext error]
  -[SCLSettingsSyncContext syncStatus]
  -[SCLSettingsSyncContext initWithCoder:]
  -[SCLSettingsSyncContext setSyncStatus:]
  -[SCLSettingsSyncContext clearRecoveryHistory]
  -[SCLSettingsSyncContext recoveryHistory]
  -[SCLSettingsSyncContext addRecoveryHistory:]


SCLSettingsSyncStateMachine : NSObject /usr/lib/libSystem.B.dylib
 @property  <SCLSettingsSyncStateMachineDelegate> *delegate
 @property  SCLSettingsSyncContext *context
 @property  SCLSettingsSyncErrorHandler *errorHandler
 @property  SCLSettingsSyncState *currentState
 @property  SCLSettingsSyncState *syncedState
 @property  SCLSettingsSyncState *pendingSendState
 @property  SCLSettingsSyncState *sendingState
 @property  SCLSettingsSyncState *sentState
 @property  SCLSettingsSyncState *failedState

  // instance methods
  -[SCLSettingsSyncStateMachine context]
  -[SCLSettingsSyncStateMachine transitionToState:]
  -[SCLSettingsSyncStateMachine currentState]
  -[SCLSettingsSyncStateMachine init]
  -[SCLSettingsSyncStateMachine activate]
  -[SCLSettingsSyncStateMachine errorHandler]
  -[SCLSettingsSyncStateMachine initWithContext:]
  -[SCLSettingsSyncStateMachine .cxx_destruct]
  -[SCLSettingsSyncStateMachine xpcActivityStarted]
  -[SCLSettingsSyncStateMachine setContext:]
  -[SCLSettingsSyncStateMachine setDelegate:]
  -[SCLSettingsSyncStateMachine significantUserInteractionOccurred]
  -[SCLSettingsSyncStateMachine performSync]
  -[SCLSettingsSyncStateMachine delegate]
  -[SCLSettingsSyncStateMachine cancelRetryActivity]
  -[SCLSettingsSyncStateMachine sentState]
  -[SCLSettingsSyncStateMachine settingsDidChange]
  -[SCLSettingsSyncStateMachine commitSettings]
  -[SCLSettingsSyncStateMachine enqueueFailedWithError:]
  -[SCLSettingsSyncStateMachine didEnqueueMessage:]
  -[SCLSettingsSyncStateMachine message:failedWithError:]
  -[SCLSettingsSyncStateMachine messageDidSend:]
  -[SCLSettingsSyncStateMachine messageWasDelivered:]
  -[SCLSettingsSyncStateMachine message:didFailToAcknowledgeWithError:]
  -[SCLSettingsSyncStateMachine pendingSendState]
  -[SCLSettingsSyncStateMachine scheduleCommitTimerWithInterval:]
  -[SCLSettingsSyncStateMachine cancelCommitTimer]
  -[SCLSettingsSyncStateMachine failedState]
  -[SCLSettingsSyncStateMachine sendingState]
  -[SCLSettingsSyncStateMachine syncedState]
  -[SCLSettingsSyncStateMachine scheduleRetryWithActivityCriteria:]
  -[SCLSettingsSyncStateMachine _isRelevantMessage:]


(SchoolTime)
	// instance methods
	-[(SchoolTime) SCL_enumerateWeekdaysUsingBlock:]
	-[(SchoolTime) SCL_orderedWeekdays]
	-[(SchoolTime) SCL_nonWeekendDays]

NSDateInterval(SCLScheduling)
	// class methods
	+[NSDateInterval(SCLScheduling) SCL_dateIntervalForActiveScheduleOnOrAfterDate:calendar:startComponents:endComponents:]

01 00 0700 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0400 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 0400 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0400 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSServiceDelegateProperties 
01 00 0500 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateIntervalFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentContainer 
01 00 0600 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreDescription 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
