|| __DATA.__objc_data _OBJC_CLASS_$_HMEDelegatingEventRouter
|| __DATA.__objc_data _OBJC_CLASS_$_HMEEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMEEventInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMEEventMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMEMessageDatagramServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMEPendingEventsCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HMEProtoEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMEProtoEventInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMEProtoEventMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEDelegatingEventRouter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEEventInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEEventMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEMessageDatagramServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEPendingEventsCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEProtoEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEProtoEventInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEProtoEventMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEvent._eventData
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEvent._eventMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventInfo._event
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventInfo._topic
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._cachePolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._combinePolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._qos
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMEProtoEventMetadata._timestamp
|| __DATA_CONST.__const _HMEErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMELastEventStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEMemoryEventBus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEMessageDatagramClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEPendingTopicsCombiner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEPersistentConnectionClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMEPersistentConnectionServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMERouterClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMERouterServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMETopicRouter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMELastEventStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEMemoryEventBus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEMessageDatagramClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEPendingTopicsCombiner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEPersistentConnectionClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMEPersistentConnectionServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMERouterClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMERouterServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMETopicRouter
|| __TEXT.__text _HMEProtoEventInfoReadFrom
|| __TEXT.__text _HMEProtoEventMetadataReadFrom
|| __TEXT.__text _HMEProtoEventReadFrom
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_close_v2
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
HMETrieNode : NSObject
 @property  NSString *key
 @property  NSMapTable *children
 @property  NSHashTable *consumers

  // instance methods
  -[HMETrieNode children]
  -[HMETrieNode .cxx_destruct]
  -[HMETrieNode consumers]
  -[HMETrieNode key]


HMETrieNodeStackItem : NSObject
 @property  NSString *parentTopic
 @property  HMETrieNode *node

  // instance methods
  -[HMETrieNodeStackItem .cxx_destruct]
  -[HMETrieNodeStackItem node]
  -[HMETrieNodeStackItem parentTopic]


HMETopicRouter : NSObject
 @property  HMETrieNode *rootNode
 @property  NSMapTable *registrations
 @property  <HMETopicRouterDelegate> *delegate

  // instance methods
  -[HMETopicRouter unregisterConsumer:]
  -[HMETopicRouter registrations]
  -[HMETopicRouter consumersForTopic:]
  -[HMETopicRouter .cxx_destruct]
  -[HMETopicRouter init]
  -[HMETopicRouter rootNode]
  -[HMETopicRouter minimalSpanningTopicFilters]
  -[HMETopicRouter allRegisteredTopicFilters]
  -[HMETopicRouter initWithDelegate:logCategory:]
  -[HMETopicRouter registerConsumer:topicFilters:]
  -[HMETopicRouter initWithDelegate:]
  -[HMETopicRouter changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:]
  -[HMETopicRouter delegate]
  -[HMETopicRouter initWithDelegate:logger:]
  -[HMETopicRouter dumpStateDescription]
  -[HMETopicRouter unregisterConsumer:topicFilters:]


HMELastEventStore : NSObject <HMEEventPersistence>
 @property  NSString *fileName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMELastEventStore fileName]
  -[HMELastEventStore .cxx_destruct]
  -[HMELastEventStore resetBeforeReferenceTimestamp:]
  -[HMELastEventStore lastEventForTopic:]
  -[HMELastEventStore initWithFileName:]
  -[HMELastEventStore startup]
  -[HMELastEventStore writer:saveEventIfDifferent:topic:]
  -[HMELastEventStore writer:saveEventIfAllowed:topic:]
  -[HMELastEventStore eventsForTopicFilters:]
  -[HMELastEventStore eventsForTopicFilters:sinceReferenceTimestamp:]
  -[HMELastEventStore resetTopic:]
  -[HMELastEventStore writer:saveEvent:topic:]
  -[HMELastEventStore dealloc]
  -[HMELastEventStore initInMemoryStore]
  -[HMELastEventStore resetEventStore]


HMEProtoEventInfo : PBCodable <NSCopying>
 @property  BOOL hasTopic
 @property  NSString *topic
 @property  BOOL hasEvent
 @property  HMEProtoEvent *event

  // instance methods
  -[HMEProtoEventInfo mergeFrom:]
  -[HMEProtoEventInfo hasEvent]
  -[HMEProtoEventInfo .cxx_destruct]
  -[HMEProtoEventInfo hasTopic]
  -[HMEProtoEventInfo dictionaryRepresentation]
  -[HMEProtoEventInfo writeTo:]
  -[HMEProtoEventInfo setEvent:]
  -[HMEProtoEventInfo isEqual:]
  -[HMEProtoEventInfo copyTo:]
  -[HMEProtoEventInfo topic]
  -[HMEProtoEventInfo readFrom:]
  -[HMEProtoEventInfo setTopic:]
  -[HMEProtoEventInfo copyWithZone:]
  -[HMEProtoEventInfo event]


HMERouterClient : NSObject <HMECachedEventSource, HMELastEventStoreWriter, HMETopicRouterDelegate, HMESynchronousSubscriptionProviding, HMESubscriptionProviding>
 @property  <HMELastEventStoreReadHandle> *eventStoreReadHandle
 @property  <HMELastEventStoreWriteHandle> *eventStoreWriteHandle
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMETopicRouter *topicRouter
 @property  <HMERouterClientDelegate> *privateDelegate
 @property  BOOL isCachedEventSourceCurrentProcess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMERouterClient topicRouter]
  -[HMERouterClient changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMERouterClient eventStoreWriteHandle]
  -[HMERouterClient registerConsumer:topicFilters:completion:]
  -[HMERouterClient processReceivedCachedEvents:]
  -[HMERouterClient .cxx_destruct]
  -[HMERouterClient didChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMERouterClient unregisterConsumer:completion:]
  -[HMERouterClient handleChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMERouterClient initWithQueue:]
  -[HMERouterClient isCachedEventSourceCurrentProcess]
  -[HMERouterClient processReceivedEvents:]
  -[HMERouterClient setPrivateDelegate:]
  -[HMERouterClient initWithQueue:storeReadHandle:logger:]
  -[HMERouterClient queue]
  -[HMERouterClient privateDelegate]
  -[HMERouterClient eventStoreReadHandle]
  -[HMERouterClient dumpStateDescription]
  -[HMERouterClient unregisterConsumer:topicFilters:completion:]
  -[HMERouterClient changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMERouterClient initWithQueue:storeReadHandle:storeWriteHandle:logger:]
  -[HMERouterClient synchronousSubscriptionProvider]
  -[HMERouterClient unregisterConsumerSync:completion:]


HMEDelegatingEventRouter : NSObject <HMETopicRouterDelegate, HMEEventConsumer, HMESubscriptionProviding, HMESynchronousSubscriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMEDelegatingEventRouter changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEDelegatingEventRouter registerConsumer:topicFilters:completion:]
  -[HMEDelegatingEventRouter .cxx_destruct]
  -[HMEDelegatingEventRouter didReceiveEvent:topic:]
  -[HMEDelegatingEventRouter didChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMEDelegatingEventRouter didReceiveCachedEvent:topic:source:]
  -[HMEDelegatingEventRouter initWithQueue:dataSource:]
  -[HMEDelegatingEventRouter unregisterConsumer:completion:]
  -[HMEDelegatingEventRouter unregisterConsumer:topicFilters:completion:]
  -[HMEDelegatingEventRouter changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEDelegatingEventRouter unregisterConsumerSync:completion:]
  -[HMEDelegatingEventRouter initWithQueue:dataSource:logCategory:]
  -[HMEDelegatingEventRouter registerSubRouter:]
  -[HMEDelegatingEventRouter initWithQueue:dataSource:logger:]
  -[HMEDelegatingEventRouter unregisterSubRouter:]


HMEPersistentConnectionServer : HMERouterServer
 @property  <HMEPersistentConnectionServerDelegate> *delegate
 @property  <HMEPersistentConnectionServerDataSource> *dataSource

  // instance methods
  -[HMEPersistentConnectionServer setDataSource:]
  -[HMEPersistentConnectionServer .cxx_destruct]
  -[HMEPersistentConnectionServer connectWithConnection:connectEvent:unregisterEvent:completion:]
  -[HMEPersistentConnectionServer changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEPersistentConnectionServer setDelegate:]
  -[HMEPersistentConnectionServer dataSource]
  -[HMEPersistentConnectionServer initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:]
  -[HMEPersistentConnectionServer handleCachedEvent:topic:]
  -[HMEPersistentConnectionServer didInvalidateConnection:]
  -[HMEPersistentConnectionServer initWithQueue:provider:registrationEventRouter:]
  -[HMEPersistentConnectionServer disconnectConnection:]
  -[HMEPersistentConnectionServer delegate]
  -[HMEPersistentConnectionServer handleEvent:topic:]


HMEProtoEventMetadata : PBCodable <NSCopying>
 @property  BOOL hasSource
 @property  NSString *source
 @property  BOOL hasTimestamp
 @property  double timestamp
 @property  BOOL hasCachePolicy
 @property  unsigned int cachePolicy
 @property  BOOL hasCombinePolicy
 @property  unsigned int combinePolicy
 @property  BOOL hasQos
 @property  unsigned int qos

  // instance methods
  -[HMEProtoEventMetadata qos]
  -[HMEProtoEventMetadata setQos:]
  -[HMEProtoEventMetadata hasSource]
  -[HMEProtoEventMetadata setCachePolicy:]
  -[HMEProtoEventMetadata mergeFrom:]
  -[HMEProtoEventMetadata cachePolicy]
  -[HMEProtoEventMetadata .cxx_destruct]
  -[HMEProtoEventMetadata dictionaryRepresentation]
  -[HMEProtoEventMetadata writeTo:]
  -[HMEProtoEventMetadata isEqual:]
  -[HMEProtoEventMetadata copyTo:]
  -[HMEProtoEventMetadata readFrom:]
  -[HMEProtoEventMetadata setHasQos:]
  -[HMEProtoEventMetadata hasQos]
  -[HMEProtoEventMetadata hasTimestamp]
  -[HMEProtoEventMetadata setSource:]
  -[HMEProtoEventMetadata timestamp]
  -[HMEProtoEventMetadata copyWithZone:]
  -[HMEProtoEventMetadata setHasTimestamp:]
  -[HMEProtoEventMetadata setTimestamp:]
  -[HMEProtoEventMetadata source]
  -[HMEProtoEventMetadata setHasCachePolicy:]
  -[HMEProtoEventMetadata hasCachePolicy]
  -[HMEProtoEventMetadata setCombinePolicy:]
  -[HMEProtoEventMetadata setHasCombinePolicy:]
  -[HMEProtoEventMetadata hasCombinePolicy]
  -[HMEProtoEventMetadata combinePolicy]


HMEEventMetadata : NSObject
 @property  unsigned long rawCombineType
 @property  unsigned long rawCachePolicy
 @property  unsigned long rawQOS
 @property  NSString *source
 @property  unsigned long cachePolicy
 @property  unsigned long combineType
 @property  double intervalSinceReferenceDate

  // instance methods
  -[HMEEventMetadata cachePolicy]
  -[HMEEventMetadata .cxx_destruct]
  -[HMEEventMetadata source]
  -[HMEEventMetadata initWithSource:cachePolicy:combineType:timestamp:]
  -[HMEEventMetadata _initWithSource:rawCachePolicy:rawCombineType:rawQos:timestamp:]
  -[HMEEventMetadata intervalSinceReferenceDate]
  -[HMEEventMetadata rawCachePolicy]
  -[HMEEventMetadata rawCombineType]
  -[HMEEventMetadata rawQOS]
  -[HMEEventMetadata initDefaultMetadata]
  -[HMEEventMetadata combineType]


HMEEvent : NSObject
 @property  NSData *eventData
 @property  NSData *encodedData
 @property  HMEEventMetadata *eventMetadata

  // class methods
  +[HMEEvent eventFromProtobuff:]

  // instance methods
  -[HMEEvent encodedData]
  -[HMEEvent .cxx_destruct]
  -[HMEEvent eventMetadata]
  -[HMEEvent eventData]
  -[HMEEvent initWithSubclassedEventMetadata:]
  -[HMEEvent initWithEventData:]
  -[HMEEvent initWithEventData:metadata:]
  -[HMEEvent _initWithEventData:metadata:]
  -[HMEEvent pbEvent]


HMEMessageDatagramClient : HMERouterClient
 @property  <HMETimerIntervalProvider> *connectionRetryIntervalProvider
 @property  <HMETimerProvider> *timerProvider
 @property  HMEPendingTopicsCombiner *pendingTopicsCombiner
 @property  BOOL isConnected
 @property  BOOL hasPendingRequest
 @property  BOOL hasPendingServerChangeRequest
 @property  double keepAliveInterval
 @property  <HMETimer> *keepAliveTimer
 @property  <HMETimer> *connectionRetryTimer
 @property  NSUUID *connectedServerIdentifier
 @property  long long connectionMode
 @property  double dormatFetchTimerInterval
 @property  <HMETimer> *dormantFetchTimer
 @property  BOOL dormantFetchConditionsMet
 @property  BOOL isWaitingForFetchConditionsWhenDormant
 @property  <HMEMessageDatagramClientDelegate> *delegate
 @property  <HMEMessageDatagramClientDataSource> *dataSource

  // instance methods
  -[HMEMessageDatagramClient setIsConnected:]
  -[HMEMessageDatagramClient setHasPendingServerChangeRequest:]
  -[HMEMessageDatagramClient setDormantFetchTimer:]
  -[HMEMessageDatagramClient keepAliveTimer]
  -[HMEMessageDatagramClient isConnected]
  -[HMEMessageDatagramClient connectionCapabilityDidChange]
  -[HMEMessageDatagramClient setDataSource:]
  -[HMEMessageDatagramClient keepAliveInterval]
  -[HMEMessageDatagramClient dormantFetchTimer]
  -[HMEMessageDatagramClient connectionRetryIntervalProvider]
  -[HMEMessageDatagramClient .cxx_destruct]
  -[HMEMessageDatagramClient hasPendingServerChangeRequest]
  -[HMEMessageDatagramClient initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:storeReadHandle:storeWriteHandle:logCategory:]
  -[HMEMessageDatagramClient setConnectedServerIdentifier:]
  -[HMEMessageDatagramClient dormantFetchConditionsMet]
  -[HMEMessageDatagramClient setDelegate:]
  -[HMEMessageDatagramClient setConnectionMode:]
  -[HMEMessageDatagramClient updateDormantFetchCondition:completion:]
  -[HMEMessageDatagramClient dataSource]
  -[HMEMessageDatagramClient connectionMode]
  -[HMEMessageDatagramClient setIsWaitingForFetchConditionsWhenDormant:]
  -[HMEMessageDatagramClient setHasPendingRequest:]
  -[HMEMessageDatagramClient setConnectionRetryTimer:]
  -[HMEMessageDatagramClient connectedServerIdentifier]
  -[HMEMessageDatagramClient setDormantFetchConditionsMet:]
  -[HMEMessageDatagramClient handleChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMEMessageDatagramClient pendingTopicsCombiner]
  -[HMEMessageDatagramClient setKeepAliveTimer:]
  -[HMEMessageDatagramClient didReceiveMessageWithEvents:serverIdentifier:completion:]
  -[HMEMessageDatagramClient serverDidChangeWithServerIdentifier:]
  -[HMEMessageDatagramClient connectionRetryTimer]
  -[HMEMessageDatagramClient delegate]
  -[HMEMessageDatagramClient dormatFetchTimerInterval]
  -[HMEMessageDatagramClient initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:]
  -[HMEMessageDatagramClient timerProvider]
  -[HMEMessageDatagramClient updateConnectionMode:completion:]
  -[HMEMessageDatagramClient isWaitingForFetchConditionsWhenDormant]
  -[HMEMessageDatagramClient hasPendingRequest]


HMEPendingEventsCollection : NSObject
 @property  NSMutableArray *mutableEventItems
 @property  NSArray *eventItems

  // instance methods
  -[HMEPendingEventsCollection .cxx_destruct]
  -[HMEPendingEventsCollection init]
  -[HMEPendingEventsCollection initWithEvents:]
  -[HMEPendingEventsCollection mutableEventItems]
  -[HMEPendingEventsCollection setMutableEventItems:]
  -[HMEPendingEventsCollection addEventInfo:]
  -[HMEPendingEventsCollection eventInfoMaxSizeInBytes:]
  -[HMEPendingEventsCollection eventItems]
  -[HMEPendingEventsCollection combinePreviousEvents:]
  -[HMEPendingEventsCollection resetItems]
  -[HMEPendingEventsCollection hasEventItem]
  -[HMEPendingEventsCollection popEventItemsUpWithFragments:toSizeInBytes:]


HMEEventInfo : NSObject
 @property  HMEEvent *event
 @property  NSString *topic

  // class methods
  +[HMEEventInfo fromProtobuff:]
  +[HMEEventInfo eventsMapFromEventInfos:]
  +[HMEEventInfo eventsMapFromProtoEvents:]
  +[HMEEventInfo topicAndMetadataMaxSizeInBytes]
  +[HMEEventInfo eventInfoFromProtoData:]

  // instance methods
  -[HMEEventInfo .cxx_destruct]
  -[HMEEventInfo topic]
  -[HMEEventInfo event]
  -[HMEEventInfo initWithEvent:topic:]
  -[HMEEventInfo pbEventInfo]


HMERouterServer : NSObject <HMEEventConsumer, HMETopicRouterDelegate, HMELastEventStoreWriter>
 @property  NSMapTable *unregisterEvents
 @property  <HMESubscriptionProviding> *subscriptionProvider
 @property  <HMEEventForwarder> *localEventForwarder
 @property  <HMELastEventStoreReadHandle> *eventStoreReadHandle
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMETopicRouter *topicRouter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMERouterServer topicRouter]
  -[HMERouterServer .cxx_destruct]
  -[HMERouterServer didReceiveEvent:topic:]
  -[HMERouterServer didChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMERouterServer didReceiveCachedEvent:topic:source:]
  -[HMERouterServer handleCachedEvent:topic:]
  -[HMERouterServer initWithQueue:provider:registrationEventRouter:]
  -[HMERouterServer queue]
  -[HMERouterServer handleEvent:topic:]
  -[HMERouterServer eventStoreReadHandle]
  -[HMERouterServer dumpStateDescription]
  -[HMERouterServer subscriptionProvider]
  -[HMERouterServer initWithQueue:provider:registrationEventRouter:storeReadHandle:logger:]
  -[HMERouterServer didConnectConnection:connectEvent:unregisterEvent:]
  -[HMERouterServer didRemoveConnection:]
  -[HMERouterServer cachedEventsForTopics:]
  -[HMERouterServer localEventForwarder]
  -[HMERouterServer unregisterEvents]


HMEPendingTopicsCombiner : NSObject
 @property  NSMutableSet *addTopicFilters
 @property  NSMutableSet *removeTopicFilters
 @property  NSArray *topicFiltersToAdd
 @property  NSArray *topicFiltersToRemove

  // instance methods
  -[HMEPendingTopicsCombiner .cxx_destruct]
  -[HMEPendingTopicsCombiner setAddTopicFilters:]
  -[HMEPendingTopicsCombiner init]
  -[HMEPendingTopicsCombiner combineOntoPreviousAdditions:removals:]
  -[HMEPendingTopicsCombiner setRemoveTopicFilters:]
  -[HMEPendingTopicsCombiner topicFiltersToRemove]
  -[HMEPendingTopicsCombiner reset]
  -[HMEPendingTopicsCombiner topicFiltersToAdd]
  -[HMEPendingTopicsCombiner combineWithAdditions:removals:]
  -[HMEPendingTopicsCombiner removeTopicFilters]
  -[HMEPendingTopicsCombiner addTopicFilters]


HMEConnectionInfoItem : NSObject
 @property  BOOL hasPendingRequest
 @property  NSUUID *identifier
 @property  HMEPendingEventsCollection *pendingEventItems
 @property  NSDate *expiry
 @property  NSDate *debounceStartTime
 @property  id connection

  // instance methods
  -[HMEConnectionInfoItem .cxx_destruct]
  -[HMEConnectionInfoItem setConnection:]
  -[HMEConnectionInfoItem expiry]
  -[HMEConnectionInfoItem setHasPendingRequest:]
  -[HMEConnectionInfoItem connection]
  -[HMEConnectionInfoItem identifier]
  -[HMEConnectionInfoItem setExpiry:]
  -[HMEConnectionInfoItem hasPendingRequest]
  -[HMEConnectionInfoItem pendingEventItems]
  -[HMEConnectionInfoItem initWithConnection:expiry:]
  -[HMEConnectionInfoItem debounceStartTime]
  -[HMEConnectionInfoItem setDebounceStartTime:]


HMEMessageDatagramServer : HMERouterServer
 @property  NSMutableArray *connectionInfoItems
 @property  <HMETimer> *connectionExpiryTimer
 @property  <HMETimer> *connectionDebounceTimer
 @property  <HMEMessageDatagramServerDelegate> *delegate
 @property  <HMEMessageDatagramServerDataSource> *dataSource

  // instance methods
  -[HMEMessageDatagramServer setDataSource:]
  -[HMEMessageDatagramServer .cxx_destruct]
  -[HMEMessageDatagramServer changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEMessageDatagramServer setDelegate:]
  -[HMEMessageDatagramServer dataSource]
  -[HMEMessageDatagramServer initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:]
  -[HMEMessageDatagramServer handleCachedEvent:topic:]
  -[HMEMessageDatagramServer reset]
  -[HMEMessageDatagramServer initWithQueue:provider:registrationEventRouter:]
  -[HMEMessageDatagramServer disconnectConnection:]
  -[HMEMessageDatagramServer delegate]
  -[HMEMessageDatagramServer handleEvent:topic:]
  -[HMEMessageDatagramServer connectWithConnection:connectEvent:unregisterEvent:topicFilterAdditions:completion:]
  -[HMEMessageDatagramServer keepAliveConnection:completion:]
  -[HMEMessageDatagramServer fetchCachedEventsForTopics:completion:]
  -[HMEMessageDatagramServer setConnectionExpiryTimer:]
  -[HMEMessageDatagramServer connectionDebounceTimer]
  -[HMEMessageDatagramServer setConnectionDebounceTimer:]
  -[HMEMessageDatagramServer connectionInfoItems]
  -[HMEMessageDatagramServer connectionExpiryTimer]
  -[HMEMessageDatagramServer resetExistingEvents]


HMEPersistentConnectionClient : HMERouterClient
 @property  <HMEPersistentConnectionClientDelegate> *delegate

  // instance methods
  -[HMEPersistentConnectionClient didReconnect]
  -[HMEPersistentConnectionClient .cxx_destruct]
  -[HMEPersistentConnectionClient processReceivedCachedEventsFromMessage:]
  -[HMEPersistentConnectionClient processReceivedEventsFromMessage:]
  -[HMEPersistentConnectionClient setDelegate:]
  -[HMEPersistentConnectionClient initWithQueue:]
  -[HMEPersistentConnectionClient delegate]
  -[HMEPersistentConnectionClient didInvalidateConnection]
  -[HMEPersistentConnectionClient initWithQueue:storeReadHandle:storeWriteHandle:logger:]
  -[HMEPersistentConnectionClient initWithQueue:storeReadHandle:storeWriteHandle:]


HMEMemoryEventBus : NSObject <HMELastEventStoreWriter, HMETopicRouterDelegate, HMESynchronousSubscriptionProviding, HMEEventForwarder, HMESubscriptionProviding, HMEEventConsumer>
 @property  HMETopicRouter *topicRouter
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HMELastEventStoreReadHandle> *eventStoreReadHandle
 @property  <HMELastEventStoreWriteHandle> *eventStoreWriteHandle
 @property  <HMEMemoryEventBusDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMEMemoryEventBus topicRouter]
  -[HMEMemoryEventBus changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEMemoryEventBus eventStoreWriteHandle]
  -[HMEMemoryEventBus registerConsumer:topicFilters:completion:]
  -[HMEMemoryEventBus .cxx_destruct]
  -[HMEMemoryEventBus didReceiveEvent:topic:]
  -[HMEMemoryEventBus setDelegate:]
  -[HMEMemoryEventBus didChangeRegistrationsWithTopicFilterAdditions:removals:]
  -[HMEMemoryEventBus forwardEvent:topic:completion:]
  -[HMEMemoryEventBus didReceiveCachedEvent:topic:source:]
  -[HMEMemoryEventBus unregisterConsumer:completion:]
  -[HMEMemoryEventBus initWithQueue:storeReadHandle:storeWriteHandle:logCategory:]
  -[HMEMemoryEventBus initWithQueue:]
  -[HMEMemoryEventBus delegate]
  -[HMEMemoryEventBus queue]
  -[HMEMemoryEventBus eventStoreReadHandle]
  -[HMEMemoryEventBus unregisterConsumer:topicFilters:completion:]
  -[HMEMemoryEventBus changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:]
  -[HMEMemoryEventBus synchronousSubscriptionProvider]
  -[HMEMemoryEventBus unregisterConsumerSync:completion:]


HMEProtoEvent : PBCodable <NSCopying>
 @property  BOOL hasEventData
 @property  NSData *eventData
 @property  BOOL hasEventMetadata
 @property  HMEProtoEventMetadata *eventMetadata

  // instance methods
  -[HMEProtoEvent setEventMetadata:]
  -[HMEProtoEvent mergeFrom:]
  -[HMEProtoEvent .cxx_destruct]
  -[HMEProtoEvent dictionaryRepresentation]
  -[HMEProtoEvent eventMetadata]
  -[HMEProtoEvent hasEventMetadata]
  -[HMEProtoEvent writeTo:]
  -[HMEProtoEvent setEventData:]
  -[HMEProtoEvent hasEventData]
  -[HMEProtoEvent isEqual:]
  -[HMEProtoEvent copyTo:]
  -[HMEProtoEvent eventData]
  -[HMEProtoEvent readFrom:]
  -[HMEProtoEvent copyWithZone:]


01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
