|| __DATA.__objc_data _OBJC_CLASS_$_AXAutoForwardingLocalNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AXCameraTorchManagerBackgroundAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_AXDistributedNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AXLocalNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AXTelephonyNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AXVisualAlertManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXVisualAlertSBNCScreenController
|| __DATA.__objc_data _OBJC_CLASS_$_AXVisualAlertSBNCSoundController
|| __DATA.__objc_data _OBJC_CLASS_$_AXVisualAlertSBUIFlashlightController
|| __DATA.__objc_data _OBJC_CLASS_$_VISAXNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$___AXVisualAlertSBNCScreenController_super
|| __DATA.__objc_data _OBJC_CLASS_$___AXVisualAlertSBNCSoundController_super
|| __DATA.__objc_data _OBJC_CLASS_$___AXVisualAlertSBUIFlashlightController_super
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAutoForwardingLocalNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AXCameraTorchManagerBackgroundAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_AXDistributedNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLocalNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTelephonyNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVisualAlertManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVisualAlertSBNCScreenController
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVisualAlertSBNCSoundController
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVisualAlertSBUIFlashlightController
|| __DATA.__objc_data _OBJC_METACLASS_$_VISAXNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$___AXVisualAlertSBNCScreenController_super
|| __DATA.__objc_data _OBJC_METACLASS_$___AXVisualAlertSBNCSoundController_super
|| __DATA.__objc_data _OBJC_METACLASS_$___AXVisualAlertSBUIFlashlightController_super
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXAutoForwardingLocalNotificationHandler._possibleHandlers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXAutoForwardingLocalNotificationHandler._possibleHandlersCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXCameraTorchManagerBackgroundAdapter._q
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXLocalNotificationHandler._opaqueObserver
|| __DATA.__objc_ivar _OBJC_IVAR_$_VISAXNotificationHandler._dispatcher
|| __DATA.__objc_ivar _OBJC_IVAR_$_VISAXNotificationHandler._notificationName
|| __DATA.__objc_ivar _OBJC_IVAR_$_VISAXNotificationHandler._observerIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VISAXNotificationHandler._target
|| __DATA.__objc_ivar _OBJC_IVAR_$_VISAXNotificationHandler._valid
|| __DATA_CONST.__const _kAXDeviceSpringBoardRingerState
__ AVFoundation: _AVCaptureSessionDidStartRunningNotification
__ AVFoundation: _AVCaptureSessionDidStopRunningNotification
__ AccessibilityUtilities: _AXColorizeFormatLog
__ AccessibilityUtilities: _AXLoggerForFacility
__ AccessibilityUtilities: _AXOSLogLevelFromAXLogLevel
__ AccessibilityUtilities: _AXPerformBlockOnMainThread
__ AccessibilityUtilities: _AXPerformBlockOnMainThreadAfterDelay
__ AccessibilityUtilities: _AXPerformBlockSynchronouslyOnMainThread
__ AccessibilityUtilities: _AXPerformValidationChecks
__ AccessibilityUtilities: _AXPrintLine
__ AccessibilityUtilities: _AXProcessIsSpringBoard
__ AccessibilityUtilities: _AXSafeClassFromString
__ AccessibilityUtilities: _AX_CameraBundleName
__ AccessibilityUtilities: _OBJC_CLASS_$_AXDispatchTimer
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSettings
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSubsystemVisualAlerts
__ AccessibilityUtilities: _OBJC_CLASS_$_AXValidationManager
__ AccessibilityUtilities: __AXAssert
__ AccessibilityUtilities: __AXStringForArgs
__ BackBoardServices: _BKSHIDServicesGetRingerState
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateService
__ Foundation: _NSClassFromString
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOObjectRelease
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMainPortDefault
__ SoftLinking: __sl_dlopen
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _TUCallCenterCallStartedConnectingNotification
__ TelephonyUtilities: _TUCallCenterCallStatusChangedNotification
__ TelephonyUtilities: _TUCallCenterVideoCallStatusChangedNotification
__ TelephonyUtilities: _TUCallShouldSuppressRingingChangedNotification
__ libAXSafeCategoryBundle.dylib: _OBJC_CLASS_$_UIAccessibilitySafeCategory
__ libAXSafeCategoryBundle.dylib: _OBJC_METACLASS_$_UIAccessibilitySafeCategory
__ libAccessibility.dylib: __AXSVisualAlertEnabled
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _sel_getName
AXCameraTorchManagerBackgroundAdapter : NSObject
 @property  <AXCameraTorchManager> *synchronousTorchManager

  // instance methods
  -[AXCameraTorchManagerBackgroundAdapter .cxx_destruct]
  -[AXCameraTorchManagerBackgroundAdapter initWithCameraTorchManager:]
  -[AXCameraTorchManagerBackgroundAdapter openTorchDeviceWithCompletion:]
  -[AXCameraTorchManagerBackgroundAdapter closeTorchDeviceWithCompletion:]
  -[AXCameraTorchManagerBackgroundAdapter turnTorchOnWithCompletion:]
  -[AXCameraTorchManagerBackgroundAdapter turnTorchOffWithCompletion:]
  -[AXCameraTorchManagerBackgroundAdapter synchronousTorchManager]


__AXVisualAlertSBNCSoundController_super : UIAccessibilitySafeCategory

AXVisualAlertSBNCSoundController : __AXVisualAlertSBNCSoundController_super
  // class methods
  +[AXVisualAlertSBNCSoundController safeCategoryBaseClass]
  +[AXVisualAlertSBNCSoundController _accessibilityPerformValidations:]
  +[AXVisualAlertSBNCSoundController safeCategoryTargetClassName]

  // instance methods
  -[AXVisualAlertSBNCSoundController stopSoundForNotificationRequest:]
  -[AXVisualAlertSBNCSoundController playSoundForNotificationRequest:presentingDestination:]


__AXVisualAlertSBUIFlashlightController_super : UIAccessibilitySafeCategory

AXVisualAlertSBUIFlashlightController : __AXVisualAlertSBUIFlashlightController_super
  // class methods
  +[AXVisualAlertSBUIFlashlightController safeCategoryBaseClass]
  +[AXVisualAlertSBUIFlashlightController _accessibilityPerformValidations:]
  +[AXVisualAlertSBUIFlashlightController safeCategoryTargetClassName]

  // instance methods
  -[AXVisualAlertSBUIFlashlightController setLevel:]
  -[AXVisualAlertSBUIFlashlightController _turnPowerOff]
  -[AXVisualAlertSBUIFlashlightController _turnPowerOn]


__AXVisualAlertSBNCScreenController_super : UIAccessibilitySafeCategory

AXVisualAlertSBNCScreenController : __AXVisualAlertSBNCScreenController_super
  // class methods
  +[AXVisualAlertSBNCScreenController safeCategoryBaseClass]
  +[AXVisualAlertSBNCScreenController _accessibilityPerformValidations:]
  +[AXVisualAlertSBNCScreenController safeCategoryTargetClassName]

  // instance methods
  -[AXVisualAlertSBNCScreenController turnOnScreenForNotificationRequest:]


AXVisualAlertManager : NSObject <DNDStateUpdateListener>
 @property  NSDictionary *_patterns
 @property  NSDictionary *_activePattern
 @property  unsigned long _typeToUseForVisualAlertAfterCaptureSessionStopsRunning
 @property  BOOL _torchDeviceOpen
 @property  BOOL _torchDeviceOn
 @property  AXCameraTorchManagerBackgroundAdapter *_asyncManagerAdapter
 @property  DNDStateService *disturbanceService
 @property  int ringerStateNotifyToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXVisualAlertManager initialize]
  +[AXVisualAlertManager sharedVisualAlertManager]

  // instance methods
  -[AXVisualAlertManager _stop]
  -[AXVisualAlertManager stateService:didReceiveDoNotDisturbStateUpdate:]
  -[AXVisualAlertManager dealloc]
  -[AXVisualAlertManager .cxx_destruct]
  -[AXVisualAlertManager stop]
  -[AXVisualAlertManager ringerStateNotifyToken]
  -[AXVisualAlertManager setRingerStateNotifyToken:]
  -[AXVisualAlertManager init]
  -[AXVisualAlertManager _patterns]
  -[AXVisualAlertManager startForAlertTypes:cameraTorchManager:]
  -[AXVisualAlertManager removeBulletin:]
  -[AXVisualAlertManager _handleBeginVisualAlertForIncomingCall]
  -[AXVisualAlertManager _handleBeginVisualAlertForIncomingVideoConferenceCall]
  -[AXVisualAlertManager _handleEndVisualAlertForIncomingCall]
  -[AXVisualAlertManager _handleEndVisualAlertForIncomingVideoConferenceCall]
  -[AXVisualAlertManager _handleVisualAlertForExternalApplication]
  -[AXVisualAlertManager _springBoardLockButtonPress:]
  -[AXVisualAlertManager _springBoardVolumeChange:]
  -[AXVisualAlertManager _springBoardLockStateChange:]
  -[AXVisualAlertManager _handleLockButtonPressed]
  -[AXVisualAlertManager _handleVolumeChanged]
  -[AXVisualAlertManager _handleDeviceWasLocked]
  -[AXVisualAlertManager _handleDeviceWasUnlocked]
  -[AXVisualAlertManager _handleQuietModeWasEnabled]
  -[AXVisualAlertManager _handleQuietModeWasDisabled]
  -[AXVisualAlertManager _handleTorchInControlCenterWasEnabled]
  -[AXVisualAlertManager _handleTorchInControlCenterWasDisabled]
  -[AXVisualAlertManager _handleCaptureSessionDidStartRunning]
  -[AXVisualAlertManager _handleCaptureSessionDidStopRunning]
  -[AXVisualAlertManager _handleSecondaryVisualAlertManagerDidStart]
  -[AXVisualAlertManager _handleVideoConferenceCallRinging]
  -[AXVisualAlertManager _handleRingerSwitchToggled]
  -[AXVisualAlertManager addBulletin:]
  -[AXVisualAlertManager existingBulletinForBulletin:]
  -[AXVisualAlertManager _setTorchDeviceOpen:withCompletion:]
  -[AXVisualAlertManager _setTorchDeviceOn:withCompletion:]
  -[AXVisualAlertManager _startForAlertTypes:cameraTorchManager:]
  -[AXVisualAlertManager _isCameraInUse]
  -[AXVisualAlertManager _beginVisualAlertForType:repeat:]
  -[AXVisualAlertManager _beginVisualAlertForType:repeat:skipAutomaticStopOnUserInteraction:bundleId:]
  -[AXVisualAlertManager _endVisualAlert]
  -[AXVisualAlertManager _processNextVisualAlertComponent]
  -[AXVisualAlertManager _handleBeginVisualAlertForAlarmWithSound:]
  -[AXVisualAlertManager _handleEndVisualAlertForAlarm]
  -[AXVisualAlertManager _handleVisualAlertForRegularNotification:]
  -[AXVisualAlertManager _handleVisualAlertForIncomingMessage]
  -[AXVisualAlertManager _insertCustomLogicForSystemWideServer]
  -[AXVisualAlertManager _normalizedStrobePatternForOriginalPattern:]
  -[AXVisualAlertManager _hasVideoConferenceCameraTorchManager]
  -[AXVisualAlertManager _supportsVisualAlertsForVideoConferenceCalls]
  -[AXVisualAlertManager _shouldHandleVisualAlertsForVideoConferenceCallsInConferenceFramework]
  -[AXVisualAlertManager _isTorchEnabledInControlCenter]
  -[AXVisualAlertManager _activePattern]
  -[AXVisualAlertManager _setActivePattern:]
  -[AXVisualAlertManager _typeToUseForVisualAlertAfterCaptureSessionStopsRunning]
  -[AXVisualAlertManager _setTypeToUseForVisualAlertAfterCaptureSessionStopsRunning:]
  -[AXVisualAlertManager _isTorchDeviceOpen]
  -[AXVisualAlertManager _isTorchDeviceOn]
  -[AXVisualAlertManager _asyncManagerAdapter]
  -[AXVisualAlertManager disturbanceService]
  -[AXVisualAlertManager setDisturbanceService:]


VISAXNotificationHandler : NSObject
 @property  NSString *_notificationName
 @property  id _target
 @property  @? _dispatcher
 @property  BOOL valid

  // class methods
  +[VISAXNotificationHandler _safelyRegisterObserver:]
  +[VISAXNotificationHandler _safelyRemoveObserverForIdentifier:]
  +[VISAXNotificationHandler _safelyGetObserverForIdentifier:]

  // instance methods
  -[VISAXNotificationHandler _target]
  -[VISAXNotificationHandler _setTarget:]
  -[VISAXNotificationHandler _stopObserving]
  -[VISAXNotificationHandler _startObserving]
  -[VISAXNotificationHandler dealloc]
  -[VISAXNotificationHandler isValid]
  -[VISAXNotificationHandler .cxx_destruct]
  -[VISAXNotificationHandler _notificationName]
  -[VISAXNotificationHandler invalidate]
  -[VISAXNotificationHandler _dispatcher]
  -[VISAXNotificationHandler initWithNotificationName:target:handler:]
  -[VISAXNotificationHandler initWithNotificationName:target:dispatcher:]
  -[VISAXNotificationHandler initWithNotificationName:target:dispatcher:startObserving:]
  -[VISAXNotificationHandler _setDispatcher:]
  -[VISAXNotificationHandler _notificationTypeDescription]
  -[VISAXNotificationHandler processHandler:]
  -[VISAXNotificationHandler _handleNotificationWithName:object:userInfo:]
  -[VISAXNotificationHandler _setNotificationName:]


AXLocalNotificationHandler : VISAXNotificationHandler
 @property  id _opaqueObserver

  // instance methods
  -[AXLocalNotificationHandler _stopObserving]
  -[AXLocalNotificationHandler _startObserving]
  -[AXLocalNotificationHandler .cxx_destruct]
  -[AXLocalNotificationHandler _notificationTypeDescription]
  -[AXLocalNotificationHandler _startObservingWithObject:]
  -[AXLocalNotificationHandler _stopObservingWithObject:]
  -[AXLocalNotificationHandler _opaqueObserver]
  -[AXLocalNotificationHandler _setOpaqueObserver:]


AXAutoForwardingLocalNotificationHandler : AXLocalNotificationHandler
  // instance methods
  -[AXAutoForwardingLocalNotificationHandler _stopObserving]
  -[AXAutoForwardingLocalNotificationHandler _startObserving]
  -[AXAutoForwardingLocalNotificationHandler dealloc]
  -[AXAutoForwardingLocalNotificationHandler initWithNotificationName:target:handler:]
  -[AXAutoForwardingLocalNotificationHandler initWithNotificationName:target:dispatcher:startObserving:]
  -[AXAutoForwardingLocalNotificationHandler _notificationTypeDescription]
  -[AXAutoForwardingLocalNotificationHandler processHandler:]
  -[AXAutoForwardingLocalNotificationHandler initWithNotificationName:target:dispatcher:possibleHandlers:]
  -[AXAutoForwardingLocalNotificationHandler _prefixForForwardDistributedNotificationName]
  -[AXAutoForwardingLocalNotificationHandler _forwardDistributedNotificationNameForHandler:]
  -[AXAutoForwardingLocalNotificationHandler _handleForwardDistributedNotificationWithName:object:userInfo:]


AXDistributedNotificationHandler : VISAXNotificationHandler
  // class methods
  +[AXDistributedNotificationHandler postDistributedNotificationWithName:]

  // instance methods
  -[AXDistributedNotificationHandler _stopObserving]
  -[AXDistributedNotificationHandler _startObserving]
  -[AXDistributedNotificationHandler _notificationTypeDescription]


AXTelephonyNotificationHandler : VISAXNotificationHandler
  // instance methods
  -[AXTelephonyNotificationHandler _handleNotification:]
  -[AXTelephonyNotificationHandler _stopObserving]
  -[AXTelephonyNotificationHandler _startObserving]
  -[AXTelephonyNotificationHandler _notificationTypeDescription]


01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXDispatchTimer 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSettings 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSubsystemVisualAlerts 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXValidationManager 
01 00 0100 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateService 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0300 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 0400 /usr/lib/libAXSafeCategoryBundle.dylib: UIAccessibilitySafeCategory 
