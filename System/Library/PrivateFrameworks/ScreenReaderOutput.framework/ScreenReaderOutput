|| __DATA.__data _kSCROAlertAttribute
|| __DATA.__data _kSCROAlertPriorityAttribute
|| __DATA.__data _kSCROAlertTimeoutAttribute
|| __DATA.__data _kSCROAppTokenAttribute
|| __DATA.__data _kSCROBrailleCallbackReplaceTextRange_CursorKey
|| __DATA.__data _kSCROBrailleCallbackReplaceTextRange_RangeKey
|| __DATA.__data _kSCROBrailleCallbackReplaceTextRange_StringKey
|| __DATA.__data _kSCROBrailleCallbackSpeechFeedback_SpeakLiterallyKey
|| __DATA.__data _kSCROBrailleCallbackSpeechFeedback_SpokenTextKey
|| __DATA.__data _kSCROBrailleDisplayBluetoothAddress
|| __DATA.__data _kSCROBrailleDisplayBluetoothName
|| __DATA.__data _kSCROBrailleDisplayBrailleInputMode
|| __DATA.__data _kSCROBrailleDisplayConnectedNotification
|| __DATA.__data _kSCROBrailleDisplayDriverIdentifier
|| __DATA.__data _kSCROBrailleDisplayIsPrimary
|| __DATA.__data _kSCROBrailleDisplayMainSize
|| __DATA.__data _kSCROBrailleDisplayModeAttribute
|| __DATA.__data _kSCROBrailleDisplayModelIdentifier
|| __DATA.__data _kSCROBrailleDisplayPostsKeyboardEvents
|| __DATA.__data _kSCROBrailleDisplayState
|| __DATA.__data _kSCROBrailleDisplayStatusSize
|| __DATA.__data _kSCROBrailleDisplayToken
|| __DATA.__data _kSCROBrailleDisplayTransport
|| __DATA.__data _kSCROBrailleDriverAutoDetectDictionaries
|| __DATA.__data _kSCROBrailleDriverBluetoothConnectionIsIncoming
|| __DATA.__data _kSCROBrailleDriverBluetoothDeviceNameRegexPatterns
|| __DATA.__data _kSCROBrailleDriverBluetoothSPDUUID16ServiceClass
|| __DATA.__data _kSCROBrailleDriverBluetoothSearchDictionary
|| __DATA.__data _kSCROBrailleDriverMainDisplaySize
|| __DATA.__data _kSCROBrailleDriverModels
|| __DATA.__data _kSCROBrailleDriverSerialAdvertiseBytes
|| __DATA.__data _kSCROBrailleDriverStatusDisplaySize
|| __DATA.__data _kSCROBrailleDriverType
|| __DATA.__data _kSCROBrailleEditingStringAttribute
|| __DATA.__data _kSCROBrailleIBeamLocationAttribute
|| __DATA.__data _kSCROBrailleInputMemorizeHoldInterval
|| __DATA.__data _kSCROBrailleInputMemorizeNowInterval
|| __DATA.__data _kSCROBrailleInputMemorizePulseInterval
|| __DATA.__data _kSCROBrailleOffsetAttribute
|| __DATA.__data _kSCROBrailleOriginalStringAttribute
|| __DATA.__data _kSCROBrailleOverrideStringAttribute
|| __DATA.__data _kSCROBrailleRouterKeyAppToken
|| __DATA.__data _kSCROBrailleRouterKeyLocation
|| __DATA.__data _kSCROBrailleRouterKeyToken
|| __DATA.__data _kSCROBrailleSizeAttribute
|| __DATA.__data _kSCROBrailleStatusAlignmentAttribute
|| __DATA.__data _kSCROBrailleStatusAttribute
|| __DATA.__data _kSCROBrailleTranslationDefaultLanguageIdentifier
|| __DATA.__data _kSCROCursorAttribute
|| __DATA.__data _kSCROEditableTextAttribute
|| __DATA.__data _kSCROEditableTextPaddingAttribute
|| __DATA.__data _kSCROFocusedAttribute
|| __DATA.__data _kSCROLanguageAttribute
|| __DATA.__data _kSCROLineFocusAttribute
|| __DATA.__data _kSCROSelectionAttribute
|| __DATA.__data _kSCROServerTimeoutNotification
|| __DATA.__data _kSCROStatusAttribute
|| __DATA.__data _kSCROStatusAttributeCellIndex
|| __DATA.__data _kSCROStatusAttributeCellTitle
|| __DATA.__data _kSCROStatusAttributeDotText
|| __DATA.__data _kSCROTechnicalContextAttribute
|| __DATA.__data _kSCROTokenAttribute
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleClient
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplay
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayAutoDetector
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayCommandDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayHistory
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayManagedQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayManager
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayManagerStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleDisplayStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleEventDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleKey
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleKeyboardKey
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleLine
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleStealthDriver
|| __DATA.__objc_data _OBJC_CLASS_$_SCROBrailleTranslationManager
|| __DATA.__objc_data _OBJC_CLASS_$_SCROCallback
|| __DATA.__objc_data _OBJC_CLASS_$_SCROClient
|| __DATA.__objc_data _OBJC_CLASS_$_SCROConnection
|| __DATA.__objc_data _OBJC_CLASS_$_SCROEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SCROHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SCROIOElement
|| __DATA.__objc_data _OBJC_CLASS_$_SCROIOHIDElement
|| __DATA.__objc_data _OBJC_CLASS_$_SCROIOSerialElement
|| __DATA.__objc_data _OBJC_CLASS_$_SCROIOUSBElement
|| __DATA.__objc_data _OBJC_CLASS_$_SCROMobileBrailleDisplayInputManager
|| __DATA.__objc_data _OBJC_CLASS_$_SCROScriptClient
|| __DATA.__objc_data _OBJC_CLASS_$_SCROServer
|| __DATA.__objc_data _OBJC_CLASS_$_SCROStealthBrailleDisplay
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplay
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayAutoDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayCommandDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayHistory
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayManagedQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayManagerStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleDisplayStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleEventDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleKey
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleKeyboardKey
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleLine
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleStealthDriver
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROBrailleTranslationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROCallback
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROIOElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROIOHIDElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROIOSerialElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROIOUSBElement
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROMobileBrailleDisplayInputManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROScriptClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCROStealthBrailleDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._aggregatedStatusCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._aggregatedStatusPending
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._deathTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._delegateWantsKeypresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._delegateWantsReplaceTextRange
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._displayDescriptorCallbackEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._isReady
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._keepConnectionAlive
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._mainStringCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._mainStringPending
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._needsDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._wantsDisconnectMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._wantsDisplayConfigurationChanged
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleClient._wantsReconnectMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._automaticBrailleTranslationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._blinkerEventTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._blinkingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._brailleDriver
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._brailleInputMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._brailleLine
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._commandDispatcher
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._contentLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._delegateWantsDisplayCallback
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._driverIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._driverModelIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._eventDispatcher
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._input
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputContractionMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputEventTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputPaused
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputPausedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._inputShowEightDot
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._ioElement
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._isValid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._keyEventsQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._mainSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._needsUpdating
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._outputContractionMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._outputShowEightDot
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._postsKeyboardEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._runLoop
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._shouldBatchUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._statusSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplay._wordWrapEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayAutoDetector._isDetectingDisplays
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayAutoDetector._iteratorDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayAutoDetector._notificationPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayCommandDispatcher._commandDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayHistory._announcements
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayHistory._currentIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayHistory._unreadCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayHistory._unreadSnapshot
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManagedQueue._displayQueueDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManagedQueue._maxActiveQueueSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManagedQueue._queueStateDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManagedQueue._stateQueueMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManagedQueue._tokenDisplayMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._alertPriority
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._alertTimeout
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._alertTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._automaticBrailleTranslation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._blankUIString
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._bluetoothBrailleDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._currentBrailleFormatter
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._detectedIOElementsDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._displayConfigurationDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._displayModeStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._eventQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._history
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._inputAccessMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._inputContractionMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._inputShowEightDot
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._isValid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._lineDescriptorDisplayCallbackEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._lineString
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._loadedIOElements
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._mainString
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._managedDisplayQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._outputContractionMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._outputShowEightDot
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._persistentKeyModifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._shouldBatchUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._showDotsSevenAndEight
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._statusString
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._stealthBrailleDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._uiEditingCachedString
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._uiStringCachedLineOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleDisplayManager._wordWrapEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._brailleEventQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._isValid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._queueLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._queueSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._runLoop
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleEventDispatcher._target
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleHandler._brailleDisplayManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleHandler._callbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleHandler._wantsDidDisplayCallbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleHandler._wantsInputCallbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._appToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._displayMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._displayToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._hasRouterInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._maskArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._routerIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._routerLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleKey._routerToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._anyUnread
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._appToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._blink
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._blinkerBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._brailleChunksAreDirty
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._brailleDriver
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._brailleFormatter
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._currentUnread
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._displayBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._displayEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._displayFilter
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._displayMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._firstToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._focusLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._focusRange
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._iBeamLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._insetSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._isPanning
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._lastToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._leftInset
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._lineBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._lineFocus
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._lineOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._mainCellsBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._masterStatusCellIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._needsDisplayFlush
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._needsFocusFlush
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._needsStatusFlush
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._rightInset
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._selectionRange
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._showDotsSevenAndEight
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._size
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._stateManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._statusData
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._statusFilter
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._statusSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleLine._virtualStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleStealthDriver._isDriverLoaded
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleStealthDriver._mainSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleStealthDriver._modelIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROBrailleStealthDriver._statusSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROCallback._isAtomic
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROCallback._key
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROCallback._object
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._callbackSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._pid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._port
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROClient._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._handlerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._invalidationSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._pingPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROConnection._pingSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._actions
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._callbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._getDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._handlerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._readOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROEvent._setDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROHandler._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROHandler.isInvalid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROIOElement._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROIOElement._ioObject
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROIOHIDElement._hidDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROMobileBrailleDisplayInputManager._brailleKeys
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROMobileBrailleDisplayInputManager._bundle
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROMobileBrailleDisplayInputManager._displayInfoDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROMobileBrailleDisplayInputManager._eightDotCommands
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROMobileBrailleDisplayInputManager._sixDotCommands
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROScriptClient._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROScriptClient._isReady
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROScriptClient._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROScriptClient._timer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._clientCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._contentLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._deathPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._deathSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._deathTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._isRegisteredWithMach
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._serverPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_SCROServer._serverSource
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierCommand
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierControl
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierNull
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierOption
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierSecondaryFn
|| __TEXT.__const _kSCROBrailleKeyboardKeyModifierShift
|| __TEXT.__const _kSCROBrailleUnicodeCharacterBase
|| __TEXT.__const _kSCROBrailleUnicodeCharacterDot7
|| __TEXT.__const _kSCROBrailleUnicodeCharacterDot78
|| __TEXT.__const _kSCROBrailleUnicodeCharacterDot8
|| __TEXT.__const _kSCROBrailleUnicodeCharacterSpace
|| __TEXT.__const _kSCROSerializeDefaultSize
|| __TEXT.__text _SCROBrailleCreateTranslatePrintBrailleToBrailleCode
|| __TEXT.__text _SCROBrailleDisplayHistoryIsHistoryString
|| __TEXT.__text _SCROBrailleDisplayHistoryIsStringUnread
|| __TEXT.__text _SCROSerializeWrapper
|| __TEXT.__text _SCROUnserializeWrapper
|| __TEXT.__text __SCROD_BRAILLE_LOG
|| __TEXT.__text __SCROD_LOG
|| __TEXT.__text __updateNewlyActiveDisplay
__ AXRuntime: _AXSerializeCFType
__ AXRuntime: _AXUnserializeCFType
__ AXRuntime: _MSHCreateMIGServerSource
__ AXRuntime: _MSHCreateMachServerSource
__ AXRuntime: _MSHGetMachPortFromSource
__ BrailleTranslation: _BRLTModeForFlags
__ BrailleTranslation: _OBJC_CLASS_$_BRLTBrailleChar
__ BrailleTranslation: _OBJC_CLASS_$_BRLTBrailleStateManager
__ BrailleTranslation: _OBJC_CLASS_$_BRLTBrailleString
__ BrailleTranslation: _OBJC_CLASS_$_BRLTScriptString
__ BrailleTranslation: _OBJC_CLASS_$_BRLTTable
__ BrailleTranslation: _OBJC_CLASS_$_BRLTTranslationParameters
__ BrailleTranslation: _OBJC_CLASS_$_BRLTTranslationService
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFDictionaryCreateCopy
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRun
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFRunLoopTimerSetNextFireDate
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreateCopy
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSetSetValue
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringTransform
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStringTransformStripCombiningMarks
__ CoreFoundation: _kCFStringTransformToLatin
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSClassFromString
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLog
__ Foundation: _NSStringFromRange
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ IOKit: _IOHIDDeviceCreate
__ IOKit: _IOHIDDeviceGetProperty
__ IOKit: _IOIteratorNext
__ IOKit: _IOMasterPort
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortGetRunLoopSource
__ IOKit: _IOObjectConformsTo
__ IOKit: _IOObjectIsEqualTo
__ IOKit: _IOObjectRelease
__ IOKit: _IOObjectRetain
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceGetMatchingServices
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ ScreenReaderCore: _OBJC_CLASS_$_SCRCIndexMap
__ ScreenReaderCore: _OBJC_CLASS_$_SCRCTargetSelectorTimer
__ libAccessibility.dylib: _kAXSAccessibilityPreferenceDomain
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bootstrap_check_in
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _cfgetispeed
__ libSystem.B.dylib: _cfgetospeed
__ libSystem.B.dylib: _cfmakeraw
__ libSystem.B.dylib: _cfsetspeed
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_handle
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _ioctl
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_allocate
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_insert_right
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_port_request_notification
__ libSystem.B.dylib: _mach_port_set_attributes
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _task_get_special_port
__ libSystem.B.dylib: _tcdrain
__ libSystem.B.dylib: _tcgetattr
__ libSystem.B.dylib: _tcsetattr
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: dyld_stub_binder
__ libbsm.0.dylib: _audit_token_to_au32
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SCROBrailleClient : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL inputEightDotBraille
 @property  BOOL wordWrapEnabled
 @property  int inputContractionMode

  // class methods
  +[SCROBrailleClient logBrailleRequests:]
  +[SCROBrailleClient statusAttributeDotText]

  // instance methods
  -[SCROBrailleClient init]
  -[SCROBrailleClient dealloc]
  -[SCROBrailleClient delegate]
  -[SCROBrailleClient setDelegate:]
  -[SCROBrailleClient .cxx_destruct]
  -[SCROBrailleClient initWithDelegate:]
  -[SCROBrailleClient needsDisplay]
  -[SCROBrailleClient displayMode]
  -[SCROBrailleClient displayIfNeeded]
  -[SCROBrailleClient display]
  -[SCROBrailleClient isConnected]
  -[SCROBrailleClient isConfigured]
  -[SCROBrailleClient setTableIdentifier:]
  -[SCROBrailleClient connectionClass]
  -[SCROBrailleClient handleCallback:]
  -[SCROBrailleClient _deathTimerHandler]
  -[SCROBrailleClient _lazyConnection]
  -[SCROBrailleClient _registerDelegate]
  -[SCROBrailleClient setMainAttributedString:]
  -[SCROBrailleClient mainAttributedString]
  -[SCROBrailleClient _getWorkingString]
  -[SCROBrailleClient _refreshAfterReconnect]
  -[SCROBrailleClient setDisplayDescriptorCallbackEnabled:]
  -[SCROBrailleClient _setupDeviceDetection]
  -[SCROBrailleClient _deviceConnected:]
  -[SCROBrailleClient setKeepConnectionAlive:]
  -[SCROBrailleClient keepConnectionAlive]
  -[SCROBrailleClient loadDisplayWithBluetoothDeviceAddress:]
  -[SCROBrailleClient removeDisplayWithBluetoothDeviceAddress:]
  -[SCROBrailleClient setAlwaysUsesNemethCodeForTechnicalText:]
  -[SCROBrailleClient alwaysUsesNemethCodeForTechnicalText]
  -[SCROBrailleClient driverConfiguration]
  -[SCROBrailleClient pendingMainAttributedString]
  -[SCROBrailleClient setAnnouncementString:]
  -[SCROBrailleClient setAlertString:timeout:priority:]
  -[SCROBrailleClient setAggregatedStatus:]
  -[SCROBrailleClient pendingAggregatedStatus]
  -[SCROBrailleClient aggregatedStatus]
  -[SCROBrailleClient setVirtualStatusAlignment:]
  -[SCROBrailleClient virtualStatusAlignment]
  -[SCROBrailleClient setMasterStatusCellIndex:]
  -[SCROBrailleClient masterStatusCellIndex]
  -[SCROBrailleClient setShowDotsSevenAndEight:]
  -[SCROBrailleClient showDotsSevenAndEight]
  -[SCROBrailleClient setContractionMode:]
  -[SCROBrailleClient contractionMode]
  -[SCROBrailleClient setInputEightDotBraille:]
  -[SCROBrailleClient inputEightDotBraille]
  -[SCROBrailleClient setShowEightDotBraille:]
  -[SCROBrailleClient showEightDotBraille]
  -[SCROBrailleClient setInputContractionMode:]
  -[SCROBrailleClient inputContractionMode]
  -[SCROBrailleClient setAutomaticBrailleTranslationEnabled:]
  -[SCROBrailleClient automaticBrailleTranslationEnabled]
  -[SCROBrailleClient setWordWrapEnabled:]
  -[SCROBrailleClient wordWrapEnabled]
  -[SCROBrailleClient persistentKeyModifiers]
  -[SCROBrailleClient setPersistentKeyModifiers:]
  -[SCROBrailleClient setExpandedStatusDisplayModeWithStatus:]
  -[SCROBrailleClient setAnnouncementsDisplayMode]
  -[SCROBrailleClient exitCurrentDisplayMode]
  -[SCROBrailleClient displayDescriptorCallbackEnabled]
  -[SCROBrailleClient tokenForRouterIndex:location:appToken:forDisplayWithToken:]
  -[SCROBrailleClient tokenArray]
  -[SCROBrailleClient rangeOfCellRepresentingCharacterAtIndex:]
  -[SCROBrailleClient setSelection:forToken:]
  -[SCROBrailleClient selectAllForToken:]
  -[SCROBrailleClient unselectAllForToken:]
  -[SCROBrailleClient setFocused:forToken:]
  -[SCROBrailleClient simulateKeypress:]
  -[SCROBrailleClient panDisplayLeft:]
  -[SCROBrailleClient panDisplayRight:]
  -[SCROBrailleClient showPreviousAnnouncement]
  -[SCROBrailleClient showNextAnnouncement]
  -[SCROBrailleClient setPrepareToMemorizeNextKey:immediate:forDisplayWithToken:]
  -[SCROBrailleClient setPrimaryBrailleDisplay:]
  -[SCROBrailleClient setSingleLetterInputIsOn:]
  -[SCROBrailleClient setTextSearchModeIsOn:]
  -[SCROBrailleClient setBrailleChordDebounceTimeout:]
  -[SCROBrailleClient translateBrailleToClipboard]


SCROBrailleDisplayCommandDispatcher : NSObject /usr/lib/libSystem.B.dylib <SCROBrailleDisplayCommandDispatcherProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SCROBrailleDisplayCommandDispatcherDelegate> *delegate

  // instance methods
  -[SCROBrailleDisplayCommandDispatcher init]
  -[SCROBrailleDisplayCommandDispatcher delegate]
  -[SCROBrailleDisplayCommandDispatcher setDelegate:]
  -[SCROBrailleDisplayCommandDispatcher .cxx_destruct]
  -[SCROBrailleDisplayCommandDispatcher _handlePanLeftEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handlePanRightEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleMoveLeftEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleMoveRightEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleRouterEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleDeleteEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleEscapeEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleReturnEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleTranslateEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleToggleContractedBrailleEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleToggleEightDotBrailleEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleUnsupportedEvent:]
  -[SCROBrailleDisplayCommandDispatcher handleBrailleKeyEvent:]
  -[SCROBrailleDisplayCommandDispatcher _handleForwardDeleteEvent:]


SCROBrailleDisplayStatus : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *realData
 @property  NSData *virtualData
 @property  NSData *aggregatedData
 @property  int virtualAlignment
 @property  long long masterStatusCellIndex

  // instance methods
  -[SCROBrailleDisplayStatus .cxx_destruct]
  -[SCROBrailleDisplayStatus setMasterStatusCellIndex:]
  -[SCROBrailleDisplayStatus masterStatusCellIndex]
  -[SCROBrailleDisplayStatus realData]
  -[SCROBrailleDisplayStatus setRealData:]
  -[SCROBrailleDisplayStatus virtualData]
  -[SCROBrailleDisplayStatus setVirtualData:]
  -[SCROBrailleDisplayStatus aggregatedData]
  -[SCROBrailleDisplayStatus setAggregatedData:]
  -[SCROBrailleDisplayStatus virtualAlignment]
  -[SCROBrailleDisplayStatus setVirtualAlignment:]


SCROBrailleDisplayInput : NSObject /usr/lib/libSystem.B.dylib
 @property  double quietSince
 @property  double busySince
 @property  double nextWillMemorizeNotificationTime
 @property  double memorizeNextKeyImmediatelyTimeout
 @property  BOOL prepareToMemorizeNextKey
 @property  BOOL requestPrepareToMemorizeNextKey
 @property  BOOL memorizeNextKeyImmediately
 @property  BOOL willMemorizeNow
 @property  BOOL isQuiet
 @property  BOOL newDown
 @property  ^{__CFArray=} currentChord
 @property  ^{__CFSet=} downKeys
 @property  unsigned int routerEvent
 @property  BOOL currentBrailleChordContainsSpacebar
 @property  BOOL currentBrailleChordBeganWithSpacebar
 @property  BOOL currentBrailleChordContainsNonSpacebarChordableKey
 @property  BOOL spacebarIsDown
 @property  BOOL skipBrailleKeyboardKeyTranslation
 @property  double lastBrailleChordTypingTime
 @property  ^{__CFArray=} currentBrailleChord
 @property  ^{__CFSet=} downBrailleDots
 @property  unsigned int currentHIDCommand
 @property  unsigned int currentBrailleModifiers
 @property  unsigned int downBrailleModifiers
 @property  double lastBrailleChordPosted
 @property  double brailleCharExponentialMovingAverage
 @property  double brailleTranslationTimeout

  // instance methods
  -[SCROBrailleDisplayInput dealloc]
  -[SCROBrailleDisplayInput quietSince]
  -[SCROBrailleDisplayInput setQuietSince:]
  -[SCROBrailleDisplayInput busySince]
  -[SCROBrailleDisplayInput setBusySince:]
  -[SCROBrailleDisplayInput nextWillMemorizeNotificationTime]
  -[SCROBrailleDisplayInput setNextWillMemorizeNotificationTime:]
  -[SCROBrailleDisplayInput memorizeNextKeyImmediatelyTimeout]
  -[SCROBrailleDisplayInput setMemorizeNextKeyImmediatelyTimeout:]
  -[SCROBrailleDisplayInput prepareToMemorizeNextKey]
  -[SCROBrailleDisplayInput setPrepareToMemorizeNextKey:]
  -[SCROBrailleDisplayInput requestPrepareToMemorizeNextKey]
  -[SCROBrailleDisplayInput setRequestPrepareToMemorizeNextKey:]
  -[SCROBrailleDisplayInput memorizeNextKeyImmediately]
  -[SCROBrailleDisplayInput setMemorizeNextKeyImmediately:]
  -[SCROBrailleDisplayInput willMemorizeNow]
  -[SCROBrailleDisplayInput setWillMemorizeNow:]
  -[SCROBrailleDisplayInput isQuiet]
  -[SCROBrailleDisplayInput setIsQuiet:]
  -[SCROBrailleDisplayInput newDown]
  -[SCROBrailleDisplayInput setNewDown:]
  -[SCROBrailleDisplayInput currentChord]
  -[SCROBrailleDisplayInput setCurrentChord:]
  -[SCROBrailleDisplayInput downKeys]
  -[SCROBrailleDisplayInput setDownKeys:]
  -[SCROBrailleDisplayInput routerEvent]
  -[SCROBrailleDisplayInput setRouterEvent:]
  -[SCROBrailleDisplayInput currentBrailleChordContainsSpacebar]
  -[SCROBrailleDisplayInput setCurrentBrailleChordContainsSpacebar:]
  -[SCROBrailleDisplayInput currentBrailleChordBeganWithSpacebar]
  -[SCROBrailleDisplayInput setCurrentBrailleChordBeganWithSpacebar:]
  -[SCROBrailleDisplayInput currentBrailleChordContainsNonSpacebarChordableKey]
  -[SCROBrailleDisplayInput setCurrentBrailleChordContainsNonSpacebarChordableKey:]
  -[SCROBrailleDisplayInput spacebarIsDown]
  -[SCROBrailleDisplayInput setSpacebarIsDown:]
  -[SCROBrailleDisplayInput skipBrailleKeyboardKeyTranslation]
  -[SCROBrailleDisplayInput setSkipBrailleKeyboardKeyTranslation:]
  -[SCROBrailleDisplayInput lastBrailleChordTypingTime]
  -[SCROBrailleDisplayInput setLastBrailleChordTypingTime:]
  -[SCROBrailleDisplayInput currentBrailleChord]
  -[SCROBrailleDisplayInput setCurrentBrailleChord:]
  -[SCROBrailleDisplayInput downBrailleDots]
  -[SCROBrailleDisplayInput setDownBrailleDots:]
  -[SCROBrailleDisplayInput currentHIDCommand]
  -[SCROBrailleDisplayInput setCurrentHIDCommand:]
  -[SCROBrailleDisplayInput currentBrailleModifiers]
  -[SCROBrailleDisplayInput setCurrentBrailleModifiers:]
  -[SCROBrailleDisplayInput downBrailleModifiers]
  -[SCROBrailleDisplayInput setDownBrailleModifiers:]
  -[SCROBrailleDisplayInput lastBrailleChordPosted]
  -[SCROBrailleDisplayInput setLastBrailleChordPosted:]
  -[SCROBrailleDisplayInput brailleCharExponentialMovingAverage]
  -[SCROBrailleDisplayInput setBrailleCharExponentialMovingAverage:]
  -[SCROBrailleDisplayInput brailleTranslationTimeout]
  -[SCROBrailleDisplayInput setBrailleTranslationTimeout:]


SCROBrailleDisplay : NSObject /usr/lib/libSystem.B.dylib <SCROBrailleDisplayCommandDispatcherDelegate, SCROBrailleDriverDelegate, BRLTBrailleStateManagerDelegate>
 @property  double brailleKeyDebounceTimeout
 @property  BOOL delegateWantsDisplayCallback
 @property  BOOL inputAllowed
 @property  BOOL automaticBrailleTranslationEnabled
 @property  BOOL wordWrapEnabled
 @property  int inputContractionMode
 @property  int outputContractionMode
 @property  BOOL inputShowEightDot
 @property  BOOL outputShowEightDot
 @property  unsigned int persistentKeyModifiers
 @property  long long lineOffset
 @property  BOOL hasEdits
 @property  NSAttributedString *editingString
 @property  unsigned long brailleLineGenerationID
 @property  SCROBrailleLine *testingBrailleLine
 @property  @? eventHandled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCROBrailleDisplay brailleDriverClassIsValid:]
  +[SCROBrailleDisplay displayWithIOElement:driverIdentifier:delegate:]

  // instance methods
  -[SCROBrailleDisplay dealloc]
  -[SCROBrailleDisplay invalidate]
  -[SCROBrailleDisplay token]
  -[SCROBrailleDisplay isValid]
  -[SCROBrailleDisplay .cxx_destruct]
  -[SCROBrailleDisplay isLoaded]
  -[SCROBrailleDisplay configuration]
  -[SCROBrailleDisplay handleEvent:]
  -[SCROBrailleDisplay beginUpdates]
  -[SCROBrailleDisplay endUpdates]
  -[SCROBrailleDisplay _updateDisplay]
  -[SCROBrailleDisplay hasEdits]
  -[SCROBrailleDisplay _runThread]
  -[SCROBrailleDisplay panLeft]
  -[SCROBrailleDisplay panRight]
  -[SCROBrailleDisplay brailleDisplayInsertedCharacter:]
  -[SCROBrailleDisplay brailleDisplayStringDidChange:brailleSelection:]
  -[SCROBrailleDisplay brailleDisplayDeletedCharacter:]
  -[SCROBrailleDisplay scriptSelectionDidChange:]
  -[SCROBrailleDisplay replaceScriptStringRange:withScriptString:cursorLocation:]
  -[SCROBrailleDisplay didInsertScriptString:]
  -[SCROBrailleDisplay sleep]
  -[SCROBrailleDisplay setAggregatedStatus:]
  -[SCROBrailleDisplay aggregatedStatus]
  -[SCROBrailleDisplay setVirtualStatusAlignment:]
  -[SCROBrailleDisplay virtualStatusAlignment]
  -[SCROBrailleDisplay setMasterStatusCellIndex:]
  -[SCROBrailleDisplay masterStatusCellIndex]
  -[SCROBrailleDisplay setInputContractionMode:]
  -[SCROBrailleDisplay inputContractionMode]
  -[SCROBrailleDisplay setAutomaticBrailleTranslationEnabled:]
  -[SCROBrailleDisplay automaticBrailleTranslationEnabled]
  -[SCROBrailleDisplay setWordWrapEnabled:]
  -[SCROBrailleDisplay wordWrapEnabled]
  -[SCROBrailleDisplay persistentKeyModifiers]
  -[SCROBrailleDisplay setPersistentKeyModifiers:]
  -[SCROBrailleDisplay simulateKeypress:]
  -[SCROBrailleDisplay setSingleLetterInputIsOn:]
  -[SCROBrailleDisplay translateBrailleToClipboard]
  -[SCROBrailleDisplay handleCommandPanLeftForDispatcher:]
  -[SCROBrailleDisplay handleCommandPanRightForDispatcher:]
  -[SCROBrailleDisplay handleCommandMoveLeftForDispatcher:]
  -[SCROBrailleDisplay handleCommandMoveRightForDispatcher:]
  -[SCROBrailleDisplay handleCommandRouterKeyEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandDeleteKeyEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandForwardDeleteKeyEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandEscapeKeyEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandReturnBrailleEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandTranslateForDispatcher:]
  -[SCROBrailleDisplay handleCommandToggleContractedBrailleEvent:forDispatcher:]
  -[SCROBrailleDisplay handleCommandToggleEightDotBrailleEvent:forDispatcher:]
  -[SCROBrailleDisplay handleUnsupportedKeyEvent:forDispatcher:]
  -[SCROBrailleDisplay brailleInputManager]
  -[SCROBrailleDisplay mainSize]
  -[SCROBrailleDisplay statusSize]
  -[SCROBrailleDisplay _initWithDriver:driverIdentifier:ioElement:delegate:]
  -[SCROBrailleDisplay _delayedDisplayLoad]
  -[SCROBrailleDisplay _unloadNotification:]
  -[SCROBrailleDisplay _configurationChangeNotification:]
  -[SCROBrailleDisplay _sleepNotification:]
  -[SCROBrailleDisplay _attemptLoad]
  -[SCROBrailleDisplay tokenForRouterIndex:location:appToken:]
  -[SCROBrailleDisplay _setBrailleFormatterHandler:]
  -[SCROBrailleDisplay _statusDisplayHandler:]
  -[SCROBrailleDisplay _aggregatedStatusHandler:]
  -[SCROBrailleDisplay _setDelegateWantsDisplayCallbackHandler:]
  -[SCROBrailleDisplay _panHandler:]
  -[SCROBrailleDisplay _isMemorizingKeys]
  -[SCROBrailleDisplay _unloadHandler]
  -[SCROBrailleDisplay _configurationChangeHandler]
  -[SCROBrailleDisplay _simulateKeypressHandler:]
  -[SCROBrailleDisplay _bulkStatusAttributesHandler:]
  -[SCROBrailleDisplay _setBatchUpdates:]
  -[SCROBrailleDisplay _singleLetterInputHandler:]
  -[SCROBrailleDisplay _textSearchModeHandler:]
  -[SCROBrailleDisplay _translateBrailleToClipboard]
  -[SCROBrailleDisplay _setBrailleKeyDebounceTimeoutHandler:]
  -[SCROBrailleDisplay eventHandled]
  -[SCROBrailleDisplay _setBrailleFormatter:]
  -[SCROBrailleDisplay _unpauseInput]
  -[SCROBrailleDisplay _processKeyEvents:]
  -[SCROBrailleDisplay _inputPaused]
  -[SCROBrailleDisplay _unpauseInputAndProcessKeyEvents]
  -[SCROBrailleDisplay _statusStringWithDictionary:]
  -[SCROBrailleDisplay unpauseInputOnBrailleFormatterChange]
  -[SCROBrailleDisplay inputShowEightDot]
  -[SCROBrailleDisplay outputShowEightDot]
  -[SCROBrailleDisplay outputContractionMode]
  -[SCROBrailleDisplay _translateBrailleStringAndPostEvent]
  -[SCROBrailleDisplay editingString]
  -[SCROBrailleDisplay _newBrailleKeyForCurrentBrailleChord]
  -[SCROBrailleDisplay _pauseInput]
  -[SCROBrailleDisplay inputAllowed]
  -[SCROBrailleDisplay lineOffset]
  -[SCROBrailleDisplay _newBrailleKeyboardKeyForText:modifiers:]
  -[SCROBrailleDisplay _inputEventHandler]
  -[SCROBrailleDisplay _hasKeyChord]
  -[SCROBrailleDisplay _hasPressedBrailleKeys]
  -[SCROBrailleDisplay _newBrailleKeyForCurrentKeyChord]
  -[SCROBrailleDisplay _hasBrailleChord]
  -[SCROBrailleDisplay _stopMemorization]
  -[SCROBrailleDisplay _delayedUnloadNotification]
  -[SCROBrailleDisplay _delayedConfigurationChangeNotification]
  -[SCROBrailleDisplay _delayedSleepNotification:]
  -[SCROBrailleDisplay _replaceRange:withString:cursor:]
  -[SCROBrailleDisplay brailleDriverDidReceiveInput]
  -[SCROBrailleDisplay unsleep]
  -[SCROBrailleDisplay driverIdentifier]
  -[SCROBrailleDisplay driverModelIdentifier]
  -[SCROBrailleDisplay lineDescriptor]
  -[SCROBrailleDisplay ioElement]
  -[SCROBrailleDisplay setInputAllowed:]
  -[SCROBrailleDisplay requestFlushLine]
  -[SCROBrailleDisplay setBrailleFormatter:]
  -[SCROBrailleDisplay realStatus]
  -[SCROBrailleDisplay virtualStatus]
  -[SCROBrailleDisplay delegateWantsDisplayCallback]
  -[SCROBrailleDisplay setDelegateWantsDisplayCallback:]
  -[SCROBrailleDisplay setStatusAttributesWithMasterCellIndex:virtualAlignment:]
  -[SCROBrailleDisplay setPrepareToMemorizeNextKey:immediate:]
  -[SCROBrailleDisplay setTextSearchModeOn:]
  -[SCROBrailleDisplay setBrailleKeyDebounceTimeout:]
  -[SCROBrailleDisplay _currentChordShouldExecuteEvenDuringTyping]
  -[SCROBrailleDisplay insertTypingString:]
  -[SCROBrailleDisplay testingBrailleLine]
  -[SCROBrailleDisplay _startEditingText]
  -[SCROBrailleDisplay brailleLineGenerationID]
  -[SCROBrailleDisplay keyArrayForBrailleStringWithCurrentModifiers:]
  -[SCROBrailleDisplay _blinkerEventHandler]
  -[SCROBrailleDisplay setOutputContractionMode:]
  -[SCROBrailleDisplay setInputShowEightDot:]
  -[SCROBrailleDisplay setOutputShowEightDot:]
  -[SCROBrailleDisplay setEventHandled:]
  -[SCROBrailleDisplay brailleKeyDebounceTimeout]


SCROBrailleDisplayAutoDetector : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SCROBrailleDisplayAutoDetector allocWithZone:]
  +[SCROBrailleDisplayAutoDetector initialize]
  +[SCROBrailleDisplayAutoDetector sharedDetector]

  // instance methods
  -[SCROBrailleDisplayAutoDetector init]
  -[SCROBrailleDisplayAutoDetector copyWithZone:]
  -[SCROBrailleDisplayAutoDetector .cxx_destruct]
  -[SCROBrailleDisplayAutoDetector _driverBundleIdentifiers]
  -[SCROBrailleDisplayAutoDetector _autodetectIOServices:]
  -[SCROBrailleDisplayAutoDetector _initializeAutodetectSerialPorts:]
  -[SCROBrailleDisplayAutoDetector _serialDataMatchesDriver:driverBundleIdentifiers:fileDescriptor:]
  -[SCROBrailleDisplayAutoDetector serialPortsWerePublished:]
  -[SCROBrailleDisplayAutoDetector _detectSerialPorts:]
  -[SCROBrailleDisplayAutoDetector _serialPortMatchingDictionary]
  -[SCROBrailleDisplayAutoDetector _registerForSerialPortNotifications]
  -[SCROBrailleDisplayAutoDetector _openSerialPortService:sortedDriverBundleIdentifiers:]
  -[SCROBrailleDisplayAutoDetector isAutoDetectEnabled]
  -[SCROBrailleDisplayAutoDetector detectDisplays]
  -[SCROBrailleDisplayAutoDetector stopDetectingDisplays]


SCROBrailleDisplayHistory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SCROBrailleDisplayHistory initialize]

  // instance methods
  -[SCROBrailleDisplayHistory init]
  -[SCROBrailleDisplayHistory dealloc]
  -[SCROBrailleDisplayHistory addString:]
  -[SCROBrailleDisplayHistory _moveIndexBy:]
  -[SCROBrailleDisplayHistory snapshotUnread]
  -[SCROBrailleDisplayHistory markSnapshotAsRead]
  -[SCROBrailleDisplayHistory hasUnread]
  -[SCROBrailleDisplayHistory currentString]
  -[SCROBrailleDisplayHistory moveToNext]
  -[SCROBrailleDisplayHistory moveToPrevious]
  -[SCROBrailleDisplayHistory isOnMostRecent]
  -[SCROBrailleDisplayHistory moveToMostRecent]


SCROBrailleDisplayManagedQueue : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SCROBrailleDisplayManagedQueue init]
  -[SCROBrailleDisplayManagedQueue dealloc]
  -[SCROBrailleDisplayManagedQueue .cxx_destruct]
  -[SCROBrailleDisplayManagedQueue removeDisplay:]
  -[SCROBrailleDisplayManagedQueue _queueForState:createQueue:]
  -[SCROBrailleDisplayManagedQueue _fillActiveBrailleDisplayQueue]
  -[SCROBrailleDisplayManagedQueue disconnectedDisplays]
  -[SCROBrailleDisplayManagedQueue addDisplay:withState:]
  -[SCROBrailleDisplayManagedQueue setState:forDisplay:]
  -[SCROBrailleDisplayManagedQueue stateForDisplay:]
  -[SCROBrailleDisplayManagedQueue displayForToken:]
  -[SCROBrailleDisplayManagedQueue displayCountIncludingDisconnectedDisplays:]
  -[SCROBrailleDisplayManagedQueue primaryDisplay]
  -[SCROBrailleDisplayManagedQueue setPrimaryDisplay:]
  -[SCROBrailleDisplayManagedQueue activeQueueMaximumSize]
  -[SCROBrailleDisplayManagedQueue setActiveQueueMaximumSize:]
  -[SCROBrailleDisplayManagedQueue activeDisplays]
  -[SCROBrailleDisplayManagedQueue activePendingDisplays]
  -[SCROBrailleDisplayManagedQueue sleepingDisplays]
  -[SCROBrailleDisplayManagedQueue loadingDisplays]


SCROBrailleDisplayManagerStatus : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *aggregatedData
 @property  int virtualAlignment
 @property  long long masterStatusCellIndex
 @property  BOOL currentAnnouncementUnread
 @property  BOOL anyUnreadAnnouncements

  // instance methods
  -[SCROBrailleDisplayManagerStatus .cxx_destruct]
  -[SCROBrailleDisplayManagerStatus setMasterStatusCellIndex:]
  -[SCROBrailleDisplayManagerStatus masterStatusCellIndex]
  -[SCROBrailleDisplayManagerStatus aggregatedData]
  -[SCROBrailleDisplayManagerStatus setAggregatedData:]
  -[SCROBrailleDisplayManagerStatus virtualAlignment]
  -[SCROBrailleDisplayManagerStatus setVirtualAlignment:]
  -[SCROBrailleDisplayManagerStatus currentAnnouncementUnread]
  -[SCROBrailleDisplayManagerStatus setCurrentAnnouncementUnread:]
  -[SCROBrailleDisplayManagerStatus anyUnreadAnnouncements]
  -[SCROBrailleDisplayManagerStatus setAnyUnreadAnnouncements:]


SCROBrailleDisplayManager : NSObject /usr/lib/libSystem.B.dylib <SCROBrailleDisplayDelegate>
 @property  <SCROSBrailleDisplayManagerDelegate> *delegate
 @property  BOOL inputEightDotBraille
 @property  BOOL wordWrapEnabled
 @property  int inputContractionMode
 @property  unsigned int persistentKeyModifiers
 @property  SCROBrailleDisplayManagedQueue *managedDisplayQueue
 @property  @? eventHandled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCROBrailleDisplayManager initialize]

  // instance methods
  -[SCROBrailleDisplayManager init]
  -[SCROBrailleDisplayManager invalidate]
  -[SCROBrailleDisplayManager isValid]
  -[SCROBrailleDisplayManager delegate]
  -[SCROBrailleDisplayManager setDelegate:]
  -[SCROBrailleDisplayManager .cxx_destruct]
  -[SCROBrailleDisplayManager displayMode]
  -[SCROBrailleDisplayManager beginUpdates]
  -[SCROBrailleDisplayManager endUpdates]
  -[SCROBrailleDisplayManager isConfigured]
  -[SCROBrailleDisplayManager setMainAttributedString:]
  -[SCROBrailleDisplayManager mainAttributedString]
  -[SCROBrailleDisplayManager setAlwaysUsesNemethCodeForTechnicalText:]
  -[SCROBrailleDisplayManager alwaysUsesNemethCodeForTechnicalText]
  -[SCROBrailleDisplayManager driverConfiguration]
  -[SCROBrailleDisplayManager setAggregatedStatus:]
  -[SCROBrailleDisplayManager aggregatedStatus]
  -[SCROBrailleDisplayManager setVirtualStatusAlignment:]
  -[SCROBrailleDisplayManager virtualStatusAlignment]
  -[SCROBrailleDisplayManager setMasterStatusCellIndex:]
  -[SCROBrailleDisplayManager masterStatusCellIndex]
  -[SCROBrailleDisplayManager setShowDotsSevenAndEight:]
  -[SCROBrailleDisplayManager showDotsSevenAndEight]
  -[SCROBrailleDisplayManager setContractionMode:]
  -[SCROBrailleDisplayManager contractionMode]
  -[SCROBrailleDisplayManager setInputEightDotBraille:]
  -[SCROBrailleDisplayManager inputEightDotBraille]
  -[SCROBrailleDisplayManager setShowEightDotBraille:]
  -[SCROBrailleDisplayManager showEightDotBraille]
  -[SCROBrailleDisplayManager setInputContractionMode:]
  -[SCROBrailleDisplayManager inputContractionMode]
  -[SCROBrailleDisplayManager setAutomaticBrailleTranslationEnabled:]
  -[SCROBrailleDisplayManager setWordWrapEnabled:]
  -[SCROBrailleDisplayManager wordWrapEnabled]
  -[SCROBrailleDisplayManager persistentKeyModifiers]
  -[SCROBrailleDisplayManager setPersistentKeyModifiers:]
  -[SCROBrailleDisplayManager setAnnouncementsDisplayMode]
  -[SCROBrailleDisplayManager exitCurrentDisplayMode]
  -[SCROBrailleDisplayManager tokenForRouterIndex:location:appToken:forDisplayWithToken:]
  -[SCROBrailleDisplayManager simulateKeypress:]
  -[SCROBrailleDisplayManager panDisplayLeft:]
  -[SCROBrailleDisplayManager panDisplayRight:]
  -[SCROBrailleDisplayManager showPreviousAnnouncement]
  -[SCROBrailleDisplayManager showNextAnnouncement]
  -[SCROBrailleDisplayManager setPrepareToMemorizeNextKey:immediate:forDisplayWithToken:]
  -[SCROBrailleDisplayManager setPrimaryBrailleDisplay:]
  -[SCROBrailleDisplayManager setSingleLetterInputIsOn:]
  -[SCROBrailleDisplayManager setTextSearchModeIsOn:]
  -[SCROBrailleDisplayManager translateBrailleToClipboard]
  -[SCROBrailleDisplayManager brailleInputManager]
  -[SCROBrailleDisplayManager newBrailleDisplayCommandDispatcher]
  -[SCROBrailleDisplayManager brailleDisplay:driverDidLoad:]
  -[SCROBrailleDisplayManager brailleDisplay:isSleeping:]
  -[SCROBrailleDisplayManager eventHandled]
  -[SCROBrailleDisplayManager brailleDriverDisconnected:]
  -[SCROBrailleDisplayManager brailleDisplay:didDisplay:]
  -[SCROBrailleDisplayManager configurationChangedForBrailleDisplay:]
  -[SCROBrailleDisplayManager brailleDisplay:copyStringToClipboard:]
  -[SCROBrailleDisplayManager brailleDidStartEditingWithDisplay:]
  -[SCROBrailleDisplayManager brailleDisplay:didReplaceRange:withString:cursor:]
  -[SCROBrailleDisplayManager brailleDisplay:pressedKeys:]
  -[SCROBrailleDisplayManager brailleDisplay:didPanLeft:elementToken:appToken:]
  -[SCROBrailleDisplayManager brailleDisplay:didPanRight:elementToken:appToken:]
  -[SCROBrailleDisplayManager playBorderHitSoundForBrailleDisplay:]
  -[SCROBrailleDisplayManager playCommandNotSupportedSoundForBrailleDisplay:]
  -[SCROBrailleDisplayManager brailleDisplay:memorizedKey:]
  -[SCROBrailleDisplayManager brailleDisplay:willMemorizeKey:]
  -[SCROBrailleDisplayManager brailleDisplay:didMoveSelection:]
  -[SCROBrailleDisplayManager brailleDisplay:insertedUntranslatedText:speakLiterally:]
  -[SCROBrailleDisplayManager brailleDisplay:deletedUntranslatedText:speakLiterally:]
  -[SCROBrailleDisplayManager setBrailleKeyDebounceTimeout:]
  -[SCROBrailleDisplayManager setEventHandled:]
  -[SCROBrailleDisplayManager _eventQueue_invalidate]
  -[SCROBrailleDisplayManager _mainQueue_invalidate]
  -[SCROBrailleDisplayManager _eventQueue_stop]
  -[SCROBrailleDisplayManager _disableAutoDetect]
  -[SCROBrailleDisplayManager _eventQueue_stopAlertTimer]
  -[SCROBrailleDisplayManager _enumerateActiveDisplays:]
  -[SCROBrailleDisplayManager _deviceConnectedHandler:]
  -[SCROBrailleDisplayManager _addDetectedIOElement:withDriverIdentifier:]
  -[SCROBrailleDisplayManager _eventQueue_addDetectedIOElement:withDriverIdentifier:]
  -[SCROBrailleDisplayManager _loadNextDriverForIOElement:]
  -[SCROBrailleDisplayManager _eventQueue_loadNextDriverForIOElement:]
  -[SCROBrailleDisplayManager _displayWithIOElement:driverIdentifier:delegate:]
  -[SCROBrailleDisplayManager _eventQueue_brailleDisplayDriverDidLoad:]
  -[SCROBrailleDisplayManager _eventQueue_brailleDisplayDriverFailedToLoad:]
  -[SCROBrailleDisplayManager _eventQueue_unloadStealthDisplay]
  -[SCROBrailleDisplayManager _saveBluetoothDisplayConfiguration:]
  -[SCROBrailleDisplayManager _eventQueue_driverConfiguration]
  -[SCROBrailleDisplayManager _loadStealthDisplay]
  -[SCROBrailleDisplayManager _eventQueue_brailleDriverDisconnected:]
  -[SCROBrailleDisplayManager setUIDisplayMode]
  -[SCROBrailleDisplayManager _eventQueue_brailleDisplay:isSleeping:]
  -[SCROBrailleDisplayManager _unloadStealthDisplay]
  -[SCROBrailleDisplayManager _eventQueue_mainAttributedString]
  -[SCROBrailleDisplayManager _eventQueue_setMainAttributedString:shouldDisplay:forceUpdate:]
  -[SCROBrailleDisplayManager _eventQueue_loadStealthDisplay]
  -[SCROBrailleDisplayManager _eventQueue_setPrimaryDisplay:]
  -[SCROBrailleDisplayManager _eventQueue_setDisplayInputAccessMode:]
  -[SCROBrailleDisplayManager setMainAttributedString:forceUpdate:]
  -[SCROBrailleDisplayManager _eventQueue_doSetDisplayMode:]
  -[SCROBrailleDisplayManager tokenizeString:intoFormatter:selection:]
  -[SCROBrailleDisplayManager _eventQueue_resetAlertTimer]
  -[SCROBrailleDisplayManager _eventQueue_setAggregatedStatus:]
  -[SCROBrailleDisplayManager _eventQueue_setMasterStatusCellIndex:]
  -[SCROBrailleDisplayManager _eventQueue_setVirtualStatusAlignment:]
  -[SCROBrailleDisplayManager _eventQueue_panDisplayLeft:token:]
  -[SCROBrailleDisplayManager _eventQueue_setDisplayMode:]
  -[SCROBrailleDisplayManager _eventQueue_exitCurrentDisplayMode]
  -[SCROBrailleDisplayManager _eventQueue_cachedMainStringForDisplayMode:]
  -[SCROBrailleDisplayManager _eventQueue_popDisplayModeStack]
  -[SCROBrailleDisplayManager _eventQueue_alertTimeoutHandler]
  -[SCROBrailleDisplayManager _eventQueue_setTableIdentifier:]
  -[SCROBrailleDisplayManager _eventQueue_setAlwaysUsesNemethCodeForTechnicalText:]
  -[SCROBrailleDisplayManager _eventQueue_setContractionMode:]
  -[SCROBrailleDisplayManager _eventQueue_setShowEightDotBraille:]
  -[SCROBrailleDisplayManager _eventQueue_setInputEightDotBraille:]
  -[SCROBrailleDisplayManager _refreshEightDotEnabledOnDisplays]
  -[SCROBrailleDisplayManager _eventQueue_setAutomaticBrailleTranslationEnabled:]
  -[SCROBrailleDisplayManager _eventQueue_setWordWrapEnabled:]
  -[SCROBrailleDisplayManager _eventQueue_setInputContractionMode:]
  -[SCROBrailleDisplayManager _eventQueue_setPersistentKeyModifiers:]
  -[SCROBrailleDisplayManager _eventQueue_showDotsSevenAndEight:]
  -[SCROBrailleDisplayManager _eventQueue_showNextAnnouncement:]
  -[SCROBrailleDisplayManager _eventQueue_setLineDescriptorCallbackEnabled:]
  -[SCROBrailleDisplayManager _eventQueue_activeDisplayForToken:]
  -[SCROBrailleDisplayManager rangeOfBrailleCellRepresentingCharacterAtIndex:]
  -[SCROBrailleDisplayManager _eventQueue_simulateKeypress:]
  -[SCROBrailleDisplayManager _eventQueue_prepareToMemorizeNextKey:immediately:forDisplayWithToken:]
  -[SCROBrailleDisplayManager _eventQueue_setBatchUpdates:]
  -[SCROBrailleDisplayManager _eventQueue_setSingleLetterInputIsOn:]
  -[SCROBrailleDisplayManager _eventQueue_setTextSearchModeIsOn:]
  -[SCROBrailleDisplayManager _eventQueue_translateBrailleToClipboard]
  -[SCROBrailleDisplayManager _eventQueue_setBrailleKeyDebounceTimeout:]
  -[SCROBrailleDisplayManager _eventQueue_refreshEightDotEnabledOnDisplays]
  -[SCROBrailleDisplayManager _enableAutoDetect]
  -[SCROBrailleDisplayManager loadBluetoothDriverWithAddress:]
  -[SCROBrailleDisplayManager removeBluetoothDriverWithAddress:]
  -[SCROBrailleDisplayManager _resetBluetoothReconnectionTimer]
  -[SCROBrailleDisplayManager _blankOutDisplaysInQueue:]
  -[SCROBrailleDisplayManager hasActiveDisplays]
  -[SCROBrailleDisplayManager setDisplayInputAccessMode:]
  -[SCROBrailleDisplayManager displayInputAccessMode]
  -[SCROBrailleDisplayManager configureTableWithIdentifier:]
  -[SCROBrailleDisplayManager automaticBrailleTranslation]
  -[SCROBrailleDisplayManager setLineDescriptorDisplayCallbackEnabled:]
  -[SCROBrailleDisplayManager lineDescriptorDisplayCallbackEnabled]
  -[SCROBrailleDisplayManager managedDisplayQueue]


SCROBrailleEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  int type
 @property  BOOL shouldDisplay

  // class methods
  +[SCROBrailleEvent eventWithType:data:]
  +[SCROBrailleEvent eventWithType:data:data2:data3:]

  // instance methods
  -[SCROBrailleEvent type]
  -[SCROBrailleEvent .cxx_destruct]
  -[SCROBrailleEvent data]
  -[SCROBrailleEvent shouldDisplay]
  -[SCROBrailleEvent setShouldDisplay:]
  -[SCROBrailleEvent data2]
  -[SCROBrailleEvent initWithType:data:data2:data3:]
  -[SCROBrailleEvent data3]


SCROBrailleEventDispatcher : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SCROBrailleEventDispatcher dealloc]
  -[SCROBrailleEventDispatcher invalidate]
  -[SCROBrailleEventDispatcher isValid]
  -[SCROBrailleEventDispatcher .cxx_destruct]
  -[SCROBrailleEventDispatcher start]
  -[SCROBrailleEventDispatcher initWithTarget:]
  -[SCROBrailleEventDispatcher _processQueue]
  -[SCROBrailleEventDispatcher enqueueEvent:]


SCROBrailleFormatter : NSObject /usr/lib/libSystem.B.dylib <BRLTBrailleTranslationDelegateProtocol, BRLTBrailleStateManagerDelegate, NSCopying>
 @property  int lineFocus
 @property  int outputContractionMode
 @property  int inputContractionMode
 @property  BOOL outputShowEightDot
 @property  BOOL inputShowEightDot
 @property  BOOL showDotsSevenAndEight
 @property  int displayMode
 @property  BOOL currentUnread
 @property  BOOL anyUnread
 @property  id appToken
 @property  long long lineOffset
 @property  NSAttributedString *statusText
 @property  BRLTBrailleStateManager *stateManager
 @property  long long firstToken
 @property  long long lastToken
 @property  unsigned long generationID
 @property  <BRLTBrailleStateManagerDelegate> *outputDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCROBrailleFormatter resetEditingManager]

  // instance methods
  -[SCROBrailleFormatter copyWithZone:]
  -[SCROBrailleFormatter .cxx_destruct]
  -[SCROBrailleFormatter displayMode]
  -[SCROBrailleFormatter generationID]
  -[SCROBrailleFormatter setDisplayMode:]
  -[SCROBrailleFormatter deepCopyWithZone:]
  -[SCROBrailleFormatter translate]
  -[SCROBrailleFormatter statusText]
  -[SCROBrailleFormatter setStatusText:]
  -[SCROBrailleFormatter stateManager]
  -[SCROBrailleFormatter translate:]
  -[SCROBrailleFormatter brailleDisplayInsertedCharacter:]
  -[SCROBrailleFormatter brailleDisplayStringDidChange:brailleSelection:]
  -[SCROBrailleFormatter printBrailleForText:language:mode:textPositionsRange:locations:]
  -[SCROBrailleFormatter brailleDisplayDeletedCharacter:]
  -[SCROBrailleFormatter textForPrintBraille:language:mode:locations:]
  -[SCROBrailleFormatter scriptSelectionDidChange:]
  -[SCROBrailleFormatter replaceScriptStringRange:withScriptString:cursorLocation:]
  -[SCROBrailleFormatter didInsertScriptString:]
  -[SCROBrailleFormatter showDotsSevenAndEight]
  -[SCROBrailleFormatter inputContractionMode]
  -[SCROBrailleFormatter anyUnread]
  -[SCROBrailleFormatter currentUnread]
  -[SCROBrailleFormatter addText:selection:token:focus:isEditableText:]
  -[SCROBrailleFormatter inputShowEightDot]
  -[SCROBrailleFormatter outputShowEightDot]
  -[SCROBrailleFormatter outputContractionMode]
  -[SCROBrailleFormatter appToken]
  -[SCROBrailleFormatter firstToken]
  -[SCROBrailleFormatter lastToken]
  -[SCROBrailleFormatter lineOffset]
  -[SCROBrailleFormatter addText:overrideText:language:selection:token:focus:technical:isEditableText:paddingRange:editingString:]
  -[SCROBrailleFormatter initWithOutputContractionMode:inputContractionMode:outputShowEightDot:inputShowEightDot:showDotsSevenAndEight:]
  -[SCROBrailleFormatter setLineFocus:]
  -[SCROBrailleFormatter setCurrentUnread:]
  -[SCROBrailleFormatter setAnyUnread:]
  -[SCROBrailleFormatter addText:selection:token:focus:technical:isEditableText:]
  -[SCROBrailleFormatter setLineOffset:]
  -[SCROBrailleFormatter setAppToken:]
  -[SCROBrailleFormatter rangeOfBrailleCellRepresentingCharacterAtIndex:]
  -[SCROBrailleFormatter lineFocus]
  -[SCROBrailleFormatter addText:language:selection:token:focus:isEditableText:]
  -[SCROBrailleFormatter addText:overrideText:language:selection:token:focus:technical:isEditableText:]
  -[SCROBrailleFormatter outputDelegate]
  -[SCROBrailleFormatter addText:language:selection:token:focus:technical:isEditableText:]
  -[SCROBrailleFormatter setOutputDelegate:]


SCROBrailleHandler : SCROHandler <SCROSBrailleDisplayManagerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCROBrailleHandler invalidate]
  -[SCROBrailleHandler .cxx_destruct]
  -[SCROBrailleHandler handleBrailleKeypress:]
  -[SCROBrailleHandler handleBrailleReplaceTextRange:withString:cursor:]
  -[SCROBrailleHandler handleBrailleInsertedUntranslatedText:speakLiterally:]
  -[SCROBrailleHandler handleBrailleDeletedUntranslatedText:speakLiterally:]
  -[SCROBrailleHandler handleBrailleKeyWillMemorize:]
  -[SCROBrailleHandler handleBrailleKeyMemorize:]
  -[SCROBrailleHandler handleBrailleDidDisplay:]
  -[SCROBrailleHandler handleBrailleDidPanLeft:elementToken:appToken:]
  -[SCROBrailleHandler handleBrailleDidPanRight:elementToken:appToken:]
  -[SCROBrailleHandler handleBrailleDidShowPreviousAnnouncement:]
  -[SCROBrailleHandler handleBrailleDidShowNextAnnouncement:]
  -[SCROBrailleHandler handleFailedToLoadBluetoothDevice:]
  -[SCROBrailleHandler handleBrailleTableFailedToLoad:]
  -[SCROBrailleHandler handleDisplayModeChanged:]
  -[SCROBrailleHandler handleBrailleDriverDidLoad]
  -[SCROBrailleHandler configurationDidChange]
  -[SCROBrailleHandler handleBrailleDriverDisconnected]
  -[SCROBrailleHandler handleStartEditing]
  -[SCROBrailleHandler handleCopyStringToClipboard:]
  -[SCROBrailleHandler handlePlayBorderHitSound]
  -[SCROBrailleHandler handlePlayCommandNotSupportedSound]
  -[SCROBrailleHandler handleRegisterCallbackForKey:trusted:]
  -[SCROBrailleHandler handleSetValue:forKey:trusted:]
  -[SCROBrailleHandler handleGetValue:forKey:withObject:trusted:]
  -[SCROBrailleHandler handlePerformActionForKey:trusted:]
  -[SCROBrailleHandler initWithBrailleDisplayManager:]


SCROBrailleKey : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[SCROBrailleKey supportsSecureCoding]

  // instance methods
  -[SCROBrailleKey init]
  -[SCROBrailleKey encodeWithCoder:]
  -[SCROBrailleKey initWithCoder:]
  -[SCROBrailleKey .cxx_destruct]
  -[SCROBrailleKey identifier]
  -[SCROBrailleKey keyMasks]
  -[SCROBrailleKey displayMode]
  -[SCROBrailleKey setDisplayMode:]
  -[SCROBrailleKey getRouterIndex:token:location:appToken:]
  -[SCROBrailleKey setDisplayToken:]
  -[SCROBrailleKey addKeyMask:]
  -[SCROBrailleKey addSpacebarKeyMask]
  -[SCROBrailleKey addModifierMask:]
  -[SCROBrailleKey setRouterIndex:token:location:appToken:]
  -[SCROBrailleKey displayToken]


SCROBrailleKeyboardKey : SCROBrailleKey <NSSecureCoding>
 @property  NSString *keyString
 @property  unsigned int modifiers
 @property  unsigned int keyCode
 @property  unsigned int virtualKeyCode

  // class methods
  +[SCROBrailleKeyboardKey supportsSecureCoding]

  // instance methods
  -[SCROBrailleKeyboardKey encodeWithCoder:]
  -[SCROBrailleKeyboardKey initWithCoder:]
  -[SCROBrailleKeyboardKey .cxx_destruct]
  -[SCROBrailleKeyboardKey keyString]
  -[SCROBrailleKeyboardKey keyCode]
  -[SCROBrailleKeyboardKey setKeyCode:]
  -[SCROBrailleKeyboardKey modifiers]
  -[SCROBrailleKeyboardKey setModifiers:]
  -[SCROBrailleKeyboardKey setKeyString:]
  -[SCROBrailleKeyboardKey virtualKeyCode]
  -[SCROBrailleKeyboardKey setVirtualKeyCode:]


SCROBrailleLineVirtualStatus : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *data
 @property  int alignment
 @property  long long length
 @property  char * cells

  // instance methods
  -[SCROBrailleLineVirtualStatus dealloc]
  -[SCROBrailleLineVirtualStatus length]
  -[SCROBrailleLineVirtualStatus setLength:]
  -[SCROBrailleLineVirtualStatus .cxx_destruct]
  -[SCROBrailleLineVirtualStatus data]
  -[SCROBrailleLineVirtualStatus setData:]
  -[SCROBrailleLineVirtualStatus alignment]
  -[SCROBrailleLineVirtualStatus setAlignment:]
  -[SCROBrailleLineVirtualStatus cells]
  -[SCROBrailleLineVirtualStatus setCells:]


SCROPendingBrailleEdit : NSObject /usr/lib/libSystem.B.dylib

SCROPendingBrailleDelete : SCROPendingBrailleEdit
 @property  BOOL isForwardDelete

  // instance methods
  -[SCROPendingBrailleDelete isForwardDelete]
  -[SCROPendingBrailleDelete setIsForwardDelete:]


SCROPendingBrailleModifierPair : SCROPendingBrailleEdit
 @property  NSString *pendingBraille
 @property  NSArray *modifiers

  // instance methods
  -[SCROPendingBrailleModifierPair .cxx_destruct]
  -[SCROPendingBrailleModifierPair modifiers]
  -[SCROPendingBrailleModifierPair initWithPendingBraille:modifiers:]
  -[SCROPendingBrailleModifierPair pendingBraille]


SCROBrailleLine : NSObject /usr/lib/libSystem.B.dylib <BRLTBrailleTranslationDelegateProtocol, BRLTBrailleStateManagerDelegate>
 @property  BRLTBrailleStateManager *stateManager
 @property  NSMutableArray *pendingBrailleStringDictionaries
 @property  BOOL editableFieldInterruptedByAlert
 @property  BOOL needsDisplayFlush
 @property  BOOL displayEnabled
 @property  BOOL wordWrapEnabled
 @property  BOOL isSingleLetterInputOn
 @property  BOOL isTextSearchModeOn
 @property  long long lineOffset
 @property  unsigned long generationID
 @property  BOOL hasEdits
 @property  BOOL wantsEdits
 @property  <BRLTBrailleStateManagerDelegate> *translationDelegate
 @property  NSAttributedString *editingString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCROBrailleLine initialize]

  // instance methods
  -[SCROBrailleLine dealloc]
  -[SCROBrailleLine .cxx_destruct]
  -[SCROBrailleLine setFormatter:]
  -[SCROBrailleLine displayMode]
  -[SCROBrailleLine _flush]
  -[SCROBrailleLine display]
  -[SCROBrailleLine generationID]
  -[SCROBrailleLine setGenerationID:]
  -[SCROBrailleLine setDisplayMode:]
  -[SCROBrailleLine translate]
  -[SCROBrailleLine discardEdits]
  -[SCROBrailleLine stateManager]
  -[SCROBrailleLine hasEdits]
  -[SCROBrailleLine panLeft]
  -[SCROBrailleLine panRight]
  -[SCROBrailleLine brailleDisplayInsertedCharacter:]
  -[SCROBrailleLine brailleDisplayStringDidChange:brailleSelection:]
  -[SCROBrailleLine printBrailleForText:language:mode:textPositionsRange:locations:]
  -[SCROBrailleLine brailleDisplayDeletedCharacter:]
  -[SCROBrailleLine textForPrintBraille:language:mode:locations:]
  -[SCROBrailleLine scriptSelectionDidChange:]
  -[SCROBrailleLine replaceScriptStringRange:withScriptString:cursorLocation:]
  -[SCROBrailleLine didInsertScriptString:]
  -[SCROBrailleLine setTranslationDelegate:]
  -[SCROBrailleLine translationDelegate]
  -[SCROBrailleLine setMasterStatusCellIndex:]
  -[SCROBrailleLine masterStatusCellIndex]
  -[SCROBrailleLine setShowDotsSevenAndEight:]
  -[SCROBrailleLine showDotsSevenAndEight]
  -[SCROBrailleLine setWordWrapEnabled:]
  -[SCROBrailleLine wordWrapEnabled]
  -[SCROBrailleLine initWithDriver:mainSize:statusSize:]
  -[SCROBrailleLine newLineDescriptor]
  -[SCROBrailleLine tokenForRouterIndex:location:appToken:]
  -[SCROBrailleLine anyUnread]
  -[SCROBrailleLine currentUnread]
  -[SCROBrailleLine canPanLeft]
  -[SCROBrailleLine canPanRight]
  -[SCROBrailleLine editingString]
  -[SCROBrailleLine setVirtualStatus:alignment:]
  -[SCROBrailleLine setRealStatus:]
  -[SCROBrailleLine setMainSize:]
  -[SCROBrailleLine setStatusSize:]
  -[SCROBrailleLine setIsSingleLetterInputOn:]
  -[SCROBrailleLine setIsTextSearchModeOn:]
  -[SCROBrailleLine translatedBrailleForTableIdentifier:]
  -[SCROBrailleLine insertBrailleStringAtCursor:modifiers:]
  -[SCROBrailleLine wantsEdits]
  -[SCROBrailleLine appToken]
  -[SCROBrailleLine firstToken]
  -[SCROBrailleLine lastToken]
  -[SCROBrailleLine lineOffset]
  -[SCROBrailleLine isSingleLetterInputOn]
  -[SCROBrailleLine moveCursorLeft]
  -[SCROBrailleLine moveCursorRight]
  -[SCROBrailleLine moveCursorToRouterIndex:forwardToScreenReader:]
  -[SCROBrailleLine deleteAtCursor]
  -[SCROBrailleLine forwardDeleteAtCursor]
  -[SCROBrailleLine getStatusRouterIndex:forRawIndex:]
  -[SCROBrailleLine needsDisplayFlush]
  -[SCROBrailleLine blinker]
  -[SCROBrailleLine spokenStringForInsertedBrailleString:speakLiterally:]
  -[SCROBrailleLine spokenStringForDeletedBrailleString:speakLiterally:]
  -[SCROBrailleLine setLineFocus:]
  -[SCROBrailleLine setCurrentUnread:]
  -[SCROBrailleLine setAnyUnread:]
  -[SCROBrailleLine setLineOffset:]
  -[SCROBrailleLine setAppToken:]
  -[SCROBrailleLine lineFocus]
  -[SCROBrailleLine _updateOffsets]
  -[SCROBrailleLine _allowInset]
  -[SCROBrailleLine pendingBrailleStringDictionaries]
  -[SCROBrailleLine _insertBrailleStringAtCursor:modifiers:silently:]
  -[SCROBrailleLine _forwardDeleteAtCursorSilently:]
  -[SCROBrailleLine _deleteAtCursorSilently:]
  -[SCROBrailleLine enumerateWordsBetweenCharacters:text:inRange:usingBlock:]
  -[SCROBrailleLine _blink:]
  -[SCROBrailleLine _setMainCells:length:]
  -[SCROBrailleLine _flushRealStatus]
  -[SCROBrailleLine addAttributedStringToLineBuffer:brailleOffset:]
  -[SCROBrailleLine addAttributedPaddingToLineBuffer:]
  -[SCROBrailleLine _translatedTextInIsolationForBraille:contracted:]
  -[SCROBrailleLine _trimCommonPrefixWithString:fromString:]
  -[SCROBrailleLine _translatedTextForPrefixBraille:printBraille:contracted:]
  -[SCROBrailleLine _dotDescriptionForBrailleString:]
  -[SCROBrailleLine _spokenStringForBrailleString:isDelete:speakLiterally:]
  -[SCROBrailleLine newLineDescriptorWithoutPadding]
  -[SCROBrailleLine _indexOfWhitespaceBeforeIBeam:inLine:]
  -[SCROBrailleLine _indexOfWhitespaceAfterIBeam:inLine:]
  -[SCROBrailleLine textRangeForBrailleRange:]
  -[SCROBrailleLine setDisplayEnabled:]
  -[SCROBrailleLine bufferIndexForRouterIndex:]
  -[SCROBrailleLine displayEnabled]
  -[SCROBrailleLine isTextSearchModeOn]
  -[SCROBrailleLine setPendingBrailleStringDictionaries:]
  -[SCROBrailleLine editableFieldInterruptedByAlert]
  -[SCROBrailleLine setEditableFieldInterruptedByAlert:]


SCROBrailleStealthDriver : NSObject /usr/lib/libSystem.B.dylib <SCROBrailleDriverProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCROBrailleStealthDriver init]
  -[SCROBrailleStealthDriver dealloc]
  -[SCROBrailleStealthDriver .cxx_destruct]
  -[SCROBrailleStealthDriver modelIdentifier]
  -[SCROBrailleStealthDriver isInputEnabled]
  -[SCROBrailleStealthDriver interfaceVersion]
  -[SCROBrailleStealthDriver loadDriverWithIOElement:]
  -[SCROBrailleStealthDriver unloadDriver]
  -[SCROBrailleStealthDriver isDriverLoaded]
  -[SCROBrailleStealthDriver isSleeping]
  -[SCROBrailleStealthDriver supportsBlinkingCursor]
  -[SCROBrailleStealthDriver postsKeyboardEvents]
  -[SCROBrailleStealthDriver brailleInputMode]
  -[SCROBrailleStealthDriver getInputEvents]
  -[SCROBrailleStealthDriver mainSize]
  -[SCROBrailleStealthDriver statusSize]
  -[SCROBrailleStealthDriver setMainCells:length:]
  -[SCROBrailleStealthDriver setStatusCells:length:]


SCROBrailleTranslationManager : NSObject /usr/lib/libSystem.B.dylib
 @property  BRLTTranslationService *translationService
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL primaryTableSupportsContractedBraille
 @property  BOOL primaryTableSupportsEightDotBraille
 @property  BOOL alwaysUsesNemethCodeForTechnicalText
 @property  NSString *defaultLanguage

  // class methods
  +[SCROBrailleTranslationManager sharedManager]

  // instance methods
  -[SCROBrailleTranslationManager init]
  -[SCROBrailleTranslationManager setQueue:]
  -[SCROBrailleTranslationManager queue]
  -[SCROBrailleTranslationManager .cxx_destruct]
  -[SCROBrailleTranslationManager defaultLanguage]
  -[SCROBrailleTranslationManager printBrailleForText:language:mode:textPositionsRange:locations:]
  -[SCROBrailleTranslationManager textForPrintBraille:language:mode:locations:]
  -[SCROBrailleTranslationManager setAlwaysUsesNemethCodeForTechnicalText:]
  -[SCROBrailleTranslationManager alwaysUsesNemethCodeForTechnicalText]
  -[SCROBrailleTranslationManager primaryTableSupportsEightDotBraille]
  -[SCROBrailleTranslationManager primaryTableSupportsContractedBraille]
  -[SCROBrailleTranslationManager loadTranslatorWithServiceIdentifier:]
  -[SCROBrailleTranslationManager setDefaultLanguage:]
  -[SCROBrailleTranslationManager primaryTableSupportsRoundTripping]
  -[SCROBrailleTranslationManager loadTranslatorWithServiceIdentifier:forUnitTesting:]
  -[SCROBrailleTranslationManager translationService]
  -[SCROBrailleTranslationManager setTranslationService:]


SCROCallback : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[SCROCallback supportsSecureCoding]

  // instance methods
  -[SCROCallback key]
  -[SCROCallback object]
  -[SCROCallback encodeWithCoder:]
  -[SCROCallback initWithCoder:]
  -[SCROCallback .cxx_destruct]
  -[SCROCallback initWithKey:object:]
  -[SCROCallback isAtomic]
  -[SCROCallback postToHandler:]
  -[SCROCallback setIsAtomic:]


SCROClient : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SCROClient initialize]
  +[SCROClient addClientGetIdentifier:token:getPort:]
  +[SCROClient removeClientWithPort:]
  +[SCROClient isClientTrustedWithPortToken:]
  +[SCROClient sendCallback:]
  +[SCROClient callbacksForClientIdentifier:]
  +[SCROClient registerCallbackWithKey:forClientIdentifier:]

  // instance methods
  -[SCROClient init]
  -[SCROClient dealloc]
  -[SCROClient _invalidate]
  -[SCROClient _lock]
  -[SCROClient .cxx_destruct]
  -[SCROClient _unlock]
  -[SCROClient _wantsCallback:]
  -[SCROClient _sendCallback:]
  -[SCROClient _dequeueCallbacks]
  -[SCROClient _registerCallbackWithKey:]


SCROConnection : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
  // class methods
  +[SCROConnection initialize]
  +[SCROConnection supportsSecureCoding]
  +[SCROConnection _createConnectionRunLoop]
  +[SCROConnection _configServer]
  +[SCROConnection _configServerWithMachServiceName:]
  +[SCROConnection _unconfigServerAndRetry:]
  +[SCROConnection _inUnitTests]
  +[SCROConnection _addConnectionToRunLoop:]

  // instance methods
  -[SCROConnection invalidate]
  -[SCROConnection encodeWithCoder:]
  -[SCROConnection initWithCoder:]
  -[SCROConnection .cxx_destruct]
  -[SCROConnection sendEvent:]
  -[SCROConnection _startConnection]
  -[SCROConnection _ping]
  -[SCROConnection _stopConnection]
  -[SCROConnection handlerValueForKey:]
  -[SCROConnection initWithHandlerType:delegate:]
  -[SCROConnection registerHandlerCallbackForKey:]
  -[SCROConnection setHandlerValue:forKey:]
  -[SCROConnection handlerArrayValueForKey:]
  -[SCROConnection performHandlerActionForKey:]
  -[SCROConnection handlerValueForKey:withObject:]


SCROEvent : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SCROEvent brailleEvent]

  // instance methods
  -[SCROEvent .cxx_destruct]
  -[SCROEvent initForHandlerType:]
  -[SCROEvent requestSetValue:forKey:]
  -[SCROEvent mainDictionary]
  -[SCROEvent setClaimDictionary:]
  -[SCROEvent handlerType]
  -[SCROEvent requestRegisterCallbackForKey:]
  -[SCROEvent requestValueForKey:]
  -[SCROEvent requestPerformActionForKey:]
  -[SCROEvent claimValueForKey:]
  -[SCROEvent setMainDictionary:]
  -[SCROEvent claimDictionary]
  -[SCROEvent performWithHandler:trusted:]


SCROHandler : NSObject /usr/lib/libSystem.B.dylib <SCROHandlerProtocol>
 @property  id callbackDelegate

  // instance methods
  -[SCROHandler init]
  -[SCROHandler invalidate]
  -[SCROHandler lock]
  -[SCROHandler unlock]
  -[SCROHandler .cxx_destruct]
  -[SCROHandler setCallbackDelegate:]
  -[SCROHandler callbackDelegate]
  -[SCROHandler handleRegisterCallbackForKey:trusted:]
  -[SCROHandler handleSetValue:forKey:trusted:]
  -[SCROHandler handleGetValue:forKey:withObject:trusted:]
  -[SCROHandler handlePerformActionForKey:trusted:]
  -[SCROHandler handleGetValue:forKey:trusted:]


SCROIOElement : NSObject /usr/lib/libSystem.B.dylib <SCROIOElementProtocol, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCROIOElement dealloc]
  -[SCROIOElement isEqual:]
  -[SCROIOElement copyWithZone:]
  -[SCROIOElement identifier]
  -[SCROIOElement transport]
  -[SCROIOElement initWithIOObject:]
  -[SCROIOElement ioObject]


SCROIOHIDElement : SCROIOElement <SCROIOBluetoothElementProtocol, SCROIOHIDElementProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCROIOHIDElement dealloc]
  -[SCROIOHIDElement copyWithZone:]
  -[SCROIOHIDElement transport]
  -[SCROIOHIDElement bluetoothAddress]
  -[SCROIOHIDElement initWithIOObject:]
  -[SCROIOHIDElement hidDevice]


SCROIOUSBElement : SCROIOElement
  // instance methods
  -[SCROIOUSBElement transport]
  -[SCROIOUSBElement initWithIOObject:]


SCROMobileBrailleDisplayInputManagerCacheObject : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *modelIdentifier
 @property  int brailleInputMode
 @property  NSString *driverIdentifier
 @property  NSMutableDictionary *commandDictionary
 @property  NSMutableArray *orderedIdentifiers
 @property  NSBundle *bundle

  // instance methods
  -[SCROMobileBrailleDisplayInputManagerCacheObject .cxx_destruct]
  -[SCROMobileBrailleDisplayInputManagerCacheObject bundle]
  -[SCROMobileBrailleDisplayInputManagerCacheObject modelIdentifier]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setBundle:]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setModelIdentifier:]
  -[SCROMobileBrailleDisplayInputManagerCacheObject orderedIdentifiers]
  -[SCROMobileBrailleDisplayInputManagerCacheObject brailleInputMode]
  -[SCROMobileBrailleDisplayInputManagerCacheObject driverIdentifier]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setBrailleInputMode:]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setDriverIdentifier:]
  -[SCROMobileBrailleDisplayInputManagerCacheObject commandDictionary]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setCommandDictionary:]
  -[SCROMobileBrailleDisplayInputManagerCacheObject setOrderedIdentifiers:]


SCROMobileBrailleDisplayInputManager : NSObject /usr/lib/libSystem.B.dylib <SCROBrailleDisplayInputManagerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCROMobileBrailleDisplayInputManager sharedManager]

  // instance methods
  -[SCROMobileBrailleDisplayInputManager init]
  -[SCROMobileBrailleDisplayInputManager .cxx_destruct]
  -[SCROMobileBrailleDisplayInputManager _bundle]
  -[SCROMobileBrailleDisplayInputManager commandForBrailleKey:]
  -[SCROMobileBrailleDisplayInputManager configureWithDriverConfiguration:]
  -[SCROMobileBrailleDisplayInputManager _commandsFromBrailleInputMode:]
  -[SCROMobileBrailleDisplayInputManager userDefaultsForModelIdentifier:]
  -[SCROMobileBrailleDisplayInputManager _commandForHidUsage:]
  -[SCROMobileBrailleDisplayInputManager setCommand:forInputIdentifier:forDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager setUserDefaults:forModelIdentifier:]
  -[SCROMobileBrailleDisplayInputManager _sixDotCommands]
  -[SCROMobileBrailleDisplayInputManager _eightDotCommands]
  -[SCROMobileBrailleDisplayInputManager inputIdentifierAtIndex:forDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager buttonNamesForInputIdentifier:forDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager defaultsKeyForModelIdentifier:]
  -[SCROMobileBrailleDisplayInputManager commandDictionaryForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager driverIdentifierForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager modelIdentifierForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager setCommand:forBrailleKey:]
  -[SCROMobileBrailleDisplayInputManager removeAllUserAssignedCommandsForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager userAssignedCommandCountForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager countForDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager commandAtIndex:forDisplayWithToken:]
  -[SCROMobileBrailleDisplayInputManager buttonNamesAtIndex:forDisplayWithToken:]


SCROScriptClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_scriptDispatchQueue

  // class methods
  +[SCROScriptClient sharedClient]

  // instance methods
  -[SCROScriptClient init]
  -[SCROScriptClient dealloc]
  -[SCROScriptClient .cxx_destruct]
  -[SCROScriptClient _isReady]
  -[SCROScriptClient handleCallback:]
  -[SCROScriptClient _lazyConnection]
  -[SCROScriptClient _killConnection]
  -[SCROScriptClient _scriptDispatchQueue]
  -[SCROScriptClient runScriptFile:]
  -[SCROScriptClient set_scriptDispatchQueue:]


SCROServer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[SCROServer sharedServer]

  // instance methods
  -[SCROServer init]
  -[SCROServer delegate]
  -[SCROServer setDelegate:]
  -[SCROServer .cxx_destruct]
  -[SCROServer serverSource]
  -[SCROServer _clientCount]
  -[SCROServer _deathTimer]
  -[SCROServer _registerWithMachServiceName:]
  -[SCROServer unregisterWithMach]
  -[SCROServer _incrementClientCount]
  -[SCROServer _setClientCount:]
  -[SCROServer _registerForNotificationOnDeathPort:]
  -[SCROServer isRegisteredWithMach]
  -[SCROServer registerWithMach]


SCROStealthBrailleDisplay : SCROBrailleDisplay
  // class methods
  +[SCROStealthBrailleDisplay displayWithIOElement:driverIdentifier:delegate:]
  +[SCROStealthBrailleDisplay displayWithDelegate:]

  // instance methods
  -[SCROStealthBrailleDisplay _mainDisplayHandler:]


SCROIOSerialElement : SCROIOElement <SCROIOSerialElementProtocol>
 @property  int fileDescriptor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SCROIOSerialElement identifier]
  -[SCROIOSerialElement fileDescriptor]
  -[SCROIOSerialElement initWithFileDescriptor:]
  -[SCROIOSerialElement transport]
  -[SCROIOSerialElement setFileDescriptor:]


NSAttributedString(SCROAttributedStringExtras)
	// instance methods
	-[NSAttributedString(SCROAttributedStringExtras) deepCopyWithZone:]
	-[NSAttributedString(SCROAttributedStringExtras) getRange:ofAttribute:]
	-[NSAttributedString(SCROAttributedStringExtras) getRange:ofAttribute:withValue:]
	-[NSAttributedString(SCROAttributedStringExtras) scrAttributedStringByTrimmingTrailingNewlines]

NSMutableAttributedString(SCROAttributedStringExtras)
	// instance methods
	-[NSMutableAttributedString(SCROAttributedStringExtras) scrAttributedStringTrimTrailingNewlines]

NSString(SCROBrailleAdditions)
	// instance methods
	-[NSString(SCROBrailleAdditions) _illegalCharacterSet]
	-[NSString(SCROBrailleAdditions) _legalWhiteSpaceSet]
	-[NSString(SCROBrailleAdditions) _rangeIsolatingIllegalCharacters:forwards:]
	-[NSString(SCROBrailleAdditions) rangeOfWordContainingIndex:]
	-[NSString(SCROBrailleAdditions) rangeOfWordBeforeWordAtIndex:]
	-[NSString(SCROBrailleAdditions) rangeOfWordAfterWordAtIndex:]

NSBundle(SCROBundleExtras)
	// class methods
	+[NSBundle(SCROBundleExtras) brailleDriverDeviceDetectionInfo]
	+[NSBundle(SCROBundleExtras) brailleDriverBundleWithIdentifier:]
	+[NSBundle(SCROBundleExtras) brailleDriverBundles]
	+[NSBundle(SCROBundleExtras) _brailleTableBundles]
	+[NSBundle(SCROBundleExtras) brailleTableBundleWithTableIdentifier:]
	+[NSBundle(SCROBundleExtras) _brailleTableDictionaryForBrailleTableIdentifier:]
	+[NSBundle(SCROBundleExtras) doesBrailleTableSupportContractions:]
	+[NSBundle(SCROBundleExtras) doesBrailleTableSupportEightDot:]
	+[NSBundle(SCROBundleExtras) languageIdentifiersForBrailleTableIdentifier:]

	// instance methods
	-[NSBundle(SCROBundleExtras) tableIdentifierForBundleSpecificTableIdentifier:]

01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTBrailleChar 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTBrailleStateManager 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTBrailleString 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTScriptString 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTTable 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTTranslationParameters 
01 00 0400 /System/Library/PrivateFrameworks/BrailleTranslation.framework/BrailleTranslation: BRLTTranslationService 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0800 /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore: SCRCIndexMap 
01 00 0800 /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore: SCRCTargetSelectorTimer 
