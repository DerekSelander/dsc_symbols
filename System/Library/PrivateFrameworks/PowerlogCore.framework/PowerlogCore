|| __DATA.__common _Stage
|| __DATA.__common __sharedABMClient
|| __DATA.__common _processedFilesCounter
|| __DATA.__data _PLD_ManagedPreferencePath
|| __DATA.__data _PLD_NSLogDebugKey
|| __DATA.__data _eventBlock
|| __DATA.__objc_data _OBJC_CLASS_$_OperatorTask
|| __DATA.__objc_data _OBJC_CLASS_$_PLArchiveJob
|| __DATA.__objc_data _OBJC_CLASS_$_PLIOHIDOperatorComposition
|| __DATA.__objc_data _OBJC_CLASS_$_PLNetworkUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PLPowerNode
|| __DATA.__objc_data _OBJC_CLASS_$_PLProcessInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PLQLDuetInMemoryCache
|| __DATA.__objc_data _OBJC_CLASS_$_PLThreadInfo
|| __DATA.__objc_data _OBJC_CLASS_$_PLThreadStats
|| __DATA.__objc_data _OBJC_CLASS_$_PPTEntryDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_PPTFlatStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_OperatorTask
|| __DATA.__objc_data _OBJC_METACLASS_$_PLArchiveJob
|| __DATA.__objc_data _OBJC_METACLASS_$_PLIOHIDOperatorComposition
|| __DATA.__objc_data _OBJC_METACLASS_$_PLNetworkUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PLPowerNode
|| __DATA.__objc_data _OBJC_METACLASS_$_PLProcessInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PLQLDuetInMemoryCache
|| __DATA.__objc_data _OBJC_METACLASS_$_PLThreadInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_PLThreadStats
|| __DATA.__objc_data _OBJC_METACLASS_$_PPTEntryDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_PPTFlatStorage
|| __DATA_CONST.__const _iceAppId
|| __DATA_CONST.__const _iceMetricId
|| __DATA_CONST.__const _iceMetricPayload
|| __DATA_CONST.__const _iceMetricProfileId
|| __DATA_CONST.__const _iceMetricTriggerRef
|| __DATA_CONST.__const _iceTriggerId
|| __DATA_CONST.__const _iceTriggerRef
|| __DATA_CONST.__const _iceTriggerTime
|| __DATA_CONST.__const _iceTriggerType
|| __DATA_CONST.__const _kMDLog_FileVersion
|| __DATA_CONST.__const _kMDLog_Filename
|| __DATA_CONST.__const _kMDLog_TmpDirectory
|| __DATA_CONST.__const _kMDLog_TmpUploadDirectory
|| __DATA_CONST.__const _kMSS_Directory
|| __DATA_CONST.__const _kMSS_Filename
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameQualificationEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameQualificationEnergyEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameQualificationEnergyNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameQualificationEnergyQualificationID
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameQualificationEnergyRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameRootNodeEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameRootNodeEnergyEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameRootNodeEnergyNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorAggregateNameRootNodeEnergyRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEvents
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsCorrectionDate
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsCorrectionEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsDistributionDate
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsDistributionRuleID
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsEndOffset
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsEnergy
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsNumAncestors
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsParentEntryID
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsQualificationDate
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsQualificationRuleIDSum
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsStartOffset
|| __DATA_CONST.__const _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsTerminationRatio
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameDistributionRules
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameDistributionRulesDistributionID
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameDistributionRulesNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameDistributionRulesRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameNodes
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameNodesIsPermanent
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameNodesName
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameQualificationRules
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameQualificationRulesQualificationID
|| __DATA_CONST.__const _kPLAccountingOperatorEventNoneNameQualificationRulesRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEvents
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsChildNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsChildNodes
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsChildWeight
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsDistributionID
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsEndOffset
|| __DATA_CONST.__const _kPLAccountingOperatorNameDistributionEventsStartOffset
|| __DATA_CONST.__const _kPLAccountingOperatorNamePowerEvents
|| __DATA_CONST.__const _kPLAccountingOperatorNamePowerEventsEndOffset
|| __DATA_CONST.__const _kPLAccountingOperatorNamePowerEventsPower
|| __DATA_CONST.__const _kPLAccountingOperatorNamePowerEventsRootNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorNamePowerEventsStartOffset
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEvents
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEventsChildNodeID
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEventsChildNodes
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEventsEndOffset
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEventsQualificationID
|| __DATA_CONST.__const _kPLAccountingOperatorNameQualificationEventsStartOffset
|| __DATA_CONST.__const _kPLBB16
|| __DATA_CONST.__const _kPLBB17
|| __DATA_CONST.__const _kPLBB18
|| __DATA_CONST.__const _kPLBB19
|| __DATA_CONST.__const _kPLBB19B
|| __DATA_CONST.__const _kPLBB20B
|| __DATA_CONST.__const _kPLBB20C
|| __DATA_CONST.__const _kPLCanSleepSemaphore
|| __DATA_CONST.__const _kPLDeleteTimestamp
|| __DATA_CONST.__const _kPLEDAggregateBucketRetainDuration
|| __DATA_CONST.__const _kPLEDAggregateBuckets
|| __DATA_CONST.__const _kPLEDAggregateFunction
|| __DATA_CONST.__const _kPLEDAggregateKeys
|| __DATA_CONST.__const _kPLEDAggregateWallClockBucket
|| __DATA_CONST.__const _kPLEDAllowNilTimestamp
|| __DATA_CONST.__const _kPLEDAppIdentifierKeys
|| __DATA_CONST.__const _kPLEDAppNameKey
|| __DATA_CONST.__const _kPLEDArrayKeys
|| __DATA_CONST.__const _kPLEDBufferEntries
|| __DATA_CONST.__const _kPLEDBufferFlushInterval
|| __DATA_CONST.__const _kPLEDBufferSize
|| __DATA_CONST.__const _kPLEDBundleIDKey
|| __DATA_CONST.__const _kPLEDCacheEntries
|| __DATA_CONST.__const _kPLEDCacheSQLPrepareStatements
|| __DATA_CONST.__const _kPLEDCalculatedValueKey
|| __DATA_CONST.__const _kPLEDConfigs
|| __DATA_CONST.__const _kPLEDDynamicDefinition
|| __DATA_CONST.__const _kPLEDDynamicKeys
|| __DATA_CONST.__const _kPLEDFilterEntryLogging
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangeBy
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangeByLower
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangeByUpper
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangePercent
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangePercentLower
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceChangePercentUpper
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingToleranceIgnore
|| __DATA_CONST.__const _kPLEDFilterEntryLoggingTolerances
|| __DATA_CONST.__const _kPLEDFitlerEntryLoggingTolerancesSpecialCase
|| __DATA_CONST.__const _kPLEDIndexKeys
|| __DATA_CONST.__const _kPLEDIsAggregateValue
|| __DATA_CONST.__const _kPLEDKeyValuePath
|| __DATA_CONST.__const _kPLEDKeys
|| __DATA_CONST.__const _kPLEDLogSelector
|| __DATA_CONST.__const _kPLEDOnDemandQuery
|| __DATA_CONST.__const _kPLEDOverridesEntryDate
|| __DATA_CONST.__const _kPLEDProcessNameKey
|| __DATA_CONST.__const _kPLEDRateLimit
|| __DATA_CONST.__const _kPLEDSafetyDropLimit
|| __DATA_CONST.__const _kPLEDSchemaVersionKey
|| __DATA_CONST.__const _kPLEDSortOrderAutoKey
|| __DATA_CONST.__const _kPLEDSortOrderManualKey
|| __DATA_CONST.__const _kPLEDSubEntryKey
|| __DATA_CONST.__const _kPLEDTaskModeTable
|| __DATA_CONST.__const _kPLEDTrimConditionsTemplateArgKey
|| __DATA_CONST.__const _kPLEDTrimConditionsTemplateKey
|| __DATA_CONST.__const _kPLEDTypeArraySizeKey
|| __DATA_CONST.__const _kPLEDTypeArrayValueKey
|| __DATA_CONST.__const _kPLEDTypeKey
|| __DATA_CONST.__const _kPLEDUnitKey
|| __DATA_CONST.__const _kPLEDWarningLimit
|| __DATA_CONST.__const _kPLED_AggregateKey
|| __DATA_CONST.__const _kPLED_DynamicKey
|| __DATA_CONST.__const _kPLED_EventBackwardKey
|| __DATA_CONST.__const _kPLED_EventForwardKey
|| __DATA_CONST.__const _kPLED_EventIntervalKey
|| __DATA_CONST.__const _kPLED_EventNoneKey
|| __DATA_CONST.__const _kPLED_EventPointKey
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentAnimatorRunning
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentCount
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentCustomNavigationTransition
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentDiagonalScroll
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentDuration
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentEventIntervalNameScrollView
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentEventIntervalNameUIInProcessAnimation
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentEventIntervalNameUINavigationController
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentEventNoneNameAppSwitchTrigger
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentHighRateDuration
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentHorizontalScroll
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentNavigationTransition
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentProcessName
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentScrollAnimating
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentScrollDeceleration
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentScrollDragging
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentScrollZooming
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentSignpostName
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentSignpostValueGroup
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentStringEnabled
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentSwitchTabs
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentTimestampEnd
|| __DATA_CONST.__const _kPLEnhancedTaskingAgentVerticalScroll
|| __DATA_CONST.__const _kPLIOHID_AmbientLightSensor
|| __DATA_CONST.__const _kPLIOHID_AmbientLightSensorLevel
|| __DATA_CONST.__const _kPLIOKit_AFKEndpointInterface
|| __DATA_CONST.__const _kPLIOKit_MainDisplay
|| __DATA_CONST.__const _kPLIce
|| __DATA_CONST.__const _kPLJ2
|| __DATA_CONST.__const _kPLJ72
|| __DATA_CONST.__const _kPLJ72A
|| __DATA_CONST.__const _kPLJ81N
|| __DATA_CONST.__const _kPLJ86
|| __DATA_CONST.__const _kPLJ86A
|| __DATA_CONST.__const _kPLK94
|| __DATA_CONST.__const _kPLMaskedName
|| __DATA_CONST.__const _kPLMav1
|| __DATA_CONST.__const _kPLMav10
|| __DATA_CONST.__const _kPLMav13
|| __DATA_CONST.__const _kPLMav16
|| __DATA_CONST.__const _kPLMav16B
|| __DATA_CONST.__const _kPLMav2
|| __DATA_CONST.__const _kPLMav4
|| __DATA_CONST.__const _kPLMav5
|| __DATA_CONST.__const _kPLMav7
|| __DATA_CONST.__const _kPLMemoryPressureNotification
|| __DATA_CONST.__const _kPLN41
|| __DATA_CONST.__const _kPLN48
|| __DATA_CONST.__const _kPLN51
|| __DATA_CONST.__const _kPLN56
|| __DATA_CONST.__const _kPLN61
|| __DATA_CONST.__const _kPLN61A
|| __DATA_CONST.__const _kPLN61B
|| __DATA_CONST.__const _kPLN94
|| __DATA_CONST.__const _kPLP102
|| __DATA_CONST.__const _kPLP105
|| __DATA_CONST.__const _kPLSQLiteConnectionKeySchemaVersions
|| __DATA_CONST.__const _kPLSQLiteConnectionKeyTableName
|| __DATA_CONST.__const _kPLSQLiteConnectionTableSchemaVersions
|| __DATA_CONST.__const _kPLSaltBundleID
|| __DATA_CONST.__const _kPLSamplingPercentageDefaultKey
|| __DATA_CONST.__const _kPLSatteliteProcessSemaphore
|| __DATA_CONST.__const _kPLStorageDefaultsEnabled
|| __DATA_CONST.__const _kPLStorageEventForwardActivityStates
|| __DATA_CONST.__const _kPLStorageEventForwardActivityStatesActivityID
|| __DATA_CONST.__const _kPLStorageEventForwardActivityStatesState
|| __DATA_CONST.__const _kPLStorageEventForwardConfiguration
|| __DATA_CONST.__const _kPLStorageEventForwardSchemaChange
|| __DATA_CONST.__const _kPLStorageEventForwardSchemaChangeCurrentVersion
|| __DATA_CONST.__const _kPLStorageEventForwardSchemaChangePreviousVersion
|| __DATA_CONST.__const _kPLStorageEventForwardSchemaChangeTableName
|| __DATA_CONST.__const _kPLStorageEventForwardSubmissionTag
|| __DATA_CONST.__const _kPLStorageEventForwardSubmissionTagReason
|| __DATA_CONST.__const _kPLStorageEventForwardSubmissionTagUUID
|| __DATA_CONST.__const _kPLStorageEventForwardTaskingAction
|| __DATA_CONST.__const _kPLStorageEventForwardTaskingErrorType
|| __DATA_CONST.__const _kPLStorageEventForwardTaskingMode
|| __DATA_CONST.__const _kPLStorageEventForwardTaskingTablesPayload
|| __DATA_CONST.__const _kPLStorageEventForwardTimeOffset
|| __DATA_CONST.__const _kPLStorageEventForwardTimeOffsetBaseband
|| __DATA_CONST.__const _kPLStorageEventForwardTimeOffsetKernel
|| __DATA_CONST.__const _kPLStorageEventForwardTimeOffsetMonotonic
|| __DATA_CONST.__const _kPLStorageEventForwardTimeOffsetSystem
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSize
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeEntryKey
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeInsertCount
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeSafetyDropCount
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeState
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeTimestampEnd
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeUpdateCount
|| __DATA_CONST.__const _kPLStorageEventIntervalCacheSizeWarningCount
|| __DATA_CONST.__const _kPLStorageEventNoneActivity
|| __DATA_CONST.__const _kPLStorageEventNoneActivityCriteria
|| __DATA_CONST.__const _kPLStorageEventNoneActivityIdentifier
|| __DATA_CONST.__const _kPLStorageEventNoneActivityMustRunCriterion
|| __DATA_CONST.__const _kPLStorageEventNoneAdditionalTablesTurnedOn
|| __DATA_CONST.__const _kPLStorageEventNoneTableName
|| __DATA_CONST.__const _kPLStorageEventPointActiviySchedule
|| __DATA_CONST.__const _kPLStorageEventPointActiviyScheduleCriteria
|| __DATA_CONST.__const _kPLStorageEventPointActiviyScheduleIdentifier
|| __DATA_CONST.__const _kPLStorageEventPointActiviyScheduleNextFireDate
|| __DATA_CONST.__const _kPLStorageEventPointActiviyScheduleStatus
|| __DATA_CONST.__const _kPLStorageEventPointActiviyScheduleUnsatisfiedCriteria
|| __DATA_CONST.__const _kPLStorageEventPointArchive
|| __DATA_CONST.__const _kPLStorageEventPointArchiveEndDate
|| __DATA_CONST.__const _kPLStorageEventPointArchiveFullMode
|| __DATA_CONST.__const _kPLStorageEventPointArchiveMainDBSizeAtStart
|| __DATA_CONST.__const _kPLStorageEventPointArchiveNumAttempts
|| __DATA_CONST.__const _kPLStorageEventPointArchiveRemovedDate
|| __DATA_CONST.__const _kPLStorageEventPointArchiveStage
|| __DATA_CONST.__const _kPLStorageEventPointArchiveStartDate
|| __DATA_CONST.__const _kPLStorageEventPointArchiveSyncedOffDate
|| __DATA_CONST.__const _kPLStorageEventPointArchiveSystemTimeOffset
|| __DATA_CONST.__const _kPLStorageEventPointArchiveSystemTimeOffsetModified
|| __DATA_CONST.__const _kPLStorageEventPointArchiveUUID
|| __DATA_CONST.__const _kPLStorageEventPointCacheFlush
|| __DATA_CONST.__const _kPLStorageEventPointCacheFlushReason
|| __DATA_CONST.__const _kPLStorageEventPointCacheFlushSize
|| __DATA_CONST.__const _kPLStorageEventPointOTA
|| __DATA_CONST.__const _kPLStorageEventPointOTAName
|| __DATA_CONST.__const _kPLStorageEventPointOTASuccess
|| __DATA_CONST.__const _kPLStorageEventPointOTAType
|| __DATA_CONST.__const _kPLStorageEventPointOTATypeInternal
|| __DATA_CONST.__const _kPLStorageEventPointOTATypeOnDemand
|| __DATA_CONST.__const _kPLStorageEventPointOTATypeTasking
|| __DATA_CONST.__const _kPLStorageEventPointPLLog
|| __DATA_CONST.__const _kPLStorageEventPointPLLogFile
|| __DATA_CONST.__const _kPLStorageEventPointPLLogFunction
|| __DATA_CONST.__const _kPLStorageEventPointPLLogLine
|| __DATA_CONST.__const _kPLStorageEventPointPLLogMessage
|| __DATA_CONST.__const _kPLStorageEventPointTimeCorrection
|| __DATA_CONST.__const _kPLStorageEventPointTimeCorrectionCallStack
|| __DATA_CONST.__const _kPLStorageEventPointTimeCorrectionProjectedTimeInMonotonic
|| __DATA_CONST.__const _kPLStorageEventPointTimeCorrectionTimeInReference
|| __DATA_CONST.__const _kPLStorageEventPointTimeCorrectionTimeReferenceType
|| __DATA_CONST.__const _kPLStorageExitReason
|| __DATA_CONST.__const _kPLStorageMode
|| __DATA_CONST.__const _kPLStorageModeFull
|| __DATA_CONST.__const _kPLStorageModeLite
|| __DATA_CONST.__const _kPLStorageModeLockedFull
|| __DATA_CONST.__const _kPLStorageModeLockedLite
|| __DATA_CONST.__const _kPLStorageModeLockedTask
|| __DATA_CONST.__const _kPLStorageModeTask
|| __DATA_CONST.__const _kPLStoragePID
|| __DATA_CONST.__const _kPLStorageParentProcessName
|| __DATA_CONST.__const _kPLStorageProcessName
|| __DATA_CONST.__const _kPLStorageVersion
|| __DATA_CONST.__const _kPLTaskedSamplingPercentageDefaultKey
|| __DATA_CONST.__const _kPLTaskingConfigUUIDDefaultKey
|| __DATA_CONST.__const _kPLTaskingDefaultsCheckOnDemandTaskingStart
|| __DATA_CONST.__const _kPLTaskingDefaultsCheckPLTaskingOnDemand
|| __DATA_CONST.__const _kPLTaskingDefaultsCheckPLTaskingRequest
|| __DATA_CONST.__const _kPLTaskingEndNotification
|| __DATA_CONST.__const _kPLTaskingRequestDefaultKey
|| __DATA_CONST.__const _kPLTaskingStartNotification
|| __DATA_CONST.__const _kPLThreadStatsErrorDomain
|| __DATA_CONST.__const _kPLTimerFiredNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLABMClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingOperator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLActivityCriterion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLActivityCriterionEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLActivityCriterionTime
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLActivityScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAggregateEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAppDeletion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLArchiveEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLArchiveManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCFNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCacheDeleteUtility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLChargingState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCoreAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCoreOperator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCoreService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCoreStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLDarkWakeState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLDisplayState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLEnhancedTaskingAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLEntryDefinition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLEntryKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLEntryNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLFileStats
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLHIDEventOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLIOKitOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLKQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLModelingUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMonotonicTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMultiKeyEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLNSNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLOperator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPlatform
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPluggedState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLRapidController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSQLStatement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSemaphore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSleepState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLStateTrackingComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLStorageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLStorageOperator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionFile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionFileBDC
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionFileMSS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionFilePLL
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionFileSP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissionRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSubmissions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeReferenceBaseband
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeReferenceDynamic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeReferenceKernel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimeReferenceSystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUserIdleState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLValueComparison
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLValueUtilties
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLWakeState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLXPCListenerOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLXPCRelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLXPCResponderOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTCollectionOperator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTCoreStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTCoreUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTEntryKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTSQLStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PPTStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PowerlogCore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SignpostReaderHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TimeAndLatencyAbm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLABMClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingOperator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLActivityCriterion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLActivityCriterionEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLActivityCriterionTime
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLActivityScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAggregateEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAppDeletion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLArchiveEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLArchiveManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCFNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCacheDeleteUtility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLChargingState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCoreAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCoreOperator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCoreService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCoreStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLDarkWakeState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLDisplayState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLEnhancedTaskingAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLEntryDefinition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLEntryKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLEntryNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLFileStats
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLHIDEventOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLIOKitOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLKQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLModelingUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMonotonicTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMultiKeyEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLNSNotificationOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLOperator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPlatform
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPluggedState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLRapidController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSQLStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSQLiteConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSemaphore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSleepState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLStateTrackingComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLStorageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLStorageOperator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionFile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionFileBDC
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionFileMSS
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionFilePLL
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionFileSP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissionRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSubmissions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeReferenceBaseband
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeReferenceDynamic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeReferenceKernel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimeReferenceSystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUserIdleState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLValueComparison
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLValueUtilties
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLWakeState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLXPCListenerOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLXPCRelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLXPCResponderOperatorComposition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTCollectionOperator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTCoreStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTCoreUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTEntryKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTSQLStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PPTStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PowerlogCore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SignpostReaderHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TimeAndLatencyAbm
|| __TEXT.__const _kPLCacheSizeForBackupDatabaseConnection
|| __TEXT.__const _kPLDefaultCacheSize
|| __TEXT.__const _kPLDefaultCacheSpillSize
|| __TEXT.__const _kPLThreadStatsDefaultPercent
|| __TEXT.__const _kPLThreadStatsDefaultThreshold
|| __TEXT.__text _PLADClientAddValueForScalarKey
|| __TEXT.__text _PLADClientBatchKeys
|| __TEXT.__text _PLADClientPushValueForDistributionKey
|| __TEXT.__text _PLADClientSetValueForScalarKey
|| __TEXT.__text _PLADMonotonicTimeGetCurrent
|| __TEXT.__text _PLADPushTimeIntervalForDistributionKeySinceStartTime
|| __TEXT.__text _PLCFPreferencesAppSynchronize
|| __TEXT.__text _PLCFPreferencesCopyAppValue
|| __TEXT.__text _PLCFPreferencesCopyAppValueWithContainer
|| __TEXT.__text _PLCFPreferencesCopyValue
|| __TEXT.__text _PLCFPreferencesSetAppValue
|| __TEXT.__text _PLCFPreferencesSetValue
|| __TEXT.__text _PLDiagnosticLogSubmissionEnabled
|| __TEXT.__text _PLGetBoardID
|| __TEXT.__text _PLGetCPUFamily
|| __TEXT.__text _PLIsDeviceOfType
|| __TEXT.__text _PLLogAppDeletion
|| __TEXT.__text _PLLogCommon
|| __TEXT.__text _PLLogSubmission
|| __TEXT.__text _PLLogThreadStats
|| __TEXT.__text _PLOSAMoveFileForSubmissions
|| __TEXT.__text _PLOSAPreferencesGetValue
|| __TEXT.__text _PLOSAPreferencesSetValue
|| __TEXT.__text _PLOSAPreferencesSynchronize
|| __TEXT.__text _PPTLogCommon
|| __TEXT.__text _RapidLog
|| __TEXT.__text _dateFormatter
|| __TEXT.__text _getAllowblocklist
|| __TEXT.__text _getClientPermissions
|| __TEXT.__text _getPerfPowerTelemetryAllowlist
|| __TEXT.__text _getPowermodels
|| __TEXT.__text _getRapidAllowblocklist
|| __TEXT.__text _getSessionsAllowlist
|| __TEXT.__text _logHandle
|| __TEXT.__text _sqlLog
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientBatchKeys
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AggregateDictionary: _ADMonotonicTimeGetCurrent
__ AggregateDictionary: _ADPushTimeIntervalForDistributionKeySinceStartTime
__ AppleBasebandManager: __ZN3abm11kKeyPayloadE
__ AppleBasebandManager: __ZN3abm12kEventMetricE
__ AppleBasebandManager: __ZN3abm12kKeyMetricIDE
__ AppleBasebandManager: __ZN3abm13kEventTriggerE
__ AppleBasebandManager: __ZN3abm13kKeyProfileIDE
__ AppleBasebandManager: __ZN3abm13kKeyTriggerIDE
__ AppleBasebandManager: __ZN3abm14kKeyTriggerRefE
__ AppleBasebandManager: __ZN3abm15kKeyPayloadTypeE
__ AppleBasebandManager: __ZN3abm15kKeyTriggerTypeE
__ AppleBasebandManager: __ZN3abm17kKeyBasebandC_DRXE
__ AppleBasebandManager: __ZN3abm19kCommandQueryMetricE
__ AppleBasebandManager: __ZN3abm23kKeyBasebandLTEML1StateE
__ AppleBasebandManager: __ZN3abm23kKeyBasebandTimeSecondsE
__ AppleBasebandManager: __ZN3abm24kCommandAddConfigurationE
__ AppleBasebandManager: __ZN3abm24kEventBasebandWakeReasonE
__ AppleBasebandManager: __ZN3abm26kCommandClearConfigurationE
__ AppleBasebandManager: __ZN3abm28kKeyBasebandLTEStateDurationE
__ AppleBasebandManager: __ZN3abm28kKeyBasebandTimeMicroSecondsE
__ AppleBasebandManager: __ZN3abm29kEventBasebandBootStateChangeE
__ AppleBasebandManager: __ZN3abm32kKeyBasebandLTEDeepSleepDurationE
__ AppleBasebandManager: __ZN3abm33kKeyBasebandLTELightSleepDurationE
__ AppleBasebandManager: __ZN3abm6client13CreateManagerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP16dispatch_queue_s
__ AppleBasebandManager: __ZN3abm6client14PerformCommandENSt3__110shared_ptrINS0_7ManagerEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPvPSD_
__ AppleBasebandManager: __ZN3abm6client15GetBasebandTimeENSt3__110shared_ptrINS0_7ManagerEEEU13block_pointerFvN12TelephonyXPC6ResultEPvE
__ AppleBasebandManager: __ZN3abm6client20GetBasebandBootStateENSt3__110shared_ptrINS0_7ManagerEEERNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
__ AppleBasebandManager: __ZN3abm6client20RegisterEventHandlerENSt3__110shared_ptrINS0_7ManagerEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEU13block_pointerFvPvP16dispatch_group_sE
__ AppleBasebandManager: __ZN3abm6client24GetBasebandLTEStatisticsENSt3__110shared_ptrINS0_7ManagerEEEU13block_pointerFvN12TelephonyXPC6ResultEPvE
__ AppleBasebandManager: __ZN3abm6client8EventsOnENSt3__110shared_ptrINS0_7ManagerEEE
__ AppleBasebandManager: __ZN3abm6client9EventsOffENSt3__110shared_ptrINS0_7ManagerEEE
__ AppleBasebandManager: __ZN3abm9kKeyAppIDE
__ CacheDelete: _CacheDeleteRegisterInfoCallbacks
__ CloudKit: _CKErrorDomain
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFFileDescriptorCreate
__ CoreFoundation: _CFFileDescriptorCreateRunLoopSource
__ CoreFoundation: _CFFileDescriptorEnableCallBacks
__ CoreFoundation: _CFFileDescriptorInvalidate
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesAppValueIsForced
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSCalendarDayChangedNotification
__ CoreFoundation: _NSGregorianCalendar
__ CoreFoundation: _NSLocaleCalendar
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: __CFPreferencesAppSynchronizeWithContainer
__ CoreFoundation: __CFPreferencesCopyAppValueWithContainer
__ CoreFoundation: __CFPreferencesCopyValueWithContainer
__ CoreFoundation: __CFPreferencesSetAppValueWithContainer
__ CoreFoundation: __CFPreferencesSetValueWithContainer
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCMessage
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CrashReporterSupport: _AppAnalyticsEnabled
__ CrashReporterSupport: _DiagnosticLogSubmissionEnabled
__ CrashReporterSupport: _OSAMoveFileForSubmissions
__ CrashReporterSupport: _OSAPreferencesGetValue
__ CrashReporterSupport: _OSAPreferencesSetValue
__ CrashReporterSupport: _OSAPreferencesSynchronize
__ CrashReporterSupport: _SimulateCrash
__ CrashReporterSupport: _kOSAProblemTypePowerLog
__ DiagnosticExtensions: _OBJC_CLASS_$_DEArchiver
__ DiagnosticRequest: _DRSubmitLogToCKContainer
__ DiagnosticRequest: _DRSubmitRapidLog
__ DiagnosticRequest: _OBJC_CLASS_$_DRConfigMonitor
__ Foundation: _NSClassFromString
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFileOwnerAccountName
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSFileSize
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUserName
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSTask
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventSystemClientCopyProperty
__ IOKit: _IOHIDEventSystemClientCopyServices
__ IOKit: _IOHIDEventSystemClientCreate
__ IOKit: _IOHIDEventSystemClientRegisterEventBlock
__ IOKit: _IOHIDEventSystemClientRegisterPropertyChangedCallback
__ IOKit: _IOHIDEventSystemClientScheduleWithDispatchQueue
__ IOKit: _IOHIDEventSystemClientSetMatching
__ IOKit: _IOHIDServiceClientCopyEvent
__ IOKit: _IOIteratorNext
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperties
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceAddMatchingNotification
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMasterPortDefault
__ IOMobileFramebuffer: _IOMobileFramebufferGetMainDisplay
__ IOMobileFramebuffer: _IOMobileFramebufferGetServiceObject
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBUserTypeDeviceMode
__ MobileKeyBag: _kMKBDeviceModeKey
__ MobileKeyBag: _kMKBDeviceModeMultiUser
__ MobileKeyBag: _kMKBUserTypeEphemeral
__ MobileKeyBag: _kMKBUserTypeKey
__ PerfPowerTelemetryMetadata: _OBJC_CLASS_$_PPTClientInterface
__ PerfPowerTelemetryMetadata: _OBJC_CLASS_$_PPTFileUtilities
__ PowerLog: _PLCrashMoverCopyPowerlog
__ PowerlogControl: _PowerlogControlSwitchMode
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateWithAuditToken
__ Security: _SecTaskGetCodeSignStatus
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySessionID
__ SymptomDiagnosticReporter: _kSymptomDiagnosticReplySuccess
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOfType
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_DISK_INTENSIVE
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_MEMORY_INTENSIVE
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION_UPLOAD
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_SIZE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_B
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_assumes_log
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_termination_imminent
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atof
__ libSystem.B.dylib: _basename
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _chown
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _feof
__ libSystem.B.dylib: _ferror
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getnameinfo
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getppid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _host_info
__ libSystem.B.dylib: _if_indextoname
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _kevent
__ libSystem.B.dylib: _kqueue
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_get_times
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_listpids
__ libSystem.B.dylib: _proc_pid_rusage
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _recv
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _srand
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _sysctlnametomib
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _uuid_unparse
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_completion_status
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_audit_token
__ libSystem.B.dylib: _xpc_connection_get_context
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_send_notification
__ libSystem.B.dylib: _xpc_connection_set_context
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_remote_connection
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_null_create
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_retain
__ libc++.1.dylib: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__16locale9use_facetERNS0_2idE
__ libc++.1.dylib: __ZNKSt3__18ios_base6getlocEv
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev
__ libc++.1.dylib: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev
__ libc++.1.dylib: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__15ctypeIcE2idE
__ libc++.1.dylib: __ZNSt3__16localeD1Ev
__ libc++.1.dylib: __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv
__ libc++.1.dylib: __ZNSt3__18ios_base4initEPv
__ libc++.1.dylib: __ZNSt3__18ios_base5clearEj
__ libc++.1.dylib: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyClassList
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: __sqlite3_purgeEligiblePagerCacheMemory
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_db_release_memory
__ libsqlite3.dylib: _sqlite3_db_status
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_exec_b
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_initialize
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sleep
__ libsqlite3.dylib: _sqlite3_status
__ libsqlite3.dylib: _sqlite3_step
__ libsystemstats.dylib: _systemstats_microstackshot_checkpoint_async
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
PLHIDEventOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  ^{__IOHIDEventSystemClient=} eventSystemClient
 @property  @? operatorBlock

  // instance methods
  -[PLHIDEventOperatorComposition setOperator:]
  -[PLHIDEventOperatorComposition operator]
  -[PLHIDEventOperatorComposition operatorBlock]
  -[PLHIDEventOperatorComposition setOperatorBlock:]
  -[PLHIDEventOperatorComposition .cxx_destruct]
  -[PLHIDEventOperatorComposition initWithOperator:forUsagePage:andUsage:withBlock:]
  -[PLHIDEventOperatorComposition setEventSystemClient:]
  -[PLHIDEventOperatorComposition handleEvent:]
  -[PLHIDEventOperatorComposition eventSystemClient]


PLState : NSObject
 @property  id lastValue
 @property  id currValue
 @property  NSDate *stateChangeTime
 @property  unsigned long stateId
 @property  NSString *entryKey

  // class methods
  +[PLState load]

  // instance methods
  -[PLState .cxx_destruct]
  -[PLState entryKey]
  -[PLState lastValue]
  -[PLState stateId]
  -[PLState updateWithEntry:]
  -[PLState updateWithValue:]
  -[PLState stateChangeTime]
  -[PLState currValue]
  -[PLState setLastValue:]
  -[PLState setCurrValue:]
  -[PLState initWithStateId:entryKey:currValue:]
  -[PLState updateWithLastEntry]
  -[PLState setStateChangeTime:]


PLPluggedState : PLState
  // class methods
  +[PLPluggedState load]

  // instance methods
  -[PLPluggedState init]
  -[PLPluggedState updateWithEntry:]


PLChargingState : PLState
  // class methods
  +[PLChargingState load]

  // instance methods
  -[PLChargingState init]
  -[PLChargingState updateWithEntry:]


PLDisplayState : PLState
  // class methods
  +[PLDisplayState load]
  +[PLDisplayState getDisplayBlock]

  // instance methods
  -[PLDisplayState init]
  -[PLDisplayState updateWithEntry:]


PLWakeState : PLState
  // class methods
  +[PLWakeState load]

  // instance methods
  -[PLWakeState init]
  -[PLWakeState updateWithEntry:]


PLDarkWakeState : PLState
  // class methods
  +[PLDarkWakeState load]

  // instance methods
  -[PLDarkWakeState init]
  -[PLDarkWakeState updateWithEntry:]


PLSleepState : PLState
  // class methods
  +[PLSleepState load]

  // instance methods
  -[PLSleepState init]
  -[PLSleepState updateWithEntry:]


PLUserIdleState : PLState
  // class methods
  +[PLUserIdleState load]

  // instance methods
  -[PLUserIdleState init]
  -[PLUserIdleState updateWithEntry:]


PLIOHIDOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  ^{__IOHIDEventSystemClient=} eventSystemClient
 @property  NSArray *serviceClients
 @property  NSString *serviceName
 @property  @? operatorBlock

  // instance methods
  -[PLIOHIDOperatorComposition setOperator:]
  -[PLIOHIDOperatorComposition operator]
  -[PLIOHIDOperatorComposition operatorBlock]
  -[PLIOHIDOperatorComposition setOperatorBlock:]
  -[PLIOHIDOperatorComposition setServiceName:]
  -[PLIOHIDOperatorComposition serviceName]
  -[PLIOHIDOperatorComposition .cxx_destruct]
  -[PLIOHIDOperatorComposition setEventSystemClient:]
  -[PLIOHIDOperatorComposition doubleForKey:]
  -[PLIOHIDOperatorComposition eventSystemClient]
  -[PLIOHIDOperatorComposition dealloc]
  -[PLIOHIDOperatorComposition initWithOperator:forService:withBlock:]
  -[PLIOHIDOperatorComposition initWithOperator:forService:]
  -[PLIOHIDOperatorComposition dictionaryForKey:]
  -[PLIOHIDOperatorComposition serviceClients]
  -[PLIOHIDOperatorComposition setServiceClients:]


PLSubmissionFile : NSObject
 @property  PLSubmissionConfig *taskingConfig
 @property  NSString *directory
 @property  NSString *fileName
 @property  BOOL iCloudUploadEnabled

  // instance methods
  -[PLSubmissionFile filePath]
  -[PLSubmissionFile directory]
  -[PLSubmissionFile fileName]
  -[PLSubmissionFile .cxx_destruct]
  -[PLSubmissionFile submit]
  -[PLSubmissionFile setDirectory:]
  -[PLSubmissionFile fileType]
  -[PLSubmissionFile initWithConfig:]
  -[PLSubmissionFile setFileName:]
  -[PLSubmissionFile fileExtension]
  -[PLSubmissionFile setFileNameWithSubmissionType:withID:]
  -[PLSubmissionFile taskingConfig]
  -[PLSubmissionFile decorateFileAtPath:]
  -[PLSubmissionFile createTagFileWithPath:withInfo:]
  -[PLSubmissionFile submitLogToDAWithBugType:]
  -[PLSubmissionFile logSubmissionResultToAggdWithErrorType:withFileType:withOverrideKeys:]
  -[PLSubmissionFile decorateFile]
  -[PLSubmissionFile createTagFileWithPath:]
  -[PLSubmissionFile submitLogToiCloudWithCompress:]
  -[PLSubmissionFile cleanupTmpDirectory]
  -[PLSubmissionFile setTaskingConfig:]
  -[PLSubmissionFile iCloudUploadEnabled]
  -[PLSubmissionFile setICloudUploadEnabled:]


PLTimeReferenceBaseband : PLTimeReferenceDynamic
 @property  PLNSNotificationOperatorComposition *basebandTimeNotification
 @property  BOOL followupCurrentTimeRunning

  // instance methods
  -[PLTimeReferenceBaseband initWithTimeManager:entryDefinitionKey:timeReferenceType:]
  -[PLTimeReferenceBaseband .cxx_destruct]
  -[PLTimeReferenceBaseband registerForTimeChangedNotification]
  -[PLTimeReferenceBaseband setFollowupCurrentTimeRunning:]
  -[PLTimeReferenceBaseband setBasebandTimeNotification:]
  -[PLTimeReferenceBaseband currentTime]
  -[PLTimeReferenceBaseband basebandTimeNotification]
  -[PLTimeReferenceBaseband dealloc]
  -[PLTimeReferenceBaseband timeChangedNotificationReceived:]
  -[PLTimeReferenceBaseband followupCurrentTimeRunning]


PowerlogCore : NSObject
 @property  NSObject<OS_os_transaction> *userRequestTransaction
 @property  NSDate *launchDate
 @property  PLCoreStorage *storage
 @property  PLAccountingOperator *accounting
 @property  PLCoreAgent *agents
 @property  PLCoreService *services
 @property  PPTCoreStorage *coreStorage
 @property  PPTCollectionOperator *collection

  // class methods
  +[PowerlogCore setupCore]
  +[PowerlogCore sharedCoreStarted]
  +[PowerlogCore shouldSetupCore]
  +[PowerlogCore deprecateOldFullMode]
  +[PowerlogCore isDebugEnabled]
  +[PowerlogCore isAudioAccessory]
  +[PowerlogCore sharedCore]
  +[PowerlogCore allowRun]

  // instance methods
  -[PowerlogCore coreStorage]
  -[PowerlogCore services]
  -[PowerlogCore launchDate]
  -[PowerlogCore agents]
  -[PowerlogCore collection]
  -[PowerlogCore stopCore]
  -[PowerlogCore .cxx_destruct]
  -[PowerlogCore storage]
  -[PowerlogCore startCore]
  -[PowerlogCore init]
  -[PowerlogCore didRecieveMemoryPressureWarning]
  -[PowerlogCore startCoreForTest]
  -[PowerlogCore userRequestTransaction]
  -[PowerlogCore dealloc]
  -[PowerlogCore accounting]
  -[PowerlogCore setUserRequestTransaction:]


PLActivityScheduler : NSObject
 @property  NSMutableDictionary *activities
 @property  NSObject<OS_dispatch_queue> *workQueue

  // class methods
  +[PLActivityScheduler sharedInstance]

  // instance methods
  -[PLActivityScheduler activities]
  -[PLActivityScheduler setWorkQueue:]
  -[PLActivityScheduler setActivities:]
  -[PLActivityScheduler cancelActivityWithIdentifier:]
  -[PLActivityScheduler .cxx_destruct]
  -[PLActivityScheduler lastCompletedDateWithIdentifier:]
  -[PLActivityScheduler init]
  -[PLActivityScheduler scheduleActivityWithIdentifier:withCriteria:withMustRunCriterion:withQueue:withInterruptBlock:withActivityBlock:]
  -[PLActivityScheduler workQueue]


PLCoreOperator : NSObject
 @property  NSMutableDictionary *operators

  // class methods
  +[PLCoreOperator registeredOperatorsOfSuperClassType:]
  +[PLCoreOperator registerOperator:]
  +[PLCoreOperator registeredOperators]

  // instance methods
  -[PLCoreOperator initOperatorDependancies]
  -[PLCoreOperator log]
  -[PLCoreOperator .cxx_destruct]
  -[PLCoreOperator init]
  -[PLCoreOperator initTaskOperatorDependancies]
  -[PLCoreOperator dealloc]
  -[PLCoreOperator initOperatorDependanciesWithBlock:]
  -[PLCoreOperator operators]
  -[PLCoreOperator allOperators]
  -[PLCoreOperator startOperatorsOfSuperClassType:]
  -[PLCoreOperator tablesToTrimConditionsForTrimDate:]
  -[PLCoreOperator setOperators:]


PLArchiveEntry : PLEntry
 @property  NSString *path
 @property  NSString *compressedPath
 @property  NSString *crPath
 @property  NSString *name
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSString *uuid
 @property  double systemTimeOffset
 @property  BOOL systemTimeOffsetModified
 @property  BOOL fullMode
 @property  long long stage
 @property  unsigned long numAttempts
 @property  NSDate *syncedOffDate
 @property  NSDate *removedDate
 @property  long long mainDBSizeAtStart
 @property  BOOL syncedOff
 @property  BOOL removed

  // class methods
  +[PLArchiveEntry load]
  +[PLArchiveEntry entryKey]
  +[PLArchiveEntry storageQueue]

  // instance methods
  -[PLArchiveEntry removed]
  -[PLArchiveEntry removedDate]
  -[PLArchiveEntry systemTimeOffsetModified]
  -[PLArchiveEntry setRemovedDate:]
  -[PLArchiveEntry name]
  -[PLArchiveEntry log]
  -[PLArchiveEntry crPath]
  -[PLArchiveEntry setNumAttempts:]
  -[PLArchiveEntry compressedPath]
  -[PLArchiveEntry .cxx_destruct]
  -[PLArchiveEntry systemTimeOffset]
  -[PLArchiveEntry initWithStartDate:endDate:andUUID:]
  -[PLArchiveEntry initWithMetadata:]
  -[PLArchiveEntry numAttempts]
  -[PLArchiveEntry setMainDBSizeAtStart:]
  -[PLArchiveEntry syncedOffDate]
  -[PLArchiveEntry setSystemTimeOffset:]
  -[PLArchiveEntry syncedOff]
  -[PLArchiveEntry initEntryWithRawData:]
  -[PLArchiveEntry fullMode]
  -[PLArchiveEntry setSyncedOffDate:]
  -[PLArchiveEntry path]
  -[PLArchiveEntry uuid]
  -[PLArchiveEntry startDate]
  -[PLArchiveEntry mainDBSizeAtStart]
  -[PLArchiveEntry setStage:]
  -[PLArchiveEntry endDate]
  -[PLArchiveEntry stage]


PPTFlatStorage : PPTStorage
  // instance methods
  -[PPTFlatStorage init]
  -[PPTFlatStorage setupStorageForEntryKey:]


PLXPCResponderOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSDictionary *registration
 @property  @? operatorBlock

  // instance methods
  -[PLXPCResponderOperatorComposition setOperator:]
  -[PLXPCResponderOperatorComposition operator]
  -[PLXPCResponderOperatorComposition operatorBlock]
  -[PLXPCResponderOperatorComposition setOperatorBlock:]
  -[PLXPCResponderOperatorComposition setWorkQueue:]
  -[PLXPCResponderOperatorComposition registration]
  -[PLXPCResponderOperatorComposition .cxx_destruct]
  -[PLXPCResponderOperatorComposition initWithOperator:withRegistration:withBlock:]
  -[PLXPCResponderOperatorComposition workQueue]
  -[PLXPCResponderOperatorComposition initWithWorkQueue:withRegistration:withBlock:]
  -[PLXPCResponderOperatorComposition respondToRequestForClientID:withProcessName:withKey:withPayload:]


PLEnhancedTaskingAgent : PLAgent
  // class methods
  +[PLEnhancedTaskingAgent entryEventNoneDefinitions]
  +[PLEnhancedTaskingAgent load]
  +[PLEnhancedTaskingAgent defaults]
  +[PLEnhancedTaskingAgent entryEventIntervalDefinitionUINavigationController]
  +[PLEnhancedTaskingAgent entryEventIntervalDefinitionInProcessAnimation]
  +[PLEnhancedTaskingAgent entryEventIntervalDefinitions]
  +[PLEnhancedTaskingAgent logAggregatedDataFromSignpostWithStartDate:withEndDate:]
  +[PLEnhancedTaskingAgent allowlistForSignpostAggregatedData]
  +[PLEnhancedTaskingAgent entryEventNoneDefinitionAppSwitchTrigger]
  +[PLEnhancedTaskingAgent entryEventIntervalDefinitionScrollView]

  // instance methods
  -[PLEnhancedTaskingAgent initOperatorDependancies]
  -[PLEnhancedTaskingAgent log]
  -[PLEnhancedTaskingAgent getSignpostNameValueGroupTypeFor:]
  -[PLEnhancedTaskingAgent init]
  -[PLEnhancedTaskingAgent aggregatedSignpostDataWithEntryKey:withStartDate:withEndDate:withSignpostName:withProcess:withDataDict:]
  -[PLEnhancedTaskingAgent logAggregatedDataFromSignpostWithPayload:withStartDate:withEndDate:]
  -[PLEnhancedTaskingAgent initTaskOperatorDependancies]


PLSubmissionFileSP : PLSubmissionFile
  // instance methods
  -[PLSubmissionFileSP fileType]
  -[PLSubmissionFileSP initWithConfig:]
  -[PLSubmissionFileSP copyAndPrepareLog]


PPTEntryKey : NSObject
  // class methods
  +[PPTEntryKey storageForEntryKey:]
  +[PPTEntryKey allEntryKeysForStorage:]
  +[PPTEntryKey setupEntryKeyForMetric:]
  +[PPTEntryKey allKeysForEntryKey:]
  +[PPTEntryKey pptEnabled:]
  +[PPTEntryKey versionHashForEntryKey:]
  +[PPTEntryKey subsystemForEntryKey:]
  +[PPTEntryKey metricsForEntryKey:]
  +[PPTEntryKey allEntryKeys]
  +[PPTEntryKey entryKeyFromSelector:]
  +[PPTEntryKey timeToLiveForEntryKey:]
  +[PPTEntryKey entrySelectorForMetric:]
  +[PPTEntryKey entryKeyForMetric:]
  +[PPTEntryKey categoryForEntryKey:]


PLStorageCache : NSObject
 @property  NSMutableDictionary *lastEntryCache
 @property  NSMutableDictionary *stagingEntryCache
 @property  NSMutableDictionary *stagingAggregateEntryCache
 @property  NSDate *lastCacheFlushDate
 @property  NSMutableDictionary *countWarnings
 @property  NSMutableDictionary *countSafetyDrop
 @property  long long lastEntryCacheSize
 @property  long long stagingEntryCacheSize

  // class methods
  +[PLStorageCache sharedStorageCache]
  +[PLStorageCache syncAndDispatchForEntryCache:forEntryKey:withBlock:]

  // instance methods
  -[PLStorageCache setStagingAggregateEntryCache:]
  -[PLStorageCache lastEntryCacheForEntryKey:]
  -[PLStorageCache dumpEntryCache:]
  -[PLStorageCache setLastEntryCache:]
  -[PLStorageCache countSafetyDrop]
  -[PLStorageCache matchingPairs:]
  -[PLStorageCache updateStagingEntryCacheWithEntry:withBlock:]
  -[PLStorageCache .cxx_destruct]
  -[PLStorageCache lastEntryCachePruneToDate:]
  -[PLStorageCache enumerateStagingEntryCacheForEntryKey:withBlock:]
  -[PLStorageCache stagingEntryCacheForEntryKey:withIDLessThan:]
  -[PLStorageCache lastEntryCacheForEntryKey:withSubEntryKey:]
  -[PLStorageCache setStagingEntryCache:]
  -[PLStorageCache stagingEntryCacheForEntryKey:withID:]
  -[PLStorageCache setCountWarnings:]
  -[PLStorageCache countWarnings]
  -[PLStorageCache stagingEntryCache]
  -[PLStorageCache init]
  -[PLStorageCache dumpLastEntryCache]
  -[PLStorageCache setStagingEntryCacheSize:]
  -[PLStorageCache getQueryForAggregateEntryKey:withMatchingKeyToValue:]
  -[PLStorageCache stagingEntryCacheSizeForEntryKey:]
  -[PLStorageCache stagingEntryCacheForEntryKey:]
  -[PLStorageCache addToLastEntryCacheSubKey:]
  -[PLStorageCache addToLastEntryCache:]
  -[PLStorageCache enumerateEntryCache:withBlock:]
  -[PLStorageCache addToStagingAggregateEntryCache:]
  -[PLStorageCache dumpStagingEntryCache]
  -[PLStorageCache getEntryFromDBForEntryKey:withMatchingKeyToValue:]
  -[PLStorageCache addToStagingEntryCache:]
  -[PLStorageCache stagingEntryCacheSize]
  -[PLStorageCache lastEntryCacheSize]
  -[PLStorageCache cachedEntryForEntryKey:withEntryID:]
  -[PLStorageCache flushStagingAggregateEntryCacheToDatabase]
  -[PLStorageCache lastCacheFlushDate]
  -[PLStorageCache entryIDForNewEntry:]
  -[PLStorageCache insertIntoStagingEntryCache:]
  -[PLStorageCache logSizeOfLastEntryCache]
  -[PLStorageCache limitOfType:forEntryKey:]
  -[PLStorageCache setNextEntryIDForEntryKey:toEntryID:]
  -[PLStorageCache setCountSafetyDrop:]
  -[PLStorageCache stagingAggregateEntryCache]
  -[PLStorageCache logSizeOfStagingEntryCache]
  -[PLStorageCache setLastCacheFlushDate:]
  -[PLStorageCache connectionForKey:]
  -[PLStorageCache stagingEntryCacheForEntryKey:withComparisons:isSingleton:]
  -[PLStorageCache flushStagingEntryCacheToDatabase]
  -[PLStorageCache setLastEntryCacheSize:]
  -[PLStorageCache enumerateStagingEntryCacheWithBlock:]
  -[PLStorageCache logSizeOfEntryCache:]
  -[PLStorageCache logStagingEntryCacheForEntryKey:]
  -[PLStorageCache lastEntryCache]
  -[PLStorageCache logFullLastEntryCacheForEntryKey:]
  -[PLStorageCache stagingEntryCacheIDsForEntryKey:]
  -[PLStorageCache clearLastEntryCacheForEntryKey:]


PLPlatform : NSObject
  // class methods
  +[PLPlatform isWatch]
  +[PLPlatform internalBuild]
  +[PLPlatform hasCapability:]
  +[PLPlatform isiPhone]
  +[PLPlatform isDeviceClassName:]
  +[PLPlatform isArchARM]
  +[PLPlatform isARMMac]
  +[PLPlatform isiPad]
  +[PLPlatform kPLSoCClassIsOneOf:]
  +[PLPlatform isAudioClass:]
  +[PLPlatform isMac]
  +[PLPlatform isBasebandProto]
  +[PLPlatform carrierBuild]
  +[PLPlatform isSoCClass:]
  +[PLPlatform isiPod]
  +[PLPlatform kPLDisplayClassOfDevice]
  +[PLPlatform kPLDeviceClassName]
  +[PLPlatform isGPSClass:]
  +[PLPlatform isBasebandMavLeg]
  +[PLPlatform kPLTorchClassIsOneOf:]
  +[PLPlatform isWiFiClass:]
  +[PLPlatform hasAOT]
  +[PLPlatform kPLWiFiClassIsOneOf:]
  +[PLPlatform hasLPEM]
  +[PLPlatform is64Bit]
  +[PLPlatform hasBaseband]
  +[PLPlatform hasOrb]
  +[PLPlatform nonUIBuild]
  +[PLPlatform isiOS]
  +[PLPlatform kPLTorchClassOfDevice]
  +[PLPlatform seedBuild]
  +[PLPlatform kPLAudioClassOfDevice]
  +[PLPlatform kPLDisplayClassIsOneOf:]
  +[PLPlatform kPLCameraClassOfDevice]
  +[PLPlatform isBasebandDSDS]
  +[PLPlatform hasDCP]
  +[PLPlatform hasOLED]
  +[PLPlatform isCameraClass:]
  +[PLPlatform isTVOS]
  +[PLPlatform isBasebandClass:]
  +[PLPlatform hasNFC]
  +[PLPlatform kPLXIsOneOf:firstArg:restOfArgs:]
  +[PLPlatform kPLDeviceMap]
  +[PLPlatform isTorchClass:]
  +[PLPlatform kPLGPSClassIsOneOf:]
  +[PLPlatform kPLGPSClassOfDevice]
  +[PLPlatform kPLDeviceClassIsOneOf:]
  +[PLPlatform kPLAudioClassIsOneOf:]
  +[PLPlatform kPLBasebandClassIsOneOf:]
  +[PLPlatform kPLBasebandClassOfDevice]
  +[PLPlatform isDeviceClass:]
  +[PLPlatform kPLDeviceClass]
  +[PLPlatform isHomePod]
  +[PLPlatform kPLPlatformAttributes]
  +[PLPlatform isAppleTV]
  +[PLPlatform hasSleepMedia]
  +[PLPlatform isBasebandIce]
  +[PLPlatform kPLSoCClassOfDevice]
  +[PLPlatform kPLWiFiClassOfDevice]
  +[PLPlatform isDisplayClass:]
  +[PLPlatform wrapDeviceArgumentsInArray:]
  +[PLPlatform kPLCameraClassIsOneOf:]


PLTimeManager : NSObject <PLTimeReferenceManager>
 @property  PLSQLiteConnection *connection
 @property  NSDictionary *timeReferences
 @property  NSDictionary *notificationsToTimeReferences
 @property  PLStorageOperator *storageOperator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLTimeManager sharedInstance]

  // instance methods
  -[PLTimeManager setStorageOperator:]
  -[PLTimeManager notificationsToTimeReferences]
  -[PLTimeManager convertTime:fromTimeReference:toTimeReference:]
  -[PLTimeManager unregisterForTimeChangedCallbackWithIdentifier:forTimeReference:]
  -[PLTimeManager .cxx_destruct]
  -[PLTimeManager timeZoneHourBucketShift:]
  -[PLTimeManager setConnection:]
  -[PLTimeManager init]
  -[PLTimeManager hourBucketBaseSnapOffsetWithMonotonicTime:]
  -[PLTimeManager connection]
  -[PLTimeManager setTimeReferences:]
  -[PLTimeManager registerForTimeChangedCallbackWithIdentifier:forTimeReference:usingBlock:]
  -[PLTimeManager currentTimeFromTimeReference:toTimeReference:]
  -[PLTimeManager bucketNSDate:withBucketInterval:]
  -[PLTimeManager getBootSessionUUID]
  -[PLTimeManager timeOffsetForTimeReference:]
  -[PLTimeManager storageOperator]
  -[PLTimeManager initializeTimeOffsets]
  -[PLTimeManager hourBucketBaseSnapOffsetWithMonotonicTimeNow:]
  -[PLTimeManager logTimeEntry]
  -[PLTimeManager initialMonotonicTime]
  -[PLTimeManager timeReferences]
  -[PLTimeManager setNotificationsToTimeReferences:]
  -[PLTimeManager storageQueue]
  -[PLTimeManager bucketTimeStampForDate:withTimeReference:withBucketInterval:]


PLSemaphore : NSObject
 @property  NSCondition *pendingObjectsLock
 @property  double timeout
 @property  NSMutableSet *interestedObjects
 @property  NSMutableSet *pendingDoneObjects
 @property  NSString *key
 @property  BOOL isActive

  // class methods
  +[PLSemaphore sharedSemaphoreForKey:]

  // instance methods
  -[PLSemaphore signalStartListening]
  -[PLSemaphore setKey:]
  -[PLSemaphore isActive]
  -[PLSemaphore .cxx_destruct]
  -[PLSemaphore waitWithBlock:]
  -[PLSemaphore setPendingDoneObjects:]
  -[PLSemaphore signalInterestByObject:]
  -[PLSemaphore setTimeout:]
  -[PLSemaphore setInterestedObjects:]
  -[PLSemaphore signalNonInterestByObject:]
  -[PLSemaphore waitWithBlockSync:]
  -[PLSemaphore timeout]
  -[PLSemaphore initWithKey:]
  -[PLSemaphore setPendingObjectsLock:]
  -[PLSemaphore pendingObjectsLock]
  -[PLSemaphore key]
  -[PLSemaphore pendingDoneObjects]
  -[PLSemaphore signalDoneByObject:]
  -[PLSemaphore interestedObjects]


PLValueComparison : NSObject
 @property  NSString *key
 @property  id value
 @property  short comparisonOperation
 @property  BOOL hasNilComparisonComponent
 @property  BOOL hasEqualComparisonComponent
 @property  BOOL hasGreaterThanComparisonComponent
 @property  BOOL hasLessThanComparisonComponent
 @property  NSString *comparisonOperationString
 @property  NSString *sqlWhereClause

  // instance methods
  -[PLValueComparison hasLessThanComparisonComponent]
  -[PLValueComparison comparisonOperationString]
  -[PLValueComparison .cxx_destruct]
  -[PLValueComparison hasEqualComparisonComponent]
  -[PLValueComparison sqlWhereClause]
  -[PLValueComparison value]
  -[PLValueComparison hasNilComparisonComponent]
  -[PLValueComparison key]
  -[PLValueComparison initWithKey:withValue:withComparisonOperation:]
  -[PLValueComparison hasGreaterThanComparisonComponent]
  -[PLValueComparison comparisonOperation]


PLCacheDeleteUtility : NSObject
  // class methods
  +[PLCacheDeleteUtility registerCacheDelete]
  +[PLCacheDeleteUtility registerCacheDeleteFull]
  +[PLCacheDeleteUtility traverseBuildDirectory:withBlock:]
  +[PLCacheDeleteUtility purgeableSizeForBuildDirectory:]
  +[PLCacheDeleteUtility traverseVersionDirectory:withBlock:]
  +[PLCacheDeleteUtility purgeableSizeForVersionDirectory:]
  +[PLCacheDeleteUtility purgeBuildDirectory:]
  +[PLCacheDeleteUtility purgeVersionDirectory:]
  +[PLCacheDeleteUtility enforceRetentionForVersionDirectory:]
  +[PLCacheDeleteUtility enforceRetentionForDirectory:withMaxDays:]
  +[PLCacheDeleteUtility purgeableBlockWithInfo:withUrgency:]
  +[PLCacheDeleteUtility purgeBlockWithInfo:withUrgency:]
  +[PLCacheDeleteUtility periodicPurgeBlockWithInfo:withUrgency:]


PLEntryDefinition : NSObject
  // class methods
  +[PLEntryDefinition sharedInstance]
  +[PLEntryDefinition filterEntryLoggingForEntryKey:]
  +[PLEntryDefinition aggregateBucketDefinitionsForEntryKey:]
  +[PLEntryDefinition aggregateFunctionForEntryDefinition:forKey:]
  +[PLEntryDefinition arrayKeysForEntryDefinition:]
  +[PLEntryDefinition allKeysForEntryDefinition:]
  +[PLEntryDefinition isAggregateWallClockBucket:]
  +[PLEntryDefinition overridesEntryDateForEntryKey:]
  +[PLEntryDefinition cacheSQLPrepareStatementForEntryKey:]
  +[PLEntryDefinition subEntryKeyKeyForEntryDefinition:]
  +[PLEntryDefinition notificationNameForEntryKey:withFilterDefintion:]
  +[PLEntryDefinition allIndexKeysForEntryDefinition:]
  +[PLEntryDefinition isOnDemandQueryableForEntryDefinition:]
  +[PLEntryDefinition isAggregateForEntryDefinition:]
  +[PLEntryDefinition aggregateBucketDefinitionsForEntryDefinition:]
  +[PLEntryDefinition allDynamicKeysForEntryKey:]
  +[PLEntryDefinition allKeysForEntryKey:]
  +[PLEntryDefinition manualSortOrderForEntryKey:]
  +[PLEntryDefinition cacheCountForEntryKey:]
  +[PLEntryDefinition allAggregateKeysForEntryKey:]
  +[PLEntryDefinition dynamicKeyConfigsForEntryDefinition:]
  +[PLEntryDefinition hasArrayKeysForEntryKey:]
  +[PLEntryDefinition isAggregateWallClockBucketForEntryDefinition:]
  +[PLEntryDefinition entryDefinitionsForOperatorClass:]
  +[PLEntryDefinition arrayKeysForEntryKey:]
  +[PLEntryDefinition sortedKeysFromEntryDefinition:]
  +[PLEntryDefinition configsForEntryDefinition:]
  +[PLEntryDefinition manualSortOrderForEntryDefinition:]
  +[PLEntryDefinition filterEntryLoggingForEntryDefinition:]
  +[PLEntryDefinition keyConfigsForEntryDefinition:]
  +[PLEntryDefinition allIndexKeysForEntryKey:]
  +[PLEntryDefinition cacheSQLPrepareStatementForEntryDefinition:]
  +[PLEntryDefinition definitionForEntryKey:]
  +[PLEntryDefinition allAggregateKeysForEntryDefinition:]
  +[PLEntryDefinition schemaVersionForEntryKey:]
  +[PLEntryDefinition pruneEmptyValueEntryFromDict:]
  +[PLEntryDefinition allAggregatePrimaryKeysForEntryKey:]
  +[PLEntryDefinition hasArrayKeysForEntryDefinition:]
  +[PLEntryDefinition keyConfigsForEntryKey:]
  +[PLEntryDefinition hasDynamicKeysForEntryKey:]
  +[PLEntryDefinition hasDynamicKeysForEntryDefinition:]
  +[PLEntryDefinition dynamicKeyConfigsForEntryKey:]
  +[PLEntryDefinition logSelectorStringForEnteryKey:]
  +[PLEntryDefinition hasAppIdentifierKeysForEntryDefinition:]
  +[PLEntryDefinition limitOfType:forEntryDefinition:]
  +[PLEntryDefinition limitOfType:forEntryKey:]
  +[PLEntryDefinition configsForEntryKey:]
  +[PLEntryDefinition allAggregatePrimaryKeysForEntryDefinition:]
  +[PLEntryDefinition logSelectorStringForEntryDefinition:]
  +[PLEntryDefinition allDynamicKeysForEntryDefinition:]
  +[PLEntryDefinition overridesEntryDateForEntryDefinition:]
  +[PLEntryDefinition cacheCountForEntryDefition:]
  +[PLEntryDefinition isOnDemandQueryableForEntryKey:]
  +[PLEntryDefinition subEntryKeyKeyForEntryKey:]
  +[PLEntryDefinition isAggregateForEntryKey:]
  +[PLEntryDefinition entryDefinitionsForOperator:]
  +[PLEntryDefinition schemaVersionForEntryDefinition:]

  // instance methods
  -[PLEntryDefinition commonTypeDict_StringFormat]
  -[PLEntryDefinition commonTypeDict_BoolFormat]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_aggregateFunction_sum]
  -[PLEntryDefinition commonTypeDict_RealFormat_withUnit_s]
  -[PLEntryDefinition commonTypeDict_DateFormat_isCFAbsoluteTime]
  -[PLEntryDefinition commonTypeDict_RealFormat]
  -[PLEntryDefinition commonTypeDict_RawDataFormat]
  -[PLEntryDefinition commonTypeDict_IntegerFormat]
  -[PLEntryDefinition commonTypeDict_RealFormat_withUnit_mW]
  -[PLEntryDefinition commonTypeDict_StringFormat_withProcessName]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_mV]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_mAh]
  -[PLEntryDefinition commonTypeDict_RealFormat_aggregateFunction_sum]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_s]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_mA]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_us]
  -[PLEntryDefinition commonTypeDict_RealFormat_withUnit_mJ]
  -[PLEntryDefinition commonTypeDict_DateFormat]
  -[PLEntryDefinition commonTypeDict_RealFormat_withUnit_mWhr]
  -[PLEntryDefinition commonTypeDict_StringFormat_withBundleID]
  -[PLEntryDefinition commonTypeDict_IntegerFormat_withUnit_ms]
  -[PLEntryDefinition commonTypeDict_StringFormat_withAppName]


PPTEntryDefinition : NSObject

PLMultiKeyEntry : PLEntry
 @property  NSMutableDictionary *multiKeys

  // class methods
  +[PLMultiKeyEntry load]

  // instance methods
  -[PLMultiKeyEntry serializedForJSON]
  -[PLMultiKeyEntry setObject:forKey:]
  -[PLMultiKeyEntry .cxx_destruct]
  -[PLMultiKeyEntry objectsForSubKey:ofSubKeyType:]
  -[PLMultiKeyEntry keysForSubKey:ofSubKeyType:]
  -[PLMultiKeyEntry init]
  -[PLMultiKeyEntry setMultiKeys:]
  -[PLMultiKeyEntry multiKeys]


PLCoreStorage : NSObject <UMUserSwitchStakeholder>
 @property  BOOL storageLocked
 @property  PLKQueue *profileDefaultsKQueue
 @property  PLTimer *dailyTaskTimer
 @property  PLTimer *flushCachesTimer
 @property  PLNSNotificationOperatorComposition *dailyTaskNotification
 @property  PLCFNotificationOperatorComposition *flushCachesCFNotification
 @property  PLCFNotificationOperatorComposition *blockingFlushCachesCFNotification
 @property  PLCFNotificationOperatorComposition *keybagFirstUnlockNotification
 @property  PLXPCResponderOperatorComposition *safeFileResponder
 @property  PLXPCResponderOperatorComposition *XPCFlushCacheResponder
 @property  PLXPCResponderOperatorComposition *blPathResponder
 @property  PLXPCResponderOperatorComposition *archivesResponder
 @property  PLXPCResponderOperatorComposition *quarantineResponder
 @property  PLXPCResponderOperatorComposition *batteryUIPlistsResponder
 @property  PLXPCResponderOperatorComposition *upgradeLogsResponder
 @property  PLStorageOperator *storageOperator
 @property  NSMutableSet *safeCopyInProgress
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  NSObject<OS_dispatch_queue> *utilityQueue
 @property  NSMutableDictionary *processIDCache
 @property  PLSQLiteConnection *connection
 @property  BOOL storageReady
 @property  NSString *uuid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLCoreStorage additionalTables]
  +[PLCoreStorage storageQueueNameForEntryKey:]
  +[PLCoreStorage storageQueueNameForClass:]
  +[PLCoreStorage allOperatorTablesToTrimConditionsForTrimDate:]
  +[PLCoreStorage logMessage:fromFile:fromFunction:fromLineNumber:]

  // instance methods
  -[PLCoreStorage setBackgroundQueue:]
  -[PLCoreStorage backgroundQueue]
  -[PLCoreStorage setProfileDefaultsKQueue:]
  -[PLCoreStorage initOperatorDependancies]
  -[PLCoreStorage setSafeFileResponder:]
  -[PLCoreStorage enumerateProcessIDCacheWithBlock:]
  -[PLCoreStorage setStorageOperator:]
  -[PLCoreStorage dailyTasks]
  -[PLCoreStorage flushCachesIfRequiredForEntryKey:]
  -[PLCoreStorage setUpgradeLogsResponder:]
  -[PLCoreStorage processEntriesForKey:withProperties:withBlock:]
  -[PLCoreStorage setXPCFlushCacheResponder:]
  -[PLCoreStorage writeEntry:]
  -[PLCoreStorage setupTableName:withEntryKeyConfig:withKeyOrder:isDynamic:withShouldIndexFKID:]
  -[PLCoreStorage removeStorageForEntryKey:]
  -[PLCoreStorage deleteEntryForKey:WithRowID:]
  -[PLCoreStorage setFlushCachesTimer:]
  -[PLCoreStorage storageReady]
  -[PLCoreStorage profileDefaultsKQueue]
  -[PLCoreStorage blockingWriteEntry:withCompletionBlock:]
  -[PLCoreStorage stopStorage]
  -[PLCoreStorage setFileProtectionForPath:withLevel:]
  -[PLCoreStorage .cxx_destruct]
  -[PLCoreStorage cleanupTmp]
  -[PLCoreStorage loadDynamicValuesIntoEntry:]
  -[PLCoreStorage aggregateEntriesForKey:withBucketLength:inTimeIntervalRange:]
  -[PLCoreStorage deleteAllEntriesForKey:]
  -[PLCoreStorage setupArrayForTableName:forColumnNamed:withValueType:withShouldIndexFKID:]
  -[PLCoreStorage removeOldPowerlogFiles]
  -[PLCoreStorage entriesForKey:before:timeInterval:count:withFilters:]
  -[PLCoreStorage entriesForKey:]
  -[PLCoreStorage startStorage]
  -[PLCoreStorage moveUpgradePowerlogsAtPath:toPath:]
  -[PLCoreStorage removeProcessIDCacheForPid:]
  -[PLCoreStorage writeEntries:withCompletionBlock:]
  -[PLCoreStorage setConnection:]
  -[PLCoreStorage setSafeCopyInProgress:]
  -[PLCoreStorage keybagFirstUnlockNotification]
  -[PLCoreStorage flushCachesCFNotification]
  -[PLCoreStorage setBlockingFlushCachesCFNotification:]
  -[PLCoreStorage setupCoveringIndexOnTable:withColumns:]
  -[PLCoreStorage flushCachesTimer]
  -[PLCoreStorage archivesResponder]
  -[PLCoreStorage lastEntryForKey:withSubEntryKey:]
  -[PLCoreStorage init]
  -[PLCoreStorage setupStorageForOperatorName:]
  -[PLCoreStorage deleteAllEntriesForKey:withFilters:]
  -[PLCoreStorage blockingFlushCachesCFNotification]
  -[PLCoreStorage setupStorageVersions]
  -[PLCoreStorage setArchivesResponder:]
  -[PLCoreStorage safeFileResponder]
  -[PLCoreStorage lastEntriesForKey:count:withFilters:]
  -[PLCoreStorage lastEntryForKey:withIDLessThan:]
  -[PLCoreStorage XPCFlushCacheResponder]
  -[PLCoreStorage entriesForKey:startingFromRowID:count:withFilters:]
  -[PLCoreStorage connection]
  -[PLCoreStorage cleanupQuarantine]
  -[PLCoreStorage setStorageReady:]
  -[PLCoreStorage _updateEntry:withBlock:]
  -[PLCoreStorage deleteEntry:]
  -[PLCoreStorage processIDCache]
  -[PLCoreStorage setDailyTaskTimer:]
  -[PLCoreStorage setupStorageForEntryKey:]
  -[PLCoreStorage lastEntryForKey:]
  -[PLCoreStorage updateEntry:withBlock:]
  -[PLCoreStorage countOfEntriesForKey:]
  -[PLCoreStorage setAllNullValuesForEntryKey:forKey:toValue:withFilters:]
  -[PLCoreStorage setQuarantineResponder:]
  -[PLCoreStorage entriesForKey:inTimeRange:withFilters:]
  -[PLCoreStorage entryForKey:withID:]
  -[PLCoreStorage setupStorageForOperatorClass:]
  -[PLCoreStorage setUtilityQueue:]
  -[PLCoreStorage blPathResponder]
  -[PLCoreStorage setBlPathResponder:]
  -[PLCoreStorage writeEntry:withCompletionBlock:]
  -[PLCoreStorage blockingUpdateEntry:withBlock:]
  -[PLCoreStorage setProcessIDCache:]
  -[PLCoreStorage writeAggregateEntry:]
  -[PLCoreStorage entriesForKey:withQuery:]
  -[PLCoreStorage storageOperator]
  -[PLCoreStorage removeProcessIDCacheForPidNumber:]
  -[PLCoreStorage safeCopyInProgress]
  -[PLCoreStorage upgradeLogsResponder]
  -[PLCoreStorage setFlushCachesCFNotification:]
  -[PLCoreStorage entriesForKey:withComparisons:]
  -[PLCoreStorage removeErroneousQualificationEntries]
  -[PLCoreStorage batteryUIPlistsResponder]
  -[PLCoreStorage uuid]
  -[PLCoreStorage deleteAllEntriesForKey:beforeTimestamp:withFilters:]
  -[PLCoreStorage processIDEntryForPid:]
  -[PLCoreStorage quarantineResponder]
  -[PLCoreStorage setupStorageForOperator:]
  -[PLCoreStorage deleteAllEntriesForKey:beforeTimestamp:]
  -[PLCoreStorage lastEntryForKey:withComparisons:isSingleton:]
  -[PLCoreStorage cacheProcessIDEntry:]
  -[PLCoreStorage lastEntryForKey:withFilters:]
  -[PLCoreStorage dailyTaskTimer]
  -[PLCoreStorage dispatchAsyncForEntryKey:withBlock:]
  -[PLCoreStorage setDailyTaskNotification:]
  -[PLCoreStorage dealloc]
  -[PLCoreStorage blockingFlushQueues:]
  -[PLCoreStorage verifySchemaVersionOfTable:matchesExpectedVersion:]
  -[PLCoreStorage writeProportionateAggregateEntry:withStartDate:withEndDate:]
  -[PLCoreStorage checkCacheSizeForFlush]
  -[PLCoreStorage entriesForKey:inTimeRange:withCountOfEntriesBefore:withCountOfEntriesAfter:withFilters:]
  -[PLCoreStorage setStorageLocked:]
  -[PLCoreStorage flushCachesWithReason:]
  -[PLCoreStorage dailyTaskNotification]
  -[PLCoreStorage firstEntryForKey:]
  -[PLCoreStorage attemptToSendTaskingStartNotification]
  -[PLCoreStorage setBatteryUIPlistsResponder:]
  -[PLCoreStorage storageLocked]
  -[PLCoreStorage setUuid:]
  -[PLCoreStorage dispatchSyncForEntryKey:withBlock:]
  -[PLCoreStorage setKeybagFirstUnlockNotification:]
  -[PLCoreStorage willSwitchUser]
  -[PLCoreStorage addAggdModeKeys]
  -[PLCoreStorage generalEntryCacheSizeLimit]
  -[PLCoreStorage handleSchemaMismatchForTable:expectedVersion:schemaMatch:]
  -[PLCoreStorage blockingFlushCachesWithReason:]
  -[PLCoreStorage logMessage:fromFile:fromFunction:fromLineNumber:]
  -[PLCoreStorage entriesForKey:withProperties:]
  -[PLCoreStorage utilityQueue]


PLCoreService : PLCoreOperator
 @property  NSMutableDictionary *services

  // instance methods
  -[PLCoreService startServices]
  -[PLCoreService services]
  -[PLCoreService setServices:]
  -[PLCoreService .cxx_destruct]
  -[PLCoreService init]
  -[PLCoreService stopServices]


PLMonotonicTimer : NSObject
 @property  double interval
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? block
 @property  NSMutableSet *canceledFireDates
 @property  PLEntryNotificationOperatorComposition *wakeEntryNotification
 @property  NSDate *monotonicFireDate

  // class methods
  +[PLMonotonicTimer debugScheduledTimerWithMonotonicFireDate:withInterval:withQueue:withBlock:]
  +[PLMonotonicTimer debugInstance]
  +[PLMonotonicTimer scheduledTimerWithMonotonicFireDate:withInterval:withQueue:withBlock:]

  // instance methods
  -[PLMonotonicTimer setBlock:]
  -[PLMonotonicTimer setInterval:]
  -[PLMonotonicTimer interval]
  -[PLMonotonicTimer wakeEntryNotification]
  -[PLMonotonicTimer fire]
  -[PLMonotonicTimer timerFiredForMonotonicFireDate:]
  -[PLMonotonicTimer setWakeEntryNotification:]
  -[PLMonotonicTimer initWithMonotonicFireDate:withInterval:withQueue:withBlock:]
  -[PLMonotonicTimer .cxx_destruct]
  -[PLMonotonicTimer schedule]
  -[PLMonotonicTimer canceledFireDates]
  -[PLMonotonicTimer setQueue:]
  -[PLMonotonicTimer setCanceledFireDates:]
  -[PLMonotonicTimer cancel]
  -[PLMonotonicTimer reschedule]
  -[PLMonotonicTimer queue]
  -[PLMonotonicTimer dealloc]
  -[PLMonotonicTimer _setMonotonicFireDate:]
  -[PLMonotonicTimer _cancel]
  -[PLMonotonicTimer monotonicFireDate]
  -[PLMonotonicTimer block]
  -[PLMonotonicTimer setMonotonicFireDate:]


PLActivityCriterion : NSObject
 @property  BOOL satisfied
 @property  <PLActivityCriterionDelegate> *delegate

  // instance methods
  -[PLActivityCriterion didDisableActivity:]
  -[PLActivityCriterion didEnableActivity:]
  -[PLActivityCriterion didCompleteActivity:]
  -[PLActivityCriterion satisfied]
  -[PLActivityCriterion didInterruptActivity:]
  -[PLActivityCriterion setSatisfied:]
  -[PLActivityCriterion .cxx_destruct]
  -[PLActivityCriterion setDelegate:]
  -[PLActivityCriterion init]
  -[PLActivityCriterion delegate]


PLTimeReference : NSObject
 @property  double hourBucketOffset
 @property  double offset
 @property  <PLTimeReferenceManager> *timeManager
 @property  long long timeReferenceType
 @property  NSString *entryDefinitionKey

  // class methods
  +[PLTimeReference defaultsKeyFromEntryDefinitionKey:]
  +[PLTimeReference hourBucketOffsetKeyFromEntryDefinitionKey:]

  // instance methods
  -[PLTimeReference setHourBucketOffset:]
  -[PLTimeReference timeManager]
  -[PLTimeReference entryDefinitionKey]
  -[PLTimeReference addTimeOffsetToMonotonicTime:]
  -[PLTimeReference setTimeReferenceType:]
  -[PLTimeReference setTimeManager:]
  -[PLTimeReference initWithTimeManager:entryDefinitionKey:timeReferenceType:]
  -[PLTimeReference hourBucketOffset]
  -[PLTimeReference removeTimeOffsetFromReferenceTime:]
  -[PLTimeReference writeOffsetToDefaults]
  -[PLTimeReference registerForDayChangedNotification]
  -[PLTimeReference offset]
  -[PLTimeReference .cxx_destruct]
  -[PLTimeReference initializeOffsetWithEntries:]
  -[PLTimeReference getHourBucketOffset]
  -[PLTimeReference currentTime]
  -[PLTimeReference timeReferenceType]
  -[PLTimeReference setEntryDefinitionKey:]
  -[PLTimeReference registerForTimeZoneChangedNotification]
  -[PLTimeReference setOffset:]
  -[PLTimeReference computeHourBucketOffset]


PLIOKitOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  ^{IONotificationPort=} ioNotifyPort
 @property  unsigned int notificationRef
 @property  unsigned int service
 @property  NSString *serviceName
 @property  NSString *serviceClassName
 @property  unsigned int iterator
 @property  unsigned int conn
 @property  @? operatorBlock
 @property  @? matchBlock

  // class methods
  +[PLIOKitOperatorComposition snapshotFromIOEntry:]
  +[PLIOKitOperatorComposition snapshotFromIOEntry:forKey:]

  // instance methods
  -[PLIOKitOperatorComposition setOperator:]
  -[PLIOKitOperatorComposition operator]
  -[PLIOKitOperatorComposition operatorBlock]
  -[PLIOKitOperatorComposition setOperatorBlock:]
  -[PLIOKitOperatorComposition setNotificationRef:]
  -[PLIOKitOperatorComposition setServiceName:]
  -[PLIOKitOperatorComposition serviceClassName]
  -[PLIOKitOperatorComposition serviceName]
  -[PLIOKitOperatorComposition matchBlock]
  -[PLIOKitOperatorComposition propertiesFromIOEntry:]
  -[PLIOKitOperatorComposition conn]
  -[PLIOKitOperatorComposition .cxx_destruct]
  -[PLIOKitOperatorComposition setConn:]
  -[PLIOKitOperatorComposition initWithOperator:forServiceClass:]
  -[PLIOKitOperatorComposition properties]
  -[PLIOKitOperatorComposition notificationRef]
  -[PLIOKitOperatorComposition setIoNotifyPort:]
  -[PLIOKitOperatorComposition setMatchBlock:]
  -[PLIOKitOperatorComposition propertiesForKey:]
  -[PLIOKitOperatorComposition propertiesFromIOEntry:forKey:]
  -[PLIOKitOperatorComposition iterator]
  -[PLIOKitOperatorComposition service]
  -[PLIOKitOperatorComposition setServiceClassName:]
  -[PLIOKitOperatorComposition setIterator:]
  -[PLIOKitOperatorComposition initWithOperator:forDynamicServiceClass:forNotificationType:withMatchBlock:]
  -[PLIOKitOperatorComposition ioNotifyPort]
  -[PLIOKitOperatorComposition dealloc]
  -[PLIOKitOperatorComposition initWithOperator:forService:withBlock:]
  -[PLIOKitOperatorComposition initWithOperator:forServiceClass:withBlock:]
  -[PLIOKitOperatorComposition setService:]
  -[PLIOKitOperatorComposition initWithOperator:forService:]


PLPowerNode : NSObject
 @property  NSString *name
 @property  double fgEnergy
 @property  double bgEnergy
 @property  double fgTime
 @property  double bgTime
 @property  double bgAudioTime
 @property  double bgLocationTime
 @property  NSArray *rootNodeEnergyRows

  // instance methods
  -[PLPowerNode name]
  -[PLPowerNode .cxx_destruct]
  -[PLPowerNode setName:]
  -[PLPowerNode fgTime]
  -[PLPowerNode bgTime]
  -[PLPowerNode time]
  -[PLPowerNode serialize]
  -[PLPowerNode fgEnergy]
  -[PLPowerNode bgEnergy]
  -[PLPowerNode energy]
  -[PLPowerNode rootNodeEnergyRows]
  -[PLPowerNode bgAudioTime]
  -[PLPowerNode bgLocationTime]
  -[PLPowerNode initWithName:withFGEnergy:withBGEnergy:withFGTime:withBGTime:withBGAudioTime:withBGLocationTime:withRootNodeEnergyRows:]
  -[PLPowerNode setFgEnergy:]
  -[PLPowerNode setBgEnergy:]
  -[PLPowerNode setFgTime:]
  -[PLPowerNode setBgTime:]
  -[PLPowerNode setBgAudioTime:]
  -[PLPowerNode setBgLocationTime:]
  -[PLPowerNode setRootNodeEnergyRows:]


PLTimer : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? block
 @property  NSObject<OS_dispatch_source> *timer
 @property  double interval
 @property  double tolerance
 @property  BOOL repeats
 @property  id userInfo
 @property  PLEntryNotificationOperatorComposition *sleepEntryNotification
 @property  PLEntryNotificationOperatorComposition *wakeEntryNotification
 @property  NSDate *lastSleepTime
 @property  BOOL timerActive
 @property  NSDate *fireDate

  // instance methods
  -[PLTimer setBlock:]
  -[PLTimer setTolerance:]
  -[PLTimer setInterval:]
  -[PLTimer tolerance]
  -[PLTimer setFireDate:]
  -[PLTimer interval]
  -[PLTimer wakeEntryNotification]
  -[PLTimer fire]
  -[PLTimer setUserInfo:]
  -[PLTimer setWakeEntryNotification:]
  -[PLTimer timerActive]
  -[PLTimer .cxx_destruct]
  -[PLTimer arm]
  -[PLTimer lastSleepTime]
  -[PLTimer initWithFireDate:withInterval:withTolerance:repeats:withUserInfo:withQueue:withBlock:]
  -[PLTimer setSleepEntryNotification:]
  -[PLTimer repeats]
  -[PLTimer setQueue:]
  -[PLTimer setRepeats:]
  -[PLTimer timer]
  -[PLTimer setTimer:]
  -[PLTimer fireDate]
  -[PLTimer queue]
  -[PLTimer userInfo]
  -[PLTimer dealloc]
  -[PLTimer sleepEntryNotification]
  -[PLTimer invalidate]
  -[PLTimer setTimerActive:]
  -[PLTimer handleTimerFire]
  -[PLTimer setLastSleepTime:]
  -[PLTimer block]


PLCoreAgent : PLCoreOperator
  // instance methods
  -[PLCoreAgent stopAgents]
  -[PLCoreAgent init]
  -[PLCoreAgent startAgents]


PLDefaults : NSObject
 @property  NSMutableDictionary *managedPrefsCache
 @property  NSMutableDictionary *instancePrefsCache
 @property  NSMutableDictionary *userPrefsCache
 @property  BOOL enableRestartAtEPL
 @property  BOOL debugEnabled
 @property  BOOL eplEnabled

  // class methods
  +[PLDefaults objectForKey:]
  +[PLDefaults longForKey:]
  +[PLDefaults applicationID]
  +[PLDefaults longForKey:ifNotSet:]
  +[PLDefaults resetUserDefaultCacheForKey:]
  +[PLDefaults isModelTrigger]
  +[PLDefaults objectForKey:ifNotSet:]
  +[PLDefaults sharedDefaults]
  +[PLDefaults setObject:forKey:]
  +[PLDefaults eplEnabled]
  +[PLDefaults debugEnabled]
  +[PLDefaults isModelingDebugEnabled]
  +[PLDefaults taskMode]
  +[PLDefaults liteMode]
  +[PLDefaults boolForKey:]
  +[PLDefaults setObject:forKey:forApplicationID:saveToDisk:]
  +[PLDefaults setClassName:debugEnabled:]
  +[PLDefaults fullModeForClass:]
  +[PLDefaults isClassDebugEnabled:]
  +[PLDefaults doubleForKey:ifNotSet:]
  +[PLDefaults objectForKey:forApplicationID:synchronize:]
  +[PLDefaults isClassNameDebugEnabled:]
  +[PLDefaults setObject:forKey:saveToDisk:]
  +[PLDefaults objectExistsForKey:]
  +[PLDefaults isTaskFullEPLMode]
  +[PLDefaults enableRestartAtEPL]
  +[PLDefaults registerEPLNotificationWithQueue:]
  +[PLDefaults fullMode]
  +[PLDefaults oldFullMode]
  +[PLDefaults doubleForKey:]
  +[PLDefaults allDefaultsEnabled]
  +[PLDefaults objectForKey:synchronize:]
  +[PLDefaults setClassName:debugEnabled:forKey:]
  +[PLDefaults isDevBoard]
  +[PLDefaults boolForKey:ifNotSet:]
  +[PLDefaults resetUserDefaultCacheForKey:forApplicationID:]
  +[PLDefaults setClass:debugEnabled:]
  +[PLDefaults setClass:debugEnabled:forKey:]
  +[PLDefaults isClassDebugEnabled:forKey:]
  +[PLDefaults fullPLLog]
  +[PLDefaults liveModeQuery]
  +[PLDefaults mode]
  +[PLDefaults isClassNameDebugEnabled:forKey:]

  // instance methods
  -[PLDefaults instancePrefsCache]
  -[PLDefaults setDebugEnabled:]
  -[PLDefaults .cxx_destruct]
  -[PLDefaults eplEnabled]
  -[PLDefaults debugEnabled]
  -[PLDefaults userDefaultsObjectForKey:forApplicationID:synchronize:]
  -[PLDefaults setObject:forKey:forApplicationID:saveToDisk:]
  -[PLDefaults setEnableRestartAtEPL:]
  -[PLDefaults objectForKey:forApplicationID:synchronize:]
  -[PLDefaults init]
  -[PLDefaults managedPrefsCache]
  -[PLDefaults enableRestartAtEPL]
  -[PLDefaults setEplEnabled:]
  -[PLDefaults managedPrefsObjectForKey:forApplicationID:synchronize:]
  -[PLDefaults setManagedPrefsCache:]
  -[PLDefaults instancePrefsObjectForKey:]
  -[PLDefaults setUserPrefsCache:]
  -[PLDefaults resetUserDefaultCacheForKey:forApplicationID:]
  -[PLDefaults setInstancePrefsCache:]
  -[PLDefaults userPrefsCache]


SignpostReaderHelper : NSObject
 @property  NSXPCConnection *connectionToServer

  // instance methods
  -[SignpostReaderHelper setConnectionToServer:]
  -[SignpostReaderHelper .cxx_destruct]
  -[SignpostReaderHelper connectionToServer]
  -[SignpostReaderHelper createXPCConnection]
  -[SignpostReaderHelper closeXPCConnection]
  -[SignpostReaderHelper getSignpostSummaryWithAllowlist:withStartDate:withEndDate:]
  -[SignpostReaderHelper generateSignpostSubmissionWithTagConfig:withAllowlist:withStartDate:withEndDate:includeSPFile:]
  -[SignpostReaderHelper customGetNearestMidnight]
  -[SignpostReaderHelper processSignpostWithConfig:withServiceType:]
  -[SignpostReaderHelper getSignpostMetricsWithStartDate:withEndDate:processMXSignpost:]
  -[SignpostReaderHelper generateRapidSignpostSummaryWithStartDate:endDate:]
  -[SignpostReaderHelper generateMSSWithStartDate:endDate:atPath:]


PPTCoreUtilities : NSObject
  // class methods
  +[PPTCoreUtilities getPrivacyAllowlist]
  +[PPTCoreUtilities isValidModeForMetric:]
  +[PPTCoreUtilities isAllowedMetric:]
  +[PPTCoreUtilities isAllowedSubsystem:category:]
  +[PPTCoreUtilities md5Hash:]
  +[PPTCoreUtilities getTestAllowlist]
  +[PPTCoreUtilities getAllowlist]


PLCFNotificationOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL isStateRequired
 @property  int stateToken
 @property  BOOL listeningForNotifications
 @property  NSString *notificationName
 @property  @? operatorBlock

  // instance methods
  -[PLCFNotificationOperatorComposition setOperator:]
  -[PLCFNotificationOperatorComposition operator]
  -[PLCFNotificationOperatorComposition operatorBlock]
  -[PLCFNotificationOperatorComposition setOperatorBlock:]
  -[PLCFNotificationOperatorComposition setWorkQueue:]
  -[PLCFNotificationOperatorComposition listenForNotifications:]
  -[PLCFNotificationOperatorComposition setStateToken:]
  -[PLCFNotificationOperatorComposition notificationName]
  -[PLCFNotificationOperatorComposition setListeningForNotifications:]
  -[PLCFNotificationOperatorComposition .cxx_destruct]
  -[PLCFNotificationOperatorComposition initWithOperator:forNotification:requireState:withBlock:]
  -[PLCFNotificationOperatorComposition setNotificationName:]
  -[PLCFNotificationOperatorComposition setIsStateRequired:]
  -[PLCFNotificationOperatorComposition workQueue]
  -[PLCFNotificationOperatorComposition listeningForNotifications]
  -[PLCFNotificationOperatorComposition initWithWorkQueue:forNotification:requireState:withBlock:]
  -[PLCFNotificationOperatorComposition isStateRequired]
  -[PLCFNotificationOperatorComposition dealloc]
  -[PLCFNotificationOperatorComposition stateToken]


PPTSQLStorage : PPTStorage
 @property  BOOL storageStarted
 @property  NSDictionary *connectionByStorage

  // class methods
  +[PPTSQLStorage trimConditionsForPLSQLWithTrimDate:]
  +[PPTSQLStorage trimConditionsForStorage:trimDate:]
  +[PPTSQLStorage trimConditionsForEntryKey:trimDate:currDate:]
  +[PPTSQLStorage trimConditionsForEPSQLWithTrimDate:]

  // instance methods
  -[PPTSQLStorage closeAllConnections]
  -[PPTSQLStorage updateTable:transferDataForKeys:]
  -[PPTSQLStorage setupTableForEntryKey:]
  -[PPTSQLStorage handleSchemaMismatchForTable:expectedVersion:]
  -[PPTSQLStorage setupDBConnectionAtPath:]
  -[PPTSQLStorage .cxx_destruct]
  -[PPTSQLStorage setStorageStarted:]
  -[PPTSQLStorage setupTableForEntryKey:withName:]
  -[PPTSQLStorage startStorage]
  -[PPTSQLStorage init]
  -[PPTSQLStorage setupStorageVersions]
  -[PPTSQLStorage setupLogVersions:version:]
  -[PPTSQLStorage EPSQLConnection]
  -[PPTSQLStorage setupStorageForEntryKey:]
  -[PPTSQLStorage connectionByStorage]
  -[PPTSQLStorage setupFolders]
  -[PPTSQLStorage PLSQLConnection]
  -[PPTSQLStorage storageStarted]
  -[PPTSQLStorage verifyVersionForTable:matches:]
  -[PPTSQLStorage setConnectionByStorage:]
  -[PPTSQLStorage connectionForKey:]


PLUtilities : NSObject
  // class methods
  +[PLUtilities hardwareModel]
  +[PLUtilities isHealthDataSubmissionAllowed]
  +[PLUtilities isSiriEnabled]
  +[PLUtilities isHeySiriEnabled]
  +[PLUtilities hasBattery]
  +[PLUtilities isAppAnalyticsEnabled]
  +[PLUtilities automatedDeviceGroup]
  +[PLUtilities workQueue]
  +[PLUtilities postNotificationName:object:userInfo:]
  +[PLUtilities hasGasGauge]
  +[PLUtilities containerPath]
  +[PLUtilities directorySize:]
  +[PLUtilities defaultBatteryEnergyCapacity]
  +[PLUtilities createAndChownDirectoryIfDirectoryDoesNotExist:]
  +[PLUtilities compressWithSource:withDestination:withLevel:]
  +[PLUtilities workQueueForClass:]
  +[PLUtilities processNameForPid:]
  +[PLUtilities exitWithReason:]
  +[PLUtilities isFullModeDaemon]
  +[PLUtilities isLiteModeDaemon]
  +[PLUtilities isPowerlogHelperd]
  +[PLUtilities allSubClassesForClass:]
  +[PLUtilities workQueueForKey:]
  +[PLUtilities dispatchSyncWithoutDeadlockOnQueue:withBlock:]
  +[PLUtilities extractDateStringAndUUIDStringFromFilePath:]
  +[PLUtilities deviceRebooted]
  +[PLUtilities compareFilesByKey:file1:file2:sortAscending:]
  +[PLUtilities createAndChownDirectory:]
  +[PLUtilities shortUUIDString]
  +[PLUtilities moveItemAtPath:toPath:withName:error:]
  +[PLUtilities exitWithReason:connection:]
  +[PLUtilities transactionWorkQueue]
  +[PLUtilities deviceBootTime]
  +[PLUtilities exitSafe:]
  +[PLUtilities setMobileOwnerForFile:]
  +[PLUtilities compressWithSourceStream:withDestination:withLevel:]
  +[PLUtilities getMachbaseTimeRatio]
  +[PLUtilities deviceBootUUID]
  +[PLUtilities getMachTimebase]
  +[PLUtilities dateFromTimeval:]
  +[PLUtilities exitWithReason:action:]
  +[PLUtilities connectionToQuarantine:]
  +[PLUtilities quarantineToPath:action:]
  +[PLUtilities bundleIDFromPid:]
  +[PLUtilities launchdNameToProcessName:]
  +[PLUtilities binaryPathForPid:]
  +[PLUtilities bundleIDFromURL:]
  +[PLUtilities liteModeDaemonName]
  +[PLUtilities fullModeDaemonName]
  +[PLUtilities runningAsUser]
  +[PLUtilities generateAndUpdateSaltValue:]
  +[PLUtilities generateHashValue:withSalt:]
  +[PLUtilities getAllowblocklist]
  +[PLUtilities logModeForEntryKey:withKey:andValue:]
  +[PLUtilities modeForEntryKey:withKeyName:]
  +[PLUtilities canLogMode:fullMode:]
  +[PLUtilities getDeviceNameIOSWatchOS]
  +[PLUtilities PLCopyItemsFromPath:toPath:]
  +[PLUtilities remove:oldestFilesFromDirectory:containingFileNameSubstring:]
  +[PLUtilities dispatchTimeInSeconds:]
  +[PLUtilities secondsFromMachTime:]
  +[PLUtilities dateFromTimevalSystemTime:]
  +[PLUtilities getCurrentMonotonicAndMachAbsTime:machAbsTime:machContTime:]
  +[PLUtilities getCurrMachAbsTimeInSecs]
  +[PLUtilities exitWithReasonSync:]
  +[PLUtilities allowQueryFromPeer:]
  +[PLUtilities getIdentifierFromEntry:]
  +[PLUtilities bundleVersionFromURL:]
  +[PLUtilities fullProcessNameForPid:]
  +[PLUtilities maxProcessCount]
  +[PLUtilities isDaemonOrAppleXPCService:]
  +[PLUtilities isUserProcess]
  +[PLUtilities runningAsMobileUser]
  +[PLUtilities AppDeletionEnabled]
  +[PLUtilities SwitchToIncrementalVacuumEnabled]
  +[PLUtilities WakeAttributionEnabled]
  +[PLUtilities gasGaugeEnabled]
  +[PLUtilities isEduMode]
  +[PLUtilities isALSCurveHigherThanDefault]
  +[PLUtilities hashString:]
  +[PLUtilities hashBundleID:]
  +[PLUtilities getSessionsAllowlist]
  +[PLUtilities shouldLogForEntryKey:]
  +[PLUtilities shouldLogForEntryKey:withKey:andValue:]
  +[PLUtilities isPingPongChargingWith:andBatteryLevelPercent:]
  +[PLUtilities roundToSigFig:withSigFig:]
  +[PLUtilities JSONSanitizeDictionary:]
  +[PLUtilities isValidString:]
  +[PLUtilities getKVPairsForCASubmissionFromEntry:]
  +[PLUtilities getJetamPriority:]
  +[PLUtilities refreshBUI]
  +[PLUtilities scaledPowerBasedOnPoint:withPowerModel:]
  +[PLUtilities powerModelForOperatorName:]
  +[PLUtilities torchTypeString]
  +[PLUtilities MavRevStringQuery]


PLKQueue : NSObject
 @property  int kQueue
 @property  int fileDescriptor
 @property  ^{__CFRunLoopSource=} kqueueDescriptorSource
 @property  ^{__CFFileDescriptor=} kqueueDescriptorRef
 @property  NSString *path
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? kQueueBlock
 @property  BOOL enabled

  // instance methods
  -[PLKQueue fileDescriptor]
  -[PLKQueue setPath:]
  -[PLKQueue setFileDescriptor:]
  -[PLKQueue .cxx_destruct]
  -[PLKQueue setKqueueDescriptorRef:]
  -[PLKQueue setKqueueDescriptorSource:]
  -[PLKQueue kQueue]
  -[PLKQueue enabled]
  -[PLKQueue kqueueDescriptorSource]
  -[PLKQueue kqueueDescriptorRef]
  -[PLKQueue initWithPath:withDispatchQueue:withBlock:]
  -[PLKQueue setKQueue:]
  -[PLKQueue setKQueueBlock:]
  -[PLKQueue dispatchQueue]
  -[PLKQueue path]
  -[PLKQueue kQueueBlock]
  -[PLKQueue setEnabled:]
  -[PLKQueue setDispatchQueue:]


PLAggregateEntry : NSObject
 @property  NSString *entryKey
 @property  NSMutableDictionary *matchingKeyToValue
 @property  NSArray *otherAggregateKeys
 @property  NSString *aggregateKey
 @property  double aggregateValue
 @property  short aggregateFunction

  // instance methods
  -[PLAggregateEntry matchingPairs]
  -[PLAggregateEntry setMatchingKeyToValue:]
  -[PLAggregateEntry query]
  -[PLAggregateEntry setAggregateKey:]
  -[PLAggregateEntry setEntryKey:]
  -[PLAggregateEntry .cxx_destruct]
  -[PLAggregateEntry otherAggregateKeys]
  -[PLAggregateEntry aggregateValue]
  -[PLAggregateEntry entryKey]
  -[PLAggregateEntry setAggregateValue:]
  -[PLAggregateEntry aggregateOperationWithMatchingPairs:]
  -[PLAggregateEntry aggregateKey]
  -[PLAggregateEntry setOtherAggregateKeys:]
  -[PLAggregateEntry setAggregateFunction:]
  -[PLAggregateEntry updateWithValue:]
  -[PLAggregateEntry aggregateFunction]
  -[PLAggregateEntry matchingKeyToValue]


PLModelingUtilities : NSObject
  // class methods
  +[PLModelingUtilities isWatch]
  +[PLModelingUtilities internalBuild]
  +[PLModelingUtilities isiPhone]
  +[PLModelingUtilities isARMMac]
  +[PLModelingUtilities isiPad]
  +[PLModelingUtilities isMac]
  +[PLModelingUtilities carrierBuild]
  +[PLModelingUtilities isiPod]
  +[PLModelingUtilities isTVOS]
  +[PLModelingUtilities isHomePod]
  +[PLModelingUtilities isAppleTV]
  +[PLModelingUtilities duetDiscretionaryBudget]
  +[PLModelingUtilities defaultBatteryEnergyCapacity]
  +[PLModelingUtilities valueForMobileGestaltCapability:]
  +[PLModelingUtilities getDefaultL0bThresholdForDeviceType]
  +[PLModelingUtilities shouldShowBatteryGraphs]
  +[PLModelingUtilities alsCurveHigherThanDefault]
  +[PLModelingUtilities networkingEnergyWithBytes:withDuration:]
  +[PLModelingUtilities isPercentageSupported]
  +[PLModelingUtilities isLowPowerModeSupported]
  +[PLModelingUtilities isNarrowScreen]
  +[PLModelingUtilities isHeySiriAlwaysOn]


PLEntryKey : NSObject
 @property  NSString *wildCardName
 @property  BOOL isDynamic
 @property  {_PLTimeIntervalRange=dd} timeIntervalRange
 @property  PLEntryKey *baseEntryKey
 @property  NSString *entryKey
 @property  NSString *operatorName
 @property  Class operatorClass
 @property  NSString *entryType
 @property  NSString *entryName

  // class methods
  +[PLEntryKey PLEntryAggregateKeysForOperator:]
  +[PLEntryKey PLEntryKeyStringsForTasking]
  +[PLEntryKey PLEntryKeyForOperatorName:withType:withName:withWildCardName:isDynamic:]
  +[PLEntryKey operatorNameForEntryKey:]
  +[PLEntryKey PLEntryKeyStringsForTaskingReset]
  +[PLEntryKey shouldConfigureTable:withType:withName:withConfigs:]
  +[PLEntryKey addPLEntryKeyStringToTasking:]
  +[PLEntryKey timeIntervalRangeForEntryKey:]
  +[PLEntryKey timeintervalRangeEntryKeyForEntryKey:withTimeIntervalRange:]
  +[PLEntryKey entryKeyForOperatorName:withType:withName:isDynamic:]
  +[PLEntryKey setupEntryObjectsForOperatorClass:]
  +[PLEntryKey entryKeyForOperatorName:withType:withName:withWildCardName:]
  +[PLEntryKey addPLEntryKey:]
  +[PLEntryKey operatorClassForEntryKey:]
  +[PLEntryKey baseEntryKeyForEntryKey:]
  +[PLEntryKey PLEntryKeyForEntryKey:]
  +[PLEntryKey entryKeyForOperatorName:withType:withName:withWildCardName:isDynamic:]
  +[PLEntryKey PLEntryAggregateKeysForOperatorName:]
  +[PLEntryKey entryKeysForOperator:]
  +[PLEntryKey entryKeyStringForOperatorName:withType:withName:]
  +[PLEntryKey wildCardForEntryKey:]
  +[PLEntryKey PLEntryAggregateKeysForOperatorClass:]
  +[PLEntryKey isEntryKeySetup:forOperatorName:]
  +[PLEntryKey entryKeysForOperatorName:]
  +[PLEntryKey entryKeysForOperatorClass:]
  +[PLEntryKey PLEntryKeysForEntryType:]
  +[PLEntryKey entryKeyForOperatorName:withType:withName:]
  +[PLEntryKey shouldConfigureAdditionalTable:withType:withName:]
  +[PLEntryKey PLEntryKeyForOperatorName:withType:withName:]
  +[PLEntryKey dynamicEntryKeyForEntryKey:]

  // instance methods
  -[PLEntryKey isDynamic]
  -[PLEntryKey operatorName]
  -[PLEntryKey entryType]
  -[PLEntryKey setIsDynamic:]
  -[PLEntryKey operatorClass]
  -[PLEntryKey copyWithWildCardName:]
  -[PLEntryKey .cxx_destruct]
  -[PLEntryKey copyWithTimeIntervalRange:]
  -[PLEntryKey initWithOperatorName:withEntryType:withEntryName:]
  -[PLEntryKey setWildCardName:]
  -[PLEntryKey entryKey]
  -[PLEntryKey copyWithIsDynamic:]
  -[PLEntryKey setTimeIntervalRange:]
  -[PLEntryKey timeIntervalRange]
  -[PLEntryKey entryName]
  -[PLEntryKey baseEntryKey]
  -[PLEntryKey wildCardName]
  -[PLEntryKey setBaseEntryKey:]


PLEntryNotificationOperatorComposition : PLNSNotificationOperatorComposition
  // class methods
  +[PLEntryNotificationOperatorComposition wakeEntryNotificationWithWorkQueue:withBlock:]
  +[PLEntryNotificationOperatorComposition wakeEntryNotificationWithOperator:withBlock:]
  +[PLEntryNotificationOperatorComposition requestEntryForEntryKey:forOperator:withTimeout:error:]
  +[PLEntryNotificationOperatorComposition displayOffNotificationWithOperator:withBlock:]
  +[PLEntryNotificationOperatorComposition significantBatteryChangeNotificationWithOperator:withMaxIntervalInSecs:withBlock:]
  +[PLEntryNotificationOperatorComposition canSleepEntryNotificationWithWorkQueue:withBlock:]
  +[PLEntryNotificationOperatorComposition canSleepEntryNotificationWithOperator:withBlock:]
  +[PLEntryNotificationOperatorComposition significantBatteryChangeNotificationWithOperator:withBlock:]
  +[PLEntryNotificationOperatorComposition sleepEntryNotificationWithOperator:withBlock:]
  +[PLEntryNotificationOperatorComposition getSBCMinTimeInterval]
  +[PLEntryNotificationOperatorComposition getSBCMaxTimeInterval]
  +[PLEntryNotificationOperatorComposition displayOnNotificationWithOperator:withBlock:]

  // instance methods
  -[PLEntryNotificationOperatorComposition initWithWorkQueue:forEntryKey:withFilter:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithWorkQueue:forEntryKey:forUpdateOrInsert:withFilter:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithWorkQueue:forEntryKey:withBlock:]
  -[PLEntryNotificationOperatorComposition initNotificationTimerWithWorkQueue:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithOperator:forEntryKey:withFilter:withBlock:]
  -[PLEntryNotificationOperatorComposition requestEntry]
  -[PLEntryNotificationOperatorComposition initWithOperator:forEntryKey:forUpdateOrInsert:withFilter:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithWorkQueue:forEntryKey:forUpdateOrInsert:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithOperator:forEntryKey:withBlock:]
  -[PLEntryNotificationOperatorComposition initWithOperator:forEntryKey:forUpdateOrInsert:withBlock:]
  -[PLEntryNotificationOperatorComposition initNotificationTimerWithWorkQueue:withMaxInterval:withBlock:]


PPTCollectionOperator : PLOperator
 @property  PLXPCListenerOperatorComposition *metricListener
 @property  PLXPCResponderOperatorComposition *allowlistResponder

  // instance methods
  -[PPTCollectionOperator initOperatorDependancies]
  -[PPTCollectionOperator setAllowlistResponder:]
  -[PPTCollectionOperator .cxx_destruct]
  -[PPTCollectionOperator metricListener]
  -[PPTCollectionOperator init]
  -[PPTCollectionOperator startCollection]
  -[PPTCollectionOperator allowlistResponder]
  -[PPTCollectionOperator setMetricListener:]


TimeAndLatencyAbm : NSObject
 @property  NSDate *time
 @property  double latency

  // instance methods
  -[TimeAndLatencyAbm setTime:]
  -[TimeAndLatencyAbm .cxx_destruct]
  -[TimeAndLatencyAbm latency]
  -[TimeAndLatencyAbm time]
  -[TimeAndLatencyAbm initWithTime:andLatency:]
  -[TimeAndLatencyAbm setLatency:]


PLABMClient : NSObject
 @property  <PLABMClientMessageDelegate> *delegate

  // class methods
  +[PLABMClient sharedABMClient]

  // instance methods
  -[PLABMClient startListening]
  -[PLABMClient regBBWakeListener]
  -[PLABMClient .cxx_construct]
  -[PLABMClient getBasebandTimeAndLatency]
  -[PLABMClient getLTESleepManagerStats]
  -[PLABMClient sendWakeInfoToLoggerUsing:]
  -[PLABMClient .cxx_destruct]
  -[PLABMClient setDelegate:]
  -[PLABMClient sendBootStateChangInfoToLoggerUsing:]
  -[PLABMClient addMavDeviceConfigDebug]
  -[PLABMClient init]
  -[PLABMClient sendMetricToLoggerUsing:]
  -[PLABMClient addDeviceConfigWith:]
  -[PLABMClient removeDeviceConfig]
  -[PLABMClient regTriggerListener]
  -[PLABMClient regBootStateListener]
  -[PLABMClient regMetricListener]
  -[PLABMClient getBasebandBootState]
  -[PLABMClient addICEDeviceConfigDebug]
  -[PLABMClient delegate]
  -[PLABMClient sendTriggerToLoggerUsing:]
  -[PLABMClient triggerPeriodicMetrics]
  -[PLABMClient addMavDeviceConfig]
  -[PLABMClient addICEDeviceConfig]


PLAppDeletion : NSObject
  // class methods
  +[PLAppDeletion iterateServices]
  +[PLAppDeletion setFileProtectionForPath:withLevel:]
  +[PLAppDeletion setup]
  +[PLAppDeletion iterateAgents]
  +[PLAppDeletion deferXPCActivity:]
  +[PLAppDeletion finishXPCActivity:]
  +[PLAppDeletion populateIdentifiers:]
  +[PLAppDeletion traverseVersionDirectory:withBlock:]
  +[PLAppDeletion changePermissionsForFilesInDirectory:withProtectionLevel:]
  +[PLAppDeletion getProtectionLevel:]
  +[PLAppDeletion changePermissionForDirectory:withProtectionLevel:]
  +[PLAppDeletion filePermissionCriteria]
  +[PLAppDeletion handleFilePermissionXPCActivityCallback:]
  +[PLAppDeletion changeClassProtection:]
  +[PLAppDeletion registerAppDeletionActivity]
  +[PLAppDeletion constructAppReferenceTableList]
  +[PLAppDeletion constructFileNames]
  +[PLAppDeletion constructAppReferenceMapping]
  +[PLAppDeletion constructUpdateQueries]
  +[PLAppDeletion pluginsForBundleID:]
  +[PLAppDeletion processNameForBundleID:]
  +[PLAppDeletion maskAssociatedPlugins:withMaskedDictionary:]
  +[PLAppDeletion maskProcessName:withMaskedDictionary:]
  +[PLAppDeletion addFilesToList:]
  +[PLAppDeletion decompressFile:withDirPath:]
  +[PLAppDeletion updateQuery:]
  +[PLAppDeletion deleteAppReferencesInCurrentPowerlog]
  +[PLAppDeletion deleteAppReferencesFromCompressedFiles:]
  +[PLAppDeletion deleteAppReferenceMapping]
  +[PLAppDeletion appDeletionCriteria]
  +[PLAppDeletion handleAppDeletionXPCActivityCallback:]
  +[PLAppDeletion deleteAppReferences:]
  +[PLAppDeletion resetStateVariables]
  +[PLAppDeletion registerFilePermissionActivity]


PLSubmissionFileBDC : PLSubmissionFile
  // instance methods
  -[PLSubmissionFileBDC submit]
  -[PLSubmissionFileBDC fileType]
  -[PLSubmissionFileBDC initWithConfig:]
  -[PLSubmissionFileBDC fileExtension]
  -[PLSubmissionFileBDC copyAndPrepareLog]
  -[PLSubmissionFileBDC getListOfRequiredBDCFiles]
  -[PLSubmissionFileBDC getEPSQLFile]
  -[PLSubmissionFileBDC getBDCPlistFile]


PLFileStats : NSObject
  // class methods
  +[PLFileStats fileSizeAtPath:]
  +[PLFileStats logStartDate]
  +[PLFileStats logEndDate]
  +[PLFileStats tableCounts]
  +[PLFileStats select:from:where:]
  +[PLFileStats totalLogDuration]
  +[PLFileStats cpuTimeForProcess:]
  +[PLFileStats logStartDateFromTable:]
  +[PLFileStats logEndDateFromTable:]
  +[PLFileStats statsForFile:]
  +[PLFileStats totalLogDurationFromTable:where:]


PLActivityCriterionEntry : PLActivityCriterion
 @property  @? criterionBlock
 @property  NSDictionary *filter
 @property  PLEntryNotificationOperatorComposition *entryListener
 @property  NSString *entryKey

  // class methods
  +[PLActivityCriterionEntry pluggedInCriterion]
  +[PLActivityCriterionEntry displayOffCriterion]
  +[PLActivityCriterionEntry audioOffCriterion]

  // instance methods
  -[PLActivityCriterionEntry didDisableActivity:]
  -[PLActivityCriterionEntry didEnableActivity:]
  -[PLActivityCriterionEntry entryListener]
  -[PLActivityCriterionEntry setFilter:]
  -[PLActivityCriterionEntry .cxx_destruct]
  -[PLActivityCriterionEntry entryKey]
  -[PLActivityCriterionEntry filter]
  -[PLActivityCriterionEntry setCriterionBlock:]
  -[PLActivityCriterionEntry setEntryListener:]
  -[PLActivityCriterionEntry initWithEntryKey:withFilter:withCriterionBlock:]
  -[PLActivityCriterionEntry scheduleEntryListener]
  -[PLActivityCriterionEntry initWithEntryKey:withCriterionBlock:]
  -[PLActivityCriterionEntry criterionBlock]


PLQLDuetInMemoryCache : NSObject
 @property  NSDictionary *startArgs
 @property  NSDictionary *stopArgs
 @property  double startTime
 @property  double stopTime
 @property  double cellIn
 @property  double cellOut
 @property  double wifiIn
 @property  double wifiOut
 @property  int refCount

  // instance methods
  -[PLQLDuetInMemoryCache setStartTime:]
  -[PLQLDuetInMemoryCache stopTime]
  -[PLQLDuetInMemoryCache refCount]
  -[PLQLDuetInMemoryCache .cxx_destruct]
  -[PLQLDuetInMemoryCache cellIn]
  -[PLQLDuetInMemoryCache wifiIn]
  -[PLQLDuetInMemoryCache init]
  -[PLQLDuetInMemoryCache startTime]
  -[PLQLDuetInMemoryCache cellOut]
  -[PLQLDuetInMemoryCache wifiOut]
  -[PLQLDuetInMemoryCache setRefCount:]
  -[PLQLDuetInMemoryCache setStopTime:]
  -[PLQLDuetInMemoryCache stopArgs]
  -[PLQLDuetInMemoryCache setStopArgs:]
  -[PLQLDuetInMemoryCache setCellIn:]
  -[PLQLDuetInMemoryCache setCellOut:]
  -[PLQLDuetInMemoryCache setWifiIn:]
  -[PLQLDuetInMemoryCache setWifiOut:]
  -[PLQLDuetInMemoryCache setStartArgs:]
  -[PLQLDuetInMemoryCache updateDataStats:]
  -[PLQLDuetInMemoryCache initWithStartTime:withStartargs:]
  -[PLQLDuetInMemoryCache clearStop]
  -[PLQLDuetInMemoryCache isStartPresent]
  -[PLQLDuetInMemoryCache isStopPresent]
  -[PLQLDuetInMemoryCache addDataWithCellIn:withCellOut:withWifiIn:withWifiOut:]
  -[PLQLDuetInMemoryCache addStartEvent:withArgs:]
  -[PLQLDuetInMemoryCache addStopEvent:withArgs:]
  -[PLQLDuetInMemoryCache startArgs]


PLArchiveJob : NSObject
 @property  PLTimer *watchdog
 @property  <PLArchiveJobManager> *manager
 @property  PLArchiveEntry *archiveEntry
 @property  long long stage
 @property  unsigned long numAttempts

  // class methods
  +[PLArchiveJob storageQueue]
  +[PLArchiveJob runSelectorForStage:]
  +[PLArchiveJob recoverSelectorForStage:]

  // instance methods
  -[PLArchiveJob setManager:]
  -[PLArchiveJob setNumAttempts:]
  -[PLArchiveJob .cxx_destruct]
  -[PLArchiveJob numAttempts]
  -[PLArchiveJob recover]
  -[PLArchiveJob manager]
  -[PLArchiveJob setStage:]
  -[PLArchiveJob watchdog]
  -[PLArchiveJob run]
  -[PLArchiveJob stage]
  -[PLArchiveJob startWatchdog]
  -[PLArchiveJob setArchiveEntry:]
  -[PLArchiveJob archiveEntry]
  -[PLArchiveJob stopWatchdog]
  -[PLArchiveJob stageStart]
  -[PLArchiveJob stageCopy]
  -[PLArchiveJob stageTrim]
  -[PLArchiveJob stageCompress]
  -[PLArchiveJob stageRemove]
  -[PLArchiveJob recoverCopy]
  -[PLArchiveJob recoverTrim]
  -[PLArchiveJob recoverCompress]
  -[PLArchiveJob setWatchdog:]
  -[PLArchiveJob initWithManager:andArchiveEntry:]


PLStorageOperator : PLOperator
  // class methods
  +[PLStorageOperator entryEventNoneDefinitions]
  +[PLStorageOperator entryEventPointDefinitionPLLog]
  +[PLStorageOperator entryEventNoneDefinitionAdditionalTablesTurnedOn]
  +[PLStorageOperator entryEventForwardDefinitionTimeOffset]
  +[PLStorageOperator entryEventIntervalDefinitions]
  +[PLStorageOperator entryEventForwardDefinitionSubmissionTag]
  +[PLStorageOperator entryEventNoneDefinitionActivity]
  +[PLStorageOperator entryEventForwardDefinitionConfiguration]
  +[PLStorageOperator entryEventForwardDefinitionActivityStates]
  +[PLStorageOperator entryEventForwardDefinitionTaskingMode]
  +[PLStorageOperator eventIntervalCacheSizeWithPayload:withEntryDate:]
  +[PLStorageOperator eventPointCacheFlushWithPayload:]
  +[PLStorageOperator entryEventPointDefinitions]
  +[PLStorageOperator entryEventPointDefinitionOTA]
  +[PLStorageOperator entryEventIntervalDefinitionCacheSize]
  +[PLStorageOperator entryEventForwardDefinitionSchemaChange]
  +[PLStorageOperator entryEventPointDefinitionTimeCorrection]
  +[PLStorageOperator entryEventPointDefinitionCacheFlush]
  +[PLStorageOperator entryEventPointDefinitionArchive]
  +[PLStorageOperator entryEventForwardDefinitions]

  // instance methods
  -[PLStorageOperator initOperatorDependancies]
  -[PLStorageOperator trimConditionsForEntryKey:forTrimDate:]
  -[PLStorageOperator log]
  -[PLStorageOperator logEventPointArchive:]
  -[PLStorageOperator logEventNoneAdditionalTablesTurnedOn:]
  -[PLStorageOperator logEventPointTimeCorrection:]
  -[PLStorageOperator logEventPointOTA:]
  -[PLStorageOperator logEventForwardTaskingMode:]
  -[PLStorageOperator logEventForwardConfiguration:]
  -[PLStorageOperator logEventPointCacheFlush:]
  -[PLStorageOperator logEventPointPLLog:]
  -[PLStorageOperator logEventForwardSchemaChange:]
  -[PLStorageOperator logEventForwardTimeOffset:]


PLAccountingOperator : PLOperator
 @property  NSSet *rules
 @property  NSMutableDictionary *ruleIDToPendingJobs

  // class methods
  +[PLAccountingOperator entryEventNoneDefinitions]
  +[PLAccountingOperator entryEventBackwardDefinitionDistributionEvents]
  +[PLAccountingOperator load]
  +[PLAccountingOperator entryAggregateDefinitionQualificationEnergy]
  +[PLAccountingOperator entryEventIntervalDefinitionQualificationEvents]
  +[PLAccountingOperator entryEventBackwardDefinitions]
  +[PLAccountingOperator entryEventIntervalDefinitions]
  +[PLAccountingOperator entryEventForwardDefinitionPowerEvents]
  +[PLAccountingOperator entryAggregateDefinitions]
  +[PLAccountingOperator entryEventIntervalDefinitionPowerEvents]
  +[PLAccountingOperator entryEventPointDefinitionDistributionEvents]
  +[PLAccountingOperator entryAggregateDefinitionEnergy]
  +[PLAccountingOperator entryEventForwardDefinitionDistributionEvents]
  +[PLAccountingOperator entryEventIntervalDefinitionDistributionEvents]
  +[PLAccountingOperator entryEventPointDefinitions]
  +[PLAccountingOperator entryEventBackwardDefinitionPowerEvents]
  +[PLAccountingOperator entryEventPointDefinitionQualificationEvents]
  +[PLAccountingOperator entryEventNoneDefinitionNodes]
  +[PLAccountingOperator entryEventForwardDefinitionQualificationEvents]
  +[PLAccountingOperator entryEventNoneDefinitionQualificationRules]
  +[PLAccountingOperator entryEventBackwardDefinitionQualificationEvents]
  +[PLAccountingOperator entryEventNoneDefinitionDistributionRules]
  +[PLAccountingOperator entryEventIntervalDefinitionEnergyEstimateEvents]
  +[PLAccountingOperator entryEventForwardDefinitions]

  // instance methods
  -[PLAccountingOperator rules]
  -[PLAccountingOperator initOperatorDependancies]
  -[PLAccountingOperator trimConditionsForEntryKey:forTrimDate:]
  -[PLAccountingOperator .cxx_destruct]
  -[PLAccountingOperator setRules:]
  -[PLAccountingOperator startAccounting]
  -[PLAccountingOperator init]
  -[PLAccountingOperator stopAccounting]
  -[PLAccountingOperator ruleIDToPendingJobs]
  -[PLAccountingOperator setRuleIDToPendingJobs:]


PLTimeReferenceSystem : PLTimeReferenceDynamic
  // instance methods
  -[PLTimeReferenceSystem registerForDayChangedNotification]
  -[PLTimeReferenceSystem registerForTimeChangedNotification]
  -[PLTimeReferenceSystem timeChangedToMidnightLocalTime]
  -[PLTimeReferenceSystem registerForClockSetNotification]
  -[PLTimeReferenceSystem dayChangedNotificationReceived:]
  -[PLTimeReferenceSystem currentTime]
  -[PLTimeReferenceSystem timeZoneChangedNotificationReceived:]
  -[PLTimeReferenceSystem registerForTimeZoneChangedNotification]
  -[PLTimeReferenceSystem dealloc]


PLArchiveManager : NSObject <PLArchiveJobManager>
 @property  double interval
 @property  double mustRunInterval
 @property  double EPSQLVacuumInterval
 @property  double PLSQLDBDuration
 @property  double EPSQLDBDuration
 @property  double archiveRetention
 @property  NSMutableArray *archiveJobs
 @property  BOOL interrupted
 @property  NSMutableArray *notificationBlocks
 @property  NSDate *lastEPSQLVacuumDate
 @property  BOOL monotonicResetOccurred
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLArchiveManager sharedInstance]
  +[PLArchiveManager systemTimeChangedByOffset:]
  +[PLArchiveManager archiveEntriesWithComparisons:]
  +[PLArchiveManager lastArchivePath]
  +[PLArchiveManager archiveEntriesFinished]
  +[PLArchiveManager workQueue]
  +[PLArchiveManager allArchivePaths]
  +[PLArchiveManager storageQueue]
  +[PLArchiveManager archiveEntriesUnfinished]

  // instance methods
  -[PLArchiveManager setInterval:]
  -[PLArchiveManager isInterrupted]
  -[PLArchiveManager disable]
  -[PLArchiveManager interval]
  -[PLArchiveManager getArchivingCriteria]
  -[PLArchiveManager handleFailure:forArchiveEntry:]
  -[PLArchiveManager migrateArchive:]
  -[PLArchiveManager cleanup]
  -[PLArchiveManager interrupted]
  -[PLArchiveManager setEPSQLDBDuration:]
  -[PLArchiveManager .cxx_destruct]
  -[PLArchiveManager migrate]
  -[PLArchiveManager archiveRetention]
  -[PLArchiveManager scheduleArchiveJobs]
  -[PLArchiveManager setLastEPSQLVacuumDate:]
  -[PLArchiveManager trimExtendedPersistenceLog]
  -[PLArchiveManager setArchiveJobs:]
  -[PLArchiveManager enabled]
  -[PLArchiveManager notificationBlocks]
  -[PLArchiveManager deprecateTables]
  -[PLArchiveManager setMonotonicResetOccurred:]
  -[PLArchiveManager init]
  -[PLArchiveManager enable]
  -[PLArchiveManager registerForArchivingNotificationUsingBlock:]
  -[PLArchiveManager runActivityWithLastCompletedDate:]
  -[PLArchiveManager setArchiveRetention:]
  -[PLArchiveManager setNotificationBlocks:]
  -[PLArchiveManager EPSQLDBDuration]
  -[PLArchiveManager recover]
  -[PLArchiveManager setMustRunInterval:]
  -[PLArchiveManager monotonicResetOccurred]
  -[PLArchiveManager setEPSQLVacuumInterval:]
  -[PLArchiveManager PLSQLDBDuration]
  -[PLArchiveManager runInitialActivity]
  -[PLArchiveManager mustRunInterval]
  -[PLArchiveManager setPLSQLDBDuration:]
  -[PLArchiveManager EPSQLVacuumInterval]
  -[PLArchiveManager runArchiveJobs]
  -[PLArchiveManager eliglibleToVacuumEPSQLForDate:]
  -[PLArchiveManager dealloc]
  -[PLArchiveManager setInterrupted:]
  -[PLArchiveManager lastEPSQLVacuumDate]
  -[PLArchiveManager setEnabled:]
  -[PLArchiveManager archiveJobs]


PLRapidController : NSObject
 @property  long long stage
 @property  double samplingPercentage
 @property  NSString *taskingRequestReason
 @property  NSDate *logCreationStartDate
 @property  NSDate *logCreationEndDate
 @property  NSDate *logCreationResumeDate
 @property  NSString *mdLogFilePath
 @property  NSString *mdLogCompressedFilePath
 @property  NSString *mssFilePath
 @property  NSString *mssCompressedFilePath
 @property  NSString *failureReason
 @property  DRConfigMonitor *taskingMonitor
 @property  NSString *configUUID

  // class methods
  +[PLRapidController sharedInstance]
  +[PLRapidController cleanup]
  +[PLRapidController dataCollectionCriterion]
  +[PLRapidController finishActivity:withStatus:]
  +[PLRapidController deferActivity:]
  +[PLRapidController diagnosticLogSubmissionEnabled]
  +[PLRapidController randomBoolWithYesPercentage:]
  +[PLRapidController dropTablesFromDB:excludingSet:]
  +[PLRapidController dropDataFromDB:withConfig:]
  +[PLRapidController trimConditionsForTables:trimDate:]
  +[PLRapidController offsetTimestampsInDB:withConfig:withBaseTimestamp:]
  +[PLRapidController roundDataInDB:withConfig:]
  +[PLRapidController allTablesInDB:]
  +[PLRapidController hangTypeFromStr:]

  // instance methods
  -[PLRapidController setFailureReason:]
  -[PLRapidController handleDRConfigUpdate:error:]
  -[PLRapidController configFromMonitor:]
  -[PLRapidController setTaskingMonitor:]
  -[PLRapidController .cxx_destruct]
  -[PLRapidController setupConnection]
  -[PLRapidController copyDB]
  -[PLRapidController init]
  -[PLRapidController setupDRTasking]
  -[PLRapidController contextDictionary]
  -[PLRapidController stopDRTasking]
  -[PLRapidController taskingMonitor]
  -[PLRapidController setStage:]
  -[PLRapidController handleXPCActivityCallback:]
  -[PLRapidController failureReason]
  -[PLRapidController stage]
  -[PLRapidController registerDataCollectionActivity]
  -[PLRapidController configUUID]
  -[PLRapidController setSamplingPercentage:]
  -[PLRapidController samplingPercentage]
  -[PLRapidController setConfigUUID:]
  -[PLRapidController setTaskingRequestReason:]
  -[PLRapidController logCreationStartDate]
  -[PLRapidController logCreationResumeDate]
  -[PLRapidController initializeSamplingPercentage]
  -[PLRapidController initializeTaskingParams]
  -[PLRapidController logToCADataUploadState:]
  -[PLRapidController shouldDoRapidCollection]
  -[PLRapidController setLogCreationStartDate]
  -[PLRapidController prepareMicroDiagnosticLog:shouldDefer:]
  -[PLRapidController persistActivityState]
  -[PLRapidController prepareMSSLog]
  -[PLRapidController setLogCreationEndDate:]
  -[PLRapidController logCreationEndDate]
  -[PLRapidController logToCALogGenerationStats]
  -[PLRapidController resetActivity]
  -[PLRapidController uploadLog]
  -[PLRapidController setMDLogFilePath]
  -[PLRapidController setMDLogCompressedFilePath]
  -[PLRapidController pruneDB:withConfig:]
  -[PLRapidController logSignpostDataToDB:]
  -[PLRapidController trimAndFilterDB:withConfig:]
  -[PLRapidController packageDB:]
  -[PLRapidController mdLogCompressedFilePath]
  -[PLRapidController mdLogFilePath]
  -[PLRapidController setLogCreationResumeDate:]
  -[PLRapidController setLogCreationStartDate:]
  -[PLRapidController setMdLogFilePath:]
  -[PLRapidController setMdLogCompressedFilePath:]
  -[PLRapidController logHangSignposts:toDB:]
  -[PLRapidController createHangTableInDB:]
  -[PLRapidController setMSSFilePath]
  -[PLRapidController setMSSCompressedFilePath]
  -[PLRapidController mssFilePath]
  -[PLRapidController mssCompressedFilePath]
  -[PLRapidController setMssFilePath:]
  -[PLRapidController setMssCompressedFilePath:]
  -[PLRapidController taskingRequestReason]
  -[PLRapidController addMDLogContext:]
  -[PLRapidController addMSSContext:]
  -[PLRapidController rejectTaskingConfig:]
  -[PLRapidController completeTaskingConfig:]


PLSubmissions : NSObject
 @property  PLSQLiteConnection *connection
 @property  NSString *request
 @property  NSString *filterQuery
 @property  NSString *onDemandTasking
 @property  NSNumber *capValue
 @property  DRConfigMonitor *taskingMonitor
 @property  PLStorageOperator *storageOperator
 @property  BOOL xpcActivityStarted
 @property  NSMutableArray *submissionQueue
 @property  double lastXPCActivityTimestamp
 @property  double xpcActivityDelay
 @property  BOOL taskingStarted

  // class methods
  +[PLSubmissions sharedInstance]

  // instance methods
  -[PLSubmissions removeFileAtURL:]
  -[PLSubmissions generateCKRecordDictionaryWithRecord:]
  -[PLSubmissions setRequest:]
  -[PLSubmissions setSubmissionQueue:]
  -[PLSubmissions setStorageOperator:]
  -[PLSubmissions emitBlobVerifiedEvent:]
  -[PLSubmissions stopWatchdogForSubmissionActivity:]
  -[PLSubmissions submissionQueue]
  -[PLSubmissions setCapValue:]
  -[PLSubmissions emitCollisionEvent:]
  -[PLSubmissions handleDRConfigUpdate:error:]
  -[PLSubmissions removeFileAtPath:]
  -[PLSubmissions configFromMonitor:]
  -[PLSubmissions setTaskingMonitor:]
  -[PLSubmissions rejectTaskingDRConfig]
  -[PLSubmissions emitBlobDetectedEvent:]
  -[PLSubmissions logTaskingStatus:withAction:]
  -[PLSubmissions logTaskingTablesTurnedOn:]
  -[PLSubmissions taskingStarted]
  -[PLSubmissions .cxx_destruct]
  -[PLSubmissions sendSubmissionIssueSignature:]
  -[PLSubmissions taskingModeSafeguard]
  -[PLSubmissions taskingBlobDRExists]
  -[PLSubmissions capValue]
  -[PLSubmissions setConnection:]
  -[PLSubmissions logSubmissionStateToAnalytics:]
  -[PLSubmissions submitReasonForToday]
  -[PLSubmissions xpcActivityStarted]
  -[PLSubmissions init]
  -[PLSubmissions disableHangtracer]
  -[PLSubmissions attemptToUnregisterUploadSchedulingActivity]
  -[PLSubmissions deferXPCActivity:]
  -[PLSubmissions internalSubmissionBehavior]
  -[PLSubmissions logTaskingStatus:withAction:withTables:]
  -[PLSubmissions connection]
  -[PLSubmissions persistSubmissionInfo:]
  -[PLSubmissions submitRecord:withActivity:]
  -[PLSubmissions request]
  -[PLSubmissions taskingModeSetup]
  -[PLSubmissions setupDRTasking]
  -[PLSubmissions stopDRTasking]
  -[PLSubmissions taskingMonitor]
  -[PLSubmissions generateOTASubmissionAndSendTaskingEndSubmission:]
  -[PLSubmissions fileCleanupWithRecord:]
  -[PLSubmissions logOTAStatus:]
  -[PLSubmissions storageOperator]
  -[PLSubmissions finishXPCActivity:]
  -[PLSubmissions checkTaskingCompletionStatus]
  -[PLSubmissions prepareAndEnqueueSubmissionFilesWithConfig:]
  -[PLSubmissions workQueue]
  -[PLSubmissions filterQuery]
  -[PLSubmissions lastXPCActivityTimestamp]
  -[PLSubmissions xpcActivityDelay]
  -[PLSubmissions initSubmissionQueue]
  -[PLSubmissions setFilterQuery:]
  -[PLSubmissions createWatchdogForSubmissionActivity:]
  -[PLSubmissions enqueueFileForUpload:]
  -[PLSubmissions generatePLLSubmissionWithPayload:]
  -[PLSubmissions generateMSSSubmissionWithPayload:]
  -[PLSubmissions taskingCleanup]
  -[PLSubmissions getLastBatteryTimestampSystem]
  -[PLSubmissions onDemandTasking]
  -[PLSubmissions handleXPCActivityCallback:]
  -[PLSubmissions enableHangtracer]
  -[PLSubmissions setXpcActivityStarted:]
  -[PLSubmissions cleanupTemporarySubmissionFilesForTag:]
  -[PLSubmissions enqueueSubmissionRecord:]
  -[PLSubmissions setXpcActivityDelay:]
  -[PLSubmissions setLastXPCActivityTimestamp:]
  -[PLSubmissions submitRecordToDiagnosticPipeline:withConfig:]
  -[PLSubmissions clearTaskingDRConfig]
  -[PLSubmissions registerUploadSchedulingActivity]
  -[PLSubmissions getCurrentDRConfig]
  -[PLSubmissions taskingBlobLegacyExists]
  -[PLSubmissions setOnDemandTasking:]


PLSubmissionRecord : NSObject <NSSecureCoding>
 @property  NSString *tagUUID
 @property  NSUUID *configUUID
 @property  NSDate *configDateApplied
 @property  NSDate *configDateReceived
 @property  NSString *filePath
 @property  NSString *ckFileDirPath
 @property  NSString *daFileDirPath
 @property  NSDictionary *tagConfig
 @property  BOOL inSubmission

  // class methods
  +[PLSubmissionRecord supportsSecureCoding]
  +[PLSubmissionRecord getDASubmissionDirPathForTag:]
  +[PLSubmissionRecord getCKSubmissionDirPathForTag:]

  // instance methods
  -[PLSubmissionRecord filePath]
  -[PLSubmissionRecord initWithCoder:]
  -[PLSubmissionRecord .cxx_destruct]
  -[PLSubmissionRecord setFilePath:]
  -[PLSubmissionRecord tagUUID]
  -[PLSubmissionRecord encodeWithCoder:]
  -[PLSubmissionRecord configUUID]
  -[PLSubmissionRecord configDateReceived]
  -[PLSubmissionRecord configDateApplied]
  -[PLSubmissionRecord initWithCKFilePath:tagUUID:tagConfig:configUUID:configDateReceived:configDateApplied:]
  -[PLSubmissionRecord emitAttemptEvent]
  -[PLSubmissionRecord inSubmission]
  -[PLSubmissionRecord setInSubmission:]
  -[PLSubmissionRecord tagConfig]
  -[PLSubmissionRecord emitSuccessEvent]
  -[PLSubmissionRecord daFileDirPath]
  -[PLSubmissionRecord ckFileDirPath]
  -[PLSubmissionRecord setTagUUID:]
  -[PLSubmissionRecord setTagConfig:]
  -[PLSubmissionRecord setDaFileDirPath:]
  -[PLSubmissionRecord setCkFileDirPath:]


PLActivity : NSObject <PLActivityCriterionDelegate>
 @property  long long state
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? activityBlock
 @property  @? interruptBlock
 @property  NSArray *criteria
 @property  PLActivityCriterion *mustRunCriterion
 @property  PLEntry *activityEntry
 @property  NSDate *lastCompletedDate
 @property  NSString *identifier
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLActivity activityStatesEntryKey]
  +[PLActivity workQueue]
  +[PLActivity activityEntryKey]

  // instance methods
  -[PLActivity disable]
  -[PLActivity setCriteria:]
  -[PLActivity setMustRunCriterion:]
  -[PLActivity syncWithDB]
  -[PLActivity lastCompletedDate]
  -[PLActivity didChangeCriterion:]
  -[PLActivity .cxx_destruct]
  -[PLActivity criteria]
  -[PLActivity setState:]
  -[PLActivity enabled]
  -[PLActivity activityBlock]
  -[PLActivity interruptActivity]
  -[PLActivity enable]
  -[PLActivity setQueue:]
  -[PLActivity runActivity]
  -[PLActivity identifier]
  -[PLActivity state]
  -[PLActivity setLastCompletedDate:]
  -[PLActivity setInterruptBlock:]
  -[PLActivity initWithIdentifier:withCriteria:withMustRunCriterion:withQueue:withInterruptBlock:withActivityBlock:]
  -[PLActivity logEntry]
  -[PLActivity setActivityEntry:]
  -[PLActivity allCriteriaSatisfied]
  -[PLActivity queue]
  -[PLActivity enumerateCriteriaWithBlock:]
  -[PLActivity mustRunCriterionString]
  -[PLActivity criteriaString]
  -[PLActivity interruptBlock]
  -[PLActivity setEnabled:]
  -[PLActivity mustRunCriterion]
  -[PLActivity setActivityBlock:]
  -[PLActivity activityEntry]
  -[PLActivity mustRunCriterionSatisfied]


PLSQLiteConnection : NSObject
 @property  ^{sqlite3=} dbConnection
 @property  NSObject<OS_dispatch_semaphore> *dbSem
 @property  NSMutableDictionary *preparedStatements
 @property  NSMutableDictionary *preparedUpdateStatements
 @property  NSMutableDictionary *preparedDynamicStatements
 @property  int transactionInProgress
 @property  NSString *transactionLock
 @property  NSString *cachedClassName
 @property  int entryCacheStorageSize
 @property  long long cacheSize
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *filePath

  // class methods
  +[PLSQLiteConnection masterTableForTable:andType:]
  +[PLSQLiteConnection periodicIntegrityCheckInterval]
  +[PLSQLiteConnection removeDBAtFilePath:]
  +[PLSQLiteConnection sharedSQLiteConnection]
  +[PLSQLiteConnection tableHasTimestampColumnSem]
  +[PLSQLiteConnection versionForTable:]
  +[PLSQLiteConnection tableHasTimestampColumn]

  // instance methods
  -[PLSQLiteConnection filePath]
  -[PLSQLiteConnection cacheSize]
  -[PLSQLiteConnection setCacheSize:]
  -[PLSQLiteConnection vacuum]
  -[PLSQLiteConnection sqlFormatedColumnNamesForTable:withQuoteChar:]
  -[PLSQLiteConnection copyDatabaseToPath:fromDate:toDate:withTableFilters:vacuumDB:]
  -[PLSQLiteConnection openCurrentFileWithCacheSize:]
  -[PLSQLiteConnection cachedClassName]
  -[PLSQLiteConnection updateEntry:]
  -[PLSQLiteConnection writeEntry:]
  -[PLSQLiteConnection beginTransaction]
  -[PLSQLiteConnection isIncrementalVacuumEnabled]
  -[PLSQLiteConnection setCachedClassName:]
  -[PLSQLiteConnection trimAllTablesFromDate:toDate:withTableFilters:]
  -[PLSQLiteConnection openCurrentFileWithCacheSize:withFlags:]
  -[PLSQLiteConnection tableExistsForTableName:]
  -[PLSQLiteConnection moveToPath:]
  -[PLSQLiteConnection .cxx_destruct]
  -[PLSQLiteConnection loadDynamicValuesIntoEntry:]
  -[PLSQLiteConnection tableHasTimestampColumn:]
  -[PLSQLiteConnection dropTable:]
  -[PLSQLiteConnection writeArrayEntries:]
  -[PLSQLiteConnection createCoveringIndexOnTable:forColumns:]
  -[PLSQLiteConnection setDbConnection:]
  -[PLSQLiteConnection setPreparedStatements:]
  -[PLSQLiteConnection dbConnection]
  -[PLSQLiteConnection writeDynamicEntries:]
  -[PLSQLiteConnection trimTable:fromDate:withFilter:withTrimLimit:]
  -[PLSQLiteConnection isTransactionInProgress]
  -[PLSQLiteConnection scheduleIntegrityCheck]
  -[PLSQLiteConnection passesIntegrityCheck]
  -[PLSQLiteConnection endTransaction]
  -[PLSQLiteConnection dropTables:]
  -[PLSQLiteConnection setFilePath:]
  -[PLSQLiteConnection enumerateAllTablesWithBlock:]
  -[PLSQLiteConnection checkEmptyMasterTable:]
  -[PLSQLiteConnection copyDatabaseToPath:fromDate:toDate:withTableFilters:vacuumDB:withCacheSize:]
  -[PLSQLiteConnection initWithFilePath:withCacheSize:withFlags:]
  -[PLSQLiteConnection printDBStatusString]
  -[PLSQLiteConnection init]
  -[PLSQLiteConnection deleteAllEntriesForKey:withFilters:]
  -[PLSQLiteConnection createTableName:withColumns:]
  -[PLSQLiteConnection performStatement:]
  -[PLSQLiteConnection setPreparedDynamicStatements:]
  -[PLSQLiteConnection copyDatabaseToPath:]
  -[PLSQLiteConnection openCurrentFile]
  -[PLSQLiteConnection schemaVersionForTable:]
  -[PLSQLiteConnection clearTableHasTimestampColumnCache]
  -[PLSQLiteConnection displaySchema:]
  -[PLSQLiteConnection setAllNullValuesForEntryKey:forKey:toValue:withFilters:]
  -[PLSQLiteConnection fullVacuum]
  -[PLSQLiteConnection preparedUpdateStatements]
  -[PLSQLiteConnection versionHashForTable:]
  -[PLSQLiteConnection removeTableNameFromMergeDB:]
  -[PLSQLiteConnection setDbSem:]
  -[PLSQLiteConnection removeIDIndexes]
  -[PLSQLiteConnection setEntryCacheStorageSize:]
  -[PLSQLiteConnection performQuery:returnValue:returnResult:]
  -[PLSQLiteConnection trimAllTablesFromDate:toDate:]
  -[PLSQLiteConnection entriesForKey:withQuery:]
  -[PLSQLiteConnection removeEmptyOldTables]
  -[PLSQLiteConnection hashEntryKeyKeys:]
  -[PLSQLiteConnection getIntegrityCheckCriteria]
  -[PLSQLiteConnection workQueue]
  -[PLSQLiteConnection transactionInProgress]
  -[PLSQLiteConnection setPreparedUpdateStatements:]
  -[PLSQLiteConnection setJournalMode:]
  -[PLSQLiteConnection tableInfo:]
  -[PLSQLiteConnection initWithFilePath:withFlags:]
  -[PLSQLiteConnection transactionLock]
  -[PLSQLiteConnection deleteDynamicEntriesForKey:withRowID:]
  -[PLSQLiteConnection deleteArrayEntriesForKey:withRowID:]
  -[PLSQLiteConnection performQuery:]
  -[PLSQLiteConnection deleteEntryForKey:withRowID:]
  -[PLSQLiteConnection bindEntry:toPreparedStatement:atBindPosition:]
  -[PLSQLiteConnection runTrimQuery:]
  -[PLSQLiteConnection setTransactionInProgress:]
  -[PLSQLiteConnection dbSem]
  -[PLSQLiteConnection preparedStatements]
  -[PLSQLiteConnection commonInitProcessWithFilePath:withCacheSize:]
  -[PLSQLiteConnection dealloc]
  -[PLSQLiteConnection copyDatabaseToPath:fromDate:toDate:]
  -[PLSQLiteConnection setTransactionLock:]
  -[PLSQLiteConnection entryCacheStorageSize]
  -[PLSQLiteConnection preparedDynamicStatements]
  -[PLSQLiteConnection createIndexOnTable:forColumn:]
  -[PLSQLiteConnection setVersionHash:forTableName:]
  -[PLSQLiteConnection buildColumnInsert:andValueInsert:forEntry:]
  -[PLSQLiteConnection initWithFilePath:withCacheSize:]
  -[PLSQLiteConnection setSchemaVersion:forTableName:]
  -[PLSQLiteConnection initWithFilePath:]
  -[PLSQLiteConnection getCacheSpillValue]
  -[PLSQLiteConnection rowCountForTable:]
  -[PLSQLiteConnection sqlFormatedColumnNamesForTableInsert:]
  -[PLSQLiteConnection closeConnection]
  -[PLSQLiteConnection sqlFormatedColumnNamesForTableSelect:]
  -[PLSQLiteConnection entriesForKey:withProperties:]
  -[PLSQLiteConnection loadArrayValuesIntoEntry:]


PPTStorage : NSObject
  // instance methods
  -[PPTStorage startStorage]
  -[PPTStorage init]
  -[PPTStorage setupStorageVersions]
  -[PPTStorage setupStorageForEntryKey:]


PLNetworkUtilities : NSObject
  // class methods
  +[PLNetworkUtilities getIPAddress:withAddressFamily:]
  +[PLNetworkUtilities getNetworkWakeInfo:]
  +[PLNetworkUtilities getUnattributedWakeInfo:]
  +[PLNetworkUtilities getIPSecWakeInfo]
  +[PLNetworkUtilities getNormalizedIPV6Address:]
  +[PLNetworkUtilities tcpParse:offset:]
  +[PLNetworkUtilities udpParse:offset:]
  +[PLNetworkUtilities isESPPacket:offset:]
  +[PLNetworkUtilities getSeqNoAndSPI:offset:]
  +[PLNetworkUtilities sockaddrToNSDictionary:]
  +[PLNetworkUtilities interfaceNameForIndex:]
  +[PLNetworkUtilities stringFromTrafficClass:]
  +[PLNetworkUtilities decodeEtherType:]
  +[PLNetworkUtilities handlePowerWakeEvent:]
  +[PLNetworkUtilities handleIPSecEvent:]
  +[PLNetworkUtilities decodeIPPacket:encryptedPath:]


PLXPCListenerOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  NSDictionary *registration
 @property  @? operatorBlock

  // instance methods
  -[PLXPCListenerOperatorComposition setOperator:]
  -[PLXPCListenerOperatorComposition operator]
  -[PLXPCListenerOperatorComposition operatorBlock]
  -[PLXPCListenerOperatorComposition setOperatorBlock:]
  -[PLXPCListenerOperatorComposition registration]
  -[PLXPCListenerOperatorComposition .cxx_destruct]
  -[PLXPCListenerOperatorComposition initWithOperator:withRegistration:withBlock:]
  -[PLXPCListenerOperatorComposition messageRecievedForClientID:withProcessName:withKey:withPayload:]


PLActivityCriterionTime : PLActivityCriterion
 @property  double interval
 @property  double rescheduleDelay
 @property  PLMonotonicTimer *timer

  // class methods
  +[PLActivityCriterionTime timeCriterionWithInterval:]
  +[PLActivityCriterionTime minTimeInterval]

  // instance methods
  -[PLActivityCriterionTime setInterval:]
  -[PLActivityCriterionTime didDisableActivity:]
  -[PLActivityCriterionTime didEnableActivity:]
  -[PLActivityCriterionTime interval]
  -[PLActivityCriterionTime didCompleteActivity:]
  -[PLActivityCriterionTime didInterruptActivity:]
  -[PLActivityCriterionTime .cxx_destruct]
  -[PLActivityCriterionTime timer]
  -[PLActivityCriterionTime rescheduleDelay]
  -[PLActivityCriterionTime setTimer:]
  -[PLActivityCriterionTime dealloc]
  -[PLActivityCriterionTime initWithInterval:]
  -[PLActivityCriterionTime setRescheduleDelay:]


PLTimeReferenceDynamic : PLTimeReference
 @property  NSMutableArray *offsetHistory
 @property  int offsetHistoryHead
 @property  PLTimer *periodicCurrentTime
 @property  NSMutableDictionary *timeChangeBlocks
 @property  double tooFarInFutureDistance
 @property  double tooFarInPastDistance
 @property  NSDate *lastQueryTime

  // class methods
  +[PLTimeReferenceDynamic nearestDistanceFromDate:toRegionWithStartDate:andEndDate:]

  // instance methods
  -[PLTimeReferenceDynamic initWithTimeManager:entryDefinitionKey:timeReferenceType:]
  -[PLTimeReferenceDynamic removeTimeOffsetFromReferenceTime:]
  -[PLTimeReferenceDynamic tooFarInPastDistance]
  -[PLTimeReferenceDynamic unregisterForTimeChangedCallbackWithIdentifier:]
  -[PLTimeReferenceDynamic .cxx_destruct]
  -[PLTimeReferenceDynamic registerForTimeChangedNotification]
  -[PLTimeReferenceDynamic periodicCurrentTime]
  -[PLTimeReferenceDynamic registerForClockSetNotification]
  -[PLTimeReferenceDynamic newOffsetEntryWithCurrentTime]
  -[PLTimeReferenceDynamic offsetHistoryHead]
  -[PLTimeReferenceDynamic initializeOffsetWithEntries:]
  -[PLTimeReferenceDynamic lastQueryTime]
  -[PLTimeReferenceDynamic checkForTimeChangeWithCurrentTime:]
  -[PLTimeReferenceDynamic setTooFarInPastDistance:]
  -[PLTimeReferenceDynamic shouldQueryCurrentTime]
  -[PLTimeReferenceDynamic tooFarInFutureDistance]
  -[PLTimeReferenceDynamic notifyTimeChange:]
  -[PLTimeReferenceDynamic setOffsetHistoryHead:]
  -[PLTimeReferenceDynamic setTimeChangeBlocks:]
  -[PLTimeReferenceDynamic setOffset:]
  -[PLTimeReferenceDynamic setOffsetHistory:]
  -[PLTimeReferenceDynamic offsetHistory]
  -[PLTimeReferenceDynamic initializeOffsetHistoryWithEntries:]
  -[PLTimeReferenceDynamic setPeriodicCurrentTime:]
  -[PLTimeReferenceDynamic timeChangeBlocks]
  -[PLTimeReferenceDynamic registerForTimeChangedCallbackWithIdentifier:usingBlock:]
  -[PLTimeReferenceDynamic setLastQueryTime:]
  -[PLTimeReferenceDynamic setTooFarInFutureDistance:]


PLEntry : NSObject <NSCopying>
 @property  NSMutableDictionary *dictionary
 @property  NSObject<OS_dispatch_semaphore> *sem
 @property  NSMutableArray *keys
 @property  NSMutableArray *values
 @property  BOOL hasDynamicKeys
 @property  BOOL hasArrayKeys
 @property  NSArray *definedKeys
 @property  NSArray *dynamicKeys
 @property  NSArray *arrayKeys
 @property  BOOL existsInDB
 @property  BOOL isErrorEntry
 @property  BOOL writeToDB
 @property  NSDictionary *entryDefinition
 @property  NSDate *entryDate
 @property  NSString *entryKey
 @property  id subEntryKey
 @property  long long entryID

  // class methods
  +[PLEntry load]
  +[PLEntry entryKey]
  +[PLEntry entryWithEntryKey:withData:]
  +[PLEntry registerEntry:]
  +[PLEntry classForEntryKey:]
  +[PLEntry summarizeAggregateEntries:withPrimaryKeys:]
  +[PLEntry entryWithEntryKey:withRawData:]
  +[PLEntry summarizeAggregateEntries:]

  // instance methods
  -[PLEntry setSem:]
  -[PLEntry keys]
  -[PLEntry objectForKey:]
  -[PLEntry serializedForJSON]
  -[PLEntry compare:options:]
  -[PLEntry sem]
  -[PLEntry setObject:forKey:]
  -[PLEntry setEntryKey:]
  -[PLEntry objectForKeyedSubscript:]
  -[PLEntry allValues]
  -[PLEntry .cxx_destruct]
  -[PLEntry setEntryDate:]
  -[PLEntry removeObjectForKey:]
  -[PLEntry serialized]
  -[PLEntry entryDate]
  -[PLEntry dictionary]
  -[PLEntry setObject:forKeyedSubscript:]
  -[PLEntry init]
  -[PLEntry entryKey]
  -[PLEntry setDictionary:]
  -[PLEntry initEntryWithRawData:]
  -[PLEntry entryID]
  -[PLEntry compare:]
  -[PLEntry copyWithZone:]
  -[PLEntry definitionForKey:]
  -[PLEntry initWithEntryKey:withRawData:]
  -[PLEntry initWithEntryKey:withDate:]
  -[PLEntry subEntryKey]
  -[PLEntry writeToDB]
  -[PLEntry setEntryID:]
  -[PLEntry existsInDB]
  -[PLEntry entryDefinition]
  -[PLEntry initWithEntryKey:withData:]
  -[PLEntry setObjectsFromRawData:]
  -[PLEntry initWithEntryKey:]
  -[PLEntry definedKeys]
  -[PLEntry formaterForKey:]
  -[PLEntry staticArraySizeForKey:]
  -[PLEntry hasDynamicKeys]
  -[PLEntry hasArrayKeys]
  -[PLEntry setExistsInDB:]
  -[PLEntry dynamicKeys]
  -[PLEntry arrayKeys]
  -[PLEntry initEntryWithData:]
  -[PLEntry initWithEntryDate:]
  -[PLEntry checkOverridesEntryDateWithNowDate:]
  -[PLEntry setObjectsFromData:]
  -[PLEntry setObjectsUsingMetricsFromData:]
  -[PLEntry unitForKey:]
  -[PLEntry descriptionRespectingAllowlist:]
  -[PLEntry hasAppIdentifierKeys]
  -[PLEntry setDynamicObjectsFromRawData:]
  -[PLEntry loadDynamicKeys]
  -[PLEntry isKeyDynamic:]
  -[PLEntry isKeyAggregateValue:]
  -[PLEntry keyValuePathForKey:]
  -[PLEntry filterEntryLogging]
  -[PLEntry isErrorEntry]
  -[PLEntry setIsErrorEntry:]
  -[PLEntry setWriteToDB:]
  -[PLEntry setEntryDefinition:]


PLValueUtilties : NSObject
  // class methods
  +[PLValueUtilties isNil:]
  +[PLValueUtilties resetTimestampFormaterTimezone]
  +[PLValueUtilties formattedStringForDate:]
  +[PLValueUtilties isFormater:validForObject:]
  +[PLValueUtilties formatterFromDataType:]
  +[PLValueUtilties compare:with:]


PLSubmissionFilePLL : PLSubmissionFile
  // instance methods
  -[PLSubmissionFilePLL submit]
  -[PLSubmissionFilePLL fileType]
  -[PLSubmissionFilePLL initWithConfig:]
  -[PLSubmissionFilePLL fileExtension]
  -[PLSubmissionFilePLL copyAndPrepareLog]
  -[PLSubmissionFilePLL generateSubmissionTagForCurrentLog]
  -[PLSubmissionFilePLL prepareDatabaseAtPath:]
  -[PLSubmissionFilePLL updateSubmissionTagWithConnection:]
  -[PLSubmissionFilePLL logSubmissionSizeToAnalytics:withUncompressedSize:]


PLSQLStatement : NSObject
 @property  NSObject<OS_dispatch_semaphore> *dbSem
 @property  ^{sqlite3=} dbConnection
 @property  ^{sqlite3_stmt=} statement
 @property  NSString *sqlQuery
 @property  BOOL isInsert
 @property  BOOL isDelete

  // instance methods
  -[PLSQLStatement statement]
  -[PLSQLStatement isDelete]
  -[PLSQLStatement setSqlQuery:]
  -[PLSQLStatement bindValue:withFormater:atPosition:]
  -[PLSQLStatement finalize]
  -[PLSQLStatement .cxx_destruct]
  -[PLSQLStatement setDbConnection:]
  -[PLSQLStatement dbConnection]
  -[PLSQLStatement reset]
  -[PLSQLStatement setDbSem:]
  -[PLSQLStatement perform]
  -[PLSQLStatement isInsert]
  -[PLSQLStatement dbSem]
  -[PLSQLStatement dealloc]
  -[PLSQLStatement initWithSQLQuery:forDatabase:withDBSem:result:]
  -[PLSQLStatement setStatement:]
  -[PLSQLStatement sqlQuery]


PLTimeReferenceKernel : PLTimeReference
 @property  NSDate *lastSystemTimeRecalibrated
 @property  NSDate *lastKernelTimeRecalibrated
 @property  BOOL rebootOccurred

  // instance methods
  -[PLTimeReferenceKernel resolution]
  -[PLTimeReferenceKernel .cxx_destruct]
  -[PLTimeReferenceKernel continuousTimeToAbsoluteNs:]
  -[PLTimeReferenceKernel rebootOccurred]
  -[PLTimeReferenceKernel initializeOffsetWithEntries:]
  -[PLTimeReferenceKernel lastSystemTimeRecalibrated]
  -[PLTimeReferenceKernel currentTime]
  -[PLTimeReferenceKernel setLastKernelTimeRecalibrated:]
  -[PLTimeReferenceKernel setLastSystemTimeRecalibrated:]
  -[PLTimeReferenceKernel getTimebaseInfo]
  -[PLTimeReferenceKernel setSystemReboot:]
  -[PLTimeReferenceKernel lastKernelTimeRecalibrated]
  -[PLTimeReferenceKernel setRebootOccurred:]


PLThreadStats : NSObject
 @property  NSDictionary *processThreadMap
 @property  double absoluteTimeFilter
 @property  unsigned long percentTimeFilter
 @property  NSDictionary *currentSnapshot

  // class methods
  +[PLThreadStats getThreadName:inProcess:isNamed:]

  // instance methods
  -[PLThreadStats .cxx_destruct]
  -[PLThreadStats currentSnapshot]
  -[PLThreadStats setCurrentSnapshot:]
  -[PLThreadStats setAbsoluteTimeFilter:]
  -[PLThreadStats setPercentTimeFilter:]
  -[PLThreadStats setProcessThreadMap:]
  -[PLThreadStats diffSnapshotWithNew:andOld:]
  -[PLThreadStats filterDiff:]
  -[PLThreadStats shouldIncludeThread:withTotalSystemTime:withTotalUserTime:]
  -[PLThreadStats shouldGatherStatsForProcessName:]
  -[PLThreadStats processThreadMap]
  -[PLThreadStats percentTimeFilter]
  -[PLThreadStats absoluteTimeFilter]
  -[PLThreadStats initWithTimeFilter:withPercentFilter:withProcessThreadMapping:withError:]
  -[PLThreadStats diffSinceLastSnapshot]


PLThreadInfo : NSObject
 @property  double systemTime
 @property  double userTime
 @property  unsigned long threadID
 @property  NSString *threadName
 @property  BOOL isNamed

  // instance methods
  -[PLThreadInfo threadID]
  -[PLThreadInfo .cxx_destruct]
  -[PLThreadInfo setThreadID:]
  -[PLThreadInfo isNamed]
  -[PLThreadInfo threadName]
  -[PLThreadInfo userTime]
  -[PLThreadInfo diffSinceBaseline:]
  -[PLThreadInfo systemTime]
  -[PLThreadInfo initWithThread:inProcess:]
  -[PLThreadInfo setThreadName:]
  -[PLThreadInfo setIsNamed:]
  -[PLThreadInfo setUserTime:]
  -[PLThreadInfo setSystemTime:]
  -[PLThreadInfo isEqualToThreadInfo:]


PLProcessInfo : NSObject
 @property  double totalSystemTime
 @property  double totalUserTime
 @property  int pid
 @property  NSString *processName
 @property  NSDictionary *threadNameToInfo

  // instance methods
  -[PLProcessInfo setPid:]
  -[PLProcessInfo .cxx_destruct]
  -[PLProcessInfo initWithProcessInfo:]
  -[PLProcessInfo processName]
  -[PLProcessInfo pid]
  -[PLProcessInfo setProcessName:]
  -[PLProcessInfo diffSinceBaseline:]
  -[PLProcessInfo threadNameToInfo]
  -[PLProcessInfo setThreadNameToInfo:]
  -[PLProcessInfo initWithName:andID:]
  -[PLProcessInfo populateCPUTime]
  -[PLProcessInfo totalUserTime]
  -[PLProcessInfo setTotalUserTime:]
  -[PLProcessInfo totalSystemTime]
  -[PLProcessInfo setTotalSystemTime:]
  -[PLProcessInfo isEqualToProcessInfo:]


PLAgent : PLOperator
  // class methods
  +[PLAgent load]

  // instance methods
  -[PLAgent init]
  -[PLAgent dealloc]


PLXPCRelay : NSObject
 @property  NSObject<OS_xpc_object> *xpcConnection
 @property  NSObject<OS_xpc_object> *relayConnection
 @property  NSObject<OS_xpc_object> *xpcCrashMoverConn
 @property  NSObject<OS_dispatch_queue> *crashMoverQueue
 @property  BOOL relayActive

  // class methods
  +[PLXPCRelay sharedInstance]

  // instance methods
  -[PLXPCRelay setXpcConnection:]
  -[PLXPCRelay xpcConnection]
  -[PLXPCRelay relayConnection]
  -[PLXPCRelay movePowerlogs]
  -[PLXPCRelay .cxx_destruct]
  -[PLXPCRelay startRelay]
  -[PLXPCRelay crashMoverQueue]
  -[PLXPCRelay init]
  -[PLXPCRelay handleCrashMoverConnection:]
  -[PLXPCRelay stopRelay]
  -[PLXPCRelay relayActive]
  -[PLXPCRelay setRelayConnection:]
  -[PLXPCRelay handlePeer:forEvent:]
  -[PLXPCRelay resetRelayConnection]
  -[PLXPCRelay setRelayActive:]
  -[PLXPCRelay isDebugEnabled]
  -[PLXPCRelay setCrashMoverQueue:]
  -[PLXPCRelay xpcCrashMoverConn]
  -[PLXPCRelay setXpcCrashMoverConn:]


PLSubmissionConfig : NSObject
 @property  double dice
 @property  NSString *taskingBuild
 @property  NSString *taskingPopulation
 @property  NSString *taskingDeviceModels
 @property  NSDictionary *taskingPercentage
 @property  BOOL isDRTasking
 @property  NSUUID *configUUID
 @property  NSDate *configDateReceived
 @property  NSDate *configDateApplied
 @property  NSString *request
 @property  NSString *ondemand
 @property  NSNumber *capSize
 @property  NSDictionary *taskingTables
 @property  NSDictionary *hashEntries
 @property  NSArray *removeEntries
 @property  NSArray *trimmingQueries
 @property  NSDictionary *taskingCondition
 @property  NSArray *taskingFiles
 @property  BOOL hasFileToSubmit
 @property  BOOL submitPLL
 @property  BOOL submitMSS
 @property  BOOL submitSP
 @property  BOOL submitBDC
 @property  unsigned long submittedFilesMask
 @property  BOOL enableDPUpload
 @property  BOOL signpostDisable
 @property  NSDictionary *signpostAllowlist
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  NSDate *lastBatteryTimestampSystem
 @property  NSNumber *cacheSize
 @property  short submitReasonType
 @property  NSString *tagUUID
 @property  BOOL seed
 @property  BOOL internal
 @property  NSArray *builds
 @property  NSString *deviceModel
 @property  NSString *filePath
 @property  NSDictionary *ckTagConfig
 @property  NSString *blobFailureReason

  // class methods
  +[PLSubmissionConfig internalSubmissionBehavior]
  +[PLSubmissionConfig getDateMarkerFromSystemDate:]
  +[PLSubmissionConfig clearTaskingDefaults]
  +[PLSubmissionConfig submitTaskingDefaultsCheckStateToCA:]

  // instance methods
  -[PLSubmissionConfig deviceModel]
  -[PLSubmissionConfig internal]
  -[PLSubmissionConfig filePath]
  -[PLSubmissionConfig cacheSize]
  -[PLSubmissionConfig setCacheSize:]
  -[PLSubmissionConfig setRequest:]
  -[PLSubmissionConfig seed]
  -[PLSubmissionConfig setDeviceModel:]
  -[PLSubmissionConfig dice]
  -[PLSubmissionConfig setEndDate:]
  -[PLSubmissionConfig builds]
  -[PLSubmissionConfig .cxx_destruct]
  -[PLSubmissionConfig setStartDate:]
  -[PLSubmissionConfig setSeed:]
  -[PLSubmissionConfig setFilePath:]
  -[PLSubmissionConfig request]
  -[PLSubmissionConfig tagUUID]
  -[PLSubmissionConfig capSize]
  -[PLSubmissionConfig setBuilds:]
  -[PLSubmissionConfig setInternal:]
  -[PLSubmissionConfig startDate]
  -[PLSubmissionConfig submitSP]
  -[PLSubmissionConfig setDice:]
  -[PLSubmissionConfig ondemand]
  -[PLSubmissionConfig endDate]
  -[PLSubmissionConfig initWithPayload:]
  -[PLSubmissionConfig getSubmitReasonTypeToStorageEventOTAType]
  -[PLSubmissionConfig submitReasonType]
  -[PLSubmissionConfig getSubmitReasonTypeToAggdKey]
  -[PLSubmissionConfig getDateMarker]
  -[PLSubmissionConfig getSubmitReasonTypeToReasonLog]
  -[PLSubmissionConfig signpostDisable]
  -[PLSubmissionConfig signpostAllowlist]
  -[PLSubmissionConfig getDateMarkerLegacy]
  -[PLSubmissionConfig submittedFilesMask]
  -[PLSubmissionConfig setCkTagConfig:]
  -[PLSubmissionConfig ckTagConfig]
  -[PLSubmissionConfig configUUID]
  -[PLSubmissionConfig configDateReceived]
  -[PLSubmissionConfig configDateApplied]
  -[PLSubmissionConfig submitBDC]
  -[PLSubmissionConfig setConfigUUID:]
  -[PLSubmissionConfig initWithReasonType:DRConfig:]
  -[PLSubmissionConfig setLastBatteryTimestampSystem:]
  -[PLSubmissionConfig hasFileToSubmit]
  -[PLSubmissionConfig submitPLL]
  -[PLSubmissionConfig submitMSS]
  -[PLSubmissionConfig submitFileStatsToAnalytics]
  -[PLSubmissionConfig setSubmitReasonType:]
  -[PLSubmissionConfig shouldStartTaskingToday]
  -[PLSubmissionConfig enableDPUpload]
  -[PLSubmissionConfig isDRTasking]
  -[PLSubmissionConfig blobFailureReason]
  -[PLSubmissionConfig setTagUUID:]
  -[PLSubmissionConfig getSubmitReasonTypeToFlushReason]
  -[PLSubmissionConfig removeEntries]
  -[PLSubmissionConfig hashEntries]
  -[PLSubmissionConfig trimmingQueries]
  -[PLSubmissionConfig setEnableDPUpload:]
  -[PLSubmissionConfig setIsDRTasking:]
  -[PLSubmissionConfig setConfigDateReceived:]
  -[PLSubmissionConfig readTaskingPayloadOverride:]
  -[PLSubmissionConfig readTaskingDefaults]
  -[PLSubmissionConfig setConfigDateApplied:]
  -[PLSubmissionConfig initTagInfoForReasonType:withStartDate:withEndDate:]
  -[PLSubmissionConfig setOndemand:]
  -[PLSubmissionConfig setCapSize:]
  -[PLSubmissionConfig setTaskingTables:]
  -[PLSubmissionConfig taskingTables]
  -[PLSubmissionConfig setRemoveEntries:]
  -[PLSubmissionConfig setHashEntries:]
  -[PLSubmissionConfig setTrimmingQueries:]
  -[PLSubmissionConfig setTaskingCondition:]
  -[PLSubmissionConfig setTaskingBuild:]
  -[PLSubmissionConfig setTaskingDeviceModels:]
  -[PLSubmissionConfig setTaskingPopulation:]
  -[PLSubmissionConfig setTaskingPercentage:]
  -[PLSubmissionConfig setSignpostAllowlist:]
  -[PLSubmissionConfig setSignpostDisable:]
  -[PLSubmissionConfig setTaskingFiles:]
  -[PLSubmissionConfig taskingFiles]
  -[PLSubmissionConfig initializeFilesToBeSubmitted]
  -[PLSubmissionConfig lastBatteryTimestampSystem]
  -[PLSubmissionConfig isValidSubmissionFilesMask]
  -[PLSubmissionConfig taskingCondition]
  -[PLSubmissionConfig setBlobFailureReason:]
  -[PLSubmissionConfig taskingBuild]
  -[PLSubmissionConfig taskingPopulation]
  -[PLSubmissionConfig taskingDeviceModels]
  -[PLSubmissionConfig taskingPercentage]


OperatorTask : NSObject
 @property  NSObject<OS_dispatch_queue> *operatorQueue
 @property  @? operatorBlock

  // instance methods
  -[OperatorTask operatorBlock]
  -[OperatorTask setOperatorBlock:]
  -[OperatorTask .cxx_destruct]
  -[OperatorTask initWithQueue:withBlock:]
  -[OperatorTask operatorQueue]
  -[OperatorTask setOperatorQueue:]


PLStateTrackingComposition : NSObject
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *executeBlockCache
 @property  NSMutableArray *stateChangeNotifications
 @property  unsigned long stateChangeMask
 @property  NSDate *systemStateChangeTime
 @property  NSMutableDictionary *stateIDToStateMap
 @property  NSMutableDictionary *entryKeyToStateMap

  // class methods
  +[PLStateTrackingComposition sharedInstance]
  +[PLStateTrackingComposition registerState:]

  // instance methods
  -[PLStateTrackingComposition setWorkQueue:]
  -[PLStateTrackingComposition .cxx_destruct]
  -[PLStateTrackingComposition stateChanged:]
  -[PLStateTrackingComposition init]
  -[PLStateTrackingComposition workQueue]
  -[PLStateTrackingComposition initializeState]
  -[PLStateTrackingComposition registerForListeners]
  -[PLStateTrackingComposition stateIDToStateMap]
  -[PLStateTrackingComposition entryKeyToStateMap]
  -[PLStateTrackingComposition handleStateChange:]
  -[PLStateTrackingComposition stateChangeNotifications]
  -[PLStateTrackingComposition executeBlockCache]
  -[PLStateTrackingComposition stateChangeMask]
  -[PLStateTrackingComposition setStateChangeMask:]
  -[PLStateTrackingComposition systemStateChangeTime]
  -[PLStateTrackingComposition setSystemStateChangeTime:]
  -[PLStateTrackingComposition triggerBlocks]
  -[PLStateTrackingComposition registerForStates:withOperator:withBlock:]
  -[PLStateTrackingComposition getStateChangeTime:]
  -[PLStateTrackingComposition getLastState:]
  -[PLStateTrackingComposition getCurrState:]
  -[PLStateTrackingComposition getStateBeforeSystemStateChange:]
  -[PLStateTrackingComposition getState:beforeDate:]
  -[PLStateTrackingComposition getSystemStateChangeTime]
  -[PLStateTrackingComposition setExecuteBlockCache:]
  -[PLStateTrackingComposition setStateChangeNotifications:]
  -[PLStateTrackingComposition setStateIDToStateMap:]
  -[PLStateTrackingComposition setEntryKeyToStateMap:]


PPTCoreStorage : NSObject
 @property  PPTSQLStorage *sqlStorage
 @property  PPTFlatStorage *flatStorage
 @property  NSDictionary *storageMap

  // class methods
  +[PPTCoreStorage startAllStorage]
  +[PPTCoreStorage storageClassForKey:]
  +[PPTCoreStorage setupStorageVersions]
  +[PPTCoreStorage sharedSQLStorage]
  +[PPTCoreStorage storageClassForType:]
  +[PPTCoreStorage setupStorage]
  +[PPTCoreStorage setupEntryObjects]
  +[PPTCoreStorage sharedFlatStorage]

  // instance methods
  -[PPTCoreStorage setFlatStorage:]
  -[PPTCoreStorage setStorageMap:]
  -[PPTCoreStorage .cxx_destruct]
  -[PPTCoreStorage startStorage]
  -[PPTCoreStorage init]
  -[PPTCoreStorage flatStorage]
  -[PPTCoreStorage setSqlStorage:]
  -[PPTCoreStorage storageMap]
  -[PPTCoreStorage sqlStorage]


PLService : PLOperator
  // class methods
  +[PLService startServices]
  +[PLService load]
  +[PLService stopServices]
  +[PLService initServices]


PLSubmissionFileMSS : PLSubmissionFile
  // instance methods
  -[PLSubmissionFileMSS submit]
  -[PLSubmissionFileMSS fileType]
  -[PLSubmissionFileMSS initWithConfig:]
  -[PLSubmissionFileMSS fileExtension]
  -[PLSubmissionFileMSS copyAndPrepareLog]
  -[PLSubmissionFileMSS flushMicrostackshots]
  -[PLSubmissionFileMSS getFileList]


PLNSNotificationOperatorComposition : NSObject
 @property  PLOperator *operator
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSArray *notificationNames
 @property  NSString *notificationName
 @property  @? operatorBlock

  // instance methods
  -[PLNSNotificationOperatorComposition setOperator:]
  -[PLNSNotificationOperatorComposition operator]
  -[PLNSNotificationOperatorComposition operatorBlock]
  -[PLNSNotificationOperatorComposition setOperatorBlock:]
  -[PLNSNotificationOperatorComposition setWorkQueue:]
  -[PLNSNotificationOperatorComposition listenForNotifications:]
  -[PLNSNotificationOperatorComposition notificationName]
  -[PLNSNotificationOperatorComposition initWithWorkQueue:forNotifications:withBlock:]
  -[PLNSNotificationOperatorComposition .cxx_destruct]
  -[PLNSNotificationOperatorComposition initWithOperator:forNotification:withBlock:]
  -[PLNSNotificationOperatorComposition initWithWorkQueue:forNotification:withBlock:]
  -[PLNSNotificationOperatorComposition notificationNames]
  -[PLNSNotificationOperatorComposition workQueue]
  -[PLNSNotificationOperatorComposition dealloc]
  -[PLNSNotificationOperatorComposition initWithOperator:forNotifications:withBlock:]
  -[PLNSNotificationOperatorComposition notification:]


PLOperator : NSObject
 @property  NSMutableDictionary *filterDefinitions
 @property  NSMutableDictionary *filterDeltaLastEntryIDs
 @property  NSMutableArray *bufferedEntries
 @property  PLTimer *triggerBufferFlush
 @property  NSMutableDictionary *lastLogDateForEntryKey
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *storageQueue
 @property  PLCoreStorage *storage
 @property  NSString *className
 @property  NSString *storageQueueName
 @property  NSMutableDictionary *localCache

  // class methods
  +[PLOperator entryEventNoneDefinitions]
  +[PLOperator operator]
  +[PLOperator load]
  +[PLOperator className]
  +[PLOperator defaults]
  +[PLOperator entryEventBackwardDefinitions]
  +[PLOperator entryEventIntervalDefinitions]
  +[PLOperator entryAggregateDefinitions]
  +[PLOperator accountingGroupDefinitions]
  +[PLOperator fullMode]
  +[PLOperator isEnabled]
  +[PLOperator entryEventPointDefinitions]
  +[PLOperator entryKeys]
  +[PLOperator railDefinitions]
  +[PLOperator isDebugEnabled]
  +[PLOperator setEnabled:]
  +[PLOperator entryEventForwardDefinitions]
  +[PLOperator entryKeyForType:andName:]
  +[PLOperator storageQueueName]
  +[PLOperator isDebugEnabledForKey:]
  +[PLOperator entryKeyForType:andName:isDynamic:]
  +[PLOperator entryDefinitions]
  +[PLOperator trimConditionsWithEntryKey:withTrimDate:withDuration:withStartDateKey:]
  +[PLOperator trimConditionsWithEntryKey:withTrimDate:withCount:withStartDateKey:]
  +[PLOperator createEntriesForMetrics:withData:withDate:]

  // instance methods
  -[PLOperator initOperatorDependancies]
  -[PLOperator className]
  -[PLOperator trimConditionsForEntryKey:forTrimDate:]
  -[PLOperator log]
  -[PLOperator .cxx_destruct]
  -[PLOperator storage]
  -[PLOperator init]
  -[PLOperator flushBuffer]
  -[PLOperator logEntry:]
  -[PLOperator updateEntry:withBlock:]
  -[PLOperator workQueue]
  -[PLOperator entryKeys]
  -[PLOperator initTaskOperatorDependancies]
  -[PLOperator isDebugEnabled]
  -[PLOperator dealloc]
  -[PLOperator storageQueue]
  -[PLOperator logEntries:withGroupID:]
  -[PLOperator tablesToTrimConditionsForTrimDate:]
  -[PLOperator storageQueueName]
  -[PLOperator logForSubsystem:category:data:]
  -[PLOperator isDebugEnabledForKey:]
  -[PLOperator entryDefinitions]
  -[PLOperator setFilterDefinitions:]
  -[PLOperator setFilterDeltaLastEntryIDs:]
  -[PLOperator setBufferedEntries:]
  -[PLOperator setTriggerBufferFlush:]
  -[PLOperator subscribeNotificationsForEntries]
  -[PLOperator defaultObjectForKey:]
  -[PLOperator lastLogDateForEntryKey]
  -[PLOperator bufferedEntries]
  -[PLOperator triggerBufferFlush]
  -[PLOperator shouldWriteEntry:withDebug:]
  -[PLOperator enableBufferFlushTimer:]
  -[PLOperator postEntries:]
  -[PLOperator postEntries:withGroupID:]
  -[PLOperator filterDefinitions]
  -[PLOperator postFilteredNotificationForEntry:withFilteredDefition:withNotificationName:]
  -[PLOperator filterDeltaLastEntryIDs]
  -[PLOperator logRequestNotification:]
  -[PLOperator setupFilterRequest:]
  -[PLOperator logForSubsystem:category:data:date:]
  -[PLOperator defaultBoolForKey:]
  -[PLOperator defaultDoubleForKey:]
  -[PLOperator defaultLongForKey:]
  -[PLOperator initForTest]
  -[PLOperator timeIntervalSinceLastLogForEntryKey:]
  -[PLOperator logFromCFCallback:]
  -[PLOperator logProportionateAggregateEntry:withStartDate:withEndDate:]
  -[PLOperator localCache]
  -[PLOperator setLocalCache:]
  -[PLOperator setLastLogDateForEntryKey:]


(Monotonic)
	// class methods
	+[(Monotonic) monotonicDate]
	+[(Monotonic) filenameDateStringWithStartDate:endDate:]
	+[(Monotonic) nearestMidnightBeforeDate:]
	+[(Monotonic) nearestMidnightAfterDate:]
	+[(Monotonic) defaultDateFormatter]
	+[(Monotonic) dateIsMidnightLocalTime:]
	+[(Monotonic) monotonicDateWithTimeIntervalSinceNow:]

	// instance methods
	-[(Monotonic) convertFromMonotonicToSystem]
	-[(Monotonic) convertFromSystemToMonotonic]
	-[(Monotonic) convertFromBasebandToMonotonic]
	-[(Monotonic) convertFromMonotonicToBaseband]
	-[(Monotonic) isInMonotonicFuture]
	-[(Monotonic) isInMonotonicFutureWithDistance:]
	-[(Monotonic) isInMonotonicPastWithDistance:]
	-[(Monotonic) timeIntervalSinceMonitonicNow]

(PLValue)
	// instance methods
	-[(PLValue) isNil]
	-[(PLValue) plCompare:]

(PowerlogExtensions)
	// instance methods
	-[(PowerlogExtensions) containsString:]
	-[(PowerlogExtensions) arrayByRemovingObjectsFromArray:]
	-[(PowerlogExtensions) containsAtleastOneOf:]

(PowerlogExtensions)
	// instance methods
	-[(PowerlogExtensions) serializedJSONString]
	-[(PowerlogExtensions) objectForNullMarkerForKey:]
	-[(PowerlogExtensions) objectForCFString:]
	-[(PowerlogExtensions) objectOrNullMarkerForCFString:]
	-[(PowerlogExtensions) descriptionSingleLine]

(PowerlogExtensions)
	// instance methods
	-[(PowerlogExtensions) strip]
	-[(PowerlogExtensions) compareFloat:]
	-[(PowerlogExtensions) tokenizedByString:]
	-[(PowerlogExtensions) tokenizedByStrings:]
	-[(PowerlogExtensions) matchingStringInArray:]
	-[(PowerlogExtensions) containsStringInArray:]
	-[(PowerlogExtensions) compareInt:]
	-[(PowerlogExtensions) stringByReplacingOccurrencesOfStrings:withString:]

01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0d00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0900 /System/Library/PrivateFrameworks/DiagnosticExtensions.framework/DiagnosticExtensions: DEArchiver 
01 00 1100 /System/Library/PrivateFrameworks/DiagnosticRequest.framework/DiagnosticRequest: DRConfigMonitor 
01 00 1900 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSTask 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/PrivateFrameworks/PerfPowerTelemetryMetadata.framework/PerfPowerTelemetryMetadata: PPTClientInterface 
01 00 0f00 /System/Library/PrivateFrameworks/PerfPowerTelemetryMetadata.framework/PerfPowerTelemetryMetadata: PPTFileUtilities 
01 00 1000 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0c00 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 1400 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
