|| __DATA.__objc_data _OBJC_CLASS_$_SVAccessoryItem
|| __DATA.__objc_data _OBJC_CLASS_$_SVAccessoryItemTextContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVAudioSession
|| __DATA.__objc_data _OBJC_CLASS_$_SVAudioSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SVAutoLayoutLabel
|| __DATA.__objc_data _OBJC_CLASS_$_SVContentTransitionTypeProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVControlInteractionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVControlItemInteractionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVControlItemManager
|| __DATA.__objc_data _OBJC_CLASS_$_SVCoordinateSpace
|| __DATA.__objc_data _OBJC_CLASS_$_SVCustomControlsLayoutGuideProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVCustomControlsViewProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVDiscoverMoreButtonInteractionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVDiscoverMoreInteractionObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVFullscreenDismissalAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SVFullscreenPresentationAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_SVFullscreenTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVGestureInteractionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVGestureRecognizerViewProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVInteraction
|| __DATA.__objc_data _OBJC_CLASS_$_SVInteractionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVInteractionContextFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVInteractionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVInteractionObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVKeyValueObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVLooper
|| __DATA.__objc_data _OBJC_CLASS_$_SVMaterialVideoPlayButton
|| __DATA.__objc_data _OBJC_CLASS_$_SVMediaPlaybackController
|| __DATA.__objc_data _OBJC_CLASS_$_SVMoreFromAccessoryItemContentProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVMoreFromInteractionObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVMutableVideoMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SVNonAnimatingDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SVNowPlayingInteractionObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackCoordinatorFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackEventTrackerStateContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackTransitionCoordinatorFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackTransitionCoordinatorStateMachineContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemLoaderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemLoaderManager
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemLoadingStateContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerItemObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerLayer
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerStatusObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerStatusObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerTimeControlStatusObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayerTimeControlStatusObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaylistSkipHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaylistSkipPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVPrefetchPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVPrefetcher
|| __DATA.__objc_data _OBJC_CLASS_$_SVPrefetcherFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVPrivacyStatementInteractionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVScrubbingPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVSkipInteractionObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVTimeBasedAction
|| __DATA.__objc_data _OBJC_CLASS_$_SVTimeConverter
|| __DATA.__objc_data _OBJC_CLASS_$_SVURLAssetFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVURLAssetLoader
|| __DATA.__objc_data _OBJC_CLASS_$_SVURLAssetLoaderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVURLAssetOptionsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideo
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarDisplayModeTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarDisplayModeTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarDisplayState
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarItemDisplayState
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarItemTransition
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarItemTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarSizer
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemCrossfadeTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemDisplayModeTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemFadeInTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemFadeOutTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemMoveUpTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemNonAnimatedTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAdActionAvailabilityObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAdActionAvailabilityObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoBufferObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoBufferObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoControlItemAnimationCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoControlItemFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoControlVisibilityItem
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoControlsTimingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoDurationObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoDurationObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoGravityProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoGravityProviderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoImpressionThresholdProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoImpressionTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoImpressionTrackerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoLoadingProgressObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoLoadingProgressObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoLoadingStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoLoadingStateObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoLoadingStateObserverStateContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoMediaIdentifierGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPeriodicTimeObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPeriodicTimeObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackAttemptTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackAttemptTrackerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackController
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackEventTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackEventTrackerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackPolicyObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackPolicyObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackPositionObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackPositionObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackProgressObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackProgressObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackSeeker
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackSeekerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackStateObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackStateObserverStateContext
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPresentationSizeObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPresentationSizeObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoProgressViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoQueueDiff
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipLockObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipLockObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipPolicyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipThresholdObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoSkipThresholdObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimeJumpObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimeJumpObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimePlayedTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimePlayedTrackerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimeProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoTimeProviderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoViewControllerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoViewControllerProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoViewControllerSizeObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoViewControllerSizeObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoVisibilityMonitorFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoVolumeObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoVolumeObserverFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVViewControllerPresentingManager
|| __DATA.__objc_data _OBJC_CLASS_$_SVVisibilityMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_SVVisiblePercentageProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVolumeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SVWeakObjectCache
|| __DATA.__objc_data _OBJC_CLASS_$_SVWeakReferenceObject
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAccessoryItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAccessoryItemTextContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAudioSession
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAudioSessionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAutoLayoutLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_SVContentTransitionTypeProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVControlInteractionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVControlItemInteractionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVControlItemManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SVCoordinateSpace
|| __DATA.__objc_data _OBJC_METACLASS_$_SVCustomControlsLayoutGuideProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVCustomControlsViewProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVDiscoverMoreButtonInteractionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVDiscoverMoreInteractionObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVFullscreenDismissalAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVFullscreenPresentationAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVFullscreenTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVGestureInteractionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVGestureRecognizerViewProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVInteraction
|| __DATA.__objc_data _OBJC_METACLASS_$_SVInteractionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVInteractionContextFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVInteractionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVInteractionObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVKeyValueObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVLooper
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMaterialVideoPlayButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMediaPlaybackController
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMoreFromAccessoryItemContentProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMoreFromInteractionObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMutableVideoMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SVNonAnimatingDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SVNowPlayingInteractionObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackCoordinatorFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackEventTrackerStateContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackTransitionCoordinatorFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackTransitionCoordinatorStateMachineContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemLoaderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemLoaderManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemLoadingStateContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerItemObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerStatusObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerStatusObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerTimeControlStatusObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayerTimeControlStatusObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaylistSkipHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaylistSkipPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPrefetchPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPrefetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPrefetcherFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPrivacyStatementInteractionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVScrubbingPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVSkipInteractionObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTimeBasedAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTimeConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_SVURLAssetFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVURLAssetLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_SVURLAssetLoaderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVURLAssetOptionsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideo
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarDisplayModeTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarDisplayModeTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarDisplayState
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarItemDisplayState
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarItemTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarItemTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarSizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemCrossfadeTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemDisplayModeTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemFadeInTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemFadeOutTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemMoveUpTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemNonAnimatedTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAdActionAvailabilityObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAdActionAvailabilityObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoBufferObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoBufferObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoControlItemAnimationCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoControlItemFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoControlVisibilityItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoControlsTimingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoDurationObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoDurationObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoGravityProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoGravityProviderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoImpressionThresholdProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoImpressionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoImpressionTrackerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoLoadingProgressObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoLoadingProgressObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoLoadingStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoLoadingStateObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoLoadingStateObserverStateContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoMediaIdentifierGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPeriodicTimeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPeriodicTimeObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackAttemptTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackAttemptTrackerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackController
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackEventTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackEventTrackerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackPolicyObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackPolicyObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackPositionObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackPositionObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackProgressObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackProgressObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackSeeker
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackSeekerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackStateObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackStateObserverStateContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPresentationSizeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPresentationSizeObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoProgressViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoQueueDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipLockObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipLockObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipPolicyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipThresholdObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoSkipThresholdObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimeJumpObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimeJumpObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimePlayedTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimePlayedTrackerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimeProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoTimeProviderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoViewControllerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoViewControllerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoViewControllerSizeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoViewControllerSizeObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoVisibilityMonitorFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoVolumeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoVolumeObserverFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVViewControllerPresentingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVisibilityMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVisiblePercentageProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVolumeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SVWeakObjectCache
|| __DATA.__objc_data _OBJC_METACLASS_$_SVWeakReferenceObject
|| __DATA_CONST.__const _SVDiscoverMoreAccessoryItemIdentifier
|| __DATA_CONST.__const _SVMoreFromAccessoryItemIdentifier
|| __DATA_CONST.__const _SVNowPlayingAccessoryItemIdentifier
|| __DATA_CONST.__const _SVUpNextAccessoryItemIdentifier
|| __DATA_CONST.__const _SVVideoErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAccessoryItemButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAccessoryItemContentProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAdPrivacyButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVBundleClass
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVCoreAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVEventTrackingAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVFrameworkAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVGestureRecognizerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVInteractionAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVInteractionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVInteractionObservingGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVLearnMoreButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVLearnMoreInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVMaterialButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVModalPresentationViewControllerProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVMoreFromButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlaybackAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlaybackCoordinatorManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlayerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlaylistAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlaylistInteractionAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlaylistUIAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPrefetchAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPrefetchManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPrivacyStatementInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVScrubbingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVShareButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVSharingAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVSkipToNextButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVSkipToNextInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVSkipToPreviousButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVSkipToPreviousInteractionHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVTimeline
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVTimelineAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVTimelineManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVUIAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAccessoryBarView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemDisplayModeTransitionCoordinatorProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAccessoryItemSizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAdButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAdSkipButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoAdSkipTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoControlsTimingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoControlsVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoGravityAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoGravityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoImpressionTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoInteractionEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlayButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlaybackAttemptTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlaybackEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlaybackManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlaybackPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoQueueManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoSkipManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoTransitionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoViewControllerContentTransitioningManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoVisibilityMonitorManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoVisiblePercentageManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoVisiblePercentageProviderFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoVolumeEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVolumeAssembly
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVolumeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVolumeProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVAccessoryItemButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVAccessoryItemContentProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVAdPrivacyButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVBundleClass
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVCoreAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVEventTrackingAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVFrameworkAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVGestureRecognizerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVInteractionAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVInteractionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVInteractionObservingGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVLearnMoreButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVLearnMoreInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVMaterialButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVModalPresentationViewControllerProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVMoreFromButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlaybackAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlaybackCoordinatorManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlayerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlaylistAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlaylistInteractionAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlaylistUIAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPrefetchAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPrefetchManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPrivacyStatementInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVScrubbingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVShareButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVSharingAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVSkipToNextButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVSkipToNextInteractionHandlerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVSkipToPreviousButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVSkipToPreviousInteractionHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVTimeline
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVTimelineAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVTimelineManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVUIAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryBarView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemDisplayModeTransitionCoordinatorProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAccessoryItemSizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAdButtonManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAdSkipButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoAdSkipTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoControlsTimingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoControlsVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoGravityAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoGravityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoImpressionTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoInteractionEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlayButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackAttemptTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoProviderManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoQueueManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoSkipManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoTransitionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoViewControllerContentTransitioningManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoVisibilityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoVisibilityMonitorManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoVisiblePercentageManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoVisiblePercentageProviderFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoVolumeEventTrackerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVolumeAssembly
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVolumeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVolumeProvider
|| __TEXT.__const _SVVideoTimeInvalid
|| __TEXT.__const _SilexVideoVersionNumber
|| __TEXT.__const _SilexVideoVersionString
|| __TEXT.__text _SVBundle
|| __TEXT.__text _SVContentSizeCategoryIsEqualToContentSizeCategory
__ AVFoundation: _AVAudioSessionCategoryAmbient
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVAudioSessionModeDefault
__ AVFoundation: _AVAudioSessionModeSpokenAudio
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemTimeJumpedNotification
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_METACLASS_$_AVPlayer
__ AVKit: _OBJC_CLASS_$_AVBackgroundView
__ AVKit: _OBJC_CLASS_$_AVControlItem
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AVKit: _OBJC_METACLASS_$_AVPlayerViewController
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _kCMTimeZero
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ NewsFoundation: _NFCallbackScopeAny
__ NewsFoundation: _NFCallbackScopeName
__ NewsFoundation: _OBJC_CLASS_$_NFPromise
__ NewsFoundation: _OBJC_CLASS_$_NFStateMachine
__ NewsFoundation: _OBJC_CLASS_$_NFStateMachineEvent
__ NewsFoundation: _OBJC_CLASS_$_NFStateMachineState
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCATransactionDisableActions
__ UIKit: _NSFontAttributeName
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UICubicTimingParameters
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UISpringTimingParameters
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityIsSwitchControlRunning
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIAccessibilityTraitNotEnabled
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontWeightHeavy
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SVInteractionHandler : NSObject /usr/lib/libSystem.B.dylib <SVInteractionHandling>
 @property  @? block
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionHandler initWithBlock:]
  -[SVInteractionHandler .cxx_destruct]
  -[SVInteractionHandler block]
  -[SVInteractionHandler handleInteractionWithContext:]


SVVideoLoadingStateObserverStateContext : NSObject /usr/lib/libSystem.B.dylib <NFStateMachineContextType>
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoLoadingStateObserverStateContext .cxx_destruct]
  -[SVVideoLoadingStateObserverStateContext error]
  -[SVVideoLoadingStateObserverStateContext initWithError:]


SVVideoGravityProviderFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoGravityProviderFactory>
 @property  <SVVideoPresentationSizeObserverFactory> *presentationSizeObserverFactory
 @property  <SVVideoViewControllerSizeObserverFactory> *videoViewControllerSizeObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoGravityProviderFactory .cxx_destruct]
  -[SVVideoGravityProviderFactory presentationSizeObserverFactory]
  -[SVVideoGravityProviderFactory videoViewControllerSizeObserverFactory]
  -[SVVideoGravityProviderFactory createVideoGravityProviderForVideo:]
  -[SVVideoGravityProviderFactory initWithPresentationSizeObserverFactory:videoViewControllerSizeObserverFactory:]


SVVideoSkipPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipPolicy>
 @property  BOOL canSkip
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipPolicyHandler canSkip]


SVVideoQueue : NSObject /usr/lib/libSystem.B.dylib <SVVideoQueue, SVVideoQueueDiffing>
 @property  NSOrderedSet *videos
 @property  <SVVideo> *video
 @property  <SVVideo> *nextVideo
 @property  <SVVideo> *previousVideo
 @property  <SVVideo> *firstVideo
 @property  <SVVideo> *lastVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoQueue copyWithZone:]
  -[SVVideoQueue setVideos:]
  -[SVVideoQueue .cxx_destruct]
  -[SVVideoQueue numberOfVideos]
  -[SVVideoQueue isEqual:]
  -[SVVideoQueue video]
  -[SVVideoQueue setVideo:]
  -[SVVideoQueue videos]
  -[SVVideoQueue initWithVideos:]
  -[SVVideoQueue videoAfterVideo:]
  -[SVVideoQueue videoBeforeVideo:]
  -[SVVideoQueue diffWithQueue:]
  -[SVVideoQueue nextVideoOfType:]
  -[SVVideoQueue previousVideoOfType:]
  -[SVVideoQueue videoAtIndex:]
  -[SVVideoQueue indexOfVideo:]
  -[SVVideoQueue nextVideo]
  -[SVVideoQueue previousVideo]
  -[SVVideoQueue firstVideo]
  -[SVVideoQueue lastVideo]


SVVideoPlaybackProgressObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackProgressObserving>
 @property  <SVVideoPeriodicTimeObserving> *periodicTimeObserver
 @property  <SVVideoDurationObserving> *durationObserver
 @property  double time
 @property  double duration
 @property  double progress
 @property  @? progressChangedBlock
 @property  @? resetBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackProgressObserver .cxx_destruct]
  -[SVVideoPlaybackProgressObserver time]
  -[SVVideoPlaybackProgressObserver setTime:]
  -[SVVideoPlaybackProgressObserver setDuration:]
  -[SVVideoPlaybackProgressObserver setProgress:]
  -[SVVideoPlaybackProgressObserver progress]
  -[SVVideoPlaybackProgressObserver duration]
  -[SVVideoPlaybackProgressObserver periodicTimeObserver]
  -[SVVideoPlaybackProgressObserver durationObserver]
  -[SVVideoPlaybackProgressObserver updateProgressWithTime:duration:]
  -[SVVideoPlaybackProgressObserver resetBlock]
  -[SVVideoPlaybackProgressObserver progressChangedBlock]
  -[SVVideoPlaybackProgressObserver onProgressChanged:]
  -[SVVideoPlaybackProgressObserver onReset:]
  -[SVVideoPlaybackProgressObserver initWithPeriodicTimeObserver:durationObserver:]


SVVideoDurationObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoDurationObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoDurationObserverFactory .cxx_destruct]
  -[SVVideoDurationObserverFactory playerItemObserverFactory]
  -[SVVideoDurationObserverFactory createDurationObserverForVideo:]
  -[SVVideoDurationObserverFactory initWithPlayerItemObserverFactory:]


SVPlayerItemLoader : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemLoading>
 @property  <SVPlayerItemFactory> *playerItemFactory
 @property  <SVURLAssetLoading> *URLAssetLoader
 @property  <SVVideoMetadata> *metadata
 @property  NFStateMachine *stateMachine
 @property  NSMutableArray *loadingStateChangeBlocks
 @property  unsigned long state
 @property  AVPlayerItem *item
 @property  NSError *error
 @property  @? cancellationBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemLoader item]
  -[SVPlayerItemLoader stateMachine]
  -[SVPlayerItemLoader load]
  -[SVPlayerItemLoader dealloc]
  -[SVPlayerItemLoader setError:]
  -[SVPlayerItemLoader setState:]
  -[SVPlayerItemLoader .cxx_destruct]
  -[SVPlayerItemLoader setItem:]
  -[SVPlayerItemLoader error]
  -[SVPlayerItemLoader setCancellationBlock:]
  -[SVPlayerItemLoader state]
  -[SVPlayerItemLoader metadata]
  -[SVPlayerItemLoader cancellationBlock]
  -[SVPlayerItemLoader playerItemFactory]
  -[SVPlayerItemLoader loadPlayerItemWithCompletionBlock:]
  -[SVPlayerItemLoader loadingStateChangeBlocks]
  -[SVPlayerItemLoader URLAssetLoader]
  -[SVPlayerItemLoader onLoadingStateChange:]
  -[SVPlayerItemLoader initWithPlayerItemFactory:URLAssetLoader:metadata:]


SVURLAssetOptionsProvider : NSObject /usr/lib/libSystem.B.dylib <SVURLAssetOptionsProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVURLAssetOptionsProvider URLAssetOptionsForVideo:]


SVSkipToPreviousButtonManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver, SVSkipToPreviousButtonManager>
 @property  NSMutableSet *controls
 @property  <SVVideoSkipLockObserverFactory> *skipLockObserverFactory
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoQueueObserving> *queueObserver
 @property  <SVVideoSkipLockObserving> *skipLockObserver
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSkipToPreviousButtonManager .cxx_destruct]
  -[SVSkipToPreviousButtonManager controls]
  -[SVSkipToPreviousButtonManager conditionsChanged]
  -[SVSkipToPreviousButtonManager queueProvider]
  -[SVSkipToPreviousButtonManager videoViewControllerProvider]
  -[SVSkipToPreviousButtonManager skipLockObserverFactory]
  -[SVSkipToPreviousButtonManager setSkipLockObserver:]
  -[SVSkipToPreviousButtonManager skipLockObserver]
  -[SVSkipToPreviousButtonManager playbackProgressObserverFactory]
  -[SVSkipToPreviousButtonManager setPlaybackProgressObserver:]
  -[SVSkipToPreviousButtonManager playbackProgressObserver]
  -[SVSkipToPreviousButtonManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVSkipToPreviousButtonManager addControl:]
  -[SVSkipToPreviousButtonManager initWithSkipLockObserverFactory:playbackProgressObserverFactory:videoViewControllerProvider:queueProvider:queueObserver:]
  -[SVSkipToPreviousButtonManager queueObserver]


SVVideoPlaybackEventTrackerManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoPlaybackEventTrackerFactory> *playbackEventTrackerFactory
 @property  <SVVideoEventTrackerProviding> *videoEventTrackerProvider
 @property  <SVVideoPlaybackEventTracking> *playbackEventTracker
 @property  <SVVideoEventTracker> *eventTracker
 @property  NSMapTable *playbackEventTrackers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackEventTrackerManager .cxx_destruct]
  -[SVVideoPlaybackEventTrackerManager eventTracker]
  -[SVVideoPlaybackEventTrackerManager setEventTracker:]
  -[SVVideoPlaybackEventTrackerManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoPlaybackEventTrackerManager videoEventTrackerProvider]
  -[SVVideoPlaybackEventTrackerManager playbackEventTrackerFactory]
  -[SVVideoPlaybackEventTrackerManager playbackEventTrackers]
  -[SVVideoPlaybackEventTrackerManager setPlaybackEventTracker:]
  -[SVVideoPlaybackEventTrackerManager playbackEventTracker]
  -[SVVideoPlaybackEventTrackerManager initWithPlaybackEventTrackerFactory:videoEventTrackerProvider:]


SVVideoTimeJumpObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimeJumpObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  <SVVideoTimeProviderFactory> *timeProviderFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimeJumpObserverFactory .cxx_destruct]
  -[SVVideoTimeJumpObserverFactory playerItemObserverFactory]
  -[SVVideoTimeJumpObserverFactory timeProviderFactory]
  -[SVVideoTimeJumpObserverFactory createTimeJumpObserverForVideo:]
  -[SVVideoTimeJumpObserverFactory initWithPlayerItemObserverFactory:timeProviderFactory:]


SVVideoPlaybackProgressObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackProgressObserverFactory>
 @property  <SVVideoPeriodicTimeObserverFactory> *periodicTimeObserverFactory
 @property  <SVVideoDurationObserverFactory> *durationObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackProgressObserverFactory .cxx_destruct]
  -[SVVideoPlaybackProgressObserverFactory createPlaybackProgressObserverForVideo:]
  -[SVVideoPlaybackProgressObserverFactory periodicTimeObserverFactory]
  -[SVVideoPlaybackProgressObserverFactory durationObserverFactory]
  -[SVVideoPlaybackProgressObserverFactory initWithPeriodicTimeObserverFactory:durationObserverFactory:]


SVVideoPlaybackPositionObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackPositionObserving>
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  <SVPlayerTimeControlStatusObserving> *timeControlStatusObserver
 @property  unsigned long position
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackPositionObserver position]
  -[SVVideoPlaybackPositionObserver setPosition:]
  -[SVVideoPlaybackPositionObserver onChange:]
  -[SVVideoPlaybackPositionObserver .cxx_destruct]
  -[SVVideoPlaybackPositionObserver changeBlock]
  -[SVVideoPlaybackPositionObserver timeControlStatusObserver]
  -[SVVideoPlaybackPositionObserver playerItemPlayedToEnd:]
  -[SVVideoPlaybackPositionObserver initWithPlayerItemObserver:timeControlStatusObserver:]
  -[SVVideoPlaybackPositionObserver playerItemObserver]


SVVideoControlItemFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoControlItemFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoControlItemFactory createControlItemWithView:hideable:]


SVPlayerItemLoaderFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemLoaderFactory>
 @property  <SVPlayerItemFactory> *playerItemFactory
 @property  <SVURLAssetLoaderFactory> *URLAssetLoaderFactory
 @property  <SVVideoMetadataProviding> *metadataProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemLoaderFactory .cxx_destruct]
  -[SVPlayerItemLoaderFactory metadataProvider]
  -[SVPlayerItemLoaderFactory playerItemFactory]
  -[SVPlayerItemLoaderFactory URLAssetLoaderFactory]
  -[SVPlayerItemLoaderFactory createPlayerItemLoaderForVideo:]
  -[SVPlayerItemLoaderFactory initWithPlayerItemFactory:URLAssetLoaderFactory:metadataProvider:]


SVURLAssetFactory : NSObject /usr/lib/libSystem.B.dylib <SVURLAssetFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVURLAssetFactory createURLAssetForURL:withOptions:]


SVPlayer : AVPlayer /System/Library/Frameworks/UIKit.framework/UIKit
 @property  int audioMode

  // instance methods
  -[SVPlayer dealloc]
  -[SVPlayer audioMode]
  -[SVPlayer initWithAudioMode:]


SVTimelineAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVTimelineAssembly loadInRegistry:]


SVGestureRecognizerManager : NSObject /usr/lib/libSystem.B.dylib <SVGestureRecognizerManager, SVVideoTransitionObserver>
 @property  NSMutableSet *gestureRecognizers
 @property  <SVGestureRecognizerViewProviding> *viewProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVGestureRecognizerManager viewProvider]
  -[SVGestureRecognizerManager gestureRecognizers]
  -[SVGestureRecognizerManager .cxx_destruct]
  -[SVGestureRecognizerManager addGestureRecognizer:]
  -[SVGestureRecognizerManager removeGestureRecognizer:]
  -[SVGestureRecognizerManager setupGestureRecognizers]
  -[SVGestureRecognizerManager initWithViewProvider:]
  -[SVGestureRecognizerManager willTransitionToVideo:withTransitionCoordinator:]


SVVideoPlaybackSeekerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackSeekerFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackSeekerFactory .cxx_destruct]
  -[SVVideoPlaybackSeekerFactory playerProvider]
  -[SVVideoPlaybackSeekerFactory createPlaybackSeekerForVideo:]
  -[SVVideoPlaybackSeekerFactory initWithPlayerProvider:]


SVVideoPlayButton : SVButton
  // class methods
  +[SVVideoPlayButton playImage]

  // instance methods
  -[SVVideoPlayButton accessibilityLabel]
  -[SVVideoPlayButton isAccessibilityElement]
  -[SVVideoPlayButton initWithFrame:]
  -[SVVideoPlayButton updateBackgroundColor]
  -[SVVideoPlayButton accessibilityHint]
  -[SVVideoPlayButton layoutSubviews]
  -[SVVideoPlayButton displayAsPaused]


SVVideoViewControllerConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying, SVVideoViewControllerConfiguration>
 @property  BOOL preferredMuteState
 @property  BOOL pagingAllowed

  // instance methods
  -[SVVideoViewControllerConfiguration copyWithZone:]
  -[SVVideoViewControllerConfiguration preferredMuteState]
  -[SVVideoViewControllerConfiguration isPagingAllowed]
  -[SVVideoViewControllerConfiguration initWithPreferredMuteState:pagingAllowed:]


SVWeakObjectCache : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSMutableDictionary *cache
 @property  NSArray *allObjects

  // instance methods
  -[SVWeakObjectCache copyWithZone:]
  -[SVWeakObjectCache init]
  -[SVWeakObjectCache removeObjectForKey:]
  -[SVWeakObjectCache .cxx_destruct]
  -[SVWeakObjectCache cache]
  -[SVWeakObjectCache setObject:forKey:]
  -[SVWeakObjectCache objectForKey:]
  -[SVWeakObjectCache allObjects]
  -[SVWeakObjectCache removeObjectForIdentifier:]


SVVideoLoadingStateObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoLoadingStateObserving>
 @property  unsigned long state
 @property  NSError *error
 @property  <SVPlayerItemLoading> *playerItemLoader
 @property  NFStateMachine *stateMachine
 @property  SVKeyValueObserver *playerItemStatusObserver
 @property  @? startBlock
 @property  @? finishedBlock
 @property  @? failedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoLoadingStateObserver stateMachine]
  -[SVVideoLoadingStateObserver setError:]
  -[SVVideoLoadingStateObserver setState:]
  -[SVVideoLoadingStateObserver .cxx_destruct]
  -[SVVideoLoadingStateObserver failedBlock]
  -[SVVideoLoadingStateObserver finishedBlock]
  -[SVVideoLoadingStateObserver error]
  -[SVVideoLoadingStateObserver state]
  -[SVVideoLoadingStateObserver startBlock]
  -[SVVideoLoadingStateObserver playerItemLoader]
  -[SVVideoLoadingStateObserver configureStateWithPlayerItem:]
  -[SVVideoLoadingStateObserver setPlayerItemStatusObserver:]
  -[SVVideoLoadingStateObserver onStart:]
  -[SVVideoLoadingStateObserver onFinished:]
  -[SVVideoLoadingStateObserver onFailed:]
  -[SVVideoLoadingStateObserver initWithPlayerItemLoader:]
  -[SVVideoLoadingStateObserver playerItemStatusObserver]


SVPrefetcherFactory : NSObject /usr/lib/libSystem.B.dylib <SVPrefetcherFactory>
 @property  <SVVideoBufferObserverFactory> *bufferObserverFactory
 @property  <SVPrefetchPolicyHandler> *prefetchPolicyHandler
 @property  <SVPlaybackCoordinatorProviding> *playbackCoordinatorProvider
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVVideoLoadingProgressObserverFactory> *loadingProgressObserverFactory
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrefetcherFactory .cxx_destruct]
  -[SVPrefetcherFactory playbackProgressObserverFactory]
  -[SVPrefetcherFactory prefetchPolicyHandler]
  -[SVPrefetcherFactory playbackCoordinatorProvider]
  -[SVPrefetcherFactory bufferObserverFactory]
  -[SVPrefetcherFactory loadingStateObserverFactory]
  -[SVPrefetcherFactory loadingProgressObserverFactory]
  -[SVPrefetcherFactory createPrefetcherForVideo:afterVideo:]
  -[SVPrefetcherFactory initWithPrefetchPolicyHandler:bufferObserverFactory:playbackCoordinatorProvider:loadingStateObserverFactory:loadingProgressObserverFactory:playbackProgressObserverFactory:]


SVAccessoryItemTextContentProvider : NSObject /usr/lib/libSystem.B.dylib <SVAccessoryItemContentProviding>
 @property  SVAccessoryItemButton *accessoryItemButton
 @property  <SVVideoTitleProviding> *titleProvider
 @property  NSString *headerText
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAccessoryItemTextContentProvider .cxx_destruct]
  -[SVAccessoryItemTextContentProvider headerText]
  -[SVAccessoryItemTextContentProvider titleProvider]
  -[SVAccessoryItemTextContentProvider accessoryItemButton]
  -[SVAccessoryItemTextContentProvider updateAccessoryItemForVideo:animated:]
  -[SVAccessoryItemTextContentProvider initWithAccessoryItemButton:titleProvider:headerText:]


SVVisiblePercentageProvider : NSObject /usr/lib/libSystem.B.dylib <SVVisiblePercentageProviding, SVVisiblePercentageReporting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double visiblePercentage

  // instance methods
  -[SVVisiblePercentageProvider visiblePercentageOfObject:]
  -[SVVisiblePercentageProvider visiblePercentage]
  -[SVVisiblePercentageProvider setVisiblePercentage:]
  -[SVVisiblePercentageProvider initWithVisiblePercentage:]


SVInteractionContext : NSObject /usr/lib/libSystem.B.dylib <SVInteractionContext>
 @property  UIView *sourceView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceRect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionContext sourceView]
  -[SVInteractionContext .cxx_destruct]
  -[SVInteractionContext sourceRect]
  -[SVInteractionContext initWithSourceView:sourceRect:]


SVVideoVolumeEventTrackerManager : NSObject /usr/lib/libSystem.B.dylib <SVVolumeObserving, SVVideoTransitionObserver>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  <SVVideo> *video
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVolumeEventTrackerManager .cxx_destruct]
  -[SVVideoVolumeEventTrackerManager video]
  -[SVVideoVolumeEventTrackerManager setVideo:]
  -[SVVideoVolumeEventTrackerManager muteStateChanged:]
  -[SVVideoVolumeEventTrackerManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoVolumeEventTrackerManager eventTrackerProvider]
  -[SVVideoVolumeEventTrackerManager initWithEventTrackerProvider:]


SVVideoControlsTimingConfiguration : NSObject /usr/lib/libSystem.B.dylib <SVVideoControlsTimingConfiguration>
 @property  double upNextAppearanceTimeInterval
 @property  double nowPlayingVisibilityTimeInterval
 @property  double moreFromVisibilityTimeInterval

  // instance methods
  -[SVVideoControlsTimingConfiguration copyWithZone:]
  -[SVVideoControlsTimingConfiguration upNextAppearanceTimeInterval]
  -[SVVideoControlsTimingConfiguration nowPlayingVisibilityTimeInterval]
  -[SVVideoControlsTimingConfiguration moreFromVisibilityTimeInterval]
  -[SVVideoControlsTimingConfiguration initWithUpNextAppearanceTimeInterval:nowPlayingVisibilityTimeInterval:moreFromVisibilityTimeInterval:]


SVVideoAccessoryBarDisplayState : NSObject /usr/lib/libSystem.B.dylib
 @property  SVVideoAccessoryBarItemDisplayState *leadingState
 @property  SVVideoAccessoryBarItemDisplayState *trailingState

  // instance methods
  -[SVVideoAccessoryBarDisplayState .cxx_destruct]
  -[SVVideoAccessoryBarDisplayState trailingState]
  -[SVVideoAccessoryBarDisplayState isEqual:]
  -[SVVideoAccessoryBarDisplayState leadingState]
  -[SVVideoAccessoryBarDisplayState initWithLeadingState:trailingState:]


SVVideoVisiblePercentageManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoVisiblePercentageManager>
 @property  <SVVideoVisiblePercentageProviderFactory> *visiblePercentageProviderFactory
 @property  SVWeakObjectCache *visiblePercentageProviders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVisiblePercentageManager .cxx_destruct]
  -[SVVideoVisiblePercentageManager _visiblePercentageProviderForVideo:]
  -[SVVideoVisiblePercentageManager visiblePercentageProviders]
  -[SVVideoVisiblePercentageManager visiblePercentageProviderFactory]
  -[SVVideoVisiblePercentageManager visiblePercentageProviderForVideo:]
  -[SVVideoVisiblePercentageManager visiblePercentageReporterForVideo:]
  -[SVVideoVisiblePercentageManager initWithVisiblePercentageProviderFactory:]


SVNowPlayingInteractionObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionObserverFactory>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVNowPlayingInteractionObserverFactory .cxx_destruct]
  -[SVNowPlayingInteractionObserverFactory eventTrackerProvider]
  -[SVNowPlayingInteractionObserverFactory createInteractionObserverForVideo:]
  -[SVNowPlayingInteractionObserverFactory initWithVideoEventTrackerProvider:]


SVVideoAccessoryItemNonAnimatedTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitioning>
 @property  BOOL animated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemNonAnimatedTransitionCoordinator animated]
  -[SVVideoAccessoryItemNonAnimatedTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemNonAnimatedTransitionCoordinator animateWithContext:]


SVTimelineManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  SVTimeline *timeline
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVTimelineManager .cxx_destruct]
  -[SVTimelineManager timeline]
  -[SVTimelineManager playbackProgressObserverFactory]
  -[SVTimelineManager setPlaybackProgressObserver:]
  -[SVTimelineManager playbackProgressObserver]
  -[SVTimelineManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVTimelineManager initWithTimeline:playbackProgressObserverFactory:]


SVScrubbingPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SVScrubbingPolicyHandling>
 @property  unsigned long policy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVScrubbingPolicyHandler policy]
  -[SVScrubbingPolicyHandler scrubbingAllowedForVideo:]
  -[SVScrubbingPolicyHandler initWithScrubbingPolicy:]


SVPrefetchAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrefetchAssembly loadInRegistry:]


SVInteractionObservingGestureRecognizer : UITapGestureRecognizer /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[SVInteractionObservingGestureRecognizer canPreventGestureRecognizer:]
  -[SVInteractionObservingGestureRecognizer shouldRequireFailureOfGestureRecognizer:]
  -[SVInteractionObservingGestureRecognizer canBePreventedByGestureRecognizer:]
  -[SVInteractionObservingGestureRecognizer shouldBeRequiredToFailByGestureRecognizer:]
  -[SVInteractionObservingGestureRecognizer initWithTarget:action:]


SVInteractionManager : NSObject /usr/lib/libSystem.B.dylib <SVInteractionManager, SVVideoTransitionObserver>
 @property  NSMutableSet *interactions
 @property  NSMapTable *registeredHandlers
 @property  NSMapTable *registeredObservers
 @property  NSMapTable *interactionHandlers
 @property  NSMapTable *interactionHandlerFactories
 @property  NSMapTable *interactionObservers
 @property  NSMapTable *interactionObserverFactories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionManager interactionHandlers]
  -[SVInteractionManager init]
  -[SVInteractionManager .cxx_destruct]
  -[SVInteractionManager interactions]
  -[SVInteractionManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVInteractionManager configureInteractionManagementForVideo:]
  -[SVInteractionManager registeredHandlers]
  -[SVInteractionManager registeredObservers]
  -[SVInteractionManager interactionHandlerFactories]
  -[SVInteractionManager interactionObserverFactories]
  -[SVInteractionManager interactionObservers]
  -[SVInteractionManager interactionHandlerForInteraction:withVideo:]
  -[SVInteractionManager interactionObserverForInteraction:withVideo:]
  -[SVInteractionManager configureInteraction:withHandler:observer:]
  -[SVInteractionManager registerInteraction:withInteractionHandler:]
  -[SVInteractionManager registerInteraction:withInteractionObserver:]
  -[SVInteractionManager registerInteraction:withInteractionHandlerFactory:]
  -[SVInteractionManager registerInteraction:withInteractionObserverFactory:]


SVFullscreenDismissalAnimator : NSObject /usr/lib/libSystem.B.dylib <SVFullscreenTransitionCoordinator>
 @property  UIViewPropertyAnimator *animator
 @property  <SVFullscreenTransitionContext> *context
 @property  UIView *toView
 @property  @? completionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVFullscreenDismissalAnimator toView]
  -[SVFullscreenDismissalAnimator context]
  -[SVFullscreenDismissalAnimator setAnimator:]
  -[SVFullscreenDismissalAnimator animator]
  -[SVFullscreenDismissalAnimator .cxx_destruct]
  -[SVFullscreenDismissalAnimator setToView:]
  -[SVFullscreenDismissalAnimator setContext:]
  -[SVFullscreenDismissalAnimator completeTransition:]
  -[SVFullscreenDismissalAnimator completionBlock]
  -[SVFullscreenDismissalAnimator initWithCompletionBlock:]
  -[SVFullscreenDismissalAnimator animateWithContext:]


SVVideoLoadingStateObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoLoadingStateObserverFactory>
 @property  <SVPlayerItemLoaderProviding> *playerItemLoaderProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoLoadingStateObserverFactory .cxx_destruct]
  -[SVVideoLoadingStateObserverFactory createLoadingStateObserverForVideo:]
  -[SVVideoLoadingStateObserverFactory playerItemLoaderProvider]
  -[SVVideoLoadingStateObserverFactory initWithPlayeryItemLoaderProvider:]


SVPrefetchPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SVPrefetchPolicyHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrefetchPolicyHandler prefetchPolicyForVideo:]


SVVideoAccessoryBarItemTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  SVVideoAccessoryBarItemTransitionContext *context
 @property  <SVAccessoryItem> *fromItem
 @property  <SVAccessoryItem> *toItem
 @property  <SVVideoAccessoryItemTransitioning> *transitionCoordinator

  // instance methods
  -[SVVideoAccessoryBarItemTransition context]
  -[SVVideoAccessoryBarItemTransition .cxx_destruct]
  -[SVVideoAccessoryBarItemTransition toItem]
  -[SVVideoAccessoryBarItemTransition setContext:]
  -[SVVideoAccessoryBarItemTransition cancel]
  -[SVVideoAccessoryBarItemTransition transitionCoordinator]
  -[SVVideoAccessoryBarItemTransition fromItem]
  -[SVVideoAccessoryBarItemTransition initWithFromItem:toItem:transitionCoordinator:]
  -[SVVideoAccessoryBarItemTransition performTransitionOnContainerView:withCompletionBlock:]


SVPrivacyStatementInteractionHandlerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionHandlerFactory>
 @property  <SVVideoProviderProviding> *videoProviderProviding
 @property  <SVVideoPlaybackController> *playbackController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrivacyStatementInteractionHandlerFactory .cxx_destruct]
  -[SVPrivacyStatementInteractionHandlerFactory playbackController]
  -[SVPrivacyStatementInteractionHandlerFactory createInteractionHandlerForVideo:]
  -[SVPrivacyStatementInteractionHandlerFactory videoProviderProviding]
  -[SVPrivacyStatementInteractionHandlerFactory initWithVideoProviderProviding:playbackController:]


SVSkipToPreviousInteractionHandler : NSObject /usr/lib/libSystem.B.dylib <SVInteractionHandling>
 @property  <SVVideoPlaybackSkipping> *playbackSkipper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSkipToPreviousInteractionHandler .cxx_destruct]
  -[SVSkipToPreviousInteractionHandler handleInteractionWithContext:]
  -[SVSkipToPreviousInteractionHandler playbackSkipper]
  -[SVSkipToPreviousInteractionHandler initWithPlaybackSkipper:]


SVTimeConverter : NSObject /usr/lib/libSystem.B.dylib <SVTimeConverting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVTimeConverter convertTimeToSeconds:]


SVSkipInteractionObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionObserverFactory>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSkipInteractionObserverFactory .cxx_destruct]
  -[SVSkipInteractionObserverFactory eventTrackerProvider]
  -[SVSkipInteractionObserverFactory createInteractionObserverForVideo:]
  -[SVSkipInteractionObserverFactory initWithVideoEventTrackerProvider:]


SVVideoSkipLockObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipLockObserving>
 @property  SVTimeline *timeline
 @property  <SVVideoSkipThresholdObserving> *thresholdObserver
 @property  BOOL locked
 @property  double countdown
 @property  SVTimeBasedAction *unlockAction
 @property  NSMutableArray *countdownActions
 @property  @? unlockBlock
 @property  @? countdownBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipLockObserver locked]
  -[SVVideoSkipLockObserver dealloc]
  -[SVVideoSkipLockObserver .cxx_destruct]
  -[SVVideoSkipLockObserver setLocked:]
  -[SVVideoSkipLockObserver timeline]
  -[SVVideoSkipLockObserver countdown]
  -[SVVideoSkipLockObserver setCountdown:]
  -[SVVideoSkipLockObserver unlockAction]
  -[SVVideoSkipLockObserver onUnlock:]
  -[SVVideoSkipLockObserver thresholdObserver]
  -[SVVideoSkipLockObserver lockStateForThresholdObserver:onTimeline:]
  -[SVVideoSkipLockObserver scheduleUnlockActionWithThreshold:]
  -[SVVideoSkipLockObserver scheduleCountdownActionsWithThreshold:]
  -[SVVideoSkipLockObserver countdownActions]
  -[SVVideoSkipLockObserver setCountdownActions:]
  -[SVVideoSkipLockObserver setUnlockAction:]
  -[SVVideoSkipLockObserver unlockBlock]
  -[SVVideoSkipLockObserver countdownBlock]
  -[SVVideoSkipLockObserver onCountDown:]
  -[SVVideoSkipLockObserver initWithTimeline:thresholdObserver:]


SVVideoPresentationSizeObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPresentationSizeObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPresentationSizeObserverFactory .cxx_destruct]
  -[SVVideoPresentationSizeObserverFactory createPresentationSizeObserverForVideo:]
  -[SVVideoPresentationSizeObserverFactory playerItemObserverFactory]
  -[SVVideoPresentationSizeObserverFactory initWithPlayerItemObserverFactory:]


SVVideoLoadingProgressObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoLoadingProgressObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  <SVVideoDurationObserverFactory> *durationObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoLoadingProgressObserverFactory .cxx_destruct]
  -[SVVideoLoadingProgressObserverFactory playerItemObserverFactory]
  -[SVVideoLoadingProgressObserverFactory durationObserverFactory]
  -[SVVideoLoadingProgressObserverFactory createLoadingProgressObserverForVideo:]
  -[SVVideoLoadingProgressObserverFactory initWithPlayerItemObserverFactory:durationObserverFactory:]


SVVideoPlaybackSeeker : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackSeeking>
 @property  SVPlayer *player
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackSeeker .cxx_destruct]
  -[SVVideoPlaybackSeeker player]
  -[SVVideoPlaybackSeeker initWithPlayer:]
  -[SVVideoPlaybackSeeker seekToStart]


SVKeyValueObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *keyPath
 @property  NSObject *object
 @property  unsigned long options
 @property  @? change

  // instance methods
  -[SVKeyValueObserver object]
  -[SVKeyValueObserver change]
  -[SVKeyValueObserver dealloc]
  -[SVKeyValueObserver .cxx_destruct]
  -[SVKeyValueObserver options]
  -[SVKeyValueObserver keyPath]
  -[SVKeyValueObserver observeValueForKeyPath:ofObject:change:context:]
  -[SVKeyValueObserver initWithKeyPath:ofObject:withOptions:change:]


SVVideoTimeJumpObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimeJumpObserving>
 @property  <SVPlayerItemObserving> *itemObserver
 @property  <SVVideoTimeProviding> *timeProvider
 @property  @? jumpBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimeJumpObserver .cxx_destruct]
  -[SVVideoTimeJumpObserver timeProvider]
  -[SVVideoTimeJumpObserver jumped:]
  -[SVVideoTimeJumpObserver onJump:]
  -[SVVideoTimeJumpObserver initWithItemObserver:timeProvider:]
  -[SVVideoTimeJumpObserver jumpBlock]
  -[SVVideoTimeJumpObserver itemObserver]


SVVideoProgressViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <SVVideoTransitionObserver>
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  <SVVideoLoadingProgressObserverFactory> *loadingProgressObserverFactory
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  <SVVideoLoadingProgressObserving> *loadingProgressObserver
 @property  UIView *loadingProgressView
 @property  UIVisualEffectView *playbackProgressView
 @property  UIViewPropertyAnimator *playbackProgressAnimator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoProgressViewController viewDidLoad]
  -[SVVideoProgressViewController .cxx_destruct]
  -[SVVideoProgressViewController viewDidLayoutSubviews]
  -[SVVideoProgressViewController playbackProgressObserverFactory]
  -[SVVideoProgressViewController setPlaybackProgressObserver:]
  -[SVVideoProgressViewController playbackProgressObserver]
  -[SVVideoProgressViewController willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoProgressViewController loadingProgressObserverFactory]
  -[SVVideoProgressViewController loadingProgressView]
  -[SVVideoProgressViewController playbackProgressView]
  -[SVVideoProgressViewController resetToPlaybackProgress:animated:]
  -[SVVideoProgressViewController startUpdatingPlaybackProgressWithObserver:]
  -[SVVideoProgressViewController setLoadingProgressObserver:]
  -[SVVideoProgressViewController loadingProgressObserver]
  -[SVVideoProgressViewController startUpdatingLoadingProgressWithObserver:]
  -[SVVideoProgressViewController playbackProgressAnimator]
  -[SVVideoProgressViewController setPlaybackProgressAnimator:]
  -[SVVideoProgressViewController setPlaybackProgressView:]
  -[SVVideoProgressViewController initWithLoadingProgressObserverFactory:playbackProgressObserverFactory:]


SVVolumeConfiguration : NSObject /usr/lib/libSystem.B.dylib <SVVolumeConfiguration>
 @property  BOOL muted
 @property  double volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVolumeConfiguration muted]
  -[SVVolumeConfiguration volume]
  -[SVVolumeConfiguration initWithVolume:muted:]


SVButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation
 @property  {UIEdgeInsets=dddd} touchInsets
 @property  @? touchUpInsideBlock

  // instance methods
  -[SVButton initWithFrame:]
  -[SVButton .cxx_destruct]
  -[SVButton onTouchUpInside:]
  -[SVButton pointInside:withEvent:]
  -[SVButton setTouchInsets:]
  -[SVButton touchInsets]
  -[SVButton _privateButtonTapped]
  -[SVButton touchUpInsideBlock]


SVVideoVolumeObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoVolumeObserverFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  AVAudioSession *audioSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVolumeObserverFactory audioSession]
  -[SVVideoVolumeObserverFactory .cxx_destruct]
  -[SVVideoVolumeObserverFactory playerProvider]
  -[SVVideoVolumeObserverFactory createVolumeObserverForVideo:]
  -[SVVideoVolumeObserverFactory initWithPlayerProvider:audioSession:]


SVVideoViewControllerContentTransitioningManager : NSObject /usr/lib/libSystem.B.dylib <AVPlayerViewControllerContentTransitioning_NewsOnly, SVVideoTransitionObserver>
 @property  <SVVisibilityReporting> *visibilityReporter
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVPlayerProviding> *playerProvider
 @property  <SVVideoVisiblePercentageManager> *visiblePercentageManager
 @property  <SVVideoSkipLockObserverFactory> *skipLockObserverFactory
 @property  <SVVideoTimeProviderFactory> *timeProviderFactory
 @property  <SVVideoPlaybackSeekerFactory> *seekerFactory
 @property  <SVVideoSkipLockObserving> *skipLockObserver
 @property  <SVVideoTimeProviding> *timeProvider
 @property  <SVVideoPlaybackSeeking> *seeker
 @property  <SVVisiblePercentageReporting> *visibilityReporterForAppearingVideo
 @property  <SVVisiblePercentageReporting> *visibilityReporterForDisappearingVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoViewControllerContentTransitioningManager .cxx_destruct]
  -[SVVideoViewControllerContentTransitioningManager seeker]
  -[SVVideoViewControllerContentTransitioningManager timeProvider]
  -[SVVideoViewControllerContentTransitioningManager playerViewControllerDidCancelContentTransition:]
  -[SVVideoViewControllerContentTransitioningManager playerViewControllerWillCancelContentTransition:]
  -[SVVideoViewControllerContentTransitioningManager playerViewControllerDidCompleteContentTransition:]
  -[SVVideoViewControllerContentTransitioningManager playerViewControllerWillCompleteContentTransition:]
  -[SVVideoViewControllerContentTransitioningManager playerViewController:didUpdateContentTransitionProgress:]
  -[SVVideoViewControllerContentTransitioningManager playerViewControllerWillBeginContentTransition:]
  -[SVVideoViewControllerContentTransitioningManager playerViewController:playerForContentTransitionType:]
  -[SVVideoViewControllerContentTransitioningManager queueProvider]
  -[SVVideoViewControllerContentTransitioningManager skipLockObserverFactory]
  -[SVVideoViewControllerContentTransitioningManager setSkipLockObserver:]
  -[SVVideoViewControllerContentTransitioningManager skipLockObserver]
  -[SVVideoViewControllerContentTransitioningManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoViewControllerContentTransitioningManager timeProviderFactory]
  -[SVVideoViewControllerContentTransitioningManager playerProvider]
  -[SVVideoViewControllerContentTransitioningManager videoForContentTransitionType:]
  -[SVVideoViewControllerContentTransitioningManager visiblePercentageManager]
  -[SVVideoViewControllerContentTransitioningManager setVisibilityReporterForAppearingVideo:]
  -[SVVideoViewControllerContentTransitioningManager setVisibilityReporterForDisappearingVideo:]
  -[SVVideoViewControllerContentTransitioningManager visibilityReporterForDisappearingVideo]
  -[SVVideoViewControllerContentTransitioningManager visibilityReporterForAppearingVideo]
  -[SVVideoViewControllerContentTransitioningManager visibilityReporter]
  -[SVVideoViewControllerContentTransitioningManager setTimeProvider:]
  -[SVVideoViewControllerContentTransitioningManager seekerFactory]
  -[SVVideoViewControllerContentTransitioningManager setSeeker:]
  -[SVVideoViewControllerContentTransitioningManager initWithVisiblePercentageManager:visibilityReporter:queueProvider:playerProvider:skipLockObserverFactory:timeProviderFactory:seekerFactory:]


SVVolumeAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVolumeAssembly loadInRegistry:]


SVVideoProviderManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoProviderProviding, SVVideoSkipThresholdProviding, SVVideoEventTrackerProviding, SVVideoURLProviderFactory>
 @property  <SVVideoProviderFactory> *videoProviderFactory
 @property  <SVVideoAdProviderFactory> *videoAdProviderFactory
 @property  SVWeakObjectCache *videoProviders
 @property  SVWeakObjectCache *videoAdProviders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoProviderManager .cxx_destruct]
  -[SVVideoProviderManager videoProviderFactory]
  -[SVVideoProviderManager videoAdProviderFactory]
  -[SVVideoProviderManager videoEventTrackerForVideo:]
  -[SVVideoProviderManager videoAdProviderForVideo:]
  -[SVVideoProviderManager videoProviders]
  -[SVVideoProviderManager videoProviderForVideo:]
  -[SVVideoProviderManager videoAdProviders]
  -[SVVideoProviderManager skipThresholdForVideo:]
  -[SVVideoProviderManager createURLProviderForVideo:]
  -[SVVideoProviderManager initWithVideoProviderFactory:videoAdProviderFactory:]


SVVideoAccessoryItemFadeInTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitioning>
 @property  UIViewPropertyAnimator *animator
 @property  BOOL animated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemFadeInTransitionCoordinator animated]
  -[SVVideoAccessoryItemFadeInTransitionCoordinator setAnimator:]
  -[SVVideoAccessoryItemFadeInTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemFadeInTransitionCoordinator animator]
  -[SVVideoAccessoryItemFadeInTransitionCoordinator .cxx_destruct]
  -[SVVideoAccessoryItemFadeInTransitionCoordinator animateWithContext:]


SVViewControllerPresentingManager : NSObject /usr/lib/libSystem.B.dylib <SVViewControllerPresenting>
 @property  <SVModalPresentationViewControllerProviding> *modalPresentationViewControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVViewControllerPresentingManager .cxx_destruct]
  -[SVViewControllerPresentingManager presentViewController:animated:sourceView:sourceRect:]
  -[SVViewControllerPresentingManager presentViewController:animated:]
  -[SVViewControllerPresentingManager modalPresentationViewControllerProvider]
  -[SVViewControllerPresentingManager initWithModalPresentationViewControllerProvider:]


SVTimeBasedAction : NSObject /usr/lib/libSystem.B.dylib
 @property  double time
 @property  @? block

  // instance methods
  -[SVTimeBasedAction .cxx_destruct]
  -[SVTimeBasedAction time]
  -[SVTimeBasedAction block]
  -[SVTimeBasedAction initWithTime:block:]


SVPlayerStatusObserver : NSObject /usr/lib/libSystem.B.dylib <SVPlayerStatusObserving>
 @property  SVPlayer *player
 @property  SVKeyValueObserver *statusObserver
 @property  long long status
 @property  @? changeBlock
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerStatusObserver onChange:]
  -[SVPlayerStatusObserver .cxx_destruct]
  -[SVPlayerStatusObserver player]
  -[SVPlayerStatusObserver changeBlock]
  -[SVPlayerStatusObserver error]
  -[SVPlayerStatusObserver setStatus:]
  -[SVPlayerStatusObserver initWithPlayer:]
  -[SVPlayerStatusObserver status]
  -[SVPlayerStatusObserver statusObserver]


SVVideoGravityProvider : NSObject /usr/lib/libSystem.B.dylib <SVVideoGravityProviding>
 @property  <SVVideoPresentationSizeObserving> *presentationSizeObserver
 @property  <SVVideoViewControllerSizeObserving> *videoViewControllerSizeObserver
 @property  NSString *videoGravity
 @property  NSString *portraitVideoGravity
 @property  NSString *landscapeVideoGravity
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoGravityProvider videoGravity]
  -[SVVideoGravityProvider setVideoGravity:]
  -[SVVideoGravityProvider onChange:]
  -[SVVideoGravityProvider .cxx_destruct]
  -[SVVideoGravityProvider changeBlock]
  -[SVVideoGravityProvider initWithPresentationSizeObserver:videoViewControllerSizeObserver:]
  -[SVVideoGravityProvider updateVideoGravityWithPresentationSize:videoViewControllerSize:]
  -[SVVideoGravityProvider videoViewControllerSizeObserver]
  -[SVVideoGravityProvider presentationSizeObserver]
  -[SVVideoGravityProvider portraitVideoGravity]
  -[SVVideoGravityProvider landscapeVideoGravity]
  -[SVVideoGravityProvider setPortraitVideoGravity:]
  -[SVVideoGravityProvider setLandscapeVideoGravity:]


SVVideoViewControllerSizeObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoViewControllerSizeObserving>
 @property  SVVideoViewController *videoViewController
 @property  SVKeyValueObserver *boundsObserver
 @property  {CGSize=dd} size
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoViewControllerSizeObserver videoViewController]
  -[SVVideoViewControllerSizeObserver onChange:]
  -[SVVideoViewControllerSizeObserver size]
  -[SVVideoViewControllerSizeObserver .cxx_destruct]
  -[SVVideoViewControllerSizeObserver changeBlock]
  -[SVVideoViewControllerSizeObserver setSize:]
  -[SVVideoViewControllerSizeObserver initWithVideoViewController:]
  -[SVVideoViewControllerSizeObserver boundsObserver]


SVMutableVideoMetadata : NSObject /usr/lib/libSystem.B.dylib <SVVideoMetadata>
 @property  double duration
 @property  double time
 @property  double framerate
 @property  double timePlayed
 @property  BOOL muted
 @property  double volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVMutableVideoMetadata muted]
  -[SVMutableVideoMetadata setMuted:]
  -[SVMutableVideoMetadata volume]
  -[SVMutableVideoMetadata setVolume:]
  -[SVMutableVideoMetadata time]
  -[SVMutableVideoMetadata framerate]
  -[SVMutableVideoMetadata setFramerate:]
  -[SVMutableVideoMetadata setTime:]
  -[SVMutableVideoMetadata setDuration:]
  -[SVMutableVideoMetadata timePlayed]
  -[SVMutableVideoMetadata setTimePlayed:]
  -[SVMutableVideoMetadata duration]


SVCoreAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVCoreAssembly loadInRegistry:]


SVUIAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVUIAssembly loadInRegistry:]


SVVideoPresentationSizeObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPresentationSizeObserving>
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  SVKeyValueObserver *presentationSizeObserver
 @property  {CGSize=dd} presentationSize
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPresentationSizeObserver onChange:]
  -[SVVideoPresentationSizeObserver .cxx_destruct]
  -[SVVideoPresentationSizeObserver changeBlock]
  -[SVVideoPresentationSizeObserver presentationSize]
  -[SVVideoPresentationSizeObserver setPresentationSize:]
  -[SVVideoPresentationSizeObserver initWithPlayerItemObserver:]
  -[SVVideoPresentationSizeObserver playerItemObserver]
  -[SVVideoPresentationSizeObserver presentationSizeObserver]


SVVideoGravityManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoGravityProviderFactory> *videoGravityProviderFactory
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  <SVVideoGravityProviding> *videoGravityProviderForCurrentVideo
 @property  <SVVideoGravityProviding> *videoGravityProviderForTransitioningVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoGravityManager .cxx_destruct]
  -[SVVideoGravityManager videoViewControllerProvider]
  -[SVVideoGravityManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoGravityManager videoGravityProviderFactory]
  -[SVVideoGravityManager setVideoGravityProviderForTransitioningVideo:]
  -[SVVideoGravityManager videoGravityProviderForTransitioningVideo]
  -[SVVideoGravityManager setVideoGravityProviderForCurrentVideo:]
  -[SVVideoGravityManager videoGravityProviderForCurrentVideo]
  -[SVVideoGravityManager initWithVideoGravityProviderFactory:videoViewControllerProvider:]


SVVideoSkipThresholdObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipThresholdObserving>
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  <SVVideoSkipThreshold> *thresholdProvider
 @property  BOOL loading
 @property  @? block
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipThresholdObserver loading]
  -[SVVideoSkipThresholdObserver onChange:]
  -[SVVideoSkipThresholdObserver .cxx_destruct]
  -[SVVideoSkipThresholdObserver block]
  -[SVVideoSkipThresholdObserver thresholdProvider]
  -[SVVideoSkipThresholdObserver loadingCompletedWithThreshold:]
  -[SVVideoSkipThresholdObserver loadingStateObserver]
  -[SVVideoSkipThresholdObserver initWithLoadingStateObserver:thresholdProvider:]


SVVideoPlaybackEventTrackerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackEventTrackerFactory>
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackEventTrackerFactory .cxx_destruct]
  -[SVVideoPlaybackEventTrackerFactory createEventTrackerForVideo:]
  -[SVVideoPlaybackEventTrackerFactory loadingStateObserverFactory]
  -[SVVideoPlaybackEventTrackerFactory playbackStateObserverFactory]
  -[SVVideoPlaybackEventTrackerFactory initWithPlaybackStateObserverFactory:loadingStateObserverFactory:]


SVGestureInteractionFactory : NSObject /usr/lib/libSystem.B.dylib <SVGestureInteractionFactory>
 @property  <SVInteractionContextFactory> *interactionContextFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVGestureInteractionFactory .cxx_destruct]
  -[SVGestureInteractionFactory interactionContextFactory]
  -[SVGestureInteractionFactory createInteractionWithGestureRecognizer:]
  -[SVGestureInteractionFactory initWithInteractionContextFactory:]


SVPlaybackTransitionCoordinatorFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlaybackTransitionCoordinatorFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackTransitionCoordinatorFactory createTransitionCoordinator]


SVPrefetcher : NSObject /usr/lib/libSystem.B.dylib <SVPrefetcher>
 @property  unsigned long prefetchPolicy
 @property  SVPlaybackCoordinator *playbackCoordinator
 @property  <SVVideoBufferObserving> *bufferObserver
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  <SVVideoLoadingProgressObserving> *loadingProgressObserver
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrefetcher playbackCoordinator]
  -[SVPrefetcher .cxx_destruct]
  -[SVPrefetcher playbackProgressObserver]
  -[SVPrefetcher initWithPrefetchPolicy:playbackCoordinator:bufferObserver:loadingStateObserver:loadingProgressObserver:playbackProgressObserver:]
  -[SVPrefetcher loadingProgressObserver]
  -[SVPrefetcher loadingStateObserver]
  -[SVPrefetcher prefetchingConditionsChanged]
  -[SVPrefetcher prefetchPolicy]
  -[SVPrefetcher bufferObserver]


SVVideoPlaybackStateObserverStateContext : NSObject /usr/lib/libSystem.B.dylib <NFStateMachineContextType>
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackStateObserverStateContext .cxx_destruct]
  -[SVVideoPlaybackStateObserverStateContext error]
  -[SVVideoPlaybackStateObserverStateContext initWithError:]


SVVideoControlsVisibilityManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver, SVVideoControlsVisibilityManager, SVVideoViewControllerControlsVisibilityDelegate, SVVideoViewControllerAppearanceObserver>
 @property  SVTimeline *timeline
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoControlsTimingProviding> *timingProvider
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  NSMutableSet *items
 @property  SVTimeBasedAction *autoAppearanceAction
 @property  BOOL autoHidingEnabled
 @property  BOOL shouldIgnoreControlItemHideability
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoControlsVisibilityManager removeItem:]
  -[SVVideoControlsVisibilityManager items]
  -[SVVideoControlsVisibilityManager .cxx_destruct]
  -[SVVideoControlsVisibilityManager addItem:]
  -[SVVideoControlsVisibilityManager timeline]
  -[SVVideoControlsVisibilityManager queueProvider]
  -[SVVideoControlsVisibilityManager videoViewControllerProvider]
  -[SVVideoControlsVisibilityManager videoViewControllerWillAppear:]
  -[SVVideoControlsVisibilityManager videoViewControllerDidAppear:]
  -[SVVideoControlsVisibilityManager videoViewControllerWillDisappear:]
  -[SVVideoControlsVisibilityManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoControlsVisibilityManager loadingStateObserverFactory]
  -[SVVideoControlsVisibilityManager initWithTimeline:queueProvider:timingProvider:loadingStateObserverFactory:playbackStateObserverFactory:videoViewControllerProvider:]
  -[SVVideoControlsVisibilityManager loadingStateObserver]
  -[SVVideoControlsVisibilityManager playbackStateObserverFactory]
  -[SVVideoControlsVisibilityManager updateAutoHidingState]
  -[SVVideoControlsVisibilityManager setPlaybackStateObserver:]
  -[SVVideoControlsVisibilityManager setLoadingStateObserver:]
  -[SVVideoControlsVisibilityManager timingProvider]
  -[SVVideoControlsVisibilityManager scheduleAutoAppearanceWithTimeInterval:]
  -[SVVideoControlsVisibilityManager playbackStateObserver]
  -[SVVideoControlsVisibilityManager autoAppearanceAction]
  -[SVVideoControlsVisibilityManager setAutoAppearanceAction:]
  -[SVVideoControlsVisibilityManager shouldIgnoreControlItemHideability]
  -[SVVideoControlsVisibilityManager itemsPassingTest:]
  -[SVVideoControlsVisibilityManager setShouldIgnoreControlItemHideability:]
  -[SVVideoControlsVisibilityManager videoViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:]
  -[SVVideoControlsVisibilityManager autoHidingEnabled]
  -[SVVideoControlsVisibilityManager setAutoHidingEnabled:]


SVScrubbingManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVScrubbingPolicyHandling> *policyHandler
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVScrubbingManager policyHandler]
  -[SVScrubbingManager .cxx_destruct]
  -[SVScrubbingManager videoViewControllerProvider]
  -[SVScrubbingManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVScrubbingManager initWithPolicyHandler:videoViewControllerProvider:]


SVPlaybackTransitionCoordinatorStateMachineContext : NSObject /usr/lib/libSystem.B.dylib <NFStateMachineContextType>
 @property  <SVPlaybackTransitionContext> *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackTransitionCoordinatorStateMachineContext context]
  -[SVPlaybackTransitionCoordinatorStateMachineContext .cxx_destruct]
  -[SVPlaybackTransitionCoordinatorStateMachineContext initWithTransitionContext:]


SVVideoPlaybackEventTracker : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackEventTracking>
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  NFStateMachine *stateMachine
 @property  NSError *error
 @property  @? playbackStartBlock
 @property  @? playbackPausedBlock
 @property  @? playbackResumedBlock
 @property  @? playbackFinishedBlock
 @property  @? playbackFailedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackEventTracker stateMachine]
  -[SVVideoPlaybackEventTracker setError:]
  -[SVVideoPlaybackEventTracker .cxx_destruct]
  -[SVVideoPlaybackEventTracker error]
  -[SVVideoPlaybackEventTracker onPlaybackStart:]
  -[SVVideoPlaybackEventTracker onPlaybackPaused:]
  -[SVVideoPlaybackEventTracker onPlaybackResumed:]
  -[SVVideoPlaybackEventTracker onPlaybackFinished:]
  -[SVVideoPlaybackEventTracker onPlaybackFailed:]
  -[SVVideoPlaybackEventTracker loadingStateObserver]
  -[SVVideoPlaybackEventTracker initWithPlaybackStateObserver:loadingStateObserver:]
  -[SVVideoPlaybackEventTracker playbackStateObserver]
  -[SVVideoPlaybackEventTracker playbackStartBlock]
  -[SVVideoPlaybackEventTracker playbackResumedBlock]
  -[SVVideoPlaybackEventTracker playbackPausedBlock]
  -[SVVideoPlaybackEventTracker playbackFinishedBlock]
  -[SVVideoPlaybackEventTracker playbackFailedBlock]


SVVideoViewController : AVPlayerViewController /System/Library/Frameworks/AVFoundation.framework/AVFoundation <AVPlayerViewControllerDelegatePrivate>
 @property  <SVVideoVisibilityManager> *visibilityManager
 @property  NSMutableArray *appearanceObservers
 @property  UIView *sourceViewForPresentation
 @property  UIView *targetViewForDismissal
 @property  <SVVideoViewControllerFullscreenPresentationDelegate> *fullscreenPresentationDelegate
 @property  <SVVideoViewControllerControlsVisibilityDelegate> *controlsVisibilityDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoViewController .cxx_destruct]
  -[SVVideoViewController playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:]
  -[SVVideoViewController playerViewController:targetViewForDismissalAnimationWithProposedTargetView:]
  -[SVVideoViewController playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:]
  -[SVVideoViewController playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:]
  -[SVVideoViewController viewDidAppear:]
  -[SVVideoViewController viewWillAppear:]
  -[SVVideoViewController viewDidDisappear:]
  -[SVVideoViewController viewWillDisappear:]
  -[SVVideoViewController addAppearanceObserver:]
  -[SVVideoViewController initWithVisiblityManager:]
  -[SVVideoViewController setControlsVisibilityDelegate:]
  -[SVVideoViewController setSourceViewForPresentation:]
  -[SVVideoViewController setTargetViewForDismissal:]
  -[SVVideoViewController appearanceObservers]
  -[SVVideoViewController fullscreenPresentationDelegate]
  -[SVVideoViewController sourceViewForPresentation]
  -[SVVideoViewController targetViewForDismissal]
  -[SVVideoViewController controlsVisibilityDelegate]
  -[SVVideoViewController presentFromSourceView:completion:]
  -[SVVideoViewController dismissToTargetView:completion:]
  -[SVVideoViewController removeAppearanceObserver:]
  -[SVVideoViewController setFullscreenPresentationDelegate:]
  -[SVVideoViewController visibilityManager]


SVFullscreenTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SVFullscreenTransitionContext>
 @property  UIView *contentOverlayView
 @property  UIView *fromView
 @property  UIView *toView
 @property  double transitionDuration
 @property  BOOL interactive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVFullscreenTransitionContext toView]
  -[SVFullscreenTransitionContext isInteractive]
  -[SVFullscreenTransitionContext transitionDuration]
  -[SVFullscreenTransitionContext fromView]
  -[SVFullscreenTransitionContext .cxx_destruct]
  -[SVFullscreenTransitionContext contentOverlayView]
  -[SVFullscreenTransitionContext initWithContentOverlayView:fromView:toView:transitionDuration:interactive:]


SVWeakReferenceObject : NSObject /usr/lib/libSystem.B.dylib
 @property  id object

  // class methods
  +[SVWeakReferenceObject withObject:]

  // instance methods
  -[SVWeakReferenceObject object]
  -[SVWeakReferenceObject initWithObject:]
  -[SVWeakReferenceObject .cxx_destruct]
  -[SVWeakReferenceObject isEqual:]


SVBundleClass : NSObject /usr/lib/libSystem.B.dylib

SVPlaylistUIAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaylistUIAssembly loadInRegistry:]


SVMaterialVideoPlayButton : SVVideoPlayButton
 @property  AVBackgroundView *backgroundView

  // instance methods
  -[SVMaterialVideoPlayButton backgroundView]
  -[SVMaterialVideoPlayButton initWithFrame:]
  -[SVMaterialVideoPlayButton .cxx_destruct]
  -[SVMaterialVideoPlayButton accessibilityTraits]
  -[SVMaterialVideoPlayButton updateBackgroundColor]
  -[SVMaterialVideoPlayButton layoutSubviews]


SVCustomControlsLayoutGuideProvider : NSObject /usr/lib/libSystem.B.dylib <SVCustomControlsLayoutGuideProviding>
 @property  UILayoutGuide *accessoryBarLayoutGuide
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  UILayoutGuide *transportControlsAreaLayoutGuide
 @property  UILayoutGuide *displayModeControlsAreaLayoutGuide
 @property  UILayoutGuide *volumeControlsAreaLayoutGuide
 @property  UILayoutGuide *unobscuredCenterAreaLayoutGuide
 @property  UILayoutGuide *animatedUnobscuredCenterAreaLayoutGuide
 @property  UILayoutGuide *unobscuredTopAreaLayoutGuide
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVCustomControlsLayoutGuideProvider .cxx_destruct]
  -[SVCustomControlsLayoutGuideProvider transportControlsAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider displayModeControlsAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider volumeControlsAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider unobscuredCenterAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider animatedUnobscuredCenterAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider unobscuredTopAreaLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider videoViewControllerProvider]
  -[SVCustomControlsLayoutGuideProvider accessoryBarLayoutGuide]
  -[SVCustomControlsLayoutGuideProvider initWithViewControllerProvider:accessoryBarView:]
  -[SVCustomControlsLayoutGuideProvider setAccessoryBarLayoutGuide:]
  -[SVCustomControlsLayoutGuideProvider setVideoViewControllerProvider:]


SVControlItemInteractionFactory : NSObject /usr/lib/libSystem.B.dylib <SVControlItemInteractionFactory>
 @property  <SVInteractionContextFactory> *interactionContextFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVControlItemInteractionFactory .cxx_destruct]
  -[SVControlItemInteractionFactory interactionContextFactory]
  -[SVControlItemInteractionFactory initWithInteractionContextFactory:]
  -[SVControlItemInteractionFactory createInteractionWithControlItem:]


SVVideoDurationObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoDurationObserving>
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  SVKeyValueObserver *playerItemDurationObserver
 @property  double duration
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoDurationObserver onChange:]
  -[SVVideoDurationObserver .cxx_destruct]
  -[SVVideoDurationObserver changeBlock]
  -[SVVideoDurationObserver setDuration:]
  -[SVVideoDurationObserver updateDuration:]
  -[SVVideoDurationObserver duration]
  -[SVVideoDurationObserver initWithPlayerItemObserver:]
  -[SVVideoDurationObserver playerItemObserver]
  -[SVVideoDurationObserver setPlayerItemDurationObserver:]
  -[SVVideoDurationObserver playerItemDurationObserver]


SVVideoPlaybackPolicyObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackPolicyObserverFactory>
 @property  NSObject<SVVideoPlaybackPolicy> *playbackPolicy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackPolicyObserverFactory .cxx_destruct]
  -[SVVideoPlaybackPolicyObserverFactory playbackPolicy]
  -[SVVideoPlaybackPolicyObserverFactory initWithPlaybackPolicy:]
  -[SVVideoPlaybackPolicyObserverFactory createPlaybackPolicyObserver]


SVVideoAccessoryBarManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  SVVideoAccessoryBarView *accessoryBarView
 @property  SVTimeline *timeline
 @property  <SVVideoControlsTimingProviding> *timingProvider
 @property  <SVAccessoryItem> *nowPlayingItem
 @property  <SVAccessoryItem> *moreFromItem
 @property  <SVAccessoryItem> *upNextItem
 @property  <SVAccessoryItem> *discoverMoreItem
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVAccessoryItemContentManager> *contentManager
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  SVTimeBasedAction *upNextItemDisplayAction
 @property  NSTimer *timer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryBarManager timer]
  -[SVVideoAccessoryBarManager setTimer:]
  -[SVVideoAccessoryBarManager .cxx_destruct]
  -[SVVideoAccessoryBarManager nowPlayingItem]
  -[SVVideoAccessoryBarManager timeline]
  -[SVVideoAccessoryBarManager queueProvider]
  -[SVVideoAccessoryBarManager playbackProgressObserverFactory]
  -[SVVideoAccessoryBarManager setPlaybackProgressObserver:]
  -[SVVideoAccessoryBarManager playbackProgressObserver]
  -[SVVideoAccessoryBarManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoAccessoryBarManager loadingStateObserverFactory]
  -[SVVideoAccessoryBarManager loadingStateObserver]
  -[SVVideoAccessoryBarManager playbackStateObserverFactory]
  -[SVVideoAccessoryBarManager setPlaybackStateObserver:]
  -[SVVideoAccessoryBarManager setLoadingStateObserver:]
  -[SVVideoAccessoryBarManager timingProvider]
  -[SVVideoAccessoryBarManager playbackStateObserver]
  -[SVVideoAccessoryBarManager initWithAccessoryBarView:timeline:timingProvider:nowPlayingAccessoryItem:moreFromAccessoryItem:upNextAccessoryItem:discoverMoreAccessoryItem:playbackProgressObserverFactory:playbackStateObserverFactory:queueProvider:loadingStateObserverFactory:contentManager:]
  -[SVVideoAccessoryBarManager updateAccessoryBarToStateForVideo:]
  -[SVVideoAccessoryBarManager cancelScheduledNowPlayingOrMoreFromTransition]
  -[SVVideoAccessoryBarManager cancelDisplayOfUpNextItem]
  -[SVVideoAccessoryBarManager accessoryBarView]
  -[SVVideoAccessoryBarManager upNextItem]
  -[SVVideoAccessoryBarManager contentManager]
  -[SVVideoAccessoryBarManager scheduleNowPlayingOrMoreFromTransitionIfNeeded]
  -[SVVideoAccessoryBarManager scheduleDisplayOfUpNextItemWithInterval:]
  -[SVVideoAccessoryBarManager upNextItemDisplayAction]
  -[SVVideoAccessoryBarManager setUpNextItemDisplayAction:]
  -[SVVideoAccessoryBarManager discoverMoreItem]
  -[SVVideoAccessoryBarManager scheduleMoreFromTransitionIfNeeded]
  -[SVVideoAccessoryBarManager moreFromItem]
  -[SVVideoAccessoryBarManager scheduleNowPlayingTransitionIfNeeded]
  -[SVVideoAccessoryBarManager scheduleTransitionToLeadingItem:withTimeInterval:completionBlock:]


SVVideoPlaybackStateObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackStateObserving>
 @property  <SVPlayerStatusObserving> *statusObserver
 @property  <SVVideoPlaybackPositionObserving> *playbackPositionObserver
 @property  <SVPlayerTimeControlStatusObserving> *timeControlStatusObserver
 @property  NFStateMachine *stateMachine
 @property  unsigned long state
 @property  NSError *error
 @property  BOOL playing
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackStateObserver isPlaying]
  -[SVVideoPlaybackStateObserver stateMachine]
  -[SVVideoPlaybackStateObserver onChange:]
  -[SVVideoPlaybackStateObserver setError:]
  -[SVVideoPlaybackStateObserver setState:]
  -[SVVideoPlaybackStateObserver .cxx_destruct]
  -[SVVideoPlaybackStateObserver changeBlock]
  -[SVVideoPlaybackStateObserver error]
  -[SVVideoPlaybackStateObserver state]
  -[SVVideoPlaybackStateObserver timeControlStatusObserver]
  -[SVVideoPlaybackStateObserver statusObserver]
  -[SVVideoPlaybackStateObserver initWithStatusObserver:playbackPositionObserver:timeControlStatusObserver:]
  -[SVVideoPlaybackStateObserver playbackPositionObserver]


SVPrefetchManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoQueueObserving> *queueObserver
 @property  <SVPrefetcherFactory> *prefetcherFactory
 @property  NSMutableDictionary *prefetchers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrefetchManager .cxx_destruct]
  -[SVPrefetchManager queueProvider]
  -[SVPrefetchManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVPrefetchManager queueObserver]
  -[SVPrefetchManager createPrefetcherForVideo:afterVideo:]
  -[SVPrefetchManager initWithPrefetcherFactory:queueProvider:queueObserver:]
  -[SVPrefetchManager updatePrefetchersWithCurrentVideo:]
  -[SVPrefetchManager prefetchers]
  -[SVPrefetchManager prefetcherFactory]


SVVideoAccessoryBarDisplayModeTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  SVVideoAccessoryBarDisplayModeTransitionContext *context
 @property  SVVideoAccessoryBarDisplayState *fromState
 @property  SVVideoAccessoryBarDisplayState *toState
 @property  <SVVideoAccessoryItemDisplayModeTransitioning> *transitionCoordinator

  // instance methods
  -[SVVideoAccessoryBarDisplayModeTransition context]
  -[SVVideoAccessoryBarDisplayModeTransition performTransitionWithCompletionBlock:]
  -[SVVideoAccessoryBarDisplayModeTransition fromState]
  -[SVVideoAccessoryBarDisplayModeTransition .cxx_destruct]
  -[SVVideoAccessoryBarDisplayModeTransition setContext:]
  -[SVVideoAccessoryBarDisplayModeTransition cancel]
  -[SVVideoAccessoryBarDisplayModeTransition transitionCoordinator]
  -[SVVideoAccessoryBarDisplayModeTransition toState]
  -[SVVideoAccessoryBarDisplayModeTransition initWithFromState:toState:transitionCoordinator:]


SVVideoPlaybackController : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackController>
 @property  SVVideoPlaybackManager *playbackManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackController play]
  -[SVVideoPlaybackController pause]
  -[SVVideoPlaybackController .cxx_destruct]
  -[SVVideoPlaybackController playbackManager]
  -[SVVideoPlaybackController initWithPlaybackManager:]


SVPlayerTimeControlStatusObserver : NSObject /usr/lib/libSystem.B.dylib <SVPlayerTimeControlStatusObserving>
 @property  SVPlayer *player
 @property  SVKeyValueObserver *timeControlStatusObserver
 @property  long long timeControlStatus
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerTimeControlStatusObserver setTimeControlStatus:]
  -[SVPlayerTimeControlStatusObserver onChange:]
  -[SVPlayerTimeControlStatusObserver .cxx_destruct]
  -[SVPlayerTimeControlStatusObserver player]
  -[SVPlayerTimeControlStatusObserver changeBlock]
  -[SVPlayerTimeControlStatusObserver timeControlStatus]
  -[SVPlayerTimeControlStatusObserver initWithPlayer:]
  -[SVPlayerTimeControlStatusObserver timeControlStatusObserver]


SVVideoPeriodicTimeObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPeriodicTimeObserving>
 @property  SVPlayer *player
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  <SVTimeConverting> *timeConverter
 @property  id timeObserverToken
 @property  double time
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPeriodicTimeObserver onChange:]
  -[SVVideoPeriodicTimeObserver dealloc]
  -[SVVideoPeriodicTimeObserver .cxx_destruct]
  -[SVVideoPeriodicTimeObserver time]
  -[SVVideoPeriodicTimeObserver player]
  -[SVVideoPeriodicTimeObserver changeBlock]
  -[SVVideoPeriodicTimeObserver setTime:]
  -[SVVideoPeriodicTimeObserver timeConverter]
  -[SVVideoPeriodicTimeObserver playbackStateObserver]
  -[SVVideoPeriodicTimeObserver updateTime:]
  -[SVVideoPeriodicTimeObserver startPeriodicTimeObserverForPlayer:]
  -[SVVideoPeriodicTimeObserver stopPeriodicTimeObserverForPlayer:]
  -[SVVideoPeriodicTimeObserver setTimeObserverToken:]
  -[SVVideoPeriodicTimeObserver timeObserverToken]
  -[SVVideoPeriodicTimeObserver initWithPlayer:playbackStateObserver:timeConverter:]


SVVideoPlaybackStateObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackStateObserverFactory>
 @property  <SVPlayerStatusObserverFactory> *statusObserverFactory
 @property  <SVVideoPlaybackPositionObserverFactory> *playbackPositionObserverFactory
 @property  <SVPlayerTimeControlStatusObserverFactory> *timeControlStatusObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackStateObserverFactory .cxx_destruct]
  -[SVVideoPlaybackStateObserverFactory createPlaybackStateObserverForVideo:]
  -[SVVideoPlaybackStateObserverFactory statusObserverFactory]
  -[SVVideoPlaybackStateObserverFactory playbackPositionObserverFactory]
  -[SVVideoPlaybackStateObserverFactory timeControlStatusObserverFactory]
  -[SVVideoPlaybackStateObserverFactory initWithStatusObserverFactory:playbackPositionObserverFactory:timeControlStatusObserverFactory:]


SVPlayerItemFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemFactory>
 @property  NSArray *automaticallyLoadedAssetKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemFactory .cxx_destruct]
  -[SVPlayerItemFactory automaticallyLoadedAssetKeys]
  -[SVPlayerItemFactory createPlayerItemWithAsset:]
  -[SVPlayerItemFactory initWithAutomaticallyLoadedAssetKeys:]


SVVideoQueueManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver, SVVideoQueueProviding, SVVideoQueueObserving, SVVideoQueueManager, SVVideoViewControllerAppearanceObserver>
 @property  <SVVideoQueue> *queue
 @property  <SVVideoQueue> *pendingQueue
 @property  NSMutableArray *updateBlocks
 @property  NSMutableArray *modifiers
 @property  <SVVideo> *video
 @property  BOOL locked
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoQueueManager updateBlocks]
  -[SVVideoQueueManager locked]
  -[SVVideoQueueManager .cxx_destruct]
  -[SVVideoQueueManager initWithQueue:]
  -[SVVideoQueueManager addModifier:]
  -[SVVideoQueueManager setQueue:]
  -[SVVideoQueueManager queue]
  -[SVVideoQueueManager modifiers]
  -[SVVideoQueueManager video]
  -[SVVideoQueueManager removeModifier:]
  -[SVVideoQueueManager setVideo:]
  -[SVVideoQueueManager setLocked:]
  -[SVVideoQueueManager pendingQueue]
  -[SVVideoQueueManager setPendingQueue:]
  -[SVVideoQueueManager replaceCurrentQueueWithQueue:]
  -[SVVideoQueueManager videoViewControllerDidAppear:]
  -[SVVideoQueueManager videoViewControllerWillDisappear:]
  -[SVVideoQueueManager onUpdate:]
  -[SVVideoQueueManager willTransitionToVideo:withTransitionCoordinator:]


SVModalPresentationViewControllerProvider : NSObject /usr/lib/libSystem.B.dylib <SVModalPresentationViewControllerProviding>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  UIViewController *viewControllerForModalPresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVModalPresentationViewControllerProvider .cxx_destruct]
  -[SVModalPresentationViewControllerProvider viewControllerForModalPresentation]
  -[SVModalPresentationViewControllerProvider videoViewControllerProvider]
  -[SVModalPresentationViewControllerProvider initWithVideoViewControllerProvider:]


SVVideoViewControllerSizeObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoViewControllerSizeObserverFactory>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoViewControllerSizeObserverFactory .cxx_destruct]
  -[SVVideoViewControllerSizeObserverFactory videoViewControllerProvider]
  -[SVVideoViewControllerSizeObserverFactory initWithVideoViewControllerProvider:]
  -[SVVideoViewControllerSizeObserverFactory createViewControllerSizeObserver]


SVPlayerItemLoaderManager : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemLoaderProviding>
 @property  <SVPlayerItemLoaderFactory> *playerItemLoaderFactory
 @property  SVWeakObjectCache *playerItemLoaders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemLoaderManager .cxx_destruct]
  -[SVPlayerItemLoaderManager playerItemLoaderForVideo:]
  -[SVPlayerItemLoaderManager playerItemLoaders]
  -[SVPlayerItemLoaderManager playerItemLoaderFactory]
  -[SVPlayerItemLoaderManager initWithPlayerItemLoaderFactory:]


SVPlaybackTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVInteractivePlaybackTransitioning, SVPlaybackTransitionCoordinator>
 @property  NSMutableArray *transitionAlongsideBlocks
 @property  NSMutableArray *completionBlocks
 @property  <SVPlaybackTransitionContext> *context
 @property  NFStateMachine *stateMachine
 @property  NFStateMachineState *transitioningState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackTransitionCoordinator context]
  -[SVPlaybackTransitionCoordinator completionBlocks]
  -[SVPlaybackTransitionCoordinator stateMachine]
  -[SVPlaybackTransitionCoordinator init]
  -[SVPlaybackTransitionCoordinator .cxx_destruct]
  -[SVPlaybackTransitionCoordinator updateInteractiveTransition:]
  -[SVPlaybackTransitionCoordinator setContext:]
  -[SVPlaybackTransitionCoordinator cancelInteractiveTransition]
  -[SVPlaybackTransitionCoordinator finishInteractiveTransition]
  -[SVPlaybackTransitionCoordinator transitioningState]
  -[SVPlaybackTransitionCoordinator transitionAlongside:withCompletionBlock:]
  -[SVPlaybackTransitionCoordinator transitionAlongsideBlocks]
  -[SVPlaybackTransitionCoordinator startInteractiveTransitionWithContext:]


SVVideoVolumeObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoVolumeObserving>
 @property  SVPlayer *player
 @property  AVAudioSession *audioSession
 @property  SVKeyValueObserver *outputVolumeObserver
 @property  SVKeyValueObserver *muteStateObserver
 @property  BOOL muted
 @property  float volume
 @property  @? volumeChangeBlock
 @property  @? muteStateChangeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVolumeObserver muted]
  -[SVVideoVolumeObserver volume]
  -[SVVideoVolumeObserver volumeChanged:]
  -[SVVideoVolumeObserver audioSession]
  -[SVVideoVolumeObserver .cxx_destruct]
  -[SVVideoVolumeObserver player]
  -[SVVideoVolumeObserver muteStateChanged:]
  -[SVVideoVolumeObserver updateWithVolume:muted:]
  -[SVVideoVolumeObserver volumeChangeBlock]
  -[SVVideoVolumeObserver muteStateChangeBlock]
  -[SVVideoVolumeObserver onVolumeChange:]
  -[SVVideoVolumeObserver onMuteStateChange:]
  -[SVVideoVolumeObserver outputVolumeObserver]
  -[SVVideoVolumeObserver muteStateObserver]
  -[SVVideoVolumeObserver initWithPlayer:audioSession:]


SVDiscoverMoreButtonInteractionHandler : NSObject /usr/lib/libSystem.B.dylib <SVInteractionHandling>
 @property  <SVDiscoverMoreInteractionHandling> *discoverMoreInteractionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVDiscoverMoreButtonInteractionHandler .cxx_destruct]
  -[SVDiscoverMoreButtonInteractionHandler handleInteractionWithContext:]
  -[SVDiscoverMoreButtonInteractionHandler discoverMoreInteractionHandler]
  -[SVDiscoverMoreButtonInteractionHandler initWithDiscoverMoreInteractionHandler:]


SVPlayerItemObserver : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemObserving>
 @property  AVPlayer *player
 @property  SVKeyValueObserver *observer
 @property  AVPlayerItem *item
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemObserver item]
  -[SVPlayerItemObserver onChange:]
  -[SVPlayerItemObserver .cxx_destruct]
  -[SVPlayerItemObserver setItem:]
  -[SVPlayerItemObserver player]
  -[SVPlayerItemObserver changeBlock]
  -[SVPlayerItemObserver initWithPlayer:]
  -[SVPlayerItemObserver observer]


SVPlayerItemObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemObserverFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemObserverFactory .cxx_destruct]
  -[SVPlayerItemObserverFactory createPlayerItemObserverForVideo:]
  -[SVPlayerItemObserverFactory playerProvider]
  -[SVPlayerItemObserverFactory initWithPlayerProvider:]


SVVideoBufferObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoBufferObserving>
 @property  BOOL playbackBufferFull
 @property  BOOL playbackLikelyToKeepUp
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  SVKeyValueObserver *playbackBufferFullObserver
 @property  SVKeyValueObserver *playbackLikelyToKeepUpObserver
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoBufferObserver onChange:]
  -[SVVideoBufferObserver .cxx_destruct]
  -[SVVideoBufferObserver changeBlock]
  -[SVVideoBufferObserver isPlaybackLikelyToKeepUp]
  -[SVVideoBufferObserver isPlaybackBufferFull]
  -[SVVideoBufferObserver playbackLikelyToKeepUpObserver]
  -[SVVideoBufferObserver playbackBufferFullObserver]
  -[SVVideoBufferObserver initWithPlayerItemObserver:]
  -[SVVideoBufferObserver playerItemObserver]
  -[SVVideoBufferObserver setPlaybackBufferFull:]
  -[SVVideoBufferObserver setPlaybackLikelyToKeepUp:]


SVVideoAccessoryItemCrossfadeTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitioning>
 @property  UIViewPropertyAnimator *fadeInAnimator
 @property  UIViewPropertyAnimator *fadeOutAnimator
 @property  BOOL animated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator animated]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator .cxx_destruct]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator animateWithContext:]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator setFadeOutAnimator:]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator fadeOutAnimator]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator setFadeInAnimator:]
  -[SVVideoAccessoryItemCrossfadeTransitionCoordinator fadeInAnimator]


SVImageLayer : CALayer /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  UIImage *image
 @property  NSString *identifier

  // instance methods
  -[SVImageLayer .cxx_destruct]
  -[SVImageLayer setImage:]
  -[SVImageLayer setIdentifier:]
  -[SVImageLayer image]
  -[SVImageLayer identifier]


SVPlaybackCoordinatorFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlaybackCoordinatorFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  <SVPlayerItemLoaderProviding> *playerItemLoaderProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackCoordinatorFactory .cxx_destruct]
  -[SVPlaybackCoordinatorFactory playerProvider]
  -[SVPlaybackCoordinatorFactory playerItemLoaderProvider]
  -[SVPlaybackCoordinatorFactory createPlaybackCoordinatorForVideo:]
  -[SVPlaybackCoordinatorFactory initWithPlayerProvider:playerItemLoaderProvider:]


SVMoreFromAccessoryItemContentProvider : NSObject /usr/lib/libSystem.B.dylib <SVAccessoryItemContentProviding>
 @property  SVMoreFromButton *accessoryItemButton
 @property  <SVMoreFromPublisherActionTitleProviding> *titleProvider
 @property  <SVMoreFromPublisherLogoProviding> *logoProvider
 @property  @? logoCancellationBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVMoreFromAccessoryItemContentProvider .cxx_destruct]
  -[SVMoreFromAccessoryItemContentProvider titleProvider]
  -[SVMoreFromAccessoryItemContentProvider accessoryItemButton]
  -[SVMoreFromAccessoryItemContentProvider updateAccessoryItemForVideo:animated:]
  -[SVMoreFromAccessoryItemContentProvider initWithMoreFromButton:titleProvider:logoProvider:]
  -[SVMoreFromAccessoryItemContentProvider logoCancellationBlock]
  -[SVMoreFromAccessoryItemContentProvider logoProvider]
  -[SVMoreFromAccessoryItemContentProvider setLogoCancellationBlock:]


SVPlayerManager : NSObject /usr/lib/libSystem.B.dylib <SVPlayerProviding, SVVideoTransitionObserver, SVVolumeObserving>
 @property  <SVPlayerFactory> *playerFactory
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  SVWeakObjectCache *players
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerManager players]
  -[SVPlayerManager .cxx_destruct]
  -[SVPlayerManager muteStateChanged:]
  -[SVPlayerManager playerFactory]
  -[SVPlayerManager videoViewControllerProvider]
  -[SVPlayerManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVPlayerManager playerForVideo:]
  -[SVPlayerManager initWithPlayerFactory:videoViewControllerProvider:]


SVPrivacyStatementInteractionHandler : NSObject /usr/lib/libSystem.B.dylib <SVInteractionHandling>
 @property  <SVVideoAdProviding> *videoAdProvider
 @property  <SVVideoPlaybackController> *playbackController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPrivacyStatementInteractionHandler .cxx_destruct]
  -[SVPrivacyStatementInteractionHandler playbackController]
  -[SVPrivacyStatementInteractionHandler handleInteractionWithContext:]
  -[SVPrivacyStatementInteractionHandler initWithVideoAdProvider:playbackController:]
  -[SVPrivacyStatementInteractionHandler videoAdProvider]


SVVideoQueueDiff : NSObject /usr/lib/libSystem.B.dylib <SVVideoQueueDiff>
 @property  NSOrderedSet *videosToInsert
 @property  NSOrderedSet *videosToRemove
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoQueueDiff .cxx_destruct]
  -[SVVideoQueueDiff initWithVideosToInsert:videosToRemove:]
  -[SVVideoQueueDiff videosToInsert]
  -[SVVideoQueueDiff videosToRemove]


SVMaterialButton : SVButton
 @property  AVBackgroundView *backgroundView

  // instance methods
  -[SVMaterialButton backgroundView]
  -[SVMaterialButton initWithFrame:]
  -[SVMaterialButton .cxx_destruct]
  -[SVMaterialButton layoutSubviews]


SVMediaPlaybackController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMapTable *timeControlStatusObservers
 @property  AVPlayer *currentlyPlaying

  // instance methods
  -[SVMediaPlaybackController init]
  -[SVMediaPlaybackController .cxx_destruct]
  -[SVMediaPlaybackController registerPlayer:]
  -[SVMediaPlaybackController setCurrentlyPlaying:]
  -[SVMediaPlaybackController unregisterPlayer:]
  -[SVMediaPlaybackController currentlyPlaying]
  -[SVMediaPlaybackController updateCurrentlyPlaying:]
  -[SVMediaPlaybackController timeControlStatusObservers]


SVInteractionAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionAssembly loadInRegistry:]


SVVideoTimeProvider : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimeProviding>
 @property  AVPlayer *player
 @property  <SVTimeConverting> *timeConverter
 @property  double time
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimeProvider .cxx_destruct]
  -[SVVideoTimeProvider time]
  -[SVVideoTimeProvider player]
  -[SVVideoTimeProvider timeConverter]
  -[SVVideoTimeProvider initWithPlayer:timeConverter:]


SVVolumeProvider : NSObject /usr/lib/libSystem.B.dylib <SVVolumeProviding, SVVolumeReporting>
 @property  NSHashTable *observers
 @property  BOOL muted
 @property  float volume
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVolumeProvider muted]
  -[SVVolumeProvider setMuted:]
  -[SVVolumeProvider volume]
  -[SVVolumeProvider setVolume:]
  -[SVVolumeProvider .cxx_destruct]
  -[SVVolumeProvider initWithMuteState:volume:]
  -[SVVolumeProvider observers]
  -[SVVolumeProvider addVolumeObserver:]
  -[SVVolumeProvider removeVolumeObserver:]


SVVideoImpressionTrackerManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoImpressionTrackerFactory> *impressionTrackerFactory
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  <SVVideoImpressionTracking> *impressionTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoImpressionTrackerManager .cxx_destruct]
  -[SVVideoImpressionTrackerManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoImpressionTrackerManager eventTrackerProvider]
  -[SVVideoImpressionTrackerManager impressionTrackerFactory]
  -[SVVideoImpressionTrackerManager setImpressionTracker:]
  -[SVVideoImpressionTrackerManager impressionTracker]
  -[SVVideoImpressionTrackerManager initWithImpressionTrackerFactory:eventTrackerProvider:]


SVVideoAccessoryItemFadeOutTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitioning>
 @property  UIViewPropertyAnimator *animator
 @property  BOOL animated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator animated]
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator setAnimator:]
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator animator]
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator .cxx_destruct]
  -[SVVideoAccessoryItemFadeOutTransitionCoordinator animateWithContext:]


SVVolumeManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVolumeReporting> *volumeReporter
 @property  <SVVideoVolumeObserverFactory> *volumeObserverFactory
 @property  <SVVideoVolumeObserving> *volumeObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVolumeManager .cxx_destruct]
  -[SVVolumeManager setVolumeObserver:]
  -[SVVolumeManager volumeReporter]
  -[SVVolumeManager volumeObserver]
  -[SVVolumeManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVolumeManager initWithVolumeReporter:volumeObserverFactory:]
  -[SVVolumeManager volumeObserverFactory]


SVVideoAccessoryBarItemDisplayState : NSObject /usr/lib/libSystem.B.dylib
 @property  <SVAccessoryItem> *item
 @property  UIView *containerView
 @property  unsigned long displayMode
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame

  // instance methods
  -[SVVideoAccessoryBarItemDisplayState item]
  -[SVVideoAccessoryBarItemDisplayState displayMode]
  -[SVVideoAccessoryBarItemDisplayState frame]
  -[SVVideoAccessoryBarItemDisplayState .cxx_destruct]
  -[SVVideoAccessoryBarItemDisplayState containerView]
  -[SVVideoAccessoryBarItemDisplayState isEqual:]
  -[SVVideoAccessoryBarItemDisplayState initWithItem:containerView:displayMode:frame:]


SVVideoAccessoryBarItemTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitionContext>
 @property  @? completionBlock
 @property  BOOL transitionWasCancelled
 @property  UIView *fromView
 @property  UIView *toView
 @property  UIView *containerView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryBarItemTransitionContext transitionWasCancelled]
  -[SVVideoAccessoryBarItemTransitionContext toView]
  -[SVVideoAccessoryBarItemTransitionContext fromView]
  -[SVVideoAccessoryBarItemTransitionContext .cxx_destruct]
  -[SVVideoAccessoryBarItemTransitionContext completeTransition:]
  -[SVVideoAccessoryBarItemTransitionContext setTransitionWasCancelled:]
  -[SVVideoAccessoryBarItemTransitionContext completionBlock]
  -[SVVideoAccessoryBarItemTransitionContext containerView]
  -[SVVideoAccessoryBarItemTransitionContext initWithContainerView:fromView:toView:completionBlock:]


SVVideoPlaybackPolicyObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackPolicyObserving>
 @property  SVKeyValueObserver *playbackAllowedObserver
 @property  SVKeyValueObserver *playbackRequestedObserver
 @property  @? requestStateChangeBlock
 @property  @? allowedStateChangeBlock
 @property  <SVVideoPlaybackPolicy> *policy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackPolicyObserver policy]
  -[SVVideoPlaybackPolicyObserver .cxx_destruct]
  -[SVVideoPlaybackPolicyObserver initWithPlaybackPolicy:]
  -[SVVideoPlaybackPolicyObserver playbackAllowedStateChanged]
  -[SVVideoPlaybackPolicyObserver playbackRequestedStateChanged]
  -[SVVideoPlaybackPolicyObserver allowedStateChangeBlock]
  -[SVVideoPlaybackPolicyObserver requestStateChangeBlock]
  -[SVVideoPlaybackPolicyObserver onRequestStateChange:]
  -[SVVideoPlaybackPolicyObserver onAllowedStateChange:]
  -[SVVideoPlaybackPolicyObserver playbackAllowedObserver]
  -[SVVideoPlaybackPolicyObserver playbackRequestedObserver]


SVVideo : NSObject /usr/lib/libSystem.B.dylib <SVVideo>
 @property  unsigned long videoType
 @property  BOOL allowsCallToActionBar
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideo videoType]
  -[SVVideo .cxx_destruct]
  -[SVVideo identifier]
  -[SVVideo allowsCallToActionBar]
  -[SVVideo initWithVideoType:]


SVVideoTimePlayedTracker : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimePlayedTracking>
 @property  <SVVideoPeriodicTimeObserving> *timeObserver
 @property  <SVVideoTimeProviding> *timeProvider
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  <SVVideoTimeJumpObserving> *timeJumpObserver
 @property  double timePlayed
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimePlayedTracker onChange:]
  -[SVVideoTimePlayedTracker .cxx_destruct]
  -[SVVideoTimePlayedTracker changeBlock]
  -[SVVideoTimePlayedTracker timeProvider]
  -[SVVideoTimePlayedTracker timePlayed]
  -[SVVideoTimePlayedTracker setTimePlayed:]
  -[SVVideoTimePlayedTracker timeObserver]
  -[SVVideoTimePlayedTracker playbackStateObserver]
  -[SVVideoTimePlayedTracker initWithTimeObserver:timeProvider:playbackStateObserver:timeJumpObserver:]
  -[SVVideoTimePlayedTracker timeJumpObserver]


SVDiscoverMoreInteractionObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionObserverFactory>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVDiscoverMoreInteractionObserverFactory .cxx_destruct]
  -[SVDiscoverMoreInteractionObserverFactory eventTrackerProvider]
  -[SVDiscoverMoreInteractionObserverFactory createInteractionObserverForVideo:]
  -[SVDiscoverMoreInteractionObserverFactory initWithVideoEventTrackerProvider:]


SVCustomControlsViewProvider : NSObject /usr/lib/libSystem.B.dylib <SVCustomControlsViewProviding>
 @property  <SVVideoViewControllerProviding> *viewControllerProvider
 @property  UIView *controlsView
 @property  <SVCustomControlsLayoutGuideProviding> *layoutGuideProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVCustomControlsViewProvider .cxx_destruct]
  -[SVCustomControlsViewProvider controlsView]
  -[SVCustomControlsViewProvider viewControllerProvider]
  -[SVCustomControlsViewProvider layoutGuideProvider]
  -[SVCustomControlsViewProvider initWithViewControllerProvider:layoutGuideProvider:]


SVLearnMoreButton : SVMaterialButton
  // instance methods
  -[SVLearnMoreButton accessibilityLabel]
  -[SVLearnMoreButton isAccessibilityElement]
  -[SVLearnMoreButton accessibilityElements]
  -[SVLearnMoreButton initWithFrame:]
  -[SVLearnMoreButton setHighlighted:]
  -[SVLearnMoreButton intrinsicContentSize]
  -[SVLearnMoreButton traitCollectionDidChange:]


SVVideoPlaybackPolicy : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackPolicy>
 @property  BOOL playbackIsAllowedToStart
 @property  BOOL playbackRequested
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackPolicy init]
  -[SVVideoPlaybackPolicy setPlaybackRequested:]
  -[SVVideoPlaybackPolicy playbackRequested]
  -[SVVideoPlaybackPolicy isPlaybackAllowedToStart]
  -[SVVideoPlaybackPolicy setPlaybackIsAllowedToStart:]


SVAccessoryItem : NSObject /usr/lib/libSystem.B.dylib <SVAccessoryItem>
 @property  UIView *view
 @property  unsigned long displayMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAccessoryItem initWithView:]
  -[SVAccessoryItem displayMode]
  -[SVAccessoryItem .cxx_destruct]
  -[SVAccessoryItem setDisplayMode:]
  -[SVAccessoryItem view]


SVEventTrackingAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVEventTrackingAssembly loadInRegistry:]


SVVideoAdActionAvailabilityObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoAdActionAvailabilityObserver>
 @property  <SVVideoAdProviding> *videoAdProvider
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  BOOL hasActionAvailable
 @property  @? availabilityChangedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAdActionAvailabilityObserver .cxx_destruct]
  -[SVVideoAdActionAvailabilityObserver loadingStateObserver]
  -[SVVideoAdActionAvailabilityObserver videoAdProvider]
  -[SVVideoAdActionAvailabilityObserver setHasActionAvailable:]
  -[SVVideoAdActionAvailabilityObserver availabilityChangedBlock]
  -[SVVideoAdActionAvailabilityObserver hasActionAvailable]
  -[SVVideoAdActionAvailabilityObserver onAvailabilityChanged:]
  -[SVVideoAdActionAvailabilityObserver initWithVideoAdProvider:loadingStateObserver:]


SVURLAssetLoaderFactory : NSObject /usr/lib/libSystem.B.dylib <SVURLAssetLoaderFactory>
 @property  <SVURLAssetFactory> *URLAssetFactory
 @property  <SVVideoURLProviderFactory> *URLProviderFactory
 @property  <SVURLAssetOptionsProviding> *optionsProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVURLAssetLoaderFactory .cxx_destruct]
  -[SVURLAssetLoaderFactory optionsProvider]
  -[SVURLAssetLoaderFactory createURLAssetLoaderForVideo:]
  -[SVURLAssetLoaderFactory URLProviderFactory]
  -[SVURLAssetLoaderFactory URLAssetFactory]
  -[SVURLAssetLoaderFactory initWithURLAssetFactory:URLProviderFactory:optionsProvider:]


SVVideoLoadingProgressObserver : NSObject /usr/lib/libSystem.B.dylib <SVVideoLoadingProgressObserving>
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  <SVVideoDurationObserving> *durationObserver
 @property  SVKeyValueObserver *loadedTimeRangesObserver
 @property  double progress
 @property  @? progressChangedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoLoadingProgressObserver .cxx_destruct]
  -[SVVideoLoadingProgressObserver setProgress:]
  -[SVVideoLoadingProgressObserver progress]
  -[SVVideoLoadingProgressObserver durationObserver]
  -[SVVideoLoadingProgressObserver loadedTimeRangesObserver]
  -[SVVideoLoadingProgressObserver progressChangedBlock]
  -[SVVideoLoadingProgressObserver onProgressChanged:]
  -[SVVideoLoadingProgressObserver playerItemObserver]
  -[SVVideoLoadingProgressObserver initWithPlayerItemObserver:durationObserver:]
  -[SVVideoLoadingProgressObserver updateProgressWithLoadedTimeRanges:duration:]


SVControlItemManager : NSObject /usr/lib/libSystem.B.dylib <SVControlItemManager>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVControlItemManager .cxx_destruct]
  -[SVControlItemManager videoViewControllerProvider]
  -[SVControlItemManager initWithVideoViewControllerProvider:]
  -[SVControlItemManager addControlItem:]
  -[SVControlItemManager removeControlItem:]


SVGestureRecognizerViewProvider : NSObject /usr/lib/libSystem.B.dylib <SVGestureRecognizerViewProviding>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  UIView *view
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVGestureRecognizerViewProvider .cxx_destruct]
  -[SVGestureRecognizerViewProvider view]
  -[SVGestureRecognizerViewProvider videoViewControllerProvider]
  -[SVGestureRecognizerViewProvider initWithVideoViewControllerProvider:]


SVVideoAccessoryBarSizer : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryBarSizing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryBarSizer accessoryBarHeightForTraitCollection:]
  -[SVVideoAccessoryBarSizer accessoryBarWidthForTraitCollection:]


SVCoordinateSpace : NSObject /usr/lib/libSystem.B.dylib <UICoordinateSpace>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVCoordinateSpace convertRect:fromCoordinateSpace:]
  -[SVCoordinateSpace .cxx_destruct]
  -[SVCoordinateSpace convertRect:toCoordinateSpace:]
  -[SVCoordinateSpace view]
  -[SVCoordinateSpace convertPoint:fromCoordinateSpace:]
  -[SVCoordinateSpace bounds]
  -[SVCoordinateSpace convertPoint:toCoordinateSpace:]
  -[SVCoordinateSpace videoViewControllerProvider]
  -[SVCoordinateSpace initWithVideoViewControllerProvider:]


SVVideoTransitionManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionManager>
 @property  <SVPlaybackTransitionCoordinatorFactory> *transitionCoordinatorFactory
 @property  <SVVideoVisibilityMonitorProviding> *visibilityMonitorProviding
 @property  <SVVideoQueueProviding> *queueProvider
 @property  NSMutableArray *pendingVideos
 @property  NSMutableArray *transitionObservers
 @property  SVPlaybackTransition *activeTransition
 @property  <SVVideo> *visibleVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTransitionManager activeTransition]
  -[SVVideoTransitionManager setActiveTransition:]
  -[SVVideoTransitionManager .cxx_destruct]
  -[SVVideoTransitionManager transitionObservers]
  -[SVVideoTransitionManager addTransitionObserver:]
  -[SVVideoTransitionManager removeTransitionObserver:]
  -[SVVideoTransitionManager queueProvider]
  -[SVVideoTransitionManager transitionToVideo:]
  -[SVVideoTransitionManager initWithTransitionCoordinatorFactory:visibilityMonitorProviding:]
  -[SVVideoTransitionManager pendingVideos]
  -[SVVideoTransitionManager performNextTransition]
  -[SVVideoTransitionManager transitionCoordinatorFactory]
  -[SVVideoTransitionManager visibilityMonitorProviding]
  -[SVVideoTransitionManager visibleVideo]
  -[SVVideoTransitionManager setVisibleVideo:]


SVPlaybackEventTrackerStateContext : NSObject /usr/lib/libSystem.B.dylib <NFStateMachineContextType>
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackEventTrackerStateContext .cxx_destruct]
  -[SVPlaybackEventTrackerStateContext error]
  -[SVPlaybackEventTrackerStateContext initWithError:]


SVSharingAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSharingAssembly loadInRegistry:]


SVVideoSkipLockObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipLockObserverFactory>
 @property  SVTimeline *timeline
 @property  <SVVideoSkipThresholdObserverFactory> *thresholdObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipLockObserverFactory .cxx_destruct]
  -[SVVideoSkipLockObserverFactory timeline]
  -[SVVideoSkipLockObserverFactory createSkipLockObserverForVideo:]
  -[SVVideoSkipLockObserverFactory thresholdObserverFactory]
  -[SVVideoSkipLockObserverFactory initWithTimeline:thresholdObserverFactory:]


SVVideoSkipHandler : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipHandling>
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVisibilityReporting> *visiblityReporter
 @property  <SVVideoVisiblePercentageManager> *visiblePercentageManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipHandler .cxx_destruct]
  -[SVVideoSkipHandler queueProvider]
  -[SVVideoSkipHandler visiblePercentageManager]
  -[SVVideoSkipHandler visiblityReporter]
  -[SVVideoSkipHandler skipToVideo:animated:]
  -[SVVideoSkipHandler initWithQueueProvider:visibiltyReporter:visiblePercentageManager:]


SVURLAssetLoader : NSObject /usr/lib/libSystem.B.dylib <SVURLAssetLoading>
 @property  <SVURLAssetFactory> *URLAssetFactory
 @property  <SVVideoURLProviding> *URLProvider
 @property  NSDictionary *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVURLAssetLoader .cxx_destruct]
  -[SVURLAssetLoader options]
  -[SVURLAssetLoader URLAssetWithCompletionBlock:]
  -[SVURLAssetLoader URLAssetFactory]
  -[SVURLAssetLoader initWithURLAssetFactory:URLProvider:options:]
  -[SVURLAssetLoader URLProvider]


SVInteractionObserver : NSObject /usr/lib/libSystem.B.dylib <SVInteractionObserving>
 @property  @? willBlock
 @property  @? didBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionObserver .cxx_destruct]
  -[SVInteractionObserver initWithWillHandleInteractionBlock:]
  -[SVInteractionObserver willHandleInteractionWithContext:]
  -[SVInteractionObserver didHandleInteractionWithContext:]
  -[SVInteractionObserver willBlock]
  -[SVInteractionObserver didBlock]
  -[SVInteractionObserver initWithWillHandleInteractionBlock:didHandleInteractionBlock:]
  -[SVInteractionObserver initWithDidHandleInteractionBlock:]


SVVideoImpressionTracker : NSObject /usr/lib/libSystem.B.dylib <SVVideoImpressionTracking>
 @property  SVTimeline *timeline
 @property  <SVVideoDurationObserving> *durationObserver
 @property  SVTimeBasedAction *impressionAction
 @property  NSMutableArray *actions
 @property  BOOL passedImpressionThreshold
 @property  unsigned long quartile
 @property  @? thresholdImpressionBlock
 @property  @? quartileImpressionBlock
 @property  double impressionThreshold
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoImpressionTracker actions]
  -[SVVideoImpressionTracker dealloc]
  -[SVVideoImpressionTracker .cxx_destruct]
  -[SVVideoImpressionTracker quartile]
  -[SVVideoImpressionTracker timeline]
  -[SVVideoImpressionTracker impressionThreshold]
  -[SVVideoImpressionTracker durationObserver]
  -[SVVideoImpressionTracker uponQuartileImpression:]
  -[SVVideoImpressionTracker uponThresholdImpression:]
  -[SVVideoImpressionTracker configureTimelineForImpressionReportingWithDuration:]
  -[SVVideoImpressionTracker configureTimelineForQuartileReportingWithDuration:]
  -[SVVideoImpressionTracker impressionAction]
  -[SVVideoImpressionTracker hasPassedImpressionThreshold]
  -[SVVideoImpressionTracker setHasPassedImpressionThreshold:]
  -[SVVideoImpressionTracker setImpressionAction:]
  -[SVVideoImpressionTracker setQuartile:]
  -[SVVideoImpressionTracker thresholdImpressionBlock]
  -[SVVideoImpressionTracker quartileImpressionBlock]
  -[SVVideoImpressionTracker initWithTimeline:impressionThreshold:durationObserver:]


SVVideoInteractionEventTrackerManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionHandlerFactory>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoInteractionEventTrackerManager .cxx_destruct]
  -[SVVideoInteractionEventTrackerManager createInteractionHandlerForVideo:]
  -[SVVideoInteractionEventTrackerManager eventTrackerProvider]
  -[SVVideoInteractionEventTrackerManager initWithVideoEventTrackerProvider:]


SVPlaybackTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  SVPlaybackTransitionContext *context
 @property  <SVVideo> *fromVideo
 @property  <SVVideo> *toVideo
 @property  <SVInteractivePlaybackTransitioning> *transitionCoordinator

  // instance methods
  -[SVPlaybackTransition context]
  -[SVPlaybackTransition .cxx_destruct]
  -[SVPlaybackTransition setContext:]
  -[SVPlaybackTransition cancel]
  -[SVPlaybackTransition transitionCoordinator]
  -[SVPlaybackTransition toVideo]
  -[SVPlaybackTransition initWithFromVideo:toVideo:transitionCoordinator:]
  -[SVPlaybackTransition performTransitionWithVisibilityMonitor:completionBlock:]
  -[SVPlaybackTransition fromVideo]


SVControlInteractionFactory : NSObject /usr/lib/libSystem.B.dylib <SVControlInteractionFactory>
 @property  <SVInteractionContextFactory> *interactionContextFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVControlInteractionFactory .cxx_destruct]
  -[SVControlInteractionFactory createInteractionWithControl:events:]
  -[SVControlInteractionFactory interactionContextFactory]
  -[SVControlInteractionFactory initWithInteractionContextFactory:]


SVContentTransitionTypeProvider : NSObject /usr/lib/libSystem.B.dylib <SVContentTransitionTypeProviding>
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  long long contentTransitionType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVContentTransitionTypeProvider .cxx_destruct]
  -[SVContentTransitionTypeProvider videoViewControllerProvider]
  -[SVContentTransitionTypeProvider initWithVideoViewControllerProvider:]
  -[SVContentTransitionTypeProvider contentTransitionType]


SVMoreFromButton : UIControl /System/Library/Frameworks/Foundation.framework/Foundation
 @property  NSLayoutConstraint *titleLabelBottomConstraint
 @property  NSLayoutConstraint *imageViewHeightConstraint
 @property  UIImageView *imageView
 @property  UILabel *titleLabel

  // instance methods
  -[SVMoreFromButton imageView]
  -[SVMoreFromButton titleLabel]
  -[SVMoreFromButton initWithFrame:]
  -[SVMoreFromButton updateConstraints]
  -[SVMoreFromButton .cxx_destruct]
  -[SVMoreFromButton setImage:]
  -[SVMoreFromButton setHighlighted:]
  -[SVMoreFromButton imageViewHeightConstraint]
  -[SVMoreFromButton setImageViewHeightConstraint:]
  -[SVMoreFromButton setTitle:]
  -[SVMoreFromButton traitCollectionDidChange:]
  -[SVMoreFromButton updateFonts]
  -[SVMoreFromButton preferredContentSizeCategoryDidChange]
  -[SVMoreFromButton setTitleLabelBottomConstraint:]
  -[SVMoreFromButton titleLabelBottomConstraint]
  -[SVMoreFromButton determineNumberOfLines]
  -[SVMoreFromButton updateImageViewHeight]


SVVideoPlaybackAttemptTracker : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackAttemptTracking>
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  <SVPlayerTimeControlStatusObserving> *timeControlStatusObserver
 @property  <SVVideoPlaybackPolicyObserving> *playbackPolicyObserver
 @property  <SVVisibilityMonitoring> *visibilityMonitor
 @property  BOOL attemptedPlayback
 @property  @? playbackAttemptBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackAttemptTracker .cxx_destruct]
  -[SVVideoPlaybackAttemptTracker visibilityMonitor]
  -[SVVideoPlaybackAttemptTracker timeControlStatusObserver]
  -[SVVideoPlaybackAttemptTracker loadingStateObserver]
  -[SVVideoPlaybackAttemptTracker setAttemptedPlayback:]
  -[SVVideoPlaybackAttemptTracker playbackPolicyObserver]
  -[SVVideoPlaybackAttemptTracker playbackAttemptBlock]
  -[SVVideoPlaybackAttemptTracker hasAttemptedPlayback]
  -[SVVideoPlaybackAttemptTracker onPlaybackAttempt:]
  -[SVVideoPlaybackAttemptTracker initWithLoadingStateObserver:timeControlStatusObserver:playbackPolicyObserver:visibilityMonitor:]


SVPlaybackCoordinator : NSObject /usr/lib/libSystem.B.dylib
 @property  SVPlayer *player
 @property  <SVPlayerItemLoading> *playerItemLoader

  // instance methods
  -[SVPlaybackCoordinator play]
  -[SVPlaybackCoordinator pause]
  -[SVPlaybackCoordinator load]
  -[SVPlaybackCoordinator .cxx_destruct]
  -[SVPlaybackCoordinator player]
  -[SVPlaybackCoordinator loadVideoIfNeeded]
  -[SVPlaybackCoordinator playerItemLoader]
  -[SVPlaybackCoordinator initWithPlayer:playerItemLoader:]


SVFrameworkAssembly : NSObject /usr/lib/libSystem.B.dylib <NFFrameworkAssembly>
 @property  NSArray *assemblies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVFrameworkAssembly init]
  -[SVFrameworkAssembly .cxx_destruct]
  -[SVFrameworkAssembly assemblies]


SVPlayerLayer : CALayer /System/Library/Frameworks/CoreMedia.framework/CoreMedia
 @property  AVPlayerLayer *playerLayer
 @property  SVLooper *looper
 @property  SVKeyValueObserver *readyForDisplayObserver
 @property  SVKeyValueObserver *statusObserver
 @property  SVNonAnimatingDelegate *nonAnimatingDelegate
 @property  unsigned long currentPlaybackKind
 @property  SVImageLayer *stillImageLayer
 @property  AVPlayer *player
 @property  NSString *videoGravity

  // class methods
  +[SVPlayerLayer defaultActionForKey:]

  // instance methods
  -[SVPlayerLayer layoutSublayers]
  -[SVPlayerLayer setPlayerLayer:]
  -[SVPlayerLayer videoGravity]
  -[SVPlayerLayer initialize]
  -[SVPlayerLayer play]
  -[SVPlayerLayer initWithLayer:]
  -[SVPlayerLayer looper]
  -[SVPlayerLayer pause]
  -[SVPlayerLayer init]
  -[SVPlayerLayer setPlayer:]
  -[SVPlayerLayer setLooper:]
  -[SVPlayerLayer setVideoGravity:]
  -[SVPlayerLayer dealloc]
  -[SVPlayerLayer playerLayer]
  -[SVPlayerLayer .cxx_destruct]
  -[SVPlayerLayer player]
  -[SVPlayerLayer playWithPlaybackKind:looping:]
  -[SVPlayerLayer stillImageLayer]
  -[SVPlayerLayer sceneDidEnterBackground]
  -[SVPlayerLayer sceneWillEnterForeground]
  -[SVPlayerLayer initWithCoder:]
  -[SVPlayerLayer setStatusObserver:]
  -[SVPlayerLayer statusObserver]
  -[SVPlayerLayer readyForDisplayObserver]
  -[SVPlayerLayer setReadyForDisplayObserver:]
  -[SVPlayerLayer reduceMotionStatusDidChange]
  -[SVPlayerLayer setCurrentPlaybackKind:]
  -[SVPlayerLayer currentPlaybackKind]
  -[SVPlayerLayer nonAnimatingDelegate]
  -[SVPlayerLayer setNonAnimatingDelegate:]


SVVideoVisiblePercentageProviderFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoVisiblePercentageProviderFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVisiblePercentageProviderFactory createVisiblePercentageProvider]


SVPlaylistSkipPolicyHandler : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipPolicy>
 @property  <SVContentTransitionTypeProviding> *contentTransitionTypeProvider
 @property  BOOL canSkip
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaylistSkipPolicyHandler .cxx_destruct]
  -[SVPlaylistSkipPolicyHandler canSkip]
  -[SVPlaylistSkipPolicyHandler contentTransitionTypeProvider]
  -[SVPlaylistSkipPolicyHandler initWithContentTransitionTypeProvider:]


SVVideoTimePlayedTrackerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimePlayedTrackerFactory>
 @property  <SVVideoPeriodicTimeObserverFactory> *timeObserverFactory
 @property  <SVVideoTimeProviderFactory> *timeProviderFactory
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  <SVVideoTimeJumpObserverFactory> *timeJumpObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimePlayedTrackerFactory .cxx_destruct]
  -[SVVideoTimePlayedTrackerFactory timeProviderFactory]
  -[SVVideoTimePlayedTrackerFactory playbackStateObserverFactory]
  -[SVVideoTimePlayedTrackerFactory createTimePlayedTrackerForVideo:]
  -[SVVideoTimePlayedTrackerFactory initWithTimeObserverFactory:timeProviderFactory:playbackStateObserverFactory:timeJumpObserverFactory:]
  -[SVVideoTimePlayedTrackerFactory timeObserverFactory]
  -[SVVideoTimePlayedTrackerFactory timeJumpObserverFactory]


SVVideoPlaybackAttemptTrackerManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoPlaybackAttemptTrackerFactory> *playbackAttemptTrackerFactory
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  <SVVideoPlaybackAttemptTracking> *playbackAttemptTracker
 @property  <SVVideoEventTracker> *eventTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackAttemptTrackerManager .cxx_destruct]
  -[SVVideoPlaybackAttemptTrackerManager eventTracker]
  -[SVVideoPlaybackAttemptTrackerManager setEventTracker:]
  -[SVVideoPlaybackAttemptTrackerManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoPlaybackAttemptTrackerManager eventTrackerProvider]
  -[SVVideoPlaybackAttemptTrackerManager initWithPlaybackAttemptTrackerFactory:eventTrackerProvider:]
  -[SVVideoPlaybackAttemptTrackerManager playbackAttemptTrackerFactory]
  -[SVVideoPlaybackAttemptTrackerManager setPlaybackAttemptTracker:]
  -[SVVideoPlaybackAttemptTrackerManager playbackAttemptTracker]


SVVideoVisibilityMonitorManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoVisibilityMonitorProviding>
 @property  <SVVisibilityMonitorFactory> *videoVisibilityMonitorFactory
 @property  SVWeakObjectCache *visibilityMonitors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVisibilityMonitorManager .cxx_destruct]
  -[SVVideoVisibilityMonitorManager visibilityMonitors]
  -[SVVideoVisibilityMonitorManager visibilityMonitorForVideo:]
  -[SVVideoVisibilityMonitorManager initWithVideoVisibilityMonitorFactory:]
  -[SVVideoVisibilityMonitorManager videoVisibilityMonitorFactory]


SVVideoAdButtonManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver, SVVideoControlVisibilityItem>
 @property  <SVCustomControlsViewProviding> *customControlsViewProvider
 @property  BOOL transportControlsHidden
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  <SVVideoAdActionAvailabilityObserverFactory> *adActionAvailabilityObserverFactory
 @property  <SVVideoAdActionAvailabilityObserver> *adActionAvailabilityObserver
 @property  <SVVideoSkipLockObserverFactory> *skipLockObserverFactory
 @property  <SVVideoSkipLockObserving> *skipLockObserver
 @property  SVAdPrivacyButton *privacyButton
 @property  SVLearnMoreButton *learnMoreButton
 @property  SVVideoAdSkipButton *skipButton
 @property  long long constraintsMode
 @property  NSLayoutConstraint *learnMorePrimaryTopConstraint
 @property  NSLayoutConstraint *learnMorePrimaryLeadingConstraint
 @property  NSLayoutConstraint *learnMoreSecondaryTopConstraint
 @property  NSLayoutConstraint *learnMoreSecondaryLeadingConstraint
 @property  NSLayoutConstraint *privacyAboveTransportControlsConstraint
 @property  NSLayoutConstraint *privacyAboveAccessoryBarConstraint
 @property  NSMutableArray *alwaysActiveConstraints
 @property  <SVVideoViewControllerSizeObserving> *sizeObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hideable

  // instance methods
  -[SVVideoAdButtonManager isVisible]
  -[SVVideoAdButtonManager .cxx_destruct]
  -[SVVideoAdButtonManager learnMoreButton]
  -[SVVideoAdButtonManager skipButton]
  -[SVVideoAdButtonManager contentSizeCategoryDidChange]
  -[SVVideoAdButtonManager skipLockObserverFactory]
  -[SVVideoAdButtonManager setSkipLockObserver:]
  -[SVVideoAdButtonManager skipLockObserver]
  -[SVVideoAdButtonManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoAdButtonManager loadingStateObserverFactory]
  -[SVVideoAdButtonManager initWithCustomControlsViewProvider:loadingStateObserverFactory:adActionAvailabilityObserverFactory:skipLockObserverFactory:adPrivacyButton:learnMoreButton:skipButton:sizeObserver:]
  -[SVVideoAdButtonManager loadingStateObserver]
  -[SVVideoAdButtonManager setLoadingStateObserver:]
  -[SVVideoAdButtonManager hideable]
  -[SVVideoAdButtonManager hide:withAnimationCoordinator:]
  -[SVVideoAdButtonManager customControlsViewProvider]
  -[SVVideoAdButtonManager addButtonsToCustomControlsView:withAdActionAvailable:]
  -[SVVideoAdButtonManager installConstraintsForButtonsInControlsView:withLayoutGuides:]
  -[SVVideoAdButtonManager updateConstraints:]
  -[SVVideoAdButtonManager videoPlayerSizeDidChange]
  -[SVVideoAdButtonManager privacyButton]
  -[SVVideoAdButtonManager sizeObserver]
  -[SVVideoAdButtonManager alwaysActiveConstraints]
  -[SVVideoAdButtonManager privacyAboveTransportControlsConstraint]
  -[SVVideoAdButtonManager learnMorePrimaryTopConstraint]
  -[SVVideoAdButtonManager learnMorePrimaryLeadingConstraint]
  -[SVVideoAdButtonManager learnMoreSecondaryTopConstraint]
  -[SVVideoAdButtonManager learnMoreSecondaryLeadingConstraint]
  -[SVVideoAdButtonManager privacyAboveAccessoryBarConstraint]
  -[SVVideoAdButtonManager setLearnMorePrimaryTopConstraint:]
  -[SVVideoAdButtonManager setLearnMorePrimaryLeadingConstraint:]
  -[SVVideoAdButtonManager setLearnMoreSecondaryTopConstraint:]
  -[SVVideoAdButtonManager setLearnMoreSecondaryLeadingConstraint:]
  -[SVVideoAdButtonManager setPrivacyAboveTransportControlsConstraint:]
  -[SVVideoAdButtonManager setPrivacyAboveAccessoryBarConstraint:]
  -[SVVideoAdButtonManager accessoryBarSize]
  -[SVVideoAdButtonManager isAccessoryBarAboveControlsView:]
  -[SVVideoAdButtonManager activateConstraintsMode:]
  -[SVVideoAdButtonManager areTransportControlsHidden]
  -[SVVideoAdButtonManager verticalOffsetForFloatAboveAccessoryBar]
  -[SVVideoAdButtonManager setConstraintsMode:]
  -[SVVideoAdButtonManager adActionAvailabilityObserverFactory]
  -[SVVideoAdButtonManager setAdActionAvailabilityObserver:]
  -[SVVideoAdButtonManager setTransportControlsHidden:]
  -[SVVideoAdButtonManager embedButtonsInViewControllerWithAdActionAvailable:]
  -[SVVideoAdButtonManager removeButtonsFromViewController]
  -[SVVideoAdButtonManager adActionAvailabilityObserver]
  -[SVVideoAdButtonManager removeObservers]
  -[SVVideoAdButtonManager setupObserversForVideo:]
  -[SVVideoAdButtonManager constraintsMode]
  -[SVVideoAdButtonManager supportsAutoAppearance]
  -[SVVideoAdButtonManager setAlwaysActiveConstraints:]


SVAdPrivacyButton : SVButton
  // class methods
  +[SVAdPrivacyButton size]
  +[SVAdPrivacyButton title]
  +[SVAdPrivacyButton height]
  +[SVAdPrivacyButton font]

  // instance methods
  -[SVAdPrivacyButton accessibilityLabel]
  -[SVAdPrivacyButton isAccessibilityElement]
  -[SVAdPrivacyButton accessibilityElements]
  -[SVAdPrivacyButton initWithFrame:]
  -[SVAdPrivacyButton intrinsicContentSize]


SVVideoTimeProviderFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoTimeProviderFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  <SVTimeConverting> *timeConverter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoTimeProviderFactory .cxx_destruct]
  -[SVVideoTimeProviderFactory timeConverter]
  -[SVVideoTimeProviderFactory createTimeProviderForVideo:]
  -[SVVideoTimeProviderFactory playerProvider]
  -[SVVideoTimeProviderFactory initWithPlayerProvider:timeConverter:]


SVVideoVisibilityManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoVisibilityManager>
 @property  <SVVideoVisibilityMonitorProviding> *visibilityMonitorProvider
 @property  <SVVideoTransitionManager> *transitionManager
 @property  <SVVideoQueueObserving> *queueObserver
 @property  <SVVideoVisiblePercentageManager> *visiblePercentageManager
 @property  NSMutableDictionary *visibilityMonitors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVisibilityManager .cxx_destruct]
  -[SVVideoVisibilityManager updateVisibility]
  -[SVVideoVisibilityManager lock]
  -[SVVideoVisibilityManager visibilityMonitors]
  -[SVVideoVisibilityManager unlock]
  -[SVVideoVisibilityManager queueObserver]
  -[SVVideoVisibilityManager visiblePercentageManager]
  -[SVVideoVisibilityManager startMonitoringVideo:]
  -[SVVideoVisibilityManager stopMonitoringVideo:]
  -[SVVideoVisibilityManager initWithTransitionManager:queueObserver:visibilityMonitorProvider:visiblePercentageManager:]
  -[SVVideoVisibilityManager visibilityMonitorProvider]
  -[SVVideoVisibilityManager transitionManager]


SVPlaybackAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackAssembly loadInRegistry:]


SVVideoVisibilityMonitorFactory : NSObject /usr/lib/libSystem.B.dylib <SVVisibilityMonitorFactory>
 @property  <SVVideoVisiblePercentageManager> *videoVisiblePercentageManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoVisibilityMonitorFactory .cxx_destruct]
  -[SVVideoVisibilityMonitorFactory createVisibilityMonitorForVideo:]
  -[SVVideoVisibilityMonitorFactory initWithVideoVisiblePercentageManager:]
  -[SVVideoVisibilityMonitorFactory videoVisiblePercentageManager]


SVTimeline : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *actions
 @property  double duration
 @property  double time

  // instance methods
  -[SVTimeline actions]
  -[SVTimeline init]
  -[SVTimeline dealloc]
  -[SVTimeline .cxx_destruct]
  -[SVTimeline time]
  -[SVTimeline addAction:]
  -[SVTimeline setTime:]
  -[SVTimeline setDuration:]
  -[SVTimeline removeActions:]
  -[SVTimeline removeAction:]
  -[SVTimeline duration]
  -[SVTimeline cancelScheduledBlocks]
  -[SVTimeline resetTime]
  -[SVTimeline performBlock:at:]
  -[SVTimeline hasPassedTimeOffset:]
  -[SVTimeline executeActionsForTime:withDuration:]
  -[SVTimeline executionTimeOfTime:withinDuration:]


SVVideoMediaIdentifierGenerator : NSObject /usr/lib/libSystem.B.dylib <SVVideoMediaIdentifierGenerator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoMediaIdentifierGenerator identifierForURL:]


SVPlaylistAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaylistAssembly loadInRegistry:]


SVVideoSkipManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackSkipping, SVVideoPlaybackAdvancing>
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoSkipPolicy> *policy
 @property  <SVVideoSkipHandling> *handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipManager policy]
  -[SVVideoSkipManager .cxx_destruct]
  -[SVVideoSkipManager handler]
  -[SVVideoSkipManager queueProvider]
  -[SVVideoSkipManager advanceAnimated:force:]
  -[SVVideoSkipManager advanceAnimated:]
  -[SVVideoSkipManager skipToPrevious]
  -[SVVideoSkipManager skipToNext]
  -[SVVideoSkipManager initWithQueueProvider:policy:handler:]
  -[SVVideoSkipManager skipToVideo:animated:force:]


SVInteractionContextFactory : NSObject /usr/lib/libSystem.B.dylib <SVInteractionContextFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteractionContextFactory createInteractionContextWithView:frame:]


SVMoreFromInteractionObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionObserverFactory>
 @property  <SVVideoEventTrackerProviding> *eventTrackerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVMoreFromInteractionObserverFactory .cxx_destruct]
  -[SVMoreFromInteractionObserverFactory eventTrackerProvider]
  -[SVMoreFromInteractionObserverFactory createInteractionObserverForVideo:]
  -[SVMoreFromInteractionObserverFactory initWithVideoEventTrackerProvider:]


SVPlaybackCoordinatorManager : NSObject /usr/lib/libSystem.B.dylib <SVPlaybackCoordinatorProviding>
 @property  <SVPlaybackCoordinatorFactory> *factory
 @property  SVWeakObjectCache *playbackCoordinators
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackCoordinatorManager factory]
  -[SVPlaybackCoordinatorManager .cxx_destruct]
  -[SVPlaybackCoordinatorManager playbackCoordinatorForVideo:]
  -[SVPlaybackCoordinatorManager initWithPlaybackCoordinatorFactory:]
  -[SVPlaybackCoordinatorManager playbackCoordinators]


SVVideoAccessoryItemDisplayModeTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemDisplayModeTransitioning>
 @property  BOOL animated
 @property  NSMutableArray *alongsideBlocks
 @property  NSMutableArray *completionBlocks
 @property  UIViewPropertyAnimator *animator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator animated]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator setAnimator:]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator completionBlocks]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator animator]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator .cxx_destruct]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator animateWithContext:]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator alongsideBlocks]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator animateAlongsideTransition:withCompletionBlock:]
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinator initWithAnimated:]


SVLooper : NSObject /usr/lib/libSystem.B.dylib
 @property  AVPlayer *player
 @property  SVVideoDurationObserver *durationObserver

  // instance methods
  -[SVLooper .cxx_destruct]
  -[SVLooper player]
  -[SVLooper initWithPlayer:]
  -[SVLooper durationObserver]


SVPlayerItemLoadingStateContext : NSObject /usr/lib/libSystem.B.dylib <SVPlayerItemLoadingStateContext>
 @property  AVPlayerItem *item
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemLoadingStateContext item]
  -[SVPlayerItemLoadingStateContext .cxx_destruct]
  -[SVPlayerItemLoadingStateContext error]
  -[SVPlayerItemLoadingStateContext initWithPlayerItem:]
  -[SVPlayerItemLoadingStateContext initWithError:]


SVVideoControlsTimingManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoControlsTimingProviding>
 @property  <SVVideoControlsTimingConfiguration> *timingConfiguration
 @property  <SVVideoSkipThresholdProviding> *skipThresholdProvider
 @property  SVTimeline *timeline
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoControlsTimingManager .cxx_destruct]
  -[SVVideoControlsTimingManager timeline]
  -[SVVideoControlsTimingManager autoAppearanceTimeIntervalForVideo:]
  -[SVVideoControlsTimingManager autoHideTimeIntervalForVideo:]
  -[SVVideoControlsTimingManager nowPlayingVisibilityTimeIntervalForVideo:]
  -[SVVideoControlsTimingManager moreFromVisibilityTimeIntervalForVideo:]
  -[SVVideoControlsTimingManager upNextAppearanceTimeIntervalForVideo:]
  -[SVVideoControlsTimingManager initWithControlTimingConfiguration:skipThresholdProvider:timeline:]
  -[SVVideoControlsTimingManager skipThresholdProvider]
  -[SVVideoControlsTimingManager timingConfiguration]


SVVideoSkipThresholdObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipThresholdObserverFactory>
 @property  <SVVideoSkipThresholdProviding> *skipThresholdProvider
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoSkipThresholdObserverFactory .cxx_destruct]
  -[SVVideoSkipThresholdObserverFactory loadingStateObserverFactory]
  -[SVVideoSkipThresholdObserverFactory createThresholdObserverForVideo:]
  -[SVVideoSkipThresholdObserverFactory initWithSkipThresholdProvider:loadingStateObserverFactory:]
  -[SVVideoSkipThresholdObserverFactory skipThresholdProvider]


SVVideoAccessoryItemDisplayModeTransitionCoordinatorProvider : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemDisplayModeTransitionCoordinatorProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemDisplayModeTransitionCoordinatorProvider displayModeTransitionCoordinatorForAnimatedTransition:]


SVFullscreenPresentationAnimator : NSObject /usr/lib/libSystem.B.dylib <SVFullscreenTransitionCoordinator>
 @property  UIViewPropertyAnimator *animator
 @property  <SVFullscreenTransitionContext> *context
 @property  UIView *fromView
 @property  @? completionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVFullscreenPresentationAnimator context]
  -[SVFullscreenPresentationAnimator setAnimator:]
  -[SVFullscreenPresentationAnimator animator]
  -[SVFullscreenPresentationAnimator fromView]
  -[SVFullscreenPresentationAnimator .cxx_destruct]
  -[SVFullscreenPresentationAnimator setContext:]
  -[SVFullscreenPresentationAnimator completeTransition:]
  -[SVFullscreenPresentationAnimator completionBlock]
  -[SVFullscreenPresentationAnimator setFromView:]
  -[SVFullscreenPresentationAnimator initWithCompletionBlock:]
  -[SVFullscreenPresentationAnimator animateWithContext:]


SVVideoViewControllerProvider : NSObject /usr/lib/libSystem.B.dylib <SVVideoViewControllerProviding>
 @property  SVVideoViewController *videoViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoViewControllerProvider videoViewController]
  -[SVVideoViewControllerProvider setVideoViewController:]
  -[SVVideoViewControllerProvider .cxx_destruct]


SVVideoAccessoryItemMoveUpTransitionCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemTransitioning>
 @property  UIViewPropertyAnimator *animator
 @property  BOOL animated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator animated]
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator setAnimator:]
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator cancelTransition]
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator animator]
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator .cxx_destruct]
  -[SVVideoAccessoryItemMoveUpTransitionCoordinator animateWithContext:]


SVVideoAccessoryBarView : UIVisualEffectView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  <SVVideoAccessoryBarSizing> *barSizer
 @property  <SVVideoAccessoryItemSizing> *itemSizer
 @property  <SVVideoAccessoryItemDisplayModeTransitionCoordinatorProviding> *displayModeTransitionCoordinatorProvider
 @property  UIView *leadingContainerView
 @property  UIView *trailingContainerView
 @property  SVVideoAccessoryBarItemTransition *pendingLeadingItemTransition
 @property  SVVideoAccessoryBarItemTransition *activeLeadingItemTransition
 @property  SVVideoAccessoryBarItemTransition *pendingTrailingItemTransition
 @property  SVVideoAccessoryBarItemTransition *activeTrailingItemTransition
 @property  SVVideoAccessoryBarDisplayModeTransition *pendingDisplayModeTransition
 @property  SVVideoAccessoryBarDisplayModeTransition *activeDisplayModeTransition
 @property  <SVAccessoryItem> *leadingItem
 @property  <SVAccessoryItem> *trailingItem
 @property  <SVAccessoryItem> *expandedItem
 @property  SVVideoAccessoryBarDisplayState *displayState
 @property  <SVAccessoryItem> *currentItem

  // instance methods
  -[SVVideoAccessoryBarView currentItem]
  -[SVVideoAccessoryBarView .cxx_destruct]
  -[SVVideoAccessoryBarView intrinsicContentSize]
  -[SVVideoAccessoryBarView expandedItem]
  -[SVVideoAccessoryBarView setExpandedItem:]
  -[SVVideoAccessoryBarView traitCollectionDidChange:]
  -[SVVideoAccessoryBarView layoutSubviews]
  -[SVVideoAccessoryBarView initWithBarSizer:itemSizer:displayModeTransitionCoordinatorProvider:]
  -[SVVideoAccessoryBarView setAccessoryItem:withCoordinator:]
  -[SVVideoAccessoryBarView leadingItem]
  -[SVVideoAccessoryBarView setLeadingItem:withCoordinator:]
  -[SVVideoAccessoryBarView displayState]
  -[SVVideoAccessoryBarView setPendingLeadingItemTransition:]
  -[SVVideoAccessoryBarView trailingItem]
  -[SVVideoAccessoryBarView setLeadingItem:]
  -[SVVideoAccessoryBarView expandItem:animated:]
  -[SVVideoAccessoryBarView schedulePerformPendingTransitions]
  -[SVVideoAccessoryBarView setPendingTrailingItemTransition:]
  -[SVVideoAccessoryBarView setTrailingItem:]
  -[SVVideoAccessoryBarView transitionLeadingItemToDisplayMode:trailingItemToDisplayMode:animated:synchronized:]
  -[SVVideoAccessoryBarView itemSizer]
  -[SVVideoAccessoryBarView leadingContainerView]
  -[SVVideoAccessoryBarView trailingContainerView]
  -[SVVideoAccessoryBarView displayModeTransitionCoordinatorProvider]
  -[SVVideoAccessoryBarView setPendingDisplayModeTransition:]
  -[SVVideoAccessoryBarView performPendingTransitions]
  -[SVVideoAccessoryBarView pendingLeadingItemTransition]
  -[SVVideoAccessoryBarView pendingTrailingItemTransition]
  -[SVVideoAccessoryBarView pendingDisplayModeTransition]
  -[SVVideoAccessoryBarView activeLeadingItemTransition]
  -[SVVideoAccessoryBarView activeTrailingItemTransition]
  -[SVVideoAccessoryBarView activeDisplayModeTransition]
  -[SVVideoAccessoryBarView setDisplayState:]
  -[SVVideoAccessoryBarView setActiveDisplayModeTransition:]
  -[SVVideoAccessoryBarView setActiveLeadingItemTransition:]
  -[SVVideoAccessoryBarView setActiveTrailingItemTransition:]
  -[SVVideoAccessoryBarView barSizer]
  -[SVVideoAccessoryBarView setTrailingItem:withCoordinator:]


SVVideoAdSkipButton : SVMaterialButton
 @property  unsigned long skipDuration

  // instance methods
  -[SVVideoAdSkipButton initWithFrame:]
  -[SVVideoAdSkipButton intrinsicContentSize]
  -[SVVideoAdSkipButton traitCollectionDidChange:]
  -[SVVideoAdSkipButton titleForDuration:]
  -[SVVideoAdSkipButton setSkipDuration:]
  -[SVVideoAdSkipButton skipDuration]


SVPlaybackTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SVPlaybackTransitionContext>
 @property  @? completionBlock
 @property  <SVVideo> *fromVideo
 @property  <SVVideo> *toVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackTransitionContext .cxx_destruct]
  -[SVPlaybackTransitionContext completeTransition:]
  -[SVPlaybackTransitionContext setCompletionBlock:]
  -[SVPlaybackTransitionContext completionBlock]
  -[SVPlaybackTransitionContext toVideo]
  -[SVPlaybackTransitionContext fromVideo]
  -[SVPlaybackTransitionContext initWithFromVideo:toVideo:completionBlock:]


SVVideoPeriodicTimeObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPeriodicTimeObserverFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  <SVTimeConverting> *timeConverter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPeriodicTimeObserverFactory .cxx_destruct]
  -[SVVideoPeriodicTimeObserverFactory timeConverter]
  -[SVVideoPeriodicTimeObserverFactory createPeriodicTimeObserverForVideo:]
  -[SVVideoPeriodicTimeObserverFactory playerProvider]
  -[SVVideoPeriodicTimeObserverFactory playbackStateObserverFactory]
  -[SVVideoPeriodicTimeObserverFactory initWithPlayerProvider:playbackStateObserverFactory:timeConverter:]


SVPlayerStatusObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerStatusObserverFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerStatusObserverFactory .cxx_destruct]
  -[SVPlayerStatusObserverFactory playerProvider]
  -[SVPlayerStatusObserverFactory initWithPlayerProvider:]
  -[SVPlayerStatusObserverFactory createPlayerStatusObserverForVideo:]


SVPlaylistInteractionAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaylistInteractionAssembly loadInRegistry:]


SVVideoImpressionThresholdProvider : NSObject /usr/lib/libSystem.B.dylib <SVVideoImpressionThresholdProviding>
 @property  double impressionThreshold
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoImpressionThresholdProvider impressionThreshold]
  -[SVVideoImpressionThresholdProvider initWithImpressionThreshold:]


SVVideoBufferObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoBufferObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoBufferObserverFactory .cxx_destruct]
  -[SVVideoBufferObserverFactory playerItemObserverFactory]
  -[SVVideoBufferObserverFactory initWithPlayerItemObserverFactory:]
  -[SVVideoBufferObserverFactory createBufferObserverForVideo:]


SVVideoGravityAssembly : NSObject /usr/lib/libSystem.B.dylib <NFAssembly>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoGravityAssembly loadInRegistry:]


SVSkipToNextInteractionHandlerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionHandlerFactory>
 @property  <SVVideoPlaybackSkipping> *playbackSkipper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSkipToNextInteractionHandlerFactory .cxx_destruct]
  -[SVSkipToNextInteractionHandlerFactory createInteractionHandlerForVideo:]
  -[SVSkipToNextInteractionHandlerFactory playbackSkipper]
  -[SVSkipToNextInteractionHandlerFactory initWithPlaybackSkipper:]


SVVideoAccessoryBarDisplayModeTransitionContext : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemDisplayModeTransitionContext>
 @property  SVVideoAccessoryBarDisplayState *fromState
 @property  SVVideoAccessoryBarDisplayState *toState
 @property  @? completionBlock
 @property  BOOL transitionWasCancelled
 @property  NSSet *views
 @property  NSSet *appearingViews
 @property  NSSet *disappearingViews
 @property  NSSet *transitioningViews
 @property  NSSet *containerViews
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryBarDisplayModeTransitionContext transitionWasCancelled]
  -[SVVideoAccessoryBarDisplayModeTransitionContext views]
  -[SVVideoAccessoryBarDisplayModeTransitionContext fromState]
  -[SVVideoAccessoryBarDisplayModeTransitionContext .cxx_destruct]
  -[SVVideoAccessoryBarDisplayModeTransitionContext completeTransition:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext setTransitionWasCancelled:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext completionBlock]
  -[SVVideoAccessoryBarDisplayModeTransitionContext toState]
  -[SVVideoAccessoryBarDisplayModeTransitionContext initWithFromState:toState:completionBlock:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext appearingViews]
  -[SVVideoAccessoryBarDisplayModeTransitionContext initialFrameForView:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext containerViews]
  -[SVVideoAccessoryBarDisplayModeTransitionContext initialDisplayModeForView:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext targetDisplayModeForView:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext targetFrameForView:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext transitioningViews]
  -[SVVideoAccessoryBarDisplayModeTransitionContext disappearingViews]
  -[SVVideoAccessoryBarDisplayModeTransitionContext frameForView:inState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext initialFrameForView:inState:basedOnPositionInState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext targetFrameForView:inState:basedOnPositionInState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext displayModeForView:inState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext viewsForState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext containerViewForDisplayMode:inState:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext containerViewForInitialDisplayMode:]
  -[SVVideoAccessoryBarDisplayModeTransitionContext containerViewForTargetDisplayMode:]


SVPlaylistSkipHandler : NSObject /usr/lib/libSystem.B.dylib <SVVideoSkipHandling>
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVisibilityReporting> *visiblityReporter
 @property  <SVVideoVisiblePercentageManager> *visiblePercentageManager
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaylistSkipHandler .cxx_destruct]
  -[SVPlaylistSkipHandler queueProvider]
  -[SVPlaylistSkipHandler videoViewControllerProvider]
  -[SVPlaylistSkipHandler visiblePercentageManager]
  -[SVPlaylistSkipHandler visiblityReporter]
  -[SVPlaylistSkipHandler skipToVideo:animated:]
  -[SVPlaylistSkipHandler initWithQueueProvider:visibiltyReporter:visiblePercentageManager:videoViewControllerProvider:]
  -[SVPlaylistSkipHandler contentTransitionTypeForVideo:]


SVVideoAdActionAvailabilityObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoAdActionAvailabilityObserverFactory>
 @property  <SVVideoProviderProviding> *videoProviderProvider
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAdActionAvailabilityObserverFactory .cxx_destruct]
  -[SVVideoAdActionAvailabilityObserverFactory loadingStateObserverFactory]
  -[SVVideoAdActionAvailabilityObserverFactory createActionAvailabilityObserverForVideo:]
  -[SVVideoAdActionAvailabilityObserverFactory initWithVideoProviderProvider:loadingStateObserverFactory:]
  -[SVVideoAdActionAvailabilityObserverFactory videoProviderProvider]


SVVideoAccessoryItemSizer : NSObject /usr/lib/libSystem.B.dylib <SVVideoAccessoryItemSizing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAccessoryItemSizer frameOfLeadingItemWithDisplayMode:constrainedToSize:]
  -[SVVideoAccessoryItemSizer frameOfTrailingItemWithDisplayMode:constrainedToSize:]
  -[SVVideoAccessoryItemSizer sizeForDisplayMode:constrainedToSize:]
  -[SVVideoAccessoryItemSizer originForLeadingItemWithDisplayMode:constraintToSize:itemSize:]
  -[SVVideoAccessoryItemSizer originForTrailingItemWithDisplayMode:constraintToSize:itemSize:]


SVVideoPlaybackManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackController, SVVideoTransitionObserver>
 @property  <SVVideoPlaybackPolicy> *playbackPolicy
 @property  <SVVideoPlaybackAdvancing> *playbackAdvancer
 @property  <SVPlaybackCoordinatorProviding> *playbackCoordinatorProvider
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVVideoPlaybackStateObserverFactory> *playbackStateObserverFactory
 @property  SVPlaybackCoordinator *playbackCoordinator
 @property  <SVVideoPlaybackStateObserving> *playbackStateObserver
 @property  <SVVideoLoadingStateObserving> *loadingStateObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackManager play]
  -[SVVideoPlaybackManager pause]
  -[SVVideoPlaybackManager playbackCoordinator]
  -[SVVideoPlaybackManager .cxx_destruct]
  -[SVVideoPlaybackManager playbackAdvancer]
  -[SVVideoPlaybackManager playbackPolicy]
  -[SVVideoPlaybackManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoPlaybackManager playbackCoordinatorProvider]
  -[SVVideoPlaybackManager loadingStateObserverFactory]
  -[SVVideoPlaybackManager loadingStateObserver]
  -[SVVideoPlaybackManager playbackStateObserverFactory]
  -[SVVideoPlaybackManager setPlaybackStateObserver:]
  -[SVVideoPlaybackManager setLoadingStateObserver:]
  -[SVVideoPlaybackManager playbackStateObserver]
  -[SVVideoPlaybackManager initWithPlaybackPolicy:playbackAdvancer:playbackCoordinatorProvider:playbackStateObserverFactory:loadingStateObserverFactory:]
  -[SVVideoPlaybackManager setPlaybackCoordinator:]
  -[SVVideoPlaybackManager playWithoutRequestingPlayback]


SVVideoPlaybackAttemptTrackerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackAttemptTrackerFactory>
 @property  <SVVideoLoadingStateObserverFactory> *loadingStateObserverFactory
 @property  <SVPlayerTimeControlStatusObserverFactory> *timeControlStatusObserverFactorty
 @property  <SVVideoPlaybackPolicyObserverFactory> *playbackPolicyObserverFactory
 @property  <SVVideoVisibilityMonitorProviding> *visibilityMonitorProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackAttemptTrackerFactory .cxx_destruct]
  -[SVVideoPlaybackAttemptTrackerFactory loadingStateObserverFactory]
  -[SVVideoPlaybackAttemptTrackerFactory createPlaybackAttemptTrackerForVideo:]
  -[SVVideoPlaybackAttemptTrackerFactory initWithLoadingStateObserverFactory:timeControlStatusObserverFactory:playbackPolicyObserverFactory:visibilityMonitorProvider:]
  -[SVVideoPlaybackAttemptTrackerFactory visibilityMonitorProvider]
  -[SVVideoPlaybackAttemptTrackerFactory timeControlStatusObserverFactorty]
  -[SVVideoPlaybackAttemptTrackerFactory playbackPolicyObserverFactory]


SVNonAnimatingDelegate : NSObject /usr/lib/libSystem.B.dylib <CALayerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVNonAnimatingDelegate actionForLayer:forKey:]


SVInteraction : NSObject /usr/lib/libSystem.B.dylib <SVInteraction>
 @property  @? contextProvider
 @property  @? interactionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVInteraction performWithObject:]
  -[SVInteraction .cxx_destruct]
  -[SVInteraction contextProvider]
  -[SVInteraction uponInteraction:]
  -[SVInteraction initWithContextProvider:]
  -[SVInteraction interactionBlock]


SVPlayerFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerFactory>
 @property  int audioMode
 @property  <SVVolumeProviding> *volumeProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerFactory .cxx_destruct]
  -[SVPlayerFactory volumeProvider]
  -[SVPlayerFactory audioMode]
  -[SVPlayerFactory createPlayer]
  -[SVPlayerFactory initWithAudioMode:volumeProvider:]


SVVisibilityMonitor : NSObject /usr/lib/libSystem.B.dylib <SVVisibilityReporting, SVVisibilityMonitoring>
 @property  NFStateMachine *stateMachine
 @property  NFStateMachineState *appearingState
 @property  NFStateMachineState *appearedState
 @property  NFStateMachineState *disappearingState
 @property  NFStateMachineState *disappearedState
 @property  NSMutableArray *willAppearBlocks
 @property  NSMutableArray *didAppearBlocks
 @property  NSMutableArray *visiblePercentageBlocks
 @property  NSMutableArray *willDisappearBlocks
 @property  NSMutableArray *didDisappearBlocks
 @property  double visiblePercentage
 @property  BOOL locked
 @property  long long lockCount
 @property  unsigned long state
 @property  <SVVisiblePercentageProviding> *visiblePercentageProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL appeared
 @property  id object

  // instance methods
  -[SVVisibilityMonitor object]
  -[SVVisibilityMonitor locked]
  -[SVVisibilityMonitor stateMachine]
  -[SVVisibilityMonitor appeared]
  -[SVVisibilityMonitor didAppear]
  -[SVVisibilityMonitor setState:]
  -[SVVisibilityMonitor .cxx_destruct]
  -[SVVisibilityMonitor updateVisibility]
  -[SVVisibilityMonitor lock]
  -[SVVisibilityMonitor unlock]
  -[SVVisibilityMonitor state]
  -[SVVisibilityMonitor willDisappear]
  -[SVVisibilityMonitor willAppear]
  -[SVVisibilityMonitor didDisappear]
  -[SVVisibilityMonitor initWithObject:visiblePercentageProvider:]
  -[SVVisibilityMonitor willAppearBlocks]
  -[SVVisibilityMonitor onWillAppear:]
  -[SVVisibilityMonitor didAppearBlocks]
  -[SVVisibilityMonitor onDidAppear:]
  -[SVVisibilityMonitor willDisappearBlocks]
  -[SVVisibilityMonitor onWillDisappear:]
  -[SVVisibilityMonitor didDisappearBlocks]
  -[SVVisibilityMonitor onDidDisappear:]
  -[SVVisibilityMonitor visiblePercentageBlocks]
  -[SVVisibilityMonitor onVisiblePercentageChange:]
  -[SVVisibilityMonitor visiblePercentage]
  -[SVVisibilityMonitor setVisiblePercentage:]
  -[SVVisibilityMonitor lockCount]
  -[SVVisibilityMonitor setLockCount:]
  -[SVVisibilityMonitor appearedState]
  -[SVVisibilityMonitor determineVisiblePercentage]
  -[SVVisibilityMonitor visiblePercentageProvider]
  -[SVVisibilityMonitor disappearedState]
  -[SVVisibilityMonitor appearingState]
  -[SVVisibilityMonitor disappearingState]


SVVideoMetadataManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoMetadataProviding, SVVideoTransitionObserver>
 @property  <SVVideoPlaybackProgressObserverFactory> *playbackProgressObserverFactory
 @property  <SVVideoVolumeObserverFactory> *volumeObserverFactory
 @property  <SVVideoTimePlayedTrackerFactory> *timePlayedTrackerFactory
 @property  SVWeakObjectCache *metadataCache
 @property  <SVVideoPlaybackProgressObserving> *playbackProgressObserver
 @property  <SVVideoVolumeObserving> *volumeObserver
 @property  <SVVideoTimePlayedTracking> *timePlayedTracker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoMetadataManager metadataCache]
  -[SVVideoMetadataManager .cxx_destruct]
  -[SVVideoMetadataManager setVolumeObserver:]
  -[SVVideoMetadataManager volumeObserver]
  -[SVVideoMetadataManager playbackProgressObserverFactory]
  -[SVVideoMetadataManager setPlaybackProgressObserver:]
  -[SVVideoMetadataManager playbackProgressObserver]
  -[SVVideoMetadataManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoMetadataManager metadataForVideo:]
  -[SVVideoMetadataManager volumeObserverFactory]
  -[SVVideoMetadataManager initWithPlaybackProgressObserverFactory:volumeObserverFactory:timePlayedTrackerFactory:]
  -[SVVideoMetadataManager mutableMetadataForVideo:]
  -[SVVideoMetadataManager timePlayedTrackerFactory]
  -[SVVideoMetadataManager setTimePlayedTracker:]
  -[SVVideoMetadataManager timePlayedTracker]


SVVideoPlaybackPositionObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoPlaybackPositionObserverFactory>
 @property  <SVPlayerItemObserverFactory> *playerItemObserverFactory
 @property  <SVPlayerTimeControlStatusObserverFactory> *timeControlStatusObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackPositionObserverFactory .cxx_destruct]
  -[SVVideoPlaybackPositionObserverFactory playerItemObserverFactory]
  -[SVVideoPlaybackPositionObserverFactory createPlaybackPositionObserverForVideo:]
  -[SVVideoPlaybackPositionObserverFactory timeControlStatusObserverFactory]
  -[SVVideoPlaybackPositionObserverFactory initWithPlayerItemObserverFactory:timeControlStatusObserverFactory:]


SVShareButtonManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  AVControlItem *controlItem
 @property  <SVVideoSharingPolicy> *sharingPolicy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVShareButtonManager .cxx_destruct]
  -[SVShareButtonManager controlItem]
  -[SVShareButtonManager sharingPolicy]
  -[SVShareButtonManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVShareButtonManager initWithShareControlItem:sharingPolicy:]


SVVideoAdSkipTracker : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver>
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoProviderProviding> *videoProviderProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAdSkipTracker .cxx_destruct]
  -[SVVideoAdSkipTracker queueProvider]
  -[SVVideoAdSkipTracker willTransitionToVideo:withTransitionCoordinator:]
  -[SVVideoAdSkipTracker initWithQueueProvider:videoProviderProvider:]
  -[SVVideoAdSkipTracker videoProviderProvider]


SVLearnMoreInteractionHandlerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoInteractionHandlerFactory>
 @property  <SVVideoPlaybackController> *playbackController
 @property  <SVVideoProviderProviding> *videoProviderProviding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVLearnMoreInteractionHandlerFactory .cxx_destruct]
  -[SVLearnMoreInteractionHandlerFactory playbackController]
  -[SVLearnMoreInteractionHandlerFactory createInteractionHandlerForVideo:]
  -[SVLearnMoreInteractionHandlerFactory videoProviderProviding]
  -[SVLearnMoreInteractionHandlerFactory initWithVideoProviderProviding:playbackController:]


SVAccessoryItemButton : SVButton
 @property  SVAutoLayoutLabel *titleLabel
 @property  SVAutoLayoutLabel *subtitleLabel
 @property  NSLayoutConstraint *titleLabelTopConstraint
 @property  NSLayoutConstraint *subtitleLabelBottomConstraint
 @property  NSString *title
 @property  NSString *subtitle

  // instance methods
  -[SVAccessoryItemButton accessibilityLabel]
  -[SVAccessoryItemButton setSubtitle:]
  -[SVAccessoryItemButton titleLabel]
  -[SVAccessoryItemButton initWithFrame:]
  -[SVAccessoryItemButton updateConstraints]
  -[SVAccessoryItemButton .cxx_destruct]
  -[SVAccessoryItemButton setHighlighted:]
  -[SVAccessoryItemButton titleLabelTopConstraint]
  -[SVAccessoryItemButton setTitleLabelTopConstraint:]
  -[SVAccessoryItemButton setTitle:]
  -[SVAccessoryItemButton title]
  -[SVAccessoryItemButton setSubtitle:animated:]
  -[SVAccessoryItemButton traitCollectionDidChange:]
  -[SVAccessoryItemButton subtitle]
  -[SVAccessoryItemButton subtitleLabel]
  -[SVAccessoryItemButton updateFonts]
  -[SVAccessoryItemButton layoutSubviews]
  -[SVAccessoryItemButton setTitle:animated:]
  -[SVAccessoryItemButton preferredContentSizeCategoryDidChange]
  -[SVAccessoryItemButton determineNumberOfLines]
  -[SVAccessoryItemButton setSubtitleLabelBottomConstraint:]
  -[SVAccessoryItemButton subtitleLabelBottomConstraint]


SVSkipToNextButtonManager : NSObject /usr/lib/libSystem.B.dylib <SVVideoTransitionObserver, SVSkipToNextButtonManager>
 @property  NSMutableSet *controls
 @property  <SVVideoSkipLockObserverFactory> *skipLockObserverFactory
 @property  <SVVideoViewControllerProviding> *videoViewControllerProvider
 @property  <SVVideoQueueProviding> *queueProvider
 @property  <SVVideoQueueObserving> *queueObserver
 @property  <SVVideoSkipLockObserving> *skipLockObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVSkipToNextButtonManager .cxx_destruct]
  -[SVSkipToNextButtonManager controls]
  -[SVSkipToNextButtonManager conditionsChanged]
  -[SVSkipToNextButtonManager queueProvider]
  -[SVSkipToNextButtonManager videoViewControllerProvider]
  -[SVSkipToNextButtonManager skipLockObserverFactory]
  -[SVSkipToNextButtonManager setSkipLockObserver:]
  -[SVSkipToNextButtonManager skipLockObserver]
  -[SVSkipToNextButtonManager willTransitionToVideo:withTransitionCoordinator:]
  -[SVSkipToNextButtonManager addControl:]
  -[SVSkipToNextButtonManager queueObserver]
  -[SVSkipToNextButtonManager initWithSkipLockObserverFactory:videoViewControllerProvider:queueProvider:queueObserver:]


SVAudioSession : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL audioSessionActive
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  NSMapTable *players
 @property  SVMediaPlaybackController *playbackController

  // class methods
  +[SVAudioSession sharedSession]

  // instance methods
  -[SVAudioSession semaphore]
  -[SVAudioSession init]
  -[SVAudioSession players]
  -[SVAudioSession .cxx_destruct]
  -[SVAudioSession addInterestForPlayer:withMode:]
  -[SVAudioSession removeInterestForPlayer:]
  -[SVAudioSession playbackController]
  -[SVAudioSession registerPlaybackControlForPlayer:withMode:]
  -[SVAudioSession setupAudioSessionCategory]
  -[SVAudioSession activateAudioSessionCategory]
  -[SVAudioSession deactivateAudioSessionCategory]
  -[SVAudioSession desiredAudioSessionConfiguration]
  -[SVAudioSession needsToSetupAudioSessionCategory]
  -[SVAudioSession isAudioSessionActive]
  -[SVAudioSession shouldActivateAudioSession]
  -[SVAudioSession setAudioSessionActive:]
  -[SVAudioSession canDeactivateAudioSession]


SVAutoLayoutLabel : UILabel /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[SVAutoLayoutLabel alignmentRectInsets]


SVVideoControlItemAnimationCoordinator : NSObject /usr/lib/libSystem.B.dylib <SVVideoControlItemAnimating>
 @property  <AVPlayerViewControllerAnimationCoordinator> *coordinator
 @property  NSMutableArray *animationBlocks
 @property  NSMutableArray *completionBlocks
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoControlItemAnimationCoordinator completionBlocks]
  -[SVVideoControlItemAnimationCoordinator coordinator]
  -[SVVideoControlItemAnimationCoordinator .cxx_destruct]
  -[SVVideoControlItemAnimationCoordinator animationBlocks]
  -[SVVideoControlItemAnimationCoordinator animateWithAnimationBlock:completionBlock:]
  -[SVVideoControlItemAnimationCoordinator initWithAnimationCoordinator:]


SVPlayerTimeControlStatusObserverFactory : NSObject /usr/lib/libSystem.B.dylib <SVPlayerTimeControlStatusObserverFactory>
 @property  <SVPlayerProviding> *playerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerTimeControlStatusObserverFactory .cxx_destruct]
  -[SVPlayerTimeControlStatusObserverFactory playerProvider]
  -[SVPlayerTimeControlStatusObserverFactory initWithPlayerProvider:]
  -[SVPlayerTimeControlStatusObserverFactory createTimeControlStatusObserverForVideo:]


SVAudioSessionConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *category
 @property  NSString *mode
 @property  unsigned long routeSharingPolicy

  // instance methods
  -[SVAudioSessionConfiguration mode]
  -[SVAudioSessionConfiguration category]
  -[SVAudioSessionConfiguration .cxx_destruct]
  -[SVAudioSessionConfiguration routeSharingPolicy]
  -[SVAudioSessionConfiguration setMode:]
  -[SVAudioSessionConfiguration isEqualToConfiguration:]
  -[SVAudioSessionConfiguration setCategory:]
  -[SVAudioSessionConfiguration initWithCategory:mode:policy:]
  -[SVAudioSessionConfiguration setRouteSharingPolicy:]


SVAccessoryItemContentProviderManager : NSObject /usr/lib/libSystem.B.dylib <SVAccessoryItemContentProviderManager, SVAccessoryItemContentManager>
 @property  NSMapTable *contentProviders
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAccessoryItemContentProviderManager init]
  -[SVAccessoryItemContentProviderManager .cxx_destruct]
  -[SVAccessoryItemContentProviderManager contentProviders]
  -[SVAccessoryItemContentProviderManager updateAccessoryItem:forVideo:animated:]
  -[SVAccessoryItemContentProviderManager registerAccessoryItem:withContentProvider:]


SVVideoImpressionTrackerFactory : NSObject /usr/lib/libSystem.B.dylib <SVVideoImpressionTrackerFactory>
 @property  SVTimeline *timeline
 @property  <SVVideoImpressionThresholdProviding> *impressionThresholdProvider
 @property  <SVVideoDurationObserverFactory> *durationObserverFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoImpressionTrackerFactory .cxx_destruct]
  -[SVVideoImpressionTrackerFactory timeline]
  -[SVVideoImpressionTrackerFactory durationObserverFactory]
  -[SVVideoImpressionTrackerFactory createImpressionTrackerForVideo:]
  -[SVVideoImpressionTrackerFactory initWithTimeline:impressionThresholdProvider:durationObserverFactory:]
  -[SVVideoImpressionTrackerFactory impressionThresholdProvider]


SVVideoControlVisibilityItem : NSObject /usr/lib/libSystem.B.dylib <SVVideoControlVisibilityItem>
 @property  BOOL hideable
 @property  UIView *view
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoControlVisibilityItem initWithView:]
  -[SVVideoControlVisibilityItem isVisible]
  -[SVVideoControlVisibilityItem .cxx_destruct]
  -[SVVideoControlVisibilityItem view]
  -[SVVideoControlVisibilityItem setHideable:]
  -[SVVideoControlVisibilityItem hideable]
  -[SVVideoControlVisibilityItem hide:withAnimationCoordinator:]


(SVAXElementOcclusion)
	// instance methods
	-[(SVAXElementOcclusion) svax_shouldBeOccluded]

(SVVideoError)
	// class methods
	+[(SVVideoError) videoErrorWithErrorCode:]
	+[(SVVideoError) videoErrorWithUnderlyingError:]
	+[(SVVideoError) errorCodeForUnderlyingErrorDomain:]

(SVWeakReferenceObject)
	// instance methods
	-[(SVWeakReferenceObject) weakReferenceObjects]

01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVBackgroundView 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVControlItem 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/PrivateFrameworks/NewsFoundation.framework/NewsFoundation: NFPromise 
01 00 0400 /System/Library/PrivateFrameworks/NewsFoundation.framework/NewsFoundation: NFStateMachine 
01 00 0400 /System/Library/PrivateFrameworks/NewsFoundation.framework/NewsFoundation: NFStateMachineEvent 
01 00 0400 /System/Library/PrivateFrameworks/NewsFoundation.framework/NewsFoundation: NFStateMachineState 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UICubicTimingParameters 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UISpringTimingParameters 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
