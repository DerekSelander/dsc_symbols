|| __DATA.__objc_data _OBJC_CLASS_$_SVAVPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SVAVPlayerFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVAVPlayerItemFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVAVURLAssetFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SVAdGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_SVAutomaticFullscreenVideoPlaybackBehaviorManager
|| __DATA.__objc_data _OBJC_CLASS_$_SVLearnMoreButton
|| __DATA.__objc_data _OBJC_CLASS_$_SVMaterialButton
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlaybackCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SVPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SVTimeBasedAction
|| __DATA.__objc_data _OBJC_CLASS_$_SVTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_SVTouchAbsorbingView
|| __DATA.__objc_data _OBJC_CLASS_$_SVTouchForwardingView
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAdSkipButton
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoAdViewControllerProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlaybackQueue
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoPlayerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SVVideoVolumeObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAVPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAVPlayerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAVPlayerItemFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAVURLAssetFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAdGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAdPrivacyButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SVAutomaticFullscreenVideoPlaybackBehaviorManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SVLearnMoreButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SVMaterialButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlaybackCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SVPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTimeBasedAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTouchAbsorbingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SVTouchForwardingView
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAdSkipButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoAdViewControllerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlaybackQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoPlayerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SVVideoVolumeObserver
|| __DATA_CONST.__const _SVVideoErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAdPrivacyButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVAudioSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVBundleClass
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVKeyValueObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVLooper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVMediaPlaybackController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVNonAnimatingDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlayerItemObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVPlayerLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoDurationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SVVideoPlayButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVAudioSessionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVBundleClass
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVImageLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVKeyValueObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVLooper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVMediaPlaybackController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVNonAnimatingDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlayerItemObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVPlayerLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoDurationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SVVideoPlayButton
|| __TEXT.__const _SilexVideoVersionNumber
|| __TEXT.__const _SilexVideoVersionString
|| __TEXT.__text _SVBundle
|| __TEXT.__text _SVContentSizeCategoryIsEqualToContentSizeCategory
__ AVFAudio: _AVAudioSessionCategoryAmbient
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVAudioSessionModeDefault
__ AVFAudio: _AVAudioSessionModeSpokenAudio
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetReferenceRestrictionsKey
__ AVFoundation: _AVURLAssetURLRequestAttributionKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_METACLASS_$_AVPlayer
__ AVKit: _OBJC_CLASS_$_AVBackgroundView
__ AVKit: _OBJC_CLASS_$_AVControlItem
__ AVKit: _OBJC_CLASS_$_AVPictureInPictureController
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _kCMTimeZero
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCATransactionDisableActions
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityLayoutChangedNotification
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIAccessibilityReduceMotionStatusDidChangeNotification
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UITransitionContextFromViewKey
__ UIKit: _UITransitionContextToViewKey
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SVAdPrivacyButton : SVButton
  // class methods
  +[SVAdPrivacyButton height]
  +[SVAdPrivacyButton size]
  +[SVAdPrivacyButton title]
  +[SVAdPrivacyButton font]

  // instance methods
  -[SVAdPrivacyButton accessibilityLabel]
  -[SVAdPrivacyButton accessibilityElements]
  -[SVAdPrivacyButton intrinsicContentSize]
  -[SVAdPrivacyButton initWithFrame:]
  -[SVAdPrivacyButton isAccessibilityElement]


SVPlayer : AVPlayer
 @property  int audioMode

  // instance methods
  -[SVPlayer dealloc]
  -[SVPlayer audioMode]
  -[SVPlayer initWithAudioMode:]


SVAVPlayerItemFactory : NSObject <SVAVPlayerItemFactory>
 @property  NSArray *automaticallyLoadedAssetKeys
 @property  <SVAVURLAssetFactory> *assetFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAVPlayerItemFactory .cxx_destruct]
  -[SVAVPlayerItemFactory automaticallyLoadedAssetKeys]
  -[SVAVPlayerItemFactory createPlayerItemWithURL:]
  -[SVAVPlayerItemFactory initWithAutomaticallyLoadedAssetKeys:assetFactory:]
  -[SVAVPlayerItemFactory assetFactory]


SVVideoPlayButton : SVButton
  // class methods
  +[SVVideoPlayButton playImage]

  // instance methods
  -[SVVideoPlayButton accessibilityLabel]
  -[SVVideoPlayButton updateBackgroundColor]
  -[SVVideoPlayButton layoutSubviews]
  -[SVVideoPlayButton initWithFrame:]
  -[SVVideoPlayButton accessibilityHint]
  -[SVVideoPlayButton isAccessibilityElement]
  -[SVVideoPlayButton displayAsPaused]


SVVideoDurationObserver : NSObject <SVVideoDurationObserving>
 @property  <SVPlayerItemObserving> *playerItemObserver
 @property  SVKeyValueObserver *playerItemDurationObserver
 @property  double duration
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoDurationObserver setDuration:]
  -[SVVideoDurationObserver .cxx_destruct]
  -[SVVideoDurationObserver duration]
  -[SVVideoDurationObserver updateDuration:]
  -[SVVideoDurationObserver onChange:]
  -[SVVideoDurationObserver changeBlock]
  -[SVVideoDurationObserver initWithPlayerItemObserver:]
  -[SVVideoDurationObserver playerItemObserver]
  -[SVVideoDurationObserver playerItemDurationObserver]
  -[SVVideoDurationObserver setPlayerItemDurationObserver:]


SVTouchAbsorbingView : UIControl
  // instance methods
  -[SVTouchAbsorbingView isTracking]


SVAVURLAssetFactory : NSObject <SVAVURLAssetFactory>
 @property  NSDictionary *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAVURLAssetFactory .cxx_destruct]
  -[SVAVURLAssetFactory options]
  -[SVAVURLAssetFactory initWithOptions:]
  -[SVAVURLAssetFactory createURLAssetWithURL:]


SVKeyValueObserver : NSObject
 @property  NSString *keyPath
 @property  NSObject *object
 @property  unsigned long options
 @property  @? change

  // instance methods
  -[SVKeyValueObserver change]
  -[SVKeyValueObserver dealloc]
  -[SVKeyValueObserver .cxx_destruct]
  -[SVKeyValueObserver keyPath]
  -[SVKeyValueObserver object]
  -[SVKeyValueObserver options]
  -[SVKeyValueObserver observeValueForKeyPath:ofObject:change:context:]
  -[SVKeyValueObserver initWithKeyPath:ofObject:withOptions:change:]


SVTimeline : NSObject
  // instance methods
  -[SVTimeline dealloc]
  -[SVTimeline .cxx_destruct]
  -[SVTimeline init]


SVBundleClass : NSObject

SVImageLayer : CALayer
 @property  UIImage *image
 @property  NSString *identifier

  // instance methods
  -[SVImageLayer identifier]
  -[SVImageLayer .cxx_destruct]
  -[SVImageLayer image]
  -[SVImageLayer setIdentifier:]
  -[SVImageLayer setImage:]


SVMediaPlaybackController : NSObject
 @property  NSMapTable *timeControlStatusObservers
 @property  AVPlayer *currentlyPlaying

  // instance methods
  -[SVMediaPlaybackController .cxx_destruct]
  -[SVMediaPlaybackController setCurrentlyPlaying:]
  -[SVMediaPlaybackController init]
  -[SVMediaPlaybackController currentlyPlaying]
  -[SVMediaPlaybackController registerPlayer:]
  -[SVMediaPlaybackController unregisterPlayer:]
  -[SVMediaPlaybackController updateCurrentlyPlaying:]
  -[SVMediaPlaybackController timeControlStatusObservers]


SVVideoVolumeObserver : NSObject <SVVideoPlaybackObserver, SVVideoVolumeObserving>
 @property  SVPlaybackCoordinator *playbackCoordinator
 @property  AVAudioSession *audioSession
 @property  SVKeyValueObserver *outputVolumeObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL muted
 @property  float volume
 @property  @? volumeChangeBlock
 @property  @? muteStateChangeBlock

  // instance methods
  -[SVVideoVolumeObserver muted]
  -[SVVideoVolumeObserver .cxx_destruct]
  -[SVVideoVolumeObserver volume]
  -[SVVideoVolumeObserver volumeChanged:]
  -[SVVideoVolumeObserver audioSession]
  -[SVVideoVolumeObserver playbackCoordinator]
  -[SVVideoVolumeObserver playbackCoordinatorMuteStateChanged:]
  -[SVVideoVolumeObserver volumeChangeBlock]
  -[SVVideoVolumeObserver onVolumeChange:]
  -[SVVideoVolumeObserver muteStateChangeBlock]
  -[SVVideoVolumeObserver onMuteStateChange:]
  -[SVVideoVolumeObserver initWithPlaybackCoordinator:audioSession:]
  -[SVVideoVolumeObserver updateWithVolume:muted:]
  -[SVVideoVolumeObserver outputVolumeObserver]


SVButton : UIButton
 @property  {UIEdgeInsets=dddd} touchInsets
 @property  @? touchUpInsideBlock

  // instance methods
  -[SVButton touchInsets]
  -[SVButton .cxx_destruct]
  -[SVButton pointInside:withEvent:]
  -[SVButton setTouchInsets:]
  -[SVButton initWithFrame:]
  -[SVButton onTouchUpInside:]
  -[SVButton _privateButtonTapped]
  -[SVButton touchUpInsideBlock]


SVPlaybackCoordinator : NSObject <SVVideoMetadata>
 @property  BOOL playbackRequested
 @property  NSHashTable *observers
 @property  SVAVPlayer *player
 @property  @? cancelHandler
 @property  BOOL initiatedPlayback
 @property  {CGSize=dd} dimensions
 @property  unsigned long state
 @property  SVKeyValueObserver *playerItemPresentationSizeObserver
 @property  SVKeyValueObserver *readyForDisplayObserver
 @property  NSError *error
 @property  <SVAVPlayerFactory> *playerFactory
 @property  SVKeyValueObserver *muteStateObserver
 @property  SVKeyValueObserver *playbackLikelyToKeepUpObserver
 @property  SVKeyValueObserver *playbackBufferFullObserver
 @property  SVTimeline *timeline
 @property  double pausedAtTime
 @property  <SVVideoProviding> *video
 @property  NSArray *loadedTimeRanges
 @property  double loadingProgress
 @property  BOOL playbackLikelyToKeepUp
 @property  BOOL playbackBufferFull
 @property  NSObject<SVVideoPlaybackHost> *host
 @property  BOOL muted
 @property  double duration
 @property  double time
 @property  double framerate
 @property  double timePlayed
 @property  double volume
 @property  {CGSize=dd} naturalSize
 @property  unsigned long playbackState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlaybackCoordinator muted]
  -[SVPlaybackCoordinator naturalSize]
  -[SVPlaybackCoordinator video]
  -[SVPlaybackCoordinator framerate]
  -[SVPlaybackCoordinator setCancelHandler:]
  -[SVPlaybackCoordinator time]
  -[SVPlaybackCoordinator playbackState]
  -[SVPlaybackCoordinator setHost:]
  -[SVPlaybackCoordinator load]
  -[SVPlaybackCoordinator error]
  -[SVPlaybackCoordinator state]
  -[SVPlaybackCoordinator pause]
  -[SVPlaybackCoordinator dimensions]
  -[SVPlaybackCoordinator .cxx_destruct]
  -[SVPlaybackCoordinator loadedTimeRanges]
  -[SVPlaybackCoordinator setError:]
  -[SVPlaybackCoordinator host]
  -[SVPlaybackCoordinator duration]
  -[SVPlaybackCoordinator player]
  -[SVPlaybackCoordinator loadingProgress]
  -[SVPlaybackCoordinator volume]
  -[SVPlaybackCoordinator setMuted:]
  -[SVPlaybackCoordinator setPlayer:]
  -[SVPlaybackCoordinator timeline]
  -[SVPlaybackCoordinator setState:]
  -[SVPlaybackCoordinator observers]
  -[SVPlaybackCoordinator playbackBufferFull]
  -[SVPlaybackCoordinator playbackLikelyToKeepUp]
  -[SVPlaybackCoordinator cancelHandler]
  -[SVPlaybackCoordinator stateChanged]
  -[SVPlaybackCoordinator timePlayed]
  -[SVPlaybackCoordinator setDimensions:]
  -[SVPlaybackCoordinator addPlaybackObserver:]
  -[SVPlaybackCoordinator removePlaybackObserver:]
  -[SVPlaybackCoordinator playbackReadyToStart]
  -[SVPlaybackCoordinator playbackStarted]
  -[SVPlaybackCoordinator playbackPaused]
  -[SVPlaybackCoordinator playbackResumed]
  -[SVPlaybackCoordinator playbackFinished]
  -[SVPlaybackCoordinator playbackFailedWithError:]
  -[SVPlaybackCoordinator playbackInitiatedWithButtonTapped:]
  -[SVPlaybackCoordinator timeElapsed:duration:]
  -[SVPlaybackCoordinator playWithButtonTapped:]
  -[SVPlaybackCoordinator pausedAtTime]
  -[SVPlaybackCoordinator setPausedAtTime:]
  -[SVPlaybackCoordinator initWithVideo:playerFactory:]
  -[SVPlaybackCoordinator seekToTime:withCompletionBlock:]
  -[SVPlaybackCoordinator loadVideoIfNeeded]
  -[SVPlaybackCoordinator setupPlayerWithURL:]
  -[SVPlaybackCoordinator loadedTimeRangesChanged]
  -[SVPlaybackCoordinator addPlaybackBuferObserver]
  -[SVPlaybackCoordinator playbackBufferFullStateChanged]
  -[SVPlaybackCoordinator addPlaybackLikelyToKeepUpObserver]
  -[SVPlaybackCoordinator playbackLikelyToKeepUpStateChanged]
  -[SVPlaybackCoordinator addMuteStateObserver]
  -[SVPlaybackCoordinator muteStateChanged]
  -[SVPlaybackCoordinator addPlayerItemPresentationSizeObserver]
  -[SVPlaybackCoordinator removePlayerItemPresentationSizeObserver]
  -[SVPlaybackCoordinator configureTimeline]
  -[SVPlaybackCoordinator playbackPausedAtTime:]
  -[SVPlaybackCoordinator playbackResumedAtTime:]
  -[SVPlaybackCoordinator supportImpressionTracking]
  -[SVPlaybackCoordinator supportsQuartileTracking]
  -[SVPlaybackCoordinator playbackRequested]
  -[SVPlaybackCoordinator setPlaybackRequested:]
  -[SVPlaybackCoordinator initiatedPlayback]
  -[SVPlaybackCoordinator setInitiatedPlayback:]
  -[SVPlaybackCoordinator playerItemPresentationSizeObserver]
  -[SVPlaybackCoordinator setPlayerItemPresentationSizeObserver:]
  -[SVPlaybackCoordinator readyForDisplayObserver]
  -[SVPlaybackCoordinator setReadyForDisplayObserver:]
  -[SVPlaybackCoordinator playerFactory]
  -[SVPlaybackCoordinator muteStateObserver]
  -[SVPlaybackCoordinator setMuteStateObserver:]
  -[SVPlaybackCoordinator playbackLikelyToKeepUpObserver]
  -[SVPlaybackCoordinator setPlaybackLikelyToKeepUpObserver:]
  -[SVPlaybackCoordinator playbackBufferFullObserver]
  -[SVPlaybackCoordinator setPlaybackBufferFullObserver:]


SVPlayerLayer : CALayer
 @property  AVPlayerLayer *playerLayer
 @property  SVLooper *looper
 @property  SVKeyValueObserver *readyForDisplayObserver
 @property  SVKeyValueObserver *statusObserver
 @property  SVNonAnimatingDelegate *nonAnimatingDelegate
 @property  unsigned long currentPlaybackKind
 @property  SVImageLayer *stillImageLayer
 @property  AVPlayer *player
 @property  NSString *videoGravity
 @property  BOOL shouldPlayInBackground

  // class methods
  +[SVPlayerLayer defaultActionForKey:]

  // instance methods
  -[SVPlayerLayer playerLayer]
  -[SVPlayerLayer videoGravity]
  -[SVPlayerLayer layoutSublayers]
  -[SVPlayerLayer pause]
  -[SVPlayerLayer dealloc]
  -[SVPlayerLayer initWithLayer:]
  -[SVPlayerLayer .cxx_destruct]
  -[SVPlayerLayer setVideoGravity:]
  -[SVPlayerLayer initialize]
  -[SVPlayerLayer player]
  -[SVPlayerLayer setPlayerLayer:]
  -[SVPlayerLayer setPlayer:]
  -[SVPlayerLayer sceneDidEnterBackground]
  -[SVPlayerLayer play]
  -[SVPlayerLayer init]
  -[SVPlayerLayer sceneWillEnterForeground]
  -[SVPlayerLayer initWithCoder:]
  -[SVPlayerLayer looper]
  -[SVPlayerLayer setLooper:]
  -[SVPlayerLayer playWithPlaybackKind:looping:]
  -[SVPlayerLayer stillImageLayer]
  -[SVPlayerLayer setShouldPlayInBackground:]
  -[SVPlayerLayer readyForDisplayObserver]
  -[SVPlayerLayer setReadyForDisplayObserver:]
  -[SVPlayerLayer reduceMotionStatusDidChange]
  -[SVPlayerLayer shouldPlayInBackground]
  -[SVPlayerLayer statusObserver]
  -[SVPlayerLayer setStatusObserver:]
  -[SVPlayerLayer nonAnimatingDelegate]
  -[SVPlayerLayer setNonAnimatingDelegate:]
  -[SVPlayerLayer currentPlaybackKind]
  -[SVPlayerLayer setCurrentPlaybackKind:]


SVAdGradientView : UIView
  // class methods
  +[SVAdGradientView layerClass]

  // instance methods
  -[SVAdGradientView initWithFrame:]


SVMaterialButton : SVButton
 @property  AVBackgroundView *backgroundView

  // instance methods
  -[SVMaterialButton .cxx_destruct]
  -[SVMaterialButton backgroundView]
  -[SVMaterialButton layoutSubviews]
  -[SVMaterialButton initWithFrame:]


SVLooper : NSObject
 @property  AVPlayer *player
 @property  SVVideoDurationObserver *durationObserver

  // instance methods
  -[SVLooper .cxx_destruct]
  -[SVLooper player]
  -[SVLooper initWithPlayer:]
  -[SVLooper durationObserver]


SVTimeBasedAction : NSObject
  // instance methods
  -[SVTimeBasedAction .cxx_destruct]


SVVideoAdSkipButton : SVButton
 @property  unsigned long skipDuration

  // instance methods
  -[SVVideoAdSkipButton intrinsicContentSize]
  -[SVVideoAdSkipButton initWithFrame:]
  -[SVVideoAdSkipButton setSkipDuration:]
  -[SVVideoAdSkipButton titleForDuration:]
  -[SVVideoAdSkipButton skipDuration]


SVNonAnimatingDelegate : NSObject <CALayerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVNonAnimatingDelegate actionForLayer:forKey:]


SVAudioSession : NSObject
 @property  BOOL audioSessionActive
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  NSMapTable *players
 @property  SVMediaPlaybackController *playbackController

  // class methods
  +[SVAudioSession sharedSession]

  // instance methods
  -[SVAudioSession .cxx_destruct]
  -[SVAudioSession semaphore]
  -[SVAudioSession init]
  -[SVAudioSession players]
  -[SVAudioSession isAudioSessionActive]
  -[SVAudioSession addInterestForPlayer:withMode:]
  -[SVAudioSession removeInterestForPlayer:]
  -[SVAudioSession registerPlaybackControlForPlayer:withMode:]
  -[SVAudioSession shouldActivateAudioSession]
  -[SVAudioSession canDeactivateAudioSession]
  -[SVAudioSession needsToSetupAudioSessionCategory]
  -[SVAudioSession setupAudioSessionCategory]
  -[SVAudioSession activateAudioSessionCategory]
  -[SVAudioSession deactivateAudioSessionCategory]
  -[SVAudioSession desiredAudioSessionConfiguration]
  -[SVAudioSession setAudioSessionActive:]
  -[SVAudioSession playbackController]


SVAVPlayer : AVPlayer <AVPlayerItemDelegate>
 @property  int playbackStatus
 @property  double elapsedTime
 @property  double duration
 @property  double frameRate
 @property  id timeObserver
 @property  {?=qiIq} cumulativeTimePlayed
 @property  SVKeyValueObserver *timeControlStatusObserver
 @property  SVKeyValueObserver *statusObserver
 @property  SVKeyValueObserver *durationObserver
 @property  SVKeyValueObserver *loadedTimeRangesObserver
 @property  int audioMode
 @property  int playbackPosition
 @property  @? playbackStatusBlock
 @property  @? playbackProgressBlock
 @property  @? loadingProgressBlock
 @property  double totalTimePlayed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAVPlayer elapsedTime]
  -[SVAVPlayer setDuration:]
  -[SVAVPlayer initWithURL:]
  -[SVAVPlayer setElapsedTime:]
  -[SVAVPlayer dealloc]
  -[SVAVPlayer frameRate]
  -[SVAVPlayer .cxx_destruct]
  -[SVAVPlayer duration]
  -[SVAVPlayer setFrameRate:]
  -[SVAVPlayer audioMode]
  -[SVAVPlayer setPlaybackPosition:]
  -[SVAVPlayer playbackPosition]
  -[SVAVPlayer statusChanged]
  -[SVAVPlayer updateTime:duration:]
  -[SVAVPlayer addObservers]
  -[SVAVPlayer playbackStatus]
  -[SVAVPlayer setTimeObserver:]
  -[SVAVPlayer timeObserver]
  -[SVAVPlayer initWithPlayerItem:audioMode:]
  -[SVAVPlayer seekToStartWithCompletionBlock:]
  -[SVAVPlayer totalTimePlayed]
  -[SVAVPlayer setPlaybackStatusBlock:]
  -[SVAVPlayer loadedTimeRangesChanged]
  -[SVAVPlayer statusObserver]
  -[SVAVPlayer setStatusObserver:]
  -[SVAVPlayer durationObserver]
  -[SVAVPlayer playedToEnd:]
  -[SVAVPlayer initWithURL:audioMode:]
  -[SVAVPlayer loadFrameRate]
  -[SVAVPlayer startTimeObserver]
  -[SVAVPlayer stopTimeObserver]
  -[SVAVPlayer setElapsedTime:duration:]
  -[SVAVPlayer setPlaybackStatus:]
  -[SVAVPlayer timeControlStatusChanged]
  -[SVAVPlayer durationChanged]
  -[SVAVPlayer playbackStatusBlock]
  -[SVAVPlayer playbackProgressBlock]
  -[SVAVPlayer setPlaybackProgressBlock:]
  -[SVAVPlayer loadingProgressBlock]
  -[SVAVPlayer setLoadingProgressBlock:]
  -[SVAVPlayer cumulativeTimePlayed]
  -[SVAVPlayer setCumulativeTimePlayed:]
  -[SVAVPlayer timeControlStatusObserver]
  -[SVAVPlayer setTimeControlStatusObserver:]
  -[SVAVPlayer setDurationObserver:]
  -[SVAVPlayer loadedTimeRangesObserver]
  -[SVAVPlayer setLoadedTimeRangesObserver:]


SVPlayerItemObserver : NSObject <SVPlayerItemObserving>
 @property  AVPlayer *player
 @property  SVKeyValueObserver *observer
 @property  AVPlayerItem *item
 @property  @? changeBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVPlayerItemObserver setItem:]
  -[SVPlayerItemObserver .cxx_destruct]
  -[SVPlayerItemObserver observer]
  -[SVPlayerItemObserver player]
  -[SVPlayerItemObserver initWithPlayer:]
  -[SVPlayerItemObserver item]
  -[SVPlayerItemObserver onChange:]
  -[SVPlayerItemObserver changeBlock]


SVAudioSessionConfiguration : NSObject
 @property  NSString *category
 @property  NSString *mode
 @property  unsigned long routeSharingPolicy

  // instance methods
  -[SVAudioSessionConfiguration setCategory:]
  -[SVAudioSessionConfiguration setRouteSharingPolicy:]
  -[SVAudioSessionConfiguration isEqualToConfiguration:]
  -[SVAudioSessionConfiguration category]
  -[SVAudioSessionConfiguration mode]
  -[SVAudioSessionConfiguration .cxx_destruct]
  -[SVAudioSessionConfiguration setMode:]
  -[SVAudioSessionConfiguration routeSharingPolicy]
  -[SVAudioSessionConfiguration initWithCategory:mode:policy:]


SVVideoAdViewControllerProvider : NSObject <SVVideoAdViewControllerProviding>
 @property  <SVVideoAdViewControllerProviding> *viewControllerProvider
 @property  UIViewController *viewControllerForModalPresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoAdViewControllerProvider .cxx_destruct]
  -[SVVideoAdViewControllerProvider viewControllerForModalPresentation]
  -[SVVideoAdViewControllerProvider viewControllerProvider]
  -[SVVideoAdViewControllerProvider initWithViewControllerProvider:]


SVAutomaticFullscreenVideoPlaybackBehaviorManager : NSObject <SVVideoPlaybackObserver>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} videoBounds
 @property  unsigned long behavior
 @property  <SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager behavior]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager videoBounds]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager setDelegate:]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager setBehavior:]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager delegate]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager .cxx_destruct]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager setVideoBounds:]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager conditionsChanged]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager playbackCoordinatorStartedPlayback:]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager playbackCoordinatorResumedPlayback:]
  -[SVAutomaticFullscreenVideoPlaybackBehaviorManager fullscreenPlaybackRequiredForCurrentConditions]


SVVideoPlaybackQueue : NSObject <SVVideoPlaybackObserver>
 @property  NSMutableArray *queue
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVVideoPlaybackQueue .cxx_destruct]
  -[SVVideoPlaybackQueue count]
  -[SVVideoPlaybackQueue appendItem:]
  -[SVVideoPlaybackQueue queue]
  -[SVVideoPlaybackQueue init]
  -[SVVideoPlaybackQueue advance]
  -[SVVideoPlaybackQueue insertItem:afterItem:]
  -[SVVideoPlaybackQueue prependItem:]
  -[SVVideoPlaybackQueue playbackCoordinator:playbackFailedWithError:]
  -[SVVideoPlaybackQueue playbackCoordinator:timeElapsed:duration:]
  -[SVVideoPlaybackQueue playbackCoordinator:loadingProgressed:]
  -[SVVideoPlaybackQueue prefetchItemAfterCoordinatorIfPossible:]


SVAVPlayerFactory : NSObject <SVAVPlayerFactory>
 @property  int audioMode
 @property  <SVAVPlayerItemFactory> *playerItemFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SVAVPlayerFactory .cxx_destruct]
  -[SVAVPlayerFactory audioMode]
  -[SVAVPlayerFactory createPlayerWithURL:]
  -[SVAVPlayerFactory initWithAudioMode:playerItemFactory:]
  -[SVAVPlayerFactory playerItemFactory]


SVTouchForwardingView : UIView
 @property  double lastTouchTimestamp
 @property  @? touchedBlock

  // instance methods
  -[SVTouchForwardingView hitTest:withEvent:]
  -[SVTouchForwardingView .cxx_destruct]
  -[SVTouchForwardingView lastTouchTimestamp]
  -[SVTouchForwardingView setLastTouchTimestamp:]
  -[SVTouchForwardingView touchedBlock]
  -[SVTouchForwardingView onTouch:]


SVVideoPlayerViewController : UIViewController <SVVideoPlaybackObserver, AVPlayerViewControllerDelegate_WebKitOnly, AVPlayerViewControllerDelegatePrivate, SVAutomaticFullscreenVideoPlaybackBehaviorManagerDelegate, UIGestureRecognizerDelegate, SVVideoAdViewControllerProviding>
 @property  SVVideoPlaybackQueue *queue
 @property  SVPlaybackCoordinator *coordinator
 @property  <SVVideoAdProviding> *videoAd
 @property  BOOL playButtonTapped
 @property  SVLearnMoreButton *learnMoreButton
 @property  SVVideoAdSkipButton *skipButton
 @property  SVAdPrivacyButton *adPrivacyButton
 @property  SVAdGradientView *adGradientView
 @property  UIActivityIndicatorView *activityIndicatorView
 @property  SVKeyValueObserver *videoBoundsObserver
 @property  SVAutomaticFullscreenVideoPlaybackBehaviorManager *fullscreenBehaviorManager
 @property  unsigned long mode
 @property  BOOL fullscreen
 @property  SVVideoVolumeObserver *volumeObserver
 @property  UIGestureRecognizer *tapGesture
 @property  BOOL showsPlaybackControls
 @property  <SVVideoPlayerViewControllerDelegate> *delegate
 @property  <SVVideoPlayerViewControllerDataSource> *dataSource
 @property  BOOL enablePictureInPictureBehaviors
 @property  BOOL playing
 @property  BOOL fullscreenInProgress
 @property  unsigned long fullscreenBehavior
 @property  BOOL pictureInPictureActive
 @property  AVPlayerViewController *playerViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIViewController *viewControllerForModalPresentation

  // instance methods
  -[SVVideoPlayerViewController updateViewConstraints]
  -[SVVideoPlayerViewController dataSource]
  -[SVVideoPlayerViewController setShowsPlaybackControls:]
  -[SVVideoPlayerViewController playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:]
  -[SVVideoPlayerViewController setDelegate:]
  -[SVVideoPlayerViewController tapGesture]
  -[SVVideoPlayerViewController delegate]
  -[SVVideoPlayerViewController viewDidAppear:]
  -[SVVideoPlayerViewController pause]
  -[SVVideoPlayerViewController dealloc]
  -[SVVideoPlayerViewController playerViewController]
  -[SVVideoPlayerViewController mode]
  -[SVVideoPlayerViewController .cxx_destruct]
  -[SVVideoPlayerViewController viewDidLoad]
  -[SVVideoPlayerViewController loadView]
  -[SVVideoPlayerViewController finished]
  -[SVVideoPlayerViewController viewDidLayoutSubviews]
  -[SVVideoPlayerViewController setMode:]
  -[SVVideoPlayerViewController stopPictureInPicture]
  -[SVVideoPlayerViewController isPlaying]
  -[SVVideoPlayerViewController setQueue:]
  -[SVVideoPlayerViewController setCoordinator:]
  -[SVVideoPlayerViewController setDataSource:]
  -[SVVideoPlayerViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SVVideoPlayerViewController viewDidDisappear:]
  -[SVVideoPlayerViewController queue]
  -[SVVideoPlayerViewController showsPlaybackControls]
  -[SVVideoPlayerViewController setFullscreen:]
  -[SVVideoPlayerViewController coordinator]
  -[SVVideoPlayerViewController isFullscreen]
  -[SVVideoPlayerViewController init]
  -[SVVideoPlayerViewController isPictureInPictureActive]
  -[SVVideoPlayerViewController activityIndicatorView]
  -[SVVideoPlayerViewController setActivityIndicatorView:]
  -[SVVideoPlayerViewController tapped]
  -[SVVideoPlayerViewController advance]
  -[SVVideoPlayerViewController playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:]
  -[SVVideoPlayerViewController playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:]
  -[SVVideoPlayerViewController playerViewControllerWillStartPictureInPicture:]
  -[SVVideoPlayerViewController playerViewControllerDidStartPictureInPicture:]
  -[SVVideoPlayerViewController playerViewControllerWillStopPictureInPicture:]
  -[SVVideoPlayerViewController playerViewControllerDidStopPictureInPicture:]
  -[SVVideoPlayerViewController playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
  -[SVVideoPlayerViewController setPlayerViewController:]
  -[SVVideoPlayerViewController learnMoreButton]
  -[SVVideoPlayerViewController setLearnMoreButton:]
  -[SVVideoPlayerViewController playerViewController:shouldExitFullScreenWithReason:]
  -[SVVideoPlayerViewController skipButton]
  -[SVVideoPlayerViewController setSkipButton:]
  -[SVVideoPlayerViewController playerViewController:metricsCollectionEventOccured:]
  -[SVVideoPlayerViewController willUnload]
  -[SVVideoPlayerViewController viewControllerForModalPresentation]
  -[SVVideoPlayerViewController startPictureInPictureIfPossible]
  -[SVVideoPlayerViewController isFullscreenInProgress]
  -[SVVideoPlayerViewController playWithButtonTapped:]
  -[SVVideoPlayerViewController setEnablePictureInPictureBehaviors:]
  -[SVVideoPlayerViewController addDebuggerAction:]
  -[SVVideoPlayerViewController embedVideoPlayerIfNeeded]
  -[SVVideoPlayerViewController removeVideoPlayerIfNeeded]
  -[SVVideoPlayerViewController learnMoreButtonTapped:]
  -[SVVideoPlayerViewController enterFullscreenWithCompletionBlock:]
  -[SVVideoPlayerViewController setFullscreenBehavior:]
  -[SVVideoPlayerViewController playButtonTapped]
  -[SVVideoPlayerViewController playbackCoordinatorStartedPlayback:]
  -[SVVideoPlayerViewController playbackCoordinatorResumedPlayback:]
  -[SVVideoPlayerViewController playbackCoordinatorPausedPlayback:]
  -[SVVideoPlayerViewController playbackCoordinatorFinishedPlayback:]
  -[SVVideoPlayerViewController playbackCoordinator:playbackFailedWithError:]
  -[SVVideoPlayerViewController playbackCoordinator:timeElapsed:duration:]
  -[SVVideoPlayerViewController playbackCoordinatorStateChanged:]
  -[SVVideoPlayerViewController fullscreenBehaviorManagerRequiresFullscreenPlayback:]
  -[SVVideoPlayerViewController adSkipButtonTapped:]
  -[SVVideoPlayerViewController exitFullscreenWithCompletionBlock:]
  -[SVVideoPlayerViewController refreshControlsForPlaybackCoordinator:]
  -[SVVideoPlayerViewController setupQueueIfNeeded]
  -[SVVideoPlayerViewController transitionToCoordinator:]
  -[SVVideoPlayerViewController startPlaybackForCoordinatorIfAllowed:]
  -[SVVideoPlayerViewController playbackAllowedForPlaybackCoordinator:]
  -[SVVideoPlayerViewController updateSkipButtonWithThreshold:time:]
  -[SVVideoPlayerViewController updateAdsButtonsVisibility]
  -[SVVideoPlayerViewController enablePictureInPictureBehaviors]
  -[SVVideoPlayerViewController fullscreenBehavior]
  -[SVVideoPlayerViewController videoAd]
  -[SVVideoPlayerViewController setVideoAd:]
  -[SVVideoPlayerViewController setPlayButtonTapped:]
  -[SVVideoPlayerViewController adPrivacyButton]
  -[SVVideoPlayerViewController setAdPrivacyButton:]
  -[SVVideoPlayerViewController adGradientView]
  -[SVVideoPlayerViewController setAdGradientView:]
  -[SVVideoPlayerViewController videoBoundsObserver]
  -[SVVideoPlayerViewController setVideoBoundsObserver:]
  -[SVVideoPlayerViewController fullscreenBehaviorManager]
  -[SVVideoPlayerViewController volumeObserver]
  -[SVVideoPlayerViewController setVolumeObserver:]


SVLearnMoreButton : SVButton
  // instance methods
  -[SVLearnMoreButton accessibilityLabel]
  -[SVLearnMoreButton accessibilityElements]
  -[SVLearnMoreButton setHighlighted:]
  -[SVLearnMoreButton intrinsicContentSize]
  -[SVLearnMoreButton initWithFrame:]
  -[SVLearnMoreButton traitCollectionDidChange:]
  -[SVLearnMoreButton isAccessibilityElement]


UIView(SVAdditions)
	// instance methods
	-[UIView(SVAdditions) setHidden:withShowDelay:]

(SVAXElementOcclusion)
	// instance methods
	-[(SVAXElementOcclusion) svax_shouldBeOccluded]

NSError(SVVideoError)
	// class methods
	+[NSError(SVVideoError) videoErrorWithUnderlyingError:]
	+[NSError(SVVideoError) videoErrorWithErrorCode:]
	+[NSError(SVVideoError) errorCodeForUnderlyingErrorDomain:]

01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0a00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0b00 /System/Library/Frameworks/AVKit.framework/AVKit: AVBackgroundView 
01 00 0b00 /System/Library/Frameworks/AVKit.framework/AVKit: AVControlItem 
01 00 0b00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPictureInPictureController 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0b00 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0500 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0600 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
