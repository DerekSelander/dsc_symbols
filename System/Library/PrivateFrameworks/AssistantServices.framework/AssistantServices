|| __DATA.__common _AFSiriLogContextMultiUser
|| __DATA.__data _AFLogContextNetworkingFunctional
|| __DATA.__data _AFLogContextNetworkingPerformance
|| __DATA.__data _AFServiceDeviceContextMetricsKeyCoreAnalyticsLoggingPayload
|| __DATA.__data _AFServiceDeviceContextMetricsKeyProductType
|| __DATA.__data _AFSiriTetherMachService
|| __DATA.__data _kAFLogContextAnalysis
|| __DATA.__data _kAFLogContextAnalytics
|| __DATA.__data _kAFLogContextClientFlow
|| __DATA.__data _kAFLogContextConnection
|| __DATA.__data _kAFLogContextDaemon
|| __DATA.__data _kAFLogContextDaemonAce
|| __DATA.__data _kAFLogContextDatabase
|| __DATA.__data _kAFLogContextDeviceSync
|| __DATA.__data _kAFLogContextDispatch
|| __DATA.__data _kAFLogContextFides
|| __DATA.__data _kAFLogContextIDS
|| __DATA.__data _kAFLogContextInternalAuth
|| __DATA.__data _kAFLogContextLocation
|| __DATA.__data _kAFLogContextMediaSupport
|| __DATA.__data _kAFLogContextMockServer
|| __DATA.__data _kAFLogContextMusicIndexer
|| __DATA.__data _kAFLogContextMyriad
|| __DATA.__data _kAFLogContextPerformance
|| __DATA.__data _kAFLogContextPlugin
|| __DATA.__data _kAFLogContextProxy
|| __DATA.__data _kAFLogContextService
|| __DATA.__data _kAFLogContextSession
|| __DATA.__data _kAFLogContextSpeech
|| __DATA.__data _kAFLogContextSync
|| __DATA.__data _kAFLogContextTinyCDB
|| __DATA.__data _kAFLogContextUtility
|| __DATA.__data _kMyriadAdvertisementContextRecordVersion
|| __DATA.__data _myrAccessoryMetricsMessageKey
|| __DATA.__data _myriad_attention_queue_label
|| __DATA.__data _myriad_context_queue_label
|| __DATA.__data _myriad_readiness_queue_label
|| __DATA.__data _myriad_timer_mgmt_queue_label
|| __DATA.__data _myriad_work_queue_label
|| __DATA.__objc_data _OBJC_CLASS_$_AFAccessibilityObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFAccessibilityState
|| __DATA.__objc_data _OBJC_CLASS_$_AFAccount
|| __DATA.__objc_data _OBJC_CLASS_$_AFAnalyticsObserverConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFAnalyticsTurnBasedInstrumentationContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFAppContextAggregator
|| __DATA.__objc_data _OBJC_CLASS_$_AFApplicationContextSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFAssertionContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFAssertionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_AFAssistantSamplingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AFAssistedDisambiguationRules
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioPowerXPCProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioSessionAssertionConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioSessionAssertionRemoteAcquisitionService
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioSessionCoordinationDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioSessionCoordinationSystemInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFAudioState
|| __DATA.__objc_data _OBJC_CLASS_$_AFBluetoothHeadphoneInEarDetectionState
|| __DATA.__objc_data _OBJC_CLASS_$_AFBluetoothWirelessSplitterSessionStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFBulletinAction
|| __DATA.__objc_data _OBJC_CLASS_$_AFBundleResource
|| __DATA.__objc_data _OBJC_CLASS_$_AFBundleResourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFCallStateSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFCarPlayAnnouncementRequestCapabilityProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFChildConversationItemList
|| __DATA.__objc_data _OBJC_CLASS_$_AFClientConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AFClientInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFClientLite
|| __DATA.__objc_data _OBJC_CLASS_$_AFClientLiteInternal
|| __DATA.__objc_data _OBJC_CLASS_$_AFClientPluginManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFClockAlarm
|| __DATA.__objc_data _OBJC_CLASS_$_AFClockAlarmSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFClockItemStorage
|| __DATA.__objc_data _OBJC_CLASS_$_AFClockTimer
|| __DATA.__objc_data _OBJC_CLASS_$_AFClockTimerSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFCoercion
|| __DATA.__objc_data _OBJC_CLASS_$_AFConnectionAvailabilityObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFConnectionClientServiceDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_AFConnectionEntitlementCache
|| __DATA.__objc_data _OBJC_CLASS_$_AFConnectionUserInteractionAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_AFContextDonationService
|| __DATA.__objc_data _OBJC_CLASS_$_AFContextRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFContextResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversation
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversationError
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversationInsertion
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversationItem
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversationStore
|| __DATA.__objc_data _OBJC_CLASS_$_AFConversationTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_AFCoreAnalyticsCrossDeviceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AFCoreAnalyticsDeviceContextPayload
|| __DATA.__objc_data _OBJC_CLASS_$_AFCoreAnalyticsLoggingService
|| __DATA.__objc_data _OBJC_CLASS_$_AFCreateAlarmRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFCreateAlarmResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFCreateMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeleteAlarmRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceContextConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceContextHistoryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceContextMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceRequestHandlingRecord
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceRingerSwitchObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFDeviceStateConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFDialogPhase
|| __DATA.__objc_data _OBJC_CLASS_$_AFDictationConnectionServiceDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_AFDictationDiscoverabilitySignalsStreamManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFDictationSamplingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AFDictionarySchema
|| __DATA.__objc_data _OBJC_CLASS_$_AFDisambiguationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AFDisambiguationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFDisambiguationStore
|| __DATA.__objc_data _OBJC_CLASS_$_AFDismissAlarmRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFDismissTimerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFEnablementConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AFEnablementConfigurationProviderParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AFEnablementFlowConfigurationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFEndpointInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFError
|| __DATA.__objc_data _OBJC_CLASS_$_AFExperimentGroup
|| __DATA.__objc_data _OBJC_CLASS_$_AFExperimentServerConfigurationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFExperimentState
|| __DATA.__objc_data _OBJC_CLASS_$_AFFlowServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFFuture
|| __DATA.__objc_data _OBJC_CLASS_$_AFGetSettingsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFGetSettingsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFGetTimerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFGetTimerResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFHeadphonesAnnouncementRequestCapabilityProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFHeartBeat
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAccessorySiriDataSharingChangeLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAccessorySiriDataSharingPropagationLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAnnouncement
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAnnouncementObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeAnnouncementSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFHomeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFImagePNGData
|| __DATA.__objc_data _OBJC_CLASS_$_AFInitiateCallRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFInstrumentationObserverConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFInterstitialCommandWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_AFInterstitialConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AFInterstitialProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFKeyValueObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFKeyValueObservingDeliveryOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AFLanguageDetectionUserContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFLocalization
|| __DATA.__objc_data _OBJC_CLASS_$_AFLocationSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFMachServiceSiriTaskDeliverer
|| __DATA.__objc_data _OBJC_CLASS_$_AFManagedStorageConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFMediaPlaybackStateSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFMediaRemoteDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFMemoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFMemoryPressureObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFModesConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AFMultiArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AFMultiUserStateSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFMutableConversationItem
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadAccessoryMessage
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadAdvertisementContextManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadAdvertisementContextRecord
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadEmergencyCallPunchout
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadGoodnessScoreContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadGoodnessScoreEvaluator
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadGoodnessScoreOverrideContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadGoodnessScoreOverrideState
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadInstrumentation
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadPerceptualAudioHash
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadPreferences
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadRecord
|| __DATA.__objc_data _OBJC_CLASS_$_AFMyriadSession
|| __DATA.__objc_data _OBJC_CLASS_$_AFNotifyStatePublisher
|| __DATA.__objc_data _OBJC_CLASS_$_AFObjectCreatedSiriResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFObjectUpdatedSiriResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFOneArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AFOpportuneSpeakingModelFeedback
|| __DATA.__objc_data _OBJC_CLASS_$_AFOpportuneSpeakingModelFeedbackManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFOpportuneSpeakingModuleDataCollection
|| __DATA.__objc_data _OBJC_CLASS_$_AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable
|| __DATA.__objc_data _OBJC_CLASS_$_AFOutputVoiceColorDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_AFOutputVoiceDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_AFPairedBluetoothDevicesObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFPeerContentTuple
|| __DATA.__objc_data _OBJC_CLASS_$_AFPeerMap
|| __DATA.__objc_data _OBJC_CLASS_$_AFPersonalUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AFPhonemeMapper
|| __DATA.__objc_data _OBJC_CLASS_$_AFPhonemeTranscription
|| __DATA.__objc_data _OBJC_CLASS_$_AFPineBoardSystemStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFPluginBundle
|| __DATA.__objc_data _OBJC_CLASS_$_AFPluginManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFPowerAssertionManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFRemoteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFRemoteRequestWatcher
|| __DATA.__objc_data _OBJC_CLASS_$_AFRequestCompletionOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AFRequestHandlingContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFSUPFunctionProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFSafetyBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AFSamplingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AFSearchAlarmsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSearchAlarmsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFSecurityConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFServiceContextSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFSetSettingsRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSetSettingsResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFSetTimerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSettingsConnectionServiceDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_AFSharedConfidenceScore
|| __DATA.__objc_data _OBJC_CLASS_$_AFShowAlarmRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFShowNextEventRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFShowSettingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFShowTimerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriAceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriAcousticIDRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationConnection
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationContext
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationHandlerAssistantDaemon
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationHandlerCoreSpeechDaemon
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationHandlerFrontendProcess
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationListener
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriActivationResult
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriAnnounceIncomingCallRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriAnnouncementRequestCapabilityManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriAnnouncementRoute
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriClientStateManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriDebugUIRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriHomeAutomationBackgroundRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriHomeAutomationRequestInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriIncomingCall
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriMusicSmartPlayRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriMusicSubscriptionLeaseTakenRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriNotificationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriPhoneticContactNames
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriRequestSucceededResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriRingtone
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTask
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskContextProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskDeliveryHandler
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskExecution
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskService
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskUsageResult
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTaskmaster
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriTether
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriUserNotificationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFSiriUserNotificationRequestCapabilityManager
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeakableUtteranceParser
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechAcousticFeature
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechAudioAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechLatticeMitigatorResult
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechRecordingAlertBehavior
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechRecordingAlertPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_AFSpeechTestRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AFSynchronousClientLite
|| __DATA.__objc_data _OBJC_CLASS_$_AFSystemStateSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AFTestRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AFThreeArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AFTipKitDonator
|| __DATA.__objc_data _OBJC_CLASS_$_AFTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_AFTreeNodePropertyListSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_AFTriggerlessListeningOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AFTwoArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_CLASS_$_AFUIApplicationSiriTaskDeliverer
|| __DATA.__objc_data _OBJC_CLASS_$_AFUpdateAlarmRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFUpdateAlarmResponse
|| __DATA.__objc_data _OBJC_CLASS_$_AFUpdateMessageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AFUserNotificationAnnouncementSpeakingStateObserver
|| __DATA.__objc_data _OBJC_CLASS_$_AFUserNotificationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_AFUserUtterance
|| __DATA.__objc_data _OBJC_CLASS_$_AFUserUtteranceSelectionResults
|| __DATA.__objc_data _OBJC_CLASS_$_AFUtteranceSuggestions
|| __DATA.__objc_data _OBJC_CLASS_$_SISchemaClientAnyEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SISchemaClientTurnBasedEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SISchemaClientTurnContext
|| __DATA.__objc_data _OBJC_CLASS_$_STAlarm
|| __DATA.__objc_data _OBJC_CLASS_$_STCall
|| __DATA.__objc_data _OBJC_CLASS_$_STCity
|| __DATA.__objc_data _OBJC_CLASS_$_STContactAddress
|| __DATA.__objc_data _OBJC_CLASS_$_STPerson
|| __DATA.__objc_data _OBJC_CLASS_$_STPersonContactHandle
|| __DATA.__objc_data _OBJC_CLASS_$_STSetting
|| __DATA.__objc_data _OBJC_CLASS_$_STSettingChange
|| __DATA.__objc_data _OBJC_CLASS_$_STSiriContext
|| __DATA.__objc_data _OBJC_CLASS_$_STSiriLocation
|| __DATA.__objc_data _OBJC_CLASS_$_STSiriMessage
|| __DATA.__objc_data _OBJC_CLASS_$_STSiriModelObject
|| __DATA.__objc_data _OBJC_CLASS_$_STTimer
|| __DATA.__objc_data _OBJC_CLASS_$__AFAccessibilityStateMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFApplicationContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFApplicationContextSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAssertionContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAssertionImpl
|| __DATA.__objc_data _OBJC_CLASS_$__AFAssertionProxy
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioDeviceInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioPlaybackRequestMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioPowerXPCSharedMemory
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioSessionCoordinationDeviceInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioSessionCoordinationSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFAudioSessionCoordinationSystemInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFBluetoothDeviceInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFBluetoothHeadphoneInEarDetectionStateMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFBluetoothWirelessSplitterSessionInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFBundleResourceMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFCallStateSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClientConfigurationMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClientInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClockAlarmMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClockAlarmSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClockTimerMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFClockTimerSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFCommandExecutionInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFCoreAnalyticsDeviceContextPayloadMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFDataStoreEntry
|| __DATA.__objc_data _OBJC_CLASS_$__AFDeleteSiriHistoryContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFDeviceContextHistoryConfigurationMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFDeviceContextServiceDelegateProxy
|| __DATA.__objc_data _OBJC_CLASS_$__AFDeviceRequestHandlingRecordMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFEnablementConfigurationProviderParametersMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFEndpointInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentConfigurationMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentGroupMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentServerConfigurationInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFExperimentStateMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeAccessoryInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeAccessorySiriDataSharingChangeLogEventMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeAccessorySiriDataSharingPropagationLogEventMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeAnnouncementMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeAnnouncementSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFHomeInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFInstanceInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFInterstitialAction
|| __DATA.__objc_data _OBJC_CLASS_$__AFInterstitialConfigurationMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFLocationSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMediaPlaybackStateSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMemoryInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFModesConfigurationMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMultiUserStateSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMyriadAdvertisementContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMyriadContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMyriadGoodnessScoreOverrideStateMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMyriadPerceptualAudioHashMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFMyriadSessionMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFOutputVoiceColorDescriptorMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFOutputVoiceDescriptorMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFPeerInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFRequestHandlingContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFServiceDeviceContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSetAudioSessionActiveContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSetAudioSessionActiveResultMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSharedConfidenceScoreMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSiriActivationContextMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSiriActivationResultMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSiriClientState
|| __DATA.__objc_data _OBJC_CLASS_$__AFSiriHomeAutomationRequestInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeakableUtterancePassThroughProvider
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechInfoMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechParametersMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechRecordingAlertBehaviorMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechRecordingAlertPolicyMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechSynthesisRecordMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSpeechTestRequestOptionsMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFSystemStateSnapshotMutation
|| __DATA.__objc_data _OBJC_CLASS_$__AFTestRequestOptionsMutation
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAccessibilityObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAccessibilityState
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAnalyticsObserverConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAnalyticsTurnBasedInstrumentationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAppContextAggregator
|| __DATA.__objc_data _OBJC_METACLASS_$_AFApplicationContextSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAssertionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAssertionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAssistantSamplingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAssistedDisambiguationRules
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioPowerXPCProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioSessionAssertionConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioSessionAssertionRemoteAcquisitionService
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioSessionCoordinationDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioSessionCoordinationSystemInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFAudioState
|| __DATA.__objc_data _OBJC_METACLASS_$_AFBluetoothHeadphoneInEarDetectionState
|| __DATA.__objc_data _OBJC_METACLASS_$_AFBluetoothWirelessSplitterSessionStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFBulletinAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AFBundleResource
|| __DATA.__objc_data _OBJC_METACLASS_$_AFBundleResourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCallStateSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCarPlayAnnouncementRequestCapabilityProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFChildConversationItemList
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClientConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClientInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClientLite
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClientLiteInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClientPluginManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClockAlarm
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClockAlarmSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClockItemStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClockTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_AFClockTimerSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCoercion
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConnectionAvailabilityObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConnectionClientServiceDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConnectionEntitlementCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConnectionUserInteractionAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_AFContextDonationService
|| __DATA.__objc_data _OBJC_METACLASS_$_AFContextRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFContextResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversation
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversationError
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversationInsertion
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversationItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversationStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AFConversationTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCoreAnalyticsCrossDeviceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCoreAnalyticsDeviceContextPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCoreAnalyticsLoggingService
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCreateAlarmRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCreateAlarmResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFCreateMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeleteAlarmRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceCapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceContextConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceContextHistoryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceContextMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceRequestHandlingRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceRingerSwitchObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDeviceStateConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDialogPhase
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDictationConnectionServiceDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDictationDiscoverabilitySignalsStreamManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDictationSamplingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDictionarySchema
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDisambiguationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDisambiguationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDisambiguationStore
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDismissAlarmRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFDismissTimerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFEnablementConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AFEnablementConfigurationProviderParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AFEnablementFlowConfigurationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFEndpointInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFError
|| __DATA.__objc_data _OBJC_METACLASS_$_AFExperimentGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_AFExperimentServerConfigurationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFExperimentState
|| __DATA.__objc_data _OBJC_METACLASS_$_AFFlowServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFFuture
|| __DATA.__objc_data _OBJC_METACLASS_$_AFGetSettingsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFGetSettingsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFGetTimerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFGetTimerResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHeadphonesAnnouncementRequestCapabilityProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHeartBeat
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAccessorySiriDataSharingChangeLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAccessorySiriDataSharingPropagationLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAnnouncement
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAnnouncementObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeAnnouncementSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFHomeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFImagePNGData
|| __DATA.__objc_data _OBJC_METACLASS_$_AFInitiateCallRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFInstrumentationObserverConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFInterstitialCommandWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_AFInterstitialConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AFInterstitialProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFKeyValueObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFKeyValueObservingDeliveryOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AFLanguageDetectionUserContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFLocalization
|| __DATA.__objc_data _OBJC_METACLASS_$_AFLocationSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMachServiceSiriTaskDeliverer
|| __DATA.__objc_data _OBJC_METACLASS_$_AFManagedStorageConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMediaPlaybackStateSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMediaRemoteDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMemoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMemoryPressureObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFModesConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMultiArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMultiUserStateSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMutableConversationItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadAccessoryMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadAdvertisementContextManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadAdvertisementContextRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadEmergencyCallPunchout
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadGoodnessScoreContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadGoodnessScoreEvaluator
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadGoodnessScoreOverrideContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadGoodnessScoreOverrideState
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadInstrumentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadPerceptualAudioHash
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_AFMyriadSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AFNotifyStatePublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_AFObjectCreatedSiriResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFObjectUpdatedSiriResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOneArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOpportuneSpeakingModelFeedback
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOpportuneSpeakingModelFeedbackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOpportuneSpeakingModuleDataCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOutputVoiceColorDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_AFOutputVoiceDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPairedBluetoothDevicesObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPeerContentTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPeerMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPersonalUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPhonemeMapper
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPhonemeTranscription
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPineBoardSystemStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPluginBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPluginManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFPowerAssertionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFRemoteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFRemoteRequestWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_AFRequestCompletionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AFRequestHandlingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSUPFunctionProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSafetyBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSamplingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSearchAlarmsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSearchAlarmsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSecurityConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFServiceContextSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSetAudioSessionActiveContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSetAudioSessionActiveResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSetSettingsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSetSettingsResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSetTimerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSettingsConnectionServiceDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSharedConfidenceScore
|| __DATA.__objc_data _OBJC_METACLASS_$_AFShowAlarmRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFShowNextEventRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFShowSettingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFShowTimerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriAceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriAcousticIDRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationHandlerAssistantDaemon
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationHandlerCoreSpeechDaemon
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationHandlerFrontendProcess
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationListener
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriActivationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriAnnounceIncomingCallRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriAnnouncementRequestCapabilityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriAnnouncementRoute
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriClientStateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriDebugUIRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriHomeAutomationBackgroundRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriHomeAutomationRequestInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriIncomingCall
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriMusicSmartPlayRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriMusicSubscriptionLeaseTakenRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriNotificationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriPhoneticContactNames
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriRequestSucceededResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriRingtone
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskContextProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskDeliveryHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskExecution
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskService
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskUsageResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTaskmaster
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriTether
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriUserNotificationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSiriUserNotificationRequestCapabilityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeakableUtteranceParser
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechAcousticFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechAudioAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechLatticeMitigatorResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechRecordingAlertBehavior
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechRecordingAlertPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSpeechTestRequestOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSynchronousClientLite
|| __DATA.__objc_data _OBJC_METACLASS_$_AFSystemStateSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTestRequestOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AFThreeArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTipKitDonator
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTreeNodePropertyListSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTriggerlessListeningOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AFTwoArgumentSafetyBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUIApplicationSiriTaskDeliverer
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUpdateAlarmRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUpdateAlarmResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUpdateMessageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUserNotificationAnnouncementSpeakingStateObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUserNotificationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUserUtterance
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUserUtteranceSelectionResults
|| __DATA.__objc_data _OBJC_METACLASS_$_AFUtteranceSuggestions
|| __DATA.__objc_data _OBJC_METACLASS_$_SISchemaClientAnyEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SISchemaClientTurnBasedEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SISchemaClientTurnContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STAlarm
|| __DATA.__objc_data _OBJC_METACLASS_$_STCall
|| __DATA.__objc_data _OBJC_METACLASS_$_STCity
|| __DATA.__objc_data _OBJC_METACLASS_$_STContactAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_STPerson
|| __DATA.__objc_data _OBJC_METACLASS_$_STPersonContactHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_STSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_STSettingChange
|| __DATA.__objc_data _OBJC_METACLASS_$_STSiriContext
|| __DATA.__objc_data _OBJC_METACLASS_$_STSiriLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_STSiriMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_STSiriModelObject
|| __DATA.__objc_data _OBJC_METACLASS_$_STTimer
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAccessibilityStateMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFApplicationContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFApplicationContextSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAssertionContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAssertionImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAssertionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioDeviceInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioPlaybackRequestMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioPowerXPCSharedMemory
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioSessionCoordinationDeviceInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioSessionCoordinationSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFAudioSessionCoordinationSystemInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFBluetoothDeviceInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFBluetoothHeadphoneInEarDetectionStateMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFBluetoothWirelessSplitterSessionInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFBundleResourceMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFCallStateSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClientConfigurationMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClientInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClockAlarmMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClockAlarmSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClockTimerMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFClockTimerSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFCommandExecutionInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFCoreAnalyticsDeviceContextPayloadMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFDataStoreEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__AFDeleteSiriHistoryContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFDeviceContextHistoryConfigurationMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFDeviceContextServiceDelegateProxy
|| __DATA.__objc_data _OBJC_METACLASS_$__AFDeviceRequestHandlingRecordMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFEnablementConfigurationProviderParametersMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFEndpointInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentConfigurationMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentGroupMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentServerConfigurationInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFExperimentStateMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeAccessoryInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeAccessorySiriDataSharingChangeLogEventMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeAccessorySiriDataSharingPropagationLogEventMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeAnnouncementMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeAnnouncementSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFHomeInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFInstanceInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFInterstitialAction
|| __DATA.__objc_data _OBJC_METACLASS_$__AFInterstitialConfigurationMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFLocationSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMediaPlaybackStateSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMemoryInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFModesConfigurationMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMultiUserStateSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMyriadAdvertisementContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMyriadContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMyriadGoodnessScoreOverrideStateMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMyriadPerceptualAudioHashMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFMyriadSessionMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFOutputVoiceColorDescriptorMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFOutputVoiceDescriptorMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFPeerInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFRequestHandlingContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFServiceDeviceContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSetAudioSessionActiveContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSetAudioSessionActiveResultMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSharedConfidenceScoreMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSiriActivationContextMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSiriActivationResultMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSiriClientState
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSiriHomeAutomationRequestInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeakableUtterancePassThroughProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechInfoMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechParametersMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechRecordingAlertBehaviorMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechRecordingAlertPolicyMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechSynthesisRecordMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSpeechTestRequestOptionsMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFSystemStateSnapshotMutation
|| __DATA.__objc_data _OBJC_METACLASS_$__AFTestRequestOptionsMutation
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._deviceInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._dirtyFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._fromLocalDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._privacyClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_AFDeviceContext._serializedBackingStore
|| __DATA_CONST.__const _AFAccessibilityStateKey
|| __DATA_CONST.__const _AFAnalyticsContextKey
|| __DATA_CONST.__const _AFAnalyticsEventKey
|| __DATA_CONST.__const _AFApplicationContextKey
|| __DATA_CONST.__const _AFApplicationContextSnapshotKey
|| __DATA_CONST.__const _AFApplicationStateBackgroundRunning
|| __DATA_CONST.__const _AFApplicationStateBackgroundTaskSuspended
|| __DATA_CONST.__const _AFApplicationStateForegroundRunning
|| __DATA_CONST.__const _AFApplicationStateForegroundRunningObscured
|| __DATA_CONST.__const _AFApplicationStateProcessServer
|| __DATA_CONST.__const _AFApplicationStateTerminated
|| __DATA_CONST.__const _AFApplicationStateUnknown
|| __DATA_CONST.__const _AFAssertionContextKey
|| __DATA_CONST.__const _AFAssistantEnablementDidChangeDarwinNotification
|| __DATA_CONST.__const _AFAudioDeviceInfoKey
|| __DATA_CONST.__const _AFAudioPlaybackRequestKey
|| __DATA_CONST.__const _AFAudioSessionAssertionUserInfoKey
|| __DATA_CONST.__const _AFAudioSessionCoordinationDeviceInfoKey
|| __DATA_CONST.__const _AFAudioSessionCoordinationSnapshotKey
|| __DATA_CONST.__const _AFAudioSessionCoordinationSystemInfoKey
|| __DATA_CONST.__const _AFBluetoothDeviceInfoKey
|| __DATA_CONST.__const _AFBluetoothHeadphoneInEarDetectionStateKey
|| __DATA_CONST.__const _AFBluetoothPairedDeviceInfoUpdated
|| __DATA_CONST.__const _AFBluetoothWirelessSplitterSessionInfoKey
|| __DATA_CONST.__const _AFBluetoothWirelessSplitterSessionStateChanged
|| __DATA_CONST.__const _AFBundleResourceKey
|| __DATA_CONST.__const _AFCachedFusePersonalizationTokenChanged
|| __DATA_CONST.__const _AFCallSiteInfoKey
|| __DATA_CONST.__const _AFCallStateSnapshotKey
|| __DATA_CONST.__const _AFClientConfigurationKey
|| __DATA_CONST.__const _AFClientInfoKey
|| __DATA_CONST.__const _AFClientLiteEntitlement
|| __DATA_CONST.__const _AFClientLiteServiceName
|| __DATA_CONST.__const _AFClientPluginSiriDisambiguationDomainsKey
|| __DATA_CONST.__const _AFClientPluginSiriDomainsKey
|| __DATA_CONST.__const _AFClientPluginSiriProviderDomainsKey
|| __DATA_CONST.__const _AFClockAlarmKey
|| __DATA_CONST.__const _AFClockAlarmSnapshotKey
|| __DATA_CONST.__const _AFClockTimerKey
|| __DATA_CONST.__const _AFClockTimerSnapshotKey
|| __DATA_CONST.__const _AFCommandExecutionInfoKey
|| __DATA_CONST.__const _AFContextManagerXPCListenerName
|| __DATA_CONST.__const _AFContextProviderEntitlement
|| __DATA_CONST.__const _AFConversationErrorDomain
|| __DATA_CONST.__const _AFCoreAnalyticsDeviceContextPayloadKey
|| __DATA_CONST.__const _AFCoreDuetUIStreamName
|| __DATA_CONST.__const _AFCoreKnowledgeStoreKeyLastSiriUUFRTimestamp
|| __DATA_CONST.__const _AFCorrectionContextInteractionIdKey
|| __DATA_CONST.__const _AFCorrectionContextSessionIdKey
|| __DATA_CONST.__const _AFDefaultLanguageCode
|| __DATA_CONST.__const _AFDeleteSiriHistoryContextKey
|| __DATA_CONST.__const _AFDeviceContextHistoryConfigurationKey
|| __DATA_CONST.__const _AFDeviceContextKeyAlarm
|| __DATA_CONST.__const _AFDeviceContextKeyAll
|| __DATA_CONST.__const _AFDeviceContextKeyApplication
|| __DATA_CONST.__const _AFDeviceContextKeyCallState
|| __DATA_CONST.__const _AFDeviceContextKeyContexts
|| __DATA_CONST.__const _AFDeviceContextKeyData
|| __DATA_CONST.__const _AFDeviceContextKeyDeviceInfo
|| __DATA_CONST.__const _AFDeviceContextKeyFlowContextUpdateCommand
|| __DATA_CONST.__const _AFDeviceContextKeyHeardVoiceTrigger
|| __DATA_CONST.__const _AFDeviceContextKeyHistoricalData
|| __DATA_CONST.__const _AFDeviceContextKeyHistoricalMetadata
|| __DATA_CONST.__const _AFDeviceContextKeyHomeAnnouncement
|| __DATA_CONST.__const _AFDeviceContextKeyIdentifier
|| __DATA_CONST.__const _AFDeviceContextKeyLocation
|| __DATA_CONST.__const _AFDeviceContextKeyMetadata
|| __DATA_CONST.__const _AFDeviceContextKeyMetadataExpirationDate
|| __DATA_CONST.__const _AFDeviceContextKeyMetadataHistoryConfiguration
|| __DATA_CONST.__const _AFDeviceContextKeyMetadataRedactedKeyPaths
|| __DATA_CONST.__const _AFDeviceContextKeyMetadataTimestamp
|| __DATA_CONST.__const _AFDeviceContextKeyMetadataType
|| __DATA_CONST.__const _AFDeviceContextKeyMultiUserState
|| __DATA_CONST.__const _AFDeviceContextKeyMyriadAdvertisement
|| __DATA_CONST.__const _AFDeviceContextKeyPlaybackState
|| __DATA_CONST.__const _AFDeviceContextKeyPrivacyClass
|| __DATA_CONST.__const _AFDeviceContextKeyRequestHandling
|| __DATA_CONST.__const _AFDeviceContextKeySiriClientState
|| __DATA_CONST.__const _AFDeviceContextKeySystemState
|| __DATA_CONST.__const _AFDeviceContextKeyTimer
|| __DATA_CONST.__const _AFDeviceRequestHandlingRecordKey
|| __DATA_CONST.__const _AFDictationEnablementDidChangeDarwinNotification
|| __DATA_CONST.__const _AFDynamicSnippetAceId
|| __DATA_CONST.__const _AFDynamicSnippetAction
|| __DATA_CONST.__const _AFDynamicSnippetDomain
|| __DATA_CONST.__const _AFDynamicSnippetName
|| __DATA_CONST.__const _AFDynamicSnippetPunchoutApp
|| __DATA_CONST.__const _AFEnablementConfigurationProviderParametersKey
|| __DATA_CONST.__const _AFEnablementExperimentGroupKey
|| __DATA_CONST.__const _AFEnablementIsNewUserKey
|| __DATA_CONST.__const _AFEnablementLoggingDidEnableKey
|| __DATA_CONST.__const _AFEnablementLoggingEnablementFlowKey
|| __DATA_CONST.__const _AFEnablementLoggingErrorCodeKey
|| __DATA_CONST.__const _AFEnablementLoggingFlowKey
|| __DATA_CONST.__const _AFEnablementLoggingInitialVoiceSelectionKey
|| __DATA_CONST.__const _AFEnablementLoggingTimeToResolveKey
|| __DATA_CONST.__const _AFEnablementLoggingVersionKey
|| __DATA_CONST.__const _AFEndpointInfoKey
|| __DATA_CONST.__const _AFExperimentConfigurationKey
|| __DATA_CONST.__const _AFExperimentContextKey
|| __DATA_CONST.__const _AFExperimentGroupKey
|| __DATA_CONST.__const _AFExperimentKey
|| __DATA_CONST.__const _AFExperimentServerConfigurationInfoKey
|| __DATA_CONST.__const _AFExperimentStateKey
|| __DATA_CONST.__const _AFExternalRequestEntitlement
|| __DATA_CONST.__const _AFExternalRequestMachService
|| __DATA_CONST.__const _AFExternalRequestMessageKeyAction
|| __DATA_CONST.__const _AFExternalRequestMessageKeyActivationContext
|| __DATA_CONST.__const _AFExternalRequestMessageKeyAnnouncementPlatform
|| __DATA_CONST.__const _AFExternalRequestMessageKeyDeactivationReason
|| __DATA_CONST.__const _AFExternalRequestMessageKeyHomeAutomationBackgroundRequest
|| __DATA_CONST.__const _AFExternalRequestMessageKeyIncomingCall
|| __DATA_CONST.__const _AFExternalRequestMessageKeyLocalRequest
|| __DATA_CONST.__const _AFExternalRequestMessageKeyNotification
|| __DATA_CONST.__const _AFExternalRequestMessageKeyRequestOptions
|| __DATA_CONST.__const _AFExternalRequestMessageKeySourceAppId
|| __DATA_CONST.__const _AFExternalRequestMessageKeyStartLocalRequest
|| __DATA_CONST.__const _AFExternalRequestMessageKeyStartRequest
|| __DATA_CONST.__const _AFExternalRequestMessageKeyType
|| __DATA_CONST.__const _AFExternalRequestReplyKeyActivationResult
|| __DATA_CONST.__const _AFExternalRequestReplyKeyResult
|| __DATA_CONST.__const _AFFeatureFlagConfigOverrideCarCommandsOnNative
|| __DATA_CONST.__const _AFFeatureFlagConfigOverridePrefix
|| __DATA_CONST.__const _AFFetchContextsKeyPlaybackStates
|| __DATA_CONST.__const _AFHomeAccessoryInfoKey
|| __DATA_CONST.__const _AFHomeAccessorySiriDataSharingChangeLogEventKey
|| __DATA_CONST.__const _AFHomeAccessorySiriDataSharingPropagationLogEventKey
|| __DATA_CONST.__const _AFHomeAnnouncementKey
|| __DATA_CONST.__const _AFHomeAnnouncementSnapshotKey
|| __DATA_CONST.__const _AFHomeInfoKey
|| __DATA_CONST.__const _AFInstanceInfoKey
|| __DATA_CONST.__const _AFIntentSupportAndVocabSyncKey
|| __DATA_CONST.__const _AFIntentSupportAndVocabSyncNanoKey
|| __DATA_CONST.__const _AFInternalPreferencesDidChangeDarwinNotification
|| __DATA_CONST.__const _AFInterstitialConfigurationKey
|| __DATA_CONST.__const _AFInvocationFeedbacksExperimentConfigurationIdentifier
|| __DATA_CONST.__const _AFInvocationFeedbacksExperimentGroupPropertyKeyFeatureGroups
|| __DATA_CONST.__const _AFLanguageCodeDidChangeDarwinNotification
|| __DATA_CONST.__const _AFLanguageCodeDidChangeNotification
|| __DATA_CONST.__const _AFLocationSnapshotKey
|| __DATA_CONST.__const _AFMediaAssistantProtocolAlbumURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolArtistURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolAudiobookURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolCollectionURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolEntityURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolExternal
|| __DATA_CONST.__const _AFMediaAssistantProtocolGeniusMixURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolGenreURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolItemURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolLocalDeviceURLHost
|| __DATA_CONST.__const _AFMediaAssistantProtocolPlaylistURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolPodcastURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolRadioStationURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolRadioTrackURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolTitleURLScheme
|| __DATA_CONST.__const _AFMediaAssistantProtocolUniversalURLHost
|| __DATA_CONST.__const _AFMediaAssistantProtocoliTunesStoreHost
|| __DATA_CONST.__const _AFMediaPlaybackStateSnapshotKey
|| __DATA_CONST.__const _AFMediaRemoteDeviceInfoGroupIdentifierDidChangeNotification
|| __DATA_CONST.__const _AFMediaRemoteDeviceInfoNotificationKey
|| __DATA_CONST.__const _AFMediaRemoteDeviceInfoRouteIdentifierDidChangeNotification
|| __DATA_CONST.__const _AFMemoryInfoKey
|| __DATA_CONST.__const _AFModesConfigurationKey
|| __DATA_CONST.__const _AFMultiUserStateSnapshotKey
|| __DATA_CONST.__const _AFMyriadAdvertisementContextKey
|| __DATA_CONST.__const _AFMyriadContextKey
|| __DATA_CONST.__const _AFMyriadGoodnessScoreOverrideStateKey
|| __DATA_CONST.__const _AFMyriadPerceptualAudioHashKey
|| __DATA_CONST.__const _AFMyriadSessionKey
|| __DATA_CONST.__const _AFNanoPreferencesDidChangeNotification
|| __DATA_CONST.__const _AFNetworkAvailabilityDidChangeNotification
|| __DATA_CONST.__const _AFOfflineDictationStatusContinuousListeningKey
|| __DATA_CONST.__const _AFOfflineDictationStatusHighQualityKey
|| __DATA_CONST.__const _AFOfflineDictationStatusInstalledKey
|| __DATA_CONST.__const _AFOfflineDictationStatusOnDeviceSearchKey
|| __DATA_CONST.__const _AFOpportuneSpeakingModuleDataCollectionFeatureNameKey
|| __DATA_CONST.__const _AFOpportuneSpeakingModuleDataCollectionFeatureValueKey
|| __DATA_CONST.__const _AFOpportuneSpeakingModuleDataCollectionPrimaryProcess
|| __DATA_CONST.__const _AFOpportuneSpeakingModuleDataCollectionSecondaryProcess
|| __DATA_CONST.__const _AFOutputLanguageDidChangeDarwinNotification
|| __DATA_CONST.__const _AFOutputVoiceColorDescriptorKey
|| __DATA_CONST.__const _AFOutputVoiceDescriptorKey
|| __DATA_CONST.__const _AFOutputVoiceDidChangeNotification
|| __DATA_CONST.__const _AFPeerInfoKey
|| __DATA_CONST.__const _AFPersonalDomainsNotificationUserInfoHomeKey
|| __DATA_CONST.__const _AFPreferencesDidChangeNotification
|| __DATA_CONST.__const _AFPreferencesManualEndpointingThresholdDidChangeNotification
|| __DATA_CONST.__const _AFPreferencesNavStatusDidChangeNotification
|| __DATA_CONST.__const _AFPreferencesSessionContextNavigationKey
|| __DATA_CONST.__const _AFPreviousConversationIdentifier
|| __DATA_CONST.__const _AFRemoraActiveLanguagesChangedNotification
|| __DATA_CONST.__const _AFRequestHandlingContextKey
|| __DATA_CONST.__const _AFRequestMetricActivation
|| __DATA_CONST.__const _AFRequestMetricButtonDown
|| __DATA_CONST.__const _AFRequestMetricDidPresentHostedUI
|| __DATA_CONST.__const _AFRequestMetricDidPresentViewServiceUI
|| __DATA_CONST.__const _AFRequestMetricUsefulUserResult
|| __DATA_CONST.__const _AFSecurityEncryptionKeyDidChangeNotification
|| __DATA_CONST.__const _AFServiceDeviceContextKey
|| __DATA_CONST.__const _AFSetAudioSessionActiveContextKey
|| __DATA_CONST.__const _AFSetAudioSessionActiveResultKey
|| __DATA_CONST.__const _AFSharedConfidenceScoreKey
|| __DATA_CONST.__const _AFSiriAceErrorDomain
|| __DATA_CONST.__const _AFSiriActivationContextKey
|| __DATA_CONST.__const _AFSiriActivationEntitlement
|| __DATA_CONST.__const _AFSiriActivationResultKey
|| __DATA_CONST.__const _AFSiriActivationServiceNameApplication
|| __DATA_CONST.__const _AFSiriActivationServiceNameDefault
|| __DATA_CONST.__const _AFSiriActivationServiceNameHorseman
|| __DATA_CONST.__const _AFSiriActivationUserInfoKey
|| __DATA_CONST.__const _AFSiriActiveAccountChangedDistributedNotification
|| __DATA_CONST.__const _AFSiriApplicationLaunchedNotification
|| __DATA_CONST.__const _AFSiriDaemonLaunchedDarwinNotification
|| __DATA_CONST.__const _AFSiriDaemonLaunchedDistributedNotification
|| __DATA_CONST.__const _AFSiriDataSharingOptStatusInDidChangeDarwinNotification
|| __DATA_CONST.__const _AFSiriDidLaunchAppNotification
|| __DATA_CONST.__const _AFSiriGlobalKeychainAccountIdentifier
|| __DATA_CONST.__const _AFSiriHomeAutomationContextKey
|| __DATA_CONST.__const _AFSiriHomeAutomationRequestInfoKey
|| __DATA_CONST.__const _AFSiriLocalizedFailureDescriptionKey
|| __DATA_CONST.__const _AFSiriLocalizedFailureTitleKey
|| __DATA_CONST.__const _AFSiriMediaRemoteIdentifier
|| __DATA_CONST.__const _AFSiriRecognitionKey
|| __DATA_CONST.__const _AFSiriSerializedUserActivityKey
|| __DATA_CONST.__const _AFSiriSpeechErrorDomain
|| __DATA_CONST.__const _AFSiriStartUIRequestNotification
|| __DATA_CONST.__const _AFSiriStartUIRequestNotificationActivationEventKey
|| __DATA_CONST.__const _AFSiriStartUIRequestNotificationOriginDeviceNameKey
|| __DATA_CONST.__const _AFSiriStartUIRequestNotificationRequiresUserInteractionKey
|| __DATA_CONST.__const _AFSiriStartUISpeechRequestNotification
|| __DATA_CONST.__const _AFSiriStructuredDictationErrorDomain
|| __DATA_CONST.__const _AFSiriTetherServiceName
|| __DATA_CONST.__const _AFSiriUnderlyingErrorsKey
|| __DATA_CONST.__const _AFSiriUserNotificationAnnounceScheme
|| __DATA_CONST.__const _AFSiriUserNotificationRequestCapabilityForceUpdate
|| __DATA_CONST.__const _AFSiriVOXSoundsExperimentConfigurationIdentifier
|| __DATA_CONST.__const _AFSiriVOXSoundsExperimentGroupPropertyKeyPlaysSessionInactiveSound
|| __DATA_CONST.__const _AFSiriVOXSoundsExperimentGroupPropertyKeyPlaysTwoShotSound
|| __DATA_CONST.__const _AFSiriVOXTapToSiriBehaviorExperimentConfigurationIdentifier
|| __DATA_CONST.__const _AFSiriVOXTapToSiriBehaviorExperimentGroupPropertyKeyPlaysSound
|| __DATA_CONST.__const _AFSpeechInfoKey
|| __DATA_CONST.__const _AFSpeechParametersKey
|| __DATA_CONST.__const _AFSpeechRecordingAlertBehaviorKey
|| __DATA_CONST.__const _AFSpeechRecordingAlertPolicyKey
|| __DATA_CONST.__const _AFSpeechSynthesisRecordKey
|| __DATA_CONST.__const _AFSpeechTestRequestOptionsKey
|| __DATA_CONST.__const _AFSynapseSyncAnchorKey
|| __DATA_CONST.__const _AFSyncDataDidChangeNotification
|| __DATA_CONST.__const _AFSystemStateSnapshotKey
|| __DATA_CONST.__const _AFTestRequestOptionsKey
|| __DATA_CONST.__const _AFUpdateAnnouncementEligibilityDarwinNotification
|| __DATA_CONST.__const _AFUserUtteranceConfidenceAverageKey
|| __DATA_CONST.__const _AFUserUtteranceConfidenceCountKey
|| __DATA_CONST.__const _AFUserUtteranceConfidenceIndexKey
|| __DATA_CONST.__const _AFUserUtteranceConfidenceMaxKey
|| __DATA_CONST.__const _AFUserUtteranceConfidenceMinKey
|| __DATA_CONST.__const _AFUserUtteranceConfidenceSumKey
|| __DATA_CONST.__const _AFUserUtteranceSourceKey
|| __DATA_CONST.__const _DictationMode
|| __DATA_CONST.__const __AFContextManagerCollateContextsReplyKeyContexts
|| __DATA_CONST.__const __AFContextManagerServerMessageCollateContexts
|| __DATA_CONST.__const __AFContextManagerServerNameFormat
|| __DATA_CONST.__const __AFSUPFunctionNameRelationName
|| __DATA_CONST.__const __AFSUPFunctionNameUserContactInternalGUID
|| __DATA_CONST.__const __AFSUPFunctionNameUserFirstName
|| __DATA_CONST.__const __AFSUPFunctionNameUserFullName
|| __DATA_CONST.__const __AFSUPFunctionNameUserLastName
|| __DATA_CONST.__const __AFSUPFunctionNameUserMiddleName
|| __DATA_CONST.__const __AFSUPFunctionNameUserNickName
|| __DATA_CONST.__const __AFSUPRedactedMeCardInternalGUID
|| __DATA_CONST.__const __AFSUPRedactedRelationName
|| __DATA_CONST.__const __AFSUPRedactedUserFirstName
|| __DATA_CONST.__const __AFSUPRedactedUserFullName
|| __DATA_CONST.__const __AFSUPRedactedUserLastName
|| __DATA_CONST.__const __AFSUPRedactedUserMiddleName
|| __DATA_CONST.__const __AFSUPRedactedUserNickName
|| __DATA_CONST.__const __AFSpeakableUtteranceParserObjDomain
|| __DATA_CONST.__const _afLanguageDetectionUserContextKeys
|| __DATA_CONST.__const _kAFAccountInfoAceHostKey
|| __DATA_CONST.__const _kAFAccountInfoAssistantIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoConnectionPolicyDateKey
|| __DATA_CONST.__const _kAFAccountInfoConnectionPolicyFirstFailureDateKey
|| __DATA_CONST.__const _kAFAccountInfoConnectionPolicyHostnameKey
|| __DATA_CONST.__const _kAFAccountInfoConnectionPolicyKey
|| __DATA_CONST.__const _kAFAccountInfoGroupKey
|| __DATA_CONST.__const _kAFAccountInfoHostnameKey
|| __DATA_CONST.__const _kAFAccountInfoIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoIsActiveKey
|| __DATA_CONST.__const _kAFAccountInfoLabelKey
|| __DATA_CONST.__const _kAFAccountInfoLocaleIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoLoggingAssistantIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoNeedsDestructionKey
|| __DATA_CONST.__const _kAFAccountInfoPeerAssistantIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoPeerHostnameKey
|| __DATA_CONST.__const _kAFAccountInfoPeerLanguageCodeKey
|| __DATA_CONST.__const _kAFAccountInfoPeerLoggingAssistantIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoPeerSiriEnabledKey
|| __DATA_CONST.__const _kAFAccountInfoPeerSpeechIdentifierKey
|| __DATA_CONST.__const _kAFAccountInfoPeerUserAgentStringKey
|| __DATA_CONST.__const _kAFAccountInfoPredefinedServerKey
|| __DATA_CONST.__const _kAFAccountInfoSpeechIdentifierKey
|| __DATA_CONST.__const _kAFAdditionalSiriSessionLanguages
|| __DATA_CONST.__const _kAFAssistantBundleReloadServiceNotificationSuffix
|| __DATA_CONST.__const _kAFAssistantEnabledKey
|| __DATA_CONST.__const _kAFAssistantErrorDomain
|| __DATA_CONST.__const _kAFAssistantHomeAccessorySiriDataSharingChangeLogKey
|| __DATA_CONST.__const _kAFAssistantHomeAccessorySiriDataSharingPropagationLogKey
|| __DATA_CONST.__const _kAFAssistantParentalControlsPreferenceDomain
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingAccessoryRepromptStatus
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingHomeAccessoryMigrated
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingHomePodHasBeenOptedOut
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingHomePodSetupDeviceIsValid
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingOptInStatusHistoryKey
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingOptInStatusKey
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingOptInStatusKeyLEGACY
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingPhoneHasBeenOptedOut
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingStatusBeforeHomePodWasOptedOut2021
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingTVHasBeenOptedOut
|| __DATA_CONST.__const _kAFAssistantSiriDataSharingWatchHasBeenOptedOut
|| __DATA_CONST.__const _kAFCloudStorageDeletedByUserDarwinNotification
|| __DATA_CONST.__const _kAFCloudSyncEnabledKey
|| __DATA_CONST.__const _kAFCloudSyncEnabledModificationDateKey
|| __DATA_CONST.__const _kAFCloudSyncPHSAssetManifest
|| __DATA_CONST.__const _kAFCloudSyncPHSAssetManifestV2
|| __DATA_CONST.__const _kAFCloudSyncPreferenceDidChangeDarwinNotification
|| __DATA_CONST.__const _kAFCloudSyncUserIDKey
|| __DATA_CONST.__const _kAFCommandLoggingEnabledKey
|| __DATA_CONST.__const _kAFDesignModeEnabled
|| __DATA_CONST.__const _kAFDictationEnabledKey
|| __DATA_CONST.__const _kAFDisableServiceCommandExecution
|| __DATA_CONST.__const _kAFDisableTTSPlayback
|| __DATA_CONST.__const _kAFHandsFreeModeKey
|| __DATA_CONST.__const _kAFInProgressOutputVoice
|| __DATA_CONST.__const _kAFLogFacilityAssistant
|| __DATA_CONST.__const _kAFLogLevelKey
|| __DATA_CONST.__const _kAFLogPreferencesDomain
|| __DATA_CONST.__const _kAFManagedConfigurationDictationAllowedKey
|| __DATA_CONST.__const _kAFModificationDates
|| __DATA_CONST.__const _kAFMultiUserConformingSharedUserIdKey
|| __DATA_CONST.__const _kAFMultiUserSharedUserIdKey
|| __DATA_CONST.__const _kAFNanoAssistantEnabledKey
|| __DATA_CONST.__const _kAFNanoCrownActivationEnabledKey
|| __DATA_CONST.__const _kAFNanoDictationEnabledKey
|| __DATA_CONST.__const _kAFNanoOfflineDictationStatusKey
|| __DATA_CONST.__const _kAFNanoOutputVoice
|| __DATA_CONST.__const _kAFNanoOutputVoiceTinker
|| __DATA_CONST.__const _kAFNanoPHSEnabledKey
|| __DATA_CONST.__const _kAFNanoPreferencesDidChangeInternalNotification
|| __DATA_CONST.__const _kAFNanoPreferencesDidChangeNotification
|| __DATA_CONST.__const _kAFNanoPreferencesDomain
|| __DATA_CONST.__const _kAFNanoPreferencesTinkerDidChangeNotification
|| __DATA_CONST.__const _kAFNanoRaiseToSpeakEnabledKey
|| __DATA_CONST.__const _kAFNanoRaiseToSpeakInfoDismissedKey
|| __DATA_CONST.__const _kAFNanoSessionLanguage
|| __DATA_CONST.__const _kAFNanoSessionLanguageTinker
|| __DATA_CONST.__const _kAFNanoTTSSpeakerVolumeKey
|| __DATA_CONST.__const _kAFNanoUseDeviceSpeakerForTTSKey
|| __DATA_CONST.__const _kAFOnDeviceDictationAvailableAlertPresentedKey
|| __DATA_CONST.__const _kAFOutputLevelKey
|| __DATA_CONST.__const _kAFOutputVoice
|| __DATA_CONST.__const _kAFPreferencesDidChangeDarwinNotification
|| __DATA_CONST.__const _kAFRespectsSystemMuteKey
|| __DATA_CONST.__const _kAFSessionLanguage
|| __DATA_CONST.__const _kAFSessionLanguageForceRTL
|| __DATA_CONST.__const _kAFSiriConfigOverrides
|| __DATA_CONST.__const _kAFSiriConfigProfileOverrides
|| __DATA_CONST.__const _kAFSiriDataSharingOptInStatusHistorySchemaVersion
|| __DATA_CONST.__const _kAFSiriInternalUserClassification
|| __DATA_CONST.__const _kAFSiriKitEnabledList
|| __DATA_CONST.__const _kAFSiriSupportedLanguagesDidChangeDarwinNotification
|| __DATA_CONST.__const _kAFSpokenNotificationShouldAlwaysSpeakNotifications
|| __DATA_CONST.__const _kAFSpokenNotificationShouldSkipTriggerlessReplies
|| __DATA_CONST.__const _kAFSpokenNotificationSkipTriggerlessReplyConfirmation
|| __DATA_CONST.__const _kAFSpokenNotificationTemporaryMuteEndDateKey
|| __DATA_CONST.__const _kAFStartAlertEnabledKey
|| __DATA_CONST.__const _kAFStereoConfigurationaDidChangeDarwinNotification
|| __DATA_CONST.__const _kAFStereoPartnerMyriadDataDidChangeDarwinNotification
|| __DATA_CONST.__const _kAFSuppressAssistantOptInKey
|| __DATA_CONST.__const _kAFSuppressDictationOptInKey
|| __DATA_CONST.__const _kAFSuppressSiriDataSharingOptInKey
|| __DATA_CONST.__const _kAFSyncDidFinishNotification
|| __DATA_CONST.__const _kAFUIKitDictationAllowedKey
|| __DATA_CONST.__const _kAFUIKitDictationEnabledKey
|| __DATA_CONST.__const _kAFUIKitPreferencesDomain
|| __DATA_CONST.__const _kAFUseDeviceSpeakerForTTSKey
|| __DATA_CONST.__const _kAssetQueryResultKey
|| __DATA_CONST.__const _kAssetTypeEmbeddedSpeechModel
|| __DATA_CONST.__const _kAssetTypeEmbeddedSpeechModelNewAssetInstalled
|| __DATA_CONST.__const _kAssistantAnalyticsEntitlement
|| __DATA_CONST.__const _kAssistantAnalyticsObservationEntitlement
|| __DATA_CONST.__const _kAssistantAnalyticsObservationServiceName
|| __DATA_CONST.__const _kAssistantAnalyticsServiceName
|| __DATA_CONST.__const _kAssistantAnnouncementSpeakingStateEntitlement
|| __DATA_CONST.__const _kAssistantAnnouncementSpeakingStateServiceName
|| __DATA_CONST.__const _kAssistantAudioCategory
|| __DATA_CONST.__const _kAssistantAudioSessionAssertionServiceEntitlement
|| __DATA_CONST.__const _kAssistantAudioSessionAssertionServiceName
|| __DATA_CONST.__const _kAssistantBackedUpDomain
|| __DATA_CONST.__const _kAssistantClientEntitlement
|| __DATA_CONST.__const _kAssistantClientServiceName
|| __DATA_CONST.__const _kAssistantDarwinNotificationSpeechCaptureFinished
|| __DATA_CONST.__const _kAssistantDeviceContextServiceEntitlement
|| __DATA_CONST.__const _kAssistantDeviceContextServiceName
|| __DATA_CONST.__const _kAssistantDictationPrerecordedEntitlement
|| __DATA_CONST.__const _kAssistantDictationServiceName
|| __DATA_CONST.__const _kAssistantDirectActionEventKey
|| __DATA_CONST.__const _kAssistantDirectActionEventMessagesConversationGUIDKey
|| __DATA_CONST.__const _kAssistantDirectActionEventMessagesConversationKey
|| __DATA_CONST.__const _kAssistantDirectActionEventMessagesFullNameKey
|| __DATA_CONST.__const _kAssistantDirectActionEventMessagesPhoneAddressKey
|| __DATA_CONST.__const _kAssistantEndpointConnectivityServiceEntitlement
|| __DATA_CONST.__const _kAssistantEndpointConnectivityServiceName
|| __DATA_CONST.__const _kAssistantFlowServiceEntitlement
|| __DATA_CONST.__const _kAssistantFlowServiceName
|| __DATA_CONST.__const _kAssistantLegacyUserVocabularyUpdateEntitlement
|| __DATA_CONST.__const _kAssistantManagedStorageServiceName
|| __DATA_CONST.__const _kAssistantMockServerHostname
|| __DATA_CONST.__const _kAssistantMockServerLabel
|| __DATA_CONST.__const _kAssistantMultiUserEntitlement
|| __DATA_CONST.__const _kAssistantMultiUserServiceName
|| __DATA_CONST.__const _kAssistantMultiUserUpdateEntitlement
|| __DATA_CONST.__const _kAssistantMultiUserUpdateServiceName
|| __DATA_CONST.__const _kAssistantNotificationBundleID
|| __DATA_CONST.__const _kAssistantNotificationServiceEntitlement
|| __DATA_CONST.__const _kAssistantNotificationServiceName
|| __DATA_CONST.__const _kAssistantPreferencesDomain
|| __DATA_CONST.__const _kAssistantSecurityEntitlement
|| __DATA_CONST.__const _kAssistantSecurityServiceName
|| __DATA_CONST.__const _kAssistantServiceEntitlement
|| __DATA_CONST.__const _kAssistantServiceServiceName
|| __DATA_CONST.__const _kAssistantSettingsEntitlement
|| __DATA_CONST.__const _kAssistantSettingsServiceName
|| __DATA_CONST.__const _kAssistantSiriDeveloperEntitlement
|| __DATA_CONST.__const _kAssistantSupportPreferenceDomain
|| __DATA_CONST.__const _kExecutionServiceServiceName
|| __DATA_CONST.__const _kIntentsExtensionPointName
|| __DATA_CONST.__const _kManagedConfigurationAssistantDomain
|| __DATA_CONST.__const _kManagedConfigurationSiriServerLoggingKey
|| __DATA_CONST.__const _kRequestSettingCaptionVoiceFeedback
|| __DATA_CONST.__const _kRequestSettingHideBackgroundContent
|| __DATA_CONST.__const _kRequestSettingShowRecognizedSpeech
|| __DATA_CONST.__const _kRequestSettingTypeToSiri
|| __DATA_CONST.__const _kRequestSettingUseSpeakerForTTS
|| __DATA_CONST.__const _kRequestSettings
|| __DATA_CONST.__const _kRequestSiriInputLanguage
|| __DATA_CONST.__const _kTrialSiriAssistantAssetNamespaceUpdate
|| __DATA_CONST.__const _kTrialSiriDictationAssetNamespaceUpdate
|| __DATA_DIRTY.__common _AFNetworkingLogContextFunctional
|| __DATA_DIRTY.__common _AFNetworkingLogContextPerformance
|| __DATA_DIRTY.__common _AFSiriLogContextAnalysis
|| __DATA_DIRTY.__common _AFSiriLogContextAnalytics
|| __DATA_DIRTY.__common _AFSiriLogContextClientFlow
|| __DATA_DIRTY.__common _AFSiriLogContextConnection
|| __DATA_DIRTY.__common _AFSiriLogContextDaemon
|| __DATA_DIRTY.__common _AFSiriLogContextDaemonAce
|| __DATA_DIRTY.__common _AFSiriLogContextDatabase
|| __DATA_DIRTY.__common _AFSiriLogContextDeviceSync
|| __DATA_DIRTY.__common _AFSiriLogContextDispatch
|| __DATA_DIRTY.__common _AFSiriLogContextFides
|| __DATA_DIRTY.__common _AFSiriLogContextIDS
|| __DATA_DIRTY.__common _AFSiriLogContextInternalAuth
|| __DATA_DIRTY.__common _AFSiriLogContextLocation
|| __DATA_DIRTY.__common _AFSiriLogContextMediaSupport
|| __DATA_DIRTY.__common _AFSiriLogContextMockServer
|| __DATA_DIRTY.__common _AFSiriLogContextMusicIndexer
|| __DATA_DIRTY.__common _AFSiriLogContextMyriad
|| __DATA_DIRTY.__common _AFSiriLogContextPerformance
|| __DATA_DIRTY.__common _AFSiriLogContextPlugin
|| __DATA_DIRTY.__common _AFSiriLogContextProxy
|| __DATA_DIRTY.__common _AFSiriLogContextService
|| __DATA_DIRTY.__common _AFSiriLogContextSession
|| __DATA_DIRTY.__common _AFSiriLogContextSpeech
|| __DATA_DIRTY.__common _AFSiriLogContextSync
|| __DATA_DIRTY.__common _AFSiriLogContextTinyCDB
|| __DATA_DIRTY.__common _AFSiriLogContextUtility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAggregator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAnalyticsConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAnalyticsEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFApplicationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFApplicationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAudioPlaybackRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAudioPowerUpdater
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFAudioSessionCoordinationSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFBluetoothDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFBluetoothWirelessSplitterSessionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFBulletin
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFCallSiteInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFCommandExecutionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFContextManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFDeleteSiriHistoryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFDictationConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFDictationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFExperiment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFExperimentConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFExperimentContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFFeatureFlags
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFInstanceContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFInstanceContextHost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFInstanceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFLinkedListItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFMultiUserConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFMyriadAdvertisementContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFNetworkAvailability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFNotifyObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFPeerInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFServiceDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSetAudioSessionActiveContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSetAudioSessionActiveResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSettingsConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechCorrectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechInterpretation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechPackage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechPhrase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechRecognition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechSynthesisRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSpeechUtterance
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFSyncSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFVoiceInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFWatchdogTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AFXPCWrapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AFCallSiteInfoMutation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAggregator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAnalytics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAnalyticsConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAnalyticsEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAnalyticsEventRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFApplicationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFApplicationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAudioPlaybackRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAudioPowerUpdater
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFAudioSessionCoordinationSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFBluetoothDeviceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFBluetoothWirelessSplitterSessionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFBulletin
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFCallSiteInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFCommandExecutionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFContextManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFDeleteSiriHistoryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFDictationConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFDictationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFExperiment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFExperimentConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFExperimentContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFFeatureFlags
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFInstanceContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFInstanceContextHost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFInstanceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFLinkedListItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFMultiUserConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFMyriadAdvertisementContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFNetworkAvailability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFNotifyObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFPeerInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFServiceDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSettingsConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechCorrectionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechInterpretation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechPackage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechPhrase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechRecognition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechSynthesisRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSpeechUtterance
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFSyncSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFVoiceInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFWatchdogTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AFXPCWrapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AFCallSiteInfoMutation
|| __TEXT.__const _AFBluetoothWirelessSplitterSessionStateUnknown
|| __TEXT.__const _AFMultiUserServiceUserProfileLimit
|| __TEXT.__const _AFMyriadDecisionWaitTime
|| __TEXT.__const _currentMyrAccessoryVersion
|| __TEXT.__text _ADCreateRequestLinkInfo
|| __TEXT.__text _ADEmitRequestLinkEventMessage
|| __TEXT.__text _AFAccessibilitySupportsAttentionAwareFeatures
|| __TEXT.__text _AFAccessibilitySupportsVibrationDisablement
|| __TEXT.__text _AFAceErrorCodeFromMRMediaRemoteCommandHandlerStatus
|| __TEXT.__text _AFActivationEventGetDescription
|| __TEXT.__text _AFAddInterruptingAudioSessionInfoToAnalyticsContext
|| __TEXT.__text _AFAnalyticsBucketizedDurationForStartDateAndEndDate
|| __TEXT.__text _AFAnalyticsContextCreateForCrossDeviceCommandHandled
|| __TEXT.__text _AFAnalyticsContextCreateForCrossDeviceCommandHandledWithServiceDeviceContexts
|| __TEXT.__text _AFAnalyticsContextCreateForCrossDeviceCommandNearbyDevices
|| __TEXT.__text _AFAnalyticsContextCreateForCurrentProcess
|| __TEXT.__text _AFAnalyticsContextCreateWithCommand
|| __TEXT.__text _AFAnalyticsContextCreateWithDictationOptions
|| __TEXT.__text _AFAnalyticsContextCreateWithError
|| __TEXT.__text _AFAnalyticsContextCreateWithExperiment
|| __TEXT.__text _AFAnalyticsContextCreateWithLanguageDetectorMetrics
|| __TEXT.__text _AFAnalyticsContextCreateWithRequestInfo
|| __TEXT.__text _AFAnalyticsContextCreateWithSpeechRequestOptions
|| __TEXT.__text _AFAnalyticsContextsMerge
|| __TEXT.__text _AFAnalyticsEventCreateCurrent
|| __TEXT.__text _AFAnalyticsEventTypeGetLegacyName
|| __TEXT.__text _AFAnalyticsEventTypeGetName
|| __TEXT.__text _AFAnalyticsEventTypeIsValid
|| __TEXT.__text _AFAnalyticsLogsDirectory
|| __TEXT.__text _AFAnalyticsObservationServiceGetXPCInterface
|| __TEXT.__text _AFAnalyticsObserverGetXPCInterface
|| __TEXT.__text _AFAnalyticsSafeContextForJson
|| __TEXT.__text _AFAnalyticsServiceDelegateGetXPCInterface
|| __TEXT.__text _AFAnalyticsServiceGetXPCInterface
|| __TEXT.__text _AFAnalyticsTurnContextCreateWithRequestInfo
|| __TEXT.__text _AFAnalyticsTurnContextCreateWithSpeechRequestOptions
|| __TEXT.__text _AFAppleAudioDeviceConnectedInLast24Hours
|| __TEXT.__text _AFApplicationClientIdentifierForApp
|| __TEXT.__text _AFApplicationClientIdentifierForWatchApp
|| __TEXT.__text _AFApplicationWorkspaceEnumerateInstalledApplications
|| __TEXT.__text _AFApplicationWorkspaceEnumerateInstalledUserVisibleApplications
|| __TEXT.__text _AFAssertionGetContexts
|| __TEXT.__text _AFAssertionGetCurrentOrUpNextDateIntervalFromContexts
|| __TEXT.__text _AFAssertionGetEffectiveDateAndExpirationDurationFromDateInterval
|| __TEXT.__text _AFAssertionRelinquishmentOptionsGetFromNames
|| __TEXT.__text _AFAssertionRelinquishmentOptionsGetNames
|| __TEXT.__text _AFAssertionRelinquishmentOptionsValidate
|| __TEXT.__text _AFAssetDownloadOptionsApplyForEmbeddedSpeechAssetDownload
|| __TEXT.__text _AFAssistantCapable
|| __TEXT.__text _AFAssistantRestricted
|| __TEXT.__text _AFAudioPlaybackOptionsGetFromNames
|| __TEXT.__text _AFAudioPlaybackOptionsGetNames
|| __TEXT.__text _AFAudioPlaybackOptionsValidate
|| __TEXT.__text _AFAudioSessionAssertionGetConnectionWorkloop
|| __TEXT.__text _AFAudioSessionAssertionGetCurrentAcquisitionService
|| __TEXT.__text _AFAudioSessionAssertionServiceXPCInterface
|| __TEXT.__text _AFAudioSessionAssertionSetLocalAcquisitionService
|| __TEXT.__text _AFAudioSessionAssertionSetLocalAcquisitionServiceProvider
|| __TEXT.__text _AFBackedUpPreferencesSynchronize
|| __TEXT.__text _AFBluetoothHeadphoneEarbudSideGetFromName
|| __TEXT.__text _AFBluetoothHeadphoneEarbudSideGetIsValid
|| __TEXT.__text _AFBluetoothHeadphoneEarbudSideGetIsValidAndSpecified
|| __TEXT.__text _AFBluetoothHeadphoneEarbudSideGetName
|| __TEXT.__text _AFBluetoothHeadphoneInEarStatusGetFromName
|| __TEXT.__text _AFBluetoothHeadphoneInEarStatusGetIsValid
|| __TEXT.__text _AFBluetoothHeadphoneInEarStatusGetIsValidAndSpecified
|| __TEXT.__text _AFBluetoothHeadphoneInEarStatusGetName
|| __TEXT.__text _AFBluetoothHeadphoneListeningModeGetFromName
|| __TEXT.__text _AFBluetoothHeadphoneListeningModeGetIsValid
|| __TEXT.__text _AFBluetoothHeadphoneListeningModeGetIsValidAndSpecified
|| __TEXT.__text _AFBluetoothHeadphoneListeningModeGetName
|| __TEXT.__text _AFBluetoothWirelessSplitterSessionStateGetFromName
|| __TEXT.__text _AFBluetoothWirelessSplitterSessionStateGetIsValid
|| __TEXT.__text _AFBluetoothWirelessSplitterSessionStateGetIsValidAndSpecified
|| __TEXT.__text _AFBluetoothWirelessSplitterSessionStateGetName
|| __TEXT.__text _AFBooleanGetFromName
|| __TEXT.__text _AFBooleanGetIsValid
|| __TEXT.__text _AFBooleanGetIsValidAndSpecified
|| __TEXT.__text _AFBooleanGetName
|| __TEXT.__text _AFBuildVersion
|| __TEXT.__text _AFBundleIDFromApplicationClientIdentifier
|| __TEXT.__text _AFBundleServicesCachePath
|| __TEXT.__text _AFCDAFaceDetection
|| __TEXT.__text _AFCallStateGetFromNames
|| __TEXT.__text _AFCallStateGetNames
|| __TEXT.__text _AFCallStateValidate
|| __TEXT.__text _AFCanProxyTelephony
|| __TEXT.__text _AFCarouselBundleIdentifier
|| __TEXT.__text _AFClearInternalLogFiles
|| __TEXT.__text _AFClientLiteClientObjectInterface
|| __TEXT.__text _AFClientLiteRemoteObjectInterface
|| __TEXT.__text _AFClientServiceDelegateXPCInterface
|| __TEXT.__text _AFClientServiceXPCInterface
|| __TEXT.__text _AFClockAlarmManagerEventGetFromName
|| __TEXT.__text _AFClockAlarmManagerEventGetIsValid
|| __TEXT.__text _AFClockAlarmManagerEventGetIsValidAndSpecified
|| __TEXT.__text _AFClockAlarmManagerEventGetName
|| __TEXT.__text _AFClockAlarmRepeatOptionsGetFromNames
|| __TEXT.__text _AFClockAlarmRepeatOptionsGetNames
|| __TEXT.__text _AFClockAlarmRepeatOptionsValidate
|| __TEXT.__text _AFClockAlarmTypeGetFromNames
|| __TEXT.__text _AFClockAlarmTypeGetNames
|| __TEXT.__text _AFClockAlarmTypeValidate
|| __TEXT.__text _AFClockTimerManagerEventGetFromName
|| __TEXT.__text _AFClockTimerManagerEventGetIsValid
|| __TEXT.__text _AFClockTimerManagerEventGetIsValidAndSpecified
|| __TEXT.__text _AFClockTimerManagerEventGetName
|| __TEXT.__text _AFClockTimerStateGetFromName
|| __TEXT.__text _AFClockTimerStateGetIsValid
|| __TEXT.__text _AFClockTimerStateGetIsValidAndSpecified
|| __TEXT.__text _AFClockTimerStateGetName
|| __TEXT.__text _AFClockTimerTypeGetFromName
|| __TEXT.__text _AFClockTimerTypeGetIsValid
|| __TEXT.__text _AFClockTimerTypeGetIsValidAndSpecified
|| __TEXT.__text _AFClockTimerTypeGetName
|| __TEXT.__text _AFCommandOutcomeFromMediaRemoteStatuses
|| __TEXT.__text _AFConnectionHasEntitlement
|| __TEXT.__text _AFConnectionHasEntitlementCached
|| __TEXT.__text _AFContextProviderNameForBundleId
|| __TEXT.__text _AFCopyKeychainBaseQueryDictionary
|| __TEXT.__text _AFCoreAnalyticsEventCreateForDeviceContexts
|| __TEXT.__text _AFCoreAnalyticsEventCreateForServiceDeviceContexts
|| __TEXT.__text _AFCoreAnalyticsPayloadCreateForDeviceContext
|| __TEXT.__text _AFCreateDirectoryWithPath
|| __TEXT.__text _AFCurrentUserInterfaceIdiom
|| __TEXT.__text _AFDeleteCoreDuetEventsInStream
|| __TEXT.__text _AFDescriptionOfAFQuickStopActions
|| __TEXT.__text _AFDescriptionOfBKSApplicationState
|| __TEXT.__text _AFDeviceColor
|| __TEXT.__text _AFDeviceContextPrivacyClassFromString
|| __TEXT.__text _AFDeviceContextPrivacyClassGetStringDescription
|| __TEXT.__text _AFDeviceContextServiceDelegateGetXPCInterface
|| __TEXT.__text _AFDeviceContextServiceGetXPCInterface
|| __TEXT.__text _AFDeviceEnclosureColor
|| __TEXT.__text _AFDeviceHasAddressBook
|| __TEXT.__text _AFDeviceHighestLanguageModelCapabilityIdentifier
|| __TEXT.__text _AFDeviceIsTinker
|| __TEXT.__text _AFDeviceIsVictory
|| __TEXT.__text _AFDeviceMessagingOptionsGetNames
|| __TEXT.__text _AFDeviceName
|| __TEXT.__text _AFDeviceProximityCompare
|| __TEXT.__text _AFDeviceProximityGetName
|| __TEXT.__text _AFDeviceRegionCode
|| __TEXT.__text _AFDeviceRequestHandlingRolesGetFromNames
|| __TEXT.__text _AFDeviceRequestHandlingRolesGetNames
|| __TEXT.__text _AFDeviceRequestHandlingRolesValidate
|| __TEXT.__text _AFDeviceRingerSwitchStateGetFromName
|| __TEXT.__text _AFDeviceRingerSwitchStateGetIsValid
|| __TEXT.__text _AFDeviceRingerSwitchStateGetIsValidAndSpecified
|| __TEXT.__text _AFDeviceRingerSwitchStateGetName
|| __TEXT.__text _AFDeviceSetupIsActive
|| __TEXT.__text _AFDeviceSupportsANE
|| __TEXT.__text _AFDeviceSupportsAOP
|| __TEXT.__text _AFDeviceSupportsAudioSessionCoordination
|| __TEXT.__text _AFDeviceSupportsBargeIn
|| __TEXT.__text _AFDeviceSupportsCarPlay
|| __TEXT.__text _AFDeviceSupportsEchoCancellation
|| __TEXT.__text _AFDeviceSupportsNavigation
|| __TEXT.__text _AFDeviceSupportsSiriUOD
|| __TEXT.__text _AFDeviceSupportsSpokenMessages
|| __TEXT.__text _AFDeviceSupportsTTS
|| __TEXT.__text _AFDeviceSupportsUSBTypeCDisplay
|| __TEXT.__text _AFDeviceSupportsWiFiLPASMode
|| __TEXT.__text _AFDeviceSupportsZLL
|| __TEXT.__text _AFDiagnosticsSubmissionAllowed
|| __TEXT.__text _AFDictationCapable
|| __TEXT.__text _AFDictationHasHighQualityModels
|| __TEXT.__text _AFDictationLanguageForKeyboardLanguage
|| __TEXT.__text _AFDictationRestricted
|| __TEXT.__text _AFDictationServiceDelegateXPCInterface
|| __TEXT.__text _AFDictationTaskHintTypeFromString
|| __TEXT.__text _AFDirectActionCreateRequestInfo
|| __TEXT.__text _AFDirectActionEventGetName
|| __TEXT.__text _AFDirectActionSourceGetName
|| __TEXT.__text _AFDisambiguationHistoryReset
|| __TEXT.__text _AFDisambiguationSelectionTypeGetName
|| __TEXT.__text _AFDispatchAsyncLogged
|| __TEXT.__text _AFDispatchScheduleAtTime
|| __TEXT.__text _AFDispatchScheduleWithDelay
|| __TEXT.__text _AFDispatchSyncLogged
|| __TEXT.__text _AFDispatchTimeGetFromDateAndOffset
|| __TEXT.__text _AFEffectiveSiriBundleForLocation
|| __TEXT.__text _AFElectionBeginNotifyStateObserver
|| __TEXT.__text _AFElectionBeginNotifyStatePublisher
|| __TEXT.__text _AFElectionDecisionRequestNotifyStateObserver
|| __TEXT.__text _AFElectionLossNotifyStateObserver
|| __TEXT.__text _AFElectionLossNotifyStatePublisher
|| __TEXT.__text _AFElectionRepostWinDecisionNotifyStateObserver
|| __TEXT.__text _AFElectionRepostWinDecisionNotifyStatePublisher
|| __TEXT.__text _AFElectionWinNotifyStateObserver
|| __TEXT.__text _AFElectionWinNotifyStatePublisher
|| __TEXT.__text _AFEnablementFlowGetFromName
|| __TEXT.__text _AFEnablementFlowGetIsValid
|| __TEXT.__text _AFEnablementFlowGetIsValidAndSpecified
|| __TEXT.__text _AFEnablementFlowGetName
|| __TEXT.__text _AFErrorEnumerate
|| __TEXT.__text _AFErrorSetUnderlyingError
|| __TEXT.__text _AFExperimentConfigurationTypeGetFromName
|| __TEXT.__text _AFExperimentConfigurationTypeGetIsValid
|| __TEXT.__text _AFExperimentConfigurationTypeGetIsValidAndSpecified
|| __TEXT.__text _AFExperimentConfigurationTypeGetName
|| __TEXT.__text _AFExperimentDeploymentReasonGetFromName
|| __TEXT.__text _AFExperimentDeploymentReasonGetIsValid
|| __TEXT.__text _AFExperimentDeploymentReasonGetIsValidAndSpecified
|| __TEXT.__text _AFExperimentDeploymentReasonGetName
|| __TEXT.__text _AFFetchFollowerStatusInStereoPair
|| __TEXT.__text _AFFetchLocalTTSAssetAvailabilityWithCompletion
|| __TEXT.__text _AFFileURLForConversationWithIdentifier
|| __TEXT.__text _AFFlowServiceXPCInterface
|| __TEXT.__text _AFGetCurrentItemAdamIDFromNowPlayingInfo
|| __TEXT.__text _AFGetFlashlightLevel
|| __TEXT.__text _AFGetMachAbsoluteTimeFromTimeInterval
|| __TEXT.__text _AFGetNowPlayingInfoDictionary
|| __TEXT.__text _AFGetNowPlayingQueueState
|| __TEXT.__text _AFGetTimeSinceEpochInMilliseconds
|| __TEXT.__text _AFGetTimeSinceEpochRoundedToHourInMilliseconds
|| __TEXT.__text _AFGradingOptInStateChangeWithHistoryEntry
|| __TEXT.__text _AFGradingOptInStateChangeWithNewOptInStatus
|| __TEXT.__text _AFGryphonAssetsExistForLanguage
|| __TEXT.__text _AFHasBaseband
|| __TEXT.__text _AFHasCellularData
|| __TEXT.__text _AFHasCellularTelephony
|| __TEXT.__text _AFHasGPS
|| __TEXT.__text _AFHasHapticEngine
|| __TEXT.__text _AFHasPairedBTDeviceForSpokenMessages
|| __TEXT.__text _AFHasPearlCameraCapability
|| __TEXT.__text _AFHasRingerSwitch
|| __TEXT.__text _AFHasUnlockedSinceBoot
|| __TEXT.__text _AFHomeAccessorySiriDataSharingPropagationEventGetFromName
|| __TEXT.__text _AFHomeAccessorySiriDataSharingPropagationEventGetIsValid
|| __TEXT.__text _AFHomeAccessorySiriDataSharingPropagationEventGetIsValidAndSpecified
|| __TEXT.__text _AFHomeAccessorySiriDataSharingPropagationEventGetName
|| __TEXT.__text _AFHomeAnnouncementStateGetFromNames
|| __TEXT.__text _AFHomeAnnouncementStateGetNames
|| __TEXT.__text _AFHomeAnnouncementStateValidate
|| __TEXT.__text _AFInstallCommonSignalHandlers
|| __TEXT.__text _AFInstanceApplicationTypeGetFromName
|| __TEXT.__text _AFInstanceApplicationTypeGetIsValid
|| __TEXT.__text _AFInstanceApplicationTypeGetIsValidAndSpecified
|| __TEXT.__text _AFInstanceApplicationTypeGetName
|| __TEXT.__text _AFInternalConfigValueForKey
|| __TEXT.__text _AFInternalPreferencesSynchronize
|| __TEXT.__text _AFInterstitialCreateCommand
|| __TEXT.__text _AFInterstitialGetDialogIdentifierForPhase
|| __TEXT.__text _AFInterstitialIsCommandInterstitial
|| __TEXT.__text _AFInterstitialIsDialogIdentifierInterstitial
|| __TEXT.__text _AFInterstitialPhaseGetFromName
|| __TEXT.__text _AFInterstitialPhaseGetIsValid
|| __TEXT.__text _AFInterstitialPhaseGetIsValidAndSpecified
|| __TEXT.__text _AFInterstitialPhaseGetName
|| __TEXT.__text _AFInterstitialStyleGetFromName
|| __TEXT.__text _AFInterstitialStyleGetIsValid
|| __TEXT.__text _AFInterstitialStyleGetIsValidAndSpecified
|| __TEXT.__text _AFInterstitialStyleGetName
|| __TEXT.__text _AFInterstitialSupportsRequestWithEvent
|| __TEXT.__text _AFInvocationFeedbackExperimentFeatureGroupsGetFromNames
|| __TEXT.__text _AFInvocationFeedbackExperimentFeatureGroupsGetNames
|| __TEXT.__text _AFInvocationFeedbackExperimentFeatureGroupsValidate
|| __TEXT.__text _AFIsATV
|| __TEXT.__text _AFIsCustomerInstall
|| __TEXT.__text _AFIsCustomerInstallOrPPT
|| __TEXT.__text _AFIsDeviceUnlocked
|| __TEXT.__text _AFIsDictationLanguageInstalledForOfflineRecognition
|| __TEXT.__text _AFIsDictationLanguageInstalledForOnDeviceDictation
|| __TEXT.__text _AFIsDictationLanguageSupportedForOnDeviceDictation
|| __TEXT.__text _AFIsDictationRequestEligibleForOnDeviceDictation
|| __TEXT.__text _AFIsDictationRequestSpeechApiRequest
|| __TEXT.__text _AFIsFileNotFoundError
|| __TEXT.__text _AFIsHorseman
|| __TEXT.__text _AFIsIPod
|| __TEXT.__text _AFIsInternalInstall
|| __TEXT.__text _AFIsMac
|| __TEXT.__text _AFIsMultiUserCompanion
|| __TEXT.__text _AFIsNano
|| __TEXT.__text _AFIsPPT
|| __TEXT.__text _AFIsPad
|| __TEXT.__text _AFIsSearchDictationRequest
|| __TEXT.__text _AFIsSyncNeeded
|| __TEXT.__text _AFIsW1Headset
|| __TEXT.__text _AFIsW2Headset
|| __TEXT.__text _AFKeyValueObservingCreate
|| __TEXT.__text _AFKeyboardLMLocaleOverride
|| __TEXT.__text _AFKeyboardResourcesDirectoryPath
|| __TEXT.__text _AFKeychainRemoveValueForAccountAndKey
|| __TEXT.__text _AFKeychainSetValueForAccountAndKey
|| __TEXT.__text _AFKeychainValueForAccountAndKey
|| __TEXT.__text _AFLanguageOptionsForNowPlayingInfo
|| __TEXT.__text _AFLanguagePrefixForLanguageCode
|| __TEXT.__text _AFLibraryDirectoryWithSubPath
|| __TEXT.__text _AFLocationAccessStateGetFromName
|| __TEXT.__text _AFLocationAccessStateGetIsValid
|| __TEXT.__text _AFLocationAccessStateGetIsValidAndSpecified
|| __TEXT.__text _AFLocationAccessStateGetName
|| __TEXT.__text _AFLocationStatusIsAllowed
|| __TEXT.__text _AFLocationStatusIsDenied
|| __TEXT.__text _AFLogDirectory
|| __TEXT.__text _AFLogFlush
|| __TEXT.__text _AFLogInitIfNeeded
|| __TEXT.__text _AFLogParsedCommandObject
|| __TEXT.__text _AFLogWantsToLogParsedCommandObjects
|| __TEXT.__text _AFMachAbsoluteTimeAddTimeInterval
|| __TEXT.__text _AFMachAbsoluteTimeGetMicroseconds
|| __TEXT.__text _AFMachAbsoluteTimeGetMilliseconds
|| __TEXT.__text _AFMachAbsoluteTimeGetNanoseconds
|| __TEXT.__text _AFMachAbsoluteTimeGetTimeInterval
|| __TEXT.__text _AFMachAbsoluteTimeSubtractTimeInterval
|| __TEXT.__text _AFMainScreenScale
|| __TEXT.__text _AFManagedPreferencesDomainForDomain
|| __TEXT.__text _AFMapsNavigationStatusIsActive
|| __TEXT.__text _AFMediaPlaybackStateGetFromName
|| __TEXT.__text _AFMediaPlaybackStateGetIsValid
|| __TEXT.__text _AFMediaPlaybackStateGetIsValidAndSpecified
|| __TEXT.__text _AFMediaPlaybackStateGetName
|| __TEXT.__text _AFMediaRemoteSendCommandNoCheck
|| __TEXT.__text _AFMediaRemoteSendCommandWithOptions
|| __TEXT.__text _AFMediaRemoteSendCommandWithOptionsNoCheck
|| __TEXT.__text _AFMemoryInfoGetCurrent
|| __TEXT.__text _AFMessagesGetAceDomainObjectsFromContext
|| __TEXT.__text _AFMessagesGetDomainObjectsFromContext
|| __TEXT.__text _AFMessagesGetPhoneNumberEmailAddressFromString
|| __TEXT.__text _AFMetricsCategoryGetName
|| __TEXT.__text _AFMobileUserBundleServicesCachePath
|| __TEXT.__text _AFMultiUserServiceXPCInterface
|| __TEXT.__text _AFMyriadAdvertisementRecordTypeGetFromName
|| __TEXT.__text _AFMyriadAdvertisementRecordTypeGetIsValid
|| __TEXT.__text _AFMyriadAdvertisementRecordTypeGetIsValidAndSpecified
|| __TEXT.__text _AFMyriadAdvertisementRecordTypeGetName
|| __TEXT.__text _AFMyriadCoordinatorAudioHashFileBaseDirectory
|| __TEXT.__text _AFMyriadCoordinatorAudioHashFilePath
|| __TEXT.__text _AFMyriadDecisionGetWaitTime
|| __TEXT.__text _AFMyriadEmitClassicMetrics
|| __TEXT.__text _AFMyriadEmitSelfMetrics
|| __TEXT.__text _AFMyriadGoodnessScoreBumpReasonGetFromName
|| __TEXT.__text _AFMyriadGoodnessScoreBumpReasonGetIsValid
|| __TEXT.__text _AFMyriadGoodnessScoreBumpReasonGetIsValidAndSpecified
|| __TEXT.__text _AFMyriadGoodnessScoreBumpReasonGetName
|| __TEXT.__text _AFMyriadGoodnessScoreOverrideOptionGetFromName
|| __TEXT.__text _AFMyriadGoodnessScoreOverrideOptionGetIsValid
|| __TEXT.__text _AFMyriadGoodnessScoreOverrideOptionGetIsValidAndSpecified
|| __TEXT.__text _AFMyriadGoodnessScoreOverrideOptionGetName
|| __TEXT.__text _AFMyriadMaxNoOperationAccessoryMessageCount
|| __TEXT.__text _AFMyriadMaxNoOperationDelay
|| __TEXT.__text _AFMyriadMonitorDecisionGetWaitTime
|| __TEXT.__text _AFMyriadPreferencesChangedNotifyStateObserver
|| __TEXT.__text _AFMyriadPreferencesChangedNotifyStatePublisher
|| __TEXT.__text _AFMyriadPreheatGetWaitTime
|| __TEXT.__text _AFMyriadReadDefaultsNotificationName
|| __TEXT.__text _AFNavigationStateIsNavigating
|| __TEXT.__text _AFNonNilMutableCopyOfArray
|| __TEXT.__text _AFNonNilMutableCopyOfDictionary
|| __TEXT.__text _AFNotifyGetEffectiveNotification
|| __TEXT.__text _AFNotifyGetEffectiveNotificationName
|| __TEXT.__text _AFOfflineDictationCapable
|| __TEXT.__text _AFOfflineDictationCapableWithoutOverride
|| __TEXT.__text _AFOfflineDictationLanguageForKeyboardLanguage
|| __TEXT.__text _AFOfflineDictationStatusForLanguage
|| __TEXT.__text _AFOfflineDictationStatusStringAssetId
|| __TEXT.__text _AFOfflineDictationStatusStringForVersion
|| __TEXT.__text _AFOfflineDictationStatusStringIsContinuousListeningSupported
|| __TEXT.__text _AFOfflineDictationStatusStringIsHighQualityModelInstalled
|| __TEXT.__text _AFOfflineDictationStatusStringIsHighQualityModelSupported
|| __TEXT.__text _AFOfflineDictationStatusStringIsInstalled
|| __TEXT.__text _AFOfflineDictationStatusStringIsInstalling
|| __TEXT.__text _AFOfflineDictationStatusStringIsOnDeviceSearchSupported
|| __TEXT.__text _AFOpportuneSpeakingModelFeedbackGetDescription
|| __TEXT.__text _AFOpportuneSpeakingModelServiceInterface
|| __TEXT.__text _AFOpportuneSpeakingModelTypeGetDescription
|| __TEXT.__text _AFOutputVoiceLanguageForMacrolanguage
|| __TEXT.__text _AFOutputVoiceLanguageForRecognitionLanguage
|| __TEXT.__text _AFOverrideLanguageCode
|| __TEXT.__text _AFPNRFatalErrorInfoFromNSError
|| __TEXT.__text _AFPairedDeviceIsVictory
|| __TEXT.__text _AFPauseCommandsInterruptAudio
|| __TEXT.__text _AFPeerContentTupleGetContentMapFromArray
|| __TEXT.__text _AFPeerInfoGetCompactDescription
|| __TEXT.__text _AFPeerInfoMerge
|| __TEXT.__text _AFPendingSpeechRequestServiceInterface
|| __TEXT.__text _AFPerformDeviceVolumeAction
|| __TEXT.__text _AFPineBoardSystemStateGetFromName
|| __TEXT.__text _AFPineBoardSystemStateGetIsValid
|| __TEXT.__text _AFPineBoardSystemStateGetIsValidAndSpecified
|| __TEXT.__text _AFPineBoardSystemStateGetName
|| __TEXT.__text _AFPlaybackRouteIsHandsFree
|| __TEXT.__text _AFPreferencesATVStopRecordingDelay
|| __TEXT.__text _AFPreferencesAlwaysEyesFreeEnabled
|| __TEXT.__text _AFPreferencesAssistantAllowed
|| __TEXT.__text _AFPreferencesAssistantEnabled
|| __TEXT.__text _AFPreferencesAudioDuckingAllowed
|| __TEXT.__text _AFPreferencesBorealisEducationHeaderDisplayCount
|| __TEXT.__text _AFPreferencesBufferedSpeechCapturePacketInterval
|| __TEXT.__text _AFPreferencesDictationAllowed
|| __TEXT.__text _AFPreferencesDisableDictationMode
|| __TEXT.__text _AFPreferencesHoldToTalkForTypeToSiriEnabled
|| __TEXT.__text _AFPreferencesHorsemanSupplementalLanguageDictionary
|| __TEXT.__text _AFPreferencesIgnoreServerManualEndpointingThreshold
|| __TEXT.__text _AFPreferencesLanguageCodeForUser
|| __TEXT.__text _AFPreferencesLanguageIsExplicitlySupportedForDictation
|| __TEXT.__text _AFPreferencesLanguageIsSupported
|| __TEXT.__text _AFPreferencesLanguageIsSupportedForDeviceSettings
|| __TEXT.__text _AFPreferencesLanguageIsSupportedForDictation
|| __TEXT.__text _AFPreferencesManualEndpointingThreshold
|| __TEXT.__text _AFPreferencesMobileUserSessionLanguage
|| __TEXT.__text _AFPreferencesMultiUserCompanionNotificationLanguageCodesForHomePodVersion
|| __TEXT.__text _AFPreferencesProfanityFilterForced
|| __TEXT.__text _AFPreferencesSetAlwaysEyesFreeEnabled
|| __TEXT.__text _AFPreferencesSetBorealisEducationHeaderDisplayCount
|| __TEXT.__text _AFPreferencesSetHoldToTalkForTypeToSiriEnabled
|| __TEXT.__text _AFPreferencesSetHorsemanSupplementalLanguageDictionary
|| __TEXT.__text _AFPreferencesSetIgnoreServerManualEndpointingThreshold
|| __TEXT.__text _AFPreferencesSetManualEndpointingThreshold
|| __TEXT.__text _AFPreferencesSetShouldIgnoreInternalConfig
|| __TEXT.__text _AFPreferencesSetStartAlertEnabled
|| __TEXT.__text _AFPreferencesSetStreamingDictationEnabled
|| __TEXT.__text _AFPreferencesSetTypeToSiriEnabled
|| __TEXT.__text _AFPreferencesShouldIgnoreInternalConfig
|| __TEXT.__text _AFPreferencesSimulateImmediateSpeechCapture
|| __TEXT.__text _AFPreferencesSiriTaskBackgroundAssertionTimeout
|| __TEXT.__text _AFPreferencesSiriTaskResponseTimeout
|| __TEXT.__text _AFPreferencesStartAlertEnabled
|| __TEXT.__text _AFPreferencesStreamingDictationEnabled
|| __TEXT.__text _AFPreferencesSupplementalLanguages
|| __TEXT.__text _AFPreferencesSupplementalLanguagesModificationDate
|| __TEXT.__text _AFPreferencesSupportedDictationLanguages
|| __TEXT.__text _AFPreferencesSupportedDictationLanguagesSet
|| __TEXT.__text _AFPreferencesSupportedLanguages
|| __TEXT.__text _AFPreferencesSupportedLanguagesForCurrentStoreFront
|| __TEXT.__text _AFPreferencesSupportedLanguagesForRemote
|| __TEXT.__text _AFPreferencesSupportedLanguagesForStorefrontIdentifier
|| __TEXT.__text _AFPreferencesSupportedMultiUserLanguages
|| __TEXT.__text _AFPreferencesTestAccessEnabled
|| __TEXT.__text _AFPreferencesTypeToSiriEnabled
|| __TEXT.__text _AFPreferencesUserGeneratedContentAllowed
|| __TEXT.__text _AFPreheatStylePreheatsSpeechManager
|| __TEXT.__text _AFPresentationPluginsURL
|| __TEXT.__text _AFProcessGetInstanceUUID
|| __TEXT.__text _AFProcessGetValueForEntitlement
|| __TEXT.__text _AFProcessIsAssistantDaemon
|| __TEXT.__text _AFProcessIsAssistantService
|| __TEXT.__text _AFProcessIsRunningAsInstance
|| __TEXT.__text _AFProductAndBuildVersion
|| __TEXT.__text _AFProductName
|| __TEXT.__text _AFProductType
|| __TEXT.__text _AFProductTypeForInstrumentation
|| __TEXT.__text _AFProductVersion
|| __TEXT.__text _AFProviderServiceDelegateXPCInterface
|| __TEXT.__text _AFProviderServiceXPCInterface
|| __TEXT.__text _AFRecordCoreDuetContext
|| __TEXT.__text _AFRecordCoreDuetEvent
|| __TEXT.__text _AFRecordCoreDuetEventAtTimestamps
|| __TEXT.__text _AFRecordCoreDuetEventWithStream
|| __TEXT.__text _AFRecordRouteIsHearst
|| __TEXT.__text _AFRequestCancellationReasonGetFromName
|| __TEXT.__text _AFRequestCancellationReasonGetIsValid
|| __TEXT.__text _AFRequestCancellationReasonGetIsValidAndSpecified
|| __TEXT.__text _AFRequestCancellationReasonGetName
|| __TEXT.__text _AFResponseModeDeviceOrientationGetFromName
|| __TEXT.__text _AFResponseModeDeviceOrientationGetIsValid
|| __TEXT.__text _AFResponseModeDeviceOrientationGetIsValidAndSpecified
|| __TEXT.__text _AFResponseModeDeviceOrientationGetName
|| __TEXT.__text _AFResponseModeVoiceFeedbackGetFromName
|| __TEXT.__text _AFResponseModeVoiceFeedbackGetIsValid
|| __TEXT.__text _AFResponseModeVoiceFeedbackGetIsValidAndSpecified
|| __TEXT.__text _AFResponseModeVoiceFeedbackGetName
|| __TEXT.__text _AFSecurityDecryptData
|| __TEXT.__text _AFSecurityDigestChunksWithProvider
|| __TEXT.__text _AFSecurityDigestData
|| __TEXT.__text _AFSecurityEncryptData
|| __TEXT.__text _AFSecurityGenerateRandomData
|| __TEXT.__text _AFSecurityServiceGetXPCInterface
|| __TEXT.__text _AFSerializeNSUserActivity
|| __TEXT.__text _AFServicePluginsURL
|| __TEXT.__text _AFSetAudioSessionActiveOptionsGetFromNames
|| __TEXT.__text _AFSetAudioSessionActiveOptionsGetNames
|| __TEXT.__text _AFSetAudioSessionActiveOptionsValidate
|| __TEXT.__text _AFSetAudioSessionActiveReasonGetFromName
|| __TEXT.__text _AFSetAudioSessionActiveReasonGetIsValid
|| __TEXT.__text _AFSetAudioSessionActiveReasonGetIsValidAndSpecified
|| __TEXT.__text _AFSetAudioSessionActiveReasonGetName
|| __TEXT.__text _AFSetAudioSessionInactiveOptionsGetFromNames
|| __TEXT.__text _AFSetAudioSessionInactiveOptionsGetNames
|| __TEXT.__text _AFSetAudioSessionInactiveOptionsValidate
|| __TEXT.__text _AFSetSpokenNotificationDataCollectionEnabled
|| __TEXT.__text _AFSettingsServiceDelegateXPCInterface
|| __TEXT.__text _AFSettingsServiceXPCInterface
|| __TEXT.__text _AFSharedResourcesDirectory
|| __TEXT.__text _AFShouldOptOutDataSharingForMigrationFromBuildVersion
|| __TEXT.__text _AFShouldOptOutDataSharingForMigrationFromProductVersion
|| __TEXT.__text _AFShouldRunDESRecording
|| __TEXT.__text _AFShouldUseLanguageDetector
|| __TEXT.__text _AFSiriActivationActionTypeGetFromName
|| __TEXT.__text _AFSiriActivationActionTypeGetIsValid
|| __TEXT.__text _AFSiriActivationActionTypeGetIsValidAndSpecified
|| __TEXT.__text _AFSiriActivationActionTypeGetName
|| __TEXT.__text _AFSiriActivationBluetoothDeviceBoronSignal
|| __TEXT.__text _AFSiriActivationBluetoothDeviceButtonPress
|| __TEXT.__text _AFSiriActivationBluetoothDeviceButtonRelease
|| __TEXT.__text _AFSiriActivationBluetoothDeviceDoubleTap
|| __TEXT.__text _AFSiriActivationBluetoothDeviceTriggerless
|| __TEXT.__text _AFSiriActivationBluetoothDeviceVoice
|| __TEXT.__text _AFSiriActivationBluetoothDeviceVoiceTrigger
|| __TEXT.__text _AFSiriActivationBluetoothDeviceVoiceTriggerPrewarm
|| __TEXT.__text _AFSiriActivationBuiltInMicVoice
|| __TEXT.__text _AFSiriActivationBuiltInMicVoiceTrigger
|| __TEXT.__text _AFSiriActivationBuiltInMicVoiceTriggerPrewarm
|| __TEXT.__text _AFSiriActivationCarPlayDeviceVoice
|| __TEXT.__text _AFSiriActivationCarPlayDeviceVoiceTrigger
|| __TEXT.__text _AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm
|| __TEXT.__text _AFSiriActivationContinuousVoiceTriggerDetected
|| __TEXT.__text _AFSiriActivationCreateContextFromXPCDictionary
|| __TEXT.__text _AFSiriActivationCreateRequestInfoFromContext
|| __TEXT.__text _AFSiriActivationCreateResultFromXPCDictionary
|| __TEXT.__text _AFSiriActivationCreateXPCDictionaryFromContext
|| __TEXT.__text _AFSiriActivationCreateXPCDictionaryFromResult
|| __TEXT.__text _AFSiriActivationEventGetFromName
|| __TEXT.__text _AFSiriActivationEventGetIsValid
|| __TEXT.__text _AFSiriActivationEventGetIsValidAndSpecified
|| __TEXT.__text _AFSiriActivationEventGetName
|| __TEXT.__text _AFSiriActivationGetDarwinNotificationNameFromContext
|| __TEXT.__text _AFSiriActivationHearst
|| __TEXT.__text _AFSiriActivationHearstBoron
|| __TEXT.__text _AFSiriActivationHearstDoubleTap
|| __TEXT.__text _AFSiriActivationHearstVoice
|| __TEXT.__text _AFSiriActivationHoneycombDeviceVoiceTrigger
|| __TEXT.__text _AFSiriActivationHoneycombDeviceVoiceTriggerPrewarm
|| __TEXT.__text _AFSiriActivationOptionsGetFromNames
|| __TEXT.__text _AFSiriActivationOptionsGetNames
|| __TEXT.__text _AFSiriActivationOptionsValidate
|| __TEXT.__text _AFSiriActivationPerform
|| __TEXT.__text _AFSiriActivationPerformLegacy
|| __TEXT.__text _AFSiriActivationRaiseToSpeak
|| __TEXT.__text _AFSiriActivationRaiseToSpeakPrewarm
|| __TEXT.__text _AFSiriActivationServiceGetMachServiceName
|| __TEXT.__text _AFSiriActivationServiceGetPort
|| __TEXT.__text _AFSiriActivationServiceGetXPCInterface
|| __TEXT.__text _AFSiriActivationServicePortGetFromName
|| __TEXT.__text _AFSiriActivationServicePortGetIsValid
|| __TEXT.__text _AFSiriActivationServicePortGetIsValidAndSpecified
|| __TEXT.__text _AFSiriActivationServicePortGetName
|| __TEXT.__text _AFSiriActivationSetOverrideHandlerMapProvider
|| __TEXT.__text _AFSiriActivationSourceGetFromName
|| __TEXT.__text _AFSiriActivationSourceGetIsValid
|| __TEXT.__text _AFSiriActivationSourceGetIsValidAndSpecified
|| __TEXT.__text _AFSiriActivationSourceGetName
|| __TEXT.__text _AFSiriActivationTriggerless
|| __TEXT.__text _AFSiriActivationValidate
|| __TEXT.__text _AFSiriActivationVoiceActivityDetected
|| __TEXT.__text _AFSiriActivationVoiceKeywordDetected
|| __TEXT.__text _AFSiriActivationVoiceTriggerActivate
|| __TEXT.__text _AFSiriActivationVoiceTriggerPrewarm
|| __TEXT.__text _AFSiriAnnouncementPlatformGetFromName
|| __TEXT.__text _AFSiriAnnouncementPlatformGetIsValid
|| __TEXT.__text _AFSiriAnnouncementPlatformGetIsValidAndSpecified
|| __TEXT.__text _AFSiriAnnouncementPlatformGetName
|| __TEXT.__text _AFSiriCarPlayAnnounceEnablementTypeGetFromName
|| __TEXT.__text _AFSiriCarPlayAnnounceEnablementTypeGetIsValid
|| __TEXT.__text _AFSiriCarPlayAnnounceEnablementTypeGetIsValidAndSpecified
|| __TEXT.__text _AFSiriCarPlayAnnounceEnablementTypeGetName
|| __TEXT.__text _AFSiriDataSharingOptInStatusChangeSourceGetFromName
|| __TEXT.__text _AFSiriDataSharingOptInStatusChangeSourceGetIsValid
|| __TEXT.__text _AFSiriDataSharingOptInStatusChangeSourceGetIsValidAndSpecified
|| __TEXT.__text _AFSiriDataSharingOptInStatusChangeSourceGetName
|| __TEXT.__text _AFSiriDataSharingOptInStatusGetFromName
|| __TEXT.__text _AFSiriDataSharingOptInStatusGetIsValid
|| __TEXT.__text _AFSiriDataSharingOptInStatusGetIsValidAndSpecified
|| __TEXT.__text _AFSiriDataSharingOptInStatusGetName
|| __TEXT.__text _AFSiriDeactivationOptionsGetFromNames
|| __TEXT.__text _AFSiriDeactivationOptionsGetNames
|| __TEXT.__text _AFSiriDeactivationOptionsValidate
|| __TEXT.__text _AFSiriDeactivationReasonGetFromName
|| __TEXT.__text _AFSiriDeactivationReasonGetIsValid
|| __TEXT.__text _AFSiriDeactivationReasonGetIsValidAndSpecified
|| __TEXT.__text _AFSiriDeactivationReasonGetName
|| __TEXT.__text _AFSiriLocationAuthorizationStatus
|| __TEXT.__text _AFSiriResponseHandlingInterface
|| __TEXT.__text _AFSiriUsageDescriptionForAppID
|| __TEXT.__text _AFSiriUsageResultHandlingInterface
|| __TEXT.__text _AFSiriUserNotificationAnnouncementSpeakingStateGetFromName
|| __TEXT.__text _AFSiriUserNotificationAnnouncementSpeakingStateGetIsValid
|| __TEXT.__text _AFSiriUserNotificationAnnouncementSpeakingStateGetIsValidAndSpecified
|| __TEXT.__text _AFSiriUserNotificationAnnouncementSpeakingStateGetName
|| __TEXT.__text _AFSiriUserNotificationAnnouncementTypeGetFromName
|| __TEXT.__text _AFSiriUserNotificationAnnouncementTypeGetIsValid
|| __TEXT.__text _AFSiriUserNotificationAnnouncementTypeGetIsValidAndSpecified
|| __TEXT.__text _AFSiriUserNotificationAnnouncementTypeGetName
|| __TEXT.__text _AFSleepStateGetFromName
|| __TEXT.__text _AFSleepStateGetIsValid
|| __TEXT.__text _AFSleepStateGetIsValidAndSpecified
|| __TEXT.__text _AFSleepStateGetName
|| __TEXT.__text _AFSoundIDGetFromName
|| __TEXT.__text _AFSoundIDGetIsValid
|| __TEXT.__text _AFSoundIDGetIsValidAndSpecified
|| __TEXT.__text _AFSoundIDGetName
|| __TEXT.__text _AFSpeechEndpointerOperationModeGetFromName
|| __TEXT.__text _AFSpeechEndpointerOperationModeGetIsValid
|| __TEXT.__text _AFSpeechEndpointerOperationModeGetIsValidAndSpecified
|| __TEXT.__text _AFSpeechEndpointerOperationModeGetName
|| __TEXT.__text _AFSpeechEventGetDescription
|| __TEXT.__text _AFSpeechEventIsBluetooth
|| __TEXT.__text _AFSpeechEventIsHardwareTrigger
|| __TEXT.__text _AFSpeechEventIsRemotePlugin
|| __TEXT.__text _AFSpeechEventIsTVRemote
|| __TEXT.__text _AFSpeechEventIsVoiceTrigger
|| __TEXT.__text _AFSpeechLogsDirectory
|| __TEXT.__text _AFSpeechRecognitionUsageDescriptionForAppID
|| __TEXT.__text _AFSpeechRecordingAlertStyleGetFromName
|| __TEXT.__text _AFSpeechRecordingAlertStyleGetIsValid
|| __TEXT.__text _AFSpeechRecordingAlertStyleGetIsValidAndSpecified
|| __TEXT.__text _AFSpeechRecordingAlertStyleGetName
|| __TEXT.__text _AFSpeechRecordingEventListenerGetXPCInterface
|| __TEXT.__text _AFSpokenMessagesExecutionTimeout
|| __TEXT.__text _AFSpokenNotificationDataCollectionEnabled
|| __TEXT.__text _AFStringFromMRPlaybackState
|| __TEXT.__text _AFSupportBaseURL
|| __TEXT.__text _AFSupportPreferencesSynchronize
|| __TEXT.__text _AFSupportsASROnDevice
|| __TEXT.__text _AFSupportsAirPlayEndpointRoute
|| __TEXT.__text _AFSupportsAudioSessionCoordination
|| __TEXT.__text _AFSupportsBluetooth
|| __TEXT.__text _AFSupportsHAL
|| __TEXT.__text _AFSupportsHALDeviceRouting
|| __TEXT.__text _AFSupportsHALFlowRouting
|| __TEXT.__text _AFSupportsHALProximityScanning
|| __TEXT.__text _AFSupportsMultiUser
|| __TEXT.__text _AFSupportsPairedDevice
|| __TEXT.__text _AFSupportsPlayThisOnThat
|| __TEXT.__text _AFSupportsPlayThisOnThatPlayback
|| __TEXT.__text _AFSupportsPlaybackToBluetoothDevice
|| __TEXT.__text _AFSupportsRecordFromBluetoothDevice
|| __TEXT.__text _AFSupportsSiriSpeaks
|| __TEXT.__text _AFSupportsSpeechExtraction
|| __TEXT.__text _AFSupportsVibration
|| __TEXT.__text _AFSupportsWAPI
|| __TEXT.__text _AFSupportsWatchListKit
|| __TEXT.__text _AFSupportsWirelessSplitter
|| __TEXT.__text _AFSyncKeysThatNeedToBeSynced
|| __TEXT.__text _AFSystemGetBootTimeInMicroseconds
|| __TEXT.__text _AFSystemGetBootTimeInTimeInterval
|| __TEXT.__text _AFSystemRootDirectory
|| __TEXT.__text _AFTestRequestPathGetFromName
|| __TEXT.__text _AFTestRequestPathGetIsValid
|| __TEXT.__text _AFTestRequestPathGetIsValidAndSpecified
|| __TEXT.__text _AFTestRequestPathGetName
|| __TEXT.__text _AFTruncateMachTimeToTenthOfASecond
|| __TEXT.__text _AFTurnIdentifierCreateFromBytes
|| __TEXT.__text _AFTurnIdentifierGenerate
|| __TEXT.__text _AFTurnIdentifierGetBytes
|| __TEXT.__text _AFTurnIdentifierGetString
|| __TEXT.__text _AFUserAssignedDeviceName
|| __TEXT.__text _AFUserNotificationAnnouncementSpeakingStateServiceDelegateGetXPCInterface
|| __TEXT.__text _AFUserNotificationAnnouncementSpeakingStateServiceGetXPCInterface
|| __TEXT.__text _AFUserSupportDirectoryPath
|| __TEXT.__text _AFValidatedNowPlayingInfo
|| __TEXT.__text _AFVoiceFootprintGetName
|| __TEXT.__text _AFVoiceGenderGetName
|| __TEXT.__text _AFWatchOSVersion
|| __TEXT.__text _AFWatchOSVersionIsGreaterThanOrEqual
|| __TEXT.__text _MRPlaybackStateFromAFMediaPlaybackState
|| __TEXT.__text _SAMPPlayStateFromMRPlaybackState
|| __TEXT.__text _SAVoiceFromVoiceAsset
|| __TEXT.__text _SAVoiceFromVoiceResourceAsset
|| __TEXT.__text _SISchemaClientAnyEventReadFrom
|| __TEXT.__text _SISchemaClientTurnBasedEventReadFrom
|| __TEXT.__text _SISchemaClientTurnContextReadFrom
|| __TEXT.__text __AFBackedUpPreferencesBoolForKeyWithDefault
|| __TEXT.__text __AFBackedUpPreferencesBoolValueForKey
|| __TEXT.__text __AFBackedUpPreferencesKeyList
|| __TEXT.__text __AFBackedUpPreferencesSetValueForKey
|| __TEXT.__text __AFBackedUpPreferencesSetValueForKeyWithContext
|| __TEXT.__text __AFBackedUpPreferencesValueForKey
|| __TEXT.__text __AFBackedUpPreferencesValueForKeyWithContext
|| __TEXT.__text __AFDictationLanguageForKeyboardLanguageAndConfiguration
|| __TEXT.__text __AFGetNowPlayingApplicationIdentifier
|| __TEXT.__text __AFGetNowPlayingInfoDictionary
|| __TEXT.__text __AFGetPlaybackState
|| __TEXT.__text __AFMemoryPressureConditionGetName
|| __TEXT.__text __AFNanoPreferencesSetValueForKey
|| __TEXT.__text __AFNanoPreferencesValueForKey
|| __TEXT.__text __AFPreferencesAcousticIDAutoEndpoint
|| __TEXT.__text __AFPreferencesAnnounceCallsBargeInTime
|| __TEXT.__text __AFPreferencesAnnounceCallsVoiceOffMaxRatio
|| __TEXT.__text __AFPreferencesAnnounceCallsVoiceOnMinRatio
|| __TEXT.__text __AFPreferencesAnnounceNotificationsInCarPlayTemporarilyDisabled
|| __TEXT.__text __AFPreferencesAnnounceNotificationsInCarPlayType
|| __TEXT.__text __AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForAppOnPlatform
|| __TEXT.__text __AFPreferencesAnnounceNotificationsTemporarilyDisabledEndDateForPlatform
|| __TEXT.__text __AFPreferencesAnnounceNotificationsVoiceOffMaxRatio
|| __TEXT.__text __AFPreferencesAnnounceNotificationsVoiceOnMinRatio
|| __TEXT.__text __AFPreferencesAuthenticationDisabled
|| __TEXT.__text __AFPreferencesBLECompanionConnectionsEnabled
|| __TEXT.__text __AFPreferencesBoolFromValueWithDefault
|| __TEXT.__text __AFPreferencesBoolValueForKeyWithContext
|| __TEXT.__text __AFPreferencesBuiltIniOSLanguages
|| __TEXT.__text __AFPreferencesClearAnnounceNotificationsInCarPlayTemporarilyDisabled
|| __TEXT.__text __AFPreferencesClearAnnounceNotificationsInCarPlayType
|| __TEXT.__text __AFPreferencesClearOpportuneSpeakingEdgeDetectorSignalOverride
|| __TEXT.__text __AFPreferencesClearShouldCensorSpeechInternal
|| __TEXT.__text __AFPreferencesClearSpokenNotificationTemporarilyDisabledStatus
|| __TEXT.__text __AFPreferencesCloudSyncEnabled
|| __TEXT.__text __AFPreferencesCloudSyncEnabledModificationDate
|| __TEXT.__text __AFPreferencesCloudUserID
|| __TEXT.__text __AFPreferencesCompanionMessagingEnabled
|| __TEXT.__text __AFPreferencesCountryCode
|| __TEXT.__text __AFPreferencesDatabaseSyncingEnabled
|| __TEXT.__text __AFPreferencesDictationLanguageDetectorEnabled
|| __TEXT.__text __AFPreferencesDictationLanguageDetectorEnabledByServer
|| __TEXT.__text __AFPreferencesDictationOnDeviceSamplingDisabled
|| __TEXT.__text __AFPreferencesDisableTuscany
|| __TEXT.__text __AFPreferencesDoubleForKeyWithDefault
|| __TEXT.__text __AFPreferencesEnableBLECompanionConnections
|| __TEXT.__text __AFPreferencesEnableCloudSync
|| __TEXT.__text __AFPreferencesEnableServerDebugFlags
|| __TEXT.__text __AFPreferencesEnableSiriDebugUI
|| __TEXT.__text __AFPreferencesEnableSiriMini
|| __TEXT.__text __AFPreferencesEnableSiriMiniExperimentation
|| __TEXT.__text __AFPreferencesEnableSiriMiniPreferred
|| __TEXT.__text __AFPreferencesEnableSpeakerGradingDebugUI
|| __TEXT.__text __AFPreferencesEnabledDragAndDrop
|| __TEXT.__text __AFPreferencesEnabledNonFullScreen
|| __TEXT.__text __AFPreferencesForceOnDeviceOnlyDictationEnabled
|| __TEXT.__text __AFPreferencesForceRTL
|| __TEXT.__text __AFPreferencesForceSpeexAudioRecording
|| __TEXT.__text __AFPreferencesForceUncompressedAudioRecording
|| __TEXT.__text __AFPreferencesGetAssetFetchTimeout
|| __TEXT.__text __AFPreferencesGetClientCommandDeliveryDelay
|| __TEXT.__text __AFPreferencesGetEnableServerDebugFlags
|| __TEXT.__text __AFPreferencesGetForcedInterstitialStyle
|| __TEXT.__text __AFPreferencesGetInitialInterstitialDelay
|| __TEXT.__text __AFPreferencesGetInitialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking
|| __TEXT.__text __AFPreferencesGetInterstitialDisplayDisabledBeforeSpeechRecognition
|| __TEXT.__text __AFPreferencesGetNonManateeIdentity
|| __TEXT.__text __AFPreferencesGetPhoneOptedOut2021
|| __TEXT.__text __AFPreferencesGetTVOptedOut2021
|| __TEXT.__text __AFPreferencesGetTuscanyStatus
|| __TEXT.__text __AFPreferencesGetWatchOptedOut2021
|| __TEXT.__text __AFPreferencesHardCodedBluetoothProximityNumber
|| __TEXT.__text __AFPreferencesHomePodAdjustedOptIn2021WithContext
|| __TEXT.__text __AFPreferencesHomePodPriorOptInValue2021IsPresentWithContext
|| __TEXT.__text __AFPreferencesInProgressOutputVoice
|| __TEXT.__text __AFPreferencesIncludeProbePacketCaptureForABC
|| __TEXT.__text __AFPreferencesIsSiriServerLoggingEnabled
|| __TEXT.__text __AFPreferencesKeepRecorededAudioFiles
|| __TEXT.__text __AFPreferencesLanguageCode
|| __TEXT.__text __AFPreferencesLanguageCodeWithContext
|| __TEXT.__text __AFPreferencesLastPushedCensorSpeechSetting
|| __TEXT.__text __AFPreferencesLimitedPersistentAudioLogging
|| __TEXT.__text __AFPreferencesLowerWristEducationHeaderDisplayCount
|| __TEXT.__text __AFPreferencesMirroredTCCInfo
|| __TEXT.__text __AFPreferencesMultiSiriLanguageScenarios
|| __TEXT.__text __AFPreferencesMultilingualDictationTimeoutInMilliSeconds
|| __TEXT.__text __AFPreferencesNetworkLoggingEnabled
|| __TEXT.__text __AFPreferencesNetworkStackOverride
|| __TEXT.__text __AFPreferencesNotificationPreviewRestrictedApps
|| __TEXT.__text __AFPreferencesOpportuneSpeakingEdgeDetectorSignalOverride
|| __TEXT.__text __AFPreferencesOpportuneSpeakingFileLoggingIsEnabled
|| __TEXT.__text __AFPreferencesOpportuneSpeakingModelUsed
|| __TEXT.__text __AFPreferencesOpportuneSpeakingModuleEnabled
|| __TEXT.__text __AFPreferencesOpportuneSpeakingPause
|| __TEXT.__text __AFPreferencesOpportuneSpeakingTimeout
|| __TEXT.__text __AFPreferencesOutputVoice
|| __TEXT.__text __AFPreferencesOutputVoiceWithContext
|| __TEXT.__text __AFPreferencesReplacementLanguageForLocalRecognizerLanguageCode
|| __TEXT.__text __AFPreferencesSetAcousticIDAutoEndpoint
|| __TEXT.__text __AFPreferencesSetAnnounceCallsBargeInTime
|| __TEXT.__text __AFPreferencesSetAnnounceCallsVoiceOffMaxRatio
|| __TEXT.__text __AFPreferencesSetAnnounceCallsVoiceOnMinRatio
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsInCarPlayTemporarilyDisabled
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsInCarPlayType
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsTemporarilyDisabledEndDateForAppOnPlatform
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsTemporarilyDisabledEndDateForPlatform
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsVoiceOffMaxRatio
|| __TEXT.__text __AFPreferencesSetAnnounceNotificationsVoiceOnMinRatio
|| __TEXT.__text __AFPreferencesSetAssetFetchTimeout
|| __TEXT.__text __AFPreferencesSetCloudSyncEnabledModificationDate
|| __TEXT.__text __AFPreferencesSetCloudUserID
|| __TEXT.__text __AFPreferencesSetCompanionMessagingEnabled
|| __TEXT.__text __AFPreferencesSetCountryCode
|| __TEXT.__text __AFPreferencesSetDatabaseSyncingEnabled
|| __TEXT.__text __AFPreferencesSetDictationLanguageDetectorEnabled
|| __TEXT.__text __AFPreferencesSetDictationLanguageDetectorEnabledByServer
|| __TEXT.__text __AFPreferencesSetEnableSiriDebugUI
|| __TEXT.__text __AFPreferencesSetEnableSpeakerGradingDebugUI
|| __TEXT.__text __AFPreferencesSetEnabledDragAndDrop
|| __TEXT.__text __AFPreferencesSetEnabledNonFullScreen
|| __TEXT.__text __AFPreferencesSetForceRTL
|| __TEXT.__text __AFPreferencesSetForceSpeexAudioRecording
|| __TEXT.__text __AFPreferencesSetForceUncompressedAudioRecording
|| __TEXT.__text __AFPreferencesSetHardCodedBluetoothProximity
|| __TEXT.__text __AFPreferencesSetHomePodOptIn2021AdjustedWithContext
|| __TEXT.__text __AFPreferencesSetHomePodPriorOptInValue2021WithContext
|| __TEXT.__text __AFPreferencesSetInProgressOutputVoice
|| __TEXT.__text __AFPreferencesSetInitialInterstitialDelay
|| __TEXT.__text __AFPreferencesSetInitialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking
|| __TEXT.__text __AFPreferencesSetKeepRecorededAudioFiles
|| __TEXT.__text __AFPreferencesSetLanguageCode
|| __TEXT.__text __AFPreferencesSetLanguageCodeWithContext
|| __TEXT.__text __AFPreferencesSetLastPushedCensorSpeechSetting
|| __TEXT.__text __AFPreferencesSetLimitedPersistentAudioLogging
|| __TEXT.__text __AFPreferencesSetLowerWristEducationHeaderDisplayCount
|| __TEXT.__text __AFPreferencesSetMirroredTCCInfo
|| __TEXT.__text __AFPreferencesSetMultilingualDictationTimeoutInMilliSeconds
|| __TEXT.__text __AFPreferencesSetNetworkLoggingEnabled
|| __TEXT.__text __AFPreferencesSetNonManateeIdentity
|| __TEXT.__text __AFPreferencesSetNotificationPreviewRestrictedApps
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingEdgeDetectorSignalOverride
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingFileLoggingIsEnabled
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingModelUsed
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingModuleEnabled
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingPause
|| __TEXT.__text __AFPreferencesSetOpportuneSpeakingTimeout
|| __TEXT.__text __AFPreferencesSetOutputVoice
|| __TEXT.__text __AFPreferencesSetOutputVoiceWithContext
|| __TEXT.__text __AFPreferencesSetPhoneOptedOut2021
|| __TEXT.__text __AFPreferencesSetShouldCensorSpeechInternal
|| __TEXT.__text __AFPreferencesSetShouldSyncFirstPartyAppIntentPolicy
|| __TEXT.__text __AFPreferencesSetShowAllDialogVariantsEnabled
|| __TEXT.__text __AFPreferencesSetSiriDataSharingHomeAccessoryMigrated
|| __TEXT.__text __AFPreferencesSetSiriDataSharingHomePodSetupDeviceIsValidWithContext
|| __TEXT.__text __AFPreferencesSetSiriDataSharingOptInAlertPresented
|| __TEXT.__text __AFPreferencesSetSiriDataSharingOptInStatus
|| __TEXT.__text __AFPreferencesSetSiriDataSharingOptInStatusWithContext
|| __TEXT.__text __AFPreferencesSetSiriDesignModeEnabled
|| __TEXT.__text __AFPreferencesSetSiriResponseShouldAlwaysPrintOverride
|| __TEXT.__text __AFPreferencesSetSiriVocabularyEnabled
|| __TEXT.__text __AFPreferencesSetSpokenNotificationIsAlwaysOpportune
|| __TEXT.__text __AFPreferencesSetSpokenNotificationPlayAlertBeforeTriggerlessListening
|| __TEXT.__text __AFPreferencesSetSpokenNotificationQuickIgnoreTime
|| __TEXT.__text __AFPreferencesSetSpokenNotificationShouldAnnounceAllNotifications
|| __TEXT.__text __AFPreferencesSetSpokenNotificationShouldSkipTriggerlessReplies
|| __TEXT.__text __AFPreferencesSetSpokenNotificationShowUIDuringTriggerlessListening
|| __TEXT.__text __AFPreferencesSetSpokenNotificationSkipTriggerlessReplyConfirmation
|| __TEXT.__text __AFPreferencesSetSpokenNotificationsProxCardSeen
|| __TEXT.__text __AFPreferencesSetTFO
|| __TEXT.__text __AFPreferencesSetTVOptedOut2021
|| __TEXT.__text __AFPreferencesSetValueForKey
|| __TEXT.__text __AFPreferencesSetValueForKeyWithContext
|| __TEXT.__text __AFPreferencesSetVibrateWithAlert
|| __TEXT.__text __AFPreferencesSetVibrationCount
|| __TEXT.__text __AFPreferencesSetVibrationDuration
|| __TEXT.__text __AFPreferencesSetVibrationGap
|| __TEXT.__text __AFPreferencesSetVibrationIntensity
|| __TEXT.__text __AFPreferencesSetWatchOptedOut2021
|| __TEXT.__text __AFPreferencesSetiRATManagerRecommendationEnabled
|| __TEXT.__text __AFPreferencesShouldCensorSpeechInternal
|| __TEXT.__text __AFPreferencesShouldSuppressSiriDataSharingOptInAlert
|| __TEXT.__text __AFPreferencesShouldSyncFirstPartyAppIntentPolicy
|| __TEXT.__text __AFPreferencesShouldUseTFO
|| __TEXT.__text __AFPreferencesShowAllDialogVariantsEnabled
|| __TEXT.__text __AFPreferencesSiriDataSharingHomeAccessoryMigrated
|| __TEXT.__text __AFPreferencesSiriDataSharingHomePodSetupDeviceIsValidWithContext
|| __TEXT.__text __AFPreferencesSiriDataSharingLegacyOptInStatusWithContext
|| __TEXT.__text __AFPreferencesSiriDataSharingOptInStatus
|| __TEXT.__text __AFPreferencesSiriDataSharingOptInStatusKey
|| __TEXT.__text __AFPreferencesSiriDataSharingOptInStatusWithContext
|| __TEXT.__text __AFPreferencesSiriDesignModeIsEnabled
|| __TEXT.__text __AFPreferencesSiriMiniEnabled
|| __TEXT.__text __AFPreferencesSiriMiniExperimentationEnabled
|| __TEXT.__text __AFPreferencesSiriMiniPreferredEnabled
|| __TEXT.__text __AFPreferencesSiriMiniResultHoldTime
|| __TEXT.__text __AFPreferencesSiriMiniSupported
|| __TEXT.__text __AFPreferencesSiriPersonalizedASRDisabled
|| __TEXT.__text __AFPreferencesSiriVocabularyEnabled
|| __TEXT.__text __AFPreferencesSiriXAssetsDidChange
|| __TEXT.__text __AFPreferencesSpokenNotificationIsAlwaysOpportune
|| __TEXT.__text __AFPreferencesSpokenNotificationPlayAlertBeforeTriggerlessListening
|| __TEXT.__text __AFPreferencesSpokenNotificationQuickIgnoreTime
|| __TEXT.__text __AFPreferencesSpokenNotificationShouldAnnounceAllNotifications
|| __TEXT.__text __AFPreferencesSpokenNotificationShouldSkipTriggerlessReplies
|| __TEXT.__text __AFPreferencesSpokenNotificationShowUIDuringTriggerlessListening
|| __TEXT.__text __AFPreferencesSpokenNotificationSkipTriggerlessReplyConfirmation
|| __TEXT.__text __AFPreferencesSpokenNotificationsProxCardSeen
|| __TEXT.__text __AFPreferencesSyncFromWatchEnabled
|| __TEXT.__text __AFPreferencesValueForKey
|| __TEXT.__text __AFPreferencesValueForKeyWithContext
|| __TEXT.__text __AFPreferencesVibrateWithAlert
|| __TEXT.__text __AFPreferencesVibrationCount
|| __TEXT.__text __AFPreferencesVibrationDuration
|| __TEXT.__text __AFPreferencesVibrationGap
|| __TEXT.__text __AFPreferencesVibrationIntensity
|| __TEXT.__text __AFPreferencesiRATManagerRecommendationEnabled
|| __TEXT.__text __AFRedactedCopyPerson
|| __TEXT.__text __AFRedactedFamilyNamesCopyPerson
|| __TEXT.__text __AFServiceLog
|| __TEXT.__text __AFSupportPreferencesBoolForKeyWithDefault
|| __TEXT.__text __AFSupportPreferencesBoolValueForKey
|| __TEXT.__text __AFSupportPreferencesSetValueForKey
|| __TEXT.__text __AFSupportPreferencesValueForKey
|| __TEXT.__text __AFXPCListenerCreateForMachServiceName
|| __TEXT.__text __ExternalRequestConnection
|| __TEXT.__text __ExternalRequestConnectionWithContext
|| __TEXT.__text _carplayTriggerSeenCallback
|| __TEXT.__text _emergencyCallback
|| __TEXT.__text _extractMyriadDataFromAudioContext
|| __TEXT.__text _hammingDistance
|| __TEXT.__text _inEarTriggerSeenCallback
|| __TEXT.__text _myriadDecisionRequestCallback
|| __TEXT.__text _notificationCallback
|| __TEXT.__text _outputTriggerSeenCallback
|| __TEXT.__text _safelyClearAudioData
|| __TEXT.__text _safelyGetAudioData
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _CPSystemRootDirectory
__ AppSupport: _OBJC_CLASS_$_ALCity
__ AppSupport: _OBJC_CLASS_$_CPDistributedMessagingCenter
__ AudioToolbox: _AudioSessionGetProperty
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateCopy
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBundleCopyLocalizationsForPreferences
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetDistributedCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesAppValueIsForced
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFUserNotificationDisplayNotice
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleIdentifier
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleTemperatureUnit
__ CoreFoundation: _NSLocaleTemperatureUnitCelsius
__ CoreFoundation: _NSLocaleTemperatureUnitFahrenheit
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFPreferencesWriteManagedDomainForUser
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ Foundation: _NSAllMapTableValues
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFileCreationDate
__ Foundation: _NSHomeDirectory
__ Foundation: _NSHomeDirectoryForUser
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapRemove
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ Foundation: _OBJC_METACLASS_$_NSError
__ IOKit: _IOPMAssertionCreateWithName
__ IOKit: _IOPMAssertionRelease
__ ManagedConfiguration: _MCFeatureAssistantAllowed
__ ManagedConfiguration: _MCFeatureAssistantWhileLockedAllowed
__ ManagedConfiguration: _MCFeatureDiagnosticsSubmissionAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaRemote: _MRContentItemCopyNowPlayingInfo
__ MediaRemote: _MRContentItemGetAlbumArtistName
__ MediaRemote: _MRContentItemGetAlbumName
__ MediaRemote: _MRContentItemGetCalculatedPlaybackPosition
__ MediaRemote: _MRContentItemGetDuration
__ MediaRemote: _MRContentItemGetElapsedTime
__ MediaRemote: _MRContentItemGetITunesStoreIdentifier
__ MediaRemote: _MRContentItemGetITunesStoreSubscriptionIdentifier
__ MediaRemote: _MRContentItemGetPlayCount
__ MediaRemote: _MRContentItemGetReleaseDate
__ MediaRemote: _MRContentItemGetTitle
__ MediaRemote: _MRContentItemGetTrackArtistName
__ MediaRemote: _MRLanguageOptionCopyCharacteristics
__ MediaRemote: _MRLanguageOptionCopyDisplayName
__ MediaRemote: _MRLanguageOptionCopyIdentifier
__ MediaRemote: _MRLanguageOptionCopyLanguageTag
__ MediaRemote: _MRLanguageOptionCreateFromExternalRepresentation
__ MediaRemote: _MRLanguageOptionGetType
__ MediaRemote: _MRLanguageOptionGroupCopyLanguageOptions
__ MediaRemote: _MRLanguageOptionGroupCreateFromExternalRepresentation
__ MediaRemote: _MRLanguageOptionGroupsCreateFromExternalRepresentation
__ MediaRemote: _MRLanguageOptionsCreateFromExternalRepresentation
__ MediaRemote: _MRMediaRemoteAdjustMediaPlaybackVolume
__ MediaRemote: _MRMediaRemoteCommandInfoGetCommand
__ MediaRemote: _MRMediaRemoteCommandInfoGetEnabled
__ MediaRemote: _MRMediaRemoteGetDeviceInfo
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteGetMediaPlaybackVolume
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackState
__ MediaRemote: _MRMediaRemoteGetNowPlayingClient
__ MediaRemote: _MRMediaRemoteGetPickedRouteHasVolumeControl
__ MediaRemote: _MRMediaRemoteGetSupportedCommands
__ MediaRemote: _MRMediaRemoteRegisterWantsSystemAppDidSkipTrackNotifications
__ MediaRemote: _MRMediaRemoteRequestNowPlayingPlaybackQueueSync
__ MediaRemote: _MRMediaRemoteSendCommandWithReply
__ MediaRemote: _MRMediaRemoteSetMediaPlaybackVolume
__ MediaRemote: _MRNowPlayingClientGetBundleIdentifier
__ MediaRemote: _MRPairedDeviceCopyGroupUID
__ MediaRemote: _MRPairedDeviceCopyLocalReceiverPairingIdentity
__ MediaRemote: _MRPlaybackQueueCopyContentItems
__ MediaRemote: _MRPlaybackQueueGetRange
__ MediaRemote: _MRPlaybackQueueRequestCreate
__ MediaRemote: _MRPlaybackQueueRequestSetIncludeLanguageOptions
__ MediaRemote: _MRPlaybackQueueRequestSetIncludeMetadata
__ MediaRemote: _OBJC_CLASS_$_MRDeviceInfoRequest
__ MediaRemote: _OBJC_CLASS_$_MROrigin
__ MediaRemote: _kMRActiveDeviceInfoDidChangeNotification
__ MediaRemote: _kMRLanguageOptionCharacteristicContainsOnlyForcedSubtitles
__ MediaRemote: _kMRLanguageOptionCharacteristicDescribesMusicAndSound
__ MediaRemote: _kMRLanguageOptionCharacteristicDescribesVideo
__ MediaRemote: _kMRLanguageOptionCharacteristicDubbedTranslation
__ MediaRemote: _kMRLanguageOptionCharacteristicEasyToRead
__ MediaRemote: _kMRLanguageOptionCharacteristicIsAuxiliaryContent
__ MediaRemote: _kMRLanguageOptionCharacteristicIsMainProgramContent
__ MediaRemote: _kMRLanguageOptionCharacteristicLanguageTranslation
__ MediaRemote: _kMRLanguageOptionCharacteristicTranscribesSpokenDialog
__ MediaRemote: _kMRLanguageOptionCharacteristicVoiceOverTranslation
__ MediaRemote: _kMRMediaRemoteFrameworkErrorDomain
__ MediaRemote: _kMRMediaRemoteMediaTypeAudioBook
__ MediaRemote: _kMRMediaRemoteMediaTypeMusic
__ MediaRemote: _kMRMediaRemoteMediaTypePodcast
__ MediaRemote: _kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoAlbum
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoArtist
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoBrandIdentifier
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoCollectionInfo
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoDuration
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoElapsedTime
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoIsAdvertisement
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoIsAlwaysLive
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoIsSteerable
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoMediaType
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoPlaybackRate
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoQueueIndex
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoRadioStationHash
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoShuffleMode
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTimestamp
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTitle
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTotalQueueCount
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTypeAudio
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoTypeVideo
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoUniqueIdentifier
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
__ MediaRemote: _kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ SAObjects: _AceObjectClassPListKey
__ SAObjects: _AceObjectGroupPListKey
__ SAObjects: _AceObjectRefIdPlistKey
__ SAObjects: _OBJC_CLASS_$_AceObject
__ SAObjects: _OBJC_CLASS_$_SAARAlternativeResultsView
__ SAObjects: _OBJC_CLASS_$_SAAbstractItemList
__ SAObjects: _OBJC_CLASS_$_SAAceDomainSignal
__ SAObjects: _OBJC_CLASS_$_SAAceView
__ SAObjects: _OBJC_CLASS_$_SAAppInfo
__ SAObjects: _OBJC_CLASS_$_SAAttachment
__ SAObjects: _OBJC_CLASS_$_SABackgroundUpdateRequest
__ SAObjects: _OBJC_CLASS_$_SABaseAceObject
__ SAObjects: _OBJC_CLASS_$_SACalendar
__ SAObjects: _OBJC_CLASS_$_SACarPlaySupportedOEMAppIdList
__ SAObjects: _OBJC_CLASS_$_SACommandFailed
__ SAObjects: _OBJC_CLASS_$_SACommandIgnored
__ SAObjects: _OBJC_CLASS_$_SACommandSucceeded
__ SAObjects: _OBJC_CLASS_$_SAConnectionPolicyRoute
__ SAObjects: _OBJC_CLASS_$_SADialog
__ SAObjects: _OBJC_CLASS_$_SADomainObject
__ SAObjects: _OBJC_CLASS_$_SAEmail
__ SAObjects: _OBJC_CLASS_$_SAGuidanceCheckForGuideUpdateContext
__ SAObjects: _OBJC_CLASS_$_SAIntentGroupRunSiriKitExecutor
__ SAObjects: _OBJC_CLASS_$_SAMPAd
__ SAObjects: _OBJC_CLASS_$_SAMPAddMediaItemsToUpNextQueue
__ SAObjects: _OBJC_CLASS_$_SAMPCreateRadioStation
__ SAObjects: _OBJC_CLASS_$_SAMPGeniusSummon
__ SAObjects: _OBJC_CLASS_$_SAMPGetStateResponseRemote
__ SAObjects: _OBJC_CLASS_$_SAMPLoadPredefinedQueue
__ SAObjects: _OBJC_CLASS_$_SAMPLoadQP
__ SAObjects: _OBJC_CLASS_$_SAMPMediaItem
__ SAObjects: _OBJC_CLASS_$_SAMPNowPlayingQueuePosition
__ SAObjects: _OBJC_CLASS_$_SAMPPlayPodcastCollection
__ SAObjects: _OBJC_CLASS_$_SAMPPlayPodcastEpisode
__ SAObjects: _OBJC_CLASS_$_SAMPPlayPodcastStation
__ SAObjects: _OBJC_CLASS_$_SAMPPlayPodcasts
__ SAObjects: _OBJC_CLASS_$_SAMPPlaybackInfo
__ SAObjects: _OBJC_CLASS_$_SAMPQueueState
__ SAObjects: _OBJC_CLASS_$_SAMPRateMediaEntity
__ SAObjects: _OBJC_CLASS_$_SAMPReleaseInfo
__ SAObjects: _OBJC_CLASS_$_SAMPSetQueue
__ SAObjects: _OBJC_CLASS_$_SAMPSteerMusic
__ SAObjects: _OBJC_CLASS_$_SAMPSubscribeToPodcastCollection
__ SAObjects: _OBJC_CLASS_$_SAMetrics
__ SAObjects: _OBJC_CLASS_$_SANPAddOutputDevicesToGroup
__ SAObjects: _OBJC_CLASS_$_SANPDecreasePlaybackSpeed
__ SAObjects: _OBJC_CLASS_$_SANPGetNowPlayingQueueDetails
__ SAObjects: _OBJC_CLASS_$_SANPGetNowPlayingQueueDetailsRemote
__ SAObjects: _OBJC_CLASS_$_SANPGetVolumeLevel
__ SAObjects: _OBJC_CLASS_$_SANPGetVolumeLevelResponse
__ SAObjects: _OBJC_CLASS_$_SANPIncreasePlaybackSpeed
__ SAObjects: _OBJC_CLASS_$_SANPMoveOutputGroupToDevices
__ SAObjects: _OBJC_CLASS_$_SANPPausePlayback
__ SAObjects: _OBJC_CLASS_$_SANPRemoveOutputDevicesFromGroup
__ SAObjects: _OBJC_CLASS_$_SANPSeekToPlaybackPosition
__ SAObjects: _OBJC_CLASS_$_SANPSetPlaybackSpeed
__ SAObjects: _OBJC_CLASS_$_SANPSetRepeatMode
__ SAObjects: _OBJC_CLASS_$_SANPSetShuffleMode
__ SAObjects: _OBJC_CLASS_$_SANPSetVolumeLevel
__ SAObjects: _OBJC_CLASS_$_SANPSkipTimeInterval
__ SAObjects: _OBJC_CLASS_$_SANPSkipToNextItem
__ SAObjects: _OBJC_CLASS_$_SANPSkipToPreviousItem
__ SAObjects: _OBJC_CLASS_$_SANPStartPlayback
__ SAObjects: _OBJC_CLASS_$_SANPStopPlayback
__ SAObjects: _OBJC_CLASS_$_SANPVideoAudioAndSubtitleLanguageOptions
__ SAObjects: _OBJC_CLASS_$_SANPVideoLanguageOption
__ SAObjects: _OBJC_CLASS_$_SAPerson
__ SAObjects: _OBJC_CLASS_$_SAPersonAttribute
__ SAObjects: _OBJC_CLASS_$_SAPhone
__ SAObjects: _OBJC_CLASS_$_SAPunchoutOutcome
__ SAObjects: _OBJC_CLASS_$_SARDNativeFlowContextUpdate
__ SAObjects: _OBJC_CLASS_$_SASAcousticFeature
__ SAObjects: _OBJC_CLASS_$_SASAudioAnalytics
__ SAObjects: _OBJC_CLASS_$_SASInterpretation
__ SAObjects: _OBJC_CLASS_$_SASPhrase
__ SAObjects: _OBJC_CLASS_$_SASRecognition
__ SAObjects: _OBJC_CLASS_$_SASSpeechPartialResult
__ SAObjects: _OBJC_CLASS_$_SASSpeechRecognized
__ SAObjects: _OBJC_CLASS_$_SASToken
__ SAObjects: _OBJC_CLASS_$_SASUtterance
__ SAObjects: _OBJC_CLASS_$_SASVoiceSearchResult
__ SAObjects: _OBJC_CLASS_$_SASendCommands
__ SAObjects: _OBJC_CLASS_$_SASetApplicationContext
__ SAObjects: _OBJC_CLASS_$_SASetRequestOrigin
__ SAObjects: _OBJC_CLASS_$_SASmsSms
__ SAObjects: _OBJC_CLASS_$_SAStartLocalRequest
__ SAObjects: _OBJC_CLASS_$_SAStartRequest
__ SAObjects: _OBJC_CLASS_$_SAStructuredDictationFailed
__ SAObjects: _OBJC_CLASS_$_SASyncAnchor
__ SAObjects: _OBJC_CLASS_$_SASyncAppIdentifyingInfo
__ SAObjects: _OBJC_CLASS_$_SASyncAppMetaData
__ SAObjects: _OBJC_CLASS_$_SAUIAddDialogs
__ SAObjects: _OBJC_CLASS_$_SAUIAddViews
__ SAObjects: _OBJC_CLASS_$_SAUIAssistantUtteranceView
__ SAObjects: _OBJC_CLASS_$_SAUIButton
__ SAObjects: _OBJC_CLASS_$_SAUIDialogPunchout
__ SAObjects: _OBJC_CLASS_$_SAUIDisambiguationGroup
__ SAObjects: _OBJC_CLASS_$_SAUIDisambiguationList
__ SAObjects: _OBJC_CLASS_$_SAUISayIt
__ SAObjects: _OBJC_CLASS_$_SAVoice
__ SAObjects: _SAABGroupIdentifier
__ SAObjects: _SAABPersonClassIdentifier
__ SAObjects: _SAAceTemperatureUnitCelsiusValue
__ SAObjects: _SAAceTemperatureUnitFahrenheitValue
__ SAObjects: _SAMPAudioPlaybackDeviceNotFoundErrorCode
__ SAObjects: _SAMPCannotSetQueueManuallyCuratedUpNextErrorCode
__ SAObjects: _SAMPEntitySourceLocalValue
__ SAObjects: _SAMPEntitySourceRadioValue
__ SAObjects: _SAMPExceededSkipLimitErrorCode
__ SAObjects: _SAMPSkipAdvertisementErrorCode
__ SAObjects: _SANPAlreadyAtMaximumAllowedVolumeLimitErrorCode
__ SAObjects: _SANPAlreadyAtMaximumVolumeLevelErrorCode
__ SAObjects: _SANPAlreadyAtMinimumVolumeLevelErrorCode
__ SAObjects: _SANPCommandFailedErrorCode
__ SAObjects: _SANPCommandUnsupportedByAppErrorCode
__ SAObjects: _SANPMediaTypeAudioValue
__ SAObjects: _SANPMediaTypeVideoValue
__ SAObjects: _SANPNoSuchContentErrorCode
__ SAObjects: _SANPUnsupportedVolumeLevelRequestedErrorCode
__ SAObjects: _SANPVideoLanguageOptionCharacteristicContainsOnlyForcedSubtitlesValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicDescribesMusicAndSoundValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicDescribesVideoValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicDubbedTranslationValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicEasyToReadValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicIsAuxiliaryContentValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicIsMainProgramContentValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicLanguageTranslationValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicTranscribesSpokenDialogValue
__ SAObjects: _SANPVideoLanguageOptionCharacteristicVoiceOverTranslationValue
__ SAObjects: _SANPVideoNothingPlayingErrorCode
__ SAObjects: _SANPVolumeControlUnavailableForSelectedAudioRouteErrorCode
__ SAObjects: _SAPersonFirstNamePListKey
__ SAObjects: _SAPersonLastNamePListKey
__ SAObjects: _SAPersonMiddleNamePListKey
__ SAObjects: _SAPersonNickNamePListKey
__ SAObjects: _SASetRequestOriginStatusDeniedValue
__ SAObjects: _SASetRequestOriginStatusDisabledValue
__ SAObjects: _SASetRequestOriginStatusValidValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionACOUSTIC_ID_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionAPP_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionCALENDAR_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionGUIDE_UPDATE_AND_SHOWValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionLOCAL_SEARCH_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionLOCAL_SEARCH_INITIATE_IN_NAVValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionMUSIC_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionMUSIC_SMART_PLAY_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionNEWS_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionNOTIFICATION_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionPHONE_CALLValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionPHONE_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionPHONE_VOICEMAILValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionSMS_COMPOSEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionSMS_INITIATEValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionSMS_READValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionSMS_REPLYValue
__ SAObjects: _SAStartDirectActionRequestAceDirectActionWEATHER_INITIATEValue
__ SAObjects: _SAStartLocalRequestClassIdentifier
__ SAObjects: _SAStartRequestClassIdentifier
__ SAObjects: _SAUIAddViewsDialogPhasePListKey
__ SAObjects: _SAUIDialogPhaseAcknowledgementValue
__ SAObjects: _SAUIDialogPhaseCanceledValue
__ SAObjects: _SAUIDialogPhaseClarificationValue
__ SAObjects: _SAUIDialogPhaseCompletionValue
__ SAObjects: _SAUIDialogPhaseConfirmationValue
__ SAObjects: _SAUIDialogPhaseConfirmedValue
__ SAObjects: _SAUIDialogPhaseErrorValue
__ SAObjects: _SAUIDialogPhaseReflectionValue
__ SAObjects: _SAUIDialogPhaseStatusValue
__ SAObjects: _SAUIDialogPhaseSummaryValue
__ SAObjects: _SAUIDisplayTargetPrimaryDisplayValue
__ SAObjects: _SAUserInterfaceIdiomHORSEMANValue
__ SAObjects: _SAUserInterfaceIdiomPADValue
__ SAObjects: _SAUserInterfaceIdiomPHONEValue
__ SAObjects: _SAVoiceGenderFemaleValue
__ SAObjects: _SAVoiceGenderMaleValue
__ SAObjects: _SAVoiceGenderNeutralValue
__ SAObjects: _SAVoiceGenderUnknownValue
__ SAObjects: _SAVoiceQualityCompactValue
__ SAObjects: _SAVoiceQualityPremiumHighValue
__ SAObjects: _SAVoiceQualityPremiumValue
__ SAObjects: _SAVoiceQualityUnknownValue
__ SAObjects: _SAVoiceVoiceTypeGryphonValue
__ SAObjects: _SAVoiceVoiceTypeNeuralValue
__ SAObjects: _SAVoiceVoiceTypeUndefinedValue
__ SAObjects: _SAVoiceVoiceTypeVocalizerValue
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate
__ Security: _kSecAttrAccount
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ SiriAnalytics: _OBJC_CLASS_$_AssistantSiriAnalytics
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAAdvertisementData
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAClientEvent
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAClientEventMetadata
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADebugElectionDecisionMade
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADeviceAdvertisingEndContext
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADeviceAdvertisingStartContext
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADeviceStateActivityEnded
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADeviceStateActivityStarted
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDADeviceStateContext
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionAdvertisingEndEnded
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionAdvertisingEndStarted
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionAdvertisingStartEnded
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionAdvertisingStartStarted
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionDecisionMade
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAElectionTimerEnded
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAParticipant
__ SiriInstrumentation: _OBJC_CLASS_$_CDASchemaCDAScoreBoosters
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaAnyEvent
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaClientEvent
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaClientEventMetadata
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaConversationTrace
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaDeviceDynamicContext
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaDeviceFixedContext
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaGradingOptInStateChange
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaPNRFatalError
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaPNRFatalErrorInfo
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaPNRSpeechRecognitionSourceContext
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaRequestLink
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaRequestLinkInfo
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaTurnMTERequest
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUEILaunchContext
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUEILaunchEnded
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUEILaunchStarted
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUEIRequestCategorization
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUEIUUFRReady
__ SiriInstrumentation: _OBJC_CLASS_$_SISchemaUUID
__ SiriInstrumentation: _SIReflectionHydrateProtoFromEventTypeAndData
__ SiriInstrumentation: _SIReflectionInferClassFromEventType
__ SiriInstrumentation: _SIReflectionInferEventTypeFromClass
__ SoftLinking: __sl_dlopen
__ UserNotifications: _OBJC_CLASS_$_UNNotification
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ VoiceServices: _OBJC_CLASS_$_VSSpeechSynthesizer
__ VoiceServices: _OBJC_CLASS_$_VSVoiceAsset
__ VoiceServices: _VSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences
__ VoiceServices: _VSPreferencesCopySpokenLanguageIdentifier
__ VoiceServices: _VSPreferencesSetSpokenLanguageIdentifier
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: _CCCrypt
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _CC_SHA512_Final
__ libSystem.B.dylib: _CC_SHA512_Init
__ libSystem.B.dylib: _CC_SHA512_Update
__ libSystem.B.dylib: __Block_has_signature
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_data
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_endpoint
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_shmem
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _nwi_ifstate_get_flags
__ libSystem.B.dylib: _nwi_state_copy
__ libSystem.B.dylib: _nwi_state_get_first_ifstate
__ libSystem.B.dylib: _nwi_state_get_notify_key
__ libSystem.B.dylib: _nwi_state_get_reachability_flags
__ libSystem.B.dylib: _nwi_state_release
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _remove
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _sysctlnametomib
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _uuid_clear
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _uuid_unparse_upper
__ libSystem.B.dylib: _xpc_bool_create
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_barrier
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_data_create
__ libSystem.B.dylib: _xpc_data_get_bytes_ptr
__ libSystem.B.dylib: _xpc_data_get_length
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_data
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_instance
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_create
__ libSystem.B.dylib: _xpc_shmem_create
__ libSystem.B.dylib: _xpc_shmem_map
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_length
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: _xpc_uint64_create
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AFCoreAnalyticsDeviceContextPayload : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *nearbyProductType
 @property  NSString *proximity
 @property  NSNumber *alarmFiring
 @property  NSNumber *timerFiring
 @property  NSString *playbackState
 @property  NSNumber *playbackRecency
 @property  NSString *homeAnnouncementState
 @property  NSNumber *homeAnnouncementRecency
 @property  NSString *nearbyDevicesRequestIdentifier
 @property  NSString *targetedResult
 @property  NSString *contextIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFCoreAnalyticsDeviceContextPayload supportsSecureCoding]
  +[AFCoreAnalyticsDeviceContextPayload newWithBuilder:]

  // instance methods
  -[AFCoreAnalyticsDeviceContextPayload buildDictionaryRepresentation]
  -[AFCoreAnalyticsDeviceContextPayload playbackState]
  -[AFCoreAnalyticsDeviceContextPayload _descriptionWithIndent:]
  -[AFCoreAnalyticsDeviceContextPayload initWithCoder:]
  -[AFCoreAnalyticsDeviceContextPayload initWithDictionaryRepresentation:]
  -[AFCoreAnalyticsDeviceContextPayload .cxx_destruct]
  -[AFCoreAnalyticsDeviceContextPayload mutatedCopyWithMutator:]
  -[AFCoreAnalyticsDeviceContextPayload contextIdentifier]
  -[AFCoreAnalyticsDeviceContextPayload isEqual:]
  -[AFCoreAnalyticsDeviceContextPayload proximity]
  -[AFCoreAnalyticsDeviceContextPayload copyWithZone:]
  -[AFCoreAnalyticsDeviceContextPayload nearbyProductType]
  -[AFCoreAnalyticsDeviceContextPayload alarmFiring]
  -[AFCoreAnalyticsDeviceContextPayload timerFiring]
  -[AFCoreAnalyticsDeviceContextPayload playbackRecency]
  -[AFCoreAnalyticsDeviceContextPayload homeAnnouncementState]
  -[AFCoreAnalyticsDeviceContextPayload homeAnnouncementRecency]
  -[AFCoreAnalyticsDeviceContextPayload nearbyDevicesRequestIdentifier]
  -[AFCoreAnalyticsDeviceContextPayload targetedResult]
  -[AFCoreAnalyticsDeviceContextPayload initWithNearbyProductType:proximity:alarmFiring:timerFiring:playbackState:playbackRecency:homeAnnouncementState:homeAnnouncementRecency:nearbyDevicesRequestIdentifier:targetedResult:contextIdentifier:]
  -[AFCoreAnalyticsDeviceContextPayload encodeWithCoder:]


_AFCoreAnalyticsDeviceContextPayloadMutation : NSObject <AFCoreAnalyticsDeviceContextPayloadMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setPlaybackState:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation .cxx_destruct]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation init]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation generate]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setProximity:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setAlarmFiring:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setNearbyProductType:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setTimerFiring:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setPlaybackRecency:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setTargetedResult:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setHomeAnnouncementState:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setHomeAnnouncementRecency:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setNearbyDevicesRequestIdentifier:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation setContextIdentifier:]
  -[_AFCoreAnalyticsDeviceContextPayloadMutation initWithBaseModel:]


AFConnectionAvailabilityObserver : NSObject <AFNetworkAvailabilityObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFConnectionAvailabilityObserver networkAvailability:isAvailable:]


AFConnection : NSObject <NSXPCListenerDelegate, AFAudioPowerUpdaterDelegate, AFAccessibilityListening, AFDeviceRingerSwitchListening, AFInterstitialProviderDelegate>
 @property  <AFAssistantUIService> *delegate
 @property  <AFSpeechDelegate> *speechDelegate
 @property  BOOL isRecording
 @property  BOOL hasActiveRequest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFConnection initialize]
  +[AFConnection defrost]
  +[AFConnection siriIsSupportedForLanguageCode:productName:productVersion:error:]
  +[AFConnection beginMonitoringAvailability]
  +[AFConnection isAvailable]
  +[AFConnection assistantIsSupportedForLanguageCode:error:]
  +[AFConnection siriIsSupportedForLanguageCode:deviceProductVersion:error:]
  +[AFConnection assistantIsSupported]
  +[AFConnection stopMonitoringAvailability]
  +[AFConnection outputVoice]
  +[AFConnection userDataSyncNeeded]
  +[AFConnection isNetworkAvailable]
  +[AFConnection currentLanguageCode]

  // instance methods
  -[AFConnection _clearConnection]
  -[AFConnection averagePower]
  -[AFConnection isRecording]
  -[AFConnection endSession]
  -[AFConnection _connection]
  -[AFConnection setApplicationContext:]
  -[AFConnection updateSpeechOptions:]
  -[AFConnection _checkAndSetIsCapturingSpeech:]
  -[AFConnection _updateState]
  -[AFConnection setAccessibilityState:]
  -[AFConnection didDismissUI]
  -[AFConnection _setShouldSpeak:]
  -[AFConnection setDeviceRingerSwitchState:]
  -[AFConnection _completeRequestWithUUID:forReason:error:]
  -[AFConnection _updateClientConfiguration]
  -[AFConnection _clientService]
  -[AFConnection _handleInterstitialPhase:fromProvider:displayText:speakableText:expectedDelay:context:completion:]
  -[AFConnection _invokeRequestTimeoutForReason:]
  -[AFConnection _extendRequestTimeoutForReason:]
  -[AFConnection _clientConfiguration]
  -[AFConnection _willCancelRequest]
  -[AFConnection stopSpeechWithOptions:]
  -[AFConnection _startRequestMetricSettings]
  -[AFConnection _shouldEmitUEIRequestLinkForRequestInfo:]
  -[AFConnection _updateStateIfNotInSync]
  -[AFConnection _tellSpeechDelegateRecordingDidCancel]
  -[AFConnection stopSpeech]
  -[AFConnection reportIssueForError:type:subtype:context:]
  -[AFConnection _willEndSession]
  -[AFConnection preheatWithStyle:forOptions:]
  -[AFConnection .cxx_destruct]
  -[AFConnection _clientServiceWithErrorHandler:]
  -[AFConnection boostedPreheatWithStyle:completion:]
  -[AFConnection forceAudioSessionActiveWithOptions:completion:]
  -[AFConnection forceAudioSessionActiveWithOptions:reason:completion:]
  -[AFConnection forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:]
  -[AFConnection forceAudioSessionActiveWithContext:completion:]
  -[AFConnection resumeInterruptedAudioPlaybackIfNeeded]
  -[AFConnection forceAudioSessionInactiveWithOptions:completion:]
  -[AFConnection setIsDeviceInStarkMode:]
  -[AFConnection _setRecordRoute:]
  -[AFConnection _startRequestWithInfo:]
  -[AFConnection _startRequestWithAceCommand:turnIdentifier:suppressAlert:]
  -[AFConnection startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:]
  -[AFConnection _setAudioSessionID:]
  -[AFConnection _requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:analyticsEventProvider:]
  -[AFConnection _metricContextValueForUseDeviceSpeakerForTTS:]
  -[AFConnection startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:]
  -[AFConnection cancelRequestForReason:]
  -[AFConnection reportIssueForError:type:context:]
  -[AFConnection rollbackClearContext]
  -[AFConnection rollbackRequest]
  -[AFConnection sendGenericAceCommand:turnIdentifier:conflictHandler:]
  -[AFConnection _tellSpeechDelegateRecordingDidEnd]
  -[AFConnection getDeferredObjectsWithIdentifiers:completion:]
  -[AFConnection getRemoteClockTimerSnapshotWithCompletion:]
  -[AFConnection willSetApplicationContextWithRefId:]
  -[AFConnection fetchAppicationContextForApplicationInfo:supplementalContext:refID:]
  -[AFConnection setOverriddenApplicationContext:withContext:]
  -[AFConnection prepareForPhoneCall]
  -[AFConnection telephonyRequestCompleted]
  -[AFConnection _markIsTwoShot]
  -[AFConnection willPresentUsefulUserResultWithType:forCommand:]
  -[AFConnection _willPresentUsefulUserResultWithType:]
  -[AFConnection adviseSessionArbiterToContinueWithPreviousWinner:]
  -[AFConnection _fetchShouldSpeak:]
  -[AFConnection _markIsDucking]
  -[AFConnection audioPowerUpdaterDidUpdate:averagePower:peakPower:]
  -[AFConnection accessibilityObserver:stateDidChangeFrom:to:]
  -[AFConnection deviceRingerObserver:didChangeState:]
  -[AFConnection interstitialProvider:handlePhase:displayText:speakableText:expectedDelay:context:completion:]
  -[AFConnection _startUIRequestWithText:completion:]
  -[AFConnection stopAudioPlaybackRequest:immediately:]
  -[AFConnection _startUIRequestWithInfo:completion:]
  -[AFConnection _handleCommand:reply:]
  -[AFConnection _aceConnectionWillRetryOnError:]
  -[AFConnection _markSpeechRecognized]
  -[AFConnection _updateSpeechEndHostTime:]
  -[AFConnection _tellDelegateWillStartAcousticIDRequest]
  -[AFConnection _tellDelegateDidDetectMusic]
  -[AFConnection _tellDelegateDidFinishAcousticIDRequestWithSuccess:]
  -[AFConnection _tellDelegateSetUserActivityInfo:webpageURL:]
  -[AFConnection _tellDelegateInvalidateCurrentUserActivity]
  -[AFConnection _tellDelegateCacheImage:]
  -[AFConnection _tellDelegateAudioPlaybackRequestWillStart:]
  -[AFConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
  -[AFConnection _tellDelegateExtensionRequestWillStartForApplication:]
  -[AFConnection _tellDelegateExtensionRequestFinishedForApplication:error:]
  -[AFConnection _tellDelegateAudioSessionDidBeginInterruptionWithUserInfo:]
  -[AFConnection _tellDelegateStartPlaybackDidFail:]
  -[AFConnection cancelSpeech]
  -[AFConnection stopAllAudioPlaybackRequests:]
  -[AFConnection _tellDelegateAudioSessionDidEndInterruption:userInfo:]
  -[AFConnection _tellDelegateAudioPlaybackRequestDidStart:]
  -[AFConnection _tellDelegateAudioPlaybackRequestDidStop:error:]
  -[AFConnection _tellDelegateWillProcessStartPlayback:intent:completion:]
  -[AFConnection _barrier]
  -[AFConnection _tellDelegateAudioSessionWillBecomeActive:]
  -[AFConnection _tellDelegateAudioSessionDidBecomeActive:]
  -[AFConnection _tellDelegateWillProcessAppLaunchWithBundleIdentifier:]
  -[AFConnection _tellDelegateFailedToLaunchAppWithBundleIdentifier:]
  -[AFConnection preheatWithStyle:]
  -[AFConnection setDelegate:]
  -[AFConnection _tellSpeechDelegateRecordingWillBeginWithInputAudioPowerXPCWrapper:]
  -[AFConnection _tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:audioSessionID:]
  -[AFConnection _tellSpeechDelegateRecordingDidChangeAVRecordRoute:]
  -[AFConnection willPresentUI]
  -[AFConnection _tellSpeechDelegateRecordingDidDetectStartpoint]
  -[AFConnection _tellSpeechDelegateToPerformTwoShotPromptWithType:reply:]
  -[AFConnection _tellSpeechDelegateSpeechRecognized:]
  -[AFConnection _tellSpeechDelegateRecognizedAdditionalSpeechInterpretation:refId:]
  -[AFConnection _tellSpeechDelegateRecordingDidUpdateRecognitionPhrases:utterances:refId:]
  -[AFConnection _tellSpeechDelegateRecognitionUpdateWillBeginForTask:]
  -[AFConnection _tellSpeechDelegateSpeechRecognizedPartialResult:]
  -[AFConnection forceAudioSessionActive]
  -[AFConnection _extendExistingRequestTimeoutForReason:]
  -[AFConnection acquireAudioSessionWithContext:completion:]
  -[AFConnection forceAudioSessionInactive]
  -[AFConnection setLockState:screenLocked:]
  -[AFConnection setCarDNDActive:]
  -[AFConnection setModesConfiguration:]
  -[AFConnection setWatchAuthenticated:]
  -[AFConnection setAnnouncementRequestsPermittedByPresentationWhileActive:]
  -[AFConnection setShouldWaitForMyriad:]
  -[AFConnection setMyriadDecisionResult:]
  -[AFConnection setVoiceOverIsActive:]
  -[AFConnection startRequestWithText:]
  -[AFConnection startDirectActionRequestWithString:]
  -[AFConnection startRequestWithInfo:]
  -[AFConnection startContinuationRequestWithUserInfo:]
  -[AFConnection startRequestWithAceCommand:]
  -[AFConnection startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:]
  -[AFConnection startRequestWithInfo:activationEvent:]
  -[AFConnection startSpeechRequestWithOptions:]
  -[AFConnection startRecordingForPendingSpeechRequestWithOptions:completion:]
  -[AFConnection startSpeechPronunciationRequestWithOptions:pronunciationContext:]
  -[AFConnection startAcousticIDRequestWithOptions:]
  -[AFConnection failRequestWithError:]
  -[AFConnection recordUIMetrics:]
  -[AFConnection recordRequestMetric:withTimestamp:]
  -[AFConnection hasActiveRequest]
  -[AFConnection sendGenericAceCommand:]
  -[AFConnection sendGenericAceCommand:conflictHandler:]
  -[AFConnection sendReplyCommand:]
  -[AFConnection getCachedObjectsWithIdentifiers:completion:]
  -[AFConnection setAlertContextWithBulletins:]
  -[AFConnection setApplicationContextForApplicationInfos:withRefId:]
  -[AFConnection setApplicationContextForApplicationInfos:]
  -[AFConnection usefulUserResultWillPresent]
  -[AFConnection willPresentUsefulUserResultWithType:]
  -[AFConnection checkLanguageReady:completion:]
  -[AFConnection fetchShouldSpeak:]
  -[AFConnection _speechRecordingDidFailWithError:]
  -[AFConnection _willStopRecordingWithSignpostID:]
  -[AFConnection acquireUserInteractionAssertion]
  -[AFConnection speechDelegate]
  -[AFConnection setSpeechDelegate:]
  -[AFConnection _cachedBulletins]
  -[AFConnection _activeRequestUUID]
  -[AFConnection init]
  -[AFConnection startUIRequest]
  -[AFConnection startSpeechRequestWithSpeechFileAtURL:isNarrowBand:]
  -[AFConnection startSpeechRequestWithSpeechFileAtURL:]
  -[AFConnection requestBarrier:]
  -[AFConnection sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:]
  -[AFConnection broadcastCommandDictionary:]
  -[AFConnection _clearAssistantInfoForAccountWithIdentifier:]
  -[AFConnection updateSpeechSynthesisRecord:]
  -[AFConnection _dispatchCallbackGroupBlock:]
  -[AFConnection _tellSpeechDelegateRecordingDidFail:]
  -[AFConnection peakPower]
  -[AFConnection initWithTargetQueue:]
  -[AFConnection delegate]
  -[AFConnection _tellSpeechDelegateRecognitionDidFail:]
  -[AFConnection dealloc]
  -[AFConnection clearContext]
  -[AFConnection invalidate]
  -[AFConnection _testAgent]
  -[AFConnection startAudioPlaybackRequest:options:completion:]
  -[AFConnection audioSessionID]
  -[AFConnection initWithTargetQueue:instanceContext:]
  -[AFConnection _connectionFailedWithError:]
  -[AFConnection _destroyTestAgent]
  -[AFConnection _siriClientStateManager]
  -[AFConnection _requestWillBeginWithRequestClass:isSpeechRequest:speechRequestOptions:requestInfo:isBackgroundRequest:analyticsEventProvider:]
  -[AFConnection _willStartRequestWithSpeech:speechRequestOptions:requestInfo:analyticsEventProvider:]
  -[AFConnection _tellDelegateRequestWillStart]
  -[AFConnection _scheduleRequestTimeoutForReason:]
  -[AFConnection _beginInterstitialsForReason:]
  -[AFConnection _endInterstitialsForReason:]
  -[AFConnection _cancelRequestTimeoutForReason:]
  -[AFConnection _enqueueInterstitialCommand:]
  -[AFConnection _pauseRequestTimeoutForReason:]
  -[AFConnection _dispatchCommand:isInterstitial:interstitialPhase:interstitialDelay:reply:]
  -[AFConnection reportIssueForType:subtype:context:]
  -[AFConnection _resumeRequestTimeoutForReason:]
  -[AFConnection shouldSpeak]
  -[AFConnection cancelRequest]
  -[AFConnection _tellDelegateShouldSpeakChanged:]
  -[AFConnection _tellDelegateAudioSessionIDChanged:]
  -[AFConnection _willFailRequestWithError:]
  -[AFConnection _willCompleteRequest]
  -[AFConnection _requestDidEnd]
  -[AFConnection _stopInputAudioPowerUpdates]
  -[AFConnection setConfiguration:]


AFConnectionClientServiceDelegate : NSObject <AFClientServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFConnectionClientServiceDelegate initWithConnection:targetQueue:]
  -[AFConnectionClientServiceDelegate .cxx_destruct]
  -[AFConnectionClientServiceDelegate cacheImage:]
  -[AFConnectionClientServiceDelegate _connectionDelegate]
  -[AFConnectionClientServiceDelegate shouldSpeakChanged:]
  -[AFConnectionClientServiceDelegate audioSessionIDChanged:]
  -[AFConnectionClientServiceDelegate requestHandleCommand:reply:]
  -[AFConnectionClientServiceDelegate requestRequestedOpenApplicationWithBundleID:URL:reply:]
  -[AFConnectionClientServiceDelegate requestRequestedOpenURL:reply:]
  -[AFConnectionClientServiceDelegate requestRequestedDismissAssistant]
  -[AFConnectionClientServiceDelegate requestRequestedDismissAssistantWithReason:]
  -[AFConnectionClientServiceDelegate quickStopWasHandledWithActions:]
  -[AFConnectionClientServiceDelegate acousticIDRequestWillStart]
  -[AFConnectionClientServiceDelegate musicWasDetected]
  -[AFConnectionClientServiceDelegate acousticIDRequestDidFinishWithSuccess:]
  -[AFConnectionClientServiceDelegate setUserActivityInfo:webpageURL:]
  -[AFConnectionClientServiceDelegate invalidateCurrentUserActivity]
  -[AFConnectionClientServiceDelegate extensionRequestWillStartForApplication:]
  -[AFConnectionClientServiceDelegate getBulletinContext:]
  -[AFConnectionClientServiceDelegate extensionRequestFinishedForApplication:error:]
  -[AFConnectionClientServiceDelegate speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:]
  -[AFConnectionClientServiceDelegate speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:]
  -[AFConnectionClientServiceDelegate speechRecordingDidCancelWithReply:]
  -[AFConnectionClientServiceDelegate speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:]
  -[AFConnectionClientServiceDelegate speechRecordingStartpointDetectedWithReply:]
  -[AFConnectionClientServiceDelegate speechRecordingPerformTwoShotPromptWithType:reply:]
  -[AFConnectionClientServiceDelegate speechRecordingDidEndWithReply:]
  -[AFConnectionClientServiceDelegate speechRecordingDidFail:reply:]
  -[AFConnectionClientServiceDelegate speechRecognized:]
  -[AFConnectionClientServiceDelegate speechRecognizedAdditionalInterpretation:refId:]
  -[AFConnectionClientServiceDelegate speechRecognizedPartialResult:]
  -[AFConnectionClientServiceDelegate speechRecognitionDidFail:]
  -[AFConnectionClientServiceDelegate speechRecordingWillBeginRecognitionUpdateForTask:]
  -[AFConnectionClientServiceDelegate speechRecordingDidUpdateRecognitionPhrases:utterances:refId:]
  -[AFConnectionClientServiceDelegate willStopRecordingWithSignpostID:]
  -[AFConnectionClientServiceDelegate aceConnectionWillRetryOnError:]
  -[AFConnectionClientServiceDelegate audioSessionDidBeginInterruptionWithUserInfo:]
  -[AFConnectionClientServiceDelegate audioPlaybackRequestWillStart:]
  -[AFConnectionClientServiceDelegate audioSessionDidEndInterruption:userInfo:]
  -[AFConnectionClientServiceDelegate audioPlaybackRequestDidStart:]
  -[AFConnectionClientServiceDelegate audioPlaybackRequestDidStop:error:]
  -[AFConnectionClientServiceDelegate willProcessStartPlayback:intent:completion:]
  -[AFConnectionClientServiceDelegate startPlaybackDidFail:]
  -[AFConnectionClientServiceDelegate audioSessionWillBecomeActive:]
  -[AFConnectionClientServiceDelegate audioSessionDidBecomeActive:]
  -[AFConnectionClientServiceDelegate willProcessAppLaunchWithBundleIdentifier:]
  -[AFConnectionClientServiceDelegate appLaunchFailedWithBundleIdentifier:]
  -[AFConnectionClientServiceDelegate requestDidReceiveCommand:reply:]
  -[AFConnectionClientServiceDelegate startUIRequestWithInfo:completion:]
  -[AFConnectionClientServiceDelegate startUIRequestWithText:completion:]


AFInterstitialProvider : NSObject <AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:preferences:delegate:]
  -[AFInterstitialProvider .cxx_destruct]
  -[AFInterstitialProvider _performNextActionWithExpectedDelay:]
  -[AFInterstitialProvider initWithStyle:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:context:delegate:]
  -[AFInterstitialProvider _invalidate]
  -[AFInterstitialProvider dealloc]
  -[AFInterstitialProvider invalidate]


_AFInterstitialAction : NSObject
 @property  long long phase
 @property  NSString *displayKey
 @property  NSString *speakableKey
 @property  double duration

  // instance methods
  -[_AFInterstitialAction initWithDuration:]
  -[_AFInterstitialAction phase]
  -[_AFInterstitialAction .cxx_destruct]
  -[_AFInterstitialAction displayKey]
  -[_AFInterstitialAction speakableKey]
  -[_AFInterstitialAction initWithPhase:displayKey:speakableKey:]
  -[_AFInterstitialAction duration]


AFAudioSessionAssertionRemoteAcquisitionService : NSObject <AFAudioSessionAssertionAcquisitionService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFAudioSessionAssertionRemoteAcquisitionService initWithInstanceContext:]
  -[AFAudioSessionAssertionRemoteAcquisitionService .cxx_destruct]
  -[AFAudioSessionAssertionRemoteAcquisitionService acquireAudioSessionAssertionWithContext:relinquishmentHandler:]


AFUpdateAlarmRequest : AFSiriRequest
 @property  NSArray *alarms

  // class methods
  +[AFUpdateAlarmRequest supportsSecureCoding]

  // instance methods
  -[AFUpdateAlarmRequest setAlarms:]
  -[AFUpdateAlarmRequest alarms]
  -[AFUpdateAlarmRequest initWithCoder:]
  -[AFUpdateAlarmRequest alarm]
  -[AFUpdateAlarmRequest .cxx_destruct]
  -[AFUpdateAlarmRequest createResponse]
  -[AFUpdateAlarmRequest encodeWithCoder:]


AFGetSettingsRequest : AFSiriRequest
 @property  NSArray *settings

  // class methods
  +[AFGetSettingsRequest supportsSecureCoding]

  // instance methods
  -[AFGetSettingsRequest initWithCoder:]
  -[AFGetSettingsRequest .cxx_destruct]
  -[AFGetSettingsRequest setSettings:]
  -[AFGetSettingsRequest createResponse]
  -[AFGetSettingsRequest encodeWithCoder:]
  -[AFGetSettingsRequest settings]


AFTestRequestOptions : NSObject <NSCopying, NSSecureCoding>
 @property  long long requestPath
 @property  NSString *inputOrigin
 @property  NSNumber *isEyesFree

  // class methods
  +[AFTestRequestOptions supportsSecureCoding]
  +[AFTestRequestOptions newWithBuilder:]

  // instance methods
  -[AFTestRequestOptions _descriptionWithIndent:]
  -[AFTestRequestOptions initWithCoder:]
  -[AFTestRequestOptions .cxx_destruct]
  -[AFTestRequestOptions mutatedCopyWithMutator:]
  -[AFTestRequestOptions isEyesFree]
  -[AFTestRequestOptions isEqual:]
  -[AFTestRequestOptions requestPath]
  -[AFTestRequestOptions inputOrigin]
  -[AFTestRequestOptions initWithRequestPath:inputOrigin:isEyesFree:]
  -[AFTestRequestOptions copyWithZone:]
  -[AFTestRequestOptions encodeWithCoder:]


_AFTestRequestOptionsMutation : NSObject <AFTestRequestOptionsMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFTestRequestOptionsMutation .cxx_destruct]
  -[_AFTestRequestOptionsMutation init]
  -[_AFTestRequestOptionsMutation setRequestPath:]
  -[_AFTestRequestOptionsMutation setInputOrigin:]
  -[_AFTestRequestOptionsMutation setIsEyesFree:]
  -[_AFTestRequestOptionsMutation generate]
  -[_AFTestRequestOptionsMutation initWithBaseModel:]


AFSiriRingtone : NSObject
 @property  NSArray *contacts
 @property  NSString *displayedCallerID
 @property  long long callerIDType
 @property  NSString *callServiceSpeakableName
 @property  NSString *callDestinationID
 @property  long long callDestinationIDType
 @property  AFVoiceInfo *voiceInfo
 @property  NSString *textToSpeak

  // instance methods
  -[AFSiriRingtone .cxx_destruct]
  -[AFSiriRingtone init]
  -[AFSiriRingtone _bestVoiceInfoWithCurrentLocale:]
  -[AFSiriRingtone _generateSpokenTextForContacts:voiceLanguage:displayedCallerID:callerIDType:callDestinationID:callDestinationIDType:callServiceSpeakableName:]
  -[AFSiriRingtone displayedCallerID]
  -[AFSiriRingtone _spokenTextForContacts:callServiceSpeakableName:languageCode:]
  -[AFSiriRingtone _spokenTextForCallerID:ofType:rawCaller:rawCallerType:languageCode:]
  -[AFSiriRingtone _spokenTextForCallDestinationID:ofType:callServiceSpeakableName:languageCode:]
  -[AFSiriRingtone _phoneticNamesForContact:languageCode:]
  -[AFSiriRingtone _spokenTextForOneContact:callServiceSpeakableName:languageCode:]
  -[AFSiriRingtone _spokenTextForTwoContacts:callServiceSpeakableName:languageCode:]
  -[AFSiriRingtone _escapeCallerIDString:forType:]
  -[AFSiriRingtone textToSpeak]
  -[AFSiriRingtone _spokenTextForThreeContacts:callServiceSpeakableName:languageCode:]
  -[AFSiriRingtone _escapeCallDestinationIDString:forType:]
  -[AFSiriRingtone _phoneticInfoForContact:languageCode:firstName:middleName:lastName:nickname:]
  -[AFSiriRingtone setDisplayedCallerID:]
  -[AFSiriRingtone callerIDType]
  -[AFSiriRingtone setCallerIDType:]
  -[AFSiriRingtone callServiceSpeakableName]
  -[AFSiriRingtone setCallServiceSpeakableName:]
  -[AFSiriRingtone callDestinationID]
  -[AFSiriRingtone setCallDestinationID:]
  -[AFSiriRingtone callDestinationIDType]
  -[AFSiriRingtone setCallDestinationIDType:]
  -[AFSiriRingtone contacts]
  -[AFSiriRingtone voiceInfo]
  -[AFSiriRingtone setContacts:]
  -[AFSiriRingtone initWithContacts:]


AFSiriPhoneticContactNames : NSObject
 @property  NSString *givenName
 @property  NSString *middleName
 @property  NSString *familyName
 @property  NSString *nickname
 @property  NSString *organizationName
 @property  NSString *languageCode

  // instance methods
  -[AFSiriPhoneticContactNames organizationName]
  -[AFSiriPhoneticContactNames nickname]
  -[AFSiriPhoneticContactNames familyName]
  -[AFSiriPhoneticContactNames setOrganizationName:]
  -[AFSiriPhoneticContactNames middleName]
  -[AFSiriPhoneticContactNames setLanguageCode:]
  -[AFSiriPhoneticContactNames setFamilyName:]
  -[AFSiriPhoneticContactNames .cxx_destruct]
  -[AFSiriPhoneticContactNames languageCode]
  -[AFSiriPhoneticContactNames setGivenName:]
  -[AFSiriPhoneticContactNames setNickname:]
  -[AFSiriPhoneticContactNames setMiddleName:]
  -[AFSiriPhoneticContactNames givenName]
  -[AFSiriPhoneticContactNames spokenName]


AFDeviceStateConnection : NSObject
  // instance methods
  -[AFDeviceStateConnection getPersonalSettingsForSharedUserID:completion:]
  -[AFDeviceStateConnection fetchSiriKitAppIdentifiersWithNotificationPreviewRestrictionsWithCompletion:]


AFExperimentConfiguration : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  long long type
 @property  NSString *identifier
 @property  NSString *version
 @property  AFExperimentGroup *controlGroup
 @property  NSArray *experimentGroups
 @property  NSString *salt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFExperimentConfiguration supportsSecureCoding]
  +[AFExperimentConfiguration newWithBuilder:]

  // instance methods
  -[AFExperimentConfiguration salt]
  -[AFExperimentConfiguration buildDictionaryRepresentation]
  -[AFExperimentConfiguration _descriptionWithIndent:]
  -[AFExperimentConfiguration initWithCoder:]
  -[AFExperimentConfiguration initWithDictionaryRepresentation:]
  -[AFExperimentConfiguration .cxx_destruct]
  -[AFExperimentConfiguration mutatedCopyWithMutator:]
  -[AFExperimentConfiguration isEqual:]
  -[AFExperimentConfiguration identifier]
  -[AFExperimentConfiguration controlGroup]
  -[AFExperimentConfiguration experimentGroups]
  -[AFExperimentConfiguration initWithType:identifier:version:controlGroup:experimentGroups:salt:]
  -[AFExperimentConfiguration type]
  -[AFExperimentConfiguration version]
  -[AFExperimentConfiguration copyWithZone:]
  -[AFExperimentConfiguration encodeWithCoder:]


_AFExperimentConfigurationMutation : NSObject <AFExperimentConfigurationMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentConfigurationMutation setControlGroup:]
  -[_AFExperimentConfigurationMutation setType:]
  -[_AFExperimentConfigurationMutation .cxx_destruct]
  -[_AFExperimentConfigurationMutation setExperimentGroups:]
  -[_AFExperimentConfigurationMutation init]
  -[_AFExperimentConfigurationMutation setVersion:]
  -[_AFExperimentConfigurationMutation setSalt:]
  -[_AFExperimentConfigurationMutation setIdentifier:]
  -[_AFExperimentConfigurationMutation generate]
  -[_AFExperimentConfigurationMutation initWithBaseModel:]


AFSecurityConnection : NSObject <AFSecurityService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSecurityConnection _connection]
  -[AFSecurityConnection initWithInstanceContext:]
  -[AFSecurityConnection _invalidateConnection]
  -[AFSecurityConnection _dispatchCallbackForProcessedDataMap:errorMap:completion:]
  -[AFSecurityConnection _dispatchCallbackForProcessedData:error:completion:]
  -[AFSecurityConnection internalAuthAppleConnectServiceTicket:]
  -[AFSecurityConnection processDataMap:usingProcedure:completion:]
  -[AFSecurityConnection .cxx_destruct]
  -[AFSecurityConnection processData:usingProcedure:completion:]
  -[AFSecurityConnection _processDataMap:usingProcedure:completion:]
  -[AFSecurityConnection init]
  -[AFSecurityConnection _processData:usingProcedure:completion:]
  -[AFSecurityConnection setInternalAuthSessionToken:completion:]
  -[AFSecurityConnection dealloc]
  -[AFSecurityConnection invalidate]
  -[AFSecurityConnection internalAuthSessionToken:]
  -[AFSecurityConnection _connectionInvalidated]
  -[AFSecurityConnection setInternalAuthAppleConnectServiceTicket:completion:]
  -[AFSecurityConnection setKeychainValue:forKey:accountIdentifier:completion:]
  -[AFSecurityConnection _connectionInterrupted]


AFQueue : NSObject <NSFastEnumeration>
 @property  id frontObject
 @property  unsigned long count
 @property  <AFQueueDelegate> *delegate

  // instance methods
  -[AFQueue dequeueAllObjects]
  -[AFQueue .cxx_destruct]
  -[AFQueue count]
  -[AFQueue setDelegate:]
  -[AFQueue objectAtIndex:]
  -[AFQueue enqueueObjects:]
  -[AFQueue countByEnumeratingWithState:objects:count:]
  -[AFQueue delegate]
  -[AFQueue dequeueObject]
  -[AFQueue dealloc]
  -[AFQueue frontObject]
  -[AFQueue enqueueObject:]
  -[AFQueue _objects]


AFSetSettingsRequest : AFSiriRequest
 @property  NSArray *settings
 @property  BOOL applyChanges

  // class methods
  +[AFSetSettingsRequest supportsSecureCoding]

  // instance methods
  -[AFSetSettingsRequest initWithCoder:]
  -[AFSetSettingsRequest .cxx_destruct]
  -[AFSetSettingsRequest createResponse]
  -[AFSetSettingsRequest _setSettings:]
  -[AFSetSettingsRequest applyChanges]
  -[AFSetSettingsRequest createResponseWithSettingChanges:]
  -[AFSetSettingsRequest _setApplyChanges:]
  -[AFSetSettingsRequest encodeWithCoder:]
  -[AFSetSettingsRequest settings]


AFBluetoothWirelessSplitterSessionInfo : NSObject <NSCopying, NSSecureCoding>
 @property  long long state
 @property  NSArray *deviceAddresses

  // class methods
  +[AFBluetoothWirelessSplitterSessionInfo supportsSecureCoding]
  +[AFBluetoothWirelessSplitterSessionInfo newWithBuilder:]

  // instance methods
  -[AFBluetoothWirelessSplitterSessionInfo _descriptionWithIndent:]
  -[AFBluetoothWirelessSplitterSessionInfo initWithCoder:]
  -[AFBluetoothWirelessSplitterSessionInfo .cxx_destruct]
  -[AFBluetoothWirelessSplitterSessionInfo mutatedCopyWithMutator:]
  -[AFBluetoothWirelessSplitterSessionInfo isEqual:]
  -[AFBluetoothWirelessSplitterSessionInfo state]
  -[AFBluetoothWirelessSplitterSessionInfo deviceAddresses]
  -[AFBluetoothWirelessSplitterSessionInfo initWithState:deviceAddresses:]
  -[AFBluetoothWirelessSplitterSessionInfo copyWithZone:]
  -[AFBluetoothWirelessSplitterSessionInfo encodeWithCoder:]


_AFBluetoothWirelessSplitterSessionInfoMutation : NSObject <AFBluetoothWirelessSplitterSessionInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFBluetoothWirelessSplitterSessionInfoMutation .cxx_destruct]
  -[_AFBluetoothWirelessSplitterSessionInfoMutation setState:]
  -[_AFBluetoothWirelessSplitterSessionInfoMutation init]
  -[_AFBluetoothWirelessSplitterSessionInfoMutation setDeviceAddresses:]
  -[_AFBluetoothWirelessSplitterSessionInfoMutation generate]
  -[_AFBluetoothWirelessSplitterSessionInfoMutation initWithBaseModel:]


STContactAddress : STSiriModelObject
  // class methods
  +[STContactAddress supportsSecureCoding]

  // instance methods
  -[STContactAddress stringValue]
  -[STContactAddress initWithCoder:]
  -[STContactAddress .cxx_destruct]
  -[STContactAddress contactIdentifier]
  -[STContactAddress initWithStringValue:]
  -[STContactAddress initWithType:stringValue:contactIdentifier:contactInternalGUID:]
  -[STContactAddress contactInternalGUID]
  -[STContactAddress _aceContextObjectValue]
  -[STContactAddress type]
  -[STContactAddress initWithType:stringValue:]
  -[STContactAddress encodeWithCoder:]


AFVoiceInfo : NSObject <NSSecureCoding, NSCopying>
 @property  long long gender
 @property  BOOL wasInitializedFromDictionaryRepresentation
 @property  NSString *languageCode
 @property  BOOL isCustom
 @property  long long footprint
 @property  NSString *name
 @property  NSNumber *contentVersion
 @property  NSString *masteredVersion

  // class methods
  +[AFVoiceInfo supportsSecureCoding]
  +[AFVoiceInfo genderForVSSpeechGender:]
  +[AFVoiceInfo defaultGenderForOutputVoiceLanguageCode:]
  +[AFVoiceInfo allVoicesForSiriSessionLanguage:]
  +[AFVoiceInfo voiceInfoForLanguageCode:]
  +[AFVoiceInfo voiceInfoForSessionLanguageCode:]
  +[AFVoiceInfo outputVoiceIdentifierForLanguageCode:voiceName:]

  // instance methods
  -[AFVoiceInfo gender]
  -[AFVoiceInfo footprint]
  -[AFVoiceInfo name]
  -[AFVoiceInfo initWithCoder:]
  -[AFVoiceInfo initWithDictionaryRepresentation:]
  -[AFVoiceInfo VSSpeechFootprint]
  -[AFVoiceInfo .cxx_destruct]
  -[AFVoiceInfo VSSpeechGender]
  -[AFVoiceInfo VSSpeechType]
  -[AFVoiceInfo VSVoiceAsset]
  -[AFVoiceInfo isMatchForVoiceAsset:]
  -[AFVoiceInfo dictionaryRepresentation]
  -[AFVoiceInfo setGender:]
  -[AFVoiceInfo isCustom]
  -[AFVoiceInfo languageCode]
  -[AFVoiceInfo isEqual:]
  -[AFVoiceInfo contentVersion]
  -[AFVoiceInfo initWithLanguageCode:]
  -[AFVoiceInfo genderString]
  -[AFVoiceInfo footprintString]
  -[AFVoiceInfo initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:]
  -[AFVoiceInfo initWithLanguageCode:gender:isCustom:]
  -[AFVoiceInfo initWithLanguageCode:gender:footprint:isCustom:]
  -[AFVoiceInfo isLanguageAndGenderEqual:]
  -[AFVoiceInfo setIsCustom:]
  -[AFVoiceInfo initWithLanguageCode:gender:name:footprint:isCustom:]
  -[AFVoiceInfo wasInitializedFromDictionaryRepresentation]
  -[AFVoiceInfo isValidForSiriSessionLanguage:]
  -[AFVoiceInfo copyWithZone:]
  -[AFVoiceInfo encodeWithCoder:]
  -[AFVoiceInfo masteredVersion]


AFHomeAccessorySiriDataSharingChangeLogEvent : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSDate *date
 @property  long long previousOptInStatus
 @property  long long newOptInStatus
 @property  long long changeSource
 @property  NSString *changeReason
 @property  NSString *buildVersion
 @property  NSString *productVersion
 @property  NSString *schemaVersion
 @property  NSString *logEventIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeAccessorySiriDataSharingChangeLogEvent supportsSecureCoding]
  +[AFHomeAccessorySiriDataSharingChangeLogEvent newWithBuilder:]

  // instance methods
  -[AFHomeAccessorySiriDataSharingChangeLogEvent changeSource]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent productVersion]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent buildDictionaryRepresentation]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent buildVersion]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent _descriptionWithIndent:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent initWithCoder:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent initWithDictionaryRepresentation:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent .cxx_destruct]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent schemaVersion]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent mutatedCopyWithMutator:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent isEqual:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent previousOptInStatus]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent newOptInStatus]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent changeReason]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent logEventIdentifier]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent initWithDate:previousOptInStatus:newOptInStatus:changeSource:changeReason:buildVersion:productVersion:schemaVersion:logEventIdentifier:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent copyWithZone:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent encodeWithCoder:]
  -[AFHomeAccessorySiriDataSharingChangeLogEvent date]


_AFHomeAccessorySiriDataSharingChangeLogEventMutation : NSObject <AFHomeAccessorySiriDataSharingChangeLogEventMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setBuildVersion:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setChangeSource:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setProductVersion:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setSchemaVersion:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation .cxx_destruct]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation init]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setDate:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setNewOptInStatus:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setPreviousOptInStatus:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setChangeReason:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation setLogEventIdentifier:]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation generate]
  -[_AFHomeAccessorySiriDataSharingChangeLogEventMutation initWithBaseModel:]


AFMutableConversationItem : NSObject <AFConversationStorable, NSCopying>
 @property  NSUUID *identifier
 @property  NSUUID *revisionIdentifier
 @property  long long type
 @property  AceObject *aceObject
 @property  AFDialogPhase *dialogPhase
 @property  NSString *aceCommandIdentifier
 @property  long long presentationState
 @property  BOOL virgin
 @property  BOOL transient
 @property  BOOL supplemental
 @property  BOOL immersiveExperience
 @property  AFDataStore *associatedDataStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFMutableConversationItem setTransient:]
  -[AFMutableConversationItem setType:]
  -[AFMutableConversationItem .cxx_destruct]
  -[AFMutableConversationItem isTransient]
  -[AFMutableConversationItem isVirgin]
  -[AFMutableConversationItem presentationState]
  -[AFMutableConversationItem initWithPropertyListRepresentation:]
  -[AFMutableConversationItem identifier]
  -[AFMutableConversationItem propertyListRepresentation]
  -[AFMutableConversationItem _didMutate]
  -[AFMutableConversationItem aceObject]
  -[AFMutableConversationItem associatedDataStore]
  -[AFMutableConversationItem _propertyListStringForType]
  -[AFMutableConversationItem initWithIdentifier:revisionIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:]
  -[AFMutableConversationItem dialogPhase]
  -[AFMutableConversationItem aceCommandIdentifier]
  -[AFMutableConversationItem initWithIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:]
  -[AFMutableConversationItem isSupplemental]
  -[AFMutableConversationItem isImmersiveExperience]
  -[AFMutableConversationItem _propertyListStringForPresentationState]
  -[AFMutableConversationItem _typeForPropertyListString:]
  -[AFMutableConversationItem _presentationStateForPropertyListString:]
  -[AFMutableConversationItem initWithType:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:]
  -[AFMutableConversationItem setAceObject:]
  -[AFMutableConversationItem setDialogPhase:]
  -[AFMutableConversationItem setAceCommandIdentifier:]
  -[AFMutableConversationItem setSupplemental:]
  -[AFMutableConversationItem setImmersiveExperience:]
  -[AFMutableConversationItem type]
  -[AFMutableConversationItem revisionIdentifier]
  -[AFMutableConversationItem setPresentationState:]
  -[AFMutableConversationItem copyWithZone:]
  -[AFMutableConversationItem setVirgin:]


AFTipKitDonator : NSObject
  // class methods
  +[AFTipKitDonator _donateToTipsWithIdentifier:bundleID:context:userInfo:]
  +[AFTipKitDonator donateAnnounceNotificationsInCarPlaySettingsChange:]
  +[AFTipKitDonator donateDictationEventStartedForBundleId:context:userInfo:]
  +[AFTipKitDonator donateSiriEventStartedForBundleId:context:userInfo:]
  +[AFTipKitDonator donateMessageSentForBundleId:context:userInfo:]


AFBundleResourceManager : NSObject
  // class methods
  +[AFBundleResourceManager sharedManager]

  // instance methods
  -[AFBundleResourceManager .cxx_destruct]
  -[AFBundleResourceManager init]
  -[AFBundleResourceManager URLForResource:]
  -[AFBundleResourceManager resourceForSoundID:]
  -[AFBundleResourceManager URLForSoundID:]


AFFlowServiceConnection : NSObject
  // class methods
  +[AFFlowServiceConnection sharedConnection]

  // instance methods
  -[AFFlowServiceConnection _clearConnection]
  -[AFFlowServiceConnection _connection]
  -[AFFlowServiceConnection .cxx_destruct]
  -[AFFlowServiceConnection invokeMethodOnRemoteWithBlock:onError:]
  -[AFFlowServiceConnection _init]


AFPhonemeTranscription : NSObject <AFTranscriptionType>
 @property  NSString *orthography
 @property  NSString *language
 @property  NSArray *phonemeSuggestions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFPhonemeTranscription supportsSecureCoding]

  // instance methods
  -[AFPhonemeTranscription setLanguage:]
  -[AFPhonemeTranscription initWithCoder:]
  -[AFPhonemeTranscription .cxx_destruct]
  -[AFPhonemeTranscription language]
  -[AFPhonemeTranscription orthography]
  -[AFPhonemeTranscription setOrthography:]
  -[AFPhonemeTranscription phonemeSuggestions]
  -[AFPhonemeTranscription setPhonemeSuggestions:]
  -[AFPhonemeTranscription encodeWithCoder:]


AFOutputVoiceDescriptor : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *localizedDisplay
 @property  NSString *localizedDisplayWithRegion

  // class methods
  +[AFOutputVoiceDescriptor supportsSecureCoding]
  +[AFOutputVoiceDescriptor newWithBuilder:]

  // instance methods
  -[AFOutputVoiceDescriptor _descriptionWithIndent:]
  -[AFOutputVoiceDescriptor initWithCoder:]
  -[AFOutputVoiceDescriptor .cxx_destruct]
  -[AFOutputVoiceDescriptor mutatedCopyWithMutator:]
  -[AFOutputVoiceDescriptor isEqual:]
  -[AFOutputVoiceDescriptor localizedDisplayWithRegion]
  -[AFOutputVoiceDescriptor initWithLocalizedDisplay:localizedDisplayWithRegion:]
  -[AFOutputVoiceDescriptor copyWithZone:]
  -[AFOutputVoiceDescriptor encodeWithCoder:]
  -[AFOutputVoiceDescriptor localizedDisplay]


_AFOutputVoiceDescriptorMutation : NSObject <AFOutputVoiceDescriptorMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFOutputVoiceDescriptorMutation .cxx_destruct]
  -[_AFOutputVoiceDescriptorMutation init]
  -[_AFOutputVoiceDescriptorMutation setLocalizedDisplay:]
  -[_AFOutputVoiceDescriptorMutation setLocalizedDisplayWithRegion:]
  -[_AFOutputVoiceDescriptorMutation generate]
  -[_AFOutputVoiceDescriptorMutation initWithBaseModel:]


_AFAssertionImpl : NSObject <AFAssertion>
 @property  NSUUID *uuid
 @property  AFAssertionContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAssertionImpl .cxx_destruct]
  -[_AFAssertionImpl uuid]
  -[_AFAssertionImpl initWithUUID:context:relinquishmentHandler:]
  -[_AFAssertionImpl invokeRelinquishmentHandlerWithContext:error:]
  -[_AFAssertionImpl context]


_AFAssertionProxy : NSObject <AFRelinquishableAssertion>
 @property  NSUUID *uuid
 @property  AFAssertionContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAssertionProxy .cxx_destruct]
  -[_AFAssertionProxy uuid]
  -[_AFAssertionProxy relinquishWithContext:options:]
  -[_AFAssertionProxy relinquishWithError:options:]
  -[_AFAssertionProxy initWithImpl:coordinator:]
  -[_AFAssertionProxy dealloc]
  -[_AFAssertionProxy context]


AFAssertionCoordinator : NSObject <AFInvalidating>
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFAssertionCoordinator .cxx_destruct]
  -[AFAssertionCoordinator barrier:]
  -[AFAssertionCoordinator _activateAssertionWithUUID:]
  -[AFAssertionCoordinator getPendingAndActiveAssertionsWithCompletion:]
  -[AFAssertionCoordinator relinquishAsertionsPassingTest:context:]
  -[AFAssertionCoordinator relinquishAssertionWithUUID:error:options:]
  -[AFAssertionCoordinator identifier]
  -[AFAssertionCoordinator _deactivateAndRemoveAssertionWithUUID:context:error:options:]
  -[AFAssertionCoordinator acquireRelinquishableAssertionWithContext:relinquishmentHandler:]
  -[AFAssertionCoordinator _invalidate]
  -[AFAssertionCoordinator relinquishAssertionWithUUID:context:options:]
  -[AFAssertionCoordinator relinquishAsertionsPassingTest:error:]
  -[AFAssertionCoordinator numberOfPendingAndActiveAssertions]
  -[AFAssertionCoordinator dealloc]
  -[AFAssertionCoordinator invalidate]
  -[AFAssertionCoordinator initWithIdentifier:queue:delegate:]
  -[AFAssertionCoordinator getActiveAssertionsWithCompletion:]
  -[AFAssertionCoordinator numberOfActiveAssertions]
  -[AFAssertionCoordinator _addAssertion:]


AFSetAudioSessionActiveContext : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long options
 @property  long long reason
 @property  AFSpeechRequestOptions *speechRequestOptions

  // class methods
  +[AFSetAudioSessionActiveContext supportsSecureCoding]
  +[AFSetAudioSessionActiveContext newWithBuilder:]

  // instance methods
  -[AFSetAudioSessionActiveContext _descriptionWithIndent:]
  -[AFSetAudioSessionActiveContext initWithCoder:]
  -[AFSetAudioSessionActiveContext options]
  -[AFSetAudioSessionActiveContext .cxx_destruct]
  -[AFSetAudioSessionActiveContext speechRequestOptions]
  -[AFSetAudioSessionActiveContext mutatedCopyWithMutator:]
  -[AFSetAudioSessionActiveContext isEqual:]
  -[AFSetAudioSessionActiveContext reason]
  -[AFSetAudioSessionActiveContext initWithOptions:reason:speechRequestOptions:]
  -[AFSetAudioSessionActiveContext copyWithZone:]
  -[AFSetAudioSessionActiveContext encodeWithCoder:]


_AFSetAudioSessionActiveContextMutation : NSObject <AFSetAudioSessionActiveContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSetAudioSessionActiveContextMutation setOptions:]
  -[_AFSetAudioSessionActiveContextMutation .cxx_destruct]
  -[_AFSetAudioSessionActiveContextMutation init]
  -[_AFSetAudioSessionActiveContextMutation setReason:]
  -[_AFSetAudioSessionActiveContextMutation generate]
  -[_AFSetAudioSessionActiveContextMutation initWithBaseModel:]
  -[_AFSetAudioSessionActiveContextMutation setSpeechRequestOptions:]


AFDismissAlarmRequest : AFSiriRequest
 @property  NSArray *alarmURLs

  // class methods
  +[AFDismissAlarmRequest supportsSecureCoding]

  // instance methods
  -[AFDismissAlarmRequest initWithCoder:]
  -[AFDismissAlarmRequest .cxx_destruct]
  -[AFDismissAlarmRequest createResponse]
  -[AFDismissAlarmRequest alarmURLs]
  -[AFDismissAlarmRequest setAlarmURLs:]
  -[AFDismissAlarmRequest encodeWithCoder:]


AFAssertionContext : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long timestamp
 @property  NSString *reason
 @property  NSDate *effectiveDate
 @property  double expirationDuration
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFAssertionContext supportsSecureCoding]
  +[AFAssertionContext newWithBuilder:]

  // instance methods
  -[AFAssertionContext buildDictionaryRepresentation]
  -[AFAssertionContext effectiveDate]
  -[AFAssertionContext _descriptionWithIndent:]
  -[AFAssertionContext initWithCoder:]
  -[AFAssertionContext initWithDictionaryRepresentation:]
  -[AFAssertionContext .cxx_destruct]
  -[AFAssertionContext initWithTimestamp:reason:effectiveDate:expirationDuration:userInfo:]
  -[AFAssertionContext expirationDuration]
  -[AFAssertionContext mutatedCopyWithMutator:]
  -[AFAssertionContext isEqual:]
  -[AFAssertionContext reason]
  -[AFAssertionContext timestamp]
  -[AFAssertionContext userInfo]
  -[AFAssertionContext copyWithZone:]
  -[AFAssertionContext encodeWithCoder:]


_AFAssertionContextMutation : NSObject <AFAssertionContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAssertionContextMutation setUserInfo:]
  -[_AFAssertionContextMutation .cxx_destruct]
  -[_AFAssertionContextMutation setExpirationDuration:]
  -[_AFAssertionContextMutation init]
  -[_AFAssertionContextMutation setEffectiveDate:]
  -[_AFAssertionContextMutation setReason:]
  -[_AFAssertionContextMutation generate]
  -[_AFAssertionContextMutation initWithBaseModel:]
  -[_AFAssertionContextMutation setTimestamp:]


AFRemoteRequest : NSObject
 @property  AFRequestInfo *info
 @property  NSString *peerIdentifier

  // instance methods
  -[AFRemoteRequest .cxx_destruct]
  -[AFRemoteRequest info]
  -[AFRemoteRequest peerIdentifier]
  -[AFRemoteRequest sendWithCompletion:]
  -[AFRemoteRequest initWithInfo:]
  -[AFRemoteRequest setPeerIdentifier:]


AFSiriTaskExecution : NSObject <AFSiriResponseHandling, NSXPCListenerDelegate, AFSiriRequestFailureHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriTaskExecution .cxx_destruct]
  -[AFSiriTaskExecution init]
  -[AFSiriTaskExecution setCompletionHandler:]
  -[AFSiriTaskExecution _completeWithError:]
  -[AFSiriTaskExecution _completeWithResponse:]
  -[AFSiriTaskExecution _completeWithResponse:error:]
  -[AFSiriTaskExecution handleFailureOfRequest:error:atTime:]
  -[AFSiriTaskExecution handleSiriResponse:atTime:]
  -[AFSiriTaskExecution initWithRequest:taskDeliverer:usageResultListener:]
  -[AFSiriTaskExecution setDeliveryHandler:]
  -[AFSiriTaskExecution start]
  -[AFSiriTaskExecution dealloc]
  -[AFSiriTaskExecution listener:shouldAcceptNewConnection:]


AFExperimentGroup : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *identifier
 @property  unsigned long allocation
 @property  NSDictionary *properties
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFExperimentGroup supportsSecureCoding]
  +[AFExperimentGroup newWithBuilder:]

  // instance methods
  -[AFExperimentGroup buildDictionaryRepresentation]
  -[AFExperimentGroup _descriptionWithIndent:]
  -[AFExperimentGroup initWithCoder:]
  -[AFExperimentGroup initWithDictionaryRepresentation:]
  -[AFExperimentGroup .cxx_destruct]
  -[AFExperimentGroup allocation]
  -[AFExperimentGroup properties]
  -[AFExperimentGroup mutatedCopyWithMutator:]
  -[AFExperimentGroup isEqual:]
  -[AFExperimentGroup identifier]
  -[AFExperimentGroup initWithIdentifier:allocation:properties:]
  -[AFExperimentGroup copyWithZone:]
  -[AFExperimentGroup encodeWithCoder:]


_AFExperimentGroupMutation : NSObject <AFExperimentGroupMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentGroupMutation .cxx_destruct]
  -[_AFExperimentGroupMutation init]
  -[_AFExperimentGroupMutation setAllocation:]
  -[_AFExperimentGroupMutation setProperties:]
  -[_AFExperimentGroupMutation setIdentifier:]
  -[_AFExperimentGroupMutation generate]
  -[_AFExperimentGroupMutation initWithBaseModel:]


AFInstanceInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSUUID *instanceUUID
 @property  long long applicationType
 @property  NSUUID *applicationUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFInstanceInfo supportsSecureCoding]
  +[AFInstanceInfo newWithBuilder:]

  // instance methods
  -[AFInstanceInfo buildDictionaryRepresentation]
  -[AFInstanceInfo _descriptionWithIndent:]
  -[AFInstanceInfo initWithCoder:]
  -[AFInstanceInfo initWithDictionaryRepresentation:]
  -[AFInstanceInfo instanceUUID]
  -[AFInstanceInfo applicationUUID]
  -[AFInstanceInfo .cxx_destruct]
  -[AFInstanceInfo mutatedCopyWithMutator:]
  -[AFInstanceInfo isEqual:]
  -[AFInstanceInfo applicationType]
  -[AFInstanceInfo initWithInstanceUUID:applicationType:applicationUUID:]
  -[AFInstanceInfo copyWithZone:]
  -[AFInstanceInfo encodeWithCoder:]


_AFInstanceInfoMutation : NSObject <AFInstanceInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFInstanceInfoMutation setApplicationUUID:]
  -[_AFInstanceInfoMutation .cxx_destruct]
  -[_AFInstanceInfoMutation init]
  -[_AFInstanceInfoMutation setApplicationType:]
  -[_AFInstanceInfoMutation setInstanceUUID:]
  -[_AFInstanceInfoMutation generate]
  -[_AFInstanceInfoMutation initWithBaseModel:]


AFSiriRequestSucceededResponse : AFSiriResponse

AFWatchdogTimer : NSObject <NSCopying>
  // instance methods
  -[AFWatchdogTimer .cxx_destruct]
  -[AFWatchdogTimer cancelIfNotAlreadyCanceled]
  -[AFWatchdogTimer stop]
  -[AFWatchdogTimer initWithTimeoutInterval:onQueue:timeoutHandler:]
  -[AFWatchdogTimer isStopped]
  -[AFWatchdogTimer reset]
  -[AFWatchdogTimer cancel]
  -[AFWatchdogTimer start]
  -[AFWatchdogTimer dealloc]
  -[AFWatchdogTimer initWithTimeoutInterval:timeoutHandler:]
  -[AFWatchdogTimer copyWithZone:]


AFDisambiguationInfo : NSObject <NSSecureCoding>
 @property  long long version
 @property  NSArray *history

  // class methods
  +[AFDisambiguationInfo supportsSecureCoding]

  // instance methods
  -[AFDisambiguationInfo history]
  -[AFDisambiguationInfo initWithCoder:]
  -[AFDisambiguationInfo .cxx_destruct]
  -[AFDisambiguationInfo init]
  -[AFDisambiguationInfo version]
  -[AFDisambiguationInfo setHistory:]
  -[AFDisambiguationInfo encodeWithCoder:]


AFDisambiguationEvent : NSObject <NSSecureCoding>
 @property  NSString *itemIdentifier
 @property  long long selectionType
 @property  NSDate *date

  // class methods
  +[AFDisambiguationEvent supportsSecureCoding]

  // instance methods
  -[AFDisambiguationEvent setItemIdentifier:]
  -[AFDisambiguationEvent itemIdentifier]
  -[AFDisambiguationEvent initWithCoder:]
  -[AFDisambiguationEvent .cxx_destruct]
  -[AFDisambiguationEvent setDate:]
  -[AFDisambiguationEvent setSelectionType:]
  -[AFDisambiguationEvent selectionType]
  -[AFDisambiguationEvent encodeWithCoder:]
  -[AFDisambiguationEvent date]


AFMultiUserStateSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *vtSatScore
 @property  NSArray *confidenceScores
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMultiUserStateSnapshot supportsSecureCoding]
  +[AFMultiUserStateSnapshot newWithBuilder:]

  // instance methods
  -[AFMultiUserStateSnapshot buildDictionaryRepresentation]
  -[AFMultiUserStateSnapshot ad_shortDescription]
  -[AFMultiUserStateSnapshot serializedBackingStore]
  -[AFMultiUserStateSnapshot _descriptionWithIndent:]
  -[AFMultiUserStateSnapshot initWithCoder:]
  -[AFMultiUserStateSnapshot initWithDictionaryRepresentation:]
  -[AFMultiUserStateSnapshot .cxx_destruct]
  -[AFMultiUserStateSnapshot initWithSerializedBackingStore:]
  -[AFMultiUserStateSnapshot mutatedCopyWithMutator:]
  -[AFMultiUserStateSnapshot isEqual:]
  -[AFMultiUserStateSnapshot initWithVtSatScore:]
  -[AFMultiUserStateSnapshot initWithConfidenceScores:]
  -[AFMultiUserStateSnapshot vtSatScore]
  -[AFMultiUserStateSnapshot confidenceScores]
  -[AFMultiUserStateSnapshot initWithVtSatScore:confidenceScores:]
  -[AFMultiUserStateSnapshot copyWithZone:]
  -[AFMultiUserStateSnapshot encodeWithCoder:]


_AFMultiUserStateSnapshotMutation : NSObject <AFMultiUserStateSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMultiUserStateSnapshotMutation .cxx_destruct]
  -[_AFMultiUserStateSnapshotMutation init]
  -[_AFMultiUserStateSnapshotMutation setVtSatScore:]
  -[_AFMultiUserStateSnapshotMutation setConfidenceScores:]
  -[_AFMultiUserStateSnapshotMutation generate]
  -[_AFMultiUserStateSnapshotMutation initWithBaseModel:]


AFMyriadContext : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long timestamp
 @property  AFMyriadPerceptualAudioHash *perceptualAudioHash
 @property  AFMyriadGoodnessScoreOverrideState *overrideState
 @property  long long activationSource
 @property  unsigned long activationExpirationTime

  // class methods
  +[AFMyriadContext supportsSecureCoding]
  +[AFMyriadContext newWithBuilder:]

  // instance methods
  -[AFMyriadContext _descriptionWithIndent:]
  -[AFMyriadContext initWithCoder:]
  -[AFMyriadContext .cxx_destruct]
  -[AFMyriadContext mutatedCopyWithMutator:]
  -[AFMyriadContext isEqual:]
  -[AFMyriadContext activationSource]
  -[AFMyriadContext activationExpirationTime]
  -[AFMyriadContext perceptualAudioHash]
  -[AFMyriadContext overrideState]
  -[AFMyriadContext initWithTimestamp:perceptualAudioHash:overrideState:activationSource:activationExpirationTime:]
  -[AFMyriadContext timestamp]
  -[AFMyriadContext copyWithZone:]
  -[AFMyriadContext encodeWithCoder:]


_AFMyriadContextMutation : NSObject <AFMyriadContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMyriadContextMutation .cxx_destruct]
  -[_AFMyriadContextMutation init]
  -[_AFMyriadContextMutation setPerceptualAudioHash:]
  -[_AFMyriadContextMutation setOverrideState:]
  -[_AFMyriadContextMutation setActivationSource:]
  -[_AFMyriadContextMutation setActivationExpirationTime:]
  -[_AFMyriadContextMutation generate]
  -[_AFMyriadContextMutation initWithBaseModel:]
  -[_AFMyriadContextMutation setTimestamp:]


AFSiriActivationConnection : NSObject <AFInvalidating, AFSiriActivationService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriActivationConnection _connection]
  -[AFSiriActivationConnection .cxx_destruct]
  -[AFSiriActivationConnection init]
  -[AFSiriActivationConnection _invalidate]
  -[AFSiriActivationConnection initWithServicePort:]
  -[AFSiriActivationConnection prewarmWithRequestInfo:context:completion:]
  -[AFSiriActivationConnection activateWithRequestInfo:context:completion:]
  -[AFSiriActivationConnection deactivateForReason:options:context:completion:]
  -[AFSiriActivationConnection handleContext:completion:]
  -[AFSiriActivationConnection handleIntent:inBackgroundAppWithBundleId:reply:]
  -[AFSiriActivationConnection handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
  -[AFSiriActivationConnection dealloc]
  -[AFSiriActivationConnection invalidate]
  -[AFSiriActivationConnection _connectionInvalidated]
  -[AFSiriActivationConnection _connectionInterrupted]


AFPhonemeMapper : NSObject
  // class methods
  +[AFPhonemeMapper _mapForLanguageCode:]
  +[AFPhonemeMapper _buildRegexMatchingSubstrings:]

  // instance methods
  -[AFPhonemeMapper .cxx_destruct]
  -[AFPhonemeMapper stringByReplacingPhonemesInString:]
  -[AFPhonemeMapper initWithLanguageCode:]


AFPowerAssertionManager : NSObject <AFAssertionCoordinatorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFPowerAssertionManager initWithIdentifier:]
  -[AFPowerAssertionManager _releasePowerAssertion]
  -[AFPowerAssertionManager .cxx_destruct]
  -[AFPowerAssertionManager assertionCoordinator:didAddAssertion:isFirstAssertion:]
  -[AFPowerAssertionManager assertionCoordinator:didActivateAssertion:isFirstAssertion:]
  -[AFPowerAssertionManager assertionCoordinator:didDeactivateAssertion:isLastAssertion:]
  -[AFPowerAssertionManager assertionCoordinator:didRemoveAssertion:isLastAssertion:]
  -[AFPowerAssertionManager takePowerAssertionWithName:]
  -[AFPowerAssertionManager releasePowerAssertionWithName:]
  -[AFPowerAssertionManager releaseAllPowerAssertions]
  -[AFPowerAssertionManager dealloc]
  -[AFPowerAssertionManager _createPowerAssertion]


AFGetTimerRequest : AFSiriRequest
  // class methods
  +[AFGetTimerRequest supportsSecureCoding]

  // instance methods
  -[AFGetTimerRequest createResponseWithTimer:]


AFXPCWrapper : NSObject <NSSecureCoding>
  // class methods
  +[AFXPCWrapper supportsSecureCoding]

  // instance methods
  -[AFXPCWrapper xpcObject]
  -[AFXPCWrapper initWithCoder:]
  -[AFXPCWrapper initWithXPCObject:]
  -[AFXPCWrapper .cxx_destruct]
  -[AFXPCWrapper encodeWithCoder:]


AFLanguageDetectionUserContext : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *currentKeyboard
 @property  NSString *primaryLanguageCode
 @property  NSDictionary *languageCodeOverrides
 @property  BOOL languageToggled
 @property  NSString *prevMessageLanguage
 @property  NSString *globalLastUsedKeyboard
 @property  NSArray *multiLingualKeyboardLanguages
 @property  NSArray *keyboardConvoRecentMessages
 @property  NSArray *dictationLanguages
 @property  NSDictionary *keyboardConversationLanguagePriors
 @property  NSDictionary *keyboardGlobalLanguagePriors
 @property  NSNumber *dictationInputOrigin

  // class methods
  +[AFLanguageDetectionUserContext supportsSecureCoding]
  +[AFLanguageDetectionUserContext defaultContextWithPrimaryLanguage:]

  // instance methods
  -[AFLanguageDetectionUserContext initWithCoder:]
  -[AFLanguageDetectionUserContext userContextLanguageCodeForKeyboardLangauge:overrideLanguageCode:]
  -[AFLanguageDetectionUserContext .cxx_destruct]
  -[AFLanguageDetectionUserContext dictationInputOrigin]
  -[AFLanguageDetectionUserContext setCurrentKeyboard:]
  -[AFLanguageDetectionUserContext setWasLanguageToggled:]
  -[AFLanguageDetectionUserContext setPrimaryLanguageCode:]
  -[AFLanguageDetectionUserContext setMultiLingualKeyboardLanguages:]
  -[AFLanguageDetectionUserContext setGlobalLastUsedKeyboard:]
  -[AFLanguageDetectionUserContext setKeyboardConvoRecentMessages:]
  -[AFLanguageDetectionUserContext setPrevMessageLanguage:]
  -[AFLanguageDetectionUserContext setDictationInputOrigin:]
  -[AFLanguageDetectionUserContext setDictationLanguages:]
  -[AFLanguageDetectionUserContext init]
  -[AFLanguageDetectionUserContext currentKeyboard]
  -[AFLanguageDetectionUserContext dictationLanguages]
  -[AFLanguageDetectionUserContext _removeContextValueForKey:context:]
  -[AFLanguageDetectionUserContext _updateContextValue:forKey:context:]
  -[AFLanguageDetectionUserContext getSiriDictationLanguagesFromLanguages:]
  -[AFLanguageDetectionUserContext _setContextValue:forKey:context:]
  -[AFLanguageDetectionUserContext siriDictationLanguageForLanguage:]
  -[AFLanguageDetectionUserContext languageDetectorUserContext]
  -[AFLanguageDetectionUserContext priorsByReplacingKeyboardLanguage:]
  -[AFLanguageDetectionUserContext _setFinalFilteredDictationLanguages:]
  -[AFLanguageDetectionUserContext _setDictationLanguageCodeMappingCache:]
  -[AFLanguageDetectionUserContext setKeyboardConversationLanguagePriors:]
  -[AFLanguageDetectionUserContext setKeyboardGlobalLanguagePriors:]
  -[AFLanguageDetectionUserContext setLanguageCodeOverrides:]
  -[AFLanguageDetectionUserContext setSimulatingLanguageCodes:]
  -[AFLanguageDetectionUserContext setShouldSimulateLanguageDetectorAssetsAvailability:]
  -[AFLanguageDetectionUserContext _setUserContextChangeBit:]
  -[AFLanguageDetectionUserContext _setLanguageDetectorContext:]
  -[AFLanguageDetectionUserContext languageDetectorContextChangeBits]
  -[AFLanguageDetectionUserContext isUpdateAvailableForLanguageDetectorContext]
  -[AFLanguageDetectionUserContext getContextForAnalytics]
  -[AFLanguageDetectionUserContext getDictationLanguagesForSupportedLocales:error:]
  -[AFLanguageDetectionUserContext finalFilteredDictationLanguages]
  -[AFLanguageDetectionUserContext shouldSimulateLanguageDetectorAssetsAvailability]
  -[AFLanguageDetectionUserContext simulatingLanguageCodes]
  -[AFLanguageDetectionUserContext languageCodeOverrides]
  -[AFLanguageDetectionUserContext wasLanguageToggled]
  -[AFLanguageDetectionUserContext prevMessageLanguage]
  -[AFLanguageDetectionUserContext globalLastUsedKeyboard]
  -[AFLanguageDetectionUserContext multiLingualKeyboardLanguages]
  -[AFLanguageDetectionUserContext keyboardConvoRecentMessages]
  -[AFLanguageDetectionUserContext keyboardConversationLanguagePriors]
  -[AFLanguageDetectionUserContext keyboardGlobalLanguagePriors]
  -[AFLanguageDetectionUserContext copyWithZone:]
  -[AFLanguageDetectionUserContext primaryLanguageCode]
  -[AFLanguageDetectionUserContext encodeWithCoder:]
  -[AFLanguageDetectionUserContext context]


AFAudioSessionAssertionConnection : NSObject <AFInvalidating, AFRelinquishableAssertion>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uuid
 @property  AFAssertionContext *context

  // instance methods
  -[AFAudioSessionAssertionConnection _xpcConnection]
  -[AFAudioSessionAssertionConnection .cxx_destruct]
  -[AFAudioSessionAssertionConnection initWithInstanceContext:acquisitionContext:relinquishmentHandler:]
  -[AFAudioSessionAssertionConnection uuid]
  -[AFAudioSessionAssertionConnection relinquishWithContext:options:]
  -[AFAudioSessionAssertionConnection relinquishWithError:options:]
  -[AFAudioSessionAssertionConnection dealloc]
  -[AFAudioSessionAssertionConnection invalidate]
  -[AFAudioSessionAssertionConnection _acquireWithContext:]
  -[AFAudioSessionAssertionConnection _finalizeWithContext:error:]
  -[AFAudioSessionAssertionConnection _clearXPCConnection]
  -[AFAudioSessionAssertionConnection _relinquishWithContext:error:options:]
  -[AFAudioSessionAssertionConnection handleXPCConnectionInterrupted]
  -[AFAudioSessionAssertionConnection handleXPCConnectionInvalidated]
  -[AFAudioSessionAssertionConnection context]


AFSetTimerRequest : AFSiriRequest
 @property  STTimer *timer

  // class methods
  +[AFSetTimerRequest supportsSecureCoding]

  // instance methods
  -[AFSetTimerRequest initWithCoder:]
  -[AFSetTimerRequest .cxx_destruct]
  -[AFSetTimerRequest timer]
  -[AFSetTimerRequest createResponse]
  -[AFSetTimerRequest setTimer:]
  -[AFSetTimerRequest encodeWithCoder:]


AFGetTimerResponse : AFSiriResponse
 @property  STTimer *timer

  // class methods
  +[AFGetTimerResponse supportsSecureCoding]

  // instance methods
  -[AFGetTimerResponse initWithCoder:]
  -[AFGetTimerResponse .cxx_destruct]
  -[AFGetTimerResponse timer]
  -[AFGetTimerResponse setTimer:]
  -[AFGetTimerResponse encodeWithCoder:]


AFConversationTransaction : NSObject
 @property  NSArray *updatedItemIndexPaths
 @property  NSArray *insertedItemIndexPaths
 @property  NSArray *presentationStateChangedItemIndexPaths

  // instance methods
  -[AFConversationTransaction insertedItemIndexPaths]
  -[AFConversationTransaction .cxx_destruct]
  -[AFConversationTransaction updatedItemIndexPaths]
  -[AFConversationTransaction initWithUpdatedItemIndexPaths:insertedItemIndexPaths:presentationStateChangedItemIndexPaths:]
  -[AFConversationTransaction presentationStateChangedItemIndexPaths]


AFError : NSObject
  // class methods
  +[AFError new]
  +[AFError errorWithCode:description:underlyingError:]
  +[AFError errorWithCode:description:]
  +[AFError errorWithCode:]
  +[AFError errorWithCode:description:underlyingErrors:]

  // instance methods
  -[AFError init]


AFAudioPowerXPCProvider : NSObject <AFAudioPowerProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFAudioPowerXPCProvider .cxx_destruct]
  -[AFAudioPowerXPCProvider willBeginAccessPower]
  -[AFAudioPowerXPCProvider getAveragePower:andPeakPower:]
  -[AFAudioPowerXPCProvider didEndAccessPower]
  -[AFAudioPowerXPCProvider initWithXPCWrapper:]


_AFAudioPowerXPCSharedMemory : NSObject
 @property  float averagePower
 @property  float peakPower

  // instance methods
  -[_AFAudioPowerXPCSharedMemory averagePower]
  -[_AFAudioPowerXPCSharedMemory initWithXPCObject:]
  -[_AFAudioPowerXPCSharedMemory peakPower]
  -[_AFAudioPowerXPCSharedMemory dealloc]
  -[_AFAudioPowerXPCSharedMemory _destroyMapping]


AFContextManager : NSObject
  // class methods
  +[AFContextManager defaultContextManager]

  // instance methods
  -[AFContextManager nothing]
  -[AFContextManager _serverName]
  -[AFContextManager .cxx_destruct]
  -[AFContextManager _collateContexts]
  -[AFContextManager removeContextProvider:]
  -[AFContextManager init]
  -[AFContextManager addContextProvider:]
  -[AFContextManager _collateContextsIntoArray:]
  -[AFContextManager _startListening]
  -[AFContextManager _stopListening]
  -[AFContextManager startCenter:]
  -[AFContextManager _shutdownServer]
  -[AFContextManager dealloc]


AFEndpointInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *identifier
 @property  NSString *mediaRouteIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFEndpointInfo supportsSecureCoding]
  +[AFEndpointInfo newWithBuilder:]

  // instance methods
  -[AFEndpointInfo buildDictionaryRepresentation]
  -[AFEndpointInfo mediaRouteIdentifier]
  -[AFEndpointInfo _descriptionWithIndent:]
  -[AFEndpointInfo initWithCoder:]
  -[AFEndpointInfo initWithDictionaryRepresentation:]
  -[AFEndpointInfo .cxx_destruct]
  -[AFEndpointInfo mutatedCopyWithMutator:]
  -[AFEndpointInfo isEqual:]
  -[AFEndpointInfo identifier]
  -[AFEndpointInfo copyWithZone:]
  -[AFEndpointInfo initWithIdentifier:mediaRouteIdentifier:]
  -[AFEndpointInfo encodeWithCoder:]


_AFEndpointInfoMutation : NSObject <AFEndpointInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFEndpointInfoMutation .cxx_destruct]
  -[_AFEndpointInfoMutation init]
  -[_AFEndpointInfoMutation setMediaRouteIdentifier:]
  -[_AFEndpointInfoMutation setIdentifier:]
  -[_AFEndpointInfoMutation generate]
  -[_AFEndpointInfoMutation initWithBaseModel:]


AFUserNotificationProvider : NSObject <AFUserNotificationServiceDelegate>
  // instance methods
  -[AFUserNotificationProvider _connection]
  -[AFUserNotificationProvider .cxx_destruct]
  -[AFUserNotificationProvider init]
  -[AFUserNotificationProvider withdrawNotificationRequestWithIdentifier:]
  -[AFUserNotificationProvider receivedNotificationResponse:]
  -[AFUserNotificationProvider postNotificationRequest:responseHandler:]


AFAccessibilityState : NSObject <NSCopying, NSSecureCoding>
 @property  long long isVoiceOverTouchEnabled
 @property  long long isVibrationDisabled

  // class methods
  +[AFAccessibilityState supportsSecureCoding]
  +[AFAccessibilityState newWithBuilder:]

  // instance methods
  -[AFAccessibilityState _descriptionWithIndent:]
  -[AFAccessibilityState initWithCoder:]
  -[AFAccessibilityState mutatedCopyWithMutator:]
  -[AFAccessibilityState isEqual:]
  -[AFAccessibilityState isVoiceOverTouchEnabled]
  -[AFAccessibilityState copyWithZone:]
  -[AFAccessibilityState isVibrationDisabled]
  -[AFAccessibilityState initWithIsVoiceOverTouchEnabled:isVibrationDisabled:]
  -[AFAccessibilityState encodeWithCoder:]


_AFAccessibilityStateMutation : NSObject <AFAccessibilityStateMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAccessibilityStateMutation .cxx_destruct]
  -[_AFAccessibilityStateMutation init]
  -[_AFAccessibilityStateMutation generate]
  -[_AFAccessibilityStateMutation setIsVibrationDisabled:]
  -[_AFAccessibilityStateMutation setIsVoiceOverTouchEnabled:]
  -[_AFAccessibilityStateMutation initWithBaseModel:]


AFPersonalUserSettings : NSObject <NSSecureCoding>
 @property  NSString *temperatureUnit
 @property  BOOL twentyFourHourTimeDisplay
 @property  NSString *region
 @property  NSString *countryCode
 @property  NSString *preferredLanguage

  // class methods
  +[AFPersonalUserSettings supportsSecureCoding]

  // instance methods
  -[AFPersonalUserSettings setRegion:]
  -[AFPersonalUserSettings temperatureUnit]
  -[AFPersonalUserSettings setCountryCode:]
  -[AFPersonalUserSettings region]
  -[AFPersonalUserSettings initWithCoder:]
  -[AFPersonalUserSettings countryCode]
  -[AFPersonalUserSettings setTwentyFourHourTimeDisplay:]
  -[AFPersonalUserSettings .cxx_destruct]
  -[AFPersonalUserSettings setTemperatureUnit:]
  -[AFPersonalUserSettings twentyFourHourTimeDisplay]
  -[AFPersonalUserSettings preferredLanguage]
  -[AFPersonalUserSettings setPreferredLanguage:]
  -[AFPersonalUserSettings encodeWithCoder:]


AFUserUtterance : NSObject
 @property  NSDictionary *correctionIdentifier
 @property  NSArray *dictationResult
 @property  NSArray *allPhrases

  // instance methods
  -[AFUserUtterance .cxx_destruct]
  -[AFUserUtterance correctionIdentifier]
  -[AFUserUtterance allPhrases]
  -[AFUserUtterance dictationResult]
  -[AFUserUtterance speechTokensForUtteranceAtIndex:]
  -[AFUserUtterance rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseTokenList:]
  -[AFUserUtterance rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:]
  -[AFUserUtterance longestCommonSubsequenceBetweenList:andList:]
  -[AFUserUtterance textOfUtteranceAtIndex:]
  -[AFUserUtterance _updatePhraseswithSwapIndices:]
  -[AFUserUtterance bestTextInterpretation]
  -[AFUserUtterance _updateUtteranceswithAlternativeUtteranceAtIndex:swapIndices:]
  -[AFUserUtterance initWithPhrases:correctionIdentifier:]
  -[AFUserUtterance initWithPhrases:utterances:]
  -[AFUserUtterance initWithPhrases:sentenceConfidence:utterances:correctionIdentifier:]
  -[AFUserUtterance initWithTokens:correctionIdentifier:]
  -[AFUserUtterance initWithString:correctionIdentifier:]
  -[AFUserUtterance numberOfAlternativeUtterances]
  -[AFUserUtterance rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:]
  -[AFUserUtterance streamingTokens]
  -[AFUserUtterance rangeListOfDifferingTextFromSpeechInterpretation:comparedToBaseUtteranceAtIndex:]
  -[AFUserUtterance interpretationOfUtteranceAtIndex:]
  -[AFUserUtterance allRecognitionStringsAndScores]
  -[AFUserUtterance updateDictationResult:withAlternativeUtteranceAtIndex:]


AFUserUtteranceSelectionResults : NSObject <NSSecureCoding>
 @property  NSNumber *combinedRank
 @property  NSNumber *combinedScore
 @property  NSString *interactionId
 @property  NSNumber *onDeviceUtterancesPresent
 @property  NSNumber *originalRank
 @property  NSNumber *originalScore
 @property  NSString *previousUtterance
 @property  NSString *sessionId
 @property  NSString *utteranceSource

  // class methods
  +[AFUserUtteranceSelectionResults supportsSecureCoding]

  // instance methods
  -[AFUserUtteranceSelectionResults setSessionId:]
  -[AFUserUtteranceSelectionResults sessionId]
  -[AFUserUtteranceSelectionResults initWithCoder:]
  -[AFUserUtteranceSelectionResults combinedScore]
  -[AFUserUtteranceSelectionResults .cxx_destruct]
  -[AFUserUtteranceSelectionResults combinedRank]
  -[AFUserUtteranceSelectionResults setCombinedRank:]
  -[AFUserUtteranceSelectionResults setCombinedScore:]
  -[AFUserUtteranceSelectionResults interactionId]
  -[AFUserUtteranceSelectionResults originalRank]
  -[AFUserUtteranceSelectionResults setInteractionId:]
  -[AFUserUtteranceSelectionResults onDeviceUtterancesPresent]
  -[AFUserUtteranceSelectionResults setOnDeviceUtterancesPresent:]
  -[AFUserUtteranceSelectionResults setOriginalRank:]
  -[AFUserUtteranceSelectionResults originalScore]
  -[AFUserUtteranceSelectionResults setOriginalScore:]
  -[AFUserUtteranceSelectionResults previousUtterance]
  -[AFUserUtteranceSelectionResults setPreviousUtterance:]
  -[AFUserUtteranceSelectionResults utteranceSource]
  -[AFUserUtteranceSelectionResults setUtteranceSource:]
  -[AFUserUtteranceSelectionResults encodeWithCoder:]


AFClockTimer : NSObject <AFClockItem, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSUUID *itemID
 @property  NSURL *itemURL
 @property  BOOL isFiring
 @property  NSDate *firedDate
 @property  NSDate *dismissedDate
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *timerID
 @property  NSURL *timerURL
 @property  BOOL isFiring
 @property  NSString *title
 @property  long long state
 @property  double duration
 @property  long long type
 @property  double fireTimeInterval
 @property  NSDate *fireDate
 @property  NSDate *firedDate
 @property  NSDate *dismissedDate
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFClockTimer supportsSecureCoding]
  +[AFClockTimer newWithBuilder:]

  // instance methods
  -[AFClockTimer buildDictionaryRepresentation]
  -[AFClockTimer firedDate]
  -[AFClockTimer _descriptionWithIndent:]
  -[AFClockTimer dismissedDate]
  -[AFClockTimer initWithCoder:]
  -[AFClockTimer initWithDictionaryRepresentation:]
  -[AFClockTimer .cxx_destruct]
  -[AFClockTimer itemID]
  -[AFClockTimer isFiring]
  -[AFClockTimer mutatedCopyWithMutator:]
  -[AFClockTimer isEqual:]
  -[AFClockTimer timerURL]
  -[AFClockTimer state]
  -[AFClockTimer title]
  -[AFClockTimer type]
  -[AFClockTimer fireDate]
  -[AFClockTimer itemURL]
  -[AFClockTimer timerID]
  -[AFClockTimer copyWithZone:]
  -[AFClockTimer fireTimeInterval]
  -[AFClockTimer duration]
  -[AFClockTimer encodeWithCoder:]
  -[AFClockTimer initWithTimerID:timerURL:isFiring:title:state:duration:type:fireTimeInterval:fireDate:firedDate:dismissedDate:lastModifiedDate:]
  -[AFClockTimer lastModifiedDate]


_AFClockTimerMutation : NSObject <AFClockTimerMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClockTimerMutation setFireDate:]
  -[_AFClockTimerMutation setFiredDate:]
  -[_AFClockTimerMutation setLastModifiedDate:]
  -[_AFClockTimerMutation setDismissedDate:]
  -[_AFClockTimerMutation setTitle:]
  -[_AFClockTimerMutation setType:]
  -[_AFClockTimerMutation .cxx_destruct]
  -[_AFClockTimerMutation setDuration:]
  -[_AFClockTimerMutation setState:]
  -[_AFClockTimerMutation init]
  -[_AFClockTimerMutation setIsFiring:]
  -[_AFClockTimerMutation setTimerID:]
  -[_AFClockTimerMutation setFireTimeInterval:]
  -[_AFClockTimerMutation generate]
  -[_AFClockTimerMutation setTimerURL:]
  -[_AFClockTimerMutation initWithBaseModel:]


AFAnalyticsConnection : NSObject <AFAnalyticsServiceDelegate, AFAnalyticsService>
 @property  BOOL needsCleanUpConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFAnalyticsConnection _idleTimerFired]
  -[AFAnalyticsConnection _connection]
  -[AFAnalyticsConnection _stopIdleTimer]
  -[AFAnalyticsConnection _handleSuccessCallbackForEvents:completion:]
  -[AFAnalyticsConnection _willStartSendingEvents:]
  -[AFAnalyticsConnection flushStagedEventsWithReply:]
  -[AFAnalyticsConnection .cxx_destruct]
  -[AFAnalyticsConnection logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]
  -[AFAnalyticsConnection needsCleanUpConnection]
  -[AFAnalyticsConnection setNeedsCleanUpConnection:]
  -[AFAnalyticsConnection _handleFailureCallbackForEvents:error:numberOfRetries:completion:]
  -[AFAnalyticsConnection _didFinishSendingEvents:]
  -[AFAnalyticsConnection init]
  -[AFAnalyticsConnection boostQueuedEvents:]
  -[AFAnalyticsConnection _cleanUpConnectionIfNeeded]
  -[AFAnalyticsConnection _cleanUpConnection]
  -[AFAnalyticsConnection beginEventsGrouping]
  -[AFAnalyticsConnection _sendEvents:numberOfRetries:completion:]
  -[AFAnalyticsConnection dealloc]
  -[AFAnalyticsConnection stageEvents:completion:]
  -[AFAnalyticsConnection _connectionInvalidated]
  -[AFAnalyticsConnection endEventsGrouping]
  -[AFAnalyticsConnection _startIdleTimer]
  -[AFAnalyticsConnection stageUEIEventData:timestamp:]
  -[AFAnalyticsConnection _connectionInterrupted]


AFSyncInfo : NSObject <NSSecureCoding>
 @property  NSString *anchor
 @property  NSString *validity
 @property  long long count
 @property  NSString *key
 @property  SASyncAppMetaData *appMetadata
 @property  BOOL targetIsLocal
 @property  BOOL forVerification
 @property  NSSet *reasons

  // class methods
  +[AFSyncInfo supportsSecureCoding]

  // instance methods
  -[AFSyncInfo validity]
  -[AFSyncInfo setKey:]
  -[AFSyncInfo initWithCoder:]
  -[AFSyncInfo setAnchor:]
  -[AFSyncInfo reasons]
  -[AFSyncInfo .cxx_destruct]
  -[AFSyncInfo count]
  -[AFSyncInfo anchor]
  -[AFSyncInfo setValidity:]
  -[AFSyncInfo key]
  -[AFSyncInfo setReasons:]
  -[AFSyncInfo appMetadata]
  -[AFSyncInfo setCount:]
  -[AFSyncInfo encodeWithCoder:]
  -[AFSyncInfo setAppMetadata:]
  -[AFSyncInfo initWithAnchor:forcingReset:]
  -[AFSyncInfo targetIsLocal]
  -[AFSyncInfo setTargetIsLocal:]
  -[AFSyncInfo forVerification]
  -[AFSyncInfo setForVerification:]


AFSpeechTestRequestOptions : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *jitContext
 @property  NSString *overrideModelPath

  // class methods
  +[AFSpeechTestRequestOptions supportsSecureCoding]
  +[AFSpeechTestRequestOptions newWithBuilder:]

  // instance methods
  -[AFSpeechTestRequestOptions _descriptionWithIndent:]
  -[AFSpeechTestRequestOptions initWithCoder:]
  -[AFSpeechTestRequestOptions .cxx_destruct]
  -[AFSpeechTestRequestOptions mutatedCopyWithMutator:]
  -[AFSpeechTestRequestOptions isEqual:]
  -[AFSpeechTestRequestOptions copyWithZone:]
  -[AFSpeechTestRequestOptions encodeWithCoder:]
  -[AFSpeechTestRequestOptions jitContext]
  -[AFSpeechTestRequestOptions overrideModelPath]
  -[AFSpeechTestRequestOptions initWithJitContext:overrideModelPath:]


_AFSpeechTestRequestOptionsMutation : NSObject <AFSpeechTestRequestOptionsMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechTestRequestOptionsMutation setOverrideModelPath:]
  -[_AFSpeechTestRequestOptionsMutation .cxx_destruct]
  -[_AFSpeechTestRequestOptionsMutation init]
  -[_AFSpeechTestRequestOptionsMutation generate]
  -[_AFSpeechTestRequestOptionsMutation initWithBaseModel:]
  -[_AFSpeechTestRequestOptionsMutation setJitContext:]


AFSpeechPackage : NSObject <NSCopying, NSSecureCoding>
 @property  AFSpeechRecognition *recognition
 @property  AFSpeechRecognition *unfilteredRecognition
 @property  AFSpeechRecognition *rawRecognition
 @property  AFSpeechAudioAnalytics *audioAnalytics
 @property  BOOL isFinal
 @property  double utteranceStart
 @property  AFSpeechLatticeMitigatorResult *latticeMitigatorResult

  // class methods
  +[AFSpeechPackage supportsSecureCoding]

  // instance methods
  -[AFSpeechPackage initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:]
  -[AFSpeechPackage unfilteredRecognition]
  -[AFSpeechPackage audioAnalytics]
  -[AFSpeechPackage initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:]
  -[AFSpeechPackage initWithRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:]
  -[AFSpeechPackage rawRecognition]
  -[AFSpeechPackage initWithCoder:]
  -[AFSpeechPackage initWithRecognition:unfilteredRecognition:rawRecognition:audioAnalytics:isFinal:utteranceStart:latticeMitigatorResult:]
  -[AFSpeechPackage utteranceStart]
  -[AFSpeechPackage latticeMitigatorResult]
  -[AFSpeechPackage .cxx_destruct]
  -[AFSpeechPackage dictionaryRepresentation]
  -[AFSpeechPackage isFinal]
  -[AFSpeechPackage recognition]
  -[AFSpeechPackage copyWithZone:]
  -[AFSpeechPackage encodeWithCoder:]


AFSpeechRecordingAlertBehavior : NSObject <NSCopying, NSSecureCoding>
 @property  long long style
 @property  long long beepSoundID

  // class methods
  +[AFSpeechRecordingAlertBehavior supportsSecureCoding]
  +[AFSpeechRecordingAlertBehavior newWithBuilder:]

  // instance methods
  -[AFSpeechRecordingAlertBehavior _descriptionWithIndent:]
  -[AFSpeechRecordingAlertBehavior initWithCoder:]
  -[AFSpeechRecordingAlertBehavior beepSoundID]
  -[AFSpeechRecordingAlertBehavior initWithStyle:beepSoundID:]
  -[AFSpeechRecordingAlertBehavior mutatedCopyWithMutator:]
  -[AFSpeechRecordingAlertBehavior isEqual:]
  -[AFSpeechRecordingAlertBehavior copyWithZone:]
  -[AFSpeechRecordingAlertBehavior style]
  -[AFSpeechRecordingAlertBehavior encodeWithCoder:]


_AFSpeechRecordingAlertBehaviorMutation : NSObject <AFSpeechRecordingAlertBehaviorMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechRecordingAlertBehaviorMutation setBeepSoundID:]
  -[_AFSpeechRecordingAlertBehaviorMutation .cxx_destruct]
  -[_AFSpeechRecordingAlertBehaviorMutation setStyle:]
  -[_AFSpeechRecordingAlertBehaviorMutation init]
  -[_AFSpeechRecordingAlertBehaviorMutation generate]
  -[_AFSpeechRecordingAlertBehaviorMutation initWithBaseModel:]


AFSpeechInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  SASSpeechRecognized *speechRecognizedCommand
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSpeechInfo supportsSecureCoding]
  +[AFSpeechInfo newWithBuilder:]

  // instance methods
  -[AFSpeechInfo buildDictionaryRepresentation]
  -[AFSpeechInfo _descriptionWithIndent:]
  -[AFSpeechInfo initWithCoder:]
  -[AFSpeechInfo speechRecognizedCommand]
  -[AFSpeechInfo initWithSpeechRecognizedCommand:]
  -[AFSpeechInfo initWithDictionaryRepresentation:]
  -[AFSpeechInfo .cxx_destruct]
  -[AFSpeechInfo mutatedCopyWithMutator:]
  -[AFSpeechInfo isEqual:]
  -[AFSpeechInfo copyWithZone:]
  -[AFSpeechInfo encodeWithCoder:]


_AFSpeechInfoMutation : NSObject <AFSpeechInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechInfoMutation setSpeechRecognizedCommand:]
  -[_AFSpeechInfoMutation .cxx_destruct]
  -[_AFSpeechInfoMutation init]
  -[_AFSpeechInfoMutation generate]
  -[_AFSpeechInfoMutation initWithBaseModel:]


AFMyriadPerceptualAudioHash : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data

  // class methods
  +[AFMyriadPerceptualAudioHash supportsSecureCoding]
  +[AFMyriadPerceptualAudioHash newWithBuilder:]

  // instance methods
  -[AFMyriadPerceptualAudioHash _descriptionWithIndent:]
  -[AFMyriadPerceptualAudioHash initWithCoder:]
  -[AFMyriadPerceptualAudioHash .cxx_destruct]
  -[AFMyriadPerceptualAudioHash mutatedCopyWithMutator:]
  -[AFMyriadPerceptualAudioHash data]
  -[AFMyriadPerceptualAudioHash isEqual:]
  -[AFMyriadPerceptualAudioHash initWithData:]
  -[AFMyriadPerceptualAudioHash copyWithZone:]
  -[AFMyriadPerceptualAudioHash encodeWithCoder:]


_AFMyriadPerceptualAudioHashMutation : NSObject <AFMyriadPerceptualAudioHashMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMyriadPerceptualAudioHashMutation .cxx_destruct]
  -[_AFMyriadPerceptualAudioHashMutation init]
  -[_AFMyriadPerceptualAudioHashMutation setData:]
  -[_AFMyriadPerceptualAudioHashMutation generate]
  -[_AFMyriadPerceptualAudioHashMutation initWithBaseModel:]


AFDictionarySchema : NSObject
  // instance methods
  -[AFDictionarySchema .cxx_destruct]
  -[AFDictionarySchema init]
  -[AFDictionarySchema coerceObject:error:]
  -[AFDictionarySchema setObjectCoercion:forKey:]


AFSpeechPhrase : NSObject <NSSecureCoding>
 @property  NSArray *interpretations
 @property  BOOL isLowConfidence

  // class methods
  +[AFSpeechPhrase supportsSecureCoding]

  // instance methods
  -[AFSpeechPhrase initWithCoder:]
  -[AFSpeechPhrase setInterpretations:]
  -[AFSpeechPhrase .cxx_destruct]
  -[AFSpeechPhrase dictionaryRepresentation]
  -[AFSpeechPhrase setIsLowConfidence:]
  -[AFSpeechPhrase interpretations]
  -[AFSpeechPhrase isEqual:]
  -[AFSpeechPhrase isLowConfidence]
  -[AFSpeechPhrase initWithInterpretations:isLowConfidence:]
  -[AFSpeechPhrase bestInterpretation]
  -[AFSpeechPhrase firstInterpretation]
  -[AFSpeechPhrase allInterpretationStringsAndScores]
  -[AFSpeechPhrase encodeWithCoder:]


AFSpeechUtterance : NSObject <NSSecureCoding>
 @property  NSArray *interpretationIndices
 @property  long long confidenceScore
 @property  long long source

  // class methods
  +[AFSpeechUtterance supportsSecureCoding]

  // instance methods
  -[AFSpeechUtterance initWithCoder:]
  -[AFSpeechUtterance confidenceScore]
  -[AFSpeechUtterance setInterpretationIndices:]
  -[AFSpeechUtterance setConfidenceScore:]
  -[AFSpeechUtterance .cxx_destruct]
  -[AFSpeechUtterance dictionaryRepresentation]
  -[AFSpeechUtterance isEqual:]
  -[AFSpeechUtterance setSource:]
  -[AFSpeechUtterance interpretationIndices]
  -[AFSpeechUtterance initWithInterpretationIndices:confidenceScore:]
  -[AFSpeechUtterance source]
  -[AFSpeechUtterance encodeWithCoder:]


AFSpeechInterpretation : NSObject <NSSecureCoding>
 @property  NSArray *tokens

  // class methods
  +[AFSpeechInterpretation supportsSecureCoding]

  // instance methods
  -[AFSpeechInterpretation tokens]
  -[AFSpeechInterpretation initWithCoder:]
  -[AFSpeechInterpretation confidenceScore]
  -[AFSpeechInterpretation .cxx_destruct]
  -[AFSpeechInterpretation dictionaryRepresentation]
  -[AFSpeechInterpretation setTokens:]
  -[AFSpeechInterpretation isEqual:]
  -[AFSpeechInterpretation averageConfidenceScore]
  -[AFSpeechInterpretation text]
  -[AFSpeechInterpretation confidenceScoreAvg]
  -[AFSpeechInterpretation confidenceScoreMax]
  -[AFSpeechInterpretation confidenceScoreMin]
  -[AFSpeechInterpretation encodeWithCoder:]


AFSpeechToken : NSObject <NSSecureCoding>
 @property  NSString *text
 @property  NSString *phoneSequence
 @property  NSString *ipaPhoneSequence
 @property  long long confidenceScore
 @property  double startTime
 @property  double silenceStartTime
 @property  double endTime
 @property  BOOL removeSpaceBefore
 @property  BOOL removeSpaceAfter

  // class methods
  +[AFSpeechToken supportsSecureCoding]

  // instance methods
  -[AFSpeechToken setText:]
  -[AFSpeechToken aceToken]
  -[AFSpeechToken initWithCoder:]
  -[AFSpeechToken endTime]
  -[AFSpeechToken setStartTime:]
  -[AFSpeechToken phoneSequence]
  -[AFSpeechToken confidenceScore]
  -[AFSpeechToken setPhoneSequence:]
  -[AFSpeechToken silenceStartTime]
  -[AFSpeechToken setSilenceStartTime:]
  -[AFSpeechToken setRemoveSpaceAfter:]
  -[AFSpeechToken ipaPhoneSequence]
  -[AFSpeechToken setIpaPhoneSequence:]
  -[AFSpeechToken setConfidenceScore:]
  -[AFSpeechToken setEndTime:]
  -[AFSpeechToken .cxx_destruct]
  -[AFSpeechToken dictionaryRepresentation]
  -[AFSpeechToken setRemoveSpaceBefore:]
  -[AFSpeechToken removeSpaceBefore]
  -[AFSpeechToken removeSpaceAfter]
  -[AFSpeechToken isEqual:]
  -[AFSpeechToken startTime]
  -[AFSpeechToken text]
  -[AFSpeechToken encodeWithCoder:]


AFDeleteSiriHistoryContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *successTitle
 @property  NSString *successBody
 @property  NSString *successButtonText
 @property  NSString *errorTitle
 @property  NSString *errorBody
 @property  NSString *errorButtonText

  // class methods
  +[AFDeleteSiriHistoryContext supportsSecureCoding]
  +[AFDeleteSiriHistoryContext newWithBuilder:]

  // instance methods
  -[AFDeleteSiriHistoryContext _descriptionWithIndent:]
  -[AFDeleteSiriHistoryContext initWithCoder:]
  -[AFDeleteSiriHistoryContext successTitle]
  -[AFDeleteSiriHistoryContext successBody]
  -[AFDeleteSiriHistoryContext successButtonText]
  -[AFDeleteSiriHistoryContext errorTitle]
  -[AFDeleteSiriHistoryContext errorButtonText]
  -[AFDeleteSiriHistoryContext initWithSuccessTitle:successBody:successButtonText:errorTitle:errorBody:errorButtonText:]
  -[AFDeleteSiriHistoryContext .cxx_destruct]
  -[AFDeleteSiriHistoryContext mutatedCopyWithMutator:]
  -[AFDeleteSiriHistoryContext isEqual:]
  -[AFDeleteSiriHistoryContext errorBody]
  -[AFDeleteSiriHistoryContext copyWithZone:]
  -[AFDeleteSiriHistoryContext encodeWithCoder:]


_AFDeleteSiriHistoryContextMutation : NSObject <AFDeleteSiriHistoryContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFDeleteSiriHistoryContextMutation .cxx_destruct]
  -[_AFDeleteSiriHistoryContextMutation setSuccessTitle:]
  -[_AFDeleteSiriHistoryContextMutation setSuccessBody:]
  -[_AFDeleteSiriHistoryContextMutation setSuccessButtonText:]
  -[_AFDeleteSiriHistoryContextMutation setErrorTitle:]
  -[_AFDeleteSiriHistoryContextMutation setErrorBody:]
  -[_AFDeleteSiriHistoryContextMutation setErrorButtonText:]
  -[_AFDeleteSiriHistoryContextMutation init]
  -[_AFDeleteSiriHistoryContextMutation generate]
  -[_AFDeleteSiriHistoryContextMutation initWithBaseModel:]


AFPreferences : NSObject
  // class methods
  +[AFPreferences sharedPreferencesWithInstanceContext:]
  +[AFPreferences sharedPreferences]

  // instance methods
  -[AFPreferences setAnnounceNotificationsTemporarilyDisabledUntil:platform:]
  -[AFPreferences setCloudSyncEnabled:]
  -[AFPreferences getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:]
  -[AFPreferences setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
  -[AFPreferences setSpokenNotificationIsAlwaysOpportune:]
  -[AFPreferences setOutputVoice:]
  -[AFPreferences setAnnounceNotificationsInCarPlayTemporarilyDisabled:]
  -[AFPreferences getAnnounceNotificationsInCarPlayTypeWithCompletion:]
  -[AFPreferences getOfflineDictationStatusWithCompletion:]
  -[AFPreferences clearAnnounceNotificationsInCarPlayType]
  -[AFPreferences setSpokenNotificationShouldSkipTriggerlessReplies:]
  -[AFPreferences setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:]
  -[AFPreferences removeConfigOverrideForKey:]
  -[AFPreferences getExperimentForConfigurationIdentifier:completion:]
  -[AFPreferences setAnnounceNotificationsInCarPlayType:]
  -[AFPreferences getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:]
  -[AFPreferences clearAnnounceNotificationsInCarPlayTemporarilyDisabled]
  -[AFPreferences siriDebugUIEnabled]
  -[AFPreferences getSpokenNotificationIsAlwaysOpportuneWithCompletion:]
  -[AFPreferences setAssistantIsEnabled:]
  -[AFPreferences clearSpokenNotificationTemporarilyDisabledStatus]
  -[AFPreferences setNanoTTSSpeakerVolume:]
  -[AFPreferences setSpokenNotificationTemporarilyDisabledForApp:until:]
  -[AFPreferences siriDataSharingOptInStatusHistory]
  -[AFPreferences synchronizeVoiceServicesLanguageCode]
  -[AFPreferences _assistantEnablementDidChangeExternally]
  -[AFPreferences setIgnoreMyriadPlatformBias:]
  -[AFPreferences myriadDeviceAdjust]
  -[AFPreferences setDismissWhenFaceAttentionIsLostEnabled:]
  -[AFPreferences setCurareOrchestrationEnabled:]
  -[AFPreferences suppressAssistantOptIn]
  -[AFPreferences setEnableNonFullScreenAppearance:]
  -[AFPreferences crownActivationEnabled]
  -[AFPreferences showServerOnUI]
  -[AFPreferences alwaysObscureBackgroundContentWhenActive]
  -[AFPreferences setSpokenNotificationSkipTriggerlessReplyConfirmation:]
  -[AFPreferences dismissWhenFaceAttentionIsLostEnabled]
  -[AFPreferences setOfflineDictationStatus:]
  -[AFPreferences initWithInstanceContext:]
  -[AFPreferences setLanguageCode:]
  -[AFPreferences assistantIsEnabled]
  -[AFPreferences setLanguageDetectorEnabled:]
  -[AFPreferences setAutoDismissal2018Enabled:]
  -[AFPreferences myriadDeviceGroup]
  -[AFPreferences myriadCoordinationEnabled]
  -[AFPreferences _setDictationIsAllowed:]
  -[AFPreferences listenAfterSpeakingDisabled]
  -[AFPreferences nanoUseDeviceSpeakerForTTS]
  -[AFPreferences setNetworkLoggingEnabled:]
  -[AFPreferences setNanoSiriDataSharingOptInStatus:]
  -[AFPreferences setPreferOnlineRecognitionEnabled:]
  -[AFPreferences showsHoldToTalkIndicator]
  -[AFPreferences setListenAfterSpeakingDisabled:]
  -[AFPreferences _bestSupportedLanguageCodeForLanguageCode:isGoodFit:]
  -[AFPreferences setHandsOnIdleTimeInterval:]
  -[AFPreferences setSuppressAssistantOptIn:]
  -[AFPreferences setMyriadDeviceDelay:]
  -[AFPreferences setMyriadLastWin]
  -[AFPreferences includeProbePacketCaptureForABC]
  -[AFPreferences cloudSyncEnabledModificationDate]
  -[AFPreferences setNanoLanguageCode:]
  -[AFPreferences mediaPlaybackEnabled]
  -[AFPreferences setSuppressDictationOptIn:]
  -[AFPreferences limitedAudioLoggingEnabled]
  -[AFPreferences setShowServerOnUI:]
  -[AFPreferences getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:]
  -[AFPreferences myriadDuckingEnabled]
  -[AFPreferences enableNonFullScreenAppearance]
  -[AFPreferences ignoreServerManualEndpointingThreshold]
  -[AFPreferences dictationSLSLanguagesEnabled]
  -[AFPreferences myriadDeviceClass]
  -[AFPreferences myriadDeviceDelay]
  -[AFPreferences setOpportuneSpeakingTimeoutInterval:]
  -[AFPreferences setManualEndpointingThreshold:]
  -[AFPreferences setDebugButtonIsEnabled:]
  -[AFPreferences companionConnectionsOverBLEEnabled]
  -[AFPreferences autoDismissalExtendedIdleTimeout]
  -[AFPreferences supplementalLanguagesModificationDate]
  -[AFPreferences dismissWhenDeviceIsLoweredEnabled]
  -[AFPreferences setOnDeviceDictationAvailableAlertPresented:]
  -[AFPreferences setInternalUserClassification:]
  -[AFPreferences setMyriadTestDeviceDelay:]
  -[AFPreferences setShowsHoldToTalkIndicator:]
  -[AFPreferences nanoDictationEnabled]
  -[AFPreferences .cxx_destruct]
  -[AFPreferences myriadMaxNoOperationDelay]
  -[AFPreferences setEnableDragAndDrop:]
  -[AFPreferences setMyriadDeviceVTEndTimeDistanceThreshold:]
  -[AFPreferences setAutoDismissalIdleTimeout:]
  -[AFPreferences bestSupportedLanguageCodeForLanguageCode:]
  -[AFPreferences setSpokenNotificationsProxCardSeen]
  -[AFPreferences setFileLoggingIsEnabled:]
  -[AFPreferences setAlwaysObscureBackgroundContentWhenActive:]
  -[AFPreferences getHomeAccessorySiriDataSharingChangeLog]
  -[AFPreferences _languagePreferencesForCurrentSystemConfiguration]
  -[AFPreferences myriadCoordinationEnabledForAccessoryLogging]
  -[AFPreferences instanceContext]
  -[AFPreferences myriadServerHasProvisioned]
  -[AFPreferences supplementalLanguageDictionaryForProduct:]
  -[AFPreferences setNanoPhraseSpotterEnabled:]
  -[AFPreferences setDisableAssistantWhilePasscodeLocked:]
  -[AFPreferences myriadLastWin]
  -[AFPreferences _setSuppressDictationOptInLocal:]
  -[AFPreferences _dictationEnablementDidChangeExternally]
  -[AFPreferences synchronize]
  -[AFPreferences getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:]
  -[AFPreferences setSiriDataSharingOptInAlertPresented:completion:]
  -[AFPreferences isLocaleIdentifierNativelySupported:]
  -[AFPreferences setMyriadMaxNoOperationDelay:]
  -[AFPreferences disableMyriadBLEActivity]
  -[AFPreferences handsOffIdleTimeInterval]
  -[AFPreferences isSmartLanguageSelectionEnabled]
  -[AFPreferences utteranceDetectionEnabled]
  -[AFPreferences offlineDictationProfileOverridePath]
  -[AFPreferences nanoRaiseToSpeakEnabled]
  -[AFPreferences _setNanoPreferencesValue:forKey:]
  -[AFPreferences myriadTestDeviceDelay]
  -[AFPreferences setIgnoreServerManualEndpointingThreshold:]
  -[AFPreferences disableAssistantWhilePasscodeLocked]
  -[AFPreferences useDeviceSpeakerForTTS]
  -[AFPreferences avvcLoggingEnabled]
  -[AFPreferences siriResponseShouldAlwaysPrint]
  -[AFPreferences fileLoggingIsEnabled]
  -[AFPreferences _nanoPrefsDidChangeExternally]
  -[AFPreferences horsemanSupplementalLanguageDictionary]
  -[AFPreferences languageCode]
  -[AFPreferences setNanoAssistantEnabled:]
  -[AFPreferences _setDictationIsEnabledLocal:]
  -[AFPreferences alwaysAllowVoiceActivation]
  -[AFPreferences myriadMonitorTimeOutInterval]
  -[AFPreferences setNanoDictationEnabled:]
  -[AFPreferences _registerForNavStatusIfNeeded]
  -[AFPreferences setSpokenNotificationShouldAnnounceAllNotifications:]
  -[AFPreferences startAlertEnabled]
  -[AFPreferences init]
  -[AFPreferences outputVoice]
  -[AFPreferences myriadDeviceSlowdown]
  -[AFPreferences isDictationOnDeviceSamplingDisabled]
  -[AFPreferences isLanguageDetectorEnabled]
  -[AFPreferences cardLoggingEnabled]
  -[AFPreferences nanoSiriDataSharingOptInStatus]
  -[AFPreferences setSiriDataSharingOptInStatus:completion:]
  -[AFPreferences resetSessionLanguage]
  -[AFPreferences inProgressOutputVoice]
  -[AFPreferences curareOrchestrationEnabled]
  -[AFPreferences getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:]
  -[AFPreferences _outputVoiceWithFallback:]
  -[AFPreferences siriDataSharingOptInStatus]
  -[AFPreferences setDictationSLSLanguagesEnabled:]
  -[AFPreferences _languageCodeDidChangeExternally]
  -[AFPreferences _registerForAssistantEnablementChangeNotifications]
  -[AFPreferences setKeepRecordedAudioFiles:]
  -[AFPreferences setOfflineDictationOverride:]
  -[AFPreferences setAssistantLanguageForceRTL:]
  -[AFPreferences myriadDeviceVTEndTimeDistanceThreshold]
  -[AFPreferences currentNavigationState]
  -[AFPreferences synchronizeAVVCPreferencesDomain]
  -[AFPreferences nanoLanguageCode]
  -[AFPreferences getHomeAccessoriesRepromptStatus]
  -[AFPreferences setNanoRaiseToSpeakEnabled:]
  -[AFPreferences allSiriLanguageCodesForSystemLanguageCode:isGoodFit:]
  -[AFPreferences setForceOfflineRecognitionEnabled:]
  -[AFPreferences appendHomeAccessorySiriDataSharingChangeLogEvent:]
  -[AFPreferences getHomeAccessorySiriDataSharingPropagationLog]
  -[AFPreferences keepRecordedAudioFiles]
  -[AFPreferences handsOnIdleTimeInterval]
  -[AFPreferences setCrownActivationEnabled:]
  -[AFPreferences setUseDeviceSpeakerForTTS:]
  -[AFPreferences siriVocabularyEnabled]
  -[AFPreferences setNanoLanguageCode:outputVoice:forTinkerDevice:]
  -[AFPreferences _languageCodeWithFallback:]
  -[AFPreferences _bestSupportedLanguageCodeForLanguageCodes:isGoodFit:]
  -[AFPreferences isLanguageDetectorEnabledByServer]
  -[AFPreferences setSiriXDebugStatusEnabled:]
  -[AFPreferences setAutoDismissalExtendedIdleTimeout:]
  -[AFPreferences setStartAlertEnabled:]
  -[AFPreferences _outputVoiceDidChangeExternally]
  -[AFPreferences valueForSessionContextPreferenceKey:]
  -[AFPreferences setValue:forSessionContextKey:]
  -[AFPreferences getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:]
  -[AFPreferences setMyriadDeviceTrumpDelay:]
  -[AFPreferences isDictationHIPAACompliant]
  -[AFPreferences setMyriadCoordinationEnabled:]
  -[AFPreferences autoDismissal2018Enabled]
  -[AFPreferences myriadServerProvisioning]
  -[AFPreferences enableDragAndDrop]
  -[AFPreferences _setOnDeviceDictationAvailableAlertPresentedLocal:]
  -[AFPreferences nanoCrownActivationEnabled]
  -[AFPreferences setMyriadDeviceClass:]
  -[AFPreferences autoDismissalMaxAttentionSamplingTime]
  -[AFPreferences nanoPhraseSpotterEnabled]
  -[AFPreferences setSpokenNotificationTemporarilyDisabledUntil:]
  -[AFPreferences setMyriadServerHasProvisioned:]
  -[AFPreferences setAlwaysAllowVoiceActivation:]
  -[AFPreferences setLanguageCode:outputVoice:]
  -[AFPreferences _internalPreferencesDidChangeExternally]
  -[AFPreferences suppressDictationOptIn]
  -[AFPreferences supplementalLanguagesForProduct:forBuildVersion:]
  -[AFPreferences setCardLoggingEnabled:]
  -[AFPreferences setMyriadServerProvisioning:]
  -[AFPreferences setOfflineDictationProfileOverridePath:]
  -[AFPreferences designModeIsEnabled]
  -[AFPreferences setCurrentNavigationState:]
  -[AFPreferences setOpportuneSpeakingPauseInterval:]
  -[AFPreferences tlsSessionTicketsFlushPending]
  -[AFPreferences opportuneSpeakingTimeoutInterval]
  -[AFPreferences setNanoOutputVoice:]
  -[AFPreferences setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
  -[AFPreferences setCommandLoggingEnabled:]
  -[AFPreferences onDeviceDictationAvailableAlertPresented]
  -[AFPreferences nanoTTSSpeakerVolume]
  -[AFPreferences insertHomeAccessorySiriDataSharingPropagationLogEvent:]
  -[AFPreferences cloudSyncEnabled]
  -[AFPreferences myriadShouldIgnoreAdjustedBoost]
  -[AFPreferences setSiriDebugUIEnabled:]
  -[AFPreferences _registerForOutputVoice]
  -[AFPreferences setInProgressOutputVoice:]
  -[AFPreferences nanoAssistantEnabled]
  -[AFPreferences databaseSyncEnabled]
  -[AFPreferences setTLSSessionTicketsFlushPending:]
  -[AFPreferences opportuneSpeakingPauseInterval]
  -[AFPreferences dictationIsEnabled]
  -[AFPreferences shouldSuppressSiriDataSharingOptInAlert]
  -[AFPreferences myriadConstantGoodness]
  -[AFPreferences setMyriadDeviceGroup:]
  -[AFPreferences streamingDictationEnabled]
  -[AFPreferences setOpportuneSpeakingFileLoggingIsEnabled:]
  -[AFPreferences setIgnoreMyriadAdjustedBoost:]
  -[AFPreferences setAutoDismissalMaxAttentionSamplingTime:]
  -[AFPreferences setSiriVocabularyEnabled:]
  -[AFPreferences setMyriadDeviceAdjust:]
  -[AFPreferences _registerForInternalPrefs]
  -[AFPreferences isOnDeviceDictationForced]
  -[AFPreferences setDesignModeEnabled:]
  -[AFPreferences nanoOfflineDictationStatus]
  -[AFPreferences commandLoggingEnabled]
  -[AFPreferences erasePreferences]
  -[AFPreferences setMediaPlaybackEnabled:]
  -[AFPreferences getSpokenNotificationTemporarilyDisabledForApp:completion:]
  -[AFPreferences setSmartLanguageSelection:]
  -[AFPreferences setAVVCLoggingEnabled:]
  -[AFPreferences siriXDebugStatusEnabled]
  -[AFPreferences manualEndpointingThreshold]
  -[AFPreferences dealloc]
  -[AFPreferences _setAssistantIsEnabledLocal:]
  -[AFPreferences setDatabaseSyncEnabled:]
  -[AFPreferences autoDismissalIdleTimeout]
  -[AFPreferences setUtteranceDetectionEnabled:]
  -[AFPreferences getSpokenNotificationTemporarilyDisabledEndDateForApp:completion:]
  -[AFPreferences setMyriadDeviceSlowdown:]
  -[AFPreferences setNanoCrownActivationEnabled:]
  -[AFPreferences appendToSiriDataSharingOptInStatusHistory:previousOptInStatus:statusChangeSource:reason:]
  -[AFPreferences spokenNotificationSkipTriggerlessReplyConfirmation]
  -[AFPreferences getSpokenNotificationTemporarilyDisabledStatusWithCompletion:]
  -[AFPreferences setNanoUseDeviceSpeakerForTTS:]
  -[AFPreferences _setLoggingDefaultValue:forKey:]
  -[AFPreferences setHandsOffIdleTimeInterval:]
  -[AFPreferences myriadDeviceTrumpDelay]
  -[AFPreferences _registerForLanguageCodeChangeNotifications]
  -[AFPreferences internalUserClassification]
  -[AFPreferences supplementalLanguages]
  -[AFPreferences getAnnounceNotificationsTemporarilyDisabledForApp:platform:completion:]
  -[AFPreferences _dictationIsAllowed]
  -[AFPreferences configOverrides]
  -[AFPreferences setMyriadConstantGoodness:]
  -[AFPreferences opportuneSpeakingFileLoggingIsEnabled]
  -[AFPreferences setDictationIsEnabled:]
  -[AFPreferences setMyriadDuckingEnabled:]
  -[AFPreferences ignoreMyriadPlatformBias]
  -[AFPreferences setHomeAccessoriesRepromptStatus:]
  -[AFPreferences setStreamingDictationEnabled:]
  -[AFPreferences setCompanionConnectionsOverBLEEnabled:]
  -[AFPreferences getAnnounceNotificationsTemporarilyDisabledStatusForPlatform:completion:]
  -[AFPreferences setConfigOverrides:]
  -[AFPreferences synchronizeLogPreferencesDomain]
  -[AFPreferences alwaysShowRecognizedSpeech]
  -[AFPreferences debugButtonIsEnabled]
  -[AFPreferences siriSpeakerGradingDebugUIEnabled]
  -[AFPreferences setSiriSpeakerGradingDebugUIEnabled:]
  -[AFPreferences setSiriResponseShouldAlwaysPrint:]
  -[AFPreferences setLimitedAudioLoggingEnabled:]
  -[AFPreferences offlineDictationStatus]
  -[AFPreferences networkLoggingEnabled]
  -[AFPreferences offlineDictationOverride]
  -[AFPreferences nanoOutputVoice]
  -[AFPreferences shouldLogForQA]
  -[AFPreferences setDismissWhenDeviceIsLoweredEnabled:]
  -[AFPreferences setAlwaysShowRecognizedSpeech:]
  -[AFPreferences _preferencesDidChangeExternally]
  -[AFPreferences _registerForDictationEnablementChangeNotifications]
  -[AFPreferences _registerForNanoPrefsChangeNotifications]
  -[AFPreferences preferOnlineRecognitionEnabled]
  -[AFPreferences _nanoPreferencesValueForKey:]
  -[AFPreferences forceOfflineRecognitionEnabled]
  -[AFPreferences isCurrentLocaleNativelySupported]
  -[AFPreferences assistantLanguageForceRTL]
  -[AFPreferences _languageCode:isGoodFitForPreferredLanguages:]
  -[AFPreferences setConfigOverrideWithValue:forKey:]


AFObjectCreatedSiriResponse : AFSiriResponse
  // class methods
  +[AFObjectCreatedSiriResponse supportsSecureCoding]

  // instance methods
  -[AFObjectCreatedSiriResponse initWithCoder:]
  -[AFObjectCreatedSiriResponse .cxx_destruct]
  -[AFObjectCreatedSiriResponse _initWithRequest:objectIdentifier:]
  -[AFObjectCreatedSiriResponse encodeWithCoder:]
  -[AFObjectCreatedSiriResponse _objectIdentifier]


AFConnectionUserInteractionAssertion : NSObject
  // instance methods
  -[AFConnectionUserInteractionAssertion .cxx_destruct]
  -[AFConnectionUserInteractionAssertion initWithCompletion:]
  -[AFConnectionUserInteractionAssertion releaseAssertion]


AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable : NSObject
 @property  NSString *identifier
 @property  NSDate *date

  // instance methods
  -[AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable initWithDate:]
  -[AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable .cxx_destruct]
  -[AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable isOlderThan:]
  -[AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable identifier]
  -[AFOpportuneSpeakingModuleDataCollectionSanitizedSpeakable date]


AFOpportuneSpeakingModuleDataCollection : NSObject
  // class methods
  +[AFOpportuneSpeakingModuleDataCollection sharedCollector]

  // instance methods
  -[AFOpportuneSpeakingModuleDataCollection .cxx_destruct]
  -[AFOpportuneSpeakingModuleDataCollection _deleteSpeakablesOlderThan:]
  -[AFOpportuneSpeakingModuleDataCollection logSpeakable:forContact:withModelId:withFeatures:withScore:]
  -[AFOpportuneSpeakingModuleDataCollection logFeedbackOfType:forSpeakableId:withModelId:]
  -[AFOpportuneSpeakingModuleDataCollection logRecommendedAction:forSpeakableId:withModelId:]
  -[AFOpportuneSpeakingModuleDataCollection logInteractionEvents:forSpeakableId:]
  -[AFOpportuneSpeakingModuleDataCollection init]


AFSpeechRecognition : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *phrases
 @property  NSArray *utterances
 @property  double processedAudioDuration

  // class methods
  +[AFSpeechRecognition fakeOneBestFromPhrases:]
  +[AFSpeechRecognition supportsSecureCoding]

  // instance methods
  -[AFSpeechRecognition initWithCoder:]
  -[AFSpeechRecognition phrases]
  -[AFSpeechRecognition utterances]
  -[AFSpeechRecognition .cxx_destruct]
  -[AFSpeechRecognition initWithPhrases:utterances:processedAudioDuration:]
  -[AFSpeechRecognition dictionaryRepresentation]
  -[AFSpeechRecognition aceRecognition]
  -[AFSpeechRecognition processedAudioDuration]
  -[AFSpeechRecognition initWithPhrases:]
  -[AFSpeechRecognition copyWithZone:]
  -[AFSpeechRecognition initWithPhrases:utterances:]
  -[AFSpeechRecognition encodeWithCoder:]


AFAudioState : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned int audioSessionID

  // class methods
  +[AFAudioState supportsSecureCoding]

  // instance methods
  -[AFAudioState initWithCoder:]
  -[AFAudioState setAudioSessionID:]
  -[AFAudioState copyWithZone:]
  -[AFAudioState audioSessionID]
  -[AFAudioState encodeWithCoder:]


AFTreeNode : NSObject <NSFastEnumeration>
 @property  AFTreeNode *parentNode
 @property  NSMutableArray *childNodes
 @property  id item

  // class methods
  +[AFTreeNode absoluteIndexPathsForTreeNodes:]

  // instance methods
  -[AFTreeNode setItem:]
  -[AFTreeNode .cxx_destruct]
  -[AFTreeNode absoluteIndexPath]
  -[AFTreeNode _childNodes]
  -[AFTreeNode indexPathFromAncestorNode:]
  -[AFTreeNode _appendDescriptionToString:withIndentation:]
  -[AFTreeNode indexOfChildNode:]
  -[AFTreeNode numberOfChildNodes]
  -[AFTreeNode childNodeAtIndex:]
  -[AFTreeNode enumerateDescendentNodesUsingBlock:]
  -[AFTreeNode removeChildNode:]
  -[AFTreeNode removeFromParentNode]
  -[AFTreeNode _setParentNode:]
  -[AFTreeNode nodeAtIndexPath:]
  -[AFTreeNode insertChildNode:atIndex:]
  -[AFTreeNode removeChildNodeAtIndex:]
  -[AFTreeNode enumerateChildNodesWithOptions:usingBlock:]
  -[AFTreeNode containsNodeAtIndexPath:]
  -[AFTreeNode indexPathOfNodeWithItem:]
  -[AFTreeNode lastChildNode]
  -[AFTreeNode addChildNode:]
  -[AFTreeNode replaceChildNodeAtIndex:withNode:]
  -[AFTreeNode enumerateChildNodesUsingBlock:]
  -[AFTreeNode item]
  -[AFTreeNode init]
  -[AFTreeNode parentNode]
  -[AFTreeNode countByEnumeratingWithState:objects:count:]


AFAssistedDisambiguationRules : NSObject
 @property  unsigned long decisionDepth
 @property  double decisionAge
 @property  double decisionThreshold
 @property  unsigned long maxPersistenceDepth
 @property  double maxPersistenceAge

  // class methods
  +[AFAssistedDisambiguationRules defaultRules]

  // instance methods
  -[AFAssistedDisambiguationRules decisionDepth]
  -[AFAssistedDisambiguationRules decisionAge]
  -[AFAssistedDisambiguationRules decisionThreshold]
  -[AFAssistedDisambiguationRules weightForEvent:]
  -[AFAssistedDisambiguationRules maxPersistenceDepth]
  -[AFAssistedDisambiguationRules maxPersistenceAge]


AFSiriTaskContextProvider : NSObject <AFSiriAppContextProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriTaskContextProvider .cxx_destruct]
  -[AFSiriTaskContextProvider getAppContextWithDeliveryHandler:completionHandler:]
  -[AFSiriTaskContextProvider initWithTaskmaster:]


AFDeviceRequestHandlingRecord : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *requestID
 @property  unsigned long deviceRoles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFDeviceRequestHandlingRecord supportsSecureCoding]
  +[AFDeviceRequestHandlingRecord newWithBuilder:]

  // instance methods
  -[AFDeviceRequestHandlingRecord buildDictionaryRepresentation]
  -[AFDeviceRequestHandlingRecord requestID]
  -[AFDeviceRequestHandlingRecord serializedBackingStore]
  -[AFDeviceRequestHandlingRecord _descriptionWithIndent:]
  -[AFDeviceRequestHandlingRecord initWithCoder:]
  -[AFDeviceRequestHandlingRecord initWithDictionaryRepresentation:]
  -[AFDeviceRequestHandlingRecord .cxx_destruct]
  -[AFDeviceRequestHandlingRecord initWithSerializedBackingStore:]
  -[AFDeviceRequestHandlingRecord deviceRoles]
  -[AFDeviceRequestHandlingRecord initWithRequestID:deviceRoles:]
  -[AFDeviceRequestHandlingRecord mutatedCopyWithMutator:]
  -[AFDeviceRequestHandlingRecord isEqual:]
  -[AFDeviceRequestHandlingRecord copyWithZone:]
  -[AFDeviceRequestHandlingRecord encodeWithCoder:]


_AFDeviceRequestHandlingRecordMutation : NSObject <AFDeviceRequestHandlingRecordMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFDeviceRequestHandlingRecordMutation .cxx_destruct]
  -[_AFDeviceRequestHandlingRecordMutation setDeviceRoles:]
  -[_AFDeviceRequestHandlingRecordMutation init]
  -[_AFDeviceRequestHandlingRecordMutation setRequestID:]
  -[_AFDeviceRequestHandlingRecordMutation generate]
  -[_AFDeviceRequestHandlingRecordMutation initWithBaseModel:]


AFConversationError : NSError
  // class methods
  +[AFConversationError errorWithCode:localizedFailureReason:]
  +[AFConversationError errorWithCode:]
  +[AFConversationError errorWithCode:userInfo:]

  // instance methods
  -[AFConversationError initWithCode:userInfo:]
  -[AFConversationError initWithCode:localizedFailureReason:]
  -[AFConversationError initWithCode:]


AFAudioSessionCoordinationSystemInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  BOOL isSupportedAndEnabled
 @property  NSString *homeKitRoomName
 @property  NSUUID *homeKitMediaSystemIdentifier
 @property  NSString *mediaRemoteGroupIdentifier
 @property  NSString *mediaRemoteRouteIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFAudioSessionCoordinationSystemInfo supportsSecureCoding]
  +[AFAudioSessionCoordinationSystemInfo newWithBuilder:]

  // instance methods
  -[AFAudioSessionCoordinationSystemInfo buildDictionaryRepresentation]
  -[AFAudioSessionCoordinationSystemInfo _descriptionWithIndent:]
  -[AFAudioSessionCoordinationSystemInfo initWithCoder:]
  -[AFAudioSessionCoordinationSystemInfo homeKitRoomName]
  -[AFAudioSessionCoordinationSystemInfo initWithDictionaryRepresentation:]
  -[AFAudioSessionCoordinationSystemInfo mediaRemoteRouteIdentifier]
  -[AFAudioSessionCoordinationSystemInfo .cxx_destruct]
  -[AFAudioSessionCoordinationSystemInfo mediaRemoteGroupIdentifier]
  -[AFAudioSessionCoordinationSystemInfo mutatedCopyWithMutator:]
  -[AFAudioSessionCoordinationSystemInfo isSupportedAndEnabled]
  -[AFAudioSessionCoordinationSystemInfo homeKitMediaSystemIdentifier]
  -[AFAudioSessionCoordinationSystemInfo isEqual:]
  -[AFAudioSessionCoordinationSystemInfo initWithIsSupportedAndEnabled:homeKitRoomName:homeKitMediaSystemIdentifier:mediaRemoteGroupIdentifier:mediaRemoteRouteIdentifier:]
  -[AFAudioSessionCoordinationSystemInfo copyWithZone:]
  -[AFAudioSessionCoordinationSystemInfo encodeWithCoder:]


_AFAudioSessionCoordinationSystemInfoMutation : NSObject <AFAudioSessionCoordinationSystemInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAudioSessionCoordinationSystemInfoMutation setHomeKitRoomName:]
  -[_AFAudioSessionCoordinationSystemInfoMutation setHomeKitMediaSystemIdentifier:]
  -[_AFAudioSessionCoordinationSystemInfoMutation setIsSupportedAndEnabled:]
  -[_AFAudioSessionCoordinationSystemInfoMutation .cxx_destruct]
  -[_AFAudioSessionCoordinationSystemInfoMutation init]
  -[_AFAudioSessionCoordinationSystemInfoMutation setMediaRemoteRouteIdentifier:]
  -[_AFAudioSessionCoordinationSystemInfoMutation generate]
  -[_AFAudioSessionCoordinationSystemInfoMutation setMediaRemoteGroupIdentifier:]
  -[_AFAudioSessionCoordinationSystemInfoMutation initWithBaseModel:]


AFHeadphonesAnnouncementRequestCapabilityProvider : NSObject <AFNotifyObserverDelegate, AFSettingsDelegate, AFAnnouncementRequestCapabilityProviding>
 @property  AFSiriAnnouncementRoute *currentAnnouncementRoute
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHeadphonesAnnouncementRequestCapabilityProvider platform]
  +[AFHeadphonesAnnouncementRequestCapabilityProvider requiredIntentIdentifiersForUserNotificationAnnouncementType:]
  +[AFHeadphonesAnnouncementRequestCapabilityProvider provider]
  +[AFHeadphonesAnnouncementRequestCapabilityProvider announceableIntentIdentifiersForUserNotificationAnnouncementType:]

  // instance methods
  -[AFHeadphonesAnnouncementRequestCapabilityProvider fetchWirelessSplitterSessionInfoAndStartObservingSync]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didChangeStateFrom:to:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchPairedBluetoothDevicesFromSourceWithCompletion:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider setCurrentAnnouncementRoute:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider .cxx_destruct]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider updateAudioRouteAvailability:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfAvailableAnnouncementRequestTypes]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider systemControllerDied:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _settingsConnectionDidDisconnect]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _getCurrentAnnouncementRoute]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider fetchLocalVoiceAssetAvailabilityWithCompletion:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _updateAudioRouteAvailabilityAndBroadcast:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesAndNotifyObservers:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchInitialState]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _settingsConnection]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didReceiveNotificationWithToken:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _init]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider currentlyRoutedHeadphonesBTAddress]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider currentlyRoutedHeadphonesProductID]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfEligibleAnnouncementRequestTypes:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider updateWirelessSplitterSessionInfoAndObserve]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider lastKnownEligibleAnnouncementRequestTypes]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider addDelegate:]
  -[AFHeadphonesAnnouncementRequestCapabilityProvider currentAnnouncementRoute]


AFMyriadMonitor : NSObject <AFNotifyObserverDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMyriadMonitor sharedMonitor]

  // instance methods
  -[AFMyriadMonitor isMonitoring]
  -[AFMyriadMonitor notifyObserver:didChangeStateFrom:to:]
  -[AFMyriadMonitor stopMonitoring]
  -[AFMyriadMonitor didWin]
  -[AFMyriadMonitor .cxx_destruct]
  -[AFMyriadMonitor _flushCompletions:]
  -[AFMyriadMonitor _enqueueBlock:forReason:]
  -[AFMyriadMonitor _myriadStateToString:]
  -[AFMyriadMonitor startMonitoringWithTimeoutInterval:instanceContext:]
  -[AFMyriadMonitor _registerForMyriadEvents]
  -[AFMyriadMonitor _setDecisionIsPending]
  -[AFMyriadMonitor _cancelRepostedMyriadDecisionTimer]
  -[AFMyriadMonitor _fetchCurrentMyriadDecisionWithWaitTime:]
  -[AFMyriadMonitor _deregisterFromRepostedDecisionResultsObservers]
  -[AFMyriadMonitor _dequeueBlocksWithSignal:]
  -[AFMyriadMonitor _deregisterFromMyriadEventNotifications]
  -[AFMyriadMonitor _resultSeenWithValue:]
  -[AFMyriadMonitor waitForMyriadDecisionWithCompletion:]
  -[AFMyriadMonitor waitForMyriadDecisionForReason:withCompletion:]
  -[AFMyriadMonitor startMonitoringWithTimeoutInterval:]
  -[AFMyriadMonitor ignoreMyriadEvents:]
  -[AFMyriadMonitor dequeueBlocksWaitingForMyriadDecision]
  -[AFMyriadMonitor _ignoreRepostMyriadNotification:]
  -[AFMyriadMonitor _clear]
  -[AFMyriadMonitor init]
  -[AFMyriadMonitor notifyObserver:didReceiveNotificationWithToken:]
  -[AFMyriadMonitor dealloc]


AFCoercion : NSObject
  // class methods
  +[AFCoercion identityCoercion]
  +[AFCoercion typeAssertionWithClass:]
  +[AFCoercion stringToUUIDCoercion]
  +[AFCoercion coercionWithBlock:]

  // instance methods
  -[AFCoercion .cxx_destruct]
  -[AFCoercion init]
  -[AFCoercion initWithBlock:]
  -[AFCoercion coerceObject:error:]


AFConversation : NSObject
 @property  AFTreeNode *rootNode
 @property  <AFConversationStorable> *lastRestoredItem
 @property  NSUUID *identifier
 @property  NSString *languageCode
 @property  BOOL synchronizedWithServer
 @property  <AFConversationDelegate> *delegate

  // instance methods
  -[AFConversation lastItem]
  -[AFConversation _rootNode]
  -[AFConversation .cxx_destruct]
  -[AFConversation setDelegate:]
  -[AFConversation initWithIdentifier:languageCode:rootNode:]
  -[AFConversation initWithIdentifier:languageCode:]
  -[AFConversation _nodeAtIndexPath:]
  -[AFConversation _nodeContainsProvisionalItems:]
  -[AFConversation _childOfNode:withItemWhichCanBeUpdatedWithAceObject:inDialogPhase:]
  -[AFConversation _changePresentationStateForNodes:]
  -[AFConversation notifyDelegateOfUpdates:inserts:presentationChanges:]
  -[AFConversation _removeNodes:]
  -[AFConversation _processInsertions:inDialogPhase:]
  -[AFConversation indexPathForItemWithIdentifier:]
  -[AFConversation numberOfChildrenForItemAtIndexPath:]
  -[AFConversation _addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:isSupplemental:isImmersiveExperience:]
  -[AFConversation _indexPathForItemWithIdentifier:ignoreNonExistent:]
  -[AFConversation languageCode]
  -[AFConversation _indexPathsForAddingItemsWithCount:asChildrenOfItemWithIdentifier:]
  -[AFConversation _addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:isSupplemental:isImmersiveExperience:]
  -[AFConversation _addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:atIndexPaths:]
  -[AFConversation _addItemsForAceViews:withDialogPhase:fromCommandWithIdentifier:asChildrenOfItemWithIdentifier:]
  -[AFConversation _itemAtIndexPath:]
  -[AFConversation _addItemsForAceObjects:type:aceCommandIdentifier:dialogPhase:asChildrenOfItemWithIdentifier:]
  -[AFConversation addItemsForAceViews:withDialogPhase:asChildrenOfItemWithIdentifier:]
  -[AFConversation removeItemsAtIndexPaths:]
  -[AFConversation isSynchronizedWithServer]
  -[AFConversation setSynchronizedWithServer:]
  -[AFConversation insertItemsForAceViews:withDialogPhase:atIndexPaths:]
  -[AFConversation addItemsForAddViewsCommand:]
  -[AFConversation updatedUserUtteranceForRefId:]
  -[AFConversation addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:]
  -[AFConversation addItemForSpeechRecognizedCommand:]
  -[AFConversation addAdditionalSpeechInterpretation:refId:]
  -[AFConversation additionalSpeechInterpretationsForRefId:]
  -[AFConversation addSelectionResponse:]
  -[AFConversation addRecognitionUpdateWithPhrases:utterances:refId:]
  -[AFConversation addItemForPartialResultCommand:]
  -[AFConversation addItemsForShowHelpCommand:]
  -[AFConversation addItemForMusicStartSessionCommand:]
  -[AFConversation updateWithUpdateViewsCommand:]
  -[AFConversation removeItemsWithIdentifiers:]
  -[AFConversation removeItemsFollowingItemAtIndexPath:]
  -[AFConversation removeTransientItems]
  -[AFConversation cancelItemWithIdentifier:]
  -[AFConversation containsItemWithIdentifier:]
  -[AFConversation identifierOfItemAtIndexPath:]
  -[AFConversation hasItemWithIdentifier:]
  -[AFConversation parentOfItemWithIdentifier:]
  -[AFConversation _setRootNode:]
  -[AFConversation typeForItemAtIndexPath:]
  -[AFConversation dialogPhaseForItemAtIndexPath:]
  -[AFConversation aceObjectForItemAtIndexPath:]
  -[AFConversation presentationStateForItemAtIndexPath:]
  -[AFConversation numberOfChildrenForItemWithIdentifier:]
  -[AFConversation aceCommandIdentifierForItemAtIndexPath:]
  -[AFConversation itemAtIndexPathIsVirgin:]
  -[AFConversation containsItemForAceViewWithIdentifier:]
  -[AFConversation lastRestoredItem]
  -[AFConversation _setLastRestoredItem:]
  -[AFConversation initWithPropertyListRepresentation:]
  -[AFConversation identifier]
  -[AFConversation propertyListRepresentation]
  -[AFConversation _enumerateItemsUsingBlock:]
  -[AFConversation initWithLanguageCode:]
  -[AFConversation delegate]
  -[AFConversation itemAtIndexPath:]
  -[AFConversation itemWithIdentifier:]


AFBulletinAction : NSObject
 @property  NSMutableSet *titleVariants
 @property  BBAction *bbAction
 @property  NSString *bbActionID

  // instance methods
  -[AFBulletinAction bbAction]
  -[AFBulletinAction .cxx_destruct]
  -[AFBulletinAction bbActionID]
  -[AFBulletinAction addTitleVariant:]
  -[AFBulletinAction initWithBulletinAction:]
  -[AFBulletinAction getTitleVariants]
  -[AFBulletinAction titleVariants]
  -[AFBulletinAction setTitleVariants:]


AFMyriadAdvertisementContext : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long generation
 @property  NSData *contextData
 @property  double contextFetchDelay

  // class methods
  +[AFMyriadAdvertisementContext supportsSecureCoding]
  +[AFMyriadAdvertisementContext newWithBuilder:]

  // instance methods
  -[AFMyriadAdvertisementContext _descriptionWithIndent:]
  -[AFMyriadAdvertisementContext initWithCoder:]
  -[AFMyriadAdvertisementContext contextData]
  -[AFMyriadAdvertisementContext .cxx_destruct]
  -[AFMyriadAdvertisementContext generation]
  -[AFMyriadAdvertisementContext mutatedCopyWithMutator:]
  -[AFMyriadAdvertisementContext isEqual:]
  -[AFMyriadAdvertisementContext contextFetchDelay]
  -[AFMyriadAdvertisementContext initWithGeneration:contextData:contextFetchDelay:]
  -[AFMyriadAdvertisementContext copyWithZone:]
  -[AFMyriadAdvertisementContext encodeWithCoder:]


_AFMyriadAdvertisementContextMutation : NSObject <AFMyriadAdvertisementContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMyriadAdvertisementContextMutation setGeneration:]
  -[_AFMyriadAdvertisementContextMutation .cxx_destruct]
  -[_AFMyriadAdvertisementContextMutation setContextData:]
  -[_AFMyriadAdvertisementContextMutation init]
  -[_AFMyriadAdvertisementContextMutation setContextFetchDelay:]
  -[_AFMyriadAdvertisementContextMutation generate]
  -[_AFMyriadAdvertisementContextMutation initWithBaseModel:]


AFHeartBeat : NSObject <AFInvalidating>
 @property  NSString *identifier
 @property  NSDate *effectiveDate
 @property  double expirationDuration
 @property  double heartBeatInterval
 @property  unsigned long numberOfHeartBeats
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFHeartBeat effectiveDate]
  -[AFHeartBeat .cxx_destruct]
  -[AFHeartBeat expirationDuration]
  -[AFHeartBeat identifier]
  -[AFHeartBeat _invalidate]
  -[AFHeartBeat _fire]
  -[AFHeartBeat dealloc]
  -[AFHeartBeat invalidate]
  -[AFHeartBeat initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:]
  -[AFHeartBeat heartBeatInterval]
  -[AFHeartBeat numberOfHeartBeats]


AFClientConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  AFAccessibilityState *accessibilityState
 @property  long long deviceRingerSwitchState
 @property  BOOL isDeviceInCarDNDMode
 @property  BOOL isDeviceInStarkMode
 @property  BOOL isDeviceWatchAuthenticated
 @property  BOOL areAnnouncementRequestsPermittedByPresentationWhileActive
 @property  float outputVolume
 @property  AFAudioPlaybackRequest *tapToSiriAudioPlaybackRequest
 @property  AFAudioPlaybackRequest *twoShotAudioPlaybackRequest
 @property  NSDate *deviceSetupFlowBeginDate
 @property  NSDate *deviceSetupFlowEndDate

  // class methods
  +[AFClientConfiguration supportsSecureCoding]
  +[AFClientConfiguration newWithBuilder:]

  // instance methods
  -[AFClientConfiguration _descriptionWithIndent:]
  -[AFClientConfiguration initWithCoder:]
  -[AFClientConfiguration initWithAccessibilityState:deviceRingerSwitchState:isDeviceInCarDNDMode:isDeviceInStarkMode:isDeviceWatchAuthenticated:areAnnouncementRequestsPermittedByPresentationWhileActive:outputVolume:tapToSiriAudioPlaybackRequest:twoShotAudioPlaybackRequest:deviceSetupFlowBeginDate:deviceSetupFlowEndDate:]
  -[AFClientConfiguration isDeviceInStarkMode]
  -[AFClientConfiguration isDeviceInCarDNDMode]
  -[AFClientConfiguration .cxx_destruct]
  -[AFClientConfiguration mutatedCopyWithMutator:]
  -[AFClientConfiguration outputVolume]
  -[AFClientConfiguration isEqual:]
  -[AFClientConfiguration accessibilityState]
  -[AFClientConfiguration deviceRingerSwitchState]
  -[AFClientConfiguration isDeviceWatchAuthenticated]
  -[AFClientConfiguration areAnnouncementRequestsPermittedByPresentationWhileActive]
  -[AFClientConfiguration tapToSiriAudioPlaybackRequest]
  -[AFClientConfiguration twoShotAudioPlaybackRequest]
  -[AFClientConfiguration deviceSetupFlowBeginDate]
  -[AFClientConfiguration deviceSetupFlowEndDate]
  -[AFClientConfiguration copyWithZone:]
  -[AFClientConfiguration encodeWithCoder:]


_AFClientConfigurationMutation : NSObject <AFClientConfigurationMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClientConfigurationMutation setOutputVolume:]
  -[_AFClientConfigurationMutation setAccessibilityState:]
  -[_AFClientConfigurationMutation setDeviceRingerSwitchState:]
  -[_AFClientConfigurationMutation .cxx_destruct]
  -[_AFClientConfigurationMutation setIsDeviceInStarkMode:]
  -[_AFClientConfigurationMutation setIsDeviceInCarDNDMode:]
  -[_AFClientConfigurationMutation setIsDeviceWatchAuthenticated:]
  -[_AFClientConfigurationMutation setAreAnnouncementRequestsPermittedByPresentationWhileActive:]
  -[_AFClientConfigurationMutation init]
  -[_AFClientConfigurationMutation setDeviceSetupFlowEndDate:]
  -[_AFClientConfigurationMutation setTapToSiriAudioPlaybackRequest:]
  -[_AFClientConfigurationMutation setTwoShotAudioPlaybackRequest:]
  -[_AFClientConfigurationMutation setDeviceSetupFlowBeginDate:]
  -[_AFClientConfigurationMutation generate]
  -[_AFClientConfigurationMutation initWithBaseModel:]


AFSpeakableUtteranceParser : NSObject
 @property  BOOL handleTTSCodes
 @property  BOOL handlesFunctions

  // class methods
  +[AFSpeakableUtteranceParser _shouldAutomaticallyProvideFunctions]
  +[AFSpeakableUtteranceParser parseUserGeneratedMessage:]

  // instance methods
  -[AFSpeakableUtteranceParser .cxx_destruct]
  -[AFSpeakableUtteranceParser init]
  -[AFSpeakableUtteranceParser handleTTSCodes]
  -[AFSpeakableUtteranceParser initWithLocale:]
  -[AFSpeakableUtteranceParser setHandlesFunctions:]
  -[AFSpeakableUtteranceParser registerProvider:forNamespace:]
  -[AFSpeakableUtteranceParser handlesFunctions]
  -[AFSpeakableUtteranceParser _parseStringWithFormat:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
  -[AFSpeakableUtteranceParser setHandleTTSCodes:]
  -[AFSpeakableUtteranceParser parseStringWithFormat:includeControlCharacters:error:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
  -[AFSpeakableUtteranceParser parseStringWithFormat:error:]
  -[AFSpeakableUtteranceParser parseStringWithFormat:error:containsPrivacySensitiveContents:]
  -[AFSpeakableUtteranceParser _handleOptionalAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:externalProviders:]
  -[AFSpeakableUtteranceParser parseStringRemovingControlCharacters:error:]
  -[AFSpeakableUtteranceParser _handleProviderAtIndex:withBuffer:totalLength:consumedLength:containsPrivacySensitiveContents:hadEmpties:externalProviders:]
  -[AFSpeakableUtteranceParser parseStringWithFormat:error:containsPrivacySensitiveContents:hasExternalDomains:]
  -[AFSpeakableUtteranceParser _handleControlCodeAtIndex:withBuffer:totalLength:consumedLength:hadEmpties:containsPrivacySensitiveContents:externalProviders:]
  -[AFSpeakableUtteranceParser parseStringWithFormat:error:hasExternalDomains:]
  -[AFSpeakableUtteranceParser parseStringRemovingControlCharacters:error:containsPrivacySensitiveContents:]


_AFSpeakableUtterancePassThroughProvider : NSObject <AFSpeakableNamespaceProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeakableUtterancePassThroughProvider stringForExpression:containsPrivacySensitiveContents:]
  -[_AFSpeakableUtterancePassThroughProvider stringForExpression:]


AFNotifyObserver : NSObject <AFInvalidating>
 @property  NSString *name
 @property  unsigned long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFNotifyObserver name]
  -[AFNotifyObserver _updateStateWithToken:]
  -[AFNotifyObserver .cxx_destruct]
  -[AFNotifyObserver _handleNotificationWithToken:]
  -[AFNotifyObserver initWithName:options:queue:delegate:]
  -[AFNotifyObserver state]
  -[AFNotifyObserver getStateWithCompletion:]
  -[AFNotifyObserver _invalidate]
  -[AFNotifyObserver dealloc]
  -[AFNotifyObserver invalidate]


AFSUPFunctionProvider : AFSpeakableUtteranceParser <AFSpeakableNamespaceProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSUPFunctionProvider _shouldAutomaticallyProvideFunctions]

  // instance methods
  -[AFSUPFunctionProvider .cxx_destruct]
  -[AFSUPFunctionProvider _meCard]
  -[AFSUPFunctionProvider init]
  -[AFSUPFunctionProvider _currentTime:]
  -[AFSUPFunctionProvider initWithLocale:]
  -[AFSUPFunctionProvider stringForExpression:containsPrivacySensitiveContents:]
  -[AFSUPFunctionProvider stringForExpression:]
  -[AFSUPFunctionProvider _dateFormattedWithFormatter:arguments:]
  -[AFSUPFunctionProvider _peerInfoForContextIdentifier:]
  -[AFSUPFunctionProvider _currentShortDate:]
  -[AFSUPFunctionProvider _currentLongDate:]
  -[AFSUPFunctionProvider _currentWeekday:]
  -[AFSUPFunctionProvider _tempInWeatherUnits:]
  -[AFSUPFunctionProvider _lowercaseString:]
  -[AFSUPFunctionProvider _siriUsageDescription:]
  -[AFSUPFunctionProvider _speechRecognitionUsageDescription:]
  -[AFSUPFunctionProvider _contextRoomName:]
  -[AFSUPFunctionProvider _contextDeviceName:]
  -[AFSUPFunctionProvider _userFullName:]
  -[AFSUPFunctionProvider _userFirstName:]
  -[AFSUPFunctionProvider _userMiddleName:]
  -[AFSUPFunctionProvider _userLastName:]
  -[AFSUPFunctionProvider _userNickName:]
  -[AFSUPFunctionProvider _meCardIdentifier:]
  -[AFSUPFunctionProvider _callFunction:withArguments:]
  -[AFSUPFunctionProvider _deviceModel]


AFDictationConnection : NSObject <AFNetworkAvailabilityObserver>
 @property  <AFDictationDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFDictationConnection languageDetectorIsEnabled]
  +[AFDictationConnection dictationIsEnabled]
  +[AFDictationConnection getForcedOfflineDictationSupportedLanguagesWithCompletion:]
  +[AFDictationConnection dictationIsSupportedForLanguageCode:error:]
  +[AFDictationConnection fetchSupportedLanguageCodes:]

  // instance methods
  -[AFDictationConnection preheat]
  -[AFDictationConnection sendSpeechCorrection:interactionIdentifier:]
  -[AFDictationConnection _clearConnection]
  -[AFDictationConnection averagePower]
  -[AFDictationConnection _availabilityChanged]
  -[AFDictationConnection _extendRequestTimeout]
  -[AFDictationConnection endSession]
  -[AFDictationConnection _LogUEIRequestCategorization:]
  -[AFDictationConnection _connection]
  -[AFDictationConnection _delegateDidRecognizeSpeechTokens:languageModel:delegate:]
  -[AFDictationConnection _willStartDictationWithLanguageCode:options:speechOptions:machAbsoluteTime:]
  -[AFDictationConnection initWithInstanceContext:]
  -[AFDictationConnection delegateQueue]
  -[AFDictationConnection updateSpeechOptions:]
  -[AFDictationConnection _setActivationTimeOnOptionsIfNecessary:]
  -[AFDictationConnection startDictationWithLanguageCode:options:speechOptions:]
  -[AFDictationConnection setDelegateQueue:]
  -[AFDictationConnection dictationIsAvailableForLanguage:]
  -[AFDictationConnection _checkAndSetIsCapturingSpeech:]
  -[AFDictationConnection _tellSpeechDelegateDidRecognizePackage:]
  -[AFDictationConnection reportIssueForError:eventType:context:]
  -[AFDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:]
  -[AFDictationConnection addRecordedSpeechSampleData:]
  -[AFDictationConnection _scheduleRequestTimeout]
  -[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:]
  -[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechTokens:languageModel:]
  -[AFDictationConnection preheatTestWithLanguage:options:]
  -[AFDictationConnection _cancelTimerClearBuffer]
  -[AFDictationConnection startDictationWithLanguageCode:options:]
  -[AFDictationConnection stopSpeechWithOptions:]
  -[AFDictationConnection _tellSpeechDelegateRecordingDidCancel]
  -[AFDictationConnection stopSpeech]
  -[AFDictationConnection _willCompleteDictation]
  -[AFDictationConnection .cxx_destruct]
  -[AFDictationConnection beginAvailabilityMonitoring]
  -[AFDictationConnection _logRequestCompetionStatusWithEventType:error:]
  -[AFDictationConnection networkAvailability:isAvailable:]
  -[AFDictationConnection requestOfflineAssistantSupportForLanguage:completion:]
  -[AFDictationConnection _tellSpeechDelegateRecordingDidEnd]
  -[AFDictationConnection _tellSpeechDelegateDidRecognizeSpeechPhrases:utterances:languageModel:correctionIdentifier:audioAnalytics:]
  -[AFDictationConnection _tellSpeechDelegateRecordingDidBeginWithOptions:]
  -[AFDictationConnection _dequeueAudioWithLength:]
  -[AFDictationConnection _startInputAudioPowerUpdatesWithXPCWrapper:]
  -[AFDictationConnection _tellSpeechDelegateSpeechRecognitionDidSucceed]
  -[AFDictationConnection cancelSpeech]
  -[AFDictationConnection _connectionClearedForInterruption:]
  -[AFDictationConnection sendEngagementFeedback:voiceQueryIdentifier:]
  -[AFDictationConnection setDelegate:]
  -[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:]
  -[AFDictationConnection forcedOfflineDictationIsAvailableForLanguage:synchronous:]
  -[AFDictationConnection _tellSpeechDelegateLanguageDetectorDidFail:]
  -[AFDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
  -[AFDictationConnection _tellSpeechDelegateRecordingWillBegin]
  -[AFDictationConnection _addPreheatAnalyticsEvent]
  -[AFDictationConnection _tellSpeechDelegateDidProcessAudioDuration:]
  -[AFDictationConnection _dictationService]
  -[AFDictationConnection init]
  -[AFDictationConnection dictationIsAvailableForLanguage:synchronous:]
  -[AFDictationConnection _tellSpeechDelegateDidRecognizeTranscriptionObjects:languageModel:]
  -[AFDictationConnection _tellSpeechDelegateLanguageDetected:confidenceScores:isConfident:]
  -[AFDictationConnection _updateBufferFlushTimerWithDelay:]
  -[AFDictationConnection _dispatchCallbackGroupBlock:]
  -[AFDictationConnection _tellSpeechDelegateRecordingDidFail:]
  -[AFDictationConnection _cancelBufferFlushTimer]
  -[AFDictationConnection _tellSpeechDelegateAudioFileFinished:error:]
  -[AFDictationConnection requestOfflineDictationSupportForLanguage:completion:]
  -[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:narrowband:forceSampling:]
  -[AFDictationConnection _tellSpeechDelegateDidRecognizePartialResult:]
  -[AFDictationConnection peakPower]
  -[AFDictationConnection sendSpeechCorrection:forIdentifier:]
  -[AFDictationConnection _tellSpeechDelegateAvailabilityChanged]
  -[AFDictationConnection _delayedStopSpeechWithOptions:]
  -[AFDictationConnection cancelAvailabilityMonitoring]
  -[AFDictationConnection _sendPendingAnalyticsEvents]
  -[AFDictationConnection delegate]
  -[AFDictationConnection preheatForLanguageCode:]
  -[AFDictationConnection _tellSpeechDelegateSearchResultsReceived:recognitionText:stable:final:]
  -[AFDictationConnection _tellSpeechDelegateRecognitionDidFail:]
  -[AFDictationConnection startRecordedAudioDictationWithOptions:forLanguage:]
  -[AFDictationConnection startDictationWithSpeechFileAtURL:options:forLanguage:]
  -[AFDictationConnection _invokeRequestTimeout]
  -[AFDictationConnection dealloc]
  -[AFDictationConnection _willCancelDictation]
  -[AFDictationConnection _willFailDictationWithError:]
  -[AFDictationConnection reportIssueForError:eventType:subtype:context:]
  -[AFDictationConnection _registerInvalidationHandlerForXPCConnection:]
  -[AFDictationConnection _dictationServiceWithErrorHandler:]
  -[AFDictationConnection _sendDataIfNeeded]
  -[AFDictationConnection _tellSpeechDelegateDidBeginLocalRecognitionWithModelInfo:]
  -[AFDictationConnection startDictationWithSpeechFileAtURL:isNarrowBand:options:forLanguage:]
  -[AFDictationConnection _stopInputAudioPowerUpdates]
  -[AFDictationConnection _cancelRequestTimeout]
  -[AFDictationConnection _dispatchAsync:]
  -[AFDictationConnection _tellSpeechDelegateMultilingualSpeechRecognized:]
  -[AFDictationConnection preheatWithRecordDeviceIdentifier:]


AFDictationConnectionServiceDelegate : NSObject <AFDictationServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFDictationConnectionServiceDelegate .cxx_destruct]
  -[AFDictationConnectionServiceDelegate initWithDictationConnection:]
  -[AFDictationConnectionServiceDelegate speechRecordingWillBeginWithInputAudioPowerXPCWrapper:]
  -[AFDictationConnectionServiceDelegate speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:]
  -[AFDictationConnectionServiceDelegate speechRecordingDidEnd]
  -[AFDictationConnectionServiceDelegate speechDidBeginLocalRecognitionWithModelInfo:]
  -[AFDictationConnectionServiceDelegate speechRecordingDidCancel]
  -[AFDictationConnectionServiceDelegate speechRecordingDidFail:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizePackage:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizePartialResult:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizeTokens:usingSpeechModel:]
  -[AFDictationConnectionServiceDelegate speechDidProcessAudioDuration:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizeTranscriptionObjects:usingSpeechModel:]
  -[AFDictationConnectionServiceDelegate speechRecognitionDidFinishWithError:]
  -[AFDictationConnectionServiceDelegate speechDidFinishWritingAudioFile:error:]
  -[AFDictationConnectionServiceDelegate speechDidReceiveSearchResults:recognitionText:stable:final:]
  -[AFDictationConnectionServiceDelegate speechDidDetectLanguage:confidenceScores:isConfident:]
  -[AFDictationConnectionServiceDelegate speechDidRecognizeMultilingualSpeech:]
  -[AFDictationConnectionServiceDelegate languageDetectorFailedWithError:]


AFSearchAlarmsResponse : AFSiriResponse
 @property  NSArray *results

  // class methods
  +[AFSearchAlarmsResponse supportsSecureCoding]

  // instance methods
  -[AFSearchAlarmsResponse setResults:]
  -[AFSearchAlarmsResponse initWithCoder:]
  -[AFSearchAlarmsResponse results]
  -[AFSearchAlarmsResponse .cxx_destruct]
  -[AFSearchAlarmsResponse encodeWithCoder:]


AFCoreAnalyticsLoggingService : NSObject
  // class methods
  +[AFCoreAnalyticsLoggingService sharedLoggingService]

  // instance methods
  -[AFCoreAnalyticsLoggingService .cxx_destruct]
  -[AFCoreAnalyticsLoggingService init]
  -[AFCoreAnalyticsLoggingService logToCoreAnalyticsCrossDeviceRequestEvent:]
  -[AFCoreAnalyticsLoggingService _init]


AFSiriActivationHandlerAssistantDaemon : NSObject <AFSiriActivationHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriActivationHandlerAssistantDaemon handleContext:completion:]


AFBluetoothDeviceInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *address
 @property  NSUUID *deviceUID
 @property  unsigned int vendorID
 @property  unsigned int productID
 @property  BOOL isAdvancedAppleAudioDevice
 @property  BOOL supportsInEarDetection
 @property  BOOL supportsVoiceTrigger
 @property  BOOL supportsSpokenNotification
 @property  BOOL supportsListeningModeANC
 @property  BOOL supportsListeningModeTransparency
 @property  BOOL supportsAnnounceCall

  // class methods
  +[AFBluetoothDeviceInfo supportsSecureCoding]
  +[AFBluetoothDeviceInfo newWithBuilder:]

  // instance methods
  -[AFBluetoothDeviceInfo _descriptionWithIndent:]
  -[AFBluetoothDeviceInfo initWithCoder:]
  -[AFBluetoothDeviceInfo .cxx_destruct]
  -[AFBluetoothDeviceInfo productID]
  -[AFBluetoothDeviceInfo supportsListeningModeANC]
  -[AFBluetoothDeviceInfo vendorID]
  -[AFBluetoothDeviceInfo supportsVoiceTrigger]
  -[AFBluetoothDeviceInfo address]
  -[AFBluetoothDeviceInfo initWithAddress:deviceUID:vendorID:productID:isAdvancedAppleAudioDevice:supportsInEarDetection:supportsVoiceTrigger:supportsSpokenNotification:supportsListeningModeANC:supportsListeningModeTransparency:supportsAnnounceCall:]
  -[AFBluetoothDeviceInfo mutatedCopyWithMutator:]
  -[AFBluetoothDeviceInfo isAdvancedAppleAudioDevice]
  -[AFBluetoothDeviceInfo isEqual:]
  -[AFBluetoothDeviceInfo supportsListeningModeTransparency]
  -[AFBluetoothDeviceInfo supportsAnnounceCall]
  -[AFBluetoothDeviceInfo supportsInEarDetection]
  -[AFBluetoothDeviceInfo copyWithZone:]
  -[AFBluetoothDeviceInfo encodeWithCoder:]
  -[AFBluetoothDeviceInfo supportsSpokenNotification]
  -[AFBluetoothDeviceInfo deviceUID]


_AFBluetoothDeviceInfoMutation : NSObject <AFBluetoothDeviceInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFBluetoothDeviceInfoMutation setAddress:]
  -[_AFBluetoothDeviceInfoMutation setVendorID:]
  -[_AFBluetoothDeviceInfoMutation setSupportsVoiceTrigger:]
  -[_AFBluetoothDeviceInfoMutation setIsAdvancedAppleAudioDevice:]
  -[_AFBluetoothDeviceInfoMutation setProductID:]
  -[_AFBluetoothDeviceInfoMutation .cxx_destruct]
  -[_AFBluetoothDeviceInfoMutation setSupportsListeningModeTransparency:]
  -[_AFBluetoothDeviceInfoMutation init]
  -[_AFBluetoothDeviceInfoMutation setSupportsAnnounceCall:]
  -[_AFBluetoothDeviceInfoMutation setDeviceUID:]
  -[_AFBluetoothDeviceInfoMutation setSupportsInEarDetection:]
  -[_AFBluetoothDeviceInfoMutation setSupportsListeningModeANC:]
  -[_AFBluetoothDeviceInfoMutation generate]
  -[_AFBluetoothDeviceInfoMutation setSupportsSpokenNotification:]
  -[_AFBluetoothDeviceInfoMutation initWithBaseModel:]


AFSiriTaskUsageResult : NSObject <NSSecureCoding>
  // class methods
  +[AFSiriTaskUsageResult supportsSecureCoding]

  // instance methods
  -[AFSiriTaskUsageResult initWithCoder:]
  -[AFSiriTaskUsageResult .cxx_destruct]
  -[AFSiriTaskUsageResult _initWithOriginatingAceID:]
  -[AFSiriTaskUsageResult _originatingAceID]
  -[AFSiriTaskUsageResult _resultDescription]
  -[AFSiriTaskUsageResult encodeWithCoder:]


AFFeatureFlags : NSObject
  // class methods
  +[AFFeatureFlags dump]
  +[AFFeatureFlags sharedInstance]
  +[AFFeatureFlags isSiriXEnabled]
  +[AFFeatureFlags isDictationVoiceTriggerEnabled]
  +[AFFeatureFlags isSiriRequestDispatcherEnabled]
  +[AFFeatureFlags isMyriadNonSpeakerRawScoreThresholdEnabled]
  +[AFFeatureFlags isAnnounceMessagesInCarPlayEnabled]
  +[AFFeatureFlags isTrialDictationAssetDeliveryEnabled]
  +[AFFeatureFlags featureFlags]
  +[AFFeatureFlags isHomeAutomationBackgroundRequestEnabled]
  +[AFFeatureFlags isAnnounceGroupFaceTimeInviteEnabled]
  +[AFFeatureFlags isThemisABEnabled]
  +[AFFeatureFlags isSiriUODAvailableForLanguage:]
  +[AFFeatureFlags isTimerAlarmCoordinationEnabled]
  +[AFFeatureFlags isCrossDeviceVoiceFollowUpEnabled]
  +[AFFeatureFlags isSiriDataSharingRepromptEnabled]
  +[AFFeatureFlags isLassoEnabled]
  +[AFFeatureFlags isAudioSessionCoordinationEnabled]
  +[AFFeatureFlags isAnnounceTelephonyEnabled]
  +[AFFeatureFlags isLocationSearchContinuityEnabled]
  +[AFFeatureFlags isListeningOnBothStereoPairUnitsEnabled]
  +[AFFeatureFlags isMyriadSelfMetricsEnabled]
  +[AFFeatureFlags isTVPushToTalkEnabled]
  +[AFFeatureFlags isCrossDeviceTVControlEnabled]
  +[AFFeatureFlags isRemoraEnabled]
  +[AFFeatureFlags isAnnounceNotificationsEnabled]
  +[AFFeatureFlags isCDAFaceDetectionEnabled]
  +[AFFeatureFlags setLocationSearchContinuityEnabled:]
  +[AFFeatureFlags isHintsEnabled]
  +[AFFeatureFlags isAnnounceEnabled]


STTimer : STSiriModelObject
 @property  NSString *timerId
 @property  long long state
 @property  NSNumber *value

  // class methods
  +[STTimer supportsSecureCoding]

  // instance methods
  -[STTimer initWithCoder:]
  -[STTimer .cxx_destruct]
  -[STTimer setState:]
  -[STTimer timerId]
  -[STTimer setValue:]
  -[STTimer state]
  -[STTimer setTimerId:]
  -[STTimer value]
  -[STTimer encodeWithCoder:]


AFCarPlayAnnouncementRequestCapabilityProvider : NSObject <CARSessionObserving, AFAnnouncementRequestCapabilityProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFCarPlayAnnouncementRequestCapabilityProvider platform]
  +[AFCarPlayAnnouncementRequestCapabilityProvider requiredIntentIdentifiersForUserNotificationAnnouncementType:]
  +[AFCarPlayAnnouncementRequestCapabilityProvider provider]
  +[AFCarPlayAnnouncementRequestCapabilityProvider announceableIntentIdentifiersForUserNotificationAnnouncementType:]

  // instance methods
  -[AFCarPlayAnnouncementRequestCapabilityProvider sessionDidDisconnect:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _isCarPlayConnectedWithCompletion:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider sessionDidConnect:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider .cxx_destruct]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _updateForCarPlaySessionConnected:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider initWithQueue:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _requestTypesForCarPlayAvailableOrConnected:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider isCarPlayConnectedWithCompletion:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider updateForCarPlaySessionConnected:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _availableAnnouncementRequestTypesForCarPlayConnectionWithCompletion:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider lastKnownEligibleAnnouncementRequestTypes]
  -[AFCarPlayAnnouncementRequestCapabilityProvider addDelegate:]
  -[AFCarPlayAnnouncementRequestCapabilityProvider _setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers:]


AFSpeechRecordingAlertPolicy : NSObject <NSCopying, NSSecureCoding>
 @property  AFSpeechRecordingAlertBehavior *startingAlertBehavior
 @property  AFSpeechRecordingAlertBehavior *stoppedAlertBehavior
 @property  AFSpeechRecordingAlertBehavior *stoppedWithErrorAlertBehavior

  // class methods
  +[AFSpeechRecordingAlertPolicy supportsSecureCoding]
  +[AFSpeechRecordingAlertPolicy newWithBuilder:]

  // instance methods
  -[AFSpeechRecordingAlertPolicy _descriptionWithIndent:]
  -[AFSpeechRecordingAlertPolicy initWithCoder:]
  -[AFSpeechRecordingAlertPolicy .cxx_destruct]
  -[AFSpeechRecordingAlertPolicy mutatedCopyWithMutator:]
  -[AFSpeechRecordingAlertPolicy isEqual:]
  -[AFSpeechRecordingAlertPolicy startingAlertBehavior]
  -[AFSpeechRecordingAlertPolicy stoppedAlertBehavior]
  -[AFSpeechRecordingAlertPolicy stoppedWithErrorAlertBehavior]
  -[AFSpeechRecordingAlertPolicy initWithStartingAlertBehavior:stoppedAlertBehavior:stoppedWithErrorAlertBehavior:]
  -[AFSpeechRecordingAlertPolicy copyWithZone:]
  -[AFSpeechRecordingAlertPolicy encodeWithCoder:]


_AFSpeechRecordingAlertPolicyMutation : NSObject <AFSpeechRecordingAlertPolicyMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechRecordingAlertPolicyMutation .cxx_destruct]
  -[_AFSpeechRecordingAlertPolicyMutation init]
  -[_AFSpeechRecordingAlertPolicyMutation setStartingAlertBehavior:]
  -[_AFSpeechRecordingAlertPolicyMutation setStoppedAlertBehavior:]
  -[_AFSpeechRecordingAlertPolicyMutation setStoppedWithErrorAlertBehavior:]
  -[_AFSpeechRecordingAlertPolicyMutation generate]
  -[_AFSpeechRecordingAlertPolicyMutation initWithBaseModel:]


AFExperiment : NSObject <AFExperimentForSiriVOXSounds, AFExperimentForSiriVOXTapToSiriBehavior, AFInvocationFeedbackExperiment, NSCopying, NSSecureCoding>
 @property  BOOL playsTwoShotSoundForSiriVOXSounds
 @property  BOOL playsSessionInactiveSoundForSiriVOXSounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL playsSound
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long featureGroups
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *configurationIdentifier
 @property  NSString *configurationVersion
 @property  NSString *deploymentGroupIdentifier
 @property  NSDictionary *deploymentGroupProperties
 @property  long long deploymentReason

  // class methods
  +[AFExperiment supportsSecureCoding]
  +[AFExperiment newWithBuilder:]

  // instance methods
  -[AFExperiment configurationIdentifier]
  -[AFExperiment _descriptionWithIndent:]
  -[AFExperiment logExperimentExposureForTapToSiriBehavior]
  -[AFExperiment initWithCoder:]
  -[AFExperiment configurationVersion]
  -[AFExperiment playsSound]
  -[AFExperiment deploymentGroupIdentifier]
  -[AFExperiment isFeatureGroupThreeEnabled]
  -[AFExperiment isFeatureGroupOneEnabled]
  -[AFExperiment .cxx_destruct]
  -[AFExperiment logExperimentExposureForSiriVOXSounds]
  -[AFExperiment mutatedCopyWithMutator:]
  -[AFExperiment playsTwoShotSoundForSiriVOXSounds]
  -[AFExperiment isEqual:]
  -[AFExperiment isFeatureGroupTwoEnabled]
  -[AFExperiment playsSessionInactiveSoundForSiriVOXSounds]
  -[AFExperiment initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:]
  -[AFExperiment logExperimentExposureForInvocationFeedbacks]
  -[AFExperiment featureGroups]
  -[AFExperiment deploymentReason]
  -[AFExperiment deploymentGroupProperties]
  -[AFExperiment copyWithZone:]
  -[AFExperiment isFeatureGroupFourEnabled]
  -[AFExperiment encodeWithCoder:]


_AFExperimentMutation : NSObject <AFExperimentMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentMutation .cxx_destruct]
  -[_AFExperimentMutation setConfigurationIdentifier:]
  -[_AFExperimentMutation init]
  -[_AFExperimentMutation setDeploymentGroupIdentifier:]
  -[_AFExperimentMutation setDeploymentGroupProperties:]
  -[_AFExperimentMutation setDeploymentReason:]
  -[_AFExperimentMutation generate]
  -[_AFExperimentMutation setConfigurationVersion:]
  -[_AFExperimentMutation initWithBaseModel:]


AFRequestInfo : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *uuid
 @property  unsigned long options
 @property  NSNumber *notifyState
 @property  NSString *text
 @property  NSString *legacyDirectActionIdentifier
 @property  NSString *handoffOriginDeviceName
 @property  NSData *handoffRequestData
 @property  NSString *handoffURLString
 @property  BOOL handoffRequiresUserInteraction
 @property  NSString *handoffNotification
 @property  NSString *correctedSpeech
 @property  NSDictionary *correctedSpeechContext
 @property  SAStartRequest *startRequest
 @property  SAStartLocalRequest *startLocalRequest
 @property  NSString *directActionAppId
 @property  long long directActionEvent
 @property  long long activationEvent
 @property  AFSpeechRequestOptions *speechRequestOptions
 @property  AFTestRequestOptions *testRequestOptions
 @property  AFRequestCompletionOptions *requestCompletionOptions
 @property  NSNumber *combinedRank
 @property  NSNumber *combinedScore
 @property  NSString *interactionId
 @property  NSNumber *onDeviceUtterancesPresent
 @property  NSNumber *originalRank
 @property  NSNumber *originalScore
 @property  NSString *previousUtterance
 @property  NSString *sessionId
 @property  NSString *utteranceSource
 @property  NSString *expectedSpeakerSharedUserID
 @property  unsigned long expectedSpeakerConfidenceScore
 @property  NSDictionary *nonspeakerConfidenceScores
 @property  unsigned long timestamp
 @property  NSUUID *turnIdentifier

  // class methods
  +[AFRequestInfo supportsSecureCoding]
  +[AFRequestInfo testRequestWithText:speechRequestOptions:testOptions:]
  +[AFRequestInfo testRequestWithStartLocalRequest:]

  // instance methods
  -[AFRequestInfo setSessionId:]
  -[AFRequestInfo sessionId]
  -[AFRequestInfo setText:]
  -[AFRequestInfo initWithCoder:]
  -[AFRequestInfo turnIdentifier]
  -[AFRequestInfo combinedScore]
  -[AFRequestInfo options]
  -[AFRequestInfo activationEvent]
  -[AFRequestInfo startLocalRequest]
  -[AFRequestInfo setOptions:]
  -[AFRequestInfo .cxx_destruct]
  -[AFRequestInfo combinedRank]
  -[AFRequestInfo setActivationEvent:]
  -[AFRequestInfo setLegacyDirectActionIdentifier:]
  -[AFRequestInfo setHandoffRequestData:]
  -[AFRequestInfo setCorrectedSpeech:]
  -[AFRequestInfo setCorrectedSpeechContext:]
  -[AFRequestInfo setCombinedRank:]
  -[AFRequestInfo setCombinedScore:]
  -[AFRequestInfo interactionId]
  -[AFRequestInfo originalRank]
  -[AFRequestInfo setInteractionId:]
  -[AFRequestInfo onDeviceUtterancesPresent]
  -[AFRequestInfo setOnDeviceUtterancesPresent:]
  -[AFRequestInfo setOriginalRank:]
  -[AFRequestInfo originalScore]
  -[AFRequestInfo setOriginalScore:]
  -[AFRequestInfo previousUtterance]
  -[AFRequestInfo setPreviousUtterance:]
  -[AFRequestInfo utteranceSource]
  -[AFRequestInfo setUtteranceSource:]
  -[AFRequestInfo speechRequestOptions]
  -[AFRequestInfo setStartLocalRequest:]
  -[AFRequestInfo setStartRequest:]
  -[AFRequestInfo startRequest]
  -[AFRequestInfo setTurnIdentifier:]
  -[AFRequestInfo initWithTimestamp:]
  -[AFRequestInfo init]
  -[AFRequestInfo requiresUserInteraction]
  -[AFRequestInfo notifyState]
  -[AFRequestInfo setNotifyState:]
  -[AFRequestInfo setHandoffOriginDeviceName:]
  -[AFRequestInfo setHandoffURLString:]
  -[AFRequestInfo setHandoffRequiresUserInteraction:]
  -[AFRequestInfo setHandoffNotification:]
  -[AFRequestInfo setDirectActionAppId:]
  -[AFRequestInfo setDirectActionEvent:]
  -[AFRequestInfo setTestRequestOptions:]
  -[AFRequestInfo setRequestCompletionOptions:]
  -[AFRequestInfo setExpectedSpeakerSharedUserID:]
  -[AFRequestInfo setExpectedSpeakerConfidenceScore:]
  -[AFRequestInfo handoffOriginDeviceName]
  -[AFRequestInfo setNonspeakerConfidenceScores:]
  -[AFRequestInfo isSpeechRequest]
  -[AFRequestInfo legacyDirectActionIdentifier]
  -[AFRequestInfo requestCompletionOptions]
  -[AFRequestInfo handoffRequestData]
  -[AFRequestInfo handoffURLString]
  -[AFRequestInfo handoffRequiresUserInteraction]
  -[AFRequestInfo handoffNotification]
  -[AFRequestInfo correctedSpeech]
  -[AFRequestInfo correctedSpeechContext]
  -[AFRequestInfo directActionAppId]
  -[AFRequestInfo directActionEvent]
  -[AFRequestInfo testRequestOptions]
  -[AFRequestInfo expectedSpeakerSharedUserID]
  -[AFRequestInfo expectedSpeakerConfidenceScore]
  -[AFRequestInfo nonspeakerConfidenceScores]
  -[AFRequestInfo uuid]
  -[AFRequestInfo timestamp]
  -[AFRequestInfo copyWithZone:]
  -[AFRequestInfo text]
  -[AFRequestInfo setSpeechRequestOptions:]
  -[AFRequestInfo encodeWithCoder:]


AFInstanceContext : NSObject
 @property  NSString *preferencesSubdomain
 @property  NSString *mediaRouteIdentifier
 @property  NSString *audioDeviceIdentifier
 @property  BOOL supportsAudioPowerUpdate
 @property  BOOL supportsProxyGroupPlayer
 @property  BOOL supportsTelephony
 @property  AFInstanceInfo *info
 @property  BOOL isDefault
 @property  BOOL isCurrent

  // class methods
  +[AFInstanceContext currentContext]
  +[AFInstanceContext effectiveMachServiceName:]
  +[AFInstanceContext defaultContext]

  // instance methods
  -[AFInstanceContext mediaRouteIdentifier]
  -[AFInstanceContext createXPCConnectionWithMachServiceName:options:]
  -[AFInstanceContext preferencesSubdomain]
  -[AFInstanceContext isCurrent]
  -[AFInstanceContext createXPCListenerForMachService:targetQueue:flags:]
  -[AFInstanceContext info]
  -[AFInstanceContext audioDeviceIdentifier]
  -[AFInstanceContext isDefault]
  -[AFInstanceContext createXPCConnectionForMachService:targetQueue:flags:]
  -[AFInstanceContext supportsTelephony]
  -[AFInstanceContext supportsAudioPowerUpdate]
  -[AFInstanceContext createXPCListenerWithMachServiceName:]
  -[AFInstanceContext supportsProxyGroupPlayer]


AFInstanceContextHost : AFInstanceContext
  // class methods
  +[AFInstanceContextHost effectiveMachServiceName:]

  // instance methods
  -[AFInstanceContextHost mediaRouteIdentifier]
  -[AFInstanceContextHost createXPCConnectionWithMachServiceName:options:]
  -[AFInstanceContextHost preferencesSubdomain]
  -[AFInstanceContextHost isCurrent]
  -[AFInstanceContextHost createXPCListenerForMachService:targetQueue:flags:]
  -[AFInstanceContextHost .cxx_destruct]
  -[AFInstanceContextHost info]
  -[AFInstanceContextHost init]
  -[AFInstanceContextHost audioDeviceIdentifier]
  -[AFInstanceContextHost isDefault]
  -[AFInstanceContextHost createXPCConnectionForMachService:targetQueue:flags:]
  -[AFInstanceContextHost supportsTelephony]
  -[AFInstanceContextHost supportsAudioPowerUpdate]
  -[AFInstanceContextHost createXPCListenerWithMachServiceName:]
  -[AFInstanceContextHost supportsProxyGroupPlayer]


AFUpdateAlarmResponse : AFSiriResponse
 @property  NSArray *alarmIdentifiers

  // class methods
  +[AFUpdateAlarmResponse supportsSecureCoding]

  // instance methods
  -[AFUpdateAlarmResponse initWithCoder:]
  -[AFUpdateAlarmResponse .cxx_destruct]
  -[AFUpdateAlarmResponse setAlarmIdentifiers:]
  -[AFUpdateAlarmResponse setAlarmIdentifier:]
  -[AFUpdateAlarmResponse alarmIdentifiers]
  -[AFUpdateAlarmResponse encodeWithCoder:]


AFHomeAccessoryInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *loggingUniqueIdentifier
 @property  NSString *name
 @property  NSString *model
 @property  NSString *roomName
 @property  NSString *assistantIdentifier
 @property  BOOL isSpeaker
 @property  BOOL hasActiveThirdPartyMusicSubscription
 @property  NSString *manufacturer
 @property  NSString *categoryType
 @property  long long schemaCategoryType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeAccessoryInfo supportsSecureCoding]
  +[AFHomeAccessoryInfo newWithBuilder:]

  // instance methods
  -[AFHomeAccessoryInfo categoryType]
  -[AFHomeAccessoryInfo buildDictionaryRepresentation]
  -[AFHomeAccessoryInfo _descriptionWithIndent:]
  -[AFHomeAccessoryInfo name]
  -[AFHomeAccessoryInfo uniqueIdentifier]
  -[AFHomeAccessoryInfo initWithCoder:]
  -[AFHomeAccessoryInfo initWithDictionaryRepresentation:]
  -[AFHomeAccessoryInfo .cxx_destruct]
  -[AFHomeAccessoryInfo manufacturer]
  -[AFHomeAccessoryInfo mutatedCopyWithMutator:]
  -[AFHomeAccessoryInfo isSpeaker]
  -[AFHomeAccessoryInfo isEqual:]
  -[AFHomeAccessoryInfo assistantIdentifier]
  -[AFHomeAccessoryInfo model]
  -[AFHomeAccessoryInfo hasActiveThirdPartyMusicSubscription]
  -[AFHomeAccessoryInfo schemaCategoryType]
  -[AFHomeAccessoryInfo loggingUniqueIdentifier]
  -[AFHomeAccessoryInfo initWithUniqueIdentifier:loggingUniqueIdentifier:name:model:roomName:assistantIdentifier:isSpeaker:hasActiveThirdPartyMusicSubscription:manufacturer:categoryType:schemaCategoryType:]
  -[AFHomeAccessoryInfo copyWithZone:]
  -[AFHomeAccessoryInfo roomName]
  -[AFHomeAccessoryInfo encodeWithCoder:]


_AFHomeAccessoryInfoMutation : NSObject <AFHomeAccessoryInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeAccessoryInfoMutation setUniqueIdentifier:]
  -[_AFHomeAccessoryInfoMutation setCategoryType:]
  -[_AFHomeAccessoryInfoMutation .cxx_destruct]
  -[_AFHomeAccessoryInfoMutation setName:]
  -[_AFHomeAccessoryInfoMutation init]
  -[_AFHomeAccessoryInfoMutation setManufacturer:]
  -[_AFHomeAccessoryInfoMutation setIsSpeaker:]
  -[_AFHomeAccessoryInfoMutation setLoggingUniqueIdentifier:]
  -[_AFHomeAccessoryInfoMutation setHasActiveThirdPartyMusicSubscription:]
  -[_AFHomeAccessoryInfoMutation setSchemaCategoryType:]
  -[_AFHomeAccessoryInfoMutation setModel:]
  -[_AFHomeAccessoryInfoMutation generate]
  -[_AFHomeAccessoryInfoMutation setAssistantIdentifier:]
  -[_AFHomeAccessoryInfoMutation setRoomName:]
  -[_AFHomeAccessoryInfoMutation initWithBaseModel:]


AFClockItemStorage : NSObject <AFInvalidating>
 @property  NSString *identifier
 @property  unsigned long generation
 @property  NSDate *date
 @property  NSDictionary *itemsByID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFClockItemStorage insertOrUpdateItems:]
  -[AFClockItemStorage setGeneration:]
  -[AFClockItemStorage deleteAllItems]
  -[AFClockItemStorage .cxx_destruct]
  -[AFClockItemStorage generation]
  -[AFClockItemStorage itemWithID:]
  -[AFClockItemStorage initWithIdentifier:delegate:]
  -[AFClockItemStorage identifier]
  -[AFClockItemStorage setItemsByID:]
  -[AFClockItemStorage setDate:]
  -[AFClockItemStorage itemsByID]
  -[AFClockItemStorage beginGrouping]
  -[AFClockItemStorage invalidate]
  -[AFClockItemStorage endGroupingWithOptions:]
  -[AFClockItemStorage deleteItemsWithIDs:]
  -[AFClockItemStorage date]


AFClientLiteInternal : NSObject <AFClientLiteClientCommandHandling>
  // instance methods
  -[AFClientLiteInternal handleCommand:completion:]
  -[AFClientLiteInternal .cxx_destruct]
  -[AFClientLiteInternal _handleCommand:afterCurrentRequest:isOneWay:completion:]
  -[AFClientLiteInternal initAndHandleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
  -[AFClientLiteInternal dealloc]


AFClientLite : NSObject
  // instance methods
  -[AFClientLite .cxx_destruct]
  -[AFClientLite init]
  -[AFClientLite handleOneWayCommand:commandHandler:completion:]
  -[AFClientLite _handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]
  -[AFClientLite handleCommand:afterCurrentRequest:commandHandler:completion:]
  -[AFClientLite handleCommand:commandHandler:completion:]
  -[AFClientLite dealloc]


AFSynchronousClientLite : AFClientLite
  // instance methods
  -[AFSynchronousClientLite _handleCommand:afterCurrentRequest:isOneWay:commandHandler:completion:]


AFMediaRemoteDeviceInfo : NSObject
 @property  NSObject<OS_dispatch_queue> *serialQueue

  // class methods
  +[AFMediaRemoteDeviceInfo currentDevice]
  +[AFMediaRemoteDeviceInfo localDeviceInfo]

  // instance methods
  -[AFMediaRemoteDeviceInfo setSerialQueue:]
  -[AFMediaRemoteDeviceInfo _getMRDeviceInfoWithCompletion:]
  -[AFMediaRemoteDeviceInfo .cxx_destruct]
  -[AFMediaRemoteDeviceInfo getRouteIdentifierWithCompletion:]
  -[AFMediaRemoteDeviceInfo _activeDeviceInfoChanged:]
  -[AFMediaRemoteDeviceInfo serialQueue]
  -[AFMediaRemoteDeviceInfo init]
  -[AFMediaRemoteDeviceInfo _updateWithRouteIdentifier:groupIdentifier:]
  -[AFMediaRemoteDeviceInfo getGroupIdentifierWithCompletion:]


AFSiriDebugUIRequest : AFSiriRequest
  // class methods
  +[AFSiriDebugUIRequest supportsSecureCoding]

  // instance methods
  -[AFSiriDebugUIRequest initWithCoder:]
  -[AFSiriDebugUIRequest .cxx_destruct]
  -[AFSiriDebugUIRequest message]
  -[AFSiriDebugUIRequest createResponse]
  -[AFSiriDebugUIRequest initWithMessage:makeAppFrontmost:]
  -[AFSiriDebugUIRequest _makeAppFrontmost]
  -[AFSiriDebugUIRequest encodeWithCoder:]


AFLocalization : NSObject
  // class methods
  +[AFLocalization sharedInstance]

  // instance methods
  -[AFLocalization localizedStringForKey:table:bundle:languageCode:]
  -[AFLocalization dialectsMap]
  -[AFLocalization localizedNameOfVoiceGender:inDisplayLanguage:]
  -[AFLocalization localizedStringForKey:gender:table:bundle:languageCode:]
  -[AFLocalization outputVoiceComparator]
  -[AFLocalization outputVoiceDescriptorForOutputLanguageCode:voiceName:]
  -[AFLocalization .cxx_destruct]
  -[AFLocalization _voiceMaps]
  -[AFLocalization init]
  -[AFLocalization outputVoiceColorDescriptorForOutputLanguageCode:voiceName:]
  -[AFLocalization _getVoiceOrdering]
  -[AFLocalization loadInfoForVoicesWithLanguageCode:]
  -[AFLocalization longDisplayNameInLanguage:forSiriLanguage:]
  -[AFLocalization voiceNamesForOutputLanguageCode:gender:]
  -[AFLocalization localizedGenderOfOutputVoice:inDisplayLanguage:]
  -[AFLocalization defaultOutputVoiceForSiriSessionLanguage:]
  -[AFLocalization _voicesFromVoiceMapWithLanguage:]
  -[AFLocalization localizedNameForSiriLanguage:inDisplayLanguage:]
  -[AFLocalization voiceSimilarToVoice:inSiriSessionLanguage:]
  -[AFLocalization localizedNameOfOutputVoiceWithIdentifier:inDisplayLanguage:]
  -[AFLocalization compactDisplayNameInLanguage:forSiriLanguage:]
  -[AFLocalization localizedNameOfOutputVoice:inDisplayLanguage:]
  -[AFLocalization allOutputVoiceIdentifiersForSiriLanguage:]
  -[AFLocalization localizedCompactNameForSiriLanguage:inDisplayLanguage:]


AFDictationOptions : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *applicationName
 @property  NSString *applicationDisplayName
 @property  NSString *applicationVersion
 @property  STSiriContext *context
 @property  NSString *fieldLabel
 @property  NSString *fieldIdentifier
 @property  NSString *interactionIdentifier
 @property  NSString *requestIdentifier
 @property  long long keyboardType
 @property  NSString *prefixText
 @property  NSString *postfixText
 @property  NSString *selectedText
 @property  long long returnKeyType
 @property  long long transcriptionMode
 @property  NSArray *inlineItemList
 @property  NSString *microphoneIdentifier
 @property  NSString *orthography
 @property  NSString *keyboardIdentifier
 @property  NSString *languageCodeOverride
 @property  NSString *offlineLanguage
 @property  long long voiceSearchTypeOptions
 @property  NSDictionary *voiceSearchHeaderFields
 @property  NSDictionary *voiceSearchQueryParameters
 @property  NSDictionary *voiceTriggerEventInfo
 @property  BOOL forceOfflineRecognition
 @property  BOOL preferOnlineRecognition
 @property  BOOL detectUtterances
 @property  BOOL continuousListening
 @property  BOOL shouldHandleCapitalization
 @property  BOOL preferOnDeviceRecognition
 @property  BOOL secureOfflineOnly
 @property  BOOL farField
 @property  BOOL releaseAudioSessionOnRecordingCompletion
 @property  BOOL incremental
 @property  double maximumRecognitionDuration
 @property  long long taskHint
 @property  NSURL *originalAudioFileURL
 @property  NSDictionary *recognitionOverrides
 @property  NSURL *modelOverrideURL
 @property  AFLanguageDetectionUserContext *languageDetectionUserContext
 @property  long long dictationInputOrigin
 @property  NSString *samplingInfo

  // class methods
  +[AFDictationOptions supportsSecureCoding]

  // instance methods
  -[AFDictationOptions setRequestIdentifier:]
  -[AFDictationOptions applicationVersion]
  -[AFDictationOptions setReturnKeyType:]
  -[AFDictationOptions applicationDisplayName]
  -[AFDictationOptions requestIdentifier]
  -[AFDictationOptions setApplicationName:]
  -[AFDictationOptions keyboardType]
  -[AFDictationOptions applicationName]
  -[AFDictationOptions setKeyboardType:]
  -[AFDictationOptions returnKeyType]
  -[AFDictationOptions interactionIdentifier]
  -[AFDictationOptions selectedText]
  -[AFDictationOptions setInteractionIdentifier:]
  -[AFDictationOptions initWithCoder:]
  -[AFDictationOptions setPrefixText:]
  -[AFDictationOptions fieldLabel]
  -[AFDictationOptions .cxx_destruct]
  -[AFDictationOptions dictationInputOrigin]
  -[AFDictationOptions farField]
  -[AFDictationOptions orthography]
  -[AFDictationOptions setFieldLabel:]
  -[AFDictationOptions setReleaseAudioSessionOnRecordingCompletion:]
  -[AFDictationOptions fieldIdentifier]
  -[AFDictationOptions setFieldIdentifier:]
  -[AFDictationOptions setSelectedText:]
  -[AFDictationOptions setKeyboardIdentifier:]
  -[AFDictationOptions setSecureOfflineOnly:]
  -[AFDictationOptions setPostfixText:]
  -[AFDictationOptions setVoiceSearchTypeOptions:]
  -[AFDictationOptions setDictationInputOrigin:]
  -[AFDictationOptions setLanguageDetectionUserContext:]
  -[AFDictationOptions setPreferOnlineRecognition:]
  -[AFDictationOptions setPreferOnDeviceRecognition:]
  -[AFDictationOptions preferOnlineRecognition]
  -[AFDictationOptions setDetectUtterances:]
  -[AFDictationOptions setContinuousListening:]
  -[AFDictationOptions setShouldHandleCapitalization:]
  -[AFDictationOptions setMaximumRecognitionDuration:]
  -[AFDictationOptions taskHint]
  -[AFDictationOptions init]
  -[AFDictationOptions secureOfflineOnly]
  -[AFDictationOptions detectUtterances]
  -[AFDictationOptions forceOfflineRecognition]
  -[AFDictationOptions continuousListening]
  -[AFDictationOptions incremental]
  -[AFDictationOptions languageDetectionUserContext]
  -[AFDictationOptions preferOnDeviceRecognition]
  -[AFDictationOptions offlineLanguage]
  -[AFDictationOptions setOfflineLanguage:]
  -[AFDictationOptions prefixText]
  -[AFDictationOptions setApplicationDisplayName:]
  -[AFDictationOptions postfixText]
  -[AFDictationOptions setOrthography:]
  -[AFDictationOptions transcriptionMode]
  -[AFDictationOptions dictationOptionsWithoutTextContext]
  -[AFDictationOptions languageCodeOverride]
  -[AFDictationOptions setLanguageCodeOverride:]
  -[AFDictationOptions setTranscriptionMode:]
  -[AFDictationOptions setContext:]
  -[AFDictationOptions microphoneIdentifier]
  -[AFDictationOptions setMicrophoneIdentifier:]
  -[AFDictationOptions voiceSearchTypeOptions]
  -[AFDictationOptions voiceSearchHeaderFields]
  -[AFDictationOptions setVoiceSearchHeaderFields:]
  -[AFDictationOptions voiceSearchQueryParameters]
  -[AFDictationOptions setVoiceSearchQueryParameters:]
  -[AFDictationOptions voiceTriggerEventInfo]
  -[AFDictationOptions setVoiceTriggerEventInfo:]
  -[AFDictationOptions setForceOfflineRecognition:]
  -[AFDictationOptions shouldHandleCapitalization]
  -[AFDictationOptions setFarField:]
  -[AFDictationOptions keyboardIdentifier]
  -[AFDictationOptions releaseAudioSessionOnRecordingCompletion]
  -[AFDictationOptions setIncremental:]
  -[AFDictationOptions maximumRecognitionDuration]
  -[AFDictationOptions setTaskHint:]
  -[AFDictationOptions originalAudioFileURL]
  -[AFDictationOptions setOriginalAudioFileURL:]
  -[AFDictationOptions recognitionOverrides]
  -[AFDictationOptions setRecognitionOverrides:]
  -[AFDictationOptions modelOverrideURL]
  -[AFDictationOptions setModelOverrideURL:]
  -[AFDictationOptions inlineItemList]
  -[AFDictationOptions setInlineItemList:]
  -[AFDictationOptions samplingInfo]
  -[AFDictationOptions setSamplingInfo:]
  -[AFDictationOptions copyWithZone:]
  -[AFDictationOptions encodeWithCoder:]
  -[AFDictationOptions setApplicationVersion:]
  -[AFDictationOptions context]


AFImagePNGData : NSObject
 @property  NSData *imageData
 @property  double scale

  // instance methods
  -[AFImagePNGData setImageData:]
  -[AFImagePNGData .cxx_destruct]
  -[AFImagePNGData imageData]
  -[AFImagePNGData setScale:]
  -[AFImagePNGData scale]


AFDataStore : NSObject
  // instance methods
  -[AFDataStore .cxx_destruct]
  -[AFDataStore init]
  -[AFDataStore initWithPropertyListRepresentation:]
  -[AFDataStore propertyListRepresentation]
  -[AFDataStore setImageData:forKey:]
  -[AFDataStore imageDataForKey:]
  -[AFDataStore initWithEntries:]


_AFDataStoreEntry : NSObject
 @property  long long type
 @property  id value

  // instance methods
  -[_AFDataStoreEntry initWithType:value:]
  -[_AFDataStoreEntry .cxx_destruct]
  -[_AFDataStoreEntry propertyListRepresentation]
  -[_AFDataStoreEntry value]
  -[_AFDataStoreEntry _propertyListStringForType]
  -[_AFDataStoreEntry _typeForPropertyListString:]
  -[_AFDataStoreEntry type]
  -[_AFDataStoreEntry initWithPropertyListRepresentation:error:]
  -[_AFDataStoreEntry _valuePropertyListRepresentation]
  -[_AFDataStoreEntry _valueForPropertyListRepresentation:type:]


AFBluetoothHeadphoneInEarDetectionState : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isEnabled
 @property  long long primaryEarbudSide
 @property  long long primaryInEarStatus
 @property  long long secondaryInEarStatus

  // class methods
  +[AFBluetoothHeadphoneInEarDetectionState supportsSecureCoding]
  +[AFBluetoothHeadphoneInEarDetectionState newWithBuilder:]

  // instance methods
  -[AFBluetoothHeadphoneInEarDetectionState _descriptionWithIndent:]
  -[AFBluetoothHeadphoneInEarDetectionState initWithCoder:]
  -[AFBluetoothHeadphoneInEarDetectionState mutatedCopyWithMutator:]
  -[AFBluetoothHeadphoneInEarDetectionState secondaryInEarStatus]
  -[AFBluetoothHeadphoneInEarDetectionState isEqual:]
  -[AFBluetoothHeadphoneInEarDetectionState primaryInEarStatus]
  -[AFBluetoothHeadphoneInEarDetectionState isEnabled]
  -[AFBluetoothHeadphoneInEarDetectionState primaryEarbudSide]
  -[AFBluetoothHeadphoneInEarDetectionState initWithIsEnabled:primaryEarbudSide:primaryInEarStatus:secondaryInEarStatus:]
  -[AFBluetoothHeadphoneInEarDetectionState copyWithZone:]
  -[AFBluetoothHeadphoneInEarDetectionState encodeWithCoder:]


_AFBluetoothHeadphoneInEarDetectionStateMutation : NSObject <AFBluetoothHeadphoneInEarDetectionStateMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation .cxx_destruct]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation init]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation setPrimaryInEarStatus:]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation setSecondaryInEarStatus:]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation generate]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation setIsEnabled:]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation setPrimaryEarbudSide:]
  -[_AFBluetoothHeadphoneInEarDetectionStateMutation initWithBaseModel:]


AFEnablementConfigurationProviderParameters : NSObject <NSCopying, NSSecureCoding>
 @property  long long enablementFlow
 @property  BOOL newUser
 @property  NSError *userStatusFetchError
 @property  NSDate *dateStartedResolvingUserStatus
 @property  NSDate *dateEndedResolvingUserStatus
 @property  AFExperiment *experiment
 @property  NSError *experimentFetchError
 @property  NSDate *dateStartedResolvingExperiment
 @property  NSDate *dateEndedResolvingExperiment
 @property  NSDictionary *outputVoiceCountForRecognitionLanguage
 @property  BOOL recognitionLanguageWithMultipleOutputVoicesExists

  // class methods
  +[AFEnablementConfigurationProviderParameters supportsSecureCoding]
  +[AFEnablementConfigurationProviderParameters newWithBuilder:]

  // instance methods
  -[AFEnablementConfigurationProviderParameters _descriptionWithIndent:]
  -[AFEnablementConfigurationProviderParameters initWithCoder:]
  -[AFEnablementConfigurationProviderParameters .cxx_destruct]
  -[AFEnablementConfigurationProviderParameters initWithEnablementFlow:newUser:userStatusFetchError:dateStartedResolvingUserStatus:dateEndedResolvingUserStatus:experiment:experimentFetchError:dateStartedResolvingExperiment:dateEndedResolvingExperiment:outputVoiceCountForRecognitionLanguage:recognitionLanguageWithMultipleOutputVoicesExists:]
  -[AFEnablementConfigurationProviderParameters experiment]
  -[AFEnablementConfigurationProviderParameters mutatedCopyWithMutator:]
  -[AFEnablementConfigurationProviderParameters newUser]
  -[AFEnablementConfigurationProviderParameters isEqual:]
  -[AFEnablementConfigurationProviderParameters enablementFlow]
  -[AFEnablementConfigurationProviderParameters recognitionLanguageWithMultipleOutputVoicesExists]
  -[AFEnablementConfigurationProviderParameters userStatusFetchError]
  -[AFEnablementConfigurationProviderParameters dateStartedResolvingUserStatus]
  -[AFEnablementConfigurationProviderParameters dateEndedResolvingUserStatus]
  -[AFEnablementConfigurationProviderParameters experimentFetchError]
  -[AFEnablementConfigurationProviderParameters dateStartedResolvingExperiment]
  -[AFEnablementConfigurationProviderParameters dateEndedResolvingExperiment]
  -[AFEnablementConfigurationProviderParameters outputVoiceCountForRecognitionLanguage]
  -[AFEnablementConfigurationProviderParameters copyWithZone:]
  -[AFEnablementConfigurationProviderParameters encodeWithCoder:]


_AFEnablementConfigurationProviderParametersMutation : NSObject <AFEnablementConfigurationProviderParametersMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFEnablementConfigurationProviderParametersMutation setExperiment:]
  -[_AFEnablementConfigurationProviderParametersMutation .cxx_destruct]
  -[_AFEnablementConfigurationProviderParametersMutation init]
  -[_AFEnablementConfigurationProviderParametersMutation generate]
  -[_AFEnablementConfigurationProviderParametersMutation setEnablementFlow:]
  -[_AFEnablementConfigurationProviderParametersMutation setNewUser:]
  -[_AFEnablementConfigurationProviderParametersMutation setUserStatusFetchError:]
  -[_AFEnablementConfigurationProviderParametersMutation setDateStartedResolvingUserStatus:]
  -[_AFEnablementConfigurationProviderParametersMutation setDateEndedResolvingUserStatus:]
  -[_AFEnablementConfigurationProviderParametersMutation setExperimentFetchError:]
  -[_AFEnablementConfigurationProviderParametersMutation setDateStartedResolvingExperiment:]
  -[_AFEnablementConfigurationProviderParametersMutation setDateEndedResolvingExperiment:]
  -[_AFEnablementConfigurationProviderParametersMutation setOutputVoiceCountForRecognitionLanguage:]
  -[_AFEnablementConfigurationProviderParametersMutation setRecognitionLanguageWithMultipleOutputVoicesExists:]
  -[_AFEnablementConfigurationProviderParametersMutation initWithBaseModel:]


AFConversationStore : NSObject
 @property  NSMutableDictionary *conversationsByIdentifier
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[AFConversationStore .cxx_destruct]
  -[AFConversationStore init]
  -[AFConversationStore setQueue:]
  -[AFConversationStore queue]
  -[AFConversationStore _conversationsByIdentifier]
  -[AFConversationStore _registerConversation:withIdentifier:]
  -[AFConversationStore removeConversationWithIdentifier:completionBlock:]
  -[AFConversationStore saveConversation:withIdentifier:completionBlock:]
  -[AFConversationStore fetchConversationWithIdentifier:completionBlock:]


AFDeviceContext : NSObject <NSCopying, NSSecureCoding>
 @property  AFClockAlarmSnapshot *alarmSnapshot
 @property  AFDeviceContextMetadata *alarmSnapshotMetadata
 @property  AFClockTimerSnapshot *timerSnapshot
 @property  AFDeviceContextMetadata *timerSnapshotMetadata
 @property  AFMediaPlaybackStateSnapshot *playbackStateSnapshot
 @property  AFDeviceContextMetadata *playbackStateMetadata
 @property  AFHomeAnnouncementSnapshot *homeAnnouncementSnapshot
 @property  AFDeviceContextMetadata *homeAnnouncementSnapshotMetadata
 @property  long long heardVoiceTrigger
 @property  AFDeviceContextMetadata *heardVoiceTriggerMetadata
 @property  NSData *myriadAdvertisementContext
 @property  AFMultiUserStateSnapshot *multiUserStateSnapshot
 @property  AFDeviceContextMetadata *multiUserStateMetadata
 @property  AFLocationSnapshot *locationSnapshot
 @property  AFDeviceContextMetadata *locationMetadata
 @property  AFCallStateSnapshot *callStateSnapshot
 @property  AFDeviceContextMetadata *callStateMetadata
 @property  AFSystemStateSnapshot *systemStateSnapshot
 @property  AFDeviceContextMetadata *systemStateMetadata
 @property  unsigned long siriClientState
 @property  AFDeviceContextMetadata *siriClientStateMetadata
 @property  BOOL fromLocalDevice
 @property  NSString *contextCollectorSource
 @property  NSUUID *identifier
 @property  AFPeerInfo *deviceInfo
 @property  long long privacyClass

  // class methods
  +[AFDeviceContext supportsSecureCoding]

  // instance methods
  -[AFDeviceContext serializedBackingStore]
  -[AFDeviceContext deviceInfo]
  -[AFDeviceContext initWithCoder:]
  -[AFDeviceContext isValid]
  -[AFDeviceContext .cxx_destruct]
  -[AFDeviceContext init]
  -[AFDeviceContext isEqual:]
  -[AFDeviceContext identifier]
  -[AFDeviceContext buildDescription]
  -[AFDeviceContext timerSnapshot]
  -[AFDeviceContext alarmSnapshot]
  -[AFDeviceContext playbackStateSnapshot]
  -[AFDeviceContext homeAnnouncementSnapshot]
  -[AFDeviceContext serializedContextForKey:]
  -[AFDeviceContext contextMetadataForKey:]
  -[AFDeviceContext af_didHearVoiceTrigger]
  -[AFDeviceContext serializedHistoricalContextForKey:]
  -[AFDeviceContext historicalContextMetadataForKey:]
  -[AFDeviceContext myriadAdvertisementContext]
  -[AFDeviceContext locationSnapshot]
  -[AFDeviceContext callStateSnapshot]
  -[AFDeviceContext systemStateSnapshot]
  -[AFDeviceContext af_validFlowContext]
  -[AFDeviceContext siriClientState]
  -[AFDeviceContext alarmSnapshotMetadata]
  -[AFDeviceContext historicalSiriClientStates]
  -[AFDeviceContext historicalSiriClientStateMetadata]
  -[AFDeviceContext timerSnapshotMetadata]
  -[AFDeviceContext playbackStateMetadata]
  -[AFDeviceContext homeAnnouncementSnapshotMetadata]
  -[AFDeviceContext heardVoiceTrigger]
  -[AFDeviceContext heardVoiceTriggerMetadata]
  -[AFDeviceContext multiUserStateSnapshot]
  -[AFDeviceContext multiUserStateMetadata]
  -[AFDeviceContext locationMetadata]
  -[AFDeviceContext callStateMetadata]
  -[AFDeviceContext systemStateMetadata]
  -[AFDeviceContext siriClientStateMetadata]
  -[AFDeviceContext buildBuiltInContextsDescriptions]
  -[AFDeviceContext copyWithZone:]
  -[AFDeviceContext fromLocalDevice]
  -[AFDeviceContext _safeContextDictionary]
  -[AFDeviceContext allContextKeys]
  -[AFDeviceContext _serializedBackingStoreIncludingKeys:excludingMandatoryKeys:]
  -[AFDeviceContext partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:]
  -[AFDeviceContext initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:]
  -[AFDeviceContext partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:]
  -[AFDeviceContext updatedContextWithSerializedContextByKey:metadata:]
  -[AFDeviceContext deviceContextForDeviceContextKeys:excludingMandatoryKeys:]
  -[AFDeviceContext contextCollectorSource]
  -[AFDeviceContext privacyClass]
  -[AFDeviceContext af_serviceDeviceContextForKeys:]
  -[AFDeviceContext af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:]
  -[AFDeviceContext encodeWithCoder:]


AFDeviceContextMetadata : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *type
 @property  NSDate *deliveryDate
 @property  NSDate *expirationDate
 @property  NSArray *redactedKeyPaths
 @property  AFDeviceContextHistoryConfiguration *historyConfiguration

  // class methods
  +[AFDeviceContextMetadata supportsSecureCoding]

  // instance methods
  -[AFDeviceContextMetadata backingStore]
  -[AFDeviceContextMetadata initWithCoder:]
  -[AFDeviceContextMetadata .cxx_destruct]
  -[AFDeviceContextMetadata isExpiredByDate:]
  -[AFDeviceContextMetadata isEqual:]
  -[AFDeviceContextMetadata deliveryDate]
  -[AFDeviceContextMetadata historyConfiguration]
  -[AFDeviceContextMetadata initWithType:deliveryDate:expirationDate:redactedKeyPaths:historyConfiguration:]
  -[AFDeviceContextMetadata type]
  -[AFDeviceContextMetadata redactedKeyPaths]
  -[AFDeviceContextMetadata initWithBackingStore:]
  -[AFDeviceContextMetadata copyWithZone:]
  -[AFDeviceContextMetadata expirationDate]
  -[AFDeviceContextMetadata encodeWithCoder:]


AFSpeechCorrectionInfo : NSObject <NSSecureCoding>
 @property  long long alternativeSelectionCount
 @property  long long characterModificationCount
 @property  long long characterInsertionCount
 @property  long long characterSubstitutionCount
 @property  long long characterDeletionCount
 @property  NSString *correctedText

  // class methods
  +[AFSpeechCorrectionInfo supportsSecureCoding]

  // instance methods
  -[AFSpeechCorrectionInfo initWithCoder:]
  -[AFSpeechCorrectionInfo .cxx_destruct]
  -[AFSpeechCorrectionInfo alternativeSelectionCount]
  -[AFSpeechCorrectionInfo setAlternativeSelectionCount:]
  -[AFSpeechCorrectionInfo characterModificationCount]
  -[AFSpeechCorrectionInfo setCharacterModificationCount:]
  -[AFSpeechCorrectionInfo setCorrectedText:]
  -[AFSpeechCorrectionInfo characterInsertionCount]
  -[AFSpeechCorrectionInfo setCharacterInsertionCount:]
  -[AFSpeechCorrectionInfo characterDeletionCount]
  -[AFSpeechCorrectionInfo setCharacterDeletionCount:]
  -[AFSpeechCorrectionInfo characterSubstitutionCount]
  -[AFSpeechCorrectionInfo setCharacterSubstitutionCount:]
  -[AFSpeechCorrectionInfo correctedText]
  -[AFSpeechCorrectionInfo encodeWithCoder:]


AFMyriadRecord : NSObject <NSCopying>
 @property  BOOL advertisementDataIsDirty
 @property  unsigned char rawAudioGoodnessScore
 @property  unsigned char bump
 @property  unsigned char goodness
 @property  NSData *advertisementData
 @property  unsigned char userConfidence
 @property  unsigned short pHash
 @property  NSUUID *deviceID
 @property  unsigned char deviceGroup
 @property  unsigned char deviceClass
 @property  unsigned char productType
 @property  unsigned char tieBreaker
 @property  BOOL isMe
 @property  unsigned char isCollectedFromContextCollector

  // instance methods
  -[AFMyriadRecord setAdvertisementData:]
  -[AFMyriadRecord isMe]
  -[AFMyriadRecord setIsMe:]
  -[AFMyriadRecord bump]
  -[AFMyriadRecord setDeviceClass:]
  -[AFMyriadRecord pHash]
  -[AFMyriadRecord isSane]
  -[AFMyriadRecord .cxx_destruct]
  -[AFMyriadRecord deviceID]
  -[AFMyriadRecord advertisementData]
  -[AFMyriadRecord deviceClass]
  -[AFMyriadRecord init]
  -[AFMyriadRecord productType]
  -[AFMyriadRecord isEqual:]
  -[AFMyriadRecord setProductType:]
  -[AFMyriadRecord isATrump]
  -[AFMyriadRecord goodness]
  -[AFMyriadRecord isSlowdown]
  -[AFMyriadRecord setBump:]
  -[AFMyriadRecord tieBreaker]
  -[AFMyriadRecord setPHash:]
  -[AFMyriadRecord setDeviceID:]
  -[AFMyriadRecord copyWithZone:]
  -[AFMyriadRecord setGoodness:]
  -[AFMyriadRecord isInEarTrump]
  -[AFMyriadRecord isAContinuation]
  -[AFMyriadRecord userConfidence]
  -[AFMyriadRecord setRawAudioGoodnessScore:]
  -[AFMyriadRecord setUserConfidence:]
  -[AFMyriadRecord setDeviceGroup:]
  -[AFMyriadRecord setTieBreaker:]
  -[AFMyriadRecord setIsCollectedFromContextCollector:]
  -[AFMyriadRecord asAdvertisementData]
  -[AFMyriadRecord rawAudioGoodnessScore]
  -[AFMyriadRecord isCollectedFromContextCollector]
  -[AFMyriadRecord initWithAudioData:]
  -[AFMyriadRecord initWithDeviceID:data:]
  -[AFMyriadRecord setRawAudioGoodnessScore:withBump:]
  -[AFMyriadRecord generateRandomConfidence]
  -[AFMyriadRecord adjustByMultiplier:adding:]
  -[AFMyriadRecord generateTiebreaker]
  -[AFMyriadRecord isCarplayTrump]
  -[AFMyriadRecord isALateSupressionTrumpFor:]
  -[AFMyriadRecord isAnEmergency]
  -[AFMyriadRecord isAnEmergencyHandled]
  -[AFMyriadRecord slowdownDelay]
  -[AFMyriadRecord hasEqualAdvertismentData:]
  -[AFMyriadRecord advertisementDataIsDirty]
  -[AFMyriadRecord setAdvertisementDataIsDirty:]
  -[AFMyriadRecord deviceGroup]


AFAnalyticsEventRecord : NSObject <SiriCoreSQLiteRecord, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *recordId
 @property  AFAnalyticsEvent *event
 @property  NSString *streamUID
 @property  NSDate *dateCreated
 @property  NSString *speechId

  // class methods
  +[AFAnalyticsEventRecord supportsSecureCoding]

  // instance methods
  -[AFAnalyticsEventRecord recordId]
  -[AFAnalyticsEventRecord speechId]
  -[AFAnalyticsEventRecord initWithCoder:]
  -[AFAnalyticsEventRecord streamUID]
  -[AFAnalyticsEventRecord .cxx_destruct]
  -[AFAnalyticsEventRecord initWithEvent:streamUID:dateCreated:speechId:]
  -[AFAnalyticsEventRecord dateCreated]
  -[AFAnalyticsEventRecord siriCoreSQLiteRecord_enumerateColumnNamesAndValuesUsingBlock:]
  -[AFAnalyticsEventRecord encodeWithCoder:]
  -[AFAnalyticsEventRecord initWithEvent:streamUID:dateCreated:speechId:recordId:]
  -[AFAnalyticsEventRecord event]


AFMemoryPressureObserver : NSObject <AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMemoryPressureObserver sharedObserver]

  // instance methods
  -[AFMemoryPressureObserver removeListener:]
  -[AFMemoryPressureObserver _startObservingMemoryPressureWithOptions:]
  -[AFMemoryPressureObserver .cxx_destruct]
  -[AFMemoryPressureObserver initWithOptions:]
  -[AFMemoryPressureObserver _removeAllListeners]
  -[AFMemoryPressureObserver _handleMemoryPressureWithFlags:]
  -[AFMemoryPressureObserver _removeListener:]
  -[AFMemoryPressureObserver _addListener:]
  -[AFMemoryPressureObserver removeAllListeners]
  -[AFMemoryPressureObserver _stopObservingMemoryPressure]
  -[AFMemoryPressureObserver addListener:]
  -[AFMemoryPressureObserver getCurrentConditionWithCompletion:]
  -[AFMemoryPressureObserver dealloc]
  -[AFMemoryPressureObserver invalidate]


AFTriggerlessListeningOptions : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL showUIDuringListening
 @property  BOOL playAlertBeforeListening
 @property  BOOL showUIBeforeListening
 @property  BOOL beepBeforeListening
 @property  double delay
 @property  double endpointDelay

  // class methods
  +[AFTriggerlessListeningOptions supportsSecureCoding]

  // instance methods
  -[AFTriggerlessListeningOptions initWithCoder:]
  -[AFTriggerlessListeningOptions delay]
  -[AFTriggerlessListeningOptions copyWithZone:]
  -[AFTriggerlessListeningOptions setPlayAlertBeforeListening:]
  -[AFTriggerlessListeningOptions _initWithShowUIDuringListening:playAlertBeforeListening:]
  -[AFTriggerlessListeningOptions showUIBeforeListening]
  -[AFTriggerlessListeningOptions beepBeforeListening]
  -[AFTriggerlessListeningOptions endpointDelay]
  -[AFTriggerlessListeningOptions setShowUIDuringListening:]
  -[AFTriggerlessListeningOptions showUIDuringListening]
  -[AFTriggerlessListeningOptions playAlertBeforeListening]
  -[AFTriggerlessListeningOptions encodeWithCoder:]


AFNetworkAvailability : NSObject
  // class methods
  +[AFNetworkAvailability sharedAvailability]

  // instance methods
  -[AFNetworkAvailability _availabilityChanged]
  -[AFNetworkAvailability _stopObservingAvailability]
  -[AFNetworkAvailability _clearState]
  -[AFNetworkAvailability _updateState]
  -[AFNetworkAvailability .cxx_destruct]
  -[AFNetworkAvailability isAvailable]
  -[AFNetworkAvailability init]
  -[AFNetworkAvailability addObserver:]
  -[AFNetworkAvailability _notifyObservers]
  -[AFNetworkAvailability removeObserver:]
  -[AFNetworkAvailability _startObservingAvailability]


AFAccount : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSDictionary *lastSyncDates
 @property  NSString *localeIdentifier
 @property  BOOL isActive
 @property  NSString *label
 @property  NSString *assistantIdentifier
 @property  NSString *loggingAssistantIdentifier
 @property  NSString *speechIdentifier
 @property  NSString *hostname
 @property  NSString *peerAssistantIdentifier
 @property  NSString *peerLoggingAssistantIdentifier
 @property  NSString *peerSpeechIdentifier
 @property  NSString *peerUserAgentString
 @property  NSString *peerLanguageCode
 @property  BOOL peerSiriEnabled
 @property  NSString *peerHostname
 @property  NSString *predefinedServer
 @property  NSString *aceHost
 @property  NSDictionary *connectionPolicy
 @property  NSDate *connectionPolicyDate
 @property  NSString *connectionPolicyHostname
 @property  NSString *group
 @property  NSDate *connectionPolicyFirstFailureDate

  // class methods
  +[AFAccount supportsSecureCoding]

  // instance methods
  -[AFAccount localeIdentifier]
  -[AFAccount hostname]
  -[AFAccount label]
  -[AFAccount setGroup:]
  -[AFAccount initWithCoder:]
  -[AFAccount isActive]
  -[AFAccount .cxx_destruct]
  -[AFAccount aceHost]
  -[AFAccount setLocaleIdentifier:]
  -[AFAccount isEqual:]
  -[AFAccount assistantIdentifier]
  -[AFAccount identifier]
  -[AFAccount group]
  -[AFAccount setHostname:]
  -[AFAccount setIdentifier:]
  -[AFAccount setLabel:]
  -[AFAccount copyWithZone:]
  -[AFAccount setAssistantIdentifier:]
  -[AFAccount setAceHost:]
  -[AFAccount setLoggingAssistantIdentifier:]
  -[AFAccount setSpeechIdentifier:]
  -[AFAccount setPeerAssistantIdentifier:]
  -[AFAccount setPeerLoggingAssistantIdentifier:]
  -[AFAccount setPeerSpeechIdentifier:]
  -[AFAccount setPeerUserAgentString:]
  -[AFAccount setPeerLanguageCode:]
  -[AFAccount setPeerSiriEnabled:]
  -[AFAccount setPeerHostname:]
  -[AFAccount setPredefinedServer:]
  -[AFAccount setConnectionPolicy:]
  -[AFAccount setConnectionPolicyDate:]
  -[AFAccount setConnectionPolicyFirstFailureDate:]
  -[AFAccount setConnectionPolicyHostname:]
  -[AFAccount loggingAssistantIdentifier]
  -[AFAccount speechIdentifier]
  -[AFAccount peerAssistantIdentifier]
  -[AFAccount peerLoggingAssistantIdentifier]
  -[AFAccount peerSpeechIdentifier]
  -[AFAccount peerUserAgentString]
  -[AFAccount predefinedServer]
  -[AFAccount connectionPolicy]
  -[AFAccount connectionPolicyDate]
  -[AFAccount connectionPolicyHostname]
  -[AFAccount connectionPolicyFirstFailureDate]
  -[AFAccount lastSyncDates]
  -[AFAccount setLastSyncDates:]
  -[AFAccount messageDictionary]
  -[AFAccount initWithMessageDictionary:]
  -[AFAccount peerLanguageCode]
  -[AFAccount peerSiriEnabled]
  -[AFAccount peerHostname]
  -[AFAccount setIsActive:]
  -[AFAccount encodeWithCoder:]


AFManagedStorageConnection : NSObject <AFManagedStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFManagedStorageConnection _clearConnection]
  -[AFManagedStorageConnection _connection]
  -[AFManagedStorageConnection .cxx_destruct]
  -[AFManagedStorageConnection dealloc]
  -[AFManagedStorageConnection _managedStoreService]
  -[AFManagedStorageConnection _synchronousManagedStoreServiceWithErrorHandler:]
  -[AFManagedStorageConnection domainObjectForKey:]
  -[AFManagedStorageConnection setDomainObject:forKey:]
  -[AFManagedStorageConnection dataForKey:inKnowledgeStoreWithName:]
  -[AFManagedStorageConnection setData:forKey:inKnowledgeStoreWithName:]
  -[AFManagedStorageConnection resetKnowledgeStoreWithName:]
  -[AFManagedStorageConnection _managedStoreServiceWithErrorHandler:]


AFCreateAlarmResponse : AFSiriResponse
 @property  NSString *alarmIdentifier

  // class methods
  +[AFCreateAlarmResponse supportsSecureCoding]

  // instance methods
  -[AFCreateAlarmResponse initWithCoder:]
  -[AFCreateAlarmResponse .cxx_destruct]
  -[AFCreateAlarmResponse setAlarmIdentifier:]
  -[AFCreateAlarmResponse encodeWithCoder:]
  -[AFCreateAlarmResponse alarmIdentifier]


AFCoreAnalyticsCrossDeviceEvent : NSObject <NSCopying>
 @property  NSString *nearbyDevicesLoggingID
 @property  NSMutableDictionary *nearbyDevicesPayloads

  // instance methods
  -[AFCoreAnalyticsCrossDeviceEvent _descriptionWithIndent:]
  -[AFCoreAnalyticsCrossDeviceEvent _setTargetedDeviceContextIdentifier:withAction:payload:]
  -[AFCoreAnalyticsCrossDeviceEvent addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:]
  -[AFCoreAnalyticsCrossDeviceEvent .cxx_destruct]
  -[AFCoreAnalyticsCrossDeviceEvent init]
  -[AFCoreAnalyticsCrossDeviceEvent nearbyDevicesPayloads]
  -[AFCoreAnalyticsCrossDeviceEvent initWithNearbyDevicesLoggingID:]
  -[AFCoreAnalyticsCrossDeviceEvent addNearbyDeviceContexts:proximityInfo:]
  -[AFCoreAnalyticsCrossDeviceEvent nearbyDevicesLoggingID]
  -[AFCoreAnalyticsCrossDeviceEvent setNearbyDevicesPayloads:]
  -[AFCoreAnalyticsCrossDeviceEvent copyWithZone:]


AFRequestHandlingContext : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *requestID
 @property  NSString *inputDeviceID
 @property  NSString *inputAssistantID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFRequestHandlingContext supportsSecureCoding]
  +[AFRequestHandlingContext newWithBuilder:]

  // instance methods
  -[AFRequestHandlingContext buildDictionaryRepresentation]
  -[AFRequestHandlingContext requestID]
  -[AFRequestHandlingContext _descriptionWithIndent:]
  -[AFRequestHandlingContext inputDeviceID]
  -[AFRequestHandlingContext inputAssistantID]
  -[AFRequestHandlingContext initWithRequestID:inputDeviceID:inputAssistantID:]
  -[AFRequestHandlingContext initWithCoder:]
  -[AFRequestHandlingContext initWithDictionaryRepresentation:]
  -[AFRequestHandlingContext .cxx_destruct]
  -[AFRequestHandlingContext mutatedCopyWithMutator:]
  -[AFRequestHandlingContext isEqual:]
  -[AFRequestHandlingContext copyWithZone:]
  -[AFRequestHandlingContext encodeWithCoder:]


_AFRequestHandlingContextMutation : NSObject <AFRequestHandlingContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFRequestHandlingContextMutation setInputDeviceID:]
  -[_AFRequestHandlingContextMutation setInputAssistantID:]
  -[_AFRequestHandlingContextMutation .cxx_destruct]
  -[_AFRequestHandlingContextMutation init]
  -[_AFRequestHandlingContextMutation setRequestID:]
  -[_AFRequestHandlingContextMutation generate]
  -[_AFRequestHandlingContextMutation initWithBaseModel:]


AFDismissTimerRequest : AFSiriRequest
 @property  NSArray *timerURLs

  // class methods
  +[AFDismissTimerRequest supportsSecureCoding]

  // instance methods
  -[AFDismissTimerRequest setTimerURLs:]
  -[AFDismissTimerRequest initWithCoder:]
  -[AFDismissTimerRequest .cxx_destruct]
  -[AFDismissTimerRequest createResponse]
  -[AFDismissTimerRequest timerURLs]
  -[AFDismissTimerRequest encodeWithCoder:]


AFMyriadAdvertisementContextRecord : NSObject
 @property  unsigned char advertisementContextVersion
 @property  long long advertisementRecordType
 @property  double voiceTriggerEndTime
 @property  NSData *advertisementPayload
 @property  NSUUID *deviceID
 @property  double advertisementDispatchTime

  // instance methods
  -[AFMyriadAdvertisementContextRecord _initializeMyriadAdvertisementContextRecordFromData:]
  -[AFMyriadAdvertisementContextRecord _deviceIDFromBytes:]
  -[AFMyriadAdvertisementContextRecord _advertismentPayloadSizeForVersion:]
  -[AFMyriadAdvertisementContextRecord _getAdvertismentRecordTypeForVersion:data:]
  -[AFMyriadAdvertisementContextRecord _getVoiceTriggerEndTimeForVersion:data:]
  -[AFMyriadAdvertisementContextRecord _getMyriadAdvertisementDataForVersion:data:]
  -[AFMyriadAdvertisementContextRecord _getDeviceIdForVersion:data:]
  -[AFMyriadAdvertisementContextRecord recordForDeviceId:]
  -[AFMyriadAdvertisementContextRecord initWithAdvertisementRecordType:voiceTriggerEndTime:advertisementPayload:deviceID:]
  -[AFMyriadAdvertisementContextRecord initWithMyriadAdvertisementContextRecordData:]
  -[AFMyriadAdvertisementContextRecord myriadAdvertisementContextAsData]
  -[AFMyriadAdvertisementContextRecord compareAdvertisementPayload:]
  -[AFMyriadAdvertisementContextRecord voiceTriggerEndTime]
  -[AFMyriadAdvertisementContextRecord isSaneForVoiceTriggerEndTime:endtimeDistanceThreshold:]
  -[AFMyriadAdvertisementContextRecord advertisementContextVersion]
  -[AFMyriadAdvertisementContextRecord advertisementRecordType]
  -[AFMyriadAdvertisementContextRecord advertisementPayload]
  -[AFMyriadAdvertisementContextRecord advertisementDispatchTime]
  -[AFMyriadAdvertisementContextRecord setAdvertisementDispatchTime:]
  -[AFMyriadAdvertisementContextRecord .cxx_destruct]
  -[AFMyriadAdvertisementContextRecord deviceID]


AFSiriIncomingCall : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *callUUID
 @property  NSString *callProviderIdentifier
 @property  NSString *callProviderBundleID
 @property  NSArray *callerContactIdentifiers
 @property  TUHandle *handle
 @property  BOOL isVideo
 @property  BOOL isCallerIDBlocked

  // class methods
  +[AFSiriIncomingCall supportsSecureCoding]

  // instance methods
  -[AFSiriIncomingCall isVideo]
  -[AFSiriIncomingCall initWithCoder:]
  -[AFSiriIncomingCall isCallerIDBlocked]
  -[AFSiriIncomingCall initWithCallUUID:callProviderIdentifier:callProviderBundleID:callers:handle:isVideo:isCallerIDBlocked:]
  -[AFSiriIncomingCall initWithCallUUID:callProviderIdentifier:callProviderBundleID:callerContactIdentifiers:handle:isVideo:isCallerIDBlocked:]
  -[AFSiriIncomingCall callProviderIdentifier]
  -[AFSiriIncomingCall callProviderBundleID]
  -[AFSiriIncomingCall callerContactIdentifiers]
  -[AFSiriIncomingCall .cxx_destruct]
  -[AFSiriIncomingCall init]
  -[AFSiriIncomingCall callUUID]
  -[AFSiriIncomingCall handle]
  -[AFSiriIncomingCall copyWithZone:]
  -[AFSiriIncomingCall encodeWithCoder:]


AFRemoteRequestWatcher : NSObject <AFSiriActivationListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFRemoteRequestWatcher setActivationHandler:]
  -[AFRemoteRequestWatcher _setupRequestListener]
  -[AFRemoteRequestWatcher _dispatchSpeechRequestOptions:]
  -[AFRemoteRequestWatcher _setupSpeechRequestListener]
  -[AFRemoteRequestWatcher setNewRequestHandler:]
  -[AFRemoteRequestWatcher siriActivationListener:handleIntent:inBackgroundAppWithBundleId:reply:]
  -[AFRemoteRequestWatcher siriActivationListener:handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
  -[AFRemoteRequestWatcher setPrewarmHandler:]
  -[AFRemoteRequestWatcher siriActivationListener:prewarmWithRequestInfo:context:completion:]
  -[AFRemoteRequestWatcher siriActivationListener:activateWithRequestInfo:context:completion:]
  -[AFRemoteRequestWatcher siriActivationListener:deactivateForReason:options:context:completion:]
  -[AFRemoteRequestWatcher siriActivationListener:handleButtonEventFromContext:completion:]
  -[AFRemoteRequestWatcher setIntentHandler:]
  -[AFRemoteRequestWatcher setIntentForwardingActionHandler:]
  -[AFRemoteRequestWatcher setButtonEventHandler:]
  -[AFRemoteRequestWatcher setNewSpeechRequestHandler:]
  -[AFRemoteRequestWatcher .cxx_destruct]
  -[AFRemoteRequestWatcher init]
  -[AFRemoteRequestWatcher setRequestHandler:]
  -[AFRemoteRequestWatcher setDismissalHandler:]
  -[AFRemoteRequestWatcher dealloc]


AFFuture : NSObject
  // instance methods
  -[AFFuture initAndGetSetterBlock:]
  -[AFFuture waitForValue:]
  -[AFFuture .cxx_destruct]


AFPineBoardSystemStateObserver : NSObject
 @property  long long pineBoardSystemState

  // class methods
  +[AFPineBoardSystemStateObserver defaultObserver]

  // instance methods
  -[AFPineBoardSystemStateObserver removeListener:]
  -[AFPineBoardSystemStateObserver _handlePineBoardStateChange:]
  -[AFPineBoardSystemStateObserver _stopObservingPineBoardSystemState]
  -[AFPineBoardSystemStateObserver _beginGroup]
  -[AFPineBoardSystemStateObserver _endGroup]
  -[AFPineBoardSystemStateObserver .cxx_destruct]
  -[AFPineBoardSystemStateObserver pineBoardSystemState]
  -[AFPineBoardSystemStateObserver _startObservingPineBoardSystemState]
  -[AFPineBoardSystemStateObserver initWithQueue:]
  -[AFPineBoardSystemStateObserver addListener:]


AFSafetyBlock : NSObject
  // instance methods
  -[AFSafetyBlock invokeWithSignal:]
  -[AFSafetyBlock .cxx_destruct]
  -[AFSafetyBlock initWithBlock:]
  -[AFSafetyBlock invoke]
  -[AFSafetyBlock dealloc]


AFOneArgumentSafetyBlock : NSObject
  // instance methods
  -[AFOneArgumentSafetyBlock invokeWithValue:]
  -[AFOneArgumentSafetyBlock .cxx_destruct]
  -[AFOneArgumentSafetyBlock initWithBlock:defaultValue:]
  -[AFOneArgumentSafetyBlock initWithBlock:]
  -[AFOneArgumentSafetyBlock dealloc]


AFTwoArgumentSafetyBlock : NSObject
  // instance methods
  -[AFTwoArgumentSafetyBlock .cxx_destruct]
  -[AFTwoArgumentSafetyBlock initWithBlock:]
  -[AFTwoArgumentSafetyBlock initWithBlock:defaultValue1:defaultValue2:]
  -[AFTwoArgumentSafetyBlock invokeWithValue:andValue:]
  -[AFTwoArgumentSafetyBlock dealloc]


AFThreeArgumentSafetyBlock : NSObject
  // instance methods
  -[AFThreeArgumentSafetyBlock initWithBlock:defaultValue1:defaultValue2:defaultValue3:]
  -[AFThreeArgumentSafetyBlock invokeWithValue:andValue:andValue:]
  -[AFThreeArgumentSafetyBlock .cxx_destruct]
  -[AFThreeArgumentSafetyBlock initWithBlock:]
  -[AFThreeArgumentSafetyBlock dealloc]


AFMultiArgumentSafetyBlock : NSObject
  // instance methods
  -[AFMultiArgumentSafetyBlock initWithBlock:defaultValueArray:]
  -[AFMultiArgumentSafetyBlock invokeWithValueArray:]
  -[AFMultiArgumentSafetyBlock invokeWithValues:]
  -[AFMultiArgumentSafetyBlock .cxx_destruct]
  -[AFMultiArgumentSafetyBlock initWithBlock:defaultValues:]
  -[AFMultiArgumentSafetyBlock initWithBlock:]
  -[AFMultiArgumentSafetyBlock invoke]


AFOpportuneSpeakingModelFeedback : NSObject <NSSecureCoding>
 @property  NSDate *lastNegativeFeedback
 @property  NSDictionary *negativeFeedbackByContact

  // class methods
  +[AFOpportuneSpeakingModelFeedback supportsSecureCoding]

  // instance methods
  -[AFOpportuneSpeakingModelFeedback initWithCoder:]
  -[AFOpportuneSpeakingModelFeedback .cxx_destruct]
  -[AFOpportuneSpeakingModelFeedback lastNegativeFeedback]
  -[AFOpportuneSpeakingModelFeedback setLastNegativeFeedback:]
  -[AFOpportuneSpeakingModelFeedback negativeFeedbackByContact]
  -[AFOpportuneSpeakingModelFeedback setNegativeFeedbackByContact:]
  -[AFOpportuneSpeakingModelFeedback encodeWithCoder:]


AFOpportuneSpeakingModelFeedbackManager : NSObject
  // instance methods
  -[AFOpportuneSpeakingModelFeedbackManager save]
  -[AFOpportuneSpeakingModelFeedbackManager .cxx_destruct]
  -[AFOpportuneSpeakingModelFeedbackManager lastNegativeFeedbackForContact:]
  -[AFOpportuneSpeakingModelFeedbackManager setLastNegativeFeedbackForContact:]
  -[AFOpportuneSpeakingModelFeedbackManager fetchNotificationUsageForSpeakableId:withStartDate:withEndDate:withHandler:]
  -[AFOpportuneSpeakingModelFeedbackManager interactionDetectedForSpeakableId:]
  -[AFOpportuneSpeakingModelFeedbackManager init]
  -[AFOpportuneSpeakingModelFeedbackManager loadIfNecessary]


AFMyriadSession : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long generation
 @property  NSUUID *sessionId
 @property  NSUUID *currentElectionAdvertisementId
 @property  NSData *currentElectionAdvertisementData
 @property  NSDictionary *electionAdvertisementDataByIds

  // class methods
  +[AFMyriadSession supportsSecureCoding]
  +[AFMyriadSession newWithBuilder:]

  // instance methods
  -[AFMyriadSession sessionId]
  -[AFMyriadSession _descriptionWithIndent:]
  -[AFMyriadSession initWithCoder:]
  -[AFMyriadSession .cxx_destruct]
  -[AFMyriadSession currentElectionAdvertisementId]
  -[AFMyriadSession currentElectionAdvertisementData]
  -[AFMyriadSession electionAdvertisementDataByIds]
  -[AFMyriadSession initWithGeneration:sessionId:currentElectionAdvertisementId:currentElectionAdvertisementData:electionAdvertisementDataByIds:]
  -[AFMyriadSession generation]
  -[AFMyriadSession mutatedCopyWithMutator:]
  -[AFMyriadSession isEqual:]
  -[AFMyriadSession copyWithZone:]
  -[AFMyriadSession encodeWithCoder:]


_AFMyriadSessionMutation : NSObject <AFMyriadSessionMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMyriadSessionMutation setSessionId:]
  -[_AFMyriadSessionMutation setGeneration:]
  -[_AFMyriadSessionMutation .cxx_destruct]
  -[_AFMyriadSessionMutation setCurrentElectionAdvertisementId:]
  -[_AFMyriadSessionMutation setCurrentElectionAdvertisementData:]
  -[_AFMyriadSessionMutation setElectionAdvertisementDataByIds:]
  -[_AFMyriadSessionMutation init]
  -[_AFMyriadSessionMutation generate]
  -[_AFMyriadSessionMutation initWithBaseModel:]


AFMetrics : NSObject <NSSecureCoding>
 @property  NSString *originalCommandId
 @property  long long category
 @property  NSDictionary *eventInfo
 @property  NSNumber *duration

  // class methods
  +[AFMetrics supportsSecureCoding]

  // instance methods
  -[AFMetrics initWithCoder:]
  -[AFMetrics .cxx_destruct]
  -[AFMetrics originalCommandId]
  -[AFMetrics setOriginalCommandId:]
  -[AFMetrics categoryString]
  -[AFMetrics setDuration:]
  -[AFMetrics initWithOriginalCommandId:category:eventInfo:duration:]
  -[AFMetrics aceMetrics]
  -[AFMetrics _roundDouble:toSignificantDigits:]
  -[AFMetrics initWithOriginalCommandId:category:duration:]
  -[AFMetrics eventInfo]
  -[AFMetrics category]
  -[AFMetrics setCategory:]
  -[AFMetrics duration]
  -[AFMetrics encodeWithCoder:]
  -[AFMetrics setEventInfo:]


AFSiriUserNotificationRequest : NSObject <AFSiriExternalRequest>
  // class methods
  +[AFSiriUserNotificationRequest canBeHandled]
  +[AFSiriUserNotificationRequest supportedOnPlatform]
  +[AFSiriUserNotificationRequest supportedForApplicationWithBundleId:]

  // instance methods
  -[AFSiriUserNotificationRequest .cxx_destruct]
  -[AFSiriUserNotificationRequest initWithUserNotification:sourceAppId:platform:]
  -[AFSiriUserNotificationRequest initWithUserNotification:sourceAppId:]
  -[AFSiriUserNotificationRequest deactivateRequestForReason:completion:]
  -[AFSiriUserNotificationRequest withdrawalRequestWithCompletion:]
  -[AFSiriUserNotificationRequest performRequestWithCompletion:]


AFSiriUserNotificationRequestCapabilityManager : NSObject <AFAnnouncementRequestCapabilityProvidingDelegate>
  // class methods
  +[AFSiriUserNotificationRequestCapabilityManager _classForPlatform:]
  +[AFSiriUserNotificationRequestCapabilityManager sharedManager]
  +[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]

  // instance methods
  -[AFSiriUserNotificationRequestCapabilityManager .cxx_destruct]
  -[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
  -[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
  -[AFSiriUserNotificationRequestCapabilityManager _initWithPlatform:]
  -[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentEligibleSetupState:onPlatform:]
  -[AFSiriUserNotificationRequestCapabilityManager fetchEligibleSetupStateWithCompletion:]
  -[AFSiriUserNotificationRequestCapabilityManager fetchRequestCanBeHandledStateWithCompletion:]
  -[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:]
  -[AFSiriUserNotificationRequestCapabilityManager provider:eligibleAnnouncementRequestTypesChanged:]
  -[AFSiriUserNotificationRequestCapabilityManager addObserver:]
  -[AFSiriUserNotificationRequestCapabilityManager provider:availableAnnouncementRequestTypesChanged:]
  -[AFSiriUserNotificationRequestCapabilityManager removeObserver:]


AFSiriNotificationRequest : AFSiriUserNotificationRequest
  // instance methods
  -[AFSiriNotificationRequest initWithNotifications:sourceAppId:]


AFSettingsConnection : NSObject
 @property  <AFSettingsDelegate> *_delegate

  // class methods
  +[AFSettingsConnection initialize]

  // instance methods
  -[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:platform:]
  -[AFSettingsConnection getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:]
  -[AFSettingsConnection setSiriDataSharingHomePodSetupDeviceIsValid:completion:]
  -[AFSettingsConnection _delegate]
  -[AFSettingsConnection setSpokenNotificationIsAlwaysOpportune:]
  -[AFSettingsConnection setOutputVoice:]
  -[AFSettingsConnection setAnnounceNotificationsInCarPlayTemporarilyDisabled:]
  -[AFSettingsConnection getAnnounceNotificationsInCarPlayTypeWithCompletion:]
  -[AFSettingsConnection _clearConnection]
  -[AFSettingsConnection getOfflineDictationStatusWithCompletion:]
  -[AFSettingsConnection killDaemon]
  -[AFSettingsConnection clearAnnounceNotificationsInCarPlayType]
  -[AFSettingsConnection setSpokenNotificationShouldSkipTriggerlessReplies:]
  -[AFSettingsConnection setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:]
  -[AFSettingsConnection getExperimentForConfigurationIdentifier:completion:]
  -[AFSettingsConnection _setDelegate:]
  -[AFSettingsConnection setAnnounceNotificationsInCarPlayType:]
  -[AFSettingsConnection siriDesignModeIsEnabled:]
  -[AFSettingsConnection setOpportuneSpeakingEdgeDetectorSignalOverride:]
  -[AFSettingsConnection getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:]
  -[AFSettingsConnection clearAnnounceNotificationsInCarPlayTemporarilyDisabled]
  -[AFSettingsConnection barrier]
  -[AFSettingsConnection getSpokenNotificationIsAlwaysOpportuneWithCompletion:]
  -[AFSettingsConnection clearSpokenNotificationTemporarilyDisabledStatus]
  -[AFSettingsConnection pushMyriadAdvertisementContext:completionHandler:]
  -[AFSettingsConnection setNanoAssistantEnabled:withCompletion:]
  -[AFSettingsConnection _connection]
  -[AFSettingsConnection setNanoTTSSpeakerVolume:withCompletion:]
  -[AFSettingsConnection setSupplementalLanguages:forProduct:forBuildVersion:completion:]
  -[AFSettingsConnection accounts]
  -[AFSettingsConnection getSpeakerCapabilityForAccessoryWithUUID:completionHandler:]
  -[AFSettingsConnection initWithInstanceContext:]
  -[AFSettingsConnection setSiriGradingEnabled:completion:]
  -[AFSettingsConnection setLanguage:]
  -[AFSettingsConnection getCurrentRequestIsWatchAuthenticatedWithCompletion:]
  -[AFSettingsConnection siriGradingIsEnabled:]
  -[AFSettingsConnection currectNWActivityId:]
  -[AFSettingsConnection setActiveAccountIdentifier:]
  -[AFSettingsConnection _setSyncToken:forAceHost:completion:]
  -[AFSettingsConnection removeMultiUserWithSharedUserID:completion:]
  -[AFSettingsConnection saveAccount:setActive:]
  -[AFSettingsConnection setXPCConnectionManagementQueue:]
  -[AFSettingsConnection clearOpportuneSpeakingEdgeDetectorSignalOverride]
  -[AFSettingsConnection fetchAccountsWithCompletion:]
  -[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:]
  -[AFSettingsConnection getConnectedBluetoothDeviceInfoArrayWithCompletion:]
  -[AFSettingsConnection fetchActiveAccount:]
  -[AFSettingsConnection getCurrentContextSnapshotWithCompletion:]
  -[AFSettingsConnection setLanguage:withCompletion:]
  -[AFSettingsConnection getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:]
  -[AFSettingsConnection setOnDeviceDictationAvailableAlertPresented:]
  -[AFSettingsConnection removeMultiUserUser:completion:]
  -[AFSettingsConnection postTestResultCandidateWithRcId:recognitionSausage:]
  -[AFSettingsConnection .cxx_destruct]
  -[AFSettingsConnection getSupplementalLanguageDictionaryForProduct:completion:]
  -[AFSettingsConnection getSharedUserIdForHomeUserId:completion:]
  -[AFSettingsConnection _setVoices:]
  -[AFSettingsConnection getContextCollectorsInfoWithCompletion:]
  -[AFSettingsConnection _readSyncTokenForAceHost:completion:]
  -[AFSettingsConnection startUIMockServerRequestWithReplayFileURL:completion:]
  -[AFSettingsConnection createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:]
  -[AFSettingsConnection getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:]
  -[AFSettingsConnection stopAudioPlaybackRequest:immediately:]
  -[AFSettingsConnection fetchAccountsSynchronously:completion:]
  -[AFSettingsConnection setSiriDataSharingOptInAlertPresented:completion:]
  -[AFSettingsConnection getBluetoothWirelessSplitterSessionInfoWithCompletion:]
  -[AFSettingsConnection fetchExperimentConfigurationsWithCompletion:]
  -[AFSettingsConnection getStereoPartnerLastMyriadWinDate:]
  -[AFSettingsConnection fetchSupportedMultiUserLanguageCodes:]
  -[AFSettingsConnection setNanoRaiseToSpeakEnabled:withCompletion:]
  -[AFSettingsConnection stopAllAudioPlaybackRequests:]
  -[AFSettingsConnection deleteSiriHistoryWithContext:withCompletion:]
  -[AFSettingsConnection startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]
  -[AFSettingsConnection _filterVoices:forLanguage:]
  -[AFSettingsConnection showMultiUserSharedUserIDsCompletion:]
  -[AFSettingsConnection getAudioSessionCoordinationSnapshotWithCompletion:]
  -[AFSettingsConnection _syncDataWithAnchorKeys:forceReset:reason:completion:]
  -[AFSettingsConnection setSpokenNotificationShouldAnnounceAllNotifications:]
  -[AFSettingsConnection getPeerIdentifiers:]
  -[AFSettingsConnection init]
  -[AFSettingsConnection _updateVoicesIncludingAssetInfo:completion:]
  -[AFSettingsConnection setOfflineDictationProfileOverridePath:completion:]
  -[AFSettingsConnection resetAnalyticsStoreWithCompletion:]
  -[AFSettingsConnection getSiriOutputVolumeWithCompletion:]
  -[AFSettingsConnection startUIRequest:]
  -[AFSettingsConnection setNanoUseDeviceSpeakerForTTS:withCompletion:]
  -[AFSettingsConnection setSiriDataSharingOptInStatus:completion:]
  -[AFSettingsConnection getHomeUserIdForSharedUserId:completion:]
  -[AFSettingsConnection setLanguage:outputVoice:]
  -[AFSettingsConnection getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:]
  -[AFSettingsConnection homeOnboardingFlowInvoked:completion:]
  -[AFSettingsConnection setHorsemanSupplementalLanguageDictionary:completion:]
  -[AFSettingsConnection getBluetoothDeviceInfoWithUID:completion:]
  -[AFSettingsConnection getStereoPairState:]
  -[AFSettingsConnection fetchExperimentContextWithCompletion:]
  -[AFSettingsConnection getManagedLocalAndRemotePeerInfoWithCompletion:]
  -[AFSettingsConnection setConfigOverrides:completion:]
  -[AFSettingsConnection resetExperimentForConfigurationIdentifier:completion:]
  -[AFSettingsConnection addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:]
  -[AFSettingsConnection getOriginDeviceInfoForContextIdentifier:completion:]
  -[AFSettingsConnection setNanoDictationEnabled:withCompletion:]
  -[AFSettingsConnection getAvailableVoicesForLanguage:includeAssetInfo:completion:]
  -[AFSettingsConnection _runServiceMaintenance]
  -[AFSettingsConnection setSiriOutputVolume:forAudioRoute:completion:]
  -[AFSettingsConnection sendMetricsToServerWithCompletion:]
  -[AFSettingsConnection getSupplementalLanguagesDictionary:]
  -[AFSettingsConnection getBluetoothDeviceInfoWithAddress:completion:]
  -[AFSettingsConnection configOverrides:]
  -[AFSettingsConnection _getSharedCompanionInfo:]
  -[AFSettingsConnection getCrossDeviceContextWithCompletion:]
  -[AFSettingsConnection startRemoteRequest:onPeer:completion:]
  -[AFSettingsConnection startUIRequestWithInfo:completion:]
  -[AFSettingsConnection setDictationEnabled:]
  -[AFSettingsConnection _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]
  -[AFSettingsConnection synchronizeExperimentConfigurationsIfApplicableWithCompletion:]
  -[AFSettingsConnection getActiveASRLanguagesWithCompletion:]
  -[AFSettingsConnection setNanoCrownActivationEnabled:withCompletion:]
  -[AFSettingsConnection _sendSyncTokenToPersonalRequestsEnabledAccessoriesWithCompletion:]
  -[AFSettingsConnection fetchMultiUserVoiceIdentificationSetting:]
  -[AFSettingsConnection getCapabilitiesDataFromReachableDevicesWithCompletion:]
  -[AFSettingsConnection getOfflineAssistantStatusWithCompletion:]
  -[AFSettingsConnection _tellDelegatePartialVerificationResult:]
  -[AFSettingsConnection fetchEventRecordsFromAnalyticsStoreAtPath:completion:]
  -[AFSettingsConnection getAvailableVoicesForRecognitionLanguage:includeAssetInfo:completion:]
  -[AFSettingsConnection triggerABCForType:subType:context:completionHandler:]
  -[AFSettingsConnection stopObservingWirelessSplitterSession]
  -[AFSettingsConnection forceMultiUserSync:download:completion:]
  -[AFSettingsConnection _handleCommand:completion:]
  -[AFSettingsConnection setSiriOutputVolume:completion:]
  -[AFSettingsConnection _updateMultiUserInfoForUser:score:companionId:companionSpeechId:idsIdentifier:aceHost:reset:completion:]
  -[AFSettingsConnection setSiriDesignModeEnabled:completion:]
  -[AFSettingsConnection startUIRequestWithText:completion:]
  -[AFSettingsConnection getSupplementalLanguagesModificationDate:]
  -[AFSettingsConnection getRecordedAudioDirectoryPathsWithCompletion:]
  -[AFSettingsConnection getAssetStatusForLanguage:completionHandler:]
  -[AFSettingsConnection _clearSyncNeededForKey:]
  -[AFSettingsConnection updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:]
  -[AFSettingsConnection showPrimaryUserSharedUserIDWithCompletion:]
  -[AFSettingsConnection shutdownSessionIfIdle]
  -[AFSettingsConnection setNanoSiriDataSharingOptInStatus:withCompletion:]
  -[AFSettingsConnection setHardcodedBluetoothProximity:]
  -[AFSettingsConnection _synchronousSettingsServiceWithErrorHandler:]
  -[AFSettingsConnection setSupplementalLanguageDictionary:forProduct:completion:]
  -[AFSettingsConnection getAvailableVoicesForSynthesisLanguage:completion:]
  -[AFSettingsConnection deleteSiriHistoryWithCompletion:]
  -[AFSettingsConnection postTestResultSelectedWithRcId:]
  -[AFSettingsConnection setSiriDataSharingOptInStatus:propagateToHomeAccessories:source:reason:completion:]
  -[AFSettingsConnection getSiriOutputVolumeForAudioRoute:completion:]
  -[AFSettingsConnection purgeAnalyticsStoreWithCompletion:]
  -[AFSettingsConnection setAssistantEnabled:]
  -[AFSettingsConnection getSiriDataSharingOptInStatusWithCompletion:]
  -[AFSettingsConnection startUIRequestWithInfo:]
  -[AFSettingsConnection setSpokenNotificationProxCardSeen:]
  -[AFSettingsConnection setLanguage:outputVoice:withCompletion:]
  -[AFSettingsConnection getSupplementalLanguagesForProduct:forBuildVersion:completion:]
  -[AFSettingsConnection setNanoPhraseSpotterEnabled:withCompletion:]
  -[AFSettingsConnection startObservingWirelessSplitterSession]
  -[AFSettingsConnection getDevicesWithAvailablePHSAssetsForLanguage:completion:]
  -[AFSettingsConnection _setSyncNeededForReason:]
  -[AFSettingsConnection getProximityTuplesWithCompletion:]
  -[AFSettingsConnection areSiriUODAssetsAvailable:]
  -[AFSettingsConnection dealloc]
  -[AFSettingsConnection startUIRequestWithText:]
  -[AFSettingsConnection disableAndDeleteCloudSyncWithCompletion:]
  -[AFSettingsConnection fetchSupportedLanguageCodes:]
  -[AFSettingsConnection setNanoLanguage:withCompletion:]
  -[AFSettingsConnection _voices]
  -[AFSettingsConnection setAssistantLoggingEnabled:]
  -[AFSettingsConnection startUIRequestWithSpeechAudioFileURL:]
  -[AFSettingsConnection showMultiUsers:]
  -[AFSettingsConnection startAudioPlaybackRequest:options:completion:]
  -[AFSettingsConnection getMeCard:]
  -[AFSettingsConnection getHorsemanSupplementalLanguageDictionary:]
  -[AFSettingsConnection setRecognizeMyVoiceEnabled:]
  -[AFSettingsConnection accessRecordedAudioWithIdentifier:completion:]
  -[AFSettingsConnection deleteAccountWithIdentifier:]
  -[AFSettingsConnection setOutputVoice:withCompletion:]
  -[AFSettingsConnection getAvailableVoicesForRecognitionLanguage:completion:]
  -[AFSettingsConnection getDevicesWithAvailablePHSAssetsOnDeviceCheck:]
  -[AFSettingsConnection trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]
  -[AFSettingsConnection getCurrentAccessoryInfoWithCompletion:]
  -[AFSettingsConnection dismissUI]
  -[AFSettingsConnection setNanoOutputVoice:withCompletion:]
  -[AFSettingsConnection _fetchPeerData:]
  -[AFSettingsConnection shouldSuppressSiriDataSharingOptInAlert:]
  -[AFSettingsConnection _settingsServiceWithErrorHandler:]
  -[AFSettingsConnection getPairedBluetoothDeviceInfoArrayWithCompletion:]
  -[AFSettingsConnection _getSharedUserID:]
  -[AFSettingsConnection _tellDelegateServerVerificationReport:]
  -[AFSettingsConnection hasEverSetLanguageCodeWithCompletion:]


AFSettingsConnectionServiceDelegate : NSObject <AFSettingsServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSettingsConnectionServiceDelegate .cxx_destruct]
  -[AFSettingsConnectionServiceDelegate syncVerificationPartialResult:]
  -[AFSettingsConnectionServiceDelegate initWithSettingsConnection:]
  -[AFSettingsConnectionServiceDelegate syncVerificationServerReport:]


AFAudioSessionCoordinationDeviceInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  AFPeerInfo *peerInfo
 @property  AFAudioSessionCoordinationSystemInfo *systemInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFAudioSessionCoordinationDeviceInfo supportsSecureCoding]
  +[AFAudioSessionCoordinationDeviceInfo newWithBuilder:]

  // instance methods
  -[AFAudioSessionCoordinationDeviceInfo buildDictionaryRepresentation]
  -[AFAudioSessionCoordinationDeviceInfo _descriptionWithIndent:]
  -[AFAudioSessionCoordinationDeviceInfo initWithCoder:]
  -[AFAudioSessionCoordinationDeviceInfo initWithDictionaryRepresentation:]
  -[AFAudioSessionCoordinationDeviceInfo .cxx_destruct]
  -[AFAudioSessionCoordinationDeviceInfo initWithPeerInfo:systemInfo:]
  -[AFAudioSessionCoordinationDeviceInfo mutatedCopyWithMutator:]
  -[AFAudioSessionCoordinationDeviceInfo isEqual:]
  -[AFAudioSessionCoordinationDeviceInfo systemInfo]
  -[AFAudioSessionCoordinationDeviceInfo peerInfo]
  -[AFAudioSessionCoordinationDeviceInfo copyWithZone:]
  -[AFAudioSessionCoordinationDeviceInfo encodeWithCoder:]


_AFAudioSessionCoordinationDeviceInfoMutation : NSObject <AFAudioSessionCoordinationDeviceInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAudioSessionCoordinationDeviceInfoMutation .cxx_destruct]
  -[_AFAudioSessionCoordinationDeviceInfoMutation setPeerInfo:]
  -[_AFAudioSessionCoordinationDeviceInfoMutation setSystemInfo:]
  -[_AFAudioSessionCoordinationDeviceInfoMutation init]
  -[_AFAudioSessionCoordinationDeviceInfoMutation generate]
  -[_AFAudioSessionCoordinationDeviceInfoMutation initWithBaseModel:]


AFDictationDiscoverabilitySignalsStreamManager : NSObject
  // class methods
  +[AFDictationDiscoverabilitySignalsStreamManager sendDictationRequestStartedEventWithBundleIdentifier:context:userInfo:]
  +[AFDictationDiscoverabilitySignalsStreamManager sendSiriRequestStartedEventWithBundleIdentifier:context:userInfo:]
  +[AFDictationDiscoverabilitySignalsStreamManager sendSendMessageSentEventWithBundleIdentifier:context:userInfo:]


AFSamplingUtilities : NSObject
  // class methods
  +[AFSamplingUtilities sampledCachesSubDirectoryPath]
  +[AFSamplingUtilities sampledLibraryDirectoryPath]
  +[AFSamplingUtilities deleteItemAtFilePath:]
  +[AFSamplingUtilities sampledSubDirectoryNameFormat]
  +[AFSamplingUtilities sampledCurrentSamplingDateKey]
  +[AFSamplingUtilities createSamplingDirectory]
  +[AFSamplingUtilities deleteAllSamplingData]
  +[AFSamplingUtilities component]
  +[AFSamplingUtilities samplingDateAsString]
  +[AFSamplingUtilities timezone]
  +[AFSamplingUtilities sampledSubDirectoryPath]
  +[AFSamplingUtilities sampledPlistFileName]


AFMyriadGoodnessScoreOverrideState : NSObject <NSCopying, NSSecureCoding>
 @property  long long overrideOption
 @property  NSString *reason

  // class methods
  +[AFMyriadGoodnessScoreOverrideState supportsSecureCoding]
  +[AFMyriadGoodnessScoreOverrideState newWithBuilder:]

  // instance methods
  -[AFMyriadGoodnessScoreOverrideState _descriptionWithIndent:]
  -[AFMyriadGoodnessScoreOverrideState initWithCoder:]
  -[AFMyriadGoodnessScoreOverrideState .cxx_destruct]
  -[AFMyriadGoodnessScoreOverrideState overrideOption]
  -[AFMyriadGoodnessScoreOverrideState initWithOverrideOption:reason:]
  -[AFMyriadGoodnessScoreOverrideState mutatedCopyWithMutator:]
  -[AFMyriadGoodnessScoreOverrideState isEqual:]
  -[AFMyriadGoodnessScoreOverrideState reason]
  -[AFMyriadGoodnessScoreOverrideState copyWithZone:]
  -[AFMyriadGoodnessScoreOverrideState encodeWithCoder:]


_AFMyriadGoodnessScoreOverrideStateMutation : NSObject <AFMyriadGoodnessScoreOverrideStateMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMyriadGoodnessScoreOverrideStateMutation .cxx_destruct]
  -[_AFMyriadGoodnessScoreOverrideStateMutation setOverrideOption:]
  -[_AFMyriadGoodnessScoreOverrideStateMutation init]
  -[_AFMyriadGoodnessScoreOverrideStateMutation setReason:]
  -[_AFMyriadGoodnessScoreOverrideStateMutation generate]
  -[_AFMyriadGoodnessScoreOverrideStateMutation initWithBaseModel:]


AFSiriActivationHandlerFrontendProcess : NSObject <AFNotifyObserverDelegate, AFSiriActivationHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriActivationHandlerFrontendProcess notifyObserver:didChangeStateFrom:to:]
  -[AFSiriActivationHandlerFrontendProcess .cxx_destruct]
  -[AFSiriActivationHandlerFrontendProcess _waitUntilListeningForContext:timeoutInterval:completion:]
  -[AFSiriActivationHandlerFrontendProcess init]
  -[AFSiriActivationHandlerFrontendProcess initWithConnection:]
  -[AFSiriActivationHandlerFrontendProcess handleContext:completion:]


STCity : NSObject <NSSecureCoding>
  // class methods
  +[STCity supportsSecureCoding]

  // instance methods
  -[STCity initWithCoder:]
  -[STCity .cxx_destruct]
  -[STCity alCityValue]
  -[STCity _initWithName:unlocalizedName:countryName:unlocalizedCountryName:timeZone:latitude:longitude:alCityID:]
  -[STCity encodeWithCoder:]


AFLinkedListItem : NSObject
 @property  id object
 @property  AFLinkedListItem *previousItem
 @property  AFLinkedListItem *nextItem

  // instance methods
  -[AFLinkedListItem insertBeforeItem:]
  -[AFLinkedListItem setNextItem:]
  -[AFLinkedListItem initWithObject:]
  -[AFLinkedListItem insertAfterItem:]
  -[AFLinkedListItem .cxx_destruct]
  -[AFLinkedListItem setPreviousItem:]
  -[AFLinkedListItem previousItem]
  -[AFLinkedListItem removeFromList]
  -[AFLinkedListItem object]
  -[AFLinkedListItem nextItem]


AFMyriadMetrics : NSObject
  // class methods
  +[AFMyriadMetrics sharedInstance]

  // instance methods
  -[AFMyriadMetrics _getRequestType:]
  -[AFMyriadMetrics getVersion:]
  -[AFMyriadMetrics getSessionId:]
  -[AFMyriadMetrics getCDASessionId:]
  -[AFMyriadMetrics _createEndAnalyticContexFromIntermediateContext:forVersion:sessionId:]
  -[AFMyriadMetrics _getCDASchemaCDATriggerType:]
  -[AFMyriadMetrics _decisionMadeContext:instrumentation:completion:]
  -[AFMyriadMetrics _submitMyriadMetrics:toStream:instrumentation:completion:]
  -[AFMyriadMetrics isMyriadMetricsMessage:]
  -[AFMyriadMetrics submitAccessoryMyriadMetricsToAnalyticsStream:payload:instrumentation:completion:]
  -[AFMyriadMetrics submitMyriadMetricsToAnalyticsStream:context:forEvent:contextNoCopy:]


STSettingChange : STSiriModelObject
  // class methods
  +[STSettingChange supportsSecureCoding]

  // instance methods
  -[STSettingChange initWithCoder:]
  -[STSettingChange .cxx_destruct]
  -[STSettingChange settingType]
  -[STSettingChange valueAfterUpdate]
  -[STSettingChange initWithSettingType:valueBeforeUpdate:valueAfterUpdate:]
  -[STSettingChange valueBeforeUpdate]
  -[STSettingChange encodeWithCoder:]


AFSiriAnnounceIncomingCallRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriAnnounceIncomingCallRequest .cxx_destruct]
  -[AFSiriAnnounceIncomingCallRequest initWithIncomingCall:]
  -[AFSiriAnnounceIncomingCallRequest performRequestWithCompletion:]


AFSiriRequest : NSObject <NSSecureCoding>
 @property  NSString *_refId
 @property  NSString *_originatingAceID
 @property  NSUUID *_turnId

  // class methods
  +[AFSiriRequest supportsSecureCoding]

  // instance methods
  -[AFSiriRequest _refId]
  -[AFSiriRequest initWithCoder:]
  -[AFSiriRequest _turnId]
  -[AFSiriRequest .cxx_destruct]
  -[AFSiriRequest _setRefId:]
  -[AFSiriRequest _initWithOriginatingAceID:identifier:turnId:]
  -[AFSiriRequest _descriptionWithProperties:]
  -[AFSiriRequest requestName]
  -[AFSiriRequest _setOriginatingAceID:]
  -[AFSiriRequest _setTurnId:]
  -[AFSiriRequest init]
  -[AFSiriRequest _identifier]
  -[AFSiriRequest _initWithOriginatingAceID:]
  -[AFSiriRequest _originatingAceID]
  -[AFSiriRequest _af_analyticsContextDescription]
  -[AFSiriRequest _makeAppFrontmost]
  -[AFSiriRequest encodeWithCoder:]


AFSiriActivationHandlerCoreSpeechDaemon : NSObject <AFSiriActivationHandling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriActivationHandlerCoreSpeechDaemon handleContext:completion:]


AFSpeechLatticeMitigatorResult : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *version
 @property  float score
 @property  float threshold

  // class methods
  +[AFSpeechLatticeMitigatorResult supportsSecureCoding]

  // instance methods
  -[AFSpeechLatticeMitigatorResult threshold]
  -[AFSpeechLatticeMitigatorResult initWithCoder:]
  -[AFSpeechLatticeMitigatorResult .cxx_destruct]
  -[AFSpeechLatticeMitigatorResult dictionaryRepresentation]
  -[AFSpeechLatticeMitigatorResult initWithResults:score:threshold:]
  -[AFSpeechLatticeMitigatorResult score]
  -[AFSpeechLatticeMitigatorResult version]
  -[AFSpeechLatticeMitigatorResult copyWithZone:]
  -[AFSpeechLatticeMitigatorResult encodeWithCoder:]


AFLocationSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *latitude
 @property  NSNumber *longitude
 @property  NSNumber *altitude
 @property  NSNumber *direction
 @property  NSNumber *speed
 @property  NSNumber *verticalAccuracy
 @property  NSNumber *horizontalAccuracy
 @property  BOOL preciseLocationEnabled
 @property  long long accessState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFLocationSnapshot supportsSecureCoding]
  +[AFLocationSnapshot newWithBuilder:]

  // instance methods
  -[AFLocationSnapshot direction]
  -[AFLocationSnapshot buildDictionaryRepresentation]
  -[AFLocationSnapshot ad_shortDescription]
  -[AFLocationSnapshot serializedBackingStore]
  -[AFLocationSnapshot _descriptionWithIndent:]
  -[AFLocationSnapshot speed]
  -[AFLocationSnapshot latitude]
  -[AFLocationSnapshot initWithCoder:]
  -[AFLocationSnapshot initWithDictionaryRepresentation:]
  -[AFLocationSnapshot altitude]
  -[AFLocationSnapshot longitude]
  -[AFLocationSnapshot horizontalAccuracy]
  -[AFLocationSnapshot .cxx_destruct]
  -[AFLocationSnapshot accessState]
  -[AFLocationSnapshot initWithSerializedBackingStore:]
  -[AFLocationSnapshot preciseLocationEnabled]
  -[AFLocationSnapshot mutatedCopyWithMutator:]
  -[AFLocationSnapshot initWithLatitude:longitude:altitude:direction:speed:verticalAccuracy:horizontalAccuracy:preciseLocationEnabled:accessState:]
  -[AFLocationSnapshot isEqual:]
  -[AFLocationSnapshot verticalAccuracy]
  -[AFLocationSnapshot copyWithZone:]
  -[AFLocationSnapshot encodeWithCoder:]
  -[AFLocationSnapshot ace_setRequestOrigin]
  -[AFLocationSnapshot initWithSetRequestOrigin:]


_AFLocationSnapshotMutation : NSObject <AFLocationSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFLocationSnapshotMutation setLatitude:]
  -[_AFLocationSnapshotMutation setLongitude:]
  -[_AFLocationSnapshotMutation setDirection:]
  -[_AFLocationSnapshotMutation setSpeed:]
  -[_AFLocationSnapshotMutation .cxx_destruct]
  -[_AFLocationSnapshotMutation setAltitude:]
  -[_AFLocationSnapshotMutation setAccessState:]
  -[_AFLocationSnapshotMutation setPreciseLocationEnabled:]
  -[_AFLocationSnapshotMutation init]
  -[_AFLocationSnapshotMutation setVerticalAccuracy:]
  -[_AFLocationSnapshotMutation setHorizontalAccuracy:]
  -[_AFLocationSnapshotMutation generate]
  -[_AFLocationSnapshotMutation initWithBaseModel:]


AFAudioDeviceInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *route
 @property  BOOL isRemoteDevice
 @property  NSUUID *deviceUID

  // class methods
  +[AFAudioDeviceInfo supportsSecureCoding]
  +[AFAudioDeviceInfo newWithBuilder:]

  // instance methods
  -[AFAudioDeviceInfo _descriptionWithIndent:]
  -[AFAudioDeviceInfo initWithCoder:]
  -[AFAudioDeviceInfo route]
  -[AFAudioDeviceInfo .cxx_destruct]
  -[AFAudioDeviceInfo mutatedCopyWithMutator:]
  -[AFAudioDeviceInfo isRemoteDevice]
  -[AFAudioDeviceInfo initWithRoute:isRemoteDevice:deviceUID:]
  -[AFAudioDeviceInfo isEqual:]
  -[AFAudioDeviceInfo copyWithZone:]
  -[AFAudioDeviceInfo encodeWithCoder:]
  -[AFAudioDeviceInfo deviceUID]


_AFAudioDeviceInfoMutation : NSObject <AFAudioDeviceInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAudioDeviceInfoMutation .cxx_destruct]
  -[_AFAudioDeviceInfoMutation setIsRemoteDevice:]
  -[_AFAudioDeviceInfoMutation init]
  -[_AFAudioDeviceInfoMutation setDeviceUID:]
  -[_AFAudioDeviceInfoMutation setRoute:]
  -[_AFAudioDeviceInfoMutation generate]
  -[_AFAudioDeviceInfoMutation initWithBaseModel:]


AFModesConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isEyesFree
 @property  BOOL isForCarDND
 @property  BOOL isVoiceTriggerRequest
 @property  BOOL isConnectedToCarPlay
 @property  BOOL isRequestMadeWithPhysicalDeviceInteraction
 @property  BOOL userTypedInSiri
 @property  NSString *modeOverrideValue
 @property  long long deviceRaised
 @property  long long faceDetected
 @property  long long touchScreenDetected
 @property  long long buttonPressDetected
 @property  long long flatDevicePosture
 @property  long long deviceOrientation
 @property  long long isInWorkout
 @property  long long isBacklightOn
 @property  long long isInWaterLock
 @property  long long isInSleepLock
 @property  long long isInTheaterMode
 @property  long long isOnWrist

  // class methods
  +[AFModesConfiguration supportsSecureCoding]
  +[AFModesConfiguration newWithBuilder:]

  // instance methods
  -[AFModesConfiguration _descriptionWithIndent:]
  -[AFModesConfiguration isConnectedToCarPlay]
  -[AFModesConfiguration initWithCoder:]
  -[AFModesConfiguration isInWorkout]
  -[AFModesConfiguration initWithIsEyesFree:isForCarDND:isVoiceTriggerRequest:isConnectedToCarPlay:isRequestMadeWithPhysicalDeviceInteraction:userTypedInSiri:modeOverrideValue:deviceRaised:faceDetected:touchScreenDetected:buttonPressDetected:flatDevicePosture:deviceOrientation:isInWorkout:isBacklightOn:isInWaterLock:isInSleepLock:isInTheaterMode:isOnWrist:]
  -[AFModesConfiguration deviceOrientation]
  -[AFModesConfiguration .cxx_destruct]
  -[AFModesConfiguration mutatedCopyWithMutator:]
  -[AFModesConfiguration isEyesFree]
  -[AFModesConfiguration isForCarDND]
  -[AFModesConfiguration isVoiceTriggerRequest]
  -[AFModesConfiguration isRequestMadeWithPhysicalDeviceInteraction]
  -[AFModesConfiguration userTypedInSiri]
  -[AFModesConfiguration deviceRaised]
  -[AFModesConfiguration faceDetected]
  -[AFModesConfiguration touchScreenDetected]
  -[AFModesConfiguration buttonPressDetected]
  -[AFModesConfiguration flatDevicePosture]
  -[AFModesConfiguration isBacklightOn]
  -[AFModesConfiguration isInWaterLock]
  -[AFModesConfiguration isInSleepLock]
  -[AFModesConfiguration isInTheaterMode]
  -[AFModesConfiguration modeOverrideValue]
  -[AFModesConfiguration isEqual:]
  -[AFModesConfiguration isOnWrist]
  -[AFModesConfiguration copyWithZone:]
  -[AFModesConfiguration encodeWithCoder:]


_AFModesConfigurationMutation : NSObject <AFModesConfigurationMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFModesConfigurationMutation setDeviceOrientation:]
  -[_AFModesConfigurationMutation .cxx_destruct]
  -[_AFModesConfigurationMutation init]
  -[_AFModesConfigurationMutation setIsOnWrist:]
  -[_AFModesConfigurationMutation setIsForCarDND:]
  -[_AFModesConfigurationMutation setIsVoiceTriggerRequest:]
  -[_AFModesConfigurationMutation setIsConnectedToCarPlay:]
  -[_AFModesConfigurationMutation setIsRequestMadeWithPhysicalDeviceInteraction:]
  -[_AFModesConfigurationMutation setUserTypedInSiri:]
  -[_AFModesConfigurationMutation setModeOverrideValue:]
  -[_AFModesConfigurationMutation setDeviceRaised:]
  -[_AFModesConfigurationMutation setFaceDetected:]
  -[_AFModesConfigurationMutation setFlatDevicePosture:]
  -[_AFModesConfigurationMutation setTouchScreenDetected:]
  -[_AFModesConfigurationMutation setButtonPressDetected:]
  -[_AFModesConfigurationMutation setIsBacklightOn:]
  -[_AFModesConfigurationMutation setIsInWaterLock:]
  -[_AFModesConfigurationMutation setIsInSleepLock:]
  -[_AFModesConfigurationMutation setIsInTheaterMode:]
  -[_AFModesConfigurationMutation setIsEyesFree:]
  -[_AFModesConfigurationMutation setIsInWorkout:]
  -[_AFModesConfigurationMutation generate]
  -[_AFModesConfigurationMutation initWithBaseModel:]


AFClockAlarmSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long generation
 @property  NSDate *date
 @property  NSDictionary *alarmsByID
 @property  NSOrderedSet *notifiedFiringAlarmIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFClockAlarmSnapshot supportsSecureCoding]
  +[AFClockAlarmSnapshot newWithBuilder:]

  // instance methods
  -[AFClockAlarmSnapshot buildDictionaryRepresentation]
  -[AFClockAlarmSnapshot ad_shortDescription]
  -[AFClockAlarmSnapshot serializedBackingStore]
  -[AFClockAlarmSnapshot _descriptionWithIndent:]
  -[AFClockAlarmSnapshot initWithCoder:]
  -[AFClockAlarmSnapshot firingAlarms]
  -[AFClockAlarmSnapshot notifiedFiringAlarmIDs]
  -[AFClockAlarmSnapshot initWithDictionaryRepresentation:]
  -[AFClockAlarmSnapshot alarmsByID]
  -[AFClockAlarmSnapshot initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:]
  -[AFClockAlarmSnapshot mostRecentFiringAlarm]
  -[AFClockAlarmSnapshot .cxx_destruct]
  -[AFClockAlarmSnapshot initWithSerializedBackingStore:]
  -[AFClockAlarmSnapshot generation]
  -[AFClockAlarmSnapshot mutatedCopyWithMutator:]
  -[AFClockAlarmSnapshot isEqual:]
  -[AFClockAlarmSnapshot copyWithZone:]
  -[AFClockAlarmSnapshot encodeWithCoder:]
  -[AFClockAlarmSnapshot date]
  -[AFClockAlarmSnapshot hasFiringAlarms]


_AFClockAlarmSnapshotMutation : NSObject <AFClockAlarmSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClockAlarmSnapshotMutation setGeneration:]
  -[_AFClockAlarmSnapshotMutation setAlarmsByID:]
  -[_AFClockAlarmSnapshotMutation setNotifiedFiringAlarmIDs:]
  -[_AFClockAlarmSnapshotMutation .cxx_destruct]
  -[_AFClockAlarmSnapshotMutation init]
  -[_AFClockAlarmSnapshotMutation setDate:]
  -[_AFClockAlarmSnapshotMutation generate]
  -[_AFClockAlarmSnapshotMutation initWithBaseModel:]


AFServiceDeviceContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *assistantIdentifier
 @property  NSString *mediaSystemIdentifier
 @property  NSString *mediaRouteIdentifier
 @property  NSString *sharedUserID
 @property  NSString *roomName
 @property  long long proximity
 @property  NSDictionary *serializedContextByKey
 @property  NSDictionary *metricsContext

  // class methods
  +[AFServiceDeviceContext supportsSecureCoding]
  +[AFServiceDeviceContext newWithBuilder:]

  // instance methods
  -[AFServiceDeviceContext mediaRouteIdentifier]
  -[AFServiceDeviceContext mediaSystemIdentifier]
  -[AFServiceDeviceContext _descriptionWithIndent:]
  -[AFServiceDeviceContext initWithCoder:]
  -[AFServiceDeviceContext .cxx_destruct]
  -[AFServiceDeviceContext mutatedCopyWithMutator:]
  -[AFServiceDeviceContext serializedContextByKey]
  -[AFServiceDeviceContext isEqual:]
  -[AFServiceDeviceContext assistantIdentifier]
  -[AFServiceDeviceContext identifier]
  -[AFServiceDeviceContext proximity]
  -[AFServiceDeviceContext metricsContext]
  -[AFServiceDeviceContext copyWithZone:]
  -[AFServiceDeviceContext initWithIdentifier:assistantIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:sharedUserID:roomName:proximity:serializedContextByKey:metricsContext:]
  -[AFServiceDeviceContext roomName]
  -[AFServiceDeviceContext encodeWithCoder:]
  -[AFServiceDeviceContext sharedUserID]


_AFServiceDeviceContextMutation : NSObject <AFServiceDeviceContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFServiceDeviceContextMutation setMediaSystemIdentifier:]
  -[_AFServiceDeviceContextMutation .cxx_destruct]
  -[_AFServiceDeviceContextMutation init]
  -[_AFServiceDeviceContextMutation setSerializedContextByKey:]
  -[_AFServiceDeviceContextMutation setMetricsContext:]
  -[_AFServiceDeviceContextMutation setMediaRouteIdentifier:]
  -[_AFServiceDeviceContextMutation setIdentifier:]
  -[_AFServiceDeviceContextMutation setSharedUserID:]
  -[_AFServiceDeviceContextMutation generate]
  -[_AFServiceDeviceContextMutation setAssistantIdentifier:]
  -[_AFServiceDeviceContextMutation setProximity:]
  -[_AFServiceDeviceContextMutation setRoomName:]
  -[_AFServiceDeviceContextMutation initWithBaseModel:]


AFSpeechRequestOptions : NSObject <NSSecureCoding>
 @property  long long activationEvent
 @property  NSString *activationDeviceIdentifier
 @property  BOOL isEyesFree
 @property  NSString *serverCommandId
 @property  BOOL useAutomaticEndpointing
 @property  long long endpointerOperationMode
 @property  long long endpointerStopRecordingMode
 @property  AFSpeechRecordingAlertPolicy *recordingAlertPolicy
 @property  BOOL disableInputAudioPowerUpdate
 @property  BOOL disableOutputAudioPowerUpdate
 @property  BOOL useStreamingDictation
 @property  double homeButtonDownEventTime
 @property  unsigned long homeButtonDownEventMachAbsoluteTime
 @property  double activationEventTime
 @property  unsigned long activationEventMachAbsoluteTime
 @property  double expectedActivationEventTime
 @property  unsigned long stopRecordingHostTime
 @property  BOOL isInitialBringUp
 @property  NSNumber *homeButtonUpFromBeep
 @property  BOOL acousticIdEnabled
 @property  long long audioFileType
 @property  NSFileHandle *audioFileHandle
 @property  NSDictionary *voiceTriggerEventInfo
 @property  AFMyriadContext *myriadContext
 @property  BOOL releaseAudioSessionOnRecordingCompletion
 @property  NSString *recordDeviceIdentifier
 @property  NSXPCListenerEndpoint *speechRecordingEventListeningEndpoint
 @property  BOOL usePrelisteningMode
 @property  BOOL pendCallbacksUntilAfterContinuation
 @property  BOOL useBorealisBuffer
 @property  BOOL reloadSmartSiriVolume
 @property  BOOL skipPersonalizedASR
 @property  NSNumber *notifyState
 @property  NSURL *audioFileURL
 @property  BOOL suppressStartAlert
 @property  BOOL suppressStopAlert
 @property  BOOL hasPlayedStartAlert
 @property  unsigned long bargeInOptions
 @property  AFSpeechSynthesisRecord *speechSynthesisRecord
 @property  CLLocation *location
 @property  NSString *locationStatus
 @property  NSString *btDeviceAddress
 @property  NSDictionary *clientAnalyticsContext
 @property  NSDictionary *startContext
 @property  NSDictionary *stopContext
 @property  BOOL isOnPhoneCall
 @property  BOOL skipGeneratingSpeechPacket
 @property  BOOL isMediaPlaying
 @property  float mediaPlaybackVolume
 @property  AFLanguageDetectionUserContext *languageDetectionUserContext
 @property  long long dictationInputOrigin
 @property  NSUUID *turnIdentifier
 @property  long long presentationMode
 @property  NSString *preheatLanguage
 @property  NSURL *preheatTestModelPath
 @property  unsigned long dictationVoiceTriggerAbsStartSampleId
 @property  NSString *applicationDisplayName
 @property  NSString *applicationBundleIdentifier
 @property  long long announcementPlatform
 @property  BOOL isTest
 @property  AFSpeechTestRequestOptions *testRequestOptions

  // class methods
  +[AFSpeechRequestOptions supportsSecureCoding]

  // instance methods
  -[AFSpeechRequestOptions applicationDisplayName]
  -[AFSpeechRequestOptions presentationMode]
  -[AFSpeechRequestOptions isMediaPlaying]
  -[AFSpeechRequestOptions setPresentationMode:]
  -[AFSpeechRequestOptions useBorealisBuffer]
  -[AFSpeechRequestOptions endpointerOperationMode]
  -[AFSpeechRequestOptions applicationBundleIdentifier]
  -[AFSpeechRequestOptions setIsMediaPlaying:]
  -[AFSpeechRequestOptions initWithCoder:]
  -[AFSpeechRequestOptions useAutomaticEndpointing]
  -[AFSpeechRequestOptions setStartContext:]
  -[AFSpeechRequestOptions turnIdentifier]
  -[AFSpeechRequestOptions activationEvent]
  -[AFSpeechRequestOptions dictationVoiceTriggerAbsStartSampleId]
  -[AFSpeechRequestOptions activationEventTime]
  -[AFSpeechRequestOptions activationEventMachAbsoluteTime]
  -[AFSpeechRequestOptions .cxx_destruct]
  -[AFSpeechRequestOptions dictationInputOrigin]
  -[AFSpeechRequestOptions isTest]
  -[AFSpeechRequestOptions setIsTest:]
  -[AFSpeechRequestOptions setActivationEvent:]
  -[AFSpeechRequestOptions setAudioFileType:]
  -[AFSpeechRequestOptions pendCallbacksUntilAfterContinuation]
  -[AFSpeechRequestOptions serverCommandId]
  -[AFSpeechRequestOptions stopRecordingHostTime]
  -[AFSpeechRequestOptions setReleaseAudioSessionOnRecordingCompletion:]
  -[AFSpeechRequestOptions setLocation:]
  -[AFSpeechRequestOptions setDictationInputOrigin:]
  -[AFSpeechRequestOptions stopContext]
  -[AFSpeechRequestOptions setLanguageDetectionUserContext:]
  -[AFSpeechRequestOptions initWithActivationEvent:]
  -[AFSpeechRequestOptions setUseStreamingDictation:]
  -[AFSpeechRequestOptions setActivationDeviceIdentifier:]
  -[AFSpeechRequestOptions setTurnIdentifier:]
  -[AFSpeechRequestOptions setApplicationBundleIdentifier:]
  -[AFSpeechRequestOptions setSuppressStopAlert:]
  -[AFSpeechRequestOptions setStopContext:]
  -[AFSpeechRequestOptions setEndpointerStopRecordingMode:]
  -[AFSpeechRequestOptions isOnPhoneCall]
  -[AFSpeechRequestOptions hasPlayedStartAlert]
  -[AFSpeechRequestOptions isEyesFree]
  -[AFSpeechRequestOptions activationDeviceIdentifier]
  -[AFSpeechRequestOptions setServerCommandId:]
  -[AFSpeechRequestOptions setRecordingAlertPolicy:]
  -[AFSpeechRequestOptions setDisableInputAudioPowerUpdate:]
  -[AFSpeechRequestOptions myriadContext]
  -[AFSpeechRequestOptions setDisableOutputAudioPowerUpdate:]
  -[AFSpeechRequestOptions setHomeButtonDownEventTime:]
  -[AFSpeechRequestOptions setHomeButtonDownEventMachAbsoluteTime:]
  -[AFSpeechRequestOptions setActivationEventMachAbsoluteTime:]
  -[AFSpeechRequestOptions setStopRecordingHostTime:]
  -[AFSpeechRequestOptions setIsInitialBringUp:]
  -[AFSpeechRequestOptions setHomeButtonUpFromBeep:]
  -[AFSpeechRequestOptions setAcousticIdEnabled:]
  -[AFSpeechRequestOptions setMyriadContext:]
  -[AFSpeechRequestOptions setRecordDeviceIdentifier:]
  -[AFSpeechRequestOptions setPendCallbacksUntilAfterContinuation:]
  -[AFSpeechRequestOptions setUseBorealisBuffer:]
  -[AFSpeechRequestOptions setAudioFileURL:]
  -[AFSpeechRequestOptions setHasPlayedStartAlert:]
  -[AFSpeechRequestOptions setBargeInOptions:]
  -[AFSpeechRequestOptions setSkipPersonalizedASR:]
  -[AFSpeechRequestOptions setSpeechSynthesisRecord:]
  -[AFSpeechRequestOptions setReloadSmartSiriVolume:]
  -[AFSpeechRequestOptions setClientAnalyticsContext:]
  -[AFSpeechRequestOptions setLocationStatus:]
  -[AFSpeechRequestOptions setIsOnPhoneCall:]
  -[AFSpeechRequestOptions setMediaPlaybackVolume:]
  -[AFSpeechRequestOptions setPreheatLanguage:]
  -[AFSpeechRequestOptions setPreheatTestModelPath:]
  -[AFSpeechRequestOptions setAnnouncementPlatform:]
  -[AFSpeechRequestOptions setDictationVoiceTriggerAbsStartSampleId:]
  -[AFSpeechRequestOptions initForTestWithTestRequestOptions:]
  -[AFSpeechRequestOptions isRaiseToSpeak]
  -[AFSpeechRequestOptions setBtDeviceAddress:]
  -[AFSpeechRequestOptions btDeviceAddress]
  -[AFSpeechRequestOptions endpointerStopRecordingMode]
  -[AFSpeechRequestOptions recordingAlertPolicy]
  -[AFSpeechRequestOptions disableInputAudioPowerUpdate]
  -[AFSpeechRequestOptions disableOutputAudioPowerUpdate]
  -[AFSpeechRequestOptions useStreamingDictation]
  -[AFSpeechRequestOptions homeButtonDownEventTime]
  -[AFSpeechRequestOptions homeButtonDownEventMachAbsoluteTime]
  -[AFSpeechRequestOptions isInitialBringUp]
  -[AFSpeechRequestOptions homeButtonUpFromBeep]
  -[AFSpeechRequestOptions acousticIdEnabled]
  -[AFSpeechRequestOptions audioFileHandle]
  -[AFSpeechRequestOptions usePrelisteningMode]
  -[AFSpeechRequestOptions languageDetectionUserContext]
  -[AFSpeechRequestOptions speechRecordingEventListeningEndpoint]
  -[AFSpeechRequestOptions setUsePrelisteningMode:]
  -[AFSpeechRequestOptions reloadSmartSiriVolume]
  -[AFSpeechRequestOptions skipPersonalizedASR]
  -[AFSpeechRequestOptions audioFileURL]
  -[AFSpeechRequestOptions bargeInOptions]
  -[AFSpeechRequestOptions speechSynthesisRecord]
  -[AFSpeechRequestOptions clientAnalyticsContext]
  -[AFSpeechRequestOptions skipGeneratingSpeechPacket]
  -[AFSpeechRequestOptions setSkipGeneratingSpeechPacket:]
  -[AFSpeechRequestOptions mediaPlaybackVolume]
  -[AFSpeechRequestOptions preheatLanguage]
  -[AFSpeechRequestOptions preheatTestModelPath]
  -[AFSpeechRequestOptions announcementPlatform]
  -[AFSpeechRequestOptions startContext]
  -[AFSpeechRequestOptions isVoiceTrigger]
  -[AFSpeechRequestOptions audioFileType]
  -[AFSpeechRequestOptions setIsEyesFree:]
  -[AFSpeechRequestOptions location]
  -[AFSpeechRequestOptions expectedActivationEventTime]
  -[AFSpeechRequestOptions setActivationEventTime:]
  -[AFSpeechRequestOptions setExpectedActivationEventTime:]
  -[AFSpeechRequestOptions recordDeviceIdentifier]
  -[AFSpeechRequestOptions setUseAutomaticEndpointing:]
  -[AFSpeechRequestOptions suppressStopAlert]
  -[AFSpeechRequestOptions suppressStartAlert]
  -[AFSpeechRequestOptions setSuppressStartAlert:]
  -[AFSpeechRequestOptions notifyState]
  -[AFSpeechRequestOptions setSpeechRecordingEventListeningEndpoint:]
  -[AFSpeechRequestOptions setNotifyState:]
  -[AFSpeechRequestOptions setTestRequestOptions:]
  -[AFSpeechRequestOptions setApplicationDisplayName:]
  -[AFSpeechRequestOptions testRequestOptions]
  -[AFSpeechRequestOptions setEndpointerOperationMode:]
  -[AFSpeechRequestOptions voiceTriggerEventInfo]
  -[AFSpeechRequestOptions setVoiceTriggerEventInfo:]
  -[AFSpeechRequestOptions releaseAudioSessionOnRecordingCompletion]
  -[AFSpeechRequestOptions locationStatus]
  -[AFSpeechRequestOptions copyWithZone:]
  -[AFSpeechRequestOptions setAudioFileHandle:]
  -[AFSpeechRequestOptions encodeWithCoder:]


AFPluginBundle : NSObject
 @property  Class factoryClass
 @property  id factoryInstance
 @property  NSMutableDictionary *classIdentifiers

  // instance methods
  -[AFPluginBundle .cxx_destruct]
  -[AFPluginBundle init]
  -[AFPluginBundle factoryClass]
  -[AFPluginBundle factoryInstance]
  -[AFPluginBundle classIdentifiers]
  -[AFPluginBundle registerClassIdentifier:forDomain:inGroup:]
  -[AFPluginBundle setFactoryClass:]
  -[AFPluginBundle setFactoryInstance:]
  -[AFPluginBundle supportsClassIdentifier:forDomainKey:groupIdentifier:]
  -[AFPluginBundle setClassIdentifiers:]


AFPluginManager : NSObject
  // class methods
  +[AFPluginManager pluginManagerForPath:domainKeys:factoryInitializationBlock:]

  // instance methods
  -[AFPluginManager .cxx_destruct]
  -[AFPluginManager _loadBundlesIfNeeded]
  -[AFPluginManager _registerBundle:]
  -[AFPluginManager initWithPath:domainKeys:factoryInitializationBlock:]
  -[AFPluginManager preloadBundles]
  -[AFPluginManager enumerateFactoryInstancesForDomainKey:groupIdentifier:classIdentifier:usingBlock:]


AFExperimentState : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSDate *lastSyncDate
 @property  BOOL didEnd
 @property  NSString *endingGroupIdentifier
 @property  NSString *version
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFExperimentState supportsSecureCoding]
  +[AFExperimentState newWithBuilder:]

  // instance methods
  -[AFExperimentState lastSyncDate]
  -[AFExperimentState buildDictionaryRepresentation]
  -[AFExperimentState _descriptionWithIndent:]
  -[AFExperimentState initWithCoder:]
  -[AFExperimentState initWithDictionaryRepresentation:]
  -[AFExperimentState didEnd]
  -[AFExperimentState .cxx_destruct]
  -[AFExperimentState mutatedCopyWithMutator:]
  -[AFExperimentState isEqual:]
  -[AFExperimentState endingGroupIdentifier]
  -[AFExperimentState initWithLastSyncDate:didEnd:endingGroupIdentifier:version:]
  -[AFExperimentState version]
  -[AFExperimentState copyWithZone:]
  -[AFExperimentState encodeWithCoder:]


_AFExperimentStateMutation : NSObject <AFExperimentStateMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentStateMutation setLastSyncDate:]
  -[_AFExperimentStateMutation .cxx_destruct]
  -[_AFExperimentStateMutation init]
  -[_AFExperimentStateMutation setVersion:]
  -[_AFExperimentStateMutation setDidEnd:]
  -[_AFExperimentStateMutation setEndingGroupIdentifier:]
  -[_AFExperimentStateMutation generate]
  -[_AFExperimentStateMutation initWithBaseModel:]


SISchemaClientTurnBasedEvent : PBCodable <NSCopying>
 @property  BOOL hasTurnContext
 @property  SISchemaClientTurnContext *turnContext
 @property  BOOL hasEvent
 @property  SISchemaClientAnyEvent *event

  // instance methods
  -[SISchemaClientTurnBasedEvent mergeFrom:]
  -[SISchemaClientTurnBasedEvent hasEvent]
  -[SISchemaClientTurnBasedEvent .cxx_destruct]
  -[SISchemaClientTurnBasedEvent si_dictionaryRepresentation]
  -[SISchemaClientTurnBasedEvent dictionaryRepresentation]
  -[SISchemaClientTurnBasedEvent writeTo:]
  -[SISchemaClientTurnBasedEvent setEvent:]
  -[SISchemaClientTurnBasedEvent isEqual:]
  -[SISchemaClientTurnBasedEvent copyTo:]
  -[SISchemaClientTurnBasedEvent readFrom:]
  -[SISchemaClientTurnBasedEvent setTurnContext:]
  -[SISchemaClientTurnBasedEvent hasTurnContext]
  -[SISchemaClientTurnBasedEvent turnContext]
  -[SISchemaClientTurnBasedEvent copyWithZone:]
  -[SISchemaClientTurnBasedEvent event]


AFSiriHomeAutomationRequestInfo : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *context

  // class methods
  +[AFSiriHomeAutomationRequestInfo supportsSecureCoding]
  +[AFSiriHomeAutomationRequestInfo newWithBuilder:]

  // instance methods
  -[AFSiriHomeAutomationRequestInfo _descriptionWithIndent:]
  -[AFSiriHomeAutomationRequestInfo initWithCoder:]
  -[AFSiriHomeAutomationRequestInfo initWithIdentifier:]
  -[AFSiriHomeAutomationRequestInfo .cxx_destruct]
  -[AFSiriHomeAutomationRequestInfo mutatedCopyWithMutator:]
  -[AFSiriHomeAutomationRequestInfo isEqual:]
  -[AFSiriHomeAutomationRequestInfo initWithContext:]
  -[AFSiriHomeAutomationRequestInfo copyWithZone:]
  -[AFSiriHomeAutomationRequestInfo encodeWithCoder:]
  -[AFSiriHomeAutomationRequestInfo context]


_AFSiriHomeAutomationRequestInfoMutation : NSObject <AFSiriHomeAutomationRequestInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSiriHomeAutomationRequestInfoMutation .cxx_destruct]
  -[_AFSiriHomeAutomationRequestInfoMutation init]
  -[_AFSiriHomeAutomationRequestInfoMutation setContext:]
  -[_AFSiriHomeAutomationRequestInfoMutation generate]
  -[_AFSiriHomeAutomationRequestInfoMutation initWithBaseModel:]


AFContextResponse : AFSiriResponse
  // class methods
  +[AFContextResponse supportsSecureCoding]

  // instance methods
  -[AFContextResponse initWithCoder:]
  -[AFContextResponse .cxx_destruct]
  -[AFContextResponse _context]
  -[AFContextResponse _initWithRequest:context:]
  -[AFContextResponse encodeWithCoder:]


AFSiriAnnouncementRoute : NSObject
 @property  NSString *productID
 @property  NSString *btAddress
 @property  unsigned long availableAnnouncementRequestTypes
 @property  NSDictionary *avscRouteDescription
 @property  long long announcePlatformForRoute

  // instance methods
  -[AFSiriAnnouncementRoute setProductID:]
  -[AFSiriAnnouncementRoute .cxx_destruct]
  -[AFSiriAnnouncementRoute productID]
  -[AFSiriAnnouncementRoute availableAnnouncementRequestTypes]
  -[AFSiriAnnouncementRoute announcePlatformForRoute]
  -[AFSiriAnnouncementRoute avscRouteDescription]
  -[AFSiriAnnouncementRoute _announcementPlatform]
  -[AFSiriAnnouncementRoute setBtAddress:]
  -[AFSiriAnnouncementRoute _initializeInternalState]
  -[AFSiriAnnouncementRoute _getRouteCapabilities]
  -[AFSiriAnnouncementRoute setAvscRouteDescription:]
  -[AFSiriAnnouncementRoute setAvailableAnnouncementRequestTypes:]
  -[AFSiriAnnouncementRoute setAnnouncePlatformForRoute:]
  -[AFSiriAnnouncementRoute initWithRouteDescription:]
  -[AFSiriAnnouncementRoute btAddress]


AFClockTimerSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long generation
 @property  NSDate *date
 @property  NSDictionary *timersByID
 @property  NSOrderedSet *notifiedFiringTimerIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFClockTimerSnapshot supportsSecureCoding]
  +[AFClockTimerSnapshot newWithBuilder:]

  // instance methods
  -[AFClockTimerSnapshot buildDictionaryRepresentation]
  -[AFClockTimerSnapshot ad_shortDescription]
  -[AFClockTimerSnapshot serializedBackingStore]
  -[AFClockTimerSnapshot _descriptionWithIndent:]
  -[AFClockTimerSnapshot initWithCoder:]
  -[AFClockTimerSnapshot initWithDictionaryRepresentation:]
  -[AFClockTimerSnapshot .cxx_destruct]
  -[AFClockTimerSnapshot notifiedFiringTimerIDs]
  -[AFClockTimerSnapshot mostRecentFiringTimer]
  -[AFClockTimerSnapshot initWithSerializedBackingStore:]
  -[AFClockTimerSnapshot generation]
  -[AFClockTimerSnapshot mutatedCopyWithMutator:]
  -[AFClockTimerSnapshot firingTimers]
  -[AFClockTimerSnapshot isEqual:]
  -[AFClockTimerSnapshot initWithGeneration:date:timersByID:notifiedFiringTimerIDs:]
  -[AFClockTimerSnapshot timersByID]
  -[AFClockTimerSnapshot copyWithZone:]
  -[AFClockTimerSnapshot hasFiringTimers]
  -[AFClockTimerSnapshot encodeWithCoder:]
  -[AFClockTimerSnapshot date]


_AFClockTimerSnapshotMutation : NSObject <AFClockTimerSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClockTimerSnapshotMutation setGeneration:]
  -[_AFClockTimerSnapshotMutation setNotifiedFiringTimerIDs:]
  -[_AFClockTimerSnapshotMutation .cxx_destruct]
  -[_AFClockTimerSnapshotMutation init]
  -[_AFClockTimerSnapshotMutation setTimersByID:]
  -[_AFClockTimerSnapshotMutation setDate:]
  -[_AFClockTimerSnapshotMutation generate]
  -[_AFClockTimerSnapshotMutation initWithBaseModel:]


AFExperimentContext : NSObject <NSCopying, NSSecureCoding>
 @property  AFExperiment<AFExperimentForSiriVOXSounds> *experimentForSiriVOXSounds
 @property  AFExperiment<AFExperimentForSiriVOXTapToSiriBehavior> *experimentForSiriVOXTapToSiriBehavior
 @property  AFExperiment<AFInvocationFeedbackExperiment> *invocationFeedbackExperiment
 @property  NSDictionary *experimentsByConfigurationIdentifier

  // class methods
  +[AFExperimentContext supportsSecureCoding]
  +[AFExperimentContext newWithBuilder:]

  // instance methods
  -[AFExperimentContext _descriptionWithIndent:]
  -[AFExperimentContext initWithExperimentsByConfigurationIdentifier:]
  -[AFExperimentContext initWithCoder:]
  -[AFExperimentContext .cxx_destruct]
  -[AFExperimentContext invocationFeedbackExperiment]
  -[AFExperimentContext mutatedCopyWithMutator:]
  -[AFExperimentContext isEqual:]
  -[AFExperimentContext experimentForSiriVOXTapToSiriBehavior]
  -[AFExperimentContext experimentsByConfigurationIdentifier]
  -[AFExperimentContext copyWithZone:]
  -[AFExperimentContext encodeWithCoder:]
  -[AFExperimentContext experimentForSiriVOXSounds]


_AFExperimentContextMutation : NSObject <AFExperimentContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentContextMutation .cxx_destruct]
  -[_AFExperimentContextMutation init]
  -[_AFExperimentContextMutation setExperimentsByConfigurationIdentifier:]
  -[_AFExperimentContextMutation generate]
  -[_AFExperimentContextMutation initWithBaseModel:]


STSiriMessage : STSiriModelObject
  // class methods
  +[STSiriMessage supportsSecureCoding]

  // instance methods
  -[STSiriMessage setGroupName:]
  -[STSiriMessage initWithCoder:]
  -[STSiriMessage sendDate]
  -[STSiriMessage setEffect:]
  -[STSiriMessage effect]
  -[STSiriMessage bodyText]
  -[STSiriMessage .cxx_destruct]
  -[STSiriMessage setBodyText:]
  -[STSiriMessage recipientAddresses]
  -[STSiriMessage attachmentURL]
  -[STSiriMessage setAttachmentURL:]
  -[STSiriMessage init]
  -[STSiriMessage chatIdentifier]
  -[STSiriMessage groupName]
  -[STSiriMessage isOutbound]
  -[STSiriMessage subjectText]
  -[STSiriMessage groupNameId]
  -[STSiriMessage setGroupNameId:]
  -[STSiriMessage setOutbound:]
  -[STSiriMessage senderInternalGUID]
  -[STSiriMessage _setSenderInternalGUID:]
  -[STSiriMessage setSendDate:]
  -[STSiriMessage setSubjectText:]
  -[STSiriMessage _aceContextObjectValue]
  -[STSiriMessage setSenderAddress:]
  -[STSiriMessage senderAddress]
  -[STSiriMessage setRecipientAddresses:]
  -[STSiriMessage setChatIdentifier:]
  -[STSiriMessage encodeWithCoder:]


AFDeviceCapabilities : NSObject <NSCopying, NSSecureCoding>
 @property  long long voiceTriggerEnabled

  // class methods
  +[AFDeviceCapabilities supportsSecureCoding]

  // instance methods
  -[AFDeviceCapabilities serializedBackingStore]
  -[AFDeviceCapabilities initWithCoder:]
  -[AFDeviceCapabilities .cxx_destruct]
  -[AFDeviceCapabilities initWithSerializedBackingStore:]
  -[AFDeviceCapabilities isEqual:]
  -[AFDeviceCapabilities copyWithZone:]
  -[AFDeviceCapabilities initWithVoiceTriggerEnabled:]
  -[AFDeviceCapabilities voiceTriggerEnabled]
  -[AFDeviceCapabilities encodeWithCoder:]


AFHomeAnnouncementSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long state
 @property  AFHomeAnnouncement *lastPlayedAnnouncement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeAnnouncementSnapshot supportsSecureCoding]
  +[AFHomeAnnouncementSnapshot newWithBuilder:]

  // instance methods
  -[AFHomeAnnouncementSnapshot buildDictionaryRepresentation]
  -[AFHomeAnnouncementSnapshot ad_shortDescription]
  -[AFHomeAnnouncementSnapshot serializedBackingStore]
  -[AFHomeAnnouncementSnapshot _descriptionWithIndent:]
  -[AFHomeAnnouncementSnapshot initWithCoder:]
  -[AFHomeAnnouncementSnapshot initWithDictionaryRepresentation:]
  -[AFHomeAnnouncementSnapshot initWithState:lastPlayedAnnouncement:]
  -[AFHomeAnnouncementSnapshot .cxx_destruct]
  -[AFHomeAnnouncementSnapshot initWithSerializedBackingStore:]
  -[AFHomeAnnouncementSnapshot mutatedCopyWithMutator:]
  -[AFHomeAnnouncementSnapshot lastPlayedAnnouncement]
  -[AFHomeAnnouncementSnapshot isEqual:]
  -[AFHomeAnnouncementSnapshot state]
  -[AFHomeAnnouncementSnapshot copyWithZone:]
  -[AFHomeAnnouncementSnapshot encodeWithCoder:]


_AFHomeAnnouncementSnapshotMutation : NSObject <AFHomeAnnouncementSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeAnnouncementSnapshotMutation .cxx_destruct]
  -[_AFHomeAnnouncementSnapshotMutation setState:]
  -[_AFHomeAnnouncementSnapshotMutation init]
  -[_AFHomeAnnouncementSnapshotMutation setLastPlayedAnnouncement:]
  -[_AFHomeAnnouncementSnapshotMutation generate]
  -[_AFHomeAnnouncementSnapshotMutation initWithBaseModel:]


AFSiriTaskService : NSObject <NSXPCListenerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSiriTaskService _machServiceNameForAppTaskServiceWithBundleIdentifier:]
  +[AFSiriTaskService appTaskService]

  // instance methods
  -[AFSiriTaskService .cxx_destruct]
  -[AFSiriTaskService initWithMachServiceName:]
  -[AFSiriTaskService setDelegate:]
  -[AFSiriTaskService resume]
  -[AFSiriTaskService dealloc]
  -[AFSiriTaskService listener:shouldAcceptNewConnection:]


AFSiriTaskDeliveryHandler : NSObject <AFSiriTaskDelivering>
 @property  AFSiriTaskService *service
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <AFSiriTaskServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriTaskDeliveryHandler .cxx_destruct]
  -[AFSiriTaskDeliveryHandler setDelegate:]
  -[AFSiriTaskDeliveryHandler setQueue:]
  -[AFSiriTaskDeliveryHandler service]
  -[AFSiriTaskDeliveryHandler delegate]
  -[AFSiriTaskDeliveryHandler deliverSiriTask:completionHandler:]
  -[AFSiriTaskDeliveryHandler queue]
  -[AFSiriTaskDeliveryHandler setService:]


AFSiriTaskmaster : NSObject <AFSiriUsageResultHandling, NSXPCListenerDelegate, AFSiriRequestHandling, AFSiriRequestFailureHandling>
 @property  <AFSiriTaskmasterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSiriTaskmaster taskmasterForUIApplicationWithBundleIdentifier:]
  +[AFSiriTaskmaster taskmasterForMachServiceWithName:]
  +[AFSiriTaskmaster taskmasterForMachServiceForAppWithBundleIdentifier:]

  // instance methods
  -[AFSiriTaskmaster .cxx_destruct]
  -[AFSiriTaskmaster handleSiriRequest:deliveryHandler:completionHandler:]
  -[AFSiriTaskmaster setDelegate:]
  -[AFSiriTaskmaster _handleFailureOfRequest:error:atTime:]
  -[AFSiriTaskmaster handleSiriTaskUsageResult:fromRequest:]
  -[AFSiriTaskmaster initWithTaskDeliverer:]
  -[AFSiriTaskmaster delegate]
  -[AFSiriTaskmaster handleFailureOfRequest:error:atTime:]
  -[AFSiriTaskmaster dealloc]
  -[AFSiriTaskmaster listener:shouldAcceptNewConnection:]


STAlarm : STSiriModelObject <NSCopying>
 @property  BOOL enabled
 @property  long long daysOfWeek
 @property  long long hourOfDay
 @property  long long minuteOfHour
 @property  NSString *label
 @property  BOOL sleepAlarm
 @property  BOOL overrideAlarm
 @property  long long bedtimeHour
 @property  long long bedtimeMinute

  // class methods
  +[STAlarm supportsSecureCoding]

  // instance methods
  -[STAlarm isSleepAlarm]
  -[STAlarm setSleepAlarm:]
  -[STAlarm label]
  -[STAlarm initWithCoder:]
  -[STAlarm setMinuteOfHour:]
  -[STAlarm minuteOfHour]
  -[STAlarm .cxx_destruct]
  -[STAlarm setBedtimeMinute:]
  -[STAlarm setHourOfDay:]
  -[STAlarm isEnabled]
  -[STAlarm daysOfWeek]
  -[STAlarm setDaysOfWeek:]
  -[STAlarm isOverrideAlarm]
  -[STAlarm setOverrideAlarm:]
  -[STAlarm bedtimeMinute]
  -[STAlarm setBedtimeHour:]
  -[STAlarm bedtimeHour]
  -[STAlarm hourOfDay]
  -[STAlarm setLabel:]
  -[STAlarm copyWithZone:]
  -[STAlarm setEnabled:]
  -[STAlarm encodeWithCoder:]


AFTreeNodePropertyListSerialization : NSObject
  // instance methods
  -[AFTreeNodePropertyListSerialization propertyListWithTreeNode:itemPropertyListCreation:]
  -[AFTreeNodePropertyListSerialization treeNodeWithPropertyList:error:itemCreation:]
  -[AFTreeNodePropertyListSerialization _propertyListWithTreeNode:itemPropertyListCreation:]
  -[AFTreeNodePropertyListSerialization _treeNodeWithPropertyList:error:itemCreation:]


AFDeleteAlarmRequest : AFSiriRequest
 @property  NSArray *alarmIdentifiers

  // class methods
  +[AFDeleteAlarmRequest supportsSecureCoding]

  // instance methods
  -[AFDeleteAlarmRequest initWithCoder:]
  -[AFDeleteAlarmRequest .cxx_destruct]
  -[AFDeleteAlarmRequest createResponse]
  -[AFDeleteAlarmRequest setAlarmIdentifiers:]
  -[AFDeleteAlarmRequest alarmIdentifiers]
  -[AFDeleteAlarmRequest encodeWithCoder:]


AFUserNotificationAnnouncementSpeakingStateObserver : NSObject <AFUserNotificationAnnouncementSpeakingStateServiceDelegate, AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFUserNotificationAnnouncementSpeakingStateObserver _tearDown]
  -[AFUserNotificationAnnouncementSpeakingStateObserver connectionInterrupted]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _connection]
  -[AFUserNotificationAnnouncementSpeakingStateObserver .cxx_destruct]
  -[AFUserNotificationAnnouncementSpeakingStateObserver speakingStateDidChange:forIdentifiers:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _cleanUpConnection]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _startObservingNotificationWithRequestIdentifier:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _removeObserverForNotificationRequestIdentifier:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _speakingStateDidChange:forIdentifiers:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver cleanUpConnection]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _notifyObserverOfFailureForAllObservingNotifications]
  -[AFUserNotificationAnnouncementSpeakingStateObserver startObservingNotificationWithRequestIdentifier:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver stopObservingNotificationWithRequestIdentifier:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver initWithQueue:delegate:]
  -[AFUserNotificationAnnouncementSpeakingStateObserver _currentConnection]
  -[AFUserNotificationAnnouncementSpeakingStateObserver dealloc]
  -[AFUserNotificationAnnouncementSpeakingStateObserver invalidate]
  -[AFUserNotificationAnnouncementSpeakingStateObserver connectionInvalidated]


AFCallStateSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long callState
 @property  BOOL onSpeaker
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFCallStateSnapshot supportsSecureCoding]
  +[AFCallStateSnapshot newWithBuilder:]

  // instance methods
  -[AFCallStateSnapshot buildDictionaryRepresentation]
  -[AFCallStateSnapshot ad_shortDescription]
  -[AFCallStateSnapshot serializedBackingStore]
  -[AFCallStateSnapshot _descriptionWithIndent:]
  -[AFCallStateSnapshot initWithCoder:]
  -[AFCallStateSnapshot initWithDictionaryRepresentation:]
  -[AFCallStateSnapshot callState]
  -[AFCallStateSnapshot initWithSerializedBackingStore:]
  -[AFCallStateSnapshot mutatedCopyWithMutator:]
  -[AFCallStateSnapshot isEqual:]
  -[AFCallStateSnapshot onSpeaker]
  -[AFCallStateSnapshot initWithCallState:onSpeaker:]
  -[AFCallStateSnapshot copyWithZone:]
  -[AFCallStateSnapshot encodeWithCoder:]


_AFCallStateSnapshotMutation : NSObject <AFCallStateSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFCallStateSnapshotMutation setCallState:]
  -[_AFCallStateSnapshotMutation .cxx_destruct]
  -[_AFCallStateSnapshotMutation init]
  -[_AFCallStateSnapshotMutation setOnSpeaker:]
  -[_AFCallStateSnapshotMutation generate]
  -[_AFCallStateSnapshotMutation initWithBaseModel:]


AFDisambiguationStore : NSObject
  // instance methods
  -[AFDisambiguationStore .cxx_destruct]
  -[AFDisambiguationStore _store]
  -[AFDisambiguationStore reset]
  -[AFDisambiguationStore infoForIdentifier:]
  -[AFDisambiguationStore saveInfo:forIdentifier:]


AFUpdateMessageRequest : AFSiriRequest
  // class methods
  +[AFUpdateMessageRequest supportsSecureCoding]

  // instance methods
  -[AFUpdateMessageRequest initWithCoder:]
  -[AFUpdateMessageRequest .cxx_destruct]
  -[AFUpdateMessageRequest message]
  -[AFUpdateMessageRequest createResponseWithMessageIdentifier:]
  -[AFUpdateMessageRequest encodeWithCoder:]
  -[AFUpdateMessageRequest _initWithMessage:]


STSiriLocation : NSObject <AFTranscriptionType>
 @property  NSURL *addressBookID
 @property  NSString *addressLabel
 @property  NSString *contactName
 @property  NSData *geoResult
 @property  long long resultType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STSiriLocation supportsSecureCoding]

  // instance methods
  -[STSiriLocation contactName]
  -[STSiriLocation initWithCoder:]
  -[STSiriLocation resultType]
  -[STSiriLocation .cxx_destruct]
  -[STSiriLocation setResultType:]
  -[STSiriLocation geoResult]
  -[STSiriLocation addressBookID]
  -[STSiriLocation setAddressBookID:]
  -[STSiriLocation addressLabel]
  -[STSiriLocation setAddressLabel:]
  -[STSiriLocation setContactName:]
  -[STSiriLocation setGeoResult:]
  -[STSiriLocation encodeWithCoder:]


AFMemoryInfo : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long virtualMemorySizeInBytes
 @property  int numberOfRegions
 @property  int pageSizeInBytes
 @property  unsigned long residentMemorySizeInBytes
 @property  unsigned long peakResidentMemorySizeInBytes
 @property  unsigned long physicalMemoryFootprintInBytes

  // class methods
  +[AFMemoryInfo supportsSecureCoding]
  +[AFMemoryInfo newWithBuilder:]

  // instance methods
  -[AFMemoryInfo _descriptionWithIndent:]
  -[AFMemoryInfo pageSizeInBytes]
  -[AFMemoryInfo initWithCoder:]
  -[AFMemoryInfo residentMemorySizeInBytes]
  -[AFMemoryInfo mutatedCopyWithMutator:]
  -[AFMemoryInfo isEqual:]
  -[AFMemoryInfo physicalMemoryFootprintInBytes]
  -[AFMemoryInfo virtualMemorySizeInBytes]
  -[AFMemoryInfo peakResidentMemorySizeInBytes]
  -[AFMemoryInfo initWithVirtualMemorySizeInBytes:numberOfRegions:pageSizeInBytes:residentMemorySizeInBytes:peakResidentMemorySizeInBytes:physicalMemoryFootprintInBytes:]
  -[AFMemoryInfo copyWithZone:]
  -[AFMemoryInfo numberOfRegions]
  -[AFMemoryInfo encodeWithCoder:]


_AFMemoryInfoMutation : NSObject <AFMemoryInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMemoryInfoMutation .cxx_destruct]
  -[_AFMemoryInfoMutation init]
  -[_AFMemoryInfoMutation setVirtualMemorySizeInBytes:]
  -[_AFMemoryInfoMutation setNumberOfRegions:]
  -[_AFMemoryInfoMutation setPageSizeInBytes:]
  -[_AFMemoryInfoMutation setResidentMemorySizeInBytes:]
  -[_AFMemoryInfoMutation setPeakResidentMemorySizeInBytes:]
  -[_AFMemoryInfoMutation setPhysicalMemoryFootprintInBytes:]
  -[_AFMemoryInfoMutation generate]
  -[_AFMemoryInfoMutation initWithBaseModel:]


AFSiriActivationContext : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long timestamp
 @property  long long source
 @property  long long event
 @property  unsigned long options
 @property  NSString *deviceID
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSiriActivationContext supportsSecureCoding]
  +[AFSiriActivationContext newWithBuilder:]

  // instance methods
  -[AFSiriActivationContext buildDictionaryRepresentation]
  -[AFSiriActivationContext _descriptionWithIndent:]
  -[AFSiriActivationContext initWithCoder:]
  -[AFSiriActivationContext initWithDictionaryRepresentation:]
  -[AFSiriActivationContext options]
  -[AFSiriActivationContext .cxx_destruct]
  -[AFSiriActivationContext deviceID]
  -[AFSiriActivationContext mutatedCopyWithMutator:]
  -[AFSiriActivationContext isEqual:]
  -[AFSiriActivationContext initWithTimestamp:source:event:options:deviceID:userInfo:]
  -[AFSiriActivationContext timestamp]
  -[AFSiriActivationContext userInfo]
  -[AFSiriActivationContext copyWithZone:]
  -[AFSiriActivationContext source]
  -[AFSiriActivationContext encodeWithCoder:]
  -[AFSiriActivationContext event]


_AFSiriActivationContextMutation : NSObject <AFSiriActivationContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSiriActivationContextMutation setUserInfo:]
  -[_AFSiriActivationContextMutation setOptions:]
  -[_AFSiriActivationContextMutation .cxx_destruct]
  -[_AFSiriActivationContextMutation init]
  -[_AFSiriActivationContextMutation setEvent:]
  -[_AFSiriActivationContextMutation setSource:]
  -[_AFSiriActivationContextMutation setDeviceID:]
  -[_AFSiriActivationContextMutation generate]
  -[_AFSiriActivationContextMutation initWithBaseModel:]
  -[_AFSiriActivationContextMutation setTimestamp:]


AFAnalytics : NSObject
  // class methods
  +[AFAnalytics sharedAnalytics]

  // instance methods
  -[AFAnalytics initWithInstanceContext:]
  -[AFAnalytics logInstrumentation:machAbsoluteTime:turnIdentifier:]
  -[AFAnalytics logEventWithType:machAbsoluteTime:context:]
  -[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
  -[AFAnalytics logEvents:]
  -[AFAnalytics _service:]
  -[AFAnalytics logClientFeedbackPresented:]
  -[AFAnalytics .cxx_destruct]
  -[AFAnalytics logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]
  -[AFAnalytics barrier:]
  -[AFAnalytics logEvent:]
  -[AFAnalytics logInstrumentation:turnContext:]
  -[AFAnalytics init]
  -[AFAnalytics logEventWithType:contextProvider:contextProvidingQueue:]
  -[AFAnalytics logClientFeedbackPresented:dialogIdentifierProvider:]
  -[AFAnalytics boostQueuedEvents:]
  -[AFAnalytics logEventWithType:machAbsoluteTime:context:contextNoCopy:]
  -[AFAnalytics beginEventsGrouping]
  -[AFAnalytics logEventWithType:context:]
  -[AFAnalytics logEventWithType:contextProvider:]
  -[AFAnalytics _stageEvent:]
  -[AFAnalytics _stageEvents:]
  -[AFAnalytics logInstrumentationOfType:turnIdentifier:]
  -[AFAnalytics logEventWithType:contextResolver:]
  -[AFAnalytics newTurnBasedInstrumentationContext]
  -[AFAnalytics logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:]
  -[AFAnalytics setService:]
  -[AFAnalytics logEventWithType:machAbsoluteTime:contextResolver:]
  -[AFAnalytics endEventsGrouping]
  -[AFAnalytics logEventWithType:context:contextNoCopy:]


AFAssistantSamplingUtilities : AFSamplingUtilities
  // class methods
  +[AFAssistantSamplingUtilities sampledCachesSubDirectoryPath]
  +[AFAssistantSamplingUtilities component]
  +[AFAssistantSamplingUtilities samplingDateAsString]
  +[AFAssistantSamplingUtilities sampledSubDirectoryPath]


AFMyriadGoodnessScoreOverrideContext : NSObject
 @property  BOOL overrideContext
 @property  unsigned char overriddenAdjustedScore

  // instance methods
  -[AFMyriadGoodnessScoreOverrideContext overrideContext]
  -[AFMyriadGoodnessScoreOverrideContext setOverrideContext:]
  -[AFMyriadGoodnessScoreOverrideContext overriddenAdjustedScore]
  -[AFMyriadGoodnessScoreOverrideContext setOverriddenAdjustedScore:]


AFMyriadGoodnessScoreContext : NSObject
 @property  NSSet *reasons
 @property  double mediaPlaybackInterruptedTime

  // instance methods
  -[AFMyriadGoodnessScoreContext reasons]
  -[AFMyriadGoodnessScoreContext .cxx_destruct]
  -[AFMyriadGoodnessScoreContext init]
  -[AFMyriadGoodnessScoreContext setOverridingContext:]
  -[AFMyriadGoodnessScoreContext getOverridingContext]
  -[AFMyriadGoodnessScoreContext mediaPlaybackInterruptedTime]
  -[AFMyriadGoodnessScoreContext setMediaPlaybackInterruptedTime:]
  -[AFMyriadGoodnessScoreContext setReasons:]


AFMyriadGoodnessScoreEvaluator : NSObject <AFSettingsDelegate>
 @property  BOOL evaluateForAudioAccessory
 @property  double lastActivationTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFMyriadGoodnessScoreEvaluator preheat]
  -[AFMyriadGoodnessScoreEvaluator .cxx_destruct]
  -[AFMyriadGoodnessScoreEvaluator _settingsConnectionDidDisconnect]
  -[AFMyriadGoodnessScoreEvaluator getPlatformBias]
  -[AFMyriadGoodnessScoreEvaluator initWithDeviceInstanceContext:preferences:queue:instrumentation:]
  -[AFMyriadGoodnessScoreEvaluator _fetchDevicePlatformBiasIfRequired]
  -[AFMyriadGoodnessScoreEvaluator getRecentBump:ignoreAdjustedBoost:]
  -[AFMyriadGoodnessScoreEvaluator _updatePlatformBias:]
  -[AFMyriadGoodnessScoreEvaluator bumpGoodnessScore:lastActivationTime:mediaPlaybackInterruptedTime:ignoreAdjustedBoost:]
  -[AFMyriadGoodnessScoreEvaluator evaluateForAudioAccessory]
  -[AFMyriadGoodnessScoreEvaluator initWithDeviceInstanceContext:queue:]
  -[AFMyriadGoodnessScoreEvaluator initWithDeviceInstanceContext:preferences:queue:]
  -[AFMyriadGoodnessScoreEvaluator getMyriadAdjustedBoostForGoodnessScoreContext:]
  -[AFMyriadGoodnessScoreEvaluator setLastActivationTime:]
  -[AFMyriadGoodnessScoreEvaluator lastActivationTime]


AFSiriActivationListener : NSObject <NSXPCListenerDelegate, AFNotifyObserverDelegate, AFSiriActivationService, AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFSiriActivationListener _stop]
  -[AFSiriActivationListener notifyObserver:didChangeStateFrom:to:]
  -[AFSiriActivationListener .cxx_destruct]
  -[AFSiriActivationListener stop]
  -[AFSiriActivationListener _invalidate]
  -[AFSiriActivationListener _startWithDelegate:]
  -[AFSiriActivationListener _prewarmWithRequestInfo:context:completion:]
  -[AFSiriActivationListener _activateWithRequestInfo:context:completion:]
  -[AFSiriActivationListener _deactivateForReason:options:context:completion:]
  -[AFSiriActivationListener _deliverButtonEventFromContext:completion:]
  -[AFSiriActivationListener _myriadEventWithRequestInfo:context:completion:]
  -[AFSiriActivationListener initWithServicePort:]
  -[AFSiriActivationListener prewarmWithRequestInfo:context:completion:]
  -[AFSiriActivationListener activateWithRequestInfo:context:completion:]
  -[AFSiriActivationListener deactivateForReason:options:context:completion:]
  -[AFSiriActivationListener handleContext:completion:]
  -[AFSiriActivationListener handleIntent:inBackgroundAppWithBundleId:reply:]
  -[AFSiriActivationListener handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:]
  -[AFSiriActivationListener dealloc]
  -[AFSiriActivationListener invalidate]
  -[AFSiriActivationListener listener:shouldAcceptNewConnection:]
  -[AFSiriActivationListener startWithDelegate:]


AFSiriAnnouncementRequestCapabilityManager : NSObject <AFAnnouncementRequestCapabilityProvidingDelegate>
  // class methods
  +[AFSiriAnnouncementRequestCapabilityManager _classForPlatform:]
  +[AFSiriAnnouncementRequestCapabilityManager supportedAnnouncementTypesForBundleId:onPlatform:]
  +[AFSiriAnnouncementRequestCapabilityManager _supportsAnnouncementType:forSupportedIntents:forBundleId:onPlatform:]
  +[AFSiriAnnouncementRequestCapabilityManager notificationAnnouncementTypeForNotificationFromApp:withIntentIDs:onPlatform:]
  +[AFSiriAnnouncementRequestCapabilityManager _requiredBundleIDsForNotificationAnnouncementType:]

  // instance methods
  -[AFSiriAnnouncementRequestCapabilityManager initWithPlatform:]
  -[AFSiriAnnouncementRequestCapabilityManager fetchEligibleAnnouncementRequestTypesWithCompletion:]
  -[AFSiriAnnouncementRequestCapabilityManager fetchAvailableAnnouncementRequestTypesWithCompletion:]
  -[AFSiriAnnouncementRequestCapabilityManager .cxx_destruct]
  -[AFSiriAnnouncementRequestCapabilityManager provider:eligibleAnnouncementRequestTypesChanged:]
  -[AFSiriAnnouncementRequestCapabilityManager addObserver:]
  -[AFSiriAnnouncementRequestCapabilityManager provider:availableAnnouncementRequestTypesChanged:]
  -[AFSiriAnnouncementRequestCapabilityManager removeObserver:]


AFDeviceRingerSwitchObserver : NSObject <AFNotifyObserverDelegate>
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFDeviceRingerSwitchObserver sharedObserver]

  // instance methods
  -[AFDeviceRingerSwitchObserver removeListener:]
  -[AFDeviceRingerSwitchObserver notifyObserver:didChangeStateFrom:to:]
  -[AFDeviceRingerSwitchObserver .cxx_destruct]
  -[AFDeviceRingerSwitchObserver init]
  -[AFDeviceRingerSwitchObserver state]
  -[AFDeviceRingerSwitchObserver addListener:]
  -[AFDeviceRingerSwitchObserver _updateStateWithNotifyState:]


AFCreateMessageRequest : AFSiriRequest
  // class methods
  +[AFCreateMessageRequest supportsSecureCoding]

  // instance methods
  -[AFCreateMessageRequest initWithCoder:]
  -[AFCreateMessageRequest .cxx_destruct]
  -[AFCreateMessageRequest message]
  -[AFCreateMessageRequest createResponseWithMessageIdentifier:]
  -[AFCreateMessageRequest encodeWithCoder:]
  -[AFCreateMessageRequest _initWithMessage:]


AFMyriadAccessoryMessage : NSObject
 @property  unsigned char version
 @property  unsigned long requestType
 @property  unsigned long session
 @property  double voiceTriggerEndTime
 @property  unsigned short audioHash
 @property  unsigned char goodnessScore
 @property  unsigned char userConfidenceScore
 @property  unsigned char tieBreaker
 @property  unsigned char deviceClass
 @property  unsigned char deviceGroup
 @property  unsigned char productType
 @property  unsigned char electionDecision
 @property  unsigned char emergencyHandled
 @property  unsigned char ack
 @property  NSUUID *accessoryId
 @property  BOOL isSane
 @property  BOOL serializedProtocol

  // class methods
  +[AFMyriadAccessoryMessage messageKey]
  +[AFMyriadAccessoryMessage acknowledgeRequestKey]
  +[AFMyriadAccessoryMessage requestTypeKey]
  +[AFMyriadAccessoryMessage sessionIdKey]
  +[AFMyriadAccessoryMessage audioDataKey]
  +[AFMyriadAccessoryMessage emergencyHandledKey]
  +[AFMyriadAccessoryMessage electionDecisionKey]
  +[AFMyriadAccessoryMessage myriadRequestTypeAsString:]
  +[AFMyriadAccessoryMessage deviceInfoKey]
  +[AFMyriadAccessoryMessage isMyriadRequestMessage:]
  +[AFMyriadAccessoryMessage protocolName]

  // instance methods
  -[AFMyriadAccessoryMessage voiceTriggerEndTime]
  -[AFMyriadAccessoryMessage isSane]
  -[AFMyriadAccessoryMessage .cxx_destruct]
  -[AFMyriadAccessoryMessage deviceClass]
  -[AFMyriadAccessoryMessage productType]
  -[AFMyriadAccessoryMessage requestType]
  -[AFMyriadAccessoryMessage tieBreaker]
  -[AFMyriadAccessoryMessage isAcknowledgement]
  -[AFMyriadAccessoryMessage _copyRawBytesFromSource:toDest:length:]
  -[AFMyriadAccessoryMessage _initializeMessageObj:]
  -[AFMyriadAccessoryMessage _initializeMessageObjFromDictionary:]
  -[AFMyriadAccessoryMessage initPreheatMessageWithSessionId:accessoryId:]
  -[AFMyriadAccessoryMessage initWithRequestType:session:voiceTriggerEndTime:audioHash:goodnessScore:userConfidenceScore:tieBreaker:deviceClass:deviceGroup:productType:electionDecision:emergencyHandled:ack:accessoryId:]
  -[AFMyriadAccessoryMessage goodnessScore]
  -[AFMyriadAccessoryMessage initElectionDecisionMessageWithSessionId:decision:accessoryId:]
  -[AFMyriadAccessoryMessage initResetMessageWithSessionId:accessoryId:]
  -[AFMyriadAccessoryMessage initWithAccessoryMessage:accessoryId:]
  -[AFMyriadAccessoryMessage initWithAccessoryMessageAsDictionary:accessoryId:]
  -[AFMyriadAccessoryMessage messageAsData]
  -[AFMyriadAccessoryMessage userConfidenceScore]
  -[AFMyriadAccessoryMessage electionWon]
  -[AFMyriadAccessoryMessage isEmergencyHandled]
  -[AFMyriadAccessoryMessage accessoryId]
  -[AFMyriadAccessoryMessage usesSerializedProtocol]
  -[AFMyriadAccessoryMessage version]
  -[AFMyriadAccessoryMessage audioHash]
  -[AFMyriadAccessoryMessage deviceGroup]
  -[AFMyriadAccessoryMessage session]
  -[AFMyriadAccessoryMessage _initWithMessage:]


AFUtteranceSuggestions : NSObject
 @property  NSString *languageCode
 @property  <AFUtteranceSuggestionsDelegate> *delegate

  // instance methods
  -[AFUtteranceSuggestions .cxx_destruct]
  -[AFUtteranceSuggestions languageCode]
  -[AFUtteranceSuggestions delegate]
  -[AFUtteranceSuggestions _suggestionsFilePath]
  -[AFUtteranceSuggestions initWithLanguageCode:delegate:]
  -[AFUtteranceSuggestions getSuggestedUtterancesWithCompletion:]
  -[AFUtteranceSuggestions setSuggestedUtterances:]


AFHomeAccessorySiriDataSharingPropagationLogEvent : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSDate *date
 @property  NSString *accessoryIdentifier
 @property  long long propagationEvent
 @property  NSString *propagationEventReason
 @property  NSString *associatedChangeLogEventIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeAccessorySiriDataSharingPropagationLogEvent supportsSecureCoding]
  +[AFHomeAccessorySiriDataSharingPropagationLogEvent newWithBuilder:]

  // instance methods
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent buildDictionaryRepresentation]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent _descriptionWithIndent:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent initWithCoder:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent initWithDictionaryRepresentation:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent .cxx_destruct]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent mutatedCopyWithMutator:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent isEqual:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent accessoryIdentifier]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent propagationEvent]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent propagationEventReason]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent associatedChangeLogEventIdentifier]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent initWithDate:accessoryIdentifier:propagationEvent:propagationEventReason:associatedChangeLogEventIdentifier:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent copyWithZone:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent encodeWithCoder:]
  -[AFHomeAccessorySiriDataSharingPropagationLogEvent date]


_AFHomeAccessorySiriDataSharingPropagationLogEventMutation : NSObject <AFHomeAccessorySiriDataSharingPropagationLogEventMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation .cxx_destruct]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation init]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation setDate:]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation setAccessoryIdentifier:]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation setPropagationEvent:]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation setPropagationEventReason:]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation setAssociatedChangeLogEventIdentifier:]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation generate]
  -[_AFHomeAccessorySiriDataSharingPropagationLogEventMutation initWithBaseModel:]


STCall : STSiriModelObject
  // class methods
  +[STCall supportsSecureCoding]

  // instance methods
  -[STCall initWithCoder:]
  -[STCall .cxx_destruct]
  -[STCall _aceContextObjectValue]
  -[STCall service]
  -[STCall setRecipientAddress:]
  -[STCall initiatorAddress]
  -[STCall setInitiatorAddress:]
  -[STCall recipientAddress]
  -[STCall setService:]
  -[STCall encodeWithCoder:]


AFMyriadInstrumentation : NSObject
  // instance methods
  -[AFMyriadInstrumentation .cxx_destruct]
  -[AFMyriadInstrumentation logCDADeviceStateActivityStartedOrChanged:withTrigger:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDADeviceStateActivityEnded:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDAElectionAdvertisingStarting:withDelay:withInterval:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDAElectionAdvertisingStarted:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDAElectionTimerEnded:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDAElectionAdvertisingEnded:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation logCDAElectionDecisionMade:withDecision:withPreviousDecision:timeSincePreviousDecision:withWinningDevice:withThisDevice:withParticipants:withRawScore:withBoost:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation init]
  -[AFMyriadInstrumentation updateBoost:value:]
  -[AFMyriadInstrumentation _createSchemaClientEvent:]
  -[AFMyriadInstrumentation _sendAndLogClientEvent:stState:atTimestamp:]
  -[AFMyriadInstrumentation _boostTypeAsString:]
  -[AFMyriadInstrumentation logCDAElectionAdvertisingEnding:withCdaId:withTimestamp:]
  -[AFMyriadInstrumentation updateIsTrump:withReason:]
  -[AFMyriadInstrumentation logCDAElectionDecisionMadeDebug:withCrossDeviceArbitrationAllowed:advertisementData:withDeviceGroup:withCdaId:withTimestamp:]


AFExperimentServerConfigurationInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *configurationIdentifier
 @property  NSURL *configurationURL
 @property  double maxTimeToSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFExperimentServerConfigurationInfo supportsSecureCoding]
  +[AFExperimentServerConfigurationInfo newWithBuilder:]

  // instance methods
  -[AFExperimentServerConfigurationInfo configurationIdentifier]
  -[AFExperimentServerConfigurationInfo buildDictionaryRepresentation]
  -[AFExperimentServerConfigurationInfo _descriptionWithIndent:]
  -[AFExperimentServerConfigurationInfo initWithCoder:]
  -[AFExperimentServerConfigurationInfo initWithDictionaryRepresentation:]
  -[AFExperimentServerConfigurationInfo .cxx_destruct]
  -[AFExperimentServerConfigurationInfo mutatedCopyWithMutator:]
  -[AFExperimentServerConfigurationInfo isEqual:]
  -[AFExperimentServerConfigurationInfo maxTimeToSync]
  -[AFExperimentServerConfigurationInfo initWithConfigurationIdentifier:configurationURL:maxTimeToSync:]
  -[AFExperimentServerConfigurationInfo copyWithZone:]
  -[AFExperimentServerConfigurationInfo configurationURL]
  -[AFExperimentServerConfigurationInfo encodeWithCoder:]


_AFExperimentServerConfigurationInfoMutation : NSObject <AFExperimentServerConfigurationInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFExperimentServerConfigurationInfoMutation setConfigurationURL:]
  -[_AFExperimentServerConfigurationInfoMutation .cxx_destruct]
  -[_AFExperimentServerConfigurationInfoMutation setConfigurationIdentifier:]
  -[_AFExperimentServerConfigurationInfoMutation init]
  -[_AFExperimentServerConfigurationInfoMutation setMaxTimeToSync:]
  -[_AFExperimentServerConfigurationInfoMutation generate]
  -[_AFExperimentServerConfigurationInfoMutation initWithBaseModel:]


AFHomeAnnouncement : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *identifier
 @property  unsigned long startedHostTime
 @property  unsigned long finishedHostTime
 @property  NSDate *startedDate
 @property  NSDate *finishedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeAnnouncement supportsSecureCoding]
  +[AFHomeAnnouncement newWithBuilder:]

  // instance methods
  -[AFHomeAnnouncement buildDictionaryRepresentation]
  -[AFHomeAnnouncement _descriptionWithIndent:]
  -[AFHomeAnnouncement initWithCoder:]
  -[AFHomeAnnouncement initWithDictionaryRepresentation:]
  -[AFHomeAnnouncement .cxx_destruct]
  -[AFHomeAnnouncement mutatedCopyWithMutator:]
  -[AFHomeAnnouncement isEqual:]
  -[AFHomeAnnouncement identifier]
  -[AFHomeAnnouncement startedDate]
  -[AFHomeAnnouncement startedHostTime]
  -[AFHomeAnnouncement finishedHostTime]
  -[AFHomeAnnouncement finishedDate]
  -[AFHomeAnnouncement initWithIdentifier:startedHostTime:finishedHostTime:startedDate:finishedDate:]
  -[AFHomeAnnouncement copyWithZone:]
  -[AFHomeAnnouncement encodeWithCoder:]


_AFHomeAnnouncementMutation : NSObject <AFHomeAnnouncementMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeAnnouncementMutation .cxx_destruct]
  -[_AFHomeAnnouncementMutation init]
  -[_AFHomeAnnouncementMutation setIdentifier:]
  -[_AFHomeAnnouncementMutation setStartedHostTime:]
  -[_AFHomeAnnouncementMutation setFinishedHostTime:]
  -[_AFHomeAnnouncementMutation setStartedDate:]
  -[_AFHomeAnnouncementMutation setFinishedDate:]
  -[_AFHomeAnnouncementMutation generate]
  -[_AFHomeAnnouncementMutation initWithBaseModel:]


AFShowSettingRequest : AFSiriRequest
  // class methods
  +[AFShowSettingRequest supportsSecureCoding]

  // instance methods
  -[AFShowSettingRequest initWithCoder:]
  -[AFShowSettingRequest settingType]
  -[AFShowSettingRequest createResponse]
  -[AFShowSettingRequest _initWithSettingType:]
  -[AFShowSettingRequest encodeWithCoder:]


AFPeerContentTuple : NSObject <NSCopying, NSSecureCoding>
 @property  AFPeerInfo *info
 @property  id content

  // class methods
  +[AFPeerContentTuple supportsSecureCoding]

  // instance methods
  -[AFPeerContentTuple content]
  -[AFPeerContentTuple initWithCoder:]
  -[AFPeerContentTuple .cxx_destruct]
  -[AFPeerContentTuple info]
  -[AFPeerContentTuple isEqual:]
  -[AFPeerContentTuple initWithInfo:content:]
  -[AFPeerContentTuple copyWithZone:]
  -[AFPeerContentTuple encodeWithCoder:]


STSetting : STSiriModelObject
 @property  long long type
 @property  id value

  // class methods
  +[STSetting supportsSecureCoding]

  // instance methods
  -[STSetting initWithCoder:]
  -[STSetting setType:]
  -[STSetting .cxx_destruct]
  -[STSetting setValue:]
  -[STSetting value]
  -[STSetting type]
  -[STSetting encodeWithCoder:]


AFServiceContextSnapshot : NSObject <NSSecureCoding>
 @property  NSDate *deliveryDate

  // class methods
  +[AFServiceContextSnapshot supportsSecureCoding]

  // instance methods
  -[AFServiceContextSnapshot initWithCoder:]
  -[AFServiceContextSnapshot .cxx_destruct]
  -[AFServiceContextSnapshot isEqual:]
  -[AFServiceContextSnapshot deliveryDate]
  -[AFServiceContextSnapshot initWithDeliveryDate:]
  -[AFServiceContextSnapshot encodeWithCoder:]


AFGetSettingsResponse : AFSiriResponse
 @property  NSArray *settings

  // class methods
  +[AFGetSettingsResponse supportsSecureCoding]

  // instance methods
  -[AFGetSettingsResponse initWithCoder:]
  -[AFGetSettingsResponse .cxx_destruct]
  -[AFGetSettingsResponse setSettings:]
  -[AFGetSettingsResponse encodeWithCoder:]
  -[AFGetSettingsResponse settings]


AFMyriadCoordinator : NSObject <AFNotifyObserverDelegate, WPHeySiriProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMyriadCoordinator currentCoordinator]
  +[AFMyriadCoordinator didChangeDefaults]
  +[AFMyriadCoordinator clearCurrentCoordinator]

  // instance methods
  -[AFMyriadCoordinator inTask]
  -[AFMyriadCoordinator _stateAsString]
  -[AFMyriadCoordinator enterState:]
  -[AFMyriadCoordinator _cancelTimer]
  -[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:]
  -[AFMyriadCoordinator startAdvertisingFromInTaskVoiceTriggerWithContext:]
  -[AFMyriadCoordinator _createDispatchTimerForEvent:toExecute:]
  -[AFMyriadCoordinator heySiriStartedAdvertising:]
  -[AFMyriadCoordinator _initializeWiProxReadinessTimer]
  -[AFMyriadCoordinator _deviceShouldContinue:]
  -[AFMyriadCoordinator _suppressDeviceIfNeededWithVoiceTriggerEndTime:adverisementDispatchTime:]
  -[AFMyriadCoordinator _unduck]
  -[AFMyriadCoordinator heySiriStartedScanning:]
  -[AFMyriadCoordinator _loseElection]
  -[AFMyriadCoordinator startAdvertisingFromInTaskTriggerWithContext:]
  -[AFMyriadCoordinator startListening]
  -[AFMyriadCoordinator _cancelOverallTimeout]
  -[AFMyriadCoordinator startAdvertising:afterDelay:maxInterval:]
  -[AFMyriadCoordinator _enteringIntoState:fromState:]
  -[AFMyriadCoordinator _startAdvertisingFromInTaskVoiceTrigger]
  -[AFMyriadCoordinator _stopAdvertisingAndListening]
  -[AFMyriadCoordinator heySiri:foundDevice:withInfo:]
  -[AFMyriadCoordinator _startListenTimer]
  -[AFMyriadCoordinator setupActionWindows]
  -[AFMyriadCoordinator startWatchAdvertisingFromVoiceTrigger]
  -[AFMyriadCoordinator _triggerABCForType:context:]
  -[AFMyriadCoordinator endAdvertisingAfterDelay:]
  -[AFMyriadCoordinator heySiriDidUpdateState:]
  -[AFMyriadCoordinator voiceTriggerRecord]
  -[AFMyriadCoordinator _startAdvertisingFromVoiceTrigger]
  -[AFMyriadCoordinator startWatchAdvertisingFromDirectTriggerWithContext:]
  -[AFMyriadCoordinator _setMyriadContext:]
  -[AFMyriadCoordinator .cxx_destruct]
  -[AFMyriadCoordinator _sortedReplies:]
  -[AFMyriadCoordinator _advertise:andMoveTo:]
  -[AFMyriadCoordinator preheatWiProx]
  -[AFMyriadCoordinator myriadSession:]
  -[AFMyriadCoordinator _waitWiProx:andExecute:]
  -[AFMyriadCoordinator deviceClass]
  -[AFMyriadCoordinator _endAdvertisingAnalyticsContext:]
  -[AFMyriadCoordinator startAdvertisingFromVoiceTriggerWithContext:]
  -[AFMyriadCoordinator _startTimer:for:thenExecute:]
  -[AFMyriadCoordinator injectAdvertisementForTesting:forDevice:]
  -[AFMyriadCoordinator resetStateMachine]
  -[AFMyriadCoordinator _testAndUpdateWedgeFilter:]
  -[AFMyriadCoordinator _suspendWiProxReadinessTimer]
  -[AFMyriadCoordinator startAdvertisingFromInTaskVoiceTrigger]
  -[AFMyriadCoordinator advertiseWith:]
  -[AFMyriadCoordinator _initializeTimer]
  -[AFMyriadCoordinator _advertiseSuppressTriggerInOutput]
  -[AFMyriadCoordinator _addElectionAdvertisementDataToMyriadSession:]
  -[AFMyriadCoordinator resetMyriadCoordinator:]
  -[AFMyriadCoordinator startListeningToEmergencySignal]
  -[AFMyriadCoordinator _createDispatchTimerWithTime:toExecute:]
  -[AFMyriadCoordinator _ageWedgeFilter]
  -[AFMyriadCoordinator setupAdvIntervalsInDelay:interval:withSlowdown:]
  -[AFMyriadCoordinator startAdvertisingEmergencySignal]
  -[AFMyriadCoordinator startAdvertisingFromAlertFiringVoiceTriggerWithContext:]
  -[AFMyriadCoordinator advertiseWith:afterDelay:maxInterval:]
  -[AFMyriadCoordinator stopListening:]
  -[AFMyriadCoordinator startAdvertisingFromOutgoingTriggerWithContext:]
  -[AFMyriadCoordinator _shouldUseContextCollector]
  -[AFMyriadCoordinator _enterState:]
  -[AFMyriadCoordinator stateAsString:]
  -[AFMyriadCoordinator _signalEmergencyCallHandled]
  -[AFMyriadCoordinator startAdvertisingFromInEarTrigger]
  -[AFMyriadCoordinator deviceTrumpDelay]
  -[AFMyriadCoordinator startAdvertisingForPHSSetupAfterDelay:maxInterval:]
  -[AFMyriadCoordinator _pushMyriadAdvertisementContextToContextCollectorWithAdvertisementInterval:advertisementDelay:]
  -[AFMyriadCoordinator startAdvertisingFromDirectTrigger]
  -[AFMyriadCoordinator _initDeviceClassAndAdjustments]
  -[AFMyriadCoordinator _inTaskTriggerWasTooSoon]
  -[AFMyriadCoordinator _startListening:]
  -[AFMyriadCoordinator heySiriAdvertisingPending:]
  -[AFMyriadCoordinator startWatchAdvertisingFromVoiceTriggerWithContext:]
  -[AFMyriadCoordinator lateSuppressionRecord]
  -[AFMyriadCoordinator heySiri:failedToStartAdvertisingWithError:]
  -[AFMyriadCoordinator startAdvertisingFromDirectTriggerWithContext:]
  -[AFMyriadCoordinator _okayToSuppressOnOutput]
  -[AFMyriadCoordinator _startTimer:for:thenEnterState:]
  -[AFMyriadCoordinator _endAdvertising:]
  -[AFMyriadCoordinator _advertiseTrigger]
  -[AFMyriadCoordinator endAdvertisingWithDeviceProhibitions:]
  -[AFMyriadCoordinator emptyRecord]
  -[AFMyriadCoordinator _myriadSession]
  -[AFMyriadCoordinator _enterBLEDiagnosticMode]
  -[AFMyriadCoordinator _updateRepliesWith:id:data:]
  -[AFMyriadCoordinator _resetAdvertisementTimings]
  -[AFMyriadCoordinator _clearWiProxReadinessTimer]
  -[AFMyriadCoordinator _leaveBLEDiagnosticMode]
  -[AFMyriadCoordinator directTriggerRecord]
  -[AFMyriadCoordinator _endAdvertisingWithDeviceProhibitions:]
  -[AFMyriadCoordinator _startAdvertising:afterDelay:maxInterval:]
  -[AFMyriadCoordinator _winElection]
  -[AFMyriadCoordinator resetReplies]
  -[AFMyriadCoordinator setInTask:]
  -[AFMyriadCoordinator startListening:]
  -[AFMyriadCoordinator _duringNextWindowEnterState:]
  -[AFMyriadCoordinator startResponseAdvertising:]
  -[AFMyriadCoordinator _startListeningAfterWiProxIsReady:inState:completion:]
  -[AFMyriadCoordinator stopListening]
  -[AFMyriadCoordinator initWithDelegate:]
  -[AFMyriadCoordinator endAdvertising:]
  -[AFMyriadCoordinator heySiriStoppedAdvertising:]
  -[AFMyriadCoordinator _shouldStopListeningBeforeAdvertising]
  -[AFMyriadCoordinator _createWaitWiProxTimer:waitBlock:]
  -[AFMyriadCoordinator waitWiProx:andExecute:]
  -[AFMyriadCoordinator startAdvertisingSlowdown:]
  -[AFMyriadCoordinator endAdvertising]
  -[AFMyriadCoordinator heySiri:failedToStartScanningWithError:]
  -[AFMyriadCoordinator startAdvertisingFromVoiceTrigger]
  -[AFMyriadCoordinator _stopListening:]
  -[AFMyriadCoordinator slowdownRecord:]
  -[AFMyriadCoordinator startAdvertisingEmergencyHandled]
  -[AFMyriadCoordinator startAdvertisingFromAlertFiringVoiceTrigger]
  -[AFMyriadCoordinator _resetAudioData]
  -[AFMyriadCoordinator heySiriStoppedScanning:]
  -[AFMyriadCoordinator _resetActionWindows]
  -[AFMyriadCoordinator responseObject:]
  -[AFMyriadCoordinator notifyObserver:didReceiveNotificationWithToken:]
  -[AFMyriadCoordinator notifyCurrentDecisionResult]
  -[AFMyriadCoordinator _stopAdvertising:]
  -[AFMyriadCoordinator startAdvertisingFromCarPlayTrigger]
  -[AFMyriadCoordinator _sortedReplies]
  -[AFMyriadCoordinator _phsSetupRecord]
  -[AFMyriadCoordinator updateRepliesWith:id:data:]
  -[AFMyriadCoordinator startAdvertisingFromVoiceTriggerAdjusted:]
  -[AFMyriadCoordinator startAdvertisingEmergency]
  -[AFMyriadCoordinator startWatchAdvertisingFromDirectTrigger]
  -[AFMyriadCoordinator _resumeWiProxReadinessTimer]
  -[AFMyriadCoordinator dealloc]
  -[AFMyriadCoordinator emergencyHandledRecord]
  -[AFMyriadCoordinator _waitWiProxAndExecute:]
  -[AFMyriadCoordinator _advertiseIndefinite:]
  -[AFMyriadCoordinator instrumentationUpdateBoost:value:]
  -[AFMyriadCoordinator emergencyRecord]
  -[AFMyriadCoordinator continuationRecord]
  -[AFMyriadCoordinator startAdvertisingFromVoiceTriggerAdjusted:withContext:]
  -[AFMyriadCoordinator _advertiseSlowdown]
  -[AFMyriadCoordinator _testAndFilterAdvertisementsFromContextCollector:voiceTriggerEndTime:advertisementDispatchTime:advertisement:]
  -[AFMyriadCoordinator _shouldContinueFor:]
  -[AFMyriadCoordinator _setupActionWindows]
  -[AFMyriadCoordinator _advertiseWith:afterDelay:maxInterval:thenExecute:]
  -[AFMyriadCoordinator _advertise:afterDelay:maxInterval:andMoveTo:]
  -[AFMyriadCoordinator _isAPhone:]
  -[AFMyriadCoordinator readDefaults]
  -[AFMyriadCoordinator startAdvertisingFromOutgoingTrigger]
  -[AFMyriadCoordinator _clearMyriadSession]
  -[AFMyriadCoordinator setupEnabled:]
  -[AFMyriadCoordinator _createMyriadSessionIfRequired]
  -[AFMyriadCoordinator _contextFetchDelayForAdvertimentInterval:advertisementDelay:]
  -[AFMyriadCoordinator deviceGroup]
  -[AFMyriadCoordinator _shouldHandleEmergency]
  -[AFMyriadCoordinator _nextElectionPublisherState]
  -[AFMyriadCoordinator _setOverallTimeout]
  -[AFMyriadCoordinator _duringNextWindowExecute:]
  -[AFMyriadCoordinator _adjustActionWindowsFromSlowdown:]
  -[AFMyriadCoordinator endTask]
  -[AFMyriadCoordinator _stateAsString:]
  -[AFMyriadCoordinator _createDispatchTimerFor:toExecute:]
  -[AFMyriadCoordinator _handleStateMachineErrorIfNeeded]
  -[AFMyriadCoordinator _readDefaults]


AFUIApplicationSiriTaskDeliverer : NSObject <AFSiriTaskDelivering>
 @property  AFSiriTaskmaster *taskmaster
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFUIApplicationSiriTaskDeliverer .cxx_destruct]
  -[AFUIApplicationSiriTaskDeliverer deliverSiriTask:completionHandler:]
  -[AFUIApplicationSiriTaskDeliverer siriTaskDidFinish]
  -[AFUIApplicationSiriTaskDeliverer dealloc]
  -[AFUIApplicationSiriTaskDeliverer _invalidateAssertionTimer]
  -[AFUIApplicationSiriTaskDeliverer _invalidateBackboardServices]
  -[AFUIApplicationSiriTaskDeliverer _processAssertionWasInvalidatedForRequest:]
  -[AFUIApplicationSiriTaskDeliverer _startAppStateMonitoringForRequest:]
  -[AFUIApplicationSiriTaskDeliverer _handleSuccessfulAppLaunchToBackground:forRequest:completion:]
  -[AFUIApplicationSiriTaskDeliverer _processAssertionWasAcquired:]
  -[AFUIApplicationSiriTaskDeliverer taskmaster]
  -[AFUIApplicationSiriTaskDeliverer processAssertionWasInvalidatedForRequest:]
  -[AFUIApplicationSiriTaskDeliverer initWithAppBundleIdentifier:]
  -[AFUIApplicationSiriTaskDeliverer setTaskmaster:]


AFSpeechParameters : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *language
 @property  NSString *interactionIdentifier
 @property  NSString *task
 @property  NSArray *loggingContext
 @property  NSString *applicationName
 @property  NSData *profile
 @property  NSDictionary *overrides
 @property  NSURL *modelOverrideURL
 @property  NSURL *originalAudioFileURL
 @property  BOOL narrowband
 @property  BOOL detectUtterances
 @property  BOOL censorSpeech
 @property  BOOL farField
 @property  BOOL secureOfflineOnly
 @property  BOOL shouldStoreAudioOnDevice
 @property  double maximumRecognitionDuration
 @property  NSString *inputOrigin
 @property  CLLocation *location
 @property  NSArray *jitGrammar

  // class methods
  +[AFSpeechParameters supportsSecureCoding]
  +[AFSpeechParameters newWithBuilder:]

  // instance methods
  -[AFSpeechParameters applicationName]
  -[AFSpeechParameters _descriptionWithIndent:]
  -[AFSpeechParameters interactionIdentifier]
  -[AFSpeechParameters initWithCoder:]
  -[AFSpeechParameters initWithLanguage:interactionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:maximumRecognitionDuration:inputOrigin:location:jitGrammar:]
  -[AFSpeechParameters overrides]
  -[AFSpeechParameters .cxx_destruct]
  -[AFSpeechParameters language]
  -[AFSpeechParameters farField]
  -[AFSpeechParameters mutatedCopyWithMutator:]
  -[AFSpeechParameters secureOfflineOnly]
  -[AFSpeechParameters detectUtterances]
  -[AFSpeechParameters isEqual:]
  -[AFSpeechParameters inputOrigin]
  -[AFSpeechParameters location]
  -[AFSpeechParameters censorSpeech]
  -[AFSpeechParameters profile]
  -[AFSpeechParameters task]
  -[AFSpeechParameters maximumRecognitionDuration]
  -[AFSpeechParameters originalAudioFileURL]
  -[AFSpeechParameters modelOverrideURL]
  -[AFSpeechParameters copyWithZone:]
  -[AFSpeechParameters narrowband]
  -[AFSpeechParameters shouldStoreAudioOnDevice]
  -[AFSpeechParameters loggingContext]
  -[AFSpeechParameters jitGrammar]
  -[AFSpeechParameters encodeWithCoder:]


_AFSpeechParametersMutation : NSObject <AFSpeechParametersMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechParametersMutation setProfile:]
  -[_AFSpeechParametersMutation setApplicationName:]
  -[_AFSpeechParametersMutation setLanguage:]
  -[_AFSpeechParametersMutation setInteractionIdentifier:]
  -[_AFSpeechParametersMutation .cxx_destruct]
  -[_AFSpeechParametersMutation setSecureOfflineOnly:]
  -[_AFSpeechParametersMutation setLocation:]
  -[_AFSpeechParametersMutation setCensorSpeech:]
  -[_AFSpeechParametersMutation setDetectUtterances:]
  -[_AFSpeechParametersMutation setMaximumRecognitionDuration:]
  -[_AFSpeechParametersMutation init]
  -[_AFSpeechParametersMutation setInputOrigin:]
  -[_AFSpeechParametersMutation setTask:]
  -[_AFSpeechParametersMutation setFarField:]
  -[_AFSpeechParametersMutation setOriginalAudioFileURL:]
  -[_AFSpeechParametersMutation setModelOverrideURL:]
  -[_AFSpeechParametersMutation generate]
  -[_AFSpeechParametersMutation setLoggingContext:]
  -[_AFSpeechParametersMutation setNarrowband:]
  -[_AFSpeechParametersMutation setShouldStoreAudioOnDevice:]
  -[_AFSpeechParametersMutation setJitGrammar:]
  -[_AFSpeechParametersMutation initWithBaseModel:]
  -[_AFSpeechParametersMutation setOverrides:]


AFBulletin : NSObject <NSSecureCoding, NSCopying>
 @property  NSArray *actionsStore
 @property  NSDictionary *actionsByIdentifier
 @property  unsigned long feed
 @property  NSString *displayName
 @property  BOOL availableOnLockScreen
 @property  BOOL supportsSpokenNotification
 @property  long long announcementType
 @property  BOOL read
 @property  BBBulletin *bbBulletin
 @property  NSString *bulletinID
 @property  NSString *recordID
 @property  NSDate *date
 @property  NSDate *endDate
 @property  BOOL allDay
 @property  NSString *message
 @property  NSString *modalAlertContentMessage
 @property  NSDate *recencyDate
 @property  NSString *sectionID
 @property  long long sectionSubtype
 @property  NSString *subtitle
 @property  NSString *timeZone
 @property  NSString *title
 @property  NSArray *intentIDs
 @property  NSString *publisherBulletinID
 @property  BOOL previewRestricted
 @property  NSString *threadID
 @property  NSString *internalID

  // class methods
  +[AFBulletin supportsSecureCoding]
  +[AFBulletin _createAssistantActionsForBulletin:]
  +[AFBulletin internalIDForBBBulletinID:]

  // instance methods
  -[AFBulletin feed]
  -[AFBulletin threadID]
  -[AFBulletin displayName]
  -[AFBulletin timeZone]
  -[AFBulletin setBulletin:]
  -[AFBulletin initWithCoder:]
  -[AFBulletin .cxx_destruct]
  -[AFBulletin bulletinID]
  -[AFBulletin recordID]
  -[AFBulletin actions]
  -[AFBulletin setRead:]
  -[AFBulletin _displayNameForBulletin:]
  -[AFBulletin subtitle]
  -[AFBulletin message]
  -[AFBulletin setDisplayName:]
  -[AFBulletin isAllDay]
  -[AFBulletin title]
  -[AFBulletin setAnnouncementType:]
  -[AFBulletin announcementType]
  -[AFBulletin actionForIdentifier:]
  -[AFBulletin intentIDs]
  -[AFBulletin isRead]
  -[AFBulletin copyWithZone:]
  -[AFBulletin setBulletin:forFeed:]
  -[AFBulletin sectionSubtype]
  -[AFBulletin recencyDate]
  -[AFBulletin publisherBulletinID]
  -[AFBulletin setNotification:fromSourceApp:]
  -[AFBulletin wasRemovedFromFeed:]
  -[AFBulletin availableOnLockScreen]
  -[AFBulletin bbBulletin]
  -[AFBulletin setAvailableOnLockScreen:]
  -[AFBulletin modalAlertContentMessage]
  -[AFBulletin previewRestricted]
  -[AFBulletin internalID]
  -[AFBulletin actionsStore]
  -[AFBulletin setActionsStore:]
  -[AFBulletin actionsByIdentifier]
  -[AFBulletin setActionsByIdentifier:]
  -[AFBulletin setSupportsSpokenNotification:]
  -[AFBulletin endDate]
  -[AFBulletin sectionID]
  -[AFBulletin encodeWithCoder:]
  -[AFBulletin supportsSpokenNotification]
  -[AFBulletin date]


AFDialogPhase : NSObject <NSSecureCoding>
 @property  long long type
 @property  BOOL temporary
 @property  BOOL expository
 @property  BOOL confirmationDialogPhase
 @property  BOOL reflectionDialogPhase
 @property  BOOL clarificationDialogPhase
 @property  BOOL confirmedDialogPhase
 @property  BOOL cancelledDialogPhase
 @property  BOOL userRequestDialogPhase
 @property  BOOL errorDialogPhase
 @property  BOOL completionDialogPhase
 @property  BOOL summaryDialogPhase
 @property  BOOL acknowledgementDialogPhase
 @property  NSString *aceDialogPhaseValue

  // class methods
  +[AFDialogPhase supportsSecureCoding]
  +[AFDialogPhase completionDialogPhase]
  +[AFDialogPhase reflectionDialogPhase]
  +[AFDialogPhase dialogPhaseForAceDialogPhase:]
  +[AFDialogPhase userRequestDialogPhase]
  +[AFDialogPhase statusDialogPhase]
  +[AFDialogPhase clarificationDialogPhase]
  +[AFDialogPhase summaryDialogPhase]
  +[AFDialogPhase acknowledgementDialogPhase]
  +[AFDialogPhase confirmationDialogPhase]
  +[AFDialogPhase errorDialogPhase]
  +[AFDialogPhase confirmedDialogPhase]
  +[AFDialogPhase cancelledDialogPhase]
  +[AFDialogPhase _dialogPhaseWithType:]

  // instance methods
  -[AFDialogPhase isTemporary]
  -[AFDialogPhase initWithCoder:]
  -[AFDialogPhase _type]
  -[AFDialogPhase isExpository]
  -[AFDialogPhase isConfirmedDialogPhase]
  -[AFDialogPhase isConfirmationDialogPhase]
  -[AFDialogPhase isClarificationDialogPhase]
  -[AFDialogPhase isUserRequestDialogPhase]
  -[AFDialogPhase isSummaryDialogPhase]
  -[AFDialogPhase isEqual:]
  -[AFDialogPhase isReflectionDialogPhase]
  -[AFDialogPhase isErrorDialogPhase]
  -[AFDialogPhase isAcknowledgementDialogPhase]
  -[AFDialogPhase _initWithType:]
  -[AFDialogPhase aceDialogPhaseValue]
  -[AFDialogPhase isEqualToDialogPhase:]
  -[AFDialogPhase replacesPreviousSnippetContents]
  -[AFDialogPhase isCancelledDialogPhase]
  -[AFDialogPhase isCompletionDialogPhase]
  -[AFDialogPhase isPossiblyPartOfMultiTurnRequest]
  -[AFDialogPhase encodeWithCoder:]


AFCallSiteInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *imagePath
 @property  NSString *symbolName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFCallSiteInfo supportsSecureCoding]
  +[AFCallSiteInfo newWithBuilder:]

  // instance methods
  -[AFCallSiteInfo buildDictionaryRepresentation]
  -[AFCallSiteInfo _descriptionWithIndent:]
  -[AFCallSiteInfo initWithCoder:]
  -[AFCallSiteInfo initWithDictionaryRepresentation:]
  -[AFCallSiteInfo imagePath]
  -[AFCallSiteInfo .cxx_destruct]
  -[AFCallSiteInfo symbolName]
  -[AFCallSiteInfo mutatedCopyWithMutator:]
  -[AFCallSiteInfo isEqual:]
  -[AFCallSiteInfo initWithImagePath:symbolName:]
  -[AFCallSiteInfo copyWithZone:]
  -[AFCallSiteInfo encodeWithCoder:]


_AFCallSiteInfoMutation : NSObject <AFCallSiteInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFCallSiteInfoMutation setSymbolName:]
  -[_AFCallSiteInfoMutation .cxx_destruct]
  -[_AFCallSiteInfoMutation init]
  -[_AFCallSiteInfoMutation setImagePath:]
  -[_AFCallSiteInfoMutation generate]
  -[_AFCallSiteInfoMutation initWithBaseModel:]


AFAnalyticsTurnBasedInstrumentationContext : NSObject <NSSecureCoding>
 @property  NSUUID *turnIdentifier

  // class methods
  +[AFAnalyticsTurnBasedInstrumentationContext supportsSecureCoding]
  +[AFAnalyticsTurnBasedInstrumentationContext newTurnBasedContextWithPreviousTurnID:]
  +[AFAnalyticsTurnBasedInstrumentationContext newTurnBasedContextWithPreviousTurnID:analytics:]

  // instance methods
  -[AFAnalyticsTurnBasedInstrumentationContext initWithCoder:]
  -[AFAnalyticsTurnBasedInstrumentationContext turnIdentifier]
  -[AFAnalyticsTurnBasedInstrumentationContext .cxx_destruct]
  -[AFAnalyticsTurnBasedInstrumentationContext init]
  -[AFAnalyticsTurnBasedInstrumentationContext emitInstrumentation:]
  -[AFAnalyticsTurnBasedInstrumentationContext initWithTurnIdentifier:]
  -[AFAnalyticsTurnBasedInstrumentationContext emitInstrumentation:machAbsoluteTime:]
  -[AFAnalyticsTurnBasedInstrumentationContext nextTurnBasedContext]
  -[AFAnalyticsTurnBasedInstrumentationContext nextTurnBasedContextForAnalytics:]
  -[AFAnalyticsTurnBasedInstrumentationContext encodeWithCoder:]


AFMachServiceSiriTaskDeliverer : NSObject <AFSiriTaskDelivering>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMachServiceSiriTaskDeliverer machServiceSiriTaskDelivererForAppWithBundleIdentifier:]

  // instance methods
  -[AFMachServiceSiriTaskDeliverer .cxx_destruct]
  -[AFMachServiceSiriTaskDeliverer initWithMachServiceName:]
  -[AFMachServiceSiriTaskDeliverer deliverSiriTask:completionHandler:]


AFInstrumentationObserverConnection : NSObject <AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFInstrumentationObserverConnection .cxx_destruct]
  -[AFInstrumentationObserverConnection invalidate]
  -[AFInstrumentationObserverConnection initWithObservation:filterByInstrumentationTypes:]
  -[AFInstrumentationObserverConnection initWithObservation:]
  -[AFInstrumentationObserverConnection waitUntilInvalidated]
  -[AFInstrumentationObserverConnection flushWithCompletion:]


AFShowNextEventRequest : AFSiriRequest
  // instance methods
  -[AFShowNextEventRequest createResponse]


SISchemaClientTurnContext : PBCodable <NSCopying>
 @property  BOOL hasTurnID
 @property  NSData *turnID

  // instance methods
  -[SISchemaClientTurnContext mergeFrom:]
  -[SISchemaClientTurnContext turnID]
  -[SISchemaClientTurnContext .cxx_destruct]
  -[SISchemaClientTurnContext dictionaryRepresentation]
  -[SISchemaClientTurnContext writeTo:]
  -[SISchemaClientTurnContext isEqual:]
  -[SISchemaClientTurnContext copyTo:]
  -[SISchemaClientTurnContext readFrom:]
  -[SISchemaClientTurnContext setTurnID:]
  -[SISchemaClientTurnContext hasTurnID]
  -[SISchemaClientTurnContext copyWithZone:]


AFDictationSamplingUtilities : AFSamplingUtilities
  // class methods
  +[AFDictationSamplingUtilities sampledCachesSubDirectoryPath]
  +[AFDictationSamplingUtilities component]
  +[AFDictationSamplingUtilities samplingDateAsString]
  +[AFDictationSamplingUtilities sampledSubDirectoryPath]
  +[AFDictationSamplingUtilities sampledPlistFileName]


AFObjectUpdatedSiriResponse : AFSiriResponse
  // class methods
  +[AFObjectUpdatedSiriResponse supportsSecureCoding]

  // instance methods
  -[AFObjectUpdatedSiriResponse initWithCoder:]
  -[AFObjectUpdatedSiriResponse .cxx_destruct]
  -[AFObjectUpdatedSiriResponse _initWithRequest:objectIdentifier:]
  -[AFObjectUpdatedSiriResponse encodeWithCoder:]
  -[AFObjectUpdatedSiriResponse _objectIdentifier]


AFEnablementConfiguration : NSObject
 @property  BOOL requiresVoiceSelection
 @property  NSDictionary *voiceCountForRecognitionLanguage
 @property  BOOL voiceSelectionAllowsRandomSelection
 @property  @? completionLoggingBlock

  // instance methods
  -[AFEnablementConfiguration .cxx_destruct]
  -[AFEnablementConfiguration initWithRequiresVoiceSelection:voiceSelectionAllowsChooseForMe:voiceCountForRecognitionLanguage:completionLoggingBlock:]
  -[AFEnablementConfiguration requiresVoiceSelectionForRecognitionLanguage:]
  -[AFEnablementConfiguration voiceSelectionAllowsRandomSelection]
  -[AFEnablementConfiguration completionLoggingBlock]
  -[AFEnablementConfiguration requiresVoiceSelection]
  -[AFEnablementConfiguration voiceCountForRecognitionLanguage]


AFEnablementFlowConfigurationProvider : NSObject
 @property  AFSettingsConnection *settingsConnection

  // class methods
  +[AFEnablementFlowConfigurationProvider _createConfigurationForParameters:]
  +[AFEnablementFlowConfigurationProvider _shouldAllowRandomVoiceSelectionForEnablementFlow:]
  +[AFEnablementFlowConfigurationProvider _emitEnablementFlowLoggingForConfigurationParameters:didEnable:]

  // instance methods
  -[AFEnablementFlowConfigurationProvider .cxx_destruct]
  -[AFEnablementFlowConfigurationProvider init]
  -[AFEnablementFlowConfigurationProvider _storedVoiceInfo]
  -[AFEnablementFlowConfigurationProvider settingsConnection]
  -[AFEnablementFlowConfigurationProvider _storedRecognitionLanguageCode]
  -[AFEnablementFlowConfigurationProvider _resolveIfNewUserWithParameters:forRecognitionLanguages:completion:]
  -[AFEnablementFlowConfigurationProvider _resolveVoiceSelection:forRecognitionLanguages:completion:]
  -[AFEnablementFlowConfigurationProvider configurationForEnablementFlow:recognitionLanguageCodes:completion:]
  -[AFEnablementFlowConfigurationProvider setSettingsConnection:]


AFKeyValueObservingDeliveryOptions : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned int qosClass
 @property  BOOL asynchronous

  // instance methods
  -[AFKeyValueObservingDeliveryOptions .cxx_destruct]
  -[AFKeyValueObservingDeliveryOptions qosClass]
  -[AFKeyValueObservingDeliveryOptions asynchronous]
  -[AFKeyValueObservingDeliveryOptions queue]
  -[AFKeyValueObservingDeliveryOptions initWithQueue:qosClass:asynchronous:]


AFKeyValueObserver : NSObject <AFKeyValueObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFKeyValueObserver .cxx_destruct]
  -[AFKeyValueObserver dealloc]
  -[AFKeyValueObserver invalidate]
  -[AFKeyValueObserver observeValueForKeyPath:ofObject:change:context:]
  -[AFKeyValueObserver _handleObservedChangeWithOldValue:andNewValue:]
  -[AFKeyValueObserver initWithObject:keyPath:handler:deliveryOptions:]


AFSpeechAcousticFeature : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *acousticFeatureValuePerFrame
 @property  double frameDuration

  // class methods
  +[AFSpeechAcousticFeature supportsSecureCoding]

  // instance methods
  -[AFSpeechAcousticFeature frameDuration]
  -[AFSpeechAcousticFeature initWithCoder:]
  -[AFSpeechAcousticFeature .cxx_destruct]
  -[AFSpeechAcousticFeature copyWithZone:]
  -[AFSpeechAcousticFeature encodeWithCoder:]
  -[AFSpeechAcousticFeature initWithAcousticFeatureValue:frameDuration:]
  -[AFSpeechAcousticFeature acousticFeatureValuePerFrame]


AFSpeechAudioAnalytics : NSObject <NSCopying, NSSecureCoding>
 @property  NSDictionary *speechRecognitionFeatures
 @property  NSDictionary *acousticFeatures
 @property  double snr

  // class methods
  +[AFSpeechAudioAnalytics supportsSecureCoding]

  // instance methods
  -[AFSpeechAudioAnalytics snr]
  -[AFSpeechAudioAnalytics initWithCoder:]
  -[AFSpeechAudioAnalytics .cxx_destruct]
  -[AFSpeechAudioAnalytics copyWithZone:]
  -[AFSpeechAudioAnalytics encodeWithCoder:]
  -[AFSpeechAudioAnalytics initWithSpeechRecognitionFeatures:acousticFeatures:]
  -[AFSpeechAudioAnalytics initWithSpeechRecognitionFeatures:acousticFeatures:snr:]
  -[AFSpeechAudioAnalytics speechRecognitionFeatures]
  -[AFSpeechAudioAnalytics acousticFeatures]


AFAggregator : NSObject
 @property  unsigned long connectionType
 @property  BOOL hasActiveRequest

  // class methods
  +[AFAggregator logEnabledState:]
  +[AFAggregator logLocalRecognitionAssetEvictedForLanguage:]
  +[AFAggregator logLocalSpeechStartedWithDuration:]
  +[AFAggregator logLocalFinalSpeechRecognitionWithDuration:]
  +[AFAggregator logLocalRecognitionLoadedForLanguage:duration:]
  +[AFAggregator logLocalRecognitionWonForLanguage:]
  +[AFAggregator logLocalRecognitionLostForLanguage:]
  +[AFAggregator logDESRecordingForLanguage:error:]
  +[AFAggregator logDESEvaluationForLanguage:error:]
  +[AFAggregator logCDMAssetEvictedForAssetType:language:]
  +[AFAggregator noteConnectedToCarPlayHeadunit]
  +[AFAggregator noteSuccessOfRequest:inCar:]
  +[AFAggregator _stringForGatekeeperType:]
  +[AFAggregator logTimeToBeepWithDuration:]
  +[AFAggregator logHomeButtonPressToActivationDuration:]
  +[AFAggregator logStarkGatekeeperDismissedManuallyForType:]
  +[AFAggregator logStarkGatekeeperAppearedForType:]
  +[AFAggregator logSiriSpeechRequestStarted]
  +[AFAggregator logSiriOtherRequestStarted]
  +[AFAggregator logSiriRequestCancelled]
  +[AFAggregator logSiriRequestFailedWithError:]
  +[AFAggregator logSiriRequestSucceeded]
  +[AFAggregator logSiriInvokedVia:]
  +[AFAggregator logDictationFollowedByContinueOccurredForLanguage:]
  +[AFAggregator logKeyboardInputFollowedByContinueOccurredForLanguage:]
  +[AFAggregator logDictationFollowedByKeyboardInputOccurredForLanguage:]
  +[AFAggregator logDictationFollowedByKeyboardDeleteOccurredForLanguage:]
  +[AFAggregator logDictationStarted]
  +[AFAggregator logDictationCancelled]
  +[AFAggregator logDictationFailedWithError:]
  +[AFAggregator logDictationSucceeded]
  +[AFAggregator logSiriPausedMedia]
  +[AFAggregator _fullAggDKeyWithPrefix:error:]
  +[AFAggregator logRequestCompletedWithDuration:]
  +[AFAggregator missedAppContextForRequest]
  +[AFAggregator missedAlertContextForRequest]
  +[AFAggregator logRequestCancelAfterSeconds:]
  +[AFAggregator logSiriQuickStopAction:]
  +[AFAggregator logSiriMediaVolumeAction:]
  +[AFAggregator logRequestLaunchedApp]
  +[AFAggregator logUILockCanceledVTActivation]
  +[AFAggregator logCreateAssistant]
  +[AFAggregator logLoadAssistant]
  +[AFAggregator logPingTimeout]

  // instance methods
  -[AFAggregator connectionType]
  -[AFAggregator connectionDidFail]
  -[AFAggregator connectionDidDrop]
  -[AFAggregator beginSessionRetryPreferringWWAN:]
  -[AFAggregator startWaitingForSpeechResponse]
  -[AFAggregator speechResponseReceived]
  -[AFAggregator speechResponseFailure]
  -[AFAggregator setHasActiveRequest:]
  -[AFAggregator setConnectionType:]
  -[AFAggregator hasActiveRequest]
  -[AFAggregator recordFailure:forConnectionType:]
  -[AFAggregator recordSuccessForConnectionType:isWarm:forTimeInterval:]
  -[AFAggregator recordSessionRetrySuccess]


AFShowTimerRequest : AFSiriRequest
  // class methods
  +[AFShowTimerRequest supportsSecureCoding]

  // instance methods
  -[AFShowTimerRequest createResponse]


AFSiriTether : NSObject
  // instance methods
  -[AFSiriTether _connection]
  -[AFSiriTether initWithInstanceContext:]
  -[AFSiriTether _attach:]
  -[AFSiriTether _connectionInvalid:]
  -[AFSiriTether _attachmentStatusUpdate:]
  -[AFSiriTether _listenForLaunchNotification]
  -[AFSiriTether waitForAttachment:]
  -[AFSiriTether setAttachmentStatusChangedHandler:]
  -[AFSiriTether .cxx_destruct]
  -[AFSiriTether _connectionInterrupted:]
  -[AFSiriTether init]
  -[AFSiriTether _logEvent:]
  -[AFSiriTether dealloc]
  -[AFSiriTether attach:]


AFAudioPlaybackRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSURL *itemURL
 @property  NSData *itemData
 @property  long long numberOfLoops
 @property  float volume
 @property  double fadeInDuration
 @property  double fadeOutDuration
 @property  NSDictionary *userInfo

  // class methods
  +[AFAudioPlaybackRequest supportsSecureCoding]
  +[AFAudioPlaybackRequest newWithBuilder:]

  // instance methods
  -[AFAudioPlaybackRequest _descriptionWithIndent:]
  -[AFAudioPlaybackRequest volume]
  -[AFAudioPlaybackRequest numberOfLoops]
  -[AFAudioPlaybackRequest initWithCoder:]
  -[AFAudioPlaybackRequest initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:]
  -[AFAudioPlaybackRequest .cxx_destruct]
  -[AFAudioPlaybackRequest mutatedCopyWithMutator:]
  -[AFAudioPlaybackRequest fadeInDuration]
  -[AFAudioPlaybackRequest isEqual:]
  -[AFAudioPlaybackRequest itemData]
  -[AFAudioPlaybackRequest fadeOutDuration]
  -[AFAudioPlaybackRequest itemURL]
  -[AFAudioPlaybackRequest userInfo]
  -[AFAudioPlaybackRequest copyWithZone:]
  -[AFAudioPlaybackRequest encodeWithCoder:]


_AFAudioPlaybackRequestMutation : NSObject <AFAudioPlaybackRequestMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAudioPlaybackRequestMutation setUserInfo:]
  -[_AFAudioPlaybackRequestMutation setItemData:]
  -[_AFAudioPlaybackRequestMutation setVolume:]
  -[_AFAudioPlaybackRequestMutation setNumberOfLoops:]
  -[_AFAudioPlaybackRequestMutation setItemURL:]
  -[_AFAudioPlaybackRequestMutation .cxx_destruct]
  -[_AFAudioPlaybackRequestMutation init]
  -[_AFAudioPlaybackRequestMutation setFadeOutDuration:]
  -[_AFAudioPlaybackRequestMutation generate]
  -[_AFAudioPlaybackRequestMutation setFadeInDuration:]
  -[_AFAudioPlaybackRequestMutation initWithBaseModel:]


AFBundleResource : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *extension

  // class methods
  +[AFBundleResource supportsSecureCoding]
  +[AFBundleResource newWithBuilder:]

  // instance methods
  -[AFBundleResource _descriptionWithIndent:]
  -[AFBundleResource name]
  -[AFBundleResource initWithCoder:]
  -[AFBundleResource .cxx_destruct]
  -[AFBundleResource initWithName:extension:]
  -[AFBundleResource mutatedCopyWithMutator:]
  -[AFBundleResource isEqual:]
  -[AFBundleResource extension]
  -[AFBundleResource copyWithZone:]
  -[AFBundleResource encodeWithCoder:]


_AFBundleResourceMutation : NSObject <AFBundleResourceMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFBundleResourceMutation setExtension:]
  -[_AFBundleResourceMutation .cxx_destruct]
  -[_AFBundleResourceMutation setName:]
  -[_AFBundleResourceMutation init]
  -[_AFBundleResourceMutation generate]
  -[_AFBundleResourceMutation initWithBaseModel:]


AFSiriResponse : NSObject <NSSecureCoding>
  // class methods
  +[AFSiriResponse supportsSecureCoding]

  // instance methods
  -[AFSiriResponse initWithCoder:]
  -[AFSiriResponse _initWithRequestIdentifier:]
  -[AFSiriResponse .cxx_destruct]
  -[AFSiriResponse _initWithRequest:]
  -[AFSiriResponse _isForRequest:]
  -[AFSiriResponse encodeWithCoder:]


AFCreateAlarmRequest : AFSiriRequest
 @property  STAlarm *alarm

  // class methods
  +[AFCreateAlarmRequest supportsSecureCoding]

  // instance methods
  -[AFCreateAlarmRequest initWithCoder:]
  -[AFCreateAlarmRequest alarm]
  -[AFCreateAlarmRequest .cxx_destruct]
  -[AFCreateAlarmRequest createResponse]
  -[AFCreateAlarmRequest setAlarm:]
  -[AFCreateAlarmRequest encodeWithCoder:]


AFSearchAlarmsRequest : AFSiriRequest
 @property  long long options
 @property  STAlarm *criteria

  // class methods
  +[AFSearchAlarmsRequest supportsSecureCoding]

  // instance methods
  -[AFSearchAlarmsRequest initWithCoder:]
  -[AFSearchAlarmsRequest setCriteria:]
  -[AFSearchAlarmsRequest options]
  -[AFSearchAlarmsRequest setOptions:]
  -[AFSearchAlarmsRequest .cxx_destruct]
  -[AFSearchAlarmsRequest criteria]
  -[AFSearchAlarmsRequest createResponse]
  -[AFSearchAlarmsRequest encodeWithCoder:]


AFInitiateCallRequest : AFSiriRequest
  // class methods
  +[AFInitiateCallRequest supportsSecureCoding]

  // instance methods
  -[AFInitiateCallRequest initWithCoder:]
  -[AFInitiateCallRequest _initWithCall:]
  -[AFInitiateCallRequest .cxx_destruct]
  -[AFInitiateCallRequest createResponse]
  -[AFInitiateCallRequest call]
  -[AFInitiateCallRequest encodeWithCoder:]


AFMyriadPreferences : NSObject
  // instance methods
  -[AFMyriadPreferences setDeviceClass:]
  -[AFMyriadPreferences setDeviceGroup:completion:]
  -[AFMyriadPreferences setIgnoreAdjustedBoost:]
  -[AFMyriadPreferences ignoreAdjustedBoost]
  -[AFMyriadPreferences setIgnorePlatformBias:]
  -[AFMyriadPreferences ignorePlatformBias]
  -[AFMyriadPreferences setConstantGoodnessScore:]
  -[AFMyriadPreferences setDeviceAdjust:]
  -[AFMyriadPreferences setDeviceDelay:]
  -[AFMyriadPreferences setTestDeviceDelay:]
  -[AFMyriadPreferences setDeviceTrumpDelay:]
  -[AFMyriadPreferences enableCoordination:]
  -[AFMyriadPreferences coordinationEnabledForAccessoryLogging]
  -[AFMyriadPreferences setVoiceTriggerEndtimeDelayThreshold:]
  -[AFMyriadPreferences setDeviceSlowDown:]
  -[AFMyriadPreferences setMaxNoOperationDelay:]
  -[AFMyriadPreferences maxNoOperationDelay]
  -[AFMyriadPreferences .cxx_destruct]
  -[AFMyriadPreferences deviceClass]
  -[AFMyriadPreferences myriadServerHasProvisioned]
  -[AFMyriadPreferences deviceTrumpDelay]
  -[AFMyriadPreferences deviceAdjust]
  -[AFMyriadPreferences deviceDelay]
  -[AFMyriadPreferences initWithDeviceInstanceContext:preferences:]
  -[AFMyriadPreferences coordinationEnabled]
  -[AFMyriadPreferences BLEActivityEnabled]
  -[AFMyriadPreferences deviceSlowDown]
  -[AFMyriadPreferences constantGoodnessScore]
  -[AFMyriadPreferences voiceTriggerEndtimeDelayThreshold]
  -[AFMyriadPreferences testDeviceDelay]
  -[AFMyriadPreferences deviceGroup]


AFAudioSessionCoordinationSnapshot : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSDateInterval *currentOrUpNextDateInterval
 @property  BOOL isAudioSessionActive
 @property  NSArray *localActiveAssertionContexts
 @property  NSArray *localPendingAssertionContexts
 @property  NSArray *remoteActiveAssertionContexts
 @property  NSArray *remotePendingAssertionContexts
 @property  AFAudioSessionCoordinationDeviceInfo *localDevice
 @property  NSArray *remoteQualifiedInRangeDevices
 @property  NSArray *remoteQualifiedOutOfRangeDevices
 @property  NSArray *remoteDisqualifiedDevices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFAudioSessionCoordinationSnapshot supportsSecureCoding]
  +[AFAudioSessionCoordinationSnapshot newWithBuilder:]

  // instance methods
  -[AFAudioSessionCoordinationSnapshot localDevice]
  -[AFAudioSessionCoordinationSnapshot buildDictionaryRepresentation]
  -[AFAudioSessionCoordinationSnapshot _descriptionWithIndent:]
  -[AFAudioSessionCoordinationSnapshot initWithCoder:]
  -[AFAudioSessionCoordinationSnapshot initWithDictionaryRepresentation:]
  -[AFAudioSessionCoordinationSnapshot isAudioSessionActive]
  -[AFAudioSessionCoordinationSnapshot currentOrUpNextDateInterval]
  -[AFAudioSessionCoordinationSnapshot localActiveAssertionContexts]
  -[AFAudioSessionCoordinationSnapshot localPendingAssertionContexts]
  -[AFAudioSessionCoordinationSnapshot remoteActiveAssertionContexts]
  -[AFAudioSessionCoordinationSnapshot remotePendingAssertionContexts]
  -[AFAudioSessionCoordinationSnapshot remoteQualifiedInRangeDevices]
  -[AFAudioSessionCoordinationSnapshot remoteQualifiedOutOfRangeDevices]
  -[AFAudioSessionCoordinationSnapshot remoteDisqualifiedDevices]
  -[AFAudioSessionCoordinationSnapshot initWithCurrentOrUpNextDateInterval:isAudioSessionActive:localActiveAssertionContexts:localPendingAssertionContexts:remoteActiveAssertionContexts:remotePendingAssertionContexts:localDevice:remoteQualifiedInRangeDevices:remoteQualifiedOutOfRangeDevices:remoteDisqualifiedDevices:]
  -[AFAudioSessionCoordinationSnapshot .cxx_destruct]
  -[AFAudioSessionCoordinationSnapshot mutatedCopyWithMutator:]
  -[AFAudioSessionCoordinationSnapshot isEqual:]
  -[AFAudioSessionCoordinationSnapshot copyWithZone:]
  -[AFAudioSessionCoordinationSnapshot encodeWithCoder:]


_AFAudioSessionCoordinationSnapshotMutation : NSObject <AFAudioSessionCoordinationSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFAudioSessionCoordinationSnapshotMutation setCurrentOrUpNextDateInterval:]
  -[_AFAudioSessionCoordinationSnapshotMutation setIsAudioSessionActive:]
  -[_AFAudioSessionCoordinationSnapshotMutation setLocalActiveAssertionContexts:]
  -[_AFAudioSessionCoordinationSnapshotMutation setLocalPendingAssertionContexts:]
  -[_AFAudioSessionCoordinationSnapshotMutation setRemoteActiveAssertionContexts:]
  -[_AFAudioSessionCoordinationSnapshotMutation setRemotePendingAssertionContexts:]
  -[_AFAudioSessionCoordinationSnapshotMutation setRemoteQualifiedInRangeDevices:]
  -[_AFAudioSessionCoordinationSnapshotMutation setRemoteQualifiedOutOfRangeDevices:]
  -[_AFAudioSessionCoordinationSnapshotMutation setRemoteDisqualifiedDevices:]
  -[_AFAudioSessionCoordinationSnapshotMutation .cxx_destruct]
  -[_AFAudioSessionCoordinationSnapshotMutation init]
  -[_AFAudioSessionCoordinationSnapshotMutation generate]
  -[_AFAudioSessionCoordinationSnapshotMutation setLocalDevice:]
  -[_AFAudioSessionCoordinationSnapshotMutation initWithBaseModel:]


AFDeviceContextHistoryConfiguration : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  BOOL keepsHistory
 @property  unsigned long historyBufferSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFDeviceContextHistoryConfiguration supportsSecureCoding]
  +[AFDeviceContextHistoryConfiguration newWithBuilder:]

  // instance methods
  -[AFDeviceContextHistoryConfiguration buildDictionaryRepresentation]
  -[AFDeviceContextHistoryConfiguration _descriptionWithIndent:]
  -[AFDeviceContextHistoryConfiguration initWithCoder:]
  -[AFDeviceContextHistoryConfiguration initWithDictionaryRepresentation:]
  -[AFDeviceContextHistoryConfiguration historyBufferSize]
  -[AFDeviceContextHistoryConfiguration keepsHistory]
  -[AFDeviceContextHistoryConfiguration initWithKeepsHistory:historyBufferSize:]
  -[AFDeviceContextHistoryConfiguration mutatedCopyWithMutator:]
  -[AFDeviceContextHistoryConfiguration isEqual:]
  -[AFDeviceContextHistoryConfiguration copyWithZone:]
  -[AFDeviceContextHistoryConfiguration encodeWithCoder:]


_AFDeviceContextHistoryConfigurationMutation : NSObject <AFDeviceContextHistoryConfigurationMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFDeviceContextHistoryConfigurationMutation setKeepsHistory:]
  -[_AFDeviceContextHistoryConfigurationMutation setHistoryBufferSize:]
  -[_AFDeviceContextHistoryConfigurationMutation .cxx_destruct]
  -[_AFDeviceContextHistoryConfigurationMutation init]
  -[_AFDeviceContextHistoryConfigurationMutation generate]
  -[_AFDeviceContextHistoryConfigurationMutation initWithBaseModel:]


AFConversationItem : NSObject <AFConversationStorable, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFConversationItem initWithDelegateItem:]
  -[AFConversationItem .cxx_destruct]
  -[AFConversationItem isTransient]
  -[AFConversationItem isVirgin]
  -[AFConversationItem presentationState]
  -[AFConversationItem identifier]
  -[AFConversationItem aceObject]
  -[AFConversationItem associatedDataStore]
  -[AFConversationItem initWithIdentifier:revisionIdentifier:type:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:]
  -[AFConversationItem dialogPhase]
  -[AFConversationItem aceCommandIdentifier]
  -[AFConversationItem isSupplemental]
  -[AFConversationItem isImmersiveExperience]
  -[AFConversationItem initWithType:aceObject:dialogPhase:presentationState:aceCommandIdentifier:virgin:transient:supplemental:immersiveExperience:associatedDataStore:]
  -[AFConversationItem type]
  -[AFConversationItem revisionIdentifier]
  -[AFConversationItem copyWithZone:]


AFApplicationContext : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *associatedBundleIdentifier
 @property  AFBulletin *bulletin
 @property  AceObject *aceContext
 @property  NSDictionary *contextDictionary
 @property  NSArray *aceContexts

  // class methods
  +[AFApplicationContext supportsSecureCoding]
  +[AFApplicationContext newWithBuilder:]

  // instance methods
  -[AFApplicationContext _descriptionWithIndent:]
  -[AFApplicationContext initWithCoder:]
  -[AFApplicationContext aceContext]
  -[AFApplicationContext aceContexts]
  -[AFApplicationContext initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:aceContexts:]
  -[AFApplicationContext .cxx_destruct]
  -[AFApplicationContext mutatedCopyWithMutator:]
  -[AFApplicationContext isEqual:]
  -[AFApplicationContext bulletin]
  -[AFApplicationContext associatedBundleIdentifier]
  -[AFApplicationContext contextDictionary]
  -[AFApplicationContext copyWithZone:]
  -[AFApplicationContext encodeWithCoder:]


_AFApplicationContextMutation : NSObject <AFApplicationContextMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFApplicationContextMutation setBulletin:]
  -[_AFApplicationContextMutation setAceContext:]
  -[_AFApplicationContextMutation setAssociatedBundleIdentifier:]
  -[_AFApplicationContextMutation setContextDictionary:]
  -[_AFApplicationContextMutation setAceContexts:]
  -[_AFApplicationContextMutation .cxx_destruct]
  -[_AFApplicationContextMutation init]
  -[_AFApplicationContextMutation generate]
  -[_AFApplicationContextMutation initWithBaseModel:]


AFSharedConfidenceScore : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *sharedUserId
 @property  unsigned long confidenceScore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSharedConfidenceScore supportsSecureCoding]
  +[AFSharedConfidenceScore newWithBuilder:]

  // instance methods
  -[AFSharedConfidenceScore buildDictionaryRepresentation]
  -[AFSharedConfidenceScore _descriptionWithIndent:]
  -[AFSharedConfidenceScore initWithCoder:]
  -[AFSharedConfidenceScore initWithDictionaryRepresentation:]
  -[AFSharedConfidenceScore confidenceScore]
  -[AFSharedConfidenceScore sharedUserId]
  -[AFSharedConfidenceScore initWithSharedUserId:confidenceScore:]
  -[AFSharedConfidenceScore .cxx_destruct]
  -[AFSharedConfidenceScore mutatedCopyWithMutator:]
  -[AFSharedConfidenceScore isEqual:]
  -[AFSharedConfidenceScore copyWithZone:]
  -[AFSharedConfidenceScore encodeWithCoder:]


_AFSharedConfidenceScoreMutation : NSObject <AFSharedConfidenceScoreMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSharedConfidenceScoreMutation setConfidenceScore:]
  -[_AFSharedConfidenceScoreMutation setSharedUserId:]
  -[_AFSharedConfidenceScoreMutation .cxx_destruct]
  -[_AFSharedConfidenceScoreMutation init]
  -[_AFSharedConfidenceScoreMutation generate]
  -[_AFSharedConfidenceScoreMutation initWithBaseModel:]


AFAudioPowerUpdater : NSObject
 @property  <AFAudioPowerProviding> *provider
 @property  long long frequency

  // instance methods
  -[AFAudioPowerUpdater _timerFired]
  -[AFAudioPowerUpdater _createNewXPCWrapperWithCompletion:]
  -[AFAudioPowerUpdater _unsafePeakPower]
  -[AFAudioPowerUpdater .cxx_destruct]
  -[AFAudioPowerUpdater _endUpdate]
  -[AFAudioPowerUpdater createNewXPCWrapperWithCompletion:]
  -[AFAudioPowerUpdater endUpdate]
  -[AFAudioPowerUpdater _destroySharedMemory]
  -[AFAudioPowerUpdater _getPowerWithCompletion:]
  -[AFAudioPowerUpdater _createSharedMemoryXPCObject]
  -[AFAudioPowerUpdater getPowerWithCompletion:]
  -[AFAudioPowerUpdater _createNewXPCWrapper]
  -[AFAudioPowerUpdater frequency]
  -[AFAudioPowerUpdater _invalidate]
  -[AFAudioPowerUpdater _unsafeAveragePower]
  -[AFAudioPowerUpdater _updatePowerWithAveragePower:andPeakPower:]
  -[AFAudioPowerUpdater _writeSharedMemoryWithAveragePower:peakPower:]
  -[AFAudioPowerUpdater _createSharedMemory]
  -[AFAudioPowerUpdater provider]
  -[AFAudioPowerUpdater dealloc]
  -[AFAudioPowerUpdater invalidate]
  -[AFAudioPowerUpdater beginUpdate]
  -[AFAudioPowerUpdater initWithProvider:queue:frequency:delegate:]
  -[AFAudioPowerUpdater _beginUpdate]


AFNotifyStatePublisher : NSObject <AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFNotifyStatePublisher _setState:withToken:]
  -[AFNotifyStatePublisher _getState:withToken:]
  -[AFNotifyStatePublisher publishStateWithBlock:]
  -[AFNotifyStatePublisher .cxx_destruct]
  -[AFNotifyStatePublisher initWithName:queue:]
  -[AFNotifyStatePublisher _register]
  -[AFNotifyStatePublisher publishState:]
  -[AFNotifyStatePublisher dealloc]
  -[AFNotifyStatePublisher invalidate]
  -[AFNotifyStatePublisher _unregister]


STPersonContactHandle : NSObject <NSSecureCoding>
 @property  NSString *handle
 @property  NSString *label
 @property  unsigned long type

  // class methods
  +[STPersonContactHandle supportsSecureCoding]

  // instance methods
  -[STPersonContactHandle label]
  -[STPersonContactHandle setHandle:]
  -[STPersonContactHandle initWithCoder:]
  -[STPersonContactHandle setType:]
  -[STPersonContactHandle isEqualToPersonContactHandle:]
  -[STPersonContactHandle .cxx_destruct]
  -[STPersonContactHandle isEqual:]
  -[STPersonContactHandle handle]
  -[STPersonContactHandle type]
  -[STPersonContactHandle setLabel:]
  -[STPersonContactHandle encodeWithCoder:]


STPerson : STSiriModelObject <AFTranscriptionType>
 @property  NSSet *contactHandles
 @property  NSString *fullName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[STPerson supportsSecureCoding]

  // instance methods
  -[STPerson fullName]
  -[STPerson contactHandles]
  -[STPerson initWithCoder:]
  -[STPerson .cxx_destruct]
  -[STPerson setFullName:]
  -[STPerson setContactHandles:]
  -[STPerson encodeWithCoder:]


AFBluetoothWirelessSplitterSessionStateObserver : NSObject <AFNotifyObserverDelegate, AFInvalidating>
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFBluetoothWirelessSplitterSessionStateObserver _setState:]
  -[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didChangeStateFrom:to:]
  -[AFBluetoothWirelessSplitterSessionStateObserver .cxx_destruct]
  -[AFBluetoothWirelessSplitterSessionStateObserver state]
  -[AFBluetoothWirelessSplitterSessionStateObserver getStateWithCompletion:]
  -[AFBluetoothWirelessSplitterSessionStateObserver _invalidate]
  -[AFBluetoothWirelessSplitterSessionStateObserver initWithQueue:delegate:]
  -[AFBluetoothWirelessSplitterSessionStateObserver notifyObserver:didReceiveNotificationWithToken:]
  -[AFBluetoothWirelessSplitterSessionStateObserver dealloc]
  -[AFBluetoothWirelessSplitterSessionStateObserver invalidate]


AFDeviceContextConnection : NSObject <AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFDeviceContextConnection _xpcConnection]
  -[AFDeviceContextConnection endUpdateLocalDeviceContext]
  -[AFDeviceContextConnection donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:]
  -[AFDeviceContextConnection .cxx_destruct]
  -[AFDeviceContextConnection _fetchLocalDeviceContextWithCompletion:]
  -[AFDeviceContextConnection _beginUpdateLocalDeviceContext]
  -[AFDeviceContextConnection _endUpdateLocalDeviceContext]
  -[AFDeviceContextConnection _handleXPCConnectionInvalidation]
  -[AFDeviceContextConnection _remoteServiceWithErrorHandler:]
  -[AFDeviceContextConnection _handleXPCConnectionInterruption]
  -[AFDeviceContextConnection _updateLocalDeviceContext:]
  -[AFDeviceContextConnection beginUpdateLocalDeviceContext]
  -[AFDeviceContextConnection initWithQueue:instanceContext:delegate:]
  -[AFDeviceContextConnection getLocalDeviceContextWithCompletion:]
  -[AFDeviceContextConnection _invalidate]
  -[AFDeviceContextConnection dealloc]
  -[AFDeviceContextConnection invalidate]
  -[AFDeviceContextConnection _clearXPCConnection]


_AFDeviceContextServiceDelegateProxy : NSObject <AFDeviceContextServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFDeviceContextServiceDelegateProxy updateLocalDeviceContext:]
  -[_AFDeviceContextServiceDelegateProxy .cxx_destruct]
  -[_AFDeviceContextServiceDelegateProxy initWithConnection:]


AFAppContextAggregator : NSObject
  // instance methods
  -[AFAppContextAggregator aggregateContextWithRawOutputForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]
  -[AFAppContextAggregator aggregateContextForAppWithBundleIdentifier:contextProvider:deliveryHandler:completionHandler:]
  -[AFAppContextAggregator aggregateContextForAppWithBundleIdentifier:contextProvider:completionHandler:]


AFClientPluginManager : AFPluginManager
  // class methods
  +[AFClientPluginManager clientPluginManagerWithFactoryInitializationBlock:]

  // instance methods
  -[AFClientPluginManager speakableNamespaceProviderForAceObject:]


AFAnalyticsObserverConnection : NSObject <AFAnalyticsObserver, AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFAnalyticsObserverConnection _connection]
  -[AFAnalyticsObserverConnection .cxx_destruct]
  -[AFAnalyticsObserverConnection _cleanUpConnection]
  -[AFAnalyticsObserverConnection didObserveEvents:completion:]
  -[AFAnalyticsObserverConnection dealloc]
  -[AFAnalyticsObserverConnection invalidate]
  -[AFAnalyticsObserverConnection _connectionInvalidated]
  -[AFAnalyticsObserverConnection initWithObservation:]
  -[AFAnalyticsObserverConnection waitUntilInvalidated]
  -[AFAnalyticsObserverConnection flushWithCompletion:]
  -[AFAnalyticsObserverConnection _connectionInterrupted]


AFSystemStateSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long sleepState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSystemStateSnapshot supportsSecureCoding]
  +[AFSystemStateSnapshot newWithBuilder:]

  // instance methods
  -[AFSystemStateSnapshot buildDictionaryRepresentation]
  -[AFSystemStateSnapshot ad_shortDescription]
  -[AFSystemStateSnapshot serializedBackingStore]
  -[AFSystemStateSnapshot _descriptionWithIndent:]
  -[AFSystemStateSnapshot initWithCoder:]
  -[AFSystemStateSnapshot initWithDictionaryRepresentation:]
  -[AFSystemStateSnapshot initWithSleepState:]
  -[AFSystemStateSnapshot initWithSerializedBackingStore:]
  -[AFSystemStateSnapshot mutatedCopyWithMutator:]
  -[AFSystemStateSnapshot isEqual:]
  -[AFSystemStateSnapshot sleepState]
  -[AFSystemStateSnapshot copyWithZone:]
  -[AFSystemStateSnapshot encodeWithCoder:]


_AFSystemStateSnapshotMutation : NSObject <AFSystemStateSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSystemStateSnapshotMutation .cxx_destruct]
  -[_AFSystemStateSnapshotMutation setSleepState:]
  -[_AFSystemStateSnapshotMutation init]
  -[_AFSystemStateSnapshotMutation generate]
  -[_AFSystemStateSnapshotMutation initWithBaseModel:]


AFApplicationContextSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *applicationContexts

  // class methods
  +[AFApplicationContextSnapshot supportsSecureCoding]
  +[AFApplicationContextSnapshot newWithBuilder:]

  // instance methods
  -[AFApplicationContextSnapshot serializedBackingStore]
  -[AFApplicationContextSnapshot _descriptionWithIndent:]
  -[AFApplicationContextSnapshot initWithCoder:]
  -[AFApplicationContextSnapshot .cxx_destruct]
  -[AFApplicationContextSnapshot initWithSerializedBackingStore:]
  -[AFApplicationContextSnapshot mutatedCopyWithMutator:]
  -[AFApplicationContextSnapshot isEqual:]
  -[AFApplicationContextSnapshot copyWithZone:]
  -[AFApplicationContextSnapshot applicationContexts]
  -[AFApplicationContextSnapshot initWithApplicationContexts:]
  -[AFApplicationContextSnapshot encodeWithCoder:]


_AFApplicationContextSnapshotMutation : NSObject <AFApplicationContextSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFApplicationContextSnapshotMutation .cxx_destruct]
  -[_AFApplicationContextSnapshotMutation setApplicationContexts:]
  -[_AFApplicationContextSnapshotMutation init]
  -[_AFApplicationContextSnapshotMutation generate]
  -[_AFApplicationContextSnapshotMutation initWithBaseModel:]


AFOutputVoiceColorDescriptor : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *hexColor
 @property  NSString *colorName
 @property  float alpha
 @property  NSString *localizedOutputVoiceColor
 @property  NSString *localizedOutputVoice

  // class methods
  +[AFOutputVoiceColorDescriptor supportsSecureCoding]
  +[AFOutputVoiceColorDescriptor newWithBuilder:]

  // instance methods
  -[AFOutputVoiceColorDescriptor _descriptionWithIndent:]
  -[AFOutputVoiceColorDescriptor initWithCoder:]
  -[AFOutputVoiceColorDescriptor colorName]
  -[AFOutputVoiceColorDescriptor .cxx_destruct]
  -[AFOutputVoiceColorDescriptor mutatedCopyWithMutator:]
  -[AFOutputVoiceColorDescriptor isEqual:]
  -[AFOutputVoiceColorDescriptor localizedOutputVoice]
  -[AFOutputVoiceColorDescriptor alpha]
  -[AFOutputVoiceColorDescriptor hexColor]
  -[AFOutputVoiceColorDescriptor copyWithZone:]
  -[AFOutputVoiceColorDescriptor initWithHexColor:colorName:alpha:localizedOutputVoiceColor:localizedOutputVoice:]
  -[AFOutputVoiceColorDescriptor encodeWithCoder:]
  -[AFOutputVoiceColorDescriptor localizedOutputVoiceColor]


_AFOutputVoiceColorDescriptorMutation : NSObject <AFOutputVoiceColorDescriptorMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFOutputVoiceColorDescriptorMutation .cxx_destruct]
  -[_AFOutputVoiceColorDescriptorMutation setHexColor:]
  -[_AFOutputVoiceColorDescriptorMutation setLocalizedOutputVoiceColor:]
  -[_AFOutputVoiceColorDescriptorMutation setLocalizedOutputVoice:]
  -[_AFOutputVoiceColorDescriptorMutation init]
  -[_AFOutputVoiceColorDescriptorMutation setAlpha:]
  -[_AFOutputVoiceColorDescriptorMutation setColorName:]
  -[_AFOutputVoiceColorDescriptorMutation generate]
  -[_AFOutputVoiceColorDescriptorMutation initWithBaseModel:]


AFContextRequest : AFSiriRequest
  // instance methods
  -[AFContextRequest createResponseWithContext:]
  -[AFContextRequest _makeAppFrontmost]


AFSiriClientStateManager : NSObject
  // class methods
  +[AFSiriClientStateManager sharedManager]

  // instance methods
  -[AFSiriClientStateManager initWithInstanceContext:]
  -[AFSiriClientStateManager beginTransaction]
  -[AFSiriClientStateManager beginRequestWithUUID:forClient:]
  -[AFSiriClientStateManager endSessionForClient:]
  -[AFSiriClientStateManager endRequestWithUUID:forClient:]
  -[AFSiriClientStateManager invalidateClient:]
  -[AFSiriClientStateManager .cxx_destruct]
  -[AFSiriClientStateManager beginSpeakingForClient:]
  -[AFSiriClientStateManager endSpeakingForClient:]
  -[AFSiriClientStateManager beginSessionForClient:]
  -[AFSiriClientStateManager _removeStateForClient:]
  -[AFSiriClientStateManager _beginSessionForClient:]
  -[AFSiriClientStateManager _endSessionForClient:]
  -[AFSiriClientStateManager _beginRequestWithUUID:forClient:]
  -[AFSiriClientStateManager _aggregatedState]
  -[AFSiriClientStateManager _endRequestWithUUID:forClient:]
  -[AFSiriClientStateManager _beginListeningForClient:]
  -[AFSiriClientStateManager _endListeningForClient:]
  -[AFSiriClientStateManager _beginSpeakingForClient:]
  -[AFSiriClientStateManager _endSpeakingForClient:]
  -[AFSiriClientStateManager _aggregateStatesAndPublishIfNeeded]
  -[AFSiriClientStateManager _beginPresentationTransition]
  -[AFSiriClientStateManager _endPresentationTransitionForReason:]
  -[AFSiriClientStateManager _stateForClient:createIfAbsent:]
  -[AFSiriClientStateManager beginPresentationTransition]
  -[AFSiriClientStateManager endPresentationTransition]
  -[AFSiriClientStateManager getCurrentStateWithCompletion:]
  -[AFSiriClientStateManager endTransaction]
  -[AFSiriClientStateManager beginListeningForClient:]
  -[AFSiriClientStateManager endListeningForClient:]


_AFSiriClientState : NSObject
 @property  BOOL hasActiveSession
 @property  BOOL isListening
 @property  BOOL isSpeaking
 @property  unsigned long notifyState

  // instance methods
  -[_AFSiriClientState .cxx_destruct]
  -[_AFSiriClientState setHasActiveSession:]
  -[_AFSiriClientState addRequestUUID:]
  -[_AFSiriClientState removeRequestUUID:]
  -[_AFSiriClientState setIsSpeaking:]
  -[_AFSiriClientState hasActiveSession]
  -[_AFSiriClientState setIsListening:]
  -[_AFSiriClientState init]
  -[_AFSiriClientState notifyState]
  -[_AFSiriClientState isListening]
  -[_AFSiriClientState isSpeaking]


AFSiriAcousticIDRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriAcousticIDRequest performRequestWithCompletion:]


AFSiriMusicSubscriptionLeaseTakenRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriMusicSubscriptionLeaseTakenRequest performRequestWithCompletion:]


AFSiriMusicSmartPlayRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriMusicSmartPlayRequest performRequestWithCompletion:]


AFSiriAceRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriAceRequest .cxx_destruct]
  -[AFSiriAceRequest initWithStartRequest:requestOptions:]
  -[AFSiriAceRequest initWithStartRequest:]
  -[AFSiriAceRequest initWithStartLocalRequest:requestOptions:]
  -[AFSiriAceRequest performRequestWithCompletion:]


AFSiriHomeAutomationBackgroundRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriHomeAutomationBackgroundRequest .cxx_destruct]
  -[AFSiriHomeAutomationBackgroundRequest initWithRequestInfo:instanceContext:]
  -[AFSiriHomeAutomationBackgroundRequest performRequestWithCompletion:]
  -[AFSiriHomeAutomationBackgroundRequest initWithRequestInfo:]


AFSiriActivationRequest : NSObject <AFSiriExternalRequest>
  // instance methods
  -[AFSiriActivationRequest .cxx_destruct]
  -[AFSiriActivationRequest initWithContext:]
  -[AFSiriActivationRequest performRequestWithResultHandler:]
  -[AFSiriActivationRequest performRequestWithCompletion:]


AFHomeAnnouncementObserver : NSObject <ANLocalPlaybackSessionDelegate, AFNotifyObserverDelegate, AFInvalidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AFHomeAnnouncementObserver _tearDown]
  -[AFHomeAnnouncementObserver connectionInterrupted]
  -[AFHomeAnnouncementObserver removeListener:]
  -[AFHomeAnnouncementObserver _enumerateListenersUsingBlock:]
  -[AFHomeAnnouncementObserver getSnapshotWithCompletion:]
  -[AFHomeAnnouncementObserver notifyObserver:didChangeStateFrom:to:]
  -[AFHomeAnnouncementObserver initWithInstanceContext:]
  -[AFHomeAnnouncementObserver _setUp]
  -[AFHomeAnnouncementObserver .cxx_destruct]
  -[AFHomeAnnouncementObserver _updateLastPlayedAnnouncement:]
  -[AFHomeAnnouncementObserver init]
  -[AFHomeAnnouncementObserver _updateSnapshot:]
  -[AFHomeAnnouncementObserver getStateWithCompletion:]
  -[AFHomeAnnouncementObserver _invalidateLocalPlaybackSession]
  -[AFHomeAnnouncementObserver addListener:]
  -[AFHomeAnnouncementObserver _handleNotifyStateChangeFrom:to:]
  -[AFHomeAnnouncementObserver _beginGrouping]
  -[AFHomeAnnouncementObserver notifyObserver:didReceiveNotificationWithToken:]
  -[AFHomeAnnouncementObserver dealloc]
  -[AFHomeAnnouncementObserver invalidate]
  -[AFHomeAnnouncementObserver _fetchStateAndLastPlayedAnnouncementForReason:completion:]
  -[AFHomeAnnouncementObserver _localPlaybackSession:]
  -[AFHomeAnnouncementObserver _endGrouping]
  -[AFHomeAnnouncementObserver _updateState:]
  -[AFHomeAnnouncementObserver connectionInvalidated]


AFSpeechSynthesisRecord : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *utterance
 @property  unsigned long beginTimestamp
 @property  unsigned long endTimestamp

  // class methods
  +[AFSpeechSynthesisRecord supportsSecureCoding]
  +[AFSpeechSynthesisRecord newWithBuilder:]

  // instance methods
  -[AFSpeechSynthesisRecord _descriptionWithIndent:]
  -[AFSpeechSynthesisRecord initWithCoder:]
  -[AFSpeechSynthesisRecord .cxx_destruct]
  -[AFSpeechSynthesisRecord beginTimestamp]
  -[AFSpeechSynthesisRecord initWithUtterance:beginTimestamp:endTimestamp:]
  -[AFSpeechSynthesisRecord mutatedCopyWithMutator:]
  -[AFSpeechSynthesisRecord isEqual:]
  -[AFSpeechSynthesisRecord utterance]
  -[AFSpeechSynthesisRecord copyWithZone:]
  -[AFSpeechSynthesisRecord endTimestamp]
  -[AFSpeechSynthesisRecord encodeWithCoder:]


_AFSpeechSynthesisRecordMutation : NSObject <AFSpeechSynthesisRecordMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSpeechSynthesisRecordMutation .cxx_destruct]
  -[_AFSpeechSynthesisRecordMutation setUtterance:]
  -[_AFSpeechSynthesisRecordMutation setBeginTimestamp:]
  -[_AFSpeechSynthesisRecordMutation setEndTimestamp:]
  -[_AFSpeechSynthesisRecordMutation init]
  -[_AFSpeechSynthesisRecordMutation generate]
  -[_AFSpeechSynthesisRecordMutation initWithBaseModel:]


AFHomeInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSUUID *homeIdentifier
 @property  BOOL activityNotificationsEnabledForPersonalRequests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFHomeInfo supportsSecureCoding]
  +[AFHomeInfo newWithBuilder:]

  // instance methods
  -[AFHomeInfo buildDictionaryRepresentation]
  -[AFHomeInfo _descriptionWithIndent:]
  -[AFHomeInfo initWithCoder:]
  -[AFHomeInfo homeIdentifier]
  -[AFHomeInfo initWithDictionaryRepresentation:]
  -[AFHomeInfo .cxx_destruct]
  -[AFHomeInfo activityNotificationsEnabledForPersonalRequests]
  -[AFHomeInfo initWithHomeIdentifier:activityNotificationsEnabledForPersonalRequests:]
  -[AFHomeInfo mutatedCopyWithMutator:]
  -[AFHomeInfo isEqual:]
  -[AFHomeInfo copyWithZone:]
  -[AFHomeInfo encodeWithCoder:]


_AFHomeInfoMutation : NSObject <AFHomeInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFHomeInfoMutation .cxx_destruct]
  -[_AFHomeInfoMutation setHomeIdentifier:]
  -[_AFHomeInfoMutation init]
  -[_AFHomeInfoMutation generate]
  -[_AFHomeInfoMutation initWithBaseModel:]
  -[_AFHomeInfoMutation setActivityNotificationsEnabledForPersonalRequests:]


AFInterstitialConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  long long style
 @property  NSString *languageCode
 @property  long long gender
 @property  NSString *recordRoute
 @property  BOOL isVoiceTrigger
 @property  BOOL isDucking
 @property  BOOL isTwoShot
 @property  unsigned long speechEndHostTime

  // class methods
  +[AFInterstitialConfiguration supportsSecureCoding]
  +[AFInterstitialConfiguration newWithBuilder:]

  // instance methods
  -[AFInterstitialConfiguration gender]
  -[AFInterstitialConfiguration _descriptionWithIndent:]
  -[AFInterstitialConfiguration initWithCoder:]
  -[AFInterstitialConfiguration isDucking]
  -[AFInterstitialConfiguration .cxx_destruct]
  -[AFInterstitialConfiguration recordRoute]
  -[AFInterstitialConfiguration isTwoShot]
  -[AFInterstitialConfiguration mutatedCopyWithMutator:]
  -[AFInterstitialConfiguration languageCode]
  -[AFInterstitialConfiguration isEqual:]
  -[AFInterstitialConfiguration initWithStyle:languageCode:gender:recordRoute:isVoiceTrigger:isDucking:isTwoShot:speechEndHostTime:]
  -[AFInterstitialConfiguration isVoiceTrigger]
  -[AFInterstitialConfiguration speechEndHostTime]
  -[AFInterstitialConfiguration copyWithZone:]
  -[AFInterstitialConfiguration style]
  -[AFInterstitialConfiguration encodeWithCoder:]


_AFInterstitialConfigurationMutation : NSObject <AFInterstitialConfigurationMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFInterstitialConfigurationMutation setLanguageCode:]
  -[_AFInterstitialConfigurationMutation .cxx_destruct]
  -[_AFInterstitialConfigurationMutation setStyle:]
  -[_AFInterstitialConfigurationMutation setRecordRoute:]
  -[_AFInterstitialConfigurationMutation setIsVoiceTrigger:]
  -[_AFInterstitialConfigurationMutation setIsDucking:]
  -[_AFInterstitialConfigurationMutation setIsTwoShot:]
  -[_AFInterstitialConfigurationMutation setSpeechEndHostTime:]
  -[_AFInterstitialConfigurationMutation setGender:]
  -[_AFInterstitialConfigurationMutation init]
  -[_AFInterstitialConfigurationMutation generate]
  -[_AFInterstitialConfigurationMutation initWithBaseModel:]


AFMultiUserConnection : NSObject
  // instance methods
  -[AFMultiUserConnection _clearConnection]
  -[AFMultiUserConnection _connection]
  -[AFMultiUserConnection getConformingSharedUserIdForHomeUserId:completion:]
  -[AFMultiUserConnection .cxx_destruct]
  -[AFMultiUserConnection getSharedUserIdForHomeUserId:completion:]
  -[AFMultiUserConnection getSharedUserProfileLimitWithCompletion:]
  -[AFMultiUserConnection getConformingSharedUserIds:]
  -[AFMultiUserConnection getHomeUserIdOfRecognizedUserWithCompletion:]
  -[AFMultiUserConnection getFirstNameForSharedUserId:completion:]
  -[AFMultiUserConnection homeUserIdToNames:]
  -[AFMultiUserConnection init]
  -[AFMultiUserConnection getHomeUserIdForSharedUserId:completion:]
  -[AFMultiUserConnection getMultiUserSettingsForSharedUserID:completion:]
  -[AFMultiUserConnection _multiUserServiceWithErrorHandler:]
  -[AFMultiUserConnection getPreferredMediaUserHomeUserIDWithCompletion:]
  -[AFMultiUserConnection initWithConnectionFactory:]


STSiriContext : NSObject <NSSecureCoding>
  // class methods
  +[STSiriContext supportsSecureCoding]

  // instance methods
  -[STSiriContext initWithCoder:]
  -[STSiriContext _aceValue]
  -[STSiriContext .cxx_destruct]
  -[STSiriContext initWithModelObjects:]
  -[STSiriContext modelObjects]
  -[STSiriContext encodeWithCoder:]


AFAnalyticsEvent : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long deliveryStream
 @property  long long type
 @property  unsigned long timestamp
 @property  long long contextDataType
 @property  NSData *contextData
 @property  NSString *assistantId
 @property  NSString *speechId

  // class methods
  +[AFAnalyticsEvent supportsSecureCoding]
  +[AFAnalyticsEvent eventsReferenceTime]

  // instance methods
  -[AFAnalyticsEvent speechId]
  -[AFAnalyticsEvent typeName]
  -[AFAnalyticsEvent initWithCoder:]
  -[AFAnalyticsEvent setSpeechId:]
  -[AFAnalyticsEvent contextData]
  -[AFAnalyticsEvent .cxx_destruct]
  -[AFAnalyticsEvent contextDataType]
  -[AFAnalyticsEvent assistantId]
  -[AFAnalyticsEvent contextDataAsDictionary]
  -[AFAnalyticsEvent init]
  -[AFAnalyticsEvent isEqual:]
  -[AFAnalyticsEvent legacyTypeName]
  -[AFAnalyticsEvent type]
  -[AFAnalyticsEvent initWithDeliveryStream:type:timestamp:contextDataType:contextData:]
  -[AFAnalyticsEvent timestamp]
  -[AFAnalyticsEvent copyWithZone:]
  -[AFAnalyticsEvent contextDataAsProtobuf]
  -[AFAnalyticsEvent deliveryStream]
  -[AFAnalyticsEvent encodeWithCoder:]
  -[AFAnalyticsEvent dateStamp]
  -[AFAnalyticsEvent setAssistantId:]


AFSetSettingsResponse : AFSiriResponse
  // class methods
  +[AFSetSettingsResponse supportsSecureCoding]

  // instance methods
  -[AFSetSettingsResponse initWithCoder:]
  -[AFSetSettingsResponse .cxx_destruct]
  -[AFSetSettingsResponse settingChanges]
  -[AFSetSettingsResponse _initWithRequest:settingChanges:]
  -[AFSetSettingsResponse encodeWithCoder:]


AFSiriActivationResult : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  long long actionType
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSiriActivationResult supportsSecureCoding]
  +[AFSiriActivationResult newWithBuilder:]

  // instance methods
  -[AFSiriActivationResult buildDictionaryRepresentation]
  -[AFSiriActivationResult _descriptionWithIndent:]
  -[AFSiriActivationResult initWithCoder:]
  -[AFSiriActivationResult initWithDictionaryRepresentation:]
  -[AFSiriActivationResult .cxx_destruct]
  -[AFSiriActivationResult initWithActionType:error:]
  -[AFSiriActivationResult mutatedCopyWithMutator:]
  -[AFSiriActivationResult isEqual:]
  -[AFSiriActivationResult actionType]
  -[AFSiriActivationResult copyWithZone:]
  -[AFSiriActivationResult encodeWithCoder:]
  -[AFSiriActivationResult error]


_AFSiriActivationResultMutation : NSObject <AFSiriActivationResultMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSiriActivationResultMutation setActionType:]
  -[_AFSiriActivationResultMutation .cxx_destruct]
  -[_AFSiriActivationResultMutation init]
  -[_AFSiriActivationResultMutation generate]
  -[_AFSiriActivationResultMutation initWithBaseModel:]
  -[_AFSiriActivationResultMutation setError:]


AFCommandExecutionInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *executionID
 @property  NSString *requestID
 @property  NSUUID *turnId
 @property  AFPeerInfo *originPeerInfo
 @property  AFHomeInfo *currentHomeInfo
 @property  AFEndpointInfo *endpointInfo
 @property  AFInstanceInfo *instanceInfo
 @property  AFSpeechInfo *speechInfo
 @property  AFRequestHandlingContext *requestHandlingContextSnapshot
 @property  NSArray *deviceRestrictions
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFCommandExecutionInfo supportsSecureCoding]
  +[AFCommandExecutionInfo newWithBuilder:]

  // instance methods
  -[AFCommandExecutionInfo buildDictionaryRepresentation]
  -[AFCommandExecutionInfo requestID]
  -[AFCommandExecutionInfo _descriptionWithIndent:]
  -[AFCommandExecutionInfo initWithCoder:]
  -[AFCommandExecutionInfo initWithDictionaryRepresentation:]
  -[AFCommandExecutionInfo turnId]
  -[AFCommandExecutionInfo .cxx_destruct]
  -[AFCommandExecutionInfo endpointInfo]
  -[AFCommandExecutionInfo executionID]
  -[AFCommandExecutionInfo originPeerInfo]
  -[AFCommandExecutionInfo currentHomeInfo]
  -[AFCommandExecutionInfo instanceInfo]
  -[AFCommandExecutionInfo speechInfo]
  -[AFCommandExecutionInfo requestHandlingContextSnapshot]
  -[AFCommandExecutionInfo deviceRestrictions]
  -[AFCommandExecutionInfo initWithExecutionID:requestID:turnId:originPeerInfo:currentHomeInfo:endpointInfo:instanceInfo:speechInfo:requestHandlingContextSnapshot:deviceRestrictions:userInfo:]
  -[AFCommandExecutionInfo mutatedCopyWithMutator:]
  -[AFCommandExecutionInfo isEqual:]
  -[AFCommandExecutionInfo userInfo]
  -[AFCommandExecutionInfo copyWithZone:]
  -[AFCommandExecutionInfo encodeWithCoder:]


_AFCommandExecutionInfoMutation : NSObject <AFCommandExecutionInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFCommandExecutionInfoMutation setUserInfo:]
  -[_AFCommandExecutionInfoMutation .cxx_destruct]
  -[_AFCommandExecutionInfoMutation setTurnId:]
  -[_AFCommandExecutionInfoMutation setExecutionID:]
  -[_AFCommandExecutionInfoMutation setOriginPeerInfo:]
  -[_AFCommandExecutionInfoMutation setCurrentHomeInfo:]
  -[_AFCommandExecutionInfoMutation setInstanceInfo:]
  -[_AFCommandExecutionInfoMutation setSpeechInfo:]
  -[_AFCommandExecutionInfoMutation setRequestHandlingContextSnapshot:]
  -[_AFCommandExecutionInfoMutation setDeviceRestrictions:]
  -[_AFCommandExecutionInfoMutation init]
  -[_AFCommandExecutionInfoMutation setEndpointInfo:]
  -[_AFCommandExecutionInfoMutation setRequestID:]
  -[_AFCommandExecutionInfoMutation generate]
  -[_AFCommandExecutionInfoMutation initWithBaseModel:]


SISchemaClientAnyEvent : PBCodable <NSCopying>
 @property  BOOL hasEventType
 @property  int eventType
 @property  BOOL hasEventData
 @property  NSData *eventData

  // instance methods
  -[SISchemaClientAnyEvent hasEventType]
  -[SISchemaClientAnyEvent mergeFrom:]
  -[SISchemaClientAnyEvent setHasEventType:]
  -[SISchemaClientAnyEvent .cxx_destruct]
  -[SISchemaClientAnyEvent si_dictionaryRepresentation]
  -[SISchemaClientAnyEvent dictionaryRepresentation]
  -[SISchemaClientAnyEvent writeTo:]
  -[SISchemaClientAnyEvent setEventData:]
  -[SISchemaClientAnyEvent hasEventData]
  -[SISchemaClientAnyEvent isEqual:]
  -[SISchemaClientAnyEvent copyTo:]
  -[SISchemaClientAnyEvent eventData]
  -[SISchemaClientAnyEvent readFrom:]
  -[SISchemaClientAnyEvent eventType]
  -[SISchemaClientAnyEvent copyWithZone:]
  -[SISchemaClientAnyEvent setEventType:]


AFConnectionEntitlementCache : NSObject
  // class methods
  +[AFConnectionEntitlementCache sharedCache]

  // instance methods
  -[AFConnectionEntitlementCache .cxx_destruct]
  -[AFConnectionEntitlementCache hasEntitlement:forPID:]
  -[AFConnectionEntitlementCache cacheEntitlement:forPID:bundleID:]
  -[AFConnectionEntitlementCache init]


AFPairedBluetoothDevicesObserver : NSObject
  // class methods
  +[AFPairedBluetoothDevicesObserver sharedObserver]

  // instance methods
  -[AFPairedBluetoothDevicesObserver .cxx_destruct]
  -[AFPairedBluetoothDevicesObserver updatePairedDevices:]
  -[AFPairedBluetoothDevicesObserver pairedBluetoothDevices]
  -[AFPairedBluetoothDevicesObserver init]


AFConversationInsertion : NSObject
 @property  long long conversationItemType
 @property  AceObject *aceObject
 @property  NSString *aceCommandIdentifier
 @property  BOOL transient
 @property  BOOL supplemental
 @property  BOOL immersiveExperience
 @property  NSIndexPath *indexPath

  // instance methods
  -[AFConversationInsertion .cxx_destruct]
  -[AFConversationInsertion isTransient]
  -[AFConversationInsertion conversationItemType]
  -[AFConversationInsertion initWithConversationItemType:aceObject:aceCommandIdentifier:transient:supplemental:immersiveExperience:indexPath:]
  -[AFConversationInsertion indexPath]
  -[AFConversationInsertion aceObject]
  -[AFConversationInsertion aceCommandIdentifier]
  -[AFConversationInsertion isSupplemental]
  -[AFConversationInsertion isImmersiveExperience]


AFMediaPlaybackStateSnapshot : NSObject <AFContextSnapshot, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long playbackState
 @property  NSDate *nowPlayingTimestamp
 @property  NSString *mediaType
 @property  NSString *groupIdentifier
 @property  BOOL isProxyGroupPlayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFMediaPlaybackStateSnapshot supportsSecureCoding]
  +[AFMediaPlaybackStateSnapshot newWithBuilder:]

  // instance methods
  -[AFMediaPlaybackStateSnapshot buildDictionaryRepresentation]
  -[AFMediaPlaybackStateSnapshot ad_shortDescription]
  -[AFMediaPlaybackStateSnapshot serializedBackingStore]
  -[AFMediaPlaybackStateSnapshot playbackState]
  -[AFMediaPlaybackStateSnapshot _descriptionWithIndent:]
  -[AFMediaPlaybackStateSnapshot isProxyGroupPlayer]
  -[AFMediaPlaybackStateSnapshot initWithCoder:]
  -[AFMediaPlaybackStateSnapshot initWithDictionaryRepresentation:]
  -[AFMediaPlaybackStateSnapshot .cxx_destruct]
  -[AFMediaPlaybackStateSnapshot groupIdentifier]
  -[AFMediaPlaybackStateSnapshot initWithSerializedBackingStore:]
  -[AFMediaPlaybackStateSnapshot mutatedCopyWithMutator:]
  -[AFMediaPlaybackStateSnapshot isEqual:]
  -[AFMediaPlaybackStateSnapshot mediaType]
  -[AFMediaPlaybackStateSnapshot copyWithZone:]
  -[AFMediaPlaybackStateSnapshot nowPlayingTimestamp]
  -[AFMediaPlaybackStateSnapshot encodeWithCoder:]
  -[AFMediaPlaybackStateSnapshot initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:isProxyGroupPlayer:]


_AFMediaPlaybackStateSnapshotMutation : NSObject <AFMediaPlaybackStateSnapshotMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFMediaPlaybackStateSnapshotMutation setMediaType:]
  -[_AFMediaPlaybackStateSnapshotMutation setIsProxyGroupPlayer:]
  -[_AFMediaPlaybackStateSnapshotMutation setPlaybackState:]
  -[_AFMediaPlaybackStateSnapshotMutation setGroupIdentifier:]
  -[_AFMediaPlaybackStateSnapshotMutation .cxx_destruct]
  -[_AFMediaPlaybackStateSnapshotMutation setNowPlayingTimestamp:]
  -[_AFMediaPlaybackStateSnapshotMutation init]
  -[_AFMediaPlaybackStateSnapshotMutation generate]
  -[_AFMediaPlaybackStateSnapshotMutation initWithBaseModel:]


STSiriModelObject : NSObject <NSSecureCoding>
  // class methods
  +[STSiriModelObject supportsSecureCoding]

  // instance methods
  -[STSiriModelObject initWithCoder:]
  -[STSiriModelObject .cxx_destruct]
  -[STSiriModelObject _aceCollectionClass]
  -[STSiriModelObject identifier]
  -[STSiriModelObject _aceContextObjectValue]
  -[STSiriModelObject setIdentifier:]
  -[STSiriModelObject encodeWithCoder:]


AFInterstitialCommandWrapper : NSObject
 @property  AceObject<SAAceCommand> *command
 @property  AceObject<SAAceCommand> *defaultReply

  // instance methods
  -[AFInterstitialCommandWrapper .cxx_destruct]
  -[AFInterstitialCommandWrapper command]
  -[AFInterstitialCommandWrapper dispatchCompletionWithReply:error:]
  -[AFInterstitialCommandWrapper defaultReply]
  -[AFInterstitialCommandWrapper initWithCommand:defaultReply:completion:]
  -[AFInterstitialCommandWrapper dealloc]


AFChildConversationItemList : NSObject
 @property  AFConversation *conversation
 @property  NSUUID *parentItemIdentifier

  // instance methods
  -[AFChildConversationItemList itemAtIndex:]
  -[AFChildConversationItemList .cxx_destruct]
  -[AFChildConversationItemList initWithConversation:parentItemIdentifier:]
  -[AFChildConversationItemList _parentItemIdentifier]
  -[AFChildConversationItemList _indexPathForItemAtIndex:]
  -[AFChildConversationItemList _addItemsForAceObjects:type:dialogPhase:asChildrenOfItemWithIdentifier:]
  -[AFChildConversationItemList _identifierOfItemAtIndex:]
  -[AFChildConversationItemList _indexPathForLastRestoredItem]
  -[AFChildConversationItemList addItemsForAceObjects:type:dialogPhase:]
  -[AFChildConversationItemList addItemsForAceObjects:type:dialogPhase:asChildrenOfItemAtIndex:]
  -[AFChildConversationItemList identifiersForItemsAtIndexes:]
  -[AFChildConversationItemList removeItemsAtIndexes:]
  -[AFChildConversationItemList itemIsRestoredAtIndex:]
  -[AFChildConversationItemList numberOfItems]
  -[AFChildConversationItemList init]
  -[AFChildConversationItemList removeItemsWithIdentifiers:]
  -[AFChildConversationItemList _conversation]
  -[AFChildConversationItemList itemWithIdentifier:]


AFMyriadAdvertisementContextManager : NSObject
  // instance methods
  -[AFMyriadAdvertisementContextManager pushMyriadAdvertisementContext:completionHandler:]
  -[AFMyriadAdvertisementContextManager .cxx_destruct]
  -[AFMyriadAdvertisementContextManager _resetSettingsConnection]
  -[AFMyriadAdvertisementContextManager initWithQueue:]
  -[AFMyriadAdvertisementContextManager reset]
  -[AFMyriadAdvertisementContextManager _settingsConnection]
  -[AFMyriadAdvertisementContextManager triggerABCForType:subType:context:]


AFRequestCompletionOptions : NSObject <NSSecureCoding, NSCopying>
 @property  AFTriggerlessListeningOptions *triggerlessListeningOptions

  // class methods
  +[AFRequestCompletionOptions supportsSecureCoding]

  // instance methods
  -[AFRequestCompletionOptions initWithCoder:]
  -[AFRequestCompletionOptions .cxx_destruct]
  -[AFRequestCompletionOptions setTriggerlessListeningOptions:]
  -[AFRequestCompletionOptions triggerlessListeningOptions]
  -[AFRequestCompletionOptions copyWithZone:]
  -[AFRequestCompletionOptions _initWithShowUIDuringListening:playAlertBeforeListening:]
  -[AFRequestCompletionOptions encodeWithCoder:]


AFApplicationInfo : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  int pid

  // class methods
  +[AFApplicationInfo supportsSecureCoding]

  // instance methods
  -[AFApplicationInfo initWithCoder:]
  -[AFApplicationInfo setPid:]
  -[AFApplicationInfo .cxx_destruct]
  -[AFApplicationInfo isEqual:]
  -[AFApplicationInfo identifier]
  -[AFApplicationInfo pid]
  -[AFApplicationInfo setIdentifier:]
  -[AFApplicationInfo encodeWithCoder:]


AFMyriadEmergencyCallPunchout : NSObject
  // instance methods
  -[AFMyriadEmergencyCallPunchout .cxx_destruct]
  -[AFMyriadEmergencyCallPunchout init]
  -[AFMyriadEmergencyCallPunchout initiateEmergencyCallMyriad]


AFClockAlarm : NSObject <AFClockItem, NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSUUID *itemID
 @property  NSURL *itemURL
 @property  BOOL isFiring
 @property  NSDate *firedDate
 @property  NSDate *dismissedDate
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *alarmID
 @property  NSURL *alarmURL
 @property  BOOL isFiring
 @property  NSString *title
 @property  unsigned long type
 @property  unsigned long hour
 @property  unsigned long minute
 @property  unsigned long repeatOptions
 @property  BOOL isEnabled
 @property  BOOL isSnoozed
 @property  NSDate *firedDate
 @property  NSDate *dismissedDate
 @property  NSDate *lastModifiedDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFClockAlarm supportsSecureCoding]
  +[AFClockAlarm newWithBuilder:]

  // instance methods
  -[AFClockAlarm minute]
  -[AFClockAlarm hour]
  -[AFClockAlarm buildDictionaryRepresentation]
  -[AFClockAlarm firedDate]
  -[AFClockAlarm _descriptionWithIndent:]
  -[AFClockAlarm dismissedDate]
  -[AFClockAlarm isSnoozed]
  -[AFClockAlarm initWithCoder:]
  -[AFClockAlarm initWithDictionaryRepresentation:]
  -[AFClockAlarm .cxx_destruct]
  -[AFClockAlarm itemID]
  -[AFClockAlarm isFiring]
  -[AFClockAlarm mutatedCopyWithMutator:]
  -[AFClockAlarm repeatOptions]
  -[AFClockAlarm initWithAlarmID:alarmURL:isFiring:title:type:hour:minute:repeatOptions:isEnabled:isSnoozed:firedDate:dismissedDate:lastModifiedDate:]
  -[AFClockAlarm isEqual:]
  -[AFClockAlarm alarmURL]
  -[AFClockAlarm isEnabled]
  -[AFClockAlarm title]
  -[AFClockAlarm type]
  -[AFClockAlarm alarmID]
  -[AFClockAlarm itemURL]
  -[AFClockAlarm copyWithZone:]
  -[AFClockAlarm encodeWithCoder:]
  -[AFClockAlarm lastModifiedDate]


_AFClockAlarmMutation : NSObject <AFClockAlarmMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClockAlarmMutation setHour:]
  -[_AFClockAlarmMutation setMinute:]
  -[_AFClockAlarmMutation setFiredDate:]
  -[_AFClockAlarmMutation setLastModifiedDate:]
  -[_AFClockAlarmMutation setDismissedDate:]
  -[_AFClockAlarmMutation setTitle:]
  -[_AFClockAlarmMutation setType:]
  -[_AFClockAlarmMutation .cxx_destruct]
  -[_AFClockAlarmMutation setIsSnoozed:]
  -[_AFClockAlarmMutation setAlarmID:]
  -[_AFClockAlarmMutation setRepeatOptions:]
  -[_AFClockAlarmMutation setAlarmURL:]
  -[_AFClockAlarmMutation init]
  -[_AFClockAlarmMutation setIsFiring:]
  -[_AFClockAlarmMutation generate]
  -[_AFClockAlarmMutation setIsEnabled:]
  -[_AFClockAlarmMutation initWithBaseModel:]


AFSetAudioSessionActiveResult : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned int audioSessionID
 @property  NSError *error

  // class methods
  +[AFSetAudioSessionActiveResult supportsSecureCoding]
  +[AFSetAudioSessionActiveResult newWithBuilder:]

  // instance methods
  -[AFSetAudioSessionActiveResult _descriptionWithIndent:]
  -[AFSetAudioSessionActiveResult initWithCoder:]
  -[AFSetAudioSessionActiveResult .cxx_destruct]
  -[AFSetAudioSessionActiveResult initWithAudioSessionID:error:]
  -[AFSetAudioSessionActiveResult mutatedCopyWithMutator:]
  -[AFSetAudioSessionActiveResult isEqual:]
  -[AFSetAudioSessionActiveResult copyWithZone:]
  -[AFSetAudioSessionActiveResult audioSessionID]
  -[AFSetAudioSessionActiveResult encodeWithCoder:]
  -[AFSetAudioSessionActiveResult error]


_AFSetAudioSessionActiveResultMutation : NSObject <AFSetAudioSessionActiveResultMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFSetAudioSessionActiveResultMutation .cxx_destruct]
  -[_AFSetAudioSessionActiveResultMutation setAudioSessionID:]
  -[_AFSetAudioSessionActiveResultMutation init]
  -[_AFSetAudioSessionActiveResultMutation generate]
  -[_AFSetAudioSessionActiveResultMutation initWithBaseModel:]
  -[_AFSetAudioSessionActiveResultMutation setError:]


AFContextDonationService : NSObject <AFDeviceContextConnectionDelegate, AFContextDonation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFContextDonationService defaultService]

  // instance methods
  -[AFContextDonationService _connection]
  -[AFContextDonationService .cxx_destruct]
  -[AFContextDonationService deviceContextConnectionDidInvalidate:]
  -[AFContextDonationService registerContextTransformer:forType:]
  -[AFContextDonationService donateContext:withMetadata:pushToRemote:completion:]
  -[AFContextDonationService donateContext:withMetadata:pushToRemote:]
  -[AFContextDonationService setDonationService:]
  -[AFContextDonationService _init]


AFSyncSnapshot : NSObject <NSSecureCoding>
 @property  NSString *anchor
 @property  NSString *validity
 @property  long long count
 @property  NSString *key

  // class methods
  +[AFSyncSnapshot supportsSecureCoding]

  // instance methods
  -[AFSyncSnapshot validity]
  -[AFSyncSnapshot setKey:]
  -[AFSyncSnapshot initWithCoder:]
  -[AFSyncSnapshot setAnchor:]
  -[AFSyncSnapshot .cxx_destruct]
  -[AFSyncSnapshot count]
  -[AFSyncSnapshot anchor]
  -[AFSyncSnapshot setValidity:]
  -[AFSyncSnapshot key]
  -[AFSyncSnapshot setCount:]
  -[AFSyncSnapshot encodeWithCoder:]


AFShowAlarmRequest : AFSiriRequest
 @property  NSArray *alarms

  // class methods
  +[AFShowAlarmRequest supportsSecureCoding]

  // instance methods
  -[AFShowAlarmRequest setAlarms:]
  -[AFShowAlarmRequest alarms]
  -[AFShowAlarmRequest initWithCoder:]
  -[AFShowAlarmRequest .cxx_destruct]
  -[AFShowAlarmRequest createResponse]
  -[AFShowAlarmRequest encodeWithCoder:]


AFPeerInfo : NSObject <NSCopying, NSSecureCoding, AFDictionaryConvertible>
 @property  NSString *sharedUserID
 @property  BOOL isDeviceOwnedByCurrentUser
 @property  NSString *assistantIdentifier
 @property  NSString *sharedUserIdentifier
 @property  NSString *idsIdentifier
 @property  NSString *idsDeviceUniqueIdentifier
 @property  NSString *rapportEffectiveIdentifier
 @property  NSString *homeKitAccessoryIdentifier
 @property  NSString *mediaSystemIdentifier
 @property  NSString *mediaRouteIdentifier
 @property  BOOL isCommunalDevice
 @property  NSString *roomName
 @property  NSString *name
 @property  NSString *productType
 @property  NSString *buildVersion
 @property  NSString *userInterfaceIdiom
 @property  NSString *aceVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFPeerInfo supportsSecureCoding]
  +[AFPeerInfo newWithBuilder:]

  // instance methods
  -[AFPeerInfo buildDictionaryRepresentation]
  -[AFPeerInfo idsIdentifier]
  -[AFPeerInfo mediaRouteIdentifier]
  -[AFPeerInfo ad_shortDescription]
  -[AFPeerInfo buildVersion]
  -[AFPeerInfo mediaSystemIdentifier]
  -[AFPeerInfo _descriptionWithIndent:]
  -[AFPeerInfo name]
  -[AFPeerInfo initWithCoder:]
  -[AFPeerInfo aceVersion]
  -[AFPeerInfo initWithDictionaryRepresentation:]
  -[AFPeerInfo rapportEffectiveIdentifier]
  -[AFPeerInfo homeKitAccessoryIdentifier]
  -[AFPeerInfo sharedUserIdentifier]
  -[AFPeerInfo .cxx_destruct]
  -[AFPeerInfo userInterfaceIdiom]
  -[AFPeerInfo initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:sharedUserIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:]
  -[AFPeerInfo mutatedCopyWithMutator:]
  -[AFPeerInfo initWithIsDeviceOwnedByCurrentUser:assistantIdentifier:idsIdentifier:idsDeviceUniqueIdentifier:sharedUserID:rapportEffectiveIdentifier:homeKitAccessoryIdentifier:mediaSystemIdentifier:mediaRouteIdentifier:isCommunalDevice:roomName:name:productType:buildVersion:userInterfaceIdiom:aceVersion:]
  -[AFPeerInfo productType]
  -[AFPeerInfo isEqual:]
  -[AFPeerInfo assistantIdentifier]
  -[AFPeerInfo isCommunalDevice]
  -[AFPeerInfo isDeviceOwnedByCurrentUser]
  -[AFPeerInfo copyWithZone:]
  -[AFPeerInfo idsDeviceUniqueIdentifier]
  -[AFPeerInfo roomName]
  -[AFPeerInfo encodeWithCoder:]
  -[AFPeerInfo sharedUserID]


_AFPeerInfoMutation : NSObject <AFPeerInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFPeerInfoMutation setBuildVersion:]
  -[_AFPeerInfoMutation setIdsIdentifier:]
  -[_AFPeerInfoMutation setMediaSystemIdentifier:]
  -[_AFPeerInfoMutation setIsDeviceOwnedByCurrentUser:]
  -[_AFPeerInfoMutation setUserInterfaceIdiom:]
  -[_AFPeerInfoMutation .cxx_destruct]
  -[_AFPeerInfoMutation setName:]
  -[_AFPeerInfoMutation init]
  -[_AFPeerInfoMutation setMediaRouteIdentifier:]
  -[_AFPeerInfoMutation setProductType:]
  -[_AFPeerInfoMutation setHomeKitAccessoryIdentifier:]
  -[_AFPeerInfoMutation setIdsDeviceUniqueIdentifier:]
  -[_AFPeerInfoMutation setAceVersion:]
  -[_AFPeerInfoMutation generate]
  -[_AFPeerInfoMutation setIsCommunalDevice:]
  -[_AFPeerInfoMutation setAssistantIdentifier:]
  -[_AFPeerInfoMutation setRoomName:]
  -[_AFPeerInfoMutation initWithBaseModel:]
  -[_AFPeerInfoMutation setSharedUserIdentifier:]
  -[_AFPeerInfoMutation setRapportEffectiveIdentifier:]


AFClientInfo : NSObject <NSCopying, NSSecureCoding>
 @property  int processIdentifier
 @property  NSString *processName

  // class methods
  +[AFClientInfo supportsSecureCoding]
  +[AFClientInfo newWithBuilder:]

  // instance methods
  -[AFClientInfo _descriptionWithIndent:]
  -[AFClientInfo initWithCoder:]
  -[AFClientInfo .cxx_destruct]
  -[AFClientInfo mutatedCopyWithMutator:]
  -[AFClientInfo processName]
  -[AFClientInfo initWithProcessIdentifier:processName:]
  -[AFClientInfo isEqual:]
  -[AFClientInfo processIdentifier]
  -[AFClientInfo copyWithZone:]
  -[AFClientInfo encodeWithCoder:]


_AFClientInfoMutation : NSObject <AFClientInfoMutating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AFClientInfoMutation setProcessIdentifier:]
  -[_AFClientInfoMutation .cxx_destruct]
  -[_AFClientInfoMutation init]
  -[_AFClientInfoMutation setProcessName:]
  -[_AFClientInfoMutation generate]
  -[_AFClientInfoMutation initWithBaseModel:]


AFPeerMap : NSObject
  // instance methods
  -[AFPeerMap enumerateObjectsUsingBlock:]
  -[AFPeerMap .cxx_destruct]
  -[AFPeerMap init]
  -[AFPeerMap _getUUIDAndUpdateIDMapsForPeerInfo:]
  -[AFPeerMap _cleanUpUUIDMapsForPeerInfo:]
  -[AFPeerMap objectForPeerInfo:]
  -[AFPeerMap setObject:forPeerInfo:]
  -[AFPeerMap removeObjectForPeerInfo:]


AFSiriTask : NSObject <NSSecureCoding, BSXPCCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AFSiriTask initialize]
  +[AFSiriTask supportsSecureCoding]

  // instance methods
  -[AFSiriTask initWithCoder:]
  -[AFSiriTask encodeWithXPCDictionary:]
  -[AFSiriTask .cxx_destruct]
  -[AFSiriTask failWithError:]
  -[AFSiriTask initWithXPCDictionary:]
  -[AFSiriTask _responseHandlerConnection]
  -[AFSiriTask _invalidateConnectionAfterMessageSent:]
  -[AFSiriTask _usageResultHandlerConnection]
  -[AFSiriTask completeWithResponse:]
  -[AFSiriTask reportUsageResult:]
  -[AFSiriTask request]
  -[AFSiriTask _initWithRequest:remoteResponseListenerEndpoint:usageResultListenerEndpoint:]
  -[AFSiriTask dealloc]
  -[AFSiriTask encodeWithCoder:]


AFAccessibilityObserver : NSObject
 @property  AFAccessibilityState *state

  // class methods
  +[AFAccessibilityObserver sharedObserver]

  // instance methods
  -[AFAccessibilityObserver removeListener:]
  -[AFAccessibilityObserver .cxx_destruct]
  -[AFAccessibilityObserver init]
  -[AFAccessibilityObserver voiceOverTouchEnabledPreferenceDidChange:]
  -[AFAccessibilityObserver vibrationDisabledPreferenceDidChange:]
  -[AFAccessibilityObserver _fetchIsVoiceOverTouchEnabled]
  -[AFAccessibilityObserver _fetchIsVibrationDisabled]
  -[AFAccessibilityObserver _setState:clearDirtyFlags:]
  -[AFAccessibilityObserver _updateVoiceOverTouchEnabledPreference]
  -[AFAccessibilityObserver _updateVibrationDisabledPreference]
  -[AFAccessibilityObserver state]
  -[AFAccessibilityObserver getStateWithCompletion:]
  -[AFAccessibilityObserver currentState]
  -[AFAccessibilityObserver addListener:]


SAPersonAttribute(STContactAddress)
	// instance methods
	-[SAPersonAttribute(STContactAddress) st_contactAddressValue]

(AFBundleResourceSupport)
	// class methods
	+[(AFBundleResourceSupport) _af_URLWithMessageIdentifier:]

	// instance methods
	-[(AFBundleResourceSupport) isAMOSIdentifier]
	-[(AFBundleResourceSupport) isAMOSCommittedIdentifier]
	-[(AFBundleResourceSupport) _af_messageIdentifierValue]
	-[(AFBundleResourceSupport) af_getBundleResourceURL]
	-[(AFBundleResourceSupport) af_enumerateDigestibleChunksWithOptions:usingBlock:]

(AFBundleResourceSupport)
	// instance methods
	-[(AFBundleResourceSupport) af_getBundleResourceURL]
	-[(AFBundleResourceSupport) af_enumerateDigestibleChunksWithOptions:usingBlock:]

SASSpeechRecognized(AFUserUtteranceAdditions)
	// instance methods
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_isUserUtterance]
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_waitsForConfirmation]
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_correctionContext]
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_isUtterance]
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_userUtteranceValue]
	-[SASSpeechRecognized(AFUserUtteranceAdditions) af_bestTextInterpretation]

SASRecognition(AFUserUtteranceAdditions)
	// instance methods
	-[SASRecognition(AFUserUtteranceAdditions) af_speechPhrases]
	-[SASRecognition(AFUserUtteranceAdditions) af_speechUtterances]
	-[SASRecognition(AFUserUtteranceAdditions) af_correctionContextWithRefId:sessionId:]
	-[SASRecognition(AFUserUtteranceAdditions) af_userUtteranceValueWithRefId:sessionId:]
	-[SASRecognition(AFUserUtteranceAdditions) af_bestTextInterpretationWithRefId:sessionId:]

SASSpeechPartialResult(AFUserUtteranceAdditions)
	// class methods
	+[SASSpeechPartialResult(AFUserUtteranceAdditions) createUsingPhrases:andUtterances:]

	// instance methods
	-[SASSpeechPartialResult(AFUserUtteranceAdditions) af_tokens]
	-[SASSpeechPartialResult(AFUserUtteranceAdditions) af_speechModel]
	-[SASSpeechPartialResult(AFUserUtteranceAdditions) af_correctionContext]
	-[SASSpeechPartialResult(AFUserUtteranceAdditions) af_userUtteranceValue]
	-[SASSpeechPartialResult(AFUserUtteranceAdditions) af_bestTextInterpretation]

(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[(AFSecurityDigestibleChunksProvider) serializedBackingStore]
	-[(AFSecurityDigestibleChunksProvider) initWithSerializedBackingStore:]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[(AFSecurityDigestibleChunksProvider) af_isToday]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]
	-[(AFSecurityDigestibleChunksProvider) _af_isSameDayAsDate:]
	-[(AFSecurityDigestibleChunksProvider) af_isTomorrow]

(AFSecurityDigestibleChunksProvider)
	// class methods
	+[(AFSecurityDigestibleChunksProvider) hexStringFromData:]
	+[(AFSecurityDigestibleChunksProvider) hexStringFromBytes:length:]

	// instance methods
	-[(AFSecurityDigestibleChunksProvider) ad_shortDescription]
	-[(AFSecurityDigestibleChunksProvider) _afpreferences_isLanguageCodePrefix]
	-[(AFSecurityDigestibleChunksProvider) _afpreferences_languageCodePrefix]
	-[(AFSecurityDigestibleChunksProvider) _af_stringByRemovingPrefixWithLength:]
	-[(AFSecurityDigestibleChunksProvider) _af_stringByRemovingSuffix:]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[(AFSecurityDigestibleChunksProvider) serializedBackingStore]
	-[(AFSecurityDigestibleChunksProvider) initWithSerializedBackingStore:]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

NSDecimalNumber(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[NSDecimalNumber(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

NSUUID(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[NSUUID(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[(AFSecurityDigestibleChunksProvider) af_mappedArray:]
	-[(AFSecurityDigestibleChunksProvider) _af_lenient:map:]
	-[(AFSecurityDigestibleChunksProvider) af_lenientMappedArray:]
	-[(AFSecurityDigestibleChunksProvider) af_lenientMappedDictionary:]
	-[(AFSecurityDigestibleChunksProvider) af_firstObjectPassingTest:]
	-[(AFSecurityDigestibleChunksProvider) af_objectsPassingTest:]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[(AFSecurityDigestibleChunksProvider) _af_lenient:map:]
	-[(AFSecurityDigestibleChunksProvider) af_lenientMappedDictionary:]
	-[(AFSecurityDigestibleChunksProvider) af_mappedDictionary:]
	-[(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]

AceObject(AFSecurityDigestibleChunksProvider)
	// instance methods
	-[AceObject(AFSecurityDigestibleChunksProvider) af_text]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_isUserUtterance]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_isUtterance]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_dialogIdentifier]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_speakableText]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_enumerateDigestibleChunksWithOptions:usingBlock:]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_analyticsContext]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_addEntriesToAnalyticsContext:]
	-[AceObject(AFSecurityDigestibleChunksProvider) af_dialogIdentifiersForAnalyticsContext]

SASPhrase(AFSpeechTokenAdditions)
	// instance methods
	-[SASPhrase(AFSpeechTokenAdditions) af_speechInterpretations]

SASInterpretation(AFSpeechTokenAdditions)
	// instance methods
	-[SASInterpretation(AFSpeechTokenAdditions) af_speechTokens]

SASToken(AFSpeechTokenAdditions)
	// instance methods
	-[SASToken(AFSpeechTokenAdditions) af_speechToken]

PBCodable(DictionaryRepresentation)
	// instance methods
	-[PBCodable(DictionaryRepresentation) si_dictionaryRepresentation]

UNNotification(AFOpportuneSpeakable)
	// instance methods
	-[UNNotification(AFOpportuneSpeakable) speakableIdentifier]
	-[UNNotification(AFOpportuneSpeakable) speakableDate]
	-[UNNotification(AFOpportuneSpeakable) speakableContent]
	-[UNNotification(AFOpportuneSpeakable) speakableDescription]

(AFCollectionUtilities)
	// instance methods
	-[(AFCollectionUtilities) af_lenientMappedDictionary:]
	-[(AFCollectionUtilities) af_mappedSet:]

SAUIDisambiguationList(AFDisambiguationAssistancePrivate)
	// instance methods
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_disambiguationInfo]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_disambiguationIdentifier]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_indexIdentifierForItem:]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_itemForIndexIdentifier:]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_setDisambiguationInfo:]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_assistedSelectionItem]
	-[SAUIDisambiguationList(AFDisambiguationAssistancePrivate) af_saveItemSelection:forType:]

SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate)
	// instance methods
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_disambiguationInfo]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_disambiguationIdentifier]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_indexIdentifierForItem:]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_itemForIndexIdentifier:]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_setDisambiguationInfo:]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_assistedSelectionItem]
	-[SAUIDisambiguationGroup(AFDisambiguationAssistancePrivate) af_saveItemSelection:forType:]

SASmsSms(STSiriMessage)
	// instance methods
	-[SASmsSms(STSiriMessage) af_messageValue]

SAAceView(ClientFeedbackPresented)
	// instance methods
	-[SAAceView(ClientFeedbackPresented) _af_enumerateClientFeedbackDetails:]
	-[SAAceView(ClientFeedbackPresented) _af_dialogPhase]
	-[SAAceView(ClientFeedbackPresented) _af_dialogIdentifier]
	-[SAAceView(ClientFeedbackPresented) af_addEntriesToAnalyticsContext:]
	-[SAAceView(ClientFeedbackPresented) af_dialogIdentifiersForAnalyticsContext]

SAUIAssistantUtteranceView(ClientFeedbackPresented)
	// instance methods
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_text]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_isUtterance]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_dialogIdentifier]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_speakableText]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) _af_dialogIdentifier]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_addEntriesToAnalyticsContext:]
	-[SAUIAssistantUtteranceView(ClientFeedbackPresented) af_dialogIdentifiersForAnalyticsContext]

SAUIDialogPunchout(ClientFeedbackPresented)
	// instance methods
	-[SAUIDialogPunchout(ClientFeedbackPresented) _af_dialogIdentifier]
	-[SAUIDialogPunchout(ClientFeedbackPresented) af_addEntriesToAnalyticsContext:]
	-[SAUIDialogPunchout(ClientFeedbackPresented) af_dialogIdentifiersForAnalyticsContext]

SAUIAddViews(ClientFeedbackPresented)
	// instance methods
	-[SAUIAddViews(ClientFeedbackPresented) af_dialogPhase]
	-[SAUIAddViews(ClientFeedbackPresented) _af_enumerateClientFeedbackDetails:]
	-[SAUIAddViews(ClientFeedbackPresented) af_addEntriesToAnalyticsContext:]
	-[SAUIAddViews(ClientFeedbackPresented) af_dialogIdentifiersForAnalyticsContext]

SAUISayIt(ClientFeedbackPresented)
	// instance methods
	-[SAUISayIt(ClientFeedbackPresented) _af_enumerateClientFeedbackDetails:]
	-[SAUISayIt(ClientFeedbackPresented) af_addEntriesToAnalyticsContext:]
	-[SAUISayIt(ClientFeedbackPresented) af_dialogIdentifiersForAnalyticsContext]

SARDNativeFlowContextUpdate(ContextSnapshot)
	// instance methods
	-[SARDNativeFlowContextUpdate(ContextSnapshot) serializedBackingStore]
	-[SARDNativeFlowContextUpdate(ContextSnapshot) initWithSerializedBackingStore:]

SASyncAppMetaData(AFBundleID)
	// instance methods
	-[SASyncAppMetaData(AFBundleID) _af_preferredBundleID]

SASyncAnchor(SyncPrivate)
	// class methods
	+[SASyncAnchor(SyncPrivate) _af_normalizedKeyForKey:appBundleID:syncSlotName:]

	// instance methods
	-[SASyncAnchor(SyncPrivate) _af_isValid]
	-[SASyncAnchor(SyncPrivate) _af_normalizedKey]

SABaseAceObject(AnalyticsContextVending)
	// instance methods
	-[SABaseAceObject(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SADialog(AnalyticsContextVending)
	// instance methods
	-[SADialog(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
	-[SADialog(AnalyticsContextVending) af_dialogIdentifiersForAnalyticsContext]

SAAceDomainSignal(AnalyticsContextVending)
	// instance methods
	-[SAAceDomainSignal(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAARAlternativeResultsView(AnalyticsContextVending)
	// instance methods
	-[SAARAlternativeResultsView(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
	-[SAARAlternativeResultsView(AnalyticsContextVending) af_dialogIdentifiersForAnalyticsContext]

SAUIAddDialogs(AnalyticsContextVending)
	// instance methods
	-[SAUIAddDialogs(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]
	-[SAUIAddDialogs(AnalyticsContextVending) af_dialogIdentifiersForAnalyticsContext]

SAMPAddMediaItemsToUpNextQueue(AnalyticsContextVending)
	// instance methods
	-[SAMPAddMediaItemsToUpNextQueue(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPCreateRadioStation(AnalyticsContextVending)
	// instance methods
	-[SAMPCreateRadioStation(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPGeniusSummon(AnalyticsContextVending)
	// instance methods
	-[SAMPGeniusSummon(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPGetStateResponseRemote(AnalyticsContextVending)
	// instance methods
	-[SAMPGetStateResponseRemote(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPLoadPredefinedQueue(AnalyticsContextVending)
	// instance methods
	-[SAMPLoadPredefinedQueue(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPLoadQP(AnalyticsContextVending)
	// instance methods
	-[SAMPLoadQP(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPPlayPodcastCollection(AnalyticsContextVending)
	// instance methods
	-[SAMPPlayPodcastCollection(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPPlayPodcastEpisode(AnalyticsContextVending)
	// instance methods
	-[SAMPPlayPodcastEpisode(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPPlayPodcasts(AnalyticsContextVending)
	// instance methods
	-[SAMPPlayPodcasts(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPPlayPodcastStation(AnalyticsContextVending)
	// instance methods
	-[SAMPPlayPodcastStation(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPRateMediaEntity(AnalyticsContextVending)
	// instance methods
	-[SAMPRateMediaEntity(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPSetQueue(AnalyticsContextVending)
	// instance methods
	-[SAMPSetQueue(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPSteerMusic(AnalyticsContextVending)
	// instance methods
	-[SAMPSteerMusic(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPSubscribeToPodcastCollection(AnalyticsContextVending)
	// instance methods
	-[SAMPSubscribeToPodcastCollection(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPAddOutputDevicesToGroup(AnalyticsContextVending)
	// instance methods
	-[SANPAddOutputDevicesToGroup(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPDecreasePlaybackSpeed(AnalyticsContextVending)
	// instance methods
	-[SANPDecreasePlaybackSpeed(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPGetNowPlayingQueueDetails(AnalyticsContextVending)
	// instance methods
	-[SANPGetNowPlayingQueueDetails(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPGetNowPlayingQueueDetailsRemote(AnalyticsContextVending)
	// instance methods
	-[SANPGetNowPlayingQueueDetailsRemote(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPGetVolumeLevel(AnalyticsContextVending)
	// instance methods
	-[SANPGetVolumeLevel(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPIncreasePlaybackSpeed(AnalyticsContextVending)
	// instance methods
	-[SANPIncreasePlaybackSpeed(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPMoveOutputGroupToDevices(AnalyticsContextVending)
	// instance methods
	-[SANPMoveOutputGroupToDevices(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPPausePlayback(AnalyticsContextVending)
	// instance methods
	-[SANPPausePlayback(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPRemoveOutputDevicesFromGroup(AnalyticsContextVending)
	// instance methods
	-[SANPRemoveOutputDevicesFromGroup(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSeekToPlaybackPosition(AnalyticsContextVending)
	// instance methods
	-[SANPSeekToPlaybackPosition(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSetPlaybackSpeed(AnalyticsContextVending)
	// instance methods
	-[SANPSetPlaybackSpeed(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSetRepeatMode(AnalyticsContextVending)
	// instance methods
	-[SANPSetRepeatMode(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSetShuffleMode(AnalyticsContextVending)
	// instance methods
	-[SANPSetShuffleMode(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSetVolumeLevel(AnalyticsContextVending)
	// instance methods
	-[SANPSetVolumeLevel(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSkipTimeInterval(AnalyticsContextVending)
	// instance methods
	-[SANPSkipTimeInterval(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSkipToNextItem(AnalyticsContextVending)
	// instance methods
	-[SANPSkipToNextItem(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPSkipToPreviousItem(AnalyticsContextVending)
	// instance methods
	-[SANPSkipToPreviousItem(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPStartPlayback(AnalyticsContextVending)
	// instance methods
	-[SANPStartPlayback(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SANPStopPlayback(AnalyticsContextVending)
	// instance methods
	-[SANPStopPlayback(AnalyticsContextVending) af_addEntriesToAnalyticsContext:]

SAMPQueueState(SiriMediaRemoteHelpers)
	// instance methods
	-[SAMPQueueState(SiriMediaRemoteHelpers) _mediaTypeFromNowPlayingInfo:]
	-[SAMPQueueState(SiriMediaRemoteHelpers) _mediaItemIdURLFromNowPlayingInfo:]
	-[SAMPQueueState(SiriMediaRemoteHelpers) _af_setShuffleModeFromNowPlayingInfo:]
	-[SAMPQueueState(SiriMediaRemoteHelpers) _af_setNowPlayingInfo:]
	-[SAMPQueueState(SiriMediaRemoteHelpers) _af_validateAndFinalize]

SAMPReleaseInfo(SiriMediaRemoteHelpers)
	// class methods
	+[SAMPReleaseInfo(SiriMediaRemoteHelpers) _af_releaseInfoWithReleaseDate:]

SAMPMediaItem(SiriMediaRemoteHelpers)
	// class methods
	+[SAMPMediaItem(SiriMediaRemoteHelpers) _af_mediaItemWithMRContentItemRef:]
	+[SAMPMediaItem(SiriMediaRemoteHelpers) _af_mediaItemWithMRContentItem:]

SANPVideoLanguageOption(AFMediaRemoteUtilities)
	// class methods
	+[SANPVideoLanguageOption(AFMediaRemoteUtilities) _languageOptionFromMediaRemoteRepresentation:]

NSXPCInterface(AFSiriTaskDelivering)
	// class methods
	+[NSXPCInterface(AFSiriTaskDelivering) af_siriTaskDeliveringInterface]

SAStructuredDictationFailed(AssistantAdditions)
	// instance methods
	-[SAStructuredDictationFailed(AssistantAdditions) af_dialogIdentifier]

SASAudioAnalytics(AudioAnalytics)
	// instance methods
	-[SASAudioAnalytics(AudioAnalytics) af_audioAnalytics]

SASAcousticFeature(AudioAnalytics)
	// instance methods
	-[SASAcousticFeature(AudioAnalytics) af_acousticFeature]

(AssistantServices)
	// class methods
	+[(AssistantServices) af_temperatureUnitForAceTemperatureUnit:]
	+[(AssistantServices) af_setAceTemperatureUnit:]

	// instance methods
	-[(AssistantServices) af_aceTemperatureUnit]

01 00 0d00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: ALCity 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: AceObject 
01 00 0b00 /System/Library/PrivateFrameworks/SiriAnalytics.framework/SiriAnalytics: AssistantSiriAnalytics 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAAdvertisementData 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAClientEvent 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAClientEventMetadata 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADebugElectionDecisionMade 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADeviceAdvertisingEndContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADeviceAdvertisingStartContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADeviceStateActivityEnded 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADeviceStateActivityStarted 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDADeviceStateContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionAdvertisingEndEnded 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionAdvertisingEndStarted 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionAdvertisingStartEnded 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionAdvertisingStartStarted 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionDecisionMade 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAElectionTimerEnded 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAParticipant 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: CDASchemaCDAScoreBoosters 
01 00 0800 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0800 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0d00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPDistributedMessagingCenter 
01 00 0f00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0400 /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote: MRDeviceInfoRequest 
01 00 0400 /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote: MROrigin 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
01 00 0900 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAARAlternativeResultsView 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAbstractItemList 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAceDomainSignal 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAceView 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAppInfo 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAAttachment 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SABackgroundUpdateRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SABaseAceObject 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACalendar 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACarPlaySupportedOEMAppIdList 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACommandFailed 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACommandIgnored 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SACommandSucceeded 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAConnectionPolicyRoute 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SADialog 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SADomainObject 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAEmail 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAGuidanceCheckForGuideUpdateContext 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAIntentGroupRunSiriKitExecutor 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPAd 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPAddMediaItemsToUpNextQueue 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPCreateRadioStation 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPGeniusSummon 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPGetStateResponseRemote 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPLoadPredefinedQueue 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPLoadQP 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPMediaItem 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPNowPlayingQueuePosition 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPlayPodcastCollection 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPlayPodcastEpisode 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPlayPodcastStation 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPlayPodcasts 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPPlaybackInfo 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPQueueState 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPRateMediaEntity 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPReleaseInfo 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPSetQueue 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPSteerMusic 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMPSubscribeToPodcastCollection 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAMetrics 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPAddOutputDevicesToGroup 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPDecreasePlaybackSpeed 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPGetNowPlayingQueueDetails 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPGetNowPlayingQueueDetailsRemote 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPGetVolumeLevel 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPGetVolumeLevelResponse 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPIncreasePlaybackSpeed 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPMoveOutputGroupToDevices 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPPausePlayback 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPRemoveOutputDevicesFromGroup 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSeekToPlaybackPosition 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSetPlaybackSpeed 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSetRepeatMode 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSetShuffleMode 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSetVolumeLevel 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSkipTimeInterval 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSkipToNextItem 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPSkipToPreviousItem 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPStartPlayback 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPStopPlayback 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPVideoAudioAndSubtitleLanguageOptions 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SANPVideoLanguageOption 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPerson 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPersonAttribute 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPhone 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAPunchoutOutcome 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SARDNativeFlowContextUpdate 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASAcousticFeature 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASAudioAnalytics 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASInterpretation 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASPhrase 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASRecognition 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASSpeechPartialResult 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASSpeechRecognized 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASToken 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASUtterance 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASVoiceSearchResult 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASendCommands 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASetApplicationContext 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASetRequestOrigin 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASmsSms 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStartLocalRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStartRequest 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAStructuredDictationFailed 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncAnchor 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncAppIdentifyingInfo 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SASyncAppMetaData 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIAddDialogs 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIAddViews 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIAssistantUtteranceView 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIButton 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIDialogPunchout 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIDisambiguationGroup 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUIDisambiguationList 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAUISayIt 
01 00 0200 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAVoice 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaAnyEvent 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaClientEvent 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaClientEventMetadata 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaConversationTrace 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaDeviceDynamicContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaDeviceFixedContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaGradingOptInStateChange 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaPNRFatalError 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaPNRFatalErrorInfo 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaPNRSpeechRecognitionSourceContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaRequestLink 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaRequestLinkInfo 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaTurnMTERequest 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUEILaunchContext 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUEILaunchEnded 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUEILaunchStarted 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUEIRequestCategorization 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUEIUUFRReady 
01 00 0a00 /System/Library/PrivateFrameworks/SiriInstrumentation.framework/SiriInstrumentation: SISchemaUUID 
01 00 0740 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotification 
01 00 0740 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1000 /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices: VSSpeechSynthesizer 
01 00 1000 /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices: VSVoiceAsset 
