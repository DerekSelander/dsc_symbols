|| __DATA.__data _CAMImageWellInteractionScale
|| __DATA.__data _CAMURLUtilitiesConfigurationURLHost
|| __DATA.__data _CAMZoomControlAnimationDurationKey
|| __DATA.__data _CAMZoomControlShouldShowZoomDialKey
|| __DATA.__objc_data _OBJC_CLASS_$_CAMAdditiveAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_CAMAdditiveAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMApertureStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMAspectCropUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBadgeTray
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBarsAccessibilityHUDManager
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBlinkAndSmileDetectionCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBodyObjectResult
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBuffer
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferKeyValueObserverObservance
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferKeyValueObserverObservanceChange
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferNotificationObservance
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferNotificationObservanceChange
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferObservance
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBufferObservanceChange
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBurstAnalysisResult
|| __DATA.__objc_data _OBJC_CLASS_$_CAMBurstSession
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCTMCancelMomentCaptureCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCTMDescriptionOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCTMEndCaptureCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCTMInitiateCaptureCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCVCStillImageResultCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCameraReviewAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCameraRollTestHarness
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCancelVideoZoomRampCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMCompositeSpring
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlDrawer
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlDrawerButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlDrawerCustomButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlDrawerMenuButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlDrawerMenuItem
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlStatusBar
|| __DATA.__objc_data _OBJC_CLASS_$_CAMControlStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDescriptionOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDeviceSwitchAnimationTestHarness
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDialGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDirectionalIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDisabledModeOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerApertureButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerAspectRatioButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerFilterButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerFlashButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerHDRButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerIntensityButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerLivePhotoButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerLowLightButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDrawerTimerButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDynamicShutterControl
|| __DATA.__objc_data _OBJC_CLASS_$_CAMDynamicShutterGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_CAMExposureBiasSliderThumb
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFaceResult
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFilterNameBadge
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFilterStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFlashStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFocusAtCenterForVideoRecordingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFocusLockWithLensPositionCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFullscreenModeSelector
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFullscreenViewfinder
|| __DATA.__objc_data _OBJC_CLASS_$_CAMFullscreenViewfinderLayout
|| __DATA.__objc_data _OBJC_CLASS_$_CAMGridView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMHDRStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMIOSurfaceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_CAMIntensityButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMIntensityStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMIrisVideoControllerJob
|| __DATA.__objc_data _OBJC_CLASS_$_CAMIrisVideoJob
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLedger
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLegibilityViewHelper
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLevelCrosshair
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLevelIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLevelViewModel
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLiquidShutterRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLivePhotoAnimationCache
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLivePhotoStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLowLightInstructionLabel
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLowLightModeCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLowLightSlider
|| __DATA.__objc_data _OBJC_CLASS_$_CAMLowLightStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMachineReadableCodeIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMachineReadableCodeResult
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMetalContext
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMetalView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMModeIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMModeSelectTitleView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMomentCaptureSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMutableMomentCaptureSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMutablePanoramaCaptureRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CAMMutableVideoCaptureRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaDaemon
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaDaemonConnectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaIrisBackendController
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaKeepAliveController
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaSecondaryState
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNebulaUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CAMNonDestructiveCropAspectRatioCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMObservable
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaCaptureRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaConfigurationCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaDirectionCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaEncodingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPanoramaPaintingStatus
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPendingLocalPersistenceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPendingRemotePersistenceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPhysicalCaptureNotifier
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPortraitApertureCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPortraitLightingEffectStrengthCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMPortraitModeDescriptionOverlayView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMQueryTimelapseDimensionsCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMQueryVideoDimensionsCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMRampToVideoZoomFactorCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMReviewButton
|| __DATA.__objc_data _OBJC_CLASS_$_CAMReviewViewController
|| __DATA.__objc_data _OBJC_CLASS_$_CAMReviewViewControllerContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMSetVideoOrientationCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMShallowDepthOfFieldBadge
|| __DATA.__objc_data _OBJC_CLASS_$_CAMShutterButtonContrastBackground
|| __DATA.__objc_data _OBJC_CLASS_$_CAMShutterIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStageLightAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStageLightOverlayCircleView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStartPanoramaCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStartVideoRecordingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStopPanoramaCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMStopVideoRecordingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMSubjectIndicatorView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseBackendController
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseBackendSessionContext
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseJPEGReader
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseMovieWriter
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapsePlaceholderResult
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseSettings
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseStabilizationMovieWriter
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimelapseState
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTimerStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTorchPattern
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTransientImageManagerRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CAMTransientImageWell
|| __DATA.__objc_data _OBJC_CLASS_$_CAMURLConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CAMUpdateFocusAndExposureForStartVideoRecordingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMUpdateFocusAndExposureForStopVideoRecordingCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMUtilityBar
|| __DATA.__objc_data _OBJC_CLASS_$_CAMVideoConfigurationStatusIndicator
|| __DATA.__objc_data _OBJC_CLASS_$_CAMVideoCorruptor
|| __DATA.__objc_data _OBJC_CLASS_$_CAMVideoFramerateCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMVideoRecordingCameraSelectionBehaviorCommand
|| __DATA.__objc_data _OBJC_CLASS_$_CAMViewfinderReticleView
|| __DATA.__objc_data _OBJC_CLASS_$_CAMZoomButtonPlatter
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMAdditiveAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMAdditiveAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMApertureStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMAspectCropUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBadgeTray
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBarsAccessibilityHUDManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBlinkAndSmileDetectionCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBodyObjectResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBuffer
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferKeyValueObserverObservance
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferKeyValueObserverObservanceChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferNotificationObservance
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferNotificationObservanceChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferObservance
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBufferObservanceChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBurstAnalysisResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMBurstSession
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCTMCancelMomentCaptureCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCTMDescriptionOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCTMEndCaptureCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCTMInitiateCaptureCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCVCStillImageResultCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCameraReviewAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCameraRollTestHarness
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCancelVideoZoomRampCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMCompositeSpring
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlDrawer
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlDrawerButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlDrawerCustomButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlDrawerMenuButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlDrawerMenuItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlStatusBar
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMControlStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDescriptionOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDeviceSwitchAnimationTestHarness
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDialGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDirectionalIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDisabledModeOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerApertureButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerAspectRatioButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerFilterButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerFlashButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerHDRButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerIntensityButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerLivePhotoButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerLowLightButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDrawerTimerButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDynamicShutterControl
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMDynamicShutterGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMExposureBiasSliderThumb
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFaceResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFilterNameBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFilterStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFlashStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFocusAtCenterForVideoRecordingCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFocusLockWithLensPositionCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFullscreenModeSelector
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFullscreenViewfinder
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMFullscreenViewfinderLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMGridView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMHDRStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMIOSurfaceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMIntensityButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMIntensityStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMIrisVideoControllerJob
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMIrisVideoJob
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLedger
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLegibilityViewHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLevelCrosshair
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLevelIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLevelViewModel
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLiquidShutterRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLivePhotoAnimationCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLivePhotoStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLowLightInstructionLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLowLightModeCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLowLightSlider
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMLowLightStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMachineReadableCodeIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMachineReadableCodeResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMetalContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMetalView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMModeIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMModeSelectTitleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMomentCaptureSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMutableMomentCaptureSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMMutablePanoramaCaptureRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaDaemon
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaDaemonConnectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaIrisBackendController
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaKeepAliveController
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaSecondaryState
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNebulaUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMNonDestructiveCropAspectRatioCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMObservable
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaCaptureRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaConfigurationCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaDirectionCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaEncodingCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaLevelView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaPaintingStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPanoramaViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPendingLocalPersistenceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPendingRemotePersistenceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPhysicalCaptureNotifier
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPortraitApertureCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPortraitLightingEffectStrengthCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMPortraitModeDescriptionOverlayView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMQueryTimelapseDimensionsCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMQueryVideoDimensionsCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMRampToVideoZoomFactorCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMReviewButton
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMReviewViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMReviewViewControllerContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMSetVideoOrientationCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMShallowDepthOfFieldBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMShutterButtonContrastBackground
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMShutterIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMStageLightAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMStageLightOverlayCircleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMStartPanoramaCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMStartVideoRecordingCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMStopPanoramaCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMSubjectIndicatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseBackendController
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseBackendSessionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseJPEGReader
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseMovieWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapsePlaceholderResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseShutterRingView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseStabilizationMovieWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimelapseState
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTimerStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTorchPattern
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTransientImageManagerRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMTransientImageWell
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMURLConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMUpdateFocusAndExposureForStartVideoRecordingCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMUpdateFocusAndExposureForStopVideoRecordingCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMUtilityBar
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMVideoConfigurationStatusIndicator
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMVideoCorruptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMVideoRecordingCameraSelectionBehaviorCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMViewfinderReticleView
|| __DATA.__objc_data _OBJC_METACLASS_$_CAMZoomButtonPlatter
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._assertionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._captureDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._captureMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._captureOrientation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._capturedFromPhotoBooth
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._deferredPersistenceOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._heading
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._localDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._location
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._origin
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._persistenceOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._persistenceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._photoEncodingBehavior
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._pressType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._shouldDelayRemotePersistence
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._shouldExtractDiagnosticsFromMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._shouldPersistDiagnosticsToSidecar
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._temporaryPersistenceOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureRequest._videoEncodingBehavior
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMCaptureResponse._sessionIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._autoOriginalPhotoDeliveryEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._autoSpatialOverCaptureEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._flashMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._hdrMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._lowLightMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._persistenceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._photoQualityPrioritization
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._shouldDisableCameraSwitchingDuringVideoRecording
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMMomentCaptureSettings._userInitiationTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMPanoramaCaptureRequest._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._EV0IrisIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._EV0LocalSpatialOverCaptureVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._EV0LocalVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._EV0PersistenceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._EV0VideoPersistenceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._adjustmentFilters
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._aspectRatio
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._aspectRatioCrop
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._burstIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._ctmCaptureType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._desiredPreviewSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._effectFilterType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._flashMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._hdrMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._irisIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._irisMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._lightingEffectType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._localCTMSpatialOverCaptureVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._localCTMVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._localSpatialOverCaptureVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._localVideoDestinationURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._loggingVideoZoomFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._loggingZoomInteractionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._lowLightMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._maximumBurstLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._originalFilters
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._photoQualityPrioritization
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._stillDuringVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._timelapseIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._userInitiationTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._videoPersistenceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsAudioForCapture
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsAutoDualCameraFusion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsHighResolutionStills
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsPortraitEffect
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsSpatialOverCapture
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMStillImageCaptureRequest._wantsSquareCrop
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._captureVideoConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._maximumRecordedDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._maximumRecordedFileSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._remainingDiskUsageThreshold
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._shouldGenerateVideoPreviewImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._timelapse
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._torchMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CAMVideoCaptureRequest._userInitationTimestamp
|| __DATA_CONST.__const _CAMAggregateDictionaryAspectRatioCropNoneKey
|| __DATA_CONST.__const _CAMAggregateDictionaryAspectRatioCropSixteenNineKey
|| __DATA_CONST.__const _CAMAggregateDictionaryAspectRatioCropSquareKey
|| __DATA_CONST.__const _CAMAggregateDictionaryAvalancheLengthBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryBurstBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryBurstFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryCameraCaseCaptureKey
|| __DATA_CONST.__const _CAMAggregateDictionaryCameraOriginKey
|| __DATA_CONST.__const _CAMAggregateDictionaryDragLockVideoKey
|| __DATA_CONST.__const _CAMAggregateDictionaryEV0BackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryEV0FrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryHDRBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryHDREV0BackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryHDREV0FrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryHDRFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryLockCaptureKey
|| __DATA_CONST.__const _CAMAggregateDictionaryLongPressVideoKey
|| __DATA_CONST.__const _CAMAggregateDictionaryMachineReadableObjectQRKey
|| __DATA_CONST.__const _CAMAggregateDictionaryMessagesCameraOriginKey
|| __DATA_CONST.__const _CAMAggregateDictionaryMessagesFunCamOriginKey
|| __DATA_CONST.__const _CAMAggregateDictionaryMessagesTinyOriginKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCaptureOffKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCaptureOnKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCapturePhotoOffKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCapturePhotoOnKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCaptureVideoOffKey
|| __DATA_CONST.__const _CAMAggregateDictionaryOverCaptureVideoOnKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPanoBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPhotoDragBurstKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPhotoShortPressKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPhotoVideoBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPhotoVideoFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPortraitModeBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryPortraitModeFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionarySlalomBackKey
|| __DATA_CONST.__const _CAMAggregateDictionarySlalomFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionarySmartFrameOffKey
|| __DATA_CONST.__const _CAMAggregateDictionarySmartFrameOnKey
|| __DATA_CONST.__const _CAMAggregateDictionarySoftwareCaptureKey
|| __DATA_CONST.__const _CAMAggregateDictionarySquareBackKey
|| __DATA_CONST.__const _CAMAggregateDictionarySquareFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryStillBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryStillFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryTimelapseBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryTimelapseDurationKey
|| __DATA_CONST.__const _CAMAggregateDictionaryTimelapseFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryTimelapseStopReasonsKey
|| __DATA_CONST.__const _CAMAggregateDictionaryVideoBackKey
|| __DATA_CONST.__const _CAMAggregateDictionaryVideoFrontKey
|| __DATA_CONST.__const _CAMAggregateDictionaryVolumeDownCaptureKey
|| __DATA_CONST.__const _CAMAggregateDictionaryVolumeUpCaptureKey
|| __DATA_CONST.__const _CAMBlinkAndSmileDetectionCommandBlinkEnabled
|| __DATA_CONST.__const _CAMBlinkAndSmileDetectionCommandSmileEnabled
|| __DATA_CONST.__const _CAMBundleIdentifierAssetExplorerTester
|| __DATA_CONST.__const _CAMBundleIdentifierCameraAPITester
|| __DATA_CONST.__const _CAMBundleIdentifierCameraApp
|| __DATA_CONST.__const _CAMBundleIdentifierCameraMessagesExtension
|| __DATA_CONST.__const _CAMBundleIdentifierMessagesApp
|| __DATA_CONST.__const _CAMBundleIdentifierPhotoBooth
|| __DATA_CONST.__const _CAMCTMCancelCaptureCommandPersistenceUUID
|| __DATA_CONST.__const _CAMCTMEndCaptureCommandPersistenceUUID
|| __DATA_CONST.__const _CAMCTMInitiateCaptureCommandSettings
|| __DATA_CONST.__const _CAMCTMVideoCaptureEnabledCommandEnabled
|| __DATA_CONST.__const _CAMCVCStillImageResultCoordinatorErrorDomain
|| __DATA_CONST.__const _CAMCallStatusMonitorDidChangeCallActiveNotification
|| __DATA_CONST.__const _CAMCameraViewControllerAdjustments
|| __DATA_CONST.__const _CAMCameraViewControllerBurstIdentifier
|| __DATA_CONST.__const _CAMCameraViewControllerBurstRepresentedCount
|| __DATA_CONST.__const _CAMCameraViewControllerCaptureDate
|| __DATA_CONST.__const _CAMCameraViewControllerCaptureError
|| __DATA_CONST.__const _CAMCameraViewControllerCaptureMode
|| __DATA_CONST.__const _CAMCameraViewControllerCaptureOrientation
|| __DATA_CONST.__const _CAMCameraViewControllerErrorDomain
|| __DATA_CONST.__const _CAMCameraViewControllerFullsizeImage
|| __DATA_CONST.__const _CAMCameraViewControllerFullsizeImageData
|| __DATA_CONST.__const _CAMCameraViewControllerOrientation
|| __DATA_CONST.__const _CAMCameraViewControllerPhotoMetadata
|| __DATA_CONST.__const _CAMCameraViewControllerPhotoURL
|| __DATA_CONST.__const _CAMCameraViewControllerPixelHeight
|| __DATA_CONST.__const _CAMCameraViewControllerPixelWidth
|| __DATA_CONST.__const _CAMCameraViewControllerPreviewImage
|| __DATA_CONST.__const _CAMCameraViewControllerSavedToPhotoLibrary
|| __DATA_CONST.__const _CAMCameraViewControllerThumbnailImage
|| __DATA_CONST.__const _CAMCameraViewControllerUnadjustedPhotoURL
|| __DATA_CONST.__const _CAMCameraViewControllerUnadjustedVideoURL
|| __DATA_CONST.__const _CAMCameraViewControllerUniquePersistenceIdentifier
|| __DATA_CONST.__const _CAMCameraViewControllerVideoDuration
|| __DATA_CONST.__const _CAMCameraViewControllerVideoURL
|| __DATA_CONST.__const _CAMCaptureCommandReason
|| __DATA_CONST.__const _CAMCaptureCommandSubcommands
|| __DATA_CONST.__const _CAMCaptureControllerErrorDomain
|| __DATA_CONST.__const _CAMCaptureEngineCurrentRequestKey
|| __DATA_CONST.__const _CAMCaptureEngineErrorDomain
|| __DATA_CONST.__const _CAMCaptureEngineExecutedCommandWithContextNotification
|| __DATA_CONST.__const _CAMCaptureEngineNotificationUserInfoCaptureIDKey
|| __DATA_CONST.__const _CAMCaptureEngineNotificationUserInfoErrorKey
|| __DATA_CONST.__const _CAMCaptureMetadataAddDebugInfoToUserCommentsKey
|| __DATA_CONST.__const _CAMCaptureMetadataDiagnosticsKey
|| __DATA_CONST.__const _CAMColorSpaceCommandColorSpace
|| __DATA_CONST.__const _CAMDebugResetTimeoutSeconds
|| __DATA_CONST.__const _CAMDeferredProcessingEnabledKey
|| __DATA_CONST.__const _CAMExposureCommandExposureMode
|| __DATA_CONST.__const _CAMExposureCommandExposurePointOfInterest
|| __DATA_CONST.__const _CAMExposureTargetBiasCommandExposureTargetBias
|| __DATA_CONST.__const _CAMFaceDrivenImageProcessingCommandEnabled
|| __DATA_CONST.__const _CAMFeature0StillImageCommandEnabled
|| __DATA_CONST.__const _CAMFigSessionRecordingCompleteNotification
|| __DATA_CONST.__const _CAMFigSessionRecordingSettingsID
|| __DATA_CONST.__const _CAMFigSessionRecordingStartNotification
|| __DATA_CONST.__const _CAMFlashCommandFlashMode
|| __DATA_CONST.__const _CAMFocusCommandFocusMode
|| __DATA_CONST.__const _CAMFocusCommandFocusPointOfInterest
|| __DATA_CONST.__const _CAMFocusCommandSmoothFocus
|| __DATA_CONST.__const _CAMFocusLockWithLensPositionCommandLensPosition
|| __DATA_CONST.__const _CAMFocusLockWithLensPositionCommandUnserializedCompletionBlock
|| __DATA_CONST.__const _CAMGraphConfigurationInspectionCommandKnownConfiguration
|| __DATA_CONST.__const _CAMGraphConfigurationInspectionCommandResolvedConfiguration
|| __DATA_CONST.__const _CAMHDRSuggestionMonitoringEnabled
|| __DATA_CONST.__const _CAMHighResolutionStillImageCommandEnabled
|| __DATA_CONST.__const _CAMImageControlModeCommandCaptureMode
|| __DATA_CONST.__const _CAMInternalPreferenceOverriddenBackBurstCaptureInterval
|| __DATA_CONST.__const _CAMInternalPreferenceOverriddenFrontBurstCaptureInterval
|| __DATA_CONST.__const _CAMInternalPreferenceOverridenPreferredStorageThreshold
|| __DATA_CONST.__const _CAMIrisDiskUtilitiesErrorDomain
|| __DATA_CONST.__const _CAMIrisVideoJobBundleIdentifier
|| __DATA_CONST.__const _CAMIrisVideoJobCaptureDevice
|| __DATA_CONST.__const _CAMIrisVideoJobCaptureError
|| __DATA_CONST.__const _CAMIrisVideoJobCaptureOrientation
|| __DATA_CONST.__const _CAMIrisVideoJobCaptureTime
|| __DATA_CONST.__const _CAMIrisVideoJobDuration
|| __DATA_CONST.__const _CAMIrisVideoJobFilterName
|| __DATA_CONST.__const _CAMIrisVideoJobFilteredVideoURL
|| __DATA_CONST.__const _CAMIrisVideoJobIrisIdentifier
|| __DATA_CONST.__const _CAMIrisVideoJobPersistenceOptions
|| __DATA_CONST.__const _CAMIrisVideoJobStillImageDisplayTime
|| __DATA_CONST.__const _CAMIrisVideoJobStillImagePersistenceUUID
|| __DATA_CONST.__const _CAMIrisVideoJobTemporaryPersistenceOptions
|| __DATA_CONST.__const _CAMIrisVideoJobVideoPersistenceUUID
|| __DATA_CONST.__const _CAMIrisVideoJobVideoURL
|| __DATA_CONST.__const _CAMIrisVideoRecordingCommandEnabled
|| __DATA_CONST.__const _CAMLowLightBoostCommandEnabled
|| __DATA_CONST.__const _CAMLowLightConfigurationEnabled
|| __DATA_CONST.__const _CAMLowLightModeKey
|| __DATA_CONST.__const _CAMLowLightTimelapseCommandEnabled
|| __DATA_CONST.__const _CAMModeAndDeviceCommandCannotCaptureErrorDomain
|| __DATA_CONST.__const _CAMModeAndDeviceCommandConfigurationError
|| __DATA_CONST.__const _CAMModeAndDeviceCommandDesiredConfiguration
|| __DATA_CONST.__const _CAMModeAndDeviceCommandMinimumExecutionTime
|| __DATA_CONST.__const _CAMModeAndDeviceCommandRequestID
|| __DATA_CONST.__const _CAMModeAndDeviceCommandResolvedConfiguration
|| __DATA_CONST.__const _CAMMotionControllerCaptureOrientationChangedNotification
|| __DATA_CONST.__const _CAMMotionControllerDominantPhysicalCaptureButtonChangedNotification
|| __DATA_CONST.__const _CAMNonDestructiveCropAspectRatioKey
|| __DATA_CONST.__const _CAMNonDestructiveCropEnabledKey
|| __DATA_CONST.__const _CAMPanoramaCaptureCommandRequest
|| __DATA_CONST.__const _CAMPanoramaConfigurationCommandConfiguration
|| __DATA_CONST.__const _CAMPanoramaConfigurationMaxWidth
|| __DATA_CONST.__const _CAMPanoramaConfigurationMaxWidthPerDevice
|| __DATA_CONST.__const _CAMPanoramaConfigurationMaximumFramerate
|| __DATA_CONST.__const _CAMPanoramaConfigurationMinimumFramerate
|| __DATA_CONST.__const _CAMPanoramaConfigurationRingBufferSize
|| __DATA_CONST.__const _CAMPanoramaConfigurationSampleBufferHeight
|| __DATA_CONST.__const _CAMPanoramaConfigurationSampleBufferWidth
|| __DATA_CONST.__const _CAMPanoramaDirectionCommandDirection
|| __DATA_CONST.__const _CAMPanoramaEncodingCommandPhotoEncodingBehavior
|| __DATA_CONST.__const _CAMPanoramaProcessorErrorDomain
|| __DATA_CONST.__const _CAMPanoramaRetainedBufferHintCommandEnabled
|| __DATA_CONST.__const _CAMPausePairedVideoRecordingCommandPaused
|| __DATA_CONST.__const _CAMPersistenceControllerLocalPersistenceErrorDomain
|| __DATA_CONST.__const _CAMPersistenceControllerRemotePersistenceErrorDomain
|| __DATA_CONST.__const _CAMPhotoQualityPrioritizationConfigurationKey
|| __DATA_CONST.__const _CAMPortraitApertureCommandAperture
|| __DATA_CONST.__const _CAMPortraitCommandLightingEffectStrength
|| __DATA_CONST.__const _CAMPreparePhotoSettingsCommandDesiredConfiguration
|| __DATA_CONST.__const _CAMPrepareStillImageCaptureCommandSystemTime
|| __DATA_CONST.__const _CAMPreviewDepthDataDeliveryEnabledKey
|| __DATA_CONST.__const _CAMPreviewFilteredRenderingEnabledKey
|| __DATA_CONST.__const _CAMPreviewFiltersDataKey
|| __DATA_CONST.__const _CAMPreviewLayerEnabled
|| __DATA_CONST.__const _CAMQueryTimelapseDimensionsCommandUnserializedCompletionBlock
|| __DATA_CONST.__const _CAMQueryVideoDimensionsCommandUnserializedCompletionBlock
|| __DATA_CONST.__const _CAMRampToVideoZoomFactorCommandDuration
|| __DATA_CONST.__const _CAMRampToVideoZoomFactorCommandFactor
|| __DATA_CONST.__const _CAMRampToVideoZoomFactorCommandRate
|| __DATA_CONST.__const _CAMRealtimeMetadataCommandTypes
|| __DATA_CONST.__const _CAMSampleBufferVideoCommandFormat
|| __DATA_CONST.__const _CAMSetVideoOrientationCommandCaptureOrientation
|| __DATA_CONST.__const _CAMSetVideoZoomFactorCommandFactor
|| __DATA_CONST.__const _CAMSpatialOverCaptureEnabledKey
|| __DATA_CONST.__const _CAMStillImageCaptureCommandRequest
|| __DATA_CONST.__const _CAMStillImageDepthDataDeliveryEnabledKey
|| __DATA_CONST.__const _CAMStillImageFilteredRenderingEnabledKey
|| __DATA_CONST.__const _CAMStillImagePortraitEffectsMatteDeliveryEnabledKey
|| __DATA_CONST.__const _CAMStopPanoramaCommandInterrupted
|| __DATA_CONST.__const _CAMSubjectAreaChangeMonitoringEnabled
|| __DATA_CONST.__const _CAMTimelapseStabilizationCommandEnabled
|| __DATA_CONST.__const _CAMTorchCommandTorchLevel
|| __DATA_CONST.__const _CAMTorchCommandTorchMode
|| __DATA_CONST.__const _CAMUserPreferenceAspectRatioCrop
|| __DATA_CONST.__const _CAMUserPreferenceAutoLowLightVideoEnabled
|| __DATA_CONST.__const _CAMUserPreferenceCTMDidAcknowledgeDescription
|| __DATA_CONST.__const _CAMUserPreferenceCaptureDevicePosition
|| __DATA_CONST.__const _CAMUserPreferenceCaptureMode
|| __DATA_CONST.__const _CAMUserPreferenceDebugBurstRespectsEncodingSettings
|| __DATA_CONST.__const _CAMUserPreferenceDebugTransientAssets
|| __DATA_CONST.__const _CAMUserPreferenceDesiredFlashMode
|| __DATA_CONST.__const _CAMUserPreferenceDesiredHDRMode
|| __DATA_CONST.__const _CAMUserPreferenceDesiredIrisMode
|| __DATA_CONST.__const _CAMUserPreferenceDesiredPhotoModeEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferenceDidMigrate
|| __DATA_CONST.__const _CAMUserPreferenceDidPerformAutoLivePhotoUpgrade
|| __DATA_CONST.__const _CAMUserPreferenceDidPerformSpatialOverCaptureEV0Disable13_0
|| __DATA_CONST.__const _CAMUserPreferenceDidPerformSpatialOverCaptureHighEfficiencyUpgrade
|| __DATA_CONST.__const _CAMUserPreferenceDidPerformUnifiedBracketingHDRUpgrade
|| __DATA_CONST.__const _CAMUserPreferenceDisableCameraSwitchingDuringVideoRecording
|| __DATA_CONST.__const _CAMUserPreferenceEnableAutoAdjustments
|| __DATA_CONST.__const _CAMUserPreferenceEnableLockAsShutter
|| __DATA_CONST.__const _CAMUserPreferenceEnableSpatialOverCaptureForPhoto
|| __DATA_CONST.__const _CAMUserPreferenceEnableSpatialOverCaptureForVideo
|| __DATA_CONST.__const _CAMUserPreferenceFlashAndHDRConflictingControl
|| __DATA_CONST.__const _CAMUserPreferenceForceMonoAudioRecording
|| __DATA_CONST.__const _CAMUserPreferenceForcedLivePhotoOnTenTwo
|| __DATA_CONST.__const _CAMUserPreferenceHDREV0
|| __DATA_CONST.__const _CAMUserPreferenceModernHDRBehavior
|| __DATA_CONST.__const _CAMUserPreferenceModernHDRKeepNormalPhoto
|| __DATA_CONST.__const _CAMUserPreferencePhotoModeLastCapturedEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferencePortraitEffectIntensityValue
|| __DATA_CONST.__const _CAMUserPreferencePortraitModeApertureValue
|| __DATA_CONST.__const _CAMUserPreferencePortraitModeDidAcknowledgeDescription
|| __DATA_CONST.__const _CAMUserPreferencePortraitModeEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferencePortraitModeLastCapturedEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferencePortraitModeLightingEffectType
|| __DATA_CONST.__const _CAMUserPreferencePreserveCaptureMode
|| __DATA_CONST.__const _CAMUserPreferencePreserveEffectFilter
|| __DATA_CONST.__const _CAMUserPreferencePreserveLivePhoto
|| __DATA_CONST.__const _CAMUserPreferencePreviewViewAspectMode
|| __DATA_CONST.__const _CAMUserPreferenceResetTimeoutDate
|| __DATA_CONST.__const _CAMUserPreferenceShowGridOverlay
|| __DATA_CONST.__const _CAMUserPreferenceShowQRCodeBanners
|| __DATA_CONST.__const _CAMUserPreferenceSquareModeEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferenceSquareModeLastCapturedEffectFilterType
|| __DATA_CONST.__const _CAMUserPreferenceTimerDuration
|| __DATA_CONST.__const _CAMUserPreferenceTorchMode
|| __DATA_CONST.__const _CAMVideoCaptureCommandRequest
|| __DATA_CONST.__const _CAMVideoCaptureRequestErrorDomain
|| __DATA_CONST.__const _CAMVideoDataOutputEnabled
|| __DATA_CONST.__const _CAMVideoFramerateCommandVideoConfiguration
|| __DATA_CONST.__const _CAMVideoHDRCommandEnabled
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultAdjustmentsData
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultCoordinationInfo
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultCreationDate
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultDimensions
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultDuration
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultError
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultFilteredLinkedDestinationURL
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultFilteredLocalDestinationURL
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultLinkedDestinationURL
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultLocalDestinationURL
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultLocalPersistenceUUID
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultStillDisplayTime
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultStillPersistenceUUID
|| __DATA_CONST.__const _CAMVideoLocalPersistenceResultVideoThumbnailDestinationPath
|| __DATA_CONST.__const _CAMVideoRecordFaceMetadataCommandEnabled
|| __DATA_CONST.__const _CAMVideoRecordOrientationCommandEnabled
|| __DATA_CONST.__const _CAMVideoRecordingCameraSelectionBehaviorCommandCameraSwitchingEnabled
|| __DATA_CONST.__const _CAMVideoStabilizationCommandEnabled
|| __DATA_CONST.__const _CAMVideoThumbnailOutputConfigurationKey
|| __DATA_CONST.__const _CAMVideoThumbnailOutputEnabled
|| __DATA_CONST.__const _CAMVideoWriteLivePhotoMetadataCommandEnabled
|| __DATA_CONST.__const _CAMWhiteBalanceCommandMatchExposureMode
|| __DATA_CONST.__const _CAMWhiteBalanceCommandWhiteBalance
|| __DATA_CONST.__const _bufferQueueIdentification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMAnimationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMAnimationHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMApplicationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMAutoLowLightVideoCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMBurstController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMBurstIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMButtonLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCTMVideoCaptureEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCallStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCameraRollController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCameraViewControllerContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureCommandContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureConversions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureCoordinationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureEncodingUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureEngineDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureGraphConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureMetadataUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureMovieFileOutput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureRequestIntervalometer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMClosedViewfinderController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMColorSpaceCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMConflictingControlConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCounterRotatingLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMCreativeCameraButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMDeferredProcessingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMDeviceSwitchTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMDisabledPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMDisplayLinkTarget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMEffectFilterManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMEffectsPreviewVideoDataOutputEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMElapsedTimeView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMExpandableMenuButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMExposureBiasSlider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMExposureCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMExposureResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMExposureTargetBiasCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFaceDrivenImageProcessingCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFaceIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFeedbackController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFilterButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFlashBadge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFlashButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFlashCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFlipButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFocusCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFocusIndicatorRectView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFocusIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFocusLockBadge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFocusResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFormattingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMFramerateIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMGraphConfigurationInspectionCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMHDRBadge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMHDRButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMHDRSuggestionMonitoringCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMHighResolutionStillImageCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMIdleController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMImageControlModeCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMImagePickerCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMImageWell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMIntervalometerTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMIrisDiskUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMIrisVideoController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMIrisVideoRecordingCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMKeepAliveController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMKeyValueCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLivePhotoBadge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLivePhotoButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLocationController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLowLightBoostCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLowLightConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMLowLightTimelapseCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMMachineReadableCodeLoggingController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMMemoizationCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMMessagesPhotosButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeAndDeviceCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeAndDeviceConfigurationChangeListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeAndDeviceConfigurationTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeDial
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeDialItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMModeSwitchTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMMotionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMMutableStillImageCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMNebulaDaemonProxyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMNonDestructiveCropEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMOrientationUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaArrowView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaLevelView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaOutput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaRetainedBufferHintCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPanoramaViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPausePairedVideoRecordingCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPerformanceTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPhotoQualityPrioritizationConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPhysicalCaptureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPortraitModeInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPowerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreciseTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreparePhotoSettingsCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPrepareStillImageCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewContainerMaskingView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewDepthDataDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewFilteredRenderingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewFiltersCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewLayerEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPreviewViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPriorityNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMPriorityNotificationCenterEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMProtectionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMQRCodeInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMQuadraHighResolutionStillImageCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMRealtimeMetadataCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMRemoteShutterController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSampleBufferVideoFormatOutputCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSecureWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSetVideoZoomFactorCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMShutterButtonRingView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMShutterUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSnapshotView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSpatialOverCaptureEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSpring
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStageLightOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStereoAudioCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageCaptureResolvedSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageCaptureResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageDepthDataDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageFilteredRenderingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImageLocalPersistenceResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImagePersistenceCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImagePersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMStorageController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSubjectAreaChangeMonitoringCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMSystemPressureMitigationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMThumbnailGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimelapseController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimelapseDiskUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimelapseShutterRingView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimelapseStabilizationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimerButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTimerIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTopBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTorchCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTorchPatternController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTouchingGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTrackingSpring
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTransientAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTransientDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTransientImageManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMTransientPairedVideo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMUserPreferenceOverrides
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMUserPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMUserPreferencesMigrator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoCaptureResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoHDRCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoHDRSuspensionCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoLivePhotoMetadataWritingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoLocalPersistenceResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoPersistenceCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoPersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoRecordFaceMetadataCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoRecordOrientationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoStabilizationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoThumbnailOutputConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoThumbnailOutputConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMVideoThumbnailOutputEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMViewfinderFlipTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMViewfinderOpenAndCloseTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMViewfinderTransitionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMViewfinderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMViewfinderViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMWhiteBalanceCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomControlButtonMaskView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomControlUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomDial
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomDialDotsView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomFactorLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomSlider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CAMZoomSliderUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUCaptureController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CUShutterButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMAnimationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMAnimationHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMApplicationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMAutoLowLightVideoCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMBurstController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMBurstIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMButtonLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCTMVideoCaptureEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCallStatusMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCameraRollController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCameraViewControllerContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureCommandContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureConversions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureCoordinationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureEncodingUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureEngineDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureGraphConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureMetadataUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureMovieFileOutput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureRequestIntervalometer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMClosedViewfinderController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMColorSpaceCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMConflictingControlConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCounterRotatingLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMCreativeCameraButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMDeferredProcessingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMDeviceSwitchTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMDisabledPreviewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMDisplayLinkTarget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMEffectFilterManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMEffectsPreviewVideoDataOutputEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMElapsedTimeView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMExpandableMenuButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMExposureBiasSlider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMExposureCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMExposureResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMExposureTargetBiasCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFaceDrivenImageProcessingCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFaceIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFeedbackController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFilterButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFlashBadge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFlashButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFlashCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFlipButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFocusCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFocusIndicatorRectView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFocusIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFocusLockBadge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFocusResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFormattingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMFramerateIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMGraphConfigurationInspectionCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMHDRBadge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMHDRButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMHDRSuggestionMonitoringCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMHighResolutionStillImageCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMIdleController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMImageControlModeCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMImagePickerCameraViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMImageWell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMIntervalometerTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMIrisDiskUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMIrisVideoController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMIrisVideoRecordingCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMKeepAliveController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMKeyValueCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLivePhotoBadge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLivePhotoButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLocationController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLowLightBoostCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLowLightConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMLowLightTimelapseCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMachineReadableCodeLoggingController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMemoizationCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMessagesPhotosButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeAndDeviceCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeAndDeviceConfigurationChangeListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeAndDeviceConfigurationTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeDial
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeDialItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMModeSwitchTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMotionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMutableStillImageCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMMutableVideoCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMNebulaDaemonProxyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMNonDestructiveCropEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMOrientationUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaArrowView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaOutput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaRetainedBufferHintCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPanoramaView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPausePairedVideoRecordingCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPerformanceTestHarness
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPersistenceController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPhotoQualityPrioritizationConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPhysicalCaptureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPortraitModeInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPowerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreciseTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreparePhotoSettingsCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPrepareStillImageCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewContainerMaskingView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewDepthDataDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewFilteredRenderingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewFiltersCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewLayerEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPreviewViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPriorityNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMPriorityNotificationCenterEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMProtectionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMQRCodeInstructionLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMQuadraHighResolutionStillImageCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMRealtimeMetadataCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMRemoteShutterController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSampleBufferVideoFormatOutputCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSecureWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSetVideoZoomFactorCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMShutterButtonRingView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMShutterUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSnapshotView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSpatialOverCaptureEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSpring
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStageLightOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStereoAudioCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageCaptureCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageCaptureResolvedSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageCaptureResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageDepthDataDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageFilteredRenderingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImageLocalPersistenceResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImagePersistenceCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImagePersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStopVideoRecordingCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMStorageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSubjectAreaChangeMonitoringCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMSystemPressureMitigationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMThumbnailGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTimelapseController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTimelapseDiskUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTimelapseStabilizationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTimerButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTimerIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTopBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTorchCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTorchPatternController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTouchingGestureRecognizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTrackingSpring
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTransientAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTransientDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTransientImageManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMTransientPairedVideo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMUserPreferenceOverrides
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMUserPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMUserPreferencesMigrator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoCaptureRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoCaptureResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoCaptureResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoFramerateCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoHDRCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoHDRSuspensionCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoLivePhotoMetadataWritingEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoLocalPersistenceResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoPersistenceCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoPersistenceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoPreviewView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoRecordFaceMetadataCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoRecordOrientationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoStabilizationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoThumbnailOutputConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoThumbnailOutputConfigurationCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMVideoThumbnailOutputEnabledCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMViewfinderFlipTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMViewfinderOpenAndCloseTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMViewfinderTransitionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMViewfinderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMViewfinderViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMWhiteBalanceCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomControlButtonMaskView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomControlUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomDial
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomDialDotsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomFactorLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomSlider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CAMZoomSliderUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUCaptureController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CUShutterButton
|| __TEXT.__const _CAMCaptureEngineMaxRecoveryAttempts
|| __TEXT.__const _CAMCaptureEngineTimeoutSessionDidNotStart
|| __TEXT.__const _CAMCaptureEngineTimeoutValidateSessionRecovery
|| __TEXT.__const _CAMCaptureModeInvalid
|| __TEXT.__const _CAMDynamicShutterSettingsDefault
|| __TEXT.__const _CAMFaceResultRollAngleInvalid
|| __TEXT.__const _CAMLiquidShutterPowerCircle
|| __TEXT.__const _CAMLiquidShutterPowerSquare
|| __TEXT.__const _CAMLiquidShutterShapeZero
|| __TEXT.__const _CAMObservableChangeDepthLimit
|| __TEXT.__const _CAMShutterButtonConstrastBorderWidth
|| __TEXT.__const _CAMStageCircleGeometryZero
|| __TEXT.__const _CAMStageGradientGeometryZero
|| __TEXT.__const _CAMStageGradientPropertiesZero
|| __TEXT.__const _CAMViewGeometryZero
|| __TEXT.__const _CAMViewfinderBottomControlSideMargins
|| __TEXT.__const _CAMViewfinderControlDrawerVerticalMargins
|| __TEXT.__const _CAMViewfinderReticleThinMaterialOpacity
|| __TEXT.__const _CAMZoomButtonPlatterAlpha
|| __TEXT.__const _CameraUIVersionNumber
|| __TEXT.__const _CameraUIVersionString
|| __TEXT.__const _arrowInstructionsDelay
|| __TEXT.__const _fadeDurationForProcessing
|| __TEXT.__const _instructionLabelFadeDuration
|| __TEXT.__const _moveInstructionsDelay
|| __TEXT.__const _speedInstructionsDelay
|| __TEXT.__text _CAMAggregateDictionaryAddValueForScalarKey
|| __TEXT.__text _CAMAggregateDictionaryBucketNumberForAvalancheLength
|| __TEXT.__text _CAMAggregateDictionaryDynamicShutterKeyStringForCaptureMode
|| __TEXT.__text _CAMAggregateDictionaryKeyForApertureValue
|| __TEXT.__text _CAMAggregateDictionaryKeyForCameraVideoDuration
|| __TEXT.__text _CAMAggregateDictionaryKeyForCaptureOrientation
|| __TEXT.__text _CAMAggregateDictionaryKeyForPhotoCaptureChoseFilterName
|| __TEXT.__text _CAMAggregateDictionaryKeyForPhotoCaptureWithFilterName
|| __TEXT.__text _CAMAggregateDictionaryKeyForPhotoCaptureWithLightingName
|| __TEXT.__text _CAMAggregateDictionaryKeyForPortaitEffectIntensityValue
|| __TEXT.__text _CAMAggregateDictionaryKeyForStillDuringVideo
|| __TEXT.__text _CAMAggregateDictionaryKeyForTorch
|| __TEXT.__text _CAMAggregateDictionaryKeyForVideoConfiguration
|| __TEXT.__text _CAMAggregateDictionaryNameForDevicePosition
|| __TEXT.__text _CAMAggregateDictionaryPostFixForTrackingError
|| __TEXT.__text _CAMAggregateDictionaryPushValueForDistributionKey
|| __TEXT.__text _CAMAggregateDictionarySetValueForScalarKey
|| __TEXT.__text _CAMAggregateDictionaryUpdateForAspectRatioCrop
|| __TEXT.__text _CAMAggregateDictionaryUpdateForBurst
|| __TEXT.__text _CAMAggregateDictionaryUpdateForCapture
|| __TEXT.__text _CAMAggregateDictionaryUpdateForCaptureOrientation
|| __TEXT.__text _CAMAggregateDictionaryUpdateForCaptureOrientationType
|| __TEXT.__text _CAMAggregateDictionaryUpdateForCaptureType
|| __TEXT.__text _CAMAggregateDictionaryUpdateForControllerFromSphereStatus
|| __TEXT.__text _CAMAggregateDictionaryUpdateForDepthEffectAperture
|| __TEXT.__text _CAMAggregateDictionaryUpdateForDynamicShutterDragBurst
|| __TEXT.__text _CAMAggregateDictionaryUpdateForDynamicShutterDragLock
|| __TEXT.__text _CAMAggregateDictionaryUpdateForDynamicShutterLongPress
|| __TEXT.__text _CAMAggregateDictionaryUpdateForDynamicShutterShortPress
|| __TEXT.__text _CAMAggregateDictionaryUpdateForFlash
|| __TEXT.__text _CAMAggregateDictionaryUpdateForLivePhoto
|| __TEXT.__text _CAMAggregateDictionaryUpdateForLowLight
|| __TEXT.__text _CAMAggregateDictionaryUpdateForOverCapture
|| __TEXT.__text _CAMAggregateDictionaryUpdateForPortaitEffectIntensity
|| __TEXT.__text _CAMAggregateDictionaryUpdateForSphereMeanCurrent
|| __TEXT.__text _CAMAggregateDictionaryUpdateForSphereMotionDataStatus
|| __TEXT.__text _CAMAggregateDictionaryUpdateForSphereTrackingErrorX
|| __TEXT.__text _CAMAggregateDictionaryUpdateForSphereTrackingErrorY
|| __TEXT.__text _CAMAggregateDictionaryUpdateForStillDuringVideo
|| __TEXT.__text _CAMAggregateDictionaryUpdateForStillImageCaptureType
|| __TEXT.__text _CAMAggregateDictionaryUpdateForTimelapseDuration
|| __TEXT.__text _CAMAggregateDictionaryUpdateForTimelapseStopReasons
|| __TEXT.__text _CAMAggregateDictionaryUpdateForTorch
|| __TEXT.__text _CAMAggregateDictionaryUpdateForVideoConfiguration
|| __TEXT.__text _CAMAggregateDictionaryUpdateForZoomFactor
|| __TEXT.__text _CAMAggregateDictionaryUpdateForZoomInteractionType
|| __TEXT.__text _CAMAggregateDictionaryZoomBucketFromZoom
|| __TEXT.__text _CAMApplicationMain
|| __TEXT.__text _CAMCameraUIFrameworkBundle
|| __TEXT.__text _CAMCaptureControllerError
|| __TEXT.__text _CAMFrameForGeometry
|| __TEXT.__text _CAMImageWithTextColorFont
|| __TEXT.__text _CAMIsDeviceOrientationLocked
|| __TEXT.__text _CAMIsEntitledToOpenSensitiveURLs
|| __TEXT.__text _CAMIsModernAspectScreen
|| __TEXT.__text _CAMIsSmallPhone
|| __TEXT.__text _CAMIsTallScreen
|| __TEXT.__text _CAMLayoutStyleAllowingTinyForSize
|| __TEXT.__text _CAMLayoutStyleForSize
|| __TEXT.__text _CAMLayoutStylePortraitOrientedSize
|| __TEXT.__text _CAMLocalizedFrameworkString
|| __TEXT.__text _CAMPortraitModeInstructionLabelMeasurementFormatter
|| __TEXT.__text _CAMPreferredLocale
|| __TEXT.__text _CAMProcessHasEntitlement
|| __TEXT.__text _CAMScreenPixelWidth
|| __TEXT.__text _CAMScreenScale
|| __TEXT.__text _CAMShutterButtonSpecForLayoutStyle
|| __TEXT.__text _CAMShutterButtonSpecGetInnerCircleDiameter
|| __TEXT.__text _CAMShutterButtonSpecMake
|| __TEXT.__text _CAMSizeForDimensions
|| __TEXT.__text _CAMSizeForPhotoMetadata
|| __TEXT.__text _CAMTimerCountdownFormatter
|| __TEXT.__text _CAMTimerDurationFormatter
|| __TEXT.__text _CAMTransformCorrectingForOrientation
|| __TEXT.__text _CAMVideoCaptureRequestError
|| __TEXT.__text _CAMViewGeometryForOrientedFrame
|| __TEXT.__text _CAMViewGeometryMake
|| __TEXT.__text _CAMZoomButtonZoomFactorFormatter
|| __TEXT.__text _CMAccelerationZAxisRotation
|| __TEXT.__text _PLScaledSize
|| __TEXT.__text _PLScaledSizeToFillSize
|| __TEXT.__text _PLScaledSizeToFitSize
|| __TEXT.__text _PLSharedCountFormatter
|| __TEXT.__text __nearestRangeValue
|| __TEXT.__text __nearestRoundedAngleForAngle
|| __TEXT.__text __prewarmAVCaptureSession
|| __TEXT.__text __prewarmAudioVideoDeviceTypes
|| __TEXT.__text __prewarmAudioVideoDevices
|| __TEXT.__text _cam_perform_on_main_asap
__ ACTFramework: _ACT_CopyDefaultConfigurationForPanorama
__ ACTFramework: _ACT_FigSampleBufferProcessorCreateForPanoramaWithOptionsAndPreviewSize
__ ACTFramework: _ACT_FigSampleBufferProcessorStartPanoramaCapture
__ ACTFramework: _ACT_FigSampleBufferProcessorStartPanoramaCaptureWithMetadata
__ ACTFramework: _ACT_FigSampleBufferProcessorStopPanoramaCapture
__ ACTFramework: _ACT_IsPanoramaSupported
__ ACTFramework: _kACTPanoramaBufferRingSize
__ ACTFramework: _kACTPanoramaCaptureBecameActive
__ ACTFramework: _kACTPanoramaDefaultDirectionProperty
__ ACTFramework: _kACTPanoramaErrorNotifications
__ ACTFramework: _kACTPanoramaFrameHeightProperty
__ ACTFramework: _kACTPanoramaFrameWidthProperty
__ ACTFramework: _kACTPanoramaJPEGSizeAttachmentKey
__ ACTFramework: _kACTPanoramaMaxFrameRate
__ ACTFramework: _kACTPanoramaMaxSizeReached
__ ACTFramework: _kACTPanoramaMaxWidthPerCamera
__ ACTFramework: _kACTPanoramaMaxWidthProperty
__ ACTFramework: _kACTPanoramaMinFrameRate
__ ACTFramework: _kACTPanoramaPreviewCropRectAttachmentKey
__ ACTFramework: _kACTPanoramaPreviewHeightProperty
__ ACTFramework: _kACTPanoramaPreviewMotionSpeedScaleAttachmentKey
__ ACTFramework: _kACTPanoramaPreviewThumbnailBufferAttachmentKey
__ ACTFramework: _kACTPanoramaPreviewThumbnailMaxHeightProperty
__ ACTFramework: _kACTPanoramaPreviewThumbnailMaxWidthProperty
__ ACTFramework: _kACTPanoramaPreviewWidthProperty
__ ACTFramework: _kACTPanoramaStatusNotifications
__ ACTFramework: _kACTPanoramaUseHEIF
__ ACTFramework: _kACTPanoramaUserStopped
__ ACTFramework: _kACTPanoramaWarningNotifications
__ AVFoundation: _AVAppleMakerNote_SceneFlags
__ AVFoundation: _AVAppleMakerNote_SpatialOverCaptureGroupIdentifier
__ AVFoundation: _AVAppleMakerNote_SpatialOverCaptureImageType
__ AVFoundation: _AVAssetExportPresetHighestQuality
__ AVFoundation: _AVCaptureBravoCameraSelectionBehaviorEvaluatesNever
__ AVFoundation: _AVCaptureBravoCameraSelectionBehaviorEvaluatesOnZoomChange
__ AVFoundation: _AVCaptureBravoCameraSelectionBehaviorUnsupported
__ AVFoundation: _AVCaptureDeviceDidStartRunningNotification
__ AVFoundation: _AVCaptureDeviceSubjectAreaDidChangeNotification
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInMicrophone
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTelephotoCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTripleCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTrueDepthCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureLensPositionCurrent
__ AVFoundation: _AVCaptureMovieFileOutputRecordingCompletedNotification
__ AVFoundation: _AVCaptureOutputNotificationInfoVideoPreviewFrameSurface
__ AVFoundation: _AVCaptureSessionDidStartRunningNotification
__ AVFoundation: _AVCaptureSessionDidStopRunningNotification
__ AVFoundation: _AVCaptureSessionErrorKey
__ AVFoundation: _AVCaptureSessionInterruptionEndedNotification
__ AVFoundation: _AVCaptureSessionInterruptionReasonKey
__ AVFoundation: _AVCaptureSessionInterruptionSystemPressureStateKey
__ AVFoundation: _AVCaptureSessionPreset1280x720
__ AVFoundation: _AVCaptureSessionPreset1920x1080
__ AVFoundation: _AVCaptureSessionPreset3840x2160
__ AVFoundation: _AVCaptureSessionPreset640x480
__ AVFoundation: _AVCaptureSessionPresetHigh
__ AVFoundation: _AVCaptureSessionPresetHigh60
__ AVFoundation: _AVCaptureSessionPresetInputPriority
__ AVFoundation: _AVCaptureSessionPresetLow
__ AVFoundation: _AVCaptureSessionPresetMedium
__ AVFoundation: _AVCaptureSessionPresetPhoto
__ AVFoundation: _AVCaptureSessionPresetiFrame1280x720
__ AVFoundation: _AVCaptureSessionPresetiFrame960x540
__ AVFoundation: _AVCaptureSessionRuntimeErrorNotification
__ AVFoundation: _AVCaptureSessionSetAuthorizedToUseCameraInMultipleForegroundAppLayout
__ AVFoundation: _AVCaptureSessionWasInterruptedNotification
__ AVFoundation: _AVCaptureVideoPreviewLayerDidStartRunningNotification
__ AVFoundation: _AVErrorRecordingSuccessfullyFinishedKey
__ AVFoundation: _AVFileTypeHEIC
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeMetadata
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonKeyCreationDate
__ AVFoundation: _AVMetadataCommonKeyLocation
__ AVFoundation: _AVMetadataCommonKeyMake
__ AVFoundation: _AVMetadataCommonKeyModel
__ AVFoundation: _AVMetadataCommonKeySoftware
__ AVFoundation: _AVMetadataIdentifierQuickTimeMetadataAutoLivePhoto
__ AVFoundation: _AVMetadataIdentifierQuickTimeMetadataDetectedFace
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVMetadataKeySpaceQuickTimeMetadata
__ AVFoundation: _AVMetadataObjectTypeCatBody
__ AVFoundation: _AVMetadataObjectTypeDogBody
__ AVFoundation: _AVMetadataObjectTypeFace
__ AVFoundation: _AVMetadataObjectTypeHumanBody
__ AVFoundation: _AVMetadataObjectTypeQRCode
__ AVFoundation: _AVMetadataObjectTypeSalientObject
__ AVFoundation: _AVMetadataQuickTimeMetadataKeyContentIdentifier
__ AVFoundation: _AVMetadataQuickTimeMetadataKeySpatialOverCaptureGroupIdentifier
__ AVFoundation: _AVOutputSettingsPreset1280x720
__ AVFoundation: _AVOutputSettingsPreset1920x1080
__ AVFoundation: _AVOutputSettingsPreset640x480
__ AVFoundation: _AVOutputSettingsPreset960x540
__ AVFoundation: _AVVideoAverageBitRateKey
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeH264
__ AVFoundation: _AVVideoCodecTypeHEVC
__ AVFoundation: _AVVideoCodecTypeJPEG
__ AVFoundation: _AVVideoCompressionPropertiesKey
__ AVFoundation: _AVVideoH264EntropyModeKey
__ AVFoundation: _AVVideoHeightKey
__ AVFoundation: _AVVideoProfileLevelKey
__ AVFoundation: _AVVideoScalingModeKey
__ AVFoundation: _AVVideoScalingModeResizeAspectFill
__ AVFoundation: _AVVideoWidthKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriter
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInput
__ AVFoundation: _OBJC_CLASS_$_AVAssetWriterInputPixelBufferAdaptor
__ AVFoundation: _OBJC_CLASS_$_AVCaptureConnection
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceFormat
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMovieFileOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCaptureResolvedPhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoThumbnailOutput
__ AVFoundation: _OBJC_CLASS_$_AVMetadataFaceObject
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMetadataMachineReadableCodeObject
__ AVFoundation: _OBJC_CLASS_$_AVMomentCaptureMovieRecordingSettings
__ AVFoundation: _OBJC_CLASS_$_AVMomentCaptureSettings
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableVideoComposition
__ AVFoundation: _OBJC_CLASS_$_AVOfflineVideoStabilizer
__ AVFoundation: _OBJC_CLASS_$_AVOutputSettingsAssistant
__ AVFoundation: _OBJC_CLASS_$_AVSpatialOverCaptureVideoPreviewLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_METACLASS_$_AVCaptureMovieFileOutput
__ AVFoundation: _OBJC_METACLASS_$_AVCaptureVideoDataOutput
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ AppSupport: _CPCopyBundleIdentifierAndTeamFromAuditToken
__ AppSupport: _CPPowerAssertionCreate
__ AppSupport: _CPSharedResourcesDirectory
__ AssetsLibraryServices: _OBJC_CLASS_$_PLAssetsdClient
__ AssetsLibraryServices: _OBJC_CLASS_$_PLDiskController
__ AssetsLibraryServices: _OBJC_CLASS_$_PLFileSystemPersistence
__ AssetsLibraryServices: _OBJC_CLASS_$_PLUUIDString
__ AssetsLibraryServices: _PLDebugEnableCoreDataMultithreadedAsserts
__ AssetsLibraryServices: _PLDiskSpaceDidBecomeLowNotification
__ AssetsLibraryServices: _PLFileSystemPersistenceAvalancheUUIDKey
__ AssetsLibraryServices: _PLFileSystemPersistenceCreatorBundleIDKey
__ AssetsLibraryServices: _PLFileSystemPersistenceInProgressCameraAdjustmentsDataKey
__ AssetsLibraryServices: _PLFileSystemPersistenceInProgressFilteredPreviewImagePathKey
__ AssetsLibraryServices: _PLFileSystemPersistenceInProgressPublishableKey
__ AssetsLibraryServices: _PLIsCamera
__ AssetsLibraryServices: _PLKeepDaemonAliveServiceName
__ AssetsLibraryServices: ___PLCameraLogDomain
__ AssetsLibraryServices: ___PLCameraOSLog
__ AssetsLibraryServices: ___PLCameraOnceToken
__ AssetsLibraryServices: ___PLCameraPrefix
__ AssetsLibraryServices: ___PLGenericLogDomain
__ AssetsLibraryServices: ___PLGenericOSLog
__ AssetsLibraryServices: ___PLGenericOnceToken
__ AssetsLibraryServices: ___PLGenericPrefix
__ AssetsLibraryServices: ___PLNebulaLogDomain
__ AssetsLibraryServices: ___PLNebulaOSLog
__ AssetsLibraryServices: ___PLNebulaOnceToken
__ AssetsLibraryServices: ___PLNebulaPrefix
__ AssetsLibraryServices: _pl_dispatch_after
__ AssetsLibraryServices: _pl_dispatch_async
__ AssetsLibraryServices: _pl_dispatch_group_notify
__ AssetsLibraryServices: _pl_dispatch_sync
__ AudioToolbox: _AudioServicesPlaySystemSound
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ AudioToolbox: _AudioServicesStartSystemSound
__ AudioToolbox: _AudioServicesStopSystemSound
__ BackBoardServices: _BKSApplicationStateKey
__ BackBoardServices: _BKSApplicationStateProcessIDKey
__ BackBoardServices: _OBJC_CLASS_$_BKSAccelerometer
__ BackBoardServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ BackBoardServices: _OBJC_CLASS_$_BKSHIDEventDeferringToken
__ CameraEditKit: _CEKClamp
__ CameraEditKit: _CEKFontOfSizeWeightStyle
__ CameraEditKit: _CEKInterpolate
__ CameraEditKit: _CEKInterpolateClamped
__ CameraEditKit: _CEKIsSFCameraSupportedForLocale
__ CameraEditKit: _CEKLocalizedFrameworkString
__ CameraEditKit: _CEKMonospacedStylisticNumeralFontOfSizeAndStyle
__ CameraEditKit: _CEKProgressClamped
__ CameraEditKit: _OBJC_CLASS_$_CEKApertureButton
__ CameraEditKit: _OBJC_CLASS_$_CEKApertureSlider
__ CameraEditKit: _OBJC_CLASS_$_CEKBadgeTextView
__ CameraEditKit: _OBJC_CLASS_$_CEKBadgeView
__ CameraEditKit: _OBJC_CLASS_$_CEKDiscreteSlider
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingControl
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingEffectManager
__ CameraEditKit: _OBJC_CLASS_$_CEKLightingNameBadge
__ CameraEditKit: _OBJC_CLASS_$_CEKSlider
__ CameraEditKit: _OBJC_CLASS_$_CEKWheelScrubberView
__ CameraEditKit: _OBJC_CLASS_$_CEKWheelScrubberViewCell
__ CameraEditKit: _OBJC_METACLASS_$_CEKBadgeTextView
__ CameraEditKit: _OBJC_METACLASS_$_CEKBadgeView
__ CameraEditKit: _OBJC_METACLASS_$_CEKDiscreteSlider
__ Celestial: _AVSystemController_CallIsActive
__ Celestial: _AVSystemController_CallIsActiveDidChangeNotification
__ Celestial: _AVSystemController_ServerConnectionDiedNotification
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFAttributedStringGetLength
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyError
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreateWithFile
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _CFWriteStreamWrite
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSLocaleMeasurementSystem
__ CoreFoundation: _NSLocaleMeasurementSystemUK
__ CoreFoundation: _NSLocaleMeasurementSystemUS
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextDrawPath
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextStrokeEllipseInRect
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRectWithWidth
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetShouldInterpolate
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageMaskCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddPath
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCreateCopyByTransformingPath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointCreateDictionaryRepresentation
__ CoreGraphics: _CGPointMakeWithDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreImage: _OBJC_CLASS_$_CIBurstImageSet
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIQRCodeDescriptor
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIInputImageKey
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLDistanceFilterNone
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreMedia: _CMBaseObjectGetVTable
__ CoreMedia: _CMClockGetHostTimeClock
__ CoreMedia: _CMClockGetTime
__ CoreMedia: _CMCopyDictionaryOfAttachments
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMFormatDescriptionGetMediaType
__ CoreMedia: _CMMetadataFormatDescriptionGetIdentifiers
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeCopyAsDictionary
__ CoreMedia: _CMTimeCopyDescription
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeMakeFromDictionary
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionCreateForImageBuffer
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _kCMMetadataBaseDataType_UInt8
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeZero
__ CoreMedia: _kFigAppleMakerNote_AssetIdentifier
__ CoreMedia: _kFigAppleMakerNote_BurstUUID
__ CoreMedia: _kFigAppleMakerNote_ImageGroupIdentifier
__ CoreMedia: _kFigAppleMakerNote_SpatialOverCaptureGroupIdentifier
__ CoreMedia: _kFigAppleMakerNote_SphereHealthAverageCurrent
__ CoreMedia: _kFigAppleMakerNote_SphereHealthTrackingError
__ CoreMedia: _kFigAppleMakerNote_SphereMotionDataStatus
__ CoreMedia: _kFigAppleMakerNote_SphereStatus
__ CoreMedia: _kFigAppleMakerNote_StillImageCaptureType
__ CoreMedia: _kFigAppleMakerNote_Timestamp
__ CoreMedia: _kFigCaptureSampleBufferAttachmentKey_ClientSpecifiedMetadata
__ CoreMedia: _kFigClientSpecifiedMetadataKey_OfflineVideoStabilizationMetadata
__ CoreMotion: _OBJC_CLASS_$_CMAttitude
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypeMovie
__ CoreText: _CTFontCreatePathForGlyph
__ CoreText: _CTFontGetBoundingRectsForGlyphs
__ CoreText: _CTFrameGetLineOrigins
__ CoreText: _CTFrameGetLines
__ CoreText: _CTFramesetterCreateFrame
__ CoreText: _CTFramesetterCreateWithAttributedString
__ CoreText: _CTFramesetterSuggestFrameSizeWithConstraints
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _CTParagraphStyleCreate
__ CoreText: _CTRunGetAttributes
__ CoreText: _CTRunGetGlyphCount
__ CoreText: _CTRunGetGlyphs
__ CoreText: _CTRunGetPositions
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTKernAttributeName
__ CoreText: _kCTParagraphStyleAttributeName
__ CoreVideo: _CVBufferGetAttachment
__ CoreVideo: _CVBufferSetAttachment
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferCreateWithIOSurface
__ CoreVideo: _CVPixelBufferGetAttributes
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetIOSurface
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferPoolCreatePixelBuffer
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _kCVImageBufferCleanApertureHeightKey
__ CoreVideo: _kCVImageBufferCleanApertureHorizontalOffsetKey
__ CoreVideo: _kCVImageBufferCleanApertureKey
__ CoreVideo: _kCVImageBufferCleanApertureVerticalOffsetKey
__ CoreVideo: _kCVImageBufferCleanApertureWidthKey
__ CoreVideo: _kCVImageBufferColorPrimariesKey
__ CoreVideo: _kCVImageBufferTransferFunctionKey
__ CoreVideo: _kCVImageBufferYCbCrMatrixKey
__ CoreVideo: _kCVPixelBufferHeightKey
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatTypeKey
__ CoreVideo: _kCVPixelBufferWidthKey
__ DCIMServices: _OBJC_CLASS_$_DCIMAVMetadataUtilities
__ DCIMServices: _OBJC_CLASS_$_DCIMAssetFormats
__ DCIMServices: _OBJC_CLASS_$_DCIMDirectoryUtilities
__ DCIMServices: _OBJC_CLASS_$_DCIMImageWellUtilities
__ DCIMServices: _OBJC_CLASS_$_DCIMImageWriter
__ DCIMServices: _OBJC_CLASS_$_DCIMLocationUtilities
__ DCIMServices: _OBJC_CLASS_$_PLIOSurfaceData
__ DCIMServices: _PLCreateImageFromPreviewImageSurface
__ DCIMServices: _PLDegreesForImageOrientation
__ DCIMServices: _PLExifOrientationFromImageOrientation
__ DCIMServices: _PLImageOrientationFromDeviceOrientation
__ DCIMServices: _PLImageOrientationFromExifOrientation
__ DCIMServices: _PLImageOrientationIsMirrored
__ DCIMServices: _PLIsRotatedExifOrientation
__ DCIMServices: _PLSensorOrientationFromCaptureOrientation
__ DCIMServices: _kDCIMImageWriterAvalancheExtension
__ DCIMServices: _kDCIMImageWriterCameraAdjustmentsPathExtension
__ DCIMServices: _kDCIMImageWriterFullSizeRenderSecondaryPathExtension
__ DCIMServices: _kDCIMImageWriterLargeThumbnailInflightPathExtension
__ DCIMServices: _kDCIMImageWriterSpatialOverCaptureSecondaryPathExtension
__ DCIMServices: _kPLImageWriterAddAssetToCameraRoll
__ DCIMServices: _kPLImageWriterAssetSubtype
__ DCIMServices: _kPLImageWriterAssetType
__ DCIMServices: _kPLImageWriterAvalancheAllAssetUUIDs
__ DCIMServices: _kPLImageWriterAvalancheBestAssetUUIDs
__ DCIMServices: _kPLImageWriterAvalancheStackAssetUUID
__ DCIMServices: _kPLImageWriterCameraAdjustmentData
__ DCIMServices: _kPLImageWriterCameraAvalanchePickType
__ DCIMServices: _kPLImageWriterCameraAvalancheUUID
__ DCIMServices: _kPLImageWriterCameraAvalancheVisibility
__ DCIMServices: _kPLImageWriterCameraWasRearFacingKey
__ DCIMServices: _kPLImageWriterCaptureTimeMetadataFilePath
__ DCIMServices: _kPLImageWriterCreatedAssetUUID
__ DCIMServices: _kPLImageWriterCreationDateKey
__ DCIMServices: _kPLImageWriterDeferredPhotoIdentifier
__ DCIMServices: _kPLImageWriterDeferredPhotoSpatialOverCaptureIdentifier
__ DCIMServices: _kPLImageWriterDestinationAssetUUID
__ DCIMServices: _kPLImageWriterEXIFProperties
__ DCIMServices: _kPLImageWriterFileExtension
__ DCIMServices: _kPLImageWriterFilteredVideoSourcePath
__ DCIMServices: _kPLImageWriterFinalAssetHeight
__ DCIMServices: _kPLImageWriterFinalAssetPath
__ DCIMServices: _kPLImageWriterFinalAssetWidth
__ DCIMServices: _kPLImageWriterImageOrientation
__ DCIMServices: _kPLImageWriterJobType
__ DCIMServices: _kPLImageWriterJobTypeAvalanche
__ DCIMServices: _kPLImageWriterJobTypeImage
__ DCIMServices: _kPLImageWriterJobTypeVideoAssetMayExist
__ DCIMServices: _kPLImageWriterJobTypeVideoCapture
__ DCIMServices: _kPLImageWriterJobTypeVideoPreviewImageOnly
__ DCIMServices: _kPLImageWriterOrientationKey
__ DCIMServices: _kPLImageWriterPhotoAdjustmentDataSourcePath
__ DCIMServices: _kPLImageWriterPhotoAdjustmentFullSizeRenderSourcePath
__ DCIMServices: _kPLImageWriterPhotoDestinationPath
__ DCIMServices: _kPLImageWriterPhotoDiagnosticPath
__ DCIMServices: _kPLImageWriterPhotoFilteredPreviewSourcePath
__ DCIMServices: _kPLImageWriterPhotoIrisAssetUUID
__ DCIMServices: _kPLImageWriterPhotoIrisExpectsPairedVideo
__ DCIMServices: _kPLImageWriterPhotoIrisMediaGroupUUID
__ DCIMServices: _kPLImageWriterPhotoIrisStillDisplayTime
__ DCIMServices: _kPLImageWriterPhotoIrisVideoDuration
__ DCIMServices: _kPLImageWriterPhotoSourcePath
__ DCIMServices: _kPLImageWriterPhotoSpatialOverCaptureContentDiagnosticPath
__ DCIMServices: _kPLImageWriterPhotoSpatialOverCaptureContentSourcePath
__ DCIMServices: _kPLImageWriterPhotoStreamImageForPublishing
__ DCIMServices: _kPLImageWriterPhotoStreamVideoForPublishing
__ DCIMServices: _kPLImageWriterPlaceholderVideoHeight
__ DCIMServices: _kPLImageWriterPlaceholderVideoWidth
__ DCIMServices: _kPLImageWriterPreviewImageData
__ DCIMServices: _kPLImageWriterQueueEnforcement
__ DCIMServices: _kPLImageWriterSavedAssetType
__ DCIMServices: _kPLImageWriterSpatialOverCaptureCaptureTimeMetadataFilePath
__ DCIMServices: _kPLImageWriterSpatialOverCaptureGroupUUID
__ DCIMServices: _kPLImageWriterUTIType
__ DCIMServices: _kPLImageWriterVideoAdjustments
__ DCIMServices: _kPLImageWriterVideoDestinationPath
__ DCIMServices: _kPLImageWriterVideoSourcePath
__ DCIMServices: _kPLImageWriterVideoSpatialOverCaptureContentSourcePath
__ DCIMServices: _kPLPhotoSavingMetadata
__ DCIMServices: _kPLPhotoSavingOriginalImageData
__ Foundation: _NSClassFromString
__ Foundation: _NSFileSize
__ Foundation: _NSHomeDirectory
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMeasurementFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBulkAttachments
__ IOSurface: _IOSurfaceGetID
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceSetBulkAttachments2
__ IOSurface: _IOSurfaceUnlock
__ ImageIO: _CGImageCreateEXIFJPEGData
__ ImageIO: _CGImageMetadataCreateMutable
__ ImageIO: _CGImageMetadataCreateXMPData
__ ImageIO: _CGImageMetadataRegisterNamespaceForPrefix
__ ImageIO: _CGImageMetadataSetValueWithPath
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageWriteEXIFJPEGToPath
__ ImageIO: _CGImageWriteEXIFJPEGWithMetadata
__ ImageIO: _kCGImageAuxiliaryDataTypeDepth
__ ImageIO: _kCGImageAuxiliaryDataTypeDisparity
__ ImageIO: _kCGImageDestinationICCProfile
__ ImageIO: _kCGImagePropertyExifAuxDictionary
__ ImageIO: _kCGImagePropertyExifAuxROIAppliedToHeight
__ ImageIO: _kCGImagePropertyExifAuxROIAppliedToWidth
__ ImageIO: _kCGImagePropertyExifAuxROIRegionHeight
__ ImageIO: _kCGImagePropertyExifAuxROIRegionList
__ ImageIO: _kCGImagePropertyExifAuxROIRegionWidth
__ ImageIO: _kCGImagePropertyExifAuxROIRegionX
__ ImageIO: _kCGImagePropertyExifAuxROIRegionY
__ ImageIO: _kCGImagePropertyExifColorSpace
__ ImageIO: _kCGImagePropertyExifDateTimeDigitized
__ ImageIO: _kCGImagePropertyExifDateTimeOriginal
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifFlash
__ ImageIO: _kCGImagePropertyExifPixelXDimension
__ ImageIO: _kCGImagePropertyExifPixelYDimension
__ ImageIO: _kCGImagePropertyExifSubjectArea
__ ImageIO: _kCGImagePropertyExifSubsecTimeDigitized
__ ImageIO: _kCGImagePropertyExifSubsecTimeOriginal
__ ImageIO: _kCGImagePropertyGPSAltitude
__ ImageIO: _kCGImagePropertyGPSAltitudeRef
__ ImageIO: _kCGImagePropertyGPSDateStamp
__ ImageIO: _kCGImagePropertyGPSDestBearing
__ ImageIO: _kCGImagePropertyGPSDestBearingRef
__ ImageIO: _kCGImagePropertyGPSDictionary
__ ImageIO: _kCGImagePropertyGPSHPositioningError
__ ImageIO: _kCGImagePropertyGPSImgDirection
__ ImageIO: _kCGImagePropertyGPSImgDirectionRef
__ ImageIO: _kCGImagePropertyGPSLatitude
__ ImageIO: _kCGImagePropertyGPSLatitudeRef
__ ImageIO: _kCGImagePropertyGPSLongitude
__ ImageIO: _kCGImagePropertyGPSLongitudeRef
__ ImageIO: _kCGImagePropertyGPSSpeed
__ ImageIO: _kCGImagePropertyGPSSpeedRef
__ ImageIO: _kCGImagePropertyGPSTimeStamp
__ ImageIO: _kCGImagePropertyIPTCDictionary
__ ImageIO: _kCGImagePropertyIPTCKeywords
__ ImageIO: _kCGImagePropertyMakerAppleDictionary
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDateTime
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFMake
__ ImageIO: _kCGImagePropertyTIFFModel
__ ImageIO: _kCGImagePropertyTIFFSoftware
__ ImageIO: _kCGImageSourceTypeIdentifierHint
__ MediaToolbox: _FigPhotoCompressionSessionAddAuxiliaryImageFromDictionaryRepresentation
__ MediaToolbox: _FigPhotoCompressionSessionAddImage
__ MediaToolbox: _FigPhotoCompressionSessionCloseContainerAndCopyBacking
__ MediaToolbox: _FigPhotoCompressionSessionCreate
__ MediaToolbox: _FigPhotoCompressionSessionOpenEmptyContainer
__ MediaToolbox: _FigPhotoDecompressionCreateCVPixelBufferForIndex
__ MediaToolbox: _FigPhotoReleaseHardwareResources
__ MediaToolbox: _FigSampleBufferProcessorGetFigBaseObject
__ MediaToolbox: _kFigPhotoCompressionContainerOption_BackingType
__ MediaToolbox: _kFigPhotoCompressionContainerOption_Format
__ MediaToolbox: _kFigPhotoCompressionOption_CodecType
__ MediaToolbox: _kFigPhotoCompressionOption_ForceHighSpeed
__ MediaToolbox: _kFigPhotoCompressionOption_QualityControllerParameters
__ MediaToolbox: _kFigPhotoCompressionOption_QualityControllerType
__ MediaToolbox: _kFigPhotoDecompressionOption_ApplyTransform
__ MediaToolbox: _kFigPhotoDecompressionOption_MaxPixelSize
__ MediaToolbox: _kFigPhotoDecompressionOption_OutputPixelFormat
__ MediaToolbox: _kFigPhotoQualityControllerParameter_QualityValue
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ PhotosFormats: _CAMUserPreferenceCaptureEncodingBehavior
__ PhotosFormats: _CAMUserPreferenceSlomoConfiguration
__ PhotosFormats: _CAMUserPreferenceVideoConfiguration
__ PhotosFormats: _OBJC_CLASS_$_PFAssetAdjustments
__ PhotosFormats: _OBJC_CLASS_$_PFCameraAdjustmentsSerialization
__ PhotosFormats: _OBJC_CLASS_$_PFCameraMetadataSerialization
__ PhotosFormats: _OBJC_CLASS_$_PFMediaCapabilities
__ PhotosFormats: _OBJC_CLASS_$_PFMutableCameraAdjustments
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAVObjectBuilder
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAdjustments
__ PhotosFormats: _PFCameraAdjustmentsCropRectNone
__ PhotosFormats: _PFFigCreateCGImageFromImageData
__ PhotosFormats: _PFFigCreateCVPixelBufferFromImageData
__ PhotosFormats: _PFFigJPEGDataFromImage
__ PhotosFormats: _PFReadImageDisplayTimeFromVideoFileAtPath
__ PhotosFormats: _PFReadPairingIdentifierFromVideoAtPath
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAImageQueueCollect
__ QuartzCore: _CAImageQueueCreate
__ QuartzCore: _CAImageQueueInsertImage
__ QuartzCore: _CAImageQueueRegisterIOSurfaceBuffer
__ QuartzCore: _CAImageQueueUnregisterBuffer
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DInvert
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _CATransform3DMakeRotation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMeshTransform
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_CLASS_$_CAReplicatorLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAAnimationDiscrete
__ QuartzCore: _kCAAnimationLinear
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCADepthNormalizationNone
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFillModeForwards
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterLinearDodgeBlendMode
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCAGradientLayerRadial
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCALineJoinRound
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SpringBoardServices: _ADClientAddValueForScalarKey
__ SpringBoardServices: _OBJC_CLASS_$_SBSHardwareButtonService
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSShadowAttributeName
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSShadow
__ UIKit: _OBJC_CLASS_$_UIAccessibilityHUDItem
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutIcon
__ UIKit: _OBJC_CLASS_$_UIApplicationShortcutItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImagePickerController
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UISlider
__ UIKit: _OBJC_CLASS_$_UIStatusBarHideAnimationParameters
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIButtonFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIButtonFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UIDiscreteFeedback
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UILegibilitySettingsProvider
__ UIKit: _OBJC_CLASS_$__UILegibilityView
__ UIKit: _OBJC_CLASS_$__UISelectionFeedbackGeneratorConfiguration
__ UIKit: _OBJC_METACLASS_$_UIApplication
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UISlider
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationLaunchOptionsShortcutItemKey
__ UIKit: _UIApplicationLaunchOptionsURLKey
__ UIKit: _UIApplicationMain
__ UIKit: _UIApplicationResumedNotification
__ UIKit: _UIApplicationSuspendedEventsOnlyNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UICeilToScale
__ UIKit: _UICeilToViewScale
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryExtraSmall
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UIContentSizeCategoryMedium
__ UIKit: _UIContentSizeCategorySmall
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIDistanceBetweenPointAndRect
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsMakeWithEdges
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFloorToScale
__ UIKit: _UIFloorToViewScale
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubhead
__ UIKit: _UIFontTextStyleTitle0
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIImagePickerControllerAllowsEditing
__ UIKit: _UIImagePickerControllerVideoMaximumDuration
__ UIKit: _UIImagePickerControllerVideoQuality
__ UIKit: _UIImageSymbolSizeUnspecified
__ UIKit: _UIIntegralTransform
__ UIKit: _UIOffsetZero
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRectScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectInset
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToScreenScale
__ UIKit: _UIRoundToViewScale
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UITrackingRunLoopMode
__ UIKit: _UIViewNoIntrinsicMetric
__ UIKit: __UIApplicationDeactivationReasonUserInfoKey
__ UIKit: __UIApplicationDidRemoveDeactivationReasonNotification
__ UIKit: __UIApplicationLinkedOnVersion
__ UIKit: __UIApplicationVolumeDownButtonDownNotification
__ UIKit: __UIApplicationVolumeDownButtonUpNotification
__ UIKit: __UIApplicationVolumeUpButtonDownNotification
__ UIKit: __UIApplicationVolumeUpButtonUpNotification
__ UIKit: __UIApplicationWillAddDeactivationReasonNotification
__ UIKit: __UIImagePickerController1XCroppedImage
__ UIKit: __UIImagePickerControllerAllowVideoEditing
__ UIKit: __UIImagePickerControllerCameraCaptureMode
__ UIKit: __UIImagePickerControllerCameraDevice
__ UIKit: __UIImagePickerControllerCameraFlashMode
__ UIKit: __UIImagePickerControllerCameraOverlayView
__ UIKit: __UIImagePickerControllerCameraViewTransform
__ UIKit: __UIImagePickerControllerChooseButtonTitle
__ UIKit: __UIImagePickerControllerEditabilityChangedNotification
__ UIKit: __UIImagePickerControllerReviewCapturedItem
__ UIKit: __UIImagePickerControllerShowCameraControls
__ UIKit: __UIImagePickerControllerUseTelephonyUI
__ UIKit: __UIImagePickerControllerUserDidCaptureItemNotification
__ UIKit: __UIImagePickerControllerUserDidRejectItemNotification
__ UIKit: __UIImagePickerControllerVideoEditingEnd
__ UIKit: __UIImagePickerControllerVideoEditingStart
__ UIKit: __UILegibilityStrengthAutomatic
__ UIKit: __UILegibilityViewOptionUsesColorFilters
__ UIKit: __UIScaleTransformForAspectFitOfSizeInTargetSize
__ UIKit: ___UIApplicationLinkedOnOrAfter
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ VideoToolbox: _FigCreateIOSurfaceBackedCVPixelBuffer
__ VideoToolbox: _FigCreateIOSurfaceBackedCVPixelBufferWithAttributes
__ VideoToolbox: _VTImageRotationSessionCreate
__ VideoToolbox: _VTImageRotationSessionInvalidate
__ VideoToolbox: _VTImageRotationSessionTransferImage
__ VideoToolbox: _VTPixelTransferSessionCreate
__ VideoToolbox: _VTPixelTransferSessionInvalidate
__ VideoToolbox: _VTPixelTransferSessionTransferImage
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTCompressionPropertyKey_ExpectedDuration
__ VideoToolbox: _kVTCompressionPropertyKey_ExpectedFrameRate
__ VideoToolbox: _kVTCompressionPropertyKey_SourceFrameCount
__ VideoToolbox: _kVTCompressionProperty_MaxQuantizationParameter
__ VideoToolbox: _kVTCompressionProperty_SoftMinQuantizationParameter
__ VideoToolbox: _kVTImageRotationPropertyKey_EnableHighSpeedTransfer
__ VideoToolbox: _kVTPixelTransferPropertyKey_EnableHardwareAcceleratedTransfer
__ VideoToolbox: _kVTPixelTransferPropertyKey_ScalingMode
__ VideoToolbox: _kVTProfileLevel_HEVC_Main_AutoLevel
__ VideoToolbox: _kVTScalingMode_CropSourceToCleanAperture
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libMobileGestalt.dylib: _MGIsQuestionValid
__ libMobileGestalt.dylib: _kMGQDiskUsageAmountDataReserved
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fileno
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fsctl
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _fseeko
__ libSystem.B.dylib: _ftello
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _ledger
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_barrier
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
CAMFullscreenViewfinder : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMAdditiveAnimatorDelegate, CAMControlDrawerPresentationDelegate, CEKBadgeViewDelegate, CAMInstructionLabelDelegate, CAMViewfinderTransitionable, CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider>
 @property  UIView *_previewContainerView
 @property  UIView *_modeClippingView
 @property  CAMViewfinderReticleView *_reticleView
 @property  CAMControlDrawer *controlDrawer
 @property  CAMTimerIndicatorView *timerIndicator
 @property  CAMLowLightInstructionLabel *_lowLightInstructionLabel
 @property  CAMFullscreenViewfinderLayout *_layout
 @property  BOOL _usingCreativeCameraControls
 @property  BOOL _controlDrawerPresentedModally
 @property  AVSpatialOverCaptureVideoPreviewLayer *_overCapturePreviewLayer
 @property  CAMAdditiveAnimator *_viewportAnimator
 @property  <CAMFullscreenViewfinderDelegate> *delegate
 @property  NSString *contentSize
 @property  BOOL controlDrawerAllowed
 @property  BOOL modeUIAllowed
 @property  BOOL controlDrawerExpanded
 @property  BOOL flipButtonVisible
 @property  BOOL zoomControlVisible
 @property  BOOL elapsedTimeViewVisible
 @property  BOOL timerIndicatorVisible
 @property  BOOL qrCodeLabelVisible
 @property  BOOL lowLightInstructionLabelVisible
 @property  CAMPreviewView *previewView
 @property  long long previewViewOrientation
 @property  long long orientation
 @property  BOOL reticleAnimating
 @property  CAMDynamicShutterControl *shutterControl
 @property  CAMControlStatusBar *controlStatusBar
 @property  CAMBadgeTray *badgeTray
 @property  CAMModeDial *modeDial
 @property  CAMModeIndicatorView *modeIndicator
 @property  CAMFullscreenModeSelector *modeSelector
 @property  CAMFlipButton *flipButton
 @property  CAMImageWell *imageWell
 @property  CAMZoomControl *zoomControl
 @property  CAMElapsedTimeView *elapsedTimeView
 @property  CAMPanoramaView *panoramaView
 @property  {CGSize=dd} panoramaCaptureSize
 @property  CAMCreativeCameraButton *creativeCameraButton
 @property  CAMFilterNameBadge *filterNameBadge
 @property  BOOL portraitControlsAllowed
 @property  long long shallowDepthOfFieldStatus
 @property  CEKLightingControl *lightingControl
 @property  CEKLightingNameBadge *lightingNameBadge
 @property  CAMPortraitModeInstructionLabel *portraitInstructionLabel
 @property  long long viewportAspectRatio
 @property  UILongPressGestureRecognizer *modeSelectorGestureRecognizer
 @property  CAMQRCodeInstructionLabel *qrCodeInstructionLabel
 @property  CAMPortraitModeDescriptionOverlayView *portraitModeOverlayView
 @property  CAMCTMDescriptionOverlayView *ctmOverlayView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long desiredAspectRatio

  // class methods
  +[CAMFullscreenViewfinder darkControlBackgroundColor]
  +[CAMFullscreenViewfinder lightControlBackgroundColor]

  // instance methods
  -[CAMFullscreenViewfinder delegate]
  -[CAMFullscreenViewfinder setDelegate:]
  -[CAMFullscreenViewfinder .cxx_destruct]
  -[CAMFullscreenViewfinder orientation]
  -[CAMFullscreenViewfinder setOrientation:]
  -[CAMFullscreenViewfinder contentSize]
  -[CAMFullscreenViewfinder _layout]
  -[CAMFullscreenViewfinder setContentSize:]
  -[CAMFullscreenViewfinder layoutSubviews]
  -[CAMFullscreenViewfinder setOrientation:animated:]
  -[CAMFullscreenViewfinder previewView]
  -[CAMFullscreenViewfinder setPreviewView:]
  -[CAMFullscreenViewfinder badgeViewDidChangeIntrinsicContentSize:]
  -[CAMFullscreenViewfinder lightingControl]
  -[CAMFullscreenViewfinder _handleDirectionIndicatorTapped]
  -[CAMFullscreenViewfinder _updateControlsForContentSize]
  -[CAMFullscreenViewfinder shutterControl]
  -[CAMFullscreenViewfinder _frameForPreviewView]
  -[CAMFullscreenViewfinder _frameForReticleViewport]
  -[CAMFullscreenViewfinder _setViewportAnimatorFrame:]
  -[CAMFullscreenViewfinder _previewContainerView]
  -[CAMFullscreenViewfinder portraitModeOverlayView]
  -[CAMFullscreenViewfinder ctmOverlayView]
  -[CAMFullscreenViewfinder controlStatusBar]
  -[CAMFullscreenViewfinder _frameForFlipButton]
  -[CAMFullscreenViewfinder flipButton]
  -[CAMFullscreenViewfinder _geometryForBadgeTray]
  -[CAMFullscreenViewfinder badgeTray]
  -[CAMFullscreenViewfinder _frameForImageWell]
  -[CAMFullscreenViewfinder imageWell]
  -[CAMFullscreenViewfinder modeSelector]
  -[CAMFullscreenViewfinder _reticleView]
  -[CAMFullscreenViewfinder timerIndicator]
  -[CAMFullscreenViewfinder creativeCameraButton]
  -[CAMFullscreenViewfinder _viewportAnimator]
  -[CAMFullscreenViewfinder _updateReticleForViewportFrame:]
  -[CAMFullscreenViewfinder _updatePreviewLayerForPreviewFrame:viewportFrame:]
  -[CAMFullscreenViewfinder _updateModeDialClippingForViewportFrame:]
  -[CAMFullscreenViewfinder _overCapturePreviewLayer]
  -[CAMFullscreenViewfinder _frameForModeView]
  -[CAMFullscreenViewfinder modeDial]
  -[CAMFullscreenViewfinder _layoutZoomControl]
  -[CAMFullscreenViewfinder controlDrawer]
  -[CAMFullscreenViewfinder _frameForControlDrawer]
  -[CAMFullscreenViewfinder elapsedTimeView]
  -[CAMFullscreenViewfinder isElapsedTimeViewVisible]
  -[CAMFullscreenViewfinder _lowLightInstructionLabel]
  -[CAMFullscreenViewfinder _geometryForInstructionLabel:]
  -[CAMFullscreenViewfinder _frameForLightingControl]
  -[CAMFullscreenViewfinder portraitInstructionLabel]
  -[CAMFullscreenViewfinder _applyAnimationSensitiveGeometry:toView:]
  -[CAMFullscreenViewfinder _geometryForLandscapeLightingBadge]
  -[CAMFullscreenViewfinder lightingNameBadge]
  -[CAMFullscreenViewfinder filterNameBadge]
  -[CAMFullscreenViewfinder _geometryForBottomCenteredView:]
  -[CAMFullscreenViewfinder qrCodeInstructionLabel]
  -[CAMFullscreenViewfinder panoramaView]
  -[CAMFullscreenViewfinder _layoutPanoramaView]
  -[CAMFullscreenViewfinder _updateSubviewsVisibilityAnimated:]
  -[CAMFullscreenViewfinder _updateTintColors]
  -[CAMFullscreenViewfinder _setViewportAnimatorFrame:withDuration:timingCurve:]
  -[CAMFullscreenViewfinder _isUsingCreativeCameraControls]
  -[CAMFullscreenViewfinder isControlDrawerExpanded]
  -[CAMFullscreenViewfinder viewportAspectRatio]
  -[CAMFullscreenViewfinder _setOverCapturePreviewLayer:]
  -[CAMFullscreenViewfinder _modeClippingView]
  -[CAMFullscreenViewfinder _showControlDrawer]
  -[CAMFullscreenViewfinder isZoomControlVisible]
  -[CAMFullscreenViewfinder zoomControl]
  -[CAMFullscreenViewfinder isModeUIAllowed]
  -[CAMFullscreenViewfinder _visibleInstructionLabel]
  -[CAMFullscreenViewfinder _currentFourThreeViewportFrame]
  -[CAMFullscreenViewfinder _showLandscapeLightingBadge]
  -[CAMFullscreenViewfinder previewViewOrientation]
  -[CAMFullscreenViewfinder panoramaCaptureSize]
  -[CAMFullscreenViewfinder setPortraitControlsAllowed:animated:]
  -[CAMFullscreenViewfinder _loadPortraitControlsIfNeeded]
  -[CAMFullscreenViewfinder _setNeedsLayoutAnimated:]
  -[CAMFullscreenViewfinder setShallowDepthOfFieldStatus:animated:]
  -[CAMFullscreenViewfinder setShallowDepthOfFieldStatus:]
  -[CAMFullscreenViewfinder shallowDepthOfFieldStatus]
  -[CAMFullscreenViewfinder _badgeFontStyle]
  -[CAMFullscreenViewfinder setViewportAspectRatio:animated:]
  -[CAMFullscreenViewfinder setQRCodeLabelVisible:animated:]
  -[CAMFullscreenViewfinder isControlDrawerAllowed]
  -[CAMFullscreenViewfinder setControlDrawerExpanded:animated:]
  -[CAMFullscreenViewfinder _setControlDrawer:]
  -[CAMFullscreenViewfinder _setControlDrawerPresentedModally:]
  -[CAMFullscreenViewfinder _isControlDrawerPresentedModally]
  -[CAMFullscreenViewfinder _loadFilterControlsIfNeeded]
  -[CAMFullscreenViewfinder isPortraitControlsAllowed]
  -[CAMFullscreenViewfinder _showPortraitControls]
  -[CAMFullscreenViewfinder _showModeView]
  -[CAMFullscreenViewfinder modeIndicator]
  -[CAMFullscreenViewfinder isTimerIndicatorVisible]
  -[CAMFullscreenViewfinder _showFilterNameBadge]
  -[CAMFullscreenViewfinder isFlipButtonVisible]
  -[CAMFullscreenViewfinder isLowLightInstructionLabelVisible]
  -[CAMFullscreenViewfinder _showPortraitInstructions]
  -[CAMFullscreenViewfinder isQRCodeLabelVisible]
  -[CAMFullscreenViewfinder _transitionView:fromOrientation:toOrientation:]
  -[CAMFullscreenViewfinder setFlipButtonVisible:animated:]
  -[CAMFullscreenViewfinder setZoomControlVisible:animated:]
  -[CAMFullscreenViewfinder setElapsedTimeViewVisible:animated:]
  -[CAMFullscreenViewfinder setTimerIndicatorVisible:animated:]
  -[CAMFullscreenViewfinder _setTimerIndicator:]
  -[CAMFullscreenViewfinder setLowLightInstructionLabelVisible:animated:]
  -[CAMFullscreenViewfinder _setLowLightInstructionLabel:]
  -[CAMFullscreenViewfinder setPanoramaCaptureSize:]
  -[CAMFullscreenViewfinder removeInflightBlurAnimations]
  -[CAMFullscreenViewfinder prepareForResumingUsingCrossfade]
  -[CAMFullscreenViewfinder touchingRecognizersToCancel]
  -[CAMFullscreenViewfinder hudItemForAccessibilityHUDManager:]
  -[CAMFullscreenViewfinder _iterateViewsForHUDManager:withItemFoundBlock:]
  -[CAMFullscreenViewfinder selectedByAccessibilityHUDManager:]
  -[CAMFullscreenViewfinder shouldAccessibilityGestureBeginForHUDManager:]
  -[CAMFullscreenViewfinder animator:didUpdateValuesForKeys:]
  -[CAMFullscreenViewfinder controlDrawer:didChangeExpanded:forControlType:animated:]
  -[CAMFullscreenViewfinder instructionLabelDidChangeIntrinsicContentSize:]
  -[CAMFullscreenViewfinder desiredAspectRatio]
  -[CAMFullscreenViewfinder initWithMetalContext:useCreativeCameraControls:]
  -[CAMFullscreenViewfinder isReticleAnimating]
  -[CAMFullscreenViewfinder setPortraitControlsAllowed:]
  -[CAMFullscreenViewfinder setViewportAspectRatio:]
  -[CAMFullscreenViewfinder loadQRCodeInstructionLabelIfNeeded]
  -[CAMFullscreenViewfinder setQrCodeLabelVisible:]
  -[CAMFullscreenViewfinder setControlDrawerExpanded:]
  -[CAMFullscreenViewfinder presentControlDrawerModally:withControlType:]
  -[CAMFullscreenViewfinder isControlDrawerPresentedModallyWithControlType:]
  -[CAMFullscreenViewfinder dismissModalControlDrawerIfNeeded]
  -[CAMFullscreenViewfinder setControlDrawerAllowed:modeUIAllowed:animated:]
  -[CAMFullscreenViewfinder setFlipButtonVisible:]
  -[CAMFullscreenViewfinder setZoomControlVisible:]
  -[CAMFullscreenViewfinder setElapsedTimeViewVisible:]
  -[CAMFullscreenViewfinder setTimerIndicatorVisible:]
  -[CAMFullscreenViewfinder setLowLightInstructionLabelVisible:]
  -[CAMFullscreenViewfinder setPanoramaView:]
  -[CAMFullscreenViewfinder setPortraitModeOverlayView:]
  -[CAMFullscreenViewfinder setCTMOverlayView:]
  -[CAMFullscreenViewfinder setReticleMaskingStyle:withDuration:]
  -[CAMFullscreenViewfinder setPreviewViewOrientation:]
  -[CAMFullscreenViewfinder modeSelectorGestureRecognizer]
  -[CAMFullscreenViewfinder _setUsingCreativeCameraControls:]


CAMMachineReadableCodeIndicatorView : CAMSubjectIndicatorView

CAMModeDialItem : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  ^{__CFAttributedString=} _attributedTitle
 @property  CAShapeLayer *_scalableTextLayer
 @property  {CGSize=dd} _textFrameSize
 @property  BOOL selected
 @property  NSString *title
 @property  UIFont *font
 @property  BOOL shouldShadowTitleText

  // instance methods
  -[CAMModeDialItem initWithCoder:]
  -[CAMModeDialItem .cxx_destruct]
  -[CAMModeDialItem title]
  -[CAMModeDialItem setTitle:]
  -[CAMModeDialItem isSelected]
  -[CAMModeDialItem initWithFrame:]
  -[CAMModeDialItem setFont:]
  -[CAMModeDialItem sizeThatFits:]
  -[CAMModeDialItem layoutSubviews]
  -[CAMModeDialItem font]
  -[CAMModeDialItem tintColorDidChange]
  -[CAMModeDialItem _attributedTitle]
  -[CAMModeDialItem setSelected:]
  -[CAMModeDialItem _textColor]
  -[CAMModeDialItem setSelected:animated:]
  -[CAMModeDialItem _commonCAMModeDialItemInitialization]
  -[CAMModeDialItem _textFrameSize]
  -[CAMModeDialItem _scalableTextLayer]
  -[CAMModeDialItem _updateScalableTextPathFromAttributedTitle]
  -[CAMModeDialItem _pathForAttributedString:]
  -[CAMModeDialItem shouldShadowTitleText]
  -[CAMModeDialItem _setTextFrameSize:]
  -[CAMModeDialItem setShouldShadowTitleText:]


CAMFeedbackController : NSObject /usr/lib/libSystem.B.dylib
 @property  UISelectionFeedbackGenerator *_modeSelectionFeedbackGenerator
 @property  UISelectionFeedbackGenerator *_burstCountFeedbackGenerator
 @property  _UIButtonFeedbackGenerator *_shutterButtonLatchingOnFeedbackGenerator
 @property  _UIButtonFeedbackGenerator *_shutterButtonLatchingOffFeedbackGenerator
 @property  _UIButtonFeedbackGenerator *_shutterButtonMomentaryFeedbackGenerator
 @property  NSMutableSet *_activePairedFeedbackGenerators

  // instance methods
  -[CAMFeedbackController init]
  -[CAMFeedbackController .cxx_destruct]
  -[CAMFeedbackController _feedbackGeneratorForDiscreteFeedback:]
  -[CAMFeedbackController _feedbackGeneratorForPairedFeedback:]
  -[CAMFeedbackController _activePairedFeedbackGenerators]
  -[CAMFeedbackController _debugStringForPairedFeedback:]
  -[CAMFeedbackController _modeSelectionFeedbackGenerator]
  -[CAMFeedbackController _burstCountFeedbackGenerator]
  -[CAMFeedbackController _shutterButtonMomentaryFeedbackGenerator]
  -[CAMFeedbackController _shutterButtonLatchingOnFeedbackGenerator]
  -[CAMFeedbackController _shutterButtonLatchingOffFeedbackGenerator]
  -[CAMFeedbackController prepareDiscreteFeedback:]
  -[CAMFeedbackController performDiscreteFeedback:]
  -[CAMFeedbackController prepareButtonFeedback:]
  -[CAMFeedbackController performPressButtonFeedback:]
  -[CAMFeedbackController performReleaseButtonFeedback:]


CAMExposureBiasSlider : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAMExposureBiasSliderThumb *_thumbView
 @property  UIView *_minTrackView
 @property  UIView *_maxTrackView
 @property  UIView *_minTrackMaskView
 @property  UIView *_maxTrackMaskView
 @property  double _lastInteractionTime
 @property  float exposureBiasMin
 @property  float exposureBiasMax
 @property  float exposureBiasValue
 @property  BOOL suspendTrackFadeOut
 @property  double thumbMaxExtension

  // instance methods
  -[CAMExposureBiasSlider .cxx_destruct]
  -[CAMExposureBiasSlider initWithFrame:]
  -[CAMExposureBiasSlider sizeThatFits:]
  -[CAMExposureBiasSlider layoutSubviews]
  -[CAMExposureBiasSlider tintColorDidChange]
  -[CAMExposureBiasSlider _thumbView]
  -[CAMExposureBiasSlider _minTrackView]
  -[CAMExposureBiasSlider _maxTrackView]
  -[CAMExposureBiasSlider setExposureBiasMin:]
  -[CAMExposureBiasSlider setExposureBiasMax:]
  -[CAMExposureBiasSlider setExposureBiasValue:]
  -[CAMExposureBiasSlider _updateForChangedNormalizedExposureValue]
  -[CAMExposureBiasSlider updateLastInteractionTime]
  -[CAMExposureBiasSlider _normalizedExposureValue]
  -[CAMExposureBiasSlider _sunCenterForNormalizedValue:]
  -[CAMExposureBiasSlider exposureBiasMin]
  -[CAMExposureBiasSlider exposureBiasMax]
  -[CAMExposureBiasSlider exposureBiasValue]
  -[CAMExposureBiasSlider _cancelDelayedDim]
  -[CAMExposureBiasSlider _scheduleDelayedDim]
  -[CAMExposureBiasSlider _animateTrackAlpha:withDuration:]
  -[CAMExposureBiasSlider _trackAlpha]
  -[CAMExposureBiasSlider suspendTrackFadeOut]
  -[CAMExposureBiasSlider _dimTrackForInactivity]
  -[CAMExposureBiasSlider thumbMaxExtension]
  -[CAMExposureBiasSlider setSuspendTrackFadeOut:]
  -[CAMExposureBiasSlider forceTrackDimmed]
  -[CAMExposureBiasSlider _minTrackMaskView]
  -[CAMExposureBiasSlider _maxTrackMaskView]
  -[CAMExposureBiasSlider _lastInteractionTime]


CAMCreativeCameraButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation
 @property  BOOL _overContent
 @property  UIImageView *_circleBackgroundView
 @property  long long layoutStyle
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long orientation
 @property  BOOL active
 @property  BOOL useCompactLayout

  // instance methods
  -[CAMCreativeCameraButton .cxx_destruct]
  -[CAMCreativeCameraButton isActive]
  -[CAMCreativeCameraButton setActive:]
  -[CAMCreativeCameraButton orientation]
  -[CAMCreativeCameraButton setOrientation:]
  -[CAMCreativeCameraButton intrinsicContentSize]
  -[CAMCreativeCameraButton layoutSubviews]
  -[CAMCreativeCameraButton setHighlighted:]
  -[CAMCreativeCameraButton alignmentRectInsets]
  -[CAMCreativeCameraButton hitTest:withEvent:]
  -[CAMCreativeCameraButton setLayoutStyle:]
  -[CAMCreativeCameraButton layoutStyle]
  -[CAMCreativeCameraButton setOrientation:animated:]
  -[CAMCreativeCameraButton _updateImages]
  -[CAMCreativeCameraButton initWithLayoutStyle:]
  -[CAMCreativeCameraButton _circleBackgroundView]
  -[CAMCreativeCameraButton set_circleBackgroundView:]
  -[CAMCreativeCameraButton tappableEdgeInsets]
  -[CAMCreativeCameraButton setTappableEdgeInsets:]
  -[CAMCreativeCameraButton _isOverContent]
  -[CAMCreativeCameraButton initForOverContent]
  -[CAMCreativeCameraButton _commonCAMCreativeCameraButtonInitializationWithStyle:overContent:]
  -[CAMCreativeCameraButton useCompactLayout]
  -[CAMCreativeCameraButton useCompactLayout:]


CAMViewfinderFlipTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  <CAMViewfinderTransitionable> *_transitionableViewfinder
 @property  CAMSnapshotView *_frontSnapshotView
 @property  CAMSnapshotView *_backSnapshotView
 @property  CAMSnapshotView *_targetSnapshotView
 @property  unsigned long _currentAnimationID

  // instance methods
  -[CAMViewfinderFlipTransition .cxx_destruct]
  -[CAMViewfinderFlipTransition _currentAnimationID]
  -[CAMViewfinderFlipTransition _frontSnapshotView]
  -[CAMViewfinderFlipTransition _backSnapshotView]
  -[CAMViewfinderFlipTransition _targetSnapshotView]
  -[CAMViewfinderFlipTransition _setFrontSnapshotView:]
  -[CAMViewfinderFlipTransition _transitionableViewfinder]
  -[CAMViewfinderFlipTransition _getCurrentRadians:targetRadians:forDirection:withAnimation:onFrontSnapshotLayer:]
  -[CAMViewfinderFlipTransition _frontSnapshotTargetRadiansForDirection:fromRadians:]
  -[CAMViewfinderFlipTransition _snapshotFlipAnimationFromValue:toValue:]
  -[CAMViewfinderFlipTransition _backSnapshotTargetRadiansForDirection:frontSnapshotRadians:]
  -[CAMViewfinderFlipTransition _setCurrentAnimationID:]
  -[CAMViewfinderFlipTransition _setBackSnapshotView:]
  -[CAMViewfinderFlipTransition _cleanupFromFlipTransition]
  -[CAMViewfinderFlipTransition _setTargetSnapshotView:]
  -[CAMViewfinderFlipTransition initWithTransitionableViewfinder:]
  -[CAMViewfinderFlipTransition performFlipTransitionWithDirection:completionHandler:]
  -[CAMViewfinderFlipTransition completeTransitionToLivePreviewWithCompletionHandler:]


CAMIdleController : NSObject /usr/lib/libSystem.B.dylib <CAMStillImageCaptureRequestDelegate, CAMVideoCaptureRequestDelegate, CAMPanoramaCaptureRequestDelegate, CAMStillImageCapturingVideoDelegate>
 @property  BOOL updatingIdleTimer
 @property  BOOL idleTimerIndefinitelyDisabled
 @property  NSTimer *enableIdleTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMIdleController init]
  -[CAMIdleController dealloc]
  -[CAMIdleController .cxx_destruct]
  -[CAMIdleController _immediatelyEnableApplicationIdleTimer]
  -[CAMIdleController _enableIdleTimer]
  -[CAMIdleController _setUpdatingIdleTimer:]
  -[CAMIdleController _delayIdleTimerByTimeIntervalUnlessIndefinitelyDisabled:]
  -[CAMIdleController _indefinitelyDisableApplicationIdleTimer]
  -[CAMIdleController _delayIdleTimerByTimeInterval:]
  -[CAMIdleController _isIdleTimerIndefinitelyDisabled]
  -[CAMIdleController isUpdatingIdleTimer]
  -[CAMIdleController _setEnableIdleTimer:]
  -[CAMIdleController _teardownEnableIdleTimer]
  -[CAMIdleController stillImageRequestDidStopCapturingStillImage:]
  -[CAMIdleController videoRequestDidStartCapturing:]
  -[CAMIdleController videoRequestDidStopCapturing:]
  -[CAMIdleController panoramaRequestDidStartCapturing:]
  -[CAMIdleController panoramaRequestDidStopCapturing:interrupted:]
  -[CAMIdleController stillImageRequestWillStartCapturingCTMVideoWithCaptureInFlight:]
  -[CAMIdleController stillImageRequestsDidStopCapturingCTMVideo]
  -[CAMIdleController startUpdatingIdleTimer]
  -[CAMIdleController stopUpdatingIdleTimer]
  -[CAMIdleController timelapseRequestDidStartCapturing]
  -[CAMIdleController timelapseRequestDidResumeCapturing]
  -[CAMIdleController timelapseRequestDidStopCapturing]


CAMOrientationUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMOrientationUtilities _imageOrientationFromCaptureOrientation:usingFrontCamera:]
  +[CAMOrientationUtilities imageOrientationForVideoRequest:]
  +[CAMOrientationUtilities imageOrientationOfResult:withCaptureDevice:captureOrientation:]
  +[CAMOrientationUtilities panoramaCaptureOrientationFromCaptureOrientation:]
  +[CAMOrientationUtilities captureOrientationFromPanoramaCaptureOrientation:]


CAMZoomSlider : UISlider /System/Library/Frameworks/Foundation.framework/Foundation
 @property  NSTimer *_visibilityTimer
 @property  BOOL _autozooming
 @property  BOOL minimumAutozooming
 @property  BOOL maximumAutozooming
 @property  UIView *_minTrackMaskView
 @property  UIView *_maxTrackMaskView
 @property  long long layoutStyle
 @property  <CAMZoomSliderDelegate> *delegate
 @property  {UIEdgeInsets=dddd} alignmentRectInsets
 @property  BOOL autozooming
 @property  BOOL visibilityTimerSuspended
 @property  long long orientation

  // class methods
  +[CAMZoomSlider shouldFadeOutZoomSliderForLayoutStyle:]

  // instance methods
  -[CAMZoomSlider dealloc]
  -[CAMZoomSlider initWithCoder:]
  -[CAMZoomSlider delegate]
  -[CAMZoomSlider setDelegate:]
  -[CAMZoomSlider .cxx_destruct]
  -[CAMZoomSlider orientation]
  -[CAMZoomSlider setOrientation:]
  -[CAMZoomSlider intrinsicContentSize]
  -[CAMZoomSlider initWithFrame:]
  -[CAMZoomSlider layoutSubviews]
  -[CAMZoomSlider alignmentRectInsets]
  -[CAMZoomSlider setAlignmentRectInsets:]
  -[CAMZoomSlider setLayoutStyle:]
  -[CAMZoomSlider layoutStyle]
  -[CAMZoomSlider setOrientation:animated:]
  -[CAMZoomSlider beginTrackingWithTouch:withEvent:]
  -[CAMZoomSlider cancelTrackingWithEvent:]
  -[CAMZoomSlider continueTrackingWithTouch:withEvent:]
  -[CAMZoomSlider endTrackingWithTouch:withEvent:]
  -[CAMZoomSlider trackRectForBounds:]
  -[CAMZoomSlider thumbRectForBounds:trackRect:value:]
  -[CAMZoomSlider minimumValueImageRectForBounds:]
  -[CAMZoomSlider maximumValueImageRectForBounds:]
  -[CAMZoomSlider _handleTouchUpInside:]
  -[CAMZoomSlider initWithLayoutStyle:]
  -[CAMZoomSlider _minTrackMaskView]
  -[CAMZoomSlider _maxTrackMaskView]
  -[CAMZoomSlider _updateForLayoutStyle]
  -[CAMZoomSlider _commonCAMZoomSliderInitializationWithLayoutStyle:]
  -[CAMZoomSlider _thumbCenterXForValue:trackRect:]
  -[CAMZoomSlider _thumbCenterMinimumXForTrackRect:]
  -[CAMZoomSlider _thumbCenterMaximumXForTrackRect:]
  -[CAMZoomSlider locationOfTouch:]
  -[CAMZoomSlider _setMinimumAutozooming:]
  -[CAMZoomSlider _setMaximumAutozooming:]
  -[CAMZoomSlider setVisibilityTimerSuspended:]
  -[CAMZoomSlider _startVisibilityTimer]
  -[CAMZoomSlider isAutozooming]
  -[CAMZoomSlider isMinimumAutozooming]
  -[CAMZoomSlider isMaximumAutozooming]
  -[CAMZoomSlider _updateAutozooming]
  -[CAMZoomSlider _beginAutozooming]
  -[CAMZoomSlider _endAutozooming]
  -[CAMZoomSlider isVisibilityTimerSuspended]
  -[CAMZoomSlider _stopVisibilityTimer]
  -[CAMZoomSlider _hideZoomSlider:]
  -[CAMZoomSlider _makeInvisibleAnimationDuration:]
  -[CAMZoomSlider _valueForThumbCenterX:trackRect:]
  -[CAMZoomSlider shouldHideForExpiredVisibilityTimer]
  -[CAMZoomSlider makeVisibleAnimated:]
  -[CAMZoomSlider makeInvisibleAnimated:]
  -[CAMZoomSlider _visibilityTimer]
  -[CAMZoomSlider _isAutozooming]
  -[CAMZoomSlider _setAutozooming:]


CAMRampToVideoZoomFactorCommand : CAMCaptureCommand
 @property  double _videoZoomFactor
 @property  float _rate
 @property  double _duration

  // instance methods
  -[CAMRampToVideoZoomFactorCommand copyWithZone:]
  -[CAMRampToVideoZoomFactorCommand encodeWithCoder:]
  -[CAMRampToVideoZoomFactorCommand initWithCoder:]
  -[CAMRampToVideoZoomFactorCommand _duration]
  -[CAMRampToVideoZoomFactorCommand _rate]
  -[CAMRampToVideoZoomFactorCommand _videoZoomFactor]
  -[CAMRampToVideoZoomFactorCommand executeWithContext:]
  -[CAMRampToVideoZoomFactorCommand initWithVideoZoomFactor:rate:]
  -[CAMRampToVideoZoomFactorCommand initWithVideoZoomFactor:duration:]


CAMPanoramaConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCoding>
 @property  NSDictionary *_maxWidthPerDevice
 @property  long long sampleBufferWidth
 @property  long long sampleBufferHeight
 @property  {?=qiIq} minimumFramerate
 @property  {?=qiIq} maximumFramerate
 @property  int ringBufferSize
 @property  long long maxWidth

  // class methods
  +[CAMPanoramaConfiguration sharedInstance]

  // instance methods
  -[CAMPanoramaConfiguration encodeWithCoder:]
  -[CAMPanoramaConfiguration initWithCoder:]
  -[CAMPanoramaConfiguration .cxx_destruct]
  -[CAMPanoramaConfiguration maxWidth]
  -[CAMPanoramaConfiguration initWithACTConfiguration:]
  -[CAMPanoramaConfiguration _maxWidthPerDevice]
  -[CAMPanoramaConfiguration maxWidthForDevice:]
  -[CAMPanoramaConfiguration sampleBufferWidth]
  -[CAMPanoramaConfiguration sampleBufferHeight]
  -[CAMPanoramaConfiguration minimumFramerate]
  -[CAMPanoramaConfiguration maximumFramerate]
  -[CAMPanoramaConfiguration ringBufferSize]
  -[CAMPanoramaConfiguration set_maxWidthPerDevice:]


CAMQueryVideoDimensionsCommand : CAMCaptureCommand
 @property  @? _completionBlock

  // instance methods
  -[CAMQueryVideoDimensionsCommand copyWithZone:]
  -[CAMQueryVideoDimensionsCommand encodeWithCoder:]
  -[CAMQueryVideoDimensionsCommand initWithCoder:]
  -[CAMQueryVideoDimensionsCommand .cxx_destruct]
  -[CAMQueryVideoDimensionsCommand _completionBlock]
  -[CAMQueryVideoDimensionsCommand initWithCompletionBlock:]
  -[CAMQueryVideoDimensionsCommand _setCompletionBlock:]
  -[CAMQueryVideoDimensionsCommand executeWithContext:]


CAMBottomBar : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMExpandableMenuButtonDelegate, CEKApertureButtonDelegate>
 @property  CAMExpandableMenuButton *_expandedMenuButton
 @property  long long layoutStyle
 @property  long long backgroundStyle
 @property  UIView *backgroundView
 @property  <CAMControlVisibilityUpdateDelegate> *visibilityUpdateDelegate
 @property  CUShutterButton *shutterButton
 @property  CUShutterButton *stillDuringVideoButton
 @property  CAMModeDial *modeDial
 @property  CAMImageWell *imageWell
 @property  UIButton *reviewButton
 @property  CAMCreativeCameraButton *creativeCameraButton
 @property  PUReviewScreenDoneButton *doneButton
 @property  CAMFlipButton *flipButton
 @property  CAMFlashButton *flashButton
 @property  CAMHDRButton *HDRButton
 @property  CAMTimerButton *timerButton
 @property  CAMLivePhotoButton *livePhotoButton
 @property  CEKApertureButton *apertureButton
 @property  CAMUtilityBar *utilityBar
 @property  double utilityBarExtensionDistance

  // class methods
  +[CAMBottomBar wantsVerticalBarForLayoutStyle:]
  +[CAMBottomBar shutterButtonAlignmentRectInBounds:forLayoutStyle:]

  // instance methods
  -[CAMBottomBar initWithCoder:]
  -[CAMBottomBar .cxx_destruct]
  -[CAMBottomBar initWithFrame:]
  -[CAMBottomBar backgroundView]
  -[CAMBottomBar layoutSubviews]
  -[CAMBottomBar pointInside:withEvent:]
  -[CAMBottomBar hitTest:withEvent:]
  -[CAMBottomBar setLayoutStyle:]
  -[CAMBottomBar layoutStyle]
  -[CAMBottomBar setBackgroundStyle:]
  -[CAMBottomBar backgroundStyle]
  -[CAMBottomBar setDoneButton:]
  -[CAMBottomBar doneButton]
  -[CAMBottomBar setBackgroundStyle:animated:]
  -[CAMBottomBar shutterButton]
  -[CAMBottomBar setShutterButton:]
  -[CAMBottomBar initWithLayoutStyle:]
  -[CAMBottomBar reviewButton]
  -[CAMBottomBar setReviewButton:]
  -[CAMBottomBar apertureButtonNeedsLayout:animated:]
  -[CAMBottomBar livePhotoButton]
  -[CAMBottomBar flipButton]
  -[CAMBottomBar imageWell]
  -[CAMBottomBar creativeCameraButton]
  -[CAMBottomBar modeDial]
  -[CAMBottomBar touchingRecognizersToCancel]
  -[CAMBottomBar hudItemForAccessibilityHUDManager:]
  -[CAMBottomBar selectedByAccessibilityHUDManager:]
  -[CAMBottomBar _commonCAMBottomBarInitializationInitWithLayoutStyle:]
  -[CAMBottomBar _updateImageWellTappableEdgeInsets]
  -[CAMBottomBar _updateFlipButtonTappableEdgeInsets]
  -[CAMBottomBar _updateCreativeCameraButtonTappableEdgeInsets]
  -[CAMBottomBar _ensureSubviewOrdering]
  -[CAMBottomBar visibilityUpdateDelegate]
  -[CAMBottomBar utilityBar]
  -[CAMBottomBar stillDuringVideoButton]
  -[CAMBottomBar utilityBarExtensionDistance]
  -[CAMBottomBar _opacityForBackgroundStyle:]
  -[CAMBottomBar _layoutShutterButtonForLayoutStyle:]
  -[CAMBottomBar _layoutStillDuringVideoButtonForLayoutStyle:]
  -[CAMBottomBar _layoutImageWellForLayoutStyle:]
  -[CAMBottomBar _layoutReviewButtonForLayoutStyle:]
  -[CAMBottomBar _layoutCreativeCameraButtonForLayoutStyle:]
  -[CAMBottomBar _layoutModeDialForLayoutStyle:]
  -[CAMBottomBar _layoutFlipButtonForLayoutStyle:]
  -[CAMBottomBar _layoutUtilityBarForLayoutStyle:]
  -[CAMBottomBar _layoutDoneButtonForLayoutStyle:]
  -[CAMBottomBar _currentMenuButtons]
  -[CAMBottomBar _expandedMenuButton]
  -[CAMBottomBar _layoutMenuButtons:apply:withExpandedMenuButton:collapsingMenuButton:collapsingFrame:]
  -[CAMBottomBar expandedFrameForMenuButton:]
  -[CAMBottomBar apertureButton]
  -[CAMBottomBar collapsedFrameForMenuButton:]
  -[CAMBottomBar _setExpandedMenuButton:]
  -[CAMBottomBar _updateControlVisibilityAnimated:]
  -[CAMBottomBar _iterateViewsInHUDManager:forHUDItem:]
  -[CAMBottomBar collapseMenuButton:animated:]
  -[CAMBottomBar expandMenuButton:animated:]
  -[CAMBottomBar setStillDuringVideoButton:]
  -[CAMBottomBar setModeDial:]
  -[CAMBottomBar setImageWell:]
  -[CAMBottomBar setCreativeCameraButton:]
  -[CAMBottomBar setFlipButton:]
  -[CAMBottomBar setFlashButton:]
  -[CAMBottomBar setHDRButton:]
  -[CAMBottomBar setTimerButton:]
  -[CAMBottomBar setLivePhotoButton:]
  -[CAMBottomBar setApertureButton:]
  -[CAMBottomBar setUtilityBar:]
  -[CAMBottomBar setUtilityBarExtensionDistance:]
  -[CAMBottomBar setVisibilityUpdateDelegate:]
  -[CAMBottomBar flashButton]
  -[CAMBottomBar HDRButton]
  -[CAMBottomBar timerButton]


CAMCaptureEncodingUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMCaptureEncodingUtilities selectVideoCodecFromAvailableCodecs:withBehavior:]
  +[CAMCaptureEncodingUtilities selectPhotoCodecFromAvailableCodecs:withBehavior:]


CAMLevelIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMLevelViewModelChangeObserver>
 @property  CAMLevelCrosshair *_goalCrosshair
 @property  CAMLevelCrosshair *_userCrosshair
 @property  CAMLevelViewModel *viewModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMLevelIndicatorView initWithCoder:]
  -[CAMLevelIndicatorView .cxx_destruct]
  -[CAMLevelIndicatorView initWithFrame:]
  -[CAMLevelIndicatorView layoutSubviews]
  -[CAMLevelIndicatorView viewModel]
  -[CAMLevelIndicatorView initWithViewModel:]
  -[CAMLevelIndicatorView _commonCAMLevelIndicatorViewInitializationWithViewModel:]
  -[CAMLevelIndicatorView _updateCrosshairAlphasWithAlpha:indicatorMode:]
  -[CAMLevelIndicatorView _updateCrosshairHighlightWithOffset:]
  -[CAMLevelIndicatorView _userCrosshair]
  -[CAMLevelIndicatorView _goalCrosshair]
  -[CAMLevelIndicatorView observable:didPublishChange:withContext:]


CAMTransientAsset : NSObject /usr/lib/libSystem.B.dylib <PUTransientDisplayAsset>
 @property  NSString *uuid
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  long long playbackStyle
 @property  long long playbackVariation
 @property  unsigned long pixelWidth
 @property  unsigned long pixelHeight
 @property  CLLocation *location
 @property  double duration
 @property  BOOL favorite
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  double aspectRatio
 @property  NSString *localizedGeoDescription
 @property  BOOL isLivePhoto
 @property  BOOL canPlayPhotoIris
 @property  BOOL canPlayLoopingVideo
 @property  BOOL isPhotoIrisPlaceholder
 @property  {?=qiIq} photoIrisStillDisplayTime
 @property  {?=qiIq} photoIrisVideoDuration
 @property  BOOL hasPhotoColorAdjustments
 @property  NSURL *persistenceURL
 @property  UIImage *placeholderImage
 @property  BOOL HDR
 @property  BOOL representsBurst
 @property  NSString *burstIdentifier
 @property  unsigned long numberOfRepresentedAssets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *localCreationDate
 @property  BOOL isTemporaryPlaceholder
 @property  NSString *uniformTypeIdentifier
 @property  unsigned long originalFilesize
 @property  BOOL isAnimatedImage
 @property  BOOL livePhoto
 @property  unsigned long deferredLogInfo
 @property  {?=qiIq} videoKeyFrameSourceTime

  // instance methods
  -[CAMTransientAsset init]
  -[CAMTransientAsset copyWithZone:]
  -[CAMTransientAsset .cxx_destruct]
  -[CAMTransientAsset uuid]
  -[CAMTransientAsset duration]
  -[CAMTransientAsset modificationDate]
  -[CAMTransientAsset location]
  -[CAMTransientAsset creationDate]
  -[CAMTransientAsset aspectRatio]
  -[CAMTransientAsset mediaType]
  -[CAMTransientAsset localCreationDate]
  -[CAMTransientAsset initWithUUID:]
  -[CAMTransientAsset placeholderImage]
  -[CAMTransientAsset isFavorite]
  -[CAMTransientAsset isAnimatedImage]
  -[CAMTransientAsset pixelWidth]
  -[CAMTransientAsset pixelHeight]
  -[CAMTransientAsset playbackStyle]
  -[CAMTransientAsset uniformTypeIdentifier]
  -[CAMTransientAsset isPhotoIrisPlaceholder]
  -[CAMTransientAsset canPlayPhotoIris]
  -[CAMTransientAsset photoIrisStillDisplayTime]
  -[CAMTransientAsset photoIrisVideoDuration]
  -[CAMTransientAsset originalFilesize]
  -[CAMTransientAsset burstIdentifier]
  -[CAMTransientAsset playbackVariation]
  -[CAMTransientAsset isLivePhoto]
  -[CAMTransientAsset isHDR]
  -[CAMTransientAsset representsBurst]
  -[CAMTransientAsset canPlayLoopingVideo]
  -[CAMTransientAsset hasPhotoColorAdjustments]
  -[CAMTransientAsset mediaSubtypes]
  -[CAMTransientAsset localizedGeoDescription]
  -[CAMTransientAsset isContentEqualTo:]
  -[CAMTransientAsset isTemporaryPlaceholder]
  -[CAMTransientAsset deferredLogInfo]
  -[CAMTransientAsset numberOfRepresentedAssets]
  -[CAMTransientAsset persistenceURL]
  -[CAMTransientAsset initWithAsset:uuid:]
  -[CAMTransientAsset _populateStillImageTransientAssetFromConvertible:]
  -[CAMTransientAsset _populateVideoTransientAssetFromConvertible:]
  -[CAMTransientAsset initWithAsset:convertible:]


CAMSetVideoOrientationCommand : CAMCaptureCommand
 @property  long long _captureOrientation

  // instance methods
  -[CAMSetVideoOrientationCommand copyWithZone:]
  -[CAMSetVideoOrientationCommand encodeWithCoder:]
  -[CAMSetVideoOrientationCommand initWithCoder:]
  -[CAMSetVideoOrientationCommand executeWithContext:]
  -[CAMSetVideoOrientationCommand _captureOrientation]
  -[CAMSetVideoOrientationCommand _videoOrientationForCaptureOrientation:]
  -[CAMSetVideoOrientationCommand initWithCaptureOrientation:]


CAMLowLightModeCommand : CAMCaptureCommand
 @property  long long _lowLightMode

  // instance methods
  -[CAMLowLightModeCommand copyWithZone:]
  -[CAMLowLightModeCommand encodeWithCoder:]
  -[CAMLowLightModeCommand initWithCoder:]
  -[CAMLowLightModeCommand executeWithContext:]
  -[CAMLowLightModeCommand _lowLightMode]
  -[CAMLowLightModeCommand initWithLowLightMode:]


CAMPreviewFilteredRenderingEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMPreviewFilteredRenderingEnabledCommand copyWithZone:]
  -[CAMPreviewFilteredRenderingEnabledCommand encodeWithCoder:]
  -[CAMPreviewFilteredRenderingEnabledCommand initWithCoder:]
  -[CAMPreviewFilteredRenderingEnabledCommand _isEnabled]
  -[CAMPreviewFilteredRenderingEnabledCommand executeWithContext:]
  -[CAMPreviewFilteredRenderingEnabledCommand initWithSubcommands:]
  -[CAMPreviewFilteredRenderingEnabledCommand initWithFilteredRenderingEnabled:]


CAMDisabledModeOverlayView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_messageLabel

  // instance methods
  -[CAMDisabledModeOverlayView .cxx_destruct]
  -[CAMDisabledModeOverlayView initWithFrame:]
  -[CAMDisabledModeOverlayView layoutSubviews]
  -[CAMDisabledModeOverlayView _messageLabel]


CAMDialGradientView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMDialGradientView initWithFrame:]
  -[CAMDialGradientView drawRect:]


CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *contentView

  // class methods
  +[CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView defaultContentColor]

  // instance methods
  -[CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView .cxx_destruct]
  -[CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView contentView]
  -[CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView initWithFrame:]
  -[CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView layoutSubviews]


CAMZoomControlUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMZoomControlUtilities layoutZoomControl:forLayoutStyle:bottomBarAlignmentRect:bottomBarTransparent:shutterButtonAlignmentRect:previewViewAlignmentRect:]
  +[CAMZoomControlUtilities piecewiseLinearMappingForX:fromXValues:toYValues:]
  +[CAMZoomControlUtilities linearMappingForX:x1:y1:x2:y2:clamp:]
  +[CAMZoomControlUtilities layoutZoomControl:forLayoutStyle:bottomBar:previewView:]
  +[CAMZoomControlUtilities zoomControlDisplayValueForZoomFactor:mode:device:videoConfiguration:]


CAMAdditiveAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *_values
 @property  NSMutableDictionary *_animations
 @property  CADisplayLink *_displayLink
 @property  <CAMAdditiveAnimatorDelegate> *delegate
 @property  BOOL animating

  // instance methods
  -[CAMAdditiveAnimator init]
  -[CAMAdditiveAnimator dealloc]
  -[CAMAdditiveAnimator setValue:forKey:]
  -[CAMAdditiveAnimator delegate]
  -[CAMAdditiveAnimator setDelegate:]
  -[CAMAdditiveAnimator _values]
  -[CAMAdditiveAnimator .cxx_destruct]
  -[CAMAdditiveAnimator valueForKey:]
  -[CAMAdditiveAnimator isAnimating]
  -[CAMAdditiveAnimator _animations]
  -[CAMAdditiveAnimator _displayLink]
  -[CAMAdditiveAnimator _updateDisplayLink]
  -[CAMAdditiveAnimator _handleDisplayLinkFired:]
  -[CAMAdditiveAnimator set_displayLink:]
  -[CAMAdditiveAnimator setValue:forKey:duration:timingCurve:]
  -[CAMAdditiveAnimator isAnimatingForKey:]


CAMAdditiveAnimation : NSObject /usr/lib/libSystem.B.dylib
 @property  double _toValue
 @property  double _fromValue
 @property  double _duration
 @property  CAMediaTimingFunction *_curve
 @property  CAMAdditiveAnimation *_fromAnimation
 @property  double _startTime
 @property  double _lastTime
 @property  double value
 @property  BOOL finished

  // class methods
  +[CAMAdditiveAnimation animationToValue:fromAnimation:duration:curve:]
  +[CAMAdditiveAnimation animationToValue:fromValue:duration:curve:]

  // instance methods
  -[CAMAdditiveAnimation .cxx_destruct]
  -[CAMAdditiveAnimation value]
  -[CAMAdditiveAnimation isFinished]
  -[CAMAdditiveAnimation _duration]
  -[CAMAdditiveAnimation _startTime]
  -[CAMAdditiveAnimation _curve]
  -[CAMAdditiveAnimation _fromValue]
  -[CAMAdditiveAnimation _toValue]
  -[CAMAdditiveAnimation _lastTime]
  -[CAMAdditiveAnimation _fromAnimation]
  -[CAMAdditiveAnimation updateWithTimestamp:]
  -[CAMAdditiveAnimation _setLastTime:]
  -[CAMAdditiveAnimation _setStartTime:]
  -[CAMAdditiveAnimation set_fromValue:]
  -[CAMAdditiveAnimation set_fromAnimation:]


CAMVideoLivePhotoMetadataWritingEnabledCommand : CAMCaptureCommand
 @property  BOOL _livePhotoMetadataWritingEnabled

  // instance methods
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand copyWithZone:]
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand encodeWithCoder:]
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand initWithCoder:]
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand executeWithContext:]
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand isLivePhotoMetadataWritingEnabled]
  -[CAMVideoLivePhotoMetadataWritingEnabledCommand initWithEnabled:]


CAMStopVideoRecordingCommand : CAMCaptureCommand
  // instance methods
  -[CAMStopVideoRecordingCommand executeWithContext:]


CAMPanoramaLevelView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *lineView

  // instance methods
  -[CAMPanoramaLevelView .cxx_destruct]
  -[CAMPanoramaLevelView intrinsicContentSize]
  -[CAMPanoramaLevelView initWithFrame:]
  -[CAMPanoramaLevelView layoutSubviews]
  -[CAMPanoramaLevelView hitTest:withEvent:]
  -[CAMPanoramaLevelView lineView]


CAMStillImageDepthDataDeliveryEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMStillImageDepthDataDeliveryEnabledCommand copyWithZone:]
  -[CAMStillImageDepthDataDeliveryEnabledCommand encodeWithCoder:]
  -[CAMStillImageDepthDataDeliveryEnabledCommand initWithCoder:]
  -[CAMStillImageDepthDataDeliveryEnabledCommand _isEnabled]
  -[CAMStillImageDepthDataDeliveryEnabledCommand executeWithContext:]
  -[CAMStillImageDepthDataDeliveryEnabledCommand initWithSubcommands:]
  -[CAMStillImageDepthDataDeliveryEnabledCommand initWithDepthDataDeliveryEnabled:]


CAMCameraRollTestHarness : CAMPerformanceTestHarness
 @property  BOOL awaitPreload
 @property  double settlingDelay
 @property  BOOL testingWarmPresentation
 @property  BOOL testingAnimation
 @property  CAMViewfinderViewController *viewfinderViewController

  // instance methods
  -[CAMCameraRollTestHarness .cxx_destruct]
  -[CAMCameraRollTestHarness startTesting]
  -[CAMCameraRollTestHarness stopTesting]
  -[CAMCameraRollTestHarness viewfinderViewController]
  -[CAMCameraRollTestHarness initWithTestName:viewfinderViewController:testingAnimation:testingWarmPresentation:awaitPreload:settlingDelay:]
  -[CAMCameraRollTestHarness isTestingAnimation]
  -[CAMCameraRollTestHarness awaitPreload]
  -[CAMCameraRollTestHarness testingWarmPresentation]
  -[CAMCameraRollTestHarness settlingDelay]
  -[CAMCameraRollTestHarness _presentCameraRollAnimated]
  -[CAMCameraRollTestHarness _dismissCameraRollImmediately]
  -[CAMCameraRollTestHarness _handlePUDisplayLinkStarted:]


CAMCaptureEngineDevice : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMCaptureEngine *_captureEngine
 @property  CAMMemoizationCache *_videoDeviceFormatForVideoConfiguration
 @property  CAMMemoizationCache *_videoSessionPresetForVideoConfiguration
 @property  AVCaptureDeviceFormat *_cachedPanoramaDeviceFormat
 @property  AVCaptureDeviceFormat *_cachedPortraitDeviceFormat
 @property  AVCaptureDevice *captureDevice
 @property  AVCaptureDeviceInput *captureDeviceInput

  // instance methods
  -[CAMCaptureEngineDevice .cxx_destruct]
  -[CAMCaptureEngineDevice captureDevice]
  -[CAMCaptureEngineDevice _videoDeviceFormatForVideoConfiguration]
  -[CAMCaptureEngineDevice _keyForVideoConfiguration:videoEncodingBehavior:]
  -[CAMCaptureEngineDevice _videoSessionPresetForVideoConfiguration]
  -[CAMCaptureEngineDevice _portraitModeDeviceFormat]
  -[CAMCaptureEngineDevice _highestQualityDeviceFormatForVideoConfiguration:videoEncodingBehavior:]
  -[CAMCaptureEngineDevice _panoramaDeviceFormatForConfiguration:]
  -[CAMCaptureEngineDevice _highestQualitySessionPresetForVideoConfiguration:videoEncodingBehavior:]
  -[CAMCaptureEngineDevice _timelapseSessionPreset]
  -[CAMCaptureEngineDevice _portraitModeSessionPreset]
  -[CAMCaptureEngineDevice initWithEngine:captureDevice:]
  -[CAMCaptureEngineDevice captureDeviceInput]
  -[CAMCaptureEngineDevice videoDeviceFormatForGraphConfiguration:videoEncodingBehavior:]
  -[CAMCaptureEngineDevice videoDevicePresetForGraphConfiguration:videoEncodingBehavior:]
  -[CAMCaptureEngineDevice _captureEngine]
  -[CAMCaptureEngineDevice _cachedPanoramaDeviceFormat]
  -[CAMCaptureEngineDevice _cachedPortraitDeviceFormat]


CAMIOSurfaceWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  ^v surface

  // instance methods
  -[CAMIOSurfaceWrapper dealloc]
  -[CAMIOSurfaceWrapper initWithIOSurface:]
  -[CAMIOSurfaceWrapper surface]


CAMDisplayLinkTarget : NSObject /usr/lib/libSystem.B.dylib
 @property  @? handler

  // instance methods
  -[CAMDisplayLinkTarget handler]
  -[CAMDisplayLinkTarget .cxx_destruct]
  -[CAMDisplayLinkTarget initWithHandler:]
  -[CAMDisplayLinkTarget displayLinkDidFire:]


CAMApplication : UIApplication /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAMPerformanceTestHarness *currentTestHarness

  // instance methods
  -[CAMApplication .cxx_destruct]
  -[CAMApplication _extendLaunchTest]
  -[CAMApplication supportedInterfaceOrientationsForWindow:]
  -[CAMApplication prepareForDefaultImageSnapshotForScreen:]
  -[CAMApplication runTest:options:]
  -[CAMApplication _registerPreviewStartBlock:]
  -[CAMApplication currentTestHarness]
  -[CAMApplication setCurrentTestHarness:]
  -[CAMApplication runTakePictureTestWithTestName:options:prototype:]
  -[CAMApplication runTakePictureFrontPortraitTest:options:prototype:]
  -[CAMApplication runTakePictureTestWithFrontCamera:options:prototype:]
  -[CAMApplication runTakePicturePortraitTest:options:prototype:]
  -[CAMApplication runPresentTestWithName:options:]
  -[CAMApplication runSwitchToPortraitFrontWithTestWithName:options:]
  -[CAMApplication runSwitchCamerasTestWithName:options:]
  -[CAMApplication runSwitchModesTestWithName:options:]
  -[CAMApplication _configureExtendedLaunchTestIfNeeded]
  -[CAMApplication willCloseViewfinderForReason:]
  -[CAMApplication didCloseViewfinderForReason:]
  -[CAMApplication willOpenViewfinderForReason:]
  -[CAMApplication didOpenViewfinderForReason:]
  -[CAMApplication didChangeToMode:device:]


CAMVideoRecordingCameraSelectionBehaviorCommand : CAMCaptureCommand
 @property  BOOL _cameraSwitchingEnabled

  // instance methods
  -[CAMVideoRecordingCameraSelectionBehaviorCommand copyWithZone:]
  -[CAMVideoRecordingCameraSelectionBehaviorCommand encodeWithCoder:]
  -[CAMVideoRecordingCameraSelectionBehaviorCommand initWithCoder:]
  -[CAMVideoRecordingCameraSelectionBehaviorCommand executeWithContext:]
  -[CAMVideoRecordingCameraSelectionBehaviorCommand _isCameraSwitchingEnabled]
  -[CAMVideoRecordingCameraSelectionBehaviorCommand initWithCameraSwitchingEnabled:]


CAMCounterRotatingLayer : CALayer /System/Library/Frameworks/CoreImage.framework/CoreImage
  // instance methods
  -[CAMCounterRotatingLayer addAnimation:forKey:]


CAMPanoramaPaintingStatus : NSObject /usr/lib/libSystem.B.dylib
 @property  double speed
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} cropRectangle

  // instance methods
  -[CAMPanoramaPaintingStatus speed]
  -[CAMPanoramaPaintingStatus initWithSpeed:cropRectangle:]
  -[CAMPanoramaPaintingStatus cropRectangle]


CAMSecureWindow : UIWindow /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[CAMSecureWindow _isSecure]


CAMTouchingGestureRecognizer : UIGestureRecognizer /System/Library/Frameworks/Foundation.framework/Foundation
 @property  unsigned long _touchCount

  // instance methods
  -[CAMTouchingGestureRecognizer setEnabled:]
  -[CAMTouchingGestureRecognizer reset]
  -[CAMTouchingGestureRecognizer touchesBegan:withEvent:]
  -[CAMTouchingGestureRecognizer touchesEnded:withEvent:]
  -[CAMTouchingGestureRecognizer touchesCancelled:withEvent:]
  -[CAMTouchingGestureRecognizer _touchCount]
  -[CAMTouchingGestureRecognizer cancelGesture]
  -[CAMTouchingGestureRecognizer _incrementTouchesBy:]
  -[CAMTouchingGestureRecognizer _decrementTouchesBy:]
  -[CAMTouchingGestureRecognizer _setTouchCount:]
  -[CAMTouchingGestureRecognizer _updateStateFromTouchCount:toTouchCount:]


CAMCaptureMetadataUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMCaptureMetadataUtilities metadataFromRequest:]
  +[CAMCaptureMetadataUtilities preciseCaptureDateFromStillImageMetadata:]
  +[CAMCaptureMetadataUtilities removeUnwantedKeysForPersistenceFromMetadata:]
  +[CAMCaptureMetadataUtilities metadataFromPanoramaRequest:]


CAMPreviewContainerMaskingView : UIView /System/Library/Frameworks/Foundation.framework/Foundation

CAMStillImageCaptureCommand : CAMCaptureCommand
 @property  CAMStillImageCaptureRequest *_request

  // instance methods
  -[CAMStillImageCaptureCommand copyWithZone:]
  -[CAMStillImageCaptureCommand encodeWithCoder:]
  -[CAMStillImageCaptureCommand initWithCoder:]
  -[CAMStillImageCaptureCommand .cxx_destruct]
  -[CAMStillImageCaptureCommand _request]
  -[CAMStillImageCaptureCommand initWithRequest:]
  -[CAMStillImageCaptureCommand executeWithContext:]
  -[CAMStillImageCaptureCommand _videoOrientationForCaptureOrientation:]
  -[CAMStillImageCaptureCommand _sanitizeCapturePhotoSettings:withContext:]


CAMIrisVideoJob : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSURL *videoURL
 @property  NSString *stillImagePersistenceUUID
 @property  NSString *videoPersistenceUUID
 @property  NSString *irisIdentifier
 @property  long long captureDevice
 @property  long long captureOrientation
 @property  {?=qiIq} duration
 @property  {?=qiIq} stillImageDisplayTime
 @property  double captureTime
 @property  NSError *captureError
 @property  NSString *filterName
 @property  NSURL *filteredVideoURL
 @property  long long persistenceOptions
 @property  long long temporaryPersistenceOptions
 @property  NSString *bundleIdentifier
 @property  BOOL CTMVideo

  // class methods
  +[CAMIrisVideoJob supportsSecureCoding]

  // instance methods
  -[CAMIrisVideoJob encodeWithCoder:]
  -[CAMIrisVideoJob initWithCoder:]
  -[CAMIrisVideoJob .cxx_destruct]
  -[CAMIrisVideoJob bundleIdentifier]
  -[CAMIrisVideoJob duration]
  -[CAMIrisVideoJob filterName]
  -[CAMIrisVideoJob videoURL]
  -[CAMIrisVideoJob captureDevice]
  -[CAMIrisVideoJob captureError]
  -[CAMIrisVideoJob captureOrientation]
  -[CAMIrisVideoJob isCTMVideo]
  -[CAMIrisVideoJob stillImagePersistenceUUID]
  -[CAMIrisVideoJob videoPersistenceUUID]
  -[CAMIrisVideoJob initWithVideoURL:stillImagePersistenceUUID:videoPersistenceUUID:irisIdentifier:captureDevice:captureOrientation:duration:stillImageDisplayTime:captureTime:captureError:filterName:filteredVideoURL:persistenceOptions:temporaryPersistenceOptions:bundleIdentifier:]
  -[CAMIrisVideoJob irisIdentifier]
  -[CAMIrisVideoJob stillImageDisplayTime]
  -[CAMIrisVideoJob captureTime]
  -[CAMIrisVideoJob filteredVideoURL]
  -[CAMIrisVideoJob persistenceOptions]
  -[CAMIrisVideoJob setPersistenceOptions:]
  -[CAMIrisVideoJob temporaryPersistenceOptions]
  -[CAMIrisVideoJob setTemporaryPersistenceOptions:]


CAMPowerController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *_assertionsByIdentifier
 @property  NSObject<OS_dispatch_queue> *_powerControllerQueue
 @property  unsigned long _backgroundTaskIdentifier
 @property  BOOL _isBackgrounded
 @property  int _powerPressureNotificationToken
 @property  unsigned int _powerControllerQueue_powerPressureLevel

  // instance methods
  -[CAMPowerController init]
  -[CAMPowerController dealloc]
  -[CAMPowerController .cxx_destruct]
  -[CAMPowerController _applicationWillResignActive:]
  -[CAMPowerController _backgroundTaskIdentifier]
  -[CAMPowerController _applicationWillEnterForeground:]
  -[CAMPowerController _assertionsByIdentifier]
  -[CAMPowerController _powerPressureNotificationToken]
  -[CAMPowerController _isBackgrounded]
  -[CAMPowerController _powerControllerQueue]
  -[CAMPowerController generateAssertionIdentifier]
  -[CAMPowerController _powerControllerQueue_setPowerPressureLevel:]
  -[CAMPowerController _setBackgrounded:]
  -[CAMPowerController _endBackgroundTaskIfNeeded]
  -[CAMPowerController _startBackgroundTaskIfNeeded]
  -[CAMPowerController _powerControllerQueue_powerPressureLevel]
  -[CAMPowerController addAssertionForIndentifier:withReason:]
  -[CAMPowerController removeAssertionForIdentifier:withReason:]
  -[CAMPowerController powerPressureLevel]


CAMControlDrawer : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMControlDrawerMenuButtonDelegate, UIScrollViewDelegate, CAMAccessibilityHUDItemProvider, CAMBarsAccessibilityHUDManagerGestureProvider>
 @property  NSMutableDictionary *_controlMap
 @property  CAMControlDrawerButton<CAMControlDrawerExpandableButton> *_expandedControl
 @property  UIScrollView *_scrollView
 @property  long long layoutStyle
 @property  <CAMControlDrawerDelegate> *delegate
 @property  <CAMControlDrawerPresentationDelegate> *presentationDelegate
 @property  NSString *contentSize
 @property  NSArray *visibleControlTypes
 @property  long long orientation
 @property  CAMDrawerFlashButton *flashButton
 @property  CAMDrawerLivePhotoButton *livePhotoButton
 @property  CAMDrawerAspectRatioButton *aspectRatioButton
 @property  CAMDrawerTimerButton *timerButton
 @property  CAMDrawerFilterButton *filterButton
 @property  CAMDrawerApertureButton *apertureButton
 @property  CAMDrawerIntensityButton *intensityButton
 @property  CAMDrawerHDRButton *hdrButton
 @property  CEKWheelScrubberView *filterScrubberView
 @property  BOOL filterScrubberVisible
 @property  CEKApertureSlider *apertureSlider
 @property  BOOL apertureSliderVisible
 @property  CEKSlider *intensitySlider
 @property  BOOL intensitySliderVisible
 @property  CAMDrawerLowLightButton *lowLightButton
 @property  CAMLowLightSlider *lowLightSlider
 @property  BOOL lowLightSliderVisible
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMControlDrawer initWithCoder:]
  -[CAMControlDrawer delegate]
  -[CAMControlDrawer setDelegate:]
  -[CAMControlDrawer .cxx_destruct]
  -[CAMControlDrawer orientation]
  -[CAMControlDrawer setOrientation:]
  -[CAMControlDrawer contentSize]
  -[CAMControlDrawer setContentSize:]
  -[CAMControlDrawer initWithFrame:]
  -[CAMControlDrawer layoutSubviews]
  -[CAMControlDrawer scrollViewDidScroll:]
  -[CAMControlDrawer _scrollView]
  -[CAMControlDrawer setLayoutStyle:]
  -[CAMControlDrawer layoutStyle]
  -[CAMControlDrawer setOrientation:animated:]
  -[CAMControlDrawer setPresentationDelegate:]
  -[CAMControlDrawer presentationDelegate]
  -[CAMControlDrawer initWithLayoutStyle:]
  -[CAMControlDrawer livePhotoButton]
  -[CAMControlDrawer collapseExpandableButtonsAnimated:]
  -[CAMControlDrawer visibleControlTypes]
  -[CAMControlDrawer expandControlForType:animated:]
  -[CAMControlDrawer isControlExpandedForType:]
  -[CAMControlDrawer isFilterScrubberVisible]
  -[CAMControlDrawer touchingRecognizersToCancel]
  -[CAMControlDrawer hudItemForAccessibilityHUDManager:]
  -[CAMControlDrawer _iterateViewsForHUDManager:withItemFoundBlock:]
  -[CAMControlDrawer selectedByAccessibilityHUDManager:]
  -[CAMControlDrawer shouldAccessibilityGestureBeginForHUDManager:]
  -[CAMControlDrawer apertureButton]
  -[CAMControlDrawer flashButton]
  -[CAMControlDrawer timerButton]
  -[CAMControlDrawer _commonInitializationWithLayoutStyle:]
  -[CAMControlDrawer _scrollingContentSizeForControlCount:]
  -[CAMControlDrawer _layoutVisibleControlForType:visibleControlTypes:]
  -[CAMControlDrawer _expandedControl]
  -[CAMControlDrawer _updateExpansionInsetsForExpandableButton:]
  -[CAMControlDrawer _layoutCustomControlsAnimated:]
  -[CAMControlDrawer _updateControlsScaleAnimated:]
  -[CAMControlDrawer _updateControlsVisibilityAnimated:]
  -[CAMControlDrawer _handleControlValueChanged:]
  -[CAMControlDrawer _handleControlReleased:]
  -[CAMControlDrawer _controlMap]
  -[CAMControlDrawer aspectRatioButton]
  -[CAMControlDrawer hdrButton]
  -[CAMControlDrawer _loadCustomUIIfNeededForControlType:]
  -[CAMControlDrawer filterButton]
  -[CAMControlDrawer _loadFilterScrubberIfNeeded]
  -[CAMControlDrawer _loadApertureSliderIfNeeded]
  -[CAMControlDrawer _loadIntensitySliderIfNeeded]
  -[CAMControlDrawer _loadLowLightSliderIfNeeded]
  -[CAMControlDrawer _scrubberGradientEdgeInsets]
  -[CAMControlDrawer _layoutFilterScrubberView]
  -[CAMControlDrawer _sliderFontStyle]
  -[CAMControlDrawer _layoutApertureSlider]
  -[CAMControlDrawer _layoutIntensitySlider]
  -[CAMControlDrawer _layoutLowLightSlider]
  -[CAMControlDrawer _viewportLength]
  -[CAMControlDrawer _viewportMaximumControlCount]
  -[CAMControlDrawer _controlCenterSpacingForControlCount:]
  -[CAMControlDrawer _layoutFullWidthCustomView:withAlignmentRect:forAssociatedControl:expanded:]
  -[CAMControlDrawer apertureSlider]
  -[CAMControlDrawer isApertureSliderVisible]
  -[CAMControlDrawer _layoutFullWidthCustomView:forAssociatedControl:expanded:]
  -[CAMControlDrawer intensitySlider]
  -[CAMControlDrawer intensityButton]
  -[CAMControlDrawer isIntensitySliderVisible]
  -[CAMControlDrawer lowLightSlider]
  -[CAMControlDrawer lowLightButton]
  -[CAMControlDrawer isLowLightSliderVisible]
  -[CAMControlDrawer filterScrubberView]
  -[CAMControlDrawer setVisibleControlTypes:animated:]
  -[CAMControlDrawer _ensureVisibleControls]
  -[CAMControlDrawer _setExpandedControl:animated:]
  -[CAMControlDrawer setApertureSliderVisible:animated:]
  -[CAMControlDrawer setIntensitySliderVisible:animated:]
  -[CAMControlDrawer setLowLightSliderVisible:animated:]
  -[CAMControlDrawer _loadControlIfNeededForType:]
  -[CAMControlDrawer _installControlIfNeededForType:]
  -[CAMControlDrawer _createControlForType:]
  -[CAMControlDrawer expandableButton:willChangeExpanded:]
  -[CAMControlDrawer menuButtonDidSelectItem:]
  -[CAMControlDrawer setVisibleControlTypes:]
  -[CAMControlDrawer setFilterScrubberVisible:animated:]
  -[CAMControlDrawer setApertureSliderVisible:]
  -[CAMControlDrawer setIntensitySliderVisible:]
  -[CAMControlDrawer setLowLightSliderVisible:]
  -[CAMControlDrawer _setExpandedControl:]


CAMIntensityButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation
 @property  double intensityValue
 @property  BOOL active
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long layoutStyle
 @property  long long orientation

  // instance methods
  -[CAMIntensityButton isActive]
  -[CAMIntensityButton setActive:]
  -[CAMIntensityButton orientation]
  -[CAMIntensityButton setOrientation:]
  -[CAMIntensityButton alignmentRectInsets]
  -[CAMIntensityButton setLayoutStyle:]
  -[CAMIntensityButton layoutStyle]
  -[CAMIntensityButton setOrientation:animated:]
  -[CAMIntensityButton setActive:animated:]
  -[CAMIntensityButton initWithLayoutStyle:]
  -[CAMIntensityButton _updateColorsAnimated:]
  -[CAMIntensityButton tappableEdgeInsets]
  -[CAMIntensityButton setTappableEdgeInsets:]
  -[CAMIntensityButton setIntensityValue:]
  -[CAMIntensityButton intensityValue]


CAMFaceDrivenImageProcessingCommand : CAMCaptureCommand
 @property  BOOL faceDrivenImageProcessingEnabled

  // instance methods
  -[CAMFaceDrivenImageProcessingCommand copyWithZone:]
  -[CAMFaceDrivenImageProcessingCommand encodeWithCoder:]
  -[CAMFaceDrivenImageProcessingCommand initWithCoder:]
  -[CAMFaceDrivenImageProcessingCommand executeWithContext:]
  -[CAMFaceDrivenImageProcessingCommand isFaceDrivenImageProcessingEnabled]
  -[CAMFaceDrivenImageProcessingCommand initWithFaceDrivenImageProcessingEnabled:]


CAMExposureResult : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL adjustingExposure
 @property  {CGPoint=dd} pointOfInterest
 @property  long long exposureMode
 @property  float exposureTargetBias
 @property  BOOL exposureDidStart
 @property  BOOL exposureDidEnd
 @property  BOOL deviceSupportsFocus

  // instance methods
  -[CAMExposureResult pointOfInterest]
  -[CAMExposureResult exposureMode]
  -[CAMExposureResult exposureTargetBias]
  -[CAMExposureResult isAdjustingExposure]
  -[CAMExposureResult exposureDidStart]
  -[CAMExposureResult exposureDidEnd]
  -[CAMExposureResult initWithMode:pointOfInterest:exposureTargetBias:adjusting:exposureDidStart:exposureDidEnd:deviceSupportsFocus:]
  -[CAMExposureResult deviceSupportsFocus]


CAMLowLightTimelapseCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMLowLightTimelapseCommand copyWithZone:]
  -[CAMLowLightTimelapseCommand encodeWithCoder:]
  -[CAMLowLightTimelapseCommand initWithCoder:]
  -[CAMLowLightTimelapseCommand _isEnabled]
  -[CAMLowLightTimelapseCommand executeWithContext:]
  -[CAMLowLightTimelapseCommand initWithTimelapseLowLightCompensationEnabled:]


CAMNebulaKeepAliveController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_syncQueue
 @property  int _nebuladKeepAliveFileDescriptor
 @property  NSMutableSet *_nebuladKeepAliveIdentifiers
 @property  BOOL _didCreateKeepAliveDirectory

  // instance methods
  -[CAMNebulaKeepAliveController init]
  -[CAMNebulaKeepAliveController .cxx_destruct]
  -[CAMNebulaKeepAliveController _syncQueue]
  -[CAMNebulaKeepAliveController _didCreateKeepAliveDirectory]
  -[CAMNebulaKeepAliveController _setDidCreateKeepAliveDirectory:]
  -[CAMNebulaKeepAliveController _nebuladKeepAliveFileDescriptor]
  -[CAMNebulaKeepAliveController _keepAliveFilePath]
  -[CAMNebulaKeepAliveController _setNebuladKeepAliveFileDescriptor:]
  -[CAMNebulaKeepAliveController startKeepAliveForIdentifier:]
  -[CAMNebulaKeepAliveController stopKeepAliveForIdentifier:]
  -[CAMNebulaKeepAliveController removeKeepAliveFileIfNotKeptForAnyIdentifiers]
  -[CAMNebulaKeepAliveController _nebuladKeepAliveIdentifiers]


CAMVideoConfigurationStatusIndicator : CAMControlStatusIndicator
 @property  UILabel *_resolutionLabel
 @property  UILabel *_separatorLabel
 @property  UILabel *_framerateLabel
 @property  {CGSize=dd} _resolutionSize
 @property  {CGSize=dd} _separatorSize
 @property  {CGSize=dd} _framerateSize
 @property  <CAMVideoConfigurationStatusIndicatorDelegate> *touchDelegate
 @property  long long resolution
 @property  long long framerate

  // instance methods
  -[CAMVideoConfigurationStatusIndicator init]
  -[CAMVideoConfigurationStatusIndicator .cxx_destruct]
  -[CAMVideoConfigurationStatusIndicator intrinsicContentSize]
  -[CAMVideoConfigurationStatusIndicator layoutSubviews]
  -[CAMVideoConfigurationStatusIndicator touchesEnded:withEvent:]
  -[CAMVideoConfigurationStatusIndicator setOrientation:animated:]
  -[CAMVideoConfigurationStatusIndicator _updateAppearance]
  -[CAMVideoConfigurationStatusIndicator resolution]
  -[CAMVideoConfigurationStatusIndicator setResolution:]
  -[CAMVideoConfigurationStatusIndicator touchDelegate]
  -[CAMVideoConfigurationStatusIndicator setTouchDelegate:]
  -[CAMVideoConfigurationStatusIndicator framerate]
  -[CAMVideoConfigurationStatusIndicator setFramerate:]
  -[CAMVideoConfigurationStatusIndicator _separatorLabel]
  -[CAMVideoConfigurationStatusIndicator _separatorSize]
  -[CAMVideoConfigurationStatusIndicator hudItemForAccessibilityHUDManager:]
  -[CAMVideoConfigurationStatusIndicator selectedByAccessibilityHUDManager:]
  -[CAMVideoConfigurationStatusIndicator _resolutionSize]
  -[CAMVideoConfigurationStatusIndicator _framerateSize]
  -[CAMVideoConfigurationStatusIndicator _labelGeometryForSize:originX:originY:]
  -[CAMVideoConfigurationStatusIndicator _resolutionLabel]
  -[CAMVideoConfigurationStatusIndicator _framerateLabel]
  -[CAMVideoConfigurationStatusIndicator _handleTouchAtLocation:]
  -[CAMVideoConfigurationStatusIndicator _resolutionString]
  -[CAMVideoConfigurationStatusIndicator _separatorString]
  -[CAMVideoConfigurationStatusIndicator _framerateString]
  -[CAMVideoConfigurationStatusIndicator _sizingForLabel:minWidth:]
  -[CAMVideoConfigurationStatusIndicator set_resolutionSize:]
  -[CAMVideoConfigurationStatusIndicator set_separatorSize:]
  -[CAMVideoConfigurationStatusIndicator set_framerateSize:]
  -[CAMVideoConfigurationStatusIndicator _togglesResolutionOrFramerateForTouchAtLocation:]
  -[CAMVideoConfigurationStatusIndicator _togglesResolutionForTouchAtLocation:]
  -[CAMVideoConfigurationStatusIndicator _togglesFramerateForTouchAtLocation:]
  -[CAMVideoConfigurationStatusIndicator shouldUseOutline]
  -[CAMVideoConfigurationStatusIndicator imageNameForCurrentState]


CAMPanoramaConfigurationCommand : CAMCaptureCommand
 @property  CAMPanoramaConfiguration *_configuration

  // instance methods
  -[CAMPanoramaConfigurationCommand copyWithZone:]
  -[CAMPanoramaConfigurationCommand encodeWithCoder:]
  -[CAMPanoramaConfigurationCommand initWithCoder:]
  -[CAMPanoramaConfigurationCommand .cxx_destruct]
  -[CAMPanoramaConfigurationCommand _configuration]
  -[CAMPanoramaConfigurationCommand initWithConfiguration:]
  -[CAMPanoramaConfigurationCommand executeWithContext:]


CAMTorchPattern : NSObject /usr/lib/libSystem.B.dylib
 @property  long long _type
 @property  CAAnimationGroup *_animationGroup
 @property  double _lastUpdateTime
 @property  double startTime
 @property  float torchLevel

  // instance methods
  -[CAMTorchPattern init]
  -[CAMTorchPattern _type]
  -[CAMTorchPattern .cxx_destruct]
  -[CAMTorchPattern initWithType:]
  -[CAMTorchPattern _lastUpdateTime]
  -[CAMTorchPattern startTime]
  -[CAMTorchPattern setStartTime:]
  -[CAMTorchPattern _animationGroup]
  -[CAMTorchPattern torchLevel]
  -[CAMTorchPattern _updateAnimationGroup]
  -[CAMTorchPattern updateAtTime:]
  -[CAMTorchPattern _patternAnimationWithBeginTime:duration:repeatCount:]
  -[CAMTorchPattern _blinkAnimationWithBeginTime:duration:repeatCount:]
  -[CAMTorchPattern _shortPatternAnimationGroup]
  -[CAMTorchPattern _longPatternAnimationGroup]
  -[CAMTorchPattern _blinkAnimationGroup]
  -[CAMTorchPattern _doubleBlinkAnimationGroup]


CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand copyWithZone:]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand encodeWithCoder:]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand initWithCoder:]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand _isEnabled]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand executeWithContext:]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand initWithSubcommands:]
  -[CAMStillImagePortraitEffectsMatteDeliveryEnabledCommand initWithPortraitEffectsMatteDeliveryEnabled:]


CAMTransientPairedVideo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *url
 @property  {?=qiIq} stillDisplayTime
 @property  long long filterType

  // instance methods
  -[CAMTransientPairedVideo .cxx_destruct]
  -[CAMTransientPairedVideo url]
  -[CAMTransientPairedVideo filterType]
  -[CAMTransientPairedVideo stillDisplayTime]
  -[CAMTransientPairedVideo initWithURL:stillDisplayTime:filterType:]


CAMLedger : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMLedger sharedInstance]

  // instance methods
  -[CAMLedger init]
  -[CAMLedger dealloc]
  -[CAMLedger footprint]


CAMLowLightStatusIndicator : CAMControlStatusIndicator
 @property  double duration
 @property  long long lowLightMode
 @property  BOOL lowLightDisabled

  // instance methods
  -[CAMLowLightStatusIndicator duration]
  -[CAMLowLightStatusIndicator setDuration:]
  -[CAMLowLightStatusIndicator valueText]
  -[CAMLowLightStatusIndicator imageNameForCurrentState]
  -[CAMLowLightStatusIndicator lowLightMode]
  -[CAMLowLightStatusIndicator isLowLightDisabled]
  -[CAMLowLightStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMLowLightStatusIndicator setLowLightMode:]
  -[CAMLowLightStatusIndicator setLowLightDisabled:]
  -[CAMLowLightStatusIndicator shouldShowOutlineForCurrentState]
  -[CAMLowLightStatusIndicator shouldFillOutlineForCurrentState]
  -[CAMLowLightStatusIndicator canShowValue]


CAMPanoramaRetainedBufferHintCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMPanoramaRetainedBufferHintCommand copyWithZone:]
  -[CAMPanoramaRetainedBufferHintCommand encodeWithCoder:]
  -[CAMPanoramaRetainedBufferHintCommand initWithCoder:]
  -[CAMPanoramaRetainedBufferHintCommand _isEnabled]
  -[CAMPanoramaRetainedBufferHintCommand executeWithContext:]
  -[CAMPanoramaRetainedBufferHintCommand initWithPanoramaRetainedBufferHintEnabled:]


CAMPortraitModeInstructionLabel : CAMInstructionLabel
 @property  long long shallowDepthOfFieldStatus
 @property  long long flashMode
 @property  unsigned long numberOfPeopleFound
 @property  long long devicePosition
 @property  long long lightingType

  // class methods
  +[CAMPortraitModeInstructionLabel shouldDisplayInstructionForShallowDepthOfFieldStatus:]
  +[CAMPortraitModeInstructionLabel _textForShallowDepthOfFieldStatus:numberOfPeopleFound:flashMode:devicePosition:lightingType:]

  // instance methods
  -[CAMPortraitModeInstructionLabel sizeThatFits:]
  -[CAMPortraitModeInstructionLabel flashMode]
  -[CAMPortraitModeInstructionLabel setFlashMode:]
  -[CAMPortraitModeInstructionLabel devicePosition]
  -[CAMPortraitModeInstructionLabel setDevicePosition:]
  -[CAMPortraitModeInstructionLabel lightingType]
  -[CAMPortraitModeInstructionLabel setLightingType:]
  -[CAMPortraitModeInstructionLabel setShallowDepthOfFieldStatus:]
  -[CAMPortraitModeInstructionLabel shallowDepthOfFieldStatus]
  -[CAMPortraitModeInstructionLabel _updateTextWithPriorStatus:]
  -[CAMPortraitModeInstructionLabel numberOfPeopleFound]
  -[CAMPortraitModeInstructionLabel setNumberOfPeopleFound:]


CAMPanoramaEncodingCommand : CAMCaptureCommand
 @property  long long _photoEncodingBehavior

  // instance methods
  -[CAMPanoramaEncodingCommand copyWithZone:]
  -[CAMPanoramaEncodingCommand encodeWithCoder:]
  -[CAMPanoramaEncodingCommand initWithCoder:]
  -[CAMPanoramaEncodingCommand executeWithContext:]
  -[CAMPanoramaEncodingCommand _photoEncodingBehavior]
  -[CAMPanoramaEncodingCommand initWithPhotoEncodingBehavior:]


CAMCTMInitiateCaptureCommand : CAMCaptureCommand
 @property  CAMMomentCaptureSettings *_settings

  // instance methods
  -[CAMCTMInitiateCaptureCommand copyWithZone:]
  -[CAMCTMInitiateCaptureCommand encodeWithCoder:]
  -[CAMCTMInitiateCaptureCommand initWithCoder:]
  -[CAMCTMInitiateCaptureCommand .cxx_destruct]
  -[CAMCTMInitiateCaptureCommand initWithSettings:]
  -[CAMCTMInitiateCaptureCommand _settings]
  -[CAMCTMInitiateCaptureCommand executeWithContext:]


CAMStillImageCaptureResolvedSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL HDREnabled
 @property  BOOL portraitEffectEnabled
 @property  double lowLightCaptureTime

  // instance methods
  -[CAMStillImageCaptureResolvedSettings isHDREnabled]
  -[CAMStillImageCaptureResolvedSettings initWithHDREnabled:portraitEffectEnabled:lowLightCaptureTime:]
  -[CAMStillImageCaptureResolvedSettings isPortraitEffectEnabled]
  -[CAMStillImageCaptureResolvedSettings lowLightCaptureTime]


CAMPendingLocalPersistenceWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMCaptureRequest *request
 @property  id result
 @property  @? completionHandler

  // instance methods
  -[CAMPendingLocalPersistenceWrapper .cxx_destruct]
  -[CAMPendingLocalPersistenceWrapper result]
  -[CAMPendingLocalPersistenceWrapper request]
  -[CAMPendingLocalPersistenceWrapper completionHandler]
  -[CAMPendingLocalPersistenceWrapper setCompletionHandler:]
  -[CAMPendingLocalPersistenceWrapper initWithRequest:result:completionHandler:]


CAMMotionController : NSObject /usr/lib/libSystem.B.dylib <BKSAccelerometerDelegate, CAMLevelViewModelChangeObserver>
 @property  long long _cachedCaptureOrientation
 @property  long long _fallbackCaptureOrientation
 @property  BOOL _didNotifyCaptureOrientationWasInvalid
 @property  BKSAccelerometer *_accelerometer
 @property  long long _numberOfDominantPhysicalButtonObservers
 @property  CMMotionManager *_physicalButtonMotionManager
 @property  long long dominantPhysicalButton
 @property  CMMotionManager *_levelMotionManager
 @property  CAMLevelViewModel *activeLevelViewModel
 @property  long long captureOrientation
 @property  long long panoramaCaptureOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMMotionController init]
  -[CAMMotionController dealloc]
  -[CAMMotionController .cxx_destruct]
  -[CAMMotionController accelerometer:didAccelerateWithTimeStamp:x:y:z:eventType:]
  -[CAMMotionController accelerometer:didChangeDeviceOrientation:]
  -[CAMMotionController _accelerometer]
  -[CAMMotionController captureOrientation]
  -[CAMMotionController observable:didPublishChange:withContext:]
  -[CAMMotionController _debugStringForDeviceOrientation:]
  -[CAMMotionController _debugStringForInterfaceOrientation:]
  -[CAMMotionController _cachedCaptureOrientation]
  -[CAMMotionController _fallbackCaptureOrientation]
  -[CAMMotionController _setCachedCaptureOrientation:]
  -[CAMMotionController _physicalButtonMotionManager]
  -[CAMMotionController _numberOfDominantPhysicalButtonObservers]
  -[CAMMotionController _setDominantPhysicalButton:]
  -[CAMMotionController _setNumberOfDominantPhysicalButtonObservers:]
  -[CAMMotionController _updatePhysicalButtonObservation]
  -[CAMMotionController activeLevelViewModel]
  -[CAMMotionController endUpdatingActiveLevelViewModel]
  -[CAMMotionController _setActiveLevelViewModel:]
  -[CAMMotionController _levelMotionManager]
  -[CAMMotionController _handleLevelMotionUpdate:error:]
  -[CAMMotionController _updateLevelMotionManagerFrequency]
  -[CAMMotionController _didNotifyCaptureOrientationWasInvalid]
  -[CAMMotionController _setDidNotifyCaptureOrientationWasInvalid:]
  -[CAMMotionController panoramaCaptureOrientation]
  -[CAMMotionController beginGeneratingDominantPhysicalButtonNotifications]
  -[CAMMotionController endGeneratingDominantPhysicalButtonNotifications]
  -[CAMMotionController beginUpdatingLevelViewModel:]
  -[CAMMotionController debugValidateCaptureOrientationForMode:]
  -[CAMMotionController dominantPhysicalButton]
  -[CAMMotionController _setAccelerometer:]


CAMZoomControl : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMZoomButtonDelegate>
 @property  CAMZoomButton *_zoomButton
 @property  CAMZoomDial *_zoomDial
 @property  UIView *_dialClippingView
 @property  CAMZoomControlButtonMaskView *_buttonMaskView
 @property  CAMZoomButtonPlatter *_buttonPlatter
 @property  long long _zoomControlMode
 @property  NSArray *_zoomFactors
 @property  NSArray *_displayZoomFactors
 @property  BOOL _zoomDialEnabled
 @property  BOOL _shouldShowZoomDial
 @property  BOOL _shouldHideZoomButtonBackground
 @property  double _displayMinimumZoomFactor
 @property  double _displayMaximumZoomFactor
 @property  double _displayZoomValue
 @property  NSArray *_switchOverZoomFactors
 @property  BOOL _shouldSnapDialToSwitchOverZoomFactors
 @property  BOOL _shouldUpdateZoomDialContentSizeCategory
 @property  BOOL _shouldUseZoomDialMask
 @property  BOOL _buttonPlatterSupportedForConfiguration
 @property  BOOL _shouldShowButtonPlatter
 @property  {CGPoint=dd} _startTouchLocation
 @property  {CGPoint=dd} _previousTouchLocation
 @property  double _previousTouchTime
 @property  BOOL _eligibleForSwipeDownToDismiss
 @property  NSTimer *_zoomDialVisibilityTimer
 @property  NSDate *_startTimeForHideAnimationInProgress
 @property  double _hideAnimationInProgressDuration
 @property  CAMZoomButton *_highlightedZoomButton
 @property  CAMFeedbackController *_feedbackController
 @property  NSArray *_significantHapticDisplayValues
 @property  NSArray *_significantHapticDisplayValueEpsilons
 @property  NSSet *_significantHapticDisplayValueSwitchOverIndexes
 @property  long long _lastHapticZone
 @property  double _snappedZoomFactor
 @property  double _unsnappingProgress
 @property  double leftMargin
 @property  {UIEdgeInsets=dddd} contentInsets
 @property  double zoomButtonMaxYWhenContracted
 @property  double zoomDialBorderWidth
 @property  double zoomDialRadius
 @property  double zoomDialContentMaskingHeight
 @property  <CAMZoomControlDelegate> *delegate
 @property  long long layoutStyle
 @property  long long zoomButtonContentType
 @property  double zoomFactor
 @property  double minimumZoomFactor
 @property  double maximumZoomFactor
 @property  long long zoomButtonSymbol
 @property  double minAvailableZoomFactor
 @property  double maxAvailableZoomFactor
 @property  long long orientation
 @property  NSString *contentSizeCategory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMZoomControl delegate]
  -[CAMZoomControl setDelegate:]
  -[CAMZoomControl .cxx_destruct]
  -[CAMZoomControl orientation]
  -[CAMZoomControl setOrientation:]
  -[CAMZoomControl setContentSizeCategory:]
  -[CAMZoomControl contentSizeCategory]
  -[CAMZoomControl setLeftMargin:]
  -[CAMZoomControl layoutSubviews]
  -[CAMZoomControl alignmentRectInsets]
  -[CAMZoomControl contentInsets]
  -[CAMZoomControl hitTest:withEvent:]
  -[CAMZoomControl setLayoutStyle:]
  -[CAMZoomControl layoutStyle]
  -[CAMZoomControl setOrientation:animated:]
  -[CAMZoomControl setContentInsets:]
  -[CAMZoomControl beginTrackingWithTouch:withEvent:]
  -[CAMZoomControl cancelTrackingWithEvent:]
  -[CAMZoomControl continueTrackingWithTouch:withEvent:]
  -[CAMZoomControl endTrackingWithTouch:withEvent:]
  -[CAMZoomControl zoomFactor]
  -[CAMZoomControl setZoomFactor:]
  -[CAMZoomControl _previousTouchTime]
  -[CAMZoomControl initWithLayoutStyle:]
  -[CAMZoomControl _feedbackController]
  -[CAMZoomControl leftMargin]
  -[CAMZoomControl setZoomButtonMaxYWhenContracted:]
  -[CAMZoomControl zoomDialBorderWidth]
  -[CAMZoomControl setZoomDialRadius:]
  -[CAMZoomControl setZoomDialContentMaskingHeight:]
  -[CAMZoomControl _shouldUpdateZoomDialContentSizeCategory]
  -[CAMZoomControl _updateZoomButtonTappableEdgeInsets]
  -[CAMZoomControl _updateSubviewsAlphasWithDuration:forConfigurationChange:]
  -[CAMZoomControl _shouldUseZoomDialMask]
  -[CAMZoomControl configureForToggleOnlyWithZoomFactor:displayZoomFactor:]
  -[CAMZoomControl _displayZoomValueForZoomFactor:]
  -[CAMZoomControl _shouldShowButtonPlatter]
  -[CAMZoomControl _setZoomControlMode:]
  -[CAMZoomControl _setZoomFactors:]
  -[CAMZoomControl _setDisplayZoomFactors:]
  -[CAMZoomControl setMinAvailableZoomFactor:]
  -[CAMZoomControl setMaxAvailableZoomFactor:]
  -[CAMZoomControl _snappedZoomFactor]
  -[CAMZoomControl _setSnappedZoomFactor:]
  -[CAMZoomControl _resetSnapping]
  -[CAMZoomControl _setZoomDialEnabled:]
  -[CAMZoomControl _zoomButton]
  -[CAMZoomControl _updateDisplayedValuesAnimated:]
  -[CAMZoomControl _configureForControlMode:zoomFactor:zoomFactors:displayZoomFactors:zoomButtonContentType:animated:]
  -[CAMZoomControl _zoomFactors]
  -[CAMZoomControl _displayZoomFactors]
  -[CAMZoomControl _zoomDial]
  -[CAMZoomControl _updateSignificantValuesForHaptics]
  -[CAMZoomControl _buttonPlatter]
  -[CAMZoomControl _displayZoomValue]
  -[CAMZoomControl _setZoomFactor:interactionType:shouldNotifyDelegate:]
  -[CAMZoomControl minimumZoomFactor]
  -[CAMZoomControl minAvailableZoomFactor]
  -[CAMZoomControl maximumZoomFactor]
  -[CAMZoomControl maxAvailableZoomFactor]
  -[CAMZoomControl _updateHaptics:]
  -[CAMZoomControl setLeftMargin:animated:]
  -[CAMZoomControl _updateHapticEpsilons]
  -[CAMZoomControl _setZoomDialEnabled:animationDuration:]
  -[CAMZoomControl _setShouldShowZoomDial:animationDuration:]
  -[CAMZoomControl _cancelDelayedZoomDialVisibilityChange]
  -[CAMZoomControl _setStartTimeForHideAnimationInProgress:]
  -[CAMZoomControl _buttonMaskView]
  -[CAMZoomControl _setHideAnimationInProgressDuration:]
  -[CAMZoomControl _setHighlightedZoomButton:]
  -[CAMZoomControl _setEligibleForSwipeDownToDismiss:]
  -[CAMZoomControl _shouldShowZoomDial]
  -[CAMZoomControl _shouldHideZoomButtonBackground]
  -[CAMZoomControl _isButtonPlatterSupportedForConfiguration]
  -[CAMZoomControl _isZoomDialEnabled]
  -[CAMZoomControl _setShouldShowZoomDial:animationDuration:afterDelay:]
  -[CAMZoomControl _handleZoomDialVisibilityTimerFiredWithUserInfo:]
  -[CAMZoomControl _dialClippingView]
  -[CAMZoomControl zoomButtonMaxYWhenContracted]
  -[CAMZoomControl zoomDialRadius]
  -[CAMZoomControl _updateMaskViewForZoomButtonHighlightingTransform]
  -[CAMZoomControl _distanceFromDialClippingViewToPoint:]
  -[CAMZoomControl _dampingFactorForDistanceFromDialForPoint:]
  -[CAMZoomControl _dampingFactorForPerpendicularityFromPoint:toPoint:]
  -[CAMZoomControl _normalizeValue:betweenMinimumValue:maximumValue:]
  -[CAMZoomControl _additionalAccelerationForMovementFromPoint:toPoint:deltaX:]
  -[CAMZoomControl _startTimeForHideAnimationInProgress]
  -[CAMZoomControl _hideAnimationInProgressDuration]
  -[CAMZoomControl _isPointWithinButtonPlatter:]
  -[CAMZoomControl _shouldInterceptTouchesForHidingZoomDial]
  -[CAMZoomControl _setUnsnappingProgress:]
  -[CAMZoomControl _setStartTouchLocation:]
  -[CAMZoomControl _setPreviousTouchLocation:]
  -[CAMZoomControl _setPreviousTouchTime:]
  -[CAMZoomControl _isWithinZoomButtonBoundsWithTouch:]
  -[CAMZoomControl _isTouchWithinButtonPlatter:]
  -[CAMZoomControl _startTouchLocation]
  -[CAMZoomControl _previousTouchLocation]
  -[CAMZoomControl _isEligibleForSwipeDownToDismiss]
  -[CAMZoomControl _dampingFactorForMovementFromPoint:toPoint:]
  -[CAMZoomControl _accelerationForMovementFromPointFromPoint:toPoint:elapsedTime:]
  -[CAMZoomControl _shouldSnapDialToSwitchOverZoomFactors]
  -[CAMZoomControl _unsnappingProgress]
  -[CAMZoomControl _switchOverZoomFactors]
  -[CAMZoomControl _zoomFactorForDisplayZoomValue:]
  -[CAMZoomControl _highlightedZoomButton]
  -[CAMZoomControl _cleanupForCancelTracking]
  -[CAMZoomControl _handleButtonTapped:]
  -[CAMZoomControl _zoomControlMode]
  -[CAMZoomControl _handleButtonTappedForDualCameraMode]
  -[CAMZoomControl _handleButtonTappedForTripleCameraMode:]
  -[CAMZoomControl _handleButtonTappedForSelection:]
  -[CAMZoomControl _handleButtonTappedForSingleCameraZoomPlusToggle]
  -[CAMZoomControl _displayMinimumZoomFactor]
  -[CAMZoomControl _setSignificantHapticDisplayValues:]
  -[CAMZoomControl _setSignificantHapticDisplayValueSwitchOverIndexes:]
  -[CAMZoomControl _hapticZoneForDisplayValue:]
  -[CAMZoomControl set_lastHapticZone:]
  -[CAMZoomControl _significantHapticDisplayValues]
  -[CAMZoomControl _setSignificantHapticDisplayValueEpsilons:]
  -[CAMZoomControl _significantHapticDisplayValueEpsilons]
  -[CAMZoomControl _significantHapticDisplayValueSwitchOverIndexes]
  -[CAMZoomControl _lastHapticZone]
  -[CAMZoomControl zoomButtonDidLayout]
  -[CAMZoomControl configureForTripleDeviceWithZoomFactor:minimumZoomFactor:displayMinimumZoomFactor:maximumZoomFactor:displayMaximumZoomFactor:switchOverZoomFactor1:displaySwitchOverZoomFactor1:switchOverZoomFactor2:displaySwitchOverZoomFactor2:]
  -[CAMZoomControl configureForDualDeviceWithZoomFactor:minimumZoomFactor:displayMinimumZoomFactor:maximumZoomFactor:displayMaximumZoomFactor:dualCameraSwitchOverZoomFactor:displayDualCameraSwitchOverZoomFactor:]
  -[CAMZoomControl configureForSingleCameraPlusToggleWithZoomFactor:minimumZoomFactor:displayMinimumZoomFactor:maximumZoomFactor:displayMaximumZoomFactor:]
  -[CAMZoomControl configureForToggleOnlyWithZoomFactor:minimumZoomFactor:displayMinimumZoomFactor:maximumZoomFactor:displayMaximumZoomFactor:]
  -[CAMZoomControl configureForSelectionOnlyWithDisplayZoomFactors:selectedIndex:animated:]
  -[CAMZoomControl configureForZoomSymbolToggle]
  -[CAMZoomControl _displayMaximumZoomFactor]
  -[CAMZoomControl zoomButtonContentType]
  -[CAMZoomControl zoomButtonSymbol]
  -[CAMZoomControl setZoomButtonSymbol:animated:]
  -[CAMZoomControl zoomDialContentMaskingHeight]
  -[CAMZoomControl _setShouldShowZoomDial:]
  -[CAMZoomControl setShouldShowZoomDial:animationDuration:]
  -[CAMZoomControl _zoomDialVisibilityTimer]
  -[CAMZoomControl _setZoomDialVisibilityTimer:]


CAMLowLightConfigurationCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMLowLightConfigurationCommand copyWithZone:]
  -[CAMLowLightConfigurationCommand encodeWithCoder:]
  -[CAMLowLightConfigurationCommand initWithCoder:]
  -[CAMLowLightConfigurationCommand _isEnabled]
  -[CAMLowLightConfigurationCommand executeWithContext:]
  -[CAMLowLightConfigurationCommand initWithLowLightEnabled:]


CAMFlipButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDImageProvider>
 @property  UIImageView *_imageView
 @property  UIImageView *_circleBackgroundView
 @property  BOOL _useCTMAppearance
 @property  long long layoutStyle
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMFlipButton flipButtonOverContent]
  +[CAMFlipButton flipButtonWithLayoutStyle:]

  // instance methods
  -[CAMFlipButton .cxx_destruct]
  -[CAMFlipButton orientation]
  -[CAMFlipButton setOrientation:]
  -[CAMFlipButton intrinsicContentSize]
  -[CAMFlipButton layoutSubviews]
  -[CAMFlipButton _imageView]
  -[CAMFlipButton setHighlighted:]
  -[CAMFlipButton alignmentRectInsets]
  -[CAMFlipButton setLayoutStyle:]
  -[CAMFlipButton layoutStyle]
  -[CAMFlipButton setOrientation:animated:]
  -[CAMFlipButton _updateImages]
  -[CAMFlipButton _circleBackgroundView]
  -[CAMFlipButton set_circleBackgroundView:]
  -[CAMFlipButton tappableEdgeInsets]
  -[CAMFlipButton setTappableEdgeInsets:]
  -[CAMFlipButton mainImageNameForAccessibilityHUD:]
  -[CAMFlipButton _useCTMAppearance]
  -[CAMFlipButton _commonCAMFlipButtonInitializationWithStyle:overContent:]
  -[CAMFlipButton imageForAccessibilityHUD]


CAMVideoRecordOrientationCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMVideoRecordOrientationCommand copyWithZone:]
  -[CAMVideoRecordOrientationCommand encodeWithCoder:]
  -[CAMVideoRecordOrientationCommand initWithCoder:]
  -[CAMVideoRecordOrientationCommand _isEnabled]
  -[CAMVideoRecordOrientationCommand executeWithContext:]
  -[CAMVideoRecordOrientationCommand initWithEnabled:]


CAMCaptureCoordinationInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSSet *allExpectedResultSpecifiers
 @property  unsigned long resultSpecifiers
 @property  BOOL HDR
 @property  BOOL filtered
 @property  BOOL overCapture
 @property  BOOL unfilteredImageForFilteredPair
 @property  BOOL filteredImageForFilteredPair
 @property  BOOL EV0ForHDREV0Pair
 @property  BOOL HDRForHDREV0Pair
 @property  BOOL primaryAssetForOverCapturePair
 @property  BOOL secondaryAssetForOverCapturePair
 @property  BOOL finalExpectedStillImageResult
 @property  BOOL finalExpectedVideoResult
 @property  BOOL representsFinalProcessedStillImage
 @property  BOOL representsFinalProcessedVideo

  // instance methods
  -[CAMCaptureCoordinationInfo .cxx_destruct]
  -[CAMCaptureCoordinationInfo identifier]
  -[CAMCaptureCoordinationInfo isFiltered]
  -[CAMCaptureCoordinationInfo isHDR]
  -[CAMCaptureCoordinationInfo resultSpecifiers]
  -[CAMCaptureCoordinationInfo allExpectedResultSpecifiers]
  -[CAMCaptureCoordinationInfo isEV0ForHDREV0Pair]
  -[CAMCaptureCoordinationInfo isUnfilteredImageForFilteredPair]
  -[CAMCaptureCoordinationInfo isPrimaryAssetForOverCapturePair]
  -[CAMCaptureCoordinationInfo isSecondaryAssetForOverCapturePair]
  -[CAMCaptureCoordinationInfo initWithIdentifier:allExpectedResultSpecifiers:resultSpecifiers:]
  -[CAMCaptureCoordinationInfo isOverCapture]
  -[CAMCaptureCoordinationInfo isFilteredImageForFilteredPair]
  -[CAMCaptureCoordinationInfo isHDRForHDREV0Pair]
  -[CAMCaptureCoordinationInfo isFinalExpectedStillImageResult]
  -[CAMCaptureCoordinationInfo isFinalExpectedVideoResult]
  -[CAMCaptureCoordinationInfo representsFinalProcessedStillImage]
  -[CAMCaptureCoordinationInfo representsFinalProcessedVideo]


CAMUserPreferences : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUserDefaults *_underlyingUserDefaults
 @property  NSDate *resetTimeoutDate
 @property  BOOL didResetTorchMode
 @property  BOOL _preferHEVCWhenAvailable
 @property  double _resetTimeoutOverride
 @property  BOOL _shouldDisableCameraSwitchingDuringVideoRecording
 @property  CAMCaptureConfiguration *captureConfiguration
 @property  CAMConflictingControlConfiguration *conflictingControlConfiguration
 @property  BOOL shouldShowGridView
 @property  BOOL QRBannersEnabledInSettings
 @property  BOOL forceEnableQRBanners
 @property  BOOL shouldShowQRBanners
 @property  BOOL shouldCaptureHDREV0
 @property  BOOL shouldUseModernHDRBehavior
 @property  BOOL didAcknowledgePortraitModeDescription
 @property  BOOL usingMostCompatibleEncoding
 @property  BOOL didConfirmVideo4k60MostCompatible
 @property  BOOL didConfirmSlomo1080p240MostCompatible
 @property  long long videoConfiguration
 @property  long long slomoConfiguration
 @property  BOOL autoLowLightVideoEnabled
 @property  BOOL shouldForceMonoAudioRecording
 @property  BOOL photoOverCaptureEnabled
 @property  BOOL videoOverCaptureEnabled
 @property  BOOL autoAdjustmentsEnabled
 @property  BOOL didAcknowledgeCTMDescription
 @property  long long previewViewAspectMode
 @property  long long photoEncodingBehavior
 @property  long long photoModeLastCapturedEffectFilterType
 @property  long long squareModeLastCapturedEffectFilterType
 @property  long long portraitModeLastCapturedEffectFilterType
 @property  BOOL preserveEffectFilter
 @property  BOOL preserveCaptureMode
 @property  BOOL preserveLivePhoto
 @property  BOOL lockAsShutterEnabled
 @property  BOOL shouldDelayRemotePersistence
 @property  BOOL burstFollowsEncoderSettings
 @property  long long preferredMinimumFreeBytes
 @property  long long overriddenBackCaptureInterval
 @property  long long overriddenFrontCaptureInterval

  // class methods
  +[CAMUserPreferences preferences]
  +[CAMUserPreferences _fallBackToCameraDefaultsForBundleIdentifier:]
  +[CAMUserPreferences _defaultCaptureConfiguration]
  +[CAMUserPreferences defaultFilterTypeForMode:]
  +[CAMUserPreferences defaultLightingTypeForMode:]

  // instance methods
  -[CAMUserPreferences .cxx_destruct]
  -[CAMUserPreferences _underlyingUserDefaults]
  -[CAMUserPreferences videoConfiguration]
  -[CAMUserPreferences shouldCaptureHDREV0]
  -[CAMUserPreferences maxSupportedPhotoQualityPrioritizationForMode:]
  -[CAMUserPreferences ppt_readPortraitLightingType]
  -[CAMUserPreferences photoEncodingBehavior]
  -[CAMUserPreferences videoEncodingBehaviorForConfiguration:]
  -[CAMUserPreferences isLockAsShutterEnabled]
  -[CAMUserPreferences _setUnderlyingUserDefaults:]
  -[CAMUserPreferences filterTypesForMode:]
  -[CAMUserPreferences _sanitizeLightingType:forMode:]
  -[CAMUserPreferences shouldResetCaptureConfiguration]
  -[CAMUserPreferences _sanitizeEffectFilterType:forMode:]
  -[CAMUserPreferences slomoConfiguration]
  -[CAMUserPreferences shouldForceMonoAudioRecording]
  -[CAMUserPreferences shouldUseModernHDRBehavior]
  -[CAMUserPreferences _setDidResetTorchMode:]
  -[CAMUserPreferences previewViewAspectMode]
  -[CAMUserPreferences captureConfiguration]
  -[CAMUserPreferences conflictingControlConfiguration]
  -[CAMUserPreferences photoModeLastCapturedEffectFilterType]
  -[CAMUserPreferences squareModeLastCapturedEffectFilterType]
  -[CAMUserPreferences portraitModeLastCapturedEffectFilterType]
  -[CAMUserPreferences updateResetTimeoutDate]
  -[CAMUserPreferences _resetTimeoutOverride]
  -[CAMUserPreferences _setResetTimeoutDate:]
  -[CAMUserPreferences QRBannersEnabledInSettings]
  -[CAMUserPreferences forceEnableQRBanners]
  -[CAMUserPreferences _preferHEVCWhenAvailable]
  -[CAMUserPreferences _shouldDisableCameraSwitchingDuringVideoRecording]
  -[CAMUserPreferences isPhotoOverCaptureEnabled]
  -[CAMUserPreferences isVideoOverCaptureEnabled]
  -[CAMUserPreferences readPreferencesWithOverrides:emulationMode:callActive:]
  -[CAMUserPreferences writePreferences]
  -[CAMUserPreferences shouldShowQRBanners]
  -[CAMUserPreferences shouldDisableCameraSwitchingDuringVideoRecordingForMode:]
  -[CAMUserPreferences setDidAcknowledgePortraitModeDescription:]
  -[CAMUserPreferences usingMostCompatibleEncoding]
  -[CAMUserPreferences didConfirmVideo4k60MostCompatible]
  -[CAMUserPreferences didConfirmSlomo1080p240MostCompatible]
  -[CAMUserPreferences isOverCaptureEnabledForCTMCaptureType:]
  -[CAMUserPreferences setDidAcknowledgeCTMDescription:]
  -[CAMUserPreferences didResetTorchMode]
  -[CAMUserPreferences setCaptureConfiguration:]
  -[CAMUserPreferences setConflictingControlConfiguration:]
  -[CAMUserPreferences shouldShowGridView]
  -[CAMUserPreferences setForceEnableQRBanners:]
  -[CAMUserPreferences didAcknowledgePortraitModeDescription]
  -[CAMUserPreferences isAutoLowLightVideoEnabled]
  -[CAMUserPreferences isAutoAdjustmentsEnabled]
  -[CAMUserPreferences didAcknowledgeCTMDescription]
  -[CAMUserPreferences setPreviewViewAspectMode:]
  -[CAMUserPreferences setPhotoModeLastCapturedEffectFilterType:]
  -[CAMUserPreferences setSquareModeLastCapturedEffectFilterType:]
  -[CAMUserPreferences setPortraitModeLastCapturedEffectFilterType:]
  -[CAMUserPreferences resetTimeoutDate]
  -[CAMUserPreferences preserveEffectFilter]
  -[CAMUserPreferences preserveCaptureMode]
  -[CAMUserPreferences preserveLivePhoto]
  -[CAMUserPreferences shouldDelayRemotePersistence]
  -[CAMUserPreferences burstFollowsEncoderSettings]
  -[CAMUserPreferences preferredMinimumFreeBytes]
  -[CAMUserPreferences overriddenBackCaptureInterval]
  -[CAMUserPreferences overriddenFrontCaptureInterval]


CAMSpatialOverCaptureEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMSpatialOverCaptureEnabledCommand copyWithZone:]
  -[CAMSpatialOverCaptureEnabledCommand encodeWithCoder:]
  -[CAMSpatialOverCaptureEnabledCommand initWithCoder:]
  -[CAMSpatialOverCaptureEnabledCommand _isEnabled]
  -[CAMSpatialOverCaptureEnabledCommand executeWithContext:]
  -[CAMSpatialOverCaptureEnabledCommand initWithSubcommands:]
  -[CAMSpatialOverCaptureEnabledCommand initWithSpatialOverCaptureEnabled:]


CAMFocusLockBadge : CEKBadgeTextView /System/Library/Frameworks/Metal.framework/Metal
 @property  BOOL focusLocked
 @property  BOOL exposureLocked

  // instance methods
  -[CAMFocusLockBadge initWithFrame:]
  -[CAMFocusLockBadge _updateText]
  -[CAMFocusLockBadge setFocusLocked:]
  -[CAMFocusLockBadge setExposureLocked:]
  -[CAMFocusLockBadge isFocusLocked]
  -[CAMFocusLockBadge isExposureLocked]


CAMViewfinderTransitionController : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMViewfinderOpenAndCloseTransition *_openAndCloseTransition
 @property  CAMViewfinderFlipTransition *_flipTransition
 @property  <CAMViewfinderTransitionable> *target

  // instance methods
  -[CAMViewfinderTransitionController .cxx_destruct]
  -[CAMViewfinderTransitionController setTarget:]
  -[CAMViewfinderTransitionController target]
  -[CAMViewfinderTransitionController _flipTransition]
  -[CAMViewfinderTransitionController _openAndCloseTransition]
  -[CAMViewfinderTransitionController _setOpenAndCloseTransition:]
  -[CAMViewfinderTransitionController _setFlipTransition:]
  -[CAMViewfinderTransitionController closeWithBlur:animated:withCompletionHandler:]
  -[CAMViewfinderTransitionController closeAndRotateWithDirection:withCompletionHandler:]
  -[CAMViewfinderTransitionController openForReason:animated:withCompletionHandler:]
  -[CAMViewfinderTransitionController handleApplicationDidEnterBackground]


CAMViewfinderViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UIGestureRecognizerDelegate, CAMModeDialDataSource, CAMStillImageCaptureRequestDelegate, CAMVideoCaptureRequestDelegate, CAMPanoramaCaptureRequestDelegate, CAMFacesDelegate, CAMMachineReadableCodeDelegate, CAMConfigurationDelegate, CAMSuggestionDelegate, CAMAvailabilityDelegate, CAMBurstDelegate, CAMTimerButtonDelegate, CAMControlVisibilityDelegate, CAMControlVisibilityUpdateDelegate, CAMPreviewViewControllerDelegate, CAMCaptureRecoveryDelegate, CAMCaptureInterruptionDelegate, CAMCaptureRunningDelegate, CAMZoomDelegate, CAMZoomSliderDelegate, CAMTimelapseControllerDelegate, CAMCameraRollControllerImageWellDelegate, CAMCameraRollControllerSessionDelegate, CAMCameraRollControllerPresentationDelegate, CAMClosedViewfinderControllerDelegate, CAMDisabledPreviewControllerDelegate, CAMStillImageCapturingVideoDelegate, CAMZoomControlDelegate, CAMShallowDepthOfFieldStatusDelegate, CAMPhysicalCaptureNotifierDelegate, CEKWheelScrubberViewDelegate, CAMVideoThumbnailContentsDelegate, CAMBarsAccessibilityHUDManagerDelegate, CAMDescriptionOverlayViewDelegate, CAMShutterButtonDelegate, CEKLightingControlDelegate, CAMStorageControllerDelegate, CAMFullscreenViewfinderDelegate, CAMDynamicShutterControlDelegate, CAMControlStatusBarDelegate, CAMBadgeTrayDelegate, CAMControlDrawerDelegate, CAMFullscreenModeSelectorDataSource, CAMFullscreenModeSelectorDelegate, CAMPreviewLayerOverCaptureStatusDelegate, CAMDynamicShutterControlAGGDDelegate, CAMVideoConfigurationStatusIndicatorDelegate, CAMRemoteShutterDelegate>
 @property  CUCaptureController *_captureController
 @property  CAMPreviewViewController *_previewViewController
 @property  CAMPanoramaViewController *_panoramaViewController
 @property  CAMCameraRollController *_cameraRollController
 @property  CAMIdleController *_idleController
 @property  CAMClosedViewfinderController *_closedViewfinderController
 @property  CAMDisabledPreviewController *_disabledPreviewController
 @property  BCSAVParsingSession *_barcodeParsingSession
 @property  CAMMachineReadableCodeLoggingController *_machineReadableCodeLoggingController
 @property  CAMCallStatusMonitor *_callStatusMonitor
 @property  BOOL _openingViewfinder
 @property  BOOL _closingViewfinder
 @property  CAMLocationController *_locationController
 @property  CAMMotionController *_motionController
 @property  CAMTimelapseController *_timelapseController
 @property  CAMRemoteShutterController *_remoteShutterController
 @property  CAMKeepAliveController *_keepAliveController
 @property  CAMPowerController *_powerController
 @property  CAMStorageController *_storageController
 @property  CAMCaptureGraphConfiguration *_currentGraphConfiguration
 @property  long long _currentMode
 @property  long long _currentDevice
 @property  long long _currentDevicePosition
 @property  long long _currentVideoConfiguration
 @property  long long _videoConfigurationOverride
 @property  long long _slomoConfigurationOverride
 @property  CAMCaptureGraphConfiguration *_configuredGraphConfiguration
 @property  long long _configuredMode
 @property  long long _configuredDevice
 @property  BOOL _reconfiguring
 @property  BOOL _reconfiguringForTripleCameraEmulation
 @property  long long _resolvedFlashMode
 @property  long long _resolvedHDRMode
 @property  long long _resolvedLivePhotoMode
 @property  long long _resolvedTorchMode
 @property  long long _desiredFlashMode
 @property  long long _desiredHDRMode
 @property  long long _desiredLivePhotoMode
 @property  long long _desiredTorchMode
 @property  long long _lowLightMode
 @property  {?=dd} _lowLightDurationMapping
 @property  unsigned long _lowLightAutoDisabledReasons
 @property  long long _resolvedTimerDuration
 @property  long long _photoModeEffectFilterType
 @property  long long _squareModeEffectFilterType
 @property  long long _portraitModeEffectFilterType
 @property  long long _portraitModeLightingEffectType
 @property  double _portraitModeApertureValue
 @property  double _portraitModeIntensityValue
 @property  CAMMomentCaptureSettings *_currentStillImageCaptureMomentSettings
 @property  long long _homeIndicatorAutoHideOrientation
 @property  int _lastConfigurationRequestID
 @property  long long _internalAutorotationStyle
 @property  long long _layoutStyle
 @property  BOOL _useCreativeCameraControls
 @property  CAMControlDrawer *_controlDrawer
 @property  CAMFullscreenViewfinder *_fullscreenViewfinder
 @property  CAMViewfinderTransitionController *_transitionController
 @property  <CAMViewfinderTransitionable> *_viewfinderTransitionable
 @property  CAMTopBar *_topBar
 @property  CAMBottomBar *_bottomBar
 @property  CAMFlashButton *_flashButton
 @property  CAMFlashBadge *_flashBadge
 @property  CAMHDRButton *_HDRButton
 @property  CAMHDRBadge *_HDRBadge
 @property  CAMTimerButton *_timerButton
 @property  CAMLivePhotoButton *_livePhotoButton
 @property  CAMFlipButton *_flipButton
 @property  CAMElapsedTimeView *_elapsedTimeView
 @property  CAMFocusLockBadge *_focusAndExposureLockBadge
 @property  UIButton *_reviewButton
 @property  CAMCreativeCameraButton *_creativeCameraButton
 @property  CAMMessagesPhotosButton *_photosButton
 @property  PUReviewScreenDoneButton *_doneButton
 @property  CAMFilterNameBadge *_filterNameBadge
 @property  CAMLivePhotoBadge *_livePhotoBadge
 @property  long long _shallowDepthOfFieldStatus
 @property  long long _stagePreviewStatus
 @property  CAMShallowDepthOfFieldBadge *_shallowDepthOfFieldBadge
 @property  CAMPortraitModeInstructionLabel *_portraitModeInstructionLabel
 @property  CAMQRCodeInstructionLabel *_qrCodeInstructionLabel
 @property  CAMPortraitModeInstructionLabel *_targetPortraitModeInstructionLabel
 @property  CAMQRCodeInstructionLabel *_targetQRCodeInstructionLabel
 @property  CAMPortraitModeDescriptionOverlayView *_portraitModeDescriptionOverlayView
 @property  CAMCTMDescriptionOverlayView *_ctmDescriptionOverlayView
 @property  CAMMetalContext *_metalContext
 @property  CUShutterButton *_shutterButton
 @property  CAMDynamicShutterControl *_dynamicShutterControl
 @property  UIControl *_primaryShutterControl
 @property  CUShutterButton *_stillDuringVideoButton
 @property  CAMModeDial *_modeDial
 @property  CAMImageWell *_imageWell
 @property  CAMFilterButton *_filterButton
 @property  CEKApertureButton *_apertureButton
 @property  CAMIntensityButton *_intensityButton
 @property  CAMBurstIndicatorView *_burstIndicatorView
 @property  CAMTimerIndicatorView *_timerIndicatorView
 @property  CAMZoomSlider *_zoomSlider
 @property  CAMZoomControl *_zoomControl
 @property  CAMGridView *_gridView
 @property  CAMLevelIndicatorView *_levelView
 @property  CAMLevelViewModel *_levelViewModel
 @property  CAMFramerateIndicatorView *_framerateIndicatorView
 @property  CAMUtilityBar *_utilityBar
 @property  CEKWheelScrubberView *_filterScrubberView
 @property  CEKApertureSlider *_portraitApertureSlider
 @property  CEKSlider *_portraitIntensitySlider
 @property  CEKLightingControl *_lightingControl
 @property  CEKLightingNameBadge *_lightingNameBadge
 @property  BOOL _proactiveFlashSuggestionSuppressed
 @property  long long _flashAndHDRConflictingControl
 @property  BOOL _capturingFromPhysicalButton
 @property  BOOL _swipeToModeSwitchEnabled
 @property  UISwipeGestureRecognizer *_previousModeGestureRecognizer
 @property  UISwipeGestureRecognizer *_nextModeGestureRecognizer
 @property  CAMPhysicalCaptureRecognizer *_physicalCaptureRecognizer
 @property  UIPinchGestureRecognizer *_zoomPinchGestureRecognizer
 @property  UIPanGestureRecognizer *_cameraRollSwipeUpGestureRecognizer
 @property  UISwipeGestureRecognizer *_swipeDownGestureRecognizer
 @property  UISwipeGestureRecognizer *_swipeUpGestureRecognizer
 @property  UISwipeGestureRecognizer *_previousFilterGestureRecognizer
 @property  UISwipeGestureRecognizer *_nextFilterGestureRecognizer
 @property  CAMPhysicalCaptureNotifier *_physicalCaptureNotifier
 @property  double _cachedVideoZoomFactor
 @property  BOOL _shouldIgnoreZoomFactorKVOForRamping
 @property  double _videoZoomFactorAtPinchStart
 @property  BOOL _shouldUseZoomControlInsteadOfSlider
 @property  CAMPreciseTimer *_currentBurstTimer
 @property  BOOL _shouldCaptureWithTimer
 @property  BOOL _capturingFromTimer
 @property  CAMAnimationDelegate *_synchronizedCaptureTimerDelegate
 @property  unsigned long _remainingCaptureTimerTicks
 @property  NSDate *_lastTimerIndicatorFaceUpdateDate
 @property  CAMTorchPatternController *_torchPatternController
 @property  unsigned long _lastShutterButtonTouchDownTime
 @property  UIAlertController *_diskSpaceAlertController
 @property  BOOL _burstEndSoundPlaying
 @property  UIAlertController *_flashOrTorchUnavailableAlertController
 @property  BOOL _resetTimerDurationAfterDelayedCapture
 @property  BOOL _outOfDiskSpace
 @property  BOOL _performingTopBarOrientationChange
 @property  BOOL _flashingLivePhotoBadge
 @property  BOOL _wantsFilterScrubberVisible
 @property  BOOL _shouldShowFilterScrubberAfterNextRender
 @property  BOOL _showingFilterScrubber
 @property  BOOL _showingPortraitApertureSlider
 @property  BOOL _showingPortraitIntensitySlider
 @property  BOOL _animatingFilterScrubberDismissal
 @property  long long _overCapturePreviewStatus
 @property  BOOL _shouldDisableUserInteractionForTransitioning
 @property  BOOL _transitioningToCreativeCamera
 @property  BOOL _transitioningToReview
 @property  BOOL _transitioningBackFromReview
 @property  BOOL _modeDisabledForMultitasking
 @property  CAMDisabledModeOverlayView *_disabledModeOverlayView
 @property  NSMutableSet *_filterNamesSelectedBeforeCapture
 @property  long long _lastZoomInteractionType
 @property  NSMutableArray *_accessibilityHUDManagers
 @property  CAMFeedbackController *_feedbackController
 @property  unsigned long _lastPerformedShutterButtonFeedbackType
 @property  id _filterScrubberLayerContents
 @property  NSArray *_filterTypes
 @property  BOOL _lastMRCResultsCount
 @property  BOOL userInteractionLoggingEnabled
 @property  NSSet *availableCaptureModes
 @property  BOOL automaticallyAdjustsAvailableCaptureModes
 @property  long long autorotationStyle
 @property  BOOL automaticallyAdjustsAutorotationStyle
 @property  BOOL automaticallyAdjustsApplicationIdleTimer
 @property  <CAMCameraConfigurationDelegate> *configurationDelegate
 @property  BOOL performingTileTransition
 @property  BOOL disablingMultipleCaptureFeatures
 @property  BOOL disablingAdditionalCaptures
 @property  BOOL preventingAdditionalCaptures
 @property  unsigned long persistenceBehavior
 @property  long long messagesTransitionState
 @property  long long emulationMode
 @property  BOOL showingStandardControls
 @property  long long imagePickerVideoConfiguration
 @property  double maximumVideoRecordingDuration
 @property  UIView *customOverlayView
 @property  {CGAffineTransform=dddddd} customPreviewViewTransform
 @property  BOOL performingReviewUsingOverlay
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} reviewUsingOverlayFrame
 @property  long long flashMode
 @property  long long torchMode
 @property  long long hdrMode
 @property  long long timerDuration
 @property  long long livePhotoMode
 @property  long long photoModeAspectRatioCrop
 @property  long long configuredCaptureMode
 @property  long long currentCaptureMode
 @property  long long configuredCaptureDevice
 @property  long long currentCaptureDevice
 @property  BOOL capturingPhoto
 @property  BOOL capturingLivePhoto
 @property  BOOL recording
 @property  <CAMViewfinderReviewButtonSource> *reviewButtonSource
 @property  <CAMCreativeCameraDelegate> *creativeCameraDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL shouldHideTopBar
 @property  BOOL shouldHideFlashButton
 @property  BOOL shouldHideHDRButton
 @property  BOOL shouldHideTimerButton
 @property  BOOL shouldHideFlipButton
 @property  BOOL shouldHideElapsedTimeView
 @property  BOOL shouldHideLivePhotoButton
 @property  BOOL shouldHidePortraitModeInstructionLabel
 @property  BOOL shouldHideQRCodeInstructionLabel
 @property  BOOL shouldHideFilterNameBadge
 @property  BOOL shouldHideLightingControl
 @property  BOOL shouldLayoutLightingNameBadgeAtBottom
 @property  BOOL shouldShiftPreviewForUtilityBar

  // class methods
  +[CAMViewfinderViewController _dynamicShutterSettingsForCameraMode:timerDuration:usingCreativeCameraControls:]

  // instance methods
  -[CAMViewfinderViewController dealloc]
  -[CAMViewfinderViewController .cxx_destruct]
  -[CAMViewfinderViewController loadView]
  -[CAMViewfinderViewController gestureRecognizerShouldBegin:]
  -[CAMViewfinderViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CAMViewfinderViewController gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CAMViewfinderViewController gestureRecognizer:shouldReceiveTouch:]
  -[CAMViewfinderViewController viewWillAppear:]
  -[CAMViewfinderViewController viewWillDisappear:]
  -[CAMViewfinderViewController viewDidLoad]
  -[CAMViewfinderViewController viewWillLayoutSubviews]
  -[CAMViewfinderViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CAMViewfinderViewController supportedInterfaceOrientations]
  -[CAMViewfinderViewController viewDidAppear:]
  -[CAMViewfinderViewController viewDidDisappear:]
  -[CAMViewfinderViewController shouldAutorotate]
  -[CAMViewfinderViewController currentContentSize]
  -[CAMViewfinderViewController _layoutStyle]
  -[CAMViewfinderViewController prefersHomeIndicatorAutoHidden]
  -[CAMViewfinderViewController preferredScreenEdgesDeferringSystemGestures]
  -[CAMViewfinderViewController preferredWhitePointAdaptivityStyle]
  -[CAMViewfinderViewController _transitionController]
  -[CAMViewfinderViewController _beginDisablingInterfaceAutorotation]
  -[CAMViewfinderViewController _endDisablingInterfaceAutorotation]
  -[CAMViewfinderViewController _canShowWhileLocked]
  -[CAMViewfinderViewController prefersStatusBarHidden]
  -[CAMViewfinderViewController _previewViewController]
  -[CAMViewfinderViewController _doneButton]
  -[CAMViewfinderViewController hdrMode]
  -[CAMViewfinderViewController prepareForDefaultImageSnapshotForScreen:]
  -[CAMViewfinderViewController _metalContext]
  -[CAMViewfinderViewController _currentMode]
  -[CAMViewfinderViewController _currentDevice]
  -[CAMViewfinderViewController _handleApplicationDidBecomeActive:]
  -[CAMViewfinderViewController _handleApplicationWillResignActive:]
  -[CAMViewfinderViewController flashMode]
  -[CAMViewfinderViewController setFlashMode:]
  -[CAMViewfinderViewController setHDRMode:]
  -[CAMViewfinderViewController torchMode]
  -[CAMViewfinderViewController setTorchMode:]
  -[CAMViewfinderViewController isRecording]
  -[CAMViewfinderViewController stopRecording]
  -[CAMViewfinderViewController isCapturingPhoto]
  -[CAMViewfinderViewController startRecording]
  -[CAMViewfinderViewController _gridView]
  -[CAMViewfinderViewController _isZooming]
  -[CAMViewfinderViewController _shutterButton]
  -[CAMViewfinderViewController _handleContentSizeCategoryDidChange:]
  -[CAMViewfinderViewController physicalCaptureNotifierDidChangeState:]
  -[CAMViewfinderViewController _physicalCaptureNotifier]
  -[CAMViewfinderViewController _handleApplicationWillEnterForeground:]
  -[CAMViewfinderViewController _handleApplicationDidEnterBackground:]
  -[CAMViewfinderViewController _setLayoutStyle:]
  -[CAMViewfinderViewController _flipButton]
  -[CAMViewfinderViewController _topBar]
  -[CAMViewfinderViewController _livePhotoBadge]
  -[CAMViewfinderViewController configurationDelegate]
  -[CAMViewfinderViewController setConfigurationDelegate:]
  -[CAMViewfinderViewController _storageController]
  -[CAMViewfinderViewController _bottomBar]
  -[CAMViewfinderViewController _captureController]
  -[CAMViewfinderViewController _feedbackController]
  -[CAMViewfinderViewController _reviewButton]
  -[CAMViewfinderViewController _powerController]
  -[CAMViewfinderViewController wheelScrubberView:updateCell:forItemAtIndex:]
  -[CAMViewfinderViewController wheelScrubberViewDidChangeSelectedIndex:]
  -[CAMViewfinderViewController lightingControl:willChangeExpanded:]
  -[CAMViewfinderViewController lightingControlDidChangeExpanded:]
  -[CAMViewfinderViewController lightingControlDidChangeSelectedLightingType:]
  -[CAMViewfinderViewController _apertureButton]
  -[CAMViewfinderViewController _lightingNameBadge]
  -[CAMViewfinderViewController _lightingControl]
  -[CAMViewfinderViewController _livePhotoButton]
  -[CAMViewfinderViewController _portraitOrientedSizeForSize:]
  -[CAMViewfinderViewController _shallowDepthOfFieldStatus]
  -[CAMViewfinderViewController fullscreenViewfinderDidCreatePortraitControls:]
  -[CAMViewfinderViewController fullscreenViewfinderDidCreateControlDrawer:]
  -[CAMViewfinderViewController fullscreenViewfinder:didChangeControlDrawerVisibility:]
  -[CAMViewfinderViewController fullscreenViewfinder:didChangeExpanded:forDrawerControlOfType:animated:]
  -[CAMViewfinderViewController _controlDrawer]
  -[CAMViewfinderViewController _modeDial]
  -[CAMViewfinderViewController _imageWell]
  -[CAMViewfinderViewController _zoomControl]
  -[CAMViewfinderViewController _elapsedTimeView]
  -[CAMViewfinderViewController _creativeCameraButton]
  -[CAMViewfinderViewController _filterNameBadge]
  -[CAMViewfinderViewController _qrCodeInstructionLabel]
  -[CAMViewfinderViewController currentCaptureMode]
  -[CAMViewfinderViewController stillImageRequestDidStartCapturing:resolvedSettings:]
  -[CAMViewfinderViewController stillImageRequestDidStopCapturingStillImage:]
  -[CAMViewfinderViewController stillImageRequestDidCompleteStillImageCapture:withResponse:error:]
  -[CAMViewfinderViewController stillImageRequestDidCompleteVideoCapture:withResponse:error:]
  -[CAMViewfinderViewController stillImageRequestDidCompleteCapture:error:]
  -[CAMViewfinderViewController stillImageRequestDidCompleteStillImageLocalPersistence:withResponse:error:]
  -[CAMViewfinderViewController stillImageRequestDidCompleteStillImageRemotePersistence:withResponse:error:]
  -[CAMViewfinderViewController videoRequestDidStartCapturing:]
  -[CAMViewfinderViewController videoRequestDidStopCapturing:]
  -[CAMViewfinderViewController videoRequestDidCompleteCapture:withResponse:error:]
  -[CAMViewfinderViewController videoRequestDidCompleteLocalPersistence:withResponse:error:]
  -[CAMViewfinderViewController videoRequestDidCompleteRemotePersistence:withResponse:error:]
  -[CAMViewfinderViewController panoramaRequestDidStartCapturing:]
  -[CAMViewfinderViewController panoramaRequest:didGeneratePaintingStatus:]
  -[CAMViewfinderViewController panoramaRequestDidStopCapturing:interrupted:]
  -[CAMViewfinderViewController panoramaRequestDidCompleteCapture:withResponse:error:]
  -[CAMViewfinderViewController panoramaRequestDidCompleteLocalPersistence:withResponse:error:]
  -[CAMViewfinderViewController panoramaRequestDidCompleteRemotePersistence:withResponse:error:]
  -[CAMViewfinderViewController stillImageRequestsWillStartCapturingLivePhotoVideo]
  -[CAMViewfinderViewController stillImageRequestsDidCompleteCapturingLivePhotoVideo]
  -[CAMViewfinderViewController stillImageRequestsWillRequestCTMVideoCaptureStart]
  -[CAMViewfinderViewController stillImageRequestsWillRequestCTMVideoCaptureEnd]
  -[CAMViewfinderViewController stillImageRequestWillStartCapturingCTMVideoWithCaptureInFlight:]
  -[CAMViewfinderViewController stillImageRequestsDidStopCapturingCTMVideo]
  -[CAMViewfinderViewController zoomSliderDidBeginAutozooming:]
  -[CAMViewfinderViewController zoomSliderDidEndAutozooming:]
  -[CAMViewfinderViewController zoomSliderDidEndZooming:]
  -[CAMViewfinderViewController updateControlVisibilityAnimated:]
  -[CAMViewfinderViewController _stillDuringVideoButton]
  -[CAMViewfinderViewController _flashButton]
  -[CAMViewfinderViewController _HDRButton]
  -[CAMViewfinderViewController _timerButton]
  -[CAMViewfinderViewController _utilityBar]
  -[CAMViewfinderViewController _lowLightMode]
  -[CAMViewfinderViewController simulateImageWellTap]
  -[CAMViewfinderViewController controlDrawer:didChangeFlashMode:]
  -[CAMViewfinderViewController livePhotoMode]
  -[CAMViewfinderViewController controlDrawer:didChangeLivePhotoMode:]
  -[CAMViewfinderViewController controlDrawer:didChangeAspectRatio:]
  -[CAMViewfinderViewController timerDuration]
  -[CAMViewfinderViewController controlDrawer:didChangeTimerDuration:]
  -[CAMViewfinderViewController controlDrawer:didChangeHDRMode:]
  -[CAMViewfinderViewController controlDrawerFlashButtonUnavailable:]
  -[CAMViewfinderViewController controlDrawer:wantsFilterScrubberVisible:]
  -[CAMViewfinderViewController controlDrawerDidCreateFilterScrubber:]
  -[CAMViewfinderViewController controlDrawerDidCreateApertureSlider:]
  -[CAMViewfinderViewController controlDrawerDidCreateIntensitySlider:]
  -[CAMViewfinderViewController controlDrawerDidCreateLowLightSlider:]
  -[CAMViewfinderViewController controlDrawer:didCreateControlForType:]
  -[CAMViewfinderViewController controlDrawer:didSelectMenuItemForControlType:]
  -[CAMViewfinderViewController _filterScrubberView]
  -[CAMViewfinderViewController videoConfigurationStatusIndicatorDidTapResolution:]
  -[CAMViewfinderViewController videoConfigurationStatusIndicatorDidTapFramerate:]
  -[CAMViewfinderViewController zoomControl:didChangeZoomFactor:interactionType:]
  -[CAMViewfinderViewController canToggleBetweenZoomFactorsForZoomControl:]
  -[CAMViewfinderViewController toggleBetweenZoomFactorsForZoomControl:]
  -[CAMViewfinderViewController zoomControlCanPlayHaptics:]
  -[CAMViewfinderViewController zoomControlShouldSnapDialToSwitchOverZoomFactors:]
  -[CAMViewfinderViewController zoomControl:didChangeSelectedButtonIndex:displayZoomFactor:]
  -[CAMViewfinderViewController photoModeAspectRatioCrop]
  -[CAMViewfinderViewController _updatePropertiesForCaptureConfiguration:conflictingControlConfiguration:]
  -[CAMViewfinderViewController _previewDidStartRunning:]
  -[CAMViewfinderViewController _captureOrientationChanged:]
  -[CAMViewfinderViewController _dominantPhysicalButtonChanged:]
  -[CAMViewfinderViewController _handleApplicationWillAddDeactivationReason:]
  -[CAMViewfinderViewController _handleApplicationDidRemoveDeactivationReason:]
  -[CAMViewfinderViewController _handleCallStatusMonitorDidChangeCallActive:]
  -[CAMViewfinderViewController _handleTimelapseLowDiskSpaceNotification:]
  -[CAMViewfinderViewController _autorotationStyleForLayoutStyle:]
  -[CAMViewfinderViewController _automaticallyAdjustedCaptureModes]
  -[CAMViewfinderViewController _dismissDiskSpaceAlertViewAnimated:]
  -[CAMViewfinderViewController _dismissFlashOrTorchUnavailableAlertViewAnimated:]
  -[CAMViewfinderViewController _currentGraphConfiguration]
  -[CAMViewfinderViewController _configuredGraphConfiguration]
  -[CAMViewfinderViewController _setCurrentGraphConfiguration:]
  -[CAMViewfinderViewController _resetPortraitModeApertureValueIfNeededForGraphConfiguration:]
  -[CAMViewfinderViewController _motionController]
  -[CAMViewfinderViewController _updateForCurrentConfiguration]
  -[CAMViewfinderViewController _createCommonControlsIfNecessary]
  -[CAMViewfinderViewController _createModeSpecificControlsForConfiguration:]
  -[CAMViewfinderViewController _updateBarBackgroundStyleForMode:animated:]
  -[CAMViewfinderViewController _updateShutterButtonForCameraMode:isCapturing:animated:]
  -[CAMViewfinderViewController viewfinderView]
  -[CAMViewfinderViewController _aspectRatioForMode:]
  -[CAMViewfinderViewController autorotationStyle]
  -[CAMViewfinderViewController _applyTransformsForAutorotationStyle:]
  -[CAMViewfinderViewController _resolveAndUpdatePotentiallyConflictingControls:]
  -[CAMViewfinderViewController _shouldDisableModeForMultitaskingAndGraphConfiguration:]
  -[CAMViewfinderViewController _setModeDisabledForMultitasking:animateUIChanges:]
  -[CAMViewfinderViewController _configureZoomControlForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updateZoomControlLayoutForGraphConfiguration:fromGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updateLightingControlFadesForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updateFilterButtonOnState]
  -[CAMViewfinderViewController _resolvedTimerDuration]
  -[CAMViewfinderViewController _setTimerDurationAndUpdateUI:animated:]
  -[CAMViewfinderViewController _collapseExpandedButtonsAnimated:]
  -[CAMViewfinderViewController _updateUIForCaptureOrientationAnimated:]
  -[CAMViewfinderViewController _updateHomeIndicatorBehaviorsForCaptureOrientation]
  -[CAMViewfinderViewController _updateFilterScrubberForGraphConfiguration:]
  -[CAMViewfinderViewController _updateFilterNameBadgeAnimated:]
  -[CAMViewfinderViewController _updatePortraitApertureSliderForGraphConfiguration:]
  -[CAMViewfinderViewController _updatePortraitApertureButtonForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updatePortraitIntensitySliderForCurrentState]
  -[CAMViewfinderViewController _updateIntensityButtonForCurrentState]
  -[CAMViewfinderViewController _fullscreenViewfinder]
  -[CAMViewfinderViewController _updateLightingUIForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updatePortraitModeInstructionLabelForCurrentState]
  -[CAMViewfinderViewController _updateQRCodeInstructionLabelForCurrentState]
  -[CAMViewfinderViewController _panoramaViewController]
  -[CAMViewfinderViewController changeToMode:device:]
  -[CAMViewfinderViewController applyCaptureConfiguration:conflictingControlConfiguration:]
  -[CAMViewfinderViewController _hideUtilityBarAnimated:]
  -[CAMViewfinderViewController _zoomSlider]
  -[CAMViewfinderViewController _burstIndicatorView]
  -[CAMViewfinderViewController _framerateIndicatorView]
  -[CAMViewfinderViewController _embedAllControlsWithLayoutStyle:]
  -[CAMViewfinderViewController _updateSwipeToModeSwitchGestureRecognizersWithDirectionsForLayoutStyle:]
  -[CAMViewfinderViewController _updatePhysicalButtonCapturedEnabledResigningActiveOrDisappearing:]
  -[CAMViewfinderViewController automaticallyAdjustsAutorotationStyle]
  -[CAMViewfinderViewController _setInternalAutorotationStyle:]
  -[CAMViewfinderViewController _resetZoom]
  -[CAMViewfinderViewController _canUseFilteringForLayoutStyle:]
  -[CAMViewfinderViewController _previewFiltersForMode:device:]
  -[CAMViewfinderViewController _appropriateLayoutStyleForSize:]
  -[CAMViewfinderViewController isEmulatingImagePicker]
  -[CAMViewfinderViewController _setAccessibilityHUDManagers:]
  -[CAMViewfinderViewController isShowingStandardControls]
  -[CAMViewfinderViewController _createMetalContextIfNecessary]
  -[CAMViewfinderViewController _useCreativeCameraControls]
  -[CAMViewfinderViewController _handleFlipButtonTouchDown:]
  -[CAMViewfinderViewController _handleFlipButtonReleased:]
  -[CAMViewfinderViewController _handleImageWellReleased:]
  -[CAMViewfinderViewController _handleImageWellPressed:]
  -[CAMViewfinderViewController _handleModeDialTouchDown:]
  -[CAMViewfinderViewController _handleModeDialValueChanged:]
  -[CAMViewfinderViewController _handleTouchDownForZoomControl:]
  -[CAMViewfinderViewController _handleCreativeCameraButtonPressed:]
  -[CAMViewfinderViewController _handleCreativeCameraButtonReleased:]
  -[CAMViewfinderViewController _handleCreativeCameraButtonTouchAttemptedWhileDisabled:]
  -[CAMViewfinderViewController _handlePhotosButtonReleased:]
  -[CAMViewfinderViewController _handleDoneButtonReleased:]
  -[CAMViewfinderViewController _createCommonGestureRecognizersIfNecessary]
  -[CAMViewfinderViewController _updateDisabledModeUIAnimated:]
  -[CAMViewfinderViewController _cameraRollController]
  -[CAMViewfinderViewController cameraRollControllerDidStartSession:]
  -[CAMViewfinderViewController modesForModeDial:]
  -[CAMViewfinderViewController _remoteShutterController]
  -[CAMViewfinderViewController setAvailableCaptureModes:]
  -[CAMViewfinderViewController _closedViewfinderController]
  -[CAMViewfinderViewController _createPhysicalCaptureRecognizerOrNotifierIfNecessary]
  -[CAMViewfinderViewController _startGeneratingDominantPhysicalButtonNotificationsIfSupported]
  -[CAMViewfinderViewController _updateDiskSpaceAlertViewVisibilityAnimated:]
  -[CAMViewfinderViewController _updatePairedVideoCaptureOnControllerForGraphConfiguration:isShowingCameraRoll:]
  -[CAMViewfinderViewController isDisablingAdditionalCaptures]
  -[CAMViewfinderViewController _setPreventingAdditionalCaptures:]
  -[CAMViewfinderViewController setPerformingTileTransition:]
  -[CAMViewfinderViewController isPerformingTileTransition]
  -[CAMViewfinderViewController _writeUserPreferences]
  -[CAMViewfinderViewController _supportedInterfaceOrientationsForLayoutStyle:]
  -[CAMViewfinderViewController _updateLayoutStyleForSize:]
  -[CAMViewfinderViewController _autoHideHomeIndicatorForOrientation:]
  -[CAMViewfinderViewController _homeIndicatorAutoHideOrientation]
  -[CAMViewfinderViewController _currentStillImageCaptureMomentSettings]
  -[CAMViewfinderViewController _stillImageCaptureRequestWithCurrentSettingsAsBurst:withMomentSettings:withCTMCaptureType:maximumLength:]
  -[CAMViewfinderViewController _dynamicShutterControl]
  -[CAMViewfinderViewController _updateUIForCapturing:animated:]
  -[CAMViewfinderViewController _updateEnabledControlsWithReason:]
  -[CAMViewfinderViewController _setCurrentStillImageCaptureMomentSettings:]
  -[CAMViewfinderViewController _isProactiveFlashSuggestionSuppressed]
  -[CAMViewfinderViewController _resolvedFlashMode]
  -[CAMViewfinderViewController _resolvedHDRMode]
  -[CAMViewfinderViewController _shouldRequestSpatialOverCaptureForGraphConfiguration:ctmCaptureType:isCapturingVideo:isBurst:]
  -[CAMViewfinderViewController _lowLightModeForCaptureMode:device:ctmCaptureType:isBurst:]
  -[CAMViewfinderViewController _isCTMCaptureForType:]
  -[CAMViewfinderViewController _isLowLightEnabledForCurrentSettings]
  -[CAMViewfinderViewController _supportsSpatialOverCaptureForGraphConfiguration:ctmCaptureType:isCapturingVideo:isBurst:]
  -[CAMViewfinderViewController _currentCaptureRequestOrigin]
  -[CAMViewfinderViewController _isCapturingFromTimer]
  -[CAMViewfinderViewController _shouldCaptureWithTimer]
  -[CAMViewfinderViewController _shouldReportUserInitiationTimeForCurrentSettings]
  -[CAMViewfinderViewController _lastShutterButtonTouchDownTime]
  -[CAMViewfinderViewController _shutterButtonSetSpinning:]
  -[CAMViewfinderViewController _updateUserPreferencesForFilterUsage]
  -[CAMViewfinderViewController _updateFilterScrubberAfterCapture]
  -[CAMViewfinderViewController _physicalCaptureRecognizer]
  -[CAMViewfinderViewController persistenceBehavior]
  -[CAMViewfinderViewController _effectFilterTypeForMode:]
  -[CAMViewfinderViewController _captureFiltersForMode:device:]
  -[CAMViewfinderViewController _originalCaptureFiltersForMode:]
  -[CAMViewfinderViewController _aspectRatioCropForMode:]
  -[CAMViewfinderViewController _sanitizedLightingTypeForMode:device:]
  -[CAMViewfinderViewController _persistenceOptionsForBehavior:allowingOptionalLocalPersistence:]
  -[CAMViewfinderViewController _resolvedLivePhotoMode]
  -[CAMViewfinderViewController _updateUserInitiationTimeForRequest:]
  -[CAMViewfinderViewController _locationController]
  -[CAMViewfinderViewController _temporaryPersistenceOptionsForBehavior:]
  -[CAMViewfinderViewController _updateOriginForRequest:]
  -[CAMViewfinderViewController _cachedVideoZoomFactor]
  -[CAMViewfinderViewController _lastZoomInteractionType]
  -[CAMViewfinderViewController _captureStillImageWithRequest:error:]
  -[CAMViewfinderViewController _performCaptureAnimation]
  -[CAMViewfinderViewController _performCaptureAnimationWithDuration:]
  -[CAMViewfinderViewController _performCaptureAnimationWithDuration:curve:]
  -[CAMViewfinderViewController _idleController]
  -[CAMViewfinderViewController _updateImageWellWithStillImageResponse:forRequest:error:]
  -[CAMViewfinderViewController _isPrimaryDisplayAssetForCoordinationInfo:]
  -[CAMViewfinderViewController _updateAGGDForStillImageCaptureResponse:request:]
  -[CAMViewfinderViewController _currentBurstTimer]
  -[CAMViewfinderViewController _beginCapturingBurst]
  -[CAMViewfinderViewController _captureRequest:didCompleteVideoCaptureWithResponse:error:]
  -[CAMViewfinderViewController _updateLowLightModeForLowLightStatus]
  -[CAMViewfinderViewController _isCTMVideoSupportedForGraphConfiguration:]
  -[CAMViewfinderViewController _resolvedTorchMode]
  -[CAMViewfinderViewController _limitZoomRangeForRecordingIfNecessary]
  -[CAMViewfinderViewController _restoreZoomRangeAfterRecordingIfNecessary]
  -[CAMViewfinderViewController _presentImageWellImage:uuid:animated:]
  -[CAMViewfinderViewController maximumVideoRecordingDuration]
  -[CAMViewfinderViewController _stopGeneratingDominantPhysicalButtonNotificationsIfSupported]
  -[CAMViewfinderViewController _updateTorchAggregateDictionaryForRequest:isTorchActive:]
  -[CAMViewfinderViewController _updateAGGDForVideoCaptureResponse:request:]
  -[CAMViewfinderViewController _configuredMode]
  -[CAMViewfinderViewController _updateTorchModeOnControllerForMode:]
  -[CAMViewfinderViewController _updateAGGDForPanoramaCaptureResponse:request:]
  -[CAMViewfinderViewController _timelapseController]
  -[CAMViewfinderViewController _updateZoomAggregateDictionaryForMode:device:videoConfiguration:ctmCaptureType:zoomFactor:zoomInteractionType:]
  -[CAMViewfinderViewController _isCapturingTimelapse]
  -[CAMViewfinderViewController _setResolvedTimerDuration:]
  -[CAMViewfinderViewController setTimerDuration:]
  -[CAMViewfinderViewController _updateControlStatusBarContentsVisibilityForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _setCapturingFromTimer:]
  -[CAMViewfinderViewController _setupAndStartSynchronizedCaptureTimerDelegate]
  -[CAMViewfinderViewController _indicateCaptureTimerProgressUsingTorch]
  -[CAMViewfinderViewController _remainingCaptureTimerTicks]
  -[CAMViewfinderViewController _teardownSynchronizedCaptureTimerDelegate]
  -[CAMViewfinderViewController _teardownBurstTimer]
  -[CAMViewfinderViewController _stopCapturingBurst]
  -[CAMViewfinderViewController _resetTimerDurationAfterDelayedCapture]
  -[CAMViewfinderViewController _setResetTimerDurationAfterDelayedCapture:]
  -[CAMViewfinderViewController _stopCaptureTimerProgressUsingTorch]
  -[CAMViewfinderViewController _cancelCTMCapture]
  -[CAMViewfinderViewController _currentDevicePosition]
  -[CAMViewfinderViewController isDisablingMultipleCaptureFeatures]
  -[CAMViewfinderViewController _synchronizedCaptureTimerDelegate]
  -[CAMViewfinderViewController _setSynchronizedCaptureTimerDelegate:]
  -[CAMViewfinderViewController _synchronizedCaptureTimerDelegateFired:]
  -[CAMViewfinderViewController _startSynchronizedCaptureTimerDelegate]
  -[CAMViewfinderViewController _numberOfTicksForTimerDuration:]
  -[CAMViewfinderViewController _setRemainingCaptureTimerTicks:]
  -[CAMViewfinderViewController _timerIndicatorView]
  -[CAMViewfinderViewController _shouldUseBurstForCaptureTimer]
  -[CAMViewfinderViewController _setupBurstTimerWithDelay:]
  -[CAMViewfinderViewController _commitCTMCaptureWithType:]
  -[CAMViewfinderViewController _initiateCTMCaptureWithCurrentSettingsAtSystemTime:]
  -[CAMViewfinderViewController _captureStillImageWithCurrentSettings]
  -[CAMViewfinderViewController _stopCountdownForCaptureTimer]
  -[CAMViewfinderViewController _torchPatternController]
  -[CAMViewfinderViewController _handleUserChangedToMode:device:]
  -[CAMViewfinderViewController _deviceForModeChange]
  -[CAMViewfinderViewController _lastConfigurationRequestID]
  -[CAMViewfinderViewController _shouldResetZoomForChangeFromMode:toMode:]
  -[CAMViewfinderViewController _graphConfigurationForChangeToMode:device:fromGraphConfiguration:]
  -[CAMViewfinderViewController _defaultZoomFactorForGraphConfiguration:]
  -[CAMViewfinderViewController _handleUserChangedToMode:device:zoomFactor:]
  -[CAMViewfinderViewController _willChangeToGraphConfiguration:zoomFactor:fromGraphConfiguration:animated:]
  -[CAMViewfinderViewController _hasInFlightConfiguration]
  -[CAMViewfinderViewController _changeToGraphConfiguration:zoomFactor:fromGraphConfiguration:]
  -[CAMViewfinderViewController _stopFlashingLivePhotoBadge]
  -[CAMViewfinderViewController _setReconfiguring:]
  -[CAMViewfinderViewController _snapshotAndFadeDisappearingOverlayViewsForChangeToGraphConfiguration:]
  -[CAMViewfinderViewController _closeViewfinderForChangeFromMode:toMode:fromDevice:toDevice:]
  -[CAMViewfinderViewController _isShowingCameraRoll]
  -[CAMViewfinderViewController _pausePairedVideoCaptureOnControllerIfNecessaryForGraphConfiguration:isShowingCameraRoll:]
  -[CAMViewfinderViewController _hideControlsForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _updateFullscreenViewfinderControlsVisibilityForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _shouldHidePortraitModeDescriptionOverlayViewForGraphConfiguration:]
  -[CAMViewfinderViewController _createPortraitModeDescriptionOverlayViewIfNecessary]
  -[CAMViewfinderViewController _shouldHideCTMDescriptionOverlayViewForGraphConfiguration:]
  -[CAMViewfinderViewController _createCTMDescriptionOverlayViewIfNecessary]
  -[CAMViewfinderViewController _shouldHideLivePhotoButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _createApertureButtonIfNecessary]
  -[CAMViewfinderViewController _shouldHideApertureButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _portraitModeLightingEffectType]
  -[CAMViewfinderViewController _createIntensityButtonIfNecessary]
  -[CAMViewfinderViewController _shouldHideIntensityButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _intensityButton]
  -[CAMViewfinderViewController _showControlsForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _isReconfiguringForTripleCameraEmulation]
  -[CAMViewfinderViewController _setCachedVideoZoomFactor:]
  -[CAMViewfinderViewController _zoomSliderValueForZoomFactor:]
  -[CAMViewfinderViewController _setLastZoomInteractionType:]
  -[CAMViewfinderViewController _setLowLightMode:]
  -[CAMViewfinderViewController _shouldApplyTopBarRotationForGraphConfiguration:]
  -[CAMViewfinderViewController _prepareTopBarForOrientationChangeDuringConfiguration]
  -[CAMViewfinderViewController _shouldRotateTopBarForGraphConfiguration:]
  -[CAMViewfinderViewController _resetAggregateInfoForPhotoFilters]
  -[CAMViewfinderViewController _setLightingType:forMode:]
  -[CAMViewfinderViewController _updateControlDrawerContentsVisibilityAnimated:]
  -[CAMViewfinderViewController _setConfiguredGraphConfiguration:]
  -[CAMViewfinderViewController _setBarcodeParsingSession:]
  -[CAMViewfinderViewController _setLastConfigurationRequestID:]
  -[CAMViewfinderViewController _setReconfiguringForTripleCameraEmulation:]
  -[CAMViewfinderViewController _setPerformingTopBarOrientationChange:]
  -[CAMViewfinderViewController _updatePanoramaSizeIfNeededForGraphConfiguration:]
  -[CAMViewfinderViewController _updateFlashButtonAvailability]
  -[CAMViewfinderViewController _portraitModeApertureValue]
  -[CAMViewfinderViewController _setPortraitModeApertureValue:]
  -[CAMViewfinderViewController _portraitModeIntensityValue]
  -[CAMViewfinderViewController _enableProactiveSuggestionsAnimated:]
  -[CAMViewfinderViewController _resetLowLightDurationMappingAnimated:]
  -[CAMViewfinderViewController _openViewfinderForAllModeAndDeviceChangeReasons]
  -[CAMViewfinderViewController captureController:didOutputFaceResults:bodyResults:]
  -[CAMViewfinderViewController _setLastMRCResultsCount:]
  -[CAMViewfinderViewController _didChangeToGraphConfiguration:forDesiredConfiguration:requestID:]
  -[CAMViewfinderViewController _callStatusMonitor]
  -[CAMViewfinderViewController _updateCaptureTimerIndicatorWithFaceResult:]
  -[CAMViewfinderViewController _targetPortraitModeInstructionLabel]
  -[CAMViewfinderViewController _lastTimerIndicatorFaceUpdateDate]
  -[CAMViewfinderViewController _setLastTimerIndicatorFaceUpdateDate:]
  -[CAMViewfinderViewController _lastMRCResultsCount]
  -[CAMViewfinderViewController _machineReadableCodeLoggingController]
  -[CAMViewfinderViewController _targetQRCodeInstructionLabel]
  -[CAMViewfinderViewController _barcodeParsingSession]
  -[CAMViewfinderViewController _keepAliveController]
  -[CAMViewfinderViewController automaticallyAdjustsApplicationIdleTimer]
  -[CAMViewfinderViewController _disabledPreviewController]
  -[CAMViewfinderViewController _createZoomPinchGestureRecognizerIfNecessary]
  -[CAMViewfinderViewController _createSwipeToModeSwitchGestureRecognizersIfNecessary]
  -[CAMViewfinderViewController _createCameraRollSwipeUpGestureRecognizerIfNecessary]
  -[CAMViewfinderViewController _previousModeSwipeDirectionForLayoutStyle:]
  -[CAMViewfinderViewController _swipedToPreviousCameraMode]
  -[CAMViewfinderViewController _nextModeSwitchDirectionForLayoutStyle:]
  -[CAMViewfinderViewController _swipedToNextCameraMode]
  -[CAMViewfinderViewController _handleZoomPinchGestureRecognizer:]
  -[CAMViewfinderViewController _handleCameraRollSwipeUpGestureRecognizer:]
  -[CAMViewfinderViewController _handleSwipeDownGestureRecognizer:]
  -[CAMViewfinderViewController _handleSwipeUpGestureRecognizer:]
  -[CAMViewfinderViewController _createVerticalSwipeGestureRecognizersIfNecessary]
  -[CAMViewfinderViewController _handleSwipeToPreviousFilterRecognizer:]
  -[CAMViewfinderViewController _handleSwipeToNextFilterRecognizer:]
  -[CAMViewfinderViewController _createShutterButtonIfNecessary]
  -[CAMViewfinderViewController _createFlipButtonIfNecessary]
  -[CAMViewfinderViewController _createTimerButtonIfNecessary]
  -[CAMViewfinderViewController _wantsHDRControlsVisible]
  -[CAMViewfinderViewController _createHDRButtonIfNecessary]
  -[CAMViewfinderViewController _createLivePhotoButtonIfNecessary]
  -[CAMViewfinderViewController _createModeDialIfNecessary]
  -[CAMViewfinderViewController _createFocusAndExposureLockBadgeIfNecessary]
  -[CAMViewfinderViewController _createCreativeCameraButtonIfNecessary]
  -[CAMViewfinderViewController _createPhotosButtonIfNecessary]
  -[CAMViewfinderViewController _createDoneButtonIfNecessary]
  -[CAMViewfinderViewController _createReviewButtonIfNecessary]
  -[CAMViewfinderViewController _createImageWellIfNecessary]
  -[CAMViewfinderViewController _createFlashButtonIfNecessary]
  -[CAMViewfinderViewController _createFlashBadgeIfNecessary]
  -[CAMViewfinderViewController _wantsZoomControlForGraphConfiguration:]
  -[CAMViewfinderViewController _createZoomControlIfNecessary]
  -[CAMViewfinderViewController _wantsZoomSliderForGraphConfiguration:]
  -[CAMViewfinderViewController _createZoomSliderIfNecessary]
  -[CAMViewfinderViewController _createStillImageControlsIfNecessary]
  -[CAMViewfinderViewController _createPortraitModeControlsIfNecessary]
  -[CAMViewfinderViewController _createVideoControlsIfNecessary]
  -[CAMViewfinderViewController _createPanoramaControlsIfNecessary]
  -[CAMViewfinderViewController _createTimelapseControlsIfNecessary]
  -[CAMViewfinderViewController _createLivePhotoBadgeIfNecessary]
  -[CAMViewfinderViewController _createTimerIndicatorViewIfNecessary]
  -[CAMViewfinderViewController _createHDRBadgeIfNecessary]
  -[CAMViewfinderViewController _createBurstIndicatorViewIfNecessary]
  -[CAMViewfinderViewController _createFilterButtonIfNecessary]
  -[CAMViewfinderViewController _createQRCodeInstructionLabelIfNecessary]
  -[CAMViewfinderViewController _createOrDestroyGridViewIfNecessary]
  -[CAMViewfinderViewController _createOrDestroyLevelViewIfNecessary]
  -[CAMViewfinderViewController _createFilterScrubberGestureRecognizersIfNecessary]
  -[CAMViewfinderViewController _createPortraitModeInstructionLabelIfNecessary]
  -[CAMViewfinderViewController _createLightingControlIfNecessary]
  -[CAMViewfinderViewController _createLightingNameBadgeIfNecessary]
  -[CAMViewfinderViewController _createShallowDepthOfFieldBadgeIfNecessary]
  -[CAMViewfinderViewController _createElapsedTimeViewIfNecessary]
  -[CAMViewfinderViewController _createStillDuringVideoButtonIfNecessary]
  -[CAMViewfinderViewController _createFramerateIndicatorViewIfNecessary]
  -[CAMViewfinderViewController _createPanoramaViewControllerIfNecessary]
  -[CAMViewfinderViewController _shouldCreateAndEmbedControls]
  -[CAMViewfinderViewController _embedModeDialWithLayoutStyle:]
  -[CAMViewfinderViewController _embedImageWellWithLayoutStyle:]
  -[CAMViewfinderViewController reviewButtonSource]
  -[CAMViewfinderViewController _embedReviewButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedCreativeCameraButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _shouldCreatePhotosButton]
  -[CAMViewfinderViewController _embedPhotosButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedDoneButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleFilterButtonTapped:]
  -[CAMViewfinderViewController _embedFilterButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleApertureButtonTapped:]
  -[CAMViewfinderViewController _embedApertureButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleIntensityButtonTapped:]
  -[CAMViewfinderViewController _embedIntensityButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleShutterButtonPressed:]
  -[CAMViewfinderViewController _handleShutterButtonReleased:]
  -[CAMViewfinderViewController _handleShutterButtonDragEnter:]
  -[CAMViewfinderViewController _handleShutterButtonDragExited:]
  -[CAMViewfinderViewController _handleShutterButtonCancelled:]
  -[CAMViewfinderViewController _embedShutterButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleStillDuringVideoButtonPressed:]
  -[CAMViewfinderViewController _handleStillDuringVideoButtonReleased:]
  -[CAMViewfinderViewController _embedStillDuringVideoButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _handleFlashButtonChangedFlashMode]
  -[CAMViewfinderViewController _handleFlashButtonWhileFlashUnavailable]
  -[CAMViewfinderViewController _embedFlashButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedFlashBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _embedElapsedTimeViewWithLayoutStyle:]
  -[CAMViewfinderViewController _handleHDRButtonChangedHDRMode]
  -[CAMViewfinderViewController _embedHDRButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _destroyHDRButtonIfNecessary]
  -[CAMViewfinderViewController _embedHDRBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _destroyHDRBadgeIfNecessary]
  -[CAMViewfinderViewController _embedFocusAndExposureLockBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _handleTimerButtonChangedTimerDuration]
  -[CAMViewfinderViewController _embedTimerButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedTimerIndicatorViewWithLayoutStyle:]
  -[CAMViewfinderViewController _handleLivePhotoButtonChangedLivePhotoMode]
  -[CAMViewfinderViewController _embedLivePhotoButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedLivePhotoBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _embedShallowDepthOfFieldBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _embedPortraitModeInstructionLabelWithLayoutStyle:]
  -[CAMViewfinderViewController _embedQRCodeInstructionLabelWithLayoutStyle:]
  -[CAMViewfinderViewController _dismissOverlays]
  -[CAMViewfinderViewController _wantsFilterScrubberVisible]
  -[CAMViewfinderViewController _setWantsFilterScrubberVisible:animated:]
  -[CAMViewfinderViewController _hasLowLightAutoDisabledReason:]
  -[CAMViewfinderViewController _setLowLightMode:animated:]
  -[CAMViewfinderViewController _updateLowLightControlsAnimated:]
  -[CAMViewfinderViewController _portraitModeInstructionLabel]
  -[CAMViewfinderViewController _embedPortraitModeDescriptionOverlayViewWithLayoutStyle:]
  -[CAMViewfinderViewController _embedCTMDescriptionOverlayView]
  -[CAMViewfinderViewController emulationMode]
  -[CAMViewfinderViewController _embedFlipButtonWithLayoutStyle:]
  -[CAMViewfinderViewController _embedBurstIndicatorViewWithLayoutStyle:]
  -[CAMViewfinderViewController _embedPanoramaViewWithLayoutStyle:]
  -[CAMViewfinderViewController _zoomSliderValueDidChange:forEvent:]
  -[CAMViewfinderViewController _shouldEnableZoomSlider]
  -[CAMViewfinderViewController _embedZoomSliderWithLayoutStyle:]
  -[CAMViewfinderViewController _shouldEnableZoomControl]
  -[CAMViewfinderViewController _embedZoomControlWithLayoutStyle:]
  -[CAMViewfinderViewController _embedGridViewWithLayoutStyle:]
  -[CAMViewfinderViewController _unembedGridView]
  -[CAMViewfinderViewController _embedLevelViewWithLayoutStyle:]
  -[CAMViewfinderViewController _unembedLevelView]
  -[CAMViewfinderViewController _updateFramerateIndicatorTextForGraphConfiguration:]
  -[CAMViewfinderViewController _embedFramerateIndicatorWithLayoutStyle:]
  -[CAMViewfinderViewController _shouldHideUtilityBarForGraphConfiguration:]
  -[CAMViewfinderViewController _embedUtilityBarWithLayoutStyle:]
  -[CAMViewfinderViewController _createUtilityBarIfNecessary]
  -[CAMViewfinderViewController _embedFilterScrubberViewWithLayoutStyle:]
  -[CAMViewfinderViewController set_filterScrubberLayerContents:]
  -[CAMViewfinderViewController _shouldHideFilterNameBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _embedFilterNameBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _apertureSliderDidChangeApertureValue:]
  -[CAMViewfinderViewController _embedPortraitApertureSliderWithLayoutStyle:]
  -[CAMViewfinderViewController _handleIntensitySliderDidChangeValue:]
  -[CAMViewfinderViewController _embedPortraitIntensitySliderWithLayoutStyle:]
  -[CAMViewfinderViewController _embedLightingControlWithLayoutStyle:]
  -[CAMViewfinderViewController _embedLightingNameBadgeWithLayoutStyle:]
  -[CAMViewfinderViewController _setPortraitModeDescriptionOverlayView:]
  -[CAMViewfinderViewController _setCTMDescriptionOverlayView:]
  -[CAMViewfinderViewController _destroyGridViewIfNecessary]
  -[CAMViewfinderViewController _destroyLevelViewIfNecessary]
  -[CAMViewfinderViewController _destroyFilterScrubberViewIfNecessary]
  -[CAMViewfinderViewController _previousModeGestureRecognizer]
  -[CAMViewfinderViewController _nextModeGestureRecognizer]
  -[CAMViewfinderViewController _swipeUpGestureRecognizer]
  -[CAMViewfinderViewController _swipeDownGestureRecognizer]
  -[CAMViewfinderViewController _previousFilterGestureRecognizer]
  -[CAMViewfinderViewController _nextFilterGestureRecognizer]
  -[CAMViewfinderViewController _cameraRollSwipeUpGestureRecognizer]
  -[CAMViewfinderViewController _flashBadge]
  -[CAMViewfinderViewController _HDRBadge]
  -[CAMViewfinderViewController _focusAndExposureLockBadge]
  -[CAMViewfinderViewController _shallowDepthOfFieldBadge]
  -[CAMViewfinderViewController _portraitModeDescriptionOverlayView]
  -[CAMViewfinderViewController _ctmDescriptionOverlayView]
  -[CAMViewfinderViewController _photosButton]
  -[CAMViewfinderViewController _filterButton]
  -[CAMViewfinderViewController _shouldUseZoomControlInsteadOfSlider]
  -[CAMViewfinderViewController _levelView]
  -[CAMViewfinderViewController _portraitApertureSlider]
  -[CAMViewfinderViewController _portraitIntensitySlider]
  -[CAMViewfinderViewController _shouldHideFlashButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldAllowControlDrawerForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideElapsedTimeViewForGraphConfiguration:]
  -[CAMViewfinderViewController isPerformingReviewUsingOverlay]
  -[CAMViewfinderViewController _isPerformingTopBarOrientationChange]
  -[CAMViewfinderViewController _isFlashOrTorchSupportedForGraphConfiguration:]
  -[CAMViewfinderViewController _isTransitioningToCreativeCamera]
  -[CAMViewfinderViewController _isShowingBurstIndicatorView]
  -[CAMViewfinderViewController _isMenuButtonConflictingWithView:]
  -[CAMViewfinderViewController _isHDRSupportedForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideFlashBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _isLivePhotoSupportedForGraphConfiguration:]
  -[CAMViewfinderViewController _isFlashingLivePhotoBadge]
  -[CAMViewfinderViewController _topBarStyleForGraphConfiguration:capturing:]
  -[CAMViewfinderViewController messagesTransitionState]
  -[CAMViewfinderViewController _shouldUseFiltersForGraphConfiguration:]
  -[CAMViewfinderViewController _isShowingFilterScrubber]
  -[CAMViewfinderViewController _isShowingPortraitApertureSlider]
  -[CAMViewfinderViewController _isShowingPortraitIntensitySlider]
  -[CAMViewfinderViewController _shouldHideZoomSliderForGraphConfiguration:ignoreExpiredVisibilityTimer:]
  -[CAMViewfinderViewController _isZoomAllowedForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldUseZoomButtonForCameraToggleForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideLightingControlForGraphConfiguration:]
  -[CAMViewfinderViewController _targetLightingControl]
  -[CAMViewfinderViewController _wantsLightingControlForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideLightingControlBadgeForGraphConfiguration:orientation:]
  -[CAMViewfinderViewController _shouldCreateLevelViewForMode:]
  -[CAMViewfinderViewController _framerateIndicatorStyleForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideLivePhotoBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _isTimerSupportedForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideTimerButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideControlStatusIndicatorsForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldShowLowLightControlForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideAspectRatioControlForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideFilterButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideHDRButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideBottomBarForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideTopBarForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHidePortraitModeInstructionLabelForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideQRCodeInstructionLabelForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideFlipButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideModeDialForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideImageWellForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideReviewButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideCreativeCameraButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHidePhotosButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideDoneButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideShutterButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideStillDuringVideoButtonForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHidePanoramaViewForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideZoomSliderForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideZoomControlForGraphConfiguration:]
  -[CAMViewfinderViewController shouldLayoutLightingNameBadgeAtBottom]
  -[CAMViewfinderViewController _shouldHideLightingNameBadgeForGraphConfiguration:orientation:]
  -[CAMViewfinderViewController _shouldHideGridViewForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideLevelViewForGraphConfiguration:]
  -[CAMViewfinderViewController _updateLevelMotionTracking]
  -[CAMViewfinderViewController _shouldHideFramerateIndicatorForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideTimerIndicatorViewForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideHDRBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideShallowDepthOfFieldBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldHideFocusAndExposureLockBadgeForGraphConfiguration:]
  -[CAMViewfinderViewController _updateBadgeVisibilityAnimated:]
  -[CAMViewfinderViewController _isReconfiguring]
  -[CAMViewfinderViewController _shouldAllowControlDrawerToggleForGraphConfiguration:]
  -[CAMViewfinderViewController _updateControlDrawerContentsVisibilityForGraphConfiguration:animated:]
  -[CAMViewfinderViewController _shouldShowDrawerControlOfType:forGraphConfiguration:]
  -[CAMViewfinderViewController _shouldShowIndicatorOfType:forGraphConfiguration:]
  -[CAMViewfinderViewController _snapshotAndFadeDisappearingView:]
  -[CAMViewfinderViewController _snapshotAndFadeDisappearingView:parentViewOverride:shouldHideView:]
  -[CAMViewfinderViewController _shouldEnableSwipeToModeSwitch]
  -[CAMViewfinderViewController _setSwipeToModeSwitchEnabled:]
  -[CAMViewfinderViewController _updateTopBarStyleForGraphConfiguration:capturing:animated:]
  -[CAMViewfinderViewController _elapsedTimeViewIdleBackgroundStyle]
  -[CAMViewfinderViewController _isOutOfDiskSpace]
  -[CAMViewfinderViewController _isModeDisabledForMultitasking]
  -[CAMViewfinderViewController _shouldEnableModeDial]
  -[CAMViewfinderViewController _isOpeningViewfinder]
  -[CAMViewfinderViewController _isClosingViewfinder]
  -[CAMViewfinderViewController _reasonsToDisableShutterButton]
  -[CAMViewfinderViewController isPreventingAdditionalCaptures]
  -[CAMViewfinderViewController _reasonsToDisableCreativeCameraButton]
  -[CAMViewfinderViewController _shouldUseZoomButtonForCameraToggleForCurrentModeAndDevice]
  -[CAMViewfinderViewController _updateEnabledControlsWithReason:forceLog:]
  -[CAMViewfinderViewController _shouldEnableFlashButton]
  -[CAMViewfinderViewController _shouldEnableHDRButton]
  -[CAMViewfinderViewController _shouldEnableTimerButton]
  -[CAMViewfinderViewController _shouldEnableLivePhotoButton]
  -[CAMViewfinderViewController _shouldEnableFlipButton]
  -[CAMViewfinderViewController _shouldEnableImageWell]
  -[CAMViewfinderViewController _shouldEnableShutterButton]
  -[CAMViewfinderViewController _shouldEnableFilterButton]
  -[CAMViewfinderViewController _shouldEnableLowLightControl]
  -[CAMViewfinderViewController _shouldShowShutterButtonDisabled]
  -[CAMViewfinderViewController _shouldEnableApertureButton]
  -[CAMViewfinderViewController _shouldEnableCreativeCameraButton]
  -[CAMViewfinderViewController _shouldEnableSwipeToChangeFilters]
  -[CAMViewfinderViewController _debugEnabledDescriptionForControl:withReason:]
  -[CAMViewfinderViewController _accessibilityHUDManagers]
  -[CAMViewfinderViewController _updateAllControlsWithContentSize:]
  -[CAMViewfinderViewController _viewfinderTransitionable]
  -[CAMViewfinderViewController _updatePanoramaViewVisibilityForViewfinderTransition]
  -[CAMViewfinderViewController _setClosingViewfinder:]
  -[CAMViewfinderViewController _shouldAnimateViewfinderCloseForReason:]
  -[CAMViewfinderViewController _targetFilterScrubberView]
  -[CAMViewfinderViewController _setOpeningViewfinder:]
  -[CAMViewfinderViewController _previewConfigurationForMode:videoThumbnailOutputEnabled:]
  -[CAMViewfinderViewController _overCapturePreviewStatus]
  -[CAMViewfinderViewController _setOverCapturePreviewStatus:]
  -[CAMViewfinderViewController _isAnimatingFilterScrubberDismissal]
  -[CAMViewfinderViewController _topBarBackgroundStyleForMode:]
  -[CAMViewfinderViewController _bottomBarBackgroundStyleForMode:]
  -[CAMViewfinderViewController _handleUserChangedToHDRMode:]
  -[CAMViewfinderViewController _showFlashOrTorchUnavailableAlertView]
  -[CAMViewfinderViewController _handleUserChangedToFlashMode:]
  -[CAMViewfinderViewController setPhotoModeAspectRatioCrop:]
  -[CAMViewfinderViewController _handleUserChangedToLivePhotoMode:]
  -[CAMViewfinderViewController _updateFlashButtonForMode:]
  -[CAMViewfinderViewController _updateLivePhotoButton]
  -[CAMViewfinderViewController _updateHDRButton]
  -[CAMViewfinderViewController _handleLowLightSliderDidChangeValue:]
  -[CAMViewfinderViewController _updateLowLightSlider]
  -[CAMViewfinderViewController _handleFlashIndicator]
  -[CAMViewfinderViewController _handleLivePhotoIndicator]
  -[CAMViewfinderViewController _handleHDRIndicator]
  -[CAMViewfinderViewController _isFlashUnavailableForMode:]
  -[CAMViewfinderViewController _displayedFlashModeForMode:flashActive:]
  -[CAMViewfinderViewController _setDesiredFlashMode:]
  -[CAMViewfinderViewController _setFlashAndHDRConflictingControl:]
  -[CAMViewfinderViewController _updateLowLightAutoDisabledReason:isPreventingLowLight:]
  -[CAMViewfinderViewController _setDesiredTorchMode:]
  -[CAMViewfinderViewController _updateTorchMode]
  -[CAMViewfinderViewController _desiredTorchMode]
  -[CAMViewfinderViewController _setResolvedTorchMode:]
  -[CAMViewfinderViewController _flashOrTorchUnavailableAlertController]
  -[CAMViewfinderViewController _flashOrTorchDisabledMessageForCurrentPowerPressure]
  -[CAMViewfinderViewController _setFlashOrTorchUnavailableAlertController:]
  -[CAMViewfinderViewController _setDesiredHDRMode:]
  -[CAMViewfinderViewController _isLivePhotoSupportedForMode:device:]
  -[CAMViewfinderViewController _desiredFlashMode]
  -[CAMViewfinderViewController _desiredHDRMode]
  -[CAMViewfinderViewController _desiredLivePhotoMode]
  -[CAMViewfinderViewController _flashAndHDRConflictingControl]
  -[CAMViewfinderViewController _resolvePotentiallyConflictingControlsForMode:device:resolvedFlashMode:resolvedHDRMode:resolvedLivePhotoMode:]
  -[CAMViewfinderViewController _setResolvedFlashMode:]
  -[CAMViewfinderViewController _setResolvedHDRMode:]
  -[CAMViewfinderViewController _setResolvedLivePhotoMode:]
  -[CAMViewfinderViewController _updateFlashModeOnControllerForMode:]
  -[CAMViewfinderViewController _updateHDRSuggestionMonitoringForGraphConfiguration:]
  -[CAMViewfinderViewController setLivePhotoMode:]
  -[CAMViewfinderViewController _isBurstEndSoundPlaying]
  -[CAMViewfinderViewController _shouldPauseCapturingStillImagePairedVideoForGraphConfiguration:isShowingCameraRoll:]
  -[CAMViewfinderViewController _setProactiveFlashSuggestionSuppressed:]
  -[CAMViewfinderViewController _sanitizedVideoConfigurationForMode:device:]
  -[CAMViewfinderViewController _videoConfigurationResolutionForGraphConfiguration:]
  -[CAMViewfinderViewController _videoConfigurationFramerateForGraphConfiguration:]
  -[CAMViewfinderViewController set_videoConfigurationOverride:]
  -[CAMViewfinderViewController set_slomoConfigurationOverride:]
  -[CAMViewfinderViewController _nextFramerateVideoConfigurationForVideoConfiguration:]
  -[CAMViewfinderViewController _handleUserChangedToVideoConfiguration:]
  -[CAMViewfinderViewController _nextResolutionVideoConfigurationForVideoConfiguration:]
  -[CAMViewfinderViewController _updateControlStatusBarContentsVisibilityAnimated:]
  -[CAMViewfinderViewController _setLowLightDurationMapping:]
  -[CAMViewfinderViewController _setDesiredLivePhotoMode:]
  -[CAMViewfinderViewController _startFlashingLivePhotoBadge]
  -[CAMViewfinderViewController _setFlashingLivePhotoBadge:]
  -[CAMViewfinderViewController _handleUserChangedToMode:]
  -[CAMViewfinderViewController _handleUserChangedToDevice:]
  -[CAMViewfinderViewController _setLastShutterButtonTouchDownTime:]
  -[CAMViewfinderViewController pressShutterForRemoteShutter]
  -[CAMViewfinderViewController _shutterButtonFeedbackForCurrentConfiguration]
  -[CAMViewfinderViewController _redirectShutterEventIfNecessary:]
  -[CAMViewfinderViewController _setLastPerformedShutterButtonFeedbackType:]
  -[CAMViewfinderViewController _lastPerformedShutterButtonFeedbackType]
  -[CAMViewfinderViewController _isActiveZooming]
  -[CAMViewfinderViewController _attemptShutterPressWithBlock:]
  -[CAMViewfinderViewController _attemptShutterReleaseWithBlock:]
  -[CAMViewfinderViewController _startCountdownForCaptureTimer]
  -[CAMViewfinderViewController _videoCaptureRequestWithCurrentSettings]
  -[CAMViewfinderViewController _startCapturingVideoWithRequest:]
  -[CAMViewfinderViewController _panoramaCaptureRequestWithCurrentSettings]
  -[CAMViewfinderViewController _startCapturingPanoramaWithRequest:]
  -[CAMViewfinderViewController _startTimelapse]
  -[CAMViewfinderViewController _stopCapturingCTMVideo]
  -[CAMViewfinderViewController _stopCapturingVideo]
  -[CAMViewfinderViewController _stopCapturingPanorama]
  -[CAMViewfinderViewController _stopTimelapse]
  -[CAMViewfinderViewController _handleDisabledShutterTap]
  -[CAMViewfinderViewController _handleShutterButtonActionWithEventTriggerDescription:]
  -[CAMViewfinderViewController _handleShutterButtonReleased:fromDragExit:]
  -[CAMViewfinderViewController _handlePhysicalCaptureRecognizer:]
  -[CAMViewfinderViewController _shouldDisableUserInteractionForTransitioning]
  -[CAMViewfinderViewController _handlePhysicalButtonPressed:]
  -[CAMViewfinderViewController _handlePhysicalButtonReleased:]
  -[CAMViewfinderViewController _handlePhysicalButtonCancelled:]
  -[CAMViewfinderViewController _allowsPhysicalCaptureInteraction]
  -[CAMViewfinderViewController _primaryShutterControl]
  -[CAMViewfinderViewController _setCapturingFromPhysicalButton:]
  -[CAMViewfinderViewController _capturingFromPhysicalButton]
  -[CAMViewfinderViewController _updateDesiredPhysicalButtonsForDominantButton:]
  -[CAMViewfinderViewController _handleBurstTimerFired:]
  -[CAMViewfinderViewController _setCurrentBurstTimer:]
  -[CAMViewfinderViewController _maximumBurstLengthForTimer]
  -[CAMViewfinderViewController _startCapturingBurstWithRequest:]
  -[CAMViewfinderViewController _showBurstIndicatorView]
  -[CAMViewfinderViewController _hideBurstIndicatorView]
  -[CAMViewfinderViewController _setBurstEndSoundPlaying:]
  -[CAMViewfinderViewController customPreviewViewTransform]
  -[CAMViewfinderViewController _applyAutorotationCorrectingTransformForOrientation:]
  -[CAMViewfinderViewController _validateViewfinderLayoutIfNeeded]
  -[CAMViewfinderViewController _internalAutorotationStyle]
  -[CAMViewfinderViewController _changeToZoomFactor:rampDuration:shouldAnimate:]
  -[CAMViewfinderViewController _setHomeIndicatorAutoHideOrientation:]
  -[CAMViewfinderViewController _rotateTopBarAndControlsToOrientation:shouldAnimate:]
  -[CAMViewfinderViewController _presentCameraRollViewControllerIfPossibleAnimated:interactive:]
  -[CAMViewfinderViewController _presentCameraRollViewControllerAnimated:interactive:]
  -[CAMViewfinderViewController _shouldDeferMediaLoadingForGraphConfiguration:]
  -[CAMViewfinderViewController imagePickerVideoConfiguration]
  -[CAMViewfinderViewController _videoConfigurationOverride]
  -[CAMViewfinderViewController _slomoConfigurationOverride]
  -[CAMViewfinderViewController _minimumExecutionTimeForChangeToGraphConfiguration:fromGraphConfiguration:]
  -[CAMViewfinderViewController _shutterButtonModeForCameraMode:isCapturing:]
  -[CAMViewfinderViewController availableCaptureModes]
  -[CAMViewfinderViewController _modeChangeSwipeMatchesExposureBiasPanDirection]
  -[CAMViewfinderViewController _isZoomAllowedCurrently]
  -[CAMViewfinderViewController _filterScrubberSwipeMatchesExposureBiasPanDirection]
  -[CAMViewfinderViewController _updateFocusAndExposureLockBadgeAnimated:]
  -[CAMViewfinderViewController _photoModeEffectFilterType]
  -[CAMViewfinderViewController _squareModeEffectFilterType]
  -[CAMViewfinderViewController _portraitModeEffectFilterType]
  -[CAMViewfinderViewController _filterTypes]
  -[CAMViewfinderViewController _setPhotoModeEffectFilterType:]
  -[CAMViewfinderViewController _setSquareModeEffectFilterType:]
  -[CAMViewfinderViewController _setPortraitModeEffectFilterType:]
  -[CAMViewfinderViewController set_filterTypes:]
  -[CAMViewfinderViewController _lastCapturedFilterTypeForMode:]
  -[CAMViewfinderViewController _itemIndexForFilterType:]
  -[CAMViewfinderViewController _shouldShowFilterScrubberAfterNextRender]
  -[CAMViewfinderViewController _setShouldShowFilterScrubberAfterNextRender:]
  -[CAMViewfinderViewController _createFilterScrubberViewIfNecessary]
  -[CAMViewfinderViewController _setShowingFilterScrubber:animated:]
  -[CAMViewfinderViewController _updateControlsForVisibleFilterScrubberAnimated:]
  -[CAMViewfinderViewController _createFilterNameBadgeIfNecessary]
  -[CAMViewfinderViewController _layoutViewfinderForShowingFilterScrubber:animated:]
  -[CAMViewfinderViewController _setShowingPortraitApertureSlider:]
  -[CAMViewfinderViewController _setShowingPortraitIntensitySlider:]
  -[CAMViewfinderViewController _setAnimatingFilterScrubberDismissal:]
  -[CAMViewfinderViewController _clearFilterScrubberLayerContentsIfNotNeededFromCallsite:]
  -[CAMViewfinderViewController _setShowingPortraitApertureSlider:animated:]
  -[CAMViewfinderViewController _setShowingPortraitIntensitySlider:animated:]
  -[CAMViewfinderViewController _dismissPortraitModeDescriptionOverlayViewWithDuration:]
  -[CAMViewfinderViewController _dismissCTMDescriptionOverlayViewWithDuration:]
  -[CAMViewfinderViewController _createPortraitApertureSliderIfNecessary]
  -[CAMViewfinderViewController _setWantsFilterScrubberVisible:]
  -[CAMViewfinderViewController _createPortraitIntensitySliderIfNecessary]
  -[CAMViewfinderViewController _setPortraitModeIntensityValue:]
  -[CAMViewfinderViewController _updateTopBarForLightingType:]
  -[CAMViewfinderViewController _setPortraitModeLightingEffectType:]
  -[CAMViewfinderViewController _filterTypeForItemIndex:]
  -[CAMViewfinderViewController _applySelectedEffectFilterType:]
  -[CAMViewfinderViewController _setEffectFilterType:forMode:]
  -[CAMViewfinderViewController _filterNamesSelectedBeforeCapture]
  -[CAMViewfinderViewController _filterScrubberLayerContents]
  -[CAMViewfinderViewController _lowLightDurationMapping]
  -[CAMViewfinderViewController _lowLightAutoDisabledReasons]
  -[CAMViewfinderViewController _setLowLightAutoDisabledReasons:]
  -[CAMViewfinderViewController _updateCaptureControllerForLowLightMode]
  -[CAMViewfinderViewController _updateControlsDisabledByLowLight]
  -[CAMViewfinderViewController _shouldEmulateTripleCameraZoomForGraphConfiguration:]
  -[CAMViewfinderViewController _shouldIgnoreZoomFactorKVOForRamping]
  -[CAMViewfinderViewController _isPinchingForZoom]
  -[CAMViewfinderViewController _updateZoomUIWithZoomFactor:animated:]
  -[CAMViewfinderViewController _setShouldIgnoreZoomFactorKVOForRamping:]
  -[CAMViewfinderViewController _videoZoomFactorAtPinchStart]
  -[CAMViewfinderViewController _setVideoZoomFactorAtPinchStart:]
  -[CAMViewfinderViewController _currentVideoConfiguration]
  -[CAMViewfinderViewController _currentMaximumZoomFactor]
  -[CAMViewfinderViewController _zoomFactorForZoomSliderValue:]
  -[CAMViewfinderViewController _zoomUIDidChangeToFactor:]
  -[CAMViewfinderViewController _updateFocusAfterZoomIfNecessary]
  -[CAMViewfinderViewController _ensureSensitiveContentHidden]
  -[CAMViewfinderViewController _forceHideBadgesAnimated:]
  -[CAMViewfinderViewController _debugStringForApplicationDeactivationReason:]
  -[CAMViewfinderViewController readUserPreferencesAndHandleChangesWithOverrides:]
  -[CAMViewfinderViewController _diskSpaceAlertController]
  -[CAMViewfinderViewController _setDiskSpaceAlertController:]
  -[CAMViewfinderViewController _setOutOfDiskSpace:]
  -[CAMViewfinderViewController _showDiskSpaceAlertView]
  -[CAMViewfinderViewController _hasBeenPromptedForICPLToday]
  -[CAMViewfinderViewController pressStillDuringVideoForRemoteShutter]
  -[CAMViewfinderViewController changeToMode:device:animated:]
  -[CAMViewfinderViewController _createOrDestroyHDRBadgeIfNecessary]
  -[CAMViewfinderViewController _createOrDestroyHDRButtonIfNecessary]
  -[CAMViewfinderViewController _updateFramerateIndicatorTextAndVisibility]
  -[CAMViewfinderViewController _createGridViewIfNecessary]
  -[CAMViewfinderViewController _createLevelViewIfNecessary]
  -[CAMViewfinderViewController _levelViewModel]
  -[CAMViewfinderViewController _shouldMonitorDeviceMotionForGraphConfiguration:]
  -[CAMViewfinderViewController suspendCameraSessionWithCompletion:]
  -[CAMViewfinderViewController resumeCameraSessionWithCompletion:]
  -[CAMViewfinderViewController _imageWellSetContentHidden:]
  -[CAMViewfinderViewController automaticallyAdjustsAvailableCaptureModes]
  -[CAMViewfinderViewController _reconfigureCaptureGraphWithCurrentMode]
  -[CAMViewfinderViewController _updatePressTypeAggregateDictionariesForRequest:]
  -[CAMViewfinderViewController _updateFilterAggregateDictionariesForRequest:]
  -[CAMViewfinderViewController _updateLightingAggregateDictionariesForRequest:]
  -[CAMViewfinderViewController _updateApertureAggregateDictionariesForRequest:]
  -[CAMViewfinderViewController _updatePortraitIntensityEffectAggregateDictionariesForRequest:]
  -[CAMViewfinderViewController _updateLivePhotoAggregateDictionaryForRequest:]
  -[CAMViewfinderViewController _updateAGGDForStillImageCaptureRequest:]
  -[CAMViewfinderViewController _updateZoomAggregateDictionaryForRequest:response:]
  -[CAMViewfinderViewController _updateStillImageCaptureTypeAggregateDictionariesForRequest:response:]
  -[CAMViewfinderViewController _updateSphereAggregateDictionariesForResponse:]
  -[CAMViewfinderViewController _updateAGGDForPanoramaCaptureRequest:]
  -[CAMViewfinderViewController _updateVideoConfigurationAggregateDictionaryForRequest:]
  -[CAMViewfinderViewController _updateVideoAGGDForCaptureRequest:]
  -[CAMViewfinderViewController _updateVideoDurationAGGDForCaptureRequest:videoCaptureResponse:]
  -[CAMViewfinderViewController _availableDefaultCaptureMode]
  -[CAMViewfinderViewController _mutableSupportedCaptureModes]
  -[CAMViewfinderViewController setShowingStandardControls:]
  -[CAMViewfinderViewController _destroyGestureRecognizersRequiringStandardControls]
  -[CAMViewfinderViewController _unembedAndDestroyAllControls]
  -[CAMViewfinderViewController _setShallowDepthOfFieldStatus:stagePreviewStatus:animated:]
  -[CAMViewfinderViewController _updateForShallowDepthOfFieldStatusChangedAnimated:]
  -[CAMViewfinderViewController _stagePreviewStatus]
  -[CAMViewfinderViewController _isApplicationFullscreen]
  -[CAMViewfinderViewController _disabledModeOverlayView]
  -[CAMViewfinderViewController _setDisabledModeOverlayView:]
  -[CAMViewfinderViewController creativeCameraDelegate]
  -[CAMViewfinderViewController captureController:didOutputMachineReadableCodeResults:]
  -[CAMViewfinderViewController captureController:didChangeToGraphConfiguration:forDesiredConfiguration:requestID:]
  -[CAMViewfinderViewController captureController:didOutputFlashActive:]
  -[CAMViewfinderViewController captureController:didOutputTorchActive:]
  -[CAMViewfinderViewController captureController:didOutputHDRSuggestion:]
  -[CAMViewfinderViewController captureController:didOutputLowLightStatus:]
  -[CAMViewfinderViewController captureController:didOutputLowLightModeDurationMapping:]
  -[CAMViewfinderViewController captureController:didOutputCaptureAvailability:]
  -[CAMViewfinderViewController captureController:didOutputConfigurationAvailability:]
  -[CAMViewfinderViewController captureController:didOutputFlashAvailability:]
  -[CAMViewfinderViewController captureController:didOutputTorchAvailability:]
  -[CAMViewfinderViewController captureControllerWillStartCapturingBurst:]
  -[CAMViewfinderViewController captureControllerDidReachMaximumBurstLength:]
  -[CAMViewfinderViewController captureControllerDidStopCapturingBurst:]
  -[CAMViewfinderViewController captureControllerWillStartPlayingBurstEndSound:]
  -[CAMViewfinderViewController captureControllerDidStopPlayingBurstEndSound:]
  -[CAMViewfinderViewController timeIntervalForDuration:]
  -[CAMViewfinderViewController shouldHideLightingNameBadgeForOrientation:]
  -[CAMViewfinderViewController shouldHideTopBar]
  -[CAMViewfinderViewController shouldHideFlashButton]
  -[CAMViewfinderViewController shouldHideHDRButton]
  -[CAMViewfinderViewController shouldHideTimerButton]
  -[CAMViewfinderViewController shouldHideFlipButton]
  -[CAMViewfinderViewController shouldHideElapsedTimeView]
  -[CAMViewfinderViewController shouldHideLivePhotoButton]
  -[CAMViewfinderViewController shouldHidePortraitModeInstructionLabel]
  -[CAMViewfinderViewController shouldHideQRCodeInstructionLabel]
  -[CAMViewfinderViewController shouldHideFilterNameBadge]
  -[CAMViewfinderViewController shouldHideLightingControl]
  -[CAMViewfinderViewController shouldShiftPreviewForUtilityBar]
  -[CAMViewfinderViewController previewViewControllerDidChangeFocusOrExposureLocked:shouldAnimate:]
  -[CAMViewfinderViewController previewViewController:gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CAMViewfinderViewController previewViewControllerDidChangeVideoFillAspectRatio:]
  -[CAMViewfinderViewController captureController:willRecoverFromRuntimeError:]
  -[CAMViewfinderViewController captureControllerWasInterrupted:]
  -[CAMViewfinderViewController captureControllerInterruptionEnded:]
  -[CAMViewfinderViewController captureControllerDidStartRunning:]
  -[CAMViewfinderViewController captureControllerDidStopRunning:]
  -[CAMViewfinderViewController captureController:didOutputVideoZoomFactor:]
  -[CAMViewfinderViewController captureController:didOutputMinAvailableVideoZoomFactor:]
  -[CAMViewfinderViewController captureController:didChangeRampingVideoZoom:]
  -[CAMViewfinderViewController timelapseController:startedWithCaptureOrientation:]
  -[CAMViewfinderViewController timelapseControllerStopped:]
  -[CAMViewfinderViewController timelapseController:generatedPlaceholderResult:withThumbnailImage:forAssetUUID:inCaptureSession:]
  -[CAMViewfinderViewController timelapseController:persistedPlaceholderResult:error:]
  -[CAMViewfinderViewController cameraRollController:didChangeImageWellImage:withUUID:animated:]
  -[CAMViewfinderViewController cameraRollControllerPresentingViewController:]
  -[CAMViewfinderViewController cameraRollControllerDidFullyPresentCameraRoll:]
  -[CAMViewfinderViewController cameraRollControllerDidDismissFullyPresentedCameraRoll:]
  -[CAMViewfinderViewController cameraRollControllerRequestsCaptureSessionStopped:]
  -[CAMViewfinderViewController cameraRollController:willShowPresentingViewControllerShouldStartCaptureSession:]
  -[CAMViewfinderViewController cameraRollControllerWillPresentPreviewController:]
  -[CAMViewfinderViewController cameraRollController:didDismissPreviewControllerShouldStartCaptureSession:]
  -[CAMViewfinderViewController cameraRollControllerSourceAssetRect:]
  -[CAMViewfinderViewController cameraRollController:shouldHideSourceAsset:]
  -[CAMViewfinderViewController cameraRollControllerPrefersPresentingStatusbarHiddenDidChange:]
  -[CAMViewfinderViewController cameraRollControllerPreviewSourceRect:]
  -[CAMViewfinderViewController cameraRollControllerImageForReveal:]
  -[CAMViewfinderViewController cameraRollControllerRevealWillBegin:]
  -[CAMViewfinderViewController cameraRollControllerRevealDidEnd:]
  -[CAMViewfinderViewController cameraRollControllerPreferredPresentationOrientation:]
  -[CAMViewfinderViewController closedViewfinderController:wantsViewfinderClosedForReason:]
  -[CAMViewfinderViewController closedViewfinderController:wantsViewfinderOpenForReason:]
  -[CAMViewfinderViewController disabledPreviewController:wantsPreviewDisabledForReason:]
  -[CAMViewfinderViewController disabledPreviewController:wantsPreviewEnabledForReason:]
  -[CAMViewfinderViewController captureController:didOutputShallowDepthOfFieldStatus:stagePreviewStatus:]
  -[CAMViewfinderViewController videoThumbnailOutputWillBeginRenderingThumbnailsWithContents:]
  -[CAMViewfinderViewController videoThumbnailOutputWillEndRenderingThumbnails]
  -[CAMViewfinderViewController accessibilityHUDManager:wantsToShowHUDItem:]
  -[CAMViewfinderViewController dismissAccessibilityHUDViewForAccessibilityHUDManager:]
  -[CAMViewfinderViewController descriptionOverlayViewDidAcknowledge:]
  -[CAMViewfinderViewController shutterButtonTouchAttemptedWhileDisabled:]
  -[CAMViewfinderViewController availableDiskSpaceChanged]
  -[CAMViewfinderViewController dynamicShutterControlShouldBeginGesture:]
  -[CAMViewfinderViewController dynamicShutterControlDidShortPress:]
  -[CAMViewfinderViewController dynamicShutterControlGesturesDidBegin:]
  -[CAMViewfinderViewController dynamicShutterControlGesturesDidEnd:]
  -[CAMViewfinderViewController dynamicShutterControlGesturesDidCancel:]
  -[CAMViewfinderViewController dynamicShutterControlDidStart:]
  -[CAMViewfinderViewController dynamicShutterControlDidStop:]
  -[CAMViewfinderViewController dynamicShutterControlDidPressLockButton:]
  -[CAMViewfinderViewController dynamicShutterControlDidPresentCounter:]
  -[CAMViewfinderViewController dynamicShutterControlDidDismissCounter:]
  -[CAMViewfinderViewController shutterControlTouchAttemptedWhileDisabled:]
  -[CAMViewfinderViewController controlStatusBar:didCreateIndicatorForType:]
  -[CAMViewfinderViewController controlStatusBar:didReceiveTapInIndicatorForType:]
  -[CAMViewfinderViewController badgeTray:didCreateBadgeForType:]
  -[CAMViewfinderViewController modesForModeSelector:]
  -[CAMViewfinderViewController didSelectMode:]
  -[CAMViewfinderViewController captureController:didOutputOverCapturePreviewStatus:]
  -[CAMViewfinderViewController dynamicShutterControlLogShortPress:]
  -[CAMViewfinderViewController dynamicShutterControlLogLongPress:]
  -[CAMViewfinderViewController dynamicShutterControlLogDragLock:]
  -[CAMViewfinderViewController dynamicShutterControlLogDragCounter:]
  -[CAMViewfinderViewController remoteShutter:takePhotoWithCountdown:]
  -[CAMViewfinderViewController remoteShutterCancelCountdown:]
  -[CAMViewfinderViewController remoteShutterBeginBurstCapture:]
  -[CAMViewfinderViewController remoteShutterEndBurstCapture:]
  -[CAMViewfinderViewController remoteShutter:setMode:]
  -[CAMViewfinderViewController remoteShutter:focusOn:]
  -[CAMViewfinderViewController remoteShutterStartCapture:]
  -[CAMViewfinderViewController remoteShutterStopCapture:]
  -[CAMViewfinderViewController remoteShutter:setFlashMode:]
  -[CAMViewfinderViewController remoteShutter:setHDRMode:]
  -[CAMViewfinderViewController remoteShutter:setIrisMode:]
  -[CAMViewfinderViewController remoteShutter:setZoomAmount:]
  -[CAMViewfinderViewController remoteShutter:setCaptureDevice:]
  -[CAMViewfinderViewController initWithCaptureController:captureConfiguration:conflictingControlConfiguration:locationController:motionController:timelapseController:keepAliveController:remoteShutterController:powerController:cameraRollController:callStatusMonitor:storageController:usingEmulationMode:initialLayoutStyle:options:]
  -[CAMViewfinderViewController _configuredDevice]
  -[CAMViewfinderViewController setUserInteractionLoggingEnabled:]
  -[CAMViewfinderViewController _suppressProactiveSuggestionAnimated:]
  -[CAMViewfinderViewController _isSwipeToModeSwitchEnabled]
  -[CAMViewfinderViewController handleVolumeButtonPressed]
  -[CAMViewfinderViewController handleVolumeButtonReleased]
  -[CAMViewfinderViewController setAutorotationStyle:]
  -[CAMViewfinderViewController _setShowingFilterScrubber:]
  -[CAMViewfinderViewController _snapshotShutterButtonAndPersist]
  -[CAMViewfinderViewController _snapshotImageWellAndPersist]
  -[CAMViewfinderViewController currentCaptureDevice]
  -[CAMViewfinderViewController isCapturingLivePhoto]
  -[CAMViewfinderViewController capturePhoto]
  -[CAMViewfinderViewController setDisablingAdditionalCaptures:]
  -[CAMViewfinderViewController viewSystemLayoutSizeFittingSize:forCaptureMode:]
  -[CAMViewfinderViewController setMessagesTransitionState:animated:]
  -[CAMViewfinderViewController _isTransitioningToReview]
  -[CAMViewfinderViewController _isTransitioningBackFromReview]
  -[CAMViewfinderViewController setAutomaticallyAdjustsApplicationIdleTimer:]
  -[CAMViewfinderViewController setPersistenceBehavior:]
  -[CAMViewfinderViewController setImagePickerVideoConfiguration:]
  -[CAMViewfinderViewController setCustomPreviewViewTransform:]
  -[CAMViewfinderViewController setPerformingReviewUsingOverlay:]
  -[CAMViewfinderViewController reviewUsingOverlayFrame]
  -[CAMViewfinderViewController _videoConfigurationForImagePickerQualityType:]
  -[CAMViewfinderViewController _setShallowDepthOfFieldStatus:stagePreviewStatus:]
  -[CAMViewfinderViewController _setModeDisabledForMultitasking:]
  -[CAMViewfinderViewController configuredCaptureMode]
  -[CAMViewfinderViewController configuredCaptureDevice]
  -[CAMViewfinderViewController setReviewButtonSource:]
  -[CAMViewfinderViewController setCreativeCameraDelegate:]
  -[CAMViewfinderViewController set_reviewButton:]
  -[CAMViewfinderViewController _setShallowDepthOfFieldStatus:]
  -[CAMViewfinderViewController _setStagePreviewStatus:]
  -[CAMViewfinderViewController set_physicalCaptureRecognizer:]
  -[CAMViewfinderViewController _zoomPinchGestureRecognizer]
  -[CAMViewfinderViewController set_physicalCaptureNotifier:]
  -[CAMViewfinderViewController isUserInteractionLoggingEnabled]
  -[CAMViewfinderViewController setAutomaticallyAdjustsAvailableCaptureModes:]
  -[CAMViewfinderViewController setAutomaticallyAdjustsAutorotationStyle:]
  -[CAMViewfinderViewController setDisablingMultipleCaptureFeatures:]
  -[CAMViewfinderViewController setMaximumVideoRecordingDuration:]
  -[CAMViewfinderViewController customOverlayView]
  -[CAMViewfinderViewController setCustomOverlayView:]


CAMImageWell : UIButton /System/Library/Frameworks/Foundation.framework/Foundation <UIGestureRecognizerDelegate>
 @property  UIImage *thumbnailImage
 @property  UIView *_containerView
 @property  UIImageView *_thumbnailImageView
 @property  NSMutableArray *_dimmingViewQueue
 @property  UIImage *_thumbnailImage
 @property  UIImage *_placeholderImage
 @property  NSString *_uuid
 @property  long long layoutStyle
 @property  long long cameraOrientation
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  BOOL scaledForInteraction
 @property  BOOL thumbnailImageHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMImageWell initWithCoder:]
  -[CAMImageWell .cxx_destruct]
  -[CAMImageWell _containerView]
  -[CAMImageWell _uuid]
  -[CAMImageWell intrinsicContentSize]
  -[CAMImageWell initWithFrame:]
  -[CAMImageWell sizeThatFits:]
  -[CAMImageWell layoutSubviews]
  -[CAMImageWell alignmentRectInsets]
  -[CAMImageWell setLayoutStyle:]
  -[CAMImageWell layoutStyle]
  -[CAMImageWell _setUuid:]
  -[CAMImageWell _placeholderImage]
  -[CAMImageWell _thumbnailImage]
  -[CAMImageWell thumbnailImage]
  -[CAMImageWell _thumbnailImageView]
  -[CAMImageWell initWithLayoutStyle:]
  -[CAMImageWell _setPlaceholderImage:]
  -[CAMImageWell tappableEdgeInsets]
  -[CAMImageWell setTappableEdgeInsets:]
  -[CAMImageWell _updateForLayoutStyle]
  -[CAMImageWell prepareForThumbnailUpdateFromCapture]
  -[CAMImageWell setThumbnailImage:uuid:animated:]
  -[CAMImageWell recoverFromFailedThumbnailUpdate]
  -[CAMImageWell setCameraOrientation:animated:]
  -[CAMImageWell setScaledForInteraction:animated:]
  -[CAMImageWell setThumbnailImage:animated:]
  -[CAMImageWell setScaledForInteraction:]
  -[CAMImageWell isScaledForInteraction]
  -[CAMImageWell alignmentRectForFrame:scaledForInteraction:]
  -[CAMImageWell setThumbnailImageHidden:]
  -[CAMImageWell _commonCAMImageWellInitializationWithLayoutStyle:]
  -[CAMImageWell _updateThumbnailTransformFromCameraOrientation]
  -[CAMImageWell _setThumbnailImage:]
  -[CAMImageWell _updateThumbnailImageAnimated:]
  -[CAMImageWell _removeFirstDimmingView]
  -[CAMImageWell isThumbnailImageHidden]
  -[CAMImageWell _performEmitAnimationWithImage:orientation:withCompletionBlock:]
  -[CAMImageWell _affineTransformForImageOrientation:]
  -[CAMImageWell _placeholderImageForLayoutStyle:]
  -[CAMImageWell _cornerRadiusForLayoutStyle:]
  -[CAMImageWell setCameraOrientation:]
  -[CAMImageWell cameraOrientation]
  -[CAMImageWell _dimmingViewQueue]


CAMFaceResult : NSObject /usr/lib/libSystem.B.dylib <CAMMetadataObjectResult>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double rollAngle
 @property  AVMetadataFaceObject *underlyingFaceObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *metadataType
 @property  NSString *uniqueIdentifier
 @property  AVMetadataObject *underlyingMetadataObject

  // instance methods
  -[CAMFaceResult .cxx_destruct]
  -[CAMFaceResult uniqueIdentifier]
  -[CAMFaceResult bounds]
  -[CAMFaceResult rollAngle]
  -[CAMFaceResult metadataType]
  -[CAMFaceResult underlyingFaceObject]
  -[CAMFaceResult underlyingMetadataObject]
  -[CAMFaceResult initWithFaceObject:]
  -[CAMFaceResult burstMetadataRepresentation]


CAMGridView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMGridView initWithFrame:]
  -[CAMGridView drawRect:]
  -[CAMGridView hitTest:withEvent:]
  -[CAMGridView _drawLinesWithInset:]


CAMStillImagePersistenceCoordinator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *_receivedCoordinationInfos
 @property  NSMutableDictionary *_pendingLocalPersistenceResults
 @property  <CAMStillImagePersistenceCoordinatorDelegate> *delegate
 @property  BOOL hasReceivedAllExpectedResponses

  // instance methods
  -[CAMStillImagePersistenceCoordinator delegate]
  -[CAMStillImagePersistenceCoordinator .cxx_destruct]
  -[CAMStillImagePersistenceCoordinator initWithDelegate:]
  -[CAMStillImagePersistenceCoordinator _receivedCoordinationInfos]
  -[CAMStillImagePersistenceCoordinator _pendingLocalPersistenceResults]
  -[CAMStillImagePersistenceCoordinator _dispatchRemotePersistenceIfPossibleForPairWithOriginalResultSpecifiers:overCaptureResultSpecifiers:request:identifier:shouldPersistAsSingleAsset:]
  -[CAMStillImagePersistenceCoordinator _dispatchRemotePersistenceIfPossibleForPairWithOriginalResultSpecifiers:processedResultSpecifiers:request:identifier:shouldPersistAsSingleAsset:]
  -[CAMStillImagePersistenceCoordinator _dispatchRemotePersistenceIfPossibleForResultSpecifiers:request:]
  -[CAMStillImagePersistenceCoordinator _debugStringForUnreceivedResultSpecifiersFromExpectedResultSpecifiers:receivedCoordinationInfos:]
  -[CAMStillImagePersistenceCoordinator _powerAssertionReasonForResultSpecifiers:]
  -[CAMStillImagePersistenceCoordinator updateForCoordinationInfo:localPersistenceResult:request:]
  -[CAMStillImagePersistenceCoordinator updateForTimeoutTimerFiredForCoordinationInfo:request:]
  -[CAMStillImagePersistenceCoordinator hasReceivedAllExpectedResponses]


CAMTimelapseJPEGReader : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMTimelapseJPEGReader _decodeOptionsWithMaxPixelSize:applyTransform:useBGRA:]
  +[CAMTimelapseJPEGReader _hasExifRotation:]
  +[CAMTimelapseJPEGReader createPixelBufferFromData:applyTransform:maxPixelSize:useBGRA:cleanApertureSize:]
  +[CAMTimelapseJPEGReader newDataFromFilePath:]
  +[CAMTimelapseJPEGReader createPixelBufferFromData:applyTransform:maxPixelSize:useBGRA:]
  +[CAMTimelapseJPEGReader createCGImageFromData:applyTransform:maxPixelSize:useBGRA:]


CAMMomentCaptureSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *persistenceUUID
 @property  long long flashMode
 @property  long long hdrMode
 @property  BOOL autoOriginalPhotoDeliveryEnabled
 @property  long long lowLightMode
 @property  unsigned long userInitiationTime
 @property  long long photoQualityPrioritization
 @property  BOOL shouldDisableCameraSwitchingDuringVideoRecording
 @property  BOOL autoSpatialOverCaptureEnabled

  // instance methods
  -[CAMMomentCaptureSettings init]
  -[CAMMomentCaptureSettings copyWithZone:]
  -[CAMMomentCaptureSettings mutableCopyWithZone:]
  -[CAMMomentCaptureSettings .cxx_destruct]
  -[CAMMomentCaptureSettings initWithSettings:]
  -[CAMMomentCaptureSettings hdrMode]
  -[CAMMomentCaptureSettings flashMode]
  -[CAMMomentCaptureSettings photoQualityPrioritization]
  -[CAMMomentCaptureSettings autoSpatialOverCaptureEnabled]
  -[CAMMomentCaptureSettings persistenceUUID]
  -[CAMMomentCaptureSettings lowLightMode]
  -[CAMMomentCaptureSettings userInitiationTime]
  -[CAMMomentCaptureSettings autoOriginalPhotoDeliveryEnabled]
  -[CAMMomentCaptureSettings shouldDisableCameraSwitchingDuringVideoRecording]


CAMMutableMomentCaptureSettings : CAMMomentCaptureSettings
 @property  NSString *persistenceUUID
 @property  long long flashMode
 @property  long long hdrMode
 @property  BOOL autoOriginalPhotoDeliveryEnabled
 @property  long long lowLightMode
 @property  unsigned long userInitiationTime
 @property  long long photoQualityPrioritization
 @property  BOOL shouldDisableCameraSwitchingDuringVideoRecording
 @property  BOOL autoSpatialOverCaptureEnabled

  // instance methods
  -[CAMMutableMomentCaptureSettings copyWithZone:]
  -[CAMMutableMomentCaptureSettings mutableCopyWithZone:]
  -[CAMMutableMomentCaptureSettings setHdrMode:]
  -[CAMMutableMomentCaptureSettings setFlashMode:]
  -[CAMMutableMomentCaptureSettings setPhotoQualityPrioritization:]
  -[CAMMutableMomentCaptureSettings setAutoSpatialOverCaptureEnabled:]
  -[CAMMutableMomentCaptureSettings setAutoOriginalPhotoDeliveryEnabled:]
  -[CAMMutableMomentCaptureSettings setLowLightMode:]
  -[CAMMutableMomentCaptureSettings setUserInitiationTime:]
  -[CAMMutableMomentCaptureSettings setShouldDisableCameraSwitchingDuringVideoRecording:]
  -[CAMMutableMomentCaptureSettings setPersistenceUUID:]


CAMNebulaDaemonConnectionManager : NSObject /usr/lib/libSystem.B.dylib <NSXPCConnectionDelegate, CAMNebulaDaemonClientProtocol, CAMNebulaDaemonBundleIdentifierProtocol>
 @property  NSXPCConnection *_connection
 @property  NSString *_name
 @property  NSObject<OS_dispatch_queue> *_queue
 @property  NSMutableDictionary *_tasksPerIdentifier
 @property  NSMutableArray *_registeredTargets
 @property  NSMutableArray *_registeredProtocols
 @property  <CAMNebulaDaemonConnectionManagerDelegate> *delegate
 @property  NSString *clientAccess
 @property  Protocol *allowedProtocol
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMNebulaDaemonConnectionManager _daemonProtocolInterface]
  +[CAMNebulaDaemonConnectionManager _clientProtocolInterface]

  // instance methods
  -[CAMNebulaDaemonConnectionManager _queue]
  -[CAMNebulaDaemonConnectionManager _connection]
  -[CAMNebulaDaemonConnectionManager _name]
  -[CAMNebulaDaemonConnectionManager delegate]
  -[CAMNebulaDaemonConnectionManager setDelegate:]
  -[CAMNebulaDaemonConnectionManager .cxx_destruct]
  -[CAMNebulaDaemonConnectionManager bundleIdentifier]
  -[CAMNebulaDaemonConnectionManager connection:handleInvocation:isReply:]
  -[CAMNebulaDaemonConnectionManager pingAfterInterruption]
  -[CAMNebulaDaemonConnectionManager forceStopTimelapseCaptureWithReasons:]
  -[CAMNebulaDaemonConnectionManager nebulaDaemonDidCompleteLocalVideoPersistenceWithResult:]
  -[CAMNebulaDaemonConnectionManager _targetsForSelector:]
  -[CAMNebulaDaemonConnectionManager _getProxyForExecutingBlock:]
  -[CAMNebulaDaemonConnectionManager initWithConnection:name:bundleIdentifier:queue:clientAccess:allowedProtocol:]
  -[CAMNebulaDaemonConnectionManager addTarget:forProtocol:]
  -[CAMNebulaDaemonConnectionManager clientAccess]
  -[CAMNebulaDaemonConnectionManager allowedProtocol]
  -[CAMNebulaDaemonConnectionManager _tasksPerIdentifier]
  -[CAMNebulaDaemonConnectionManager _registeredTargets]
  -[CAMNebulaDaemonConnectionManager _registeredProtocols]


CAMModeAndDeviceCommand : CAMCaptureCommand
 @property  CAMCaptureGraphConfiguration *_desiredGraphConfiguration
 @property  CAMCaptureGraphConfiguration *_resolvedGraphConfiguration
 @property  double _minimumExecutionTime
 @property  int _requestID
 @property  NSError *_configurationError

  // instance methods
  -[CAMModeAndDeviceCommand copyWithZone:]
  -[CAMModeAndDeviceCommand userInfo]
  -[CAMModeAndDeviceCommand encodeWithCoder:]
  -[CAMModeAndDeviceCommand initWithCoder:]
  -[CAMModeAndDeviceCommand .cxx_destruct]
  -[CAMModeAndDeviceCommand _requestID]
  -[CAMModeAndDeviceCommand executeWithContext:]
  -[CAMModeAndDeviceCommand _desiredGraphConfiguration]
  -[CAMModeAndDeviceCommand _resolvedGraphConfiguration]
  -[CAMModeAndDeviceCommand _minimumExecutionTime]
  -[CAMModeAndDeviceCommand _setResolvedGraphConfiguration:]
  -[CAMModeAndDeviceCommand _sanitizeDeviceUsingContext:]
  -[CAMModeAndDeviceCommand _desiredInputsWithContext:]
  -[CAMModeAndDeviceCommand _existingInputsWithContext:without:]
  -[CAMModeAndDeviceCommand _specificFramerateCommandForGraphConfiguration:withContext:]
  -[CAMModeAndDeviceCommand _desiredOutputsWithContext:shouldUseThumbnailOutputForFilters:]
  -[CAMModeAndDeviceCommand _existingOutputsWithContext:without:]
  -[CAMModeAndDeviceCommand _performPostConfigurationSetupForGraphConfiguration:withContext:]
  -[CAMModeAndDeviceCommand _performPostConfigurationSanityCheckForGraphConfiguration:withContext:]
  -[CAMModeAndDeviceCommand _configurationError]
  -[CAMModeAndDeviceCommand _shouldEnableLivePhotoCaptureForMode:device:]
  -[CAMModeAndDeviceCommand _shouldEnableCTMVideoCaptureForMode:device:]
  -[CAMModeAndDeviceCommand _wantsQuadraHighResolutionForMode:device:]
  -[CAMModeAndDeviceCommand _wantsLowLightBoostForMode:device:]
  -[CAMModeAndDeviceCommand _wantsLivePhotoMetadataInVideosForMode:device:]
  -[CAMModeAndDeviceCommand _specificEncodingBehaviorCommandForGraphConfiguration:]
  -[CAMModeAndDeviceCommand _specificPreparePhotoSettingsCommandForGraphConfiguration:]
  -[CAMModeAndDeviceCommand _shouldEnableDeferredProcessingForMode:]
  -[CAMModeAndDeviceCommand _setConfigurationError:]
  -[CAMModeAndDeviceCommand _isStillImageMode:]
  -[CAMModeAndDeviceCommand initWithGraphConfiguration:minimumExecutionTime:requestID:]
  -[CAMModeAndDeviceCommand requiresSessionModification]
  -[CAMModeAndDeviceCommand sessionModificationLogReason]


CAMCaptureCommandContext : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMCaptureEngine *_captureEngine
 @property  AVCaptureSession *currentCaptureSession
 @property  AVCaptureDevice *currentVideoDevice
 @property  AVCaptureDeviceFormat *currentVideoDeviceFormat
 @property  AVCaptureDeviceFormat *currentDepthDataFormat
 @property  NSString *currentVideoDevicePreset
 @property  AVCaptureDeviceInput *currentVideoDeviceInput
 @property  AVCaptureDevice *currentAudioDevice
 @property  AVCaptureDeviceInput *currentAudioDeviceInput
 @property  AVCapturePhotoOutput *currentStillImageOutput
 @property  AVCaptureMovieFileOutput *currentMovieFileOutput
 @property  CAMPanoramaOutput *currentPanoramaOutput
 @property  AVCaptureMetadataOutput *currentMetadataOutput
 @property  AVCaptureVideoDataOutput *currentEffectsPreviewOutput
 @property  AVCaptureVideoThumbnailOutput *currentVideoThumbnailOutput
 @property  AVCaptureVideoPreviewLayer *currentVideoPreviewLayer
 @property  <AVCaptureFileOutputRecordingDelegate> *currentRecordingDelegate
 @property  CAMPanoramaConfiguration *currentPanoramaConfiguration
 @property  <AVCapturePhotoCaptureDelegate> *currentStillImageDelegate
 @property  <AVMomentCaptureMovieRecordingDelegate> *currentMomentCaptureMovieRecordingDelegate

  // instance methods
  -[CAMCaptureCommandContext clear]
  -[CAMCaptureCommandContext .cxx_destruct]
  -[CAMCaptureCommandContext currentVideoDevice]
  -[CAMCaptureCommandContext currentVideoDeviceFormat]
  -[CAMCaptureCommandContext currentStillImageOutput]
  -[CAMCaptureCommandContext currentMovieFileOutput]
  -[CAMCaptureCommandContext currentVideoPreviewLayer]
  -[CAMCaptureCommandContext _captureEngine]
  -[CAMCaptureCommandContext cachedMomentCaptureSettingsForIdentifier:]
  -[CAMCaptureCommandContext clearCachedMomentCaptureSettingsForIdentifier:]
  -[CAMCaptureCommandContext registerStillImageCaptureRequest:withSettings:]
  -[CAMCaptureCommandContext currentStillImageDelegate]
  -[CAMCaptureCommandContext currentMomentCaptureMovieRecordingDelegate]
  -[CAMCaptureCommandContext currentPanoramaOutput]
  -[CAMCaptureCommandContext currentPanoramaConfiguration]
  -[CAMCaptureCommandContext cacheMomentCaptureSettings:forIdentifier:]
  -[CAMCaptureCommandContext videoDeviceForMode:desiredDevice:videoConfiguration:resolvedDevice:]
  -[CAMCaptureCommandContext currentCaptureSession]
  -[CAMCaptureCommandContext audioDeviceInput]
  -[CAMCaptureCommandContext currentVideoDeviceInput]
  -[CAMCaptureCommandContext currentAudioDeviceInput]
  -[CAMCaptureCommandContext outputsForMode:shouldUseThumbnailOutputForFilters:]
  -[CAMCaptureCommandContext metadataOutputForMode:]
  -[CAMCaptureCommandContext currentMetadataOutput]
  -[CAMCaptureCommandContext currentEffectsPreviewOutput]
  -[CAMCaptureCommandContext currentVideoThumbnailOutput]
  -[CAMCaptureCommandContext primaryOutputForMode:]
  -[CAMCaptureCommandContext registerVideoCaptureRequest:]
  -[CAMCaptureCommandContext startPanoramaCaptureWithRequest:]
  -[CAMCaptureCommandContext stopPanoramaCaptureInterrupted:]
  -[CAMCaptureCommandContext setCurrentCaptureSession:]
  -[CAMCaptureCommandContext setCurrentVideoDevice:]
  -[CAMCaptureCommandContext setCurrentVideoDeviceFormat:]
  -[CAMCaptureCommandContext setCurrentDepthDataFormat:]
  -[CAMCaptureCommandContext setCurrentVideoDevicePreset:]
  -[CAMCaptureCommandContext setCurrentVideoDeviceInput:]
  -[CAMCaptureCommandContext setCurrentAudioDevice:]
  -[CAMCaptureCommandContext setCurrentAudioDeviceInput:]
  -[CAMCaptureCommandContext setCurrentMovieFileOutput:]
  -[CAMCaptureCommandContext setCurrentPanoramaOutput:]
  -[CAMCaptureCommandContext setCurrentMetadataOutput:]
  -[CAMCaptureCommandContext setCurrentEffectsPreviewOutput:]
  -[CAMCaptureCommandContext setCurrentVideoThumbnailOutput:]
  -[CAMCaptureCommandContext setCurrentVideoPreviewLayer:]
  -[CAMCaptureCommandContext _captureEngineDeviceForMode:desiredDevice:videoConfiguration:resolvedDevice:]
  -[CAMCaptureCommandContext initWithCaptureEngine:]
  -[CAMCaptureCommandContext currentRecordingDelegate]
  -[CAMCaptureCommandContext currentDepthDataFormat]
  -[CAMCaptureCommandContext currentVideoDevicePreset]
  -[CAMCaptureCommandContext currentAudioDevice]
  -[CAMCaptureCommandContext setCurrentStillImageOutput:]


CAMFilterButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDImageProvider>
 @property  long long layoutStyle
 @property  BOOL on
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMFilterButton filterButtonWithLayoutStyle:]

  // instance methods
  -[CAMFilterButton initWithCoder:]
  -[CAMFilterButton orientation]
  -[CAMFilterButton setOrientation:]
  -[CAMFilterButton intrinsicContentSize]
  -[CAMFilterButton initWithFrame:]
  -[CAMFilterButton layoutSubviews]
  -[CAMFilterButton setHighlighted:]
  -[CAMFilterButton alignmentRectInsets]
  -[CAMFilterButton setLayoutStyle:]
  -[CAMFilterButton layoutStyle]
  -[CAMFilterButton setOrientation:animated:]
  -[CAMFilterButton setOn:]
  -[CAMFilterButton isOn]
  -[CAMFilterButton tappableEdgeInsets]
  -[CAMFilterButton setTappableEdgeInsets:]
  -[CAMFilterButton imageForAccessibilityHUD]
  -[CAMFilterButton _commonCAMFilterButtonInitializationWithStyle:]
  -[CAMFilterButton _filterImage]
  -[CAMFilterButton _filterOnImage]


CAMPanoramaViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <CAMPanoramaViewDelegate, CAMPanoramaChangeDelegate>
 @property  CUCaptureController *_captureController
 @property  CMMotionManager *_motionManager
 @property  BOOL painting
 @property  long long _captureOrientation
 @property  UITapGestureRecognizer *_directionChangeGestureRecognizer
 @property  CAMPanoramaView *panoramaView
 @property  long long layoutStyle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMPanoramaViewController dealloc]
  -[CAMPanoramaViewController initWithCoder:]
  -[CAMPanoramaViewController .cxx_destruct]
  -[CAMPanoramaViewController loadView]
  -[CAMPanoramaViewController setLayoutStyle:]
  -[CAMPanoramaViewController layoutStyle]
  -[CAMPanoramaViewController _canShowWhileLocked]
  -[CAMPanoramaViewController _motionManager]
  -[CAMPanoramaViewController _captureController]
  -[CAMPanoramaViewController updateWithStatus:]
  -[CAMPanoramaViewController updateToContentSize:]
  -[CAMPanoramaViewController panoramaView]
  -[CAMPanoramaViewController didChangeToMode:device:]
  -[CAMPanoramaViewController _captureOrientation]
  -[CAMPanoramaViewController startProcessingPanorama]
  -[CAMPanoramaViewController finishedProcessingPanorama]
  -[CAMPanoramaViewController initWithCaptureController:layoutStyle:]
  -[CAMPanoramaViewController startPainting]
  -[CAMPanoramaViewController stopPainting]
  -[CAMPanoramaViewController didChangeToCaptureOrientation:]
  -[CAMPanoramaViewController _handleDirectionChange:]
  -[CAMPanoramaViewController _directionChangeGestureRecognizer]
  -[CAMPanoramaViewController _createMotionManagerIfNecessary]
  -[CAMPanoramaViewController _updateWithAccelerometerData:captureOrientation:]
  -[CAMPanoramaViewController _setMotionManager:]
  -[CAMPanoramaViewController _setCaptureOrientation:]
  -[CAMPanoramaViewController _setPainting:]
  -[CAMPanoramaViewController panoramaViewDidRequestSynchronizedDirectionChange:toDirection:]
  -[CAMPanoramaViewController panoramaConfigurationDidChangeWithDirection:]
  -[CAMPanoramaViewController isPainting]


CAMPausePairedVideoRecordingCommand : CAMCaptureCommand
 @property  BOOL _recordingPaused

  // instance methods
  -[CAMPausePairedVideoRecordingCommand copyWithZone:]
  -[CAMPausePairedVideoRecordingCommand encodeWithCoder:]
  -[CAMPausePairedVideoRecordingCommand initWithCoder:]
  -[CAMPausePairedVideoRecordingCommand executeWithContext:]
  -[CAMPausePairedVideoRecordingCommand _isRecordingPaused]
  -[CAMPausePairedVideoRecordingCommand initWithRecordingPaused:]


CAMTransientImageWell : UIView /System/Library/Frameworks/Foundation.framework/Foundation <UIGestureRecognizerDelegate>
 @property  UIImageView *_imageView
 @property  NSTimer *_autoStashTimer
 @property  BOOL _stashed
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  UISwipeGestureRecognizer *_unstashGestureRecognizer
 @property  UISwipeGestureRecognizer *_stashGestureRecognizer
 @property  <CAMTransientImageWellDelegate> *delegate
 @property  long long orientation
 @property  BOOL autoStashesImages
 @property  UIImage *image
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageFrame
 @property  BOOL currentImageHidden
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMTransientImageWell delegate]
  -[CAMTransientImageWell setDelegate:]
  -[CAMTransientImageWell .cxx_destruct]
  -[CAMTransientImageWell orientation]
  -[CAMTransientImageWell image]
  -[CAMTransientImageWell setOrientation:]
  -[CAMTransientImageWell setImage:]
  -[CAMTransientImageWell initWithFrame:]
  -[CAMTransientImageWell layoutSubviews]
  -[CAMTransientImageWell _imageView]
  -[CAMTransientImageWell hitTest:withEvent:]
  -[CAMTransientImageWell setOrientation:animated:]
  -[CAMTransientImageWell _tapGestureRecognizer]
  -[CAMTransientImageWell _handleTap:]
  -[CAMTransientImageWell imageFrame]
  -[CAMTransientImageWell setImage:animated:]
  -[CAMTransientImageWell _setImageView:]
  -[CAMTransientImageWell _handleUnstashSwipe:]
  -[CAMTransientImageWell _handleStashSwipe:]
  -[CAMTransientImageWell _setStashed:animated:]
  -[CAMTransientImageWell _unorientedFrameForImageView:]
  -[CAMTransientImageWell _imageViewMaxSize]
  -[CAMTransientImageWell _imageViewSpawnPoint]
  -[CAMTransientImageWell _isStashed]
  -[CAMTransientImageWell _imageViewStashPoint]
  -[CAMTransientImageWell autoStashesImages]
  -[CAMTransientImageWell _restartAutoStashTimerWithDuration:]
  -[CAMTransientImageWell _cancelAutoStashTimer]
  -[CAMTransientImageWell _handleAutoStashTimerFired:]
  -[CAMTransientImageWell set_autoStashTimer:]
  -[CAMTransientImageWell _autoStashTimer]
  -[CAMTransientImageWell _dismissImageView:animated:]
  -[CAMTransientImageWell _restartAutoStashTimer]
  -[CAMTransientImageWell _dismissImageAnimated:]
  -[CAMTransientImageWell _setStashed:]
  -[CAMTransientImageWell _imageViewSizeForContentSize:]
  -[CAMTransientImageWell setAutoStashesImages:]
  -[CAMTransientImageWell clearImageAnimated:]
  -[CAMTransientImageWell currentImageHidden]
  -[CAMTransientImageWell setCurrentImageHidden:]
  -[CAMTransientImageWell _unstashGestureRecognizer]
  -[CAMTransientImageWell _stashGestureRecognizer]


CAMFlashBadge : CEKBadgeView /System/Library/Frameworks/Metal.framework/Metal
 @property  UIImage *_contentImage
 @property  NSString *_contentSizeCategory

  // instance methods
  -[CAMFlashBadge .cxx_destruct]
  -[CAMFlashBadge _contentSizeCategory]
  -[CAMFlashBadge intrinsicContentSize]
  -[CAMFlashBadge initWithFrame:]
  -[CAMFlashBadge _imageInsets]
  -[CAMFlashBadge _maskImage]
  -[CAMFlashBadge _imageSize]
  -[CAMFlashBadge _contentImage]
  -[CAMFlashBadge updateToContentSize:]
  -[CAMFlashBadge set_contentSizeCategory:]
  -[CAMFlashBadge set_contentImage:]


CAMLivePhotoButton : CAMExpandableMenuButton <CAMAccessibilityHUDImageProvider>
 @property  UIImageView *_imageView
 @property  CAMLivePhotoAnimationCache *_animationCache
 @property  long long livePhotoMode
 @property  BOOL allowsAutomaticMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMLivePhotoButton enablingAnimationDuration]

  // instance methods
  -[CAMLivePhotoButton .cxx_destruct]
  -[CAMLivePhotoButton _imageView]
  -[CAMLivePhotoButton reloadData]
  -[CAMLivePhotoButton headerView]
  -[CAMLivePhotoButton setSelectedIndex:]
  -[CAMLivePhotoButton _availableModes]
  -[CAMLivePhotoButton _updateBaseImage]
  -[CAMLivePhotoButton initWithLayoutStyle:]
  -[CAMLivePhotoButton numberOfMenuItems]
  -[CAMLivePhotoButton titleForMenuItemAtIndex:]
  -[CAMLivePhotoButton finishExpansionAnimated:]
  -[CAMLivePhotoButton livePhotoMode]
  -[CAMLivePhotoButton imageForAccessibilityHUD]
  -[CAMLivePhotoButton interruptEnablingAnimation]
  -[CAMLivePhotoButton preloadEnablingAnimation]
  -[CAMLivePhotoButton setAllowsAutomaticMode:needsReloadData:]
  -[CAMLivePhotoButton setLivePhotoMode:]
  -[CAMLivePhotoButton performEnablingAnimation]
  -[CAMLivePhotoButton _currentBaseImage]
  -[CAMLivePhotoButton modeForIndex:]
  -[CAMLivePhotoButton indexForMode:]
  -[CAMLivePhotoButton allowsAutomaticMode]
  -[CAMLivePhotoButton _animationCache]
  -[CAMLivePhotoButton set_animationCache:]
  -[CAMLivePhotoButton _loadAnimationCacheIfNeeded]
  -[CAMLivePhotoButton _updateAnimationImages]
  -[CAMLivePhotoButton setAllowsAutomaticMode:]
  -[CAMLivePhotoButton prepareHeaderViewForExpanding:]


CAMBufferObservance : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL fulfilled
 @property  BOOL enabled
 @property  BOOL removedOnceEnabled
 @property  @? predicate

  // instance methods
  -[CAMBufferObservance setEnabled:]
  -[CAMBufferObservance .cxx_destruct]
  -[CAMBufferObservance predicate]
  -[CAMBufferObservance isEnabled]
  -[CAMBufferObservance isFulfilled]
  -[CAMBufferObservance shouldBeFulfilledByChange:]
  -[CAMBufferObservance setFulfilled:]
  -[CAMBufferObservance initWithPredicate:removedOnceEnabled:]
  -[CAMBufferObservance setupObservanceForBuffer:]
  -[CAMBufferObservance teardownObservanceForBuffer:]
  -[CAMBufferObservance fulfillWithChange:]
  -[CAMBufferObservance isRemovedOnceEnabled]


CAMTimerIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_dimmingView
 @property  UILabel *_countdownLabel
 @property  long long _startingTicks
 @property  long long _remainingTicks
 @property  long long _labelOrientation
 @property  CAMAnimationDelegate *_animationDelegate
 @property  BOOL _performingStyleAnimation
 @property  long long _deferredLabelOrientation
 @property  long long style

  // instance methods
  -[CAMTimerIndicatorView initWithCoder:]
  -[CAMTimerIndicatorView .cxx_destruct]
  -[CAMTimerIndicatorView decrement]
  -[CAMTimerIndicatorView style]
  -[CAMTimerIndicatorView setStyle:]
  -[CAMTimerIndicatorView initWithFrame:]
  -[CAMTimerIndicatorView setFont:]
  -[CAMTimerIndicatorView layoutSubviews]
  -[CAMTimerIndicatorView font]
  -[CAMTimerIndicatorView _dimmingView]
  -[CAMTimerIndicatorView setStyle:animated:]
  -[CAMTimerIndicatorView _animationDelegate]
  -[CAMTimerIndicatorView _countdownLabel]
  -[CAMTimerIndicatorView cam_rotateWithInterfaceOrientation:animated:]
  -[CAMTimerIndicatorView stopCountdown]
  -[CAMTimerIndicatorView resetWithNumberOfTicks:]
  -[CAMTimerIndicatorView startCountdownWithAnimationDelegate:]
  -[CAMTimerIndicatorView _fontForStyle:]
  -[CAMTimerIndicatorView _updateCountdownLabelWithTicksRemaining]
  -[CAMTimerIndicatorView _commonCAMTimerIndicatorViewInitialization]
  -[CAMTimerIndicatorView _layoutCountdownLabelForStyle:]
  -[CAMTimerIndicatorView _landscapeSwapBoundsCoordinates:]
  -[CAMTimerIndicatorView _isPerformingStyleAnimation]
  -[CAMTimerIndicatorView _layoutCountdownLabelForSmallStyle]
  -[CAMTimerIndicatorView _layoutCountdownLabelForLargeStyle]
  -[CAMTimerIndicatorView _updateFromChangeToStyle:animated:]
  -[CAMTimerIndicatorView _setPerformingStyleAnimation:]
  -[CAMTimerIndicatorView _transitionDimmingViewFromStyle:]
  -[CAMTimerIndicatorView _deferredLabelOrientation]
  -[CAMTimerIndicatorView _handleOrientationChange:]
  -[CAMTimerIndicatorView _setDeferredOrientation:]
  -[CAMTimerIndicatorView _addDecrementAnimationForTick:]
  -[CAMTimerIndicatorView _addDimmingAnimationForTick:]
  -[CAMTimerIndicatorView _decrementAnimationForTick:]
  -[CAMTimerIndicatorView _dimmingAnimationForTick:]
  -[CAMTimerIndicatorView _finalDimmingAnimation]
  -[CAMTimerIndicatorView _setLabelOrientation:]
  -[CAMTimerIndicatorView _startingTicks]
  -[CAMTimerIndicatorView _remainingTicks]
  -[CAMTimerIndicatorView _labelOrientation]


CAMStageLightOverlayCircleView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIImage *image
 @property  UIImage *highlightedImage
 @property  BOOL active

  // instance methods
  -[CAMStageLightOverlayCircleView .cxx_destruct]
  -[CAMStageLightOverlayCircleView isActive]
  -[CAMStageLightOverlayCircleView setActive:]
  -[CAMStageLightOverlayCircleView image]
  -[CAMStageLightOverlayCircleView setImage:]
  -[CAMStageLightOverlayCircleView initWithFrame:]
  -[CAMStageLightOverlayCircleView layoutSubviews]
  -[CAMStageLightOverlayCircleView actionForLayer:forKey:]
  -[CAMStageLightOverlayCircleView setActive:animated:]
  -[CAMStageLightOverlayCircleView highlightedImage]
  -[CAMStageLightOverlayCircleView setHighlightedImage:]
  -[CAMStageLightOverlayCircleView _circleImageWithColor:]
  -[CAMStageLightOverlayCircleView _updateContentsAnimated:]
  -[CAMStageLightOverlayCircleView _updateImagesIfNeeded]
  -[CAMStageLightOverlayCircleView _drawCircleWithColor:]


CAMPriorityNotificationCenterEntry : NSObject /usr/lib/libSystem.B.dylib
 @property  id observer
 @property  SEL selector
 @property  id object

  // instance methods
  -[CAMPriorityNotificationCenterEntry selector]
  -[CAMPriorityNotificationCenterEntry object]
  -[CAMPriorityNotificationCenterEntry observer]
  -[CAMPriorityNotificationCenterEntry setObject:]
  -[CAMPriorityNotificationCenterEntry .cxx_destruct]
  -[CAMPriorityNotificationCenterEntry setSelector:]
  -[CAMPriorityNotificationCenterEntry setObserver:]
  -[CAMPriorityNotificationCenterEntry initWithObserver:selector:object:]


CAMPriorityNotificationCenter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNotificationCenter *_notificationCenter
 @property  NSMutableDictionary *_observersByNameHighPriority
 @property  NSMutableDictionary *_observersByNameNormalPriority

  // class methods
  +[CAMPriorityNotificationCenter defaultCenter]

  // instance methods
  -[CAMPriorityNotificationCenter init]
  -[CAMPriorityNotificationCenter dealloc]
  -[CAMPriorityNotificationCenter .cxx_destruct]
  -[CAMPriorityNotificationCenter addObserver:selector:name:object:]
  -[CAMPriorityNotificationCenter removeObserver:]
  -[CAMPriorityNotificationCenter _notificationCenter]
  -[CAMPriorityNotificationCenter _observersForPriority:]
  -[CAMPriorityNotificationCenter _entriesByName:forPriority:creatingEmptyIfNeeded:]
  -[CAMPriorityNotificationCenter _postNotification:forEntries:]
  -[CAMPriorityNotificationCenter _observersByNameHighPriority]
  -[CAMPriorityNotificationCenter _observersByNameNormalPriority]
  -[CAMPriorityNotificationCenter _notificationReceiver:]
  -[CAMPriorityNotificationCenter addObserver:priority:selector:name:object:]
  -[CAMPriorityNotificationCenter _allSubscriptions]
  -[CAMPriorityNotificationCenter _removeObserver:fromObserversByName:]


CAMConflictingControlConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  long long desiredFlashMode
 @property  long long desiredHDRMode
 @property  long long flashAndHDRConflictingControl

  // class methods
  +[CAMConflictingControlConfiguration resolveDesiredFlashMode:desiredHDRMode:primaryConflictingControl:device:toFlashMode:HDRMode:]

  // instance methods
  -[CAMConflictingControlConfiguration init]
  -[CAMConflictingControlConfiguration initWithDesiredFlashMode:desiredHDRMode:flashAndHDRConflictingControl:]
  -[CAMConflictingControlConfiguration desiredFlashMode]
  -[CAMConflictingControlConfiguration desiredHDRMode]
  -[CAMConflictingControlConfiguration flashAndHDRConflictingControl]


CAMCameraRollController : NSObject /usr/lib/libSystem.B.dylib <PXPhotosDataSourceChangeObserver, PUOneUpPresentationHelperDelegate, PUOneUpPresentationHelperAssetDisplayDelegate, PLCameraPreviewWellImageChangeObserver, PUBrowsingViewModelChangeObserver, PHPhotoLibraryChangeObserver, UIViewControllerPreviewingDelegate, UIViewControllerPreviewingDelegate_Private, UIInteractionProgressObserver>
 @property  unsigned short sessionIdentifier
 @property  PUOneUpPresentationHelper *_oneUpPresentationHelper
 @property  CAMTransientDataSource *_transientDataSource
 @property  CAMTransientImageManager *_transientImageManager
 @property  PUPhotoKitDataSourceManager *_photoKitDataSourceManager
 @property  NSMutableSet *_sessionAssetUUIDs
 @property  NSMutableSet *_ignoredEV0UUIDs
 @property  NSMutableDictionary *_HDRUUIDToIgnoredEV0UUIDs
 @property  PXPhotosDataSource *_photosDataSource
 @property  PXPhotosDataSource *_stagedDataSource
 @property  UIGestureRecognizer *previewGestureRecognizer
 @property  BOOL _allowUpdating
 @property  BOOL _updateIsScheduled
 @property  BOOL _transientAssetsAreValid
 @property  BOOL _oneUpVisible
 @property  BOOL _oneUpFullyPresented
 @property  BOOL _didSetupMechanismsForStoppingCaptureSession
 @property  BOOL _didStopCaptureSession
 @property  BOOL prefersPresentingStatusbarHidden
 @property  BOOL _deferringStagedMediaLoading
 @property  NSObject<OS_dispatch_source> *_memoryWarningSource
 @property  NSObject<OS_dispatch_queue> *_photosFrameworksPreheatQueue
 @property  BOOL _shouldSkipPhotosFrameworkPreheat
 @property  <CAMCameraRollControllerSessionDelegate> *sessionDelegate
 @property  <CAMCameraRollControllerImageWellDelegate> *imageWellDelegate
 @property  <CAMCameraRollControllerPresentationDelegate> *presentationDelegate
 @property  BOOL canPresentCameraRollViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMCameraRollController init]
  -[CAMCameraRollController dealloc]
  -[CAMCameraRollController .cxx_destruct]
  -[CAMCameraRollController _update]
  -[CAMCameraRollController interactionProgress:didEnd:]
  -[CAMCameraRollController willPresentPreviewViewController:forLocation:inSourceView:]
  -[CAMCameraRollController previewingContext:viewControllerForLocation:]
  -[CAMCameraRollController previewingContext:commitViewController:]
  -[CAMCameraRollController didDismissPreviewViewController:committing:]
  -[CAMCameraRollController animateRevealWithInteractionProgress:forPreviewingAtLocation:inSourceView:containerView:]
  -[CAMCameraRollController previewPresentationTransitioningDelegateForPosition:inSourceView:]
  -[CAMCameraRollController shouldStartPreviewingSimultaneouslyWithGestureRecognizer:]
  -[CAMCameraRollController sessionIdentifier]
  -[CAMCameraRollController setPresentationDelegate:]
  -[CAMCameraRollController applicationWillEnterForeground:]
  -[CAMCameraRollController applicationDidEnterBackground:]
  -[CAMCameraRollController setSessionDelegate:]
  -[CAMCameraRollController previewGestureRecognizer]
  -[CAMCameraRollController cameraPreviewWellImageDidChange:]
  -[CAMCameraRollController presentationDelegate]
  -[CAMCameraRollController photoLibraryDidChange:]
  -[CAMCameraRollController preload]
  -[CAMCameraRollController _memoryWarningSource]
  -[CAMCameraRollController sessionDelegate]
  -[CAMCameraRollController oneUpPresentationOrigin:]
  -[CAMCameraRollController _photosDataSource]
  -[CAMCameraRollController photosDataSource:didChange:]
  -[CAMCameraRollController _setPhotosDataSource:]
  -[CAMCameraRollController _photoKitDataSourceManager]
  -[CAMCameraRollController _isOneUpVisible]
  -[CAMCameraRollController presentingViewControllerViewWillAppear:]
  -[CAMCameraRollController presentingViewControllerViewDidAppear:]
  -[CAMCameraRollController presentingViewControllerViewWillDisappear:]
  -[CAMCameraRollController presentingViewControllerViewDidDisappear:]
  -[CAMCameraRollController _isPasscodeLocked]
  -[CAMCameraRollController viewModel:didChange:]
  -[CAMCameraRollController _transientDataSource]
  -[CAMCameraRollController _transientImageManager]
  -[CAMCameraRollController oneUpPresentationHelper:willPresentOneUpViewController:]
  -[CAMCameraRollController oneUpPresentationHelperPreferredBarStyle:]
  -[CAMCameraRollController oneUpPresentationHelperShouldLeaveContentOnSecondScreen:]
  -[CAMCameraRollController oneUpPresentationHelperEnableFreezeLayoutOnOrientationChange:]
  -[CAMCameraRollController oneUpPresentationHelper:previewScrubberDidBecomeAvailable:]
  -[CAMCameraRollController oneUpPresentationHelperPreferredPresentationOrientation:]
  -[CAMCameraRollController oneUpPresentationHelperViewController:]
  -[CAMCameraRollController _oneUpPresentationHelper]
  -[CAMCameraRollController handlePresentingPanGestureRecognizer:]
  -[CAMCameraRollController oneUpPresentationHelper:shouldHideAssetReferences:]
  -[CAMCameraRollController oneUpPresentationHelper:rectForAssetReference:cropInsets:contentsRect:]
  -[CAMCameraRollController ppt_awaitPreload:]
  -[CAMCameraRollController setImageWellDelegate:]
  -[CAMCameraRollController prefersPresentingStatusbarHidden]
  -[CAMCameraRollController ignoreImageWellChangeNotificationForEV0UUID:withHDRUUID:]
  -[CAMCameraRollController processTransientAssetUpdate:preventingInsertion:]
  -[CAMCameraRollController processTransientPairedVideoUpdate:filterType:]
  -[CAMCameraRollController didPersistAssetWithUUID:captureSession:]
  -[CAMCameraRollController isCaptureSessionCurrent:]
  -[CAMCameraRollController willPersistAssetWithUUID:captureSession:]
  -[CAMCameraRollController processPendingBursts]
  -[CAMCameraRollController isCameraRollViewControllerPresented]
  -[CAMCameraRollController canPresentCameraRollViewController]
  -[CAMCameraRollController resetNavigation]
  -[CAMCameraRollController presentCameraRollViewControllerAnimated:interactive:deferringStagedMediaLoading:]
  -[CAMCameraRollController persistedThumbnailImage]
  -[CAMCameraRollController beginAllowingStagedMediaLoading]
  -[CAMCameraRollController dismissCameraRollViewControllerForced:animated:]
  -[CAMCameraRollController applicationResumed:]
  -[CAMCameraRollController _teardownMechanismsForStoppingCaptureSession]
  -[CAMCameraRollController _sessionAssetUUIDs]
  -[CAMCameraRollController _scheduleUpdateIfOneUpIsActive]
  -[CAMCameraRollController _updateIsScheduled]
  -[CAMCameraRollController _setUpdateIsScheduled:]
  -[CAMCameraRollController _photosFrameworksPreheatQueue]
  -[CAMCameraRollController _shouldSkipPhotosFrameworkPreheat]
  -[CAMCameraRollController _cameraRollCollectionListFetchResult]
  -[CAMCameraRollController _ensureCameraRollViewController]
  -[CAMCameraRollController imageWellDelegate]
  -[CAMCameraRollController _ignoredEV0UUIDs]
  -[CAMCameraRollController _HDRUUIDToIgnoredEV0UUIDs]
  -[CAMCameraRollController _startNewSession]
  -[CAMCameraRollController _stagedDataSource]
  -[CAMCameraRollController _invalidateTransientAssets]
  -[CAMCameraRollController _updateTransientDataSourceIfNeeded]
  -[CAMCameraRollController _setDeferringStagedMediaLoading:]
  -[CAMCameraRollController _isDeferringStagedMediaLoading]
  -[CAMCameraRollController _didStopCaptureSession]
  -[CAMCameraRollController _setDidStopCaptureSession:]
  -[CAMCameraRollController _setPrefersPresentingStatusbarHidden:]
  -[CAMCameraRollController _isOneUpFullyPresented]
  -[CAMCameraRollController _setOneUpFullyPresented:]
  -[CAMCameraRollController _setOneUpVisible:]
  -[CAMCameraRollController clearIgnoredImageWellUUIDs]
  -[CAMCameraRollController _setupMechanismsForStoppingCaptureSessionIfNecessary]
  -[CAMCameraRollController _didSetupMechanismsForStoppingCaptureSession]
  -[CAMCameraRollController _setDidSetupMechanismsForStoppingCaptureSession:]
  -[CAMCameraRollController _stopCaptureSessionIfNecessary]
  -[CAMCameraRollController _scheduleStopCaptureSessionAfterDelay:]
  -[CAMCameraRollController _setupMemoryWarningNotificationsIfNecessary]
  -[CAMCameraRollController _registerBrowsingViewModelChangeObserver]
  -[CAMCameraRollController _stopCaptureSessionIfNecessaryForViewModelCurrentState]
  -[CAMCameraRollController _unregisterBrowsingViewModelChangeObserver]
  -[CAMCameraRollController _cancelDelayedStopCaptureSession]
  -[CAMCameraRollController _tearDownMemoryWarningNotifications]
  -[CAMCameraRollController _stopCaptureSessionIfNecessaryFromTimeout]
  -[CAMCameraRollController _shouldStopCaptureSessionForVideoPlayerOfAssetViewModel:]
  -[CAMCameraRollController _shouldStopCaptureSessionForIrisPlayerOfAssetViewModel:]
  -[CAMCameraRollController _setSessionIdentifier:]
  -[CAMCameraRollController _setAllowUpdating:]
  -[CAMCameraRollController _allowUpdating]
  -[CAMCameraRollController _setShouldSkipPhotosFrameworkPreheat:]
  -[CAMCameraRollController _setStagedDataSource:]
  -[CAMCameraRollController _setTransientAssetsAreValid:]
  -[CAMCameraRollController _transientAssetsAreValid]
  -[CAMCameraRollController _setPreviewGestureRecognizer:]
  -[CAMCameraRollController _stopCaptureSessionIfNecessaryForViewModel:didChange:]


CAMImagePickerCameraViewController : CAMCameraViewController <CAMCameraConfigurationDelegate, CAMCameraCaptureDelegate, PLVideoViewDelegate, PLCropOverlayDelegate, UIImagePickerCameraViewController>
 @property  PLCropOverlay *_cropOverlay
 @property  PLPhotoTileViewController *_photoTileViewController
 @property  PLVideoView *_videoView
 @property  BOOL editingAllowed
 @property  BOOL videoEditingAllowed
 @property  BOOL currentlyReviewing
 @property  BOOL usingTelephonyUI
 @property  int photoSavingOptions
 @property  NSDictionary *mostRecentPhotoProperties
 @property  NSDictionary *mostRecentVideoProperties
 @property  BOOL statusBarWasHidden
 @property  BOOL showingStandardControls
 @property  long long imagePickerVideoQuality
 @property  double maximumVideoRecordingDuration
 @property  UIView *customOverlayView
 @property  {CGAffineTransform=dddddd} customPreviewViewTransform
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMImagePickerCameraViewController isEmulatingImagePicker]

  // instance methods
  -[CAMImagePickerCameraViewController .cxx_destruct]
  -[CAMImagePickerCameraViewController loadView]
  -[CAMImagePickerCameraViewController viewWillAppear:]
  -[CAMImagePickerCameraViewController viewWillDisappear:]
  -[CAMImagePickerCameraViewController _showsCameraControls]
  -[CAMImagePickerCameraViewController _setShowsCameraControls:]
  -[CAMImagePickerCameraViewController _cameraOverlayView]
  -[CAMImagePickerCameraViewController _setCameraOverlayView:]
  -[CAMImagePickerCameraViewController _cameraViewTransform]
  -[CAMImagePickerCameraViewController _setCameraViewTransform:]
  -[CAMImagePickerCameraViewController _takePicture]
  -[CAMImagePickerCameraViewController _startVideoCapture]
  -[CAMImagePickerCameraViewController _stopVideoCapture]
  -[CAMImagePickerCameraViewController _cameraDevice]
  -[CAMImagePickerCameraViewController _setCameraDevice:]
  -[CAMImagePickerCameraViewController _cameraCaptureMode]
  -[CAMImagePickerCameraViewController _setCameraCaptureMode:]
  -[CAMImagePickerCameraViewController _cameraFlashMode]
  -[CAMImagePickerCameraViewController _setCameraFlashMode:]
  -[CAMImagePickerCameraViewController _setImagePickerMediaTypes:]
  -[CAMImagePickerCameraViewController initWithInitialImagePickerProperties:]
  -[CAMImagePickerCameraViewController _canShowWhileLocked]
  -[CAMImagePickerCameraViewController _statusBarWasHidden]
  -[CAMImagePickerCameraViewController _videoView]
  -[CAMImagePickerCameraViewController cropOverlayWasOKed:]
  -[CAMImagePickerCameraViewController cropOverlay:didFinishSaving:]
  -[CAMImagePickerCameraViewController cropOverlayWasCancelled:]
  -[CAMImagePickerCameraViewController videoViewScrubberYOrigin:forOrientation:]
  -[CAMImagePickerCameraViewController _cropOverlay]
  -[CAMImagePickerCameraViewController cropOverlayWasToggled:]
  -[CAMImagePickerCameraViewController cropOverlayPlay:]
  -[CAMImagePickerCameraViewController cropOverlayPause:]
  -[CAMImagePickerCameraViewController videoViewCanBeginPlayback:]
  -[CAMImagePickerCameraViewController videoViewIsReadyToBeginPlayback:]
  -[CAMImagePickerCameraViewController videoViewDidBeginPlayback:]
  -[CAMImagePickerCameraViewController videoViewDidPausePlayback:]
  -[CAMImagePickerCameraViewController videoViewDidEndPlayback:didFinish:]
  -[CAMImagePickerCameraViewController photoTileViewControllerIsDisplayingLandscape:]
  -[CAMImagePickerCameraViewController isShowingStandardControls]
  -[CAMImagePickerCameraViewController maximumVideoRecordingDuration]
  -[CAMImagePickerCameraViewController customPreviewViewTransform]
  -[CAMImagePickerCameraViewController setShowingStandardControls:]
  -[CAMImagePickerCameraViewController setCustomPreviewViewTransform:]
  -[CAMImagePickerCameraViewController _videoConfigurationForImagePickerQualityType:]
  -[CAMImagePickerCameraViewController setMaximumVideoRecordingDuration:]
  -[CAMImagePickerCameraViewController customOverlayView]
  -[CAMImagePickerCameraViewController setCustomOverlayView:]
  -[CAMImagePickerCameraViewController _captureModeForImagePickerCameraCaptureMode:]
  -[CAMImagePickerCameraViewController _captureDeviceForImagePickerCameraDevice:]
  -[CAMImagePickerCameraViewController _containingImagePickerController]
  -[CAMImagePickerCameraViewController _applyPropertiesFromImagePicker:]
  -[CAMImagePickerCameraViewController _setStatusBarWasHidden:]
  -[CAMImagePickerCameraViewController _createCropOverlayIfNecessary]
  -[CAMImagePickerCameraViewController _imagePickerQualityTypeForVideoConfiguration:]
  -[CAMImagePickerCameraViewController _updateFromEditabilityChange]
  -[CAMImagePickerCameraViewController setImagePickerVideoQuality:]
  -[CAMImagePickerCameraViewController _setPhotoSavingOptions:]
  -[CAMImagePickerCameraViewController _setEditingAllowed:]
  -[CAMImagePickerCameraViewController _setVideoEditingAllowed:]
  -[CAMImagePickerCameraViewController _handleEditabilityChanged:]
  -[CAMImagePickerCameraViewController _imagePickerCameraDeviceForCaptureDevice:]
  -[CAMImagePickerCameraViewController _imagePickerCameraCaptureModeForCaptureMode:]
  -[CAMImagePickerCameraViewController _imagePickerCameraFlashModeForFlashMode:]
  -[CAMImagePickerCameraViewController _flashModeForImagePickerCameraFlashMode:]
  -[CAMImagePickerCameraViewController _isEditingAllowed]
  -[CAMImagePickerCameraViewController _photoTileViewController]
  -[CAMImagePickerCameraViewController _setUsingTelephonyUI:]
  -[CAMImagePickerCameraViewController _currentCancelButtonTitle]
  -[CAMImagePickerCameraViewController _setMostRecentPhotoProperties:]
  -[CAMImagePickerCameraViewController _setCurrentlyReviewing:]
  -[CAMImagePickerCameraViewController _isUsingTelephonyUI]
  -[CAMImagePickerCameraViewController _setMostRecentVideoProperties:]
  -[CAMImagePickerCameraViewController _isVideoEditingAllowed]
  -[CAMImagePickerCameraViewController _handleCapturedImagePickerVideoAtPath:withEditingMetadata:]
  -[CAMImagePickerCameraViewController _isCurrentlyReviewing]
  -[CAMImagePickerCameraViewController _removeFileAtPath:]
  -[CAMImagePickerCameraViewController _resetTileViewControllerAndVideoView]
  -[CAMImagePickerCameraViewController _mostRecentVideoProperties]
  -[CAMImagePickerCameraViewController _photoSavingOptions]
  -[CAMImagePickerCameraViewController _handleCapturedImagePickerPhotoWithCropOverlayOutput:]
  -[CAMImagePickerCameraViewController _mostRecentPhotoProperties]
  -[CAMImagePickerCameraViewController cameraViewController:didCapturePhoto:withProperties:error:]
  -[CAMImagePickerCameraViewController cameraViewController:didCaptureAVAsset:andAudioMix:withProperties:error:]
  -[CAMImagePickerCameraViewController imagePickerVideoQuality]
  -[CAMImagePickerCameraViewController handleReviewButtonReleased:]


CAMVideoStabilizationCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMVideoStabilizationCommand copyWithZone:]
  -[CAMVideoStabilizationCommand encodeWithCoder:]
  -[CAMVideoStabilizationCommand initWithCoder:]
  -[CAMVideoStabilizationCommand _isEnabled]
  -[CAMVideoStabilizationCommand executeWithContext:]
  -[CAMVideoStabilizationCommand initWithAutomaticVideoStabilizationEnabled:]


CAMVideoCaptureResponse : CAMCaptureResponse <CAMTransientAssetConvertible>
 @property  NSString *persistenceUUID
 @property  NSURL *localPersistenceURL
 @property  NSDate *captureDate
 @property  {?=qiIq} duration
 @property  long long reason
 @property  BOOL stoppedUnexpectedly
 @property  double videoZoomFactor
 @property  UIImage *imageWellImage
 @property  UIImage *previewImage
 @property  {CGSize=dd} finalExpectedPixelSize
 @property  NSString *stillPersistenceUUID
 @property  {?=qiIq} stillDisplayTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSString *uuid
 @property  unsigned short sessionIdentifier
 @property  NSURL *persistenceURL
 @property  UIImage *placeholderImage
 @property  NSDictionary *stillImageMetadata
 @property  NSString *burstIdentifier
 @property  unsigned long numberOfRepresentedAssets
 @property  NSString *irisStillImageUUID
 @property  BOOL expectingPairedVideo
 @property  NSURL *irisVideoPersistenceURL
 @property  {?=qiIq} irisStillDisplayTime

  // instance methods
  -[CAMVideoCaptureResponse reason]
  -[CAMVideoCaptureResponse .cxx_destruct]
  -[CAMVideoCaptureResponse uuid]
  -[CAMVideoCaptureResponse duration]
  -[CAMVideoCaptureResponse mediaType]
  -[CAMVideoCaptureResponse placeholderImage]
  -[CAMVideoCaptureResponse captureDate]
  -[CAMVideoCaptureResponse previewImage]
  -[CAMVideoCaptureResponse videoZoomFactor]
  -[CAMVideoCaptureResponse burstIdentifier]
  -[CAMVideoCaptureResponse mediaSubtypes]
  -[CAMVideoCaptureResponse numberOfRepresentedAssets]
  -[CAMVideoCaptureResponse persistenceURL]
  -[CAMVideoCaptureResponse stillDisplayTime]
  -[CAMVideoCaptureResponse finalExpectedPixelSize]
  -[CAMVideoCaptureResponse isExpectingPairedVideo]
  -[CAMVideoCaptureResponse irisStillDisplayTime]
  -[CAMVideoCaptureResponse persistenceUUID]
  -[CAMVideoCaptureResponse imageWellImage]
  -[CAMVideoCaptureResponse stoppedUnexpectedly]
  -[CAMVideoCaptureResponse localPersistenceURL]
  -[CAMVideoCaptureResponse stillImageMetadata]
  -[CAMVideoCaptureResponse irisStillImageUUID]
  -[CAMVideoCaptureResponse irisVideoPersistenceURL]
  -[CAMVideoCaptureResponse initWithUUID:captureSession:url:captureDate:duration:stillPersistenceUUID:stillDisplayTime:reason:videoZoomFactor:finalExpectedPixelSize:imageWellImage:previewImage:coordinationInfo:]
  -[CAMVideoCaptureResponse stillPersistenceUUID]


CAMFocusResult : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL performingContrastDetection
 @property  {CGPoint=dd} pointOfInterest
 @property  long long focusMode
 @property  BOOL contrastBasedFocusDidStart
 @property  BOOL contrastBasedFocusDidEnd
 @property  BOOL deviceSupportsFocus

  // instance methods
  -[CAMFocusResult pointOfInterest]
  -[CAMFocusResult focusMode]
  -[CAMFocusResult deviceSupportsFocus]
  -[CAMFocusResult isPerformingContrastDetection]
  -[CAMFocusResult contrastBasedFocusDidStart]
  -[CAMFocusResult contrastBasedFocusDidEnd]
  -[CAMFocusResult initWithMode:pointOfInterest:performingContrastDetection:contrastBasedFocusDidStart:contrastBasedFocusDidEnd:deviceSupportsFocus:]


CAMCallStatusMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *_disabledReasons
 @property  NSObject<OS_dispatch_queue> *_avscAccessQueue
 @property  BOOL callActive

  // instance methods
  -[CAMCallStatusMonitor init]
  -[CAMCallStatusMonitor dealloc]
  -[CAMCallStatusMonitor .cxx_destruct]
  -[CAMCallStatusMonitor _handleApplicationWillEnterForeground:]
  -[CAMCallStatusMonitor _handleApplicationDidEnterBackground:]
  -[CAMCallStatusMonitor _disabledReasons]
  -[CAMCallStatusMonitor setCallActive:]
  -[CAMCallStatusMonitor isCallActive]
  -[CAMCallStatusMonitor removeDisabledReason:]
  -[CAMCallStatusMonitor _enableCallStatusMonitor]
  -[CAMCallStatusMonitor initWithInitialDisabledReasons:]
  -[CAMCallStatusMonitor _unregisterForAVSystemControllerNotifications]
  -[CAMCallStatusMonitor _handleCallIsActiveDidChangeNotification:]
  -[CAMCallStatusMonitor _handleServerConnectionDiedNotification:]
  -[CAMCallStatusMonitor _registerForAVSystemControllerNotifications]
  -[CAMCallStatusMonitor _avscAccessQueue]
  -[CAMCallStatusMonitor _accessQueue_queryCallActiveStatusForReason:]
  -[CAMCallStatusMonitor _descriptionStringForReason:]
  -[CAMCallStatusMonitor _descriptionForReasons:]
  -[CAMCallStatusMonitor _setCallActive:]
  -[CAMCallStatusMonitor addDisabledReason:]
  -[CAMCallStatusMonitor initDisabledForLaunch]


CAMClosedViewfinderController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *_reasonsForClosingViewfinder
 @property  double _referenceTime
 @property  long long _referenceTimeEvent
 @property  <CAMClosedViewfinderControllerDelegate> *delegate
 @property  BOOL viewfinderClosed

  // instance methods
  -[CAMClosedViewfinderController init]
  -[CAMClosedViewfinderController dealloc]
  -[CAMClosedViewfinderController delegate]
  -[CAMClosedViewfinderController setDelegate:]
  -[CAMClosedViewfinderController .cxx_destruct]
  -[CAMClosedViewfinderController _handleApplicationDidBecomeActive:]
  -[CAMClosedViewfinderController _handleApplicationWillEnterForeground:]
  -[CAMClosedViewfinderController _handleApplicationDidEnterBackground:]
  -[CAMClosedViewfinderController removeClosedViewfinderReason:]
  -[CAMClosedViewfinderController addClosedViewfinderReason:]
  -[CAMClosedViewfinderController descriptionForTimeBetweenReferenceAndNow]
  -[CAMClosedViewfinderController isViewfinderClosed]
  -[CAMClosedViewfinderController removeClosedViewfinderReason:afterDelay:]
  -[CAMClosedViewfinderController cancelDelayedRemovalOfReason:]
  -[CAMClosedViewfinderController _descriptionStringForReason:]
  -[CAMClosedViewfinderController _descriptionForReasons:]
  -[CAMClosedViewfinderController _setReferenceTime:]
  -[CAMClosedViewfinderController _setReferenceTimeEvent:]
  -[CAMClosedViewfinderController _reasonsForClosingViewfinder]
  -[CAMClosedViewfinderController _updateReferenceTimeToNowForEvent:]
  -[CAMClosedViewfinderController _cancelDelayedLoggingForClosedViewfinder]
  -[CAMClosedViewfinderController _referenceTimeEvent]
  -[CAMClosedViewfinderController _performDelayedRemovalOfReason:]
  -[CAMClosedViewfinderController _scheduleLogWarningIfViewfinderStillClosedAfterDelay:]
  -[CAMClosedViewfinderController _logWarningIfViewfinderStillClosed]
  -[CAMClosedViewfinderController _referenceTime]
  -[CAMClosedViewfinderController _descriptionStringForReferenceTimeEvent:]
  -[CAMClosedViewfinderController hasClosedViewfinderReason:]


CAMVideoHDRCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMVideoHDRCommand copyWithZone:]
  -[CAMVideoHDRCommand encodeWithCoder:]
  -[CAMVideoHDRCommand initWithCoder:]
  -[CAMVideoHDRCommand _isEnabled]
  -[CAMVideoHDRCommand executeWithContext:]
  -[CAMVideoHDRCommand initWithVideoHDREnabled:]


CAMPanoramaDirectionCommand : CAMCaptureCommand
 @property  long long _direction

  // instance methods
  -[CAMPanoramaDirectionCommand copyWithZone:]
  -[CAMPanoramaDirectionCommand encodeWithCoder:]
  -[CAMPanoramaDirectionCommand initWithCoder:]
  -[CAMPanoramaDirectionCommand _direction]
  -[CAMPanoramaDirectionCommand initWithDirection:]
  -[CAMPanoramaDirectionCommand executeWithContext:]


CAMVideoThumbnailOutputConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGSize=dd} thumbnailSize
 @property  NSArray *filters

  // instance methods
  -[CAMVideoThumbnailOutputConfiguration .cxx_destruct]
  -[CAMVideoThumbnailOutputConfiguration filters]
  -[CAMVideoThumbnailOutputConfiguration initWithMode:]
  -[CAMVideoThumbnailOutputConfiguration thumbnailSize]
  -[CAMVideoThumbnailOutputConfiguration initWithThumbnailSize:filters:]


CAMPreviewFiltersCommand : CAMCaptureCommand
 @property  NSArray *filters

  // instance methods
  -[CAMPreviewFiltersCommand copyWithZone:]
  -[CAMPreviewFiltersCommand encodeWithCoder:]
  -[CAMPreviewFiltersCommand initWithCoder:]
  -[CAMPreviewFiltersCommand .cxx_destruct]
  -[CAMPreviewFiltersCommand filters]
  -[CAMPreviewFiltersCommand executeWithContext:]
  -[CAMPreviewFiltersCommand initWithSubcommands:]
  -[CAMPreviewFiltersCommand initWithFilters:]


CAMElapsedTimeView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_timeLabel
 @property  UIImageView *_recordingImageView
 @property  UIImageView *_backgroundView
 @property  NSTimer *_updateTimer
 @property  NSDate *_startTime
 @property  long long layoutStyle
 @property  BOOL usingBadgeAppearance
 @property  BOOL showingBackground
 @property  long long backgroundStyle
 @property  NSString *contentSizeCategory

  // instance methods
  -[CAMElapsedTimeView dealloc]
  -[CAMElapsedTimeView .cxx_destruct]
  -[CAMElapsedTimeView _startTime]
  -[CAMElapsedTimeView setContentSizeCategory:]
  -[CAMElapsedTimeView contentSizeCategory]
  -[CAMElapsedTimeView intrinsicContentSize]
  -[CAMElapsedTimeView _backgroundView]
  -[CAMElapsedTimeView sizeThatFits:]
  -[CAMElapsedTimeView layoutSubviews]
  -[CAMElapsedTimeView setLayoutStyle:]
  -[CAMElapsedTimeView layoutStyle]
  -[CAMElapsedTimeView setBackgroundStyle:]
  -[CAMElapsedTimeView _updateText]
  -[CAMElapsedTimeView backgroundStyle]
  -[CAMElapsedTimeView startTimer]
  -[CAMElapsedTimeView resetTimer]
  -[CAMElapsedTimeView setBackgroundStyle:animated:]
  -[CAMElapsedTimeView _updateTimer]
  -[CAMElapsedTimeView _updateFont]
  -[CAMElapsedTimeView _timeLabel]
  -[CAMElapsedTimeView _beginRecordingAnimation]
  -[CAMElapsedTimeView _endRecordingAnimation]
  -[CAMElapsedTimeView endTimer]
  -[CAMElapsedTimeView initWithLayoutStyle:]
  -[CAMElapsedTimeView _setStartTime:]
  -[CAMElapsedTimeView initWithBadgeAppearance]
  -[CAMElapsedTimeView _backgroundRedColor]
  -[CAMElapsedTimeView _updateBackgroundViewAnimated:]
  -[CAMElapsedTimeView _commonCAMElapsedTimeViewInitializationWithLayoutStyle:usingBadgeAppearance:]
  -[CAMElapsedTimeView usingBadgeAppearance]
  -[CAMElapsedTimeView _recordingImageView]
  -[CAMElapsedTimeView _updateForTimer:]
  -[CAMElapsedTimeView setShowingBackground:animated:]
  -[CAMElapsedTimeView isShowingBackground]
  -[CAMElapsedTimeView setShowingBackground:]


CAMVideoRecordFaceMetadataCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMVideoRecordFaceMetadataCommand copyWithZone:]
  -[CAMVideoRecordFaceMetadataCommand encodeWithCoder:]
  -[CAMVideoRecordFaceMetadataCommand initWithCoder:]
  -[CAMVideoRecordFaceMetadataCommand _isEnabled]
  -[CAMVideoRecordFaceMetadataCommand executeWithContext:]
  -[CAMVideoRecordFaceMetadataCommand initWithEnabled:]
  -[CAMVideoRecordFaceMetadataCommand _connectionForMovieFileOutput:metadataPortType:]
  -[CAMVideoRecordFaceMetadataCommand _addMetadataConnectionForPortType:videoDeviceInput:movieFileOutput:captureSession:]


CAMViewfinderOpenAndCloseTransition : NSObject /usr/lib/libSystem.B.dylib
 @property  <CAMViewfinderTransitionable> *_transitionableViewfinder
 @property  CAMSnapshotView *_snapshotView
 @property  BOOL didEnterBackground

  // instance methods
  -[CAMViewfinderOpenAndCloseTransition .cxx_destruct]
  -[CAMViewfinderOpenAndCloseTransition didEnterBackground]
  -[CAMViewfinderOpenAndCloseTransition _snapshotView]
  -[CAMViewfinderOpenAndCloseTransition _setSnapshotView:]
  -[CAMViewfinderOpenAndCloseTransition _transitionableViewfinder]
  -[CAMViewfinderOpenAndCloseTransition initWithTransitionableViewfinder:]
  -[CAMViewfinderOpenAndCloseTransition closeAnimated:withCompletionHandler:]
  -[CAMViewfinderOpenAndCloseTransition closeWithoutBlurring]
  -[CAMViewfinderOpenAndCloseTransition openAnimated:withCompletionHandler:]
  -[CAMViewfinderOpenAndCloseTransition setDidEnterBackground:]
  -[CAMViewfinderOpenAndCloseTransition _existingSnapshotViewCreateIfNecessary:removedOnCompletion:]
  -[CAMViewfinderOpenAndCloseTransition _closeViewfinder:animated:withCompletionHandler:]


CAMRealtimeMetadataCommand : CAMCaptureCommand
 @property  NSArray *_desiredTypes

  // instance methods
  -[CAMRealtimeMetadataCommand copyWithZone:]
  -[CAMRealtimeMetadataCommand encodeWithCoder:]
  -[CAMRealtimeMetadataCommand initWithCoder:]
  -[CAMRealtimeMetadataCommand .cxx_destruct]
  -[CAMRealtimeMetadataCommand executeWithContext:]
  -[CAMRealtimeMetadataCommand initWithTypes:]
  -[CAMRealtimeMetadataCommand _desiredTypes]
  -[CAMRealtimeMetadataCommand _metadataObjectTypesForRealtimeMetadataTypes:withAvailableMetadataTypes:]
  -[CAMRealtimeMetadataCommand _metadataObjectTypeForRealtimeMetadataType:]


CAMTimerButton : CAMExpandableMenuButton <CAMAccessibilityHUDImageProvider>
 @property  UIImageView *_glyphView
 @property  <CAMTimerButtonDelegate> *delegate
 @property  long long duration
 @property  BOOL hideOffWhenCollapsed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMTimerButton delegate]
  -[CAMTimerButton setDelegate:]
  -[CAMTimerButton .cxx_destruct]
  -[CAMTimerButton duration]
  -[CAMTimerButton setDuration:]
  -[CAMTimerButton initWithFrame:]
  -[CAMTimerButton reloadData]
  -[CAMTimerButton headerView]
  -[CAMTimerButton _glyphView]
  -[CAMTimerButton initWithLayoutStyle:]
  -[CAMTimerButton numberOfMenuItems]
  -[CAMTimerButton titleForMenuItemAtIndex:]
  -[CAMTimerButton imageForAccessibilityHUD]
  -[CAMTimerButton setHideOffWhenCollapsed:needsReloadData:]
  -[CAMTimerButton _currentGlyphImageForAccessibiliyHUD:]
  -[CAMTimerButton _commonCAMTimerButtonInitialization]
  -[CAMTimerButton setDuration:animated:]
  -[CAMTimerButton _updateCurrentGlyphImage]
  -[CAMTimerButton hideOffWhenCollapsed]
  -[CAMTimerButton setHideOffWhenCollapsed:]
  -[CAMTimerButton padHeaderViewContentInsetLeft]
  -[CAMTimerButton shownIndexesWhileCollapsed]


CAMColorSpaceCommand : CAMCaptureCommand
 @property  long long _colorSpace

  // instance methods
  -[CAMColorSpaceCommand copyWithZone:]
  -[CAMColorSpaceCommand encodeWithCoder:]
  -[CAMColorSpaceCommand initWithCoder:]
  -[CAMColorSpaceCommand _colorSpace]
  -[CAMColorSpaceCommand executeWithContext:]
  -[CAMColorSpaceCommand initWithColorSpace:]


CAMSpring : NSObject /usr/lib/libSystem.B.dylib
 @property  double _lastTimestamp
 @property  BOOL converged
 @property  double _current
 @property  double _lowerBound
 @property  double _upperBound
 @property  double tension
 @property  double friction
 @property  double target
 @property  double velocity
 @property  double value
 @property  double unboundedValue
 @property  double epsilon
 @property  double maximumTimeDelta

  // instance methods
  -[CAMSpring setTarget:]
  -[CAMSpring target]
  -[CAMSpring value]
  -[CAMSpring epsilon]
  -[CAMSpring velocity]
  -[CAMSpring setVelocity:]
  -[CAMSpring friction]
  -[CAMSpring setFriction:]
  -[CAMSpring _current]
  -[CAMSpring _lastTimestamp]
  -[CAMSpring tension]
  -[CAMSpring setTension:]
  -[CAMSpring _lowerBound]
  -[CAMSpring _upperBound]
  -[CAMSpring resetToValue:]
  -[CAMSpring initWithTension:friction:epsilon:boundedBetween:and:]
  -[CAMSpring _updateConverged]
  -[CAMSpring _setConverged:]
  -[CAMSpring _setLastTimestamp:]
  -[CAMSpring _currentForce]
  -[CAMSpring _updateWithForce:timestamp:]
  -[CAMSpring isConverged]
  -[CAMSpring _setCurrent:]
  -[CAMSpring maximumTimeDelta]
  -[CAMSpring initWithTension:friction:epsilon:]
  -[CAMSpring unboundedValue]
  -[CAMSpring updateForTimestamp:]
  -[CAMSpring converge]
  -[CAMSpring setMaximumTimeDelta:]


CAMCompositeSpring : CAMSpring
 @property  NSArray *addedSprings

  // instance methods
  -[CAMCompositeSpring .cxx_destruct]
  -[CAMCompositeSpring updateForTimestamp:]
  -[CAMCompositeSpring addedSprings]
  -[CAMCompositeSpring setAddedSprings:]


CAMTrackingSpring : CAMSpring
 @property  CAMSpring *_settleProgressSpring
 @property  {?=dd} _secondaryTarget
 @property  double _convergenceStartValue
 @property  double convergenceProgress
 @property  BOOL hasSecondaryTarget

  // instance methods
  -[CAMTrackingSpring .cxx_destruct]
  -[CAMTrackingSpring resetToValue:]
  -[CAMTrackingSpring isConverged]
  -[CAMTrackingSpring initWithTension:friction:epsilon:]
  -[CAMTrackingSpring updateForTimestamp:]
  -[CAMTrackingSpring _settleProgressSpring]
  -[CAMTrackingSpring _setSettlingSpring:]
  -[CAMTrackingSpring _convergenceStartValue:]
  -[CAMTrackingSpring _beginConverging]
  -[CAMTrackingSpring _secondaryTarget]
  -[CAMTrackingSpring _setSecondaryTarget:]
  -[CAMTrackingSpring setSecondaryTarget:withStrength:animated:]
  -[CAMTrackingSpring resetToValue:animated:]
  -[CAMTrackingSpring removeSecondaryTargetAnimated:]
  -[CAMTrackingSpring hasSecondaryTarget]
  -[CAMTrackingSpring convergenceProgress]
  -[CAMTrackingSpring _convergenceStartValue]
  -[CAMTrackingSpring setTarget:animated:]


CAMImageControlModeCommand : CAMCaptureCommand
 @property  long long _captureMode

  // instance methods
  -[CAMImageControlModeCommand copyWithZone:]
  -[CAMImageControlModeCommand encodeWithCoder:]
  -[CAMImageControlModeCommand initWithCoder:]
  -[CAMImageControlModeCommand _captureMode]
  -[CAMImageControlModeCommand executeWithContext:]
  -[CAMImageControlModeCommand initWithCaptureMode:]


CAMLowLightInstructionLabel : CAMInstructionLabel
  // instance methods
  -[CAMLowLightInstructionLabel initWithFrame:]


CAMFullscreenModeSelector : UIView /System/Library/Frameworks/Foundation.framework/Foundation <UIGestureRecognizerDelegate>
 @property  NSArray *_modes
 @property  NSDictionary *_titleViewsByMode
 @property  UIView *_titleContainer
 @property  long long _state
 @property  double _touchBeganTime
 @property  {CGPoint=dd} _touchBeganPosition
 @property  long long _highlightedIndex
 @property  double _titleIndexOffset
 @property  <CAMFullscreenModeSelectorDataSource> *dataSource
 @property  <CAMFullscreenModeSelectorDelegate> *delegate
 @property  long long selectedMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMFullscreenModeSelector init]
  -[CAMFullscreenModeSelector delegate]
  -[CAMFullscreenModeSelector setDelegate:]
  -[CAMFullscreenModeSelector .cxx_destruct]
  -[CAMFullscreenModeSelector _state]
  -[CAMFullscreenModeSelector dataSource]
  -[CAMFullscreenModeSelector setDataSource:]
  -[CAMFullscreenModeSelector _setState:]
  -[CAMFullscreenModeSelector layoutSubviews]
  -[CAMFullscreenModeSelector reloadData]
  -[CAMFullscreenModeSelector _titleContainer]
  -[CAMFullscreenModeSelector _updateAlpha]
  -[CAMFullscreenModeSelector _setItems:]
  -[CAMFullscreenModeSelector _highlightedIndex]
  -[CAMFullscreenModeSelector _modes]
  -[CAMFullscreenModeSelector _updateTitles]
  -[CAMFullscreenModeSelector handlePress:]
  -[CAMFullscreenModeSelector setSelectedMode:]
  -[CAMFullscreenModeSelector selectedMode]
  -[CAMFullscreenModeSelector _titleViewsByMode]
  -[CAMFullscreenModeSelector _setModes:]
  -[CAMFullscreenModeSelector _modeTitleForLegacyTitle:]
  -[CAMFullscreenModeSelector _setHighlightedIndex:]
  -[CAMFullscreenModeSelector _setSelectedMode:shouldNotify:]
  -[CAMFullscreenModeSelector _titleIndexOffset]
  -[CAMFullscreenModeSelector _touchSequenceBeganAtPoint:]
  -[CAMFullscreenModeSelector _touchSequenceChangedToPoint:]
  -[CAMFullscreenModeSelector _touchSequenceEndedAtPoint:]
  -[CAMFullscreenModeSelector _setTouchBeganTime:]
  -[CAMFullscreenModeSelector _setTouchBeganPosition:]
  -[CAMFullscreenModeSelector _titleIndexForY:]
  -[CAMFullscreenModeSelector _touchBeganTime]
  -[CAMFullscreenModeSelector _touchBeganPosition]
  -[CAMFullscreenModeSelector _selectModeAtIndex:]
  -[CAMFullscreenModeSelector _titleYForIndex:]
  -[CAMFullscreenModeSelector enterTappableState]


CAMLegibilityViewHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMLegibilityViewHelper _imageFromLabel:sizeToFit:]
  +[CAMLegibilityViewHelper newLegibilityViewWithSettings:forLabel:sizeToFit:]
  +[CAMLegibilityViewHelper imageForText:font:textAlignment:constrainedToSize:]


CAMNebulaUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMNebulaUtilities locationFromJPEGAtPath:]


CAMControlStatusIndicator : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDItemProvider>
 @property  UIImageView *_imageView
 @property  UIImageView *_outlineView
 @property  UILabel *_valueLabel
 @property  {CGSize=dd} _valueLabelSize
 @property  BOOL _needsUpdateValueText
 @property  <CAMControlStatusIndicatorDelegate> *delegate
 @property  long long orientation
 @property  BOOL canShowValue
 @property  BOOL showingValue
 @property  BOOL canAnimate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMControlStatusIndicator decimalFormatter]
  +[CAMControlStatusIndicator integerFormatter]
  +[CAMControlStatusIndicator _createStretchableCircleImageFilled:]
  +[CAMControlStatusIndicator _outlineImage]
  +[CAMControlStatusIndicator _filledOutlineImage]

  // instance methods
  -[CAMControlStatusIndicator delegate]
  -[CAMControlStatusIndicator setDelegate:]
  -[CAMControlStatusIndicator .cxx_destruct]
  -[CAMControlStatusIndicator orientation]
  -[CAMControlStatusIndicator setOrientation:]
  -[CAMControlStatusIndicator intrinsicContentSize]
  -[CAMControlStatusIndicator initWithFrame:]
  -[CAMControlStatusIndicator layoutSubviews]
  -[CAMControlStatusIndicator _imageView]
  -[CAMControlStatusIndicator setOrientation:animated:]
  -[CAMControlStatusIndicator startAnimating]
  -[CAMControlStatusIndicator stopAnimating]
  -[CAMControlStatusIndicator updateImage]
  -[CAMControlStatusIndicator _valueLabel]
  -[CAMControlStatusIndicator _outlineView]
  -[CAMControlStatusIndicator valueText]
  -[CAMControlStatusIndicator canAnimate]
  -[CAMControlStatusIndicator hudItemForAccessibilityHUDManager:]
  -[CAMControlStatusIndicator selectedByAccessibilityHUDManager:]
  -[CAMControlStatusIndicator shouldUseOutline]
  -[CAMControlStatusIndicator imageNameForCurrentState]
  -[CAMControlStatusIndicator setNeedsUpdateValueText]
  -[CAMControlStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMControlStatusIndicator shouldShowOutlineForCurrentState]
  -[CAMControlStatusIndicator shouldFillOutlineForCurrentState]
  -[CAMControlStatusIndicator canShowValue]
  -[CAMControlStatusIndicator setShowingValue:]
  -[CAMControlStatusIndicator setShowingValue:animated:]
  -[CAMControlStatusIndicator _updateValueLabelVisibilityAnimated:]
  -[CAMControlStatusIndicator _setNeedsUpdateValueText:]
  -[CAMControlStatusIndicator isShowingValue]
  -[CAMControlStatusIndicator _additionalWidthForValue]
  -[CAMControlStatusIndicator _valueLabelSize]
  -[CAMControlStatusIndicator imageForCurrentState]
  -[CAMControlStatusIndicator _updateValueText]
  -[CAMControlStatusIndicator _setValueLabelSize:]
  -[CAMControlStatusIndicator imageAnimationFramesForCurrentState]
  -[CAMControlStatusIndicator _updateImageOrientationAnimated:]
  -[CAMControlStatusIndicator _needsUpdateValueText]


CAMVideoCaptureRequest : CAMCaptureRequest <NSCopying, NSMutableCopying>
 @property  BOOL timelapse
 @property  BOOL shouldGenerateVideoPreviewImage
 @property  double maximumRecordedDuration
 @property  long long maximumRecordedFileSize
 @property  long long remainingDiskUsageThreshold
 @property  <CAMVideoCaptureRequestDelegate> *delegate
 @property  long long captureVideoConfiguration
 @property  long long torchMode
 @property  double userInitationTimestamp

  // instance methods
  -[CAMVideoCaptureRequest init]
  -[CAMVideoCaptureRequest copyWithZone:]
  -[CAMVideoCaptureRequest mutableCopyWithZone:]
  -[CAMVideoCaptureRequest delegate]
  -[CAMVideoCaptureRequest .cxx_destruct]
  -[CAMVideoCaptureRequest torchMode]
  -[CAMVideoCaptureRequest isTimelapse]
  -[CAMVideoCaptureRequest captureVideoConfiguration]
  -[CAMVideoCaptureRequest initWithRequest:distinctPersistence:]
  -[CAMVideoCaptureRequest maximumRecordedDuration]
  -[CAMVideoCaptureRequest maximumRecordedFileSize]
  -[CAMVideoCaptureRequest remainingDiskUsageThreshold]
  -[CAMVideoCaptureRequest shouldGenerateVideoPreviewImage]
  -[CAMVideoCaptureRequest userInitationTimestamp]


CAMMutableVideoCaptureRequest : CAMVideoCaptureRequest <CAMMutableCaptureRequestPersistence, CAMMutableCaptureRequestLocation, CAMMutableCaptureRequestPower, CAMMutableCaptureRequestOrigin, CAMMutableCaptureRequestEncodingBehavior>
 @property  BOOL timelapse
 @property  BOOL shouldGenerateVideoPreviewImage
 @property  double maximumRecordedDuration
 @property  long long maximumRecordedFileSize
 @property  long long remainingDiskUsageThreshold
 @property  <CAMVideoCaptureRequestDelegate> *delegate
 @property  long long captureOrientation
 @property  long long captureDevice
 @property  long long captureMode
 @property  long long captureVideoConfiguration
 @property  long long pressType
 @property  long long torchMode
 @property  unsigned short sessionIdentifier
 @property  double userInitationTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long persistenceOptions
 @property  unsigned long deferredPersistenceOptions
 @property  long long temporaryPersistenceOptions
 @property  NSURL *localDestinationURL
 @property  NSString *persistenceUUID
 @property  BOOL shouldExtractDiagnosticsFromMetadata
 @property  BOOL shouldPersistDiagnosticsToSidecar
 @property  BOOL shouldDelayRemotePersistence
 @property  CLLocation *location
 @property  CLHeading *heading
 @property  unsigned int assertionIdentifier
 @property  long long origin
 @property  long long videoEncodingBehavior
 @property  long long photoEncodingBehavior

  // instance methods
  -[CAMMutableVideoCaptureRequest copyWithZone:]
  -[CAMMutableVideoCaptureRequest mutableCopyWithZone:]
  -[CAMMutableVideoCaptureRequest setDelegate:]
  -[CAMMutableVideoCaptureRequest setHeading:]
  -[CAMMutableVideoCaptureRequest setLocation:]
  -[CAMMutableVideoCaptureRequest setOrigin:]
  -[CAMMutableVideoCaptureRequest setSessionIdentifier:]
  -[CAMMutableVideoCaptureRequest setTorchMode:]
  -[CAMMutableVideoCaptureRequest setCaptureDevice:]
  -[CAMMutableVideoCaptureRequest setCaptureMode:]
  -[CAMMutableVideoCaptureRequest setVideoEncodingBehavior:]
  -[CAMMutableVideoCaptureRequest setPersistenceOptions:]
  -[CAMMutableVideoCaptureRequest setTemporaryPersistenceOptions:]
  -[CAMMutableVideoCaptureRequest setCaptureOrientation:]
  -[CAMMutableVideoCaptureRequest setPressType:]
  -[CAMMutableVideoCaptureRequest setPersistenceUUID:]
  -[CAMMutableVideoCaptureRequest setShouldDelayRemotePersistence:]
  -[CAMMutableVideoCaptureRequest setCaptureVideoConfiguration:]
  -[CAMMutableVideoCaptureRequest setUserInitationTimestamp:]
  -[CAMMutableVideoCaptureRequest setMaximumRecordedDuration:]
  -[CAMMutableVideoCaptureRequest setDeferredPersistenceOptions:]
  -[CAMMutableVideoCaptureRequest setLocalDestinationURL:]
  -[CAMMutableVideoCaptureRequest setShouldExtractDiagnosticsFromMetadata:]
  -[CAMMutableVideoCaptureRequest setShouldPersistDiagnosticsToSidecar:]
  -[CAMMutableVideoCaptureRequest setAssertionIdentifier:]
  -[CAMMutableVideoCaptureRequest setMaximumRecordedFileSize:]
  -[CAMMutableVideoCaptureRequest setRemainingDiskUsageThreshold:]
  -[CAMMutableVideoCaptureRequest setShouldGenerateVideoPreviewImage:]
  -[CAMMutableVideoCaptureRequest setTimelapse:]


CAMPerformanceTestHarness : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *testName
 @property  @? completionHandler
 @property  BOOL runningTest

  // instance methods
  -[CAMPerformanceTestHarness .cxx_destruct]
  -[CAMPerformanceTestHarness completionHandler]
  -[CAMPerformanceTestHarness setCompletionHandler:]
  -[CAMPerformanceTestHarness isRunningTest]
  -[CAMPerformanceTestHarness testName]
  -[CAMPerformanceTestHarness startTesting]
  -[CAMPerformanceTestHarness stopTesting]
  -[CAMPerformanceTestHarness startSubtestWithName:]
  -[CAMPerformanceTestHarness stopSubtestWithName:]
  -[CAMPerformanceTestHarness initWithTestName:]
  -[CAMPerformanceTestHarness failedTestwithReason:]


CAMLivePhotoAnimationCache : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL _empty
 @property  NSDictionary *_animationFramesByColor
 @property  BOOL automaticModeAllowed

  // instance methods
  -[CAMLivePhotoAnimationCache .cxx_destruct]
  -[CAMLivePhotoAnimationCache _isEmpty]
  -[CAMLivePhotoAnimationCache _colors]
  -[CAMLivePhotoAnimationCache initWithAutomaticModeAllowed:]
  -[CAMLivePhotoAnimationCache preloadFramesIfNeeded]
  -[CAMLivePhotoAnimationCache framesForLivePhotoMode:]
  -[CAMLivePhotoAnimationCache _actuallyLoadEnablingAnimationImagesForColors:scale:]
  -[CAMLivePhotoAnimationCache _setAnimationFramesByColor:]
  -[CAMLivePhotoAnimationCache _tintColorForMode:]
  -[CAMLivePhotoAnimationCache _animationFramesByColor]
  -[CAMLivePhotoAnimationCache automaticModeAllowed]


CAMVideoFramerateCommand : CAMCaptureCommand
 @property  long long _videoConfiguration

  // instance methods
  -[CAMVideoFramerateCommand copyWithZone:]
  -[CAMVideoFramerateCommand encodeWithCoder:]
  -[CAMVideoFramerateCommand initWithCoder:]
  -[CAMVideoFramerateCommand executeWithContext:]
  -[CAMVideoFramerateCommand _videoConfiguration]
  -[CAMVideoFramerateCommand initWithVideoConfiguration:]


CAMMessagesPhotosButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDImageProvider>
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMMessagesPhotosButton photosButton]

  // instance methods
  -[CAMMessagesPhotosButton orientation]
  -[CAMMessagesPhotosButton setOrientation:]
  -[CAMMessagesPhotosButton layoutSubviews]
  -[CAMMessagesPhotosButton alignmentRectInsets]
  -[CAMMessagesPhotosButton setOrientation:animated:]
  -[CAMMessagesPhotosButton tappableEdgeInsets]
  -[CAMMessagesPhotosButton setTappableEdgeInsets:]
  -[CAMMessagesPhotosButton imageForAccessibilityHUD]


CAMAutoLowLightVideoCommand : CAMCaptureCommand
 @property  BOOL autoLowLightVideoEnabled

  // instance methods
  -[CAMAutoLowLightVideoCommand copyWithZone:]
  -[CAMAutoLowLightVideoCommand encodeWithCoder:]
  -[CAMAutoLowLightVideoCommand initWithCoder:]
  -[CAMAutoLowLightVideoCommand executeWithContext:]
  -[CAMAutoLowLightVideoCommand isAutoLowLightVideoEnabled]
  -[CAMAutoLowLightVideoCommand initWithAutoLowLightVideoEnabled:]


CAMEffectsPreviewVideoDataOutputEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand copyWithZone:]
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand encodeWithCoder:]
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand initWithCoder:]
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand _isEnabled]
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand executeWithContext:]
  -[CAMEffectsPreviewVideoDataOutputEnabledCommand initWithVideoDataOutputEnabled:]


CAMApertureStatusIndicator : CAMControlStatusIndicator
 @property  double apertureValue
 @property  BOOL on

  // instance methods
  -[CAMApertureStatusIndicator setOn:]
  -[CAMApertureStatusIndicator isOn]
  -[CAMApertureStatusIndicator valueText]
  -[CAMApertureStatusIndicator apertureValue]
  -[CAMApertureStatusIndicator setApertureValue:]
  -[CAMApertureStatusIndicator imageNameForCurrentState]
  -[CAMApertureStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMApertureStatusIndicator canShowValue]


CAMButtonLabel : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_label
 @property  NSString *text
 @property  UIColor *textColor
 @property  long long textAlignment
 @property  BOOL wantsLegibilityShadow
 @property  {CGSize=dd} contentSize

  // instance methods
  -[CAMButtonLabel .cxx_destruct]
  -[CAMButtonLabel contentSize]
  -[CAMButtonLabel text]
  -[CAMButtonLabel setText:]
  -[CAMButtonLabel _label]
  -[CAMButtonLabel intrinsicContentSize]
  -[CAMButtonLabel initWithFrame:]
  -[CAMButtonLabel setTextColor:]
  -[CAMButtonLabel setTextAlignment:]
  -[CAMButtonLabel sizeThatFits:]
  -[CAMButtonLabel textColor]
  -[CAMButtonLabel textAlignment]
  -[CAMButtonLabel setHighlightedTextColor:]
  -[CAMButtonLabel highlightedTextColor]
  -[CAMButtonLabel updateToContentSize:]
  -[CAMButtonLabel wantsLegibilityShadow]
  -[CAMButtonLabel _updateAttributedText]
  -[CAMButtonLabel _updateInternalContentSize]
  -[CAMButtonLabel setWantsLegibilityShadow:]


CAMPreviewDepthDataDeliveryEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMPreviewDepthDataDeliveryEnabledCommand copyWithZone:]
  -[CAMPreviewDepthDataDeliveryEnabledCommand encodeWithCoder:]
  -[CAMPreviewDepthDataDeliveryEnabledCommand initWithCoder:]
  -[CAMPreviewDepthDataDeliveryEnabledCommand _isEnabled]
  -[CAMPreviewDepthDataDeliveryEnabledCommand executeWithContext:]
  -[CAMPreviewDepthDataDeliveryEnabledCommand initWithSubcommands:]
  -[CAMPreviewDepthDataDeliveryEnabledCommand initWithDepthDataDeliveryEnabled:]


CAMLivePhotoBadge : CEKBadgeTextView /System/Library/Frameworks/Metal.framework/Metal
 @property  long long irisMode

  // instance methods
  -[CAMLivePhotoBadge initWithFrame:]
  -[CAMLivePhotoBadge setIrisMode:]
  -[CAMLivePhotoBadge irisMode]
  -[CAMLivePhotoBadge _updateTextAndColors]


CAMFilterStatusIndicator : CAMControlStatusIndicator
 @property  BOOL on

  // instance methods
  -[CAMFilterStatusIndicator setOn:]
  -[CAMFilterStatusIndicator isOn]
  -[CAMFilterStatusIndicator shouldUseOutline]
  -[CAMFilterStatusIndicator imageForCurrentState]


CAMVideoLocalPersistenceResult : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSURL *localDestinationURL
 @property  NSURL *filteredLocalDestinationURL
 @property  NSURL *linkedDestinationURL
 @property  NSURL *filteredLinkedDestinationURL
 @property  NSString *filteredVideoPreviewPath
 @property  NSString *localPersistenceUUID
 @property  {?=qiIq} duration
 @property  {?=ii} dimensions
 @property  NSString *stillPersistenceUUID
 @property  {?=qiIq} stillDisplayTime
 @property  NSDate *creationDate
 @property  NSData *adjustmentsData
 @property  CAMCaptureCoordinationInfo *coordinationInfo
 @property  NSError *error

  // class methods
  +[CAMVideoLocalPersistenceResult supportsSecureCoding]

  // instance methods
  -[CAMVideoLocalPersistenceResult encodeWithCoder:]
  -[CAMVideoLocalPersistenceResult initWithCoder:]
  -[CAMVideoLocalPersistenceResult .cxx_destruct]
  -[CAMVideoLocalPersistenceResult error]
  -[CAMVideoLocalPersistenceResult duration]
  -[CAMVideoLocalPersistenceResult creationDate]
  -[CAMVideoLocalPersistenceResult dimensions]
  -[CAMVideoLocalPersistenceResult stillDisplayTime]
  -[CAMVideoLocalPersistenceResult adjustmentsData]
  -[CAMVideoLocalPersistenceResult coordinationInfo]
  -[CAMVideoLocalPersistenceResult localPersistenceUUID]
  -[CAMVideoLocalPersistenceResult stillPersistenceUUID]
  -[CAMVideoLocalPersistenceResult localDestinationURL]
  -[CAMVideoLocalPersistenceResult initWithURL:filteredLocalDestinationURL:linkedURL:filteredLinkedURL:videoThumbnailPath:UUID:duration:dimensions:stillPersistenceUUID:stillDisplayTime:creationDate:adjustmentsData:coordinationInfo:error:]
  -[CAMVideoLocalPersistenceResult filteredLocalDestinationURL]
  -[CAMVideoLocalPersistenceResult linkedDestinationURL]
  -[CAMVideoLocalPersistenceResult filteredLinkedDestinationURL]
  -[CAMVideoLocalPersistenceResult filteredVideoPreviewPath]


CAMModeDial : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDItemProvider>
 @property  UIView *_selectedItemBackgroundView
 @property  NSArray *_modes
 @property  NSDictionary *_items
 @property  UIView *_meshTransformView
 @property  CAGradientLayer *_gradientLayer
 @property  UIView *_itemsContainerView
 @property  long long layoutStyle
 @property  <CAMModeDialDataSource> *dataSource
 @property  long long selectedMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMModeDial wantsVerticalModeDialForLayoutStyle:]

  // instance methods
  -[CAMModeDial initWithCoder:]
  -[CAMModeDial .cxx_destruct]
  -[CAMModeDial dataSource]
  -[CAMModeDial _items]
  -[CAMModeDial setDataSource:]
  -[CAMModeDial initWithFrame:]
  -[CAMModeDial sizeThatFits:]
  -[CAMModeDial layoutSubviews]
  -[CAMModeDial touchesEnded:withEvent:]
  -[CAMModeDial reloadData]
  -[CAMModeDial _selectedItem]
  -[CAMModeDial setLayoutStyle:]
  -[CAMModeDial layoutStyle]
  -[CAMModeDial _setItems:]
  -[CAMModeDial _gradientLayer]
  -[CAMModeDial _modes]
  -[CAMModeDial initWithLayoutStyle:]
  -[CAMModeDial updateToContentSize:]
  -[CAMModeDial hudItemForAccessibilityHUDManager:]
  -[CAMModeDial selectedByAccessibilityHUDManager:]
  -[CAMModeDial _updateForLayoutStyle]
  -[CAMModeDial setSelectedMode:animated:]
  -[CAMModeDial setSelectedMode:]
  -[CAMModeDial selectedMode]
  -[CAMModeDial _setModes:]
  -[CAMModeDial _configureMeshTransformForLayoutStyle:]
  -[CAMModeDial _configureGradientForLayoutStyle:]
  -[CAMModeDial _commonCAMModeDialInitializationWithLayoutStyle:]
  -[CAMModeDial _layoutVerticalModeDial]
  -[CAMModeDial _layoutHorizontalModeDial]
  -[CAMModeDial _updateContainerCenterFromSelectedModeAnimated:]
  -[CAMModeDial _interpolatedHorizontalMeshTransformSize]
  -[CAMModeDial _meshTransformView]
  -[CAMModeDial _itemsContainerView]
  -[CAMModeDial _fontForLayoutStyle:selected:]
  -[CAMModeDial _centeringNudgeForMode:]
  -[CAMModeDial _verticalContainerCenterForMode:]
  -[CAMModeDial _horizontalContainerCenterForMode:]
  -[CAMModeDial _horizontalMeshTransform]
  -[CAMModeDial _meshTransformForLayoutStyle:]
  -[CAMModeDial _nearestCaptureModeForLocation:]
  -[CAMModeDial _updateItemsForLayoutStyle:]
  -[CAMModeDial _updateSelectedItemBackgroundForLayoutStyle:]
  -[CAMModeDial _selectedItemBackgroundView]


CAMCTMVideoCaptureEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMCTMVideoCaptureEnabledCommand copyWithZone:]
  -[CAMCTMVideoCaptureEnabledCommand encodeWithCoder:]
  -[CAMCTMVideoCaptureEnabledCommand initWithCoder:]
  -[CAMCTMVideoCaptureEnabledCommand _isEnabled]
  -[CAMCTMVideoCaptureEnabledCommand executeWithContext:]
  -[CAMCTMVideoCaptureEnabledCommand initWithEnabled:]


CAMDeviceSwitchTestHarness : CAMModeAndDeviceConfigurationTestHarness
 @property  CAMViewfinderViewController *viewfinderViewController
 @property  long long desiredDevicePosition
 @property  long long startingCaptureMode
 @property  BOOL testingAnimation

  // instance methods
  -[CAMDeviceSwitchTestHarness .cxx_destruct]
  -[CAMDeviceSwitchTestHarness startTesting]
  -[CAMDeviceSwitchTestHarness handleDidOpenViewfinderForReason:]
  -[CAMDeviceSwitchTestHarness viewfinderViewController]
  -[CAMDeviceSwitchTestHarness initWithTestName:viewfinderViewController:devicePosition:testingAnimation:startingCaptureMode:]
  -[CAMDeviceSwitchTestHarness ensureCaptureDevicePosition:mode:thenPerform:]
  -[CAMDeviceSwitchTestHarness isTestingAnimation]
  -[CAMDeviceSwitchTestHarness desiredDevicePosition]
  -[CAMDeviceSwitchTestHarness startingCaptureMode]


CAMIrisDiskUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMIrisDiskUtilities hasPendingWork]
  +[CAMIrisDiskUtilities irisVideoDirectoryPathCreateIfNeeded:]
  +[CAMIrisDiskUtilities _substituteForDotInBundleIdentifier]
  +[CAMIrisDiskUtilities _delimiterForFilenames]
  +[CAMIrisDiskUtilities irisVideoDirectoryPath]
  +[CAMIrisDiskUtilities videoPathExtension]
  +[CAMIrisDiskUtilities parseVideoDestinationPath:forStillImagePersistenceUUID:videoPersistenceUUID:captureDevice:captureOrientation:captureTime:persistenceOptions:temporaryPersistenceOptions:bundleIdentifier:filterName:]
  +[CAMIrisDiskUtilities videoDestinationPathForStillImageRequest:captureTime:isEV0ForHDR:bundleIdentifier:]
  +[CAMIrisDiskUtilities isValidVideoDestinationPath:]


CAMCaptureMovieFileOutput : AVCaptureMovieFileOutput /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices <AVCaptureFileOutputRecordingDelegate>
 @property  CAMCaptureEngine *_captureEngine
 @property  NSObject<OS_dispatch_queue> *_userInfoQueue
 @property  NSMutableDictionary *_userInfoBySettingsID
 @property  NSMutableArray *_removeOnCompletionSettingsIDs
 @property  NSDictionary *currentUserInfo
 @property  NSDictionary *userInfoForNextCapture
 @property  <AVCaptureFileOutputRecordingDelegate> *wrappedDelegate
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMCaptureMovieFileOutput userInfo]
  -[CAMCaptureMovieFileOutput .cxx_destruct]
  -[CAMCaptureMovieFileOutput setUserInfo:]
  -[CAMCaptureMovieFileOutput initWithEngine:]
  -[CAMCaptureMovieFileOutput startRecordingToOutputFileURL:recordingDelegate:]
  -[CAMCaptureMovieFileOutput stopRecording]
  -[CAMCaptureMovieFileOutput captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:]
  -[CAMCaptureMovieFileOutput captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:]
  -[CAMCaptureMovieFileOutput handleNotification:payload:]
  -[CAMCaptureMovieFileOutput _captureEngine]
  -[CAMCaptureMovieFileOutput setWrappedDelegate:]
  -[CAMCaptureMovieFileOutput _userInfoQueue]
  -[CAMCaptureMovieFileOutput currentUserInfo]
  -[CAMCaptureMovieFileOutput setCurrentUserInfo:]
  -[CAMCaptureMovieFileOutput setUserInfoForNextCapture:]
  -[CAMCaptureMovieFileOutput userInfoForNextCapture]
  -[CAMCaptureMovieFileOutput _userInfoBySettingsID]
  -[CAMCaptureMovieFileOutput _removeOnCompletionSettingsIDs]
  -[CAMCaptureMovieFileOutput wrappedDelegate]


CAMCaptureRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying, CAMDistinctPersistenceCopying>
 @property  long long videoEncodingBehavior
 @property  long long photoEncodingBehavior
 @property  long long origin
 @property  unsigned int assertionIdentifier
 @property  BOOL capturedFromPhotoBooth
 @property  CLLocation *location
 @property  CLHeading *heading
 @property  long long persistenceOptions
 @property  unsigned long deferredPersistenceOptions
 @property  long long temporaryPersistenceOptions
 @property  NSURL *localDestinationURL
 @property  NSString *persistenceUUID
 @property  BOOL shouldPersistToIncomingDirectory
 @property  BOOL shouldProtectPersistence
 @property  BOOL shouldProtectPersistenceForVideo
 @property  BOOL shouldExtractDiagnosticsFromMetadata
 @property  BOOL shouldPersistDiagnosticsToSidecar
 @property  BOOL shouldDelayRemotePersistence
 @property  long long type
 @property  long long captureOrientation
 @property  long long captureDevice
 @property  long long captureDevicePosition
 @property  long long captureMode
 @property  long long pressType
 @property  unsigned short sessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMCaptureRequest shouldPersistToIncomingDirectoryWithPersistenceOptions:temporaryPersistenceOptions:]

  // instance methods
  -[CAMCaptureRequest init]
  -[CAMCaptureRequest copyWithZone:]
  -[CAMCaptureRequest type]
  -[CAMCaptureRequest .cxx_destruct]
  -[CAMCaptureRequest location]
  -[CAMCaptureRequest initWithType:]
  -[CAMCaptureRequest origin]
  -[CAMCaptureRequest heading]
  -[CAMCaptureRequest sessionIdentifier]
  -[CAMCaptureRequest pressType]
  -[CAMCaptureRequest captureDevice]
  -[CAMCaptureRequest captureDevicePosition]
  -[CAMCaptureRequest photoEncodingBehavior]
  -[CAMCaptureRequest captureOrientation]
  -[CAMCaptureRequest capturedFromPhotoBooth]
  -[CAMCaptureRequest persistenceUUID]
  -[CAMCaptureRequest videoEncodingBehavior]
  -[CAMCaptureRequest persistenceOptions]
  -[CAMCaptureRequest temporaryPersistenceOptions]
  -[CAMCaptureRequest captureMode]
  -[CAMCaptureRequest shouldDelayRemotePersistence]
  -[CAMCaptureRequest initWithRequest:distinctPersistence:]
  -[CAMCaptureRequest localDestinationURL]
  -[CAMCaptureRequest deferredPersistenceOptions]
  -[CAMCaptureRequest shouldExtractDiagnosticsFromMetadata]
  -[CAMCaptureRequest shouldPersistDiagnosticsToSidecar]
  -[CAMCaptureRequest assertionIdentifier]
  -[CAMCaptureRequest shouldProtectPersistence]
  -[CAMCaptureRequest distinctPersistenceCopy]
  -[CAMCaptureRequest shouldPersistToIncomingDirectory]
  -[CAMCaptureRequest shouldProtectPersistenceForVideo]


CUShutterButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAMShutterButtonRingView *_outerView
 @property  UIImageView *_outerImageView
 @property  CAMTimelapseShutterRingView *_timelapseOuterView
 @property  UIView *_innerView
 @property  UIView *_innerViewContrastView
 @property  UIView *_stopModeBackground
 @property  UIView *_spinnerView
 @property  long long layoutStyle
 @property  {CAMShutterButtonSpec=ddddd} spec
 @property  long long mode
 @property  <CAMShutterButtonDelegate> *delegate
 @property  BOOL spinning
 @property  BOOL showDisabled
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  UIColor *contentColor
 @property  UIColor *stopModeBackgroundColor

  // class methods
  +[CUShutterButton shutterButton]
  +[CUShutterButton shutterButtonWithSpec:]
  +[CUShutterButton smallShutterButton]
  +[CUShutterButton shutterButtonWithLayoutStyle:]
  +[CUShutterButton smallShutterButtonWithLayoutStyle:]

  // instance methods
  -[CUShutterButton initWithCoder:]
  -[CUShutterButton delegate]
  -[CUShutterButton setDelegate:]
  -[CUShutterButton .cxx_destruct]
  -[CUShutterButton setMode:]
  -[CUShutterButton mode]
  -[CUShutterButton intrinsicContentSize]
  -[CUShutterButton initWithFrame:]
  -[CUShutterButton sizeThatFits:]
  -[CUShutterButton layoutSubviews]
  -[CUShutterButton setHighlighted:]
  -[CUShutterButton alignmentRectInsets]
  -[CUShutterButton hitTest:withEvent:]
  -[CUShutterButton setLayoutStyle:]
  -[CUShutterButton layoutStyle]
  -[CUShutterButton setContentColor:]
  -[CUShutterButton contentColor]
  -[CUShutterButton _contentColor]
  -[CUShutterButton setSpinning:]
  -[CUShutterButton setSpec:]
  -[CUShutterButton spec]
  -[CUShutterButton _spinnerView]
  -[CUShutterButton setMode:animated:]
  -[CUShutterButton setShowDisabled:]
  -[CUShutterButton isSpinning]
  -[CUShutterButton _outerView]
  -[CUShutterButton _innerView]
  -[CUShutterButton _sizeForMode:]
  -[CUShutterButton _cornerRadiusForMode:]
  -[CUShutterButton _updateOuterAndInnerLayers]
  -[CUShutterButton _performHighlightAnimation]
  -[CUShutterButton _performModeSwitchAnimationFromMode:toMode:animated:]
  -[CUShutterButton _updateSpinningAnimations]
  -[CUShutterButton showDisabled]
  -[CUShutterButton _outerImageView]
  -[CUShutterButton tappableEdgeInsets]
  -[CUShutterButton setTappableEdgeInsets:]
  -[CUShutterButton initWithFrame:layoutStyle:spec:]
  -[CUShutterButton _commonCAMShutterButtonInitializationWithLayoutStyle:spec:]
  -[CUShutterButton _innerViewContrastView]
  -[CUShutterButton _shouldShowBackgroundViewForMode:]
  -[CUShutterButton _stopModeBackground]
  -[CUShutterButton stopModeBackgroundColor]
  -[CUShutterButton _outerImageForMode:layoutStyle:]
  -[CUShutterButton _timelapseRingSpecForLayoutStyle:]
  -[CUShutterButton set_stopModeBackground:]
  -[CUShutterButton _shouldShowContrastBorderForMode:layoutStyle:]
  -[CUShutterButton _innerCircleColorForMode:spinning:]
  -[CUShutterButton _timelapseOuterView]
  -[CUShutterButton _isSpinningSupportedForLayoutStyle:]
  -[CUShutterButton set_spinnerView:]
  -[CUShutterButton setStopModeBackgroundColor:]


CAMShutterButtonContrastBackground : UIView /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMShutterButtonContrastBackground initWithFrame:]
  -[CAMShutterButtonContrastBackground alignmentRectInsets]
  -[CAMShutterButtonContrastBackground drawRect:]
  -[CAMShutterButtonContrastBackground _strokeWidth]


CAMPanoramaProcessor : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL capturingPanorama
 @property  CAMPanoramaCaptureRequest *request
 @property  NSMutableDictionary *_initialMetadataByRequestUUID
 @property  ^{OpaqueFigSampleBufferProcessor=} _processor
 @property  <CAMPanoramaProcessorDelegate> *delegate
 @property  long long photoEncodingBehavior
 @property  {CGSize=dd} previewSize
 @property  long long direction

  // instance methods
  -[CAMPanoramaProcessor dealloc]
  -[CAMPanoramaProcessor invalidate]
  -[CAMPanoramaProcessor delegate]
  -[CAMPanoramaProcessor .cxx_destruct]
  -[CAMPanoramaProcessor direction]
  -[CAMPanoramaProcessor setDirection:]
  -[CAMPanoramaProcessor request]
  -[CAMPanoramaProcessor previewSize]
  -[CAMPanoramaProcessor processSampleBuffer:]
  -[CAMPanoramaProcessor _processor]
  -[CAMPanoramaProcessor _setRequest:]
  -[CAMPanoramaProcessor photoEncodingBehavior]
  -[CAMPanoramaProcessor isCapturingPanorama]
  -[CAMPanoramaProcessor startPanoramaCaptureWithRequest:]
  -[CAMPanoramaProcessor _initialMetadataByRequestUUID]
  -[CAMPanoramaProcessor _setCapturingPanorama:]
  -[CAMPanoramaProcessor initWithDelegate:encodingBehavior:]
  -[CAMPanoramaProcessor stopPanoramaCapture]
  -[CAMPanoramaProcessor processPanoramaCaptureWithRequest:completionHandler:]


CAMPreciseTimer : NSObject /usr/lib/libSystem.B.dylib
 @property  @? _handler
 @property  NSObject<OS_dispatch_source> *_currentTimer
 @property  BOOL fired
 @property  double delay
 @property  double interval

  // instance methods
  -[CAMPreciseTimer init]
  -[CAMPreciseTimer invalidate]
  -[CAMPreciseTimer _handler]
  -[CAMPreciseTimer .cxx_destruct]
  -[CAMPreciseTimer start]
  -[CAMPreciseTimer interval]
  -[CAMPreciseTimer delay]
  -[CAMPreciseTimer _currentTimer]
  -[CAMPreciseTimer fired]
  -[CAMPreciseTimer initWithDelay:interval:handler:]
  -[CAMPreciseTimer _setFired:]
  -[CAMPreciseTimer _setCurrentTimer:]


CAMDisabledPreviewController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *_reasonsForDisablingPreview
 @property  <CAMDisabledPreviewControllerDelegate> *delegate
 @property  BOOL previewDisabled

  // instance methods
  -[CAMDisabledPreviewController init]
  -[CAMDisabledPreviewController delegate]
  -[CAMDisabledPreviewController setDelegate:]
  -[CAMDisabledPreviewController .cxx_destruct]
  -[CAMDisabledPreviewController addDisabledPreviewReason:]
  -[CAMDisabledPreviewController removeDisabledPreviewReason:]
  -[CAMDisabledPreviewController isPreviewDisabled]
  -[CAMDisabledPreviewController _descriptionStringForReason:]
  -[CAMDisabledPreviewController _descriptionForReasons:]
  -[CAMDisabledPreviewController _reasonsForDisablingPreview]


CAMTimelapseState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *timelapseUUID
 @property  unsigned short sessionIdentifier
 @property  long long captureDevice
 @property  int captureOrientation
 @property  NSDate *startTime
 @property  CLLocation *startLocation
 @property  NSDate *lastFrameResponseTime
 @property  NSDate *stopTime
 @property  long long stopReasons
 @property  BOOL allFramesWritten
 @property  double captureTimeInterval
 @property  long long frameIndexStride
 @property  long long nextFrameIndex
 @property  float focusLensPosition
 @property  long long connectionMode
 @property  {CGSize=dd} nominalIntermediateFrameSize
 @property  BOOL preferHEVC

  // class methods
  +[CAMTimelapseState supportsSecureCoding]
  +[CAMTimelapseState maxTimeToWaitForWrittenFrameAfterStop]
  +[CAMTimelapseState stateWithContentsOfFile:]

  // instance methods
  -[CAMTimelapseState init]
  -[CAMTimelapseState isEqual:]
  -[CAMTimelapseState copyWithZone:]
  -[CAMTimelapseState encodeWithCoder:]
  -[CAMTimelapseState initWithCoder:]
  -[CAMTimelapseState .cxx_destruct]
  -[CAMTimelapseState fullDescription]
  -[CAMTimelapseState startTime]
  -[CAMTimelapseState setStartTime:]
  -[CAMTimelapseState startLocation]
  -[CAMTimelapseState sessionIdentifier]
  -[CAMTimelapseState setStartLocation:]
  -[CAMTimelapseState setSessionIdentifier:]
  -[CAMTimelapseState connectionMode]
  -[CAMTimelapseState stopTime]
  -[CAMTimelapseState captureDevice]
  -[CAMTimelapseState setCaptureDevice:]
  -[CAMTimelapseState setStopTime:]
  -[CAMTimelapseState isEqualToState:]
  -[CAMTimelapseState nextFrameIndex]
  -[CAMTimelapseState captureOrientation]
  -[CAMTimelapseState stopReasons]
  -[CAMTimelapseState addStopReasons:stopTime:]
  -[CAMTimelapseState mergeSecondaryState:]
  -[CAMTimelapseState setCaptureOrientation:]
  -[CAMTimelapseState _commonCAMTimelapseStateInitWithCoder:]
  -[CAMTimelapseState timelapseUUID]
  -[CAMTimelapseState setStopReasons:]
  -[CAMTimelapseState canContinueCapture]
  -[CAMTimelapseState allFramesWritten]
  -[CAMTimelapseState setAllFramesWritten:]
  -[CAMTimelapseState incrementFrameIndex]
  -[CAMTimelapseState filePathForNextFrameIndex]
  -[CAMTimelapseState isReadyForWritingMovie]
  -[CAMTimelapseState forceCompleted]
  -[CAMTimelapseState writeToFile:createDirectoryIfNeeded:]
  -[CAMTimelapseState setTimelapseUUID:]
  -[CAMTimelapseState lastFrameResponseTime]
  -[CAMTimelapseState setLastFrameResponseTime:]
  -[CAMTimelapseState captureTimeInterval]
  -[CAMTimelapseState frameIndexStride]
  -[CAMTimelapseState focusLensPosition]
  -[CAMTimelapseState setFocusLensPosition:]
  -[CAMTimelapseState nominalIntermediateFrameSize]
  -[CAMTimelapseState setNominalIntermediateFrameSize:]
  -[CAMTimelapseState preferHEVC]
  -[CAMTimelapseState setPreferHEVC:]


CAMFocusLockWithLensPositionCommand : CAMCaptureCommand
 @property  float _lensPosition
 @property  @? _completionBlock

  // class methods
  +[CAMFocusLockWithLensPositionCommand currentLensPositionSentinel]

  // instance methods
  -[CAMFocusLockWithLensPositionCommand copyWithZone:]
  -[CAMFocusLockWithLensPositionCommand encodeWithCoder:]
  -[CAMFocusLockWithLensPositionCommand initWithCoder:]
  -[CAMFocusLockWithLensPositionCommand .cxx_destruct]
  -[CAMFocusLockWithLensPositionCommand _completionBlock]
  -[CAMFocusLockWithLensPositionCommand _lensPosition]
  -[CAMFocusLockWithLensPositionCommand _setCompletionBlock:]
  -[CAMFocusLockWithLensPositionCommand executeWithContext:]
  -[CAMFocusLockWithLensPositionCommand _setLensPosition:]
  -[CAMFocusLockWithLensPositionCommand initWithLensPosition:completionBlock:]


CAMBarsAccessibilityHUDManager : NSObject /usr/lib/libSystem.B.dylib <UIGestureRecognizerDelegate>
 @property  <CAMBarsAccessibilityHUDManagerDelegate> *delegate
 @property  UIView<CAMBarsAccessibilityHUDManagerGestureProvider><CAMAccessibilityHUDItemProvider> *view
 @property  UILongPressGestureRecognizer *_accessibilityLongPressGestureRecognizer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMBarsAccessibilityHUDManager delegate]
  -[CAMBarsAccessibilityHUDManager setDelegate:]
  -[CAMBarsAccessibilityHUDManager .cxx_destruct]
  -[CAMBarsAccessibilityHUDManager view]
  -[CAMBarsAccessibilityHUDManager setView:]
  -[CAMBarsAccessibilityHUDManager gestureRecognizerShouldBegin:]
  -[CAMBarsAccessibilityHUDManager gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CAMBarsAccessibilityHUDManager _accessibilityLongPressGestureRecognizer]
  -[CAMBarsAccessibilityHUDManager _setAccessibilityLongPressGestureRecognizer:]
  -[CAMBarsAccessibilityHUDManager locationOfAccessibilityGestureInView:]
  -[CAMBarsAccessibilityHUDManager initWithView:delegate:cancelsTouchesInView:]
  -[CAMBarsAccessibilityHUDManager _handleAccessibilityLongPressGesture:]
  -[CAMBarsAccessibilityHUDManager preferredContentSizeChanged]


CAMRemoteShutterController : NSObject /usr/lib/libSystem.B.dylib <CCCameraConnectionDelegate>
 @property  CCCameraConnection *connection
 @property  CAMMotionController *_motionController
 @property  BOOL connected
 @property  BOOL showingPreview
 @property  NSArray *availableCaptureModes
 @property  long long captureMode
 @property  long long captureDevice
 @property  long long flashMode
 @property  long long hdrMode
 @property  long long irisMode
 @property  double zoomAmount
 @property  long long shallowDepthOfFieldStatus
 @property  BOOL capturingVideo
 @property  BOOL capturingTimelapse
 @property  <CAMRemoteShutterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMRemoteShutterController dealloc]
  -[CAMRemoteShutterController delegate]
  -[CAMRemoteShutterController setDelegate:]
  -[CAMRemoteShutterController .cxx_destruct]
  -[CAMRemoteShutterController connection]
  -[CAMRemoteShutterController setConnection:]
  -[CAMRemoteShutterController setZoomAmount:]
  -[CAMRemoteShutterController zoomAmount]
  -[CAMRemoteShutterController hdrMode]
  -[CAMRemoteShutterController setHdrMode:]
  -[CAMRemoteShutterController isConnected]
  -[CAMRemoteShutterController _currentMode]
  -[CAMRemoteShutterController openConnection]
  -[CAMRemoteShutterController closeConnection]
  -[CAMRemoteShutterController flashMode]
  -[CAMRemoteShutterController setFlashMode:]
  -[CAMRemoteShutterController createConnectionIfNecessary]
  -[CAMRemoteShutterController captureDevice]
  -[CAMRemoteShutterController setCaptureDevice:]
  -[CAMRemoteShutterController _enterBackground:]
  -[CAMRemoteShutterController setCaptureMode:]
  -[CAMRemoteShutterController isShowingPreview]
  -[CAMRemoteShutterController _enterForeground:]
  -[CAMRemoteShutterController cameraConnectionEndBurstCapture:]
  -[CAMRemoteShutterController cameraConnectionOrientation:]
  -[CAMRemoteShutterController cameraConnection:setCaptureMode:]
  -[CAMRemoteShutterController cameraConnection:takePhotoWithCountdown:]
  -[CAMRemoteShutterController cameraConnectionBeginBurstCapture:]
  -[CAMRemoteShutterController cameraConnectionStartCapture:]
  -[CAMRemoteShutterController cameraConnectionStopCapture:]
  -[CAMRemoteShutterController cameraConnection:setFocusPoint:]
  -[CAMRemoteShutterController cameraConnectionSupportedCaptureModes:]
  -[CAMRemoteShutterController cameraConnectionCaptureMode:]
  -[CAMRemoteShutterController cameraConnectionToggleCameraDeviceSupport:]
  -[CAMRemoteShutterController cameraConnectionZoomSupport:]
  -[CAMRemoteShutterController cameraConnectionZoomAmount:]
  -[CAMRemoteShutterController cameraConnectionFlashSupport:]
  -[CAMRemoteShutterController cameraConnectionFlashMode:]
  -[CAMRemoteShutterController cameraConnectionHDRSupport:]
  -[CAMRemoteShutterController cameraConnectionHDRMode:]
  -[CAMRemoteShutterController cameraConnectionIrisSupport:]
  -[CAMRemoteShutterController cameraConnectionIrisMode:]
  -[CAMRemoteShutterController cameraConnectionBurstSupport:]
  -[CAMRemoteShutterController cameraConnectionIsShowingLivePreview:]
  -[CAMRemoteShutterController cameraConnectionCancelCountdown:]
  -[CAMRemoteShutterController cameraConnection:setZoomAmount:]
  -[CAMRemoteShutterController cameraConnection:setFlashMode:]
  -[CAMRemoteShutterController cameraConnection:setHDRMode:]
  -[CAMRemoteShutterController cameraConnection:setIrisMode:]
  -[CAMRemoteShutterController cameraConnectionToggleCameraDevice:]
  -[CAMRemoteShutterController burstCaptureWillStart]
  -[CAMRemoteShutterController burstCaptureNumberOfPhotosDidChange:]
  -[CAMRemoteShutterController burstCaptureDidStop]
  -[CAMRemoteShutterController willStartCapturing]
  -[CAMRemoteShutterController didStartCaptureTimer]
  -[CAMRemoteShutterController didStopCapture]
  -[CAMRemoteShutterController countdownCanceled]
  -[CAMRemoteShutterController setShallowDepthOfFieldStatus:]
  -[CAMRemoteShutterController shallowDepthOfFieldStatus]
  -[CAMRemoteShutterController setIrisMode:]
  -[CAMRemoteShutterController irisMode]
  -[CAMRemoteShutterController captureMode]
  -[CAMRemoteShutterController _motionController]
  -[CAMRemoteShutterController setAvailableCaptureModes:]
  -[CAMRemoteShutterController setShowingPreview:]
  -[CAMRemoteShutterController isCapturingVideo]
  -[CAMRemoteShutterController sendThumbnailImage:isVideo:]
  -[CAMRemoteShutterController isCapturingTimelapse]
  -[CAMRemoteShutterController availableCaptureModes]
  -[CAMRemoteShutterController applyCaptureConfiguration:]
  -[CAMRemoteShutterController _captureOrientationDidChange:]
  -[CAMRemoteShutterController _convertMode:]
  -[CAMRemoteShutterController _sendMode]
  -[CAMRemoteShutterController sendThumbnailData:isVideo:]
  -[CAMRemoteShutterController initWithCaptureConfiguration:motionController:]
  -[CAMRemoteShutterController cameraConnectionIsMirrored:]
  -[CAMRemoteShutterController setCapturingVideo:]
  -[CAMRemoteShutterController setCapturingTimelapse:]


CAMShutterIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  NSAttributedString *_indicatorText

  // instance methods
  -[CAMShutterIndicatorView initWithCoder:]
  -[CAMShutterIndicatorView .cxx_destruct]
  -[CAMShutterIndicatorView intrinsicContentSize]
  -[CAMShutterIndicatorView initWithFrame:]
  -[CAMShutterIndicatorView drawRect:]
  -[CAMShutterIndicatorView _commonCAMShutterIndicatorViewInitialization]
  -[CAMShutterIndicatorView _indicatorText]


CAMZoomFactorLabel : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_label
 @property  double zoomFactor
 @property  BOOL showZoomFactorSymbol
 @property  UIColor *textColor
 @property  BOOL useLeadingZero
 @property  NSString *contentSizeCategory

  // instance methods
  -[CAMZoomFactorLabel .cxx_destruct]
  -[CAMZoomFactorLabel _label]
  -[CAMZoomFactorLabel setContentSizeCategory:]
  -[CAMZoomFactorLabel contentSizeCategory]
  -[CAMZoomFactorLabel intrinsicContentSize]
  -[CAMZoomFactorLabel initWithFrame:]
  -[CAMZoomFactorLabel setTextColor:]
  -[CAMZoomFactorLabel layoutSubviews]
  -[CAMZoomFactorLabel textColor]
  -[CAMZoomFactorLabel zoomFactor]
  -[CAMZoomFactorLabel _updateFont]
  -[CAMZoomFactorLabel _updateLabelText]
  -[CAMZoomFactorLabel setZoomFactor:]
  -[CAMZoomFactorLabel _labelInsets]
  -[CAMZoomFactorLabel showZoomFactorSymbol]
  -[CAMZoomFactorLabel useLeadingZero]
  -[CAMZoomFactorLabel setUseLeadingZero:]
  -[CAMZoomFactorLabel setShowZoomFactorSymbol:]


CAMIrisVideoControllerJob : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMStillImageCaptureRequest *request
 @property  CAMVideoCaptureResult *videoCaptureResult

  // instance methods
  -[CAMIrisVideoControllerJob .cxx_destruct]
  -[CAMIrisVideoControllerJob request]
  -[CAMIrisVideoControllerJob initWithRequest:videoCaptureResult:]
  -[CAMIrisVideoControllerJob videoCaptureResult]


CAMIrisVideoController : NSObject /usr/lib/libSystem.B.dylib <CAMNebulaDaemonIrisClientProtocol>
 @property  NSObject<OS_dispatch_queue> *_mutexQueue
 @property  CAMNebulaDaemonProxyManager *_nebulaDaemonProxyManager
 @property  NSMutableArray *_jobsToBeSent
 @property  NSMutableDictionary *_pendingJobs
 @property  <CAMIrisVideoControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMIrisVideoController delegate]
  -[CAMIrisVideoController .cxx_destruct]
  -[CAMIrisVideoController _pendingJobs]
  -[CAMIrisVideoController _mutexQueue]
  -[CAMIrisVideoController stillImageRequestDidCompleteCapture:error:]
  -[CAMIrisVideoController nebulaDaemonDidCompleteLocalVideoPersistenceWithResult:]
  -[CAMIrisVideoController _jobsToBeSent]
  -[CAMIrisVideoController _submitJob:]
  -[CAMIrisVideoController _notifyDelegateOfVideoLocalPersistenceResult:forVideoPersistenceUUID:]
  -[CAMIrisVideoController initWithNebulaDaemonProxyManager:delegate:]
  -[CAMIrisVideoController shouldHandleLivePhotoRenderingForRequest:]
  -[CAMIrisVideoController stillImageRequest:didCompleteVideoCaptureWithResult:]
  -[CAMIrisVideoController isWaitingOnNebuladForRequest:]
  -[CAMIrisVideoController _nebulaDaemonProxyManager]


CAMStartVideoRecordingCommand : CAMCaptureCommand
 @property  CAMVideoCaptureRequest *_request

  // instance methods
  -[CAMStartVideoRecordingCommand copyWithZone:]
  -[CAMStartVideoRecordingCommand encodeWithCoder:]
  -[CAMStartVideoRecordingCommand initWithCoder:]
  -[CAMStartVideoRecordingCommand .cxx_destruct]
  -[CAMStartVideoRecordingCommand _request]
  -[CAMStartVideoRecordingCommand initWithRequest:]
  -[CAMStartVideoRecordingCommand executeWithContext:]
  -[CAMStartVideoRecordingCommand _videoOrientationForCaptureOrientation:]


CAMUpdateFocusAndExposureForStopVideoRecordingCommand : CAMCaptureCommand
  // instance methods
  -[CAMUpdateFocusAndExposureForStopVideoRecordingCommand executeWithContext:]


CAMSystemPressureMitigationCommand : CAMCaptureCommand
  // instance methods
  -[CAMSystemPressureMitigationCommand executeWithContext:]


CAMFlashStatusIndicator : CAMControlStatusIndicator
 @property  long long flashMode
 @property  BOOL flashActive
 @property  BOOL flashUnavailable

  // instance methods
  -[CAMFlashStatusIndicator flashMode]
  -[CAMFlashStatusIndicator setFlashMode:]
  -[CAMFlashStatusIndicator isFlashActive]
  -[CAMFlashStatusIndicator isFlashUnavailable]
  -[CAMFlashStatusIndicator shouldUseOutline]
  -[CAMFlashStatusIndicator imageNameForCurrentState]
  -[CAMFlashStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMFlashStatusIndicator setFlashActive:]
  -[CAMFlashStatusIndicator setFlashUnavailable:]


CAMPersistenceResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *persistenceUUID
 @property  unsigned short sessionIdentifier
 @property  NSURL *persistenceURL
 @property  NSDate *creationDate
 @property  UIImage *scrubberImage
 @property  {CGSize=dd} pixelSize
 @property  CAMCaptureCoordinationInfo *coordinationInfo

  // instance methods
  -[CAMPersistenceResponse .cxx_destruct]
  -[CAMPersistenceResponse creationDate]
  -[CAMPersistenceResponse sessionIdentifier]
  -[CAMPersistenceResponse pixelSize]
  -[CAMPersistenceResponse persistenceURL]
  -[CAMPersistenceResponse persistenceUUID]
  -[CAMPersistenceResponse coordinationInfo]
  -[CAMPersistenceResponse initWithUUID:captureSession:url:creationDate:scrubberImage:pixelSize:coordinationInfo:]
  -[CAMPersistenceResponse scrubberImage]


CAMModeSelectTitleView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_titleLabel
 @property  UIColor *textColor
 @property  NSString *text

  // instance methods
  -[CAMModeSelectTitleView .cxx_destruct]
  -[CAMModeSelectTitleView text]
  -[CAMModeSelectTitleView setText:]
  -[CAMModeSelectTitleView initWithFrame:]
  -[CAMModeSelectTitleView setTextColor:]
  -[CAMModeSelectTitleView layoutSubviews]
  -[CAMModeSelectTitleView _titleLabel]
  -[CAMModeSelectTitleView textColor]


CAMCTMDescriptionOverlayView : CAMDescriptionOverlayView
  // instance methods
  -[CAMCTMDescriptionOverlayView _currentContentSize]
  -[CAMCTMDescriptionOverlayView _additionalSpacingForContentSize:]
  -[CAMCTMDescriptionOverlayView titleTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView acknowledgmentTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView descriptionTitleTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView descriptionTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView infoTitleTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView infoTextUsingNarrowWidth:]
  -[CAMCTMDescriptionOverlayView maxDescriptionTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMCTMDescriptionOverlayView maxInfoTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMCTMDescriptionOverlayView additionalSpacing]


CAMZoomButton : UIControl /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_contentContainerView
 @property  CAMZoomFactorLabel *_zoomFactorLabel
 @property  UIImageView *_zoomSymbolView
 @property  UIImageView *_circleImageView
 @property  UIImageView *_backgroundImageView
 @property  {CGAffineTransform=dddddd} highlightingTransform
 @property  <CAMZoomButtonDelegate> *delegate
 @property  long long contentType
 @property  double zoomFactor
 @property  long long zoomSymbol
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  long long orientation
 @property  BOOL shouldHideBackground
 @property  BOOL overPlatter
 @property  BOOL abbreviateAndEnlargeText
 @property  NSString *contentSizeCategory

  // class methods
  +[CAMZoomButton textForZoomFactor:showZoomFactorSymbol:]
  +[CAMZoomButton fontSizeForContentSize:]
  +[CAMZoomButton textForZoomFactor:showZoomFactorSymbol:useLeadingZero:]
  +[CAMZoomButton _useOutline]
  +[CAMZoomButton circleDiameterForContentSize:]
  +[CAMZoomButton _shouldUseLargeButtonSizeForContentSize:]

  // instance methods
  -[CAMZoomButton initWithCoder:]
  -[CAMZoomButton delegate]
  -[CAMZoomButton setDelegate:]
  -[CAMZoomButton .cxx_destruct]
  -[CAMZoomButton contentType]
  -[CAMZoomButton setContentType:]
  -[CAMZoomButton orientation]
  -[CAMZoomButton setOrientation:]
  -[CAMZoomButton setContentSizeCategory:]
  -[CAMZoomButton contentSizeCategory]
  -[CAMZoomButton intrinsicContentSize]
  -[CAMZoomButton initWithFrame:]
  -[CAMZoomButton layoutSubviews]
  -[CAMZoomButton setHighlighted:]
  -[CAMZoomButton alignmentRectInsets]
  -[CAMZoomButton tintColorDidChange]
  -[CAMZoomButton _backgroundImageView]
  -[CAMZoomButton setOrientation:animated:]
  -[CAMZoomButton zoomFactor]
  -[CAMZoomButton setZoomFactor:]
  -[CAMZoomButton _contentContainerView]
  -[CAMZoomButton _performHighlightAnimation]
  -[CAMZoomButton tappableEdgeInsets]
  -[CAMZoomButton setTappableEdgeInsets:]
  -[CAMZoomButton shouldHideBackground]
  -[CAMZoomButton setContentType:animated:]
  -[CAMZoomButton zoomSymbol]
  -[CAMZoomButton setZoomSymbol:animated:]
  -[CAMZoomButton setShouldHideBackground:animationDuration:]
  -[CAMZoomButton highlightingTransform]
  -[CAMZoomButton _updateBackgroundImageViewAlpha]
  -[CAMZoomButton _updateForContentSize]
  -[CAMZoomButton _updateZoomFactorLabel]
  -[CAMZoomButton _createBackgroundImageForContentSize:]
  -[CAMZoomButton _zoomFactorLabel]
  -[CAMZoomButton _createCircleImageForContentSize:]
  -[CAMZoomButton _circleImageView]
  -[CAMZoomButton _commonCAMZoomButtonInitialization]
  -[CAMZoomButton _createZoomSymbolViewIfNecessary]
  -[CAMZoomButton _zoomSymbolView]
  -[CAMZoomButton _imageForZoomSymbol:]
  -[CAMZoomButton _targetTransformForHighlighted:orientation:]
  -[CAMZoomButton _highlightingTransformForHighlighted:]
  -[CAMZoomButton _setHighlightingTransform:]
  -[CAMZoomButton isOverPlatter]
  -[CAMZoomButton abbreviateAndEnlargeText]
  -[CAMZoomButton _backgroundImageDiameterForContentSize:]
  -[CAMZoomButton _circleLineWidthForContentSize:]
  -[CAMZoomButton setZoomSymbol:]
  -[CAMZoomButton setOverPlatter:]
  -[CAMZoomButton setShouldHideBackground:]
  -[CAMZoomButton setAbbreviateAndEnlargeText:]


CAMPersistenceController : NSObject /usr/lib/libSystem.B.dylib <CAMStillImagePersistenceCoordinatorDelegate, CAMVideoPersistenceCoordinationDelegate, CAMCaptureService>
 @property  NSObject<OS_dispatch_queue> *_localPersistenceQueue
 @property  NSObject<OS_dispatch_queue> *_remotePersistenceQueue
 @property  CAMThumbnailGenerator *_localPersistenceThumbnailGenerator
 @property  CAMThumbnailGenerator *_remotePersistenceThumbnailGenerator
 @property  NSMutableArray *_pendingLocalPersistenceWrappers
 @property  NSMutableArray *_pendingRemotePersistenceWrappers
 @property  CAMLocationController *_locationController
 @property  CAMProtectionController *_protectionController
 @property  CAMPowerController *_powerController
 @property  CAMBurstController *_burstController
 @property  CAMIrisVideoController *_irisVideoController
 @property  NSObject<OS_dispatch_queue> *_resultDelegateIsolationQueue
 @property  BOOL resultDelegateRespondsToDidCompleteAllLocalPersistenceForRequest
 @property  NSObject<OS_dispatch_queue> *_coordinationQueue
 @property  NSMapTable *_coordinationQueueGroupsByIdentifier
 @property  NSMutableDictionary *_coordinationQueue_stillImagePersistenceCoordinators
 @property  NSMutableDictionary *_coordinationQueue_videoPersistenceCoordinators
 @property  <CAMPersistenceResultDelegate> *resultDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMPersistenceController clientVideoMetadataForLocation:withCreationDate:]
  +[CAMPersistenceController clientVideoMetadataForRequest:withCreationDate:isEV0ForHDR:livePhotoIdentifierOverride:]
  +[CAMPersistenceController uniquePathForAssetWithUUID:captureTime:extension:usingIncomingDirectory:]
  +[CAMPersistenceController videoMetadataDateFormatter]
  +[CAMPersistenceController _pathForIncomingDirectory]
  +[CAMPersistenceController delimiterForIncomingAssetFilenames]
  +[CAMPersistenceController uniqueIncomingPathForAssetWithUUID:captureTime:extension:]
  +[CAMPersistenceController spatialOverCapturePathForPath:]

  // instance methods
  -[CAMPersistenceController init]
  -[CAMPersistenceController dealloc]
  -[CAMPersistenceController .cxx_destruct]
  -[CAMPersistenceController _powerController]
  -[CAMPersistenceController stillImageRequestDidCompleteCapture:error:]
  -[CAMPersistenceController _locationController]
  -[CAMPersistenceController stillImagePersistenceCoordinator:requestsTimeoutScheduledForDeferredRemotePersistenceForCoordinationInfo:request:]
  -[CAMPersistenceController stillImagePersistenceCoordinator:requestsRemotePersistenceForLocalPersistenceResult:fullsizeRenderLocalResult:spatialOverCaptureLocalResult:request:powerAssertionReason:]
  -[CAMPersistenceController stillImageRequest:didCompleteVideoCaptureWithResult:]
  -[CAMPersistenceController _mainThread_handleApplicationDidEnterBackground:]
  -[CAMPersistenceController initWithLocationController:burstController:protectionController:powerController:irisVideoController:]
  -[CAMPersistenceController _resultDelegateIsolationQueue]
  -[CAMPersistenceController _handleStillImagePersistenceForRequest:withResult:]
  -[CAMPersistenceController _irisVideoController]
  -[CAMPersistenceController _protectionController]
  -[CAMPersistenceController _handleVideoPersistenceForRequest:withResult:]
  -[CAMPersistenceController resultDelegateRespondsToDidCompleteAllLocalPersistenceForRequest]
  -[CAMPersistenceController _coordinationGroupForIdentifier:]
  -[CAMPersistenceController resultDelegate]
  -[CAMPersistenceController _localPersistenceQueue]
  -[CAMPersistenceController _removeCoordinationGroupForIdentifier:]
  -[CAMPersistenceController _burstController]
  -[CAMPersistenceController _coordinateRemotePersistenceForStillImageLocalResult:coordinationInfo:request:]
  -[CAMPersistenceController _stillImageLocalPowerAssertionReasonForCoordinationInfo:]
  -[CAMPersistenceController _ensureCoordinationGroupForIdentifier:]
  -[CAMPersistenceController _pendingLocalPersistenceWrappers]
  -[CAMPersistenceController _locallyPersistStillImageResult:forRequest:withCompletionHandler:]
  -[CAMPersistenceController _persistStillImageCaptureSurfaceResult:withRequest:]
  -[CAMPersistenceController _notifyDelegateOfCompletedStillImageLocalPersistenceForRequest:withResult:]
  -[CAMPersistenceController _coordinationQueue]
  -[CAMPersistenceController _coordinationQueue_stillImagePersistenceCoordinators]
  -[CAMPersistenceController _dispatchRemotePersistenceForLocalPersistenceResult:fullsizeRenderLocalResult:spatialOverCaptureLocalResult:request:powerAssertionReason:]
  -[CAMPersistenceController _jobDictionaryForStillImageLocalResult:fullsizeRenderLocalResult:spatialOverCaptureLocalResult:fromRequest:]
  -[CAMPersistenceController _pendingRemotePersistenceWrappers]
  -[CAMPersistenceController _remotelyPersistStillImageJob:forRequest:completionHandler:]
  -[CAMPersistenceController _remotePersistenceQueue]
  -[CAMPersistenceController _uniformTypeIdentifierForStillImageRequest:]
  -[CAMPersistenceController _localPersistenceThumbnailGenerator]
  -[CAMPersistenceController _physicallyRotatedJPEGDataFromCapturePhoto:]
  -[CAMPersistenceController _createMetadataForPhysicallyOrientedImage:]
  -[CAMPersistenceController _extensionForUniformTypeIdentifier:]
  -[CAMPersistenceController _writeJPEGToURL:withData:thumbnail:properties:duringBurst:error:]
  -[CAMPersistenceController _writeDataToURL:withData:duringBurst:error:]
  -[CAMPersistenceController _adjustmentsDataForRequest:captureDimensions:portraitMetadata:]
  -[CAMPersistenceController _xmpEncodedDiagnosticDataFromDictionary:]
  -[CAMPersistenceController _affineTransformForRotationDegrees:mirrored:]
  -[CAMPersistenceController _createOpenWriteStreamWithURL:forBurst:]
  -[CAMPersistenceController _remotePersistenceThumbnailGenerator]
  -[CAMPersistenceController _notifyDelegateOfCompletedStillImageRemotePersistenceForRequest:withReply:fromBatchOfSize:error:]
  -[CAMPersistenceController _handleCompletedStillImageJobForRequest:withReply:fromBatchOfSize:completionHandler:error:]
  -[CAMPersistenceController _coordinateRemotePersistenceForVideoLocalResult:coordinationInfo:request:]
  -[CAMPersistenceController _videoLocalPowerAssertionReasonForCoordinationInfo:]
  -[CAMPersistenceController _locallyPersistVideoCaptureResult:forRequest:withCompletionHandler:]
  -[CAMPersistenceController _dispatchRemotePersistenceForLocalVideoPersistenceResult:spatialOverCaptureLocalVideoResult:request:powerAssertionReason:]
  -[CAMPersistenceController _coordinationQueue_videoPersistenceCoordinators]
  -[CAMPersistenceController _persistVideoCaptureResult:withRequest:]
  -[CAMPersistenceController _notifyDelegateOfCompletedVideoLocalPersistenceForRequest:withResult:]
  -[CAMPersistenceController _jobDictionaryForVideoLocalResult:spatialOverCaptureLocalResult:fromRequest:]
  -[CAMPersistenceController _remotelyPersistVideoJob:forRequest:withSendHandler:completionHandler:]
  -[CAMPersistenceController _videoPersistenceUUIDForRequest:withResult:]
  -[CAMPersistenceController _stillPersistenceUUIDForRequest:withVideoResult:]
  -[CAMPersistenceController _spatialOverCaptureIdentifierForVideoURL:]
  -[CAMPersistenceController _notifyDelegateOfCompletedVideoRemotePersistenceForRequest:withReply:error:]
  -[CAMPersistenceController _handleCompletedVideoJobForRequest:withReply:completionHandler:error:]
  -[CAMPersistenceController _coordinationQueueGroupsByIdentifier]
  -[CAMPersistenceController _jobDictionaryForTimelapsePlaceholderResult:]
  -[CAMPersistenceController videoPersistenceCoordinator:requestsRemotePersistenceForLocalPersistenceResult:spatialOverCaptureResult:captureRequest:powerAssertionReason:]
  -[CAMPersistenceController videoPersistenceCoordinator:requestsTimeoutScheduledForDeferredRemotePersistenceForCoordinationInfo:request:]
  -[CAMPersistenceController stillImageRequest:didCompleteStillImageCaptureWithResult:]
  -[CAMPersistenceController videoRequest:didCompleteCaptureWithResult:]
  -[CAMPersistenceController panoramaRequest:didCompleteCaptureWithResult:]
  -[CAMPersistenceController setResultDelegate:]
  -[CAMPersistenceController _videoRemotePowerAssertionReasonForCoordinationInfo:]
  -[CAMPersistenceController performDeferredRemotePersistenceWithCompletionHandler:]
  -[CAMPersistenceController persistBurstWithIdentifier:result:completionHandler:]
  -[CAMPersistenceController persistPlaceholderTimelapseVideoWithResult:completionHandler:]


CAMPortraitModeDescriptionOverlayView : CAMDescriptionOverlayView
  // instance methods
  -[CAMPortraitModeDescriptionOverlayView _currentContentSize]
  -[CAMPortraitModeDescriptionOverlayView _additionalSpacingForContentSize:]
  -[CAMPortraitModeDescriptionOverlayView titleTextUsingNarrowWidth:]
  -[CAMPortraitModeDescriptionOverlayView acknowledgmentTextUsingNarrowWidth:]
  -[CAMPortraitModeDescriptionOverlayView descriptionTextUsingNarrowWidth:]
  -[CAMPortraitModeDescriptionOverlayView infoTextUsingNarrowWidth:]
  -[CAMPortraitModeDescriptionOverlayView maxDescriptionTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMPortraitModeDescriptionOverlayView maxInfoTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMPortraitModeDescriptionOverlayView additionalSpacing]


CAMLevelViewModel : CAMObservable
 @property  long long currentIndicatorMode
 @property  {UIOffset=dd} currentIndicatorOffset
 @property  double currentIndicatorAlpha
 @property  double desiredUpdateInterval
 @property  long long _desiredIndicatorMode
 @property  double _desiredModeBeganTime
 @property  BOOL monitoringDevice

  // instance methods
  -[CAMLevelViewModel mutableChangeObject]
  -[CAMLevelViewModel currentIndicatorAlpha]
  -[CAMLevelViewModel currentIndicatorOffset]
  -[CAMLevelViewModel currentIndicatorMode]
  -[CAMLevelViewModel desiredUpdateInterval]
  -[CAMLevelViewModel applyDeviceMotion:]
  -[CAMLevelViewModel _hysteresisModeForDesiredMode:]
  -[CAMLevelViewModel _updateFlatModeWithRoll:pitch:magnitude:]
  -[CAMLevelViewModel _updateModeNone]
  -[CAMLevelViewModel _setDesiredUpdateInterval:]
  -[CAMLevelViewModel _setCurrentIndicatorMode:]
  -[CAMLevelViewModel _setCurrentIndicatorAlpha:]
  -[CAMLevelViewModel _hysteresisAlphaForDesiredAlpha:fromCurrentAlpha:]
  -[CAMLevelViewModel _setCurrentIndicatorOffset:]
  -[CAMLevelViewModel _desiredIndicatorMode]
  -[CAMLevelViewModel _setDesiredIndicatorMode:]
  -[CAMLevelViewModel _setDesiredModeBeganTime:]
  -[CAMLevelViewModel _desiredModeBeganTime]
  -[CAMLevelViewModel isMonitoringDevice]
  -[CAMLevelViewModel setMonitoringDevice:]


CAMExposureBiasSliderThumb : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  float normalizedExposureValue
 @property  double maxRadius

  // instance methods
  -[CAMExposureBiasSliderThumb initWithFrame:]
  -[CAMExposureBiasSliderThumb sizeThatFits:]
  -[CAMExposureBiasSliderThumb tintColorDidChange]
  -[CAMExposureBiasSliderThumb drawRect:]
  -[CAMExposureBiasSliderThumb maxRadius]
  -[CAMExposureBiasSliderThumb setNormalizedExposureValue:]
  -[CAMExposureBiasSliderThumb _sunRadius]
  -[CAMExposureBiasSliderThumb _sunRaySpacing]
  -[CAMExposureBiasSliderThumb _sunRayLength]
  -[CAMExposureBiasSliderThumb _interpolatedValueWithMin:mid:max:]
  -[CAMExposureBiasSliderThumb normalizedExposureValue]


CAMTimelapseBackendSessionContext : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *timelapseUUID
 @property  CAMTimelapseState *state
 @property  NSArray *filesToDelete
 @property  NSArray *filesToWrite

  // instance methods
  -[CAMTimelapseBackendSessionContext init]
  -[CAMTimelapseBackendSessionContext .cxx_destruct]
  -[CAMTimelapseBackendSessionContext state]
  -[CAMTimelapseBackendSessionContext setState:]
  -[CAMTimelapseBackendSessionContext setFilesToDelete:]
  -[CAMTimelapseBackendSessionContext filesToDelete]
  -[CAMTimelapseBackendSessionContext timelapseUUID]
  -[CAMTimelapseBackendSessionContext initWithTimelapseUUID:]
  -[CAMTimelapseBackendSessionContext filesToWrite]
  -[CAMTimelapseBackendSessionContext setFilesToWrite:]


CAMUserPreferenceOverrides : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *captureMode
 @property  NSNumber *captureDevice
 @property  NSNumber *videoConfiguration
 @property  NSNumber *wantsQRCodes
 @property  NSNumber *flashMode
 @property  NSNumber *torchMode
 @property  NSNumber *aspectRatioCrop
 @property  BOOL hasOverrides

  // instance methods
  -[CAMUserPreferenceOverrides .cxx_destruct]
  -[CAMUserPreferenceOverrides flashMode]
  -[CAMUserPreferenceOverrides setFlashMode:]
  -[CAMUserPreferenceOverrides torchMode]
  -[CAMUserPreferenceOverrides setTorchMode:]
  -[CAMUserPreferenceOverrides captureDevice]
  -[CAMUserPreferenceOverrides setCaptureDevice:]
  -[CAMUserPreferenceOverrides initWithLaunchOptions:]
  -[CAMUserPreferenceOverrides setCaptureMode:]
  -[CAMUserPreferenceOverrides videoConfiguration]
  -[CAMUserPreferenceOverrides hasOverrides]
  -[CAMUserPreferenceOverrides captureMode]
  -[CAMUserPreferenceOverrides wantsQRCodes]
  -[CAMUserPreferenceOverrides aspectRatioCrop]
  -[CAMUserPreferenceOverrides setAspectRatioCrop:]
  -[CAMUserPreferenceOverrides setVideoConfiguration:]
  -[CAMUserPreferenceOverrides initWithOverrides:]
  -[CAMUserPreferenceOverrides setWantsQRCodes:]
  -[CAMUserPreferenceOverrides initWithShortcutItem:]
  -[CAMUserPreferenceOverrides initWithConfigurationURL:]


CAMLevelCrosshair : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  BOOL highlighted

  // class methods
  +[CAMLevelCrosshair _drawCrosshairInContext:withBounds:strokeWidth:color:]

  // instance methods
  -[CAMLevelCrosshair initWithCoder:]
  -[CAMLevelCrosshair initWithFrame:]
  -[CAMLevelCrosshair isHighlighted]
  -[CAMLevelCrosshair setHighlighted:]
  -[CAMLevelCrosshair drawRect:]
  -[CAMLevelCrosshair _commonCAMLevelCrosshairInitialization]


CAMViewfinderView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CEKBadgeViewDelegate, CAMInstructionLabelDelegate, CAMViewfinderTransitionable>
 @property  CAMPreviewContainerMaskingView *_previewContainerMaskingView
 @property  UIView *_previewContainerView
 @property  CAMViewfinderOpenAndCloseTransition *_openAndCloseTransition
 @property  CAMViewfinderFlipTransition *_flipTransition
 @property  UIView *_topBarExtensionView
 @property  UIView *_bottomBarExtensionView
 @property  long long layoutStyle
 @property  BOOL useCreativeControls
 @property  <CAMControlVisibilityDelegate> *visibilityDelegate
 @property  CAMPreviewView *previewView
 @property  CAMTopBar *topBar
 @property  CAMBottomBar *bottomBar
 @property  CUShutterButton *shutterButton
 @property  CAMFlipButton *flipButton
 @property  NSArray *visibleTopBadges
 @property  CAMFlashBadge *flashBadge
 @property  CAMHDRBadge *HDRBadge
 @property  CAMFocusLockBadge *focusAndExposureLockBadge
 @property  CAMLivePhotoBadge *livePhotoBadge
 @property  CAMShallowDepthOfFieldBadge *shallowDepthOfFieldBadge
 @property  CAMPortraitModeInstructionLabel *portraitModeInstructionLabel
 @property  CAMPortraitModeDescriptionOverlayView *portraitModeDescriptionOverlayView
 @property  CAMQRCodeInstructionLabel *qrCodeInstructionLabel
 @property  CAMFilterNameBadge *filterNameBadge
 @property  CAMShutterIndicatorView *shutterIndicatorView
 @property  CAMElapsedTimeView *elapsedTimeView
 @property  CAMFramerateIndicatorView *framerateIndicatorView
 @property  CAMBurstIndicatorView *burstIndicatorView
 @property  CAMTimerIndicatorView *timerIndicatorView
 @property  CAMPanoramaView *panoramaView
 @property  long long previewViewOrientation
 @property  CAMZoomSlider *zoomSlider
 @property  CAMZoomControl *zoomControl
 @property  CEKLightingControl *lightingControl
 @property  CEKLightingNameBadge *lightingNameBadge
 @property  CAMDisabledModeOverlayView *disabledModeOverlayView
 @property  long long desiredAspectRatio
 @property  long long maskingAspectRatio
 @property  long long orientation
 @property  BOOL automaticallyAdjustsTopBarOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMViewfinderView layerClass]

  // instance methods
  -[CAMViewfinderView initWithCoder:]
  -[CAMViewfinderView .cxx_destruct]
  -[CAMViewfinderView orientation]
  -[CAMViewfinderView setOrientation:]
  -[CAMViewfinderView initWithFrame:]
  -[CAMViewfinderView layoutSubviews]
  -[CAMViewfinderView systemLayoutSizeFittingSize:]
  -[CAMViewfinderView hitTest:withEvent:]
  -[CAMViewfinderView setLayoutStyle:]
  -[CAMViewfinderView layoutStyle]
  -[CAMViewfinderView setOrientation:animated:]
  -[CAMViewfinderView previewView]
  -[CAMViewfinderView setPreviewView:]
  -[CAMViewfinderView shutterButton]
  -[CAMViewfinderView setShutterButton:]
  -[CAMViewfinderView initWithLayoutStyle:]
  -[CAMViewfinderView _flipTransition]
  -[CAMViewfinderView setTopBar:]
  -[CAMViewfinderView topBar]
  -[CAMViewfinderView setBottomBar:]
  -[CAMViewfinderView bottomBar]
  -[CAMViewfinderView badgeViewDidChangeIntrinsicContentSize:]
  -[CAMViewfinderView lightingControl]
  -[CAMViewfinderView _previewContainerView]
  -[CAMViewfinderView flipButton]
  -[CAMViewfinderView elapsedTimeView]
  -[CAMViewfinderView lightingNameBadge]
  -[CAMViewfinderView filterNameBadge]
  -[CAMViewfinderView qrCodeInstructionLabel]
  -[CAMViewfinderView panoramaView]
  -[CAMViewfinderView zoomControl]
  -[CAMViewfinderView previewViewOrientation]
  -[CAMViewfinderView removeInflightBlurAnimations]
  -[CAMViewfinderView prepareForResumingUsingCrossfade]
  -[CAMViewfinderView instructionLabelDidChangeIntrinsicContentSize:]
  -[CAMViewfinderView desiredAspectRatio]
  -[CAMViewfinderView setPanoramaView:]
  -[CAMViewfinderView setPreviewViewOrientation:]
  -[CAMViewfinderView _layoutShutterButtonForLayoutStyle:]
  -[CAMViewfinderView _layoutFlipButtonForLayoutStyle:]
  -[CAMViewfinderView setFlipButton:]
  -[CAMViewfinderView _openAndCloseTransition]
  -[CAMViewfinderView _setOpenAndCloseTransition:]
  -[CAMViewfinderView _setFlipTransition:]
  -[CAMViewfinderView setDesiredAspectRatio:]
  -[CAMViewfinderView setMaskingAspectRatio:]
  -[CAMViewfinderView setVisibilityDelegate:]
  -[CAMViewfinderView setUseCreativeControls:]
  -[CAMViewfinderView setMaskingAspectRatio:animated:]
  -[CAMViewfinderView setAutomaticallyAdjustsTopBarOrientation:]
  -[CAMViewfinderView setHDRBadge:]
  -[CAMViewfinderView setElapsedTimeView:]
  -[CAMViewfinderView setFramerateIndicatorView:]
  -[CAMViewfinderView setFlashBadge:]
  -[CAMViewfinderView setFocusAndExposureLockBadge:]
  -[CAMViewfinderView setLivePhotoBadge:]
  -[CAMViewfinderView setShallowDepthOfFieldBadge:]
  -[CAMViewfinderView setPortraitModeInstructionLabel:]
  -[CAMViewfinderView setQrCodeInstructionLabel:]
  -[CAMViewfinderView setPortraitModeDescriptionOverlayView:]
  -[CAMViewfinderView setBurstIndicatorView:]
  -[CAMViewfinderView setTimerIndicatorView:]
  -[CAMViewfinderView setZoomSlider:]
  -[CAMViewfinderView setZoomControl:]
  -[CAMViewfinderView setFilterNameBadge:]
  -[CAMViewfinderView setLightingControl:]
  -[CAMViewfinderView setLightingNameBadge:]
  -[CAMViewfinderView visibleTopBadges]
  -[CAMViewfinderView setVisibleTopBadges:animated:]
  -[CAMViewfinderView livePhotoBadge]
  -[CAMViewfinderView prepareForAutorotation]
  -[CAMViewfinderView systemLayoutSizeFittingSize:forAspectRatio:]
  -[CAMViewfinderView setDisabledModeOverlayView:]
  -[CAMViewfinderView disabledModeOverlayView]
  -[CAMViewfinderView _commonCAMViewfinderViewInitializationWithLayoutStyle:]
  -[CAMViewfinderView _multiplierForAspectRatio:]
  -[CAMViewfinderView _layoutMarginInsetsForLayoutStyle:]
  -[CAMViewfinderView _updateBarExtensionViewsIfNecessary]
  -[CAMViewfinderView _interpolatedTopBarHeight]
  -[CAMViewfinderView _isAdjustingTopBarOrientationForLayoutStyle:]
  -[CAMViewfinderView _topBarForLayoutForLayoutStyle:shouldAdjustTopBarOrientation:bounds:center:transform:]
  -[CAMViewfinderView useCreativeControls]
  -[CAMViewfinderView _cameraTopBarForLayoutForLayoutStyle:shouldAdjustTopBarOrientation:bounds:center:transform:]
  -[CAMViewfinderView _topBarSizeForLayoutStyle:]
  -[CAMViewfinderView automaticallyAdjustsTopBarOrientation]
  -[CAMViewfinderView _interpolatedBottomBarWidthWithProposedWidth:]
  -[CAMViewfinderView _interpolatedBottomBarHeightWithProposedHeight:]
  -[CAMViewfinderView _wantsFullScreenPreviewRegardlessOfLayoutForLayoutStyle:]
  -[CAMViewfinderView _wantsInterfaceOrientedPreviewForLayoutStyle:]
  -[CAMViewfinderView _previewSizeForAspectRatio:]
  -[CAMViewfinderView _cameraPreviewFrameForAspectRatio:topBarFrame:bottomBarFrame:shouldShiftPreviewForUtilityBar:]
  -[CAMViewfinderView _badgeTrayHeightForLayoutStyle:]
  -[CAMViewfinderView _previewContainerMaskingView]
  -[CAMViewfinderView shutterIndicatorView]
  -[CAMViewfinderView _interpolatedVerticalOffsetForShutterIndicator]
  -[CAMViewfinderView burstIndicatorView]
  -[CAMViewfinderView zoomSlider]
  -[CAMViewfinderView visibilityDelegate]
  -[CAMViewfinderView timerIndicatorView]
  -[CAMViewfinderView framerateIndicatorView]
  -[CAMViewfinderView _layoutTopBadgesForLayoutStyle:appearingBadges:disappearingBadges:animated:]
  -[CAMViewfinderView _layoutBadgeTrayForLayoutStyle:appearingBadges:disappearingBadges:animated:]
  -[CAMViewfinderView _layoutBadgeForTinyLayoutStyle:animated:]
  -[CAMViewfinderView _layoutBottomCenteredView:aboveView:aboveViewSpacing:forLayoutStyle:]
  -[CAMViewfinderView _shouldLayoutPortraitInstructionsAtTop]
  -[CAMViewfinderView portraitModeInstructionLabel]
  -[CAMViewfinderView _layoutInstructionLabelOnTop:forLayoutStyle:]
  -[CAMViewfinderView _layoutBadgeTrayWithBadges:layoutStyle:]
  -[CAMViewfinderView _viewToLayoutBadgesBelowForLayoutStyle:orientation:]
  -[CAMViewfinderView _previewLayoutForAspectRatio:shouldShiftPreviewForUtilityBar:outPreviewBounds:outPreviewCenter:outFourThreeTopBarFrame:outBottomBarFrame:]
  -[CAMViewfinderView maskingAspectRatio]
  -[CAMViewfinderView _previewFrameForAspectRatio:topBarFrame:bottomBarFrame:shouldShiftPreviewForUtilityBar:]
  -[CAMViewfinderView _frameForBadgeTrayForLayoutStyle:orientation:]
  -[CAMViewfinderView _utilityBarExtensionDistanceForLayoutStyle:]
  -[CAMViewfinderView _layoutTopBarForLayoutStyle:]
  -[CAMViewfinderView _layoutBarExtensionViews]
  -[CAMViewfinderView _layoutElapsedTimeViewForLayoutStyle:]
  -[CAMViewfinderView _layoutShutterIndicatorForLayoutStyle:]
  -[CAMViewfinderView _layoutBurstIndicatorForLayoutStyle:]
  -[CAMViewfinderView _layoutTimerIndicatorViewForLayoutStyle:]
  -[CAMViewfinderView _layoutFramerateIndicatorViewForLayoutStyle:]
  -[CAMViewfinderView _layoutPanoramaViewForLayoutStyle:]
  -[CAMViewfinderView _layoutSnapshotsOfPreviewView]
  -[CAMViewfinderView _layoutLightingControlForLayoutStyle:]
  -[CAMViewfinderView portraitModeDescriptionOverlayView]
  -[CAMViewfinderView _layoutDescriptionOverlayView:]
  -[CAMViewfinderView _layoutPortraitModeInstructionLabelForLayoutStyle:]
  -[CAMViewfinderView _layoutQRCodeInstructionLabelForLayoutStyle:]
  -[CAMViewfinderView _layoutTopBadgesForLayoutStyle:animated:]
  -[CAMViewfinderView _layoutBottomBadgesForLayoutStyle:]
  -[CAMViewfinderView _layoutZoomSliderForLayoutStyle:]
  -[CAMViewfinderView _layoutZoomControlForLayoutStyle:]
  -[CAMViewfinderView _previewOffset]
  -[CAMViewfinderView _cameraAppPreviewLayoutForAspectRatio:shouldShiftPreviewForUtilityBar:outPreviewBounds:outPreviewCenter:outFourThreeTopBarFrame:outBottomBarFrame:]
  -[CAMViewfinderView _bottomBarSizeForLayoutStyle:withProposedSize:]
  -[CAMViewfinderView _enforceBadgeSubviewOrderingWithAppearingBadges:]
  -[CAMViewfinderView _createPlaceholderSnapshotAndPerformDoubleSidedFadeForView:fadeOutDuration:fadeOutDelay:fadeInDuration:fadeInDelay:]
  -[CAMViewfinderView _createPlaceholderSnapshotAndPerformSingleSidedFadeForView:fadeOutDuration:fadeOutDelay:]
  -[CAMViewfinderView setShutterIndicatorView:]
  -[CAMViewfinderView setVisibleTopBadges:]
  -[CAMViewfinderView flashBadge]
  -[CAMViewfinderView HDRBadge]
  -[CAMViewfinderView focusAndExposureLockBadge]
  -[CAMViewfinderView shallowDepthOfFieldBadge]
  -[CAMViewfinderView _topBarExtensionView]
  -[CAMViewfinderView _setTopBarExtensionView:]
  -[CAMViewfinderView _bottomBarExtensionView]
  -[CAMViewfinderView _setBottomBarExtensionView:]


CAMHighResolutionStillImageCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMHighResolutionStillImageCommand copyWithZone:]
  -[CAMHighResolutionStillImageCommand encodeWithCoder:]
  -[CAMHighResolutionStillImageCommand initWithCoder:]
  -[CAMHighResolutionStillImageCommand _isEnabled]
  -[CAMHighResolutionStillImageCommand executeWithContext:]
  -[CAMHighResolutionStillImageCommand initWithHighResolutionStillImageCaptureEnabled:]


CAMDirectionalIndicator : UIControl /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAShapeLayer *_arrowLayer
 @property  unsigned long direction

  // class methods
  +[CAMDirectionalIndicator layerClass]

  // instance methods
  -[CAMDirectionalIndicator direction]
  -[CAMDirectionalIndicator setDirection:]
  -[CAMDirectionalIndicator intrinsicContentSize]
  -[CAMDirectionalIndicator initWithFrame:]
  -[CAMDirectionalIndicator layoutSubviews]
  -[CAMDirectionalIndicator setDirection:animated:]
  -[CAMDirectionalIndicator _arrowLayer]
  -[CAMDirectionalIndicator _updateArrowShapeAnimated:]


CAMViewfinderReticleView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_topMaskingView
 @property  UIView *_bottomMaskingView
 @property  UIImageView *_viewportBorderView
 @property  UIImageView *_topLeftCornerView
 @property  UIImageView *_topRightCornerView
 @property  UIImageView *_bottomLeftCornerView
 @property  UIImageView *_bottomRightCornerView
 @property  double viewportTopInset
 @property  double viewportBottomInset
 @property  long long maskingStyle

  // instance methods
  -[CAMViewfinderReticleView .cxx_destruct]
  -[CAMViewfinderReticleView initWithFrame:]
  -[CAMViewfinderReticleView layoutSubviews]
  -[CAMViewfinderReticleView pointInside:withEvent:]
  -[CAMViewfinderReticleView setMaskingStyle:]
  -[CAMViewfinderReticleView maskingStyle]
  -[CAMViewfinderReticleView setViewportTopInset:bottomInset:animated:]
  -[CAMViewfinderReticleView setMaskingStyle:withDuration:]
  -[CAMViewfinderReticleView _newViewportTemplateImage]
  -[CAMViewfinderReticleView _newViewportCornerImage]
  -[CAMViewfinderReticleView _topMaskingView]
  -[CAMViewfinderReticleView _bottomMaskingView]
  -[CAMViewfinderReticleView _updateMaskingOpacityWithDuration:]
  -[CAMViewfinderReticleView viewportTopInset]
  -[CAMViewfinderReticleView viewportBottomInset]
  -[CAMViewfinderReticleView _viewportBorderView]
  -[CAMViewfinderReticleView _topLeftCornerView]
  -[CAMViewfinderReticleView _topRightCornerView]
  -[CAMViewfinderReticleView _bottomLeftCornerView]
  -[CAMViewfinderReticleView _bottomRightCornerView]
  -[CAMViewfinderReticleView _opacityForMaskingStyle:]


CAMStillImageFilteredRenderingEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMStillImageFilteredRenderingEnabledCommand copyWithZone:]
  -[CAMStillImageFilteredRenderingEnabledCommand encodeWithCoder:]
  -[CAMStillImageFilteredRenderingEnabledCommand initWithCoder:]
  -[CAMStillImageFilteredRenderingEnabledCommand _isEnabled]
  -[CAMStillImageFilteredRenderingEnabledCommand executeWithContext:]
  -[CAMStillImageFilteredRenderingEnabledCommand initWithSubcommands:]
  -[CAMStillImageFilteredRenderingEnabledCommand initWithFilteredRenderingEnabled:]


CAMZoomButtonPlatter : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIImageView *_platterBackgroundView
 @property  NSArray *_allButtons
 @property  CAMZoomButton *_zoomButton1
 @property  CAMZoomButton *_zoomButton2
 @property  CAMZoomButton *_zoomButton3
 @property  double zoomFactor
 @property  CAMZoomButton *zoomFactorButton
 @property  NSArray *zoomFactors
 @property  NSString *contentSizeCategory
 @property  long long orientation

  // instance methods
  -[CAMZoomButtonPlatter .cxx_destruct]
  -[CAMZoomButtonPlatter orientation]
  -[CAMZoomButtonPlatter setOrientation:]
  -[CAMZoomButtonPlatter setContentSizeCategory:]
  -[CAMZoomButtonPlatter contentSizeCategory]
  -[CAMZoomButtonPlatter intrinsicContentSize]
  -[CAMZoomButtonPlatter initWithFrame:]
  -[CAMZoomButtonPlatter layoutSubviews]
  -[CAMZoomButtonPlatter setOrientation:animated:]
  -[CAMZoomButtonPlatter zoomFactor]
  -[CAMZoomButtonPlatter setZoomFactor:]
  -[CAMZoomButtonPlatter setZoomFactors:]
  -[CAMZoomButtonPlatter setZoomFactor:animated:]
  -[CAMZoomButtonPlatter nearestZoomButtonForTouch:]
  -[CAMZoomButtonPlatter baseZoomFactorForButton:]
  -[CAMZoomButtonPlatter zoomFactors]
  -[CAMZoomButtonPlatter _updateForContentSize]
  -[CAMZoomButtonPlatter _platterBackgroundView]
  -[CAMZoomButtonPlatter _allButtons]
  -[CAMZoomButtonPlatter _updateButtonsAnimated:]
  -[CAMZoomButtonPlatter _zoomButton2]
  -[CAMZoomButtonPlatter _createPlatterImageForContentSize:]
  -[CAMZoomButtonPlatter zoomFactorButton]
  -[CAMZoomButtonPlatter _zoomButton1]
  -[CAMZoomButtonPlatter _zoomButton3]


CAMNebulaDaemonProxyManager : NSObject /usr/lib/libSystem.B.dylib <CAMNebulaDaemonClientProtocol, CAMNebulaDaemonProtocol>
 @property  NSObject<OS_dispatch_queue> *_queue
 @property  NSXPCConnection *_connection
 @property  long long _connectionCount
 @property  <CAMNebulaDaemonTimelapseClientProtocol> *timelapseClientDelegate
 @property  <CAMNebulaDaemonIrisClientProtocol> *irisClientDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMNebulaDaemonProxyManager _daemonProtocolInterface]
  +[CAMNebulaDaemonProxyManager _clientProtocolInterface]

  // instance methods
  -[CAMNebulaDaemonProxyManager init]
  -[CAMNebulaDaemonProxyManager _queue]
  -[CAMNebulaDaemonProxyManager _connection]
  -[CAMNebulaDaemonProxyManager .cxx_destruct]
  -[CAMNebulaDaemonProxyManager _connectionCount]
  -[CAMNebulaDaemonProxyManager updatePendingWorkFromDiskForceEndLastSession:]
  -[CAMNebulaDaemonProxyManager startTimelapseWithUUID:]
  -[CAMNebulaDaemonProxyManager resumeTimelapseWithUUID:]
  -[CAMNebulaDaemonProxyManager updateTimelapseWithUUID:]
  -[CAMNebulaDaemonProxyManager finishCaptureForTimelapseWithUUID:]
  -[CAMNebulaDaemonProxyManager stopTimelapseWithUUID:]
  -[CAMNebulaDaemonProxyManager performIrisCrashRecovery]
  -[CAMNebulaDaemonProxyManager enqueueIrisVideoJobs:]
  -[CAMNebulaDaemonProxyManager pingAfterInterruption]
  -[CAMNebulaDaemonProxyManager forceStopTimelapseCaptureWithReasons:]
  -[CAMNebulaDaemonProxyManager nebulaDaemonDidCompleteLocalVideoPersistenceWithResult:]
  -[CAMNebulaDaemonProxyManager _getProxyForExecutingBlock:]
  -[CAMNebulaDaemonProxyManager setIrisClientDelegate:]
  -[CAMNebulaDaemonProxyManager ensureConnectionToDaemon]
  -[CAMNebulaDaemonProxyManager closeConnectionToDaemon]
  -[CAMNebulaDaemonProxyManager _ensureConnectionToDaemon]
  -[CAMNebulaDaemonProxyManager _closeConnectionToDaemon]
  -[CAMNebulaDaemonProxyManager performCrashRecoveryIfNeededForceEndLastTimelapseSession:]
  -[CAMNebulaDaemonProxyManager timelapseClientDelegate]
  -[CAMNebulaDaemonProxyManager setTimelapseClientDelegate:]
  -[CAMNebulaDaemonProxyManager irisClientDelegate]


CAMSubjectIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIImageView *_imageView
 @property  BOOL inactive
 @property  BOOL pulsing

  // class methods
  +[CAMSubjectIndicatorView fixedSize]
  +[CAMSubjectIndicatorView _fixedSubjectIndicatorSizeForReferenceBounds:]

  // instance methods
  -[CAMSubjectIndicatorView .cxx_destruct]
  -[CAMSubjectIndicatorView intrinsicContentSize]
  -[CAMSubjectIndicatorView initWithFrame:]
  -[CAMSubjectIndicatorView sizeThatFits:]
  -[CAMSubjectIndicatorView layoutSubviews]
  -[CAMSubjectIndicatorView _imageView]
  -[CAMSubjectIndicatorView setPulsing:]
  -[CAMSubjectIndicatorView setHidden:animated:]
  -[CAMSubjectIndicatorView setInactive:]
  -[CAMSubjectIndicatorView isInactive]
  -[CAMSubjectIndicatorView isPulsing]
  -[CAMSubjectIndicatorView startScalingWithExpansionWidth:duration:repeatCount:timingFunction:]
  -[CAMSubjectIndicatorView startScalingWithExpansionWidth:duration:repeatCount:]
  -[CAMSubjectIndicatorView stopScalingWithDuration:]


CAMSubjectAreaChangeMonitoringCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMSubjectAreaChangeMonitoringCommand copyWithZone:]
  -[CAMSubjectAreaChangeMonitoringCommand encodeWithCoder:]
  -[CAMSubjectAreaChangeMonitoringCommand initWithCoder:]
  -[CAMSubjectAreaChangeMonitoringCommand _isEnabled]
  -[CAMSubjectAreaChangeMonitoringCommand executeWithContext:]
  -[CAMSubjectAreaChangeMonitoringCommand initWithSubjectAreaChangeMonitoringEnabled:]


CAMPanoramaUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMPanoramaUtilities bufferSize]
  +[CAMPanoramaUtilities panoramaViewSizeForCaptureSize:availableWidth:layoutStyle:]
  +[CAMPanoramaUtilities defaultPreviewSize]
  +[CAMPanoramaUtilities panoramaViewLayoutInsetsForLayoutStyle:]
  +[CAMPanoramaUtilities previewStripSizeForCaptureSize:availableWidth:layoutStyle:]
  +[CAMPanoramaUtilities panoramaViewPreviewStripInsetsForLayoutStyle:]
  +[CAMPanoramaUtilities singlePreviewFrameWidthForPreviewHeight:]


CAMSnapshotView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <_UIBasicAnimationFactory>
 @property  BOOL _supportsBlur
 @property  UIView *_lowQualityBlurView
 @property  UIView *_dimmingView
 @property  UIVisualEffectView *_blurView
 @property  long long _blurStyleForEffectAnimationFactory
 @property  UIView *snapshotView
 @property  long long desiredAspectRatio
 @property  BOOL blurred
 @property  BOOL dimmed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMSnapshotView .cxx_destruct]
  -[CAMSnapshotView _dimmingView]
  -[CAMSnapshotView _basicAnimationForView:withKeyPath:]
  -[CAMSnapshotView snapshotView]
  -[CAMSnapshotView _blurView]
  -[CAMSnapshotView setDimmed:]
  -[CAMSnapshotView dimmed]
  -[CAMSnapshotView removeInflightBlurAnimations]
  -[CAMSnapshotView prepareForResumingUsingCrossfade]
  -[CAMSnapshotView desiredAspectRatio]
  -[CAMSnapshotView initWithView:desiredAspectRatio:]
  -[CAMSnapshotView setBlurred:]
  -[CAMSnapshotView setBlurred:animated:style:withCompletionBlock:]
  -[CAMSnapshotView setDimmed:animated:withCompletionBlock:]
  -[CAMSnapshotView _setBlurStyleForEffectAnimationFactory:]
  -[CAMSnapshotView _applySnapshotBlurForStyle:animated:withCompletionBlock:]
  -[CAMSnapshotView _removeSnapshotBlurForStyle:animated:withCompletionBlock:]
  -[CAMSnapshotView _applyLowQualityBlurForStyle:animated:withCompletionBlock:]
  -[CAMSnapshotView _removeLowQualityBlurForStyle:animated:withCompletionBlock:]
  -[CAMSnapshotView _applySnapshotDimAnimated:withCompletionBlock:]
  -[CAMSnapshotView _removeSnapshotDimAnimated:withCompletionBlock:]
  -[CAMSnapshotView _resumeFadeInDuration]
  -[CAMSnapshotView _setBlurView:]
  -[CAMSnapshotView _prepareForApplyingBlurForStyle:applying:inputRadiusAmount:inputRadiusDuration:inputRadiusDelay:inputRadiusTimingFunction:opacityAmount:opacityDuration:opacityDelay:opacityTimingFunction:]
  -[CAMSnapshotView _lowQualityBlurView]
  -[CAMSnapshotView _setupLowQualityBlurOnSnapshot]
  -[CAMSnapshotView _prepareForApplyingLowQualityBlurForStyle:applying:opacityAmount:opacityDuration:opacityDelay:opacityTimingFunction:targetView:]
  -[CAMSnapshotView _setupDimOnSnapshot]
  -[CAMSnapshotView _removeAnimationOnView:forKey:]
  -[CAMSnapshotView _blurStyleForEffectAnimationFactory]
  -[CAMSnapshotView blurred]
  -[CAMSnapshotView _supportsBlur]


CAMDeviceSwitchAnimationTestHarness : CAMModeAndDeviceConfigurationTestHarness
  // class methods
  +[CAMDeviceSwitchAnimationTestHarness harnessWithTestName:viewfinder:devicePosition:]

  // instance methods
  -[CAMDeviceSwitchAnimationTestHarness .cxx_destruct]
  -[CAMDeviceSwitchAnimationTestHarness startTesting]
  -[CAMDeviceSwitchAnimationTestHarness ensureCaptureDevicePosition:mode:thenPerform:]
  -[CAMDeviceSwitchAnimationTestHarness initWithTestName:viewfinder:devicePosition:]


CAMReviewViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <PUAssetExplorerReviewScreenViewControllerDelegate, CAMCameraReviewViewController>
 @property  NSArray *_initialAssets
 @property  PUReviewDataSource *_reviewDataSource
 @property  PUReviewAssetsDataSourceManager *_internalReviewDataSourceManager
 @property  PUReviewAssetsMediaProvider *_internalReviewMediaProvider
 @property  PUAssetExplorerReviewScreenViewController *_internalReviewViewController
 @property  <CAMCameraReviewDelegate> *reviewDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMReviewViewController initWithCoder:]
  -[CAMReviewViewController .cxx_destruct]
  -[CAMReviewViewController loadView]
  -[CAMReviewViewController initWithNibName:bundle:]
  -[CAMReviewViewController initWithAssets:]
  -[CAMReviewViewController assetExplorerReviewScreenViewController:didPerformCompletionAction:withSelectedAssetUUIDs:livePhotoDisabledAssetUUIDs:substituteAssetsByUUID:]
  -[CAMReviewViewController assetExplorerReviewScreenViewControllerDidPressRetake:]
  -[CAMReviewViewController assetExplorerReviewScreenViewControllerDidPressCancel:]
  -[CAMReviewViewController assetExplorerReviewScreenViewController:shouldEnableActionType:onAsset:inAssetCollection:]
  -[CAMReviewViewController assetExplorerReviewScreenViewController:canPerformActionType:onAsset:inAssetCollection:]
  -[CAMReviewViewController reviewDelegate]
  -[CAMReviewViewController setReviewDelegate:]
  -[CAMReviewViewController _reviewDataSource]
  -[CAMReviewViewController _internalReviewViewController]
  -[CAMReviewViewController _initialAssets]
  -[CAMReviewViewController _internalReviewDataSourceManager]
  -[CAMReviewViewController _internalReviewMediaProvider]


CAMProtectionController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_protectionQueue
 @property  NSCountedSet *_persistenceProtectionInflightRequestsByType
 @property  NSMutableDictionary *_persistenceProtectionFileDescriptorsByType
 @property  NSMutableDictionary *_burstProcessingProtectionFileDescriptorsByIdentifier
 @property  NSMutableSet *_nebulaDaemonWriteProtectionInflightIdentifiers
 @property  int _nebulaDaemonWriteProtectionFileDescriptor

  // class methods
  +[CAMProtectionController pathForProtectNebulaDaemonWritesIndicator]
  +[CAMProtectionController isCameraPerformingHighPriorityDiskActivity]

  // instance methods
  -[CAMProtectionController init]
  -[CAMProtectionController dealloc]
  -[CAMProtectionController .cxx_destruct]
  -[CAMProtectionController _protectionQueue]
  -[CAMProtectionController stopProtectingPersistenceForRequest:]
  -[CAMProtectionController startProtectingPersistenceForRequest:]
  -[CAMProtectionController _protectionQueueAbortProtectionForProtectionTypes]
  -[CAMProtectionController _protectionQueueAbortProtectionForBurstProcessing]
  -[CAMProtectionController _protectionQueueAbortProtectionForNebulaDaemonWritesForReason:]
  -[CAMProtectionController _persistenceProtectionFileDescriptorsByType]
  -[CAMProtectionController _persistenceProtectionPathForType:]
  -[CAMProtectionController _persistenceProtectionFileDescriptorForType:]
  -[CAMProtectionController _persistenceProtectionInflightRequestsByType]
  -[CAMProtectionController _addPersistenceProtectionIndicatorForType:logIdentifier:]
  -[CAMProtectionController _protectionQueueRemovePersistenceProtectionIndicatorForType:unlinkFile:logIdentifier:]
  -[CAMProtectionController _persistenceProtectionTypeForRequest:]
  -[CAMProtectionController _protectionQueueStartProtectingPersistenceForType:logIdentifier:]
  -[CAMProtectionController _protectionQueueStopProtectingPersistenceForType:logIdentifier:]
  -[CAMProtectionController _burstProcessingProtectionFileDescriptorsByIdentifier]
  -[CAMProtectionController _burstProcessingProtectionPathForIdentifier:]
  -[CAMProtectionController _burstProcessingProtectionFileDescriptorForIdentifier:]
  -[CAMProtectionController _protectionQueueRemoveBurstProcessingProtectionIndicatorForIdentifier:]
  -[CAMProtectionController _addBurstProcessingProtectionIndicatorForIdentifier:]
  -[CAMProtectionController _protectionQueueStartProtectingNebulaDaemonWritesForIdentifier:]
  -[CAMProtectionController _protectionQueueStopProtectingNebulaDaemonWritesForIdentifier:closeFile:]
  -[CAMProtectionController startProtectingBurstProcessingForIdentifier:]
  -[CAMProtectionController stopProtectingBurstProcessingForIdentifier:]
  -[CAMProtectionController startProtectingNebulaDaemonWritesForIdentifier:]
  -[CAMProtectionController stopProtectingNebulaDaemonWritesForIdentifier:]
  -[CAMProtectionController abortOutstandingNebulaDaemonWriteProtectionsForReason:]
  -[CAMProtectionController _nebulaDaemonWriteProtectionInflightIdentifiers]
  -[CAMProtectionController _nebulaDaemonWriteProtectionFileDescriptor]


CAMFocusIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAMFocusIndicatorRectView *_rectView
 @property  CAMExposureBiasSlider *_exposureBiasSlider
 @property  int _exposureBiasSide
 @property  long long style
 @property  <CAMFocusIndicatorViewDelegate> *delegate
 @property  BOOL inactive
 @property  BOOL pulsing
 @property  BOOL showExposureBias
 @property  float exposureBiasMaximum
 @property  float exposureBiasMinimum
 @property  float exposureBiasValue

  // instance methods
  -[CAMFocusIndicatorView delegate]
  -[CAMFocusIndicatorView setDelegate:]
  -[CAMFocusIndicatorView .cxx_destruct]
  -[CAMFocusIndicatorView style]
  -[CAMFocusIndicatorView setStyle:]
  -[CAMFocusIndicatorView setCenter:]
  -[CAMFocusIndicatorView intrinsicContentSize]
  -[CAMFocusIndicatorView layoutSubviews]
  -[CAMFocusIndicatorView initWithStyle:]
  -[CAMFocusIndicatorView _updateTintColor]
  -[CAMFocusIndicatorView setPulsing:]
  -[CAMFocusIndicatorView setInactive:]
  -[CAMFocusIndicatorView isInactive]
  -[CAMFocusIndicatorView isPulsing]
  -[CAMFocusIndicatorView setStyle:animated:completion:]
  -[CAMFocusIndicatorView setExposureBiasValue:]
  -[CAMFocusIndicatorView exposureBiasValue]
  -[CAMFocusIndicatorView startScalingWithExpansionWidth:duration:repeatCount:]
  -[CAMFocusIndicatorView _createRectViewAndUpdateBounds]
  -[CAMFocusIndicatorView _commonCAMFocusIndicatorViewInitialization]
  -[CAMFocusIndicatorView _layoutRectView:]
  -[CAMFocusIndicatorView _layoutExposureBiasSlider]
  -[CAMFocusIndicatorView _rectView]
  -[CAMFocusIndicatorView _createExposureBiasSlider]
  -[CAMFocusIndicatorView setShowExposureBias:]
  -[CAMFocusIndicatorView setExposureBiasMaximum:]
  -[CAMFocusIndicatorView setExposureBiasMinimum:]
  -[CAMFocusIndicatorView setExposureBiasSide:animated:]
  -[CAMFocusIndicatorView showExposureBias]
  -[CAMFocusIndicatorView exposureBiasMaximum]
  -[CAMFocusIndicatorView exposureBiasMinimum]
  -[CAMFocusIndicatorView _exposureBiasSlider]
  -[CAMFocusIndicatorView _exposureBiasSide]
  -[CAMFocusIndicatorView set_exposureBiasSide:]


CAMExposureCommand : CAMCaptureCommand
 @property  long long _exposureMode
 @property  {CGPoint=dd} _exposurePointOfInterest

  // instance methods
  -[CAMExposureCommand copyWithZone:]
  -[CAMExposureCommand encodeWithCoder:]
  -[CAMExposureCommand initWithCoder:]
  -[CAMExposureCommand _exposureMode]
  -[CAMExposureCommand _exposurePointOfInterest]
  -[CAMExposureCommand executeWithContext:]
  -[CAMExposureCommand initWithExposureMode:]
  -[CAMExposureCommand initWithExposureMode:atPointOfInterest:]


CAMVideoThumbnailOutputEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMVideoThumbnailOutputEnabledCommand copyWithZone:]
  -[CAMVideoThumbnailOutputEnabledCommand encodeWithCoder:]
  -[CAMVideoThumbnailOutputEnabledCommand initWithCoder:]
  -[CAMVideoThumbnailOutputEnabledCommand _isEnabled]
  -[CAMVideoThumbnailOutputEnabledCommand executeWithContext:]
  -[CAMVideoThumbnailOutputEnabledCommand initWithVideoThumbnailOutputEnabled:]


CAMVideoPersistenceResponse : CAMPersistenceResponse <CAMTransientAssetConvertible>
 @property  {?=qiIq} duration
 @property  NSString *stillPersistenceUUID
 @property  {?=qiIq} stillDisplayTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSString *uuid
 @property  unsigned short sessionIdentifier
 @property  NSURL *persistenceURL
 @property  NSDate *captureDate
 @property  UIImage *placeholderImage
 @property  {CGSize=dd} finalExpectedPixelSize
 @property  NSDictionary *stillImageMetadata
 @property  NSString *burstIdentifier
 @property  unsigned long numberOfRepresentedAssets
 @property  NSString *irisStillImageUUID
 @property  BOOL expectingPairedVideo
 @property  NSURL *irisVideoPersistenceURL
 @property  {?=qiIq} irisStillDisplayTime

  // instance methods
  -[CAMVideoPersistenceResponse .cxx_destruct]
  -[CAMVideoPersistenceResponse uuid]
  -[CAMVideoPersistenceResponse duration]
  -[CAMVideoPersistenceResponse mediaType]
  -[CAMVideoPersistenceResponse placeholderImage]
  -[CAMVideoPersistenceResponse captureDate]
  -[CAMVideoPersistenceResponse burstIdentifier]
  -[CAMVideoPersistenceResponse mediaSubtypes]
  -[CAMVideoPersistenceResponse numberOfRepresentedAssets]
  -[CAMVideoPersistenceResponse stillDisplayTime]
  -[CAMVideoPersistenceResponse finalExpectedPixelSize]
  -[CAMVideoPersistenceResponse isExpectingPairedVideo]
  -[CAMVideoPersistenceResponse irisStillDisplayTime]
  -[CAMVideoPersistenceResponse stillImageMetadata]
  -[CAMVideoPersistenceResponse irisStillImageUUID]
  -[CAMVideoPersistenceResponse irisVideoPersistenceURL]
  -[CAMVideoPersistenceResponse stillPersistenceUUID]
  -[CAMVideoPersistenceResponse initWithUUID:captureSession:url:creationDate:scrubberImage:finalExpectedPixelSize:duration:stillPersistenceUUID:stillDisplayTime:coordinationInfo:]


CAMMachineReadableCodeLoggingController : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL _seenMachineReadableObjectOfAcceptableSize
 @property  BOOL _seenMachineReadableObjectOfUnacceptableSize
 @property  BOOL _seenMachineReadableObjectInNonActiveState

  // instance methods
  -[CAMMachineReadableCodeLoggingController init]
  -[CAMMachineReadableCodeLoggingController resetLoggingState]
  -[CAMMachineReadableCodeLoggingController logMachineReadableCodeResultDuringInactiveAppState]
  -[CAMMachineReadableCodeLoggingController logMachineReadableCodeResult:isOfSignificantSize:]
  -[CAMMachineReadableCodeLoggingController _seenMachineReadableObjectInNonActiveState]
  -[CAMMachineReadableCodeLoggingController _setSeenMachineReadableObjectInNonActiveState:]
  -[CAMMachineReadableCodeLoggingController _seenMachineReadableObjectOfAcceptableSize]
  -[CAMMachineReadableCodeLoggingController _seenMachineReadableObjectOfUnacceptableSize]
  -[CAMMachineReadableCodeLoggingController _setSeenMachineReadableObjectOfAcceptableSize:]
  -[CAMMachineReadableCodeLoggingController _setSeenMachineReadableObjectOfUnacceptableSize:]


CAMIntensityStatusIndicator : CAMControlStatusIndicator
 @property  BOOL on

  // instance methods
  -[CAMIntensityStatusIndicator setOn:]
  -[CAMIntensityStatusIndicator isOn]
  -[CAMIntensityStatusIndicator shouldUseOutline]
  -[CAMIntensityStatusIndicator imageNameForCurrentState]
  -[CAMIntensityStatusIndicator shouldUseActiveTintForCurrentState]


CAMReviewViewControllerContainerView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *reviewView

  // instance methods
  -[CAMReviewViewControllerContainerView initWithCoder:]
  -[CAMReviewViewControllerContainerView .cxx_destruct]
  -[CAMReviewViewControllerContainerView initWithFrame:]
  -[CAMReviewViewControllerContainerView layoutSubviews]
  -[CAMReviewViewControllerContainerView setReviewView:]
  -[CAMReviewViewControllerContainerView _commonCAMReviewViewControllerContainerViewInitialization]
  -[CAMReviewViewControllerContainerView reviewView]


CAMStageLightAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long _appearingAnimationCount
 @property  BOOL _appearing
 @property  CAGradientLayer *gradientLayer
 @property  CALayer *circleLayer
 @property  unsigned long state
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} circleBaseFrame

  // instance methods
  -[CAMStageLightAnimator .cxx_destruct]
  -[CAMStageLightAnimator state]
  -[CAMStageLightAnimator setState:]
  -[CAMStageLightAnimator gradientLayer]
  -[CAMStageLightAnimator _isAppearing]
  -[CAMStageLightAnimator setCircleBaseFrame:animated:]
  -[CAMStageLightAnimator _animateAppearing]
  -[CAMStageLightAnimator _circleGeometryForState:]
  -[CAMStageLightAnimator _gradientGeometryForState:]
  -[CAMStageLightAnimator _gradientPropertiesForGeometry:]
  -[CAMStageLightAnimator _animateGradientToProperties:duration:timing:]
  -[CAMStageLightAnimator _animateCircleToGeometry:duration:timing:completion:]
  -[CAMStageLightAnimator _animateSearchingIfNeededFromState:]
  -[CAMStageLightAnimator _animateBounceIfNeeded]
  -[CAMStageLightAnimator _animateHidden]
  -[CAMStageLightAnimator _appearingAnimationCount]
  -[CAMStageLightAnimator _setAppearingAnimationCount:]
  -[CAMStageLightAnimator _didFinishAppearing]
  -[CAMStageLightAnimator _circleLineWidth]
  -[CAMStageLightAnimator _animateGradientFromProperties:toProperties:duration:timing:repeats:]
  -[CAMStageLightAnimator _animateCircleFromGeometry:toGeometry:duration:timing:repeats:completion:]
  -[CAMStageLightAnimator _currentCircleGeometry]
  -[CAMStageLightAnimator _currentGradientProperties]
  -[CAMStageLightAnimator _animateGradientProperties:count:duration:timing:repeats:]
  -[CAMStageLightAnimator _animateCircleGeometry:count:duration:timing:repeats:completion:]
  -[CAMStageLightAnimator circleBaseFrame]
  -[CAMStageLightAnimator circleLayer]
  -[CAMStageLightAnimator initWithGradientLayer:circleLayer:]
  -[CAMStageLightAnimator setCircleBaseFrame:]


CAMFlashButton : CAMExpandableMenuButton <CAMAccessibilityHUDImageProvider>
 @property  UIImageView *_glyphView
 @property  UIImageView *_warningIndicatorView
 @property  long long flashMode
 @property  BOOL allowsAutomaticFlash
 @property  BOOL unavailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMFlashButton .cxx_destruct]
  -[CAMFlashButton isUnavailable]
  -[CAMFlashButton initWithFrame:]
  -[CAMFlashButton reloadData]
  -[CAMFlashButton headerView]
  -[CAMFlashButton setUnavailable:]
  -[CAMFlashButton flashMode]
  -[CAMFlashButton setFlashMode:]
  -[CAMFlashButton _glyphView]
  -[CAMFlashButton initWithLayoutStyle:]
  -[CAMFlashButton numberOfMenuItems]
  -[CAMFlashButton titleForMenuItemAtIndex:]
  -[CAMFlashButton imageForAccessibilityHUD]
  -[CAMFlashButton setAllowsAutomaticFlash:needsReloadData:]
  -[CAMFlashButton modeForIndex:]
  -[CAMFlashButton indexForMode:]
  -[CAMFlashButton wantsSelectedItemToBeVisible]
  -[CAMFlashButton prepareHeaderViewForExpanding:]
  -[CAMFlashButton _updateCurrentGlyphImage]
  -[CAMFlashButton padHeaderViewContentInsetLeft]
  -[CAMFlashButton _currentGlyphImageForAccessibilityHUD:]
  -[CAMFlashButton _commonCAMFlashButtonInitialization]
  -[CAMFlashButton allowsAutomaticFlash]
  -[CAMFlashButton _warningIndicatorView]
  -[CAMFlashButton collapsedSelectedLabelHorizontalMargin]
  -[CAMFlashButton setAllowsAutomaticFlash:]
  -[CAMFlashButton shouldIgnoreMenuInteraction]


CAMKeyValueCoalescer : NSObject /usr/lib/libSystem.B.dylib
 @property  double _interval
 @property  @? _handler
 @property  NSObject<OS_dispatch_source> *coalescingTimer
 @property  NSMutableDictionary *_values
 @property  NSMutableDictionary *_previousValues
 @property  NSObject<OS_dispatch_queue> *_coalescingQueue

  // instance methods
  -[CAMKeyValueCoalescer _handler]
  -[CAMKeyValueCoalescer _values]
  -[CAMKeyValueCoalescer .cxx_destruct]
  -[CAMKeyValueCoalescer _interval]
  -[CAMKeyValueCoalescer flush]
  -[CAMKeyValueCoalescer coalescingTimer]
  -[CAMKeyValueCoalescer setCoalescingTimer:]
  -[CAMKeyValueCoalescer _coalescingQueue]
  -[CAMKeyValueCoalescer _pushCoalescedValues]
  -[CAMKeyValueCoalescer _previousValues]
  -[CAMKeyValueCoalescer initWithInterval:handler:]
  -[CAMKeyValueCoalescer coalesceValue:forKeyPath:]


CAMPendingRemotePersistenceWrapper : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMCaptureRequest *request
 @property  NSDate *creationDate
 @property  NSMutableDictionary *job
 @property  @? completionHandler

  // instance methods
  -[CAMPendingRemotePersistenceWrapper .cxx_destruct]
  -[CAMPendingRemotePersistenceWrapper creationDate]
  -[CAMPendingRemotePersistenceWrapper request]
  -[CAMPendingRemotePersistenceWrapper completionHandler]
  -[CAMPendingRemotePersistenceWrapper setCompletionHandler:]
  -[CAMPendingRemotePersistenceWrapper job]
  -[CAMPendingRemotePersistenceWrapper initWithRequest:creationDate:job:completionHandler:]


CAMBufferObservanceChange : NSObject /usr/lib/libSystem.B.dylib

CAMReviewButton : UIButton /System/Library/Frameworks/Foundation.framework/Foundation
 @property  unsigned long _numberOfCaptures

  // class methods
  +[CAMReviewButton _sharedNumberOfCapturesFormatter]

  // instance methods
  -[CAMReviewButton initWithCoder:]
  -[CAMReviewButton initWithFrame:]
  -[CAMReviewButton _localizedTitleForNumberOfCaptures]
  -[CAMReviewButton _commonCAMReviewButtonInitialization]
  -[CAMReviewButton _numberOfCaptures]
  -[CAMReviewButton _setNumberOfCaptures:]


CAMNebulaIrisBackendController : NSObject /usr/lib/libSystem.B.dylib <CAMStillImageCaptureRequestDelegate, CAMNebulaDaemonIrisProtocol, CAMPersistenceResultDelegate>
 @property  NSObject<OS_dispatch_queue> *_coordinationQueue
 @property  NSObject<OS_dispatch_queue> *_linkWorkQueue
 @property  CAMPersistenceController *_persistenceController
 @property  CAMNebulaKeepAliveController *_keepAliveController
 @property  BOOL _IOWorkSuspended
 @property  int _notifyRegisterTokenSuspendIO
 @property  int _notifyRegisterTokenResumeIO
 @property  BOOL _shouldCheckMarkerFileForIOWorkSuspension
 @property  NSMutableDictionary *_pendingOrInFlightJobsByUniqueIdentifier
 @property  NSMutableArray *_pendingExportVideoJobs
 @property  AVAssetExportSession *_activeExportSession
 @property  NSMutableDictionary *_bundleIdentifiersByVideoPersistenceUUID
 @property  BOOL _crashRecoveryNeeded
 @property  BKSApplicationStateMonitor *_applicationStateMonitor
 @property  NSHashTable *_clientConnections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMNebulaIrisBackendController init]
  -[CAMNebulaIrisBackendController dealloc]
  -[CAMNebulaIrisBackendController .cxx_destruct]
  -[CAMNebulaIrisBackendController _applicationStateMonitor]
  -[CAMNebulaIrisBackendController _clientConnections]
  -[CAMNebulaIrisBackendController _persistenceController]
  -[CAMNebulaIrisBackendController _removeItemAtURL:]
  -[CAMNebulaIrisBackendController stillImageRequestDidCompleteVideoRemotePersistence:withResponse:error:]
  -[CAMNebulaIrisBackendController _keepAliveController]
  -[CAMNebulaIrisBackendController performIrisCrashRecovery]
  -[CAMNebulaIrisBackendController enqueueIrisVideoJobs:]
  -[CAMNebulaIrisBackendController _coordinationQueue]
  -[CAMNebulaIrisBackendController persistenceController:didGenerateVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMNebulaIrisBackendController _coordinationQueue_setIOWorkSuspended:]
  -[CAMNebulaIrisBackendController _coordinationQueue_setShouldCheckMarkerFileForIOWorkSuspension:]
  -[CAMNebulaIrisBackendController _coordinationQueue_setCrashRecoveryNeeded:]
  -[CAMNebulaIrisBackendController initWithPersistenceController:keepAliveController:]
  -[CAMNebulaIrisBackendController _coordinationQueue_destroyApplicationStateMonitor]
  -[CAMNebulaIrisBackendController _dispatchToQueue:withBlock:]
  -[CAMNebulaIrisBackendController _dispatchToQueue:afterDelay:withBlock:]
  -[CAMNebulaIrisBackendController _linkWorkQueue]
  -[CAMNebulaIrisBackendController _coordinationQueue_createJobsForCrashRecoveryIfNeeded]
  -[CAMNebulaIrisBackendController _dispatchToCoordinationQueueWithBlock:]
  -[CAMNebulaIrisBackendController performIrisCrashRecoveryForceFileSystemCheck:]
  -[CAMNebulaIrisBackendController _coordinationQueue_shouldCheckMarkerFileForIOWorkSuspension]
  -[CAMNebulaIrisBackendController _activeExportSession]
  -[CAMNebulaIrisBackendController _coordinationQueue_setupCameraProcessingMonitoringIfNecessary]
  -[CAMNebulaIrisBackendController _coordinationQueue_enqueuePendingExportJobIfPossible]
  -[CAMNebulaIrisBackendController _coordinationQueue_enqueueJobs:]
  -[CAMNebulaIrisBackendController _coordinationQueue_enqueueAndTrackNewJob:]
  -[CAMNebulaIrisBackendController _uniqueIdentifierForJob:]
  -[CAMNebulaIrisBackendController _pendingOrInFlightJobsByUniqueIdentifier]
  -[CAMNebulaIrisBackendController _pendingExportVideoJobs]
  -[CAMNebulaIrisBackendController _linkWorkQueue_linkAndPersistSelfContainedVideo:]
  -[CAMNebulaIrisBackendController _dispatchToLinkWorkQueueWithBlock:]
  -[CAMNebulaIrisBackendController _removeItemAtURL:maxAttempts:]
  -[CAMNebulaIrisBackendController _bundleIdentifiersByVideoPersistenceUUID]
  -[CAMNebulaIrisBackendController _dispatchToMainQueueWithBlock:]
  -[CAMNebulaIrisBackendController _coordinationQueue_didPermanentlyFinishJob:]
  -[CAMNebulaIrisBackendController _coordinationQueue_failureCountForVideoURL:]
  -[CAMNebulaIrisBackendController _coordinationQueue_setFailureCount:forVideoURL:]
  -[CAMNebulaIrisBackendController _dispatchToLinkWorkQueueAfterDelay:withBlock:]
  -[CAMNebulaIrisBackendController _coordinationQueue_isIOWorkSuspended]
  -[CAMNebulaIrisBackendController _setActiveExportSession:]
  -[CAMNebulaIrisBackendController _coordinationQueue_didCompleteExportJob:]
  -[CAMNebulaIrisBackendController _dispatchToCoordinationQueueAfterDelay:withBlock:]
  -[CAMNebulaIrisBackendController _coordinationQueue_isCrashRecoveryNeeded]
  -[CAMNebulaIrisBackendController _videoJobFromURL:]
  -[CAMNebulaIrisBackendController _extractIrisPropertiesFromAVAsset:stillImageDisplayTime:irisIdentifier:]
  -[CAMNebulaIrisBackendController handleClientConnection:]
  -[CAMNebulaIrisBackendController handleClientDisconnection:]
  -[CAMNebulaIrisBackendController _notifyRegisterTokenSuspendIO]
  -[CAMNebulaIrisBackendController _notifyRegisterTokenResumeIO]


CAMBlinkAndSmileDetectionCommand : CAMCaptureCommand
 @property  BOOL _blinkDetectionEnabled
 @property  BOOL _smileDetectionEnabled

  // instance methods
  -[CAMBlinkAndSmileDetectionCommand copyWithZone:]
  -[CAMBlinkAndSmileDetectionCommand encodeWithCoder:]
  -[CAMBlinkAndSmileDetectionCommand initWithCoder:]
  -[CAMBlinkAndSmileDetectionCommand executeWithContext:]
  -[CAMBlinkAndSmileDetectionCommand _isBlinkDetectionEnabled]
  -[CAMBlinkAndSmileDetectionCommand _isSmileDetectionEnabled]
  -[CAMBlinkAndSmileDetectionCommand initWithBlinkDetection:smileDetection:]


CAMLowLightBoostCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMLowLightBoostCommand copyWithZone:]
  -[CAMLowLightBoostCommand encodeWithCoder:]
  -[CAMLowLightBoostCommand initWithCoder:]
  -[CAMLowLightBoostCommand _isEnabled]
  -[CAMLowLightBoostCommand executeWithContext:]
  -[CAMLowLightBoostCommand initWithLowLightBoostEnabled:]


CAMMetalView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  <CAMMetalViewDelegate> *metalViewDelegate
 @property  CAMetalLayer *metalLayer

  // class methods
  +[CAMMetalView layerClass]

  // instance methods
  -[CAMMetalView .cxx_destruct]
  -[CAMMetalView traitCollectionDidChange:]
  -[CAMMetalView layoutSubviews]
  -[CAMMetalView metalLayer]
  -[CAMMetalView metalViewDelegate]
  -[CAMMetalView setMetalViewDelegate:]


CAMVideoThumbnailOutputConfigurationCommand : CAMCaptureCommand
 @property  CAMVideoThumbnailOutputConfiguration *configuration

  // instance methods
  -[CAMVideoThumbnailOutputConfigurationCommand copyWithZone:]
  -[CAMVideoThumbnailOutputConfigurationCommand encodeWithCoder:]
  -[CAMVideoThumbnailOutputConfigurationCommand initWithCoder:]
  -[CAMVideoThumbnailOutputConfigurationCommand .cxx_destruct]
  -[CAMVideoThumbnailOutputConfigurationCommand configuration]
  -[CAMVideoThumbnailOutputConfigurationCommand initWithConfiguration:]
  -[CAMVideoThumbnailOutputConfigurationCommand executeWithContext:]


CAMCaptureCapabilities : NSObject /usr/lib/libSystem.B.dylib
 @property  double _backPhotoModeMaximumZoomFactor
 @property  double _frontPhotoModeMaximumZoomFactor
 @property  double _backVideoModeMaximumZoomFactor
 @property  double _frontVideoModeMaximumZoomFactor
 @property  double _backDualPhotoModeMaximumZoomFactor
 @property  double _backDualVideoModeMaximumZoomFactor
 @property  double _frontDualPhotoModeMaximumZoomFactor
 @property  double _frontDualVideoModeMaximumZoomFactor
 @property  double _backTripleCameraPhotoModeMaximumZoomFactor
 @property  double _backTripleCameraVideoModeMaximumZoomFactor
 @property  double _frontTripleCameraPhotoModeMaximumZoomFactor
 @property  double _frontTripleCameraVideoModeMaximumZoomFactor
 @property  double _backDualCameraSwitchOverZoomFactor
 @property  double _frontDualCameraSwitchOverZoomFactor
 @property  double _backWideDualCameraSwitchOverZoomFactor
 @property  double _frontWideDualCameraSwitchOverZoomFactor
 @property  double _backCaptureInterval
 @property  double _frontCaptureInterval
 @property  BOOL topBarInvertedForModernPhone
 @property  long long _forcedBackCamera
 @property  BOOL _forceAllowTripleCamera
 @property  BOOL hasFilteringEntitlement
 @property  BOOL ctmSupportSuppressed
 @property  BOOL deviceSupportsCTM
 @property  BOOL featureDevelopmentEmulateSuperWide
 @property  BOOL backCameraSupported
 @property  BOOL frontCameraSupported
 @property  BOOL captureOnTouchDown
 @property  BOOL backFlashSupported
 @property  BOOL frontFlashSupported
 @property  BOOL backTorchSupported
 @property  BOOL frontTorchSupported
 @property  BOOL backHDRSupported
 @property  BOOL backAutomaticHDRSupported
 @property  BOOL backHDROnSupported
 @property  BOOL frontHDRSupported
 @property  BOOL frontAutomaticHDRSupported
 @property  BOOL frontHDROnSupported
 @property  BOOL previewSupportedDuringHDR
 @property  BOOL modernHDRSupported
 @property  BOOL smartHDRSupported
 @property  BOOL HDREV0CaptureSupported
 @property  BOOL livePhotoSupported
 @property  BOOL backLivePhotoSupported
 @property  BOOL frontLivePhotoSupported
 @property  BOOL livePhotoAutoModeSupported
 @property  BOOL liveFilteringSupported
 @property  BOOL portraitEffectsSupported
 @property  long long supportedPortraitLightingVersion
 @property  BOOL naturalLightingAppliedToOriginal
 @property  BOOL backLiveStageLightSupported
 @property  BOOL frontLiveStageLightSupported
 @property  BOOL backBurstSupported
 @property  BOOL frontBurstSupported
 @property  long long maximumBurstLength
 @property  BOOL squareModeSupported
 @property  BOOL videoSupported
 @property  BOOL stillDuringVideoSupported
 @property  long long maximumRecordedFileSize
 @property  long long back720pMaxFPS
 @property  long long front720pMaxFPS
 @property  long long back1080pMaxFPS
 @property  long long front1080pMaxFPS
 @property  BOOL back4k24VideoSupported
 @property  BOOL front4k24VideoSupported
 @property  BOOL back4k30VideoSupported
 @property  BOOL front4k30VideoSupported
 @property  BOOL back4k60VideoSupported
 @property  BOOL front4k60VideoSupported
 @property  BOOL HEVCEncodingSupported
 @property  BOOL autoLowLightVideoSupported
 @property  BOOL stereoAudioRecordingSupported
 @property  BOOL backSlomoSupported
 @property  BOOL frontSlomoSupported
 @property  BOOL back720p240Supported
 @property  BOOL front720p240Supported
 @property  BOOL back1080p120Supported
 @property  BOOL front1080p120Supported
 @property  BOOL back1080p240Supported
 @property  BOOL front1080p240Supported
 @property  BOOL backPanoramaSupported
 @property  BOOL frontPanoramaSupported
 @property  BOOL backTimelapseSupported
 @property  BOOL frontTimelapseSupported
 @property  BOOL portraitModeSupported
 @property  BOOL backPortraitModeSupported
 @property  BOOL frontPortraitModeSupported
 @property  BOOL ctmSupported
 @property  BOOL useReticleStroke
 @property  BOOL useCTMTransientImageWell
 @property  BOOL useCTMModeSelector
 @property  BOOL allowControlDrawer
 @property  BOOL spatialOverCaptureSupported
 @property  BOOL backSpatialOverCaptureSupported
 @property  BOOL frontSpatialOverCaptureSupported
 @property  BOOL lowLightSupported
 @property  BOOL backLowLightSupported
 @property  BOOL frontLowLightSupported
 @property  BOOL backSingleCameraPortraitModeSupported
 @property  BOOL frontSingleCameraPortraitModeSupported
 @property  BOOL backTorchPatternSupported
 @property  BOOL frontTorchPatternSupported
 @property  BOOL pipelinedStillImageProcessingSupported
 @property  BOOL deepFusionSupported
 @property  BOOL deferredProcessingSupported
 @property  BOOL hasSystemTelephonyOfAnyKind
 @property  BOOL forceTouchSupported
 @property  BOOL splitScreenSupported
 @property  BOOL backTelephotoSupported
 @property  BOOL frontTelephotoSupported
 @property  BOOL dualSupported
 @property  BOOL backDualSupported
 @property  BOOL frontDualSupported
 @property  BOOL superWideSupported
 @property  BOOL backSuperWideSupported
 @property  BOOL frontSuperWideSupported
 @property  BOOL wideDualSupported
 @property  BOOL backWideDualSupported
 @property  BOOL frontWideDualSupported
 @property  BOOL tripleCameraSupported
 @property  BOOL backTripleCameraSupported
 @property  BOOL frontTripleCameraSupported
 @property  BOOL backPearlSupported
 @property  BOOL frontPearlSupported
 @property  BOOL depthEffectApertureSupported
 @property  BOOL portraitEffectIntensitySupported
 @property  double minimumPortraitEffectIntensity
 @property  double maximumPortraitEffectIntensity
 @property  double defaultPortraitEffectIntensity
 @property  BOOL neuralEngineSupported
 @property  long long hostProcess
 @property  BOOL internalInstall
 @property  BOOL lockButtonAppropriateForShutter
 @property  BOOL lowEndHardware
 @property  BOOL allowHaptics
 @property  BOOL allowHapticsOnConfigurationTaps

  // class methods
  +[CAMCaptureCapabilities capabilities]

  // instance methods
  -[CAMCaptureCapabilities hostProcess]
  -[CAMCaptureCapabilities isInternalInstall]
  -[CAMCaptureCapabilities isSpatialOverCaptureSupported]
  -[CAMCaptureCapabilities isDeepFusionSupported]
  -[CAMCaptureCapabilities isDeferredProcessingSupported]
  -[CAMCaptureCapabilities isLowEndHardware]
  -[CAMCaptureCapabilities isNeuralEngineSupported]
  -[CAMCaptureCapabilities isVideoSupported]
  -[CAMCaptureCapabilities hasSystemTelephonyOfAnyKind]
  -[CAMCaptureCapabilities isCTMSupported]
  -[CAMCaptureCapabilities useCTMModeSelector]
  -[CAMCaptureCapabilities allowHaptics]
  -[CAMCaptureCapabilities isSupportedVideoConfiguration:forMode:device:]
  -[CAMCaptureCapabilities isTorchSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isLowLightSupportedForMode:device:]
  -[CAMCaptureCapabilities isLivePhotoSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isDepthEffectApertureSupported]
  -[CAMCaptureCapabilities minimumDepthEffectApertureForDevicePosition:]
  -[CAMCaptureCapabilities maximumDepthEffectApertureForDevicePosition:]
  -[CAMCaptureCapabilities defaultDepthEffectApertureForDevice:]
  -[CAMCaptureCapabilities isPortraitEffectIntensitySupported]
  -[CAMCaptureCapabilities minimumPortraitEffectIntensity]
  -[CAMCaptureCapabilities maximumPortraitEffectIntensity]
  -[CAMCaptureCapabilities defaultPortraitEffectIntensity]
  -[CAMCaptureCapabilities isZoomAllowedForMode:device:videoConfiguration:]
  -[CAMCaptureCapabilities shouldAllowCameraToggleForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities resolvedDeviceForDesiredDevice:mode:videoConfiguration:]
  -[CAMCaptureCapabilities maximumZoomFactorForMode:device:videoConfiguration:]
  -[CAMCaptureCapabilities dualCameraSwitchOverZoomFactorForDevicePosition:]
  -[CAMCaptureCapabilities tripleCameraSwitchOverZoomFactorsForDevicePosition:]
  -[CAMCaptureCapabilities wideDualCameraSwitchOverZoomFactorForDevicePosition:]
  -[CAMCaptureCapabilities isSingleCameraPortraitModeSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isTripleCameraSupported]
  -[CAMCaptureCapabilities deviceSupportsCTM]
  -[CAMCaptureCapabilities isLivePhotoSupported]
  -[CAMCaptureCapabilities isDualSupported]
  -[CAMCaptureCapabilities isWideDualSupported]
  -[CAMCaptureCapabilities isAutoLowLightVideoSupported]
  -[CAMCaptureCapabilities isBackCameraSupported]
  -[CAMCaptureCapabilities isFrontFlashSupported]
  -[CAMCaptureCapabilities isBackFlashSupported]
  -[CAMCaptureCapabilities isFrontAutomaticHDRSupported]
  -[CAMCaptureCapabilities isBackAutomaticHDRSupported]
  -[CAMCaptureCapabilities isLivePhotoAutoModeSupported]
  -[CAMCaptureCapabilities isSmartHDRSupported]
  -[CAMCaptureCapabilities isLiveFilteringSupported]
  -[CAMCaptureCapabilities arePortraitEffectsSupported]
  -[CAMCaptureCapabilities supportedEffectSetForDevicePosition:]
  -[CAMCaptureCapabilities isStereoAudioRecordingSupported]
  -[CAMCaptureCapabilities isFrontHDRSupported]
  -[CAMCaptureCapabilities isBackHDRSupported]
  -[CAMCaptureCapabilities isModernHDRSupported]
  -[CAMCaptureCapabilities isHDREV0CaptureSupported]
  -[CAMCaptureCapabilities isFrontPortraitModeSupported]
  -[CAMCaptureCapabilities isBackPortraitModeSupported]
  -[CAMCaptureCapabilities isCameraSupportedForDevice:]
  -[CAMCaptureCapabilities isSupportedMode:withDevice:]
  -[CAMCaptureCapabilities isFrontTorchSupported]
  -[CAMCaptureCapabilities isBackTorchSupported]
  -[CAMCaptureCapabilities isHEVCEncodingSupported]
  -[CAMCaptureCapabilities defaultZoomFactorForMode:device:videoConfiguration:captureOrientation:]
  -[CAMCaptureCapabilities isSpatialOverCaptureSupportedForMode:device:photoEncodingBehavior:]
  -[CAMCaptureCapabilities isBurstSupportedForMode:device:]
  -[CAMCaptureCapabilities maximumBurstLength]
  -[CAMCaptureCapabilities isFlashSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isHDRSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isTorchPatternSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isPortraitEffectIntensitySupportedForLightingType:]
  -[CAMCaptureCapabilities isFrontCameraSupported]
  -[CAMCaptureCapabilities isBackBurstSupported]
  -[CAMCaptureCapabilities isFrontBurstSupported]
  -[CAMCaptureCapabilities isStillDuringVideoSupported]
  -[CAMCaptureCapabilities isBackPanoramaSupported]
  -[CAMCaptureCapabilities isFrontPanoramaSupported]
  -[CAMCaptureCapabilities isAutomaticHDRSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isFrontSlomoSupported]
  -[CAMCaptureCapabilities isBackSlomoSupported]
  -[CAMCaptureCapabilities isPanoramaSupportedForDevice:]
  -[CAMCaptureCapabilities isFlashOrTorchSupportedForMode:devicePosition:]
  -[CAMCaptureCapabilities isHDRSupportedForMode:devicePosition:]
  -[CAMCaptureCapabilities shouldSuspendVideoHDRForHDRMode:captureMode:]
  -[CAMCaptureCapabilities isHDROnSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isAspectRatioCropSupportedForMode:]
  -[CAMCaptureCapabilities allowHapticsOnConfigurationTaps]
  -[CAMCaptureCapabilities captureOnTouchDown]
  -[CAMCaptureCapabilities isLockButtonAppropriateForShutter]
  -[CAMCaptureCapabilities captureIntervalForDevice:]
  -[CAMCaptureCapabilities isSplitScreenSupported]
  -[CAMCaptureCapabilities sanitizeDesiredDevice:forMode:]
  -[CAMCaptureCapabilities isNaturalLightingAppliedToOriginal]
  -[CAMCaptureCapabilities isTripleCameraSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isSuperWideSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isWideSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isTelephotoSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isDualSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isWideDualSupportedForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities isSuperWideSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isTelephotoSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isAutoLowLightVideoSupportedForMode:videoConfiguration:]
  -[CAMCaptureCapabilities isStereoAudioRecordingSupportedForMode:]
  -[CAMCaptureCapabilities isBackTimelapseSupported]
  -[CAMCaptureCapabilities isFrontTimelapseSupported]
  -[CAMCaptureCapabilities isSquareModeSupported]
  -[CAMCaptureCapabilities isSupportedVideoConfiguration:forVideoEncodingBehavior:]
  -[CAMCaptureCapabilities isSpatialOverCapturePreviewSupportedForMode:device:]
  -[CAMCaptureCapabilities hasFilteringEntitlement]
  -[CAMCaptureCapabilities maximumRecordedFileSize]
  -[CAMCaptureCapabilities supportedPortraitLightingVersion]
  -[CAMCaptureCapabilities invertTopBarForLayoutStyle:]
  -[CAMCaptureCapabilities useReticleStroke]
  -[CAMCaptureCapabilities initWithHostProcess:]
  -[CAMCaptureCapabilities featureDevelopmentEmulateSuperWide]
  -[CAMCaptureCapabilities isBackDualSupported]
  -[CAMCaptureCapabilities isBackWideDualSupported]
  -[CAMCaptureCapabilities isBackPearlSupported]
  -[CAMCaptureCapabilities isFrontDualSupported]
  -[CAMCaptureCapabilities isFrontWideDualSupported]
  -[CAMCaptureCapabilities isFrontPearlSupported]
  -[CAMCaptureCapabilities isTopBarInvertedForModernPhone]
  -[CAMCaptureCapabilities isCameraSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isBackTelephotoSupported]
  -[CAMCaptureCapabilities isBackSuperWideSupported]
  -[CAMCaptureCapabilities isBackTripleCameraSupported]
  -[CAMCaptureCapabilities isBackLivePhotoSupported]
  -[CAMCaptureCapabilities isFrontLivePhotoSupported]
  -[CAMCaptureCapabilities isBackHDROnSupported]
  -[CAMCaptureCapabilities isFrontHDROnSupported]
  -[CAMCaptureCapabilities isPortraitModeSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isBackLiveStageLightSupported]
  -[CAMCaptureCapabilities isFrontLiveStageLightSupported]
  -[CAMCaptureCapabilities _backCaptureInterval]
  -[CAMCaptureCapabilities _frontCaptureInterval]
  -[CAMCaptureCapabilities isBack4k24VideoSupported]
  -[CAMCaptureCapabilities isFront4k24VideoSupported]
  -[CAMCaptureCapabilities isBack4k30VideoSupported]
  -[CAMCaptureCapabilities isFront4k30VideoSupported]
  -[CAMCaptureCapabilities back1080pMaxFPS]
  -[CAMCaptureCapabilities _forceAllowTripleCamera]
  -[CAMCaptureCapabilities front1080pMaxFPS]
  -[CAMCaptureCapabilities isBack4k60VideoSupported]
  -[CAMCaptureCapabilities isFront4k60VideoSupported]
  -[CAMCaptureCapabilities isTimelapseSupportedForDevice:]
  -[CAMCaptureCapabilities isSlomoSupportedForDevice:]
  -[CAMCaptureCapabilities isPortraitModeSupportedForDevice:]
  -[CAMCaptureCapabilities is1080p60VideoSupportedForDevice:]
  -[CAMCaptureCapabilities back720pMaxFPS]
  -[CAMCaptureCapabilities front720pMaxFPS]
  -[CAMCaptureCapabilities is4k24VideoSupportedForDevice:]
  -[CAMCaptureCapabilities is4k30VideoSupportedForDevice:]
  -[CAMCaptureCapabilities is4k60VideoSupportedForDevice:]
  -[CAMCaptureCapabilities is720p240SupportedForDevice:]
  -[CAMCaptureCapabilities is1080p120SupportedForDevice:]
  -[CAMCaptureCapabilities is1080p240SupportedForDevice:]
  -[CAMCaptureCapabilities isBack720p240Supported]
  -[CAMCaptureCapabilities isFront720p240Supported]
  -[CAMCaptureCapabilities isBack1080p120Supported]
  -[CAMCaptureCapabilities isFront1080p120Supported]
  -[CAMCaptureCapabilities isBack1080p240Supported]
  -[CAMCaptureCapabilities isFront1080p240Supported]
  -[CAMCaptureCapabilities isBackSingleCameraPortraitModeSupported]
  -[CAMCaptureCapabilities isFrontSingleCameraPortraitModeSupported]
  -[CAMCaptureCapabilities isBackSpatialOverCaptureSupported]
  -[CAMCaptureCapabilities isFrontSpatialOverCaptureSupported]
  -[CAMCaptureCapabilities _isSpatialOverCaptureSupportedForMode:]
  -[CAMCaptureCapabilities isSpatialOverCaptureSupportedForDevice:]
  -[CAMCaptureCapabilities isBackLowLightSupported]
  -[CAMCaptureCapabilities isFrontLowLightSupported]
  -[CAMCaptureCapabilities isBackTorchPatternSupported]
  -[CAMCaptureCapabilities isFrontTorchPatternSupported]
  -[CAMCaptureCapabilities isWideSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isFrontTelephotoSupported]
  -[CAMCaptureCapabilities _forcedBackCamera]
  -[CAMCaptureCapabilities preferredDeviceForPosition:mode:videoConfiguration:]
  -[CAMCaptureCapabilities isDualSupportedForDevicePosition:]
  -[CAMCaptureCapabilities _shouldUseTripleCameraForMode:device:videoConfiguration:]
  -[CAMCaptureCapabilities _backDualCameraSwitchOverZoomFactor]
  -[CAMCaptureCapabilities _frontDualCameraSwitchOverZoomFactor]
  -[CAMCaptureCapabilities isFrontSuperWideSupported]
  -[CAMCaptureCapabilities isWideDualSupportedForDevicePosition:]
  -[CAMCaptureCapabilities _backWideDualCameraSwitchOverZoomFactor]
  -[CAMCaptureCapabilities _frontWideDualCameraSwitchOverZoomFactor]
  -[CAMCaptureCapabilities isFrontTripleCameraSupported]
  -[CAMCaptureCapabilities isTripleCameraSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isPearlSupportedForDevicePosition:]
  -[CAMCaptureCapabilities isPortraitModeSupported]
  -[CAMCaptureCapabilities _backTripleCameraPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontTripleCameraPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _backDualPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontDualPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _backPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontPhotoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _backTripleCameraVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontTripleCameraVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _backDualVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontDualVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _backVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities _frontVideoModeMaximumZoomFactor]
  -[CAMCaptureCapabilities isPearlSupportedForMode:devicePosition:]
  -[CAMCaptureCapabilities isLivePreviewSupportedForLightingType:devicePosition:]
  -[CAMCaptureCapabilities isLowLightSupported]
  -[CAMCaptureCapabilities shouldAllowTelephotoToggleForMode:devicePosition:videoConfiguration:]
  -[CAMCaptureCapabilities shouldUseDualForMode:device:videoConfiguration:]
  -[CAMCaptureCapabilities isSuperWideSupported]
  -[CAMCaptureCapabilities isPreviewDuringHDRSupported]
  -[CAMCaptureCapabilities useCTMTransientImageWell]
  -[CAMCaptureCapabilities allowControlDrawer]
  -[CAMCaptureCapabilities isPipelinedStillImageProcessingSupported]
  -[CAMCaptureCapabilities isForceTouchSupported]
  -[CAMCaptureCapabilities isCTMSupportSupressed]


CUCaptureController : NSObject /usr/lib/libSystem.B.dylib <CAMCaptureService, CAMCaptureRequestIntervalometerDelegate>
 @property  CAMCaptureEngine *_captureEngine
 @property  NSObject<OS_dispatch_queue> *_responseQueue
 @property  CAMThumbnailGenerator *_responseThumbnailGenerator
 @property  BOOL _capturingPairedVideoPaused
 @property  BOOL _needsInitialPairedVideoUpdate
 @property  CAMStillImageCaptureRequest *_capturingCTMVideoRequest
 @property  CAMVideoCaptureRequest *_capturingVideoRequest
 @property  CAMVideoCaptureRequest *_pendingVideoCaptureRequest
 @property  CAMPanoramaCaptureRequest *_capturingPanoramaRequest
 @property  CAMStillImageCaptureRequest *_capturingLowLightStillImageRequest
 @property  CAMCaptureRequestIntervalometer *currentBurstIntervalometer
 @property  CAMKeyValueCoalescer *_focusCoalescer
 @property  CAMKeyValueCoalescer *_exposureCoalescer
 @property  BOOL rampingVideoZoom
 @property  BOOL flashActive
 @property  BOOL torchActive
 @property  BOOL HDRSuggested
 @property  long long lowLightStatus
 @property  NSCountedSet *_numberOfInflightRequestsByType
 @property  long long _maximumNumberOfStillImageRequests
 @property  BOOL captureAvailable
 @property  BOOL failedConfigurationPreventingCapture
 @property  BOOL _isVideoCaptureAvailable
 @property  BOOL configurationAvailable
 @property  BOOL flashAvailable
 @property  BOOL torchAvailable
 @property  NSMutableSet *_identifiersForActiveLivePhotoVideoCaptures
 @property  NSMutableSet *_identifiersForActiveCTMVideoCaptures
 @property  BOOL _shouldResetFocusAndExposureAfterCapture
 @property  NSMutableDictionary *_persistenceUUIDToSignpostID
 @property  unsigned long _nextSignpostID
 @property  CAMLocationController *_locationController
 @property  CAMMotionController *_motionController
 @property  CAMBurstController *_burstController
 @property  CAMProtectionController *_protectionController
 @property  CAMPowerController *_powerController
 @property  CAMIrisVideoController *_irisVideoController
 @property  CAMRemoteShutterController *_remoteShutterController
 @property  BOOL previewDisabled
 @property  AVCaptureVideoPreviewLayer *videoPreviewLayer
 @property  CAMPanoramaPreviewView *panoramaPreviewView
 @property  <CAMPreviewLayerOverCaptureStatusDelegate> *previewLayerOverCaptureStatusDelegate
 @property  BOOL capturingStillImage
 @property  <CAMStillImageCapturingVideoDelegate> *stillImageCapturingVideoDelegate
 @property  BOOL capturingLivePhotoVideo
 @property  BOOL capturingCTMVideo
 @property  BOOL capturingLowLightImage
 @property  BOOL capturingMaximumLowLightImage
 @property  BOOL capturingVideo
 @property  BOOL capturingStandardVideo
 @property  BOOL capturingPanorama
 @property  <CAMPanoramaChangeDelegate> *panoramaChangeDelegate
 @property  BOOL capturingBurst
 @property  unsigned long currentBurstCount
 @property  <CAMBurstDelegate> *burstDelegate
 @property  BOOL capturingTimelapse
 @property  <CAMConfigurationDelegate> *configurationDelegate
 @property  <CAMSuggestionDelegate> *suggestionDelegate
 @property  <CAMAvailabilityDelegate> *availabilityDelegate
 @property  <CAMFocusDelegate> *focusDelegate
 @property  <CAMExposureDelegate> *exposureDelegate
 @property  <CAMShallowDepthOfFieldStatusDelegate> *shallowDepthOfFieldStatusDelegate
 @property  BOOL shouldAllowUserToChangeFocusAndExposure
 @property  <CAMFacesDelegate> *facesDelegate
 @property  <CAMMachineReadableCodeDelegate> *machineReadableCodeDelegate
 @property  <CAMCaptureResultDelegate> *resultDelegate
 @property  <CAMZoomDelegate> *zoomDelegate
 @property  <CAMCaptureRecoveryDelegate> *recoveryDelegate
 @property  <CAMCaptureRunningDelegate> *runningDelegate
 @property  <CAMCaptureInterruptionDelegate> *interruptionDelegate
 @property  BOOL interrupted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CUCaptureController focusLensPositionCurrentSentinel]

  // instance methods
  -[CUCaptureController dealloc]
  -[CUCaptureController .cxx_destruct]
  -[CUCaptureController observeValueForKeyPath:ofObject:change:context:]
  -[CUCaptureController isInterrupted]
  -[CUCaptureController isRampingVideoZoom]
  -[CUCaptureController videoPreviewLayer]
  -[CUCaptureController isFlashAvailable]
  -[CUCaptureController isFlashActive]
  -[CUCaptureController isTorchAvailable]
  -[CUCaptureController isTorchActive]
  -[CUCaptureController _setFlashActive:]
  -[CUCaptureController _setFlashAvailable:]
  -[CUCaptureController _setTorchActive:]
  -[CUCaptureController _setTorchAvailable:]
  -[CUCaptureController isCapturingStillImage]
  -[CUCaptureController suggestionDelegate]
  -[CUCaptureController setSuggestionDelegate:]
  -[CUCaptureController zoomDelegate]
  -[CUCaptureController setZoomDelegate:]
  -[CUCaptureController configurationDelegate]
  -[CUCaptureController setConfigurationDelegate:]
  -[CUCaptureController _responseQueue]
  -[CUCaptureController setAvailabilityDelegate:]
  -[CUCaptureController availabilityDelegate]
  -[CUCaptureController _powerController]
  -[CUCaptureController stillImageRequestDidStartCapturing:resolvedSettings:]
  -[CUCaptureController stillImageRequestDidStopCapturingStillImage:]
  -[CUCaptureController stillImageRequestDidCompleteCapture:error:]
  -[CUCaptureController videoRequestDidStartCapturing:]
  -[CUCaptureController videoRequestDidStopCapturing:]
  -[CUCaptureController panoramaRequestDidStartCapturing:]
  -[CUCaptureController panoramaRequestDidStopCapturing:interrupted:]
  -[CUCaptureController _captureEngine]
  -[CUCaptureController setFacesDelegate:]
  -[CUCaptureController setMachineReadableCodeDelegate:]
  -[CUCaptureController setBurstDelegate:]
  -[CUCaptureController setRecoveryDelegate:]
  -[CUCaptureController setInterruptionDelegate:]
  -[CUCaptureController setRunningDelegate:]
  -[CUCaptureController setStillImageCapturingVideoDelegate:]
  -[CUCaptureController setPreviewLayerOverCaptureStatusDelegate:]
  -[CUCaptureController setShallowDepthOfFieldStatusDelegate:]
  -[CUCaptureController invalidateController]
  -[CUCaptureController _motionController]
  -[CUCaptureController changeToPreviewFilters:]
  -[CUCaptureController _remoteShutterController]
  -[CUCaptureController isCapturingVideo]
  -[CUCaptureController commitCTMCaptureWithRequest:error:]
  -[CUCaptureController isHDRSuggested]
  -[CUCaptureController initiateCTMCaptureWithSettings:]
  -[CUCaptureController endCTMVideoCapture]
  -[CUCaptureController cancelCTMCaptureForSettings:]
  -[CUCaptureController isCapturingBurst]
  -[CUCaptureController captureStillImageWithRequest:error:]
  -[CUCaptureController isCaptureAvailable]
  -[CUCaptureController _locationController]
  -[CUCaptureController isCapturingLowLightImage]
  -[CUCaptureController isCapturingCTMVideo]
  -[CUCaptureController startCapturingVideoWithRequest:error:]
  -[CUCaptureController stopCapturingVideo]
  -[CUCaptureController startCapturingPanoramaWithRequest:error:]
  -[CUCaptureController stopCapturingPanoramaInterrupted:]
  -[CUCaptureController isCapturingPanorama]
  -[CUCaptureController _defaultZoomFactorForGraphConfiguration:]
  -[CUCaptureController changeToVideoZoomFactor:]
  -[CUCaptureController changeToPortraitAperture:]
  -[CUCaptureController changeToPortraitLightingEffectStrength:]
  -[CUCaptureController isCapturingTimelapse]
  -[CUCaptureController registerVideoThumbnailContentsDelegate:]
  -[CUCaptureController unregisterVideoThumbnailContentsDelegate:]
  -[CUCaptureController isCapturingMaximumLowLightImage]
  -[CUCaptureController isCapturingLivePhotoVideo]
  -[CUCaptureController lowLightStatus]
  -[CUCaptureController isConfigurationAvailable]
  -[CUCaptureController changeToPreviewDisabled]
  -[CUCaptureController changeToPreviewEnabledWithConfiguration:]
  -[CUCaptureController changeToAspectRatioCrop:]
  -[CUCaptureController changeToTorchMode:]
  -[CUCaptureController changeToVideoHDRSuspended:]
  -[CUCaptureController startMonitoringForHDRSuggestions]
  -[CUCaptureController stopMonitoringForHDRSuggestions]
  -[CUCaptureController changeToFlashMode:]
  -[CUCaptureController pauseCapturingStillImagePairedVideo]
  -[CUCaptureController resumeCapturingStillImagePairedVideo]
  -[CUCaptureController attemptToEndInterruptions]
  -[CUCaptureController prepareToCaptureStillImageAtSystemTime:]
  -[CUCaptureController startCapturingBurstWithRequest:error:]
  -[CUCaptureController stopCapturingBurst]
  -[CUCaptureController changeToVideoRecordingCaptureOrientation:]
  -[CUCaptureController changeToGraphConfiguration:zoomFactor:minimumExecutionTime:]
  -[CUCaptureController changeToPreviewConfiguration:]
  -[CUCaptureController changeToLowLightMode:]
  -[CUCaptureController startRampToVideoZoomFactor:withDuration:]
  -[CUCaptureController startRampToVideoZoomFactor:withRate:]
  -[CUCaptureController stopRampToVideoZoomFactor]
  -[CUCaptureController focusAtCenterForVideoRecording]
  -[CUCaptureController isPreviewDisabled]
  -[CUCaptureController startCaptureSessionWithRetryCount:retryInterval:logReason:completion:]
  -[CUCaptureController applyCaptureConfiguration:]
  -[CUCaptureController updateRealtimeMetadataConfigurationForGraphConfiguration:isCapturing:]
  -[CUCaptureController changeToPanoramaEncodingBehavior:]
  -[CUCaptureController stopCaptureSessionWithCompletion:]
  -[CUCaptureController setPanoramaChangeDelegate:]
  -[CUCaptureController panoramaPreviewView]
  -[CUCaptureController changeToPanoramaDirection:]
  -[CUCaptureController setCapturingTimelapse:]
  -[CUCaptureController stillImageRequest:didCompleteVideoCaptureWithResult:]
  -[CUCaptureController _irisVideoController]
  -[CUCaptureController _protectionController]
  -[CUCaptureController resultDelegate]
  -[CUCaptureController _burstController]
  -[CUCaptureController stillImageRequestWillStartCapturingVideo:]
  -[CUCaptureController stillImageRequest:didCompleteStillImageCaptureWithResult:]
  -[CUCaptureController stillImageRequest:didStopCapturingLivePhotoVideoForCoordinationInfo:]
  -[CUCaptureController stillImageRequest:didStopCapturingCTMVideoForCoordinationInfo:]
  -[CUCaptureController videoRequest:didCompleteCaptureWithResult:]
  -[CUCaptureController panoramaRequest:didCompleteCaptureWithResult:]
  -[CUCaptureController panoramaRequest:didReceiveNotification:]
  -[CUCaptureController panoramaConfigurationDidChangeWithImageQueue:direction:]
  -[CUCaptureController metadataWasRecognized:forMetadataObjectTypes:]
  -[CUCaptureController willPerformRecoveryFromRuntimeError:]
  -[CUCaptureController handleSessionDidStartRunning]
  -[CUCaptureController handleSessionDidStopRunning]
  -[CUCaptureController handleSessionInterruptionForReason:]
  -[CUCaptureController handleSessionInterruptionEnded]
  -[CUCaptureController setResultDelegate:]
  -[CUCaptureController registerCaptureService:]
  -[CUCaptureController _setupFocusAndExposureMonitoring]
  -[CUCaptureController _setupSuggestionMonitoring]
  -[CUCaptureController _setupAvailabilityMonitoring]
  -[CUCaptureController _setupZoomMonitoring]
  -[CUCaptureController _setupSystemPressureStateMonitoring]
  -[CUCaptureController _setupOverCapturePreviewMonitoring]
  -[CUCaptureController _handleCaptureEngineExecutionNotification:]
  -[CUCaptureController _handleShallowDepthOfFieldStatusChangedNotification:]
  -[CUCaptureController _commandForConfiguration:outRequestID:]
  -[CUCaptureController _setVideoCaptureAvailable:]
  -[CUCaptureController _teardownFocusAndExposureMonitoring]
  -[CUCaptureController _teardownSuggestionMonitoring]
  -[CUCaptureController _teardownAvailabilityMonitoring]
  -[CUCaptureController _teardownZoomMonitoring]
  -[CUCaptureController _teardownSystemPressureStateMonitoring]
  -[CUCaptureController _tearDownOverCapturePreviewMonitoring]
  -[CUCaptureController previewLayerOverCaptureStatusDelegate]
  -[CUCaptureController _responseThumbnailGenerator]
  -[CUCaptureController _startCaptureSignpostIntervalForPersistenceUUID:]
  -[CUCaptureController _capturingCTMVideoRequest]
  -[CUCaptureController _setCapturingCTMVideoRequest:]
  -[CUCaptureController _numberOfInflightRequestsByType]
  -[CUCaptureController _internalCaptureStillImageWithRequest:error:]
  -[CUCaptureController _endCaptureSignpostIntervalForPersistenceUUID:]
  -[CUCaptureController _isFailedConfigurationPreventingCapture]
  -[CUCaptureController _sanitizeStillImageRequest:]
  -[CUCaptureController _setCapturingLowLightStillImageRequest:]
  -[CUCaptureController _updateMaximumNumberOfStillImageRequestsAfterEnqueuingRequest:]
  -[CUCaptureController _updateAvailabilityAfterEnqueuedRequest:]
  -[CUCaptureController _needsInitialPairedVideoUpdate]
  -[CUCaptureController _isCapturingPairedVideoPaused]
  -[CUCaptureController _setCapturingPairedVideoPaused:]
  -[CUCaptureController _setNeedsInitialPairedVideoUpdate:]
  -[CUCaptureController _identifierForPendingVideoForStillImageRequest:]
  -[CUCaptureController _beginTrackingCTMVideoRecordingForIdentifier:]
  -[CUCaptureController _beginTrackingLivePhotoVideoRecordingForIdentifier:]
  -[CUCaptureController _scheduleFocusAndExposureResetAfterCaptureIfNecessary]
  -[CUCaptureController _processCapturedBurstRequest:withResult:]
  -[CUCaptureController _updateAvailabilityAfterCapturedRequest:]
  -[CUCaptureController _updateMaximumNumberOfStillImageRequestsAfterCapturedRequestIfNecessary:]
  -[CUCaptureController _capturingLowLightStillImageRequest]
  -[CUCaptureController _thumbnailImageFromStillImageCaptureResult:imageOrientation:]
  -[CUCaptureController _endTrackingLivePhotoVideoRecordingForIdentifier:]
  -[CUCaptureController _resetFocusAndExposureAfterCapture]
  -[CUCaptureController _endTrackingCTMVideoRecordingForIdentifier:]
  -[CUCaptureController _thumbnailImageFromVideoCaptureResult:previewOrientation:previewImage:]
  -[CUCaptureController _identifiersForActiveLivePhotoVideoCaptures]
  -[CUCaptureController stillImageCapturingVideoDelegate]
  -[CUCaptureController _identifiersForActiveCTMVideoCaptures]
  -[CUCaptureController isCapturingStandardVideo]
  -[CUCaptureController _capturingVideoRequest]
  -[CUCaptureController _realtimeMetadataCommandsForMode:capturing:wantsMachineReadableCodes:]
  -[CUCaptureController _setPendingVideoCaptureRequest:]
  -[CUCaptureController _internalStartCapturingVideoWithRequest:error:]
  -[CUCaptureController _sanitizeVideoRequest:]
  -[CUCaptureController _setCapturingVideoRequest:]
  -[CUCaptureController _didPlayBeginVideoRecordingSound]
  -[CUCaptureController _updateAvailabilityWhenPreparingToStopCapturingForRequest:]
  -[CUCaptureController _pendingVideoCaptureRequest]
  -[CUCaptureController _processPendingVideoCaptureRequest:]
  -[CUCaptureController _updateAvailabilityAfterStopCapturingForRequest:]
  -[CUCaptureController _capturingPanoramaRequest]
  -[CUCaptureController _sanitizePanoramaRequest:]
  -[CUCaptureController _setCapturingPanoramaRequest:]
  -[CUCaptureController _updateFocusAndExposureForStartPanorama]
  -[CUCaptureController cancelDelayedFocusAndExposureReset]
  -[CUCaptureController panoramaChangeDelegate]
  -[CUCaptureController currentBurstIntervalometer]
  -[CUCaptureController currentBurstCount]
  -[CUCaptureController _updateFocusAndExposureForStartBurstCapture]
  -[CUCaptureController _setCurrentBurstIntervalometer:]
  -[CUCaptureController burstDelegate]
  -[CUCaptureController _commandForChangeToGraphConfiguration:zoomFactor:minimumExecutionTime:outRequestID:]
  -[CUCaptureController _uniqueRequestIDForChangeToModeAndDevice]
  -[CUCaptureController _wantsMachineReadableCodesForGraphConfiguration:]
  -[CUCaptureController _setFailedConfigurationPreventingCapture:]
  -[CUCaptureController _commandForResetFocus:resetExposure:resetExposureTargetBias:]
  -[CUCaptureController focusDelegate]
  -[CUCaptureController _useSmoothFocus]
  -[CUCaptureController hasActiveCTMVideoCaptures]
  -[CUCaptureController _shouldResetFocusAndExposureAfterCapture]
  -[CUCaptureController _resetFocusAndExposureIfAppropriateForReason:]
  -[CUCaptureController _setupFocusMonitoring]
  -[CUCaptureController _setupExposureMonitoring]
  -[CUCaptureController _subjectAreaDidChange:]
  -[CUCaptureController _focusKVOKeyPaths]
  -[CUCaptureController exposureDelegate]
  -[CUCaptureController _exposureKVOKeyPaths]
  -[CUCaptureController _focusCoalescer]
  -[CUCaptureController _kvoDidStartForChange:]
  -[CUCaptureController _kvoDidEndForChange:]
  -[CUCaptureController _exposureCoalescer]
  -[CUCaptureController _suggestionKeyPaths]
  -[CUCaptureController _setHDRSuggested:]
  -[CUCaptureController _setLowLightStatus:]
  -[CUCaptureController _availabilityKeyPaths]
  -[CUCaptureController _maximumNumberOfStillImageRequests]
  -[CUCaptureController _maximumNumberOfStillImageRequestsDuringBurst]
  -[CUCaptureController _setMaximumNumberOfStillImageRequests:]
  -[CUCaptureController _isVideoCaptureAvailable]
  -[CUCaptureController _setCaptureAvailable:]
  -[CUCaptureController _setConfigurationAvailable:]
  -[CUCaptureController _notifyDelegateOfCaptureAvailabilityChanged:]
  -[CUCaptureController _notifyDelegateOfConfigurationAvailabilityChanged:]
  -[CUCaptureController _shouldTrackInflightCountForRequest:]
  -[CUCaptureController _updateAvailabilityForRequestType:]
  -[CUCaptureController facesDelegate]
  -[CUCaptureController machineReadableCodeDelegate]
  -[CUCaptureController recoveryDelegate]
  -[CUCaptureController runningDelegate]
  -[CUCaptureController interruptionDelegate]
  -[CUCaptureController unregisterCaptureService:]
  -[CUCaptureController registerEffectsPreviewSampleBufferDelegate:]
  -[CUCaptureController unregisterEffectsPreviewSampleBufferDelegate:]
  -[CUCaptureController _zoomMonitoringKeyPaths]
  -[CUCaptureController setRampingVideoZoom:]
  -[CUCaptureController shallowDepthOfFieldStatusDelegate]
  -[CUCaptureController _shouldMonitorSystemPressureState]
  -[CUCaptureController _systemPressureStateMonitoringKeyPaths]
  -[CUCaptureController _handleSystemPressureStateChanged]
  -[CUCaptureController _focusResultChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _exposureResultChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _suggestionResultChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _availabilityResultChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _zoomResultChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _systemPressureStateMonitoringChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _overCapturePreviewStatusChangedForKeyPath:ofObject:change:]
  -[CUCaptureController _persistenceUUIDToSignpostID]
  -[CUCaptureController _nextSignpostID]
  -[CUCaptureController _setNextSignpostID:]
  -[CUCaptureController intervalometer:didGenerateCaptureRequest:]
  -[CUCaptureController intervalometerDidReachMaximumCount:]
  -[CUCaptureController initWithCaptureConfiguration:engineOptions:locationController:motionController:burstController:protectionController:powerController:irisVideoController:remoteShutterController:]
  -[CUCaptureController notifyTimelapseControllerFinishedUpdatingWithLocation]
  -[CUCaptureController changeToGraphConfiguration:minimumExecutionTime:]
  -[CUCaptureController changeToTorchLevel:]
  -[CUCaptureController shouldAllowUserToChangeFocusAndExposure]
  -[CUCaptureController focusAndExposeAtPoint:lockFocus:resetExposureTargetBias:]
  -[CUCaptureController changeToLockedExposure]
  -[CUCaptureController forceDisableSubjectAreaChangeMonitoring]
  -[CUCaptureController lockFocusAtLensPosition:completionBlock:]
  -[CUCaptureController changeExposureTargetBias:]
  -[CUCaptureController _updateMaximumNumberOfStillImageRequestsAfterBurst]
  -[CUCaptureController queryVideoDimensionsWithCompletionBlock:]
  -[CUCaptureController queryTimelapseDimensionsWithCompletionBlock:]
  -[CUCaptureController startCaptureSession]
  -[CUCaptureController stopCaptureSession]
  -[CUCaptureController setFocusDelegate:]
  -[CUCaptureController setExposureDelegate:]


CAMQuadraHighResolutionStillImageCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMQuadraHighResolutionStillImageCommand copyWithZone:]
  -[CAMQuadraHighResolutionStillImageCommand encodeWithCoder:]
  -[CAMQuadraHighResolutionStillImageCommand initWithCoder:]
  -[CAMQuadraHighResolutionStillImageCommand _isEnabled]
  -[CAMQuadraHighResolutionStillImageCommand executeWithContext:]
  -[CAMQuadraHighResolutionStillImageCommand initWithFeatureEnabled:]


CAMControlDrawerButton : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDItemProvider>
 @property  UIImageView *_imageView
 @property  UIImageView *_backgroundView
 @property  long long layoutStyle
 @property  long long controlType
 @property  BOOL expandable
 @property  NSString *contentSize
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMControlDrawerButton _backgroundImage]
  +[CAMControlDrawerButton buttonSize]

  // instance methods
  -[CAMControlDrawerButton .cxx_destruct]
  -[CAMControlDrawerButton orientation]
  -[CAMControlDrawerButton setOrientation:]
  -[CAMControlDrawerButton contentSize]
  -[CAMControlDrawerButton setContentSize:]
  -[CAMControlDrawerButton intrinsicContentSize]
  -[CAMControlDrawerButton _backgroundView]
  -[CAMControlDrawerButton layoutSubviews]
  -[CAMControlDrawerButton _imageView]
  -[CAMControlDrawerButton setHighlighted:]
  -[CAMControlDrawerButton setLayoutStyle:]
  -[CAMControlDrawerButton layoutStyle]
  -[CAMControlDrawerButton setOrientation:animated:]
  -[CAMControlDrawerButton updateImage]
  -[CAMControlDrawerButton controlType]
  -[CAMControlDrawerButton isExpandable]
  -[CAMControlDrawerButton initWithLayoutStyle:]
  -[CAMControlDrawerButton hudItemForAccessibilityHUDManager:]
  -[CAMControlDrawerButton selectedByAccessibilityHUDManager:]
  -[CAMControlDrawerButton imageNameForCurrentState]
  -[CAMControlDrawerButton shouldUseActiveTintForCurrentState]
  -[CAMControlDrawerButton handleButtonReleased:]
  -[CAMControlDrawerButton shouldScaleImageWhileHighlighted]
  -[CAMControlDrawerButton didChangeContentSize]


CAMControlDrawerCustomButton : CAMControlDrawerButton <CAMControlDrawerExpandableButton>
 @property  BOOL _touchInTrackedView
 @property  UIView *_highlightedView
 @property  BOOL selfExpanding
 @property  {UIEdgeInsets=dddd} expansionInsets
 @property  <CAMControlDrawerExpandableButtonDelegate> *delegate
 @property  BOOL expanded

  // instance methods
  -[CAMControlDrawerCustomButton delegate]
  -[CAMControlDrawerCustomButton setDelegate:]
  -[CAMControlDrawerCustomButton .cxx_destruct]
  -[CAMControlDrawerCustomButton layoutSubviews]
  -[CAMControlDrawerCustomButton _highlightedView]
  -[CAMControlDrawerCustomButton pointInside:withEvent:]
  -[CAMControlDrawerCustomButton isExpanded]
  -[CAMControlDrawerCustomButton beginTrackingWithTouch:withEvent:]
  -[CAMControlDrawerCustomButton continueTrackingWithTouch:withEvent:]
  -[CAMControlDrawerCustomButton endTrackingWithTouch:withEvent:]
  -[CAMControlDrawerCustomButton setExpanded:]
  -[CAMControlDrawerCustomButton isExpandable]
  -[CAMControlDrawerCustomButton setExpanded:animated:]
  -[CAMControlDrawerCustomButton _setExpanded:animated:shouldNotify:]
  -[CAMControlDrawerCustomButton hudItemForAccessibilityHUDManager:]
  -[CAMControlDrawerCustomButton selectedByAccessibilityHUDManager:]
  -[CAMControlDrawerCustomButton shouldAccessibilityGestureBeginForHUDManager:]
  -[CAMControlDrawerCustomButton setExpansionInsets:]
  -[CAMControlDrawerCustomButton shouldScaleImageWhileHighlighted]
  -[CAMControlDrawerCustomButton expansionInsets]
  -[CAMControlDrawerCustomButton _shouldTrackView:forTouchAtLocation:]
  -[CAMControlDrawerCustomButton _setTouchInTrackedView:]
  -[CAMControlDrawerCustomButton _updateHighlightedView]
  -[CAMControlDrawerCustomButton _isTouchInTrackedView]
  -[CAMControlDrawerCustomButton isSelfExpanding]
  -[CAMControlDrawerCustomButton _shouldRejectAccessibilityGestureForHUDManager:]
  -[CAMControlDrawerCustomButton _setHighlightedView:]


CAMControlDrawerMenuItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *title
 @property  NSString *selectedTitle
 @property  NSNumber *value

  // instance methods
  -[CAMControlDrawerMenuItem .cxx_destruct]
  -[CAMControlDrawerMenuItem value]
  -[CAMControlDrawerMenuItem title]
  -[CAMControlDrawerMenuItem initWithTitle:selectedTitle:value:]
  -[CAMControlDrawerMenuItem initWithTitle:value:]
  -[CAMControlDrawerMenuItem selectedTitle]


CAMControlDrawerMenuButton : CAMControlDrawerButton <CAMControlDrawerExpandableButton>
 @property  UIImageView *_accessoryBackgroundView
 @property  NSMutableArray *_itemLabels
 @property  NSArray *_cachedMenuItems
 @property  BOOL _needsLoadMenuItems
 @property  unsigned long _trackedItemIndex
 @property  BOOL _trackingExpansionToggle
 @property  BOOL _touchInTrackedView
 @property  UIView *_highlightedView
 @property  <CAMControlDrawerMenuButtonDelegate> *delegate
 @property  {UIEdgeInsets=dddd} expansionInsets
 @property  BOOL expanded

  // class methods
  +[CAMControlDrawerMenuButton _backgroundImage]

  // instance methods
  -[CAMControlDrawerMenuButton delegate]
  -[CAMControlDrawerMenuButton setDelegate:]
  -[CAMControlDrawerMenuButton .cxx_destruct]
  -[CAMControlDrawerMenuButton layoutSubviews]
  -[CAMControlDrawerMenuButton _highlightedView]
  -[CAMControlDrawerMenuButton pointInside:withEvent:]
  -[CAMControlDrawerMenuButton setOrientation:animated:]
  -[CAMControlDrawerMenuButton isExpanded]
  -[CAMControlDrawerMenuButton beginTrackingWithTouch:withEvent:]
  -[CAMControlDrawerMenuButton cancelTrackingWithEvent:]
  -[CAMControlDrawerMenuButton continueTrackingWithTouch:withEvent:]
  -[CAMControlDrawerMenuButton endTrackingWithTouch:withEvent:]
  -[CAMControlDrawerMenuButton setExpanded:]
  -[CAMControlDrawerMenuButton isExpandable]
  -[CAMControlDrawerMenuButton initWithLayoutStyle:]
  -[CAMControlDrawerMenuButton _updateLabels]
  -[CAMControlDrawerMenuButton setExpanded:animated:]
  -[CAMControlDrawerMenuButton _setExpanded:animated:shouldNotify:]
  -[CAMControlDrawerMenuButton hudItemForAccessibilityHUDManager:]
  -[CAMControlDrawerMenuButton selectedByAccessibilityHUDManager:]
  -[CAMControlDrawerMenuButton setExpansionInsets:]
  -[CAMControlDrawerMenuButton shouldScaleImageWhileHighlighted]
  -[CAMControlDrawerMenuButton didChangeContentSize]
  -[CAMControlDrawerMenuButton expansionInsets]
  -[CAMControlDrawerMenuButton _shouldTrackView:forTouchAtLocation:]
  -[CAMControlDrawerMenuButton _setTouchInTrackedView:]
  -[CAMControlDrawerMenuButton _updateHighlightedView]
  -[CAMControlDrawerMenuButton _isTouchInTrackedView]
  -[CAMControlDrawerMenuButton _setHighlightedView:]
  -[CAMControlDrawerMenuButton _updateSubviewAlphas]
  -[CAMControlDrawerMenuButton updateLabelsIfNeeded]
  -[CAMControlDrawerMenuButton _itemLabels]
  -[CAMControlDrawerMenuButton _accessoryBackgroundView]
  -[CAMControlDrawerMenuButton _indexOfItemToTrackForTouchAtLocation:]
  -[CAMControlDrawerMenuButton _setTrackedItemIndex:]
  -[CAMControlDrawerMenuButton _setTrackingExpansionToggle:]
  -[CAMControlDrawerMenuButton _isTrackingExpansionToggle]
  -[CAMControlDrawerMenuButton _trackedItemIndex]
  -[CAMControlDrawerMenuButton _cachedMenuItems]
  -[CAMControlDrawerMenuButton didSelectMenuItem:]
  -[CAMControlDrawerMenuButton hudItemForMenuHeader]
  -[CAMControlDrawerMenuButton hudItemForMenuItem:]
  -[CAMControlDrawerMenuButton _loadMenuItemsIfNeeded]
  -[CAMControlDrawerMenuButton isMenuItemSelected:]
  -[CAMControlDrawerMenuButton _needsLoadMenuItems]
  -[CAMControlDrawerMenuButton loadMenuItems]
  -[CAMControlDrawerMenuButton _setCachedMenuItems:]
  -[CAMControlDrawerMenuButton _setNeedsLoadMenuItems:]
  -[CAMControlDrawerMenuButton setNeedsLoadMenuItems]


CAMDrawerFlashButton : CAMControlDrawerMenuButton
 @property  long long flashMode
 @property  BOOL flashUnavailable

  // instance methods
  -[CAMDrawerFlashButton controlType]
  -[CAMDrawerFlashButton flashMode]
  -[CAMDrawerFlashButton setFlashMode:]
  -[CAMDrawerFlashButton isExpandable]
  -[CAMDrawerFlashButton isFlashUnavailable]
  -[CAMDrawerFlashButton imageNameForCurrentState]
  -[CAMDrawerFlashButton shouldUseActiveTintForCurrentState]
  -[CAMDrawerFlashButton setFlashUnavailable:]
  -[CAMDrawerFlashButton didSelectMenuItem:]
  -[CAMDrawerFlashButton isMenuItemSelected:]
  -[CAMDrawerFlashButton loadMenuItems]


CAMDrawerLivePhotoButton : CAMControlDrawerMenuButton
 @property  long long livePhotoMode

  // instance methods
  -[CAMDrawerLivePhotoButton controlType]
  -[CAMDrawerLivePhotoButton livePhotoMode]
  -[CAMDrawerLivePhotoButton imageNameForCurrentState]
  -[CAMDrawerLivePhotoButton shouldUseActiveTintForCurrentState]
  -[CAMDrawerLivePhotoButton setLivePhotoMode:]
  -[CAMDrawerLivePhotoButton didSelectMenuItem:]
  -[CAMDrawerLivePhotoButton isMenuItemSelected:]
  -[CAMDrawerLivePhotoButton loadMenuItems]


CAMDrawerAspectRatioButton : CAMControlDrawerMenuButton
 @property  NSMutableDictionary *_imagesByText
 @property  long long aspectRatio

  // instance methods
  -[CAMDrawerAspectRatioButton .cxx_destruct]
  -[CAMDrawerAspectRatioButton aspectRatio]
  -[CAMDrawerAspectRatioButton setAspectRatio:]
  -[CAMDrawerAspectRatioButton updateImage]
  -[CAMDrawerAspectRatioButton controlType]
  -[CAMDrawerAspectRatioButton initWithLayoutStyle:]
  -[CAMDrawerAspectRatioButton imageNameForCurrentState]
  -[CAMDrawerAspectRatioButton didSelectMenuItem:]
  -[CAMDrawerAspectRatioButton hudItemForMenuHeader]
  -[CAMDrawerAspectRatioButton hudItemForMenuItem:]
  -[CAMDrawerAspectRatioButton isMenuItemSelected:]
  -[CAMDrawerAspectRatioButton loadMenuItems]
  -[CAMDrawerAspectRatioButton _titleForAspectRatio:]
  -[CAMDrawerAspectRatioButton _imagesByText]
  -[CAMDrawerAspectRatioButton _imageForAspectRatio:]


CAMDrawerTimerButton : CAMControlDrawerMenuButton
 @property  long long timerDuration

  // instance methods
  -[CAMDrawerTimerButton controlType]
  -[CAMDrawerTimerButton timerDuration]
  -[CAMDrawerTimerButton imageNameForCurrentState]
  -[CAMDrawerTimerButton shouldUseActiveTintForCurrentState]
  -[CAMDrawerTimerButton setTimerDuration:]
  -[CAMDrawerTimerButton didSelectMenuItem:]
  -[CAMDrawerTimerButton isMenuItemSelected:]
  -[CAMDrawerTimerButton loadMenuItems]


CAMDrawerFilterButton : CAMControlDrawerCustomButton
 @property  BOOL on

  // instance methods
  -[CAMDrawerFilterButton setOn:]
  -[CAMDrawerFilterButton isOn]
  -[CAMDrawerFilterButton updateImage]
  -[CAMDrawerFilterButton controlType]
  -[CAMDrawerFilterButton imageNameForCurrentState]
  -[CAMDrawerFilterButton isSelfExpanding]


CAMDrawerHDRButton : CAMControlDrawerMenuButton
 @property  long long hdrMode
 @property  BOOL allowAutoHDR
 @property  BOOL allowHDROn

  // instance methods
  -[CAMDrawerHDRButton hdrMode]
  -[CAMDrawerHDRButton controlType]
  -[CAMDrawerHDRButton setHDRMode:]
  -[CAMDrawerHDRButton imageNameForCurrentState]
  -[CAMDrawerHDRButton shouldUseActiveTintForCurrentState]
  -[CAMDrawerHDRButton setAllowAutoHDR:]
  -[CAMDrawerHDRButton setAllowHDROn:]
  -[CAMDrawerHDRButton didSelectMenuItem:]
  -[CAMDrawerHDRButton isMenuItemSelected:]
  -[CAMDrawerHDRButton loadMenuItems]
  -[CAMDrawerHDRButton allowHDROn]
  -[CAMDrawerHDRButton allowAutoHDR]


CAMDrawerApertureButton : CAMControlDrawerCustomButton
 @property  BOOL on

  // instance methods
  -[CAMDrawerApertureButton setOn:]
  -[CAMDrawerApertureButton isOn]
  -[CAMDrawerApertureButton updateImage]
  -[CAMDrawerApertureButton controlType]
  -[CAMDrawerApertureButton imageNameForCurrentState]


CAMDrawerIntensityButton : CAMControlDrawerCustomButton
 @property  BOOL on

  // instance methods
  -[CAMDrawerIntensityButton setOn:]
  -[CAMDrawerIntensityButton isOn]
  -[CAMDrawerIntensityButton controlType]
  -[CAMDrawerIntensityButton imageNameForCurrentState]
  -[CAMDrawerIntensityButton shouldUseActiveTintForCurrentState]


CAMDrawerLowLightButton : CAMControlDrawerCustomButton
 @property  BOOL on
 @property  BOOL disabled

  // instance methods
  -[CAMDrawerLowLightButton isDisabled]
  -[CAMDrawerLowLightButton setDisabled:]
  -[CAMDrawerLowLightButton adjustsImageWhenDisabled]
  -[CAMDrawerLowLightButton setOn:]
  -[CAMDrawerLowLightButton isOn]
  -[CAMDrawerLowLightButton controlType]
  -[CAMDrawerLowLightButton imageNameForCurrentState]
  -[CAMDrawerLowLightButton shouldUseActiveTintForCurrentState]


CAMZoomDial : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  BOOL _useDots
 @property  BOOL _useTicks
 @property  double _backgroundAlpha
 @property  UIImageView *_backgroundView
 @property  UIView *_contentContainerView
 @property  UIView *_labelContainerView
 @property  UIImageView *_ticksView
 @property  UIImageView *_contentMaskView
 @property  UIView *_needleView
 @property  NSArray *_focalLengthLabelsPortrait
 @property  NSArray *_focalLengthLabelsLandscape
 @property  NSArray *_labels
 @property  CAMZoomDialDotsView *_activeDots
 @property  CAMZoomDialDotsView *_inactiveDots
 @property  double _fullRadius
 @property  double _fullRadiusInset
 @property  double _radiusDelta
 @property  double _borderStrokeWidth
 @property  double _tickLabelCenterRadialInset
 @property  double _focalLengthInsetPortrait
 @property  double _focalLengthInsetLandscape
 @property  double _labelPaddingForContentSizeCategory
 @property  BOOL _backgroundViewUpdateNeeded
 @property  BOOL _labelsUpdateNeeded
 @property  BOOL _dotsUpdateNeeded
 @property  BOOL _ticksUpdateNeeded
 @property  BOOL _maskUpdateNeeded
 @property  NSObject<OS_dispatch_queue> *_imageGenerationQueue
 @property  long long _backgroundImageJobIdentifier
 @property  long long _ticksImageJobIdentifier
 @property  long long _maskImageJobIdentifier
 @property  long long style
 @property  NSArray *zoomFactors
 @property  double minimumZoomFactor
 @property  double maximumZoomFactor
 @property  double minAvailableZoomFactor
 @property  double maxAvailableZoomFactor
 @property  double zoomFactor
 @property  double contentMaskingHeight
 @property  double contractionDistance
 @property  BOOL expanded
 @property  long long orientation
 @property  BOOL hideLabels
 @property  {CGPoint=dd} dialCenter
 @property  double dotCenterInset
 @property  double dialBorderWidth
 @property  double angleDeltaForZoomRange
 @property  NSString *contentSizeCategory

  // class methods
  +[CAMZoomDial _normalizedValueForZoomFactor:min:max:]
  +[CAMZoomDial _offsetAngleForZoomFactor:relativeToCurrentZoomFactor:currentZoomFactor:min:max:signedAngleDeltaForZoomRange:]
  +[CAMZoomDial _pointForOffsetAngle:dialCenter:radius:]
  +[CAMZoomDial _createBackgroundImageForBounds:dialCenter:radius:backgroundAlpha:borderStrokeWidth:]
  +[CAMZoomDial _createTicksImageForBounds:dialCenter:radius:pixelWidth:zoomFactors:minAvailableZoomFactor:maxAvailableZoomFactor:signedAngleDeltaForZoomRange:]
  +[CAMZoomDial _createMaskImageWithSize:tickLabelCenterRadialInset:notchMaskImage:labelMaskImage:]

  // instance methods
  -[CAMZoomDial .cxx_destruct]
  -[CAMZoomDial orientation]
  -[CAMZoomDial style]
  -[CAMZoomDial setOrientation:]
  -[CAMZoomDial setBounds:]
  -[CAMZoomDial _labels]
  -[CAMZoomDial setContentSizeCategory:]
  -[CAMZoomDial contentSizeCategory]
  -[CAMZoomDial setFrame:]
  -[CAMZoomDial _backgroundView]
  -[CAMZoomDial layoutSubviews]
  -[CAMZoomDial initWithStyle:]
  -[CAMZoomDial _labelContainerView]
  -[CAMZoomDial _backgroundAlpha]
  -[CAMZoomDial setOrientation:animated:]
  -[CAMZoomDial isExpanded]
  -[CAMZoomDial setExpanded:]
  -[CAMZoomDial zoomFactor]
  -[CAMZoomDial _contentMaskView]
  -[CAMZoomDial setZoomFactor:]
  -[CAMZoomDial _contentContainerView]
  -[CAMZoomDial _updateLabels]
  -[CAMZoomDial _updateContentIfNeeded]
  -[CAMZoomDial _imageGenerationQueue]
  -[CAMZoomDial setMinAvailableZoomFactor:]
  -[CAMZoomDial setMaxAvailableZoomFactor:]
  -[CAMZoomDial setZoomFactors:]
  -[CAMZoomDial minimumZoomFactor]
  -[CAMZoomDial minAvailableZoomFactor]
  -[CAMZoomDial maximumZoomFactor]
  -[CAMZoomDial maxAvailableZoomFactor]
  -[CAMZoomDial contentMaskingHeight]
  -[CAMZoomDial setContentMaskingHeight:]
  -[CAMZoomDial dialBorderWidth]
  -[CAMZoomDial removeInternalAnimationsAndSetToCurrentPresentationValues:]
  -[CAMZoomDial setHideLabels:]
  -[CAMZoomDial textCenterForZoomFactor:assumeExpanded:]
  -[CAMZoomDial setContractionDistance:]
  -[CAMZoomDial dialCenter]
  -[CAMZoomDial offsetAngleForPoint:]
  -[CAMZoomDial offsetAngleForZoomFactor:]
  -[CAMZoomDial zoomFactorForOffsetAngle:]
  -[CAMZoomDial zoomFactors]
  -[CAMZoomDial angleDeltaForZoomRange]
  -[CAMZoomDial normalizedValueForZoomFactor:]
  -[CAMZoomDial zoomFactorForNormalizedValue:]
  -[CAMZoomDial _commonCAMZoomDialInitialization]
  -[CAMZoomDial _useDots]
  -[CAMZoomDial _useTicks]
  -[CAMZoomDial _createDotImage]
  -[CAMZoomDial _setLabelsUpdateNeeded:]
  -[CAMZoomDial _setDotsUpdateNeeded:]
  -[CAMZoomDial _setTicksUpdateNeeded:]
  -[CAMZoomDial _setMaskUpdateNeeded:]
  -[CAMZoomDial contractionDistance]
  -[CAMZoomDial _isLabelsUpdateNeeded]
  -[CAMZoomDial _updateFocalLengthLabels]
  -[CAMZoomDial _isDotsUpdateNeeded]
  -[CAMZoomDial _updateDots]
  -[CAMZoomDial _updateTicksImageIfNeeded]
  -[CAMZoomDial _updateMaskImageIfNeeded]
  -[CAMZoomDial _setLabels:]
  -[CAMZoomDial _setFocalLengthLabelsPortrait:]
  -[CAMZoomDial _setFocalLengthLabelsLandscape:]
  -[CAMZoomDial _updateFocalLengthLabelAlphas]
  -[CAMZoomDial _activeDots]
  -[CAMZoomDial _inactiveDots]
  -[CAMZoomDial _offsetAngleForZoomFactor:relativeToCurrentZoomFactor:]
  -[CAMZoomDial _focalLengthLabelsPortrait]
  -[CAMZoomDial _focalLengthLabelsLandscape]
  -[CAMZoomDial _fullRadiusInset]
  -[CAMZoomDial _borderStrokeWidth]
  -[CAMZoomDial _labelPaddingForContentSizeCategory]
  -[CAMZoomDial _tickLabelCenterRadialInset]
  -[CAMZoomDial _focalLengthInsetPortrait]
  -[CAMZoomDial _signedAngleDeltaForZoomRange]
  -[CAMZoomDial _radiusDelta]
  -[CAMZoomDial _fullRadius]
  -[CAMZoomDial _dotCenterForOffsetAngle:assumeExpanded:]
  -[CAMZoomDial _pointForOffsetAngle:radialInset:assumeExpanded:]
  -[CAMZoomDial _textCenterForOffsetAngle:assumeExpanded:]
  -[CAMZoomDial _invalidateImagesForViewSize]
  -[CAMZoomDial _setBackgroundViewUpdateNeeded:]
  -[CAMZoomDial _updateBackroundImageViewIfNeeded]
  -[CAMZoomDial _layoutSubviewsWithDots]
  -[CAMZoomDial _layoutSubviewsWithTicks]
  -[CAMZoomDial _layoutBackgroundAndContainerWithContentInset:]
  -[CAMZoomDial _dotCenterForZoomFactor:assumeExpanded:relativeToCurrentZoomFactor:]
  -[CAMZoomDial _labelRotationAngleForOrientation]
  -[CAMZoomDial _ticksView]
  -[CAMZoomDial _needleView]
  -[CAMZoomDial _focalLengthInsetLandscape]
  -[CAMZoomDial _isBackgroundViewUpdateNeeded]
  -[CAMZoomDial _backgroundImageJobIdentifier]
  -[CAMZoomDial _setBackgroundImageJobIdentifier:]
  -[CAMZoomDial _isTicksUpdateNeeded]
  -[CAMZoomDial _ticksImageJobIdentifier]
  -[CAMZoomDial _setTicksImageJobIdentifier:]
  -[CAMZoomDial _isMaskUpdateNeeded]
  -[CAMZoomDial _maskImageJobIdentifier]
  -[CAMZoomDial _setMaskImageJobIdentifier:]
  -[CAMZoomDial dotCenterInset]
  -[CAMZoomDial _tickEndpointForOffsetAngle:isTop:]
  -[CAMZoomDial hideLabels]


CAMTimelapseStabilizationCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMTimelapseStabilizationCommand copyWithZone:]
  -[CAMTimelapseStabilizationCommand encodeWithCoder:]
  -[CAMTimelapseStabilizationCommand initWithCoder:]
  -[CAMTimelapseStabilizationCommand _isEnabled]
  -[CAMTimelapseStabilizationCommand executeWithContext:]
  -[CAMTimelapseStabilizationCommand initWithTimelapseStabilizationEnabled:]


CAMKeepAliveController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *_connection
 @property  NSObject<OS_dispatch_queue> *_keepAliveQueue
 @property  NSObject<OS_dispatch_source> *_heartbeatSource
 @property  NSObject<OS_dispatch_queue> *_heartbeatQueue

  // instance methods
  -[CAMKeepAliveController init]
  -[CAMKeepAliveController dealloc]
  -[CAMKeepAliveController _connection]
  -[CAMKeepAliveController .cxx_destruct]
  -[CAMKeepAliveController _setConnection:]
  -[CAMKeepAliveController _handleApplicationWillEnterForeground:]
  -[CAMKeepAliveController _handleApplicationDidEnterBackground:]
  -[CAMKeepAliveController startKeepAliveSession]
  -[CAMKeepAliveController sendCameraRollVisibilityChangedMessage:]
  -[CAMKeepAliveController stopKeepAliveSession]
  -[CAMKeepAliveController _setupConnectionIfNecessary]
  -[CAMKeepAliveController _teardownConnection]
  -[CAMKeepAliveController _keepAliveQueue]
  -[CAMKeepAliveController _keepAliveQueueCreateConnectionIfNecessary]
  -[CAMKeepAliveController _keepAliveQueueCreateHeartbeatIfNecessary]
  -[CAMKeepAliveController _keepAliveQueueTeardownConnection]
  -[CAMKeepAliveController _teardownHeartbeat]
  -[CAMKeepAliveController _heartbeatSource]
  -[CAMKeepAliveController _heartbeatQueue]
  -[CAMKeepAliveController _handleHeartbeatConnectionReply:]
  -[CAMKeepAliveController _handleHeartbeatSourceEvent]
  -[CAMKeepAliveController _setHeartbeatSource:]
  -[CAMKeepAliveController _keepAliveQueueTeardownHeartbeat]


CAMTimelapseController : NSObject /usr/lib/libSystem.B.dylib <CAMStillImageCaptureRequestDelegate, CAMNebulaDaemonTimelapseClientProtocol>
 @property  CAMTimelapseState *_state
 @property  CAMCaptureGraphConfiguration *_graphConfigurationForCurrentState
 @property  NSObject<OS_dispatch_source> *_captureTimer
 @property  BOOL _ignoringTimerCallbacksForTearDown
 @property  BOOL _ignoringTimerCallbacksWaitingForCaptureResponse
 @property  NSCountedSet *_inFlightTimelapseUUIDs
 @property  NSMutableSet *_pendingCompletedStates
 @property  BOOL _shouldUpdateFocusAndExposureWhenContrastDetectionCompletes
 @property  BOOL _backendRecoveryNeeded
 @property  BOOL _previewStarted
 @property  BOOL _focusAndExposureAdjusted
 @property  CUCaptureController *_captureController
 @property  CAMLocationController *_locationController
 @property  CAMMotionController *_motionController
 @property  CAMPersistenceController *_persistenceController
 @property  CAMStorageController *_storageController
 @property  CAMNebulaDaemonProxyManager *_nebulaDaemonProxyManager
 @property  <CAMTimelapseControllerDelegate> *delegate
 @property  BOOL capturing
 @property  NSDate *captureStartTime
 @property  CAMFocusResult *lastFocusResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMTimelapseController createPlaceholderResultForTimelapseState:]
  +[CAMTimelapseController _newVideoPreviewSurfaceForTimelapseState:]

  // instance methods
  -[CAMTimelapseController init]
  -[CAMTimelapseController dealloc]
  -[CAMTimelapseController delegate]
  -[CAMTimelapseController setDelegate:]
  -[CAMTimelapseController .cxx_destruct]
  -[CAMTimelapseController _state]
  -[CAMTimelapseController _applicationDidEnterBackground:]
  -[CAMTimelapseController _applicationWillEnterForeground:]
  -[CAMTimelapseController _persistenceController]
  -[CAMTimelapseController isCapturing]
  -[CAMTimelapseController _storageController]
  -[CAMTimelapseController _captureController]
  -[CAMTimelapseController stillImageRequestDidCompleteStillImageCapture:withResponse:error:]
  -[CAMTimelapseController stillImageRequestDidCompleteStillImageLocalPersistence:withResponse:error:]
  -[CAMTimelapseController _motionController]
  -[CAMTimelapseController _locationController]
  -[CAMTimelapseController startCapturingWithCaptureDevice:captureSession:]
  -[CAMTimelapseController stopCapturingWithReasons:]
  -[CAMTimelapseController forceStopTimelapseCaptureWithReasons:]
  -[CAMTimelapseController _nebulaDaemonProxyManager]
  -[CAMTimelapseController _deviceStarted:]
  -[CAMTimelapseController _sessionStarted:]
  -[CAMTimelapseController _sessionRuntimeErrored:]
  -[CAMTimelapseController _previewStarted:]
  -[CAMTimelapseController initWithCaptureController:locationController:motionController:persistenceController:storageController:nebulaDaemonProxyManager:]
  -[CAMTimelapseController _teardownCaptureTimer]
  -[CAMTimelapseController _restoreCaptureStateFromDisk]
  -[CAMTimelapseController _prepareForTimelapseCaptureSetModeAndDevice:]
  -[CAMTimelapseController _setBackendRecoveryNeeded:]
  -[CAMTimelapseController _triggerBackendCrashRecoveryIfNeeded]
  -[CAMTimelapseController _setFocusAndExposureAdjusted:]
  -[CAMTimelapseController _backendRecoveryNeeded]
  -[CAMTimelapseController _previewStarted]
  -[CAMTimelapseController _graphConfigurationForCurrentState]
  -[CAMTimelapseController _updateFocusAndExposureForStartCapturing]
  -[CAMTimelapseController _startCaptureTimer]
  -[CAMTimelapseController _startCapturingWithCaptureDevice:captureSession:]
  -[CAMTimelapseController _stopCapturingWithReasons:]
  -[CAMTimelapseController _setNewCaptureStateForCaptureDevice:captureSession:]
  -[CAMTimelapseController _invalidateCachedGraphConfiguration]
  -[CAMTimelapseController _reserveDiskSpaceForTimelapseUUID:preferHEVC:withCompletionBlock:]
  -[CAMTimelapseController _saveStateToDisk:]
  -[CAMTimelapseController _setShouldUpdateFocusAndExposureWhenContrastDetectionCompletes:]
  -[CAMTimelapseController _createThumbnailImageFromPlaceholderResult:]
  -[CAMTimelapseController _notifyAGGDForDidStopCapturingWithState:]
  -[CAMTimelapseController _notifyInsufficientDiskSpaceForStartingCaptureWithNeededBytes:availableBytes:]
  -[CAMTimelapseController _captureTimerFired]
  -[CAMTimelapseController _updateLocationIfNecessary]
  -[CAMTimelapseController _canCapturePhoto]
  -[CAMTimelapseController _enqueueCaptureRequest]
  -[CAMTimelapseController _notifyInsufficientDiskSpaceForContinuingCapture]
  -[CAMTimelapseController _isFocusAndExposureAdjusted]
  -[CAMTimelapseController _stillImageCaptureRequestWithCurrentSettings]
  -[CAMTimelapseController _shouldUpdateFocusAndExposureWhenContrastDetectionCompletes]
  -[CAMTimelapseController lastFocusResult]
  -[CAMTimelapseController _updateFocusLensPosition:forTimelapseUUID:forceUpdate:]
  -[CAMTimelapseController _resetIgnoringTimerCallbacksWaitingForCaptureResponse]
  -[CAMTimelapseController _setPreviewStarted:]
  -[CAMTimelapseController restoreConfiguration]
  -[CAMTimelapseController captureStartTime]
  -[CAMTimelapseController setLastFocusResult:]
  -[CAMTimelapseController _captureTimer]
  -[CAMTimelapseController _ignoringTimerCallbacksForTearDown]
  -[CAMTimelapseController _ignoringTimerCallbacksWaitingForCaptureResponse]
  -[CAMTimelapseController _inFlightTimelapseUUIDs]
  -[CAMTimelapseController _pendingCompletedStates]


CAMMachineReadableCodeResult : NSObject /usr/lib/libSystem.B.dylib <CAMMetadataObjectResult>
 @property  AVMetadataMachineReadableCodeObject *underlyingMachineReadableCodeObject
 @property  NSString *symbolString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *metadataType
 @property  NSString *uniqueIdentifier
 @property  AVMetadataObject *underlyingMetadataObject

  // instance methods
  -[CAMMachineReadableCodeResult .cxx_destruct]
  -[CAMMachineReadableCodeResult uniqueIdentifier]
  -[CAMMachineReadableCodeResult metadataType]
  -[CAMMachineReadableCodeResult isOfSignificantSize]
  -[CAMMachineReadableCodeResult underlyingMachineReadableCodeObject]
  -[CAMMachineReadableCodeResult initWithMachineReadableCodeObject:]
  -[CAMMachineReadableCodeResult underlyingMetadataObject]
  -[CAMMachineReadableCodeResult symbolString]


CAMPreviewLayerEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMPreviewLayerEnabledCommand copyWithZone:]
  -[CAMPreviewLayerEnabledCommand encodeWithCoder:]
  -[CAMPreviewLayerEnabledCommand initWithCoder:]
  -[CAMPreviewLayerEnabledCommand _isEnabled]
  -[CAMPreviewLayerEnabledCommand executeWithContext:]
  -[CAMPreviewLayerEnabledCommand initWithPreviewLayerEnabled:]


CAMFocusCommand : CAMCaptureCommand
 @property  long long _focusMode
 @property  {CGPoint=dd} _focusPointOfInterest
 @property  BOOL _shouldUseSmoothFocus

  // instance methods
  -[CAMFocusCommand copyWithZone:]
  -[CAMFocusCommand encodeWithCoder:]
  -[CAMFocusCommand initWithCoder:]
  -[CAMFocusCommand _focusMode]
  -[CAMFocusCommand _focusPointOfInterest]
  -[CAMFocusCommand executeWithContext:]
  -[CAMFocusCommand initWithFocusMode:smooth:]
  -[CAMFocusCommand initWithFocusMode:]
  -[CAMFocusCommand initWithFocusMode:atPointOfInterest:smooth:]
  -[CAMFocusCommand _shouldUseSmoothFocus]
  -[CAMFocusCommand initWithFocusMode:atPointOfInterest:]


CAMCameraReviewAdapter : NSObject /usr/lib/libSystem.B.dylib <CAMCameraCaptureDelegate>
 @property  NSMutableArray *_pendingAssetsForReview
 @property  UIViewController<CAMCameraReviewViewController> *cachedReviewViewController
 @property  UIViewController<CAMCameraReviewViewController> *cameraReviewViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMCameraReviewAdapter cameraReviewViewControllerClass]
  +[CAMCameraReviewAdapter reviewAssetForPhoto:withProperties:]
  +[CAMCameraReviewAdapter reviewAssetForLivePhoto:withProperties:]
  +[CAMCameraReviewAdapter reviewAssetForAVAsset:audioMix:properties:]

  // instance methods
  -[CAMCameraReviewAdapter init]
  -[CAMCameraReviewAdapter .cxx_destruct]
  -[CAMCameraReviewAdapter cameraViewController:didCapturePhoto:withProperties:error:]
  -[CAMCameraReviewAdapter cameraViewController:didCaptureLivePhoto:withProperties:error:]
  -[CAMCameraReviewAdapter cameraViewController:didCaptureAVAsset:andAudioMix:withProperties:error:]
  -[CAMCameraReviewAdapter _cachedReviewViewController]
  -[CAMCameraReviewAdapter _pendingAssetsForReview]
  -[CAMCameraReviewAdapter _setCachedReviewViewController:]
  -[CAMCameraReviewAdapter cameraReviewViewController]


CAMTransientImageManagerRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *uuid
 @property  @? resultHandler
 @property  BOOL isCanceled
 @property  BOOL isFinished

  // instance methods
  -[CAMTransientImageManagerRequest .cxx_destruct]
  -[CAMTransientImageManagerRequest isFinished]
  -[CAMTransientImageManagerRequest uuid]
  -[CAMTransientImageManagerRequest setUuid:]
  -[CAMTransientImageManagerRequest setIsFinished:]
  -[CAMTransientImageManagerRequest isCanceled]
  -[CAMTransientImageManagerRequest setIsCanceled:]
  -[CAMTransientImageManagerRequest resultHandler]
  -[CAMTransientImageManagerRequest setResultHandler:]


CAMTransientImageManager : NSObject /usr/lib/libSystem.B.dylib <PUTransientImageManager>
 @property  NSMutableDictionary *_pairedVideosByPairedUUID
 @property  NSMutableDictionary *_activeRequestsByPairedUUID
 @property  BOOL empty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMTransientImageManager init]
  -[CAMTransientImageManager isEmpty]
  -[CAMTransientImageManager .cxx_destruct]
  -[CAMTransientImageManager requestPairedVideoURLForUUID:resultHandler:]
  -[CAMTransientImageManager insertPairedVideoWithConvertible:filterType:]
  -[CAMTransientImageManager removePairedVideoForUUID:]
  -[CAMTransientImageManager existingPairedVideoUUIDs]
  -[CAMTransientImageManager _pairedVideosByPairedUUID]
  -[CAMTransientImageManager _activeRequestsByPairedUUID]
  -[CAMTransientImageManager _handleRequestTimeout:]
  -[CAMTransientImageManager existingPairedVideoForUUID:]


CAMPreviewConfigurationCommand : CAMCaptureCommand
  // instance methods
  -[CAMPreviewConfigurationCommand initWithPreviewConfiguration:]


CAMFocusIndicatorRectView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIImageView *_imageView
 @property  long long style
 @property  BOOL inactive
 @property  BOOL pulsing

  // instance methods
  -[CAMFocusIndicatorRectView .cxx_destruct]
  -[CAMFocusIndicatorRectView style]
  -[CAMFocusIndicatorRectView intrinsicContentSize]
  -[CAMFocusIndicatorRectView layoutSubviews]
  -[CAMFocusIndicatorRectView _imageView]
  -[CAMFocusIndicatorRectView initWithStyle:]
  -[CAMFocusIndicatorRectView setPulsing:]
  -[CAMFocusIndicatorRectView setInactive:]
  -[CAMFocusIndicatorRectView isInactive]
  -[CAMFocusIndicatorRectView isPulsing]


CAMUpdateFocusAndExposureForStartVideoRecordingCommand : CAMCaptureCommand
  // instance methods
  -[CAMUpdateFocusAndExposureForStartVideoRecordingCommand executeWithContext:]


CAMVideoPreviewView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  AVCaptureVideoPreviewLayer *videoPreviewLayer
 @property  UIView *previewLayerView
 @property  long long previewViewAspectMode
 @property  BOOL square

  // instance methods
  -[CAMVideoPreviewView dealloc]
  -[CAMVideoPreviewView .cxx_destruct]
  -[CAMVideoPreviewView initWithFrame:]
  -[CAMVideoPreviewView layoutSubviews]
  -[CAMVideoPreviewView videoPreviewLayer]
  -[CAMVideoPreviewView isSquare]
  -[CAMVideoPreviewView previewViewAspectMode]
  -[CAMVideoPreviewView setPreviewViewAspectMode:]
  -[CAMVideoPreviewView setVideoPreviewLayer:]
  -[CAMVideoPreviewView _frameForSubviewsAccountForSquare:]
  -[CAMVideoPreviewView _updateAspectModeForSublayers]
  -[CAMVideoPreviewView setSquare:animated:]
  -[CAMVideoPreviewView setSquare:]
  -[CAMVideoPreviewView previewLayerView]


CAMAspectCropUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMAspectCropUtilities finalExpectedSizeWithPhotoMetadata:aspectRatio:]
  +[CAMAspectCropUtilities cropRectForAspectRatio:inImageBounds:]
  +[CAMAspectCropUtilities finalExpectedSizeWithCaptureDimensions:orientation:aspectRatio:]
  +[CAMAspectCropUtilities cropFilterForAspectRatio:imageSize:]


CAMStillImageCaptureResult : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{__IOSurface=} stillImageFullsizeSurface
 @property  unsigned long stillImageFullsizeSurfaceSize
 @property  ^{__IOSurface=} stillImageUnfilteredPreviewSurface
 @property  ^{__IOSurface=} stillImageFilteredPreviewSurface
 @property  AVCapturePhoto *capturePhoto
 @property  NSString *deferredPhotoIdentifier
 @property  NSDate *captureDate
 @property  NSDictionary *metadata
 @property  NSDictionary *compactMetadata
 @property  NSError *error
 @property  BOOL shouldPersistAdjustmentSidecar
 @property  NSArray *adjustmentFilters
 @property  NSString *persistenceUUID
 @property  CAMCaptureCoordinationInfo *coordinationInfo
 @property  NSString *imageGroupIdentifier
 @property  BOOL expectingPairedVideo

  // instance methods
  -[CAMStillImageCaptureResult dealloc]
  -[CAMStillImageCaptureResult .cxx_destruct]
  -[CAMStillImageCaptureResult error]
  -[CAMStillImageCaptureResult metadata]
  -[CAMStillImageCaptureResult captureDate]
  -[CAMStillImageCaptureResult deferredPhotoIdentifier]
  -[CAMStillImageCaptureResult imageGroupIdentifier]
  -[CAMStillImageCaptureResult isExpectingPairedVideo]
  -[CAMStillImageCaptureResult persistenceUUID]
  -[CAMStillImageCaptureResult coordinationInfo]
  -[CAMStillImageCaptureResult capturePhoto]
  -[CAMStillImageCaptureResult initWithFullsizeSurface:size:unfilteredPreviewSurface:filteredPreviewSurface:metadata:expectingPairedVideo:shouldPersistAdjustmentSidecar:adjustmentFilters:persistenceUUID:coordinationInfo:error:]
  -[CAMStillImageCaptureResult stillImageFilteredPreviewSurface]
  -[CAMStillImageCaptureResult stillImageUnfilteredPreviewSurface]
  -[CAMStillImageCaptureResult stillImageFullsizeSurface]
  -[CAMStillImageCaptureResult stillImageFullsizeSurfaceSize]
  -[CAMStillImageCaptureResult shouldPersistAdjustmentSidecar]
  -[CAMStillImageCaptureResult adjustmentFilters]
  -[CAMStillImageCaptureResult compactMetadataWithSecondaryMakerNote:]
  -[CAMStillImageCaptureResult _captureDateFromMetadata:]
  -[CAMStillImageCaptureResult initWithCapturePhoto:expectingPairedVideo:adjustmentFilters:filteredPreviewSurface:shouldPersistAdjustmentSidecar:persistenceUUID:coordinationInfo:error:]
  -[CAMStillImageCaptureResult initWithCaptureDeferredPhotoProxy:expectingPairedVideo:adjustmentFilters:filteredPreviewSurface:shouldPersistAdjustmentSidecar:persistenceUUID:coordinationInfo:error:]
  -[CAMStillImageCaptureResult compactMetadata]


CAMFormattingManager : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL wantsCustomKerning
 @property  BOOL supportsVerticalText

  // class methods
  +[CAMFormattingManager sharedManager]

  // instance methods
  -[CAMFormattingManager init]
  -[CAMFormattingManager wantsCustomKerning]
  -[CAMFormattingManager _commonCAMFormattingManagerInitialization]
  -[CAMFormattingManager supportsVerticalText]


CAMCaptureCommand : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSCoding>
 @property  NSArray *subcommands
 @property  NSString *reason
 @property  BOOL requiresSessionModification
 @property  NSString *sessionModificationLogReason
 @property  NSDictionary *userInfo

  // instance methods
  -[CAMCaptureCommand init]
  -[CAMCaptureCommand copyWithZone:]
  -[CAMCaptureCommand userInfo]
  -[CAMCaptureCommand encodeWithCoder:]
  -[CAMCaptureCommand initWithCoder:]
  -[CAMCaptureCommand reason]
  -[CAMCaptureCommand .cxx_destruct]
  -[CAMCaptureCommand setReason:]
  -[CAMCaptureCommand executeWithContext:]
  -[CAMCaptureCommand initWithSubcommands:]
  -[CAMCaptureCommand addSubcommand:]
  -[CAMCaptureCommand requiresSessionModification]
  -[CAMCaptureCommand sessionModificationLogReason]
  -[CAMCaptureCommand subcommands]
  -[CAMCaptureCommand setSubcommands:]
  -[CAMCaptureCommand removeSubcommand:]


CAMCaptureRequestIntervalometer : NSObject /usr/lib/libSystem.B.dylib
 @property  long long remaining
 @property  CAMPreciseTimer *_timer
 @property  CAMCaptureRequest *prototypeRequest
 @property  <CAMCaptureRequestIntervalometerDelegate> *delegate
 @property  double interval
 @property  double delay
 @property  long long maximumCount

  // instance methods
  -[CAMCaptureRequestIntervalometer init]
  -[CAMCaptureRequestIntervalometer delegate]
  -[CAMCaptureRequestIntervalometer .cxx_destruct]
  -[CAMCaptureRequestIntervalometer interval]
  -[CAMCaptureRequestIntervalometer delay]
  -[CAMCaptureRequestIntervalometer _timer]
  -[CAMCaptureRequestIntervalometer remaining]
  -[CAMCaptureRequestIntervalometer maximumCount]
  -[CAMCaptureRequestIntervalometer setRemaining:]
  -[CAMCaptureRequestIntervalometer initWithDelegate:interval:delay:maximumCount:]
  -[CAMCaptureRequestIntervalometer setPrototypeRequest:]
  -[CAMCaptureRequestIntervalometer startGeneratingRequests]
  -[CAMCaptureRequestIntervalometer manuallyGenerateRequest]
  -[CAMCaptureRequestIntervalometer prototypeRequest]
  -[CAMCaptureRequestIntervalometer stopGeneratingRequests]
  -[CAMCaptureRequestIntervalometer _generateRequestForDelegate]


CAMPanoramaArrowView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMPanoramaArrowView dealloc]
  -[CAMPanoramaArrowView .cxx_destruct]
  -[CAMPanoramaArrowView reset]
  -[CAMPanoramaArrowView intrinsicContentSize]
  -[CAMPanoramaArrowView initWithFrame:]
  -[CAMPanoramaArrowView layoutSubviews]
  -[CAMPanoramaArrowView _updateTailWithAnimationDuration:]
  -[CAMPanoramaArrowView _newTailPiecesPathOfWidth:]
  -[CAMPanoramaArrowView animateWithNormalizedSpeed:duration:]


CAMUtilityBar : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CEKWheelScrubberView *filterScrubberView
 @property  CEKApertureSlider *apertureSlider
 @property  CEKSlider *intensitySlider
 @property  unsigned long visibleContent

  // instance methods
  -[CAMUtilityBar .cxx_destruct]
  -[CAMUtilityBar layoutSubviews]
  -[CAMUtilityBar hitTest:withEvent:]
  -[CAMUtilityBar _layoutFilterScrubberView]
  -[CAMUtilityBar apertureSlider]
  -[CAMUtilityBar intensitySlider]
  -[CAMUtilityBar filterScrubberView]
  -[CAMUtilityBar setFilterScrubberView:]
  -[CAMUtilityBar setApertureSlider:]
  -[CAMUtilityBar setIntensitySlider:]
  -[CAMUtilityBar visibleContent]
  -[CAMUtilityBar setVisibleContent:animated:]
  -[CAMUtilityBar _updateVisibilityForUpdatedContent:contentView:]
  -[CAMUtilityBar setVisibleContent:]
  -[CAMUtilityBar _updateVisibleViewAnimated:]
  -[CAMUtilityBar _layoutPortraitApertureSlider]
  -[CAMUtilityBar _layoutSliderView:]


CAMCTMCancelMomentCaptureCommand : CAMCaptureCommand
 @property  NSString *_persistenceUUID

  // instance methods
  -[CAMCTMCancelMomentCaptureCommand copyWithZone:]
  -[CAMCTMCancelMomentCaptureCommand encodeWithCoder:]
  -[CAMCTMCancelMomentCaptureCommand initWithCoder:]
  -[CAMCTMCancelMomentCaptureCommand .cxx_destruct]
  -[CAMCTMCancelMomentCaptureCommand executeWithContext:]
  -[CAMCTMCancelMomentCaptureCommand _persistenceUUID]
  -[CAMCTMCancelMomentCaptureCommand initWithPersistenceUUID:]


CAMStartPanoramaCommand : CAMCaptureCommand
 @property  CAMPanoramaCaptureRequest *_request

  // instance methods
  -[CAMStartPanoramaCommand copyWithZone:]
  -[CAMStartPanoramaCommand encodeWithCoder:]
  -[CAMStartPanoramaCommand initWithCoder:]
  -[CAMStartPanoramaCommand .cxx_destruct]
  -[CAMStartPanoramaCommand _request]
  -[CAMStartPanoramaCommand initWithRequest:]
  -[CAMStartPanoramaCommand executeWithContext:]


CAMMemoizationCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *_dictionary
 @property  BOOL memoizesNil

  // instance methods
  -[CAMMemoizationCache init]
  -[CAMMemoizationCache .cxx_destruct]
  -[CAMMemoizationCache enumerateKeysAndObjectsUsingBlock:]
  -[CAMMemoizationCache _dictionary]
  -[CAMMemoizationCache initWithMemoizesNil:]
  -[CAMMemoizationCache objectForKey:memoizationBlock:]
  -[CAMMemoizationCache memoizesNil]


CAMVideoPersistenceCoordinator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *_receivedCoordinationInfos
 @property  NSMutableDictionary *_pendingLocalPersistenceResults
 @property  <CAMVideoPersistenceCoordinationDelegate> *delegate
 @property  BOOL hasReceivedAllExpectedResponses

  // instance methods
  -[CAMVideoPersistenceCoordinator delegate]
  -[CAMVideoPersistenceCoordinator .cxx_destruct]
  -[CAMVideoPersistenceCoordinator initWithDelegate:]
  -[CAMVideoPersistenceCoordinator _receivedCoordinationInfos]
  -[CAMVideoPersistenceCoordinator _pendingLocalPersistenceResults]
  -[CAMVideoPersistenceCoordinator _dispatchRemotePersistenceIfPossibleForPairWithOriginalResultSpecifiers:overCaptureResultSpecifiers:request:identifier:shouldPersistAsSingleAsset:]
  -[CAMVideoPersistenceCoordinator _dispatchRemotePersistenceIfPossibleForResultSpecifiers:request:]
  -[CAMVideoPersistenceCoordinator _debugStringForUnreceivedResultSpecifiersFromExpectedResultSpecifiers:receivedCoordinationInfos:]
  -[CAMVideoPersistenceCoordinator _powerAssertionReasonForResultSpecifiers:]
  -[CAMVideoPersistenceCoordinator updateForCoordinationInfo:localPersistenceResult:request:]
  -[CAMVideoPersistenceCoordinator updateForTimeoutTimerFiredForCoordinationInfo:request:]
  -[CAMVideoPersistenceCoordinator hasReceivedAllExpectedResponses]


CAMHDRButton : CAMExpandableMenuButton <CAMAccessibilityHUDImageProvider>
 @property  UIImageView *_glyphView
 @property  NSArray *_allowedModes
 @property  long long HDRMode
 @property  BOOL allowsAutomaticHDR
 @property  BOOL allowsHDROn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMHDRButton .cxx_destruct]
  -[CAMHDRButton initWithFrame:]
  -[CAMHDRButton reloadData]
  -[CAMHDRButton headerView]
  -[CAMHDRButton HDRMode]
  -[CAMHDRButton setHDRMode:]
  -[CAMHDRButton _glyphView]
  -[CAMHDRButton initWithLayoutStyle:]
  -[CAMHDRButton numberOfMenuItems]
  -[CAMHDRButton titleForMenuItemAtIndex:]
  -[CAMHDRButton imageForAccessibilityHUD]
  -[CAMHDRButton setAllowsAutomaticHDR:needsReloadData:]
  -[CAMHDRButton setAllowsHDROn:]
  -[CAMHDRButton modeForIndex:]
  -[CAMHDRButton indexForMode:]
  -[CAMHDRButton prepareHeaderViewForExpanding:]
  -[CAMHDRButton _updateCurrentGlyphImage]
  -[CAMHDRButton padHeaderViewContentInsetLeft]
  -[CAMHDRButton _currentGlyphImageForAccessibilityHUD:]
  -[CAMHDRButton _updateAllowedModes]
  -[CAMHDRButton _commonCAMHDRButtonInitialization]
  -[CAMHDRButton _updateFromAllowedModesChangeWithCurrentMode:needsReloadData:]
  -[CAMHDRButton allowsAutomaticHDR]
  -[CAMHDRButton allowsHDROn]
  -[CAMHDRButton _setAllowedModes:]
  -[CAMHDRButton _allowedModes]
  -[CAMHDRButton shouldAllowExpansion]
  -[CAMHDRButton setAllowsAutomaticHDR:]


CAMEffectFilterManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMEffectFilterManager filtersForFilterType:lightingType:applyDepthEffect:]
  +[CAMEffectFilterManager aggdNameForType:]
  +[CAMEffectFilterManager displayNameForType:]
  +[CAMEffectFilterManager ciFilterNameForFilterType:]
  +[CAMEffectFilterManager ciFilterNameForFilterType:lightingType:]


CAMCaptureResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  long long type
 @property  unsigned short sessionIdentifier
 @property  CAMCaptureCoordinationInfo *coordinationInfo

  // instance methods
  -[CAMCaptureResponse init]
  -[CAMCaptureResponse type]
  -[CAMCaptureResponse .cxx_destruct]
  -[CAMCaptureResponse sessionIdentifier]
  -[CAMCaptureResponse coordinationInfo]
  -[CAMCaptureResponse initWithType:captureSession:coordinationInfo:]
  -[CAMCaptureResponse releaseCachedImages]


CAMFaceIndicatorView : UIImageView /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMFaceIndicatorView initWithCoder:]
  -[CAMFaceIndicatorView initWithImage:]
  -[CAMFaceIndicatorView initWithFrame:]
  -[CAMFaceIndicatorView initWithImage:highlightedImage:]
  -[CAMFaceIndicatorView _commonCAMFaceIndicatorViewInitialization]


CAMStillImageCaptureResponse : CAMCaptureResponse <CAMTransientAssetConvertible>
 @property  NSString *persistenceUUID
 @property  NSDate *captureDate
 @property  NSDictionary *metadata
 @property  NSString *burstIdentifier
 @property  unsigned long burstRepresentedCount
 @property  UIImage *imageWellImage
 @property  BOOL flashFired
 @property  BOOL expectingPairedVideo
 @property  {CGSize=dd} finalExpectedPixelSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSString *uuid
 @property  unsigned short sessionIdentifier
 @property  NSURL *persistenceURL
 @property  UIImage *placeholderImage
 @property  NSDictionary *stillImageMetadata
 @property  unsigned long numberOfRepresentedAssets
 @property  {?=qiIq} duration
 @property  NSString *irisStillImageUUID
 @property  NSURL *irisVideoPersistenceURL
 @property  {?=qiIq} irisStillDisplayTime

  // instance methods
  -[CAMStillImageCaptureResponse .cxx_destruct]
  -[CAMStillImageCaptureResponse uuid]
  -[CAMStillImageCaptureResponse duration]
  -[CAMStillImageCaptureResponse metadata]
  -[CAMStillImageCaptureResponse mediaType]
  -[CAMStillImageCaptureResponse placeholderImage]
  -[CAMStillImageCaptureResponse captureDate]
  -[CAMStillImageCaptureResponse burstIdentifier]
  -[CAMStillImageCaptureResponse flashFired]
  -[CAMStillImageCaptureResponse mediaSubtypes]
  -[CAMStillImageCaptureResponse numberOfRepresentedAssets]
  -[CAMStillImageCaptureResponse persistenceURL]
  -[CAMStillImageCaptureResponse finalExpectedPixelSize]
  -[CAMStillImageCaptureResponse isExpectingPairedVideo]
  -[CAMStillImageCaptureResponse irisStillDisplayTime]
  -[CAMStillImageCaptureResponse persistenceUUID]
  -[CAMStillImageCaptureResponse imageWellImage]
  -[CAMStillImageCaptureResponse stillImageMetadata]
  -[CAMStillImageCaptureResponse irisStillImageUUID]
  -[CAMStillImageCaptureResponse irisVideoPersistenceURL]
  -[CAMStillImageCaptureResponse initWithUUID:captureSession:captureDate:metadata:burstIdentifier:burstRepresentedCount:imageWellImage:coordinationInfo:finalExpectedPixelSize:expectingPairedVideo:]
  -[CAMStillImageCaptureResponse burstRepresentedCount]


CAMBurstController : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_mutexQueue
 @property  NSMutableDictionary *_sessionsByIdentifier
 @property  NSCountedSet *_inflightRequestsByIdentifier
 @property  NSCountedSet *_requestsPendingPersistenceByIdentifier
 @property  NSMutableDictionary *_faceResultsByIdentifier
 @property  CAMBurstSession *_activeSession
 @property  NSObject<OS_dispatch_queue> *_analysisQueue
 @property  CAMPersistenceController *_persistenceController
 @property  CAMProtectionController *_protectionController
 @property  CAMPowerController *_powerController
 @property  CAMRemoteShutterController *_remoteShutterController
 @property  NSString *currentBurstIdentifier
 @property  unsigned long currentBurstCount

  // instance methods
  -[CAMBurstController init]
  -[CAMBurstController .cxx_destruct]
  -[CAMBurstController _persistenceController]
  -[CAMBurstController setPersistenceController:]
  -[CAMBurstController _mutexQueue]
  -[CAMBurstController _sessionsByIdentifier]
  -[CAMBurstController _powerController]
  -[CAMBurstController _activeSession]
  -[CAMBurstController _remoteShutterController]
  -[CAMBurstController _protectionController]
  -[CAMBurstController processPersistedRequest:withResult:]
  -[CAMBurstController estimatedCountForIdentifier:]
  -[CAMBurstController currentBurstIdentifier]
  -[CAMBurstController processEnqueuedRequest:]
  -[CAMBurstController currentBurstCount]
  -[CAMBurstController startBurstCapture]
  -[CAMBurstController finishBurstCaptureForDevice:]
  -[CAMBurstController processCapturedRequest:withResult:]
  -[CAMBurstController processFaceResults:]
  -[CAMBurstController initWithProtectionController:powerController:remoteShutterController:]
  -[CAMBurstController _setActiveSession:]
  -[CAMBurstController _requestsPendingPersistenceByIdentifier]
  -[CAMBurstController _faceResultsByIdentifier]
  -[CAMBurstController _analysisQueue]
  -[CAMBurstController _mutexQueueProcessCompleteBurstSessionWithIdentifier:device:]
  -[CAMBurstController _inflightRequestsByIdentifier]
  -[CAMBurstController cancelBurstCapture]
  -[CAMBurstController inflightCountForIdentifier:]


CAMTorchPatternController : NSObject /usr/lib/libSystem.B.dylib
 @property  CUCaptureController *_captureController
 @property  BOOL _performing
 @property  CAMTorchPattern *_currentPattern
 @property  double _startTime
 @property  CADisplayLink *_displayLink
 @property  double stepInterval

  // instance methods
  -[CAMTorchPatternController .cxx_destruct]
  -[CAMTorchPatternController _startTime]
  -[CAMTorchPatternController _displayLink]
  -[CAMTorchPatternController displayLinkFired:]
  -[CAMTorchPatternController _isPerforming]
  -[CAMTorchPatternController blink]
  -[CAMTorchPatternController _captureController]
  -[CAMTorchPatternController initWithCaptureController:]
  -[CAMTorchPatternController doubleBlink]
  -[CAMTorchPatternController stopPerformingPattern]
  -[CAMTorchPatternController _setPerforming:]
  -[CAMTorchPatternController _resetTorchLevel]
  -[CAMTorchPatternController _applyTorchLevel:]
  -[CAMTorchPatternController startPerformingPattern:]
  -[CAMTorchPatternController stepInterval]
  -[CAMTorchPatternController setStepInterval:]
  -[CAMTorchPatternController _currentPattern]


CAMWhiteBalanceCommand : CAMCaptureCommand
 @property  BOOL _matchExposureMode
 @property  long long _whiteBalanceMode

  // instance methods
  -[CAMWhiteBalanceCommand copyWithZone:]
  -[CAMWhiteBalanceCommand encodeWithCoder:]
  -[CAMWhiteBalanceCommand initWithCoder:]
  -[CAMWhiteBalanceCommand _whiteBalanceMode]
  -[CAMWhiteBalanceCommand executeWithContext:]
  -[CAMWhiteBalanceCommand initWithWhiteBalanceMode:]
  -[CAMWhiteBalanceCommand initWithMatchExposureMode]
  -[CAMWhiteBalanceCommand _matchExposureMode]
  -[CAMWhiteBalanceCommand _descriptionForWhiteBalanceMode:]


CAMFocusAtCenterForVideoRecordingCommand : CAMCaptureCommand
  // instance methods
  -[CAMFocusAtCenterForVideoRecordingCommand executeWithContext:]


CAMTorchCommand : CAMCaptureCommand
 @property  long long _torchMode
 @property  float _level

  // instance methods
  -[CAMTorchCommand copyWithZone:]
  -[CAMTorchCommand encodeWithCoder:]
  -[CAMTorchCommand initWithCoder:]
  -[CAMTorchCommand _level]
  -[CAMTorchCommand _torchMode]
  -[CAMTorchCommand executeWithContext:]
  -[CAMTorchCommand initWithTorchMode:]
  -[CAMTorchCommand initWithTorchLevel:]


CAMModeSwitchTestHarness : CAMModeAndDeviceConfigurationTestHarness
 @property  CAMViewfinderViewController *viewfinderViewController
 @property  long long desiredMode
 @property  BOOL testingAnimation

  // instance methods
  -[CAMModeSwitchTestHarness .cxx_destruct]
  -[CAMModeSwitchTestHarness desiredMode]
  -[CAMModeSwitchTestHarness startTesting]
  -[CAMModeSwitchTestHarness handleDidOpenViewfinderForReason:]
  -[CAMModeSwitchTestHarness viewfinderViewController]
  -[CAMModeSwitchTestHarness initWithTestName:viewfinderViewController:mode:testingAnimation:]
  -[CAMModeSwitchTestHarness isTestingAnimation]
  -[CAMModeSwitchTestHarness _ensureCaptureMode:thenPerform:]


CAMTimelapseSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  double initialCaptureTimeInterval
 @property  double maxOutputFPS
 @property  double maxOutputLength
 @property  long long maxOutputFrames
 @property  long long maxMovieWriteAttempts
 @property  long long maxFailedStateReadAttempts

  // class methods
  +[CAMTimelapseSettings sharedInstance]

  // instance methods
  -[CAMTimelapseSettings init]
  -[CAMTimelapseSettings initialCaptureTimeInterval]
  -[CAMTimelapseSettings maxOutputFrames]
  -[CAMTimelapseSettings minAvailableBytesNeededForCaptureForWidth:height:useHEVC:]
  -[CAMTimelapseSettings maxOutputLength]
  -[CAMTimelapseSettings maxOutputFPS]
  -[CAMTimelapseSettings _outputSettingsPresetForWidth:height:]
  -[CAMTimelapseSettings _averageMovieBitrateForWidth:height:useHEVC:]
  -[CAMTimelapseSettings maxMovieFileLengthForWidth:height:useHEVC:]
  -[CAMTimelapseSettings outputFPSForFrameCount:]
  -[CAMTimelapseSettings outputSettingsForWidth:height:videoFormatDescription:framesPerSecond:frameCount:useHEVC:]
  -[CAMTimelapseSettings maxMovieWriteAttempts]
  -[CAMTimelapseSettings waitTimeBeforeNextWriteForNumberOfPreviousAttempts:]
  -[CAMTimelapseSettings maxFailedStateReadAttempts]


CAMFlashCommand : CAMCaptureCommand <NSCopying, NSCoding>
 @property  long long _flashMode

  // instance methods
  -[CAMFlashCommand copyWithZone:]
  -[CAMFlashCommand encodeWithCoder:]
  -[CAMFlashCommand initWithCoder:]
  -[CAMFlashCommand _flashMode]
  -[CAMFlashCommand executeWithContext:]
  -[CAMFlashCommand initWithFlashMode:]


CAMPortraitApertureCommand : CAMCaptureCommand
 @property  double aperture

  // instance methods
  -[CAMPortraitApertureCommand copyWithZone:]
  -[CAMPortraitApertureCommand encodeWithCoder:]
  -[CAMPortraitApertureCommand initWithCoder:]
  -[CAMPortraitApertureCommand aperture]
  -[CAMPortraitApertureCommand executeWithContext:]
  -[CAMPortraitApertureCommand initWithAperture:]


CAMExpandableMenuButton : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMAccessibilityHUDItemProvider>
 @property  NSMutableArray *_menuItems
 @property  UIView *_headerView
 @property  NSIndexSet *_shownIndexesWhileCollapsed
 @property  NSMutableIndexSet *_highlightedIndexesWhileCollapsed
 @property  UIImageView *_padBackgroundView
 @property  UIView *_trackingView
 @property  BOOL _trackingViewHighlighted
 @property  <CAMExpandableMenuButtonDelegate> *expandableMenuDelegate
 @property  CAMTouchingGestureRecognizer *touchingGestureRecognizer
 @property  long long layoutStyle
 @property  long long selectedIndex
 @property  BOOL expanded
 @property  long long orientation
 @property  {UIEdgeInsets=dddd} tappableEdgeInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMExpandableMenuButton expansionDuration]

  // instance methods
  -[CAMExpandableMenuButton initWithCoder:]
  -[CAMExpandableMenuButton .cxx_destruct]
  -[CAMExpandableMenuButton orientation]
  -[CAMExpandableMenuButton setOrientation:]
  -[CAMExpandableMenuButton intrinsicContentSize]
  -[CAMExpandableMenuButton initWithFrame:]
  -[CAMExpandableMenuButton layoutSubviews]
  -[CAMExpandableMenuButton alignmentRectInsets]
  -[CAMExpandableMenuButton reloadData]
  -[CAMExpandableMenuButton headerView]
  -[CAMExpandableMenuButton _headerView]
  -[CAMExpandableMenuButton setLayoutStyle:]
  -[CAMExpandableMenuButton layoutStyle]
  -[CAMExpandableMenuButton setOrientation:animated:]
  -[CAMExpandableMenuButton selectedIndex]
  -[CAMExpandableMenuButton setSelectedIndex:]
  -[CAMExpandableMenuButton isExpanded]
  -[CAMExpandableMenuButton _menuItems]
  -[CAMExpandableMenuButton _trackingView]
  -[CAMExpandableMenuButton initWithLayoutStyle:]
  -[CAMExpandableMenuButton numberOfMenuItems]
  -[CAMExpandableMenuButton titleForMenuItemAtIndex:]
  -[CAMExpandableMenuButton tappableEdgeInsets]
  -[CAMExpandableMenuButton setTappableEdgeInsets:]
  -[CAMExpandableMenuButton updateToContentSize:]
  -[CAMExpandableMenuButton _handleTouchGesture:]
  -[CAMExpandableMenuButton touchingGestureRecognizer]
  -[CAMExpandableMenuButton hudItemForAccessibilityHUDManager:]
  -[CAMExpandableMenuButton selectedByAccessibilityHUDManager:]
  -[CAMExpandableMenuButton setExpandableMenuDelegate:]
  -[CAMExpandableMenuButton intrinsicContentSizeForExpansion:]
  -[CAMExpandableMenuButton frameForAlignmentRect:expanded:]
  -[CAMExpandableMenuButton startCollapsingWithProposedFrame:]
  -[CAMExpandableMenuButton finishCollapsingAnimated:]
  -[CAMExpandableMenuButton alignmentRectForFrame:expanded:]
  -[CAMExpandableMenuButton startExpansionWithProposedFrame:]
  -[CAMExpandableMenuButton finishExpansionAnimated:]
  -[CAMExpandableMenuButton collapseMenuAnimated:]
  -[CAMExpandableMenuButton wantsSelectedItemToBeVisible]
  -[CAMExpandableMenuButton setHighlighted:forIndex:]
  -[CAMExpandableMenuButton prepareHeaderViewForExpanding:]
  -[CAMExpandableMenuButton padHeaderViewContentInsetLeft]
  -[CAMExpandableMenuButton shownIndexesWhileCollapsed]
  -[CAMExpandableMenuButton collapsedSelectedLabelHorizontalMargin]
  -[CAMExpandableMenuButton shouldIgnoreMenuInteraction]
  -[CAMExpandableMenuButton shouldAllowExpansion]
  -[CAMExpandableMenuButton _updateFromExpansionChangeAnimated:]
  -[CAMExpandableMenuButton _updateFromOrientationChangeAnimated:]
  -[CAMExpandableMenuButton _layoutMenuButton:expanded:]
  -[CAMExpandableMenuButton _selectedLabel]
  -[CAMExpandableMenuButton _layoutForPhoneExpandedLandscapeButton:]
  -[CAMExpandableMenuButton _layoutForPhoneExpandedPortraitButton:]
  -[CAMExpandableMenuButton _layoutForPhoneCollapsedLandscapeButton:]
  -[CAMExpandableMenuButton _layoutForPhoneCollapsedPortraitButton:]
  -[CAMExpandableMenuButton _layoutForPadExpandedPortraitButton:]
  -[CAMExpandableMenuButton _layoutForPadCollapsedPortraitButton:]
  -[CAMExpandableMenuButton _layoutForPhoneStyle:expanded:]
  -[CAMExpandableMenuButton _layoutForPadStyle:expanded:]
  -[CAMExpandableMenuButton _shownIndexesWhileCollapsed]
  -[CAMExpandableMenuButton _updateFromSelectedIndexChange]
  -[CAMExpandableMenuButton _applyMenuItemColorsForCurrentState]
  -[CAMExpandableMenuButton _applyMenuItemAlphaForCurrentExpansionState]
  -[CAMExpandableMenuButton _createPadBackgroundView]
  -[CAMExpandableMenuButton _applyMenuItemTextAlignmentAndShadowForCurrentOrientation]
  -[CAMExpandableMenuButton _wantsHeaderViewToBeVisible]
  -[CAMExpandableMenuButton _applyHeaderViewForCurrentExpansionState]
  -[CAMExpandableMenuButton _convertAllSubviewsToProposedFrame:]
  -[CAMExpandableMenuButton _viewToTrackForTouchAtLocation:]
  -[CAMExpandableMenuButton _setTrackingView:]
  -[CAMExpandableMenuButton _setTrackingViewHighlighted:]
  -[CAMExpandableMenuButton _isTrackingViewHighlighted]
  -[CAMExpandableMenuButton expandableMenuDelegate]
  -[CAMExpandableMenuButton expandMenuAnimated:]
  -[CAMExpandableMenuButton completeExpansionToProposedFrame:]
  -[CAMExpandableMenuButton _highlightedIndexesWhileCollapsed]
  -[CAMExpandableMenuButton _padBackgroundView]


CAMPreparePhotoSettingsCommand : CAMCaptureCommand
 @property  CAMCaptureGraphConfiguration *_desiredGraphConfiguration

  // instance methods
  -[CAMPreparePhotoSettingsCommand copyWithZone:]
  -[CAMPreparePhotoSettingsCommand encodeWithCoder:]
  -[CAMPreparePhotoSettingsCommand initWithCoder:]
  -[CAMPreparePhotoSettingsCommand .cxx_destruct]
  -[CAMPreparePhotoSettingsCommand executeWithContext:]
  -[CAMPreparePhotoSettingsCommand _desiredGraphConfiguration]
  -[CAMPreparePhotoSettingsCommand initWithGraphConfiguration:]


CAMStereoAudioCaptureCommand : CAMCaptureCommand
 @property  BOOL stereoAudioCaptureEnabled

  // instance methods
  -[CAMStereoAudioCaptureCommand copyWithZone:]
  -[CAMStereoAudioCaptureCommand encodeWithCoder:]
  -[CAMStereoAudioCaptureCommand initWithCoder:]
  -[CAMStereoAudioCaptureCommand executeWithContext:]
  -[CAMStereoAudioCaptureCommand initWithStereoAudioCaptureEnabled:]
  -[CAMStereoAudioCaptureCommand isStereoAudioCaptureEnabled]


CAMShallowDepthOfFieldBadge : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CEKBadgeTextView *_enabledTextView
 @property  CEKBadgeTextView *_disabledTextView
 @property  long long shallowDepthOfFieldStatus

  // instance methods
  -[CAMShallowDepthOfFieldBadge .cxx_destruct]
  -[CAMShallowDepthOfFieldBadge intrinsicContentSize]
  -[CAMShallowDepthOfFieldBadge initWithFrame:]
  -[CAMShallowDepthOfFieldBadge sizeThatFits:]
  -[CAMShallowDepthOfFieldBadge layoutSubviews]
  -[CAMShallowDepthOfFieldBadge updateToContentSize:]
  -[CAMShallowDepthOfFieldBadge setShallowDepthOfFieldStatus:animated:]
  -[CAMShallowDepthOfFieldBadge setShallowDepthOfFieldStatus:]
  -[CAMShallowDepthOfFieldBadge shallowDepthOfFieldStatus]
  -[CAMShallowDepthOfFieldBadge _updateForShallowDepthOfFieldStatusAnimated:]
  -[CAMShallowDepthOfFieldBadge _enabledTextView]
  -[CAMShallowDepthOfFieldBadge _disabledTextView]


CAMStillImagePersistenceResponse : CAMPersistenceResponse <CAMTransientAssetConvertible>
 @property  NSDictionary *metadata
 @property  NSString *burstIdentifier
 @property  unsigned long burstRepresentedCount
 @property  BOOL expectingPairedVideo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSString *uuid
 @property  unsigned short sessionIdentifier
 @property  NSURL *persistenceURL
 @property  NSDate *captureDate
 @property  UIImage *placeholderImage
 @property  {CGSize=dd} finalExpectedPixelSize
 @property  NSDictionary *stillImageMetadata
 @property  unsigned long numberOfRepresentedAssets
 @property  {?=qiIq} duration
 @property  NSString *irisStillImageUUID
 @property  NSURL *irisVideoPersistenceURL
 @property  {?=qiIq} irisStillDisplayTime

  // instance methods
  -[CAMStillImagePersistenceResponse .cxx_destruct]
  -[CAMStillImagePersistenceResponse uuid]
  -[CAMStillImagePersistenceResponse duration]
  -[CAMStillImagePersistenceResponse metadata]
  -[CAMStillImagePersistenceResponse mediaType]
  -[CAMStillImagePersistenceResponse placeholderImage]
  -[CAMStillImagePersistenceResponse captureDate]
  -[CAMStillImagePersistenceResponse burstIdentifier]
  -[CAMStillImagePersistenceResponse mediaSubtypes]
  -[CAMStillImagePersistenceResponse numberOfRepresentedAssets]
  -[CAMStillImagePersistenceResponse finalExpectedPixelSize]
  -[CAMStillImagePersistenceResponse isExpectingPairedVideo]
  -[CAMStillImagePersistenceResponse irisStillDisplayTime]
  -[CAMStillImagePersistenceResponse stillImageMetadata]
  -[CAMStillImagePersistenceResponse irisStillImageUUID]
  -[CAMStillImagePersistenceResponse irisVideoPersistenceURL]
  -[CAMStillImagePersistenceResponse initWithUUID:captureSession:url:creationDate:scrubberImage:finalExpectedPixelSize:metadata:burstIdentifier:burstRepresentedCount:expectingPairedVideo:coordinationInfo:]
  -[CAMStillImagePersistenceResponse burstRepresentedCount]


CAMDeferredProcessingEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMDeferredProcessingEnabledCommand copyWithZone:]
  -[CAMDeferredProcessingEnabledCommand encodeWithCoder:]
  -[CAMDeferredProcessingEnabledCommand initWithCoder:]
  -[CAMDeferredProcessingEnabledCommand _isEnabled]
  -[CAMDeferredProcessingEnabledCommand executeWithContext:]
  -[CAMDeferredProcessingEnabledCommand initWithSubcommands:]
  -[CAMDeferredProcessingEnabledCommand initWithDeferredProcessingEnabled:]


CAMCameraViewControllerContainerView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *viewfinderView
 @property  UIView *customOverlayView
 @property  UIView *additionalContentView

  // class methods
  +[CAMCameraViewControllerContainerView layerClass]

  // instance methods
  -[CAMCameraViewControllerContainerView initWithCoder:]
  -[CAMCameraViewControllerContainerView .cxx_destruct]
  -[CAMCameraViewControllerContainerView initWithFrame:]
  -[CAMCameraViewControllerContainerView layoutSubviews]
  -[CAMCameraViewControllerContainerView systemLayoutSizeFittingSize:]
  -[CAMCameraViewControllerContainerView viewfinderView]
  -[CAMCameraViewControllerContainerView customOverlayView]
  -[CAMCameraViewControllerContainerView setCustomOverlayView:]
  -[CAMCameraViewControllerContainerView setAdditionalContentView:]
  -[CAMCameraViewControllerContainerView _commonCAMCameraViewControllerContainerViewInitialization]
  -[CAMCameraViewControllerContainerView verifyViewOrdering]
  -[CAMCameraViewControllerContainerView additionalContentView]
  -[CAMCameraViewControllerContainerView setViewfinderView:]


CAMVideoCaptureResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *localDestinationURL
 @property  NSURL *filteredLocalDestinationURL
 @property  {?=qiIq} duration
 @property  {?=qiIq} stillDisplayTime
 @property  {?=ii} dimensions
 @property  NSArray *metadata
 @property  double videoZoomFactor
 @property  long long reason
 @property  BOOL stoppedUnexpectedly
 @property  ^{__CVBuffer=} videoPreviewPixelBuffer
 @property  NSDate *captureDate
 @property  CAMCaptureCoordinationInfo *coordinationInfo
 @property  NSError *error

  // instance methods
  -[CAMVideoCaptureResult dealloc]
  -[CAMVideoCaptureResult reason]
  -[CAMVideoCaptureResult .cxx_destruct]
  -[CAMVideoCaptureResult error]
  -[CAMVideoCaptureResult duration]
  -[CAMVideoCaptureResult metadata]
  -[CAMVideoCaptureResult dimensions]
  -[CAMVideoCaptureResult captureDate]
  -[CAMVideoCaptureResult videoZoomFactor]
  -[CAMVideoCaptureResult stillDisplayTime]
  -[CAMVideoCaptureResult coordinationInfo]
  -[CAMVideoCaptureResult stoppedUnexpectedly]
  -[CAMVideoCaptureResult localDestinationURL]
  -[CAMVideoCaptureResult filteredLocalDestinationURL]
  -[CAMVideoCaptureResult videoPreviewPixelBuffer]
  -[CAMVideoCaptureResult initWithURL:filteredLocalDestinationURL:duration:stillDisplayTime:dimensions:metadata:videoZoomFactor:reason:videoPreviewPixelBuffer:coordinationInfo:error:]


CAMPanoramaLabel : CAMInstructionLabel
  // instance methods
  -[CAMPanoramaLabel _backgroundAlpha]
  -[CAMPanoramaLabel _textInsets]


CAMSetVideoZoomFactorCommand : CAMCaptureCommand
 @property  double _videoZoomFactor

  // instance methods
  -[CAMSetVideoZoomFactorCommand copyWithZone:]
  -[CAMSetVideoZoomFactorCommand encodeWithCoder:]
  -[CAMSetVideoZoomFactorCommand initWithCoder:]
  -[CAMSetVideoZoomFactorCommand _videoZoomFactor]
  -[CAMSetVideoZoomFactorCommand executeWithContext:]
  -[CAMSetVideoZoomFactorCommand initWithVideoZoomFactor:]


CAMIrisVideoRecordingCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMIrisVideoRecordingCommand copyWithZone:]
  -[CAMIrisVideoRecordingCommand encodeWithCoder:]
  -[CAMIrisVideoRecordingCommand initWithCoder:]
  -[CAMIrisVideoRecordingCommand _isEnabled]
  -[CAMIrisVideoRecordingCommand executeWithContext:]
  -[CAMIrisVideoRecordingCommand initWithVideoRecordingEnabled:]


CAMShutterUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMShutterUtilities isStopMode:]
  +[CAMShutterUtilities shouldUseImageViewForMode:]
  +[CAMShutterUtilities shouldUseTimelapseOuterViewForMode:]
  +[CAMShutterUtilities spinnerViewForLayoutStyle:]
  +[CAMShutterUtilities spinnerAnimation]


CAMTimelapseStabilizationMovieWriter : NSObject /usr/lib/libSystem.B.dylib <AVOfflineVideoStabilizerDataProvider, CAMTimelapseMovieWriterProtocol>
 @property  NSArray *_frameFilePaths
 @property  NSArray *_visMetadataFilePaths
 @property  NSObject<OS_dispatch_queue> *_movieWritingQueue
 @property  NSObject<OS_dispatch_queue> *_syncQueue
 @property  NSObject<OS_dispatch_queue> *_readingQueue
 @property  NSObject<OS_dispatch_queue> *_decodeQueue
 @property  NSObject<OS_dispatch_queue> *_pixelTransferQueue
 @property  NSObject<OS_dispatch_semaphore> *_semFrameGetter
 @property  NSObject<OS_dispatch_semaphore> *_semFileReader
 @property  ^{__CFArray=} _frameList
 @property  NSDate *_movieCreationDate
 @property  CLLocation *_movieCreationLocation
 @property  NSString *_movieOutputPath
 @property  {CGAffineTransform=dddddd} _movieTransform
 @property  long long _movieFramesPerSecond
 @property  BOOL _preferHEVC
 @property  AVOfflineVideoStabilizer *_stabilizer
 @property  AVAssetWriter *_writer
 @property  AVAssetWriterInput *_videoInput
 @property  AVAssetWriterInputPixelBufferAdaptor *_pixelBufferAdaptor
 @property  long long _frameCountWrittenToMovie
 @property  long long _nextSourceFrameIndex
 @property  long long _nextMetadataFrameIndex
 @property  long long _firstFrameIndex
 @property  ^{__CVBuffer=} _stashedSourceFrame
 @property  NSMutableSet *_badFrameSet
 @property  NSMutableSet *_badMetadataSet
 @property  long long _badMetadataErrorThreshold
 @property  ^{OpaqueVTPixelTransferSession=} _pixelTransferSession
 @property  unsigned long _frameLoadMode
 @property  @? _completion
 @property  ^v _powerAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL suspended

  // class methods
  +[CAMTimelapseStabilizationMovieWriter _desiredOutputSizeForSourcePixelBuffer:]

  // instance methods
  -[CAMTimelapseStabilizationMovieWriter init]
  -[CAMTimelapseStabilizationMovieWriter dealloc]
  -[CAMTimelapseStabilizationMovieWriter .cxx_destruct]
  -[CAMTimelapseStabilizationMovieWriter setSuspended:]
  -[CAMTimelapseStabilizationMovieWriter isSuspended]
  -[CAMTimelapseStabilizationMovieWriter _reset]
  -[CAMTimelapseStabilizationMovieWriter _completion]
  -[CAMTimelapseStabilizationMovieWriter _syncQueue]
  -[CAMTimelapseStabilizationMovieWriter _cleanup]
  -[CAMTimelapseStabilizationMovieWriter _powerAssertion]
  -[CAMTimelapseStabilizationMovieWriter _writer]
  -[CAMTimelapseStabilizationMovieWriter copySourceStabilizationMetadataForFrameNumber:outputSampleTime:stabilizer:]
  -[CAMTimelapseStabilizationMovieWriter copySourcePixelBufferForFrameNumber:outputSampleTime:stabilizer:]
  -[CAMTimelapseStabilizationMovieWriter _pixelTransferSession]
  -[CAMTimelapseStabilizationMovieWriter _decodeQueue]
  -[CAMTimelapseStabilizationMovieWriter _videoInput]
  -[CAMTimelapseStabilizationMovieWriter _preferHEVC]
  -[CAMTimelapseStabilizationMovieWriter writeMovieFromImageFiles:visMetadataFiles:startDate:location:outputPath:transform:framesPerSecond:preferHEVC:completionHandler:]
  -[CAMTimelapseStabilizationMovieWriter _frameLoadMode]
  -[CAMTimelapseStabilizationMovieWriter _startAsyncDecoding]
  -[CAMTimelapseStabilizationMovieWriter _copySourcePixelBufferForNextFrame:skipBadFrames:]
  -[CAMTimelapseStabilizationMovieWriter _startWritingWithOutputPath:width:height:videoFormatDescription:transform:framesPerSecond:frameCount:preferHEVC:visMetadataCount:videoMetadata:]
  -[CAMTimelapseStabilizationMovieWriter _writeMovieAsynchronously]
  -[CAMTimelapseStabilizationMovieWriter _decodeFirstFrameAgain]
  -[CAMTimelapseStabilizationMovieWriter _cropPixelBufferIfNeeded:]
  -[CAMTimelapseStabilizationMovieWriter _copyNextSampleBufferFromStabilizer:]
  -[CAMTimelapseStabilizationMovieWriter _appendPixelBufferToMovie:]
  -[CAMTimelapseStabilizationMovieWriter _finishMovieWithRestartUnstabilized]
  -[CAMTimelapseStabilizationMovieWriter _finishMovieWithFailure]
  -[CAMTimelapseStabilizationMovieWriter _requestNextFrameReadDecode]
  -[CAMTimelapseStabilizationMovieWriter _finishMovieWithCompletionHandler:]
  -[CAMTimelapseStabilizationMovieWriter _setMetadataOnVideoTrackAssetWriterInput:]
  -[CAMTimelapseStabilizationMovieWriter _restartUnstabilized]
  -[CAMTimelapseStabilizationMovieWriter _frameFilePaths]
  -[CAMTimelapseStabilizationMovieWriter _visMetadataFilePaths]
  -[CAMTimelapseStabilizationMovieWriter _movieWritingQueue]
  -[CAMTimelapseStabilizationMovieWriter _readingQueue]
  -[CAMTimelapseStabilizationMovieWriter _pixelTransferQueue]
  -[CAMTimelapseStabilizationMovieWriter _semFrameGetter]
  -[CAMTimelapseStabilizationMovieWriter _semFileReader]
  -[CAMTimelapseStabilizationMovieWriter _frameList]
  -[CAMTimelapseStabilizationMovieWriter _movieCreationDate]
  -[CAMTimelapseStabilizationMovieWriter _movieCreationLocation]
  -[CAMTimelapseStabilizationMovieWriter _movieOutputPath]
  -[CAMTimelapseStabilizationMovieWriter _movieTransform]
  -[CAMTimelapseStabilizationMovieWriter _movieFramesPerSecond]
  -[CAMTimelapseStabilizationMovieWriter _stabilizer]
  -[CAMTimelapseStabilizationMovieWriter _pixelBufferAdaptor]
  -[CAMTimelapseStabilizationMovieWriter _frameCountWrittenToMovie]
  -[CAMTimelapseStabilizationMovieWriter _nextSourceFrameIndex]
  -[CAMTimelapseStabilizationMovieWriter _nextMetadataFrameIndex]
  -[CAMTimelapseStabilizationMovieWriter _firstFrameIndex]
  -[CAMTimelapseStabilizationMovieWriter _stashedSourceFrame]
  -[CAMTimelapseStabilizationMovieWriter _badFrameSet]
  -[CAMTimelapseStabilizationMovieWriter _badMetadataSet]
  -[CAMTimelapseStabilizationMovieWriter _badMetadataErrorThreshold]


CAMPhysicalCaptureRecognizer : UIGestureRecognizer /System/Library/Frameworks/Foundation.framework/Foundation
 @property  long long pressType
 @property  long long lastActiveButton
 @property  NSSet *activeButtons
 @property  NSArray *desiredButtons
 @property  BOOL suspended

  // instance methods
  -[CAMPhysicalCaptureRecognizer setEnabled:]
  -[CAMPhysicalCaptureRecognizer .cxx_destruct]
  -[CAMPhysicalCaptureRecognizer setSuspended:]
  -[CAMPhysicalCaptureRecognizer isSuspended]
  -[CAMPhysicalCaptureRecognizer reset]
  -[CAMPhysicalCaptureRecognizer initWithTarget:action:]
  -[CAMPhysicalCaptureRecognizer touchesBegan:withEvent:]
  -[CAMPhysicalCaptureRecognizer pressesBegan:withEvent:]
  -[CAMPhysicalCaptureRecognizer pressesEnded:withEvent:]
  -[CAMPhysicalCaptureRecognizer pressesCancelled:withEvent:]
  -[CAMPhysicalCaptureRecognizer pressType]
  -[CAMPhysicalCaptureRecognizer setPressType:]
  -[CAMPhysicalCaptureRecognizer lastActiveButton]
  -[CAMPhysicalCaptureRecognizer setActiveButtons:]
  -[CAMPhysicalCaptureRecognizer setDesiredButtons:]
  -[CAMPhysicalCaptureRecognizer _updateApplicationButtonStatus]
  -[CAMPhysicalCaptureRecognizer desiredButtons]
  -[CAMPhysicalCaptureRecognizer activeButtons]
  -[CAMPhysicalCaptureRecognizer _captureButtonForPressType:]
  -[CAMPhysicalCaptureRecognizer setLastActiveButton:]


CAMMetalContext : NSObject /usr/lib/libSystem.B.dylib
 @property  <MTLDevice> *device
 @property  <MTLCommandQueue> *commandQueue

  // instance methods
  -[CAMMetalContext init]
  -[CAMMetalContext .cxx_destruct]
  -[CAMMetalContext device]
  -[CAMMetalContext commandQueue]


CAMBufferKeyValueObserverObservance : CAMBufferObservance
 @property  NSObject *object
 @property  NSString *keyPath

  // instance methods
  -[CAMBufferKeyValueObserverObservance object]
  -[CAMBufferKeyValueObserverObservance .cxx_destruct]
  -[CAMBufferKeyValueObserverObservance keyPath]
  -[CAMBufferKeyValueObserverObservance shouldBeFulfilledByChange:]
  -[CAMBufferKeyValueObserverObservance setupObservanceForBuffer:]
  -[CAMBufferKeyValueObserverObservance teardownObservanceForBuffer:]
  -[CAMBufferKeyValueObserverObservance initWithKeyPath:ofObject:withPredicate:removedOnceEnabled:]


CAMBufferKeyValueObserverObservanceChange : CAMBufferObservanceChange
 @property  NSString *keyPath
 @property  NSObject *object
 @property  NSDictionary *change

  // instance methods
  -[CAMBufferKeyValueObserverObservanceChange object]
  -[CAMBufferKeyValueObserverObservanceChange .cxx_destruct]
  -[CAMBufferKeyValueObserverObservanceChange keyPath]
  -[CAMBufferKeyValueObserverObservanceChange change]
  -[CAMBufferKeyValueObserverObservanceChange initWithKeyPath:ofObject:withChange:]


CAMVideoHDRSuspensionCommand : CAMCaptureCommand
 @property  BOOL videoHDRSuspended

  // instance methods
  -[CAMVideoHDRSuspensionCommand copyWithZone:]
  -[CAMVideoHDRSuspensionCommand encodeWithCoder:]
  -[CAMVideoHDRSuspensionCommand initWithCoder:]
  -[CAMVideoHDRSuspensionCommand isVideoHDRSuspended]
  -[CAMVideoHDRSuspensionCommand executeWithContext:]
  -[CAMVideoHDRSuspensionCommand initWithVideoHDRSuspended:]


CAMTimerStatusIndicator : CAMControlStatusIndicator
 @property  long long timerDuration

  // instance methods
  -[CAMTimerStatusIndicator valueText]
  -[CAMTimerStatusIndicator timerDuration]
  -[CAMTimerStatusIndicator imageNameForCurrentState]
  -[CAMTimerStatusIndicator canShowValue]
  -[CAMTimerStatusIndicator setTimerDuration:]


CAMZoomSliderUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMZoomSliderUtilities layoutZoomSlider:forLayoutStyle:bottomBar:previewView:viewfinderView:]
  +[CAMZoomSliderUtilities layoutZoomSlider:forLayoutStyle:bottomBarAlignmentRect:bottomBarTransparent:shutterButtonAlignmentRect:previewViewAlignmentRect:viewfinderViewAlignmentRect:]


CAMUserPreferencesMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMUserPreferencesMigrator migrateLegacyPreferences]
  +[CAMUserPreferencesMigrator _flashModeForLegacyFlashMode:]
  +[CAMUserPreferencesMigrator _HDRModeForLegacyHDRMode:]
  +[CAMUserPreferencesMigrator _captureModeForLegacyCameraMode:]
  +[CAMUserPreferencesMigrator _previewViewAspectModeForLegacyAspectMode:]


CAMStillImageCaptureRequest : CAMCaptureRequest <CAMCaptureAdjustmentProvider, CAMBurstIdentifierProvider, NSCopying, NSMutableCopying, CAMBurstRequest, CAMIrisRequest, CAMTimelapseRequest>
 @property  NSString *EV0PersistenceUUID
 @property  NSString *timelapseIdentifier
 @property  long long effectFilterType
 @property  long long lightingEffectType
 @property  long long aspectRatioCrop
 @property  unsigned long maximumBurstLength
 @property  long long flashMode
 @property  long long hdrMode
 @property  long long irisMode
 @property  BOOL wantsPortraitEffect
 @property  NSArray *adjustmentFilters
 @property  NSArray *originalFilters
 @property  long long photoQualityPrioritization
 @property  BOOL wantsAutoDualCameraFusion
 @property  BOOL wantsAudioForCapture
 @property  BOOL wantsSquareCrop
 @property  BOOL wantsHighResolutionStills
 @property  BOOL stillDuringVideo
 @property  long long ctmCaptureType
 @property  BOOL CTMVideo
 @property  BOOL wantsSpatialOverCapture
 @property  long long lowLightMode
 @property  {CGSize=dd} desiredPreviewSize
 @property  NSString *burstIdentifier
 @property  NSString *irisIdentifier
 @property  NSURL *localVideoDestinationURL
 @property  NSURL *localCTMVideoDestinationURL
 @property  NSURL *localSpatialOverCaptureVideoDestinationURL
 @property  NSURL *localCTMSpatialOverCaptureVideoDestinationURL
 @property  NSString *videoPersistenceUUID
 @property  NSString *EV0IrisIdentifier
 @property  NSURL *EV0LocalVideoDestinationURL
 @property  NSURL *EV0LocalSpatialOverCaptureVideoDestinationURL
 @property  NSString *EV0VideoPersistenceUUID
 @property  unsigned long userInitiationTime
 @property  double loggingVideoZoomFactor
 @property  long long loggingZoomInteractionType
 @property  <CAMStillImageCaptureRequestDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMStillImageCaptureRequest init]
  -[CAMStillImageCaptureRequest copyWithZone:]
  -[CAMStillImageCaptureRequest mutableCopyWithZone:]
  -[CAMStillImageCaptureRequest delegate]
  -[CAMStillImageCaptureRequest .cxx_destruct]
  -[CAMStillImageCaptureRequest hdrMode]
  -[CAMStillImageCaptureRequest flashMode]
  -[CAMStillImageCaptureRequest photoQualityPrioritization]
  -[CAMStillImageCaptureRequest hasAdjustments]
  -[CAMStillImageCaptureRequest burstIdentifier]
  -[CAMStillImageCaptureRequest ctmCaptureType]
  -[CAMStillImageCaptureRequest isCTMVideo]
  -[CAMStillImageCaptureRequest localCTMVideoDestinationURL]
  -[CAMStillImageCaptureRequest localCTMSpatialOverCaptureVideoDestinationURL]
  -[CAMStillImageCaptureRequest videoPersistenceUUID]
  -[CAMStillImageCaptureRequest irisIdentifier]
  -[CAMStillImageCaptureRequest lowLightMode]
  -[CAMStillImageCaptureRequest irisMode]
  -[CAMStillImageCaptureRequest aspectRatioCrop]
  -[CAMStillImageCaptureRequest userInitiationTime]
  -[CAMStillImageCaptureRequest EV0PersistenceUUID]
  -[CAMStillImageCaptureRequest effectFilterType]
  -[CAMStillImageCaptureRequest maximumBurstLength]
  -[CAMStillImageCaptureRequest captureRequest]
  -[CAMStillImageCaptureRequest stillDuringVideo]
  -[CAMStillImageCaptureRequest lightingEffectType]
  -[CAMStillImageCaptureRequest loggingVideoZoomFactor]
  -[CAMStillImageCaptureRequest loggingZoomInteractionType]
  -[CAMStillImageCaptureRequest initWithRequest:distinctPersistence:]
  -[CAMStillImageCaptureRequest irisStillImagePersistenceUUIDForEV0:]
  -[CAMStillImageCaptureRequest irisVideoPersistenceUUIDForEV0:]
  -[CAMStillImageCaptureRequest shouldProtectPersistenceForVideo]
  -[CAMStillImageCaptureRequest isEV0LocalVideoDestinationURL:]
  -[CAMStillImageCaptureRequest irisIdentifierForEV0:]
  -[CAMStillImageCaptureRequest EV0VideoPersistenceUUID]
  -[CAMStillImageCaptureRequest adjustmentFilters]
  -[CAMStillImageCaptureRequest irisLocalVideoDestinationURLForEV0:]
  -[CAMStillImageCaptureRequest irisLocalSpatialOverCaptureVideoDestinationForEV0:]
  -[CAMStillImageCaptureRequest isLocalSpatialOverCaptureVideoDestinationURL:]
  -[CAMStillImageCaptureRequest wantsSpatialOverCapture]
  -[CAMStillImageCaptureRequest localSpatialOverCaptureVideoDestinationURL]
  -[CAMStillImageCaptureRequest EV0LocalSpatialOverCaptureVideoDestinationURL]
  -[CAMStillImageCaptureRequest wantsPortraitEffect]
  -[CAMStillImageCaptureRequest timelapseIdentifier]
  -[CAMStillImageCaptureRequest originalFilters]
  -[CAMStillImageCaptureRequest wantsAutoDualCameraFusion]
  -[CAMStillImageCaptureRequest wantsAudioForCapture]
  -[CAMStillImageCaptureRequest wantsSquareCrop]
  -[CAMStillImageCaptureRequest wantsHighResolutionStills]
  -[CAMStillImageCaptureRequest desiredPreviewSize]
  -[CAMStillImageCaptureRequest localVideoDestinationURL]
  -[CAMStillImageCaptureRequest EV0IrisIdentifier]
  -[CAMStillImageCaptureRequest EV0LocalVideoDestinationURL]


CAMMutableStillImageCaptureRequest : CAMStillImageCaptureRequest <CAMMutableCaptureRequestPersistence, CAMMutableCaptureRequestLocation, CAMMutableCaptureRequestPower, CAMMutableCaptureRequestOrigin, CAMMutableCaptureRequestEncodingBehavior>
 @property  NSString *EV0PersistenceUUID
 @property  NSString *timelapseIdentifier
 @property  long long effectFilterType
 @property  long long lightingEffectType
 @property  long long aspectRatioCrop
 @property  NSString *burstIdentifier
 @property  unsigned long maximumBurstLength
 @property  long long captureOrientation
 @property  long long captureDevice
 @property  long long captureMode
 @property  long long pressType
 @property  long long flashMode
 @property  long long hdrMode
 @property  long long irisMode
 @property  long long ctmCaptureType
 @property  BOOL wantsSpatialOverCapture
 @property  long long lowLightMode
 @property  BOOL wantsPortraitEffect
 @property  NSArray *adjustmentFilters
 @property  NSArray *originalFilters
 @property  long long photoQualityPrioritization
 @property  BOOL wantsAutoDualCameraFusion
 @property  BOOL wantsAudioForCapture
 @property  BOOL wantsSquareCrop
 @property  BOOL wantsHighResolutionStills
 @property  BOOL stillDuringVideo
 @property  {CGSize=dd} desiredPreviewSize
 @property  NSString *irisIdentifier
 @property  NSURL *localVideoDestinationURL
 @property  NSURL *localCTMVideoDestinationURL
 @property  NSURL *localSpatialOverCaptureVideoDestinationURL
 @property  NSURL *localCTMSpatialOverCaptureVideoDestinationURL
 @property  NSString *videoPersistenceUUID
 @property  NSString *EV0IrisIdentifier
 @property  NSURL *EV0LocalVideoDestinationURL
 @property  NSURL *EV0LocalSpatialOverCaptureVideoDestinationURL
 @property  NSString *EV0VideoPersistenceUUID
 @property  unsigned short sessionIdentifier
 @property  unsigned long userInitiationTime
 @property  double loggingVideoZoomFactor
 @property  long long loggingZoomInteractionType
 @property  <CAMStillImageCaptureRequestDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long persistenceOptions
 @property  unsigned long deferredPersistenceOptions
 @property  long long temporaryPersistenceOptions
 @property  NSURL *localDestinationURL
 @property  NSString *persistenceUUID
 @property  BOOL shouldExtractDiagnosticsFromMetadata
 @property  BOOL shouldPersistDiagnosticsToSidecar
 @property  BOOL shouldDelayRemotePersistence
 @property  CLLocation *location
 @property  CLHeading *heading
 @property  unsigned int assertionIdentifier
 @property  long long origin
 @property  long long videoEncodingBehavior
 @property  long long photoEncodingBehavior

  // instance methods
  -[CAMMutableStillImageCaptureRequest copyWithZone:]
  -[CAMMutableStillImageCaptureRequest mutableCopyWithZone:]
  -[CAMMutableStillImageCaptureRequest setDelegate:]
  -[CAMMutableStillImageCaptureRequest setAspectRatio:]
  -[CAMMutableStillImageCaptureRequest setHeading:]
  -[CAMMutableStillImageCaptureRequest setLocation:]
  -[CAMMutableStillImageCaptureRequest setOrigin:]
  -[CAMMutableStillImageCaptureRequest setHdrMode:]
  -[CAMMutableStillImageCaptureRequest setSessionIdentifier:]
  -[CAMMutableStillImageCaptureRequest setFlashMode:]
  -[CAMMutableStillImageCaptureRequest setPhotoQualityPrioritization:]
  -[CAMMutableStillImageCaptureRequest setBurstIdentifier:]
  -[CAMMutableStillImageCaptureRequest setCaptureDevice:]
  -[CAMMutableStillImageCaptureRequest setCaptureMode:]
  -[CAMMutableStillImageCaptureRequest setIrisMode:]
  -[CAMMutableStillImageCaptureRequest setWantsPortraitEffect:]
  -[CAMMutableStillImageCaptureRequest setLightingEffectType:]
  -[CAMMutableStillImageCaptureRequest setAdjustmentFilters:]
  -[CAMMutableStillImageCaptureRequest setWantsAudioForCapture:]
  -[CAMMutableStillImageCaptureRequest setPhotoEncodingBehavior:]
  -[CAMMutableStillImageCaptureRequest setVideoEncodingBehavior:]
  -[CAMMutableStillImageCaptureRequest setPersistenceOptions:]
  -[CAMMutableStillImageCaptureRequest setTemporaryPersistenceOptions:]
  -[CAMMutableStillImageCaptureRequest setLowLightMode:]
  -[CAMMutableStillImageCaptureRequest setUserInitiationTime:]
  -[CAMMutableStillImageCaptureRequest setCaptureOrientation:]
  -[CAMMutableStillImageCaptureRequest setPressType:]
  -[CAMMutableStillImageCaptureRequest setWantsSquareCrop:]
  -[CAMMutableStillImageCaptureRequest setAspectRatioCrop:]
  -[CAMMutableStillImageCaptureRequest setEffectFilterType:]
  -[CAMMutableStillImageCaptureRequest setOriginalFilters:]
  -[CAMMutableStillImageCaptureRequest setWantsHighResolutionStills:]
  -[CAMMutableStillImageCaptureRequest setStillDuringVideo:]
  -[CAMMutableStillImageCaptureRequest setWantsAutoDualCameraFusion:]
  -[CAMMutableStillImageCaptureRequest setCtmCaptureType:]
  -[CAMMutableStillImageCaptureRequest setWantsSpatialOverCapture:]
  -[CAMMutableStillImageCaptureRequest setMaximumBurstLength:]
  -[CAMMutableStillImageCaptureRequest setPersistenceUUID:]
  -[CAMMutableStillImageCaptureRequest setShouldDelayRemotePersistence:]
  -[CAMMutableStillImageCaptureRequest setLoggingVideoZoomFactor:]
  -[CAMMutableStillImageCaptureRequest setLoggingZoomInteractionType:]
  -[CAMMutableStillImageCaptureRequest setDesiredPreviewSize:]
  -[CAMMutableStillImageCaptureRequest setDeferredPersistenceOptions:]
  -[CAMMutableStillImageCaptureRequest setLocalDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setShouldExtractDiagnosticsFromMetadata:]
  -[CAMMutableStillImageCaptureRequest setShouldPersistDiagnosticsToSidecar:]
  -[CAMMutableStillImageCaptureRequest setAssertionIdentifier:]
  -[CAMMutableStillImageCaptureRequest setVideoPersistenceUUID:]
  -[CAMMutableStillImageCaptureRequest setIrisIdentifier:]
  -[CAMMutableStillImageCaptureRequest setLocalVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setEV0LocalVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setLocalSpatialOverCaptureVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setEV0LocalSpatialOverCaptureVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setLocalCTMVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setLocalCTMSpatialOverCaptureVideoDestinationURL:]
  -[CAMMutableStillImageCaptureRequest setTimelapseIdentifier:]
  -[CAMMutableStillImageCaptureRequest setEV0IrisIdentifier:]
  -[CAMMutableStillImageCaptureRequest setEV0VideoPersistenceUUID:]
  -[CAMMutableStillImageCaptureRequest setEV0PersistenceUUID:]
  -[CAMMutableStillImageCaptureRequest setCapturedFromPhotoBooth:]


CAMPanoramaView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_stripBackgroundView
 @property  UIView *_stripContainerView
 @property  UIView *_maskingView
 @property  CAMPanoramaArrowView *_arrowView
 @property  CAMPanoramaLevelView *_levelView
 @property  CAMPanoramaLabel *_instructionLabel
 @property  NSString *_speedString
 @property  NSString *_moveUpString
 @property  NSString *_moveDownString
 @property  NSString *_arrowString
 @property  NSString *_instructionString
 @property  {CGPoint=dd} _initialArrowCenter
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _lastLayoutBounds
 @property  BOOL painting
 @property  CAMPanoramaPaintingStatus *_currentPaintingStatus
 @property  double currentOrientedAcceleration
 @property  double _initialPaintingAcceleration
 @property  double _currentPaintingAcceleration
 @property  BOOL _currentlyShowingMoveInstructions
 @property  ^d _previousSpeeds
 @property  BOOL _currentlyMovingTooFast
 @property  double _currentAverageSpeed
 @property  unsigned long _arrowUpdateFrame
 @property  long long direction
 @property  <CAMPanoramaViewDelegate> *delegate
 @property  CAMPanoramaPreviewView *previewView
 @property  UIView *instructionView
 @property  long long layoutStyle
 @property  {CGSize=dd} panoramaCaptureSize

  // class methods
  +[CAMPanoramaView layerClass]

  // instance methods
  -[CAMPanoramaView dealloc]
  -[CAMPanoramaView initWithCoder:]
  -[CAMPanoramaView delegate]
  -[CAMPanoramaView setDelegate:]
  -[CAMPanoramaView .cxx_destruct]
  -[CAMPanoramaView direction]
  -[CAMPanoramaView setDirection:]
  -[CAMPanoramaView setTransform:]
  -[CAMPanoramaView initWithFrame:]
  -[CAMPanoramaView layoutSubviews]
  -[CAMPanoramaView setLayoutStyle:]
  -[CAMPanoramaView layoutStyle]
  -[CAMPanoramaView _arrowView]
  -[CAMPanoramaView previewView]
  -[CAMPanoramaView _instructionLabel]
  -[CAMPanoramaView _maskingView]
  -[CAMPanoramaView updateToContentSize:]
  -[CAMPanoramaView panoramaCaptureSize]
  -[CAMPanoramaView setDirection:animated:]
  -[CAMPanoramaView setPanoramaCaptureSize:]
  -[CAMPanoramaView startProcessingPanorama]
  -[CAMPanoramaView finishedProcessingPanorama]
  -[CAMPanoramaView _levelView]
  -[CAMPanoramaView instructionView]
  -[CAMPanoramaView startPainting]
  -[CAMPanoramaView stopPainting]
  -[CAMPanoramaView initWithPanoramaPreviewView:layoutStyle:]
  -[CAMPanoramaView _setPainting:]
  -[CAMPanoramaView updatePaintingWithStatus:]
  -[CAMPanoramaView currentOrientedAcceleration]
  -[CAMPanoramaView updateOrientedAcceleration:]
  -[CAMPanoramaView isPainting]
  -[CAMPanoramaView _lastLayoutBounds]
  -[CAMPanoramaView _stripBackgroundView]
  -[CAMPanoramaView _stripContainerView]
  -[CAMPanoramaView _currentPaintingStatus]
  -[CAMPanoramaView _frameForArrowViewWithDirection:offset:]
  -[CAMPanoramaView _currentAverageSpeed]
  -[CAMPanoramaView _initialArrowCenter]
  -[CAMPanoramaView _isCurrentlyShowingMoveInstructions]
  -[CAMPanoramaView _showMoveUpInstructions]
  -[CAMPanoramaView _showMoveDownInstructions]
  -[CAMPanoramaView _showMoveUpInstructionsAfterDelay]
  -[CAMPanoramaView _showMoveDownInstructionsAfterDelay]
  -[CAMPanoramaView _cancelDelayedMoveInstructions]
  -[CAMPanoramaView _hideInstructionLabel]
  -[CAMPanoramaView _setLastLayoutBounds:]
  -[CAMPanoramaView _initialPaintingAcceleration]
  -[CAMPanoramaView _currentPaintingAcceleration]
  -[CAMPanoramaView _resetPaintingUIAnimated:]
  -[CAMPanoramaView _setArrowUpdateFrame:]
  -[CAMPanoramaView _setInitialPaintingAcceleration:]
  -[CAMPanoramaView _setCurrentPaintingAcceleration:]
  -[CAMPanoramaView _setInitialArrowCenter:]
  -[CAMPanoramaView _showArrowInstructions]
  -[CAMPanoramaView _hideArrowInstructionsAfterDelay]
  -[CAMPanoramaView _setCurrentlyShowingMoveInstructions:]
  -[CAMPanoramaView _setCurrentlyMovingTooFast:]
  -[CAMPanoramaView _showSpeedInstructions]
  -[CAMPanoramaView _hideSpeedInstructionsAfterDelay]
  -[CAMPanoramaView _arrowUpdateFrame]
  -[CAMPanoramaView _setCurrentAverageSpeed:]
  -[CAMPanoramaView _setCurrentPaintingStatus:]
  -[CAMPanoramaView _setCurrentOrientedAcceleration:]
  -[CAMPanoramaView _updateInstructionLabelText:]
  -[CAMPanoramaView _isCurrentlyMovingTooFast]
  -[CAMPanoramaView _speedString]
  -[CAMPanoramaView _moveUpString]
  -[CAMPanoramaView _moveDownString]
  -[CAMPanoramaView _arrowString]
  -[CAMPanoramaView _instructionString]
  -[CAMPanoramaView _previousSpeeds]


CAMModeIndicatorView : UIControl /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAMModeDialItem *_modeTextView
 @property  UIImageView *_symbolView
 @property  long long selectedMode

  // instance methods
  -[CAMModeIndicatorView .cxx_destruct]
  -[CAMModeIndicatorView initWithFrame:]
  -[CAMModeIndicatorView layoutSubviews]
  -[CAMModeIndicatorView _symbolSize]
  -[CAMModeIndicatorView setSelectedMode:animated:]
  -[CAMModeIndicatorView setSelectedMode:]
  -[CAMModeIndicatorView selectedMode]
  -[CAMModeIndicatorView _modeTextView]
  -[CAMModeIndicatorView _symbolView]
  -[CAMModeIndicatorView _updateModeIndicatorAnimated:]


CAMQRCodeInstructionLabel : CAMInstructionLabel
 @property  long long devicePosition
 @property  NSArray *mrcResults

  // class methods
  +[CAMQRCodeInstructionLabel shouldDisplayInstructionForMRCResults:devicePosition:]
  +[CAMQRCodeInstructionLabel _textForMRCResults:devicePosition:]

  // instance methods
  -[CAMQRCodeInstructionLabel .cxx_destruct]
  -[CAMQRCodeInstructionLabel sizeThatFits:]
  -[CAMQRCodeInstructionLabel devicePosition]
  -[CAMQRCodeInstructionLabel setDevicePosition:]
  -[CAMQRCodeInstructionLabel setMRCResults:]
  -[CAMQRCodeInstructionLabel _updateTextWithPriorMRCResults:]
  -[CAMQRCodeInstructionLabel mrcResults]


CAMTimelapseShutterRingView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  double _smallTickRotationRadians
 @property  double _largeTickRotationRadians
 @property  CALayer *_smallTickLayer
 @property  CALayer *_largeTickLayer
 @property  CAReplicatorLayer *_smallTickReplicatorLayer
 @property  CAReplicatorLayer *_largeTickReplicatorLayer
 @property  CALayer *_timerHandLayer
 @property  CALayer *_timerHandParentLayer
 @property  {?=qqdd} spec
 @property  BOOL animating

  // instance methods
  -[CAMTimelapseShutterRingView .cxx_destruct]
  -[CAMTimelapseShutterRingView layoutSublayersOfLayer:]
  -[CAMTimelapseShutterRingView isAnimating]
  -[CAMTimelapseShutterRingView setAnimating:]
  -[CAMTimelapseShutterRingView _stopAnimating]
  -[CAMTimelapseShutterRingView _startAnimating]
  -[CAMTimelapseShutterRingView setSpec:]
  -[CAMTimelapseShutterRingView spec]
  -[CAMTimelapseShutterRingView _shouldUseAnimations]
  -[CAMTimelapseShutterRingView initWithSpec:]
  -[CAMTimelapseShutterRingView initWithFrame:spec:]
  -[CAMTimelapseShutterRingView _commonCAMTimelapseShutterRingViewInitializationWithSpec:]
  -[CAMTimelapseShutterRingView _rotationRadiansFromTickCount:]
  -[CAMTimelapseShutterRingView _tickRadiusForTickSize:ringSize:]
  -[CAMTimelapseShutterRingView _removeStartAnimations]
  -[CAMTimelapseShutterRingView _removeStopAnimations]
  -[CAMTimelapseShutterRingView _addStartAnimations]
  -[CAMTimelapseShutterRingView _addStopAnimations]
  -[CAMTimelapseShutterRingView _smallTickRotationRadians]
  -[CAMTimelapseShutterRingView _rotationZFromTransform:]
  -[CAMTimelapseShutterRingView _largeTickRotationRadians]
  -[CAMTimelapseShutterRingView _smallTickLayer]
  -[CAMTimelapseShutterRingView _largeTickLayer]
  -[CAMTimelapseShutterRingView _smallTickReplicatorLayer]
  -[CAMTimelapseShutterRingView _largeTickReplicatorLayer]
  -[CAMTimelapseShutterRingView _timerHandLayer]
  -[CAMTimelapseShutterRingView _timerHandParentLayer]


CAMPhotoQualityPrioritizationConfigurationCommand : CAMCaptureCommand
 @property  long long _photoQualityPrioritization

  // instance methods
  -[CAMPhotoQualityPrioritizationConfigurationCommand copyWithZone:]
  -[CAMPhotoQualityPrioritizationConfigurationCommand encodeWithCoder:]
  -[CAMPhotoQualityPrioritizationConfigurationCommand initWithCoder:]
  -[CAMPhotoQualityPrioritizationConfigurationCommand _photoQualityPrioritization]
  -[CAMPhotoQualityPrioritizationConfigurationCommand executeWithContext:]
  -[CAMPhotoQualityPrioritizationConfigurationCommand initWithSubcommands:]
  -[CAMPhotoQualityPrioritizationConfigurationCommand initWithPhotoQualityPrioritization:]


CAMControlStatusBar : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMControlStatusIndicatorDelegate, CAMAccessibilityHUDItemProvider>
 @property  NSMutableDictionary *_statusIndicatorsByType
 @property  NSSet *_allVisibleTypes
 @property  BOOL _directionIndicatorHiddenForSpace
 @property  <CAMControlStatusBarDelegate> *delegate
 @property  NSArray *primaryVisibleIndicatorTypes
 @property  NSArray *secondaryVisibleIndicatorTypes
 @property  CAMFlashStatusIndicator *flashIndicator
 @property  CAMLivePhotoStatusIndicator *livePhotoIndicator
 @property  CAMHDRStatusIndicator *hdrIndicator
 @property  CAMTimerStatusIndicator *timerIndicator
 @property  CAMFilterStatusIndicator *filterIndicator
 @property  CAMApertureStatusIndicator *apertureIndicator
 @property  CAMIntensityStatusIndicator *intensityIndicator
 @property  CAMVideoConfigurationStatusIndicator *videoConfigurationIndicator
 @property  CAMLowLightStatusIndicator *lowLightIndicator
 @property  BOOL directionIndicatorVisible
 @property  CAMDirectionalIndicator *directionIndicator
 @property  UIView *primaryAccessoryControl
 @property  UIView *secondaryAccessoryControl
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMControlStatusBar delegate]
  -[CAMControlStatusBar setDelegate:]
  -[CAMControlStatusBar .cxx_destruct]
  -[CAMControlStatusBar orientation]
  -[CAMControlStatusBar setOrientation:]
  -[CAMControlStatusBar initWithFrame:]
  -[CAMControlStatusBar layoutSubviews]
  -[CAMControlStatusBar hitTest:withEvent:]
  -[CAMControlStatusBar setOrientation:animated:]
  -[CAMControlStatusBar setDirectionIndicatorVisible:]
  -[CAMControlStatusBar directionIndicator]
  -[CAMControlStatusBar timerIndicator]
  -[CAMControlStatusBar hudItemForAccessibilityHUDManager:]
  -[CAMControlStatusBar _iterateViewsForHUDManager:withItemFoundBlock:]
  -[CAMControlStatusBar selectedByAccessibilityHUDManager:]
  -[CAMControlStatusBar controlStatusIndicatorDidChangeIntrinsicContentSize:animated:]
  -[CAMControlStatusBar setPrimaryAccessoryControl:]
  -[CAMControlStatusBar setSecondaryAccessoryControl:]
  -[CAMControlStatusBar livePhotoIndicator]
  -[CAMControlStatusBar isDirectionIndicatorVisible]
  -[CAMControlStatusBar setDirectionIndicatorVisible:animated:]
  -[CAMControlStatusBar isIndicatorVisibleForType:]
  -[CAMControlStatusBar setPrimaryVisibleIndicatorTypes:secondaryVisibleIndicatorTypes:animated:]
  -[CAMControlStatusBar apertureIndicator]
  -[CAMControlStatusBar videoConfigurationIndicator]
  -[CAMControlStatusBar hdrIndicator]
  -[CAMControlStatusBar flashIndicator]
  -[CAMControlStatusBar filterIndicator]
  -[CAMControlStatusBar intensityIndicator]
  -[CAMControlStatusBar lowLightIndicator]
  -[CAMControlStatusBar primaryVisibleIndicatorTypes]
  -[CAMControlStatusBar _layoutAllVisibleTypes:atOrigin:]
  -[CAMControlStatusBar secondaryVisibleIndicatorTypes]
  -[CAMControlStatusBar _statusIndicatorsByType]
  -[CAMControlStatusBar _setDirectionIndicatorHiddenForSpace:]
  -[CAMControlStatusBar _layoutVisibleViewsForTypes:inVisibleTypes:atOrigin:]
  -[CAMControlStatusBar primaryAccessoryControl]
  -[CAMControlStatusBar secondaryAccessoryControl]
  -[CAMControlStatusBar _handleFlashStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleLivePhotoStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleHDRStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleTimerStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleFilterStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleApertureStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleIntensityStatusIndicatorTapped:]
  -[CAMControlStatusBar _handleLowLightStatusIndicatorTapped:]
  -[CAMControlStatusBar _setAllVisibleTypes:]
  -[CAMControlStatusBar _ensureVisibleIndicators]
  -[CAMControlStatusBar _prelayoutForNewTypes:oldTypes:atOrigin:]
  -[CAMControlStatusBar _updateIndicatorsVisibilityAnimated:]
  -[CAMControlStatusBar _allVisibleTypes]
  -[CAMControlStatusBar _updateDirectionIndicatorAlphaAnimated:]
  -[CAMControlStatusBar _isDirectionIndicatorHiddenForSpace]
  -[CAMControlStatusBar _loadIndicatorIfNeededForType:]
  -[CAMControlStatusBar _installIndicatorIfNeededForType:]
  -[CAMControlStatusBar _createIndicatorForType:]
  -[CAMControlStatusBar setPrimaryVisibleIndicatorTypes:]
  -[CAMControlStatusBar setSecondaryVisibleIndicatorTypes:]


CAMIntervalometerTestHarness : CAMPerformanceTestHarness <CAMStillImageCaptureRequestDelegate, CAMCaptureRequestIntervalometerDelegate>
 @property  CAMCaptureRequestIntervalometer *testIntervalometer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMIntervalometerTestHarness harnessWithTestName:expectedNumberOfCapturesPerRequest:captureController:performingWarmupCapture:]

  // instance methods
  -[CAMIntervalometerTestHarness .cxx_destruct]
  -[CAMIntervalometerTestHarness startTesting]
  -[CAMIntervalometerTestHarness stopTesting]
  -[CAMIntervalometerTestHarness setTestIntervalometer:]
  -[CAMIntervalometerTestHarness stillImageRequestDidCompleteStillImageCapture:withResponse:error:]
  -[CAMIntervalometerTestHarness failedTestwithReason:]
  -[CAMIntervalometerTestHarness intervalometer:didGenerateCaptureRequest:]
  -[CAMIntervalometerTestHarness intervalometerDidReachMaximumCount:]
  -[CAMIntervalometerTestHarness initWithTestName:expectedNumberOfCapturesPerRequest:captureController:performingWarmupCapture:]
  -[CAMIntervalometerTestHarness testIntervalometer]
  -[CAMIntervalometerTestHarness _hasReceivedExpectedNumberOfResponsesForRequests]


CAMBurstIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_backgroundView
 @property  UILabel *_countLabel
 @property  long long _numberOfPhotos
 @property  long long layoutStyle
 @property  NSString *contentSizeCategory

  // instance methods
  -[CAMBurstIndicatorView initWithCoder:]
  -[CAMBurstIndicatorView .cxx_destruct]
  -[CAMBurstIndicatorView reset]
  -[CAMBurstIndicatorView setContentSizeCategory:]
  -[CAMBurstIndicatorView contentSizeCategory]
  -[CAMBurstIndicatorView intrinsicContentSize]
  -[CAMBurstIndicatorView _updateAttributes]
  -[CAMBurstIndicatorView initWithFrame:]
  -[CAMBurstIndicatorView _backgroundView]
  -[CAMBurstIndicatorView layoutSubviews]
  -[CAMBurstIndicatorView setLayoutStyle:]
  -[CAMBurstIndicatorView layoutStyle]
  -[CAMBurstIndicatorView _countLabel]
  -[CAMBurstIndicatorView _numberOfPhotos]
  -[CAMBurstIndicatorView initWithLayoutStyle:]
  -[CAMBurstIndicatorView _performCaptureAnimation]
  -[CAMBurstIndicatorView incrementWithCaptureAnimation:]
  -[CAMBurstIndicatorView finishIncrementingWithCompletionHandler:]
  -[CAMBurstIndicatorView _updateCountLabelWithNumberOfPhotos]
  -[CAMBurstIndicatorView _commonCAMAvalancheIndicatorViewInitializationWithLayoutStyle:]


CAMTopBar : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CAMExpandableMenuButtonDelegate, CEKApertureButtonDelegate>
 @property  UIView *_backgroundView
 @property  NSArray *_allowedControls
 @property  NSSet *_controlsNeedingNonAnimatedLayout
 @property  CAMExpandableMenuButton *_expandedMenuButton
 @property  {UIEdgeInsets=dddd} _expandedMenuButtonTappableInsets
 @property  long long _mode
 @property  <CAMControlVisibilityUpdateDelegate> *visibilityUpdateDelegate
 @property  long long style
 @property  long long backgroundStyle
 @property  CAMFlashButton *flashButton
 @property  CAMElapsedTimeView *elapsedTimeView
 @property  CAMHDRButton *HDRButton
 @property  CAMFlipButton *flipButton
 @property  CAMFilterButton *filterButton
 @property  CEKApertureButton *apertureButton
 @property  CAMIntensityButton *intensityButton
 @property  CAMTimerButton *timerButton
 @property  CAMLivePhotoButton *livePhotoButton
 @property  CAMMessagesPhotosButton *photosButton
 @property  PUReviewScreenDoneButton *doneButton
 @property  CAMFramerateIndicatorView *framerateIndicatorView
 @property  long long orientation
 @property  BOOL floating

  // class methods
  +[CAMTopBar isFloatingStyle:]

  // instance methods
  -[CAMTopBar initWithCoder:]
  -[CAMTopBar .cxx_destruct]
  -[CAMTopBar orientation]
  -[CAMTopBar style]
  -[CAMTopBar setStyle:]
  -[CAMTopBar setOrientation:]
  -[CAMTopBar initWithFrame:]
  -[CAMTopBar isFloating]
  -[CAMTopBar _backgroundView]
  -[CAMTopBar layoutSubviews]
  -[CAMTopBar pointInside:withEvent:]
  -[CAMTopBar hitTest:withEvent:]
  -[CAMTopBar setStyle:animated:]
  -[CAMTopBar setBackgroundStyle:]
  -[CAMTopBar _mode]
  -[CAMTopBar backgroundStyle]
  -[CAMTopBar setDoneButton:]
  -[CAMTopBar doneButton]
  -[CAMTopBar setBackgroundStyle:animated:]
  -[CAMTopBar apertureButtonNeedsLayout:animated:]
  -[CAMTopBar livePhotoButton]
  -[CAMTopBar flipButton]
  -[CAMTopBar elapsedTimeView]
  -[CAMTopBar touchingRecognizersToCancel]
  -[CAMTopBar hudItemForAccessibilityHUDManager:]
  -[CAMTopBar selectedByAccessibilityHUDManager:]
  -[CAMTopBar visibilityUpdateDelegate]
  -[CAMTopBar _opacityForBackgroundStyle:]
  -[CAMTopBar _expandedMenuButton]
  -[CAMTopBar expandedFrameForMenuButton:]
  -[CAMTopBar apertureButton]
  -[CAMTopBar collapsedFrameForMenuButton:]
  -[CAMTopBar _setExpandedMenuButton:]
  -[CAMTopBar _updateControlVisibilityAnimated:]
  -[CAMTopBar _iterateViewsInHUDManager:forHUDItem:]
  -[CAMTopBar collapseMenuButton:animated:]
  -[CAMTopBar expandMenuButton:animated:]
  -[CAMTopBar setFlipButton:]
  -[CAMTopBar setFlashButton:]
  -[CAMTopBar setHDRButton:]
  -[CAMTopBar setTimerButton:]
  -[CAMTopBar setLivePhotoButton:]
  -[CAMTopBar setApertureButton:]
  -[CAMTopBar setVisibilityUpdateDelegate:]
  -[CAMTopBar flashButton]
  -[CAMTopBar HDRButton]
  -[CAMTopBar timerButton]
  -[CAMTopBar filterButton]
  -[CAMTopBar intensityButton]
  -[CAMTopBar configureForMode:]
  -[CAMTopBar photosButton]
  -[CAMTopBar _shouldExpandButtonsHorizontally]
  -[CAMTopBar configureForMode:animated:]
  -[CAMTopBar setElapsedTimeView:]
  -[CAMTopBar setFilterButton:]
  -[CAMTopBar setFramerateIndicatorView:]
  -[CAMTopBar setPhotosButton:]
  -[CAMTopBar setIntensityButton:]
  -[CAMTopBar shouldHideFlashButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideHDRButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideElapsedTimeViewForGraphConfiguration:]
  -[CAMTopBar shouldHideLivePhotoButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideFlipButtonForGraphConfiguration:]
  -[CAMTopBar shouldHidePhotosButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideDoneButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideFilterButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideApertureButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideIntensityButtonForGraphConfiguration:]
  -[CAMTopBar shouldHideFramerateIndicatorForGraphConfiguration:]
  -[CAMTopBar shouldHideTimerButtonForGraphConfiguration:]
  -[CAMTopBar framerateIndicatorView]
  -[CAMTopBar _commonCAMTopBarInitialization]
  -[CAMTopBar _allowedControls]
  -[CAMTopBar _layoutDefaultStyle]
  -[CAMTopBar _layoutFloatingStyle]
  -[CAMTopBar _layoutFloatingRecordingStyle]
  -[CAMTopBar _backgroundCornerRadiusForStyle:]
  -[CAMTopBar _backgroundMasksToBoundsForStyle:]
  -[CAMTopBar _layoutControls:apply:withExpandedMenuButton:collapsingMenuButton:collapsingFrame:]
  -[CAMTopBar _interpolatedFloatingBarHeight]
  -[CAMTopBar _computeHorizontalLayoutForViewsBetweenLeftView:rightView:views:alignmentRects:]
  -[CAMTopBar _controlsNeedingNonAnimatedLayout]
  -[CAMTopBar _setMode:style:animationDuration:animationOptions:]
  -[CAMTopBar _allowedControlsForStillImageMode]
  -[CAMTopBar _allowedControlsForPortraitMode]
  -[CAMTopBar _allowedControlsForSquareMode]
  -[CAMTopBar _allowedControlsForVideoMode]
  -[CAMTopBar _allowedControlsForPanoramaMode]
  -[CAMTopBar _allowedControlsForTimelapseMode]
  -[CAMTopBar _allowedControlsForMode:style:]
  -[CAMTopBar _setControlsNeedingNonAnimatedLayout:]
  -[CAMTopBar _shouldHideSubview:]
  -[CAMTopBar _expandedMenuButtonTappableInsets]
  -[CAMTopBar _setExpandedMenuButtonTappableInsets:]


CAMNebulaDaemon : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, CAMNebulaDaemonConnectionManagerDelegate, CAMPersistenceResultDelegate>
 @property  CAMTimelapseBackendController *_timelapseBackendController
 @property  CAMNebulaIrisBackendController *_irisBackendController
 @property  CAMPersistenceController *_persistenceController
 @property  CAMNebulaKeepAliveController *_keepAliveController
 @property  NSXPCListener *_listener
 @property  NSObject<OS_dispatch_queue> *_queue
 @property  NSMutableArray *_connections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMNebulaDaemon init]
  -[CAMNebulaDaemon _queue]
  -[CAMNebulaDaemon _listener]
  -[CAMNebulaDaemon .cxx_destruct]
  -[CAMNebulaDaemon listener:shouldAcceptNewConnection:]
  -[CAMNebulaDaemon _connections]
  -[CAMNebulaDaemon _persistenceController]
  -[CAMNebulaDaemon _keepAliveController]
  -[CAMNebulaDaemon daemonConnectionManagerHasBeenDisconnected:]
  -[CAMNebulaDaemon persistenceController:didGenerateVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMNebulaDaemon _timelapseBackendController]
  -[CAMNebulaDaemon _irisBackendController]
  -[CAMNebulaDaemon allowedProtocolForClientAccess:]
  -[CAMNebulaDaemon performPendingWorkAfterDelay:]


CAMPreviewView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_simulatorLabel
 @property  int _exposureBiasSide
 @property  long long orientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} viewportFrame
 @property  CAMVideoPreviewView *videoPreviewView
 @property  AVCaptureVideoPreviewLayer *videoPreviewLayer
 @property  UIView *indicatorContainerView
 @property  long long indicatorClippingStyle
 @property  CAMFocusIndicatorView *continuousIndicator
 @property  CAMFocusIndicatorView *pointIndicator
 @property  CAMGridView *gridView
 @property  CAMLevelIndicatorView *levelView
 @property  CAMSubjectIndicatorView *centeredSubjectIndicatorView
 @property  CAMStageLightOverlayView *stageLightOverlayView
 @property  double bottomContentInset

  // class methods
  +[CAMPreviewView layerClass]

  // instance methods
  -[CAMPreviewView dealloc]
  -[CAMPreviewView .cxx_destruct]
  -[CAMPreviewView orientation]
  -[CAMPreviewView setOrientation:]
  -[CAMPreviewView initWithFrame:]
  -[CAMPreviewView layoutSubviews]
  -[CAMPreviewView setOrientation:animated:]
  -[CAMPreviewView videoPreviewLayer]
  -[CAMPreviewView captureDevicePointOfInterestForPoint:]
  -[CAMPreviewView pointForCaptureDevicePointOfInterest:]
  -[CAMPreviewView gridView]
  -[CAMPreviewView setBottomContentInset:]
  -[CAMPreviewView bottomContentInset]
  -[CAMPreviewView setViewportFrame:]
  -[CAMPreviewView viewportFrame]
  -[CAMPreviewView setVideoPreviewLayer:]
  -[CAMPreviewView setGridView:]
  -[CAMPreviewView setLevelView:]
  -[CAMPreviewView videoPreviewView]
  -[CAMPreviewView _exposureBiasSide]
  -[CAMPreviewView set_exposureBiasSide:]
  -[CAMPreviewView indicatorClippingStyle]
  -[CAMPreviewView indicatorContainerView]
  -[CAMPreviewView continuousIndicator]
  -[CAMPreviewView pointIndicator]
  -[CAMPreviewView levelView]
  -[CAMPreviewView centeredSubjectIndicatorView]
  -[CAMPreviewView stageLightOverlayView]
  -[CAMPreviewView _faceOrientationForRollAngle:]
  -[CAMPreviewView faceIndicatorFrameForFaceResult:]
  -[CAMPreviewView bodyIndicatorFrameForResult:]
  -[CAMPreviewView _aspectFaceRectFromSquareFaceRect:angle:]
  -[CAMPreviewView setIndicatorClippingStyle:]
  -[CAMPreviewView setContinuousIndicator:]
  -[CAMPreviewView setPointIndicator:]
  -[CAMPreviewView indicatePointOfInterest:]
  -[CAMPreviewView setStageLightOverlayView:]
  -[CAMPreviewView setCenteredSubjectIndicatorView:]
  -[CAMPreviewView fixedSizeSubjectIndicatorFrameForFaceResult:]
  -[CAMPreviewView fixedSizeSubjectIndicatorFrameForBodyResult:]
  -[CAMPreviewView mrcIndicatorFrameForMRCResult:]
  -[CAMPreviewView _simulatorLabel]


CAMBadgeTray : UIView /System/Library/Frameworks/Foundation.framework/Foundation <CEKBadgeViewDelegate>
 @property  NSMutableDictionary *_badgeMap
 @property  <CAMBadgeTrayDelegate> *delegate
 @property  unsigned long visibleBadges
 @property  NSString *contentSize
 @property  CAMFlashBadge *flashBadge
 @property  CAMLivePhotoBadge *livePhotoBadge
 @property  CAMFocusLockBadge *focusLockBadge
 @property  CAMElapsedTimeView *elapsedTimeView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMBadgeTray delegate]
  -[CAMBadgeTray setDelegate:]
  -[CAMBadgeTray .cxx_destruct]
  -[CAMBadgeTray contentSize]
  -[CAMBadgeTray setContentSize:]
  -[CAMBadgeTray initWithFrame:]
  -[CAMBadgeTray layoutSubviews]
  -[CAMBadgeTray badgeViewDidChangeIntrinsicContentSize:]
  -[CAMBadgeTray elapsedTimeView]
  -[CAMBadgeTray _badgeFontStyle]
  -[CAMBadgeTray _createControlForType:]
  -[CAMBadgeTray setVisibleBadges:animated:]
  -[CAMBadgeTray livePhotoBadge]
  -[CAMBadgeTray flashBadge]
  -[CAMBadgeTray visibleBadges]
  -[CAMBadgeTray _layoutBadges:withVisibleBadges:]
  -[CAMBadgeTray _updateBadgesVisibilityForVisibleBadges:]
  -[CAMBadgeTray _badgeMap]
  -[CAMBadgeTray _forBadgeTypeInBadgeTypes:do:]
  -[CAMBadgeTray _loadBadgesIfNeededForTypes:]
  -[CAMBadgeTray focusLockBadge]
  -[CAMBadgeTray setVisibleBadges:]


CAMLocationController : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *_authorizationQueue
 @property  BOOL _monitoringLocation
 @property  CLLocationManager *_locationManager
 @property  NSMutableArray *_enqueuedAssetsWaitingForLocation
 @property  BOOL _didRequestLocation
 @property  BOOL enabled
 @property  BOOL headingEnabled
 @property  CLLocation *currentLocation
 @property  CLHeading *currentHeading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMLocationController locationMetadataForLocation:heading:device:]
  +[CAMLocationController _sharedGPSTimestampFormatter]
  +[CAMLocationController _sharedGPSDatestampFormatter]

  // instance methods
  -[CAMLocationController init]
  -[CAMLocationController dealloc]
  -[CAMLocationController setEnabled:]
  -[CAMLocationController .cxx_destruct]
  -[CAMLocationController isEnabled]
  -[CAMLocationController locationManager:didUpdateLocations:]
  -[CAMLocationController locationManager:didChangeAuthorizationStatus:]
  -[CAMLocationController locationManager:didUpdateHeading:]
  -[CAMLocationController currentLocation]
  -[CAMLocationController setHeadingEnabled:]
  -[CAMLocationController _locationManager]
  -[CAMLocationController _authorizationQueue]
  -[CAMLocationController headingForOrientation:]
  -[CAMLocationController _updateLocationMonitoring]
  -[CAMLocationController _resetDidRequestLocation]
  -[CAMLocationController _stopMonitoringLocationUpdates]
  -[CAMLocationController _isMonitoringLocation]
  -[CAMLocationController _authorizeOrStartLocationManager]
  -[CAMLocationController _didRequestLocation]
  -[CAMLocationController _setDidRequestLocation:]
  -[CAMLocationController isHeadingEnabled]
  -[CAMLocationController _startMonitoringLocationUpdates]
  -[CAMLocationController _updateAssetsWaitingOnLocation]
  -[CAMLocationController enqueueAssetForLocationUpdates:]
  -[CAMLocationController currentHeading]
  -[CAMLocationController _enqueuedAssetsWaitingForLocation]


CAMTimelapsePlaceholderResult : NSObject /usr/lib/libSystem.B.dylib <CAMTransientAssetConvertible>
 @property  NSString *assetUUID
 @property  unsigned short sessionIdentifier
 @property  NSDate *creationDate
 @property  long long captureOrientation
 @property  long long captureDevice
 @property  {CGSize=dd} videoDimensions
 @property  ^v previewImageSurface
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long mediaType
 @property  unsigned long mediaSubtypes
 @property  NSString *uuid
 @property  NSURL *persistenceURL
 @property  NSDate *captureDate
 @property  UIImage *placeholderImage
 @property  {CGSize=dd} finalExpectedPixelSize
 @property  NSDictionary *stillImageMetadata
 @property  NSString *burstIdentifier
 @property  unsigned long numberOfRepresentedAssets
 @property  {?=qiIq} duration
 @property  NSString *irisStillImageUUID
 @property  BOOL expectingPairedVideo
 @property  NSURL *irisVideoPersistenceURL
 @property  {?=qiIq} irisStillDisplayTime

  // instance methods
  -[CAMTimelapsePlaceholderResult dealloc]
  -[CAMTimelapsePlaceholderResult .cxx_destruct]
  -[CAMTimelapsePlaceholderResult uuid]
  -[CAMTimelapsePlaceholderResult duration]
  -[CAMTimelapsePlaceholderResult creationDate]
  -[CAMTimelapsePlaceholderResult mediaType]
  -[CAMTimelapsePlaceholderResult sessionIdentifier]
  -[CAMTimelapsePlaceholderResult placeholderImage]
  -[CAMTimelapsePlaceholderResult captureDate]
  -[CAMTimelapsePlaceholderResult videoDimensions]
  -[CAMTimelapsePlaceholderResult burstIdentifier]
  -[CAMTimelapsePlaceholderResult assetUUID]
  -[CAMTimelapsePlaceholderResult mediaSubtypes]
  -[CAMTimelapsePlaceholderResult captureDevice]
  -[CAMTimelapsePlaceholderResult numberOfRepresentedAssets]
  -[CAMTimelapsePlaceholderResult persistenceURL]
  -[CAMTimelapsePlaceholderResult captureOrientation]
  -[CAMTimelapsePlaceholderResult finalExpectedPixelSize]
  -[CAMTimelapsePlaceholderResult isExpectingPairedVideo]
  -[CAMTimelapsePlaceholderResult irisStillDisplayTime]
  -[CAMTimelapsePlaceholderResult stillImageMetadata]
  -[CAMTimelapsePlaceholderResult irisStillImageUUID]
  -[CAMTimelapsePlaceholderResult irisVideoPersistenceURL]
  -[CAMTimelapsePlaceholderResult previewImageSurface]
  -[CAMTimelapsePlaceholderResult initWithAssetUUID:captureSession:creationDate:captureOrientation:captureDevice:videoDimensions:previewImageSurface:]


CAMCVCStillImageResultCoordinator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *_receivedPhotos
 @property  NSMutableSet *_receivedVideos
 @property  NSMutableSet *_photoResultSpecifiersDelayingForcedDispatch
 @property  NSMutableSet *_videoResultSpecifiersDelayingForcedDispatch
 @property  BOOL _delayingForcedDispatch
 @property  BOOL _didReceiveForceRemainingDispatchesIfPossible
 @property  NSMutableSet *_handledResultSpecifiers
 @property  NSMutableSet *_dispatchedResultSpecifiers
 @property  NSMutableDictionary *_pendingPhotoProperties
 @property  NSMutableDictionary *_pendingVideoProperties
 @property  NSMutableDictionary *_pendingAssetAdjustments
 @property  <CAMCVCStillImageResultCoordinatorDelegate> *delegate
 @property  NSString *identifier
 @property  NSSet *allExpectedResultSpecifiers
 @property  BOOL expectingPairedVideo
 @property  BOOL allowMultipleCaptures
 @property  BOOL shouldReturnFilteredPhotosAsSingleAsset

  // instance methods
  -[CAMCVCStillImageResultCoordinator delegate]
  -[CAMCVCStillImageResultCoordinator .cxx_destruct]
  -[CAMCVCStillImageResultCoordinator identifier]
  -[CAMCVCStillImageResultCoordinator isExpectingPairedVideo]
  -[CAMCVCStillImageResultCoordinator allExpectedResultSpecifiers]
  -[CAMCVCStillImageResultCoordinator _isDelayingForcedDispatch]
  -[CAMCVCStillImageResultCoordinator _receivedPhotos]
  -[CAMCVCStillImageResultCoordinator _photoResultSpecifiersDelayingForcedDispatch]
  -[CAMCVCStillImageResultCoordinator _pendingPhotoProperties]
  -[CAMCVCStillImageResultCoordinator _pendingAssetAdjustments]
  -[CAMCVCStillImageResultCoordinator _didReceiveForceRemainingDispatchesIfPossible]
  -[CAMCVCStillImageResultCoordinator _dispatchPendingPropertiesForced:]
  -[CAMCVCStillImageResultCoordinator _receivedVideos]
  -[CAMCVCStillImageResultCoordinator _videoResultSpecifiersDelayingForcedDispatch]
  -[CAMCVCStillImageResultCoordinator _pendingVideoProperties]
  -[CAMCVCStillImageResultCoordinator _setDidReceiveForceRemainingDispatchesIfPossible:]
  -[CAMCVCStillImageResultCoordinator allowMultipleCaptures]
  -[CAMCVCStillImageResultCoordinator _dispatchedResultSpecifiers]
  -[CAMCVCStillImageResultCoordinator _handledResultSpecifiers]
  -[CAMCVCStillImageResultCoordinator shouldReturnFilteredPhotosAsSingleAsset]
  -[CAMCVCStillImageResultCoordinator _isWaitingOnResultSpecifiers:]
  -[CAMCVCStillImageResultCoordinator _attemptDispatchForPairWithFilteredResultSpecifiers:unfilteredResultSpecifiers:forceRemainingDispatches:]
  -[CAMCVCStillImageResultCoordinator _attemptDispatchForResultSpecifiers:forceRemainingDispatches:]
  -[CAMCVCStillImageResultCoordinator _errorForResultSpecifiers:allowMissingVideo:]
  -[CAMCVCStillImageResultCoordinator _errorWithDescription:code:]
  -[CAMCVCStillImageResultCoordinator initWithDelegate:identifier:allExpectedResultSpecifiers:isExpectingPairedVideo:allowMultipleCaptures:shouldReturnFilteredPhotosAsSingleAsset:]
  -[CAMCVCStillImageResultCoordinator updatePhotoProperties:assetAdjustments:forResultSpecifiers:]
  -[CAMCVCStillImageResultCoordinator updateVideoProperties:forResultSpecifiers:]
  -[CAMCVCStillImageResultCoordinator delayForcedDispatchForPhotoResultSpecifiers:]
  -[CAMCVCStillImageResultCoordinator delayForcedDispatchForVideoResultSpecifiers:]
  -[CAMCVCStillImageResultCoordinator forceRemainingDispatchesIfPossible]


CAMThumbnailGenerator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_generationQueue
 @property  ^{OpaqueVTPixelTransferSession=} _generationQueuePixelTransferSession
 @property  NSMapTable *_generationQueueRotationSessionsMapTable

  // instance methods
  -[CAMThumbnailGenerator init]
  -[CAMThumbnailGenerator dealloc]
  -[CAMThumbnailGenerator .cxx_destruct]
  -[CAMThumbnailGenerator _generationQueue]
  -[CAMThumbnailGenerator newJPEGDataOfFormat:inOrientation:usingSurface:withMetadata:]
  -[CAMThumbnailGenerator newJPEGDataInOrientation:usingSurface:withMetadata:]
  -[CAMThumbnailGenerator newJPEGDataInOrientation:usingPixelBuffer:]
  -[CAMThumbnailGenerator newBGRAImageOfFormat:inOrientation:usingSurface:]
  -[CAMThumbnailGenerator newBGRAImageOfFormat:inOrientation:usingPixelBuffer:]
  -[CAMThumbnailGenerator _generationQueuePixelTransferSession]
  -[CAMThumbnailGenerator _generationQueueRotationSessionsMapTable]
  -[CAMThumbnailGenerator _newThumbnailOfSize:inOrientation:withPixelFormat:usingPixelBuffer:]
  -[CAMThumbnailGenerator _newThumbnailOfFormat:inOrientation:withPixelFormat:usingPixelBuffer:]
  -[CAMThumbnailGenerator _neededColorspacePropertiesFromMetadata:]
  -[CAMThumbnailGenerator _newRotatedPixelBuffer:withOrientation:]
  -[CAMThumbnailGenerator newBGRAImageInOrientation:usingSurface:]
  -[CAMThumbnailGenerator newBGRAImageInOrientation:usingPixelBuffer:]


CAMSampleBufferVideoFormatOutputCommand : CAMCaptureCommand
 @property  long long _videoFormat

  // instance methods
  -[CAMSampleBufferVideoFormatOutputCommand copyWithZone:]
  -[CAMSampleBufferVideoFormatOutputCommand encodeWithCoder:]
  -[CAMSampleBufferVideoFormatOutputCommand initWithCoder:]
  -[CAMSampleBufferVideoFormatOutputCommand _videoFormat]
  -[CAMSampleBufferVideoFormatOutputCommand executeWithContext:]
  -[CAMSampleBufferVideoFormatOutputCommand initWithSampleBufferVideoFormat:]


CAMPanoramaPreviewView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  ^{_CAImageQueue=} imageQueue

  // instance methods
  -[CAMPanoramaPreviewView imageQueue]
  -[CAMPanoramaPreviewView setImageQueue:]


CAMInstructionLabel : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *_label
 @property  {UIEdgeInsets=dddd} _textInsets
 @property  double _backgroundAlpha
 @property  NSString *text
 @property  <CAMInstructionLabelDelegate> *delegate
 @property  long long style
 @property  BOOL useModeDialFontSize

  // instance methods
  -[CAMInstructionLabel delegate]
  -[CAMInstructionLabel setDelegate:]
  -[CAMInstructionLabel .cxx_destruct]
  -[CAMInstructionLabel style]
  -[CAMInstructionLabel setStyle:]
  -[CAMInstructionLabel text]
  -[CAMInstructionLabel setText:]
  -[CAMInstructionLabel _label]
  -[CAMInstructionLabel intrinsicContentSize]
  -[CAMInstructionLabel initWithFrame:]
  -[CAMInstructionLabel sizeThatFits:]
  -[CAMInstructionLabel layoutSubviews]
  -[CAMInstructionLabel _updateLabel]
  -[CAMInstructionLabel _backgroundAlpha]
  -[CAMInstructionLabel _textAttributes]
  -[CAMInstructionLabel _textInsets]
  -[CAMInstructionLabel _updateLayer]
  -[CAMInstructionLabel updateToContentSize:]
  -[CAMInstructionLabel setUseModeDialFontSize:]
  -[CAMInstructionLabel useModeDialFontSize]


CAMNonDestructiveCropAspectRatioCommand : CAMCaptureCommand
 @property  long long _aspectRatioCrop

  // instance methods
  -[CAMNonDestructiveCropAspectRatioCommand copyWithZone:]
  -[CAMNonDestructiveCropAspectRatioCommand encodeWithCoder:]
  -[CAMNonDestructiveCropAspectRatioCommand initWithCoder:]
  -[CAMNonDestructiveCropAspectRatioCommand executeWithContext:]
  -[CAMNonDestructiveCropAspectRatioCommand initWithSubcommands:]
  -[CAMNonDestructiveCropAspectRatioCommand initWithAspectRatioCrop:]
  -[CAMNonDestructiveCropAspectRatioCommand _aspectRatioCrop]


CAMGraphConfigurationInspectionCommand : CAMCaptureCommand
 @property  CAMCaptureGraphConfiguration *_knownGraphConfiguration
 @property  CAMCaptureGraphConfiguration *_resolvedGraphConfiguration

  // instance methods
  -[CAMGraphConfigurationInspectionCommand copyWithZone:]
  -[CAMGraphConfigurationInspectionCommand userInfo]
  -[CAMGraphConfigurationInspectionCommand encodeWithCoder:]
  -[CAMGraphConfigurationInspectionCommand initWithCoder:]
  -[CAMGraphConfigurationInspectionCommand .cxx_destruct]
  -[CAMGraphConfigurationInspectionCommand executeWithContext:]
  -[CAMGraphConfigurationInspectionCommand _resolvedGraphConfiguration]
  -[CAMGraphConfigurationInspectionCommand _setResolvedGraphConfiguration:]
  -[CAMGraphConfigurationInspectionCommand initWithKnownGraphConfiguration:]
  -[CAMGraphConfigurationInspectionCommand _knownGraphConfiguration]
  -[CAMGraphConfigurationInspectionCommand _resolvedVideoConfigurationFromContext:]


CAMZoomDialDotsView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CALayer *_dotLayer
 @property  long long dotCount
 @property  {CGPoint=dd} dotCenter
 @property  double dotSpacingAngle

  // class methods
  +[CAMZoomDialDotsView layerClass]

  // instance methods
  -[CAMZoomDialDotsView .cxx_destruct]
  -[CAMZoomDialDotsView initWithDotImage:]
  -[CAMZoomDialDotsView setDotSpacingAngle:]
  -[CAMZoomDialDotsView setDotCount:]
  -[CAMZoomDialDotsView dotSpacingAngle]
  -[CAMZoomDialDotsView setDotCenter:]
  -[CAMZoomDialDotsView _replicatorLayer]
  -[CAMZoomDialDotsView _dotLayer]
  -[CAMZoomDialDotsView dotCount]
  -[CAMZoomDialDotsView dotCenter]


CAMFramerateIndicatorView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIImageView *_borderImageView
 @property  UILabel *_label
 @property  long long layoutStyle
 @property  long long style

  // instance methods
  -[CAMFramerateIndicatorView initWithCoder:]
  -[CAMFramerateIndicatorView .cxx_destruct]
  -[CAMFramerateIndicatorView style]
  -[CAMFramerateIndicatorView setStyle:]
  -[CAMFramerateIndicatorView _label]
  -[CAMFramerateIndicatorView intrinsicContentSize]
  -[CAMFramerateIndicatorView initWithFrame:]
  -[CAMFramerateIndicatorView sizeThatFits:]
  -[CAMFramerateIndicatorView layoutSubviews]
  -[CAMFramerateIndicatorView alignmentRectInsets]
  -[CAMFramerateIndicatorView setLayoutStyle:]
  -[CAMFramerateIndicatorView layoutStyle]
  -[CAMFramerateIndicatorView _updateAppearance]
  -[CAMFramerateIndicatorView initWithLayoutStyle:]
  -[CAMFramerateIndicatorView _borderImageView]
  -[CAMFramerateIndicatorView _commonCAMFramerateIndicatorViewInitializationWithLayoutStyle:]
  -[CAMFramerateIndicatorView _updateForAppearanceChange]
  -[CAMFramerateIndicatorView _framesPerSecond]


CAMQueryTimelapseDimensionsCommand : CAMCaptureCommand
 @property  @? _completionBlock

  // instance methods
  -[CAMQueryTimelapseDimensionsCommand copyWithZone:]
  -[CAMQueryTimelapseDimensionsCommand encodeWithCoder:]
  -[CAMQueryTimelapseDimensionsCommand initWithCoder:]
  -[CAMQueryTimelapseDimensionsCommand .cxx_destruct]
  -[CAMQueryTimelapseDimensionsCommand _completionBlock]
  -[CAMQueryTimelapseDimensionsCommand initWithCompletionBlock:]
  -[CAMQueryTimelapseDimensionsCommand _setCompletionBlock:]
  -[CAMQueryTimelapseDimensionsCommand executeWithContext:]


CAMShutterButtonRingView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  {CAMShutterButtonSpec=ddddd} spec
 @property  BOOL showContrastBorder
 @property  UIColor *color

  // instance methods
  -[CAMShutterButtonRingView initWithCoder:]
  -[CAMShutterButtonRingView .cxx_destruct]
  -[CAMShutterButtonRingView color]
  -[CAMShutterButtonRingView setColor:]
  -[CAMShutterButtonRingView initWithFrame:]
  -[CAMShutterButtonRingView alignmentRectInsets]
  -[CAMShutterButtonRingView drawRect:]
  -[CAMShutterButtonRingView setSpec:]
  -[CAMShutterButtonRingView spec]
  -[CAMShutterButtonRingView initWithSpec:]
  -[CAMShutterButtonRingView setShowContrastBorder:]
  -[CAMShutterButtonRingView showContrastBorder]


CAMCaptureEngine : NSObject /usr/lib/libSystem.B.dylib <CAMPanoramaProcessorDelegate, AVCaptureVideoThumbnailContentsDelegate>
 @property  CAMMemoizationCache *_captureEngineDeviceCache
 @property  long long _engineOptions
 @property  AVCaptureSession *_captureSession
 @property  NSObject<OS_dispatch_queue> *_captureSessionQueue
 @property  AVCaptureVideoPreviewLayer *_videoPreviewLayer
 @property  AVSpatialOverCaptureVideoPreviewLayer *_overCaptureVideoPreviewLayer
 @property  BOOL interrupted
 @property  CAMPowerController *_powerController
 @property  unsigned int _panoramaAssertionIdentifier
 @property  AVCaptureDevice *currentCameraDevice
 @property  AVCapturePhotoOutput *currentStillImageOutput
 @property  BOOL managedDevicesLockedForConfiguration
 @property  NSMutableDictionary *_sessionQueueRegisteredStillImageRequests
 @property  NSMutableSet *_sessionQueueRegisteredStillImageRequestsDispatchedToFilteringQueue
 @property  NSMutableDictionary *_sessionQueueCachedPhotoInitiationSettings
 @property  NSMutableDictionary *_sessionQueueRequestsBeingRecorded
 @property  NSURL *_sessionQueueLastCompletedVideoURL
 @property  NSObject<OS_dispatch_queue> *_captureServicesQueue
 @property  NSMutableArray *_servicesQueueCaptureServices
 @property  NSObject<OS_dispatch_queue> *_metadataObjectsQueue
 @property  NSObject<OS_dispatch_queue> *_panoramaSampleBufferQueue
 @property  NSObject<OS_dispatch_queue> *_panoramaSubgraphQueue
 @property  ^{_CAImageQueue=} _panoramaImageQueue
 @property  CAMPanoramaProcessor *_panoramaProcessor
 @property  NSObject<OS_dispatch_semaphore> *_panoramaFirstImageQueueUpdateSemaphore
 @property  NSObject<OS_dispatch_queue> *_panoramaFirstImageQueueUpdateSemaphoreQueue
 @property  NSObject<OS_dispatch_queue> *_effectsPreviewSurfaceFilteringQueue
 @property  CIContext *_effectsPreviewSurfaceFilteringContext
 @property  NSObject<OS_dispatch_queue> *_effectsPreviewSampleBufferQueue
 @property  NSHashTable *_effectsPreviewSampleBufferDelegates
 @property  NSHashTable *_videoThumbnailContentsDelegates
 @property  NSObject<OS_dispatch_queue> *_recoveryMutexQueue
 @property  BOOL _performingRecovery
 @property  unsigned long _numberOfRecoveryAttempts
 @property  AVCaptureVideoPreviewLayer *videoPreviewLayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMCaptureEngine preheatCaptureResources]
  +[CAMCaptureEngine _cacheKeyForDeviceType:position:]

  // instance methods
  -[CAMCaptureEngine dealloc]
  -[CAMCaptureEngine .cxx_destruct]
  -[CAMCaptureEngine isInterrupted]
  -[CAMCaptureEngine captureOutput:didOutputSampleBuffer:fromConnection:]
  -[CAMCaptureEngine captureOutput:didDropSampleBuffer:fromConnection:]
  -[CAMCaptureEngine videoThumbnailOutputWillEndRenderingThumbnails:]
  -[CAMCaptureEngine videoThumbnailOutput:willBeginRenderingThumbnailsWithContents:]
  -[CAMCaptureEngine captureOutput:didFinishProcessingPhoto:error:]
  -[CAMCaptureEngine videoPreviewLayer]
  -[CAMCaptureEngine stopRecording]
  -[CAMCaptureEngine captureOutput:didBeginMovieCaptureForResolvedSettings:]
  -[CAMCaptureEngine captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:]
  -[CAMCaptureEngine captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:]
  -[CAMCaptureEngine captureOutput:didFinishWritingMovie:error:]
  -[CAMCaptureEngine captureOutput:didFinishMovieCaptureForResolvedSettings:error:]
  -[CAMCaptureEngine captureOutput:didOutputMetadataObjects:forMetadataObjectTypes:fromConnection:]
  -[CAMCaptureEngine captureOutput:willBeginCaptureForResolvedSettings:]
  -[CAMCaptureEngine captureOutput:willCapturePhotoForResolvedSettings:]
  -[CAMCaptureEngine captureOutput:didCapturePhotoForResolvedSettings:]
  -[CAMCaptureEngine captureOutput:didFinishCapturingDeferredPhotoProxy:error:]
  -[CAMCaptureEngine captureOutput:didFinishRecordingLivePhotoMovieForEventualFileAtURL:resolvedSettings:]
  -[CAMCaptureEngine captureOutput:didFinishProcessingLivePhotoToMovieFileAtURL:duration:photoDisplayTime:resolvedSettings:error:]
  -[CAMCaptureEngine captureOutput:didFinishCaptureForResolvedSettings:error:]
  -[CAMCaptureEngine captureOutput:didFinishRecordingMovie:]
  -[CAMCaptureEngine _captureSession]
  -[CAMCaptureEngine stillImageOutput]
  -[CAMCaptureEngine _handleApplicationWillEnterForeground:]
  -[CAMCaptureEngine _handleApplicationDidEnterBackground:]
  -[CAMCaptureEngine stopWithCompletion:]
  -[CAMCaptureEngine _numberOfRecoveryAttempts]
  -[CAMCaptureEngine _powerController]
  -[CAMCaptureEngine _captureSessionQueue]
  -[CAMCaptureEngine currentStillImageOutput]
  -[CAMCaptureEngine prewarmedVideoDeviceInput:position:device:]
  -[CAMCaptureEngine cachedMomentCaptureSettingsForIdentifier:]
  -[CAMCaptureEngine clearCachedMomentCaptureSettingsForIdentifier:]
  -[CAMCaptureEngine registerStillImageCaptureRequest:withSettings:]
  -[CAMCaptureEngine cacheMomentCaptureSettings:forIdentifier:]
  -[CAMCaptureEngine registerVideoThumbnailContentsDelegate:]
  -[CAMCaptureEngine unregisterVideoThumbnailContentsDelegate:]
  -[CAMCaptureEngine movieFileOutput]
  -[CAMCaptureEngine registerVideoCaptureRequest:]
  -[CAMCaptureEngine startPanoramaCaptureWithRequest:]
  -[CAMCaptureEngine stopPanoramaCaptureInterrupted:]
  -[CAMCaptureEngine backCameraDevice]
  -[CAMCaptureEngine backTelephotoCameraDevice]
  -[CAMCaptureEngine backDualCameraDevice]
  -[CAMCaptureEngine backSuperWideCameraDevice]
  -[CAMCaptureEngine backWideDualCameraDevice]
  -[CAMCaptureEngine backTripleCameraDevice]
  -[CAMCaptureEngine frontPearlCameraDevice]
  -[CAMCaptureEngine frontCameraDevice]
  -[CAMCaptureEngine audioCaptureDeviceInput]
  -[CAMCaptureEngine panoramaVideoDataOutput]
  -[CAMCaptureEngine videoThumbnailOutput]
  -[CAMCaptureEngine effectsPreviewVideoDataOutput]
  -[CAMCaptureEngine metadataOutput]
  -[CAMCaptureEngine setCurrentStillImageOutput:]
  -[CAMCaptureEngine changeToPanoramaDirection:]
  -[CAMCaptureEngine panoramaProcessor:didProcessSampleBuffer:withStatus:forRequest:]
  -[CAMCaptureEngine initWithPowerController:options:]
  -[CAMCaptureEngine registerCaptureService:]
  -[CAMCaptureEngine enqueueCommand:]
  -[CAMCaptureEngine startWithRetryCount:retryInterval:logReason:completion:]
  -[CAMCaptureEngine overCaptureVideoPreviewLayer]
  -[CAMCaptureEngine currentCameraDevice]
  -[CAMCaptureEngine unregisterCaptureService:]
  -[CAMCaptureEngine registerEffectsPreviewSampleBufferDelegate:]
  -[CAMCaptureEngine unregisterEffectsPreviewSampleBufferDelegate:]
  -[CAMCaptureEngine _videoPreviewLayer]
  -[CAMCaptureEngine prewarmedCaptureSession]
  -[CAMCaptureEngine _handleSessionDidStartRunning:]
  -[CAMCaptureEngine _handleSessionDidStopRunning:]
  -[CAMCaptureEngine _handleSessionRuntimeError:]
  -[CAMCaptureEngine _handleSessionInterruption:]
  -[CAMCaptureEngine _handleSessionInterruptionEnded:]
  -[CAMCaptureEngine _engineOptions]
  -[CAMCaptureEngine _sessionQueue_startWithRetryCount:retryInterval:logReason:completion:]
  -[CAMCaptureEngine _scheduleDelayedSessionNonstartRecovery]
  -[CAMCaptureEngine _cancelDelayedSessionNonstartRecovery]
  -[CAMCaptureEngine _recoveryMutexQueue]
  -[CAMCaptureEngine _isPerformingRecovery]
  -[CAMCaptureEngine _resetPerformingRecoveryState]
  -[CAMCaptureEngine _scheduleDelayedRecoveryCheckIfNecessary]
  -[CAMCaptureEngine _enumerateCaptureServicesUsingBlock:]
  -[CAMCaptureEngine _performSessionRuntimeRecovery:]
  -[CAMCaptureEngine _setPerformingRecovery:]
  -[CAMCaptureEngine _setNumberOfRecoveryAttempts:]
  -[CAMCaptureEngine _handleFailedSessionRecoveryAttemptAfterDelay:]
  -[CAMCaptureEngine _recoverFromSessionRuntimeError]
  -[CAMCaptureEngine _panoramaSampleBufferQueue]
  -[CAMCaptureEngine _panoramaSampleBufferQueue_stopPanoramaCaptureIfNecessaryInterrupted:]
  -[CAMCaptureEngine _setInterrupted:]
  -[CAMCaptureEngine _delayForRecoveryAttempt:]
  -[CAMCaptureEngine _performSessionNonstartRecoveryIfNeeded]
  -[CAMCaptureEngine _validateSessionRecovery]
  -[CAMCaptureEngine _updatePanoramaSubgraphForEnteringBackground:]
  -[CAMCaptureEngine _videoDeviceInputFromSession:]
  -[CAMCaptureEngine _isSessionModificationRequiredByCommand:logReason:]
  -[CAMCaptureEngine _accumulatedUserInfoFromCommand:]
  -[CAMCaptureEngine _updateCurrentlyConfiguredObjects]
  -[CAMCaptureEngine _updateEffectsSubgraph]
  -[CAMCaptureEngine _updateVideoThumbnailSubgraph]
  -[CAMCaptureEngine _shouldStartSessionOnConfigurationChanges]
  -[CAMCaptureEngine _panoramaFirstImageQueueUpdateSemaphoreQueue]
  -[CAMCaptureEngine _setPanoramaFirstImageQueueUpdateSemaphore:]
  -[CAMCaptureEngine _lockManagedCapturedDevice:]
  -[CAMCaptureEngine setManagedDevicesLockedForConfiguration:]
  -[CAMCaptureEngine _unlockManagedCaptureDevice:]
  -[CAMCaptureEngine _photoOutputFromSession:]
  -[CAMCaptureEngine setCurrentCameraDevice:]
  -[CAMCaptureEngine _updateContext:]
  -[CAMCaptureEngine _executeCommand:withContext:]
  -[CAMCaptureEngine _beginSessionConfigurationIfRequiredByCommand:withContext:logReason:]
  -[CAMCaptureEngine _lockAllEngineManagedDevices]
  -[CAMCaptureEngine _unlockAllEngineManagedDevices]
  -[CAMCaptureEngine _commitSessionConfigurationIfNecessaryWithLogReason:]
  -[CAMCaptureEngine _captureServicesQueue]
  -[CAMCaptureEngine _servicesQueueCaptureServices]
  -[CAMCaptureEngine _enumerateCaptureServicesUsingBlock:completion:]
  -[CAMCaptureEngine _sessionQueueRegisteredStillImageRequests]
  -[CAMCaptureEngine _sessionQueueCachedPhotoInitiationSettings]
  -[CAMCaptureEngine _handleCaptureOutputDidFinishCapturingPhoto:deferredPhotoProxy:error:]
  -[CAMCaptureEngine _coordinationInfoForRequest:photo:]
  -[CAMCaptureEngine _previewFiltersForFilterType:previewCrop:inPreviewSize:]
  -[CAMCaptureEngine _sessionQueue_performPostprocessingForPreviewBuffer:filters:stillImageCaptureRequestKey:completionHandler:]
  -[CAMCaptureEngine _expectedResultSpecifiersForResolvedPhotoSettings:]
  -[CAMCaptureEngine _expectedResultSpecifiersForResolvedMomentCaptureMovieSettings:]
  -[CAMCaptureEngine _coordinationInfoForRequest:resolvedSettings:videoComplementURL:isFiltered:]
  -[CAMCaptureEngine _validateVideoAtURL:withCaptureID:withCaptureError:isVideoComplement:stillImageDisplayTime:reportedDuration:outActualDuration:outVideoRecordingStoppedReason:]
  -[CAMCaptureEngine _didFinishStillImageCaptureForUniqueID:error:]
  -[CAMCaptureEngine _sessionQueueRegisteredStillImageRequestsDispatchedToFilteringQueue]
  -[CAMCaptureEngine _effectsPreviewSurfaceFilteringQueue]
  -[CAMCaptureEngine _coordinationInfoForCTMVideoRequest:videoOutputURL:resolvedMomentCaptureMovieSettings:]
  -[CAMCaptureEngine _createOutputPixelBufferWithSize:matchingInputPixelBuffer:]
  -[CAMCaptureEngine _newFilteredPixelBufferFromPixelBuffer:filters:]
  -[CAMCaptureEngine _sessionQueueRequestsBeingRecorded]
  -[CAMCaptureEngine _sessionQueueLastCompletedVideoURL]
  -[CAMCaptureEngine _setSessionQueueLastCompletedVideoURL:]
  -[CAMCaptureEngine _captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:forVideoCaptureRequest:videoZoomFactor:error:]
  -[CAMCaptureEngine _panoramaProcessor]
  -[CAMCaptureEngine _notificationForError:]
  -[CAMCaptureEngine _sessionQueuePanoramaTeardown]
  -[CAMCaptureEngine _sessionQueuePanoramaSetup]
  -[CAMCaptureEngine _panoramaSubgraphQueue]
  -[CAMCaptureEngine _panoramaAssertionIdentifier]
  -[CAMCaptureEngine _subgraphQueueCreatePanoramaProcessorIfNecessaryWithEncodingBehavior:]
  -[CAMCaptureEngine _subgraphQueueCreatePanoramaImageQueueIfNecessary]
  -[CAMCaptureEngine _panoramaImageQueue]
  -[CAMCaptureEngine _notifyServicesOfPanoramaConfigurationChangeWithImageQueue:direction:]
  -[CAMCaptureEngine _setPanoramaProcessor:]
  -[CAMCaptureEngine _setPanoramaImageQueue:]
  -[CAMCaptureEngine _panoramaFirstImageQueueUpdateSemaphore]
  -[CAMCaptureEngine _effectsPreviewSampleBufferQueue]
  -[CAMCaptureEngine _videoThumbnailContentsDelegates]
  -[CAMCaptureEngine _effectsPreviewSampleBufferDelegates]
  -[CAMCaptureEngine _captureEngineDeviceForDeviceType:position:]
  -[CAMCaptureEngine _captureEngineDeviceCache]
  -[CAMCaptureEngine areManagedDevicesLockedForConfiguration]
  -[CAMCaptureEngine audioCaptureDevice]
  -[CAMCaptureEngine prewarmedAudioDeviceInput:device:]
  -[CAMCaptureEngine _metadataObjectsQueue]
  -[CAMCaptureEngine _subgraphQueueHandlePanoramaStatusNotification:]
  -[CAMCaptureEngine _subgraphQueueHandlePanoramaWarningNotification:]
  -[CAMCaptureEngine _subgraphQueueHandlePanoramaErrorNotification:]
  -[CAMCaptureEngine changePanoramaEncodingBehaviorIfNeeded:]
  -[CAMCaptureEngine _overCaptureVideoPreviewLayer]
  -[CAMCaptureEngine _setPanoramaAssertionIdentifier:]
  -[CAMCaptureEngine _effectsPreviewSurfaceFilteringContext]


CAMTimelapseDiskUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMTimelapseDiskUtilities hasPendingWork]
  +[CAMTimelapseDiskUtilities fileNameForImageFrameIndex:]
  +[CAMTimelapseDiskUtilities directoryPathForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities readSortedStatesFromDiskMergeSecondaryState:]
  +[CAMTimelapseDiskUtilities reserveDummyFileForTimelapseUUID:width:height:useHEVC:]
  +[CAMTimelapseDiskUtilities readSecondaryStateForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities writeStateToDisk:createDirectoryIfNeeded:]
  +[CAMTimelapseDiskUtilities timelapseDirectoryPathCreateIfNeeded:]
  +[CAMTimelapseDiskUtilities timelapseDirectoryPath]
  +[CAMTimelapseDiskUtilities stateFileName]
  +[CAMTimelapseDiskUtilities stateFilePathForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities secondaryStateFileName]
  +[CAMTimelapseDiskUtilities secondaryStateFilePathForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities writeSecondaryStateToDisk:forTimelapseUUID:]
  +[CAMTimelapseDiskUtilities timelapseUUIDsOnDisk]
  +[CAMTimelapseDiskUtilities readStateForTimelapseUUID:mergeSecondaryState:]
  +[CAMTimelapseDiskUtilities frameIndexFromImageFileName:]
  +[CAMTimelapseDiskUtilities dummyFileName]
  +[CAMTimelapseDiskUtilities dummyFilePathForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities fileNameForImageVISIndex:]
  +[CAMTimelapseDiskUtilities updateSecondaryStateForTimelapseUUID:withStopReasons:stopTime:]
  +[CAMTimelapseDiskUtilities updateSecondaryStateForMovieWriteAttemptForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities updateSecondaryStateForTimelapseUUID:forStateReadSuccessfully:]
  +[CAMTimelapseDiskUtilities readFrameFilePathsForTimelapseUUID:]
  +[CAMTimelapseDiskUtilities sortedArrayFromFilePathDictionary:reverse:]
  +[CAMTimelapseDiskUtilities removeDummyFileForTimelapseUUID:]


CAMCaptureConversions : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMCaptureConversions AVCaptureDeviceTypeForCAMCaptureDevice:]
  +[CAMCaptureConversions captureDigitalFlashModeForLowLightMode:]
  +[CAMCaptureConversions torchModeForFlashMode:]
  +[CAMCaptureConversions flashModeForTorchMode:]
  +[CAMCaptureConversions captureFlashModeForFlashMode:]
  +[CAMCaptureConversions captureTorchModeForTorchMode:]
  +[CAMCaptureConversions captureHDRModeForHDRMode:]
  +[CAMCaptureConversions AVCapturePhotoQualityPrioritizationForCAMPhotoQualityPrioritization:]
  +[CAMCaptureConversions captureExposureModeForExposureMode:]
  +[CAMCaptureConversions overCapturePreviewStatusForAVPreviewStatus:]
  +[CAMCaptureConversions focusModeForCaptureFocusMode:]
  +[CAMCaptureConversions exposureModeForCaptureExposureMode:]
  +[CAMCaptureConversions lowLightStatusForCaptureStatus:]
  +[CAMCaptureConversions shallowDepthOfFieldStatusForCaptureStatus:]
  +[CAMCaptureConversions stagePreviewStatusForCaptureStatus:]
  +[CAMCaptureConversions captureFocusModeForFocusMode:isPerformingContrastBasedFocus:]
  +[CAMCaptureConversions previewLayerVideoGravityForPreviewViewAspectMode:]
  +[CAMCaptureConversions captureWhiteBalanceModeForWhiteBalanceMode:]
  +[CAMCaptureConversions flashModeForCaptureFlashMode:]
  +[CAMCaptureConversions torchModeForCaptureTorchMode:]
  +[CAMCaptureConversions hdrModeForCaptureHDRMode:]
  +[CAMCaptureConversions whiteBalanceModeForCaptureWhiteBalanceMode:]
  +[CAMCaptureConversions viewContentModeForPreviewViewAspectMode:]
  +[CAMCaptureConversions AVDevicePositionForCAMDevicePosition:]
  +[CAMCaptureConversions CAMDevicePositionForAVDevicePosition:]
  +[CAMCaptureConversions CAMPhotoQualityPrioritizationForAVCapturePhotoQualityPrioritization:]


CAMCaptureGraphConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  long long mode
 @property  long long devicePosition
 @property  long long device
 @property  long long videoConfiguration
 @property  long long audioConfiguration
 @property  unsigned long previewConfiguration
 @property  long long previewSampleBufferVideoFormat
 @property  NSArray *previewFilters
 @property  CAMVideoThumbnailOutputConfiguration *videoThumbnailOutputConfiguration
 @property  long long photoEncodingBehavior
 @property  long long videoEncodingBehavior
 @property  BOOL videoHDRSuspended
 @property  BOOL enableAutoLowLightVideoIfSupported
 @property  long long aspectRatioCrop
 @property  long long photoQualityPrioritization

  // instance methods
  -[CAMCaptureGraphConfiguration .cxx_destruct]
  -[CAMCaptureGraphConfiguration mode]
  -[CAMCaptureGraphConfiguration device]
  -[CAMCaptureGraphConfiguration shortDescription]
  -[CAMCaptureGraphConfiguration photoQualityPrioritization]
  -[CAMCaptureGraphConfiguration isVideoHDRSuspended]
  -[CAMCaptureGraphConfiguration devicePosition]
  -[CAMCaptureGraphConfiguration audioConfiguration]
  -[CAMCaptureGraphConfiguration videoConfiguration]
  -[CAMCaptureGraphConfiguration photoEncodingBehavior]
  -[CAMCaptureGraphConfiguration videoEncodingBehavior]
  -[CAMCaptureGraphConfiguration aspectRatioCrop]
  -[CAMCaptureGraphConfiguration initWithCaptureMode:captureDevice:videoConfiguration:audioConfiguration:previewConfiguration:previewSampleBufferVideoFormat:previewFilters:videoThumbnailOutputConfiguration:photoEncodingBehavior:videoEncodingBehavior:enableAutoLowLightVideoIfSupported:videoHDRSuspended:aspectRatioCrop:photoQualityPrioritization:]
  -[CAMCaptureGraphConfiguration previewConfiguration]
  -[CAMCaptureGraphConfiguration previewSampleBufferVideoFormat]
  -[CAMCaptureGraphConfiguration previewFilters]
  -[CAMCaptureGraphConfiguration videoThumbnailOutputConfiguration]
  -[CAMCaptureGraphConfiguration enableAutoLowLightVideoIfSupported]
  -[CAMCaptureGraphConfiguration completeDescription]


CAMTimelapseMovieWriter : NSObject /usr/lib/libSystem.B.dylib <CAMTimelapseMovieWriterProtocol>
 @property  NSArray *_frameFilePaths
 @property  long long _nextReadFileIndex
 @property  long long _residentImageDataCount
 @property  long long _residentPixelBufferCount
 @property  NSMutableDictionary *_availableImageData
 @property  NSMutableDictionary *_availablePixelBuffers
 @property  NSMutableSet *_inFlightReadFrameIndexes
 @property  NSObject<OS_dispatch_queue> *_synchronizationQueue
 @property  NSOperationQueue *_imageReadQueue
 @property  NSOperationQueue *_imageDecodeQueue
 @property  NSObject<OS_dispatch_queue> *_movieWritingQueue
 @property  AVAssetWriter *_writer
 @property  AVAssetWriterInput *_videoInput
 @property  AVAssetWriterInputPixelBufferAdaptor *_pixelBufferAdaptor
 @property  long long _framesPerSecond
 @property  long long _nextWriteFileIndex
 @property  long long _currentOutputFrameIndex
 @property  @? _completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL suspended

  // instance methods
  -[CAMTimelapseMovieWriter init]
  -[CAMTimelapseMovieWriter .cxx_destruct]
  -[CAMTimelapseMovieWriter observeValueForKeyPath:ofObject:change:context:]
  -[CAMTimelapseMovieWriter setSuspended:]
  -[CAMTimelapseMovieWriter isSuspended]
  -[CAMTimelapseMovieWriter _reset]
  -[CAMTimelapseMovieWriter _completion]
  -[CAMTimelapseMovieWriter _synchronizationQueue]
  -[CAMTimelapseMovieWriter _writer]
  -[CAMTimelapseMovieWriter _videoInput]
  -[CAMTimelapseMovieWriter writeMovieFromImageFiles:visMetadataFiles:startDate:location:outputPath:transform:framesPerSecond:preferHEVC:completionHandler:]
  -[CAMTimelapseMovieWriter _finishMovieWithCompletionHandler:]
  -[CAMTimelapseMovieWriter _setMetadataOnVideoTrackAssetWriterInput:]
  -[CAMTimelapseMovieWriter _frameFilePaths]
  -[CAMTimelapseMovieWriter _movieWritingQueue]
  -[CAMTimelapseMovieWriter _pixelBufferAdaptor]
  -[CAMTimelapseMovieWriter _framesPerSecond]
  -[CAMTimelapseMovieWriter _desiredOutputSizeForFrameSize:]
  -[CAMTimelapseMovieWriter _startWritingWithOutputPath:width:height:videoFormatDescription:transform:framesPerSecond:frameCount:preferHEVC:videoMetadata:]
  -[CAMTimelapseMovieWriter _enqueueNextRead]
  -[CAMTimelapseMovieWriter _enqueueNextDecode]
  -[CAMTimelapseMovieWriter _enqueueNextWrite]
  -[CAMTimelapseMovieWriter _appendPixelBuffer:]
  -[CAMTimelapseMovieWriter _nextReadFileIndex]
  -[CAMTimelapseMovieWriter _residentImageDataCount]
  -[CAMTimelapseMovieWriter _residentPixelBufferCount]
  -[CAMTimelapseMovieWriter _availableImageData]
  -[CAMTimelapseMovieWriter _availablePixelBuffers]
  -[CAMTimelapseMovieWriter _inFlightReadFrameIndexes]
  -[CAMTimelapseMovieWriter _imageReadQueue]
  -[CAMTimelapseMovieWriter _imageDecodeQueue]
  -[CAMTimelapseMovieWriter _nextWriteFileIndex]
  -[CAMTimelapseMovieWriter _currentOutputFrameIndex]


CAMCTMEndCaptureCommand : CAMCaptureCommand
 @property  NSString *_persistenceUUID

  // instance methods
  -[CAMCTMEndCaptureCommand copyWithZone:]
  -[CAMCTMEndCaptureCommand encodeWithCoder:]
  -[CAMCTMEndCaptureCommand initWithCoder:]
  -[CAMCTMEndCaptureCommand .cxx_destruct]
  -[CAMCTMEndCaptureCommand executeWithContext:]
  -[CAMCTMEndCaptureCommand _persistenceUUID]
  -[CAMCTMEndCaptureCommand initWithPersistenceUUID:]


CAMPreviewViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <UIGestureRecognizerDelegate, CAMFocusDelegate, CAMExposureDelegate, CAMFocusIndicatorViewDelegate, CAMFacesDelegate>
 @property  CUCaptureController *_captureController
 @property  CAMTimelapseController *_timelapseController
 @property  CAMCaptureGraphConfiguration *_graphConfiguration
 @property  long long _mode
 @property  long long _device
 @property  BOOL _changingGraphConfiguration
 @property  CAMBurstIndicatorView *_burstIndicator
 @property  CAMFocusIndicatorView *_continuousIndicator
 @property  CAMFocusIndicatorView *_pointIndicator
 @property  NSMutableDictionary *_indicatorViewsByType
 @property  NSDate *_lastFocusIndictorStartTime
 @property  BOOL _userLockedFocusAndExposure
 @property  CAMFocusResult *_lastFocusResult
 @property  CAMExposureResult *_lastExposureResult
 @property  NSDate *_lastTapToFocusTime
 @property  unsigned long _currentFacesCount
 @property  BOOL _shouldSuppressExistingFaceIndicators
 @property  UITapGestureRecognizer *_tapToFocusAndExposeGestureRecognizer
 @property  UILongPressGestureRecognizer *_longPressToLockGestureRecognizer
 @property  UIPanGestureRecognizer *_exposureBiasPanGestureRecognizer
 @property  UITapGestureRecognizer *_aspectRatioToggleDoubleTapGestureRecognizer
 @property  float _cachedExposureTargetBias
 @property  float _exposureBiasPanStartValue
 @property  double _exposureBiasVirtualSliderExponent
 @property  double _exposureBiasVirtualSliderPointsForFirstStop
 @property  NSDate *_lastExposureBiasModificationTime
 @property  CAMSubjectIndicatorView *_portraitModeCenteredIndicatorView
 @property  CAMStageLightOverlayView *_stageLightOverlayView
 @property  CAMMotionController *_motionController
 @property  BOOL showingStandardControls
 @property  <CAMPreviewViewControllerDelegate> *delegate
 @property  CAMPreviewView *previewView
 @property  UIPanGestureRecognizer *activeExposureBiasPanGestureRecognizer
 @property  BOOL focusLockedByUser
 @property  BOOL exposureLockedByUser
 @property  long long layoutStyle
 @property  long long shallowDepthOfFieldStatus
 @property  long long stagePreviewStatus
 @property  CAMMachineReadableCodeResult *cachedSignificantMRCResult
 @property  NSArray *cachedMRCResults
 @property  long long lightingType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMPreviewViewController dealloc]
  -[CAMPreviewViewController initWithCoder:]
  -[CAMPreviewViewController delegate]
  -[CAMPreviewViewController setDelegate:]
  -[CAMPreviewViewController .cxx_destruct]
  -[CAMPreviewViewController _device]
  -[CAMPreviewViewController loadView]
  -[CAMPreviewViewController gestureRecognizerShouldBegin:]
  -[CAMPreviewViewController gestureRecognizer:shouldRequireFailureOfGestureRecognizer:]
  -[CAMPreviewViewController gestureRecognizer:shouldReceiveTouch:]
  -[CAMPreviewViewController initWithNibName:bundle:]
  -[CAMPreviewViewController viewWillDisappear:]
  -[CAMPreviewViewController viewDidLoad]
  -[CAMPreviewViewController setLayoutStyle:]
  -[CAMPreviewViewController layoutStyle]
  -[CAMPreviewViewController _interfaceOrientation]
  -[CAMPreviewViewController _applicationDidEnterBackground]
  -[CAMPreviewViewController _mode]
  -[CAMPreviewViewController _canShowWhileLocked]
  -[CAMPreviewViewController _cancelDelayedActions]
  -[CAMPreviewViewController previewView]
  -[CAMPreviewViewController _captureController]
  -[CAMPreviewViewController lightingType]
  -[CAMPreviewViewController setLightingType:]
  -[CAMPreviewViewController setShallowDepthOfFieldStatus:]
  -[CAMPreviewViewController shallowDepthOfFieldStatus]
  -[CAMPreviewViewController initWithCaptureController:motionController:timelapseController:]
  -[CAMPreviewViewController _captureOrientationChanged:]
  -[CAMPreviewViewController _motionController]
  -[CAMPreviewViewController willChangeToGraphConfiguration:]
  -[CAMPreviewViewController didChangeToGraphConfiguration:animated:]
  -[CAMPreviewViewController isShowingStandardControls]
  -[CAMPreviewViewController _createCommonGestureRecognizersIfNecessary]
  -[CAMPreviewViewController notifyWillStartCapturing]
  -[CAMPreviewViewController notifyDidStopCapture]
  -[CAMPreviewViewController _timelapseController]
  -[CAMPreviewViewController captureController:didOutputFaceResults:bodyResults:]
  -[CAMPreviewViewController setCachedMRCResults:]
  -[CAMPreviewViewController setCachedSignificantMRCResult:]
  -[CAMPreviewViewController cachedMRCResults]
  -[CAMPreviewViewController isFocusLockedByUser]
  -[CAMPreviewViewController isExposureLockedByUser]
  -[CAMPreviewViewController notifyShutterButtonPressed]
  -[CAMPreviewViewController activeExposureBiasPanGestureRecognizer]
  -[CAMPreviewViewController setLightingType:animated:]
  -[CAMPreviewViewController notifyCaptureSessionDidStopRunning]
  -[CAMPreviewViewController focusOnNormalizedPoint:]
  -[CAMPreviewViewController setShowingStandardControls:]
  -[CAMPreviewViewController setShallowDepthOfFieldStatus:stagePreviewStatus:]
  -[CAMPreviewViewController focusIndicatorViewBoundingViewForClippingFocusIndicatorView:]
  -[CAMPreviewViewController _exposureBiasSide]
  -[CAMPreviewViewController captureController:shouldResetFocusAndExposureForReason:]
  -[CAMPreviewViewController captureControllerUserHasAdjustedExposureTargetBias:]
  -[CAMPreviewViewController captureControllerWillResetFocusAndExposure:]
  -[CAMPreviewViewController captureControllerDelayBeforeResettingFocusAndExposureAfterCapture:]
  -[CAMPreviewViewController captureController:didOutputFocusResult:]
  -[CAMPreviewViewController captureController:didOutputExposureResult:]
  -[CAMPreviewViewController _lastFocusResult]
  -[CAMPreviewViewController _continuousIndicator]
  -[CAMPreviewViewController _pointIndicator]
  -[CAMPreviewViewController _stageLightOverlayView]
  -[CAMPreviewViewController _initializeExposureBiasSliderParameters]
  -[CAMPreviewViewController _resetFaceTracking]
  -[CAMPreviewViewController _cancelDelayedFocusAndExposureLock]
  -[CAMPreviewViewController _cancelDelayedFadeOutOfViewType:]
  -[CAMPreviewViewController _cancelDelayedHideOrDeactivateForFocusIndicator:]
  -[CAMPreviewViewController _styleForPointIndicator]
  -[CAMPreviewViewController _initializeExposureBiasParametersForFocusIndicatorView:]
  -[CAMPreviewViewController _graphConfiguration]
  -[CAMPreviewViewController _setGraphConfiguration:]
  -[CAMPreviewViewController _willChangeGraphConfiguration]
  -[CAMPreviewViewController _didChangeGraphConfigurationAnimated:]
  -[CAMPreviewViewController _updatePreviewViewAspectMode]
  -[CAMPreviewViewController _updatePreviewIndicatorClippingStyleForGraphConfiguration:]
  -[CAMPreviewViewController _setChangingGraphConfiguration:]
  -[CAMPreviewViewController _resetCachedTimes]
  -[CAMPreviewViewController _hideAllFocusIndicatorsAnimated:]
  -[CAMPreviewViewController _updatePortraitModeViewsAnimated:]
  -[CAMPreviewViewController _shouldShowPortraitModeTrackedSubjectIndicatorsForLightingType:]
  -[CAMPreviewViewController _hidePortraitModeTrackedSubjectIndicatorsAnimated:]
  -[CAMPreviewViewController _setLastTapToFocusTime:]
  -[CAMPreviewViewController _setLastExposureBiasModifiedTime:]
  -[CAMPreviewViewController _setLastFocusIndictorStartTime:]
  -[CAMPreviewViewController _createTapToFocusAndExposeGestureRecognizerIfNecessary]
  -[CAMPreviewViewController _createLongPressToLockGestureRecognizersIfNecessary]
  -[CAMPreviewViewController _createExposureBiasPanGestureRecognizerIfNecessary]
  -[CAMPreviewViewController _createAspectRatioToggleDoubleTapGestureRecognizerIfNecessary]
  -[CAMPreviewViewController _handleTapToFocusAndExpose:]
  -[CAMPreviewViewController _handleLongPressToLock:]
  -[CAMPreviewViewController _handleExposureBiasPan:]
  -[CAMPreviewViewController _updateExposureBiasPanGestureRecognizerForOrientation]
  -[CAMPreviewViewController _handleAspectRatioToggleDoubleTap:]
  -[CAMPreviewViewController _isShowingIndicatorsOfType:]
  -[CAMPreviewViewController _shouldDisableFocusUI]
  -[CAMPreviewViewController _hideAllFocusIndicatorsExceptForIndicator:]
  -[CAMPreviewViewController _shouldShowContinuousIndicator]
  -[CAMPreviewViewController _shouldShowPortraitModeIndicatorViews]
  -[CAMPreviewViewController _createContinuousIndicatorIfNecessary]
  -[CAMPreviewViewController _lastFocusIndictorStartTime]
  -[CAMPreviewViewController _hideFocusIndicator:afterDelay:]
  -[CAMPreviewViewController _portraitModeCenteredIndicatorView]
  -[CAMPreviewViewController _indicatorViewsByType]
  -[CAMPreviewViewController _hideFocusIndicator:animated:]
  -[CAMPreviewViewController _hideFocusIndicator:]
  -[CAMPreviewViewController _deactivateFocusIndicator:]
  -[CAMPreviewViewController _hideIndicatorsOfViewType:animated:]
  -[CAMPreviewViewController _createPointIndicatorIfNecessary]
  -[CAMPreviewViewController _showExposureBiasSliderForPointView]
  -[CAMPreviewViewController _shouldShowIndicatorsAsInactive]
  -[CAMPreviewViewController _largeStyleForPointIndicator]
  -[CAMPreviewViewController _removeIndicatorViewForType:identifier:]
  -[CAMPreviewViewController _fadeOutView:withDuration:completion:]
  -[CAMPreviewViewController _fadeOutAndRemoveIndicatorView:forType:identifier:withDuration:]
  -[CAMPreviewViewController _addIndicatorView:forType:identifier:]
  -[CAMPreviewViewController _fadeInView:withDuration:]
  -[CAMPreviewViewController _shouldUpdateIndicatorSizeFrom:to:minimumAreaChangeThreshold:minimumAreaFractionChangeThreshold:]
  -[CAMPreviewViewController _animateView:withCenter:bounds:]
  -[CAMPreviewViewController _fadeOutIndicatorsOfViewType:]
  -[CAMPreviewViewController _setShouldSuppressExistingFaceIndicators:]
  -[CAMPreviewViewController _fadeOutAndRemoveIndicatorViewsOfType:withDuration:]
  -[CAMPreviewViewController _userLockedFocusAndExposure]
  -[CAMPreviewViewController _shouldAllowFaceIndicators]
  -[CAMPreviewViewController _updateFaceIndicatorsForResults:]
  -[CAMPreviewViewController _updatePortraitModeViewsForResults:]
  -[CAMPreviewViewController _currentFacesCount]
  -[CAMPreviewViewController _shouldSuppressNewFaces]
  -[CAMPreviewViewController _setCurrentFacesCount:]
  -[CAMPreviewViewController _fadeOutIndicatorsOfViewType:afterDelay:]
  -[CAMPreviewViewController _shouldSuppressExistingFaceIndicators]
  -[CAMPreviewViewController _updateIndicatorsForMetadataObjectResults:viewType:viewClass:frameCallback:minimumAreaChangeThreshold:minimumAreaFractionChangeThreshold:]
  -[CAMPreviewViewController _shouldSuppressNewPortraitModeTrackedSubjectIndicators]
  -[CAMPreviewViewController _updateMRCIndicatorsIfNecessary]
  -[CAMPreviewViewController _shouldAllowMRCIndicators]
  -[CAMPreviewViewController _updateMRCIndicators]
  -[CAMPreviewViewController cachedSignificantMRCResult]
  -[CAMPreviewViewController _canModifyExposureBias]
  -[CAMPreviewViewController _allowUserToChangeFocusAndExposure]
  -[CAMPreviewViewController _shouldDisableAspectRatioToggle]
  -[CAMPreviewViewController _setUserLockedFocusAndExposure:]
  -[CAMPreviewViewController _showIndicatorAtPointOfInterest:]
  -[CAMPreviewViewController _setCachedExposureTargetBias:]
  -[CAMPreviewViewController _focusOnPoint:]
  -[CAMPreviewViewController _showLockedAtPointOfInterest:]
  -[CAMPreviewViewController _lockFocusAndExposureAfterDelay:]
  -[CAMPreviewViewController _scaleDownLockedPointOfInterest]
  -[CAMPreviewViewController _deactivateFocusIndicator:afterDelay:]
  -[CAMPreviewViewController _lockFocusAndExposure]
  -[CAMPreviewViewController _finishFocusingLockedPointOfInterestIndicator]
  -[CAMPreviewViewController _exposureBiasPanGestureRecognizer]
  -[CAMPreviewViewController _updateExposureBiasViews]
  -[CAMPreviewViewController _allowExposureBiasForMode:]
  -[CAMPreviewViewController _isFullyAutomaticFocusAndExposure]
  -[CAMPreviewViewController _exposureTargetBiasMaximum]
  -[CAMPreviewViewController _updateExposureBiasViews:]
  -[CAMPreviewViewController _focusIndicatorViewsWithExposureBiasSliders]
  -[CAMPreviewViewController _cachedExposureTargetBias]
  -[CAMPreviewViewController _exposureTargetBiasMinimum]
  -[CAMPreviewViewController _virtualSliderPositionForExposureBias:]
  -[CAMPreviewViewController _activateFocusIndicator:]
  -[CAMPreviewViewController _effectiveExposureBiasMovementForTranslation:]
  -[CAMPreviewViewController _exposureBiasForVirtualSliderPosition:]
  -[CAMPreviewViewController _setExposureBiasVirtualSliderExponent:]
  -[CAMPreviewViewController _setExposureBiasVirtualSliderPointsForFirstStop:]
  -[CAMPreviewViewController _exposureBiasVirtualSliderPointsForFirstStop]
  -[CAMPreviewViewController _exposureBiasVirtualSliderExponent]
  -[CAMPreviewViewController _showUIForResetFocusAndExposure]
  -[CAMPreviewViewController _scalePortraitModeFocusIndicators]
  -[CAMPreviewViewController _shouldResetFocusAndExposureForSubjectAreaDidChange]
  -[CAMPreviewViewController _isPanningExposureBias]
  -[CAMPreviewViewController _longPressToLockGestureRecognizer]
  -[CAMPreviewViewController _lastExposureBiasModificationTime]
  -[CAMPreviewViewController _lastTapToFocusTime]
  -[CAMPreviewViewController _setLastFocusResult:]
  -[CAMPreviewViewController _setFocusIndicatorsPulsing:]
  -[CAMPreviewViewController _updateUIForCenteredContrastBasedFocusDidEnd]
  -[CAMPreviewViewController _setLastExposureResult:]
  -[CAMPreviewViewController _setUserLockedFocusAndExposure:shouldAnimate:]
  -[CAMPreviewViewController _isChangingGraphConfiguration]
  -[CAMPreviewViewController _validateInternalProperties]
  -[CAMPreviewViewController _lastExposureResult]
  -[CAMPreviewViewController _validateExposureTargetBiasFromExposureResult:]
  -[CAMPreviewViewController _validateLastExposureBiasModificationTime]
  -[CAMPreviewViewController _validateUserLockedFocusAndExposure]
  -[CAMPreviewViewController _isFullyAutomaticFocus:andExposure:]
  -[CAMPreviewViewController _shouldAllowAspectRatioToggleForMode:]
  -[CAMPreviewViewController _updateForOrientationAnimated:]
  -[CAMPreviewViewController _updateExposureBiasSideAnimated:]
  -[CAMPreviewViewController _isPortraitEffectActive]
  -[CAMPreviewViewController stagePreviewStatus]
  -[CAMPreviewViewController _shouldShowStageLightOverlayViewForMode:device:lightingType:shallowDepthOfFieldStatus:stagePreviewStatus:]
  -[CAMPreviewViewController _createStageLightOverlayViewIfNeededWillAnimate:]
  -[CAMPreviewViewController _shouldShowStageLightOverlayActive]
  -[CAMPreviewViewController _createPortraitModeCenteredIndicatorViewIfNecessary]
  -[CAMPreviewViewController setStagePreviewStatus:]
  -[CAMPreviewViewController _burstIndicator]
  -[CAMPreviewViewController _tapToFocusAndExposeGestureRecognizer]
  -[CAMPreviewViewController _aspectRatioToggleDoubleTapGestureRecognizer]
  -[CAMPreviewViewController _exposureBiasPanStartValue]


CAMCaptureConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  long long mode
 @property  long long device
 @property  long long videoConfiguration
 @property  long long audioConfiguration
 @property  long long flashMode
 @property  long long torchMode
 @property  long long HDRMode
 @property  long long timerDuration
 @property  long long irisMode
 @property  long long photoModeAspectRatioCrop
 @property  long long photoModeEffectFilterType
 @property  long long squareModeEffectFilterType
 @property  long long portraitModeEffectFilterType
 @property  long long portraitModeLightingEffectType
 @property  double portraitModeApertureValue
 @property  double portraitModeIntensityValue
 @property  BOOL photoBooth

  // class methods
  +[CAMCaptureConfiguration audioConfigurationForMode:device:emulationMode:duringCall:forceMonoAudioRecording:]
  +[CAMCaptureConfiguration captureGraphConfigurationUsingConfiguration:]
  +[CAMCaptureConfiguration configuration:withDevice:]
  +[CAMCaptureConfiguration tinyConfigurationForConfiguration:preserveFilters:]
  +[CAMCaptureConfiguration sanitizeVideoConfigurationForDesiredConfiguration:mode:device:]
  +[CAMCaptureConfiguration _fallbackVideoConfigurationForUnsupportedConfiguration:]

  // instance methods
  -[CAMCaptureConfiguration mode]
  -[CAMCaptureConfiguration device]
  -[CAMCaptureConfiguration initWithConfiguration:]
  -[CAMCaptureConfiguration HDRMode]
  -[CAMCaptureConfiguration flashMode]
  -[CAMCaptureConfiguration torchMode]
  -[CAMCaptureConfiguration _previewFilters]
  -[CAMCaptureConfiguration audioConfiguration]
  -[CAMCaptureConfiguration videoConfiguration]
  -[CAMCaptureConfiguration timerDuration]
  -[CAMCaptureConfiguration photoModeAspectRatioCrop]
  -[CAMCaptureConfiguration photoModeEffectFilterType]
  -[CAMCaptureConfiguration squareModeEffectFilterType]
  -[CAMCaptureConfiguration portraitModeEffectFilterType]
  -[CAMCaptureConfiguration portraitModeLightingEffectType]
  -[CAMCaptureConfiguration portraitModeApertureValue]
  -[CAMCaptureConfiguration portraitModeIntensityValue]
  -[CAMCaptureConfiguration irisMode]
  -[CAMCaptureConfiguration initWithCaptureMode:captureDevice:videoConfiguration:audioConfiguration:flashMode:torchMode:HDRMode:irisMode:timerDuration:photoModeAspectRatioCrop:photoModeEffectFilterType:squareModeEffectFilterType:portraitModeEffectFilterType:portraitModeLightingEffectType:portraitModeApertureValue:portraitModeIntensityValue:]
  -[CAMCaptureConfiguration isPhotoBooth]
  -[CAMCaptureConfiguration initForPhotoBoothWithCaptureDevice:]


CAMBurstAnalysisResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSArray *allAssetIdentifiers
 @property  NSArray *goodAssetIdentifiers
 @property  NSString *bestAssetIdentifier

  // instance methods
  -[CAMBurstAnalysisResult init]
  -[CAMBurstAnalysisResult .cxx_destruct]
  -[CAMBurstAnalysisResult identifier]
  -[CAMBurstAnalysisResult allAssetIdentifiers]
  -[CAMBurstAnalysisResult goodAssetIdentifiers]
  -[CAMBurstAnalysisResult bestAssetIdentifier]
  -[CAMBurstAnalysisResult initWithIdentifier:allAssetIdentifiers:goodAssetIdentifiers:bestAssetIdentifier:]


CAMModeAndDeviceConfigurationChangeListener : NSObject /usr/lib/libSystem.B.dylib
 @property  long long desiredMode
 @property  long long desiredDevicePosition
 @property  @? handler

  // instance methods
  -[CAMModeAndDeviceConfigurationChangeListener handler]
  -[CAMModeAndDeviceConfigurationChangeListener .cxx_destruct]
  -[CAMModeAndDeviceConfigurationChangeListener setHandler:]
  -[CAMModeAndDeviceConfigurationChangeListener setDesiredMode:]
  -[CAMModeAndDeviceConfigurationChangeListener desiredMode]
  -[CAMModeAndDeviceConfigurationChangeListener desiredDevicePosition]
  -[CAMModeAndDeviceConfigurationChangeListener setDesiredDevicePosition:]


CAMModeAndDeviceConfigurationTestHarness : CAMPerformanceTestHarness
 @property  NSMutableArray *_modeChangeListeners

  // instance methods
  -[CAMModeAndDeviceConfigurationTestHarness .cxx_destruct]
  -[CAMModeAndDeviceConfigurationTestHarness handleWillCloseViewfinderForReason:]
  -[CAMModeAndDeviceConfigurationTestHarness handleDidCloseViewfinderForReason:]
  -[CAMModeAndDeviceConfigurationTestHarness handleWillOpenViewfinderForReason:]
  -[CAMModeAndDeviceConfigurationTestHarness handleDidOpenViewfinderForReason:]
  -[CAMModeAndDeviceConfigurationTestHarness handleChangeToMode:device:]
  -[CAMModeAndDeviceConfigurationTestHarness initWithTestName:]
  -[CAMModeAndDeviceConfigurationTestHarness registerHandler:forChangeToMode:devicePosition:]
  -[CAMModeAndDeviceConfigurationTestHarness _modeChangeListeners]


CAMNonDestructiveCropEnabledCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMNonDestructiveCropEnabledCommand copyWithZone:]
  -[CAMNonDestructiveCropEnabledCommand encodeWithCoder:]
  -[CAMNonDestructiveCropEnabledCommand initWithCoder:]
  -[CAMNonDestructiveCropEnabledCommand _isEnabled]
  -[CAMNonDestructiveCropEnabledCommand executeWithContext:]
  -[CAMNonDestructiveCropEnabledCommand initWithSubcommands:]
  -[CAMNonDestructiveCropEnabledCommand initWithNonDestructiveCropEnabled:]


CAMDynamicShutterGestureRecognizer : UILongPressGestureRecognizer /System/Library/Frameworks/Foundation.framework/Foundation
  // instance methods
  -[CAMDynamicShutterGestureRecognizer cancelGesture]
  -[CAMDynamicShutterGestureRecognizer endGesture]


CAMDynamicShutterControl : UIControl /System/Library/Frameworks/Foundation.framework/Foundation <CAMMetalViewDelegate, UIGestureRecognizerDelegate>
 @property  CADisplayLink *_displayLink
 @property  CAMDisplayLinkTarget *_displayLinkTarget
 @property  CAMLiquidShutterRenderer *_liquidShutterRenderer
 @property  CAMMetalView *_metalView
 @property  CAMShutterButtonRingView *_centerOuterView
 @property  UIImageView *_centerOuterImageView
 @property  CAMTimelapseShutterRingView *_centerTimelapseOuterView
 @property  UIView *_lockButtonOuterView
 @property  UIImageView *_videoLockImageView
 @property  UIView *_leftLineView
 @property  UIView *_rightLineView
 @property  UILabel *_counterLabel
 @property  UIView *_spinnerView
 @property  {CAMShutterButtonSpec=ddddd} _shutterButtonSpec
 @property  {CAMShutterButtonSpec=ddddd} _lockButtonActiveSpec
 @property  {CAMShutterButtonSpec=ddddd} _lockButtonInactiveSpec
 @property  {CGPoint=dd} _shutterButtonCenter
 @property  {CGPoint=dd} _lockButtonCenter
 @property  double _dragHandleXPosition
 @property  double _touchBeganTime
 @property  long long _touchSequencePhase
 @property  {?={CGPoint=dd}dBB} _firstTouch
 @property  {?={CGPoint=dd}dBB} _mostRecentTouch
 @property  CAMDynamicShutterGestureRecognizer *_gestureRecognizer
 @property  CAMFeedbackController *_feedbackController
 @property  BOOL _draggingEnabled
 @property  BOOL _pastStartStopDragThreshold
 @property  BOOL _pastCounterDragThreshold
 @property  long long _shutterState
 @property  long long _dragHandleState
 @property  long long _innerShapeState
 @property  BOOL _externalShutterPressed
 @property  BOOL _externalLockButtonPressed
 @property  long long _counterValue
 @property  BOOL _shouldCheckTouchUpEvents
 @property  BOOL _ignoreNextCancelledGesture
 @property  NSArray *_springs
 @property  CAMTrackingSpring *_dragHandleOffsetSpring
 @property  CAMSpring *_dragHandleWidthSpring
 @property  CAMSpring *_dragHandleColorIsWhiteSpring
 @property  CAMSpring *_dragHandleAlphaSpring
 @property  CAMSpring *_innerShapeWidthSpring
 @property  CAMSpring *_innerShapePowerSpring
 @property  CAMSpring *_innerShapeColorIsRedSpring
 @property  CAMSpring *_innerShapeAlphaSpring
 @property  CAMSpring *_drawLockUISpring
 @property  CAMSpring *_expandLockRingSpring
 @property  <CAMDynamicShutterControlAGGDDelegate> *aggdDelegate
 @property  <CAMDynamicShutterControlDelegate> *delegate
 @property  {?=qqqqBqqq} settings
 @property  BOOL spinning
 @property  BOOL showDisabled
 @property  double lockButtonCenterRightInset
 @property  long long orientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMDynamicShutterControl shutterButtonSpec]

  // instance methods
  -[CAMDynamicShutterControl dealloc]
  -[CAMDynamicShutterControl delegate]
  -[CAMDynamicShutterControl setDelegate:]
  -[CAMDynamicShutterControl .cxx_destruct]
  -[CAMDynamicShutterControl orientation]
  -[CAMDynamicShutterControl setOrientation:]
  -[CAMDynamicShutterControl settings]
  -[CAMDynamicShutterControl setSettings:]
  -[CAMDynamicShutterControl intrinsicContentSize]
  -[CAMDynamicShutterControl gestureRecognizerShouldBegin:]
  -[CAMDynamicShutterControl layoutSubviews]
  -[CAMDynamicShutterControl _displayLink]
  -[CAMDynamicShutterControl hitTest:withEvent:]
  -[CAMDynamicShutterControl setOrientation:animated:]
  -[CAMDynamicShutterControl _gestureRecognizer]
  -[CAMDynamicShutterControl setSpinning:]
  -[CAMDynamicShutterControl _firstTouch]
  -[CAMDynamicShutterControl _spinnerView]
  -[CAMDynamicShutterControl setShowDisabled:]
  -[CAMDynamicShutterControl _metalView]
  -[CAMDynamicShutterControl isSpinning]
  -[CAMDynamicShutterControl incrementCounter]
  -[CAMDynamicShutterControl _handlePress:]
  -[CAMDynamicShutterControl _updateSpinningAnimations]
  -[CAMDynamicShutterControl showDisabled]
  -[CAMDynamicShutterControl _counterValue]
  -[CAMDynamicShutterControl _feedbackController]
  -[CAMDynamicShutterControl _displayLinkTarget]
  -[CAMDynamicShutterControl _springs]
  -[CAMDynamicShutterControl resetAnimated:]
  -[CAMDynamicShutterControl initWithMetalDevice:commandQueue:]
  -[CAMDynamicShutterControl setLockButtonCenterRightInset:]
  -[CAMDynamicShutterControl setAggdDelegate:]
  -[CAMDynamicShutterControl setShowDisabled:animated:]
  -[CAMDynamicShutterControl externalButtonPressed]
  -[CAMDynamicShutterControl externalButtonReleased]
  -[CAMDynamicShutterControl externalButtonCancelled]
  -[CAMDynamicShutterControl resetCounter]
  -[CAMDynamicShutterControl setSettings:animated:]
  -[CAMDynamicShutterControl externalLockButtonPressed]
  -[CAMDynamicShutterControl externalLockButtonReleased]
  -[CAMDynamicShutterControl _setTouchBeganTime:]
  -[CAMDynamicShutterControl _touchBeganTime]
  -[CAMDynamicShutterControl set_spinnerView:]
  -[CAMDynamicShutterControl metalViewDidChangeDrawableSize:]
  -[CAMDynamicShutterControl _updateForTargetTimestamp:]
  -[CAMDynamicShutterControl _updateCounterLabelText]
  -[CAMDynamicShutterControl _dragHandleOffsetSpring]
  -[CAMDynamicShutterControl _dragHandleWidthSpring]
  -[CAMDynamicShutterControl _dragHandleColorIsWhiteSpring]
  -[CAMDynamicShutterControl _dragHandleAlphaSpring]
  -[CAMDynamicShutterControl _innerShapeWidthSpring]
  -[CAMDynamicShutterControl _innerShapePowerSpring]
  -[CAMDynamicShutterControl _innerShapeAlphaSpring]
  -[CAMDynamicShutterControl _innerShapeColorIsRedSpring]
  -[CAMDynamicShutterControl _drawLockUISpring]
  -[CAMDynamicShutterControl _expandLockRingSpring]
  -[CAMDynamicShutterControl _shutterButtonSpec]
  -[CAMDynamicShutterControl _shutterState]
  -[CAMDynamicShutterControl _isStartStopShutterState:]
  -[CAMDynamicShutterControl _isValidChangeFromState:toState:]
  -[CAMDynamicShutterControl aggdDelegate]
  -[CAMDynamicShutterControl _updateSpringTargets]
  -[CAMDynamicShutterControl _updateOuterAndInnerLayersAnimated:]
  -[CAMDynamicShutterControl _setDragHandleState:animated:]
  -[CAMDynamicShutterControl _setInnerShapeState:animated:]
  -[CAMDynamicShutterControl _touchSequencePhase]
  -[CAMDynamicShutterControl _isActiveTouchSequencePhase:]
  -[CAMDynamicShutterControl _cancelTouchSequenceForReset:]
  -[CAMDynamicShutterControl _setExternalShutterPressed:]
  -[CAMDynamicShutterControl _setExternalLockButtonPressed:]
  -[CAMDynamicShutterControl _setShutterState:]
  -[CAMDynamicShutterControl _shutterButtonCenter]
  -[CAMDynamicShutterControl _centerOuterView]
  -[CAMDynamicShutterControl _centerOuterImageView]
  -[CAMDynamicShutterControl _centerTimelapseOuterView]
  -[CAMDynamicShutterControl _lockButtonCenter]
  -[CAMDynamicShutterControl _lockButtonOuterView]
  -[CAMDynamicShutterControl _videoLockImageView]
  -[CAMDynamicShutterControl _counterLabel]
  -[CAMDynamicShutterControl _updateViewsFromCurrentState]
  -[CAMDynamicShutterControl _shutterButtonFrame]
  -[CAMDynamicShutterControl lockButtonCenterRightInset]
  -[CAMDynamicShutterControl _lockButtonActiveSpec]
  -[CAMDynamicShutterControl _lockButtonFrame]
  -[CAMDynamicShutterControl _dragHandleXPosition]
  -[CAMDynamicShutterControl _isPointWithinLockRingTouchArea:]
  -[CAMDynamicShutterControl _isHandleWithinLockRing]
  -[CAMDynamicShutterControl _isPointWithinShutterButtonTouchArea:]
  -[CAMDynamicShutterControl _touchForPoint:]
  -[CAMDynamicShutterControl _shouldReceiveTouch:]
  -[CAMDynamicShutterControl _isExternalShutterPressed]
  -[CAMDynamicShutterControl _isExternalLockButtonPressed]
  -[CAMDynamicShutterControl _setFirstTouch:]
  -[CAMDynamicShutterControl _touchSequenceBegan:]
  -[CAMDynamicShutterControl _touchSequenceChanged:]
  -[CAMDynamicShutterControl _touchSequenceEnded:forReset:]
  -[CAMDynamicShutterControl _ignoreNextCancelledGesture]
  -[CAMDynamicShutterControl _setIgnoreNextCancelledGesture:]
  -[CAMDynamicShutterControl _touchSequenceCancelledForReset:]
  -[CAMDynamicShutterControl _setMostRecentTouch:]
  -[CAMDynamicShutterControl _isDraggingEnabled]
  -[CAMDynamicShutterControl _dragHandleState]
  -[CAMDynamicShutterControl _canDragStartStop]
  -[CAMDynamicShutterControl _canDragCounter]
  -[CAMDynamicShutterControl _setTouchSequencePhase:]
  -[CAMDynamicShutterControl set_shouldCheckTouchUpEvents:]
  -[CAMDynamicShutterControl _shouldStartStopOnTouchDown]
  -[CAMDynamicShutterControl _handleTapToStartStop]
  -[CAMDynamicShutterControl _shouldShortPressOnTouchDown]
  -[CAMDynamicShutterControl _isTrackingHandleState:]
  -[CAMDynamicShutterControl _updateStateForTouchPoint:]
  -[CAMDynamicShutterControl _updateTrackingDragHandleOffsetTargetWithPoint:]
  -[CAMDynamicShutterControl _shouldCheckTouchUpEvents]
  -[CAMDynamicShutterControl _shouldShortPressOnTouchUp]
  -[CAMDynamicShutterControl _mostRecentTouch]
  -[CAMDynamicShutterControl _setCounterValue:]
  -[CAMDynamicShutterControl set_centerOuterImageView:]
  -[CAMDynamicShutterControl _outerImage]
  -[CAMDynamicShutterControl set_centerTimelapseOuterView:]
  -[CAMDynamicShutterControl _updateMetalViewAlpha]
  -[CAMDynamicShutterControl _consumeAndUpdateTouchSequencePhase]
  -[CAMDynamicShutterControl _updateTrackingSpringTargets]
  -[CAMDynamicShutterControl _updateStateToLongPressIfNeededWithPhase:]
  -[CAMDynamicShutterControl _updateRendererShapes]
  -[CAMDynamicShutterControl _liquidShutterRenderer]
  -[CAMDynamicShutterControl _updateDragHandleWidthTarget]
  -[CAMDynamicShutterControl _updateInnerShapeWidthTarget]
  -[CAMDynamicShutterControl _updateStaticDragHandleOffsetTargetAnimated:]
  -[CAMDynamicShutterControl _updateDragHandleColorIsWhiteTarget]
  -[CAMDynamicShutterControl _updateDragHandleAlphaTarget]
  -[CAMDynamicShutterControl _updateInnerShapePowerTarget]
  -[CAMDynamicShutterControl _updateInnerShapeColorIsRedTarget]
  -[CAMDynamicShutterControl _updateInnerShapeAlphaTarget]
  -[CAMDynamicShutterControl _updateDrawLockUITarget]
  -[CAMDynamicShutterControl _updateExpandLockRingTarget]
  -[CAMDynamicShutterControl _innerShapeState]
  -[CAMDynamicShutterControl _innerShapeColor]
  -[CAMDynamicShutterControl _dragHandleColor]
  -[CAMDynamicShutterControl _updateLeftLine]
  -[CAMDynamicShutterControl _updateRightLine]
  -[CAMDynamicShutterControl _updateLockUI]
  -[CAMDynamicShutterControl _updateCounterAlpha]
  -[CAMDynamicShutterControl _leftLineView]
  -[CAMDynamicShutterControl _lockButtonInactiveSpec]
  -[CAMDynamicShutterControl _rightLineView]
  -[CAMDynamicShutterControl _setDragHandleState:]
  -[CAMDynamicShutterControl _setInnerShapeState:]
  -[CAMDynamicShutterControl frameForAlignmentRect:availableWidth:]
  -[CAMDynamicShutterControl _isPastStartStopDragThreshold]
  -[CAMDynamicShutterControl _isPastCounterDragThreshold]


CAMVideoCorruptor : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMVideoCorruptor _getBoxInfoFromFile:ofSize:boxType:boxSize:]
  +[CAMVideoCorruptor _findBox:inFile:ofSize:boxSize:]
  +[CAMVideoCorruptor _corruptMethodFytpForFile:ofSize:]
  +[CAMVideoCorruptor _corruptMethodMdatForFile:ofSize:]
  +[CAMVideoCorruptor _corruptMethodMoovForFile:ofSize:]
  +[CAMVideoCorruptor corruptVideoFileAtURLWhenEnabled:]


CAMPortraitLightingEffectStrengthCommand : CAMCaptureCommand
 @property  double effectStrength

  // instance methods
  -[CAMPortraitLightingEffectStrengthCommand copyWithZone:]
  -[CAMPortraitLightingEffectStrengthCommand encodeWithCoder:]
  -[CAMPortraitLightingEffectStrengthCommand initWithCoder:]
  -[CAMPortraitLightingEffectStrengthCommand executeWithContext:]
  -[CAMPortraitLightingEffectStrengthCommand initWithEffectStrength:]
  -[CAMPortraitLightingEffectStrengthCommand effectStrength]


CAMLiquidShutterRenderer : NSObject /usr/lib/libSystem.B.dylib
 @property  <MTLDevice> *_device
 @property  <MTLCommandQueue> *_commandQueue
 @property  <MTLRenderPipelineState> *_renderPipelineState
 @property  BOOL _backgrounded
 @property  {?={CGPoint=dd}d{?=dddd}d} centerShape
 @property  {?={CGPoint=dd}d{?=dddd}d} dragHandleShape
 @property  BOOL showDragHandle
 @property  double blurRadius
 @property  BOOL needsRender
 @property  CAMetalLayer *metalLayer

  // instance methods
  -[CAMLiquidShutterRenderer dealloc]
  -[CAMLiquidShutterRenderer .cxx_destruct]
  -[CAMLiquidShutterRenderer _device]
  -[CAMLiquidShutterRenderer _commandQueue]
  -[CAMLiquidShutterRenderer setBlurRadius:]
  -[CAMLiquidShutterRenderer blurRadius]
  -[CAMLiquidShutterRenderer _applicationDidEnterBackground]
  -[CAMLiquidShutterRenderer _backgrounded]
  -[CAMLiquidShutterRenderer _applicationWillEnterForeground]
  -[CAMLiquidShutterRenderer _renderPipelineState]
  -[CAMLiquidShutterRenderer metalLayer]
  -[CAMLiquidShutterRenderer _setBackgrounded:]
  -[CAMLiquidShutterRenderer initWithDevice:commandQueue:pixelFormat:]
  -[CAMLiquidShutterRenderer setMetalLayer:]
  -[CAMLiquidShutterRenderer renderIfNecessary]
  -[CAMLiquidShutterRenderer setCenterShape:]
  -[CAMLiquidShutterRenderer setDragHandleShape:]
  -[CAMLiquidShutterRenderer setShowDragHandle:]
  -[CAMLiquidShutterRenderer setNeedsRender:]
  -[CAMLiquidShutterRenderer showDragHandle]
  -[CAMLiquidShutterRenderer needsRender]
  -[CAMLiquidShutterRenderer centerShape]
  -[CAMLiquidShutterRenderer _fragmentForShape:scale:]
  -[CAMLiquidShutterRenderer dragHandleShape]
  -[CAMLiquidShutterRenderer _orthographicMatrixWithLeft:right:bottom:top:near:far:]


CAMZoomControlButtonMaskView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  CAShapeLayer *_shapeLayer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} maskOvalFrame

  // instance methods
  -[CAMZoomControlButtonMaskView .cxx_destruct]
  -[CAMZoomControlButtonMaskView initWithFrame:]
  -[CAMZoomControlButtonMaskView layoutSubviews]
  -[CAMZoomControlButtonMaskView _shapeLayer]
  -[CAMZoomControlButtonMaskView setMaskOvalFrame:]
  -[CAMZoomControlButtonMaskView maskOvalFrame]


CAMFilterNameBadge : CEKBadgeTextView /System/Library/Frameworks/Metal.framework/Metal
 @property  long long filterType

  // instance methods
  -[CAMFilterNameBadge filterType]
  -[CAMFilterNameBadge setFilterType:]
  -[CAMFilterNameBadge initWithFrame:]
  -[CAMFilterNameBadge _updateText]


CAMCancelVideoZoomRampCommand : CAMCaptureCommand
  // instance methods
  -[CAMCancelVideoZoomRampCommand executeWithContext:]


CAMNebulaSecondaryState : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSDate *stopTime
 @property  long long stopReasons
 @property  NSDate *lastMovieWriteAttemptTime
 @property  long long movieWriteAttemptsCount
 @property  long long failedStateReadAttemptsCount

  // class methods
  +[CAMNebulaSecondaryState supportsSecureCoding]
  +[CAMNebulaSecondaryState secondaryStateWithContentsOfFile:]

  // instance methods
  -[CAMNebulaSecondaryState encodeWithCoder:]
  -[CAMNebulaSecondaryState initWithCoder:]
  -[CAMNebulaSecondaryState .cxx_destruct]
  -[CAMNebulaSecondaryState stopTime]
  -[CAMNebulaSecondaryState writeToFile:]
  -[CAMNebulaSecondaryState setStopTime:]
  -[CAMNebulaSecondaryState stopReasons]
  -[CAMNebulaSecondaryState addStopReasons:stopTime:]
  -[CAMNebulaSecondaryState setStopReasons:]
  -[CAMNebulaSecondaryState notifyWillAttemptToWriteMovie]
  -[CAMNebulaSecondaryState setFailedStateReadAttemptsCount:]
  -[CAMNebulaSecondaryState failedStateReadAttemptsCount]
  -[CAMNebulaSecondaryState lastMovieWriteAttemptTime]
  -[CAMNebulaSecondaryState movieWriteAttemptsCount]


CAMBurstSession : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long estimatedCount
 @property  unsigned long count
 @property  BOOL finalized
 @property  CIBurstImageSet *_burstImageSet
 @property  NSString *identifier

  // instance methods
  -[CAMBurstSession init]
  -[CAMBurstSession count]
  -[CAMBurstSession .cxx_destruct]
  -[CAMBurstSession identifier]
  -[CAMBurstSession _isFinalized]
  -[CAMBurstSession estimatedCount]
  -[CAMBurstSession _setCount:]
  -[CAMBurstSession performBurstAnalysisForDevice:]
  -[CAMBurstSession addStillImageCaptureResult:]
  -[CAMBurstSession addStillImageLocalPersistenceResult:withFaces:]
  -[CAMBurstSession _burstImageSet]
  -[CAMBurstSession _setEstimatedCount:]
  -[CAMBurstSession _setFinalized:]


CAMBufferNotificationObservance : CAMBufferObservance
 @property  NSString *notification
 @property  NSObject *object
 @property  NSNotificationCenter *notificationCenter

  // instance methods
  -[CAMBufferNotificationObservance object]
  -[CAMBufferNotificationObservance .cxx_destruct]
  -[CAMBufferNotificationObservance notification]
  -[CAMBufferNotificationObservance notificationCenter]
  -[CAMBufferNotificationObservance setupObservanceForBuffer:]
  -[CAMBufferNotificationObservance teardownObservanceForBuffer:]
  -[CAMBufferNotificationObservance fulfillWithChange:]
  -[CAMBufferNotificationObservance initWithNotification:object:center:removeOnceEnabled:]


CAMBufferNotificationObservanceChange : CAMBufferObservanceChange
 @property  NSString *notification
 @property  NSObject *object

  // instance methods
  -[CAMBufferNotificationObservanceChange object]
  -[CAMBufferNotificationObservanceChange .cxx_destruct]
  -[CAMBufferNotificationObservanceChange notification]
  -[CAMBufferNotificationObservanceChange initWithNotification:object:]


CAMStopPanoramaCommand : CAMCaptureCommand
 @property  BOOL _interrupted

  // instance methods
  -[CAMStopPanoramaCommand copyWithZone:]
  -[CAMStopPanoramaCommand encodeWithCoder:]
  -[CAMStopPanoramaCommand initWithCoder:]
  -[CAMStopPanoramaCommand _interrupted]
  -[CAMStopPanoramaCommand executeWithContext:]
  -[CAMStopPanoramaCommand initWithInterrupted:]


CAMBuffer : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_bufferQueue
 @property  BOOL bufferQueueEnabled
 @property  <NSCopying> *bufferQueueCurrentValue
 @property  NSMutableArray *_bufferQueueBufferedValues
 @property  NSMutableDictionary *_bufferQueueObservers
 @property  NSMutableArray *_bufferQueueObservances
 @property  BOOL enabled
 @property  id currentValue
 @property  BOOL isBufferEmpty
 @property  id firstBufferedValue
 @property  id lastBufferedValue
 @property  NSArray *bufferedValues

  // class methods
  +[CAMBuffer keyPathsForValuesAffectingEnabled]
  +[CAMBuffer keyPathsForValuesAffectingCurrentValue]

  // instance methods
  -[CAMBuffer init]
  -[CAMBuffer dealloc]
  -[CAMBuffer .cxx_destruct]
  -[CAMBuffer addObserver:]
  -[CAMBuffer observeValueForKeyPath:ofObject:change:context:]
  -[CAMBuffer push:]
  -[CAMBuffer isEnabled]
  -[CAMBuffer currentValue]
  -[CAMBuffer removeObserverForKey:]
  -[CAMBuffer _bufferQueue]
  -[CAMBuffer reevaluate]
  -[CAMBuffer handleObservedNotification:]
  -[CAMBuffer _bufferQueueObservances]
  -[CAMBuffer _bufferQueueTeardownObservances:]
  -[CAMBuffer _isBufferQueue]
  -[CAMBuffer isBufferQueueEnabled]
  -[CAMBuffer setBufferQueueEnabled:]
  -[CAMBuffer _emitBufferedValues]
  -[CAMBuffer _bufferQueueFulfillObservancesWithChange:]
  -[CAMBuffer _bufferQueueEvaluateObservances]
  -[CAMBuffer _bufferQueueFulfillAndEvaluateWithChange:]
  -[CAMBuffer _bufferQueueSetupObservance:]
  -[CAMBuffer _bufferQueueBufferedValues]
  -[CAMBuffer _bufferQueueObservers]
  -[CAMBuffer setBufferQueueCurrentValue:]
  -[CAMBuffer bufferQueueCurrentValue]
  -[CAMBuffer _addObserver:onMainQueue:]
  -[CAMBuffer _bufferQueueTeardownObservance:]
  -[CAMBuffer disableWhile:]
  -[CAMBuffer disableWhileKeyPath:ofObject:evaluates:]
  -[CAMBuffer disableWhileNotification:fromObject:usingNotificationCenter:]
  -[CAMBuffer disableUntil:]
  -[CAMBuffer disableUntilKeyPath:ofObject:evaluates:]
  -[CAMBuffer disableUntilNotification:fromObject:usingNotificationCenter:]
  -[CAMBuffer replaceWith:]
  -[CAMBuffer isBufferEmpty]
  -[CAMBuffer firstBufferedValue]
  -[CAMBuffer lastBufferedValue]
  -[CAMBuffer bufferedValues]
  -[CAMBuffer addMainQueueObserver:]


CAMBodyObjectResult : NSObject /usr/lib/libSystem.B.dylib <CAMMetadataObjectResult>
 @property  AVMetadataBodyObject *_metadataBodyObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *metadataType
 @property  NSString *uniqueIdentifier
 @property  AVMetadataObject *underlyingMetadataObject

  // instance methods
  -[CAMBodyObjectResult .cxx_destruct]
  -[CAMBodyObjectResult uniqueIdentifier]
  -[CAMBodyObjectResult metadataType]
  -[CAMBodyObjectResult underlyingMetadataObject]
  -[CAMBodyObjectResult initWithBodyObject:]
  -[CAMBodyObjectResult _metadataBodyObject]
  -[CAMBodyObjectResult set_metadataBodyObject:]


CAMExposureTargetBiasCommand : CAMCaptureCommand
 @property  float _exposureTargetBias

  // instance methods
  -[CAMExposureTargetBiasCommand copyWithZone:]
  -[CAMExposureTargetBiasCommand encodeWithCoder:]
  -[CAMExposureTargetBiasCommand initWithCoder:]
  -[CAMExposureTargetBiasCommand _exposureTargetBias]
  -[CAMExposureTargetBiasCommand executeWithContext:]
  -[CAMExposureTargetBiasCommand initWithExposureTargetBias:]


CAMPanoramaCaptureRequest : CAMCaptureRequest <NSCopying, NSMutableCopying>
 @property  <CAMPanoramaCaptureRequestDelegate> *delegate

  // instance methods
  -[CAMPanoramaCaptureRequest init]
  -[CAMPanoramaCaptureRequest copyWithZone:]
  -[CAMPanoramaCaptureRequest mutableCopyWithZone:]
  -[CAMPanoramaCaptureRequest delegate]
  -[CAMPanoramaCaptureRequest .cxx_destruct]
  -[CAMPanoramaCaptureRequest initWithRequest:distinctPersistence:]


CAMMutablePanoramaCaptureRequest : CAMPanoramaCaptureRequest <CAMMutableCaptureRequestPersistence, CAMMutableCaptureRequestLocation, CAMMutableCaptureRequestPower, CAMMutableCaptureRequestOrigin, CAMMutableCaptureRequestEncodingBehavior>
 @property  <CAMPanoramaCaptureRequestDelegate> *delegate
 @property  long long captureOrientation
 @property  long long captureDevice
 @property  long long captureMode
 @property  long long pressType
 @property  unsigned short sessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long persistenceOptions
 @property  unsigned long deferredPersistenceOptions
 @property  long long temporaryPersistenceOptions
 @property  NSURL *localDestinationURL
 @property  NSString *persistenceUUID
 @property  BOOL shouldExtractDiagnosticsFromMetadata
 @property  BOOL shouldPersistDiagnosticsToSidecar
 @property  BOOL shouldDelayRemotePersistence
 @property  CLLocation *location
 @property  CLHeading *heading
 @property  unsigned int assertionIdentifier
 @property  long long origin
 @property  long long videoEncodingBehavior
 @property  long long photoEncodingBehavior

  // instance methods
  -[CAMMutablePanoramaCaptureRequest copyWithZone:]
  -[CAMMutablePanoramaCaptureRequest mutableCopyWithZone:]
  -[CAMMutablePanoramaCaptureRequest setDelegate:]
  -[CAMMutablePanoramaCaptureRequest setHeading:]
  -[CAMMutablePanoramaCaptureRequest setLocation:]
  -[CAMMutablePanoramaCaptureRequest setOrigin:]
  -[CAMMutablePanoramaCaptureRequest setSessionIdentifier:]
  -[CAMMutablePanoramaCaptureRequest setCaptureDevice:]
  -[CAMMutablePanoramaCaptureRequest setCaptureMode:]
  -[CAMMutablePanoramaCaptureRequest setPhotoEncodingBehavior:]
  -[CAMMutablePanoramaCaptureRequest setPersistenceOptions:]
  -[CAMMutablePanoramaCaptureRequest setTemporaryPersistenceOptions:]
  -[CAMMutablePanoramaCaptureRequest setCaptureOrientation:]
  -[CAMMutablePanoramaCaptureRequest setPressType:]
  -[CAMMutablePanoramaCaptureRequest setPersistenceUUID:]
  -[CAMMutablePanoramaCaptureRequest setShouldDelayRemotePersistence:]
  -[CAMMutablePanoramaCaptureRequest setDeferredPersistenceOptions:]
  -[CAMMutablePanoramaCaptureRequest setLocalDestinationURL:]
  -[CAMMutablePanoramaCaptureRequest setShouldExtractDiagnosticsFromMetadata:]
  -[CAMMutablePanoramaCaptureRequest setShouldPersistDiagnosticsToSidecar:]
  -[CAMMutablePanoramaCaptureRequest setAssertionIdentifier:]


CAMStageLightOverlayView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIView *_tintView
 @property  UIImageView *_vignetteView
 @property  CAMStageLightOverlayCircleView *_circleView
 @property  unsigned long _activeTimerID
 @property  CAGradientLayer *_gradientLayer
 @property  CAMStageLightAnimator *_animator
 @property  BOOL active
 @property  BOOL visible
 @property  long long orientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} viewportFrame
 @property  double bottomContentInset

  // class methods
  +[CAMStageLightOverlayView circleFrameForViewport:orientation:bottomContentInset:]
  +[CAMStageLightOverlayView _useLargeLayoutForViewportSize:]
  +[CAMStageLightOverlayView _circleDiameterForViewportSize:orientation:]

  // instance methods
  -[CAMStageLightOverlayView .cxx_destruct]
  -[CAMStageLightOverlayView isActive]
  -[CAMStageLightOverlayView setActive:]
  -[CAMStageLightOverlayView orientation]
  -[CAMStageLightOverlayView setOrientation:]
  -[CAMStageLightOverlayView setVisible:]
  -[CAMStageLightOverlayView isVisible]
  -[CAMStageLightOverlayView initWithFrame:]
  -[CAMStageLightOverlayView layoutSubviews]
  -[CAMStageLightOverlayView setOrientation:animated:]
  -[CAMStageLightOverlayView _animator]
  -[CAMStageLightOverlayView setVisible:animated:]
  -[CAMStageLightOverlayView _setAnimator:]
  -[CAMStageLightOverlayView setActive:animated:]
  -[CAMStageLightOverlayView _vignetteView]
  -[CAMStageLightOverlayView _gradientLayer]
  -[CAMStageLightOverlayView setBottomContentInset:]
  -[CAMStageLightOverlayView bottomContentInset]
  -[CAMStageLightOverlayView _tintView]
  -[CAMStageLightOverlayView _circleView]
  -[CAMStageLightOverlayView setViewportFrame:]
  -[CAMStageLightOverlayView viewportFrame]
  -[CAMStageLightOverlayView _updateShadowViewsAnimated:]
  -[CAMStageLightOverlayView _updateAnimatorState]
  -[CAMStageLightOverlayView _circleFrameForOrientation:]
  -[CAMStageLightOverlayView _activeTimerID]
  -[CAMStageLightOverlayView _setActiveTimerID:]


CAMObservable : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[CAMObservable init]
  -[CAMObservable .cxx_destruct]
  -[CAMObservable _willChange]
  -[CAMObservable _didChange]
  -[CAMObservable enumerateObserversUsingBlock:]
  -[CAMObservable performChanges:]
  -[CAMObservable registerChangeObserver:context:]
  -[CAMObservable mutableChangeObject]
  -[CAMObservable _observersQueue_copyChangeObserversForWriteIfNeeded]
  -[CAMObservable willPerformChanges]
  -[CAMObservable didPerformChanges]
  -[CAMObservable _publishChanges]
  -[CAMObservable didPublishChanges]
  -[CAMObservable _applyPendingChanges]
  -[CAMObservable unregisterChangeObserver:context:]
  -[CAMObservable signalChange:]


CAMLivePhotoStatusIndicator : CAMControlStatusIndicator
 @property  CAMLivePhotoAnimationCache *_animationCache
 @property  long long livePhotoMode

  // instance methods
  -[CAMLivePhotoStatusIndicator .cxx_destruct]
  -[CAMLivePhotoStatusIndicator intrinsicContentSize]
  -[CAMLivePhotoStatusIndicator initWithFrame:]
  -[CAMLivePhotoStatusIndicator canAnimate]
  -[CAMLivePhotoStatusIndicator livePhotoMode]
  -[CAMLivePhotoStatusIndicator shouldUseOutline]
  -[CAMLivePhotoStatusIndicator imageNameForCurrentState]
  -[CAMLivePhotoStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMLivePhotoStatusIndicator preloadAnimationFrames]
  -[CAMLivePhotoStatusIndicator setLivePhotoMode:]
  -[CAMLivePhotoStatusIndicator _animationCache]
  -[CAMLivePhotoStatusIndicator set_animationCache:]
  -[CAMLivePhotoStatusIndicator imageAnimationFramesForCurrentState]


CAMURLConfigurationRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  long long requestedCaptureMode
 @property  long long requestedCaptureDevice
 @property  BOOL wantsQRCodeForSession

  // instance methods
  -[CAMURLConfigurationRequest requestedCaptureMode]
  -[CAMURLConfigurationRequest requestedCaptureDevice]
  -[CAMURLConfigurationRequest wantsQRCodeForSession]
  -[CAMURLConfigurationRequest _initializeFromQueryDictionary:]
  -[CAMURLConfigurationRequest _captureModeFromString:outCaptureMode:]
  -[CAMURLConfigurationRequest _captureDeviceFromString:outCaptureDevice:]
  -[CAMURLConfigurationRequest initWithQueryDictionary:]


CAMLowLightSlider : CEKDiscreteSlider /System/Library/Frameworks/Metal.framework/Metal
 @property  BOOL _performingCaptureAnimation
 @property  unsigned long _selectedIndexBeforeCaptureAnimation
 @property  double _remainingCaptureAnimationTime
 @property  NSTimer *_valueLabelUpdateTimer
 @property  double _inactiveTickMarkHeight
 @property  long long lowLightMode
 @property  {?=dd} durationMapping

  // instance methods
  -[CAMLowLightSlider dealloc]
  -[CAMLowLightSlider .cxx_destruct]
  -[CAMLowLightSlider initWithFrame:]
  -[CAMLowLightSlider valueText]
  -[CAMLowLightSlider lowLightMode]
  -[CAMLowLightSlider setLowLightMode:]
  -[CAMLowLightSlider performCaptureAnimationWithDuration:completion:]
  -[CAMLowLightSlider endCaptureAnimationAnimated:]
  -[CAMLowLightSlider setDurationMapping:]
  -[CAMLowLightSlider _isPerformingCaptureAnimation]
  -[CAMLowLightSlider _selectedIndexBeforeCaptureAnimation]
  -[CAMLowLightSlider _remainingCaptureAnimationTime]
  -[CAMLowLightSlider _valueTextForDuration:]
  -[CAMLowLightSlider durationMapping]
  -[CAMLowLightSlider _valueTextForDuration:format:]
  -[CAMLowLightSlider _setSelectedIndexBeforeCaptureAnimation:]
  -[CAMLowLightSlider _setRemainingCaptureAnimationTime:]
  -[CAMLowLightSlider _setPerformingCaptureAnimation:]
  -[CAMLowLightSlider _startValueLabelUpdateTimerWithDuration:]
  -[CAMLowLightSlider _stopValueLabelUpdateTimer]
  -[CAMLowLightSlider _inactiveTickMarkHeight]
  -[CAMLowLightSlider _handleValueLabelUpdateTimerWithStartTime:duration:]
  -[CAMLowLightSlider _setValueLabelUpdateTimer:]
  -[CAMLowLightSlider _valueLabelUpdateTimer]


CAMStorageController : NSObject /usr/lib/libSystem.B.dylib
 @property  long long _cachedVeryLowDiskThreshold
 @property  long long _cachedLowDiskThreshold
 @property  long long _cachedLegacyMGDiskThreshold
 @property  NSDate *_lastPurgeRequestUpdateTime
 @property  NSObject<OS_dispatch_queue> *_cacheDeleteQueryQueue
 @property  ^{CacheDeleteToken=} _queryQueue_currentToken
 @property  <CAMStorageControllerDelegate> *delegate

  // instance methods
  -[CAMStorageController init]
  -[CAMStorageController delegate]
  -[CAMStorageController setDelegate:]
  -[CAMStorageController .cxx_destruct]
  -[CAMStorageController _notifyDelegate]
  -[CAMStorageController reportLowDiskEventWithIdentifier:]
  -[CAMStorageController hasDiskSpaceToAllowCaptureWithConfiguration:allowPurging:]
  -[CAMStorageController _loadFreeDiskThresholds]
  -[CAMStorageController _legacyDiskSpaceDidBecomeLowNotification]
  -[CAMStorageController _totalFreeBytes]
  -[CAMStorageController _absoluteMinimumBytesForMode:]
  -[CAMStorageController _updatePurgeRequestStateForConfiguration:totalFreeBytes:]
  -[CAMStorageController _cacheDeleteQueryQueue]
  -[CAMStorageController _queryQueue_aggregateLowDiskEventWithIdentifier:]
  -[CAMStorageController _pathForStorageMountPoint]
  -[CAMStorageController _statMountPoint:]
  -[CAMStorageController _cachedVeryLowDiskThreshold]
  -[CAMStorageController _cachedLegacyMGDiskThreshold]
  -[CAMStorageController set_cachedLegacyMGDiskThreshold:]
  -[CAMStorageController set_cachedVeryLowDiskThreshold:]
  -[CAMStorageController set_cachedLowDiskThreshold:]
  -[CAMStorageController _cachedLowDiskThreshold]
  -[CAMStorageController _preferredMinimumBytesForVideoConfiguration:encodingBehavior:]
  -[CAMStorageController _lastPurgeRequestUpdateTime]
  -[CAMStorageController _preferredMinimumBytesForConfiguration:]
  -[CAMStorageController _queryQueue_updatePurgeRequestStateForTotalFreeBytes:preferredFreeBytes:]
  -[CAMStorageController set_lastPurgeRequestUpdateTime:]
  -[CAMStorageController _queryQueue_currentToken]
  -[CAMStorageController set_queryQueue_currentToken:]


CAMHDRSuggestionMonitoringCommand : CAMCaptureCommand
 @property  BOOL _enabled

  // instance methods
  -[CAMHDRSuggestionMonitoringCommand copyWithZone:]
  -[CAMHDRSuggestionMonitoringCommand encodeWithCoder:]
  -[CAMHDRSuggestionMonitoringCommand initWithCoder:]
  -[CAMHDRSuggestionMonitoringCommand _isEnabled]
  -[CAMHDRSuggestionMonitoringCommand executeWithContext:]
  -[CAMHDRSuggestionMonitoringCommand initWithHDRSuggestionMonitoringEnabled:]


CAMApplicationDelegate : UIResponder /System/Library/Frameworks/Foundation.framework/Foundation <UNUserNotificationCenterDelegate, UIApplicationDelegate>
 @property  UIWindow *window
 @property  CAMViewfinderViewController *viewfinderViewController
 @property  CAMCameraRollController *cameraRollController
 @property  CUCaptureController *captureController
 @property  CAMTimelapseController *timelapseController
 @property  CAMPersistenceController *persistenceController
 @property  CAMMotionController *motionController
 @property  CAMLocationController *locationController
 @property  CAMPowerController *powerController
 @property  CAMBurstController *burstController
 @property  CAMKeepAliveController *keepAliveController
 @property  CAMProtectionController *protectionController
 @property  CAMRemoteShutterController *remoteShutterController
 @property  CAMNebulaDaemonProxyManager *nebulaDaemonProxyManager
 @property  CAMIrisVideoController *irisVideoController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMApplicationDelegate .cxx_destruct]
  -[CAMApplicationDelegate window]
  -[CAMApplicationDelegate setWindow:]
  -[CAMApplicationDelegate userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[CAMApplicationDelegate applicationWillResignActive:]
  -[CAMApplicationDelegate applicationDidBecomeActive:]
  -[CAMApplicationDelegate applicationWillEnterForeground:]
  -[CAMApplicationDelegate applicationDidEnterBackground:]
  -[CAMApplicationDelegate application:openURL:options:]
  -[CAMApplicationDelegate applicationWillTerminate:]
  -[CAMApplicationDelegate application:didFinishLaunchingWithOptions:]
  -[CAMApplicationDelegate prepareForDefaultImageSnapshotForScreen:]
  -[CAMApplicationDelegate userNotificationCenter:willPresentNotification:withCompletionHandler:]
  -[CAMApplicationDelegate application:performActionForShortcutItem:completionHandler:]
  -[CAMApplicationDelegate persistenceController]
  -[CAMApplicationDelegate captureController]
  -[CAMApplicationDelegate powerController]
  -[CAMApplicationDelegate viewfinderViewController]
  -[CAMApplicationDelegate cameraRollController]
  -[CAMApplicationDelegate updateShortcutItemsForApplication:]
  -[CAMApplicationDelegate _createSubsystemsWithLaunchOptions:]
  -[CAMApplicationDelegate timelapseController]
  -[CAMApplicationDelegate motionController]
  -[CAMApplicationDelegate locationController]
  -[CAMApplicationDelegate burstController]
  -[CAMApplicationDelegate keepAliveController]
  -[CAMApplicationDelegate protectionController]
  -[CAMApplicationDelegate remoteShutterController]
  -[CAMApplicationDelegate nebulaDaemonProxyManager]
  -[CAMApplicationDelegate irisVideoController]


CAMPrepareStillImageCaptureCommand : CAMCaptureCommand
 @property  unsigned long _systemTimeOfCapture

  // instance methods
  -[CAMPrepareStillImageCaptureCommand copyWithZone:]
  -[CAMPrepareStillImageCaptureCommand encodeWithCoder:]
  -[CAMPrepareStillImageCaptureCommand initWithCoder:]
  -[CAMPrepareStillImageCaptureCommand executeWithContext:]
  -[CAMPrepareStillImageCaptureCommand initWithSystemTime:]
  -[CAMPrepareStillImageCaptureCommand _systemTimeOfCapture]


CAMAnimationDelegate : NSObject /usr/lib/libSystem.B.dylib <CAAnimationDelegate>
 @property  @? completion
 @property  @? start
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMAnimationDelegate .cxx_destruct]
  -[CAMAnimationDelegate start]
  -[CAMAnimationDelegate setCompletion:]
  -[CAMAnimationDelegate completion]
  -[CAMAnimationDelegate animationDidStop:finished:]
  -[CAMAnimationDelegate animationDidStart:]
  -[CAMAnimationDelegate setStart:]


CAMAnimationHelper : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[CAMAnimationHelper animateLayer:forButtonHighlighted:layoutStyle:]
  +[CAMAnimationHelper configurePowerSensitiveAnimation:]
  +[CAMAnimationHelper animateLayer:toFrame:fromCurrentState:]
  +[CAMAnimationHelper _animationWithKeyPath:]
  +[CAMAnimationHelper setLayer:highlighted:animated:layoutStyle:]
  +[CAMAnimationHelper _highlightScaleForLayoutStyle:]


CAMHDRBadge : CEKBadgeTextView /System/Library/Frameworks/Metal.framework/Metal
  // instance methods
  -[CAMHDRBadge initWithFrame:]


CAMTimelapseBackendController : NSObject /usr/lib/libSystem.B.dylib <CAMVideoCaptureRequestDelegate, CAMNebulaDaemonTimelapseProtocol, CAMPersistenceResultDelegate>
 @property  NSMutableArray *_sessionContexts
 @property  NSObject<OS_dispatch_queue> *_workQueue
 @property  BOOL _writingMovie
 @property  <CAMTimelapseMovieWriterProtocol> *_movieWriter
 @property  CAMTimelapseState *_currentState
 @property  BOOL _capturing
 @property  CAMNebulaKeepAliveController *_keepAliveController
 @property  CAMPersistenceController *_persistenceController
 @property  BOOL _oldMovieWriterEnabled
 @property  int _notifyRegisterTokenSuspendIO
 @property  int _notifyRegisterTokenResumeIO
 @property  BKSApplicationStateMonitor *_applicationStateMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMTimelapseBackendController init]
  -[CAMTimelapseBackendController dealloc]
  -[CAMTimelapseBackendController .cxx_destruct]
  -[CAMTimelapseBackendController _workQueue]
  -[CAMTimelapseBackendController _currentState]
  -[CAMTimelapseBackendController _applicationStateMonitor]
  -[CAMTimelapseBackendController _isCameraRunning]
  -[CAMTimelapseBackendController _persistenceController]
  -[CAMTimelapseBackendController _isCapturing]
  -[CAMTimelapseBackendController _setCurrentState:]
  -[CAMTimelapseBackendController videoRequestDidCompleteRemotePersistence:withResponse:error:]
  -[CAMTimelapseBackendController _keepAliveController]
  -[CAMTimelapseBackendController updatePendingWorkFromDiskForceEndLastSession:]
  -[CAMTimelapseBackendController startTimelapseWithUUID:]
  -[CAMTimelapseBackendController resumeTimelapseWithUUID:]
  -[CAMTimelapseBackendController updateTimelapseWithUUID:]
  -[CAMTimelapseBackendController finishCaptureForTimelapseWithUUID:]
  -[CAMTimelapseBackendController stopTimelapseWithUUID:]
  -[CAMTimelapseBackendController persistenceController:didGenerateVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMTimelapseBackendController initWithPersistenceController:keepAliveController:]
  -[CAMTimelapseBackendController _dispatchToMainQueueWithBlock:]
  -[CAMTimelapseBackendController handleClientConnection:]
  -[CAMTimelapseBackendController _notifyRegisterTokenSuspendIO]
  -[CAMTimelapseBackendController _notifyRegisterTokenResumeIO]
  -[CAMTimelapseBackendController handleClientDisconnection]
  -[CAMTimelapseBackendController _movieWriter]
  -[CAMTimelapseBackendController _workQueue_setupCameraProcessMonitoringIfNecessary]
  -[CAMTimelapseBackendController _workQueue_destroyApplicationStateMonitor]
  -[CAMTimelapseBackendController _setCapturing:]
  -[CAMTimelapseBackendController _getOrCreateSessionContextForTimelapseUUID:]
  -[CAMTimelapseBackendController _updateSessionContext:withState:]
  -[CAMTimelapseBackendController _performPendingWork]
  -[CAMTimelapseBackendController _dispatchToWorkQueueWithBlock:]
  -[CAMTimelapseBackendController _updatePendingWorkFromDiskForceEndLastSession:]
  -[CAMTimelapseBackendController _permanentlyFailTimelapseUUID:withState:]
  -[CAMTimelapseBackendController _dispatchToWorkQueueAfterDelay:withBlock:]
  -[CAMTimelapseBackendController _deleteItemAtPath:]
  -[CAMTimelapseBackendController _scheduleDelayedMovieWriteIfNeededForTimelapseUUID:]
  -[CAMTimelapseBackendController _writeMovieForSessionContext:]
  -[CAMTimelapseBackendController _shouldSaveLastTimelapseDataForDebugging]
  -[CAMTimelapseBackendController _saveTimelapseDirectoryForDebuggingTimelapseUUID:]
  -[CAMTimelapseBackendController _createPlaceholderAssetForState:]
  -[CAMTimelapseBackendController _frameTransformForState:]
  -[CAMTimelapseBackendController _movieWrittenToFilePath:duration:metadata:state:]
  -[CAMTimelapseBackendController _reserveDummyFileForTimelapseUUID:firstImageFilePath:useHEVC:]
  -[CAMTimelapseBackendController _notifyAssetsdOfIncomingMovieAtPath:duration:metadata:state:]
  -[CAMTimelapseBackendController _pidForApplication:]
  -[CAMTimelapseBackendController _sessionContexts]
  -[CAMTimelapseBackendController _writingMovie]
  -[CAMTimelapseBackendController _oldMovieWriterEnabled]


CAMPhysicalCaptureNotifier : NSObject /usr/lib/libSystem.B.dylib
 @property  long long state
 @property  long long _volumeUpButtonState
 @property  long long _volumeDownButtonState
 @property  UIView *_view
 @property  <BSInvalidatable> *_cameraButtonRequest
 @property  <CAMPhysicalCaptureNotifierDelegate> *delegate
 @property  BOOL enabled

  // instance methods
  -[CAMPhysicalCaptureNotifier dealloc]
  -[CAMPhysicalCaptureNotifier setEnabled:]
  -[CAMPhysicalCaptureNotifier delegate]
  -[CAMPhysicalCaptureNotifier setDelegate:]
  -[CAMPhysicalCaptureNotifier .cxx_destruct]
  -[CAMPhysicalCaptureNotifier state]
  -[CAMPhysicalCaptureNotifier isEnabled]
  -[CAMPhysicalCaptureNotifier _setState:]
  -[CAMPhysicalCaptureNotifier _view]
  -[CAMPhysicalCaptureNotifier initWithView:]
  -[CAMPhysicalCaptureNotifier _updateCaptureButtonNotifications]
  -[CAMPhysicalCaptureNotifier _handleVolumeUpButtonUpNotification:]
  -[CAMPhysicalCaptureNotifier _handleVolumeUpButtonDownNotification:]
  -[CAMPhysicalCaptureNotifier _handleVolumeDownButtonUpNotification:]
  -[CAMPhysicalCaptureNotifier _handleVolumeDownButtonDownNotification:]
  -[CAMPhysicalCaptureNotifier set_cameraButtonRequest:]
  -[CAMPhysicalCaptureNotifier _cameraButtonRequest]
  -[CAMPhysicalCaptureNotifier _setVolumeUpButtonState:]
  -[CAMPhysicalCaptureNotifier _setVolumeDownButtonState:]
  -[CAMPhysicalCaptureNotifier _volumeDownButtonState]
  -[CAMPhysicalCaptureNotifier _updateStateAndNotifyDelegateIfNeeded]
  -[CAMPhysicalCaptureNotifier _volumeUpButtonState]


CAMPanoramaOutput : AVCaptureVideoDataOutput /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
 @property  CAMCaptureEngine *_engine
 @property  long long photoEncodingBehavior

  // instance methods
  -[CAMPanoramaOutput .cxx_destruct]
  -[CAMPanoramaOutput initWithEngine:]
  -[CAMPanoramaOutput _engine]
  -[CAMPanoramaOutput photoEncodingBehavior]
  -[CAMPanoramaOutput changeToEncodingBehavior:]
  -[CAMPanoramaOutput changeToDirection:]


CAMDescriptionOverlayView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIVisualEffectView *_blurEffectView
 @property  UIView *_blackoutView
 @property  CAShapeLayer *_blackoutMask
 @property  CAMPortraitModeDescriptionOverlayPrimaryVibrancyEffectView *_primaryVibrancyEffectView
 @property  UILabel *_titleLabel
 @property  UILabel *_descriptionTitleLabel
 @property  UILabel *_descriptionLabel
 @property  UILabel *_infoTitleLabel
 @property  UILabel *_infoLabel
 @property  UIButton *_acknowledgmentButton
 @property  double _descriptionFontSizeMultiplier
 @property  double _infoFontSizeMultiplier
 @property  <CAMDescriptionOverlayViewDelegate> *delegate
 @property  BOOL acknowledgmentButtonHighlighted
 @property  long long orientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} viewportFrame
 @property  BOOL blackoutFrameVisible

  // instance methods
  -[CAMDescriptionOverlayView delegate]
  -[CAMDescriptionOverlayView setDelegate:]
  -[CAMDescriptionOverlayView .cxx_destruct]
  -[CAMDescriptionOverlayView orientation]
  -[CAMDescriptionOverlayView setOrientation:]
  -[CAMDescriptionOverlayView initWithFrame:]
  -[CAMDescriptionOverlayView layoutSubviews]
  -[CAMDescriptionOverlayView _titleLabel]
  -[CAMDescriptionOverlayView _descriptionLabel]
  -[CAMDescriptionOverlayView _isVisible]
  -[CAMDescriptionOverlayView setOrientation:animated:]
  -[CAMDescriptionOverlayView _infoLabel]
  -[CAMDescriptionOverlayView _blurEffectView]
  -[CAMDescriptionOverlayView setViewportFrame:]
  -[CAMDescriptionOverlayView viewportFrame]
  -[CAMDescriptionOverlayView updateToContentSize:]
  -[CAMDescriptionOverlayView setBlackoutFrameVisible:]
  -[CAMDescriptionOverlayView setVisible:animationDuration:completion:]
  -[CAMDescriptionOverlayView titleTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView acknowledgmentTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView descriptionTitleTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView descriptionTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView infoTitleTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView infoTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView maxDescriptionTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMDescriptionOverlayView maxInfoTextWidthForNarrowWidth:isLandscape:usingFontSizeMultiplier:]
  -[CAMDescriptionOverlayView additionalSpacing]
  -[CAMDescriptionOverlayView _handleAcknowledgmentButtonTapped:]
  -[CAMDescriptionOverlayView _setDescriptionFontSizeMultiplier:]
  -[CAMDescriptionOverlayView _setInfoFontSizeMultiplier:]
  -[CAMDescriptionOverlayView _descriptionTitleLabel]
  -[CAMDescriptionOverlayView _infoTitleLabel]
  -[CAMDescriptionOverlayView _acknowledgmentButton]
  -[CAMDescriptionOverlayView _updateFontsUsingNarrowWidth:]
  -[CAMDescriptionOverlayView _updateTextUsingNarrowWidth:]
  -[CAMDescriptionOverlayView _primaryVibrancyEffectView]
  -[CAMDescriptionOverlayView _descriptionFontSizeMultiplier]
  -[CAMDescriptionOverlayView _infoFontSizeMultiplier]
  -[CAMDescriptionOverlayView _blackoutView]
  -[CAMDescriptionOverlayView _blackoutMask]
  -[CAMDescriptionOverlayView _layoutBlackoutMaskForFrame:inFrame:]
  -[CAMDescriptionOverlayView isAcknowledgmentButtonHighlighted]
  -[CAMDescriptionOverlayView setAcknowledgmentButtonHighlighted:]
  -[CAMDescriptionOverlayView isBlackoutFrameVisible]


CAMHDRStatusIndicator : CAMControlStatusIndicator
 @property  long long hdrMode
 @property  BOOL autoHDRAllowed

  // instance methods
  -[CAMHDRStatusIndicator intrinsicContentSize]
  -[CAMHDRStatusIndicator setOrientation:animated:]
  -[CAMHDRStatusIndicator hdrMode]
  -[CAMHDRStatusIndicator setHDRMode:]
  -[CAMHDRStatusIndicator imageNameForCurrentState]
  -[CAMHDRStatusIndicator shouldUseActiveTintForCurrentState]
  -[CAMHDRStatusIndicator setAllowAutoHDR:]
  -[CAMHDRStatusIndicator setAutoHDRAllowed:]
  -[CAMHDRStatusIndicator isAutoHDRAllowed]


CAMStillImageLocalPersistenceResult : NSObject /usr/lib/libSystem.B.dylib
 @property  CAMStillImageCaptureResult *captureResult
 @property  NSURL *localDestinationURL
 @property  NSURL *linkedDestinationURL
 @property  NSURL *localAdjustmentsURL
 @property  NSString *localDiagnosticsPath
 @property  NSString *localFilteredPreviewPath
 @property  NSString *localPersistenceUUID
 @property  NSDate *creationDate
 @property  NSString *uniformTypeIdentifier
 @property  long long imageOrientation
 @property  NSDictionary *metadata
 @property  NSData *adjustmentsData
 @property  NSURL *localPrivateMetadataFileURL
 @property  NSError *error

  // instance methods
  -[CAMStillImageLocalPersistenceResult .cxx_destruct]
  -[CAMStillImageLocalPersistenceResult error]
  -[CAMStillImageLocalPersistenceResult creationDate]
  -[CAMStillImageLocalPersistenceResult imageOrientation]
  -[CAMStillImageLocalPersistenceResult metadata]
  -[CAMStillImageLocalPersistenceResult uniformTypeIdentifier]
  -[CAMStillImageLocalPersistenceResult adjustmentsData]
  -[CAMStillImageLocalPersistenceResult localPersistenceUUID]
  -[CAMStillImageLocalPersistenceResult localDestinationURL]
  -[CAMStillImageLocalPersistenceResult linkedDestinationURL]
  -[CAMStillImageLocalPersistenceResult initWithCaptureResult:atURL:linkedURL:localAdjustmentsURL:diagnosticsPath:filteredPreviewPath:withUUID:creationDate:uniformTypeIdentifier:orientation:metadata:adjustmentsData:localPrivateMetadataFileURL:error:]
  -[CAMStillImageLocalPersistenceResult captureResult]
  -[CAMStillImageLocalPersistenceResult localDiagnosticsPath]
  -[CAMStillImageLocalPersistenceResult localAdjustmentsURL]
  -[CAMStillImageLocalPersistenceResult localFilteredPreviewPath]
  -[CAMStillImageLocalPersistenceResult localPrivateMetadataFileURL]


CAMTransientDataSource : NSObject /usr/lib/libSystem.B.dylib <PUTransientDataSource>
 @property  NSHashTable *_observers
 @property  NSMutableArray *_assetUUIDs
 @property  NSMutableDictionary *_assetsByUUID
 @property  NSMutableDictionary *_representativeAssetsByBurstIdentifier
 @property  NSMutableDictionary *_enqueuedBurstAssetUUIDByBurstIdentifier
 @property  NSMutableDictionary *_enqueuedBurstConvertiblesByAssetUUID
 @property  long long _nestedPerformChanges
 @property  long long _pendingChangeNotifications
 @property  BOOL empty
 @property  NSSet *existingBurstIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CAMTransientDataSource init]
  -[CAMTransientDataSource isEmpty]
  -[CAMTransientDataSource .cxx_destruct]
  -[CAMTransientDataSource _observers]
  -[CAMTransientDataSource _assetsByUUID]
  -[CAMTransientDataSource _assetUUIDs]
  -[CAMTransientDataSource performChanges:]
  -[CAMTransientDataSource registerChangeObserver:]
  -[CAMTransientDataSource unregisterChangeObserver:]
  -[CAMTransientDataSource uuids]
  -[CAMTransientDataSource _representativeAssetsByBurstIdentifier]
  -[CAMTransientDataSource transientBurstMapping]
  -[CAMTransientDataSource transientAssetMapping]
  -[CAMTransientDataSource existingRepresentativeAssetForBurstIdentifier:]
  -[CAMTransientDataSource removeAllAssets]
  -[CAMTransientDataSource removeRepresentativeAssetForBurstIdentifier:]
  -[CAMTransientDataSource processPendingBurstAssets]
  -[CAMTransientDataSource _nestedPerformChanges]
  -[CAMTransientDataSource _setNestedPerformChanges:]
  -[CAMTransientDataSource removeAssetWithUUID:]
  -[CAMTransientDataSource updateAssetWithConvertible:]
  -[CAMTransientDataSource enqueuePendingBurstAssetWithConvertible:]
  -[CAMTransientDataSource existingAssetForUUID:]
  -[CAMTransientDataSource insertAssetWithConvertible:]
  -[CAMTransientDataSource existingAssetUUIDs]
  -[CAMTransientDataSource existingBurstIdentifiers]
  -[CAMTransientDataSource _enqueuedBurstAssetUUIDByBurstIdentifier]
  -[CAMTransientDataSource _enqueuedBurstConvertiblesByAssetUUID]
  -[CAMTransientDataSource _notifyObserversOfDataSourceChange]
  -[CAMTransientDataSource _removeAssetWithUUID:]
  -[CAMTransientDataSource _setPendingChangeNotifications:]
  -[CAMTransientDataSource _pendingChangeNotifications]


CAMCameraViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <CAMCaptureResultDelegate, CAMPersistenceResultDelegate, CAMCVCStillImageResultCoordinatorDelegate, CAMViewfinderReviewButtonSource, NSCoding, NSSecureCoding>
 @property  CUCaptureController *captureController
 @property  CAMTimelapseController *timelapseController
 @property  CAMPersistenceController *persistenceController
 @property  CAMMotionController *motionController
 @property  CAMLocationController *locationController
 @property  CAMPowerController *powerController
 @property  CAMBurstController *burstController
 @property  CAMKeepAliveController *keepAliveController
 @property  CAMProtectionController *protectionController
 @property  CAMRemoteShutterController *remoteShutterController
 @property  CAMNebulaDaemonProxyManager *nebulaDaemonProxyManager
 @property  CAMReviewButton *_reviewButton
 @property  NSObject<OS_dispatch_queue> *_resultProcessingQueue
 @property  NSMutableDictionary *_resultQueueStillImageResultCoordinators
 @property  CAMThumbnailGenerator *_resultQueueThumbnailGenerator
 @property  PAImageConversionServiceClient *_imageConversionClient
 @property  PAVideoConversionServiceClient *_videoConversionClient
 @property  CAMViewfinderViewController *viewfinderViewController
 @property  BOOL disablingMultipleCaptureFeatures
 @property  BOOL disablingAdditionalCaptures
 @property  BOOL preventingAdditionalCaptures
 @property  unsigned long persistenceBehavior
 @property  BOOL automaticallyAdjustsApplicationIdleTimer
 @property  <CAMCameraViewControllerPresentationDelegate> *presentationDelegate
 @property  <CAMCreativeCameraDelegate> *creativeCameraDelegate
 @property  BOOL performingTileTransition
 @property  BOOL automaticallyManagesCameraSession
 @property  <CAMCameraViewControllerCameraSessionDelegate> *cameraSessionDelegate
 @property  long long messagesTransitionState
 @property  <CAMCameraConfigurationDelegate> *configurationDelegate
 @property  long long captureMode
 @property  long long captureDevice
 @property  long long flashMode
 @property  long long torchMode
 @property  long long hdrMode
 @property  long long timerDuration
 @property  long long livePhotoMode
 @property  long long photoModeAspectRatioCrop
 @property  <CAMCameraCaptureDelegate> *captureDelegate
 @property  BOOL capturingPhoto
 @property  BOOL capturingLivePhoto
 @property  BOOL recording
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CAMCameraViewController supportsSecureCoding]
  +[CAMCameraViewController isEmulatingImagePicker]

  // instance methods
  -[CAMCameraViewController dealloc]
  -[CAMCameraViewController initWithCoder:]
  -[CAMCameraViewController .cxx_destruct]
  -[CAMCameraViewController loadView]
  -[CAMCameraViewController initWithNibName:bundle:]
  -[CAMCameraViewController viewWillAppear:]
  -[CAMCameraViewController viewDidLoad]
  -[CAMCameraViewController viewDidDisappear:]
  -[CAMCameraViewController preferredStatusBarUpdateAnimation]
  -[CAMCameraViewController childViewControllerForStatusBarHidden]
  -[CAMCameraViewController childViewControllerForScreenEdgesDeferringSystemGestures]
  -[CAMCameraViewController childViewControllerForHomeIndicatorAutoHidden]
  -[CAMCameraViewController didReceiveMemoryWarning]
  -[CAMCameraViewController hdrMode]
  -[CAMCameraViewController setPresentationDelegate:]
  -[CAMCameraViewController flashMode]
  -[CAMCameraViewController setFlashMode:]
  -[CAMCameraViewController setHDRMode:]
  -[CAMCameraViewController torchMode]
  -[CAMCameraViewController setTorchMode:]
  -[CAMCameraViewController isRecording]
  -[CAMCameraViewController stopRecording]
  -[CAMCameraViewController isCapturingPhoto]
  -[CAMCameraViewController _imageConversionClient]
  -[CAMCameraViewController _videoConversionClient]
  -[CAMCameraViewController presentationDelegate]
  -[CAMCameraViewController captureDevice]
  -[CAMCameraViewController startRecording]
  -[CAMCameraViewController persistenceController]
  -[CAMCameraViewController configurationDelegate]
  -[CAMCameraViewController setConfigurationDelegate:]
  -[CAMCameraViewController captureController]
  -[CAMCameraViewController _reviewButton]
  -[CAMCameraViewController reviewButton]
  -[CAMCameraViewController powerController]
  -[CAMCameraViewController viewfinderViewController]
  -[CAMCameraViewController livePhotoMode]
  -[CAMCameraViewController timerDuration]
  -[CAMCameraViewController photoModeAspectRatioCrop]
  -[CAMCameraViewController captureMode]
  -[CAMCameraViewController isDisablingAdditionalCaptures]
  -[CAMCameraViewController setPerformingTileTransition:]
  -[CAMCameraViewController isPerformingTileTransition]
  -[CAMCameraViewController persistenceBehavior]
  -[CAMCameraViewController setTimerDuration:]
  -[CAMCameraViewController isDisablingMultipleCaptureFeatures]
  -[CAMCameraViewController automaticallyAdjustsApplicationIdleTimer]
  -[CAMCameraViewController messagesTransitionState]
  -[CAMCameraViewController isPreventingAdditionalCaptures]
  -[CAMCameraViewController setPhotoModeAspectRatioCrop:]
  -[CAMCameraViewController setLivePhotoMode:]
  -[CAMCameraViewController creativeCameraDelegate]
  -[CAMCameraViewController handleVolumeButtonPressed]
  -[CAMCameraViewController handleVolumeButtonReleased]
  -[CAMCameraViewController isCapturingLivePhoto]
  -[CAMCameraViewController capturePhoto]
  -[CAMCameraViewController setDisablingAdditionalCaptures:]
  -[CAMCameraViewController viewSystemLayoutSizeFittingSize:forCaptureMode:]
  -[CAMCameraViewController setMessagesTransitionState:animated:]
  -[CAMCameraViewController setAutomaticallyAdjustsApplicationIdleTimer:]
  -[CAMCameraViewController setPersistenceBehavior:]
  -[CAMCameraViewController setCreativeCameraDelegate:]
  -[CAMCameraViewController setDisablingMultipleCaptureFeatures:]
  -[CAMCameraViewController initWithOverrides:usingEmulationMode:]
  -[CAMCameraViewController setCaptureDelegate:]
  -[CAMCameraViewController configureForCaptureMode:captureDevice:]
  -[CAMCameraViewController handleReviewButtonReleased:]
  -[CAMCameraViewController persistenceController:didCompleteAllLocalPersistenceForRequest:]
  -[CAMCameraViewController persistenceController:didGenerateStillImageLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMCameraViewController persistenceController:didGenerateVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMCameraViewController captureController:didGenerateStillImageCaptureResult:fromRequest:]
  -[CAMCameraViewController stillImagePersistenceCoordinator:requestsDispatchForResultSpecifiers:photoProperties:videoProperties:unfilteredPhotoProperties:unfilteredVideoProperties:assetAdjustments:error:]
  -[CAMCameraViewController stillImagePersistenceCoordinatorDidCompleteAllDispatches:]
  -[CAMCameraViewController timelapseController]
  -[CAMCameraViewController motionController]
  -[CAMCameraViewController locationController]
  -[CAMCameraViewController burstController]
  -[CAMCameraViewController keepAliveController]
  -[CAMCameraViewController protectionController]
  -[CAMCameraViewController remoteShutterController]
  -[CAMCameraViewController nebulaDaemonProxyManager]
  -[CAMCameraViewController _commonCAMCameraViewControllerInitializationWithOverrides:usingEmulationMode:initialLayoutStyle:privateOptions:]
  -[CAMCameraViewController automaticallyManagesCameraSession]
  -[CAMCameraViewController resumeCameraSession]
  -[CAMCameraViewController suspendCameraSession]
  -[CAMCameraViewController cameraSessionDelegate]
  -[CAMCameraViewController _capturePersistenceBehaviorForViewfinderPersistenceBehavior:]
  -[CAMCameraViewController _viewfinderPersistenceBehaviorForCapturePersistenceBehavior:]
  -[CAMCameraViewController _resultQueueThumbnailGenerator]
  -[CAMCameraViewController captureDelegate]
  -[CAMCameraViewController _resultQueueSafeImageFromSurface:imageOrientation:]
  -[CAMCameraViewController _previewImageFromVideoURL:]
  -[CAMCameraViewController _resultProcessingQueue]
  -[CAMCameraViewController _clientPropertiesForStillImageWithURL:captureMode:captureOrientation:previewSurface:previewOrientation:uniqueIdentifier:savedToPhotoLibrary:captureResult:]
  -[CAMCameraViewController _notifyCaptureDelegateOfCompletedCaptureOfPhoto:withProperties:error:]
  -[CAMCameraViewController _behaviorDefinedDestinationURLForRequest:withLocalDestinationURL:linkedDestinationURL:]
  -[CAMCameraViewController _exportPropertiesForClientProperties:]
  -[CAMCameraViewController _resultQueue_getOrCreateStillImageResultCoordinatorForRequest:captureTimeExpectedResultSpecifiers:isExpectingPairedVideo:isDisablingMultipleCaptures:isGeneratingFilteredMedia:]
  -[CAMCameraViewController _mediaConversionOptionsForAdjustments:mediaType:]
  -[CAMCameraViewController _handleCTMVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMCameraViewController _handleLivePhotoVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMCameraViewController _handleVideoLocalPersistenceResult:forCaptureResult:fromRequest:]
  -[CAMCameraViewController _clientPropertiesForLivePhotoVideoURL:duration:error:]
  -[CAMCameraViewController _handleCTMVideoLocalPersistenceResult:forCaptureResult:fromRequest:size:videoURL:renderedToURL:renderedAdjustments:]
  -[CAMCameraViewController _clientPropertiesForVideoURL:renderedURL:duration:size:creationDate:captureOrientation:previewOrientation:adjustments:uniqueIdentifier:savedToPhotoLibrary:]
  -[CAMCameraViewController _notifyCaptureDelegateOfCompletedCaptureOfVideo:withProperties:error:]
  -[CAMCameraViewController _resultQueue_forceCompletionIfPossibleForRequest:]
  -[CAMCameraViewController _resultQueue_getStillImageResultCoordinatorForRequest:]
  -[CAMCameraViewController _resultQueueStillImageResultCoordinators]
  -[CAMCameraViewController _notifyCaptureDelegateOfCompletedCaptureOfLivePhoto:withProperties:error:]
  -[CAMCameraViewController _resultQueue_removeStillImageResultCoordinatorForIdentifier:]
  -[CAMCameraViewController initWithOverrides:initialLayoutStyle:privateOptions:]
  -[CAMCameraViewController setAutomaticallyManagesCameraSession:]
  -[CAMCameraViewController setCameraSessionDelegate:]


CAMFullscreenViewfinderLayout : NSObject /usr/lib/libSystem.B.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} referenceBounds
 @property  {CGSize=dd} shutterIntrinsicSize

  // instance methods
  -[CAMFullscreenViewfinderLayout referenceBounds]
  -[CAMFullscreenViewfinderLayout setReferenceBounds:]
  -[CAMFullscreenViewfinderLayout initWithReferenceBounds:shutterIntrinsicSize:]
  -[CAMFullscreenViewfinderLayout setShutterIntrinsicSize:]
  -[CAMFullscreenViewfinderLayout frameForControlStatusBar]
  -[CAMFullscreenViewfinderLayout frameForBottomLeftControl:]
  -[CAMFullscreenViewfinderLayout frameForShutterControl:]
  -[CAMFullscreenViewfinderLayout geometryForElapsedTimeView:viewportFrame:orientation:]
  -[CAMFullscreenViewfinderLayout viewportFrameForAspectRatio:usingAppDrawer:accessoryAreaExpanded:]
  -[CAMFullscreenViewfinderLayout alignmentRectForShutterControl]
  -[CAMFullscreenViewfinderLayout frameForBottomRightControl:]
  -[CAMFullscreenViewfinderLayout viewportSizeForAspectRatio:]
  -[CAMFullscreenViewfinderLayout heightForExpandedAccessoryArea]
  -[CAMFullscreenViewfinderLayout shutterIntrinsicSize]
  -[CAMFullscreenViewfinderLayout viewportFrameForAspectRatio:accessoryAreaExpanded:]
  -[CAMFullscreenViewfinderLayout frameForBottomControl:betweenShutterAndLeftControl:]
  -[CAMFullscreenViewfinderLayout frameForBottomControl:betweenShutterAndRightControl:]


UIWindow(UIWindow_Camera)
	// class methods
	+[UIWindow(UIWindow_Camera) cam_interfaceOrientationForWindow:]

AVCaptureDevice(CAMDebugging)
	// instance methods
	-[AVCaptureDevice(CAMDebugging) cameraVideoFormatForVideoConfiguration:videoEncodingBehavior:]
	-[AVCaptureDevice(CAMDebugging) cameraVideoPresetForVideoConfiguration:videoEncodingBehavior:]
	-[AVCaptureDevice(CAMDebugging) cameraPanoramaFormatForConfiguration:]
	-[AVCaptureDevice(CAMDebugging) cam_formatForPortraitFrontFacingZoomed]
	-[AVCaptureDevice(CAMDebugging) cam_debugFocusState]
	-[AVCaptureDevice(CAMDebugging) cam_debugExposureState]
	-[AVCaptureDevice(CAMDebugging) cam_debugFocusAndExposureState]
	-[AVCaptureDevice(CAMDebugging) cam_highestQualityFormatForConfiguration:colorSpace:]

NSString(Camera)
	// class methods
	+[NSString(Camera) cam_localizedTitleForMode:wantsCompactTitle:]

	// instance methods
	-[NSString(Camera) cam_uppercaseStringWithPreferredLocale]
	-[NSString(Camera) cam_capitalizedStringWithPreferredLocale]

UIViewController(CAMCameraRollController)
	// instance methods
	-[UIViewController(CAMCameraRollController) cam_swizzled_supportedInterfaceOrientations]

AVMomentCaptureSettings(CAMCaptureEngine)
	// class methods
	+[AVMomentCaptureSettings(CAMCaptureEngine) cam_momentSettingsFromSettings:captureDevice:photoOutput:]

_UILegibilitySettingsProvider(CameraAdditions)
	// instance methods
	-[_UILegibilitySettingsProvider(CameraAdditions) cam_primeForUseWithCameraOverlays]

NSDictionary(KeyComparison)
	// instance methods
	-[NSDictionary(KeyComparison) cam_compareKey:withDictionary:]

UIFont(Camera)
	// class methods
	+[UIFont(Camera) cui_usesSFCamera]
	+[UIFont(Camera) cui_cameraModeDialFontForContentSize:]
	+[UIFont(Camera) cui_cameraKerningForFont:]
	+[UIFont(Camera) cui_cameraFontOfSize:]
	+[UIFont(Camera) cui_cameraMonospacedFontOfSize:]
	+[UIFont(Camera) cui_cameraTimerFontForContentSize:layoutStyle:]
	+[UIFont(Camera) cui_cameraFontForContentSize:]
	+[UIFont(Camera) cui_cameraModeDialFontForContentSize:weight:]
	+[UIFont(Camera) cui_cameraMonospacedFontOfSize:weight:]
	+[UIFont(Camera) cui_cameraFontOfSize:weight:]
	+[UIFont(Camera) cui_interpolatedAdditionalFontSizeForMainScreen]
	+[UIFont(Camera) cui_cameraModeDialFontSizeForContentSize:]
	+[UIFont(Camera) cui_cameraModeDialApproximateFontForContentSize:]
	+[UIFont(Camera) cui_cameraPadModeDialFontForContentSize:]

CMAttitude(CAMLevelViewModel)
	// instance methods
	-[CMAttitude(CAMLevelViewModel) cam_getDistanceFromFlat:relativeRoll:]

UIAlertController(Camera)
	// class methods
	+[UIAlertController(Camera) cam_showUsageSettings]

	// instance methods
	-[UIAlertController(Camera) initWithTitle:message:]
	-[UIAlertController(Camera) initWithTitle:message:lowDiskSpaceAlertType:dismissActionHandler:resultActionHandler:]
	-[UIAlertController(Camera) initWithType:captureMode:dismissActionHandler:resultActionHandler:]

NSData(Camera)
	// class methods
	+[NSData(Camera) dataWithIOSurface:usedSize:]

UIView(CameraKit)
	// class methods
	+[UIView(CameraKit) cam_transformForInterfaceOrientation:]
	+[UIView(CameraKit) cam_ceilBounds:andRoundCenter:toViewScale:]
	+[UIView(CameraKit) cam_animateIfNeededWithDuration:animations:]
	+[UIView(CameraKit) cam_animateIfNeededWithDuration:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:]
	+[UIView(CameraKit) cam_setHiddenDefaultAnimationDuration]
	+[UIView(CameraKit) cam_convertRect:toCeiledBounds:andRoundedCenter:toViewScale:]
	+[UIView(CameraKit) cam_animateIfNeededWithDuration:options:animations:completion:]
	+[UIView(CameraKit) cam_animateIfNeededWithDuration:animations:completion:]

	// instance methods
	-[UIView(CameraKit) cam_setGeometry:]
	-[UIView(CameraKit) cam_geometry]
	-[UIView(CameraKit) cam_rotateWithInterfaceOrientation:animated:]
	-[UIView(CameraKit) cam_ensureSubview:]
	-[UIView(CameraKit) cam_setHidden:animationDuration:]
	-[UIView(CameraKit) cam_isPoint:withinBoundsWithPadding:checkVisibility:recursive:]
	-[UIView(CameraKit) cam_setCenterAndBoundsForFrame:]
	-[UIView(CameraKit) cam_removeAnimationsForKeys:setToCurrentPresentationValues:]
	-[UIView(CameraKit) cam_setHidden:animated:]
	-[UIView(CameraKit) cam_isHidden]
	-[UIView(CameraKit) cam_setHidden:animationDuration:delay:completion:]
	-[UIView(CameraKit) cam_setHidden:totalAnimationTime:normalizedFadeoutDuration:]
	-[UIView(CameraKit) cam_removeAllAnimationsRecursively:shouldLog:]
	-[UIView(CameraKit) cam_setHidden:animationDuration:delay:]
	-[UIView(CameraKit) cam_removeAnimationForKey:setToCurrentPresentationValue:]
	-[UIView(CameraKit) cam_removeAllAnimationsOnLayer:recursively:shouldLog:]
	-[UIView(CameraKit) cam_setBorderColor:width:]
	-[UIView(CameraKit) cam_isOnScreen:]
	-[UIView(CameraKit) cam_isPoint:withinBoundsWithPadding:]
	-[UIView(CameraKit) cam_setBorder]
	-[UIView(CameraKit) cam_setBorderColor:]

CEKApertureButton(Camera)
	// instance methods
	-[CEKApertureButton(Camera) imageForAccessibilityHUD]

CLLocation(VideoMetadata)
	// instance methods
	-[CLLocation(VideoMetadata) cam_videoMetadataRepresentation]

UILongPressGestureRecognizer(Camera)
	// instance methods
	-[UILongPressGestureRecognizer(Camera) cam_isHoldingLongPress]

UIApplication(Camera)
	// instance methods
	-[UIApplication(Camera) cam_currentInterfaceOrientation]
	-[UIApplication(Camera) cam_applicationState]
	-[UIApplication(Camera) cam_isSuspended]

AVCaptureOutput(CAMCaptureEngine)
	// instance methods
	-[AVCaptureOutput(CAMCaptureEngine) currentRequest]

UIDevice(CAMLayoutStyle)
	// instance methods
	-[UIDevice(CAMLayoutStyle) cam_initialLayoutStyle]

AVCaptureDeviceFormat(CAMCaptureEngine)
	// instance methods
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsPanoramaConfiguration:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_frameDurationForVideoConfiguration:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsFrameDuration:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsVideoConfiguration:colorSpace:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_compareUsingQuality:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsPortraitFrontFacingZoomed]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_frameRateForVideoConfiguration:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) _expectedVideoDimensionsForVideoConfiguration:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsFrameRate:width:height:colorSpace:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_supportsFrameRate:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_compareUsingBinning:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_compareUsingMaximumFramerate:]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_maximumFrameRate]
	-[AVCaptureDeviceFormat(CAMCaptureEngine) cam_compareUsingDimensions:]

UIButton(Camera)
	// instance methods
	-[UIButton(Camera) hudItemForAccessibilityHUDManager:]
	-[UIButton(Camera) selectedByAccessibilityHUDManager:]

AVCapturePhotoSettings(CAMCaptureEngine)
	// class methods
	+[AVCapturePhotoSettings(CAMCaptureEngine) cam_settingsWithMomentSettings:request:]
	+[AVCapturePhotoSettings(CAMCaptureEngine) cam_settingsWithRequest:]

	// instance methods
	-[AVCapturePhotoSettings(CAMCaptureEngine) _configureForRequest:shouldIgnoreInitiationSettingsProperties:]

NSURL(CAMURLUtilities)
	// instance methods
	-[NSURL(CAMURLUtilities) configurationRequest]
	-[NSURL(CAMURLUtilities) isConfigurationURL]
	-[NSURL(CAMURLUtilities) _caseSensitiveQueryKeysAndValues]

AVCaptureSession(CAMCaptureEngine)
	// instance methods
	-[AVCaptureSession(CAMCaptureEngine) cam_removeInputs:]
	-[AVCaptureSession(CAMCaptureEngine) cam_ensureInputs:]
	-[AVCaptureSession(CAMCaptureEngine) cam_ensureOutputs:whileRemoving:]
	-[AVCaptureSession(CAMCaptureEngine) cam_ensureInputs:exclusively:]
	-[AVCaptureSession(CAMCaptureEngine) cam_hasAddedInput:]
	-[AVCaptureSession(CAMCaptureEngine) cam_removeAllInputs]
	-[AVCaptureSession(CAMCaptureEngine) cam_hasAddedOutput:]
	-[AVCaptureSession(CAMCaptureEngine) cam_ensureOutputs:exclusively:]
	-[AVCaptureSession(CAMCaptureEngine) cam_removeAllOutputs]

AVCaptureResolvedPhotoSettings(CAMCaptureEngine)
	// instance methods
	-[AVCaptureResolvedPhotoSettings(CAMCaptureEngine) cam_isRecordingMovieForLivePhoto]

01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriter 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetWriterInputPixelBufferAdaptor 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureConnection 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceFormat 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureInput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMovieFileOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoSettings 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureResolvedPhotoSettings 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoThumbnailOutput 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataFaceObject 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataMachineReadableCodeObject 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMomentCaptureMovieRecordingSettings 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMomentCaptureSettings 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableVideoComposition 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOfflineVideoStabilizer 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputSettingsAssistant 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVSpatialOverCaptureVideoPreviewLayer 
01 00 1900 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 1400 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAccelerometer 
01 00 1500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSApplicationStateMonitor 
01 00 1500 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSHIDEventDeferringToken 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMeshTransform 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAReplicatorLayer 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 1000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKApertureButton 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKApertureSlider 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKBadgeTextView 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKBadgeView 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKDiscreteSlider 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingControl 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingEffectManager 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKLightingNameBadge 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKSlider 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKWheelScrubberView 
01 00 0400 /System/Library/PrivateFrameworks/CameraEditKit.framework/CameraEditKit: CEKWheelScrubberViewCell 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIBurstImageSet 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIQRCodeDescriptor 
01 00 1100 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 1a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMAttitude 
01 00 0b00 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMAVMetadataUtilities 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMAssetFormats 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMDirectoryUtilities 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMImageWellUtilities 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMImageWriter 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: DCIMLocationUtilities 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0500 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurementFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: NSShadow 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFAssetAdjustments 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFCameraAdjustmentsSerialization 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFCameraMetadataSerialization 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFMediaCapabilities 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFMutableCameraAdjustments 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAVObjectBuilder 
01 00 0700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAdjustments 
01 00 1b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLAssetsdClient 
01 00 1b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLDiskController 
01 00 1b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLFileSystemPersistence 
01 00 1600 /System/Library/PrivateFrameworks/DCIMServices.framework/DCIMServices: PLIOSurfaceData 
01 00 1b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLUUIDString 
01 00 0300 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSHardwareButtonService 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityHUDItem 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutIcon 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationShortcutItem 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImagePickerController 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UISlider 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarHideAnimationParameters 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 1700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 1700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 1700 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIButtonFeedbackGenerator 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIButtonFeedbackGeneratorConfiguration 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIDiscreteFeedback 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGenerator 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGeneratorConfiguration 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettingsProvider 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityView 
01 00 1200 /System/Library/Frameworks/UIKit.framework/UIKit: _UISelectionFeedbackGeneratorConfiguration 
