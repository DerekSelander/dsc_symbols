|| __DATA.__objc_data _OBJC_CLASS_$_TKAdaptiveImageAPI
|| __DATA.__objc_data _OBJC_CLASS_$_TKApplication
|| __DATA.__objc_data _OBJC_CLASS_$_TKApplicationViewController
|| __DATA.__objc_data _OBJC_CLASS_$_TKMessagesExtensionViewController
|| __DATA.__objc_data _OBJC_CLASS_$_TKNetwork
|| __DATA.__objc_data _OBJC_METACLASS_$_TKAdaptiveImageAPI
|| __DATA.__objc_data _OBJC_METACLASS_$_TKApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_TKApplicationViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_TKMessagesExtensionViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_TKNetwork
|| __TEXT.__const _TKAdaptiveImageFullCrop
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileModificationDate
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileSize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLSessionDownloadTaskResumeData
__ Foundation: _NSURLSessionTaskPriorityDefault
__ Foundation: _NSURLSessionTaskPriorityHigh
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCachedURLResponse
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPCookieStorage
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSURLSessionDownloadTask
__ JavaScriptCore: _JSPropertyDescriptorGetKey
__ JavaScriptCore: _JSPropertyDescriptorSetKey
__ JavaScriptCore: _JSPropertyDescriptorValueKey
__ JavaScriptCore: _JSPropertyDescriptorWritableKey
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ Messages: _OBJC_CLASS_$_MSMessagesAppViewController
__ Messages: _OBJC_METACLASS_$_MSMessagesAppViewController
__ Security: _SecTaskCopySigningIdentifier
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ TouchML: _OBJC_CLASS_$_TMLContext
__ TouchML: _OBJC_CLASS_$_TMLExceptionHandler
__ TouchML: _OBJC_CLASS_$_TMLJSONObject
__ TouchML: _OBJC_CLASS_$_TMLJSONSchema
__ TouchML: _OBJC_CLASS_$_TMLObjectFinalizer
__ TouchML: _OBJC_CLASS_$_TMLWeakReferenceObject
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISplitViewController
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITabBarController
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UITextView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityIsSwitchControlRunning
__ UIKit: _UIAccessibilityIsVoiceOverRunning
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIRectClip
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___memset_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _feof
__ libSystem.B.dylib: _ferror
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fread
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fseek
__ libSystem.B.dylib: _ftell
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mktime
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _srand
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strptime_l
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _time
__ libcompression.dylib: _compression_stream_destroy
__ libcompression.dylib: _compression_stream_init
__ libcompression.dylib: _compression_stream_process
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libz.1.dylib: _crc32
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _get_crc_table
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
TKNetwork : NSObject
 @property  double timeoutInterval

  // class methods
  +[TKNetwork setShared:]
  +[TKNetwork shared]

  // instance methods
  -[TKNetwork timeoutInterval]
  -[TKNetwork loadRequest:priority:completion:]
  -[TKNetwork downloadRequest:priority:completion:]
  -[TKNetwork downloadImage:priority:completion:]
  -[TKNetwork updateNetworkActivity:]


TKNetworkDefaultTask : NSObject <TKNetworkTask>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TKNetworkDefaultTask initWithTask:]
  -[TKNetworkDefaultTask .cxx_destruct]
  -[TKNetworkDefaultTask cancel]


TKErrorViewController : UIViewController
 @property  NSString *message

  // class methods
  +[TKErrorViewController viewControllerForMessage:]

  // instance methods
  -[TKErrorViewController setMessage:]
  -[TKErrorViewController .cxx_destruct]
  -[TKErrorViewController viewDidLoad]
  -[TKErrorViewController loadView]
  -[TKErrorViewController message]


MCLURLRewriteRule : MCLURLRequestRewriteRule
  // class methods
  +[MCLURLRewriteRule urlRewriteRuleFromHost:toHost:ignoreHosts:]

  // instance methods
  -[MCLURLRewriteRule .cxx_destruct]
  -[MCLURLRewriteRule initWithMatchPattern:replacePattern:replaceTemplate:ignoreHosts:]
  -[MCLURLRewriteRule rewriteURLRequest:]


JITAppKit_TMLModule : NSObject <TMLModule>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[JITAppKit_TMLModule initializeJSContext:]
  +[JITAppKit_TMLModule loadModule]


TKApplicationViewController : UIViewController
 @property  UIViewController *childViewController
 @property  NSURL *bundleURL
 @property  NSString *viewName
 @property  UIViewController *loadingViewController
 @property  <TKApplicationViewControllerDelegate> *delegate

  // class methods
  +[TKApplicationViewController applicationViewController:]

  // instance methods
  -[TKApplicationViewController setDelegate:]
  -[TKApplicationViewController bundleURL]
  -[TKApplicationViewController delegate]
  -[TKApplicationViewController .cxx_destruct]
  -[TKApplicationViewController viewDidLoad]
  -[TKApplicationViewController viewName]
  -[TKApplicationViewController childViewController]
  -[TKApplicationViewController setChildViewController:]
  -[TKApplicationViewController loadingViewController]
  -[TKApplicationViewController setLoadingViewController:]
  -[TKApplicationViewController initWithBundleURL:loadPage:]
  -[TKApplicationViewController initWithBundleURL:loadPage:withData:]
  -[TKApplicationViewController initWithBundleURL:loadPage:withDataRequest:]
  -[TKApplicationViewController initWithBundleURL:viewName:delegate:]
  -[TKApplicationViewController handleApplicationControllerError]
  -[TKApplicationViewController didLoadViewController:]
  -[TKApplicationViewController dismissApplicationControllerAnimated:]


TKUtils : NSObject
  // class methods
  +[TKUtils decompressData:algorithm:]
  +[TKUtils decompressFile:toDestinationPath:algorithm:]
  +[TKUtils decompressData:algorithm:operation:]
  +[TKUtils applicationLibraryPath]
  +[TKUtils uniqueKeyForURL:]
  +[TKUtils httpDataURLEncoded:]
  +[TKUtils URL:withQueryParameters:addKeys:removeKeys:escape:]
  +[TKUtils hexForColor:withAlpha:]


TKTableViewCellSubtitle : UITableViewCell
  // instance methods
  -[TKTableViewCellSubtitle initWithStyle:reuseIdentifier:]


TKDefaultImageServices : NSObject
  // class methods
  +[TKDefaultImageServices setup]


TKRepository : NSObject
 @property  NSString *version
 @property  NSURL *URL

  // class methods
  +[TKRepository reset]
  +[TKRepository _processBundleIdentifier]
  +[TKRepository _hasEntitlement:]
  +[TKRepository _isApprovedProcess]
  +[TKRepository loadWithURL:completion:]
  +[TKRepository bundlePathForURL:]
  +[TKRepository unpackBundleWithURL:destinationPath:completion:]

  // instance methods
  -[TKRepository .cxx_destruct]
  -[TKRepository version]
  -[TKRepository URL]
  -[TKRepository initWithURL:bundlePath:]
  -[TKRepository viewPathForName:]


MCLLabel : UILabel
  // instance methods
  -[MCLLabel layoutSubviews]


TKPage : NSObject
 @property  NSString *viewName
 @property  UIViewController *viewController
 @property  NSDictionary *data
 @property  NSURLRequest *dataRequest
 @property  BOOL dataLoading
 @property  BOOL shouldShowLoading

  // instance methods
  -[TKPage initWithViewName:]
  -[TKPage load]
  -[TKPage dealloc]
  -[TKPage .cxx_destruct]
  -[TKPage setData:]
  -[TKPage viewController]
  -[TKPage viewName]
  -[TKPage dispose]
  -[TKPage reload]
  -[TKPage data]
  -[TKPage loadRequest:]
  -[TKPage dataRequest]
  -[TKPage dataLoading]
  -[TKPage dataError]
  -[TKPage createViewController]
  -[TKPage loadData:postData:]
  -[TKPage reloadWithDelayedShowLoading:]
  -[TKPage didFinishLoading:data:responseError:]
  -[TKPage dataLoaded:withError:]
  -[TKPage didLoadData:]
  -[TKPage showLoadingViewController]
  -[TKPage hideLoadingViewController]
  -[TKPage setDataRequest:]
  -[TKPage shouldShowLoading]
  -[TKPage setShouldShowLoading:]


Main : NSObject
 @property  BOOL open
 @property  BOOL close

  // class methods
  +[Main unzipFileAtPath:toDestination:]
  +[Main unzipFileAtPath:toDestination:overwrite:password:error:]
  +[Main unzipFileAtPath:toDestination:delegate:]
  +[Main unzipFileAtPath:toDestination:overwrite:password:error:delegate:]
  +[Main unzipFileAtPath:toDestination:overwrite:password:progressHandler:completionHandler:]
  +[Main unzipFileAtPath:toDestination:progressHandler:completionHandler:]
  +[Main unzipFileAtPath:toDestination:overwrite:password:error:delegate:progressHandler:completionHandler:]
  +[Main createZipFileAtPath:withFilesAtPaths:]
  +[Main createZipFileAtPath:withContentsOfDirectory:]
  +[Main createZipFileAtPath:withContentsOfDirectory:keepParentDirectory:]
  +[Main dateWithMicrosoftDOSFormat:]

  // instance methods
  -[Main initWithPath:]
  -[Main close]
  -[Main .cxx_destruct]
  -[Main open]
  -[Main writeFile:]
  -[Main zipInformation:setDate:]
  -[Main writeFolderAtPath:withFolderName:]
  -[Main writeFileAtPath:withFileName:]
  -[Main writeData:fileName:]


MCLImageView : UIImageView
  // class methods
  +[MCLImageView bitmapImage:]

  // instance methods
  -[MCLImageView .cxx_destruct]
  -[MCLImageView setImage:]
  -[MCLImageView didMoveToWindow]
  -[MCLImageView setImageDelayed:]
  -[MCLImageView backgroundDecompressImage]


TKApplication : NSObject
 @property  TKRepository *repository
 @property  NSURL *baseURL
 @property  NSURL *bundleURL
 @property  NSString *bundleVersion
 @property  BOOL ready
 @property  <TKApplicationDelegate> *delegate

  // class methods
  +[TKApplication allocWithZone:]
  +[TKApplication shared]

  // instance methods
  -[TKApplication setBaseURL:]
  -[TKApplication bundleVersion]
  -[TKApplication ready]
  -[TKApplication setDelegate:]
  -[TKApplication bundleURL]
  -[TKApplication delegate]
  -[TKApplication baseURL]
  -[TKApplication .cxx_destruct]
  -[TKApplication repository]
  -[TKApplication copyWithZone:]
  -[TKApplication viewPathForName:]
  -[TKApplication newLoadingViewController]
  -[TKApplication newErrorViewController:]
  -[TKApplication loadBundle:completion:]
  -[TKApplication clearBundleCache]
  -[TKApplication didLoadRepository:]
  -[TKApplication loadPageWithDataRequest:]
  -[TKApplication loadPage:]
  -[TKApplication loadPage:withData:]
  -[TKApplication loadPage:withDataRequest:]
  -[TKApplication loadView:]
  -[TKApplication loadClass:]
  -[TKApplication absoluteURL:]


MCLViewControllerCollection : UIScrollView <UIScrollViewDelegate>
 @property  UIViewController *owner
 @property  double spacing
 @property  NSArray *views
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MCLViewControllerCollection views]
  -[MCLViewControllerCollection spacing]
  -[MCLViewControllerCollection owner]
  -[MCLViewControllerCollection setSpacing:]
  -[MCLViewControllerCollection setOwner:]
  -[MCLViewControllerCollection scrollViewDidScroll:]
  -[MCLViewControllerCollection .cxx_destruct]
  -[MCLViewControllerCollection layoutSubviews]
  -[MCLViewControllerCollection initWithFrame:]
  -[MCLViewControllerCollection setViews:]


TKAdaptiveResourceManager : NSObject
  // class methods
  +[TKAdaptiveResourceManager setup]
  +[TKAdaptiveResourceManager traitCollection]
  +[TKAdaptiveResourceManager addObject:]
  +[TKAdaptiveResourceManager size]
  +[TKAdaptiveResourceManager removeObject:]
  +[TKAdaptiveResourceManager setOverrideTrackingAdaptiveView:]
  +[TKAdaptiveResourceManager readableContentSize]
  +[TKAdaptiveResourceManager windowSizeDidChange:]
  +[TKAdaptiveResourceManager adaptiveMetricsDidChange]


MCLHTTPURLRequest : NSObject
 @property  unsigned long statusCode
 @property  NSError *error
 @property  NSData *data
 @property  NSURL *url
 @property  NSString *httpMethod
 @property  NSDictionary *httpHeaders
 @property  double timeout

  // instance methods
  -[MCLHTTPURLRequest statusCode]
  -[MCLHTTPURLRequest send]
  -[MCLHTTPURLRequest setUrl:]
  -[MCLHTTPURLRequest httpMethod]
  -[MCLHTTPURLRequest handleCompletion:]
  -[MCLHTTPURLRequest error]
  -[MCLHTTPURLRequest setTimeout:]
  -[MCLHTTPURLRequest httpHeaders]
  -[MCLHTTPURLRequest .cxx_destruct]
  -[MCLHTTPURLRequest setError:]
  -[MCLHTTPURLRequest timeout]
  -[MCLHTTPURLRequest setData:]
  -[MCLHTTPURLRequest setHttpHeaders:]
  -[MCLHTTPURLRequest url]
  -[MCLHTTPURLRequest setStatusCode:]
  -[MCLHTTPURLRequest setHttpMethod:]
  -[MCLHTTPURLRequest cancel]
  -[MCLHTTPURLRequest init]
  -[MCLHTTPURLRequest data]
  -[MCLHTTPURLRequest loadRequest:]
  -[MCLHTTPURLRequest sendData:]
  -[MCLHTTPURLRequest sendText:]


MCLURLRequestRewriteRule : NSObject
 @property  NSString *name
 @property  float priority
 @property  NSRegularExpression *matchPattern

  // class methods
  +[MCLURLRequestRewriteRule urlRequestRewriteRuleWithMatchPattern:block:]

  // instance methods
  -[MCLURLRequestRewriteRule setPriority:]
  -[MCLURLRequestRewriteRule .cxx_destruct]
  -[MCLURLRequestRewriteRule setName:]
  -[MCLURLRequestRewriteRule name]
  -[MCLURLRequestRewriteRule priority]
  -[MCLURLRequestRewriteRule initWithMatchExpression:block:]
  -[MCLURLRequestRewriteRule rewriteURLRequest:]
  -[MCLURLRequestRewriteRule matchPattern]


TKRemoteImage : TKAdaptiveImage
  // instance methods
  -[TKRemoteImage init]
  -[TKRemoteImage imageTraitForMetrics]


MCLTextView : UITextView
 @property  UILongPressGestureRecognizer *longPressGestureRecognizer
 @property  UITapGestureRecognizer *tapGestureRecognizer

  // instance methods
  -[MCLTextView setValue:forUndefinedKey:]
  -[MCLTextView longPressGestureRecognizer]
  -[MCLTextView .cxx_destruct]
  -[MCLTextView canPerformAction:withSender:]
  -[MCLTextView tapGestureRecognizer]
  -[MCLTextView initWithFrame:]
  -[MCLTextView onLongPress:]
  -[MCLTextView onTap:]


MCLVariantGroupView : UIView
 @property  Class buttonClass
 @property  long long buttonType
 @property  long long variantCount
 @property  long long variantsPerLine
 @property  BOOL actionVariant

  // instance methods
  -[MCLVariantGroupView reloadData]
  -[MCLVariantGroupView buttonType]
  -[MCLVariantGroupView .cxx_destruct]
  -[MCLVariantGroupView setButtonType:]
  -[MCLVariantGroupView initWithFrame:]
  -[MCLVariantGroupView actionVariant]
  -[MCLVariantGroupView setActionVariant:]
  -[MCLVariantGroupView clearVariants]
  -[MCLVariantGroupView selectVariant:]
  -[MCLVariantGroupView createVariantButton:type:]
  -[MCLVariantGroupView selectItemAtIndex:]
  -[MCLVariantGroupView buttonClass]
  -[MCLVariantGroupView setButtonClass:]
  -[MCLVariantGroupView variantCount]
  -[MCLVariantGroupView setVariantCount:]
  -[MCLVariantGroupView variantsPerLine]
  -[MCLVariantGroupView setVariantsPerLine:]


TKCloudKitWSRecord : NSObject
  // class methods
  +[TKCloudKitWSRecord downloadURLFromCloudKitRecordResponse:]


TKCloudKitFetch : NSObject
 @property  NSURL *downloadURL
 @property  NSMutableURLRequest *urlRequest
 @property  NSError *error
 @property  TMLJSONObject *response
 @property  BOOL active
 @property  BOOL cancelled

  // instance methods
  -[TKCloudKitFetch send]
  -[TKCloudKitFetch cancelled]
  -[TKCloudKitFetch active]
  -[TKCloudKitFetch error]
  -[TKCloudKitFetch dealloc]
  -[TKCloudKitFetch .cxx_destruct]
  -[TKCloudKitFetch downloadURL]
  -[TKCloudKitFetch setResponse:]
  -[TKCloudKitFetch setDownloadURL:]
  -[TKCloudKitFetch urlRequest]
  -[TKCloudKitFetch response]
  -[TKCloudKitFetch cancel]
  -[TKCloudKitFetch init]
  -[TKCloudKitFetch setUrlRequest:]
  -[TKCloudKitFetch tmlDispose]
  -[TKCloudKitFetch handleResponse:data:responseError:]
  -[TKCloudKitFetch downloadAssetFromCloudKit]
  -[TKCloudKitFetch handleDownloadResponse:error:]


TKKeyPathObservation : NSObject
 @property  NSObject *object
 @property  NSString *keyPath

  // instance methods
  -[TKKeyPathObservation .cxx_destruct]
  -[TKKeyPathObservation keyPath]
  -[TKKeyPathObservation object]
  -[TKKeyPathObservation setKeyPath:]
  -[TKKeyPathObservation setObject:]


TKKeyPathObserver : NSObject
  // instance methods
  -[TKKeyPathObserver stopObserving]
  -[TKKeyPathObserver dealloc]
  -[TKKeyPathObserver .cxx_destruct]
  -[TKKeyPathObserver observeValueForKeyPath:ofObject:change:context:]
  -[TKKeyPathObserver initWithBlock:]
  -[TKKeyPathObserver observe:keyPath:]


MCLURLDataLoaderTask : NSObject
 @property  NSString *category
 @property  NSURL *URL
 @property  NSURLRequest *originalRequest
 @property  NSURLRequest *request
 @property  NSHTTPURLResponse *response
 @property  NSString *targetPath
 @property  NSData *responseData
 @property  BOOL download
 @property  BOOL cancelled
 @property  BOOL responseOk
 @property  BOOL responseClientError
 @property  BOOL responseTimeout
 @property  BOOL cachedResponse
 @property  BOOL background
 @property  id userInfo
 @property  float progress
 @property  NSError *error
 @property  @? redirectHandler

  // instance methods
  -[MCLURLDataLoaderTask progress]
  -[MCLURLDataLoaderTask setCategory:]
  -[MCLURLDataLoaderTask download]
  -[MCLURLDataLoaderTask contentType]
  -[MCLURLDataLoaderTask cancelled]
  -[MCLURLDataLoaderTask completion]
  -[MCLURLDataLoaderTask setProgress:]
  -[MCLURLDataLoaderTask responseData]
  -[MCLURLDataLoaderTask originalRequest]
  -[MCLURLDataLoaderTask setCancelled:]
  -[MCLURLDataLoaderTask setResponseData:]
  -[MCLURLDataLoaderTask setRequest:]
  -[MCLURLDataLoaderTask setUserInfo:]
  -[MCLURLDataLoaderTask userInfo]
  -[MCLURLDataLoaderTask encodeWithCoder:]
  -[MCLURLDataLoaderTask error]
  -[MCLURLDataLoaderTask category]
  -[MCLURLDataLoaderTask .cxx_destruct]
  -[MCLURLDataLoaderTask setResponse:]
  -[MCLURLDataLoaderTask cachedResponse]
  -[MCLURLDataLoaderTask background]
  -[MCLURLDataLoaderTask response]
  -[MCLURLDataLoaderTask URL]
  -[MCLURLDataLoaderTask setCachedResponse:]
  -[MCLURLDataLoaderTask request]
  -[MCLURLDataLoaderTask initWithCoder:]
  -[MCLURLDataLoaderTask responseTimeout]
  -[MCLURLDataLoaderTask receiveDataHandler]
  -[MCLURLDataLoaderTask initWithURLRequest:targetPath:category:completionHandler:receiveData:]
  -[MCLURLDataLoaderTask responseOk]
  -[MCLURLDataLoaderTask responseClientError]
  -[MCLURLDataLoaderTask dispatchCompletion:]
  -[MCLURLDataLoaderTask applyMimeType]
  -[MCLURLDataLoaderTask applyFileExtension:]
  -[MCLURLDataLoaderTask targetPath]
  -[MCLURLDataLoaderTask redirectHandler]
  -[MCLURLDataLoaderTask setRedirectHandler:]


TKAdaptiveImage : TKAdaptiveResourceObject
 @property  NSURL *currentURL
 @property  unsigned long state
 @property  NSURL *url
 @property  NSString *priority
 @property  NSString *service
 @property  UIColor *backgroundColor
 @property  double quality
 @property  UIImage *image
 @property  BOOL loading

  // class methods
  +[TKAdaptiveImage zeroTrait]

  // instance methods
  -[TKAdaptiveImage setQuality:]
  -[TKAdaptiveImage setPriority:]
  -[TKAdaptiveImage quality]
  -[TKAdaptiveImage setUrl:]
  -[TKAdaptiveImage state]
  -[TKAdaptiveImage dealloc]
  -[TKAdaptiveImage setService:]
  -[TKAdaptiveImage traits]
  -[TKAdaptiveImage .cxx_destruct]
  -[TKAdaptiveImage stop]
  -[TKAdaptiveImage service]
  -[TKAdaptiveImage backgroundColor]
  -[TKAdaptiveImage image]
  -[TKAdaptiveImage setBackgroundColor:]
  -[TKAdaptiveImage priority]
  -[TKAdaptiveImage url]
  -[TKAdaptiveImage start]
  -[TKAdaptiveImage loading]
  -[TKAdaptiveImage init]
  -[TKAdaptiveImage setState:]
  -[TKAdaptiveImage currentURL]
  -[TKAdaptiveImage setCurrentURL:]
  -[TKAdaptiveImage adaptiveMetricsDidChange]
  -[TKAdaptiveImage imageTraitForMetrics]
  -[TKAdaptiveImage tmlDispose]
  -[TKAdaptiveImage loadWithTrait:]
  -[TKAdaptiveImage didLoadImage:state:]
  -[TKAdaptiveImage tmlObjectCompleted]
  -[TKAdaptiveImage url:withTrait:]


TKAdaptiveImage_Trait : NSObject
 @property  long long horizontalSizeClass
 @property  long long verticalSizeClass
 @property  BOOL useReadableWidth
 @property  {CGSize=dd} size
 @property  {CGSize=dd} relativeSize
 @property  {CGSize=dd} minSize
 @property  {CGSize=dd} maxSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} crop
 @property  NSURL *url
 @property  double quality

  // instance methods
  -[TKAdaptiveImage_Trait setQuality:]
  -[TKAdaptiveImage_Trait quality]
  -[TKAdaptiveImage_Trait setHorizontalSizeClass:]
  -[TKAdaptiveImage_Trait maxSize]
  -[TKAdaptiveImage_Trait setUrl:]
  -[TKAdaptiveImage_Trait setMinSize:]
  -[TKAdaptiveImage_Trait setMaxSize:]
  -[TKAdaptiveImage_Trait minSize]
  -[TKAdaptiveImage_Trait .cxx_destruct]
  -[TKAdaptiveImage_Trait size]
  -[TKAdaptiveImage_Trait verticalSizeClass]
  -[TKAdaptiveImage_Trait url]
  -[TKAdaptiveImage_Trait horizontalSizeClass]
  -[TKAdaptiveImage_Trait setSize:]
  -[TKAdaptiveImage_Trait setVerticalSizeClass:]
  -[TKAdaptiveImage_Trait init]
  -[TKAdaptiveImage_Trait crop]
  -[TKAdaptiveImage_Trait setCrop:]
  -[TKAdaptiveImage_Trait compatibleWithTrait:]
  -[TKAdaptiveImage_Trait useReadableWidth]
  -[TKAdaptiveImage_Trait setUseReadableWidth:]
  -[TKAdaptiveImage_Trait relativeSize]
  -[TKAdaptiveImage_Trait setRelativeSize:]


MCLNotificationCenterObserver : NSObject
 @property  NSString *notification
 @property  id object
 @property  BOOL enabled

  // instance methods
  -[MCLNotificationCenterObserver setNotification:]
  -[MCLNotificationCenterObserver setup]
  -[MCLNotificationCenterObserver notification]
  -[MCLNotificationCenterObserver dealloc]
  -[MCLNotificationCenterObserver .cxx_destruct]
  -[MCLNotificationCenterObserver setEnabled:]
  -[MCLNotificationCenterObserver object]
  -[MCLNotificationCenterObserver enabled]
  -[MCLNotificationCenterObserver setObject:]
  -[MCLNotificationCenterObserver init]
  -[MCLNotificationCenterObserver observeNotification:]


TKDefaultPage : TKPage
  // instance methods
  -[TKDefaultPage createViewController]
  -[TKDefaultPage dataLoaded:withError:]
  -[TKDefaultPage initWithDataRequest:]
  -[TKDefaultPage loadChildPage:withError:]


TKAdaptiveImageAPI : NSObject
  // class methods
  +[TKAdaptiveImageAPI registerService:handler:]
  +[TKAdaptiveImageAPI getService:]
  +[TKAdaptiveImageAPI defaultImageService]
  +[TKAdaptiveImageAPI setDefaultImageService:]


MCLRatingsView : UIView
 @property  double spacing
 @property  double value
 @property  UIImage *emptyImage
 @property  UIImage *fullImage
 @property  BOOL actionVariant

  // instance methods
  -[MCLRatingsView spacing]
  -[MCLRatingsView setSpacing:]
  -[MCLRatingsView updateConstraints]
  -[MCLRatingsView .cxx_destruct]
  -[MCLRatingsView emptyImage]
  -[MCLRatingsView drawRect:]
  -[MCLRatingsView setValue:]
  -[MCLRatingsView value]
  -[MCLRatingsView initWithFrame:]
  -[MCLRatingsView actionVariant]
  -[MCLRatingsView setActionVariant:]
  -[MCLRatingsView setEmptyImage:]
  -[MCLRatingsView setFullImage:]
  -[MCLRatingsView fullImage]


TKContainerViewController : UIViewController
 @property  UIViewController *childViewController

  // instance methods
  -[TKContainerViewController viewDidAppear:]
  -[TKContainerViewController dealloc]
  -[TKContainerViewController .cxx_destruct]
  -[TKContainerViewController viewDidLoad]
  -[TKContainerViewController viewWillAppear:]
  -[TKContainerViewController viewWillDisappear:]
  -[TKContainerViewController edgesForExtendedLayout]
  -[TKContainerViewController childViewController]
  -[TKContainerViewController setChildViewController:]
  -[TKContainerViewController observeChild]
  -[TKContainerViewController updateInternals:]


MCLContentSizingView : UIView
 @property  UIScrollView *contentView

  // instance methods
  -[MCLContentSizingView contentView]
  -[MCLContentSizingView .cxx_destruct]
  -[MCLContentSizingView setContentView:]
  -[MCLContentSizingView intrinsicContentSize]


MCLTextField : UITextField
  // instance methods
  -[MCLTextField setValue:forUndefinedKey:]
  -[MCLTextField leftViewRectForBounds:]
  -[MCLTextField rightViewRectForBounds:]
  -[MCLTextField clearButtonRectForBounds:]
  -[MCLTextField textRectForBounds:]
  -[MCLTextField placeholderRectForBounds:]
  -[MCLTextField editingRectForBounds:]
  -[MCLTextField canPerformAction:withSender:]
  -[MCLTextField borderRectForBounds:]


TKMessagesExtensionViewController : MSMessagesAppViewController
  // instance methods
  -[TKMessagesExtensionViewController willBecomeActiveWithConversation:]
  -[TKMessagesExtensionViewController didResignActiveWithConversation:]
  -[TKMessagesExtensionViewController didReceiveMessage:conversation:]
  -[TKMessagesExtensionViewController didStartSendingMessage:conversation:]
  -[TKMessagesExtensionViewController didCancelSendingMessage:conversation:]
  -[TKMessagesExtensionViewController willTransitionToPresentationStyle:]
  -[TKMessagesExtensionViewController didTransitionToPresentationStyle:]


MCLURLDataLoader : NSObject <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
 @property  NSSet *cacheLocations
 @property  NSOperationQueue *operationQueue
 @property  NSURLSession *session
 @property  NSHTTPCookieStorage *cookieStorage
 @property  NSURLCache *cache
 @property  NSArray *rewriteRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MCLURLDataLoader shared]
  +[MCLURLDataLoader dateFromRFC1123:]
  +[MCLURLDataLoader downloadData]
  +[MCLURLDataLoader uniqueKeyForURL:]
  +[MCLURLDataLoader fileExtensionForMimeType:]
  +[MCLURLDataLoader mimeTypeForFileExtension:]
  +[MCLURLDataLoader uniqueImageKeyForURL:]
  +[MCLURLDataLoader addSessionConfigurator:]
  +[MCLURLDataLoader removeFilesOlderThan:inDirectory:]
  +[MCLURLDataLoader restart:]
  +[MCLURLDataLoader task:equalsToTask:]
  +[MCLURLDataLoader applyDefaultRequestHeaders:]
  +[MCLURLDataLoader duplicateResponse:withContentLength:]
  +[MCLURLDataLoader isValidResumeData:]

  // instance methods
  -[MCLURLDataLoader URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[MCLURLDataLoader cancelTask:]
  -[MCLURLDataLoader URLSession:dataTask:didBecomeDownloadTask:]
  -[MCLURLDataLoader URLSession:task:didCompleteWithError:]
  -[MCLURLDataLoader session]
  -[MCLURLDataLoader URLSession:dataTask:didReceiveData:]
  -[MCLURLDataLoader URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[MCLURLDataLoader defaultSessionConfiguration]
  -[MCLURLDataLoader URLSession:dataTask:willCacheResponse:completionHandler:]
  -[MCLURLDataLoader operationQueue]
  -[MCLURLDataLoader suspend]
  -[MCLURLDataLoader URLSessionDidFinishEventsForBackgroundURLSession:]
  -[MCLURLDataLoader cache]
  -[MCLURLDataLoader cookieStorage]
  -[MCLURLDataLoader .cxx_destruct]
  -[MCLURLDataLoader resume]
  -[MCLURLDataLoader removeCachedResponseForRequest:]
  -[MCLURLDataLoader URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[MCLURLDataLoader URLSession:downloadTask:didFinishDownloadingToURL:]
  -[MCLURLDataLoader URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[MCLURLDataLoader dispose]
  -[MCLURLDataLoader URLSession:didBecomeInvalidWithError:]
  -[MCLURLDataLoader clearCache]
  -[MCLURLDataLoader flushCache]
  -[MCLURLDataLoader init]
  -[MCLURLDataLoader setCookie:]
  -[MCLURLDataLoader cookiesForURL:]
  -[MCLURLDataLoader _cachedResponseForRequest:]
  -[MCLURLDataLoader configureSession]
  -[MCLURLDataLoader applicationDidEnterBackgroundNotification:]
  -[MCLURLDataLoader applicationWillEnterForegroundNotification:]
  -[MCLURLDataLoader priorityForCategory:]
  -[MCLURLDataLoader findCookie:inDomain:secure:]
  -[MCLURLDataLoader findCookie:inDomain:secure:cookies:]
  -[MCLURLDataLoader findMatchingCookies:inDomain:secure:]
  -[MCLURLDataLoader allCookies]
  -[MCLURLDataLoader deleteCookie:inDomain:secure:]
  -[MCLURLDataLoader deleteCookiesMatchingPredicate:]
  -[MCLURLDataLoader enumerateCookies:inDomain:secure:withBlock:]
  -[MCLURLDataLoader enumerateCookies:secure:cookies:withBlock:]
  -[MCLURLDataLoader downloadImageFromURL:category:completionHandler:]
  -[MCLURLDataLoader downloadImageWithRequest:category:completionHandler:]
  -[MCLURLDataLoader imagesDownloadDirectory]
  -[MCLURLDataLoader applicationDidBecomeActiveNotification:]
  -[MCLURLDataLoader setupCache:]
  -[MCLURLDataLoader clearOldCaches:]
  -[MCLURLDataLoader backgroundClearOldCaches:]
  -[MCLURLDataLoader backgroundRemoveCachedResponseForRequest:]
  -[MCLURLDataLoader addCacheLocation:]
  -[MCLURLDataLoader rewriteRules]
  -[MCLURLDataLoader addRewriteRule:]
  -[MCLURLDataLoader removeRewriteRule:]
  -[MCLURLDataLoader removeRewriteRulesWithName:]
  -[MCLURLDataLoader removeRewriteRules:]
  -[MCLURLDataLoader removeAllRewriteRules]
  -[MCLURLDataLoader applyRewriteRules:]
  -[MCLURLDataLoader internalRestart:]
  -[MCLURLDataLoader notifyBackgroundStopped]
  -[MCLURLDataLoader notifyEmptyQueue]
  -[MCLURLDataLoader notifyEnqueue]
  -[MCLURLDataLoader setPriority:forCategory:]
  -[MCLURLDataLoader loadRequest:category:completionHandler:]
  -[MCLURLDataLoader loadRequest:category:completionHandler:receiveData:]
  -[MCLURLDataLoader loadURL:category:completionHandler:]
  -[MCLURLDataLoader downloadRequest:toPath:category:completionHandler:]
  -[MCLURLDataLoader downloadURL:toPath:category:completionHandler:]
  -[MCLURLDataLoader downloadRequest:category:completionHandler:]
  -[MCLURLDataLoader downloadURL:category:completionHandler:]
  -[MCLURLDataLoader cancelTasks:]
  -[MCLURLDataLoader setCategory:forTask:]
  -[MCLURLDataLoader setCategory:forTasks:]
  -[MCLURLDataLoader downloadCachesDirectory]
  -[MCLURLDataLoader cacheLocations]
  -[MCLURLDataLoader configureSession:]
  -[MCLURLDataLoader operationCancelTask:]
  -[MCLURLDataLoader enqueueTask:reschedule:]
  -[MCLURLDataLoader operationReschedule]
  -[MCLURLDataLoader operationSuspendSession]
  -[MCLURLDataLoader operationResumeSession]
  -[MCLURLDataLoader operationRestartSession]
  -[MCLURLDataLoader duplicateTasksForTask:]
  -[MCLURLDataLoader loaderTaskForSessionTask:]
  -[MCLURLDataLoader configuredURLRequestForTask:download:resumeData:]
  -[MCLURLDataLoader processURLRequestRewrite:]
  -[MCLURLDataLoader connectionsLimitForPriorityOfTask:]
  -[MCLURLDataLoader cachableFileAttributes:]
  -[MCLURLDataLoader task:completedWithError:]
  -[MCLURLDataLoader downloadCachedResponse:]
  -[MCLURLDataLoader updateDownloadCacheEntry:]
  -[MCLURLDataLoader storeResumeData:forTask:]
  -[MCLURLDataLoader _removeCachedResponseForRequest:]
  -[MCLURLDataLoader _removeCachedResponseForRequest:force:]


TKAdaptiveResourceObject : NSObject
  // instance methods
  -[TKAdaptiveResourceObject dealloc]
  -[TKAdaptiveResourceObject init]
  -[TKAdaptiveResourceObject adaptiveMetricsDidChange]
  -[TKAdaptiveResourceObject tmlDispose]


UIViewController(JITAppKit)
	// class methods
	+[UIViewController(JITAppKit) jitappkit:]

	// instance methods
	-[UIViewController(JITAppKit) identifier]
	-[UIViewController(JITAppKit) setIdentifier:]
	-[UIViewController(JITAppKit) tkPage]
	-[UIViewController(JITAppKit) setTkPage:]

UIView(JITAppKit)
	// class methods
	+[UIView(JITAppKit) jitappkit:]

01 00 0800 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 0700 /System/Library/Frameworks/Messages.framework/Messages: MSMessagesAppViewController 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCachedURLResponse 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookieStorage 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionDownloadTask 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLContext 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLExceptionHandler 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLJSONObject 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLJSONSchema 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLObjectFinalizer 
01 00 0100 /System/Library/PrivateFrameworks/TouchML.framework/TouchML: TMLWeakReferenceObject 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UISplitViewController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITabBarController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
