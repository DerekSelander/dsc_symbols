|| __DATA.__common _DefaultStocksOverride
|| __DATA.__common _SyncedStocksOverride
|| __DATA.__common ___shouldLog
|| __DATA.__common _testHarness
|| __DATA.__data _DefaultStocksCountryCode
|| __DATA.__data _StockExtensionShouldUpdateComplication
|| __DATA.__data _StockListDidChangeNotification
|| __DATA.__data _StockListDidSaveNotification
|| __DATA.__data _StockShortNameDidChangeNotification
|| __DATA.__data _StockShortNameDidChangeNotificationStockKey
|| __DATA.__data _StockWasAddedDarwinNotification
|| __DATA.__data _StockWasDeletedDarwinNotification
|| __DATA.__data _StockWasMovedDarwinNotification
|| __DATA.__data _StockWasMovedNotification
|| __DATA.__data _StockWillBeRemovedNotification
|| __DATA.__data _StocksWillSyncNotification
|| __DATA.__objc_data _OBJC_CLASS_$_ChartHUDView
|| __DATA.__objc_data _OBJC_CLASS_$_ChartIntervalButton
|| __DATA.__objc_data _OBJC_CLASS_$_ChartIntervalButtonRow
|| __DATA.__objc_data _OBJC_CLASS_$_ChartLabelInfo
|| __DATA.__objc_data _OBJC_CLASS_$_ChartLabelInfoManager
|| __DATA.__objc_data _OBJC_CLASS_$_ChartTitleLabel
|| __DATA.__objc_data _OBJC_CLASS_$_ChartUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_DashedLineView
|| __DATA.__objc_data _OBJC_CLASS_$_Exchange
|| __DATA.__objc_data _OBJC_CLASS_$_ExchangeManager
|| __DATA.__objc_data _OBJC_CLASS_$_GraphRenderOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GraphRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_HUDTouchInfo
|| __DATA.__objc_data _OBJC_CLASS_$_LabelSequenceView
|| __DATA.__objc_data _OBJC_CLASS_$_LineGraphView
|| __DATA.__objc_data _OBJC_CLASS_$_LoadingLabel
|| __DATA.__objc_data _OBJC_CLASS_$_NewsUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_PricePopoverBar
|| __DATA.__objc_data _OBJC_CLASS_$_SCKDatabaseMemoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_SCKFauxDatabaseStoreCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SCKStubContainer
|| __DATA.__objc_data _OBJC_CLASS_$_SCKTimedOperationThrottler
|| __DATA.__objc_data _OBJC_CLASS_$_SCKZoneMemoryStore
|| __DATA.__objc_data _OBJC_CLASS_$_SCWatchlistDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_SCWatchlistInlineDefaultsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SPChartView
|| __DATA.__objc_data _OBJC_CLASS_$_StockChartData
|| __DATA.__objc_data _OBJC_CLASS_$_StockChartDisplayMode
|| __DATA.__objc_data _OBJC_CLASS_$_StockChartView
|| __DATA.__objc_data _OBJC_CLASS_$_StockDataFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_StockDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_StockFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_StockGraphImageSet
|| __DATA.__objc_data _OBJC_CLASS_$_StockManager
|| __DATA.__objc_data _OBJC_CLASS_$_StockNewsItem
|| __DATA.__objc_data _OBJC_CLASS_$_StockNewsItemCollection
|| __DATA.__objc_data _OBJC_CLASS_$_StockPlatterViewController
|| __DATA.__objc_data _OBJC_CLASS_$_StockUpdateManager
|| __DATA.__objc_data _OBJC_CLASS_$_StockUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_StocksBundles
|| __DATA.__objc_data _OBJC_CLASS_$_StocksLayout
|| __DATA.__objc_data _OBJC_CLASS_$_StocksListBoxView
|| __DATA.__objc_data _OBJC_CLASS_$_StocksListTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_StocksLogging
|| __DATA.__objc_data _OBJC_CLASS_$_StocksOpenURLHelper
|| __DATA.__objc_data _OBJC_CLASS_$_StocksStyle
|| __DATA.__objc_data _OBJC_CLASS_$_StocksTapDragGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_StocksUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_StringDrawingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_SymbolValidator
|| __DATA.__objc_data _OBJC_CLASS_$_TintedView
|| __DATA.__objc_data _OBJC_CLASS_$_VolumeGraphView
|| __DATA.__objc_data _OBJC_CLASS_$_YQLConstants
|| __DATA.__objc_data _OBJC_CLASS_$_YQLRequest
|| __DATA.__objc_data _OBJC_CLASS_$_YahooDoppelganger
|| __DATA.__objc_data _OBJC_CLASS_$_YahooResponseParser
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartHUDView
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartIntervalButton
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartIntervalButtonRow
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartLabelInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartLabelInfoManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartTitleLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_ChartUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_DashedLineView
|| __DATA.__objc_data _OBJC_METACLASS_$_Exchange
|| __DATA.__objc_data _OBJC_METACLASS_$_ExchangeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_GraphRenderOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GraphRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_HUDTouchInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_LabelSequenceView
|| __DATA.__objc_data _OBJC_METACLASS_$_LineGraphView
|| __DATA.__objc_data _OBJC_METACLASS_$_LoadingLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_NewsUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_PricePopoverBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SCKDatabaseMemoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SCKFauxDatabaseStoreCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SCKStubContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_SCKTimedOperationThrottler
|| __DATA.__objc_data _OBJC_METACLASS_$_SCKZoneMemoryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_SCWatchlistDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_SCWatchlistInlineDefaultsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SPChartView
|| __DATA.__objc_data _OBJC_METACLASS_$_StockChartData
|| __DATA.__objc_data _OBJC_METACLASS_$_StockChartDisplayMode
|| __DATA.__objc_data _OBJC_METACLASS_$_StockChartView
|| __DATA.__objc_data _OBJC_METACLASS_$_StockDataFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_StockDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_StockFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_StockGraphImageSet
|| __DATA.__objc_data _OBJC_METACLASS_$_StockManager
|| __DATA.__objc_data _OBJC_METACLASS_$_StockNewsItem
|| __DATA.__objc_data _OBJC_METACLASS_$_StockNewsItemCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_StockPlatterViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_StockUpdateManager
|| __DATA.__objc_data _OBJC_METACLASS_$_StockUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksBundles
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksLayout
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksListBoxView
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksListTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksLogging
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksOpenURLHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksTapDragGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_StocksUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_StringDrawingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_SymbolValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_TintedView
|| __DATA.__objc_data _OBJC_METACLASS_$_VolumeGraphView
|| __DATA.__objc_data _OBJC_METACLASS_$_YQLConstants
|| __DATA.__objc_data _OBJC_METACLASS_$_YQLRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_YahooDoppelganger
|| __DATA.__objc_data _OBJC_METACLASS_$_YahooResponseParser
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._centeredLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._forceTouchUpdate
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._inactiveTouchInfoSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._interval
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._leftDateLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._rightDateLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartHUDView._touchInfoSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartTitleLabel._deferredStock
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartTitleLabel._leftView
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartTitleLabel._rightView
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartTitleLabel._stock
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartTitleLabel._width
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartUpdater._currentChartData
|| __DATA.__objc_ivar _OBJC_IVAR_$_ChartUpdater._stock
|| __DATA.__objc_ivar _OBJC_IVAR_$_GraphRenderer._cancelled
|| __DATA.__objc_ivar _OBJC_IVAR_$_GraphRenderer._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_LabelSequenceView._stringDrawingInfoValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_LineGraphView._lineImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_LineGraphView._showingTintedLine
|| __DATA.__objc_ivar _OBJC_IVAR_$_LineGraphView._tintedLineClipView
|| __DATA.__objc_ivar _OBJC_IVAR_$_LineGraphView._tintedLineView
|| __DATA.__objc_ivar _OBJC_IVAR_$_LoadingLabel._activityIndicator
|| __DATA.__objc_ivar _OBJC_IVAR_$_LoadingLabel._label
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._acceptLanguageCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._buildVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._isNetworkReachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._productVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._requestCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._requestLanguageCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_NetPreferences._serviceDebugging
|| __DATA.__objc_ivar _OBJC_IVAR_$_NewsUpdater._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_NewsUpdater._firstLoad
|| __DATA.__objc_ivar _OBJC_IVAR_$_NewsUpdater._lastNewsItemCollection
|| __DATA.__objc_ivar _OBJC_IVAR_$_NewsUpdater._lastResponseTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_NewsUpdater._stock
|| __DATA.__objc_ivar _OBJC_IVAR_$_PricePopoverBar._backgroundImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PricePopoverBar._percentChangeLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_PricePopoverBar._percentChangeSignView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PricePopoverBar._priceChangeSignView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PricePopoverBar._priceLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_SPChartView._selectedInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_Stock._chartDataArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._HUDView
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._animating
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._axisViews
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._chartUpdater
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._intervalButtonRow
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._layoutPending
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._loadingLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._previousCloseLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._previousCloseLine
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._stock
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._titleView
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._xLabelViews
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockChartView._yLabelViews
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockGraphImageSet._highlightOverlayImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockGraphImageSet._lineGraphImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockGraphImageSet._volumeGraphImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._chartDataLRUCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._defaultListStockSymbols
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._lastModifiedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._needRemoteAddNotification
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._needRemoteDeleteNotification
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._needRemoteMoveNotification
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._shouldPostSyncNotifications
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._stocksList
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockManager._syncedKVStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._date
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._headline
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._link
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._localizedDateString
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItem._summary
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItemCollection._expirationTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockNewsItemCollection._newsItems
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockUpdateManager._postingRemoteUpdateNotification
|| __DATA.__objc_ivar _OBJC_IVAR_$_StockUpdater._lastError
|| __DATA.__objc_ivar _OBJC_IVAR_$_StocksPreferences._changeColorSwapped
|| __DATA.__objc_ivar _OBJC_IVAR_$_StocksPreferences._textDirection
|| __DATA.__objc_ivar _OBJC_IVAR_$_YQLRequest._dataTask
|| __DATA.__objc_ivar _OBJC_IVAR_$_YQLRequest._defaultSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_YQLRequest._rawData
|| __DATA.__objc_ivar _OBJC_IVAR_$_YQLRequest._request
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._cancelled
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._dataTask
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._expectedRequestPattern
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._response
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._responseChunkDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._responseChunkInitialDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._responseChunkSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._responseOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_YahooDoppelganger._session
|| __DATA_CONST.__const _ExchangeLastCloseDateKey
|| __DATA_CONST.__const _ExchangeLastUpdateTimeKey
|| __DATA_CONST.__const _ExchangeNameKey
|| __DATA_CONST.__const _ExchangeNextOpenDateKey
|| __DATA_CONST.__const _ExchangeStatusKey
|| __DATA_CONST.__const _ExchangeStreamIntervalKey
|| __DATA_CONST.__const _ExchangeWasAddedNotification
|| __DATA_CONST.__const _ExchangeWillBeRemovedNotification
|| __DATA_CONST.__const _PrefsGroupId
|| __DATA_CONST.__const _RowDataTypeKey
|| __DATA_CONST.__const _SCKDatabaseLastDirtyDateKey
|| __DATA_CONST.__const _SCKDatabaseLastSyncDateKey
|| __DATA_CONST.__const _SCKDatabaseServerChangeTokenKey
|| __DATA_CONST.__const _SCKDatabaseZonesKey
|| __DATA_CONST.__const _SCKErrorDomain
|| __DATA_CONST.__const _SCKRootDatabaseKey
|| __DATA_CONST.__const _SCKZoneLastDirtyDateKey
|| __DATA_CONST.__const _SCKZoneLastSyncDateKey
|| __DATA_CONST.__const _SCKZoneNameKey
|| __DATA_CONST.__const _SCKZonePendingCommandsKey
|| __DATA_CONST.__const _SCKZoneServerChangeTokenKey
|| __DATA_CONST.__const _SCKZoneServerRecordsKey
|| __DATA_CONST.__const _SCWatchlistRecordName
|| __DATA_CONST.__const _SCWatchlistRecordType
|| __DATA_CONST.__const _SCWatchlistSymbolsKey
|| __DATA_CONST.__const _SCWatchlistZoneName
|| __DATA_CONST.__const _SelectedChartIntervalDefaultsKey
|| __DATA_CONST.__const _ShowsPercentKey
|| __DATA_CONST.__const _StockAverageVolumeKey
|| __DATA_CONST.__const _StockChangeKey
|| __DATA_CONST.__const _StockCompanyNameKey
|| __DATA_CONST.__const _StockCurrencyKey
|| __DATA_CONST.__const _StockDataSourceIDKey
|| __DATA_CONST.__const _StockDataSourceKey
|| __DATA_CONST.__const _StockDataSourceNameKey
|| __DATA_CONST.__const _StockDataSourceTextKey
|| __DATA_CONST.__const _StockDividendYieldKey
|| __DATA_CONST.__const _StockExchangeNameKey
|| __DATA_CONST.__const _StockHighPriceKey
|| __DATA_CONST.__const _StockInfoURLKey
|| __DATA_CONST.__const _StockLastMetadataUpdateTimeKey
|| __DATA_CONST.__const _StockLastUpdateTimeKey
|| __DATA_CONST.__const _StockLowPriceKey
|| __DATA_CONST.__const _StockMarketCapKey
|| __DATA_CONST.__const _StockOpenPriceKey
|| __DATA_CONST.__const _StockPERatioKey
|| __DATA_CONST.__const _StockPriceKey
|| __DATA_CONST.__const _StockSchemeKey
|| __DATA_CONST.__const _StockShortCompanyNameKey
|| __DATA_CONST.__const _StockSymbolKey
|| __DATA_CONST.__const _StockSymbolTypeKey
|| __DATA_CONST.__const _StockSymbolURLKey
|| __DATA_CONST.__const _StockVolumeKey
|| __DATA_CONST.__const _StockYearHighKey
|| __DATA_CONST.__const _StockYearLowKey
|| __DATA_CONST.__const _StocksDidReloadFromDefaultsNotification
|| __DATA_CONST.__const _StocksErrorDomain
|| __DATA_CONST.__const _StocksUpdateLoadingStatusNotification
|| __DATA_CONST.__const _YQLAfterHoursChangeResponseKey
|| __DATA_CONST.__const _YQLAfterHoursPriceResponseKey
|| __DATA_CONST.__const _YQLAfterHoursTimestampResponseKey
|| __DATA_CONST.__const _YQLAverageVolumeResponseKey
|| __DATA_CONST.__const _YQLBasicDataPath
|| __DATA_CONST.__const _YQLChangeResponseKey
|| __DATA_CONST.__const _YQLCompanyNameResponseKey
|| __DATA_CONST.__const _YQLCurrencyResponseKey
|| __DATA_CONST.__const _YQLDataSourceIDKey
|| __DATA_CONST.__const _YQLDataSourceNameKey
|| __DATA_CONST.__const _YQLDataSourceTextKey
|| __DATA_CONST.__const _YQLDataSourceTypeDelayedQuote
|| __DATA_CONST.__const _YQLDataSourceTypeRealtimeQuote
|| __DATA_CONST.__const _YQLDividendYieldResponseKey
|| __DATA_CONST.__const _YQLExchangeNameKey
|| __DATA_CONST.__const _YQLExchangeNextOpenKey
|| __DATA_CONST.__const _YQLExchangeStatusAfterAfterHours
|| __DATA_CONST.__const _YQLExchangeStatusAfterHours
|| __DATA_CONST.__const _YQLExchangeStatusChangeDataReset
|| __DATA_CONST.__const _YQLExchangeStatusClosed
|| __DATA_CONST.__const _YQLExchangeStatusExtendedHoursMarket
|| __DATA_CONST.__const _YQLExchangeStatusHolidayClosed
|| __DATA_CONST.__const _YQLExchangeStatusKey
|| __DATA_CONST.__const _YQLExchangeStatusPreMarket
|| __DATA_CONST.__const _YQLExchangeStatusPrePreMarketHours
|| __DATA_CONST.__const _YQLExchangeStatusRegularMarket
|| __DATA_CONST.__const _YQLExchangeStatusWeekendClosed
|| __DATA_CONST.__const _YQLExchangeStreamIntervalKey
|| __DATA_CONST.__const _YQLFormattedValueKey
|| __DATA_CONST.__const _YQLHighPriceResponseKey
|| __DATA_CONST.__const _YQLInfoURLResponseKey
|| __DATA_CONST.__const _YQLJSONCountKey
|| __DATA_CONST.__const _YQLJSONCreatedKey
|| __DATA_CONST.__const _YQLJSONDataSourcesKey
|| __DATA_CONST.__const _YQLJSONExchangesKey
|| __DATA_CONST.__const _YQLJSONFinanceKey
|| __DATA_CONST.__const _YQLJSONItemKey
|| __DATA_CONST.__const _YQLJSONLanguageKey
|| __DATA_CONST.__const _YQLJSONQueryKey
|| __DATA_CONST.__const _YQLJSONQuotesKey
|| __DATA_CONST.__const _YQLJSONResponseKey
|| __DATA_CONST.__const _YQLJSONResultsKey
|| __DATA_CONST.__const _YQLJSONStartKey
|| __DATA_CONST.__const _YQLJSONTotalKey
|| __DATA_CONST.__const _YQLLowPriceResponseKey
|| __DATA_CONST.__const _YQLMarketCapResponseKey
|| __DATA_CONST.__const _YQLMetadataPath
|| __DATA_CONST.__const _YQLNewsHeadlineKey
|| __DATA_CONST.__const _YQLNewsHostedKey
|| __DATA_CONST.__const _YQLNewsItemKey
|| __DATA_CONST.__const _YQLNewsItemsKey
|| __DATA_CONST.__const _YQLNewsMetaKey
|| __DATA_CONST.__const _YQLNewsProviderKey
|| __DATA_CONST.__const _YQLNewsProviderNameKey
|| __DATA_CONST.__const _YQLNewsPublishTimeKey
|| __DATA_CONST.__const _YQLNewsRelatedFinancialInstrumentKey
|| __DATA_CONST.__const _YQLNewsRelatedFinancialInstrumentSymbolKey
|| __DATA_CONST.__const _YQLNewsResponseKey
|| __DATA_CONST.__const _YQLNewsServiceResponseKey
|| __DATA_CONST.__const _YQLNewsShortSummaryKey
|| __DATA_CONST.__const _YQLNewsTitleKey
|| __DATA_CONST.__const _YQLNewsURLKey
|| __DATA_CONST.__const _YQLOpenPriceResponseKey
|| __DATA_CONST.__const _YQLPERatioResponseKey
|| __DATA_CONST.__const _YQLPriceResponseKey
|| __DATA_CONST.__const _YQLQuoteResponseKey
|| __DATA_CONST.__const _YQLRawValueKey
|| __DATA_CONST.__const _YQLShortCompanyNameResponseKey
|| __DATA_CONST.__const _YQLStockDataSourceResponseKey
|| __DATA_CONST.__const _YQLStockExchangeResponseKey
|| __DATA_CONST.__const _YQLStockQuoteResponseKey
|| __DATA_CONST.__const _YQLSymbolResponseKey
|| __DATA_CONST.__const _YQLSymbolTypeResponseKey
|| __DATA_CONST.__const _YQLTickersKey
|| __DATA_CONST.__const _YQLValueDataSourceKey
|| __DATA_CONST.__const _YQLVolumeResponseKey
|| __DATA_CONST.__const _YQLYearHighResponseKey
|| __DATA_CONST.__const _YQLYearLowResponseKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NetPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKAsyncBlockOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKAsyncSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKDatabaseJSONStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKDatabasePollingCondition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKOperationThrottler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKRecordFieldSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKRecordSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKStartupQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZoneDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZoneJSONStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZoneModificationSilo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZoneSchema
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCKZoneSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchedStock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlist
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistAddDefaultSymbolsCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistAddSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistAddSymbolsCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistMergeHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistRemoveSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistReorderSymbol2Command
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistReorderSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SCWatchlistReplaceSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_Stock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StockGraphView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_StocksPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NetPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKAsyncBlockOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKAsyncSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKDatabaseJSONStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKDatabasePollingCondition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKDatabaseSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKOperationThrottler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKRecordFieldSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKRecordSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKStartupQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZoneDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZoneJSONStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZoneModificationSilo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZoneSchema
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCKZoneSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchedStock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlist
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistAddDefaultSymbolsCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistAddSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistAddSymbolsCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistMergeHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistRemoveSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistReorderSymbol2Command
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistReorderSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SCWatchlistReplaceSymbolCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_Stock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StockGraphView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_StocksPreferences
|| __TEXT.__const _kStatusBarHeight
|| __TEXT.__const _kStocksCellHeight
|| __TEXT.__text _CeilToPixel
|| __TEXT.__text _ClientInfo
|| __TEXT.__text _CreateCredential
|| __TEXT.__text _DeviceInfo
|| __TEXT.__text _FloorToPixel
|| __TEXT.__text _OAuthURLEncodedString
|| __TEXT.__text _ParameterString
|| __TEXT.__text _ProductVersion
|| __TEXT.__text _RoundRectToPixel
|| __TEXT.__text _RoundToPixel
|| __TEXT.__text _RoundToPixelWatch
|| __TEXT.__text _SCKDatabaseLog
|| __TEXT.__text _ShouldSwapColorsForLocale
|| __TEXT.__text _StocksAttributionString
|| __TEXT.__text _StocksLogForCategory
|| __TEXT.__text __ConsumerKey
|| __TEXT.__text __ConsumerSecret
|| __TEXT.__text _pseudoRandomFloatStringInRange
|| __TEXT.__text _randomStringOfLength
__ AppSupport: _CPAbbreviatedMonthDayFormat
__ AppSupport: _CPDateFormatStringForFormatType
__ AppSupport: _CPDatePickerYearFormat
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppSupport: __CPTimeFormatIs24HourMode
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKRecordChangedErrorClientRecordKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _OBJC_CLASS_$_CKAccountInfo
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ CloudKit: _OBJC_CLASS_$_CKDatabaseSubscription
__ CloudKit: _OBJC_CLASS_$_CKFetchDatabaseChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDateFormatterCopyProperty
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringTransform
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleIdentifier
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFURLIsExcludedFromCloudBackupKey
__ CoreFoundation: _kCFAbsoluteTimeIntervalSince1904
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFDateFormatterMonthSymbols
__ CoreFoundation: _kCFDateFormatterShortStandaloneMonthSymbols
__ CoreFoundation: _kCFDateFormatterStandaloneMonthSymbols
__ CoreFoundation: _kCFDateFormatterVeryShortStandaloneMonthSymbols
__ CoreFoundation: _kCFStringTransformStripDiacritics
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextCopyPath
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineCap
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineJoin
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGGradientRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUbiquitousKeyValueStoreChangeReasonKey
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ OAuth: _OBJC_CLASS_$_OACredential
__ OAuth: _OBJC_CLASS_$_OAURLRequestSigner
__ UIKit: _NSBaselineOffsetAttributeName
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UILabel
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidReceiveMemoryWarningNotification
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorFeatureSettingsAttribute
__ UIKit: _UIFontFeatureSelectorIdentifierKey
__ UIKit: _UIFontFeatureTypeIdentifierKey
__ UIKit: _UIFontTextStyleFootnote1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIRectCenteredYInRect
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_vnode
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _method_setImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
SPChartView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport <StockGraphViewContainer>
 @property  UIFont *labelFont
 @property  unsigned long chartViewType
 @property  BOOL compactGraph
 @property  BOOL showsHorizontalLines
 @property  StockChartData *chartData
 @property  Stock *stock
 @property  <SPChartViewDelegate> *delegate
 @property  StockChartDisplayMode *currentDisplayMode

  // instance methods
  -[SPChartView labelFont]
  -[SPChartView initWithFrame:]
  -[SPChartView clearData]
  -[SPChartView dealloc]
  -[SPChartView .cxx_destruct]
  -[SPChartView lineGraphBottomPadding]
  -[SPChartView stock]
  -[SPChartView lineGraphFrame]
  -[SPChartView drawRect:]
  -[SPChartView setBackgroundGradient:]
  -[SPChartView chartData]
  -[SPChartView setChartData:]
  -[SPChartView setFrame:]
  -[SPChartView setDelegate:]
  -[SPChartView delegate]
  -[SPChartView layoutSubviews]
  -[SPChartView setYAxisLabelCount:]
  -[SPChartView setShowsHorizontalLines:]
  -[SPChartView _prepareYAxisLabelsAndPositions]
  -[SPChartView _prepareXAxisLabelsAndPositions]
  -[SPChartView chartViewType]
  -[SPChartView _setHourLabels]
  -[SPChartView _setDayLabelsWithInterval:realTimePositions:]
  -[SPChartView _setMonthAndYearLabels]
  -[SPChartView currentDisplayMode]
  -[SPChartView _prepareXAxisLabelsForLabelInfoArray:]
  -[SPChartView showsHorizontalLines]
  -[SPChartView graphViewFrameForMode:]
  -[SPChartView widestYLabelWidthForMode:]
  -[SPChartView isCompactGraph]
  -[SPChartView stockGraphViewReadyForDisplay:]
  -[SPChartView initWithStockChartDisplayMode:]
  -[SPChartView _smallCapsFontFrom:]
  -[SPChartView setChartViewType:]
  -[SPChartView setCompactGraph:]
  -[SPChartView setStock:]


SCKRecordFieldSchema : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *name
 @property  Class valueClass
 @property  BOOL required
 @property  BOOL encrypted

  // instance methods
  -[SCKRecordFieldSchema isEncrypted]
  -[SCKRecordFieldSchema valueClass]
  -[SCKRecordFieldSchema isValidRecord:]
  -[SCKRecordFieldSchema .cxx_destruct]
  -[SCKRecordFieldSchema name]
  -[SCKRecordFieldSchema isRequired]
  -[SCKRecordFieldSchema setValueClass:]
  -[SCKRecordFieldSchema setRequired:]
  -[SCKRecordFieldSchema initWithName:valueClass:required:encrypted:]
  -[SCKRecordFieldSchema setName:]


SCKZoneModificationSilo : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneModifying>
 @property  SCKZoneSchema *zoneSchema
 @property  NSMutableDictionary *originalRecordsByID
 @property  NSMutableDictionary *workingRecordsByID
 @property  NSMutableDictionary *recordsToSaveByID
 @property  NSMutableArray *deletedRecordIDs
 @property  SCKZoneDiff *diff

  // instance methods
  -[SCKZoneModificationSilo createOrUpdateRecordWithName:recordType:modifyBlock:]
  -[SCKZoneModificationSilo setRecordsToSaveByID:]
  -[SCKZoneModificationSilo recordExistsWithName:]
  -[SCKZoneModificationSilo diff]
  -[SCKZoneModificationSilo recordsToSaveByID]
  -[SCKZoneModificationSilo zoneSchema]
  -[SCKZoneModificationSilo .cxx_destruct]
  -[SCKZoneModificationSilo setOriginalRecordsByID:]
  -[SCKZoneModificationSilo initWithZoneSchema:contents:]
  -[SCKZoneModificationSilo originalRecordsByID]
  -[SCKZoneModificationSilo setWorkingRecordsByID:]
  -[SCKZoneModificationSilo deleteRecordWithName:]
  -[SCKZoneModificationSilo setZoneSchema:]
  -[SCKZoneModificationSilo setDeletedRecordIDs:]
  -[SCKZoneModificationSilo deletedRecordIDs]
  -[SCKZoneModificationSilo _shouldAssertRecordValidity]
  -[SCKZoneModificationSilo workingRecordsByID]


Stock : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *symbol
 @property  NSString *companyName
 @property  NSString *shortCompanyName
 @property  Exchange *exchange
 @property  NSString *price
 @property  NSString *change
 @property  NSString *currency
 @property  NSString *symbolType
 @property  NSString *open
 @property  NSString *high
 @property  NSString *low
 @property  NSString *yearHigh
 @property  NSString *yearLow
 @property  NSString *volume
 @property  NSString *averageVolume
 @property  NSString *marketcap
 @property  NSString *peRatio
 @property  NSString *dividendYield
 @property  unsigned int pricePrecision
 @property  NSURL *infoURL
 @property  StockDataSource *dataSource
 @property  double timeQuoteLastUpdated
 @property  double timeMetadataLastUpdated
 @property  BOOL transient
 @property  NSString *marketStatusDescription
 @property  NSString *formattedPrice
 @property  NSString *formattedChange
 @property  NSString *formattedChangePercent

  // class methods
  +[Stock urlForStockSymbol:]
  +[Stock BlankValueString]
  +[Stock postfixCharacterForMagnitude:unitMagnitude:]
  +[Stock localizedMagnitudeAbbreviatedStringWithString:fractionDigits:]
  +[Stock listNameOverridesBySymbol]
  +[Stock _potentiallyAbsentKeys]
  +[Stock urlForStock:]
  +[Stock symbolForURL:]
  +[Stock localizedMagnitudeAbbreviatedStringWithString:]

  // instance methods
  -[Stock high]
  -[Stock isTransient]
  -[Stock price]
  -[Stock low]
  -[Stock setTransient:]
  -[Stock setLow:]
  -[Stock setHigh:]
  -[Stock setDataSource:]
  -[Stock volume]
  -[Stock setVolume:]
  -[Stock change]
  -[Stock symbolType]
  -[Stock companyName]
  -[Stock dealloc]
  -[Stock _updateInterval]
  -[Stock .cxx_destruct]
  -[Stock currency]
  -[Stock open]
  -[Stock symbol]
  -[Stock formattedPrice]
  -[Stock setPrice:]
  -[Stock peRatio]
  -[Stock initWithDictionary:]
  -[Stock setCurrency:]
  -[Stock exchange]
  -[Stock infoURL]
  -[Stock setCompanyName:]
  -[Stock dataSource]
  -[Stock isEqual:]
  -[Stock setSymbol:]
  -[Stock dividendYield]
  -[Stock setDividendYield:]
  -[Stock setExchange:]
  -[Stock setPeRatio:]
  -[Stock listName]
  -[Stock yearLow]
  -[Stock setChange:]
  -[Stock setSymbolType:]
  -[Stock setOpen:]
  -[Stock archiveDictionary]
  -[Stock isIndex]
  -[Stock setInfoURL:]
  -[Stock yearHigh]
  -[Stock timeQuoteLastUpdated]
  -[Stock pricePrecision]
  -[Stock setShortCompanyName:]
  -[Stock setYearHigh:]
  -[Stock setYearLow:]
  -[Stock setAverageVolume:]
  -[Stock setMarketcap:]
  -[Stock _updatePricePrecision]
  -[Stock populateFromDictionary:]
  -[Stock setChartData:forInterval:]
  -[Stock formattedChangePercent:]
  -[Stock marketIsOpen]
  -[Stock listNameWithMaxIndexNameLength:]
  -[Stock listNameOverride]
  -[Stock shouldUseCompanyNameAsListName:]
  -[Stock formattedChangePercent]
  -[Stock formattedChange]
  -[Stock changeIsNegative]
  -[Stock changeIsZero]
  -[Stock isQuoteStale]
  -[Stock isMetadataStale]
  -[Stock doesQuoteNeedUpdate]
  -[Stock doesMetadataNeedUpdate]
  -[Stock chartDataForInterval:]
  -[Stock updateQuoteWithDictionary:forTime:]
  -[Stock updateMetadataWithDictionary:forTime:]
  -[Stock marketStatusDescription]
  -[Stock formattedPriceDroppingFractionDigitsIfLengthExceeds:]
  -[Stock shortCompanyName]
  -[Stock averageVolume]
  -[Stock marketcap]
  -[Stock setTimeQuoteLastUpdated:]
  -[Stock timeMetadataLastUpdated]
  -[Stock setTimeMetadataLastUpdated:]


SCWatchlistDefaults : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSArray *defaultSymbols

  // class methods
  +[SCWatchlistDefaults defaultsForCurrentCountry]
  +[SCWatchlistDefaults defaultsFromCarrierBundle]
  +[SCWatchlistDefaults _defaultSymbolsByCountryCode]
  +[SCWatchlistDefaults _iOS10DefaultsForCurrentCountry]
  +[SCWatchlistDefaults _iOS7DefaultsForCurrentCountry]
  +[SCWatchlistDefaults _legacyDefaultSymbolsByCountryCode]
  +[SCWatchlistDefaults defaultsWithDefaultSymbols:]
  +[SCWatchlistDefaults emptyDefaults]
  +[SCWatchlistDefaults defaultsHistoryForCurrentCountry]

  // instance methods
  -[SCWatchlistDefaults .cxx_destruct]
  -[SCWatchlistDefaults defaultSymbols]
  -[SCWatchlistDefaults initWithDefaultSymbols:]
  -[SCWatchlistDefaults defaultsByAppendingDefaults:]


StockDataFormatter : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSObject<OS_dispatch_queue> *decimalFormatterQueue
 @property  NSNumberFormatter *decimalFormatter
 @property  NSObject<OS_dispatch_queue> *percentFormatterQueue
 @property  NSNumberFormatter *percentFormatter
 @property  BOOL localeUsesASCII
 @property  NSString *percentSymbol

  // class methods
  +[StockDataFormatter sharedDataFormatter]

  // instance methods
  -[StockDataFormatter dealloc]
  -[StockDataFormatter .cxx_destruct]
  -[StockDataFormatter percentSymbol]
  -[StockDataFormatter initPrivate]
  -[StockDataFormatter percentFormatter]
  -[StockDataFormatter decimalFormatter]
  -[StockDataFormatter formattedNumber:withPrecision:useGroupSeparator:]
  -[StockDataFormatter formattedPriceForStock:withPrecision:]
  -[StockDataFormatter formattedChangeInPointsForStock:withPrecision:]
  -[StockDataFormatter formattedChangeInPercentForStock:]
  -[StockDataFormatter formattedPriceForStock:withPrecision:droppingFractionDigitsIfLengthExceeds:]
  -[StockDataFormatter _resetLocale:]
  -[StockDataFormatter formattedPercent:]
  -[StockDataFormatter formattedChangeInPointsForStock:withPrecision:droppingFractionDigitsIfLengthExceeds:]
  -[StockDataFormatter formattedNumber:withPrecision:useGroupSeparator:droppingFractionDigitsIfLengthExceeds:]
  -[StockDataFormatter decimalFormatterQueue]
  -[StockDataFormatter _locked_formatNumber:withPrecision:useGroupSeparator:]
  -[StockDataFormatter formattedPercent:withPrecision:]
  -[StockDataFormatter percentFormatterQueue]
  -[StockDataFormatter _locked_formatPercent:withPrecision:]
  -[StockDataFormatter setDecimalFormatter:]
  -[StockDataFormatter setPercentFormatter:]
  -[StockDataFormatter doesLocaleUseASCII]
  -[StockDataFormatter setDecimalFormatterQueue:]
  -[StockDataFormatter setPercentFormatterQueue:]


ExchangeManager : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[ExchangeManager sharedManager]

  // instance methods
  -[ExchangeManager init]
  -[ExchangeManager .cxx_destruct]
  -[ExchangeManager saveChanges]
  -[ExchangeManager exchangeWithName:createIfNotFound:]
  -[ExchangeManager _loadExchangesFromDefaults]
  -[ExchangeManager addExchange:]
  -[ExchangeManager exchangeWithName:]
  -[ExchangeManager _addExchange:]
  -[ExchangeManager exchangeList]
  -[ExchangeManager containsExchange:]
  -[ExchangeManager removeExchange:]
  -[ExchangeManager reloadExchangesFromDefaults]


YahooDoppelganger : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *expectedRequestPattern
 @property  NSData *response
 @property  unsigned long responseChunkSize
 @property  unsigned long responseChunkDelay
 @property  unsigned long responseChunkInitialDelay
 @property  <NSURLSessionDataDelegate> *delegate

  // class methods
  +[YahooDoppelganger canHandleRequest:]
  +[YahooDoppelganger hookIntoYQLRequestIfNeeded]
  +[YahooDoppelganger newDoppelgangerMatchingRequestPattern:]
  +[YahooDoppelganger _spewDoppelgangerArray:named:]
  +[YahooDoppelganger _doppelgangerFinished:]
  +[YahooDoppelganger setTestHarness:]
  +[YahooDoppelganger prepDoppelgangerWithRequestPattern:response:]
  +[YahooDoppelganger prepDoppelgangerForQuotesResponseWithSymbols:includeMetdata:]
  +[YahooDoppelganger prepDoppelgangerForNewsResponseWithSymbol:numberOfNewsItems:]
  +[YahooDoppelganger prepDoppelgangerForChartResponseWithSymbol:numberOfDataPoints:]
  +[YahooDoppelganger spewDoppelgangerData]
  +[YahooDoppelganger clearDoppelgangerData]
  +[YahooDoppelganger waitForAllDoppelgangersUpToTimeout:]

  // instance methods
  -[YahooDoppelganger scheduleInRunLoop:forMode:]
  -[YahooDoppelganger matchesRequest:]
  -[YahooDoppelganger init]
  -[YahooDoppelganger resume]
  -[YahooDoppelganger .cxx_destruct]
  -[YahooDoppelganger cancel]
  -[YahooDoppelganger unscheduleFromRunLoop:forMode:]
  -[YahooDoppelganger setResponse:]
  -[YahooDoppelganger setDelegate:]
  -[YahooDoppelganger delegate]
  -[YahooDoppelganger response]
  -[YahooDoppelganger start]
  -[YahooDoppelganger setExpectedRequestPattern:]
  -[YahooDoppelganger _relayDataChunk]
  -[YahooDoppelganger setResponseChunkSize:]
  -[YahooDoppelganger expectedRequestPattern]
  -[YahooDoppelganger responseChunkSize]
  -[YahooDoppelganger responseChunkDelay]
  -[YahooDoppelganger setResponseChunkDelay:]
  -[YahooDoppelganger responseChunkInitialDelay]
  -[YahooDoppelganger setResponseChunkInitialDelay:]


SCKZoneSchema : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSArray *recordSchemas
 @property  CKRecordZoneID *zoneID
 @property  NSString *zoneName
 @property  BOOL atomic
 @property  NSArray *allRecordFieldNames

  // instance methods
  -[SCKZoneSchema zoneName]
  -[SCKZoneSchema zoneID]
  -[SCKZoneSchema setRecordSchemas:]
  -[SCKZoneSchema schemaForRecordType:]
  -[SCKZoneSchema allRecordFieldNames]
  -[SCKZoneSchema isValidRecord:]
  -[SCKZoneSchema .cxx_destruct]
  -[SCKZoneSchema recordSchemas]
  -[SCKZoneSchema isAtomic]
  -[SCKZoneSchema validateRecords:]
  -[SCKZoneSchema initWithName:atomic:recordSchemas:]


StockUpdateManager : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <StockUpdaterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[StockUpdateManager sharedManager]

  // instance methods
  -[StockUpdateManager isLoading]
  -[StockUpdateManager init]
  -[StockUpdateManager removeUpdateObserver:]
  -[StockUpdateManager dealloc]
  -[StockUpdateManager .cxx_destruct]
  -[StockUpdateManager failWithError:]
  -[StockUpdateManager cancel]
  -[StockUpdateManager _enumerateObserversRespondingToSelector:usingBlock:]
  -[StockUpdateManager reset]
  -[StockUpdateManager addUpdateObserver:]
  -[StockUpdateManager updateStockBasicWithCompletion:withCompletion:]
  -[StockUpdateManager updateStockComprehensive:forced:withCompletion:]
  -[StockUpdateManager _stocksDidReload]
  -[StockUpdateManager hadError]
  -[StockUpdateManager availableStockUpdater]
  -[StockUpdateManager _kickoffUpdater:forStocks:comprehensive:forceUpdate:completion:]
  -[StockUpdateManager updateStockComprehensive:withCompletion:]
  -[StockUpdateManager updateAllStocksBasicWithCompletion:]
  -[StockUpdateManager _updateStocksBasic:forced:withCompletion:]
  -[StockUpdateManager _updaterDidCancelOrFinish:]
  -[StockUpdateManager stockUpdater:didRequestUpdateForStocks:isComprehensive:]
  -[StockUpdateManager stockUpdater:didUpdateStocks:isComprehensive:]
  -[StockUpdateManager stockUpdater:didFailWithError:whileUpdatingStocks:comprehensive:]
  -[StockUpdateManager stocksDidUpdateRemotely]
  -[StockUpdateManager resetUpdaters]
  -[StockUpdateManager updateStocksComprehensive:]
  -[StockUpdateManager updateStockComprehensive:]
  -[StockUpdateManager updateAllStocksBasic]
  -[StockUpdateManager updateAllStocksBasic:withCompletion:]
  -[StockUpdateManager updateStaleStocksBasicWithCompletion:]


StockUpdater : YQLRequest
 @property  <StockUpdaterDelegate> *delegate
 @property  BOOL isComprehensive
 @property  BOOL forceUpdate
 @property  NSArray *requestStocks
 @property  NSArray *pendingStocks
 @property  @? updateCompletionHandler

  // instance methods
  -[StockUpdater forceUpdate]
  -[StockUpdater parseData:]
  -[StockUpdater .cxx_destruct]
  -[StockUpdater failWithError:]
  -[StockUpdater setUpdateCompletionHandler:]
  -[StockUpdater updateCompletionHandler]
  -[StockUpdater setDelegate:]
  -[StockUpdater delegate]
  -[StockUpdater didParseData]
  -[StockUpdater hadError]
  -[StockUpdater isComprehensive]
  -[StockUpdater requestStocks]
  -[StockUpdater _updateStocks:comprehensive:forceUpdate:]
  -[StockUpdater setPendingStocks:]
  -[StockUpdater setRequestStocks:]
  -[StockUpdater _parseExchangeDictionaries:]
  -[StockUpdater _parseQuoteDictionaries:withDataSourceDictionaries:]
  -[StockUpdater pendingStocks]


StocksLogging : NSObject /System/Library/Frameworks/UIKit.framework/UIKit

StocksLayout : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} listViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} infoViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} chartViewFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} newsViewFrame
 @property  {UIEdgeInsets=dddd} listViewContentInsets
 @property  BOOL infoViewHasBottomLine
 @property  BOOL newsViewHasBottomLine
 @property  BOOL chartViewHasBottomLine
 @property  BOOL newsViewShouldUseLargerFonts
 @property  BOOL chartViewHasTapGesture
 @property  BOOL hasScrollView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} scrollViewFrame
 @property  {CGSize=dd} scrollViewContentSize
 @property  BOOL infoViewInScrollView
 @property  BOOL chartViewInScrollView
 @property  BOOL newsViewInScrollView
 @property  BOOL hasBlurView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} blurViewFrame
 @property  BOOL hasGrayView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} grayViewFrame
 @property  BOOL hasSecondaryGrayView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} secondaryGrayViewFrame
 @property  BOOL hasStatusView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} statusViewFrame
 @property  BOOL hasStatusViewDivider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} statusViewDividerFrame
 @property  BOOL hasPrimaryHorizontalDivider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} primaryHorizontalDividerFrame
 @property  BOOL hasSecondaryHorizontalDivider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} secondaryHorizontalDividerFrame
 @property  BOOL hasPrimaryVerticalDivider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} primaryVerticalDividerFrame
 @property  BOOL hasSecondaryVerticalDivider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} secondaryVerticalDividerFrame
 @property  unsigned long listViewRowCount
 @property  double statusViewCenteringRatio
 @property  StockChartDisplayMode *chartDisplayMode
 @property  BOOL hasBlackView
 @property  BOOL isFullScreenChart

  // class methods
  +[StocksLayout layoutForSize:]
  +[StocksLayout singleColumnPortraitLayoutForSize:]
  +[StocksLayout twoColumnsPortraitLayoutForSize:]
  +[StocksLayout fullScreenChartLayoutForSize:]
  +[StocksLayout twoColumnsLandscapeLayoutForSize:]
  +[StocksLayout threeColumnsLandscapeLayoutForSize:]
  +[StocksLayout numberOfRowsForSize:]

  // instance methods
  -[StocksLayout .cxx_destruct]
  -[StocksLayout scrollViewContentSize]
  -[StocksLayout scrollViewFrame]
  -[StocksLayout setListViewFrame:]
  -[StocksLayout setInfoViewFrame:]
  -[StocksLayout setChartViewFrame:]
  -[StocksLayout setNewsViewFrame:]
  -[StocksLayout setListViewContentInsets:]
  -[StocksLayout setNewsViewHasBottomLine:]
  -[StocksLayout setInfoViewHasBottomLine:]
  -[StocksLayout setChartViewHasBottomLine:]
  -[StocksLayout setNewsViewShouldUseLargerFonts:]
  -[StocksLayout setHasScrollView:]
  -[StocksLayout setScrollViewFrame:]
  -[StocksLayout setScrollViewContentSize:]
  -[StocksLayout setInfoViewInScrollView:]
  -[StocksLayout setChartViewInScrollView:]
  -[StocksLayout setNewsViewInScrollView:]
  -[StocksLayout setHasBlurView:]
  -[StocksLayout setBlurViewFrame:]
  -[StocksLayout setHasGrayView:]
  -[StocksLayout setGrayViewFrame:]
  -[StocksLayout setHasSecondaryGrayView:]
  -[StocksLayout setSecondaryGrayViewFrame:]
  -[StocksLayout setListViewRowCount:]
  -[StocksLayout setStatusViewCenteringRatio:]
  -[StocksLayout setHasStatusView:]
  -[StocksLayout setStatusViewFrame:]
  -[StocksLayout setHasStatusViewDivider:]
  -[StocksLayout setStatusViewDividerFrame:]
  -[StocksLayout setHasPrimaryHorizontalDivider:]
  -[StocksLayout setHasSecondaryHorizontalDivider:]
  -[StocksLayout setHasPrimaryVerticalDivider:]
  -[StocksLayout listViewFrame]
  -[StocksLayout setPrimaryVerticalDividerFrame:]
  -[StocksLayout setHasSecondaryVerticalDivider:]
  -[StocksLayout setChartDisplayMode:]
  -[StocksLayout setPrimaryHorizontalDividerFrame:]
  -[StocksLayout setSecondaryVerticalDividerFrame:]
  -[StocksLayout setChartViewHasTapGesture:]
  -[StocksLayout setHasBlackView:]
  -[StocksLayout setIsFullScreenChart:]
  -[StocksLayout infoViewFrame]
  -[StocksLayout infoViewInScrollView]
  -[StocksLayout chartViewFrame]
  -[StocksLayout chartViewInScrollView]
  -[StocksLayout newsViewFrame]
  -[StocksLayout newsViewInScrollView]
  -[StocksLayout hasScrollView]
  -[StocksLayout listViewContentInsets]
  -[StocksLayout infoViewHasBottomLine]
  -[StocksLayout newsViewHasBottomLine]
  -[StocksLayout chartViewHasBottomLine]
  -[StocksLayout newsViewShouldUseLargerFonts]
  -[StocksLayout chartViewHasTapGesture]
  -[StocksLayout hasBlurView]
  -[StocksLayout blurViewFrame]
  -[StocksLayout hasGrayView]
  -[StocksLayout grayViewFrame]
  -[StocksLayout hasSecondaryGrayView]
  -[StocksLayout secondaryGrayViewFrame]
  -[StocksLayout hasStatusView]
  -[StocksLayout statusViewFrame]
  -[StocksLayout hasStatusViewDivider]
  -[StocksLayout statusViewDividerFrame]
  -[StocksLayout hasPrimaryHorizontalDivider]
  -[StocksLayout primaryHorizontalDividerFrame]
  -[StocksLayout hasSecondaryHorizontalDivider]
  -[StocksLayout secondaryHorizontalDividerFrame]
  -[StocksLayout setSecondaryHorizontalDividerFrame:]
  -[StocksLayout hasPrimaryVerticalDivider]
  -[StocksLayout primaryVerticalDividerFrame]
  -[StocksLayout hasSecondaryVerticalDivider]
  -[StocksLayout secondaryVerticalDividerFrame]
  -[StocksLayout listViewRowCount]
  -[StocksLayout statusViewCenteringRatio]
  -[StocksLayout chartDisplayMode]
  -[StocksLayout hasBlackView]
  -[StocksLayout isFullScreenChart]


SymbolValidator : YQLRequest
 @property  id delegate

  // instance methods
  -[SymbolValidator initWithDelegate:]
  -[SymbolValidator parseData:]
  -[SymbolValidator .cxx_destruct]
  -[SymbolValidator failWithError:]
  -[SymbolValidator setDelegate:]
  -[SymbolValidator delegate]
  -[SymbolValidator didParseData]
  -[SymbolValidator validateSymbol:withMaxResults:]


StockChartData : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  Stock *stock
 @property  long long chartInterval
 @property  ^{?=ddQ} stockValues
 @property  unsigned int stockValueCount
 @property  NSArray *interestingIndexes
 @property  NSDate *marketOpenDate
 @property  NSDate *marketCloseDate
 @property  NSTimeZone *marketTimeZone
 @property  ^{?=ddQ} minValue
 @property  ^{?=ddQ} maxValue
 @property  float previousClosePrice
 @property  double expirationTime
 @property  BOOL isUnavailable
 @property  BOOL hasVolume
 @property  int yAxisFractionDigits
 @property  NSDictionary *dataSeriesDict

  // instance methods
  -[StockChartData maxValue]
  -[StockChartData dealloc]
  -[StockChartData .cxx_destruct]
  -[StockChartData stock]
  -[StockChartData stockValues]
  -[StockChartData stockValueCount]
  -[StockChartData previousClosePrice]
  -[StockChartData marketTimeZone]
  -[StockChartData marketOpenDate]
  -[StockChartData marketCloseDate]
  -[StockChartData setXAxisLabelInfoArray:forDisplayMode:]
  -[StockChartData setLabelPlacement:forDisplayMode:]
  -[StockChartData chartInterval]
  -[StockChartData labelPlacementForDisplayMode:]
  -[StockChartData xAxisLabelInfoArrayForMode:]
  -[StockChartData expirationTime]
  -[StockChartData setMinValue:]
  -[StockChartData setHasVolume:]
  -[StockChartData hasVolume]
  -[StockChartData minValue]
  -[StockChartData isUnavailable]
  -[StockChartData setExpirationTime:]
  -[StockChartData setMaxValue:]
  -[StockChartData setPreviousClosePrice:]
  -[StockChartData clearAllImageSets]
  -[StockChartData yAxisLabelInfoArrayForMode:]
  -[StockChartData dataSeriesDict]
  -[StockChartData setInterestingIndexes:]
  -[StockChartData setYAxisFractionDigits:]
  -[StockChartData yAxisFractionDigits]
  -[StockChartData setYAxisLabelInfoArray:forDisplayMode:]
  -[StockChartData setStock:]
  -[StockChartData initWithStock:interval:]
  -[StockChartData allocateStockValuesWithCount:]
  -[StockChartData imageSetForDisplayMode:]
  -[StockChartData setImageSet:forDisplayMode:]
  -[StockChartData setChartInterval:]
  -[StockChartData interestingIndexes]
  -[StockChartData setMarketOpenDate:]
  -[StockChartData setMarketCloseDate:]
  -[StockChartData setMarketTimeZone:]
  -[StockChartData setIsUnavailable:]
  -[StockChartData setDataSeriesDict:]


ChartUpdater : YQLRequest
 @property  <ChartUpdaterDelegate> *delegate
 @property  long long interval

  // class methods
  +[ChartUpdater _rangeStringForInterval:]

  // instance methods
  -[ChartUpdater interval]
  -[ChartUpdater parseData:]
  -[ChartUpdater .cxx_destruct]
  -[ChartUpdater updateChartForStock:interval:]
  -[ChartUpdater failWithError:]
  -[ChartUpdater cancel]
  -[ChartUpdater setDelegate:]
  -[ChartUpdater delegate]
  -[ChartUpdater didParseData]
  -[ChartUpdater updateChartForStock:interval:withCompletion:]
  -[ChartUpdater parseDataSeriesDictionary:]
  -[ChartUpdater parseDataSeriesDictionary:interval:]
  -[ChartUpdater dataSeries]


StockGraphImageSet : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  UIImage *lineGraphImage
 @property  UIImage *highlightOverlayImage
 @property  UIImage *volumeGraphImage

  // instance methods
  -[StockGraphImageSet .cxx_destruct]
  -[StockGraphImageSet lineGraphImage]
  -[StockGraphImageSet setLineGraphImage:]
  -[StockGraphImageSet highlightOverlayImage]
  -[StockGraphImageSet setHighlightOverlayImage:]
  -[StockGraphImageSet volumeGraphImage]
  -[StockGraphImageSet setVolumeGraphImage:]


SCKDatabasePollingCondition : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  double minIntervalSinceLastSync

  // instance methods
  -[SCKDatabasePollingCondition initWithMinIntervalSinceLastSync:]
  -[SCKDatabasePollingCondition minIntervalSinceLastSync]


NetPreferences : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *requestCountryCode
 @property  NSString *requestLanguageCode
 @property  NSString *acceptLanguageCode
 @property  BOOL networkReachable
 @property  NSString *UUID

  // class methods
  +[NetPreferences clearSharedPreferences]
  +[NetPreferences sharedPreferences]

  // instance methods
  -[NetPreferences resetLocale]
  -[NetPreferences isNetworkReachable]
  -[NetPreferences stocksLanguageCode]
  -[NetPreferences init]
  -[NetPreferences _cacheDirectoryPath]
  -[NetPreferences setAcceptLanguageCode:]
  -[NetPreferences serviceDebugging]
  -[NetPreferences .cxx_destruct]
  -[NetPreferences requestCountryCode]
  -[NetPreferences logoButtonImage]
  -[NetPreferences defaultBacksideLogoURL]
  -[NetPreferences acceptLanguageCode]
  -[NetPreferences fullQuoteURLOverrideForStock:]
  -[NetPreferences _urlStringWithHost:]
  -[NetPreferences requestLanguageCode]
  -[NetPreferences stocksYQLBaseURL]
  -[NetPreferences _stocksAcceptLanguage]
  -[NetPreferences financeRequestAttributes]
  -[NetPreferences setRequestCountryCode:]
  -[NetPreferences UUID]
  -[NetPreferences backsideLogoURL]
  -[NetPreferences serviceDebuggingPath]
  -[NetPreferences setRequestLanguageCode:]
  -[NetPreferences setNetworkReachable:]
  -[NetPreferences logoBacksideImage]
  -[NetPreferences stocksLanguageCodeForLanguage:]
  -[NetPreferences stocksCountryCode]
  -[NetPreferences _stocksUserAgent]
  -[NetPreferences signedRequestForURL:parameters:]
  -[NetPreferences addStocksHeadersToPostRequest:]


SCKDatabaseSchema : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  long long security
 @property  NSArray *zoneSchemas
 @property  NSString *name
 @property  long long environment
 @property  CKContainerID *containerID
 @property  NSArray *zoneIDs
 @property  BOOL requiresDeviceToDeviceEncryption

  // instance methods
  -[SCKDatabaseSchema schemaForZoneName:]
  -[SCKDatabaseSchema zoneIDs]
  -[SCKDatabaseSchema containerID]
  -[SCKDatabaseSchema requiresDeviceToDeviceEncryption]
  -[SCKDatabaseSchema .cxx_destruct]
  -[SCKDatabaseSchema name]
  -[SCKDatabaseSchema initWithName:environment:security:zoneSchemas:]
  -[SCKDatabaseSchema zoneSchemas]
  -[SCKDatabaseSchema security]
  -[SCKDatabaseSchema setSecurity:]
  -[SCKDatabaseSchema environment]
  -[SCKDatabaseSchema setZoneSchemas:]


ChartLabelInfoManager : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[ChartLabelInfoManager clearSharedManager]
  +[ChartLabelInfoManager sharedLabelInfoManager]
  +[ChartLabelInfoManager _CFDateFormatterPropertyForMonthLabelLength:]
  +[ChartLabelInfoManager chartLabelFont]

  // instance methods
  -[ChartLabelInfoManager resetLocale]
  -[ChartLabelInfoManager init]
  -[ChartLabelInfoManager dealloc]
  -[ChartLabelInfoManager .cxx_destruct]
  -[ChartLabelInfoManager labelInfoForYAxis]
  -[ChartLabelInfoManager use24hrTime]
  -[ChartLabelInfoManager labelInfoWithUnsignedInteger:]
  -[ChartLabelInfoManager monthLabelInfoArrayForLabelLength:]
  -[ChartLabelInfoManager labelInfoWithString:]


ChartLabelInfo : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *string
 @property  {CGSize=dd} size
 @property  double position
 @property  BOOL immutable

  // instance methods
  -[ChartLabelInfo copyWithZone:]
  -[ChartLabelInfo immutable]
  -[ChartLabelInfo position]
  -[ChartLabelInfo setPosition:]
  -[ChartLabelInfo size]
  -[ChartLabelInfo .cxx_destruct]
  -[ChartLabelInfo setString:]
  -[ChartLabelInfo setImmutable:]
  -[ChartLabelInfo setSize:]
  -[ChartLabelInfo string]
  -[ChartLabelInfo setStringToYearWithDate:timeZone:]
  -[ChartLabelInfo retainStringAndSizeFromLabelInfo:]
  -[ChartLabelInfo setStringToMonthAndDayWithDate:timeZone:]


SCWatchlist : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKDatabaseObserver>
 @property  SCKDatabase *database
 @property  <SCWatchlistMetadataProviding> *metadataProvider
 @property  <SCWatchlistDefaultsProviding> *defaultsProvider
 @property  NSHashTable *observers
 @property  SCKStartupQueue *startupQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // class methods
  +[SCWatchlist supportedCommands]
  +[SCWatchlist zoneSchema]
  +[SCWatchlist zoneMergeHandler]

  // instance methods
  -[SCWatchlist setDatabase:]
  -[SCWatchlist synchronize]
  -[SCWatchlist callbackQueue]
  -[SCWatchlist setObservers:]
  -[SCWatchlist database:didChangeZone:from:to:]
  -[SCWatchlist setCallbackQueue:]
  -[SCWatchlist .cxx_destruct]
  -[SCWatchlist database]
  -[SCWatchlist observers]
  -[SCWatchlist startupQueue]
  -[SCWatchlist removeObserver:]
  -[SCWatchlist setStartupQueue:]
  -[SCWatchlist addObserver:]
  -[SCWatchlist metadataProvider]
  -[SCWatchlist setMetadataProvider:]
  -[SCWatchlist fetchStocksWithCompletion:]
  -[SCWatchlist replaceSymbol:withSymbol:completion:]
  -[SCWatchlist reorderSymbol:afterSymbol:completion:]
  -[SCWatchlist removeSymbol:completion:]
  -[SCWatchlist addStock:completion:]
  -[SCWatchlist initWithDatabase:metadataProvider:defaultsProvider:]
  -[SCWatchlist defaultsProvider]
  -[SCWatchlist _enqueueStartupSequence]
  -[SCWatchlist _sortedStocks:withSymbolOrder:]
  -[SCWatchlist initWithDatabase:metadataProvider:defaults:]
  -[SCWatchlist removeStock:completion:]
  -[SCWatchlist reorderStock:toIndex:completion:]
  -[SCWatchlist setDefaultsProvider:]


SCWatchlistInlineDefaultsProvider : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCWatchlistDefaultsProviding>
  // instance methods
  -[SCWatchlistInlineDefaultsProvider .cxx_destruct]
  -[SCWatchlistInlineDefaultsProvider initWithDefaults:]
  -[SCWatchlistInlineDefaultsProvider fetchWatchlistDefaultsWithCompletion:]


SCWatchlistMergeHandler : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneMerging>
  // instance methods
  -[SCWatchlistMergeHandler commandsToMergeRecordWithServer:]


StringDrawingInfo : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *string
 @property  UIColor *color
 @property  UIFont *font
 @property  {CGSize=dd} size

  // class methods
  +[StringDrawingInfo stringDrawingInfoWithString:color:font:size:]

  // instance methods
  -[StringDrawingInfo size]
  -[StringDrawingInfo .cxx_destruct]
  -[StringDrawingInfo color]
  -[StringDrawingInfo setString:]
  -[StringDrawingInfo setSize:]
  -[StringDrawingInfo string]
  -[StringDrawingInfo setFont:]
  -[StringDrawingInfo setColor:]
  -[StringDrawingInfo font]


LabelSequenceView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  NSArray *stringDrawingInfoValues

  // instance methods
  -[LabelSequenceView init]
  -[LabelSequenceView .cxx_destruct]
  -[LabelSequenceView drawRect:]
  -[LabelSequenceView requiredSize]
  -[LabelSequenceView stringDrawingInfoValues]
  -[LabelSequenceView setStringDrawingInfoValues:]


ChartTitleLabel : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
  // instance methods
  -[ChartTitleLabel setBackgroundColor:]
  -[ChartTitleLabel init]
  -[ChartTitleLabel .cxx_destruct]
  -[ChartTitleLabel setOpaque:]
  -[ChartTitleLabel setFrame:]
  -[ChartTitleLabel layoutSubviews]
  -[ChartTitleLabel _stockWillBeRemoved:]
  -[ChartTitleLabel prepareStringsWithStock:width:]
  -[ChartTitleLabel setLabelsHidden:]
  -[ChartTitleLabel prepareStringsForDeferredStockIfNeeded]


LoadingLabel : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
  // instance methods
  -[LoadingLabel sizeToFit]
  -[LoadingLabel init]
  -[LoadingLabel text]
  -[LoadingLabel .cxx_destruct]
  -[LoadingLabel setHidden:]
  -[LoadingLabel setText:showingActivity:]


SCKDatabaseMemoryStore : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKDatabaseStore>
 @property  NSMutableDictionary *zoneStoresByName
 @property  NSDate *lastSyncDate
 @property  NSDate *lastDirtyDate
 @property  CKServerChangeToken *serverChangeToken
 @property  BOOL cloudBackupEnabled

  // instance methods
  -[SCKDatabaseMemoryStore setLastSyncDate:]
  -[SCKDatabaseMemoryStore init]
  -[SCKDatabaseMemoryStore setZoneStoresByName:]
  -[SCKDatabaseMemoryStore .cxx_destruct]
  -[SCKDatabaseMemoryStore setCloudBackupEnabled:]
  -[SCKDatabaseMemoryStore setLastDirtyDate:]
  -[SCKDatabaseMemoryStore lastDirtyDate]
  -[SCKDatabaseMemoryStore isCloudBackupEnabled]
  -[SCKDatabaseMemoryStore serverChangeToken]
  -[SCKDatabaseMemoryStore setServerChangeToken:]
  -[SCKDatabaseMemoryStore zoneStoresByName]
  -[SCKDatabaseMemoryStore lastSyncDate]
  -[SCKDatabaseMemoryStore zoneStoreForSchema:]


SCKZoneMemoryStore : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneStore>
 @property  NSDate *lastSyncDate
 @property  NSDate *lastDirtyDate
 @property  CKServerChangeToken *serverChangeToken
 @property  NSArray *serverRecords
 @property  NSArray *pendingCommands

  // instance methods
  -[SCKZoneMemoryStore setLastSyncDate:]
  -[SCKZoneMemoryStore init]
  -[SCKZoneMemoryStore serverRecords]
  -[SCKZoneMemoryStore .cxx_destruct]
  -[SCKZoneMemoryStore setLastDirtyDate:]
  -[SCKZoneMemoryStore lastDirtyDate]
  -[SCKZoneMemoryStore serverChangeToken]
  -[SCKZoneMemoryStore setServerChangeToken:]
  -[SCKZoneMemoryStore lastSyncDate]
  -[SCKZoneMemoryStore pendingCommands]
  -[SCKZoneMemoryStore addPendingCommands:]
  -[SCKZoneMemoryStore clearPendingCommandsUpToCount:]
  -[SCKZoneMemoryStore setServerRecords:]
  -[SCKZoneMemoryStore setPendingCommands:]
  -[SCKZoneMemoryStore applyServerRecordsDiff:]


StockDataSource : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  long long identifier
 @property  NSString *name
 @property  NSString *sourceDescription
 @property  NSString *localizedSourceDescription

  // instance methods
  -[StockDataSource .cxx_destruct]
  -[StockDataSource name]
  -[StockDataSource sourceDescription]
  -[StockDataSource setIdentifier:]
  -[StockDataSource identifier]
  -[StockDataSource initWithDictionary:]
  -[StockDataSource localizedSourceDescription]
  -[StockDataSource setSourceDescription:]
  -[StockDataSource setName:]
  -[StockDataSource archiveDictionary]


SCKStartupQueue : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  SCKAsyncSerialQueue *startupTaskQueue

  // instance methods
  -[SCKStartupQueue .cxx_destruct]
  -[SCKStartupQueue initWithDeferredStartup:]
  -[SCKStartupQueue setStartupTaskQueue:]
  -[SCKStartupQueue startupTaskQueue]
  -[SCKStartupQueue executeAfterStartup:]
  -[SCKStartupQueue enqueueStartupBlock:]


YQLConstants : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[YQLConstants YQLQuoteToStocksKeyMap]
  +[YQLConstants YQLExchangeToStocksKeyMap]
  +[YQLConstants YQLDataSourceToStocksKeyMap]


SCKAsyncSerialQueue : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSOperationQueue *serialOperationQueue
 @property  BOOL suspended

  // instance methods
  -[SCKAsyncSerialQueue setSuspended:]
  -[SCKAsyncSerialQueue init]
  -[SCKAsyncSerialQueue isSuspended]
  -[SCKAsyncSerialQueue waitUntilEmpty]
  -[SCKAsyncSerialQueue .cxx_destruct]
  -[SCKAsyncSerialQueue setSerialOperationQueue:]
  -[SCKAsyncSerialQueue serialOperationQueue]
  -[SCKAsyncSerialQueue enqueueBlock:]


SCKAsyncBlockOperation : NSOperation /System/Library/Frameworks/CloudKit.framework/CloudKit
 @property  @? block

  // instance methods
  -[SCKAsyncBlockOperation isAsynchronous]
  -[SCKAsyncBlockOperation initWithBlock:]
  -[SCKAsyncBlockOperation .cxx_destruct]
  -[SCKAsyncBlockOperation block]
  -[SCKAsyncBlockOperation isExecuting]
  -[SCKAsyncBlockOperation isFinished]
  -[SCKAsyncBlockOperation start]


StockNewsItem : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *headline
 @property  NSString *summary
 @property  NSString *source
 @property  NSDate *date
 @property  NSURL *link
 @property  NSString *localizedDateString

  // class methods
  +[StockNewsItem localizedStringForDate:]

  // instance methods
  -[StockNewsItem resetLocale]
  -[StockNewsItem summary]
  -[StockNewsItem link]
  -[StockNewsItem setSource:]
  -[StockNewsItem headline]
  -[StockNewsItem setLink:]
  -[StockNewsItem source]
  -[StockNewsItem .cxx_destruct]
  -[StockNewsItem initWithArchiveDictionary:]
  -[StockNewsItem date]
  -[StockNewsItem setSummary:]
  -[StockNewsItem setDate:]
  -[StockNewsItem setHeadline:]
  -[StockNewsItem archiveDictionary]
  -[StockNewsItem chronologicalComparisonWithNewsItem:]
  -[StockNewsItem localizedDateString]


StockNewsItemCollection : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSArray *newsItems
 @property  double expirationTime

  // instance methods
  -[StockNewsItemCollection .cxx_destruct]
  -[StockNewsItemCollection expirationTime]
  -[StockNewsItemCollection setExpirationTime:]
  -[StockNewsItemCollection initWithArchiveArray:]
  -[StockNewsItemCollection archiveArray]
  -[StockNewsItemCollection newsItems]
  -[StockNewsItemCollection setNewsItems:]


NewsUpdater : YQLRequest
 @property  <NewsUpdaterDelegate> *delegate

  // class methods
  +[NewsUpdater _newsItemCollectionCache]
  +[NewsUpdater sharedNewsUpdater]

  // instance methods
  -[NewsUpdater resetLocale]
  -[NewsUpdater init]
  -[NewsUpdater parseData:]
  -[NewsUpdater .cxx_destruct]
  -[NewsUpdater failWithError:]
  -[NewsUpdater setDelegate:]
  -[NewsUpdater delegate]
  -[NewsUpdater didParseData]
  -[NewsUpdater clearNewsCacheOnDisk]
  -[NewsUpdater fetchNewsForStock:withCompletion:]
  -[NewsUpdater shouldReloadOnResume]
  -[NewsUpdater loadNewsCacheFromDiskForSymbol:]
  -[NewsUpdater fetchNewsForStock:]
  -[NewsUpdater saveLastResponse]


StocksTapDragGestureRecognizer : UIGestureRecognizer /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  NSSet *touches
 @property  double requiredPressDelay
 @property  unsigned long minimumNumberOfTouches
 @property  unsigned long maximumNumberOfTouches
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} touchableBounds

  // instance methods
  -[StocksTapDragGestureRecognizer touchesBegan:withEvent:]
  -[StocksTapDragGestureRecognizer setMinimumNumberOfTouches:]
  -[StocksTapDragGestureRecognizer .cxx_destruct]
  -[StocksTapDragGestureRecognizer touches]
  -[StocksTapDragGestureRecognizer touchesCancelled:withEvent:]
  -[StocksTapDragGestureRecognizer setMaximumNumberOfTouches:]
  -[StocksTapDragGestureRecognizer reset]
  -[StocksTapDragGestureRecognizer initWithTarget:action:]
  -[StocksTapDragGestureRecognizer minimumNumberOfTouches]
  -[StocksTapDragGestureRecognizer maximumNumberOfTouches]
  -[StocksTapDragGestureRecognizer touchesMoved:withEvent:]
  -[StocksTapDragGestureRecognizer touchesEnded:withEvent:]
  -[StocksTapDragGestureRecognizer setRequiredPressDelay:]
  -[StocksTapDragGestureRecognizer touchDelayTimerFired:]
  -[StocksTapDragGestureRecognizer requiredPressDelay]
  -[StocksTapDragGestureRecognizer touchableBounds]
  -[StocksTapDragGestureRecognizer setTouchableBounds:]


SCWatchedStock : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <NSCopying>
 @property  NSString *name
 @property  NSString *shortName
 @property  NSString *symbol
 @property  NSString *exchange
 @property  NSString *displaySymbol

  // class methods
  +[SCWatchedStock watchedStockWithSymbol:name:exchange:]

  // instance methods
  -[SCWatchedStock copyWithZone:]
  -[SCWatchedStock shortName]
  -[SCWatchedStock .cxx_destruct]
  -[SCWatchedStock name]
  -[SCWatchedStock symbol]
  -[SCWatchedStock exchange]
  -[SCWatchedStock displaySymbol]
  -[SCWatchedStock isEqual:]
  -[SCWatchedStock initWithName:shortName:symbol:exchange:displaySymbol:]
  -[SCWatchedStock initWithName:shortName:symbol:exchange:]


StocksPreferences : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  BOOL changeColorSwapped
 @property  unsigned long textDirection
 @property  BOOL textAttachmentDirectionIsRightToLeft

  // class methods
  +[StocksPreferences clearSharedPreferences]
  +[StocksPreferences sharedPreferences]

  // instance methods
  -[StocksPreferences resetLocale]
  -[StocksPreferences stringForKey:]
  -[StocksPreferences setInteger:forKey:]
  -[StocksPreferences synchronize]
  -[StocksPreferences objectForKeyedSubscript:]
  -[StocksPreferences init]
  -[StocksPreferences textAttachmentDirectionIsRightToLeft]
  -[StocksPreferences removeObjectForKey:]
  -[StocksPreferences .cxx_destruct]
  -[StocksPreferences setObject:forKeyedSubscript:]
  -[StocksPreferences textDirection]
  -[StocksPreferences setObject:forKey:]
  -[StocksPreferences objectForKey:]
  -[StocksPreferences integerForKey:]
  -[StocksPreferences boolForKey:]
  -[StocksPreferences isChangeColorSwapped]


SCKDatabaseJSONStore : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKOperationThrottlerDelegate, NSFilePresenter, SCKDatabaseStoreCoordinator, SCKDatabaseStore>
 @property  NSFileCoordinator *fileCoordinator
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  BOOL loadedFromDisk
 @property  unsigned int lastKnownStoreChangeTag
 @property  NSHashTable *observers
 @property  NSMutableDictionary *zoneStoresByName
 @property  NSMutableDictionary *foreignZoneDictsByName
 @property  BOOL havePendingChanges
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <SCKOperationThrottler> *saveThrottler
 @property  NSObject<OS_dispatch_source> *changeListenerSource
 @property  NSSet *allowedCommandClasses
 @property  NSURL *storeURL
 @property  unsigned long diskReadCount
 @property  unsigned long diskWriteCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes
 @property  <SCKDatabaseStore> *underlyingStore
 @property  NSDate *lastSyncDate
 @property  NSDate *lastDirtyDate
 @property  CKServerChangeToken *serverChangeToken
 @property  BOOL cloudBackupEnabled

  // class methods
  +[SCKDatabaseJSONStore preferredFileURLForSchema:parentDirectoryURL:]

  // instance methods
  -[SCKDatabaseJSONStore saveThrottler]
  -[SCKDatabaseJSONStore accessQueue]
  -[SCKDatabaseJSONStore presentedItemURL]
  -[SCKDatabaseJSONStore setAccessQueue:]
  -[SCKDatabaseJSONStore flushToDiskWithTimeout:]
  -[SCKDatabaseJSONStore fileCoordinator]
  -[SCKDatabaseJSONStore setLastSyncDate:]
  -[SCKDatabaseJSONStore savePresentedItemChangesWithCompletionHandler:]
  -[SCKDatabaseJSONStore presentedItemOperationQueue]
  -[SCKDatabaseJSONStore initWithSchema:parentDirectoryURL:allowedCommands:]
  -[SCKDatabaseJSONStore setWorkQueue:]
  -[SCKDatabaseJSONStore storeURL]
  -[SCKDatabaseJSONStore _applyCloudBackupEnabledPropertyToStoreURL]
  -[SCKDatabaseJSONStore setObservers:]
  -[SCKDatabaseJSONStore _reloadIfNeededFromFileURL:]
  -[SCKDatabaseJSONStore setHavePendingChanges:]
  -[SCKDatabaseJSONStore setZoneStoresByName:]
  -[SCKDatabaseJSONStore .cxx_destruct]
  -[SCKDatabaseJSONStore workQueue]
  -[SCKDatabaseJSONStore initWithSchema:fileURL:allowedCommands:]
  -[SCKDatabaseJSONStore writeWithAccessor:]
  -[SCKDatabaseJSONStore initWithSchema:parentDirectoryURL:]
  -[SCKDatabaseJSONStore setCloudBackupEnabled:]
  -[SCKDatabaseJSONStore observers]
  -[SCKDatabaseJSONStore setLastDirtyDate:]
  -[SCKDatabaseJSONStore lastDirtyDate]
  -[SCKDatabaseJSONStore allowedCommandClasses]
  -[SCKDatabaseJSONStore _decodeCodableObjectOfClass:from:error:]
  -[SCKDatabaseJSONStore setLastKnownStoreChangeTag:]
  -[SCKDatabaseJSONStore initWithSchema:fileURL:]
  -[SCKDatabaseJSONStore isCloudBackupEnabled]
  -[SCKDatabaseJSONStore _encodeDate:]
  -[SCKDatabaseJSONStore _saveIfNeededToFileURL:]
  -[SCKDatabaseJSONStore _decodeCodableObjectOfClasses:from:error:]
  -[SCKDatabaseJSONStore readZone:withAccessor:]
  -[SCKDatabaseJSONStore operationThrottlerPerformOperation:]
  -[SCKDatabaseJSONStore serverChangeToken]
  -[SCKDatabaseJSONStore setServerChangeToken:]
  -[SCKDatabaseJSONStore zoneStoresByName]
  -[SCKDatabaseJSONStore lastSyncDate]
  -[SCKDatabaseJSONStore _saveToFileURL:]
  -[SCKDatabaseJSONStore diskReadCount]
  -[SCKDatabaseJSONStore foreignZoneDictsByName]
  -[SCKDatabaseJSONStore setFileCoordinator:]
  -[SCKDatabaseJSONStore reloadWithAccessor:]
  -[SCKDatabaseJSONStore removeObserver:]
  -[SCKDatabaseJSONStore lastKnownStoreChangeTag]
  -[SCKDatabaseJSONStore readWithAccessor:]
  -[SCKDatabaseJSONStore addObserver:]
  -[SCKDatabaseJSONStore setLoadedFromDisk:]
  -[SCKDatabaseJSONStore setForeignZoneDictsByName:]
  -[SCKDatabaseJSONStore havePendingChanges]
  -[SCKDatabaseJSONStore _encodeCodableObject:]
  -[SCKDatabaseJSONStore changeListenerSource]
  -[SCKDatabaseJSONStore setChangeListenerSource:]
  -[SCKDatabaseJSONStore diskWriteCount]
  -[SCKDatabaseJSONStore _listenForChangesToFileURL:]
  -[SCKDatabaseJSONStore loadedFromDisk]
  -[SCKDatabaseJSONStore _loadFromFileURL:]
  -[SCKDatabaseJSONStore underlyingStore]
  -[SCKDatabaseJSONStore zoneStoreForSchema:]
  -[SCKDatabaseJSONStore setSaveThrottler:]
  -[SCKDatabaseJSONStore _decodeDate:]
  -[SCKDatabaseJSONStore setAllowedCommandClasses:]
  -[SCKDatabaseJSONStore writeZone:withAccessor:]


SCKZoneJSONStore : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneStore>
 @property  NSString *zoneName
 @property  NSDate *lastSyncDate
 @property  NSDate *lastDirtyDate
 @property  CKServerChangeToken *serverChangeToken
 @property  NSArray *serverRecords
 @property  NSArray *pendingCommands

  // instance methods
  -[SCKZoneJSONStore zoneName]
  -[SCKZoneJSONStore setLastSyncDate:]
  -[SCKZoneJSONStore serverRecords]
  -[SCKZoneJSONStore .cxx_destruct]
  -[SCKZoneJSONStore setLastDirtyDate:]
  -[SCKZoneJSONStore lastDirtyDate]
  -[SCKZoneJSONStore setZoneName:]
  -[SCKZoneJSONStore serverChangeToken]
  -[SCKZoneJSONStore setServerChangeToken:]
  -[SCKZoneJSONStore lastSyncDate]
  -[SCKZoneJSONStore pendingCommands]
  -[SCKZoneJSONStore addPendingCommands:]
  -[SCKZoneJSONStore clearPendingCommandsUpToCount:]
  -[SCKZoneJSONStore setServerRecords:]
  -[SCKZoneJSONStore setPendingCommands:]
  -[SCKZoneJSONStore applyServerRecordsDiff:]
  -[SCKZoneJSONStore initWithZoneName:serverRecords:lastSyncDate:lastDirtyDate:serverChangeToken:pendingCommands:]


StockPlatterViewController : UIViewController /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport <StockChartViewDelegate, UITableViewDelegate, UITableViewDataSource>
 @property  UITableView *stocksTableView
 @property  UIView *statusBarView
 @property  NetPreferences *netPreferences
 @property  StockUpdateManager *stockUpdateManager
 @property  StockChartView *chartView
 @property  ChartUpdater *chartUpdater
 @property  StocksStyle *style
 @property  Stock *stock
 @property  StocksLayout *layout
 @property  StockManager *stockManager
 @property  UIButton *attributionButton
 @property  UILabel *exchangeStatusLabel
 @property  NSString *stockTicker
 @property  long long chartInterval
 @property  long long rowDataType
 @property  StockFetcher *stockFetcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[StockPlatterViewController viewDidLoad]
  -[StockPlatterViewController setLayout:]
  -[StockPlatterViewController tableView:numberOfRowsInSection:]
  -[StockPlatterViewController chartView]
  -[StockPlatterViewController dealloc]
  -[StockPlatterViewController .cxx_destruct]
  -[StockPlatterViewController setChartUpdater:]
  -[StockPlatterViewController stock]
  -[StockPlatterViewController chartInterval]
  -[StockPlatterViewController chartUpdater]
  -[StockPlatterViewController preferredContentSize]
  -[StockPlatterViewController tableView:cellForRowAtIndexPath:]
  -[StockPlatterViewController _cleanup]
  -[StockPlatterViewController numberOfSectionsInTableView:]
  -[StockPlatterViewController initWithStockTicker:]
  -[StockPlatterViewController layout]
  -[StockPlatterViewController setStyle:]
  -[StockPlatterViewController style]
  -[StockPlatterViewController setChartView:]
  -[StockPlatterViewController statusBarView]
  -[StockPlatterViewController setStock:]
  -[StockPlatterViewController setChartInterval:]
  -[StockPlatterViewController setStatusBarView:]
  -[StockPlatterViewController setStocksTableView:]
  -[StockPlatterViewController stocksTableView]
  -[StockPlatterViewController setStockTicker:]
  -[StockPlatterViewController stockTicker]
  -[StockPlatterViewController _setupStockWithTicker:]
  -[StockPlatterViewController setAttributionButton:]
  -[StockPlatterViewController attributionButton]
  -[StockPlatterViewController netPreferences]
  -[StockPlatterViewController _attributionButtonPressed:]
  -[StockPlatterViewController setExchangeStatusLabel:]
  -[StockPlatterViewController exchangeStatusLabel]
  -[StockPlatterViewController stockUpdateManager]
  -[StockPlatterViewController _updateExchangeData]
  -[StockPlatterViewController stockFetcher]
  -[StockPlatterViewController setStockFetcher:]
  -[StockPlatterViewController updateChartForInterval:completion:]
  -[StockPlatterViewController setNetPreferences:]
  -[StockPlatterViewController setStockUpdateManager:]
  -[StockPlatterViewController setStockManager:]
  -[StockPlatterViewController rowDataType]
  -[StockPlatterViewController setRowDataType:]
  -[StockPlatterViewController stockChartView:chartIntervalDidChange:]
  -[StockPlatterViewController stockChartViewIsCurrentChartView:]
  -[StockPlatterViewController stockChartViewNeedsLoadingStatusUpdated:]
  -[StockPlatterViewController stockManager]


SCWatchlistAddSymbolCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSString *symbol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistAddSymbolCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistAddSymbolCommand executeWithZone:]
  -[SCWatchlistAddSymbolCommand .cxx_destruct]
  -[SCWatchlistAddSymbolCommand initWithSymbol:]
  -[SCWatchlistAddSymbolCommand encodeWithCoder:]
  -[SCWatchlistAddSymbolCommand symbol]
  -[SCWatchlistAddSymbolCommand initWithCoder:]


SCWatchlistAddSymbolsCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSArray *symbols
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistAddSymbolsCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistAddSymbolsCommand executeWithZone:]
  -[SCWatchlistAddSymbolsCommand .cxx_destruct]
  -[SCWatchlistAddSymbolsCommand symbols]
  -[SCWatchlistAddSymbolsCommand encodeWithCoder:]
  -[SCWatchlistAddSymbolsCommand initWithCoder:]
  -[SCWatchlistAddSymbolsCommand initWithSymbols:]


SCWatchlistRemoveSymbolCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSString *symbol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistRemoveSymbolCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistRemoveSymbolCommand executeWithZone:]
  -[SCWatchlistRemoveSymbolCommand .cxx_destruct]
  -[SCWatchlistRemoveSymbolCommand initWithSymbol:]
  -[SCWatchlistRemoveSymbolCommand encodeWithCoder:]
  -[SCWatchlistRemoveSymbolCommand symbol]
  -[SCWatchlistRemoveSymbolCommand initWithCoder:]


SCWatchlistReorderSymbolCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSString *symbol
 @property  NSString *precedingSymbol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistReorderSymbolCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistReorderSymbolCommand executeWithZone:]
  -[SCWatchlistReorderSymbolCommand .cxx_destruct]
  -[SCWatchlistReorderSymbolCommand encodeWithCoder:]
  -[SCWatchlistReorderSymbolCommand symbol]
  -[SCWatchlistReorderSymbolCommand initWithCoder:]
  -[SCWatchlistReorderSymbolCommand initWithSymbol:precedingSymbol:]
  -[SCWatchlistReorderSymbolCommand precedingSymbol]


SCWatchlistReorderSymbol2Command : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSString *symbol
 @property  unsigned long toIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistReorderSymbol2Command supportsSecureCoding]

  // instance methods
  -[SCWatchlistReorderSymbol2Command toIndex]
  -[SCWatchlistReorderSymbol2Command executeWithZone:]
  -[SCWatchlistReorderSymbol2Command .cxx_destruct]
  -[SCWatchlistReorderSymbol2Command encodeWithCoder:]
  -[SCWatchlistReorderSymbol2Command symbol]
  -[SCWatchlistReorderSymbol2Command initWithCoder:]
  -[SCWatchlistReorderSymbol2Command initWithSymbol:toIndex:]


SCWatchlistReplaceSymbolCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSString *oldSymbol
 @property  NSString *replacementSymbol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistReplaceSymbolCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistReplaceSymbolCommand executeWithZone:]
  -[SCWatchlistReplaceSymbolCommand .cxx_destruct]
  -[SCWatchlistReplaceSymbolCommand encodeWithCoder:]
  -[SCWatchlistReplaceSymbolCommand initWithCoder:]
  -[SCWatchlistReplaceSymbolCommand initWithOldSymbol:replacementSymbol:]
  -[SCWatchlistReplaceSymbolCommand oldSymbol]
  -[SCWatchlistReplaceSymbolCommand replacementSymbol]


SCWatchlistAddDefaultSymbolsCommand : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneCommand>
 @property  NSArray *symbols
 @property  BOOL deferUpload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SCWatchlistAddDefaultSymbolsCommand supportsSecureCoding]

  // instance methods
  -[SCWatchlistAddDefaultSymbolsCommand executeWithZone:]
  -[SCWatchlistAddDefaultSymbolsCommand .cxx_destruct]
  -[SCWatchlistAddDefaultSymbolsCommand symbols]
  -[SCWatchlistAddDefaultSymbolsCommand shouldDeferUpload]
  -[SCWatchlistAddDefaultSymbolsCommand encodeWithCoder:]
  -[SCWatchlistAddDefaultSymbolsCommand initWithSymbols:deferUpload:]
  -[SCWatchlistAddDefaultSymbolsCommand deferUpload]
  -[SCWatchlistAddDefaultSymbolsCommand initWithCoder:]


PricePopoverBar : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  UIColor *imageMaskColor

  // instance methods
  -[PricePopoverBar sizeToFit]
  -[PricePopoverBar .cxx_destruct]
  -[PricePopoverBar drawRect:]
  -[PricePopoverBar layoutSubviews]
  -[PricePopoverBar imageMaskColor]
  -[PricePopoverBar setPriceString:]
  -[PricePopoverBar initWithBackgroundImage:]
  -[PricePopoverBar setPercentChange:]
  -[PricePopoverBar setImageMaskColor:]
  -[PricePopoverBar setChangeImage:]


HUDTouchInfo : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  {?=ddQ} stockValue
 @property  {CGPoint=dd} plottedLocation
 @property  {CGPoint=dd} locationInHUD
 @property  UITouch *touch
 @property  UIImageView *dot
 @property  UIView *bar

  // instance methods
  -[HUDTouchInfo bar]
  -[HUDTouchInfo dot]
  -[HUDTouchInfo setDot:]
  -[HUDTouchInfo touch]
  -[HUDTouchInfo .cxx_destruct]
  -[HUDTouchInfo setTouch:]
  -[HUDTouchInfo setBar:]
  -[HUDTouchInfo stockValue]
  -[HUDTouchInfo setStockValue:]
  -[HUDTouchInfo plottedLocation]
  -[HUDTouchInfo setPlottedLocation:]
  -[HUDTouchInfo locationInHUD]
  -[HUDTouchInfo setLocationInHUD:]


ChartHUDView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  StockChartView *chartView
 @property  StockGraphView *graphView
 @property  BOOL enabled
 @property  BOOL overlayHidden
 @property  double barHeight

  // class methods
  +[ChartHUDView monoSpacedFontWithFont:]
  +[ChartHUDView newHUDLabel]
  +[ChartHUDView stringForTimeIntervalSince1970:withInterval:isDouble:isLeft:]
  +[ChartHUDView _dateRangeSeparatorString]
  +[ChartHUDView initializeDateFormattersIfNeededForInterval:withTimeZone:]

  // instance methods
  -[ChartHUDView resetLocale]
  -[ChartHUDView enabled]
  -[ChartHUDView initWithFrame:]
  -[ChartHUDView isTrackingTouches]
  -[ChartHUDView chartView]
  -[ChartHUDView .cxx_destruct]
  -[ChartHUDView isOverlayHidden]
  -[ChartHUDView setOverlayHidden:]
  -[ChartHUDView barHeight]
  -[ChartHUDView setFrame:]
  -[ChartHUDView setEnabled:]
  -[ChartHUDView layoutSubviews]
  -[ChartHUDView graphView]
  -[ChartHUDView setChartView:]
  -[ChartHUDView setGraphView:]
  -[ChartHUDView tapDragGestureChanged:]
  -[ChartHUDView resizeSelectedClipViewsIfNeeded]
  -[ChartHUDView setSelectedInterval:timeZone:]
  -[ChartHUDView _showHUD]
  -[ChartHUDView setShowingTracking:withTouchInfo:animated:]
  -[ChartHUDView setBarHeight:]


SCKOperationThrottler : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKOperationThrottler>
 @property  BOOL suspended

  // instance methods
  -[SCKOperationThrottler tickle]
  -[SCKOperationThrottler initWithDelegate:]
  -[SCKOperationThrottler suspended]
  -[SCKOperationThrottler setSuspended:]
  -[SCKOperationThrottler initWithDelegate:updateQueue:]
  -[SCKOperationThrottler addCompletionForCurrentOperation:]
  -[SCKOperationThrottler dealloc]
  -[SCKOperationThrottler tickleWithCompletion:]
  -[SCKOperationThrottler .cxx_destruct]


SCKTimedOperationThrottler : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKOperationThrottlerDelegate, SCKOperationThrottler>
 @property  SCKOperationThrottler *operationThrottler
 @property  <SCKOperationThrottlerDelegate> *delegate
 @property  double cooldownTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL suspended

  // instance methods
  -[SCKTimedOperationThrottler tickle]
  -[SCKTimedOperationThrottler initWithDelegate:]
  -[SCKTimedOperationThrottler suspended]
  -[SCKTimedOperationThrottler setSuspended:]
  -[SCKTimedOperationThrottler setCooldownTime:]
  -[SCKTimedOperationThrottler operationThrottler:performAsyncOperationWithCompletion:]
  -[SCKTimedOperationThrottler tickleWithCompletion:]
  -[SCKTimedOperationThrottler .cxx_destruct]
  -[SCKTimedOperationThrottler operationThrottler]
  -[SCKTimedOperationThrottler setOperationThrottler:]
  -[SCKTimedOperationThrottler setDelegate:]
  -[SCKTimedOperationThrottler delegate]
  -[SCKTimedOperationThrottler cooldownTime]


SCKZoneSnapshot : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKZoneReading>
 @property  SCKZoneSchema *zoneSchema
 @property  NSArray *records
 @property  NSArray *allRecords

  // instance methods
  -[SCKZoneSnapshot records]
  -[SCKZoneSnapshot setRecords:]
  -[SCKZoneSnapshot zoneSchema]
  -[SCKZoneSnapshot recordWithName:]
  -[SCKZoneSnapshot .cxx_destruct]
  -[SCKZoneSnapshot recordsOfType:]
  -[SCKZoneSnapshot allRecords]
  -[SCKZoneSnapshot initWithZoneSchema:records:]
  -[SCKZoneSnapshot recordOfType:passingTest:]
  -[SCKZoneSnapshot recordOfType:]
  -[SCKZoneSnapshot isEqualToSnapshot:]
  -[SCKZoneSnapshot descriptionOfContents]
  -[SCKZoneSnapshot setZoneSchema:]


ChartIntervalButton : UILabel /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  BOOL selected

  // class methods
  +[ChartIntervalButton titleForInterval:]

  // instance methods
  -[ChartIntervalButton initWithFrame:]
  -[ChartIntervalButton setSelected:]
  -[ChartIntervalButton isSelected]


ChartIntervalButtonRow : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  <ChartIntervalButtonRowDelegate> *delegate
 @property  NSArray *intervalButtons
 @property  ChartIntervalButton *selectedButton
 @property  long long maxChartInterval

  // instance methods
  -[ChartIntervalButtonRow .cxx_destruct]
  -[ChartIntervalButtonRow setDelegate:]
  -[ChartIntervalButtonRow delegate]
  -[ChartIntervalButtonRow layoutSubviews]
  -[ChartIntervalButtonRow selectedButton]
  -[ChartIntervalButtonRow setSelectedButton:]
  -[ChartIntervalButtonRow sizeToBoldLabels]
  -[ChartIntervalButtonRow intervalButtonsTapped:]
  -[ChartIntervalButtonRow maxChartInterval]
  -[ChartIntervalButtonRow intervalForTouchLocation:]
  -[ChartIntervalButtonRow intervalButtons]
  -[ChartIntervalButtonRow selectChartIntervalButtonForInterval:]
  -[ChartIntervalButtonRow setMaxChartInterval:]
  -[ChartIntervalButtonRow initWithMaxChartInterval:chartIntervalButtonRowDelegate:]
  -[ChartIntervalButtonRow updateMaxChartInterval:]
  -[ChartIntervalButtonRow setIntervalButtons:]


Exchange : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *name
 @property  NSDate *lastCloseDate
 @property  NSDate *nextOpenDate
 @property  long long status
 @property  double streamInterval
 @property  double lastUpdateTime

  // class methods
  +[Exchange formattedExchangeNameForName:]

  // instance methods
  -[Exchange initWithName:]
  -[Exchange updateWithDictionary:]
  -[Exchange .cxx_destruct]
  -[Exchange name]
  -[Exchange initWithDictionary:]
  -[Exchange isEqual:]
  -[Exchange setStatus:]
  -[Exchange setName:]
  -[Exchange archiveDictionary]
  -[Exchange status]
  -[Exchange lastUpdateTime]
  -[Exchange marketIsOpen]
  -[Exchange streamInterval]
  -[Exchange _updateWithDictionary:newUpdate:]
  -[Exchange setNextOpenDate:]
  -[Exchange setLastCloseDate:]
  -[Exchange setStreamInterval:]
  -[Exchange lastCloseDate]
  -[Exchange nextOpenDate]
  -[Exchange marketIsAfterHours]


DashedLineView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
  // instance methods
  -[DashedLineView drawRect:]


StockChartView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport <ChartUpdaterDelegate, ChartIntervalButtonRowDelegate, StockGraphViewContainer, StockUpdateObserver>
 @property  StockChartDisplayMode *currentDisplayMode
 @property  <StockChartViewDelegate> *chartViewDelegate
 @property  long long preferredInterval
 @property  StocksViewController *controller
 @property  Stock *stock
 @property  StockChartData *chartData
 @property  NSError *error
 @property  NSArray *alternateDisplayModes
 @property  BOOL drawsBottomLine
 @property  long long selectedInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[StockChartView LineBackgroundGradient]

  // instance methods
  -[StockChartView resetLocale]
  -[StockChartView layoutIfNeeded]
  -[StockChartView isLoading]
  -[StockChartView reloadData]
  -[StockChartView clearData]
  -[StockChartView dealloc]
  -[StockChartView setError:]
  -[StockChartView .cxx_destruct]
  -[StockChartView lineGraphBottomPadding]
  -[StockChartView stock]
  -[StockChartView lineGraphFrame]
  -[StockChartView chartUpdater]
  -[StockChartView chartUpdater:didReceiveStockChartData:]
  -[StockChartView chartUpdater:didFailWithError:]
  -[StockChartView error]
  -[StockChartView _layoutSubviews]
  -[StockChartView forceLayout]
  -[StockChartView chartData]
  -[StockChartView setChartData:]
  -[StockChartView isLandscape]
  -[StockChartView setFrame:]
  -[StockChartView controller]
  -[StockChartView horizontalPadding]
  -[StockChartView setController:]
  -[StockChartView HUDView]
  -[StockChartView layoutSubviews]
  -[StockChartView setNeedsLayout]
  -[StockChartView preferredInterval]
  -[StockChartView setChartViewDelegate:]
  -[StockChartView _prepareXAxisLabelsAndPositions]
  -[StockChartView _setHourLabels]
  -[StockChartView _setDayLabelsWithInterval:realTimePositions:]
  -[StockChartView _setMonthAndYearLabels]
  -[StockChartView currentDisplayMode]
  -[StockChartView graphViewFrameForMode:]
  -[StockChartView widestYLabelWidthForMode:]
  -[StockChartView stockGraphViewReadyForDisplay:]
  -[StockChartView setStock:]
  -[StockChartView hadError]
  -[StockChartView initWithInitialDisplayMode:preferredChartInterval:stockChartViewDelegate:]
  -[StockChartView setShowingHUD:]
  -[StockChartView chartIntervalButtonRow:didSelectChartInterval:]
  -[StockChartView chartViewDelegate]
  -[StockChartView createYLabelsForMode:]
  -[StockChartView addDisplayMode:]
  -[StockChartView setCurrentDisplayMode:]
  -[StockChartView maxSupportedIntervalFromDesiredInterval:]
  -[StockChartView _prepareYAxisLabelsAndPositionsForDisplayMode:]
  -[StockChartView graphViewForMode:]
  -[StockChartView enumerateGraphsAndDisplayModesUsingBlock:]
  -[StockChartView currentGraphView]
  -[StockChartView _layoutTopLabelsHidden:]
  -[StockChartView hideLabelsAxesAndGraphs]
  -[StockChartView _setShowingLoadingStatus:]
  -[StockChartView layoutGraphViews]
  -[StockChartView _layoutIntervalButtonRow]
  -[StockChartView shouldShowLoadingStatus]
  -[StockChartView _layoutVolumeSeparatorLineForGraphRect:]
  -[StockChartView _layoutYLabels]
  -[StockChartView _layoutAxesAndXLabels]
  -[StockChartView layoutPreviousClose]
  -[StockChartView drawsBottomLine]
  -[StockChartView isCurrentChart]
  -[StockChartView renderGraphDataIfNeeded]
  -[StockChartView updateHUDView]
  -[StockChartView renderGraphDataIfNeededForMode:]
  -[StockChartView hideOtherGraphViews]
  -[StockChartView setLabelsAndAxesAlpha:]
  -[StockChartView layoutLoadingStatus]
  -[StockChartView setSelectedInterval:]
  -[StockChartView updateChartViewForSelectedInterval]
  -[StockChartView selectedInterval]
  -[StockChartView setDrawsBottomLine:]
  -[StockChartView alternateDisplayModes]
  -[StockChartView reloadDataIfStale]
  -[StockChartView _evennessOfValue:inRange:]
  -[StockChartView prepareForTransitionToDisplayMode:]
  -[StockChartView animateTransitionToDisplayMode:]
  -[StockChartView didTransitionToDisplayMode:]
  -[StockChartView setPreferredInterval:]


StocksOpenURLHelper : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[StocksOpenURLHelper URLForStockComponents:]
  +[StocksOpenURLHelper componentDictionaryFromURL:]


SCKRecordSchema : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSString *recordType
 @property  NSArray *fieldNames
 @property  NSArray *fieldSchemas

  // instance methods
  -[SCKRecordSchema initWithRecordType:fieldSchemas:]
  -[SCKRecordSchema isValidRecord:]
  -[SCKRecordSchema .cxx_destruct]
  -[SCKRecordSchema schemaForFieldName:]
  -[SCKRecordSchema fieldNames]
  -[SCKRecordSchema fieldSchemas]
  -[SCKRecordSchema recordType]


StockGraphView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport <GraphRenderOperationDelegate>
 @property  UIView<StockGraphViewContainer> *chartViewDelegate
 @property  BOOL isRendered
 @property  BOOL isRendering
 @property  {UIEdgeInsets=dddd} graphInsets
 @property  StockChartDisplayMode *displayMode

  // instance methods
  -[StockGraphView displayMode]
  -[StockGraphView initWithFrame:]
  -[StockGraphView clearData]
  -[StockGraphView dealloc]
  -[StockGraphView .cxx_destruct]
  -[StockGraphView setGraphInsets:]
  -[StockGraphView clearPaths]
  -[StockGraphView setDisplayMode:]
  -[StockGraphView loadStockChartData:]
  -[StockGraphView recomputePathsAndRenderIfNeededForSize:]
  -[StockGraphView _layoutSubviews]
  -[StockGraphView setFrame:]
  -[StockGraphView isRendered]
  -[StockGraphView isRendering]
  -[StockGraphView setChartViewDelegate:]
  -[StockGraphView resizeSelectedLineClipViewWithLeftX:rightX:]
  -[StockGraphView volumeBarRectNearestToPoint:]
  -[StockGraphView resizeSelectedVolumeClipViewWithLeftX:rightX:]
  -[StockGraphView plottedPointNearestToPoint:]
  -[StockGraphView rightmostPlottedPoint]
  -[StockGraphView setShowingSelectedVolumeRegion:]
  -[StockGraphView setShowingSelectedLine:]
  -[StockGraphView chartViewDelegate]
  -[StockGraphView cancelRenderOperation]
  -[StockGraphView setDottedLinePositionsWithLabelInfo:]
  -[StockGraphView setEvenlySpacedDottedLinePositionsWithCount:]
  -[StockGraphView _lineViewFrameForBoundsSize:]
  -[StockGraphView _volumeViewFrameForBoundsSize:]
  -[StockGraphView _finishCurrentLine]
  -[StockGraphView _priceAtTime:dataPosition:]
  -[StockGraphView _timeAtPosition:]
  -[StockGraphView _normalizedAccumulatedVolumeInDataRange:]
  -[StockGraphView _processGraphDataForWidth:]
  -[StockGraphView readyForDisplayFromChartData]
  -[StockGraphView _trueGraphPointsRegion]
  -[StockGraphView graphRenderOperationDidFinish:]
  -[StockGraphView graphInsets]


TintedView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  UIImage *image
 @property  UIColor *tintColor

  // instance methods
  -[TintedView setTintColor:]
  -[TintedView init]
  -[TintedView tintColor]
  -[TintedView .cxx_destruct]
  -[TintedView setImage:]
  -[TintedView drawRect:]
  -[TintedView image]


LineGraphView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
  // instance methods
  -[LineGraphView initWithFrame:]
  -[LineGraphView .cxx_destruct]
  -[LineGraphView resizeSelectedLineClipViewWithLeftX:rightX:]
  -[LineGraphView setShowingSelectedLine:]
  -[LineGraphView setGraphImageSet:]
  -[LineGraphView setSelectedLineImage:]


SCWatchlistDiff : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  NSArray *addedStocks
 @property  NSDictionary *indexesOfAddedStocks
 @property  NSArray *removedStocks
 @property  NSArray *reorderedStocks
 @property  NSDictionary *indexesOfReorderedStocks
 @property  BOOL empty
 @property  NSArray *stocksPreDiff
 @property  NSArray *stocksPostDiff

  // class methods
  +[SCWatchlistDiff reorderedStocksFrom:to:]

  // instance methods
  -[SCWatchlistDiff .cxx_destruct]
  -[SCWatchlistDiff isEmpty]
  -[SCWatchlistDiff addedStocks]
  -[SCWatchlistDiff removedStocks]
  -[SCWatchlistDiff indexesOfAddedStocks]
  -[SCWatchlistDiff reorderedStocks]
  -[SCWatchlistDiff indexesOfReorderedStocks]
  -[SCWatchlistDiff stocksPostDiff]
  -[SCWatchlistDiff initWithOldStocks:newStocks:]
  -[SCWatchlistDiff stocksPreDiff]


GraphRenderOperation : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  BOOL cancelled
 @property  ^{CGPoint=dd} points
 @property  NSArray *linePointCounts
 @property  NSArray *dottedLinePositions
 @property  NSArray *dottedLinePositionsForStyleOnly
 @property  ^{?=dQ} volumeBars
 @property  double volumeBarWidth
 @property  unsigned long maxVolume
 @property  unsigned int volumeCount
 @property  <GraphRenderOperationDelegate> *delegate
 @property  {CGSize=dd} graphSize
 @property  {CGSize=dd} volumeGraphSize
 @property  {UIEdgeInsets=dddd} graphInsets
 @property  StockGraphImageSet *graphImageSet
 @property  BOOL roundLineCaps
 @property  StockChartDisplayMode *displayMode

  // instance methods
  -[GraphRenderOperation isCancelled]
  -[GraphRenderOperation displayMode]
  -[GraphRenderOperation render]
  -[GraphRenderOperation .cxx_destruct]
  -[GraphRenderOperation setGraphInsets:]
  -[GraphRenderOperation points]
  -[GraphRenderOperation setDisplayMode:]
  -[GraphRenderOperation setPoints:]
  -[GraphRenderOperation cancel]
  -[GraphRenderOperation setDelegate:]
  -[GraphRenderOperation delegate]
  -[GraphRenderOperation graphSize]
  -[GraphRenderOperation setGraphImageSet:]
  -[GraphRenderOperation setLinePointCounts:]
  -[GraphRenderOperation setDottedLinePositions:]
  -[GraphRenderOperation setDottedLinePositionsForStyleOnly:]
  -[GraphRenderOperation setVolumeBars:]
  -[GraphRenderOperation setVolumeCount:]
  -[GraphRenderOperation setVolumeBarWidth:]
  -[GraphRenderOperation setMaxVolume:]
  -[GraphRenderOperation setGraphSize:]
  -[GraphRenderOperation setVolumeGraphSize:]
  -[GraphRenderOperation graphImageSet]
  -[GraphRenderOperation graphInsets]
  -[GraphRenderOperation renderLineGraph]
  -[GraphRenderOperation renderVolumeGraph]
  -[GraphRenderOperation lineGraphSize]
  -[GraphRenderOperation renderGraphLineInContext:withColor:offset:]
  -[GraphRenderOperation linePointCounts]
  -[GraphRenderOperation dottedLinePositions]
  -[GraphRenderOperation dottedLinePositionsForStyleOnly]
  -[GraphRenderOperation volumeBars]
  -[GraphRenderOperation volumeBarWidth]
  -[GraphRenderOperation maxVolume]
  -[GraphRenderOperation volumeCount]
  -[GraphRenderOperation volumeGraphSize]
  -[GraphRenderOperation roundLineCaps]
  -[GraphRenderOperation setRoundLineCaps:]


GraphRenderer : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[GraphRenderer clearSharedRenderer]
  +[GraphRenderer sharedRenderer]

  // instance methods
  -[GraphRenderer init]
  -[GraphRenderer .cxx_destruct]
  -[GraphRenderer performRenderOperation:]


SCKFauxDatabaseStoreCoordinator : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKDatabaseStoreCoordinator>
 @property  <SCKDatabaseStore> *store
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <SCKDatabaseStore> *underlyingStore

  // instance methods
  -[SCKFauxDatabaseStoreCoordinator setStore:]
  -[SCKFauxDatabaseStoreCoordinator store]
  -[SCKFauxDatabaseStoreCoordinator .cxx_destruct]
  -[SCKFauxDatabaseStoreCoordinator writeWithAccessor:]
  -[SCKFauxDatabaseStoreCoordinator setQueue:]
  -[SCKFauxDatabaseStoreCoordinator queue]
  -[SCKFauxDatabaseStoreCoordinator readZone:withAccessor:]
  -[SCKFauxDatabaseStoreCoordinator reloadWithAccessor:]
  -[SCKFauxDatabaseStoreCoordinator removeObserver:]
  -[SCKFauxDatabaseStoreCoordinator readWithAccessor:]
  -[SCKFauxDatabaseStoreCoordinator addObserver:]
  -[SCKFauxDatabaseStoreCoordinator underlyingStore]
  -[SCKFauxDatabaseStoreCoordinator writeZone:withAccessor:]
  -[SCKFauxDatabaseStoreCoordinator initWithDatabaseStore:]


StockFetcher : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SymbolValidatorDelegate>
 @property  SymbolValidator *validator
 @property  @? completionHandler
 @property  NSTimer *timeoutTimer
 @property  double timeoutDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[StockFetcher timeoutTimer]
  -[StockFetcher setTimeoutTimer:]
  -[StockFetcher init]
  -[StockFetcher timeoutDuration]
  -[StockFetcher .cxx_destruct]
  -[StockFetcher setValidator:]
  -[StockFetcher initWithValidator:]
  -[StockFetcher completionHandler]
  -[StockFetcher validator]
  -[StockFetcher setCompletionHandler:]
  -[StockFetcher setTimeoutDuration:]
  -[StockFetcher symbolValidator:didValidateSymbols:]
  -[StockFetcher symbolValidator:didFailWithError:]
  -[StockFetcher fetchStockWithSymbol:completionHandler:]
  -[StockFetcher cleanUpAndReportResult:]
  -[StockFetcher attemptRemoteFetchOfStockWithSymbol:completionHandler:]
  -[StockFetcher remoteFetchTimedOut]


StockManager : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[StockManager clearSharedManager]
  +[StockManager sharedManager]

  // instance methods
  -[StockManager handleSyncedDataChanged:]
  -[StockManager init]
  -[StockManager dealloc]
  -[StockManager .cxx_destruct]
  -[StockManager UpdateChartDataInLRU:]
  -[StockManager RemoveChartDataFromLRU:]
  -[StockManager reloadStocksFromDefaults]
  -[StockManager stocksList]
  -[StockManager saveDataChanges]
  -[StockManager stockWithSymbol:]
  -[StockManager _defaultStockDictionaries]
  -[StockManager setLocalStockListFromSyncableStockList:]
  -[StockManager saveListChanges]
  -[StockManager clearCachedChartData]
  -[StockManager makeSyncableStockListFromList:]
  -[StockManager _addStock:withRemoteNotification:]
  -[StockManager _removeStock:withRemoteNotification:]
  -[StockManager DeleteChartData:]
  -[StockManager _saveDataChangesWithStockDictionaries:]
  -[StockManager stockForURL:]
  -[StockManager addStock:]
  -[StockManager removeStock:]
  -[StockManager moveStockFromIndex:toIndex:]
  -[StockManager clearCachedChartDataImageSets]
  -[StockManager anyMarketOpen]
  -[StockManager purgeTransientData]
  -[StockManager _checkForAddedStocks]
  -[StockManager _checkForDeletedStocks]
  -[StockManager _checkForMovedStocks]


SCKZone : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
 @property  <SCKZoneStore> *store
 @property  SCKZoneSchema *schema
 @property  NSArray *clientRecords
 @property  SCKZoneDiff *clientDiff
 @property  BOOL needsFirstSync
 @property  BOOL dirty

  // instance methods
  -[SCKZone schema]
  -[SCKZone clientDiff]
  -[SCKZone setStore:]
  -[SCKZone clientRecords]
  -[SCKZone store]
  -[SCKZone .cxx_destruct]
  -[SCKZone initWithSchema:store:]
  -[SCKZone isDirty]
  -[SCKZone needsFirstSync]


SCKZoneDiff : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <NSCopying>
 @property  NSArray *modifiedRecords
 @property  NSArray *deletedRecordIDs
 @property  BOOL empty

  // instance methods
  -[SCKZoneDiff copyWithZone:]
  -[SCKZoneDiff .cxx_destruct]
  -[SCKZoneDiff applyToModifyRecordsOperation:]
  -[SCKZoneDiff initWithModifiedRecords:deletedRecordIDs:]
  -[SCKZoneDiff hasSameBaseAsDiff:]
  -[SCKZoneDiff isEmpty]
  -[SCKZoneDiff deletedRecordIDs]
  -[SCKZoneDiff modifiedRecords]
  -[SCKZoneDiff applyToRecords:]


StockChartDisplayMode : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <NSCopying>
 @property  {CGSize=dd} chartSize
 @property  BOOL showsVolume
 @property  long long maxInterval
 @property  BOOL HUDEnabled
 @property  double showsTitle
 @property  unsigned long yAxisLabelCount
 @property  unsigned long horizontalGridlineCount
 @property  BOOL showsPriceLabelForPreviousClose
 @property  BOOL usesDetailedAxisLabels
 @property  {UIEdgeInsets=dddd} lineGraphInsets
 @property  BOOL graphOverlapsYAxisLabels
 @property  double volumeHeight
 @property  double intervalRowHeight
 @property  double gutterHeight
 @property  double lineGraphBottomPadding
 @property  double lineWidth
 @property  UIColor *lineColor
 @property  UIColor *backgroundLinesColor
 @property  UIColor *xAxisKeylineColor
 @property  UIColor *axisLabelsColor
 @property  ^{CGGradient=} backgroundGradient
 @property  {UIEdgeInsets=dddd} chartRenderingInsets

  // class methods
  +[StockChartDisplayMode defaultDisplayMode]

  // instance methods
  -[StockChartDisplayMode setLineWidth:]
  -[StockChartDisplayMode lineWidth]
  -[StockChartDisplayMode copyWithZone:]
  -[StockChartDisplayMode init]
  -[StockChartDisplayMode dealloc]
  -[StockChartDisplayMode .cxx_destruct]
  -[StockChartDisplayMode setAxisLabelsColor:]
  -[StockChartDisplayMode setBackgroundLinesColor:]
  -[StockChartDisplayMode setXAxisKeylineColor:]
  -[StockChartDisplayMode setShowsVolume:]
  -[StockChartDisplayMode setVolumeHeight:]
  -[StockChartDisplayMode setShowsPriceLabelForPreviousClose:]
  -[StockChartDisplayMode lineGraphBottomPadding]
  -[StockChartDisplayMode showsTitle]
  -[StockChartDisplayMode setLineColor:]
  -[StockChartDisplayMode backgroundGradient]
  -[StockChartDisplayMode setBackgroundGradient:]
  -[StockChartDisplayMode isEqual:]
  -[StockChartDisplayMode setShowsTitle:]
  -[StockChartDisplayMode lineColor]
  -[StockChartDisplayMode setYAxisLabelCount:]
  -[StockChartDisplayMode setHorizontalGridlineCount:]
  -[StockChartDisplayMode setChartSize:]
  -[StockChartDisplayMode usesDetailedAxisLabels]
  -[StockChartDisplayMode yAxisLabelCount]
  -[StockChartDisplayMode chartSize]
  -[StockChartDisplayMode intervalRowHeight]
  -[StockChartDisplayMode graphOverlapsYAxisLabels]
  -[StockChartDisplayMode setMaxInterval:]
  -[StockChartDisplayMode setGraphOverlapsYAxisLabels:]
  -[StockChartDisplayMode setUsesDetailedAxisLabels:]
  -[StockChartDisplayMode setHUDEnabled:]
  -[StockChartDisplayMode setChartRenderingInsets:]
  -[StockChartDisplayMode maxInterval]
  -[StockChartDisplayMode showsPriceLabelForPreviousClose]
  -[StockChartDisplayMode chartRenderingInsets]
  -[StockChartDisplayMode gutterHeight]
  -[StockChartDisplayMode HUDEnabled]
  -[StockChartDisplayMode xAxisKeylineColor]
  -[StockChartDisplayMode horizontalGridlineCount]
  -[StockChartDisplayMode axisLabelsColor]
  -[StockChartDisplayMode volumeHeight]
  -[StockChartDisplayMode showsVolume]
  -[StockChartDisplayMode backgroundLinesColor]
  -[StockChartDisplayMode setIntervalRowHeight:]
  -[StockChartDisplayMode lineGraphInsets]
  -[StockChartDisplayMode setLineGraphInsets:]


StocksUtilities : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[StocksUtilities shouldStackCellContentsForStocks:withWidth:andBoxWidth:]


YahooResponseParser : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[YahooResponseParser parseData:resultsHandler:]
  +[YahooResponseParser parseDataSourceMapFromDataSourceDictionaries:]
  +[YahooResponseParser parseStockQuoteDictionaries:withDataSources:parsedStockResult:]
  +[YahooResponseParser parseExchangeDictionaries:parsedExchangeResult:]
  +[YahooResponseParser arrayWithDictionaryKeyPath:inJSONObject:wrapResultIfDictionary:]
  +[YahooResponseParser dictionaryWithDictionaryKeyPath:inJSONObject:]
  +[YahooResponseParser objectOfClass:withDictionaryKeyPath:inJSONObject:]
  +[YahooResponseParser objectWithDictionaryKeyPath:inJSONObject:]


StocksBundles : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[StocksBundles getBundle:]


StocksListBoxView : UIImageView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  UIColor *imageMaskColor

  // instance methods
  -[StocksListBoxView .cxx_destruct]
  -[StocksListBoxView imageMaskColor]
  -[StocksListBoxView setImageMaskColor:]
  -[StocksListBoxView initWithBackgroundMask:]


StocksListTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  Stock *stock
 @property  long long rowDataType
 @property  BOOL shouldStackView

  // class methods
  +[StocksListTableViewCell cellHeightForStackStatus:]

  // instance methods
  -[StocksListTableViewCell initWithStyle:reuseIdentifier:]
  -[StocksListTableViewCell .cxx_destruct]
  -[StocksListTableViewCell stock]
  -[StocksListTableViewCell prepareForReuse]
  -[StocksListTableViewCell layoutSubviews]
  -[StocksListTableViewCell updateValues]
  -[StocksListTableViewCell setStock:]
  -[StocksListTableViewCell rowDataType]
  -[StocksListTableViewCell setRowDataType:]
  -[StocksListTableViewCell setShowsRowSeparator:]
  -[StocksListTableViewCell setBoxValueFromRowDataType]
  -[StocksListTableViewCell changeSignNegative:]
  -[StocksListTableViewCell setBoxContentsAlpha:includeChangeSign:]
  -[StocksListTableViewCell setShouldStackView:]
  -[StocksListTableViewCell changeButtonRect]
  -[StocksListTableViewCell shouldStackView]


StocksStyle : NSObject /System/Library/Frameworks/UIKit.framework/UIKit
  // class methods
  +[StocksStyle sharedStyle]

  // instance methods
  -[StocksStyle resetLocale]
  -[StocksStyle init]
  -[StocksStyle .cxx_destruct]
  -[StocksStyle fontOfSize:]
  -[StocksStyle lightFontOfSize:]
  -[StocksStyle lossColor]
  -[StocksStyle gainColor]
  -[StocksStyle chartHighlightColor]
  -[StocksStyle boldFontOfSize:]
  -[StocksStyle mediumFontOfSize:]


YQLRequest : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <NSURLSessionDataDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[YQLRequest shouldGenerateOfflineData]
  +[YQLRequest appendDebugString:]
  +[YQLRequest saveDebugString]
  +[YQLRequest setShouldGenerateOfflineData:]

  // instance methods
  -[YQLRequest isLoading]
  -[YQLRequest URLSession:dataTask:didReceiveData:]
  -[YQLRequest init]
  -[YQLRequest parseData:]
  -[YQLRequest dealloc]
  -[YQLRequest .cxx_destruct]
  -[YQLRequest URLSession:task:didCompleteWithError:]
  -[YQLRequest failWithError:]
  -[YQLRequest cancel]
  -[YQLRequest loadRequest:]
  -[YQLRequest didParseData]
  -[YQLRequest _yahooDoppelganger_taskForRequest:delegate:]
  -[YQLRequest taskForRequest:delegate:]
  -[YQLRequest cancelAndInvalidate]
  -[YQLRequest YQLLanguageCode]
  -[YQLRequest YQLCountryCode]
  -[YQLRequest failToParseWithData:]
  -[YQLRequest failToParseWithDataSeriesDictionary:]
  -[YQLRequest _createDefaultSession]
  -[YQLRequest _loadDefaultSessionIfNeeded]


SCKDatabase : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKDatabaseStoreCoordinatorObserver>
 @property  SCKDatabaseSchema *schema
 @property  <SCKDatabaseStoreCoordinator> *storeCoordinator
 @property  <SCKContainerProxying> *container
 @property  NSArray *mergeHandlers
 @property  SCKStartupQueue *startupQueue
 @property  SCKAsyncSerialQueue *ckSyncQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSMutableDictionary *observersByZoneName
 @property  {os_unfair_lock_s=I} observersLock
 @property  long long status
 @property  NSMutableDictionary *zoneSnapshotsByZoneName

  // instance methods
  -[SCKDatabase schema]
  -[SCKDatabase observersLock]
  -[SCKDatabase setObserversByZoneName:]
  -[SCKDatabase synchronize]
  -[SCKDatabase callbackQueue]
  -[SCKDatabase _fetchZoneChangesForZones:completion:]
  -[SCKDatabase removeObserver:forZone:]
  -[SCKDatabase setZoneSnapshotsByZoneName:]
  -[SCKDatabase setSchema:]
  -[SCKDatabase mergeHandlers]
  -[SCKDatabase _deleteAndRecreateAllZonesWithCompletion:]
  -[SCKDatabase addObserver:forZone:]
  -[SCKDatabase initWithSchema:store:features:containerProxy:]
  -[SCKDatabase _zonesNeedingSave]
  -[SCKDatabase initWithSchema:store:migrationPlan:features:containerProxy:]
  -[SCKDatabase setCallbackQueue:]
  -[SCKDatabase .cxx_destruct]
  -[SCKDatabase readContentsOfZone:withBlock:]
  -[SCKDatabase zoneSnapshotsByZoneName]
  -[SCKDatabase container]
  -[SCKDatabase _runCKOperation:]
  -[SCKDatabase _createZoneInContainerWithSchema:completion:]
  -[SCKDatabase _zoneWithSchema:zoneStore:]
  -[SCKDatabase _emptyZonesNeedingFirstSync]
  -[SCKDatabase initWithSchema:store:features:mergeHandlers:containerProxy:]
  -[SCKDatabase setContainer:]
  -[SCKDatabase setMergeHandlers:]
  -[SCKDatabase setCkSyncQueue:]
  -[SCKDatabase startupQueue]
  -[SCKDatabase _saveZoneToContainer:allowRecoveryAttempt:completion:]
  -[SCKDatabase setObserversLock:]
  -[SCKDatabase _sanitizeErrorForClients:]
  -[SCKDatabase savePendingChangesToServerWithCompletion:]
  -[SCKDatabase storeCoordinator]
  -[SCKDatabase setStoreCoordinator:]
  -[SCKDatabase _saveZonesToContainer:allowRecoveryAttempt:completion:]
  -[SCKDatabase storeCoordinatorDiscoveredExternalChanges:]
  -[SCKDatabase handleRemoteNotification:completion:]
  -[SCKDatabase _fetchDatabaseAndZoneChangesWithCompletion:]
  -[SCKDatabase initWithSchema:store:migrationPlan:containerProxy:]
  -[SCKDatabase observersByZoneName]
  -[SCKDatabase modifyContentsOfZone:withCommand:]
  -[SCKDatabase setStartupQueue:]
  -[SCKDatabase setStatus:]
  -[SCKDatabase t_flushChangesWithTimeout:]
  -[SCKDatabase _zonesNeedingFetch]
  -[SCKDatabase _fetchDatabaseChangesWithCompletion:]
  -[SCKDatabase _enqueueStartupSequenceWithFeatures:]
  -[SCKDatabase _recoverFromIdentityLossWithCompletion:]
  -[SCKDatabase checkSyncingEnabledWithCompletion:]
  -[SCKDatabase status]
  -[SCKDatabase pollForChangesWithCondition:completion:]
  -[SCKDatabase _reloadSnapshotOfZone:fromStore:]
  -[SCKDatabase _squashZoneForMerge:zoneStore:]
  -[SCKDatabase ckSyncQueue]


VolumeGraphView : UIView /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport
 @property  StockGraphImageSet *graphImageSet

  // instance methods
  -[VolumeGraphView initWithFrame:]
  -[VolumeGraphView .cxx_destruct]
  -[VolumeGraphView resizeSelectedVolumeClipViewWithLeftX:rightX:]
  -[VolumeGraphView setShowingSelectedRegion:]
  -[VolumeGraphView setGraphImageSet:]
  -[VolumeGraphView graphImageSet]


SCKStubContainer : NSObject /System/Library/Frameworks/UIKit.framework/UIKit <SCKContainerProxying>
 @property  NSMutableDictionary *zoneContentsByZoneID
 @property  long long modifyZonesErrorMode
 @property  unsigned long modifyZonesOperationCount
 @property  NSArray *modifyZonesSavedZones
 @property  long long zoneChangesErrorMode
 @property  @? willFinishZoneChanges
 @property  unsigned long zoneChangesOperationCount
 @property  long long modifyRecordsErrorMode
 @property  @? willModifyRecords
 @property  unsigned long modifyRecordsOperationCount
 @property  NSArray *modifyRecordsSavedRecords
 @property  unsigned long modifySubscriptionsOperationCount
 @property  NSArray *modifySubscriptionsSavedSubscriptions
 @property  unsigned long databaseChangesOperationCount
 @property  NSArray *databaseChangesOperationChangedZoneIDs
 @property  BOOL accountInfoSupportsDeviceToDeviceEncryption
 @property  long long accountInfoErrorMode

  // instance methods
  -[SCKStubContainer init]
  -[SCKStubContainer .cxx_destruct]
  -[SCKStubContainer accountInfoWithCompletionHandler:]
  -[SCKStubContainer addDatabaseOperation:]
  -[SCKStubContainer zoneContentsByZoneID]
  -[SCKStubContainer contentsOfZone:]
  -[SCKStubContainer modifyZonesErrorMode]
  -[SCKStubContainer _errorForErrorMode:]
  -[SCKStubContainer modifyZonesSavedZones]
  -[SCKStubContainer zoneChangesErrorMode]
  -[SCKStubContainer _errorForErrorMode:itemIDs:]
  -[SCKStubContainer willFinishZoneChanges]
  -[SCKStubContainer willModifyRecords]
  -[SCKStubContainer modifyRecordsErrorMode]
  -[SCKStubContainer modifyRecordsSavedRecords]
  -[SCKStubContainer modifySubscriptionsSavedSubscriptions]
  -[SCKStubContainer databaseChangesOperationChangedZoneIDs]
  -[SCKStubContainer accountInfoErrorMode]
  -[SCKStubContainer accountInfoSupportsDeviceToDeviceEncryption]
  -[SCKStubContainer _ckErrorCodeForErrorMode:]
  -[SCKStubContainer setContentsOfZone:toRecords:]
  -[SCKStubContainer contentsOfZone:withType:]
  -[SCKStubContainer recordWithName:inZone:]
  -[SCKStubContainer setModifyZonesErrorMode:]
  -[SCKStubContainer modifyZonesOperationCount]
  -[SCKStubContainer setZoneChangesErrorMode:]
  -[SCKStubContainer setWillFinishZoneChanges:]
  -[SCKStubContainer zoneChangesOperationCount]
  -[SCKStubContainer setModifyRecordsErrorMode:]
  -[SCKStubContainer setWillModifyRecords:]
  -[SCKStubContainer modifyRecordsOperationCount]
  -[SCKStubContainer modifySubscriptionsOperationCount]
  -[SCKStubContainer databaseChangesOperationCount]
  -[SCKStubContainer setDatabaseChangesOperationChangedZoneIDs:]
  -[SCKStubContainer setAccountInfoSupportsDeviceToDeviceEncryption:]
  -[SCKStubContainer setAccountInfoErrorMode:]
  -[SCKStubContainer setZoneContentsByZoneID:]


NSURLRequest(StocksEasyPrinting)
	// instance methods
	-[NSURLRequest(StocksEasyPrinting) HTTPBodyString]

(SCKAdditions)
	// instance methods
	-[(SCKAdditions) sck_hasUnderlyingErrorCode:]

(SCKAdditions)
	// class methods
	+[(SCKAdditions) sck_object:isEqualToObject:]

(StockAdditions)
	// class methods
	+[(StockAdditions) stocks_sanitizedURLFromString:]

(SCKAdditions)
	// instance methods
	-[(SCKAdditions) sck_dictionaryWithKeyBlock:]
	-[(SCKAdditions) sck_containsObjectPassingTest:]

(YQLRequestAdditions)
	// instance methods
	-[(YQLRequestAdditions) yql_objectForKey:ofClass:]
	-[(YQLRequestAdditions) sck_objectsForKeys:]

CKContainer(SCKProxying)
	// instance methods
	-[CKContainer(SCKProxying) addDatabaseOperation:]

01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAccountInfo 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabaseSubscription 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchDatabaseChangesOperation 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 1000 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0d00 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 0500 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0500 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0600 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0700 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OACredential 
01 00 0700 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OAURLRequestSigner 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
