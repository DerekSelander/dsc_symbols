|| __DATA.__objc_data _OBJC_CLASS_$_AXTapToSpeakTimeManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXTapticChimeAsset
|| __DATA.__objc_data _OBJC_CLASS_$_AXTapticChimesScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_AXTimeOutputPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTapToSpeakTimeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTapticChimeAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTapticChimesScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTimeOutputPreferences
|| __TEXT.__const _AXTapToSpeakTimeVersionNumber
|| __TEXT.__const _AXTapToSpeakTimeVersionString
|| __TEXT.__text _AXStringFromTapToSpeakTimeGesture
|| __TEXT.__text _AXStringFromTapToSpeakTimeVoice
__ AVFoundation: _AVAudioSessionCategoryAmbient
__ AVFoundation: _AVAudioSessionCategoryVoiceOver
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayer
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AXCoreUtilities: _AXLogTapticTime
__ AXCoreUtilities: _AXPerformBlockOnMainThreadAfterDelay
__ AccessibilityUtilities: _AXIsBuddyCompleted
__ AccessibilityUtilities: _AXIsInternalInstall
__ AccessibilityUtilities: _AXProcessIsClockFace
__ AccessibilityUtilities: _AXSTapToSpeakTimeAvailabilityDefault
__ AccessibilityUtilities: _AXSTapToSpeakTimeDefaultEnabledState
__ AccessibilityUtilities: _AXSTapticChimesDefaultEnabledState
__ AccessibilityUtilities: _AXSTapticTimeDefaultEnabledState
__ AccessibilityUtilities: _AXSTapticTimeDefaultEnabledStateForVoiceOver
__ AccessibilityUtilities: _AXSVoiceOverTapticChimesFrequencyEncodingDefault
__ AccessibilityUtilities: _AXSVoiceOverTapticChimesSoundTypeDefault
__ AccessibilityUtilities: _AXSVoiceOverTapticChimesVolumeForSoundType
__ AccessibilityUtilities: _AXSVoiceOverTapticTimeEncodingDefault
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSettings
__ AccessibilityUtilities: _OBJC_CLASS_$_AXTapticTimeManager
__ AccessibilityUtilities: _OBJC_METACLASS_$_AXSettings
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AudioToolbox: _AudioServicesCreateSystemSoundIDWithOptions
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSoundWithCompletion
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionVibrationPatternKey
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ PersistentConnection: _OBJC_CLASS_$_PCSimpleTimer
__ SoftLinking: __sl_dlopen_audited
__ VoiceServices: _OBJC_CLASS_$_VSSpeechRequest
__ VoiceServices: _OBJC_CLASS_$_VSSpeechSynthesizer
__ libAXSpeechManager.dylib: _AXRemapLanguageCodeForSpeech
__ libAccessibility.dylib: __AXSTripleClickContainsOption
__ libAccessibility.dylib: _kAXSAccessibilityPreferenceDomain
__ libAccessibility.dylib: _kAXSVoiceOverTouchEnabledPreference
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AXTimeOutputPreferences : AXSettings /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[AXTimeOutputPreferences sharedInstance]

  // instance methods
  -[AXTimeOutputPreferences voiceOverTapticChimesFrequencyEncoding]
  -[AXTimeOutputPreferences tapToSpeakTimeLocalizedDescription]
  -[AXTimeOutputPreferences tapticTimeLocalizedTitle]
  -[AXTimeOutputPreferences tapticChimesLocalizedCurrentSounds]
  -[AXTimeOutputPreferences setTapToSpeakTimeEnabled:]
  -[AXTimeOutputPreferences setVoiceOverTapticTimeEncoding:]
  -[AXTimeOutputPreferences tapticChimesLocalizedCurrentFrequency]
  -[AXTimeOutputPreferences tapticChimesLocalizedTitle]
  -[AXTimeOutputPreferences tapticChimesSoundsOptions]
  -[AXTimeOutputPreferences tapticTimeModeLocalizedDescription]
  -[AXTimeOutputPreferences tapToSpeakTimeLocalizedTitle]
  -[AXTimeOutputPreferences voiceOverTapticChimesSoundType]
  -[AXTimeOutputPreferences tapticTimeLocalizedDescription]
  -[AXTimeOutputPreferences localizedStringForKey:]
  -[AXTimeOutputPreferences _voiceOverIsEnabled]
  -[AXTimeOutputPreferences tapToSpeakAvailabilityOptions]
  -[AXTimeOutputPreferences voiceOverTapticTimeEncoding]
  -[AXTimeOutputPreferences tapticTimeLocalizedCurrentMode]
  -[AXTimeOutputPreferences tapToSpeakTimeEnabled]
  -[AXTimeOutputPreferences accessibilityDomainAccessor]
  -[AXTimeOutputPreferences setTapToSpeakTimeAvailability:]
  -[AXTimeOutputPreferences tapticChimesSoundsLocalizedTitle]
  -[AXTimeOutputPreferences voiceOverTapticTimeMode]
  -[AXTimeOutputPreferences tapToSpeakTimeAvailability]
  -[AXTimeOutputPreferences setVoiceOverTapticChimesSoundType:]
  -[AXTimeOutputPreferences voiceOverTapticChimesEnabled]
  -[AXTimeOutputPreferences _npsBoolValueForPreferenceKey:defaultValue:]
  -[AXTimeOutputPreferences tapticChimesScheduleLocalizedTitle]
  -[AXTimeOutputPreferences setVoiceOverTapticTimeMode:]
  -[AXTimeOutputPreferences _voiceOverIsInTripleClick]
  -[AXTimeOutputPreferences _npsValueForPreferenceKey:]
  -[AXTimeOutputPreferences tapticTimeEncodingOptions]
  -[AXTimeOutputPreferences setVoiceOverTapticChimesFrequencyEncoding:]
  -[AXTimeOutputPreferences _npsValueForPreferenceKey:expectedClass:]
  -[AXTimeOutputPreferences tapticChimesLocalizedDescription]
  -[AXTimeOutputPreferences _npsIntegerValueForPreferenceKey:defaultValue:]
  -[AXTimeOutputPreferences localizedStringForTapticChimesSoundType:]
  -[AXTimeOutputPreferences localizedStringForTapticChimesFrequencyEncoding:]
  -[AXTimeOutputPreferences localizedStringForTapticTimeEncoding:]
  -[AXTimeOutputPreferences tapticChimesFrequencyOptions]
  -[AXTimeOutputPreferences setVoiceOverTapticChimesEnabled:]
  -[AXTimeOutputPreferences _setNPSValue:preferenceKey:]
  -[AXTimeOutputPreferences localizedStringForTapToSpeakTimeAvailability:]


AXTapticChimesScheduler : NSObject /usr/lib/libSystem.B.dylib <AVAudioPlayerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXTapticChimesScheduler sharedInstance]
  +[AXTapticChimesScheduler initializeIfNeeded]

  // instance methods
  -[AXTapticChimesScheduler _registerForNotifications]
  -[AXTapticChimesScheduler _unregisterForNotifications]
  -[AXTapticChimesScheduler dealloc]
  -[AXTapticChimesScheduler .cxx_destruct]
  -[AXTapticChimesScheduler audioPlayerDidFinishPlaying:successfully:]
  -[AXTapticChimesScheduler _init]
  -[AXTapticChimesScheduler _currentDate]
  -[AXTapticChimesScheduler processIsAllowedToScheduleChimes]
  -[AXTapticChimesScheduler _tapticChimesStateDidChange:]
  -[AXTapticChimesScheduler _scheduleChimeTimer]
  -[AXTapticChimesScheduler _previewChimes]
  -[AXTapticChimesScheduler _clearChimeTimer]
  -[AXTapticChimesScheduler canPlayTapticChime]
  -[AXTapticChimesScheduler canScheduleTapticChimes]
  -[AXTapticChimesScheduler _previewChimesForStartDate:chimeDate:frequency:soundType:]
  -[AXTapticChimesScheduler nextChimeAssetForStartDate:frequency:soundType:timeIntervalUntilChime:]
  -[AXTapticChimesScheduler _outputTapticChime:atDate:]
  -[AXTapticChimesScheduler _releasePowerAssertionIfPossible:]
  -[AXTapticChimesScheduler _denormalizeVolumeIfNecessary]
  -[AXTapticChimesScheduler _preWakeTimeInterval]
  -[AXTapticChimesScheduler _prePlayAudioTimeInterval]
  -[AXTapticChimesScheduler _chimeWakeTimerFired:]
  -[AXTapticChimesScheduler _createPowerAssertionWithName:timeout:]
  -[AXTapticChimesScheduler canPlayScheduledTapticChime]
  -[AXTapticChimesScheduler _normalizeVolumeIfNecessary]


AXTapToSpeakTimeManager : NSObject /usr/lib/libSystem.B.dylib <VSSpeechSynthesizerDelegate>
 @property  VSSpeechSynthesizer *vsSpeechSynthesizer
 @property  NSDateFormatter *dateFormatter
 @property  AXTapticTimeManager *tapticTimeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXTapToSpeakTimeManager sharedInstance]

  // instance methods
  -[AXTapToSpeakTimeManager dateFormatter]
  -[AXTapToSpeakTimeManager _registerForNotifications]
  -[AXTapToSpeakTimeManager _unregisterForNotifications]
  -[AXTapToSpeakTimeManager speechSynthesizer:didStartSpeakingRequest:]
  -[AXTapToSpeakTimeManager speechSynthesizer:didPauseSpeakingRequest:]
  -[AXTapToSpeakTimeManager speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:]
  -[AXTapToSpeakTimeManager speechSynthesizer:didContinueSpeakingRequest:]
  -[AXTapToSpeakTimeManager speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:]
  -[AXTapToSpeakTimeManager dealloc]
  -[AXTapToSpeakTimeManager .cxx_destruct]
  -[AXTapToSpeakTimeManager _currentLanguageCode]
  -[AXTapToSpeakTimeManager _init]
  -[AXTapToSpeakTimeManager _denormalizeVolumeIfNecessary]
  -[AXTapToSpeakTimeManager _normalizeVolumeIfNecessary]
  -[AXTapToSpeakTimeManager _ringerStateChanged]
  -[AXTapToSpeakTimeManager outputTime:preferredVoice:]
  -[AXTapToSpeakTimeManager outputTime:preferredVoice:withGesture:]
  -[AXTapToSpeakTimeManager _canSpeakTimeForVoice:andGesture:]
  -[AXTapToSpeakTimeManager _speakTime:preferredVoice:]
  -[AXTapToSpeakTimeManager _canTapticTime]
  -[AXTapToSpeakTimeManager _outputTapticTime:]
  -[AXTapToSpeakTimeManager vsSpeechSynthesizer]
  -[AXTapToSpeakTimeManager tapticTimeManager]
  -[AXTapToSpeakTimeManager _setupAudioSessionForVoice:]
  -[AXTapToSpeakTimeManager _getPremiumVoiceAsset]
  -[AXTapToSpeakTimeManager speechOutputDidComplete]
  -[AXTapToSpeakTimeManager outputTime:]
  -[AXTapToSpeakTimeManager stopOutput]
  -[AXTapToSpeakTimeManager _speakTime:withCharacterVoiceIdentifier:]
  -[AXTapToSpeakTimeManager _canOutputPremiumVoice]


AXTapticChimeAsset : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *hapticDictionary
 @property  NSString *audioFilePath
 @property  double prePlayTimeInterval
 @property  float volume
 @property  NSArray *hapticAtomEntries

  // class methods
  +[AXTapticChimeAsset quarterHourAssetForType:]
  +[AXTapticChimeAsset hourAssetForType:hour:]
  +[AXTapticChimeAsset _assetPathForChimeSoundType:fileName:]

  // instance methods
  -[AXTapticChimeAsset volume]
  -[AXTapticChimeAsset .cxx_destruct]
  -[AXTapticChimeAsset audioFilePath]
  -[AXTapticChimeAsset createSystemSoundIDForStartTime:]
  -[AXTapticChimeAsset hapticAtomEntries]
  -[AXTapticChimeAsset prePlayTimeInterval]
  -[AXTapticChimeAsset _initWithChimeSoundType:audioFilePath:hapticsFilePath:]
  -[AXTapticChimeAsset hapticDictionary]


01 00 0300 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayer 
01 00 0f00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0d00 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSettings 
01 00 0d00 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXTapticTimeManager 
01 00 0800 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0800 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCSimpleTimer 
01 00 0400 /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices: VSSpeechRequest 
01 00 0400 /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices: VSSpeechSynthesizer 
