|| __DATA.__data _WKWallpaperAppearanceDark
|| __DATA.__data _WKWallpaperAppearanceDefault
|| __DATA.__data _WKWallpaperKitErrorDomain
|| __DATA.__data _WKWallpaperLocationCoverSheet
|| __DATA.__data _WKWallpaperLocationHomeScreen
|| __DATA.__objc_data _OBJC_CLASS_$_WKAbstractWallpaper
|| __DATA.__objc_data _OBJC_CLASS_$_WKDefaultWallpaperManager
|| __DATA.__objc_data _OBJC_CLASS_$_WKDynamicWallpaper
|| __DATA.__objc_data _OBJC_CLASS_$_WKLiveWallpaper
|| __DATA.__objc_data _OBJC_CLASS_$_WKStillWallpaper
|| __DATA.__objc_data _OBJC_CLASS_$_WKWallpaperBundle
|| __DATA.__objc_data _OBJC_CLASS_$_WKWallpaperBundleCollection
|| __DATA.__objc_data _OBJC_CLASS_$_WKWallpaperBundleImporter
|| __DATA.__objc_data _OBJC_CLASS_$_WKWallpaperLocketViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WKAbstractWallpaper
|| __DATA.__objc_data _OBJC_METACLASS_$_WKDefaultWallpaperManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WKDynamicWallpaper
|| __DATA.__objc_data _OBJC_METACLASS_$_WKLiveWallpaper
|| __DATA.__objc_data _OBJC_METACLASS_$_WKStillWallpaper
|| __DATA.__objc_data _OBJC_METACLASS_$_WKWallpaperBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_WKWallpaperBundleCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_WKWallpaperBundleImporter
|| __DATA.__objc_data _OBJC_METACLASS_$_WKWallpaperLocketViewController
|| __TEXT.__text _WKBundleForWallpaperKitFramework
|| __TEXT.__text _WKLogForCategory
|| __TEXT.__text _WKLogicalScreenClassString
|| __TEXT.__text _WKStandardDisplayModeScreenSize
|| __TEXT.__text _WKStringFromWallpaperType
|| __TEXT.__text _WKSupportsLiveWallpapers
|| __TEXT.__text _WKWallpaperTypeFromString
|| __TEXT.__text _WKWallpapersBaseURL
|| __TEXT.__text _WK_LocalizedString
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGRectGetHeight
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ SettingsFoundation: _SFRuntimeAbsoluteFilePathForPath
__ SpringBoardFoundation: _SBFMagicWallpaperEnumeration
__ SpringBoardFoundation: _SBFMagicWallpaperThumbnail
__ SpringBoardFoundation: _kSBFMagicWallpaperDynamicSectionKey
__ UIKitCore: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKitCore: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKitCore: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKitCore: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKitCore: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKitCore: _OBJC_CLASS_$_UIBlurEffect
__ UIKitCore: _OBJC_CLASS_$_UIButton
__ UIKitCore: _OBJC_CLASS_$_UICollectionViewCell
__ UIKitCore: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKitCore: _OBJC_CLASS_$_UICollectionViewController
__ UIKitCore: _OBJC_CLASS_$_UIColor
__ UIKitCore: _OBJC_CLASS_$_UIDevice
__ UIKitCore: _OBJC_CLASS_$_UIFont
__ UIKitCore: _OBJC_CLASS_$_UIFontDescriptor
__ UIKitCore: _OBJC_CLASS_$_UIImage
__ UIKitCore: _OBJC_CLASS_$_UIScreen
__ UIKitCore: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKitCore: _OBJC_CLASS_$_UIView
__ UIKitCore: _OBJC_CLASS_$_UIVisualEffectView
__ UIKitCore: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKitCore: _OBJC_METACLASS_$_UICollectionViewController
__ UIKitCore: _UIContentSizeCategoryDidChangeNotification
__ UIKitCore: _UIFontTextStyleFootnote
__ UIKitCore: _UIFontTextStyleSubheadline
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
WKWallpaperBundle : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *_bundleURL
 @property  NSMutableDictionary *_defaultAppearanceWallpapers
 @property  NSMutableDictionary *_darkAppearanceWallpapers
 @property  unsigned long version
 @property  unsigned long identifier
 @property  NSString *name
 @property  NSString *family
 @property  NSURL *thumbnailImageURL
 @property  BOOL appearanceAware
 @property  BOOL distintWallpapersForLocations
 @property  BOOL dynamicWallpaperBundle

  // class methods
  +[WKWallpaperBundle shouldLoadWallpaperBundleAtURL:]

  // instance methods
  -[WKWallpaperBundle name]
  -[WKWallpaperBundle initWithURL:]
  -[WKWallpaperBundle .cxx_destruct]
  -[WKWallpaperBundle identifier]
  -[WKWallpaperBundle version]
  -[WKWallpaperBundle _bundleURL]
  -[WKWallpaperBundle family]
  -[WKWallpaperBundle thumbnailImageURL]
  -[WKWallpaperBundle fileBasedWallpaperForLocation:andAppearance:]
  -[WKWallpaperBundle isAppearanceAware]
  -[WKWallpaperBundle _loadBundle]
  -[WKWallpaperBundle isDynamicWallpaperBundle]
  -[WKWallpaperBundle valueBasedWallpaperForLocation:]
  -[WKWallpaperBundle hasDistintWallpapersForLocations]
  -[WKWallpaperBundle wallpaperBackingTypeForLocation:]
  -[WKWallpaperBundle fileBasedWallpaperForLocation:]
  -[WKWallpaperBundle _loadDynamicWallpaper:]
  -[WKWallpaperBundle _defaultAppearanceWallpapers]
  -[WKWallpaperBundle _raiseInvalidMetadataExceptionForMetadataKeypath:]
  -[WKWallpaperBundle _processAssetDictionary:forLocation:]
  -[WKWallpaperBundle _stillWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle _liveWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle _darkAppearanceWallpapers]
  -[WKWallpaperBundle valueBasedWallpaperForLocation:andAppearance:]
  -[WKWallpaperBundle _processCommonFileBackedWallpaperMetadataWithDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle initWithDynamicDictionary:identifier:]
  -[WKWallpaperBundle set_bundleURL:]
  -[WKWallpaperBundle set_defaultAppearanceWallpapers:]
  -[WKWallpaperBundle set_darkAppearanceWallpapers:]


WKLiveWallpaper : WKAbstractWallpaper <WKFileBasedWallpaper>
 @property  NSURL *thumbnailImageURL
 @property  NSURL *fullsizeImageURL
 @property  NSURL *videoAssetURL
 @property  double stillTimeInVideo
 @property  unsigned long identifier
 @property  NSString *name
 @property  unsigned long type

  // instance methods
  -[WKLiveWallpaper copyWithZone:]
  -[WKLiveWallpaper type]
  -[WKLiveWallpaper .cxx_destruct]
  -[WKLiveWallpaper initWithIdentifier:name:]
  -[WKLiveWallpaper setThumbnailImageURL:]
  -[WKLiveWallpaper thumbnailImageURL]
  -[WKLiveWallpaper stillTimeInVideo]
  -[WKLiveWallpaper setStillTimeInVideo:]
  -[WKLiveWallpaper fullsizeImageURL]
  -[WKLiveWallpaper videoAssetURL]
  -[WKLiveWallpaper initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:videoAssetURL:stillTimeInVideo:]
  -[WKLiveWallpaper setFullsizeImageURL:]
  -[WKLiveWallpaper setVideoAssetURL:]


WKMotionWallpaperCollectionViewCell : UICollectionViewCell
  // class methods
  +[WKMotionWallpaperCollectionViewCell reuseIdentifier]


WKPhotoWallpaperCollectionViewCell : UICollectionViewCell
  // class methods
  +[WKPhotoWallpaperCollectionViewCell reuseIdentifier]


WKAbstractWallpaper : NSObject /usr/lib/libSystem.B.dylib <WKWallpaper>
 @property  unsigned long type
 @property  unsigned long identifier
 @property  NSString *name

  // class methods
  +[WKAbstractWallpaper new]

  // instance methods
  -[WKAbstractWallpaper init]
  -[WKAbstractWallpaper name]
  -[WKAbstractWallpaper copyWithZone:]
  -[WKAbstractWallpaper type]
  -[WKAbstractWallpaper setType:]
  -[WKAbstractWallpaper .cxx_destruct]
  -[WKAbstractWallpaper identifier]
  -[WKAbstractWallpaper initWithIdentifier:name:]


WKWallpaperBundleCollection : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long wallpaperType
 @property  NSString *displayName
 @property  WKWallpaperBundle *previewBundle
 @property  NSMutableArray *_wallpaperBundles
 @property  NSMutableDictionary *_wallpaperLookup
 @property  long long numberOfItems

  // instance methods
  -[WKWallpaperBundleCollection .cxx_destruct]
  -[WKWallpaperBundleCollection displayName]
  -[WKWallpaperBundleCollection setDisplayName:]
  -[WKWallpaperBundleCollection numberOfItems]
  -[WKWallpaperBundleCollection wallpaperType]
  -[WKWallpaperBundleCollection wallpaperBundleAtIndex:]
  -[WKWallpaperBundleCollection previewBundle]
  -[WKWallpaperBundleCollection _wallpaperBundles]
  -[WKWallpaperBundleCollection _wallpaperLookup]
  -[WKWallpaperBundleCollection initWithWallpaperType:previewBundle:]
  -[WKWallpaperBundleCollection wallpaperBundleWithIdentifier:]
  -[WKWallpaperBundleCollection appendWallpaperBundle:]
  -[WKWallpaperBundleCollection setWallpaperType:]
  -[WKWallpaperBundleCollection setPreviewBundle:]
  -[WKWallpaperBundleCollection set_wallpaperBundles:]
  -[WKWallpaperBundleCollection set_wallpaperLookup:]


WKWallpaperBundleImporter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *_bundleImportQueue
 @property  NSArray *_wallpaperTypesOrdering
 @property  NSDictionary *_wallpaperTypeToBundleCollection
 @property  long long numberOfWallpaperBundleCollections

  // class methods
  +[WKWallpaperBundleImporter defaultWallpaperBundleImporter]
  +[WKWallpaperBundleImporter wallpapersConfigurationFileURL]

  // instance methods
  -[WKWallpaperBundleImporter init]
  -[WKWallpaperBundleImporter .cxx_destruct]
  -[WKWallpaperBundleImporter numberOfWallpaperBundleCollections]
  -[WKWallpaperBundleImporter wallpaperTypeAtIndex:]
  -[WKWallpaperBundleImporter wallpaperBundleCollectionForWallpaperType:]
  -[WKWallpaperBundleImporter _raiseInvalidMetadataExceptionForMetadataKeypath:]
  -[WKWallpaperBundleImporter wallpaperBundleWithIdentifier:]
  -[WKWallpaperBundleImporter _bundleImportQueue]
  -[WKWallpaperBundleImporter _loadWallpapersFromDisk]
  -[WKWallpaperBundleImporter _wallpaperTypesOrdering]
  -[WKWallpaperBundleImporter _wallpaperTypeToBundleCollection]
  -[WKWallpaperBundleImporter set_bundleImportQueue:]
  -[WKWallpaperBundleImporter set_wallpaperTypesOrdering:]
  -[WKWallpaperBundleImporter set_wallpaperTypeToBundleCollection:]


WKDefaultWallpaperManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *_defaultWallpaperLookup
 @property  WKWallpaperBundleImporter *_defaultWallpaperBundleImporter

  // class methods
  +[WKDefaultWallpaperManager deviceColor]
  +[WKDefaultWallpaperManager deviceEnclosureColor]
  +[WKDefaultWallpaperManager defaultWallpaperManager]
  +[WKDefaultWallpaperManager deviceProductType]
  +[WKDefaultWallpaperManager defaultWallpaperLookupURL]
  +[WKDefaultWallpaperManager _pathForStillWallpapers]
  +[WKDefaultWallpaperManager deviceLogicalScreenClass]

  // instance methods
  -[WKDefaultWallpaperManager init]
  -[WKDefaultWallpaperManager .cxx_destruct]
  -[WKDefaultWallpaperManager defaultWallpaperBundle]
  -[WKDefaultWallpaperManager _loadDefaultWallpaperFile]
  -[WKDefaultWallpaperManager set_defaultWallpaperLookup:]
  -[WKDefaultWallpaperManager _defaultWallpaperBundleImporter]
  -[WKDefaultWallpaperManager _defaultWallpaperLookup]
  -[WKDefaultWallpaperManager set_defaultWallpaperBundleImporter:]


WKStillWallpaper : WKAbstractWallpaper <WKFileBasedWallpaper>
 @property  NSURL *thumbnailImageURL
 @property  NSURL *fullsizeImageURL
 @property  unsigned long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  NSURL *videoAssetURL
 @property  double stillTimeInVideo

  // instance methods
  -[WKStillWallpaper copyWithZone:]
  -[WKStillWallpaper type]
  -[WKStillWallpaper .cxx_destruct]
  -[WKStillWallpaper initWithIdentifier:name:]
  -[WKStillWallpaper setThumbnailImageURL:]
  -[WKStillWallpaper thumbnailImageURL]
  -[WKStillWallpaper stillTimeInVideo]
  -[WKStillWallpaper fullsizeImageURL]
  -[WKStillWallpaper videoAssetURL]
  -[WKStillWallpaper initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:]
  -[WKStillWallpaper setFullsizeImageURL:]


WKDynamicWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  NSDictionary *_dynamicDictionary
 @property  UIImage *_thumbnailImage
 @property  unsigned long identifier
 @property  NSString *name
 @property  unsigned long type

  // instance methods
  -[WKDynamicWallpaper copyWithZone:]
  -[WKDynamicWallpaper type]
  -[WKDynamicWallpaper .cxx_destruct]
  -[WKDynamicWallpaper initWithIdentifier:name:]
  -[WKDynamicWallpaper _thumbnailImage]
  -[WKDynamicWallpaper thumbnailImage]
  -[WKDynamicWallpaper wallpaperValue]
  -[WKDynamicWallpaper initWithIdentifier:dictionary:]
  -[WKDynamicWallpaper _dynamicDictionary]
  -[WKDynamicWallpaper set_dynamicDictionary:]
  -[WKDynamicWallpaper set_thumbnailImage:]


WKWallpaperLocketViewController : UICollectionViewController
 @property  UIButton *_openSettingsButton
 @property  UIButton *_setWallpaperButton
 @property  UIButton *_doneButton
 @property  UITapGestureRecognizer *_tapGestureRecognizer
 @property  <WKWallpaperLocketViewControllerDelegate> *delegate

  // class methods
  +[WKWallpaperLocketViewController locketCollectionViewLayout]

  // instance methods
  -[WKWallpaperLocketViewController init]
  -[WKWallpaperLocketViewController delegate]
  -[WKWallpaperLocketViewController setDelegate:]
  -[WKWallpaperLocketViewController .cxx_destruct]
  -[WKWallpaperLocketViewController viewDidLoad]
  -[WKWallpaperLocketViewController numberOfSectionsInCollectionView:]
  -[WKWallpaperLocketViewController collectionView:numberOfItemsInSection:]
  -[WKWallpaperLocketViewController collectionView:cellForItemAtIndexPath:]
  -[WKWallpaperLocketViewController viewDidLayoutSubviews]
  -[WKWallpaperLocketViewController viewDidAppear:]
  -[WKWallpaperLocketViewController _configureSubviews]
  -[WKWallpaperLocketViewController _tapGestureRecognizer]
  -[WKWallpaperLocketViewController prefersStatusBarHidden]
  -[WKWallpaperLocketViewController _doneButton]
  -[WKWallpaperLocketViewController handleContentSizeCategoryDidChangeNotification:]
  -[WKWallpaperLocketViewController _configureCollectionView]
  -[WKWallpaperLocketViewController _userDidTapOnView:]
  -[WKWallpaperLocketViewController _showButtonsAnimated]
  -[WKWallpaperLocketViewController _setWallpaperButton]
  -[WKWallpaperLocketViewController _openSettingsButton]
  -[WKWallpaperLocketViewController set_tapGestureRecognizer:]
  -[WKWallpaperLocketViewController set_doneButton:]
  -[WKWallpaperLocketViewController _userDidTapOnDoneButton:]
  -[WKWallpaperLocketViewController set_setWallpaperButton:]
  -[WKWallpaperLocketViewController _userDidTapOnSetWallpaperButton:]
  -[WKWallpaperLocketViewController set_openSettingsButton:]
  -[WKWallpaperLocketViewController _userDidTapOnOpenSettingsButton:]
  -[WKWallpaperLocketViewController _hideButtonsAnimated]


UIButton(WKAdditions)
	// class methods
	+[UIButton(WKAdditions) wk_buttonWithBlurEffect]

01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: NSCollectionLayoutDimension 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: NSCollectionLayoutGroup 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: NSCollectionLayoutItem 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: NSCollectionLayoutSection 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: NSCollectionLayoutSize 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIBlurEffect 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIButton 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UICollectionViewCell 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UICollectionViewCompositionalLayout 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UICollectionViewController 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIColor 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIDevice 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIFont 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIFontDescriptor 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIImage 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIScreen 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UITapGestureRecognizer 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIView 
01 00 0d00 /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore: UIVisualEffectView 
