|| __DATA.__data _WKWallpaperKitErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_WKCurrentWallpaperManager
|| __DATA.__objc_data _OBJC_CLASS_$_WKPhotoLibraryManager
|| __DATA.__objc_data _OBJC_CLASS_$_WKPhotoWallpaperBundle
|| __DATA.__objc_data _OBJC_CLASS_$_WKSpringBoardMigrationInputSource
|| __DATA.__objc_data _OBJC_CLASS_$_WKSystemShellWallpaperManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WKCurrentWallpaperManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WKPhotoLibraryManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WKPhotoWallpaperBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_WKSpringBoardMigrationInputSource
|| __DATA.__objc_data _OBJC_METACLASS_$_WKSystemShellWallpaperManager
|| __DATA_CONST.__const _WKDefaultWallpapersCollectionIdentifier
|| __DATA_CONST.__const _WKDefaultWallpapersDefault
|| __DATA_CONST.__const _WKDefaultWallpapersWallpaperIdentifier
|| __DATA_CONST.__const _WKIgnoreLogicalScreenClassForWallpaperBundleKey
|| __DATA_CONST.__const _WKIgnoreProductTypesForWallpaperBundleKey
|| __DATA_CONST.__const _WKMigrationLastBuildVersionKey
|| __DATA_CONST.__const _WKWallpaperAppearanceDark
|| __DATA_CONST.__const _WKWallpaperAppearanceDefault
|| __DATA_CONST.__const _WKWallpaperAppearanceInactive
|| __DATA_CONST.__const _WKWallpaperAssetDownloadIdentifierDefault
|| __DATA_CONST.__const _WKWallpaperCollectionIdentifierDynamic
|| __DATA_CONST.__const _WKWallpaperCollectionIdentifierLive
|| __DATA_CONST.__const _WKWallpaperCollectionIdentifierStill
|| __DATA_CONST.__const _WKWallpaperKitDataDisableParallaxKey
|| __DATA_CONST.__const _WKWallpaperLocationCoverSheet
|| __DATA_CONST.__const _WKWallpaperLocationHomeScreen
|| __DATA_CONST.__const _WKWallpaperLocationLockAndHomeScreen
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAppearanceAwareKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBackgroundAnimationFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBackgroundColorKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBackgroundColorsKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBackgroundFullSizeImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBackgroundThumbnailImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBubbleColorsKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBubbleCountKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetBubbleScaleKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFirstStripeVerticalOffsetScaleFactorKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFloatingAnimationFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFloatingFullSizeImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFloatingThumbnailImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetForegroundAnimationFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetForegroundFullSizeImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetForegroundThumbnailImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFullSizeImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetFullSizeImageFileURLKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetIdentifierKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetParallaxMultiplierKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetRepresentedWallpaperTypeKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetStillTimeInVideoKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetStripeAngleDegreesKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetStripeHeightFactorKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetThumbnailImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetThumbnailImageFileURLKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetThumbnailSeedKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetVideoFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetWallpaperTypeKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetsHomeKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetsKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetsLockAndHomeKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionAssetsLockKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionDisableParallaxKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionFamilyKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionIdentifierKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionLogicalScreenClassKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionOffloadedKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionProductTypesKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionThumbnailImageFileNameKey
|| __DATA_CONST.__const _WKWallpaperMetadataOptionVersionNumberKey
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionIdentifier
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionIsLegacyContent
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionName
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionOrder
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionSource
|| __DATA_CONST.__const _WKWallpaperRepresentingCollectionOptionWallpapersShareBaseAppearance
|| __DATA_CONST.__const _WKWallpaperRepresentingLogicalScreenClassAny
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKAbstractWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKBokehView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKBokehWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKBokehWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKColorWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKDefaultWallpaperManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKDynamicWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKHeritageStripeImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredAnimationWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredAnimationWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredStillWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredStillWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredStripeWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredStripeWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredThumbnailWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLayeredThumbnailWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLegacyWallpaperBundleLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKLiveWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKPhotoAssetWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKSBSetWallpaperParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKStillWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKStripeWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKThumbnailWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperBundle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperBundleCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperBundleDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperBundleImporter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperPreviewViewControllerFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperRepresentingCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WKWallpaperRepresentingCollectionsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKAbstractWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKBokehView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKBokehWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKBokehWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKColorWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKDefaultWallpaperManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKDynamicWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKHeritageStripeImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKIndicatorView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredAnimationWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredAnimationWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredStillWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredStillWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredStripeWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredStripeWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredThumbnailWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLayeredThumbnailWallpaperInput
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLegacyWallpaperBundleLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKLiveWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKPhotoAssetWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKSBSetWallpaperParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKStillWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKStripeWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKThumbnailWallpaper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperBundle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperBundleCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperBundleDownloadManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperBundleImporter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperPreviewViewControllerFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperRepresentingCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WKWallpaperRepresentingCollectionsManager
|| __TEXT.__text _WKAllowCroppingForWallpaperAtLockScreen
|| __TEXT.__text _WKBundleForWallpaperKitFramework
|| __TEXT.__text _WKFloatEqualToFloat
|| __TEXT.__text _WKFloatIsOne
|| __TEXT.__text _WKFloatIsZero
|| __TEXT.__text _WKIdealWallpaperSize
|| __TEXT.__text _WKLayeredBokehEnabled
|| __TEXT.__text _WKLogForCategory
|| __TEXT.__text _WKLogicalScreenClassString
|| __TEXT.__text _WKParallaxFactorForWallpaper
|| __TEXT.__text _WKRectApplyScale
|| __TEXT.__text _WKRectNormalize
|| __TEXT.__text _WKSizeApplyScale
|| __TEXT.__text _WKSizeGreaterThanOrEqualToSize
|| __TEXT.__text _WKStandardDisplayModeScreenSize
|| __TEXT.__text _WKStringFromWallpaperBackingType
|| __TEXT.__text _WKStringFromWallpaperContentSource
|| __TEXT.__text _WKStringFromWallpaperType
|| __TEXT.__text _WKSupportsLiveWallpapers
|| __TEXT.__text _WKSupportsPosters
|| __TEXT.__text _WKSupportsProceduralWallpapers
|| __TEXT.__text _WKWallpaperContentSourceFromString
|| __TEXT.__text _WKWallpaperTypeFromString
|| __TEXT.__text _WKWallpapersBaseURL
|| __TEXT.__text _WK_LocalizedString
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AppSupport: _CPSharedResourcesDirectory
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMTimeGetSeconds
__ CoreMotion: _OBJC_CLASS_$_CMMotionManager
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSLocalizedFailureErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ NetAppsUtilities: _OBJC_CLASS_$_NADescriptionBuilder
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAIdentityBuilder
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperConfigurationManager
__ PaperBoardUI: _OBJC_CLASS_$_PBUIWallpaperDirectoryDataStore
__ PaperBoardUI: _PBUIStringForWallpaperMode
__ PaperBoardUI: _PBUIStringForWallpaperType
__ PaperBoardUI: _PBUIStringForWallpaperVariant
__ PaperBoardUI: _kPBUIMagicWallpaperPresetOptionsBokehVariantKey
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHVideoRequestOptions
__ Photos: _PHImageErrorKey
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _CA_CGRectApplyTransform
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _OBJC_CLASS_$_CAStateSetValue
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFilterLightenBlendMode
__ QuartzCore: _kCAGravityResizeAspectFill
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ SettingsFoundation: _SFRuntimeAbsoluteFilePathForPath
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperOptions
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperParallaxSettings
__ SpringBoardFoundation: _SBFMagicWallpaperEnumeration
__ SpringBoardFoundation: _SBFMagicWallpaperThumbnail
__ SpringBoardFoundation: _SBFStringForWallpaperMode
__ SpringBoardFoundation: _kSBFMagicWallpaperDynamicSectionKey
__ SpringBoardUIServices: _OBJC_CLASS_$_SBSUIWallpaperPreviewViewController
__ SpringBoardUIServices: _SBSUIMagicWallpaperSetWithOptions
__ SpringBoardUIServices: _SBSUIWallpaperSetImagesAndVideos
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDeferredMenuElement
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuElement
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIApp
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectGetCenter
__ UIKit: __UITraitCollectionDisplayCornerRadiusUnspecified
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _rand_r
__ libSystem.B.dylib: _tan
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_dynamicCastObjCProtocolConditional
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_getAtKeyPath
__ libswiftCore.dylib: _swift_getDynamicType
__ libswiftCore.dylib: _swift_getEnumCaseMultiPayload
__ libswiftCore.dylib: _swift_getEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_initStructMetadata
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_storeEnumTagMultiPayload
__ libswiftCore.dylib: _swift_storeEnumTagSinglePayloadGeneric
__ libswiftCore.dylib: _swift_unexpectedError
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_weakDestroy
__ libswiftCore.dylib: _swift_weakInit
__ libswiftCore.dylib: _swift_weakLoadStrong
__ libswiftCore.dylib: _swift_willThrow
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_defaultActor_deallocate
__ libswift_Concurrency.dylib: _swift_defaultActor_destroy
__ libswift_Concurrency.dylib: _swift_defaultActor_initialize
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
WKLegacyWallpaperBundleLoader : NSObject
 @property  NSObject<OS_dispatch_queue> *_loadingQueue
 @property  NSFileManager *_fileManager
 @property  NSDictionary *_wallpaperBundleLookup

  // class methods
  +[WKLegacyWallpaperBundleLoader defaultWallpaperBundleLoader]
  +[WKLegacyWallpaperBundleLoader legacyWallpaperDirectories]

  // instance methods
  -[WKLegacyWallpaperBundleLoader _wallpaperBundleLookup]
  -[WKLegacyWallpaperBundleLoader _loadingQueue]
  -[WKLegacyWallpaperBundleLoader .cxx_destruct]
  -[WKLegacyWallpaperBundleLoader set_loadingQueue:]
  -[WKLegacyWallpaperBundleLoader set_fileManager:]
  -[WKLegacyWallpaperBundleLoader _fileManager]
  -[WKLegacyWallpaperBundleLoader _loadAllValidWallpaperBundlesFromLegacyLocation]
  -[WKLegacyWallpaperBundleLoader wallpaperBundleForIdentifier:]
  -[WKLegacyWallpaperBundleLoader set_wallpaperBundleLookup:]
  -[WKLegacyWallpaperBundleLoader init]


WKWallpaperBundle : NSObject <NAIdentifiable, WKDescribable, WKWallpaperRepresenting>
 @property  NSMutableDictionary *_wallpaperAssetLookup
 @property  UIImage *_thumbnailImage
 @property  BOOL _hasCalculatedSupportsSerialization
 @property  BOOL _supportsSerialization
 @property  NSURL *_bundleURL
 @property  long long version
 @property  long long identifier
 @property  NSString *name
 @property  NSString *family
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NADescriptionBuilder *wk_descriptionBuilder
 @property  @? descriptionBuilderBlock
 @property  BOOL appearanceAware
 @property  BOOL distinctWallpapersForLocations
 @property  BOOL dynamicWallpaperBundle
 @property  NSString *identifierString
 @property  NSString *logicalScreenClass
 @property  unsigned long contentSource
 @property  BOOL disableParallax
 @property  BOOL offloaded
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKWallpaperBundle _createWallpaperBundleInDirectory:version:identifier:name:family:disableParallax:isOffloaded:logicalScreenClass:thumbnailImageURL:assetMapping:]
  +[WKWallpaperBundle na_identity]
  +[WKWallpaperBundle shouldLoadWallpaperBundleAtURL:]
  +[WKWallpaperBundle createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:]

  // instance methods
  -[WKWallpaperBundle contentSource]
  -[WKWallpaperBundle _layeredStripeWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle identifier]
  -[WKWallpaperBundle _bokehWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle logicalScreenClass]
  -[WKWallpaperBundle family]
  -[WKWallpaperBundle _supportsSerialization]
  -[WKWallpaperBundle _hasCalculatedSupportsSerialization]
  -[WKWallpaperBundle initWithURL:]
  -[WKWallpaperBundle supportsCopying]
  -[WKWallpaperBundle valueBasedWallpaperForLocation:andAppearance:]
  -[WKWallpaperBundle _thumbnailWallpaperWithMetadataDictionary:representedType:wallpaperAppearance:]
  -[WKWallpaperBundle _raiseInvalidMetadataExceptionForMetadataKeypath:]
  -[WKWallpaperBundle valueBasedWallpaperForLocation:]
  -[WKWallpaperBundle _colorWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle identifierString]
  -[WKWallpaperBundle isAppearanceAware]
  -[WKWallpaperBundle copyWallpaperRepresentingToDestinationDirectoryURL:error:]
  -[WKWallpaperBundle set_supportsSerialization:]
  -[WKWallpaperBundle _bundleURL]
  -[WKWallpaperBundle _thumbnailImage]
  -[WKWallpaperBundle .cxx_destruct]
  -[WKWallpaperBundle _processCommonFileBackedWallpaperMetadataWithDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle _stillWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle fileBasedWallpaperForLocation:andAppearance:]
  -[WKWallpaperBundle version]
  -[WKWallpaperBundle _processCommonWallpaperMetadataWithDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle set_thumbnailImage:]
  -[WKWallpaperBundle thumbnailImageURL]
  -[WKWallpaperBundle set_wallpaperAssetLookup:]
  -[WKWallpaperBundle _loadDynamicWallpaper:]
  -[WKWallpaperBundle copyWithZone:]
  -[WKWallpaperBundle _processAssetDictionary:forLocation:]
  -[WKWallpaperBundle _wallpaperAssetLookup]
  -[WKWallpaperBundle name]
  -[WKWallpaperBundle isOffloaded]
  -[WKWallpaperBundle _layeredStillWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle set_hasCalculatedSupportsSerialization:]
  -[WKWallpaperBundle fileBasedWallpaperForLocation:]
  -[WKWallpaperBundle set_bundleURL:]
  -[WKWallpaperBundle thumbnailImage]
  -[WKWallpaperBundle _layeredThumbnailWallpaperWithMetadataDictionary:representedType:wallpaperAppearance:]
  -[WKWallpaperBundle disableParallax]
  -[WKWallpaperBundle isDynamicWallpaperBundle]
  -[WKWallpaperBundle _stripeWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle initWithDynamicDictionary:identifier:]
  -[WKWallpaperBundle hasDistinctWallpapersForLocations]
  -[WKWallpaperBundle thumbnailRepresentableForLocation:andAppearance:]
  -[WKWallpaperBundle _liveWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle thumbnailRepresentableForLocation:]
  -[WKWallpaperBundle descriptionBuilderBlock]
  -[WKWallpaperBundle _layeredAnimationWallpaperWithMetadataDictionary:wallpaperAppearance:]
  -[WKWallpaperBundle isEqual:]
  -[WKWallpaperBundle _loadBundle]
  -[WKWallpaperBundle wallpaperBackingTypeForLocation:]
  -[WKWallpaperBundle wk_descriptionBuilder]


WKLayeredStripeWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  UIImage *_thumbnailImage
 @property  WKLayeredStripeWallpaperInput *_wallpaperValue
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKLayeredStripeWallpaper na_identity]

  // instance methods
  -[WKLayeredStripeWallpaper propertyListRepresentation]
  -[WKLayeredStripeWallpaper supportsCopying]
  -[WKLayeredStripeWallpaper wallpaperValue]
  -[WKLayeredStripeWallpaper _thumbnailImage]
  -[WKLayeredStripeWallpaper .cxx_destruct]
  -[WKLayeredStripeWallpaper set_wallpaperValue:]
  -[WKLayeredStripeWallpaper set_thumbnailImage:]
  -[WKLayeredStripeWallpaper thumbnailImageURL]
  -[WKLayeredStripeWallpaper supportsSerialization]
  -[WKLayeredStripeWallpaper copyWithZone:]
  -[WKLayeredStripeWallpaper _wallpaperValue]
  -[WKLayeredStripeWallpaper initWithIdentifier:name:backgroundColor:stripeAngleDegrees:stripeHeightFactor:firstStripeOffsetScaleFactor:]
  -[WKLayeredStripeWallpaper thumbnailImage]
  -[WKLayeredStripeWallpaper descriptionBuilderBlock]
  -[WKLayeredStripeWallpaper isEqual:]


WKLiveWallpaper : WKStillWallpaper <WKFileBasedWallpaper>
 @property  NSURL *videoAssetURL
 @property  double stillTimeInVideo
 @property  NSURL *fullsizeImageURL
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKLiveWallpaper na_identity]

  // instance methods
  -[WKLiveWallpaper propertyListRepresentation]
  -[WKLiveWallpaper stillTimeInVideo]
  -[WKLiveWallpaper .cxx_destruct]
  -[WKLiveWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKLiveWallpaper copyWithZone:]
  -[WKLiveWallpaper setStillTimeInVideo:]
  -[WKLiveWallpaper descriptionBuilderBlock]
  -[WKLiveWallpaper isEqual:]
  -[WKLiveWallpaper videoAssetURL]
  -[WKLiveWallpaper initWithIdentifier:name:type:thumbnailImageURL:fullsizeImageURL:videoAssetURL:stillTimeInVideo:]
  -[WKLiveWallpaper setVideoAssetURL:]


WKBokehWallpaperInput : NSObject <NSCopying>
 @property  NSArray *backgroundColors
 @property  NSArray *bubbleColors
 @property  unsigned long bubbleCount
 @property  double bubbleScale
 @property  double parallaxMultiplier
 @property  unsigned long thumbnailSeed

  // class methods
  +[WKBokehWallpaperInput new]
  +[WKBokehWallpaperInput na_identity]

  // instance methods
  -[WKBokehWallpaperInput bubbleScale]
  -[WKBokehWallpaperInput bubbleCount]
  -[WKBokehWallpaperInput bubbleColors]
  -[WKBokehWallpaperInput .cxx_destruct]
  -[WKBokehWallpaperInput parallaxMultiplier]
  -[WKBokehWallpaperInput thumbnailSeed]
  -[WKBokehWallpaperInput initWithBackgroundColors:bubbleColors:bubbleCount:bubbleScale:parallaxMultiplier:thumbnailSeed:]
  -[WKBokehWallpaperInput copyWithZone:]
  -[WKBokehWallpaperInput descriptionBuilderBlock]
  -[WKBokehWallpaperInput isEqual:]
  -[WKBokehWallpaperInput init]
  -[WKBokehWallpaperInput backgroundColors]
  -[WKBokehWallpaperInput wk_descriptionBuilder]


WKSpringBoardMigrationInputSource : NSObject <WKWallpaperInputSource>
 @property  NSMutableDictionary *_wallpaperBokehVariantLookup
 @property  NSMutableDictionary *_wallpaperColorLookup
 @property  NSMutableDictionary *_wallpaperOriginalImageLookup
 @property  NSMutableDictionary *_wallpaperImageLookup
 @property  NSMutableDictionary *_wallpaperOriginalVideoURLLookup
 @property  NSMutableDictionary *_wallpaperVideoURLLookup
 @property  NSMutableDictionary *_wallpaperOptionsLookup
 @property  unsigned long lockScreenWallpaperType
 @property  unsigned long homeScreenWallpaperType
 @property  BOOL homeScreenMirrorsLockScreen
 @property  BOOL lockScreenIsAppearanceAware
 @property  BOOL lockScreenIsSystemContent
 @property  BOOL homeScreenIsAppearanceAware
 @property  BOOL homeScreenIsSystemContent

  // instance methods
  -[WKSpringBoardMigrationInputSource .cxx_destruct]
  -[WKSpringBoardMigrationInputSource initWithConfigurationManager:]
  -[WKSpringBoardMigrationInputSource wallpaperTypeForLocation:]
  -[WKSpringBoardMigrationInputSource isAppearanceWallpaperAtLocation:]
  -[WKSpringBoardMigrationInputSource bokehVariantForLocation:]
  -[WKSpringBoardMigrationInputSource wallpaperOriginalImageForLocation:wallpaperAppearance:]
  -[WKSpringBoardMigrationInputSource wallpaperImageForLocation:wallpaperAppearance:]
  -[WKSpringBoardMigrationInputSource wallpaperOriginalVideoURLForLocation:wallpaperAppearance:]
  -[WKSpringBoardMigrationInputSource wallpaperVideoURLForLocation:wallpaperAppearance:]
  -[WKSpringBoardMigrationInputSource wallpaperColorForLocation:]
  -[WKSpringBoardMigrationInputSource wallpaperOptionsForLocation:wallpaperAppearance:]
  -[WKSpringBoardMigrationInputSource lockScreenWallpaperType]
  -[WKSpringBoardMigrationInputSource homeScreenWallpaperType]
  -[WKSpringBoardMigrationInputSource homeScreenMirrorsLockScreen]
  -[WKSpringBoardMigrationInputSource isLockScreenIsAppearanceAware]
  -[WKSpringBoardMigrationInputSource isLockScreenIsSystemContent]
  -[WKSpringBoardMigrationInputSource isHomeScreenIsAppearanceAware]
  -[WKSpringBoardMigrationInputSource isHomeScreenIsSystemContent]
  -[WKSpringBoardMigrationInputSource _populateMigrationInputWithConfigurationManager:]
  -[WKSpringBoardMigrationInputSource _isWallpaperConfigurationAppleSystemContent:]
  -[WKSpringBoardMigrationInputSource _isAppearanceAwareWallpaperAtLocation:withConfigurationManager:]
  -[WKSpringBoardMigrationInputSource _wallpaperBokehVariantLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperBokehVariantLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperColorLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperColorLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperOriginalImageLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperOriginalImageLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperImageLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperImageLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperOriginalVideoURLLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperOriginalVideoURLLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperVideoURLLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperVideoURLLookup:]
  -[WKSpringBoardMigrationInputSource _wallpaperOptionsLookup]
  -[WKSpringBoardMigrationInputSource set_wallpaperOptionsLookup:]


WKStripeWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  NSURL *_thumbnailImageURL
 @property  UIColor *_backgroundColor
 @property  UIImage *_thumbnailImage
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKStripeWallpaper na_identity]

  // instance methods
  -[WKStripeWallpaper propertyListRepresentation]
  -[WKStripeWallpaper _backgroundColor]
  -[WKStripeWallpaper supportsCopying]
  -[WKStripeWallpaper wallpaperValue]
  -[WKStripeWallpaper _thumbnailImage]
  -[WKStripeWallpaper .cxx_destruct]
  -[WKStripeWallpaper set_thumbnailImage:]
  -[WKStripeWallpaper initWithIdentifier:name:]
  -[WKStripeWallpaper thumbnailImageURL]
  -[WKStripeWallpaper supportsSerialization]
  -[WKStripeWallpaper initWithIdentifier:name:backgroundColor:]
  -[WKStripeWallpaper copyWithZone:]
  -[WKStripeWallpaper set_thumbnailImageURL:]
  -[WKStripeWallpaper thumbnailImage]
  -[WKStripeWallpaper descriptionBuilderBlock]
  -[WKStripeWallpaper isEqual:]
  -[WKStripeWallpaper set_backgroundColor:]
  -[WKStripeWallpaper _thumbnailImageURL]


WKPhotoAssetWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  PHAsset *_asset
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // instance methods
  -[WKPhotoAssetWallpaper wallpaperValue]
  -[WKPhotoAssetWallpaper type]
  -[WKPhotoAssetWallpaper .cxx_destruct]
  -[WKPhotoAssetWallpaper _asset]
  -[WKPhotoAssetWallpaper copyWithZone:]
  -[WKPhotoAssetWallpaper thumbnailImage]
  -[WKPhotoAssetWallpaper backingType]
  -[WKPhotoAssetWallpaper initWithPhotoAsset:]
  -[WKPhotoAssetWallpaper set_asset:]


WKPhotoLibraryManager : NSObject
 @property  NSFileManager *_fileManager
 @property  NSUserDefaults *_userDefaults
 @property  PHPhotoLibrary *_systemPhotoLibrary
 @property  NSObject<OS_dispatch_queue> *_workHandlerQueue

  // class methods
  +[WKPhotoLibraryManager sharedManager]
  +[WKPhotoLibraryManager _isRunningInPlaygroundSimulator]

  // instance methods
  -[WKPhotoLibraryManager _userDefaults]
  -[WKPhotoLibraryManager .cxx_destruct]
  -[WKPhotoLibraryManager set_fileManager:]
  -[WKPhotoLibraryManager _fileManager]
  -[WKPhotoLibraryManager initWithFileManager:]
  -[WKPhotoLibraryManager _systemPhotoLibrary]
  -[WKPhotoLibraryManager _classicRetrieveSystemShellPreviewPayloadForAsset:completion:]
  -[WKPhotoLibraryManager retrieveSystemShellPreviewPayloadForAsset:completion:]
  -[WKPhotoLibraryManager _retrieveImageForAsset:version:]
  -[WKPhotoLibraryManager _retrieveURLAssetForAsset:]
  -[WKPhotoLibraryManager set_userDefaults:]
  -[WKPhotoLibraryManager set_systemPhotoLibrary:]
  -[WKPhotoLibraryManager _workHandlerQueue]
  -[WKPhotoLibraryManager set_workHandlerQueue:]


WKIndicatorView : UIView
 @property  BOOL _hasBeenConfigured
 @property  _UIBackdropView *_backdropView
 @property  UIActivityIndicatorView *_activityIndicatorView
 @property  UILabel *_label

  // instance methods
  -[WKIndicatorView _activityIndicatorView]
  -[WKIndicatorView .cxx_destruct]
  -[WKIndicatorView _label]
  -[WKIndicatorView initWithFrame:]
  -[WKIndicatorView _backdropView]
  -[WKIndicatorView _hasBeenConfigured]
  -[WKIndicatorView _configureViewIfNeeded]
  -[WKIndicatorView showViewWithMessage:inHostingView:]
  -[WKIndicatorView hideViewAndRemoveFromHostingView]
  -[WKIndicatorView set_hasBeenConfigured:]
  -[WKIndicatorView set_backdropView:]
  -[WKIndicatorView set_activityIndicatorView:]
  -[WKIndicatorView set_label:]


WKBokehWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  UIImage *_thumbnailImage
 @property  WKBokehWallpaperInput *_wallpaperValue
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKBokehWallpaper na_identity]

  // instance methods
  -[WKBokehWallpaper propertyListRepresentation]
  -[WKBokehWallpaper supportsCopying]
  -[WKBokehWallpaper wallpaperValue]
  -[WKBokehWallpaper _thumbnailImage]
  -[WKBokehWallpaper .cxx_destruct]
  -[WKBokehWallpaper initWithIdentifier:name:backgroundColors:bubbleColors:bubbleCount:bubbleScale:parallaxMultiplier:thumbnailSeed:]
  -[WKBokehWallpaper set_wallpaperValue:]
  -[WKBokehWallpaper set_thumbnailImage:]
  -[WKBokehWallpaper thumbnailImageURL]
  -[WKBokehWallpaper supportsSerialization]
  -[WKBokehWallpaper copyWithZone:]
  -[WKBokehWallpaper _wallpaperValue]
  -[WKBokehWallpaper thumbnailImage]
  -[WKBokehWallpaper descriptionBuilderBlock]
  -[WKBokehWallpaper isEqual:]


WKLayeredAnimationWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  WKLayeredAnimationWallpaperInput *_wallpaperValue
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKLayeredAnimationWallpaper na_identity]

  // instance methods
  -[WKLayeredAnimationWallpaper initWithIdentifier:name:backgroundAnimationFileURL:foregroundAnimationFileURL:floatingAnimationFileURL:]
  -[WKLayeredAnimationWallpaper propertyListRepresentation]
  -[WKLayeredAnimationWallpaper supportsCopying]
  -[WKLayeredAnimationWallpaper wallpaperValue]
  -[WKLayeredAnimationWallpaper .cxx_destruct]
  -[WKLayeredAnimationWallpaper set_wallpaperValue:]
  -[WKLayeredAnimationWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKLayeredAnimationWallpaper thumbnailImageURL]
  -[WKLayeredAnimationWallpaper supportsSerialization]
  -[WKLayeredAnimationWallpaper copyWithZone:]
  -[WKLayeredAnimationWallpaper _wallpaperValue]
  -[WKLayeredAnimationWallpaper thumbnailImage]
  -[WKLayeredAnimationWallpaper descriptionBuilderBlock]
  -[WKLayeredAnimationWallpaper isEqual:]


WKSBSetWallpaperParameters : NSObject
 @property  <WKWallpaperRepresenting> *wallpaperRepresenting
 @property  NSString *wallpaperLocation
 @property  BOOL isProceduralWallpaper

  // instance methods
  -[WKSBSetWallpaperParameters .cxx_destruct]
  -[WKSBSetWallpaperParameters initForHomeScreenWithWallpaperRepresenting:]
  -[WKSBSetWallpaperParameters initForLockScreenWithWallpaperRepresenting:]
  -[WKSBSetWallpaperParameters isProceduralWallpaper]
  -[WKSBSetWallpaperParameters resolveParametersForWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters resolveParametersForProceduralWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _retrieveLockScreenPreviewForAppleSystemFileBasedWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _retrieveHomeScreenPreviewForAppleSystemFileBasedWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _retrievePreviewForAppleSystemDynamicWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _retrieveHomeScreenPreviewForAppleSystemValueBasedWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _wallpaperPreviewInputForStripeWallpaper:wallpaperMode:]
  -[WKSBSetWallpaperParameters _wallpaperPreviewInputsForStripesWallpaperRepresenting]
  -[WKSBSetWallpaperParameters _retrievePreviewForAppleSystemStripeWallpaperRepresentingWithCompletion:]
  -[WKSBSetWallpaperParameters _retrieveLockScreenPreviewForCustomPhotoWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters _retrieveHomeScreenPreviewForCustomPhotoWallpaperWithCompletion:]
  -[WKSBSetWallpaperParameters wallpaperRepresenting]
  -[WKSBSetWallpaperParameters wallpaperLocation]


WKLayeredThumbnailWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  UIImage *_thumbnailImage
 @property  WKLayeredThumbnailWallpaperInput *_wallpaperValue
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKLayeredThumbnailWallpaper na_identity]

  // instance methods
  -[WKLayeredThumbnailWallpaper propertyListRepresentation]
  -[WKLayeredThumbnailWallpaper supportsCopying]
  -[WKLayeredThumbnailWallpaper wallpaperValue]
  -[WKLayeredThumbnailWallpaper _thumbnailImage]
  -[WKLayeredThumbnailWallpaper .cxx_destruct]
  -[WKLayeredThumbnailWallpaper set_wallpaperValue:]
  -[WKLayeredThumbnailWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKLayeredThumbnailWallpaper set_thumbnailImage:]
  -[WKLayeredThumbnailWallpaper thumbnailImageURL]
  -[WKLayeredThumbnailWallpaper supportsSerialization]
  -[WKLayeredThumbnailWallpaper copyWithZone:]
  -[WKLayeredThumbnailWallpaper _wallpaperValue]
  -[WKLayeredThumbnailWallpaper thumbnailImage]
  -[WKLayeredThumbnailWallpaper descriptionBuilderBlock]
  -[WKLayeredThumbnailWallpaper isEqual:]
  -[WKLayeredThumbnailWallpaper initWithIdentifier:name:type:representedType:backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:]


WKBokehImageArbiter : NSObject

WKAbstractWallpaper : NSObject <WKDescribable, NAIdentifiable, WKWallpaper>
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  NADescriptionBuilder *wk_descriptionBuilder
 @property  NSString *description
 @property  @? descriptionBuilderBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription
 @property  long long identifier
 @property  NSString *name
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKAbstractWallpaper new]
  +[WKAbstractWallpaper na_identity]

  // instance methods
  -[WKAbstractWallpaper propertyListRepresentation]
  -[WKAbstractWallpaper identifier]
  -[WKAbstractWallpaper supportsCopying]
  -[WKAbstractWallpaper type]
  -[WKAbstractWallpaper .cxx_destruct]
  -[WKAbstractWallpaper setType:]
  -[WKAbstractWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKAbstractWallpaper thumbnailImageURL]
  -[WKAbstractWallpaper supportsSerialization]
  -[WKAbstractWallpaper copyWithZone:]
  -[WKAbstractWallpaper name]
  -[WKAbstractWallpaper thumbnailImage]
  -[WKAbstractWallpaper descriptionBuilderBlock]
  -[WKAbstractWallpaper isEqual:]
  -[WKAbstractWallpaper init]
  -[WKAbstractWallpaper wk_descriptionBuilder]
  -[WKAbstractWallpaper representedType]
  -[WKAbstractWallpaper backingType]
  -[WKAbstractWallpaper setBackingType:]
  -[WKAbstractWallpaper initWithIdentifier:name:type:representedType:backingType:]
  -[WKAbstractWallpaper setRepresentedType:]


WKBokehBubble : CALayer <CAAnimationDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WKBokehBubble animationDidStop:finished:]
  -[WKBokehBubble init]


WKPhotoWallpaperBundle : NSObject <NAIdentifiable, WKWallpaperRepresenting>
 @property  WKPhotoAssetWallpaper *_wallpaper
 @property  NSUUID *identifier
 @property  NSDate *creationDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL appearanceAware
 @property  BOOL distinctWallpapersForLocations
 @property  BOOL dynamicWallpaperBundle
 @property  NSString *identifierString
 @property  NSString *name
 @property  NSString *logicalScreenClass
 @property  unsigned long contentSource
 @property  BOOL disableParallax
 @property  BOOL offloaded
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKPhotoWallpaperBundle na_identity]

  // instance methods
  -[WKPhotoWallpaperBundle contentSource]
  -[WKPhotoWallpaperBundle identifier]
  -[WKPhotoWallpaperBundle logicalScreenClass]
  -[WKPhotoWallpaperBundle supportsCopying]
  -[WKPhotoWallpaperBundle valueBasedWallpaperForLocation:andAppearance:]
  -[WKPhotoWallpaperBundle valueBasedWallpaperForLocation:]
  -[WKPhotoWallpaperBundle identifierString]
  -[WKPhotoWallpaperBundle isAppearanceAware]
  -[WKPhotoWallpaperBundle copyWallpaperRepresentingToDestinationDirectoryURL:error:]
  -[WKPhotoWallpaperBundle .cxx_destruct]
  -[WKPhotoWallpaperBundle creationDate]
  -[WKPhotoWallpaperBundle fileBasedWallpaperForLocation:andAppearance:]
  -[WKPhotoWallpaperBundle thumbnailImageURL]
  -[WKPhotoWallpaperBundle name]
  -[WKPhotoWallpaperBundle isOffloaded]
  -[WKPhotoWallpaperBundle fileBasedWallpaperForLocation:]
  -[WKPhotoWallpaperBundle disableParallax]
  -[WKPhotoWallpaperBundle isDynamicWallpaperBundle]
  -[WKPhotoWallpaperBundle hasDistinctWallpapersForLocations]
  -[WKPhotoWallpaperBundle thumbnailRepresentableForLocation:andAppearance:]
  -[WKPhotoWallpaperBundle thumbnailRepresentableForLocation:]
  -[WKPhotoWallpaperBundle isEqual:]
  -[WKPhotoWallpaperBundle wallpaperBackingTypeForLocation:]
  -[WKPhotoWallpaperBundle initWithPhotosAsset:]
  -[WKPhotoWallpaperBundle _wallpaper]
  -[WKPhotoWallpaperBundle set_wallpaper:]


WKThumbnailWallpaper : WKAbstractWallpaper
 @property  NSURL *thumbnailImageURL
 @property  UIImage *_thumbnailImage

  // class methods
  +[WKThumbnailWallpaper na_identity]

  // instance methods
  -[WKThumbnailWallpaper propertyListRepresentation]
  -[WKThumbnailWallpaper supportsCopying]
  -[WKThumbnailWallpaper _thumbnailImage]
  -[WKThumbnailWallpaper .cxx_destruct]
  -[WKThumbnailWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKThumbnailWallpaper set_thumbnailImage:]
  -[WKThumbnailWallpaper thumbnailImageURL]
  -[WKThumbnailWallpaper supportsSerialization]
  -[WKThumbnailWallpaper copyWithZone:]
  -[WKThumbnailWallpaper thumbnailImage]
  -[WKThumbnailWallpaper descriptionBuilderBlock]
  -[WKThumbnailWallpaper isEqual:]
  -[WKThumbnailWallpaper setThumbnailImageURL:]
  -[WKThumbnailWallpaper initWithIdentifier:name:type:representedType:backingType:thumbnailImageURL:]


WKWallpaperPreviewViewControllerFactory : NSObject
  // class methods
  +[WKWallpaperPreviewViewControllerFactory createLockScreenPreviewControllerForWallpaperRepresenting:completion:]
  +[WKWallpaperPreviewViewControllerFactory createHomeScreenPreviewControllerForWallpaperRepresenting:completion:]


WKWallpaperRepresentingCollection : NSObject
 @property  NSString *wallpaperCollectionIdentifier
 @property  WKWallpaperBundleDownloadManager *downloadManager
 @property  NSMutableArray *_wallpaperBundles
 @property  NSMapTable *_wallpaperLookupTable
 @property  NSUUID *identifier
 @property  NSString *displayName
 @property  BOOL supportsDownloading
 @property  long long numberOfWallpapers
 @property  unsigned long source
 @property  BOOL wallpapersShareBaseAppearance
 @property  <WKWallpaperRepresenting> *previewWallpaperRepresenting

  // class methods
  +[WKWallpaperRepresentingCollection _raiseInvalidMetadataExceptionForMetadataKeypath:collectionURL:]
  +[WKWallpaperRepresentingCollection _loadCollectionMetadataWithURL:]
  +[WKWallpaperRepresentingCollection _loadWallpaperRepresentingContentFromURL:collectionMetadata:isLegacyContent:]
  +[WKWallpaperRepresentingCollection shouldLoadWallpaperCollectionAtURL:]

  // instance methods
  -[WKWallpaperRepresentingCollection source]
  -[WKWallpaperRepresentingCollection downloadManager]
  -[WKWallpaperRepresentingCollection identifier]
  -[WKWallpaperRepresentingCollection numberOfWallpapers]
  -[WKWallpaperRepresentingCollection initWithWallpaperCollectionIdentifier:displayName:previewWallpaperRepresenting:wallpapersShareBaseAppearance:wallpaperRepresentingCollection:downloadManager:]
  -[WKWallpaperRepresentingCollection setDownloadManager:]
  -[WKWallpaperRepresentingCollection .cxx_destruct]
  -[WKWallpaperRepresentingCollection containsWallpaperRepresentingWithIdentifier:]
  -[WKWallpaperRepresentingCollection cancelDownloadForWallpaperRepresentingWithIdentifier:completion:]
  -[WKWallpaperRepresentingCollection set_wallpaperLookupTable:]
  -[WKWallpaperRepresentingCollection previewWallpaperRepresenting]
  -[WKWallpaperRepresentingCollection initWithURL:downloadManager:]
  -[WKWallpaperRepresentingCollection _wallpaperBundles]
  -[WKWallpaperRepresentingCollection displayName]
  -[WKWallpaperRepresentingCollection wallpaperBundleAtIndex:]
  -[WKWallpaperRepresentingCollection downloadWallpaperRepresentingWithIdentifier:progress:completion:]
  -[WKWallpaperRepresentingCollection supportsDownloading]
  -[WKWallpaperRepresentingCollection wallpapersShareBaseAppearance]
  -[WKWallpaperRepresentingCollection wallpaperRepresentingWithIdentifier:]
  -[WKWallpaperRepresentingCollection wallpaperCollectionIdentifier]
  -[WKWallpaperRepresentingCollection _wallpaperLookupTable]
  -[WKWallpaperRepresentingCollection setWallpaperCollectionIdentifier:]
  -[WKWallpaperRepresentingCollection set_wallpaperBundles:]


WKCurrentWallpaperManager : NSObject
 @property  NSObject<OS_dispatch_queue> *_wallpaperChangeQueue
 @property  NSFileManager *_fileManager
 @property  NSNotificationCenter *_notificationCenter
 @property  NSUserDefaults *_userDefaults
 @property  NSURL *wallpaperCollectionsDirectoryURL

  // class methods
  +[WKCurrentWallpaperManager sharedCurrentWallpaperManager]

  // instance methods
  -[WKCurrentWallpaperManager _userDefaults]
  -[WKCurrentWallpaperManager .cxx_destruct]
  -[WKCurrentWallpaperManager set_fileManager:]
  -[WKCurrentWallpaperManager _fileManager]
  -[WKCurrentWallpaperManager _notificationCenter]
  -[WKCurrentWallpaperManager set_userDefaults:]
  -[WKCurrentWallpaperManager initWithFileManager:notificationCenter:userDefaults:wallpaperPhotoLibrary:]
  -[WKCurrentWallpaperManager setWallpaperRepresenting:forWallpaperLocation:completion:]
  -[WKCurrentWallpaperManager setWallpaperRepresenting:forWallpaperLocation:desiredCropRect:wallpaperOptions:completion:]
  -[WKCurrentWallpaperManager _wallpaperChangeQueue]
  -[WKCurrentWallpaperManager set_wallpaperChangeQueue:]
  -[WKCurrentWallpaperManager set_notificationCenter:]
  -[WKCurrentWallpaperManager wallpaperCollectionsDirectoryURL]


WKWallpaperBundleCollection : NSObject
 @property  unsigned long wallpaperType
 @property  NSString *displayName
 @property  WKWallpaperBundle *previewBundle
 @property  NSMutableArray *_wallpaperBundles
 @property  NSMutableDictionary *_wallpaperLookup
 @property  long long numberOfItems

  // instance methods
  -[WKWallpaperBundleCollection wallpaperType]
  -[WKWallpaperBundleCollection numberOfItems]
  -[WKWallpaperBundleCollection .cxx_destruct]
  -[WKWallpaperBundleCollection setDisplayName:]
  -[WKWallpaperBundleCollection _wallpaperBundles]
  -[WKWallpaperBundleCollection displayName]
  -[WKWallpaperBundleCollection wallpaperBundleAtIndex:]
  -[WKWallpaperBundleCollection set_wallpaperBundles:]
  -[WKWallpaperBundleCollection initWithWallpaperType:previewBundle:]
  -[WKWallpaperBundleCollection wallpaperBundleWithIdentifier:]
  -[WKWallpaperBundleCollection appendWallpaperBundle:]
  -[WKWallpaperBundleCollection setWallpaperType:]
  -[WKWallpaperBundleCollection previewBundle]
  -[WKWallpaperBundleCollection setPreviewBundle:]
  -[WKWallpaperBundleCollection _wallpaperLookup]
  -[WKWallpaperBundleCollection set_wallpaperLookup:]


WKWallpaperBundleImporter : NSObject
 @property  NSObject<OS_dispatch_queue> *_bundleImportQueue
 @property  NSArray *_wallpaperTypesOrdering
 @property  NSDictionary *_wallpaperTypeToBundleCollection
 @property  long long numberOfWallpaperBundleCollections

  // class methods
  +[WKWallpaperBundleImporter defaultWallpaperBundleImporter]
  +[WKWallpaperBundleImporter wallpapersConfigurationFileURL]

  // instance methods
  -[WKWallpaperBundleImporter _raiseInvalidMetadataExceptionForMetadataKeypath:]
  -[WKWallpaperBundleImporter .cxx_destruct]
  -[WKWallpaperBundleImporter init]
  -[WKWallpaperBundleImporter wallpaperBundleWithIdentifier:]
  -[WKWallpaperBundleImporter numberOfWallpaperBundleCollections]
  -[WKWallpaperBundleImporter wallpaperTypeAtIndex:]
  -[WKWallpaperBundleImporter wallpaperBundleCollectionForWallpaperType:]
  -[WKWallpaperBundleImporter _loadWallpapersFromDisk]
  -[WKWallpaperBundleImporter _bundleImportQueue]
  -[WKWallpaperBundleImporter set_bundleImportQueue:]
  -[WKWallpaperBundleImporter _wallpaperTypesOrdering]
  -[WKWallpaperBundleImporter set_wallpaperTypesOrdering:]
  -[WKWallpaperBundleImporter _wallpaperTypeToBundleCollection]
  -[WKWallpaperBundleImporter set_wallpaperTypeToBundleCollection:]


WKLayeredThumbnailWallpaperInput : NSObject <WKDescribable, NAIdentifiable, NSCopying>
 @property  NSURL *backgroundThumbnailImageURL
 @property  NSURL *foregroundThumbnailImageURL
 @property  NSURL *floatingThumbnailImageURL
 @property  NADescriptionBuilder *wk_descriptionBuilder
 @property  NSString *description
 @property  @? descriptionBuilderBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // class methods
  +[WKLayeredThumbnailWallpaperInput new]
  +[WKLayeredThumbnailWallpaperInput na_identity]

  // instance methods
  -[WKLayeredThumbnailWallpaperInput .cxx_destruct]
  -[WKLayeredThumbnailWallpaperInput copyWithZone:]
  -[WKLayeredThumbnailWallpaperInput descriptionBuilderBlock]
  -[WKLayeredThumbnailWallpaperInput isEqual:]
  -[WKLayeredThumbnailWallpaperInput init]
  -[WKLayeredThumbnailWallpaperInput wk_descriptionBuilder]
  -[WKLayeredThumbnailWallpaperInput initWithBackgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:]
  -[WKLayeredThumbnailWallpaperInput backgroundThumbnailImageURL]
  -[WKLayeredThumbnailWallpaperInput foregroundThumbnailImageURL]
  -[WKLayeredThumbnailWallpaperInput floatingThumbnailImageURL]


WKDefaultWallpaperManager : NSObject
 @property  NSDictionary *_defaultWallpaperLookup
 @property  WKWallpaperRepresentingCollectionsManager *_collectionsManager
 @property  WKWallpaperBundle *_defaultWallpaperBundle

  // class methods
  +[WKDefaultWallpaperManager defaultWallpaperManager]
  +[WKDefaultWallpaperManager defaultWallpaperLookupURL]

  // instance methods
  -[WKDefaultWallpaperManager deviceProductType]
  -[WKDefaultWallpaperManager .cxx_destruct]
  -[WKDefaultWallpaperManager deviceColor]
  -[WKDefaultWallpaperManager deviceEnclosureColor]
  -[WKDefaultWallpaperManager defaultWallpaperBundle]
  -[WKDefaultWallpaperManager initWithCollectionsManager:]
  -[WKDefaultWallpaperManager _loadDefaultWallpaperFile]
  -[WKDefaultWallpaperManager _loadDefaultWallpaperInformation]
  -[WKDefaultWallpaperManager deviceLogicalScreenClass]
  -[WKDefaultWallpaperManager _wallpaperRepresentingWithIdentifier:]
  -[WKDefaultWallpaperManager _defaultWallpaperLookup]
  -[WKDefaultWallpaperManager set_defaultWallpaperLookup:]
  -[WKDefaultWallpaperManager _collectionsManager]
  -[WKDefaultWallpaperManager set_collectionsManager:]
  -[WKDefaultWallpaperManager _defaultWallpaperBundle]
  -[WKDefaultWallpaperManager set_defaultWallpaperBundle:]


WKBokehView : UIView
 @property  WKBokehWallpaperInput *bokehWallpaperInput

  // class methods
  +[WKBokehView thumbnailImageWithBokehInput:]

  // instance methods
  -[WKBokehView .cxx_destruct]
  -[WKBokehView layoutSubviews]
  -[WKBokehView _screenDidUpdate:]
  -[WKBokehView initWithBokehWallpaperInput:]
  -[WKBokehView setBokehWallpaperInput:]
  -[WKBokehView setAnimationEnabled:]
  -[WKBokehView bokehWallpaperInput]


WKBokehMotionFilter : NSObject
  // instance methods
  -[WKBokehMotionFilter .cxx_destruct]
  -[WKBokehMotionFilter init]


WKLayeredAnimationWallpaperInput : NSObject <NSCopying>
 @property  NSURL *backgroundAnimationFileURL
 @property  NSURL *foregroundAnimationFileURL
 @property  NSURL *floatingAnimationFileURL

  // class methods
  +[WKLayeredAnimationWallpaperInput na_identity]

  // instance methods
  -[WKLayeredAnimationWallpaperInput initWithBackgroundAnimationFileURL:foregroundAnimationFileURL:floatingAnimationFileURL:]
  -[WKLayeredAnimationWallpaperInput .cxx_destruct]
  -[WKLayeredAnimationWallpaperInput backgroundAnimationFileURL]
  -[WKLayeredAnimationWallpaperInput copyWithZone:]
  -[WKLayeredAnimationWallpaperInput foregroundAnimationFileURL]
  -[WKLayeredAnimationWallpaperInput floatingAnimationFileURL]
  -[WKLayeredAnimationWallpaperInput descriptionBuilderBlock]
  -[WKLayeredAnimationWallpaperInput isEqual:]
  -[WKLayeredAnimationWallpaperInput wk_descriptionBuilder]


WKBokehInfiniteImpulseResponseFilter : NSObject
  // instance methods
  -[WKBokehInfiniteImpulseResponseFilter dealloc]
  -[WKBokehInfiniteImpulseResponseFilter initWithCount:feedforwardCoefficients:feedbackCoefficients:]


WKColorWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  UIColor *_wallpaperValue
 @property  UIImage *_thumbnailImage
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKColorWallpaper na_identity]

  // instance methods
  -[WKColorWallpaper propertyListRepresentation]
  -[WKColorWallpaper supportsCopying]
  -[WKColorWallpaper wallpaperValue]
  -[WKColorWallpaper _thumbnailImage]
  -[WKColorWallpaper .cxx_destruct]
  -[WKColorWallpaper set_wallpaperValue:]
  -[WKColorWallpaper set_thumbnailImage:]
  -[WKColorWallpaper thumbnailImageURL]
  -[WKColorWallpaper supportsSerialization]
  -[WKColorWallpaper _wallpaperValue]
  -[WKColorWallpaper thumbnailImage]
  -[WKColorWallpaper descriptionBuilderBlock]
  -[WKColorWallpaper isEqual:]
  -[WKColorWallpaper initWithIdentifier:name:color:]


WKWallpaperRepresentingCollectionsManager : NSObject
 @property  WKWallpaperBundleDownloadManager *_downloadManager
 @property  NSMutableArray *_wallpaperCollections
 @property  NSMapTable *_wallpaperCollectionLookupTable
 @property  BOOL _loadLegacyContent
 @property  long long numberOfWallpaperCollections

  // class methods
  +[WKWallpaperRepresentingCollectionsManager defaultLegacyManager]
  +[WKWallpaperRepresentingCollectionsManager defaultManager]

  // instance methods
  -[WKWallpaperRepresentingCollectionsManager _downloadManager]
  -[WKWallpaperRepresentingCollectionsManager set_loadLegacyContent:]
  -[WKWallpaperRepresentingCollectionsManager set_downloadManager:]
  -[WKWallpaperRepresentingCollectionsManager _wallpaperCollectionLookupTable]
  -[WKWallpaperRepresentingCollectionsManager _loadLegacyContent]
  -[WKWallpaperRepresentingCollectionsManager _loadCollections]
  -[WKWallpaperRepresentingCollectionsManager set_wallpaperCollectionLookupTable:]
  -[WKWallpaperRepresentingCollectionsManager .cxx_destruct]
  -[WKWallpaperRepresentingCollectionsManager _loadLegacySystemWallpaperCollections]
  -[WKWallpaperRepresentingCollectionsManager _loadSystemWallpaperCollections]
  -[WKWallpaperRepresentingCollectionsManager _wallpaperCollections]
  -[WKWallpaperRepresentingCollectionsManager wallpaperCollectionAtIndex:]
  -[WKWallpaperRepresentingCollectionsManager wallpaperCollectionWithIdentifier:]
  -[WKWallpaperRepresentingCollectionsManager set_wallpaperCollections:]
  -[WKWallpaperRepresentingCollectionsManager initWithDownloadManager:loadLegacyContent:]
  -[WKWallpaperRepresentingCollectionsManager numberOfWallpaperCollections]


WKStillWallpaper : WKThumbnailWallpaper <WKFileBasedWallpaper>
 @property  NSURL *fullsizeImageURL
 @property  NSURL *videoAssetURL
 @property  double stillTimeInVideo
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKStillWallpaper na_identity]

  // instance methods
  -[WKStillWallpaper propertyListRepresentation]
  -[WKStillWallpaper stillTimeInVideo]
  -[WKStillWallpaper .cxx_destruct]
  -[WKStillWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKStillWallpaper copyWithZone:]
  -[WKStillWallpaper fullsizeImageURL]
  -[WKStillWallpaper descriptionBuilderBlock]
  -[WKStillWallpaper isEqual:]
  -[WKStillWallpaper videoAssetURL]
  -[WKStillWallpaper initWithIdentifier:name:type:thumbnailImageURL:fullsizeImageURL:]
  -[WKStillWallpaper setFullsizeImageURL:]


WKLayeredStillWallpaper : WKLayeredThumbnailWallpaper
 @property  WKLayeredStillWallpaperInput *_wallpaperValue

  // class methods
  +[WKLayeredStillWallpaper na_identity]

  // instance methods
  -[WKLayeredStillWallpaper propertyListRepresentation]
  -[WKLayeredStillWallpaper wallpaperValue]
  -[WKLayeredStillWallpaper .cxx_destruct]
  -[WKLayeredStillWallpaper set_wallpaperValue:]
  -[WKLayeredStillWallpaper copyWallpaperContentsToDestinationDirectoryURL:error:]
  -[WKLayeredStillWallpaper supportsSerialization]
  -[WKLayeredStillWallpaper copyWithZone:]
  -[WKLayeredStillWallpaper _wallpaperValue]
  -[WKLayeredStillWallpaper initWithIdentifier:name:backgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:backgroundFullSizeImageURL:foregroundFullSizeImageURL:floatingFullSizeImageURL:]


WKWallpaperBundleDownloadManager : NSObject
 @property  NSObject<OS_dispatch_queue> *_loadingQueue
 @property  NSNumber *_catalogDownloadResult
 @property  NSError *_catalogDownloadError
 @property  NSMutableDictionary *_localAssetLookup
 @property  NSMutableDictionary *_activeDownloads
 @property  NSString *assetDownloadIdentifier
 @property  NSObject<WKWallpaperBundleDownloadManagerDelegate> *delegate

  // class methods
  +[WKWallpaperBundleDownloadManager defaultManager]

  // instance methods
  -[WKWallpaperBundleDownloadManager _catalogDownloadError]
  -[WKWallpaperBundleDownloadManager _activeDownloads]
  -[WKWallpaperBundleDownloadManager setDelegate:]
  -[WKWallpaperBundleDownloadManager delegate]
  -[WKWallpaperBundleDownloadManager _loadingQueue]
  -[WKWallpaperBundleDownloadManager .cxx_destruct]
  -[WKWallpaperBundleDownloadManager set_catalogDownloadResult:]
  -[WKWallpaperBundleDownloadManager set_loadingQueue:]
  -[WKWallpaperBundleDownloadManager assetDownloadIdentifier]
  -[WKWallpaperBundleDownloadManager set_activeDownloads:]
  -[WKWallpaperBundleDownloadManager cancelDownloadForWallpaperRepresenting:withCompletion:]
  -[WKWallpaperBundleDownloadManager downloadWallpaperRepresentingIfNeeded:progress:withCompletion:]
  -[WKWallpaperBundleDownloadManager _catalogDownloadResult]
  -[WKWallpaperBundleDownloadManager _startCatalogDownload]
  -[WKWallpaperBundleDownloadManager set_catalogDownloadError:]
  -[WKWallpaperBundleDownloadManager set_localAssetLookup:]
  -[WKWallpaperBundleDownloadManager localWallpaperRepresentingWithIdentifier:wallpaperName:]
  -[WKWallpaperBundleDownloadManager initWithAssetDownloadIdentifier:]
  -[WKWallpaperBundleDownloadManager _localAssetLookup]


WKLayeredStripeWallpaperInput : NSObject <WKDescribable, NAIdentifiable, NSCopying>
 @property  UIColor *backgroundColor
 @property  double stripeAngleDegrees
 @property  double stripeHeightFactor
 @property  double firstStripeOffsetScaleFactor
 @property  NADescriptionBuilder *wk_descriptionBuilder
 @property  NSString *description
 @property  @? descriptionBuilderBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // class methods
  +[WKLayeredStripeWallpaperInput new]
  +[WKLayeredStripeWallpaperInput na_identity]

  // instance methods
  -[WKLayeredStripeWallpaperInput initWithBackgroundColor:stripeAngleDegrees:stripeHeightFactor:firstStripeOffsetScaleFactor:]
  -[WKLayeredStripeWallpaperInput firstStripeOffsetScaleFactor]
  -[WKLayeredStripeWallpaperInput .cxx_destruct]
  -[WKLayeredStripeWallpaperInput stripeHeightFactor]
  -[WKLayeredStripeWallpaperInput backgroundColor]
  -[WKLayeredStripeWallpaperInput copyWithZone:]
  -[WKLayeredStripeWallpaperInput descriptionBuilderBlock]
  -[WKLayeredStripeWallpaperInput isEqual:]
  -[WKLayeredStripeWallpaperInput init]
  -[WKLayeredStripeWallpaperInput wk_descriptionBuilder]
  -[WKLayeredStripeWallpaperInput stripeAngleDegrees]


WKHeritageStripeImageGenerator : NSObject
 @property  NSObject<OS_dispatch_queue> *_wallpaperRequestQueue
 @property  NSCache *_wallpaperCache

  // class methods
  +[WKHeritageStripeImageGenerator defaultImageGenerator]

  // instance methods
  -[WKHeritageStripeImageGenerator .cxx_destruct]
  -[WKHeritageStripeImageGenerator init]
  -[WKHeritageStripeImageGenerator requestWallpaperImageWithBackgroundColor:completion:]
  -[WKHeritageStripeImageGenerator requestWallpaperImageWithBackgroundColorSynchronous:]
  -[WKHeritageStripeImageGenerator thumbnailImageWithBackgroundColor:appearanceAware:]
  -[WKHeritageStripeImageGenerator _wallpaperRequestQueue]
  -[WKHeritageStripeImageGenerator set_wallpaperRequestQueue:]
  -[WKHeritageStripeImageGenerator _wallpaperCache]
  -[WKHeritageStripeImageGenerator set_wallpaperCache:]


WKBokehMotionManager : NSObject
  // instance methods
  -[WKBokehMotionManager .cxx_destruct]
  -[WKBokehMotionManager init]


WKSystemShellWallpaperManager : NSObject
 @property  NSObject<OS_dispatch_queue> *_setWallpaperQueue

  // class methods
  +[WKSystemShellWallpaperManager sharedManager]
  +[WKSystemShellWallpaperManager _currentWallpaperMode]

  // instance methods
  -[WKSystemShellWallpaperManager .cxx_destruct]
  -[WKSystemShellWallpaperManager init]
  -[WKSystemShellWallpaperManager setLockScreenWallpaperRepresenting:mirrorToHomeScreen:completion:]
  -[WKSystemShellWallpaperManager setHomeScreenWallpaperRepresenting:completion:]
  -[WKSystemShellWallpaperManager _setWallpaperQueue]
  -[WKSystemShellWallpaperManager set_setWallpaperQueue:]


WKSystemShellPreviewInput : NSObject
 @property  UIImage *wallpaperImage
 @property  AVURLAsset *urlAsset
 @property  SBFWallpaperOptions *wallpaperOptions

  // instance methods
  -[WKSystemShellPreviewInput wallpaperImage]
  -[WKSystemShellPreviewInput .cxx_destruct]
  -[WKSystemShellPreviewInput wallpaperOptions]
  -[WKSystemShellPreviewInput initWithWallpaperImage:urlAsset:wallpaperOptions:]
  -[WKSystemShellPreviewInput urlAsset]


WKLayeredStillWallpaperInput : WKLayeredThumbnailWallpaperInput
 @property  NSURL *backgroundFullSizeImageURL
 @property  NSURL *foregroundFullSizeImageURL
 @property  NSURL *floatingFullSizeImageURL

  // class methods
  +[WKLayeredStillWallpaperInput na_identity]

  // instance methods
  -[WKLayeredStillWallpaperInput .cxx_destruct]
  -[WKLayeredStillWallpaperInput copyWithZone:]
  -[WKLayeredStillWallpaperInput descriptionBuilderBlock]
  -[WKLayeredStillWallpaperInput isEqual:]
  -[WKLayeredStillWallpaperInput wk_descriptionBuilder]
  -[WKLayeredStillWallpaperInput initWithBackgroundThumbnailImageURL:foregroundThumbnailImageURL:floatingThumbnailImageURL:backgroundFullSizeImageURL:foregroundFullSizeImageURL:floatingFullSizeImageURL:]
  -[WKLayeredStillWallpaperInput backgroundFullSizeImageURL]
  -[WKLayeredStillWallpaperInput foregroundFullSizeImageURL]
  -[WKLayeredStillWallpaperInput floatingFullSizeImageURL]


WKDynamicWallpaper : WKAbstractWallpaper <WKValueBasedWallpaper>
 @property  NSDictionary *_dynamicDictionary
 @property  UIImage *_thumbnailImage
 @property  long long identifier
 @property  NSString *name
 @property  unsigned long type
 @property  unsigned long representedType
 @property  unsigned long backingType
 @property  BOOL supportsSerialization
 @property  BOOL supportsCopying
 @property  NSURL *thumbnailImageURL
 @property  UIImage *thumbnailImage

  // class methods
  +[WKDynamicWallpaper na_identity]

  // instance methods
  -[WKDynamicWallpaper initWithIdentifier:dictionary:]
  -[WKDynamicWallpaper wallpaperValue]
  -[WKDynamicWallpaper _thumbnailImage]
  -[WKDynamicWallpaper .cxx_destruct]
  -[WKDynamicWallpaper _dynamicDictionary]
  -[WKDynamicWallpaper set_thumbnailImage:]
  -[WKDynamicWallpaper thumbnailImageURL]
  -[WKDynamicWallpaper copyWithZone:]
  -[WKDynamicWallpaper set_dynamicDictionary:]
  -[WKDynamicWallpaper thumbnailImage]
  -[WKDynamicWallpaper descriptionBuilderBlock]
  -[WKDynamicWallpaper isEqual:]


_TtCV12WallpaperKit16WKBokehWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit28WKLayeredStillWallpaperInput21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit26WKWallpaperPickerViewModel : Swift._SwiftObject

_TtCV12WallpaperKit15WKLiveWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit16WKColorWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit21WKBokehWallpaperInput21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit30WKWallpaperPickerItemViewModel : Swift._SwiftObject

_TtCV12WallpaperKit17WKWallpaperBundle21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit21WKPhotoAssetWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit18WKDynamicWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit32WKWallpaperBundleDownloadManager : Swift._SwiftObject

_TtCC12WallpaperKit32WKWallpaperBundleDownloadManager21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit24WKLayeredStripeWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKitP33_0BC95D00C80437DC7C08EA65ED7882A89FindClass : NSObject
  // instance methods
  -[_TtC12WallpaperKitP33_0BC95D00C80437DC7C08EA65ED7882A89FindClass init]


_TtCV12WallpaperKit17WKStripeWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit27WKLayeredThumbnailWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit33WKWallpaperPickerSectionViewModel : Swift._SwiftObject

_TtCV12WallpaperKit27WKLayeredAnimationWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit20WKThumbnailWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit23WKAnimationPackageLayer11Coordinator : Swift._SwiftObject

_TtCV12WallpaperKit23WKLayeredStillWallpaper21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit32WKLayeredAnimationWallpaperInput21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit41WKWallpaperRepresentingCollectionsManager : Swift._SwiftObject

_TtCC12WallpaperKit41WKWallpaperRepresentingCollectionsManager21ImplementationWrapper : Swift._SwiftObject

_TtC12WallpaperKit25WKWallpaperImageViewModel : Swift._SwiftObject

_TtC12WallpaperKit21WKWallpaperImageCache : Swift._SwiftObject

_TtC12WallpaperKit26WKWallpaperPosterViewModel : Swift._SwiftObject

_TtC12WallpaperKit22WKAnimationPackageView : UIView
 @property  {CGSize=dd} intrinsicContentSize

  // instance methods
  -[_TtC12WallpaperKit22WKAnimationPackageView .cxx_destruct]
  -[_TtC12WallpaperKit22WKAnimationPackageView drawRect:]
  -[_TtC12WallpaperKit22WKAnimationPackageView intrinsicContentSize]
  -[_TtC12WallpaperKit22WKAnimationPackageView initWithFrame:]
  -[_TtC12WallpaperKit22WKAnimationPackageView initWithCoder:]


_TtC12WallpaperKit32WKWallpaperPosterRenderViewModel : Swift._SwiftObject

_TtCV12WallpaperKit29WKLayeredStripeWallpaperInput21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit33WKWallpaperRepresentingCollection21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit32WKLayeredThumbnailWallpaperInput21ImplementationWrapper : Swift._SwiftObject

_TtCV12WallpaperKit16WKStillWallpaper21ImplementationWrapper : Swift._SwiftObject

PHAsset(WKAdditions)
	// class methods
	+[PHAsset(WKAdditions) wk_maximumImageSize]

NSUserDefaults(WKAdditions)
	// class methods
	+[NSUserDefaults(WKAdditions) wk_wallpaperKitUserDefaults]

	// instance methods
	-[NSUserDefaults(WKAdditions) wk_setMigrationLastBuildVersion:]
	-[NSUserDefaults(WKAdditions) wk_migrationLastBuildVersion]
	-[NSUserDefaults(WKAdditions) wk_setIgnoreProductTypesForWallpaperBundle:]
	-[NSUserDefaults(WKAdditions) wk_ignoreProductTypesForWallpaperBundle]
	-[NSUserDefaults(WKAdditions) wk_setIgnoreLogicalScreenClassForWallpaperBundle:]
	-[NSUserDefaults(WKAdditions) wk_ignoreLogicalScreenClassForWallpaperBundle]

UIColor(WKAdditions)
	// class methods
	+[UIColor(WKAdditions) wk_colorWithHexString:]

	// instance methods
	-[UIColor(WKAdditions) wk_colorHexString]
	-[UIColor(WKAdditions) wk_interpolatedToColor:progress:]

PBUIWallpaperDirectoryDataStore(WKMigrationAdditions)
	// instance methods
	-[PBUIWallpaperDirectoryDataStore(WKMigrationAdditions) wk_wallpaperImageURLForVariant:wallpaperMode:]
	-[PBUIWallpaperDirectoryDataStore(WKMigrationAdditions) wk_wallpaperOriginalImageURLForVariant:wallpaperMode:]
	-[PBUIWallpaperDirectoryDataStore(WKMigrationAdditions) wk_wallpaperThumbnailURLForVariant:wallpaperMode:]

SBFWallpaperOptions(WKAdditions)
	// instance methods
	-[SBFWallpaperOptions(WKAdditions) wk_cropRectInImagePointSpace]
	-[SBFWallpaperOptions(WKAdditions) wk_fixedCoordinateCropRectForPhotosWithImageScale:]

UIImage(WKAdditions)
	// class methods
	+[UIImage(WKAdditions) wk_imageWithContentsOfURL:]
	+[UIImage(WKAdditions) wk_imageFromColor:]
	+[UIImage(WKAdditions) wk_internalSystemName:]
	+[UIImage(WKAdditions) wk_imageWithLightAppearanceImage:darkAppearanceImage:]
	+[UIImage(WKAdditions) wk_overlayForegroundImage:overBackgroundImage:]
	+[UIImage(WKAdditions) wk_splitThumbnailWithLightAppearanceImage:darkAppearanceImage:]
	+[UIImage(WKAdditions) wk_dynamicImageWithTraitCollectionToImageMap:baseImage:]

	// instance methods
	-[UIImage(WKAdditions) wk_cropImageToRect:]

UIBezierPath(WKAdditions)
	// class methods
	+[UIBezierPath(WKAdditions) wk_parallelogramInRect:stripeIndex:firstStripeBaseY:]
	+[UIBezierPath(WKAdditions) wk_parallelogramInRect:stripeIndex:firstStripeBaseY:sizeScaleFactor:]
	+[UIBezierPath(WKAdditions) wk_parallelogramInRect:stripeIndex:firstStripeBaseY:stripeAngle:stripeWidth:sizeScaleFactor:]

01 00 0200 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateSetValue 
01 00 1600 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0600 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMMotionManager 
01 00 0900 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0900 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0900 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0a00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NADescriptionBuilder 
01 00 0a00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 0a00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAIdentityBuilder 
01 00 0a00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperConfigurationManager 
01 00 0b00 /System/Library/PrivateFrameworks/PaperBoardUI.framework/PaperBoardUI: PBUIWallpaperDirectoryDataStore 
01 00 0c00 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 0c00 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 0c00 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 0c00 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0c00 /System/Library/Frameworks/Photos.framework/Photos: PHVideoRequestOptions 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperOptions 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperParallaxSettings 
01 00 0f00 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBSUIWallpaperPreviewViewController 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIDeferredMenuElement 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuElement 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 1a00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
01 00 1000 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
