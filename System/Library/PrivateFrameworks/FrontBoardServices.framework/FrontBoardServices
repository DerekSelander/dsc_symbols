|| __DATA.__objc_data _OBJC_CLASS_$_FBSALOToken
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreClientFactory
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreRepositoryClient
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationLibraryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationPlaceholderProgress
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationProvisioningProfile
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationTerminationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationTrustFacade
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationUninstallOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FBSBasicSceneHostAgent
|| __DATA.__objc_data _OBJC_CLASS_$_FBSBundleInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDataResetRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutPublisher
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutPublisherConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FBSExtensionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSExternalSceneLayer
|| __DATA.__objc_data _OBJC_CLASS_$_FBSKeyboardProxyLayer
|| __DATA.__objc_data _OBJC_CLASS_$_FBSLazyApplicationInfoProvider
|| __DATA.__objc_data _OBJC_CLASS_$_FBSLegacySignatureValidationService
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableSceneIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcess
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionProvision
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessHandle
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessResourceProvision
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessTerminationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessWatchdog
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessWatchdogPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProfileManager
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneActivitySession
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_FBSServiceFacility
|| __DATA.__objc_data _OBJC_CLASS_$_FBSShutdownOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSignatureValidationService
|| __DATA.__objc_data _OBJC_CLASS_$__FBMapResult
|| __DATA.__objc_data _OBJC_CLASS_$__FBSCDHashCacheInfo
|| __DATA.__objc_data _OBJC_CLASS_$__FBSMISInterfaceWrapperImpl
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshotContext
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshotLayer
|| __DATA.__objc_data _OBJC_CLASS_$__FBSTestExitAction
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSALOToken
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreClientFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreRepositoryClient
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationLibraryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationPlaceholderProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationProvisioningProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationTerminationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationTrustFacade
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationUninstallOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSBasicSceneHostAgent
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSBundleInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDataResetRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutPublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutPublisherConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSExtensionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSExternalSceneLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSKeyboardProxyLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSLazyApplicationInfoProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSLegacySignatureValidationService
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableSceneIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcess
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionProvision
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessResourceProvision
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessTerminationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessWatchdog
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessWatchdogPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProfileManager
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneActivitySession
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSServiceFacility
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSShutdownOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSignatureValidationService
|| __DATA.__objc_data _OBJC_METACLASS_$__FBMapResult
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSCDHashCacheInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSMISInterfaceWrapperImpl
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshotContext
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshotLayer
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSTestExitAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSALOToken._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSBasicSceneAgent._scene
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._hdrMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._nativePixelSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._overscanCompensation
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._refreshRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._monitoring
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._violated
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneParameters._specification
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._allowCPUThrottling
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._runningBoardAssertionDisabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._updateContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._watchdogTransitionContext
|| __DATA_CONST.__const _FBApplicationDataStoreServiceIdentifier
|| __DATA_CONST.__const _FBLoggingSubsystem
|| __DATA_CONST.__const _FBSActivateForEventOptionTypeBackgroundContentFetching
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyAllChangesInterest
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyBundleID
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyBundleIDs
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyKey
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyMessageType
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyObject
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyPrefetchedKeys
|| __DATA_CONST.__const _FBSApplicationIdentifierEntitlement
|| __DATA_CONST.__const _FBSApplicationLibraryErrorBundleIDKey
|| __DATA_CONST.__const _FBSApplicationLibraryErrorDomain
|| __DATA_CONST.__const _FBSApplicationLibraryLoggingSubsystem
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionErrorDomain
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonCacheDeletion
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonCritical
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonInstallation
|| __DATA_CONST.__const _FBSDebugOptionKeyArguments
|| __DATA_CONST.__const _FBSDebugOptionKeyCancelDebugOnNextLaunch
|| __DATA_CONST.__const _FBSDebugOptionKeyDebugOnNextLaunch
|| __DATA_CONST.__const _FBSDebugOptionKeyDisableASLR
|| __DATA_CONST.__const _FBSDebugOptionKeyEnvironment
|| __DATA_CONST.__const _FBSDebugOptionKeyExtensionBundleID
|| __DATA_CONST.__const _FBSDebugOptionKeyExtensionPointID
|| __DATA_CONST.__const _FBSDebugOptionKeyStandardErrorPath
|| __DATA_CONST.__const _FBSDebugOptionKeyStandardOutPath
|| __DATA_CONST.__const _FBSDebugOptionKeyWaitForDebugger
|| __DATA_CONST.__const _FBSDisplayLayoutElementControlCenterIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementLockScreenIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementNotificationCenterIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementSiriIdentifier
|| __DATA_CONST.__const _FBSLaunchServicesEntitlement
|| __DATA_CONST.__const _FBSOpenApplicationErrorDomain
|| __DATA_CONST.__const _FBSOpenApplicationOptionClickAttribution
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateAsClassic
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateForEvent
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateSuspended
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyAppLink
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyAppLink4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyBrowserAppLinkState
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyBrowserAppLinkState4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyDebuggingOptions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyDocumentOpen4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyIsSensitiveURL
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLSCacheGUID
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLSSequenceNumber
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchImageName
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchIntent
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchOrigin
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadAnnotation
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadIsValid
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadIsValid4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadOptions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadURL
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPromptUnlockDevice
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyServiceAvailabilityTimeout
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyUnlockDevice
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyUserActivity4LS
|| __DATA_CONST.__const _FBSOpenApplicationServiceErrorDomain
|| __DATA_CONST.__const _FBSOpenApplicationWithNewScene
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyDuration
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyOrientationInterest
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyRotationDirection
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeySequenceNumber
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyUIOrientation
|| __DATA_CONST.__const _FBSOrientationObserverServiceIdentifier
|| __DATA_CONST.__const _FBSProcessResourceProvisionErrorDomain
|| __DATA_CONST.__const _FBSProcessWatchdogErrorDomain
|| __DATA_CONST.__const _FBSProcessWatchdogErrorProvisionKey
|| __DATA_CONST.__const _FBSProcessWatchdogErrorTerminationRequestKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorDomain
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorProvisionKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorSessionKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorTerminationRequestKey
|| __DATA_CONST.__const _FBSSceneMessageErrorDomain
|| __DATA_CONST.__const _FBSSceneSnapshotErrorDomain
|| __DATA_CONST.__const _FBSSceneVisibilityEndowmentNamespace
|| __DATA_CONST.__const _FBSServiceFacilityErrorDomain
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyErrorDescription
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyFacilityID
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyMessageType
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyPayload
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyServiceAccepted
|| __DATA_CONST.__const _FBSServiceMilestoneDataMigrationCompleted
|| __DATA_CONST.__const _FBSServiceMilestoneFrontBoardInitialized
|| __DATA_CONST.__const _FBSServiceMilestoneServicesInitialized
|| __DATA_CONST.__const _FBSServiceMilestoneSystemApplicationInitialized
|| __DATA_CONST.__const _FBSSetAppBackgroundStyleEntitlement
|| __DATA_CONST.__const _FBSSystemAppProxyServiceIdentifier
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyActions
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyAppLink
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBadgeValue
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBool
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBoolResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBrightness
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBundleID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBundleIDResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyClientProcessHandle
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyDeferringToken
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyError
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyIntResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyInterval
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyMachPort
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyOptions
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyPID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyProcessHandle
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyReason
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyRequestID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateDesc
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateGroup
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateReason
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateReport
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyURL
|| __DATA_CONST.__const _FBSViewServicesEntitlement
|| __DATA_CONST.__const _FBSWorkspaceErrorDomain
|| __DATA_CONST.__const __FBSApplicationLibraryReloadPlaceholdersNotification
|| __DATA_CONST.__const __kFBSDisplayLayoutMonitorConnectionContextKey_QOS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSBasicSceneAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSBasicSceneClientAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSCAContextSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayMode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplaySource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSKeyboardLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneDefinition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationObserverClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSScene
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneClientIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneClientSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneDefinition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequestAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequestHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSServiceFacilityClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemAppProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationLaunchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationWorkspaceShim
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceCreateSceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceDestroySceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceSceneRemnant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceSceneRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceSceneUpdateResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceScenesClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutEndpointServices
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutServiceAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSBasicSceneAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSBasicSceneClientAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSCAContextSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutMonitorConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayMode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplaySource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSKeyboardLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneDefinition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationObserverClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSScene
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneClientIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneDefinition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequestAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequestHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSServiceFacilityClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemAppProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationLaunchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationWorkspaceShim
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceCreateSceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceDestroySceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceSceneRemnant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceSceneRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceSceneUpdateResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceScenesClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutEndpointServices
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutServiceAssertion
|| __TEXT.__const _FBSFrontBoardServicesVersionNumber
|| __TEXT.__const _FBSFrontBoardServicesVersionString
|| __TEXT.__const _FBSLSInstallPhaseUnknown
|| __TEXT.__const _FBSLSInstallStateUnknown
|| __TEXT.__const _FBSOrientationObserverInterestAll
|| __TEXT.__const _FBSSceneLevelMaximum
|| __TEXT.__const _FBSSystemServiceSynchronousTimeout
|| __TEXT.__text _FBInstallTypeIsCloudDemoted
|| __TEXT.__text _FBLogAppDataStore
|| __TEXT.__text _FBLogAppLaunch
|| __TEXT.__text _FBLogCommon
|| __TEXT.__text _FBLogInterfaceOrientationObserver
|| __TEXT.__text _FBLogWatchdog
|| __TEXT.__text _FBSApplicationLibraryErrorCodeDescription
|| __TEXT.__text _FBSApplicationLibraryLogTransactionEnabled
|| __TEXT.__text _FBSApplicationLibraryLogTransactionSetEnabled
|| __TEXT.__text _FBSApplicationTerminationGroupDescription
|| __TEXT.__text _FBSApplicationTerminationReasonDescription
|| __TEXT.__text _FBSApplicationTerminationReasonIsGraceful
|| __TEXT.__text _FBSDisplayAttachmentDescription
|| __TEXT.__text _FBSDisplayGamutDescription
|| __TEXT.__text _FBSDisplayGamutFromCADisplayGamut
|| __TEXT.__text _FBSDisplayGamutIsValid
|| __TEXT.__text _FBSDisplayGamutToCADisplayGamut
|| __TEXT.__text _FBSDisplayHDRModeDescription
|| __TEXT.__text _FBSDisplayHDRModeFromCADisplayHDRMode
|| __TEXT.__text _FBSDisplayHDRModeIsValid
|| __TEXT.__text _FBSDisplayHDRModeToCADisplayHDRMode
|| __TEXT.__text _FBSDisplayOverscanCompensationDescription
|| __TEXT.__text _FBSDisplayOverscanCompensationFromCADisplayOverscanAdjustment
|| __TEXT.__text _FBSDisplayOverscanCompensationIsValid
|| __TEXT.__text _FBSDisplayOverscanCompensationToCADisplayOverscanAdjustment
|| __TEXT.__text _FBSDisplayRotationDescription
|| __TEXT.__text _FBSDisplayRotationFromCADisplayRotation
|| __TEXT.__text _FBSDisplayRotationFromRadians
|| __TEXT.__text _FBSDisplayRotationIsValid
|| __TEXT.__text _FBSDisplayRotationRadians
|| __TEXT.__text _FBSDisplayRotationToCADisplayRotation
|| __TEXT.__text _FBSDisplayTypeDescription
|| __TEXT.__text _FBSDisplayTypeIsValid
|| __TEXT.__text _FBSDisplayTypeName
|| __TEXT.__text _FBSFrameworkBundle
|| __TEXT.__text _FBSGetServiceFacilityManager
|| __TEXT.__text _FBSInstallTypeIsCloudDemoted
|| __TEXT.__text _FBSLogApplicationLibrary
|| __TEXT.__text _FBSLogApplicationLibraryObserver
|| __TEXT.__text _FBSLogApplicationPlaceholder
|| __TEXT.__text _FBSOpenApplicationErrorCodeToString
|| __TEXT.__text _FBSOpenApplicationErrorCreate
|| __TEXT.__text _FBSOpenApplicationServiceErrorCodeToString
|| __TEXT.__text _FBSProcessExceptionCodeDescription
|| __TEXT.__text _FBSProcessGraphicsPolicyDescription
|| __TEXT.__text _FBSProcessJetsamPolicyDescription
|| __TEXT.__text _FBSProcessPrettyDescription
|| __TEXT.__text _FBSProcessResourceAllowanceExtend
|| __TEXT.__text _FBSProcessResourceAllowanceGetType
|| __TEXT.__text _FBSProcessResourceAllowanceGetValue
|| __TEXT.__text _FBSProcessResourceAllowanceIsValid
|| __TEXT.__text _FBSProcessResourceAllowanceMake
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithRealTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithScheduledTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithScheduledTimeIntervalAndRefreshInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithValue
|| __TEXT.__text _FBSProcessResourceAllowanceScale
|| __TEXT.__text _FBSProcessResourceAllowanceValue
|| __TEXT.__text _FBSProcessResourceTimeIntervalForValue
|| __TEXT.__text _FBSProcessResourceTypeIsTimeInterval
|| __TEXT.__text _FBSProcessResourceValueForTimeInterval
|| __TEXT.__text _FBSProcessSchedulingPolicyDescription
|| __TEXT.__text _FBSSceneEventSourceDescription
|| __TEXT.__text _FBSSceneSnapshotActionResponseForErrorCode
|| __TEXT.__text _FBSSceneSnapshotErrorForCode
|| __TEXT.__text _FBSSetServiceFacilityManager
|| __TEXT.__text _FBSStringForInstallPhase
|| __TEXT.__text _FBSStringForInstallState
|| __TEXT.__text _FBSStringForInstallType
|| __TEXT.__text _FBSWorkspaceErrorCreate
|| __TEXT.__text _FBSWorkspaceInitialize
|| __TEXT.__text _NSStringFromDiagnosticReportType
|| __TEXT.__text _NSStringFromFBApplicationPlaceholderProgressState
|| __TEXT.__text _NSStringFromFBSApplicationLibraryLogStep
|| __TEXT.__text _NSStringFromFBSApplicationPlaceholderAction
|| __TEXT.__text _NSStringFromFBSApplicationPlaceholderProgressState
|| __TEXT.__text _NSStringFromFBSApplicationTrustState
|| __TEXT.__text _NSStringFromFBSOpenApplicationLaunchIntent
|| __TEXT.__text _NSStringFromFBSSceneActivityMode
|| __TEXT.__text _NSStringFromFBSSceneInterruptionPolicy
|| __TEXT.__text _NSStringFromFBSSceneJetsamMode
|| __TEXT.__text _NSStringFromFBSSceneLayerAlignment
|| __TEXT.__text _NSStringFromFBSWorkspaceErrorCode
|| __TEXT.__text _NSStringFromProcessResourceAllowance
|| __TEXT.__text _NSStringFromProcessResourceType
|| __TEXT.__text _NSStringFromProcessResourceValue
|| __TEXT.__text __NSStringFromFBSDisplayLayoutQOS
|| __TEXT.__text __QOSClassForFBSDisplayLayoutQOS
|| __TEXT.__text _amfi_interface_authorize_local_signing
|| __TEXT.__text _amfi_interface_cdhash_in_trustcache
|| __TEXT.__text _amfi_interface_get_local_signing_private_key
|| __TEXT.__text _amfi_interface_get_local_signing_public_key
|| __TEXT.__text _amfi_interface_query_bootarg_state
|| __TEXT.__text _amfi_interface_set_local_signing_public_key
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AssertionServices: _OBJC_CLASS_$_BKSTerminationAssertion
__ AssertionServices: _OBJC_CLASS_$_BKSTerminationContext
__ BackBoardServices: _BKLogDisplay
__ BackBoardServices: _BKSDisplayServicesGetExternalDisplayScale
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _LSHiddenAppType
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileInstallation: _OBJC_CLASS_$_AITransactionLog
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ SoftLinking: __sl_dlopen
__ _BSAtomicGetFlag 
__ _BSAtomicSetFlag 
__ _BSContinuousMachTimeNow 
__ _BSCreateDeserializedArrayFromXPCDictionaryWithKey 
__ _BSCreateDeserializedBSXPCEncodableObjectFromXPCDictionary 
__ _BSCreateDeserializedBSXPCEncodableObjectFromXPCDictionaryWithKey 
__ _BSCreateDeserializedCFValueFromXPCDictionaryWithKey 
__ _BSCreateDeserializedSetOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSCreateDeserializedStringFromXPCDictionaryWithKey 
__ _BSCreateSerializedBSXPCEncodableObject 
__ _BSDeserializeArrayOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSDeserializeBSXPCEncodableObjectFromXPCDictionaryWithKey 
__ _BSDeserializeCFValueFromXPCDictionaryWithKey 
__ _BSDeserializeCGFloatFromXPCDictionaryWithKey 
__ _BSDeserializeCGRectFromXPCDictionaryWithKey 
__ _BSDeserializeCGRectFromXPCObject 
__ _BSDeserializeCGSizeFromXPCDictionaryWithKey 
__ _BSDeserializeCGSizeFromXPCObject 
__ _BSDeserializeDoubleFromXPCDictionaryWithKey 
__ _BSDeserializeNSSecureEncodableObjectOfClassFromXPCDictionaryWithKey 
__ _BSDeserializeSetOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSDeserializeStringFromXPCDictionaryWithKey 
__ _BSDispatchBlockCreateWithCurrentQualityOfService 
__ _BSDispatchMain 
__ _BSDispatchQueueAssert 
__ _BSDispatchQueueAssertMain 
__ _BSDispatchQueueAssertNot 
__ _BSDispatchQueueCreate 
__ _BSDispatchQueueCreateSerial 
__ _BSDispatchQueueCreateWithQualityOfService 
__ _BSEqualBools 
__ _BSEqualObjects 
__ _BSErrorCodeDescriptionKey 
__ _BSFloatEqualToFloat 
__ _BSFloatGreaterThanFloat 
__ _BSFloatGreaterThanOrEqualToFloat 
__ _BSFloatIsOne 
__ _BSFloatIsZero 
__ _BSFloatLessThanFloat 
__ _BSFloatLessThanOrEqualToFloat 
__ _BSInterfaceOrientationDescription 
__ _BSInterfaceOrientationIsLandscape 
__ _BSLogAddStateCaptureBlockWithTitle 
__ _BSModificationDateForPath 
__ _BSOrientationRotationDirectionDescription 
__ _BSRectEqualToRect 
__ _BSRectFromValue 
__ _BSRectWithSize 
__ _BSSelfTaskHasEntitlement 
__ _BSSerializeArrayOfBSXPCEncodableObjectsToXPCDictionaryWithKey 
__ _BSSerializeArrayToXPCDictionaryWithKey 
__ _BSSerializeBSXPCEncodableObjectToXPCDictionary 
__ _BSSerializeBSXPCEncodableObjectToXPCDictionaryWithKey 
__ _BSSerializeCFValueToXPCDictionaryWithKey 
__ _BSSerializeCGFloatToXPCDictionaryWithKey 
__ _BSSerializeCGRectToXPCDictionaryWithKey 
__ _BSSerializeCGSizeToXPCDictionaryWithKey 
__ _BSSerializeDoubleToXPCDictionaryWithKey 
__ _BSSerializeNSSecureEncodableObjectToXPCDictionaryWithKey 
__ _BSSerializeSetOfBSXPCEncodableObjectsToXPCDictionaryWithKey 
__ _BSSerializeStringToXPCDictionaryWithKey 
__ _BSSettingFlagForBool 
__ _BSSettingFlagIfYes 
__ _BSSettingFlagIsYes 
__ _BSSizeEqualToSize 
__ _BSSizeFromValue 
__ _BSStringFromBOOL 
__ _BSStringFromCGRect 
__ _BSStringFromCGSize 
__ _BSValueWithRect 
__ _BSValueWithSize 
__ _OBJC_CLASS_$_BSAbsoluteMachTimer 
__ _OBJC_CLASS_$_BSAction 
__ _OBJC_CLASS_$_BSActionResponder 
__ _OBJC_CLASS_$_BSActionResponse 
__ _OBJC_CLASS_$_BSAtomicSignal 
__ _OBJC_CLASS_$_BSDescriptionBuilder 
__ _OBJC_CLASS_$_BSDispatchQueueAttributes 
__ _OBJC_CLASS_$_BSEqualsBuilder 
__ _OBJC_CLASS_$_BSHashBuilder 
__ _OBJC_CLASS_$_BSMachPortTaskNameRight 
__ _OBJC_CLASS_$_BSMachServiceAliases 
__ _OBJC_CLASS_$_BSMutableKeyedSettings 
__ _OBJC_CLASS_$_BSMutableServiceInterface 
__ _OBJC_CLASS_$_BSMutableSettings 
__ _OBJC_CLASS_$_BSObjCProtocol 
__ _OBJC_CLASS_$_BSPlatform 
__ _OBJC_CLASS_$_BSProcessHandle 
__ _OBJC_CLASS_$_BSServiceConnection 
__ _OBJC_CLASS_$_BSServiceConnectionEndpoint 
__ _OBJC_CLASS_$_BSServiceConnectionEndpointMonitor 
__ _OBJC_CLASS_$_BSServiceConnectionListener 
__ _OBJC_CLASS_$_BSServiceQuality 
__ _OBJC_CLASS_$_BSServicesConfiguration 
__ _OBJC_CLASS_$_BSSettings 
__ _OBJC_CLASS_$_BSSettingsDiff 
__ _OBJC_CLASS_$_BSSimpleAssertion 
__ _OBJC_CLASS_$_BSXPCCoder 
__ _OBJC_CLASS_$_BSXPCCodingArray 
__ _OBJC_METACLASS_$_BSAction 
__ _OBJC_METACLASS_$_BSProcessHandle 
__ __BSSafeCast 
__ __bs_set_crash_log_message 
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___sandbox_ms
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_barrier
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_handoff_reply
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _method_setImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
FBSSceneSnapshotRequest : NSObject <BSXPCCoding>
 @property  NSString *sceneID
 @property  <FBSSceneSnapshotRequestDelegate> *delegate
 @property  FBSSceneSettings *settings
 @property  BOOL allowsProtectedContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneSnapshotRequest allowsProtectedContent]
  -[FBSSceneSnapshotRequest initWithSettings:allowsProtectedContent:]
  -[FBSSceneSnapshotRequest encodeWithXPCDictionary:]
  -[FBSSceneSnapshotRequest .cxx_destruct]
  -[FBSSceneSnapshotRequest initWithXPCDictionary:]
  -[FBSSceneSnapshotRequest succinctDescriptionBuilder]
  -[FBSSceneSnapshotRequest setDelegate:]
  -[FBSSceneSnapshotRequest sceneID]
  -[FBSSceneSnapshotRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSnapshotRequest setSceneID:]
  -[FBSSceneSnapshotRequest initWithSettings:]
  -[FBSSceneSnapshotRequest descriptionWithMultilinePrefix:]
  -[FBSSceneSnapshotRequest succinctDescription]
  -[FBSSceneSnapshotRequest performSnapshotWithContext:]
  -[FBSSceneSnapshotRequest delegate]
  -[FBSSceneSnapshotRequest settings]


FBSSceneSnapshotRequestAction : BSAction
 @property  unsigned long type
 @property  FBSSceneSnapshotContext *context

  // instance methods
  -[FBSSceneSnapshotRequestAction valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSnapshotRequestAction keyDescriptionForSetting:]
  -[FBSSceneSnapshotRequestAction type]
  -[FBSSceneSnapshotRequestAction _initWithType:context:responder:]
  -[FBSSceneSnapshotRequestAction context]


FBSSceneTransitionContext : NSObject <BSXPCCoding, BSDescriptionProviding, NSCopying, NSMutableCopying>
 @property  FBSceneUpdateContext *updateContext
 @property  FBWatchdogTransitionContext *watchdogTransitionContext
 @property  BSAnimationSettings *animationSettings
 @property  BKSAnimationFenceHandle *animationFence
 @property  NSSet *actions
 @property  BSProcessHandle *originatingProcess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneTransitionContext transitionContext]

  // instance methods
  -[FBSSceneTransitionContext valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneTransitionContext _isEmpty]
  -[FBSSceneTransitionContext setActions:]
  -[FBSSceneTransitionContext setAnimationSettings:]
  -[FBSSceneTransitionContext animationSettings]
  -[FBSSceneTransitionContext encodeWithXPCDictionary:]
  -[FBSSceneTransitionContext .cxx_destruct]
  -[FBSSceneTransitionContext keyDescriptionForSetting:]
  -[FBSSceneTransitionContext settings:appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneTransitionContext initWithXPCDictionary:]
  -[FBSSceneTransitionContext succinctDescriptionBuilder]
  -[FBSSceneTransitionContext actions]
  -[FBSSceneTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneTransitionContext animationFence]
  -[FBSSceneTransitionContext isEqual:]
  -[FBSSceneTransitionContext setOriginatingProcess:]
  -[FBSSceneTransitionContext transientLocalClientSettings]
  -[FBSSceneTransitionContext descriptionWithMultilinePrefix:]
  -[FBSSceneTransitionContext settings:keyDescriptionForSetting:]
  -[FBSSceneTransitionContext succinctDescription]
  -[FBSSceneTransitionContext setAnimationFence:]
  -[FBSSceneTransitionContext otherSettings]
  -[FBSSceneTransitionContext settings:valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneTransitionContext originatingProcess]
  -[FBSSceneTransitionContext mutableCopyWithZone:]
  -[FBSSceneTransitionContext dealloc]
  -[FBSSceneTransitionContext appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneTransitionContext copyWithZone:]


FBSApplicationInfo : FBSBundleInfo <BSDescriptionProviding>
 @property  unsigned int signatureVersion
 @property  BOOL isSignatureVersionSupported
 @property  BOOL isSignatureVersionSupportEndingSoon
 @property  _FBSCDHashCacheInfo *cachedCDHashInfo
 @property  BOOL builtWithTSAN
 @property  NSURL *advertisingAttributionReportEndpoint
 @property  NSString *appIDEntitlement
 @property  BOOL installing
 @property  BOOL uninstalling
 @property  BOOL pendingUninstall
 @property  long long interfaceOrientation
 @property  unsigned long supportedInterfaceOrientations
 @property  BOOL enabled
 @property  NSURL *executableURL
 @property  NSURL *bundleContainerURL
 @property  NSURL *dataContainerURL
 @property  NSURL *sandboxURL
 @property  double lastModifiedDate
 @property  NSString *preferenceDomain
 @property  NSString *teamIdentifier
 @property  NSString *signerIdentity
 @property  NSDictionary *environmentVariables
 @property  NSDictionary *entitlements
 @property  BOOL hasViewServicesEntitlement
 @property  NSArray *tags
 @property  NSArray *customMachServices
 @property  BOOL supportsMultiwindow
 @property  BOOL provisioningProfileValidated
 @property  BOOL UPPProvisioningProfileValidated
 @property  BOOL freeDeveloperProvisioningProfileValidated
 @property  unsigned long type
 @property  BOOL restricted
 @property  BOOL blocked
 @property  NSArray *requiredCapabilities
 @property  NSArray *deviceFamilies
 @property  NSString *sdkVersion
 @property  BOOL beta
 @property  NSString *shortVersionString
 @property  BOOL exitsOnSuspend
 @property  BOOL requiresPersistentWiFi
 @property  float minimumBrightnessLevel
 @property  NSArray *externalAccessoryProtocols
 @property  long long screenTimePolicy
 @property  BOOL blockedForScreenTimeExpiration
 @property  long long ratingRank
 @property  NSNumber *itemID
 @property  NSNumber *purchaserDSID
 @property  NSNumber *downloaderDSID
 @property  NSArray *folderNames
 @property  NSString *fallbackFolderName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSApplicationInfo _applicationTypeForProxy:]
  +[FBSApplicationInfo _configureEnvironment:withInfo:isPreApex:]

  // instance methods
  -[FBSApplicationInfo isRestricted]
  -[FBSApplicationInfo dataContainerURL]
  -[FBSApplicationInfo isBlocked]
  -[FBSApplicationInfo isExitsOnSuspend]
  -[FBSApplicationInfo executableURL]
  -[FBSApplicationInfo bundleContainerURL]
  -[FBSApplicationInfo shortVersionString]
  -[FBSApplicationInfo signatureVersion]
  -[FBSApplicationInfo isBlockedForScreenTimeExpiration]
  -[FBSApplicationInfo externalAccessoryProtocols]
  -[FBSApplicationInfo deviceFamilies]
  -[FBSApplicationInfo supportsMultiwindow]
  -[FBSApplicationInfo purchaserDSID]
  -[FBSApplicationInfo .cxx_destruct]
  -[FBSApplicationInfo preferenceDomain]
  -[FBSApplicationInfo itemID]
  -[FBSApplicationInfo setInterfaceOrientation:]
  -[FBSApplicationInfo succinctDescriptionBuilder]
  -[FBSApplicationInfo signerIdentity]
  -[FBSApplicationInfo descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationInfo entitlements]
  -[FBSApplicationInfo _synchronize:]
  -[FBSApplicationInfo folderNames]
  -[FBSApplicationInfo initWithApplicationProxy:]
  -[FBSApplicationInfo supportsDeviceFamily:]
  -[FBSApplicationInfo sandboxURL]
  -[FBSApplicationInfo fallbackFolderName]
  -[FBSApplicationInfo interfaceOrientation]
  -[FBSApplicationInfo screenTimePolicy]
  -[FBSApplicationInfo teamIdentifier]
  -[FBSApplicationInfo _initWithApplicationProxy:]
  -[FBSApplicationInfo _initWithApplicationProxy:overrideURL:]
  -[FBSApplicationInfo _initWithBundleProxy:overrideURL:]
  -[FBSApplicationInfo builtOnOrAfterSDKVersion:]
  -[FBSApplicationInfo customMachServices]
  -[FBSApplicationInfo _initWithBundleIdentifier:url:]
  -[FBSApplicationInfo supportsBackgroundMode:]
  -[FBSApplicationInfo supportsInterfaceOrientation:]
  -[FBSApplicationInfo supportsAllInterfaceOrientations]
  -[FBSApplicationInfo _overrideTags:]
  -[FBSApplicationInfo isBeta]
  -[FBSApplicationInfo hasViewServicesEntitlement]
  -[FBSApplicationInfo isProvisioningProfileValidated]
  -[FBSApplicationInfo isUPPProvisioningProfileValidated]
  -[FBSApplicationInfo isFreeDeveloperProvisioningProfileValidated]
  -[FBSApplicationInfo requiresPersistentWiFi]
  -[FBSApplicationInfo minimumBrightnessLevel]
  -[FBSApplicationInfo wasBuiltWithTSAN]
  -[FBSApplicationInfo _appIDEntitlement]
  -[FBSApplicationInfo advertisingAttributionReportEndpoint]
  -[FBSApplicationInfo _isInstalling]
  -[FBSApplicationInfo _setInstalling:]
  -[FBSApplicationInfo _isUninstalling]
  -[FBSApplicationInfo _setUninstalling:]
  -[FBSApplicationInfo _isPendingUninstall]
  -[FBSApplicationInfo _setPendingUninstall:]
  -[FBSApplicationInfo requiredCapabilities]
  -[FBSApplicationInfo downloaderDSID]
  -[FBSApplicationInfo sdkVersion]
  -[FBSApplicationInfo unauthoritativeTrustState]
  -[FBSApplicationInfo isSignatureVersionSupported]
  -[FBSApplicationInfo isSignatureVersionSupportEndingSoon]
  -[FBSApplicationInfo setCachedCDHashInfo:]
  -[FBSApplicationInfo cachedCDHashInfo]
  -[FBSApplicationInfo isEnabled]
  -[FBSApplicationInfo environmentVariables]
  -[FBSApplicationInfo type]
  -[FBSApplicationInfo setSupportedInterfaceOrientations:]
  -[FBSApplicationInfo ratingRank]
  -[FBSApplicationInfo supportedInterfaceOrientations]
  -[FBSApplicationInfo _loadFromProxy:]
  -[FBSApplicationInfo lastModifiedDate]
  -[FBSApplicationInfo tags]


_FBSCDHashCacheInfo : NSObject
 @property  NSData *cachedCodeDirectoryHash
 @property  unsigned int cachedCodeDirectoryHashType

  // class methods
  +[_FBSCDHashCacheInfo cacheInfoWithData:hashType:]

  // instance methods
  -[_FBSCDHashCacheInfo .cxx_destruct]
  -[_FBSCDHashCacheInfo cachedCodeDirectoryHash]
  -[_FBSCDHashCacheInfo cachedCodeDirectoryHashType]


FBSUIApplicationWorkspaceShim : NSObject <FBSWorkspaceDelegate_Exiting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSUIApplicationWorkspaceShim sceneWithIdentifier:]
  -[FBSUIApplicationWorkspaceShim workspaceShouldExit:withTransitionContext:]
  -[FBSUIApplicationWorkspaceShim workspace:willDestroyScene:withTransitionContext:completion:]
  -[FBSUIApplicationWorkspaceShim enumerateScenesWithBlock:]
  -[FBSUIApplicationWorkspaceShim .cxx_destruct]
  -[FBSUIApplicationWorkspaceShim workspace:didCreateScene:withTransitionContext:completion:]
  -[FBSUIApplicationWorkspaceShim setDelegate:]
  -[FBSUIApplicationWorkspaceShim requestSceneCreationWithInitialClientSettings:completion:]
  -[FBSUIApplicationWorkspaceShim _initWithSerialQueue:original:]
  -[FBSUIApplicationWorkspaceShim scenes]
  -[FBSUIApplicationWorkspaceShim defaultShellEndpoint]
  -[FBSUIApplicationWorkspaceShim delegate]
  -[FBSUIApplicationWorkspaceShim requestSceneCreationWithIdentifier:initialClientSettings:completion:]
  -[FBSUIApplicationWorkspaceShim requestSceneFromEndpoint:withOptions:completion:]
  -[FBSUIApplicationWorkspaceShim workspace:didReceiveActions:]


FBSUIApplicationWorkspace : FBSWorkspace
 @property  <FBSUIApplicationWorkspaceDelegate> *delegate

  // instance methods
  -[FBSUIApplicationWorkspace setDelegate:]
  -[FBSUIApplicationWorkspace delegate]
  -[FBSUIApplicationWorkspace initWithSerialQueue:]


FBSApplicationProvisioningProfile : NSObject
 @property  NSString *signerIdentity
 @property  NSDate *expirationDate
 @property  BOOL appleInternalProfile
 @property  BOOL beta
 @property  BOOL freeDeveloperProfile
 @property  BOOL provisionsAllDevices
 @property  BOOL provisionsThisDevice
 @property  NSString *UUID

  // instance methods
  -[FBSApplicationProvisioningProfile UUID]
  -[FBSApplicationProvisioningProfile .cxx_destruct]
  -[FBSApplicationProvisioningProfile succinctDescriptionBuilder]
  -[FBSApplicationProvisioningProfile signerIdentity]
  -[FBSApplicationProvisioningProfile descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationProvisioningProfile descriptionWithMultilinePrefix:]
  -[FBSApplicationProvisioningProfile isBeta]
  -[FBSApplicationProvisioningProfile succinctDescription]
  -[FBSApplicationProvisioningProfile isAppleInternalProfile]
  -[FBSApplicationProvisioningProfile initWithSignerIdentity:profile:]
  -[FBSApplicationProvisioningProfile allowsApplicationIdentifierEntitlement:]
  -[FBSApplicationProvisioningProfile isFreeDeveloperProfile]
  -[FBSApplicationProvisioningProfile provisionsAllDevices]
  -[FBSApplicationProvisioningProfile provisionsThisDevice]
  -[FBSApplicationProvisioningProfile expirationDate]


FBSWorkspaceSceneRequestOptions : NSObject <BSXPCSecureCoding>
 @property  BOOL keyboardScene
 @property  NSString *identifier
 @property  FBSSceneSpecification *specification
 @property  FBSSceneClientSettings *initialClientSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSWorkspaceSceneRequestOptions supportsBSXPCSecureCoding]

  // instance methods
  -[FBSWorkspaceSceneRequestOptions encodeWithBSXPCCoder:]
  -[FBSWorkspaceSceneRequestOptions initWithBSXPCCoder:]
  -[FBSWorkspaceSceneRequestOptions .cxx_destruct]
  -[FBSWorkspaceSceneRequestOptions specification]
  -[FBSWorkspaceSceneRequestOptions identifier]
  -[FBSWorkspaceSceneRequestOptions initialClientSettings]
  -[FBSWorkspaceSceneRequestOptions setSpecification:]
  -[FBSWorkspaceSceneRequestOptions setKeyboardScene:]
  -[FBSWorkspaceSceneRequestOptions setIdentifier:]
  -[FBSWorkspaceSceneRequestOptions setInitialClientSettings:]
  -[FBSWorkspaceSceneRequestOptions isKeyboardScene]


_FBSMISInterfaceWrapperImpl : NSObject <_FBSMISInterfaceWrapper>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSMISInterfaceWrapperImpl signatureVersion:version:]
  -[_FBSMISInterfaceWrapperImpl validateSignatureForPath:options:userInfo:]


FBSSignatureValidationService : NSObject <FBSApplicationTrustDataProvider>
 @property  BOOL authoritative
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSignatureValidationService setAuthoritative:]
  -[FBSSignatureValidationService _logTrustState:forApp:reason:]
  -[FBSSignatureValidationService .cxx_destruct]
  -[FBSSignatureValidationService _validateApp:]
  -[FBSSignatureValidationService _initWithMISInterfaceWrapper:]
  -[FBSSignatureValidationService init]
  -[FBSSignatureValidationService signatureVersionForApp:]
  -[FBSSignatureValidationService trustStateForApplication:]
  -[FBSSignatureValidationService authoritative]


FBSScene : NSObject <FBSSceneSnapshotRequestDelegate, FBSSceneHandle, FBSSceneAgentProxy, FBSSceneUpdaterDelegate, BSDescriptionProviding>
 @property  NSString *_groupID
 @property  NSString *identifier
 @property  FBSSceneIdentityToken *identityToken
 @property  FBSSceneSpecification *specification
 @property  <FBSSceneDelegate> *delegate
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSScene _canHaveAgent]

  // instance methods
  -[FBSScene clientSettings]
  -[FBSScene contexts]
  -[FBSScene hostProcess]
  -[FBSScene layers]
  -[FBSScene updateClientSettingsWithBlock:]
  -[FBSScene _groupID]
  -[FBSScene display]
  -[FBSScene definition]
  -[FBSScene callOutQueue]
  -[FBSScene _hasAgent]
  -[FBSScene .cxx_destruct]
  -[FBSScene specification]
  -[FBSScene detachContext:]
  -[FBSScene succinctDescriptionBuilder]
  -[FBSScene setDelegate:]
  -[FBSScene descriptionBuilderWithMultilinePrefix:]
  -[FBSScene init]
  -[FBSScene attachLayer:]
  -[FBSScene detachLayer:]
  -[FBSScene descriptionWithMultilinePrefix:]
  -[FBSScene identifier]
  -[FBSScene succinctDescription]
  -[FBSScene openSessionWithName:executionPolicy:]
  -[FBSScene fbsDisplay]
  -[FBSScene updateClientSettingsWithTransitionBlock:]
  -[FBSScene snapshotRequestAllowSnapshot:]
  -[FBSScene attachContext:]
  -[FBSScene snapshotRequest]
  -[FBSScene _calloutQueue_comsumeLock_updateClientSettings:withTransitionContext:]
  -[FBSScene updateClientSettings:withTransitionContext:]
  -[FBSScene attachSceneContext:]
  -[FBSScene detachSceneContext:]
  -[FBSScene _callOutQueue_invalidateAgent]
  -[FBSScene updater:didReceiveActions:]
  -[FBSScene updater:didUpdateSettings:withDiff:transitionContext:completion:]
  -[FBSScene updater:didReceiveMessage:withResponse:]
  -[FBSScene _initWithUpdater:sceneID:groupID:specification:settings:initialClientSettings:]
  -[FBSScene _callOutQueue_invalidate]
  -[FBSScene _callOutQueue_agent_didCreateWithTransitionContext:completion:]
  -[FBSScene _callOutQueue_agent_willDestroyWithTransitionContext:completion:]
  -[FBSScene counterpartAgent]
  -[FBSScene performSnapshotWithContext:]
  -[FBSScene delegate]
  -[FBSScene agent:registerMessageHandler:]
  -[FBSScene agent:sendMessage:withResponse:]
  -[FBSScene clientProcess]
  -[FBSScene _group]
  -[FBSScene sendActions:]
  -[FBSScene closeSession:]
  -[FBSScene parameters]
  -[FBSScene snapshotRequest:performWithContext:]
  -[FBSScene invalidateSnapshotWithContext:]
  -[FBSScene settings]
  -[FBSScene identityToken]


FBSApplicationDataStoreClientFactory : NSObject
 @property  NSArray *prefetchedKeys

  // class methods
  +[FBSApplicationDataStoreClientFactory sharedInstance]
  +[FBSApplicationDataStoreClientFactory isServerProcess]

  // instance methods
  -[FBSApplicationDataStoreClientFactory checkin]
  -[FBSApplicationDataStoreClientFactory .cxx_destruct]
  -[FBSApplicationDataStoreClientFactory init]
  -[FBSApplicationDataStoreClientFactory prefetchedKeys]
  -[FBSApplicationDataStoreClientFactory checkout]
  -[FBSApplicationDataStoreClientFactory setPrefetchedKeys:]


FBSSystemServiceSpecification : NSObject
  // class methods
  +[FBSSystemServiceSpecification identifier]


FBSApplicationDataStoreRepositoryClient : FBSServiceFacilityClient <FBSApplicationDataStoreRepositoryClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationDataStoreRepositoryClient addPrefetchedKeys:]
  -[FBSApplicationDataStoreRepositoryClient setObject:forKey:forApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient _observers]
  -[FBSApplicationDataStoreRepositoryClient objectForKey:forApplication:]
  -[FBSApplicationDataStoreRepositoryClient removePrefetchedKeys:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient clientCallbackQueue]
  -[FBSApplicationDataStoreRepositoryClient _sendMessageType:withMessage:withReplyHandler:waitForReply:]
  -[FBSApplicationDataStoreRepositoryClient availableDataStores]
  -[FBSApplicationDataStoreRepositoryClient .cxx_destruct]
  -[FBSApplicationDataStoreRepositoryClient fireCompletion:result:error:]
  -[FBSApplicationDataStoreRepositoryClient _isChangeInFlightForPrefetchedKey:application:]
  -[FBSApplicationDataStoreRepositoryClient init]
  -[FBSApplicationDataStoreRepositoryClient prefetchedObjectIfAvailableForKey:application:outObject:]
  -[FBSApplicationDataStoreRepositoryClient handleMessage:withType:]
  -[FBSApplicationDataStoreRepositoryClient addObserver:]
  -[FBSApplicationDataStoreRepositoryClient _sendPrefetchedKeys:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient _allPrefetchedChangesInFlightForApplication:]
  -[FBSApplicationDataStoreRepositoryClient _handleStoreInvalidated:]
  -[FBSApplicationDataStoreRepositoryClient removeObjectForKey:forApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient removeAllObjectsForApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient synchronizeWithCompletion:]
  -[FBSApplicationDataStoreRepositoryClient _setChangeInFlight:forPrefetchedKey:application:]
  -[FBSApplicationDataStoreRepositoryClient invalidate]
  -[FBSApplicationDataStoreRepositoryClient _setPrefetchedObjectIfNecessary:forKey:application:]
  -[FBSApplicationDataStoreRepositoryClient removeObserver:]
  -[FBSApplicationDataStoreRepositoryClient fireCompletion:error:]
  -[FBSApplicationDataStoreRepositoryClient _handleValueChanged:]


FBSSceneSettingsDiff : FBSSettingsDiff
  // class methods
  +[FBSSceneSettingsDiff diffFromSettings:toSettings:]

  // instance methods
  -[FBSSceneSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSettingsDiff keyDescriptionForSetting:]
  -[FBSSceneSettingsDiff evaluateWithInspector:context:]
  -[FBSSceneSettingsDiff settingsByApplyingToMutableCopyOfSettings:]


FBSOrientationUpdate : NSObject
 @property  long long orientation
 @property  unsigned long sequenceNumber
 @property  double duration
 @property  long long rotationDirection

  // instance methods
  -[FBSOrientationUpdate setOrientation:]
  -[FBSOrientationUpdate setSequenceNumber:]
  -[FBSOrientationUpdate setDuration:]
  -[FBSOrientationUpdate init]
  -[FBSOrientationUpdate setRotationDirection:]
  -[FBSOrientationUpdate orientation]
  -[FBSOrientationUpdate sequenceNumber]
  -[FBSOrientationUpdate initWithOrientation:sequenceNumber:duration:rotationDirection:]
  -[FBSOrientationUpdate rotationDirection]
  -[FBSOrientationUpdate duration]


FBSOrientationObserver : NSObject <FBSOrientationObserverClientDelegate, BSInvalidatable>
 @property  @? handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSOrientationObserver activeInterfaceOrientation]
  -[FBSOrientationObserver client:handleOrientationUpdate:]
  -[FBSOrientationObserver .cxx_destruct]
  -[FBSOrientationObserver init]
  -[FBSOrientationObserver handleOrientationResetForClient:]
  -[FBSOrientationObserver activeInterfaceOrientationWithCompletion:]
  -[FBSOrientationObserver _getAndSetFreshestUpdateGivenUpdate:]
  -[FBSOrientationObserver dealloc]
  -[FBSOrientationObserver setHandler:]
  -[FBSOrientationObserver invalidate]
  -[FBSOrientationObserver handler]


FBSDisplayLayoutElement : NSObject <NSCopying, BSXPCCoding, BSSettingDescriptionProvider, BSDescriptionProviding, FBSDisplayLayoutElement>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  NSString *identifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} referenceFrame
 @property  long long level
 @property  BOOL fillsDisplayBounds
 @property  BOOL UIApplicationElement
 @property  NSString *bundleIdentifier
 @property  BOOL hasKeyboardFocus
 @property  BSMutableSettings *otherSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayoutElement setLevel:]
  -[FBSDisplayLayoutElement valueDescriptionForFlag:object:ofSetting:]
  -[FBSDisplayLayoutElement referenceFrame]
  -[FBSDisplayLayoutElement level]
  -[FBSDisplayLayoutElement isUIApplicationElement]
  -[FBSDisplayLayoutElement bundleIdentifier]
  -[FBSDisplayLayoutElement initWithIdentifier:]
  -[FBSDisplayLayoutElement encodeWithXPCDictionary:]
  -[FBSDisplayLayoutElement .cxx_destruct]
  -[FBSDisplayLayoutElement keyDescriptionForSetting:]
  -[FBSDisplayLayoutElement setFrame:]
  -[FBSDisplayLayoutElement initWithXPCDictionary:]
  -[FBSDisplayLayoutElement succinctDescriptionBuilder]
  -[FBSDisplayLayoutElement setBundleIdentifier:]
  -[FBSDisplayLayoutElement descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayoutElement init]
  -[FBSDisplayLayoutElement isEqual:]
  -[FBSDisplayLayoutElement descriptionWithMultilinePrefix:]
  -[FBSDisplayLayoutElement identifier]
  -[FBSDisplayLayoutElement succinctDescription]
  -[FBSDisplayLayoutElement otherSettings]
  -[FBSDisplayLayoutElement setReferenceFrame:]
  -[FBSDisplayLayoutElement hasKeyboardFocus]
  -[FBSDisplayLayoutElement fillsDisplayBounds]
  -[FBSDisplayLayoutElement setFillsDisplayBounds:]
  -[FBSDisplayLayoutElement setUIApplicationElement:]
  -[FBSDisplayLayoutElement setHasKeyboardFocus:]
  -[FBSDisplayLayoutElement setOtherSettings:]
  -[FBSDisplayLayoutElement frame]
  -[FBSDisplayLayoutElement fallbackXPCEncodableClass]
  -[FBSDisplayLayoutElement setIdentifier:]
  -[FBSDisplayLayoutElement copyWithZone:]


FBSServiceFacility : NSObject <BSDescriptionProviding, BSInvalidatable>
 @property  NSSet *_prerequisiteMilestones
 @property  NSString *identifier
 @property  FBSSerialQueue *queue
 @property  NSSet *clients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSServiceFacility clients]
  -[FBSServiceFacility noteClientDidDisconnect:]
  -[FBSServiceFacility .cxx_destruct]
  -[FBSServiceFacility succinctDescriptionBuilder]
  -[FBSServiceFacility descriptionBuilderWithMultilinePrefix:]
  -[FBSServiceFacility init]
  -[FBSServiceFacility _prerequisiteMilestones]
  -[FBSServiceFacility descriptionWithMultilinePrefix:]
  -[FBSServiceFacility noteDidReceiveMessage:withType:fromClient:]
  -[FBSServiceFacility identifier]
  -[FBSServiceFacility succinctDescription]
  -[FBSServiceFacility initWithIdentifier:queue:]
  -[FBSServiceFacility shouldAllowClientConnection:withMessage:]
  -[FBSServiceFacility queue_clientDidConnect:withMessage:]
  -[FBSServiceFacility queue_clientDidDisconnect:]
  -[FBSServiceFacility queue_handleMessage:withType:fromClient:]
  -[FBSServiceFacility sendMessage:withType:toClients:]
  -[FBSServiceFacility noteClientDidConnect:withMessage:]
  -[FBSServiceFacility queue]
  -[FBSServiceFacility dealloc]
  -[FBSServiceFacility invalidate]


FBSSceneDefinition : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  FBSSceneIdentity *identity
 @property  FBSSceneClientIdentity *clientIdentity
 @property  FBSSceneSpecification *specification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneDefinition definition]

  // instance methods
  -[FBSSceneDefinition clientIdentity]
  -[FBSSceneDefinition setClientIdentity:]
  -[FBSSceneDefinition isValid]
  -[FBSSceneDefinition .cxx_destruct]
  -[FBSSceneDefinition specification]
  -[FBSSceneDefinition succinctDescriptionBuilder]
  -[FBSSceneDefinition descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneDefinition isEqual:]
  -[FBSSceneDefinition descriptionWithMultilinePrefix:]
  -[FBSSceneDefinition setIdentity:]
  -[FBSSceneDefinition succinctDescription]
  -[FBSSceneDefinition setSpecification:]
  -[FBSSceneDefinition identity]
  -[FBSSceneDefinition mutableCopyWithZone:]
  -[FBSSceneDefinition copyWithZone:]


FBSMutableSceneDefinition : FBSSceneDefinition
 @property  FBSSceneIdentity *identity
 @property  FBSSceneClientIdentity *clientIdentity
 @property  FBSSceneSpecification *specification

  // instance methods
  -[FBSMutableSceneDefinition copyWithZone:]


FBSApplicationPlaceholder : FBSBundleInfo
 @property  LSApplicationProxy *proxy
 @property  FBSApplicationLibrary *appLibrary
 @property  <FBSApplicationPlaceholderProgress> *progress
 @property  BOOL prioritizable
 @property  BOOL pausable
 @property  BOOL resumable
 @property  BOOL cancellable

  // class methods
  +[FBSApplicationPlaceholder _callOutQueue]
  +[FBSApplicationPlaceholder _sharedQueue]

  // instance methods
  -[FBSApplicationPlaceholder isRestricted]
  -[FBSApplicationPlaceholder installType]
  -[FBSApplicationPlaceholder isPausable]
  -[FBSApplicationPlaceholder installPhase]
  -[FBSApplicationPlaceholder isCancellable]
  -[FBSApplicationPlaceholder setAppLibrary:]
  -[FBSApplicationPlaceholder isPrioritizable]
  -[FBSApplicationPlaceholder .cxx_destruct]
  -[FBSApplicationPlaceholder percentComplete]
  -[FBSApplicationPlaceholder installState]
  -[FBSApplicationPlaceholder prioritize]
  -[FBSApplicationPlaceholder succinctDescriptionBuilder]
  -[FBSApplicationPlaceholder progress]
  -[FBSApplicationPlaceholder _proxy]
  -[FBSApplicationPlaceholder descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationPlaceholder pause]
  -[FBSApplicationPlaceholder _initWithApplicationProxy:]
  -[FBSApplicationPlaceholder _initWithBundleIdentifier:url:]
  -[FBSApplicationPlaceholder addObserver:]
  -[FBSApplicationPlaceholder _setProxy:]
  -[FBSApplicationPlaceholder isResumable]
  -[FBSApplicationPlaceholder cancel]
  -[FBSApplicationPlaceholder _setProxy:force:]
  -[FBSApplicationPlaceholder _pauseWithResult:]
  -[FBSApplicationPlaceholder _canPerformAction:]
  -[FBSApplicationPlaceholder _performAction:withResult:]
  -[FBSApplicationPlaceholder _dispatchToObserversWithBlock:]
  -[FBSApplicationPlaceholder _queue_isCloudDemoted]
  -[FBSApplicationPlaceholder _queue_supportedActions]
  -[FBSApplicationPlaceholder _queue_canPerformAction:]
  -[FBSApplicationPlaceholder _resumeWithResult:]
  -[FBSApplicationPlaceholder _cancelWithResult:]
  -[FBSApplicationPlaceholder _prioritizeWithResult:]
  -[FBSApplicationPlaceholder _queue_setProxy:force:]
  -[FBSApplicationPlaceholder _reloadProgress]
  -[FBSApplicationPlaceholder _reloadFromProxy:]
  -[FBSApplicationPlaceholder _initWithBundleProxy:url:]
  -[FBSApplicationPlaceholder _queue_noteChangedSignificantly:]
  -[FBSApplicationPlaceholder _sendToObserversPlaceholderProgressDidUpdate]
  -[FBSApplicationPlaceholder _sendToObserversPlaceholderDidChangeSignificantly]
  -[FBSApplicationPlaceholder prioritizeWithResult:]
  -[FBSApplicationPlaceholder pauseWithResult:]
  -[FBSApplicationPlaceholder resumeWithResult:]
  -[FBSApplicationPlaceholder cancelWithResult:]
  -[FBSApplicationPlaceholder _noteChangedSignificantly]
  -[FBSApplicationPlaceholder resume]
  -[FBSApplicationPlaceholder dealloc]
  -[FBSApplicationPlaceholder removeObserver:]
  -[FBSApplicationPlaceholder appLibrary]


FBSWorkspace : NSObject <BSServiceConnectionEndpointMonitorDelegate, BSDescriptionProviding>
 @property  <FBSWorkspaceDelegate> *delegate
 @property  BSServiceConnectionEndpoint *defaultShellEndpoint
 @property  NSArray *scenes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSWorkspace _sharedWorkspaceIfExists]
  +[FBSWorkspace _registerBlockForWorkspaceCreation:]

  // instance methods
  -[FBSWorkspace sceneWithIdentifier:]
  -[FBSWorkspace _registerSourceEndpoint:]
  -[FBSWorkspace _activate]
  -[FBSWorkspace enumerateScenesWithBlock:]
  -[FBSWorkspace .cxx_destruct]
  -[FBSWorkspace _queue_scenesClientForEndpoint:creatingIfNecessary:]
  -[FBSWorkspace succinctDescriptionBuilder]
  -[FBSWorkspace setDelegate:]
  -[FBSWorkspace _queue_unregisterSource:]
  -[FBSWorkspace descriptionBuilderWithMultilinePrefix:]
  -[FBSWorkspace init]
  -[FBSWorkspace descriptionWithMultilinePrefix:]
  -[FBSWorkspace _initWithOptions:]
  -[FBSWorkspace _queue_registerSource:]
  -[FBSWorkspace succinctDescription]
  -[FBSWorkspace initWithQueue:]
  -[FBSWorkspace requestSceneCreationWithInitialClientSettings:completion:]
  -[FBSWorkspace _activate:]
  -[FBSWorkspace monitor:didReceiveEndpoint:]
  -[FBSWorkspace requestDestructionOfScene:withCompletion:]
  -[FBSWorkspace monitor:willLoseEndpoint:]
  -[FBSWorkspace scenes]
  -[FBSWorkspace defaultShellEndpoint]
  -[FBSWorkspace delegate]
  -[FBSWorkspace _initWithSerialQueue:]
  -[FBSWorkspace requestSceneCreationWithIdentifier:initialClientSettings:completion:]
  -[FBSWorkspace requestSceneFromEndpoint:withOptions:completion:]
  -[FBSWorkspace dealloc]
  -[FBSWorkspace initWithSerialQueue:]
  -[FBSWorkspace _registerSource:]
  -[FBSWorkspace _unregisterSource:]
  -[FBSWorkspace _calloutQueue_executeCalloutFromSource:withBlock:]


FBSProcessWatchdog : NSObject <FBSProcessExecutionProvisionDelegate, BSDescriptionProviding>
 @property  NSString *name
 @property  <FBSProcess> *process
 @property  FBSProcessWatchdogPolicy *policy
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessWatchdog completion]
  -[FBSProcessWatchdog setCompletion:]
  -[FBSProcessWatchdog name]
  -[FBSProcessWatchdog initWithName:process:policy:]
  -[FBSProcessWatchdog _beginMonitoringConstraints]
  -[FBSProcessWatchdog .cxx_destruct]
  -[FBSProcessWatchdog _stopMonitoringConstraints]
  -[FBSProcessWatchdog provision:wasViolatedWithError:]
  -[FBSProcessWatchdog succinctDescriptionBuilder]
  -[FBSProcessWatchdog policy]
  -[FBSProcessWatchdog descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessWatchdog descriptionWithMultilinePrefix:]
  -[FBSProcessWatchdog process]
  -[FBSProcessWatchdog succinctDescription]
  -[FBSProcessWatchdog activate]
  -[FBSProcessWatchdog deactivate]
  -[FBSProcessWatchdog dealloc]
  -[FBSProcessWatchdog invalidate]


FBSCAContextSceneLayer : FBSSceneLayer
 @property  CAContext *CAContext
 @property  unsigned int contextID

  // class methods
  +[FBSCAContextSceneLayer layerWithCAContext:]

  // instance methods
  -[FBSCAContextSceneLayer _succinctDescription]
  -[FBSCAContextSceneLayer isCAContextLayer]
  -[FBSCAContextSceneLayer contextID]
  -[FBSCAContextSceneLayer initWithCAContextID:level:]
  -[FBSCAContextSceneLayer encodeWithXPCDictionary:]
  -[FBSCAContextSceneLayer initWithXPCDictionary:]
  -[FBSCAContextSceneLayer CAContext]
  -[FBSCAContextSceneLayer initWithCAContext:]
  -[FBSCAContextSceneLayer isEqual:]
  -[FBSCAContextSceneLayer _initWithCAContext:contextID:fallbackLevel:]


FBSExtensionInfo : FBSBundleInfo
 @property  NSString *typeIdentifier
 @property  NSString *extensionIdentifier

  // instance methods
  -[FBSExtensionInfo typeIdentifier]
  -[FBSExtensionInfo .cxx_destruct]
  -[FBSExtensionInfo _initWithBundleIdentifier:url:]
  -[FBSExtensionInfo _initWithBundleProxy:url:]
  -[FBSExtensionInfo _initWithPlugInKitProxy:]
  -[FBSExtensionInfo extensionIdentifier]


FBSWorkspaceSceneRemnant : NSObject <BSXPCSecureCoding>
 @property  NSString *identifier
 @property  NSString *group
 @property  FBSSceneParameters *parameters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSWorkspaceSceneRemnant supportsBSXPCSecureCoding]

  // instance methods
  -[FBSWorkspaceSceneRemnant encodeWithBSXPCCoder:]
  -[FBSWorkspaceSceneRemnant initWithBSXPCCoder:]
  -[FBSWorkspaceSceneRemnant .cxx_destruct]
  -[FBSWorkspaceSceneRemnant init]
  -[FBSWorkspaceSceneRemnant identifier]
  -[FBSWorkspaceSceneRemnant group]
  -[FBSWorkspaceSceneRemnant _initWithIdentifier:group:parameters:]
  -[FBSWorkspaceSceneRemnant parameters]


FBSLazyApplicationInfoProvider : NSObject <FBSApplicationInfoProvider>
 @property  Class applicationInfoSubclass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSLazyApplicationInfoProvider init]
  -[FBSLazyApplicationInfoProvider applicationInfoForAuditToken:]
  -[FBSLazyApplicationInfoProvider applicationInfoSubclass]
  -[FBSLazyApplicationInfoProvider setApplicationInfoSubclass:]
  -[FBSLazyApplicationInfoProvider applicationInfoForBundleIdentifier:]


FBSOpenApplicationOptions : NSObject <BSXPCCoding, BSXPCSecureCoding, NSCopying>
 @property  NSDictionary *dictionary
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSOpenApplicationOptions supportsBSXPCSecureCoding]
  +[FBSOpenApplicationOptions optionsWithDictionary:]

  // instance methods
  -[FBSOpenApplicationOptions encodeWithBSXPCCoder:]
  -[FBSOpenApplicationOptions url]
  -[FBSOpenApplicationOptions initWithBSXPCCoder:]
  -[FBSOpenApplicationOptions encodeWithXPCDictionary:]
  -[FBSOpenApplicationOptions .cxx_destruct]
  -[FBSOpenApplicationOptions initWithXPCDictionary:]
  -[FBSOpenApplicationOptions succinctDescriptionBuilder]
  -[FBSOpenApplicationOptions dictionary]
  -[FBSOpenApplicationOptions descriptionBuilderWithMultilinePrefix:]
  -[FBSOpenApplicationOptions descriptionWithMultilinePrefix:]
  -[FBSOpenApplicationOptions _sanitizeAndValidatePayload]
  -[FBSOpenApplicationOptions succinctDescription]
  -[FBSOpenApplicationOptions setDictionary:]
  -[FBSOpenApplicationOptions _updateOption:forKey:]
  -[FBSOpenApplicationOptions copyWithZone:]


FBSSceneSettings : NSObject <BSDebugDescriptionProviding, NSCopying, NSMutableCopying>
 @property  FBSDisplayIdentity *displayIdentity
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double level
 @property  long long interfaceOrientation
 @property  BOOL foreground
 @property  BOOL backgrounded
 @property  long long interruptionPolicy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSettings _isMutable]
  +[FBSSceneSettings settings]

  // instance methods
  -[FBSSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSettings level]
  -[FBSSceneSettings displayConfiguration]
  -[FBSSceneSettings isOccluded]
  -[FBSSceneSettings isForeground]
  -[FBSSceneSettings displayIdentity]
  -[FBSSceneSettings .cxx_destruct]
  -[FBSSceneSettings keyDescriptionForSetting:]
  -[FBSSceneSettings settings:appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneSettings succinctDescriptionBuilder]
  -[FBSSceneSettings descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSettings init]
  -[FBSSceneSettings isEqual:]
  -[FBSSceneSettings initWithSettings:]
  -[FBSSceneSettings interfaceOrientation]
  -[FBSSceneSettings descriptionWithMultilinePrefix:]
  -[FBSSceneSettings settings:keyDescriptionForSetting:]
  -[FBSSceneSettings succinctDescription]
  -[FBSSceneSettings otherSettings]
  -[FBSSceneSettings settings:valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSettings interruptionPolicy]
  -[FBSSceneSettings frame]
  -[FBSSceneSettings activityMode]
  -[FBSSceneSettings occlusions]
  -[FBSSceneSettings transientLocalSettings]
  -[FBSSceneSettings ignoreOcclusionReasons]
  -[FBSSceneSettings _descriptionBuilderWithMultilinePrefix:debug:]
  -[FBSSceneSettings isBackgrounded]
  -[FBSSceneSettings jetsamMode]
  -[FBSSceneSettings isIgnoringOcclusions]
  -[FBSSceneSettings debugDescriptionWithMultilinePrefix:]
  -[FBSSceneSettings mutableCopyWithZone:]
  -[FBSSceneSettings prefersProcessTaskSuspensionWhileSceneForeground]
  -[FBSSceneSettings setPrefersProcessTaskSuspensionWhileSceneForeground:]
  -[FBSSceneSettings dealloc]
  -[FBSSceneSettings appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneSettings copyWithZone:]
  -[FBSSceneSettings bounds]


FBSMutableSceneSettings : FBSSceneSettings
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double level
 @property  long long interfaceOrientation
 @property  BOOL foreground
 @property  BOOL backgrounded
 @property  long long interruptionPolicy

  // class methods
  +[FBSMutableSceneSettings _isMutable]

  // instance methods
  -[FBSMutableSceneSettings setLevel:]
  -[FBSMutableSceneSettings setForeground:]
  -[FBSMutableSceneSettings setOccluded:]
  -[FBSMutableSceneSettings setFrame:]
  -[FBSMutableSceneSettings setBackgrounded:]
  -[FBSMutableSceneSettings setDisplayConfiguration:]
  -[FBSMutableSceneSettings setInterfaceOrientation:]
  -[FBSMutableSceneSettings otherSettings]
  -[FBSMutableSceneSettings _setDisplayConfiguration:]
  -[FBSMutableSceneSettings setInterruptionPolicy:]
  -[FBSMutableSceneSettings transientLocalSettings]
  -[FBSMutableSceneSettings ignoreOcclusionReasons]
  -[FBSMutableSceneSettings mutableCopyWithZone:]
  -[FBSMutableSceneSettings setJetsamMode:]
  -[FBSMutableSceneSettings setActivityMode:]
  -[FBSMutableSceneSettings copyWithZone:]


FBSKeyboardProxyLayer : FBSSceneLayer
 @property  FBSSceneIdentityToken *keyboardOwner

  // instance methods
  -[FBSKeyboardProxyLayer _succinctDescription]
  -[FBSKeyboardProxyLayer alignment]
  -[FBSKeyboardProxyLayer encodeWithXPCDictionary:]
  -[FBSKeyboardProxyLayer .cxx_destruct]
  -[FBSKeyboardProxyLayer isKeyboardProxyLayer]
  -[FBSKeyboardProxyLayer initWithXPCDictionary:]
  -[FBSKeyboardProxyLayer keyboardOwner]
  -[FBSKeyboardProxyLayer isEqual:]
  -[FBSKeyboardProxyLayer initWithLevel:keyboardOwner:]


FBSSceneParameters : NSObject <BSXPCCoding, NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings
 @property  FBSSceneSpecification *specification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneParameters parametersForSpecification:]

  // instance methods
  -[FBSSceneParameters clientSettings]
  -[FBSSceneParameters setClientSettings:]
  -[FBSSceneParameters initWithSpecification:]
  -[FBSSceneParameters encodeWithXPCDictionary:]
  -[FBSSceneParameters .cxx_destruct]
  -[FBSSceneParameters specification]
  -[FBSSceneParameters initWithXPCDictionary:]
  -[FBSSceneParameters succinctDescriptionBuilder]
  -[FBSSceneParameters setSettings:]
  -[FBSSceneParameters descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneParameters init]
  -[FBSSceneParameters isEqual:]
  -[FBSSceneParameters descriptionWithMultilinePrefix:]
  -[FBSSceneParameters succinctDescription]
  -[FBSSceneParameters initWithParameters:]
  -[FBSSceneParameters mutableCopyWithZone:]
  -[FBSSceneParameters updateSettingsWithBlock:]
  -[FBSSceneParameters copyWithZone:]
  -[FBSSceneParameters settings]


FBSMutableSceneParameters : FBSSceneParameters
 @property  FBSSceneSpecification *specification
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings

  // instance methods
  -[FBSMutableSceneParameters updateClientSettingsWithBlock:]
  -[FBSMutableSceneParameters .cxx_destruct]
  -[FBSMutableSceneParameters setSettings:]
  -[FBSMutableSceneParameters setDisplay:]
  -[FBSMutableSceneParameters updateSettingsWithBlock:]
  -[FBSMutableSceneParameters copyWithZone:]
  -[FBSMutableSceneParameters applyParameters:]
  -[FBSMutableSceneParameters _setSpecification:]


FBSSceneActivitySession : NSObject <BSDescriptionProviding>
 @property  NSString *name
 @property  <FBSSceneHandle> *scene
 @property  FBSProcessExecutionPolicy *executionPolicy
 @property  NSString *identifier
 @property  BOOL open
 @property  BOOL invalidated
 @property  @? errorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneActivitySession setScene:]
  -[FBSSceneActivitySession isInvalidated]
  -[FBSSceneActivitySession name]
  -[FBSSceneActivitySession .cxx_destruct]
  -[FBSSceneActivitySession scene]
  -[FBSSceneActivitySession succinctDescriptionBuilder]
  -[FBSSceneActivitySession setName:]
  -[FBSSceneActivitySession isOpen]
  -[FBSSceneActivitySession _isValid]
  -[FBSSceneActivitySession descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneActivitySession setErrorHandler:]
  -[FBSSceneActivitySession descriptionWithMultilinePrefix:]
  -[FBSSceneActivitySession identifier]
  -[FBSSceneActivitySession succinctDescription]
  -[FBSSceneActivitySession errorHandler]
  -[FBSSceneActivitySession initWithName:scene:executionPolicy:]
  -[FBSSceneActivitySession executionPolicy]
  -[FBSSceneActivitySession setExecutionPolicy:]
  -[FBSSceneActivitySession close]
  -[FBSSceneActivitySession dealloc]
  -[FBSSceneActivitySession invalidate]
  -[FBSSceneActivitySession open]


FBSProcessHandle : BSProcessHandle
  // class methods
  +[FBSProcessHandle allocWithZone:]


FBSApplicationDataStoreMonitor : NSObject <FBSApplicationDataStoreRepositoryClientObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationDataStoreMonitor .cxx_destruct]
  -[FBSApplicationDataStoreMonitor init]
  -[FBSApplicationDataStoreMonitor addObserver:]
  -[FBSApplicationDataStoreMonitor applicationDataStoreRepositoryClient:application:changedObject:forKey:]
  -[FBSApplicationDataStoreMonitor applicationDataStoreRepositoryClient:storeInvalidatedForApplication:]
  -[FBSApplicationDataStoreMonitor _hasObserver:]
  -[FBSApplicationDataStoreMonitor dealloc]
  -[FBSApplicationDataStoreMonitor removeObserver:]
  -[FBSApplicationDataStoreMonitor initWithClient:]


FBSSceneIdentityToken : NSObject <BSXPCSecureCoding, BSXPCCoding, NSSecureCoding, NSCopying>
 @property  BSServiceConnectionEndpoint *endpoint
 @property  NSString *identifier
 @property  NSString *workspaceIdentifier
 @property  NSString *stringRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneIdentityToken supportsBSXPCSecureCoding]
  +[FBSSceneIdentityToken supportsSecureCoding]

  // instance methods
  -[FBSSceneIdentityToken encodeWithBSXPCCoder:]
  -[FBSSceneIdentityToken stringRepresentation]
  -[FBSSceneIdentityToken initWithCoder:]
  -[FBSSceneIdentityToken initWithBSXPCCoder:]
  -[FBSSceneIdentityToken encodeWithXPCDictionary:]
  -[FBSSceneIdentityToken workspaceIdentifier]
  -[FBSSceneIdentityToken .cxx_destruct]
  -[FBSSceneIdentityToken initWithXPCDictionary:]
  -[FBSSceneIdentityToken init]
  -[FBSSceneIdentityToken isEqual:]
  -[FBSSceneIdentityToken identifier]
  -[FBSSceneIdentityToken endpoint]
  -[FBSSceneIdentityToken copyWithZone:]
  -[FBSSceneIdentityToken encodeWithCoder:]
  -[FBSSceneIdentityToken initWithIdentifier:workspaceID:endpoint:]


FBSDisplayIdentity : NSObject <BSXPCCoding, NSCopying, NSSecureCoding>
 @property  BOOL secure
 @property  int pid
 @property  FBSDisplayIdentity *rootIdentity
 @property  BOOL isRootIdentity
 @property  BOOL mainDisplay
 @property  BOOL external
 @property  BOOL carDisplay
 @property  BOOL carInstrumentsDisplay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayIdentity supportsSecureCoding]

  // instance methods
  -[FBSDisplayIdentity isExternal]
  -[FBSDisplayIdentity displayID]
  -[FBSDisplayIdentity connectionSeed]
  -[FBSDisplayIdentity isMainRootDisplay]
  -[FBSDisplayIdentity expectsSecureRendering]
  -[FBSDisplayIdentity isCarDisplay]
  -[FBSDisplayIdentity uniqueIdentifier]
  -[FBSDisplayIdentity initWithCoder:]
  -[FBSDisplayIdentity isSecure]
  -[FBSDisplayIdentity encodeWithXPCDictionary:]
  -[FBSDisplayIdentity isiPodOnlyDisplay]
  -[FBSDisplayIdentity .cxx_destruct]
  -[FBSDisplayIdentity initWithXPCDictionary:]
  -[FBSDisplayIdentity _initWithType:displayID:connectionSeed:pid:external:uniqueIdentifier:secure:root:]
  -[FBSDisplayIdentity init]
  -[FBSDisplayIdentity isEqual:]
  -[FBSDisplayIdentity pid]
  -[FBSDisplayIdentity isRootIdentity]
  -[FBSDisplayIdentity isCarInstrumentsDisplay]
  -[FBSDisplayIdentity type]
  -[FBSDisplayIdentity isRestrictedAirPlayDisplay]
  -[FBSDisplayIdentity rootIdentity]
  -[FBSDisplayIdentity isAirPlayDisplay]
  -[FBSDisplayIdentity copyWithZone:]
  -[FBSDisplayIdentity isMainDisplay]
  -[FBSDisplayIdentity isMusicOnlyDisplay]
  -[FBSDisplayIdentity encodeWithCoder:]


FBSDisplayConfiguration : NSObject <BSDescriptionProviding, BSXPCCoding, NSCopying, NSSecureCoding>
 @property  unsigned int seed
 @property  long long tags
 @property  FBSDisplayIdentity *identity
 @property  BOOL mainDisplay
 @property  BOOL external
 @property  BOOL carDisplay
 @property  BOOL carInstrumentsDisplay
 @property  NSString *hardwareIdentifier
 @property  NSString *name
 @property  NSString *deviceName
 @property  FBSDisplayMode *currentMode
 @property  FBSDisplayMode *preferredMode
 @property  NSSet *availableModes
 @property  BOOL cloningSupported
 @property  BOOL overscanned
 @property  long long overscanCompensation
 @property  {CGSize=dd} safeOverscanRatio
 @property  double nativeOrientation
 @property  {CGSize=dd} pixelSize
 @property  double scale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} renderingCenter
 @property  double refreshRate
 @property  long long colorGamut
 @property  double latency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayConfiguration supportsSecureCoding]

  // instance methods
  -[FBSDisplayConfiguration isExternal]
  -[FBSDisplayConfiguration refreshRate]
  -[FBSDisplayConfiguration displayID]
  -[FBSDisplayConfiguration isMainRootDisplay]
  -[FBSDisplayConfiguration expectsSecureRendering]
  -[FBSDisplayConfiguration isCarDisplay]
  -[FBSDisplayConfiguration colorGamut]
  -[FBSDisplayConfiguration seed]
  -[FBSDisplayConfiguration pixelSize]
  -[FBSDisplayConfiguration referenceBounds]
  -[FBSDisplayConfiguration initWithCADisplay:]
  -[FBSDisplayConfiguration name]
  -[FBSDisplayConfiguration uniqueIdentifier]
  -[FBSDisplayConfiguration currentMode]
  -[FBSDisplayConfiguration supportsExtendedColor]
  -[FBSDisplayConfiguration initWithCoder:]
  -[FBSDisplayConfiguration isConnected]
  -[FBSDisplayConfiguration uniqueID]
  -[FBSDisplayConfiguration laterConfiguration:]
  -[FBSDisplayConfiguration deviceName]
  -[FBSDisplayConfiguration encodeWithXPCDictionary:]
  -[FBSDisplayConfiguration _nativeBounds]
  -[FBSDisplayConfiguration .cxx_destruct]
  -[FBSDisplayConfiguration latency]
  -[FBSDisplayConfiguration initWithXPCDictionary:]
  -[FBSDisplayConfiguration succinctDescriptionBuilder]
  -[FBSDisplayConfiguration copyWithOverrideMode:pixelSize:nativeBounds:]
  -[FBSDisplayConfiguration isCloningSupported]
  -[FBSDisplayConfiguration isOverscanned]
  -[FBSDisplayConfiguration descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayConfiguration init]
  -[FBSDisplayConfiguration isEqual:]
  -[FBSDisplayConfiguration _initWithIdentity:hardwareIdentifier:name:deviceName:seed:comparable:tags:currentMode:preferredMode:otherModes:cloningSupported:overscanned:overscanCompensation:safeOverscanRatio:pixelSize:nativeBounds:bounds:latency:validityCheck:]
  -[FBSDisplayConfiguration safeOverscanRatio]
  -[FBSDisplayConfiguration descriptionWithMultilinePrefix:]
  -[FBSDisplayConfiguration copyWithOverrideMode:]
  -[FBSDisplayConfiguration succinctDescription]
  -[FBSDisplayConfiguration preferredMode]
  -[FBSDisplayConfiguration _nativeRotation]
  -[FBSDisplayConfiguration identity]
  -[FBSDisplayConfiguration orientation]
  -[FBSDisplayConfiguration isHiddenDisplay]
  -[FBSDisplayConfiguration isCarInstrumentsDisplay]
  -[FBSDisplayConfiguration type]
  -[FBSDisplayConfiguration nativeCenter]
  -[FBSDisplayConfiguration _initWithImmutableDisplay:originalDisplay:assertIfInvalid:]
  -[FBSDisplayConfiguration availableModes]
  -[FBSDisplayConfiguration caDisplay]
  -[FBSDisplayConfiguration copyWithZone:]
  -[FBSDisplayConfiguration scale]
  -[FBSDisplayConfiguration _nameForDisplayType]
  -[FBSDisplayConfiguration renderingCenter]
  -[FBSDisplayConfiguration wantsConnectionDebouncing]
  -[FBSDisplayConfiguration hardwareIdentifier]
  -[FBSDisplayConfiguration initWithCADisplay:isMainDisplay:]
  -[FBSDisplayConfiguration isMainDisplay]
  -[FBSDisplayConfiguration nativeOrientation]
  -[FBSDisplayConfiguration bounds]
  -[FBSDisplayConfiguration encodeWithCoder:]
  -[FBSDisplayConfiguration copyForSecureRendering]
  -[FBSDisplayConfiguration CADisplay]
  -[FBSDisplayConfiguration tags]
  -[FBSDisplayConfiguration overscanCompensation]
  -[FBSDisplayConfiguration copyWithUniqueIdentifier:]


FBSSettingsDiff : NSObject <BSXPCCoding, BSSettingDescriptionProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSettingsDiff encodeWithXPCDictionary:]
  -[FBSSettingsDiff .cxx_destruct]
  -[FBSSettingsDiff inspectChangesWithBlock:]
  -[FBSSettingsDiff keyDescriptionForSetting:]
  -[FBSSettingsDiff initWithXPCDictionary:]
  -[FBSSettingsDiff succinctDescriptionBuilder]
  -[FBSSettingsDiff evaluateWithInspector:context:]
  -[FBSSettingsDiff descriptionBuilderWithMultilinePrefix:]
  -[FBSSettingsDiff init]
  -[FBSSettingsDiff descriptionWithMultilinePrefix:]
  -[FBSSettingsDiff initWithChanges:fromSettings:toSettings:]
  -[FBSSettingsDiff settings:keyDescriptionForSetting:]
  -[FBSSettingsDiff succinctDescription]
  -[FBSSettingsDiff inspectOtherChangesWithBlock:]
  -[FBSSettingsDiff _initWithChanges:otherSettingsDiff:settingsClass:]
  -[FBSSettingsDiff settings:valueDescriptionForFlag:object:ofSetting:]
  -[FBSSettingsDiff settingsByApplyingToMutableCopyOfSettings:]
  -[FBSSettingsDiff dealloc]


FBSSceneAction : BSAction
 @property  FBSScene *scene
 @property  FBSSerialQueue *callOutQueue

  // instance methods
  -[FBSSceneAction setScene:]
  -[FBSSceneAction setCallOutQueue:]
  -[FBSSceneAction callOutQueue]
  -[FBSSceneAction .cxx_destruct]
  -[FBSSceneAction scene]


FBSDisplayLayout : NSObject <BSXPCCoding, BSDescriptionProviding>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  long long interfaceOrientation
 @property  long long displayBacklightLevel
 @property  NSArray *elements
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  NSDate *timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayout displayType]
  -[FBSDisplayLayout removeElement:]
  -[FBSDisplayLayout referenceBounds]
  -[FBSDisplayLayout displayConfiguration]
  -[FBSDisplayLayout addElement:]
  -[FBSDisplayLayout finalizeLayout]
  -[FBSDisplayLayout display]
  -[FBSDisplayLayout displayBacklightLevel]
  -[FBSDisplayLayout elements]
  -[FBSDisplayLayout encodeWithXPCDictionary:]
  -[FBSDisplayLayout .cxx_destruct]
  -[FBSDisplayLayout initWithXPCDictionary:]
  -[FBSDisplayLayout setDisplayConfiguration:]
  -[FBSDisplayLayout setInterfaceOrientation:]
  -[FBSDisplayLayout succinctDescriptionBuilder]
  -[FBSDisplayLayout descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayout init]
  -[FBSDisplayLayout isEqual:]
  -[FBSDisplayLayout interfaceOrientation]
  -[FBSDisplayLayout descriptionWithMultilinePrefix:]
  -[FBSDisplayLayout succinctDescription]
  -[FBSDisplayLayout _initWithElements:]
  -[FBSDisplayLayout timestamp]
  -[FBSDisplayLayout _sortElements]
  -[FBSDisplayLayout bounds]
  -[FBSDisplayLayout setDisplayBacklightLevel:]


FBSProcessAssertion : NSObject <BSDescriptionProviding>
 @property  BKSProcessAssertion *assertion
 @property  unsigned long activationCount
 @property  NSString *name
 @property  <FBSProcess> *process
 @property  FBSProcessExecutionPolicy *policy
 @property  BOOL activated
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessAssertion assertion]
  -[FBSProcessAssertion isInvalidated]
  -[FBSProcessAssertion name]
  -[FBSProcessAssertion initWithName:process:policy:]
  -[FBSProcessAssertion .cxx_destruct]
  -[FBSProcessAssertion succinctDescriptionBuilder]
  -[FBSProcessAssertion policy]
  -[FBSProcessAssertion descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessAssertion descriptionWithMultilinePrefix:]
  -[FBSProcessAssertion process]
  -[FBSProcessAssertion succinctDescription]
  -[FBSProcessAssertion activate]
  -[FBSProcessAssertion isActivated]
  -[FBSProcessAssertion deactivate]
  -[FBSProcessAssertion dealloc]
  -[FBSProcessAssertion invalidate]
  -[FBSProcessAssertion activationCount]


FBSApplicationDataStore : NSObject
 @property  NSString *bundleID

  // class methods
  +[FBSApplicationDataStore _setClassClient:]
  +[FBSApplicationDataStore _doWithClassClient:]
  +[FBSApplicationDataStore applicationsWithAvailableStores]
  +[FBSApplicationDataStore isServerProcess]
  +[FBSApplicationDataStore synchronize]
  +[FBSApplicationDataStore storeForApplication:]
  +[FBSApplicationDataStore synchronizeWithCompletion:]
  +[FBSApplicationDataStore setPrefetchedKeys:]

  // instance methods
  -[FBSApplicationDataStore objectForKey:]
  -[FBSApplicationDataStore bundleID]
  -[FBSApplicationDataStore removeAllObjects]
  -[FBSApplicationDataStore setObject:forKey:]
  -[FBSApplicationDataStore objectForKey:withResult:]
  -[FBSApplicationDataStore safeObjectForKey:ofType:withResult:]
  -[FBSApplicationDataStore archivedObjectForKey:]
  -[FBSApplicationDataStore archivedObjectForKey:withResult:]
  -[FBSApplicationDataStore safeArchivedObjectForKey:ofType:]
  -[FBSApplicationDataStore safeArchivedObjectForKey:ofType:withResult:]
  -[FBSApplicationDataStore .cxx_destruct]
  -[FBSApplicationDataStore setArchivedObject:forKey:]
  -[FBSApplicationDataStore removeObjectForKey:]
  -[FBSApplicationDataStore init]
  -[FBSApplicationDataStore initWithBundleIdentifier:]
  -[FBSApplicationDataStore safeObjectForKey:ofType:]
  -[FBSApplicationDataStore dealloc]
  -[FBSApplicationDataStore _initWithBundleId:client:]
  -[FBSApplicationDataStore _makeSafe:forType:]


FBSWorkspaceDestroySceneResponse : FBSWorkspaceSceneUpdateResponse
  // instance methods
  -[FBSWorkspaceDestroySceneResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceDestroySceneResponse initWithXPCDictionary:]


FBSOpenApplicationServiceSpecification : NSObject
  // class methods
  +[FBSOpenApplicationServiceSpecification serviceQuality]
  +[FBSOpenApplicationServiceSpecification interface]
  +[FBSOpenApplicationServiceSpecification identifier]

  // instance methods
  -[FBSOpenApplicationServiceSpecification init]


FBSWorkspaceResponse : NSObject <BSXPCCoding>
 @property  FBSSceneMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSWorkspaceResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceResponse .cxx_destruct]
  -[FBSWorkspaceResponse setMessage:]
  -[FBSWorkspaceResponse initWithXPCDictionary:]
  -[FBSWorkspaceResponse message]


FBSProcessExecutionProvision : NSObject <BSDescriptionProviding, NSCopying>
 @property  <FBSProcessExecutionProvisionDelegate> *delegate
 @property  <FBSProcessInternal> *process
 @property  BOOL monitoring
 @property  BOOL violated
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessExecutionProvision _stopMonitoring]
  -[FBSProcessExecutionProvision isMonitoring]
  -[FBSProcessExecutionProvision stopMonitoring]
  -[FBSProcessExecutionProvision .cxx_destruct]
  -[FBSProcessExecutionProvision succinctDescriptionBuilder]
  -[FBSProcessExecutionProvision _noteViolatedWithError:]
  -[FBSProcessExecutionProvision setDelegate:]
  -[FBSProcessExecutionProvision descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionProvision init]
  -[FBSProcessExecutionProvision descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionProvision _beginMonitoring]
  -[FBSProcessExecutionProvision process]
  -[FBSProcessExecutionProvision succinctDescription]
  -[FBSProcessExecutionProvision prepareForReuse]
  -[FBSProcessExecutionProvision isResourceProvision]
  -[FBSProcessExecutionProvision _prepareForReuse]
  -[FBSProcessExecutionProvision delegate]
  -[FBSProcessExecutionProvision _updateProgress]
  -[FBSProcessExecutionProvision monitorProcess:]
  -[FBSProcessExecutionProvision copyWithZone:]
  -[FBSProcessExecutionProvision updateProgress]
  -[FBSProcessExecutionProvision _performDelegateCallout:]
  -[FBSProcessExecutionProvision isViolated]
  -[FBSProcessExecutionProvision error]


FBSWorkspaceInitializationOptions : NSObject
 @property  BOOL _startsInactive
 @property  <FBSWorkspaceDelegate> *delegate
 @property  FBSSerialQueue *callOutQueue

  // class methods
  +[FBSWorkspaceInitializationOptions optionsWithDelegate:]

  // instance methods
  -[FBSWorkspaceInitializationOptions setCallOutQueue:]
  -[FBSWorkspaceInitializationOptions _setStartsInactive:]
  -[FBSWorkspaceInitializationOptions callOutQueue]
  -[FBSWorkspaceInitializationOptions .cxx_destruct]
  -[FBSWorkspaceInitializationOptions init]
  -[FBSWorkspaceInitializationOptions delegate]
  -[FBSWorkspaceInitializationOptions _startsInactive]
  -[FBSWorkspaceInitializationOptions _initWithDelegate:]


FBSSettingsDiffInspector : NSObject
  // instance methods
  -[FBSSettingsDiffInspector removeAllObservers]
  -[FBSSettingsDiffInspector .cxx_destruct]
  -[FBSSettingsDiffInspector succinctDescriptionBuilder]
  -[FBSSettingsDiffInspector descriptionBuilderWithMultilinePrefix:]
  -[FBSSettingsDiffInspector init]
  -[FBSSettingsDiffInspector descriptionWithMultilinePrefix:]
  -[FBSSettingsDiffInspector succinctDescription]
  -[FBSSettingsDiffInspector dealloc]
  -[FBSSettingsDiffInspector _addObserver:forSetting:inInfo:]
  -[FBSSettingsDiffInspector _observeSetting:withBlock:]
  -[FBSSettingsDiffInspector observeOtherSetting:withBlock:]
  -[FBSSettingsDiffInspector inspectDiff:withContext:]


FBSDisplayLayoutMonitor : NSObject <BSInvalidatable>
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayLayoutMonitor serviceIdentifier]
  +[FBSDisplayLayoutMonitor interface]
  +[FBSDisplayLayoutMonitor mainDisplayInstanceIdentifier]
  +[FBSDisplayLayoutMonitor _endpointForDisplayType:]
  +[FBSDisplayLayoutMonitor monitorWithConfiguration:]
  +[FBSDisplayLayoutMonitor sharedMonitorForDisplayType:]

  // instance methods
  -[FBSDisplayLayoutMonitor displayType]
  -[FBSDisplayLayoutMonitor initWithDisplayType:handler:]
  -[FBSDisplayLayoutMonitor qualityOfService]
  -[FBSDisplayLayoutMonitor initWithDisplayType:qualityOfService:handler:]
  -[FBSDisplayLayoutMonitor .cxx_destruct]
  -[FBSDisplayLayoutMonitor init]
  -[FBSDisplayLayoutMonitor currentLayout]
  -[FBSDisplayLayoutMonitor addObserver:]
  -[FBSDisplayLayoutMonitor _initWithConfiguration:singleton:needsDefaultPriority:mutable:displayType:mutableHandler:]
  -[FBSDisplayLayoutMonitor initWithDisplayType:]
  -[FBSDisplayLayoutMonitor dealloc]
  -[FBSDisplayLayoutMonitor setHandler:]
  -[FBSDisplayLayoutMonitor invalidate]
  -[FBSDisplayLayoutMonitor removeObserver:]
  -[FBSDisplayLayoutMonitor handler]


FBSDisplayLayoutMonitorConfiguration : NSObject
 @property  BSServiceConnectionEndpoint *endpoint
 @property  BOOL needsUserInteractivePriority
 @property  @? transitionHandler

  // class methods
  +[FBSDisplayLayoutMonitorConfiguration configurationWithEndpoint:]
  +[FBSDisplayLayoutMonitorConfiguration configurationForDefaultMainDisplayMonitor]

  // instance methods
  -[FBSDisplayLayoutMonitorConfiguration .cxx_destruct]
  -[FBSDisplayLayoutMonitorConfiguration init]
  -[FBSDisplayLayoutMonitorConfiguration _initWithEndpoint:]
  -[FBSDisplayLayoutMonitorConfiguration setTransitionHandler:]
  -[FBSDisplayLayoutMonitorConfiguration setNeedsUserInteractivePriority:]
  -[FBSDisplayLayoutMonitorConfiguration endpoint]
  -[FBSDisplayLayoutMonitorConfiguration transitionHandler]
  -[FBSDisplayLayoutMonitorConfiguration needsUserInteractivePriority]


_FBSDisplayLayoutService : NSObject <BSInvalidatable, FBSDisplayLayoutMonitorClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSDisplayLayoutService updateLayout:withTransition:]
  -[_FBSDisplayLayoutService .cxx_destruct]
  -[_FBSDisplayLayoutService currentLayout]
  -[_FBSDisplayLayoutService removeObserverForKey:]
  -[_FBSDisplayLayoutService dealloc]
  -[_FBSDisplayLayoutService endpoint]
  -[_FBSDisplayLayoutService invalidate]
  -[_FBSDisplayLayoutService _initWithEndpoint:qos:]
  -[_FBSDisplayLayoutService addObserver:forKey:]


_FBSDisplayLayoutEndpointServices : NSObject
  // class methods
  +[_FBSDisplayLayoutEndpointServices _checkoutServiceWithEndpoint:qos:]
  +[_FBSDisplayLayoutEndpointServices _checkinService:]

  // instance methods
  -[_FBSDisplayLayoutEndpointServices .cxx_destruct]


_FBSDisplayLayoutServiceAssertion : NSObject <BSInvalidatable>
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSDisplayLayoutServiceAssertion .cxx_destruct]
  -[_FBSDisplayLayoutServiceAssertion initWithEndpoint:qos:observer:]
  -[_FBSDisplayLayoutServiceAssertion init]
  -[_FBSDisplayLayoutServiceAssertion currentLayout]
  -[_FBSDisplayLayoutServiceAssertion dealloc]
  -[_FBSDisplayLayoutServiceAssertion invalidate]


FBSSceneSettingsDiffInspector : FBSSettingsDiffInspector
  // instance methods
  -[FBSSceneSettingsDiffInspector observeOcclusionsWithBlock:]
  -[FBSSceneSettingsDiffInspector observeInterfaceOrientationWithBlock:]
  -[FBSSceneSettingsDiffInspector observeFrameWithBlock:]
  -[FBSSceneSettingsDiffInspector observeLevelWithBlock:]
  -[FBSSceneSettingsDiffInspector observeIsForegroundWithBlock:]
  -[FBSSceneSettingsDiffInspector observeClassWithBlock:]
  -[FBSSceneSettingsDiffInspector observeIsBackgroundedWithBlock:]
  -[FBSSceneSettingsDiffInspector observeDisplayConfigurationWithBlock:]


FBSDataResetRequest : NSObject
 @property  long long mode
 @property  long long options
 @property  NSString *reason

  // instance methods
  -[FBSDataResetRequest options]
  -[FBSDataResetRequest setOptions:]
  -[FBSDataResetRequest .cxx_destruct]
  -[FBSDataResetRequest initWithMode:options:reason:]
  -[FBSDataResetRequest reason]
  -[FBSDataResetRequest setReason:]
  -[FBSDataResetRequest setMode:]
  -[FBSDataResetRequest mode]


FBSSystemService : NSObject
  // class methods
  +[FBSSystemService clientCallbackQueue]
  +[FBSSystemService sharedService]

  // instance methods
  -[FBSSystemService initWithEndpoint:]
  -[FBSSystemService terminateApplication:forReason:andReport:withDescription:]
  -[FBSSystemService systemApplicationBundleIdentifier]
  -[FBSSystemService openApplication:options:withResult:]
  -[FBSSystemService shutdown]
  -[FBSSystemService .cxx_destruct]
  -[FBSSystemService terminateApplicationGroup:forReason:andReport:withDescription:completion:]
  -[FBSSystemService canOpenApplication:reason:]
  -[FBSSystemService dataResetWithRequest:completion:]
  -[FBSSystemService pidForApplication:]
  -[FBSSystemService init]
  -[FBSSystemService badgeValueForBundleID:]
  -[FBSSystemService setBadgeValue:forBundleID:]
  -[FBSSystemService setKeyboardFocusApplicationWithBundleID:pid:completion:]
  -[FBSSystemService cleanupClientPort:]
  -[FBSSystemService terminateApplicationGroup:forReason:andReport:withDescription:]
  -[FBSSystemService openApplication:options:clientPort:withResult:]
  -[FBSSystemService setKeyboardFocusApplicationPID:deferringToken:completion:]
  -[FBSSystemService createClientPort]
  -[FBSSystemService isPasscodeLockedOrBlocked]
  -[FBSSystemService processHandleForApplication:]
  -[FBSSystemService sendActions:withResult:]
  -[FBSSystemService dealloc]
  -[FBSSystemService shutdownWithOptions:]
  -[FBSSystemService terminateApplication:forReason:andReport:withDescription:completion:]
  -[FBSSystemService setKeyboardFocusApplicationPID:completion:]
  -[FBSSystemService reboot]
  -[FBSSystemService openURL:application:options:clientPort:withResult:]


FBSOrientationObserverClient : FBSServiceFacilityClient
  // instance methods
  -[FBSOrientationObserverClient activeInterfaceOrientation]
  -[FBSOrientationObserverClient configureConnectMessage:]
  -[FBSOrientationObserverClient .cxx_destruct]
  -[FBSOrientationObserverClient _getActiveInterfaceOrientationSynchronously:withCompletion:]
  -[FBSOrientationObserverClient handleMessage:withType:]
  -[FBSOrientationObserverClient activeInterfaceOrientationWithCompletion:]
  -[FBSOrientationObserverClient invalidate]
  -[FBSOrientationObserverClient initWithDelegate:calloutQueue:]
  -[FBSOrientationObserverClient registerOrientationInterest:]


FBSWorkspaceScenesClient : NSObject <FBSSceneUpdater, FBSWorkspaceScenesSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSObject<NSCopying> *identifier

  // class methods
  +[FBSWorkspaceScenesClient serviceQuality]

  // instance methods
  -[FBSWorkspaceScenesClient sceneWithIdentifier:]
  -[FBSWorkspaceScenesClient hostProcess]
  -[FBSWorkspaceScenesClient sceneID:destroyWithTransitionContext:completion:]
  -[FBSWorkspaceScenesClient sceneID:updateWithSettingsDiff:transitionContext:completion:]
  -[FBSWorkspaceScenesClient scene:didUpdateClientSettings:withDiff:transitionContext:]
  -[FBSWorkspaceScenesClient createWithSceneID:groupID:parameters:transitionContext:completion:]
  -[FBSWorkspaceScenesClient callOutQueue]
  -[FBSWorkspaceScenesClient .cxx_destruct]
  -[FBSWorkspaceScenesClient willTerminateWithTransitionContext:]
  -[FBSWorkspaceScenesClient _configureReceivedActions:forScene:]
  -[FBSWorkspaceScenesClient scene:didReceiveActions:]
  -[FBSWorkspaceScenesClient queue_activate]
  -[FBSWorkspaceScenesClient _queue_updateScene:withSettings:diff:transitionContext:completion:]
  -[FBSWorkspaceScenesClient init]
  -[FBSWorkspaceScenesClient scene:sendMessage:withResponse:]
  -[FBSWorkspaceScenesClient reconnectWithSceneID:parameters:transitionContext:completion:]
  -[FBSWorkspaceScenesClient _remoteTarget]
  -[FBSWorkspaceScenesClient identifier]
  -[FBSWorkspaceScenesClient _queue_invalidateScene:withTransitionContext:completion:]
  -[FBSWorkspaceScenesClient sceneID:sendActions:]
  -[FBSWorkspaceScenesClient sendActions:completion:]
  -[FBSWorkspaceScenesClient scenes]
  -[FBSWorkspaceScenesClient requestSceneWithOptions:completion:]
  -[FBSWorkspaceScenesClient endpoint]
  -[FBSWorkspaceScenesClient _queue_sendHandshake]
  -[FBSWorkspaceScenesClient sceneID:sendMessage:completion:]
  -[FBSWorkspaceScenesClient initWithEndpoint:queue:calloutQueue:workspace:]
  -[FBSWorkspaceScenesClient _queue_connectedSceneWithIdentifier:]
  -[FBSWorkspaceScenesClient _reportedSceneWithIdentifier:]


FBSProcessExecutionStrategy : NSObject <NSCopying, BSDescriptionProviding>
 @property  NSString *strategyName
 @property  long long schedulingPolicy
 @property  long long graphicsPolicy
 @property  long long jetsamPolicy
 @property  BOOL customPolicy
 @property  unsigned int reason
 @property  unsigned int flags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessExecutionStrategy initialize]
  +[FBSProcessExecutionStrategy background]
  +[FBSProcessExecutionStrategy userInteractive]
  +[FBSProcessExecutionStrategy strategyForSchedulingPolicy:graphicsPolicy:jetsamPolicy:]
  +[FBSProcessExecutionStrategy userInteractiveWithoutUI]
  +[FBSProcessExecutionStrategy backgroundWithUI]
  +[FBSProcessExecutionStrategy policyWithReason:flags:]

  // instance methods
  -[FBSProcessExecutionStrategy setFlags:]
  -[FBSProcessExecutionStrategy strategyName]
  -[FBSProcessExecutionStrategy schedulingPolicy]
  -[FBSProcessExecutionStrategy .cxx_destruct]
  -[FBSProcessExecutionStrategy succinctDescriptionBuilder]
  -[FBSProcessExecutionStrategy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionStrategy descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionStrategy succinctDescription]
  -[FBSProcessExecutionStrategy reason]
  -[FBSProcessExecutionStrategy flags]
  -[FBSProcessExecutionStrategy setReason:]
  -[FBSProcessExecutionStrategy copyWithZone:]
  -[FBSProcessExecutionStrategy setStrategyName:]
  -[FBSProcessExecutionStrategy setSchedulingPolicy:]
  -[FBSProcessExecutionStrategy isCustomPolicy]
  -[FBSProcessExecutionStrategy setGraphicsPolicy:]
  -[FBSProcessExecutionStrategy setJetsamPolicy:]
  -[FBSProcessExecutionStrategy setCustomPolicy:]
  -[FBSProcessExecutionStrategy graphicsPolicy]
  -[FBSProcessExecutionStrategy jetsamPolicy]


FBSMutableProcessExecutionStrategy : FBSProcessExecutionStrategy
 @property  unsigned int reason
 @property  unsigned int flags
 @property  long long schedulingPolicy
 @property  long long graphicsPolicy
 @property  long long jetsamPolicy

  // instance methods
  -[FBSMutableProcessExecutionStrategy copyWithZone:]


FBSProcessExecutionPolicy : NSObject <NSCopying, BSDescriptionProviding>
 @property  FBSProcessExecutionStrategy *strategy
 @property  NSArray *provisions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessExecutionPolicy policyForStrategy:withProvisions:]

  // instance methods
  -[FBSProcessExecutionPolicy strategy]
  -[FBSProcessExecutionPolicy .cxx_destruct]
  -[FBSProcessExecutionPolicy succinctDescriptionBuilder]
  -[FBSProcessExecutionPolicy setStrategy:]
  -[FBSProcessExecutionPolicy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionPolicy descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionPolicy succinctDescription]
  -[FBSProcessExecutionPolicy setProvisions:]
  -[FBSProcessExecutionPolicy provisions]
  -[FBSProcessExecutionPolicy copyWithZone:]


FBSSceneEvent : FBSSceneMessage
 @property  long long source
 @property  FBSSceneSettingsDiff *settingsDiff
 @property  FBSSceneClientSettingsDiff *clientSettingsDiff
 @property  FBSSceneTransitionContext *transitionContext
 @property  NSSet *actions

  // instance methods
  -[FBSSceneEvent .cxx_destruct]
  -[FBSSceneEvent succinctDescriptionBuilder]
  -[FBSSceneEvent actions]
  -[FBSSceneEvent settingsDiff]
  -[FBSSceneEvent descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneEvent init]
  -[FBSSceneEvent descriptionWithMultilinePrefix:]
  -[FBSSceneEvent succinctDescription]
  -[FBSSceneEvent setSettingsDiff:]
  -[FBSSceneEvent setSource:]
  -[FBSSceneEvent transitionContext]
  -[FBSSceneEvent clientSettingsDiff]
  -[FBSSceneEvent setClientSettingsDiff:]
  -[FBSSceneEvent source]
  -[FBSSceneEvent setTransitionContext:]


FBSBundleInfo : NSObject <BSDescriptionProviding>
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  NSString *displayName
 @property  NSString *bundleVersion
 @property  NSString *bundleType
 @property  unsigned long sequenceNumber
 @property  NSUUID *cacheGUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBundleInfo bundleVersion]
  -[FBSBundleInfo bundleType]
  -[FBSBundleInfo cacheGUID]
  -[FBSBundleInfo displayName]
  -[FBSBundleInfo bundleIdentifier]
  -[FBSBundleInfo .cxx_destruct]
  -[FBSBundleInfo succinctDescriptionBuilder]
  -[FBSBundleInfo bundleURL]
  -[FBSBundleInfo descriptionBuilderWithMultilinePrefix:]
  -[FBSBundleInfo init]
  -[FBSBundleInfo descriptionWithMultilinePrefix:]
  -[FBSBundleInfo _initWithBundleProxy:overrideURL:]
  -[FBSBundleInfo _initWithBundleIdentifier:url:]
  -[FBSBundleInfo succinctDescription]
  -[FBSBundleInfo sequenceNumber]
  -[FBSBundleInfo _initWithBundleProxy:bundleIdentifier:url:]


FBSWorkspaceServiceSpecification : NSObject
  // class methods
  +[FBSWorkspaceServiceSpecification serviceQuality]
  +[FBSWorkspaceServiceSpecification interface]
  +[FBSWorkspaceServiceSpecification identifier]

  // instance methods
  -[FBSWorkspaceServiceSpecification init]


FBSSceneSnapshotContext : NSObject <BSXPCCoding, BSDescriptionProviding>
 @property  FBSSceneSettings *settings
 @property  NSString *sceneID
 @property  NSString *name
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double scale
 @property  NSSet *layersToExclude
 @property  double expirationInterval
 @property  BSSettings *clientExtendedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSnapshotContext contextWithSceneID:settings:]

  // instance methods
  -[FBSSceneSnapshotContext layersToExclude]
  -[FBSSceneSnapshotContext expirationInterval]
  -[FBSSceneSnapshotContext setClientExtendedData:]
  -[FBSSceneSnapshotContext name]
  -[FBSSceneSnapshotContext setLayersToExclude:]
  -[FBSSceneSnapshotContext encodeWithXPCDictionary:]
  -[FBSSceneSnapshotContext initWithSceneID:settings:]
  -[FBSSceneSnapshotContext .cxx_destruct]
  -[FBSSceneSnapshotContext setFrame:]
  -[FBSSceneSnapshotContext initWithXPCDictionary:]
  -[FBSSceneSnapshotContext succinctDescriptionBuilder]
  -[FBSSceneSnapshotContext setName:]
  -[FBSSceneSnapshotContext setSettings:]
  -[FBSSceneSnapshotContext sceneID]
  -[FBSSceneSnapshotContext descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSnapshotContext setExpirationInterval:]
  -[FBSSceneSnapshotContext clientExtendedData]
  -[FBSSceneSnapshotContext descriptionWithMultilinePrefix:]
  -[FBSSceneSnapshotContext succinctDescription]
  -[FBSSceneSnapshotContext setScale:]
  -[FBSSceneSnapshotContext frame]
  -[FBSSceneSnapshotContext scale]
  -[FBSSceneSnapshotContext settings]


FBSSceneSpecification : NSObject <NSCopying, BSDescriptionProviding>
 @property  Class hostAgentClass
 @property  Class clientAgentClass
 @property  Class settingsClass
 @property  Class clientSettingsClass
 @property  Class transitionContextClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSpecification initialize]
  +[FBSSceneSpecification specification]
  +[FBSSceneSpecification _swizzleMethodOnClass:originalSelector:block:]

  // instance methods
  -[FBSSceneSpecification isValid]
  -[FBSSceneSpecification succinctDescriptionBuilder]
  -[FBSSceneSpecification descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSpecification isEqual:]
  -[FBSSceneSpecification descriptionWithMultilinePrefix:]
  -[FBSSceneSpecification succinctDescription]
  -[FBSSceneSpecification hostAgentClass]
  -[FBSSceneSpecification clientAgentClass]
  -[FBSSceneSpecification settingsClass]
  -[FBSSceneSpecification copyWithZone:]
  -[FBSSceneSpecification _copyForLocalSynchronousSceneClientProvider]
  -[FBSSceneSpecification transitionContextClass]
  -[FBSSceneSpecification clientSettingsClass]


FBSExternalSceneLayer : FBSSceneLayer
 @property  NSString *sceneID

  // instance methods
  -[FBSExternalSceneLayer _succinctDescription]
  -[FBSExternalSceneLayer isExternalSceneLayer]
  -[FBSExternalSceneLayer alignment]
  -[FBSExternalSceneLayer encodeWithXPCDictionary:]
  -[FBSExternalSceneLayer _initWithCAContext:fallbackLevel:sceneID:]
  -[FBSExternalSceneLayer .cxx_destruct]
  -[FBSExternalSceneLayer initWithXPCDictionary:]
  -[FBSExternalSceneLayer initWithExternalSceneID:trackingContext:]
  -[FBSExternalSceneLayer initWithExternalSceneID:level:]
  -[FBSExternalSceneLayer sceneID]
  -[FBSExternalSceneLayer isEqual:]


FBSOpenApplicationService : NSObject
  // class methods
  +[FBSOpenApplicationService serviceWithEndpoint:]
  +[FBSOpenApplicationService serviceName]
  +[FBSOpenApplicationService new]
  +[FBSOpenApplicationService serviceWithDefaultShellEndpoint]
  +[FBSOpenApplicationService currentProcessServicesDefaultShellEndpoint]

  // instance methods
  -[FBSOpenApplicationService openApplication:withOptions:clientHandle:completion:]
  -[FBSOpenApplicationService openApplication:withOptions:completion:]
  -[FBSOpenApplicationService .cxx_destruct]
  -[FBSOpenApplicationService canOpenApplication:reason:]
  -[FBSOpenApplicationService init]
  -[FBSOpenApplicationService _initWithEndpoint:]
  -[FBSOpenApplicationService _remoteTarget]
  -[FBSOpenApplicationService _openApplication:withOptions:clientHandle:completion:]
  -[FBSOpenApplicationService dealloc]


FBSWorkspaceSceneUpdateResponse : FBSWorkspaceResponse

FBSProfileManager : NSObject
 @property  BOOL started

  // class methods
  +[FBSProfileManager sharedInstance]

  // instance methods
  -[FBSProfileManager .cxx_destruct]
  -[FBSProfileManager isStarted]
  -[FBSProfileManager startService]
  -[FBSProfileManager init]
  -[FBSProfileManager dealloc]
  -[FBSProfileManager isManaged:]
  -[FBSProfileManager _workQueue_reloadProfiles]
  -[FBSProfileManager profilesForSignerIdentity:]
  -[FBSProfileManager _workQueue_reloadManagedApplicationBundleIDs]
  -[FBSProfileManager _managedAppsChangedNotification:]
  -[FBSProfileManager _reloadProfiles]


FBSApplicationPlaceholderProgress : NSObject <FBSApplicationPlaceholderProgress, BSInvalidatable, BSDescriptionProviding>
 @property  FBSApplicationPlaceholder *placeholder
 @property  unsigned long installState
 @property  unsigned long installPhase
 @property  long long state
 @property  double percentComplete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationPlaceholderProgress installPhase]
  -[FBSApplicationPlaceholderProgress placeholder]
  -[FBSApplicationPlaceholderProgress .cxx_destruct]
  -[FBSApplicationPlaceholderProgress percentComplete]
  -[FBSApplicationPlaceholderProgress installState]
  -[FBSApplicationPlaceholderProgress succinctDescriptionBuilder]
  -[FBSApplicationPlaceholderProgress descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationPlaceholderProgress descriptionWithMultilinePrefix:]
  -[FBSApplicationPlaceholderProgress succinctDescription]
  -[FBSApplicationPlaceholderProgress state]
  -[FBSApplicationPlaceholderProgress initWithPlaceholder:queue:]
  -[FBSApplicationPlaceholderProgress queue_isValid]
  -[FBSApplicationPlaceholderProgress queue_supportedActions]
  -[FBSApplicationPlaceholderProgress queue_canPerformAction:]
  -[FBSApplicationPlaceholderProgress queue_updateProxy:]
  -[FBSApplicationPlaceholderProgress dealloc]
  -[FBSApplicationPlaceholderProgress invalidate]
  -[FBSApplicationPlaceholderProgress _stopObservingProgress:withContext:]
  -[FBSApplicationPlaceholderProgress _startObservingProgress:withContext:]
  -[FBSApplicationPlaceholderProgress _queue_updateFromProgress]
  -[FBSApplicationPlaceholderProgress queue_isCancellationAllowed]
  -[FBSApplicationPlaceholderProgress observeValueForKeyPath:ofObject:change:context:]


FBSSceneIdentity : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  NSString *identifier
 @property  NSString *workspaceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneIdentity identityForIdentifier:workspaceIdentifier:]
  +[FBSSceneIdentity identity]
  +[FBSSceneIdentity identityForIdentifier:]

  // instance methods
  -[FBSSceneIdentity workspaceIdentifier]
  -[FBSSceneIdentity .cxx_destruct]
  -[FBSSceneIdentity succinctDescriptionBuilder]
  -[FBSSceneIdentity descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneIdentity isEqual:]
  -[FBSSceneIdentity descriptionWithMultilinePrefix:]
  -[FBSSceneIdentity setWorkspaceIdentifier:]
  -[FBSSceneIdentity identifier]
  -[FBSSceneIdentity succinctDescription]
  -[FBSSceneIdentity setIdentifier:]
  -[FBSSceneIdentity mutableCopyWithZone:]
  -[FBSSceneIdentity copyWithZone:]


FBSMutableSceneIdentity : FBSSceneIdentity
 @property  NSString *identifier
 @property  NSString *workspaceIdentifier

  // instance methods
  -[FBSMutableSceneIdentity copyWithZone:]


_FBMapResult : NSObject
 @property  id result
 @property  BOOL created
 @property  BOOL filtered

  // instance methods
  -[_FBMapResult .cxx_destruct]
  -[_FBMapResult result]
  -[_FBMapResult setCreated:]
  -[_FBMapResult filtered]
  -[_FBMapResult setResult:]
  -[_FBMapResult setFiltered:]
  -[_FBMapResult created]


FBSALOToken : NSObject

FBSApplicationLibrary : NSObject <LSApplicationWorkspaceObserverProtocol, BSInvalidatable, FBSApplicationInfoProvider>
 @property  BOOL usingNetwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationLibrary applicationsDidUninstall:]
  -[FBSApplicationLibrary applicationsDidInstall:]
  -[FBSApplicationLibrary _load]
  -[FBSApplicationLibrary removeObserverForToken:]
  -[FBSApplicationLibrary isUsingNetwork]
  -[FBSApplicationLibrary _notifyDidAddApplications:]
  -[FBSApplicationLibrary applicationInstallsArePrioritized:arePaused:]
  -[FBSApplicationLibrary _initWithApplicationWorkspace:configuration:]
  -[FBSApplicationLibrary _observeType:withBlock:]
  -[FBSApplicationLibrary applicationInstallsDidPause:]
  -[FBSApplicationLibrary _workQueue_addApplicationProxy:withOverrideURL:]
  -[FBSApplicationLibrary uninstallApplication:completion:]
  -[FBSApplicationLibrary _workQueue_notePlaceholdersModifiedSignificantly:]
  -[FBSApplicationLibrary addApplicationProxy:withOverrideURL:]
  -[FBSApplicationLibrary _reloadPlaceholdersNotificationFired]
  -[FBSApplicationLibrary synchronize:]
  -[FBSApplicationLibrary .cxx_destruct]
  -[FBSApplicationLibrary applicationsWillUninstall:]
  -[FBSApplicationLibrary _notifyDidChangeNetworkUsage:]
  -[FBSApplicationLibrary installedApplicationWithBundleIdentifier:]
  -[FBSApplicationLibrary applicationsDidFailToInstall:]
  -[FBSApplicationLibrary _workQueue_applicationHasBeenModified:applicationProxy:]
  -[FBSApplicationLibrary _notifyDidDemoteApplications:]
  -[FBSApplicationLibrary _notifyDidReplaceApplications:]
  -[FBSApplicationLibrary observeDidAddPlaceholdersWithBlock:]
  -[FBSApplicationLibrary applicationInstallsDidCancel:]
  -[FBSApplicationLibrary observeDidRemoveApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidUpdateApplicationsWithBlock:]
  -[FBSApplicationLibrary applicationStateDidChange:]
  -[FBSApplicationLibrary placeholderWithBundleIdentifier:]
  -[FBSApplicationLibrary _workQueue_currentProcessProxyWithOutURL:]
  -[FBSApplicationLibrary _workQueue_applicationInfoForProxy:filterExisting:createIfNecessary:createReason:]
  -[FBSApplicationLibrary applicationInstallsDidResume:]
  -[FBSApplicationLibrary _workQueue_removeInstalledApplicationFromModelForBundleID:withReason:]
  -[FBSApplicationLibrary init]
  -[FBSApplicationLibrary _notifyForType:synchronously:withCastingBlock:]
  -[FBSApplicationLibrary _workQueue_executeInstallSynchronizationBlocksIfAppropriate]
  -[FBSApplicationLibrary _workQueue_placeholderForProxy:filterExisting:updateExistingIfNecessary:createIfNecessary:createReason:]
  -[FBSApplicationLibrary applicationsDidChangePersonas:]
  -[FBSApplicationLibrary applicationInfoForAuditToken:]
  -[FBSApplicationLibrary applicationsWillInstall:]
  -[FBSApplicationLibrary _workQueue_decrementSynchronizationActionCount]
  -[FBSApplicationLibrary installedApplicationWithBundleIdentifier:completionHandler:]
  -[FBSApplicationLibrary _executeOrPendInstallSynchronizationBlock:]
  -[FBSApplicationLibrary allInstalledApplications]
  -[FBSApplicationLibrary observeDidChangeNetworkUsageWithBlock:]
  -[FBSApplicationLibrary _workQueue_incrementSynchronizationActionCount]
  -[FBSApplicationLibrary _workQueue_applicationsForProxies:createIfNecessary:createReason:createdApplications:existingApplications:filterExistingApplications:unmappedProxies:]
  -[FBSApplicationLibrary networkUsageChanged:]
  -[FBSApplicationLibrary initWithConfiguration:]
  -[FBSApplicationLibrary applicationInstallsDidChange:]
  -[FBSApplicationLibrary allPlaceholders]
  -[FBSApplicationLibrary _notifyDidUpdateApplications:]
  -[FBSApplicationLibrary applicationsDidFailToUninstall:]
  -[FBSApplicationLibrary observeDidDemoteApplicationsWithBlock:]
  -[FBSApplicationLibrary applicationInstallsDidUpdateIcon:]
  -[FBSApplicationLibrary observeDidReplaceApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidCancelPlaceholdersWithBlock:]
  -[FBSApplicationLibrary applicationInstallsDidPrioritize:]
  -[FBSApplicationLibrary observeDidAddApplicationsWithBlock:]
  -[FBSApplicationLibrary dealloc]
  -[FBSApplicationLibrary applicationInstallsDidStart:]
  -[FBSApplicationLibrary invalidate]
  -[FBSApplicationLibrary _workQueue_removePlaceholderFromModelForBundleID:withReason:]
  -[FBSApplicationLibrary _notifyDidRemoveApplications:]
  -[FBSApplicationLibrary removeApplicationProxy:]
  -[FBSApplicationLibrary uninstallApplication:withOptions:completion:]
  -[FBSApplicationLibrary _workQueue_placeholdersForProxies:updateExistingIfNecessary:createIfNecessary:createReason:createdPlaceholders:existingPlaceholders:filterExistingPlaceholders:unmappedProxies:]
  -[FBSApplicationLibrary _notifyDidAddPlaceholders:]
  -[FBSApplicationLibrary applicationInfoForBundleIdentifier:]
  -[FBSApplicationLibrary _notifyDidCancelPlaceholders:]
  -[FBSApplicationLibrary deviceManagementPolicyDidChange:]
  -[FBSApplicationLibrary _handleApplicationStateDidChange:notifyForUpdateInsteadOfReplacement:]


FBSWorkspaceCreateSceneResponse : FBSWorkspaceSceneUpdateResponse
  // instance methods
  -[FBSWorkspaceCreateSceneResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceCreateSceneResponse initWithXPCDictionary:]


FBSSceneLayer : NSObject <BSXPCCoding>
 @property  CAContext *context
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneLayer _succinctDescription]
  -[FBSSceneLayer isKeyboardLayer]
  -[FBSSceneLayer isCAContextLayer]
  -[FBSSceneLayer isExternalSceneLayer]
  -[FBSSceneLayer _unsafe_captureLevel]
  -[FBSSceneLayer alignment]
  -[FBSSceneLayer _unsafe_level]
  -[FBSSceneLayer encodeWithXPCDictionary:]
  -[FBSSceneLayer .cxx_destruct]
  -[FBSSceneLayer isKeyboardProxyLayer]
  -[FBSSceneLayer initWithXPCDictionary:]
  -[FBSSceneLayer init]
  -[FBSSceneLayer _context]
  -[FBSSceneLayer _initWithCAContext:fallbackLevel:]
  -[FBSSceneLayer dealloc]


FBSXPCMessage : NSObject
 @property  NSObject<OS_xpc_object> *payload

  // class methods
  +[FBSXPCMessage messageWithPayload:]
  +[FBSXPCMessage messageWithPacker:]
  +[FBSXPCMessage message]
  +[FBSXPCMessage messageWithBSXPCMessage:ownReply:]

  // instance methods
  -[FBSXPCMessage payload]
  -[FBSXPCMessage .cxx_destruct]
  -[FBSXPCMessage sendReplyMessageWithPacker:]
  -[FBSXPCMessage init]
  -[FBSXPCMessage initWithMessagePacker:]
  -[FBSXPCMessage initWithMessagePayload:]


FBSUIApplicationLaunchResponse : FBSWorkspaceResponse

FBSSceneClientSettingsDiffInspector : FBSSettingsDiffInspector
  // instance methods
  -[FBSSceneClientSettingsDiffInspector observeOcclusionsWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredSceneHostIdentifierWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredInterfaceOrientationWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observeLayersWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observeClassWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredSceneHostIdentityWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredLevelWithBlock:]


FBSProcess : NSObject <FBSProcessInternal, BSDescriptionProviding>
 @property  BOOL running
 @property  BSProcessHandle *handle
 @property  RBSProcessIdentity *identity
 @property  BSMachPortTaskNameRight *taskNameRight
 @property  int pid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcess currentProcess]

  // instance methods
  -[FBSProcess .cxx_destruct]
  -[FBSProcess taskNameRight]
  -[FBSProcess isRunning]
  -[FBSProcess succinctDescriptionBuilder]
  -[FBSProcess descriptionBuilderWithMultilinePrefix:]
  -[FBSProcess init]
  -[FBSProcess descriptionWithMultilinePrefix:]
  -[FBSProcess succinctDescription]
  -[FBSProcess pid]
  -[FBSProcess handle]
  -[FBSProcess identity]
  -[FBSProcess _watchdog:shouldTerminateWithDeclineReason:]
  -[FBSProcess _watchdog:terminationRequestForViolatedProvision:error:]
  -[FBSProcess _terminateWithRequest:forWatchdog:]
  -[FBSProcess dealloc]
  -[FBSProcess _initForCurrentProcess]


FBSDisplayConfigurationRequest : NSObject <BSXPCCoding, BSDescriptionProviding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long overscanCompensation
 @property  {CGSize=dd} nativePixelSize
 @property  double refreshRate
 @property  long long hdrMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayConfigurationRequest supportsSecureCoding]

  // instance methods
  -[FBSDisplayConfigurationRequest hdrMode]
  -[FBSDisplayConfigurationRequest refreshRate]
  -[FBSDisplayConfigurationRequest initWithCoder:]
  -[FBSDisplayConfigurationRequest encodeWithXPCDictionary:]
  -[FBSDisplayConfigurationRequest nativePixelSize]
  -[FBSDisplayConfigurationRequest initWithXPCDictionary:]
  -[FBSDisplayConfigurationRequest succinctDescriptionBuilder]
  -[FBSDisplayConfigurationRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayConfigurationRequest init]
  -[FBSDisplayConfigurationRequest isEqual:]
  -[FBSDisplayConfigurationRequest descriptionWithMultilinePrefix:]
  -[FBSDisplayConfigurationRequest succinctDescription]
  -[FBSDisplayConfigurationRequest mutableCopyWithZone:]
  -[FBSDisplayConfigurationRequest copyWithZone:]
  -[FBSDisplayConfigurationRequest encodeWithCoder:]
  -[FBSDisplayConfigurationRequest overscanCompensation]


FBSMutableDisplayConfigurationRequest : FBSDisplayConfigurationRequest
 @property  long long overscanCompensation
 @property  {CGSize=dd} nativePixelSize
 @property  double refreshRate
 @property  long long hdrMode

  // instance methods
  -[FBSMutableDisplayConfigurationRequest setHdrMode:]
  -[FBSMutableDisplayConfigurationRequest setRefreshRate:]
  -[FBSMutableDisplayConfigurationRequest setNativePixelSize:]
  -[FBSMutableDisplayConfigurationRequest setOverscanCompensation:]
  -[FBSMutableDisplayConfigurationRequest copyWithZone:]


FBSProcessTerminationRequest : NSObject <NSCopying, BSDescriptionProviding>
 @property  NSString *label
 @property  <FBSProcess> *process
 @property  unsigned long options
 @property  long long reportType
 @property  long long exceptionCode
 @property  NSString *explanation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessTerminationRequest requestForProcess:withLabel:]

  // instance methods
  -[FBSProcessTerminationRequest label]
  -[FBSProcessTerminationRequest explanation]
  -[FBSProcessTerminationRequest options]
  -[FBSProcessTerminationRequest setOptions:]
  -[FBSProcessTerminationRequest .cxx_destruct]
  -[FBSProcessTerminationRequest setProcess:]
  -[FBSProcessTerminationRequest succinctDescriptionBuilder]
  -[FBSProcessTerminationRequest setExplanation:]
  -[FBSProcessTerminationRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessTerminationRequest execute]
  -[FBSProcessTerminationRequest descriptionWithMultilinePrefix:]
  -[FBSProcessTerminationRequest process]
  -[FBSProcessTerminationRequest succinctDescription]
  -[FBSProcessTerminationRequest setLabel:]
  -[FBSProcessTerminationRequest copyWithZone:]
  -[FBSProcessTerminationRequest setReportType:]
  -[FBSProcessTerminationRequest setExceptionCode:]
  -[FBSProcessTerminationRequest exceptionCode]
  -[FBSProcessTerminationRequest reportType]


_FBSSnapshot : NSObject <BSInvalidatable>
 @property  _FBSSnapshotContext *context
 @property  BOOL hasProtectedContent
 @property  IOSurface *IOSurface
 @property  IOSurface *fallbackIOSurface
 @property  ^{CGImage=} CGImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSSnapshot hasProtectedContent]
  -[_FBSSnapshot _scale]
  -[_FBSSnapshot CGImage]
  -[_FBSSnapshot .cxx_destruct]
  -[_FBSSnapshot _scaledSnapshotSize]
  -[_FBSSnapshot IOSurface]
  -[_FBSSnapshot initWithSnapshotContext:]
  -[_FBSSnapshot _synchronizedCaptureWithCompletion:]
  -[_FBSSnapshot dealloc]
  -[_FBSSnapshot invalidate]
  -[_FBSSnapshot capture]
  -[_FBSSnapshot _doInvalidate]
  -[_FBSSnapshot fallbackIOSurface]
  -[_FBSSnapshot context]


_FBSSnapshotContext : NSObject <NSCopying>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  NSOrderedSet *layers
 @property  BOOL opaque
 @property  double scale
 @property  {CGSize=dd} snapshotSize
 @property  BOOL allowsProtectedContent

  // instance methods
  -[_FBSSnapshotContext allowsProtectedContent]
  -[_FBSSnapshotContext layers]
  -[_FBSSnapshotContext displayConfiguration]
  -[_FBSSnapshotContext initWithDisplayConfiguration:layer:]
  -[_FBSSnapshotContext setOpaque:]
  -[_FBSSnapshotContext .cxx_destruct]
  -[_FBSSnapshotContext initWithDisplayConfiguration:layers:]
  -[_FBSSnapshotContext isOpaque]
  -[_FBSSnapshotContext setScale:]
  -[_FBSSnapshotContext setSnapshotSize:]
  -[_FBSSnapshotContext snapshotSize]
  -[_FBSSnapshotContext copyWithZone:]
  -[_FBSSnapshotContext scale]
  -[_FBSSnapshotContext setAllowsProtectedContent:]


_FBSSnapshotLayer : NSObject
 @property  unsigned int contextID
 @property  {CATransform3D=dddddddddddddddd} baseTransform

  // instance methods
  -[_FBSSnapshotLayer baseTransform]
  -[_FBSSnapshotLayer contextID]
  -[_FBSSnapshotLayer initWithContextID:baseTransform:]


FBSShutdownOptions : NSObject <BSXPCCoding, NSCopying>
 @property  long long LPEMOption
 @property  <NSCopying> *localContext
 @property  NSString *reason
 @property  long long rebootType
 @property  long long source
 @property  BOOL isShutdown
 @property  BOOL isReboot
 @property  BOOL isUserInitiated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSShutdownOptions initWithReason:]
  -[FBSShutdownOptions encodeWithXPCDictionary:]
  -[FBSShutdownOptions .cxx_destruct]
  -[FBSShutdownOptions isShutdown]
  -[FBSShutdownOptions initWithXPCDictionary:]
  -[FBSShutdownOptions succinctDescriptionBuilder]
  -[FBSShutdownOptions descriptionBuilderWithMultilinePrefix:]
  -[FBSShutdownOptions init]
  -[FBSShutdownOptions descriptionWithMultilinePrefix:]
  -[FBSShutdownOptions succinctDescription]
  -[FBSShutdownOptions isReboot]
  -[FBSShutdownOptions reason]
  -[FBSShutdownOptions setSource:]
  -[FBSShutdownOptions localContext]
  -[FBSShutdownOptions setLocalContext:]
  -[FBSShutdownOptions copyWithZone:]
  -[FBSShutdownOptions setRebootType:]
  -[FBSShutdownOptions LPEMOption]
  -[FBSShutdownOptions rebootType]
  -[FBSShutdownOptions setLPEMOption:]
  -[FBSShutdownOptions source]
  -[FBSShutdownOptions isUserInitiated]


_FBSTestExitAction : BSAction
  // instance methods
  -[_FBSTestExitAction initWithCoder:]
  -[_FBSTestExitAction initWithXPCDictionary:]
  -[_FBSTestExitAction init]


FBSProcessResourceProvision : FBSProcessExecutionProvision
 @property  long long type
 @property  {?=qQQ} allowance

  // class methods
  +[FBSProcessResourceProvision provisionWithAllowance:]
  +[FBSProcessResourceProvision provisionWithResourceType:timeInterval:]

  // instance methods
  -[FBSProcessResourceProvision _stopMonitoring]
  -[FBSProcessResourceProvision allowanceRemaining:]
  -[FBSProcessResourceProvision .cxx_destruct]
  -[FBSProcessResourceProvision _queue_calculateValueConsumed:]
  -[FBSProcessResourceProvision _queue_evaluateConsumptionFromTimer:]
  -[FBSProcessResourceProvision _queue_noteAllowanceExhausted]
  -[FBSProcessResourceProvision succinctDescriptionBuilder]
  -[FBSProcessResourceProvision allowance]
  -[FBSProcessResourceProvision _beginMonitoring]
  -[FBSProcessResourceProvision _queue_updateConsumption]
  -[FBSProcessResourceProvision _queue_stopMonitoring]
  -[FBSProcessResourceProvision isResourceProvision]
  -[FBSProcessResourceProvision _prepareForReuse]
  -[FBSProcessResourceProvision type]
  -[FBSProcessResourceProvision _updateProgress]
  -[FBSProcessResourceProvision setAllowance:]
  -[FBSProcessResourceProvision initWithAllowance:]
  -[FBSProcessResourceProvision dealloc]
  -[FBSProcessResourceProvision copyWithZone:]


FBSSceneClientSettingsDiff : FBSSettingsDiff
  // class methods
  +[FBSSceneClientSettingsDiff diffFromSettings:toSettings:]

  // instance methods
  -[FBSSceneClientSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneClientSettingsDiff keyDescriptionForSetting:]
  -[FBSSceneClientSettingsDiff evaluateWithInspector:context:]
  -[FBSSceneClientSettingsDiff settingsByApplyingToMutableCopyOfSettings:]


FBSSceneSnapshotRequestHandle : NSObject
  // class methods
  +[FBSSceneSnapshotRequestHandle handleForRequestType:context:]

  // instance methods
  -[FBSSceneSnapshotRequestHandle .cxx_destruct]
  -[FBSSceneSnapshotRequestHandle initWithRequestType:context:]
  -[FBSSceneSnapshotRequestHandle performRequestForScene:]
  -[FBSSceneSnapshotRequestHandle _clearAction]
  -[FBSSceneSnapshotRequestHandle cancelRequest]


FBSSystemAppProxy : FBSServiceFacilityClient
  // class methods
  +[FBSSystemAppProxy checkoutProxyWithEndpoint:]

  // instance methods
  -[FBSSystemAppProxy checkin]
  -[FBSSystemAppProxy clientCallbackQueue]
  -[FBSSystemAppProxy systemApplicationBundleIdentifier]
  -[FBSSystemAppProxy _sendMessageType:withMessage:withReplyHandler:waitForReply:]
  -[FBSSystemAppProxy .cxx_destruct]
  -[FBSSystemAppProxy terminateApplicationGroup:forReason:andReport:withDescription:completion:]
  -[FBSSystemAppProxy setKeyboardFocusApplication:deferringToken:completion:]
  -[FBSSystemAppProxy _handleConnect:]
  -[FBSSystemAppProxy processHandleForBundleID:]
  -[FBSSystemAppProxy handleMessage:withType:]
  -[FBSSystemAppProxy isPasscodeLockedOrBlocked]
  -[FBSSystemAppProxy sendActions:withResult:]
  -[FBSSystemAppProxy shutdownWithOptions:]
  -[FBSSystemAppProxy terminateApplication:forReason:andReport:withDescription:completion:]
  -[FBSSystemAppProxy fireCompletion:error:]
  -[FBSSystemAppProxy fireCompletion:openAppErrorCode:]


FBSKeyboardLayer : FBSSceneLayer
  // instance methods
  -[FBSKeyboardLayer _succinctDescription]
  -[FBSKeyboardLayer isKeyboardLayer]
  -[FBSKeyboardLayer alignment]
  -[FBSKeyboardLayer initWithTrackingContext:]
  -[FBSKeyboardLayer isEqual:]
  -[FBSKeyboardLayer _initWithCAContext:fallbackLevel:]


FBSApplicationLibraryConfiguration : NSObject <NSCopying>
 @property  Class applicationInfoClass
 @property  Class applicationPlaceholderClass
 @property  BOOL allowConcurrentLoading
 @property  @? installedApplicationFilter
 @property  @? placeholderFilter

  // instance methods
  -[FBSApplicationLibraryConfiguration setAllowConcurrentLoading:]
  -[FBSApplicationLibraryConfiguration .cxx_destruct]
  -[FBSApplicationLibraryConfiguration applicationInfoClass]
  -[FBSApplicationLibraryConfiguration init]
  -[FBSApplicationLibraryConfiguration setApplicationInfoClass:]
  -[FBSApplicationLibraryConfiguration applicationPlaceholderClass]
  -[FBSApplicationLibraryConfiguration installedApplicationFilter]
  -[FBSApplicationLibraryConfiguration setApplicationPlaceholderClass:]
  -[FBSApplicationLibraryConfiguration allowConcurrentLoading]
  -[FBSApplicationLibraryConfiguration placeholderFilter]
  -[FBSApplicationLibraryConfiguration copyWithZone:]
  -[FBSApplicationLibraryConfiguration setInstalledApplicationFilter:]
  -[FBSApplicationLibraryConfiguration setPlaceholderFilter:]


FBSSceneClientSettings : NSObject <BSDebugDescriptionProviding, BSXPCSecureCoding, NSCopying, NSMutableCopying>
 @property  NSOrderedSet *layers
 @property  double preferredLevel
 @property  long long preferredInterfaceOrientation
 @property  NSString *preferredSceneHostIdentifier
 @property  FBSSceneIdentityToken *preferredSceneHostIdentity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneClientSettings _isMutable]
  +[FBSSceneClientSettings supportsBSXPCSecureCoding]
  +[FBSSceneClientSettings settings]

  // instance methods
  -[FBSSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneClientSettings encodeWithBSXPCCoder:]
  -[FBSSceneClientSettings layers]
  -[FBSSceneClientSettings initWithBSXPCCoder:]
  -[FBSSceneClientSettings .cxx_destruct]
  -[FBSSceneClientSettings keyDescriptionForSetting:]
  -[FBSSceneClientSettings settings:appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneClientSettings succinctDescriptionBuilder]
  -[FBSSceneClientSettings preferredInterfaceOrientation]
  -[FBSSceneClientSettings descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneClientSettings init]
  -[FBSSceneClientSettings isEqual:]
  -[FBSSceneClientSettings initWithSettings:]
  -[FBSSceneClientSettings descriptionWithMultilinePrefix:]
  -[FBSSceneClientSettings settings:keyDescriptionForSetting:]
  -[FBSSceneClientSettings succinctDescription]
  -[FBSSceneClientSettings otherSettings]
  -[FBSSceneClientSettings settings:valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneClientSettings preferredSceneHostIdentifier]
  -[FBSSceneClientSettings occlusions]
  -[FBSSceneClientSettings _descriptionBuilderWithMultilinePrefix:debug:]
  -[FBSSceneClientSettings debugDescriptionWithMultilinePrefix:]
  -[FBSSceneClientSettings mutableCopyWithZone:]
  -[FBSSceneClientSettings dealloc]
  -[FBSSceneClientSettings appendDescriptionToBuilder:forFlag:object:ofSetting:]
  -[FBSSceneClientSettings copyWithZone:]
  -[FBSSceneClientSettings preferredSceneHostIdentity]
  -[FBSSceneClientSettings preferredLevel]


FBSMutableSceneClientSettings : FBSSceneClientSettings <BSDebugDescriptionProviding, BSXPCSecureCoding>
 @property  NSOrderedSet *layers
 @property  double preferredLevel
 @property  long long preferredInterfaceOrientation
 @property  NSString *preferredSceneHostIdentifier
 @property  FBSSceneIdentityToken *preferredSceneHostIdentity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSMutableSceneClientSettings _isMutable]

  // instance methods
  -[FBSMutableSceneClientSettings setPreferredInterfaceOrientation:]
  -[FBSMutableSceneClientSettings otherSettings]
  -[FBSMutableSceneClientSettings mutableCopyWithZone:]
  -[FBSMutableSceneClientSettings _setLayers:]
  -[FBSMutableSceneClientSettings copyWithZone:]
  -[FBSMutableSceneClientSettings setPreferredLevel:]
  -[FBSMutableSceneClientSettings setPreferredSceneHostIdentifier:]
  -[FBSMutableSceneClientSettings setPreferredSceneHostIdentity:]


FBSDisplayMode : NSObject <BSXPCCoding, NSCopying, NSSecureCoding>
 @property  {CGSize=dd} pixelSize
 @property  {CGSize=dd} nativePixelSize
 @property  double scale
 @property  {CGSize=dd} size
 @property  double refreshRate
 @property  long long colorGamut
 @property  long long hdrMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayMode supportsSecureCoding]
  +[FBSDisplayMode _emptyMode]

  // instance methods
  -[FBSDisplayMode hdrMode]
  -[FBSDisplayMode refreshRate]
  -[FBSDisplayMode _isVirtualMode]
  -[FBSDisplayMode colorGamut]
  -[FBSDisplayMode pixelSize]
  -[FBSDisplayMode initWithCoder:]
  -[FBSDisplayMode _initWithWidth:height:preferredScale:scaleOverride:refreshRate:gamut:hdr:rotation:virtual:validityCheck:]
  -[FBSDisplayMode encodeWithXPCDictionary:]
  -[FBSDisplayMode nativePixelSize]
  -[FBSDisplayMode _caWidth]
  -[FBSDisplayMode initWithXPCDictionary:]
  -[FBSDisplayMode _caRefreshRate]
  -[FBSDisplayMode _referenceSizeDescription]
  -[FBSDisplayMode _copyWithOverrideRefreshRate:]
  -[FBSDisplayMode init]
  -[FBSDisplayMode isEqual:]
  -[FBSDisplayMode _caPreferredScale]
  -[FBSDisplayMode _initWithCADisplayMode:scale:rotation:]
  -[FBSDisplayMode _caHDRMode]
  -[FBSDisplayMode _rotation]
  -[FBSDisplayMode _initWithWidth:height:scale:refreshRate:gamut:hdr:]
  -[FBSDisplayMode _copyWithOverrideSize:]
  -[FBSDisplayMode size]
  -[FBSDisplayMode copyWithZone:]
  -[FBSDisplayMode scale]
  -[FBSDisplayMode _caColorGamut]
  -[FBSDisplayMode _caHeight]
  -[FBSDisplayMode encodeWithCoder:]
  -[FBSDisplayMode _copyWithOverrideSize:scale:]


FBSSceneSnapshotAction : FBSSceneAction <FBSSceneSnapshotRequestDelegate>
 @property  @? requestHandler
 @property  @? completionHandler
 @property  BOOL expired
 @property  double expirationInterval
 @property  BSSettings *clientExtendedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneSnapshotAction expirationInterval]
  -[FBSSceneSnapshotAction setClientExtendedData:]
  -[FBSSceneSnapshotAction encodeWithXPCDictionary:]
  -[FBSSceneSnapshotAction .cxx_destruct]
  -[FBSSceneSnapshotAction isExpired]
  -[FBSSceneSnapshotAction setExpired:]
  -[FBSSceneSnapshotAction initWithXPCDictionary:]
  -[FBSSceneSnapshotAction _remainsActionable]
  -[FBSSceneSnapshotAction executeRequestsWithHandler:completionHandler:expirationHandler:]
  -[FBSSceneSnapshotAction initWithRequests:expirationInterval:responseHandler:]
  -[FBSSceneSnapshotAction setNullificationHandler:]
  -[FBSSceneSnapshotAction clientExtendedData]
  -[FBSSceneSnapshotAction setInvalidationHandler:]
  -[FBSSceneSnapshotAction setRequestHandler:]
  -[FBSSceneSnapshotAction snapshotRequestAllowSnapshot:]
  -[FBSSceneSnapshotAction setCompletionHandler:]
  -[FBSSceneSnapshotAction _executeNextRequest]
  -[FBSSceneSnapshotAction fallbackXPCEncodableClass]
  -[FBSSceneSnapshotAction requestHandler]
  -[FBSSceneSnapshotAction invalidate]
  -[FBSSceneSnapshotAction completionHandler]
  -[FBSSceneSnapshotAction snapshotRequest:performWithContext:]
  -[FBSSceneSnapshotAction _finishAllRequests]


FBSProcessWatchdogPolicy : NSObject <BSDescriptionProviding, NSCopying>
 @property  NSString *name
 @property  NSArray *provisions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessWatchdogPolicy policyWithProvisions:]
  +[FBSProcessWatchdogPolicy policyWithName:forProvisions:]

  // instance methods
  -[FBSProcessWatchdogPolicy name]
  -[FBSProcessWatchdogPolicy .cxx_destruct]
  -[FBSProcessWatchdogPolicy succinctDescriptionBuilder]
  -[FBSProcessWatchdogPolicy setName:]
  -[FBSProcessWatchdogPolicy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessWatchdogPolicy descriptionWithMultilinePrefix:]
  -[FBSProcessWatchdogPolicy succinctDescription]
  -[FBSProcessWatchdogPolicy setProvisions:]
  -[FBSProcessWatchdogPolicy provisions]
  -[FBSProcessWatchdogPolicy copyWithZone:]


FBSBasicSceneAgent : NSObject <FBSSceneAgent, BSDescriptionProviding>
 @property  <FBSSceneHandle> *scene
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneAgent .cxx_destruct]
  -[FBSBasicSceneAgent scene]
  -[FBSBasicSceneAgent succinctDescriptionBuilder]
  -[FBSBasicSceneAgent descriptionBuilderWithMultilinePrefix:]
  -[FBSBasicSceneAgent descriptionWithMultilinePrefix:]
  -[FBSBasicSceneAgent succinctDescription]
  -[FBSBasicSceneAgent scene:reviewEvent:withCompletion:]
  -[FBSBasicSceneAgent _configureWithScene:]
  -[FBSBasicSceneAgent didReceiveMessage:fromCounterpartAgent:withResponseSender:]


FBSBasicSceneHostAgent : FBSBasicSceneAgent <FBSSceneHostAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneHostAgent scene:willInvalidateWithEvent:completion:]
  -[FBSBasicSceneHostAgent scene:didInitializeWithEvent:completion:]


FBSBasicSceneClientAgent : FBSBasicSceneAgent <FBSSceneClientAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneClientAgent scene:handleEvent:withCompletion:]
  -[FBSBasicSceneClientAgent scene:willInvalidateWithEvent:completion:]
  -[FBSBasicSceneClientAgent scene:didInitializeWithEvent:completion:]


FBSSerialQueue : NSObject <BSServiceDispatchingQueue>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSerialQueue queueWithMainRunLoopModes:]
  +[FBSSerialQueue queueWithDispatchQueue:]

  // instance methods
  -[FBSSerialQueue .cxx_destruct]
  -[FBSSerialQueue init]
  -[FBSSerialQueue assertBarrierOnQueue]
  -[FBSSerialQueue isEqual:]
  -[FBSSerialQueue performAsync:]
  -[FBSSerialQueue performAsync:withHandoff:]
  -[FBSSerialQueue backingQueueIfExists]
  -[FBSSerialQueue performAfter:withBlock:]
  -[FBSSerialQueue dealloc]
  -[FBSSerialQueue assertOnQueue]


FBSSceneClientIdentity : NSObject <FBSSceneClientIdentifying, NSCopying, NSSecureCoding>
 @property  RBSProcessHandle *processHandle
 @property  FBProcess *transientLocalProcess
 @property  BOOL local
 @property  RBSProcessIdentity *processIdentity
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneClientIdentity supportsSecureCoding]
  +[FBSSceneClientIdentity identityForProcessIdentity:]
  +[FBSSceneClientIdentity localIdentity]
  +[FBSSceneClientIdentity identityForBundleID:]
  +[FBSSceneClientIdentity identityForProcessHandle:]
  +[FBSSceneClientIdentity identityForProcessHandle:transientLocalProcess:]

  // instance methods
  -[FBSSceneClientIdentity transientLocalProcess]
  -[FBSSceneClientIdentity initWithCoder:]
  -[FBSSceneClientIdentity bundleIdentifier]
  -[FBSSceneClientIdentity isValid]
  -[FBSSceneClientIdentity processHandle]
  -[FBSSceneClientIdentity .cxx_destruct]
  -[FBSSceneClientIdentity isLocal]
  -[FBSSceneClientIdentity isEqual:]
  -[FBSSceneClientIdentity processIdentity]
  -[FBSSceneClientIdentity _initWithLocal:identity:handle:description:]
  -[FBSSceneClientIdentity fbs_sceneClientIdentity]
  -[FBSSceneClientIdentity copyWithZone:]
  -[FBSSceneClientIdentity encodeWithCoder:]


FBSDisplayLayoutPublisher : NSObject <BSServiceConnectionListenerDelegate, BSInvalidatable>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  long long interfaceOrientation
 @property  long long backlightLevel
 @property  BOOL transitioning
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayLayoutPublisher publisherWithConfiguration:]

  // instance methods
  -[FBSDisplayLayoutPublisher displayConfiguration]
  -[FBSDisplayLayoutPublisher addElement:]
  -[FBSDisplayLayoutPublisher backlightLevel]
  -[FBSDisplayLayoutPublisher listener:didReceiveConnection:withContext:]
  -[FBSDisplayLayoutPublisher .cxx_destruct]
  -[FBSDisplayLayoutPublisher _initWithConfiguration:]
  -[FBSDisplayLayoutPublisher setBacklightLevel:]
  -[FBSDisplayLayoutPublisher setDisplayConfiguration:]
  -[FBSDisplayLayoutPublisher setInterfaceOrientation:]
  -[FBSDisplayLayoutPublisher init]
  -[FBSDisplayLayoutPublisher flush]
  -[FBSDisplayLayoutPublisher interfaceOrientation]
  -[FBSDisplayLayoutPublisher currentLayout]
  -[FBSDisplayLayoutPublisher addObserver:]
  -[FBSDisplayLayoutPublisher activate]
  -[FBSDisplayLayoutPublisher _addElement:forKey:]
  -[FBSDisplayLayoutPublisher isTransitioning]
  -[FBSDisplayLayoutPublisher invalidate]
  -[FBSDisplayLayoutPublisher removeObserver:]
  -[FBSDisplayLayoutPublisher transitionAssertionWithReason:]


FBSDisplayLayoutPublisherConfiguration : NSObject
 @property  NSString *domainIdentifier
 @property  NSString *instanceIdentifier

  // instance methods
  -[FBSDisplayLayoutPublisherConfiguration setDomainIdentifier:]
  -[FBSDisplayLayoutPublisherConfiguration domainIdentifier]
  -[FBSDisplayLayoutPublisherConfiguration .cxx_destruct]
  -[FBSDisplayLayoutPublisherConfiguration instanceIdentifier]
  -[FBSDisplayLayoutPublisherConfiguration setInstanceIdentifier:]


FBSApplicationTerminationAssertion : NSObject
 @property  NSString *bundleID
 @property  NSString *reason
 @property  long long assertionState

  // class methods
  +[FBSApplicationTerminationAssertion _queue]

  // instance methods
  -[FBSApplicationTerminationAssertion bundleID]
  -[FBSApplicationTerminationAssertion .cxx_destruct]
  -[FBSApplicationTerminationAssertion reason]
  -[FBSApplicationTerminationAssertion dealloc]
  -[FBSApplicationTerminationAssertion invalidate]
  -[FBSApplicationTerminationAssertion assertionState]
  -[FBSApplicationTerminationAssertion initWithBundleID:reason:acquisitionHandler:]


FBSServiceFacilityClient : NSObject <FBSServiceFacilityClientConfiguring, FBSServiceFacilityClientMessaging, BSInvalidatable>
 @property  BOOL configured
 @property  NSString *identifier
 @property  BSServiceQuality *serviceQuality
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSServiceFacilityClient defaultShellEndpoint]

  // instance methods
  -[FBSServiceFacilityClient initWithConfigurator:]
  -[FBSServiceFacilityClient configureConnectMessage:]
  -[FBSServiceFacilityClient serviceQuality]
  -[FBSServiceFacilityClient _queue_handleError:]
  -[FBSServiceFacilityClient calloutQueue]
  -[FBSServiceFacilityClient initWithIdentifier:calloutQueue:]
  -[FBSServiceFacilityClient sendMessage:withType:replyHandler:waitForReply:timeout:]
  -[FBSServiceFacilityClient setCalloutQueue:]
  -[FBSServiceFacilityClient setServiceQuality:]
  -[FBSServiceFacilityClient .cxx_destruct]
  -[FBSServiceFacilityClient isConfigured]
  -[FBSServiceFacilityClient sendMessage:withType:]
  -[FBSServiceFacilityClient _queue_handleMessage:]
  -[FBSServiceFacilityClient _isValid]
  -[FBSServiceFacilityClient _lock_activate]
  -[FBSServiceFacilityClient _lock_invalidate]
  -[FBSServiceFacilityClient init]
  -[FBSServiceFacilityClient setInterfaceTarget:]
  -[FBSServiceFacilityClient handleError:]
  -[FBSServiceFacilityClient setInterface:]
  -[FBSServiceFacilityClient identifier]
  -[FBSServiceFacilityClient handleMessage:withType:]
  -[FBSServiceFacilityClient activate]
  -[FBSServiceFacilityClient setEndpoint:]
  -[FBSServiceFacilityClient setIdentifier:]
  -[FBSServiceFacilityClient dealloc]
  -[FBSServiceFacilityClient invalidate]


FBSSceneMessage : NSObject <NSCopying, BSXPCCoding, BSDescriptionProviding>
 @property  BSMutableKeyedSettings *payload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneMessage message]

  // instance methods
  -[FBSSceneMessage payload]
  -[FBSSceneMessage encodeWithXPCDictionary:]
  -[FBSSceneMessage .cxx_destruct]
  -[FBSSceneMessage _initWithPayload:]
  -[FBSSceneMessage initWithXPCDictionary:]
  -[FBSSceneMessage succinctDescriptionBuilder]
  -[FBSSceneMessage descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneMessage init]
  -[FBSSceneMessage descriptionWithMultilinePrefix:]
  -[FBSSceneMessage succinctDescription]
  -[FBSSceneMessage fallbackXPCEncodableClass]
  -[FBSSceneMessage copyWithZone:]


FBSLegacySignatureValidationService : NSObject <FBSApplicationTrustDataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSLegacySignatureValidationService .cxx_destruct]
  -[FBSLegacySignatureValidationService trustStateForApplication:]
  -[FBSLegacySignatureValidationService _initializeProfiles:]
  -[FBSLegacySignatureValidationService _workQueue_expirationDateForProvisioningProfile]
  -[FBSLegacySignatureValidationService _workQueue_signatureNeedsExplicitUserTrust]
  -[FBSLegacySignatureValidationService initWithApplicationInfo:andProvisioningProfiles:isManaged:]


FBSDisplayMonitor : NSObject <BSInvalidatable>
 @property  NSObject<OS_dispatch_queue> *callOutQueue
 @property  BOOL canPostToBookendObserver
 @property  <FBSDisplayObserving> *bookendObserver
 @property  NSEnumerator *observersEnumerator
 @property  FBSDisplayIdentity *mainIdentity
 @property  FBSDisplayConfiguration *mainConfiguration
 @property  NSSet *connectedIdentities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayMonitor bookendObserver]
  -[FBSDisplayMonitor canPostToBookendObserver]
  -[FBSDisplayMonitor _initWithBookendObserver:]
  -[FBSDisplayMonitor configurationForIdentity:]
  -[FBSDisplayMonitor observersEnumerator]
  -[FBSDisplayMonitor _sortedSources]
  -[FBSDisplayMonitor connectedIdentities]
  -[FBSDisplayMonitor allowsUnknownDisplays]
  -[FBSDisplayMonitor mainIdentity]
  -[FBSDisplayMonitor _lock_enumerateConnectedWithBlock:]
  -[FBSDisplayMonitor mainConfiguration]
  -[FBSDisplayMonitor callOutQueue]
  -[FBSDisplayMonitor .cxx_destruct]
  -[FBSDisplayMonitor _postInitialBookendObserverConnections]
  -[FBSDisplayMonitor init]
  -[FBSDisplayMonitor addObserver:]
  -[FBSDisplayMonitor dealloc]
  -[FBSDisplayMonitor invalidate]
  -[FBSDisplayMonitor initWithInitializationCompletion:]
  -[FBSDisplayMonitor removeObserver:]
  -[FBSDisplayMonitor setAllowsUnknownDisplays:]
  -[FBSDisplayMonitor _lock_enumerateSourcesWithBlock:]


FBSApplicationTrustFacade : NSObject <FBSApplicationTrustDataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationTrustFacade .cxx_destruct]
  -[FBSApplicationTrustFacade trustStateForApplication:]


FBSApplicationUninstallOptions : NSObject
 @property  BOOL userInitiated
 @property  BOOL showsArchiveOption

  // class methods
  +[FBSApplicationUninstallOptions userInitiated]

  // instance methods
  -[FBSApplicationUninstallOptions setUserInitiated:]
  -[FBSApplicationUninstallOptions setShowsArchiveOption:]
  -[FBSApplicationUninstallOptions showsArchiveOption]
  -[FBSApplicationUninstallOptions isUserInitiated]


FBSDisplaySource : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  unsigned int displayID
 @property  BOOL allowsUnknown
 @property  FBSDisplayConfiguration *connectedConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplaySource displayID]
  -[FBSDisplaySource _initWithDisplay:monitor:isMain:]
  -[FBSDisplaySource _lock_setAttachment:]
  -[FBSDisplaySource _updateForInitialization:]
  -[FBSDisplaySource .cxx_destruct]
  -[FBSDisplaySource connectedConfiguration]
  -[FBSDisplaySource succinctDescriptionBuilder]
  -[FBSDisplaySource _lock_noteDisconnecting]
  -[FBSDisplaySource descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplaySource init]
  -[FBSDisplaySource descriptionWithMultilinePrefix:]
  -[FBSDisplaySource _lock_setConfiguration:]
  -[FBSDisplaySource succinctDescription]
  -[FBSDisplaySource allowsUnknown]
  -[FBSDisplaySource initWithMainDisplay:monitor:]
  -[FBSDisplaySource _lock_noteUpdated]
  -[FBSDisplaySource initWithNonMainDisplay:monitor:]
  -[FBSDisplaySource _lock_noteConnected]
  -[FBSDisplaySource setAllowsUnknown:]
  -[FBSDisplaySource dealloc]
  -[FBSDisplaySource invalidate]
  -[FBSDisplaySource _lock_setReportedConfiguration:]
  -[FBSDisplaySource observeValueForKeyPath:ofObject:change:context:]


FBSDisplayLayoutTransitionContext : NSObject <BSXPCCoding, BSDescriptionProviding>
 @property  NSSet *transitionReasons
 @property  NSString *transitionReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayoutTransitionContext transitionReason]
  -[FBSDisplayLayoutTransitionContext encodeWithXPCDictionary:]
  -[FBSDisplayLayoutTransitionContext .cxx_destruct]
  -[FBSDisplayLayoutTransitionContext initWithXPCDictionary:]
  -[FBSDisplayLayoutTransitionContext transitionReasons]
  -[FBSDisplayLayoutTransitionContext succinctDescriptionBuilder]
  -[FBSDisplayLayoutTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayoutTransitionContext descriptionWithMultilinePrefix:]
  -[FBSDisplayLayoutTransitionContext succinctDescription]
  -[FBSDisplayLayoutTransitionContext setTransitionReasons:]


RBSProcessIdentity(FBSSceneClientIdentity)
	// instance methods
	-[RBSProcessIdentity(FBSSceneClientIdentity) fbs_sceneClientIdentity]

RBSProcessHandle(FBSSceneClientIdentity)
	// instance methods
	-[RBSProcessHandle(FBSSceneClientIdentity) fbs_sceneClientIdentity]

(FBSSceneEvent)
	// class methods
	+[(FBSSceneEvent) sceneMessageErrorWithCode:]

01 00 0300 /System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation: AITransactionLog 
01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSTerminationAssertion 
01 00 0700 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSTerminationContext 
01 00 0000 BSAbsoluteMachTimer 
01 00 0000 BSAction 
01 00 0000 BSActionResponder 
01 00 0000 BSActionResponse 
01 00 0000 BSAtomicSignal 
01 00 0000 BSDescriptionBuilder 
01 00 0000 BSDispatchQueueAttributes 
01 00 0000 BSEqualsBuilder 
01 00 0000 BSHashBuilder 
01 00 0000 BSMachPortTaskNameRight 
01 00 0000 BSMachServiceAliases 
01 00 0000 BSMutableKeyedSettings 
01 00 0000 BSMutableServiceInterface 
01 00 0000 BSMutableSettings 
01 00 0000 BSObjCProtocol 
01 00 0000 BSPlatform 
01 00 0000 BSProcessHandle 
01 00 0000 BSServiceConnection 
01 00 0000 BSServiceConnectionEndpoint 
01 00 0000 BSServiceConnectionEndpointMonitor 
01 00 0000 BSServiceConnectionListener 
01 00 0000 BSServiceQuality 
01 00 0000 BSServicesConfiguration 
01 00 0000 BSSettings 
01 00 0000 BSSettingsDiff 
01 00 0000 BSSimpleAssertion 
01 00 0000 BSXPCCoder 
01 00 0000 BSXPCCodingArray 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0b00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0b00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
