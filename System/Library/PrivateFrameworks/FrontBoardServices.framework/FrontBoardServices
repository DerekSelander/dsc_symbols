|| __DATA.__objc_data _OBJC_CLASS_$_FBSALOToken
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStore
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreClientFactory
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationDataStoreRepositoryClient
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationLibraryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationPlaceholderProgress
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationTerminationAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_FBSApplicationUninstallOptions
|| __DATA.__objc_data _OBJC_CLASS_$_FBSBundleInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDataResetRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutPublisher
|| __DATA.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutPublisherConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_FBSExtensionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FBSLazyApplicationInfoProvider
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableSceneDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_FBSMutableSceneIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcess
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionProvision
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessHandle
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessResourceProvision
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessTerminationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessWatchdog
|| __DATA.__objc_data _OBJC_CLASS_$_FBSProcessWatchdogPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneActivitySession
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneClientIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_FBSSceneOcclusion
|| __DATA.__objc_data _OBJC_CLASS_$_FBSServiceFacility
|| __DATA.__objc_data _OBJC_CLASS_$_FBSShutdownOptions
|| __DATA.__objc_data _OBJC_CLASS_$__FBMapResult
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshotContext
|| __DATA.__objc_data _OBJC_CLASS_$__FBSSnapshotLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSALOToken
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStore
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreClientFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationDataStoreRepositoryClient
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationLibraryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationPlaceholderProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationTerminationAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSApplicationUninstallOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSBundleInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDataResetRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutPublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutPublisherConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSExtensionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSLazyApplicationInfoProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableDisplayConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableSceneDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSMutableSceneIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcess
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionProvision
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessExecutionStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessResourceProvision
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessTerminationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessWatchdog
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSProcessWatchdogPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneActivitySession
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneClientIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSSceneOcclusion
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSServiceFacility
|| __DATA.__objc_data _OBJC_METACLASS_$_FBSShutdownOptions
|| __DATA.__objc_data _OBJC_METACLASS_$__FBMapResult
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshotContext
|| __DATA.__objc_data _OBJC_METACLASS_$__FBSSnapshotLayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSALOToken._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSBasicSceneAgent._scene
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._hdrMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._nativePixelSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._overscanCompensation
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._pixelSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSDisplayConfigurationRequest._refreshRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._monitoring
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSProcessExecutionProvision._violated
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneParameters._specification
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._allowCPUThrottling
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._updateContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_FBSSceneTransitionContext._watchdogTransitionContext
|| __DATA_CONST.__const _FBApplicationDataStoreServiceIdentifier
|| __DATA_CONST.__const _FBLoggingSubsystem
|| __DATA_CONST.__const _FBSActivateForEventOptionTypeBackgroundContentFetching
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyAllChangesInterest
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyBundleID
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyBundleIDs
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyKey
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyMessageType
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyObject
|| __DATA_CONST.__const _FBSApplicationDataStoreMessageKeyPrefetchedKeys
|| __DATA_CONST.__const _FBSApplicationIdentifierEntitlement
|| __DATA_CONST.__const _FBSApplicationLibraryErrorBundleIDKey
|| __DATA_CONST.__const _FBSApplicationLibraryErrorDomain
|| __DATA_CONST.__const _FBSApplicationLibraryLoggingSubsystem
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionErrorDomain
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonCacheDeletion
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonCritical
|| __DATA_CONST.__const _FBSApplicationTerminationAssertionReasonInstallation
|| __DATA_CONST.__const _FBSDebugOptionKeyArguments
|| __DATA_CONST.__const _FBSDebugOptionKeyCancelDebugOnNextLaunch
|| __DATA_CONST.__const _FBSDebugOptionKeyDebugOnNextLaunch
|| __DATA_CONST.__const _FBSDebugOptionKeyDisableASLR
|| __DATA_CONST.__const _FBSDebugOptionKeyEnvironment
|| __DATA_CONST.__const _FBSDebugOptionKeyExtensionBundleID
|| __DATA_CONST.__const _FBSDebugOptionKeyExtensionPointID
|| __DATA_CONST.__const _FBSDebugOptionKeyStandardErrorPath
|| __DATA_CONST.__const _FBSDebugOptionKeyStandardOutPath
|| __DATA_CONST.__const _FBSDebugOptionKeyWaitForDebugger
|| __DATA_CONST.__const _FBSDisplayLayoutElementControlCenterIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementLockScreenIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementNotificationCenterIdentifier
|| __DATA_CONST.__const _FBSDisplayLayoutElementSiriIdentifier
|| __DATA_CONST.__const _FBSLaunchServicesEntitlement
|| __DATA_CONST.__const _FBSOpenApplicationErrorDomain
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateAsClassic
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateForEvent
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyActivateSuspended
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyAppLink
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyAppLink4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyBrowserAppLinkState
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyBrowserAppLinkState4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyDebuggingOptions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyDocumentOpen4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyIsSensitiveURL
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLSCacheGUID
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLSSequenceNumber
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchImageName
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchIntent
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyLaunchOrigin
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadAnnotation
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadIsValid
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadIsValid4LS
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadOptions
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPayloadURL
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyPromptUnlockDevice
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyServiceAvailabilityTimeout
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyUnlockDevice
|| __DATA_CONST.__const _FBSOpenApplicationOptionKeyUserActivity4LS
|| __DATA_CONST.__const _FBSOpenApplicationServiceErrorDomain
|| __DATA_CONST.__const _FBSOpenApplicationWithNewScene
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyDuration
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyOrientationInterest
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyRotationDirection
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeySequenceNumber
|| __DATA_CONST.__const _FBSOrientationObserverMessageKeyUIOrientation
|| __DATA_CONST.__const _FBSOrientationObserverServiceIdentifier
|| __DATA_CONST.__const _FBSProcessResourceProvisionErrorDomain
|| __DATA_CONST.__const _FBSProcessWatchdogErrorDomain
|| __DATA_CONST.__const _FBSProcessWatchdogErrorProvisionKey
|| __DATA_CONST.__const _FBSProcessWatchdogErrorTerminationRequestKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorDomain
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorProvisionKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorSessionKey
|| __DATA_CONST.__const _FBSSceneActivitySessionErrorTerminationRequestKey
|| __DATA_CONST.__const _FBSSceneMessageErrorDomain
|| __DATA_CONST.__const _FBSSceneSnapshotErrorDomain
|| __DATA_CONST.__const _FBSSceneVisibilityEndowmentNamespace
|| __DATA_CONST.__const _FBSServiceFacilityErrorDomain
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyErrorDescription
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyFacilityID
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyMessageType
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyPayload
|| __DATA_CONST.__const _FBSServiceFacilityMessageKeyServiceAccepted
|| __DATA_CONST.__const _FBSServiceMilestoneDataMigrationCompleted
|| __DATA_CONST.__const _FBSServiceMilestoneFrontBoardInitialized
|| __DATA_CONST.__const _FBSServiceMilestoneServicesInitialized
|| __DATA_CONST.__const _FBSServiceMilestoneSystemApplicationInitialized
|| __DATA_CONST.__const _FBSSetAppBackgroundStyleEntitlement
|| __DATA_CONST.__const _FBSSystemAppProxyServiceIdentifier
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyActions
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyAppLink
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBadgeValue
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBool
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBoolResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBrightness
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBundleID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyBundleIDResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyClientProcessHandle
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyDeferringToken
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyError
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyIntResult
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyInterval
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyMachPort
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyOptions
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyPID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyProcessHandle
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyReason
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyRequestID
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateDesc
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateGroup
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateReason
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyTerminateReport
|| __DATA_CONST.__const _FBSSystemServiceMessageKeyURL
|| __DATA_CONST.__const _FBSViewServicesEntitlement
|| __DATA_CONST.__const _FBSWorkspaceErrorDomain
|| __DATA_CONST.__const __FBSApplicationLibraryReloadPlaceholdersNotification
|| __DATA_CONST.__const __kFBSDisplayLayoutMonitorConnectionContextKey_QOS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSBasicSceneAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSBasicSceneClientAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSBasicSceneHostAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSCAContextSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayout
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayLayoutTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayMode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplayMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSDisplaySource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSExternalSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSMutableSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOpenApplicationServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationObserverClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSOrientationUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSScene
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneClientSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequestAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSnapshotRequestHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSceneTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSServiceFacilityClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemAppProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSSystemServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationLaunchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSUIApplicationWorkspaceShim
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceCreateSceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceDestroySceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceFencingImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceSceneRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceSceneUpdateResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceScenesClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSWorkspaceServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FBSXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutEndpointServices
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__FBSDisplayLayoutServiceAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSBasicSceneAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSBasicSceneClientAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSBasicSceneHostAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSCAContextSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayout
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutMonitorConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayLayoutTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayMode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplayMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSDisplaySource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSExternalSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSMutableSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOpenApplicationServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationObserverClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSOrientationUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSScene
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneClientSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneIdentityToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneParameters
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequestAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSnapshotRequestHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSceneTransitionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSerialQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSServiceFacilityClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSettingsDiff
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSettingsDiffInspector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemAppProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSSystemServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationLaunchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSUIApplicationWorkspaceShim
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceCreateSceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceDestroySceneResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceFencingImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceInitializationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceSceneRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceSceneUpdateResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceScenesClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSWorkspaceServiceSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FBSXPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutEndpointServices
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__FBSDisplayLayoutServiceAssertion
|| __TEXT.__const _FBSFrontBoardServicesVersionNumber
|| __TEXT.__const _FBSFrontBoardServicesVersionString
|| __TEXT.__const _FBSLSInstallPhaseUnknown
|| __TEXT.__const _FBSLSInstallStateUnknown
|| __TEXT.__const _FBSOrientationObserverInterestAll
|| __TEXT.__const _FBSSceneLevelMaximum
|| __TEXT.__const _FBSSystemServiceSynchronousTimeout
|| __TEXT.__text _CARenderServerCreateSnapshots
|| __TEXT.__text _FBInstallTypeIsCloudDemoted
|| __TEXT.__text _FBLogAppDataStore
|| __TEXT.__text _FBLogAppLaunch
|| __TEXT.__text _FBLogCommon
|| __TEXT.__text _FBLogInterfaceOrientationObserver
|| __TEXT.__text _FBLogWatchdog
|| __TEXT.__text _FBSApplicationLibraryErrorCodeDescription
|| __TEXT.__text _FBSApplicationLibraryLogTransactionEnabled
|| __TEXT.__text _FBSApplicationLibraryLogTransactionSetEnabled
|| __TEXT.__text _FBSApplicationTerminationGroupDescription
|| __TEXT.__text _FBSApplicationTerminationReasonDescription
|| __TEXT.__text _FBSApplicationTerminationReasonIsGraceful
|| __TEXT.__text _FBSDisplayAttachmentDescription
|| __TEXT.__text _FBSDisplayGamutDescription
|| __TEXT.__text _FBSDisplayGamutFromCADisplayGamut
|| __TEXT.__text _FBSDisplayGamutIsValid
|| __TEXT.__text _FBSDisplayGamutToCADisplayGamut
|| __TEXT.__text _FBSDisplayHDRModeDescription
|| __TEXT.__text _FBSDisplayHDRModeFromCADisplayHDRMode
|| __TEXT.__text _FBSDisplayHDRModeIsValid
|| __TEXT.__text _FBSDisplayHDRModeToCADisplayHDRMode
|| __TEXT.__text _FBSDisplayOverscanCompensationDescription
|| __TEXT.__text _FBSDisplayOverscanCompensationFromCADisplayOverscanAdjustment
|| __TEXT.__text _FBSDisplayOverscanCompensationIsValid
|| __TEXT.__text _FBSDisplayOverscanCompensationToCADisplayOverscanAdjustment
|| __TEXT.__text _FBSDisplayRotationDescription
|| __TEXT.__text _FBSDisplayRotationFromCADisplayRotation
|| __TEXT.__text _FBSDisplayRotationFromRadians
|| __TEXT.__text _FBSDisplayRotationIsValid
|| __TEXT.__text _FBSDisplayRotationRadians
|| __TEXT.__text _FBSDisplayRotationToCADisplayRotation
|| __TEXT.__text _FBSDisplayTypeDescription
|| __TEXT.__text _FBSDisplayTypeIsValid
|| __TEXT.__text _FBSDisplayTypeName
|| __TEXT.__text _FBSFrameworkBundle
|| __TEXT.__text _FBSGetServiceFacilityManager
|| __TEXT.__text _FBSInstallTypeIsCloudDemoted
|| __TEXT.__text _FBSLogApplicationLibrary
|| __TEXT.__text _FBSLogApplicationLibraryObserver
|| __TEXT.__text _FBSLogApplicationPlaceholder
|| __TEXT.__text _FBSOpenApplicationErrorCodeToString
|| __TEXT.__text _FBSOpenApplicationErrorCreate
|| __TEXT.__text _FBSOpenApplicationServiceErrorCodeToString
|| __TEXT.__text _FBSProcessExceptionCodeDescription
|| __TEXT.__text _FBSProcessGraphicsPolicyDescription
|| __TEXT.__text _FBSProcessJetsamPolicyDescription
|| __TEXT.__text _FBSProcessPrettyDescription
|| __TEXT.__text _FBSProcessResourceAllowanceExtend
|| __TEXT.__text _FBSProcessResourceAllowanceGetType
|| __TEXT.__text _FBSProcessResourceAllowanceGetValue
|| __TEXT.__text _FBSProcessResourceAllowanceIsValid
|| __TEXT.__text _FBSProcessResourceAllowanceMake
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithRealTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithScheduledTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithScheduledTimeIntervalAndRefreshInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithTimeInterval
|| __TEXT.__text _FBSProcessResourceAllowanceMakeWithValue
|| __TEXT.__text _FBSProcessResourceAllowanceScale
|| __TEXT.__text _FBSProcessResourceAllowanceValue
|| __TEXT.__text _FBSProcessResourceTimeIntervalForValue
|| __TEXT.__text _FBSProcessResourceTypeIsTimeInterval
|| __TEXT.__text _FBSProcessResourceValueForTimeInterval
|| __TEXT.__text _FBSProcessSchedulingPolicyDescription
|| __TEXT.__text _FBSSceneEventSourceDescription
|| __TEXT.__text _FBSSceneSnapshotActionResponseForErrorCode
|| __TEXT.__text _FBSSceneSnapshotErrorForCode
|| __TEXT.__text _FBSSetServiceFacilityManager
|| __TEXT.__text _FBSStringForInstallPhase
|| __TEXT.__text _FBSStringForInstallState
|| __TEXT.__text _FBSStringForInstallType
|| __TEXT.__text _FBSWorkspaceErrorCodeToString
|| __TEXT.__text _FBSWorkspaceErrorCreate
|| __TEXT.__text _FBSWorkspaceInitialize
|| __TEXT.__text _NSStringFromDiagnosticReportType
|| __TEXT.__text _NSStringFromFBApplicationPlaceholderProgressState
|| __TEXT.__text _NSStringFromFBSApplicationLibraryLogStep
|| __TEXT.__text _NSStringFromFBSApplicationPlaceholderAction
|| __TEXT.__text _NSStringFromFBSApplicationPlaceholderProgressState
|| __TEXT.__text _NSStringFromFBSOpenApplicationLaunchIntent
|| __TEXT.__text _NSStringFromFBSSceneLayerAlignment
|| __TEXT.__text _NSStringFromProcessResourceAllowance
|| __TEXT.__text _NSStringFromProcessResourceType
|| __TEXT.__text _NSStringFromProcessResourceValue
|| __TEXT.__text __NSStringFromFBSDisplayLayoutQOS
|| __TEXT.__text __QOSClassForFBSDisplayLayoutQOS
__ AssertionServices: _BKSApplicationStateProcessIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ AssertionServices: _OBJC_CLASS_$_BKSTerminationAssertion
__ AssertionServices: _OBJC_CLASS_$_BKSTerminationContext
__ BackBoardServices: _BKLogDisplay
__ BackBoardServices: _BKSDisplayServicesGetExternalDisplayScale
__ BackBoardServices: _BKSFenceLogTrace
__ BackBoardServices: _BKSFenceLogWorkspace
__ BackBoardServices: _OBJC_CLASS_$_BKSAnimationFenceAssertion
__ BackBoardServices: _OBJC_CLASS_$_BKSAnimationFenceHandle
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInfinite
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _LSHiddenAppType
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileInstallation: _OBJC_CLASS_$_AITransactionLog
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ _BSAtomicGetFlag 
__ _BSAtomicSetFlag 
__ _BSCreateDeserializedArrayFromXPCDictionaryWithKey 
__ _BSCreateDeserializedBSXPCEncodableObjectFromXPCDictionary 
__ _BSCreateDeserializedBSXPCEncodableObjectFromXPCDictionaryWithKey 
__ _BSCreateDeserializedCFValueFromXPCDictionaryWithKey 
__ _BSCreateDeserializedSetOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSCreateDeserializedStringFromXPCDictionaryWithKey 
__ _BSCreateSerializedBSXPCEncodableObject 
__ _BSDeserializeArrayOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSDeserializeBSXPCEncodableObjectFromXPCDictionaryWithKey 
__ _BSDeserializeCFValueFromXPCDictionaryWithKey 
__ _BSDeserializeCGFloatFromXPCDictionaryWithKey 
__ _BSDeserializeCGPointFromXPCObject 
__ _BSDeserializeCGRectFromXPCDictionaryWithKey 
__ _BSDeserializeCGRectFromXPCObject 
__ _BSDeserializeCGSizeFromXPCDictionaryWithKey 
__ _BSDeserializeCGSizeFromXPCObject 
__ _BSDeserializeDoubleFromXPCDictionaryWithKey 
__ _BSDeserializeNSSecureEncodableObjectOfClassFromXPCDictionaryWithKey 
__ _BSDeserializeSetOfBSXPCEncodableObjectsFromXPCDictionaryWithKey 
__ _BSDeserializeStringFromXPCDictionaryWithKey 
__ _BSDispatchBlockCreateWithCurrentQualityOfService 
__ _BSDispatchMain 
__ _BSDispatchQueueAssert 
__ _BSDispatchQueueAssertMain 
__ _BSDispatchQueueAssertNot 
__ _BSDispatchQueueCreate 
__ _BSDispatchQueueCreateSerial 
__ _BSDispatchQueueCreateWithQualityOfService 
__ _BSEqualBools 
__ _BSEqualObjects 
__ _BSErrorCodeDescriptionKey 
__ _BSFloatEqualToFloat 
__ _BSFloatGreaterThanFloat 
__ _BSFloatGreaterThanOrEqualToFloat 
__ _BSFloatIsOne 
__ _BSFloatIsZero 
__ _BSFloatLessThanOrEqualToFloat 
__ _BSInterfaceOrientationDescription 
__ _BSInterfaceOrientationIsLandscape 
__ _BSLogAddStateCaptureBlockWithTitle 
__ _BSMachSendRightRelease 
__ _BSMachSendRightRetain 
__ _BSModificationDateForPath 
__ _BSOrientationRotationDirectionDescription 
__ _BSPointFromValue 
__ _BSRectEqualToRect 
__ _BSRectFromValue 
__ _BSRectUnit 
__ _BSRectWithSize 
__ _BSSelfTaskHasEntitlement 
__ _BSSerializeArrayOfBSXPCEncodableObjectsToXPCDictionaryWithKey 
__ _BSSerializeArrayToXPCDictionaryWithKey 
__ _BSSerializeBSXPCEncodableObjectToXPCDictionary 
__ _BSSerializeBSXPCEncodableObjectToXPCDictionaryWithKey 
__ _BSSerializeCFValueToXPCDictionaryWithKey 
__ _BSSerializeCGFloatToXPCDictionaryWithKey 
__ _BSSerializeCGPointToXPCDictionaryWithKey 
__ _BSSerializeCGRectToXPCDictionaryWithKey 
__ _BSSerializeCGSizeToXPCDictionaryWithKey 
__ _BSSerializeDoubleToXPCDictionaryWithKey 
__ _BSSerializeNSSecureEncodableObjectToXPCDictionaryWithKey 
__ _BSSerializeSetOfBSXPCEncodableObjectsToXPCDictionaryWithKey 
__ _BSSerializeStringToXPCDictionaryWithKey 
__ _BSSettingFlagForBool 
__ _BSSettingFlagIfYes 
__ _BSSettingFlagIsYes 
__ _BSSizeEqualToSize 
__ _BSSizeFromValue 
__ _BSStringFromBOOL 
__ _BSStringFromCGRect 
__ _BSStringFromCGSize 
__ _BSTimeIntervalFromMachTimeValue 
__ _BSTimerRepeatIntervalNone 
__ _BSValueWithPoint 
__ _BSValueWithRect 
__ _BSValueWithSize 
__ _OBJC_CLASS_$_BSAction 
__ _OBJC_CLASS_$_BSActionResponse 
__ _OBJC_CLASS_$_BSAtomicSignal 
__ _OBJC_CLASS_$_BSDescriptionBuilder 
__ _OBJC_CLASS_$_BSDispatchQueueAttributes 
__ _OBJC_CLASS_$_BSEqualsBuilder 
__ _OBJC_CLASS_$_BSError 
__ _OBJC_CLASS_$_BSHashBuilder 
__ _OBJC_CLASS_$_BSMachPortTaskNameRight 
__ _OBJC_CLASS_$_BSMonotonicReferenceTime 
__ _OBJC_CLASS_$_BSMutableIntegerMap 
__ _OBJC_CLASS_$_BSMutableKeyedSettings 
__ _OBJC_CLASS_$_BSMutableServiceInterface 
__ _OBJC_CLASS_$_BSMutableSettings 
__ _OBJC_CLASS_$_BSObjCProtocol 
__ _OBJC_CLASS_$_BSProcessHandle 
__ _OBJC_CLASS_$_BSServiceConnection 
__ _OBJC_CLASS_$_BSServiceConnectionEndpoint 
__ _OBJC_CLASS_$_BSServiceConnectionEndpointMonitor 
__ _OBJC_CLASS_$_BSServiceConnectionListener 
__ _OBJC_CLASS_$_BSServiceQuality 
__ _OBJC_CLASS_$_BSServicesConfiguration 
__ _OBJC_CLASS_$_BSSettingsDiff 
__ _OBJC_CLASS_$_BSSimpleAssertion 
__ _OBJC_CLASS_$_BSTimer 
__ _OBJC_CLASS_$_BSUIApplicationSupport 
__ _OBJC_CLASS_$_BSXPCCoder 
__ _OBJC_CLASS_$_BSXPCCodingArray 
__ _OBJC_METACLASS_$_BSAction 
__ _OBJC_METACLASS_$_BSProcessHandle 
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_mach_send
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_double
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_handoff_reply
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_double_get_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _method_setImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
FBSSceneSnapshotRequest : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding>
 @property  NSString *sceneID
 @property  <FBSSceneSnapshotRequestDelegate> *delegate
 @property  FBSSceneSettings *settings
 @property  BOOL allowsProtectedContent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneSnapshotRequest delegate]
  -[FBSSceneSnapshotRequest setDelegate:]
  -[FBSSceneSnapshotRequest .cxx_destruct]
  -[FBSSceneSnapshotRequest initWithSettings:]
  -[FBSSceneSnapshotRequest settings]
  -[FBSSceneSnapshotRequest succinctDescription]
  -[FBSSceneSnapshotRequest descriptionWithMultilinePrefix:]
  -[FBSSceneSnapshotRequest succinctDescriptionBuilder]
  -[FBSSceneSnapshotRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSnapshotRequest encodeWithXPCDictionary:]
  -[FBSSceneSnapshotRequest initWithXPCDictionary:]
  -[FBSSceneSnapshotRequest performSnapshotWithContext:]
  -[FBSSceneSnapshotRequest initWithSettings:allowsProtectedContent:]
  -[FBSSceneSnapshotRequest sceneID]
  -[FBSSceneSnapshotRequest setSceneID:]
  -[FBSSceneSnapshotRequest allowsProtectedContent]


FBSSceneSnapshotRequestAction : BSAction
 @property  unsigned long type
 @property  FBSSceneSnapshotContext *context

  // instance methods
  -[FBSSceneSnapshotRequestAction type]
  -[FBSSceneSnapshotRequestAction context]
  -[FBSSceneSnapshotRequestAction keyDescriptionForSetting:]
  -[FBSSceneSnapshotRequestAction valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSnapshotRequestAction initWithType:context:completion:]


FBSSceneTransitionContext : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding, NSCopying, NSMutableCopying>
 @property  FBSceneUpdateContext *updateContext
 @property  FBWatchdogTransitionContext *watchdogTransitionContext
 @property  BSAnimationSettings *animationSettings
 @property  BKSAnimationFenceHandle *animationFence
 @property  NSSet *actions
 @property  BSProcessHandle *originatingProcess
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneTransitionContext transitionContext]

  // instance methods
  -[FBSSceneTransitionContext dealloc]
  -[FBSSceneTransitionContext isEqual:]
  -[FBSSceneTransitionContext copyWithZone:]
  -[FBSSceneTransitionContext mutableCopyWithZone:]
  -[FBSSceneTransitionContext .cxx_destruct]
  -[FBSSceneTransitionContext _isEmpty]
  -[FBSSceneTransitionContext succinctDescription]
  -[FBSSceneTransitionContext descriptionWithMultilinePrefix:]
  -[FBSSceneTransitionContext succinctDescriptionBuilder]
  -[FBSSceneTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneTransitionContext encodeWithXPCDictionary:]
  -[FBSSceneTransitionContext initWithXPCDictionary:]
  -[FBSSceneTransitionContext keyDescriptionForSetting:]
  -[FBSSceneTransitionContext valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneTransitionContext actions]
  -[FBSSceneTransitionContext setAnimationFence:]
  -[FBSSceneTransitionContext animationFence]
  -[FBSSceneTransitionContext animationSettings]
  -[FBSSceneTransitionContext setAnimationSettings:]
  -[FBSSceneTransitionContext otherSettings]
  -[FBSSceneTransitionContext setActions:]
  -[FBSSceneTransitionContext setOriginatingProcess:]
  -[FBSSceneTransitionContext originatingProcess]
  -[FBSSceneTransitionContext transientLocalClientSettings]


FBSApplicationInfo : FBSBundleInfo <BSDescriptionProviding>
 @property  NSString *appIDEntitlement
 @property  BOOL installing
 @property  BOOL uninstalling
 @property  BOOL pendingUninstall
 @property  long long interfaceOrientation
 @property  unsigned long supportedInterfaceOrientations
 @property  BOOL enabled
 @property  NSURL *executableURL
 @property  NSURL *bundleContainerURL
 @property  NSURL *dataContainerURL
 @property  NSURL *sandboxURL
 @property  double lastModifiedDate
 @property  NSString *preferenceDomain
 @property  NSString *teamIdentifier
 @property  NSString *signerIdentity
 @property  NSDictionary *environmentVariables
 @property  NSDictionary *entitlements
 @property  BOOL hasViewServicesEntitlement
 @property  BOOL provisioningProfileValidated
 @property  NSArray *tags
 @property  NSArray *customMachServices
 @property  BOOL supportsMultiwindow
 @property  unsigned long type
 @property  BOOL restricted
 @property  BOOL blocked
 @property  NSArray *requiredCapabilities
 @property  NSArray *deviceFamilies
 @property  NSString *sdkVersion
 @property  BOOL beta
 @property  BOOL exitsOnSuspend
 @property  BOOL requiresPersistentWiFi
 @property  float minimumBrightnessLevel
 @property  NSArray *externalAccessoryProtocols
 @property  BOOL blockedForScreenTimeExpiration
 @property  long long ratingRank
 @property  NSNumber *itemID
 @property  NSNumber *purchaserDSID
 @property  NSNumber *downloaderDSID
 @property  NSArray *folderNames
 @property  NSString *fallbackFolderName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSApplicationInfo _applicationTypeForProxy:]
  +[FBSApplicationInfo _configureEnvironment:withInfo:isPreApex:]

  // instance methods
  -[FBSApplicationInfo type]
  -[FBSApplicationInfo .cxx_destruct]
  -[FBSApplicationInfo executableURL]
  -[FBSApplicationInfo environmentVariables]
  -[FBSApplicationInfo tags]
  -[FBSApplicationInfo isEnabled]
  -[FBSApplicationInfo isRestricted]
  -[FBSApplicationInfo isBlocked]
  -[FBSApplicationInfo ratingRank]
  -[FBSApplicationInfo itemID]
  -[FBSApplicationInfo externalAccessoryProtocols]
  -[FBSApplicationInfo supportsMultiwindow]
  -[FBSApplicationInfo purchaserDSID]
  -[FBSApplicationInfo downloaderDSID]
  -[FBSApplicationInfo dataContainerURL]
  -[FBSApplicationInfo entitlements]
  -[FBSApplicationInfo bundleContainerURL]
  -[FBSApplicationInfo sdkVersion]
  -[FBSApplicationInfo signerIdentity]
  -[FBSApplicationInfo succinctDescriptionBuilder]
  -[FBSApplicationInfo descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationInfo interfaceOrientation]
  -[FBSApplicationInfo supportedInterfaceOrientations]
  -[FBSApplicationInfo setSupportedInterfaceOrientations:]
  -[FBSApplicationInfo setInterfaceOrientation:]
  -[FBSApplicationInfo _loadFromProxy:]
  -[FBSApplicationInfo initWithApplicationProxy:]
  -[FBSApplicationInfo _synchronize:]
  -[FBSApplicationInfo supportsDeviceFamily:]
  -[FBSApplicationInfo folderNames]
  -[FBSApplicationInfo fallbackFolderName]
  -[FBSApplicationInfo isExitsOnSuspend]
  -[FBSApplicationInfo _initWithApplicationProxy:]
  -[FBSApplicationInfo _initWithApplicationProxy:overrideURL:]
  -[FBSApplicationInfo _initWithBundleProxy:overrideURL:]
  -[FBSApplicationInfo builtOnOrAfterSDKVersion:]
  -[FBSApplicationInfo customMachServices]
  -[FBSApplicationInfo _initWithBundleIdentifier:url:]
  -[FBSApplicationInfo supportsBackgroundMode:]
  -[FBSApplicationInfo supportsInterfaceOrientation:]
  -[FBSApplicationInfo supportsAllInterfaceOrientations]
  -[FBSApplicationInfo _overrideTags:]
  -[FBSApplicationInfo sandboxURL]
  -[FBSApplicationInfo lastModifiedDate]
  -[FBSApplicationInfo preferenceDomain]
  -[FBSApplicationInfo teamIdentifier]
  -[FBSApplicationInfo hasViewServicesEntitlement]
  -[FBSApplicationInfo isProvisioningProfileValidated]
  -[FBSApplicationInfo requiredCapabilities]
  -[FBSApplicationInfo deviceFamilies]
  -[FBSApplicationInfo isBeta]
  -[FBSApplicationInfo requiresPersistentWiFi]
  -[FBSApplicationInfo minimumBrightnessLevel]
  -[FBSApplicationInfo _appIDEntitlement]
  -[FBSApplicationInfo _isInstalling]
  -[FBSApplicationInfo _setInstalling:]
  -[FBSApplicationInfo _isUninstalling]
  -[FBSApplicationInfo _setUninstalling:]
  -[FBSApplicationInfo _isPendingUninstall]
  -[FBSApplicationInfo _setPendingUninstall:]
  -[FBSApplicationInfo isBlockedForScreenTimeExpiration]


FBSUIApplicationWorkspaceShim : NSObject /usr/lib/libSystem.B.dylib <FBSWorkspaceDelegate_Exiting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSUIApplicationWorkspaceShim delegate]
  -[FBSUIApplicationWorkspaceShim setDelegate:]
  -[FBSUIApplicationWorkspaceShim .cxx_destruct]
  -[FBSUIApplicationWorkspaceShim workspace:didReceiveActions:]
  -[FBSUIApplicationWorkspaceShim sceneWithIdentifier:]
  -[FBSUIApplicationWorkspaceShim scenes]
  -[FBSUIApplicationWorkspaceShim workspace:didCreateScene:withTransitionContext:completion:]
  -[FBSUIApplicationWorkspaceShim workspace:willDestroyScene:withTransitionContext:completion:]
  -[FBSUIApplicationWorkspaceShim trackSystemAnimationFence:]
  -[FBSUIApplicationWorkspaceShim requestSystemAnimationFence]
  -[FBSUIApplicationWorkspaceShim synchronizeSystemAnimationFencesWithCleanUpBlock:]
  -[FBSUIApplicationWorkspaceShim isTrackingAnySystemAnimationFence]
  -[FBSUIApplicationWorkspaceShim requestSceneCreationWithIdentifier:initialClientSettings:completion:]
  -[FBSUIApplicationWorkspaceShim workspaceShouldExit:withTransitionContext:]
  -[FBSUIApplicationWorkspaceShim requestSceneFromEndpoint:withOptions:completion:]
  -[FBSUIApplicationWorkspaceShim defaultShellEndpoint]
  -[FBSUIApplicationWorkspaceShim enumerateScenesWithBlock:]
  -[FBSUIApplicationWorkspaceShim requestSceneCreationWithInitialClientSettings:completion:]
  -[FBSUIApplicationWorkspaceShim _initWithSerialQueue:original:]


FBSUIApplicationWorkspace : FBSWorkspace
 @property  <FBSUIApplicationWorkspaceDelegate> *delegate

  // instance methods
  -[FBSUIApplicationWorkspace delegate]
  -[FBSUIApplicationWorkspace setDelegate:]
  -[FBSUIApplicationWorkspace initWithSerialQueue:]


FBSWorkspaceSceneRequestOptions : NSObject /usr/lib/libSystem.B.dylib <BSXPCSecureCoding>
 @property  NSString *identifier
 @property  FBSSceneClientSettings *initialClientSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSWorkspaceSceneRequestOptions supportsBSXPCSecureCoding]

  // instance methods
  -[FBSWorkspaceSceneRequestOptions .cxx_destruct]
  -[FBSWorkspaceSceneRequestOptions identifier]
  -[FBSWorkspaceSceneRequestOptions setIdentifier:]
  -[FBSWorkspaceSceneRequestOptions encodeWithBSXPCCoder:]
  -[FBSWorkspaceSceneRequestOptions initWithBSXPCCoder:]
  -[FBSWorkspaceSceneRequestOptions initialClientSettings]
  -[FBSWorkspaceSceneRequestOptions setInitialClientSettings:]


FBSScene : NSObject /usr/lib/libSystem.B.dylib <FBSSceneUpdaterDelegate, BSDescriptionProviding>
 @property  NSString *identifier
 @property  FBSSceneIdentityToken *identityToken
 @property  FBSSceneSpecification *specification
 @property  <FBSSceneDelegate> *delegate
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSScene init]
  -[FBSScene delegate]
  -[FBSScene setDelegate:]
  -[FBSScene _init]
  -[FBSScene identifier]
  -[FBSScene layers]
  -[FBSScene settings]
  -[FBSScene succinctDescription]
  -[FBSScene descriptionWithMultilinePrefix:]
  -[FBSScene succinctDescriptionBuilder]
  -[FBSScene descriptionBuilderWithMultilinePrefix:]
  -[FBSScene identityToken]
  -[FBSScene specification]
  -[FBSScene clientSettings]
  -[FBSScene detachContext:]
  -[FBSScene attachContext:]
  -[FBSScene attachLayer:]
  -[FBSScene detachLayer:]
  -[FBSScene updateClientSettingsWithBlock:]
  -[FBSScene updateClientSettingsWithTransitionBlock:]
  -[FBSScene fbsDisplay]
  -[FBSScene sendActions:]
  -[FBSScene invalidateSnapshotWithContext:]
  -[FBSScene performSnapshotWithContext:]
  -[FBSScene display]
  -[FBSScene contexts]
  -[FBSScene initWithCallOutQueue:identifier:parameters:]
  -[FBSScene updater:didUpdateSettings:withDiff:transitionContext:completion:]
  -[FBSScene updater:didReceiveActions:]
  -[FBSScene updater:didReceiveMessage:withResponse:]
  -[FBSScene initWithQueue:identifier:display:settings:clientSettings:]
  -[FBSScene updateClientSettings:withTransitionContext:]
  -[FBSScene attachSceneContext:]
  -[FBSScene detachSceneContext:]
  -[FBSScene snapshotRequest]
  -[FBSScene _hasAgent]
  -[FBSScene _callOutQueue_agent_didCreateWithTransitionContext:completion:]
  -[FBSScene _callOutQueue_agent_willDestroyWithTransitionContext:completion:]


FBSApplicationDataStoreClientFactory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *prefetchedKeys

  // class methods
  +[FBSApplicationDataStoreClientFactory sharedInstance]
  +[FBSApplicationDataStoreClientFactory isServerProcess]

  // instance methods
  -[FBSApplicationDataStoreClientFactory init]
  -[FBSApplicationDataStoreClientFactory .cxx_destruct]
  -[FBSApplicationDataStoreClientFactory checkout]
  -[FBSApplicationDataStoreClientFactory checkin]
  -[FBSApplicationDataStoreClientFactory prefetchedKeys]
  -[FBSApplicationDataStoreClientFactory setPrefetchedKeys:]


FBSSystemServiceSpecification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSSystemServiceSpecification identifier]


FBSApplicationDataStoreRepositoryClient : FBSServiceFacilityClient <FBSApplicationDataStoreRepositoryClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationDataStoreRepositoryClient init]
  -[FBSApplicationDataStoreRepositoryClient invalidate]
  -[FBSApplicationDataStoreRepositoryClient .cxx_destruct]
  -[FBSApplicationDataStoreRepositoryClient _observers]
  -[FBSApplicationDataStoreRepositoryClient addObserver:]
  -[FBSApplicationDataStoreRepositoryClient removeObserver:]
  -[FBSApplicationDataStoreRepositoryClient handleMessage:withType:]
  -[FBSApplicationDataStoreRepositoryClient addPrefetchedKeys:]
  -[FBSApplicationDataStoreRepositoryClient _sendPrefetchedKeys:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient fireCompletion:error:]
  -[FBSApplicationDataStoreRepositoryClient _sendMessageType:withMessage:withReplyHandler:waitForReply:]
  -[FBSApplicationDataStoreRepositoryClient prefetchedObjectIfAvailableForKey:application:outObject:]
  -[FBSApplicationDataStoreRepositoryClient _setPrefetchedObjectIfNecessary:forKey:application:]
  -[FBSApplicationDataStoreRepositoryClient removeObjectForKey:forApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient _setChangeInFlight:forPrefetchedKey:application:]
  -[FBSApplicationDataStoreRepositoryClient _handleValueChanged:]
  -[FBSApplicationDataStoreRepositoryClient _handleStoreInvalidated:]
  -[FBSApplicationDataStoreRepositoryClient _isChangeInFlightForPrefetchedKey:application:]
  -[FBSApplicationDataStoreRepositoryClient clientCallbackQueue]
  -[FBSApplicationDataStoreRepositoryClient removePrefetchedKeys:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient synchronizeWithCompletion:]
  -[FBSApplicationDataStoreRepositoryClient availableDataStores]
  -[FBSApplicationDataStoreRepositoryClient objectForKey:forApplication:]
  -[FBSApplicationDataStoreRepositoryClient setObject:forKey:forApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient removeAllObjectsForApplication:withCompletion:]
  -[FBSApplicationDataStoreRepositoryClient _allPrefetchedChangesInFlightForApplication:]
  -[FBSApplicationDataStoreRepositoryClient fireCompletion:result:error:]


FBSSceneSettingsDiff : FBSSettingsDiff
  // class methods
  +[FBSSceneSettingsDiff diffFromSettings:toSettings:]

  // instance methods
  -[FBSSceneSettingsDiff keyDescriptionForSetting:]
  -[FBSSceneSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSettingsDiff evaluateWithInspector:context:]
  -[FBSSceneSettingsDiff settingsByApplyingToMutableCopyOfSettings:]


FBSSceneImpl : FBSScene <FBSSceneSnapshotRequestDelegate, FBSSceneHandle, FBSSceneAgentProxy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneImpl delegate]
  -[FBSSceneImpl setDelegate:]
  -[FBSSceneImpl .cxx_destruct]
  -[FBSSceneImpl identifier]
  -[FBSSceneImpl parameters]
  -[FBSSceneImpl layers]
  -[FBSSceneImpl settings]
  -[FBSSceneImpl succinctDescription]
  -[FBSSceneImpl descriptionWithMultilinePrefix:]
  -[FBSSceneImpl succinctDescriptionBuilder]
  -[FBSSceneImpl descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneImpl hostProcess]
  -[FBSSceneImpl identityToken]
  -[FBSSceneImpl specification]
  -[FBSSceneImpl clientSettings]
  -[FBSSceneImpl detachContext:]
  -[FBSSceneImpl attachContext:]
  -[FBSSceneImpl attachLayer:]
  -[FBSSceneImpl detachLayer:]
  -[FBSSceneImpl updateClientSettingsWithBlock:]
  -[FBSSceneImpl updateClientSettingsWithTransitionBlock:]
  -[FBSSceneImpl clientProcess]
  -[FBSSceneImpl sendActions:]
  -[FBSSceneImpl invalidateSnapshotWithContext:]
  -[FBSSceneImpl performSnapshotWithContext:]
  -[FBSSceneImpl snapshotRequestAllowSnapshot:]
  -[FBSSceneImpl snapshotRequest:performWithContext:]
  -[FBSSceneImpl initWithCallOutQueue:identifier:parameters:]
  -[FBSSceneImpl updater:didUpdateSettings:withDiff:transitionContext:completion:]
  -[FBSSceneImpl updater:didReceiveActions:]
  -[FBSSceneImpl updater:didReceiveMessage:withResponse:]
  -[FBSSceneImpl initWithQueue:identifier:display:settings:clientSettings:]
  -[FBSSceneImpl updateClientSettings:withTransitionContext:]
  -[FBSSceneImpl attachSceneContext:]
  -[FBSSceneImpl detachSceneContext:]
  -[FBSSceneImpl snapshotRequest]
  -[FBSSceneImpl _hasAgent]
  -[FBSSceneImpl _callOutQueue_agent_didCreateWithTransitionContext:completion:]
  -[FBSSceneImpl _callOutQueue_agent_willDestroyWithTransitionContext:completion:]
  -[FBSSceneImpl _initWithCallOutQueue:identifier:specification:settings:clientSettings:]
  -[FBSSceneImpl callOutQueue]
  -[FBSSceneImpl _callOutQueue_invalidateAgent]
  -[FBSSceneImpl _calloutQueue_comsumeLock_updateClientSettings:withTransitionContext:]
  -[FBSSceneImpl _configureReceivedActions:]
  -[FBSSceneImpl counterpartAgent]
  -[FBSSceneImpl openSessionWithName:executionPolicy:]
  -[FBSSceneImpl sessionForIdentifier:]
  -[FBSSceneImpl closeSession:]
  -[FBSSceneImpl agent:registerMessageHandler:]
  -[FBSSceneImpl agent:sendMessage:withResponse:]
  -[FBSSceneImpl _initWithUpdater:identifier:specification:settings:clientSettings:]
  -[FBSSceneImpl _callOutQueue_invalidate]


FBSOrientationUpdate : NSObject /usr/lib/libSystem.B.dylib
 @property  long long orientation
 @property  unsigned long sequenceNumber
 @property  double duration
 @property  long long rotationDirection

  // instance methods
  -[FBSOrientationUpdate init]
  -[FBSOrientationUpdate orientation]
  -[FBSOrientationUpdate duration]
  -[FBSOrientationUpdate setSequenceNumber:]
  -[FBSOrientationUpdate sequenceNumber]
  -[FBSOrientationUpdate setOrientation:]
  -[FBSOrientationUpdate setDuration:]
  -[FBSOrientationUpdate initWithOrientation:sequenceNumber:duration:rotationDirection:]
  -[FBSOrientationUpdate rotationDirection]
  -[FBSOrientationUpdate setRotationDirection:]


FBSOrientationObserver : NSObject /usr/lib/libSystem.B.dylib <FBSOrientationObserverClientDelegate, BSInvalidatable>
 @property  @? handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSOrientationObserver init]
  -[FBSOrientationObserver dealloc]
  -[FBSOrientationObserver invalidate]
  -[FBSOrientationObserver handler]
  -[FBSOrientationObserver .cxx_destruct]
  -[FBSOrientationObserver setHandler:]
  -[FBSOrientationObserver activeInterfaceOrientation]
  -[FBSOrientationObserver _getAndSetFreshestUpdateGivenUpdate:]
  -[FBSOrientationObserver activeInterfaceOrientationWithCompletion:]
  -[FBSOrientationObserver client:handleOrientationUpdate:]
  -[FBSOrientationObserver handleOrientationResetForClient:]


FBSDisplayLayoutElement : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSXPCCoding, BSSettingDescriptionProvider, BSDescriptionProviding, FBSDisplayLayoutElement>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  NSString *identifier
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} referenceFrame
 @property  long long level
 @property  BOOL fillsDisplayBounds
 @property  BOOL UIApplicationElement
 @property  NSString *bundleIdentifier
 @property  BOOL hasKeyboardFocus
 @property  BSMutableSettings *otherSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayoutElement init]
  -[FBSDisplayLayoutElement isEqual:]
  -[FBSDisplayLayoutElement copyWithZone:]
  -[FBSDisplayLayoutElement .cxx_destruct]
  -[FBSDisplayLayoutElement identifier]
  -[FBSDisplayLayoutElement bundleIdentifier]
  -[FBSDisplayLayoutElement level]
  -[FBSDisplayLayoutElement setIdentifier:]
  -[FBSDisplayLayoutElement initWithIdentifier:]
  -[FBSDisplayLayoutElement isUIApplicationElement]
  -[FBSDisplayLayoutElement setBundleIdentifier:]
  -[FBSDisplayLayoutElement frame]
  -[FBSDisplayLayoutElement succinctDescription]
  -[FBSDisplayLayoutElement descriptionWithMultilinePrefix:]
  -[FBSDisplayLayoutElement succinctDescriptionBuilder]
  -[FBSDisplayLayoutElement descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayoutElement encodeWithXPCDictionary:]
  -[FBSDisplayLayoutElement fallbackXPCEncodableClass]
  -[FBSDisplayLayoutElement initWithXPCDictionary:]
  -[FBSDisplayLayoutElement keyDescriptionForSetting:]
  -[FBSDisplayLayoutElement valueDescriptionForFlag:object:ofSetting:]
  -[FBSDisplayLayoutElement referenceFrame]
  -[FBSDisplayLayoutElement setReferenceFrame:]
  -[FBSDisplayLayoutElement setFrame:]
  -[FBSDisplayLayoutElement setLevel:]
  -[FBSDisplayLayoutElement otherSettings]
  -[FBSDisplayLayoutElement hasKeyboardFocus]
  -[FBSDisplayLayoutElement fillsDisplayBounds]
  -[FBSDisplayLayoutElement setFillsDisplayBounds:]
  -[FBSDisplayLayoutElement setUIApplicationElement:]
  -[FBSDisplayLayoutElement setHasKeyboardFocus:]
  -[FBSDisplayLayoutElement setOtherSettings:]


FBSServiceFacility : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BSInvalidatable>
 @property  NSSet *_prerequisiteMilestones
 @property  NSString *identifier
 @property  FBSSerialQueue *queue
 @property  NSSet *clients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSServiceFacility init]
  -[FBSServiceFacility dealloc]
  -[FBSServiceFacility invalidate]
  -[FBSServiceFacility queue]
  -[FBSServiceFacility .cxx_destruct]
  -[FBSServiceFacility identifier]
  -[FBSServiceFacility succinctDescription]
  -[FBSServiceFacility descriptionWithMultilinePrefix:]
  -[FBSServiceFacility succinctDescriptionBuilder]
  -[FBSServiceFacility descriptionBuilderWithMultilinePrefix:]
  -[FBSServiceFacility initWithIdentifier:queue:]
  -[FBSServiceFacility shouldAllowClientConnection:withMessage:]
  -[FBSServiceFacility noteClientDidConnect:withMessage:]
  -[FBSServiceFacility noteClientDidDisconnect:]
  -[FBSServiceFacility noteDidReceiveMessage:withType:fromClient:]
  -[FBSServiceFacility _prerequisiteMilestones]
  -[FBSServiceFacility clients]
  -[FBSServiceFacility queue_clientDidConnect:withMessage:]
  -[FBSServiceFacility queue_clientDidDisconnect:]
  -[FBSServiceFacility queue_handleMessage:withType:fromClient:]
  -[FBSServiceFacility sendMessage:withType:toClients:]


FBSSceneDefinition : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  FBSSceneIdentity *identity
 @property  FBSSceneClientIdentity *clientIdentity
 @property  FBSSceneSpecification *specification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneDefinition definition]

  // instance methods
  -[FBSSceneDefinition isEqual:]
  -[FBSSceneDefinition copyWithZone:]
  -[FBSSceneDefinition mutableCopyWithZone:]
  -[FBSSceneDefinition isValid]
  -[FBSSceneDefinition .cxx_destruct]
  -[FBSSceneDefinition identity]
  -[FBSSceneDefinition setIdentity:]
  -[FBSSceneDefinition succinctDescription]
  -[FBSSceneDefinition descriptionWithMultilinePrefix:]
  -[FBSSceneDefinition succinctDescriptionBuilder]
  -[FBSSceneDefinition descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneDefinition specification]
  -[FBSSceneDefinition setClientIdentity:]
  -[FBSSceneDefinition setSpecification:]
  -[FBSSceneDefinition clientIdentity]


FBSMutableSceneDefinition : FBSSceneDefinition
 @property  FBSSceneIdentity *identity
 @property  FBSSceneClientIdentity *clientIdentity
 @property  FBSSceneSpecification *specification

  // instance methods
  -[FBSMutableSceneDefinition copyWithZone:]


FBSApplicationPlaceholder : FBSBundleInfo
 @property  LSApplicationProxy *proxy
 @property  FBSApplicationLibrary *appLibrary
 @property  <FBSApplicationPlaceholderProgress> *progress
 @property  BOOL prioritizable
 @property  BOOL pausable
 @property  BOOL resumable
 @property  BOOL cancellable

  // class methods
  +[FBSApplicationPlaceholder _callOutQueue]
  +[FBSApplicationPlaceholder _sharedQueue]

  // instance methods
  -[FBSApplicationPlaceholder dealloc]
  -[FBSApplicationPlaceholder .cxx_destruct]
  -[FBSApplicationPlaceholder cancel]
  -[FBSApplicationPlaceholder pause]
  -[FBSApplicationPlaceholder resume]
  -[FBSApplicationPlaceholder prioritize]
  -[FBSApplicationPlaceholder addObserver:]
  -[FBSApplicationPlaceholder removeObserver:]
  -[FBSApplicationPlaceholder progress]
  -[FBSApplicationPlaceholder _proxy]
  -[FBSApplicationPlaceholder isCancellable]
  -[FBSApplicationPlaceholder isPausable]
  -[FBSApplicationPlaceholder isPrioritizable]
  -[FBSApplicationPlaceholder isRestricted]
  -[FBSApplicationPlaceholder installType]
  -[FBSApplicationPlaceholder installState]
  -[FBSApplicationPlaceholder installPhase]
  -[FBSApplicationPlaceholder succinctDescriptionBuilder]
  -[FBSApplicationPlaceholder descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationPlaceholder percentComplete]
  -[FBSApplicationPlaceholder _initWithApplicationProxy:]
  -[FBSApplicationPlaceholder _initWithBundleIdentifier:url:]
  -[FBSApplicationPlaceholder _setProxy:force:]
  -[FBSApplicationPlaceholder _canPerformAction:]
  -[FBSApplicationPlaceholder _performAction:withResult:]
  -[FBSApplicationPlaceholder _dispatchToObserversWithBlock:]
  -[FBSApplicationPlaceholder _queue_isCloudDemoted]
  -[FBSApplicationPlaceholder _queue_supportedActions]
  -[FBSApplicationPlaceholder _queue_canPerformAction:]
  -[FBSApplicationPlaceholder _pauseWithResult:]
  -[FBSApplicationPlaceholder _resumeWithResult:]
  -[FBSApplicationPlaceholder _cancelWithResult:]
  -[FBSApplicationPlaceholder appLibrary]
  -[FBSApplicationPlaceholder _prioritizeWithResult:]
  -[FBSApplicationPlaceholder _queue_setProxy:force:]
  -[FBSApplicationPlaceholder _reloadFromProxy:]
  -[FBSApplicationPlaceholder _queue_noteChangedSignificantly:]
  -[FBSApplicationPlaceholder _sendToObserversPlaceholderProgressDidUpdate]
  -[FBSApplicationPlaceholder _sendToObserversPlaceholderDidChangeSignificantly]
  -[FBSApplicationPlaceholder _initWithBundleProxy:url:]
  -[FBSApplicationPlaceholder isResumable]
  -[FBSApplicationPlaceholder prioritizeWithResult:]
  -[FBSApplicationPlaceholder pauseWithResult:]
  -[FBSApplicationPlaceholder resumeWithResult:]
  -[FBSApplicationPlaceholder cancelWithResult:]
  -[FBSApplicationPlaceholder _setProxy:]
  -[FBSApplicationPlaceholder _reloadProgress]
  -[FBSApplicationPlaceholder _noteChangedSignificantly]
  -[FBSApplicationPlaceholder setAppLibrary:]


FBSWorkspace : NSObject /usr/lib/libSystem.B.dylib <BSServiceConnectionEndpointMonitorDelegate, BSDescriptionProviding>
 @property  <FBSWorkspaceDelegate> *delegate
 @property  BSServiceConnectionEndpoint *defaultShellEndpoint
 @property  NSArray *scenes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSWorkspace _sharedWorkspaceIfExists]
  +[FBSWorkspace _registerBlockForWorkspaceCreation:]

  // instance methods
  -[FBSWorkspace init]
  -[FBSWorkspace dealloc]
  -[FBSWorkspace _activate]
  -[FBSWorkspace delegate]
  -[FBSWorkspace setDelegate:]
  -[FBSWorkspace .cxx_destruct]
  -[FBSWorkspace initWithQueue:]
  -[FBSWorkspace succinctDescription]
  -[FBSWorkspace descriptionWithMultilinePrefix:]
  -[FBSWorkspace succinctDescriptionBuilder]
  -[FBSWorkspace descriptionBuilderWithMultilinePrefix:]
  -[FBSWorkspace sceneWithIdentifier:]
  -[FBSWorkspace scenes]
  -[FBSWorkspace trackSystemAnimationFence:]
  -[FBSWorkspace requestSystemAnimationFence]
  -[FBSWorkspace synchronizeSystemAnimationFencesWithCleanUpBlock:]
  -[FBSWorkspace isTrackingAnySystemAnimationFence]
  -[FBSWorkspace requestSceneCreationWithIdentifier:initialClientSettings:completion:]
  -[FBSWorkspace requestSceneFromEndpoint:withOptions:completion:]
  -[FBSWorkspace initWithSerialQueue:]
  -[FBSWorkspace monitor:willLoseEndpoint:]
  -[FBSWorkspace monitor:didReceiveEndpoint:]
  -[FBSWorkspace defaultShellEndpoint]
  -[FBSWorkspace enumerateScenesWithBlock:]
  -[FBSWorkspace requestSceneCreationWithInitialClientSettings:completion:]
  -[FBSWorkspace _initWithOptions:]
  -[FBSWorkspace _queue_scenesClientForEndpoint:creatingIfNecessary:]
  -[FBSWorkspace _queue_registerSource:]
  -[FBSWorkspace _queue_unregisterSource:]
  -[FBSWorkspace _initWithSerialQueue:]
  -[FBSWorkspace requestDestructionOfScene:withCompletion:]
  -[FBSWorkspace _registerSource:]
  -[FBSWorkspace _unregisterSource:]
  -[FBSWorkspace _calloutQueue_executeCalloutFromSource:withBlock:]


FBSProcessWatchdog : NSObject /usr/lib/libSystem.B.dylib <FBSProcessExecutionProvisionDelegate, BSDescriptionProviding>
 @property  NSString *name
 @property  <FBSProcess> *process
 @property  FBSProcessWatchdogPolicy *policy
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessWatchdog dealloc]
  -[FBSProcessWatchdog name]
  -[FBSProcessWatchdog invalidate]
  -[FBSProcessWatchdog .cxx_destruct]
  -[FBSProcessWatchdog policy]
  -[FBSProcessWatchdog setCompletion:]
  -[FBSProcessWatchdog completion]
  -[FBSProcessWatchdog process]
  -[FBSProcessWatchdog succinctDescription]
  -[FBSProcessWatchdog descriptionWithMultilinePrefix:]
  -[FBSProcessWatchdog succinctDescriptionBuilder]
  -[FBSProcessWatchdog descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessWatchdog activate]
  -[FBSProcessWatchdog deactivate]
  -[FBSProcessWatchdog _beginMonitoringConstraints]
  -[FBSProcessWatchdog _stopMonitoringConstraints]
  -[FBSProcessWatchdog provision:wasViolatedWithError:]
  -[FBSProcessWatchdog initWithName:process:policy:]


FBSCAContextSceneLayer : FBSSceneLayer
 @property  CAContext *CAContext
 @property  unsigned int contextID

  // class methods
  +[FBSCAContextSceneLayer layerWithCAContext:]

  // instance methods
  -[FBSCAContextSceneLayer isEqual:]
  -[FBSCAContextSceneLayer contextID]
  -[FBSCAContextSceneLayer encodeWithXPCDictionary:]
  -[FBSCAContextSceneLayer initWithXPCDictionary:]
  -[FBSCAContextSceneLayer initWithCAContext:]
  -[FBSCAContextSceneLayer CAContext]
  -[FBSCAContextSceneLayer _initWithCAContext:contextID:fallbackLevel:]
  -[FBSCAContextSceneLayer initWithCAContextID:level:]
  -[FBSCAContextSceneLayer _succinctDescription]
  -[FBSCAContextSceneLayer isCAContextLayer]


FBSExtensionInfo : FBSBundleInfo
 @property  NSString *typeIdentifier
 @property  NSString *extensionIdentifier

  // instance methods
  -[FBSExtensionInfo .cxx_destruct]
  -[FBSExtensionInfo typeIdentifier]
  -[FBSExtensionInfo extensionIdentifier]
  -[FBSExtensionInfo _initWithBundleIdentifier:url:]
  -[FBSExtensionInfo _initWithBundleProxy:url:]
  -[FBSExtensionInfo _initWithPlugInKitProxy:]


FBSLazyApplicationInfoProvider : NSObject /usr/lib/libSystem.B.dylib <FBSApplicationInfoProvider>
 @property  Class applicationInfoSubclass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSLazyApplicationInfoProvider init]
  -[FBSLazyApplicationInfoProvider applicationInfoForBundleIdentifier:]
  -[FBSLazyApplicationInfoProvider applicationInfoSubclass]
  -[FBSLazyApplicationInfoProvider setApplicationInfoSubclass:]


FBSOpenApplicationOptions : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSXPCSecureCoding, NSCopying>
 @property  NSDictionary *dictionary
 @property  NSURL *url
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSOpenApplicationOptions optionsWithDictionary:]
  +[FBSOpenApplicationOptions supportsBSXPCSecureCoding]

  // instance methods
  -[FBSOpenApplicationOptions copyWithZone:]
  -[FBSOpenApplicationOptions .cxx_destruct]
  -[FBSOpenApplicationOptions dictionary]
  -[FBSOpenApplicationOptions setDictionary:]
  -[FBSOpenApplicationOptions url]
  -[FBSOpenApplicationOptions succinctDescription]
  -[FBSOpenApplicationOptions descriptionWithMultilinePrefix:]
  -[FBSOpenApplicationOptions succinctDescriptionBuilder]
  -[FBSOpenApplicationOptions descriptionBuilderWithMultilinePrefix:]
  -[FBSOpenApplicationOptions encodeWithBSXPCCoder:]
  -[FBSOpenApplicationOptions initWithBSXPCCoder:]
  -[FBSOpenApplicationOptions encodeWithXPCDictionary:]
  -[FBSOpenApplicationOptions initWithXPCDictionary:]
  -[FBSOpenApplicationOptions _sanitizeAndValidatePayload]


FBSSceneSettings : NSObject /usr/lib/libSystem.B.dylib <BSDebugDescriptionProviding, NSCopying, NSMutableCopying>
 @property  FBSDisplayIdentity *displayIdentity
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double level
 @property  long long interfaceOrientation
 @property  BOOL foreground
 @property  BOOL backgrounded
 @property  NSArray *occlusions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSettings settings]
  +[FBSSceneSettings _isMutable]

  // instance methods
  -[FBSSceneSettings init]
  -[FBSSceneSettings dealloc]
  -[FBSSceneSettings isEqual:]
  -[FBSSceneSettings copyWithZone:]
  -[FBSSceneSettings mutableCopyWithZone:]
  -[FBSSceneSettings .cxx_destruct]
  -[FBSSceneSettings level]
  -[FBSSceneSettings initWithSettings:]
  -[FBSSceneSettings bounds]
  -[FBSSceneSettings frame]
  -[FBSSceneSettings succinctDescription]
  -[FBSSceneSettings descriptionWithMultilinePrefix:]
  -[FBSSceneSettings succinctDescriptionBuilder]
  -[FBSSceneSettings descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSettings debugDescriptionWithMultilinePrefix:]
  -[FBSSceneSettings keyDescriptionForSetting:]
  -[FBSSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneSettings interfaceOrientation]
  -[FBSSceneSettings displayIdentity]
  -[FBSSceneSettings isForeground]
  -[FBSSceneSettings displayConfiguration]
  -[FBSSceneSettings isOccluded]
  -[FBSSceneSettings otherSettings]
  -[FBSSceneSettings occlusions]
  -[FBSSceneSettings transientLocalSettings]
  -[FBSSceneSettings ignoreOcclusionReasons]
  -[FBSSceneSettings _descriptionBuilderWithMultilinePrefix:debug:]
  -[FBSSceneSettings isBackgrounded]
  -[FBSSceneSettings isIgnoringOcclusions]
  -[FBSSceneSettings prefersProcessTaskSuspensionWhileSceneForeground]
  -[FBSSceneSettings setPrefersProcessTaskSuspensionWhileSceneForeground:]


FBSMutableSceneSettings : FBSSceneSettings
 @property  NSArray *occlusions
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double level
 @property  long long interfaceOrientation
 @property  BOOL foreground
 @property  BOOL backgrounded

  // class methods
  +[FBSMutableSceneSettings _isMutable]

  // instance methods
  -[FBSMutableSceneSettings copyWithZone:]
  -[FBSMutableSceneSettings mutableCopyWithZone:]
  -[FBSMutableSceneSettings setFrame:]
  -[FBSMutableSceneSettings setLevel:]
  -[FBSMutableSceneSettings setForeground:]
  -[FBSMutableSceneSettings setInterfaceOrientation:]
  -[FBSMutableSceneSettings setDisplayConfiguration:]
  -[FBSMutableSceneSettings otherSettings]
  -[FBSMutableSceneSettings setOccluded:]
  -[FBSMutableSceneSettings _setDisplayConfiguration:]
  -[FBSMutableSceneSettings setOcclusions:]
  -[FBSMutableSceneSettings transientLocalSettings]
  -[FBSMutableSceneSettings ignoreOcclusionReasons]
  -[FBSMutableSceneSettings setBackgrounded:]


FBSSceneParameters : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings
 @property  FBSSceneSpecification *specification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneParameters parametersForSpecification:]

  // instance methods
  -[FBSSceneParameters init]
  -[FBSSceneParameters isEqual:]
  -[FBSSceneParameters copyWithZone:]
  -[FBSSceneParameters mutableCopyWithZone:]
  -[FBSSceneParameters .cxx_destruct]
  -[FBSSceneParameters settings]
  -[FBSSceneParameters setSettings:]
  -[FBSSceneParameters succinctDescription]
  -[FBSSceneParameters descriptionWithMultilinePrefix:]
  -[FBSSceneParameters succinctDescriptionBuilder]
  -[FBSSceneParameters descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneParameters encodeWithXPCDictionary:]
  -[FBSSceneParameters initWithXPCDictionary:]
  -[FBSSceneParameters specification]
  -[FBSSceneParameters clientSettings]
  -[FBSSceneParameters updateSettingsWithBlock:]
  -[FBSSceneParameters setClientSettings:]
  -[FBSSceneParameters initWithSpecification:]
  -[FBSSceneParameters _configureCopy:]


FBSMutableSceneParameters : FBSSceneParameters
 @property  FBSSceneSpecification *specification
 @property  FBSSceneSettings *settings
 @property  FBSSceneClientSettings *clientSettings

  // instance methods
  -[FBSMutableSceneParameters copyWithZone:]
  -[FBSMutableSceneParameters .cxx_destruct]
  -[FBSMutableSceneParameters setSettings:]
  -[FBSMutableSceneParameters setDisplay:]
  -[FBSMutableSceneParameters updateClientSettingsWithBlock:]
  -[FBSMutableSceneParameters updateSettingsWithBlock:]
  -[FBSMutableSceneParameters _setSpecification:]


FBSSceneActivitySession : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *name
 @property  <FBSSceneHandle> *scene
 @property  FBSProcessExecutionPolicy *executionPolicy
 @property  NSString *identifier
 @property  BOOL open
 @property  BOOL invalidated
 @property  @? errorHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneActivitySession dealloc]
  -[FBSSceneActivitySession name]
  -[FBSSceneActivitySession invalidate]
  -[FBSSceneActivitySession open]
  -[FBSSceneActivitySession close]
  -[FBSSceneActivitySession .cxx_destruct]
  -[FBSSceneActivitySession setName:]
  -[FBSSceneActivitySession identifier]
  -[FBSSceneActivitySession setErrorHandler:]
  -[FBSSceneActivitySession errorHandler]
  -[FBSSceneActivitySession isInvalidated]
  -[FBSSceneActivitySession isOpen]
  -[FBSSceneActivitySession succinctDescription]
  -[FBSSceneActivitySession descriptionWithMultilinePrefix:]
  -[FBSSceneActivitySession succinctDescriptionBuilder]
  -[FBSSceneActivitySession descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneActivitySession scene]
  -[FBSSceneActivitySession setScene:]
  -[FBSSceneActivitySession _isValid]
  -[FBSSceneActivitySession initWithName:scene:executionPolicy:]
  -[FBSSceneActivitySession executionPolicy]
  -[FBSSceneActivitySession setExecutionPolicy:]


FBSProcessHandle : BSProcessHandle
  // class methods
  +[FBSProcessHandle allocWithZone:]


FBSApplicationDataStoreMonitor : NSObject /usr/lib/libSystem.B.dylib <FBSApplicationDataStoreRepositoryClientObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationDataStoreMonitor init]
  -[FBSApplicationDataStoreMonitor dealloc]
  -[FBSApplicationDataStoreMonitor .cxx_destruct]
  -[FBSApplicationDataStoreMonitor addObserver:]
  -[FBSApplicationDataStoreMonitor removeObserver:]
  -[FBSApplicationDataStoreMonitor initWithClient:]
  -[FBSApplicationDataStoreMonitor applicationDataStoreRepositoryClient:application:changedObject:forKey:]
  -[FBSApplicationDataStoreMonitor applicationDataStoreRepositoryClient:storeInvalidatedForApplication:]
  -[FBSApplicationDataStoreMonitor _hasObserver:]


FBSSceneIdentityToken : NSObject /usr/lib/libSystem.B.dylib <BSXPCSecureCoding, BSXPCCoding, NSCopying>
 @property  BSServiceConnectionEndpoint *endpoint
 @property  NSString *identifier
 @property  NSString *stringRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneIdentityToken supportsBSXPCSecureCoding]

  // instance methods
  -[FBSSceneIdentityToken init]
  -[FBSSceneIdentityToken isEqual:]
  -[FBSSceneIdentityToken copyWithZone:]
  -[FBSSceneIdentityToken .cxx_destruct]
  -[FBSSceneIdentityToken identifier]
  -[FBSSceneIdentityToken endpoint]
  -[FBSSceneIdentityToken stringRepresentation]
  -[FBSSceneIdentityToken encodeWithBSXPCCoder:]
  -[FBSSceneIdentityToken initWithBSXPCCoder:]
  -[FBSSceneIdentityToken encodeWithXPCDictionary:]
  -[FBSSceneIdentityToken initWithXPCDictionary:]
  -[FBSSceneIdentityToken initWithIdentifier:endpoint:]


FBSSceneOcclusion : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneOcclusion occlusionWithRect:]
  +[FBSSceneOcclusion fullOcclusion]

  // instance methods
  -[FBSSceneOcclusion init]
  -[FBSSceneOcclusion isEqual:]
  -[FBSSceneOcclusion succinctDescription]
  -[FBSSceneOcclusion descriptionWithMultilinePrefix:]
  -[FBSSceneOcclusion succinctDescriptionBuilder]
  -[FBSSceneOcclusion descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneOcclusion encodeWithXPCDictionary:]
  -[FBSSceneOcclusion initWithXPCDictionary:]
  -[FBSSceneOcclusion CGRect]
  -[FBSSceneOcclusion _initWithCGRect:]
  -[FBSSceneOcclusion isEqualToOcclusion:]


FBSDisplayIdentity : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, NSCopying, NSSecureCoding>
 @property  BOOL secure
 @property  int pid
 @property  FBSDisplayIdentity *rootIdentity
 @property  BOOL isRootIdentity
 @property  BOOL mainDisplay
 @property  BOOL external
 @property  BOOL carDisplay
 @property  BOOL carInstrumentsDisplay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayIdentity supportsSecureCoding]

  // instance methods
  -[FBSDisplayIdentity init]
  -[FBSDisplayIdentity isEqual:]
  -[FBSDisplayIdentity copyWithZone:]
  -[FBSDisplayIdentity type]
  -[FBSDisplayIdentity encodeWithCoder:]
  -[FBSDisplayIdentity initWithCoder:]
  -[FBSDisplayIdentity .cxx_destruct]
  -[FBSDisplayIdentity uniqueIdentifier]
  -[FBSDisplayIdentity pid]
  -[FBSDisplayIdentity encodeWithXPCDictionary:]
  -[FBSDisplayIdentity initWithXPCDictionary:]
  -[FBSDisplayIdentity isSecure]
  -[FBSDisplayIdentity displayID]
  -[FBSDisplayIdentity isCarDisplay]
  -[FBSDisplayIdentity isMainDisplay]
  -[FBSDisplayIdentity rootIdentity]
  -[FBSDisplayIdentity isRootIdentity]
  -[FBSDisplayIdentity isExternal]
  -[FBSDisplayIdentity isCarInstrumentsDisplay]
  -[FBSDisplayIdentity expectsSecureRendering]
  -[FBSDisplayIdentity _initWithType:displayID:connectionSeed:pid:external:uniqueIdentifier:secure:root:]
  -[FBSDisplayIdentity connectionSeed]
  -[FBSDisplayIdentity isMainRootDisplay]
  -[FBSDisplayIdentity isAirPlayDisplay]
  -[FBSDisplayIdentity isRestrictedAirPlayDisplay]
  -[FBSDisplayIdentity isiPodOnlyDisplay]
  -[FBSDisplayIdentity isMusicOnlyDisplay]


FBSDisplayConfiguration : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, BSXPCCoding, NSCopying, NSSecureCoding>
 @property  unsigned int seed
 @property  long long tags
 @property  FBSDisplayIdentity *identity
 @property  BOOL mainDisplay
 @property  BOOL external
 @property  BOOL carDisplay
 @property  BOOL carInstrumentsDisplay
 @property  NSString *hardwareIdentifier
 @property  NSString *name
 @property  NSString *deviceName
 @property  FBSDisplayMode *currentMode
 @property  FBSDisplayMode *preferredMode
 @property  NSSet *availableModes
 @property  BOOL cloningSupported
 @property  BOOL overscanned
 @property  long long overscanCompensation
 @property  {CGSize=dd} safeOverscanRatio
 @property  double nativeOrientation
 @property  {CGSize=dd} pixelSize
 @property  double scale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} renderingCenter
 @property  double refreshRate
 @property  long long colorGamut
 @property  double latency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayConfiguration supportsSecureCoding]

  // instance methods
  -[FBSDisplayConfiguration init]
  -[FBSDisplayConfiguration isEqual:]
  -[FBSDisplayConfiguration name]
  -[FBSDisplayConfiguration copyWithZone:]
  -[FBSDisplayConfiguration type]
  -[FBSDisplayConfiguration encodeWithCoder:]
  -[FBSDisplayConfiguration initWithCoder:]
  -[FBSDisplayConfiguration .cxx_destruct]
  -[FBSDisplayConfiguration currentMode]
  -[FBSDisplayConfiguration scale]
  -[FBSDisplayConfiguration tags]
  -[FBSDisplayConfiguration uniqueIdentifier]
  -[FBSDisplayConfiguration orientation]
  -[FBSDisplayConfiguration uniqueID]
  -[FBSDisplayConfiguration latency]
  -[FBSDisplayConfiguration identity]
  -[FBSDisplayConfiguration bounds]
  -[FBSDisplayConfiguration seed]
  -[FBSDisplayConfiguration deviceName]
  -[FBSDisplayConfiguration succinctDescription]
  -[FBSDisplayConfiguration descriptionWithMultilinePrefix:]
  -[FBSDisplayConfiguration succinctDescriptionBuilder]
  -[FBSDisplayConfiguration descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayConfiguration encodeWithXPCDictionary:]
  -[FBSDisplayConfiguration initWithXPCDictionary:]
  -[FBSDisplayConfiguration displayID]
  -[FBSDisplayConfiguration isCarDisplay]
  -[FBSDisplayConfiguration hardwareIdentifier]
  -[FBSDisplayConfiguration isMainDisplay]
  -[FBSDisplayConfiguration initWithCADisplay:]
  -[FBSDisplayConfiguration availableModes]
  -[FBSDisplayConfiguration pixelSize]
  -[FBSDisplayConfiguration isOverscanned]
  -[FBSDisplayConfiguration overscanCompensation]
  -[FBSDisplayConfiguration isCloningSupported]
  -[FBSDisplayConfiguration colorGamut]
  -[FBSDisplayConfiguration nativeOrientation]
  -[FBSDisplayConfiguration refreshRate]
  -[FBSDisplayConfiguration preferredMode]
  -[FBSDisplayConfiguration safeOverscanRatio]
  -[FBSDisplayConfiguration CADisplay]
  -[FBSDisplayConfiguration isExternal]
  -[FBSDisplayConfiguration isCarInstrumentsDisplay]
  -[FBSDisplayConfiguration expectsSecureRendering]
  -[FBSDisplayConfiguration _nameForDisplayType]
  -[FBSDisplayConfiguration renderingCenter]
  -[FBSDisplayConfiguration isMainRootDisplay]
  -[FBSDisplayConfiguration _initWithIdentity:hardwareIdentifier:name:deviceName:seed:comparable:tags:currentMode:preferredMode:otherModes:cloningSupported:overscanned:overscanCompensation:safeOverscanRatio:pixelSize:bounds:renderingCenter:latency:validityCheck:]
  -[FBSDisplayConfiguration _initWithImmutableDisplay:originalDisplay:assertIfInvalid:]
  -[FBSDisplayConfiguration initWithCADisplay:isMainDisplay:]
  -[FBSDisplayConfiguration copyWithUniqueIdentifier:]
  -[FBSDisplayConfiguration copyWithOverrideMode:]
  -[FBSDisplayConfiguration _nativeRotation]
  -[FBSDisplayConfiguration laterConfiguration:]
  -[FBSDisplayConfiguration copyForSecureRendering]
  -[FBSDisplayConfiguration isHiddenDisplay]
  -[FBSDisplayConfiguration wantsConnectionDebouncing]
  -[FBSDisplayConfiguration caDisplay]
  -[FBSDisplayConfiguration referenceBounds]
  -[FBSDisplayConfiguration nativeCenter]
  -[FBSDisplayConfiguration isConnected]
  -[FBSDisplayConfiguration supportsExtendedColor]


FBSSettingsDiff : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSSettingDescriptionProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSettingsDiff init]
  -[FBSSettingsDiff dealloc]
  -[FBSSettingsDiff .cxx_destruct]
  -[FBSSettingsDiff succinctDescription]
  -[FBSSettingsDiff descriptionWithMultilinePrefix:]
  -[FBSSettingsDiff succinctDescriptionBuilder]
  -[FBSSettingsDiff descriptionBuilderWithMultilinePrefix:]
  -[FBSSettingsDiff encodeWithXPCDictionary:]
  -[FBSSettingsDiff initWithXPCDictionary:]
  -[FBSSettingsDiff keyDescriptionForSetting:]
  -[FBSSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSettingsDiff inspectChangesWithBlock:]
  -[FBSSettingsDiff settings:keyDescriptionForSetting:]
  -[FBSSettingsDiff settings:valueDescriptionForFlag:object:ofSetting:]
  -[FBSSettingsDiff evaluateWithInspector:context:]
  -[FBSSettingsDiff settingsByApplyingToMutableCopyOfSettings:]
  -[FBSSettingsDiff initWithChanges:fromSettings:toSettings:]
  -[FBSSettingsDiff _initWithChanges:otherSettingsDiff:settingsClass:]
  -[FBSSettingsDiff inspectOtherChangesWithBlock:]


FBSSceneAction : BSAction
 @property  FBSScene *scene
 @property  FBSSerialQueue *callOutQueue

  // instance methods
  -[FBSSceneAction .cxx_destruct]
  -[FBSSceneAction scene]
  -[FBSSceneAction setScene:]
  -[FBSSceneAction setCallOutQueue:]
  -[FBSSceneAction callOutQueue]


FBSDisplayLayout : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  long long interfaceOrientation
 @property  long long displayBacklightLevel
 @property  NSArray *elements
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  NSDate *timestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayout init]
  -[FBSDisplayLayout isEqual:]
  -[FBSDisplayLayout .cxx_destruct]
  -[FBSDisplayLayout timestamp]
  -[FBSDisplayLayout elements]
  -[FBSDisplayLayout bounds]
  -[FBSDisplayLayout displayType]
  -[FBSDisplayLayout succinctDescription]
  -[FBSDisplayLayout descriptionWithMultilinePrefix:]
  -[FBSDisplayLayout succinctDescriptionBuilder]
  -[FBSDisplayLayout descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayout encodeWithXPCDictionary:]
  -[FBSDisplayLayout initWithXPCDictionary:]
  -[FBSDisplayLayout addElement:]
  -[FBSDisplayLayout interfaceOrientation]
  -[FBSDisplayLayout displayConfiguration]
  -[FBSDisplayLayout setInterfaceOrientation:]
  -[FBSDisplayLayout setDisplayConfiguration:]
  -[FBSDisplayLayout display]
  -[FBSDisplayLayout displayBacklightLevel]
  -[FBSDisplayLayout referenceBounds]
  -[FBSDisplayLayout _initWithElements:]
  -[FBSDisplayLayout _sortElements]
  -[FBSDisplayLayout removeElement:]
  -[FBSDisplayLayout finalizeLayout]
  -[FBSDisplayLayout setDisplayBacklightLevel:]


FBSProcessAssertion : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  BKSProcessAssertion *assertion
 @property  unsigned long activationCount
 @property  NSString *name
 @property  <FBSProcess> *process
 @property  FBSProcessExecutionPolicy *policy
 @property  BOOL activated
 @property  BOOL invalidated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessAssertion dealloc]
  -[FBSProcessAssertion name]
  -[FBSProcessAssertion invalidate]
  -[FBSProcessAssertion .cxx_destruct]
  -[FBSProcessAssertion isInvalidated]
  -[FBSProcessAssertion policy]
  -[FBSProcessAssertion assertion]
  -[FBSProcessAssertion process]
  -[FBSProcessAssertion succinctDescription]
  -[FBSProcessAssertion descriptionWithMultilinePrefix:]
  -[FBSProcessAssertion succinctDescriptionBuilder]
  -[FBSProcessAssertion descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessAssertion activate]
  -[FBSProcessAssertion deactivate]
  -[FBSProcessAssertion activationCount]
  -[FBSProcessAssertion initWithName:process:policy:]
  -[FBSProcessAssertion isActivated]


FBSApplicationDataStore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleID

  // class methods
  +[FBSApplicationDataStore synchronize]
  +[FBSApplicationDataStore isServerProcess]
  +[FBSApplicationDataStore setPrefetchedKeys:]
  +[FBSApplicationDataStore synchronizeWithCompletion:]
  +[FBSApplicationDataStore _doWithClassClient:]
  +[FBSApplicationDataStore storeForApplication:]
  +[FBSApplicationDataStore applicationsWithAvailableStores]
  +[FBSApplicationDataStore _setClassClient:]

  // instance methods
  -[FBSApplicationDataStore init]
  -[FBSApplicationDataStore dealloc]
  -[FBSApplicationDataStore removeAllObjects]
  -[FBSApplicationDataStore objectForKey:]
  -[FBSApplicationDataStore removeObjectForKey:]
  -[FBSApplicationDataStore setObject:forKey:]
  -[FBSApplicationDataStore .cxx_destruct]
  -[FBSApplicationDataStore initWithBundleIdentifier:]
  -[FBSApplicationDataStore bundleID]
  -[FBSApplicationDataStore _initWithBundleId:client:]
  -[FBSApplicationDataStore _makeSafe:forType:]
  -[FBSApplicationDataStore objectForKey:withResult:]
  -[FBSApplicationDataStore safeObjectForKey:ofType:]
  -[FBSApplicationDataStore safeObjectForKey:ofType:withResult:]
  -[FBSApplicationDataStore archivedObjectForKey:]
  -[FBSApplicationDataStore archivedObjectForKey:withResult:]
  -[FBSApplicationDataStore safeArchivedObjectForKey:ofType:]
  -[FBSApplicationDataStore safeArchivedObjectForKey:ofType:withResult:]
  -[FBSApplicationDataStore setArchivedObject:forKey:]


FBSWorkspaceDestroySceneResponse : FBSWorkspaceSceneUpdateResponse
  // instance methods
  -[FBSWorkspaceDestroySceneResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceDestroySceneResponse initWithXPCDictionary:]


FBSOpenApplicationServiceSpecification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSOpenApplicationServiceSpecification identifier]
  +[FBSOpenApplicationServiceSpecification interface]
  +[FBSOpenApplicationServiceSpecification serviceQuality]

  // instance methods
  -[FBSOpenApplicationServiceSpecification init]


FBSWorkspaceResponse : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding>
 @property  BKSAnimationFenceHandle *animationFence
 @property  FBSSceneMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSWorkspaceResponse .cxx_destruct]
  -[FBSWorkspaceResponse message]
  -[FBSWorkspaceResponse setMessage:]
  -[FBSWorkspaceResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceResponse initWithXPCDictionary:]
  -[FBSWorkspaceResponse setAnimationFence:]
  -[FBSWorkspaceResponse animationFence]


FBSProcessExecutionProvision : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSCopying>
 @property  <FBSProcessExecutionProvisionDelegate> *delegate
 @property  <FBSProcessInternal> *process
 @property  BOOL monitoring
 @property  BOOL violated
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSProcessExecutionProvision init]
  -[FBSProcessExecutionProvision copyWithZone:]
  -[FBSProcessExecutionProvision delegate]
  -[FBSProcessExecutionProvision setDelegate:]
  -[FBSProcessExecutionProvision .cxx_destruct]
  -[FBSProcessExecutionProvision error]
  -[FBSProcessExecutionProvision prepareForReuse]
  -[FBSProcessExecutionProvision process]
  -[FBSProcessExecutionProvision succinctDescription]
  -[FBSProcessExecutionProvision descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionProvision succinctDescriptionBuilder]
  -[FBSProcessExecutionProvision descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionProvision stopMonitoring]
  -[FBSProcessExecutionProvision isMonitoring]
  -[FBSProcessExecutionProvision monitorProcess:]
  -[FBSProcessExecutionProvision _beginMonitoring]
  -[FBSProcessExecutionProvision _updateProgress]
  -[FBSProcessExecutionProvision _stopMonitoring]
  -[FBSProcessExecutionProvision _prepareForReuse]
  -[FBSProcessExecutionProvision _performDelegateCallout:]
  -[FBSProcessExecutionProvision isViolated]
  -[FBSProcessExecutionProvision updateProgress]
  -[FBSProcessExecutionProvision _noteViolatedWithError:]
  -[FBSProcessExecutionProvision isResourceProvision]


FBSWorkspaceInitializationOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL _startsInactive
 @property  <FBSWorkspaceDelegate> *delegate
 @property  FBSSerialQueue *callOutQueue

  // class methods
  +[FBSWorkspaceInitializationOptions optionsWithDelegate:]

  // instance methods
  -[FBSWorkspaceInitializationOptions init]
  -[FBSWorkspaceInitializationOptions delegate]
  -[FBSWorkspaceInitializationOptions .cxx_destruct]
  -[FBSWorkspaceInitializationOptions setCallOutQueue:]
  -[FBSWorkspaceInitializationOptions _setStartsInactive:]
  -[FBSWorkspaceInitializationOptions callOutQueue]
  -[FBSWorkspaceInitializationOptions _startsInactive]
  -[FBSWorkspaceInitializationOptions _initWithDelegate:]


FBSSettingsDiffInspector : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[FBSSettingsDiffInspector init]
  -[FBSSettingsDiffInspector dealloc]
  -[FBSSettingsDiffInspector .cxx_destruct]
  -[FBSSettingsDiffInspector succinctDescription]
  -[FBSSettingsDiffInspector descriptionWithMultilinePrefix:]
  -[FBSSettingsDiffInspector succinctDescriptionBuilder]
  -[FBSSettingsDiffInspector descriptionBuilderWithMultilinePrefix:]
  -[FBSSettingsDiffInspector inspectDiff:withContext:]
  -[FBSSettingsDiffInspector removeAllObservers]
  -[FBSSettingsDiffInspector observeOtherSetting:withBlock:]
  -[FBSSettingsDiffInspector _addObserver:forSetting:inInfo:]
  -[FBSSettingsDiffInspector _observeSetting:withBlock:]


FBSDisplayLayoutMonitor : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable>
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayLayoutMonitor interface]
  +[FBSDisplayLayoutMonitor monitorWithConfiguration:]
  +[FBSDisplayLayoutMonitor sharedMonitorForDisplayType:]
  +[FBSDisplayLayoutMonitor serviceIdentifier]
  +[FBSDisplayLayoutMonitor _endpointForDisplayType:]
  +[FBSDisplayLayoutMonitor mainDisplayInstanceIdentifier]

  // instance methods
  -[FBSDisplayLayoutMonitor init]
  -[FBSDisplayLayoutMonitor dealloc]
  -[FBSDisplayLayoutMonitor invalidate]
  -[FBSDisplayLayoutMonitor handler]
  -[FBSDisplayLayoutMonitor .cxx_destruct]
  -[FBSDisplayLayoutMonitor setHandler:]
  -[FBSDisplayLayoutMonitor addObserver:]
  -[FBSDisplayLayoutMonitor qualityOfService]
  -[FBSDisplayLayoutMonitor removeObserver:]
  -[FBSDisplayLayoutMonitor initWithDisplayType:handler:]
  -[FBSDisplayLayoutMonitor displayType]
  -[FBSDisplayLayoutMonitor currentLayout]
  -[FBSDisplayLayoutMonitor initWithDisplayType:]
  -[FBSDisplayLayoutMonitor _initWithConfiguration:singleton:needsDefaultPriority:mutable:displayType:mutableHandler:]
  -[FBSDisplayLayoutMonitor initWithDisplayType:qualityOfService:handler:]


FBSDisplayLayoutMonitorConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  BSServiceConnectionEndpoint *endpoint
 @property  BOOL needsUserInteractivePriority
 @property  @? transitionHandler

  // class methods
  +[FBSDisplayLayoutMonitorConfiguration configurationWithEndpoint:]
  +[FBSDisplayLayoutMonitorConfiguration configurationForDefaultMainDisplayMonitor]

  // instance methods
  -[FBSDisplayLayoutMonitorConfiguration init]
  -[FBSDisplayLayoutMonitorConfiguration .cxx_destruct]
  -[FBSDisplayLayoutMonitorConfiguration endpoint]
  -[FBSDisplayLayoutMonitorConfiguration needsUserInteractivePriority]
  -[FBSDisplayLayoutMonitorConfiguration transitionHandler]
  -[FBSDisplayLayoutMonitorConfiguration setTransitionHandler:]
  -[FBSDisplayLayoutMonitorConfiguration _initWithEndpoint:]
  -[FBSDisplayLayoutMonitorConfiguration setNeedsUserInteractivePriority:]


_FBSDisplayLayoutService : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, FBSDisplayLayoutMonitorClientInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSDisplayLayoutService dealloc]
  -[_FBSDisplayLayoutService invalidate]
  -[_FBSDisplayLayoutService .cxx_destruct]
  -[_FBSDisplayLayoutService endpoint]
  -[_FBSDisplayLayoutService currentLayout]
  -[_FBSDisplayLayoutService updateLayout:withTransition:]
  -[_FBSDisplayLayoutService _initWithEndpoint:qos:]
  -[_FBSDisplayLayoutService addObserver:forKey:]
  -[_FBSDisplayLayoutService removeObserverForKey:]


_FBSDisplayLayoutEndpointServices : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_FBSDisplayLayoutEndpointServices _checkoutServiceWithEndpoint:qos:]
  +[_FBSDisplayLayoutEndpointServices _checkinService:]

  // instance methods
  -[_FBSDisplayLayoutEndpointServices .cxx_destruct]


_FBSDisplayLayoutServiceAssertion : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable>
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSDisplayLayoutServiceAssertion init]
  -[_FBSDisplayLayoutServiceAssertion dealloc]
  -[_FBSDisplayLayoutServiceAssertion invalidate]
  -[_FBSDisplayLayoutServiceAssertion .cxx_destruct]
  -[_FBSDisplayLayoutServiceAssertion currentLayout]
  -[_FBSDisplayLayoutServiceAssertion initWithEndpoint:qos:observer:]


FBSSceneSettingsDiffInspector : FBSSettingsDiffInspector
  // instance methods
  -[FBSSceneSettingsDiffInspector observeFrameWithBlock:]
  -[FBSSceneSettingsDiffInspector observeInterfaceOrientationWithBlock:]
  -[FBSSceneSettingsDiffInspector observeDisplayConfigurationWithBlock:]
  -[FBSSceneSettingsDiffInspector observeOcclusionsWithBlock:]
  -[FBSSceneSettingsDiffInspector observeIsForegroundWithBlock:]
  -[FBSSceneSettingsDiffInspector observeLevelWithBlock:]
  -[FBSSceneSettingsDiffInspector observeClassWithBlock:]
  -[FBSSceneSettingsDiffInspector observeIsBackgroundedWithBlock:]


FBSDataResetRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  long long mode
 @property  long long options
 @property  NSString *reason

  // instance methods
  -[FBSDataResetRequest options]
  -[FBSDataResetRequest reason]
  -[FBSDataResetRequest .cxx_destruct]
  -[FBSDataResetRequest setMode:]
  -[FBSDataResetRequest setOptions:]
  -[FBSDataResetRequest mode]
  -[FBSDataResetRequest setReason:]
  -[FBSDataResetRequest initWithMode:options:reason:]


FBSSystemService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSSystemService sharedService]
  +[FBSSystemService clientCallbackQueue]

  // instance methods
  -[FBSSystemService init]
  -[FBSSystemService dealloc]
  -[FBSSystemService .cxx_destruct]
  -[FBSSystemService initWithEndpoint:]
  -[FBSSystemService openApplication:options:withResult:]
  -[FBSSystemService isPasscodeLockedOrBlocked]
  -[FBSSystemService sendActions:withResult:]
  -[FBSSystemService canOpenApplication:reason:]
  -[FBSSystemService openApplication:options:clientPort:withResult:]
  -[FBSSystemService createClientPort]
  -[FBSSystemService cleanupClientPort:]
  -[FBSSystemService pidForApplication:]
  -[FBSSystemService systemApplicationBundleIdentifier]
  -[FBSSystemService terminateApplication:forReason:andReport:withDescription:completion:]
  -[FBSSystemService terminateApplicationGroup:forReason:andReport:withDescription:completion:]
  -[FBSSystemService shutdownWithOptions:]
  -[FBSSystemService setKeyboardFocusApplicationPID:completion:]
  -[FBSSystemService setKeyboardFocusApplicationPID:deferringToken:completion:]
  -[FBSSystemService terminateApplication:forReason:andReport:withDescription:]
  -[FBSSystemService terminateApplicationGroup:forReason:andReport:withDescription:]
  -[FBSSystemService openURL:application:options:clientPort:withResult:]
  -[FBSSystemService processHandleForApplication:]
  -[FBSSystemService badgeValueForBundleID:]
  -[FBSSystemService setBadgeValue:forBundleID:]
  -[FBSSystemService dataResetWithRequest:completion:]
  -[FBSSystemService reboot]
  -[FBSSystemService shutdown]
  -[FBSSystemService setKeyboardFocusApplicationWithBundleID:pid:completion:]


FBSOrientationObserverClient : FBSServiceFacilityClient
  // instance methods
  -[FBSOrientationObserverClient invalidate]
  -[FBSOrientationObserverClient .cxx_destruct]
  -[FBSOrientationObserverClient activeInterfaceOrientation]
  -[FBSOrientationObserverClient handleMessage:withType:]
  -[FBSOrientationObserverClient initWithDelegate:calloutQueue:]
  -[FBSOrientationObserverClient activeInterfaceOrientationWithCompletion:]
  -[FBSOrientationObserverClient registerOrientationInterest:]
  -[FBSOrientationObserverClient _getActiveInterfaceOrientationSynchronously:withCompletion:]
  -[FBSOrientationObserverClient configureConnectMessage:]


FBSWorkspaceScenesClient : NSObject /usr/lib/libSystem.B.dylib <FBSSceneUpdater, FBSWorkspaceScenesSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSObject<NSCopying> *identifier

  // class methods
  +[FBSWorkspaceScenesClient serviceQuality]

  // instance methods
  -[FBSWorkspaceScenesClient init]
  -[FBSWorkspaceScenesClient .cxx_destruct]
  -[FBSWorkspaceScenesClient identifier]
  -[FBSWorkspaceScenesClient endpoint]
  -[FBSWorkspaceScenesClient hostProcess]
  -[FBSWorkspaceScenesClient scene:didReceiveActions:]
  -[FBSWorkspaceScenesClient activate]
  -[FBSWorkspaceScenesClient sceneWithIdentifier:]
  -[FBSWorkspaceScenesClient scenes]
  -[FBSWorkspaceScenesClient callOutQueue]
  -[FBSWorkspaceScenesClient scene:didUpdateClientSettings:withDiff:transitionContext:]
  -[FBSWorkspaceScenesClient scene:sendMessage:withResponse:]
  -[FBSWorkspaceScenesClient requestSceneWithOptions:completion:]
  -[FBSWorkspaceScenesClient initWithEndpoint:queue:calloutQueue:workspace:]
  -[FBSWorkspaceScenesClient _remoteTarget]
  -[FBSWorkspaceScenesClient _queue_invalidateScene:withTransitionContext:completion:]
  -[FBSWorkspaceScenesClient willTerminateWithTransitionContext:withAcknowledgement:]
  -[FBSWorkspaceScenesClient sceneID:createWithParameters:transitionContext:completion:]
  -[FBSWorkspaceScenesClient sceneID:updateWithSettingsDiff:transitionContext:completion:]
  -[FBSWorkspaceScenesClient sceneID:destroyWithTransitionContext:completion:]
  -[FBSWorkspaceScenesClient sendActions:completion:]
  -[FBSWorkspaceScenesClient sceneID:sendActions:]
  -[FBSWorkspaceScenesClient sceneID:sendMessage:completion:]


FBSProcessExecutionStrategy : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  NSString *strategyName
 @property  long long schedulingPolicy
 @property  long long graphicsPolicy
 @property  long long jetsamPolicy
 @property  BOOL customPolicy
 @property  unsigned int reason
 @property  unsigned int flags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessExecutionStrategy initialize]
  +[FBSProcessExecutionStrategy background]
  +[FBSProcessExecutionStrategy userInteractive]
  +[FBSProcessExecutionStrategy strategyForSchedulingPolicy:graphicsPolicy:jetsamPolicy:]
  +[FBSProcessExecutionStrategy userInteractiveWithoutUI]
  +[FBSProcessExecutionStrategy backgroundWithUI]
  +[FBSProcessExecutionStrategy policyWithReason:flags:]

  // instance methods
  -[FBSProcessExecutionStrategy copyWithZone:]
  -[FBSProcessExecutionStrategy reason]
  -[FBSProcessExecutionStrategy .cxx_destruct]
  -[FBSProcessExecutionStrategy flags]
  -[FBSProcessExecutionStrategy setReason:]
  -[FBSProcessExecutionStrategy succinctDescription]
  -[FBSProcessExecutionStrategy descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionStrategy succinctDescriptionBuilder]
  -[FBSProcessExecutionStrategy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionStrategy setFlags:]
  -[FBSProcessExecutionStrategy schedulingPolicy]
  -[FBSProcessExecutionStrategy setStrategyName:]
  -[FBSProcessExecutionStrategy setSchedulingPolicy:]
  -[FBSProcessExecutionStrategy setGraphicsPolicy:]
  -[FBSProcessExecutionStrategy setJetsamPolicy:]
  -[FBSProcessExecutionStrategy setCustomPolicy:]
  -[FBSProcessExecutionStrategy isCustomPolicy]
  -[FBSProcessExecutionStrategy graphicsPolicy]
  -[FBSProcessExecutionStrategy jetsamPolicy]
  -[FBSProcessExecutionStrategy strategyName]


FBSMutableProcessExecutionStrategy : FBSProcessExecutionStrategy
 @property  unsigned int reason
 @property  unsigned int flags
 @property  long long schedulingPolicy
 @property  long long graphicsPolicy
 @property  long long jetsamPolicy

  // instance methods
  -[FBSMutableProcessExecutionStrategy copyWithZone:]


FBSProcessExecutionPolicy : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  FBSProcessExecutionStrategy *strategy
 @property  NSArray *provisions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessExecutionPolicy policyForStrategy:withProvisions:]

  // instance methods
  -[FBSProcessExecutionPolicy copyWithZone:]
  -[FBSProcessExecutionPolicy .cxx_destruct]
  -[FBSProcessExecutionPolicy succinctDescription]
  -[FBSProcessExecutionPolicy descriptionWithMultilinePrefix:]
  -[FBSProcessExecutionPolicy succinctDescriptionBuilder]
  -[FBSProcessExecutionPolicy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessExecutionPolicy strategy]
  -[FBSProcessExecutionPolicy setStrategy:]
  -[FBSProcessExecutionPolicy provisions]
  -[FBSProcessExecutionPolicy setProvisions:]


FBSSceneEvent : FBSSceneMessage
 @property  long long source
 @property  FBSSceneSettingsDiff *settingsDiff
 @property  FBSSceneClientSettingsDiff *clientSettingsDiff
 @property  FBSSceneTransitionContext *transitionContext
 @property  NSSet *actions

  // instance methods
  -[FBSSceneEvent init]
  -[FBSSceneEvent setSource:]
  -[FBSSceneEvent .cxx_destruct]
  -[FBSSceneEvent source]
  -[FBSSceneEvent succinctDescription]
  -[FBSSceneEvent descriptionWithMultilinePrefix:]
  -[FBSSceneEvent succinctDescriptionBuilder]
  -[FBSSceneEvent descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneEvent actions]
  -[FBSSceneEvent transitionContext]
  -[FBSSceneEvent setTransitionContext:]
  -[FBSSceneEvent settingsDiff]
  -[FBSSceneEvent setClientSettingsDiff:]
  -[FBSSceneEvent setSettingsDiff:]
  -[FBSSceneEvent clientSettingsDiff]


FBSBundleInfo : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding>
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  NSString *displayName
 @property  NSString *bundleVersion
 @property  NSString *bundleType
 @property  unsigned long sequenceNumber
 @property  NSUUID *cacheGUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBundleInfo init]
  -[FBSBundleInfo .cxx_destruct]
  -[FBSBundleInfo bundleIdentifier]
  -[FBSBundleInfo bundleURL]
  -[FBSBundleInfo displayName]
  -[FBSBundleInfo cacheGUID]
  -[FBSBundleInfo sequenceNumber]
  -[FBSBundleInfo bundleVersion]
  -[FBSBundleInfo bundleType]
  -[FBSBundleInfo succinctDescription]
  -[FBSBundleInfo descriptionWithMultilinePrefix:]
  -[FBSBundleInfo succinctDescriptionBuilder]
  -[FBSBundleInfo descriptionBuilderWithMultilinePrefix:]
  -[FBSBundleInfo _initWithBundleProxy:overrideURL:]
  -[FBSBundleInfo _initWithBundleIdentifier:url:]
  -[FBSBundleInfo _initWithBundleProxy:bundleIdentifier:url:]


FBSWorkspaceServiceSpecification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSWorkspaceServiceSpecification identifier]
  +[FBSWorkspaceServiceSpecification environment]
  +[FBSWorkspaceServiceSpecification interface]
  +[FBSWorkspaceServiceSpecification serviceQuality]

  // instance methods
  -[FBSWorkspaceServiceSpecification init]


FBSSceneSnapshotContext : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding>
 @property  FBSSceneSettings *settings
 @property  NSString *sceneID
 @property  NSString *name
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double scale
 @property  NSSet *layersToExclude
 @property  double expirationInterval
 @property  BSSettings *clientExtendedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSnapshotContext contextWithSceneID:settings:]

  // instance methods
  -[FBSSceneSnapshotContext name]
  -[FBSSceneSnapshotContext .cxx_destruct]
  -[FBSSceneSnapshotContext setName:]
  -[FBSSceneSnapshotContext scale]
  -[FBSSceneSnapshotContext frame]
  -[FBSSceneSnapshotContext setScale:]
  -[FBSSceneSnapshotContext settings]
  -[FBSSceneSnapshotContext setSettings:]
  -[FBSSceneSnapshotContext succinctDescription]
  -[FBSSceneSnapshotContext descriptionWithMultilinePrefix:]
  -[FBSSceneSnapshotContext succinctDescriptionBuilder]
  -[FBSSceneSnapshotContext descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSnapshotContext encodeWithXPCDictionary:]
  -[FBSSceneSnapshotContext initWithXPCDictionary:]
  -[FBSSceneSnapshotContext setFrame:]
  -[FBSSceneSnapshotContext setLayersToExclude:]
  -[FBSSceneSnapshotContext initWithSceneID:settings:]
  -[FBSSceneSnapshotContext setExpirationInterval:]
  -[FBSSceneSnapshotContext clientExtendedData]
  -[FBSSceneSnapshotContext setClientExtendedData:]
  -[FBSSceneSnapshotContext sceneID]
  -[FBSSceneSnapshotContext layersToExclude]
  -[FBSSceneSnapshotContext expirationInterval]


FBSSceneSpecification : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  Class hostAgentClass
 @property  Class clientAgentClass
 @property  Class settingsClass
 @property  Class clientSettingsClass
 @property  Class transitionContextClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneSpecification initialize]
  +[FBSSceneSpecification specification]
  +[FBSSceneSpecification _swizzleMethodOnClass:originalSelector:block:]

  // instance methods
  -[FBSSceneSpecification isEqual:]
  -[FBSSceneSpecification copyWithZone:]
  -[FBSSceneSpecification isValid]
  -[FBSSceneSpecification succinctDescription]
  -[FBSSceneSpecification descriptionWithMultilinePrefix:]
  -[FBSSceneSpecification succinctDescriptionBuilder]
  -[FBSSceneSpecification descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneSpecification hostAgentClass]
  -[FBSSceneSpecification clientAgentClass]
  -[FBSSceneSpecification settingsClass]
  -[FBSSceneSpecification clientSettingsClass]
  -[FBSSceneSpecification transitionContextClass]
  -[FBSSceneSpecification _copyForLocalSynchronousSceneClientProvider]


FBSExternalSceneLayer : FBSSceneLayer
 @property  NSString *sceneID

  // instance methods
  -[FBSExternalSceneLayer isEqual:]
  -[FBSExternalSceneLayer .cxx_destruct]
  -[FBSExternalSceneLayer alignment]
  -[FBSExternalSceneLayer encodeWithXPCDictionary:]
  -[FBSExternalSceneLayer initWithXPCDictionary:]
  -[FBSExternalSceneLayer initWithExternalSceneID:trackingContext:]
  -[FBSExternalSceneLayer sceneID]
  -[FBSExternalSceneLayer _succinctDescription]
  -[FBSExternalSceneLayer _initWithCAContext:fallbackLevel:sceneID:]
  -[FBSExternalSceneLayer initWithExternalSceneID:level:]
  -[FBSExternalSceneLayer isExternalSceneLayer]


FBSOpenApplicationService : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSOpenApplicationService new]
  +[FBSOpenApplicationService serviceName]
  +[FBSOpenApplicationService serviceWithEndpoint:]
  +[FBSOpenApplicationService serviceWithDefaultShellEndpoint]

  // instance methods
  -[FBSOpenApplicationService init]
  -[FBSOpenApplicationService dealloc]
  -[FBSOpenApplicationService .cxx_destruct]
  -[FBSOpenApplicationService openApplication:withOptions:clientHandle:completion:]
  -[FBSOpenApplicationService canOpenApplication:reason:]
  -[FBSOpenApplicationService _initWithEndpoint:]
  -[FBSOpenApplicationService _openApplication:withOptions:clientHandle:completion:]
  -[FBSOpenApplicationService _remoteTarget]
  -[FBSOpenApplicationService openApplication:withOptions:completion:]


FBSWorkspaceSceneUpdateResponse : FBSWorkspaceResponse

FBSApplicationPlaceholderProgress : NSObject /usr/lib/libSystem.B.dylib <FBSApplicationPlaceholderProgress, BSInvalidatable, BSDescriptionProviding>
 @property  FBSApplicationPlaceholder *placeholder
 @property  unsigned long installState
 @property  unsigned long installPhase
 @property  long long state
 @property  double percentComplete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationPlaceholderProgress dealloc]
  -[FBSApplicationPlaceholderProgress invalidate]
  -[FBSApplicationPlaceholderProgress .cxx_destruct]
  -[FBSApplicationPlaceholderProgress observeValueForKeyPath:ofObject:change:context:]
  -[FBSApplicationPlaceholderProgress state]
  -[FBSApplicationPlaceholderProgress installState]
  -[FBSApplicationPlaceholderProgress installPhase]
  -[FBSApplicationPlaceholderProgress succinctDescription]
  -[FBSApplicationPlaceholderProgress descriptionWithMultilinePrefix:]
  -[FBSApplicationPlaceholderProgress succinctDescriptionBuilder]
  -[FBSApplicationPlaceholderProgress descriptionBuilderWithMultilinePrefix:]
  -[FBSApplicationPlaceholderProgress percentComplete]
  -[FBSApplicationPlaceholderProgress placeholder]
  -[FBSApplicationPlaceholderProgress initWithPlaceholder:queue:]
  -[FBSApplicationPlaceholderProgress queue_isValid]
  -[FBSApplicationPlaceholderProgress queue_supportedActions]
  -[FBSApplicationPlaceholderProgress queue_canPerformAction:]
  -[FBSApplicationPlaceholderProgress queue_updateProxy:]
  -[FBSApplicationPlaceholderProgress _stopObservingProgress:withContext:]
  -[FBSApplicationPlaceholderProgress _startObservingProgress:withContext:]
  -[FBSApplicationPlaceholderProgress _queue_updateFromProgress]
  -[FBSApplicationPlaceholderProgress queue_isCancellationAllowed]


FBSSceneIdentity : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  NSString *identifier
 @property  NSString *workspaceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneIdentity identity]
  +[FBSSceneIdentity identityForIdentifier:workspaceIdentifier:]
  +[FBSSceneIdentity identityForIdentifier:]

  // instance methods
  -[FBSSceneIdentity isEqual:]
  -[FBSSceneIdentity copyWithZone:]
  -[FBSSceneIdentity mutableCopyWithZone:]
  -[FBSSceneIdentity .cxx_destruct]
  -[FBSSceneIdentity identifier]
  -[FBSSceneIdentity setIdentifier:]
  -[FBSSceneIdentity succinctDescription]
  -[FBSSceneIdentity descriptionWithMultilinePrefix:]
  -[FBSSceneIdentity succinctDescriptionBuilder]
  -[FBSSceneIdentity descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneIdentity setWorkspaceIdentifier:]
  -[FBSSceneIdentity workspaceIdentifier]


FBSMutableSceneIdentity : FBSSceneIdentity
 @property  NSString *identifier
 @property  NSString *workspaceIdentifier

  // instance methods
  -[FBSMutableSceneIdentity copyWithZone:]


FBSWorkspaceFencingImpl : NSObject /usr/lib/libSystem.B.dylib <FBSWorkspaceFencing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSWorkspaceFencingImpl .cxx_destruct]
  -[FBSWorkspaceFencingImpl trackSystemAnimationFence:]
  -[FBSWorkspaceFencingImpl requestSystemAnimationFence]
  -[FBSWorkspaceFencingImpl synchronizeSystemAnimationFencesWithCleanUpBlock:]
  -[FBSWorkspaceFencingImpl isTrackingAnySystemAnimationFence]
  -[FBSWorkspaceFencingImpl initWithQueue:calloutQueue:]


_FBMapResult : NSObject /usr/lib/libSystem.B.dylib
 @property  id result
 @property  BOOL created
 @property  BOOL filtered

  // instance methods
  -[_FBMapResult .cxx_destruct]
  -[_FBMapResult result]
  -[_FBMapResult setResult:]
  -[_FBMapResult created]
  -[_FBMapResult setCreated:]
  -[_FBMapResult filtered]
  -[_FBMapResult setFiltered:]


FBSALOToken : NSObject /usr/lib/libSystem.B.dylib

FBSApplicationLibrary : NSObject /usr/lib/libSystem.B.dylib <LSApplicationWorkspaceObserverProtocol, FBSApplicationInfoProvider>
 @property  BOOL usingNetwork
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSApplicationLibrary init]
  -[FBSApplicationLibrary dealloc]
  -[FBSApplicationLibrary .cxx_destruct]
  -[FBSApplicationLibrary applicationInstallsDidCancel:]
  -[FBSApplicationLibrary applicationInstallsDidPause:]
  -[FBSApplicationLibrary applicationInstallsDidPrioritize:]
  -[FBSApplicationLibrary applicationInstallsDidResume:]
  -[FBSApplicationLibrary networkUsageChanged:]
  -[FBSApplicationLibrary applicationStateDidChange:]
  -[FBSApplicationLibrary deviceManagementPolicyDidChange:]
  -[FBSApplicationLibrary applicationInstallsDidChange:]
  -[FBSApplicationLibrary allInstalledApplications]
  -[FBSApplicationLibrary applicationInstallsDidStart:]
  -[FBSApplicationLibrary applicationInstallsDidUpdateIcon:]
  -[FBSApplicationLibrary applicationsWillInstall:]
  -[FBSApplicationLibrary applicationsDidInstall:]
  -[FBSApplicationLibrary applicationsDidFailToInstall:]
  -[FBSApplicationLibrary applicationsWillUninstall:]
  -[FBSApplicationLibrary applicationsDidUninstall:]
  -[FBSApplicationLibrary applicationsDidFailToUninstall:]
  -[FBSApplicationLibrary applicationInstallsArePrioritized:arePaused:]
  -[FBSApplicationLibrary initWithConfiguration:]
  -[FBSApplicationLibrary _load]
  -[FBSApplicationLibrary uninstallApplication:withOptions:completion:]
  -[FBSApplicationLibrary applicationInfoForBundleIdentifier:]
  -[FBSApplicationLibrary synchronize:]
  -[FBSApplicationLibrary _initWithApplicationWorkspace:configuration:]
  -[FBSApplicationLibrary _reloadPlaceholdersNotificationFired]
  -[FBSApplicationLibrary _observeType:withBlock:]
  -[FBSApplicationLibrary _workQueue_addApplicationProxy:withOverrideURL:]
  -[FBSApplicationLibrary _workQueue_incrementSynchronizationActionCount]
  -[FBSApplicationLibrary _workQueue_removeInstalledApplicationFromModelForBundleID:withReason:]
  -[FBSApplicationLibrary _workQueue_decrementSynchronizationActionCount]
  -[FBSApplicationLibrary _executeOrPendInstallSynchronizationBlock:]
  -[FBSApplicationLibrary _workQueue_executeInstallSynchronizationBlocksIfAppropriate]
  -[FBSApplicationLibrary _workQueue_currentProcessProxyWithOutURL:]
  -[FBSApplicationLibrary _notifyForType:synchronously:withCastingBlock:]
  -[FBSApplicationLibrary _workQueue_placeholdersForProxies:updateExistingIfNecessary:createIfNecessary:createReason:createdPlaceholders:existingPlaceholders:filterExistingPlaceholders:unmappedProxies:]
  -[FBSApplicationLibrary _workQueue_applicationsForProxies:createIfNecessary:createReason:createdApplications:existingApplications:filterExistingApplications:unmappedProxies:]
  -[FBSApplicationLibrary _workQueue_placeholderForProxy:filterExisting:updateExistingIfNecessary:createIfNecessary:createReason:]
  -[FBSApplicationLibrary _workQueue_applicationInfoForProxy:filterExisting:createIfNecessary:createReason:]
  -[FBSApplicationLibrary _workQueue_notePlaceholdersModifiedSignificantly:]
  -[FBSApplicationLibrary _notifyDidAddPlaceholders:]
  -[FBSApplicationLibrary _notifyDidDemoteApplications:]
  -[FBSApplicationLibrary _workQueue_removePlaceholderFromModelForBundleID:withReason:]
  -[FBSApplicationLibrary _workQueue_applicationHasBeenModified:applicationProxy:]
  -[FBSApplicationLibrary _notifyDidCancelPlaceholders:]
  -[FBSApplicationLibrary _notifyDidAddApplications:]
  -[FBSApplicationLibrary _notifyDidReplaceApplications:]
  -[FBSApplicationLibrary _notifyDidRemoveApplications:]
  -[FBSApplicationLibrary _notifyDidUpdateApplications:]
  -[FBSApplicationLibrary _handleApplicationStateDidChange:notifyForUpdateInsteadOfReplacement:]
  -[FBSApplicationLibrary _notifyDidChangeNetworkUsage:]
  -[FBSApplicationLibrary installedApplicationWithBundleIdentifier:]
  -[FBSApplicationLibrary isUsingNetwork]
  -[FBSApplicationLibrary installedApplicationWithBundleIdentifier:completionHandler:]
  -[FBSApplicationLibrary allPlaceholders]
  -[FBSApplicationLibrary placeholderWithBundleIdentifier:]
  -[FBSApplicationLibrary uninstallApplication:completion:]
  -[FBSApplicationLibrary removeObserverForToken:]
  -[FBSApplicationLibrary observeDidAddPlaceholdersWithBlock:]
  -[FBSApplicationLibrary observeDidCancelPlaceholdersWithBlock:]
  -[FBSApplicationLibrary observeDidAddApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidReplaceApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidUpdateApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidRemoveApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidDemoteApplicationsWithBlock:]
  -[FBSApplicationLibrary observeDidChangeNetworkUsageWithBlock:]
  -[FBSApplicationLibrary addApplicationProxy:withOverrideURL:]
  -[FBSApplicationLibrary removeApplicationProxy:]
  -[FBSApplicationLibrary _addCurrentProcess]


FBSWorkspaceCreateSceneResponse : FBSWorkspaceSceneUpdateResponse
  // instance methods
  -[FBSWorkspaceCreateSceneResponse encodeWithXPCDictionary:]
  -[FBSWorkspaceCreateSceneResponse initWithXPCDictionary:]


FBSSceneLayer : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding>
 @property  CAContext *context
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneLayer init]
  -[FBSSceneLayer dealloc]
  -[FBSSceneLayer .cxx_destruct]
  -[FBSSceneLayer _context]
  -[FBSSceneLayer alignment]
  -[FBSSceneLayer encodeWithXPCDictionary:]
  -[FBSSceneLayer initWithXPCDictionary:]
  -[FBSSceneLayer _unsafe_captureLevel]
  -[FBSSceneLayer _unsafe_level]
  -[FBSSceneLayer _initWithCAContext:fallbackLevel:]
  -[FBSSceneLayer _succinctDescription]
  -[FBSSceneLayer isCAContextLayer]
  -[FBSSceneLayer isExternalSceneLayer]


FBSXPCMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *payload

  // class methods
  +[FBSXPCMessage message]
  +[FBSXPCMessage messageWithPacker:]
  +[FBSXPCMessage messageWithPayload:]
  +[FBSXPCMessage messageWithBSXPCMessage:ownReply:]

  // instance methods
  -[FBSXPCMessage init]
  -[FBSXPCMessage .cxx_destruct]
  -[FBSXPCMessage payload]
  -[FBSXPCMessage initWithMessagePayload:]
  -[FBSXPCMessage initWithMessagePacker:]
  -[FBSXPCMessage sendReplyMessageWithPacker:]


FBSUIApplicationLaunchResponse : FBSWorkspaceResponse

FBSSceneClientSettingsDiffInspector : FBSSettingsDiffInspector
  // instance methods
  -[FBSSceneClientSettingsDiffInspector observeOcclusionsWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredSceneHostIdentifierWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observeClassWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observeLayersWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredLevelWithBlock:]
  -[FBSSceneClientSettingsDiffInspector observePreferredInterfaceOrientationWithBlock:]


FBSProcess : NSObject /usr/lib/libSystem.B.dylib <FBSProcessInternal, BSDescriptionProviding>
 @property  BOOL running
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int pid
 @property  BSProcessHandle *handle
 @property  BSMachPortTaskNameRight *taskNameRight
 @property  RBSProcessIdentity *identity

  // class methods
  +[FBSProcess currentProcess]

  // instance methods
  -[FBSProcess init]
  -[FBSProcess dealloc]
  -[FBSProcess .cxx_destruct]
  -[FBSProcess handle]
  -[FBSProcess isRunning]
  -[FBSProcess identity]
  -[FBSProcess pid]
  -[FBSProcess succinctDescription]
  -[FBSProcess descriptionWithMultilinePrefix:]
  -[FBSProcess succinctDescriptionBuilder]
  -[FBSProcess descriptionBuilderWithMultilinePrefix:]
  -[FBSProcess taskNameRight]
  -[FBSProcess _watchdogStarted:]
  -[FBSProcess _watchdogStopped:]
  -[FBSProcess _watchdog:shouldTerminateWithDeclineReason:]
  -[FBSProcess _watchdog:terminationRequestForViolatedProvision:error:]
  -[FBSProcess _terminateWithRequest:forWatchdog:]
  -[FBSProcess _initForCurrentProcess]


FBSDisplayConfigurationRequest : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding, NSCopying, NSMutableCopying, NSSecureCoding>
 @property  long long overscanCompensation
 @property  {CGSize=dd} pixelSize
 @property  {CGSize=dd} nativePixelSize
 @property  double refreshRate
 @property  long long hdrMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayConfigurationRequest supportsSecureCoding]

  // instance methods
  -[FBSDisplayConfigurationRequest init]
  -[FBSDisplayConfigurationRequest isEqual:]
  -[FBSDisplayConfigurationRequest copyWithZone:]
  -[FBSDisplayConfigurationRequest mutableCopyWithZone:]
  -[FBSDisplayConfigurationRequest encodeWithCoder:]
  -[FBSDisplayConfigurationRequest initWithCoder:]
  -[FBSDisplayConfigurationRequest succinctDescription]
  -[FBSDisplayConfigurationRequest descriptionWithMultilinePrefix:]
  -[FBSDisplayConfigurationRequest succinctDescriptionBuilder]
  -[FBSDisplayConfigurationRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayConfigurationRequest encodeWithXPCDictionary:]
  -[FBSDisplayConfigurationRequest initWithXPCDictionary:]
  -[FBSDisplayConfigurationRequest hdrMode]
  -[FBSDisplayConfigurationRequest pixelSize]
  -[FBSDisplayConfigurationRequest overscanCompensation]
  -[FBSDisplayConfigurationRequest refreshRate]
  -[FBSDisplayConfigurationRequest nativePixelSize]


FBSMutableDisplayConfigurationRequest : FBSDisplayConfigurationRequest
 @property  long long overscanCompensation
 @property  {CGSize=dd} pixelSize
 @property  {CGSize=dd} nativePixelSize
 @property  double refreshRate
 @property  long long hdrMode

  // instance methods
  -[FBSMutableDisplayConfigurationRequest copyWithZone:]
  -[FBSMutableDisplayConfigurationRequest setOverscanCompensation:]
  -[FBSMutableDisplayConfigurationRequest setNativePixelSize:]
  -[FBSMutableDisplayConfigurationRequest setRefreshRate:]
  -[FBSMutableDisplayConfigurationRequest setHdrMode:]
  -[FBSMutableDisplayConfigurationRequest setPixelSize:]


FBSProcessTerminationRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  NSString *label
 @property  <FBSProcess> *process
 @property  unsigned long options
 @property  long long reportType
 @property  long long exceptionCode
 @property  NSString *explanation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessTerminationRequest requestForProcess:withLabel:]

  // instance methods
  -[FBSProcessTerminationRequest copyWithZone:]
  -[FBSProcessTerminationRequest options]
  -[FBSProcessTerminationRequest .cxx_destruct]
  -[FBSProcessTerminationRequest setOptions:]
  -[FBSProcessTerminationRequest setLabel:]
  -[FBSProcessTerminationRequest label]
  -[FBSProcessTerminationRequest execute]
  -[FBSProcessTerminationRequest process]
  -[FBSProcessTerminationRequest succinctDescription]
  -[FBSProcessTerminationRequest descriptionWithMultilinePrefix:]
  -[FBSProcessTerminationRequest succinctDescriptionBuilder]
  -[FBSProcessTerminationRequest descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessTerminationRequest explanation]
  -[FBSProcessTerminationRequest setExplanation:]
  -[FBSProcessTerminationRequest setReportType:]
  -[FBSProcessTerminationRequest setExceptionCode:]
  -[FBSProcessTerminationRequest exceptionCode]
  -[FBSProcessTerminationRequest reportType]
  -[FBSProcessTerminationRequest setProcess:]


_FBSSnapshot : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable>
 @property  _FBSSnapshotContext *context
 @property  BOOL hasProtectedContent
 @property  IOSurface *IOSurface
 @property  IOSurface *fallbackIOSurface
 @property  ^{CGImage=} CGImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_FBSSnapshot dealloc]
  -[_FBSSnapshot invalidate]
  -[_FBSSnapshot .cxx_destruct]
  -[_FBSSnapshot context]
  -[_FBSSnapshot _scale]
  -[_FBSSnapshot CGImage]
  -[_FBSSnapshot IOSurface]
  -[_FBSSnapshot _doInvalidate]
  -[_FBSSnapshot fallbackIOSurface]
  -[_FBSSnapshot _synchronizedCaptureWithCompletion:]
  -[_FBSSnapshot _scaledSnapshotSize]
  -[_FBSSnapshot initWithSnapshotContext:]
  -[_FBSSnapshot hasProtectedContent]
  -[_FBSSnapshot capture]


_FBSSnapshotContext : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  NSOrderedSet *layers
 @property  BOOL opaque
 @property  double scale
 @property  {CGSize=dd} snapshotSize
 @property  BOOL allowsProtectedContent

  // instance methods
  -[_FBSSnapshotContext copyWithZone:]
  -[_FBSSnapshotContext .cxx_destruct]
  -[_FBSSnapshotContext scale]
  -[_FBSSnapshotContext isOpaque]
  -[_FBSSnapshotContext setScale:]
  -[_FBSSnapshotContext layers]
  -[_FBSSnapshotContext setOpaque:]
  -[_FBSSnapshotContext displayConfiguration]
  -[_FBSSnapshotContext allowsProtectedContent]
  -[_FBSSnapshotContext snapshotSize]
  -[_FBSSnapshotContext initWithDisplayConfiguration:layers:]
  -[_FBSSnapshotContext setSnapshotSize:]
  -[_FBSSnapshotContext setAllowsProtectedContent:]
  -[_FBSSnapshotContext initWithDisplayConfiguration:layer:]


_FBSSnapshotLayer : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int contextID
 @property  {CATransform3D=dddddddddddddddd} baseTransform

  // instance methods
  -[_FBSSnapshotLayer contextID]
  -[_FBSSnapshotLayer baseTransform]
  -[_FBSSnapshotLayer initWithContextID:baseTransform:]


FBSShutdownOptions : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, NSCopying>
 @property  long long LPEMOption
 @property  <NSCopying> *localContext
 @property  NSString *reason
 @property  long long rebootType
 @property  long long source
 @property  BOOL isShutdown
 @property  BOOL isReboot
 @property  BOOL isUserInitiated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSShutdownOptions init]
  -[FBSShutdownOptions copyWithZone:]
  -[FBSShutdownOptions setSource:]
  -[FBSShutdownOptions reason]
  -[FBSShutdownOptions .cxx_destruct]
  -[FBSShutdownOptions source]
  -[FBSShutdownOptions initWithReason:]
  -[FBSShutdownOptions succinctDescription]
  -[FBSShutdownOptions descriptionWithMultilinePrefix:]
  -[FBSShutdownOptions succinctDescriptionBuilder]
  -[FBSShutdownOptions descriptionBuilderWithMultilinePrefix:]
  -[FBSShutdownOptions encodeWithXPCDictionary:]
  -[FBSShutdownOptions initWithXPCDictionary:]
  -[FBSShutdownOptions localContext]
  -[FBSShutdownOptions setLocalContext:]
  -[FBSShutdownOptions setRebootType:]
  -[FBSShutdownOptions isUserInitiated]
  -[FBSShutdownOptions setLPEMOption:]
  -[FBSShutdownOptions isShutdown]
  -[FBSShutdownOptions isReboot]
  -[FBSShutdownOptions rebootType]
  -[FBSShutdownOptions LPEMOption]


FBSProcessResourceProvision : FBSProcessExecutionProvision
 @property  long long type
 @property  {?=qQQ} allowance

  // class methods
  +[FBSProcessResourceProvision provisionWithAllowance:]
  +[FBSProcessResourceProvision provisionWithResourceType:timeInterval:]

  // instance methods
  -[FBSProcessResourceProvision dealloc]
  -[FBSProcessResourceProvision copyWithZone:]
  -[FBSProcessResourceProvision type]
  -[FBSProcessResourceProvision .cxx_destruct]
  -[FBSProcessResourceProvision succinctDescriptionBuilder]
  -[FBSProcessResourceProvision _beginMonitoring]
  -[FBSProcessResourceProvision _updateProgress]
  -[FBSProcessResourceProvision _stopMonitoring]
  -[FBSProcessResourceProvision _prepareForReuse]
  -[FBSProcessResourceProvision initWithAllowance:]
  -[FBSProcessResourceProvision _queue_updateConsumption]
  -[FBSProcessResourceProvision _getElapsedCPUTimeForTaskPort:]
  -[FBSProcessResourceProvision _queue_noteAllowanceExhausted]
  -[FBSProcessResourceProvision _queue_stopMonitoring]
  -[FBSProcessResourceProvision _queue_evaluateConsumption]
  -[FBSProcessResourceProvision _queue_calculateValueConsumed:]
  -[FBSProcessResourceProvision allowanceRemaining:]
  -[FBSProcessResourceProvision isResourceProvision]
  -[FBSProcessResourceProvision allowance]
  -[FBSProcessResourceProvision setAllowance:]


FBSSceneClientSettingsDiff : FBSSettingsDiff
  // class methods
  +[FBSSceneClientSettingsDiff diffFromSettings:toSettings:]

  // instance methods
  -[FBSSceneClientSettingsDiff keyDescriptionForSetting:]
  -[FBSSceneClientSettingsDiff valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneClientSettingsDiff evaluateWithInspector:context:]
  -[FBSSceneClientSettingsDiff settingsByApplyingToMutableCopyOfSettings:]


FBSSceneSnapshotRequestHandle : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[FBSSceneSnapshotRequestHandle handleForRequestType:context:]

  // instance methods
  -[FBSSceneSnapshotRequestHandle .cxx_destruct]
  -[FBSSceneSnapshotRequestHandle performRequestForScene:]
  -[FBSSceneSnapshotRequestHandle initWithRequestType:context:]
  -[FBSSceneSnapshotRequestHandle _clearAction]
  -[FBSSceneSnapshotRequestHandle cancelRequest]


FBSSystemAppProxy : FBSServiceFacilityClient
  // class methods
  +[FBSSystemAppProxy checkoutProxyWithEndpoint:]

  // instance methods
  -[FBSSystemAppProxy .cxx_destruct]
  -[FBSSystemAppProxy isPasscodeLockedOrBlocked]
  -[FBSSystemAppProxy sendActions:withResult:]
  -[FBSSystemAppProxy handleMessage:withType:]
  -[FBSSystemAppProxy checkin]
  -[FBSSystemAppProxy fireCompletion:error:]
  -[FBSSystemAppProxy _sendMessageType:withMessage:withReplyHandler:waitForReply:]
  -[FBSSystemAppProxy clientCallbackQueue]
  -[FBSSystemAppProxy systemApplicationBundleIdentifier]
  -[FBSSystemAppProxy terminateApplication:forReason:andReport:withDescription:completion:]
  -[FBSSystemAppProxy terminateApplicationGroup:forReason:andReport:withDescription:completion:]
  -[FBSSystemAppProxy processHandleForBundleID:]
  -[FBSSystemAppProxy shutdownWithOptions:]
  -[FBSSystemAppProxy setKeyboardFocusApplication:deferringToken:completion:]
  -[FBSSystemAppProxy fireCompletion:openAppErrorCode:]
  -[FBSSystemAppProxy _handleConnect:]


FBSApplicationLibraryConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  Class applicationInfoClass
 @property  Class applicationPlaceholderClass
 @property  BOOL allowConcurrentLoading
 @property  @? installedApplicationFilter
 @property  @? placeholderFilter

  // instance methods
  -[FBSApplicationLibraryConfiguration init]
  -[FBSApplicationLibraryConfiguration copyWithZone:]
  -[FBSApplicationLibraryConfiguration .cxx_destruct]
  -[FBSApplicationLibraryConfiguration applicationInfoClass]
  -[FBSApplicationLibraryConfiguration applicationPlaceholderClass]
  -[FBSApplicationLibraryConfiguration installedApplicationFilter]
  -[FBSApplicationLibraryConfiguration placeholderFilter]
  -[FBSApplicationLibraryConfiguration allowConcurrentLoading]
  -[FBSApplicationLibraryConfiguration setApplicationInfoClass:]
  -[FBSApplicationLibraryConfiguration setApplicationPlaceholderClass:]
  -[FBSApplicationLibraryConfiguration setAllowConcurrentLoading:]
  -[FBSApplicationLibraryConfiguration setInstalledApplicationFilter:]
  -[FBSApplicationLibraryConfiguration setPlaceholderFilter:]


FBSSceneClientSettings : NSObject /usr/lib/libSystem.B.dylib <BSDebugDescriptionProviding, BSXPCSecureCoding, NSCopying, NSMutableCopying>
 @property  NSOrderedSet *layers
 @property  double preferredLevel
 @property  long long preferredInterfaceOrientation
 @property  NSSet *occlusions
 @property  NSString *preferredSceneHostIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneClientSettings settings]
  +[FBSSceneClientSettings supportsBSXPCSecureCoding]
  +[FBSSceneClientSettings _isMutable]

  // instance methods
  -[FBSSceneClientSettings init]
  -[FBSSceneClientSettings dealloc]
  -[FBSSceneClientSettings isEqual:]
  -[FBSSceneClientSettings copyWithZone:]
  -[FBSSceneClientSettings mutableCopyWithZone:]
  -[FBSSceneClientSettings .cxx_destruct]
  -[FBSSceneClientSettings initWithSettings:]
  -[FBSSceneClientSettings layers]
  -[FBSSceneClientSettings succinctDescription]
  -[FBSSceneClientSettings descriptionWithMultilinePrefix:]
  -[FBSSceneClientSettings succinctDescriptionBuilder]
  -[FBSSceneClientSettings descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneClientSettings encodeWithBSXPCCoder:]
  -[FBSSceneClientSettings initWithBSXPCCoder:]
  -[FBSSceneClientSettings debugDescriptionWithMultilinePrefix:]
  -[FBSSceneClientSettings keyDescriptionForSetting:]
  -[FBSSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[FBSSceneClientSettings preferredSceneHostIdentifier]
  -[FBSSceneClientSettings otherSettings]
  -[FBSSceneClientSettings occlusions]
  -[FBSSceneClientSettings _descriptionBuilderWithMultilinePrefix:debug:]
  -[FBSSceneClientSettings preferredLevel]
  -[FBSSceneClientSettings preferredInterfaceOrientation]


FBSMutableSceneClientSettings : FBSSceneClientSettings <BSDebugDescriptionProviding, BSXPCSecureCoding>
 @property  NSOrderedSet *layers
 @property  double preferredLevel
 @property  long long preferredInterfaceOrientation
 @property  NSSet *occlusions
 @property  NSString *preferredSceneHostIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSMutableSceneClientSettings _isMutable]

  // instance methods
  -[FBSMutableSceneClientSettings copyWithZone:]
  -[FBSMutableSceneClientSettings mutableCopyWithZone:]
  -[FBSMutableSceneClientSettings otherSettings]
  -[FBSMutableSceneClientSettings setOcclusions:]
  -[FBSMutableSceneClientSettings _setLayers:]
  -[FBSMutableSceneClientSettings setPreferredLevel:]
  -[FBSMutableSceneClientSettings setPreferredInterfaceOrientation:]
  -[FBSMutableSceneClientSettings setPreferredSceneHostIdentifier:]


FBSDisplayMode : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, NSCopying, NSSecureCoding>
 @property  {CGSize=dd} pixelSize
 @property  {CGSize=dd} nativePixelSize
 @property  double scale
 @property  {CGSize=dd} size
 @property  double refreshRate
 @property  long long colorGamut
 @property  long long hdrMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayMode supportsSecureCoding]
  +[FBSDisplayMode _emptyMode]

  // instance methods
  -[FBSDisplayMode init]
  -[FBSDisplayMode isEqual:]
  -[FBSDisplayMode copyWithZone:]
  -[FBSDisplayMode encodeWithCoder:]
  -[FBSDisplayMode initWithCoder:]
  -[FBSDisplayMode size]
  -[FBSDisplayMode scale]
  -[FBSDisplayMode _width]
  -[FBSDisplayMode _height]
  -[FBSDisplayMode encodeWithXPCDictionary:]
  -[FBSDisplayMode initWithXPCDictionary:]
  -[FBSDisplayMode _rotation]
  -[FBSDisplayMode hdrMode]
  -[FBSDisplayMode pixelSize]
  -[FBSDisplayMode colorGamut]
  -[FBSDisplayMode refreshRate]
  -[FBSDisplayMode nativePixelSize]
  -[FBSDisplayMode _initWithCADisplayMode:scale:rotation:]
  -[FBSDisplayMode _referenceSizeDescription]
  -[FBSDisplayMode _initWithWidth:height:preferredScale:scaleOverride:refreshRate:gamut:hdr:rotation:virtual:validityCheck:]
  -[FBSDisplayMode _initWithWidth:height:scale:refreshRate:gamut:hdr:]
  -[FBSDisplayMode _copyWithOverrideSize:]
  -[FBSDisplayMode _isVirtualMode]
  -[FBSDisplayMode _caWidth]
  -[FBSDisplayMode _caHeight]
  -[FBSDisplayMode _caPreferredScale]
  -[FBSDisplayMode _caRefreshRate]
  -[FBSDisplayMode _caColorGamut]
  -[FBSDisplayMode _caHDRMode]


FBSSceneSnapshotAction : FBSSceneAction <FBSSceneSnapshotRequestDelegate>
 @property  @? requestHandler
 @property  @? completionHandler
 @property  BOOL expired
 @property  double expirationInterval
 @property  BSSettings *clientExtendedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSSceneSnapshotAction .cxx_destruct]
  -[FBSSceneSnapshotAction setInvalidationHandler:]
  -[FBSSceneSnapshotAction completionHandler]
  -[FBSSceneSnapshotAction setCompletionHandler:]
  -[FBSSceneSnapshotAction encodeWithXPCDictionary:]
  -[FBSSceneSnapshotAction fallbackXPCEncodableClass]
  -[FBSSceneSnapshotAction initWithXPCDictionary:]
  -[FBSSceneSnapshotAction isExpired]
  -[FBSSceneSnapshotAction requestHandler]
  -[FBSSceneSnapshotAction setRequestHandler:]
  -[FBSSceneSnapshotAction executeRequestsWithHandler:completionHandler:expirationHandler:]
  -[FBSSceneSnapshotAction clientExtendedData]
  -[FBSSceneSnapshotAction setClientExtendedData:]
  -[FBSSceneSnapshotAction snapshotRequestAllowSnapshot:]
  -[FBSSceneSnapshotAction snapshotRequest:performWithContext:]
  -[FBSSceneSnapshotAction expirationInterval]
  -[FBSSceneSnapshotAction setExpired:]
  -[FBSSceneSnapshotAction _executeNextRequest]
  -[FBSSceneSnapshotAction _remainsActionable]
  -[FBSSceneSnapshotAction _finishAllRequests]
  -[FBSSceneSnapshotAction initWithRequests:expirationInterval:responseHandler:]


FBSProcessWatchdogPolicy : NSObject /usr/lib/libSystem.B.dylib <BSDescriptionProviding, NSCopying>
 @property  NSString *name
 @property  NSArray *provisions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSProcessWatchdogPolicy policyWithProvisions:]
  +[FBSProcessWatchdogPolicy policyWithName:forProvisions:]

  // instance methods
  -[FBSProcessWatchdogPolicy name]
  -[FBSProcessWatchdogPolicy copyWithZone:]
  -[FBSProcessWatchdogPolicy .cxx_destruct]
  -[FBSProcessWatchdogPolicy setName:]
  -[FBSProcessWatchdogPolicy succinctDescription]
  -[FBSProcessWatchdogPolicy descriptionWithMultilinePrefix:]
  -[FBSProcessWatchdogPolicy succinctDescriptionBuilder]
  -[FBSProcessWatchdogPolicy descriptionBuilderWithMultilinePrefix:]
  -[FBSProcessWatchdogPolicy provisions]
  -[FBSProcessWatchdogPolicy setProvisions:]


FBSBasicSceneAgent : NSObject /usr/lib/libSystem.B.dylib <FBSSceneAgent, BSDescriptionProviding>
 @property  <FBSSceneHandle> *scene
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneAgent .cxx_destruct]
  -[FBSBasicSceneAgent succinctDescription]
  -[FBSBasicSceneAgent descriptionWithMultilinePrefix:]
  -[FBSBasicSceneAgent succinctDescriptionBuilder]
  -[FBSBasicSceneAgent descriptionBuilderWithMultilinePrefix:]
  -[FBSBasicSceneAgent scene]
  -[FBSBasicSceneAgent scene:reviewEvent:withCompletion:]
  -[FBSBasicSceneAgent _configureWithScene:]
  -[FBSBasicSceneAgent didReceiveMessage:fromCounterpartAgent:withResponseSender:]


FBSBasicSceneHostAgent : FBSBasicSceneAgent <FBSSceneHostAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneHostAgent scene:didInitializeWithEvent:completion:]
  -[FBSBasicSceneHostAgent scene:willInvalidateWithEvent:completion:]


FBSBasicSceneClientAgent : FBSBasicSceneAgent <FBSSceneClientAgent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSBasicSceneClientAgent scene:didInitializeWithEvent:completion:]
  -[FBSBasicSceneClientAgent scene:willInvalidateWithEvent:completion:]
  -[FBSBasicSceneClientAgent scene:handleEvent:withCompletion:]


FBSSerialQueue : NSObject /usr/lib/libSystem.B.dylib <BSServiceDispatchingQueue>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSerialQueue queueWithMainRunLoopModes:]
  +[FBSSerialQueue queueWithDispatchQueue:]

  // instance methods
  -[FBSSerialQueue init]
  -[FBSSerialQueue dealloc]
  -[FBSSerialQueue isEqual:]
  -[FBSSerialQueue .cxx_destruct]
  -[FBSSerialQueue performAsync:]
  -[FBSSerialQueue assertOnQueue]
  -[FBSSerialQueue backingQueueIfExists]
  -[FBSSerialQueue performAsync:withHandoff:]
  -[FBSSerialQueue _setSynchronizingEnqueueSemaphore:forWorkspaceWithName:]
  -[FBSSerialQueue _hasNext]
  -[FBSSerialQueue _performNext]
  -[FBSSerialQueue _initWithDispatchQueue:mainRunLoopModes:]
  -[FBSSerialQueue _queue_performAsync:]
  -[FBSSerialQueue _queue_performNextIfPossible]
  -[FBSSerialQueue performAfter:withBlock:]
  -[FBSSerialQueue _performNextFromRunLoopSource]


FBSSceneClientIdentity : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSDescriptionProviding>
 @property  BOOL local
 @property  RBSProcessIdentity *processIdentity
 @property  NSString *bundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneClientIdentity identityForProcessIdentity:]
  +[FBSSceneClientIdentity localIdentity]
  +[FBSSceneClientIdentity identityForBundleID:]

  // instance methods
  -[FBSSceneClientIdentity init]
  -[FBSSceneClientIdentity isEqual:]
  -[FBSSceneClientIdentity copyWithZone:]
  -[FBSSceneClientIdentity .cxx_destruct]
  -[FBSSceneClientIdentity _init]
  -[FBSSceneClientIdentity bundleIdentifier]
  -[FBSSceneClientIdentity succinctDescription]
  -[FBSSceneClientIdentity descriptionWithMultilinePrefix:]
  -[FBSSceneClientIdentity succinctDescriptionBuilder]
  -[FBSSceneClientIdentity descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneClientIdentity processIdentity]
  -[FBSSceneClientIdentity isLocal]


FBSDisplayLayoutPublisher : NSObject /usr/lib/libSystem.B.dylib <BSServiceConnectionListenerDelegate, BSInvalidatable>
 @property  FBSDisplayConfiguration *displayConfiguration
 @property  long long interfaceOrientation
 @property  long long backlightLevel
 @property  BOOL transitioning
 @property  FBSDisplayLayout *currentLayout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSDisplayLayoutPublisher publisherWithConfiguration:]

  // instance methods
  -[FBSDisplayLayoutPublisher init]
  -[FBSDisplayLayoutPublisher invalidate]
  -[FBSDisplayLayoutPublisher .cxx_destruct]
  -[FBSDisplayLayoutPublisher addObserver:]
  -[FBSDisplayLayoutPublisher removeObserver:]
  -[FBSDisplayLayoutPublisher flush]
  -[FBSDisplayLayoutPublisher _initWithConfiguration:]
  -[FBSDisplayLayoutPublisher addElement:]
  -[FBSDisplayLayoutPublisher interfaceOrientation]
  -[FBSDisplayLayoutPublisher activate]
  -[FBSDisplayLayoutPublisher currentLayout]
  -[FBSDisplayLayoutPublisher displayConfiguration]
  -[FBSDisplayLayoutPublisher setInterfaceOrientation:]
  -[FBSDisplayLayoutPublisher setDisplayConfiguration:]
  -[FBSDisplayLayoutPublisher isTransitioning]
  -[FBSDisplayLayoutPublisher setBacklightLevel:]
  -[FBSDisplayLayoutPublisher backlightLevel]
  -[FBSDisplayLayoutPublisher listener:didReceiveConnection:withContext:]
  -[FBSDisplayLayoutPublisher _addElement:forKey:]
  -[FBSDisplayLayoutPublisher transitionAssertionWithReason:]


FBSDisplayLayoutPublisherConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *domainIdentifier
 @property  NSString *instanceIdentifier

  // instance methods
  -[FBSDisplayLayoutPublisherConfiguration setDomainIdentifier:]
  -[FBSDisplayLayoutPublisherConfiguration domainIdentifier]
  -[FBSDisplayLayoutPublisherConfiguration .cxx_destruct]
  -[FBSDisplayLayoutPublisherConfiguration instanceIdentifier]
  -[FBSDisplayLayoutPublisherConfiguration setInstanceIdentifier:]


FBSApplicationTerminationAssertion : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleID
 @property  NSString *reason
 @property  long long assertionState

  // class methods
  +[FBSApplicationTerminationAssertion _queue]

  // instance methods
  -[FBSApplicationTerminationAssertion dealloc]
  -[FBSApplicationTerminationAssertion invalidate]
  -[FBSApplicationTerminationAssertion reason]
  -[FBSApplicationTerminationAssertion .cxx_destruct]
  -[FBSApplicationTerminationAssertion bundleID]
  -[FBSApplicationTerminationAssertion assertionState]
  -[FBSApplicationTerminationAssertion initWithBundleID:reason:acquisitionHandler:]


FBSServiceFacilityClient : NSObject /usr/lib/libSystem.B.dylib <FBSServiceFacilityClientConfiguring, FBSServiceFacilityClientMessaging, BSInvalidatable>
 @property  BOOL configured
 @property  NSString *identifier
 @property  BSServiceQuality *serviceQuality
 @property  NSObject<OS_dispatch_queue> *calloutQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSServiceFacilityClient defaultShellEndpoint]

  // instance methods
  -[FBSServiceFacilityClient init]
  -[FBSServiceFacilityClient dealloc]
  -[FBSServiceFacilityClient invalidate]
  -[FBSServiceFacilityClient handleError:]
  -[FBSServiceFacilityClient .cxx_destruct]
  -[FBSServiceFacilityClient identifier]
  -[FBSServiceFacilityClient setIdentifier:]
  -[FBSServiceFacilityClient setInterface:]
  -[FBSServiceFacilityClient setEndpoint:]
  -[FBSServiceFacilityClient _lock_invalidate]
  -[FBSServiceFacilityClient activate]
  -[FBSServiceFacilityClient _isValid]
  -[FBSServiceFacilityClient initWithConfigurator:]
  -[FBSServiceFacilityClient setServiceQuality:]
  -[FBSServiceFacilityClient setInterfaceTarget:]
  -[FBSServiceFacilityClient serviceQuality]
  -[FBSServiceFacilityClient setCalloutQueue:]
  -[FBSServiceFacilityClient sendMessage:withType:replyHandler:waitForReply:timeout:]
  -[FBSServiceFacilityClient initWithIdentifier:calloutQueue:]
  -[FBSServiceFacilityClient calloutQueue]
  -[FBSServiceFacilityClient sendMessage:withType:]
  -[FBSServiceFacilityClient handleMessage:withType:]
  -[FBSServiceFacilityClient configureConnectMessage:]
  -[FBSServiceFacilityClient _queue_handleMessage:]
  -[FBSServiceFacilityClient _queue_handleError:]
  -[FBSServiceFacilityClient _lock_activate]
  -[FBSServiceFacilityClient isConfigured]


FBSSceneMessage : NSObject /usr/lib/libSystem.B.dylib <NSCopying, BSXPCCoding, BSDescriptionProviding>
 @property  BSMutableKeyedSettings *payload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FBSSceneMessage message]

  // instance methods
  -[FBSSceneMessage init]
  -[FBSSceneMessage copyWithZone:]
  -[FBSSceneMessage .cxx_destruct]
  -[FBSSceneMessage payload]
  -[FBSSceneMessage succinctDescription]
  -[FBSSceneMessage descriptionWithMultilinePrefix:]
  -[FBSSceneMessage succinctDescriptionBuilder]
  -[FBSSceneMessage descriptionBuilderWithMultilinePrefix:]
  -[FBSSceneMessage encodeWithXPCDictionary:]
  -[FBSSceneMessage fallbackXPCEncodableClass]
  -[FBSSceneMessage initWithXPCDictionary:]
  -[FBSSceneMessage _initWithPayload:]


FBSDisplayMonitor : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable>
 @property  NSObject<OS_dispatch_queue> *callOutQueue
 @property  BOOL canPostToBookendObserver
 @property  <FBSDisplayObserving> *bookendObserver
 @property  NSEnumerator *observersEnumerator
 @property  FBSDisplayIdentity *mainIdentity
 @property  FBSDisplayConfiguration *mainConfiguration
 @property  NSSet *connectedIdentities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayMonitor init]
  -[FBSDisplayMonitor dealloc]
  -[FBSDisplayMonitor invalidate]
  -[FBSDisplayMonitor .cxx_destruct]
  -[FBSDisplayMonitor addObserver:]
  -[FBSDisplayMonitor removeObserver:]
  -[FBSDisplayMonitor mainIdentity]
  -[FBSDisplayMonitor mainConfiguration]
  -[FBSDisplayMonitor callOutQueue]
  -[FBSDisplayMonitor _initWithBookendObserver:]
  -[FBSDisplayMonitor _lock_enumerateConnectedWithBlock:]
  -[FBSDisplayMonitor _lock_enumerateSourcesWithBlock:]
  -[FBSDisplayMonitor _sortedSources]
  -[FBSDisplayMonitor initWithInitializationCompletion:]
  -[FBSDisplayMonitor connectedIdentities]
  -[FBSDisplayMonitor configurationForIdentity:]
  -[FBSDisplayMonitor allowsUnknownDisplays]
  -[FBSDisplayMonitor setAllowsUnknownDisplays:]
  -[FBSDisplayMonitor _postInitialBookendObserverConnections]
  -[FBSDisplayMonitor canPostToBookendObserver]
  -[FBSDisplayMonitor bookendObserver]
  -[FBSDisplayMonitor observersEnumerator]


FBSApplicationUninstallOptions : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL userInitiated

  // class methods
  +[FBSApplicationUninstallOptions userInitiated]

  // instance methods
  -[FBSApplicationUninstallOptions setUserInitiated:]
  -[FBSApplicationUninstallOptions isUserInitiated]


FBSDisplaySource : NSObject /usr/lib/libSystem.B.dylib <BSInvalidatable, BSDescriptionProviding>
 @property  unsigned int displayID
 @property  BOOL allowsUnknown
 @property  FBSDisplayConfiguration *connectedConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplaySource init]
  -[FBSDisplaySource dealloc]
  -[FBSDisplaySource invalidate]
  -[FBSDisplaySource .cxx_destruct]
  -[FBSDisplaySource observeValueForKeyPath:ofObject:change:context:]
  -[FBSDisplaySource succinctDescription]
  -[FBSDisplaySource descriptionWithMultilinePrefix:]
  -[FBSDisplaySource succinctDescriptionBuilder]
  -[FBSDisplaySource descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplaySource displayID]
  -[FBSDisplaySource initWithMainDisplay:monitor:]
  -[FBSDisplaySource initWithNonMainDisplay:monitor:]
  -[FBSDisplaySource setAllowsUnknown:]
  -[FBSDisplaySource connectedConfiguration]
  -[FBSDisplaySource _initWithDisplay:monitor:isMain:]
  -[FBSDisplaySource _lock_update]
  -[FBSDisplaySource _lock_setConfiguration:]
  -[FBSDisplaySource _lock_noteConnected]
  -[FBSDisplaySource _lock_noteUpdated]
  -[FBSDisplaySource _lock_noteDisconnecting]
  -[FBSDisplaySource _lock_setAttachment:]
  -[FBSDisplaySource _lock_setReportedConfiguration:]
  -[FBSDisplaySource allowsUnknown]


FBSDisplayLayoutTransitionContext : NSObject /usr/lib/libSystem.B.dylib <BSXPCCoding, BSDescriptionProviding>
 @property  NSSet *transitionReasons
 @property  NSString *transitionReason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FBSDisplayLayoutTransitionContext .cxx_destruct]
  -[FBSDisplayLayoutTransitionContext succinctDescription]
  -[FBSDisplayLayoutTransitionContext descriptionWithMultilinePrefix:]
  -[FBSDisplayLayoutTransitionContext succinctDescriptionBuilder]
  -[FBSDisplayLayoutTransitionContext descriptionBuilderWithMultilinePrefix:]
  -[FBSDisplayLayoutTransitionContext encodeWithXPCDictionary:]
  -[FBSDisplayLayoutTransitionContext initWithXPCDictionary:]
  -[FBSDisplayLayoutTransitionContext transitionReason]
  -[FBSDisplayLayoutTransitionContext setTransitionReasons:]
  -[FBSDisplayLayoutTransitionContext transitionReasons]


NSError(FBSSceneEvent)
	// class methods
	+[NSError(FBSSceneEvent) sceneMessageErrorWithCode:]

01 00 0300 /System/Library/PrivateFrameworks/MobileInstallation.framework/MobileInstallation: AITransactionLog 
01 00 0700 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAnimationFenceAssertion 
01 00 0700 /System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices: BKSAnimationFenceHandle 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSTerminationAssertion 
01 00 0600 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSTerminationContext 
01 00 0000 BSAction 
01 00 0000 BSActionResponse 
01 00 0000 BSAtomicSignal 
01 00 0000 BSDescriptionBuilder 
01 00 0000 BSDispatchQueueAttributes 
01 00 0000 BSEqualsBuilder 
01 00 0000 BSError 
01 00 0000 BSHashBuilder 
01 00 0000 BSMachPortTaskNameRight 
01 00 0000 BSMonotonicReferenceTime 
01 00 0000 BSMutableIntegerMap 
01 00 0000 BSMutableKeyedSettings 
01 00 0000 BSMutableServiceInterface 
01 00 0000 BSMutableSettings 
01 00 0000 BSObjCProtocol 
01 00 0000 BSProcessHandle 
01 00 0000 BSServiceConnection 
01 00 0000 BSServiceConnectionEndpoint 
01 00 0000 BSServiceConnectionEndpointMonitor 
01 00 0000 BSServiceConnectionListener 
01 00 0000 BSServiceQuality 
01 00 0000 BSServicesConfiguration 
01 00 0000 BSSettingsDiff 
01 00 0000 BSSimpleAssertion 
01 00 0000 BSTimer 
01 00 0000 BSUIApplicationSupport 
01 00 0000 BSXPCCoder 
01 00 0000 BSXPCCodingArray 
01 00 1000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0c00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
