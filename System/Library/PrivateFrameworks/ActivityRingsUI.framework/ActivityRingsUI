|| __DATA.__data _ARUIRingPercentageValueNoRing
|| __DATA.__data _OBJC_METACLASS_$__TtC15ActivityRingsUI17SparksCelebration
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIAnimatableObjectPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIAnimatableProperty
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICGPointPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICelebration
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICelebrationFactory
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownDefaultTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownView
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIFloatPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIManualAnimationSequencer
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIRingsViewRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISprite
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpriteSheet
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpriteSheetFactory
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpriteTexture
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpritesParticleRenderer
|| __DATA.__objc_data _OBJC_CLASS_$__TtC15ActivityRingsUI17SparksCelebration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIAnimatableObjectPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIAnimatableProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICGPointPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICelebration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICelebrationFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownDefaultTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIFloatPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIManualAnimationSequencer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIRingsViewRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISprite
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpriteSheet
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpriteSheetFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpriteTexture
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpritesParticleRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIAnimatableObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIMetricColors
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRenderContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRenderer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingGroupAnimationState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingGroupController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingGroupGlobalAnimationSequencer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingsImageFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIAnimatableObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIMetricColors
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRenderContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRenderer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingGroupAnimationState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingGroupController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingGroupGlobalAnimationSequencer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingsImageFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingsView
|| __TEXT.__const _ActivityRingsUIVersionNumber
|| __TEXT.__const _ActivityRingsUIVersionString
|| __TEXT.__text _ActivityRingsUIFrameworkBundle
|| __TEXT.__text _NSStringFromARUICelebrationType
|| __TEXT.__text ___vfx_get_effect_class_Sparks
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectZero
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MetalKit: _OBJC_CLASS_$_MTKTextureLoader
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseInEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ VFX: _OBJC_CLASS_$__TtC3VFX11VFXRenderer
__ VFX: _OBJC_METACLASS_$__TtC3VFX9VFXEffect
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___invert_f4
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __simd_cos_f4
__ libSystem.B.dylib: __simd_sin_f4
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _drand48
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _powf
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_unexpectedError
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDataDetection.dylib: __swift_FORCE_LOAD_$_swiftDataDetection
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFileProvider.dylib: __swift_FORCE_LOAD_$_swiftFileProvider
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
ARUIRingsViewRenderer : ARUIRenderer
 @property  unsigned long maximumRingCount

  // class methods
  +[ARUIRingsViewRenderer rendererForRingGroupController:]
  +[ARUIRingsViewRenderer rendererForRingGroupControllers:]

  // instance methods
  -[ARUIRingsViewRenderer initWithMaximumRingCount:]
  -[ARUIRingsViewRenderer initWithMaximumRingCount:commandQueue:]
  -[ARUIRingsViewRenderer maximumRingCount]


ARUIRingsRenderPipelineConfiguration : NSObject
 @property  BOOL hasVisibleRings
 @property  BOOL hasEmptyRing
 @property  BOOL hasFilledRing
 @property  BOOL needsAlphaReductionPass
 @property  BOOL hasOverlappingRing

  // instance methods
  -[ARUIRingsRenderPipelineConfiguration hasVisibleRings]
  -[ARUIRingsRenderPipelineConfiguration setHasVisibleRings:]
  -[ARUIRingsRenderPipelineConfiguration hasEmptyRing]
  -[ARUIRingsRenderPipelineConfiguration setHasEmptyRing:]
  -[ARUIRingsRenderPipelineConfiguration hasFilledRing]
  -[ARUIRingsRenderPipelineConfiguration setHasFilledRing:]
  -[ARUIRingsRenderPipelineConfiguration needsAlphaReductionPass]
  -[ARUIRingsRenderPipelineConfiguration setNeedsAlphaReductionPass:]
  -[ARUIRingsRenderPipelineConfiguration hasOverlappingRing]
  -[ARUIRingsRenderPipelineConfiguration setHasOverlappingRing:]


ARUICountdownCancel : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownCancel identifier]

  // instance methods
  -[ARUICountdownCancel timingFunction]
  -[ARUICountdownCancel delay]
  -[ARUICountdownCancel identifier]
  -[ARUICountdownCancel cancel]
  -[ARUICountdownCancel cancelable]
  -[ARUICountdownCancel duration]
  -[ARUICountdownCancel applyToCountdownView:completion:]


ARUIRenderer : NSObject
 @property  unsigned long renderStyle

  // instance methods
  -[ARUIRenderer clearCaches]
  -[ARUIRenderer .cxx_destruct]
  -[ARUIRenderer init]
  -[ARUIRenderer initWithCommandQueue:]
  -[ARUIRenderer renderStyle]
  -[ARUIRenderer initWithRenderStyle:commandQueue:]
  -[ARUIRenderer renderPipelineFactoryWithDeviceSPI:librarySPI:]
  -[ARUIRenderer _renderRings:spriteSheet:intoTexture:presentingDrawable:withContext:waitUntilCompleted:completion:]
  -[ARUIRenderer _renderRings:commandEncoder:passDescriptor:commandBuffer:withContext:]
  -[ARUIRenderer ringsRenderPipelineConfigurationForRings:context:]
  -[ARUIRenderer _snapshotRings:spriteSheet:withContext:]
  -[ARUIRenderer snapshotRings:spriteSheet:withContext:]
  -[ARUIRenderer initWithRenderStyle:]
  -[ARUIRenderer renderPipelineFactoryWithDevice:library:]
  -[ARUIRenderer renderRings:intoDrawable:withContext:]
  -[ARUIRenderer renderRings:intoDrawable:withContext:completion:]
  -[ARUIRenderer renderRings:spriteSheet:intoDrawable:withContext:]
  -[ARUIRenderer renderRings:spriteSheet:intoDrawable:withContext:completion:]
  -[ARUIRenderer _renderRings:passDescriptor:commandBuffer:withContext:]
  -[ARUIRenderer snapshotRings:withContext:]
  -[ARUIRenderer renderRingGroupControllers:withSize:intoTexture:withDrawable:waitUntilCompleted:completionHandler:]
  -[ARUIRenderer snapshotRingGroupControllers:withSize:]


ARUICountdownFadeIn : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownFadeIn identifier]

  // instance methods
  -[ARUICountdownFadeIn timingFunction]
  -[ARUICountdownFadeIn delay]
  -[ARUICountdownFadeIn identifier]
  -[ARUICountdownFadeIn cancelable]
  -[ARUICountdownFadeIn duration]
  -[ARUICountdownFadeIn applyToCountdownView:completion:]


ARUIRingsAlphaReductionState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsAlphaReductionState name]
  -[ARUIRingsAlphaReductionState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsAlphaReductionState shouldRunStateForRing:]


ARUIRingGroupAnimationState : NSObject <ARUIRingGroupAnimationDelegate>
 @property  ARUIRingGroupAnimationState *nextAnimationState
 @property  NSMutableSet *trackedAnimations
 @property  double duration
 @property  CAMediaTimingFunction *timingFunction
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingGroupAnimationState popAnimationState]
  +[ARUIRingGroupAnimationState pushAnimationState:]
  +[ARUIRingGroupAnimationState currentAnimationState]

  // instance methods
  -[ARUIRingGroupAnimationState completion]
  -[ARUIRingGroupAnimationState setCompletion:]
  -[ARUIRingGroupAnimationState timingFunction]
  -[ARUIRingGroupAnimationState animationDidComplete:]
  -[ARUIRingGroupAnimationState setTimingFunction:]
  -[ARUIRingGroupAnimationState .cxx_destruct]
  -[ARUIRingGroupAnimationState setDuration:]
  -[ARUIRingGroupAnimationState init]
  -[ARUIRingGroupAnimationState addAnimation:]
  -[ARUIRingGroupAnimationState duration]
  -[ARUIRingGroupAnimationState setNextAnimationState:]
  -[ARUIRingGroupAnimationState trackedAnimations]
  -[ARUIRingGroupAnimationState nextAnimationState]
  -[ARUIRingGroupAnimationState setTrackedAnimations:]


ARUIObserverStore : NSObject
 @property  unsigned long count

  // instance methods
  -[ARUIObserverStore enumerateObserversWithBlock:]
  -[ARUIObserverStore .cxx_destruct]
  -[ARUIObserverStore count]
  -[ARUIObserverStore init]
  -[ARUIObserverStore addObserver:]
  -[ARUIObserverStore removeObserver:]


ARUIRingsFillState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsFillState name]
  -[ARUIRingsFillState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsFillState shouldRunStateForRing:]


ARUIGridSpriteGenerator : NSObject
  // class methods
  +[ARUIGridSpriteGenerator generatorWithSpriteCount:framesPerSprite:rowsPerSprite:columnsPerSprite:]

  // instance methods
  -[ARUIGridSpriteGenerator frameSize]
  -[ARUIGridSpriteGenerator initWithSpriteCount:framesPerSprite:rowsPerSprite:columnsPerSprite:]
  -[ARUIGridSpriteGenerator originForSpriteAtIndex:]
  -[ARUIGridSpriteGenerator spriteAtIndex:]
  -[ARUIGridSpriteGenerator generateSprites]


ARUICelebration : NSObject <NSCopying>
 @property  _TtC3VFX8VFXScene *scene
 @property  double duration
 @property  unsigned long type

  // instance methods
  -[ARUICelebration .cxx_destruct]
  -[ARUICelebration scene]
  -[ARUICelebration type]
  -[ARUICelebration copyWithZone:]
  -[ARUICelebration duration]
  -[ARUICelebration apply:context:]
  -[ARUICelebration updateDeltaTime:]


ARUIRingGroup : NSObject <ARUIAnimationObserver, NSCopying>
 @property  ARUIRingGroup *forWatch
 @property  ARUIRingGroup *forCompanion
 @property  ARUIRingGroup *withSpriteSheet
 @property  ARUIRingGroup *withWheelchairSpriteSheet
 @property  long long ringType
 @property  NSArray *rings
 @property  ARUISpriteSheet *spriteSheet
 @property  <ARUIRingGroupDelegate> *delegate
 @property  float groupDiameter
 @property  float interspacing
 @property  BOOL paused
 @property  BOOL animating
 @property  float thickness
 @property  float opacity
 @property  float emptyOpacity
 @property  float trackOpacity
 @property  float scale
 @property  float zRotation
 @property  void translation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingGroup animateWithDuration:animations:completion:]
  +[ARUIRingGroup animateWithDuration:animations:]
  +[ARUIRingGroup activityRingGroup]
  +[ARUIRingGroup animateWithDuration:animations:curve:completion:]
  +[ARUIRingGroup _timingFunctionForCurve:]
  +[ARUIRingGroup countdownRingGroup]
  +[ARUIRingGroup activityRingGroupForRingType:]
  +[ARUIRingGroup countdownRingGroupOnCompanion]
  +[ARUIRingGroup _numberOfRingsForRingType:]

  // instance methods
  -[ARUIRingGroup setOpacity:]
  -[ARUIRingGroup opacity]
  -[ARUIRingGroup .cxx_destruct]
  -[ARUIRingGroup paused]
  -[ARUIRingGroup rings]
  -[ARUIRingGroup animating]
  -[ARUIRingGroup translation]
  -[ARUIRingGroup forWatch]
  -[ARUIRingGroup setDelegate:]
  -[ARUIRingGroup thickness]
  -[ARUIRingGroup removeAllAnimations]
  -[ARUIRingGroup setPaused:]
  -[ARUIRingGroup setScale:]
  -[ARUIRingGroup delegate]
  -[ARUIRingGroup copyWithZone:]
  -[ARUIRingGroup scale]
  -[ARUIRingGroup zRotation]
  -[ARUIRingGroup setThickness:]
  -[ARUIRingGroup setZRotation:]
  -[ARUIRingGroup setTranslation:]
  -[ARUIRingGroup setActiveEnergyPercentage:animated:]
  -[ARUIRingGroup setExerciseMinutesPercentage:animated:]
  -[ARUIRingGroup setStandHoursPercentage:animated:]
  -[ARUIRingGroup setEmptyOpacity:]
  -[ARUIRingGroup setSpriteSheet:]
  -[ARUIRingGroup playSpriteAnimation]
  -[ARUIRingGroup setActiveEnergyPercentage:exerciseMinutesPercentage:standHoursPercentage:animated:completion:]
  -[ARUIRingGroup setGroupDiameter:]
  -[ARUIRingGroup setInterspacing:]
  -[ARUIRingGroup setPercentage:ofRingAtIndex:animated:]
  -[ARUIRingGroup setTopColor:bottomColor:ofRingAtIndex:]
  -[ARUIRingGroup setPercentage:ofRingAtIndex:]
  -[ARUIRingGroup setTrackOpacity:]
  -[ARUIRingGroup spriteSheet]
  -[ARUIRingGroup initWithNumberOfRings:animationSequencer:]
  -[ARUIRingGroup initWithRings:animationSequencer:]
  -[ARUIRingGroup _setDefaultGroupValues:]
  -[ARUIRingGroup emptyOpacity]
  -[ARUIRingGroup trackOpacity]
  -[ARUIRingGroup groupDiameter]
  -[ARUIRingGroup interspacing]
  -[ARUIRingGroup ringType]
  -[ARUIRingGroup setRingType:]
  -[ARUIRingGroup _setupFloatAnimationForState:startValue:endValue:key:applier:]
  -[ARUIRingGroup _updateRingGroupLayout]
  -[ARUIRingGroup _positionSprites]
  -[ARUIRingGroup _updateAnimationObserving]
  -[ARUIRingGroup _setupFloat2AnimationForState:startValue:endValue:key:applier:]
  -[ARUIRingGroup setPercentage:ofRingAtIndex:fromAnimation:]
  -[ARUIRingGroup _removeAnimationForKey:]
  -[ARUIRingGroup playSpriteAnimationWithCompletion:]
  -[ARUIRingGroup setFrame:ofSpriteAtIndex:]
  -[ARUIRingGroup playCelebration:onRingAtIndex:completion:]
  -[ARUIRingGroup _setupUIntAnimationForState:startValue:endValue:key:applier:]
  -[ARUIRingGroup _shouldObserveSequencer]
  -[ARUIRingGroup animationSequencer:updatedWithTime:]
  -[ARUIRingGroup initWithNumberOfRings:]
  -[ARUIRingGroup playCelebration:onRingAtIndex:]
  -[ARUIRingGroup setPercentage:ofRingAtIndex:animated:completion:]
  -[ARUIRingGroup withSpriteSheet]
  -[ARUIRingGroup forCompanion]
  -[ARUIRingGroup _ringPercentageAdjustedForProximityToFull:withRingDiameter:thickness:]
  -[ARUIRingGroup _adjustedDurationForRingWithIndex:startPercentage:targetPercentage:defaultDuration:]
  -[ARUIRingGroup withWheelchairSpriteSheet]
  -[ARUIRingGroup playingSpriteAnimation]


ARUIRingGroupController : ARUIAnimatableObject
 @property  long long numberOfRings
 @property  ARUIRingGroup *ringGroup
 @property  ARUISpriteSheet *spriteSheet
 @property  {CGPoint=dd} center
 @property  float emptyOpacity
 @property  float opacity
 @property  float ringDiameter
 @property  float ringIconSize
 @property  float ringInterspacing
 @property  float ringThickness
 @property  float ringScale
 @property  float trackOpacity
 @property  float zRotation
 @property  double backingOrigin
 @property  double additionalSpacingAtIndex

  // class methods
  +[ARUIRingGroupController defaultAnimationDuration]
  +[ARUIRingGroupController animationTimingFunction]
  +[ARUIRingGroupController ringGroupControllerConfiguredForWatchWithRingType:withIcon:]
  +[ARUIRingGroupController ringGroupControllerConfiguredForCompanionWithRingType:withIcon:]

  // instance methods
  -[ARUIRingGroupController setOpacity:]
  -[ARUIRingGroupController opacity]
  -[ARUIRingGroupController setCenter:]
  -[ARUIRingGroupController .cxx_destruct]
  -[ARUIRingGroupController center]
  -[ARUIRingGroupController init]
  -[ARUIRingGroupController zRotation]
  -[ARUIRingGroupController setZRotation:]
  -[ARUIRingGroupController ringDiameter]
  -[ARUIRingGroupController setRingDiameter:]
  -[ARUIRingGroupController setRingThickness:]
  -[ARUIRingGroupController setRingInterspacing:]
  -[ARUIRingGroupController ringThickness]
  -[ARUIRingGroupController ringInterspacing]
  -[ARUIRingGroupController ringGroup]
  -[ARUIRingGroupController setActiveEnergyPercentage:animated:]
  -[ARUIRingGroupController setEmptyOpacity:]
  -[ARUIRingGroupController setSpriteSheet:]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setTopColor:bottomColor:ofRingAtIndex:]
  -[ARUIRingGroupController initWithRingGroup:]
  -[ARUIRingGroupController setTrackOpacity:]
  -[ARUIRingGroupController spriteSheet]
  -[ARUIRingGroupController emptyOpacity]
  -[ARUIRingGroupController trackOpacity]
  -[ARUIRingGroupController initWithNumberOfRings:]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:completion:]
  -[ARUIRingGroupController numberOfRings]
  -[ARUIRingGroupController ringScale]
  -[ARUIRingGroupController setRingScale:]
  -[ARUIRingGroupController addAnimation:forRingGroupPropertyType:]
  -[ARUIRingGroupController setTopColor:bottomColor:]
  -[ARUIRingGroupController setTopColor:bottomColor:contrastColor:ofRingAtIndex:]
  -[ARUIRingGroupController setOpacity:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingDiameter:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingThickness:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingInterspacing:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingIconSize:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingIconPosition:ofRingAtIndex:animated:]
  -[ARUIRingGroupController addOpacityAnimation:forRingAtIndex:]
  -[ARUIRingGroupController diameterForRingAtIndex:]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:duration:timingFunction:completion:]
  -[ARUIRingGroupController ringIconSize]
  -[ARUIRingGroupController setRingIconSize:]
  -[ARUIRingGroupController backingOrigin]
  -[ARUIRingGroupController setBackingOrigin:]
  -[ARUIRingGroupController additionalSpacingAtIndex]
  -[ARUIRingGroupController setAdditionalSpacingAtIndex:]
  -[ARUIRingGroupController setDotPercentage:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setIconDotTextureOrigin:ofRingAtIndex:]
  -[ARUIRingGroupController setIconFirstFrameOrigin:frameSize:frameCount:columns:ofRingAtIndex:]
  -[ARUIRingGroupController setBriskPercentage:animated:]
  -[ARUIRingGroupController setMovingHoursPercentage:animated:]
  -[ARUIRingGroupController addCelebration:toRingAtIndex:]
  -[ARUIRingGroupController removeCelebration:fromRingAtIndex:]
  -[ARUIRingGroupController setActiveEnergyPercentage:briskPercentage:movingHoursPercentage:animated:completion:]


ARUIRingsView : UIView <ARUIRingGroupDelegate>
 @property  ARUIRingGroup *ringGroup
 @property  ARUIRenderer *renderer
 @property  BOOL shouldBypassApplicationStateChecking
 @property  BOOL discardBackBuffers
 @property  BOOL shouldRenderOnLayout
 @property  BOOL shouldCheckDrawableAvailable
 @property  CAMetalLayer *metalLayer
 @property  UIImage *snapshot
 @property  ARUIRingGroupController *ringGroupController
 @property  NSArray *ringGroupControllers
 @property  long long preferredFramesPerSecond
 @property  BOOL viewIsVisible
 @property  BOOL paused
 @property  BOOL synchronizesWithCA
 @property  double emptyRingAlpha
 @property  unsigned long iconTextureRows
 @property  unsigned long iconTextureColumns
 @property  UIImage *iconSpriteImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingsView layerClass]
  +[ARUIRingsView clearSharedCaches]
  +[ARUIRingsView ringsViewConfiguredForWatchOfType:withIcon:renderer:]
  +[ARUIRingsView ringsViewConfiguredForCompanionOfType:withRenderer:]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnWatch]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnWatchWithRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:withRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:withIcon:]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnCompanion]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnCompanionWithRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnCompanionOfType:]

  // instance methods
  -[ARUIRingsView viewIsVisible]
  -[ARUIRingsView renderer]
  -[ARUIRingsView willMoveToWindow:]
  -[ARUIRingsView setOpaque:]
  -[ARUIRingsView .cxx_destruct]
  -[ARUIRingsView _didEnterBackground:]
  -[ARUIRingsView setFrame:]
  -[ARUIRingsView layoutSubviews]
  -[ARUIRingsView setPreferredFramesPerSecond:]
  -[ARUIRingsView snapshot]
  -[ARUIRingsView _willEnterForeground:]
  -[ARUIRingsView setPaused:]
  -[ARUIRingsView preferredFramesPerSecond]
  -[ARUIRingsView setContentMode:]
  -[ARUIRingsView setBounds:]
  -[ARUIRingsView isPaused]
  -[ARUIRingsView metalLayer]
  -[ARUIRingsView ringGroup]
  -[ARUIRingsView setActiveEnergyPercentage:animated:]
  -[ARUIRingsView setShouldBypassApplicationStateChecking:]
  -[ARUIRingsView initWithRingGroup:renderer:]
  -[ARUIRingsView initWithRingGroup:]
  -[ARUIRingsView emptyRingAlpha]
  -[ARUIRingsView shouldBypassApplicationStateChecking]
  -[ARUIRingsView ringGroupHasUpdated:]
  -[ARUIRingsView _sharedInitWithWithRingGroupControllers:renderer:]
  -[ARUIRingsView _sharedInitWithRingGroups:renderer:]
  -[ARUIRingsView _updateRenderContext]
  -[ARUIRingsView _shouldAllowRendering]
  -[ARUIRingsView _discardBackBuffers]
  -[ARUIRingsView _allRings]
  -[ARUIRingsView _anySpriteSheet]
  -[ARUIRingsView _updateRingGroupPauseState]
  -[ARUIRingsView initWithRingGroupController:]
  -[ARUIRingsView initWithRingGroupController:renderer:]
  -[ARUIRingsView initWithRingGroupControllers:]
  -[ARUIRingsView initWithRingGroupControllers:renderer:]
  -[ARUIRingsView ringGroupController]
  -[ARUIRingsView ringGroupControllers]
  -[ARUIRingsView initWithRingGroups:]
  -[ARUIRingsView initWithRingGroups:renderer:]
  -[ARUIRingsView ringGroups]
  -[ARUIRingsView setSynchronizesWithCA:]
  -[ARUIRingsView synchronizesWithCA]
  -[ARUIRingsView discardBackBuffers]
  -[ARUIRingsView setDiscardBackBuffers:]
  -[ARUIRingsView shouldRenderOnLayout]
  -[ARUIRingsView setShouldRenderOnLayout:]
  -[ARUIRingsView shouldCheckDrawableAvailable]
  -[ARUIRingsView setShouldCheckDrawableAvailable:]
  -[ARUIRingsView setEmptyRingAlpha:]
  -[ARUIRingsView iconTextureRows]
  -[ARUIRingsView setIconTextureRows:]
  -[ARUIRingsView iconTextureColumns]
  -[ARUIRingsView setIconTextureColumns:]
  -[ARUIRingsView iconSpriteImage]
  -[ARUIRingsView setIconSpriteImage:]
  -[ARUIRingsView setBriskPercentage:animated:]
  -[ARUIRingsView setMovingHoursPercentage:animated:]
  -[ARUIRingsView setActiveEnergyPercentage:briskPercentage:movingHoursPercentage:animated:completion:]


ARUICountdownAnimator : NSObject
 @property  ARUICountdownTimeline *timeline
 @property  ARUICountdownView *countdownView
 @property  <ARUICountdownAnimatorDelegate> *delegate

  // instance methods
  -[ARUICountdownAnimator .cxx_destruct]
  -[ARUICountdownAnimator timeline]
  -[ARUICountdownAnimator setDelegate:]
  -[ARUICountdownAnimator isAnimating]
  -[ARUICountdownAnimator canceled]
  -[ARUICountdownAnimator delegate]
  -[ARUICountdownAnimator setTimeline:]
  -[ARUICountdownAnimator initWithTimeline:]
  -[ARUICountdownAnimator cancelAnimations]
  -[ARUICountdownAnimator countdownView]
  -[ARUICountdownAnimator setCountdownView:]
  -[ARUICountdownAnimator prepareToAnimate]
  -[ARUICountdownAnimator _delegate_willBeginAnimating]
  -[ARUICountdownAnimator _applyAnimationAtIndex:]
  -[ARUICountdownAnimator _delegate_didFinishAnimating]
  -[ARUICountdownAnimator _delegate_willBeginAnimation:afterDelay:]
  -[ARUICountdownAnimator _delegate_performingAnimation:withDuration:]
  -[ARUICountdownAnimator _delegate_completedAnimation:]
  -[ARUICountdownAnimator _applyCancelAnimationAtIndex:]
  -[ARUICountdownAnimator beginAnimations]


ARUIRing : NSObject <NSCopying>
 @property  UIColor *topColor
 @property  UIColor *bottomColor
 @property  float diameter
 @property  float thickness
 @property  float percentage
 @property  float opacity
 @property  float emptyOpacity
 @property  float trackOpacity
 @property  float scale
 @property  float zRotation
 @property  void translation
 @property  ARUICelebration *celebration
 @property  void topColorVector
 @property  void topColorPremultipliedVector
 @property  void bottomColorVector
 @property  void bottomColorPremultipliedVector

  // class methods
  +[ARUIRing randomRing]

  // instance methods
  -[ARUIRing setOpacity:]
  -[ARUIRing opacity]
  -[ARUIRing setDiameter:]
  -[ARUIRing .cxx_destruct]
  -[ARUIRing translation]
  -[ARUIRing init]
  -[ARUIRing isEqual:]
  -[ARUIRing thickness]
  -[ARUIRing setScale:]
  -[ARUIRing percentage]
  -[ARUIRing copyWithZone:]
  -[ARUIRing scale]
  -[ARUIRing diameter]
  -[ARUIRing topColor]
  -[ARUIRing zRotation]
  -[ARUIRing setThickness:]
  -[ARUIRing setZRotation:]
  -[ARUIRing bottomColor]
  -[ARUIRing setTranslation:]
  -[ARUIRing setPercentage:]
  -[ARUIRing setTopColor:]
  -[ARUIRing setBottomColor:]
  -[ARUIRing setEmptyOpacity:]
  -[ARUIRing setTrackOpacity:]
  -[ARUIRing emptyOpacity]
  -[ARUIRing trackOpacity]
  -[ARUIRing setCelebration:]
  -[ARUIRing topColorVector]
  -[ARUIRing topColorPremultipliedVector]
  -[ARUIRing bottomColorVector]
  -[ARUIRing bottomColorPremultipliedVector]
  -[ARUIRing _updatePremultipliedTopColor]
  -[ARUIRing _updatePremultipliedBottomColor]
  -[ARUIRing initWithRing:]
  -[ARUIRing celebration]


ARUISpriteUniforms : NSObject
 @property  {?={?=[4]}} vertexAttributes
 @property  {?=f} uniforms

  // instance methods
  -[ARUISpriteUniforms vertexAttributes]
  -[ARUISpriteUniforms uniforms]
  -[ARUISpriteUniforms _updateVertexAttributesWithSprite:inContet:]
  -[ARUISpriteUniforms _updateUniformsWithSprite:]
  -[ARUISpriteUniforms initWithSprite:inContext:]
  -[ARUISpriteUniforms vertexAttributesBytes]
  -[ARUISpriteUniforms uniformsBytes]


ARUIFloat2Animation : NSObject <ARUIRingGroupAnimation>
 @property  <ARUIRingGroupAnimationDelegate> *delegate
 @property  double duration
 @property  void startValue
 @property  void currentValue
 @property  void endValue
 @property  CAMediaTimingFunction *timingFunction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIFloat2Animation animationWithDuration:startValue:endValue:timingFunction:applier:]

  // instance methods
  -[ARUIFloat2Animation currentValue]
  -[ARUIFloat2Animation timingFunction]
  -[ARUIFloat2Animation .cxx_destruct]
  -[ARUIFloat2Animation setDelegate:]
  -[ARUIFloat2Animation isAnimating]
  -[ARUIFloat2Animation endValue]
  -[ARUIFloat2Animation update:]
  -[ARUIFloat2Animation delegate]
  -[ARUIFloat2Animation dealloc]
  -[ARUIFloat2Animation completeAnimation]
  -[ARUIFloat2Animation duration]
  -[ARUIFloat2Animation startValue]
  -[ARUIFloat2Animation initWithDuration:startValue:endValue:timingFunction:applier:]


ARUICountdownView : ARUIRingsView
 @property  ARUIRingGroupController *countdownController

  // class methods
  +[ARUICountdownView countdownViewConfiguredForWatch]
  +[ARUICountdownView countdownViewConfiguredForCompanion]
  +[ARUICountdownView countdownViewConfiguredForDisplayWithRingDiameter:]

  // instance methods
  -[ARUICountdownView ringGroup]
  -[ARUICountdownView countdownController]
  -[ARUICountdownView backingTrackRingGroup]


ARUIRingsImageView : UIImageView <ARUIRingGroupDelegate>
 @property  ARUIRingGroup *ringGroup
 @property  ARUIRenderer *renderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIRingsImageView renderer]
  -[ARUIRingsImageView .cxx_destruct]
  -[ARUIRingsImageView setFrame:]
  -[ARUIRingsImageView layoutSubviews]
  -[ARUIRingsImageView setBounds:]
  -[ARUIRingsImageView ringGroup]
  -[ARUIRingsImageView initWithRingGroup:renderer:]
  -[ARUIRingsImageView initWithRingGroup:]
  -[ARUIRingsImageView ringGroupHasUpdated:]
  -[ARUIRingsImageView _updateRenderContext]
  -[ARUIRingsImageView _renderImage]


ARUICountdownPreCancel : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownPreCancel identifier]

  // instance methods
  -[ARUICountdownPreCancel delay]
  -[ARUICountdownPreCancel identifier]
  -[ARUICountdownPreCancel cancelable]
  -[ARUICountdownPreCancel duration]
  -[ARUICountdownPreCancel applyToCountdownView:completion:]


ARUISpriteSheet : NSObject <NSCopying>
 @property  ARUISpriteTexture *texture
 @property  NSArray *sprites

  // instance methods
  -[ARUISpriteSheet texture]
  -[ARUISpriteSheet .cxx_destruct]
  -[ARUISpriteSheet sprites]
  -[ARUISpriteSheet copyWithZone:]
  -[ARUISpriteSheet initWithSpriteSheet:]
  -[ARUISpriteSheet initWithTexture:sprites:]


ARUISpriteUniformsCacheKey : NSObject
 @property  unsigned long hashValue

  // class methods
  +[ARUISpriteUniformsCacheKey keyForSprite:context:]

  // instance methods
  -[ARUISpriteUniformsCacheKey isEqual:]
  -[ARUISpriteUniformsCacheKey hashValue]
  -[ARUISpriteUniformsCacheKey initWithSprite:context:]


ARUISpriteUniformsCache : NSObject
  // class methods
  +[ARUISpriteUniformsCache defaultCache]
  +[ARUISpriteUniformsCache cacheWithLimit:]

  // instance methods
  -[ARUISpriteUniformsCache clearCache]
  -[ARUISpriteUniformsCache .cxx_destruct]
  -[ARUISpriteUniformsCache initWithLimit:]
  -[ARUISpriteUniformsCache uniformsForSprite:renderedInContext:]


ARUIAnimatableObjectPropertyAnimation : NSObject
 @property  double duration
 @property  @? completionHandler
 @property  id _startValue
 @property  id _endValue
 @property  id _currentValue

  // class methods
  +[ARUIAnimatableObjectPropertyAnimation timingFunctionForMediaTimingFunction:]
  +[ARUIAnimatableObjectPropertyAnimation linearTimingFunction]
  +[ARUIAnimatableObjectPropertyAnimation animationWithDuration:timingFunction:completion:]

  // instance methods
  -[ARUIAnimatableObjectPropertyAnimation .cxx_destruct]
  -[ARUIAnimatableObjectPropertyAnimation _endValue]
  -[ARUIAnimatableObjectPropertyAnimation _startValue]
  -[ARUIAnimatableObjectPropertyAnimation update:]
  -[ARUIAnimatableObjectPropertyAnimation _currentValue]
  -[ARUIAnimatableObjectPropertyAnimation completionHandler]
  -[ARUIAnimatableObjectPropertyAnimation duration]
  -[ARUIAnimatableObjectPropertyAnimation isFinishedAnimating]
  -[ARUIAnimatableObjectPropertyAnimation _updateWithProgress:]
  -[ARUIAnimatableObjectPropertyAnimation _setStartValue:]
  -[ARUIAnimatableObjectPropertyAnimation _setEndValue:]
  -[ARUIAnimatableObjectPropertyAnimation _setCurrentValue:]
  -[ARUIAnimatableObjectPropertyAnimation valueByAddingCurrentValueToValue:]
  -[ARUIAnimatableObjectPropertyAnimation callAndReleaseCompletionHandler]


ARUIFloatPropertyAnimation : ARUIAnimatableObjectPropertyAnimation
 @property  float startValue
 @property  float endValue
 @property  float currentValue

  // class methods
  +[ARUIFloatPropertyAnimation animationWithEndingFloatValue:duration:customTimingFunction:completion:]
  +[ARUIFloatPropertyAnimation animationWithEndingFloatValue:duration:timingFunction:completion:]

  // instance methods
  -[ARUIFloatPropertyAnimation currentValue]
  -[ARUIFloatPropertyAnimation _endValue]
  -[ARUIFloatPropertyAnimation _startValue]
  -[ARUIFloatPropertyAnimation endValue]
  -[ARUIFloatPropertyAnimation _currentValue]
  -[ARUIFloatPropertyAnimation startValue]
  -[ARUIFloatPropertyAnimation _updateWithProgress:]
  -[ARUIFloatPropertyAnimation _setStartValue:]
  -[ARUIFloatPropertyAnimation _setEndValue:]
  -[ARUIFloatPropertyAnimation _setCurrentValue:]
  -[ARUIFloatPropertyAnimation valueByAddingCurrentValueToValue:]


ARUICGPointPropertyAnimation : ARUIAnimatableObjectPropertyAnimation
 @property  {CGPoint=dd} startValue
 @property  {CGPoint=dd} endValue
 @property  {CGPoint=dd} currentValue

  // class methods
  +[ARUICGPointPropertyAnimation animationWithEndingCGPointValue:duration:timingFunction:completion:]

  // instance methods
  -[ARUICGPointPropertyAnimation currentValue]
  -[ARUICGPointPropertyAnimation _endValue]
  -[ARUICGPointPropertyAnimation _startValue]
  -[ARUICGPointPropertyAnimation endValue]
  -[ARUICGPointPropertyAnimation _currentValue]
  -[ARUICGPointPropertyAnimation startValue]
  -[ARUICGPointPropertyAnimation _updateWithProgress:]
  -[ARUICGPointPropertyAnimation _setStartValue:]
  -[ARUICGPointPropertyAnimation _setEndValue:]
  -[ARUICGPointPropertyAnimation _setCurrentValue:]
  -[ARUICGPointPropertyAnimation valueByAddingCurrentValueToValue:]


ARUIRingsImageFactory : NSObject
  // class methods
  +[ARUIRingsImageFactory renderRingGroup:withRenderer:]
  +[ARUIRingsImageFactory renderRingGroupController:withRenderer:]
  +[ARUIRingsImageFactory _renderRingsUsingRingsView:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingsUsingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingGroupController:withBackgroundColor:andRenderer:]
  +[ARUIRingsImageFactory renderSingleRingUsingRingsView:forPercentage:withDiameter:thickness:topColor:bottomColor:]
  +[ARUIRingsImageFactory renderRingsWithBackgroundColor:usingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingsUsingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:inRect:]


ARUICountdownFadeOut : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownFadeOut identifier]

  // instance methods
  -[ARUICountdownFadeOut timingFunction]
  -[ARUICountdownFadeOut delay]
  -[ARUICountdownFadeOut identifier]
  -[ARUICountdownFadeOut cancelable]
  -[ARUICountdownFadeOut duration]
  -[ARUICountdownFadeOut applyToCountdownView:completion:]


ARUISpriteTexture : NSObject <NSCopying>
 @property  float height
 @property  float width
 @property  <MTLTexture> *texture

  // instance methods
  -[ARUISpriteTexture texture]
  -[ARUISpriteTexture width]
  -[ARUISpriteTexture initWithImage:]
  -[ARUISpriteTexture .cxx_destruct]
  -[ARUISpriteTexture height]
  -[ARUISpriteTexture isEqual:]
  -[ARUISpriteTexture copyWithZone:]


ARUIRenderContext : NSObject
 @property  float drawableDiameter
 @property  {?=[4]} skewAdjustmentMatrix
 @property  BOOL opaque
 @property  void drawableSize
 @property  float screenScale
 @property  BOOL presentsWithTransaction

  // instance methods
  -[ARUIRenderContext screenScale]
  -[ARUIRenderContext setOpaque:]
  -[ARUIRenderContext drawableSize]
  -[ARUIRenderContext opaque]
  -[ARUIRenderContext initWithSize:]
  -[ARUIRenderContext isEqual:]
  -[ARUIRenderContext presentsWithTransaction]
  -[ARUIRenderContext setPresentsWithTransaction:]
  -[ARUIRenderContext initWithDrawableSize:]
  -[ARUIRenderContext skewAdjustmentMatrix]
  -[ARUIRenderContext drawableDiameter]


ARUIHashBuilder : NSObject
  // class methods
  +[ARUIHashBuilder builder]

  // instance methods
  -[ARUIHashBuilder appendObject:]
  -[ARUIHashBuilder appendCGRect:]
  -[ARUIHashBuilder appendCGFloat:]
  -[ARUIHashBuilder appendBool:]
  -[ARUIHashBuilder init]
  -[ARUIHashBuilder appendDouble:]
  -[ARUIHashBuilder appendFloat:]
  -[ARUIHashBuilder appendUnsignedInt:]
  -[ARUIHashBuilder appendFloat2:]
  -[ARUIHashBuilder hashForFloat:]
  -[ARUIHashBuilder hashForCGFloat:]
  -[ARUIHashBuilder hashForNSTimeInterval:]
  -[ARUIHashBuilder hashForDouble:]
  -[ARUIHashBuilder appendFloat4:]
  -[ARUIHashBuilder appendInt:]
  -[ARUIHashBuilder appendTimeInterval:]
  -[ARUIHashBuilder appendFloat4x4:]


ARUISpriteSheetFactory : NSObject
  // class methods
  +[ARUISpriteSheetFactory sharedInstance]
  +[ARUISpriteSheetFactory wheelchairSpriteSheet]
  +[ARUISpriteSheetFactory defaultSpriteSheet]
  +[ARUISpriteSheetFactory spriteSheetForRingType:]
  +[ARUISpriteSheetFactory wheelchairSpriteSheetForRingType:]
  +[ARUISpriteSheetFactory sharingSpriteSheet]
  +[ARUISpriteSheetFactory wheelchairSharingSpriteSheet]

  // instance methods
  -[ARUISpriteSheetFactory .cxx_destruct]
  -[ARUISpriteSheetFactory defaultSpriteTexture]
  -[ARUISpriteSheetFactory wheelchairSpriteTexture]
  -[ARUISpriteSheetFactory sharingSpriteTexture]
  -[ARUISpriteSheetFactory wheelchairSharingSpriteTexture]


ARUIFloatAnimation : NSObject <ARUIRingGroupAnimation>
 @property  <ARUIRingGroupAnimationDelegate> *delegate
 @property  double duration
 @property  float startValue
 @property  float currentValue
 @property  float endValue
 @property  CAMediaTimingFunction *timingFunction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIFloatAnimation animationWithDuration:startValue:endValue:timingFunction:applier:]

  // instance methods
  -[ARUIFloatAnimation currentValue]
  -[ARUIFloatAnimation timingFunction]
  -[ARUIFloatAnimation .cxx_destruct]
  -[ARUIFloatAnimation setDelegate:]
  -[ARUIFloatAnimation isAnimating]
  -[ARUIFloatAnimation endValue]
  -[ARUIFloatAnimation update:]
  -[ARUIFloatAnimation delegate]
  -[ARUIFloatAnimation dealloc]
  -[ARUIFloatAnimation completeAnimation]
  -[ARUIFloatAnimation duration]
  -[ARUIFloatAnimation startValue]
  -[ARUIFloatAnimation initWithDuration:startValue:endValue:timingFunction:applier:]


ARUISprite : NSObject <NSCopying>
 @property  void firstFrameOrigin
 @property  void frameSize
 @property  unsigned long frameColumns
 @property  void textureRect
 @property  float size
 @property  void translation
 @property  float opacity
 @property  unsigned long frameCount
 @property  unsigned long currentFrameIndex

  // class methods
  +[ARUISprite randomSprite]

  // instance methods
  -[ARUISprite setOpacity:]
  -[ARUISprite opacity]
  -[ARUISprite translation]
  -[ARUISprite setSize:]
  -[ARUISprite isEqual:]
  -[ARUISprite size]
  -[ARUISprite frameSize]
  -[ARUISprite copyWithZone:]
  -[ARUISprite frameCount]
  -[ARUISprite setTranslation:]
  -[ARUISprite currentFrameIndex]
  -[ARUISprite textureRect]
  -[ARUISprite setCurrentFrameIndex:]
  -[ARUISprite initWithFrameCount:frameColumns:firstFrameOrigin:frameSize:]
  -[ARUISprite frameColumns]
  -[ARUISprite firstFrameOrigin]
  -[ARUISprite initWithSprite:]


ARUICountdownRingsRenderPipelineFactory : ARUIRingsRenderPipelineFactory
  // instance methods
  -[ARUICountdownRingsRenderPipelineFactory .cxx_destruct]
  -[ARUICountdownRingsRenderPipelineFactory initWithDevice:library:]
  -[ARUICountdownRingsRenderPipelineFactory initWithDeviceSPI:librarySPI:]
  -[ARUICountdownRingsRenderPipelineFactory pipelineForConfiguration:]


ARUIRingUniformsCacheKey : NSObject
 @property  unsigned long hashValue

  // class methods
  +[ARUIRingUniformsCacheKey keyForRing:context:]

  // instance methods
  -[ARUIRingUniformsCacheKey isEqual:]
  -[ARUIRingUniformsCacheKey hashValue]
  -[ARUIRingUniformsCacheKey initWithRing:context:]


ARUIRingUniformsCache : NSObject
  // class methods
  +[ARUIRingUniformsCache defaultCache]
  +[ARUIRingUniformsCache cacheWithLimit:]

  // instance methods
  -[ARUIRingUniformsCache clearCache]
  -[ARUIRingUniformsCache .cxx_destruct]
  -[ARUIRingUniformsCache initWithLimit:]
  -[ARUIRingUniformsCache uniformsForRing:renderedInContext:]


ARUICountdownDisappear : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownDisappear identifier]

  // instance methods
  -[ARUICountdownDisappear timingFunction]
  -[ARUICountdownDisappear delay]
  -[ARUICountdownDisappear identifier]
  -[ARUICountdownDisappear cancelable]
  -[ARUICountdownDisappear duration]
  -[ARUICountdownDisappear applyToCountdownView:completion:]


ARUICountdownTimeline : NSObject
 @property  <ARUICountdownAnimation> *prepareToAnimate
 @property  NSArray *animations
 @property  <ARUICountdownAnimation> *prepareToCancel
 @property  NSArray *cancelAnimations

  // instance methods
  -[ARUICountdownTimeline animations]
  -[ARUICountdownTimeline .cxx_destruct]
  -[ARUICountdownTimeline setAnimations:]
  -[ARUICountdownTimeline cancelAnimations]
  -[ARUICountdownTimeline prepareToAnimate]
  -[ARUICountdownTimeline prepareToCancel]
  -[ARUICountdownTimeline setPrepareToAnimate:]
  -[ARUICountdownTimeline setPrepareToCancel:]
  -[ARUICountdownTimeline setCancelAnimations:]


ARUICountdownCountdown : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
 @property  double percent

  // class methods
  +[ARUICountdownCountdown identifier]

  // instance methods
  -[ARUICountdownCountdown timingFunction]
  -[ARUICountdownCountdown delay]
  -[ARUICountdownCountdown identifier]
  -[ARUICountdownCountdown percent]
  -[ARUICountdownCountdown cancelable]
  -[ARUICountdownCountdown duration]
  -[ARUICountdownCountdown applyToCountdownView:completion:]
  -[ARUICountdownCountdown countdownStep]
  -[ARUICountdownCountdown initWithPercent:andStep:cancelable:]
  -[ARUICountdownCountdown setPercent:]


ARUIRenderState : NSObject <ARUIRendering>
 @property  <MTLRenderPipelineState> *renderPipelineState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIRenderState .cxx_destruct]
  -[ARUIRenderState initWithDevice:library:]
  -[ARUIRenderState setRenderPipelineState:]
  -[ARUIRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUIRenderState renderPipelineState]


ARUIRingsRenderPipelineFactory : ARUIPipelineFactory
  // instance methods
  -[ARUIRingsRenderPipelineFactory pipelineForConfiguration:]


ARUIMetricColors : NSObject
 @property  UIColor *gradientLightColor
 @property  UIColor *gradientDarkColor
 @property  UIColor *gradientContrastColor
 @property  UIColor *adjustmentButtonBackgroundColor
 @property  UIColor *nonGradientTextColor
 @property  UIColor *lightenedNonGradientColor
 @property  UIColor *buttonTextColor
 @property  UIColor *buttonDisabledTextColor
 @property  UIColor *valueDisplayColor
 @property  UIColor *platterBackgroundColor
 @property  UIColor *platterInactiveBackgroundColor
 @property  NSString *workoutRingColorIdentifier

  // class methods
  +[ARUIMetricColors energyColors]
  +[ARUIMetricColors keyColors]
  +[ARUIMetricColors sedentaryColors]
  +[ARUIMetricColors briskColors]
  +[ARUIMetricColors paceColors]
  +[ARUIMetricColors systemGrayTextColor]
  +[ARUIMetricColors newGradientForStartColor:endColor:]
  +[ARUIMetricColors distanceColors]
  +[ARUIMetricColors noMetricColors]
  +[ARUIMetricColors elapsedTimeColors]
  +[ARUIMetricColors heartRateColors]
  +[ARUIMetricColors clockColors]

  // instance methods
  -[ARUIMetricColors .cxx_destruct]
  -[ARUIMetricColors buttonTextColor]
  -[ARUIMetricColors setButtonTextColor:]
  -[ARUIMetricColors setButtonDisabledTextColor:]
  -[ARUIMetricColors buttonDisabledTextColor]
  -[ARUIMetricColors nonGradientTextColor]
  -[ARUIMetricColors gradientLightColor]
  -[ARUIMetricColors gradientDarkColor]
  -[ARUIMetricColors adjustmentButtonBackgroundColor]
  -[ARUIMetricColors setGradientLightColor:]
  -[ARUIMetricColors setGradientDarkColor:]
  -[ARUIMetricColors setGradientContrastColor:]
  -[ARUIMetricColors setNonGradientTextColor:]
  -[ARUIMetricColors setAdjustmentButtonBackgroundColor:]
  -[ARUIMetricColors setValueDisplayColor:]
  -[ARUIMetricColors setWorkoutRingColorIdentifier:]
  -[ARUIMetricColors setLightenedNonGradientColor:]
  -[ARUIMetricColors setPlatterBackgroundColor:]
  -[ARUIMetricColors setPlatterInactiveBackgroundColor:]
  -[ARUIMetricColors gradientContrastColor]
  -[ARUIMetricColors lightenedNonGradientColor]
  -[ARUIMetricColors valueDisplayColor]
  -[ARUIMetricColors platterBackgroundColor]
  -[ARUIMetricColors platterInactiveBackgroundColor]
  -[ARUIMetricColors workoutRingColorIdentifier]


ARUISpriteRenderState : NSObject <ARUIRendering, ARUIPrecompiledRendering>
 @property  <MTLRenderPipelineState> *renderPipelineState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUISpriteRenderState name]
  -[ARUISpriteRenderState .cxx_destruct]
  -[ARUISpriteRenderState initWithDevice:library:]
  -[ARUISpriteRenderState setRenderPipelineState:]
  -[ARUISpriteRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUISpriteRenderState initWithPipelineLibrary:]
  -[ARUISpriteRenderState renderPipelineState]


ARUIAnimatableProperty : NSObject
 @property  id startValue
 @property  id endValue
 @property  id currentValue

  // instance methods
  -[ARUIAnimatableProperty currentValue]
  -[ARUIAnimatableProperty .cxx_destruct]
  -[ARUIAnimatableProperty setEndValue:]
  -[ARUIAnimatableProperty endValue]
  -[ARUIAnimatableProperty update:]
  -[ARUIAnimatableProperty setCurrentValue:]
  -[ARUIAnimatableProperty setStartValue:]
  -[ARUIAnimatableProperty startValue]
  -[ARUIAnimatableProperty isFinishedAnimating]
  -[ARUIAnimatableProperty initWithGetter:setter:]
  -[ARUIAnimatableProperty removeAllPropertyAnimations]
  -[ARUIAnimatableProperty setValueImmediate:]
  -[ARUIAnimatableProperty addPropertyAnimation:]


ARUISpritesRenderer : NSObject
  // class methods
  +[ARUISpritesRenderer clearCaches]

  // instance methods
  -[ARUISpritesRenderer .cxx_destruct]
  -[ARUISpritesRenderer initWithDevice:library:]
  -[ARUISpritesRenderer initWithDeviceSPI:librarySPI:]
  -[ARUISpritesRenderer renderSpriteSheet:intoContext:withCommandEncoder:]
  -[ARUISpritesRenderer _sharedInitWithDevice:]


ARUIRingsStaticBufferFactory : NSObject
  // class methods
  +[ARUIRingsStaticBufferFactory clearCaches]
  +[ARUIRingsStaticBufferFactory circleSegments]
  +[ARUIRingsStaticBufferFactory ringVertexPositionsBufferWithDevice:]
  +[ARUIRingsStaticBufferFactory ringIndexBufferWithDevice:]


ARUICountdownDefaultTimeline : ARUICountdownTimeline
  // class methods
  +[ARUICountdownDefaultTimeline preAnimationIdentifier]
  +[ARUICountdownDefaultTimeline fadeInIdentifier]
  +[ARUICountdownDefaultTimeline windUpIdentifier]
  +[ARUICountdownDefaultTimeline countdownIdentifier]
  +[ARUICountdownDefaultTimeline fadeOutIdentifier]
  +[ARUICountdownDefaultTimeline disappearIdentifier]
  +[ARUICountdownDefaultTimeline cancelIdentifier]

  // instance methods
  -[ARUICountdownDefaultTimeline init]


ARUIRingsRenderState : NSObject <ARUIRendering, ARUIPrecompiledRendering, ARUIRingsState>
 @property  unsigned long renderArea
 @property  long long centeredAroundPercentSegmentDrawCount
 @property  <MTLRenderPipelineState> *renderPipelineState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIRingsRenderState name]
  -[ARUIRingsRenderState .cxx_destruct]
  -[ARUIRingsRenderState initWithDevice:library:]
  -[ARUIRingsRenderState setRenderPipelineState:]
  -[ARUIRingsRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsRenderState shouldRunStateForRing:]
  -[ARUIRingsRenderState initWithPipelineLibrary:]
  -[ARUIRingsRenderState renderPipelineState]
  -[ARUIRingsRenderState didInitialize]
  -[ARUIRingsRenderState renderArea]
  -[ARUIRingsRenderState setRenderArea:]
  -[ARUIRingsRenderState centeredAroundPercentSegmentDrawCount]
  -[ARUIRingsRenderState setCenteredAroundPercentSegmentDrawCount:]


ARUIPipelineFactory : NSObject
  // instance methods
  -[ARUIPipelineFactory initWithDevice:library:]
  -[ARUIPipelineFactory initWithDeviceSPI:librarySPI:]


ARUICountdownDefaultAnimation : NSObject
  // class methods
  +[ARUICountdownDefaultAnimation identifier]

  // instance methods


ARUISpritesStaticBufferFactory : NSObject
  // class methods
  +[ARUISpritesStaticBufferFactory clearCaches]
  +[ARUISpritesStaticBufferFactory spritePositionsBufferWithDevice:]
  +[ARUISpritesStaticBufferFactory spriteIndexBufferWithDevice:]


ARUICelebrationFactory : NSObject
  // class methods
  +[ARUICelebrationFactory celebrationOfType:]


ARUICountdownWindUp : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownWindUp identifier]

  // instance methods
  -[ARUICountdownWindUp delay]
  -[ARUICountdownWindUp identifier]
  -[ARUICountdownWindUp cancelable]
  -[ARUICountdownWindUp duration]
  -[ARUICountdownWindUp applyToCountdownView:completion:]


ARUIRingsEndCapShadowState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsEndCapShadowState name]
  -[ARUIRingsEndCapShadowState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsEndCapShadowState shouldRunStateForRing:]
  -[ARUIRingsEndCapShadowState didInitialize]


ARUIUIntAnimation : NSObject <ARUIRingGroupAnimation>
 @property  <ARUIRingGroupAnimationDelegate> *delegate
 @property  double duration
 @property  unsigned long startValue
 @property  unsigned long currentValue
 @property  unsigned long endValue
 @property  CAMediaTimingFunction *timingFunction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIUIntAnimation animationWithDuration:startValue:endValue:timingFunction:applier:]

  // instance methods
  -[ARUIUIntAnimation currentValue]
  -[ARUIUIntAnimation timingFunction]
  -[ARUIUIntAnimation .cxx_destruct]
  -[ARUIUIntAnimation setDelegate:]
  -[ARUIUIntAnimation isAnimating]
  -[ARUIUIntAnimation endValue]
  -[ARUIUIntAnimation update:]
  -[ARUIUIntAnimation delegate]
  -[ARUIUIntAnimation dealloc]
  -[ARUIUIntAnimation completeAnimation]
  -[ARUIUIntAnimation duration]
  -[ARUIUIntAnimation startValue]
  -[ARUIUIntAnimation initWithDuration:startValue:endValue:timingFunction:applier:]


ARUIAnimatableObject : NSObject
  // instance methods
  -[ARUIAnimatableObject .cxx_destruct]
  -[ARUIAnimatableObject update:]
  -[ARUIAnimatableObject addAnimation:forPropertyType:]
  -[ARUIAnimatableObject removeAllAnimationsForPropertyType:]
  -[ARUIAnimatableObject _newAnimatablePropertyForType:]
  -[ARUIAnimatableObject areAnimationsInProgress]
  -[ARUIAnimatableObject _animatablePropertyForType:]
  -[ARUIAnimatableObject setValue:forPropertyType:]
  -[ARUIAnimatableObject endingValueForPropertyType:]


ARUIOverlappingRingsRenderPipelineFactory : ARUIRingsRenderPipelineFactory
  // instance methods
  -[ARUIOverlappingRingsRenderPipelineFactory .cxx_destruct]
  -[ARUIOverlappingRingsRenderPipelineFactory initWithDevice:library:]
  -[ARUIOverlappingRingsRenderPipelineFactory initWithDeviceSPI:librarySPI:]
  -[ARUIOverlappingRingsRenderPipelineFactory pipelineForConfiguration:]


ARUIManualAnimationSequencer : NSObject <ARUIAnimationSequencing>
 @property  BOOL animating
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIManualAnimationSequencer tick]
  -[ARUIManualAnimationSequencer .cxx_destruct]
  -[ARUIManualAnimationSequencer isAnimating]
  -[ARUIManualAnimationSequencer init]
  -[ARUIManualAnimationSequencer addObserver:]
  -[ARUIManualAnimationSequencer removeObserver:]
  -[ARUIManualAnimationSequencer performAfter:completion:]


ARUISpritesParticleRenderer : NSObject
  // instance methods
  -[ARUISpritesParticleRenderer .cxx_destruct]
  -[ARUISpritesParticleRenderer renderSpriteSheet:intoContext:withCommandEncoder:]
  -[ARUISpritesParticleRenderer _sharedInitWithDevice:bufferSize:]
  -[ARUISpritesParticleRenderer initWithDevice:library:bufferSize:]
  -[ARUISpritesParticleRenderer initWithDeviceSPI:librarySPI:bufferSize:]


ARUIRingGroupGlobalAnimationSequencer : NSObject <ARUIAnimationSequencing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingGroupGlobalAnimationSequencer sharedInstance]

  // instance methods
  -[ARUIRingGroupGlobalAnimationSequencer _displayLinkFired:]
  -[ARUIRingGroupGlobalAnimationSequencer .cxx_destruct]
  -[ARUIRingGroupGlobalAnimationSequencer _updateDisplayLink]
  -[ARUIRingGroupGlobalAnimationSequencer addObserver:]
  -[ARUIRingGroupGlobalAnimationSequencer _init]
  -[ARUIRingGroupGlobalAnimationSequencer removeObserver:]
  -[ARUIRingGroupGlobalAnimationSequencer _needsDisplayLink]


ARUIRingsEmptyState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsEmptyState name]
  -[ARUIRingsEmptyState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsEmptyState shouldRunStateForRing:]


ARUISpriteParticleRenderState : NSObject <ARUIRendering, ARUIPrecompiledRendering>
 @property  <MTLRenderPipelineState> *renderPipelineState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUISpriteParticleRenderState name]
  -[ARUISpriteParticleRenderState .cxx_destruct]
  -[ARUISpriteParticleRenderState initWithDevice:library:]
  -[ARUISpriteParticleRenderState setRenderPipelineState:]
  -[ARUISpriteParticleRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUISpriteParticleRenderState initWithPipelineLibrary:]
  -[ARUISpriteParticleRenderState renderPipelineState]


ARUIRingsCountdownState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsCountdownState name]
  -[ARUIRingsCountdownState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsCountdownState shouldRunStateForRing:]


ARUIRingUniforms : NSObject
 @property  {?=[2{?=[4]}]} vertexAttributes
 @property  {?=} uniforms

  // instance methods
  -[ARUIRingUniforms vertexAttributes]
  -[ARUIRingUniforms uniforms]
  -[ARUIRingUniforms vertexAttributesBytes]
  -[ARUIRingUniforms uniformsBytes]
  -[ARUIRingUniforms initWithRing:inContext:]
  -[ARUIRingUniforms _updateVertexAttributesWithRing:inContext:]
  -[ARUIRingUniforms _updateUniformsWithRing:inContext:]


ARUIRingsGeometry : NSObject
 @property  unsigned int circleSegments
 @property  float startingRadian
 @property  float endingRadian

  // instance methods
  -[ARUIRingsGeometry init]
  -[ARUIRingsGeometry indexCount]
  -[ARUIRingsGeometry vertexCount]
  -[ARUIRingsGeometry setCircleSegments:]
  -[ARUIRingsGeometry enumerateVertexGeometryWithBlock:]
  -[ARUIRingsGeometry connectedIndiciesGeometry]
  -[ARUIRingsGeometry circleSegments]
  -[ARUIRingsGeometry endingRadian]
  -[ARUIRingsGeometry startingRadian]
  -[ARUIRingsGeometry disconnectedIndexCount]
  -[ARUIRingsGeometry disconnectedIndiciesGeometry]
  -[ARUIRingsGeometry setStartingRadian:]
  -[ARUIRingsGeometry setEndingRadian:]


ARUIRingsRenderer : NSObject
  // instance methods
  -[ARUIRingsRenderer clearCaches]
  -[ARUIRingsRenderer initWithDevice:]
  -[ARUIRingsRenderer .cxx_destruct]
  -[ARUIRingsRenderer beginRenderingWithCommandEncoder:]
  -[ARUIRingsRenderer renderRings:intoContext:withCommandEncoder:forState:]
  -[ARUIRingsRenderer _renderEntireRings:intoContext:withCommandEncoder:forState:]
  -[ARUIRingsRenderer _renderRingsFollowingPercent:intoContext:withCommandEncoder:forState:]


ARUICelebrationsRenderer : NSObject
  // instance methods
  -[ARUICelebrationsRenderer initWithDevice:commandQueue:]
  -[ARUICelebrationsRenderer .cxx_destruct]
  -[ARUICelebrationsRenderer renderCelebrationsForRings:withCommandBuffer:intoTexture:withContext:]
  -[ARUICelebrationsRenderer _needsCelebrationRenderPassOn:]


ARUICountdownPreAnimation : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownPreAnimation identifier]

  // instance methods
  -[ARUICountdownPreAnimation delay]
  -[ARUICountdownPreAnimation identifier]
  -[ARUICountdownPreAnimation cancelable]
  -[ARUICountdownPreAnimation duration]
  -[ARUICountdownPreAnimation applyToCountdownView:completion:]


_TtC15ActivityRingsUI17SparksCelebration : ARUICelebration
 @property  _TtC3VFX8VFXScene *scene
 @property  double duration
 @property  unsigned long type

  // instance methods
  -[_TtC15ActivityRingsUI17SparksCelebration .cxx_destruct]
  -[_TtC15ActivityRingsUI17SparksCelebration scene]
  -[_TtC15ActivityRingsUI17SparksCelebration init]
  -[_TtC15ActivityRingsUI17SparksCelebration type]
  -[_TtC15ActivityRingsUI17SparksCelebration duration]
  -[_TtC15ActivityRingsUI17SparksCelebration apply:context:]
  -[_TtC15ActivityRingsUI17SparksCelebration updateDeltaTime:]


MTLRenderPipelineDescriptor(Configuration)
	// instance methods
	-[MTLRenderPipelineDescriptor(Configuration) configureForAlphaReductionBlending]
	-[MTLRenderPipelineDescriptor(Configuration) configureForSourceOverBlending]
	-[MTLRenderPipelineDescriptor(Configuration) configureForAdditiveBlending]

01 00 0100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0100 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSEqualsBuilder 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 0200 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0400 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKTextureLoader 
01 00 0600 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0600 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 0600 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0500 /System/Library/PrivateFrameworks/VFX.framework/VFX: _TtC3VFX11VFXRenderer 
