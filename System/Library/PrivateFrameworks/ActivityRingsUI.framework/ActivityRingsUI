|| __DATA.__data _ARUIRingPercentageValueNoRing
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIAnimatableObjectPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICGPointPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICelebration
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICelebrationFactory
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownAnimator
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownController
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownDefaultTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownTimeline
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownView
|| __DATA.__objc_data _OBJC_CLASS_$_ARUICountdownViewRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIFloatPropertyAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIRingsImageFactory
|| __DATA.__objc_data _OBJC_CLASS_$_ARUIRingsViewRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpriteSheet
|| __DATA.__objc_data _OBJC_CLASS_$_ARUISpriteSheetFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIAnimatableObjectPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICGPointPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICelebration
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICelebrationFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownAnimator
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownController
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownDefaultTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownTimeline
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownView
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUICountdownViewRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIFloatPropertyAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIRingsImageFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUIRingsViewRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpriteSheet
|| __DATA.__objc_data _OBJC_METACLASS_$_ARUISpriteSheetFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIAnimatableObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIAnimatableProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIMetricColors
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingGroupController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ARUIRingsView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIAnimatableObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIAnimatableProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIMetricColors
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingGroupController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ARUIRingsView
|| __TEXT.__const _ActivityRingsUIVersionNumber
|| __TEXT.__const _ActivityRingsUIVersionString
|| __TEXT.__text _ActivityRingsUIFrameworkBundle
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ Metal: _MTLCreateSystemDefaultDevice
__ Metal: _OBJC_CLASS_$_MTLRenderPassDescriptor
__ Metal: _OBJC_CLASS_$_MTLRenderPipelineDescriptor
__ Metal: _OBJC_CLASS_$_MTLTextureDescriptor
__ MetalKit: _MTKTextureLoaderOptionGenerateMipmaps
__ MetalKit: _OBJC_CLASS_$_MTKTextureLoader
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAMetalLayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___sincosf_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _asinf
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _matrix_identity_float4x4
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
ARUIKineticSparksParticleRenderState : ARUICelebrationRenderState
  // instance methods
  -[ARUIKineticSparksParticleRenderState renderPipelineDescriptorFromLibrary:]


ARUIRingsRenderPipelineFactory : ARUIPipelineFactory
  // instance methods
  -[ARUIRingsRenderPipelineFactory pipelineForConfiguration:]


ARUIRingsGeometry : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int circleSegments
 @property  float startingRadian
 @property  float endingRadian

  // instance methods
  -[ARUIRingsGeometry init]
  -[ARUIRingsGeometry vertexCount]
  -[ARUIRingsGeometry indexCount]
  -[ARUIRingsGeometry circleSegments]
  -[ARUIRingsGeometry endingRadian]
  -[ARUIRingsGeometry startingRadian]
  -[ARUIRingsGeometry enumerateVertexGeometryWithBlock:]
  -[ARUIRingsGeometry connectedIndiciesGeometry]
  -[ARUIRingsGeometry disconnectedIndexCount]
  -[ARUIRingsGeometry disconnectedIndiciesGeometry]
  -[ARUIRingsGeometry setCircleSegments:]
  -[ARUIRingsGeometry setStartingRadian:]
  -[ARUIRingsGeometry setEndingRadian:]


ARUICountdownDefaultAnimation : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUICountdownDefaultAnimation identifier]

  // instance methods


ARUICountdownFadeOut : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownFadeOut identifier]

  // instance methods
  -[ARUICountdownFadeOut identifier]
  -[ARUICountdownFadeOut delay]
  -[ARUICountdownFadeOut duration]
  -[ARUICountdownFadeOut timingFunction]
  -[ARUICountdownFadeOut cancelable]
  -[ARUICountdownFadeOut applyToCountdownView:completion:]


ARUIAngularSparksComputeState : ARUICelebrationComputeState
  // instance methods
  -[ARUIAngularSparksComputeState computeFunctionFromLibrary:]


ARUIAngularSparksRenderState : ARUICelebrationRenderState
  // instance methods
  -[ARUIAngularSparksRenderState renderPipelineDescriptorFromLibrary:]


ARUISparksCelebration : ARUICelebration
 @property  <MTLBuffer> *angularVertexBuffer
 @property  <MTLBuffer> *angularIndexBuffer
 @property  unsigned long numAngularIndicies
 @property  unsigned long angularParticleCount
 @property  <MTLBuffer> *angularSparks
 @property  float angularTime
 @property  <MTLBuffer> *kineticVertexBuffer
 @property  <MTLBuffer> *kineticIndexBuffer
 @property  unsigned long numKineticIndicies
 @property  unsigned long kineticParticleCount
 @property  <MTLBuffer> *kineticSparks
 @property  <MTLBuffer> *uniformsBuffer

  // instance methods
  -[ARUISparksCelebration init]
  -[ARUISparksCelebration type]
  -[ARUISparksCelebration .cxx_destruct]
  -[ARUISparksCelebration endWithCompletion:]
  -[ARUISparksCelebration update:]
  -[ARUISparksCelebration uniformsBuffer]
  -[ARUISparksCelebration _generateAngularSparks]
  -[ARUISparksCelebration _setupKineticSparkEmitters]
  -[ARUISparksCelebration _applyAngularSparkUpdate:]
  -[ARUISparksCelebration _applyKineticSparkUpdate:]
  -[ARUISparksCelebration setTopColor:]
  -[ARUISparksCelebration screenBlendedColorFromColor:numberOfIterations:]
  -[ARUISparksCelebration angularTimeBytes]
  -[ARUISparksCelebration angularAlphaBytes]
  -[ARUISparksCelebration uniformsBufferOffsetForType:]
  -[ARUISparksCelebration storeCelebration:withRing:]
  -[ARUISparksCelebration angularVertexBuffer]
  -[ARUISparksCelebration angularIndexBuffer]
  -[ARUISparksCelebration numAngularIndicies]
  -[ARUISparksCelebration angularParticleCount]
  -[ARUISparksCelebration angularSparks]
  -[ARUISparksCelebration angularTime]
  -[ARUISparksCelebration kineticVertexBuffer]
  -[ARUISparksCelebration kineticIndexBuffer]
  -[ARUISparksCelebration numKineticIndicies]
  -[ARUISparksCelebration kineticParticleCount]
  -[ARUISparksCelebration kineticSparks]


ARUIBurstSparkEmitter : NSObject /usr/lib/libSystem.B.dylib <ARUIKineticSparkEmitter>
 @property  BOOL omnidirectionalBurst
 @property  float emitterStartTime
 @property  float angularRotationTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIBurstSparkEmitter init]
  -[ARUIBurstSparkEmitter angle]
  -[ARUIBurstSparkEmitter setAngle:]
  -[ARUIBurstSparkEmitter bufferOffset]
  -[ARUIBurstSparkEmitter setParticleCount:]
  -[ARUIBurstSparkEmitter particleCount]
  -[ARUIBurstSparkEmitter setBufferOffset:]
  -[ARUIBurstSparkEmitter updateForTime:]
  -[ARUIBurstSparkEmitter generateSparks]
  -[ARUIBurstSparkEmitter setEmitterStartTime:]
  -[ARUIBurstSparkEmitter setOmnidirectionalBurst:]
  -[ARUIBurstSparkEmitter setAngularRotationTime:]
  -[ARUIBurstSparkEmitter _updateSteadyStateStartTime]
  -[ARUIBurstSparkEmitter initialBurstCount]
  -[ARUIBurstSparkEmitter initialBurstRate]
  -[ARUIBurstSparkEmitter updateWithCount:bufferOffset:length:startTime:startTimeSkewFactor:directionalVector:directionalSwing:]
  -[ARUIBurstSparkEmitter _rotationSwing:forPercent:]
  -[ARUIBurstSparkEmitter omnidirectionalBurst]
  -[ARUIBurstSparkEmitter emitterStartTime]
  -[ARUIBurstSparkEmitter angularRotationTime]


ARUIRing : ARUIAnimatableObject <NSCopying>
 @property  NSArray *celebrations
 @property  {?=[2{?=[4]}]} vertexAttributes
 @property  {?=} uniforms
 @property  ARUIIcon *icon
 @property  float screenScale
 @property  float ringBoundsDiameter
 @property  void drawableSize
 @property  {?=[4]} skewAdjustmentMatrix
 @property  BOOL premultiplyAlpha
 @property  UIColor *topColor
 @property  UIColor *bottomColor
 @property  UIColor *contrastColor
 @property  float percentage
 @property  float scale
 @property  float thickness
 @property  float interspacing
 @property  BOOL sizeDirty
 @property  float size
 @property  float opacity
 @property  float emptyOpacity
 @property  float trackOpacity
 @property  float zRotation
 @property  void center
 @property  void topColorVector
 @property  void topColorPremultiplied
 @property  void bottomColorVector
 @property  void bottomColorPremultiplied
 @property  void contrastColorVector

  // instance methods
  -[ARUIRing init]
  -[ARUIRing copyWithZone:]
  -[ARUIRing .cxx_destruct]
  -[ARUIRing size]
  -[ARUIRing scale]
  -[ARUIRing setSize:]
  -[ARUIRing center]
  -[ARUIRing setCenter:]
  -[ARUIRing setScale:]
  -[ARUIRing opacity]
  -[ARUIRing setOpacity:]
  -[ARUIRing percentage]
  -[ARUIRing icon]
  -[ARUIRing setIcon:]
  -[ARUIRing update:]
  -[ARUIRing thickness]
  -[ARUIRing setThickness:]
  -[ARUIRing screenScale]
  -[ARUIRing setDrawableSize:]
  -[ARUIRing drawableSize]
  -[ARUIRing vertexAttributes]
  -[ARUIRing zRotation]
  -[ARUIRing setZRotation:]
  -[ARUIRing uniforms]
  -[ARUIRing setPercentage:]
  -[ARUIRing setEmptyOpacity:]
  -[ARUIRing _newAnimatablePropertyForType:]
  -[ARUIRing areAnimationsInProgress]
  -[ARUIRing setTopColor:]
  -[ARUIRing setTrackOpacity:]
  -[ARUIRing setPremultiplyAlpha:]
  -[ARUIRing setBottomColor:]
  -[ARUIRing topColor]
  -[ARUIRing bottomColor]
  -[ARUIRing contrastColor]
  -[ARUIRing setContrastColor:]
  -[ARUIRing premultiplyAlpha]
  -[ARUIRing emptyOpacity]
  -[ARUIRing ringBoundsDiameter]
  -[ARUIRing setRingBoundsDiameter:]
  -[ARUIRing skewAdjustmentMatrix]
  -[ARUIRing setSkewAdjustmentMatrix:]
  -[ARUIRing trackOpacity]
  -[ARUIRing interspacing]
  -[ARUIRing setInterspacing:]
  -[ARUIRing _updateTopColorUniform]
  -[ARUIRing _updateBottomColorUniform]
  -[ARUIRing _updatePremultipliedTopColor]
  -[ARUIRing updateCelebrationsWithColors]
  -[ARUIRing _updatePremultipliedBottomColor]
  -[ARUIRing updateCalculatedAttributes]
  -[ARUIRing _updateVertexAttributes]
  -[ARUIRing _updateCalculatedUniforms]
  -[ARUIRing updateCelebrationWithColors:]
  -[ARUIRing topColorVector]
  -[ARUIRing bottomColorVector]
  -[ARUIRing contrastColorVector]
  -[ARUIRing addAnimation:forRingPropertyType:]
  -[ARUIRing removeAllAnimationsForRingPropertyType:]
  -[ARUIRing uniformsBytes]
  -[ARUIRing vertexAttributesBytes]
  -[ARUIRing isSizeDirty]
  -[ARUIRing setSizeDirty:]
  -[ARUIRing topColorPremultiplied]
  -[ARUIRing bottomColorPremultiplied]
  -[ARUIRing addCelebration:]
  -[ARUIRing removeCelebration:]
  -[ARUIRing celebrations]


ARUIOverlappingRingsRenderPipelineFactory : ARUIRingsRenderPipelineFactory
  // instance methods
  -[ARUIOverlappingRingsRenderPipelineFactory .cxx_destruct]
  -[ARUIOverlappingRingsRenderPipelineFactory initWithDevice:library:]
  -[ARUIOverlappingRingsRenderPipelineFactory pipelineForConfiguration:]
  -[ARUIOverlappingRingsRenderPipelineFactory initWithDeviceSPI:librarySPI:]


ARUIRingsViewRenderer : NSObject /usr/lib/libSystem.B.dylib <ARUIRingsRendering>
 @property  BOOL presentsWithTransaction
 @property  unsigned long maximumRingCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingsViewRenderer maximumRingCountForControllers:]
  +[ARUIRingsViewRenderer rendererForRingGroupController:]
  +[ARUIRingsViewRenderer rendererForRingGroupControllers:]

  // instance methods
  -[ARUIRingsViewRenderer dealloc]
  -[ARUIRingsViewRenderer .cxx_destruct]
  -[ARUIRingsViewRenderer presentsWithTransaction]
  -[ARUIRingsViewRenderer setPresentsWithTransaction:]
  -[ARUIRingsViewRenderer initWithMaximumRingCount:]
  -[ARUIRingsViewRenderer initWithMaximumRingCount:commandQueue:]
  -[ARUIRingsViewRenderer renderPipelineFactoryWithDeviceSPI:librarySPI:]
  -[ARUIRingsViewRenderer ringsRenderPipelineConfigurationForRings:]
  -[ARUIRingsViewRenderer ringsRenderPipelineConfigurationForRingGroupController:]
  -[ARUIRingsViewRenderer spriteRenderPipelineConfigurationForRingGroupController:]
  -[ARUIRingsViewRenderer _updateSpriteUniformsForRingGroupController:andRingIndex:]
  -[ARUIRingsViewRenderer _updateSpriteAttributesForRingGroupController:andRingIndex:]
  -[ARUIRingsViewRenderer renderRingGroupControllers:withSize:intoTexture:withDrawable:waitUntilCompleted:completionHandler:]
  -[ARUIRingsViewRenderer ringTextureWithCommandBuffer:rings:andSize:]
  -[ARUIRingsViewRenderer renderPipelineFactoryWithDevice:library:]
  -[ARUIRingsViewRenderer snapshotRingGroupControllers:withSize:]
  -[ARUIRingsViewRenderer prewarmRendererForCelebrationOfType:]
  -[ARUIRingsViewRenderer maximumRingCount]


ARUICountdownFadeIn : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownFadeIn identifier]

  // instance methods
  -[ARUICountdownFadeIn identifier]
  -[ARUICountdownFadeIn delay]
  -[ARUICountdownFadeIn duration]
  -[ARUICountdownFadeIn timingFunction]
  -[ARUICountdownFadeIn cancelable]
  -[ARUICountdownFadeIn applyToCountdownView:completion:]


ARUIKineticSparkUpdate : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{?=ffffffff{?=[4]}} sparks
 @property  unsigned long particleCount
 @property  unsigned long bufferOffset
 @property  float finalBirthTime
 @property  float finalDeathTime

  // instance methods
  -[ARUIKineticSparkUpdate dealloc]
  -[ARUIKineticSparkUpdate bufferOffset]
  -[ARUIKineticSparkUpdate particleCount]
  -[ARUIKineticSparkUpdate sparks]
  -[ARUIKineticSparkUpdate finalBirthTime]
  -[ARUIKineticSparkUpdate finalDeathTime]
  -[ARUIKineticSparkUpdate updateByAppendingUpdate:]
  -[ARUIKineticSparkUpdate initWithParticleCount:bufferOffset:]
  -[ARUIKineticSparkUpdate setFinalBirthTime:]
  -[ARUIKineticSparkUpdate setFinalDeathTime:]


ARUIKineticSparksComputeState : ARUICelebrationComputeState
  // instance methods
  -[ARUIKineticSparksComputeState computeFunctionFromLibrary:]


ARUIRingsRenderState : NSObject /usr/lib/libSystem.B.dylib <ARUIRendering, ARUIPrecompiledRendering, ARUIRingsState>
 @property  unsigned long renderArea
 @property  long long centeredAroundPercentSegmentDrawCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MTLRenderPipelineState> *renderPipelineState

  // instance methods
  -[ARUIRingsRenderState name]
  -[ARUIRingsRenderState .cxx_destruct]
  -[ARUIRingsRenderState initWithDevice:library:]
  -[ARUIRingsRenderState setRenderPipelineState:]
  -[ARUIRingsRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsRenderState initWithPipelineLibrary:]
  -[ARUIRingsRenderState didInitialize]
  -[ARUIRingsRenderState renderPipelineState]
  -[ARUIRingsRenderState shouldRunStateForRing:]
  -[ARUIRingsRenderState renderArea]
  -[ARUIRingsRenderState setRenderArea:]
  -[ARUIRingsRenderState centeredAroundPercentSegmentDrawCount]
  -[ARUIRingsRenderState setCenteredAroundPercentSegmentDrawCount:]


ARUICountdownCountdown : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
 @property  double percent

  // class methods
  +[ARUICountdownCountdown identifier]

  // instance methods
  -[ARUICountdownCountdown identifier]
  -[ARUICountdownCountdown delay]
  -[ARUICountdownCountdown duration]
  -[ARUICountdownCountdown timingFunction]
  -[ARUICountdownCountdown cancelable]
  -[ARUICountdownCountdown setPercent:]
  -[ARUICountdownCountdown percent]
  -[ARUICountdownCountdown applyToCountdownView:completion:]
  -[ARUICountdownCountdown countdownStep]
  -[ARUICountdownCountdown initWithPercent:andStep:cancelable:]


ARUICountdownDisappear : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownDisappear identifier]

  // instance methods
  -[ARUICountdownDisappear identifier]
  -[ARUICountdownDisappear delay]
  -[ARUICountdownDisappear duration]
  -[ARUICountdownDisappear timingFunction]
  -[ARUICountdownDisappear cancelable]
  -[ARUICountdownDisappear applyToCountdownView:completion:]


ARUIRingsStaticBufferFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUIRingsStaticBufferFactory clearCaches]
  +[ARUIRingsStaticBufferFactory circleSegments]
  +[ARUIRingsStaticBufferFactory ringVertexPositionsBufferWithDevice:]
  +[ARUIRingsStaticBufferFactory ringIndexBufferWithDevice:]


ARUICountdownController : ARUIRingGroupController
 @property  unsigned long countdownOrigin
 @property  double countdownPercent

  // class methods
  +[ARUICountdownController animationTimingFunction]

  // instance methods
  -[ARUICountdownController init]
  -[ARUICountdownController setCountdownPercent:animated:]
  -[ARUICountdownController setTrackOpacity:animated:duration:completion:]
  -[ARUICountdownController setCountdownOrigin:]
  -[ARUICountdownController setCountdownPercent:animated:duration:completion:]
  -[ARUICountdownController setRingDiameter:animated:duration:completion:]
  -[ARUICountdownController setRingThickness:animated:duration:completion:]
  -[ARUICountdownController setCountdownOrigin:animated:]
  -[ARUICountdownController _zRotationFromCountdownOrigin:]
  -[ARUICountdownController setFloatValue:forRingGroupPropertyType:animated:duration:completion:]
  -[ARUICountdownController countdownPercent]
  -[ARUICountdownController setTopColor:bottomColor:]
  -[ARUICountdownController setCountdownPercent:]
  -[ARUICountdownController setCountdownPercent:animated:completion:]
  -[ARUICountdownController countdownOrigin]


ARUIDownsampleRenderState : ARUIRenderState
  // instance methods
  -[ARUIDownsampleRenderState renderPipelineDescriptorFromLibrary:]


ARUIAnimatableObject : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ARUIAnimatableObject .cxx_destruct]
  -[ARUIAnimatableObject update:]
  -[ARUIAnimatableObject addAnimation:forPropertyType:]
  -[ARUIAnimatableObject removeAllAnimationsForPropertyType:]
  -[ARUIAnimatableObject _newAnimatablePropertyForType:]
  -[ARUIAnimatableObject areAnimationsInProgress]
  -[ARUIAnimatableObject endingValueForPropertyType:]
  -[ARUIAnimatableObject setValue:forPropertyType:]
  -[ARUIAnimatableObject _animatablePropertyForType:]


ARUICelebrationComputeState : ARUIComputeState <ARUIRingsState>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUICelebrationComputeState shouldRunStateForRing:]


ARUICelebrationsMap : NSObject /usr/lib/libSystem.B.dylib <ARUICelebrationsMapStore>
 @property  unsigned long celebrationCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUICelebrationsMap .cxx_destruct]
  -[ARUICelebrationsMap storeSparksCelebration:withRing:]
  -[ARUICelebrationsMap setRingGroupControllers:]
  -[ARUICelebrationsMap storeWavesCelebration:withRing:]
  -[ARUICelebrationsMap initWithRingGroupControllers:]
  -[ARUICelebrationsMap sparksCelebrationMap]
  -[ARUICelebrationsMap wavesCelebrationMap]
  -[ARUICelebrationsMap celebrationCount]


ARUIRingsCountdownState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsCountdownState name]
  -[ARUIRingsCountdownState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsCountdownState shouldRunStateForRing:]


ARUISpriteSheet : NSObject /usr/lib/libSystem.B.dylib
 @property  ARUISpriteTexture *texture
 @property  NSArray *icons
 @property  float size

  // instance methods
  -[ARUISpriteSheet .cxx_destruct]
  -[ARUISpriteSheet size]
  -[ARUISpriteSheet icons]
  -[ARUISpriteSheet texture]
  -[ARUISpriteSheet initWithTexture:icons:size:]


ARUIAngularSparkUpdate : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{?=fffffffff[2{?=[4]}]} sparks
 @property  unsigned long particleCount
 @property  unsigned long bufferOffset
 @property  float finalBirthTime
 @property  float finalDeathTime

  // instance methods
  -[ARUIAngularSparkUpdate dealloc]
  -[ARUIAngularSparkUpdate bufferOffset]
  -[ARUIAngularSparkUpdate particleCount]
  -[ARUIAngularSparkUpdate sparks]
  -[ARUIAngularSparkUpdate finalBirthTime]
  -[ARUIAngularSparkUpdate finalDeathTime]
  -[ARUIAngularSparkUpdate updateByAppendingUpdate:]
  -[ARUIAngularSparkUpdate initWithParticleCount:bufferOffset:]
  -[ARUIAngularSparkUpdate setFinalBirthTime:]
  -[ARUIAngularSparkUpdate setFinalDeathTime:]


ARUICountdownAnimator : NSObject /usr/lib/libSystem.B.dylib
 @property  ARUICountdownTimeline *timeline
 @property  ARUICountdownView *countdownView
 @property  <ARUICountdownAnimatorDelegate> *delegate

  // instance methods
  -[ARUICountdownAnimator delegate]
  -[ARUICountdownAnimator setDelegate:]
  -[ARUICountdownAnimator .cxx_destruct]
  -[ARUICountdownAnimator canceled]
  -[ARUICountdownAnimator isAnimating]
  -[ARUICountdownAnimator timeline]
  -[ARUICountdownAnimator initWithTimeline:]
  -[ARUICountdownAnimator prepareToAnimate]
  -[ARUICountdownAnimator _delegate_willBeginAnimating]
  -[ARUICountdownAnimator _applyAnimationAtIndex:]
  -[ARUICountdownAnimator _delegate_didFinishAnimating]
  -[ARUICountdownAnimator _delegate_willBeginAnimation:afterDelay:]
  -[ARUICountdownAnimator _delegate_performingAnimation:withDuration:]
  -[ARUICountdownAnimator _delegate_completedAnimation:]
  -[ARUICountdownAnimator _applyCancelAnimationAtIndex:]
  -[ARUICountdownAnimator cancelAnimations]
  -[ARUICountdownAnimator beginAnimations]
  -[ARUICountdownAnimator setTimeline:]
  -[ARUICountdownAnimator countdownView]
  -[ARUICountdownAnimator setCountdownView:]


ARUISparksRenderer : NSObject /usr/lib/libSystem.B.dylib <ARUICelebrationsRendering>
 @property  <ARUICompositeRendering> *compositeRenderer
 @property  <ARUIBlurRendering> *blurRenderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUISparksRenderer .cxx_destruct]
  -[ARUISparksRenderer prewarm]
  -[ARUISparksRenderer initWithDevice:library:]
  -[ARUISparksRenderer blurRenderer]
  -[ARUISparksRenderer compositeRenderer]
  -[ARUISparksRenderer _computeWithCommandEncoder:ring:sparksCelebration:]
  -[ARUISparksRenderer _particlesTextureWithCommandBuffer:sparksMap:uniformType:size:]
  -[ARUISparksRenderer _largeBlurRadiusForSize:]
  -[ARUISparksRenderer _smallBlurRadiusForSize:]
  -[ARUISparksRenderer _renderWithCommandEncoder:ring:sparksCelebration:uniformsType:]
  -[ARUISparksRenderer sparksTextureWithCommandBuffer:sparksMap:size:]
  -[ARUISparksRenderer setCompositeRenderer:]
  -[ARUISparksRenderer setBlurRenderer:]


ARUIRingsRenderer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUIRingsRenderer clearCaches]

  // instance methods
  -[ARUIRingsRenderer .cxx_destruct]
  -[ARUIRingsRenderer initWithDevice:maximumRingCount:]
  -[ARUIRingsRenderer beginRenderingWithCommandEncoder:]
  -[ARUIRingsRenderer renderRings:withCommandEncoder:forState:]
  -[ARUIRingsRenderer _renderEntireRings:withCommandEncoder:forState:]
  -[ARUIRingsRenderer _renderRingsFollowingPercent:withCommandEncoder:forState:]


ARUIRingsEmptyState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsEmptyState name]
  -[ARUIRingsEmptyState renderPipelineDescriptorFromLibrary:]


ARUICountdownCancel : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownCancel identifier]

  // instance methods
  -[ARUICountdownCancel identifier]
  -[ARUICountdownCancel cancel]
  -[ARUICountdownCancel delay]
  -[ARUICountdownCancel duration]
  -[ARUICountdownCancel timingFunction]
  -[ARUICountdownCancel cancelable]
  -[ARUICountdownCancel applyToCountdownView:completion:]


ARUIWaveCurve : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
  // instance methods
  -[ARUIWaveCurve copyWithZone:]
  -[ARUIWaveCurve initWithParameters:]
  -[ARUIWaveCurve solveForX:]


ARUISpritesStaticBufferFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUISpritesStaticBufferFactory clearCaches]
  +[ARUISpritesStaticBufferFactory spritePositionsBufferWithDevice:]
  +[ARUISpritesStaticBufferFactory spriteIndexBufferWithDevice:]


ARUIRingsImageFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUIRingsImageFactory renderRingGroupController:withRenderer:]
  +[ARUIRingsImageFactory _renderRingsUsingRingsView:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingsUsingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingGroupController:withBackgroundColor:andRenderer:]
  +[ARUIRingsImageFactory renderSingleRingUsingRingsView:forPercentage:withDiameter:thickness:topColor:bottomColor:]
  +[ARUIRingsImageFactory renderRingsWithBackgroundColor:usingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:]
  +[ARUIRingsImageFactory renderRingsUsingRingsView:forMovePercentage:exercisePercentage:standPercentage:withDiameter:thickness:interspacing:inRect:]


ARUIRingsAlphaReductionState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsAlphaReductionState name]
  -[ARUIRingsAlphaReductionState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsAlphaReductionState shouldRunStateForRing:]


ARUICountdownView : ARUIRingsView
 @property  ARUICountdownController *countdownController

  // class methods
  +[ARUICountdownView countdownViewConfiguredForCompanion]
  +[ARUICountdownView countdownViewConfiguredForWatch]

  // instance methods
  -[ARUICountdownView .cxx_destruct]
  -[ARUICountdownView countdownController]
  -[ARUICountdownView initWithCountdownController:]
  -[ARUICountdownView initWithCountdownController:backingTrackController:]
  -[ARUICountdownView backingTrackController]


ARUICountdownWindUp : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownWindUp identifier]

  // instance methods
  -[ARUICountdownWindUp identifier]
  -[ARUICountdownWindUp delay]
  -[ARUICountdownWindUp duration]
  -[ARUICountdownWindUp timingFunction]
  -[ARUICountdownWindUp cancelable]
  -[ARUICountdownWindUp applyToCountdownView:completion:]


ARUIRingsFillState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsFillState name]
  -[ARUIRingsFillState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsFillState shouldRunStateForRing:]


ARUIRenderState : NSObject /usr/lib/libSystem.B.dylib <ARUIRendering>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MTLRenderPipelineState> *renderPipelineState

  // instance methods
  -[ARUIRenderState .cxx_destruct]
  -[ARUIRenderState initWithDevice:library:]
  -[ARUIRenderState setRenderPipelineState:]
  -[ARUIRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUIRenderState renderPipelineState]


ARUICountdownDefaultTimeline : ARUICountdownTimeline
  // class methods
  +[ARUICountdownDefaultTimeline preAnimationIdentifier]
  +[ARUICountdownDefaultTimeline fadeInIdentifier]
  +[ARUICountdownDefaultTimeline windUpIdentifier]
  +[ARUICountdownDefaultTimeline countdownIdentifier]
  +[ARUICountdownDefaultTimeline fadeOutIdentifier]
  +[ARUICountdownDefaultTimeline disappearIdentifier]
  +[ARUICountdownDefaultTimeline cancelIdentifier]

  // instance methods
  -[ARUICountdownDefaultTimeline init]


ARUISpriteTexture : NSObject /usr/lib/libSystem.B.dylib
 @property  float height
 @property  float width
 @property  <MTLTexture> *texture

  // instance methods
  -[ARUISpriteTexture .cxx_destruct]
  -[ARUISpriteTexture width]
  -[ARUISpriteTexture height]
  -[ARUISpriteTexture initWithImage:]
  -[ARUISpriteTexture texture]


ARUIWavesRenderState : ARUICelebrationRenderState
  // instance methods
  -[ARUIWavesRenderState renderPipelineDescriptorFromLibrary:]


ARUIAngularSparkEmitter : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ARUIAngularSparkEmitter updateForTime:]
  -[ARUIAngularSparkEmitter initWithParticleCount:rotationDuration:particleLength:]
  -[ARUIAngularSparkEmitter generateSparks]
  -[ARUIAngularSparkEmitter updateWithStartTime:particleCount:bufferOffset:]


ARUIAnimatableProperty : NSObject /usr/lib/libSystem.B.dylib
 @property  id startValue
 @property  id endValue
 @property  id currentValue

  // instance methods
  -[ARUIAnimatableProperty .cxx_destruct]
  -[ARUIAnimatableProperty setStartValue:]
  -[ARUIAnimatableProperty setEndValue:]
  -[ARUIAnimatableProperty update:]
  -[ARUIAnimatableProperty currentValue]
  -[ARUIAnimatableProperty setCurrentValue:]
  -[ARUIAnimatableProperty startValue]
  -[ARUIAnimatableProperty endValue]
  -[ARUIAnimatableProperty initWithGetter:setter:]
  -[ARUIAnimatableProperty setValueImmediate:]
  -[ARUIAnimatableProperty addPropertyAnimation:]
  -[ARUIAnimatableProperty removeAllPropertyAnimations]
  -[ARUIAnimatableProperty isFinishedAnimating]


ARUIRingsRenderPipelineConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL hasVisibleRings
 @property  BOOL ringsAreEmpty
 @property  BOOL needsAlphaReductionPass
 @property  BOOL hasOverlappingRing

  // instance methods
  -[ARUIRingsRenderPipelineConfiguration hasVisibleRings]
  -[ARUIRingsRenderPipelineConfiguration ringsAreEmpty]
  -[ARUIRingsRenderPipelineConfiguration hasOverlappingRing]
  -[ARUIRingsRenderPipelineConfiguration needsAlphaReductionPass]
  -[ARUIRingsRenderPipelineConfiguration setHasVisibleRings:]
  -[ARUIRingsRenderPipelineConfiguration setRingsAreEmpty:]
  -[ARUIRingsRenderPipelineConfiguration setNeedsAlphaReductionPass:]
  -[ARUIRingsRenderPipelineConfiguration setHasOverlappingRing:]


ARUIPipelineFactory : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ARUIPipelineFactory initWithDevice:library:]
  -[ARUIPipelineFactory initWithDeviceSPI:librarySPI:]


ARUISpriteRenderPipelineConfiguration : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL shouldRenderSprites

  // instance methods
  -[ARUISpriteRenderPipelineConfiguration setShouldRenderSprites:]
  -[ARUISpriteRenderPipelineConfiguration shouldRenderSprites]


ARUIWavesCelebration : ARUICelebration
 @property  <MTLBuffer> *waveVertexBuffer
 @property  <MTLBuffer> *waveIndexBuffer
 @property  unsigned long numWaveIndicies
 @property  float revealPercent
 @property  <MTLBuffer> *waveComputeUniforms
 @property  unsigned int waveCount
 @property  unsigned int pointCount
 @property  unsigned int computeCount
 @property  <MTLBuffer> *wavePoints
 @property  <MTLBuffer> *waveFragmentUniforms

  // instance methods
  -[ARUIWavesCelebration init]
  -[ARUIWavesCelebration type]
  -[ARUIWavesCelebration .cxx_destruct]
  -[ARUIWavesCelebration pointCount]
  -[ARUIWavesCelebration endWithCompletion:]
  -[ARUIWavesCelebration update:]
  -[ARUIWavesCelebration computeCount]
  -[ARUIWavesCelebration setTopColor:]
  -[ARUIWavesCelebration storeCelebration:withRing:]
  -[ARUIWavesCelebration setBottomColor:]
  -[ARUIWavesCelebration setContrastColor:]
  -[ARUIWavesCelebration _setupWavePoints]
  -[ARUIWavesCelebration _updateComputeUniforms]
  -[ARUIWavesCelebration waveComputeUniformsOffsetForType:]
  -[ARUIWavesCelebration wavePointsOffsetForWaveAtIndex:]
  -[ARUIWavesCelebration waveFragmentOffsetForWaveAtIndex:]
  -[ARUIWavesCelebration waveVertexBuffer]
  -[ARUIWavesCelebration waveIndexBuffer]
  -[ARUIWavesCelebration numWaveIndicies]
  -[ARUIWavesCelebration revealPercent]
  -[ARUIWavesCelebration waveComputeUniforms]
  -[ARUIWavesCelebration waveCount]
  -[ARUIWavesCelebration wavePoints]
  -[ARUIWavesCelebration waveFragmentUniforms]


ARUISpritesRenderer : NSObject /usr/lib/libSystem.B.dylib
 @property  ^{?=[2{?=[4]}]} vertexAttributes
 @property  ^{?=} uniforms
 @property  ARUISpriteTexture *texture

  // class methods
  +[ARUISpritesRenderer clearCaches]

  // instance methods
  -[ARUISpritesRenderer dealloc]
  -[ARUISpritesRenderer .cxx_destruct]
  -[ARUISpritesRenderer setTexture:]
  -[ARUISpritesRenderer texture]
  -[ARUISpritesRenderer vertexAttributes]
  -[ARUISpritesRenderer setVertexAttributes:]
  -[ARUISpritesRenderer setUniforms:]
  -[ARUISpritesRenderer uniforms]
  -[ARUISpritesRenderer initWithDevice:maximumRingCount:]
  -[ARUISpritesRenderer renderRings:withCommandEncoder:forState:]


ARUICountdownRingsRenderPipelineFactory : ARUIRingsRenderPipelineFactory
  // instance methods
  -[ARUICountdownRingsRenderPipelineFactory .cxx_destruct]
  -[ARUICountdownRingsRenderPipelineFactory initWithDevice:library:]
  -[ARUICountdownRingsRenderPipelineFactory pipelineForConfiguration:]
  -[ARUICountdownRingsRenderPipelineFactory initWithDeviceSPI:librarySPI:]


ARUIWavesRenderer : NSObject /usr/lib/libSystem.B.dylib <ARUICelebrationsRendering>
 @property  <ARUICompositeRendering> *compositeRenderer
 @property  <ARUIBlurRendering> *blurRenderer
 @property  <ARUIRingsRendering> *ringsRenderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUIWavesRenderer .cxx_destruct]
  -[ARUIWavesRenderer prewarm]
  -[ARUIWavesRenderer initWithDevice:library:]
  -[ARUIWavesRenderer setRingsRenderer:]
  -[ARUIWavesRenderer blurRenderer]
  -[ARUIWavesRenderer compositeRenderer]
  -[ARUIWavesRenderer setCompositeRenderer:]
  -[ARUIWavesRenderer setBlurRenderer:]
  -[ARUIWavesRenderer _computeWithCommandEncoder:ring:wavesCelebration:]
  -[ARUIWavesRenderer _wavesTextureWithCommandBuffer:wavesMap:size:]
  -[ARUIWavesRenderer ringsRenderer]
  -[ARUIWavesRenderer _renderWithCommandEncoder:ring:wavesCelebration:]
  -[ARUIWavesRenderer wavesTextureWithCommandBuffer:wavesMap:size:]
  -[ARUIWavesRenderer _revealPercentFromWavesMap:]


ARUICompositingRenderState : ARUIRenderState
  // instance methods
  -[ARUICompositingRenderState renderPipelineDescriptorFromLibrary:]


ARUIAnimatableObjectPropertyAnimation : NSObject /usr/lib/libSystem.B.dylib
 @property  double duration
 @property  @? completionHandler
 @property  id _startValue
 @property  id _endValue
 @property  id _currentValue

  // class methods
  +[ARUIAnimatableObjectPropertyAnimation timingFunctionForMediaTimingFunction:]
  +[ARUIAnimatableObjectPropertyAnimation linearTimingFunction]
  +[ARUIAnimatableObjectPropertyAnimation animationWithDuration:timingFunction:completion:]

  // instance methods
  -[ARUIAnimatableObjectPropertyAnimation .cxx_destruct]
  -[ARUIAnimatableObjectPropertyAnimation duration]
  -[ARUIAnimatableObjectPropertyAnimation completionHandler]
  -[ARUIAnimatableObjectPropertyAnimation _startValue]
  -[ARUIAnimatableObjectPropertyAnimation _endValue]
  -[ARUIAnimatableObjectPropertyAnimation _currentValue]
  -[ARUIAnimatableObjectPropertyAnimation update:]
  -[ARUIAnimatableObjectPropertyAnimation _updateWithProgress:]
  -[ARUIAnimatableObjectPropertyAnimation _setStartValue:]
  -[ARUIAnimatableObjectPropertyAnimation _setCurrentValue:]
  -[ARUIAnimatableObjectPropertyAnimation isFinishedAnimating]
  -[ARUIAnimatableObjectPropertyAnimation valueByAddingCurrentValueToValue:]
  -[ARUIAnimatableObjectPropertyAnimation callAndReleaseCompletionHandler]
  -[ARUIAnimatableObjectPropertyAnimation _setEndValue:]


ARUIFloatPropertyAnimation : ARUIAnimatableObjectPropertyAnimation
 @property  float startValue
 @property  float endValue
 @property  float currentValue

  // class methods
  +[ARUIFloatPropertyAnimation animationWithEndingFloatValue:duration:customTimingFunction:completion:]
  +[ARUIFloatPropertyAnimation animationWithEndingFloatValue:duration:timingFunction:completion:]

  // instance methods
  -[ARUIFloatPropertyAnimation _startValue]
  -[ARUIFloatPropertyAnimation _endValue]
  -[ARUIFloatPropertyAnimation _currentValue]
  -[ARUIFloatPropertyAnimation currentValue]
  -[ARUIFloatPropertyAnimation startValue]
  -[ARUIFloatPropertyAnimation _updateWithProgress:]
  -[ARUIFloatPropertyAnimation endValue]
  -[ARUIFloatPropertyAnimation _setStartValue:]
  -[ARUIFloatPropertyAnimation _setCurrentValue:]
  -[ARUIFloatPropertyAnimation valueByAddingCurrentValueToValue:]
  -[ARUIFloatPropertyAnimation _setEndValue:]


ARUICGPointPropertyAnimation : ARUIAnimatableObjectPropertyAnimation
 @property  {CGPoint=dd} startValue
 @property  {CGPoint=dd} endValue
 @property  {CGPoint=dd} currentValue

  // class methods
  +[ARUICGPointPropertyAnimation animationWithEndingCGPointValue:duration:timingFunction:completion:]

  // instance methods
  -[ARUICGPointPropertyAnimation _startValue]
  -[ARUICGPointPropertyAnimation _endValue]
  -[ARUICGPointPropertyAnimation _currentValue]
  -[ARUICGPointPropertyAnimation currentValue]
  -[ARUICGPointPropertyAnimation startValue]
  -[ARUICGPointPropertyAnimation _updateWithProgress:]
  -[ARUICGPointPropertyAnimation endValue]
  -[ARUICGPointPropertyAnimation _setStartValue:]
  -[ARUICGPointPropertyAnimation _setCurrentValue:]
  -[ARUICGPointPropertyAnimation valueByAddingCurrentValueToValue:]
  -[ARUICGPointPropertyAnimation _setEndValue:]


ARUISpriteSheetFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUISpriteSheetFactory sharedInstance]
  +[ARUISpriteSheetFactory defaultSpriteSheet]
  +[ARUISpriteSheetFactory spriteSheetForRingType:]
  +[ARUISpriteSheetFactory sharingSpriteSheet]

  // instance methods
  -[ARUISpriteSheetFactory .cxx_destruct]
  -[ARUISpriteSheetFactory defaultSpriteTexture]
  -[ARUISpriteSheetFactory sharingSpriteTexture]


ARUICountdownPreAnimation : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownPreAnimation identifier]

  // instance methods
  -[ARUICountdownPreAnimation identifier]
  -[ARUICountdownPreAnimation delay]
  -[ARUICountdownPreAnimation duration]
  -[ARUICountdownPreAnimation timingFunction]
  -[ARUICountdownPreAnimation cancelable]
  -[ARUICountdownPreAnimation applyToCountdownView:completion:]


ARUIVerticalBlurRenderState : ARUIBlurRenderState
  // instance methods
  -[ARUIVerticalBlurRenderState renderPipelineDescriptorFromLibrary:forRadius:]


ARUICountdownTimeline : NSObject /usr/lib/libSystem.B.dylib
 @property  <ARUICountdownAnimation> *prepareToAnimate
 @property  NSArray *animations
 @property  <ARUICountdownAnimation> *prepareToCancel
 @property  NSArray *cancelAnimations

  // instance methods
  -[ARUICountdownTimeline .cxx_destruct]
  -[ARUICountdownTimeline animations]
  -[ARUICountdownTimeline setAnimations:]
  -[ARUICountdownTimeline prepareToAnimate]
  -[ARUICountdownTimeline prepareToCancel]
  -[ARUICountdownTimeline cancelAnimations]
  -[ARUICountdownTimeline setPrepareToAnimate:]
  -[ARUICountdownTimeline setPrepareToCancel:]
  -[ARUICountdownTimeline setCancelAnimations:]


ARUIWaveCurveFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUIWaveCurveFactory generateCurves]


ARUIRingsEndCapShadowState : ARUIRingsRenderState
  // instance methods
  -[ARUIRingsEndCapShadowState name]
  -[ARUIRingsEndCapShadowState renderPipelineDescriptorFromLibrary:]
  -[ARUIRingsEndCapShadowState didInitialize]
  -[ARUIRingsEndCapShadowState shouldRunStateForRing:]


ARUIWavesComputeState : ARUICelebrationComputeState
  // instance methods
  -[ARUIWavesComputeState computeFunctionFromLibrary:]


ARUIParticlesStaticBufferFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUIParticlesStaticBufferFactory angularParticleVertexBufferWithDevice:]
  +[ARUIParticlesStaticBufferFactory angularIndexBufferWithDevice:]
  +[ARUIParticlesStaticBufferFactory particleVertexBufferWithDevice:]
  +[ARUIParticlesStaticBufferFactory particleIndexBufferWithDevice:]
  +[ARUIParticlesStaticBufferFactory maximumAngularParticleLength]
  +[ARUIParticlesStaticBufferFactory waveVertexBufferWithDevice:pointCount:]
  +[ARUIParticlesStaticBufferFactory waveIndexBufferWithDevice:pointCount:]


ARUICountdownViewRenderer : ARUIRingsViewRenderer
  // class methods
  +[ARUICountdownViewRenderer rendererForRingGroupController:]
  +[ARUICountdownViewRenderer rendererForRingGroupControllers:]

  // instance methods
  -[ARUICountdownViewRenderer renderPipelineFactoryWithDeviceSPI:librarySPI:]
  -[ARUICountdownViewRenderer renderPipelineFactoryWithDevice:library:]


ARUIMetricColors : NSObject /usr/lib/libSystem.B.dylib
 @property  UIColor *gradientLightColor
 @property  UIColor *gradientDarkColor
 @property  UIColor *gradientContrastColor
 @property  UIColor *adjustmentButtonBackgroundColor
 @property  UIColor *nonGradientTextColor
 @property  UIColor *lightenedNonGradientColor
 @property  UIColor *buttonTextColor
 @property  UIColor *buttonDisabledTextColor
 @property  UIColor *valueDisplayColor
 @property  UIColor *platterBackgroundColor
 @property  UIColor *platterInactiveBackgroundColor
 @property  NSString *workoutRingColorIdentifier

  // class methods
  +[ARUIMetricColors energyColors]
  +[ARUIMetricColors briskColors]
  +[ARUIMetricColors sedentaryColors]
  +[ARUIMetricColors keyColors]
  +[ARUIMetricColors paceColors]
  +[ARUIMetricColors systemGrayTextColor]
  +[ARUIMetricColors newGradientForStartColor:endColor:]
  +[ARUIMetricColors distanceColors]
  +[ARUIMetricColors noMetricColors]
  +[ARUIMetricColors elapsedTimeColors]
  +[ARUIMetricColors heartRateColors]
  +[ARUIMetricColors clockColors]

  // instance methods
  -[ARUIMetricColors .cxx_destruct]
  -[ARUIMetricColors buttonTextColor]
  -[ARUIMetricColors setButtonTextColor:]
  -[ARUIMetricColors setButtonDisabledTextColor:]
  -[ARUIMetricColors buttonDisabledTextColor]
  -[ARUIMetricColors gradientDarkColor]
  -[ARUIMetricColors gradientLightColor]
  -[ARUIMetricColors gradientContrastColor]
  -[ARUIMetricColors setGradientLightColor:]
  -[ARUIMetricColors setGradientDarkColor:]
  -[ARUIMetricColors setGradientContrastColor:]
  -[ARUIMetricColors setNonGradientTextColor:]
  -[ARUIMetricColors nonGradientTextColor]
  -[ARUIMetricColors setAdjustmentButtonBackgroundColor:]
  -[ARUIMetricColors setValueDisplayColor:]
  -[ARUIMetricColors setWorkoutRingColorIdentifier:]
  -[ARUIMetricColors adjustmentButtonBackgroundColor]
  -[ARUIMetricColors setLightenedNonGradientColor:]
  -[ARUIMetricColors setPlatterBackgroundColor:]
  -[ARUIMetricColors setPlatterInactiveBackgroundColor:]
  -[ARUIMetricColors lightenedNonGradientColor]
  -[ARUIMetricColors valueDisplayColor]
  -[ARUIMetricColors platterBackgroundColor]
  -[ARUIMetricColors platterInactiveBackgroundColor]
  -[ARUIMetricColors workoutRingColorIdentifier]


ARUICelebrationFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ARUICelebrationFactory celebrationOfType:]


ARUICelebration : NSObject /usr/lib/libSystem.B.dylib
 @property  float time

  // instance methods
  -[ARUICelebration type]
  -[ARUICelebration _init]
  -[ARUICelebration time]
  -[ARUICelebration endWithCompletion:]
  -[ARUICelebration update:]
  -[ARUICelebration setTopColor:]
  -[ARUICelebration storeCelebration:withRing:]
  -[ARUICelebration setBottomColor:]
  -[ARUICelebration setContrastColor:]
  -[ARUICelebration timeBytes]


ARUICelebrationsRenderer : NSObject /usr/lib/libSystem.B.dylib <ARUIBlurRendering, ARUICelebrationsRendering, ARUICompositeRendering>
 @property  <ARUIRingsRendering> *ringsRenderer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUICelebrationsRenderer .cxx_destruct]
  -[ARUICelebrationsRenderer initWithDevice:library:]
  -[ARUICelebrationsRenderer celebrationsTextureWithCommandBuffer:forRingGroupControllers:size:]
  -[ARUICelebrationsRenderer compositeWithCommandEncoder:texture:]
  -[ARUICelebrationsRenderer setRingsRenderer:]
  -[ARUICelebrationsRenderer prewarmCelebrationPipelineForType:]
  -[ARUICelebrationsRenderer prewarmBlurRenderPipeline]
  -[ARUICelebrationsRenderer prewarmCompositeRenderPipeline]
  -[ARUICelebrationsRenderer gaussianBlurredTexture:withCommandBuffer:andSize:blurRadius:initialDownsampleFraction:brightnessMultiplier:]
  -[ARUICelebrationsRenderer compositeTexturesWithCommandBuffer:textures:andSize:]
  -[ARUICelebrationsRenderer ringsRenderer]
  -[ARUICelebrationsRenderer _prewarmQuadBuffers]
  -[ARUICelebrationsRenderer compositeWithCommandEncoder:textures:]
  -[ARUICelebrationsRenderer _downsampledTexture:withCommandBuffer:andSize:]


ARUISpriteRenderState : NSObject /usr/lib/libSystem.B.dylib <ARUIRendering, ARUIPrecompiledRendering>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <MTLRenderPipelineState> *renderPipelineState

  // instance methods
  -[ARUISpriteRenderState name]
  -[ARUISpriteRenderState .cxx_destruct]
  -[ARUISpriteRenderState initWithDevice:library:]
  -[ARUISpriteRenderState setRenderPipelineState:]
  -[ARUISpriteRenderState renderPipelineDescriptorFromLibrary:]
  -[ARUISpriteRenderState initWithPipelineLibrary:]
  -[ARUISpriteRenderState renderPipelineState]
  -[ARUISpriteRenderState shouldRunStateForIcon:]


ARUISpritesRenderPipelineFactory : ARUIPipelineFactory
  // instance methods
  -[ARUISpritesRenderPipelineFactory .cxx_destruct]
  -[ARUISpritesRenderPipelineFactory initWithDevice:library:]
  -[ARUISpritesRenderPipelineFactory pipelineForConfiguration:]
  -[ARUISpritesRenderPipelineFactory initWithDeviceSPI:librarySPI:]


ARUITangentalSparkEmitter : NSObject /usr/lib/libSystem.B.dylib <ARUIKineticSparkEmitter>
 @property  float emitterStartTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUITangentalSparkEmitter init]
  -[ARUITangentalSparkEmitter angle]
  -[ARUITangentalSparkEmitter setAngle:]
  -[ARUITangentalSparkEmitter bufferOffset]
  -[ARUITangentalSparkEmitter setParticleCount:]
  -[ARUITangentalSparkEmitter particleCount]
  -[ARUITangentalSparkEmitter setBufferOffset:]
  -[ARUITangentalSparkEmitter updateForTime:]
  -[ARUITangentalSparkEmitter generateSparks]
  -[ARUITangentalSparkEmitter setEmitterStartTime:]
  -[ARUITangentalSparkEmitter emitterStartTime]
  -[ARUITangentalSparkEmitter _updateWithStartTime:particleCount:bufferOffset:]


ARUIRingsView : UIView /System/Library/Frameworks/Foundation.framework/Foundation <ARUIRingGroupControllerDelegate, CALayerDelegate>
 @property  float screenScale
 @property  ARUIRingGroupController *ringGroupController
 @property  ARUIRingsViewRenderer *renderer
 @property  BOOL shouldBypassApplicationStateChecking
 @property  BOOL discardBackBuffers
 @property  long long preferredFramesPerSecond
 @property  BOOL viewIsVisible
 @property  BOOL paused
 @property  BOOL synchronizesWithCA
 @property  double emptyRingAlpha
 @property  unsigned long iconTextureRows
 @property  unsigned long iconTextureColumns
 @property  UIImage *iconSpriteImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ARUIRingsView ringsViewConfiguredForWatchOfType:withIcon:renderer:]
  +[ARUIRingsView ringsViewConfiguredForCompanionOfType:withRenderer:]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnWatch]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnWatchWithRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:withRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnWatchOfType:withIcon:]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnCompanion]
  +[ARUIRingsView ringsViewConfiguredForThreeRingsOnCompanionWithRenderer:]
  +[ARUIRingsView ringsViewConfiguredForOneRingOnCompanionOfType:]
  +[ARUIRingsView clearSharedCaches]

  // instance methods
  -[ARUIRingsView init]
  -[ARUIRingsView dealloc]
  -[ARUIRingsView initWithCoder:]
  -[ARUIRingsView .cxx_destruct]
  -[ARUIRingsView isPaused]
  -[ARUIRingsView setBounds:]
  -[ARUIRingsView snapshot]
  -[ARUIRingsView setOpaque:]
  -[ARUIRingsView setPaused:]
  -[ARUIRingsView setFrame:]
  -[ARUIRingsView initWithFrame:]
  -[ARUIRingsView layoutSubviews]
  -[ARUIRingsView supportedInterfaceOrientations]
  -[ARUIRingsView shouldAutorotate]
  -[ARUIRingsView willMoveToWindow:]
  -[ARUIRingsView shouldAutorotateToInterfaceOrientation:]
  -[ARUIRingsView _tick:]
  -[ARUIRingsView displayLink]
  -[ARUIRingsView setPreferredFramesPerSecond:]
  -[ARUIRingsView screenScale]
  -[ARUIRingsView preferredFramesPerSecond]
  -[ARUIRingsView renderer]
  -[ARUIRingsView viewIsVisible]
  -[ARUIRingsView updateDisplayLink]
  -[ARUIRingsView metalLayer]
  -[ARUIRingsView setActiveEnergyPercentage:animated:]
  -[ARUIRingsView setBriskPercentage:animated:]
  -[ARUIRingsView setMovingHoursPercentage:animated:]
  -[ARUIRingsView ringGroupController]
  -[ARUIRingsView setShouldBypassApplicationStateChecking:]
  -[ARUIRingsView setActiveEnergyPercentage:briskPercentage:movingHoursPercentage:animated:completion:]
  -[ARUIRingsView initWithRingGroupController:renderer:]
  -[ARUIRingsView initWithRingGroupController:]
  -[ARUIRingsView _pauseByNotification:]
  -[ARUIRingsView _resumeByNotification:]
  -[ARUIRingsView _shouldAllowRendering]
  -[ARUIRingsView setSynchronizesWithCA:]
  -[ARUIRingsView synchronizesWithCA]
  -[ARUIRingsView shouldBypassApplicationStateChecking]
  -[ARUIRingsView setRingBoundsDiameter:]
  -[ARUIRingsView setSkewAdjustmentMatrix:]
  -[ARUIRingsView maximumRingCountForControllers:]
  -[ARUIRingsView ringGroupControllerNeedsUpdate:]
  -[ARUIRingsView initWithRingGroupControllers:]
  -[ARUIRingsView ringGroupControllerWillAddCelebrationOfType:]
  -[ARUIRingsView initWithRingGroupControllers:renderer:]
  -[ARUIRingsView ringGroupControllers]
  -[ARUIRingsView _updateDrawableSize]
  -[ARUIRingsView _updateSkewAdjustment]
  -[ARUIRingsView _updateMetalLayerProperties]
  -[ARUIRingsView updateMetalLayerVisibility:]
  -[ARUIRingsView updateRingGroupControllers]
  -[ARUIRingsView drawIntoTexture:withDrawable:waitUntilCompleted:]
  -[ARUIRingsView _discardBackBuffersIfNoDisplayLink]
  -[ARUIRingsView _needsDisplayLink]
  -[ARUIRingsView ringGroups]
  -[ARUIRingsView setEmptyRingAlpha:]
  -[ARUIRingsView setShouldRenderOnLayout:]
  -[ARUIRingsView discardBackBuffers]
  -[ARUIRingsView setDiscardBackBuffers:]
  -[ARUIRingsView emptyRingAlpha]
  -[ARUIRingsView iconTextureRows]
  -[ARUIRingsView setIconTextureRows:]
  -[ARUIRingsView iconTextureColumns]
  -[ARUIRingsView setIconTextureColumns:]
  -[ARUIRingsView iconSpriteImage]
  -[ARUIRingsView setIconSpriteImage:]


ARUIRingGroupController : ARUIAnimatableObject
 @property  NSArray *rings
 @property  NSArray *rings
 @property  <ARUIRingGroupControllerDelegate> *delegate
 @property  long long numberOfRings
 @property  ARUISpriteSheet *spriteSheet
 @property  {CGPoint=dd} center
 @property  float emptyOpacity
 @property  float opacity
 @property  float ringDiameter
 @property  float ringIconSize
 @property  float ringInterspacing
 @property  float ringThickness
 @property  float ringScale
 @property  float trackOpacity
 @property  float zRotation
 @property  double backingOrigin
 @property  double additionalSpacingAtIndex

  // class methods
  +[ARUIRingGroupController animationTimingFunction]
  +[ARUIRingGroupController defaultAnimationDuration]
  +[ARUIRingGroupController ringGroupControllerConfiguredForWatchWithRingType:withIcon:]
  +[ARUIRingGroupController ringGroupControllerConfiguredForCompanionWithRingType:withIcon:]

  // instance methods
  -[ARUIRingGroupController init]
  -[ARUIRingGroupController dealloc]
  -[ARUIRingGroupController delegate]
  -[ARUIRingGroupController setDelegate:]
  -[ARUIRingGroupController .cxx_destruct]
  -[ARUIRingGroupController center]
  -[ARUIRingGroupController setCenter:]
  -[ARUIRingGroupController opacity]
  -[ARUIRingGroupController setOpacity:]
  -[ARUIRingGroupController update:]
  -[ARUIRingGroupController _setNeedsUpdate]
  -[ARUIRingGroupController zRotation]
  -[ARUIRingGroupController setZRotation:]
  -[ARUIRingGroupController _setCenter:]
  -[ARUIRingGroupController setRingThickness:]
  -[ARUIRingGroupController setRingInterspacing:]
  -[ARUIRingGroupController ringThickness]
  -[ARUIRingGroupController ringInterspacing]
  -[ARUIRingGroupController setActiveEnergyPercentage:animated:]
  -[ARUIRingGroupController setBriskPercentage:animated:]
  -[ARUIRingGroupController setMovingHoursPercentage:animated:]
  -[ARUIRingGroupController setEmptyOpacity:]
  -[ARUIRingGroupController setSpriteSheet:]
  -[ARUIRingGroupController setActiveEnergyPercentage:briskPercentage:movingHoursPercentage:animated:completion:]
  -[ARUIRingGroupController initWithNumberOfRings:]
  -[ARUIRingGroupController setRingDiameter:]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setTopColor:bottomColor:ofRingAtIndex:]
  -[ARUIRingGroupController _newAnimatablePropertyForType:]
  -[ARUIRingGroupController areAnimationsInProgress]
  -[ARUIRingGroupController setTrackOpacity:]
  -[ARUIRingGroupController emptyOpacity]
  -[ARUIRingGroupController setRingBoundsDiameter:]
  -[ARUIRingGroupController setSkewAdjustmentMatrix:]
  -[ARUIRingGroupController trackOpacity]
  -[ARUIRingGroupController ringsAreEmpty]
  -[ARUIRingGroupController rings]
  -[ARUIRingGroupController spriteSheet]
  -[ARUIRingGroupController ringDiameter]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:duration:timingFunction:completion:]
  -[ARUIRingGroupController addCelebration:toRingAtIndex:]
  -[ARUIRingGroupController removeCelebration:fromRingAtIndex:]
  -[ARUIRingGroupController setTopColor:bottomColor:contrastColor:ofRingAtIndex:]
  -[ARUIRingGroupController setPercentage:ofRingAtIndex:animated:completion:]
  -[ARUIRingGroupController setRingIconSize:]
  -[ARUIRingGroupController setRingScale:]
  -[ARUIRingGroupController _setEmptyOpacity:]
  -[ARUIRingGroupController _setOpacity:]
  -[ARUIRingGroupController _setRingDiameter:]
  -[ARUIRingGroupController _setRingIconSize:]
  -[ARUIRingGroupController _setRingInterspacing:]
  -[ARUIRingGroupController _setRingThickness:]
  -[ARUIRingGroupController _setRingScale:]
  -[ARUIRingGroupController _setTrackOpacity:]
  -[ARUIRingGroupController _setZRotation:]
  -[ARUIRingGroupController ringIconSize]
  -[ARUIRingGroupController ringScale]
  -[ARUIRingGroupController _removeAllRingAnimationsForPropertyType:]
  -[ARUIRingGroupController addAnimation:forRingGroupPropertyType:]
  -[ARUIRingGroupController _lastRingFrameNumberForRingAtIndex:]
  -[ARUIRingGroupController numberOfRings]
  -[ARUIRingGroupController backingOrigin]
  -[ARUIRingGroupController setBackingOrigin:]
  -[ARUIRingGroupController additionalSpacingAtIndex]
  -[ARUIRingGroupController setAdditionalSpacingAtIndex:]
  -[ARUIRingGroupController setRings:]
  -[ARUIRingGroupController _setFloatValue:forRingPropertyType:ofRingAtIndex:animated:]
  -[ARUIRingGroupController _setFloatValue:forIconPropertyType:ofRingAtIndex:animated:]
  -[ARUIRingGroupController _setCGPointValue:forIconPropertyType:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setFloatValue:fromCurrentValue:forRingPropertyType:ofRingAtIndex:animated:duration:completion:]
  -[ARUIRingGroupController setOpacity:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingDiameter:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingThickness:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingInterspacing:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingIconSize:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setRingIconPosition:ofRingAtIndex:animated:]
  -[ARUIRingGroupController addOpacityAnimation:forRingAtIndex:]
  -[ARUIRingGroupController diameterForRingAtIndex:]
  -[ARUIRingGroupController _setCGPointValue:forRingPropertyType:ofRingAtIndex:animated:]
  -[ARUIRingGroupController _ringPercentageAdjustedForProximityToFull:withRingDiameter:thickness:]
  -[ARUIRingGroupController _adjustedDurationForRingWithIndex:startPercentage:targetPercentage:defaultDuration:]
  -[ARUIRingGroupController _configureIconWithStartingPercentage:forRingAtIndex:animated:]
  -[ARUIRingGroupController setDotPercentage:ofRingAtIndex:animated:]
  -[ARUIRingGroupController setIconDotTextureOrigin:ofRingAtIndex:]
  -[ARUIRingGroupController setIconFirstFrameOrigin:frameSize:frameCount:columns:ofRingAtIndex:]


ARUIComputeState : NSObject /usr/lib/libSystem.B.dylib
 @property  <MTLComputePipelineState> *computePipelineState

  // instance methods
  -[ARUIComputeState .cxx_destruct]
  -[ARUIComputeState setComputePipelineState:]
  -[ARUIComputeState initWithDevice:library:]
  -[ARUIComputeState computeFunctionFromLibrary:]
  -[ARUIComputeState computePipelineState]


ARUICountdownPreCancel : ARUICountdownDefaultAnimation <ARUICountdownAnimation>
  // class methods
  +[ARUICountdownPreCancel identifier]

  // instance methods
  -[ARUICountdownPreCancel identifier]
  -[ARUICountdownPreCancel delay]
  -[ARUICountdownPreCancel duration]
  -[ARUICountdownPreCancel timingFunction]
  -[ARUICountdownPreCancel cancelable]
  -[ARUICountdownPreCancel applyToCountdownView:completion:]


ARUIIcon : ARUIAnimatableObject
 @property  {CGPoint=dd} position
 @property  double size
 @property  UIColor *color
 @property  double coloration
 @property  float alpha
 @property  {CGPoint=dd} firstFrameOrigin
 @property  {CGSize=dd} frameSize
 @property  long long frameColumns
 @property  long long frameCount
 @property  long long currentFrameIndex

  // instance methods
  -[ARUIIcon init]
  -[ARUIIcon .cxx_destruct]
  -[ARUIIcon size]
  -[ARUIIcon position]
  -[ARUIIcon color]
  -[ARUIIcon alpha]
  -[ARUIIcon setSize:]
  -[ARUIIcon setColor:]
  -[ARUIIcon isDrawable]
  -[ARUIIcon setPosition:]
  -[ARUIIcon setAlpha:]
  -[ARUIIcon setFrameCount:]
  -[ARUIIcon frameCount]
  -[ARUIIcon setFrameSize:]
  -[ARUIIcon currentFrameIndex]
  -[ARUIIcon setCurrentFrameIndex:]
  -[ARUIIcon _newAnimatablePropertyForType:]
  -[ARUIIcon coloration]
  -[ARUIIcon frameSize]
  -[ARUIIcon frameColumns]
  -[ARUIIcon firstFrameOrigin]
  -[ARUIIcon setFirstFrameOrigin:]
  -[ARUIIcon setFrameColumns:]
  -[ARUIIcon addAnimation:forRingGroupPropertyType:]
  -[ARUIIcon setColoration:]


ARUIHorizontalBlurRenderState : ARUIBlurRenderState
  // instance methods
  -[ARUIHorizontalBlurRenderState renderPipelineDescriptorFromLibrary:forRadius:]


ARUICelebrationRenderState : ARUIRenderState <ARUIRingsState>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ARUICelebrationRenderState shouldRunStateForRing:]


ARUIBlurRenderState : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ARUIBlurRenderState .cxx_destruct]
  -[ARUIBlurRenderState initWithDevice:library:]
  -[ARUIBlurRenderState renderPipelineDescriptorFromLibrary:forRadius:]
  -[ARUIBlurRenderState renderPipelineStateForBlurRadius:error:]
  -[ARUIBlurRenderState _renderPipelineStateForKey:]


CAMediaTimingFunction(ReverseSolve)
	// instance methods
	-[CAMediaTimingFunction(ReverseSolve) _reverseSolveForInput:]
	-[CAMediaTimingFunction(ReverseSolve) _slopeAt:]

MTLRenderPipelineDescriptor(Configuration)
	// instance methods
	-[MTLRenderPipelineDescriptor(Configuration) configureForSourceOverBlending]
	-[MTLRenderPipelineDescriptor(Configuration) configureForAlphaReductionBlending]
	-[MTLRenderPipelineDescriptor(Configuration) configureForAdditiveBlending]

01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMetalLayer 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0300 /System/Library/Frameworks/MetalKit.framework/MetalKit: MTKTextureLoader 
01 00 0400 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPassDescriptor 
01 00 0400 /System/Library/Frameworks/Metal.framework/Metal: MTLRenderPipelineDescriptor 
01 00 0400 /System/Library/Frameworks/Metal.framework/Metal: MTLTextureDescriptor 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
