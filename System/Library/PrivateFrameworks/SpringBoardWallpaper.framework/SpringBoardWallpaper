|| __DATA.__objc_data _OBJC_CLASS_$_SBWDefaultSessionReconnectPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SBWDeferredImageSlot
|| __DATA.__objc_data _OBJC_CLASS_$_SBWImageSlot
|| __DATA.__objc_data _OBJC_CLASS_$_SBWImageSlotRepository
|| __DATA.__objc_data _OBJC_CLASS_$_SBWImageSlotView
|| __DATA.__objc_data _OBJC_CLASS_$_SBWMutableWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBWMutableWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBWRemoteIrisWallpaperPlayer
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperDidChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperDidCompleteWallpaperChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperEffectImageRequestAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperEffectImageRequestActionIOSurfaceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperEffectImageRequestActionImageURLResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperEffectImageRequestActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperImageSlotRequestAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperPreheatAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperServer
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperStaticBackgroundView
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperUpdateActionResponse
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperUpdateAndPrewarmAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperUpdateLocationsAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWillChangeAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowScene
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneBSActionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneTwoCurveTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_SBWWallpaperWindowSceneVariantSettingsDiffAction
|| __DATA.__objc_data _OBJC_CLASS_$__SBAccessibilityTintView
|| __DATA.__objc_data _OBJC_CLASS_$__SBMaskingContainerView
|| __DATA.__objc_data _OBJC_CLASS_$__SBWFakeBlurAsset
|| __DATA.__objc_data _OBJC_CLASS_$__SBWFakeBlurConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$__SBWImageSlotRepositoryEntry
|| __DATA.__objc_data _OBJC_CLASS_$__SBWWallpaperRemoteViewControllerSceneModeAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__SBWallpaperRemoteViewControllerScaleAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWDefaultSessionReconnectPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWDeferredImageSlot
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWImageSlot
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWImageSlotRepository
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWImageSlotView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWMutableWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWMutableWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWRemoteIrisWallpaperPlayer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperDidChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperDidCompleteWallpaperChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperEffectImageRequestAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperEffectImageRequestActionIOSurfaceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperEffectImageRequestActionImageURLResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperEffectImageRequestActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperImageSlotRequestAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperPreheatAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperRemoteViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperStaticBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperUpdateActionResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperUpdateAndPrewarmAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperUpdateLocationsAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWillChangeAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowScene
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneBSActionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneClientSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneClientSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneSettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneSettingsDiffInspector
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneStyleTransitionState
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneTwoCurveTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_SBWWallpaperWindowSceneVariantSettingsDiffAction
|| __DATA.__objc_data _OBJC_METACLASS_$__SBAccessibilityTintView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBMaskingContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWFakeBlurAsset
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWFakeBlurConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWImageSlotRepositoryEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWWallpaperRemoteViewControllerSceneModeAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__SBWallpaperRemoteViewControllerScaleAssertion
|| __DATA_CONST.__const _SBWErrorDomain
|| __DATA_CONST.__const _SBWSetWallpaperVariantEntitlement
|| __DATA_CONST.__const _SBWWallpaperAccessEntitlement
|| __DATA_CONST.__const _SBWWallpaperSceneSessionRoleWallpaper
|| __DATA_CONST.__const _SBWallpaperBackdropGroupName
|| __DATA_CONST.__const _SBWallpaperEffectViewIsDarkOrHiddenReason
|| __DATA_CONST.__const _SBWallpaperViewIsDarkOrHiddenReason
|| __DATA_CONST.__const _SBWallpaperWorkspaceIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBWWallpaperEffectViewBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBWWallpaperViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SBWallpaperStyleInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBTintView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBWFakeBlurView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBWWallpaperViewControllerAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SBWWallpaperViewControllerScaleAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBWWallpaperEffectViewBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBWWallpaperViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SBWallpaperStyleInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBTintView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBWFakeBlurView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBWWallpaperViewControllerAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SBWWallpaperViewControllerScaleAssertion
|| __TEXT.__const _SpringBoardWallpaperVersionNumber
|| __TEXT.__const _SpringBoardWallpaperVersionString
|| __TEXT.__text _SBStringForStyleTransitionState
|| __TEXT.__text _SBStringForWallpaperStylePriority
|| __TEXT.__text _SBWallpaperStyleDescription
|| __TEXT.__text _SBWallpaperStyleForBackgroundStyle
|| __TEXT.__text _SBWallpaperStyleTransitionStateMake
|| __TEXT.__text __BackdropRenderingHintForWallpaperAverageColor
|| __TEXT.__text __WallpaperBackdropParametersForStyleAndAverageColor
|| __TEXT.__text __WallpaperStyleByRemovingTintFromStyle
|| __TEXT.__text __WallpaperStyleHasBlur
|| __TEXT.__text __WallpaperStyleHasDarkBlur
|| __TEXT.__text __WallpaperStyleHasTint
|| __TEXT.__text __WallpaperStyleUpdatesWithUserInterfaceStyle
__ AppSupport: _CPBitmapCreateImagesFromData
__ BaseBoardUI: _OBJC_CLASS_$_BSUIAnimationFactory
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageBlockSetRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ FrontBoard: _BSDeserializeCGFloatFromXPCDictionaryWithKey
__ FrontBoard: _BSFloatEqualToFloat
__ FrontBoard: _BSFloatIsOne
__ FrontBoard: _BSFloatIsZero
__ FrontBoard: _BSLogAddStateCaptureBlockWithTitle
__ FrontBoard: _BSSerializeCGFloatToXPCDictionaryWithKey
__ FrontBoard: _BSSettingFlagIfYes
__ FrontBoard: _BSSettingFlagIsYes
__ FrontBoard: _BSStringFromCGRect
__ FrontBoard: _BSStringFromCGSize
__ FrontBoard: _OBJC_CLASS_$_BSAction
__ FrontBoard: _OBJC_CLASS_$_BSActionResponder
__ FrontBoard: _OBJC_CLASS_$_BSActionResponse
__ FrontBoard: _OBJC_CLASS_$_BSAnimationSettings
__ FrontBoard: _OBJC_CLASS_$_BSColor
__ FrontBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoard: _OBJC_CLASS_$_BSEqualsBuilder
__ FrontBoard: _OBJC_CLASS_$_BSEventQueue
__ FrontBoard: _OBJC_CLASS_$_BSEventQueueEvent
__ FrontBoard: _OBJC_CLASS_$_BSHashBuilder
__ FrontBoard: _OBJC_CLASS_$_BSMutableSettings
__ FrontBoard: _OBJC_CLASS_$_BSServiceConnectionListener
__ FrontBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ FrontBoard: _OBJC_CLASS_$_FBDisplayManager
__ FrontBoard: _OBJC_CLASS_$_FBSSceneClientIdentity
__ FrontBoard: _OBJC_CLASS_$_FBSceneWorkspace
__ FrontBoard: _OBJC_CLASS_$_FBServiceClientAuthenticator
__ FrontBoard: _OBJC_METACLASS_$_BSAction
__ FrontBoard: _OBJC_METACLASS_$_BSActionResponse
__ FrontBoard: _OBJC_METACLASS_$_BSSimpleAssertion
__ FrontBoard: __BSSafeCast
__ IOSurface: _IOSurfaceCreateXPCObject
__ IOSurface: _IOSurfaceLookupFromXPCObject
__ QuartzCore: _OBJC_CLASS_$_CAMatchMoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillModeBoth
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentity
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFIrisWallpaperView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperConfiguration
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperParallaxSettings
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFWallpaperView
__ SpringBoardFoundation: _OBJC_CLASS_$_SBWallpaperDefaults
__ SpringBoardFoundation: _OBJC_CLASS_$_SBWallpaperImage
__ SpringBoardFoundation: _SBFBackdropOutputSettingsForWallpaperBackdropParameters
__ SpringBoardFoundation: _SBFCreateIOSurfaceForImage
__ SpringBoardFoundation: _SBFIrisWallpaperPlaybackStateDescription
__ SpringBoardFoundation: _SBFStringForWallpaperLocations
__ SpringBoardFoundation: _SBFStringForWallpaperMode
__ SpringBoardFoundation: _SBFStringForWallpaperVariant
__ SpringBoardFoundation: _SBFWallpaperBackdropParametersMake
__ SpringBoardFoundation: _SBFWallpaperDataForFileURL
__ SpringBoardFoundation: _SBFWallpaperEnumerateVariantsForLocations
__ SpringBoardFoundation: _SBFWallpaperLoggableNameForVariant
__ SpringBoardFoundation: _SBFWallpaperTransformOptionsShouldIgnoreRotation
__ SpringBoardFoundation: _SBFWallpaperViewUnknownContrast
__ SpringBoardFoundation: _SBFWindowForViewControllerTransition
__ SpringBoardFoundation: __SBFWallpaperPostExternalChangeNotificationBecauseIAmSpringBoard
__ SpringBoardServices: _SBLogCommon
__ SpringBoardServices: _SBLogWallpaper
__ SpringBoardUIServices: _OBJC_CLASS_$_SBSUIWallpaperServiceInterfaceSpecification
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSettingsDiffInspector
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_CLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_CLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindowScene
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneClientSettingsDiffInspector
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSettingsDiffInspector
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneSpecification
__ UIKit: _OBJC_METACLASS_$_UIApplicationSceneTransitionContext
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneClientSettings
__ UIKit: _OBJC_METACLASS_$_UIMutableApplicationSceneSettings
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindowScene
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAccessibilityIsReduceTransparencyEnabled
__ UIKit: _UIAccessibilityReduceTransparencyStatusDidChangeNotification
__ UIKit: _UIApp
__ UIKit: _UIIntegralTransform
__ UIKit: __UIBackdropViewSettingsStackingLevelDefault
__ UIKit: __UIBackdropViewSettingsStackingLevelHigh
__ UIKit: __UIBackdropViewSettingsStackingLevelLow
__ UIKit: __UISceneSettingsDiffActionPerformChangesWithTransitionContext
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _xpc_array_append_value
__ libSystem.B.dylib: _xpc_array_create_empty
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_create_empty
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SBWWallpaperWindowScene : UIWindowScene
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  double homescreenWallpaperScale
 @property  double lockscreenWallpaperScale
 @property  BOOL colorSamplingSuspended
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  SBWWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  SBWWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentIsLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[SBWWallpaperWindowScene homescreenWallpaperScale]
  -[SBWWallpaperWindowScene cachingIdentifier]
  -[SBWWallpaperWindowScene lockscreenWallpaperScale]
  -[SBWWallpaperWindowScene .cxx_destruct]
  -[SBWWallpaperWindowScene wallpaperVariant]
  -[SBWWallpaperWindowScene _wallpaperSceneSettings]
  -[SBWWallpaperWindowScene lockscreenWallpaperContentsRect]
  -[SBWWallpaperWindowScene lockscreenWallpaperAlpha]
  -[SBWWallpaperWindowScene homescreenWallpaperAlpha]
  -[SBWWallpaperWindowScene lockscreenOnlyWallpaperAlpha]
  -[SBWWallpaperWindowScene disallowHomescreenRasterization]
  -[SBWWallpaperWindowScene disallowLockscreenRasterization]
  -[SBWWallpaperWindowScene colorSamplingSuspended]
  -[SBWWallpaperWindowScene wallpaperAnimationSuspended]
  -[SBWWallpaperWindowScene wallpaperRequired]
  -[SBWWallpaperWindowScene homescreenStyleChangesDelayed]
  -[SBWWallpaperWindowScene homescreenStyleTransitionState]
  -[SBWWallpaperWindowScene lockscreenStyleTransitionState]
  -[SBWWallpaperWindowScene liveWallpaperTouchActive]
  -[SBWWallpaperWindowScene liveWallpaperInteractive]
  -[SBWWallpaperWindowScene _wallpaperSceneClientSettings]
  -[SBWWallpaperWindowScene homescreenMinimumWallpaperScale]
  -[SBWWallpaperWindowScene setHomescreenMinimumWallpaperScale:]
  -[SBWWallpaperWindowScene _updateWallpaperSceneClientSettingsWithBlock:]
  -[SBWWallpaperWindowScene lockscreenMinimumWallpaperScale]
  -[SBWWallpaperWindowScene setLockscreenMinimumWallpaperScale:]
  -[SBWWallpaperWindowScene homescreenLegibilitySettings]
  -[SBWWallpaperWindowScene setHomescreenLegibilitySettings:]
  -[SBWWallpaperWindowScene lockscreenLegibilitySettings]
  -[SBWWallpaperWindowScene setLockscreenLegibilitySettings:]
  -[SBWWallpaperWindowScene homescreenAverageColor]
  -[SBWWallpaperWindowScene setHomescreenAverageColor:]
  -[SBWWallpaperWindowScene lockscreenAverageColor]
  -[SBWWallpaperWindowScene setLockscreenAverageColor:]
  -[SBWWallpaperWindowScene homescreenContrast]
  -[SBWWallpaperWindowScene setHomescreenContrast:]
  -[SBWWallpaperWindowScene lockscreenContrast]
  -[SBWWallpaperWindowScene setLockscreenContrast:]
  -[SBWWallpaperWindowScene homescreenParallaxFactor]
  -[SBWWallpaperWindowScene setHomescreenParallaxFactor:]
  -[SBWWallpaperWindowScene lockscreenParallaxFactor]
  -[SBWWallpaperWindowScene setLockscreenParallaxFactor:]
  -[SBWWallpaperWindowScene homescreenParallaxEnabled]
  -[SBWWallpaperWindowScene setHomescreenParallaxEnabled:]
  -[SBWWallpaperWindowScene lockscreenParallaxEnabled]
  -[SBWWallpaperWindowScene setLockscreenParallaxEnabled:]
  -[SBWWallpaperWindowScene homescreenZoomFactor]
  -[SBWWallpaperWindowScene setHomescreenZoomFactor:]
  -[SBWWallpaperWindowScene lockscreenZoomFactor]
  -[SBWWallpaperWindowScene setLockscreenZoomFactor:]
  -[SBWWallpaperWindowScene isHomescreenContentStatic]
  -[SBWWallpaperWindowScene setHomescreenContentStatic:]
  -[SBWWallpaperWindowScene isLockscreenContentStatic]
  -[SBWWallpaperWindowScene setLockscreenContentStatic:]
  -[SBWWallpaperWindowScene isLockscreenContentLiveWallpaper]
  -[SBWWallpaperWindowScene liveWallpaperPlaybackState]
  -[SBWWallpaperWindowScene setLiveWallpaperPlaybackState:]
  -[SBWWallpaperWindowScene setLockscreenContentIsLiveWallpaper:]
  -[SBWWallpaperWindowScene noteWallpaperWillChangeForVariant:]
  -[SBWWallpaperWindowScene noteWallpaperDidChangeForVariant:]
  -[SBWWallpaperWindowScene noteWallpaperDidCompleteWallpaperChange]
  -[SBWWallpaperWindowScene _updateWallpaperVariant:inAnimationSettings:outAnimationSettings:]
  -[SBWWallpaperWindowScene _updateLockscreenWallpaperContentsRect:]
  -[SBWWallpaperWindowScene _updateLockscreenWallpaperAlpha:]
  -[SBWWallpaperWindowScene _updateHomescreenWallpaperAlpha:]
  -[SBWWallpaperWindowScene _updateLockscreenOnlyWallpaperAlpha:]
  -[SBWWallpaperWindowScene _updateDisallowRasterizationForHomescreen:lockscreen:]
  -[SBWWallpaperWindowScene _updateWallpaperHiddenForHomescreen:lockscreen:]
  -[SBWWallpaperWindowScene _updateHomescreenWallpaperScale:]
  -[SBWWallpaperWindowScene _updateLockscreenWallpaperScale:]
  -[SBWWallpaperWindowScene _updateColorSamplingSuspended:]
  -[SBWWallpaperWindowScene _updateWallpaperAnimationSuspended:]
  -[SBWWallpaperWindowScene _updateWallpaperRequired:]
  -[SBWWallpaperWindowScene _updateHomescreenStyleChangesDelayed:]
  -[SBWWallpaperWindowScene _updateHomescreenStyleTransitionStateTo:from:]
  -[SBWWallpaperWindowScene _updateLockscreenStyleTransitionStateTo:from:]
  -[SBWWallpaperWindowScene _updateLiveWallpaperTouchActive:]
  -[SBWWallpaperWindowScene _updateLiveWallpaperInteractive:]
  -[SBWWallpaperWindowScene _handleImageSlotRequestAction:]
  -[SBWWallpaperWindowScene _handleWallpaperEffectImageRequestAction:]
  -[SBWWallpaperWindowScene _handlePreheatAction:]
  -[SBWWallpaperWindowScene _handleUpdateAndPrewarmAction:]
  -[SBWWallpaperWindowScene _handleUpdateLocationsAction:]
  -[SBWWallpaperWindowScene homescreenWallpaperHidden]
  -[SBWWallpaperWindowScene lockscreenWallpaperHidden]


SBWWallpaperWindowSceneClientSettingsDiffInspector : UIApplicationSceneClientSettingsDiffInspector
  // instance methods
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContentStaticWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector _observeOtherSetting:withBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenMinimumWallpaperScaleWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenContrastWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenZoomFactorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContentLiveWallpaperWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenParallaxFactorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenParallaxEnabledWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenLegibilitySettingsWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenAverageColorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenContentStaticWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenContrastWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenMinimumWallpaperScaleWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenZoomFactorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLiveWallpaperPlaybackStateWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenAverageColorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenParallaxFactorWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeLockscreenParallaxEnabledWithBlock:]
  -[SBWWallpaperWindowSceneClientSettingsDiffInspector observeHomescreenLegibilitySettingsWithBlock:]


SBWImageSlotRepository : NSObject
  // instance methods
  -[SBWImageSlotRepository initWithWindowScene:]
  -[SBWImageSlotRepository .cxx_destruct]
  -[SBWImageSlotRepository urlForIdentifier:]
  -[SBWImageSlotRepository sizeForIdentifier:]
  -[SBWImageSlotRepository allocateImageSlotForIdentifier:size:actualStyle:url:lifetimeObject:]
  -[SBWImageSlotRepository freeImageSlotWithIdentifier:lifetime:]
  -[SBWImageSlotRepository setImageSlot:forIdentifier:]
  -[SBWImageSlotRepository hasSlotForIdentifier:]
  -[SBWImageSlotRepository actualStyleForIdentifier:]
  -[SBWImageSlotRepository ioSurfaceForIdentifier:]


_SBWImageSlotRepositoryEntry : NSObject
 @property  NSURL *url
 @property  {CGSize=dd} size
 @property  long long actualStyle
 @property  UIImage *image
 @property  IOSurface *ioSurface

  // instance methods
  -[_SBWImageSlotRepositoryEntry url]
  -[_SBWImageSlotRepositoryEntry image]
  -[_SBWImageSlotRepositoryEntry .cxx_destruct]
  -[_SBWImageSlotRepositoryEntry ioSurface]
  -[_SBWImageSlotRepositoryEntry setUrl:]
  -[_SBWImageSlotRepositoryEntry setSize:]
  -[_SBWImageSlotRepositoryEntry setImage:]
  -[_SBWImageSlotRepositoryEntry size]
  -[_SBWImageSlotRepositoryEntry dealloc]
  -[_SBWImageSlotRepositoryEntry setActualStyle:]
  -[_SBWImageSlotRepositoryEntry actualStyle]
  -[_SBWImageSlotRepositoryEntry _setBlockSet:]


SBWWallpaperEffectImageRequestAction : BSAction
 @property  NSString *slotIdentifier

  // instance methods
  -[SBWWallpaperEffectImageRequestAction keyDescriptionForSetting:]
  -[SBWWallpaperEffectImageRequestAction slotIdentifier]
  -[SBWWallpaperEffectImageRequestAction initWithSlotIdentifier:forResponseOnQueue:withHandler:]


SBWWallpaperEffectImageRequestActionResponse : BSActionResponse
 @property  long long actualStyle
 @property  {CGSize=dd} size

  // instance methods
  -[SBWWallpaperEffectImageRequestActionResponse valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperEffectImageRequestActionResponse keyDescriptionForSetting:]
  -[SBWWallpaperEffectImageRequestActionResponse size]
  -[SBWWallpaperEffectImageRequestActionResponse actualStyle]


SBWWallpaperEffectImageRequestActionImageURLResponse : SBWWallpaperEffectImageRequestActionResponse
 @property  NSURL *imageURL

  // instance methods
  -[SBWWallpaperEffectImageRequestActionImageURLResponse imageURL]
  -[SBWWallpaperEffectImageRequestActionImageURLResponse initWithActualStyle:size:imageURL:]


SBWWallpaperEffectImageRequestActionIOSurfaceResponse : SBWWallpaperEffectImageRequestActionResponse
 @property  IOSurface *ioSurface

  // instance methods
  -[SBWWallpaperEffectImageRequestActionIOSurfaceResponse ioSurface]
  -[SBWWallpaperEffectImageRequestActionIOSurfaceResponse initWithActualStyle:size:ioSurface:]


SBWWallpaperStaticBackgroundView : UIView
 @property  <BSInvalidatable> *wallpaperStyleAnimationAssertion
 @property  long long variant

  // instance methods
  -[SBWWallpaperStaticBackgroundView wallpaperStyleAnimationAssertion]
  -[SBWWallpaperStaticBackgroundView variant]
  -[SBWWallpaperStaticBackgroundView setVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[SBWWallpaperStaticBackgroundView setWallpaperStyleAnimationAssertion:]
  -[SBWWallpaperStaticBackgroundView _updateMotionEffectsForState:]
  -[SBWWallpaperStaticBackgroundView .cxx_destruct]
  -[SBWWallpaperStaticBackgroundView _endSuspendingMotionEffectsForStyleIfNeeded]
  -[SBWWallpaperStaticBackgroundView _shouldSuspendMotionEffectsForState:]
  -[SBWWallpaperStaticBackgroundView setVariant:]
  -[SBWWallpaperStaticBackgroundView _beginSuspendingMotionEffectsForStyleIfNeeded]
  -[SBWWallpaperStaticBackgroundView _shouldSuspendMotionEffectsForStyle:]
  -[SBWWallpaperStaticBackgroundView dealloc]
  -[SBWWallpaperStaticBackgroundView _newEffectViewForVariant:transitionState:]
  -[SBWWallpaperStaticBackgroundView _effectViewForVariant:]
  -[SBWWallpaperStaticBackgroundView _setEffectView:forVariant:]
  -[SBWWallpaperStaticBackgroundView initWithWallpaperPresenter:]
  -[SBWWallpaperStaticBackgroundView setWallpaperStyleTransitionState:forVariant:withAnimationFactory:]


SBWWallpaperDidChangeAction : BSAction
 @property  long long variant

  // instance methods
  -[SBWWallpaperDidChangeAction valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperDidChangeAction variant]
  -[SBWWallpaperDidChangeAction keyDescriptionForSetting:]
  -[SBWWallpaperDidChangeAction initWithVariant:]


SBWWallpaperDidCompleteWallpaperChangeAction : BSAction
  // instance methods
  -[SBWWallpaperDidCompleteWallpaperChangeAction init]


SBWRemoteIrisWallpaperPlayer : NSObject <UIGestureRecognizerDelegate, SBFIrisWallpaperPlaying>
 @property  BOOL touchActive
 @property  <SBWRemoteIrisWallpaperPlayerDelegate> *delegate
 @property  long long irisPlaybackState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBFIrisWallpaperPlayerDelegate> *irisDelegate
 @property  BOOL isIrisInteracting

  // instance methods
  -[SBWRemoteIrisWallpaperPlayer isTouchActive]
  -[SBWRemoteIrisWallpaperPlayer .cxx_destruct]
  -[SBWRemoteIrisWallpaperPlayer isIrisInteracting]
  -[SBWRemoteIrisWallpaperPlayer setDelegate:]
  -[SBWRemoteIrisWallpaperPlayer irisDelegate]
  -[SBWRemoteIrisWallpaperPlayer init]
  -[SBWRemoteIrisWallpaperPlayer irisGestureRecognizer]
  -[SBWRemoteIrisWallpaperPlayer irisPlaybackState]
  -[SBWRemoteIrisWallpaperPlayer setIrisDelegate:]
  -[SBWRemoteIrisWallpaperPlayer delegate]
  -[SBWRemoteIrisWallpaperPlayer _wallpaperGestureChanged:]
  -[SBWRemoteIrisWallpaperPlayer _handleWallpaperGestureBegan]
  -[SBWRemoteIrisWallpaperPlayer _handleWallpaperGestureEnded]
  -[SBWRemoteIrisWallpaperPlayer _handleWallpaperGestureChanged]
  -[SBWRemoteIrisWallpaperPlayer _setTouchActive:]
  -[SBWRemoteIrisWallpaperPlayer _setIrisPlaybackState:]


SBWWallpaperUpdateLocationsAction : BSAction
 @property  long long locations
 @property  long long wallpaperMode

  // instance methods
  -[SBWWallpaperUpdateLocationsAction valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperUpdateLocationsAction keyDescriptionForSetting:]
  -[SBWWallpaperUpdateLocationsAction locations]
  -[SBWWallpaperUpdateLocationsAction wallpaperMode]
  -[SBWWallpaperUpdateLocationsAction initWithLocations:wallpaperMode:responder:]


SBWWallpaperUpdateActionResponse : BSActionResponse
  // instance methods
  -[SBWWallpaperUpdateActionResponse init]


SBWWallpaperViewController : UIViewController <SBFWallpaperConfigurationManagerDelegate, SBFLegibilitySettingsProviderDelegate, SBFWallpaperViewInternalObserver, PTSettingsKeyObserver, BSDescriptionProviding, SBFWallpaperViewDelegate, SBWWallpaperPresenting, SBWWallpaperLegibilityProviding>
 @property  SBFWallpaperView *lockscreenWallpaperView
 @property  SBFWallpaperView *homescreenWallpaperView
 @property  SBFWallpaperView *sharedWallpaperView
 @property  SBWallpaperStyleInfo *homescreenStyleInfo
 @property  SBWallpaperStyleInfo *lockscreenStyleInfo
 @property  <BSInvalidatable> *wallpaperStyleAnimationAssertion
 @property  UITraitCollection *fakeBlurViewOverrideTraitCollection
 @property  SBFWallpaperConfigurationManager *wallpaperConfigurationManager
 @property  NSString *cachingIdentifier
 @property  <SBWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  BOOL fixedOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBWWallpaperPresentingDelegate> *wallpaperPresentingDelegate
 @property  long long variant
 @property  double homescreenWallpaperScale
 @property  double minimumHomescreenWallpaperScale
 @property  double lockscreenWallpaperScale
 @property  double minimumLockscreenWallpaperScale
 @property  <SBFIrisWallpaperPlaying> *irisWallpaperPlayer
 @property  {?=qqd} currentHomescreenStyleTransitionState

  // class methods
  +[SBWWallpaperViewController substitutionFlatColorForWallpaperName:]

  // instance methods
  -[SBWWallpaperViewController wallpaperStyleAnimationAssertion]
  -[SBWWallpaperViewController wallpaperConfigurationManager]
  -[SBWWallpaperViewController addObserver:forVariant:]
  -[SBWWallpaperViewController setLockscreenWallpaperScale:]
  -[SBWWallpaperViewController updateWallpaperForLocations:wallpaperMode:withCompletion:]
  -[SBWWallpaperViewController wallpaperView:wallpaperConfigurationIncludingValueTypes:]
  -[SBWWallpaperViewController cancelInProcessAnimations]
  -[SBWWallpaperViewController setWallpaperStyle:forPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperViewController setWallpaperPresentingDelegate:]
  -[SBWWallpaperViewController variant]
  -[SBWWallpaperViewController endDelayingHomescreenStyleChangesForReason:animationFactory:]
  -[SBWWallpaperViewController removeObserver:forVariant:]
  -[SBWWallpaperViewController removeWallpaperRequiredAssertion:]
  -[SBWWallpaperViewController preheatWallpaperForVariant:]
  -[SBWWallpaperViewController _suspendOrResumeColorSampling]
  -[SBWWallpaperViewController setDisallowsRasterization:forVariant:withReason:]
  -[SBWWallpaperViewController homescreenWallpaperScale]
  -[SBWWallpaperViewController fakeBlurViewOverrideTraitCollection]
  -[SBWWallpaperViewController suspendColorSamplingForReason:]
  -[SBWWallpaperViewController setWallpaperHidden:variant:reason:]
  -[SBWWallpaperViewController beginDelayingHomescreenStyleChangesForReason:]
  -[SBWWallpaperViewController updateIrisWallpaperForStaticMode]
  -[SBWWallpaperViewController cachingIdentifier]
  -[SBWWallpaperViewController wallpaperViewDidChangeWantsRasterization:]
  -[SBWWallpaperViewController setLockscreenWallpaperScale:withAnimationFactory:]
  -[SBWWallpaperViewController setLockscreenWallpaperContentsRect:]
  -[SBWWallpaperViewController averageColorForVariant:]
  -[SBWWallpaperViewController beginRequiringWithReason:]
  -[SBWWallpaperViewController wallpaperPresentingDelegate]
  -[SBWWallpaperViewController updateIrisWallpaperForInteractiveMode]
  -[SBWWallpaperViewController minimumHomescreenWallpaperScale]
  -[SBWWallpaperViewController minimumLockscreenWallpaperScale]
  -[SBWWallpaperViewController averageColorInRect:forVariant:withSmudgeRadius:]
  -[SBWWallpaperViewController setAlpha:forWallpaperVariant:]
  -[SBWWallpaperViewController irisWallpaperPlayer]
  -[SBWWallpaperViewController setFakeBlurViewOverrideTraitCollection:]
  -[SBWWallpaperViewController setVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[SBWWallpaperViewController contrastForVariant:]
  -[SBWWallpaperViewController setHomescreenWallpaperScale:withAnimationFactory:]
  -[SBWWallpaperViewController _updateWallpaperForLocations:options:wallpaperMode:withCompletion:]
  -[SBWWallpaperViewController wallpaperView:didChangeZoomFactor:]
  -[SBWWallpaperViewController lockscreenWallpaperScale]
  -[SBWWallpaperViewController suspendWallpaperAnimationForReason:]
  -[SBWWallpaperViewController updateWallpaperForLocations:withCompletion:]
  -[SBWWallpaperViewController removeWallpaperStyleForPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperViewController contrastInRect:forVariant:]
  -[SBWWallpaperViewController newFakeBlurViewForVariant:style:transformOptions:]
  -[SBWWallpaperViewController averageColorInRect:forVariant:]
  -[SBWWallpaperViewController wallpaperViewDidInvalidateBlurs:]
  -[SBWWallpaperViewController setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperViewController legibilitySettingsForVariant:]
  -[SBWWallpaperViewController _wallpaperViewForVariant:]
  -[SBWWallpaperViewController setLockscreenOnlyWallpaperAlpha:]
  -[SBWWallpaperViewController setWallpaperStyleAnimationAssertion:]
  -[SBWWallpaperViewController providerLegibilitySettingsChanged:]
  -[SBWWallpaperViewController _wallpaperViewClassForType:]
  -[SBWWallpaperViewController _accessibilityReduceTransparencyChanged:]
  -[SBWWallpaperViewController wallpaperStyleInfoForVariant:]
  -[SBWWallpaperViewController traitCollectionDidChange:]
  -[SBWWallpaperViewController endSimulatedLiveWallpaperTouchWithReason:]
  -[SBWWallpaperViewController _updateMotionEffectsForState:]
  -[SBWWallpaperViewController setReachabilityCoordinator:]
  -[SBWWallpaperViewController _removeColorSamplingAssertion:]
  -[SBWWallpaperViewController wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:]
  -[SBWWallpaperViewController _isWallpaperHiddenForVariant:]
  -[SBWWallpaperViewController _precacheStyles:usingTraitCollection:]
  -[SBWWallpaperViewController noteWallpapersDidUpdate]
  -[SBWWallpaperViewController .cxx_destruct]
  -[SBWWallpaperViewController _updateRasterizationState]
  -[SBWWallpaperViewController _vendWallpaperViewForConfiguration:forVariant:shared:options:]
  -[SBWWallpaperViewController viewDidLoad]
  -[SBWWallpaperViewController _updateSeparateWallpaperForVariants:options:wallpaperMode:]
  -[SBWWallpaperViewController _updateBlurImagesForVariant:]
  -[SBWWallpaperViewController succinctDescriptionBuilder]
  -[SBWWallpaperViewController _updateWallpaperHidden]
  -[SBWWallpaperViewController _unregisterFakeBlurView:]
  -[SBWWallpaperViewController cleanupOldSharedWallpaper:lockSreenWallpaper:homeScreenWallpaper:]
  -[SBWWallpaperViewController initWithNibName:bundle:]
  -[SBWWallpaperViewController _handleWallpaperChangedForVariant:]
  -[SBWWallpaperViewController _bestWallpaperViewInitializationOptionsForVariant:shared:wallpaperOptions:options:]
  -[SBWWallpaperViewController shouldAutorotate]
  -[SBWWallpaperViewController _endSuspendingMotionEffectsForStyleIfNeeded]
  -[SBWWallpaperViewController _handleWallpaperLegibilitySettingsChanged:forVariant:]
  -[SBWWallpaperViewController _shouldSuspendMotionEffectsForState:]
  -[SBWWallpaperViewController descriptionBuilderWithMultilinePrefix:]
  -[SBWWallpaperViewController _endDisallowRasterizationBlock]
  -[SBWWallpaperViewController _isRasterizationDisallowedForCurrentVariant]
  -[SBWWallpaperViewController setFixedOrientation:]
  -[SBWWallpaperViewController _removeWallpaperScaleAssertion:withAnimationFactory:]
  -[SBWWallpaperViewController _sourceForFakeBlurView:]
  -[SBWWallpaperViewController descriptionWithMultilinePrefix:]
  -[SBWWallpaperViewController fixedOrientation]
  -[SBWWallpaperViewController _beginDisallowRasterizationBlock]
  -[SBWWallpaperViewController minimumWallpaperScaleForVariant:]
  -[SBWWallpaperViewController _registerFakeBlurView:]
  -[SBWWallpaperViewController _clearWallpaperView:]
  -[SBWWallpaperViewController beginSimulatedLiveWallpaperTouchWithReason:]
  -[SBWWallpaperViewController setVariant:]
  -[SBWWallpaperViewController succinctDescription]
  -[SBWWallpaperViewController _updateHomeScreenWallpaperScaleWithAnimationFactory:]
  -[SBWWallpaperViewController setWallpaperConfigurationManager:]
  -[SBWWallpaperViewController lockscreenStyleInfo]
  -[SBWWallpaperViewController currentHomescreenStyleTransitionState]
  -[SBWWallpaperViewController _observersForVariant:]
  -[SBWWallpaperViewController wallpaperEffectImageForStyle:variant:traitCollection:result:]
  -[SBWWallpaperViewController _setWallpaperHidden:variant:reason:]
  -[SBWWallpaperViewController _updateWallpaperForWallpaperDimming:]
  -[SBWWallpaperViewController shouldDelayHomescreenStyleUpdates]
  -[SBWWallpaperViewController _updateEffectViewForVariant:withFactory:]
  -[SBWWallpaperViewController _blurViewsForVariant:]
  -[SBWWallpaperViewController _beginSuspendingMotionEffectsForStyleIfNeeded]
  -[SBWWallpaperViewController _setDisallowRasterization:withReason:reasons:]
  -[SBWWallpaperViewController sharedWallpaperView]
  -[SBWWallpaperViewController setCachingIdentifier:]
  -[SBWWallpaperViewController _activeWallpaperView]
  -[SBWWallpaperViewController setSharedWallpaperView:]
  -[SBWWallpaperViewController setHomescreenWallpaperView:]
  -[SBWWallpaperViewController homescreenWallpaperView]
  -[SBWWallpaperViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBWWallpaperViewController _updateAndPrewarmWallpapers]
  -[SBWWallpaperViewController wallpaperConfigurationManager:legibilitySettingsForVariant:]
  -[SBWWallpaperViewController settings:changedValueForKey:]
  -[SBWWallpaperViewController _shouldSuspendMotionEffectsForStyle:]
  -[SBWWallpaperViewController noteDidRotateFromInterfaceOrientation:]
  -[SBWWallpaperViewController substitutionWallpaperConfigurationForWallpaperConfiguration:]
  -[SBWWallpaperViewController wallpaperConfigurationForUpdatingWallpaperViewsForVariant:wallpaperMode:]
  -[SBWWallpaperViewController _suspendOrResumeWallpaperAnimation]
  -[SBWWallpaperViewController _updateWallpaperForWallpaperMode:]
  -[SBWWallpaperViewController wallpaperDataTypesToRequestForUpdatingWallpaperViews]
  -[SBWWallpaperViewController _clearWallpaperEffectView:]
  -[SBWWallpaperViewController _isWallpaperView:displayingWallpaperWithConfiguration:forVariant:]
  -[SBWWallpaperViewController dealloc]
  -[SBWWallpaperViewController _updateEffectViewForVariant:oldState:newState:oldEffectView:newEffectView:]
  -[SBWWallpaperViewController variantsShareWallpaper]
  -[SBWWallpaperViewController _invalidateWallpaperAssertion:]
  -[SBWWallpaperViewController wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:]
  -[SBWWallpaperViewController _removeWallpaperAnimationAssertion:]
  -[SBWWallpaperViewController _updateBlurGeneration]
  -[SBWWallpaperViewController noteWillAnimateToInterfaceOrientation:]
  -[SBWWallpaperViewController _newWallpaperEffectViewForVariant:transitionState:]
  -[SBWWallpaperViewController _reconfigureBlurViewsForVariant:]
  -[SBWWallpaperViewController setLockscreenWallpaperView:]
  -[SBWWallpaperViewController lockscreenWallpaperView]
  -[SBWWallpaperViewController _updateSharedWallpaperWithOptions:wallpaperMode:]
  -[SBWWallpaperViewController reachabilityCoordinator]
  -[SBWWallpaperViewController _canShowWhileLocked]
  -[SBWWallpaperViewController _makeWallpaperViewWithConfiguration:forVariant:shared:options:]
  -[SBWWallpaperViewController _updateWallpaperParallax]
  -[SBWWallpaperViewController homescreenStyleInfo]


_SBWWallpaperViewControllerAssertion : NSObject <BSInvalidatable, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBWWallpaperViewController *wallpaperViewController
 @property  long long type
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBWWallpaperViewControllerAssertion isInvalidated]
  -[_SBWWallpaperViewControllerAssertion .cxx_destruct]
  -[_SBWWallpaperViewControllerAssertion succinctDescriptionBuilder]
  -[_SBWWallpaperViewControllerAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBWWallpaperViewControllerAssertion setInvalidated:]
  -[_SBWWallpaperViewControllerAssertion descriptionWithMultilinePrefix:]
  -[_SBWWallpaperViewControllerAssertion succinctDescription]
  -[_SBWWallpaperViewControllerAssertion reason]
  -[_SBWWallpaperViewControllerAssertion type]
  -[_SBWWallpaperViewControllerAssertion initWithWallpaperViewController:type:reason:]
  -[_SBWWallpaperViewControllerAssertion dealloc]
  -[_SBWWallpaperViewControllerAssertion invalidate]
  -[_SBWWallpaperViewControllerAssertion wallpaperViewController]


_SBWWallpaperViewControllerScaleAssertion : NSObject <SBWWallpaperScaleInvalidating, BSDescriptionProviding>
 @property  BOOL invalidated
 @property  SBWWallpaperViewController *wallpaperViewController
 @property  double scale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBWWallpaperViewControllerScaleAssertion isInvalidated]
  -[_SBWWallpaperViewControllerScaleAssertion invalidateWithAnimationFactory:]
  -[_SBWWallpaperViewControllerScaleAssertion .cxx_destruct]
  -[_SBWWallpaperViewControllerScaleAssertion succinctDescriptionBuilder]
  -[_SBWWallpaperViewControllerScaleAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBWWallpaperViewControllerScaleAssertion initWithWallpaperViewController:scale:]
  -[_SBWWallpaperViewControllerScaleAssertion setInvalidated:]
  -[_SBWWallpaperViewControllerScaleAssertion descriptionWithMultilinePrefix:]
  -[_SBWWallpaperViewControllerScaleAssertion succinctDescription]
  -[_SBWWallpaperViewControllerScaleAssertion dealloc]
  -[_SBWWallpaperViewControllerScaleAssertion invalidate]
  -[_SBWWallpaperViewControllerScaleAssertion scale]
  -[_SBWWallpaperViewControllerScaleAssertion wallpaperViewController]


SBWWallpaperImageSlotRequestAction : BSAction
 @property  long long variant
 @property  long long desiredStyle
 @property  UITraitCollection *traitCollection
 @property  NSString *slotIdentifier

  // instance methods
  -[SBWWallpaperImageSlotRequestAction valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperImageSlotRequestAction variant]
  -[SBWWallpaperImageSlotRequestAction keyDescriptionForSetting:]
  -[SBWWallpaperImageSlotRequestAction traitCollection]
  -[SBWWallpaperImageSlotRequestAction slotIdentifier]
  -[SBWWallpaperImageSlotRequestAction desiredStyle]
  -[SBWWallpaperImageSlotRequestAction initWithVariant:desiredStyle:traitCollection:slotIdentifier:forResponseOnQueue:withHandler:]


SBWWallpaperServer : NSObject <BSServiceConnectionListenerDelegate, SBSUIWallpaperClientToServerInterface>
 @property  <SBWWallpaperServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperServer getWallpaperLegibilitySettingsForVariant:]
  -[SBWWallpaperServer listener:didReceiveConnection:withContext:]
  -[SBWWallpaperServer .cxx_destruct]
  -[SBWWallpaperServer setDelegate:]
  -[SBWWallpaperServer init]
  -[SBWWallpaperServer activate]
  -[SBWWallpaperServer _queue_removeConnection:]
  -[SBWWallpaperServer delegate]
  -[SBWWallpaperServer _queue_addConnection:]
  -[SBWWallpaperServer invalidate]
  -[SBWWallpaperServer setWallpaperImage:adjustedImage:thumbnailData:imageHashData:wallpaperOptions:forLocations:currentWallpaperMode:]
  -[SBWWallpaperServer setProceduralWallpaperIdentifier:options:locations:]
  -[SBWWallpaperServer removeWallpaperVideo]
  -[SBWWallpaperServer setWallpaperWithVideo:sandboxToken:cropRect:wallpaperMode:]
  -[SBWWallpaperServer restoreDefaultWallpaper]
  -[SBWWallpaperServer setWallpaperColor:darkColor:forLocations:]
  -[SBWWallpaperServer setWallpaperGradient:forLocations:]
  -[SBWWallpaperServer getWallpaperOptionsForVariant:]


SBWWallpaperWindowSceneVariantSettingsDiffAction : NSObject <_UISceneSettingsDiffAction>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperWindowSceneVariantSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[SBWWallpaperWindowSceneVariantSettingsDiffAction .cxx_destruct]
  -[SBWWallpaperWindowSceneVariantSettingsDiffAction _wallpaperVariantSceneSettingsDiffInspector]


SBWWallpaperWindowSceneSpecification : UIApplicationSceneSpecification
  // instance methods
  -[SBWWallpaperWindowSceneSpecification uiSceneSessionRole]
  -[SBWWallpaperWindowSceneSpecification initialSettingsDiffActions]
  -[SBWWallpaperWindowSceneSpecification uiSceneMinimumClass]
  -[SBWWallpaperWindowSceneSpecification initialActionHandlers]
  -[SBWWallpaperWindowSceneSpecification settingsClass]
  -[SBWWallpaperWindowSceneSpecification clientSettingsClass]


SBWWallpaperUpdateAndPrewarmAction : BSAction
  // instance methods
  -[SBWWallpaperUpdateAndPrewarmAction initWithResponder:]


SBWDefaultSessionReconnectPolicy : NSObject <SBWSessionReconnectPolicy>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWDefaultSessionReconnectPolicy .cxx_destruct]
  -[SBWDefaultSessionReconnectPolicy init]
  -[SBWDefaultSessionReconnectPolicy sessionDidDisconnect]
  -[SBWDefaultSessionReconnectPolicy sessionReconnectDelay]


SBWWallpaperRemoteViewController : UIViewController <BSDescriptionProviding, FBSceneDelegate, FBSceneLayerManagerObserver, SBFWallpaperConfigurationManagerDelegate, SBFWallpaperViewDelegate, _SBWFakeBlurImageProviding, _SBWFakeBlurViewRegistering, SBWRemoteIrisWallpaperPlayerDelegate, SBWWallpaperPresenting, SBWWallpaperLegibilityProviding>
 @property  long long viewMode
 @property  NSString *cachingIdentifier
 @property  SBFWallpaperConfigurationManager *wallpaperConfigurationManager
 @property  <SBWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SBWWallpaperPresentingDelegate> *wallpaperPresentingDelegate
 @property  long long variant
 @property  double homescreenWallpaperScale
 @property  double minimumHomescreenWallpaperScale
 @property  double lockscreenWallpaperScale
 @property  double minimumLockscreenWallpaperScale
 @property  <SBFIrisWallpaperPlaying> *irisWallpaperPlayer
 @property  {?=qqd} currentHomescreenStyleTransitionState

  // instance methods
  -[SBWWallpaperRemoteViewController wallpaperConfigurationManager]
  -[SBWWallpaperRemoteViewController viewMode]
  -[SBWWallpaperRemoteViewController addObserver:forVariant:]
  -[SBWWallpaperRemoteViewController setLockscreenWallpaperScale:]
  -[SBWWallpaperRemoteViewController updateWallpaperForLocations:wallpaperMode:withCompletion:]
  -[SBWWallpaperRemoteViewController wallpaperView:wallpaperConfigurationIncludingValueTypes:]
  -[SBWWallpaperRemoteViewController cancelInProcessAnimations]
  -[SBWWallpaperRemoteViewController setWallpaperStyle:forPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperRemoteViewController setWallpaperPresentingDelegate:]
  -[SBWWallpaperRemoteViewController variant]
  -[SBWWallpaperRemoteViewController endDelayingHomescreenStyleChangesForReason:animationFactory:]
  -[SBWWallpaperRemoteViewController removeObserver:forVariant:]
  -[SBWWallpaperRemoteViewController preheatWallpaperForVariant:]
  -[SBWWallpaperRemoteViewController setDisallowsRasterization:forVariant:withReason:]
  -[SBWWallpaperRemoteViewController homescreenWallpaperScale]
  -[SBWWallpaperRemoteViewController suspendColorSamplingForReason:]
  -[SBWWallpaperRemoteViewController setWallpaperHidden:variant:reason:]
  -[SBWWallpaperRemoteViewController beginDelayingHomescreenStyleChangesForReason:]
  -[SBWWallpaperRemoteViewController updateIrisWallpaperForStaticMode]
  -[SBWWallpaperRemoteViewController cachingIdentifier]
  -[SBWWallpaperRemoteViewController setLockscreenWallpaperScale:withAnimationFactory:]
  -[SBWWallpaperRemoteViewController setLockscreenWallpaperContentsRect:]
  -[SBWWallpaperRemoteViewController averageColorForVariant:]
  -[SBWWallpaperRemoteViewController beginRequiringWithReason:]
  -[SBWWallpaperRemoteViewController wallpaperPresentingDelegate]
  -[SBWWallpaperRemoteViewController updateIrisWallpaperForInteractiveMode]
  -[SBWWallpaperRemoteViewController minimumHomescreenWallpaperScale]
  -[SBWWallpaperRemoteViewController minimumLockscreenWallpaperScale]
  -[SBWWallpaperRemoteViewController averageColorInRect:forVariant:withSmudgeRadius:]
  -[SBWWallpaperRemoteViewController setAlpha:forWallpaperVariant:]
  -[SBWWallpaperRemoteViewController irisWallpaperPlayer]
  -[SBWWallpaperRemoteViewController imageForWallpaperStyle:variant:traitCollection:]
  -[SBWWallpaperRemoteViewController setVariant:withOutAnimationFactory:inAnimationFactory:completion:]
  -[SBWWallpaperRemoteViewController contrastForVariant:]
  -[SBWWallpaperRemoteViewController setHomescreenWallpaperScale:withAnimationFactory:]
  -[SBWWallpaperRemoteViewController lockscreenWallpaperScale]
  -[SBWWallpaperRemoteViewController suspendWallpaperAnimationForReason:]
  -[SBWWallpaperRemoteViewController updateWallpaperForLocations:withCompletion:]
  -[SBWWallpaperRemoteViewController removeWallpaperStyleForPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperRemoteViewController contrastInRect:forVariant:]
  -[SBWWallpaperRemoteViewController newFakeBlurViewForVariant:style:transformOptions:]
  -[SBWWallpaperRemoteViewController averageColorInRect:forVariant:]
  -[SBWWallpaperRemoteViewController setWallpaperStyleTransitionState:forPriority:forVariant:withAnimationFactory:]
  -[SBWWallpaperRemoteViewController legibilitySettingsForVariant:]
  -[SBWWallpaperRemoteViewController setLockscreenOnlyWallpaperAlpha:]
  -[SBWWallpaperRemoteViewController traitCollectionDidChange:]
  -[SBWWallpaperRemoteViewController setReachabilityCoordinator:]
  -[SBWWallpaperRemoteViewController sceneDidDeactivate:withError:]
  -[SBWWallpaperRemoteViewController .cxx_destruct]
  -[SBWWallpaperRemoteViewController scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:]
  -[SBWWallpaperRemoteViewController viewDidLoad]
  -[SBWWallpaperRemoteViewController _sceneSettings]
  -[SBWWallpaperRemoteViewController updateImageProviderView:withImage:]
  -[SBWWallpaperRemoteViewController parallaxFactorForVariant:]
  -[SBWWallpaperRemoteViewController succinctDescriptionBuilder]
  -[SBWWallpaperRemoteViewController scene:didReceiveActions:]
  -[SBWWallpaperRemoteViewController _unregisterFakeBlurView:]
  -[SBWWallpaperRemoteViewController initWithNibName:bundle:]
  -[SBWWallpaperRemoteViewController shouldAutorotate]
  -[SBWWallpaperRemoteViewController descriptionBuilderWithMultilinePrefix:]
  -[SBWWallpaperRemoteViewController _addStateCaptureHandlers]
  -[SBWWallpaperRemoteViewController descriptionWithMultilinePrefix:]
  -[SBWWallpaperRemoteViewController _registerFakeBlurView:]
  -[SBWWallpaperRemoteViewController setVariant:]
  -[SBWWallpaperRemoteViewController succinctDescription]
  -[SBWWallpaperRemoteViewController setWallpaperConfigurationManager:]
  -[SBWWallpaperRemoteViewController currentHomescreenStyleTransitionState]
  -[SBWWallpaperRemoteViewController _observersForVariant:]
  -[SBWWallpaperRemoteViewController zoomFactorForVariant:]
  -[SBWWallpaperRemoteViewController setViewMode:]
  -[SBWWallpaperRemoteViewController _blurViewsForVariant:]
  -[SBWWallpaperRemoteViewController setCachingIdentifier:]
  -[SBWWallpaperRemoteViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SBWWallpaperRemoteViewController newImageProviderView]
  -[SBWWallpaperRemoteViewController noteDidRotateFromInterfaceOrientation:]
  -[SBWWallpaperRemoteViewController dealloc]
  -[SBWWallpaperRemoteViewController parallaxEnabledForVariant:]
  -[SBWWallpaperRemoteViewController wallpaperConfigurationManager:didChangeWallpaperConfigurationForVariants:]
  -[SBWWallpaperRemoteViewController supportedInterfaceOrientations]
  -[SBWWallpaperRemoteViewController _reconfigureBlurViewsForVariant:]
  -[SBWWallpaperRemoteViewController reachabilityCoordinator]
  -[SBWWallpaperRemoteViewController _canShowWhileLocked]
  -[SBWWallpaperRemoteViewController _updateViewMode]
  -[SBWWallpaperRemoteViewController noteWillAnimateToInterfaceOrientation:duration:]
  -[SBWWallpaperRemoteViewController acquireActiveWallpaperSceneAssertionWithAction:completion:]
  -[SBWWallpaperRemoteViewController remoteIrisWallpaperPlayer:touchActiveChanged:]
  -[SBWWallpaperRemoteViewController _updateWallpaperSceneSettingsWithBlock:]
  -[SBWWallpaperRemoteViewController _acquireSceneModeAssertionForReason:sceneMode:]
  -[SBWWallpaperRemoteViewController _performWithLiveScene:]
  -[SBWWallpaperRemoteViewController _setupScene]
  -[SBWWallpaperRemoteViewController _updateFallbackView]
  -[SBWWallpaperRemoteViewController _acquireLiveModeAssertionForReason:]
  -[SBWWallpaperRemoteViewController _cachedBlurAssetForVariant:requestedStyle:traitCollection:]
  -[SBWWallpaperRemoteViewController _blurImageFromURL:]
  -[SBWWallpaperRemoteViewController _cacheBlurImageForVariant:requestedStyle:actualStyle:traitCollection:image:imageURL:]
  -[SBWWallpaperRemoteViewController _sceneClientSettings]
  -[SBWWallpaperRemoteViewController _updateHomescreenWallpaperScaleWithAnimationSettings:]
  -[SBWWallpaperRemoteViewController _disallowRasterizationReasonsForVariant:]
  -[SBWWallpaperRemoteViewController _hideWallpaperReasonsForVariant:]
  -[SBWWallpaperRemoteViewController _simpleAssertionWithReasonsSet:identifier:reason:updater:]
  -[SBWWallpaperRemoteViewController _updateWallpaperSceneSettingsWithBlock:postUpdateBlock:]
  -[SBWWallpaperRemoteViewController _updateBlurViewsForVariant:]
  -[SBWWallpaperRemoteViewController _effectiveSceneMode]
  -[SBWWallpaperRemoteViewController _setupSceneWithCompletion:]
  -[SBWWallpaperRemoteViewController _notifyAllObserversOfNewWallpaperScene]
  -[SBWWallpaperRemoteViewController _modifySceneSettings:forSceneMode:]
  -[SBWWallpaperRemoteViewController _computeHomescreenWallpaperScale]
  -[SBWWallpaperRemoteViewController _invalidateBlurCacheForVariant:]
  -[SBWWallpaperRemoteViewController _updateSceneModeWithCompletion:]
  -[SBWWallpaperRemoteViewController _scheduleSceneDeactivation]
  -[SBWWallpaperRemoteViewController _cancelSceneDeactivation]
  -[SBWWallpaperRemoteViewController _acquireSceneModeAssertionForReason:sceneMode:completion:]
  -[SBWWallpaperRemoteViewController _updateSceneMode]
  -[SBWWallpaperRemoteViewController _setSceneModeAssertionForViewMode:]


_SBWWallpaperRemoteViewControllerSceneModeAssertion : BSSimpleAssertion
 @property  long long sceneMode

  // instance methods
  -[_SBWWallpaperRemoteViewControllerSceneModeAssertion descriptionBuilderWithMultilinePrefix:]
  -[_SBWWallpaperRemoteViewControllerSceneModeAssertion sceneMode]
  -[_SBWWallpaperRemoteViewControllerSceneModeAssertion initWithIdentifier:forReason:sceneMode:invalidationBlock:]


_SBWallpaperRemoteViewControllerScaleAssertion : BSSimpleAssertion <SBWWallpaperScaleInvalidating>
 @property  double scale
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBWallpaperRemoteViewControllerScaleAssertion invalidateWithAnimationFactory:]
  -[_SBWallpaperRemoteViewControllerScaleAssertion .cxx_destruct]
  -[_SBWallpaperRemoteViewControllerScaleAssertion scale]
  -[_SBWallpaperRemoteViewControllerScaleAssertion initWithScale:forReason:invalidationBlock:]


_SBWFakeBlurConfiguration : NSObject <BSDescriptionProviding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBWFakeBlurConfiguration .cxx_destruct]
  -[_SBWFakeBlurConfiguration succinctDescriptionBuilder]
  -[_SBWFakeBlurConfiguration descriptionBuilderWithMultilinePrefix:]
  -[_SBWFakeBlurConfiguration isEqual:]
  -[_SBWFakeBlurConfiguration descriptionWithMultilinePrefix:]
  -[_SBWFakeBlurConfiguration succinctDescription]
  -[_SBWFakeBlurConfiguration copyWithZone:]


_SBWFakeBlurAsset : NSObject <BSDescriptionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBWFakeBlurAsset .cxx_destruct]
  -[_SBWFakeBlurAsset succinctDescriptionBuilder]
  -[_SBWFakeBlurAsset descriptionBuilderWithMultilinePrefix:]
  -[_SBWFakeBlurAsset descriptionWithMultilinePrefix:]
  -[_SBWFakeBlurAsset succinctDescription]


SBWWallpaperWindowSceneSettingsDiffAction : NSObject <_UISceneSettingsDiffAction>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperWindowSceneSettingsDiffAction _performActionsForUIScene:withUpdatedFBSScene:settingsDiff:fromSettings:transitionContext:lifecycleActionType:]
  -[SBWWallpaperWindowSceneSettingsDiffAction .cxx_destruct]
  -[SBWWallpaperWindowSceneSettingsDiffAction _wallpaperSceneSettingsDiffInspector]


SBWWallpaperWindowSceneClientSettings : UIApplicationSceneClientSettings
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[SBWWallpaperWindowSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperWindowSceneClientSettings keyDescriptionForSetting:]
  -[SBWWallpaperWindowSceneClientSettings mutableCopyWithZone:]
  -[SBWWallpaperWindowSceneClientSettings homescreenMinimumWallpaperScale]
  -[SBWWallpaperWindowSceneClientSettings lockscreenMinimumWallpaperScale]
  -[SBWWallpaperWindowSceneClientSettings homescreenLegibilitySettings]
  -[SBWWallpaperWindowSceneClientSettings lockscreenLegibilitySettings]
  -[SBWWallpaperWindowSceneClientSettings homescreenAverageColor]
  -[SBWWallpaperWindowSceneClientSettings lockscreenAverageColor]
  -[SBWWallpaperWindowSceneClientSettings homescreenContrast]
  -[SBWWallpaperWindowSceneClientSettings lockscreenContrast]
  -[SBWWallpaperWindowSceneClientSettings homescreenParallaxFactor]
  -[SBWWallpaperWindowSceneClientSettings lockscreenParallaxFactor]
  -[SBWWallpaperWindowSceneClientSettings homescreenParallaxEnabled]
  -[SBWWallpaperWindowSceneClientSettings lockscreenParallaxEnabled]
  -[SBWWallpaperWindowSceneClientSettings homescreenZoomFactor]
  -[SBWWallpaperWindowSceneClientSettings lockscreenZoomFactor]
  -[SBWWallpaperWindowSceneClientSettings isHomescreenContentStatic]
  -[SBWWallpaperWindowSceneClientSettings isLockscreenContentStatic]
  -[SBWWallpaperWindowSceneClientSettings isLockscreenContentLiveWallpaper]
  -[SBWWallpaperWindowSceneClientSettings liveWallpaperPlaybackState]


SBWMutableWallpaperWindowSceneClientSettings : UIMutableApplicationSceneClientSettings
 @property  double homescreenMinimumWallpaperScale
 @property  double lockscreenMinimumWallpaperScale
 @property  _UILegibilitySettings *homescreenLegibilitySettings
 @property  _UILegibilitySettings *lockscreenLegibilitySettings
 @property  UIColor *homescreenAverageColor
 @property  UIColor *lockscreenAverageColor
 @property  double homescreenContrast
 @property  double lockscreenContrast
 @property  double homescreenParallaxFactor
 @property  double lockscreenParallaxFactor
 @property  BOOL homescreenParallaxEnabled
 @property  BOOL lockscreenParallaxEnabled
 @property  double homescreenZoomFactor
 @property  double lockscreenZoomFactor
 @property  BOOL homescreenContentStatic
 @property  BOOL lockscreenContentStatic
 @property  BOOL lockscreenContentLiveWallpaper
 @property  long long liveWallpaperPlaybackState

  // instance methods
  -[SBWMutableWallpaperWindowSceneClientSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBWMutableWallpaperWindowSceneClientSettings keyDescriptionForSetting:]
  -[SBWMutableWallpaperWindowSceneClientSettings copyWithZone:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenMinimumWallpaperScale]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenMinimumWallpaperScale:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenMinimumWallpaperScale]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenMinimumWallpaperScale:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenLegibilitySettings]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenLegibilitySettings:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenLegibilitySettings]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenLegibilitySettings:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenAverageColor]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenAverageColor:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenAverageColor]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenAverageColor:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenContrast]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenContrast:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenContrast]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenContrast:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenParallaxFactor]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenParallaxFactor:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenParallaxFactor]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenParallaxFactor:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenParallaxEnabled]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenParallaxEnabled:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenParallaxEnabled]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenParallaxEnabled:]
  -[SBWMutableWallpaperWindowSceneClientSettings homescreenZoomFactor]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenZoomFactor:]
  -[SBWMutableWallpaperWindowSceneClientSettings lockscreenZoomFactor]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenZoomFactor:]
  -[SBWMutableWallpaperWindowSceneClientSettings isHomescreenContentStatic]
  -[SBWMutableWallpaperWindowSceneClientSettings setHomescreenContentStatic:]
  -[SBWMutableWallpaperWindowSceneClientSettings isLockscreenContentStatic]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenContentStatic:]
  -[SBWMutableWallpaperWindowSceneClientSettings isLockscreenContentLiveWallpaper]
  -[SBWMutableWallpaperWindowSceneClientSettings setLockscreenContentLiveWallpaper:]
  -[SBWMutableWallpaperWindowSceneClientSettings liveWallpaperPlaybackState]
  -[SBWMutableWallpaperWindowSceneClientSettings setLiveWallpaperPlaybackState:]


SBWWallpaperWillChangeAction : BSAction
 @property  long long variant

  // instance methods
  -[SBWWallpaperWillChangeAction valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperWillChangeAction variant]
  -[SBWWallpaperWillChangeAction keyDescriptionForSetting:]
  -[SBWWallpaperWillChangeAction initWithVariant:]


SBWWallpaperWindowSceneSettingsDiffInspector : UIApplicationSceneSettingsDiffInspector
  // instance methods
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeHomescreenStyleTransitionStateWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLiveWallpaperInteractiveWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeWallpaperRequiredWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenOnlyWallpaperAlphaWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperHiddenWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeHomescreenWallpaperHiddenWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector _observeOtherSetting:withBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeWallpaperAnimationSuspendedWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeHomescreenStyleChangesDelayedWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenStyleTransitionStateWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeWallpaperVariantWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeColorSamplingSuspendedWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeCachingIdentifierWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLiveWallpaperTouchActiveWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperAlphaWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeDisallowLockscreenRasterizationWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeDisallowHomescreenRasterizationWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperScaleWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeLockscreenWallpaperContentsRectWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeHomescreenWallpaperScaleWithBlock:]
  -[SBWWallpaperWindowSceneSettingsDiffInspector observeHomescreenWallpaperAlphaWithBlock:]


SBWWallpaperWindowSceneBSActionHandler : NSObject <_UISceneBSActionHandler>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperWindowSceneBSActionHandler _respondToActions:forFBSScene:inUIScene:fromTransitionContext:]


_SBWFakeBlurView : UIView <_SBWFakeBlurImageProviding, _SBWFakeBlur, SBWallpaperReachabilityObserving>
 @property  long long variant
 @property  BOOL fullscreen
 @property  <_SBWFakeBlurImageProviding> *imageProvider
 @property  <_SBWFakeBlurViewRegistering> *fakeBlurRegistry
 @property  SBWWallpaperViewController *wallpaperViewController
 @property  <SBWallpaperReachabilityCoordinating> *reachabilityCoordinator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <_SBWFakeBlurObserver> *observer
 @property  double zoomScale
 @property  unsigned long transformOptions

  // class methods
  +[_SBWFakeBlurView _imageForStyle:withSource:]
  +[_SBWFakeBlurView _imageForStyle:withSource:overrideTraitCollection:result:]
  +[_SBWFakeBlurView _imageForStyle:withSource:overrideTraitCollection:]

  // instance methods
  -[_SBWFakeBlurView variant]
  -[_SBWFakeBlurView isFullscreen]
  -[_SBWFakeBlurView imageForWallpaperStyle:variant:traitCollection:]
  -[_SBWFakeBlurView offsetWallpaperBy:]
  -[_SBWFakeBlurView setZoomScale:]
  -[_SBWFakeBlurView handleReachabilityYOffsetDidChange]
  -[_SBWFakeBlurView requestStyle:]
  -[_SBWFakeBlurView effectiveStyle]
  -[_SBWFakeBlurView setFullscreen:]
  -[_SBWFakeBlurView traitCollectionDidChange:]
  -[_SBWFakeBlurView zoomScale]
  -[_SBWFakeBlurView willMoveToWindow:]
  -[_SBWFakeBlurView updateImageFromProviderForWallpaperMode:]
  -[_SBWFakeBlurView .cxx_destruct]
  -[_SBWFakeBlurView updateImageProviderView:withImage:]
  -[_SBWFakeBlurView layoutSubviews]
  -[_SBWFakeBlurView parallaxFactorForVariant:]
  -[_SBWFakeBlurView updateImageWithSource:]
  -[_SBWFakeBlurView transformOptions]
  -[_SBWFakeBlurView setTransformOptions:]
  -[_SBWFakeBlurView reconfigureFromProvider]
  -[_SBWFakeBlurView initWithVariant:wallpaperViewController:transformOptions:reachabilityCoordinator:]
  -[_SBWFakeBlurView reconfigureWithSource:]
  -[_SBWFakeBlurView initWithVariant:imageProvider:fakeBlurRegistry:wallpaperViewDelegate:transformOptions:reachabilityCoordinator:]
  -[_SBWFakeBlurView zoomFactorForVariant:]
  -[_SBWFakeBlurView observer]
  -[_SBWFakeBlurView imageProvider]
  -[_SBWFakeBlurView rotateToInterfaceOrientation:]
  -[_SBWFakeBlurView didMoveToWindow]
  -[_SBWFakeBlurView newImageProviderView]
  -[_SBWFakeBlurView setObserver:]
  -[_SBWFakeBlurView dealloc]
  -[_SBWFakeBlurView fakeBlurRegistry]
  -[_SBWFakeBlurView parallaxEnabledForVariant:]
  -[_SBWFakeBlurView wallpaperViewController]
  -[_SBWFakeBlurView reachabilityCoordinator]


_SBAccessibilityTintView : UIView <_SBWFakeBlur, SBWallpaperObserver>
 @property  <_SBWFakeBlurObserver> *observer
 @property  BOOL fullscreen
 @property  <SBWWallpaperPresenting> *wallpaperPresenter
 @property  <SBWWallpaperLegibilityProviding> *wallpaperLegibilityProvider
 @property  double zoomScale
 @property  unsigned long transformOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SBAccessibilityTintView wallpaperLegibilitySettingsDidChange:forVariant:]
  -[_SBAccessibilityTintView wallpaperDidChangeForVariant:]
  -[_SBAccessibilityTintView _updateBackgroundColor]
  -[_SBAccessibilityTintView isFullscreen]
  -[_SBAccessibilityTintView offsetWallpaperBy:]
  -[_SBAccessibilityTintView wallpaperPresenter]
  -[_SBAccessibilityTintView setZoomScale:]
  -[_SBAccessibilityTintView requestStyle:]
  -[_SBAccessibilityTintView effectiveStyle]
  -[_SBAccessibilityTintView setFullscreen:]
  -[_SBAccessibilityTintView didMoveToSuperview]
  -[_SBAccessibilityTintView zoomScale]
  -[_SBAccessibilityTintView .cxx_destruct]
  -[_SBAccessibilityTintView transformOptions]
  -[_SBAccessibilityTintView setTransformOptions:]
  -[_SBAccessibilityTintView observer]
  -[_SBAccessibilityTintView didMoveToWindow]
  -[_SBAccessibilityTintView setObserver:]
  -[_SBAccessibilityTintView dealloc]
  -[_SBAccessibilityTintView initWithVariant:wallpaperViewController:]
  -[_SBAccessibilityTintView initWithVariant:wallpaperPresenter:wallpaperLegibilityProvider:]
  -[_SBAccessibilityTintView wallpaperLegibilityProvider]


SBWallpaperStyleInfo : NSObject <BSDescriptionProviding>
 @property  SBWWallpaperEffectViewBase *wallpaperEffectView
 @property  {?=qqd} styleTransitionState
 @property  long long highestValidPriority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWallpaperStyleInfo enumerateValidPrioritiesUsingBlock:]
  -[SBWallpaperStyleInfo .cxx_destruct]
  -[SBWallpaperStyleInfo highestValidPriority]
  -[SBWallpaperStyleInfo wallpaperEffectView]
  -[SBWallpaperStyleInfo removePriorityInfoForPriority:]
  -[SBWallpaperStyleInfo succinctDescriptionBuilder]
  -[SBWallpaperStyleInfo descriptionBuilderWithMultilinePrefix:]
  -[SBWallpaperStyleInfo init]
  -[SBWallpaperStyleInfo descriptionWithMultilinePrefix:]
  -[SBWallpaperStyleInfo styleTransitionState]
  -[SBWallpaperStyleInfo succinctDescription]
  -[SBWallpaperStyleInfo setWallpaperEffectView:]
  -[SBWallpaperStyleInfo priorityInfoForPriority:]
  -[SBWallpaperStyleInfo setPriorityInfo:forPriority:]
  -[SBWallpaperStyleInfo setStyleTransitionState:]


SBWWallpaperWindowSceneStyleTransitionState : NSObject <NSCopying, BSXPCCoding>
 @property  {?=qqd} highestPriorityStyleTransitionState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperWindowSceneStyleTransitionState encodeWithXPCDictionary:]
  -[SBWWallpaperWindowSceneStyleTransitionState initWithXPCDictionary:]
  -[SBWWallpaperWindowSceneStyleTransitionState succinctDescriptionBuilder]
  -[SBWWallpaperWindowSceneStyleTransitionState descriptionBuilderWithMultilinePrefix:]
  -[SBWWallpaperWindowSceneStyleTransitionState init]
  -[SBWWallpaperWindowSceneStyleTransitionState isEqual:]
  -[SBWWallpaperWindowSceneStyleTransitionState descriptionWithMultilinePrefix:]
  -[SBWWallpaperWindowSceneStyleTransitionState succinctDescription]
  -[SBWWallpaperWindowSceneStyleTransitionState copyWithZone:]
  -[SBWWallpaperWindowSceneStyleTransitionState highestPriorityStyleTransitionState]
  -[SBWWallpaperWindowSceneStyleTransitionState setWallpaperStyleTransitionState:forPriority:]
  -[SBWWallpaperWindowSceneStyleTransitionState removeWallpaperStyleTransitionStateForPriority:]
  -[SBWWallpaperWindowSceneStyleTransitionState diffFromWallpaperWindowSceneStyleTransitionState:updateHandler:removeHandler:]


SBWWallpaperPreheatAction : BSAction
 @property  long long variant

  // instance methods
  -[SBWWallpaperPreheatAction valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperPreheatAction variant]
  -[SBWWallpaperPreheatAction keyDescriptionForSetting:]
  -[SBWWallpaperPreheatAction initWithVariant:]


SBWWallpaperEffectViewBase : UIView <_SBWFakeBlurObserver, SBWallpaperObserver>
 @property  UIView<_SBWFakeBlur> *blurView
 @property  UIView *grayscaleTintView
 @property  UIView *colorTintView
 @property  UIView<_SBWFakeBlur> *transitionBlurView
 @property  UIView *transitionGrayscaleTintView
 @property  UIView *transitionColorTintView
 @property  UIImageView *maskImageView
 @property  UIView *blurMaskingContainer
 @property  UIView *tintMaskingContainer
 @property  <SBWWallpaperPresenting><SBWWallpaperLegibilityProviding> *wallpaperPresenter
 @property  double zoomScale
 @property  BOOL fullscreen
 @property  BOOL forcesOpaque
 @property  unsigned long transformOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWWallpaperEffectViewBase wallpaperLegibilitySettingsDidChange:forVariant:]
  -[SBWWallpaperEffectViewBase _configureForCurrentBlurStyle]
  -[SBWWallpaperEffectViewBase forcesOpaque]
  -[SBWWallpaperEffectViewBase _setIsContainedInPopover:]
  -[SBWWallpaperEffectViewBase setTransitionState:]
  -[SBWWallpaperEffectViewBase blurView]
  -[SBWWallpaperEffectViewBase wallpaperDidChangeForVariant:]
  -[SBWWallpaperEffectViewBase initWithWallpaperPresenter:variant:transformOptions:]
  -[SBWWallpaperEffectViewBase setBarWantsAdaptiveBackdrop:]
  -[SBWWallpaperEffectViewBase currentTransitionStateIsOpaque]
  -[SBWWallpaperEffectViewBase setAppearanceStorage:]
  -[SBWWallpaperEffectViewBase _updateWallpaperAverageColor:]
  -[SBWWallpaperEffectViewBase setBarTintColor:]
  -[SBWWallpaperEffectViewBase _configureViews]
  -[SBWWallpaperEffectViewBase isFullscreen]
  -[SBWWallpaperEffectViewBase updateBackgroundImage]
  -[SBWWallpaperEffectViewBase setTranslucent:]
  -[SBWWallpaperEffectViewBase offsetWallpaperBy:]
  -[SBWWallpaperEffectViewBase setWallpaperStyle:]
  -[SBWWallpaperEffectViewBase setTransitionBlurView:]
  -[SBWWallpaperEffectViewBase wallpaperPresenter]
  -[SBWWallpaperEffectViewBase _setTransitionFraction:]
  -[SBWWallpaperEffectViewBase setZoomScale:]
  -[SBWWallpaperEffectViewBase setMaskImageView:]
  -[SBWWallpaperEffectViewBase setMaskImage:masksBlur:masksTint:]
  -[SBWWallpaperEffectViewBase setTintMaskingContainer:]
  -[SBWWallpaperEffectViewBase _setFrame:forceUpdateBackgroundImage:]
  -[SBWWallpaperEffectViewBase setTransitionColorTintView:]
  -[SBWWallpaperEffectViewBase transitionBlurView]
  -[SBWWallpaperEffectViewBase blurMaskingContainer]
  -[SBWWallpaperEffectViewBase transitionGrayscaleTintView]
  -[SBWWallpaperEffectViewBase _needsBlurViewForStyle:]
  -[SBWWallpaperEffectViewBase transitionColorTintView]
  -[SBWWallpaperEffectViewBase fakeBlurView:didChangeStyle:]
  -[SBWWallpaperEffectViewBase setTransitionGrayscaleTintView:]
  -[SBWWallpaperEffectViewBase _configureFromScratch]
  -[SBWWallpaperEffectViewBase colorTintView]
  -[SBWWallpaperEffectViewBase initWithCoder:]
  -[SBWWallpaperEffectViewBase prepareToAnimateToTransitionState:]
  -[SBWWallpaperEffectViewBase setBlurMaskingContainer:]
  -[SBWWallpaperEffectViewBase setFullscreen:]
  -[SBWWallpaperEffectViewBase _accessibilityReduceTransparencyChanged:]
  -[SBWWallpaperEffectViewBase setBarStyle:]
  -[SBWWallpaperEffectViewBase maskImageView]
  -[SBWWallpaperEffectViewBase _configureViewsForFullscreen:]
  -[SBWWallpaperEffectViewBase _isEffectivelyFullscreen]
  -[SBWWallpaperEffectViewBase tintMaskingContainer]
  -[SBWWallpaperEffectViewBase _configureGrayscaleAndColorTintViewForStartStyle:]
  -[SBWWallpaperEffectViewBase zoomScale]
  -[SBWWallpaperEffectViewBase setForcesOpaque:]
  -[SBWWallpaperEffectViewBase willMoveToWindow:]
  -[SBWWallpaperEffectViewBase .cxx_destruct]
  -[SBWWallpaperEffectViewBase setGrayscaleTintView:]
  -[SBWWallpaperEffectViewBase setStyle:]
  -[SBWWallpaperEffectViewBase grayscaleTintView]
  -[SBWWallpaperEffectViewBase setColorTintView:]
  -[SBWWallpaperEffectViewBase appearanceStorage]
  -[SBWWallpaperEffectViewBase layoutSubviews]
  -[SBWWallpaperEffectViewBase transformOptions]
  -[SBWWallpaperEffectViewBase setTransformOptions:]
  -[SBWWallpaperEffectViewBase wallpaperStyle]
  -[SBWWallpaperEffectViewBase setBlurView:]
  -[SBWWallpaperEffectViewBase initWithFrame:]
  -[SBWWallpaperEffectViewBase dealloc]
  -[SBWWallpaperEffectViewBase setHidden:]


_SBMaskingContainerView : UIView
  // instance methods
  -[_SBMaskingContainerView initWithFrame:]


_SBTintView : UIView
  // instance methods
  -[_SBTintView initWithFrame:]


SBWImageSlot : NSObject
 @property  UIImage *image
 @property  <BSInvalidatable> *lifetimeToken

  // instance methods
  -[SBWImageSlot _setImage:]
  -[SBWImageSlot image]
  -[SBWImageSlot .cxx_destruct]
  -[SBWImageSlot dealloc]
  -[SBWImageSlot initWithImage:lifetimeToken:]
  -[SBWImageSlot _initWithImage:lifetimeToken:]
  -[SBWImageSlot _deferredImageSlot]
  -[SBWImageSlot lifetimeToken]


SBWDeferredImageSlot : SBWImageSlot
 @property  UIColor *fallbackColor

  // instance methods
  -[SBWDeferredImageSlot .cxx_destruct]
  -[SBWDeferredImageSlot updateWithImage:]
  -[SBWDeferredImageSlot fallbackColor]
  -[SBWDeferredImageSlot setFallbackColor:]
  -[SBWDeferredImageSlot initWithLifetimeToken:]
  -[SBWDeferredImageSlot _deferredImageSlot]
  -[SBWDeferredImageSlot addImageSlotObserver:]
  -[SBWDeferredImageSlot removeImageSlotObserver:]


SBWImageSlotView : UIView <SBWDeferredImageSlotObserving>
 @property  SBWImageSlot *imageSlot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SBWImageSlotView .cxx_destruct]
  -[SBWImageSlotView setImageSlot:]
  -[SBWImageSlotView layoutSubviews]
  -[SBWImageSlotView _pointSize]
  -[SBWImageSlotView sizeThatFits:]
  -[SBWImageSlotView imageSlot]
  -[SBWImageSlotView intrinsicContentSize]
  -[SBWImageSlotView deferredImageSlot:didUpdateImage:]
  -[SBWImageSlotView _updateWithImage:]


SBWWallpaperWindowSceneTwoCurveTransitionContext : UIApplicationSceneTransitionContext
 @property  BSAnimationSettings *inAnimationSettings
 @property  BSAnimationSettings *outAnimationSettings

  // instance methods
  -[SBWWallpaperWindowSceneTwoCurveTransitionContext keyDescriptionForSetting:]
  -[SBWWallpaperWindowSceneTwoCurveTransitionContext inAnimationSettings]
  -[SBWWallpaperWindowSceneTwoCurveTransitionContext outAnimationSettings]
  -[SBWWallpaperWindowSceneTwoCurveTransitionContext setInAnimationSettings:]
  -[SBWWallpaperWindowSceneTwoCurveTransitionContext setOutAnimationSettings:]


SBWWallpaperWindowSceneSettings : UIApplicationSceneSettings
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  double homescreenWallpaperScale
 @property  double lockscreenWallpaperScale
 @property  BOOL colorSamplingSuspended
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  SBWWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  SBWWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive

  // instance methods
  -[SBWWallpaperWindowSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBWWallpaperWindowSceneSettings homescreenWallpaperScale]
  -[SBWWallpaperWindowSceneSettings cachingIdentifier]
  -[SBWWallpaperWindowSceneSettings lockscreenWallpaperScale]
  -[SBWWallpaperWindowSceneSettings keyDescriptionForSetting:]
  -[SBWWallpaperWindowSceneSettings mutableCopyWithZone:]
  -[SBWWallpaperWindowSceneSettings wallpaperVariant]
  -[SBWWallpaperWindowSceneSettings lockscreenWallpaperContentsRect]
  -[SBWWallpaperWindowSceneSettings lockscreenWallpaperAlpha]
  -[SBWWallpaperWindowSceneSettings homescreenWallpaperAlpha]
  -[SBWWallpaperWindowSceneSettings lockscreenOnlyWallpaperAlpha]
  -[SBWWallpaperWindowSceneSettings disallowHomescreenRasterization]
  -[SBWWallpaperWindowSceneSettings disallowLockscreenRasterization]
  -[SBWWallpaperWindowSceneSettings colorSamplingSuspended]
  -[SBWWallpaperWindowSceneSettings wallpaperAnimationSuspended]
  -[SBWWallpaperWindowSceneSettings wallpaperRequired]
  -[SBWWallpaperWindowSceneSettings homescreenStyleChangesDelayed]
  -[SBWWallpaperWindowSceneSettings homescreenStyleTransitionState]
  -[SBWWallpaperWindowSceneSettings lockscreenStyleTransitionState]
  -[SBWWallpaperWindowSceneSettings liveWallpaperTouchActive]
  -[SBWWallpaperWindowSceneSettings liveWallpaperInteractive]
  -[SBWWallpaperWindowSceneSettings homescreenWallpaperHidden]
  -[SBWWallpaperWindowSceneSettings lockscreenWallpaperHidden]


SBWMutableWallpaperWindowSceneSettings : UIMutableApplicationSceneSettings
 @property  long long wallpaperVariant
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} lockscreenWallpaperContentsRect
 @property  double lockscreenWallpaperAlpha
 @property  double homescreenWallpaperAlpha
 @property  double lockscreenOnlyWallpaperAlpha
 @property  BOOL disallowHomescreenRasterization
 @property  BOOL disallowLockscreenRasterization
 @property  BOOL homescreenWallpaperHidden
 @property  BOOL lockscreenWallpaperHidden
 @property  double homescreenWallpaperScale
 @property  double lockscreenWallpaperScale
 @property  BOOL colorSamplingSuspended
 @property  BOOL wallpaperAnimationSuspended
 @property  BOOL wallpaperRequired
 @property  BOOL homescreenStyleChangesDelayed
 @property  NSString *cachingIdentifier
 @property  SBWWallpaperWindowSceneStyleTransitionState *homescreenStyleTransitionState
 @property  SBWWallpaperWindowSceneStyleTransitionState *lockscreenStyleTransitionState
 @property  BOOL liveWallpaperTouchActive
 @property  BOOL liveWallpaperInteractive

  // instance methods
  -[SBWMutableWallpaperWindowSceneSettings valueDescriptionForFlag:object:ofSetting:]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenWallpaperScale:]
  -[SBWMutableWallpaperWindowSceneSettings homescreenWallpaperScale]
  -[SBWMutableWallpaperWindowSceneSettings cachingIdentifier]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenWallpaperContentsRect:]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenWallpaperScale]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenOnlyWallpaperAlpha:]
  -[SBWMutableWallpaperWindowSceneSettings keyDescriptionForSetting:]
  -[SBWMutableWallpaperWindowSceneSettings setCachingIdentifier:]
  -[SBWMutableWallpaperWindowSceneSettings copyWithZone:]
  -[SBWMutableWallpaperWindowSceneSettings setWallpaperVariant:]
  -[SBWMutableWallpaperWindowSceneSettings wallpaperVariant]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenWallpaperContentsRect]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenWallpaperAlpha]
  -[SBWMutableWallpaperWindowSceneSettings homescreenWallpaperAlpha]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenOnlyWallpaperAlpha]
  -[SBWMutableWallpaperWindowSceneSettings disallowHomescreenRasterization]
  -[SBWMutableWallpaperWindowSceneSettings disallowLockscreenRasterization]
  -[SBWMutableWallpaperWindowSceneSettings colorSamplingSuspended]
  -[SBWMutableWallpaperWindowSceneSettings wallpaperAnimationSuspended]
  -[SBWMutableWallpaperWindowSceneSettings wallpaperRequired]
  -[SBWMutableWallpaperWindowSceneSettings homescreenStyleChangesDelayed]
  -[SBWMutableWallpaperWindowSceneSettings homescreenStyleTransitionState]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenStyleTransitionState]
  -[SBWMutableWallpaperWindowSceneSettings liveWallpaperTouchActive]
  -[SBWMutableWallpaperWindowSceneSettings liveWallpaperInteractive]
  -[SBWMutableWallpaperWindowSceneSettings homescreenWallpaperHidden]
  -[SBWMutableWallpaperWindowSceneSettings lockscreenWallpaperHidden]
  -[SBWMutableWallpaperWindowSceneSettings setHomescreenWallpaperAlpha:]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenWallpaperAlpha:]
  -[SBWMutableWallpaperWindowSceneSettings setDisallowHomescreenRasterization:]
  -[SBWMutableWallpaperWindowSceneSettings setDisallowLockscreenRasterization:]
  -[SBWMutableWallpaperWindowSceneSettings setHomescreenWallpaperHidden:]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenWallpaperHidden:]
  -[SBWMutableWallpaperWindowSceneSettings setColorSamplingSuspended:]
  -[SBWMutableWallpaperWindowSceneSettings setWallpaperAnimationSuspended:]
  -[SBWMutableWallpaperWindowSceneSettings setLiveWallpaperInteractive:]
  -[SBWMutableWallpaperWindowSceneSettings setHomescreenStyleTransitionState:]
  -[SBWMutableWallpaperWindowSceneSettings setLockscreenStyleTransitionState:]
  -[SBWMutableWallpaperWindowSceneSettings setWallpaperRequired:]
  -[SBWMutableWallpaperWindowSceneSettings setHomescreenStyleChangesDelayed:]
  -[SBWMutableWallpaperWindowSceneSettings setLiveWallpaperTouchActive:]
  -[SBWMutableWallpaperWindowSceneSettings setHomescreenWallpaperScale:]


01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAction 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSActionResponder 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSActionResponse 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSAnimationSettings 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSColor 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSDescriptionBuilder 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSEqualsBuilder 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSEventQueue 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSEventQueueEvent 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSHashBuilder 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSMutableSettings 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSServiceConnectionListener 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: BSSimpleAssertion 
01 00 0800 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIAnimationFactory 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMatchMoveAnimation 
01 00 0a00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBDisplayManager 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSSceneClientIdentity 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSceneWorkspace 
01 00 0400 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBServiceClientAuthenticator 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0600 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentity 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFIrisWallpaperView 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperConfiguration 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperParallaxSettings 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFWallpaperView 
01 00 0100 /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices: SBSUIWallpaperServiceInterfaceSpecification 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBWallpaperDefaults 
01 00 0e00 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBWallpaperImage 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettings 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneClientSettingsDiffInspector 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettings 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSettingsDiffInspector 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneSpecification 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplicationSceneTransitionContext 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneClientSettings 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIMutableApplicationSceneSettings 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindowScene 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
