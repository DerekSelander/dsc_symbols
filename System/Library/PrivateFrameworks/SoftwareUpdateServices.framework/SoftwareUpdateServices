|| __DATA.__data _SUSFollowUpControllerBannerTypeBadgeSettingsOnly
|| __DATA.__data _kSUDownloadPhaseBrainExtracting
|| __DATA.__data _kSUDownloadPhaseBrainFetching
|| __DATA.__data _kSUDownloadPhaseBrainFetchingQueued
|| __DATA.__data _kSUDownloadPhaseBrainFetchingQueuedLocal
|| __DATA.__data _kSUDownloadPhaseBrainFetchingQueuedRemote
|| __DATA.__data _kSUDownloadPhaseBrainFetchingStalled
|| __DATA.__data _kSUDownloadPhaseBrainVerifying
|| __DATA.__data _kSUDownloadPhaseExtracting
|| __DATA.__data _kSUDownloadPhaseFetching
|| __DATA.__data _kSUDownloadPhaseFetchingPaused
|| __DATA.__data _kSUDownloadPhaseFetchingQueued
|| __DATA.__data _kSUDownloadPhaseFetchingStalled
|| __DATA.__data _kSUDownloadPhasePreparingForInstallation
|| __DATA.__data _kSUDownloadPhaseStarting
|| __DATA.__data _kSUDownloadPhaseUpdateExtracting
|| __DATA.__data _kSUDownloadPhaseUpdateFetching
|| __DATA.__data _kSUDownloadPhaseUpdateFetchingPaused
|| __DATA.__data _kSUDownloadPhaseUpdateFetchingQueued
|| __DATA.__data _kSUDownloadPhaseUpdateFetchingQueuedLocal
|| __DATA.__data _kSUDownloadPhaseUpdateFetchingQueuedRemote
|| __DATA.__data _kSUDownloadPhaseUpdateFetchingStalled
|| __DATA.__data _kSUDownloadPhaseUpdateVerifying
|| __DATA.__data _kSUDownloadPhaseVerifying
|| __DATA.__data _kSUSFollowUpControllerBannerDescription
|| __DATA.__data _kSUSFollowUpControllerBannerTitle
|| __DATA.__data _kSUSFollowUpControllerBannerType
|| __DATA.__data _kSUScanTypeBackground
|| __DATA.__data _kSUScanTypeForeground
|| __DATA.__data _kSUScanTypeKey
|| __DATA.__data _kSUSessionIDKey
|| __DATA.__objc_data _OBJC_CLASS_$_SUAppPurgingNotification
|| __DATA.__objc_data _OBJC_CLASS_$_SUAutoDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUAutoInstallFailureNotification
|| __DATA.__objc_data _OBJC_CLASS_$_SUAutoInstallForecast
|| __DATA.__objc_data _OBJC_CLASS_$_SUAutoInstallOperation
|| __DATA.__objc_data _OBJC_CLASS_$_SUCarrierDownloadPolicyProperties
|| __DATA.__objc_data _OBJC_CLASS_$_SUComposedInstallationConstraintMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_SUDefaultCellCarrierOverrideDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUDefaultDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUDefaultRoamingRestrictedDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUDefaultWiFiOnlyDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUDocumentation
|| __DATA.__objc_data _OBJC_CLASS_$_SUDocumentationAssetMatcher
|| __DATA.__objc_data _OBJC_CLASS_$_SUDownloadPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_SUDownloadPolicyFactory
|| __DATA.__objc_data _OBJC_CLASS_$_SUEmptyObject
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorBase
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorCarplay
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorForBatteryDiskAndKeybag
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorMediaPlaying
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorNetwork
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorPhoneCalls
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorRestoreFromICloud
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorRestoreFromITunes
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintMonitorSync
|| __DATA.__objc_data _OBJC_CLASS_$_SUInstallationConstraintObserver
|| __DATA.__objc_data _OBJC_CLASS_$_SUKeybagPreventLockAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_SUManifestBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_SUMutableDownloadMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_SUOperationProgress
|| __DATA.__objc_data _OBJC_CLASS_$__SUAutoInstallForecastDateCache
|| __DATA.__objc_data _OBJC_CLASS_$__SUInstallationConstraintBlockObserverToken
|| __DATA.__objc_data _OBJC_METACLASS_$_SUAppPurgingNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_SUAutoDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUAutoInstallFailureNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_SUAutoInstallForecast
|| __DATA.__objc_data _OBJC_METACLASS_$_SUAutoInstallOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SUCarrierDownloadPolicyProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_SUComposedInstallationConstraintMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDefaultCellCarrierOverrideDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDefaultDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDefaultRoamingRestrictedDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDefaultWiFiOnlyDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDocumentation
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDocumentationAssetMatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDownloadPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_SUDownloadPolicyFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_SUEmptyObject
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorBase
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorCarplay
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorForBatteryDiskAndKeybag
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorMediaPlaying
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorNetwork
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorPhoneCalls
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorRestoreFromICloud
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorRestoreFromITunes
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintMonitorSync
|| __DATA.__objc_data _OBJC_METACLASS_$_SUInstallationConstraintObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_SUKeybagPreventLockAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_SUManifestBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_SUMutableDownloadMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_SUOperationProgress
|| __DATA.__objc_data _OBJC_METACLASS_$__SUAutoInstallForecastDateCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SUInstallationConstraintBlockObserverToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUComposedInstallationConstraintMonitor._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDefaultDownloadPolicy._carrierPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDefaultDownloadPolicy._cellularCapable
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDefaultDownloadPolicy._descriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDefaultDownloadPolicy._networkMonitor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._assetID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._autoDownloadAllowableForCellular
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._autoUpdateEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._criticalOutOfBoxOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._disableAppDemotion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._disableCDLevel4
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._disableIntallTonight
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._disableSiriVoiceDeletion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._documentation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._downloadAllowableForCellular
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._downloadSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._downloadable
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._humanReadableUpdateName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._installationSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._mdmDelayInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._minimumSystemPartitionSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._msuPrepareSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._prerequisiteBuild
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._prerequisiteOS
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._productBuildVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._productSystemName
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._productVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._publisher
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._rampEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._releaseDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._releaseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._rsepDigest
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._rsepTBMDigest
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._sepDigest
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._sepTBMDigest
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._setupCritical
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._systemPartitionPadding
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._unarchiveSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDescriptor._updateType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDownload._descriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDownload._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUDownload._progress
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUInstallationConstraintMonitorBase._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUOperationProgress._isDone
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUOperationProgress._normalizedPercentComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUOperationProgress._percentComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUOperationProgress._phase
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUOperationProgress._timeRemaining
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._autodownloadNeedsOneTimeRetry
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._currentDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._failedPatchDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._installPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastAssetAudience
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastAutoInstallOperationModel
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastDeletedSUAssetID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastDownload
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastProductBuild
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastProductType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastProductVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastReleaseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastScannedDescriptor
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._lastScannedDescriptorTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._mandatoryUpdateDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._manifestSubmitted
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._mdmDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._scheduledAutodownloadPolicyChangeTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._scheduledAutodownloadWifiPeriodEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._scheduledManualDownloadWifiPeriodEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._stashbagPersisted
|| __DATA.__objc_ivar _OBJC_IVAR_$_SUState._unlockCallbacks
|| __DATA_CONST.__const _SUAssetTypeDocumentation
|| __DATA_CONST.__const _SUAssetTypeSoftwareUpdate
|| __DATA_CONST.__const _SUAssetTypeUpdateBrain
|| __DATA_CONST.__const _SUAutoDownloadWiFiPeriodDidEndNotification
|| __DATA_CONST.__const _SUAutoInstallOperationCancelledNotification
|| __DATA_CONST.__const _SUAutoInstallOperationDidConsentNotification
|| __DATA_CONST.__const _SUAutoInstallOperationDidExpireNotification
|| __DATA_CONST.__const _SUAutoInstallOperationIsReadyToInstallNotification
|| __DATA_CONST.__const _SUAutoScanIdentifier
|| __DATA_CONST.__const _SUCriticalDownloadPolicyWiFiAndCellular
|| __DATA_CONST.__const _SUCriticalDownloadPolicyWiFiOnly
|| __DATA_CONST.__const _SUDefaultFullWidthImageName
|| __DATA_CONST.__const _SUDefaultIconName
|| __DATA_CONST.__const _SUDefaultImageSubfolder
|| __DATA_CONST.__const _SUDefaultImageType
|| __DATA_CONST.__const _SUDocumentationAssetKeyDevice
|| __DATA_CONST.__const _SUDocumentationAssetKeyID
|| __DATA_CONST.__const _SUDocumentationAssetKeyLicenseAgreementFileName
|| __DATA_CONST.__const _SUDocumentationAssetKeyReleaseNotesFileName
|| __DATA_CONST.__const _SUDocumentationAssetKeyReleaseNotesSummaryFileName
|| __DATA_CONST.__const _SUDocumentationAssetKeySLAVersion
|| __DATA_CONST.__const _SUDocumentationAssetKeyVersion
|| __DATA_CONST.__const _SUErrorDomain
|| __DATA_CONST.__const _SUMDMScanIdentifier
|| __DATA_CONST.__const _SUMandatoryUpdateFlagsKey
|| __DATA_CONST.__const _SUPreferencesChangedNotification
|| __DATA_CONST.__const _SUPreferencesChangedNotificationAutoUpdate
|| __DATA_CONST.__const _SUSFollowUpCategoryIdentifier
|| __DATA_CONST.__const _SUSFollowUpClientIdentifier
|| __DATA_CONST.__const _SUSetupCriticalTypeDefault
|| __DATA_CONST.__const _SUSetupCriticalTypeMandatory
|| __DATA_CONST.__const _SUSetupCriticalTypeOptional
|| __DATA_CONST.__const _SUSoftwareUpdateAssetAssetID
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyAllowableOTAKey
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyAllowableOverCellularKey
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyAutoUpdateEnabled
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyAutomaticDownloadOver3G
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyBuild
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyDisableAppDemotion
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyDisableCDLevel4
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyDisableSiriVoiceDeletion
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyDocumentationID
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyDownloadSize
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyInstallTonightEnabled
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyLastEmergencyBuild
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyLastEmergencyVersion
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyMDMDelayInterval
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyMinimumSystemPartition
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyPrerequisiteBuild
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyPrerequisiteVersion
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyProductSystemName
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyPublisher
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyRSEPDigest
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyRSEPTBMDigest
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyRampEnabled
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyRampingScanType
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyReleaseDate
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyReleaseType
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySEPDigest
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySEPTBMDigest
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySessionID
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySetupCriticalCellularOverride
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySetupCriticalOutOfBoxOnly
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySetupCriticalUpdate
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySupportedDeviceModels
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySupportedDevices
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeySystemPartitionPadding
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyUniqueBuildID
|| __DATA_CONST.__const _SUSoftwareUpdateAssetKeyVersion
|| __DATA_CONST.__const _kManagedSUKeyDelayPeriod
|| __DATA_CONST.__const _kManagedSUKeyRequestedPMV
|| __DATA_CONST.__const _kSUActivationServiceAvailableKey
|| __DATA_CONST.__const _kSUActivationServiceMessageKey
|| __DATA_CONST.__const _kSUActivationServiceMessageTypeKey
|| __DATA_CONST.__const _kSUAutodownloadWillRetryKey
|| __DATA_CONST.__const _kSUConnectionName
|| __DATA_CONST.__const _kSUDaemonStartedNotification
|| __DATA_CONST.__const _kSUInstallOptionDarkBoot
|| __DATA_CONST.__const _kSUInstallOptionRequireUpdate
|| __DATA_CONST.__const _kSUInstallationConstraintsUnmetKey
|| __DATA_CONST.__const _kSUPreferencesAutomaticUpdateV2Enabled
|| __DATA_CONST.__const _kSUPreferencesID
|| __DATA_CONST.__const _kSUScanIdentifier
|| __DATA_CONST.__const _kSUUserRequestedKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUAssetStateMatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUAssetSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUAutoUpdatePasscodePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUCSScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUDownload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUDownloadMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUInstallPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUKeybagInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUManagedDeviceUpdateDelay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUManagerClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUNetworkMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUSFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUScanOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUSoftwareUpdateAssetMatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SUUtility
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SUAutoInstallOperationModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUAssetStateMatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUAssetSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUAutoUpdatePasscodePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUCSScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUDownload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUDownloadMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUInstallPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUKeybagInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUManagedDeviceUpdateDelay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUManagerClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUNetworkMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUSFollowUpController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUScanOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUSoftwareUpdateAssetMatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SUUtility
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SUAutoInstallOperationModel
|| __TEXT.__text _SUDownloadPhaseIsBrainRelated
|| __TEXT.__text _SUDownloadPhaseIsFetchingAnything
|| __TEXT.__text _SUDownloadPhaseIsFetchingBrain
|| __TEXT.__text _SUDownloadPhaseIsFetchingUpdate
|| __TEXT.__text _SUDownloadPhaseIsHalted
|| __TEXT.__text _SUDownloadPhaseIsStalled
|| __TEXT.__text _SUHasEnoughBatteryForInstall
|| __TEXT.__text _SULog
|| __TEXT.__text _SULogBadging
|| __TEXT.__text _SULogCommon
|| __TEXT.__text _SULogDebug
|| __TEXT.__text _SULogDebugForSubsystem
|| __TEXT.__text _SULogErrorForSubsystem
|| __TEXT.__text _SULogFollowUp
|| __TEXT.__text _SULogForSubsystem
|| __TEXT.__text _SULogInfo
|| __TEXT.__text _SULogInfoForSubsystem
|| __TEXT.__text _SULogInstallConstraints
|| __TEXT.__text _SURequiredBatteryLevelForInstall
|| __TEXT.__text _SUStringForAutoInstallForecastScheduleType
|| __TEXT.__text _SUStringFromActivationMessageType
|| __TEXT.__text _SUStringFromClientType
|| __TEXT.__text _SUStringFromDownloadPolicyType
|| __TEXT.__text _SUStringFromDownloadPriority
|| __TEXT.__text _SUStringFromInstallationConstraints
|| __TEXT.__text _SUStringFromNetworkType
|| __TEXT.__text _SUStringFromUpdateType
|| __TEXT.__text _SUStringFromUpdateTypes
|| __TEXT.__text __eventIsBlacklisted
|| __TEXT.__text __getUnmetConstraintBodyStrings
|| __TEXT.__text __networkReachabilityCallback
|| __TEXT.__text __queryLocalAssetsForType
|| __TEXT.__text __stringsForError
|| __TEXT.__text _addImageDict
|| __TEXT.__text _addMGProperty
|| __TEXT.__text _buildPreManifest
|| __TEXT.__text _connectedToCharger
|| __TEXT.__text _isPluggedIntoPower
|| __TEXT.__text _purgeAssetSpace
|| __TEXT.__text _purgeAssetSpaceForOTAUpdate
|| __TEXT.__text _purgeAssetSpaceV2
|| __TEXT.__text _purgeAssets
|| __TEXT.__text _purgeableAssetSpaceAvailable
|| __TEXT.__text _purgeableAssetSpaceAvailableForOTAUpdate
|| __TEXT.__text _purgeableAssetSpaceAvailableV2
|| __TEXT.__text _queryLocalAssetsForType
|| __TEXT.__text _queryLocalAssetsForTypeV2
|| __TEXT.__text _stringForFamilyCode
|| __TEXT.__text _writeArrayToFile
__ AirTraffic: _OBJC_CLASS_$_ATConnection
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurgeAppsRequest
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurgeAppsRequestOptions
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurgeableAppRequest
__ AppStoreDaemon: _OBJC_CLASS_$_ASDPurgeableAppRequestOptions
__ AppSupport: _CPFreeSpaceRequestBytesAtPathWithCompletionBlock
__ AppSupport: _kCPFreeSpaceEffortLevelKey
__ BaseBoard: _BSDispatchQueueAssert
__ BaseBoard: _BSDispatchQueueAssertMain
__ BaseBoard: _BSDispatchQueueAssertNot
__ BaseBoard: _OBJC_CLASS_$_BSDateFormatterCache
__ BaseBoard: _OBJC_CLASS_$_BSDateTimeCache
__ BaseBoard: _OBJC_CLASS_$_BSTimer
__ CacheDelete: _CacheDeleteCopyPurgeableSpaceWithInfo
__ CacheDelete: _CacheDeletePurgeSpaceWithInfo
__ CacheDelete: _CacheDeleteSetCacheable
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreFollowUp: _FLGroupIdentifierDevice
__ CoreFollowUp: _FLNotificationOptionBannerAlert
__ CoreFollowUp: _FLNotificationOptionExtensionActions
__ CoreFollowUp: _FLNotificationOptionForce
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpAction
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpController
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpItem
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpNotification
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFCalendarAddComponents
__ CoreFoundation: _CFDateCompare
__ CoreFoundation: _CFDateGetTypeID
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFGregorianCalendar
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreTelephony: _CTCellularDataPlanGetIsEnabled
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: _kCTRegistrationStatusRegisteredRoaming
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IOKit: _IOBSDNameMatching
__ IOKit: _IOObjectRelease
__ IOKit: _IOPMCopyScheduledPowerEvents
__ IOKit: _IOPSCopyExternalPowerAdapterDetails
__ IOKit: _IOPSCopyPowerSourcesByType
__ IOKit: _IOPSCopyPowerSourcesList
__ IOKit: _IOPSGetPowerSourceDescription
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _kIOMasterPortDefault
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackState
__ MediaRemote: _MRMediaRemoteSetWantsNowPlayingNotifications
__ MediaRemote: _kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
__ MobileAsset: _ASAttributeDownloadSize
__ MobileAsset: _ASAttributeIsZipStreamable
__ MobileAsset: _ASAttributeUnarchivedSize
__ MobileAsset: _ASDownloadOptionAllow2G
__ MobileAsset: _ASDownloadOptionAllow3G
__ MobileAsset: _ASDownloadOptionAllow4G
__ MobileAsset: _ASDownloadOptionAllowBatteryPower
__ MobileAsset: _ASDownloadOptionAllowRoaming
__ MobileAsset: _ASDownloadOptionAllowWiFi
__ MobileAsset: _ASDownloadOptionAssetVersionString
__ MobileAsset: _ASDownloadOptionPriority
__ MobileAsset: _ASDownloadOptionUseStreamingZip
__ MobileAsset: _ASDownloadPriorityHigh
__ MobileAsset: _ASDownloadPriorityLow
__ MobileAsset: _ASErrorDomain
__ MobileAsset: _ASServerURLForAssetType
__ MobileAsset: _OBJC_CLASS_$_ASAsset
__ MobileAsset: _OBJC_CLASS_$_ASAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MAMsuDownloadOptions
__ MobileBackup: _kMBManagerRestoreStateChangedNotification
__ MobileKeyBag: _MKBDeviceLockAssertion
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBKeyBagKeyStashCreateWithManifest
__ MobileKeyBag: _MKBKeyBagKeyStashCreateWithMode
__ MobileKeyBag: _MKBKeyBagKeyStashPersist
__ MobileKeyBag: _MKBKeyBagKeyStashVerify
__ MobileKeyBag: _kMKBUserSessionIDKey
__ MobileSoftwareUpdate: _MSUAssetCalculateApplySize
__ MobileSoftwareUpdate: _MSUAssetCalculatePrepareSize
__ MobileSoftwareUpdate: _MSUPurgeSuspendedUpdate
__ MobileSoftwareUpdate: _OBJC_CLASS_$_MSUUpdateBrainAssetLoader
__ MobileSoftwareUpdate: _kCFErrorDomainMobileSoftwareUpdate
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetType
__ MobileWiFi: _WiFiManagerClientSetType
__ SystemConfiguration: _SCNetworkReachabilityCreateWithOptions
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _TUCallCenterCallStatusChangedNotification
__ TelephonyUtilities: _TUCallCenterVideoCallStatusChangedNotification
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _container_system_path_for_identifier
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _statfs
__ libSystem.B.dylib: dyld_stub_binder
__ libauthinstall.dylib: _AMAuthInstallApImg4LocalCreatePreManifest
__ libauthinstall.dylib: _AMAuthInstallApSetParameters
__ libauthinstall.dylib: _AMAuthInstallCreate
__ libauthinstall.dylib: _AMAuthInstallRequestAbbreviatedSendSync
__ libauthinstall.dylib: _AMAuthInstallSupportDictionarySetBoolean
__ libauthinstall.dylib: _AMAuthInstallSupportDictionarySetInteger32
__ libauthinstall.dylib: _kAMAuthInstallApParameterBoardID
__ libauthinstall.dylib: _kAMAuthInstallApParameterChipID
__ libauthinstall.dylib: _kAMAuthInstallApParameterECID
__ libauthinstall.dylib: _kAMAuthInstallApParameterProductionMode
__ libauthinstall.dylib: _kAMAuthInstallApParameterSecurityDomain
__ libauthinstall.dylib: _kAMAuthInstallTagApBoardId
__ libauthinstall.dylib: _kAMAuthInstallTagApChipId
__ libauthinstall.dylib: _kAMAuthInstallTagApEcid
__ libauthinstall.dylib: _kAMAuthInstallTagApProductionMode
__ libauthinstall.dylib: _kAMAuthInstallTagApSecurityDomain
__ libauthinstall.dylib: _kAMAuthInstallTagApSecurityMode
__ libauthinstall.dylib: _kAMAuthInstallTagImageDigest
__ libauthinstall.dylib: _kAMAuthInstallTagImageTBMDigests
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
SUSFollowUpController : NSObject
 @property  FLFollowUpController *followUpController
 @property  NSString *identifier

  // class methods
  +[SUSFollowUpController sharedController]

  // instance methods
  -[SUSFollowUpController init]
  -[SUSFollowUpController dealloc]
  -[SUSFollowUpController identifier]
  -[SUSFollowUpController setIdentifier:]
  -[SUSFollowUpController followUpController]
  -[SUSFollowUpController setFollowUpController:]
  -[SUSFollowUpController getCurrentSUSFollowUpItem]
  -[SUSFollowUpController isAutoUpdateFollowUpCurrentlyBeingPresented]
  -[SUSFollowUpController dismissFollowUp]
  -[SUSFollowUpController isBadgeOnlyFollowUpCurrentlyBeingPresented]
  -[SUSFollowUpController postFollowUp:]
  -[SUSFollowUpController dismissBadgeOnlyFollowUp]
  -[SUSFollowUpController dismissAutoUpdateFollowUp]
  -[SUSFollowUpController isFollowUpCurrentlyBeingPresented]
  -[SUSFollowUpController SUSFollowUpControllerBadgeSettings]
  -[SUSFollowUpController SUSFollowUpControllerUnbadgeSettings]


SUAssetStateMatcher : NSObject <SUAssetMatcher>
 @property  NSString *assetType
 @property  int interestedStates
 @property  NSDictionary *matcherInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUAssetStateMatcher interestedStates]
  -[SUAssetStateMatcher assetType]
  -[SUAssetStateMatcher _matchesFilterType:]
  -[SUAssetStateMatcher _findMatchFromCandidates:error:]
  -[SUAssetStateMatcher _modifyMADownloadOptions:]
  -[SUAssetStateMatcher findMatchFromCandidates:error:]
  -[SUAssetStateMatcher modifyMADownloadOptions:]
  -[SUAssetStateMatcher matcherInfo]
  -[SUAssetStateMatcher initWithType:interestedStates:]


SUComposedInstallationConstraintMonitor : NSObject <SUInstallationConstraintMonitorDelegate, SUInstallationConstraintMonitor>
 @property  NSSet *constraintMonitors
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SUInstallationConstraintMonitorDelegate> *delegate
 @property  unsigned long representedConstraints
 @property  unsigned long unsatisfiedConstraints

  // instance methods
  -[SUComposedInstallationConstraintMonitor dealloc]
  -[SUComposedInstallationConstraintMonitor delegate]
  -[SUComposedInstallationConstraintMonitor setDelegate:]
  -[SUComposedInstallationConstraintMonitor .cxx_destruct]
  -[SUComposedInstallationConstraintMonitor _queue_delegate]
  -[SUComposedInstallationConstraintMonitor isSatisfied]
  -[SUComposedInstallationConstraintMonitor representedConstraints]
  -[SUComposedInstallationConstraintMonitor _queue_setDelegate:]
  -[SUComposedInstallationConstraintMonitor _queue_unsatisfiedConstraints]
  -[SUComposedInstallationConstraintMonitor unsatisfiedConstraints]
  -[SUComposedInstallationConstraintMonitor installationConstraintMonitor:constraintsDidChange:]
  -[SUComposedInstallationConstraintMonitor _queue_noteInstallationConstraintMonitor:constraintsDidChange:]
  -[SUComposedInstallationConstraintMonitor initWithInternalQueue:withInstallationConstraintMonitors:]
  -[SUComposedInstallationConstraintMonitor _queue_clearDelegate]
  -[SUComposedInstallationConstraintMonitor _queue_representedConstraints]
  -[SUComposedInstallationConstraintMonitor _queue_invalidateChildConstraintMonitors]
  -[SUComposedInstallationConstraintMonitor constraintMonitors]


SUSoftwareUpdateAssetMatcher : SUAssetStateMatcher
 @property  SUPreferences *preferences
 @property  NSString *fromVersion
 @property  NSString *fromBuild
 @property  NSString *fromProductType
 @property  NSString *fromReleaseType
 @property  NSDictionary *matcherInfo
 @property  BOOL compareWithTatsuForEligibility

  // class methods
  +[SUSoftwareUpdateAssetMatcher matcherForCurrentDeviceWithInterestedStates:]
  +[SUSoftwareUpdateAssetMatcher matcherForCurrentDevice]
  +[SUSoftwareUpdateAssetMatcher matcherForCurrentDeviceWithInfo:]

  // instance methods
  -[SUSoftwareUpdateAssetMatcher dealloc]
  -[SUSoftwareUpdateAssetMatcher setPreferences:]
  -[SUSoftwareUpdateAssetMatcher preferences]
  -[SUSoftwareUpdateAssetMatcher fromVersion]
  -[SUSoftwareUpdateAssetMatcher _findMatchFromCandidates:error:]
  -[SUSoftwareUpdateAssetMatcher _modifyMADownloadOptions:]
  -[SUSoftwareUpdateAssetMatcher matcherInfo]
  -[SUSoftwareUpdateAssetMatcher initWithVersion:build:productType:releaseType:interestedStates:matcherInfo:]
  -[SUSoftwareUpdateAssetMatcher _isPossibleSoftwareUpdate:]
  -[SUSoftwareUpdateAssetMatcher _isDeviceEligibleForUpdate:]
  -[SUSoftwareUpdateAssetMatcher _copyMatchingAssetsAfterSortingAndFiltering:]
  -[SUSoftwareUpdateAssetMatcher _createCleanOSVersionString:]
  -[SUSoftwareUpdateAssetMatcher _getIndexOfHighestVersionedAsset:usingFirstKey:secondKey:]
  -[SUSoftwareUpdateAssetMatcher _filterPatchesIfNecessary:]
  -[SUSoftwareUpdateAssetMatcher _createSortedAndFilteredAssetResults:usingFirstKey:secondKey:]
  -[SUSoftwareUpdateAssetMatcher fromBuild]
  -[SUSoftwareUpdateAssetMatcher fromProductType]
  -[SUSoftwareUpdateAssetMatcher fromReleaseType]
  -[SUSoftwareUpdateAssetMatcher compareWithTatsuForEligibility]
  -[SUSoftwareUpdateAssetMatcher setCompareWithTatsuForEligibility:]


SUAutoUpdatePasscodePolicy : NSObject
 @property  unsigned long currentPolicyType

  // class methods
  +[SUAutoUpdatePasscodePolicy sharedInstance]

  // instance methods
  -[SUAutoUpdatePasscodePolicy init]
  -[SUAutoUpdatePasscodePolicy dealloc]
  -[SUAutoUpdatePasscodePolicy _init]
  -[SUAutoUpdatePasscodePolicy addObserver:]
  -[SUAutoUpdatePasscodePolicy removeObserver:]
  -[SUAutoUpdatePasscodePolicy setCurrentPolicyType:]
  -[SUAutoUpdatePasscodePolicy currentPolicyType]
  -[SUAutoUpdatePasscodePolicy _isValidPasscodePolicyType:]
  -[SUAutoUpdatePasscodePolicy stringForCurrentPolicy]


_SUAutoInstallOperationModel : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *id
 @property  SUAutoInstallForecast *forecast
 @property  int agreementStatus

  // class methods
  +[_SUAutoInstallOperationModel supportsSecureCoding]

  // instance methods
  -[_SUAutoInstallOperationModel init]
  -[_SUAutoInstallOperationModel dealloc]
  -[_SUAutoInstallOperationModel copyWithZone:]
  -[_SUAutoInstallOperationModel encodeWithCoder:]
  -[_SUAutoInstallOperationModel initWithCoder:]
  -[_SUAutoInstallOperationModel id]
  -[_SUAutoInstallOperationModel forecast]
  -[_SUAutoInstallOperationModel setForecast:]
  -[_SUAutoInstallOperationModel setAgreementStatus:]
  -[_SUAutoInstallOperationModel setId:]
  -[_SUAutoInstallOperationModel agreementStatus]


SUManifestBuilder : NSObject
  // class methods
  +[SUManifestBuilder isManifestRequiredForDescriptor:]
  +[SUManifestBuilder manifestFromDescriptor:outRequired:]


SUDocumentationAssetMatcher : SUAssetStateMatcher
  // class methods
  +[SUDocumentationAssetMatcher matcherForInstalledDocumentationFromAsset:]
  +[SUDocumentationAssetMatcher matcherDocumentationFromAsset:]

  // instance methods
  -[SUDocumentationAssetMatcher dealloc]
  -[SUDocumentationAssetMatcher _findMatchFromCandidates:error:]
  -[SUDocumentationAssetMatcher _modifyMADownloadOptions:]
  -[SUDocumentationAssetMatcher initWithSoftwareUpdateAsset:limitingToStates:]
  -[SUDocumentationAssetMatcher initWithSoftwareUpdateAsset:]
  -[SUDocumentationAssetMatcher _sortedMatcherPredicatesFromSoftwareUpdateAsset:]
  -[SUDocumentationAssetMatcher _queryPredicateForProperties:]


SUAssetSupport : NSObject
  // class methods
  +[SUAssetSupport getInstalledDocumentationAssetFromSoftwareUpdateAssetIfExists:]
  +[SUAssetSupport tryCreateDocumentationFromDocumentationAsset:]
  +[SUAssetSupport setSUFilters:]
  +[SUAssetSupport _cleanupAllAssetsOfType:]
  +[SUAssetSupport getLocalDefaultSoftwareUpdateAssetIfExists]
  +[SUAssetSupport findAssetWithMatcher:localSearch:releaseDate:error:]
  +[SUAssetSupport _gestaltValueForKey:]
  +[SUAssetSupport requestCatalogDownload:]
  +[SUAssetSupport setAssetQueryFilters:]
  +[SUAssetSupport queryMetaDataOfType:WithFilter:installedOnly:error:]
  +[SUAssetSupport getLocalDefaultSoftwareUpdateAssetIfExistsWithReleaseDate:]
  +[SUAssetSupport findAssetWithMatcher:localSearch:error:]
  +[SUAssetSupport defaultAssetDownloadOptionsWithPriority:]
  +[SUAssetSupport tryCreateDescriptorFromSoftwareUpdateAsset:withReleaseDate:]
  +[SUAssetSupport cleanupAllSoftwareUpdateAssets]
  +[SUAssetSupport cleanupAllSoftwareUpdateAndRelatedAssets]
  +[SUAssetSupport copySUAssetForAssetID:]
  +[SUAssetSupport copyInstalledAssets]
  +[SUAssetSupport copySuAssetInCatalogMatchingDescriptor:]
  +[SUAssetSupport purgeMSUUpdate:]
  +[SUAssetSupport assetDownloadOptionsForDocumentation]
  +[SUAssetSupport assetDownloadOptionsFromMetadata:descriptor:priority:forBrain:]


SUInstallationConstraintMonitorNetwork : SUInstallationConstraintMonitorBase <SUNetworkObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUInstallationConstraintMonitorNetwork dealloc]
  -[SUInstallationConstraintMonitorNetwork networkChangedFromNetworkType:toNetworkType:]
  -[SUInstallationConstraintMonitorNetwork unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorNetwork initOnQueue:withDownload:networkMonitor:]
  -[SUInstallationConstraintMonitorNetwork _queue_networkDidChange]
  -[SUInstallationConstraintMonitorNetwork initOnQueue:withDownload:]


SUInstallationConstraintMonitorSync : SUInstallationConstraintMonitorBase <ATConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUInstallationConstraintMonitorSync dealloc]
  -[SUInstallationConstraintMonitorSync connectionWasInterrupted:]
  -[SUInstallationConstraintMonitorSync connection:updatedProgress:]
  -[SUInstallationConstraintMonitorSync unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorSync initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorSync _queue_initilizaSyncState]
  -[SUInstallationConstraintMonitorSync _queue_setSyncing:]


SUScanOptions : NSObject <NSSecureCoding>
 @property  NSSet *types
 @property  NSString *identifier
 @property  BOOL forced
 @property  NSString *requestedPMV
 @property  BOOL MDMUseDelayPeriod

  // class methods
  +[SUScanOptions supportsSecureCoding]

  // instance methods
  -[SUScanOptions init]
  -[SUScanOptions dealloc]
  -[SUScanOptions encodeWithCoder:]
  -[SUScanOptions initWithCoder:]
  -[SUScanOptions identifier]
  -[SUScanOptions setIdentifier:]
  -[SUScanOptions types]
  -[SUScanOptions clearTypes]
  -[SUScanOptions addType:]
  -[SUScanOptions isForced]
  -[SUScanOptions setForced:]
  -[SUScanOptions setTypes:]
  -[SUScanOptions setRequestedPMV:]
  -[SUScanOptions setMDMUseDelayPeriod:]
  -[SUScanOptions containsType:]
  -[SUScanOptions requestedPMV]
  -[SUScanOptions MDMUseDelayPeriod]
  -[SUScanOptions removeType:]
  -[SUScanOptions findsAnyUpdate]


SUAutoInstallOperation : NSObject <SUAutoInstallOperationClientHandler, NSSecureCoding>
 @property  <SUAutoInstallOperationDelegate> *delegate
 @property  SUAutoInstallForecast *forecast
 @property  BOOL expired
 @property  BOOL canceled
 @property  int agreementStatus
 @property  NSUUID *id
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SUAutoInstallOperation supportsSecureCoding]

  // instance methods
  -[SUAutoInstallOperation init]
  -[SUAutoInstallOperation dealloc]
  -[SUAutoInstallOperation encodeWithCoder:]
  -[SUAutoInstallOperation initWithCoder:]
  -[SUAutoInstallOperation delegate]
  -[SUAutoInstallOperation setDelegate:]
  -[SUAutoInstallOperation cancel]
  -[SUAutoInstallOperation uniqueIdentifier]
  -[SUAutoInstallOperation isExpired]
  -[SUAutoInstallOperation isCanceled]
  -[SUAutoInstallOperation id]
  -[SUAutoInstallOperation forecast]
  -[SUAutoInstallOperation setAgreementStatus:]
  -[SUAutoInstallOperation agreementStatus]
  -[SUAutoInstallOperation _initWithClient:clientOwned:id:forecast:agreementStatus:cancelled:expired:]
  -[SUAutoInstallOperation _isEffectivelyScheduled]
  -[SUAutoInstallOperation _isValidForScheduling]
  -[SUAutoInstallOperation _isValidTillDate:]
  -[SUAutoInstallOperation _isDateExpired:]
  -[SUAutoInstallOperation _noteAutoInstallOperationWasCancelled]
  -[SUAutoInstallOperation _noteAutoInstallOperationDidExpireWithError:]
  -[SUAutoInstallOperation _noteAutoInstallOperationDidConsent]
  -[SUAutoInstallOperation _noteAutoInstallOperationIsReadyToInstall:]
  -[SUAutoInstallOperation _noteAutoInstallOperationPasscodePolicyChanged:]
  -[SUAutoInstallOperation initWithAutoInstallOperationModel:client:]


SUOperationProgress : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *phase
 @property  float percentComplete
 @property  float normalizedPercentComplete
 @property  double timeRemaining
 @property  BOOL isDone

  // class methods
  +[SUOperationProgress supportsSecureCoding]

  // instance methods
  -[SUOperationProgress dealloc]
  -[SUOperationProgress copyWithZone:]
  -[SUOperationProgress encodeWithCoder:]
  -[SUOperationProgress initWithCoder:]
  -[SUOperationProgress percentComplete]
  -[SUOperationProgress phase]
  -[SUOperationProgress setPhase:]
  -[SUOperationProgress setPercentComplete:]
  -[SUOperationProgress isDone]
  -[SUOperationProgress setTimeRemaining:]
  -[SUOperationProgress timeRemaining]
  -[SUOperationProgress setNormalizedPercentComplete:]
  -[SUOperationProgress setIsDone:]
  -[SUOperationProgress normalizedPercentComplete]


SUInstallationConstraintMonitorRestoreFromITunes : SUInstallationConstraintMonitorBase
  // instance methods
  -[SUInstallationConstraintMonitorRestoreFromITunes dealloc]
  -[SUInstallationConstraintMonitorRestoreFromITunes unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorRestoreFromITunes initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorRestoreFromITunes _queue_beganRestoring]
  -[SUInstallationConstraintMonitorRestoreFromITunes _queue_endedRestoring]
  -[SUInstallationConstraintMonitorRestoreFromITunes _queue_setRestoring:]


SUInstallationConstraintMonitorRestoreFromICloud : SUInstallationConstraintMonitorBase
  // instance methods
  -[SUInstallationConstraintMonitorRestoreFromICloud dealloc]
  -[SUInstallationConstraintMonitorRestoreFromICloud unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorRestoreFromICloud initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorRestoreFromICloud _queue_restoreStateChanged]


SUEmptyObject : NSObject <NSSecureCoding>
  // class methods
  +[SUEmptyObject supportsSecureCoding]

  // instance methods
  -[SUEmptyObject encodeWithCoder:]
  -[SUEmptyObject initWithCoder:]


SUState : NSObject <NSKeyedUnarchiverDelegate>
 @property  _SUAutoInstallOperationModel *lastAutoInstallOperationModel
 @property  SUDownload *lastDownload
 @property  SUDescriptor *lastScannedDescriptor
 @property  SUDescriptor *currentDescriptor
 @property  SUDescriptor *failedPatchDescriptor
 @property  NSDate *lastScannedDescriptorTime
 @property  NSDate *scheduledManualDownloadWifiPeriodEndTime
 @property  NSDate *scheduledAutodownloadWifiPeriodEndTime
 @property  NSDate *scheduledAutodownloadPolicyChangeTime
 @property  BOOL autodownloadNeedsOneTimeRetry
 @property  BOOL stashbagPersisted
 @property  NSString *lastProductVersion
 @property  NSString *lastProductBuild
 @property  NSString *lastProductType
 @property  NSString *lastReleaseType
 @property  NSDictionary *unlockCallbacks
 @property  NSDictionary *mandatoryUpdateDict
 @property  SUManagedDeviceUpdateDelay *mdmDelay
 @property  SUInstallPolicy *installPolicy
 @property  BOOL manifestSubmitted
 @property  NSString *sessionID
 @property  NSString *lastDeletedSUAssetID
 @property  NSString *lastAssetAudience
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SUState currentState]
  +[SUState statePath]

  // instance methods
  -[SUState init]
  -[SUState dealloc]
  -[SUState load]
  -[SUState unarchiver:cannotDecodeObjectOfClassName:originalClasses:]
  -[SUState save]
  -[SUState sessionID]
  -[SUState setSessionID:]
  -[SUState failedPatchDescriptor]
  -[SUState setLastScannedDescriptor:]
  -[SUState setLastScannedDescriptorTime:]
  -[SUState setCurrentDescriptor:]
  -[SUState setFailedPatchDescriptor:]
  -[SUState setScheduledManualDownloadWifiPeriodEndTime:]
  -[SUState setScheduledAutodownloadWifiPeriodEndTime:]
  -[SUState setScheduledAutodownloadPolicyChangeTime:]
  -[SUState setAutodownloadNeedsOneTimeRetry:]
  -[SUState setStashbagPersisted:]
  -[SUState setLastDownload:]
  -[SUState setLastAutoInstallOperationModel:]
  -[SUState setUnlockCallbacks:]
  -[SUState setMdmDelay:]
  -[SUState setInstallPolicy:]
  -[SUState setMandatoryUpdateDict:]
  -[SUState setLastDeletedSUAssetID:]
  -[SUState setLastAssetAudience:]
  -[SUState resetDownloadAndScanHistory]
  -[SUState setLastProductVersion:]
  -[SUState setLastProductBuild:]
  -[SUState setLastProductType:]
  -[SUState setLastReleaseType:]
  -[SUState _stateAsDictionary]
  -[SUState lastDownload]
  -[SUState lastScannedDescriptor]
  -[SUState lastScannedDescriptorTime]
  -[SUState currentDescriptor]
  -[SUState scheduledManualDownloadWifiPeriodEndTime]
  -[SUState scheduledAutodownloadWifiPeriodEndTime]
  -[SUState scheduledAutodownloadPolicyChangeTime]
  -[SUState autodownloadNeedsOneTimeRetry]
  -[SUState stashbagPersisted]
  -[SUState lastProductVersion]
  -[SUState lastProductBuild]
  -[SUState lastProductType]
  -[SUState lastReleaseType]
  -[SUState lastAutoInstallOperationModel]
  -[SUState mdmDelay]
  -[SUState installPolicy]
  -[SUState mandatoryUpdateDict]
  -[SUState lastDeletedSUAssetID]
  -[SUState lastAssetAudience]
  -[SUState resetAllHistory]
  -[SUState unlockCallbacks]
  -[SUState manifestSubmitted]
  -[SUState setManifestSubmitted:]


_SUInstallationConstraintBlockObserverToken : NSObject <SUInvalidatable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SUInstallationConstraintBlockObserverToken dealloc]
  -[_SUInstallationConstraintBlockObserverToken invalidate]
  -[_SUInstallationConstraintBlockObserverToken .cxx_destruct]
  -[_SUInstallationConstraintBlockObserverToken initWithObserver:]


SUInstallationConstraintObserver : SUComposedInstallationConstraintMonitor <SUInvalidatable>
 @property  <SUInstallationConstraintObserverDelegate> *delegate
 @property  SUDownload *download
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUInstallationConstraintObserver init]
  -[SUInstallationConstraintObserver dealloc]
  -[SUInstallationConstraintObserver invalidate]
  -[SUInstallationConstraintObserver .cxx_destruct]
  -[SUInstallationConstraintObserver invalidateWithError:]
  -[SUInstallationConstraintObserver download]
  -[SUInstallationConstraintObserver initWithDownload:]
  -[SUInstallationConstraintObserver _queue_noteInstallationConstraintMonitor:constraintsDidChange:]
  -[SUInstallationConstraintObserver _removeToken:]
  -[SUInstallationConstraintObserver initWithDownload:queue:constraints:]
  -[SUInstallationConstraintObserver registerObserverBlock:]
  -[SUInstallationConstraintObserver monitorOfClass:]
  -[SUInstallationConstraintObserver _hasAnyBlockObservers]


SUInstallationConstraintMonitorMediaPlaying : SUInstallationConstraintMonitorBase
  // instance methods
  -[SUInstallationConstraintMonitorMediaPlaying dealloc]
  -[SUInstallationConstraintMonitorMediaPlaying unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorMediaPlaying initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorMediaPlaying _handlePlaybackChangeNotification:]
  -[SUInstallationConstraintMonitorMediaPlaying _queue_pollSatisfied]


SUInstallPolicy : NSObject <NSSecureCoding>
 @property  unsigned long type
 @property  unsigned long skipsAllowed
 @property  BOOL autoUpdateEnabled
 @property  BOOL useDarkBoot

  // class methods
  +[SUInstallPolicy supportsSecureCoding]

  // instance methods
  -[SUInstallPolicy init]
  -[SUInstallPolicy isEqual:]
  -[SUInstallPolicy type]
  -[SUInstallPolicy setType:]
  -[SUInstallPolicy encodeWithCoder:]
  -[SUInstallPolicy initWithCoder:]
  -[SUInstallPolicy _setType:]
  -[SUInstallPolicy autoUpdateEnabled]
  -[SUInstallPolicy initWithInstallPolicyType:]
  -[SUInstallPolicy setSkipsAllowed:]
  -[SUInstallPolicy useDarkBoot]
  -[SUInstallPolicy skipsAllowed]
  -[SUInstallPolicy _setAutoUpdateEnabled:]
  -[SUInstallPolicy _setDarkBoolEnabled:]


SUInstallationConstraintMonitorBase : NSObject <SUInstallationConstraintMonitor>
 @property  SUDownload *download
 @property  <SUInstallationConstraintMonitorDelegate> *delegate
 @property  unsigned long representedConstraints
 @property  unsigned long unsatisfiedConstraints

  // instance methods
  -[SUInstallationConstraintMonitorBase dealloc]
  -[SUInstallationConstraintMonitorBase delegate]
  -[SUInstallationConstraintMonitorBase setDelegate:]
  -[SUInstallationConstraintMonitorBase .cxx_destruct]
  -[SUInstallationConstraintMonitorBase download]
  -[SUInstallationConstraintMonitorBase isSatisfied]
  -[SUInstallationConstraintMonitorBase representedConstraints]
  -[SUInstallationConstraintMonitorBase unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorBase initOnQueue:withRepresentedInstallationConstraints:andDownload:]
  -[SUInstallationConstraintMonitorBase initOnQueue:withDownload:]


SUKeybagPreventLockAssertion : NSObject <BSInvalidatable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUKeybagPreventLockAssertion dealloc]
  -[SUKeybagPreventLockAssertion invalidate]
  -[SUKeybagPreventLockAssertion initWithKeybagAssertion:]


SUKeybagInterface : NSObject
 @property  BOOL hasPasscodeSet
 @property  BOOL isPasscodeLocked

  // class methods
  +[SUKeybagInterface sharedInstance]

  // instance methods
  -[SUKeybagInterface init]
  -[SUKeybagInterface dealloc]
  -[SUKeybagInterface _init]
  -[SUKeybagInterface addObserver:]
  -[SUKeybagInterface removeObserver:]
  -[SUKeybagInterface hasPasscodeSet]
  -[SUKeybagInterface isPasscodeLocked]
  -[SUKeybagInterface _queue_refreshState]
  -[SUKeybagInterface _queue_fetchKeybagState]
  -[SUKeybagInterface _queue_hasPasscodeSetFromLockState:]
  -[SUKeybagInterface _queue_setHasPasscodeSet:]
  -[SUKeybagInterface _queue_isPasscodeLockedFromLockState:]
  -[SUKeybagInterface _queue_setIsPasscodeLocked:]
  -[SUKeybagInterface hadFirstUnlock]
  -[SUKeybagInterface installationKeybagStateForDescriptor:]
  -[SUKeybagInterface createInstallationKeybagForDescriptor:withSecret:forUnattendedInstall:]
  -[SUKeybagInterface persistKeybagStash]
  -[SUKeybagInterface disableKeybagStash]
  -[SUKeybagInterface createPreventLockAssertionWithDuration:]


_SUAutoInstallForecastDateCache : NSObject
 @property  long long scheduleType
 @property  NSDate *roundedStartTime
 @property  NSDate *roundedEndTime
 @property  NSCalendar *calendar

  // instance methods
  -[_SUAutoInstallForecastDateCache dealloc]
  -[_SUAutoInstallForecastDateCache .cxx_destruct]
  -[_SUAutoInstallForecastDateCache calendar]
  -[_SUAutoInstallForecastDateCache _parseForecast]
  -[_SUAutoInstallForecastDateCache _componentsFromDate:]
  -[_SUAutoInstallForecastDateCache _computeTonightRangeRelativeToDate:extraDayOffset:outStart:outEnd:]
  -[_SUAutoInstallForecastDateCache _isStart:end:withinDateRange:end:]
  -[_SUAutoInstallForecastDateCache initWithForecast:]
  -[_SUAutoInstallForecastDateCache scheduleType]
  -[_SUAutoInstallForecastDateCache roundedStartTime]
  -[_SUAutoInstallForecastDateCache roundedEndTime]


SUInstallationConstraintMonitorForBatteryDiskAndKeybag : SUInstallationConstraintMonitorBase <SUKeybagInterfaceObserver>
 @property  unsigned long deltaSpaceNeeded
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag dealloc]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag _queue_pollSatisfied]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag keybagInterface:hasPasscodeSetDidChange:]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag keybagInterface:passcodeLockedStateDidChange:]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag initOnQueue:withDownload:pollDuration:keybag:]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag _queue_evaluateBattery]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag _queue_evaluateDisk]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag _queue_evaluateKeybag]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag _queue_evaluatePasscodeLocked]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag deltaSpaceNeeded]
  -[SUInstallationConstraintMonitorForBatteryDiskAndKeybag refreshConstraints]


SUPluginLoader : NSObject
  // class methods
  +[SUPluginLoader loadPlugin:]


SUDescriptor : NSObject <NSSecureCoding, NSCopying>
 @property  SUDocumentation *documentation
 @property  NSString *publisher
 @property  NSString *productSystemName
 @property  NSString *productVersion
 @property  NSString *productBuildVersion
 @property  NSString *releaseType
 @property  NSString *prerequisiteBuild
 @property  NSString *prerequisiteOS
 @property  unsigned long downloadSize
 @property  unsigned long installationSize
 @property  unsigned long minimumSystemPartitionSize
 @property  int updateType
 @property  BOOL autoDownloadAllowableForCellular
 @property  BOOL downloadable
 @property  BOOL downloadableOverCellular
 @property  BOOL disableSiriVoiceDeletion
 @property  BOOL disableCDLevel4
 @property  BOOL disableAppDemotion
 @property  BOOL disableInstallTonight
 @property  BOOL rampEnabled
 @property  BOOL criticalOutOfBoxOnly
 @property  BOOL autoUpdateEnabled
 @property  NSString *setupCritical
 @property  NSString *criticalDownloadPolicy
 @property  NSDictionary *systemPartitionPadding
 @property  NSData *sepDigest
 @property  NSData *rsepDigest
 @property  NSData *sepTBMDigest
 @property  NSData *rsepTBMDigest
 @property  NSDate *releaseDate
 @property  unsigned long mdmDelayInterval
 @property  NSString *assetID
 @property  unsigned long unarchiveSize
 @property  unsigned long msuPrepareSize
 @property  BOOL streamingZipCapable

  // class methods
  +[SUDescriptor supportsSecureCoding]

  // instance methods
  -[SUDescriptor init]
  -[SUDescriptor dealloc]
  -[SUDescriptor isEqual:]
  -[SUDescriptor copyWithZone:]
  -[SUDescriptor encodeWithCoder:]
  -[SUDescriptor initWithCoder:]
  -[SUDescriptor productVersion]
  -[SUDescriptor productBuildVersion]
  -[SUDescriptor setProductVersion:]
  -[SUDescriptor updateType]
  -[SUDescriptor publisher]
  -[SUDescriptor setPublisher:]
  -[SUDescriptor setProductBuildVersion:]
  -[SUDescriptor setUpdateType:]
  -[SUDescriptor documentation]
  -[SUDescriptor assetID]
  -[SUDescriptor setAssetID:]
  -[SUDescriptor releaseDate]
  -[SUDescriptor setReleaseDate:]
  -[SUDescriptor isDownloadable]
  -[SUDescriptor downloadSize]
  -[SUDescriptor setAutoUpdateEnabled:]
  -[SUDescriptor autoUpdateEnabled]
  -[SUDescriptor setDownloadSize:]
  -[SUDescriptor releaseType]
  -[SUDescriptor setDocumentation:]
  -[SUDescriptor sepDigest]
  -[SUDescriptor rsepDigest]
  -[SUDescriptor sepTBMDigest]
  -[SUDescriptor rsepTBMDigest]
  -[SUDescriptor setProductSystemName:]
  -[SUDescriptor setReleaseType:]
  -[SUDescriptor setDownloadable:]
  -[SUDescriptor setAutoDownloadAllowableForCellular:]
  -[SUDescriptor setDownloadableOverCellular:]
  -[SUDescriptor _setUnarchiveSize:]
  -[SUDescriptor setMinimumSystemPartitionSize:]
  -[SUDescriptor _setStreamingZipCapable:]
  -[SUDescriptor _setDisableSiriVoiceDeletion:]
  -[SUDescriptor _setDisableCDLevel4:]
  -[SUDescriptor _setDisableAppDemotion:]
  -[SUDescriptor _setDisableInstallTonight:]
  -[SUDescriptor setRampEnabled:]
  -[SUDescriptor setSystemPartitionPadding:]
  -[SUDescriptor setSEPDigest:]
  -[SUDescriptor setRSEPDigest:]
  -[SUDescriptor setSEPTBMDigest:]
  -[SUDescriptor setRSEPTBMDigest:]
  -[SUDescriptor setMdmDelayInterval:]
  -[SUDescriptor setSetupCritical:]
  -[SUDescriptor setCriticalDownloadPolicy:]
  -[SUDescriptor setCriticalOutOfBoxOnly:]
  -[SUDescriptor setPrerequisiteBuild:]
  -[SUDescriptor setPrerequisiteOS:]
  -[SUDescriptor _setMsuPrepareSize:]
  -[SUDescriptor setInstallationSize:]
  -[SUDescriptor setupCritical]
  -[SUDescriptor criticalDownloadPolicy]
  -[SUDescriptor prerequisiteBuild]
  -[SUDescriptor prerequisiteOS]
  -[SUDescriptor installationSize]
  -[SUDescriptor humanReadableUpdateName]
  -[SUDescriptor productSystemName]
  -[SUDescriptor preparationSize]
  -[SUDescriptor _unarchiveSize]
  -[SUDescriptor _msuPrepareSize]
  -[SUDescriptor minimumSystemPartitionSize]
  -[SUDescriptor autoDownloadAllowableForCellular]
  -[SUDescriptor isDownloadableOverCellular]
  -[SUDescriptor _isStreamingZipCapable]
  -[SUDescriptor siriVoiceDeletionDisabled]
  -[SUDescriptor cdLevel4Disabled]
  -[SUDescriptor appDemotionDisabled]
  -[SUDescriptor installTonightDisabled]
  -[SUDescriptor rampEnabled]
  -[SUDescriptor criticalOutOfBoxOnly]
  -[SUDescriptor systemPartitionPadding]
  -[SUDescriptor mdmDelayInterval]
  -[SUDescriptor _hasValue:]
  -[SUDescriptor _buildCompareKey]
  -[SUDescriptor totalRequiredFreeSpace]
  -[SUDescriptor updateTypeName]
  -[SUDescriptor isValidDescriptor]
  -[SUDescriptor isEmergencyOrCritical]


SUCSScheduler : NSObject
  // class methods
  +[SUCSScheduler _batteryLevel]
  +[SUCSScheduler batteryLevelPredicate:]
  +[SUCSScheduler phoneCallPredicate:]
  +[SUCSScheduler networkPredicate:]
  +[SUCSScheduler carplayPredicate:]
  +[SUCSScheduler _getIntForKeyPath:]
  +[SUCSScheduler _getBoolForKeyPath:]
  +[SUCSScheduler _callInProgress]
  +[SUCSScheduler _hasNetworkConnection]

  // instance methods
  -[SUCSScheduler init]
  -[SUCSScheduler dealloc]
  -[SUCSScheduler unregisterInstallationAlertAction]
  -[SUCSScheduler registerInstallAlertConditionsWithHandler:]


SUDefaultCellCarrierOverrideDownloadPolicy : SUDefaultDownloadPolicy
  // instance methods
  -[SUDefaultCellCarrierOverrideDownloadPolicy isDownloadAllowableForCellular]


SUManagerClient : NSObject <SUManagerClientInterface, SUInstallationConstraintObserverDelegate, SUPreferencesObserver>
 @property  SUDescriptor *installDescriptor
 @property  SUDescriptor *scanDescriptor
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <SUManagerClientDelegate> *delegate
 @property  int clientType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SUManagerClient _isMultiUserAppleId]
  +[SUManagerClient _shouldDisallowAvailabilityNotifications]

  // instance methods
  -[SUManagerClient init]
  -[SUManagerClient dealloc]
  -[SUManagerClient setQueue:]
  -[SUManagerClient invalidate]
  -[SUManagerClient queue]
  -[SUManagerClient delegate]
  -[SUManagerClient setDelegate:]
  -[SUManagerClient .cxx_destruct]
  -[SUManagerClient _remoteInterface]
  -[SUManagerClient _bundleIdentifier]
  -[SUManagerClient cancelDownload:]
  -[SUManagerClient initWithDelegate:]
  -[SUManagerClient downloadDidFinish:]
  -[SUManagerClient _invalidateConnection]
  -[SUManagerClient _remoteInterfaceWithErrorHandler:]
  -[SUManagerClient startDownload:]
  -[SUManagerClient pauseDownload:]
  -[SUManagerClient resumeDownload:]
  -[SUManagerClient clientType]
  -[SUManagerClient setClientType:]
  -[SUManagerClient initWithDelegate:queue:clientType:]
  -[SUManagerClient isAutomaticUpdateV2Enabled]
  -[SUManagerClient initWithDelegate:clientType:]
  -[SUManagerClient enableAutomaticUpdateV2:]
  -[SUManagerClient downloadDidStart:]
  -[SUManagerClient download:]
  -[SUManagerClient installationConstraintMonitor:constraintsDidChange:]
  -[SUManagerClient _registerAutoInstallOperationClientHandler:]
  -[SUManagerClient _consentAutoInstallOperation:withResult:]
  -[SUManagerClient autoInstallOperationDidConsent:]
  -[SUManagerClient _unregisterAutoInstallOperationClientHandler:]
  -[SUManagerClient _cancelAutoInstallOperation:withResult:]
  -[SUManagerClient autoInstallOperationWasCancelled:]
  -[SUManagerClient autoInstallOperationDidExpire:withError:]
  -[SUManagerClient installationConstraintObserverDidRemoveAllObserverBlocks:]
  -[SUManagerClient connectToServerIfNecessary]
  -[SUManagerClient _remoteInterfaceWithErrorHandler:connectIfNecessary:]
  -[SUManagerClient _setClientType]
  -[SUManagerClient isScanning:]
  -[SUManagerClient scanForUpdates:withResult:]
  -[SUManagerClient autoScanAndDownloadIfAvailable:]
  -[SUManagerClient isDownloading:]
  -[SUManagerClient startDownloadWithMetadata:withResult:]
  -[SUManagerClient updateDownloadMetadata:withResult:]
  -[SUManagerClient purgeDownload:]
  -[SUManagerClient downloadAndInstallState:]
  -[SUManagerClient _getExistingAutoInstallOperationFromModel:]
  -[SUManagerClient deviceHasSufficientSpaceForDownload:]
  -[SUManagerClient extraSpaceNeededForDownloadWithoutAppPurging:]
  -[SUManagerClient currentAutoInstallOperation:withResult:]
  -[SUManagerClient currentPasscodePolicy:]
  -[SUManagerClient isAutoUpdateEnabled:]
  -[SUManagerClient isAutoUpdateScheduled:]
  -[SUManagerClient presentAutoUpdateBanner:]
  -[SUManagerClient registerCSInstallPredicatesOnDate:]
  -[SUManagerClient isUpdateReadyForInstallation:]
  -[SUManagerClient installUpdateWithOptions:withResult:]
  -[SUManagerClient installUpdate:]
  -[SUManagerClient createInstallationKeybag:forUnattendedInstall:]
  -[SUManagerClient _remoteSynchronousInterfaceWithErrorHandler:connectIfNecessary:]
  -[SUManagerClient slaVersion:]
  -[SUManagerClient isDelayingUpdates:]
  -[SUManagerClient delayEndDate:]
  -[SUManagerClient setMandatorySoftwareUpdateDictionary:]
  -[SUManagerClient getMandatorySoftwareUpdateDictionary:]
  -[SUManagerClient _invalidateConstraintObserver:withError:]
  -[SUManagerClient scanRequestDidStartForOptions:]
  -[SUManagerClient scanRequestDidFinishForOptions:update:error:]
  -[SUManagerClient scanDidCompleteWithNewUpdateAvailable:error:]
  -[SUManagerClient automaticDownloadDidFailToStartForNewUpdateAvailable:withError:]
  -[SUManagerClient downloadWasInvalidatedForNewUpdateAvailable:]
  -[SUManagerClient downloadProgressDidChange:]
  -[SUManagerClient downloadDidFail:withError:]
  -[SUManagerClient downloadDidFinish:withInstallPolicy:]
  -[SUManagerClient installDidStart:]
  -[SUManagerClient installDidFail:withError:]
  -[SUManagerClient installDidFinish:]
  -[SUManagerClient installPolicyDidChange:]
  -[SUManagerClient managedInstallationRequested:]
  -[SUManagerClient autoInstallOperationIsReadyToInstall:withResult:]
  -[SUManagerClient autoInstallOperationPasscodePolicyChanged:passcodePolicyType:]
  -[SUManagerClient noteConnectionDropped]
  -[SUManagerClient _invalidateAllInstallationConstraintObserversForDownload]
  -[SUManagerClient setInstallDescriptor:]
  -[SUManagerClient preference:didChange:]
  -[SUManagerClient initWithDelegate:andQueue:]
  -[SUManagerClient totalPurgeableSpace]
  -[SUManagerClient observeInstallationConstraintChangesForDownload:observer:]
  -[SUManagerClient createInstallationKeybag:]
  -[SUManagerClient isInstallationKeybagRequired]
  -[SUManagerClient demoteApps:]
  -[SUManagerClient noteServerExiting]
  -[SUManagerClient installDescriptor]
  -[SUManagerClient scanDescriptor]
  -[SUManagerClient setScanDescriptor:]


SUUtility : NSObject
  // class methods
  +[SUUtility systemContainerURL]
  +[SUUtility serialNumber]
  +[SUUtility isDaemon]
  +[SUUtility taskQueue]
  +[SUUtility isCellularDataCapable]
  +[SUUtility setIsDaemon:]
  +[SUUtility errorWithCode:]
  +[SUUtility gregorianCalendar]
  +[SUUtility setCacheable:]
  +[SUUtility currentDeviceName]
  +[SUUtility currentProductVersion]
  +[SUUtility currentProductBuild]
  +[SUUtility currentProductType]
  +[SUUtility currentReleaseType]
  +[SUUtility assignError:withCode:]
  +[SUUtility currentProductCategory]
  +[SUUtility purgeV1SUAssets]
  +[SUUtility assignError:withError:translate:]
  +[SUUtility hasEnoughDiskSpace:growth:deltaSpaceNeeded:isAutoDownload:includePurging:]
  +[SUUtility totalPurgeableSpace:]
  +[SUUtility demoteApps:withError:]
  +[SUUtility errorWithCode:originalError:]
  +[SUUtility currentReleaseTypeIsInternal]
  +[SUUtility internalRecoveryStringForErrorCode:]
  +[SUUtility translateError:]
  +[SUUtility translateError:withAddedUserInfo:]
  +[SUUtility translateErrorCodeFromError:]
  +[SUUtility isProductionFused]
  +[SUUtility hasEnoughDiskSpace:growth:deltaSpaceNeeded:]
  +[SUUtility hasEnoughDiskSpace:growth:deltaSpaceNeeded:isAutoDownload:]
  +[SUUtility hasEnoughDiskSpace:growth:deltaSpaceNeeded:isAutoDownload:disableCDLevelFour:disableCDLevelThree:disableSiriDeletion:disableAppDemotion:]
  +[SUUtility appDemoteableSpace]
  +[SUUtility appDemotionIsEnabled]
  +[SUUtility enableAppDemotion:]
  +[SUUtility appDemotionSettingQueue]
  +[SUUtility freeCachedSpaceSynchronous:timeout:isAutoDownload:]
  +[SUUtility freeCachedSpaceSynchronous:timeout:isAutoDownload:disableCDLevelFour:disableSiriDeletion:disableAppDemotion:]
  +[SUUtility cacheDelete:]
  +[SUUtility isWiFiCapable]
  +[SUUtility hasCellularRadio]
  +[SUUtility cellularDataIsEnabled]
  +[SUUtility alarmSetBeforeDate:]
  +[SUUtility MADownloadErrorCodeToSUDownloadErrorCode:]
  +[SUUtility postAutoUpdateInformationalNotification:body:buttonText:altButtonText:withCompletion:]
  +[SUUtility postFailureNotification:body:buttonText:altButtonText:]
  +[SUUtility hasEnoughDiskSpace:growth:]
  +[SUUtility freeCachedSpaceSynchronous:timeout:]
  +[SUUtility devicePadding:]
  +[SUUtility URLIfFileExists:]
  +[SUUtility addToDate:numberOfDays:]
  +[SUUtility prettyPrintDate:]
  +[SUUtility writeKeepAliveFile]
  +[SUUtility deleteKeepAliveFile]


SUDocumentation : NSObject <NSSecureCoding, NSCopying>
 @property  NSURL *baseDocumentationURL
 @property  NSString *releaseNotesSummaryFileName
 @property  NSString *licenseAgreementFileName
 @property  NSString *releaseNotesFileName
 @property  NSString *primaryLanguage
 @property  NSNumber *slaVersion
 @property  NSString *humanReadableUpdateName
 @property  NSURL *releaseNotesSummaryURL
 @property  NSURL *releaseNotesURL
 @property  NSURL *licenseAgreementURL

  // class methods
  +[SUDocumentation supportsSecureCoding]

  // instance methods
  -[SUDocumentation init]
  -[SUDocumentation dealloc]
  -[SUDocumentation copyWithZone:]
  -[SUDocumentation encodeWithCoder:]
  -[SUDocumentation initWithCoder:]
  -[SUDocumentation primaryLanguage]
  -[SUDocumentation setPrimaryLanguage:]
  -[SUDocumentation releaseNotes]
  -[SUDocumentation licenseAgreement]
  -[SUDocumentation slaVersion]
  -[SUDocumentation releaseNotesSummary]
  -[SUDocumentation setBaseDocumentationURL:]
  -[SUDocumentation setReleaseNotesSummaryFileName:]
  -[SUDocumentation setReleaseNotesFileName:]
  -[SUDocumentation setLicenseAgreementFileName:]
  -[SUDocumentation setSlaVersion:]
  -[SUDocumentation humanReadableUpdateName]
  -[SUDocumentation _resetIfNecessary]
  -[SUDocumentation _cachedDocumentationDataForURL:]
  -[SUDocumentation releaseNotesSummaryURL]
  -[SUDocumentation releaseNotesURL]
  -[SUDocumentation licenseAgreementURL]
  -[SUDocumentation _getSUImage:]
  -[SUDocumentation pngImageDataFromBundle:fileName:]
  -[SUDocumentation setHumanReadableUpdateName:]
  -[SUDocumentation setLicenseAgreementURL:]
  -[SUDocumentation setReleaseNotesSummaryURL:]
  -[SUDocumentation setReleaseNotesURL:]
  -[SUDocumentation _localizedResourceURLForDocumentationAsset:resource:]
  -[SUDocumentation localizedDocumentationStringFromBundle:key:]
  -[SUDocumentation _clearTransientDocumentationData]
  -[SUDocumentation localizedStringFromBundle:key:]
  -[SUDocumentation releaseNotesSummaryFileName]
  -[SUDocumentation localizedURLFromBundle:resource:]
  -[SUDocumentation releaseNotesFileName]
  -[SUDocumentation licenseAgreementFileName]
  -[SUDocumentation initWithDocumentationURL:]
  -[SUDocumentation hasAnyDocumentation]
  -[SUDocumentation getIconImage]
  -[SUDocumentation getFullWidthImage]
  -[SUDocumentation baseDocumentationURL]


SUDownload : NSObject <NSSecureCoding, NSCopying>
 @property  SUDescriptor *descriptor
 @property  SUOperationProgress *progress
 @property  SUDownloadMetadata *metadata

  // class methods
  +[SUDownload supportsSecureCoding]

  // instance methods
  -[SUDownload dealloc]
  -[SUDownload copyWithZone:]
  -[SUDownload encodeWithCoder:]
  -[SUDownload initWithCoder:]
  -[SUDownload progress]
  -[SUDownload setMetadata:]
  -[SUDownload metadata]
  -[SUDownload descriptor]
  -[SUDownload setProgress:]
  -[SUDownload setDescriptor:]
  -[SUDownload allowCellularDownload]
  -[SUDownload totalSpaceConsumed]
  -[SUDownload isValidDownload]


SUDownloadMetadata : NSObject <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  BOOL autoDownload
 @property  BOOL downloadOnly
 @property  int activeDownloadPolicyType
 @property  BOOL enabledFor2G
 @property  BOOL enabledFor3G
 @property  BOOL enabledFor4G
 @property  BOOL enabledForWifi
 @property  BOOL enabledOnBatteryPower
 @property  BOOL enabledForCellularRoaming
 @property  int downloadFeeAgreementStatus
 @property  int termsAndConditionsAgreementStatus
 @property  BOOL enforceWifiOnlyOverride

  // class methods
  +[SUDownloadMetadata supportsSecureCoding]

  // instance methods
  -[SUDownloadMetadata init]
  -[SUDownloadMetadata dealloc]
  -[SUDownloadMetadata isEqual:]
  -[SUDownloadMetadata copyWithZone:]
  -[SUDownloadMetadata mutableCopyWithZone:]
  -[SUDownloadMetadata encodeWithCoder:]
  -[SUDownloadMetadata initWithCoder:]
  -[SUDownloadMetadata isAutoDownload]
  -[SUDownloadMetadata setDownloadOnly:]
  -[SUDownloadMetadata isEnabledForWifi]
  -[SUDownloadMetadata isEnabledFor2G]
  -[SUDownloadMetadata isEnabledFor3G]
  -[SUDownloadMetadata isEnabledFor4G]
  -[SUDownloadMetadata isEnabledOnBatteryPower]
  -[SUDownloadMetadata isEnabledForCellularRoaming]
  -[SUDownloadMetadata activeDownloadPolicy:]
  -[SUDownloadMetadata downloadFeeAgreementStatus]
  -[SUDownloadMetadata setActiveDownloadPolicyType:]
  -[SUDownloadMetadata setAutoDownload:]
  -[SUDownloadMetadata setEnabledFor2G:]
  -[SUDownloadMetadata setEnabledFor3G:]
  -[SUDownloadMetadata setEnabledFor4G:]
  -[SUDownloadMetadata setEnabledForWifi:]
  -[SUDownloadMetadata setEnabledOnBatteryPower:]
  -[SUDownloadMetadata setEnforceWifiOnlyOverride:]
  -[SUDownloadMetadata setDownloadFeeAgreementStatus:]
  -[SUDownloadMetadata setTermsAndConditionsAgreementStatus:]
  -[SUDownloadMetadata setEnabledForCellularRoaming:]
  -[SUDownloadMetadata enforceWifiOnlyOverride]
  -[SUDownloadMetadata _stringForBool:]
  -[SUDownloadMetadata isDownloadOnly]
  -[SUDownloadMetadata termsAndConditionsAgreementStatus]
  -[SUDownloadMetadata activeDownloadPolicyType]
  -[SUDownloadMetadata applyDownloadPolicy:]
  -[SUDownloadMetadata availableDownloadPolicyIfDifferentFromActive:]
  -[SUDownloadMetadata matchesDownloadPolicy:]
  -[SUDownloadMetadata isEnabledForNetworkType:]


SUMutableDownloadMetadata : SUDownloadMetadata
 @property  int downloadFeeAgreementStatus
 @property  int termsAndConditionsAgreementStatus
 @property  BOOL enforceWifiOnlyOverride
 @property  BOOL autoDownload
 @property  BOOL downloadOnly

  // instance methods
  -[SUMutableDownloadMetadata initWithMetadata:]
  -[SUMutableDownloadMetadata applyDownloadPolicy:]


SUCarrierDownloadPolicyProperties : NSObject <NSSecureCoding>
  // class methods
  +[SUCarrierDownloadPolicyProperties supportsSecureCoding]

  // instance methods
  -[SUCarrierDownloadPolicyProperties encodeWithCoder:]
  -[SUCarrierDownloadPolicyProperties initWithCoder:]
  -[SUCarrierDownloadPolicyProperties _boolForKey:defaultValue:]
  -[SUCarrierDownloadPolicyProperties _unsignedIntegerForKey:defaultValue:]
  -[SUCarrierDownloadPolicyProperties _numberForKey:]
  -[SUCarrierDownloadPolicyProperties _integerForKey:defaultValue:]
  -[SUCarrierDownloadPolicyProperties _longLongForKey:defaultValue:]
  -[SUCarrierDownloadPolicyProperties _isValidHour:]
  -[SUCarrierDownloadPolicyProperties _carrierSUProperties]
  -[SUCarrierDownloadPolicyProperties isDownloadFree]
  -[SUCarrierDownloadPolicyProperties isDownloadAllowable]
  -[SUCarrierDownloadPolicyProperties isDownloadAllowableOver2G]
  -[SUCarrierDownloadPolicyProperties isAutoDownloadAllowable]
  -[SUCarrierDownloadPolicyProperties maximumDownloadSizeInBytes]
  -[SUCarrierDownloadPolicyProperties numberOfDaysToWaitForCellularAutoDownload]
  -[SUCarrierDownloadPolicyProperties peakStartHour]
  -[SUCarrierDownloadPolicyProperties peakEndHour]


SUAutoInstallFailureNotification : NSObject <SUAutoInstallFailureNotification>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUAutoInstallFailureNotification init]
  -[SUAutoInstallFailureNotification dealloc]
  -[SUAutoInstallFailureNotification dismissNotification]
  -[SUAutoInstallFailureNotification postNotificationForError:withUpdateBuildNumber:]
  -[SUAutoInstallFailureNotification postNotificationForError:]


SUNetworkMonitor : NSObject <CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientCarrierBundleDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SUNetworkMonitor sharedInstance]
  +[SUNetworkMonitor setHoldsWiFiAssertion:]
  +[SUNetworkMonitor holdsWiFiAssertion]

  // instance methods
  -[SUNetworkMonitor init]
  -[SUNetworkMonitor dealloc]
  -[SUNetworkMonitor addObserver:]
  -[SUNetworkMonitor removeObserver:]
  -[SUNetworkMonitor displayStatusChanged:status:]
  -[SUNetworkMonitor carrierBundleChange:]
  -[SUNetworkMonitor operatorBundleChange:]
  -[SUNetworkMonitor setCellularRoaming:]
  -[SUNetworkMonitor _initNetworkObservation]
  -[SUNetworkMonitor currentNetworkType]
  -[SUNetworkMonitor _networkTypeFromFlags:]
  -[SUNetworkMonitor setCurrentNetworkType:]
  -[SUNetworkMonitor isCellularRoaming]
  -[SUNetworkMonitor isCellularDataRoamingEnabled]
  -[SUNetworkMonitor _resetCtClient]
  -[SUNetworkMonitor _queue_currentNetworkType]
  -[SUNetworkMonitor _isCurrentlyRoaming]
  -[SUNetworkMonitor setSubscriptions]
  -[SUNetworkMonitor _networkTypeFromCurrentCellularData]
  -[SUNetworkMonitor _networkTypeFromCurrentCellularDataWithError:]
  -[SUNetworkMonitor _operatorBundleChanged]
  -[SUNetworkMonitor _carrierBundleChanged]
  -[SUNetworkMonitor isNetworkTypeCellular:]


SUDownloadPolicy : SUDefaultDownloadPolicy

SUDefaultDownloadPolicy : NSObject <SUDownloadPolicy>
 @property  SUCarrierDownloadPolicyProperties *carrierPolicy
 @property  BOOL cellularCapable
 @property  SUNetworkMonitor *networkMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  SUDescriptor *descriptor

  // instance methods
  -[SUDefaultDownloadPolicy dealloc]
  -[SUDefaultDownloadPolicy descriptor]
  -[SUDefaultDownloadPolicy setDescriptor:]
  -[SUDefaultDownloadPolicy initWithDescriptor:]
  -[SUDefaultDownloadPolicy isDownloadable]
  -[SUDefaultDownloadPolicy networkMonitor]
  -[SUDefaultDownloadPolicy setNetworkMonitor:]
  -[SUDefaultDownloadPolicy isDownloadAllowableForCellular]
  -[SUDefaultDownloadPolicy isDownloadFreeForCellular]
  -[SUDefaultDownloadPolicy isPowerRequired]
  -[SUDefaultDownloadPolicy isDownloadAllowableForCellular2G]
  -[SUDefaultDownloadPolicy isDownloadAllowableForCellularRoaming]
  -[SUDefaultDownloadPolicy isDownloadAllowableForWiFi]
  -[SUDefaultDownloadPolicy isSamePolicy:]
  -[SUDefaultDownloadPolicy _stringForBool:]
  -[SUDefaultDownloadPolicy _isCellularCapable]
  -[SUDefaultDownloadPolicy isDownloadableForCurrentNetworkConditions:cellularFeesApply:powerRequired:]
  -[SUDefaultDownloadPolicy _isDownloadableForNetworkType:error:cellularFeesApply:powerRequired:]
  -[SUDefaultDownloadPolicy hasEnoughDiskSpace]
  -[SUDefaultDownloadPolicy isDownloadableForCurrentNetworkConditions:cellularFeesApply:]
  -[SUDefaultDownloadPolicy carrierPolicy]
  -[SUDefaultDownloadPolicy setCarrierPolicy:]
  -[SUDefaultDownloadPolicy isCellularCapable]
  -[SUDefaultDownloadPolicy setCellularCapable:]


SUAutoInstallForecast : NSObject <NSSecureCoding, NSCopying>
 @property  NSDate *unlockStartDate
 @property  NSDate *unlockEndDate
 @property  NSDate *suStartDate
 @property  NSDate *suEndDate
 @property  NSDate *firstUnlock
 @property  long long scheduleType

  // class methods
  +[SUAutoInstallForecast supportsSecureCoding]

  // instance methods
  -[SUAutoInstallForecast init]
  -[SUAutoInstallForecast dealloc]
  -[SUAutoInstallForecast isEqual:]
  -[SUAutoInstallForecast copyWithZone:]
  -[SUAutoInstallForecast encodeWithCoder:]
  -[SUAutoInstallForecast initWithCoder:]
  -[SUAutoInstallForecast _calendar]
  -[SUAutoInstallForecast suEndDate]
  -[SUAutoInstallForecast _isDateExpired:]
  -[SUAutoInstallForecast suStartDate]
  -[SUAutoInstallForecast scheduleType]
  -[SUAutoInstallForecast setUnlockStartDate:]
  -[SUAutoInstallForecast setUnlockEndDate:]
  -[SUAutoInstallForecast setSuStartDate:]
  -[SUAutoInstallForecast setSuEndDate:]
  -[SUAutoInstallForecast setFirstUnlock:]
  -[SUAutoInstallForecast _forecastDateCache]
  -[SUAutoInstallForecast unlockStartDate]
  -[SUAutoInstallForecast unlockEndDate]
  -[SUAutoInstallForecast firstUnlock]
  -[SUAutoInstallForecast _isForecastLogicallyExpired]
  -[SUAutoInstallForecast _roundedStartTime]
  -[SUAutoInstallForecast _roundedEndTime]


SUInstallationConstraintMonitorPhoneCalls : SUInstallationConstraintMonitorBase
  // instance methods
  -[SUInstallationConstraintMonitorPhoneCalls dealloc]
  -[SUInstallationConstraintMonitorPhoneCalls unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorPhoneCalls initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorPhoneCalls initOnQueue:withDownload:callCenter:inSpringBoard:onExistingPhoneCall:]
  -[SUInstallationConstraintMonitorPhoneCalls _callStatusChanged]
  -[SUInstallationConstraintMonitorPhoneCalls _queue_noteOnExistingPhoneCallDidChange:]


SUAutoDownloadPolicy : SUDefaultDownloadPolicy
  // instance methods
  -[SUAutoDownloadPolicy initWithDescriptor:]
  -[SUAutoDownloadPolicy isDownloadAllowableForCellular]
  -[SUAutoDownloadPolicy isPowerRequired]
  -[SUAutoDownloadPolicy wifiOnlyPeriodInDays]
  -[SUAutoDownloadPolicy computeTimeOfWifiOnlyPeriodEndFromDate:]


SUAppPurgingNotification : NSObject <SUAppPurgingNotification>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SUAppPurgingNotification postAppPurgingNotificationWithCompletion:]


SUDownloadPolicyFactory : NSObject
  // class methods
  +[SUDownloadPolicyFactory downloadPolicyTypeForClass:]
  +[SUDownloadPolicyFactory downloadPolicyForType:forDescriptor:]
  +[SUDownloadPolicyFactory userDownloadPolicyForDescriptor:existingPolicy:]
  +[SUDownloadPolicyFactory _userDownloadPolicyFromCurrentPolicy:descriptor:networkMonitor:allowCellularOverride:]
  +[SUDownloadPolicyFactory userDownloadPolicyForDescriptor:existingPolicy:networkMonitor:allowCellularOverride:]
  +[SUDownloadPolicyFactory userDownloadPolicyForDescriptor:existingPolicy:allowCellularOverride:]
  +[SUDownloadPolicyFactory userDownloadPolicyForDescriptor:]


SUPreferences : NSObject
 @property  <SUPreferencesObserver> *observer
 @property  BOOL disableManagedRequest
 @property  BOOL disableUserWiFiOnlyPeriod
 @property  BOOL disableBuildNumberComparison
 @property  BOOL allowSameBuildUpdates
 @property  BOOL disableAvailabilityAlerts
 @property  BOOL disableAutoDownload
 @property  BOOL simulateAutoDownload
 @property  BOOL disableAutoSU
 @property  BOOL scanWeeklyInternally
 @property  BOOL forceFullReplacement
 @property  BOOL disableFullReplacementFallback
 @property  NSNumber *updateDelayInterval
 @property  BOOL shouldDelayUpdates
 @property  BOOL shouldDelayInMinutes
 @property  NSNumber *unmetConstraints
 @property  NSNumber *mandatorySUFlags
 @property  NSString *requestedPMV
 @property  BOOL backgroundDLKnownBuilds
 @property  NSNumber *autoSUStartDelta
 @property  NSNumber *autoSUEndDelta
 @property  NSNumber *autoSUUnlockStartDelta
 @property  NSNumber *autoSUUnlockEndDelta
 @property  BOOL autoUpdateForceOn
 @property  BOOL autoUpdateForceOff
 @property  BOOL isAutomaticUpdateV2Enabled
 @property  NSNumber *bannerDelay
 @property  BOOL autoDownloadDeletedBuild

  // class methods
  +[SUPreferences sharedInstance]

  // instance methods
  -[SUPreferences init]
  -[SUPreferences dealloc]
  -[SUPreferences observer]
  -[SUPreferences setObserver:]
  -[SUPreferences reload]
  -[SUPreferences isAutomaticUpdateV2Enabled]
  -[SUPreferences enableAutomaticUpdateV2:]
  -[SUPreferences disableBuildNumberComparison]
  -[SUPreferences allowSameBuildUpdates]
  -[SUPreferences forceFullReplacement]
  -[SUPreferences requestedPMV]
  -[SUPreferences disableFullReplacementFallback]
  -[SUPreferences disableAvailabilityAlerts]
  -[SUPreferences disableUserWiFiOnlyPeriod]
  -[SUPreferences _loadPreferences]
  -[SUPreferences _getBooleanPreferenceForKey:withDefaultValue:]
  -[SUPreferences _copyNumberPreferenceForKey:]
  -[SUPreferences _copyStringPreferenceForKey:]
  -[SUPreferences _mandatorySUFlagsForPreferences]
  -[SUPreferences _copyPreferenceForKey:ofType:]
  -[SUPreferences _setBooleanPreferenceForKey:value:]
  -[SUPreferences _createDatePreferencesForKey:]
  -[SUPreferences isKeySetInPreferences:]
  -[SUPreferences disableManagedRequest]
  -[SUPreferences isAutoDownloadDisabled]
  -[SUPreferences simulateAutoDownload]
  -[SUPreferences isAutoSUDisabled]
  -[SUPreferences scanWeeklyInternally]
  -[SUPreferences updateDelayInterval]
  -[SUPreferences shouldDelayUpdates]
  -[SUPreferences unmetConstraints]
  -[SUPreferences shouldDelayInMinutes]
  -[SUPreferences mandatorySUFlags]
  -[SUPreferences autoSUStartDelta]
  -[SUPreferences autoSUEndDelta]
  -[SUPreferences autoSUUnlockStartDelta]
  -[SUPreferences autoSUUnlockEndDelta]
  -[SUPreferences autoUpdateForceOn]
  -[SUPreferences autoUpdateForceOff]
  -[SUPreferences bannerDelay]
  -[SUPreferences autoDownloadDeletedBuild]
  -[SUPreferences backgroundDLKnownBuilds]


SUManagedDeviceUpdateDelay : NSObject
 @property  BOOL isDelayed
 @property  NSDate *delayedStartDate
 @property  unsigned long delayPeriod

  // class methods
  +[SUManagedDeviceUpdateDelay supportsSecureCoding]

  // instance methods
  -[SUManagedDeviceUpdateDelay dealloc]
  -[SUManagedDeviceUpdateDelay copyWithZone:]
  -[SUManagedDeviceUpdateDelay encodeWithCoder:]
  -[SUManagedDeviceUpdateDelay initWithCoder:]
  -[SUManagedDeviceUpdateDelay setIsDelayed:]
  -[SUManagedDeviceUpdateDelay isDelayed]
  -[SUManagedDeviceUpdateDelay delayPeriod]
  -[SUManagedDeviceUpdateDelay setDelayPeriod:]
  -[SUManagedDeviceUpdateDelay initWithDelay:]
  -[SUManagedDeviceUpdateDelay delayedStartDate]
  -[SUManagedDeviceUpdateDelay delayUnit]
  -[SUManagedDeviceUpdateDelay delayEndDate]
  -[SUManagedDeviceUpdateDelay setDelayedStartDate:]


SUInstallationConstraintMonitorCarplay : SUInstallationConstraintMonitorBase <CARSessionObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SUInstallationConstraintMonitorCarplay dealloc]
  -[SUInstallationConstraintMonitorCarplay sessionDidConnect:]
  -[SUInstallationConstraintMonitorCarplay sessionDidDisconnect:]
  -[SUInstallationConstraintMonitorCarplay unsatisfiedConstraints]
  -[SUInstallationConstraintMonitorCarplay initOnQueue:withDownload:]
  -[SUInstallationConstraintMonitorCarplay _queue_carplayDidChange]


SUDefaultWiFiOnlyDownloadPolicy : SUDefaultDownloadPolicy
  // class methods
  +[SUDefaultWiFiOnlyDownloadPolicy wifiOnlyPeriodInDaysForUpdate:]

  // instance methods
  -[SUDefaultWiFiOnlyDownloadPolicy initWithDescriptor:]
  -[SUDefaultWiFiOnlyDownloadPolicy isDownloadAllowableForCellular]


SUDefaultRoamingRestrictedDownloadPolicy : SUDefaultDownloadPolicy
  // instance methods
  -[SUDefaultRoamingRestrictedDownloadPolicy isDownloadAllowableForCellularRoaming]


NSString(SUS)
	// instance methods
	-[NSString(SUS) compareNumerically:]

MAAsset(SUS)
	// instance methods
	-[MAAsset(SUS) isInstalled]
	-[MAAsset(SUS) purge]
	-[MAAsset(SUS) isDownloading]
	-[MAAsset(SUS) cancelDownload]
	-[MAAsset(SUS) isEmergencyUpdate]
	-[MAAsset(SUS) cleanupAsset]
	-[MAAsset(SUS) cancelDownloadIfNecessary]
	-[MAAsset(SUS) isDownloadingOrInstalled]

NSDictionary(SU)
	// instance methods
	-[NSDictionary(SU) safeObjectForKey:ofClass:]

NSMutableDictionary(SU)
	// instance methods
	-[NSMutableDictionary(SU) setSafeObject:forKey:]

01 00 1e00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAsset 
01 00 1e00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: ASAssetQuery 
01 00 0e00 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurgeAppsRequest 
01 00 0e00 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurgeAppsRequestOptions 
01 00 0e00 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurgeableAppRequest 
01 00 0e00 /System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon: ASDPurgeableAppRequestOptions 
01 00 0100 /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic: ATConnection 
01 00 1600 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDateFormatterCache 
01 00 1600 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDateTimeCache 
01 00 1600 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSTimer 
01 00 1d00 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpAction 
01 00 1200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpController 
01 00 1200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpItem 
01 00 1200 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpNotification 
01 00 1e00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 1e00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 1e00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAMsuDownloadOptions 
01 00 1400 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0200 /System/Library/PrivateFrameworks/MobileSoftwareUpdate.framework/MobileSoftwareUpdate: MSUUpdateBrainAssetLoader 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1500 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 0600 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 1300 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 1300 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 1300 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 1300 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
