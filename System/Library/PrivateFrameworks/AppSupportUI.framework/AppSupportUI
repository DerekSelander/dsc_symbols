|| __DATA.__objc_data _OBJC_CLASS_$_NUIBoxArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_NUICollectionViewContainerCell
|| __DATA.__objc_data _OBJC_CLASS_$_NUIContainerFlowView
|| __DATA.__objc_data _OBJC_CLASS_$_NUIContentScrollView
|| __DATA.__objc_data _OBJC_CLASS_$_NUIGridArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_NUISizeCache
|| __DATA.__objc_data _OBJC_METACLASS_$_NUIBoxArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_NUICollectionViewContainerCell
|| __DATA.__objc_data _OBJC_METACLASS_$_NUIContainerFlowView
|| __DATA.__objc_data _OBJC_METACLASS_$_NUIContentScrollView
|| __DATA.__objc_data _OBJC_METACLASS_$_NUIGridArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_NUISizeCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUIContainerBoxView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUIContainerGridView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUIContainerStackView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUIContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NUITableViewContainerCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUIContainerBoxView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUIContainerGridView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUIContainerStackView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUIContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NUITableViewContainerCell
|| __TEXT.__const _NUIContainerViewDirectionalInsetsUseDefault
|| __TEXT.__const _NUIContainerViewDirectionalInsetsUseSystem
|| __TEXT.__const _NUIContainerViewInsetsUseDefault
|| __TEXT.__const _NUIContainerViewInsetsUseSystem
|| __TEXT.__const _NUIContainerViewLengthNoBaseline
|| __TEXT.__const _NUIContainerViewLengthUseDefault
|| __TEXT.__const _NUIContainerViewLengthUseSystem
|| __TEXT.__const _NUIContainerViewSizeUnbounded
|| __TEXT.__const _NUIContainerViewSizeUseDefault
|| __TEXT.__const _NUILayoutPriorityUseDefault
|| __TEXT.__text _NUIContainerViewLengthIsDefault
|| __TEXT.__text _NUIContainerViewLengthIsSystem
|| __TEXT.__text _NUIContainerViewLengthMakeSystem
|| __TEXT.__text __NUIArrangementInvalidRect
|| __TEXT.__text __NUIArrangementInvalidSize
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ QuartzCore: _CATransform3DIsIdentity
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransformLayer
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIWebView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryAccessibilityMedium
__ UIKit: _UIEdgeInsetsZero
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _sysctl
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
_NUIViewContainerViewInfo : NSObject
  // instance methods
  -[_NUIViewContainerViewInfo .cxx_construct]
  -[_NUIViewContainerViewInfo .cxx_destruct]
  -[_NUIViewContainerViewInfo init]


_NUIFlowRowContainer : NSObject <_NUIGridArrangementContainer, NUIArrangementItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_NUIFlowRowContainer .cxx_construct]
  -[_NUIFlowRowContainer dealloc]
  -[_NUIFlowRowContainer .cxx_destruct]
  -[_NUIFlowRowContainer contentHuggingPriorityForAxis:]
  -[_NUIFlowRowContainer contentCompressionResistancePriorityForAxis:]
  -[_NUIFlowRowContainer isLayoutSizeDependentOnPerpendicularAxis]
  -[_NUIFlowRowContainer effectiveBaselineOffsetFromContentBottom]
  -[_NUIFlowRowContainer effectiveFirstBaselineOffsetFromContentTop]
  -[_NUIFlowRowContainer contentLayoutSizeFittingSize:forArrangedSubview:]
  -[_NUIFlowRowContainer layoutFrameForArrangedSubview:withProposedContentFrame:]
  -[_NUIFlowRowContainer populateGridArrangementCells:]
  -[_NUIFlowRowContainer populateGridArrangementDimension:withCells:axis:]
  -[_NUIFlowRowContainer initWithFlowArrangement:cellRange:]


_NUIFlowFillEuallyDummyItem : NSObject <NUIArrangementItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_NUIFlowFillEuallyDummyItem contentHuggingPriorityForAxis:]
  -[_NUIFlowFillEuallyDummyItem contentCompressionResistancePriorityForAxis:]
  -[_NUIFlowFillEuallyDummyItem isLayoutSizeDependentOnPerpendicularAxis]
  -[_NUIFlowFillEuallyDummyItem effectiveBaselineOffsetFromContentBottom]
  -[_NUIFlowFillEuallyDummyItem effectiveFirstBaselineOffsetFromContentTop]
  -[_NUIFlowFillEuallyDummyItem initWithRowContainer:]


_NUIFlowContainer : NSObject <_NUIGridArrangementContainer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_NUIFlowContainer .cxx_construct]
  -[_NUIFlowContainer dealloc]
  -[_NUIFlowContainer .cxx_destruct]
  -[_NUIFlowContainer contentLayoutSizeFittingSize:forArrangedSubview:]
  -[_NUIFlowContainer layoutFrameForArrangedSubview:withProposedContentFrame:]
  -[_NUIFlowContainer populateGridArrangementCells:]
  -[_NUIFlowContainer populateGridArrangementDimension:withCells:axis:]
  -[_NUIFlowContainer initWithFlowArrangement:]


NUITableViewContainerCell : UITableViewCell
 @property  NUIContainerView *containerView

  // class methods
  +[NUITableViewContainerCell containerViewClass]

  // instance methods
  -[NUITableViewContainerCell initWithStyle:reuseIdentifier:]
  -[NUITableViewContainerCell systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[NUITableViewContainerCell .cxx_destruct]
  -[NUITableViewContainerCell containerView]
  -[NUITableViewContainerCell sizeThatFits:]
  -[NUITableViewContainerCell containerViewDidLoad]


NUICollectionViewContainerCell : UICollectionViewCell
 @property  NUIContainerView *containerView

  // class methods
  +[NUICollectionViewContainerCell _contentViewClass]
  +[NUICollectionViewContainerCell containerViewClass]

  // instance methods
  -[NUICollectionViewContainerCell systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[NUICollectionViewContainerCell .cxx_destruct]
  -[NUICollectionViewContainerCell containerView]
  -[NUICollectionViewContainerCell sizeThatFits:]
  -[NUICollectionViewContainerCell initWithFrame:]
  -[NUICollectionViewContainerCell containerViewDidLoad]


NUIContainerView : UIView
 @property  BOOL debugBoundingBoxesEnabled
 @property  NSArray *arrangedSubviews
 @property  NSArray *visibleArrangedSubviews
 @property  long long arrangedSubviewRemovalPolicy
 @property  long long arrangedSubviewAdditionPolicy
 @property  <NUIContainerViewDelegate> *delegate
 @property  BOOL baselineRelativeArrangement
 @property  BOOL layoutMarginsRelativeArrangement
 @property  BOOL baselineRelativeLayoutMarginsForArrangement

  // class methods
  +[NUIContainerView layerClass]
  +[NUIContainerView initialize]
  +[NUIContainerView requiresConstraintBasedLayout]
  +[NUIContainerView isDebugBoundingBoxesEnabled]
  +[NUIContainerView enableAPIMisuseAssertions]
  +[NUIContainerView setEnableAPIMisuseAssertions:]
  +[NUIContainerView debugVersion]

  // instance methods
  -[NUIContainerView willRemoveSubview:]
  -[NUIContainerView layoutMarginsDidChange]
  -[NUIContainerView performBatchUpdates:]
  -[NUIContainerView setNeedsLayout]
  -[NUIContainerView arrangedSubviews]
  -[NUIContainerView _baselineOffsetsAtSize:]
  -[NUIContainerView _intrinsicContentSizeInvalidatedForChildView:]
  -[NUIContainerView systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:]
  -[NUIContainerView setArrangedSubviews:]
  -[NUIContainerView setDelegate:]
  -[NUIContainerView viewForLastBaselineLayout]
  -[NUIContainerView invalidateIntrinsicContentSize]
  -[NUIContainerView delegate]
  -[NUIContainerView .cxx_construct]
  -[NUIContainerView dealloc]
  -[NUIContainerView effectiveLayoutSizeFittingSize:]
  -[NUIContainerView .cxx_destruct]
  -[NUIContainerView addArrangedSubview:]
  -[NUIContainerView viewForFirstBaselineLayout]
  -[NUIContainerView layoutSubviews]
  -[NUIContainerView observeValueForKeyPath:ofObject:change:context:]
  -[NUIContainerView debugDictionary]
  -[NUIContainerView sizeThatFits:]
  -[NUIContainerView setBaselineRelativeArrangement:]
  -[NUIContainerView _layoutHeightDependsOnWidth]
  -[NUIContainerView initWithFrame:]
  -[NUIContainerView isBaselineRelativeArrangement]
  -[NUIContainerView _layoutSizeThatFits:fixedAxes:]
  -[NUIContainerView initWithCoder:]
  -[NUIContainerView _axesForDerivingIntrinsicContentSizeFromLayoutSize]
  -[NUIContainerView initWithArrangedSubviews:]
  -[NUIContainerView insertArrangedSubview:atIndex:]
  -[NUIContainerView removeArrangedSubview:]
  -[NUIContainerView setLayoutMarginsRelativeArrangement:]
  -[NUIContainerView isLayoutMarginsRelativeArrangement]
  -[NUIContainerView setAlignment:forView:inAxis:]
  -[NUIContainerView setMinimumSpacing:adjacentToView:]
  -[NUIContainerView isLayoutSizeDependentOnPerpendicularAxis]
  -[NUIContainerView contentLayoutSizeFittingSize:forArrangedSubview:]
  -[NUIContainerView layoutFrameForArrangedSubview:withProposedContentFrame:]
  -[NUIContainerView canCancelMeasurementForCompression]
  -[NUIContainerView shouldCancelMeasurementForCompressionInAxis:]
  -[NUIContainerView _isContainerView]
  -[NUIContainerView isDebugBoundingBoxesEnabled]
  -[NUIContainerView needsBaselineDebugBoundingBoxesForArrangedSubview:]
  -[NUIContainerView setArrangedSubviewRemovalPolicy:]
  -[NUIContainerView arrangedSubviewRemovalPolicy]
  -[NUIContainerView setArrangedSubviewAdditionPolicy:]
  -[NUIContainerView arrangedSubviewAdditionPolicy]
  -[NUIContainerView visibleArrangedSubviews]
  -[NUIContainerView replaceArrangedSubviewAtIndex:withView:]
  -[NUIContainerView replaceArrangedSubview:atIndex:]
  -[NUIContainerView indexOfArrangedSubview:]
  -[NUIContainerView setBaselineRelativeLayoutMarginsForArrangement:]
  -[NUIContainerView hasBaselineRelativeLayoutMarginsForArrangement]
  -[NUIContainerView alignmentForView:inAxis:]
  -[NUIContainerView positionAdjustmentOffsetForView:]
  -[NUIContainerView setPositionAdjustmentOffset:forView:]
  -[NUIContainerView minimumSpacingAdjacentToView:]
  -[NUIContainerView calculateArrangedSizeFittingSize:]
  -[NUIContainerView calculateViewForFirstBaselineLayout]
  -[NUIContainerView calculateViewForLastBaselineLayout]
  -[NUIContainerView layoutArrangedSubviewsInBounds:]
  -[NUIContainerView mustRestartMeasurement]
  -[NUIContainerView effectiveLayoutBounds]
  -[NUIContainerView isInBatchUpdate]
  -[NUIContainerView ensureArrangedSubviewsAreValid]
  -[NUIContainerView effectiveLayoutMargins]
  -[NUIContainerView invalidateInternalStateForInvalidation:]
  -[NUIContainerView setNeedsInvalidation:]
  -[NUIContainerView visibilityDidChangeForArrangedSubview:]
  -[NUIContainerView intrinsicContentSizeDidInvalidateForArrangedSubview:]
  -[NUIContainerView assertNotInLayoutPass:]
  -[NUIContainerView didInsertArrangedSubview:atIndex:]
  -[NUIContainerView didRemoveArrangedSubview:atIndex:]
  -[NUIContainerView setDebugBoundingBoxesEnabled:]
  -[NUIContainerView arrangedDebugDescription]
  -[NUIContainerView debugDictionaryForVisibleArrangedSubview:]
  -[NUIContainerView debugSetDelegateRespondsToSelectors]
  -[NUIContainerView debugSetEnabledFlags]


NUIContainerGridView : NUIContainerView <_NUIGridArrangementContainer>
 @property  NSArray *arrangedSubviewRows
 @property  long long numberOfRows
 @property  long long numberOfColumns
 @property  long long horizontalAlignment
 @property  long long verticalAlignment
 @property  long long horizontalDistribution
 @property  long long verticalDistribution
 @property  double rowSpacing
 @property  double columnSpacing
 @property  double rowHeight
 @property  double columnWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUIContainerGridView containerGridViewWithArrangedSubviewRows:]

  // instance methods
  -[NUIContainerGridView verticalAlignment]
  -[NUIContainerGridView rowHeight]
  -[NUIContainerGridView numberOfColumns]
  -[NUIContainerGridView setVerticalAlignment:]
  -[NUIContainerGridView .cxx_construct]
  -[NUIContainerGridView dealloc]
  -[NUIContainerGridView .cxx_destruct]
  -[NUIContainerGridView rowSpacing]
  -[NUIContainerGridView numberOfRows]
  -[NUIContainerGridView setRowSpacing:]
  -[NUIContainerGridView debugDictionary]
  -[NUIContainerGridView setBaselineRelativeArrangement:]
  -[NUIContainerGridView setRowHeight:]
  -[NUIContainerGridView initWithFrame:]
  -[NUIContainerGridView columnWidth]
  -[NUIContainerGridView initWithArrangedSubviews:]
  -[NUIContainerGridView setHorizontalAlignment:]
  -[NUIContainerGridView horizontalAlignment]
  -[NUIContainerGridView rowAtIndex:]
  -[NUIContainerGridView setColumnWidth:]
  -[NUIContainerGridView populateGridArrangementCells:]
  -[NUIContainerGridView populateGridArrangementDimension:withCells:axis:]
  -[NUIContainerGridView needsBaselineDebugBoundingBoxesForArrangedSubview:]
  -[NUIContainerGridView replaceArrangedSubviewAtIndex:withView:]
  -[NUIContainerGridView calculateArrangedSizeFittingSize:]
  -[NUIContainerGridView calculateViewForFirstBaselineLayout]
  -[NUIContainerGridView calculateViewForLastBaselineLayout]
  -[NUIContainerGridView layoutArrangedSubviewsInBounds:]
  -[NUIContainerGridView ensureArrangedSubviewsAreValid]
  -[NUIContainerGridView invalidateInternalStateForInvalidation:]
  -[NUIContainerGridView didInsertArrangedSubview:atIndex:]
  -[NUIContainerGridView didRemoveArrangedSubview:atIndex:]
  -[NUIContainerGridView arrangedDebugDescription]
  -[NUIContainerGridView debugDictionaryForVisibleArrangedSubview:]
  -[NUIContainerGridView initWithArrangedSubviewRows:]
  -[NUIContainerGridView arrangedSubviewRows]
  -[NUIContainerGridView setArrangedSubviewRows:]
  -[NUIContainerGridView arrangedSubviewInColumnAtIndex:rowAtIndex:]
  -[NUIContainerGridView getColumnRange:rowRange:forArrangedSubview:]
  -[NUIContainerGridView rowIndexForArrangedSubview:]
  -[NUIContainerGridView columnIndexForArrangedSubview:]
  -[NUIContainerGridView addRowWithArrangedSubviews:]
  -[NUIContainerGridView insertRowAtIndex:withArrangedSubviews:]
  -[NUIContainerGridView moveRowAtIndex:toIndex:]
  -[NUIContainerGridView removeRowAtIndex:]
  -[NUIContainerGridView columnAtIndex:]
  -[NUIContainerGridView addColumnWithArrangedSubviews:]
  -[NUIContainerGridView insertColumnAtIndex:withArrangedSubviews:]
  -[NUIContainerGridView moveColumnAtIndex:toIndex:]
  -[NUIContainerGridView removeColumnAtIndex:]
  -[NUIContainerGridView replaceArrangedSubview:inColumnAtIndex:rowAtIndex:]
  -[NUIContainerGridView horizontalDistribution]
  -[NUIContainerGridView setHorizontalDistribution:]
  -[NUIContainerGridView verticalDistribution]
  -[NUIContainerGridView setVerticalDistribution:]
  -[NUIContainerGridView setColumnSpacing:]
  -[NUIContainerGridView columnSpacing]
  -[NUIContainerGridView viewForFirstBaselineLayoutInRowAtIndex:]
  -[NUIContainerGridView viewForLastBaselineLayoutInRowAtIndex:]


NUIGridDimension : NSObject <NUIGridDimension>
 @property  NSArray *arrangedSubviews
 @property  BOOL hidden
 @property  double length
 @property  double spacingAfter
 @property  long long alignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NUIGridDimension arrangedSubviews]
  -[NUIGridDimension alignment]
  -[NUIGridDimension dealloc]
  -[NUIGridDimension length]
  -[NUIGridDimension setAlignment:]
  -[NUIGridDimension setLength:]
  -[NUIGridDimension setSpacingAfter:]
  -[NUIGridDimension isHidden]
  -[NUIGridDimension setHidden:]
  -[NUIGridDimension spacingAfter]


NUIContainerStackView : NUIContainerView <_NUIGridArrangementContainer>
 @property  long long axis
 @property  long long distribution
 @property  long long alignment
 @property  double spacing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUIContainerStackView containerStackViewWithAxis:arrangedSubviews:]
  +[NUIContainerStackView horizontalContainerStackViewWithArrangedSubviews:]
  +[NUIContainerStackView verticalContainerStackViewWithArrangedSubviews:]

  // instance methods
  -[NUIContainerStackView distribution]
  -[NUIContainerStackView spacing]
  -[NUIContainerStackView setDistribution:]
  -[NUIContainerStackView setSpacing:]
  -[NUIContainerStackView setAxis:]
  -[NUIContainerStackView alignment]
  -[NUIContainerStackView .cxx_construct]
  -[NUIContainerStackView dealloc]
  -[NUIContainerStackView .cxx_destruct]
  -[NUIContainerStackView setAlignment:]
  -[NUIContainerStackView axis]
  -[NUIContainerStackView debugDictionary]
  -[NUIContainerStackView setBaselineRelativeArrangement:]
  -[NUIContainerStackView initWithFrame:]
  -[NUIContainerStackView initWithArrangedSubviews:]
  -[NUIContainerStackView setCustomSpacing:afterView:]
  -[NUIContainerStackView customSpacingAfterView:]
  -[NUIContainerStackView populateGridArrangementCells:]
  -[NUIContainerStackView populateGridArrangementDimension:withCells:axis:]
  -[NUIContainerStackView needsBaselineDebugBoundingBoxesForArrangedSubview:]
  -[NUIContainerStackView calculateArrangedSizeFittingSize:]
  -[NUIContainerStackView calculateViewForFirstBaselineLayout]
  -[NUIContainerStackView calculateViewForLastBaselineLayout]
  -[NUIContainerStackView layoutArrangedSubviewsInBounds:]
  -[NUIContainerStackView invalidateInternalStateForInvalidation:]
  -[NUIContainerStackView didRemoveArrangedSubview:atIndex:]
  -[NUIContainerStackView arrangedDebugDescription]
  -[NUIContainerStackView setSpacing:afterArrangedSubviewAtIndex:]


NUIBoxArrangement : NSObject <_NUIBoxArrangementContainer>
 @property  <NUIArrangementContainer> *container
 @property  <NUIBoxArrangementDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NUIBoxArrangement reloadData]
  -[NUIBoxArrangement dataSource]
  -[NUIBoxArrangement .cxx_construct]
  -[NUIBoxArrangement dealloc]
  -[NUIBoxArrangement .cxx_destruct]
  -[NUIBoxArrangement container]
  -[NUIBoxArrangement contentLayoutSizeFittingSize:forArrangedSubview:]
  -[NUIBoxArrangement layoutFrameForArrangedSubview:withProposedContentFrame:]
  -[NUIBoxArrangement populateBoxArrangementCells:]
  -[NUIBoxArrangement initWithContainer:dataSource:]
  -[NUIBoxArrangement layoutSizeFittingSize:]
  -[NUIBoxArrangement positionItemsInBounds:block:]


NUIContainerFlowView : NUIContainerView <_NUIFlowArrangementContainer>
 @property  long long numberOfColumns
 @property  long long horizontalAlignment
 @property  long long verticalAlignment
 @property  long long horizontalDistribution
 @property  long long verticalDistribution
 @property  double rowSpacing
 @property  double columnSpacing
 @property  double itemSpacing
 @property  double rowHeight
 @property  double itemWidth
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUIContainerFlowView containerFlowViewWithArrangedSubviews:]

  // instance methods
  -[NUIContainerFlowView verticalAlignment]
  -[NUIContainerFlowView setNumberOfColumns:]
  -[NUIContainerFlowView rowHeight]
  -[NUIContainerFlowView numberOfColumns]
  -[NUIContainerFlowView setVerticalAlignment:]
  -[NUIContainerFlowView .cxx_construct]
  -[NUIContainerFlowView itemSpacing]
  -[NUIContainerFlowView dealloc]
  -[NUIContainerFlowView itemWidth]
  -[NUIContainerFlowView respondsToSelector:]
  -[NUIContainerFlowView .cxx_destruct]
  -[NUIContainerFlowView rowSpacing]
  -[NUIContainerFlowView setItemWidth:]
  -[NUIContainerFlowView setItemSpacing:]
  -[NUIContainerFlowView setRowSpacing:]
  -[NUIContainerFlowView debugDictionary]
  -[NUIContainerFlowView setRowHeight:]
  -[NUIContainerFlowView initWithFrame:]
  -[NUIContainerFlowView initWithArrangedSubviews:]
  -[NUIContainerFlowView setHorizontalAlignment:]
  -[NUIContainerFlowView isLayoutSizeDependentOnPerpendicularAxis]
  -[NUIContainerFlowView horizontalAlignment]
  -[NUIContainerFlowView fittingSizeForCell:withProposedSize:]
  -[NUIContainerFlowView distributionForRowAtIndex:ofTotalRowCount:withCells:]
  -[NUIContainerFlowView calculateArrangedSizeFittingSize:]
  -[NUIContainerFlowView calculateViewForFirstBaselineLayout]
  -[NUIContainerFlowView calculateViewForLastBaselineLayout]
  -[NUIContainerFlowView layoutArrangedSubviewsInBounds:]
  -[NUIContainerFlowView invalidateInternalStateForInvalidation:]
  -[NUIContainerFlowView arrangedDebugDescription]
  -[NUIContainerFlowView horizontalDistribution]
  -[NUIContainerFlowView setHorizontalDistribution:]
  -[NUIContainerFlowView verticalDistribution]
  -[NUIContainerFlowView setVerticalDistribution:]
  -[NUIContainerFlowView setColumnSpacing:]
  -[NUIContainerFlowView columnSpacing]
  -[NUIContainerFlowView fittingSizeForFlowPositioningOfArrangedSubview:withProposedSize:]
  -[NUIContainerFlowView distributionForRowAtIndex:ofTotalRowCount:withArrangedSubviews:]
  -[NUIContainerFlowView populateFlowArrangementCells:]


NUIContainerBoxView : NUIContainerView <_NUIBoxArrangementContainer, _UIMultilineTextContentSizing>
 @property  long long horizontalAlignment
 @property  long long verticalAlignment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NUIContainerBoxView containerBoxViewWithArrangedSubviews:]

  // instance methods
  -[NUIContainerBoxView verticalAlignment]
  -[NUIContainerBoxView setVerticalAlignment:]
  -[NUIContainerBoxView .cxx_construct]
  -[NUIContainerBoxView dealloc]
  -[NUIContainerBoxView .cxx_destruct]
  -[NUIContainerBoxView debugDictionary]
  -[NUIContainerBoxView initWithFrame:]
  -[NUIContainerBoxView initWithArrangedSubviews:]
  -[NUIContainerBoxView setHorizontalAlignment:]
  -[NUIContainerBoxView horizontalAlignment]
  -[NUIContainerBoxView needsBaselineDebugBoundingBoxesForArrangedSubview:]
  -[NUIContainerBoxView calculateArrangedSizeFittingSize:]
  -[NUIContainerBoxView calculateViewForFirstBaselineLayout]
  -[NUIContainerBoxView calculateViewForLastBaselineLayout]
  -[NUIContainerBoxView layoutArrangedSubviewsInBounds:]
  -[NUIContainerBoxView invalidateInternalStateForInvalidation:]
  -[NUIContainerBoxView arrangedDebugDescription]
  -[NUIContainerBoxView populateBoxArrangementCells:]


NUIContentScrollView : UIScrollView
 @property  UIView *contentView
 @property  UIView *documentView
 @property  long long horizontalAlignment
 @property  long long verticalAlignment
 @property  BOOL canScrollDocumentViewHorizontally
 @property  BOOL canScrollDocumentViewVertically

  // class methods
  +[NUIContentScrollView requiresConstraintBasedLayout]

  // instance methods
  -[NUIContentScrollView _intrinsicSizeWithinSize:]
  -[NUIContentScrollView verticalAlignment]
  -[NUIContentScrollView contentView]
  -[NUIContentScrollView _baselineOffsetsAtSize:]
  -[NUIContentScrollView _intrinsicContentSizeInvalidatedForChildView:]
  -[NUIContentScrollView setVerticalAlignment:]
  -[NUIContentScrollView viewForLastBaselineLayout]
  -[NUIContentScrollView initWithContentView:]
  -[NUIContentScrollView .cxx_destruct]
  -[NUIContentScrollView viewForFirstBaselineLayout]
  -[NUIContentScrollView layoutSubviews]
  -[NUIContentScrollView sizeThatFits:]
  -[NUIContentScrollView _layoutHeightDependsOnWidth]
  -[NUIContentScrollView setContentView:]
  -[NUIContentScrollView initWithFrame:]
  -[NUIContentScrollView _axesForDerivingIntrinsicContentSizeFromLayoutSize]
  -[NUIContentScrollView documentView]
  -[NUIContentScrollView setDocumentView:]
  -[NUIContentScrollView setHorizontalAlignment:]
  -[NUIContentScrollView isLayoutSizeDependentOnPerpendicularAxis]
  -[NUIContentScrollView horizontalAlignment]
  -[NUIContentScrollView setCanScrollDocumentViewHorizontally:]
  -[NUIContentScrollView setCanScrollDocumentViewVertically:]
  -[NUIContentScrollView initWithDocumentView:]
  -[NUIContentScrollView _measureSizeForTargetSize:insets:]
  -[NUIContentScrollView _finalSizeForTargetSize:resultSize:insets:]
  -[NUIContentScrollView canScrollDocumentViewHorizontally]
  -[NUIContentScrollView canScrollDocumentViewVertically]


NUISizeCache : NSObject
  // instance methods
  -[NUISizeCache .cxx_construct]
  -[NUISizeCache invalidateCache]
  -[NUISizeCache dealloc]
  -[NUISizeCache .cxx_destruct]
  -[NUISizeCache initForAsynchronousAccess:]
  -[NUISizeCache getSize:forTargetSize:isSizeDependentOnPerpendicularAxis:]
  -[NUISizeCache insertSize:forTargetSize:]


NUIGridArrangement : NSObject <_NUIGridArrangementContainer>
 @property  <NUIArrangementContainer> *container
 @property  <NUIGridArrangementDataSource> *dataSource
 @property  BOOL baselineRelativeArrangement
 @property  long long horizontalDistribution
 @property  long long verticalDistribution
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NUIGridArrangement reloadData]
  -[NUIGridArrangement dataSource]
  -[NUIGridArrangement .cxx_construct]
  -[NUIGridArrangement dealloc]
  -[NUIGridArrangement .cxx_destruct]
  -[NUIGridArrangement container]
  -[NUIGridArrangement setBaselineRelativeArrangement:]
  -[NUIGridArrangement isBaselineRelativeArrangement]
  -[NUIGridArrangement contentLayoutSizeFittingSize:forArrangedSubview:]
  -[NUIGridArrangement layoutFrameForArrangedSubview:withProposedContentFrame:]
  -[NUIGridArrangement populateGridArrangementCells:]
  -[NUIGridArrangement populateGridArrangementDimension:withCells:axis:]
  -[NUIGridArrangement horizontalDistribution]
  -[NUIGridArrangement setHorizontalDistribution:]
  -[NUIGridArrangement verticalDistribution]
  -[NUIGridArrangement setVerticalDistribution:]
  -[NUIGridArrangement initWithContainer:dataSource:]
  -[NUIGridArrangement layoutSizeFittingSize:]
  -[NUIGridArrangement positionItemsInBounds:block:]
  -[NUIGridArrangement positionItemsInColumns:rows:inBounds:block:]
  -[NUIGridArrangement unionFrameForItemsInColumns:rows:inBounds:]
  -[NUIGridArrangement frameForColumns:rows:inBounds:]


UIView(NUIContainerView)
	// instance methods
	-[UIView(NUIContainerView) _intrinsicContentSizeInvalidatedForChildView:]
	-[UIView(NUIContainerView) minimumLayoutSize]
	-[UIView(NUIContainerView) setMaximumLayoutSize:]
	-[UIView(NUIContainerView) effectiveLayoutSizeFittingSize:]
	-[UIView(NUIContainerView) maximumLayoutSize]
	-[UIView(NUIContainerView) setMinimumLayoutSize:]
	-[UIView(NUIContainerView) _didInvalidateIntrinsicContentSize]
	-[UIView(NUIContainerView) setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:]
	-[UIView(NUIContainerView) setLayoutSize:withContentPriority:]
	-[UIView(NUIContainerView) effectiveBaselineOffsetFromBottom]
	-[UIView(NUIContainerView) effectiveFirstBaselineOffsetFromTop]
	-[UIView(NUIContainerView) isLayoutSizeDependentOnPerpendicularAxis]
	-[UIView(NUIContainerView) setNeverCacheEffectiveLayoutSize:]
	-[UIView(NUIContainerView) neverCacheEffectiveLayoutSize]
	-[UIView(NUIContainerView) setLayoutSize:withHorizontalContentPriority:verticalContentPriority:]
	-[UIView(NUIContainerView) setCustomAlignmentRectInsets:]
	-[UIView(NUIContainerView) customAlignmentRectInsets]
	-[UIView(NUIContainerView) setCustomBaselineOffsetFromBottom:]
	-[UIView(NUIContainerView) customBaselineOffsetFromBottom]
	-[UIView(NUIContainerView) setCustomFirstBaselineOffsetFromTop:]
	-[UIView(NUIContainerView) customFirstBaselineOffsetFromTop]
	-[UIView(NUIContainerView) invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview]
	-[UIView(NUIContainerView) setUntransformedFrame:]
	-[UIView(NUIContainerView) nukeContentLayoutSizeCacheFromOrbit]
	-[UIView(NUIContainerView) effectiveScreenScale]
	-[UIView(NUIContainerView) effectiveAlignmentRectInsets]
	-[UIView(NUIContainerView) effectiveBaselineOffsetFromContentBottom]
	-[UIView(NUIContainerView) effectiveFirstBaselineOffsetFromContentTop]
	-[UIView(NUIContainerView) setCurrentEffectiveLayoutSizeFittingSizeShouldNotBeCached]
	-[UIView(NUIContainerView) systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier:]
	-[UIView(NUIContainerView) systemSpacingToSuperView:edge:baselineRelative:multiplier:]
	-[UIView(NUIContainerView) contentLayoutSizeCacheDescription]
	-[UIView(NUIContainerView) debugSizeCacheDict]
	-[UIView(NUIContainerView) debugSizeCache]
	-[UIView(NUIContainerView) canUseFastLayoutSizeCalulation]
	-[UIView(NUIContainerView) calculateLayoutSizeFittingSize:]
	-[UIView(NUIContainerView) _nui_baselineViewType]
	-[UIView(NUIContainerView) _isContainerView]
	-[UIView(NUIContainerView) sizeToBestFitAndLayoutIfNeeded]
	-[UIView(NUIContainerView) testableSizeThatFits:]
	-[UIView(NUIContainerView) testableEffectiveLayoutSizeFittingSize:]

UILabel(NUIContainerView)
	// class methods
	+[UILabel(NUIContainerView) labelWithString:]
	+[UILabel(NUIContainerView) wrappingLabelWithString:]

	// instance methods
	-[UILabel(NUIContainerView) isLayoutSizeDependentOnPerpendicularAxis]
	-[UILabel(NUIContainerView) canUseFastLayoutSizeCalulation]

UIImageView(NUIContainerView)
	// class methods
	+[UIImageView(NUIContainerView) imageViewWithImage:]

	// instance methods
	-[UIImageView(NUIContainerView) _nui_baselineViewType]

UITextField(NUIContainerView)
	// instance methods
	-[UITextField(NUIContainerView) _nui_baselineViewType]

UITextView(NUIContainerView)
	// instance methods
	-[UITextView(NUIContainerView) isLayoutSizeDependentOnPerpendicularAxis]
	-[UITextView(NUIContainerView) _nui_baselineViewType]

UIControl(NUIContainerView)
	// instance methods
	-[UIControl(NUIContainerView) _nui_baselineViewType]

UIWebView(NUIContainerView)
	// instance methods
	-[UIWebView(NUIContainerView) isLayoutSizeDependentOnPerpendicularAxis]

UITableViewCell(NUIContainerView)
	// instance methods
	-[UITableViewCell(NUIContainerView) effectiveSeparatorHeight]

UIFont(NUIAccessibilitySupport)
	// class methods
	+[UIFont(NUIAccessibilitySupport) _nui_isAccessibilityEnabled]

01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransformLayer 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebView 
