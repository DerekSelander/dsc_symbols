|| __DATA.__data _CRSAppActivationDidChangeNewCategoryKey
|| __DATA.__data _CRSAppActivationDidChangeNotification
|| __DATA.__data _CRSAppActivationDidChangeOldCategoryKey
|| __DATA.__data _CRSIconLayoutServiceErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_CRSAppHistoryController
|| __DATA.__objc_data _OBJC_CLASS_$_CRSAppHistoryService
|| __DATA.__objc_data _OBJC_CLASS_$_CRSAppHistoryServiceSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CRSApplicationIcon
|| __DATA.__objc_data _OBJC_CLASS_$_CRSIconLayoutController
|| __DATA.__objc_data _OBJC_CLASS_$_CRSIconLayoutPage
|| __DATA.__objc_data _OBJC_CLASS_$_CRSIconLayoutService
|| __DATA.__objc_data _OBJC_CLASS_$_CRSIconLayoutServiceSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CRSIconLayoutState
|| __DATA.__objc_data _OBJC_CLASS_$_CRSInCallAssertionService
|| __DATA.__objc_data _OBJC_CLASS_$_CRSSessionController
|| __DATA.__objc_data _OBJC_CLASS_$_CRSSessionService
|| __DATA.__objc_data _OBJC_CLASS_$_CRSSessionSpecification
|| __DATA.__objc_data _OBJC_CLASS_$_CRSSiriPreferences
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSAppHistoryController
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSAppHistoryService
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSAppHistoryServiceSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSApplicationIcon
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSIconLayoutController
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSIconLayoutPage
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSIconLayoutService
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSIconLayoutServiceSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSIconLayoutState
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSInCallAssertionService
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSSessionController
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSSessionService
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSSessionSpecification
|| __DATA.__objc_data _OBJC_METACLASS_$_CRSSiriPreferences
|| __DATA_CONST.__const _CRSBooksIdentifier
|| __DATA_CONST.__const _CRSCalendarIdentifier
|| __DATA_CONST.__const _CRSNewsIdentifier
|| __DATA_CONST.__const _CRSNowPlayingIdentifier
|| __DATA_CONST.__const _CRSOEMIdentifier
|| __DATA_CONST.__const _kCRSIconLayoutColumnCount
|| __DATA_CONST.__const _kCRSIconLayoutDisplaysOEMIcon
|| __DATA_CONST.__const _kCRSIconLayoutHiddenIconsKey
|| __DATA_CONST.__const _kCRSIconLayoutIconOrderKey
|| __DATA_CONST.__const _kCRSIconLayoutOEMIconLabel
|| __DATA_CONST.__const _kCRSIconLayoutRowCount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRSInCallAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRSInCallAssertionSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRSInCallAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRSInCallAssertionSpecification
|| __TEXT.__const _CarPlayServicesVersionNumber
|| __TEXT.__const _CarPlayServicesVersionString
|| __TEXT.__const _kCRSIconLayoutDefaultColumnCount
|| __TEXT.__const _kCRSIconLayoutDefaultRowCount
|| __TEXT.__text _CRSLogForCategory
__ AssistantServices: _AFPreferencesDidChangeNotification
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ BaseBoard: _BSDispatchQueueAssert
__ BaseBoard: _BSDispatchQueueCreate
__ BaseBoard: _BSDispatchQueueCreateSerial
__ BaseBoard: _BSDispatchQueueCreateSerialWithQoS
__ BaseBoard: _OBJC_CLASS_$_BSDispatchQueueAttributes
__ BaseBoard: _OBJC_CLASS_$_BSObjCProtocol
__ BoardServices: _OBJC_CLASS_$_BSMutableServiceInterface
__ BoardServices: _OBJC_CLASS_$_BSServiceConnection
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionEndpoint
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionListener
__ BoardServices: _OBJC_CLASS_$_BSServiceQuality
__ CarKit: _CRHardwareSupportedFeatures
__ CarKit: _CRVehicleIdentifierForCertificateSerial
__ CarKit: _OBJC_CLASS_$_CARObserverHashTable
__ CarKit: _OBJC_CLASS_$_CRCarPlayAppDeclaration
__ CarKit: _OBJC_CLASS_$_CRCarPlayAppPolicyEvaluator
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoard: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ FrontBoard: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoard: _OBJC_CLASS_$_FBSScene
__ FrontBoard: _OBJC_CLASS_$_FBSystemShell
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
CRSIconLayoutPage : NSObject <NSSecureCoding>
 @property  NSArray *icons

  // class methods
  +[CRSIconLayoutPage supportsSecureCoding]

  // instance methods
  -[CRSIconLayoutPage initWithCoder:]
  -[CRSIconLayoutPage icons]
  -[CRSIconLayoutPage .cxx_destruct]
  -[CRSIconLayoutPage encodeWithCoder:]
  -[CRSIconLayoutPage initWithIcons:]


CRSIconLayoutState : NSObject <NSSecureCoding>
 @property  NSString *oemIconLabel
 @property  BOOL displaysOEMIcon
 @property  unsigned long rows
 @property  unsigned long columns
 @property  NSArray *pages
 @property  NSArray *hiddenIcons

  // class methods
  +[CRSIconLayoutState supportsSecureCoding]

  // instance methods
  -[CRSIconLayoutState columns]
  -[CRSIconLayoutState setColumns:]
  -[CRSIconLayoutState initWithCoder:]
  -[CRSIconLayoutState pages]
  -[CRSIconLayoutState rows]
  -[CRSIconLayoutState .cxx_destruct]
  -[CRSIconLayoutState setRows:]
  -[CRSIconLayoutState encodeWithCoder:]
  -[CRSIconLayoutState hiddenIcons]
  -[CRSIconLayoutState oemIconLabel]
  -[CRSIconLayoutState displaysOEMIcon]
  -[CRSIconLayoutState initWithPages:hiddenIcons:]
  -[CRSIconLayoutState iconOrder]
  -[CRSIconLayoutState setOemIconLabel:]
  -[CRSIconLayoutState setDisplaysOEMIcon:]


CRSSiriPreferences : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long cachedCarPlayAnnounceEnablementType
 @property  BOOL cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
 @property  CARObserverHashTable *observers
 @property  long long carPlayAnnounceEnablementType
 @property  BOOL announceNotificationsInCarPlayTemporarilyDisabled

  // instance methods
  -[CRSSiriPreferences setAnnounceNotificationsInCarPlayTemporarilyDisabled:]
  -[CRSSiriPreferences clearAnnounceNotificationsInCarPlayTemporarilyDisabled]
  -[CRSSiriPreferences .cxx_destruct]
  -[CRSSiriPreferences init]
  -[CRSSiriPreferences addObserver:]
  -[CRSSiriPreferences queue]
  -[CRSSiriPreferences observers]
  -[CRSSiriPreferences removeObserver:]
  -[CRSSiriPreferences announceNotificationsInCarPlayTemporarilyDisabled]
  -[CRSSiriPreferences _siriPreferencesDidChange]
  -[CRSSiriPreferences cachedCarPlayAnnounceEnablementType]
  -[CRSSiriPreferences cachedAnnounceNotificationsInCarPlayTemporarilyDisabled]
  -[CRSSiriPreferences _updateCarPlayAnnounceEnablementType:]
  -[CRSSiriPreferences _updateAnnounceNotificationsInCarPlayTemporarilyDisabled:]
  -[CRSSiriPreferences setCachedAnnounceNotificationsInCarPlayTemporarilyDisabled:]
  -[CRSSiriPreferences setCachedCarPlayAnnounceEnablementType:]
  -[CRSSiriPreferences carPlayAnnounceEnablementType]
  -[CRSSiriPreferences setCarPlayAnnounceEnablementType:]


CRSIconLayoutService : NSObject <BSServiceConnectionListenerDelegate, CRSIconLayoutClientToServerInterface, BSInvalidatable>
 @property  <CRSIconLayoutServiceDelegate> *delegate
 @property  BSServiceConnectionListener *listener
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSHashTable *connections
 @property  <BSInvalidatable> *temporaryWatchdogMonitoringAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSIconLayoutService connectionQueue]
  -[CRSIconLayoutService setConnectionQueue:]
  -[CRSIconLayoutService setConnections:]
  -[CRSIconLayoutService listener:didReceiveConnection:withContext:]
  -[CRSIconLayoutService .cxx_destruct]
  -[CRSIconLayoutService setListener:]
  -[CRSIconLayoutService setDelegate:]
  -[CRSIconLayoutService listener]
  -[CRSIconLayoutService connections]
  -[CRSIconLayoutService initWithDelegate:]
  -[CRSIconLayoutService delegate]
  -[CRSIconLayoutService invalidate]
  -[CRSIconLayoutService _connectionQueue_removeConnection:]
  -[CRSIconLayoutService _connectionQueue_addConnection:]
  -[CRSIconLayoutService _newInvalidRequestErrorDueToNilVehicleID]
  -[CRSIconLayoutService temporaryWatchdogMonitoringAssertion]
  -[CRSIconLayoutService setTemporaryWatchdogMonitoringAssertion:]
  -[CRSIconLayoutService fetchIconStateForVehicleID:completion:]
  -[CRSIconLayoutService setIconState:forVehicleID:]
  -[CRSIconLayoutService resetIconStateForVehicleID:]
  -[CRSIconLayoutService fetchApplicationIconInformationForBundleIdentifier:vehicleID:completion:]


CRSSessionController : NSObject <CRSSessionServerToClientInterface>
 @property  RBSProcessHandle *process
 @property  BSServiceConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSSessionController .cxx_destruct]
  -[CRSSessionController setProcess:]
  -[CRSSessionController setConnection:]
  -[CRSSessionController init]
  -[CRSSessionController connection]
  -[CRSSessionController process]
  -[CRSSessionController invalidate]


CRSIconLayoutServiceSpecification : NSObject
  // class methods
  +[CRSIconLayoutServiceSpecification serviceQuality]
  +[CRSIconLayoutServiceSpecification interface]
  +[CRSIconLayoutServiceSpecification identifier]


CRSSessionSpecification : NSObject
  // class methods
  +[CRSSessionSpecification serviceQuality]
  +[CRSSessionSpecification interface]
  +[CRSSessionSpecification identifier]


CRSIconLayoutController : NSObject <CRSIconLayoutServerToClientInterface>
 @property  BSServiceConnection *connection
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSIconLayoutController .cxx_destruct]
  -[CRSIconLayoutController callbackQueue]
  -[CRSIconLayoutController setConnection:]
  -[CRSIconLayoutController init]
  -[CRSIconLayoutController setCallbackQueue:]
  -[CRSIconLayoutController connection]
  -[CRSIconLayoutController dealloc]
  -[CRSIconLayoutController invalidate]
  -[CRSIconLayoutController fetchIconStateForVehicleID:completion:]
  -[CRSIconLayoutController resetIconStateForVehicleID:]
  -[CRSIconLayoutController fetchApplicationIconInformationForBundleIdentifier:vehicleID:completion:]
  -[CRSIconLayoutController exportIconStateForCertificateSerial:categories:completion:]
  -[CRSIconLayoutController setIconOrder:hiddenIcons:forVehicleID:]


CRSInCallAssertionService : NSObject <BSServiceConnectionListenerDelegate, CRSInCallClientToServerInterface>
 @property  CARObserverHashTable *observers
 @property  BSServiceConnectionListener *listener
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSMutableDictionary *connections
 @property  NSHashTable *activatedConnections
 @property  NSHashTable *bannersAllowedConnections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CRSInCallAssertionService sharedInstance]

  // instance methods
  -[CRSInCallAssertionService connectionQueue]
  -[CRSInCallAssertionService setConnectionQueue:]
  -[CRSInCallAssertionService setConnections:]
  -[CRSInCallAssertionService listener:didReceiveConnection:withContext:]
  -[CRSInCallAssertionService .cxx_destruct]
  -[CRSInCallAssertionService setListener:]
  -[CRSInCallAssertionService setObservers:]
  -[CRSInCallAssertionService listener]
  -[CRSInCallAssertionService connections]
  -[CRSInCallAssertionService addObserver:]
  -[CRSInCallAssertionService _init]
  -[CRSInCallAssertionService observers]
  -[CRSInCallAssertionService removeObserver:]
  -[CRSInCallAssertionService setAllowsBanners:]
  -[CRSInCallAssertionService _connectionQueue_removeConnection:]
  -[CRSInCallAssertionService _connectionQueue_addConnection:]
  -[CRSInCallAssertionService addObserver:notifyIfNeeded:]
  -[CRSInCallAssertionService activatedConnections]
  -[CRSInCallAssertionService bannersAllowedConnections]
  -[CRSInCallAssertionService presentInCallService]
  -[CRSInCallAssertionService setActivatedConnections:]
  -[CRSInCallAssertionService setBannersAllowedConnections:]


CRSInCallAssertion : NSObject <CRSInCallServerToClientInterface, BSInvalidatable>
 @property  NSString *reason
 @property  BSServiceConnection *connection
 @property  BOOL allowsBanners
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSInCallAssertion initWithReason:]
  -[CRSInCallAssertion .cxx_destruct]
  -[CRSInCallAssertion setConnection:]
  -[CRSInCallAssertion connection]
  -[CRSInCallAssertion activate]
  -[CRSInCallAssertion reason]
  -[CRSInCallAssertion setReason:]
  -[CRSInCallAssertion invalidate]
  -[CRSInCallAssertion setAllowsBanners:]
  -[CRSInCallAssertion allowsBanners]
  -[CRSInCallAssertion _handleConnectionInterrupted]
  -[CRSInCallAssertion _handleConnectionActivated]


CRSAppHistoryService : NSObject <BSServiceConnectionListenerDelegate, CRSAppHistoryClientToServerInterface, BSInvalidatable>
 @property  <CRSAppHistoryServiceDelegate> *delegate
 @property  BSServiceConnectionListener *listener
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSHashTable *connections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSAppHistoryService connectionQueue]
  -[CRSAppHistoryService setConnectionQueue:]
  -[CRSAppHistoryService setConnections:]
  -[CRSAppHistoryService listener:didReceiveConnection:withContext:]
  -[CRSAppHistoryService .cxx_destruct]
  -[CRSAppHistoryService setListener:]
  -[CRSAppHistoryService setDelegate:]
  -[CRSAppHistoryService listener]
  -[CRSAppHistoryService connections]
  -[CRSAppHistoryService initWithDelegate:]
  -[CRSAppHistoryService delegate]
  -[CRSAppHistoryService invalidate]
  -[CRSAppHistoryService fetchSessionFeatureKeysWithCompletion:]
  -[CRSAppHistoryService _connectionQueue_removeConnection:]
  -[CRSAppHistoryService _connectionQueue_addConnection:]
  -[CRSAppHistoryService setSessionFeatureKeys:completion:]
  -[CRSAppHistoryService fetchUIContextStatesWithCompletion:]
  -[CRSAppHistoryService fetchSessionUIContextStatesWithCompletion:]
  -[CRSAppHistoryService fetchSessionEchoContextStatesWithCompletion:]


CRSAppHistoryController : NSObject <CRSAppHistoryServerToClientInterface, BSInvalidatable>
 @property  BSServiceConnection *connection
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CRSAppHistoryController availableFeatureKeys]

  // instance methods
  -[CRSAppHistoryController .cxx_destruct]
  -[CRSAppHistoryController callbackQueue]
  -[CRSAppHistoryController setConnection:]
  -[CRSAppHistoryController init]
  -[CRSAppHistoryController setCallbackQueue:]
  -[CRSAppHistoryController connection]
  -[CRSAppHistoryController invalidate]
  -[CRSAppHistoryController fetchUIContextsWithCompletion:]
  -[CRSAppHistoryController fetchSessionFeatureKeysWithCompletion:]
  -[CRSAppHistoryController setSessionFeatureKeys:completion:]
  -[CRSAppHistoryController fetchSessionUIContextsWithCompletion:]
  -[CRSAppHistoryController fetchSessionEchoContextsWithCompletion:]


CRSSessionService : NSObject <CRSSessionClientToServerInterface, BSServiceConnectionListenerDelegate>
 @property  BSServiceConnectionListener *listener
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSHashTable *connections
 @property  NSObject<OS_os_transaction> *idleExitTransaction
 @property  <BSInvalidatable> *watchdogMonitoringAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSSessionService connectionQueue]
  -[CRSSessionService setConnectionQueue:]
  -[CRSSessionService setConnections:]
  -[CRSSessionService listener:didReceiveConnection:withContext:]
  -[CRSSessionService .cxx_destruct]
  -[CRSSessionService setListener:]
  -[CRSSessionService init]
  -[CRSSessionService listener]
  -[CRSSessionService connections]
  -[CRSSessionService _connectionQueue_removeConnection:]
  -[CRSSessionService _connectionQueue_addConnection:]
  -[CRSSessionService idleExitTransaction]
  -[CRSSessionService setIdleExitTransaction:]
  -[CRSSessionService watchdogMonitoringAssertion]
  -[CRSSessionService setWatchdogMonitoringAssertion:]


CRSInCallAssertionSpecification : NSObject
  // class methods
  +[CRSInCallAssertionSpecification serviceQuality]
  +[CRSInCallAssertionSpecification interface]
  +[CRSInCallAssertionSpecification identifier]


CRSApplicationIcon : NSObject <NSSecureCoding>
 @property  NSData *iconImageData
 @property  double iconImageScale
 @property  NSString *localizedDisplayName
 @property  NSString *bundleIdentifier

  // class methods
  +[CRSApplicationIcon supportsSecureCoding]

  // instance methods
  -[CRSApplicationIcon initWithCoder:]
  -[CRSApplicationIcon bundleIdentifier]
  -[CRSApplicationIcon localizedDisplayName]
  -[CRSApplicationIcon .cxx_destruct]
  -[CRSApplicationIcon iconImageData]
  -[CRSApplicationIcon iconImageScale]
  -[CRSApplicationIcon setIconImageData:]
  -[CRSApplicationIcon setIconImageScale:]
  -[CRSApplicationIcon setLocalizedDisplayName:]
  -[CRSApplicationIcon initWithBundleIdentifier:]
  -[CRSApplicationIcon encodeWithCoder:]


CRSAppHistoryServiceSpecification : NSObject
  // class methods
  +[CRSAppHistoryServiceSpecification serviceQuality]
  +[CRSAppHistoryServiceSpecification interface]
  +[CRSAppHistoryServiceSpecification identifier]


FBSScene(CRSAdditions)
	// instance methods
	-[FBSScene(CRSAdditions) crs_applicationBundleIdentifier]

FBSDisplayLayoutMonitorConfiguration(CarPlayServices)
	// class methods
	+[FBSDisplayLayoutMonitorConfiguration(CarPlayServices) configurationForCarDisplayMonitor]
	+[FBSDisplayLayoutMonitorConfiguration(CarPlayServices) crs_endpointForInstance:]
	+[FBSDisplayLayoutMonitorConfiguration(CarPlayServices) crs_endpointForCarDisplayMonitor]
	+[FBSDisplayLayoutMonitorConfiguration(CarPlayServices) crs_endpointForCarInstrumentsDisplayMonitor]
	+[FBSDisplayLayoutMonitorConfiguration(CarPlayServices) configurationForCarInstrumentsDisplayMonitor]

FBSOpenApplicationService(DashBoard)
	// class methods
	+[FBSOpenApplicationService(DashBoard) dashboardEndpoint]
	+[FBSOpenApplicationService(DashBoard) dashboardService]

01 00 0100 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 0200 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDispatchQueueAttributes 
01 00 0300 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSMutableServiceInterface 
01 00 0200 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSObjCProtocol 
01 00 0300 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnection 
01 00 0300 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionEndpoint 
01 00 0300 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionListener 
01 00 0300 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceQuality 
01 00 0400 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARObserverHashTable 
01 00 0400 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayAppDeclaration 
01 00 0400 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRCarPlayAppPolicyEvaluator 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutMonitor 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSDisplayLayoutMonitorConfiguration 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSOpenApplicationService 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSScene 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard: FBSystemShell 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0b00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
