|| __DATA.__objc_data _OBJC_CLASS_$_SFAddPKPassesViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SFAppLinkBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFApplicationManifestFetcher
|| __DATA.__objc_data _OBJC_CLASS_$_SFAutomaticTabClosingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_SFBadgeContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_SFBannerModel
|| __DATA.__objc_data _OBJC_CLASS_$_SFBannerTheme
|| __DATA.__objc_data _OBJC_CLASS_$_SFBasicDialog
|| __DATA.__objc_data _OBJC_CLASS_$_SFBlockBasedCAAnimationDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_SFBookmarkTouchIconRequest
|| __DATA.__objc_data _OBJC_CLASS_$_SFBookmarksLockCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SFBrowserApplication
|| __DATA.__objc_data _OBJC_CLASS_$_SFBrowserController
|| __DATA.__objc_data _OBJC_CLASS_$_SFBrowserMenuProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SFCapsuleNavigationBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$_SFClipLink
|| __DATA.__objc_data _OBJC_CLASS_$_SFClipLinkBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFCloseButton
|| __DATA.__objc_data _OBJC_CLASS_$_SFCompletionList
|| __DATA.__objc_data _OBJC_CLASS_$_SFDefaultStartPageVisualStyleProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SFDeviceUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_SFDialog
|| __DATA.__objc_data _OBJC_CLASS_$_SFDialogController
|| __DATA.__objc_data _OBJC_CLASS_$_SFDialogView
|| __DATA.__objc_data _OBJC_CLASS_$_SFFeatureManager
|| __DATA.__objc_data _OBJC_CLASS_$_SFGradientView
|| __DATA.__objc_data _OBJC_CLASS_$_SFHighlightBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFHighlightBannerTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SFIconGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_SFLinkBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFManageWebExtensionsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SFNavigationBarItem
|| __DATA.__objc_data _OBJC_CLASS_$_SFNavigationBarToggleButton
|| __DATA.__objc_data _OBJC_CLASS_$_SFOrderedContainerView
|| __DATA.__objc_data _OBJC_CLASS_$_SFOverlayProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SFPinnableBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFPopoverSizingTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SFProgressView
|| __DATA.__objc_data _OBJC_CLASS_$_SFScrollingPanGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SFSectionCustomizationItem
|| __DATA.__objc_data _OBJC_CLASS_$_SFSectionModel
|| __DATA.__objc_data _OBJC_CLASS_$_SFStartPageViewController
|| __DATA.__objc_data _OBJC_CLASS_$_SFStepperView
|| __DATA.__objc_data _OBJC_CLASS_$_SFStoreBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFStoreBannerTracker
|| __DATA.__objc_data _OBJC_CLASS_$_SFSystemAlert
|| __DATA.__objc_data _OBJC_CLASS_$_SFTabHoverPreviewController
|| __DATA.__objc_data _OBJC_CLASS_$_SFThemeColorBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$_SFThemeColorEffectView
|| __DATA.__objc_data _OBJC_CLASS_$_SFTouchDownGestureRecognizer
|| __DATA.__objc_data _OBJC_CLASS_$_SFTransitionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_SFURLLabel
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedBarContentArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedBarItemArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedTabBar
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItem
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItemAccessoryButtonArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItemArrangement
|| __DATA.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItemTitleContainerViewTheme
|| __DATA.__objc_data _OBJC_CLASS_$_SFVibrantSeparatorView
|| __DATA.__objc_data _OBJC_CLASS_$_SFVoiceSearchManager
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebExtension
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebExtensionButton
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebExtensionButtonConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebExtensionPermissionBanner
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebExtensionsController
|| __DATA.__objc_data _OBJC_CLASS_$_SFWebFormAccessoryViewWrapper
|| __DATA.__objc_data _OBJC_CLASS_$__SFBarTheme
|| __DATA.__objc_data _OBJC_CLASS_$__SFBookmarkFolderTouchIconProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFFaviconProvider
|| __DATA.__objc_data _OBJC_CLASS_$__SFLinkPresentationIconCache
|| __DATA.__objc_data _OBJC_CLASS_$__SFSavedAccountTouchIconCache
|| __DATA.__objc_data _OBJC_CLASS_$__SFSavedAccountTouchIconRequest
|| __DATA.__objc_data _OBJC_CLASS_$__SFSiteIcon
|| __DATA.__objc_data _OBJC_CLASS_$__SFSiteMetadataManager
|| __DATA.__objc_data _OBJC_CLASS_$__SFTouchIconCache
|| __DATA.__objc_data _OBJC_CLASS_$__SFTouchIconFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAddPKPassesViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAppLinkBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFApplicationManifestFetcher
|| __DATA.__objc_data _OBJC_METACLASS_$_SFAutomaticTabClosingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBadgeContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBannerModel
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBannerTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBasicDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBlockBasedCAAnimationDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBookmarkTouchIconRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBookmarksLockCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBrowserApplication
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBrowserController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFBrowserMenuProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SFCapsuleNavigationBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SFClipLink
|| __DATA.__objc_data _OBJC_METACLASS_$_SFClipLinkBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFCloseButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SFCompletionList
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDefaultStartPageVisualStyleProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDeviceUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDialog
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDialogController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFDialogView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFFeatureManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SFGradientView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFHighlightBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFHighlightBannerTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SFIconGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_SFLinkBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFManageWebExtensionsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFNavigationBarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SFNavigationBarToggleButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SFOrderedContainerView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFOverlayProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SFPinnableBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFPopoverSizingTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFProgressView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFScrollingPanGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSectionCustomizationItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSectionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_SFStartPageViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFStepperView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFStoreBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFStoreBannerTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_SFSystemAlert
|| __DATA.__objc_data _OBJC_METACLASS_$_SFTabHoverPreviewController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFThemeColorBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SFThemeColorEffectView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFTouchDownGestureRecognizer
|| __DATA.__objc_data _OBJC_METACLASS_$_SFTransitionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_SFURLLabel
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedBarContentArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedBarItemArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBar
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItem
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItemAccessoryButtonArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItemArrangement
|| __DATA.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItemTitleContainerViewTheme
|| __DATA.__objc_data _OBJC_METACLASS_$_SFVibrantSeparatorView
|| __DATA.__objc_data _OBJC_METACLASS_$_SFVoiceSearchManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebExtensionButton
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebExtensionButtonConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebExtensionPermissionBanner
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebExtensionsController
|| __DATA.__objc_data _OBJC_METACLASS_$_SFWebFormAccessoryViewWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBarTheme
|| __DATA.__objc_data _OBJC_METACLASS_$__SFBookmarkFolderTouchIconProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFFaviconProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__SFLinkPresentationIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSavedAccountTouchIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSavedAccountTouchIconRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSiteIcon
|| __DATA.__objc_data _OBJC_METACLASS_$__SFSiteMetadataManager
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTouchIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$__SFTouchIconFetchOperation
|| __DATA.__objc_ivar _OBJC_IVAR_$_SFWebExtensionsController._dialogController
|| __DATA_CONST.__const _SFAutoMinimizeLoweredBarKey
|| __DATA_CONST.__const _SFBasicDialogActionXGlyph
|| __DATA_CONST.__const _SFBasicDialogResponsePasswordKey
|| __DATA_CONST.__const _SFBasicDialogResponseSelectedActionIndex
|| __DATA_CONST.__const _SFBasicDialogResponseTextKey
|| __DATA_CONST.__const _SFDidPromptSearchEngineAlertUDIDKey
|| __DATA_CONST.__const _SFDisableBackgroundColorInTabBarKey
|| __DATA_CONST.__const _SFEnableCapsuleInCompactPadKey
|| __DATA_CONST.__const _SFEnableFormatMenuInUnifiedBarKey
|| __DATA_CONST.__const _SFEnableInterstellar
|| __DATA_CONST.__const _SFEnableStandaloneTabBarKey
|| __DATA_CONST.__const _SFEnableTabGroupSuggestions
|| __DATA_CONST.__const _SFLoweredBarAdditionalBottomObscuredInsetKey
|| __DATA_CONST.__const _SFLoweredBarVerticalMinimizingSwipeThresholdKey
|| __DATA_CONST.__const _SFManageWebExtensionsViewDidDismissNotification
|| __DATA_CONST.__const _SFPreferredCapsuleLayoutStyleKey
|| __DATA_CONST.__const _SFStartPageAttributionViewBackdropGroupName
|| __DATA_CONST.__const _SFStartPageCachedNumberOfTrackersKey
|| __DATA_CONST.__const _SFStartPageCellBackdropGroupName
|| __DATA_CONST.__const _SFStartPageLastCloudDeviceKey
|| __DATA_CONST.__const _SFUnifiedBarHideFaviconInActiveTabKey
|| __DATA_CONST.__const _SFUnifiedBarMaximumActiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMaximumNarrowActiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumActiveTabWidthRatioKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumLandscapeActiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumLandscapeInactiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumNarrowActiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumNarrowInactiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumPortraitActiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarMinimumPortraitInactiveTabWidthKey
|| __DATA_CONST.__const _SFUnifiedBarShowRectangularTabsInSeparateBarKey
|| __DATA_CONST.__const _SFVoiceSearchAvailabilityDidChangeNotification
|| __DATA_CONST.__const _SFVoiceSearchKfedKey
|| __DATA_CONST.__const _SFVoiceSearchLiveCompletionListKey
|| __DATA_CONST.__const _SFWebExtensionAllowPersistentBackgroundPagesKey
|| __DATA_CONST.__const _SFWebExtensionIdentifierToBaseURIMapBundleKey
|| __DATA_CONST.__const _SFWebExtensionIdentifierToWebExtensionDataMapBundleKey
|| __DATA_CONST.__const _SFWebExtensionsEnabledSettingsKey
|| __DATA_CONST.__const _SFWebExtensionsSettingsIncludesContentBlockersSettingsKey
|| __DATA_CONST.__const __SFAllowMediaCaptureOnInsecureSites
|| __DATA_CONST.__const __SFApplePayDisclosureAllowedKey
|| __DATA_CONST.__const __SFAudioPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFAutomaticallyArchiveReadingListItemsEnabledKey
|| __DATA_CONST.__const __SFAutoplayPlayingPauseQuirkEnabledKey
|| __DATA_CONST.__const __SFCloseTabsAutomaticallyDefaultsKey
|| __DATA_CONST.__const __SFCloudTabsDeviceUUIDForRestorationDefaultsKey
|| __DATA_CONST.__const __SFDebugContentDispositionHeaderStartsDownloadsKey
|| __DATA_CONST.__const __SFDebugDownloadAttributeForcesDownloadsKey
|| __DATA_CONST.__const __SFDebugEnableDownloadsInSubframesKey
|| __DATA_CONST.__const __SFDebugPromptForDownloadsOnNavigationResponseKey
|| __DATA_CONST.__const __SFDemoSiriSuggestionsKey
|| __DATA_CONST.__const __SFDisableICECandidateFiltering
|| __DATA_CONST.__const __SFDownloadExpirationIntervalDefaultsKey
|| __DATA_CONST.__const __SFEnableDownloadImport
|| __DATA_CONST.__const __SFEnableEnumeratingAllNetworkInterfaces
|| __DATA_CONST.__const __SFEnableMediaCapture
|| __DATA_CONST.__const __SFEnableMockCaptureDevices
|| __DATA_CONST.__const __SFEnablePasswordManagerDemoModeKey
|| __DATA_CONST.__const __SFHasCompletedReadingListArchivePreferenceMigrationKey
|| __DATA_CONST.__const __SFIconsInTabsEnabledKey
|| __DATA_CONST.__const __SFInlineMediaPlaybackRequiresPlaysInlineAttributeKey
|| __DATA_CONST.__const __SFInternalSettingsDidChangeNotification
|| __DATA_CONST.__const __SFInvisibleAutoplayNotPermittedKey
|| __DATA_CONST.__const __SFJavaScriptCanOpenWindowsAutomaticallyDefaultsKey
|| __DATA_CONST.__const __SFJavaScriptEnabledDefaultsKey
|| __DATA_CONST.__const __SFLastUnviewedDownloadDateKey
|| __DATA_CONST.__const __SFLegacyEncryptedMediaAPIEnabledKey
|| __DATA_CONST.__const __SFMainContentUserGestureOverrideEnabledKey
|| __DATA_CONST.__const __SFMediaPlaybackAllowsInlineKey
|| __DATA_CONST.__const __SFMediaPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFMediaSourceEnabledKey
|| __DATA_CONST.__const __SFNanoBlockAllCookiesEnabledKey
|| __DATA_CONST.__const __SFOfflineReadingListArchiveUsedDefaultsKey
|| __DATA_CONST.__const __SFOpenLinksInBackgroundDefaultsKey
|| __DATA_CONST.__const __SFPerDocumentAutoplayBehaviorQuirkEnabledKey
|| __DATA_CONST.__const __SFPrivateBrowsingDefaultsKey
|| __DATA_CONST.__const __SFReaderConfigurationDefaultsKey
|| __DATA_CONST.__const __SFReadingListFetcherScheduleBackgroundTasksImmediatelyKey
|| __DATA_CONST.__const __SFSafariHighLevelDomainsAndPortsToUseOnlyAvailableIdentityWithoutPromptingSettingsKey
|| __DATA_CONST.__const __SFSafariPerSitePreferenceDidChangeNotification
|| __DATA_CONST.__const __SFShouldCaptureAudioInUIProcessKey
|| __DATA_CONST.__const __SFUserAgentDefaultsKey
|| __DATA_CONST.__const __SFVideoPlaybackRequiresUserActionKey
|| __DATA_CONST.__const __SFWarnAboutFraudulentWebsitesDefaultsKey
|| __DATA_CONST.__const __SFWebKitShowLinkPreviewsDefaultsKey
|| __DATA_CONST.__const __SFWebKitSiteSpecificHacksEnabledKey
|| __DATA_CONST.__const __SFWebKitWebAuthenticationDefaultsKey
|| __DATA_CONST.__const _kLastSelectedBookmarksFolderDefaultsKey
|| __DATA_CONST.__const _kSafariLastSelectedBookmarksFolderFavoritesFolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCapsuleCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCapsuleNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCapsuleURLField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFCapsuleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFClickableButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFMoreMenuButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFStartPageCustomizationViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedBarButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedBarItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedBarItemView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItemTitleContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SFUnifiedTabBarItemView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFCompressedBarButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFDimmingButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFFluidProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__SFSiteIconView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCapsuleCollectionView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCapsuleNavigationBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCapsuleURLField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFCapsuleView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFClickableButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFMoreMenuButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFStartPageCustomizationViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedBarButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedBarItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedBarItemView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItemTitleContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SFUnifiedTabBarItemView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFCompressedBarButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFDimmingButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFFluidProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__SFSiteIconView
|| __TEXT.__const _SFBottomCapsuleWithToolbarPadding
|| __TEXT.__const _SFCapsuleBackgroundCornerRadius
|| __TEXT.__const _SFCapsuleBottomEdgeMarginForEdgeToEdgeScreen
|| __TEXT.__const _SFCapsuleDefaultEdgeMargin
|| __TEXT.__const _SFCapsuleFocusedPadding
|| __TEXT.__const _SFCapsuleHeight
|| __TEXT.__const _SFCapsuleMinimizedContentInset
|| __TEXT.__const _SFCapsuleToolbarHeight
|| __TEXT.__const _SFCapsuleWithToolbarBackgroundCornerRadius
|| __TEXT.__const _SFCapsuleWithToolbarHeight
|| __TEXT.__const _SFControlEventClickDown
|| __TEXT.__const _SFMinimumThemeColorOverlayOpacity
|| __TEXT.__const _SFScrollIndicatorInsetsZero
|| __TEXT.__const _SFStandardStatusBarHeight
|| __TEXT.__const _SFStartPageDefaultTopPadding
|| __TEXT.__const _SFStartPageTrackerCountForPrivateBrowsing
|| __TEXT.__const _SFTopCapsuleBackgroundCornerRadius
|| __TEXT.__const _SFTopCapsuleHeight
|| __TEXT.__const _SFUnifiedTabBarItemTitleContainerViewDimmedTextAlpha
|| __TEXT.__const _SFUnifiedTabBarItemTitleContainerViewLabelFadeOutDistance
|| __TEXT.__const _SFWebExtensionButtonIconSize
|| __TEXT.__const __SFBarItemNull
|| __TEXT.__text _SFAccessibilityIdentifierForUnifiedTabBarItemAccessoryButtonType
|| __TEXT.__text _SFAccessibilityTitleForBarItem
|| __TEXT.__text _SFAutomaticTabClosingIntervalAnalyticsTitle
|| __TEXT.__text _SFAutomaticTabClosingIntervalPromptTitle
|| __TEXT.__text _SFAutomaticTabClosingIntervalSettingsTitle
|| __TEXT.__text _SFAutomaticTabClosingIntervalTimeInterval
|| __TEXT.__text _SFBarBackgroundAlphaForSquishTransformFactor
|| __TEXT.__text _SFBarContentAlphaForSquishTransformFactor
|| __TEXT.__text _SFCapsuleBottomBarPaddingForTopLayoutStyle
|| __TEXT.__text _SFCapsuleSideMarginForViewWithBoundsSafeAreaInsets
|| __TEXT.__text _SFCapsuleTopBarPaddingForTopLayoutStyleWithStatusBar
|| __TEXT.__text _SFChromeVisibilityForScrollDistance
|| __TEXT.__text _SFConvertInsetsFromCoordinateSpaceToSpace
|| __TEXT.__text _SFCreateAppSuggestionBannerFromMetaTagContent
|| __TEXT.__text _SFDataOwnerForWebViewInteraction
|| __TEXT.__text _SFDefaultWebExtensionsPreferenceValues
|| __TEXT.__text _SFDeferrableUpdateViewCanUpdateContents
|| __TEXT.__text _SFDeferrableUpdateViewDidMoveToWindow
|| __TEXT.__text _SFDeferrableUpdateViewShouldAttemptToUpdateContents
|| __TEXT.__text _SFDeviceIsAlwaysReachable
|| __TEXT.__text _SFFadeOutImage
|| __TEXT.__text _SFFloorRectToPixels
|| __TEXT.__text _SFFocusGroupIdentifierForOwner
|| __TEXT.__text _SFGetAMSLookupItem
|| __TEXT.__text _SFInterpolateColor
|| __TEXT.__text _SFMobileDeviceSystemImageNameForOrientation
|| __TEXT.__text _SFNSStringFromScrollIndicatorInsets
|| __TEXT.__text _SFRubberBandOffsetForOffset
|| __TEXT.__text _SFShouldHandleSelectionForPresses
|| __TEXT.__text _SFSupportsPegasus
|| __TEXT.__text _SFSystemImageNameForBarItem
|| __TEXT.__text _SFSystemImageNameForMediaStateIcon
|| __TEXT.__text _SFSystemImageNameForTogglingMediaStateIcon
|| __TEXT.__text _SFTintImage
|| __TEXT.__text _SFTitleForTogglingMediaStateIcon
|| __TEXT.__text _SFUnifiedTabBarItemAccessoryButtonTypeEnumerateCases
|| __TEXT.__text _SFValueFromKeyValueString
|| __TEXT.__text __SFAccessibilityIdentifierForBarItem
|| __TEXT.__text __SFApplicationNameForDesktopUserAgent
|| __TEXT.__text __SFApplicationNameForUserAgent
|| __TEXT.__text __SFBackdropEffectForBarTintStyle
|| __TEXT.__text __SFBackdropGroupNameForOwner
|| __TEXT.__text __SFBarItemEnumerateCases
|| __TEXT.__text __SFCGPointsEqualWithEpsilon
|| __TEXT.__text __SFCGRectGrowToSize
|| __TEXT.__text __SFCGRectOfSizeAlignedWithPoint
|| __TEXT.__text __SFCGRectOfSizeAlignedWithinRect
|| __TEXT.__text __SFCeilingFloatToPixels
|| __TEXT.__text __SFClamp
|| __TEXT.__text __SFClampPercent
|| __TEXT.__text __SFContentBlockerStateURL
|| __TEXT.__text __SFContentBlockerStoreURL
|| __TEXT.__text __SFContinuousCornerRadiusMatchingRadiusWithInset
|| __TEXT.__text __SFCustomUserAgentStringIfNeeded
|| __TEXT.__text __SFDarkTintStyleForStyle
|| __TEXT.__text __SFDefaultLayoutMargins
|| __TEXT.__text __SFDeviceAlertStyle
|| __TEXT.__text __SFDeviceHasHomeButton
|| __TEXT.__text __SFDeviceHasRectangularScreen
|| __TEXT.__text __SFDeviceIsPad
|| __TEXT.__text __SFDeviceStatusBarHasNonTransparentBackground
|| __TEXT.__text __SFDeviceSupportsDesktopSitesByDefault
|| __TEXT.__text __SFDeviceSupportsHighQualityGraphics
|| __TEXT.__text __SFDeviceSupportsWebKitFullscreenAPI
|| __TEXT.__text __SFEqualWithEpsilon
|| __TEXT.__text __SFFlipRectInCoordinateSpace
|| __TEXT.__text __SFFloorFloatToPixels
|| __TEXT.__text __SFFloorSize
|| __TEXT.__text __SFGreaterThanOrEqualWithEpsilon
|| __TEXT.__text __SFIPhoneSafariUserAgentString
|| __TEXT.__text __SFImageForMediaStateIcon
|| __TEXT.__text __SFInsetIsInvalid
|| __TEXT.__text __SFInterpolate
|| __TEXT.__text __SFIsDarkTintStyle
|| __TEXT.__text __SFIsPrivateTintStyle
|| __TEXT.__text __SFLightTintStyleForStyle
|| __TEXT.__text __SFMacSafariUserAgentString
|| __TEXT.__text __SFMediaStateIconIsMuted
|| __TEXT.__text __SFMediaStateIconMutedVariant
|| __TEXT.__text __SFMobileDeviceIconForOrientation
|| __TEXT.__text __SFNewTabGroupIconForOrientation
|| __TEXT.__text __SFOnePixel
|| __TEXT.__text __SFPointIsInvalid
|| __TEXT.__text __SFRectIsInvalid
|| __TEXT.__text __SFResizableImageWithContinuousCurveCorners
|| __TEXT.__text __SFRoundEdgeInsetsToPixels
|| __TEXT.__text __SFRoundFloatToPixels
|| __TEXT.__text __SFRoundPointToPixels
|| __TEXT.__text __SFRoundRectToPixels
|| __TEXT.__text __SFRoundSizeToPixels
|| __TEXT.__text __SFSFAppContainerURL
|| __TEXT.__text __SFSafariCloudTabsMetadataPath
|| __TEXT.__text __SFSafariContainerPath
|| __TEXT.__text __SFSafariContainerURL
|| __TEXT.__text __SFSafariIconImageCacheDirectoryPath
|| __TEXT.__text __SFSafariIconLinkImage
|| __TEXT.__text __SFSafariNonContaineredSettingsDirectoryPath
|| __TEXT.__text __SFSafariPreferencesDomain
|| __TEXT.__text __SFSafariSavedStateDirectoryPath
|| __TEXT.__text __SFSafariTemporaryDirectoryPath
|| __TEXT.__text __SFSafariTestContentDirectoryPath
|| __TEXT.__text __SFScreenNativeScale
|| __TEXT.__text __SFScreenScale
|| __TEXT.__text __SFSizeClassForWidth
|| __TEXT.__text __SFStringForBarItem
|| __TEXT.__text __SFStringForTintStyle
|| __TEXT.__text __SFToolbarContentSizeCategoryForPreferredCategory
|| __TEXT.__text __SFUninterpolate
|| __TEXT.__text __SFWebExtensionContentBlockerStoreURL
|| __TEXT.__text __SFWidthIsCompactSizeClass
__ AppSupport: _CPSharedResourcesDirectory
__ AppleMediaServices: _AMSLookupKeyProfileLockup
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLIsExcludedFromBackupKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGGradientCreateWithColorComponents
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ CoreServices: _OBJC_CLASS_$_LSResourceProxy
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineCreateWithString
__ CoreText: _CTLineGetOffsetForStringIndex
__ CoreText: _CTLineIsRightToLeft
__ Foundation: _NSClassFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLProtectionSpaceHTTPS
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSByteCountFormatter
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPCookieStorage
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSOrderedCollectionChange
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ IconServices: _OBJC_CLASS_$_IFImage
__ IconServices: _OBJC_CLASS_$_ISIcon
__ IconServices: _OBJC_CLASS_$_ISImageDescriptor
__ LinkPresentation: _OBJC_CLASS_$_LPLinkMetadata
__ LinkPresentation: _OBJC_CLASS_$_LPLinkView
__ LocalAuthentication: _OBJC_CLASS_$_LAContext
__ ManagedConfiguration: _MCFeatureSafariAcceptCookies
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MaterialKit: _OBJC_CLASS_$_MTShadowView
__ PencilKit: _OBJC_CLASS_$_PKScribbleInteraction
__ QuartzCore: _CAColorMatrixConcat
__ QuartzCore: _CAColorMatrixMakeBrightness
__ QuartzCore: _CAColorMatrixMakeColorSourceOver
__ QuartzCore: _CAFrameRateRangeDefault
__ QuartzCore: _CAFrameRateRangeMake
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _CATransform3DRotate
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CAShapeLayer
__ QuartzCore: _kCACornerCurveCircular
__ QuartzCore: _kCACornerCurveContinuous
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAFilterColorSaturate
__ QuartzCore: _kCAFilterDarkenBlendMode
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAFilterExclusionBlendMode
__ QuartzCore: _kCAFilterInputColorMatrix
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCAFilterVibrantColorMatrix
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCAMediaTimingFunctionDefault
__ QuartzCore: _kCAMediaTimingFunctionEaseIn
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SafariSharedUI: _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSCertificateWarningPageContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSCompletionQuery
__ SafariSharedUI: _OBJC_CLASS_$_WBSDispatchSourceTimer
__ SafariSharedUI: _OBJC_CLASS_$_WBSExtensionsController
__ SafariSharedUI: _OBJC_CLASS_$_WBSFaviconProvider
__ SafariSharedUI: _OBJC_CLASS_$_WBSFeatureAvailability
__ SafariSharedUI: _OBJC_CLASS_$_WBSLeadImageCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSPrivacyProxyAvailabilityManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSResultRanker
__ SafariSharedUI: _OBJC_CLASS_$_WBSSafariBookmarksSyncAgentProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariSharedUI: _OBJC_CLASS_$_WBSSearchParameters
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiteIconKeyColorExtractor
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiteMetadataImageCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSSiteMetadataManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSStartPageBackgroundImagesDataSource
__ SafariSharedUI: _OBJC_CLASS_$_WBSStartPageBackgroundManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialog
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogCancellationContext
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogCancellationExemption
__ SafariSharedUI: _OBJC_CLASS_$_WBSTabDialogManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSTemplateIconMonogramConfiguration
__ SafariSharedUI: _OBJC_CLASS_$_WBSTemplateIconMonogramGenerator
__ SafariSharedUI: _OBJC_CLASS_$_WBSThemeColorUtilities
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconCache
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconFetchOperation
__ SafariSharedUI: _OBJC_CLASS_$_WBSTouchIconRequest
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionMatch
__ SafariSharedUI: _OBJC_CLASS_$_WBSURLCompletionSessionProxy
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionData
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionMatchPattern
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionNewTabOverridePreferencesManager
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionPendingWebsiteRequest
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionURLSchemeHandler
__ SafariSharedUI: _OBJC_CLASS_$_WBSWebExtensionsController
__ SafariSharedUI: _OBJC_IVAR_$_WBSExtensionsController._delegate
__ SafariSharedUI: _OBJC_IVAR_$_WBSExtensionsController._enabledExtensions
__ SafariSharedUI: _OBJC_IVAR_$_WBSExtensionsController._extensionIdentifierToStateMap
__ SafariSharedUI: _OBJC_IVAR_$_WBSWebExtensionData._backgroundWebView
__ SafariSharedUI: _OBJC_IVAR_$_WBSWebExtensionData._extension
__ SafariSharedUI: _OBJC_IVAR_$_WBSWebExtensionData._manifestErrors
__ SafariSharedUI: _OBJC_IVAR_$_WBSWebExtensionData._websiteRequestsPendingApproval
__ SafariSharedUI: _OBJC_IVAR_$_WBSWebExtensionsController._extensionIdentifierToData
__ SafariSharedUI: _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProvider
__ SafariSharedUI: _OBJC_METACLASS_$_WBSFaviconProvider
__ SafariSharedUI: _OBJC_METACLASS_$_WBSSiteMetadataManager
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconCache
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconFetchOperation
__ SafariSharedUI: _OBJC_METACLASS_$_WBSTouchIconRequest
__ SafariSharedUI: _OBJC_METACLASS_$_WBSURLCompletionMatch
__ SafariSharedUI: _OBJC_METACLASS_$_WBSWebExtensionData
__ SafariSharedUI: _OBJC_METACLASS_$_WBSWebExtensionsController
__ SafariSharedUI: _WBSChromeExtensionURLScheme
__ SafariSharedUI: _WBSDebugExtensionGrantAllRequestedPermissionsKey
__ SafariSharedUI: _WBSDebugShowAPINameInExtensionAccessRequestsPreferenceKey
__ SafariSharedUI: _WBSDebugStubUnsupportedWebExtensionAPIsKey
__ SafariSharedUI: _WBSEnableCloudSettingsSyncPreferenceKey
__ SafariSharedUI: _WBSExtensionEnabledStateDidChangeNotification
__ SafariSharedUI: _WBSExtensionWasAddedNotification
__ SafariSharedUI: _WBSExtensionWasRemovedNotification
__ SafariSharedUI: _WBSHasExtensionsInstalledKey
__ SafariSharedUI: _WBSHistoryItemsKey
__ SafariSharedUI: _WBSHistoryItemsWereRemovedNotification
__ SafariSharedUI: _WBSIsEqual
__ SafariSharedUI: _WBSLastTimeManageExtensionSheetWasViewedPreferenceKey
__ SafariSharedUI: _WBSMakeAccessibilityIdentifier
__ SafariSharedUI: _WBSPrivacyProxyChangeNotification
__ SafariSharedUI: _WBSSafariExtensionStateEnabledKey
__ SafariSharedUI: _WBSSafariSettingsDidDismissStartPageCustomizationToggleNotificationName
__ SafariSharedUI: _WBSShouldApplyBackingForDarkBackdropToImage
__ SafariSharedUI: _WBSShowBackgroundImagePreferenceKey
__ SafariSharedUI: _WBSStartPageBackgroundAppearanceDidChangeNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDeletedRemotelyNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDidChangeNotification
__ SafariSharedUI: _WBSStartPageBackgroundImageDidChangeRemotelyNotification
__ SafariSharedUI: _WBSStartPageBackgroundImagesDataSourceUpdatedImages
__ SafariSharedUI: _WBSStartPageSectionIdentifierTitle
__ SafariSharedUI: _WBSWebExtensionDisplayListNeedsUpdateNotification
__ SafariSharedUI: _WBSWebExtensionPermissionDidChangeNotification
__ SafariSharedUI: _WBSWebExtensionURLScheme
__ SafariSharedUI: _WBSWebExtensionWebProcessPlugInPageGroupIdentifier
__ SafariSharedUI: _WBSWebExtensionWindowIDCurrent
__ SafariSharedUI: _WBSWebExtensionWindowIDNone
__ SafariSharedUI: __WBSLocalizedString
__ SafariSharedUI: __WBSLocalizedStringWithCurrentUserLocale
__ SafariSharedUI: _kMobileSafariChangedExtensionSettingsNotification
__ SafariSharedUI: _safariMobileApplicationBundleIdentifier
__ SafariSharedUI: _tabsPermissionKey
__ SearchFoundation: _OBJC_CLASS_$_SFResultSection
__ SearchFoundation: _OBJC_CLASS_$_SFSearchResult
__ SearchFoundation: _OBJC_CLASS_$_SFText
__ SearchFoundation: _OBJC_METACLASS_$_SFSearchResult
__ SocialLayer: _OBJC_CLASS_$_SLAttributionView
__ SoftLinking: __sl_dlopen
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSStringFromCGAffineTransform
__ UIKit: _NSStringFromCGPoint
__ UIKit: _NSStringFromCGRect
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutBoundarySupplementaryItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutDimension
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutGroup
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutItem
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSection
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSize
__ UIKit: _OBJC_CLASS_$_NSCollectionLayoutSpacing
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSectionSnapshot
__ UIKit: _OBJC_CLASS_$_NSDiffableDataSourceSnapshot
__ UIKit: _OBJC_CLASS_$_NSMutableParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_NSTextAttachment
__ UIKit: _OBJC_CLASS_$_UIAction
__ UIKit: _OBJC_CLASS_$_UIActivityViewController
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBackgroundConfiguration
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIBlurEffect
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIButtonConfiguration
__ UIKit: _OBJC_CLASS_$_UICellAccessoryCustomView
__ UIKit: _OBJC_CLASS_$_UICellAccessoryReorder
__ UIKit: _OBJC_CLASS_$_UICollectionLayoutListConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionReusableView
__ UIKit: _OBJC_CLASS_$_UICollectionView
__ UIKit: _OBJC_CLASS_$_UICollectionViewCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewCellRegistration
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayout
__ UIKit: _OBJC_CLASS_$_UICollectionViewCompositionalLayoutConfiguration
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSource
__ UIKit: _OBJC_CLASS_$_UICollectionViewDiffableDataSourceReorderingHandlers
__ UIKit: _OBJC_CLASS_$_UICollectionViewDropProposal
__ UIKit: _OBJC_CLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_CLASS_$_UICollectionViewSupplementaryRegistration
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UICommand
__ UIKit: _OBJC_CLASS_$_UICommandAlternate
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDeferredMenuElement
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIDocumentInteractionController
__ UIKit: _OBJC_CLASS_$_UIDocumentPickerViewController
__ UIKit: _OBJC_CLASS_$_UIDragPreview
__ UIKit: _OBJC_CLASS_$_UIDragPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIDragPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIFocusHaloEffect
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIFontMetrics
__ UIKit: _OBJC_CLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKBRenderConfig
__ UIKit: _OBJC_CLASS_$_UIKBVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIKeyCommand
__ UIKit: _OBJC_CLASS_$_UIKeyboardImpl
__ UIKit: _OBJC_CLASS_$_UIKeyboardInputModeController
__ UIKit: _OBJC_CLASS_$_UIKeyboardSceneDelegate
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILargeContentViewerInteraction
__ UIKit: _OBJC_CLASS_$_UILayoutGuide
__ UIKit: _OBJC_CLASS_$_UIListContentConfiguration
__ UIKit: _OBJC_CLASS_$_UIMenu
__ UIKit: _OBJC_CLASS_$_UIMenuSystem
__ UIKit: _OBJC_CLASS_$_UINavigationBarAppearance
__ UIKit: _OBJC_CLASS_$_UINavigationController
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPeripheralHost
__ UIKit: _OBJC_CLASS_$_UIPinchGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerEffect
__ UIKit: _OBJC_CLASS_$_UIPointerHighlightEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerRegion
__ UIKit: _OBJC_CLASS_$_UIPointerShape
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPreviewParameters
__ UIKit: _OBJC_CLASS_$_UIPreviewTarget
__ UIKit: _OBJC_CLASS_$_UIResponder
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISearchBar
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UIStatusBarServer
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedDragPreview
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITextField
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewFloatAnimatableProperty
__ UIKit: _OBJC_CLASS_$_UIViewSpringAnimationBehavior
__ UIKit: _OBJC_CLASS_$_UIVisualEffect
__ UIKit: _OBJC_CLASS_$_UIVisualEffectView
__ UIKit: _OBJC_CLASS_$_UIWebTouchEventsGestureRecognizer
__ UIKit: _OBJC_CLASS_$__UIClickInteraction
__ UIKit: _OBJC_CLASS_$__UINavigationBarPalette
__ UIKit: _OBJC_CLASS_$__UISheetPresentationController
__ UIKit: _OBJC_CLASS_$__UIVisualEffectBackdropView
__ UIKit: _OBJC_METACLASS_$_UIApplication
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UICollectionReusableView
__ UIKit: _OBJC_METACLASS_$_UICollectionViewCell
__ UIKit: _OBJC_METACLASS_$_UICollectionViewListCell
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_METACLASS_$_UIResponder
__ UIKit: _OBJC_METACLASS_$_UISearchBar
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UITextField
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIVisualEffectView
__ UIKit: _UIAccessibilityButtonShapesEnabled
__ UIKit: _UIAccessibilityButtonShapesEnabledStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIAnimationDragCoefficient
__ UIKit: _UIApp
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UICollectionElementKindSectionFooter
__ UIKit: _UICollectionElementKindSectionHeader
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIContentSizeCategoryLarge
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIEdgeInsetsAdd
__ UIKit: _UIEdgeInsetsMakeWithEdges
__ UIKit: _UIEdgeInsetsMax
__ UIKit: _UIEdgeInsetsMin
__ UIKit: _UIEdgeInsetsReplace
__ UIKit: _UIEdgeInsetsSubtract
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontDescriptorTraitsAttribute
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIGraphicsPopContext
__ UIKit: _UIImageSymbolWeightForFontWeight
__ UIKit: _UIKeyInputDownArrow
__ UIKit: _UIKeyInputEscape
__ UIKit: _UIKeyInputLeftArrow
__ UIKit: _UIKeyInputRightArrow
__ UIKit: _UIKeyInputUpArrow
__ UIKit: _UIKeyboardAnimationCurveUserInfoKey
__ UIKit: _UIKeyboardAnimationDurationUserInfoKey
__ UIKit: _UIKeyboardDidChangeFrameNotification
__ UIKit: _UIKeyboardDidHideNotification
__ UIKit: _UIKeyboardFrameBeginUserInfoKey
__ UIKit: _UIKeyboardFrameEndUserInfoKey
__ UIKit: _UIKeyboardPrivateWillChangeFrameNotification
__ UIKit: _UIKeyboardWillChangeFrameNotification
__ UIKit: _UIKeyboardWillHideNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UIMenuEdit
__ UIKit: _UIMenuFile
__ UIKit: _UIMenuRoot
__ UIKit: _UIMenuTextSize
__ UIKit: _UIMenuView
__ UIKit: _UIMenuWindow
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UISceneDidEnterBackgroundNotification
__ UIKit: _UISceneWillEnterForegroundNotification
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UIScrollViewDecelerationRateNormal
__ UIKit: __UIUpdateRequestActivate
__ UIKit: __UIUpdateRequestDeactivate
__ UIKit: __UIViewDefaultLayoutMargin
__ WebBookmarks: _OBJC_CLASS_$_WBCollectionConfiguration
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkCollection
__ WebBookmarks: _OBJC_CLASS_$_WebBookmarkWebFilterSettings
__ WebBookmarks: _WebBookmarksChangedFolderIDKey
__ WebBookmarks: _WebBookmarksFolderContentsDidChangeNotification
__ WebKit: _OBJC_CLASS_$_WKContentRuleListStore
__ WebKit: _OBJC_CLASS_$_WKPreferences
__ WebKit: _OBJC_CLASS_$_WKUserContentController
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$__WKWebAuthenticationAssertionResponse
__ WebUI: _OBJC_CLASS_$_WBUFeatureManager
__ WebUI: _OBJC_CLASS_$_WBUSheetController
__ WebUI: _OBJC_METACLASS_$_WBUFeatureManager
__ WebUI: _webuiCookieAcceptPolicyPreferencesKey
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _tan
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___gxx_personality_v0
__ libmis.dylib: _MISCopyErrorStringForErrorCode
__ libmis.dylib: _MISValidateSignature
__ libmis.dylib: _kMISValidationOptionAllowAdHocSigning
__ libmis.dylib: _kMISValidationOptionAuthoritativeLaunch
__ libmis.dylib: _kMISValidationOptionHonorBlacklist
__ libmis.dylib: _kMISValidationOptionRespectUppTrustAndAuthorization
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SFUnifiedTabBarItem : SFUnifiedBarItem <SFNavigationBarItemObserver, SFTabHoverPreviewItem>
 @property  SFUnifiedTabBarItemView *itemView
 @property  SFNavigationBarItem *navigationBarItem
 @property  UIImage *icon
 @property  NSString *title
 @property  NSDate *lastReloadDate
 @property  unsigned long mediaStateIcon
 @property  _SFFluidProgressView *progressView
 @property  NSUUID *UUID
 @property  BOOL isPlaceholder
 @property  double downloadProgress
 @property  SFWebExtensionButtonConfiguration *extensionButtonConfiguration
 @property  unsigned long menuButtonBadges
 @property  BOOL showsBadgeOnExtensionsButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFUnifiedTabBarItem downloadProgress]
  -[SFUnifiedTabBarItem navigationBarItem]
  -[SFUnifiedTabBarItem setDownloadProgress:]
  -[SFUnifiedTabBarItem setIsPlaceholder:]
  -[SFUnifiedTabBarItem UUID]
  -[SFUnifiedTabBarItem icon]
  -[SFUnifiedTabBarItem setTitle:]
  -[SFUnifiedTabBarItem progressView]
  -[SFUnifiedTabBarItem .cxx_destruct]
  -[SFUnifiedTabBarItem setDownloadProgress:animated:]
  -[SFUnifiedTabBarItem setMediaStateIcon:]
  -[SFUnifiedTabBarItem init]
  -[SFUnifiedTabBarItem mediaStateIcon]
  -[SFUnifiedTabBarItem setIcon:]
  -[SFUnifiedTabBarItem title]
  -[SFUnifiedTabBarItem itemView]
  -[SFUnifiedTabBarItem setProgressView:]
  -[SFUnifiedTabBarItem isPlaceholder]
  -[SFUnifiedTabBarItem setUUID:]
  -[SFUnifiedTabBarItem setReusableView:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateText:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsLockIcon:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsSearchIndicator:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsStopReloadButtons:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateStopReloadButtonShowsStop:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateFormatButtonSelected:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsReaderButton:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateProgressView:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsTranslationIcon:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsTranslationButton:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateShowsVoiceSearchButton:]
  -[SFUnifiedTabBarItem navigationBarItemDidUpdateSecurityAnnotation:]
  -[SFUnifiedTabBarItem configureItemView:]
  -[SFUnifiedTabBarItem setLastReloadDate:]
  -[SFUnifiedTabBarItem setExtensionButtonConfiguration:]
  -[SFUnifiedTabBarItem setMenuButtonBadges:]
  -[SFUnifiedTabBarItem setShowsBadgeOnExtensionsButton:]
  -[SFUnifiedTabBarItem dismissAvailabilityOverlays]
  -[SFUnifiedTabBarItem setNavigationBarItem:]
  -[SFUnifiedTabBarItem toggleExtensionBadge]
  -[SFUnifiedTabBarItem lastReloadDate]
  -[SFUnifiedTabBarItem extensionButtonConfiguration]
  -[SFUnifiedTabBarItem menuButtonBadges]
  -[SFUnifiedTabBarItem showsBadgeOnExtensionsButton]


SFUnifiedBarMetrics : NSObject
 @property  long long metricsCategory
 @property  double itemCornerRadius
 @property  double itemHeight
 @property  double leadingTabIconInset
 @property  double squishedBarHeight
 @property  double tabCloseButtonWidth

  // class methods
  +[SFUnifiedBarMetrics itemSpacing]
  +[SFUnifiedBarMetrics separatorWidth]
  +[SFUnifiedBarMetrics squishedBarHeight]
  +[SFUnifiedBarMetrics defaultItemHeight]
  +[SFUnifiedBarMetrics minimumItemSpacing]
  +[SFUnifiedBarMetrics cutoutBorderWidth]
  +[SFUnifiedBarMetrics minimumSquishScale]
  +[SFUnifiedBarMetrics transitioningItemScale]

  // instance methods
  -[SFUnifiedBarMetrics itemCornerRadius]
  -[SFUnifiedBarMetrics .cxx_destruct]
  -[SFUnifiedBarMetrics _scaledValueForValue:]
  -[SFUnifiedBarMetrics initWithTraitCollection:]
  -[SFUnifiedBarMetrics _updateMetrics]
  -[SFUnifiedBarMetrics itemHeight]
  -[SFUnifiedBarMetrics updateWithTraitCollection:]
  -[SFUnifiedBarMetrics _updateWithContentSizeCategory:legibilityWeight:]
  -[SFUnifiedBarMetrics squishedBarHeight]
  -[SFUnifiedBarMetrics setMetricsCategory:]
  -[SFUnifiedBarMetrics leadingTabIconInset]
  -[SFUnifiedBarMetrics tabCloseButtonWidth]
  -[SFUnifiedBarMetrics metricsCategory]


SFUnifiedBarItemView : UIButton
 @property  SFUnifiedBarItem *item
 @property  BOOL visible
 @property  BOOL occluded
 @property  BOOL hovering
 @property  double squishedInset
 @property  NSString *cutoutBorderCopyGroupName
 @property  BOOL showsPlatter
 @property  UIView *contentView
 @property  SFUnifiedBarMetrics *barMetrics
 @property  SFUnifiedBarTheme *barTheme
 @property  long long platterStyle
 @property  double barBackgroundAlpha
 @property  double themeColorVisibility
 @property  double squishTransformFactor
 @property  double preferredWidth
 @property  UIDragPreviewParameters *previewParameters

  // instance methods
  -[SFUnifiedBarItemView setHighlighted:]
  -[SFUnifiedBarItemView setItem:]
  -[SFUnifiedBarItemView hitTest:withEvent:]
  -[SFUnifiedBarItemView preferredWidth]
  -[SFUnifiedBarItemView setVisible:]
  -[SFUnifiedBarItemView isOccluded]
  -[SFUnifiedBarItemView barMetrics]
  -[SFUnifiedBarItemView updateCornerRadius]
  -[SFUnifiedBarItemView updateConstraints]
  -[SFUnifiedBarItemView .cxx_destruct]
  -[SFUnifiedBarItemView setOccluded:]
  -[SFUnifiedBarItemView layoutSubviews]
  -[SFUnifiedBarItemView contentView]
  -[SFUnifiedBarItemView setHovering:]
  -[SFUnifiedBarItemView item]
  -[SFUnifiedBarItemView isVisible]
  -[SFUnifiedBarItemView previewParameters]
  -[SFUnifiedBarItemView gestureRecognizerShouldBegin:]
  -[SFUnifiedBarItemView prepareForReuse]
  -[SFUnifiedBarItemView initWithFrame:]
  -[SFUnifiedBarItemView setBarMetrics:]
  -[SFUnifiedBarItemView _updateContentAlpha]
  -[SFUnifiedBarItemView platterStyle]
  -[SFUnifiedBarItemView setBarTheme:]
  -[SFUnifiedBarItemView _buttonShapesEnabledDidChange]
  -[SFUnifiedBarItemView _updatePlatterEffect]
  -[SFUnifiedBarItemView _updateBackgroundAlpha]
  -[SFUnifiedBarItemView _disableVibrancyIfNeededForTheme:]
  -[SFUnifiedBarItemView applyTheme]
  -[SFUnifiedBarItemView _needsCopyCutoutBorder]
  -[SFUnifiedBarItemView _needsPlatterCutoutBorder]
  -[SFUnifiedBarItemView _needsPlatterView]
  -[SFUnifiedBarItemView _updateOverrideUserInterfaceStyle]
  -[SFUnifiedBarItemView _applyPlatterColor:]
  -[SFUnifiedBarItemView _applyThemeToPlatterView:]
  -[SFUnifiedBarItemView setShowsPlatter:]
  -[SFUnifiedBarItemView setPlatterStyle:]
  -[SFUnifiedBarItemView setCutoutBorderCopyGroupName:]
  -[SFUnifiedBarItemView setBarBackgroundAlpha:]
  -[SFUnifiedBarItemView setThemeColorVisibility:]
  -[SFUnifiedBarItemView setSquishTransformFactor:]
  -[SFUnifiedBarItemView showsPlatter]
  -[SFUnifiedBarItemView barTheme]
  -[SFUnifiedBarItemView barBackgroundAlpha]
  -[SFUnifiedBarItemView themeColorVisibility]
  -[SFUnifiedBarItemView squishTransformFactor]
  -[SFUnifiedBarItemView isHovering]
  -[SFUnifiedBarItemView squishedInset]
  -[SFUnifiedBarItemView setSquishedInset:]
  -[SFUnifiedBarItemView cutoutBorderCopyGroupName]


SFCapsuleCollectionViewUpdate : NSObject
 @property  SFCapsuleCollectionView *collectionView
 @property  NSArray *itemsBeforeUpdate
 @property  NSIndexSet *indexesOfVisibleItemsBeforeUpdate
 @property  long long selectedItemIndexBeforeUpdate
 @property  long long indexAfterUpdateOfSelectedItemBeforeUpdate
 @property  NSArray *itemsAfterUpdate
 @property  long long selectedItemIndexAfterUpdate
 @property  long long indexBeforeUpdateOfSelectedItemAfterUpdate
 @property  BOOL animated
 @property  NSIndexSet *indexesOfInsertedItems
 @property  NSIndexSet *indexesOfDeletedItems

  // instance methods
  -[SFCapsuleCollectionViewUpdate isAnimated]
  -[SFCapsuleCollectionViewUpdate initWithCollectionView:]
  -[SFCapsuleCollectionViewUpdate .cxx_destruct]
  -[SFCapsuleCollectionViewUpdate collectionView]
  -[SFCapsuleCollectionViewUpdate _calculateIndexesIfNeeded]
  -[SFCapsuleCollectionViewUpdate setSelectedItemIndex:animated:]
  -[SFCapsuleCollectionViewUpdate insertItemsAtIndexes:animated:]
  -[SFCapsuleCollectionViewUpdate deleteItemsAtIndexes:animated:]
  -[SFCapsuleCollectionViewUpdate indexesOfDeletedItems]
  -[SFCapsuleCollectionViewUpdate indexesOfInsertedItems]
  -[SFCapsuleCollectionViewUpdate indexBeforeUpdateOfSelectedItemAfterUpdate]
  -[SFCapsuleCollectionViewUpdate indexAfterUpdateOfSelectedItemBeforeUpdate]
  -[SFCapsuleCollectionViewUpdate itemsBeforeUpdate]
  -[SFCapsuleCollectionViewUpdate indexesOfVisibleItemsBeforeUpdate]
  -[SFCapsuleCollectionViewUpdate selectedItemIndexBeforeUpdate]
  -[SFCapsuleCollectionViewUpdate itemsAfterUpdate]
  -[SFCapsuleCollectionViewUpdate selectedItemIndexAfterUpdate]


SFCapsuleNavigationBar : UIControl <SFNavigationBarItemObserver, _SFBarRegistrationObserving, SFCapsuleContentView, _SFFluidProgressViewDelegate, PKScribbleInteractionDelegate, _SFNavigationBarCommon>
 @property  NSArray *labelTypes
 @property  NSArray *iconTypes
 @property  BOOL hidesTitle
 @property  SFNavigationBarItem *item
 @property  NSArray *leadingButtons
 @property  NSArray *trailingButtons
 @property  BOOL isSelected
 @property  BOOL isMinimized
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyContentRect
 @property  long long layoutStyle
 @property  BOOL showingTransientLabel
 @property  {CGSize=dd} urlSize
 @property  <_SFNavigationBarDelegateCommon> *delegate
 @property  PKScribbleInteraction *scribbleInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SFCapsuleContentViewSizeUpdating> *sizeUpdater
 @property  BOOL isHighlighted
 @property  @? highlightObserver
 @property  _SFBarTheme *theme
 @property  double minimizedContentHorizontalInset
 @property  double minimizationPercent
 @property  {CGAffineTransform=dddddd} keyContentTransform
 @property  double nonKeyContentAlpha
 @property  NSNumber *microphoneContentOriginX
 @property  {CGAffineTransform=dddddd} microphoneContentTransform
 @property  @? buttonPointerStyleProvider
 @property  UIView *unclippedContainer
 @property  UITextField *textField
 @property  NSArray *popoverPassthroughViews
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} URLOutlineFrameInNavigationBarSpace
 @property  <_SFPopoverSourceInfo> *formatMenuButtonPopoverSourceInfo
 @property  <_SFPopoverSourceInfo> *URLOutlinePopoverSourceInfo

  // class methods
  +[SFCapsuleNavigationBar requiresConstraintBasedLayout]

  // instance methods
  -[SFCapsuleNavigationBar setHighlighted:]
  -[SFCapsuleNavigationBar textField]
  -[SFCapsuleNavigationBar setItem:]
  -[SFCapsuleNavigationBar updateAccessibilityIdentifier]
  -[SFCapsuleNavigationBar isMinimized]
  -[SFCapsuleNavigationBar theme]
  -[SFCapsuleNavigationBar initWithCoder:]
  -[SFCapsuleNavigationBar traitCollectionDidChange:]
  -[SFCapsuleNavigationBar layoutStyle]
  -[SFCapsuleNavigationBar updateConstraints]
  -[SFCapsuleNavigationBar .cxx_destruct]
  -[SFCapsuleNavigationBar layoutSubviews]
  -[SFCapsuleNavigationBar setDelegate:]
  -[SFCapsuleNavigationBar item]
  -[SFCapsuleNavigationBar _scribbleInteraction:willBeginWritingInElement:]
  -[SFCapsuleNavigationBar _scribbleInteraction:shouldBeginAtLocation:]
  -[SFCapsuleNavigationBar _scribbleInteraction:didFinishWritingInElement:]
  -[SFCapsuleNavigationBar setSelected:]
  -[SFCapsuleNavigationBar setMinimized:]
  -[SFCapsuleNavigationBar setTheme:]
  -[SFCapsuleNavigationBar scribbleInteraction]
  -[SFCapsuleNavigationBar isSelected]
  -[SFCapsuleNavigationBar initWithFrame:]
  -[SFCapsuleNavigationBar urlSize]
  -[SFCapsuleNavigationBar delegate]
  -[SFCapsuleNavigationBar setIsSelected:]
  -[SFCapsuleNavigationBar setLayoutStyle:]
  -[SFCapsuleNavigationBar _updateLabelContents]
  -[SFCapsuleNavigationBar _scribbleInteraction:focusWillTransformElement:]
  -[SFCapsuleNavigationBar _scribbleInteractionIsEnabled:]
  -[SFCapsuleNavigationBar _interButtonSpacing]
  -[SFCapsuleNavigationBar URLOutlineFrameInNavigationBarSpace]
  -[SFCapsuleNavigationBar animateSafariIconLinkFromPoint:inView:]
  -[SFCapsuleNavigationBar animateLinkImage:fromRect:inView:toBarItem:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
  -[SFCapsuleNavigationBar popoverSourceInfoForBarItem:]
  -[SFCapsuleNavigationBar fluidProgressViewWillShowProgress:]
  -[SFCapsuleNavigationBar fluidProgressViewDidShowProgress:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateText:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsLockIcon:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsSearchIndicator:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsStopReloadButtons:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateStopReloadButtonShowsStop:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateFormatButtonSelected:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsReaderButton:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateMediaStateIcon:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsTranslationIcon:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsTranslationButton:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateShowsExtensionsAvailability:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateNeedsExtensionBadge:]
  -[SFCapsuleNavigationBar navigationBarItemDidUpdateSecurityAnnotation:]
  -[SFCapsuleNavigationBar urlOutlineFrameRelativeToView:]
  -[SFCapsuleNavigationBar popoverPassthroughViews]
  -[SFCapsuleNavigationBar formatMenuButtonPopoverSourceInfo]
  -[SFCapsuleNavigationBar URLOutlinePopoverSourceInfo]
  -[SFCapsuleNavigationBar didCompleteBarRegistrationWithToken:]
  -[SFCapsuleNavigationBar initForSizingWithFrame:layoutStyle:]
  -[SFCapsuleNavigationBar initWithFrame:layoutStyle:]
  -[SFCapsuleNavigationBar _updateButtonAlphaForMinimizedPercent:]
  -[SFCapsuleNavigationBar _updateShowsProgressView]
  -[SFCapsuleNavigationBar _updatePlaceholderText]
  -[SFCapsuleNavigationBar _invalidateHeight]
  -[SFCapsuleNavigationBar _createLeadingButtonConstraints]
  -[SFCapsuleNavigationBar _createTrailingButtonConstraints]
  -[SFCapsuleNavigationBar _titleToEdgeMargin]
  -[SFCapsuleNavigationBar _shouldCenterLabels]
  -[SFCapsuleNavigationBar _horizontalAlignmentConstraintForLabel:]
  -[SFCapsuleNavigationBar _shouldHideButtons]
  -[SFCapsuleNavigationBar _minimumEdgeMargin]
  -[SFCapsuleNavigationBar _shouldCenterButtonsBetweenEdgeAndTitle:]
  -[SFCapsuleNavigationBar _titleToButtonSpacing]
  -[SFCapsuleNavigationBar _updateSecurityAnnotation]
  -[SFCapsuleNavigationBar _updateLabelTypesAnimated:]
  -[SFCapsuleNavigationBar _updatePageFormatButtonForNavigationBarItem:shouldResetDiscovery:]
  -[SFCapsuleNavigationBar _updateTitleContainerAlignment]
  -[SFCapsuleNavigationBar _updateTitleContainerAlpha]
  -[SFCapsuleNavigationBar _progressViewAlignsToTopWhenMinimized]
  -[SFCapsuleNavigationBar _updateLabelTypesForMinimized:animated:]
  -[SFCapsuleNavigationBar _updateButtonsTransform]
  -[SFCapsuleNavigationBar _updateShowsPrivateAnnotation]
  -[SFCapsuleNavigationBar _updateProgressViewFillColor]
  -[SFCapsuleNavigationBar _transitionFromButtons:toButtons:withConstraintsToDeactivate:]
  -[SFCapsuleNavigationBar _shouldHideButtonsForMinimized:]
  -[SFCapsuleNavigationBar _isTemporaryLabel:]
  -[SFCapsuleNavigationBar _showsReaderAvailabilityText]
  -[SFCapsuleNavigationBar _showsTranslationAvailabilityText]
  -[SFCapsuleNavigationBar _setLabelTypes:iconTypes:animated:]
  -[SFCapsuleNavigationBar _startTemporaryLabelTimerIfNeeded]
  -[SFCapsuleNavigationBar _subtitleMarqueeStarted:]
  -[SFCapsuleNavigationBar _subtitleTimerFired:]
  -[SFCapsuleNavigationBar _hidesTitle]
  -[SFCapsuleNavigationBar _updateLabelContentsAtIndexes:iconsAtIndexes:]
  -[SFCapsuleNavigationBar _textForSubtitleType:]
  -[SFCapsuleNavigationBar _textStyleForLabelType:withLabelTypes:]
  -[SFCapsuleNavigationBar _textColorForLabelType:]
  -[SFCapsuleNavigationBar _iconForLabelType:]
  -[SFCapsuleNavigationBar _setHidesTitle:]
  -[SFCapsuleNavigationBar willChangeToMinimized:coordinator:]
  -[SFCapsuleNavigationBar horizontalPointerPaddingForButton:]
  -[SFCapsuleNavigationBar sizeUpdater]
  -[SFCapsuleNavigationBar setSizeUpdater:]
  -[SFCapsuleNavigationBar highlightObserver]
  -[SFCapsuleNavigationBar setHighlightObserver:]
  -[SFCapsuleNavigationBar minimizedContentHorizontalInset]
  -[SFCapsuleNavigationBar setMinimizedContentHorizontalInset:]
  -[SFCapsuleNavigationBar minimizationPercent]
  -[SFCapsuleNavigationBar setMinimizationPercent:]
  -[SFCapsuleNavigationBar keyContentRect]
  -[SFCapsuleNavigationBar keyContentTransform]
  -[SFCapsuleNavigationBar setKeyContentTransform:]
  -[SFCapsuleNavigationBar nonKeyContentAlpha]
  -[SFCapsuleNavigationBar setNonKeyContentAlpha:]
  -[SFCapsuleNavigationBar microphoneContentOriginX]
  -[SFCapsuleNavigationBar microphoneContentTransform]
  -[SFCapsuleNavigationBar setMicrophoneContentTransform:]
  -[SFCapsuleNavigationBar buttonPointerStyleProvider]
  -[SFCapsuleNavigationBar setButtonPointerStyleProvider:]
  -[SFCapsuleNavigationBar unclippedContainer]
  -[SFCapsuleNavigationBar setUnclippedContainer:]
  -[SFCapsuleNavigationBar initForSizingWithFrame:]
  -[SFCapsuleNavigationBar prepareForSizingNavigationBar:]
  -[SFCapsuleNavigationBar setLeadingButtons:]
  -[SFCapsuleNavigationBar setTrailingButtons:]
  -[SFCapsuleNavigationBar leadingButtons]
  -[SFCapsuleNavigationBar trailingButtons]
  -[SFCapsuleNavigationBar setIsMinimized:]
  -[SFCapsuleNavigationBar showingTransientLabel]
  -[SFCapsuleNavigationBar _labelTypes]
  -[SFCapsuleNavigationBar _iconTypes]


SFCapsuleNavigationBarLabelLayoutInfo : NSObject
 @property  UIView *view
 @property  NSLayoutConstraint *constraintToItemBelow
 @property  NSLayoutConstraint *constraintToItemAbove
 @property  NSLayoutConstraint *constraintForHorizontalAlignment

  // instance methods
  -[SFCapsuleNavigationBarLabelLayoutInfo initWithView:]
  -[SFCapsuleNavigationBarLabelLayoutInfo .cxx_destruct]
  -[SFCapsuleNavigationBarLabelLayoutInfo view]
  -[SFCapsuleNavigationBarLabelLayoutInfo constraintForHorizontalAlignment]
  -[SFCapsuleNavigationBarLabelLayoutInfo setConstraintForHorizontalAlignment:]
  -[SFCapsuleNavigationBarLabelLayoutInfo setConstraintToItemBelow:]
  -[SFCapsuleNavigationBarLabelLayoutInfo constraintToItemBelow]
  -[SFCapsuleNavigationBarLabelLayoutInfo setConstraintToItemAbove:]
  -[SFCapsuleNavigationBarLabelLayoutInfo constraintToItemAbove]


SFCapsuleNavigationBarIconLayoutInfo : NSObject
 @property  UIImageView *imageView
 @property  NSArray *constraintsToItemBefore

  // instance methods
  -[SFCapsuleNavigationBarIconLayoutInfo imageView]
  -[SFCapsuleNavigationBarIconLayoutInfo .cxx_destruct]
  -[SFCapsuleNavigationBarIconLayoutInfo initWithImageView:]
  -[SFCapsuleNavigationBarIconLayoutInfo setConstraintsToItemBefore:]
  -[SFCapsuleNavigationBarIconLayoutInfo constraintsToItemBefore]


SFUnifiedBarItemPlatterView : UIView
 @property  UIVisualEffectView *effectView

  // instance methods
  -[SFUnifiedBarItemPlatterView _setContinuousCornerRadius:]
  -[SFUnifiedBarItemPlatterView .cxx_destruct]
  -[SFUnifiedBarItemPlatterView effectView]
  -[SFUnifiedBarItemPlatterView _setCornerRadius:]
  -[SFUnifiedBarItemPlatterView initWithFrame:]


SFThemeColorEffectView : UIView
 @property  UIView *contentView
 @property  UIVisualEffect *effect
 @property  NSString *_groupName
 @property  SFThemeColorBarTheme *theme
 @property  double themeColorVisibility

  // instance methods
  -[SFThemeColorEffectView theme]
  -[SFThemeColorEffectView setEffect:]
  -[SFThemeColorEffectView effect]
  -[SFThemeColorEffectView .cxx_destruct]
  -[SFThemeColorEffectView _groupName]
  -[SFThemeColorEffectView contentView]
  -[SFThemeColorEffectView setTheme:]
  -[SFThemeColorEffectView _setGroupName:]
  -[SFThemeColorEffectView _updateFillColor]
  -[SFThemeColorEffectView initWithEffect:]
  -[SFThemeColorEffectView setThemeColorVisibility:]
  -[SFThemeColorEffectView themeColorVisibility]
  -[SFThemeColorEffectView _applyTheme]
  -[SFThemeColorEffectView _needsBlur]


SFAppLinkBanner : SFLinkBanner
 @property  WBSAppLink *appLink

  // instance methods
  -[SFAppLinkBanner appLink]
  -[SFAppLinkBanner .cxx_destruct]
  -[SFAppLinkBanner initWithAppLink:openActionHandler:]


SFOrderedContainerView : UIView
 @property  <SFOrderedContainerViewDelegate> *delegate

  // instance methods
  -[SFOrderedContainerView didAddSubview:]
  -[SFOrderedContainerView willMoveToWindow:]
  -[SFOrderedContainerView .cxx_destruct]
  -[SFOrderedContainerView setDelegate:]
  -[SFOrderedContainerView delegate]
  -[SFOrderedContainerView _sf_setOrderedSubviews:count:]
  -[SFOrderedContainerView updateOrderedSubviews:count:]


SFCapsuleCollectionView : UIView <SFCapsuleContentViewSizeUpdating, SFStartPageScrollObserver, UIGestureRecognizerDelegate>
 @property  double pageWidth
 @property  double interCapsuleSpacing
 @property  NSIndexSet *indexesOfLoadedViews
 @property  NSIndexSet *indexesOfAnimatingItems
 @property  double keyboardHeight
 @property  double offsetForMinimization
 @property  double verticalOffsetForSelectedItem
 @property  NSArray *items
 @property  BOOL suppressingDataSourceCalls
 @property  unsigned long numberOfItems
 @property  NSIndexSet *indexesOfVisibleItems
 @property  <SFCapsuleCollectionViewDataSource> *dataSource
 @property  <SFCapsuleCollectionViewDelegate> *delegate
 @property  _SFBarTheme *theme
 @property  _SFBarTheme *minimizedTheme
 @property  long long layoutStyle
 @property  double capsuleBackgroundCornerRadius
 @property  double defaultCapsuleHeight
 @property  double focusedCapsuleTopOffset
 @property  double focusedCapsuleHeight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} capsuleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} minimizedCapsuleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} selectedCapsuleFrame
 @property  {UIEdgeInsets=dddd} obscuredInsets
 @property  {UIEdgeInsets=dddd} obscuredInsetsIgnoringKeyboard
 @property  BOOL itemsAreHidden
 @property  BOOL selectedItemUsesLiftedPreviewAppearance
 @property  BOOL selectedItemIsMinimized
 @property  long long minimizationStyle
 @property  long long selectedItemState
 @property  SFScrollingPanGestureRecognizer *minimizationPanGestureRecognizer
 @property  double selectionThreshold
 @property  BOOL useFastDeceleration
 @property  long long selectedItemIndex
 @property  BOOL isInteractivelySelectingItem
 @property  long long selectionGestureState
 @property  unsigned long selectionGestureAxis
 @property  {CGPoint=dd} selectedCapsuleOffset
 @property  BOOL hasTrailingAction
 @property  BOOL suppressesSelectedItemUnfocus
 @property  UIToolbar *toolbar
 @property  NSNumber *toolbarOffsetForPinchTransition
 @property  BOOL isTransitioningToNormalStateForTapInBottomRegion
 @property  <SFCapsuleCollectionViewToolbarContentProviding> *alternateToolbarContentProvider
 @property  BOOL showingAlternateToolbarContent
 @property  BOOL interactivelyDismissingToolbar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFCapsuleCollectionView layoutMarginsDidChange]
  -[SFCapsuleCollectionView hitTest:withEvent:]
  -[SFCapsuleCollectionView theme]
  -[SFCapsuleCollectionView inputAccessoryView]
  -[SFCapsuleCollectionView _pageWidth]
  -[SFCapsuleCollectionView traitCollectionDidChange:]
  -[SFCapsuleCollectionView _keyboardWillHide:]
  -[SFCapsuleCollectionView _keyboardWillShow:]
  -[SFCapsuleCollectionView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SFCapsuleCollectionView setDataSource:]
  -[SFCapsuleCollectionView layoutStyle]
  -[SFCapsuleCollectionView .cxx_destruct]
  -[SFCapsuleCollectionView layoutSubviews]
  -[SFCapsuleCollectionView setDelegate:]
  -[SFCapsuleCollectionView dataSource]
  -[SFCapsuleCollectionView numberOfItems]
  -[SFCapsuleCollectionView setNeedsLayout]
  -[SFCapsuleCollectionView toolbar]
  -[SFCapsuleCollectionView gestureRecognizerShouldBegin:]
  -[SFCapsuleCollectionView _keyboardDidHide:]
  -[SFCapsuleCollectionView setTheme:]
  -[SFCapsuleCollectionView _updateActions]
  -[SFCapsuleCollectionView gestureRecognizer:shouldReceiveTouch:]
  -[SFCapsuleCollectionView _keyboardHeight]
  -[SFCapsuleCollectionView initWithFrame:]
  -[SFCapsuleCollectionView safeAreaInsetsDidChange]
  -[SFCapsuleCollectionView delegate]
  -[SFCapsuleCollectionView _updateLayoutMargins]
  -[SFCapsuleCollectionView didMoveToWindow]
  -[SFCapsuleCollectionView _updateToolbar]
  -[SFCapsuleCollectionView reloadData]
  -[SFCapsuleCollectionView _keyboardWillChangeFrame:]
  -[SFCapsuleCollectionView setLayoutStyle:]
  -[SFCapsuleCollectionView _items]
  -[SFCapsuleCollectionView endUpdates]
  -[SFCapsuleCollectionView beginUpdates]
  -[SFCapsuleCollectionView obscuredInsets]
  -[SFCapsuleCollectionView selectedItemIndex]
  -[SFCapsuleCollectionView setSelectedItemIndex:]
  -[SFCapsuleCollectionView addGestureObserver:]
  -[SFCapsuleCollectionView removeGestureObserver:]
  -[SFCapsuleCollectionView viewForItemAtIndex:]
  -[SFCapsuleCollectionView reloadItemsAtIndexes:]
  -[SFCapsuleCollectionView _indexesOfVisibleItemsIncludingAction:]
  -[SFCapsuleCollectionView setSelectedItemIndex:animated:]
  -[SFCapsuleCollectionView insertItemsAtIndexes:animated:]
  -[SFCapsuleCollectionView deleteItemsAtIndexes:animated:]
  -[SFCapsuleCollectionView invalidateHeightForCapsuleContentView:]
  -[SFCapsuleCollectionView invalidateHeightForCapsuleContentView:animated:animations:completion:]
  -[SFCapsuleCollectionView _didReceiveTap:]
  -[SFCapsuleCollectionView _didReceiveMinimizationPan:]
  -[SFCapsuleCollectionView _didReceivePan:]
  -[SFCapsuleCollectionView _didReceiveDismissPan:]
  -[SFCapsuleCollectionView registerContentViewIdentifier:block:]
  -[SFCapsuleCollectionView _updateRangeOfLoadedViews]
  -[SFCapsuleCollectionView _keyboardBackdropStyle]
  -[SFCapsuleCollectionView _verticalOffsetForSelectedItemWithMinimizationOffsetMultiplier:includeKeyboard:]
  -[SFCapsuleCollectionView _shouldDismissToolbar]
  -[SFCapsuleCollectionView _shouldUseNormalLayoutForMinimizedCapsule]
  -[SFCapsuleCollectionView _layoutStyleIsTop]
  -[SFCapsuleCollectionView obscuredInsetsForState:]
  -[SFCapsuleCollectionView _shouldDodgeKeyboard]
  -[SFCapsuleCollectionView _performWithoutSettingNeedsLayout:]
  -[SFCapsuleCollectionView _layOutItems:atIndexes:selectedItemIndex:]
  -[SFCapsuleCollectionView _updateCapsuleAlpha]
  -[SFCapsuleCollectionView _layOutKeyboardBackdrop]
  -[SFCapsuleCollectionView _updateToolbarAlpha]
  -[SFCapsuleCollectionView _layOutToolbar]
  -[SFCapsuleCollectionView capsuleFrame]
  -[SFCapsuleCollectionView defaultCapsuleHeight]
  -[SFCapsuleCollectionView _selectedCapsuleFrame]
  -[SFCapsuleCollectionView _selectedItemShouldUsePlatterEffect]
  -[SFCapsuleCollectionView _inputAccessoryViewFrame]
  -[SFCapsuleCollectionView _selectedItemContentTransform]
  -[SFCapsuleCollectionView _selectedItemContentMinimizationPercent]
  -[SFCapsuleCollectionView selectedCapsuleFrame]
  -[SFCapsuleCollectionView _interCapsuleSpacing]
  -[SFCapsuleCollectionView _nextItemIndexForSelectionGesture]
  -[SFCapsuleCollectionView _percentToSelectItemIndex:]
  -[SFCapsuleCollectionView _itemsShouldUsePlatterEffect]
  -[SFCapsuleCollectionView _reloadDataWithoutLayout]
  -[SFCapsuleCollectionView _updateVisualEffectGroupName]
  -[SFCapsuleCollectionView capsuleBackgroundCornerRadius]
  -[SFCapsuleCollectionView _selectedCapsuleHeightForWidth:state:ignoringKeyboard:]
  -[SFCapsuleCollectionView _minimizedCapsuleFrameIgnoringKeyboard:]
  -[SFCapsuleCollectionView obscuredInsetsForState:ignoringKeyboard:]
  -[SFCapsuleCollectionView minimizedCapsuleFrame]
  -[SFCapsuleCollectionView _verticalOffsetForBottomBackdropIncludingKeyboard:]
  -[SFCapsuleCollectionView _obscuredInsetsIgnoringAnimation]
  -[SFCapsuleCollectionView _insetsByApplyingSelectedItemOffsetToInsetsForState:includeKeyboard:]
  -[SFCapsuleCollectionView selectedItemIsMinimized]
  -[SFCapsuleCollectionView _verticalOffsetForSelectedItem]
  -[SFCapsuleCollectionView _updateToolbarTheme]
  -[SFCapsuleCollectionView _applyToolbarTheme]
  -[SFCapsuleCollectionView setMinimizedTheme:]
  -[SFCapsuleCollectionView _updateBackdropHeight]
  -[SFCapsuleCollectionView _setKeyboardHeight:]
  -[SFCapsuleCollectionView _passthroughRect]
  -[SFCapsuleCollectionView _reclaimViewForItem:]
  -[SFCapsuleCollectionView _setIndexesOfLoadedViews:]
  -[SFCapsuleCollectionView _updateTrailingAction]
  -[SFCapsuleCollectionView _updateTopAction]
  -[SFCapsuleCollectionView _fetchContentViewForItem:atIndex:]
  -[SFCapsuleCollectionView _canAnimateUpdates]
  -[SFCapsuleCollectionView _trailingActionContentView]
  -[SFCapsuleCollectionView _buttonPointerStyleProviderForContentView:]
  -[SFCapsuleCollectionView _updateStateFlagsForContentViewAtIndex:]
  -[SFCapsuleCollectionView createOrDequeueContentViewWithIdentifier:atIndex:]
  -[SFCapsuleCollectionView _setSuppressingDataSourceCalls:]
  -[SFCapsuleCollectionView _dequeueOrCreateViewForItem:atIndex:]
  -[SFCapsuleCollectionView _incrementAnimationCountForItems:]
  -[SFCapsuleCollectionView _applyEffectsForChangeType:update:]
  -[SFCapsuleCollectionView _decrementAnimationCountForItems:]
  -[SFCapsuleCollectionView _indexesOfAnimatingItems]
  -[SFCapsuleCollectionView _discardExcessViewsForReuse]
  -[SFCapsuleCollectionView _indexOfCentermostItemWithTranslation:]
  -[SFCapsuleCollectionView _updateOffsetForPan]
  -[SFCapsuleCollectionView _visualEffectGroupName]
  -[SFCapsuleCollectionView setSelectedItemState:animated:]
  -[SFCapsuleCollectionView _didReceiveTapOnPeekCapsule:]
  -[SFCapsuleCollectionView _tapToShowBarBottomRegion]
  -[SFCapsuleCollectionView _setSelectedItemStateWithoutPerformingTransition:options:]
  -[SFCapsuleCollectionView _panGestureTranslationConstrainedToPanAxis]
  -[SFCapsuleCollectionView _indexOfTargetItemWithTranslation:roundingThreshold:]
  -[SFCapsuleCollectionView _indexOfTargetItemWithTranslation:roundingThreshold:allowActionIndex:allowOutOfBounds:]
  -[SFCapsuleCollectionView _setUpdateRequestActive:]
  -[SFCapsuleCollectionView _hasReachedTrailingActionPullThreshold]
  -[SFCapsuleCollectionView _percentToActivatingTopActionWithTranslation:]
  -[SFCapsuleCollectionView _swipeTranslationFactorWithPercentToTopAction:]
  -[SFCapsuleCollectionView _indexesOfVisibleItemsWithSelectedItemIndex:]
  -[SFCapsuleCollectionView _selectedItemBackgroundAlpha]
  -[SFCapsuleCollectionView _shouldShowAlternateToolbarContent]
  -[SFCapsuleCollectionView _distanceToTopEdgeIncludingDeceleration:]
  -[SFCapsuleCollectionView _translationIsAlmostHorizontal:]
  -[SFCapsuleCollectionView _shouldToggleMinimizedWithTranslation:velocity:gestureEnded:]
  -[SFCapsuleCollectionView _setCapsuleSafeAreaInsetsFrozen:]
  -[SFCapsuleCollectionView _coordinatorForUpdatingToCurrentSelectedItemStateFromState:]
  -[SFCapsuleCollectionView _setOffsetForMinimization:]
  -[SFCapsuleCollectionView _willBeginBackdropHeightAnimation]
  -[SFCapsuleCollectionView _didEndBackdropHeightAnimation]
  -[SFCapsuleCollectionView _overscrollDistanceForTopEdge]
  -[SFCapsuleCollectionView _sendMinimizationDidUpdateToObservers]
  -[SFCapsuleCollectionView _sendMinimizationDidEndToObservers]
  -[SFCapsuleCollectionView _performVisualEffectTransitionWithCoordinator:]
  -[SFCapsuleCollectionView _shouldInteractivelySquish]
  -[SFCapsuleCollectionView _selectedItemMinimizationPercent]
  -[SFCapsuleCollectionView _minimizedContentScale]
  -[SFCapsuleCollectionView _insetForCapsuleEdgeWithInsets:]
  -[SFCapsuleCollectionView setSelectedItemState:options:animated:]
  -[SFCapsuleCollectionView beginVisualEffectTransition]
  -[SFCapsuleCollectionView endVisualEffectTransition]
  -[SFCapsuleCollectionView _createToolbarBackdropIfNeeded]
  -[SFCapsuleCollectionView _bottomBackdropFrame]
  -[SFCapsuleCollectionView _verticalPanOffsetForToolbarBackdrop]
  -[SFCapsuleCollectionView _bottomBackdropFrameForAlternateContent]
  -[SFCapsuleCollectionView _verticalPanOffsetForToolbar]
  -[SFCapsuleCollectionView _toolbarBackdropAlpha]
  -[SFCapsuleCollectionView hitTest:forCapsuleFrameWithEvent:]
  -[SFCapsuleCollectionView startPageViewControllerDidScroll:]
  -[SFCapsuleCollectionView setFocusedCapsuleTopOffset:]
  -[SFCapsuleCollectionView focusedCapsuleHeight]
  -[SFCapsuleCollectionView obscuredInsetsIgnoringKeyboard]
  -[SFCapsuleCollectionView contentViewForItemAtIndex:]
  -[SFCapsuleCollectionView detachViewForItemAtIndex:]
  -[SFCapsuleCollectionView reattachViewForItemAtIndex:]
  -[SFCapsuleCollectionView takeOwnershipOfDetachedViewForItemAtIndex:]
  -[SFCapsuleCollectionView updateTrailingActionAnimated:]
  -[SFCapsuleCollectionView hasTrailingAction]
  -[SFCapsuleCollectionView indexesOfVisibleItems]
  -[SFCapsuleCollectionView isTransitioningToNormalStateForTapInBottomRegion]
  -[SFCapsuleCollectionView isInteractivelySelectingItem]
  -[SFCapsuleCollectionView selectedCapsuleOffset]
  -[SFCapsuleCollectionView selectionGestureAxis]
  -[SFCapsuleCollectionView setItemsAreHidden:]
  -[SFCapsuleCollectionView setShowingAlternateToolbarContent:animated:]
  -[SFCapsuleCollectionView setSelectedItemUsesLiftedPreviewAppearance:animator:]
  -[SFCapsuleCollectionView _effectiveItemsAreHidden]
  -[SFCapsuleCollectionView updateVerticalSwipeThreshold]
  -[SFCapsuleCollectionView setSelectedItemAccessoryView:forState:]
  -[SFCapsuleCollectionView setToolbarOffsetForPinchTransition:]
  -[SFCapsuleCollectionView installAlternateToolbarContentIfNeeded]
  -[SFCapsuleCollectionView relinquishAlternateToolbarContentIfNeeded]
  -[SFCapsuleCollectionView isInteractivelyDismissingToolbar]
  -[SFCapsuleCollectionView minimizedTheme]
  -[SFCapsuleCollectionView focusedCapsuleTopOffset]
  -[SFCapsuleCollectionView itemsAreHidden]
  -[SFCapsuleCollectionView selectedItemUsesLiftedPreviewAppearance]
  -[SFCapsuleCollectionView minimizationStyle]
  -[SFCapsuleCollectionView setMinimizationStyle:]
  -[SFCapsuleCollectionView selectedItemState]
  -[SFCapsuleCollectionView minimizationPanGestureRecognizer]
  -[SFCapsuleCollectionView selectionThreshold]
  -[SFCapsuleCollectionView setSelectionThreshold:]
  -[SFCapsuleCollectionView useFastDeceleration]
  -[SFCapsuleCollectionView setUseFastDeceleration:]
  -[SFCapsuleCollectionView selectionGestureState]
  -[SFCapsuleCollectionView suppressesSelectedItemUnfocus]
  -[SFCapsuleCollectionView setSuppressesSelectedItemUnfocus:]
  -[SFCapsuleCollectionView toolbarOffsetForPinchTransition]
  -[SFCapsuleCollectionView alternateToolbarContentProvider]
  -[SFCapsuleCollectionView setAlternateToolbarContentProvider:]
  -[SFCapsuleCollectionView isShowingAlternateToolbarContent]
  -[SFCapsuleCollectionView _indexesOfLoadedViews]
  -[SFCapsuleCollectionView _offsetForMinimization]
  -[SFCapsuleCollectionView _suppressingDataSourceCalls]


SFCapsuleContentViewRegistration : NSObject
  // instance methods
  -[SFCapsuleContentViewRegistration .cxx_destruct]
  -[SFCapsuleContentViewRegistration enqueueView:]
  -[SFCapsuleContentViewRegistration initWithCreateViewBlock:]
  -[SFCapsuleContentViewRegistration createOrDequeueViewWithExistingView:]
  -[SFCapsuleContentViewRegistration discardView:]


SFDefaultStartPageVisualStyleProvider : NSObject <SFStartPageVisualStyleProviding>
 @property  double defaultRowSpacing
 @property  double sectionHeaderBottomGap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFDefaultStartPageVisualStyleProvider sharedProvider]

  // instance methods
  -[SFDefaultStartPageVisualStyleProvider overrideTraitCollectionFromProposedTraits:isShowingWallpaper:]
  -[SFDefaultStartPageVisualStyleProvider siteIconSizeForContainerSize:]
  -[SFDefaultStartPageVisualStyleProvider rowSpacingForSectionItemType:containerSize:]
  -[SFDefaultStartPageVisualStyleProvider sectionContentInsetsWithViewLayoutMargins:]
  -[SFDefaultStartPageVisualStyleProvider collectionViewContentInsetsWithNavigationBarPosition:]
  -[SFDefaultStartPageVisualStyleProvider numberOfColumnsForSectionItemType:sectionWidth:traitCollection:]
  -[SFDefaultStartPageVisualStyleProvider defaultRowSpacing]
  -[SFDefaultStartPageVisualStyleProvider sectionHeaderBottomGap]


SFBlockBasedCAAnimationDelegate : NSObject <CAAnimationDelegate>
 @property  @? animationDidStopBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFBlockBasedCAAnimationDelegate animationDelegateWithDidStopBlock:]

  // instance methods
  -[SFBlockBasedCAAnimationDelegate .cxx_destruct]
  -[SFBlockBasedCAAnimationDelegate animationDidStop:finished:]
  -[SFBlockBasedCAAnimationDelegate animationDidStopBlock]
  -[SFBlockBasedCAAnimationDelegate setAnimationDidStopBlock:]
  -[SFBlockBasedCAAnimationDelegate associateLifetimeWithAnimation:]


SFKeyboardLayoutAlignmentView : UIView
 @property  BOOL automaticKeyboardFrameTrackingDisabled

  // instance methods
  -[SFKeyboardLayoutAlignmentView willMoveToWindow:]
  -[SFKeyboardLayoutAlignmentView .cxx_destruct]
  -[SFKeyboardLayoutAlignmentView _stopObservingKeyboardNotifications]
  -[SFKeyboardLayoutAlignmentView _removeConstraints]
  -[SFKeyboardLayoutAlignmentView _startObservingKeyboardNotificationsForScreen:]
  -[SFKeyboardLayoutAlignmentView _updateConstraintsForKeyboardNotification:]
  -[SFKeyboardLayoutAlignmentView _keyboardChanged:]
  -[SFKeyboardLayoutAlignmentView initWithFrame:]
  -[SFKeyboardLayoutAlignmentView setAutomaticKeyboardFrameTrackingDisabled:]
  -[SFKeyboardLayoutAlignmentView didMoveToWindow]
  -[SFKeyboardLayoutAlignmentView automaticKeyboardFrameTrackingDisabled]
  -[SFKeyboardLayoutAlignmentView dealloc]
  -[SFKeyboardLayoutAlignmentView _frameInBoundsForKeyboardFrame:]
  -[SFKeyboardLayoutAlignmentView _updateConstraintsToMatchKeyboardFrame:]
  -[SFKeyboardLayoutAlignmentView _matchInitialKeyboardFrame]
  -[SFKeyboardLayoutAlignmentView _addConstraints]


_SFBookmarkFolderTouchIconProvider : WBSBookmarkFolderTouchIconProvider
  // instance methods
  -[_SFBookmarkFolderTouchIconProvider displayableFolderContentsForRequest:]
  -[_SFBookmarkFolderTouchIconProvider backgroundColor]
  -[_SFBookmarkFolderTouchIconProvider .cxx_destruct]
  -[_SFBookmarkFolderTouchIconProvider _folderContentsDidChange:]
  -[_SFBookmarkFolderTouchIconProvider init]
  -[_SFBookmarkFolderTouchIconProvider bookmarkUUIDForRequest:]
  -[_SFBookmarkFolderTouchIconProvider defaultFolderIconForRequest:]
  -[_SFBookmarkFolderTouchIconProvider touchIconRequestForBookmark:inFolderWithRequest:]
  -[_SFBookmarkFolderTouchIconProvider canHandleRequest:]


SFStartPageSingleSectionDataSource : NSObject <SFStartPageCollectionDataSource, SFStartPageDataSourceObserving>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageSingleSectionDataSource reloadDataAnimatingDifferences:]
  -[SFStartPageSingleSectionDataSource reloadNavigationItemAnimated:]
  -[SFStartPageSingleSectionDataSource startPageCollectionViewControllerWillUpdateNavigationBar:]
  -[SFStartPageSingleSectionDataSource .cxx_destruct]
  -[SFStartPageSingleSectionDataSource sectionsForStartPageCollectionViewController:]
  -[SFStartPageSingleSectionDataSource startPageCollectionViewController:toggleSectionExpanded:]
  -[SFStartPageSingleSectionDataSource customizationControlPolicyForStartPageCollectionViewController:]
  -[SFStartPageSingleSectionDataSource startPageCollectionViewController:isSectionExpanded:]
  -[SFStartPageSingleSectionDataSource _reloadSection]
  -[SFStartPageSingleSectionDataSource initWithReloadHandler:navigationItemHandler:]
  -[SFStartPageSingleSectionDataSource connectToViewController:]
  -[SFStartPageSingleSectionDataSource startPageCollectionViewController:editSection:]


SFNavigationBarItem : NSObject
 @property  NSString *text
 @property  NSString *textWhenExpanded
 @property  unsigned long startIndexOfTextInExpandedText
 @property  NSString *customPlaceholderText
 @property  BOOL showsLockIcon
 @property  BOOL showsSearchIndicator
 @property  BOOL showsStopReloadButtons
 @property  BOOL stopReloadButtonShowsStop
 @property  BOOL showsPageFormatButton
 @property  BOOL readerButtonSelected
 @property  BOOL showsReaderButton
 @property  BOOL showsTranslationButton
 @property  BOOL showsTranslationIcon
 @property  BOOL showsVoiceSearchButton
 @property  BOOL showsExtensionsAvailabilityText
 @property  NSString *extensionsAvailabilityText
 @property  BOOL needsExtensionBadge
 @property  BOOL overrideBarStyleForSecurityWarning
 @property  _SFFluidProgressView *progressView
 @property  WBSFluidProgressController *fluidProgressController
 @property  <WBSFluidProgressStateSource> *fluidProgressStateSource
 @property  unsigned long mediaStateIcon
 @property  long long securityAnnotation
 @property  BOOL showsSecurityAnnotation
 @property  BOOL hasFocusedSensitiveFieldOnCurrentPage
 @property  BOOL menuButtonSelected

  // instance methods
  -[SFNavigationBarItem menuButtonSelected]
  -[SFNavigationBarItem setTemporarilySuppressText:]
  -[SFNavigationBarItem textWhenExpanded]
  -[SFNavigationBarItem setNeedsExtensionBadge:]
  -[SFNavigationBarItem setExtensionsAvailabilityText:]
  -[SFNavigationBarItem setFluidProgressStateSource:]
  -[SFNavigationBarItem setShowsPageFormatButton:]
  -[SFNavigationBarItem showsTranslationButton]
  -[SFNavigationBarItem progressView]
  -[SFNavigationBarItem showsReaderAvailabilityTextForStyle:]
  -[SFNavigationBarItem setText:textWhenExpanded:startIndex:]
  -[SFNavigationBarItem .cxx_destruct]
  -[SFNavigationBarItem setStopReloadButtonShowsStop:]
  -[SFNavigationBarItem readerButtonSelected]
  -[SFNavigationBarItem setMediaStateIcon:]
  -[SFNavigationBarItem showsVoiceSearchButton]
  -[SFNavigationBarItem securityAnnotation]
  -[SFNavigationBarItem showsExtensionsAvailabilityText]
  -[SFNavigationBarItem setReaderButtonSelected:]
  -[SFNavigationBarItem showsLockIcon]
  -[SFNavigationBarItem showsStopReloadButtons]
  -[SFNavigationBarItem fluidProgressController]
  -[SFNavigationBarItem setShowsReaderButton:]
  -[SFNavigationBarItem init]
  -[SFNavigationBarItem setSecurityAnnotation:hasFocusedInputFieldOnCurrentPage:]
  -[SFNavigationBarItem mediaStateIcon]
  -[SFNavigationBarItem extensionsAvailabilityText]
  -[SFNavigationBarItem setShowsStopReloadButtons:]
  -[SFNavigationBarItem addObserver:]
  -[SFNavigationBarItem showsPageFormatButton]
  -[SFNavigationBarItem setFluidProgressController:]
  -[SFNavigationBarItem startIndexOfTextInExpandedText]
  -[SFNavigationBarItem showsSearchIndicator]
  -[SFNavigationBarItem setProgressView:]
  -[SFNavigationBarItem setShowsTranslationButton:showsAvailabilityText:]
  -[SFNavigationBarItem showsTranslationAvailabilityTextForStyle:]
  -[SFNavigationBarItem setShowsLockIcon:]
  -[SFNavigationBarItem setSecurityAnnotation:]
  -[SFNavigationBarItem overrideBarStyleForSecurityWarning]
  -[SFNavigationBarItem setCustomPlaceholderText:]
  -[SFNavigationBarItem setShowsVoiceSearchButton:]
  -[SFNavigationBarItem setShowsReaderButton:showsAvailabilityText:]
  -[SFNavigationBarItem showsSecurityAnnotation]
  -[SFNavigationBarItem setShowsSearchIndicator:]
  -[SFNavigationBarItem removeObserver:]
  -[SFNavigationBarItem fluidProgressStateSource]
  -[SFNavigationBarItem needsExtensionBadge]
  -[SFNavigationBarItem showsTranslationIcon]
  -[SFNavigationBarItem text]
  -[SFNavigationBarItem showsReaderButton]
  -[SFNavigationBarItem stopReloadButtonShowsStop]
  -[SFNavigationBarItem customPlaceholderText]
  -[SFNavigationBarItem hasFocusedSensitiveFieldOnCurrentPage]
  -[SFNavigationBarItem setShowsTranslationIcon:]
  -[SFNavigationBarItem setShowsTranslationButton:]
  -[SFNavigationBarItem setOverrideBarStyleForSecurityWarning:]
  -[SFNavigationBarItem _showsAvailabilityTextForType:style:]


SFIconGenerator : NSObject
  // class methods
  +[SFIconGenerator getAppIconForBundleIdentifier:imageDescriptor:resultHandler:]


_SFSavedAccountTouchIconRequest : WBSTouchIconRequest
  // class methods
  +[_SFSavedAccountTouchIconRequest requestWithURL:minimumIconSize:maximumIconSize:iconDownloadingEnabled:]


_SFTouchIconFetchOperation : WBSTouchIconFetchOperation
  // class methods
  +[_SFTouchIconFetchOperation deviceIdealDefaultTouchIconURLsWithURL:]

  // instance methods
  -[_SFTouchIconFetchOperation didFetchTouchIconURLs:andFaviconURLs:forURL:]
  -[_SFTouchIconFetchOperation didCreateWebView]
  -[_SFTouchIconFetchOperation webViewConfiguration]


_SFSiteIconView : UIView
 @property  WebBookmark *bookmark
 @property  UIImage *leadingImage
 @property  UIImage *image
 @property  <_SFSiteIconViewUpdateObserver> *updateObserver
 @property  BOOL shouldUseModernStyling
 @property  BOOL shouldShowDropShadow

  // instance methods
  -[_SFSiteIconView _setState:]
  -[_SFSiteIconView _tintedFolderImage]
  -[_SFSiteIconView bookmark]
  -[_SFSiteIconView leadingImage]
  -[_SFSiteIconView image]
  -[_SFSiteIconView _setContinuousCornerRadius:]
  -[_SFSiteIconView _monogramFontSize]
  -[_SFSiteIconView .cxx_destruct]
  -[_SFSiteIconView _updateMonogramLabelSizeAndFont]
  -[_SFSiteIconView _setSiteIcon:withBackgroundColor:]
  -[_SFSiteIconView setBookmark:]
  -[_SFSiteIconView updateBookmarkData]
  -[_SFSiteIconView layoutSubviews]
  -[_SFSiteIconView _setImage:withBackgroundColor:]
  -[_SFSiteIconView shouldShowDropShadow]
  -[_SFSiteIconView setUpdateObserver:]
  -[_SFSiteIconView setShouldUseModernStyling:]
  -[_SFSiteIconView _setMonogramWithString:backgroundColor:]
  -[_SFSiteIconView _inferredIconSize]
  -[_SFSiteIconView _effectiveBackgroundColor]
  -[_SFSiteIconView _updateSiteIconViewWithTouchIconResponse:]
  -[_SFSiteIconView _imageFrame]
  -[_SFSiteIconView _displayDefaultFolderIcon]
  -[_SFSiteIconView _glyphConfiguration]
  -[_SFSiteIconView _setGlyph:withBackgroundColor:]
  -[_SFSiteIconView shouldUseModernStyling]
  -[_SFSiteIconView _updateGlyphConfiguration]
  -[_SFSiteIconView setLeadingImage:]
  -[_SFSiteIconView initWithFrame:]
  -[_SFSiteIconView _cancelTouchIconRequest]
  -[_SFSiteIconView setImage:]
  -[_SFSiteIconView dealloc]
  -[_SFSiteIconView updateObserver]
  -[_SFSiteIconView setShouldShowDropShadow:]


_SFHairlineBorderView : UIView
 @property  UIColor *borderColor

  // instance methods
  -[_SFHairlineBorderView borderColor]
  -[_SFHairlineBorderView setBorderColor:]
  -[_SFHairlineBorderView .cxx_destruct]
  -[_SFHairlineBorderView layoutSubviews]
  -[_SFHairlineBorderView initWithFrame:]


SFFeatureManager : WBUFeatureManager
 @property  BOOL canUseLoweredCapsule
 @property  long long preferredCapsuleLayoutStyle
 @property  BOOL showRectangularTabsInSeparateBar
 @property  BOOL usesFormatMenuInUnifiedTabBar
 @property  BOOL usesCapsuleInCompactPad
 @property  BOOL tabDocumentCanHideToolbar

  // class methods
  +[SFFeatureManager sharedFeatureManager]

  // instance methods
  -[SFFeatureManager setTabDocumentCanHideToolbar:]
  -[SFFeatureManager init]
  -[SFFeatureManager preferredCapsuleLayoutStyle]
  -[SFFeatureManager showRectangularTabsInSeparateBar]
  -[SFFeatureManager usesCapsuleInCompactPad]
  -[SFFeatureManager tabDocumentCanHideToolbar]
  -[SFFeatureManager usesFormatMenuInUnifiedTabBar]
  -[SFFeatureManager canUseLoweredCapsule]


SFUnifiedTabBarItemAvailabilityAction : NSObject
 @property  NSString *title
 @property  UIImage *image
 @property  long long buttonType
 @property  @? action

  // instance methods
  -[SFUnifiedTabBarItemAvailabilityAction performAction]
  -[SFUnifiedTabBarItemAvailabilityAction image]
  -[SFUnifiedTabBarItemAvailabilityAction .cxx_destruct]
  -[SFUnifiedTabBarItemAvailabilityAction buttonType]
  -[SFUnifiedTabBarItemAvailabilityAction action]
  -[SFUnifiedTabBarItemAvailabilityAction title]
  -[SFUnifiedTabBarItemAvailabilityAction initWithTitle:image:buttonType:action:]


SFUnifiedTabBarItemViewCloseButton : UIButton
  // instance methods
  -[SFUnifiedTabBarItemViewCloseButton pointInside:withEvent:]
  -[SFUnifiedTabBarItemViewCloseButton pointInsideForPointer:]


SFUnifiedTabBarItemView : SFUnifiedBarItemView <_SFFluidProgressViewDelegate, PKScribbleInteractionDelegate, PKScribbleInteractionElementSource>
 @property  <SFUnifiedTabBarItemViewDelegate> *delegate
 @property  UIImage *icon
 @property  NSString *title
 @property  NSString *titleWhenActive
 @property  NSString *textWhenExpanded
 @property  unsigned long startIndexOfTitleInTextWhenExpanded
 @property  NSString *titleTextStyle
 @property  BOOL showsSearchIcon
 @property  BOOL showsLockIcon
 @property  BOOL showsVoiceSearchButton
 @property  BOOL showsSecurityAnnotation
 @property  long long securityAnnotation
 @property  BOOL hasFocusedSensitiveInputField
 @property  UIView *menuPopoverSourceView
 @property  BOOL menuButtonSelected
 @property  BOOL showsTranslationIcon
 @property  BOOL showsStopReloadButton
 @property  BOOL showsPersistentStopReloadButton
 @property  BOOL stopReloadButtonShowsStop
 @property  NSDate *lastReloadDate
 @property  unsigned long mediaStateIcon
 @property  _SFFluidProgressView *progressView
 @property  BOOL active
 @property  BOOL showsCloseButton
 @property  BOOL hidesIconWhenActive
 @property  UITextField *searchField
 @property  BOOL showsSearchField
 @property  long long accessoryButtonLayout
 @property  long long contentAlignment
 @property  SFUnifiedTabBarItemTitleContainerView *squishedTitleContainer
 @property  NSArray *squishedAccessoryViews
 @property  BOOL showsSquishedAccessoryViews
 @property  SFWebExtensionButtonConfiguration *extensionButtonConfiguration
 @property  unsigned long menuButtonBadges
 @property  BOOL showsBadgeOnExtensionsButton
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFUnifiedTabBarItemView searchField]
  -[SFUnifiedTabBarItemView setSearchField:]
  -[SFUnifiedTabBarItemView menuButtonSelected]
  -[SFUnifiedTabBarItemView updateAccessibilityIdentifier]
  -[SFUnifiedTabBarItemView icon]
  -[SFUnifiedTabBarItemView setTitle:]
  -[SFUnifiedTabBarItemView textWhenExpanded]
  -[SFUnifiedTabBarItemView isActive]
  -[SFUnifiedTabBarItemView updateCornerRadius]
  -[SFUnifiedTabBarItemView progressView]
  -[SFUnifiedTabBarItemView .cxx_destruct]
  -[SFUnifiedTabBarItemView setStopReloadButtonShowsStop:]
  -[SFUnifiedTabBarItemView setDownloadProgress:animated:]
  -[SFUnifiedTabBarItemView setMediaStateIcon:]
  -[SFUnifiedTabBarItemView showsVoiceSearchButton]
  -[SFUnifiedTabBarItemView setFrame:]
  -[SFUnifiedTabBarItemView layoutSubviews]
  -[SFUnifiedTabBarItemView _closeButtonTapped]
  -[SFUnifiedTabBarItemView tintColorDidChange]
  -[SFUnifiedTabBarItemView securityAnnotation]
  -[SFUnifiedTabBarItemView setDelegate:]
  -[SFUnifiedTabBarItemView setHovering:]
  -[SFUnifiedTabBarItemView showsLockIcon]
  -[SFUnifiedTabBarItemView _scribbleInteraction:willBeginWritingInElement:]
  -[SFUnifiedTabBarItemView _scribbleInteraction:shouldBeginAtLocation:]
  -[SFUnifiedTabBarItemView mediaStateIcon]
  -[SFUnifiedTabBarItemView _scribbleInteraction:didFinishWritingInElement:]
  -[SFUnifiedTabBarItemView _scribbleInteraction:frameForElement:]
  -[SFUnifiedTabBarItemView prepareForReuse]
  -[SFUnifiedTabBarItemView setIcon:]
  -[SFUnifiedTabBarItemView _scribbleInteraction:requestElementsInRect:completion:]
  -[SFUnifiedTabBarItemView title]
  -[SFUnifiedTabBarItemView setProgressView:]
  -[SFUnifiedTabBarItemView initWithFrame:]
  -[SFUnifiedTabBarItemView setShowsLockIcon:]
  -[SFUnifiedTabBarItemView _scribbleInteraction:focusElement:initialFocusSelectionReferencePoint:completion:]
  -[SFUnifiedTabBarItemView setSecurityAnnotation:]
  -[SFUnifiedTabBarItemView setActive:]
  -[SFUnifiedTabBarItemView delegate]
  -[SFUnifiedTabBarItemView didMoveToWindow]
  -[SFUnifiedTabBarItemView setShowsVoiceSearchButton:]
  -[SFUnifiedTabBarItemView contentAlignment]
  -[SFUnifiedTabBarItemView canBecomeFocused]
  -[SFUnifiedTabBarItemView setContentAlignment:]
  -[SFUnifiedTabBarItemView showsSecurityAnnotation]
  -[SFUnifiedTabBarItemView dealloc]
  -[SFUnifiedTabBarItemView _voiceSearchAvailabilityDidChange:]
  -[SFUnifiedTabBarItemView showsTranslationIcon]
  -[SFUnifiedTabBarItemView stopReloadButtonShowsStop]
  -[SFUnifiedTabBarItemView setShowsTranslationIcon:]
  -[SFUnifiedTabBarItemView _scribbleInteraction:focusWillTransformElement:]
  -[SFUnifiedTabBarItemView _hover:]
  -[SFUnifiedTabBarItemView _scribbleInteractionIsEnabled:]
  -[SFUnifiedTabBarItemView titleTextStyle]
  -[SFUnifiedTabBarItemView fluidProgressViewWillShowProgress:]
  -[SFUnifiedTabBarItemView fluidProgressViewDidShowProgress:]
  -[SFUnifiedTabBarItemView _progressBarTintColor]
  -[SFUnifiedTabBarItemView setTitleTextStyle:]
  -[SFUnifiedTabBarItemView setLastReloadDate:]
  -[SFUnifiedTabBarItemView setExtensionButtonConfiguration:]
  -[SFUnifiedTabBarItemView setMenuButtonBadges:]
  -[SFUnifiedTabBarItemView setShowsBadgeOnExtensionsButton:]
  -[SFUnifiedTabBarItemView dismissAvailabilityOverlays]
  -[SFUnifiedTabBarItemView setTitleWhenActive:]
  -[SFUnifiedTabBarItemView setTextWhenExpanded:]
  -[SFUnifiedTabBarItemView setStartIndexOfTitleInTextWhenExpanded:]
  -[SFUnifiedTabBarItemView setShowsSearchIcon:]
  -[SFUnifiedTabBarItemView setMenuButtonSelected:]
  -[SFUnifiedTabBarItemView setShowsStopReloadButton:]
  -[SFUnifiedTabBarItemView dismissReaderAvailabilityButton]
  -[SFUnifiedTabBarItemView showReaderAvailabilityOverlay]
  -[SFUnifiedTabBarItemView setHasFocusedSensitiveInputField:]
  -[SFUnifiedTabBarItemView dismissTranslationAvailabilityButton]
  -[SFUnifiedTabBarItemView showTranslationAvailabilityOverlay]
  -[SFUnifiedTabBarItemView lastReloadDate]
  -[SFUnifiedTabBarItemView extensionButtonConfiguration]
  -[SFUnifiedTabBarItemView menuButtonBadges]
  -[SFUnifiedTabBarItemView showsBadgeOnExtensionsButton]
  -[SFUnifiedTabBarItemView applyTheme]
  -[SFUnifiedTabBarItemView setPlatterStyle:]
  -[SFUnifiedTabBarItemView setSquishedInset:]
  -[SFUnifiedTabBarItemView _updateShowsProgressView]
  -[SFUnifiedTabBarItemView _accessoryButtonConfigurationWithImage:scale:]
  -[SFUnifiedTabBarItemView _menuButtonTapped]
  -[SFUnifiedTabBarItemView _menuButtonReceivedTouchDown]
  -[SFUnifiedTabBarItemView _menuButtonClicked]
  -[SFUnifiedTabBarItemView _voiceSearchButtonTapped]
  -[SFUnifiedTabBarItemView _makeAccessoryButtonWithImage:action:]
  -[SFUnifiedTabBarItemView _reloadButtonTapped]
  -[SFUnifiedTabBarItemView _stopButtonTapped]
  -[SFUnifiedTabBarItemView _mediaStateMuteButtonTapped]
  -[SFUnifiedTabBarItemView _extensionButtonTapped:]
  -[SFUnifiedTabBarItemView _viewForAccessoryButtonOfType:]
  -[SFUnifiedTabBarItemView _showsIcon]
  -[SFUnifiedTabBarItemView _squishedInsetToHideCloseButton]
  -[SFUnifiedTabBarItemView _setTrailingButtonsHidden:]
  -[SFUnifiedTabBarItemView _updateAccessoryButtons]
  -[SFUnifiedTabBarItemView showsSearchField]
  -[SFUnifiedTabBarItemView _closeButtonAlphaForSquishedInset]
  -[SFUnifiedTabBarItemView _showsCloseButtonOnHover]
  -[SFUnifiedTabBarItemView _updateCloseButtonForHoverPosition]
  -[SFUnifiedTabBarItemView _layOutTitleContainer]
  -[SFUnifiedTabBarItemView _hasRoomForIconAndCloseButton]
  -[SFUnifiedTabBarItemView _setTitleContainerMasked:]
  -[SFUnifiedTabBarItemView _layOutTitleContainerMask]
  -[SFUnifiedTabBarItemView setShowsSearchField:]
  -[SFUnifiedTabBarItemView _cancelAvailabilityLabelsAnimated:]
  -[SFUnifiedTabBarItemView _dismissAvailabilityButtonsAnimated:]
  -[SFUnifiedTabBarItemView _stopAccessoryButtonUpdateTimer]
  -[SFUnifiedTabBarItemView _stopReloadButtonExpirationTimer]
  -[SFUnifiedTabBarItemView showsSearchIcon]
  -[SFUnifiedTabBarItemView startIndexOfTitleInTextWhenExpanded]
  -[SFUnifiedTabBarItemView hasFocusedSensitiveInputField]
  -[SFUnifiedTabBarItemView _updateFormatMenuButtonAccessories]
  -[SFUnifiedTabBarItemView _updateMenuButtonColor]
  -[SFUnifiedTabBarItemView _updateFormatMenuButtonImage]
  -[SFUnifiedTabBarItemView _readerButtonTapped]
  -[SFUnifiedTabBarItemView _requestAvailabilityOverlayWithAction:]
  -[SFUnifiedTabBarItemView _translationButtonTapped]
  -[SFUnifiedTabBarItemView _requestAvailabilityLabelWithAction:]
  -[SFUnifiedTabBarItemView _presentAvailabilityButtonWithAction:]
  -[SFUnifiedTabBarItemView showsPersistentStopReloadButton]
  -[SFUnifiedTabBarItemView _setNeedsAnimatedAccessoryButtonUpdate]
  -[SFUnifiedTabBarItemView showsStopReloadButton]
  -[SFUnifiedTabBarItemView _startReloadButtonExpirationTimer]
  -[SFUnifiedTabBarItemView _updateProgressViewColor]
  -[SFUnifiedTabBarItemView _updateMediaStateMuteButtonColor]
  -[SFUnifiedTabBarItemView _searchFieldDidChange:]
  -[SFUnifiedTabBarItemView _searchFieldTintColor]
  -[SFUnifiedTabBarItemView _showsFormatMenuButtonAccessories]
  -[SFUnifiedTabBarItemView _updateFormatMenuButtonStyle]
  -[SFUnifiedTabBarItemView _individualExtensionButtonLimit]
  -[SFUnifiedTabBarItemView _temporarilyCoalesceAccessoryButtonUpdates]
  -[SFUnifiedTabBarItemView _updateBadges]
  -[SFUnifiedTabBarItemView _controlsTintColor]
  -[SFUnifiedTabBarItemView _titleTheme]
  -[SFUnifiedTabBarItemView _accessoryButtonTintColor]
  -[SFUnifiedTabBarItemView _secondaryAccessoryButtonTintColor]
  -[SFUnifiedTabBarItemView _shouldUseActiveTheme]
  -[SFUnifiedTabBarItemView titleWhenActive]
  -[SFUnifiedTabBarItemView _availabilityButtonsReplaceFormatMenuButton]
  -[SFUnifiedTabBarItemView _coalescingAccessoryButtonUpdates]
  -[SFUnifiedTabBarItemView _updateAccessoryButtonsAnimated:completion:]
  -[SFUnifiedTabBarItemView _showsAccessoryButtonOfType:]
  -[SFUnifiedTabBarItemView _layOutAccessoryButtons]
  -[SFUnifiedTabBarItemView _setIndexes:ofAccessoryButtonTypes:visible:animated:]
  -[SFUnifiedTabBarItemView _layOutIndexes:ofAccessoryButtonTypes:alongEdge:usingPresentationSize:]
  -[SFUnifiedTabBarItemView _insetForAccessoryButtonOfType:]
  -[SFUnifiedTabBarItemView _widthForAccessoryButtonOfType:]
  -[SFUnifiedTabBarItemView _makeAccessoryButtonWithImage:scale:action:]
  -[SFUnifiedTabBarItemView _addPendingAvailabilityLabelAction:]
  -[SFUnifiedTabBarItemView _startAvailabilityLabelTimerWithDuration:]
  -[SFUnifiedTabBarItemView _presentAvailabilityLabel]
  -[SFUnifiedTabBarItemView _stopAvailabilityLabelTimer]
  -[SFUnifiedTabBarItemView _dismissAvailabilityLabelAnimated:completionHandler:]
  -[SFUnifiedTabBarItemView _showNextAvailabilityLabel]
  -[SFUnifiedTabBarItemView beginTransitioningSearchField]
  -[SFUnifiedTabBarItemView endTransitioningSearchField]
  -[SFUnifiedTabBarItemView _dismissAvailabilityButtonOfType:animated:]
  -[SFUnifiedTabBarItemView _startTimerForAvailabilityButtonOfType:]
  -[SFUnifiedTabBarItemView _dismissAvailabilityButtons:animated:]
  -[SFUnifiedTabBarItemView _dismissExpiredAvailabilityButtons]
  -[SFUnifiedTabBarItemView _commandPressed]
  -[SFUnifiedTabBarItemView menuPopoverSourceView]
  -[SFUnifiedTabBarItemView setShowsCloseButton:]
  -[SFUnifiedTabBarItemView setAccessoryButtonLayout:]
  -[SFUnifiedTabBarItemView setSquishedTitleContainer:]
  -[SFUnifiedTabBarItemView squishedAccessoryViews]
  -[SFUnifiedTabBarItemView setShowsSquishedAccessoryViews:]
  -[SFUnifiedTabBarItemView test_reloadButtonExpirationTimer]
  -[SFUnifiedTabBarItemView pointerRegionIdentifierForInteractionLocation:]
  -[SFUnifiedTabBarItemView showsCloseButton]
  -[SFUnifiedTabBarItemView hidesIconWhenActive]
  -[SFUnifiedTabBarItemView setHidesIconWhenActive:]
  -[SFUnifiedTabBarItemView accessoryButtonLayout]
  -[SFUnifiedTabBarItemView squishedTitleContainer]
  -[SFUnifiedTabBarItemView showsSquishedAccessoryViews]


SFUnifiedTabBarPointerRegionIdentifier : NSObject
 @property  unsigned long pointerStyle
 @property  UIView *viewForPreview

  // instance methods
  -[SFUnifiedTabBarPointerRegionIdentifier viewForPreview]
  -[SFUnifiedTabBarPointerRegionIdentifier .cxx_destruct]
  -[SFUnifiedTabBarPointerRegionIdentifier isEqual:]
  -[SFUnifiedTabBarPointerRegionIdentifier setPointerStyle:]
  -[SFUnifiedTabBarPointerRegionIdentifier pointerStyle]
  -[SFUnifiedTabBarPointerRegionIdentifier setViewForPreview:]


SFBookmarksLockCoordinator : NSObject
 @property  BOOL hasBookmarksLock

  // class methods
  +[SFBookmarksLockCoordinator sharedCoordinator]
  +[SFBookmarksLockCoordinator showLockedDatabaseAlertForAction:fromViewController:]

  // instance methods
  -[SFBookmarksLockCoordinator .cxx_destruct]
  -[SFBookmarksLockCoordinator init]
  -[SFBookmarksLockCoordinator dealloc]
  -[SFBookmarksLockCoordinator _willResignActive]
  -[SFBookmarksLockCoordinator _didBecomeActive]
  -[SFBookmarksLockCoordinator unlockBookmarksIfNeeded]
  -[SFBookmarksLockCoordinator lockBookmarks]
  -[SFBookmarksLockCoordinator _clearBookmarkLockTimer]
  -[SFBookmarksLockCoordinator _unlockBookmarksNow]
  -[SFBookmarksLockCoordinator hasBookmarksLock]
  -[SFBookmarksLockCoordinator unlockBookmarksSoon]


SFStartPageCustomizationCell : UICollectionViewListCell
 @property  <SFStartPageCustomizationCellDelegate> *delegate
 @property  BOOL on

  // instance methods
  -[SFStartPageCustomizationCell setAccessories:]
  -[SFStartPageCustomizationCell isOn]
  -[SFStartPageCustomizationCell .cxx_destruct]
  -[SFStartPageCustomizationCell setOn:]
  -[SFStartPageCustomizationCell setDelegate:]
  -[SFStartPageCustomizationCell initWithFrame:]
  -[SFStartPageCustomizationCell delegate]
  -[SFStartPageCustomizationCell valueDidChange:]


SFUnifiedBarButton : SFUnifiedBarItem
 @property  NSString *accessibilityIdentifier
 @property  UIImage *image
 @property  NSString *title
 @property  @? action
 @property  BOOL showsPlatter

  // instance methods
  -[SFUnifiedBarButton setTitle:]
  -[SFUnifiedBarButton image]
  -[SFUnifiedBarButton .cxx_destruct]
  -[SFUnifiedBarButton setAction:]
  -[SFUnifiedBarButton view]
  -[SFUnifiedBarButton action]
  -[SFUnifiedBarButton accessibilityIdentifier]
  -[SFUnifiedBarButton title]
  -[SFUnifiedBarButton setImage:]
  -[SFUnifiedBarButton setAccessibilityIdentifier:]
  -[SFUnifiedBarButton setEnabled:]
  -[SFUnifiedBarButton initWithImage:action:]
  -[SFUnifiedBarButton setShowsPlatter:]
  -[SFUnifiedBarButton showsPlatter]
  -[SFUnifiedBarButton _performAction]


SFGradientView : UIView
 @property  CAGradientLayer *gradientLayer

  // class methods
  +[SFGradientView layerClass]
  +[SFGradientView standardGaussianGradientView]

  // instance methods
  -[SFGradientView initWithColors:locations:]
  -[SFGradientView initWithCoder:]
  -[SFGradientView _shouldAnimatePropertyWithKey:]
  -[SFGradientView initWithFrame:]
  -[SFGradientView gradientLayer]


SFCapsuleView : UIView
 @property  UIView *contentContainer
 @property  double backgroundCornerRadius
 @property  double backgroundHeight
 @property  NSString *visualEffectGroupName
 @property  UIVisualEffectView *backgroundView
 @property  UIView *shadowView
 @property  UIView *contentView
 @property  UIView *accessoryView
 @property  NSString *reusableContentViewIdentifier
 @property  @? contentViewUpdateHandler
 @property  _SFBarTheme *theme
 @property  _SFBarTheme *minimizedTheme
 @property  BOOL forceMinimizedTheme
 @property  long long layoutStyle
 @property  BOOL usesPlatterEffect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frameForShadowView
 @property  double minimizedContentHorizontalInset
 @property  BOOL isSelected
 @property  BOOL isMinimized
 @property  long long state
 @property  double minimizationPercent
 @property  {CGAffineTransform=dddddd} contentTransform
 @property  unsigned long directionalCollapsedContentEdge

  // class methods
  +[SFCapsuleView maximumContentSizeCategory]

  // instance methods
  -[SFCapsuleView isMinimized]
  -[SFCapsuleView theme]
  -[SFCapsuleView layoutStyle]
  -[SFCapsuleView .cxx_destruct]
  -[SFCapsuleView layoutSubviews]
  -[SFCapsuleView contentView]
  -[SFCapsuleView setState:]
  -[SFCapsuleView shadowView]
  -[SFCapsuleView setTransform:]
  -[SFCapsuleView setSelected:]
  -[SFCapsuleView setTheme:]
  -[SFCapsuleView state]
  -[SFCapsuleView isSelected]
  -[SFCapsuleView _backgroundFrame]
  -[SFCapsuleView setAccessoryView:]
  -[SFCapsuleView initWithFrame:]
  -[SFCapsuleView safeAreaInsetsDidChange]
  -[SFCapsuleView setContentTransform:]
  -[SFCapsuleView backgroundCornerRadius]
  -[SFCapsuleView setContentView:]
  -[SFCapsuleView setLayoutStyle:]
  -[SFCapsuleView accessoryView]
  -[SFCapsuleView contentTransform]
  -[SFCapsuleView backgroundView]
  -[SFCapsuleView contentContainer]
  -[SFCapsuleView setBackgroundCornerRadius:]
  -[SFCapsuleView applyTheme]
  -[SFCapsuleView willChangeToMinimized:coordinator:]
  -[SFCapsuleView minimizedContentHorizontalInset]
  -[SFCapsuleView setMinimizedContentHorizontalInset:]
  -[SFCapsuleView minimizationPercent]
  -[SFCapsuleView setMinimizationPercent:]
  -[SFCapsuleView setUsesPlatterEffect:]
  -[SFCapsuleView frameForShadowView]
  -[SFCapsuleView setMinimizedTheme:]
  -[SFCapsuleView willReloadWithCoordinator:]
  -[SFCapsuleView reusableContentViewIdentifier]
  -[SFCapsuleView setContentViewUpdateHandler:]
  -[SFCapsuleView setReusableContentViewIdentifier:]
  -[SFCapsuleView setDirectionalCollapsedContentEdge:]
  -[SFCapsuleView setVisualEffectGroupName:]
  -[SFCapsuleView setBackgroundHeight:]
  -[SFCapsuleView setForceMinimizedTheme:]
  -[SFCapsuleView setAccessoryView:coordinator:]
  -[SFCapsuleView minimizedTheme]
  -[SFCapsuleView _accessoryEdge]
  -[SFCapsuleView _boundsForContent]
  -[SFCapsuleView _collapsedContenInsetEdge]
  -[SFCapsuleView _updateShadowViewTransform]
  -[SFCapsuleView _updateContentViewState]
  -[SFCapsuleView _updateStateWithContentView:]
  -[SFCapsuleView _shouldFadeNonKeyContentForContentView:withPreviousContentView:]
  -[SFCapsuleView _updateAccessoryTheme]
  -[SFCapsuleView _usesMinimizedTheme]
  -[SFCapsuleView visualEffectGroupName]
  -[SFCapsuleView backgroundHeight]
  -[SFCapsuleView contentViewUpdateHandler]
  -[SFCapsuleView forceMinimizedTheme]
  -[SFCapsuleView usesPlatterEffect]
  -[SFCapsuleView directionalCollapsedContentEdge]


SFUnifiedTabBarLayout : NSObject
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _safeArea
 @property  SFUnifiedTabBarItemArrangement *itemArrangement
 @property  SFUnifiedBarMetrics *barMetrics
 @property  unsigned long sizeClass
 @property  {CGPoint=dd} midpointForCenteredContent
 @property  BOOL activeItemIsSquished
 @property  BOOL contentIsCentered
 @property  BOOL centersActiveItemWhenExpanded
 @property  BOOL horizontalSpaceIsExtremelyConstrained
 @property  BOOL isCurrentlyScrollable
 @property  {CGSize=dd} contentSize
 @property  double maximumActiveItemWidth
 @property  NSIndexSet *visibleItemIndexes
 @property  NSArray *visibleItems
 @property  unsigned long indexOfCenterItem
 @property  unsigned long maximumNumberOfVisibleItems
 @property  SFUnifiedBarItem *hoveringItem

  // class methods
  +[SFUnifiedTabBarLayout minimumInactiveItemWidthForSizeClass:]

  // instance methods
  -[SFUnifiedTabBarLayout sizeClass]
  -[SFUnifiedTabBarLayout contentSize]
  -[SFUnifiedTabBarLayout barMetrics]
  -[SFUnifiedTabBarLayout .cxx_destruct]
  -[SFUnifiedTabBarLayout setSizeClass:]
  -[SFUnifiedTabBarLayout frameForItem:]
  -[SFUnifiedTabBarLayout itemAtPoint:]
  -[SFUnifiedTabBarLayout _updateContentSize]
  -[SFUnifiedTabBarLayout visibleItems]
  -[SFUnifiedTabBarLayout setBarMetrics:]
  -[SFUnifiedTabBarLayout visibleItemIndexes]
  -[SFUnifiedTabBarLayout maximumNumberOfVisibleItems]
  -[SFUnifiedTabBarLayout _minimumItemSpacing]
  -[SFUnifiedTabBarLayout _maximumItemSpacing]
  -[SFUnifiedTabBarLayout midpointForCenteredContent]
  -[SFUnifiedTabBarLayout updateItemSizesIfNeeded]
  -[SFUnifiedTabBarLayout _determineOffsetForCenteringExpandedItem]
  -[SFUnifiedTabBarLayout updateItemSizes]
  -[SFUnifiedTabBarLayout _updateItemWidths]
  -[SFUnifiedTabBarLayout _updateSquishedActiveItemWidth]
  -[SFUnifiedTabBarLayout _safeArea]
  -[SFUnifiedTabBarLayout _minimumInactiveItemWidth]
  -[SFUnifiedTabBarLayout horizontalSpaceIsExtremelyConstrained]
  -[SFUnifiedTabBarLayout _effectiveMinimumActiveItemWidth]
  -[SFUnifiedTabBarLayout maximumActiveItemWidth]
  -[SFUnifiedTabBarLayout centersActiveItemWhenExpanded]
  -[SFUnifiedTabBarLayout _offsetForItemAtIndex:]
  -[SFUnifiedTabBarLayout _pinnedActiveItemOffsetSquishingActiveItem:activeItemFrame:]
  -[SFUnifiedTabBarLayout _unpinnedFrameForItemAtIndex:]
  -[SFUnifiedTabBarLayout _adjustedActiveItemFrame:pinActiveItem:squishActiveItem:centerExpandedItem:]
  -[SFUnifiedTabBarLayout _contentArea]
  -[SFUnifiedTabBarLayout _zPositionForItem:]
  -[SFUnifiedTabBarLayout _slideFrame:forItemAtIndex:pinnedActiveItemOffset:]
  -[SFUnifiedTabBarLayout _scrollSlowingLayoutInfoForItemAtIndex:withLayoutInfo:activeItemFrame:]
  -[SFUnifiedTabBarLayout _enumerateFramesForItemsAtIndexes:pinActiveItem:usingBlock:]
  -[SFUnifiedTabBarLayout _activeItemPinnableArea]
  -[SFUnifiedTabBarLayout _widthForItem:]
  -[SFUnifiedTabBarLayout _frameForItem:withOffset:pinActiveItem:squishActiveItem:centerExpandedItem:]
  -[SFUnifiedTabBarLayout _midpointForCenteredContentInScrollView]
  -[SFUnifiedTabBarLayout _distanceToEdgeForItemAtIndex:withFrame:activeItemFrame:occludedEdge:]
  -[SFUnifiedTabBarLayout _minimumHorizontalOffsetForOccludedItems]
  -[SFUnifiedTabBarLayout _offsetForItemAtIndex:inItems:]
  -[SFUnifiedTabBarLayout _indexOfItemClosestToPoint:]
  -[SFUnifiedTabBarLayout _insetsForScrollingToItemAtIndex:]
  -[SFUnifiedTabBarLayout _contentOffsetForScrollingToRegionWithMinX:maxX:insets:]
  -[SFUnifiedTabBarLayout _insetsForActiveItemPinnableArea]
  -[SFUnifiedTabBarLayout indexesOfItemsVisibleInRect:]
  -[SFUnifiedTabBarLayout _insetToRevealNextItem]
  -[SFUnifiedTabBarLayout _minimumActiveItemWidth]
  -[SFUnifiedTabBarLayout _minimumActiveItemWidthRatio]
  -[SFUnifiedTabBarLayout _maximumActiveItemWidthForCenteringExpandedItem]
  -[SFUnifiedTabBarLayout initWithItemArrangement:configuration:]
  -[SFUnifiedTabBarLayout activeItemIsSquished]
  -[SFUnifiedTabBarLayout enumerateLayoutForItemsAtIndexes:usingBlock:]
  -[SFUnifiedTabBarLayout enumerateInitialLayoutForAppearingItemsAtIndexes:withDistanceToScroll:usingBlock:]
  -[SFUnifiedTabBarLayout enumerateFinalLayoutForDisappearingItemsAtIndexes:withDistanceScrolled:usingBlock:]
  -[SFUnifiedTabBarLayout indexOfCenterItem]
  -[SFUnifiedTabBarLayout itemClosestToPoint:]
  -[SFUnifiedTabBarLayout contentOffsetForScrollingToItemAtIndex:]
  -[SFUnifiedTabBarLayout contentOffsetForScrollingToDroppingItems]
  -[SFUnifiedTabBarLayout isCurrentlyScrollable]
  -[SFUnifiedTabBarLayout setItemAtIndex:isVisible:]
  -[SFUnifiedTabBarLayout setItemAtIndex:isOccluded:]
  -[SFUnifiedTabBarLayout itemsVisibleInRect:]
  -[SFUnifiedTabBarLayout itemArrangement]
  -[SFUnifiedTabBarLayout setMidpointForCenteredContent:]
  -[SFUnifiedTabBarLayout contentIsCentered]
  -[SFUnifiedTabBarLayout hoveringItem]
  -[SFUnifiedTabBarLayout setHoveringItem:]


SFUnifiedTabBarLayoutConfiguration : NSObject
 @property  UIScrollView *scrollView
 @property  SFUnifiedBarMetrics *barMetrics
 @property  unsigned long sizeClass
 @property  {CGPoint=dd} midpointForCenteredContent
 @property  BOOL standalone
 @property  BOOL flipped
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} visibleRectOverride

  // instance methods
  -[SFUnifiedTabBarLayoutConfiguration sizeClass]
  -[SFUnifiedTabBarLayoutConfiguration scrollView]
  -[SFUnifiedTabBarLayoutConfiguration barMetrics]
  -[SFUnifiedTabBarLayoutConfiguration .cxx_destruct]
  -[SFUnifiedTabBarLayoutConfiguration setSizeClass:]
  -[SFUnifiedTabBarLayoutConfiguration flipped]
  -[SFUnifiedTabBarLayoutConfiguration setFlipped:]
  -[SFUnifiedTabBarLayoutConfiguration initWithScrollView:]
  -[SFUnifiedTabBarLayoutConfiguration setBarMetrics:]
  -[SFUnifiedTabBarLayoutConfiguration isStandalone]
  -[SFUnifiedTabBarLayoutConfiguration midpointForCenteredContent]
  -[SFUnifiedTabBarLayoutConfiguration visibleRectOverride]
  -[SFUnifiedTabBarLayoutConfiguration setMidpointForCenteredContent:]
  -[SFUnifiedTabBarLayoutConfiguration setStandalone:]
  -[SFUnifiedTabBarLayoutConfiguration setVisibleRectOverride:]


SFWebExtensionsController : WBSWebExtensionsController
 @property  <SFWebExtensionsControllerDelegate> *delegate
 @property  WKProcessPool *processPool
 @property  NSString *applicationNameForUserAgent
 @property  <_SFNavigationIntentHandling> *navigationIntentHandler
 @property  NSMutableDictionary *tabIDToTabPositionForTabsInTransit
 @property  NSString *recentlyInstalledExtensionCountString
 @property  SFWebExtension *currentExtensionForPermissionBanner
 @property  BOOL parentalControlsAreEnabledForExtensions

  // class methods
  +[SFWebExtensionsController _skipLoadingEnabledExtensionsAtLaunchPreferenceKey]
  +[SFWebExtensionsController extensionIdentifierToBaseURIMapBundleParameterKey]
  +[SFWebExtensionsController contentBlockerStore]
  +[SFWebExtensionsController sharedController]
  +[SFWebExtensionsController _createWebExtensionContentBlockerDirectoryWithURL:]
  +[SFWebExtensionsController _extensionDefaults]
  +[SFWebExtensionsController _extensionDataClass]

  // instance methods
  -[SFWebExtensionsController processPool]
  -[SFWebExtensionsController setNavigationIntentHandler:]
  -[SFWebExtensionsController .cxx_destruct]
  -[SFWebExtensionsController _allWindows]
  -[SFWebExtensionsController setApplicationNameForUserAgent:]
  -[SFWebExtensionsController setProcessPool:]
  -[SFWebExtensionsController applicationNameForUserAgent]
  -[SFWebExtensionsController navigationIntentHandler]
  -[SFWebExtensionsController _pinTab:]
  -[SFWebExtensionsController recentlyInstalledExtensionCountString]
  -[SFWebExtensionsController toolbarItemIdealPointSize]
  -[SFWebExtensionsController _updateWebExtensionDataMapForExtension:]
  -[SFWebExtensionsController _showPromptForExtensionDisabledBecauseItDoesNotSupportThisVersionOfSafariWithMessage:extensionIdentifier:]
  -[SFWebExtensionsController _canSendMessageFromWebView:]
  -[SFWebExtensionsController _tabForWebView:]
  -[SFWebExtensionsController _findTabInAnyWindowWithID:]
  -[SFWebExtensionsController _clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:]
  -[SFWebExtensionsController _showAccessRequestAlertForExtension:domains:callingAPIName:responseBlock:]
  -[SFWebExtensionsController _tabForTabID:webView:extension:]
  -[SFWebExtensionsController _windowForWindowID:webView:extension:]
  -[SFWebExtensionsController _relateParentTab:toTab:]
  -[SFWebExtensionsController _createNewTabInWindow:tabIndex:url:makeActive:completionHandler:]
  -[SFWebExtensionsController _duplicateTab:]
  -[SFWebExtensionsController _unpinTab:]
  -[SFWebExtensionsController _captureVisibleTab:format:quality:completionHandler:]
  -[SFWebExtensionsController lastFocusedWindow]
  -[SFWebExtensionsController _updateWindow:updateInfo:]
  -[SFWebExtensionsController _developerIdentifierForExtension:]
  -[SFWebExtensionsController _safariShortVersion]
  -[SFWebExtensionsController removeContentBlockerForExtension:]
  -[SFWebExtensionsController extensionsEnabled]
  -[SFWebExtensionsController _didDiscoverExtensionCount:]
  -[SFWebExtensionsController _notifyObserversContentBlockerListDidChange]
  -[SFWebExtensionsController _isExtensionBlockedByBlocklist:developerIdentifier:]
  -[SFWebExtensionsController extensionSettingsWereUpdatedExternallyFromSettingsApp:]
  -[SFWebExtensionsController reportCommandShortcutConflictsIfNecessaryForExtension:presentingViewController:completionHandler:]
  -[SFWebExtensionsController parentalControlsAreEnabledForExtensions]
  -[SFWebExtensionsController _isExtensionBlockedByBlocklist:completionHandler:]
  -[SFWebExtensionsController _updateExtensionsStateAfterExtensionSettingsWereUpdatedExternally:shouldUpdateExtensionPermissionsAndEnabledState:]
  -[SFWebExtensionsController _extensionWithComposedIdentifier:wasEnabledOrDisabledByExtensionSettings:]
  -[SFWebExtensionsController currentExtensionForPermissionBanner]
  -[SFWebExtensionsController _reportCommandShortcutConflictsForExtension:conflicts:presentingViewController:completionHandler:]
  -[SFWebExtensionsController _commandShortcutConflictAlertForExtension:conflict:okAction:]
  -[SFWebExtensionsController showPermissionBannerForExtension:]
  -[SFWebExtensionsController hidePermissionBannerForExtension:]
  -[SFWebExtensionsController didViewToolbarItemBadgesInTabWithIdentifier:]
  -[SFWebExtensionsController hasUpdatedToolbarItemBadgeTextInTabWithIdentifier:]
  -[SFWebExtensionsController fireAppropriateTabMovementEventForTabState:]
  -[SFWebExtensionsController fireOnMovedEventForTabsWithPreviousTabPositions:currentTabsPositions:]
  -[SFWebExtensionsController fireAttachmentEventsForTabsWithPreviousTabPositions:]
  -[SFWebExtensionsController didDeactivateWindow]
  -[SFWebExtensionsController compileDeclarativeNetRequestExtension:rules:completionHandler:]
  -[SFWebExtensionsController tabIDToTabPositionForTabsInTransit]
  -[SFWebExtensionsController setTabIDToTabPositionForTabsInTransit:]


SFUnifiedBarButtonView : SFUnifiedBarItemView <UIPointerInteractionDelegate>
 @property  UIImage *image
 @property  BOOL shouldTrailingAlignImage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFUnifiedBarButtonView preferredWidth]
  -[SFUnifiedBarButtonView traitCollectionDidChange:]
  -[SFUnifiedBarButtonView _hitRect]
  -[SFUnifiedBarButtonView image]
  -[SFUnifiedBarButtonView _selectedIndicatorBounds]
  -[SFUnifiedBarButtonView .cxx_destruct]
  -[SFUnifiedBarButtonView tintColorDidChange]
  -[SFUnifiedBarButtonView initWithFrame:]
  -[SFUnifiedBarButtonView pointInside:withEvent:]
  -[SFUnifiedBarButtonView setImage:]
  -[SFUnifiedBarButtonView pointerInteraction:regionForRequest:defaultRegion:]
  -[SFUnifiedBarButtonView setEnabled:]
  -[SFUnifiedBarButtonView updateTitleFont]
  -[SFUnifiedBarButtonView shouldTrailingAlignImage]
  -[SFUnifiedBarButtonView setShouldTrailingAlignImage:]


SFVibrantSeparatorView : UIVisualEffectView
  // instance methods
  -[SFVibrantSeparatorView initWithFrame:]


SFStartPageBackgroundImageModel : NSObject
 @property  WBSStartPageBackgroundImageDescription *imageDescription
 @property  NSItemProvider *itemProvider
 @property  BOOL isCustomImage
 @property  BOOL selected

  // instance methods
  -[SFStartPageBackgroundImageModel itemProvider]
  -[SFStartPageBackgroundImageModel imageDescription]
  -[SFStartPageBackgroundImageModel .cxx_destruct]
  -[SFStartPageBackgroundImageModel isEqual:]
  -[SFStartPageBackgroundImageModel initWithItemProvider:]
  -[SFStartPageBackgroundImageModel isSelected]
  -[SFStartPageBackgroundImageModel isCustomImage]
  -[SFStartPageBackgroundImageModel initWithIndex:inDataSource:selected:]
  -[SFStartPageBackgroundImageModel getThumbnailImageWithCompletionHandler:]


SFStoreBannerTracker : NSObject
  // class methods
  +[SFStoreBannerTracker sharedTracker]

  // instance methods
  -[SFStoreBannerTracker filePath]
  -[SFStoreBannerTracker load]
  -[SFStoreBannerTracker clear]
  -[SFStoreBannerTracker save]
  -[SFStoreBannerTracker .cxx_destruct]
  -[SFStoreBannerTracker init]
  -[SFStoreBannerTracker isProductBannerBlocked:completion:]
  -[SFStoreBannerTracker blockProductBanner:]


SFSectionDisclosureButton : UIButton
 @property  BOOL expanded

  // instance methods
  -[SFSectionDisclosureButton isExpanded]
  -[SFSectionDisclosureButton toggleExpanded]
  -[SFSectionDisclosureButton .cxx_destruct]
  -[SFSectionDisclosureButton initWithFrame:expanded:]
  -[SFSectionDisclosureButton updateExpanded]
  -[SFSectionDisclosureButton setExpanded:]
  -[SFSectionDisclosureButton dealloc]
  -[SFSectionDisclosureButton buttonShapesEnabledDidChange]


SFBannerTheme : SFThemeColorBarTheme
 @property  UIColor *separatorColor

  // instance methods
  -[SFBannerTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[SFBannerTheme separatorColor]
  -[SFBannerTheme .cxx_destruct]


SFDialogView : UIView
 @property  <SFDialogViewDelegate> *delegate
 @property  UIView *contentView

  // instance methods
  -[SFDialogView initWithCoder:]
  -[SFDialogView .cxx_destruct]
  -[SFDialogView contentView]
  -[SFDialogView setDelegate:]
  -[SFDialogView becomeFirstResponder]
  -[SFDialogView setObscuredInsets:]
  -[SFDialogView setMessageText:]
  -[SFDialogView initWithFrame:]
  -[SFDialogView didAppear]
  -[SFDialogView delegate]
  -[SFDialogView setTitleText:]
  -[SFDialogView willDisappear]
  -[SFDialogView _keyboardDismissGesture:]
  -[SFDialogView setUsesOpaqueAppearance:]
  -[SFDialogView setInputText:placeholder:]
  -[SFDialogView setPasswordText:placeholder:]
  -[SFDialogView setTableViewRows:didSelectRowAction:]
  -[SFDialogView setDialogActions:]


SFCapsuleCollectionActionView : UIControl
 @property  UIAction *action

  // instance methods
  -[SFCapsuleCollectionActionView .cxx_destruct]
  -[SFCapsuleCollectionActionView setAction:]
  -[SFCapsuleCollectionActionView action]
  -[SFCapsuleCollectionActionView initWithFrame:]


SFAutomaticTabClosingUtilities : NSObject
  // class methods
  +[SFAutomaticTabClosingUtilities automaticTabClosingInterval]
  +[SFAutomaticTabClosingUtilities setAutomaticTabClosingInterval:]
  +[SFAutomaticTabClosingUtilities shouldCloseTabsAutomaticallyWhenEnteringForeground]
  +[SFAutomaticTabClosingUtilities userHasPreferenceForAutomaticTabClosingInterval]
  +[SFAutomaticTabClosingUtilities resetAutomaticTabClosingIntervalPreference]
  +[SFAutomaticTabClosingUtilities setMostDistantLastViewedTime:]
  +[SFAutomaticTabClosingUtilities clearMostDistantLastViewedTime]


SFTouchDownGestureRecognizer : UIGestureRecognizer
  // instance methods
  -[SFTouchDownGestureRecognizer initWithTarget:action:]
  -[SFTouchDownGestureRecognizer touchesBegan:withEvent:]


SFShadowView : UIImageView
  // instance methods
  -[SFShadowView traitCollectionDidChange:]
  -[SFShadowView initWithFrame:]
  -[SFShadowView frameWithContentWithFrame:]


SFToggleBackgroundLayer : CAShapeLayer
  // instance methods
  -[SFToggleBackgroundLayer implicitAnimationForKeyPath:]


SFToggleBackgroundView : UIView
  // class methods
  +[SFToggleBackgroundView layerClass]

  // instance methods
  -[SFToggleBackgroundView _setContinuousCornerRadius:]
  -[SFToggleBackgroundView layoutSubviews]
  -[SFToggleBackgroundView tintColorDidChange]
  -[SFToggleBackgroundView _dynamicUserInterfaceTraitDidChange]


SFNavigationBarToggleButton : SFClickableButton <UIPointerInteractionDelegate>
 @property  UIImage *image
 @property  UIImage *secondaryImage
 @property  UIColor *secondaryImageColor
 @property  UIImage *tertiaryImage
 @property  UIColor *tertiaryImageColor
 @property  UIView *accessoryView
 @property  double minimumSideMargin
 @property  BOOL showsBadge
 @property  BOOL drawsLightGlyph
 @property  double resizableBackgroundCornerRadius
 @property  long long cornerRoundingMode
 @property  double insetFromBackground
 @property  BOOL usesInsetFromBackground
 @property  UIColor *glyphTintColor
 @property  BOOL highlightsBackground
 @property  UIImageSymbolConfiguration *preferredSymbolConfiguration
 @property  UIPointerInteraction *pointerInteraction
 @property  UIView *pointerPreviewContainer
 @property  UIView *tiplessPopoverSourceView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFNavigationBarToggleButton glyphSize]
  +[SFNavigationBarToggleButton formatMenuImage]
  +[SFNavigationBarToggleButton readerImage]
  +[SFNavigationBarToggleButton translationImage]
  +[SFNavigationBarToggleButton extensionsImage]

  // instance methods
  -[SFNavigationBarToggleButton setHighlighted:]
  -[SFNavigationBarToggleButton pointerInteraction]
  -[SFNavigationBarToggleButton glyphTintColor]
  -[SFNavigationBarToggleButton pointerInteraction:styleForRegion:]
  -[SFNavigationBarToggleButton setGlyphTintColor:]
  -[SFNavigationBarToggleButton pointerInteraction:willEnterRegion:animator:]
  -[SFNavigationBarToggleButton pointerInteraction:willExitRegion:animator:]
  -[SFNavigationBarToggleButton image]
  -[SFNavigationBarToggleButton .cxx_destruct]
  -[SFNavigationBarToggleButton preferredSymbolConfiguration]
  -[SFNavigationBarToggleButton setPreferredSymbolConfiguration:]
  -[SFNavigationBarToggleButton layoutSubviews]
  -[SFNavigationBarToggleButton tintColorDidChange]
  -[SFNavigationBarToggleButton setSelected:]
  -[SFNavigationBarToggleButton setAccessoryView:]
  -[SFNavigationBarToggleButton setImage:]
  -[SFNavigationBarToggleButton accessoryView]
  -[SFNavigationBarToggleButton pointerInteraction:regionForRequest:defaultRegion:]
  -[SFNavigationBarToggleButton setSecondaryImage:]
  -[SFNavigationBarToggleButton secondaryImage]
  -[SFNavigationBarToggleButton intrinsicContentSize]
  -[SFNavigationBarToggleButton setUsesInsetFromBackground:]
  -[SFNavigationBarToggleButton setResizableBackgroundCornerRadius:]
  -[SFNavigationBarToggleButton initWithImage:forInputMode:]
  -[SFNavigationBarToggleButton setHighlightsBackground:]
  -[SFNavigationBarToggleButton setMinimumSideMargin:]
  -[SFNavigationBarToggleButton setPointerPreviewContainer:]
  -[SFNavigationBarToggleButton tiplessPopoverSourceView]
  -[SFNavigationBarToggleButton setShowsBadge:]
  -[SFNavigationBarToggleButton setTertiaryImage:]
  -[SFNavigationBarToggleButton setSecondaryImageColor:]
  -[SFNavigationBarToggleButton setTertiaryImageColor:]
  -[SFNavigationBarToggleButton setCornerRoundingMode:]
  -[SFNavigationBarToggleButton setInsetFromBackground:]
  -[SFNavigationBarToggleButton tertiaryImage]
  -[SFNavigationBarToggleButton secondaryImageColor]
  -[SFNavigationBarToggleButton tertiaryImageColor]
  -[SFNavigationBarToggleButton minimumSideMargin]
  -[SFNavigationBarToggleButton showsBadge]
  -[SFNavigationBarToggleButton drawsLightGlyph]
  -[SFNavigationBarToggleButton setDrawsLightGlyph:]
  -[SFNavigationBarToggleButton resizableBackgroundCornerRadius]
  -[SFNavigationBarToggleButton cornerRoundingMode]
  -[SFNavigationBarToggleButton insetFromBackground]
  -[SFNavigationBarToggleButton usesInsetFromBackground]
  -[SFNavigationBarToggleButton highlightsBackground]
  -[SFNavigationBarToggleButton pointerPreviewContainer]
  -[SFNavigationBarToggleButton setTiplessPopoverSourceView:]


_SFFaviconProvider : WBSFaviconProvider
  // class methods
  +[_SFFaviconProvider _faviconWithSystemImageNamed:]
  +[_SFFaviconProvider fallbackFavicon]
  +[_SFFaviconProvider favoritesFavicon]
  +[_SFFaviconProvider bookmarksFavicon]
  +[_SFFaviconProvider historyFavicon]
  +[_SFFaviconProvider readingListFavicon]
  +[_SFFaviconProvider sharedWithYouFavicon]

  // instance methods
  -[_SFFaviconProvider fallbackIconForRequest:]
  -[_SFFaviconProvider .cxx_destruct]
  -[_SFFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:isReadOnly:shouldCheckIntegrityWhenOpeningDatabaseBlock:]


SFClipLink : NSObject
 @property  NSURL *url
 @property  NSString *bundleIdentifier
 @property  NSString *clipName
 @property  NSString *appName
 @property  NSString *actionTitle
 @property  NSString *actionCaption
 @property  UIImage *icon
 @property  BOOL siteRequestsShowCard

  // class methods
  +[SFClipLink iconHeight]
  +[SFClipLink localizedUppercaseStringForAction:]
  +[SFClipLink localizedCaptionForClipNamed:action:]

  // instance methods
  -[SFClipLink appName]
  -[SFClipLink icon]
  -[SFClipLink bundleIdentifier]
  -[SFClipLink clipName]
  -[SFClipLink url]
  -[SFClipLink .cxx_destruct]
  -[SFClipLink actionTitle]
  -[SFClipLink setActionTitle:]
  -[SFClipLink setBundleIdentifier:]
  -[SFClipLink setUrl:]
  -[SFClipLink setIcon:]
  -[SFClipLink setAppName:]
  -[SFClipLink initWithURL:bundleIdentifier:actionTitle:]
  -[SFClipLink getClipAttributesWithCompletionHandler:]
  -[SFClipLink setClipName:]
  -[SFClipLink actionCaption]
  -[SFClipLink setActionCaption:]
  -[SFClipLink siteRequestsShowCard]
  -[SFClipLink setSiteRequestsShowCard:]


SFStartPageFooterCell : UICollectionViewCell
 @property  UIAction *action

  // class methods
  +[SFStartPageFooterCell reuseIdentifier]

  // instance methods
  -[SFStartPageFooterCell primaryActionTriggered:]
  -[SFStartPageFooterCell .cxx_destruct]
  -[SFStartPageFooterCell setAction:]
  -[SFStartPageFooterCell action]
  -[SFStartPageFooterCell initWithFrame:]


SFFooterButton : UIButton
  // instance methods
  -[SFFooterButton initWithCoder:]
  -[SFFooterButton traitCollectionDidChange:]
  -[SFFooterButton initWithFrame:]
  -[SFFooterButton updateConfiguration]


SFStartPageViewController : UIViewController <SFStartPageCollectionDataSource, SFStartPageCollectionDelegate, SFStartPagePreviewProviding, UINavigationControllerDelegate, UIGestureRecognizerDelegate, _UIScrollViewScrollObserver>
 @property  UIScrollView *test_scrollView
 @property  long long backgroundDisplayMode
 @property  <SFStartPageCustomizationDataSource> *customizationDataSource
 @property  long long customizationPolicy
 @property  <SFStartPageDataSource> *dataSource
 @property  <SFStartPageDelegate> *delegate
 @property  double scrollDistance
 @property  <SFStartPageScrollObserver> *scrollObserver
 @property  BOOL trackingDropSession
 @property  UIColor *preferredControlTintColor
 @property  BOOL rootViewHidesEmptyNavigationBar
 @property  BOOL showingRootView
 @property  double navigationBarHeight
 @property  long long navigationBarPosition
 @property  UIViewController *alternateContentViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageViewController initWithVisualStyleProvider:]
  -[SFStartPageViewController reloadDataAnimatingDifferences:]
  -[SFStartPageViewController scrollDistance]
  -[SFStartPageViewController viewSafeAreaInsetsDidChange]
  -[SFStartPageViewController reloadNavigationItemAnimated:]
  -[SFStartPageViewController preferredStatusBarStyle]
  -[SFStartPageViewController reloadSection:animated:]
  -[SFStartPageViewController presentViewController:fromItemWithIdentifier:]
  -[SFStartPageViewController isTrackingDropSession]
  -[SFStartPageViewController configureModelWithIdentifier:usingBlock:]
  -[SFStartPageViewController cancelGestures]
  -[SFStartPageViewController setNavigationBarPaletteHeight:alignmentInsets:]
  -[SFStartPageViewController updateNavigationBarTitleInsets]
  -[SFStartPageViewController _updateWallpaperIfNeeded]
  -[SFStartPageViewController startPageCollectionViewController:didSelectItemWithIdentifier:]
  -[SFStartPageViewController startPageCollectionViewControllerShouldInstallCustomBackdrops:]
  -[SFStartPageViewController scrollObserver]
  -[SFStartPageViewController viewWillLayoutSubviews]
  -[SFStartPageViewController alternateContentViewController]
  -[SFStartPageViewController traitCollectionDidChange:]
  -[SFStartPageViewController navigationBarPrimaryContentHeight]
  -[SFStartPageViewController setCustomizationPolicy:]
  -[SFStartPageViewController _observeScrollViewDidScroll:]
  -[SFStartPageViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[SFStartPageViewController setDataSource:]
  -[SFStartPageViewController startPageCollectionViewControllerDidCompleteDismissGesture:]
  -[SFStartPageViewController navigationController:didShowViewController:animated:]
  -[SFStartPageViewController startPageCollectionViewControllerWillUpdateNavigationBar:]
  -[SFStartPageViewController .cxx_destruct]
  -[SFStartPageViewController resetToRootViewWithCustomizationPolicy:]
  -[SFStartPageViewController viewDidLoad]
  -[SFStartPageViewController _wallpaperWasDeletedRemotely]
  -[SFStartPageViewController unfocusGestureDidUpdate:]
  -[SFStartPageViewController effectiveControlTintColor]
  -[SFStartPageViewController setDelegate:]
  -[SFStartPageViewController preferredStatusBarUpdateAnimation]
  -[SFStartPageViewController showsWallpaper]
  -[SFStartPageViewController startPageCollectionViewControllerShouldDeferLoadingContentUntilKeyboardAnimatesIn:]
  -[SFStartPageViewController previewViewControllerForItemIdentifier:]
  -[SFStartPageViewController sectionsForStartPageCollectionViewController:]
  -[SFStartPageViewController dataSource]
  -[SFStartPageViewController preferredControlTintColor]
  -[SFStartPageViewController _wallpaperDidChangeRemotely]
  -[SFStartPageViewController init]
  -[SFStartPageViewController customizationPolicy]
  -[SFStartPageViewController _wallpaperDidChange:]
  -[SFStartPageViewController navigationBarPosition]
  -[SFStartPageViewController startPageCollectionViewControllerDidChangeBackgroundStyle:]
  -[SFStartPageViewController topStartPageCollectionViewController]
  -[SFStartPageViewController setRootViewHidesEmptyNavigationBar:]
  -[SFStartPageViewController gestureRecognizerShouldBegin:]
  -[SFStartPageViewController setBackgroundDisplayMode:]
  -[SFStartPageViewController startPageCollectionViewController:toggleSectionExpanded:]
  -[SFStartPageViewController rootViewHidesEmptyNavigationBar]
  -[SFStartPageViewController _setLeadingBarItems:trailingBarItems:onNavigationItem:forSection:]
  -[SFStartPageViewController setPreferredControlTintColor:]
  -[SFStartPageViewController startPageCollectionViewControllerTopPadding:]
  -[SFStartPageViewController updateOverrideTraitCollection]
  -[SFStartPageViewController customizationControlPolicyForStartPageCollectionViewController:]
  -[SFStartPageViewController delegate]
  -[SFStartPageViewController _reloadCustomizationViewController]
  -[SFStartPageViewController showDetailForItemWithIdentifier:]
  -[SFStartPageViewController setCustomizationDataSource:]
  -[SFStartPageViewController isShowingRootView]
  -[SFStartPageViewController setAlternateContentViewController:]
  -[SFStartPageViewController updateStartPageTopPadding]
  -[SFStartPageViewController startPageCollectionViewControllerDidScroll:]
  -[SFStartPageViewController dealloc]
  -[SFStartPageViewController configurePaletteForNavigationItem:]
  -[SFStartPageViewController backgroundDisplayMode]
  -[SFStartPageViewController startPageCollectionViewController:isSectionExpanded:]
  -[SFStartPageViewController viewLayoutMarginsDidChange]
  -[SFStartPageViewController navigationBarHeight]
  -[SFStartPageViewController customizationDataSource]
  -[SFStartPageViewController setScrollObserver:]
  -[SFStartPageViewController updateNavigationBarTintColor]
  -[SFStartPageViewController beginCustomizationForStartPageCollectionViewController:]
  -[SFStartPageViewController setNavigationBarPosition:]
  -[SFStartPageViewController navigationController:willShowViewController:animated:]
  -[SFStartPageViewController scrollViewForStartPageCollectionViewsOnly:]
  -[SFStartPageViewController test_scrollView]


SFPinnableBanner : UIView
 @property  BOOL showsTopSeparator
 @property  BOOL pinnedToTop
 @property  BOOL initiallyBehindNavigationBar
 @property  SFBannerTheme *theme
 @property  SFOverlayProvider *overlayProvider

  // class methods
  +[SFPinnableBanner omitsBottomSeparator]
  +[SFPinnableBanner unpinAnimationDuration]
  +[SFPinnableBanner unpinAnimationDelay]
  +[SFPinnableBanner pinAnimationDelay]

  // instance methods
  -[SFPinnableBanner theme]
  -[SFPinnableBanner .cxx_destruct]
  -[SFPinnableBanner setTheme:]
  -[SFPinnableBanner initWithFrame:]
  -[SFPinnableBanner contentSizeCategoryDidChange]
  -[SFPinnableBanner setShowsTopSeparator:]
  -[SFPinnableBanner showsTopSeparator]
  -[SFPinnableBanner setTheme:animated:]
  -[SFPinnableBanner overlayProvider]
  -[SFPinnableBanner _setUpSeparators]
  -[SFPinnableBanner themeDidChange]
  -[SFPinnableBanner invalidateBannerLayout]
  -[SFPinnableBanner isPinnedToTop]
  -[SFPinnableBanner setPinnedToTop:]
  -[SFPinnableBanner isInitiallyBehindNavigationBar]
  -[SFPinnableBanner setInitiallyBehindNavigationBar:]


SFUnifiedTabBar : UIView <SFUnifiedTabBarItemViewDelegate, UIScrollViewDelegate, UIPointerInteractionDelegate, SFUnifiedBarContentView>
 @property  SFUnifiedTabBarItemArrangement *itemArrangement
 @property  <SFUnifiedTabBarNavigationDelegate> *navigationDelegate
 @property  long long role
 @property  BOOL contentHidden
 @property  BOOL standalone
 @property  BOOL searchFieldShowsFormatMenuButtonAccessories
 @property  BOOL searchFieldShowsPersistentStopReloadButton
 @property  UITextField *searchField
 @property  UIView *itemContainerView
 @property  UIView *searchFieldPopoverSourceView
 @property  {UIEdgeInsets=dddd} searchFieldPopoverSourceInsets
 @property  BOOL usesMoreMenu
 @property  UIView *menuPopoverSourceView
 @property  BOOL showsSquishedTitleContainer
 @property  SFTabHoverPreviewController *tabHoverPreviewController
 @property  unsigned long indexOfCenterItem
 @property  unsigned long maximumNumberOfVisibleItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  {CGSize=dd} preferredSize
 @property  double barBackgroundAlpha
 @property  SFUnifiedBarMetrics *barMetrics
 @property  SFUnifiedBarTheme *barTheme
 @property  {NSDirectionalEdgeInsets=dddd} contentInset
 @property  {CGPoint=dd} midpointForCenteredContent
 @property  BOOL pinsScrollPositionToTrailingEdgeDuringResize
 @property  double preferredBottomSpacing
 @property  double topSpacingAdjustment
 @property  unsigned long sizeClass
 @property  double squishTransformFactor
 @property  {UIEdgeInsets=dddd} squishedContentInset
 @property  NSArray *squishedAccessoryViews
 @property  BOOL showsSquishedAccessoryViews
 @property  double themeColorVisibility
 @property  BOOL isCurrentlyScrollable

  // instance methods
  -[SFUnifiedTabBar searchField]
  -[SFUnifiedTabBar sizeClass]
  -[SFUnifiedTabBar hitTest:withEvent:]
  -[SFUnifiedTabBar preferredFocusEnvironments]
  -[SFUnifiedTabBar pointerInteraction:styleForRegion:]
  -[SFUnifiedTabBar _updateContentSizeIfNeeded]
  -[SFUnifiedTabBar traitCollectionDidChange:]
  -[SFUnifiedTabBar setRole:]
  -[SFUnifiedTabBar updateLayout]
  -[SFUnifiedTabBar barMetrics]
  -[SFUnifiedTabBar setContentHidden:]
  -[SFUnifiedTabBar .cxx_destruct]
  -[SFUnifiedTabBar setSizeClass:]
  -[SFUnifiedTabBar layoutSubviews]
  -[SFUnifiedTabBar setContentInset:]
  -[SFUnifiedTabBar _preferredWidth]
  -[SFUnifiedTabBar preferredSize]
  -[SFUnifiedTabBar scrollViewDidEndDragging:willDecelerate:]
  -[SFUnifiedTabBar scrollViewDidScroll:]
  -[SFUnifiedTabBar scrollViewWillBeginDragging:]
  -[SFUnifiedTabBar role]
  -[SFUnifiedTabBar initWithFrame:]
  -[SFUnifiedTabBar isContentHidden]
  -[SFUnifiedTabBar contentInset]
  -[SFUnifiedTabBar pointerInteraction:regionForRequest:defaultRegion:]
  -[SFUnifiedTabBar navigationDelegate]
  -[SFUnifiedTabBar setNavigationDelegate:]
  -[SFUnifiedTabBar scrollViewDidEndDecelerating:]
  -[SFUnifiedTabBar _hover:]
  -[SFUnifiedTabBar didUpdateFocusInContext:withAnimationCoordinator:]
  -[SFUnifiedTabBar setActiveItem:animated:]
  -[SFUnifiedTabBar didSelectItem:]
  -[SFUnifiedTabBar isStandalone]
  -[SFUnifiedTabBar scrollToItem:animated:]
  -[SFUnifiedTabBar maximumNumberOfVisibleItems]
  -[SFUnifiedTabBar setBarTheme:]
  -[SFUnifiedTabBar setBarBackgroundAlpha:]
  -[SFUnifiedTabBar setThemeColorVisibility:]
  -[SFUnifiedTabBar setSquishTransformFactor:]
  -[SFUnifiedTabBar barTheme]
  -[SFUnifiedTabBar barBackgroundAlpha]
  -[SFUnifiedTabBar themeColorVisibility]
  -[SFUnifiedTabBar squishTransformFactor]
  -[SFUnifiedTabBar tabBarItemViewCloseButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewMenuButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewMenuButtonReceivedTouchDown:]
  -[SFUnifiedTabBar tabBarItemViewMenuButtonClicked:]
  -[SFUnifiedTabBar tabBarItemViewReloadButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewStopButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewVoiceSearchButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewReaderButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewTranslationButtonTapped:]
  -[SFUnifiedTabBar tabBarItemViewMediaStateMuteButtonTapped:]
  -[SFUnifiedTabBar tabBarItemView:multipleExtensionButtonTapped:]
  -[SFUnifiedTabBar tabBarItemView:extensionButtonTapped:extension:]
  -[SFUnifiedTabBar tabBarItemViewDidRequestFocusForPencilInput:completionHandler:]
  -[SFUnifiedTabBar tabBarItemView:didUpdateHovering:]
  -[SFUnifiedTabBar tabBarItemViewCanBecomeFocused:]
  -[SFUnifiedTabBar menuPopoverSourceView]
  -[SFUnifiedTabBar squishedAccessoryViews]
  -[SFUnifiedTabBar setShowsSquishedAccessoryViews:]
  -[SFUnifiedTabBar showsSquishedAccessoryViews]
  -[SFUnifiedTabBar midpointForCenteredContent]
  -[SFUnifiedTabBar indexOfCenterItem]
  -[SFUnifiedTabBar isCurrentlyScrollable]
  -[SFUnifiedTabBar itemArrangement]
  -[SFUnifiedTabBar setMidpointForCenteredContent:]
  -[SFUnifiedTabBar _backgroundCaptureGroupName]
  -[SFUnifiedTabBar _currentLayoutConfiguration]
  -[SFUnifiedTabBar newSearchField]
  -[SFUnifiedTabBar showsSquishedTitleContainer]
  -[SFUnifiedTabBar _activeTabBarItemView]
  -[SFUnifiedTabBar _prepareForAnimatedResizeIfNeeded]
  -[SFUnifiedTabBar _layoutSquishedTitleContainer]
  -[SFUnifiedTabBar _layoutItems]
  -[SFUnifiedTabBar _didEndAnimationsForItems:]
  -[SFUnifiedTabBar setItemArrangement:animated:keepingItemVisible:completionHandler:]
  -[SFUnifiedTabBar _discardViewsForIndexes:ofItems:]
  -[SFUnifiedTabBar _uninstallSearchFieldIfNeeded]
  -[SFUnifiedTabBar _didBeginScrollingAnimation]
  -[SFUnifiedTabBar _layoutItemsAtIndexes:usingLayout:]
  -[SFUnifiedTabBar _layoutAppearingItemsAtIndexes:withDistanceToScroll:usingLayout:]
  -[SFUnifiedTabBar _layoutDisappearingItemsAtIndexes:withDistanceScrolled:usingLayout:]
  -[SFUnifiedTabBar _beginTransitioningSearchField]
  -[SFUnifiedTabBar _discardItemView:]
  -[SFUnifiedTabBar _didEndScrollingAnimation]
  -[SFUnifiedTabBar _endTransitioningSearchFieldInItemView:]
  -[SFUnifiedTabBar _setRevealsSquishedActiveItem:animated:]
  -[SFUnifiedTabBar tabBarItemAtPoint:]
  -[SFUnifiedTabBar _installSearchFieldIfNeeded]
  -[SFUnifiedTabBar _viewForItem:inArrangement:]
  -[SFUnifiedTabBar _applyLayoutInfo:toItemView:]
  -[SFUnifiedTabBar _discardViewForItem:]
  -[SFUnifiedTabBar _updateScrolling]
  -[SFUnifiedTabBar _configureTabBarItemView:forItem:inArrangement:forPreview:]
  -[SFUnifiedTabBar _platterStyleForItem:]
  -[SFUnifiedTabBar _itemTouchInsets]
  -[SFUnifiedTabBar _discardViewsForAnimatingItemsIfNeeded:]
  -[SFUnifiedTabBar canCloseItem:]
  -[SFUnifiedTabBar _itemViewAccessoryButtonLayout]
  -[SFUnifiedTabBar _centersContentForSingleItem]
  -[SFUnifiedTabBar _activeItemHidesIcon]
  -[SFUnifiedTabBar _didSelectItemView:]
  -[SFUnifiedTabBar _targetContentOffsetForAnimatedResizeWithTargetLayout:]
  -[SFUnifiedTabBar _firstFullyVisibleInactiveItem]
  -[SFUnifiedTabBar _adjustedContentOffsetForContentOffset:size:contentSize:]
  -[SFUnifiedTabBar _shouldDelayContentTouches]
  -[SFUnifiedTabBar closeItem:]
  -[SFUnifiedTabBar _updateHoveringItem:]
  -[SFUnifiedTabBar pinsScrollPositionToTrailingEdgeDuringResize]
  -[SFUnifiedTabBar setPinsScrollPositionToTrailingEdgeDuringResize:]
  -[SFUnifiedTabBar squishedContentInset]
  -[SFUnifiedTabBar setSquishedContentInset:]
  -[SFUnifiedTabBar setShowsSquishedTitleContainer:]
  -[SFUnifiedTabBar setItemArrangement:]
  -[SFUnifiedTabBar setActiveItemIsExpanded:animated:completionHandler:]
  -[SFUnifiedTabBar searchFieldPopoverSourceView]
  -[SFUnifiedTabBar searchFieldPopoverSourceInsets]
  -[SFUnifiedTabBar usesMoreMenu]
  -[SFUnifiedTabBar updateCloseButtonVisibility]
  -[SFUnifiedTabBar frameForTabBarItem:]
  -[SFUnifiedTabBar tabBarItemClosestToPoint:]
  -[SFUnifiedTabBar itemContainerView]
  -[SFUnifiedTabBar viewForTabBarItem:]
  -[SFUnifiedTabBar dragPreviewForTabBarItem:]
  -[SFUnifiedTabBar revealActiveItemIfNeeded]
  -[SFUnifiedTabBar setSearchFieldShowsFormatMenuButtonAccessories:]
  -[SFUnifiedTabBar searchFieldShowsPersistentStopReloadButton]
  -[SFUnifiedTabBar searchFieldShowsFormatMenuButtonAccessories]
  -[SFUnifiedTabBar tabHoverPreviewController]


SFUnifiedTabBarItemArrangement : NSObject
 @property  long long activeItemSquishState
 @property  BOOL revealsSquishedActiveItem
 @property  NSIndexSet *allItemIndexes
 @property  NSArray *items
 @property  SFUnifiedBarItem *activeItem
 @property  unsigned long activeItemIndex
 @property  BOOL activeItemIsExpanded

  // instance methods
  -[SFUnifiedTabBarItemArrangement items]
  -[SFUnifiedTabBarItemArrangement .cxx_destruct]
  -[SFUnifiedTabBarItemArrangement init]
  -[SFUnifiedTabBarItemArrangement activeItem]
  -[SFUnifiedTabBarItemArrangement isEqualToArrangement:]
  -[SFUnifiedTabBarItemArrangement activeItemIsExpanded]
  -[SFUnifiedTabBarItemArrangement activeItemIndex]
  -[SFUnifiedTabBarItemArrangement revealsSquishedActiveItem]
  -[SFUnifiedTabBarItemArrangement allItemIndexes]
  -[SFUnifiedTabBarItemArrangement determineActiveItemSquishStateIfNeeded:]
  -[SFUnifiedTabBarItemArrangement arrangementWithActiveItem:]
  -[SFUnifiedTabBarItemArrangement arrangementWithActiveItemIsExpanded:]
  -[SFUnifiedTabBarItemArrangement arrangementWithActiveItemSquishState:]
  -[SFUnifiedTabBarItemArrangement initWithItems:activeItem:]
  -[SFUnifiedTabBarItemArrangement initWithItems:activeItem:activeItemIsExpanded:]
  -[SFUnifiedTabBarItemArrangement activeItemSquishState]
  -[SFUnifiedTabBarItemArrangement initWithItem:activeItemIsExpanded:]


SFUnifiedTabBarAnimatedResizingInfo : NSObject
 @property  NSSet *itemsToKeepVisible
 @property  {CGPoint=dd} targetContentOffset

  // instance methods
  -[SFUnifiedTabBarAnimatedResizingInfo .cxx_destruct]
  -[SFUnifiedTabBarAnimatedResizingInfo targetContentOffset]
  -[SFUnifiedTabBarAnimatedResizingInfo itemsToKeepVisible]
  -[SFUnifiedTabBarAnimatedResizingInfo initWithItemsToKeepVisible:targetContentOffset:]


SFDialog : NSObject
 @property  NSArray *additionalCancellationExemptions
 @property  BOOL canceledOnApplicationBackground
 @property  SFDialogController *dialogController
 @property  BOOL canceledOnProvisionalNavigation
 @property  BOOL canceledOnCommittedNavigation
 @property  BOOL completionHandlerBlocksWebProcess
 @property  long long presentationStyle
 @property  BOOL shouldIgnoreGlobalModalUIDisplayPolicy

  // class methods
  +[SFDialog telephonyNavigationDialogWithCompletionHandler:]
  +[SFDialog dialogWithWebUIAlert:completionHandler:]
  +[SFDialog formSubmissionDialogWithMessage:completionHandler:]
  +[SFDialog genericErrorDialogWithTitle:message:applicationModal:]
  +[SFDialog pageLoadErrorWithMessage:]
  +[SFDialog permanentlyAcceptCertificateDialogWithAcceptanceHandler:]
  +[SFDialog continuePrintingDialogWithTitle:message:applicationModal:completionHandler:]
  +[SFDialog printBlockedDialogWithCompletionHandler:]
  +[SFDialog userMediaPermissionDialogWithHost:devices:completionHandler:]
  +[SFDialog javaScriptAlertDialogWithMessage:completionHandler:]
  +[SFDialog javaScriptConfirmDialogWithMessage:completionHandler:]
  +[SFDialog javaScriptPromptDialogWithMessage:defaultText:completionHandler:]
  +[SFDialog requestStorageAccessDialogForDomain:underCurrentDomain:completionHandler:]
  +[SFDialog authenticatorDialogForPanel:dialogController:]
  +[SFDialog _dialogWithTitle:message:primaryAction:secondaryAction:applicationModal:completionHandler:]
  +[SFDialog _appLinkRedirectDialogWithMessage:completionHandler:]
  +[SFDialog redirectDialogWithMessage:completionHandler:]
  +[SFDialog _dialogWithTitle:message:acceptAction:secondaryAction:cancelAction:applicationModal:completionHandler:]
  +[SFDialog blockedPopupWindowDialogWithCompletionHandler:]
  +[SFDialog authenticationDialogWithAuthenticationChallenge:committedURL:completionHandler:]
  +[SFDialog websiteLocationDialogForURL:preciseLocation:completionHandler:]
  +[SFDialog webExtensionPermissionDialogWithExtensionName:domains:callingAPIName:showMoreOptionsForAlwaysAllow:includeDenyButton:completionHandler:]
  +[SFDialog webExtensionAlwaysAllowDialogWithExtensionName:domains:includeDenyButton:completionHandler:]
  +[SFDialog noFeedAppDialogWithCompletionHandler:]
  +[SFDialog increaseDatabaseQuotaDialogForOrigin:newQuota:completionHandler:]
  +[SFDialog increaseApplicationCacheQuotaDialogForOrigin:newQuota:completionHandler:]

  // instance methods
  -[SFDialog presentationStyle]
  -[SFDialog .cxx_destruct]
  -[SFDialog completeWithResponse:]
  -[SFDialog dialogController]
  -[SFDialog completionHandlerBlocksWebProcess]
  -[SFDialog setDialogController:]
  -[SFDialog didCompleteWithResponse:]
  -[SFDialog canceledOnProvisionalNavigation]
  -[SFDialog canceledOnCommittedNavigation]
  -[SFDialog additionalCancellationExemptions]
  -[SFDialog canceledOnApplicationBackground]
  -[SFDialog newDialogViewRepresentation]
  -[SFDialog newViewControllerRepresentationWithCompletionHandler:]
  -[SFDialog shouldIgnoreGlobalModalUIDisplayPolicy]


SFBasicDialog : SFDialog
 @property  @? completionHandler
 @property  NSString *title
 @property  NSString *message
 @property  NSString *defaultText
 @property  NSString *textPlaceholder
 @property  NSString *defaultPassword
 @property  NSString *passwordPlaceholder
 @property  NSArray *actions
 @property  BOOL alertControllerPresentsAsActionSheet
 @property  BOOL shouldHideWebContent
 @property  BOOL canceledOnProvisionalNavigation
 @property  BOOL canceledOnCommittedNavigation
 @property  BOOL canceledOnApplicationBackground
 @property  NSArray *additionalCancellationExemptions
 @property  BOOL completionHandlerBlocksWebProcess
 @property  long long presentationStyle

  // instance methods
  -[SFBasicDialog setActions:]
  -[SFBasicDialog presentationStyle]
  -[SFBasicDialog setTitle:]
  -[SFBasicDialog setPresentationStyle:]
  -[SFBasicDialog .cxx_destruct]
  -[SFBasicDialog setMessage:]
  -[SFBasicDialog actions]
  -[SFBasicDialog init]
  -[SFBasicDialog message]
  -[SFBasicDialog setCompletionHandler:]
  -[SFBasicDialog title]
  -[SFBasicDialog defaultText]
  -[SFBasicDialog setDefaultText:]
  -[SFBasicDialog completionHandler]
  -[SFBasicDialog completionHandlerBlocksWebProcess]
  -[SFBasicDialog setCanceledOnProvisionalNavigation:]
  -[SFBasicDialog setAdditionalCancellationExemptions:]
  -[SFBasicDialog setCanceledOnApplicationBackground:]
  -[SFBasicDialog didCompleteWithResponse:]
  -[SFBasicDialog setTextPlaceholder:]
  -[SFBasicDialog setPasswordPlaceholder:]
  -[SFBasicDialog setShouldHideWebContent:]
  -[SFBasicDialog setCompletionHandlerBlocksWebProcess:]
  -[SFBasicDialog setAlertControllerPresentsAsActionSheet:]
  -[SFBasicDialog canceledOnProvisionalNavigation]
  -[SFBasicDialog canceledOnCommittedNavigation]
  -[SFBasicDialog additionalCancellationExemptions]
  -[SFBasicDialog canceledOnApplicationBackground]
  -[SFBasicDialog newDialogViewRepresentation]
  -[SFBasicDialog newViewControllerRepresentationWithCompletionHandler:]
  -[SFBasicDialog textPlaceholder]
  -[SFBasicDialog defaultPassword]
  -[SFBasicDialog passwordPlaceholder]
  -[SFBasicDialog shouldHideWebContent]
  -[SFBasicDialog setCanceledOnCommittedNavigation:]
  -[SFBasicDialog setDefaultPassword:]
  -[SFBasicDialog alertControllerPresentsAsActionSheet]


SFWebUIDialog : SFDialog
 @property  WebUIAlert *alert

  // instance methods
  -[SFWebUIDialog presentationStyle]
  -[SFWebUIDialog .cxx_destruct]
  -[SFWebUIDialog alert]
  -[SFWebUIDialog didCompleteWithResponse:]
  -[SFWebUIDialog initWithAlert:completionHandler:]
  -[SFWebUIDialog newViewControllerRepresentationWithCompletionHandler:]
  -[SFWebUIDialog shouldIgnoreGlobalModalUIDisplayPolicy]


SFUnifiedTabBarItemTitleContainerView : UIView
 @property  NSArray *_arrangedViews
 @property  NSArray *_arrangedViewsByContentCompressionResistancePriority
 @property  BOOL _showsFakeClearButton
 @property  UIImage *icon
 @property  BOOL showsIcon
 @property  double iconAlpha
 @property  NSString *titleWhenCollapsed
 @property  NSString *title
 @property  NSString *textWhenExpanded
 @property  unsigned long startIndexOfTitleInTextWhenExpanded
 @property  NSString *titleTextStyle
 @property  NSString *placeholder
 @property  UIFont *placeholderFont
 @property  BOOL showsSearchIcon
 @property  BOOL showsLockIcon
 @property  BOOL showsPrivateAnnotation
 @property  BOOL hasFocusedSensitiveInputField
 @property  long long securityAnnotation
 @property  long long lockIconEdge
 @property  BOOL animateLockViewPosition
 @property  BOOL usesInsetFromLayoutMargins
 @property  BOOL animatingResize
 @property  BOOL narrow
 @property  double spacing
 @property  double titleToSearchIconSpacing
 @property  double contentOffset
 @property  BOOL hidesIconForHover
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} iconFrame
 @property  UITextField *searchField
 @property  BOOL showsSearchField
 @property  BOOL suppressesText
 @property  BOOL collapsed
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *theme
 @property  BOOL dimsText
 @property  double minimumWidthToShowTitle
 @property  NSArray *squishedAccessoryViews
 @property  BOOL showsSquishedAccessoryViews
 @property  long long alignment
 @property  BOOL leadingAlignsIcon
 @property  {CGSize=dd} lockSize
 @property  double maximumIconWidth
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} titleRect
 @property  {CGSize=dd} urlSize

  // instance methods
  -[SFUnifiedTabBarItemTitleContainerView searchField]
  -[SFUnifiedTabBarItemTitleContainerView isCollapsed]
  -[SFUnifiedTabBarItemTitleContainerView setSearchField:]
  -[SFUnifiedTabBarItemTitleContainerView layoutMarginsDidChange]
  -[SFUnifiedTabBarItemTitleContainerView setCollapsed:]
  -[SFUnifiedTabBarItemTitleContainerView setAlignment:]
  -[SFUnifiedTabBarItemTitleContainerView hitTest:withEvent:]
  -[SFUnifiedTabBarItemTitleContainerView theme]
  -[SFUnifiedTabBarItemTitleContainerView setContentOffset:]
  -[SFUnifiedTabBarItemTitleContainerView _titleFont]
  -[SFUnifiedTabBarItemTitleContainerView alignment]
  -[SFUnifiedTabBarItemTitleContainerView icon]
  -[SFUnifiedTabBarItemTitleContainerView traitCollectionDidChange:]
  -[SFUnifiedTabBarItemTitleContainerView placeholder]
  -[SFUnifiedTabBarItemTitleContainerView contentOffset]
  -[SFUnifiedTabBarItemTitleContainerView setTitle:]
  -[SFUnifiedTabBarItemTitleContainerView textWhenExpanded]
  -[SFUnifiedTabBarItemTitleContainerView _updateTitle]
  -[SFUnifiedTabBarItemTitleContainerView titleRect]
  -[SFUnifiedTabBarItemTitleContainerView .cxx_destruct]
  -[SFUnifiedTabBarItemTitleContainerView spacing]
  -[SFUnifiedTabBarItemTitleContainerView layoutSubviews]
  -[SFUnifiedTabBarItemTitleContainerView securityAnnotation]
  -[SFUnifiedTabBarItemTitleContainerView showsLockIcon]
  -[SFUnifiedTabBarItemTitleContainerView setIcon:]
  -[SFUnifiedTabBarItemTitleContainerView setTheme:]
  -[SFUnifiedTabBarItemTitleContainerView title]
  -[SFUnifiedTabBarItemTitleContainerView setShowsLockIcon:]
  -[SFUnifiedTabBarItemTitleContainerView setSecurityAnnotation:]
  -[SFUnifiedTabBarItemTitleContainerView urlSize]
  -[SFUnifiedTabBarItemTitleContainerView maximumIconWidth]
  -[SFUnifiedTabBarItemTitleContainerView setPlaceholder:]
  -[SFUnifiedTabBarItemTitleContainerView setSpacing:]
  -[SFUnifiedTabBarItemTitleContainerView intrinsicContentSize]
  -[SFUnifiedTabBarItemTitleContainerView _updateTitleFont]
  -[SFUnifiedTabBarItemTitleContainerView placeholderFont]
  -[SFUnifiedTabBarItemTitleContainerView setPlaceholderFont:]
  -[SFUnifiedTabBarItemTitleContainerView titleTextStyle]
  -[SFUnifiedTabBarItemTitleContainerView _effectiveLayoutMargins]
  -[SFUnifiedTabBarItemTitleContainerView _showsPlaceholder]
  -[SFUnifiedTabBarItemTitleContainerView _placeholderText]
  -[SFUnifiedTabBarItemTitleContainerView _squishedLockView]
  -[SFUnifiedTabBarItemTitleContainerView _updateIcon]
  -[SFUnifiedTabBarItemTitleContainerView _updateTitleColor]
  -[SFUnifiedTabBarItemTitleContainerView setIconAlpha:]
  -[SFUnifiedTabBarItemTitleContainerView iconAlpha]
  -[SFUnifiedTabBarItemTitleContainerView setTitleTextStyle:]
  -[SFUnifiedTabBarItemTitleContainerView initWithAlignment:]
  -[SFUnifiedTabBarItemTitleContainerView _updateIconSpacing]
  -[SFUnifiedTabBarItemTitleContainerView isNarrow]
  -[SFUnifiedTabBarItemTitleContainerView setTextWhenExpanded:]
  -[SFUnifiedTabBarItemTitleContainerView setStartIndexOfTitleInTextWhenExpanded:]
  -[SFUnifiedTabBarItemTitleContainerView setShowsSearchIcon:]
  -[SFUnifiedTabBarItemTitleContainerView setHasFocusedSensitiveInputField:]
  -[SFUnifiedTabBarItemTitleContainerView setTitleToSearchIconSpacing:]
  -[SFUnifiedTabBarItemTitleContainerView setUsesInsetFromLayoutMargins:]
  -[SFUnifiedTabBarItemTitleContainerView setAnimateLockViewPosition:]
  -[SFUnifiedTabBarItemTitleContainerView _updateSecurityAnnotation]
  -[SFUnifiedTabBarItemTitleContainerView beginTitleTextStyleAnimation]
  -[SFUnifiedTabBarItemTitleContainerView endTitleTextStyleAnimation]
  -[SFUnifiedTabBarItemTitleContainerView setShowsPrivateAnnotation:]
  -[SFUnifiedTabBarItemTitleContainerView setShowsIcon:]
  -[SFUnifiedTabBarItemTitleContainerView setLockIconEdge:]
  -[SFUnifiedTabBarItemTitleContainerView showsSearchField]
  -[SFUnifiedTabBarItemTitleContainerView setAnimatingResize:]
  -[SFUnifiedTabBarItemTitleContainerView setLeadingAlignsIcon:]
  -[SFUnifiedTabBarItemTitleContainerView setShowsSearchField:]
  -[SFUnifiedTabBarItemTitleContainerView showsSearchIcon]
  -[SFUnifiedTabBarItemTitleContainerView titleWhenCollapsed]
  -[SFUnifiedTabBarItemTitleContainerView setTitleWhenCollapsed:]
  -[SFUnifiedTabBarItemTitleContainerView startIndexOfTitleInTextWhenExpanded]
  -[SFUnifiedTabBarItemTitleContainerView hasFocusedSensitiveInputField]
  -[SFUnifiedTabBarItemTitleContainerView setDimsText:]
  -[SFUnifiedTabBarItemTitleContainerView dismissAvailabilityLabelAnimated:withCompletionHandler:]
  -[SFUnifiedTabBarItemTitleContainerView lockIconEdge]
  -[SFUnifiedTabBarItemTitleContainerView minimumWidthToShowTitle]
  -[SFUnifiedTabBarItemTitleContainerView presentAvailabilityLabelWithText:]
  -[SFUnifiedTabBarItemTitleContainerView beginTransitioningSearchField]
  -[SFUnifiedTabBarItemTitleContainerView endTransitioningSearchField]
  -[SFUnifiedTabBarItemTitleContainerView setSuppressesText:]
  -[SFUnifiedTabBarItemTitleContainerView iconFrame]
  -[SFUnifiedTabBarItemTitleContainerView setHidesIconForHover:]
  -[SFUnifiedTabBarItemTitleContainerView squishedAccessoryViews]
  -[SFUnifiedTabBarItemTitleContainerView setShowsSquishedAccessoryViews:]
  -[SFUnifiedTabBarItemTitleContainerView showsSquishedAccessoryViews]
  -[SFUnifiedTabBarItemTitleContainerView _updateSquishedAccessorySymbolConfigurations]
  -[SFUnifiedTabBarItemTitleContainerView _updateAlignmentForAvailabilityLabel:]
  -[SFUnifiedTabBarItemTitleContainerView _updateSecurityAnnotationAnimated:]
  -[SFUnifiedTabBarItemTitleContainerView _updateSearchFieldColor]
  -[SFUnifiedTabBarItemTitleContainerView _layoutArrangedViews]
  -[SFUnifiedTabBarItemTitleContainerView _shouldShowAvailabilityLabel]
  -[SFUnifiedTabBarItemTitleContainerView _layOutSearchField]
  -[SFUnifiedTabBarItemTitleContainerView _layoutSquishedAccessoryViews]
  -[SFUnifiedTabBarItemTitleContainerView _effectiveDirectionalLayoutMargins]
  -[SFUnifiedTabBarItemTitleContainerView _arrangedViews]
  -[SFUnifiedTabBarItemTitleContainerView _lastVisibleViewInViews:]
  -[SFUnifiedTabBarItemTitleContainerView _showsView:]
  -[SFUnifiedTabBarItemTitleContainerView _arrangedViewsByContentCompressionResistancePriority]
  -[SFUnifiedTabBarItemTitleContainerView _preferredSizeForView:]
  -[SFUnifiedTabBarItemTitleContainerView _collapsedWidthForView:]
  -[SFUnifiedTabBarItemTitleContainerView _spacingBetweenView:nextView:]
  -[SFUnifiedTabBarItemTitleContainerView _viewCollapsesWhenHidden:]
  -[SFUnifiedTabBarItemTitleContainerView _alphaForView:]
  -[SFUnifiedTabBarItemTitleContainerView _leadingAlignCenteredIconIfNeeded]
  -[SFUnifiedTabBarItemTitleContainerView _updateOffsetOfTitleInSearchField]
  -[SFUnifiedTabBarItemTitleContainerView _searchFieldFrame]
  -[SFUnifiedTabBarItemTitleContainerView _slideArrangedViewsForSearchField:]
  -[SFUnifiedTabBarItemTitleContainerView _layOutFakeClearButtonUsingPresentationFrame:]
  -[SFUnifiedTabBarItemTitleContainerView _shouldSlideArrangedViewForSearchField:]
  -[SFUnifiedTabBarItemTitleContainerView _setShowsFakeClearButton:]
  -[SFUnifiedTabBarItemTitleContainerView _showsFakeClearButton]
  -[SFUnifiedTabBarItemTitleContainerView _squishedIconView]
  -[SFUnifiedTabBarItemTitleContainerView _squishedAccessorySymbolConfiguration]
  -[SFUnifiedTabBarItemTitleContainerView _layoutSquishedAccessoryView:forView:]
  -[SFUnifiedTabBarItemTitleContainerView lockSize]
  -[SFUnifiedTabBarItemTitleContainerView showsIcon]
  -[SFUnifiedTabBarItemTitleContainerView showsPrivateAnnotation]
  -[SFUnifiedTabBarItemTitleContainerView animateLockViewPosition]
  -[SFUnifiedTabBarItemTitleContainerView usesInsetFromLayoutMargins]
  -[SFUnifiedTabBarItemTitleContainerView isAnimatingResize]
  -[SFUnifiedTabBarItemTitleContainerView titleToSearchIconSpacing]
  -[SFUnifiedTabBarItemTitleContainerView hidesIconForHover]
  -[SFUnifiedTabBarItemTitleContainerView suppressesText]
  -[SFUnifiedTabBarItemTitleContainerView dimsText]
  -[SFUnifiedTabBarItemTitleContainerView leadingAlignsIcon]


SFUnifiedTabBarItemTitleContainerViewTheme : NSObject
 @property  UIColor *primaryTextColor
 @property  UIColor *secondaryTextColor
 @property  UIColor *placeholderTextColor
 @property  UIColor *overrideTintColor
 @property  UIColor *themeColor

  // instance methods
  -[SFUnifiedTabBarItemTitleContainerViewTheme overrideTintColor]
  -[SFUnifiedTabBarItemTitleContainerViewTheme themeColor]
  -[SFUnifiedTabBarItemTitleContainerViewTheme .cxx_destruct]
  -[SFUnifiedTabBarItemTitleContainerViewTheme init]
  -[SFUnifiedTabBarItemTitleContainerViewTheme placeholderTextColor]
  -[SFUnifiedTabBarItemTitleContainerViewTheme primaryTextColor]
  -[SFUnifiedTabBarItemTitleContainerViewTheme secondaryTextColor]
  -[SFUnifiedTabBarItemTitleContainerViewTheme initWithPrimaryTextColor:secondaryTextColor:placeholderTextColor:]
  -[SFUnifiedTabBarItemTitleContainerViewTheme initWithPrimaryTextColor:secondaryTextColor:placeholderTextColor:overrideTintColor:themeColor:]


SFStartPageSectionHeader : UICollectionReusableView
 @property  NSString *title
 @property  NSArray *actions
 @property  SFBannerModel *banner
 @property  double bottomGap

  // class methods
  +[SFStartPageSectionHeader reuseIdentifier]

  // instance methods
  -[SFStartPageSectionHeader setBanner:]
  -[SFStartPageSectionHeader setActions:]
  -[SFStartPageSectionHeader initWithCoder:]
  -[SFStartPageSectionHeader traitCollectionDidChange:]
  -[SFStartPageSectionHeader setTitle:]
  -[SFStartPageSectionHeader .cxx_destruct]
  -[SFStartPageSectionHeader actions]
  -[SFStartPageSectionHeader setBottomGap:]
  -[SFStartPageSectionHeader setModel:resolvingActionsUsingBlock:]
  -[SFStartPageSectionHeader bottomGap]
  -[SFStartPageSectionHeader title]
  -[SFStartPageSectionHeader initWithFrame:]
  -[SFStartPageSectionHeader banner]
  -[SFStartPageSectionHeader updateViewsDependingOnCustomTraits]


SFSiteCardCell : UICollectionViewCell <SFSiteCardModel>
 @property  UIImage *badge
 @property  UIImage *image
 @property  NSString *title
 @property  NSString *subtitle
 @property  NSString *caption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFSiteCardCell reuseIdentifier]

  // instance methods
  -[SFSiteCardCell setHighlighted:]
  -[SFSiteCardCell caption]
  -[SFSiteCardCell _updateVibrancy]
  -[SFSiteCardCell setCaption:]
  -[SFSiteCardCell initWithCoder:]
  -[SFSiteCardCell traitCollectionDidChange:]
  -[SFSiteCardCell setTitle:]
  -[SFSiteCardCell image]
  -[SFSiteCardCell .cxx_destruct]
  -[SFSiteCardCell focusEffect]
  -[SFSiteCardCell setSubtitle:]
  -[SFSiteCardCell setBadge:]
  -[SFSiteCardCell subtitle]
  -[SFSiteCardCell title]
  -[SFSiteCardCell initWithFrame:]
  -[SFSiteCardCell setImage:]
  -[SFSiteCardCell setImageFromBookmark:]
  -[SFSiteCardCell badge]
  -[SFSiteCardCell setCaptionText:icon:]


SFSiteCardSourceView : UIVisualEffectView
 @property  UIImage *image
 @property  NSString *text

  // instance methods
  -[SFSiteCardSourceView setText:]
  -[SFSiteCardSourceView image]
  -[SFSiteCardSourceView .cxx_destruct]
  -[SFSiteCardSourceView initWithFrame:]
  -[SFSiteCardSourceView setImage:]
  -[SFSiteCardSourceView text]


SFClipLinkBanner : SFLinkBanner <SFAppSuggestionBanner>
 @property  SFClipLink *clipLink
 @property  <SFAppSuggestionBannerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFClipLinkBanner getClipLinkBannerForClipLink:openActionHandler:completionHandler:]

  // instance methods
  -[SFClipLinkBanner .cxx_destruct]
  -[SFClipLinkBanner setDelegate:]
  -[SFClipLinkBanner delegate]
  -[SFClipLinkBanner overlayProvider]
  -[SFClipLinkBanner _initWithClipLink:openActionHandler:]
  -[SFClipLinkBanner clipLink]


SFCapsuleNavigationBarTheme : _SFBarTheme <SFUnifiedTabBarItemTitleThemeProviding>
 @property  _SFBarTheme *backgroundTheme
 @property  BOOL hidesOverlayEffects
 @property  _SFBarTheme *contentTheme
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *titleTheme
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *tabTitleTheme
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *activeTabTitleTheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFCapsuleNavigationBarTheme backdropEffectForStyle:]
  +[SFCapsuleNavigationBarTheme backdropIsDarkForStyle:]

  // instance methods
  -[SFCapsuleNavigationBarTheme setBackgroundTheme:]
  -[SFCapsuleNavigationBarTheme applyBackdropEffectsToView:]
  -[SFCapsuleNavigationBarTheme .cxx_destruct]
  -[SFCapsuleNavigationBarTheme setHidesOverlayEffects:]
  -[SFCapsuleNavigationBarTheme isEqual:]
  -[SFCapsuleNavigationBarTheme contentTheme]
  -[SFCapsuleNavigationBarTheme backgroundOverlayEffects]
  -[SFCapsuleNavigationBarTheme tabTitleTheme]
  -[SFCapsuleNavigationBarTheme backgroundTheme]
  -[SFCapsuleNavigationBarTheme titleTheme]
  -[SFCapsuleNavigationBarTheme _titleThemeIsMinimized:]
  -[SFCapsuleNavigationBarTheme hidesOverlayEffects]


SFUnifiedBar : UIView
 @property  BOOL _showsSquishedContent
 @property  {CGPoint=dd} _squishAnchorPoint
 @property  double _squishVerticalOffset
 @property  SFUnifiedBarItemArrangement *itemArrangement
 @property  SFUnifiedBarContentArrangement *contentArrangement
 @property  SFUnifiedBarTheme *barTheme
 @property  unsigned long sizeClass
 @property  double expandedHeight
 @property  double squishedHeight
 @property  double squishTransformFactor
 @property  double contentUnderStatusBarHeight
 @property  double extendedBottomHeight
 @property  BOOL inlineContentViewPinsScrollPositionToTrailingEdgeDuringResize
 @property  BOOL showsSeparator
 @property  BOOL usesFaintSeparator
 @property  unsigned long marginLevel
 @property  UIView *leadingItemContainerView
 @property  UIView *trailingItemContainerView
 @property  unsigned long backgroundVisibility
 @property  double chromelessScrollDistance

  // instance methods
  -[SFUnifiedBar sizeClass]
  -[SFUnifiedBar traitCollectionDidChange:]
  -[SFUnifiedBar didMoveToSuperview]
  -[SFUnifiedBar .cxx_destruct]
  -[SFUnifiedBar layoutSubviews]
  -[SFUnifiedBar setShowsSeparator:]
  -[SFUnifiedBar _itemSpacing]
  -[SFUnifiedBar initWithFrame:]
  -[SFUnifiedBar _backgroundAlpha]
  -[SFUnifiedBar chromelessScrollDistance]
  -[SFUnifiedBar metricsDidChange]
  -[SFUnifiedBar setContentUnderStatusBarHeight:]
  -[SFUnifiedBar setUsesFaintSeparator:]
  -[SFUnifiedBar contentUnderStatusBarHeight]
  -[SFUnifiedBar usesFaintSeparator]
  -[SFUnifiedBar setInlineContentViewPinsScrollPositionToTrailingEdgeDuringResize:]
  -[SFUnifiedBar setItemArrangement:animated:]
  -[SFUnifiedBar expandedHeight]
  -[SFUnifiedBar showsSeparator]
  -[SFUnifiedBar setBarTheme:]
  -[SFUnifiedBar _updateBackgroundAlpha]
  -[SFUnifiedBar barTheme]
  -[SFUnifiedBar squishTransformFactor]
  -[SFUnifiedBar _themeColorVisibility]
  -[SFUnifiedBar itemArrangement]
  -[SFUnifiedBar setItemArrangement:]
  -[SFUnifiedBar squishedBarTapped]
  -[SFUnifiedBar _layoutIndexes:ofItems:alongEdge:transitioning:]
  -[SFUnifiedBar _setNeedsRemovalForViewsAtIndexes:ofItems:]
  -[SFUnifiedBar _removeViewsForIndexes:ofItems:]
  -[SFUnifiedBar _uninstallContentView:]
  -[SFUnifiedBar _installContentView:]
  -[SFUnifiedBar _squishAnchorPoint]
  -[SFUnifiedBar _squishVerticalOffset]
  -[SFUnifiedBar _updateSizeClass]
  -[SFUnifiedBar _layoutItems:alongEdge:]
  -[SFUnifiedBar _setShowsSquishedContent:]
  -[SFUnifiedBar _layOutInlineContentView]
  -[SFUnifiedBar _layOutStandaloneContentViews]
  -[SFUnifiedBar _inlineContentHeight]
  -[SFUnifiedBar _spacingBelowContentView:]
  -[SFUnifiedBar _layOutStandaloneContentView:atIndex:minY:]
  -[SFUnifiedBar squishedHeight]
  -[SFUnifiedBar _contentViewSpacing]
  -[SFUnifiedBar extendedBottomHeight]
  -[SFUnifiedBar _updateSquishedAccessoryViews]
  -[SFUnifiedBar setBarTheme:animated:]
  -[SFUnifiedBar _updateSeparatorColor]
  -[SFUnifiedBar setContentArrangement:]
  -[SFUnifiedBar inlineContentViewPinsScrollPositionToTrailingEdgeDuringResize]
  -[SFUnifiedBar setMarginLevel:]
  -[SFUnifiedBar setBackgroundVisibility:]
  -[SFUnifiedBar setChromelessScrollDistance:]
  -[SFUnifiedBar _showsSquishedContent]
  -[SFUnifiedBar contentArrangement]
  -[SFUnifiedBar setExtendedBottomHeight:]
  -[SFUnifiedBar marginLevel]
  -[SFUnifiedBar leadingItemContainerView]
  -[SFUnifiedBar trailingItemContainerView]
  -[SFUnifiedBar backgroundVisibility]


SFDialogContentView : UIView <UITextFieldDelegate, UITableViewDataSource, UITableViewDelegate>
 @property  SFDialogView *dialogView
 @property  NSArray *actions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFDialogContentView setActions:]
  -[SFDialogContentView endEditing]
  -[SFDialogContentView textFieldShouldReturn:]
  -[SFDialogContentView initWithCoder:]
  -[SFDialogContentView traitCollectionDidChange:]
  -[SFDialogContentView updateConstraints]
  -[SFDialogContentView tableView:numberOfRowsInSection:]
  -[SFDialogContentView .cxx_destruct]
  -[SFDialogContentView tableView:didSelectRowAtIndexPath:]
  -[SFDialogContentView layoutSubviews]
  -[SFDialogContentView tableView:cellForRowAtIndexPath:]
  -[SFDialogContentView canBecomeFirstResponder]
  -[SFDialogContentView actions]
  -[SFDialogContentView becomeFirstResponder]
  -[SFDialogContentView keyCommands]
  -[SFDialogContentView setMessageText:]
  -[SFDialogContentView canPerformAction:withSender:]
  -[SFDialogContentView initWithFrame:]
  -[SFDialogContentView didAppear]
  -[SFDialogContentView setTitleText:]
  -[SFDialogContentView _wantsPriorityOverFocusUpdates]
  -[SFDialogContentView _updateActionButtons]
  -[SFDialogContentView setDialogView:]
  -[SFDialogContentView setInputText:placeholder:]
  -[SFDialogContentView setPasswordText:placeholder:]
  -[SFDialogContentView setTableViewRows:didSelectRowAction:]
  -[SFDialogContentView _actionTriggered:]
  -[SFDialogContentView _returnAction:]
  -[SFDialogContentView _optionReturnAction:]
  -[SFDialogContentView _escapeAction:]
  -[SFDialogContentView _focusInputTextField:]
  -[SFDialogContentView _desiredButtonsWidth]
  -[SFDialogContentView _setText:placeholder:forTextField:]
  -[SFDialogContentView _usesLoginFormAppearance]
  -[SFDialogContentView _invokeDelegateWithSelectedIndex:]
  -[SFDialogContentView dialogView]


SFClickableButton : UIButton <_UIClickInteractionDelegate>
 @property  BOOL clickEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFClickableButton .cxx_destruct]
  -[SFClickableButton clickInteractionShouldBegin:]
  -[SFClickableButton clickInteractionDidClickUp:]
  -[SFClickableButton clickInteractionDidClickDown:]
  -[SFClickableButton setClickEnabled:]
  -[SFClickableButton isClickEnabled]


SFStartPageBackgroundImageCell : UICollectionViewCell
 @property  <SFStartPageBackgroundImageCellDelegate> *delegate
 @property  BOOL showsCustomImageControls
 @property  BOOL showsSelectionRing
 @property  UIImage *image

  // instance methods
  -[SFStartPageBackgroundImageCell setHighlighted:]
  -[SFStartPageBackgroundImageCell traitCollectionDidChange:]
  -[SFStartPageBackgroundImageCell image]
  -[SFStartPageBackgroundImageCell .cxx_destruct]
  -[SFStartPageBackgroundImageCell tintColorDidChange]
  -[SFStartPageBackgroundImageCell setDelegate:]
  -[SFStartPageBackgroundImageCell initWithFrame:]
  -[SFStartPageBackgroundImageCell delegate]
  -[SFStartPageBackgroundImageCell setImage:]
  -[SFStartPageBackgroundImageCell didSelectClearButton:]
  -[SFStartPageBackgroundImageCell setShowsCustomImageControls:]
  -[SFStartPageBackgroundImageCell setShowsSelectionRing:]
  -[SFStartPageBackgroundImageCell updateSelectionIndicatorColor]
  -[SFStartPageBackgroundImageCell showsCustomImageControls]
  -[SFStartPageBackgroundImageCell showsSelectionRing]


SFAddPKPassesViewController : UIViewController <PKAddPassesViewControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAddPKPassesViewController .cxx_destruct]
  -[SFAddPKPassesViewController viewDidLoad]
  -[SFAddPKPassesViewController addPassesViewControllerDidFinish:]
  -[SFAddPKPassesViewController initWithPasses:dismissalHandler:]


SFWebExtension : WBSWebExtensionData
 @property  WKWebViewConfiguration *extensionWebViewConfiguration
 @property  BOOL isDevelopmentBuild

  // instance methods
  -[SFWebExtension .cxx_destruct]
  -[SFWebExtension webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:]
  -[SFWebExtension _applicationIsActive]
  -[SFWebExtension showOrHidePermissionRequestBannerIfNeeded]
  -[SFWebExtension extensionWebViewConfiguration]
  -[SFWebExtension requestPermissionsFromToolbarItemInTab:completionHandler:]
  -[SFWebExtension userGesturePerformedInTab:]
  -[SFWebExtension defaultWebsiteDataStore]
  -[SFWebExtension checkPermissionAndPromptIfNecessaryToAccessURLs:inTab:options:callingAPIName:completionHandler:]
  -[SFWebExtension canLoadWithErrorString:]
  -[SFWebExtension _hidePermissionBanner]
  -[SFWebExtension _compileDeclarativeNetRequestRules:completionHandler:]
  -[SFWebExtension _backgroundWebViewConfiguration]
  -[SFWebExtension isDevelopmentBuild]
  -[SFWebExtension _showAccessRequestDialogForPendingRequestsAndAdditionalURLs:additionalCallingAPIName:performingUserGestureInTab:completionHandler:]
  -[SFWebExtension _updateLastInteractionDate]
  -[SFWebExtension _lastInteractionDate]
  -[SFWebExtension _canShowBanner]
  -[SFWebExtension permissionRequestBannerWasDismissed]
  -[SFWebExtension showAlertForPendingPermissionRequests]


SFLinkBanner : SFPinnableBanner
 @property  UIImageView *icon
 @property  UILabel *titleLabel
 @property  UILabel *messageLabel
 @property  NSString *messageLabelText
 @property  _SFDimmingButton *openButton
 @property  @? openActionHandler
 @property  BOOL shouldHideIcon
 @property  UIColor *preferredButtonBackgroundColor
 @property  UIColor *preferredButtonTintColor
 @property  @? dismissButtonHandler
 @property  double backdropTopExtension

  // class methods
  +[SFLinkBanner iconHeight]

  // instance methods
  -[SFLinkBanner titleLabel]
  -[SFLinkBanner setDirectionalLayoutMargins:]
  -[SFLinkBanner icon]
  -[SFLinkBanner setMessageLabel:]
  -[SFLinkBanner messageLabel]
  -[SFLinkBanner .cxx_destruct]
  -[SFLinkBanner setTitleLabel:]
  -[SFLinkBanner layoutSubviews]
  -[SFLinkBanner _dismiss]
  -[SFLinkBanner init]
  -[SFLinkBanner setLayoutMargins:]
  -[SFLinkBanner _titleLabelFont]
  -[SFLinkBanner sizeThatFits:]
  -[SFLinkBanner setIcon:]
  -[SFLinkBanner _open]
  -[SFLinkBanner contentSizeCategoryDidChange]
  -[SFLinkBanner _messageLabelFont]
  -[SFLinkBanner setOpenActionHandler:]
  -[SFLinkBanner openButton]
  -[SFLinkBanner setMessageLabelText:]
  -[SFLinkBanner themeDidChange]
  -[SFLinkBanner invalidateBannerLayout]
  -[SFLinkBanner preferredButtonTintColor]
  -[SFLinkBanner preferredButtonBackgroundColor]
  -[SFLinkBanner _setShowsDismissButton:]
  -[SFLinkBanner messageLabelText]
  -[SFLinkBanner setShouldHideIcon:]
  -[SFLinkBanner setDismissButtonHandler:]
  -[SFLinkBanner setBackdropTopExtension:]
  -[SFLinkBanner setOpenButton:]
  -[SFLinkBanner openActionHandler]
  -[SFLinkBanner shouldHideIcon]
  -[SFLinkBanner dismissButtonHandler]
  -[SFLinkBanner backdropTopExtension]


SFBadgeContainerView : UIView
 @property  BOOL showsBadge
 @property  UIView *contentView
 @property  BOOL positionsBadgeRelativeToLayoutMargins
 @property  UIColor *badgeTintColor

  // instance methods
  -[SFBadgeContainerView pulse]
  -[SFBadgeContainerView .cxx_destruct]
  -[SFBadgeContainerView layoutSubviews]
  -[SFBadgeContainerView contentView]
  -[SFBadgeContainerView pointInside:withEvent:]
  -[SFBadgeContainerView setContentView:]
  -[SFBadgeContainerView intrinsicContentSize]
  -[SFBadgeContainerView badgeTintColor]
  -[SFBadgeContainerView setBadgeTintColor:]
  -[SFBadgeContainerView setPositionsBadgeRelativeToLayoutMargins:]
  -[SFBadgeContainerView setShowsBadge:]
  -[SFBadgeContainerView showsBadge]
  -[SFBadgeContainerView positionsBadgeRelativeToLayoutMargins]


SFBadge : UIView
  // instance methods
  -[SFBadge layoutSubviews]
  -[SFBadge tintColorDidChange]
  -[SFBadge initWithFrame:]
  -[SFBadge pointInside:withEvent:]
  -[SFBadge intrinsicContentSize]


SFBadgeMaskView : UIView
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} badgeRect
 @property  CAShapeLayer *shapeLayer

  // class methods
  +[SFBadgeMaskView layerClass]

  // instance methods
  -[SFBadgeMaskView layoutSubviews]
  -[SFBadgeMaskView shapeLayer]
  -[SFBadgeMaskView initWithFrame:]
  -[SFBadgeMaskView pointInside:withEvent:]
  -[SFBadgeMaskView badgeRect]
  -[SFBadgeMaskView _updateShape]
  -[SFBadgeMaskView setBadgeRect:]


_SFClass : NSObject

SFMobileSafariFrameworkClass : NSObject

SFHighlightBanner : SFPinnableBanner
 @property  SLHighlight *highlight
 @property  @? closeActionHandler

  // instance methods
  -[SFHighlightBanner _close]
  -[SFHighlightBanner highlight]
  -[SFHighlightBanner .cxx_destruct]
  -[SFHighlightBanner sizeThatFits:]
  -[SFHighlightBanner initWithHighlight:]
  -[SFHighlightBanner themeDidChange]
  -[SFHighlightBanner closeActionHandler]
  -[SFHighlightBanner setCloseActionHandler:]


SFBannerModel : NSObject
 @property  @? action
 @property  long long contentVariant
 @property  UIImage *image
 @property  NSString *title
 @property  NSString *message
 @property  long long numberOfTrackers
 @property  long long userInterfaceStyle

  // class methods
  +[SFBannerModel bannerWithImage:title:message:dismissHandler:]
  +[SFBannerModel bannerWithTitle:message:dismissHandler:]
  +[SFBannerModel privacyReportBannerWithNumberOfTrackers:selectionHandler:]

  // instance methods
  -[SFBannerModel setUserInterfaceStyle:]
  -[SFBannerModel image]
  -[SFBannerModel .cxx_destruct]
  -[SFBannerModel userInterfaceStyle]
  -[SFBannerModel action]
  -[SFBannerModel isEqual:]
  -[SFBannerModel numberOfTrackers]
  -[SFBannerModel message]
  -[SFBannerModel title]
  -[SFBannerModel initWithContentVariant:action:]
  -[SFBannerModel contentVariant]


SFSectionCustomizationItem : NSObject
 @property  id identifier
 @property  NSString *title
 @property  UIImage *icon
 @property  BOOL enabled

  // class methods
  +[SFSectionCustomizationItem itemWithIdentifier:title:icon:enabled:]

  // instance methods
  -[SFSectionCustomizationItem icon]
  -[SFSectionCustomizationItem .cxx_destruct]
  -[SFSectionCustomizationItem identifier]
  -[SFSectionCustomizationItem isEnabled]
  -[SFSectionCustomizationItem title]
  -[SFSectionCustomizationItem itemWithEnabled:]


SFSectionModel : NSObject
 @property  long long itemType
 @property  SFBannerModel *contentBanner
 @property  @? siteIconConfigurationProvider
 @property  @? siteCardConfigurationProvider
 @property  @? richLinkConfigurationProvider
 @property  @? siteRowConfigurationProvider
 @property  id identifier
 @property  NSString *title
 @property  NSArray *actions
 @property  SFBannerModel *banner
 @property  NSArray *itemIdentifiers
 @property  long long numberOfRowsVisibleWhenCollapsed
 @property  long long numberOfRowsVisibleWhenCollapsedInCompactWidth
 @property  UIMenu *titleMenu
 @property  @? contextMenuProvider
 @property  @? contextMenuCommitHandler
 @property  @? contextMenuDismissHandler
 @property  @? dragItemProvider
 @property  @? dropOperationProvider
 @property  @? dropHandler

  // class methods
  +[SFSectionModel toggleExpandedAction]
  +[SFSectionModel siteCardSectionWithIdentifier:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel siteRowSectionWithIdentifier:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel siteIconSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel richLinkSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel bannerSectionWithIdentifier:title:banner:]
  +[SFSectionModel footerSectionWithIdentifier:action:]
  +[SFSectionModel siteRowSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel richLinkSectionWithIdentifier:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel bannerSectionWithIdentifier:banner:]
  +[SFSectionModel siteCardSectionWithIdentifier:title:actions:banner:identifiers:configurationProvider:]
  +[SFSectionModel siteIconSectionWithIdentifier:actions:banner:identifiers:configurationProvider:]

  // instance methods
  -[SFSectionModel itemIdentifiers]
  -[SFSectionModel contextMenuCommitHandler]
  -[SFSectionModel siteIconConfigurationProvider]
  -[SFSectionModel setNumberOfRowsVisibleWhenCollapsedInCompactWidth:]
  -[SFSectionModel .cxx_destruct]
  -[SFSectionModel setTitleMenu:]
  -[SFSectionModel dropOperationProvider]
  -[SFSectionModel richLinkConfigurationProvider]
  -[SFSectionModel siteRowConfigurationProvider]
  -[SFSectionModel actions]
  -[SFSectionModel itemType]
  -[SFSectionModel isEqual:]
  -[SFSectionModel setDropHandler:]
  -[SFSectionModel identifier]
  -[SFSectionModel setContextMenuCommitHandler:]
  -[SFSectionModel title]
  -[SFSectionModel numberOfRowsVisibleWhenCollapsed]
  -[SFSectionModel banner]
  -[SFSectionModel setContextMenuDismissHandler:]
  -[SFSectionModel contentBanner]
  -[SFSectionModel setContextMenuProvider:]
  -[SFSectionModel setNumberOfRowsVisibleWhenCollapsed:]
  -[SFSectionModel dragItemProvider]
  -[SFSectionModel siteCardConfigurationProvider]
  -[SFSectionModel setDragItemProvider:]
  -[SFSectionModel titleMenu]
  -[SFSectionModel setDropOperationProvider:]
  -[SFSectionModel contextMenuProvider]
  -[SFSectionModel contextMenuDismissHandler]
  -[SFSectionModel initWithIdentifier:title:actions:banner:itemType:itemIdentifiers:configurationProvider:]
  -[SFSectionModel dropHandler]
  -[SFSectionModel numberOfRowsVisibleWhenCollapsedInCompactWidth]


SFAuthenticatorDialog : SFDialog <SFAuthenticatorDialog>
 @property  NSString *title
 @property  NSString *message
 @property  NSArray *actions
 @property  _WKWebAuthenticationPanel *panel
 @property  BOOL isForUpdateOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFAuthenticatorDialog setActions:]
  -[SFAuthenticatorDialog presentationStyle]
  -[SFAuthenticatorDialog setTitle:]
  -[SFAuthenticatorDialog panel]
  -[SFAuthenticatorDialog .cxx_destruct]
  -[SFAuthenticatorDialog setMessage:]
  -[SFAuthenticatorDialog actions]
  -[SFAuthenticatorDialog message]
  -[SFAuthenticatorDialog title]
  -[SFAuthenticatorDialog transitionToState:]
  -[SFAuthenticatorDialog dealloc]
  -[SFAuthenticatorDialog setIsForUpdateOnly:]
  -[SFAuthenticatorDialog updateWebAuthenticationPanel:]
  -[SFAuthenticatorDialog requestPINWithRemainingRetries:completionHandler:]
  -[SFAuthenticatorDialog selectAssertionResponse:source:completionHandler:]
  -[SFAuthenticatorDialog decidePolicyForLocalAuthenticatorWithCompletionHandler:]
  -[SFAuthenticatorDialog didCompleteWithResponse:]
  -[SFAuthenticatorDialog initWithPanel:]
  -[SFAuthenticatorDialog newDialogViewRepresentation]
  -[SFAuthenticatorDialog useSecurityKeyAction]
  -[SFAuthenticatorDialog _shake]
  -[SFAuthenticatorDialog triggerUseSecurityKey]
  -[SFAuthenticatorDialog _didSelectRow:]
  -[SFAuthenticatorDialog isForUpdateOnly]


SFBrowserMenuProvider : NSObject
  // class methods
  +[SFBrowserMenuProvider sharedProvider]

  // instance methods
  -[SFBrowserMenuProvider .cxx_destruct]
  -[SFBrowserMenuProvider init]
  -[SFBrowserMenuProvider commandConflictsWithTextEditing:]
  -[SFBrowserMenuProvider rebuildMenuIfNeededForPersona:]
  -[SFBrowserMenuProvider _enabledExtensionsDidChange]
  -[SFBrowserMenuProvider _setMenusIfNecessaryForPersona:]
  -[SFBrowserMenuProvider _setMenusForPersona:withBuilder:]
  -[SFBrowserMenuProvider _commandWithAction:input:modifierFlags:discoverabilityTitle:webInterceptable:alternates:]
  -[SFBrowserMenuProvider _commandWithAction:input:modifierFlags:webInterceptable:property:]
  -[SFBrowserMenuProvider _commandWithAction:input:modifierFlags:discoverabilityTitle:webInterceptable:]
  -[SFBrowserMenuProvider _placeholderCommandWithAction:input:modifierFlags:discoverabilityTitle:]
  -[SFBrowserMenuProvider _commandWithPriorityOverTextEditingForCommand:]
  -[SFBrowserMenuProvider _switchToTabCommands]
  -[SFBrowserMenuProvider _extensionsMenu]
  -[SFBrowserMenuProvider _commandWithAction:input:modifierFlags:discoverabilityTitle:webInterceptable:property:alternates:]
  -[SFBrowserMenuProvider setMenusForSafariWithBuilder:]
  -[SFBrowserMenuProvider setMenusIfNecessaryForSafariViewServiceWithBuilder:]


SFUnifiedTabBarItemAccessoryButtonArrangement : NSObject
 @property  NSArray *leadingButtonTypes
 @property  NSArray *trailingButtonTypes

  // instance methods
  -[SFUnifiedTabBarItemAccessoryButtonArrangement .cxx_destruct]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement init]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement containsButtonType:]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement initUsingButtonLayout:filteringButtonsUsingBlock:]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement leadingButtonTypes]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement trailingButtonTypes]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement initWithLeadingButtonTypes:trailingButtonTypes:]
  -[SFUnifiedTabBarItemAccessoryButtonArrangement isEqualToArrangement:]


SFUnifiedBarTheme : SFThemeColorBarTheme <SFUnifiedTabBarItemTitleThemeProviding>
 @property  BOOL isPrivate
 @property  UIColor *tabAccessoryButtonTintColor
 @property  UIColor *activeTabAccessoryButtonTintColor
 @property  UIColor *inputFieldAccessoryButtonTintColor
 @property  UIColor *inputFieldSecondaryAccessoryButtonTintColor
 @property  UIColor *selectedMenuButtonTintColor
 @property  UIColor *separatorColor
 @property  UIColor *progressBarTintColor
 @property  UIColor *tabProgressBarTintColor
 @property  UIColor *activeTabProgressBarTintColor
 @property  UIColor *tabControlsTintColor
 @property  UIColor *activeTabControlsTintColor
 @property  UIColor *overridePlatterColor
 @property  UIColor *activeTabFieldTintColor
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *titleTheme
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *tabTitleTheme
 @property  SFUnifiedTabBarItemTitleContainerViewTheme *activeTabTitleTheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFUnifiedBarTheme defaultTheme]

  // instance methods
  -[SFUnifiedBarTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[SFUnifiedBarTheme progressBarTintColor]
  -[SFUnifiedBarTheme isPrivate]
  -[SFUnifiedBarTheme separatorColor]
  -[SFUnifiedBarTheme activeTabTitleTheme]
  -[SFUnifiedBarTheme .cxx_destruct]
  -[SFUnifiedBarTheme activeTabControlsTintColor]
  -[SFUnifiedBarTheme overridePlatterColor]
  -[SFUnifiedBarTheme selectedMenuButtonTintColor]
  -[SFUnifiedBarTheme inputFieldAccessoryButtonTintColor]
  -[SFUnifiedBarTheme tabProgressBarTintColor]
  -[SFUnifiedBarTheme tabTitleTheme]
  -[SFUnifiedBarTheme titleTheme]
  -[SFUnifiedBarTheme tabAccessoryButtonTintColor]
  -[SFUnifiedBarTheme activeTabProgressBarTintColor]
  -[SFUnifiedBarTheme inputFieldSecondaryAccessoryButtonTintColor]
  -[SFUnifiedBarTheme tabControlsTintColor]
  -[SFUnifiedBarTheme activeTabAccessoryButtonTintColor]
  -[SFUnifiedBarTheme activeTabFieldTintColor]


SFMoreMenuButton : _SFDimmingButton <SFDeferrableUpdateView>
 @property  long long progressStyle
 @property  double downloadProgress
 @property  long long symbolScale
 @property  BOOL iconFilled
 @property  UIColor *progressTintColor
 @property  {NSDirectionalEdgeInsets=dddd} contentInsets

  // instance methods
  -[SFMoreMenuButton downloadProgress]
  -[SFMoreMenuButton _updateImage]
  -[SFMoreMenuButton setDownloadProgress:]
  -[SFMoreMenuButton _progressViewTrackWidth]
  -[SFMoreMenuButton setContentInsets:]
  -[SFMoreMenuButton traitCollectionDidChange:]
  -[SFMoreMenuButton contentInsets]
  -[SFMoreMenuButton .cxx_destruct]
  -[SFMoreMenuButton _shouldShowProgressView]
  -[SFMoreMenuButton setDownloadProgress:animated:]
  -[SFMoreMenuButton _setShowsProgressView:]
  -[SFMoreMenuButton layoutSubviews]
  -[SFMoreMenuButton tintColorDidChange]
  -[SFMoreMenuButton setProgressTintColor:]
  -[SFMoreMenuButton _updateProgressViewMetrics]
  -[SFMoreMenuButton progressStyle]
  -[SFMoreMenuButton setSelected:]
  -[SFMoreMenuButton isIconFilled]
  -[SFMoreMenuButton initWithFrame:]
  -[SFMoreMenuButton _updateImageAllowingDissolve:]
  -[SFMoreMenuButton _updateContentsAnimated:]
  -[SFMoreMenuButton setNeedsPulseOnView:]
  -[SFMoreMenuButton didMoveToWindow]
  -[SFMoreMenuButton deferrableUpdateViewState]
  -[SFMoreMenuButton symbolScale]
  -[SFMoreMenuButton setSymbolScale:]
  -[SFMoreMenuButton progressTintColor]
  -[SFMoreMenuButton setIconFilled:]
  -[SFMoreMenuButton _progressViewRadius]
  -[SFMoreMenuButton updateContents]
  -[SFMoreMenuButton setProgressStyle:]


_SFSiteMetadataManager : WBSSiteMetadataManager
 @property  _SFFaviconProvider *faviconProvider
 @property  _SFSavedAccountTouchIconCache *savedAccountTouchIconCache
 @property  _SFTouchIconCache *touchIconCache
 @property  WBSLeadImageCache *leadImageCache
 @property  _SFLinkPresentationIconCache *linkPresentationIconCache

  // class methods
  +[_SFSiteMetadataManager setSharedSiteMetadataManager:]
  +[_SFSiteMetadataManager setSharedSiteMetadataManagerProvider:]
  +[_SFSiteMetadataManager sharedSiteMetadataManager]
  +[_SFSiteMetadataManager hasSharedSiteMetadataManager]

  // instance methods
  -[_SFSiteMetadataManager leadImageCache]
  -[_SFSiteMetadataManager .cxx_destruct]
  -[_SFSiteMetadataManager touchIconCache]
  -[_SFSiteMetadataManager scheduleLowPriorityRequestForBookmarks:]
  -[_SFSiteMetadataManager linkPresentationIconCache]
  -[_SFSiteMetadataManager faviconProvider]
  -[_SFSiteMetadataManager initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:]
  -[_SFSiteMetadataManager savedAccountTouchIconCache]


SFSystemAlert : NSObject
 @property  @? completionBlock

  // class methods
  +[SFSystemAlert webAuthenticationAlertForDomain:appBundleID:]
  +[SFSystemAlert _displayNameForBundleID:]
  +[SFSystemAlert readingListAlertForDomain:appBundleID:]
  +[SFSystemAlert searchEngineSettingAlert]

  // instance methods
  -[SFSystemAlert .cxx_destruct]
  -[SFSystemAlert cancel]
  -[SFSystemAlert completionBlock]
  -[SFSystemAlert dealloc]
  -[SFSystemAlert setCompletionBlock:]
  -[SFSystemAlert scheduleWithCompletionBlock:]
  -[SFSystemAlert initWithTitle:message:affirmativeButtonTitle:negativeButtonTitle:]


SFFaviconView : UIView
 @property  UIImage *icon
 @property  long long iconContentMode
 @property  UIImageSymbolConfiguration *preferredSymbolConfiguration
 @property  UIColor *themeColor
 @property  double trailingInset
 @property  @? trailingInsetChangeHandler

  // instance methods
  -[SFFaviconView themeColor]
  -[SFFaviconView icon]
  -[SFFaviconView .cxx_destruct]
  -[SFFaviconView preferredSymbolConfiguration]
  -[SFFaviconView setPreferredSymbolConfiguration:]
  -[SFFaviconView layoutSubviews]
  -[SFFaviconView setIcon:]
  -[SFFaviconView initWithFrame:]
  -[SFFaviconView intrinsicContentSize]
  -[SFFaviconView iconContentMode]
  -[SFFaviconView trailingInset]
  -[SFFaviconView setIconContentMode:]
  -[SFFaviconView setTrailingInset:]
  -[SFFaviconView setTrailingInsetChangeHandler:]
  -[SFFaviconView setThemeColor:]
  -[SFFaviconView _updateIconBackingColorAndInset]
  -[SFFaviconView _determineIconBackingColorAndInsets:]
  -[SFFaviconView trailingInsetChangeHandler]


SFWebExtensionButton : NSObject
 @property  WBSWebExtensionData *extension
 @property  UIImage *image
 @property  BOOL badged

  // instance methods
  -[SFWebExtensionButton image]
  -[SFWebExtensionButton .cxx_destruct]
  -[SFWebExtensionButton extension]
  -[SFWebExtensionButton badged]
  -[SFWebExtensionButton initWithExtension:image:badged:]


SFWebExtensionButtonConfiguration : NSObject
 @property  unsigned long activeExtensionCount
 @property  BOOL alwaysShowMultipleExtensionsButton
 @property  NSArray *buttons

  // instance methods
  -[SFWebExtensionButtonConfiguration .cxx_destruct]
  -[SFWebExtensionButtonConfiguration isEqual:]
  -[SFWebExtensionButtonConfiguration buttons]
  -[SFWebExtensionButtonConfiguration alwaysShowMultipleExtensionsButton]
  -[SFWebExtensionButtonConfiguration activeExtensionCount]
  -[SFWebExtensionButtonConfiguration initWithActiveExtensionCount:alwaysShowMultipleExtensionsButton:buttons:]


SFUnifiedBarContentArrangement : NSObject
 @property  NSArray *allContentViews
 @property  UIView<SFUnifiedBarContentView> *inlineContentView
 @property  NSArray *standaloneContentViews

  // instance methods
  -[SFUnifiedBarContentArrangement .cxx_destruct]
  -[SFUnifiedBarContentArrangement init]
  -[SFUnifiedBarContentArrangement isEqual:]
  -[SFUnifiedBarContentArrangement allContentViews]
  -[SFUnifiedBarContentArrangement standaloneContentViews]
  -[SFUnifiedBarContentArrangement inlineContentView]
  -[SFUnifiedBarContentArrangement initWithInlineContentView:standaloneContentViews:]


SFRingView : UIView
 @property  CAShapeLayer *shapeLayer
 @property  double radius

  // class methods
  +[SFRingView layerClass]

  // instance methods
  -[SFRingView radius]
  -[SFRingView tintColorDidChange]
  -[SFRingView _shouldAnimatePropertyWithKey:]
  -[SFRingView shapeLayer]
  -[SFRingView setRadius:]
  -[SFRingView initWithFrame:]


SFProgressView : UIView
 @property  long long style
 @property  double progress
 @property  double radius
 @property  double trackWidth
 @property  UIColor *trackTintColor

  // instance methods
  -[SFProgressView .cxx_destruct]
  -[SFProgressView setStyle:]
  -[SFProgressView layoutSubviews]
  -[SFProgressView radius]
  -[SFProgressView progress]
  -[SFProgressView sizeThatFits:]
  -[SFProgressView setRadius:]
  -[SFProgressView setProgress:animated:completion:]
  -[SFProgressView initWithFrame:]
  -[SFProgressView trackTintColor]
  -[SFProgressView setTrackTintColor:]
  -[SFProgressView setProgress:]
  -[SFProgressView style]
  -[SFProgressView intrinsicContentSize]
  -[SFProgressView setTrackWidth:]
  -[SFProgressView _updateRectangularProgressFill]
  -[SFProgressView trackWidth]


SFCapsuleURLField : UIView <SFCapsuleContentView>
 @property  UITextField *textField
 @property  BOOL showsVoiceSearchButton
 @property  @? voiceSearchTappedAction
 @property  {_NSRange=QQ} rangeOfKeyText
 @property  <SFCapsuleContentViewSizeUpdating> *sizeUpdater
 @property  BOOL isSelected
 @property  BOOL isMinimized
 @property  BOOL isHighlighted
 @property  @? highlightObserver
 @property  _SFBarTheme *theme
 @property  long long layoutStyle
 @property  double minimizedContentHorizontalInset
 @property  double minimizationPercent
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} keyContentRect
 @property  {CGAffineTransform=dddddd} keyContentTransform
 @property  double nonKeyContentAlpha
 @property  NSNumber *microphoneContentOriginX
 @property  {CGAffineTransform=dddddd} microphoneContentTransform
 @property  @? buttonPointerStyleProvider
 @property  UIView *unclippedContainer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFCapsuleURLField initWithTextField:]
  -[SFCapsuleURLField textField]
  -[SFCapsuleURLField _tap:]
  -[SFCapsuleURLField updateConstraints]
  -[SFCapsuleURLField .cxx_destruct]
  -[SFCapsuleURLField showsVoiceSearchButton]
  -[SFCapsuleURLField layoutSubviews]
  -[SFCapsuleURLField setShowsVoiceSearchButton:]
  -[SFCapsuleURLField dealloc]
  -[SFCapsuleURLField _voiceSearchAvailabilityDidChange:]
  -[SFCapsuleURLField textFieldDidChange:]
  -[SFCapsuleURLField _updatePlaceholderText]
  -[SFCapsuleURLField keyContentRect]
  -[SFCapsuleURLField keyContentTransform]
  -[SFCapsuleURLField setKeyContentTransform:]
  -[SFCapsuleURLField nonKeyContentAlpha]
  -[SFCapsuleURLField setNonKeyContentAlpha:]
  -[SFCapsuleURLField microphoneContentOriginX]
  -[SFCapsuleURLField microphoneContentTransform]
  -[SFCapsuleURLField setMicrophoneContentTransform:]
  -[SFCapsuleURLField buttonPointerStyleProvider]
  -[SFCapsuleURLField setButtonPointerStyleProvider:]
  -[SFCapsuleURLField _clearTextButtonTapped:]
  -[SFCapsuleURLField _newDimmingButtonWithSystemImageNamed:action:accessibilityIdentifier:]
  -[SFCapsuleURLField _voiceSearchButtonTapped:]
  -[SFCapsuleURLField _updateClearButtonVisibility]
  -[SFCapsuleURLField voiceSearchTappedAction]
  -[SFCapsuleURLField setVoiceSearchTappedAction:]
  -[SFCapsuleURLField rangeOfKeyText]
  -[SFCapsuleURLField setRangeOfKeyText:]


_SFLinkPresentationIconCache : NSObject <WBSSiteMetadataProvider>
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_SFLinkPresentationIconCache imageForHost:]
  -[_SFLinkPresentationIconCache .cxx_destruct]
  -[_SFLinkPresentationIconCache savePendingChangesBeforeTermination]
  -[_SFLinkPresentationIconCache emptyCaches]
  -[_SFLinkPresentationIconCache initWithImageDirectoryURL:]
  -[_SFLinkPresentationIconCache responseForRequest:willProvideUpdates:]
  -[_SFLinkPresentationIconCache _historyItemsWereRemoved:]
  -[_SFLinkPresentationIconCache purgeUnneededCacheEntries]
  -[_SFLinkPresentationIconCache providerDelegate]
  -[_SFLinkPresentationIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[_SFLinkPresentationIconCache saveImage:forHost:]
  -[_SFLinkPresentationIconCache setProviderDelegate:]
  -[_SFLinkPresentationIconCache dealloc]
  -[_SFLinkPresentationIconCache canHandleRequest:]


SFCapsuleInputAccessorySpacerView : UIView
 @property  double capsuleHeight

  // instance methods
  -[SFCapsuleInputAccessorySpacerView sizeThatFits:]
  -[SFCapsuleInputAccessorySpacerView setCapsuleHeight:]
  -[SFCapsuleInputAccessorySpacerView initWithCapsuleView:initialWidth:]
  -[SFCapsuleInputAccessorySpacerView capsuleHeight]


SFTabHoverPreviewController : NSObject
 @property  <SFTabHoverPreviewControllerDelegate> *delegate
 @property  UIHoverGestureRecognizer *hoverRecognizer
 @property  BOOL enabled

  // instance methods
  -[SFTabHoverPreviewController .cxx_destruct]
  -[SFTabHoverPreviewController setDelegate:]
  -[SFTabHoverPreviewController init]
  -[SFTabHoverPreviewController isEnabled]
  -[SFTabHoverPreviewController cancel]
  -[SFTabHoverPreviewController updateWithItem:]
  -[SFTabHoverPreviewController dismiss]
  -[SFTabHoverPreviewController delegate]
  -[SFTabHoverPreviewController setEnabled:]
  -[SFTabHoverPreviewController setHoverRecognizer:]
  -[SFTabHoverPreviewController setNeedsSnapshotUpdate]
  -[SFTabHoverPreviewController _cancelOrCloseHoverPreviewWithGracePeriod:]
  -[SFTabHoverPreviewController _showHoverPreviewForItem:]
  -[SFTabHoverPreviewController _temporarilyDisableHover]
  -[SFTabHoverPreviewController hoverRecognizer]


SFBrowserApplication : UIApplication <UIApplicationDelegate>
 @property  <SFBrowserApplicationProxy> *proxy
 @property  UIWindow *window
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFBrowserApplication .cxx_destruct]
  -[SFBrowserApplication proxy]


SFCloseButton : UIButton
 @property  UIImageView *imageView

  // instance methods
  -[SFCloseButton imageView]
  -[SFCloseButton .cxx_destruct]
  -[SFCloseButton layoutSubviews]
  -[SFCloseButton initWithStyle:primaryAction:]


SFPopoverSizingTableViewController : UITableViewController
 @property  long long minimumNumberOfRows
 @property  long long maximumNumberOfRows
 @property  BOOL hasTranslucentAppearance

  // class methods
  +[SFPopoverSizingTableViewController initialize]
  +[SFPopoverSizingTableViewController caculateHeightForTableView:targetGlobalRow:outGlobalRow:]
  +[SFPopoverSizingTableViewController tableViewCellForSizeEstimation]

  // instance methods
  -[SFPopoverSizingTableViewController preferredContentSize]
  -[SFPopoverSizingTableViewController willTransitionToTraitCollection:withTransitionCoordinator:]
  -[SFPopoverSizingTableViewController traitCollectionDidChange:]
  -[SFPopoverSizingTableViewController .cxx_destruct]
  -[SFPopoverSizingTableViewController didMoveToParentViewController:]
  -[SFPopoverSizingTableViewController viewDidAppear:]
  -[SFPopoverSizingTableViewController willMoveToParentViewController:]
  -[SFPopoverSizingTableViewController cancelKeyPressed]
  -[SFPopoverSizingTableViewController viewDidLayoutSubviews]
  -[SFPopoverSizingTableViewController viewWillAppear:]
  -[SFPopoverSizingTableViewController _backgroundBlurEffect]
  -[SFPopoverSizingTableViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[SFPopoverSizingTableViewController updatePreferredContentSize]
  -[SFPopoverSizingTableViewController maximumNumberOfRows]
  -[SFPopoverSizingTableViewController hasTranslucentAppearance]
  -[SFPopoverSizingTableViewController updateTranslucentAppearance]
  -[SFPopoverSizingTableViewController backgroundColorUsingTranslucentAppearance:]
  -[SFPopoverSizingTableViewController minimumNumberOfRows]
  -[SFPopoverSizingTableViewController _updateTranslucentAppearanceIfNeeded]
  -[SFPopoverSizingTableViewController _needsTranslucentAppearanceUpdate]


SFBookmarkTouchIconRequest : WBSTouchIconRequest
 @property  WebBookmark *bookmark

  // class methods
  +[SFBookmarkTouchIconRequest requestWithBookmark:iconGenerationEnabled:]
  +[SFBookmarkTouchIconRequest requestWithBookmark:]

  // instance methods
  -[SFBookmarkTouchIconRequest bookmark]
  -[SFBookmarkTouchIconRequest initWithBookmark:iconGenerationEnabled:]
  -[SFBookmarkTouchIconRequest .cxx_destruct]
  -[SFBookmarkTouchIconRequest isEqual:]
  -[SFBookmarkTouchIconRequest initWithBookmark:]


SFCapsuleCollectionViewItem : NSObject
 @property  long long animationCount
 @property  SFCapsuleView *capsuleView
 @property  SFCapsuleCollectionView *collectionView
 @property  BOOL capsuleIsDetached
 @property  BOOL capsuleContentIsValid

  // instance methods
  -[SFCapsuleCollectionViewItem initWithCollectionView:]
  -[SFCapsuleCollectionViewItem .cxx_destruct]
  -[SFCapsuleCollectionViewItem collectionView]
  -[SFCapsuleCollectionViewItem animationCount]
  -[SFCapsuleCollectionViewItem setAnimationCount:]
  -[SFCapsuleCollectionViewItem invalidateCapsuleHeight]
  -[SFCapsuleCollectionViewItem capsuleView]
  -[SFCapsuleCollectionViewItem capsuleIsDetached]
  -[SFCapsuleCollectionViewItem capsuleHeightForWidth:defaultHeight:state:index:]
  -[SFCapsuleCollectionViewItem setCapsuleIsDetached:]
  -[SFCapsuleCollectionViewItem setCapsuleContentIsValid:]
  -[SFCapsuleCollectionViewItem setCapsuleView:]
  -[SFCapsuleCollectionViewItem capsuleContentIsValid]


_SFSavedAccountTouchIconCache : WBSTouchIconCache
  // instance methods
  -[_SFSavedAccountTouchIconCache _operationWithRequest:completionHandler:]
  -[_SFSavedAccountTouchIconCache canHandleRequest:]


SFStoreBanner : SFPinnableBanner <SKProductPageViewControllerDelegate, SFAppSuggestionBanner>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <SFAppSuggestionBannerDelegate> *delegate

  // class methods
  +[SFStoreBanner omitsBottomSeparator]

  // instance methods
  -[SFStoreBanner .cxx_destruct]
  -[SFStoreBanner layoutSubviews]
  -[SFStoreBanner setDelegate:]
  -[SFStoreBanner sizeThatFits:]
  -[SFStoreBanner delegate]
  -[SFStoreBanner dealloc]
  -[SFStoreBanner setTheme:animated:]
  -[SFStoreBanner productPage:willMakePurchases:]
  -[SFStoreBanner productPage:didFinishPurchase:withError:]
  -[SFStoreBanner productPage:didFinishWithResult:]
  -[SFStoreBanner productPage:didFailLoadWithError:]
  -[SFStoreBanner initWithProductID:mainDocumentURL:affiliateData:applicationLaunchArgument:]
  -[SFStoreBanner _setBlockedByUser]


_SFTouchIconCache : WBSTouchIconCache
  // class methods
  +[_SFTouchIconCache _generateDefaultFavoritesIcon]
  +[_SFTouchIconCache _monogramConfiguration]
  +[_SFTouchIconCache defaultBackgroundColor]

  // instance methods
  -[_SFTouchIconCache _didLoadTouchIcon:withCacheSettingsEntry:]
  -[_SFTouchIconCache _operationWithRequest:completionHandler:]
  -[_SFTouchIconCache canHandleRequest:]


SFThemeColorBarTheme : _SFBarTheme
 @property  UIColor *themeColor
 @property  UIColor *overrideTintColor
 @property  long long userInterfaceStyle
 @property  UITraitCollection *traitCollection
 @property  BOOL appliesDarkeningOverlay
 @property  NSString *backdropGroupName
 @property  UIBlurEffect *overrideBackdropEffect

  // class methods
  +[SFThemeColorBarTheme canTintPrivateStyles]
  +[SFThemeColorBarTheme prefersThemeColorEffect]

  // instance methods
  -[SFThemeColorBarTheme setBackdropGroupName:]
  -[SFThemeColorBarTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[SFThemeColorBarTheme overrideTintColor]
  -[SFThemeColorBarTheme applyBackdropEffectsToView:]
  -[SFThemeColorBarTheme backdropEffect]
  -[SFThemeColorBarTheme themeColor]
  -[SFThemeColorBarTheme backdropEffects]
  -[SFThemeColorBarTheme .cxx_destruct]
  -[SFThemeColorBarTheme userInterfaceStyle]
  -[SFThemeColorBarTheme traitCollection]
  -[SFThemeColorBarTheme appliesDarkeningOverlay]
  -[SFThemeColorBarTheme isEqual:]
  -[SFThemeColorBarTheme setAppliesDarkeningOverlay:]
  -[SFThemeColorBarTheme backdropGroupName]
  -[SFThemeColorBarTheme overrideBackdropEffect]
  -[SFThemeColorBarTheme setOverrideBackdropEffect:]


SFOverlayProvider : NSObject <CPSInlineCardViewControllerDelegate>
 @property  UIViewController *overlayViewController
 @property  NSURL *url
 @property  <SFOverlayProviderDelegate> *delegate
 @property  BOOL available
 @property  _SFPerSitePreferencesVendor *_preferencesVendor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFOverlayProvider alwaysShowOverlayForDebug]

  // instance methods
  -[SFOverlayProvider url]
  -[SFOverlayProvider setAvailable:]
  -[SFOverlayProvider .cxx_destruct]
  -[SFOverlayProvider isAvailable]
  -[SFOverlayProvider setDelegate:]
  -[SFOverlayProvider delegate]
  -[SFOverlayProvider overlayViewController]
  -[SFOverlayProvider initWithURL:]
  -[SFOverlayProvider _preferencesVendor]
  -[SFOverlayProvider showOverlayInScrollView:viewController:]
  -[SFOverlayProvider hideOverlayAnimated:]
  -[SFOverlayProvider _setPreferencesVendor:]
  -[SFOverlayProvider cardViewControllerDidDisappear:clipDidOpen:persistUserSettings:]
  -[SFOverlayProvider webViewBackforwardGestureNavigationWillBegin]
  -[SFOverlayProvider webViewBackforwardGestureNavigationDidEnd]


_SFFluidProgressView : UIView <WBSFluidProgressControllerDelegate>
 @property  BOOL progressAnimationSuppressed
 @property  <_SFFluidProgressViewDelegate> *delegate
 @property  BOOL showingProgress
 @property  UIColor *progressBarFillColor
 @property  double cornerRadius
 @property  BOOL alignsToTop
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_SFFluidProgressView defaultHeight]

  // instance methods
  -[_SFFluidProgressView isShowingProgress]
  -[_SFFluidProgressView _animateUsingDefaultTiming:stepAnimationTime:options:animations:completion:]
  -[_SFFluidProgressView setProgressBarFillColor:]
  -[_SFFluidProgressView .cxx_destruct]
  -[_SFFluidProgressView setProgressAnimationSuppressed:]
  -[_SFFluidProgressView layoutSubviews]
  -[_SFFluidProgressView setDelegate:]
  -[_SFFluidProgressView setAlignsToTop:]
  -[_SFFluidProgressView _progressBarBoundsForValue:]
  -[_SFFluidProgressView setProgressToCurrentPositionForState:]
  -[_SFFluidProgressView setCornerRadius:]
  -[_SFFluidProgressView _finishProgressBarWithDuration:]
  -[_SFFluidProgressView fluidProgressControllerFinishProgressBar:animateFillFade:]
  -[_SFFluidProgressView progressAnimationSuppressed]
  -[_SFFluidProgressView setAlignToTop:]
  -[_SFFluidProgressView setProgressAnimationSuppressed:duringFluidProgressState:animated:]
  -[_SFFluidProgressView initWithFrame:]
  -[_SFFluidProgressView cornerRadius]
  -[_SFFluidProgressView alignsToTop]
  -[_SFFluidProgressView delegate]
  -[_SFFluidProgressView fluidProgressController:updateFluidProgressBar:completion:]
  -[_SFFluidProgressView fluidProgressController:setProgressToCurrentPosition:]
  -[_SFFluidProgressView progressBarFillColor]
  -[_SFFluidProgressView fluidProgressController:startFluidProgressBar:animateFillFade:]


SFUnifiedBarItem : NSObject
 @property  SFUnifiedBarItemView *reusableView
 @property  long long activeAnimationCount
 @property  SFUnifiedBarItemView *view
 @property  BOOL enabled
 @property  BOOL hidden
 @property  BOOL dragging
 @property  BOOL dropping
 @property  SFUnifiedBarItem *secondaryItem
 @property  unsigned long spacingOptions

  // instance methods
  -[SFUnifiedBarItem isDropping]
  -[SFUnifiedBarItem .cxx_destruct]
  -[SFUnifiedBarItem isHidden]
  -[SFUnifiedBarItem isDragging]
  -[SFUnifiedBarItem view]
  -[SFUnifiedBarItem isEnabled]
  -[SFUnifiedBarItem setEnabled:]
  -[SFUnifiedBarItem setHidden:]
  -[SFUnifiedBarItem reusableView]
  -[SFUnifiedBarItem setReusableView:]
  -[SFUnifiedBarItem setSpacingOptions:]
  -[SFUnifiedBarItem activeAnimationCount]
  -[SFUnifiedBarItem setActiveAnimationCount:]
  -[SFUnifiedBarItem spacingOptions]
  -[SFUnifiedBarItem secondaryItem]


_SFCompressedBarButton : UIButton
  // instance methods
  -[_SFCompressedBarButton setHighlighted:]
  -[_SFCompressedBarButton .cxx_destruct]
  -[_SFCompressedBarButton layoutSubviews]
  -[_SFCompressedBarButton initWithFrame:]


SFSizeObservingView : UIView
 @property  NSLayoutDimension *observedHeightDimension
 @property  @? sizeChangeCallback

  // instance methods
  -[SFSizeObservingView hitTest:withEvent:]
  -[SFSizeObservingView .cxx_destruct]
  -[SFSizeObservingView layoutSubviews]
  -[SFSizeObservingView initWithFrame:]
  -[SFSizeObservingView observedHeightDimension]
  -[SFSizeObservingView setObservedHeightDimension:]
  -[SFSizeObservingView sizeChangeCallback]
  -[SFSizeObservingView setSizeChangeCallback:]


SFSearchBarWithSeparator : UISearchBar
  // instance methods
  -[SFSearchBarWithSeparator .cxx_destruct]
  -[SFSearchBarWithSeparator layoutSubviews]
  -[SFSearchBarWithSeparator initWithFrame:]


SFApplicationManifestFetcher : NSObject
  // instance methods
  -[SFApplicationManifestFetcher initWithWebView:]
  -[SFApplicationManifestFetcher .cxx_destruct]
  -[SFApplicationManifestFetcher getApplicationManifestWithCompletionHandler:]


SFTransitionCoordinator : NSObject <SFTransitionCoordinating, SFTransitionContext>
 @property  <SFTransitionCoordinating> *publicCoordinator
 @property  BOOL requiresKeyframeAnimations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isTransition
 @property  BOOL usesKeyframeAnimations

  // instance methods
  -[SFTransitionCoordinator addCompletion:]
  -[SFTransitionCoordinator addAnimations:]
  -[SFTransitionCoordinator addKeyframeWithRelativeStartTime:relativeDuration:animations:]
  -[SFTransitionCoordinator .cxx_destruct]
  -[SFTransitionCoordinator isTransition]
  -[SFTransitionCoordinator publicCoordinator]
  -[SFTransitionCoordinator initWithAnimations:completion:]
  -[SFTransitionCoordinator performTransitionWithAnimation:inContextOfContainerView:]
  -[SFTransitionCoordinator disableKeyframeAnimations]
  -[SFTransitionCoordinator invokeAnimations]
  -[SFTransitionCoordinator invokeCompletion]
  -[SFTransitionCoordinator addRetargetableAnimations:]
  -[SFTransitionCoordinator requiresKeyframeAnimations]
  -[SFTransitionCoordinator usesKeyframeAnimations]


SFUnifiedBarItemArrangement : NSObject
 @property  NSArray *leadingItems
 @property  NSArray *trailingItems

  // instance methods
  -[SFUnifiedBarItemArrangement .cxx_destruct]
  -[SFUnifiedBarItemArrangement init]
  -[SFUnifiedBarItemArrangement isEqual:]
  -[SFUnifiedBarItemArrangement initWithLeadingItems:trailingItems:]
  -[SFUnifiedBarItemArrangement leadingItems]
  -[SFUnifiedBarItemArrangement trailingItems]
  -[SFUnifiedBarItemArrangement enumerateAllItemsUsingBlock:]


SFURLLabelFadeOutImageView : UIImageView
  // instance methods
  -[SFURLLabelFadeOutImageView _shouldAnimatePropertyAdditivelyWithKey:]


SFURLLabel : UIVisualEffectView
 @property  NSString *text
 @property  UIFont *font
 @property  UIColor *textColor
 @property  NSAttributedString *attributedText
 @property  BOOL accessibilityIgnoresInvertColors
 @property  BOOL adjustsFontForContentSizeCategory
 @property  {CGSize=dd} urlSize
 @property  double baselineOffsetFromBottom
 @property  double lastLineBaselineFrameOriginY
 @property  long long textAlignmentEdge
 @property  long long fadeOutEdge
 @property  UIView *URLContainerClipView
 @property  BOOL isAnimatingTextSize

  // instance methods
  -[SFURLLabel setAttributedText:]
  -[SFURLLabel attributedText]
  -[SFURLLabel setText:]
  -[SFURLLabel traitCollectionDidChange:]
  -[SFURLLabel setFont:]
  -[SFURLLabel accessibilityIgnoresInvertColors]
  -[SFURLLabel setAccessibilityIgnoresInvertColors:]
  -[SFURLLabel .cxx_destruct]
  -[SFURLLabel accessibilityLabel]
  -[SFURLLabel textColor]
  -[SFURLLabel adjustsFontForContentSizeCategory]
  -[SFURLLabel layoutSubviews]
  -[SFURLLabel _updateMask]
  -[SFURLLabel fadeOutEdge]
  -[SFURLLabel init]
  -[SFURLLabel isAnimatingTextSize]
  -[SFURLLabel sizeThatFits:]
  -[SFURLLabel setTextColor:]
  -[SFURLLabel font]
  -[SFURLLabel _unclippedContentRect]
  -[SFURLLabel _updateSize]
  -[SFURLLabel _setNeedsUpdateSize]
  -[SFURLLabel initWithFadeOutDistance:]
  -[SFURLLabel _updateSizeIfNeeded]
  -[SFURLLabel textAlignmentEdge]
  -[SFURLLabel urlSize]
  -[SFURLLabel lastLineBaselineFrameOriginY]
  -[SFURLLabel setURLContainerClipView:]
  -[SFURLLabel _needsMask]
  -[SFURLLabel setTextAlignmentEdge:]
  -[SFURLLabel URLContainerClipView]
  -[SFURLLabel endTextSizeAnimation]
  -[SFURLLabel text]
  -[SFURLLabel setAdjustsFontForContentSizeCategory:]
  -[SFURLLabel beginTextSizeAnimation]
  -[SFURLLabel intrinsicContentSize]
  -[SFURLLabel setFadeOutEdge:]
  -[SFURLLabel baselineOffsetFromBottom]


_SFDimmingButton : SFClickableButton
 @property  double normalImageAlpha
 @property  double highlightedImageAlpha
 @property  double highlightAnimationDuration
 @property  UIColor *dimmableBackgroundColor
 @property  NSNumber *tapTargetSideMargin
 @property  NSValue *tapTargetSideMargins
 @property  BOOL alwaysUsesUIMenuOrdering

  // instance methods
  -[_SFDimmingButton setHighlighted:]
  -[_SFDimmingButton highlightAnimationDuration]
  -[_SFDimmingButton setNormalImageAlpha:]
  -[_SFDimmingButton setTapTargetSideMargin:]
  -[_SFDimmingButton _updateImageAlpha]
  -[_SFDimmingButton alwaysUsesUIMenuOrdering]
  -[_SFDimmingButton tapTargetSideMargin]
  -[_SFDimmingButton setHighlightAnimationDuration:]
  -[_SFDimmingButton setHighlightedImageAlpha:]
  -[_SFDimmingButton setAlwaysUsesUIMenuOrdering:]
  -[_SFDimmingButton setDimmableBackgroundColor:]
  -[_SFDimmingButton highlightedImageAlpha]
  -[_SFDimmingButton normalImageAlpha]
  -[_SFDimmingButton _updateBackgroundColor]
  -[_SFDimmingButton tapTargetSideMargins]
  -[_SFDimmingButton dimmableBackgroundColor]
  -[_SFDimmingButton _contextMenuInteraction:styleForMenuWithConfiguration:]
  -[_SFDimmingButton .cxx_destruct]
  -[_SFDimmingButton layoutSubviews]
  -[_SFDimmingButton setTapTargetSideMargins:]
  -[_SFDimmingButton pointInside:withEvent:]


SFHighlightBannerTracker : NSObject
  // class methods
  +[SFHighlightBannerTracker sharedTracker]

  // instance methods
  -[SFHighlightBannerTracker load]
  -[SFHighlightBannerTracker clear]
  -[SFHighlightBannerTracker .cxx_destruct]
  -[SFHighlightBannerTracker init]
  -[SFHighlightBannerTracker _saveOnInteralQueue]
  -[SFHighlightBannerTracker isBannerBlockedForHighlight:completion:]
  -[SFHighlightBannerTracker blockBannerForHighlight:]
  -[SFHighlightBannerTracker unblockBannerForHighlight:]


SFLocalCompletionMatch : WBSURLCompletionMatch
  // instance methods
  -[SFLocalCompletionMatch .cxx_destruct]
  -[SFLocalCompletionMatch userVisibleURLString]
  -[SFLocalCompletionMatch title]
  -[SFLocalCompletionMatch originalURLString]
  -[SFLocalCompletionMatch matchLocation]
  -[SFLocalCompletionMatch initWithCompletionMatch:]


SFLocalSearchResult : SFSearchResult
  // instance methods
  -[SFLocalSearchResult setTitle:]
  -[SFLocalSearchResult url]
  -[SFLocalSearchResult .cxx_destruct]
  -[SFLocalSearchResult setUrl:]
  -[SFLocalSearchResult title]
  -[SFLocalSearchResult initWithCompletionMatch:]


SFCompletionList : NSObject
  // class methods
  +[SFCompletionList resetSearchParameters]
  +[SFCompletionList setSearchParameter:toValue:]
  +[SFCompletionList resultsForQuery:completion:]


SFTransitionCoordinatorBasicAnimation : NSObject <SFTransitionCoordinatorAnimation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFTransitionCoordinatorBasicAnimation .cxx_destruct]
  -[SFTransitionCoordinatorBasicAnimation invokeInContext:]


SFTransitionCoordinatorKeyframeAnimation : NSObject <SFTransitionCoordinatorAnimation>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFTransitionCoordinatorKeyframeAnimation .cxx_destruct]
  -[SFTransitionCoordinatorKeyframeAnimation invokeInContext:]


SFTransitionCoordinatorRetargetableAnimation : SFTransitionCoordinatorBasicAnimation
  // instance methods
  -[SFTransitionCoordinatorRetargetableAnimation invokeInContext:]


SFStartPageCollectionViewController : UIViewController <UICollectionViewDelegate, UIGestureRecognizerDelegate, UICollectionViewDragDelegate_Private, UICollectionViewDropDelegate_Private, SFStartPageDataSourceObserving>
 @property  <SFStartPageCollectionDataSource> *dataSource
 @property  <SFStartPageCollectionDataSource> *strongDataSource
 @property  <SFStartPageCollectionDelegate><SFStartPagePreviewProviding> *delegate
 @property  BOOL displaysSectionHeaders
 @property  BOOL hidesEmptyNavigationBar
 @property  UIScrollView *scrollView
 @property  BOOL wantsWallpaperHiddenForCurrentBackgroundStyle
 @property  BOOL trackingDropSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageCollectionViewController initWithVisualStyleProvider:]
  -[SFStartPageCollectionViewController reloadDataAnimatingDifferences:]
  -[SFStartPageCollectionViewController collectionView:contextMenuConfigurationForItemAtIndexPath:point:]
  -[SFStartPageCollectionViewController scrollDistance]
  -[SFStartPageCollectionViewController collectionView:dragSessionWillBegin:]
  -[SFStartPageCollectionViewController reloadNavigationItemAnimated:]
  -[SFStartPageCollectionViewController _collapsedCapacityForSection:]
  -[SFStartPageCollectionViewController reloadSection:animated:]
  -[SFStartPageCollectionViewController presentViewController:fromItemWithIdentifier:]
  -[SFStartPageCollectionViewController collectionView:itemsForAddingToDragSession:atIndexPath:point:]
  -[SFStartPageCollectionViewController collectionView:dragSessionDidEnd:]
  -[SFStartPageCollectionViewController collectionView:dropSessionDidEnd:]
  -[SFStartPageCollectionViewController isTrackingDropSession]
  -[SFStartPageCollectionViewController collectionView:canFocusItemAtIndexPath:]
  -[SFStartPageCollectionViewController _updateNavigationItemAnimated:]
  -[SFStartPageCollectionViewController configureModelWithIdentifier:usingBlock:]
  -[SFStartPageCollectionViewController cancelGestures]
  -[SFStartPageCollectionViewController collectionView:performDropWithCoordinator:]
  -[SFStartPageCollectionViewController _collectionView:dataOwnerForDropSession:withDestinationIndexPath:]
  -[SFStartPageCollectionViewController collectionView:itemsForBeginningDragSession:atIndexPath:]
  -[SFStartPageCollectionViewController _siteCardSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _collectionView:dataOwnerForDragSession:atIndexPath:]
  -[SFStartPageCollectionViewController collectionView:previewForHighlightingContextMenuWithConfiguration:]
  -[SFStartPageCollectionViewController collectionView:canHandleDropSession:]
  -[SFStartPageCollectionViewController collectionView:dropSessionDidExit:]
  -[SFStartPageCollectionViewController sections]
  -[SFStartPageCollectionViewController _richLinkSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController collectionView:dropSessionDidUpdate:withDestinationIndexPath:]
  -[SFStartPageCollectionViewController collectionView:didSelectItemAtIndexPath:]
  -[SFStartPageCollectionViewController collectionView:dragPreviewParametersForItemAtIndexPath:]
  -[SFStartPageCollectionViewController viewWillLayoutSubviews]
  -[SFStartPageCollectionViewController collectionView:dropSessionDidEnter:]
  -[SFStartPageCollectionViewController collectionView:dragSessionAllowsMoveOperation:]
  -[SFStartPageCollectionViewController traitCollectionDidChange:]
  -[SFStartPageCollectionViewController collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:]
  -[SFStartPageCollectionViewController _applyCurrentSnapshotAnimatingDifferences:]
  -[SFStartPageCollectionViewController collectionView:dropPreviewParametersForItemAtIndexPath:]
  -[SFStartPageCollectionViewController scrollView]
  -[SFStartPageCollectionViewController _reuseIdentifierForCellWithIdentifier:indexPath:]
  -[SFStartPageCollectionViewController _siteIconSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _updateCustomTopBackdrops]
  -[SFStartPageCollectionViewController setDataSource:]
  -[SFStartPageCollectionViewController .cxx_destruct]
  -[SFStartPageCollectionViewController updateCollectionViewContentInset]
  -[SFStartPageCollectionViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[SFStartPageCollectionViewController _updateInteractionEnabled]
  -[SFStartPageCollectionViewController viewDidLoad]
  -[SFStartPageCollectionViewController _toggleExpandedActionForSectionIdentifier:]
  -[SFStartPageCollectionViewController _collectionView:supplementaryViewWithKind:forIndexPath:]
  -[SFStartPageCollectionViewController setDelegate:]
  -[SFStartPageCollectionViewController navigationBarPositionDidChange]
  -[SFStartPageCollectionViewController _configureCell:forIdentifier:indexPath:]
  -[SFStartPageCollectionViewController dataSource]
  -[SFStartPageCollectionViewController _previewForCellAtIndexPath:]
  -[SFStartPageCollectionViewController collectionView:previewForDismissingContextMenuWithConfiguration:]
  -[SFStartPageCollectionViewController setStrongDataSource:]
  -[SFStartPageCollectionViewController _itemLimitForSection:]
  -[SFStartPageCollectionViewController _configureHeader:forSection:atIndexPath:]
  -[SFStartPageCollectionViewController scrollViewDidScroll:]
  -[SFStartPageCollectionViewController _siteIconLayoutForEnvironment:sectionInsets:]
  -[SFStartPageCollectionViewController scrollToTop]
  -[SFStartPageCollectionViewController _customizationSection]
  -[SFStartPageCollectionViewController displaysSectionHeaders]
  -[SFStartPageCollectionViewController _sectionContentInsets]
  -[SFStartPageCollectionViewController viewIsAppearing:]
  -[SFStartPageCollectionViewController _currentSnapshot]
  -[SFStartPageCollectionViewController _layoutForSectionAtIndex:inEnvironment:]
  -[SFStartPageCollectionViewController viewDidLayoutSubviews]
  -[SFStartPageCollectionViewController _dragPreviewParametersForSourceView:atIndexPath:]
  -[SFStartPageCollectionViewController hidesEmptyNavigationBar]
  -[SFStartPageCollectionViewController gestureRecognizer:shouldReceiveTouch:]
  -[SFStartPageCollectionViewController _makeCollectionViewLayout]
  -[SFStartPageCollectionViewController viewWillAppear:]
  -[SFStartPageCollectionViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[SFStartPageCollectionViewController _bannerSectionLayoutForEnvironment:includingHeader:]
  -[SFStartPageCollectionViewController wantsWallpaperHiddenForCurrentBackgroundStyle]
  -[SFStartPageCollectionViewController delegate]
  -[SFStartPageCollectionViewController _siteRowSectionLayoutForEnvironment:]
  -[SFStartPageCollectionViewController _setUpDataSource:]
  -[SFStartPageCollectionViewController _shouldShowContextMenuForCellAtIndexPath:fromPoint:]
  -[SFStartPageCollectionViewController _receivedTapToDismissGesture]
  -[SFStartPageCollectionViewController _sectionForIdentifier:]
  -[SFStartPageCollectionViewController _canDrop]
  -[SFStartPageCollectionViewController viewLayoutMarginsDidChange]
  -[SFStartPageCollectionViewController keyboardDidChangeFrame:]
  -[SFStartPageCollectionViewController setDisplaysSectionHeaders:]
  -[SFStartPageCollectionViewController strongDataSource]
  -[SFStartPageCollectionViewController _updateInteractionEnabledForView:]
  -[SFStartPageCollectionViewController setHidesEmptyNavigationBar:]
  -[SFStartPageCollectionViewController updateBackgroundStyle]
  -[SFStartPageCollectionViewController updateKeyboardBottomInsetFromKeyboardFrame:]


SFDialogController : NSObject <SFDialogViewDelegate>
 @property  <SFDialogControllerDelegate> *delegate
 @property  <SFDialogViewPresenting> *dialogPresenter
 @property  <SFDialogViewControllerPresenting> *viewControllerPresenter
 @property  SFDialog *presentedDialog
 @property  SFDialog<SFAuthenticatorDialog> *presentedAuthenticatorDialog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFDialogController applicationDidEnterBackground]

  // instance methods
  -[SFDialogController .cxx_destruct]
  -[SFDialogController setDelegate:]
  -[SFDialogController _tabID]
  -[SFDialogController presentedDialog]
  -[SFDialogController init]
  -[SFDialogController delegate]
  -[SFDialogController setDialogPresenter:]
  -[SFDialogController setViewControllerPresenter:]
  -[SFDialogController dialogPresenter]
  -[SFDialogController presentNextDialogIfNeeded]
  -[SFDialogController viewControllerPresenter]
  -[SFDialogController owningWebViewWillBecomeActive]
  -[SFDialogController owningTabWillClose]
  -[SFDialogController owningWebViewWillNavigate]
  -[SFDialogController owningWebViewDidCommitNavigationWithURL:]
  -[SFDialogController owningWebViewDidChangeProcessID]
  -[SFDialogController presentDialog:]
  -[SFDialogController presentedAuthenticatorDialog]
  -[SFDialogController cancelPresentedDialogIfNeeded]
  -[SFDialogController presentDialog:animateAlongsidePresentation:dismissal:]
  -[SFDialogController _currentSlot]
  -[SFDialogController dialogView:didSelectActionAtIndex:withInputText:passwordText:]
  -[SFDialogController _initWithDialogManager:]
  -[SFDialogController _currentWebProcessID]
  -[SFDialogController _presentDialog:forWebProcessID:withAdditionalAnimations:]
  -[SFDialogController _dismissDialogWithAdditionalAnimations:]
  -[SFDialogController _dismissCurrentDialogWithResponse:]
  -[SFDialogController _isPresentingDialog]


SFScrollingPanGestureRecognizer : UIPanGestureRecognizer
  // instance methods
  -[SFScrollingPanGestureRecognizer _shouldTryToBeginWithEvent:]
  -[SFScrollingPanGestureRecognizer initWithTarget:action:]


SFWebExtensionPermissionBanner : SFLinkBanner
 @property  @? dismissHandler

  // instance methods
  -[SFWebExtensionPermissionBanner .cxx_destruct]
  -[SFWebExtensionPermissionBanner setDismissHandler:]
  -[SFWebExtensionPermissionBanner initWithExtension:]
  -[SFWebExtensionPermissionBanner dismissHandler]
  -[SFWebExtensionPermissionBanner preferredButtonTintColor]
  -[SFWebExtensionPermissionBanner preferredButtonBackgroundColor]


SFManageWebExtensionsViewController : UITableViewController <WBSExtensionsControllerObserver, UISearchBarDelegate>
 @property  _SFPageFormatMenuController *presentingPageFormatMenu
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFManageWebExtensionsViewController viewWillLayoutSubviews]
  -[SFManageWebExtensionsViewController tableView:numberOfRowsInSection:]
  -[SFManageWebExtensionsViewController .cxx_destruct]
  -[SFManageWebExtensionsViewController viewDidLoad]
  -[SFManageWebExtensionsViewController tableView:cellForRowAtIndexPath:]
  -[SFManageWebExtensionsViewController tableView:shouldHighlightRowAtIndexPath:]
  -[SFManageWebExtensionsViewController searchBarSearchButtonClicked:]
  -[SFManageWebExtensionsViewController _reload]
  -[SFManageWebExtensionsViewController dealloc]
  -[SFManageWebExtensionsViewController searchBar:textDidChange:]
  -[SFManageWebExtensionsViewController viewDidDisappear:]
  -[SFManageWebExtensionsViewController safari_prefersHalfHeightSheetPresentationWithLoweredBar]
  -[SFManageWebExtensionsViewController initFromPageFormatMenu:]
  -[SFManageWebExtensionsViewController extensionsControllerExtensionListDidChange:]
  -[SFManageWebExtensionsViewController _updateLastViewedDate]
  -[SFManageWebExtensionsViewController _extensionStateWasToggled:]
  -[SFManageWebExtensionsViewController _setExtensionStateForExtension:isOn:]
  -[SFManageWebExtensionsViewController _enableExtensionPromptingForNewTabOverrideIfNecessary:]
  -[SFManageWebExtensionsViewController _enableExtensionWithNewTabOverridePage:]
  -[SFManageWebExtensionsViewController presentingPageFormatMenu]
  -[SFManageWebExtensionsViewController setPresentingPageFormatMenu:]


SFDialogTextField : UITextField
 @property  unsigned long stackPosition

  // instance methods
  -[SFDialogTextField textRectForBounds:]
  -[SFDialogTextField editingRectForBounds:]
  -[SFDialogTextField _placeholderColor]
  -[SFDialogTextField layoutSubviews]
  -[SFDialogTextField initWithFrame:]
  -[SFDialogTextField setStackPosition:]
  -[SFDialogTextField stackPosition]


SFPrivacyReportBannerCell : UICollectionViewCell <UITextViewDelegate>
 @property  long long numberOfTrackers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFPrivacyReportBannerCell reuseIdentifier]

  // instance methods
  -[SFPrivacyReportBannerCell setHighlighted:]
  -[SFPrivacyReportBannerCell _updateVibrancy]
  -[SFPrivacyReportBannerCell traitCollectionDidChange:]
  -[SFPrivacyReportBannerCell _updateState]
  -[SFPrivacyReportBannerCell .cxx_destruct]
  -[SFPrivacyReportBannerCell numberOfTrackers]
  -[SFPrivacyReportBannerCell initWithFrame:]
  -[SFPrivacyReportBannerCell _actionButtonTapped:]
  -[SFPrivacyReportBannerCell setNumberOfTrackers:]
  -[SFPrivacyReportBannerCell _privacyProxyAvailabilityChanged:]
  -[SFPrivacyReportBannerCell _removeActionButton]
  -[SFPrivacyReportBannerCell _setAction:text:]


SFVoiceSearchManager : NSObject
 @property  long long availability
 @property  BOOL liveCompletionList
 @property  NSArray *queryItems

  // class methods
  +[SFVoiceSearchManager sharedManager]

  // instance methods
  -[SFVoiceSearchManager queryItems]
  -[SFVoiceSearchManager _kfed]
  -[SFVoiceSearchManager init]
  -[SFVoiceSearchManager availability]
  -[SFVoiceSearchManager _voiceSearchAvailability]
  -[SFVoiceSearchManager _updateDictationAvailability]
  -[SFVoiceSearchManager liveCompletionList]
  -[SFVoiceSearchManager presentDictationDiscoveryAlertIfNeeded]


_SFSiteIcon : NSObject
  // class methods
  +[_SFSiteIcon sizeForIconSize:]
  +[_SFSiteIcon defaultSize]
  +[_SFSiteIcon precompositedDefaultIcon]
  +[_SFSiteIcon defaultGlyph]
  +[_SFSiteIcon _defaultIconSize]
  +[_SFSiteIcon cornerRadius]
  +[_SFSiteIcon minimumAcceptableSizeForDownloadedIcon]
  +[_SFSiteIcon fontPointSizeForIconSize:]
  +[_SFSiteIcon defaultIconKeyColor]


SFStartPageCustomizationViewController : UIViewController <SFStartPageBackgroundImageCellDelegate, SFStartPageCustomizationCellDelegate, UICollectionViewDelegate, PHPickerViewControllerDelegate, SFStartPageDataSourceObserving>
 @property  BOOL showsCloseButton
 @property  <SFStartPageCustomizationDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFStartPageCustomizationViewController reloadDataAnimatingDifferences:]
  -[SFStartPageCustomizationViewController reloadNavigationItemAnimated:]
  -[SFStartPageCustomizationViewController collectionView:canFocusItemAtIndexPath:]
  -[SFStartPageCustomizationViewController initWithDataSource:]
  -[SFStartPageCustomizationViewController collectionView:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:]
  -[SFStartPageCustomizationViewController collectionView:didSelectItemAtIndexPath:]
  -[SFStartPageCustomizationViewController setDataSource:]
  -[SFStartPageCustomizationViewController .cxx_destruct]
  -[SFStartPageCustomizationViewController collectionView:shouldHighlightItemAtIndexPath:]
  -[SFStartPageCustomizationViewController viewDidLoad]
  -[SFStartPageCustomizationViewController dataSource]
  -[SFStartPageCustomizationViewController _dismiss:]
  -[SFStartPageCustomizationViewController dealloc]
  -[SFStartPageCustomizationViewController viewDidDisappear:]
  -[SFStartPageCustomizationViewController picker:didFinishPicking:]
  -[SFStartPageCustomizationViewController setShowsCloseButton:]
  -[SFStartPageCustomizationViewController showsCloseButton]
  -[SFStartPageCustomizationViewController startPageCustomizationCellDidChangeValue:]
  -[SFStartPageCustomizationViewController backgroundImageCellDidSelectClearButton:]
  -[SFStartPageCustomizationViewController backgroundImagesDidChange:]
  -[SFStartPageCustomizationViewController makeRootCollectionViewLayout]
  -[SFStartPageCustomizationViewController setUpRootCollectionViewDataSource]
  -[SFStartPageCustomizationViewController makeBackgroundImagesCollectionViewLayout]
  -[SFStartPageCustomizationViewController setUpBackgroundImagesCollectionViewDataSource]
  -[SFStartPageCustomizationViewController customizationItemOrderDidChange:]
  -[SFStartPageCustomizationViewController showsBackgroundImagesCell]
  -[SFStartPageCustomizationViewController makeCustomizationSyncToggleRegistration]
  -[SFStartPageCustomizationViewController makeCustomizationSyncFooterRegistration]
  -[SFStartPageCustomizationViewController makeCustomizationItemRegistration]
  -[SFStartPageCustomizationViewController makeBackgroundImageToggleRegistration]
  -[SFStartPageCustomizationViewController makeReorderingHandlers]
  -[SFStartPageCustomizationViewController makeBackgroundImageRegistration]
  -[SFStartPageCustomizationViewController setCustomizationItemIdentifier:enabled:]
  -[SFStartPageCustomizationViewController _setCustomizationSyncWithValue:]
  -[SFStartPageCustomizationViewController showPhotoPicker]
  -[SFStartPageCustomizationViewController highlightsContentDidChange:]


SFWebFormAccessoryViewWrapper : UIView
 @property  double bottomBarHeight

  // instance methods
  -[SFWebFormAccessoryViewWrapper .cxx_destruct]
  -[SFWebFormAccessoryViewWrapper layoutSubviews]
  -[SFWebFormAccessoryViewWrapper sizeThatFits:]
  -[SFWebFormAccessoryViewWrapper pointInside:withEvent:]
  -[SFWebFormAccessoryViewWrapper initWithWebFormAccessoryView:bottomBarHeight:]
  -[SFWebFormAccessoryViewWrapper setBottomBarHeight:]
  -[SFWebFormAccessoryViewWrapper bottomBarHeight]


SFStepperView : UIView
 @property  _SFDimmingButton *incrementButton
 @property  _SFDimmingButton *decrementButton
 @property  _SFDimmingButton *resetButton
 @property  _SFDimmingButton *doneButton

  // class methods
  +[SFStepperView _buttonsFont]

  // instance methods
  -[SFStepperView initWithCoder:]
  -[SFStepperView .cxx_destruct]
  -[SFStepperView layoutSubviews]
  -[SFStepperView doneButton]
  -[SFStepperView initWithFrame:]
  -[SFStepperView pointInside:withEvent:]
  -[SFStepperView resetButton]
  -[SFStepperView decrementButton]
  -[SFStepperView incrementButton]
  -[SFStepperView initWithFrame:includingResetButton:]
  -[SFStepperView setLongestTitle:forButton:]


SFNestedCollectionViewCell : UICollectionViewCell
 @property  UICollectionView *collectionView

  // instance methods
  -[SFNestedCollectionViewCell .cxx_destruct]
  -[SFNestedCollectionViewCell preferredLayoutAttributesFittingAttributes:]
  -[SFNestedCollectionViewCell collectionView]
  -[SFNestedCollectionViewCell setCollectionView:]
  -[SFNestedCollectionViewCell _setUpCollectionViewIfNeeded]


SFStartPageSectionHeaderTitleView : UIView
 @property  NSString *title
 @property  UIMenu *menu

  // instance methods
  -[SFStartPageSectionHeaderTitleView menu]
  -[SFStartPageSectionHeaderTitleView setMenu:]
  -[SFStartPageSectionHeaderTitleView initWithCoder:]
  -[SFStartPageSectionHeaderTitleView traitCollectionDidChange:]
  -[SFStartPageSectionHeaderTitleView setTitle:]
  -[SFStartPageSectionHeaderTitleView .cxx_destruct]
  -[SFStartPageSectionHeaderTitleView title]
  -[SFStartPageSectionHeaderTitleView initWithFrame:]
  -[SFStartPageSectionHeaderTitleView setModel:]
  -[SFStartPageSectionHeaderTitleView dealloc]
  -[SFStartPageSectionHeaderTitleView buttonShapesEnabledStatusDidChange:]


SFDialogTextView : UIView
 @property  {UIEdgeInsets=dddd} contentInsets

  // instance methods
  -[SFDialogTextView flashScrollIndicators]
  -[SFDialogTextView initWithCoder:]
  -[SFDialogTextView setContentInsets:]
  -[SFDialogTextView setTitle:]
  -[SFDialogTextView contentInsets]
  -[SFDialogTextView .cxx_destruct]
  -[SFDialogTextView setMessage:]
  -[SFDialogTextView layoutSubviews]
  -[SFDialogTextView _updateText]
  -[SFDialogTextView initWithFrame:]
  -[SFDialogTextView setPreferredMaxLayoutWidth:]
  -[SFDialogTextView intrinsicContentSize]
  -[SFDialogTextView _updateFontStyling]
  -[SFDialogTextView _updateTextContainerInset]


SFDialogAction : NSObject
 @property  long long activatingKeyboardShortcut
 @property  long long actionType
 @property  NSString *title
 @property  BOOL hasCustomAction
 @property  BOOL isPreferredAction

  // class methods
  +[SFDialogAction actionWithTitle:activatingKeyboardShortcut:type:]
  +[SFDialogAction actionWithTitle:activatingKeyboardShortcut:type:isPreferredAction:]

  // instance methods
  -[SFDialogAction .cxx_destruct]
  -[SFDialogAction actionType]
  -[SFDialogAction title]
  -[SFDialogAction isPreferredAction]
  -[SFDialogAction activatingKeyboardShortcut]
  -[SFDialogAction hasCustomAction]
  -[SFDialogAction triggerCustomAction]
  -[SFDialogAction setCustomAction:]
  -[SFDialogAction initWithTitle:activatingKeyboardShortcut:type:isPreferredAction:]


SFDeviceUtilities : NSObject
  // class methods
  +[SFDeviceUtilities deviceUUID]


SFSiteIconCell : UICollectionViewCell <SFSiteIconModel>
 @property  UIView *contextMenuPreviewView
 @property  UIImage *icon
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFSiteIconCell reuseIdentifier]

  // instance methods
  -[SFSiteIconCell setHighlighted:]
  -[SFSiteIconCell initWithCoder:]
  -[SFSiteIconCell icon]
  -[SFSiteIconCell traitCollectionDidChange:]
  -[SFSiteIconCell setTitle:]
  -[SFSiteIconCell updateConstraints]
  -[SFSiteIconCell .cxx_destruct]
  -[SFSiteIconCell focusEffect]
  -[SFSiteIconCell setSubtitle:]
  -[SFSiteIconCell contextMenuPreviewView]
  -[SFSiteIconCell setIcon:]
  -[SFSiteIconCell subtitle]
  -[SFSiteIconCell title]
  -[SFSiteIconCell initWithFrame:]
  -[SFSiteIconCell setIconFromBookmark:]
  -[SFSiteIconCell updateViewsDependingOnCustomTraits]


SFBrowserController : UIResponder <UISceneDelegate>
 @property  <SFBrowserControllerProxy> *proxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SFBrowserController .cxx_destruct]
  -[SFBrowserController proxy]
  -[SFBrowserController setProxy:]


SFRichLinkCell : UICollectionViewCell <SFRichLinkModel>
 @property  UIView *contextMenuPreviewView
 @property  LPLinkMetadata *metadata
 @property  SLHighlight *highlight
 @property  SLAttributionView *attributionView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFRichLinkCell reuseIdentifier]

  // instance methods
  -[SFRichLinkCell setHighlighted:]
  -[SFRichLinkCell _updateVibrancy]
  -[SFRichLinkCell initWithCoder:]
  -[SFRichLinkCell traitCollectionDidChange:]
  -[SFRichLinkCell highlight]
  -[SFRichLinkCell .cxx_destruct]
  -[SFRichLinkCell preferredLayoutAttributesFittingAttributes:]
  -[SFRichLinkCell touchesBegan:withEvent:]
  -[SFRichLinkCell attributionView]
  -[SFRichLinkCell setAttributionView:]
  -[SFRichLinkCell contextMenuPreviewView]
  -[SFRichLinkCell metadata]
  -[SFRichLinkCell initWithFrame:]
  -[SFRichLinkCell setMetadata:]
  -[SFRichLinkCell setHighlight:]
  -[SFRichLinkCell shouldShowContextMenuFromPoint:]
  -[SFRichLinkCell _updateAttributionViewBackground]


_SFBarTheme : NSObject
 @property  BOOL backdropIsDark
 @property  BOOL backdropIsTinted
 @property  long long tintStyle
 @property  UIColor *controlsTintColor
 @property  UIColor *preferredBarTintColor
 @property  UIColor *platterProgressBarTintColor
 @property  long long overrideUserInterfaceStyle
 @property  UIBlurEffect *backdropEffect
 @property  NSArray *backdropEffects
 @property  NSArray *backdropAdjustmentEffects
 @property  _SFBarTheme *fallbackTheme

  // class methods
  +[_SFBarTheme themeWithBarTintStyle:]
  +[_SFBarTheme themeWithTheme:]
  +[_SFBarTheme themeWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  +[_SFBarTheme backdropEffectForStyle:]
  +[_SFBarTheme backdropIsDarkForStyle:]
  +[_SFBarTheme canTintPrivateStyles]
  +[_SFBarTheme prefersThemeColorEffect]
  +[_SFBarTheme controlsTintColorForStyle:]

  // instance methods
  -[_SFBarTheme initWithBarTintStyle:preferredBarTintColor:controlsTintColor:]
  -[_SFBarTheme applyBackdropEffectsToView:]
  -[_SFBarTheme backdropIsDark]
  -[_SFBarTheme backdropEffect]
  -[_SFBarTheme platterProgressBarTintColor]
  -[_SFBarTheme backdropAdjustmentEffects]
  -[_SFBarTheme fallbackTheme]
  -[_SFBarTheme preferredBarTintColor]
  -[_SFBarTheme overrideUserInterfaceStyle]
  -[_SFBarTheme backdropEffects]
  -[_SFBarTheme backdropIsTinted]
  -[_SFBarTheme controlsTintColor]
  -[_SFBarTheme .cxx_destruct]
  -[_SFBarTheme tintStyle]
  -[_SFBarTheme isEqual:]


SFSiteRowCell : UICollectionViewCell <SFSiteRowModel>
 @property  NSString *title
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SFSiteRowCell reuseIdentifier]

  // instance methods
  -[SFSiteRowCell setHighlighted:]
  -[SFSiteRowCell _updateVibrancy]
  -[SFSiteRowCell traitCollectionDidChange:]
  -[SFSiteRowCell setTitle:]
  -[SFSiteRowCell .cxx_destruct]
  -[SFSiteRowCell title]
  -[SFSiteRowCell initWithFrame:]


SFBannerCell : UICollectionViewCell
 @property  NSString *title
 @property  NSString *message
 @property  @? dismissHandler
 @property  long long bannerStyle

  // class methods
  +[SFBannerCell reuseIdentifier]

  // instance methods
  -[SFBannerCell _updateVibrancy]
  -[SFBannerCell initWithCoder:]
  -[SFBannerCell traitCollectionDidChange:]
  -[SFBannerCell setTitle:]
  -[SFBannerCell .cxx_destruct]
  -[SFBannerCell focusEffect]
  -[SFBannerCell initWithFrame:style:]
  -[SFBannerCell setMessage:]
  -[SFBannerCell layoutSubviews]
  -[SFBannerCell setDismissHandler:]
  -[SFBannerCell setBannerStyle:]
  -[SFBannerCell _dismiss:]
  -[SFBannerCell bannerStyle]
  -[SFBannerCell _updateStyle]
  -[SFBannerCell initWithStyle:]
  -[SFBannerCell message]
  -[SFBannerCell title]
  -[SFBannerCell initWithFrame:]
  -[SFBannerCell setModel:]
  -[SFBannerCell dismissHandler]


UIImage(MobileSafariFrameworkExtras)
	// class methods
	+[UIImage(MobileSafariFrameworkExtras) sf_imageNamed:]

	// instance methods
	-[UIImage(MobileSafariFrameworkExtras) sf_isLaunchImageSizedForOrientation:includesStatusBar:]
	-[UIImage(MobileSafariFrameworkExtras) sf_hasRegisteredFaviconForDarkUserInterfaceStyle]
	-[UIImage(MobileSafariFrameworkExtras) sf_shouldApplyBackingForDarkBackdrop]
	-[UIImage(MobileSafariFrameworkExtras) sf_registerFaviconForDarkUserInterfaceStyle]
	-[UIImage(MobileSafariFrameworkExtras) sf_isMonogram]
	-[UIImage(MobileSafariFrameworkExtras) sf_setIsMonogram:]
	-[UIImage(MobileSafariFrameworkExtras) sf_initWithCGImage:tabSnapshotEffectsVersion:]
	-[UIImage(MobileSafariFrameworkExtras) sf_tabSnapshotEffectsVersion]

UISwitch(MobileSafariExtras)
	// instance methods
	-[UISwitch(MobileSafariExtras) sf_initWithOn:valueChangeHandler:]

UIImageSymbolConfiguration(SafariServicesExtras)
	// class methods
	+[UIImageSymbolConfiguration(SafariServicesExtras) _sf_staticConfigurationWithTextStyle:scale:compatibleWithTraitCollection:]
	+[UIImageSymbolConfiguration(SafariServicesExtras) _sf_staticConfigurationWithTextStyle:scale:]

UIView(SafariServicesExtras)
	// class methods
	+[UIView(SafariServicesExtras) _sf_cancelLinkAnimationsOnWindow:]
	+[UIView(SafariServicesExtras) _sf_animateLinkImage:withAnimation:fromPoint:inView:toRect:inView:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
	+[UIView(SafariServicesExtras) _sf_animateLinkImage:withAnimation:fromRect:inView:toRect:inView:afterImageDisappearsBlock:afterDestinationLayerBouncesBlock:]
	+[UIView(SafariServicesExtras) sf_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:preferredFrameRateRange:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultTimingWithOptions:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultMotionWithOptions:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultMotionWithDelay:options:animations:completion:]
	+[UIView(SafariServicesExtras) _sf_performLinkAnimation:onView:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultTimingWithOptions:preferredFrameRateRange:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultDampedSpringWithDelay:initialSpringVelocity:options:preferredFrameRateRange:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:withDuration:delay:options:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animate:usingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:]
	+[UIView(SafariServicesExtras) sf_animated:usingFastSpringWithDelay:options:animations:completion:]

	// instance methods
	-[UIView(SafariServicesExtras) _sf_bottomUnsafeAreaFrameForToolbar]
	-[UIView(SafariServicesExtras) _sf_usesLeftToRightLayout]
	-[UIView(SafariServicesExtras) ss_setUntransformedFrame:]
	-[UIView(SafariServicesExtras) ss_untransformedFrame]
	-[UIView(SafariServicesExtras) _sf_firstAncestorViewOfClass:]
	-[UIView(SafariServicesExtras) sf_applyContentSizeCategoryLimitsForToolbarButton]
	-[UIView(SafariServicesExtras) sf_configureLargeContentViewerWithImage:title:]
	-[UIView(SafariServicesExtras) _sf_setOrderedSubviews:count:]
	-[UIView(SafariServicesExtras) _sf_bottomUnsafeAreaFrame]
	-[UIView(SafariServicesExtras) _sf_depth]
	-[UIView(SafariServicesExtras) sf_privacyPreservingDescription]
	-[UIView(SafariServicesExtras) _sf_viewAncestrySummaryWithMinDepth:paddingLevel:]
	-[UIView(SafariServicesExtras) sf_viewAncestrySummary]
	-[UIView(SafariServicesExtras) _sf_isFullScreenWidth]
	-[UIView(SafariServicesExtras) _sf_isFullScreenHeight]
	-[UIView(SafariServicesExtras) _sf_hasLandscapeAspectRatio]
	-[UIView(SafariServicesExtras) _sf_safeAreaInsetsFlippedForLayoutDirectionality]
	-[UIView(SafariServicesExtras) _sf_safeAreaBounds]
	-[UIView(SafariServicesExtras) sf_commonAncestrySummaryWithView:]
	-[UIView(SafariServicesExtras) _sf_convertY:toCoordinateSpace:]
	-[UIView(SafariServicesExtras) _sf_snapshotImageFromIOSurface]
	-[UIView(SafariServicesExtras) _sf_setMatchesIntrinsicContentSize]
	-[UIView(SafariServicesExtras) _sf_addEdgeMatchedSubview:]
	-[UIView(SafariServicesExtras) _sf_addInteractionUnlessNil:]
	-[UIView(SafariServicesExtras) sf_configureLargeContentViewerForBarItem:]

WBSExtensionsController(WebExtensions)
	// class methods
	+[WBSExtensionsController(WebExtensions) webExtensionsController]

UIColor(MobileSafariExtras)
	// class methods
	+[UIColor(MobileSafariExtras) sf_colorNamed:]
	+[UIColor(MobileSafariExtras) sf_barHairlineShadowColor]
	+[UIColor(MobileSafariExtras) sf_safariAccentColor]
	+[UIColor(MobileSafariExtras) sf_secondaryBarHairlineOutlineColor]
	+[UIColor(MobileSafariExtras) sf_tabSeparatorColor]
	+[UIColor(MobileSafariExtras) sf_defaultWebContentBackgroundColor]
	+[UIColor(MobileSafariExtras) sf_barHairlineOutlineColor]
	+[UIColor(MobileSafariExtras) sf_transparentBarHairlineColor]
	+[UIColor(MobileSafariExtras) sf_alternateLabelColor]
	+[UIColor(MobileSafariExtras) sf_alternateSecondaryLabelColor]

	// instance methods
	-[UIColor(MobileSafariExtras) sf_isDarkColor]
	-[UIColor(MobileSafariExtras) sf_darkenedColor]

UICellAccessoryCustomView(MobileSafariExtras)
	// instance methods
	-[UICellAccessoryCustomView(MobileSafariExtras) sf_initWithCustomView:placement:trailingPadding:]

NSLayoutConstraint(MobileSafariFrameworkExtras)
	// class methods
	+[NSLayoutConstraint(MobileSafariFrameworkExtras) sf_setConstraints:active:]

	// instance methods
	-[NSLayoutConstraint(MobileSafariFrameworkExtras) sf_withPriority:]

WBSPrivacyProxyAvailabilityManager(MobileSafariFrameworkExtras)
	// class methods
	+[WBSPrivacyProxyAvailabilityManager(MobileSafariFrameworkExtras) sharedManager]

UIDocumentInteractionController(SFManagedSourceSupport)
	// class methods
	+[UIDocumentInteractionController(SFManagedSourceSupport) sf_interactionControllerWithDocumentURL:sourceURL:]

LSDocumentProxy(SFManagedSourceSupport)
	// class methods
	+[LSDocumentProxy(SFManagedSourceSupport) sf_documentProxyForName:type:MIMEType:sourceURL:]

UIDocumentPickerViewController(SFManagedSourceSupport)
	// class methods
	+[UIDocumentPickerViewController(SFManagedSourceSupport) sf_documentPickerViewControllerWithURL:inMode:sourceURL:]

UIApplication(MobileSafariFrameworkExtras)
	// instance methods
	-[UIApplication(MobileSafariFrameworkExtras) sf_currentKeyboardModifierFlags]

CALayer(MobileSafariExtras)
	// instance methods
	-[CALayer(MobileSafariExtras) safari_copyAnimationsFromLayer:applyingModifications:]

UITraitCollection(MobileSafariExtras)
	// class methods
	+[UITraitCollection(MobileSafariExtras) sf_traitCollectionWithAlternateUserInterfaceStyle:]
	+[UITraitCollection(MobileSafariExtras) sf_traitCollectionUsingVibrantAppearance]
	+[UITraitCollection(MobileSafariExtras) sf_traitCollectionWithBackgroundBlurEffect:]
	+[UITraitCollection(MobileSafariExtras) sf_traitCollectionWithAlternateTraitCollection:]
	+[UITraitCollection(MobileSafariExtras) sf_traitCollectionWithSidebarPresentation:]

	// instance methods
	-[UITraitCollection(MobileSafariExtras) sf_backgroundBlurEffect]
	-[UITraitCollection(MobileSafariExtras) sf_alternateUserInterfaceStyle]
	-[UITraitCollection(MobileSafariExtras) sf_traitCollectionWithAlternateUserInterfaceColorAsPrimary]
	-[UITraitCollection(MobileSafariExtras) sf_usesVibrantAppearance]
	-[UITraitCollection(MobileSafariExtras) sf_hasSameVisualEffectAs:]
	-[UITraitCollection(MobileSafariExtras) sf_alternateTintColor]
	-[UITraitCollection(MobileSafariExtras) sf_usesSidebarPresentation]

UINavigationItem(MobileSafariFrameworkExtras)
	// instance methods
	-[UINavigationItem(MobileSafariFrameworkExtras) sf_isEmpty]

UIViewController(MobileSafariFrameworkExtras)
	// instance methods
	-[UIViewController(MobileSafariFrameworkExtras) safari_wantsTransparentApplicationBackground]
	-[UIViewController(MobileSafariFrameworkExtras) safari_dismissPresentedAlert]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_bottomUnsafeAreaFrameForToolbar]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_presentViewControllerOnTopOfPresentedViewController:animated:completion:]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_animateAlongsideTransitionOrPerform:]
	-[UIViewController(MobileSafariFrameworkExtras) safari_prefersHalfHeightSheetPresentationWithLoweredBar]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_isMFMailComposeViewController]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_bottomUnsafeAreaFrame]
	-[UIViewController(MobileSafariFrameworkExtras) safari_isEventuallyPresentedByViewControllerClass:]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_viewControllerToPresentFrom]
	-[UIViewController(MobileSafariFrameworkExtras) safari_updateApplicationBackgroundStyle]
	-[UIViewController(MobileSafariFrameworkExtras) safari_wantsDoneButtonInModalBookmarksPanel]
	-[UIViewController(MobileSafariFrameworkExtras) safari_sheetPresentationController]
	-[UIViewController(MobileSafariFrameworkExtras) safari_isPresentedByActivityViewController]
	-[UIViewController(MobileSafariFrameworkExtras) _sf_isPKAddPassesViewController]

NSBundle(MobileSafariFrameworkExtras)
	// class methods
	+[NSBundle(MobileSafariFrameworkExtras) sf_mobileSafariFrameworkBundle]

UIVibrancyEffect(SafariServicesExtras)
	// class methods
	+[UIVibrancyEffect(SafariServicesExtras) _sf_effectWithStyle:forBarTintStyle:]

UINavigationController(MobileSafariFrameworkExtras)
	// instance methods
	-[UINavigationController(MobileSafariFrameworkExtras) safari_prefersHalfHeightSheetPresentationWithLoweredBar]

UIVisualEffectView(MobileSafariFrameworkExtras)
	// class methods
	+[UIVisualEffectView(MobileSafariFrameworkExtras) sf_startPageCellBackgroundEffectViewWithShadow:]

	// instance methods
	-[UIVisualEffectView(MobileSafariFrameworkExtras) sf_configureAsStartPageBackground]
	-[UIVisualEffectView(MobileSafariFrameworkExtras) sf_configureAsStartPageForegroundWithEffectStyle:]
	-[UIVisualEffectView(MobileSafariFrameworkExtras) sf_setHighlighted:cellState:]
	-[UIVisualEffectView(MobileSafariFrameworkExtras) sf_configureAsStartPageBackgroundWithNonVibrantBackgroundColor:]
	-[UIVisualEffectView(MobileSafariFrameworkExtras) sf_setHighlighted:cellState:nonVibrantBackgroundColor:]

UISearchBar(SafariExtras)
	// class methods
	+[UISearchBar(SafariExtras) sf_installSearchBarInTableView:includeSeparator:]

UICommand(SFBrowserKeyCommandExtras)
	// instance methods
	-[UICommand(SFBrowserKeyCommandExtras) sf_commandSource]

UIPointerShape(SafariServicesExtras)
	// class methods
	+[UIPointerShape(SafariServicesExtras) sf_shapeForToolbarButton:]

UIMenu(MobileSafariExtras)
	// class methods
	+[UIMenu(MobileSafariExtras) safari_menuWithTitle:uncachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) safari_menuWithTitle:image:identifier:options:cachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) safari_menuWithTitle:image:identifier:options:uncachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) safari_menuWithCachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) safari_menuWithUncachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) safari_menuWithTitle:cachedChildrenProvider:]
	+[UIMenu(MobileSafariExtras) sf_bookmarkMenu]
	+[UIMenu(MobileSafariExtras) sf_tabMenu]

01 00 0100 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0100 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0100 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0700 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: IFImage 
01 00 0700 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISIcon 
01 00 0700 /System/Library/PrivateFrameworks/IconServices.framework/IconServices: ISImageDescriptor 
01 00 0900 /System/Library/Frameworks/LocalAuthentication.framework/LocalAuthentication: LAContext 
01 00 0800 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkMetadata 
01 00 0800 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPLinkView 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSResourceProxy 
01 00 1600 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1000 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTShadowView 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSByteCountFormatter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutBoundarySupplementaryItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutDimension 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutGroup 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSection 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSize 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSCollectionLayoutSpacing 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSectionSnapshot 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSDiffableDataSourceSnapshot 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPCookieStorage 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSMutableParagraphStyle 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSOrderedCollectionChange 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: NSTextAttachment 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/Frameworks/PencilKit.framework/PencilKit: PKScribbleInteraction 
01 00 0b00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultSection 
01 00 0b00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchResult 
01 00 0b00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFText 
01 00 1400 /System/Library/PrivateFrameworks/SocialLayer.framework/SocialLayer: SLAttributionView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBackgroundConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBlurEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButtonConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryCustomView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICellAccessoryReorder 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionLayoutListConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionReusableView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCellRegistration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayout 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewCompositionalLayoutConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSource 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDiffableDataSourceReorderingHandlers 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewDropProposal 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewListCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICollectionViewSupplementaryRegistration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICommand 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UICommandAlternate 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDeferredMenuElement 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentInteractionController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDocumentPickerViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreview 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewParameters 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDragPreviewTarget 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFocusHaloEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontMetrics 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKBRenderConfig 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKBVisualEffectView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyCommand 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardImpl 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardInputModeController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboardSceneDelegate 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILargeContentViewerInteraction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILayoutGuide 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIListContentConfiguration 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenu 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIMenuSystem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBarAppearance 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPeripheralHost 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPinchGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerHighlightEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerRegion 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerShape 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewParameters 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPreviewTarget 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIResponder 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISearchBar 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarServer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedDragPreview 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextField 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewFloatAnimatableProperty 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewSpringAnimationBehavior 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffect 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVisualEffectView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIWebTouchEventsGestureRecognizer 
01 00 1100 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WBCollectionConfiguration 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSBookmarkFolderTouchIconProvider 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCertificateWarningPageContext 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSCompletionQuery 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSDispatchSourceTimer 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSExtensionsController 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFaviconProvider 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSFeatureAvailability 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSLeadImageCache 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSPrivacyProxyAvailabilityManager 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSResultRanker 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSafariBookmarksSyncAgentProxy 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSScopeExitHandler 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSearchParameters 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiteIconKeyColorExtractor 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiteMetadataImageCache 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSSiteMetadataManager 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSStartPageBackgroundImagesDataSource 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSStartPageBackgroundManager 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialog 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogCancellationContext 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogCancellationExemption 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTabDialogManager 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTemplateIconMonogramConfiguration 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTemplateIconMonogramGenerator 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSThemeColorUtilities 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconCache 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconFetchOperation 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSTouchIconRequest 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionMatch 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSURLCompletionSessionProxy 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionData 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionMatchPattern 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionNewTabOverridePreferencesManager 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionPendingWebsiteRequest 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionURLSchemeHandler 
01 00 0a00 /System/Library/PrivateFrameworks/SafariSharedUI.framework/SafariSharedUI: WBSWebExtensionsController 
01 00 0f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUFeatureManager 
01 00 0f00 /System/Library/PrivateFrameworks/WebUI.framework/WebUI: WBUSheetController 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: WKContentRuleListStore 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: WKPreferences 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: WKUserContentController 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1100 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkCollection 
01 00 1100 /System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks: WebBookmarkWebFilterSettings 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIClickInteraction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UINavigationBarPalette 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISheetPresentationController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIVisualEffectBackdropView 
01 00 0e00 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebAuthenticationAssertionResponse 
