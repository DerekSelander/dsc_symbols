|| __DATA.__objc_data _OBJC_CLASS_$_NFContactlessPaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFContactlessSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFContactlessUICCSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFECommercePaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFFieldDetectSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFFieldNotificationECP1_0
|| __DATA.__objc_data _OBJC_CLASS_$_NFFieldNotificationECP2_0
|| __DATA.__objc_data _OBJC_CLASS_$_NFHCESession
|| __DATA.__objc_data _OBJC_CLASS_$_NFHardwareManagerCallbacks
|| __DATA.__objc_data _OBJC_CLASS_$_NFLoyaltyAndPaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFNdefMessage
|| __DATA.__objc_data _OBJC_CLASS_$_NFNdefRecord
|| __DATA.__objc_data _OBJC_CLASS_$_NFNdefTagSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFPeerPaymentSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFPeerPaymentTransferRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NFReaderSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFReaderSessionInterface
|| __DATA.__objc_data _OBJC_CLASS_$_NFRemoteAdminManager
|| __DATA.__objc_data _OBJC_CLASS_$_NFSecureElementAndHostCardEmulationSession
|| __DATA.__objc_data _OBJC_CLASS_$_NFTag
|| __DATA.__objc_data _OBJC_CLASS_$_NFTapToRadar
|| __DATA.__objc_data _OBJC_CLASS_$_NFTechnologyEvent
|| __DATA.__objc_data _OBJC_CLASS_$_NFTrustLocalValidation
|| __DATA.__objc_data _OBJC_CLASS_$_NFTrustSignResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_NFContactlessPaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFContactlessSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFContactlessUICCSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFECommercePaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFFieldDetectSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFFieldNotificationECP1_0
|| __DATA.__objc_data _OBJC_METACLASS_$_NFFieldNotificationECP2_0
|| __DATA.__objc_data _OBJC_METACLASS_$_NFHCESession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFHardwareManagerCallbacks
|| __DATA.__objc_data _OBJC_METACLASS_$_NFLoyaltyAndPaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFNdefMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_NFNdefRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_NFNdefTagSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFPeerPaymentSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFPeerPaymentTransferRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NFReaderSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFReaderSessionInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_NFRemoteAdminManagerCallbacks
|| __DATA.__objc_data _OBJC_METACLASS_$_NFSecureElementAndHostCardEmulationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_NFTag
|| __DATA.__objc_data _OBJC_METACLASS_$_NFTapToRadar
|| __DATA.__objc_data _OBJC_METACLASS_$_NFTechnologyEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_NFTrustLocalValidation
|| __DATA.__objc_data _OBJC_METACLASS_$_NFTrustSignResponse
|| __DATA_CONST.__const _NFSecureElementManagerSessionECDSACertificateKey
|| __DATA_CONST.__const _NFSecureElementManagerSessionRSAACertificateKey
|| __DATA_CONST.__const _NFSignedPlatformData
|| __DATA_CONST.__const _NFSignedPlatformSignatureBlob
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFApplet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessPaymentEndEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessPaymentSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessPaymentSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessPaymentStartEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFContactlessSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFECommercePaymentRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFECommercePaymentResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFECommercePaymentSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFFieldDetectSessionInterfaceCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFFieldNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFHardwareControllerInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFHardwareManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFHardwareManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFHardwareSecureElementInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPeerPaymentEnrollmentRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPeerPaymentEnrollmentResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPeerPaymentRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFPeerPaymentResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFReaderSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFReaderSessionInternalInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRemoteAdminCardIngestionRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRemoteAdminManagerCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFRemoteAdminManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSecureElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSecureElementManagerSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSecureElementManagerSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSeshatSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSeshatSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFSignatureInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustKeyRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustPaymentSignResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFTrustSignRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFValueAddedServiceCard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NFValueAddedServiceTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFApplet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessPaymentEndEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessPaymentSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessPaymentSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessPaymentStartEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFContactlessSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFECommercePaymentRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFECommercePaymentResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFECommercePaymentSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFFieldDetectSessionInterfaceCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFFieldNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFHardwareControllerInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFHardwareManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFHardwareManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFHardwareSecureElementInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPeerPaymentEnrollmentRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPeerPaymentEnrollmentResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPeerPaymentRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFPeerPaymentResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFReaderSessionCallbacks
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFReaderSessionInternalInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRemoteAdminCardIngestionRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRemoteAdminManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFRemoteAdminManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSecureElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSecureElementManagerSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSecureElementManagerSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSeshatSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSeshatSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFSignatureInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustKeyRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustPaymentSignResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustSessionInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFTrustSignRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFValueAddedServiceCard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NFValueAddedServiceTransaction
|| __TEXT.__text _NfRestoreCopyUniqueFDRKey
|| __TEXT.__text _ObliterationDeleteAllApplets
|| __TEXT.__text _PTErrorInternal
|| __TEXT.__text _PTErrorInvalidParameters
|| __TEXT.__text _PTErrorKeyAlreadyExist
|| __TEXT.__text _PTErrorKeyNotFound
|| __TEXT.__text _PTErrorNoMemory
|| __TEXT.__text ___PTErrorString
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ Foundation: _NSClassFromString
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: dyld_stub_binder
__ libnfshared.dylib: _NFCreateRootQueue
__ libnfshared.dylib: _NFDataCreateWithBytesNoCopy
__ libnfshared.dylib: _NFDataRelease
__ libnfshared.dylib: _NFDataScannerCreateWithData
__ libnfshared.dylib: _NFDataScannerRelease
__ libnfshared.dylib: _NFGetRootQueue
__ libnfshared.dylib: _NFSetRootQueue
__ libnfshared.dylib: _NFSharedLogLock
__ libnfshared.dylib: _NFSharedLogUnlock
__ libnfshared.dylib: _NFSharedLogv
__ libnfshared.dylib: _OBJC_CLASS_$_NFNdefMessageInternal
__ libnfshared.dylib: _OBJC_CLASS_$_NFNdefRecordInternal
__ libnfshared.dylib: _OBJC_CLASS_$_NFRunScriptParameters
__ libnfshared.dylib: _OBJC_CLASS_$_NFTLV
__ libnfshared.dylib: _OBJC_CLASS_$_NFTagInternal
__ libnfshared.dylib: _OBJC_CLASS_$_NFWeakReference
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _class_isMetaClass
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _sel_getName
NFSecureElementManagerSession : NFSession <NFSecureElementManagerSessionCallbacks, NFAppletCollection>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFSecureElementManagerSession init]
  -[NFSecureElementManagerSession dealloc]
  -[NFSecureElementManagerSession stateInformation]
  -[NFSecureElementManagerSession appletWithIdentifier:]
  -[NFSecureElementManagerSession felicaAppletState:error:]
  -[NFSecureElementManagerSession transitAppletState:error:]
  -[NFSecureElementManagerSession deleteAllApplets:error:]
  -[NFSecureElementManagerSession getCryptogram:challengeResponse:error:]
  -[NFSecureElementManagerSession getCryptogram:challengeResponse:]
  -[NFSecureElementManagerSession validateSEPairings:]
  -[NFSecureElementManagerSession allApplets]
  -[NFSecureElementManagerSession deleteApplets:queueServerConnection:error:]
  -[NFSecureElementManagerSession signChallenge:forAID:sigInfo:error:]
  -[NFSecureElementManagerSession signChallenge:useOSVersion:signatureInfo:error:]
  -[NFSecureElementManagerSession signChallenge:certs:error:]
  -[NFSecureElementManagerSession getSignedPlatformDataForSeid:error:]
  -[NFSecureElementManagerSession performPeerPaymentEnrollment:error:]
  -[NFSecureElementManagerSession _setApplets:]
  -[NFSecureElementManagerSession stateInformationWithError:]
  -[NFSecureElementManagerSession signChallenge:forAID:certs:error:]
  -[NFSecureElementManagerSession _appletsById]
  -[NFSecureElementManagerSession deleteAllApplets:]
  -[NFSecureElementManagerSession addExpressApplet:type:authorization:expressInfo:error:]
  -[NFSecureElementManagerSession removeExpressApplet:type:restoreAuthorization:error:]
  -[NFSecureElementManagerSession setExpressModesEnabled:error:]
  -[NFSecureElementManagerSession setExpressConfig:restoreAuthorization:error:]
  -[NFSecureElementManagerSession restoreAuthorizationForAllAppletsExcept:error:]
  -[NFSecureElementManagerSession disableAuthorizationForApplet:authorization:error:]
  -[NFSecureElementManagerSession disableAuthorizationForApplet:andKeys:authorization:error:]
  -[NFSecureElementManagerSession expressModesEnabledWithError:]
  -[NFSecureElementManagerSession expressAppletIdentifiersWithError:]
  -[NFSecureElementManagerSession didExitRestrictedMode:error:]
  -[NFSecureElementManagerSession transceive:forSEID:error:]
  -[NFSecureElementManagerSession refreshSecureElement:error:]
  -[NFSecureElementManagerSession getAttackCounterLogForSEID:error:]
  -[NFSecureElementManagerSession dumpDomain:forSEID:error:]
  -[NFSecureElementManagerSession signChallenge:certs:]
  -[NFSecureElementManagerSession signChallenge:useOSVersion:signatureInfo:]
  -[NFSecureElementManagerSession signChallenge:forAID:certs:]
  -[NFSecureElementManagerSession deleteApplets:queueServerConnection:]
  -[NFSecureElementManagerSession addExpressApplet:type:authorization:]
  -[NFSecureElementManagerSession addExpressApplet:type:authorization:error:]
  -[NFSecureElementManagerSession addExpressKeyID:forApplet:type:authorization:expressInfo:error:]
  -[NFSecureElementManagerSession removeExpressApplet:type:]
  -[NFSecureElementManagerSession removeExpressApplet:type:error:]
  -[NFSecureElementManagerSession removeExpressApplet:type:restoreAuthorization:]
  -[NFSecureElementManagerSession removeExpressKeyID:forApplet:restoreAuthorization:error:]
  -[NFSecureElementManagerSession setExpressModesEnabled:]
  -[NFSecureElementManagerSession checkExpressAppletCompatibility:error:]
  -[NFSecureElementManagerSession setExpressConfig:error:]
  -[NFSecureElementManagerSession getExpressConfigWithError:]
  -[NFSecureElementManagerSession restoreAuthorizationForAllAppletsExcept:]
  -[NFSecureElementManagerSession disableAuthorizationForApplet:authorization:]
  -[NFSecureElementManagerSession felicaAppletState:]
  -[NFSecureElementManagerSession expressModesEnabled]
  -[NFSecureElementManagerSession expressAppletIdentifiers]
  -[NFSecureElementManagerSession didExitRestrictedMode:]
  -[NFSecureElementManagerSession transceive:forSEID:]
  -[NFSecureElementManagerSession transceiveMultiple:forSEID:error:]
  -[NFSecureElementManagerSession runScript:forSEID:results:lastStatus:]
  -[NFSecureElementManagerSession runScript:parameters:outputResults:]
  -[NFSecureElementManagerSession refreshSecureElement:]
  -[NFSecureElementManagerSession getAttackCounterLogForSEID:]
  -[NFSecureElementManagerSession dumpDomain:forSEID:]
  -[NFSecureElementManagerSession powerCycleSEID:error:]
  -[NFSecureElementManagerSession getOSUpdateLog]


NFTechnologyEvent : NSObject <NSSecureCoding>
 @property  unsigned int technology
 @property  unsigned char valueAddedServiceMode
 @property  unsigned short systemCode
 @property  BOOL vasSupported
 @property  BOOL touchIDRequired
 @property  unsigned int terminalType

  // class methods
  +[NFTechnologyEvent supportsSecureCoding]

  // instance methods
  -[NFTechnologyEvent encodeWithCoder:]
  -[NFTechnologyEvent initWithCoder:]
  -[NFTechnologyEvent initWithDictionary:]
  -[NFTechnologyEvent technology]
  -[NFTechnologyEvent systemCode]
  -[NFTechnologyEvent terminalType]
  -[NFTechnologyEvent valueAddedServiceMode]
  -[NFTechnologyEvent initWithTechnology:andValueAddedServiceMode:andSystemCode:]
  -[NFTechnologyEvent initWithTechnology:andValueAddedServiceMode:]
  -[NFTechnologyEvent initWithFieldNotification:]
  -[NFTechnologyEvent vasSupported]
  -[NFTechnologyEvent touchIDRequired]


NFFieldDetectSessionInterfaceCallbacks : NSObject
  // class methods
  +[NFFieldDetectSessionInterfaceCallbacks interface]


NFPeerPaymentTransferRequest : NSObject <NSSecureCoding>
 @property  NSDecimalNumber *transactionAmount
 @property  NSString *appleTransactionHash
 @property  NSString *publicTransactionHash
 @property  NSDate *transactionDate
 @property  NSString *transactionCurrency
 @property  NSString *transactionCountry
 @property  NSData *nonce

  // class methods
  +[NFPeerPaymentTransferRequest supportsSecureCoding]

  // instance methods
  -[NFPeerPaymentTransferRequest dealloc]
  -[NFPeerPaymentTransferRequest encodeWithCoder:]
  -[NFPeerPaymentTransferRequest initWithCoder:]
  -[NFPeerPaymentTransferRequest initWithDictionary:]
  -[NFPeerPaymentTransferRequest nonce]
  -[NFPeerPaymentTransferRequest setNonce:]
  -[NFPeerPaymentTransferRequest transactionDate]
  -[NFPeerPaymentTransferRequest setTransactionDate:]
  -[NFPeerPaymentTransferRequest transactionAmount]
  -[NFPeerPaymentTransferRequest setTransactionAmount:]
  -[NFPeerPaymentTransferRequest setAppleTransactionHash:]
  -[NFPeerPaymentTransferRequest setPublicTransactionHash:]
  -[NFPeerPaymentTransferRequest setTransactionCurrency:]
  -[NFPeerPaymentTransferRequest setTransactionCountry:]
  -[NFPeerPaymentTransferRequest appleTransactionHash]
  -[NFPeerPaymentTransferRequest publicTransactionHash]
  -[NFPeerPaymentTransferRequest transactionCurrency]
  -[NFPeerPaymentTransferRequest transactionCountry]


NFPeerPaymentRequest : NSObject <NSSecureCoding>
 @property  NFECommercePaymentRequest *topUpRequest
 @property  NFPeerPaymentTransferRequest *transferRequest

  // class methods
  +[NFPeerPaymentRequest supportsSecureCoding]

  // instance methods
  -[NFPeerPaymentRequest dealloc]
  -[NFPeerPaymentRequest encodeWithCoder:]
  -[NFPeerPaymentRequest initWithCoder:]
  -[NFPeerPaymentRequest initWithDictionary:]
  -[NFPeerPaymentRequest setTransferRequest:]
  -[NFPeerPaymentRequest setTopUpRequest:]
  -[NFPeerPaymentRequest topUpRequest]
  -[NFPeerPaymentRequest transferRequest]


NFValueAddedServiceCard : NSObject <NSSecureCoding>
 @property  NSData *identifier
 @property  BOOL userInterventionRequired
 @property  int type
 @property  NSData *token
 @property  NSData *data

  // class methods
  +[NFValueAddedServiceCard supportsSecureCoding]

  // instance methods
  -[NFValueAddedServiceCard dealloc]
  -[NFValueAddedServiceCard token]
  -[NFValueAddedServiceCard type]
  -[NFValueAddedServiceCard setType:]
  -[NFValueAddedServiceCard encodeWithCoder:]
  -[NFValueAddedServiceCard initWithCoder:]
  -[NFValueAddedServiceCard data]
  -[NFValueAddedServiceCard identifier]
  -[NFValueAddedServiceCard setData:]
  -[NFValueAddedServiceCard setIdentifier:]
  -[NFValueAddedServiceCard setToken:]
  -[NFValueAddedServiceCard setUserInterventionRequired:]
  -[NFValueAddedServiceCard asDictionary]
  -[NFValueAddedServiceCard userInterventionRequired]


NFReaderSessionInterface : NSObject
  // class methods
  +[NFReaderSessionInterface interface]


NFReaderSessionCallbacks : NSObject
  // class methods
  +[NFReaderSessionCallbacks interface]


NFTrustSessionInterface : NSObject
  // class methods
  +[NFTrustSessionInterface interface]


NFContactlessSession : NFSession <NFContactlessSessionCallbacks>
 @property  <NFContactlessSessionDelegate> *delegate
 @property  NFApplet *activeApplet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFContactlessSession dealloc]
  -[NFContactlessSession delegate]
  -[NFContactlessSession setDelegate:]
  -[NFContactlessSession endSession]
  -[NFContactlessSession stopCardEmulation:]
  -[NFContactlessSession appletWithIdentifier:]
  -[NFContactlessSession activeApplet]
  -[NFContactlessSession stopCardEmulation]
  -[NFContactlessSession endSessionWithCompletion:]
  -[NFContactlessSession allApplets]
  -[NFContactlessSession didStartSession:]
  -[NFContactlessSession didDetectField:]
  -[NFContactlessSession didDetectFieldNotification:]
  -[NFContactlessSession didEndUnexpectedly]
  -[NFContactlessSession setActiveApplet:error:]
  -[NFContactlessSession startCardEmulation:]
  -[NFContactlessSession didSelectApplet:]
  -[NFContactlessSession didFelicaStateChange:]
  -[NFContactlessSession setActiveApplet:]
  -[NFContactlessSession startCardEmulation]


NFValueAddedServiceTransaction : NSObject <NSSecureCoding>
 @property  NSData *merchantId
 @property  NSString *signupUrl
 @property  NSNumber *terminalAppVersion
 @property  NSNumber *terminalMode
 @property  NSNumber *didSucceed
 @property  NSData *passData
 @property  NSData *token
 @property  NSError *error
 @property  NSNumber *filter
 @property  NSNumber *filterType
 @property  unsigned int result

  // class methods
  +[NFValueAddedServiceTransaction supportsSecureCoding]

  // instance methods
  -[NFValueAddedServiceTransaction dealloc]
  -[NFValueAddedServiceTransaction token]
  -[NFValueAddedServiceTransaction encodeWithCoder:]
  -[NFValueAddedServiceTransaction initWithCoder:]
  -[NFValueAddedServiceTransaction initWithDictionary:]
  -[NFValueAddedServiceTransaction error]
  -[NFValueAddedServiceTransaction result]
  -[NFValueAddedServiceTransaction filter]
  -[NFValueAddedServiceTransaction filterType]
  -[NFValueAddedServiceTransaction merchantId]
  -[NFValueAddedServiceTransaction didSucceed]
  -[NFValueAddedServiceTransaction terminalMode]
  -[NFValueAddedServiceTransaction signupUrl]
  -[NFValueAddedServiceTransaction terminalAppVersion]
  -[NFValueAddedServiceTransaction asDictionary]
  -[NFValueAddedServiceTransaction passData]


NFECommercePaymentSession : NFSession <NFECommercePaymentSessionCallbacks>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFECommercePaymentSession dealloc]
  -[NFECommercePaymentSession appletWithIdentifier:]
  -[NFECommercePaymentSession allApplets]
  -[NFECommercePaymentSession performECommercePayment:request:error:]
  -[NFECommercePaymentSession didStartSession:]
  -[NFECommercePaymentSession performECommercePayment:request:]


NFTapToRadar : NSObject
  // class methods
  +[NFTapToRadar requestTapToRadar:preferences:]
  +[NFTapToRadar _getInstance]
  +[NFTapToRadar handleCallback:]

  // instance methods
  -[NFTapToRadar init]
  -[NFTapToRadar _handleCallbackSync:]
  -[NFTapToRadar _requestTapToRadarSync:prefs:]


NFTrustSession : NFSession
  // instance methods
  -[NFTrustSession createKey:request:error:]
  -[NFTrustSession getKey:error:]
  -[NFTrustSession deleteKey:error:]
  -[NFTrustSession signWithKey:request:authorization:error:]
  -[NFTrustSession listKeys:]
  -[NFTrustSession signWithKey:request:paymentRequest:authorization:error:]


NFApplet : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *seIdentifier
 @property  NSData *identifierAsData
 @property  NSData *discretionaryData
 @property  unsigned char family
 @property  unsigned char lifecycleState
 @property  unsigned char activationState
 @property  BOOL authTransientSupport
 @property  NFApplet *groupHead
 @property  NSArray *groupMembers
 @property  NSArray *referencedApps
 @property  BOOL authTransientConfigurable
 @property  BOOL isTypeF
 @property  unsigned char supportedTypeFSystem
 @property  BOOL isGPLocked

  // class methods
  +[NFApplet supportsSecureCoding]

  // instance methods
  -[NFApplet isProxy]
  -[NFApplet dealloc]
  -[NFApplet isEqual:]
  -[NFApplet encodeWithCoder:]
  -[NFApplet initWithCoder:]
  -[NFApplet initWithDictionary:]
  -[NFApplet identifier]
  -[NFApplet family]
  -[NFApplet activationState]
  -[NFApplet groupMembers]
  -[NFApplet isContainer]
  -[NFApplet authTransientSupport]
  -[NFApplet groupMemberIDs]
  -[NFApplet multiSEGroupMemberIDs]
  -[NFApplet groupHeadID]
  -[NFApplet lifecycleState]
  -[NFApplet isGPLocked]
  -[NFApplet setAppletCollection:]
  -[NFApplet asDictionary]
  -[NFApplet isEqualToApplet:]
  -[NFApplet identifierAsData]
  -[NFApplet seIdentifier]
  -[NFApplet isTypeF]
  -[NFApplet supportedTypeFSystem]
  -[NFApplet _setIsActive:]
  -[NFApplet packageIdentifier]
  -[NFApplet moduleIdentifier]
  -[NFApplet groupActivationStyle]
  -[NFApplet appletCollection]
  -[NFApplet groupHead]
  -[NFApplet referencedApps]
  -[NFApplet multiSSDMembers]
  -[NFApplet isPPSEControllable]
  -[NFApplet rawGPState]
  -[NFApplet discretionaryData]
  -[NFApplet authTransientConfigurable]


NFHardwareControllerInfo : NSObject <NSSecureCoding>
 @property  unsigned long siliconVersion
 @property  unsigned long siliconName
 @property  unsigned long ROMVersion
 @property  unsigned long firmwareVersion
 @property  unsigned long firmwareRevision
 @property  unsigned long middlewareVersion
 @property  BOOL hasAntenna
 @property  BOOL hasBooster
 @property  BOOL hasIcfResistor
 @property  BOOL hasMFW
 @property  BOOL hasExpressFelicaTransitMode
 @property  BOOL hasExpressECPAccessMode
 @property  BOOL hasExpressGenericAMode
 @property  BOOL hasLPCDSupport
 @property  BOOL hasHLMSupport
 @property  BOOL hasLPEMSupport

  // class methods
  +[NFHardwareControllerInfo supportsSecureCoding]

  // instance methods
  -[NFHardwareControllerInfo encodeWithCoder:]
  -[NFHardwareControllerInfo initWithCoder:]
  -[NFHardwareControllerInfo initWithDictionary:]
  -[NFHardwareControllerInfo firmwareVersion]
  -[NFHardwareControllerInfo firmwareRevision]
  -[NFHardwareControllerInfo asDictionary]
  -[NFHardwareControllerInfo siliconVersion]
  -[NFHardwareControllerInfo siliconName]
  -[NFHardwareControllerInfo ROMVersion]
  -[NFHardwareControllerInfo middlewareVersion]
  -[NFHardwareControllerInfo hasAntenna]
  -[NFHardwareControllerInfo hasBooster]
  -[NFHardwareControllerInfo hasIcfResistor]
  -[NFHardwareControllerInfo hasMFW]
  -[NFHardwareControllerInfo hasExpressFelicaTransitMode]
  -[NFHardwareControllerInfo hasExpressECPAccessMode]
  -[NFHardwareControllerInfo hasExpressGenericAMode]
  -[NFHardwareControllerInfo hasLPCDSupport]
  -[NFHardwareControllerInfo hasHLMSupport]
  -[NFHardwareControllerInfo hasLPEMSupport]


NFReaderSessionInternalInterface : NSObject
  // class methods
  +[NFReaderSessionInternalInterface interface]


NFContactlessPaymentStartEvent : NSObject <NSSecureCoding>
 @property  NFApplet *applet
 @property  NSString *keyIdentifier
 @property  unsigned short selectStatus
 @property  unsigned short paymentMode
 @property  NSString *spIdentifier

  // class methods
  +[NFContactlessPaymentStartEvent supportsSecureCoding]

  // instance methods
  -[NFContactlessPaymentStartEvent dealloc]
  -[NFContactlessPaymentStartEvent encodeWithCoder:]
  -[NFContactlessPaymentStartEvent initWithCoder:]
  -[NFContactlessPaymentStartEvent initWithDictionary:]
  -[NFContactlessPaymentStartEvent keyIdentifier]
  -[NFContactlessPaymentStartEvent paymentMode]
  -[NFContactlessPaymentStartEvent applet]
  -[NFContactlessPaymentStartEvent asDictionary]
  -[NFContactlessPaymentStartEvent appletIdentifier]
  -[NFContactlessPaymentStartEvent _setApplet:]
  -[NFContactlessPaymentStartEvent setKeyIdentifier:]
  -[NFContactlessPaymentStartEvent selectStatus]
  -[NFContactlessPaymentStartEvent spIdentifier]


NFFieldDetectSession : NFSession <NFFieldDetectSessionCallbacks>
 @property  <NFFieldDetectSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFFieldDetectSession dealloc]
  -[NFFieldDetectSession delegate]
  -[NFFieldDetectSession setDelegate:]
  -[NFFieldDetectSession didDetectField:]
  -[NFFieldDetectSession didDetectFieldNotification:]
  -[NFFieldDetectSession didEndUnexpectedly]


NFHardwareManager : NSObject <NSXPCConnectionDelegate, NFHardwareManagerCallbacks>
 @property  NFHardwareControllerInfo *controllerInfo
 @property  NSUUID *blessedUser
 @property  BOOL isBackgroundTagReadingAvailable
 @property  BOOL suspendBackgroundTagReading
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NFHardwareManager sharedHardwareManager]

  // instance methods
  -[NFHardwareManager init]
  -[NFHardwareManager dealloc]
  -[NFHardwareManager remoteObjectProxyWithErrorHandler:]
  -[NFHardwareManager synchronousRemoteObjectProxyWithErrorHandler:]
  -[NFHardwareManager preWarm]
  -[NFHardwareManager secureElementBootHistory:]
  -[NFHardwareManager startSesHatSession:]
  -[NFHardwareManager secureElements]
  -[NFHardwareManager startNdefTagSession:]
  -[NFHardwareManager startReaderSession:]
  -[NFHardwareManager registerEventListener:]
  -[NFHardwareManager _connectIfNeeded]
  -[NFHardwareManager actOnUserInitiatedSystemShutDown:completion:]
  -[NFHardwareManager areFeaturesSupported:outError:]
  -[NFHardwareManager startECommercePaymentSession:]
  -[NFHardwareManager startLoyaltyAndContactlessPaymentSession:]
  -[NFHardwareManager startPeerPaymentSession:]
  -[NFHardwareManager startTrustSession:]
  -[NFHardwareManager startSecureElementManagerSessionWithPriority:]
  -[NFHardwareManager startSecureElementManagerSession:]
  -[NFHardwareManager unregisterEventListener:]
  -[NFHardwareManager isExpressModeSupported]
  -[NFHardwareManager isInRestrictedMode]
  -[NFHardwareManager setFieldDetectEnabled:]
  -[NFHardwareManager startFieldDetectSession:]
  -[NFHardwareManager invalidateConnection]
  -[NFHardwareManager setAuthorization:]
  -[NFHardwareManager expressModesEnabled]
  -[NFHardwareManager secureElementWithIdentifier:didChangeRestrictedMode:]
  -[NFHardwareManager didInvalidateXPCConnection:]
  -[NFHardwareManager didInterruptXPCConnection:]
  -[NFHardwareManager updateHWSupport:]
  -[NFHardwareManager getHwSupport]
  -[NFHardwareManager controllerInfoWithError:]
  -[NFHardwareManager getDieIDWithError:]
  -[NFHardwareManager getHeadlessModeFlags:]
  -[NFHardwareManager getPowerCounters:]
  -[NFHardwareManager checkUserBlessing:hasCards:]
  -[NFHardwareManager setBlessedUser:keybagUUID:withAuthorization:]
  -[NFHardwareManager secureElementWithIdentifier:]
  -[NFHardwareManager sessionDidEnd:]
  -[NFHardwareManager startSecureElementManagerSessionWithPriority:callback:]
  -[NFHardwareManager _startReaderSessionWithUI:callback:]
  -[NFHardwareManager configureReaderModeRFForTransitPartner:transitPartner:callback:]
  -[NFHardwareManager queryHardwareSupport:]
  -[NFHardwareManager controllerInfo]
  -[NFHardwareManager rfSettings]
  -[NFHardwareManager getDieID]
  -[NFHardwareManager getUniqueFDRKey:]
  -[NFHardwareManager pushSignedRF:]
  -[NFHardwareManager isExpressAppletTypeSupported:]
  -[NFHardwareManager configureHeadlessFactoryMode:]
  -[NFHardwareManager getHeadlessFactoryMode:]
  -[NFHardwareManager disableHeadless]
  -[NFHardwareManager dumpLPMDebugLog]
  -[NFHardwareManager checkUserBlessing:]
  -[NFHardwareManager setBlessedUser:withAuthorization:]
  -[NFHardwareManager blessedUser]
  -[NFHardwareManager hasCard]
  -[NFHardwareManager triggerDelayedWake:]
  -[NFHardwareManager enableHeadlessTestMode:]
  -[NFHardwareManager toggleGPIO:]
  -[NFHardwareManager refreshSecureElements]
  -[NFHardwareManager hostEmulationLog]
  -[NFHardwareManager startContactlessPaymentSession:]
  -[NFHardwareManager startContactlessSession:]
  -[NFHardwareManager startContactlessUICCSession:]
  -[NFHardwareManager startReaderSessionWithActionSheetUI:]
  -[NFHardwareManager startNdefTagSessionWithBluetoothLESecureOOBData:callback:]
  -[NFHardwareManager startHCESession:]
  -[NFHardwareManager startSecureElementAndHCESession:]
  -[NFHardwareManager areSessionsAllowed]
  -[NFHardwareManager isBackgroundTagReadingAvailable]
  -[NFHardwareManager suspendBackgroundTagReading]
  -[NFHardwareManager setSuspendBackgroundTagReading:]
  -[NFHardwareManager setChipscope:]


NFTag : NSObject <NSSecureCoding, NFTag, NFTagA, NFTagB, NFTagF>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned int type
 @property  unsigned int technology
 @property  NSData *tagID
 @property  NSData *UID
 @property  unsigned int ndefAvailability
 @property  unsigned long ndefMessageSize
 @property  unsigned long ndefContainerSize
 @property  NSData *AppData
 @property  <NFTagA> *tagA
 @property  <NFTagB> *tagB
 @property  <NFTagF> *tagF
 @property  NSData *atqa
 @property  NSData *sak
 @property  NSData *historicalBytes
 @property  NSData *selectedAID
 @property  NSData *pupi
 @property  NSData *applicationData
 @property  BOOL applicationDataCoding
 @property  NSData *IDm
 @property  NSData *PMm
 @property  NSData *SystemCode
 @property  NSArray *allSystemCodes

  // class methods
  +[NFTag supportsSecureCoding]

  // instance methods
  -[NFTag dealloc]
  -[NFTag type]
  -[NFTag encodeWithCoder:]
  -[NFTag initWithCoder:]
  -[NFTag applicationData]
  -[NFTag tagID]
  -[NFTag UID]
  -[NFTag selectedAID]
  -[NFTag technology]
  -[NFTag IDm]
  -[NFTag PMm]
  -[NFTag SystemCode]
  -[NFTag AppData]
  -[NFTag initWithNFTag:]
  -[NFTag ndefAvailability]
  -[NFTag ndefMessageSize]
  -[NFTag ndefContainerSize]
  -[NFTag atqa]
  -[NFTag sak]
  -[NFTag historicalBytes]
  -[NFTag pupi]
  -[NFTag applicationDataCoding]
  -[NFTag allSystemCodes]
  -[NFTag isEqualToNFTag:]
  -[NFTag tagA]
  -[NFTag tagB]
  -[NFTag tagF]


NFPeerPaymentEnrollmentRequest : NSObject <NSSecureCoding>
 @property  NSData *alternateDSID

  // class methods
  +[NFPeerPaymentEnrollmentRequest supportsSecureCoding]

  // instance methods
  -[NFPeerPaymentEnrollmentRequest dealloc]
  -[NFPeerPaymentEnrollmentRequest encodeWithCoder:]
  -[NFPeerPaymentEnrollmentRequest initWithCoder:]
  -[NFPeerPaymentEnrollmentRequest initWithDictionary:]
  -[NFPeerPaymentEnrollmentRequest alternateDSID]
  -[NFPeerPaymentEnrollmentRequest setAlternateDSID:]


NFECommercePaymentSessionInterface : NSObject
  // class methods
  +[NFECommercePaymentSessionInterface interface]


NFRemoteAdminManagerInterface : NSObject
  // class methods
  +[NFRemoteAdminManagerInterface interface]


NFRemoteAdminManagerCallbacks : NSObject
  // class methods
  +[NFRemoteAdminManagerCallbacks interface]


NFSecureElementManagerSessionInterface : NSObject
  // class methods
  +[NFSecureElementManagerSessionInterface interface]


NFNdefMessage : NSObject <NSSecureCoding, NFNdefMessage>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *records

  // class methods
  +[NFNdefMessage supportsSecureCoding]

  // instance methods
  -[NFNdefMessage initWithBytes:length:]
  -[NFNdefMessage init]
  -[NFNdefMessage dealloc]
  -[NFNdefMessage encodeWithCoder:]
  -[NFNdefMessage initWithCoder:]
  -[NFNdefMessage asData]
  -[NFNdefMessage records]
  -[NFNdefMessage addRecord:]
  -[NFNdefMessage decode]
  -[NFNdefMessage initWithNDEFMessage:]
  -[NFNdefMessage addRecordArray:]


NFSecureElementAndHostCardEmulationSession : NFHCESession
  // instance methods
  -[NFSecureElementAndHostCardEmulationSession transceive:forSEID:error:]


NFHCESession : NFSession <NFHostEmulationSessionCallbacks>
 @property  <NFHCESessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFHCESession dealloc]
  -[NFHCESession delegate]
  -[NFHCESession setDelegate:]
  -[NFHCESession endSession]
  -[NFHCESession didEndUnexpectedly]
  -[NFHCESession readAPDU:]
  -[NFHCESession didReceiveAPDU:]
  -[NFHCESession didConnectToReader]
  -[NFHCESession didDisconnectFromReader]
  -[NFHCESession startEmulation]
  -[NFHCESession stopEmulation]
  -[NFHCESession sendAPDU:]


NFPeerPaymentSession : NFSession
  // instance methods
  -[NFPeerPaymentSession performPeerPayment:request:error:]
  -[NFPeerPaymentSession deleteKey]
  -[NFPeerPaymentSession performPeerPayment:request:]


NFSession : NSObject <NFSession>
 @property  unsigned long state
 @property  BOOL didEnd
 @property  BOOL isActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFSession init]
  -[NFSession dealloc]
  -[NFSession isActive]
  -[NFSession resume]
  -[NFSession remoteObjectProxyWithErrorHandler:]
  -[NFSession synchronousRemoteObjectProxyWithErrorHandler:]
  -[NFSession state]
  -[NFSession didEnd]
  -[NFSession callbackQueue]
  -[NFSession endSession]
  -[NFSession setProxy:]
  -[NFSession proxy]
  -[NFSession setDidEndCallback:]
  -[NFSession isFirstInQueue]
  -[NFSession endSessionWithCompletion:]
  -[NFSession didStartSession:]
  -[NFSession didEndUnexpectedly]
  -[NFSession setDidStartCallback:]
  -[NFSession setIsFirstInQueue:]
  -[NFSession _didStartSession:]
  -[NFSession didStartSessionWithoutQueue:]
  -[NFSession prioritizeSession]
  -[NFSession _endProxySession]
  -[NFSession _didEndSession]
  -[NFSession endSessionAndStartNextSession:completion:]


NFHardwareSecureElementInfo : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  unsigned long OSVersion
 @property  unsigned long fullOSVersion
 @property  unsigned long firmwareVersion
 @property  NSNumber *compiledFWVersion
 @property  unsigned long hardwareVersion
 @property  unsigned long deviceType
 @property  NSNumber *sequenceCounter
 @property  NSNumber *referenceCounter
 @property  unsigned long osid
 @property  NSNumber *otherOSValid
 @property  BOOL restrictedMode
 @property  BOOL restrictedPerformanceMode
 @property  BOOL osUpdateMode
 @property  unsigned long OSMode
 @property  unsigned long signingKeyType
 @property  unsigned long migrationState
 @property  unsigned long migrationContext
 @property  NSNumber *migrationPackages
 @property  NSNumber *migrationInstances
 @property  NSString *platformIdentifier
 @property  NSString *serialNumber
 @property  NSString *rsaCertificate
 @property  NSString *ecdsaCertificate
 @property  NSString *eckaCertificate
 @property  unsigned long appletMap
 @property  NSNumber *persistentConfigID
 @property  NSString *rootKeyID
 @property  NSString *osKeyID
 @property  NSString *firmwareKeyID
 @property  NSString *nonce
 @property  NSData *manifestQuery
 @property  BOOL personalisable
 @property  NSArray *bootHistory
 @property  unsigned long supportedTechnologies
 @property  unsigned long seType
 @property  NSString *atrString
 @property  BOOL jcopTooOld

  // class methods
  +[NFHardwareSecureElementInfo supportsSecureCoding]

  // instance methods
  -[NFHardwareSecureElementInfo dealloc]
  -[NFHardwareSecureElementInfo encodeWithCoder:]
  -[NFHardwareSecureElementInfo initWithCoder:]
  -[NFHardwareSecureElementInfo initWithDictionary:]
  -[NFHardwareSecureElementInfo identifier]
  -[NFHardwareSecureElementInfo sequenceCounter]
  -[NFHardwareSecureElementInfo deviceType]
  -[NFHardwareSecureElementInfo nonce]
  -[NFHardwareSecureElementInfo serialNumber]
  -[NFHardwareSecureElementInfo OSVersion]
  -[NFHardwareSecureElementInfo firmwareVersion]
  -[NFHardwareSecureElementInfo hardwareVersion]
  -[NFHardwareSecureElementInfo personalisable]
  -[NFHardwareSecureElementInfo manifestQuery]
  -[NFHardwareSecureElementInfo restrictedMode]
  -[NFHardwareSecureElementInfo platformIdentifier]
  -[NFHardwareSecureElementInfo migrationState]
  -[NFHardwareSecureElementInfo supportedTechnologies]
  -[NFHardwareSecureElementInfo OSMode]
  -[NFHardwareSecureElementInfo jcopTooOld]
  -[NFHardwareSecureElementInfo asDictionary]
  -[NFHardwareSecureElementInfo _setIsInRestrictedMode:]
  -[NFHardwareSecureElementInfo bootHistory]
  -[NFHardwareSecureElementInfo _setIsInRestrictedPerformanceMode:]
  -[NFHardwareSecureElementInfo setBootHistory:]
  -[NFHardwareSecureElementInfo fullOSVersion]
  -[NFHardwareSecureElementInfo compiledFWVersion]
  -[NFHardwareSecureElementInfo referenceCounter]
  -[NFHardwareSecureElementInfo osid]
  -[NFHardwareSecureElementInfo otherOSValid]
  -[NFHardwareSecureElementInfo restrictedPerformanceMode]
  -[NFHardwareSecureElementInfo osUpdateMode]
  -[NFHardwareSecureElementInfo signingKeyType]
  -[NFHardwareSecureElementInfo migrationContext]
  -[NFHardwareSecureElementInfo migrationPackages]
  -[NFHardwareSecureElementInfo migrationInstances]
  -[NFHardwareSecureElementInfo rsaCertificate]
  -[NFHardwareSecureElementInfo ecdsaCertificate]
  -[NFHardwareSecureElementInfo eckaCertificate]
  -[NFHardwareSecureElementInfo appletMap]
  -[NFHardwareSecureElementInfo persistentConfigID]
  -[NFHardwareSecureElementInfo rootKeyID]
  -[NFHardwareSecureElementInfo osKeyID]
  -[NFHardwareSecureElementInfo firmwareKeyID]
  -[NFHardwareSecureElementInfo seType]
  -[NFHardwareSecureElementInfo atrString]


NFSeshatSession : NFSession <NFSeshatSessionCallbacks>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NFSeshatSession isTransientError:]

  // instance methods
  -[NFSeshatSession allocateSlot:authorizingUser:authorizingUserToken:outToken:outWriteCount:]
  -[NFSeshatSession derive:userHash:outData:outWriteCount:]
  -[NFSeshatSession resetCounter:userToken:outWriteCount:]
  -[NFSeshatSession authorizeUpdate:slotIndex:userToken:outWriteCount:]
  -[NFSeshatSession deleteSlot:outWriteCount:]
  -[NFSeshatSession upgradeKey:inputData:outWriteCount:]
  -[NFSeshatSession getData:updateKUD:outWriteLimit:outWriteCount:]
  -[NFSeshatSession obliterate]
  -[NFSeshatSession getHash:]


NFNdefRecord : NSObject <NSSecureCoding, NFNdefRecord>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned char header
 @property  BOOL messageBegin
 @property  BOOL messageEnd
 @property  BOOL shortRecord
 @property  BOOL chunked
 @property  unsigned char typeNameFormat
 @property  NSData *type
 @property  NSData *payload
 @property  NSData *identifier

  // class methods
  +[NFNdefRecord supportsSecureCoding]
  +[NFNdefRecord recordWithURI:]
  +[NFNdefRecord emptyRecord]
  +[NFNdefRecord recordsFromBytes:length:]
  +[NFNdefRecord recordWithText:lang:]
  +[NFNdefRecord recordWithTelephone:]

  // instance methods
  -[NFNdefRecord initWithBytes:length:]
  -[NFNdefRecord init]
  -[NFNdefRecord dealloc]
  -[NFNdefRecord type]
  -[NFNdefRecord setType:]
  -[NFNdefRecord encodeWithCoder:]
  -[NFNdefRecord initWithCoder:]
  -[NFNdefRecord identifier]
  -[NFNdefRecord setIdentifier:]
  -[NFNdefRecord asData]
  -[NFNdefRecord setPayload:]
  -[NFNdefRecord payload]
  -[NFNdefRecord header]
  -[NFNdefRecord setHeader:]
  -[NFNdefRecord typeNameFormat]
  -[NFNdefRecord decode]
  -[NFNdefRecord initWithNDEFRecord:]
  -[NFNdefRecord setTypeNameFormat:]
  -[NFNdefRecord setShortRecord:]
  -[NFNdefRecord _setIdLengthPresent:]
  -[NFNdefRecord messageBegin]
  -[NFNdefRecord messageEnd]
  -[NFNdefRecord chunked]
  -[NFNdefRecord shortRecord]
  -[NFNdefRecord isURIRecord]
  -[NFNdefRecord setMessageBegin:]
  -[NFNdefRecord setMessageEnd:]
  -[NFNdefRecord setChunked:]
  -[NFNdefRecord _idLengthPresent]


NFContactlessPaymentEndEvent : NSObject <NSSecureCoding>
 @property  NFApplet *applet
 @property  NSString *keyIdentifier
 @property  NSString *readerIdentifier
 @property  NSString *transactionIdentifier
 @property  BOOL didError
 @property  unsigned int command
 @property  unsigned short status
 @property  unsigned short type
 @property  unsigned short result
 @property  unsigned short informative
 @property  NSDecimalNumber *amount
 @property  NSString *currency
 @property  NSData *tlv
 @property  NSDictionary *felicaInfo
 @property  NSDictionary *parsedInfo

  // class methods
  +[NFContactlessPaymentEndEvent supportsSecureCoding]
  +[NFContactlessPaymentEndEvent logsTransactionDetails]

  // instance methods
  -[NFContactlessPaymentEndEvent dealloc]
  -[NFContactlessPaymentEndEvent type]
  -[NFContactlessPaymentEndEvent encodeWithCoder:]
  -[NFContactlessPaymentEndEvent initWithCoder:]
  -[NFContactlessPaymentEndEvent initWithDictionary:]
  -[NFContactlessPaymentEndEvent result]
  -[NFContactlessPaymentEndEvent status]
  -[NFContactlessPaymentEndEvent amount]
  -[NFContactlessPaymentEndEvent command]
  -[NFContactlessPaymentEndEvent transactionIdentifier]
  -[NFContactlessPaymentEndEvent keyIdentifier]
  -[NFContactlessPaymentEndEvent currency]
  -[NFContactlessPaymentEndEvent applet]
  -[NFContactlessPaymentEndEvent didError]
  -[NFContactlessPaymentEndEvent informative]
  -[NFContactlessPaymentEndEvent felicaInfo]
  -[NFContactlessPaymentEndEvent asDictionary]
  -[NFContactlessPaymentEndEvent appletIdentifier]
  -[NFContactlessPaymentEndEvent _setApplet:]
  -[NFContactlessPaymentEndEvent readerIdentifier]
  -[NFContactlessPaymentEndEvent tlv]
  -[NFContactlessPaymentEndEvent parsedInfo]


NFECommercePaymentResponse : NSObject <NSSecureCoding>
 @property  NSString *transactionIdentifier
 @property  NSData *transactionData
 @property  NSDictionary *certs
 @property  NSArray *SEPcerts
 @property  NSData *confirmationBlobHash
 @property  NSData *confirmationBlobSignature
 @property  long long confirmationBlobVersion

  // class methods
  +[NFECommercePaymentResponse supportsSecureCoding]

  // instance methods
  -[NFECommercePaymentResponse dealloc]
  -[NFECommercePaymentResponse encodeWithCoder:]
  -[NFECommercePaymentResponse initWithCoder:]
  -[NFECommercePaymentResponse initWithDictionary:]
  -[NFECommercePaymentResponse certs]
  -[NFECommercePaymentResponse transactionIdentifier]
  -[NFECommercePaymentResponse transactionData]
  -[NFECommercePaymentResponse confirmationBlobSignature]
  -[NFECommercePaymentResponse setCerts:]
  -[NFECommercePaymentResponse setConfirmationBlobHash:withSignature:version:]
  -[NFECommercePaymentResponse setSEPCerts:]
  -[NFECommercePaymentResponse SEPcerts]
  -[NFECommercePaymentResponse confirmationBlobHash]
  -[NFECommercePaymentResponse confirmationBlobVersion]


NFContactlessSessionInterface : NSObject
  // class methods
  +[NFContactlessSessionInterface interface]


NFContactlessSessionCallbacks : NSObject
  // class methods
  +[NFContactlessSessionCallbacks interface]


NFNdefTagSession : NFSession <NFNdefTagSessionCallbacks>
 @property  <NFNdefTagSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NFNdefTagSession generateBluetoothLESecureNdefPayloadWithOOBData:]

  // instance methods
  -[NFNdefTagSession dealloc]
  -[NFNdefTagSession delegate]
  -[NFNdefTagSession setDelegate:]
  -[NFNdefTagSession endSession]
  -[NFNdefTagSession startEmulationWithNdefMessage:withMessageType:]
  -[NFNdefTagSession didEndUnexpectedly]
  -[NFNdefTagSession startEmulation:]
  -[NFNdefTagSession stopEmulation]
  -[NFNdefTagSession startEmulationWithNdefMessage:withMessageType:error:]
  -[NFNdefTagSession startBluetoothLEPairingWithDeviceAddress:role:optionalOOBData:]
  -[NFNdefTagSession startBluetoothLESecureConnectionWithDeviceAddress:optionalOOBData:]
  -[NFNdefTagSession startBluetoothLESecureConnectionWithOOBData:]
  -[NFNdefTagSession startEmulation:withMessageType:error:]
  -[NFNdefTagSession stopEmulationWithError:]
  -[NFNdefTagSession setTagData:error:]
  -[NFNdefTagSession getTagDataWithError:]
  -[NFNdefTagSession getTagMessageWithError:]
  -[NFNdefTagSession enableWrite:error:]
  -[NFNdefTagSession didTagStateChange:]
  -[NFNdefTagSession startEmulationWithNdefMessage:]
  -[NFNdefTagSession startEmulationWithNdefMessage:error:]
  -[NFNdefTagSession startEmulation:error:]
  -[NFNdefTagSession startEmulation:withMessageType:]
  -[NFNdefTagSession setTagMessage:]
  -[NFNdefTagSession setTagMessage:error:]
  -[NFNdefTagSession setTagData:]
  -[NFNdefTagSession getTagData]
  -[NFNdefTagSession getTagMessage]
  -[NFNdefTagSession enableWrite:]


NFTrustObject : NSObject <NSSecureCoding>
  // class methods
  +[NFTrustObject supportsSecureCoding]
  +[NFTrustObject allowedXPCClasses]

  // instance methods
  -[NFTrustObject dealloc]
  -[NFTrustObject encodeWithCoder:]
  -[NFTrustObject initWithCoder:]
  -[NFTrustObject dictionaryRepresentation]
  -[NFTrustObject allowedXPCClasses]


NFTrustKey : NFTrustObject
 @property  NSString *identifier
 @property  NSData *publicKey
 @property  NSNumber *counterLimit
 @property  NSNumber *counterValue
 @property  NSArray *localValidations
 @property  NSString *keyAttestationAuthority
 @property  NSString *keyAttestation

  // class methods
  +[NFTrustKey supportsSecureCoding]
  +[NFTrustKey keyWithIdentifier:]

  // instance methods
  -[NFTrustKey dealloc]
  -[NFTrustKey encodeWithCoder:]
  -[NFTrustKey initWithCoder:]
  -[NFTrustKey identifier]
  -[NFTrustKey setIdentifier:]
  -[NFTrustKey publicKey]
  -[NFTrustKey setPublicKey:]
  -[NFTrustKey keyAttestation]
  -[NFTrustKey keyAttestationAuthority]
  -[NFTrustKey counterLimit]
  -[NFTrustKey counterValue]
  -[NFTrustKey localValidations]
  -[NFTrustKey setKeyAttestationAuthority:]
  -[NFTrustKey setKeyAttestation:]
  -[NFTrustKey setCounterLimit:]
  -[NFTrustKey setCounterValue:]
  -[NFTrustKey setLocalValidations:]


NFTrustKeyRequest : NFTrustObject
 @property  NSNumber *counterLimit
 @property  NSData *subjectIdentifier
 @property  NSData *discretionaryData
 @property  NSArray *localValidations

  // class methods
  +[NFTrustKeyRequest supportsSecureCoding]
  +[NFTrustKeyRequest keyRequestWithSubjectIdentifier:discretionaryData:localValidations:counterLimit:]

  // instance methods
  -[NFTrustKeyRequest dealloc]
  -[NFTrustKeyRequest encodeWithCoder:]
  -[NFTrustKeyRequest initWithCoder:]
  -[NFTrustKeyRequest subjectIdentifier]
  -[NFTrustKeyRequest discretionaryData]
  -[NFTrustKeyRequest counterLimit]
  -[NFTrustKeyRequest localValidations]
  -[NFTrustKeyRequest setCounterLimit:]
  -[NFTrustKeyRequest setLocalValidations:]
  -[NFTrustKeyRequest setDiscretionaryData:]
  -[NFTrustKeyRequest setSubjectIdentifier:]


NFTrustSignRequest : NFTrustObject
 @property  NSData *challenge
 @property  NSData *data

  // class methods
  +[NFTrustSignRequest supportsSecureCoding]
  +[NFTrustSignRequest signRequestWithChallenge:data:]

  // instance methods
  -[NFTrustSignRequest dealloc]
  -[NFTrustSignRequest encodeWithCoder:]
  -[NFTrustSignRequest initWithCoder:]
  -[NFTrustSignRequest data]
  -[NFTrustSignRequest setData:]
  -[NFTrustSignRequest challenge]
  -[NFTrustSignRequest setChallenge:]


NFTrustSignResponse : NFTrustObject
 @property  NSData *trustObjectInternalRawNSData
 @property  NSNumber *counterValue
 @property  NSString *rawData
 @property  NFTrustKey *key

  // class methods
  +[NFTrustSignResponse supportsSecureCoding]
  +[NFTrustSignResponse signResponseWithRawData:counterValueData:]

  // instance methods
  -[NFTrustSignResponse dealloc]
  -[NFTrustSignResponse key]
  -[NFTrustSignResponse encodeWithCoder:]
  -[NFTrustSignResponse initWithCoder:]
  -[NFTrustSignResponse setKey:]
  -[NFTrustSignResponse rawData]
  -[NFTrustSignResponse counterValue]
  -[NFTrustSignResponse setCounterValue:]
  -[NFTrustSignResponse trustObjectInternalRawNSData]
  -[NFTrustSignResponse setTrustObjectInternalRawNSData:]


NFTrustPaymentSignResponse : NFTrustObject
 @property  NFTrustSignResponse *signResponse
 @property  NFECommercePaymentResponse *paymentResponse

  // class methods
  +[NFTrustPaymentSignResponse supportsSecureCoding]
  +[NFTrustPaymentSignResponse paymentSignResponseWithSignResponse:paymentResponse:]

  // instance methods
  -[NFTrustPaymentSignResponse dealloc]
  -[NFTrustPaymentSignResponse encodeWithCoder:]
  -[NFTrustPaymentSignResponse initWithCoder:]
  -[NFTrustPaymentSignResponse signResponse]
  -[NFTrustPaymentSignResponse paymentResponse]
  -[NFTrustPaymentSignResponse setSignResponse:]
  -[NFTrustPaymentSignResponse setPaymentResponse:]


NFTrustLocalValidation : NFTrustObject <NFTrustLocalValidation>
 @property  unsigned char primitiveLocalValidation

  // class methods
  +[NFTrustLocalValidation supportsSecureCoding]
  +[NFTrustLocalValidation localValidationWithPassCode]
  +[NFTrustLocalValidation localValidationWithTouchID]
  +[NFTrustLocalValidation localValidationWithFaceID]
  +[NFTrustLocalValidation withPrimitiveLocalValidation:]

  // instance methods
  -[NFTrustLocalValidation encodeWithCoder:]
  -[NFTrustLocalValidation initWithCoder:]
  -[NFTrustLocalValidation primitiveLocalValidation]
  -[NFTrustLocalValidation setPrimitiveLocalValidation:]


NFRemoteAdminCardIngestionRequest : NSObject <NSSecureCoding>
 @property  NSString *serverIdentifier
 @property  NSString *uri
 @property  NSString *sessionToken
 @property  NSDictionary *cardServiceInfo
 @property  unsigned long maxDetectionTimeout

  // class methods
  +[NFRemoteAdminCardIngestionRequest supportsSecureCoding]
  +[NFRemoteAdminCardIngestionRequest cardIngestionRequestWithServerIdentifier:sessionToken:readerModeMetadata:maxDetectionTimeout:]

  // instance methods
  -[NFRemoteAdminCardIngestionRequest dealloc]
  -[NFRemoteAdminCardIngestionRequest encodeWithCoder:]
  -[NFRemoteAdminCardIngestionRequest initWithCoder:]
  -[NFRemoteAdminCardIngestionRequest setSessionToken:]
  -[NFRemoteAdminCardIngestionRequest sessionToken]
  -[NFRemoteAdminCardIngestionRequest uri]
  -[NFRemoteAdminCardIngestionRequest serverIdentifier]
  -[NFRemoteAdminCardIngestionRequest setServerIdentifier:]
  -[NFRemoteAdminCardIngestionRequest setUri:]
  -[NFRemoteAdminCardIngestionRequest setMaxDetectionTimeout:]
  -[NFRemoteAdminCardIngestionRequest setCardServiceInfo:]
  -[NFRemoteAdminCardIngestionRequest cardServiceInfo]
  -[NFRemoteAdminCardIngestionRequest maxDetectionTimeout]


NFContactlessPaymentSessionInterface : NSObject
  // class methods
  +[NFContactlessPaymentSessionInterface interface]


NFContactlessPaymentSessionCallbacks : NSObject
  // class methods
  +[NFContactlessPaymentSessionCallbacks interface]


NFHardwareManagerInterface : NSObject
  // class methods
  +[NFHardwareManagerInterface interface]


NFHardwareManagerCallbacks : NSObject
  // class methods
  +[NFHardwareManagerCallbacks interface]


NFECommercePaymentRequest : NSObject <NSSecureCoding>
 @property  NSString *appletIdentifier
 @property  NSData *merchantData
 @property  NSString *currencyCode
 @property  NSString *countryCode
 @property  NSDecimalNumber *transactionAmount
 @property  NSDate *transactionDate
 @property  unsigned char merchantCapabilities
 @property  unsigned int unpredictableNumber

  // class methods
  +[NFECommercePaymentRequest supportsSecureCoding]

  // instance methods
  -[NFECommercePaymentRequest dealloc]
  -[NFECommercePaymentRequest encodeWithCoder:]
  -[NFECommercePaymentRequest initWithCoder:]
  -[NFECommercePaymentRequest initWithDictionary:]
  -[NFECommercePaymentRequest countryCode]
  -[NFECommercePaymentRequest currencyCode]
  -[NFECommercePaymentRequest setCurrencyCode:]
  -[NFECommercePaymentRequest setCountryCode:]
  -[NFECommercePaymentRequest transactionDate]
  -[NFECommercePaymentRequest setTransactionDate:]
  -[NFECommercePaymentRequest setMerchantCapabilities:]
  -[NFECommercePaymentRequest transactionAmount]
  -[NFECommercePaymentRequest setTransactionAmount:]
  -[NFECommercePaymentRequest merchantCapabilities]
  -[NFECommercePaymentRequest setAppletIdentifier:]
  -[NFECommercePaymentRequest setUnpredictableNumber:]
  -[NFECommercePaymentRequest setMerchantData:]
  -[NFECommercePaymentRequest appletIdentifier]
  -[NFECommercePaymentRequest merchantData]
  -[NFECommercePaymentRequest unpredictableNumber]


NFFieldNotification : NSObject <NSSecureCoding>
 @property  unsigned long notificationType
 @property  unsigned int rfTechnology
 @property  unsigned short typeFSystemCode

  // class methods
  +[NFFieldNotification supportsSecureCoding]
  +[NFFieldNotification notificationWithDictionary:]

  // instance methods
  -[NFFieldNotification encodeWithCoder:]
  -[NFFieldNotification initWithCoder:]
  -[NFFieldNotification initWithDictionary:]
  -[NFFieldNotification setNotificationType:]
  -[NFFieldNotification notificationType]
  -[NFFieldNotification rfTechnology]
  -[NFFieldNotification typeFSystemCode]


NFFieldNotificationECP1_0 : NFFieldNotification
 @property  BOOL odaRequired
 @property  unsigned int terminalMode
 @property  unsigned int terminalType

  // class methods
  +[NFFieldNotificationECP1_0 supportsSecureCoding]

  // instance methods
  -[NFFieldNotificationECP1_0 encodeWithCoder:]
  -[NFFieldNotificationECP1_0 initWithCoder:]
  -[NFFieldNotificationECP1_0 initWithDictionary:]
  -[NFFieldNotificationECP1_0 terminalMode]
  -[NFFieldNotificationECP1_0 terminalType]
  -[NFFieldNotificationECP1_0 odaRequired]


NFFieldNotificationECP2_0 : NFFieldNotification
 @property  BOOL odaRequired
 @property  unsigned long terminalType
 @property  unsigned char terminalSubType
 @property  NSArray *tciArray
 @property  NSData *openLoopSchemeBitfield

  // class methods
  +[NFFieldNotificationECP2_0 supportsSecureCoding]

  // instance methods
  -[NFFieldNotificationECP2_0 dealloc]
  -[NFFieldNotificationECP2_0 encodeWithCoder:]
  -[NFFieldNotificationECP2_0 initWithCoder:]
  -[NFFieldNotificationECP2_0 initWithDictionary:]
  -[NFFieldNotificationECP2_0 terminalType]
  -[NFFieldNotificationECP2_0 odaRequired]
  -[NFFieldNotificationECP2_0 terminalSubType]
  -[NFFieldNotificationECP2_0 tciArray]
  -[NFFieldNotificationECP2_0 openLoopSchemeBitfield]


NFReaderSession : NFSession <NFReaderSessionCallbacks>
 @property  <NFReaderSessionDelegate> *delegate
 @property  long long actionSheetUI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFReaderSession dealloc]
  -[NFReaderSession delegate]
  -[NFReaderSession setDelegate:]
  -[NFReaderSession endSession]
  -[NFReaderSession ndefRead]
  -[NFReaderSession checkNdefSupportsRead:andWrite:]
  -[NFReaderSession connectTag:]
  -[NFReaderSession disconnectTag]
  -[NFReaderSession checkPresence]
  -[NFReaderSession startPolling]
  -[NFReaderSession stopPolling]
  -[NFReaderSession felicaState]
  -[NFReaderSession startPollingWithError:]
  -[NFReaderSession stopPollingWithError:]
  -[NFReaderSession connectTag:error:]
  -[NFReaderSession checkNdefSupportsRead:andWrite:error:]
  -[NFReaderSession ndefReadWithError:]
  -[NFReaderSession disconnectTagWithError:]
  -[NFReaderSession didTerminate:]
  -[NFReaderSession didDetectTags:]
  -[NFReaderSession didDetectExternalReaderWithNotification:]
  -[NFReaderSession didEndUnexpectedly]
  -[NFReaderSession initWithUIType:]
  -[NFReaderSession startPollingForTechnology:error:]
  -[NFReaderSession checkPresenceWithError:]
  -[NFReaderSession formatNdefWithKey:error:]
  -[NFReaderSession ndefWrite:error:]
  -[NFReaderSession transceive:error:]
  -[NFReaderSession felicaStateWithError:]
  -[NFReaderSession felicaStateForSystemCode:withRequestService:withBlockReadList:performSearchServiceCode:error:]
  -[NFReaderSession startPollingForTechnology:]
  -[NFReaderSession formatNdefWithKey:]
  -[NFReaderSession ndefWrite:]
  -[NFReaderSession transceive:]
  -[NFReaderSession felicaStateForSystemCode:withRequestService:withBlockReadList:performSearchServiceCode:]
  -[NFReaderSession runScript:parameters:results:]
  -[NFReaderSession felicaRequestService:error:]
  -[NFReaderSession updateUIAlertMessage:]
  -[NFReaderSession skipMifareClassification]
  -[NFReaderSession actionSheetUI]


NFContactlessUICCSession : NFSession <NFContactlessSessionCallbacks>
 @property  <NFContactlessUICCSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFContactlessUICCSession delegate]
  -[NFContactlessUICCSession setDelegate:]
  -[NFContactlessUICCSession didDetectField:]
  -[NFContactlessUICCSession didDetectFieldNotification:]
  -[NFContactlessUICCSession didEndUnexpectedly]
  -[NFContactlessUICCSession didSelectApplet:]


NFSignatureInfo : NSObject <NSSecureCoding>
 @property  NSString *rsaCert
 @property  NSString *eccCert
 @property  NSString *eckaCert
 @property  NSString *seid
 @property  NSString *platformId
 @property  NSString *jsblCounter
 @property  unsigned long certificateVersion

  // class methods
  +[NFSignatureInfo supportsSecureCoding]

  // instance methods
  -[NFSignatureInfo dealloc]
  -[NFSignatureInfo encodeWithCoder:]
  -[NFSignatureInfo initWithCoder:]
  -[NFSignatureInfo initWithDictionary:]
  -[NFSignatureInfo certificateVersion]
  -[NFSignatureInfo rsaCert]
  -[NFSignatureInfo eccCert]
  -[NFSignatureInfo jsblCounter]
  -[NFSignatureInfo platformId]
  -[NFSignatureInfo seid]
  -[NFSignatureInfo eckaCert]


NFSeshatSessionInterface : NSObject
  // class methods
  +[NFSeshatSessionInterface interface]


NFRemoteAdminManager : NSObject <NSXPCConnectionDelegate, NFRemoteAdminManagerCallbacks>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NFRemoteAdminManager sharedRemoteAdminManager]

  // instance methods
  -[NFRemoteAdminManager init]
  -[NFRemoteAdminManager dealloc]
  -[NFRemoteAdminManager remoteObjectProxyWithErrorHandler:]
  -[NFRemoteAdminManager synchronousRemoteObjectProxyWithErrorHandler:]
  -[NFRemoteAdminManager registerEventListener:]
  -[NFRemoteAdminManager registrationInfo]
  -[NFRemoteAdminManager _connectIfNeeded]
  -[NFRemoteAdminManager unregisterEventListener:]
  -[NFRemoteAdminManager setRegistrationInfo:primaryRegionTopic:]
  -[NFRemoteAdminManager getSELDInfoForBroker:]
  -[NFRemoteAdminManager queueServerConnection:]
  -[NFRemoteAdminManager queueServerConnectionForApplets:]
  -[NFRemoteAdminManager connectToServer:callback:]
  -[NFRemoteAdminManager primaryRegionTopic]
  -[NFRemoteAdminManager remoteAdminCleanupProgress:]
  -[NFRemoteAdminManager readerModeCardSessionToken:]
  -[NFRemoteAdminManager readerModeCardIngestionStatus:]
  -[NFRemoteAdminManager cancelCardIngestion]
  -[NFRemoteAdminManager ingestCard:withCompletionHandler:]
  -[NFRemoteAdminManager didInvalidateXPCConnection:]
  -[NFRemoteAdminManager didInterruptXPCConnection:]
  -[NFRemoteAdminManager nextRequestForServer:]
  -[NFRemoteAdminManager getAPNPublicToken]
  -[NFRemoteAdminManager deleteAllAppletsAndCleanupWithTSM]


NFPeerPaymentResponse : NSObject <NSSecureCoding>
 @property  NSData *transactionData
 @property  NSDictionary *certificates
 @property  NSString *transactionIdentifier

  // class methods
  +[NFPeerPaymentResponse supportsSecureCoding]

  // instance methods
  -[NFPeerPaymentResponse dealloc]
  -[NFPeerPaymentResponse encodeWithCoder:]
  -[NFPeerPaymentResponse initWithCoder:]
  -[NFPeerPaymentResponse initWithDictionary:]
  -[NFPeerPaymentResponse certificates]
  -[NFPeerPaymentResponse transactionIdentifier]
  -[NFPeerPaymentResponse transactionData]


NFContactlessPaymentSession : NFSession <NFContactlessPaymentSessionCallbacks>
 @property  <NFContactlessPaymentSessionDelegate> *delegate
 @property  NFApplet *activeApplet
 @property  NFApplet *defaultApplet
 @property  unsigned long numberOfActiveSecureElements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NFContactlessPaymentSession dealloc]
  -[NFContactlessPaymentSession delegate]
  -[NFContactlessPaymentSession setDelegate:]
  -[NFContactlessPaymentSession endSession]
  -[NFContactlessPaymentSession stopCardEmulation:]
  -[NFContactlessPaymentSession appletWithIdentifier:]
  -[NFContactlessPaymentSession felicaAppletState:error:]
  -[NFContactlessPaymentSession transitAppletState:error:]
  -[NFContactlessPaymentSession activeApplet]
  -[NFContactlessPaymentSession stopCardEmulation]
  -[NFContactlessPaymentSession endSessionWithCompletion:]
  -[NFContactlessPaymentSession allApplets]
  -[NFContactlessPaymentSession didStartSession:]
  -[NFContactlessPaymentSession felicaAppletState:]
  -[NFContactlessPaymentSession didDetectField:]
  -[NFContactlessPaymentSession didDetectFieldNotification:]
  -[NFContactlessPaymentSession didEndUnexpectedly]
  -[NFContactlessPaymentSession didSelectApplet:]
  -[NFContactlessPaymentSession didFelicaStateChange:]
  -[NFContactlessPaymentSession didReceiveButtonPressForApplet:]
  -[NFContactlessPaymentSession didExpireTransactionForApplet:]
  -[NFContactlessPaymentSession didStartTransaction:]
  -[NFContactlessPaymentSession didEndTransaction:]
  -[NFContactlessPaymentSession didFailDeferredAuthorization]
  -[NFContactlessPaymentSession didReceivePendingServerRequest]
  -[NFContactlessPaymentSession didExpressModeStateChange:withObject:]
  -[NFContactlessPaymentSession didReceiveActivityTimeout:]
  -[NFContactlessPaymentSession setActivePaymentApplet:authorization:]
  -[NFContactlessPaymentSession setActivePaymentApplet:authorization:error:]
  -[NFContactlessPaymentSession startCardEmulationWithAuthorization:error:]
  -[NFContactlessPaymentSession startDeferredCardEmulationWithAuthorization:error:]
  -[NFContactlessPaymentSession numberOfActiveSecureElements]
  -[NFContactlessPaymentSession setActivePaymentApplet:makeDefault:authorization:]
  -[NFContactlessPaymentSession startCardEmulationWithAuthorization:]
  -[NFContactlessPaymentSession startDeferredCardEmulationWithAuthorization:]
  -[NFContactlessPaymentSession defaultApplet]


NFLoyaltyAndPaymentSession : NFSession
 @property  <NFLoyaltyAndPaymentSessionDelegate> *delegate
 @property  NFApplet *activeApplet
 @property  NSSet *activeKeys
 @property  NFApplet *defaultApplet
 @property  unsigned long numberOfActiveSecureElements

  // instance methods
  -[NFLoyaltyAndPaymentSession dealloc]
  -[NFLoyaltyAndPaymentSession delegate]
  -[NFLoyaltyAndPaymentSession setDelegate:]
  -[NFLoyaltyAndPaymentSession activeKeys]
  -[NFLoyaltyAndPaymentSession endSession]
  -[NFLoyaltyAndPaymentSession setActivePaymentApplet:keys:error:]
  -[NFLoyaltyAndPaymentSession setHostCards:]
  -[NFLoyaltyAndPaymentSession setActivePaymentApplet:error:]
  -[NFLoyaltyAndPaymentSession startDeferredCardEmulation:authorization:error:]
  -[NFLoyaltyAndPaymentSession startCardEmulation:authorization:error:]
  -[NFLoyaltyAndPaymentSession stopCardEmulation:]
  -[NFLoyaltyAndPaymentSession enablePlasticCardMode:error:]
  -[NFLoyaltyAndPaymentSession appletWithIdentifier:]
  -[NFLoyaltyAndPaymentSession felicaAppletState:error:]
  -[NFLoyaltyAndPaymentSession transitAppletState:error:]
  -[NFLoyaltyAndPaymentSession activeApplet]
  -[NFLoyaltyAndPaymentSession stopCardEmulation]
  -[NFLoyaltyAndPaymentSession endSessionWithCompletion:]
  -[NFLoyaltyAndPaymentSession allApplets]
  -[NFLoyaltyAndPaymentSession didStartSession:]
  -[NFLoyaltyAndPaymentSession felicaAppletState:]
  -[NFLoyaltyAndPaymentSession didDetectField:]
  -[NFLoyaltyAndPaymentSession didDetectFieldNotification:]
  -[NFLoyaltyAndPaymentSession didEndUnexpectedly]
  -[NFLoyaltyAndPaymentSession didSelectApplet:]
  -[NFLoyaltyAndPaymentSession didFelicaStateChange:]
  -[NFLoyaltyAndPaymentSession startExpressMode:]
  -[NFLoyaltyAndPaymentSession didReceiveButtonPressForApplet:]
  -[NFLoyaltyAndPaymentSession didExpireTransactionForApplet:]
  -[NFLoyaltyAndPaymentSession didStartTransaction:]
  -[NFLoyaltyAndPaymentSession didEndTransaction:]
  -[NFLoyaltyAndPaymentSession didFailDeferredAuthorization]
  -[NFLoyaltyAndPaymentSession didSelectValueAddedService:]
  -[NFLoyaltyAndPaymentSession didPerformValueAddedServiceTransactions:]
  -[NFLoyaltyAndPaymentSession didReceivePendingServerRequest]
  -[NFLoyaltyAndPaymentSession didExpressModeStateChange:withObject:]
  -[NFLoyaltyAndPaymentSession didReceiveActivityTimeout:]
  -[NFLoyaltyAndPaymentSession numberOfActiveSecureElements]
  -[NFLoyaltyAndPaymentSession defaultApplet]
  -[NFLoyaltyAndPaymentSession setActivePaymentApplet:]
  -[NFLoyaltyAndPaymentSession _startHostCardEmulation:]
  -[NFLoyaltyAndPaymentSession _startCardEmulationWithAuthorization:error:]
  -[NFLoyaltyAndPaymentSession _startDeferredCardEmulationWithAuthorization:error:]
  -[NFLoyaltyAndPaymentSession setActivePaymentApplet:makeDefault:]
  -[NFLoyaltyAndPaymentSession startCardEmulation:authorization:]
  -[NFLoyaltyAndPaymentSession startDeferredCardEmulation:authorization:]
  -[NFLoyaltyAndPaymentSession enablePlasticCardMode:]


NFSecureElement : NSObject
 @property  NSString *serialNumber
 @property  NSString *rsaCertificate
 @property  NSString *eccCertificate
 @property  NSString *eckaCertificate
 @property  BOOL isProductionSigned
 @property  BOOL isInRestrictedMode
 @property  unsigned long OSVersion
 @property  unsigned long fullOSVersion
 @property  NSNumber *sequenceCounter
 @property  unsigned int supportedTechnologies

  // class methods
  +[NFSecureElement embeddedSecureElement]
  +[NFSecureElement icefallSecureElement]
  +[NFSecureElement supportedTechnologies]

  // instance methods
  -[NFSecureElement dealloc]
  -[NFSecureElement identifier]
  -[NFSecureElement info]
  -[NFSecureElement hwType]
  -[NFSecureElement sequenceCounter]
  -[NFSecureElement isSeshatAvailabledInRestrictedMode]
  -[NFSecureElement serialNumber]
  -[NFSecureElement OSVersion]
  -[NFSecureElement _initWithInfo:]
  -[NFSecureElement _markDirty]
  -[NFSecureElement isProductionSigned]
  -[NFSecureElement supportedTechnologies]
  -[NFSecureElement isInRestrictedMode]
  -[NFSecureElement _setIsInRestrictedMode:]
  -[NFSecureElement _updateSecureElementInfo:]
  -[NFSecureElement _setIsInRestrictedPerformanceMode:]
  -[NFSecureElement fullOSVersion]
  -[NFSecureElement rsaCertificate]
  -[NFSecureElement eckaCertificate]
  -[NFSecureElement _updateIfDirty]
  -[NFSecureElement eccCertificate]
  -[NFSecureElement manifestQueryBlob]


NFPeerPaymentEnrollmentResponse : NSObject <NSSecureCoding>
 @property  NSData *prePeerPaymentCertificate
 @property  NSDictionary *certificate

  // class methods
  +[NFPeerPaymentEnrollmentResponse supportsSecureCoding]

  // instance methods
  -[NFPeerPaymentEnrollmentResponse dealloc]
  -[NFPeerPaymentEnrollmentResponse encodeWithCoder:]
  -[NFPeerPaymentEnrollmentResponse initWithCoder:]
  -[NFPeerPaymentEnrollmentResponse initWithDictionary:]
  -[NFPeerPaymentEnrollmentResponse certificate]
  -[NFPeerPaymentEnrollmentResponse prePeerPaymentCertificate]


01 00 0100 /usr/lib/libnfshared.dylib: NFNdefMessageInternal 
01 00 0100 /usr/lib/libnfshared.dylib: NFNdefRecordInternal 
01 00 0100 /usr/lib/libnfshared.dylib: NFRunScriptParameters 
01 00 0100 /usr/lib/libnfshared.dylib: NFTLV 
01 00 0100 /usr/lib/libnfshared.dylib: NFTagInternal 
01 00 0100 /usr/lib/libnfshared.dylib: NFWeakReference 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
