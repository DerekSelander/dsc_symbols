|| __DATA.__data _NMSRecommendationHeavyRotationIdentifier
|| __DATA.__data _NMSRecommendationRecentMusicIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAlternatingMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAppActivityStatus
|| __DATA.__objc_data _OBJC_CLASS_$_NMSGreenTeaStreamingDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestValidator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaContainerQuotaData
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaDownloadInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaItemDownloadInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaItemGroup
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaQuotaManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaSyncInfoUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaSyncService
|| __DATA.__objc_data _OBJC_CLASS_$_NMSModelRecommendationsLibraryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMusicRecommendation
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPartialMediaItemDownloadInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPodcastIdentifierSet
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPodcastsFetchRequests
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSequentialMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSStoreModelLookupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSubscriptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncProgressInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncStatesDict
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAlternatingMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAppActivityStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSGreenTeaStreamingDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaContainerQuotaData
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaDownloadInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaItemDownloadInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaItemGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaQuotaManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaSyncInfoUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaSyncService
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSModelRecommendationsLibraryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMusicRecommendation
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPartialMediaItemDownloadInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPodcastIdentifierSet
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPodcastsFetchRequests
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSequentialMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSStoreModelLookupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSubscriptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncProgressInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncStatesDict
|| __DATA_CONST.__const _NMSAccountInfoActiveAccountDidChangeNotification
|| __DATA_CONST.__const _NMSActiveAccountDidChangeNotification
|| __DATA_CONST.__const _NMSFeedURLKey
|| __DATA_CONST.__const _NMSMediaPinningAudiobooksContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerAudiobooksIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerDownloadInfoDidInvalidateNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerMusicIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerPodcastsIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningMusicContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaPinningPodcastsContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaSyncInfoDidUpdateNotification
|| __DATA_CONST.__const _NMSMusicRecommendationArtworkDidUpdateNotification
|| __DATA_CONST.__const _NMSMusicRecommendationsDidUpdateNotification
|| __DATA_CONST.__const _NMSNotificationUserInfoKeyIsInProcessNotification
|| __DATA_CONST.__const _NMSPodcastSizeCacheDidUpdateNotification
|| __DATA_CONST.__const _NMSStoreIDKey
|| __DATA_CONST.__const _NMSSubscriptionStatusDidChangeNotification
|| __DATA_CONST.__const _NMSSyncManagerSyncStateDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsAudiobooksPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsAudiobooksRecommendationsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsMusicPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsSizeInfoDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsSubscriptionMetadataDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationLibraryContentsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationStoreContentsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncInfoDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncInfoRequestDateDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncSettingsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncStateDidChangeNotification
|| __DATA_CONST.__const _NMSyncPreferencesDidChangeLocallyNotification
|| __DATA_CONST.__const _NMSyncPreferencesDidChangeRemotelyNotification
|| __DATA_CONST.__const _kNMSMediaSyncInfoSavedEpisodesIdentifier
|| __DATA_CONST.__const _kNMSMediaSyncInfoUpNextIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSEpisodeSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaPinningManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaSettingsSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMusicRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMutableMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMutablePodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPathUtil
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeEstimation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSRecommendationArtworkDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSyncDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSEpisodeSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaPinningManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaSettingsSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMusicRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMutableMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMutablePodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPathUtil
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeEstimation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSRecommendationArtworkDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSyncDefaults
|| __TEXT.__text _NMSPinningStatusIsPinned
|| __TEXT.__text _NMSPinningStatusIsRecentMusicPinned
__ ATFoundation: _OBJC_CLASS_$_ATAssetLinkController
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AirTraffic: _ATSessionTypeDeviceSync
__ AirTraffic: _ATSessionsDidChangeNotification
__ AirTraffic: _OBJC_CLASS_$_ATConnection
__ AirTraffic: _OBJC_CLASS_$_ATSession
__ AirTrafficDevice: _ATDeviceSyncSessionAssetTaskGroupingKey
__ AppSupport: _CPSharedResourcesDirectory
__ AppleMediaServices: _AMSError
__ CoreData: _NSPersistentHistoryTokenKey
__ CoreData: _NSPersistentStoreRemoteChangeNotification
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFPreferencesAppSynchronizeWithContainer
__ CoreFoundation: __CFPreferencesSetAppValueWithContainer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreTelephony: __CTServerConnectionAddIdentifierException
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionGetCellularUsagePolicyMirroring
__ CoreTelephony: _kCTCellularUsageDeviceID
__ CoreTelephony: _kCTCellularUsageRemoteDevice
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSSendMessageOptionExpectsPeerResponseKey
__ IDS: _IDSSendMessageOptionForceLocalDeliveryKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ MediaPlayer: _MPMediaItemPropertyBitRate
__ MediaPlayer: _MPMediaItemPropertyBookmarkTime
__ MediaPlayer: _MPMediaItemPropertyFileSize
__ MediaPlayer: _MPMediaItemPropertyHasNonPurgeableAsset
__ MediaPlayer: _MPMediaItemPropertyPlaybackDuration
__ MediaPlayer: _MPMediaItemPropertyPurchaseHistoryID
__ MediaPlayer: _MPMediaItemPropertyStoreID
__ MediaPlayer: _MPMediaLibraryDidChangeNotification
__ MediaPlayer: _MPMediaLibraryEntitiesAddedOrRemovedNotification
__ MediaPlayer: _MPMediaPlaylistPropertyName
__ MediaPlayer: _MPMediaPlaylistPropertyPersistentID
__ MediaPlayer: _MPModelPropertyAlbumArtwork
__ MediaPlayer: _MPModelPropertyAlbumKeepLocalEnableState
__ MediaPlayer: _MPModelPropertyAlbumTitle
__ MediaPlayer: _MPModelPropertyArtistName
__ MediaPlayer: _MPModelPropertyFileAssetFileSize
__ MediaPlayer: _MPModelPropertyFileAssetNonPurgeable
__ MediaPlayer: _MPModelPropertyPlaylistArtwork
__ MediaPlayer: _MPModelPropertyPlaylistKeepLocalEnableState
__ MediaPlayer: _MPModelPropertyPlaylistName
__ MediaPlayer: _MPModelPropertyPlaylistTracksTiledArtwork
__ MediaPlayer: _MPModelPropertyPodcastFeedURL
__ MediaPlayer: _MPModelPropertySongDiscNumber
__ MediaPlayer: _MPModelPropertySongExplicit
__ MediaPlayer: _MPModelPropertySongTitle
__ MediaPlayer: _MPModelPropertySongTrackNumber
__ MediaPlayer: _MPModelPropertyStoreAssetRedownloadable
__ MediaPlayer: _MPModelRelationshipAlbumArtist
__ MediaPlayer: _MPModelRelationshipPlaylistEntrySong
__ MediaPlayer: _MPModelRelationshipPodcastEpisodeLocalFileAsset
__ MediaPlayer: _MPModelRelationshipSongLocalFileAsset
__ MediaPlayer: _MPModelRelationshipSongStoreAsset
__ MediaPlayer: _MPStoreItemMetadataStringNormalizeStoreIDValue
__ MediaPlayer: _OBJC_CLASS_$_MPArtworkCatalog
__ MediaPlayer: _OBJC_CLASS_$_MPArtworkRepresentation
__ MediaPlayer: _OBJC_CLASS_$_MPAsyncOperation
__ MediaPlayer: _OBJC_CLASS_$_MPIdentifierSet
__ MediaPlayer: _OBJC_CLASS_$_MPMediaContainmentPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaLibrary
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ MediaPlayer: _OBJC_CLASS_$_MPModelAlbum
__ MediaPlayer: _OBJC_CLASS_$_MPModelAlbumKind
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationGroup
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryImportChangeRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryKeepLocalChangeRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelObject
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylist
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylistEntry
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylistKind
__ MediaPlayer: _OBJC_CLASS_$_MPModelPodcast
__ MediaPlayer: _OBJC_CLASS_$_MPModelPodcastEpisode
__ MediaPlayer: _OBJC_CLASS_$_MPModelRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelSong
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseSection
__ MediaPlayer: _OBJC_CLASS_$_MPMutableSectionedCollection
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPStoreItemMetadata
__ MediaPlayer: _OBJC_CLASS_$_MPStoreItemMetadataResponse
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequest
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequestConfiguration
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelSongBuilder
__ MediaPlayer: _OBJC_CLASS_$_MPTiledArtworkDataSource
__ MediaPlayer: _OBJC_CLASS_$_MPTiledArtworkRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPAsyncOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPModelForYouRecommendationsRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelForYouRecommendationsRequestOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPModelLibraryRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelLibraryResponse
__ MediaPlayer: _OBJC_METACLASS_$_MPModelStoreBrowseRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelStoreBrowseRequestOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPStoreModelRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPStoreModelRequestOperation
__ MusicLibrary: _ML3AlbumPropertyDatePlayedLocal
__ MusicLibrary: _ML3AlbumPropertyName
__ MusicLibrary: _ML3AlbumPropertySyncID
__ MusicLibrary: _ML3CollectionPropertyAlbumPersistentID
__ MusicLibrary: _ML3ContainerPropertyContainerPersistentId
__ MusicLibrary: _ML3ContainerPropertyDateCreated
__ MusicLibrary: _ML3ContainerPropertyDatePlayedLocal
__ MusicLibrary: _ML3ContainerPropertyHasItems
__ MusicLibrary: _ML3ContainerPropertyIsGeniusMix
__ MusicLibrary: _ML3ContainerPropertyIsHidden
__ MusicLibrary: _ML3ContainerPropertyName
__ MusicLibrary: _ML3ContainerPropertySmartCriteria
__ MusicLibrary: _ML3ContainerPropertySmartIsFolder
__ MusicLibrary: _ML3ContainerPropertySmartIsGenius
__ MusicLibrary: _ML3ContainerPropertySyncId
__ MusicLibrary: _ML3EntityPropertyPersistentID
__ MusicLibrary: _ML3MusicLibraryContentsDidChangeNotification
__ MusicLibrary: _ML3QueryAggregateFunctionTotal
__ MusicLibrary: _ML3TrackPropertyAlbumPersistentID
__ MusicLibrary: _ML3TrackPropertyContainerPersistentID
__ MusicLibrary: _ML3TrackPropertyDateAdded
__ MusicLibrary: _ML3TrackPropertyFeedURL
__ MusicLibrary: _ML3TrackPropertyIsPodcast
__ MusicLibrary: _ML3TrackPropertyIsVideo
__ MusicLibrary: _ML3TrackPropertyMediaType
__ MusicLibrary: _ML3TrackPropertyPlayCountUser
__ MusicLibrary: _ML3TrackPropertyTotalSize
__ MusicLibrary: _ML3TrackPropertyTotalTime
__ MusicLibrary: _MLFrameworkBundle
__ MusicLibrary: _OBJC_CLASS_$_MIPMultiverseIdentifier
__ MusicLibrary: _OBJC_CLASS_$_ML3Album
__ MusicLibrary: _OBJC_CLASS_$_ML3AllCompoundPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3ComparisonPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3Container
__ MusicLibrary: _OBJC_CLASS_$_ML3ContainmentPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3ContainsPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3MusicLibrary
__ MusicLibrary: _OBJC_CLASS_$_ML3PersistentIDsPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3Track
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIHeavyRotationRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIStarterPackMultiplexRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIURLRequest
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyGreenTeaDevice
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRDevicePropertyTotalStorage
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairDarwinNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PodcastsFoundation: _MTLogCategoryDatabase
__ PodcastsFoundation: _OBJC_CLASS_$_MTDB
__ PodcastsFoundation: _OBJC_CLASS_$_MTDBExtensionAccess
__ PodcastsFoundation: _OBJC_CLASS_$_MTEpisode
__ PodcastsFoundation: _kChannelSubscriptionActive
__ PodcastsFoundation: _kEpisodeAssetURL
__ PodcastsFoundation: _kEpisodeBackCatalog
__ PodcastsFoundation: _kEpisodeByteSize
__ PodcastsFoundation: _kEpisodeDuration
__ PodcastsFoundation: _kEpisodeEntitlementState
__ PodcastsFoundation: _kEpisodeEpisodeNumber
__ PodcastsFoundation: _kEpisodeExplicit
__ PodcastsFoundation: _kEpisodeFlags
__ PodcastsFoundation: _kEpisodeIsHidden
__ PodcastsFoundation: _kEpisodeLevel
__ PodcastsFoundation: _kEpisodeListenNowEpisode
__ PodcastsFoundation: _kEpisodePlayState
__ PodcastsFoundation: _kEpisodePlaylists
__ PodcastsFoundation: _kEpisodePodcast
__ PodcastsFoundation: _kEpisodePodcastUuid
__ PodcastsFoundation: _kEpisodePubDate
__ PodcastsFoundation: _kEpisodeSeasonNumber
__ PodcastsFoundation: _kEpisodeTitle
__ PodcastsFoundation: _kEpisodeUserEpisode
__ PodcastsFoundation: _kEpisodeUuid
__ PodcastsFoundation: _kMTChannelEntityName
__ PodcastsFoundation: _kMTEpisodeEntityName
__ PodcastsFoundation: _kMTPlaylistEntityName
__ PodcastsFoundation: _kMTPodcastEntityName
__ PodcastsFoundation: _kPlaylistContainerOrder
__ PodcastsFoundation: _kPlaylistDefaultSettings
__ PodcastsFoundation: _kPlaylistDeletedEpisodes
__ PodcastsFoundation: _kPlaylistEpisodes
__ PodcastsFoundation: _kPlaylistHidden
__ PodcastsFoundation: _kPlaylistSettings
__ PodcastsFoundation: _kPlaylistSortOrder
__ PodcastsFoundation: _kPlaylistUnplayedCount
__ PodcastsFoundation: _kPlaylistUuid
__ PodcastsFoundation: _kPodcastAutoDownloadEnabled
__ PodcastsFoundation: _kPodcastDeletePlayedEpisodes
__ PodcastsFoundation: _kPodcastEpisodeLimit
__ PodcastsFoundation: _kPodcastEpisodes
__ PodcastsFoundation: _kPodcastFeedUrl
__ PodcastsFoundation: _kPodcastFlags
__ PodcastsFoundation: _kPodcastHidden
__ PodcastsFoundation: _kPodcastNextEpisodeUuid
__ PodcastsFoundation: _kPodcastPlaybackNewestToOldest
__ PodcastsFoundation: _kPodcastShowTypeInFeed
__ PodcastsFoundation: _kPodcastShowTypeSetting
__ PodcastsFoundation: _kPodcastSortAscending
__ PodcastsFoundation: _kPodcastSortOrder
__ PodcastsFoundation: _kPodcastUuid
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ SoftLinking: __sl_dlopen
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIRectFill
__ iTunesCloud: _ICAgeVerificationStateDidChangeNotification
__ iTunesCloud: _ICErrorDomain
__ iTunesCloud: _ICMusicSubscriptionStatusDidChangeNotification
__ iTunesCloud: _OBJC_CLASS_$_ICAgeVerificationManager
__ iTunesCloud: _OBJC_CLASS_$_ICEnvironmentMonitor
__ iTunesCloud: _OBJC_CLASS_$_ICMusicSubscriptionStatusController
__ iTunesCloud: _OBJC_CLASS_$_ICStoreRequestContext
__ iTunesCloud: _OBJC_CLASS_$_ICURLBagProvider
__ iTunesCloud: _OBJC_CLASS_$_ICUserIdentity
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NMSPodcastSizeInfo : NSObject <NSSecureCoding>
 @property  unsigned long totalSize
 @property  double totalDuration
 @property  unsigned long count

  // class methods
  +[NMSPodcastSizeInfo supportsSecureCoding]

  // instance methods
  -[NMSPodcastSizeInfo totalSize]
  -[NMSPodcastSizeInfo initWithCoder:]
  -[NMSPodcastSizeInfo setTotalDuration:]
  -[NMSPodcastSizeInfo count]
  -[NMSPodcastSizeInfo init]
  -[NMSPodcastSizeInfo isEqual:]
  -[NMSPodcastSizeInfo setTotalSize:]
  -[NMSPodcastSizeInfo totalDuration]
  -[NMSPodcastSizeInfo setCount:]
  -[NMSPodcastSizeInfo encodeWithCoder:]
  -[NMSPodcastSizeInfo sizeDurationRatio]
  -[NMSPodcastSizeInfo averageSize]


NMSPodcastSizeEstimation : NSObject
 @property  NSMutableDictionary *sizeInfoDict
 @property  BOOL empty

  // class methods
  +[NMSPodcastSizeEstimation _minimumSizeThreshold]
  +[NMSPodcastSizeEstimation _defaultEstimatedSize]
  +[NMSPodcastSizeEstimation _defaultSizeDurationRatio]

  // instance methods
  -[NMSPodcastSizeEstimation isEmpty]
  -[NMSPodcastSizeEstimation .cxx_destruct]
  -[NMSPodcastSizeEstimation synchronize]
  -[NMSPodcastSizeEstimation init]
  -[NMSPodcastSizeEstimation _setupFromCache]
  -[NMSPodcastSizeEstimation sizeInfoDict]
  -[NMSPodcastSizeEstimation _adjustedSizeDurationRatio:]
  -[NMSPodcastSizeEstimation sizeForFeedURL:duration:feedProvidedSize:]
  -[NMSPodcastSizeEstimation _cachedPodcastSizeInfoDict]
  -[NMSPodcastSizeEstimation _totalSizeDurationRatio]
  -[NMSPodcastSizeEstimation _totalAverageSize]
  -[NMSPodcastSizeEstimation incrementSize:duration:forFeedURL:]
  -[NMSPodcastSizeEstimation averageEpisodeSize]
  -[NMSPodcastSizeEstimation setSizeInfoDict:]


NMSPathUtil : NSObject
  // class methods
  +[NMSPathUtil mediaSyncInfoDirectory]
  +[NMSPathUtil recentMusicDirectory]
  +[NMSPathUtil podcastsDirectory]
  +[NMSPathUtil _nanoMusicSyncDirectory]


NMLogAction : NSObject
 @property  NSString *logMessage

  // instance methods
  -[NMLogAction logMessage]


NMGenericMessageLogAction : NMLogAction
  // class methods
  +[NMGenericMessageLogAction logActionWithMessage:]

  // instance methods
  -[NMGenericMessageLogAction .cxx_destruct]
  -[NMGenericMessageLogAction initWithMessage:]
  -[NMGenericMessageLogAction logMessage]


NMLogActionsCoalescer : NSObject
 @property  NSString *prefix
 @property  unsigned long messageBufferLimit

  // instance methods
  -[NMLogActionsCoalescer prefix]
  -[NMLogActionsCoalescer setPrefix:]
  -[NMLogActionsCoalescer .cxx_destruct]
  -[NMLogActionsCoalescer flush]
  -[NMLogActionsCoalescer _writeLogMessageFromActions:includingPartNumber:]
  -[NMLogActionsCoalescer _addAction:toPendingActions:limit:]
  -[NMLogActionsCoalescer _logMessageFromPendingLogActions:includingPartNumber:]
  -[NMLogActionsCoalescer initWithIdentifier:logCategory:]
  -[NMLogActionsCoalescer setMessageBufferLimit:]
  -[NMLogActionsCoalescer addLogAction:]
  -[NMLogActionsCoalescer messageBufferLimit]


NMSMediaSyncServiceDownloadMedia : PBCodable <NSCopying>
 @property  BOOL hasDataMultiverseID
 @property  NSData *dataMultiverseID
 @property  BOOL hasContainerType
 @property  int containerType
 @property  BOOL hasIntent
 @property  int intent

  // instance methods
  -[NMSMediaSyncServiceDownloadMedia mergeFrom:]
  -[NMSMediaSyncServiceDownloadMedia .cxx_destruct]
  -[NMSMediaSyncServiceDownloadMedia hasContainerType]
  -[NMSMediaSyncServiceDownloadMedia setContainerType:]
  -[NMSMediaSyncServiceDownloadMedia dictionaryRepresentation]
  -[NMSMediaSyncServiceDownloadMedia writeTo:]
  -[NMSMediaSyncServiceDownloadMedia isEqual:]
  -[NMSMediaSyncServiceDownloadMedia copyTo:]
  -[NMSMediaSyncServiceDownloadMedia readFrom:]
  -[NMSMediaSyncServiceDownloadMedia setHasContainerType:]
  -[NMSMediaSyncServiceDownloadMedia containerTypeAsString:]
  -[NMSMediaSyncServiceDownloadMedia StringAsContainerType:]
  -[NMSMediaSyncServiceDownloadMedia containerType]
  -[NMSMediaSyncServiceDownloadMedia hasIntent]
  -[NMSMediaSyncServiceDownloadMedia intent]
  -[NMSMediaSyncServiceDownloadMedia setIntent:]
  -[NMSMediaSyncServiceDownloadMedia setHasIntent:]
  -[NMSMediaSyncServiceDownloadMedia intentAsString:]
  -[NMSMediaSyncServiceDownloadMedia StringAsIntent:]
  -[NMSMediaSyncServiceDownloadMedia copyWithZone:]
  -[NMSMediaSyncServiceDownloadMedia setDataMultiverseID:]
  -[NMSMediaSyncServiceDownloadMedia hasDataMultiverseID]
  -[NMSMediaSyncServiceDownloadMedia dataMultiverseID]


NMSEpisodeSizeInfo : NSObject <NSSecureCoding>
 @property  unsigned long size
 @property  double duration
 @property  BOOL downloaded

  // class methods
  +[NMSEpisodeSizeInfo supportsSecureCoding]

  // instance methods
  -[NMSEpisodeSizeInfo initWithCoder:]
  -[NMSEpisodeSizeInfo isDownloaded]
  -[NMSEpisodeSizeInfo isEqual:]
  -[NMSEpisodeSizeInfo size]
  -[NMSEpisodeSizeInfo duration]
  -[NMSEpisodeSizeInfo encodeWithCoder:]
  -[NMSEpisodeSizeInfo initWithSize:duration:downloaded:]


NMSPodcastSizeCache : NSObject
 @property  NSDictionary *relationshipDict
 @property  NSDictionary *episodeSizeInfoDict

  // class methods
  +[NMSPodcastSizeCache _podcastSizeCacheFilePath]

  // instance methods
  -[NMSPodcastSizeCache .cxx_destruct]
  -[NMSPodcastSizeCache init]
  -[NMSPodcastSizeCache dealloc]
  -[NMSPodcastSizeCache _setupFromCache]
  -[NMSPodcastSizeCache _initWithCache:]
  -[NMSPodcastSizeCache _registerForCacheChanged]
  -[NMSPodcastSizeCache _cachedPodcastEpisodeSizeDictionary]
  -[NMSPodcastSizeCache itemsForFeedURL:]
  -[NMSPodcastSizeCache episodeSizeInfoDict]
  -[NMSPodcastSizeCache relationshipDict]


NMSMutablePodcastSizeCache : NMSPodcastSizeCache
 @property  NSMutableDictionary *mutableRelationshipDict
 @property  NSMutableDictionary *mutableEpisodeSizeInfoDict

  // instance methods
  -[NMSMutablePodcastSizeCache .cxx_destruct]
  -[NMSMutablePodcastSizeCache synchronize]
  -[NMSMutablePodcastSizeCache init]
  -[NMSMutablePodcastSizeCache itemsForFeedURL:]
  -[NMSMutablePodcastSizeCache episodeSizeInfoDict]
  -[NMSMutablePodcastSizeCache relationshipDict]
  -[NMSMutablePodcastSizeCache mutableRelationshipDict]
  -[NMSMutablePodcastSizeCache mutableEpisodeSizeInfoDict]
  -[NMSMutablePodcastSizeCache _currentPodcastSizeDictionary]
  -[NMSMutablePodcastSizeCache setEpisodes:forFeedURL:]
  -[NMSMutablePodcastSizeCache setEpisodeSizeInfo:forEpisode:]
  -[NMSMutablePodcastSizeCache setMutableRelationshipDict:]
  -[NMSMutablePodcastSizeCache setMutableEpisodeSizeInfoDict:]


NMSQuotaEvaluationState : NSObject
 @property  NSNumber *mediaLibraryIdentifier
 @property  NSString *externalLibraryIdentifier
 @property  unsigned long itemSize
 @property  unsigned long listTotalSize
 @property  unsigned long listQuota
 @property  long long containerIndex
 @property  long long itemIndex

  // instance methods
  -[NMSQuotaEvaluationState setMediaLibraryIdentifier:]
  -[NMSQuotaEvaluationState .cxx_destruct]
  -[NMSQuotaEvaluationState setItemIndex:]
  -[NMSQuotaEvaluationState itemIndex]
  -[NMSQuotaEvaluationState mediaLibraryIdentifier]
  -[NMSQuotaEvaluationState setItemSize:]
  -[NMSQuotaEvaluationState itemSize]
  -[NMSQuotaEvaluationState containerIndex]
  -[NMSQuotaEvaluationState setContainerIndex:]
  -[NMSQuotaEvaluationState externalLibraryIdentifier]
  -[NMSQuotaEvaluationState setExternalLibraryIdentifier:]
  -[NMSQuotaEvaluationState listTotalSize]
  -[NMSQuotaEvaluationState setListTotalSize:]
  -[NMSQuotaEvaluationState listQuota]
  -[NMSQuotaEvaluationState setListQuota:]


NMSQuotaEvaluationLogAction : NMLogAction
  // class methods
  +[NMSQuotaEvaluationLogAction logActionWithActionType:state:]

  // instance methods
  -[NMSQuotaEvaluationLogAction _stringForType:]
  -[NMSQuotaEvaluationLogAction .cxx_destruct]
  -[NMSQuotaEvaluationLogAction logMessage]
  -[NMSQuotaEvaluationLogAction initWithActionType:state:]
  -[NMSQuotaEvaluationLogAction _identifierLogMessage]


NMSMediaQuotaManager : NSObject
  // instance methods
  -[NMSMediaQuotaManager .cxx_destruct]
  -[NMSMediaQuotaManager _evaluateAddedItemsIfNecessary]
  -[NMSMediaQuotaManager _containerListForBundleIdentifier:]
  -[NMSMediaQuotaManager downloadInfoWithinQuota]
  -[NMSMediaQuotaManager initWithGroupIterators:quota:]
  -[NMSMediaQuotaManager groupIteratorForBundleIdentifier:]
  -[NMSMediaQuotaManager downloadInfoWithinQuotaForBundleIdentifier:]
  -[NMSMediaQuotaManager sizeOfItemsWithinQuota]
  -[NMSMediaQuotaManager sizeOfItemsWithinQuotaForBundleIdentifier:]
  -[NMSMediaQuotaManager sizeOfNominatedItemsForBundleIdentifier:]
  -[NMSMediaQuotaManager isItemGroupWithinQuota:]


NMSRecommendationArtworkDataSource : NSObject <MPArtworkDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSRecommendationArtworkDataSource sharedDataSource]
  +[NMSRecommendationArtworkDataSource artworkCacheDirectory]

  // instance methods
  -[NMSRecommendationArtworkDataSource _cacheRepresentation:forCatalog:]
  -[NMSRecommendationArtworkDataSource _cachedRepresentationForCatalog:]
  -[NMSRecommendationArtworkDataSource .cxx_destruct]
  -[NMSRecommendationArtworkDataSource init]
  -[NMSRecommendationArtworkDataSource cancelLoadingRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource isRepresentation:bestRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource visualIdenticalityIdentifierForCatalog:]
  -[NMSRecommendationArtworkDataSource _existingRepresentationForArtworkCatalog:fromCacheOnly:]
  -[NMSRecommendationArtworkDataSource areRepresentationsAvailableForCatalog:]
  -[NMSRecommendationArtworkDataSource existingRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource loadRepresentationForArtworkCatalog:completionHandler:]
  -[NMSRecommendationArtworkDataSource _cachedArtworkImageWithToken:]
  -[NMSRecommendationArtworkDataSource artworkCacheExistsForToken:]


NMSAccountInfo : NSObject
 @property  ACAccount *activeAccount

  // class methods
  +[NMSAccountInfo activeStoreAccountInfo]

  // instance methods
  -[NMSAccountInfo _handleAccountStoreDidChangeNotification:]
  -[NMSAccountInfo .cxx_destruct]
  -[NMSAccountInfo activeAccount]
  -[NMSAccountInfo init]
  -[NMSAccountInfo dealloc]
  -[NMSAccountInfo _updateActiveAccount]
  -[NMSAccountInfo preloadActiveAccount]


NMSMediaSyncServiceRemoveMediaResult : PBCodable <NSCopying>
 @property  BOOL hasResult
 @property  int result

  // instance methods
  -[NMSMediaSyncServiceRemoveMediaResult mergeFrom:]
  -[NMSMediaSyncServiceRemoveMediaResult dictionaryRepresentation]
  -[NMSMediaSyncServiceRemoveMediaResult writeTo:]
  -[NMSMediaSyncServiceRemoveMediaResult resultAsString:]
  -[NMSMediaSyncServiceRemoveMediaResult isEqual:]
  -[NMSMediaSyncServiceRemoveMediaResult copyTo:]
  -[NMSMediaSyncServiceRemoveMediaResult result]
  -[NMSMediaSyncServiceRemoveMediaResult hasResult]
  -[NMSMediaSyncServiceRemoveMediaResult readFrom:]
  -[NMSMediaSyncServiceRemoveMediaResult StringAsResult:]
  -[NMSMediaSyncServiceRemoveMediaResult setResult:]
  -[NMSMediaSyncServiceRemoveMediaResult setHasResult:]
  -[NMSMediaSyncServiceRemoveMediaResult copyWithZone:]


NMSMusicRecommendationsRequest : NSObject
 @property  NSDictionary *unarchivedCombinedResponsesDictionary
 @property  BOOL useCachedDataOnly
 @property  NSData *cachedData

  // class methods
  +[NMSMusicRecommendationsRequest _recentMusicDirectory]

  // instance methods
  -[NMSMusicRecommendationsRequest _performHeavyRotationRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _writeData:toURL:]
  -[NMSMusicRecommendationsRequest _starterPackRoomCacheURL]
  -[NMSMusicRecommendationsRequest .cxx_destruct]
  -[NMSMusicRecommendationsRequest setCachedData:]
  -[NMSMusicRecommendationsRequest _performStarterPackRoomRequestWithURL:completion:]
  -[NMSMusicRecommendationsRequest _continueToLookupWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _performEditorialBrowseRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _performLibraryImportChangeRequestWithModelObjects:completion:]
  -[NMSMusicRecommendationsRequest _continueToLibraryImportWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _continueToForYouRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _performLibraryRecentMusicRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest performWithResponseHandler:]
  -[NMSMusicRecommendationsRequest cachedData]
  -[NMSMusicRecommendationsRequest _continueToStarterPackRoomRequestWithURL:context:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _continueToStarterPackMultiplexRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _finishWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest setUnarchivedCombinedResponsesDictionary:]
  -[NMSMusicRecommendationsRequest _continueToEditorialRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _starterPackMultiplexCacheURL]
  -[NMSMusicRecommendationsRequest _performForYouRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _performLookupRequestWithModelObjects:completion:]
  -[NMSMusicRecommendationsRequest _performStarterPackMultiplexRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _heavyRotationCacheURL]
  -[NMSMusicRecommendationsRequest useCachedDataOnly]
  -[NMSMusicRecommendationsRequest _continueToProcessResultsWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _continueToLibraryRecentMusicRecommedationsWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest unarchivedCombinedResponsesDictionary]
  -[NMSMusicRecommendationsRequest setUseCachedDataOnly:]
  -[NMSMusicRecommendationsRequest _unarchivedCombinedResponsesDictionary]
  -[NMSMusicRecommendationsRequest _continueToHeavyRotationRequestWithContext:queue:responseHandler:]


NMSMusicRecommendationsResponse : NSObject
 @property  NSData *cachedData
 @property  NMSMutableMediaSyncInfo *importedStoreContainerItemMappings
 @property  NSOrderedSet *recommendations

  // instance methods
  -[NMSMusicRecommendationsResponse .cxx_destruct]
  -[NMSMusicRecommendationsResponse cachedData]
  -[NMSMusicRecommendationsResponse recommendations]
  -[NMSMusicRecommendationsResponse importedStoreContainerItemMappings]
  -[NMSMusicRecommendationsResponse initWithCachedData:importedStoreContainerItemMappings:recommendations:]


NMSMusicRecommendationsRequestContext : NSObject
 @property  unsigned long minimumNumberOfRecentMusicModelObjects
 @property  MPModelResponse *heavyRotationResponse
 @property  MPModelResponse *libraryRecentMusicResponse
 @property  MPModelResponse *starterPackResponse
 @property  MPModelResponse *lookupResponse
 @property  NSArray *importedObjects
 @property  unsigned long numberOfRecentMusicModelObjects
 @property  NSSet *modelObjects
 @property  NMSMutableMediaSyncInfo *importedStoreContainerItemMappings
 @property  NSOrderedSet *recommendations
 @property  MPModelForYouRecommendationsResponse *forYouResponse
 @property  MPModelStoreBrowseResponse *editorialBrowseResponse

  // instance methods
  -[NMSMusicRecommendationsRequestContext setEditorialBrowseResponse:]
  -[NMSMusicRecommendationsRequestContext _processResponsesIfNeeded]
  -[NMSMusicRecommendationsRequestContext .cxx_destruct]
  -[NMSMusicRecommendationsRequestContext libraryRecentMusicResponse]
  -[NMSMusicRecommendationsRequestContext modelObjects]
  -[NMSMusicRecommendationsRequestContext setForYouResponse:]
  -[NMSMusicRecommendationsRequestContext starterPackResponse]
  -[NMSMusicRecommendationsRequestContext numberOfRecentMusicModelObjects]
  -[NMSMusicRecommendationsRequestContext _recentMusicContainsModelObject:]
  -[NMSMusicRecommendationsRequestContext setStarterPackResponse:]
  -[NMSMusicRecommendationsRequestContext recommendations]
  -[NMSMusicRecommendationsRequestContext setImportedObjects:]
  -[NMSMusicRecommendationsRequestContext setLibraryRecentMusicResponse:]
  -[NMSMusicRecommendationsRequestContext importedObjects]
  -[NMSMusicRecommendationsRequestContext editorialBrowseResponse]
  -[NMSMusicRecommendationsRequestContext importedStoreContainerItemMappings]
  -[NMSMusicRecommendationsRequestContext setLookupResponse:]
  -[NMSMusicRecommendationsRequestContext heavyRotationResponse]
  -[NMSMusicRecommendationsRequestContext lookupResponse]
  -[NMSMusicRecommendationsRequestContext setMinimumNumberOfRecentMusicModelObjects:]
  -[NMSMusicRecommendationsRequestContext forYouResponse]
  -[NMSMusicRecommendationsRequestContext setHeavyRotationResponse:]
  -[NMSMusicRecommendationsRequestContext minimumNumberOfRecentMusicModelObjects]


NMSMediaSyncServiceDownloadMediaResult : PBCodable <NSCopying>
 @property  BOOL hasResult
 @property  int result

  // instance methods
  -[NMSMediaSyncServiceDownloadMediaResult mergeFrom:]
  -[NMSMediaSyncServiceDownloadMediaResult dictionaryRepresentation]
  -[NMSMediaSyncServiceDownloadMediaResult writeTo:]
  -[NMSMediaSyncServiceDownloadMediaResult resultAsString:]
  -[NMSMediaSyncServiceDownloadMediaResult isEqual:]
  -[NMSMediaSyncServiceDownloadMediaResult copyTo:]
  -[NMSMediaSyncServiceDownloadMediaResult result]
  -[NMSMediaSyncServiceDownloadMediaResult hasResult]
  -[NMSMediaSyncServiceDownloadMediaResult readFrom:]
  -[NMSMediaSyncServiceDownloadMediaResult StringAsResult:]
  -[NMSMediaSyncServiceDownloadMediaResult setResult:]
  -[NMSMediaSyncServiceDownloadMediaResult setHasResult:]
  -[NMSMediaSyncServiceDownloadMediaResult copyWithZone:]


NMSMediaItemDownloadInfo : NSObject
 @property  NSNumber *identifier
 @property  NSNumber *mediaLibraryIdentifier
 @property  NSString *externalLibraryIdentifier
 @property  unsigned long size
 @property  unsigned long itemType
 @property  BOOL manuallyAdded

  // instance methods
  -[NMSMediaItemDownloadInfo .cxx_destruct]
  -[NMSMediaItemDownloadInfo itemType]
  -[NMSMediaItemDownloadInfo isEqual:]
  -[NMSMediaItemDownloadInfo identifier]
  -[NMSMediaItemDownloadInfo mediaLibraryIdentifier]
  -[NMSMediaItemDownloadInfo size]
  -[NMSMediaItemDownloadInfo externalLibraryIdentifier]
  -[NMSMediaItemDownloadInfo isManuallyAdded]
  -[NMSMediaItemDownloadInfo initWithMediaLibraryIdentifier:externalLibraryIdentifier:size:itemType:manuallyAdded:]


NMSPartialMediaItemDownloadInfo : NMSMediaItemDownloadInfo
 @property  unsigned long minimumSize
 @property  unsigned long offset

  // instance methods
  -[NMSPartialMediaItemDownloadInfo minimumSize]
  -[NMSPartialMediaItemDownloadInfo offset]
  -[NMSPartialMediaItemDownloadInfo isEqual:]
  -[NMSPartialMediaItemDownloadInfo initWithMediaLibraryIdentifier:externalLibraryIdentifier:size:itemType:manuallyAdded:minimumSize:offset:]


NMSMediaDownloadInfo : NSObject
 @property  NSOrderedSet *items

  // instance methods
  -[NMSMediaDownloadInfo initWithItems:]
  -[NMSMediaDownloadInfo items]
  -[NMSMediaDownloadInfo .cxx_destruct]
  -[NMSMediaDownloadInfo enumerateMediaItemsUsingBlock:]
  -[NMSMediaDownloadInfo mediaLibraryItemIdentifiers]
  -[NMSMediaDownloadInfo externalLibraryItemIdentifiers]


NMSMediaSyncInfo : NSObject
 @property  NSDictionary *info
 @property  unsigned long target

  // class methods
  +[NMSMediaSyncInfo _mediaSyncInfoDirectory]

  // instance methods
  -[NMSMediaSyncInfo _notificationName]
  -[NMSMediaSyncInfo containers]
  -[NMSMediaSyncInfo initWithTarget:]
  -[NMSMediaSyncInfo setInfo:]
  -[NMSMediaSyncInfo .cxx_destruct]
  -[NMSMediaSyncInfo hasItemsOverStorageLimitForContainer:]
  -[NMSMediaSyncInfo info]
  -[NMSMediaSyncInfo _isValid]
  -[NMSMediaSyncInfo progress]
  -[NMSMediaSyncInfo itemCount]
  -[NMSMediaSyncInfo statusForContainer:]
  -[NMSMediaSyncInfo hasItemsOverStorageLimit]
  -[NMSMediaSyncInfo progressForContainer:]
  -[NMSMediaSyncInfo status]
  -[NMSMediaSyncInfo target]
  -[NMSMediaSyncInfo playabilityForContainer:]
  -[NMSMediaSyncInfo dealloc]
  -[NMSMediaSyncInfo _targetIdentifier]
  -[NMSMediaSyncInfo _initWithTarget:readAndObserveChanges:]
  -[NMSMediaSyncInfo _registerForInfoChanged]
  -[NMSMediaSyncInfo _readInfo]
  -[NMSMediaSyncInfo _syncInfoFilePath]
  -[NMSMediaSyncInfo itemsForContainer:]
  -[NMSMediaSyncInfo statusForItem:]
  -[NMSMediaSyncInfo progressForItem:]
  -[NMSMediaSyncInfo isItemOverStorageLimit:]
  -[NMSMediaSyncInfo hasDownloadableItemsWithinStorageLimitForContainer:]
  -[NMSMediaSyncInfo userInfoForContainer:]
  -[NMSMediaSyncInfo userInfoForItem:]
  -[NMSMediaSyncInfo _hasItemsForContainer:]
  -[NMSMediaSyncInfo _preferencesApplicationID]
  -[NMSMediaSyncInfo _preferencesInfoKey]
  -[NMSMediaSyncInfo numberOfItemsOverStorageLimitForContainer:]


NMSMutableMediaSyncInfo : NMSMediaSyncInfo
 @property  NSMutableDictionary *info

  // instance methods
  -[NMSMutableMediaSyncInfo setOverStorageLimitBehavior:forContainer:]
  -[NMSMutableMediaSyncInfo initWithTarget:]
  -[NMSMutableMediaSyncInfo setProgressBytes:totalBytes:forItem:]
  -[NMSMutableMediaSyncInfo _notifyInfoChanged]
  -[NMSMutableMediaSyncInfo setOverStorageLimit:forItem:]
  -[NMSMutableMediaSyncInfo hasItemsOverStorageLimitForContainer:]
  -[NMSMutableMediaSyncInfo synchronize]
  -[NMSMutableMediaSyncInfo _updateAggregateInfoIfNeeded]
  -[NMSMutableMediaSyncInfo _persistingOptions]
  -[NMSMutableMediaSyncInfo progress]
  -[NMSMutableMediaSyncInfo statusForContainer:]
  -[NMSMutableMediaSyncInfo hasItemsOverStorageLimit]
  -[NMSMutableMediaSyncInfo _writeInfo]
  -[NMSMutableMediaSyncInfo progressForContainer:]
  -[NMSMutableMediaSyncInfo _info]
  -[NMSMutableMediaSyncInfo status]
  -[NMSMutableMediaSyncInfo _infoForContainer:]
  -[NMSMutableMediaSyncInfo playabilityForContainer:]
  -[NMSMutableMediaSyncInfo setStatus:forItem:]
  -[NMSMutableMediaSyncInfo setUserInfo:forContainer:]
  -[NMSMutableMediaSyncInfo _infoForItem:]
  -[NMSMutableMediaSyncInfo setUserInfo:forItem:]
  -[NMSMutableMediaSyncInfo setItems:forContainer:]


NMSStoreModelLookupRequestOperation : MPStoreModelRequestOperation
  // instance methods
  -[NMSStoreModelLookupRequestOperation configurationForLoadingModelDataWithStoreURLBag:error:]
  -[NMSStoreModelLookupRequestOperation produceResponseWithLoadedOutput:completion:]


NMSStoreModelLookupRequest : MPStoreModelRequest
 @property  NSArray *containerIDs

  // instance methods
  -[NMSStoreModelLookupRequest newOperationWithResponseHandler:]
  -[NMSStoreModelLookupRequest .cxx_destruct]
  -[NMSStoreModelLookupRequest setContainerIDs:]
  -[NMSStoreModelLookupRequest containerIDs]
  -[NMSStoreModelLookupRequest copyWithZone:]


NMSMediaItemGroupIterator : NSObject
 @property  NMSQuotaEvaluationState *evaluationState
 @property  unsigned long sizeForItemListWithinQuota
 @property  unsigned long sizeForCurrentIdentifier
 @property  unsigned long nominatedItemSize
 @property  unsigned long iteratingOrder
 @property  NSArray *itemGroups
 @property  NSMutableArray *remainingContainers
 @property  NSMutableArray *remainingItemLists
 @property  unsigned long currentContainerIndex
 @property  unsigned long currentItemIndex
 @property  NSMutableOrderedSet *mutableItemListWithinQuota
 @property  NSMutableArray *indexesToBeRemoved
 @property  unsigned long estimatedItemSize

  // instance methods
  -[NMSMediaItemGroupIterator .cxx_destruct]
  -[NMSMediaItemGroupIterator currentItem]
  -[NMSMediaItemGroupIterator evaluationState]
  -[NMSMediaItemGroupIterator currentItemIndex]
  -[NMSMediaItemGroupIterator setCurrentItemIndex:]
  -[NMSMediaItemGroupIterator estimatedItemSize]
  -[NMSMediaItemGroupIterator currentContainerIndex]
  -[NMSMediaItemGroupIterator sizeForCurrentIdentifier]
  -[NMSMediaItemGroupIterator sizeForItemListWithinQuota]
  -[NMSMediaItemGroupIterator downloadInfoWithinQuota]
  -[NMSMediaItemGroupIterator nominatedItemSize]
  -[NMSMediaItemGroupIterator itemGroups]
  -[NMSMediaItemGroupIterator iteratingOrder]
  -[NMSMediaItemGroupIterator addCurrentIdentifierToWithinQuotaListAndCountSizeTowardsQuota:]
  -[NMSMediaItemGroupIterator markAllRemainingContainersAsSkipped]
  -[NMSMediaItemGroupIterator isCurrentIdentifierEstimate]
  -[NMSMediaItemGroupIterator removeCurrentIdentifier]
  -[NMSMediaItemGroupIterator skipCurrentIdentifier]
  -[NMSMediaItemGroupIterator resetToIterateOverQuotaIdentifiers]
  -[NMSMediaItemGroupIterator mutableItemListWithinQuota]
  -[NMSMediaItemGroupIterator remainingItemLists]
  -[NMSMediaItemGroupIterator setRemainingItemLists:]
  -[NMSMediaItemGroupIterator _generateItemListAndSizesDictIfNecessary]
  -[NMSMediaItemGroupIterator remainingContainers]
  -[NMSMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSMediaItemGroupIterator _markToBeRemoved]
  -[NMSMediaItemGroupIterator indexesToBeRemoved]
  -[NMSMediaItemGroupIterator setCurrentContainerIndex:]
  -[NMSMediaItemGroupIterator initWithItemGroups:estimatedItemSize:]
  -[NMSMediaItemGroupIterator _continueToNextContainer]
  -[NMSMediaItemGroupIterator isCurrentItemManuallyAdded]
  -[NMSMediaItemGroupIterator identifiersForContainersOfType:]
  -[NMSMediaItemGroupIterator mediaContainersAboveQuota]
  -[NMSMediaItemGroupIterator setSizeForItemListWithinQuota:]
  -[NMSMediaItemGroupIterator setNominatedItemSize:]
  -[NMSMediaItemGroupIterator setItemGroups:]
  -[NMSMediaItemGroupIterator setRemainingContainers:]
  -[NMSMediaItemGroupIterator setMutableItemListWithinQuota:]
  -[NMSMediaItemGroupIterator setIndexesToBeRemoved:]


NMSSequentialMediaItemGroupIterator : NMSMediaItemGroupIterator
  // instance methods
  -[NMSSequentialMediaItemGroupIterator iteratingOrder]
  -[NMSSequentialMediaItemGroupIterator markAllRemainingContainersAsSkipped]
  -[NMSSequentialMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSSequentialMediaItemGroupIterator _continueToNextContainer]


NMSAlternatingMediaItemGroupIterator : NMSMediaItemGroupIterator
  // instance methods
  -[NMSAlternatingMediaItemGroupIterator iteratingOrder]
  -[NMSAlternatingMediaItemGroupIterator markAllRemainingContainersAsSkipped]
  -[NMSAlternatingMediaItemGroupIterator resetToIterateOverQuotaIdentifiers]
  -[NMSAlternatingMediaItemGroupIterator _generateItemListAndSizesDictIfNecessary]
  -[NMSAlternatingMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSAlternatingMediaItemGroupIterator _continueToNextContainer]
  -[NMSAlternatingMediaItemGroupIterator _resetMaxItemListSize]


NMSMediaPinningManager : NSObject <ICEnvironmentMonitorObserver, NMSPodcastsDownloadableContentControllerDelegate, MTDBExtensionAccessObserver>
 @property  NMSMediaDownloadInfo *downloadInfo
 @property  NSArray *playlistIdentifiers
 @property  NSArray *albumIdentifiers
 @property  NSArray *pinnedPlaylists
 @property  NSArray *pinnedAlbums
 @property  NSNumber *workoutPlaylistID
 @property  NSArray *podcastFeedURLs
 @property  NSArray *podcastStationUUIDs
 @property  BOOL pinnedPodcastsAreUserSet
 @property  BOOL savedEpisodesEnabled
 @property  NSArray *audiobookIdentifiers
 @property  BOOL wantToReadEnabled
 @property  NSOrderedSet *wantToReadAudiobooks
 @property  BOOL readingNowEnabled
 @property  NSOrderedSet *readingNowAudiobooks
 @property  NSOrderedSet *pinnedAudiobooks
 @property  double audiobookDownloadLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSMediaPinningManager sharedManager]
  +[NMSMediaPinningManager _mediaStorageSizeForCurrentDevice]
  +[NMSMediaPinningManager _cachedAlbumIdentifiersFilePath]
  +[NMSMediaPinningManager _cachedPlaylistIdentifiersFilePath]
  +[NMSMediaPinningManager playlistPIDValidForPinning:]
  +[NMSMediaPinningManager _cachedPodcastFeedURLsFilePath]
  +[NMSMediaPinningManager _cachedPodcastStationUUIDsFilePath]
  +[NMSMediaPinningManager _cachedAudiobookIdentifiersFilePath]
  +[NMSMediaPinningManager _tokenForInstance:]
  +[NMSMediaPinningManager _persistNewClientToken]
  +[NMSMediaPinningManager _fetchMusicRecommendations]
  +[NMSMediaPinningManager _cachedIdentifiersDirectoryPath]

  // instance methods
  -[NMSMediaPinningManager playlistIdentifiers]
  -[NMSMediaPinningManager setSavedEpisodesEnabled:]
  -[NMSMediaPinningManager .cxx_destruct]
  -[NMSMediaPinningManager workoutPlaylistID]
  -[NMSMediaPinningManager audiobookDownloadLimit]
  -[NMSMediaPinningManager setReadingNowAudiobooks:]
  -[NMSMediaPinningManager pinnedAlbums]
  -[NMSMediaPinningManager setPinnedPodcastsAreUserSet:]
  -[NMSMediaPinningManager init]
  -[NMSMediaPinningManager setReadingNowEnabled:]
  -[NMSMediaPinningManager pinnedPlaylists]
  -[NMSMediaPinningManager savedEpisodesEnabled]
  -[NMSMediaPinningManager setAvailableSpace:]
  -[NMSMediaPinningManager readingNowAudiobooks]
  -[NMSMediaPinningManager _handleRecommendationSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager setAudiobookDownloadLimit:]
  -[NMSMediaPinningManager setListenNowPodcastFeedURLs:]
  -[NMSMediaPinningManager wantToReadAudiobooks]
  -[NMSMediaPinningManager pinnedAudiobooks]
  -[NMSMediaPinningManager pinnedPodcastsAreUserSet]
  -[NMSMediaPinningManager dealloc]
  -[NMSMediaPinningManager setWantToReadAudiobooks:]
  -[NMSMediaPinningManager _handlePairedDeviceDidBecomeActiveNotification:]
  -[NMSMediaPinningManager setWantToReadEnabled:]
  -[NMSMediaPinningManager setWorkoutPlaylistID:]
  -[NMSMediaPinningManager _handleMediaLibraryEntitiesAddedOrRemovedNotification:]
  -[NMSMediaPinningManager isItemGroupWithinQuota:]
  -[NMSMediaPinningManager _handlePodcastStationsDidChange:]
  -[NMSMediaPinningManager _handlePodcastsSubscriptionMetadataDidChangeNotification:]
  -[NMSMediaPinningManager _handlePodcastSizeInfoDidChangeNotification:]
  -[NMSMediaPinningManager _handlePodcastSizeCacheDidUpdateNotification:]
  -[NMSMediaPinningManager _shouldCalculateCachedIdentifiers]
  -[NMSMediaPinningManager _shouldSkipQuotaManagerEvaluation]
  -[NMSMediaPinningManager _handlePodcastsPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handleMusicPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handleRecommendationLibraryContentsDidChangeNotification:]
  -[NMSMediaPinningManager _handleRecommendationsDidUpdateNotification:]
  -[NMSMediaPinningManager _handleAudiobooksPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handleAudiobooksRecommendationsDidChangeNotification:]
  -[NMSMediaPinningManager _handleICAgeVerificationStateDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningMusicContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningPodcastsContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningAudiobooksContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerMusicIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerPodcastsIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerAudiobooksIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager downloadInfo]
  -[NMSMediaPinningManager _mediaQuota]
  -[NMSMediaPinningManager _invalidateAddedItemsCache]
  -[NMSMediaPinningManager _quotaManagerWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _invalidateMediaCacheForAppIdentifiers:]
  -[NMSMediaPinningManager _refreshMusicIdentifiers]
  -[NMSMediaPinningManager _fetchMusicIdentifiers]
  -[NMSMediaPinningManager _isAlbumPinned:]
  -[NMSMediaPinningManager _isPlaylistPinned:]
  -[NMSMediaPinningManager _setWorkoutPlaylistID:]
  -[NMSMediaPinningManager _updateWorkoutSettingsPlaylistPIDTo:]
  -[NMSMediaPinningManager _refreshPodcastsIdentifiers]
  -[NMSMediaPinningManager _fetchPodcastsIdentifiers]
  -[NMSMediaPinningManager _refreshAudiobooksIdentifiers]
  -[NMSMediaPinningManager _fetchAudiobooksIdentifiers]
  -[NMSMediaPinningManager _isAudiobookPinned:]
  -[NMSMediaPinningManager _audiobookDownloadLimit]
  -[NMSMediaPinningManager _notePinningSettingsChangedLocally]
  -[NMSMediaPinningManager episodeLimitForPodcastsAreUserSet:]
  -[NMSMediaPinningManager _legacy_newPodcastsGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _newMusicGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _newPodcastsGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _newAudiobooksGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _isAppDownloadingDormantForBundleIdentifier:]
  -[NMSMediaPinningManager _newGroupIteratorForBundleIdentifier:downloadedItemsOnly:]
  -[NMSMediaPinningManager invalidatePodcastsCache]
  -[NMSMediaPinningManager podcastsDownloadableContentControllerContentDidChange:]
  -[NMSMediaPinningManager extensionAccessDidChange]
  -[NMSMediaPinningManager downloadInfoWithinAvailableSpace:]
  -[NMSMediaPinningManager downloadInfoForBundleIdentifier:]
  -[NMSMediaPinningManager invalidateMusicCache]
  -[NMSMediaPinningManager addedSongsSize]
  -[NMSMediaPinningManager nominatedSongsSize]
  -[NMSMediaPinningManager albumIdentifiers]
  -[NMSMediaPinningManager isAlbumPinned:]
  -[NMSMediaPinningManager isPlaylistPinned:]
  -[NMSMediaPinningManager pinAlbum:completionHandler:]
  -[NMSMediaPinningManager pinPlaylist:completionHandler:]
  -[NMSMediaPinningManager unpinAlbum:completionHandler:]
  -[NMSMediaPinningManager unpinPlaylist:completionHandler:]
  -[NMSMediaPinningManager setGizmoDownloadOrder:forPodcastWithFeedURL:]
  -[NMSMediaPinningManager removePodcastWithFeedURL:]
  -[NMSMediaPinningManager downloadOrderForPodcastWithFeedURL:]
  -[NMSMediaPinningManager setGizmoEpisodeLimit:forPodcastWithFeedURL:]
  -[NMSMediaPinningManager episodeLimitForPodcastWithFeedURL:]
  -[NMSMediaPinningManager podcastFeedURLs]
  -[NMSMediaPinningManager podcastStationUUIDs]
  -[NMSMediaPinningManager pinPodcastWithFeedURL:]
  -[NMSMediaPinningManager unpinPodcastWithFeedURL:]
  -[NMSMediaPinningManager isPodcastWithFeedURLPinned:]
  -[NMSMediaPinningManager pinPodcastStationWithUUID:]
  -[NMSMediaPinningManager unpinPodcastStationWithUUID:]
  -[NMSMediaPinningManager isPodcastStationWithUUIDPinned:]
  -[NMSMediaPinningManager invalidateAudiobooksCache]
  -[NMSMediaPinningManager audiobookIdentifiers]
  -[NMSMediaPinningManager isWantToReadEnabled]
  -[NMSMediaPinningManager isReadingNowEnabled]
  -[NMSMediaPinningManager isAudiobookPinned:]
  -[NMSMediaPinningManager pinAudiobook:]
  -[NMSMediaPinningManager unpinAudiobook:]
  -[NMSMediaPinningManager _requiresICEnvironmentMonitor]
  -[NMSMediaPinningManager addedPodcastsDownloadInfoItemsWithFeedURL:]
  -[NMSMediaPinningManager nms_modelObjectIsManuallyPinned:]
  -[NMSMediaPinningManager _pinModelObject:completionHandler:]
  -[NMSMediaPinningManager _unpinModelObject:completionHandler:]
  -[NMSMediaPinningManager nms_fetchPinningStatusForModelObject:queue:completionHandler:]
  -[NMSMediaPinningManager nms_pinModelObject:completionHandler:]
  -[NMSMediaPinningManager nms_unpinModelObject:completionHandler:]


NMSPodcastsFetchRequests : NSObject
  // class methods
  +[NMSPodcastsFetchRequests _predicateForDownloadableWatchEpisodesWithDownloadedOnly:]
  +[NMSPodcastsFetchRequests _propertiesToFetchForEpisodeIterators]
  +[NMSPodcastsFetchRequests fetchRequestForEpisodesWithFeedURL:downloadedOnly:ctx:]
  +[NMSPodcastsFetchRequests fetchRequestForStationWithUUID:]
  +[NMSPodcastsFetchRequests fetchRequestForUpNextEpisodesDownloadedOnly:]
  +[NMSPodcastsFetchRequests fetchRequestForSavedEpisodesDownloadedOnly:]


NMSKeepLocalRequestValidator : NSObject
  // instance methods
  -[NMSKeepLocalRequestValidator runValidationChecksForKeepLocalRequest]


NMSKeepLocalRequestManager : NSObject
 @property  NSSet *keepLocalEnabledOnChargerAlbums
 @property  NSSet *keepLocalEnabledOnChargerPlaylists

  // class methods
  +[NMSKeepLocalRequestManager sharedManager]

  // instance methods
  -[NMSKeepLocalRequestManager .cxx_destruct]
  -[NMSKeepLocalRequestManager init]
  -[NMSKeepLocalRequestManager _addKeepLocalEnabledOnChargerPlaylist:]
  -[NMSKeepLocalRequestManager _addKeepLocalEnabledOnChargerAlbum:]
  -[NMSKeepLocalRequestManager _removeKeepLocalEnabledOnChargerPlaylist:]
  -[NMSKeepLocalRequestManager _removeKeepLocalEnabledOnChargerAlbum:]
  -[NMSKeepLocalRequestManager enqueueKeepLocalRequestEnabledForModelObject:onCharger:completionHandler:]
  -[NMSKeepLocalRequestManager enqueueKeepLocalRequestDisabledForModelObject:completionHandler:]
  -[NMSKeepLocalRequestManager keepLocalEnabledOnChargerAlbums]
  -[NMSKeepLocalRequestManager keepLocalEnabledOnChargerPlaylists]


NMSyncDefaults : NSObject <NMSNotificationDispatcherDelegate>
 @property  MPMediaPlaylist *assetSyncPlaylist
 @property  NSNumber *assetSyncLimit
 @property  NSArray *pinnedPlaylists
 @property  NSNumber *workoutPlaylistID
 @property  NSArray *pinnedAlbums
 @property  NSArray *libraryRecommendationPlaylists
 @property  NSArray *libraryRecommendationAlbums
 @property  NSDictionary *musicRecommendationDict
 @property  NSData *cachedRecommendationsData
 @property  NSDate *storeRecommendationExpirationDate
 @property  NSDate *libraryRecommendationExpirationDate
 @property  NSNumber *minimumNumberOfRecentMusicModelObjects
 @property  NSNumber *lastFullySentAssetSyncPlaylistPersistentID
 @property  NSNumber *lastFullySentAssetSyncPlaylistVersion
 @property  NSDate *lastMusicAppActiveDate
 @property  NSDate *lastSiriFaceActiveDate
 @property  NSDictionary *gizmoPodcastDownloadOrders
 @property  NSDictionary *gizmoPodcastEpisodeLimits
 @property  BOOL pinnedPodcastsAreUserSet
 @property  NSArray *listenNowPodcastFeedURLs
 @property  BOOL savedEpisodesEnabled
 @property  NSArray *pinnedPodcastFeedURLs
 @property  NSArray *pinnedPodcastStationUUIDs
 @property  BOOL wantToReadEnabled
 @property  NSArray *wantToReadAudiobooks
 @property  BOOL readingNowEnabled
 @property  NSArray *readingNowAudiobooks
 @property  NSArray *pinnedAudiobooks
 @property  NSNumber *audiobookDownloadLimit
 @property  NSDate *modificationDate
 @property  BOOL debugSyncInfoEnabled
 @property  NSDictionary *syncStateDict
 @property  NSDictionary *clientPinningSettingsToken
 @property  NSDictionary *musicSyncInfo
 @property  NSDictionary *podcastsSyncInfo
 @property  NSDictionary *audiobooksSyncInfo
 @property  unsigned long assetSyncLimitType
 @property  unsigned long assetSyncType
 @property  NSNumber *assetSyncPlaylistPersistentID
 @property  NSSet *pinnedPodcasts
 @property  NSArray *listenNowPodcastEpisodes
 @property  NSArray *pinnedPodcastIdentifiers
 @property  BOOL allowOffChargerAssetSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSyncDefaults sharedDefaults]

  // instance methods
  -[NMSyncDefaults _setBool:forKey:]
  -[NMSyncDefaults setLastMusicAppActiveDate:]
  -[NMSyncDefaults _notifyChangesForKey:]
  -[NMSyncDefaults pinnedPodcastFeedURLs]
  -[NMSyncDefaults modificationDate]
  -[NMSyncDefaults _setObject:forKey:]
  -[NMSyncDefaults _objectForKey:]
  -[NMSyncDefaults libraryRecommendationExpirationDate]
  -[NMSyncDefaults beginBatchUpdates]
  -[NMSyncDefaults gizmoPodcastEpisodeLimits]
  -[NMSyncDefaults _removeObjectForKey:]
  -[NMSyncDefaults _removeOldMusicRecommendationsInfoIfPossible]
  -[NMSyncDefaults _writePropertiesToDefaults]
  -[NMSyncDefaults setLibraryRecommendationAlbums:]
  -[NMSyncDefaults setSavedEpisodesEnabled:]
  -[NMSyncDefaults debugSyncInfoEnabled]
  -[NMSyncDefaults setLastUserPinningChangeDateForBundleID:]
  -[NMSyncDefaults storeRecommendationExpirationDate]
  -[NMSyncDefaults assetSyncType]
  -[NMSyncDefaults musicRecommendationDict]
  -[NMSyncDefaults setPodcastSizeEstimationData:]
  -[NMSyncDefaults _defaultWithPrefix:forBundleIdentifier:]
  -[NMSyncDefaults .cxx_destruct]
  -[NMSyncDefaults lastSyncInfoRequestDateForBundleIdentifier:]
  -[NMSyncDefaults setLastSiriFaceActiveDate:]
  -[NMSyncDefaults setLibraryRecommendationPlaylists:]
  -[NMSyncDefaults lastSiriFaceActiveDate]
  -[NMSyncDefaults setPinnedPlaylists:]
  -[NMSyncDefaults lastLocalPlaybackDateForBundleID:]
  -[NMSyncDefaults wantToReadEnabled]
  -[NMSyncDefaults setAssetSyncLimitType:]
  -[NMSyncDefaults setLastFullySentAssetSyncPlaylistVersion:]
  -[NMSyncDefaults workoutPlaylistID]
  -[NMSyncDefaults audiobookDownloadLimit]
  -[NMSyncDefaults setReadingNowAudiobooks:]
  -[NMSyncDefaults podcastSizeEstimationData]
  -[NMSyncDefaults allowOffChargerAssetSync]
  -[NMSyncDefaults dispatcherDidReceiveNotificationFromRemoteDevice:]
  -[NMSyncDefaults _migrateDataIfNecessary]
  -[NMSyncDefaults _dateValueForKey:bundleID:]
  -[NMSyncDefaults _continueUsingMusicRecommendationKey]
  -[NMSyncDefaults setStoreRecommendationExpirationDate:]
  -[NMSyncDefaults lastUserPinningChangeDateForBundleID:]
  -[NMSyncDefaults pinnedAlbums]
  -[NMSyncDefaults listenNowPodcastFeedURLs]
  -[NMSyncDefaults readingNowEnabled]
  -[NMSyncDefaults _associatedObject]
  -[NMSyncDefaults setPinnedPodcastsAreUserSet:]
  -[NMSyncDefaults init]
  -[NMSyncDefaults setAssetSyncLimit:]
  -[NMSyncDefaults setClientPinningSettingsToken:]
  -[NMSyncDefaults lastFullySentAssetSyncPlaylistPersistentID]
  -[NMSyncDefaults setLastUserLaunchDateForBundleID:]
  -[NMSyncDefaults setReadingNowEnabled:]
  -[NMSyncDefaults setPinnedPodcastStationUUIDs:]
  -[NMSyncDefaults setGizmoPodcastDownloadOrders:]
  -[NMSyncDefaults audiobooksSyncInfo]
  -[NMSyncDefaults assetSyncPlaylist]
  -[NMSyncDefaults pinnedPlaylists]
  -[NMSyncDefaults podcastsSyncInfo]
  -[NMSyncDefaults savedEpisodesEnabled]
  -[NMSyncDefaults readingNowAudiobooks]
  -[NMSyncDefaults lastContentUsedDateForBundleID:]
  -[NMSyncDefaults setAllowOffChargerAssetSync:]
  -[NMSyncDefaults clientPinningSettingsToken]
  -[NMSyncDefaults setInstallDateForBundleID:]
  -[NMSyncDefaults _watchHasCapability:]
  -[NMSyncDefaults assetSyncPlaylistPersistentID]
  -[NMSyncDefaults pinnedPodcastIdentifiers]
  -[NMSyncDefaults _setObject:forKey:shouldSynchronizeToPairedDevice:]
  -[NMSyncDefaults _reloadPropertiesFromDefaults]
  -[NMSyncDefaults setAudiobookDownloadLimit:]
  -[NMSyncDefaults _writeDate:forKey:bundleID:]
  -[NMSyncDefaults pinnedPodcastStationUUIDs]
  -[NMSyncDefaults _companionSidePerDeviceDefaults]
  -[NMSyncDefaults _deviceHasCapability:forCapabilitiesKey:]
  -[NMSyncDefaults setLastLocalPlaybackDateForBundleID:]
  -[NMSyncDefaults setAssetSyncPlaylist:]
  -[NMSyncDefaults setListenNowPodcastFeedURLs:]
  -[NMSyncDefaults setPinnedAlbums:]
  -[NMSyncDefaults libraryRecommendationPlaylists]
  -[NMSyncDefaults wantToReadAudiobooks]
  -[NMSyncDefaults _playlistPersistentIDForPlaylistName:]
  -[NMSyncDefaults endBatchUpdates]
  -[NMSyncDefaults _phoneHasCapability:]
  -[NMSyncDefaults musicSyncInfo]
  -[NMSyncDefaults setMusicSyncInfo:]
  -[NMSyncDefaults listenNowPodcastEpisodes]
  -[NMSyncDefaults clearAppActivityStatusDefaultsForBundleID:]
  -[NMSyncDefaults setPinnedPodcasts:]
  -[NMSyncDefaults setCachedRecommendationsData:]
  -[NMSyncDefaults _addWatchCapability:]
  -[NMSyncDefaults pinnedAudiobooks]
  -[NMSyncDefaults _reloadPropertiesFromDefaultsOnMainThread]
  -[NMSyncDefaults pinnedPodcasts]
  -[NMSyncDefaults _setNeedsSynchronize]
  -[NMSyncDefaults _setupNotifiers]
  -[NMSyncDefaults gizmoPodcastDownloadOrders]
  -[NMSyncDefaults clearPodcastsDefaults]
  -[NMSyncDefaults assetSyncLimitType]
  -[NMSyncDefaults _perDeviceSettingsDidResetNotification:]
  -[NMSyncDefaults _defaultPlaylistPersistentID]
  -[NMSyncDefaults pinnedPodcastsAreUserSet]
  -[NMSyncDefaults setPodcastsSyncInfo:]
  -[NMSyncDefaults _setLegacyObject:forKey:ifRemoteDeviceMissingCapability:]
  -[NMSyncDefaults installDateForBundleID:]
  -[NMSyncDefaults setLastContentUsedDateForBundleID:]
  -[NMSyncDefaults setLastFullySentAssetSyncPlaylistPersistentID:]
  -[NMSyncDefaults lastUserLaunchDateForBundleID:]
  -[NMSyncDefaults syncStateDict]
  -[NMSyncDefaults setWantToReadAudiobooks:]
  -[NMSyncDefaults setAssetSyncType:]
  -[NMSyncDefaults _preSeed2_setMusicRecommendationDict:]
  -[NMSyncDefaults cachedRecommendationsData]
  -[NMSyncDefaults _addCapability:forCapabilitiesKey:]
  -[NMSyncDefaults setPinnedPodcastFeedURLs:]
  -[NMSyncDefaults lastFullySentAssetSyncPlaylistVersion]
  -[NMSyncDefaults setMusicRecommendationDict:]
  -[NMSyncDefaults _spaceQuotaForNumberOfSongs:]
  -[NMSyncDefaults setLibraryRecommendationExpirationDate:]
  -[NMSyncDefaults lastMusicAppActiveDate]
  -[NMSyncDefaults setGizmoPodcastEpisodeLimits:]
  -[NMSyncDefaults setPinnedPodcastIdentifiers:]
  -[NMSyncDefaults dispatcherDidReceiveNotificationFromOtherProcess:]
  -[NMSyncDefaults setMinimumNumberOfRecentMusicModelObjects:]
  -[NMSyncDefaults setWantToReadEnabled:]
  -[NMSyncDefaults setLastSyncInfoRequestDate:forBundleIdentifier:]
  -[NMSyncDefaults setAudiobooksSyncInfo:]
  -[NMSyncDefaults assetSyncLimit]
  -[NMSyncDefaults _clearAssetSyncPlaylistDependentDefaults]
  -[NMSyncDefaults dormancyIntervalInHoursForBundleID:]
  -[NMSyncDefaults libraryRecommendationAlbums]
  -[NMSyncDefaults setPinnedAudiobooks:]
  -[NMSyncDefaults _addPhoneCapability:]
  -[NMSyncDefaults setWorkoutPlaylistID:]
  -[NMSyncDefaults _boolForKey:defaultValue:]
  -[NMSyncDefaults setListenNowPodcastEpisodes:]
  -[NMSyncDefaults _resetDomainAccessor]
  -[NMSyncDefaults minimumNumberOfRecentMusicModelObjects]
  -[NMSyncDefaults setAssetSyncPlaylistPersistentID:]


_NMSyncDefaultsAssociatedObject : NSObject
 @property  MPMediaPlaylist *assetSyncPlaylist

  // instance methods
  -[_NMSyncDefaultsAssociatedObject .cxx_destruct]
  -[_NMSyncDefaultsAssociatedObject init]
  -[_NMSyncDefaultsAssociatedObject assetSyncPlaylist]
  -[_NMSyncDefaultsAssociatedObject setAssetSyncPlaylist:]
  -[_NMSyncDefaultsAssociatedObject dealloc]
  -[_NMSyncDefaultsAssociatedObject _mediaLibraryDidChangeNotification:]


NMSModelRecommendationsLibraryResponse : MPModelLibraryResponse
  // instance methods
  -[NMSModelRecommendationsLibraryResponse initWithRequest:]
  -[NMSModelRecommendationsLibraryResponse dealloc]
  -[NMSModelRecommendationsLibraryResponse _handleMusicRecommendationsDidUpdateNotification:]
  -[NMSModelRecommendationsLibraryResponse _handleMusicRecommendationArtworkDidUpdateNotification:]


NMSModelRecommendationsLibraryRequestOperation : MPAsyncOperation
 @property  NMSModelRecommendationsLibraryRequest *request
 @property  @? responseHandler

  // instance methods
  -[NMSModelRecommendationsLibraryRequestOperation setRequest:]
  -[NMSModelRecommendationsLibraryRequestOperation .cxx_destruct]
  -[NMSModelRecommendationsLibraryRequestOperation responseHandler]
  -[NMSModelRecommendationsLibraryRequestOperation setResponseHandler:]
  -[NMSModelRecommendationsLibraryRequestOperation execute]
  -[NMSModelRecommendationsLibraryRequestOperation request]
  -[NMSModelRecommendationsLibraryRequestOperation _requestPlaylistsEntries]
  -[NMSModelRecommendationsLibraryRequestOperation _requestSongs]
  -[NMSModelRecommendationsLibraryRequestOperation _requestAlbums]
  -[NMSModelRecommendationsLibraryRequestOperation _requestPlaylists]
  -[NMSModelRecommendationsLibraryRequestOperation _mpIdentifierSetsFromStringIdentifiers:]
  -[NMSModelRecommendationsLibraryRequestOperation _requestContainerWithClass:]
  -[NMSModelRecommendationsLibraryRequestOperation _modelObjectWithCachedArtworkFromModelObject:]


NMSModelRecommendationsLibraryRequest : MPModelLibraryRequest
  // instance methods
  -[NMSModelRecommendationsLibraryRequest newOperationWithResponseHandler:]


NMSGreenTeaStreamingDefaults : NSObject
  // class methods
  +[NMSGreenTeaStreamingDefaults sharedInstance]

  // instance methods
  -[NMSGreenTeaStreamingDefaults _setBool:forKey:]
  -[NMSGreenTeaStreamingDefaults .cxx_destruct]
  -[NMSGreenTeaStreamingDefaults init]
  -[NMSGreenTeaStreamingDefaults _boolForKey:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicIsMirroringStreamingSettings]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicIsMirroringStreamingSettings:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicAllowCellularForStreaming]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicAllowCellularForStreaming:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicAllowCellularForHighQualityStreaming]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicAllowCellularForHighQualityStreaming:]


NMSMediaSyncService : NSObject <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSMediaSyncService _mediaSyncServiceDescriptionFromDownloadResult:]

  // instance methods
  -[NMSMediaSyncService service:account:incomingUnhandledProtobuf:fromID:context:]
  -[NMSMediaSyncService .cxx_destruct]
  -[NMSMediaSyncService init]
  -[NMSMediaSyncService _defaultPairedDevice]
  -[NMSMediaSyncService dealloc]
  -[NMSMediaSyncService service:account:identifier:didSendWithSuccess:error:context:]
  -[NMSMediaSyncService _setProtobufHandlers]
  -[NMSMediaSyncService _convertMediaSyncServiceContainerToIDSContainer:]
  -[NMSMediaSyncService _downloadContainerWithPID:containerType:intent:completionHandler:]
  -[NMSMediaSyncService _removeContainerWithPID:containerType:completionHandler:]
  -[NMSMediaSyncService _convertPersistentID:containerType:]
  -[NMSMediaSyncService _convertToInternalDownloadIntent:]
  -[NMSMediaSyncService _sendDownloadMessage:completionHandler:]
  -[NMSMediaSyncService _performFailSafeWithIDSMessageIdentifier:messageType:]
  -[NMSMediaSyncService _sendRemoveMessage:completionHandler:]
  -[NMSMediaSyncService _cleanupDownloadCompletionHandlerWithID:]
  -[NMSMediaSyncService _cleanupRemoveCompletionHandlerWithID:]
  -[NMSMediaSyncService _sendProtoBufForMessage:messageType:]
  -[NMSMediaSyncService _idsMessageOptions]
  -[NMSMediaSyncService _handleDownloadMedia:service:account:fromID:context:]
  -[NMSMediaSyncService _handleRemoveMedia:service:account:fromID:context:]
  -[NMSMediaSyncService _handleDownloadMediaResult:service:account:fromID:context:]
  -[NMSMediaSyncService _sendServiceResultMessage:idsMessageID:]
  -[NMSMediaSyncService _convertKeepLocalValidationResultToIDSServiceResult:]
  -[NMSMediaSyncService _sendServiceDownloadResult:idsMessageID:]
  -[NMSMediaSyncService _runKeepLocalEnabled:withAssetPID:containerType:onCharger:idsMessageID:completionHandler:]
  -[NMSMediaSyncService _callAndRemoveCompletionHandlerForDownloadWithResult:idsMessageID:]
  -[NMSMediaSyncService _callAndRemoveCompletionHandlerForRemoveWithResult:idsMessageID:]
  -[NMSMediaSyncService _downloadWithPersistentID:containerType:intent:idsMessageID:]
  -[NMSMediaSyncService _sendServiceRemoveResult:idsMessageID:]
  -[NMSMediaSyncService _convertIDSServiceResultToMediaSyncServiceResult:]
  -[NMSMediaSyncService downloadContainerWithPID:type:intent:completionHandler:]
  -[NMSMediaSyncService removeContainerWithPID:type:completionHandler:]
  -[NMSMediaSyncService _handleRemoveMediaResult:service:account:fromID:context:]


NMSContainer : NSObject
 @property  NSString *name
 @property  NSNumber *persistentID
 @property  unsigned long type
 @property  NSNumber *addedDate
 @property  NSNumber *playedDate

  // instance methods
  -[NMSContainer name]
  -[NMSContainer .cxx_destruct]
  -[NMSContainer persistentID]
  -[NMSContainer addedDate]
  -[NMSContainer setAddedDate:]
  -[NMSContainer type]
  -[NMSContainer initWithPersistentID:name:type:]
  -[NMSContainer playedDate]
  -[NMSContainer setPlayedDate:]


NMSMusicRecommendationManager : NSObject
 @property  BOOL wantsContentsUpdate

  // class methods
  +[NMSMusicRecommendationManager sharedManager]

  // instance methods
  -[NMSMusicRecommendationManager _removePreviousCachedRecommendationsResponses]
  -[NMSMusicRecommendationManager _persistUpdatedRecommendationsWithResponse:]
  -[NMSMusicRecommendationManager _handleActiveAccountDidChangeNotification:]
  -[NMSMusicRecommendationManager _handlePairingFinishedNotification:]
  -[NMSMusicRecommendationManager .cxx_destruct]
  -[NMSMusicRecommendationManager _isLibraryRecommendationExpired]
  -[NMSMusicRecommendationManager _reloadRecommendationContentsIfNecessary]
  -[NMSMusicRecommendationManager _sortedContainersBasedOnRecency]
  -[NMSMusicRecommendationManager _retryFailedArtworkImportsIfNecessary]
  -[NMSMusicRecommendationManager _notifyMusicRecommendationsDidUpdateNotification]
  -[NMSMusicRecommendationManager setWantsContentsUpdate:]
  -[NMSMusicRecommendationManager init]
  -[NMSMusicRecommendationManager _handleRecommendationStoreContentsDidChangeNotification:]
  -[NMSMusicRecommendationManager _scheduleNextStoreRecommendationReloadIfNecessary]
  -[NMSMusicRecommendationManager nms_fetchSelectedRecommendationSectionTypesForModelObject:queue:completionHandler:]
  -[NMSMusicRecommendationManager hasSelectedRecommendationWithIdentifier:]
  -[NMSMusicRecommendationManager _invalidateRecommendationRetryTimer]
  -[NMSMusicRecommendationManager _unregisterForPairingFinishedNotification]
  -[NMSMusicRecommendationManager _handleMediaLibraryDidChangeNotification:]
  -[NMSMusicRecommendationManager _updateRecommendationsSelections]
  -[NMSMusicRecommendationManager _setArtworkImageCache:withToken:]
  -[NMSMusicRecommendationManager _importArtworkIfNecessaryForObjectsIgnorePreviousCache:]
  -[NMSMusicRecommendationManager _importArtworkForPlaylists:]
  -[NMSMusicRecommendationManager nms_fetchRecentMusicRecommendationWithQueue:completionHandler:]
  -[NMSMusicRecommendationManager _reloadStoreRecommendations]
  -[NMSMusicRecommendationManager _handleRecommendationSelectionsDidChangeNotification:]
  -[NMSMusicRecommendationManager _handleSubscriptionStatusDidChangeNotification:]
  -[NMSMusicRecommendationManager _invalidateLibraryRecommendationExpirationTimer]
  -[NMSMusicRecommendationManager _fetchAddedDateForContainer:]
  -[NMSMusicRecommendationManager _updateWithRecommendations:]
  -[NMSMusicRecommendationManager _deleteCachedArtworksWithTokens:]
  -[NMSMusicRecommendationManager _finishLoadingContentsWithResponse:]
  -[NMSMusicRecommendationManager _scheduleNextLibraryRecommendationReloadIfNecessary]
  -[NMSMusicRecommendationManager _startStoreRecommendationRetryTimer]
  -[NMSMusicRecommendationManager _removePreviousRecommendationDefaults]
  -[NMSMusicRecommendationManager _registerForPairingFinishedNotification]
  -[NMSMusicRecommendationManager _reloadRecommendationsFromDefaultsWithCompletion:]
  -[NMSMusicRecommendationManager _invalidateStoreRecommendationExpirationTimer]
  -[NMSMusicRecommendationManager nms_deselectRecommendationIfNecessaryForModelObject:]
  -[NMSMusicRecommendationManager dealloc]
  -[NMSMusicRecommendationManager persistRecommendationsSelections:]
  -[NMSMusicRecommendationManager _isStoreRecommendationExpired]
  -[NMSMusicRecommendationManager _recommendations]
  -[NMSMusicRecommendationManager _handleArtworksDidUpdateNotification:]
  -[NMSMusicRecommendationManager wantsContentsUpdate]
  -[NMSMusicRecommendationManager _removeLegacyRecommendationsDefaultsIfNecessary]
  -[NMSMusicRecommendationManager _handlePairedDeviceDidBecomeActiveNotification:]
  -[NMSMusicRecommendationManager fetchRecommendationsWithQueue:completion:]
  -[NMSMusicRecommendationManager _invalidateArtworkRetryTimer]
  -[NMSMusicRecommendationManager _expirationDateForUpdateDate:withOffsetDays:preferredTimeWindow:]
  -[NMSMusicRecommendationManager _reloadLibraryRecommendations]
  -[NMSMusicRecommendationManager _startArtworkRetryTimer]
  -[NMSMusicRecommendationManager _handleMediaLibraryEntitiesAddedOrRemovedNotification:]


NMSModelForYouRecommendationsRequest : MPModelForYouRecommendationsRequest
 @property  BOOL nms_useCachedDataOnly
 @property  NSArray *nms_cachedRecommendationsArray
 @property  NSDictionary *nms_cachedStoreItemMetadataResults

  // instance methods
  -[NMSModelForYouRecommendationsRequest newOperationWithResponseHandler:]
  -[NMSModelForYouRecommendationsRequest .cxx_destruct]
  -[NMSModelForYouRecommendationsRequest copyWithZone:]
  -[NMSModelForYouRecommendationsRequest nms_cachedRecommendationsArray]
  -[NMSModelForYouRecommendationsRequest nms_cachedStoreItemMetadataResults]
  -[NMSModelForYouRecommendationsRequest setNms_useCachedDataOnly:]
  -[NMSModelForYouRecommendationsRequest setNms_cachedRecommendationsArray:]
  -[NMSModelForYouRecommendationsRequest setNms_cachedStoreItemMetadataResults:]
  -[NMSModelForYouRecommendationsRequest nms_useCachedDataOnly]


NMSModelForYouRecommendationsRequestOperation : MPModelForYouRecommendationsRequestOperation
  // instance methods
  -[NMSModelForYouRecommendationsRequestOperation execute]
  -[NMSModelForYouRecommendationsRequestOperation _produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:]


NMSMediaSettingsSynchronizer : NSObject
  // class methods
  +[NMSMediaSettingsSynchronizer sharedSynchronizer]

  // instance methods
  -[NMSMediaSettingsSynchronizer endObservingUpdates]
  -[NMSMediaSettingsSynchronizer _reconcileGreenTeaSettingsIfNecessary]
  -[NMSMediaSettingsSynchronizer .cxx_destruct]
  -[NMSMediaSettingsSynchronizer beginObservingUpdates]
  -[NMSMediaSettingsSynchronizer _podcastsAppGroupPath]
  -[NMSMediaSettingsSynchronizer _syncPodcastDefaultsIfNecessary]
  -[NMSMediaSettingsSynchronizer _migrateMusicDefaultsIfNecessary]
  -[NMSMediaSettingsSynchronizer _createDefaultGreenTeaSettingsIfNecessary]
  -[NMSMediaSettingsSynchronizer dealloc]
  -[NMSMediaSettingsSynchronizer _podcastsUserDefaults]
  -[NMSMediaSettingsSynchronizer observeValueForKeyPath:ofObject:change:context:]
  -[NMSMediaSettingsSynchronizer _preferredGreenTeaMusicStreamingResolutionPreference]


NMSMediaSyncInfoUpdaterOperation : MPAsyncOperation
 @property  NSDictionary *syncInfo

  // class methods
  +[NMSMediaSyncInfoUpdaterOperation sharedLibraryRequestQueue]

  // instance methods
  -[NMSMediaSyncInfoUpdaterOperation .cxx_destruct]
  -[NMSMediaSyncInfoUpdaterOperation execute]
  -[NMSMediaSyncInfoUpdaterOperation _fetchRequestForSyncInfoWithFetchRequest:]
  -[NMSMediaSyncInfoUpdaterOperation _updatePodcastsSyncInfo:forEpisode:withDownloadInfoIdentifiers:]
  -[NMSMediaSyncInfoUpdaterOperation _fetchRequestForSyncInfoWithPredicate:]
  -[NMSMediaSyncInfoUpdaterOperation syncInfo]


NMSMediaSyncInfoUpdater : NSObject <MTDBExtensionAccessObserver, ATAssetLinkControllerObserver>
 @property  NSPersistentHistoryToken *lastToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSMediaSyncInfoUpdater sharedMediaSyncInfoUpdater]

  // instance methods
  -[NMSMediaSyncInfoUpdater assetLinkController:didUpdateAsset:]
  -[NMSMediaSyncInfoUpdater .cxx_destruct]
  -[NMSMediaSyncInfoUpdater assetLinkController:didEnqueueAsset:]
  -[NMSMediaSyncInfoUpdater init]
  -[NMSMediaSyncInfoUpdater assetLinkController:didFinishAsset:]
  -[NMSMediaSyncInfoUpdater _handleMediaLibraryEntitiesAddedOrRemovedNotification:]
  -[NMSMediaSyncInfoUpdater assetLinkController:didUpdateAssetState:]
  -[NMSMediaSyncInfoUpdater _handleMediaPinningMusicContentsInvalidatedNotification:]
  -[NMSMediaSyncInfoUpdater _handleMediaPinningPodcastsContentsInvalidatedNotification:]
  -[NMSMediaSyncInfoUpdater _handleMediaPinningAudiobooksContentsInvalidatedNotification:]
  -[NMSMediaSyncInfoUpdater extensionAccessDidChange]
  -[NMSMediaSyncInfoUpdater _handleMusicRecommendationsDidUpdateNotification:]
  -[NMSMediaSyncInfoUpdater lastToken]
  -[NMSMediaSyncInfoUpdater _resetPersistentHistoryTokenAndNotifyObservers]
  -[NMSMediaSyncInfoUpdater _handlePersistentStoreRemoteChangeNotification:]
  -[NMSMediaSyncInfoUpdater _setNeedsMediaSyncInfoUpdate]
  -[NMSMediaSyncInfoUpdater _lastTokenCachePath]
  -[NMSMediaSyncInfoUpdater setLastToken:]
  -[NMSMediaSyncInfoUpdater _didFindRelevantChangesForTransaction:]
  -[NMSMediaSyncInfoUpdater _applyUpdatesFromAsset:]
  -[NMSMediaSyncInfoUpdater _relevantEpisodeProperties]
  -[NMSMediaSyncInfoUpdater _changeContainsRelevantEpisodeChanges:]
  -[NMSMediaSyncInfoUpdater beginUpdatingSyncInfo]
  -[NMSMediaSyncInfoUpdater endUpdatingSyncInfo]


NMSAudiobookCacheItemMetadata : NSObject
 @property  double cachedStartTime
 @property  double cachedDuration

  // class methods
  +[NMSAudiobookCacheItemMetadata metaDataForMediaItem:]

  // instance methods
  -[NMSAudiobookCacheItemMetadata _loadForMediaItem:]
  -[NMSAudiobookCacheItemMetadata _baseDirectoryForMediaItem:]
  -[NMSAudiobookCacheItemMetadata setCachedStartTime:]
  -[NMSAudiobookCacheItemMetadata setCachedDuration:]
  -[NMSAudiobookCacheItemMetadata cachedStartTime]
  -[NMSAudiobookCacheItemMetadata cachedDuration]


NMSMediaContainerQuotaData : NSObject
 @property  unsigned long numItemsAdded
 @property  BOOL hasSkippedItems
 @property  BOOL hasRemovedItems
 @property  id quotaRefObj
 @property  BOOL hasItemsAboveQuota

  // instance methods
  -[NMSMediaContainerQuotaData .cxx_destruct]
  -[NMSMediaContainerQuotaData hasItemsAboveQuota]
  -[NMSMediaContainerQuotaData quotaRefObj]
  -[NMSMediaContainerQuotaData numItemsAdded]
  -[NMSMediaContainerQuotaData setHasSkippedItems:]
  -[NMSMediaContainerQuotaData setHasRemovedItems:]
  -[NMSMediaContainerQuotaData setNumItemsAdded:]
  -[NMSMediaContainerQuotaData hasSkippedItems]
  -[NMSMediaContainerQuotaData hasRemovedItems]
  -[NMSMediaContainerQuotaData setQuotaRefObj:]


NMSPodcastReferenceObject : NSObject
 @property  NSString *feedURL
 @property  unsigned long episodeLimit
 @property  unsigned long downloadOrder

  // instance methods
  -[NMSPodcastReferenceObject .cxx_destruct]
  -[NMSPodcastReferenceObject feedURL]
  -[NMSPodcastReferenceObject isEqual:]
  -[NMSPodcastReferenceObject initWithFeedURL:episodeLimit:downloadOrder:]
  -[NMSPodcastReferenceObject episodeLimit]
  -[NMSPodcastReferenceObject downloadOrder]
  -[NMSPodcastReferenceObject initWithFeedURL:downloadOrder:]
  -[NMSPodcastReferenceObject predicatesForFeedURL]
  -[NMSPodcastReferenceObject setEpisodeLimit:]


NMSPodcastUpNextMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastUpNextMediaItemGroup itemList]
  -[NMSPodcastUpNextMediaItemGroup .cxx_destruct]
  -[NMSPodcastUpNextMediaItemGroup identifiersForContainerType:]
  -[NMSPodcastUpNextMediaItemGroup _upNextFeedURLs]
  -[NMSPodcastUpNextMediaItemGroup _upNextEpisodes]


NMSPodcastSavedEpisodesMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastSavedEpisodesMediaItemGroup itemList]
  -[NMSPodcastSavedEpisodesMediaItemGroup identifiersForContainerType:]


NMSPodcastCustomShowMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastCustomShowMediaItemGroup itemList]
  -[NMSPodcastCustomShowMediaItemGroup identifiersForContainerType:]


NMSPodcastStationMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastStationMediaItemGroup itemList]
  -[NMSPodcastStationMediaItemGroup identifiersForContainerType:]


NMSPodcastMediaItemGroup_legacy : NMSMediaItemGroup
  // class methods
  +[NMSPodcastMediaItemGroup_legacy _sharedPodcastSizeCache]

  // instance methods
  -[NMSPodcastMediaItemGroup_legacy itemList]
  -[NMSPodcastMediaItemGroup_legacy identifiersForContainerType:]


NMSPodcastStationMediaItemGroup_legacy : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastStationMediaItemGroup_legacy itemList]
  -[NMSPodcastStationMediaItemGroup_legacy identifiersForContainerType:]


NMSSyncedMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSSyncedMediaItemGroup identifiersForContainerType:]


NMSRecommendationMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSRecommendationMediaItemGroup itemList]
  -[NMSRecommendationMediaItemGroup recommendation]
  -[NMSRecommendationMediaItemGroup isEstimate]
  -[NMSRecommendationMediaItemGroup identifiersForContainerType:]
  -[NMSRecommendationMediaItemGroup _fetchDownloadInfoForItems:]


NMSAudiobookReferenceObject : NSObject
 @property  NSNumber *audiobookIdentifier
 @property  unsigned long downloadLimit

  // instance methods
  -[NMSAudiobookReferenceObject .cxx_destruct]
  -[NMSAudiobookReferenceObject isEqual:]
  -[NMSAudiobookReferenceObject audiobookIdentifier]
  -[NMSAudiobookReferenceObject downloadLimit]
  -[NMSAudiobookReferenceObject initWithAudiobookIdentifier:downloadLimit:]
  -[NMSAudiobookReferenceObject audiobookMediaItem]
  -[NMSAudiobookReferenceObject setDownloadLimit:]


NMSAudiobooksMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSAudiobooksMediaItemGroup itemList]
  -[NMSAudiobooksMediaItemGroup identifiersForContainerType:]


NMSMediaItemGroup : NSObject
 @property  unsigned long type
 @property  id referenceObj
 @property  NMSMediaContainerQuotaData *quotaData
 @property  BOOL manuallyAdded
 @property  BOOL isEstimate
 @property  BOOL downloadedItemsOnly

  // class methods
  +[NMSMediaItemGroup itemGroupWithSyncedPlaylistID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithSyncedAlbumID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithRecommendation:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithPodcastStationUUID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithPodcastFeedURL:downloadOrder:episodeLimit:manuallyAdded:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithUpNextEpisodesDownloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithSavedEpisodesDownloadedItemsOnly:]
  +[NMSMediaItemGroup new_itemGroupWithPodcastStationUUID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithCustomPodcastFeedURL:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithAudiobookIdentifier:downloadLimit:manuallyAdded:downloadedItemsOnly:]
  +[NMSMediaItemGroup sharedLibraryRequestQueue]
  +[NMSMediaItemGroup _itemsForContainerClass:containerIDs:includingNonLibraryContent:includingDownloadedContentOnly:manuallyAdded:]
  +[NMSMediaItemGroup itemGroupWithQuotaRefObj:]

  // instance methods
  -[NMSMediaItemGroup itemList]
  -[NMSMediaItemGroup setType:]
  -[NMSMediaItemGroup .cxx_destruct]
  -[NMSMediaItemGroup identifiers]
  -[NMSMediaItemGroup isEqual:]
  -[NMSMediaItemGroup type]
  -[NMSMediaItemGroup isEqualToContainer:]
  -[NMSMediaItemGroup isEstimate]
  -[NMSMediaItemGroup quotaData]
  -[NMSMediaItemGroup manuallyAdded]
  -[NMSMediaItemGroup identifiersForContainerType:]
  -[NMSMediaItemGroup downloadedItemsOnly]
  -[NMSMediaItemGroup referenceObj]
  -[NMSMediaItemGroup initWithType:refObj:manuallyAdded:quotaRefObj:downloadedItemsOnly:]
  -[NMSMediaItemGroup setReferenceObj:]
  -[NMSMediaItemGroup setQuotaData:]
  -[NMSMediaItemGroup setManuallyAdded:]
  -[NMSMediaItemGroup setDownloadedItemsOnly:]


NMSModelEditorialRecommendationsRequest : MPModelStoreBrowseRequest
 @property  BOOL nms_useCachedDataOnly
 @property  id nms_cachedLoadedOutput

  // instance methods
  -[NMSModelEditorialRecommendationsRequest newOperationWithResponseHandler:]
  -[NMSModelEditorialRecommendationsRequest .cxx_destruct]
  -[NMSModelEditorialRecommendationsRequest copyWithZone:]
  -[NMSModelEditorialRecommendationsRequest nms_cachedLoadedOutput]
  -[NMSModelEditorialRecommendationsRequest setNms_useCachedDataOnly:]
  -[NMSModelEditorialRecommendationsRequest setNms_cachedLoadedOutput:]
  -[NMSModelEditorialRecommendationsRequest nms_useCachedDataOnly]


NMSModelEditorialRecommendationsRequestOperation : MPModelStoreBrowseRequestOperation
  // instance methods
  -[NMSModelEditorialRecommendationsRequestOperation execute]
  -[NMSModelEditorialRecommendationsRequestOperation configurationForLoadingModelDataWithStoreURLBag:error:]
  -[NMSModelEditorialRecommendationsRequestOperation produceResponseWithLoadedOutput:completion:]


NMSMediaSyncServiceRemoveMedia : PBCodable <NSCopying>
 @property  BOOL hasDataMultiverseID
 @property  NSData *dataMultiverseID
 @property  BOOL hasTargetPersistentID
 @property  long long targetPersistentID
 @property  BOOL hasContainerType
 @property  int containerType

  // instance methods
  -[NMSMediaSyncServiceRemoveMedia mergeFrom:]
  -[NMSMediaSyncServiceRemoveMedia .cxx_destruct]
  -[NMSMediaSyncServiceRemoveMedia hasContainerType]
  -[NMSMediaSyncServiceRemoveMedia setContainerType:]
  -[NMSMediaSyncServiceRemoveMedia dictionaryRepresentation]
  -[NMSMediaSyncServiceRemoveMedia writeTo:]
  -[NMSMediaSyncServiceRemoveMedia isEqual:]
  -[NMSMediaSyncServiceRemoveMedia copyTo:]
  -[NMSMediaSyncServiceRemoveMedia readFrom:]
  -[NMSMediaSyncServiceRemoveMedia setHasContainerType:]
  -[NMSMediaSyncServiceRemoveMedia containerTypeAsString:]
  -[NMSMediaSyncServiceRemoveMedia StringAsContainerType:]
  -[NMSMediaSyncServiceRemoveMedia containerType]
  -[NMSMediaSyncServiceRemoveMedia copyWithZone:]
  -[NMSMediaSyncServiceRemoveMedia setDataMultiverseID:]
  -[NMSMediaSyncServiceRemoveMedia hasDataMultiverseID]
  -[NMSMediaSyncServiceRemoveMedia dataMultiverseID]
  -[NMSMediaSyncServiceRemoveMedia setTargetPersistentID:]
  -[NMSMediaSyncServiceRemoveMedia setHasTargetPersistentID:]
  -[NMSMediaSyncServiceRemoveMedia hasTargetPersistentID]
  -[NMSMediaSyncServiceRemoveMedia targetPersistentID]


NMSAppActivityStatus : NSObject
 @property  NSString *bundleID

  // instance methods
  -[NMSAppActivityStatus initWithBundleID:]
  -[NMSAppActivityStatus bundleID]
  -[NMSAppActivityStatus .cxx_destruct]
  -[NMSAppActivityStatus isAppContentDormant]
  -[NMSAppActivityStatus _exceedsDormancyIntervalForDate:]
  -[NMSAppActivityStatus isAppDownloadingDormant]
  -[NMSAppActivityStatus isAppDormant]


NMSNotificationDispatcher : NSObject
 @property  NSString *baseNotificationName
 @property  <NMSNotificationDispatcherDelegate> *delegate

  // instance methods
  -[NMSNotificationDispatcher baseNotificationName]
  -[NMSNotificationDispatcher endWaitingForUpdates]
  -[NMSNotificationDispatcher _handleRemoteNotification]
  -[NMSNotificationDispatcher .cxx_destruct]
  -[NMSNotificationDispatcher scheduleLocalDarwinNotification]
  -[NMSNotificationDispatcher setDelegate:]
  -[NMSNotificationDispatcher _postLocalDarwinNotification]
  -[NMSNotificationDispatcher initWithNotificationName:]
  -[NMSNotificationDispatcher delegate]
  -[NMSNotificationDispatcher _handleLocalNotificationIgnoringSenderPID:]
  -[NMSNotificationDispatcher dealloc]
  -[NMSNotificationDispatcher beginWaitingForUpdates]


NMSSubscriptionManager : NSObject <ICEnvironmentMonitorObserver>
 @property  long long subscriptionType
 @property  unsigned long subscriptionCapabilities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSSubscriptionManager sharedManager]

  // instance methods
  -[NMSSubscriptionManager environmentMonitorDidChangeNetworkReachability:]
  -[NMSSubscriptionManager hasCapability:]
  -[NMSSubscriptionManager subscriptionType]
  -[NMSSubscriptionManager _handleAccountStoreDidChangeNotification:]
  -[NMSSubscriptionManager .cxx_destruct]
  -[NMSSubscriptionManager init]
  -[NMSSubscriptionManager _handleSubscriptionStatusDidChangeNotification:]
  -[NMSSubscriptionManager _updateActiveAccount]
  -[NMSSubscriptionManager subscriptionCapabilities]
  -[NMSSubscriptionManager _updateSubscriptionStatus]
  -[NMSSubscriptionManager _retrySubscriptionStatusRequest]


NMSPodcastsDownloadableContentController : NSObject <MTDBExtensionAccessObserver>
 @property  NSPersistentHistoryToken *lastMergedToken
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL delegateNotificationPending
 @property  <NMSPodcastsDownloadableContentControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NMSPodcastsDownloadableContentController _ctx]
  -[NMSPodcastsDownloadableContentController .cxx_destruct]
  -[NMSPodcastsDownloadableContentController setDelegate:]
  -[NMSPodcastsDownloadableContentController init]
  -[NMSPodcastsDownloadableContentController setQueue:]
  -[NMSPodcastsDownloadableContentController delegate]
  -[NMSPodcastsDownloadableContentController queue]
  -[NMSPodcastsDownloadableContentController _handlePodcastSizeInfoDidChangeNotification:]
  -[NMSPodcastsDownloadableContentController _handlePodcastsPinningSelectionsDidChangeNotification:]
  -[NMSPodcastsDownloadableContentController extensionAccessDidChange]
  -[NMSPodcastsDownloadableContentController _resetPersistentHistoryTokenAndNotifyObservers]
  -[NMSPodcastsDownloadableContentController _handlePersistentStoreRemoteChangeNotification:]
  -[NMSPodcastsDownloadableContentController _relevantEpisodeProperties]
  -[NMSPodcastsDownloadableContentController _changeContainsRelevantEpisodeChanges:]
  -[NMSPodcastsDownloadableContentController setDelegateNotificationPending:]
  -[NMSPodcastsDownloadableContentController lastMergedToken]
  -[NMSPodcastsDownloadableContentController _notifyDelegateContentDidChange]
  -[NMSPodcastsDownloadableContentController _relevantShowProperties]
  -[NMSPodcastsDownloadableContentController _relevantStationProperties]
  -[NMSPodcastsDownloadableContentController _relevantChannelProperties]
  -[NMSPodcastsDownloadableContentController _changeContainsRelevantShowChanges:]
  -[NMSPodcastsDownloadableContentController _changeContainsRelevantStationChanges:]
  -[NMSPodcastsDownloadableContentController _changeContainsRelevantChannelChanges:]
  -[NMSPodcastsDownloadableContentController delegateNotificationPending]
  -[NMSPodcastsDownloadableContentController _notifyDelegateContentDidChangeImmediately]
  -[NMSPodcastsDownloadableContentController setLastMergedToken:]
  -[NMSPodcastsDownloadableContentController _shouldMergeHistoryTransaction:]


NMSMusicRecommendation : NSObject <NSCopying>
 @property  NSOrderedSet *items
 @property  NSString *identifier
 @property  NSString *title
 @property  NSDate *lastModifiedDate
 @property  MPArtworkCatalog *artworkCatalog
 @property  BOOL selected
 @property  unsigned long type
 @property  NSArray *storeRecommendationModelObjects

  // class methods
  +[NMSMusicRecommendation _fillArtworkMutableArray:toCount:]
  +[NMSMusicRecommendation _missingArtImage]

  // instance methods
  -[NMSMusicRecommendation items]
  -[NMSMusicRecommendation .cxx_destruct]
  -[NMSMusicRecommendation isEqual:]
  -[NMSMusicRecommendation setSelected:]
  -[NMSMusicRecommendation identifier]
  -[NMSMusicRecommendation isSelected]
  -[NMSMusicRecommendation title]
  -[NMSMusicRecommendation type]
  -[NMSMusicRecommendation artworkCatalog]
  -[NMSMusicRecommendation copyWithZone:]
  -[NMSMusicRecommendation lastModifiedDate]
  -[NMSMusicRecommendation initWithIdentifier:title:items:itemSectionMap:]
  -[NMSMusicRecommendation sectionForItemWithIdentifiers:]
  -[NMSMusicRecommendation initRecentMusicRecommendationWithItems:itemSectionMap:]
  -[NMSMusicRecommendation nms_isRecentMusic]
  -[NMSMusicRecommendation recommendationSectionTypeForModelObject:]
  -[NMSMusicRecommendation _tiledArtworkRequestForPlaylists:albums:]
  -[NMSMusicRecommendation storeRecommendationModelObjects]


NMSSyncProgressInfo : NSObject
 @property  NSString *assetType
 @property  unsigned long syncState
 @property  unsigned long syncWaitingSubstate
 @property  float estimatedSyncProgress
 @property  long long numberOfAssetItems
 @property  long long numberOfAssetItemsSynced
 @property  long long numberOfAssetItemsNeedingDownload
 @property  unsigned long aggregateAssetItemBytesAdded

  // class methods
  +[NMSSyncProgressInfo _stringFromSyncState:]
  +[NMSSyncProgressInfo _stringFromWaitingSubstate:]

  // instance methods
  -[NMSSyncProgressInfo assetType]
  -[NMSSyncProgressInfo setSyncState:]
  -[NMSSyncProgressInfo setAssetType:]
  -[NMSSyncProgressInfo .cxx_destruct]
  -[NMSSyncProgressInfo syncState]
  -[NMSSyncProgressInfo syncWaitingSubstate]
  -[NMSSyncProgressInfo setSyncWaitingSubstate:]
  -[NMSSyncProgressInfo estimatedSyncProgress]
  -[NMSSyncProgressInfo setEstimatedSyncProgress:]
  -[NMSSyncProgressInfo numberOfAssetItems]
  -[NMSSyncProgressInfo setNumberOfAssetItems:]
  -[NMSSyncProgressInfo numberOfAssetItemsSynced]
  -[NMSSyncProgressInfo setNumberOfAssetItemsSynced:]
  -[NMSSyncProgressInfo numberOfAssetItemsNeedingDownload]
  -[NMSSyncProgressInfo setNumberOfAssetItemsNeedingDownload:]
  -[NMSSyncProgressInfo aggregateAssetItemBytesAdded]
  -[NMSSyncProgressInfo setAggregateAssetItemBytesAdded:]


NMSSyncStatesDict : NSObject <NSCopying>
  // class methods
  +[NMSSyncStatesDict assetTypeForMediaType:]
  +[NMSSyncStatesDict mediaTypeForAssetType:]

  // instance methods
  -[NMSSyncStatesDict .cxx_destruct]
  -[NMSSyncStatesDict init]
  -[NMSSyncStatesDict copyWithZone:]
  -[NMSSyncStatesDict setWaitingSubstate:forMediaType:]
  -[NMSSyncStatesDict setSyncState:forMediaType:]
  -[NMSSyncStatesDict setSyncStateForAllMediaTypes:]
  -[NMSSyncStatesDict setWaitingSubstateForAllMediaTypes:]
  -[NMSSyncStatesDict syncStateForMediaType:]
  -[NMSSyncStatesDict waitingSubstateForMediaType:]
  -[NMSSyncStatesDict syncStateDictionaryRepresentation]
  -[NMSSyncStatesDict waitingSubstateDictionaryRepresentation]


NMSSyncManager : NSObject <ATSessionObserver>
 @property  id activeSyncSessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSSyncManager sharedManager]
  +[NMSSyncManager _mediaTypeForAssetType:]
  +[NMSSyncManager _gizmoSyncStates]
  +[NMSSyncManager _syncStateForProgressInfo:session:]
  +[NMSSyncManager _syncWaitingSubstateForProgressInfo:]

  // instance methods
  -[NMSSyncManager session:willBeginSessionTask:]
  -[NMSSyncManager sessionDidFinish:]
  -[NMSSyncManager .cxx_destruct]
  -[NMSSyncManager session:didBeginSessionTask:]
  -[NMSSyncManager init]
  -[NMSSyncManager session:didUpdateSessionTask:]
  -[NMSSyncManager dealloc]
  -[NMSSyncManager sessionWillBegin:]
  -[NMSSyncManager session:didFinishSessionTask:]
  -[NMSSyncManager _defaultProgressInfoDict]
  -[NMSSyncManager _updateSyncProgress]
  -[NMSSyncManager _updateObservedSyncSession]
  -[NMSSyncManager _handleSyncStateDidChangeNotification]
  -[NMSSyncManager _defaultSyncProgressInfoForAssetType:]
  -[NMSSyncManager _aggregateAssetItemBytesAddedForMediaType:]
  -[NMSSyncManager _assetTypeForMediaType:]
  -[NMSSyncManager _syncProgressInfoByAssetType:]
  -[NMSSyncManager progressInfoForMediaType:]
  -[NMSSyncManager _addedTracksQueryForMediaType:]
  -[NMSSyncManager _estimatedAssetAggregateItemSizeInBytesWithQuery:]
  -[NMSSyncManager _invokeOnMainThread:]
  -[NMSSyncManager _stopObservingSyncSession]
  -[NMSSyncManager _startObservingSyncSession]
  -[NMSSyncManager _updateProgressInfoForAssetType:assetItemsTotal:assetItemsSyncedForSyncSession:bytesToSyncTotal:bytesSyncedThisSyncSession:]
  -[NMSSyncManager _numberOfItemsNeedingDownloadForAssetType:]
  -[NMSSyncManager _addedTracksPredicateForMediaType:]
  -[NMSSyncManager _tracksQueryWithPredicate:]
  -[NMSSyncManager _tracksPredicateWithPersistentIDs:]
  -[NMSSyncManager musicProgressInfo]
  -[NMSSyncManager podcastsProgressInfo]
  -[NMSSyncManager audiobooksProgressInfo]
  -[NMSSyncManager beginReceivingSyncProgressUpdates]
  -[NMSSyncManager activeSyncSessionIdentifier]
  -[NMSSyncManager setActiveSyncSessionIdentifier:]


NMSPodcastIdentifierSet : NSObject <NSCopying>
 @property  NSNumber *storeID
 @property  NSString *feedURL

  // instance methods
  -[NMSPodcastIdentifierSet storeID]
  -[NMSPodcastIdentifierSet .cxx_destruct]
  -[NMSPodcastIdentifierSet dictionaryRepresentation]
  -[NMSPodcastIdentifierSet feedURL]
  -[NMSPodcastIdentifierSet isEqual:]
  -[NMSPodcastIdentifierSet initWithDictionary:]
  -[NMSPodcastIdentifierSet copyWithZone:]
  -[NMSPodcastIdentifierSet initWithStoreID:feedURL:]
  -[NMSPodcastIdentifierSet isEqualToPodcastIdentifierSet:]


MPModelPlaylist(LastUpdatedString)
	// instance methods
	-[MPModelPlaylist(LastUpdatedString) _stringForDayOfWeek:compact:]
	-[MPModelPlaylist(LastUpdatedString) nms_lastUpdatedString]
	-[MPModelPlaylist(LastUpdatedString) nms_compactLastUpdatedString]
	-[MPModelPlaylist(LastUpdatedString) nms_shouldShowLastUpdatedString]

MPModelObject(NanoMusicSync)
	// instance methods
	-[MPModelObject(NanoMusicSync) nms_originalIdentifierSetHasNoLibraryPersistentID]
	-[MPModelObject(NanoMusicSync) nms_recommendationObject]
	-[MPModelObject(NanoMusicSync) nms_syncInfoContainerIdentifier]
	-[MPModelObject(NanoMusicSync) nms_setRecommendationObject:]

MPIdentifierSet(NanoMusicSync)
	// instance methods
	-[MPIdentifierSet(NanoMusicSync) nms_universalStoreLookupID]
	-[MPIdentifierSet(NanoMusicSync) nms_syncInfoPlaylistIdentifier]
	-[MPIdentifierSet(NanoMusicSync) nms_syncInfoAlbumIdentifier]

MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest)
	// instance methods
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_cachedRecommendationsArray]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_cachedStoreItemMetadataResults]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_setCachedRecommendationsArray:]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_setCachedStoreItemMetadataResults:]

MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest)
	// instance methods
	-[MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest) nms_cachedLoadedOutput]
	-[MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest) nms_setCachedLoadedOutput:]

NSBundle(NMSAdditions)
	// class methods
	+[NSBundle(NMSAdditions) nanoMusicSyncBundle]

MIPMultiverseIdentifier(NanoMusicSync)
	// class methods
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromPlaylistPID:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromPlaylistPIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromAlbumPIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) pidsFromMIDDataArray:]
	+[MIPMultiverseIdentifier(NanoMusicSync) pidFromMIDData:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromAlbumPID:]
	+[MIPMultiverseIdentifier(NanoMusicSync) _pidsFromSyncIDs:containerClass:]
	+[MIPMultiverseIdentifier(NanoMusicSync) _multiverseIdentifiersWithPIDs:groupingType:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromPlaylistSyncIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromAlbumSyncIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromPlaylistSyncID:]

01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0300 /System/Library/PrivateFrameworks/ATFoundation.framework/ATFoundation: ATAssetLinkController 
01 00 0100 /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic: ATConnection 
01 00 0100 /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic: ATSession 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICAgeVerificationManager 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICEnvironmentMonitor 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICMusicSubscriptionStatusController 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICStoreRequestContext 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICURLBagProvider 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICUserIdentity 
01 00 0500 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 0500 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: MIPMultiverseIdentifier 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Album 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3AllCompoundPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ComparisonPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Container 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ContainmentPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ContainsPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3MusicLibrary 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3PersistentIDsPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Track 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPArtworkCatalog 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPArtworkRepresentation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPAsyncOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPIdentifierSet 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaContainmentPredicate 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaLibrary 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelAlbum 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelAlbumKind 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationGroup 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryImportChangeRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryKeepLocalChangeRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelObject 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylist 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylistEntry 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylistKind 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPodcast 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPodcastEpisode 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelSong 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseSection 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMutableSectionedCollection 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreItemMetadata 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreItemMetadataResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequestConfiguration 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelSongBuilder 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPTiledArtworkDataSource 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPTiledArtworkRequest 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTDB 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTDBExtensionAccess 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTEpisode 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIHeavyRotationRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIStarterPackMultiplexRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIURLRequest 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
