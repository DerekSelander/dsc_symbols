|| __DATA.__data _NMSMPModelPlaylistVariantsNonFolder
|| __DATA.__data _NMSRecommendationRecentMusicIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAlternatingMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSAppActivityStatus
|| __DATA.__objc_data _OBJC_CLASS_$_NMSDaemonPlugin
|| __DATA.__objc_data _OBJC_CLASS_$_NMSDownloadableItem
|| __DATA.__objc_data _OBJC_CLASS_$_NMSGreenTeaStreamingDefaults
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestLocal
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestProxy
|| __DATA.__objc_data _OBJC_CLASS_$_NMSKeepLocalRequestValidator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaContainerQuotaData
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaDownloadInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaItemGroup
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaQuotaManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaQuotaManager_Legacy
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaSyncInfoUpdaterHeartbeat
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMediaSyncService
|| __DATA.__objc_data _OBJC_CLASS_$_NMSModelRecommendationsLibraryRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NMSMusicRecommendation
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPartialDownloadableItem
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPodcastIdentifierSet
|| __DATA.__objc_data _OBJC_CLASS_$_NMSPodcastsFetchRequests
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSequentialMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_CLASS_$_NMSStoreModelLookupRequest
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncProgressInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NMSSyncStatesDict
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAlternatingMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSAppActivityStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSDaemonPlugin
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSDownloadableItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSGreenTeaStreamingDefaults
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestLocal
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSKeepLocalRequestValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaContainerQuotaData
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaDownloadInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaItemGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaQuotaManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaQuotaManager_Legacy
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaSyncInfoUpdaterHeartbeat
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMediaSyncService
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSModelRecommendationsLibraryRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSMusicRecommendation
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPartialDownloadableItem
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPodcastIdentifierSet
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSPodcastsFetchRequests
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSequentialMediaItemGroupIterator
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSStoreModelLookupRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncProgressInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NMSSyncStatesDict
|| __DATA_CONST.__const _NMSAccountInfoActiveAccountDidChangeNotification
|| __DATA_CONST.__const _NMSActiveAccountDidChangeNotification
|| __DATA_CONST.__const _NMSFeedURLKey
|| __DATA_CONST.__const _NMSGreenTeaMusicAllowsCellularForHQStreamingKey
|| __DATA_CONST.__const _NMSGreenTeaMusicAllowsCellularForStreamingKey
|| __DATA_CONST.__const _NMSGreenTeaMusicAllowsDownloadsOverCellularKey
|| __DATA_CONST.__const _NMSGreenTeaMusicIsMirroringStreamingSettingsKey
|| __DATA_CONST.__const _NMSGreenTeaMusicStreamingDefaultsDomain
|| __DATA_CONST.__const _NMSMediaPinningAudiobooksContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerAudiobooksIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerDownloadInfoDidInvalidateNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerMusicIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningManagerPodcastsIdentifiersDidChangeNotification
|| __DATA_CONST.__const _NMSMediaPinningMusicContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaPinningPodcastsContentsInvalidatedNotification
|| __DATA_CONST.__const _NMSMediaSyncInfoDidUpdateNotification
|| __DATA_CONST.__const _NMSMusicRecommendationArtworkDidUpdateNotification
|| __DATA_CONST.__const _NMSMusicRecommendationsDidUpdateNotification
|| __DATA_CONST.__const _NMSNotificationUserInfoKeyIsInProcessNotification
|| __DATA_CONST.__const _NMSPodcastSizeCacheDidUpdateNotification
|| __DATA_CONST.__const _NMSStoreIDKey
|| __DATA_CONST.__const _NMSSubscriptionStatusDidChangeNotification
|| __DATA_CONST.__const _NMSSyncManagerSyncStateDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsAudiobooksPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsAudiobooksRecommendationsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsDebugAutomaticDownloadsQuotaKey
|| __DATA_CONST.__const _NMSyncDefaultsMusicPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsPinningSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsSavedEpisodesDownloadSettingsKey
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsShowDownloadSettingsKey
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsSizeInfoDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsStationDownloadSettingsKey
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsSubscriptionMetadataDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsPodcastsUpNextDownloadSettingsKey
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationLibraryContentsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationSelectionsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsRecommendationStoreContentsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncInfoDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncInfoRequestDateDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncSettingsDidChangeNotification
|| __DATA_CONST.__const _NMSyncDefaultsSyncStateDidChangeNotification
|| __DATA_CONST.__const _NMSyncPreferencesDidChangeLocallyNotification
|| __DATA_CONST.__const _NMSyncPreferencesDidChangeRemotelyNotification
|| __DATA_CONST.__const _kNMSMediaSyncInfoSavedEpisodesIdentifier
|| __DATA_CONST.__const _kNMSMediaSyncInfoUpNextIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSEpisodeSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaPinningManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaSettingsSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMusicRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMutableMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSMutablePodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPathUtil
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeEstimation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSPodcastsDownloadSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSRecommendationArtworkDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSSubscriptionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NMSyncDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSEpisodeSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaPinningManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaSettingsSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMusicRecommendationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMutableMediaSyncInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSMutablePodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPathUtil
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeEstimation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastSizeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSPodcastsDownloadSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSRecommendationArtworkDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSSubscriptionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NMSyncDefaults
|| __TEXT.__const _NMSPodcastsAutomaticNumberOfEpisodes
|| __TEXT.__const _NMSPodcastsAutomaticNumberOfEpisodesForUpNext
|| __TEXT.__text _NMSKeepLocalRequestValidatorExceptionString
|| __TEXT.__text _NMSPinningStatusIsPinned
|| __TEXT.__text _NMSPinningStatusIsRecentMusicPinned
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AirTraffic: _ATSessionTypeDeviceSync
__ AirTraffic: _ATSessionsDidChangeNotification
__ AirTraffic: _OBJC_CLASS_$_ATConnection
__ AirTraffic: _OBJC_CLASS_$_ATSession
__ AirTrafficDevice: _ATDeviceSyncSessionAssetTaskGroupingKey
__ AppSupport: _CPSharedResourcesDirectory
__ AppleMediaServices: _AMSError
__ CoreData: _NSPersistentHistoryTokenKey
__ CoreData: _NSPersistentStoreRemoteChangeNotification
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFPreferencesAppSynchronizeWithContainer
__ CoreFoundation: __CFPreferencesSetAppValueWithContainer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreTelephony: __CTServerConnectionAddIdentifierException
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionGetCellularUsagePolicyMirroring
__ CoreTelephony: _kCTCellularUsageDeviceID
__ CoreTelephony: _kCTCellularUsageRemoteDevice
__ Foundation: _NSIntersectionRange
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionExpectsPeerResponseKey
__ IDS: _IDSSendMessageOptionForceLocalDeliveryKey
__ IDS: _IDSSendMessageOptionPeerResponseIdentifierKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSProtobuf
__ IDS: _OBJC_CLASS_$_IDSService
__ MediaPlayer: _MPMediaItemPropertyBitRate
__ MediaPlayer: _MPMediaItemPropertyBookmarkTime
__ MediaPlayer: _MPMediaItemPropertyPlaybackDuration
__ MediaPlayer: _MPMediaItemPropertyStoreID
__ MediaPlayer: _MPMediaLibraryDidChangeNotification
__ MediaPlayer: _MPMediaLibraryEntitiesAddedOrRemovedNotification
__ MediaPlayer: _MPMediaPlaylistPropertyName
__ MediaPlayer: _MPMediaPlaylistPropertyPersistentID
__ MediaPlayer: _MPModelPropertyAlbumArtwork
__ MediaPlayer: _MPModelPropertyAlbumKeepLocalEnableState
__ MediaPlayer: _MPModelPropertyAlbumTitle
__ MediaPlayer: _MPModelPropertyArtistName
__ MediaPlayer: _MPModelPropertyFileAssetFileSize
__ MediaPlayer: _MPModelPropertyPlaylistArtwork
__ MediaPlayer: _MPModelPropertyPlaylistKeepLocalEnableState
__ MediaPlayer: _MPModelPropertyPlaylistName
__ MediaPlayer: _MPModelPropertyPlaylistTracksTiledArtwork
__ MediaPlayer: _MPModelPropertySongDiscNumber
__ MediaPlayer: _MPModelPropertySongKeepLocalEnableState
__ MediaPlayer: _MPModelPropertySongTitle
__ MediaPlayer: _MPModelPropertySongTrackNumber
__ MediaPlayer: _MPModelRelationshipAlbumArtist
__ MediaPlayer: _MPModelRelationshipPlaylistEntrySong
__ MediaPlayer: _MPModelRelationshipSongLocalFileAsset
__ MediaPlayer: _MPStoreItemMetadataStringNormalizeStoreIDValue
__ MediaPlayer: _OBJC_CLASS_$_MPArtworkCatalog
__ MediaPlayer: _OBJC_CLASS_$_MPArtworkRepresentation
__ MediaPlayer: _OBJC_CLASS_$_MPAsyncOperation
__ MediaPlayer: _OBJC_CLASS_$_MPIdentifierSet
__ MediaPlayer: _OBJC_CLASS_$_MPMediaLibrary
__ MediaPlayer: _OBJC_CLASS_$_MPMediaPropertyPredicate
__ MediaPlayer: _OBJC_CLASS_$_MPMediaQuery
__ MediaPlayer: _OBJC_CLASS_$_MPModelAlbum
__ MediaPlayer: _OBJC_CLASS_$_MPModelAlbumKind
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationGroup
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPModelForYouRecommendationsResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelKind
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryImportChangeRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryKeepLocalChangeRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelLibraryResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelObject
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylist
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylistEntry
__ MediaPlayer: _OBJC_CLASS_$_MPModelPlaylistKind
__ MediaPlayer: _OBJC_CLASS_$_MPModelRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelSong
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseRequest
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseResponse
__ MediaPlayer: _OBJC_CLASS_$_MPModelStoreBrowseSection
__ MediaPlayer: _OBJC_CLASS_$_MPMutableSectionedCollection
__ MediaPlayer: _OBJC_CLASS_$_MPNetworkObserver
__ MediaPlayer: _OBJC_CLASS_$_MPPropertySet
__ MediaPlayer: _OBJC_CLASS_$_MPStoreItemMetadata
__ MediaPlayer: _OBJC_CLASS_$_MPStoreItemMetadataResponse
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequest
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequestConfiguration
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelRequestOperation
__ MediaPlayer: _OBJC_CLASS_$_MPStoreModelSongBuilder
__ MediaPlayer: _OBJC_CLASS_$_MPTiledArtworkDataSource
__ MediaPlayer: _OBJC_CLASS_$_MPTiledArtworkRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPAsyncOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPModelForYouRecommendationsRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelForYouRecommendationsRequestOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPModelLibraryRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelLibraryResponse
__ MediaPlayer: _OBJC_METACLASS_$_MPModelStoreBrowseRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPModelStoreBrowseRequestOperation
__ MediaPlayer: _OBJC_METACLASS_$_MPStoreModelRequest
__ MediaPlayer: _OBJC_METACLASS_$_MPStoreModelRequestOperation
__ MusicLibrary: _ML3AlbumPropertyDatePlayedLocal
__ MusicLibrary: _ML3AlbumPropertyName
__ MusicLibrary: _ML3AlbumPropertySyncID
__ MusicLibrary: _ML3CollectionPropertyAlbumPersistentID
__ MusicLibrary: _ML3ContainerPropertyContainerPersistentId
__ MusicLibrary: _ML3ContainerPropertyDateCreated
__ MusicLibrary: _ML3ContainerPropertyDatePlayedLocal
__ MusicLibrary: _ML3ContainerPropertyHasItems
__ MusicLibrary: _ML3ContainerPropertyIsGeniusMix
__ MusicLibrary: _ML3ContainerPropertyIsHidden
__ MusicLibrary: _ML3ContainerPropertyKeepLocal
__ MusicLibrary: _ML3ContainerPropertyKeepLocalConstraints
__ MusicLibrary: _ML3ContainerPropertyName
__ MusicLibrary: _ML3ContainerPropertySmartCriteria
__ MusicLibrary: _ML3ContainerPropertySmartIsFolder
__ MusicLibrary: _ML3ContainerPropertySmartIsGenius
__ MusicLibrary: _ML3ContainerPropertySyncId
__ MusicLibrary: _ML3EntityPropertyKeepLocalStatus
__ MusicLibrary: _ML3EntityPropertyPersistentID
__ MusicLibrary: _ML3MusicLibraryContentsDidChangeNotification
__ MusicLibrary: _ML3QueryAggregateFunctionTotal
__ MusicLibrary: _ML3TrackPropertyAlbumPersistentID
__ MusicLibrary: _ML3TrackPropertyContainerPersistentID
__ MusicLibrary: _ML3TrackPropertyDateAdded
__ MusicLibrary: _ML3TrackPropertyFeedURL
__ MusicLibrary: _ML3TrackPropertyIsPodcast
__ MusicLibrary: _ML3TrackPropertyIsVideo
__ MusicLibrary: _ML3TrackPropertyMediaType
__ MusicLibrary: _ML3TrackPropertyPlayCountUser
__ MusicLibrary: _ML3TrackPropertyTotalSize
__ MusicLibrary: _MLFrameworkBundle
__ MusicLibrary: _OBJC_CLASS_$_MIPMultiverseIdentifier
__ MusicLibrary: _OBJC_CLASS_$_ML3Album
__ MusicLibrary: _OBJC_CLASS_$_ML3AllCompoundPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3AnyCompoundPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3ComparisonPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3Container
__ MusicLibrary: _OBJC_CLASS_$_ML3ContainmentPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3ContainsPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3MusicLibrary
__ MusicLibrary: _OBJC_CLASS_$_ML3NegationPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3PersistentIDsPredicate
__ MusicLibrary: _OBJC_CLASS_$_ML3Track
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIHeavyRotationRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIStarterPackMultiplexRequest
__ NanoMediaAPI: _OBJC_CLASS_$_NMAPIURLRequest
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyGreenTeaDevice
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRDevicePropertyTotalStorage
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidBecomeActive
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairDarwinNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidPairNotification
__ NanoRegistry: _NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PodcastsFoundation: _MTLogCategoryDatabase
__ PodcastsFoundation: _OBJC_CLASS_$_MTDB
__ PodcastsFoundation: _OBJC_CLASS_$_MTDBExtensionAccess
__ PodcastsFoundation: _OBJC_CLASS_$_MTEpisode
__ PodcastsFoundation: _OBJC_CLASS_$_MTPlaylist
__ PodcastsFoundation: _OBJC_CLASS_$_MTPodcast
__ PodcastsFoundation: _kChannelSubscriptionActive
__ PodcastsFoundation: _kEpisodeBackCatalog
__ PodcastsFoundation: _kEpisodeByteSize
__ PodcastsFoundation: _kEpisodeDuration
__ PodcastsFoundation: _kEpisodeEntitlementState
__ PodcastsFoundation: _kEpisodeEpisodeNumber
__ PodcastsFoundation: _kEpisodeExplicit
__ PodcastsFoundation: _kEpisodeFlags
__ PodcastsFoundation: _kEpisodeIsHidden
__ PodcastsFoundation: _kEpisodeLevel
__ PodcastsFoundation: _kEpisodeListenNowEpisode
__ PodcastsFoundation: _kEpisodePlayState
__ PodcastsFoundation: _kEpisodePlaylists
__ PodcastsFoundation: _kEpisodePodcast
__ PodcastsFoundation: _kEpisodePodcastUuid
__ PodcastsFoundation: _kEpisodePubDate
__ PodcastsFoundation: _kEpisodeSeasonNumber
__ PodcastsFoundation: _kEpisodeTitle
__ PodcastsFoundation: _kEpisodeUserEpisode
__ PodcastsFoundation: _kEpisodeUuid
__ PodcastsFoundation: _kMTChannelEntityName
__ PodcastsFoundation: _kMTEpisodeEntityName
__ PodcastsFoundation: _kMTPlaylistEntityName
__ PodcastsFoundation: _kMTPodcastEntityName
__ PodcastsFoundation: _kPlaylistContainerOrder
__ PodcastsFoundation: _kPlaylistDefaultSettings
__ PodcastsFoundation: _kPlaylistDeletedEpisodes
__ PodcastsFoundation: _kPlaylistEpisodes
__ PodcastsFoundation: _kPlaylistHidden
__ PodcastsFoundation: _kPlaylistSettings
__ PodcastsFoundation: _kPlaylistSortOrder
__ PodcastsFoundation: _kPlaylistUnplayedCount
__ PodcastsFoundation: _kPlaylistUuid
__ PodcastsFoundation: _kPodcastAutoDownloadEnabled
__ PodcastsFoundation: _kPodcastDeletePlayedEpisodes
__ PodcastsFoundation: _kPodcastEpisodeLimit
__ PodcastsFoundation: _kPodcastEpisodes
__ PodcastsFoundation: _kPodcastFeedUrl
__ PodcastsFoundation: _kPodcastFlags
__ PodcastsFoundation: _kPodcastHidden
__ PodcastsFoundation: _kPodcastNextEpisodeUuid
__ PodcastsFoundation: _kPodcastPlaybackNewestToOldest
__ PodcastsFoundation: _kPodcastShowTypeInFeed
__ PodcastsFoundation: _kPodcastShowTypeSetting
__ PodcastsFoundation: _kPodcastSortAscending
__ PodcastsFoundation: _kPodcastSortOrder
__ PodcastsFoundation: _kPodcastUuid
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32Set
__ SoftLinking: __sl_dlopen
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIRectFill
__ iTunesCloud: _ICAgeVerificationStateDidChangeNotification
__ iTunesCloud: _ICEnvironmentNetworkTypeIsCellular
__ iTunesCloud: _ICErrorDomain
__ iTunesCloud: _ICMusicSubscriptionStatusDidChangeNotification
__ iTunesCloud: _OBJC_CLASS_$_ICAgeVerificationManager
__ iTunesCloud: _OBJC_CLASS_$_ICEnvironmentMonitor
__ iTunesCloud: _OBJC_CLASS_$_ICMusicSubscriptionStatusController
__ iTunesCloud: _OBJC_CLASS_$_ICStorageManager
__ iTunesCloud: _OBJC_CLASS_$_ICStoreRequestContext
__ iTunesCloud: _OBJC_CLASS_$_ICURLBagProvider
__ iTunesCloud: _OBJC_CLASS_$_ICUserIdentity
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_add
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pow
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NMSPodcastSizeInfo : NSObject <NSSecureCoding>
 @property  unsigned long totalSize
 @property  double totalDuration
 @property  unsigned long count

  // class methods
  +[NMSPodcastSizeInfo supportsSecureCoding]

  // instance methods
  -[NMSPodcastSizeInfo setCount:]
  -[NMSPodcastSizeInfo encodeWithCoder:]
  -[NMSPodcastSizeInfo totalDuration]
  -[NMSPodcastSizeInfo count]
  -[NMSPodcastSizeInfo isEqual:]
  -[NMSPodcastSizeInfo init]
  -[NMSPodcastSizeInfo initWithCoder:]
  -[NMSPodcastSizeInfo totalSize]
  -[NMSPodcastSizeInfo setTotalDuration:]
  -[NMSPodcastSizeInfo setTotalSize:]
  -[NMSPodcastSizeInfo sizeDurationRatio]
  -[NMSPodcastSizeInfo averageSize]


NMSPodcastSizeEstimation : NSObject
 @property  NSMutableDictionary *sizeInfoDict
 @property  BOOL empty

  // class methods
  +[NMSPodcastSizeEstimation _minimumSizeThreshold]
  +[NMSPodcastSizeEstimation _defaultEstimatedSize]
  +[NMSPodcastSizeEstimation _defaultSizeDurationRatio]

  // instance methods
  -[NMSPodcastSizeEstimation synchronize]
  -[NMSPodcastSizeEstimation .cxx_destruct]
  -[NMSPodcastSizeEstimation isEmpty]
  -[NMSPodcastSizeEstimation init]
  -[NMSPodcastSizeEstimation incrementSize:duration:forFeedURL:]
  -[NMSPodcastSizeEstimation sizeForFeedURL:duration:feedProvidedSize:]
  -[NMSPodcastSizeEstimation averageEpisodeSize]
  -[NMSPodcastSizeEstimation _adjustedSizeDurationRatio:]
  -[NMSPodcastSizeEstimation _setupFromCache]
  -[NMSPodcastSizeEstimation _cachedPodcastSizeInfoDict]
  -[NMSPodcastSizeEstimation _totalSizeDurationRatio]
  -[NMSPodcastSizeEstimation _totalAverageSize]
  -[NMSPodcastSizeEstimation sizeInfoDict]
  -[NMSPodcastSizeEstimation setSizeInfoDict:]


NMSPathUtil : NSObject
  // class methods
  +[NMSPathUtil mediaSyncInfoDirectory]
  +[NMSPathUtil podcastsDirectory]
  +[NMSPathUtil recentMusicDirectory]
  +[NMSPathUtil musicBackupDirectory]
  +[NMSPathUtil _nanoMusicSyncDirectory]


NMLogAction : NSObject
 @property  NSString *logMessage

  // instance methods
  -[NMLogAction logMessage]


NMGenericMessageLogAction : NMLogAction
  // class methods
  +[NMGenericMessageLogAction logActionWithMessage:]

  // instance methods
  -[NMGenericMessageLogAction .cxx_destruct]
  -[NMGenericMessageLogAction initWithMessage:]
  -[NMGenericMessageLogAction logMessage]


NMLogActionsCoalescer : NSObject
 @property  NSString *prefix
 @property  unsigned long messageBufferLimit

  // instance methods
  -[NMLogActionsCoalescer setPrefix:]
  -[NMLogActionsCoalescer .cxx_destruct]
  -[NMLogActionsCoalescer prefix]
  -[NMLogActionsCoalescer flush]
  -[NMLogActionsCoalescer initWithIdentifier:logCategory:]
  -[NMLogActionsCoalescer setMessageBufferLimit:]
  -[NMLogActionsCoalescer addLogAction:]
  -[NMLogActionsCoalescer _addAction:toPendingActions:limit:]
  -[NMLogActionsCoalescer _logMessageFromPendingLogActions:includingPartNumber:]
  -[NMLogActionsCoalescer _writeLogMessageFromActions:includingPartNumber:]
  -[NMLogActionsCoalescer messageBufferLimit]


NMSSequentialItemEnumerator : NSObject <NMSDownloadableItemEnumerator>
  // instance methods
  -[NMSSequentialItemEnumerator nextItem]
  -[NMSSequentialItemEnumerator .cxx_destruct]
  -[NMSSequentialItemEnumerator initWithItemEnumerators:]


NMSEpisodeSizeInfo : NSObject <NSSecureCoding>
 @property  unsigned long size
 @property  double duration
 @property  BOOL downloaded

  // class methods
  +[NMSEpisodeSizeInfo supportsSecureCoding]

  // instance methods
  -[NMSEpisodeSizeInfo encodeWithCoder:]
  -[NMSEpisodeSizeInfo duration]
  -[NMSEpisodeSizeInfo size]
  -[NMSEpisodeSizeInfo isEqual:]
  -[NMSEpisodeSizeInfo initWithCoder:]
  -[NMSEpisodeSizeInfo isDownloaded]
  -[NMSEpisodeSizeInfo initWithSize:duration:downloaded:]


NMSPodcastSizeCache : NSObject
 @property  NSDictionary *relationshipDict
 @property  NSDictionary *episodeSizeInfoDict

  // class methods
  +[NMSPodcastSizeCache _podcastSizeCacheFilePath]

  // instance methods
  -[NMSPodcastSizeCache dealloc]
  -[NMSPodcastSizeCache .cxx_destruct]
  -[NMSPodcastSizeCache init]
  -[NMSPodcastSizeCache _setupFromCache]
  -[NMSPodcastSizeCache _initWithCache:]
  -[NMSPodcastSizeCache itemsForFeedURL:]
  -[NMSPodcastSizeCache episodeSizeInfoDict]
  -[NMSPodcastSizeCache _cachedPodcastEpisodeSizeDictionary]
  -[NMSPodcastSizeCache _registerForCacheChanged]
  -[NMSPodcastSizeCache relationshipDict]


NMSMutablePodcastSizeCache : NMSPodcastSizeCache
 @property  NSMutableDictionary *mutableRelationshipDict
 @property  NSMutableDictionary *mutableEpisodeSizeInfoDict

  // instance methods
  -[NMSMutablePodcastSizeCache synchronize]
  -[NMSMutablePodcastSizeCache .cxx_destruct]
  -[NMSMutablePodcastSizeCache init]
  -[NMSMutablePodcastSizeCache itemsForFeedURL:]
  -[NMSMutablePodcastSizeCache episodeSizeInfoDict]
  -[NMSMutablePodcastSizeCache relationshipDict]
  -[NMSMutablePodcastSizeCache setEpisodes:forFeedURL:]
  -[NMSMutablePodcastSizeCache setEpisodeSizeInfo:forEpisode:]
  -[NMSMutablePodcastSizeCache _currentPodcastSizeDictionary]
  -[NMSMutablePodcastSizeCache mutableRelationshipDict]
  -[NMSMutablePodcastSizeCache setMutableRelationshipDict:]
  -[NMSMutablePodcastSizeCache mutableEpisodeSizeInfoDict]
  -[NMSMutablePodcastSizeCache setMutableEpisodeSizeInfoDict:]


NMSQuotaEvaluationState : NSObject
 @property  NSNumber *mediaLibraryIdentifier
 @property  NSString *externalLibraryIdentifier
 @property  unsigned long itemSize
 @property  unsigned long listTotalSize
 @property  unsigned long listQuota
 @property  long long containerIndex
 @property  long long itemIndex

  // instance methods
  -[NMSQuotaEvaluationState .cxx_destruct]
  -[NMSQuotaEvaluationState itemSize]
  -[NMSQuotaEvaluationState setMediaLibraryIdentifier:]
  -[NMSQuotaEvaluationState mediaLibraryIdentifier]
  -[NMSQuotaEvaluationState setItemSize:]
  -[NMSQuotaEvaluationState itemIndex]
  -[NMSQuotaEvaluationState setItemIndex:]
  -[NMSQuotaEvaluationState containerIndex]
  -[NMSQuotaEvaluationState setContainerIndex:]
  -[NMSQuotaEvaluationState initWithCurrentItem:downloadInfo:]
  -[NMSQuotaEvaluationState externalLibraryIdentifier]
  -[NMSQuotaEvaluationState setExternalLibraryIdentifier:]
  -[NMSQuotaEvaluationState listTotalSize]
  -[NMSQuotaEvaluationState setListTotalSize:]
  -[NMSQuotaEvaluationState listQuota]
  -[NMSQuotaEvaluationState setListQuota:]


NMSQuotaEvaluationLogAction : NMLogAction
  // class methods
  +[NMSQuotaEvaluationLogAction logActionWithActionType:state:]

  // instance methods
  -[NMSQuotaEvaluationLogAction .cxx_destruct]
  -[NMSQuotaEvaluationLogAction logMessage]
  -[NMSQuotaEvaluationLogAction _stringForType:]
  -[NMSQuotaEvaluationLogAction initWithActionType:state:]
  -[NMSQuotaEvaluationLogAction _identifierLogMessage]


NMSMediaQuotaManager : NSObject
  // instance methods
  -[NMSMediaQuotaManager .cxx_destruct]
  -[NMSMediaQuotaManager initWithItemEnumerators:estimatedItemSizes:quota:]
  -[NMSMediaQuotaManager downloadInfoWithinQuota]
  -[NMSMediaQuotaManager downloadInfoWithinQuotaForBundleIdentifier:]
  -[NMSMediaQuotaManager _legacy_musicDidSkipItem]
  -[NMSMediaQuotaManager _newMutableItemEnumeratorDict]
  -[NMSMediaQuotaManager _evaluateAddedItemsIfNecessary]


NMSPodcastsDownloadableContentController_Legacy : NSObject <MTDBExtensionAccessObserver>
 @property  NSPersistentHistoryToken *lastMergedToken
 @property  <NMSPodcastsDownloadableContentControllerDelegate_Legacy> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NMSPodcastsDownloadableContentController_Legacy setDelegate:]
  -[NMSPodcastsDownloadableContentController_Legacy delegate]
  -[NMSPodcastsDownloadableContentController_Legacy .cxx_destruct]
  -[NMSPodcastsDownloadableContentController_Legacy init]
  -[NMSPodcastsDownloadableContentController_Legacy _ctx]
  -[NMSPodcastsDownloadableContentController_Legacy extensionAccessDidChange]
  -[NMSPodcastsDownloadableContentController_Legacy _handlePersistentStoreRemoteChangeNotification:]
  -[NMSPodcastsDownloadableContentController_Legacy _handlePodcastsPinningSelectionsDidChangeNotification:]
  -[NMSPodcastsDownloadableContentController_Legacy _handlePodcastSizeInfoDidChangeNotification:]
  -[NMSPodcastsDownloadableContentController_Legacy lastMergedToken]
  -[NMSPodcastsDownloadableContentController_Legacy setLastMergedToken:]
  -[NMSPodcastsDownloadableContentController_Legacy _relevantEpisodeProperties]
  -[NMSPodcastsDownloadableContentController_Legacy _changeContainsRelevantEpisodeChanges:]
  -[NMSPodcastsDownloadableContentController_Legacy _relevantShowProperties]
  -[NMSPodcastsDownloadableContentController_Legacy _changeContainsRelevantShowChanges:]
  -[NMSPodcastsDownloadableContentController_Legacy _relevantStationProperties]
  -[NMSPodcastsDownloadableContentController_Legacy _changeContainsRelevantStationChanges:]
  -[NMSPodcastsDownloadableContentController_Legacy _relevantChannelProperties]
  -[NMSPodcastsDownloadableContentController_Legacy _changeContainsRelevantChannelChanges:]
  -[NMSPodcastsDownloadableContentController_Legacy _shouldMergeHistoryTransaction:]
  -[NMSPodcastsDownloadableContentController_Legacy _notifyDelegateContentDidChange]
  -[NMSPodcastsDownloadableContentController_Legacy _notifyDelegateContentDidChangeImmediately]
  -[NMSPodcastsDownloadableContentController_Legacy _processLatestPersistenHistoryChanges]
  -[NMSPodcastsDownloadableContentController_Legacy _resetPersistentHistoryTokenAndNotifyObservers]


NMSKeepLocalRequestOptions : NSObject <NSCopying>
 @property  BOOL requiresValidation
 @property  unsigned long powerPolicy
 @property  unsigned long cellularPolicy
 @property  long long qualityOfService
 @property  double timeout

  // instance methods
  -[NMSKeepLocalRequestOptions setQualityOfService:]
  -[NMSKeepLocalRequestOptions qualityOfService]
  -[NMSKeepLocalRequestOptions setTimeout:]
  -[NMSKeepLocalRequestOptions timeout]
  -[NMSKeepLocalRequestOptions copyWithZone:]
  -[NMSKeepLocalRequestOptions init]
  -[NMSKeepLocalRequestOptions requiresValidation]
  -[NMSKeepLocalRequestOptions setRequiresValidation:]
  -[NMSKeepLocalRequestOptions powerPolicy]
  -[NMSKeepLocalRequestOptions setPowerPolicy:]
  -[NMSKeepLocalRequestOptions cellularPolicy]
  -[NMSKeepLocalRequestOptions setCellularPolicy:]


NMSKeepLocalRequest : NSObject
 @property  MPModelObject *modelObject
 @property  long long enableState

  // instance methods
  -[NMSKeepLocalRequest .cxx_destruct]
  -[NMSKeepLocalRequest modelObject]
  -[NMSKeepLocalRequest enableState]
  -[NMSKeepLocalRequest initWithModelObject:enableState:]
  -[NMSKeepLocalRequest performWithOptions:completion:]


NMSDaemonPlugin : NSObject
  // instance methods
  -[NMSDaemonPlugin init]


NMSMediaSyncServiceKeepLocalResponse : PBCodable <NSCopying>
 @property  unsigned long resultsCount
 @property  ^i results

  // instance methods
  -[NMSMediaSyncServiceKeepLocalResponse clearResults]
  -[NMSMediaSyncServiceKeepLocalResponse resultsCount]
  -[NMSMediaSyncServiceKeepLocalResponse copyTo:]
  -[NMSMediaSyncServiceKeepLocalResponse dealloc]
  -[NMSMediaSyncServiceKeepLocalResponse mergeFrom:]
  -[NMSMediaSyncServiceKeepLocalResponse dictionaryRepresentation]
  -[NMSMediaSyncServiceKeepLocalResponse copyWithZone:]
  -[NMSMediaSyncServiceKeepLocalResponse results]
  -[NMSMediaSyncServiceKeepLocalResponse readFrom:]
  -[NMSMediaSyncServiceKeepLocalResponse writeTo:]
  -[NMSMediaSyncServiceKeepLocalResponse isEqual:]
  -[NMSMediaSyncServiceKeepLocalResponse resultAtIndex:]
  -[NMSMediaSyncServiceKeepLocalResponse addResult:]
  -[NMSMediaSyncServiceKeepLocalResponse setResults:count:]
  -[NMSMediaSyncServiceKeepLocalResponse resultsAsString:]
  -[NMSMediaSyncServiceKeepLocalResponse StringAsResults:]


NMSRecommendationArtworkDataSource : NSObject <MPArtworkDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSRecommendationArtworkDataSource artworkCacheDirectory]
  +[NMSRecommendationArtworkDataSource sharedDataSource]

  // instance methods
  -[NMSRecommendationArtworkDataSource _cachedRepresentationForCatalog:]
  -[NMSRecommendationArtworkDataSource _existingRepresentationForArtworkCatalog:fromCacheOnly:]
  -[NMSRecommendationArtworkDataSource .cxx_destruct]
  -[NMSRecommendationArtworkDataSource _cacheRepresentation:forCatalog:]
  -[NMSRecommendationArtworkDataSource loadRepresentationForArtworkCatalog:completionHandler:]
  -[NMSRecommendationArtworkDataSource areRepresentationsAvailableForCatalog:]
  -[NMSRecommendationArtworkDataSource cancelLoadingRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource isRepresentation:bestRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource existingRepresentationForArtworkCatalog:]
  -[NMSRecommendationArtworkDataSource init]
  -[NMSRecommendationArtworkDataSource visualIdenticalityIdentifierForCatalog:]
  -[NMSRecommendationArtworkDataSource artworkCacheExistsForToken:]
  -[NMSRecommendationArtworkDataSource _cachedArtworkImageWithToken:]


NMSMutableItemEnumerator : NSObject <NMSDownloadableItemEnumerator>
  // instance methods
  -[NMSMutableItemEnumerator addItem:]
  -[NMSMutableItemEnumerator nextItem]
  -[NMSMutableItemEnumerator .cxx_destruct]
  -[NMSMutableItemEnumerator hasItems]
  -[NMSMutableItemEnumerator init]


NMSAccountInfo : NSObject
 @property  ACAccount *activeAccount

  // class methods
  +[NMSAccountInfo activeStoreAccountInfo]

  // instance methods
  -[NMSAccountInfo activeAccount]
  -[NMSAccountInfo _updateActiveAccount]
  -[NMSAccountInfo dealloc]
  -[NMSAccountInfo .cxx_destruct]
  -[NMSAccountInfo _handleAccountStoreDidChangeNotification:]
  -[NMSAccountInfo init]
  -[NMSAccountInfo preloadActiveAccount]


NMSPodcastsDownloadSettings : NSObject <NSCopying>
 @property  long long numberOfEpisodes
 @property  BOOL enabled

  // instance methods
  -[NMSPodcastsDownloadSettings setNumberOfEpisodes:]
  -[NMSPodcastsDownloadSettings numberOfEpisodes]
  -[NMSPodcastsDownloadSettings initWithDictionary:]
  -[NMSPodcastsDownloadSettings .cxx_destruct]
  -[NMSPodcastsDownloadSettings initWithCollectionType:legacyDownloadSettings:]
  -[NMSPodcastsDownloadSettings dictionaryRepresentation]
  -[NMSPodcastsDownloadSettings copyWithZone:]
  -[NMSPodcastsDownloadSettings initWithCollectionType:legacyDownloadSettingsDictionary:]
  -[NMSPodcastsDownloadSettings initWithCollectionType:dictionary:]
  -[NMSPodcastsDownloadSettings initWithCollectionType:]
  -[NMSPodcastsDownloadSettings isEqual:]
  -[NMSPodcastsDownloadSettings init]
  -[NMSPodcastsDownloadSettings isEnabled]


NMSQuotaEvaluationState_Legacy : NSObject
 @property  NSNumber *mediaLibraryIdentifier
 @property  NSString *externalLibraryIdentifier
 @property  unsigned long itemSize
 @property  unsigned long listTotalSize
 @property  unsigned long listQuota
 @property  long long containerIndex
 @property  long long itemIndex

  // instance methods
  -[NMSQuotaEvaluationState_Legacy .cxx_destruct]
  -[NMSQuotaEvaluationState_Legacy itemSize]
  -[NMSQuotaEvaluationState_Legacy setMediaLibraryIdentifier:]
  -[NMSQuotaEvaluationState_Legacy mediaLibraryIdentifier]
  -[NMSQuotaEvaluationState_Legacy setItemSize:]
  -[NMSQuotaEvaluationState_Legacy itemIndex]
  -[NMSQuotaEvaluationState_Legacy setItemIndex:]
  -[NMSQuotaEvaluationState_Legacy containerIndex]
  -[NMSQuotaEvaluationState_Legacy setContainerIndex:]
  -[NMSQuotaEvaluationState_Legacy externalLibraryIdentifier]
  -[NMSQuotaEvaluationState_Legacy setExternalLibraryIdentifier:]
  -[NMSQuotaEvaluationState_Legacy listTotalSize]
  -[NMSQuotaEvaluationState_Legacy setListTotalSize:]
  -[NMSQuotaEvaluationState_Legacy listQuota]
  -[NMSQuotaEvaluationState_Legacy setListQuota:]


NMSQuotaEvaluationLogAction_Legacy : NMLogAction
  // class methods
  +[NMSQuotaEvaluationLogAction_Legacy logActionWithActionType:state:]

  // instance methods
  -[NMSQuotaEvaluationLogAction_Legacy .cxx_destruct]
  -[NMSQuotaEvaluationLogAction_Legacy logMessage]
  -[NMSQuotaEvaluationLogAction_Legacy _stringForType:]
  -[NMSQuotaEvaluationLogAction_Legacy initWithActionType:state:]
  -[NMSQuotaEvaluationLogAction_Legacy _identifierLogMessage]


NMSMediaQuotaManager_Legacy : NSObject
  // instance methods
  -[NMSMediaQuotaManager_Legacy .cxx_destruct]
  -[NMSMediaQuotaManager_Legacy downloadInfoWithinQuota]
  -[NMSMediaQuotaManager_Legacy downloadInfoWithinQuotaForBundleIdentifier:]
  -[NMSMediaQuotaManager_Legacy _evaluateAddedItemsIfNecessary]
  -[NMSMediaQuotaManager_Legacy initWithGroupIterators:quota:]
  -[NMSMediaQuotaManager_Legacy groupIteratorForBundleIdentifier:]
  -[NMSMediaQuotaManager_Legacy sizeOfItemsWithinQuota]
  -[NMSMediaQuotaManager_Legacy sizeOfItemsWithinQuotaForBundleIdentifier:]
  -[NMSMediaQuotaManager_Legacy sizeOfNominatedItemsForBundleIdentifier:]
  -[NMSMediaQuotaManager_Legacy isItemGroupWithinQuota:]
  -[NMSMediaQuotaManager_Legacy _containerListForBundleIdentifier:]


NMSMusicRecommendationsRequest : NSObject
 @property  NSDictionary *unarchivedCombinedResponsesDictionary
 @property  BOOL useCachedDataOnly
 @property  NSData *cachedData

  // class methods
  +[NMSMusicRecommendationsRequest _recentMusicDirectory]

  // instance methods
  -[NMSMusicRecommendationsRequest setCachedData:]
  -[NMSMusicRecommendationsRequest cachedData]
  -[NMSMusicRecommendationsRequest _performLibraryRecentMusicRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _heavyRotationCacheURL]
  -[NMSMusicRecommendationsRequest _continueToEditorialRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest performWithResponseHandler:]
  -[NMSMusicRecommendationsRequest _continueToLookupWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _performLookupRequestWithModelObjects:completion:]
  -[NMSMusicRecommendationsRequest .cxx_destruct]
  -[NMSMusicRecommendationsRequest _continueToLibraryImportWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _starterPackRoomCacheURL]
  -[NMSMusicRecommendationsRequest _continueToStarterPackMultiplexRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _finishWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest setUseCachedDataOnly:]
  -[NMSMusicRecommendationsRequest _performStarterPackRoomRequestWithURL:completion:]
  -[NMSMusicRecommendationsRequest _performStarterPackMultiplexRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _writeData:toURL:]
  -[NMSMusicRecommendationsRequest _performEditorialBrowseRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest _performForYouRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest unarchivedCombinedResponsesDictionary]
  -[NMSMusicRecommendationsRequest setUnarchivedCombinedResponsesDictionary:]
  -[NMSMusicRecommendationsRequest _continueToForYouRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _starterPackMultiplexCacheURL]
  -[NMSMusicRecommendationsRequest _performLibraryImportChangeRequestWithModelObjects:completion:]
  -[NMSMusicRecommendationsRequest _performHeavyRotationRequestWithCompletion:]
  -[NMSMusicRecommendationsRequest useCachedDataOnly]
  -[NMSMusicRecommendationsRequest _continueToHeavyRotationRequestWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _unarchivedCombinedResponsesDictionary]
  -[NMSMusicRecommendationsRequest _continueToStarterPackRoomRequestWithURL:context:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _continueToLibraryRecentMusicRecommedationsWithContext:queue:responseHandler:]
  -[NMSMusicRecommendationsRequest _continueToProcessResultsWithContext:queue:responseHandler:]


NMSMusicRecommendationsResponse : NSObject
 @property  NSData *cachedData
 @property  NMSMutableMediaSyncInfo *importedStoreContainerItemMappings
 @property  NSOrderedSet *recommendations

  // instance methods
  -[NMSMusicRecommendationsResponse cachedData]
  -[NMSMusicRecommendationsResponse importedStoreContainerItemMappings]
  -[NMSMusicRecommendationsResponse .cxx_destruct]
  -[NMSMusicRecommendationsResponse recommendations]
  -[NMSMusicRecommendationsResponse initWithCachedData:importedStoreContainerItemMappings:recommendations:]


NMSMusicRecommendationsRequestContext : NSObject
 @property  unsigned long minimumNumberOfRecentMusicModelObjects
 @property  MPModelResponse *heavyRotationResponse
 @property  MPModelResponse *libraryRecentMusicResponse
 @property  MPModelResponse *starterPackResponse
 @property  MPModelResponse *lookupResponse
 @property  NSArray *importedObjects
 @property  unsigned long numberOfRecentMusicModelObjects
 @property  NSSet *modelObjects
 @property  NMSMutableMediaSyncInfo *importedStoreContainerItemMappings
 @property  NSOrderedSet *recommendations
 @property  MPModelForYouRecommendationsResponse *forYouResponse
 @property  MPModelStoreBrowseResponse *editorialBrowseResponse

  // instance methods
  -[NMSMusicRecommendationsRequestContext modelObjects]
  -[NMSMusicRecommendationsRequestContext lookupResponse]
  -[NMSMusicRecommendationsRequestContext setStarterPackResponse:]
  -[NMSMusicRecommendationsRequestContext _processResponsesIfNeeded]
  -[NMSMusicRecommendationsRequestContext setLookupResponse:]
  -[NMSMusicRecommendationsRequestContext importedStoreContainerItemMappings]
  -[NMSMusicRecommendationsRequestContext forYouResponse]
  -[NMSMusicRecommendationsRequestContext .cxx_destruct]
  -[NMSMusicRecommendationsRequestContext recommendations]
  -[NMSMusicRecommendationsRequestContext importedObjects]
  -[NMSMusicRecommendationsRequestContext setMinimumNumberOfRecentMusicModelObjects:]
  -[NMSMusicRecommendationsRequestContext setEditorialBrowseResponse:]
  -[NMSMusicRecommendationsRequestContext numberOfRecentMusicModelObjects]
  -[NMSMusicRecommendationsRequestContext heavyRotationResponse]
  -[NMSMusicRecommendationsRequestContext setForYouResponse:]
  -[NMSMusicRecommendationsRequestContext libraryRecentMusicResponse]
  -[NMSMusicRecommendationsRequestContext _recentMusicContainsModelObject:]
  -[NMSMusicRecommendationsRequestContext setLibraryRecentMusicResponse:]
  -[NMSMusicRecommendationsRequestContext minimumNumberOfRecentMusicModelObjects]
  -[NMSMusicRecommendationsRequestContext setHeavyRotationResponse:]
  -[NMSMusicRecommendationsRequestContext setImportedObjects:]
  -[NMSMusicRecommendationsRequestContext editorialBrowseResponse]
  -[NMSMusicRecommendationsRequestContext starterPackResponse]


NMSDownloadableItem : NSObject
 @property  NSNumber *mediaLibraryIdentifier
 @property  NSString *externalLibraryIdentifier
 @property  unsigned long size
 @property  unsigned long itemType
 @property  BOOL manuallyAdded
 @property  NSNumber *identifier

  // instance methods
  -[NMSDownloadableItem identifier]
  -[NMSDownloadableItem .cxx_destruct]
  -[NMSDownloadableItem size]
  -[NMSDownloadableItem itemType]
  -[NMSDownloadableItem isEqual:]
  -[NMSDownloadableItem mediaLibraryIdentifier]
  -[NMSDownloadableItem externalLibraryIdentifier]
  -[NMSDownloadableItem initWithMediaLibraryIdentifier:externalLibraryIdentifier:size:itemType:manuallyAdded:]
  -[NMSDownloadableItem isManuallyAdded]


NMSPartialDownloadableItem : NMSDownloadableItem
 @property  unsigned long minimumSize
 @property  unsigned long offset

  // instance methods
  -[NMSPartialDownloadableItem minimumSize]
  -[NMSPartialDownloadableItem offset]
  -[NMSPartialDownloadableItem isEqual:]
  -[NMSPartialDownloadableItem initWithMediaLibraryIdentifier:externalLibraryIdentifier:size:itemType:manuallyAdded:minimumSize:offset:]


NMSMediaDownloadInfo : NSObject
 @property  NSMutableOrderedSet *items
 @property  unsigned long totalItemSize

  // instance methods
  -[NMSMediaDownloadInfo initWithItems:]
  -[NMSMediaDownloadInfo containsItem:]
  -[NMSMediaDownloadInfo setItems:]
  -[NMSMediaDownloadInfo .cxx_destruct]
  -[NMSMediaDownloadInfo items]
  -[NMSMediaDownloadInfo totalItemCount]
  -[NMSMediaDownloadInfo totalItemSize]
  -[NMSMediaDownloadInfo enumerateMediaItemsUsingBlock:]
  -[NMSMediaDownloadInfo mediaLibraryItemIdentifiers]
  -[NMSMediaDownloadInfo externalLibraryItemIdentifiers]
  -[NMSMediaDownloadInfo setTotalItemSize:]


NMSMutableMediaDownloadInfo : NMSMediaDownloadInfo
  // instance methods
  -[NMSMutableMediaDownloadInfo addItem:]
  -[NMSMutableMediaDownloadInfo init]


NMSMediaSyncInfo : NSObject
 @property  NSDictionary *info
 @property  BOOL valid
 @property  unsigned long target

  // class methods
  +[NMSMediaSyncInfo _mediaSyncInfoDirectory]

  // instance methods
  -[NMSMediaSyncInfo progress]
  -[NMSMediaSyncInfo initWithTarget:]
  -[NMSMediaSyncInfo playabilityForContainer:]
  -[NMSMediaSyncInfo containers]
  -[NMSMediaSyncInfo hasItemsOverStorageLimit]
  -[NMSMediaSyncInfo downloadPauseReason]
  -[NMSMediaSyncInfo statusForContainer:]
  -[NMSMediaSyncInfo progressForContainer:]
  -[NMSMediaSyncInfo target]
  -[NMSMediaSyncInfo hasItemsOverStorageLimitForContainer:]
  -[NMSMediaSyncInfo status]
  -[NMSMediaSyncInfo itemCount]
  -[NMSMediaSyncInfo dealloc]
  -[NMSMediaSyncInfo .cxx_destruct]
  -[NMSMediaSyncInfo downloadPauseReasonForContainer:]
  -[NMSMediaSyncInfo _notificationName]
  -[NMSMediaSyncInfo setInfo:]
  -[NMSMediaSyncInfo info]
  -[NMSMediaSyncInfo hasItemsWaitingWithoutPauseReason]
  -[NMSMediaSyncInfo _isValid]
  -[NMSMediaSyncInfo _targetIdentifier]
  -[NMSMediaSyncInfo _initWithTarget:readAndObserveChanges:]
  -[NMSMediaSyncInfo itemsForContainer:]
  -[NMSMediaSyncInfo hasContainer:]
  -[NMSMediaSyncInfo hasItem:]
  -[NMSMediaSyncInfo statusForItem:]
  -[NMSMediaSyncInfo progressForItem:]
  -[NMSMediaSyncInfo downloadPauseReasonForItem:]
  -[NMSMediaSyncInfo hasItemsWaitingWithoutPauseReasonForContainer:]
  -[NMSMediaSyncInfo isItemOverStorageLimit:]
  -[NMSMediaSyncInfo hasDownloadableItemsWithinStorageLimitForContainer:]
  -[NMSMediaSyncInfo userInfoForContainer:]
  -[NMSMediaSyncInfo userInfoForItem:]
  -[NMSMediaSyncInfo _hasItemsForContainer:]
  -[NMSMediaSyncInfo _registerForInfoChanged]
  -[NMSMediaSyncInfo _readInfo]
  -[NMSMediaSyncInfo _preferencesApplicationID]
  -[NMSMediaSyncInfo _preferencesInfoKey]
  -[NMSMediaSyncInfo _syncInfoFilePath]
  -[NMSMediaSyncInfo numberOfItemsOverStorageLimitForContainer:]
  -[NMSMediaSyncInfo keepLocalEnabledPlaylists]
  -[NMSMediaSyncInfo keepLocalEnabledAlbums]
  -[NMSMediaSyncInfo allPlaylists]
  -[NMSMediaSyncInfo allAlbums]
  -[NMSMediaSyncInfo _identifiersWithKeepLocalStates:modelKind:]
  -[NMSMediaSyncInfo _syncInfoModelKindForMPModelKind:]


NMSMutableMediaSyncInfo : NMSMediaSyncInfo
 @property  NSMutableDictionary *info

  // class methods
  +[NMSMutableMediaSyncInfo requiredUserInfoPropertiesForModelKind:]

  // instance methods
  -[NMSMutableMediaSyncInfo progress]
  -[NMSMutableMediaSyncInfo initWithTarget:]
  -[NMSMutableMediaSyncInfo playabilityForContainer:]
  -[NMSMutableMediaSyncInfo synchronize]
  -[NMSMutableMediaSyncInfo hasItemsOverStorageLimit]
  -[NMSMutableMediaSyncInfo _infoForContainer:]
  -[NMSMutableMediaSyncInfo setProgressBytes:totalBytes:forItem:]
  -[NMSMutableMediaSyncInfo downloadPauseReason]
  -[NMSMutableMediaSyncInfo statusForContainer:]
  -[NMSMutableMediaSyncInfo progressForContainer:]
  -[NMSMutableMediaSyncInfo _writeInfo]
  -[NMSMutableMediaSyncInfo _persistingOptions]
  -[NMSMutableMediaSyncInfo hasItemsOverStorageLimitForContainer:]
  -[NMSMutableMediaSyncInfo setItems:forContainer:]
  -[NMSMutableMediaSyncInfo status]
  -[NMSMutableMediaSyncInfo setOverStorageLimit:forItem:]
  -[NMSMutableMediaSyncInfo downloadPauseReasonForContainer:]
  -[NMSMutableMediaSyncInfo setOverStorageLimitBehavior:forContainer:]
  -[NMSMutableMediaSyncInfo _updateAggregateInfoIfNeeded]
  -[NMSMutableMediaSyncInfo setDownloadPauseReason:forItem:]
  -[NMSMutableMediaSyncInfo setStatus:forItem:]
  -[NMSMutableMediaSyncInfo setUserInfoForModelObject:manuallyPinned:]
  -[NMSMutableMediaSyncInfo setUserInfo:forItem:]
  -[NMSMutableMediaSyncInfo _notifyInfoChanged]
  -[NMSMutableMediaSyncInfo hasItemsWaitingWithoutPauseReason]
  -[NMSMutableMediaSyncInfo _info]
  -[NMSMutableMediaSyncInfo _infoForItem:]
  -[NMSMutableMediaSyncInfo setUserInfo:forContainer:]


NMSItemGroupEnumerator : NSObject <NMSDownloadableItemEnumerator>
  // instance methods
  -[NMSItemGroupEnumerator nextItem]
  -[NMSItemGroupEnumerator .cxx_destruct]
  -[NMSItemGroupEnumerator initWithItemGroup:]


NMSStoreModelLookupRequestOperation : MPStoreModelRequestOperation
  // instance methods
  -[NMSStoreModelLookupRequestOperation configurationForLoadingModelDataWithStoreURLBag:error:]
  -[NMSStoreModelLookupRequestOperation produceResponseWithLoadedOutput:completion:]


NMSStoreModelLookupRequest : MPStoreModelRequest
 @property  NSArray *containerIDs

  // instance methods
  -[NMSStoreModelLookupRequest newOperationWithResponseHandler:]
  -[NMSStoreModelLookupRequest .cxx_destruct]
  -[NMSStoreModelLookupRequest setContainerIDs:]
  -[NMSStoreModelLookupRequest containerIDs]
  -[NMSStoreModelLookupRequest copyWithZone:]


NMSMediaItemGroupIterator : NSObject
 @property  NMSQuotaEvaluationState *evaluationState
 @property  NMSQuotaEvaluationState_Legacy *evaluationState
 @property  unsigned long sizeForItemListWithinQuota
 @property  unsigned long sizeForCurrentIdentifier
 @property  unsigned long nominatedItemSize
 @property  unsigned long iteratingOrder
 @property  NSArray *itemGroups
 @property  NSMutableArray *remainingContainers
 @property  NSMutableArray *remainingItemLists
 @property  unsigned long currentContainerIndex
 @property  unsigned long currentItemIndex
 @property  NSMutableOrderedSet *mutableItemListWithinQuota
 @property  NSMutableArray *indexesToBeRemoved
 @property  unsigned long estimatedItemSize

  // instance methods
  -[NMSMediaItemGroupIterator currentItem]
  -[NMSMediaItemGroupIterator .cxx_destruct]
  -[NMSMediaItemGroupIterator estimatedItemSize]
  -[NMSMediaItemGroupIterator currentItemIndex]
  -[NMSMediaItemGroupIterator setCurrentItemIndex:]
  -[NMSMediaItemGroupIterator evaluationState]
  -[NMSMediaItemGroupIterator evaluationState]
  -[NMSMediaItemGroupIterator downloadInfoWithinQuota]
  -[NMSMediaItemGroupIterator initWithItemGroups:estimatedItemSize:]
  -[NMSMediaItemGroupIterator remainingContainers]
  -[NMSMediaItemGroupIterator mutableItemListWithinQuota]
  -[NMSMediaItemGroupIterator _generateItemListAndSizesDictIfNecessary]
  -[NMSMediaItemGroupIterator iteratingOrder]
  -[NMSMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSMediaItemGroupIterator _continueToNextContainer]
  -[NMSMediaItemGroupIterator markAllRemainingContainersAsSkipped]
  -[NMSMediaItemGroupIterator skipCurrentIdentifier]
  -[NMSMediaItemGroupIterator removeCurrentIdentifier]
  -[NMSMediaItemGroupIterator addCurrentIdentifierToWithinQuotaListAndCountSizeTowardsQuota:]
  -[NMSMediaItemGroupIterator resetToIterateOverQuotaIdentifiers]
  -[NMSMediaItemGroupIterator sizeForCurrentIdentifier]
  -[NMSMediaItemGroupIterator isCurrentIdentifierEstimate]
  -[NMSMediaItemGroupIterator identifiersForContainersOfType:]
  -[NMSMediaItemGroupIterator mediaContainersAboveQuota]
  -[NMSMediaItemGroupIterator indexesToBeRemoved]
  -[NMSMediaItemGroupIterator _markToBeRemoved]
  -[NMSMediaItemGroupIterator sizeForItemListWithinQuota]
  -[NMSMediaItemGroupIterator setSizeForItemListWithinQuota:]
  -[NMSMediaItemGroupIterator nominatedItemSize]
  -[NMSMediaItemGroupIterator setNominatedItemSize:]
  -[NMSMediaItemGroupIterator itemGroups]
  -[NMSMediaItemGroupIterator setItemGroups:]
  -[NMSMediaItemGroupIterator setRemainingContainers:]
  -[NMSMediaItemGroupIterator remainingItemLists]
  -[NMSMediaItemGroupIterator setRemainingItemLists:]
  -[NMSMediaItemGroupIterator currentContainerIndex]
  -[NMSMediaItemGroupIterator setCurrentContainerIndex:]
  -[NMSMediaItemGroupIterator setMutableItemListWithinQuota:]
  -[NMSMediaItemGroupIterator setIndexesToBeRemoved:]


NMSSequentialMediaItemGroupIterator : NMSMediaItemGroupIterator
  // instance methods
  -[NMSSequentialMediaItemGroupIterator iteratingOrder]
  -[NMSSequentialMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSSequentialMediaItemGroupIterator _continueToNextContainer]
  -[NMSSequentialMediaItemGroupIterator markAllRemainingContainersAsSkipped]


NMSAlternatingMediaItemGroupIterator : NMSMediaItemGroupIterator
  // instance methods
  -[NMSAlternatingMediaItemGroupIterator _generateItemListAndSizesDictIfNecessary]
  -[NMSAlternatingMediaItemGroupIterator iteratingOrder]
  -[NMSAlternatingMediaItemGroupIterator _continueToNextIdentifier]
  -[NMSAlternatingMediaItemGroupIterator _continueToNextContainer]
  -[NMSAlternatingMediaItemGroupIterator markAllRemainingContainersAsSkipped]
  -[NMSAlternatingMediaItemGroupIterator resetToIterateOverQuotaIdentifiers]
  -[NMSAlternatingMediaItemGroupIterator _resetMaxItemListSize]


NMSMediaSyncServiceKeepLocalOptions : PBCodable <NSCopying>
 @property  BOOL hasRequiresValidation
 @property  BOOL requiresValidation
 @property  BOOL hasDownloadOffPowerPolicy
 @property  int downloadOffPowerPolicy
 @property  BOOL hasDownloadOnCellularPolicy
 @property  int downloadOnCellularPolicy
 @property  BOOL hasQualityOfService
 @property  int qualityOfService
 @property  BOOL hasTimeout
 @property  double timeout

  // instance methods
  -[NMSMediaSyncServiceKeepLocalOptions setQualityOfService:]
  -[NMSMediaSyncServiceKeepLocalOptions copyTo:]
  -[NMSMediaSyncServiceKeepLocalOptions qualityOfService]
  -[NMSMediaSyncServiceKeepLocalOptions setTimeout:]
  -[NMSMediaSyncServiceKeepLocalOptions timeout]
  -[NMSMediaSyncServiceKeepLocalOptions mergeFrom:]
  -[NMSMediaSyncServiceKeepLocalOptions hasQualityOfService]
  -[NMSMediaSyncServiceKeepLocalOptions dictionaryRepresentation]
  -[NMSMediaSyncServiceKeepLocalOptions copyWithZone:]
  -[NMSMediaSyncServiceKeepLocalOptions readFrom:]
  -[NMSMediaSyncServiceKeepLocalOptions setHasQualityOfService:]
  -[NMSMediaSyncServiceKeepLocalOptions writeTo:]
  -[NMSMediaSyncServiceKeepLocalOptions isEqual:]
  -[NMSMediaSyncServiceKeepLocalOptions requiresValidation]
  -[NMSMediaSyncServiceKeepLocalOptions setRequiresValidation:]
  -[NMSMediaSyncServiceKeepLocalOptions setHasTimeout:]
  -[NMSMediaSyncServiceKeepLocalOptions hasTimeout]
  -[NMSMediaSyncServiceKeepLocalOptions setHasRequiresValidation:]
  -[NMSMediaSyncServiceKeepLocalOptions hasRequiresValidation]
  -[NMSMediaSyncServiceKeepLocalOptions downloadOffPowerPolicy]
  -[NMSMediaSyncServiceKeepLocalOptions setDownloadOffPowerPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions setHasDownloadOffPowerPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions hasDownloadOffPowerPolicy]
  -[NMSMediaSyncServiceKeepLocalOptions downloadOffPowerPolicyAsString:]
  -[NMSMediaSyncServiceKeepLocalOptions StringAsDownloadOffPowerPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions downloadOnCellularPolicy]
  -[NMSMediaSyncServiceKeepLocalOptions setDownloadOnCellularPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions setHasDownloadOnCellularPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions hasDownloadOnCellularPolicy]
  -[NMSMediaSyncServiceKeepLocalOptions downloadOnCellularPolicyAsString:]
  -[NMSMediaSyncServiceKeepLocalOptions StringAsDownloadOnCellularPolicy:]
  -[NMSMediaSyncServiceKeepLocalOptions qualityOfServiceAsString:]
  -[NMSMediaSyncServiceKeepLocalOptions StringAsQualityOfService:]


NMSKeepLocalRequestValidator : NSObject
 @property  MPModelObject *modelObject

  // instance methods
  -[NMSKeepLocalRequestValidator .cxx_destruct]
  -[NMSKeepLocalRequestValidator modelObject]
  -[NMSKeepLocalRequestValidator initWithModelObject:]
  -[NMSKeepLocalRequestValidator performWithQualityOfService:completion:]
  -[NMSKeepLocalRequestValidator _arrayOfUniqueTrackPIDsFromQuery:]
  -[NMSKeepLocalRequestValidator _aggregatedFetchOfFileSizeForQuery:withLibrary:]
  -[NMSKeepLocalRequestValidator _fetchSizeOfModelObjectItems]
  -[NMSKeepLocalRequestValidator _predicateForKeepLocalStatusDownloadingOrWaiting]
  -[NMSKeepLocalRequestValidator _fetchSizeOfPendingDownloadsWithPowerConstraintCheck:]


NMSMediaPinningManager : NSObject <ICEnvironmentMonitorObserver, NMSDownloadableContentProviderDelegate, MTDBExtensionAccessObserver, NMSPodcastsDownloadableContentControllerDelegate_Legacy>
 @property  NMSMediaDownloadInfo *downloadInfo
 @property  NSNumber *workoutPlaylistID
 @property  NMSPodcastsDownloadSettings *podcastsUpNextDownloadSettings
 @property  NMSPodcastsDownloadSettings *podcastsSavedEpisodesDownloadSettings
 @property  NSSet *podcastsSelectedStationUUIDs
 @property  NSSet *podcastsSelectedShowFeedURLs
 @property  NSArray *podcastFeedURLs
 @property  NSArray *podcastStationUUIDs
 @property  BOOL pinnedPodcastsAreUserSet
 @property  NSArray *audiobookIdentifiers
 @property  BOOL wantToReadEnabled
 @property  NSOrderedSet *wantToReadAudiobooks
 @property  BOOL readingNowEnabled
 @property  NSOrderedSet *readingNowAudiobooks
 @property  NSOrderedSet *pinnedAudiobooks
 @property  double audiobookDownloadLimit
 @property  NSArray *playlistIdentifiers
 @property  NSArray *albumIdentifiers
 @property  NSArray *pinnedPlaylists
 @property  NSArray *pinnedAlbums
 @property  BOOL savedEpisodesEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSMediaPinningManager sharedManager]
  +[NMSMediaPinningManager _playlistPIDValidForPinning:]
  +[NMSMediaPinningManager _tokenForInstance:]
  +[NMSMediaPinningManager _persistNewClientToken]
  +[NMSMediaPinningManager _cachedPlaylistIdentifiersFilePath]
  +[NMSMediaPinningManager _cachedAlbumIdentifiersFilePath]
  +[NMSMediaPinningManager _cachedAudiobookIdentifiersFilePath]
  +[NMSMediaPinningManager _cachedIdentifiersDirectoryPath]
  +[NMSMediaPinningManager _mediaStorageSizeForCurrentDevice]
  +[NMSMediaPinningManager _fetchMusicRecommendations]

  // instance methods
  -[NMSMediaPinningManager setSavedEpisodesEnabled:]
  -[NMSMediaPinningManager setPinnedPodcastsAreUserSet:]
  -[NMSMediaPinningManager readingNowAudiobooks]
  -[NMSMediaPinningManager wantToReadAudiobooks]
  -[NMSMediaPinningManager setReadingNowAudiobooks:]
  -[NMSMediaPinningManager pinnedPodcastsAreUserSet]
  -[NMSMediaPinningManager dealloc]
  -[NMSMediaPinningManager workoutPlaylistID]
  -[NMSMediaPinningManager pinnedAlbums]
  -[NMSMediaPinningManager .cxx_destruct]
  -[NMSMediaPinningManager audiobookDownloadLimit]
  -[NMSMediaPinningManager playlistIdentifiers]
  -[NMSMediaPinningManager _handlePairedDeviceDidBecomeActiveNotification:]
  -[NMSMediaPinningManager savedEpisodesEnabled]
  -[NMSMediaPinningManager pinnedAudiobooks]
  -[NMSMediaPinningManager setReadingNowEnabled:]
  -[NMSMediaPinningManager _handleRecommendationSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager setWantToReadEnabled:]
  -[NMSMediaPinningManager setWorkoutPlaylistID:]
  -[NMSMediaPinningManager setWantToReadAudiobooks:]
  -[NMSMediaPinningManager _handleMediaLibraryEntitiesAddedOrRemovedNotification:]
  -[NMSMediaPinningManager setAudiobookDownloadLimit:]
  -[NMSMediaPinningManager pinnedPlaylists]
  -[NMSMediaPinningManager setListenNowPodcastFeedURLs:]
  -[NMSMediaPinningManager init]
  -[NMSMediaPinningManager extensionAccessDidChange]
  -[NMSMediaPinningManager downloadInfo]
  -[NMSMediaPinningManager _handlePodcastsPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handlePodcastSizeInfoDidChangeNotification:]
  -[NMSMediaPinningManager podcastsDownloadableContentControllerContentDidChange:]
  -[NMSMediaPinningManager isItemGroupWithinQuota:]
  -[NMSMediaPinningManager _handlePodcastStationsDidChange:]
  -[NMSMediaPinningManager _handlePodcastsSubscriptionMetadataDidChangeNotification:]
  -[NMSMediaPinningManager _handlePodcastSizeCacheDidUpdateNotification:]
  -[NMSMediaPinningManager _handleMusicPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handleRecommendationLibraryContentsDidChangeNotification:]
  -[NMSMediaPinningManager _handleRecommendationsDidUpdateNotification:]
  -[NMSMediaPinningManager _handleAudiobooksPinningSelectionsDidChangeNotification:]
  -[NMSMediaPinningManager _handleAudiobooksRecommendationsDidChangeNotification:]
  -[NMSMediaPinningManager _handleICAgeVerificationStateDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningMusicContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningPodcastsContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningAudiobooksContentsInvalidatedNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerMusicIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerPodcastsIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager _handleMediaPinningManagerAudiobooksIdentifiersDidChangeNotification:]
  -[NMSMediaPinningManager downloadableContentProviderDidChangeContent:]
  -[NMSMediaPinningManager downloadInfoWithinAvailableSpace:]
  -[NMSMediaPinningManager setAvailableSpace:]
  -[NMSMediaPinningManager downloadInfoForBundleIdentifier:]
  -[NMSMediaPinningManager invalidateMusicCache]
  -[NMSMediaPinningManager albumIdentifiers]
  -[NMSMediaPinningManager _fetchMusicIdentifiers]
  -[NMSMediaPinningManager _refreshMusicIdentifiers]
  -[NMSMediaPinningManager isAlbumPinned:]
  -[NMSMediaPinningManager isPlaylistPinned:]
  -[NMSMediaPinningManager pinAlbum:completionHandler:]
  -[NMSMediaPinningManager pinPlaylist:completionHandler:]
  -[NMSMediaPinningManager unpinAlbum:completionHandler:]
  -[NMSMediaPinningManager unpinPlaylist:completionHandler:]
  -[NMSMediaPinningManager _updateWorkoutSettingsPlaylistPIDTo:]
  -[NMSMediaPinningManager _setWorkoutPlaylistID:]
  -[NMSMediaPinningManager invalidatePodcastsCache]
  -[NMSMediaPinningManager podcastsUpNextDownloadSettings]
  -[NMSMediaPinningManager setPodcastsUpNextDownloadSettings:]
  -[NMSMediaPinningManager podcastsSavedEpisodesDownloadSettings]
  -[NMSMediaPinningManager setPodcastsSavedEpisodesDownloadSettings:]
  -[NMSMediaPinningManager podcastsDownloadSettingsForStationUUID:]
  -[NMSMediaPinningManager setPodcastsDownloadSettings:forStationUUID:]
  -[NMSMediaPinningManager podcastsSelectedStationUUIDs]
  -[NMSMediaPinningManager podcastsDownloadSettingsForShowFeedURL:]
  -[NMSMediaPinningManager setPodcastsDownloadSettings:forShowFeedURL:]
  -[NMSMediaPinningManager podcastsSelectedShowFeedURLs]
  -[NMSMediaPinningManager setGizmoDownloadOrder:forPodcastWithFeedURL:]
  -[NMSMediaPinningManager removePodcastWithFeedURL:]
  -[NMSMediaPinningManager downloadOrderForPodcastWithFeedURL:]
  -[NMSMediaPinningManager setGizmoEpisodeLimit:forPodcastWithFeedURL:]
  -[NMSMediaPinningManager episodeLimitForPodcastWithFeedURL:]
  -[NMSMediaPinningManager podcastFeedURLs]
  -[NMSMediaPinningManager podcastStationUUIDs]
  -[NMSMediaPinningManager _refreshPodcastsIdentifiers]
  -[NMSMediaPinningManager pinPodcastWithFeedURL:]
  -[NMSMediaPinningManager unpinPodcastWithFeedURL:]
  -[NMSMediaPinningManager isPodcastWithFeedURLPinned:]
  -[NMSMediaPinningManager pinPodcastStationWithUUID:]
  -[NMSMediaPinningManager unpinPodcastStationWithUUID:]
  -[NMSMediaPinningManager isPodcastStationWithUUIDPinned:]
  -[NMSMediaPinningManager invalidateAudiobooksCache]
  -[NMSMediaPinningManager audiobookIdentifiers]
  -[NMSMediaPinningManager _fetchAudiobooksIdentifiers]
  -[NMSMediaPinningManager _refreshAudiobooksIdentifiers]
  -[NMSMediaPinningManager isWantToReadEnabled]
  -[NMSMediaPinningManager isReadingNowEnabled]
  -[NMSMediaPinningManager isAudiobookPinned:]
  -[NMSMediaPinningManager pinAudiobook:]
  -[NMSMediaPinningManager unpinAudiobook:]
  -[NMSMediaPinningManager _notePinningSettingsChangedLocally]
  -[NMSMediaPinningManager _isAppDownloadingDormantForBundleIdentifier:]
  -[NMSMediaPinningManager _shouldIncludeMusicManualDownloadsInQuotaEvaluation]
  -[NMSMediaPinningManager _newMusicEnumeratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _newAudiobooksEnumeratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _newItemEnumeratorForBundleIdentifier:downloadedItemsOnly:]
  -[NMSMediaPinningManager _quotaManagerWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _shouldSkipQuotaManagerEvaluation]
  -[NMSMediaPinningManager _shouldCalculateCachedIdentifiers]
  -[NMSMediaPinningManager _requiresICEnvironmentMonitor]
  -[NMSMediaPinningManager _invalidateAddedItemsCache]
  -[NMSMediaPinningManager _invalidateMediaCacheForAppIdentifiers:]
  -[NMSMediaPinningManager _isAlbumPinned:]
  -[NMSMediaPinningManager _isPlaylistPinned:]
  -[NMSMediaPinningManager _isAudiobookPinned:]
  -[NMSMediaPinningManager _audiobookDownloadLimit]
  -[NMSMediaPinningManager _mediaQuota]
  -[NMSMediaPinningManager _deviceSupportsPodcastsPinningSettingsV2]
  -[NMSMediaPinningManager _legacy_refreshMusicIdentifiers]
  -[NMSMediaPinningManager _legacy_refreshPodcastsIdentifiers]
  -[NMSMediaPinningManager _legacy_refreshAudiobooksIdentifiers]
  -[NMSMediaPinningManager _legacy_musicIsOutOfSpace]
  -[NMSMediaPinningManager _legacy_newMusicGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _legacy_newPodcastsGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _legacy_newAudiobooksGroupIteratorWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager _legacy_newGroupIteratorForBundleIdentifier:downloadedItemsOnly:]
  -[NMSMediaPinningManager _legacy_quotaManagerWithDownloadedItemsOnly:]
  -[NMSMediaPinningManager fetchPinningStatusForModelObject:queue:completionHandler:]
  -[NMSMediaPinningManager modelObjectIsManuallyPinned:]
  -[NMSMediaPinningManager pinModelObject:completionHandler:]
  -[NMSMediaPinningManager unpinModelObject:completionHandler:]
  -[NMSMediaPinningManager _pinModelObject:completionHandler:]
  -[NMSMediaPinningManager _unpinModelObject:completionHandler:]


NMSPodcastsFetchRequests : NSObject
  // class methods
  +[NMSPodcastsFetchRequests fetchRequestForUpNextDownloadSettings:downloadedOnly:]
  +[NMSPodcastsFetchRequests fetchRequestForStationUUID:downloadSettings:downloadedOnly:]
  +[NMSPodcastsFetchRequests fetchRequestForSavedEpisodesDownloadSettings:downloadedOnly:]
  +[NMSPodcastsFetchRequests fetchRequestForFeedURL:downloadSettings:downloadedOnly:ctx:]
  +[NMSPodcastsFetchRequests _predicateForDownloadableWatchEpisodesWithDownloadedOnly:unplayedOnly:]
  +[NMSPodcastsFetchRequests _createFetchRequestForEpisodeDownloadableItem]
  +[NMSPodcastsFetchRequests legacy_fetchRequestForUpNextEpisodesDownloadedOnly:]
  +[NMSPodcastsFetchRequests legacy_fetchRequestForSavedEpisodesDownloadedOnly:]
  +[NMSPodcastsFetchRequests legacy_fetchRequestForStationWithUUID:]
  +[NMSPodcastsFetchRequests legacy_fetchRequestForEpisodesWithFeedURL:downloadedOnly:ctx:]


NMSMediaSyncInfoUpdaterHeartbeat : NSObject
  // instance methods
  -[NMSMediaSyncInfoUpdaterHeartbeat dealloc]
  -[NMSMediaSyncInfoUpdaterHeartbeat .cxx_destruct]
  -[NMSMediaSyncInfoUpdaterHeartbeat stop]
  -[NMSMediaSyncInfoUpdaterHeartbeat initWithBundleIdentifier:]
  -[NMSMediaSyncInfoUpdaterHeartbeat start]


NMSyncDefaults : NSObject <NMSNotificationDispatcherDelegate>
 @property  MPMediaPlaylist *assetSyncPlaylist
 @property  NSNumber *assetSyncLimit
 @property  NSArray *pinnedPlaylists
 @property  NSNumber *workoutPlaylistID
 @property  NSArray *pinnedAlbums
 @property  NSArray *libraryRecommendationPlaylists
 @property  NSArray *libraryRecommendationAlbums
 @property  NSDictionary *musicRecommendationDict
 @property  NSData *cachedRecommendationsData
 @property  NSDate *catalogRecommendationsLastUpdateDate
 @property  NSDate *libraryRecommendationExpirationDate
 @property  NSNumber *minimumNumberOfRecentMusicModelObjects
 @property  NSNumber *lastFullySentAssetSyncPlaylistPersistentID
 @property  NSNumber *lastFullySentAssetSyncPlaylistVersion
 @property  NSDictionary *gizmoPodcastDownloadOrders
 @property  NSDictionary *gizmoPodcastEpisodeLimits
 @property  BOOL pinnedPodcastsAreUserSet
 @property  NSArray *listenNowPodcastFeedURLs
 @property  BOOL savedEpisodesEnabled
 @property  NSArray *pinnedPodcastFeedURLs
 @property  NSArray *pinnedPodcastStationUUIDs
 @property  BOOL wantToReadEnabled
 @property  NSArray *wantToReadAudiobooks
 @property  BOOL readingNowEnabled
 @property  NSArray *readingNowAudiobooks
 @property  NSArray *pinnedAudiobooks
 @property  NSNumber *audiobookDownloadLimit
 @property  NSDate *modificationDate
 @property  BOOL debugSyncInfoEnabled
 @property  NSDictionary *syncStateDict
 @property  NSDictionary *clientPinningSettingsToken
 @property  NSDictionary *musicSyncInfo
 @property  NSDictionary *podcastsSyncInfo
 @property  NSDictionary *audiobooksSyncInfo
 @property  unsigned long assetSyncLimitType
 @property  unsigned long assetSyncType
 @property  NSNumber *assetSyncPlaylistPersistentID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSyncDefaults sharedDefaults]

  // instance methods
  -[NMSyncDefaults _watchHasCapability:]
  -[NMSyncDefaults _objectForKey:]
  -[NMSyncDefaults setLibraryRecommendationExpirationDate:]
  -[NMSyncDefaults modificationDate]
  -[NMSyncDefaults setPinnedPodcastStationUUIDs:]
  -[NMSyncDefaults setSavedEpisodesEnabled:]
  -[NMSyncDefaults _playlistPersistentIDForPlaylistName:]
  -[NMSyncDefaults gizmoPodcastEpisodeLimits]
  -[NMSyncDefaults setPinnedPodcastsAreUserSet:]
  -[NMSyncDefaults _companionSidePerDeviceDefaults]
  -[NMSyncDefaults pinnedPodcastFeedURLs]
  -[NMSyncDefaults pinnedPodcastStationUUIDs]
  -[NMSyncDefaults musicRecommendationDict]
  -[NMSyncDefaults setPodcastSizeEstimationData:]
  -[NMSyncDefaults _setNeedsSynchronize]
  -[NMSyncDefaults _migrateDataIfNecessary]
  -[NMSyncDefaults readingNowAudiobooks]
  -[NMSyncDefaults _setObject:forKey:]
  -[NMSyncDefaults removeObjectforKey:]
  -[NMSyncDefaults dormancyIntervalInHoursForBundleID:]
  -[NMSyncDefaults _deviceHasCapability:forCapabilitiesKey:]
  -[NMSyncDefaults wantToReadAudiobooks]
  -[NMSyncDefaults setObject:forKey:]
  -[NMSyncDefaults gizmoPodcastDownloadOrders]
  -[NMSyncDefaults setReadingNowAudiobooks:]
  -[NMSyncDefaults _continueUsingMusicRecommendationKey]
  -[NMSyncDefaults setPinnedPodcastFeedURLs:]
  -[NMSyncDefaults setAssetSyncLimitType:]
  -[NMSyncDefaults setLastLocalPlaybackDateForBundleID:]
  -[NMSyncDefaults lastUserLaunchDateForBundleID:]
  -[NMSyncDefaults pinnedPodcastsAreUserSet]
  -[NMSyncDefaults setCachedRecommendationsData:]
  -[NMSyncDefaults dispatcherDidReceiveNotificationFromRemoteDevice:]
  -[NMSyncDefaults _setupNotifiers]
  -[NMSyncDefaults libraryRecommendationAlbums]
  -[NMSyncDefaults workoutPlaylistID]
  -[NMSyncDefaults pinnedAlbums]
  -[NMSyncDefaults listenNowPodcastFeedURLs]
  -[NMSyncDefaults assetSyncPlaylist]
  -[NMSyncDefaults _removeOldMusicRecommendationsInfoIfPossible]
  -[NMSyncDefaults _lastSyncInfoRequestDateWithPrefix:forBundleIdentifier:]
  -[NMSyncDefaults setClientPinningSettingsToken:]
  -[NMSyncDefaults _reloadPropertiesFromDefaults]
  -[NMSyncDefaults _setLegacyObject:forKey:ifRemoteDeviceMissingCapability:]
  -[NMSyncDefaults .cxx_destruct]
  -[NMSyncDefaults setLastUserLaunchDateForBundleID:]
  -[NMSyncDefaults audiobookDownloadLimit]
  -[NMSyncDefaults libraryRecommendationExpirationDate]
  -[NMSyncDefaults clientPinningSettingsToken]
  -[NMSyncDefaults syncStateDict]
  -[NMSyncDefaults _addWatchCapability:]
  -[NMSyncDefaults endBatchUpdates]
  -[NMSyncDefaults setMusicRecommendationDict:]
  -[NMSyncDefaults setLastSyncInfoRequestDate:forBundleIdentifier:]
  -[NMSyncDefaults _setBool:forKey:]
  -[NMSyncDefaults assetSyncPlaylistPersistentID]
  -[NMSyncDefaults cachedRecommendationsData]
  -[NMSyncDefaults setAssetSyncPlaylistPersistentID:]
  -[NMSyncDefaults savedEpisodesEnabled]
  -[NMSyncDefaults setLastContentUsedDateForBundleID:]
  -[NMSyncDefaults pinnedAudiobooks]
  -[NMSyncDefaults _addPhoneCapability:]
  -[NMSyncDefaults setMinimumNumberOfRecentMusicModelObjects:]
  -[NMSyncDefaults setReadingNowEnabled:]
  -[NMSyncDefaults _removeObjectForKey:]
  -[NMSyncDefaults lastFullySentAssetSyncPlaylistPersistentID]
  -[NMSyncDefaults setAssetSyncType:]
  -[NMSyncDefaults setLibraryRecommendationPlaylists:]
  -[NMSyncDefaults _boolForKey:defaultValue:]
  -[NMSyncDefaults _perDeviceSettingsDidResetNotification:]
  -[NMSyncDefaults _writePropertiesToDefaults]
  -[NMSyncDefaults installDateForBundleID:]
  -[NMSyncDefaults setPinnedPlaylists:]
  -[NMSyncDefaults _spaceQuotaForNumberOfSongs:]
  -[NMSyncDefaults setLastFullySentAssetSyncPlaylistVersion:]
  -[NMSyncDefaults _defaultWithPrefix:forBundleIdentifier:]
  -[NMSyncDefaults setPinnedAlbums:]
  -[NMSyncDefaults lastFullySentAssetSyncPlaylistVersion]
  -[NMSyncDefaults setMusicSyncInfo:]
  -[NMSyncDefaults setLastFullySentAssetSyncPlaylistPersistentID:]
  -[NMSyncDefaults _preSeed2_setMusicRecommendationDict:]
  -[NMSyncDefaults _setObject:forKey:shouldSynchronizeToPairedDevice:]
  -[NMSyncDefaults lastLocalPlaybackDateForBundleID:]
  -[NMSyncDefaults setWantToReadEnabled:]
  -[NMSyncDefaults setWorkoutPlaylistID:]
  -[NMSyncDefaults setCatalogRecommendationsLastUpdateDate:]
  -[NMSyncDefaults setWantToReadAudiobooks:]
  -[NMSyncDefaults assetSyncType]
  -[NMSyncDefaults musicSyncInfo]
  -[NMSyncDefaults audiobooksSyncInfo]
  -[NMSyncDefaults setAssetSyncLimit:]
  -[NMSyncDefaults catalogRecommendationsLastUpdateDate]
  -[NMSyncDefaults minimumNumberOfRecentMusicModelObjects]
  -[NMSyncDefaults _addCapability:forCapabilitiesKey:]
  -[NMSyncDefaults assetSyncLimitType]
  -[NMSyncDefaults podcastSizeEstimationData]
  -[NMSyncDefaults _defaultPlaylistPersistentID]
  -[NMSyncDefaults wantToReadEnabled]
  -[NMSyncDefaults _phoneHasCapability:]
  -[NMSyncDefaults setAssetSyncPlaylist:]
  -[NMSyncDefaults setPodcastsSyncInfo:]
  -[NMSyncDefaults libraryRecommendationPlaylists]
  -[NMSyncDefaults setAudiobookDownloadLimit:]
  -[NMSyncDefaults assetSyncLimit]
  -[NMSyncDefaults dispatcherDidReceiveNotificationFromOtherProcess:]
  -[NMSyncDefaults _clearAssetSyncPlaylistDependentDefaults]
  -[NMSyncDefaults beginBatchUpdates]
  -[NMSyncDefaults clearPodcastsDefaults]
  -[NMSyncDefaults _notifyChangesForKey:]
  -[NMSyncDefaults objectForKey:]
  -[NMSyncDefaults pinnedPlaylists]
  -[NMSyncDefaults _writeDate:forKey:bundleID:]
  -[NMSyncDefaults _reloadPropertiesFromDefaultsOnMainThread]
  -[NMSyncDefaults clearAppActivityStatusDefaultsForBundleID:]
  -[NMSyncDefaults setLastUserPinningChangeDateForBundleID:]
  -[NMSyncDefaults setLibraryRecommendationAlbums:]
  -[NMSyncDefaults podcastsSyncInfo]
  -[NMSyncDefaults setListenNowPodcastFeedURLs:]
  -[NMSyncDefaults lastSyncInfoRequestDateForBundleIdentifier:]
  -[NMSyncDefaults _resetDomainAccessor]
  -[NMSyncDefaults lastContentUsedDateForBundleID:]
  -[NMSyncDefaults setGizmoPodcastDownloadOrders:]
  -[NMSyncDefaults debugSyncInfoEnabled]
  -[NMSyncDefaults _dateValueForKey:bundleID:]
  -[NMSyncDefaults setInstallDateForBundleID:]
  -[NMSyncDefaults init]
  -[NMSyncDefaults setGizmoPodcastEpisodeLimits:]
  -[NMSyncDefaults setAudiobooksSyncInfo:]
  -[NMSyncDefaults lastUserPinningChangeDateForBundleID:]
  -[NMSyncDefaults setPinnedAudiobooks:]
  -[NMSyncDefaults readingNowEnabled]
  -[NMSyncDefaults _setLastSyncInfoRequestDate:prefix:forBundleIdentifier:]
  -[NMSyncDefaults _associatedObject]


_NMSyncDefaultsAssociatedObject : NSObject
 @property  MPMediaPlaylist *assetSyncPlaylist

  // instance methods
  -[_NMSyncDefaultsAssociatedObject dealloc]
  -[_NMSyncDefaultsAssociatedObject assetSyncPlaylist]
  -[_NMSyncDefaultsAssociatedObject .cxx_destruct]
  -[_NMSyncDefaultsAssociatedObject setAssetSyncPlaylist:]
  -[_NMSyncDefaultsAssociatedObject init]
  -[_NMSyncDefaultsAssociatedObject _mediaLibraryDidChangeNotification:]


NMSModelRecommendationsLibraryResponse : MPModelLibraryResponse
  // instance methods
  -[NMSModelRecommendationsLibraryResponse initWithRequest:]
  -[NMSModelRecommendationsLibraryResponse dealloc]
  -[NMSModelRecommendationsLibraryResponse _handleMusicRecommendationsDidUpdateNotification:]
  -[NMSModelRecommendationsLibraryResponse _handleMusicRecommendationArtworkDidUpdateNotification:]


NMSModelRecommendationsLibraryRequestOperation : MPAsyncOperation
 @property  NMSModelRecommendationsLibraryRequest *request
 @property  @? responseHandler

  // instance methods
  -[NMSModelRecommendationsLibraryRequestOperation responseHandler]
  -[NMSModelRecommendationsLibraryRequestOperation setRequest:]
  -[NMSModelRecommendationsLibraryRequestOperation execute]
  -[NMSModelRecommendationsLibraryRequestOperation .cxx_destruct]
  -[NMSModelRecommendationsLibraryRequestOperation setResponseHandler:]
  -[NMSModelRecommendationsLibraryRequestOperation request]
  -[NMSModelRecommendationsLibraryRequestOperation _requestPlaylistsEntries]
  -[NMSModelRecommendationsLibraryRequestOperation _requestSongs]
  -[NMSModelRecommendationsLibraryRequestOperation _requestAlbums]
  -[NMSModelRecommendationsLibraryRequestOperation _requestPlaylists]
  -[NMSModelRecommendationsLibraryRequestOperation _requestContainerWithClass:]
  -[NMSModelRecommendationsLibraryRequestOperation _modelObjectWithCachedArtworkFromModelObject:]
  -[NMSModelRecommendationsLibraryRequestOperation _mpIdentifierSetsFromStringIdentifiers:]


NMSModelRecommendationsLibraryRequest : MPModelLibraryRequest
  // instance methods
  -[NMSModelRecommendationsLibraryRequest newOperationWithResponseHandler:]


NMSGreenTeaStreamingDefaults : NSObject
  // class methods
  +[NMSGreenTeaStreamingDefaults sharedInstance]

  // instance methods
  -[NMSGreenTeaStreamingDefaults .cxx_destruct]
  -[NMSGreenTeaStreamingDefaults _setBool:forKey:]
  -[NMSGreenTeaStreamingDefaults init]
  -[NMSGreenTeaStreamingDefaults _boolForKey:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicIsMirroringStreamingSettings]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicIsMirroringStreamingSettings:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicAllowCellularForStreaming]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicAllowCellularForStreaming:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicAllowCellularForHighQualityStreaming]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicAllowCellularForHighQualityStreaming:]
  -[NMSGreenTeaStreamingDefaults greenTeaMusicAllowsDownloadsOverCellular]
  -[NMSGreenTeaStreamingDefaults setGreenTeaMusicAllowsDownloadsOverCellular:]


NMSKeepLocalRequestProxy : NMSKeepLocalRequest
  // instance methods
  -[NMSKeepLocalRequestProxy .cxx_destruct]
  -[NMSKeepLocalRequestProxy initWithModelObject:enableState:]
  -[NMSKeepLocalRequestProxy performWithOptions:completion:]


NMSMediaSyncService : NSObject <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[NMSMediaSyncService service:account:incomingUnhandledProtobuf:fromID:context:]
  -[NMSMediaSyncService _defaultPairedDevice]
  -[NMSMediaSyncService dealloc]
  -[NMSMediaSyncService service:account:identifier:didSendWithSuccess:error:context:]
  -[NMSMediaSyncService .cxx_destruct]
  -[NMSMediaSyncService init]
  -[NMSMediaSyncService _handleMediaSyncServiceKeepLocalRequest:service:account:fromID:context:]
  -[NMSMediaSyncService _handleMediaSyncServiceKeepLocalResponse:service:account:fromID:context:]
  -[NMSMediaSyncService performKeepLocalRequestWithEnableState:modelObject:options:completion:]
  -[NMSMediaSyncService _containerTypeForModelObject:]
  -[NMSMediaSyncService _midDataFromModelObject:]
  -[NMSMediaSyncService _performFailSafeWithIDSMessageIdentifier:timeout:]
  -[NMSMediaSyncService _cleanupCompletionWithID:]
  -[NMSMediaSyncService _sendMessage:messageType:timeout:completion:]
  -[NMSMediaSyncService _sendProtoBufForMessage:messageType:timeout:]
  -[NMSMediaSyncService _idsMessageOptionsWithTimeout:]
  -[NMSMediaSyncService _setProtobufHandlers]
  -[NMSMediaSyncService _sendServiceResultMessage:idsMessageID:timeout:]
  -[NMSMediaSyncService _sendServiceResponse:idsMessageID:timeout:]
  -[NMSMediaSyncService _setMessage:withValidatorException:]
  -[NMSMediaSyncService _modelClassForContainerType:]
  -[NMSMediaSyncService _callAndRemoveCompletionWithResult:idsMessageID:]
  -[NMSMediaSyncService _convertMediaSyncServiceKeepLocalCellularPolicy:]
  -[NMSMediaSyncService _convertNMSKeepLocalRequestCellularPolicy:]
  -[NMSMediaSyncService _convertMediaSyncServiceKeepLocalPowerPolicy:]
  -[NMSMediaSyncService _convertNMSKeepLocalRequestPowerPolicy:]
  -[NMSMediaSyncService _convertMPModelObjectKeepLocalEnableState:]
  -[NMSMediaSyncService _convertMediaSyncServiceKeepLocalEnableState:]
  -[NMSMediaSyncService _nmsQOSFromNSQOS:]
  -[NMSMediaSyncService _nsQOSFromNMSQOS:]
  -[NMSMediaSyncService _nmsKeepLocalExceptionFromNMSSyncServiceException:]


NMSKeepLocalRequestLocal : NMSKeepLocalRequest
  // class methods
  +[NMSKeepLocalRequestLocal sharedKeepLocalOperationQueue]

  // instance methods
  -[NMSKeepLocalRequestLocal performWithOptions:completion:]
  -[NMSKeepLocalRequestLocal _performRequestWithConstraints:qualityOfService:completion:]
  -[NMSKeepLocalRequestLocal _constraintsWithConstraints:options:]
  -[NMSKeepLocalRequestLocal _validatorExceptionWithValidatorException:options:]


NMSContainer : NSObject
 @property  NSString *name
 @property  NSNumber *persistentID
 @property  unsigned long type
 @property  NSNumber *addedDate
 @property  NSNumber *playedDate

  // instance methods
  -[NMSContainer addedDate]
  -[NMSContainer type]
  -[NMSContainer .cxx_destruct]
  -[NMSContainer setAddedDate:]
  -[NMSContainer name]
  -[NMSContainer persistentID]
  -[NMSContainer initWithPersistentID:name:type:]
  -[NMSContainer playedDate]
  -[NMSContainer setPlayedDate:]


NMSMusicRecommendationManager : NSObject
 @property  BOOL wantsContentsUpdate

  // class methods
  +[NMSMusicRecommendationManager sharedManager]
  +[NMSMusicRecommendationManager _shouldComputeLibraryRecommendations]

  // instance methods
  -[NMSMusicRecommendationManager nms_fetchSelectedRecommendationSectionTypesForModelObject:queue:completionHandler:]
  -[NMSMusicRecommendationManager _deleteCachedArtworksWithTokens:]
  -[NMSMusicRecommendationManager _removePreviousCachedRecommendationsResponses]
  -[NMSMusicRecommendationManager _invalidateArtworkRetryTimer]
  -[NMSMusicRecommendationManager dealloc]
  -[NMSMusicRecommendationManager _finishLoadingContentsWithResponse:]
  -[NMSMusicRecommendationManager _fetchAddedDateForContainer:]
  -[NMSMusicRecommendationManager _handleRecommendationStoreContentsDidChangeNotification:]
  -[NMSMusicRecommendationManager _sortedContainersBasedOnRecency]
  -[NMSMusicRecommendationManager _importArtworkForPlaylists:]
  -[NMSMusicRecommendationManager .cxx_destruct]
  -[NMSMusicRecommendationManager _updateRecommendationsSelections]
  -[NMSMusicRecommendationManager fetchRecommendationsWithQueue:completion:]
  -[NMSMusicRecommendationManager _isLibraryRecommendationExpired]
  -[NMSMusicRecommendationManager _handlePairedDeviceDidBecomeActiveNotification:]
  -[NMSMusicRecommendationManager _reloadRecommendationsFromDefaultsWithCompletion:]
  -[NMSMusicRecommendationManager setWantsContentsUpdate:]
  -[NMSMusicRecommendationManager wantsContentsUpdate]
  -[NMSMusicRecommendationManager _persistUpdatedRecommendationsWithResponse:]
  -[NMSMusicRecommendationManager _handleActiveAccountDidChangeNotification:]
  -[NMSMusicRecommendationManager _scheduleNextLibraryRecommendationReloadIfNecessary]
  -[NMSMusicRecommendationManager _registerForPairingFinishedNotification]
  -[NMSMusicRecommendationManager _removeLegacyRecommendationsDefaultsIfNecessary]
  -[NMSMusicRecommendationManager _removePreviousRecommendationDefaults]
  -[NMSMusicRecommendationManager _reloadLibraryRecommendations]
  -[NMSMusicRecommendationManager _handleRecommendationSelectionsDidChangeNotification:]
  -[NMSMusicRecommendationManager nms_deselectRecommendationIfNecessaryForModelObject:]
  -[NMSMusicRecommendationManager _startArtworkRetryTimer]
  -[NMSMusicRecommendationManager persistRecommendationsSelections:]
  -[NMSMusicRecommendationManager _updateWithRecommendations:]
  -[NMSMusicRecommendationManager _recommendations]
  -[NMSMusicRecommendationManager _retryFailedArtworkImportsIfNecessary]
  -[NMSMusicRecommendationManager _reloadRecommendationContentsIfNecessary]
  -[NMSMusicRecommendationManager hasSelectedRecommendationWithIdentifier:]
  -[NMSMusicRecommendationManager _handleMediaLibraryEntitiesAddedOrRemovedNotification:]
  -[NMSMusicRecommendationManager _handleArtworksDidUpdateNotification:]
  -[NMSMusicRecommendationManager _setArtworkImageCache:withToken:]
  -[NMSMusicRecommendationManager _notifyMusicRecommendationsDidUpdateNotification]
  -[NMSMusicRecommendationManager _handleSubscriptionStatusDidChangeNotification:]
  -[NMSMusicRecommendationManager nms_fetchRecentMusicRecommendationWithQueue:completionHandler:]
  -[NMSMusicRecommendationManager _importArtworkIfNecessaryForObjectsIgnorePreviousCache:]
  -[NMSMusicRecommendationManager _expirationDateForUpdateDate:withOffsetDays:]
  -[NMSMusicRecommendationManager _invalidateLibraryRecommendationExpirationTimer]
  -[NMSMusicRecommendationManager _unregisterForPairingFinishedNotification]
  -[NMSMusicRecommendationManager _handleMediaLibraryDidChangeNotification:]
  -[NMSMusicRecommendationManager init]
  -[NMSMusicRecommendationManager _handlePairingFinishedNotification:]


NMSModelForYouRecommendationsRequest : MPModelForYouRecommendationsRequest
 @property  BOOL nms_useCachedDataOnly
 @property  NSArray *nms_cachedRecommendationsArray
 @property  NSDictionary *nms_cachedStoreItemMetadataResults

  // instance methods
  -[NMSModelForYouRecommendationsRequest newOperationWithResponseHandler:]
  -[NMSModelForYouRecommendationsRequest .cxx_destruct]
  -[NMSModelForYouRecommendationsRequest copyWithZone:]
  -[NMSModelForYouRecommendationsRequest nms_useCachedDataOnly]
  -[NMSModelForYouRecommendationsRequest setNms_useCachedDataOnly:]
  -[NMSModelForYouRecommendationsRequest nms_cachedRecommendationsArray]
  -[NMSModelForYouRecommendationsRequest setNms_cachedRecommendationsArray:]
  -[NMSModelForYouRecommendationsRequest nms_cachedStoreItemMetadataResults]
  -[NMSModelForYouRecommendationsRequest setNms_cachedStoreItemMetadataResults:]


NMSModelForYouRecommendationsRequestOperation : MPModelForYouRecommendationsRequestOperation
  // instance methods
  -[NMSModelForYouRecommendationsRequestOperation execute]
  -[NMSModelForYouRecommendationsRequestOperation _produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:]


NMSMediaSettingsSynchronizer : NSObject
  // class methods
  +[NMSMediaSettingsSynchronizer sharedSynchronizer]

  // instance methods
  -[NMSMediaSettingsSynchronizer _reconcileGreenTeaSettingsIfNecessary]
  -[NMSMediaSettingsSynchronizer _podcastsAppGroupPath]
  -[NMSMediaSettingsSynchronizer endObservingUpdates]
  -[NMSMediaSettingsSynchronizer dealloc]
  -[NMSMediaSettingsSynchronizer .cxx_destruct]
  -[NMSMediaSettingsSynchronizer _migrateMusicDefaultsIfNecessary]
  -[NMSMediaSettingsSynchronizer observeValueForKeyPath:ofObject:change:context:]
  -[NMSMediaSettingsSynchronizer _preferredGreenTeaMusicStreamingResolutionPreference]
  -[NMSMediaSettingsSynchronizer _syncPodcastDefaultsIfNecessary]
  -[NMSMediaSettingsSynchronizer _createDefaultGreenTeaSettingsIfNecessary]
  -[NMSMediaSettingsSynchronizer _podcastsUserDefaults]
  -[NMSMediaSettingsSynchronizer beginObservingUpdates]


NMSAudiobookCacheItemMetadata : NSObject
 @property  double cachedStartTime
 @property  double cachedDuration

  // class methods
  +[NMSAudiobookCacheItemMetadata metaDataForMediaItem:]

  // instance methods
  -[NMSAudiobookCacheItemMetadata _baseDirectoryForMediaItem:]
  -[NMSAudiobookCacheItemMetadata _loadForMediaItem:]
  -[NMSAudiobookCacheItemMetadata cachedStartTime]
  -[NMSAudiobookCacheItemMetadata setCachedStartTime:]
  -[NMSAudiobookCacheItemMetadata cachedDuration]
  -[NMSAudiobookCacheItemMetadata setCachedDuration:]


NMSMediaContainerQuotaData : NSObject
 @property  unsigned long numItemsAdded
 @property  BOOL hasSkippedItems
 @property  BOOL hasRemovedItems
 @property  id quotaRefObj
 @property  BOOL hasItemsAboveQuota

  // instance methods
  -[NMSMediaContainerQuotaData .cxx_destruct]
  -[NMSMediaContainerQuotaData hasItemsAboveQuota]
  -[NMSMediaContainerQuotaData quotaRefObj]
  -[NMSMediaContainerQuotaData setQuotaRefObj:]
  -[NMSMediaContainerQuotaData numItemsAdded]
  -[NMSMediaContainerQuotaData setNumItemsAdded:]
  -[NMSMediaContainerQuotaData hasSkippedItems]
  -[NMSMediaContainerQuotaData setHasSkippedItems:]
  -[NMSMediaContainerQuotaData hasRemovedItems]
  -[NMSMediaContainerQuotaData setHasRemovedItems:]


NMSPodcastReferenceObject : NSObject
 @property  NSString *feedURL
 @property  unsigned long episodeLimit
 @property  unsigned long downloadOrder

  // instance methods
  -[NMSPodcastReferenceObject .cxx_destruct]
  -[NMSPodcastReferenceObject isEqual:]
  -[NMSPodcastReferenceObject feedURL]
  -[NMSPodcastReferenceObject episodeLimit]
  -[NMSPodcastReferenceObject setEpisodeLimit:]
  -[NMSPodcastReferenceObject initWithFeedURL:episodeLimit:downloadOrder:]
  -[NMSPodcastReferenceObject initWithFeedURL:downloadOrder:]
  -[NMSPodcastReferenceObject predicatesForFeedURL]
  -[NMSPodcastReferenceObject downloadOrder]


NMSPodcastUpNextMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastUpNextMediaItemGroup .cxx_destruct]
  -[NMSPodcastUpNextMediaItemGroup itemList]
  -[NMSPodcastUpNextMediaItemGroup identifiersForContainerType:]
  -[NMSPodcastUpNextMediaItemGroup _upNextEpisodes]
  -[NMSPodcastUpNextMediaItemGroup _upNextFeedURLs]


NMSPodcastSavedEpisodesMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastSavedEpisodesMediaItemGroup itemList]
  -[NMSPodcastSavedEpisodesMediaItemGroup identifiersForContainerType:]


NMSPodcastCustomShowMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastCustomShowMediaItemGroup itemList]
  -[NMSPodcastCustomShowMediaItemGroup identifiersForContainerType:]


NMSPodcastStationMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSPodcastStationMediaItemGroup itemList]
  -[NMSPodcastStationMediaItemGroup identifiersForContainerType:]


NMSPodcastMediaItemGroup_legacy : NMSMediaItemGroup
  // class methods
  +[NMSPodcastMediaItemGroup_legacy _sharedPodcastSizeCache]

  // instance methods
  -[NMSPodcastMediaItemGroup_legacy itemList]
  -[NMSPodcastMediaItemGroup_legacy identifiersForContainerType:]


NMSSyncedMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSSyncedMediaItemGroup identifiersForContainerType:]


NMSRecommendationMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSRecommendationMediaItemGroup itemList]
  -[NMSRecommendationMediaItemGroup isEstimate]
  -[NMSRecommendationMediaItemGroup recommendation]
  -[NMSRecommendationMediaItemGroup identifiersForContainerType:]
  -[NMSRecommendationMediaItemGroup _fetchDownloadableItemsForIDs:]


NMSAudiobookReferenceObject : NSObject
 @property  NSNumber *audiobookIdentifier
 @property  unsigned long downloadLimit

  // instance methods
  -[NMSAudiobookReferenceObject .cxx_destruct]
  -[NMSAudiobookReferenceObject isEqual:]
  -[NMSAudiobookReferenceObject initWithAudiobookIdentifier:downloadLimit:]
  -[NMSAudiobookReferenceObject audiobookMediaItem]
  -[NMSAudiobookReferenceObject audiobookIdentifier]
  -[NMSAudiobookReferenceObject downloadLimit]
  -[NMSAudiobookReferenceObject setDownloadLimit:]


NMSAudiobooksMediaItemGroup : NMSMediaItemGroup
  // instance methods
  -[NMSAudiobooksMediaItemGroup itemList]
  -[NMSAudiobooksMediaItemGroup identifiersForContainerType:]


NMSMediaItemGroup : NSObject
 @property  unsigned long type
 @property  id referenceObj
 @property  NMSMediaContainerQuotaData *quotaData
 @property  BOOL manuallyAdded
 @property  BOOL isEstimate
 @property  BOOL downloadedItemsOnly

  // class methods
  +[NMSMediaItemGroup sharedLibraryRequestQueue]
  +[NMSMediaItemGroup itemGroupWithRecommendation:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithPodcastFeedURL:downloadOrder:episodeLimit:manuallyAdded:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithUpNextEpisodesDownloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithSavedEpisodesDownloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithCustomPodcastFeedURL:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithPodcastStationUUID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithAudiobookIdentifier:downloadLimit:manuallyAdded:downloadedItemsOnly:]
  +[NMSMediaItemGroup _itemsForContainerClass:containerIDs:includingNonLibraryContent:includingDownloadedContentOnly:manuallyAdded:]
  +[NMSMediaItemGroup itemGroupWithSyncedPlaylistID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithSyncedAlbumID:downloadedItemsOnly:]
  +[NMSMediaItemGroup itemGroupWithQuotaRefObj:]

  // instance methods
  -[NMSMediaItemGroup identifiers]
  -[NMSMediaItemGroup type]
  -[NMSMediaItemGroup .cxx_destruct]
  -[NMSMediaItemGroup setType:]
  -[NMSMediaItemGroup isEqual:]
  -[NMSMediaItemGroup itemList]
  -[NMSMediaItemGroup isEstimate]
  -[NMSMediaItemGroup isEqualToContainer:]
  -[NMSMediaItemGroup manuallyAdded]
  -[NMSMediaItemGroup identifiersForContainerType:]
  -[NMSMediaItemGroup initWithType:refObj:manuallyAdded:quotaRefObj:downloadedItemsOnly:]
  -[NMSMediaItemGroup referenceObj]
  -[NMSMediaItemGroup setReferenceObj:]
  -[NMSMediaItemGroup quotaData]
  -[NMSMediaItemGroup setQuotaData:]
  -[NMSMediaItemGroup setManuallyAdded:]
  -[NMSMediaItemGroup downloadedItemsOnly]
  -[NMSMediaItemGroup setDownloadedItemsOnly:]


NMSModelEditorialRecommendationsRequest : MPModelStoreBrowseRequest
 @property  BOOL nms_useCachedDataOnly
 @property  id nms_cachedLoadedOutput

  // instance methods
  -[NMSModelEditorialRecommendationsRequest newOperationWithResponseHandler:]
  -[NMSModelEditorialRecommendationsRequest .cxx_destruct]
  -[NMSModelEditorialRecommendationsRequest copyWithZone:]
  -[NMSModelEditorialRecommendationsRequest nms_useCachedDataOnly]
  -[NMSModelEditorialRecommendationsRequest setNms_useCachedDataOnly:]
  -[NMSModelEditorialRecommendationsRequest nms_cachedLoadedOutput]
  -[NMSModelEditorialRecommendationsRequest setNms_cachedLoadedOutput:]


NMSModelEditorialRecommendationsRequestOperation : MPModelStoreBrowseRequestOperation
  // instance methods
  -[NMSModelEditorialRecommendationsRequestOperation execute]
  -[NMSModelEditorialRecommendationsRequestOperation configurationForLoadingModelDataWithStoreURLBag:error:]
  -[NMSModelEditorialRecommendationsRequestOperation produceResponseWithLoadedOutput:completion:]


NMSEpisodeFetchRequestItemEnumerator : NSObject <NMSDownloadableItemEnumerator>
 @property  NSArray *items

  // instance methods
  -[NMSEpisodeFetchRequestItemEnumerator nextItem]
  -[NMSEpisodeFetchRequestItemEnumerator .cxx_destruct]
  -[NMSEpisodeFetchRequestItemEnumerator items]
  -[NMSEpisodeFetchRequestItemEnumerator initWithFetchRequest:ctx:]


NMSAppActivityStatus : NSObject
 @property  NSString *bundleID

  // instance methods
  -[NMSAppActivityStatus initWithBundleID:]
  -[NMSAppActivityStatus .cxx_destruct]
  -[NMSAppActivityStatus bundleID]
  -[NMSAppActivityStatus _exceedsDormancyInterval:forDate:]
  -[NMSAppActivityStatus isAppContentDormant]
  -[NMSAppActivityStatus isAppContentDormantWithInterval:]
  -[NMSAppActivityStatus isAppDownloadingDormant]
  -[NMSAppActivityStatus isAppDownloadingDormantWithInterval:]
  -[NMSAppActivityStatus _defaultDormancyInterval]


NMSMediaSyncServiceKeepLocalRequest : PBRequest <NSCopying>
 @property  BOOL hasModelObject
 @property  NMSMediaSyncServiceModelObject *modelObject
 @property  BOOL hasEnableState
 @property  int enableState
 @property  BOOL hasOptions
 @property  NMSMediaSyncServiceKeepLocalOptions *options

  // instance methods
  -[NMSMediaSyncServiceKeepLocalRequest copyTo:]
  -[NMSMediaSyncServiceKeepLocalRequest .cxx_destruct]
  -[NMSMediaSyncServiceKeepLocalRequest options]
  -[NMSMediaSyncServiceKeepLocalRequest mergeFrom:]
  -[NMSMediaSyncServiceKeepLocalRequest dictionaryRepresentation]
  -[NMSMediaSyncServiceKeepLocalRequest copyWithZone:]
  -[NMSMediaSyncServiceKeepLocalRequest setOptions:]
  -[NMSMediaSyncServiceKeepLocalRequest readFrom:]
  -[NMSMediaSyncServiceKeepLocalRequest writeTo:]
  -[NMSMediaSyncServiceKeepLocalRequest isEqual:]
  -[NMSMediaSyncServiceKeepLocalRequest hasOptions]
  -[NMSMediaSyncServiceKeepLocalRequest setModelObject:]
  -[NMSMediaSyncServiceKeepLocalRequest modelObject]
  -[NMSMediaSyncServiceKeepLocalRequest enableState]
  -[NMSMediaSyncServiceKeepLocalRequest setEnableState:]
  -[NMSMediaSyncServiceKeepLocalRequest hasModelObject]
  -[NMSMediaSyncServiceKeepLocalRequest setHasEnableState:]
  -[NMSMediaSyncServiceKeepLocalRequest hasEnableState]
  -[NMSMediaSyncServiceKeepLocalRequest enableStateAsString:]
  -[NMSMediaSyncServiceKeepLocalRequest StringAsEnableState:]


NMSNotificationDispatcher : NSObject
 @property  NSString *baseNotificationName
 @property  <NMSNotificationDispatcherDelegate> *delegate

  // instance methods
  -[NMSNotificationDispatcher scheduleLocalDarwinNotification]
  -[NMSNotificationDispatcher _postLocalDarwinNotification]
  -[NMSNotificationDispatcher setDelegate:]
  -[NMSNotificationDispatcher delegate]
  -[NMSNotificationDispatcher beginWaitingForUpdates]
  -[NMSNotificationDispatcher dealloc]
  -[NMSNotificationDispatcher endWaitingForUpdates]
  -[NMSNotificationDispatcher .cxx_destruct]
  -[NMSNotificationDispatcher initWithNotificationName:]
  -[NMSNotificationDispatcher baseNotificationName]
  -[NMSNotificationDispatcher _handleLocalNotificationIgnoringSenderPID:]
  -[NMSNotificationDispatcher _handleRemoteNotification]


NMSSubscriptionManager : NSObject <ICEnvironmentMonitorObserver>
 @property  long long subscriptionType
 @property  unsigned long subscriptionCapabilities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSSubscriptionManager sharedManager]

  // instance methods
  -[NMSSubscriptionManager environmentMonitorDidChangeNetworkReachability:]
  -[NMSSubscriptionManager _updateActiveAccount]
  -[NMSSubscriptionManager subscriptionType]
  -[NMSSubscriptionManager .cxx_destruct]
  -[NMSSubscriptionManager hasCapability:]
  -[NMSSubscriptionManager _retrySubscriptionStatusRequest]
  -[NMSSubscriptionManager _handleAccountStoreDidChangeNotification:]
  -[NMSSubscriptionManager subscriptionCapabilities]
  -[NMSSubscriptionManager _handleSubscriptionStatusDidChangeNotification:]
  -[NMSSubscriptionManager init]
  -[NMSSubscriptionManager _updateSubscriptionStatus]


NMSAlternatingItemEnumerator : NSObject <NMSDownloadableItemEnumerator>
  // instance methods
  -[NMSAlternatingItemEnumerator nextItem]
  -[NMSAlternatingItemEnumerator .cxx_destruct]
  -[NMSAlternatingItemEnumerator initWithItemEnumerators:]


NMSPodcastsDownloadableContentProvider : NSObject <MTDBExtensionAccessObserver, ICEnvironmentMonitorObserver, NMSDownloadableContentProvider>
 @property  NSPersistentHistoryToken *lastMergedToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <NMSDownloadableContentProviderDelegate> *delegate

  // instance methods
  -[NMSPodcastsDownloadableContentProvider setDelegate:]
  -[NMSPodcastsDownloadableContentProvider delegate]
  -[NMSPodcastsDownloadableContentProvider environmentMonitorDidChangePower:]
  -[NMSPodcastsDownloadableContentProvider .cxx_destruct]
  -[NMSPodcastsDownloadableContentProvider init]
  -[NMSPodcastsDownloadableContentProvider _ctx]
  -[NMSPodcastsDownloadableContentProvider extensionAccessDidChange]
  -[NMSPodcastsDownloadableContentProvider _handlePersistentStoreRemoteChangeNotification:]
  -[NMSPodcastsDownloadableContentProvider _handlePodcastsPinningSelectionsDidChangeNotification:]
  -[NMSPodcastsDownloadableContentProvider _handlePodcastSizeInfoDidChangeNotification:]
  -[NMSPodcastsDownloadableContentProvider lastMergedToken]
  -[NMSPodcastsDownloadableContentProvider setLastMergedToken:]
  -[NMSPodcastsDownloadableContentProvider _changeContainsRelevantEpisodeChanges:]
  -[NMSPodcastsDownloadableContentProvider _changeContainsRelevantShowChanges:]
  -[NMSPodcastsDownloadableContentProvider _changeContainsRelevantStationChanges:]
  -[NMSPodcastsDownloadableContentProvider _relevantChannelProperties]
  -[NMSPodcastsDownloadableContentProvider _changeContainsRelevantChannelChanges:]
  -[NMSPodcastsDownloadableContentProvider _shouldMergeHistoryTransaction:]
  -[NMSPodcastsDownloadableContentProvider _notifyDelegateContentDidChange]
  -[NMSPodcastsDownloadableContentProvider _notifyDelegateContentDidChangeImmediately]
  -[NMSPodcastsDownloadableContentProvider _processLatestPersistenHistoryChanges]
  -[NMSPodcastsDownloadableContentProvider _resetPersistentHistoryTokenAndNotifyObservers]
  -[NMSPodcastsDownloadableContentProvider createItemEnumerator]


NMSMusicRecommendation : NSObject <NSCopying>
 @property  NSOrderedSet *items
 @property  NSString *identifier
 @property  NSString *title
 @property  NSDate *lastModifiedDate
 @property  MPArtworkCatalog *artworkCatalog
 @property  BOOL selected
 @property  NSArray *storeRecommendationModelObjects

  // class methods
  +[NMSMusicRecommendation _missingArtImage]
  +[NMSMusicRecommendation _fillArtworkMutableArray:toCount:]

  // instance methods
  -[NMSMusicRecommendation identifier]
  -[NMSMusicRecommendation lastModifiedDate]
  -[NMSMusicRecommendation setSelected:]
  -[NMSMusicRecommendation .cxx_destruct]
  -[NMSMusicRecommendation items]
  -[NMSMusicRecommendation title]
  -[NMSMusicRecommendation copyWithZone:]
  -[NMSMusicRecommendation isSelected]
  -[NMSMusicRecommendation isEqual:]
  -[NMSMusicRecommendation artworkCatalog]
  -[NMSMusicRecommendation initRecentMusicRecommendationWithItems:itemSectionMap:]
  -[NMSMusicRecommendation nms_isRecentMusic]
  -[NMSMusicRecommendation recommendationSectionTypeForModelObject:]
  -[NMSMusicRecommendation initWithIdentifier:title:items:itemSectionMap:]
  -[NMSMusicRecommendation sectionForItemWithIdentifiers:]
  -[NMSMusicRecommendation _tiledArtworkRequestForPlaylists:albums:]
  -[NMSMusicRecommendation storeRecommendationModelObjects]


NMSSyncProgressInfo : NSObject
 @property  NSString *assetType
 @property  unsigned long syncState
 @property  unsigned long syncWaitingSubstate
 @property  float estimatedSyncProgress
 @property  long long numberOfAssetItems
 @property  long long numberOfAssetItemsSynced
 @property  long long numberOfAssetItemsNeedingDownload
 @property  unsigned long aggregateAssetItemBytesAdded

  // class methods
  +[NMSSyncProgressInfo _stringFromSyncState:]
  +[NMSSyncProgressInfo _stringFromWaitingSubstate:]

  // instance methods
  -[NMSSyncProgressInfo assetType]
  -[NMSSyncProgressInfo syncState]
  -[NMSSyncProgressInfo .cxx_destruct]
  -[NMSSyncProgressInfo setSyncState:]
  -[NMSSyncProgressInfo setAssetType:]
  -[NMSSyncProgressInfo syncWaitingSubstate]
  -[NMSSyncProgressInfo setSyncWaitingSubstate:]
  -[NMSSyncProgressInfo estimatedSyncProgress]
  -[NMSSyncProgressInfo setEstimatedSyncProgress:]
  -[NMSSyncProgressInfo numberOfAssetItems]
  -[NMSSyncProgressInfo setNumberOfAssetItems:]
  -[NMSSyncProgressInfo numberOfAssetItemsSynced]
  -[NMSSyncProgressInfo setNumberOfAssetItemsSynced:]
  -[NMSSyncProgressInfo numberOfAssetItemsNeedingDownload]
  -[NMSSyncProgressInfo setNumberOfAssetItemsNeedingDownload:]
  -[NMSSyncProgressInfo aggregateAssetItemBytesAdded]
  -[NMSSyncProgressInfo setAggregateAssetItemBytesAdded:]


NMSSyncStatesDict : NSObject <NSCopying>
  // class methods
  +[NMSSyncStatesDict assetTypeForMediaType:]
  +[NMSSyncStatesDict mediaTypeForAssetType:]

  // instance methods
  -[NMSSyncStatesDict .cxx_destruct]
  -[NMSSyncStatesDict copyWithZone:]
  -[NMSSyncStatesDict init]
  -[NMSSyncStatesDict setSyncState:forMediaType:]
  -[NMSSyncStatesDict setSyncStateForAllMediaTypes:]
  -[NMSSyncStatesDict setWaitingSubstate:forMediaType:]
  -[NMSSyncStatesDict setWaitingSubstateForAllMediaTypes:]
  -[NMSSyncStatesDict syncStateForMediaType:]
  -[NMSSyncStatesDict waitingSubstateForMediaType:]
  -[NMSSyncStatesDict syncStateDictionaryRepresentation]
  -[NMSSyncStatesDict waitingSubstateDictionaryRepresentation]


NMSSyncManager : NSObject <ATSessionObserver>
 @property  id activeSyncSessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NMSSyncManager sharedManager]
  +[NMSSyncManager _mediaTypeForAssetType:]
  +[NMSSyncManager _syncStateForProgressInfo:session:]
  +[NMSSyncManager _syncWaitingSubstateForProgressInfo:]
  +[NMSSyncManager _gizmoSyncStates]

  // instance methods
  -[NMSSyncManager sessionDidFinish:]
  -[NMSSyncManager sessionWillBegin:]
  -[NMSSyncManager dealloc]
  -[NMSSyncManager .cxx_destruct]
  -[NMSSyncManager session:willBeginSessionTask:]
  -[NMSSyncManager session:didBeginSessionTask:]
  -[NMSSyncManager session:didUpdateSessionTask:]
  -[NMSSyncManager init]
  -[NMSSyncManager session:didFinishSessionTask:]
  -[NMSSyncManager _updateSyncProgress]
  -[NMSSyncManager _updateObservedSyncSession]
  -[NMSSyncManager _handleSyncStateDidChangeNotification]
  -[NMSSyncManager _defaultProgressInfoDict]
  -[NMSSyncManager _defaultSyncProgressInfoForAssetType:]
  -[NMSSyncManager _tracksQueryWithPredicate:]
  -[NMSSyncManager _addedTracksPredicateForMediaType:]
  -[NMSSyncManager _addedTracksQueryForMediaType:]
  -[NMSSyncManager _estimatedAssetAggregateItemSizeInBytesWithQuery:]
  -[NMSSyncManager _aggregateAssetItemBytesAddedForMediaType:]
  -[NMSSyncManager _assetTypeForMediaType:]
  -[NMSSyncManager progressInfoForMediaType:]
  -[NMSSyncManager musicProgressInfo]
  -[NMSSyncManager podcastsProgressInfo]
  -[NMSSyncManager audiobooksProgressInfo]
  -[NMSSyncManager beginReceivingSyncProgressUpdates]
  -[NMSSyncManager _stopObservingSyncSession]
  -[NMSSyncManager _startObservingSyncSession]
  -[NMSSyncManager _invokeOnMainThread:]
  -[NMSSyncManager _syncProgressInfoByAssetType:]
  -[NMSSyncManager _updateProgressInfoForAssetType:assetItemsTotal:assetItemsSyncedForSyncSession:bytesToSyncTotal:bytesSyncedThisSyncSession:]
  -[NMSSyncManager _numberOfItemsNeedingDownloadForAssetType:]
  -[NMSSyncManager _tracksPredicateWithPersistentIDs:]
  -[NMSSyncManager activeSyncSessionIdentifier]
  -[NMSSyncManager setActiveSyncSessionIdentifier:]


NMSMediaSyncServiceModelObject : PBCodable <NSCopying>
 @property  BOOL hasDataMultiverseID
 @property  NSData *dataMultiverseID
 @property  BOOL hasContainerType
 @property  int containerType

  // instance methods
  -[NMSMediaSyncServiceModelObject copyTo:]
  -[NMSMediaSyncServiceModelObject .cxx_destruct]
  -[NMSMediaSyncServiceModelObject mergeFrom:]
  -[NMSMediaSyncServiceModelObject dictionaryRepresentation]
  -[NMSMediaSyncServiceModelObject copyWithZone:]
  -[NMSMediaSyncServiceModelObject readFrom:]
  -[NMSMediaSyncServiceModelObject writeTo:]
  -[NMSMediaSyncServiceModelObject isEqual:]
  -[NMSMediaSyncServiceModelObject containerType]
  -[NMSMediaSyncServiceModelObject setContainerType:]
  -[NMSMediaSyncServiceModelObject setHasContainerType:]
  -[NMSMediaSyncServiceModelObject hasContainerType]
  -[NMSMediaSyncServiceModelObject containerTypeAsString:]
  -[NMSMediaSyncServiceModelObject StringAsContainerType:]
  -[NMSMediaSyncServiceModelObject hasDataMultiverseID]
  -[NMSMediaSyncServiceModelObject dataMultiverseID]
  -[NMSMediaSyncServiceModelObject setDataMultiverseID:]


NMSPodcastIdentifierSet : NSObject <NSCopying>
 @property  NSNumber *storeID
 @property  NSString *feedURL

  // instance methods
  -[NMSPodcastIdentifierSet storeID]
  -[NMSPodcastIdentifierSet initWithDictionary:]
  -[NMSPodcastIdentifierSet .cxx_destruct]
  -[NMSPodcastIdentifierSet dictionaryRepresentation]
  -[NMSPodcastIdentifierSet copyWithZone:]
  -[NMSPodcastIdentifierSet isEqual:]
  -[NMSPodcastIdentifierSet feedURL]
  -[NMSPodcastIdentifierSet initWithStoreID:feedURL:]
  -[NMSPodcastIdentifierSet isEqualToPodcastIdentifierSet:]


NMSMusicCatalogRecommendationsUpdater : NSObject
 @property  @? updateHandlerBlock

  // class methods
  +[NMSMusicCatalogRecommendationsUpdater _configurationWithBag:]
  +[NMSMusicCatalogRecommendationsUpdater _nextUpdateDelayAfterDate:configuration:]
  +[NMSMusicCatalogRecommendationsUpdater _stalenessIntervalWithBag:]
  +[NMSMusicCatalogRecommendationsUpdater _clearLastUpdatedDateIfNeeded]

  // instance methods
  -[NMSMusicCatalogRecommendationsUpdater .cxx_destruct]
  -[NMSMusicCatalogRecommendationsUpdater _handleSubscriptionStatusDidChangeNotification:]
  -[NMSMusicCatalogRecommendationsUpdater init]
  -[NMSMusicCatalogRecommendationsUpdater _handlePairedDeviceRegistryDeviceDidPairNotification:]
  -[NMSMusicCatalogRecommendationsUpdater beginAutomaticContentUpdating]
  -[NMSMusicCatalogRecommendationsUpdater endAutomaticContentUpdating]
  -[NMSMusicCatalogRecommendationsUpdater _scheduleNextUpdateIfNeeded]
  -[NMSMusicCatalogRecommendationsUpdater _scheduleNextUpdateWithBag:]
  -[NMSMusicCatalogRecommendationsUpdater _needsInitialContentUpdate]
  -[NMSMusicCatalogRecommendationsUpdater _performNextUpdateWithScheduler:completionHandler:]
  -[NMSMusicCatalogRecommendationsUpdater _performNextUpdateWithScheduler:urlBag:completionHandler:]
  -[NMSMusicCatalogRecommendationsUpdater updateHandlerBlock]
  -[NMSMusicCatalogRecommendationsUpdater setUpdateHandlerBlock:]


MPModelPlaylist(LastUpdatedString)
	// instance methods
	-[MPModelPlaylist(LastUpdatedString) nms_lastUpdatedString]
	-[MPModelPlaylist(LastUpdatedString) nms_compactLastUpdatedString]
	-[MPModelPlaylist(LastUpdatedString) nms_shouldShowLastUpdatedString]
	-[MPModelPlaylist(LastUpdatedString) _stringForDayOfWeek:compact:]

MPModelObject(NanoMusicSync)
	// class methods
	+[MPModelObject(NanoMusicSync) nms_modelObjectWithLibraryPersistentID:]
	+[MPModelObject(NanoMusicSync) nms_modelObjectWithLibraryPersistentID:block:]

	// instance methods
	-[MPModelObject(NanoMusicSync) nms_recommendationObject]
	-[MPModelObject(NanoMusicSync) nms_prefersFullCatalogRepresentation]
	-[MPModelObject(NanoMusicSync) nms_syncInfoContainerIdentifier]
	-[MPModelObject(NanoMusicSync) nms_setRecommendationObject:]

MPIdentifierSet(NanoMusicSync)
	// class methods
	+[MPIdentifierSet(NanoMusicSync) nms_identifierSetWithLibraryPersistentID:modelKind:]

	// instance methods
	-[MPIdentifierSet(NanoMusicSync) nms_universalStoreLookupID]
	-[MPIdentifierSet(NanoMusicSync) nms_syncInfoPlaylistIdentifier]
	-[MPIdentifierSet(NanoMusicSync) nms_syncInfoAlbumIdentifier]

MPModelLibraryKeepLocalChangeRequest(NanoMusicSync)
	// class methods
	+[MPModelLibraryKeepLocalChangeRequest(NanoMusicSync) nms_defaultKeepLocalConstraints]

MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest)
	// instance methods
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_cachedRecommendationsArray]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_cachedStoreItemMetadataResults]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_setCachedRecommendationsArray:]
	-[MPModelForYouRecommendationsResponse(NMSModelForYouRecommendationsRequest) nms_setCachedStoreItemMetadataResults:]

MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest)
	// instance methods
	-[MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest) nms_cachedLoadedOutput]
	-[MPModelStoreBrowseResponse(NMSModelEditorialRecommendationsRequest) nms_setCachedLoadedOutput:]

MTEpisode(NMSDownloadableItem)
	// class methods
	+[MTEpisode(NMSDownloadableItem) propertiesToFetchDownloadInfo]
	+[MTEpisode(NMSDownloadableItem) relationshipKeyPathsForPrefetchingDownloadInfo]
	+[MTEpisode(NMSDownloadableItem) _sizeEstimation]

	// instance methods
	-[MTEpisode(NMSDownloadableItem) downloadInfo]

NSBundle(NMSAdditions)
	// class methods
	+[NSBundle(NMSAdditions) nanoMusicSyncBundle]

MIPMultiverseIdentifier(NanoMusicSync)
	// class methods
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromAlbumSyncIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromPlaylistSyncIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromPlaylistSyncID:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromAlbumPIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataArrayFromPlaylistPIDs:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromAlbumPID:]
	+[MIPMultiverseIdentifier(NanoMusicSync) midDataFromPlaylistPID:]
	+[MIPMultiverseIdentifier(NanoMusicSync) pidFromMIDData:]
	+[MIPMultiverseIdentifier(NanoMusicSync) pidsFromMIDDataArray:]
	+[MIPMultiverseIdentifier(NanoMusicSync) _multiverseIdentifiersWithPIDs:groupingType:]
	+[MIPMultiverseIdentifier(NanoMusicSync) _pidsFromSyncIDs:containerClass:]

01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0100 /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic: ATConnection 
01 00 0100 /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic: ATSession 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICAgeVerificationManager 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICEnvironmentMonitor 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICMusicSubscriptionStatusController 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICStorageManager 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICStoreRequestContext 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICURLBagProvider 
01 00 0900 /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud: ICUserIdentity 
01 00 0500 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSProtobuf 
01 00 0500 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: MIPMultiverseIdentifier 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Album 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3AllCompoundPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3AnyCompoundPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ComparisonPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Container 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ContainmentPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3ContainsPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3MusicLibrary 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3NegationPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3PersistentIDsPredicate 
01 00 0f00 /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary: ML3Track 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPArtworkCatalog 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPArtworkRepresentation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPAsyncOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPIdentifierSet 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaLibrary 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaPropertyPredicate 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMediaQuery 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelAlbum 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelAlbumKind 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationGroup 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelForYouRecommendationsResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelKind 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryImportChangeRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryKeepLocalChangeRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelLibraryResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelObject 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylist 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylistEntry 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelPlaylistKind 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelSong 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPModelStoreBrowseSection 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPMutableSectionedCollection 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPNetworkObserver 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPropertySet 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreItemMetadata 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreItemMetadataResponse 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequest 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequestConfiguration 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelRequestOperation 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPStoreModelSongBuilder 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPTiledArtworkDataSource 
01 00 1000 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPTiledArtworkRequest 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTDB 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTDBExtensionAccess 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTEpisode 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPlaylist 
01 00 0400 /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation: MTPodcast 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIHeavyRotationRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIStarterPackMultiplexRequest 
01 00 0600 /System/Library/PrivateFrameworks/NanoMediaAPI.framework/NanoMediaAPI: NMAPIURLRequest 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 0700 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1400 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
