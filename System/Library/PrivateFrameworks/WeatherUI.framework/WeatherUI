|| __DATA.__data _AlternativeFontColorAlpha
|| __DATA.__objc_data _OBJC_CLASS_$_WUIWidgetBackgroundView
|| __DATA.__objc_data _OBJC_METACLASS_$_WUIWidgetBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WUIAsynchronousAssetLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WUIDynamicWeatherBackground
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WUIWeatherCondition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WUIWeatherConditionBackgroundView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WUIAsynchronousAssetLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WUIDynamicWeatherBackground
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WUIWeatherCondition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WUIWeatherConditionBackgroundView
|| __TEXT.__text _ClearGraphicQuality
|| __TEXT.__text _CreateWeatherLabel
|| __TEXT.__text _DayOfYear
|| __TEXT.__text _DegreesFromRadians
|| __TEXT.__text _GraphicQuality
|| __TEXT.__text _HairlineThickness
|| __TEXT.__text _HourAngle
|| __TEXT.__text _RadiansFromDegrees
|| __TEXT.__text _RoundToPixel
|| __TEXT.__text _SunHeight
|| __TEXT.__text _WAGrayColor
|| __TEXT.__text _WAPrecipitationColor
|| __TEXT.__text _WAShadowColor
|| __TEXT.__text _WATealColor
|| __TEXT.__text _WATextColor
|| __TEXT.__text _WAWeatherMathResetForTimeChange
|| __TEXT.__text _WatchSystemTealColor
|| __TEXT.__text _WeatherUIFrameworkBundle
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectZero
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ QuartzCore: _CACurrentMediaTime
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAEmitterLayer
__ QuartzCore: _OBJC_CLASS_$_CAFilter
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAMLParser
__ QuartzCore: _OBJC_CLASS_$_CASpringAnimation
__ QuartzCore: _OBJC_CLASS_$_CAState
__ QuartzCore: _OBJC_CLASS_$_CAStateAddAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateAddElement
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _OBJC_CLASS_$_CAStateElement
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveAnimation
__ QuartzCore: _OBJC_CLASS_$_CAStateRemoveElement
__ QuartzCore: _OBJC_CLASS_$_CAStateSetValue
__ QuartzCore: _OBJC_CLASS_$_CAStateTransition
__ QuartzCore: _OBJC_CLASS_$_CAStateTransitionElement
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_CLASS_$_CATransition
__ QuartzCore: _OBJC_METACLASS_$_CAGradientLayer
__ QuartzCore: _kCAFillModeBoth
__ QuartzCore: _kCAFilterPlusD
__ QuartzCore: _kCATransitionFade
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityDarkerSystemColorsEnabled
__ UIKit: _UIAccessibilityDarkerSystemColorsStatusDidChangeNotification
__ UIKit: _UIAccessibilityIsReduceMotionEnabled
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UICreateCGImageFromIOSurface
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIImagePNGRepresentation
__ Weather: _GetDeviceHeight
__ Weather: _GetDeviceWidth
__ Weather: _IsUIRTL
__ Weather: _OBJC_CLASS_$_City
__ Weather: _OBJC_CLASS_$_WAGradientProvider
__ Weather: _OBJC_CLASS_$_WeatherInternalPreferences
__ Weather: _RemapSmallIconForDayOrNight
__ Weather: _WALogForCategory
__ Weather: _kCityNotificationNameDidUpdate
__ Weather: _kMaxAllowedCitiesCount
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
WUIGradient : NSObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  UIColor *firstColor
 @property  UIColor *secondColor
 @property  UIColor *thirdColor

  // instance methods
  -[WUIGradient .cxx_destruct]
  -[WUIGradient setFirstColor:]
  -[WUIGradient setSecondColor:]
  -[WUIGradient firstColor]
  -[WUIGradient secondColor]
  -[WUIGradient thirdColor]
  -[WUIGradient setThirdColor:]


WUIWidgetBackgroundView : UIView /usr/lib/libSystem.B.dylib
 @property  WUIWeatherConditionBackgroundView *condtionBackground

  // instance methods
  -[WUIWidgetBackgroundView initWithFrame:]
  -[WUIWidgetBackgroundView .cxx_destruct]
  -[WUIWidgetBackgroundView setCondtionBackground:]
  -[WUIWidgetBackgroundView condtionBackground]
  -[WUIWidgetBackgroundView setConditionCode:isDay:]


WUITimeOfDayGradientProvider : NSObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  WUIGradient *midnightGradient
 @property  WUIGradient *sunupdownGradient
 @property  WUIGradient *morningeveningGradient
 @property  WUIGradient *noonGradient

  // instance methods
  -[WUITimeOfDayGradientProvider .cxx_destruct]
  -[WUITimeOfDayGradientProvider _gradientColors]
  -[WUITimeOfDayGradientProvider midnightGradient]
  -[WUITimeOfDayGradientProvider sunupdownGradient]
  -[WUITimeOfDayGradientProvider morningeveningGradient]
  -[WUITimeOfDayGradientProvider noonGradient]
  -[WUITimeOfDayGradientProvider _mixedGradientWithFirstGradient:andGradient:factor:]
  -[WUITimeOfDayGradientProvider gradientColorsForTime:sunrise:sunset:]
  -[WUITimeOfDayGradientProvider isDate:inRangeFirstDate:lastDate:]
  -[WUITimeOfDayGradientProvider setMidnightGradient:]
  -[WUITimeOfDayGradientProvider setSunupdownGradient:]
  -[WUITimeOfDayGradientProvider setMorningeveningGradient:]
  -[WUITimeOfDayGradientProvider setNoonGradient:]


WUIDynamicWeatherBackgroundInteractiveTransaction : NSObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  double progress
 @property  NSArray *layers
 @property  CALayer *toLayer
 @property  long long swipeDirection

  // instance methods
  -[WUIDynamicWeatherBackgroundInteractiveTransaction layers]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction setLayers:]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction .cxx_destruct]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction toLayer]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction swipeDirection]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction setProgress:]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction progress]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction setToLayer:]
  -[WUIDynamicWeatherBackgroundInteractiveTransaction setSwipeDirection:]


WUIAsynchronousAssetLoader : NSObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <CAMLParserDelegate>
 @property  NSCache *resourceCache
 @property  NSCache *dataCache
 @property  NSCache *caDataCache
 @property  NSTimer *opportunityTimer
 @property  <WAAssetLoaderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WUIAsynchronousAssetLoader sharedAssetLoader]

  // instance methods
  -[WUIAsynchronousAssetLoader opportunityTimer]
  -[WUIAsynchronousAssetLoader CAMLParser:formatWarningString:arguments:lineNumber:]
  -[WUIAsynchronousAssetLoader loadRootLayerForFile:completion:]
  -[WUIAsynchronousAssetLoader init]
  -[WUIAsynchronousAssetLoader setOpportunityTimer:]
  -[WUIAsynchronousAssetLoader setCaDataCache:]
  -[WUIAsynchronousAssetLoader CAMLParser:formatErrorString:arguments:lineNumber:]
  -[WUIAsynchronousAssetLoader dealloc]
  -[WUIAsynchronousAssetLoader .cxx_destruct]
  -[WUIAsynchronousAssetLoader resourceCache]
  -[WUIAsynchronousAssetLoader CAMLParser:didFailToFindClassWithName:]
  -[WUIAsynchronousAssetLoader _opportunisticallyLoad]
  -[WUIAsynchronousAssetLoader filenameForCondition:isDay:]
  -[WUIAsynchronousAssetLoader caml_parsing_queue]
  -[WUIAsynchronousAssetLoader setResourceCache:]
  -[WUIAsynchronousAssetLoader caDataCache]
  -[WUIAsynchronousAssetLoader _primeOpportunisticLoad]
  -[WUIAsynchronousAssetLoader dataCache]
  -[WUIAsynchronousAssetLoader queue]
  -[WUIAsynchronousAssetLoader CAMLParser:didLoadResource:fromURL:]
  -[WUIAsynchronousAssetLoader didReceivedMemoryWarning]
  -[WUIAsynchronousAssetLoader _asynchronouslyPreheatCADataForCity:]
  -[WUIAsynchronousAssetLoader setDataCache:]
  -[WUIAsynchronousAssetLoader setDelegate:]
  -[WUIAsynchronousAssetLoader beginLoading]
  -[WUIAsynchronousAssetLoader setResource:forKey:]
  -[WUIAsynchronousAssetLoader CAMLParser:resourceForURL:]
  -[WUIAsynchronousAssetLoader delegate]
  -[WUIAsynchronousAssetLoader cancelLoading]


WUIGradientLayer : CAGradientLayer /usr/lib/libMobileGestalt.dylib
 @property  BOOL allowsActions

  // instance methods
  -[WUIGradientLayer allowsActions]
  -[WUIGradientLayer setAllowsActions:]
  -[WUIGradientLayer actionForKey:]


WUIWeatherCondition : NSObject /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics <CALayerDelegate>
 @property  NSMutableArray *gyroLayers
 @property  CAStateController *stateController
 @property  NSString *loadedFileName
 @property  BOOL forcesCondition
 @property  long long forcesNight
 @property  City *city
 @property  BOOL playing
 @property  double alpha
 @property  double speed
 @property  double timeOffset
 @property  BOOL hidden
 @property  CALayer *layer
 @property  BOOL shouldRasterize
 @property  BOOL multiCityMode
 @property  long long condition
 @property  BOOL isRotating
 @property  unsigned long CAMLState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WUIWeatherCondition initialize]

  // instance methods
  -[WUIWeatherCondition timeOffset]
  -[WUIWeatherCondition condition]
  -[WUIWeatherCondition setStateController:]
  -[WUIWeatherCondition setPlaying:]
  -[WUIWeatherCondition setCAMLLayerStateForInterfaceOrientation:animated:]
  -[WUIWeatherCondition setSpeed:]
  -[WUIWeatherCondition setShouldRasterize:]
  -[WUIWeatherCondition actionForLayer:forKey:]
  -[WUIWeatherCondition pause]
  -[WUIWeatherCondition CAMLState]
  -[WUIWeatherCondition init]
  -[WUIWeatherCondition speed]
  -[WUIWeatherCondition resume]
  -[WUIWeatherCondition setCity:]
  -[WUIWeatherCondition setIsRotating:]
  -[WUIWeatherCondition layer]
  -[WUIWeatherCondition dealloc]
  -[WUIWeatherCondition shouldRasterize]
  -[WUIWeatherCondition .cxx_destruct]
  -[WUIWeatherCondition city]
  -[WUIWeatherCondition forcesCondition]
  -[WUIWeatherCondition alpha]
  -[WUIWeatherCondition setForcesNight:]
  -[WUIWeatherCondition setCondition:]
  -[WUIWeatherCondition forcesNight]
  -[WUIWeatherCondition layoutSublayersOfLayer:]
  -[WUIWeatherCondition setTime:]
  -[WUIWeatherCondition loadedFileName]
  -[WUIWeatherCondition setCondition:animationDuration:]
  -[WUIWeatherCondition setGyroLayers:]
  -[WUIWeatherCondition setCAMLState:]
  -[WUIWeatherCondition stateController]
  -[WUIWeatherCondition playing]
  -[WUIWeatherCondition _interfaceConsideredPortraitForCAMLLayerWithSize:]
  -[WUIWeatherCondition _interfaceConsideredPortraitForCAMLLayer]
  -[WUIWeatherCondition hidden]
  -[WUIWeatherCondition setMultiCityMode:]
  -[WUIWeatherCondition setCorrectStateForCurrentOrientationAndMode]
  -[WUIWeatherCondition gyroLayers]
  -[WUIWeatherCondition setLoadedFileName:]
  -[WUIWeatherCondition multiCityMode]
  -[WUIWeatherCondition setAlpha:]
  -[WUIWeatherCondition setTimeOffset:]
  -[WUIWeatherCondition isRotating]
  -[WUIWeatherCondition setHidden:]
  -[WUIWeatherCondition setForcesCondition:]
  -[WUIWeatherCondition setAlpha:animationDuration:]
  -[WUIWeatherCondition setCity:animationDuration:]
  -[WUIWeatherCondition transitionToSize:animated:]


WUIWeatherConditionBackgroundView : UIView /usr/lib/libSystem.B.dylib
 @property  NSArray *cities
 @property  WUIDynamicWeatherBackgroundInteractiveTransaction *crossfadeTransaction
 @property  NSObject<OS_dispatch_source> *crossfadeEffectTimer
 @property  UIImageView *introductionImageView
 @property  WUIWeatherCondition *leftCondition
 @property  WUIWeatherCondition *rightCondition
 @property  NSArray *conditions
 @property  WUIDynamicWeatherBackground *background
 @property  BOOL hidesConditions
 @property  BOOL hasViewAppeared
 @property  double scrollOffset

  // instance methods
  -[WUIWeatherConditionBackgroundView _addBackAllLayers]
  -[WUIWeatherConditionBackgroundView prepareToResume]
  -[WUIWeatherConditionBackgroundView conditions]
  -[WUIWeatherConditionBackgroundView leftCondition]
  -[WUIWeatherConditionBackgroundView scrollOffset]
  -[WUIWeatherConditionBackgroundView didTransitionToSize:]
  -[WUIWeatherConditionBackgroundView setHasViewAppeared:]
  -[WUIWeatherConditionBackgroundView setCities:activeCityIndex:activeCityLiveConditionOnly:animationDuration:]
  -[WUIWeatherConditionBackgroundView initWithFrame:]
  -[WUIWeatherConditionBackgroundView setCities:]
  -[WUIWeatherConditionBackgroundView dealloc]
  -[WUIWeatherConditionBackgroundView _cityDidUpdate:]
  -[WUIWeatherConditionBackgroundView setScrollEnded]
  -[WUIWeatherConditionBackgroundView .cxx_destruct]
  -[WUIWeatherConditionBackgroundView useConditionView:activeCityIndex:]
  -[WUIWeatherConditionBackgroundView setScrollOffset:]
  -[WUIWeatherConditionBackgroundView prepareToSuspend]
  -[WUIWeatherConditionBackgroundView cities]
  -[WUIWeatherConditionBackgroundView hidesConditions]
  -[WUIWeatherConditionBackgroundView setRightCondition:]
  -[WUIWeatherConditionBackgroundView relinquishConditionViewForCityAtIndex:]
  -[WUIWeatherConditionBackgroundView background]
  -[WUIWeatherConditionBackgroundView _conditionAtIndex:]
  -[WUIWeatherConditionBackgroundView setHidesConditions:]
  -[WUIWeatherConditionBackgroundView setLeftCondition:]
  -[WUIWeatherConditionBackgroundView setCities:activeCityIndex:]
  -[WUIWeatherConditionBackgroundView updateConditionsAboutCityIndex:]
  -[WUIWeatherConditionBackgroundView _setCondition:atIndex:]
  -[WUIWeatherConditionBackgroundView crossfadeEffectTimer]
  -[WUIWeatherConditionBackgroundView updateConditionIfNeededWithCities:activeCityIndex:]
  -[WUIWeatherConditionBackgroundView hasViewAppeared]
  -[WUIWeatherConditionBackgroundView _removeSideLayers]
  -[WUIWeatherConditionBackgroundView setCrossfadeTransaction:]
  -[WUIWeatherConditionBackgroundView rightCondition]
  -[WUIWeatherConditionBackgroundView _conditions]
  -[WUIWeatherConditionBackgroundView setCities:activeCityIndex:animationDuration:]
  -[WUIWeatherConditionBackgroundView introductionImageView]
  -[WUIWeatherConditionBackgroundView setIntroductionImageView:]
  -[WUIWeatherConditionBackgroundView animateTransitionToSize:]
  -[WUIWeatherConditionBackgroundView crossfadeTransaction]
  -[WUIWeatherConditionBackgroundView layoutSubviews]
  -[WUIWeatherConditionBackgroundView saveImageForKeyCondition]
  -[WUIWeatherConditionBackgroundView setCrossfadeEffectTimer:]


WUIDynamicWeatherBackground : UIView /usr/lib/libSystem.B.dylib
 @property  CALayer *rootLayer
 @property  WUIGradientLayer *gradientLayer
 @property  CALayer *darkeningLayer
 @property  NSCache *backgroundCache
 @property  CALayer *currentBackground
 @property  CALayer *transitionBackground
 @property  NSNumber *sunHeightOverride
 @property  WUIWeatherCondition *condition

  // class methods
  +[WUIDynamicWeatherBackground initialize]
  +[WUIDynamicWeatherBackground handleMemoryWarning]
  +[WUIDynamicWeatherBackground beginReuseRestrictionForCity:]
  +[WUIDynamicWeatherBackground enqueueBackground:]
  +[WUIDynamicWeatherBackground dequeueBackgroundForCity:]
  +[WUIDynamicWeatherBackground endReuseRestriction]

  // instance methods
  -[WUIDynamicWeatherBackground condition]
  -[WUIDynamicWeatherBackground addSublayer:]
  -[WUIDynamicWeatherBackground setDarkeningLayer:]
  -[WUIDynamicWeatherBackground gradientLayer]
  -[WUIDynamicWeatherBackground setGradientLayer:]
  -[WUIDynamicWeatherBackground setCurrentBackground:]
  -[WUIDynamicWeatherBackground actionForLayer:forKey:]
  -[WUIDynamicWeatherBackground setCity:animate:]
  -[WUIDynamicWeatherBackground initWithFrame:]
  -[WUIDynamicWeatherBackground transitionBackground]
  -[WUIDynamicWeatherBackground setBackgroundCache:]
  -[WUIDynamicWeatherBackground sunHeightOverride]
  -[WUIDynamicWeatherBackground setCity:]
  -[WUIDynamicWeatherBackground setTransitionBackground:]
  -[WUIDynamicWeatherBackground rootLayer]
  -[WUIDynamicWeatherBackground updateFromCity:toCity:]
  -[WUIDynamicWeatherBackground .cxx_destruct]
  -[WUIDynamicWeatherBackground currentBackground]
  -[WUIDynamicWeatherBackground setCondition:]
  -[WUIDynamicWeatherBackground layoutSublayersOfLayer:]
  -[WUIDynamicWeatherBackground darkeningLayer]
  -[WUIDynamicWeatherBackground darkeningLayerOpacityForDay:]
  -[WUIDynamicWeatherBackground imageLayerFromConditon:isDay:]
  -[WUIDynamicWeatherBackground updateForDarkerSystemColors]
  -[WUIDynamicWeatherBackground setRootLayer:]
  -[WUIDynamicWeatherBackground darkerSystemColorsStatusDidChange:]
  -[WUIDynamicWeatherBackground hasSublayer:]
  -[WUIDynamicWeatherBackground completeTransitionWithSuccess:]
  -[WUIDynamicWeatherBackground animateTransitionToSize:]
  -[WUIDynamicWeatherBackground backgroundCache]
  -[WUIDynamicWeatherBackground springAnimationForKeyPath:mass:fromValue:toValue:]
  -[WUIDynamicWeatherBackground setSunHeightOverride:]
  -[WUIDynamicWeatherBackground getTopColor:middleColor:bottomColor:gradientStopPoint:forCity:date:]
  -[WUIDynamicWeatherBackground setCity:animationDuration:]


UILabel(WeatherAdditions)
	// instance methods
	-[UILabel(WeatherAdditions) setFrameOnBaseline:]
	-[UILabel(WeatherAdditions) frameForBaseline:]

CALayer(WeatherConditionExtensions)
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAEmitterLayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAFilter 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMLParser 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CASpringAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAState 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateAddElement 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateElement 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveAnimation 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateRemoveElement 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateSetValue 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransition 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateTransitionElement 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransition 
01 00 0600 /System/Library/PrivateFrameworks/Weather.framework/Weather: City 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0800 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0600 /System/Library/PrivateFrameworks/Weather.framework/Weather: WAGradientProvider 
01 00 0600 /System/Library/PrivateFrameworks/Weather.framework/Weather: WeatherInternalPreferences 
