|| __DATA.__objc_data _OBJC_CLASS_$_PLCoreDuetEvent
|| __DATA.__objc_data _OBJC_CLASS_$_PLCoreDuetEventInterval
|| __DATA.__objc_data _OBJC_CLASS_$_PLDuetActivitySchedulerUsageSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_PLEnergyBucket
|| __DATA.__objc_data _OBJC_CLASS_$_PLModelingUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_PLNetworkEnergyModel
|| __DATA.__objc_data _OBJC_CLASS_$_PLUsageSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_PLCoreDuetEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_PLCoreDuetEventInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_PLDuetActivitySchedulerUsageSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_PLEnergyBucket
|| __DATA.__objc_data _OBJC_METACLASS_$_PLModelingUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_PLNetworkEnergyModel
|| __DATA.__objc_data _OBJC_METACLASS_$_PLUsageSnapshot
|| __TEXT.__text _PLBatchDropMessages
|| __TEXT.__text _PLBatteryGaugeGetSnapshot
|| __TEXT.__text _PLBatteryGaugePauseTracingForBundleId
|| __TEXT.__text _PLBatteryGaugePauseTracingForPid
|| __TEXT.__text _PLBatteryGaugePauseTracingForProcessName
|| __TEXT.__text _PLBatteryGaugeResumeTracingForBundleId
|| __TEXT.__text _PLBatteryGaugeResumeTracingForPid
|| __TEXT.__text _PLBatteryGaugeResumeTracingForProcessName
|| __TEXT.__text _PLBatteryGaugeStartTracingForBundleId
|| __TEXT.__text _PLBatteryGaugeStartTracingForPid
|| __TEXT.__text _PLBatteryGaugeStartTracingForProcessName
|| __TEXT.__text _PLBatteryGaugeStopTracingForBundleId
|| __TEXT.__text _PLBatteryGaugeStopTracingForPid
|| __TEXT.__text _PLBatteryGaugeStopTracingForProcessName
|| __TEXT.__text _PLBatteryGaugeVersion
|| __TEXT.__text _PLBatteryLifeMonitorLogCoreDuetAdmissionEvent
|| __TEXT.__text _PLBatteryLifeMonitorLogCoreDuetEvent
|| __TEXT.__text _PLBatteryLifeMonitorLogCoreDuetEventsAggregate
|| __TEXT.__text _PLBatteryLifeMonitorLogCoreDuetPredictionEvents
|| __TEXT.__text _PLBatteryLifeMonitorLogDuetEvent
|| __TEXT.__text _PLBatteryLifeMonitorReportBatteryCapacityForCoreDuet
|| __TEXT.__text _PLBatteryLifeMonitorReportCumulativeTotalDiscretionaryEnergyCoreDuet
|| __TEXT.__text _PLBatteryLifeMonitorReportDiscretionaryBudgetForDuet
|| __TEXT.__text _PLBatteryLifeMonitorReportEnergyCoreDuet
|| __TEXT.__text _PLBatteryLifeMonitorReportEnergyDuet
|| __TEXT.__text _PLBatteryLifeMonitorStopAllDuetEvents
|| __TEXT.__text _PLBatteryUsageUIQuery
|| __TEXT.__text _PLBuildEnergyBucket
|| __TEXT.__text _PLBuildEnergyBucketTillNow
|| __TEXT.__text _PLBuildUsageSnapshot
|| __TEXT.__text _PLCalculateEndOfDay
|| __TEXT.__text _PLCalculateEndOfHour
|| __TEXT.__text _PLCopyBatteryUIPlists
|| __TEXT.__text _PLCopyPowerlog
|| __TEXT.__text _PLCrashMoverCopyPowerlog
|| __TEXT.__text _PLForceBatching
|| __TEXT.__text _PLLogEvent
|| __TEXT.__text _PLLogRegisteredAggregateEvent
|| __TEXT.__text _PLLogRegisteredEvent
|| __TEXT.__text _PLLogRegisteredEventFilterByInterval
|| __TEXT.__text _PLLogTimeSensitiveRegisteredEvent
|| __TEXT.__text _PLMovePowerlogsToCR
|| __TEXT.__text _PLPrefixForQueryType
|| __TEXT.__text _PLQuery
|| __TEXT.__text _PLQueryRegistered
|| __TEXT.__text _PLShouldLogEvent
|| __TEXT.__text _PLShouldLogRegisteredEvent
|| __TEXT.__text _PLSysdiagnoseCopyBatteryUILogs
|| __TEXT.__text _PLSysdiagnoseCopyPowerlog
|| __TEXT.__text _PLTalkToPowerlogHelper
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADMonotonicTimeGetCurrent
__ AggregateDictionary: _ADPushTimeIntervalForDistributionKeySinceStartTime
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _NSLocaleCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: __CFPreferencesCopyValueWithContainer
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCMessage
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyAnswerWithError
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _container_create_or_lookup_system_group_paths
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_send_notification
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
PLCoreDuetEventInterval : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate

  // instance methods
  -[PLCoreDuetEventInterval setEndDate:]
  -[PLCoreDuetEventInterval startDate]
  -[PLCoreDuetEventInterval intersects:]
  -[PLCoreDuetEventInterval .cxx_destruct]
  -[PLCoreDuetEventInterval endDate]
  -[PLCoreDuetEventInterval joinWithInterval:]
  -[PLCoreDuetEventInterval setStartDate:]


PLCoreDuetEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleID
 @property  unsigned char updateType
 @property  NSString *processName
 @property  NSDictionary *childBundleIDToWeight
 @property  NSArray *eventIntervals

  // instance methods
  -[PLCoreDuetEvent setChildBundleIDToWeight:]
  -[PLCoreDuetEvent setBundleID:]
  -[PLCoreDuetEvent setProcessName:]
  -[PLCoreDuetEvent processName]
  -[PLCoreDuetEvent .cxx_destruct]
  -[PLCoreDuetEvent updateType]
  -[PLCoreDuetEvent childBundleIDToWeight]
  -[PLCoreDuetEvent eventIntervals]
  -[PLCoreDuetEvent setEventIntervals:]
  -[PLCoreDuetEvent setUpdateType:]
  -[PLCoreDuetEvent bundleID]


PLEnergyBucket : NSObject /usr/lib/libSystem.B.dylib
 @property  short level

  // instance methods
  -[PLEnergyBucket level]
  -[PLEnergyBucket setLevel:]


PLUsageSnapshot : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *timestamp
 @property  double cpuUsage

  // instance methods
  -[PLUsageSnapshot .cxx_destruct]
  -[PLUsageSnapshot timestamp]
  -[PLUsageSnapshot setTimestamp:]
  -[PLUsageSnapshot setCpuUsage:]
  -[PLUsageSnapshot cpuUsage]


PLDuetActivitySchedulerUsageSnapshot : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *startDate
 @property  NSDate *stopDate
 @property  double numberOfBytesUploadedWiFi
 @property  double numberOfBytesDownloadedWiFi
 @property  double numberOfBytesUploadedCell
 @property  double numberOfBytesDownloadedCell
 @property  NSString *bundleID

  // instance methods
  -[PLDuetActivitySchedulerUsageSnapshot setBundleID:]
  -[PLDuetActivitySchedulerUsageSnapshot startDate]
  -[PLDuetActivitySchedulerUsageSnapshot numberOfBytesUploadedCell]
  -[PLDuetActivitySchedulerUsageSnapshot numberOfBytesDownloadedCell]
  -[PLDuetActivitySchedulerUsageSnapshot numberOfBytesUploadedWiFi]
  -[PLDuetActivitySchedulerUsageSnapshot numberOfBytesDownloadedWiFi]
  -[PLDuetActivitySchedulerUsageSnapshot setStopDate:]
  -[PLDuetActivitySchedulerUsageSnapshot setNumberOfBytesUploadedWiFi:]
  -[PLDuetActivitySchedulerUsageSnapshot setNumberOfBytesDownloadedWiFi:]
  -[PLDuetActivitySchedulerUsageSnapshot setNumberOfBytesUploadedCell:]
  -[PLDuetActivitySchedulerUsageSnapshot setNumberOfBytesDownloadedCell:]
  -[PLDuetActivitySchedulerUsageSnapshot .cxx_destruct]
  -[PLDuetActivitySchedulerUsageSnapshot stopDate]
  -[PLDuetActivitySchedulerUsageSnapshot setStartDate:]
  -[PLDuetActivitySchedulerUsageSnapshot bundleID]


PLNetworkEnergyModel : NSObject /usr/lib/libSystem.B.dylib
 @property  double powerlevel1Duration
 @property  double powerlevel2Duration
 @property  double powerlevel3Duration
 @property  unsigned char linkType
 @property  double overallBytes
 @property  double overallDuration
 @property  unsigned int updateCount
 @property  NSString *taskUUID
 @property  NSArray *linkCost
 @property  NSArray *linkDuration
 @property  NSArray *linkLevel1Parameters

  // instance methods
  -[PLNetworkEnergyModel setTaskUUID:]
  -[PLNetworkEnergyModel taskUUID]
  -[PLNetworkEnergyModel linkType]
  -[PLNetworkEnergyModel initWithLinkType:]
  -[PLNetworkEnergyModel powerlevel1Duration]
  -[PLNetworkEnergyModel powerlevel2Duration]
  -[PLNetworkEnergyModel powerlevel3Duration]
  -[PLNetworkEnergyModel overallBytes]
  -[PLNetworkEnergyModel overallDuration]
  -[PLNetworkEnergyModel setOverallDuration:]
  -[PLNetworkEnergyModel setOverallBytes:]
  -[PLNetworkEnergyModel computeLevel1TimeWithBytes:]
  -[PLNetworkEnergyModel updateAllLevelTimesWithLevel1Time:withUpdateDuration:]
  -[PLNetworkEnergyModel linkLevel1Parameters]
  -[PLNetworkEnergyModel linkDuration]
  -[PLNetworkEnergyModel setPowerlevel1Duration:]
  -[PLNetworkEnergyModel setPowerlevel2Duration:]
  -[PLNetworkEnergyModel setPowerlevel3Duration:]
  -[PLNetworkEnergyModel initWithLinkType:withTaskUUID:]
  -[PLNetworkEnergyModel updateWithBytes:withDuration:]
  -[PLNetworkEnergyModel reportEnergyToPowerlogWithClientID:]
  -[PLNetworkEnergyModel setLinkCost:]
  -[PLNetworkEnergyModel setLinkDuration:]
  -[PLNetworkEnergyModel .cxx_destruct]
  -[PLNetworkEnergyModel setLinkLevel1Parameters:]
  -[PLNetworkEnergyModel updateCount]
  -[PLNetworkEnergyModel setUpdateCount:]
  -[PLNetworkEnergyModel linkCost]
  -[PLNetworkEnergyModel setLinkType:]
  -[PLNetworkEnergyModel getEnergy]


PLModelingUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PLModelingUtilities isMac]
  +[PLModelingUtilities isiPad]
  +[PLModelingUtilities internalBuild]
  +[PLModelingUtilities isiPhone]
  +[PLModelingUtilities isHomePod]
  +[PLModelingUtilities defaultBatteryEnergyCapacity]
  +[PLModelingUtilities duetDiscretionaryBudget]
  +[PLModelingUtilities valueForMobileGestaltCapability:]
  +[PLModelingUtilities shouldShowBatteryGraphs]
  +[PLModelingUtilities alsCurveHigherThanDefault]
  +[PLModelingUtilities networkingEnergyWithBytes:withDuration:]
  +[PLModelingUtilities isPercentageSupported]
  +[PLModelingUtilities isLowPowerModeSupported]
  +[PLModelingUtilities isNarrowScreen]
  +[PLModelingUtilities isHeySiriAlwaysOn]
  +[PLModelingUtilities carrierBuild]
  +[PLModelingUtilities isiPod]
  +[PLModelingUtilities isWatch]


PLClientLogAggregator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *aggregatesCache
 @property  unsigned char numAggregates
 @property  unsigned char numAggregations
 @property  NSObject<OS_os_log> *logHandle
 @property  NSObject<OS_dispatch_queue> *executionQueue
 @property  NSObject<OS_dispatch_source> *flushTimer

  // class methods
  +[PLClientLogAggregator sharedInstance]

  // instance methods
  -[PLClientLogAggregator init]
  -[PLClientLogAggregator _flushToPowerLog]
  -[PLClientLogAggregator executionQueue]
  -[PLClientLogAggregator logHandle]
  -[PLClientLogAggregator .cxx_destruct]
  -[PLClientLogAggregator setFlushTimer:]
  -[PLClientLogAggregator _aggregateForClientID:eventName:eventDictionary:configuration:]
  -[PLClientLogAggregator _isEventInputValid:configuration:]
  -[PLClientLogAggregator _eventAggregate:eventName:aggregateKey:valueLabel:]
  -[PLClientLogAggregator _setEventAggregate:eventName:aggregateKey:valueLabel:value:]
  -[PLClientLogAggregator numAggregations]
  -[PLClientLogAggregator setNumAggregations:]
  -[PLClientLogAggregator _scheduleFlushTimer]
  -[PLClientLogAggregator cleanCache]
  -[PLClientLogAggregator aggregatesCache]
  -[PLClientLogAggregator setNumAggregates:]
  -[PLClientLogAggregator numAggregates]
  -[PLClientLogAggregator aggregateForClientID_async:eventName:eventDictionary:configuration:]
  -[PLClientLogAggregator setLogHandle:]
  -[PLClientLogAggregator flushTimer]
  -[PLClientLogAggregator setExecutionQueue:]


PLClientLogger : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL clientDebug
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *batchFlushQueue
 @property  NSString *processName
 @property  NSMutableDictionary *permissionCache
 @property  NSMutableDictionary *pendingTaskCache
 @property  NSMutableArray *batchedTaskCache
 @property  NSMutableDictionary *eventFilterSaved
 @property  NSObject<OS_dispatch_queue> *xpcConnectionQueue
 @property  NSObject<OS_dispatch_queue> *xpcConnectionHelperQueue
 @property  NSObject<OS_xpc_object> *xpcConnection
 @property  NSObject<OS_xpc_object> *xpcConnectionHelper
 @property  BOOL talkToPowerlogHelper
 @property  BOOL batchedTimerInFlight
 @property  BOOL forceBatching
 @property  BOOL batchDropMessages
 @property  NSSet *batchingClientWhitelist
 @property  int batchedDropMessageCount
 @property  NSObject<OS_dispatch_queue> *adaptivePermissionWorkQueue

  // class methods
  +[PLClientLogger sharedInstance]
  +[PLClientLogger allowMessageOnDevice]

  // instance methods
  -[PLClientLogger setXpcConnection:]
  -[PLClientLogger batchingClientWhitelist]
  -[PLClientLogger setProcessName:]
  -[PLClientLogger setWorkQueue:]
  -[PLClientLogger eventFilterSaved]
  -[PLClientLogger init]
  -[PLClientLogger setXpcConnectionHelper:]
  -[PLClientLogger xpcConnection]
  -[PLClientLogger setCachePermission:ForClientID:withKey:withType:]
  -[PLClientLogger permissionForClientID:withKey:withType:completion:]
  -[PLClientLogger getWorkQueueForClientID:]
  -[PLClientLogger batchTasksCacheFlush]
  -[PLClientLogger xpcConnectionWithClientID:withKey:withPayload:]
  -[PLClientLogger setBatchedDropMessageCount:]
  -[PLClientLogger setAdaptivePermissionWorkQueue:]
  -[PLClientLogger processName]
  -[PLClientLogger xpcSendMessage:withClientID:withKey:withPayload:]
  -[PLClientLogger addToPendingTaskCacheForType:forClientID:forKey:withPayload:]
  -[PLClientLogger batchFlushQueue]
  -[PLClientLogger .cxx_destruct]
  -[PLClientLogger shouldLogNowForClientID:withKey:withPayload:withFilterInterval:]
  -[PLClientLogger workQueue]
  -[PLClientLogger addToBatchedTaskCacheForType:forClientID:forKey:withPayload:]
  -[PLClientLogger adaptivePermissionWorkQueue]
  -[PLClientLogger logLaterForClientID:withKey:withFilterInterval:]
  -[PLClientLogger batchedTaskCache]
  -[PLClientLogger buildMessageForClientID:withKey:withPayload:]
  -[PLClientLogger logWithCurrentDateForClientID:withKey:withPayload:]
  -[PLClientLogger batchedDropMessageCount]
  -[PLClientLogger setClientDebug:]
  -[PLClientLogger xpcConnectionHelperQueue]
  -[PLClientLogger logForClientID:withKey:withPayload:]
  -[PLClientLogger permissionCache]
  -[PLClientLogger pendingTaskCache]
  -[PLClientLogger setBatchDropMessages:]
  -[PLClientLogger setBatchFlushQueue:]
  -[PLClientLogger logStateCaches]
  -[PLClientLogger setXpcConnectionQueue:]
  -[PLClientLogger setTalkToPowerlogHelper:]
  -[PLClientLogger xpcConnectionQueue]
  -[PLClientLogger powerlogStateChanged]
  -[PLClientLogger batchDropMessages]
  -[PLClientLogger setBatchedTimerInFlight:]
  -[PLClientLogger talkToPowerlogHelper]
  -[PLClientLogger clientDebug]
  -[PLClientLogger xpcConnectionHelper]
  -[PLClientLogger setPendingTaskCache:]
  -[PLClientLogger blockedPermissionForClientID:withKey:withType:withTimeout:]
  -[PLClientLogger batchedTimerInFlight]
  -[PLClientLogger setBatchedTaskCache:]
  -[PLClientLogger cachedPermissionForClientID:withKey:withType:]
  -[PLClientLogger pendingTasksForType:forClientID:forKey:]
  -[PLClientLogger setForceBatching:]
  -[PLClientLogger xpcSendMessageWithReply:withClientID:withKey:withPayload:]
  -[PLClientLogger forceBatching]
  -[PLClientLogger xpcSendMessageWithRateLimitingforClient:withKey:withPayload:]
  -[PLClientLogger queryForClientID:withKey:withPayload:]
  -[PLClientLogger setEventFilterSaved:]
  -[PLClientLogger setPermissionCache:]
  -[PLClientLogger setXpcConnectionHelperQueue:]
  -[PLClientLogger batchSizeForClientID:]


01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
