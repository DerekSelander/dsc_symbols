|| __DATA.__objc_data _OBJC_CLASS_$_BTAirPodsControlServiceClient
|| __DATA.__objc_data _OBJC_CLASS_$_BTAudioRoutingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_BTAudioSession
|| __DATA.__objc_data _OBJC_CLASS_$_BTBannerUISession
|| __DATA.__objc_data _OBJC_CLASS_$_BTBluetoothPairingSession
|| __DATA.__objc_data _OBJC_CLASS_$_BTServicesClient
|| __DATA.__objc_data _OBJC_CLASS_$_BTShareAudioSessionClient
|| __DATA.__objc_data _OBJC_METACLASS_$_BTAirPodsControlServiceClient
|| __DATA.__objc_data _OBJC_METACLASS_$_BTAudioRoutingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_BTAudioSession
|| __DATA.__objc_data _OBJC_METACLASS_$_BTBannerUISession
|| __DATA.__objc_data _OBJC_METACLASS_$_BTBluetoothPairingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_BTServicesClient
|| __DATA.__objc_data _OBJC_METACLASS_$_BTShareAudioSessionClient
|| __DATA_CONST.__const _BTCloudSoundProfileChangedNotification
|| __DATA_CONST.__const _BTErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTAudioRoutingRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTCloudAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTCloudDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTCloudDeviceSupportInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTCloudServicesClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTCloudSoundProfileRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_BTMagicPairingSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTAudioRoutingRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTCloudAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTCloudDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTCloudDeviceSupportInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTCloudServicesClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTCloudSoundProfileRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_BTMagicPairingSettings
|| __TEXT.__text _BTErrorF
|| __TEXT.__text _BTNestedErrorF
|| __TEXT.__text _BTXPCGetNextClientID
__ CoreBluetooth: _CBCentralManagerOptionEnableFindMy
__ CoreBluetooth: _CBErrorF
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreBluetooth: _OBJC_CLASS_$_CBUUID
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreUtils: _CUDispatchTimerSet
__ CoreUtils: _CUPrintNSDataHex
__ CoreUtils: _CUPrintNSError
__ CoreUtils: _CUPrintNSObjectOneLine
__ CoreUtils: _CUXPCDecodeNSErrorIfNeeded
__ CoreUtils: _CUXPCEncodeNSError
__ CoreUtils: _DebugGetErrorString
__ CoreUtils: _FatalErrorF
__ CoreUtils: _IsAppleInternalBuild
__ CoreUtils: _LogCategoryReplaceF
__ CoreUtils: _LogCategory_Remove
__ CoreUtils: _LogPrintF
__ CoreUtils: _LogPrintF_safe
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _NSDecodeObjectIfPresent
__ CoreUtils: _NSDecodeSInt64RangedIfPresent
__ CoreUtils: _NSErrorF
__ CoreUtils: _NSErrorNestedV
__ CoreUtils: _NSErrorV
__ CoreUtils: _RandomBytes
__ CoreUtils: __LogCategory_Initialize
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _xpc_connection_activate
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_reply
__ libSystem.B.dylib: _xpc_dictionary_expects_reply
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_get_type
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
BTCloudServicesClient : NSObject
 @property  NSXPCListenerEndpoint *testListenerEndpoint
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? interruptionHandler
 @property  @? invalidationHandler

  // instance methods
  -[BTCloudServicesClient setInvalidationHandler:]
  -[BTCloudServicesClient setTestListenerEndpoint:]
  -[BTCloudServicesClient createMagicSettingsRecord:completion:]
  -[BTCloudServicesClient testListenerEndpoint]
  -[BTCloudServicesClient interruptionHandler]
  -[BTCloudServicesClient fetchSoundProfileRecordWithCompletion:]
  -[BTCloudServicesClient modifyMagicSettingsRecord:completion:]
  -[BTCloudServicesClient deleteDeviceSupportInformationRecord:completion:]
  -[BTCloudServicesClient forceCloudPairingForIdentifiers:completion:]
  -[BTCloudServicesClient .cxx_destruct]
  -[BTCloudServicesClient deleteDeviceRecord:completion:]
  -[BTCloudServicesClient setInterruptionHandler:]
  -[BTCloudServicesClient magicSettingsRecordsWithCompletion:]
  -[BTCloudServicesClient setDispatchQueue:]
  -[BTCloudServicesClient modifySoundProfileRecord:completion:]
  -[BTCloudServicesClient cloudPairingIdentifierForPeripheral:completion:]
  -[BTCloudServicesClient createDeviceSupportInformationRecord:completion:]
  -[BTCloudServicesClient createSoundProfileRecord:completion:]
  -[BTCloudServicesClient dispatchQueue]
  -[BTCloudServicesClient _invalidated]
  -[BTCloudServicesClient _interrupted]
  -[BTCloudServicesClient deviceRecordsWithCompletion:]
  -[BTCloudServicesClient invalidate]
  -[BTCloudServicesClient accountInfoWithCompletion:]
  -[BTCloudServicesClient invalidationHandler]
  -[BTCloudServicesClient createDeviceRecord:completion:]
  -[BTCloudServicesClient deleteMagicSettingsRecord:completion:]
  -[BTCloudServicesClient deviceSupportInformationRecordsWithCompletion:]
  -[BTCloudServicesClient _ensureXPCStarted]
  -[BTCloudServicesClient deviceRecord:completion:]
  -[BTCloudServicesClient modifyDeviceRecord:completion:]
  -[BTCloudServicesClient deleteSoundProfileRecordWithCompletion:]
  -[BTCloudServicesClient magicSettingsRecord:completion:]
  -[BTCloudServicesClient deviceSupportInformationRecord:completion:]
  -[BTCloudServicesClient init]
  -[BTCloudServicesClient modifyDeviceSupportInformationRecord:completion:]


BTAudioRoutingRequest : NSObject <NSSecureCoding>
 @property  unsigned int clientID
 @property  NSXPCListenerEndpoint *testListenerEndpoint
 @property  int audioScore
 @property  NSString *deviceAddress
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  unsigned int flags
 @property  @? responseHandler

  // class methods
  +[BTAudioRoutingRequest supportsSecureCoding]

  // instance methods
  -[BTAudioRoutingRequest responseHandler]
  -[BTAudioRoutingRequest activate]
  -[BTAudioRoutingRequest setTestListenerEndpoint:]
  -[BTAudioRoutingRequest clientID]
  -[BTAudioRoutingRequest setClientID:]
  -[BTAudioRoutingRequest testListenerEndpoint]
  -[BTAudioRoutingRequest _activate]
  -[BTAudioRoutingRequest encodeWithCoder:]
  -[BTAudioRoutingRequest setFlags:]
  -[BTAudioRoutingRequest .cxx_destruct]
  -[BTAudioRoutingRequest flags]
  -[BTAudioRoutingRequest setDispatchQueue:]
  -[BTAudioRoutingRequest dispatchQueue]
  -[BTAudioRoutingRequest _invalidated]
  -[BTAudioRoutingRequest _interrupted]
  -[BTAudioRoutingRequest invalidate]
  -[BTAudioRoutingRequest _reportError:]
  -[BTAudioRoutingRequest setResponseHandler:]
  -[BTAudioRoutingRequest _ensureXPCStarted]
  -[BTAudioRoutingRequest init]
  -[BTAudioRoutingRequest initWithCoder:]
  -[BTAudioRoutingRequest deviceAddress]
  -[BTAudioRoutingRequest setDeviceAddress:]
  -[BTAudioRoutingRequest audioScore]
  -[BTAudioRoutingRequest setAudioScore:]


BTAudioRoutingResponse : NSObject <NSSecureCoding>
 @property  int action
 @property  unsigned int clientID
 @property  NSString *deviceAddress
 @property  NSError *error
 @property  NSString *reason

  // class methods
  +[BTAudioRoutingResponse supportsSecureCoding]

  // instance methods
  -[BTAudioRoutingResponse clientID]
  -[BTAudioRoutingResponse setClientID:]
  -[BTAudioRoutingResponse encodeWithCoder:]
  -[BTAudioRoutingResponse error]
  -[BTAudioRoutingResponse .cxx_destruct]
  -[BTAudioRoutingResponse setError:]
  -[BTAudioRoutingResponse reason]
  -[BTAudioRoutingResponse action]
  -[BTAudioRoutingResponse setReason:]
  -[BTAudioRoutingResponse setAction:]
  -[BTAudioRoutingResponse initWithCoder:]
  -[BTAudioRoutingResponse deviceAddress]
  -[BTAudioRoutingResponse setDeviceAddress:]


BTAudioSession : NSObject <NSSecureCoding>
 @property  unsigned int clientID
 @property  NSXPCListenerEndpoint *testListenerEndpoint
 @property  int audioArbitrationResult
 @property  int category
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  unsigned int flags
 @property  @? invalidationHandler
 @property  BOOL inAppRouting
 @property  NSString *label
 @property  double timeoutSeconds
 @property  int mode

  // class methods
  +[BTAudioSession supportsSecureCoding]

  // instance methods
  -[BTAudioSession setInvalidationHandler:]
  -[BTAudioSession setCategory:]
  -[BTAudioSession setTestListenerEndpoint:]
  -[BTAudioSession timeoutSeconds]
  -[BTAudioSession clientID]
  -[BTAudioSession setClientID:]
  -[BTAudioSession activateWithCompletion:]
  -[BTAudioSession testListenerEndpoint]
  -[BTAudioSession setTimeoutSeconds:]
  -[BTAudioSession _activate]
  -[BTAudioSession encodeWithCoder:]
  -[BTAudioSession dealloc]
  -[BTAudioSession setLabel:]
  -[BTAudioSession category]
  -[BTAudioSession mode]
  -[BTAudioSession setFlags:]
  -[BTAudioSession .cxx_destruct]
  -[BTAudioSession flags]
  -[BTAudioSession setDispatchQueue:]
  -[BTAudioSession setMode:]
  -[BTAudioSession dispatchQueue]
  -[BTAudioSession _invalidated]
  -[BTAudioSession _interrupted]
  -[BTAudioSession label]
  -[BTAudioSession invalidate]
  -[BTAudioSession invalidationHandler]
  -[BTAudioSession _reportError:]
  -[BTAudioSession _ensureXPCStarted]
  -[BTAudioSession init]
  -[BTAudioSession initWithCoder:]
  -[BTAudioSession audioArbitrationResult]
  -[BTAudioSession setAudioArbitrationResult:]
  -[BTAudioSession inAppRouting]
  -[BTAudioSession setInAppRouting:]


BTBluetoothPairingSession : NSObject
 @property  BOOL aggregate
 @property  @? completionHandler
 @property  BOOL connectOnly
 @property  NSString *deviceAddress
 @property  unsigned int deviceVersion
 @property  BOOL disconnectOnly
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSString *guestAddress
 @property  NSData *guestKey
 @property  BOOL guestMode
 @property  BOOL guestPermanent
 @property  NSString *name
 @property  BOOL softwareVolume
 @property  BOOL userNotInContacts

  // instance methods
  -[BTBluetoothPairingSession deviceVersion]
  -[BTBluetoothPairingSession activate]
  -[BTBluetoothPairingSession _completed:]
  -[BTBluetoothPairingSession aggregate]
  -[BTBluetoothPairingSession _invalidate]
  -[BTBluetoothPairingSession _activate]
  -[BTBluetoothPairingSession _btEnsureStarted]
  -[BTBluetoothPairingSession dealloc]
  -[BTBluetoothPairingSession .cxx_destruct]
  -[BTBluetoothPairingSession setDispatchQueue:]
  -[BTBluetoothPairingSession dispatchQueue]
  -[BTBluetoothPairingSession invalidate]
  -[BTBluetoothPairingSession name]
  -[BTBluetoothPairingSession _btEnsureStopped]
  -[BTBluetoothPairingSession setCompletionHandler:]
  -[BTBluetoothPairingSession completionHandler]
  -[BTBluetoothPairingSession init]
  -[BTBluetoothPairingSession setAggregate:]
  -[BTBluetoothPairingSession deviceAddress]
  -[BTBluetoothPairingSession setDeviceAddress:]
  -[BTBluetoothPairingSession setGuestMode:]
  -[BTBluetoothPairingSession _btDeletePairingAndRetry]
  -[BTBluetoothPairingSession connectOnly]
  -[BTBluetoothPairingSession setConnectOnly:]
  -[BTBluetoothPairingSession disconnectOnly]
  -[BTBluetoothPairingSession setDisconnectOnly:]
  -[BTBluetoothPairingSession guestAddress]
  -[BTBluetoothPairingSession setGuestAddress:]
  -[BTBluetoothPairingSession guestKey]
  -[BTBluetoothPairingSession setGuestKey:]
  -[BTBluetoothPairingSession guestMode]
  -[BTBluetoothPairingSession softwareVolume]
  -[BTBluetoothPairingSession userNotInContacts]
  -[BTBluetoothPairingSession setUserNotInContacts:]
  -[BTBluetoothPairingSession guestPermanent]
  -[BTBluetoothPairingSession setGuestPermanent:]


BTServicesClient : NSObject
 @property  NSXPCListenerEndpoint *testListenerEndpoint
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? interruptionHandler
 @property  @? invalidationHandler

  // instance methods
  -[BTServicesClient setInvalidationHandler:]
  -[BTServicesClient setTestListenerEndpoint:]
  -[BTServicesClient testListenerEndpoint]
  -[BTServicesClient interruptionHandler]
  -[BTServicesClient .cxx_destruct]
  -[BTServicesClient setInterruptionHandler:]
  -[BTServicesClient setDispatchQueue:]
  -[BTServicesClient dispatchQueue]
  -[BTServicesClient _invalidated]
  -[BTServicesClient _interrupted]
  -[BTServicesClient invalidate]
  -[BTServicesClient invalidationHandler]
  -[BTServicesClient _ensureXPCStarted]
  -[BTServicesClient diagnosticShow:completion:]
  -[BTServicesClient init]
  -[BTServicesClient diagnosticControl:completion:]


BTCloudAccountInfo : NSObject <NSSecureCoding>
 @property  BOOL isSignedIn
 @property  BOOL manateeAvailable
 @property  NSString *accountIdentifier
 @property  NSString *loginID

  // class methods
  +[BTCloudAccountInfo supportsSecureCoding]

  // instance methods
  -[BTCloudAccountInfo loginID]
  -[BTCloudAccountInfo setLoginID:]
  -[BTCloudAccountInfo manateeAvailable]
  -[BTCloudAccountInfo setAccountIdentifier:]
  -[BTCloudAccountInfo setIsSignedIn:]
  -[BTCloudAccountInfo encodeWithCoder:]
  -[BTCloudAccountInfo .cxx_destruct]
  -[BTCloudAccountInfo accountIdentifier]
  -[BTCloudAccountInfo setManateeAvailable:]
  -[BTCloudAccountInfo isSignedIn]
  -[BTCloudAccountInfo initWithCoder:]


BTShareAudioSessionClient : NSObject <NSSecureCoding>
 @property  NSXPCListenerEndpoint *testListenerEndpoint
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  int mode
 @property  @? progressHandler

  // class methods
  +[BTShareAudioSessionClient supportsSecureCoding]

  // instance methods
  -[BTShareAudioSessionClient activate]
  -[BTShareAudioSessionClient setTestListenerEndpoint:]
  -[BTShareAudioSessionClient testListenerEndpoint]
  -[BTShareAudioSessionClient progressHandler]
  -[BTShareAudioSessionClient encodeWithCoder:]
  -[BTShareAudioSessionClient mode]
  -[BTShareAudioSessionClient .cxx_destruct]
  -[BTShareAudioSessionClient setDispatchQueue:]
  -[BTShareAudioSessionClient setProgressHandler:]
  -[BTShareAudioSessionClient setMode:]
  -[BTShareAudioSessionClient dispatchQueue]
  -[BTShareAudioSessionClient _invalidated]
  -[BTShareAudioSessionClient _interrupted]
  -[BTShareAudioSessionClient invalidate]
  -[BTShareAudioSessionClient _activate:]
  -[BTShareAudioSessionClient _ensureXPCStarted]
  -[BTShareAudioSessionClient init]
  -[BTShareAudioSessionClient initWithCoder:]
  -[BTShareAudioSessionClient shareAudioProgressEvent:info:]
  -[BTShareAudioSessionClient userConfirmed:]


BTBannerUISession : NSObject
 @property  @? actionHandler
 @property  int backgroundColor
 @property  NSString *centerContentText
 @property  NSString *centerContentItemsIcon
 @property  NSString *centerContentItemsText
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  NSString *identifier
 @property  NSString *label
 @property  NSString *leadingAccessoryImageName
 @property  NSString *leadingAccessoryImagePath
 @property  unsigned int leadingAccessoryImagePID
 @property  double timeoutSeconds
 @property  NSString *trailingAccessoryImageName
 @property  NSString *trailingAccessoryImagePath
 @property  NSString *trailingAccessoryText
 @property  double lowBatteryLevel
 @property  double batteryLevelInfo

  // instance methods
  -[BTBannerUISession encodeWithXPCObject:]
  -[BTBannerUISession activate]
  -[BTBannerUISession identifier]
  -[BTBannerUISession timeoutSeconds]
  -[BTBannerUISession _xpcSendReplyError:request:]
  -[BTBannerUISession setActionHandler:]
  -[BTBannerUISession setTimeoutSeconds:]
  -[BTBannerUISession _activate]
  -[BTBannerUISession setLabel:]
  -[BTBannerUISession .cxx_destruct]
  -[BTBannerUISession setDispatchQueue:]
  -[BTBannerUISession backgroundColor]
  -[BTBannerUISession dispatchQueue]
  -[BTBannerUISession setBackgroundColor:]
  -[BTBannerUISession setIdentifier:]
  -[BTBannerUISession label]
  -[BTBannerUISession invalidate]
  -[BTBannerUISession actionHandler]
  -[BTBannerUISession init]
  -[BTBannerUISession lowBatteryLevel]
  -[BTBannerUISession _xpcStart]
  -[BTBannerUISession _xpcEvent:]
  -[BTBannerUISession _xpcSendMessage]
  -[BTBannerUISession _xpcCompleted:]
  -[BTBannerUISession _xpcConnectionMessage:]
  -[BTBannerUISession centerContentText]
  -[BTBannerUISession setCenterContentText:]
  -[BTBannerUISession centerContentItemsIcon]
  -[BTBannerUISession setCenterContentItemsIcon:]
  -[BTBannerUISession centerContentItemsText]
  -[BTBannerUISession setCenterContentItemsText:]
  -[BTBannerUISession leadingAccessoryImageName]
  -[BTBannerUISession setLeadingAccessoryImageName:]
  -[BTBannerUISession leadingAccessoryImagePath]
  -[BTBannerUISession setLeadingAccessoryImagePath:]
  -[BTBannerUISession leadingAccessoryImagePID]
  -[BTBannerUISession setLeadingAccessoryImagePID:]
  -[BTBannerUISession trailingAccessoryImageName]
  -[BTBannerUISession setTrailingAccessoryImageName:]
  -[BTBannerUISession trailingAccessoryImagePath]
  -[BTBannerUISession setTrailingAccessoryImagePath:]
  -[BTBannerUISession trailingAccessoryText]
  -[BTBannerUISession setTrailingAccessoryText:]
  -[BTBannerUISession setLowBatteryLevel:]
  -[BTBannerUISession batteryLevelInfo]
  -[BTBannerUISession setBatteryLevelInfo:]


BTCloudDevice : NSObject <NSSecureCoding>
 @property  NSString *bluetoothAddress
 @property  NSString *manufacturer
 @property  NSString *modelNumber
 @property  NSString *nickname
 @property  NSString *productID
 @property  NSString *vendorID

  // class methods
  +[BTCloudDevice supportsSecureCoding]
  +[BTCloudDevice deviceWithBluetoothAddress:]

  // instance methods
  -[BTCloudDevice bluetoothAddress]
  -[BTCloudDevice vendorID]
  -[BTCloudDevice productID]
  -[BTCloudDevice encodeWithCoder:]
  -[BTCloudDevice modelNumber]
  -[BTCloudDevice setVendorID:]
  -[BTCloudDevice nickname]
  -[BTCloudDevice .cxx_destruct]
  -[BTCloudDevice setManufacturer:]
  -[BTCloudDevice setBluetoothAddress:]
  -[BTCloudDevice setProductID:]
  -[BTCloudDevice manufacturer]
  -[BTCloudDevice setModelNumber:]
  -[BTCloudDevice setNickname:]
  -[BTCloudDevice initWithCoder:]
  -[BTCloudDevice initWithBluetoothAddress:]


BTCloudDeviceSupportInformation : NSObject <NSSecureCoding>
 @property  NSString *bluetoothAddress
 @property  NSString *budsFirmwareVersion
 @property  NSString *caseName
 @property  NSString *caseFirmwareVersion
 @property  NSString *caseSerialNumber
 @property  NSString *hardwareVersion
 @property  NSString *leftBudSerialNumber
 @property  NSString *rightBudSerialNumber
 @property  NSString *ancAssetVersion

  // class methods
  +[BTCloudDeviceSupportInformation supportsSecureCoding]
  +[BTCloudDeviceSupportInformation deviceSupportInformationWithBluetoothAddress:]

  // instance methods
  -[BTCloudDeviceSupportInformation bluetoothAddress]
  -[BTCloudDeviceSupportInformation hardwareVersion]
  -[BTCloudDeviceSupportInformation encodeWithCoder:]
  -[BTCloudDeviceSupportInformation .cxx_destruct]
  -[BTCloudDeviceSupportInformation setBluetoothAddress:]
  -[BTCloudDeviceSupportInformation initWithCoder:]
  -[BTCloudDeviceSupportInformation setHardwareVersion:]
  -[BTCloudDeviceSupportInformation initWithBluetoothAddress:]
  -[BTCloudDeviceSupportInformation ancAssetVersion]
  -[BTCloudDeviceSupportInformation budsFirmwareVersion]
  -[BTCloudDeviceSupportInformation caseName]
  -[BTCloudDeviceSupportInformation caseFirmwareVersion]
  -[BTCloudDeviceSupportInformation caseSerialNumber]
  -[BTCloudDeviceSupportInformation leftBudSerialNumber]
  -[BTCloudDeviceSupportInformation rightBudSerialNumber]
  -[BTCloudDeviceSupportInformation setBudsFirmwareVersion:]
  -[BTCloudDeviceSupportInformation setCaseName:]
  -[BTCloudDeviceSupportInformation setCaseFirmwareVersion:]
  -[BTCloudDeviceSupportInformation setCaseSerialNumber:]
  -[BTCloudDeviceSupportInformation setLeftBudSerialNumber:]
  -[BTCloudDeviceSupportInformation setRightBudSerialNumber:]
  -[BTCloudDeviceSupportInformation setAncAssetVersion:]


BTMagicPairingSettings : NSObject <NSSecureCoding>
 @property  NSString *bluetoothAddress
 @property  NSData *masterKey
 @property  NSData *masterHint
 @property  NSData *accessoryKey
 @property  NSData *accessoryHint
 @property  NSData *encryptionKey
 @property  NSData *irk
 @property  NSString *name
 @property  NSString *productID
 @property  NSString *vendorID
 @property  NSString *buttonModes
 @property  NSString *color
 @property  NSString *deviceIDFeatureBitsV1
 @property  NSString *deviceIDFeatureBitsV2
 @property  NSString *listeningServices
 @property  NSString *spatialAudio
 @property  NSString *optimizedBatteryCharging
 @property  NSString *optimizedBatteryFullChargeDeadline
 @property  NSString *ratchet
 @property  NSString *reserved
 @property  NSString *settingsMask
 @property  NSString *supportedServices
 @property  NSString *version

  // class methods
  +[BTMagicPairingSettings supportsSecureCoding]
  +[BTMagicPairingSettings magicSettingsWithBluetoothAddress:]

  // instance methods
  -[BTMagicPairingSettings bluetoothAddress]
  -[BTMagicPairingSettings vendorID]
  -[BTMagicPairingSettings setSupportedServices:]
  -[BTMagicPairingSettings productID]
  -[BTMagicPairingSettings encodeWithCoder:]
  -[BTMagicPairingSettings setVendorID:]
  -[BTMagicPairingSettings .cxx_destruct]
  -[BTMagicPairingSettings setBluetoothAddress:]
  -[BTMagicPairingSettings encryptionKey]
  -[BTMagicPairingSettings version]
  -[BTMagicPairingSettings setProductID:]
  -[BTMagicPairingSettings setName:]
  -[BTMagicPairingSettings setReserved:]
  -[BTMagicPairingSettings color]
  -[BTMagicPairingSettings supportedServices]
  -[BTMagicPairingSettings name]
  -[BTMagicPairingSettings setEncryptionKey:]
  -[BTMagicPairingSettings setColor:]
  -[BTMagicPairingSettings reserved]
  -[BTMagicPairingSettings setVersion:]
  -[BTMagicPairingSettings initWithCoder:]
  -[BTMagicPairingSettings masterKey]
  -[BTMagicPairingSettings setMasterKey:]
  -[BTMagicPairingSettings ratchet]
  -[BTMagicPairingSettings setRatchet:]
  -[BTMagicPairingSettings initWithBluetoothAddress:]
  -[BTMagicPairingSettings masterHint]
  -[BTMagicPairingSettings accessoryHint]
  -[BTMagicPairingSettings accessoryKey]
  -[BTMagicPairingSettings buttonModes]
  -[BTMagicPairingSettings deviceIDFeatureBitsV1]
  -[BTMagicPairingSettings deviceIDFeatureBitsV2]
  -[BTMagicPairingSettings irk]
  -[BTMagicPairingSettings listeningServices]
  -[BTMagicPairingSettings optimizedBatteryCharging]
  -[BTMagicPairingSettings optimizedBatteryFullChargeDeadline]
  -[BTMagicPairingSettings settingsMask]
  -[BTMagicPairingSettings setMasterHint:]
  -[BTMagicPairingSettings setAccessoryKey:]
  -[BTMagicPairingSettings setAccessoryHint:]
  -[BTMagicPairingSettings setIrk:]
  -[BTMagicPairingSettings setButtonModes:]
  -[BTMagicPairingSettings setDeviceIDFeatureBitsV1:]
  -[BTMagicPairingSettings setDeviceIDFeatureBitsV2:]
  -[BTMagicPairingSettings setListeningServices:]
  -[BTMagicPairingSettings spatialAudio]
  -[BTMagicPairingSettings setSpatialAudio:]
  -[BTMagicPairingSettings setOptimizedBatteryCharging:]
  -[BTMagicPairingSettings setOptimizedBatteryFullChargeDeadline:]
  -[BTMagicPairingSettings setSettingsMask:]


BTCloudSoundProfileRecord : NSObject <NSSecureCoding>
 @property  NSData *soundProfileData
 @property  NSURL *soundProfileFileURL

  // class methods
  +[BTCloudSoundProfileRecord supportsSecureCoding]
  +[BTCloudSoundProfileRecord soundProfileRecordWithCustomData:]
  +[BTCloudSoundProfileRecord soundProfileRecordWithFileURL:]

  // instance methods
  -[BTCloudSoundProfileRecord initWithFileURL:]
  -[BTCloudSoundProfileRecord encodeWithCoder:]
  -[BTCloudSoundProfileRecord .cxx_destruct]
  -[BTCloudSoundProfileRecord initWithCoder:]
  -[BTCloudSoundProfileRecord soundProfileData]
  -[BTCloudSoundProfileRecord soundProfileFileURL]
  -[BTCloudSoundProfileRecord initWithCustomData:]
  -[BTCloudSoundProfileRecord setSoundProfileData:]
  -[BTCloudSoundProfileRecord setSoundProfileFileURL:]


BTAirPodsControlRequest : NSObject
 @property  BTAirPodsControlServiceClient *client
 @property  BOOL enabled
 @property  @? getHandler
 @property  @? setHandler
 @property  NSObject<OS_dispatch_source> *timeoutTimer

  // instance methods
  -[BTAirPodsControlRequest .cxx_destruct]
  -[BTAirPodsControlRequest setClient:]
  -[BTAirPodsControlRequest setEnabled:]
  -[BTAirPodsControlRequest client]
  -[BTAirPodsControlRequest enabled]
  -[BTAirPodsControlRequest timeoutTimer]
  -[BTAirPodsControlRequest setTimeoutTimer:]
  -[BTAirPodsControlRequest getHandler]
  -[BTAirPodsControlRequest setGetHandler:]
  -[BTAirPodsControlRequest setHandler]
  -[BTAirPodsControlRequest setSetHandler:]


BTAirPodsControlServiceClient : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  CBDevice *peerDevice
 @property  NSString *deviceSN
 @property  NSString *deviceUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[BTAirPodsControlServiceClient centralManager:didFailToConnectPeripheral:error:]
  -[BTAirPodsControlServiceClient _runConnectStart]
  -[BTAirPodsControlServiceClient centralManager:didConnectPeripheral:]
  -[BTAirPodsControlServiceClient peerDevice]
  -[BTAirPodsControlServiceClient setPeerDevice:]
  -[BTAirPodsControlServiceClient _invalidate]
  -[BTAirPodsControlServiceClient centralManagerDidUpdateState:]
  -[BTAirPodsControlServiceClient _run]
  -[BTAirPodsControlServiceClient .cxx_destruct]
  -[BTAirPodsControlServiceClient setDispatchQueue:]
  -[BTAirPodsControlServiceClient dispatchQueue]
  -[BTAirPodsControlServiceClient invalidate]
  -[BTAirPodsControlServiceClient _reportError:]
  -[BTAirPodsControlServiceClient init]
  -[BTAirPodsControlServiceClient deviceUUID]
  -[BTAirPodsControlServiceClient _completeRequest:error:]
  -[BTAirPodsControlServiceClient _abortRequestsWithError:]
  -[BTAirPodsControlServiceClient peripheral:didDiscoverServices:]
  -[BTAirPodsControlServiceClient peripheral:didDiscoverCharacteristicsForService:error:]
  -[BTAirPodsControlServiceClient peripheral:didUpdateValueForCharacteristic:error:]
  -[BTAirPodsControlServiceClient peripheral:didWriteValueForCharacteristic:error:]
  -[BTAirPodsControlServiceClient peripheral:didUpdateNotificationStateForCharacteristic:error:]
  -[BTAirPodsControlServiceClient _runInit]
  -[BTAirPodsControlServiceClient centralManager:didUpdateFindMyPeripherals:]
  -[BTAirPodsControlServiceClient setDeviceUUID:]
  -[BTAirPodsControlServiceClient getSilentModeWithCompletionHandler:]
  -[BTAirPodsControlServiceClient setDeviceSN:]
  -[BTAirPodsControlServiceClient setSilentMode:completionHandler:]
  -[BTAirPodsControlServiceClient isFindmyManaged]
  -[BTAirPodsControlServiceClient _setupTimeoutForRequest:]
  -[BTAirPodsControlServiceClient _runDiscoverServicesStart]
  -[BTAirPodsControlServiceClient _runDiscoverCharacteristicsStart]
  -[BTAirPodsControlServiceClient _runProcessRequests]
  -[BTAirPodsControlServiceClient _runProcessRequest:]
  -[BTAirPodsControlServiceClient deviceSN]


01 00 0100 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 0100 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBUUID 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
