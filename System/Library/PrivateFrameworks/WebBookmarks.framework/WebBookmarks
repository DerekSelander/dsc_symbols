|| __DATA.__data _kSafariFetcherClearAllReadingListArchivesMessageName
|| __DATA.__data _kSafariFetcherClearReadingListArchiveMessageName
|| __DATA.__data _kSafariFetcherDServiceName
|| __DATA.__data _kSafariFetcherDidFinishFetchingMessageName
|| __DATA.__data _kSafariFetcherDidStartFetchingItemMessageName
|| __DATA.__data _kSafariFetcherDidStopFetchingItemMessageName
|| __DATA.__data _kSafariFetcherDidUpdateProgressMessageName
|| __DATA.__data _kSafariFetcherRegisterForReadingListFetcherUpdatesMessageName
|| __DATA.__data _kSafariFetcherStartReadingListFetcherMessageName
|| __DATA.__data _kSafariFetcherUnregisterForReadingListFetcherUpdatesMessageName
|| __DATA.__data _kWebBookmarksAddToReadingListMessageName
|| __DATA.__data _kWebBookmarksAddressKey
|| __DATA.__data _kWebBookmarksClearAllCloudTabDevicesMessageName
|| __DATA.__data _kWebBookmarksClearAllSafariHistoryMessageName
|| __DATA.__data _kWebBookmarksClearCloudTabsForCurrentDeviceMessageName
|| __DATA.__data _kWebBookmarksClearHSTSSuperCookiesMessageName
|| __DATA.__data _kWebBookmarksClientBundleIDKey
|| __DATA.__data _kWebBookmarksDeleteAllSafariWebSecurityOriginsMessageName
|| __DATA.__data _kWebBookmarksDeleteSafariPersistentURLCacheStorageMessageName
|| __DATA.__data _kWebBookmarksDeleteSafariWebSecurityOriginMessageName
|| __DATA.__data _kWebBookmarksDidToggleCloudTabsMessageName
|| __DATA.__data _kWebBookmarksEnabledKey
|| __DATA.__data _kWebBookmarksGetSafariDataUsageSummaryMessageName
|| __DATA.__data _kWebBookmarksGetSafariWebDataUsageMessageName
|| __DATA.__data _kWebBookmarksItemKey
|| __DATA.__data _kWebBookmarksPreviewTextKey
|| __DATA.__data _kWebBookmarksProgressKey
|| __DATA.__data _kWebBookmarksTerminateAfterUpdatingKey
|| __DATA.__data _kWebBookmarksTitleKey
|| __DATA.__data _kWebBookmarksUUIDKey
|| __DATA.__data _kWebBookmarksdServiceName
|| __DATA.__data _kWebDataUsageSizeKey
|| __DATA.__data _kWebsiteDataAllRecordsKey
|| __DATA.__data _kWebsiteDataRecordKey
|| __DATA.__data _webBookmarksMessageReceivedAcknowledgementKey
|| __DATA.__data _webBookmarksPasswordIconsCleanupMessageName
|| __DATA.__data _webBookmarksScheduleBookmarksDatabaseMaintenanceTask
|| __DATA.__data _webBookmarksScheduleBookmarksDatabaseMigrationTask
|| __DATA.__objc_data _OBJC_CLASS_$_CloudTabServices
|| __DATA.__objc_data _OBJC_CLASS_$_WBBookmarkDatabaseSyncData
|| __DATA.__objc_data _OBJC_CLASS_$_WBBookmarksDatabaseHealthInformation
|| __DATA.__objc_data _OBJC_CLASS_$_WBReadingList
|| __DATA.__objc_data _OBJC_CLASS_$_WBSettingsTask
|| __DATA.__objc_data _OBJC_CLASS_$_WBSettingsTaskHandler
|| __DATA.__objc_data _OBJC_CLASS_$_WBTabCyclerCommandHandler
|| __DATA.__objc_data _OBJC_CLASS_$_WBWebsiteDataRecord
|| __DATA.__objc_data _OBJC_CLASS_$_WBWindow
|| __DATA.__objc_data _OBJC_CLASS_$_WebBookmarkSecondaryCollection
|| __DATA.__objc_data _OBJC_CLASS_$_WebBookmarksSettingsGateway
|| __DATA.__objc_data _OBJC_METACLASS_$_CloudTabServices
|| __DATA.__objc_data _OBJC_METACLASS_$_WBBookmarkDatabaseSyncData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBBookmarksDatabaseHealthInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBReadingList
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSettingsTask
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSettingsTaskHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_WBTabCyclerCommandHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_WBWebsiteDataRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_WBWindow
|| __DATA.__objc_data _OBJC_METACLASS_$_WebBookmarkSecondaryCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_WebBookmarksSettingsGateway
|| __DATA_CONST.__const _BookmarksNotificationBookmarkIdentifierKey
|| __DATA_CONST.__const _DidDownloadBookmarkIconsNotification
|| __DATA_CONST.__const _WBDefaultPositionKey
|| __DATA_CONST.__const _WBErrorDomain
|| __DATA_CONST.__const _WBLocalAttributesVersionKey
|| __DATA_CONST.__const _WBLocalURLKey
|| __DATA_CONST.__const _WBPageWebArchiveName
|| __DATA_CONST.__const _WBReaderWebArchiveName
|| __DATA_CONST.__const _WBTabGroupSyncAgentDidFinishSyncNotificationName
|| __DATA_CONST.__const _WBTabGroupSyncAgentErrorDomain
|| __DATA_CONST.__const _WBTabGroupSyncAgentSyncResultKey
|| __DATA_CONST.__const _WebBookmarkSyncErrorDomain
|| __DATA_CONST.__const _WebBookmarkWebFilterSettingsDidChange
|| __DATA_CONST.__const _WebBookmarksChangedFolderIDKey
|| __DATA_CONST.__const _WebBookmarksDatabaseResetReasonKey
|| __DATA_CONST.__const _WebBookmarksDataclassDidChangeNotification
|| __DATA_CONST.__const _WebBookmarksDetectedLocalMigrationStateTransitionNotification
|| __DATA_CONST.__const _WebBookmarksDidReloadNotification
|| __DATA_CONST.__const _WebBookmarksDidVacuumDatabaseDistributedNotification
|| __DATA_CONST.__const _WebBookmarksFolderContentsDidChangeNotification
|| __DATA_CONST.__const _WebBookmarksFromMigrationStateKey
|| __DATA_CONST.__const _WebBookmarksIsBuiltinBookmarkAttributeKey
|| __DATA_CONST.__const _WebBookmarksIsBuiltinDeviceBookmarkAttributeKey
|| __DATA_CONST.__const _WebBookmarksIsCarrierBookmarkAttributeKey
|| __DATA_CONST.__const _WebBookmarksOmitFromUIKey
|| __DATA_CONST.__const _WebBookmarksReadingListFetchingNotification
|| __DATA_CONST.__const _WebBookmarksResetCloudHistoryAccountDefaultsKey
|| __DATA_CONST.__const _WebBookmarksSQLiteErrorDomain
|| __DATA_CONST.__const _WebBookmarksServerMachServiceName
|| __DATA_CONST.__const _WebBookmarksSpecialFoldersDidChangeNotification
|| __DATA_CONST.__const _WebBookmarksToMigrationStateKey
|| __DATA_CONST.__const _WebBookmarksXPCConnectionErrorDomain
|| __DATA_CONST.__const _webBookmarksMetaDataDeviceUUIDKey
|| __DATA_CONST.__const _webBookmarksMetaDataDidChangeNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SafariFetcherServerProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBBookmarkDBAccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBBookmarkSyncData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBBrowserState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBCollectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBDatabaseLockAcquisitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBLocalTabAttributes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBReadonlyTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBReusableTabManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSavedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSettingsSyncEngineAccess
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBTab
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBTabGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBTabGroupManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBTabGroupSyncAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBWindowState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmark
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkDeviceIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkListQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkProductionSafariTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkReadonlyCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarkWebFilterSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarksXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WebBookmarksXPCListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SafariFetcherServerProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBBookmarkDBAccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBBookmarkSyncData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBBrowserState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBCollectionConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBDatabaseLockAcquisitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBFeatureManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBLocalTabAttributes
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBReadonlyTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBReusableTabManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSavedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSettingsSyncEngineAccess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBTab
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBTabGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBTabGroupManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBTabGroupSyncAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBWindowState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmark
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkDeviceIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkListQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkProductionSafariTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkReadonlyCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkTabCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarkWebFilterSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarksXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WebBookmarksXPCListener
|| __TEXT.__const _BookmarksBarSpecialID
|| __TEXT.__const _BookmarksFrequentlyVisitedSitesSpecialID
|| __TEXT.__const _BookmarksMenuSpecialID
|| __TEXT.__const _BookmarksReadingListSpecialID
|| __TEXT.__const _BookmarksRootID
|| __TEXT.__const _BookmarksWebFilterWhiteListSpecialID
|| __TEXT.__const _WBDatabaseLockAcquisitorDefaultTimeout
|| __TEXT.__const _WBLocalAttributesCurrentVersion
|| __TEXT.__const _WebBookmarkChangeSetFirstBookmarkIDForAddingBookmarkInMemory
|| __TEXT.__text _WBBookmarkSyncModifiedAttributesForKey
|| __TEXT.__text _WBBookmarkSyncModifiedAttributesForKeys
|| __TEXT.__text _WBCurrentProcessContainerPath
|| __TEXT.__text _WBDescriptionForBookmarkSyncModifiedAttributes
|| __TEXT.__text _WBKeysForBookmarkSyncModifiedAttributes
|| __TEXT.__text _WBNSStringFromCollectionStoreOwner
|| __TEXT.__text _WBNSStringFromCollectionType
|| __TEXT.__text _WBSafariContainerPath
|| __TEXT.__text _WBSafariDirectoryPath
|| __TEXT.__text _WBSafariPreferencesDomain
|| __TEXT.__text _WebBookmarkIDFromNSString
|| __TEXT.__text _WebBookmarksBookmarksBarFolderTitle
|| __TEXT.__text _WebBookmarksBookmarksMenuFolderTitle
|| __TEXT.__text _WebBookmarksHistoryFolderTitle
|| __TEXT.__text _WebBookmarksReadingListFolderTitle
|| __TEXT.__text _WebBookmarksRootBookmarkTitle
|| __TEXT.__text _WebBookmarksWebFilterWhiteListFolderTitle
|| __TEXT.__text _WebNSStringFromBookmarkID
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CoreFoundation: _CFArrayBSearchValues
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringFold
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringNormalize
__ CoreFoundation: _CFStringTrimWhitespace
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUserName
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ JavaScriptCore: _WTFGetBacktrace
__ JavaScriptCore: _WTFPrintBacktrace
__ JavaScriptCore: __ZN3WTF17userVisibleStringEP5NSURL
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ SafariCore: _OBJC_CLASS_$_WBSFeatureAvailability
__ SafariCore: _OBJC_CLASS_$_WBSSafariBookmarksSyncAgentProxy
__ SafariCore: _OBJC_CLASS_$_WBSScopeExitHandler
__ SafariCore: _WBSCloudKitStartPageSectionOrderPreferenceKey
__ SafariCore: _WBSIsEqual
__ SafariCore: _WBSPrivacyPreservingDescription
__ SafariCore: _WBSSafariBookmarksSyncAgentServiceName
__ SafariShared: _OBJC_CLASS_$_WBSCRDTGeneration
__ SafariShared: _OBJC_CLASS_$_WBSCRDTPosition
__ SafariShared: _OBJC_CLASS_$_WBSCRDTPositionSortValue
__ SafariShared: _OBJC_CLASS_$_WBSCyclerBookmarkLeafRepresentation
__ SafariShared: _OBJC_CLASS_$_WBSCyclerItemListRepresentation
__ SafariShared: _OBJC_CLASS_$_WBSDistributedNotificationObserver
__ SafariShared: _OBJC_CLASS_$_WBSStartPageSectionManager
__ SafariShared: _WBSCloudSettingRecordName
__ SafariShared: _WBSCloudSettingValue
__ SafariShared: _WBSLastKnownStartPageAppearancePreferenceKey
__ SafariShared: _WBSSafariBackgroundImageKey
__ SafariShared: _WBSSafariBookmarksSyncAgentCloudBackgroundImageWasDeletedOnServerNotificationName
__ SafariShared: _WBSSafariBookmarksSyncAgentCloudBackgroundImageWasUpdatedOnServerNotificationName
__ SafariShared: _WBSSafariSettingsStartPageBackgroundImageVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageCloudTabsVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageFavoritesVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageFrequentlyVisitedSitesVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageHighlightsVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPagePrivacyReportVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageReadingListVisibilityKey
__ SafariShared: _WBSSafariSettingsStartPageSectionOrderKey
__ SafariShared: _WBSSafariSettingsStartPageSiriSuggestionsVisibilityKey
__ SafariShared: _WBSShowBackgroundImagePreferenceKey
__ SafariShared: _WBSStartPageSectionCloudTabs
__ SafariShared: _WBSStartPageSectionFavorites
__ SafariShared: _WBSStartPageSectionFrequentlyVisited
__ SafariShared: _WBSStartPageSectionHighlights
__ SafariShared: _WBSStartPageSectionPrivacyReport
__ SafariShared: _WBSStartPageSectionReadingList
__ SafariShared: _WBSStartPageSectionSiriSuggestions
__ SafariShared: _WBSTabAncestorTabUUIDsKey
__ SafariShared: _WBSTabDateClosedKey
__ SafariShared: _WBSTabDisplayingStandaloneImageKey
__ SafariShared: _WBSTabIndexKey
__ SafariShared: _WBSTabIsDisposableKey
__ SafariShared: _WBSTabIsMutedKey
__ SafariShared: _WBSTabIsPinnedKey
__ SafariShared: _WBSTabLastVisitTimeKey
__ SafariShared: _WBSTabOpenedFromLinkKey
__ SafariShared: _WBSTabPinnedPageTitleKey
__ SafariShared: _WBSTabPinnedPageURLKey
__ SafariShared: _WBSTabQueuedNavigationKey
__ SafariShared: _WBSTabReaderViewTopScrollOffsetKey
__ SafariShared: _WBSTabReadingListBookmarkIDKey
__ SafariShared: _WBSTabSafeToLoadWebPageKey
__ SafariShared: _WBSTabSessionStateKey
__ SafariShared: _WBSTabShowingReaderKey
__ SafariShared: _WBSTabWindowUUIDKey
__ SafariShared: _WBSUUIDKey
__ SafariShared: _WBSWindowActiveTabGroupKey
__ SafariShared: _WBSWindowActiveTabGroupUUIDKey
__ SafariShared: _WBSWindowCustomUnifiedFieldTextKey
__ SafariShared: _WBSWindowFavoritesBarHiddenKey
__ SafariShared: _WBSWindowIsPopupWindowKey
__ SafariShared: _WBSWindowIsPrivateWindowKey
__ SafariShared: _WBSWindowMinimizedKey
__ SafariShared: _WBSWindowPrefersSidebarVisibleKey
__ SafariShared: _WBSWindowTabBarHiddenKey
__ SafariShared: __ZN12SafariShared25SuddenTerminationDisabler23enableSuddenTerminationEv
__ SafariShared: __ZN12SafariShared25SuddenTerminationDisablerC1EP8NSString
__ SoftLinking: __sl_dlopen
__ WebKitLegacy: _WebLocalizedString
__ libCTGreenTeaLogger.dylib: _ct_green_tea_logger_create_static
__ libCTGreenTeaLogger.dylib: _getCTGreenTeaOsLogHandle
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_vnode
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_type_bool
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _flock
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _sandbox_container_path_for_pid
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_copy_entitlement_value
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_target_queue
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_string_create
__ libSystem.B.dylib: _xpc_type_get_name
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
WebBookmarkDeviceIdentifier : NSObject
 @property  BOOL listensForMetaDataChangeNotification
 @property  NSUUID *UUID
 @property  BOOL encounteredErrorWhileObtainingUUID
 @property  BOOL readOnly

  // class methods
  +[WebBookmarkDeviceIdentifier _postWebBookmarkMetaDataChangeDistributedNotification:]
  +[WebBookmarkDeviceIdentifier clearDeviceIdentifierWithPlistURL:]

  // instance methods
  -[WebBookmarkDeviceIdentifier stopObservingChanges]
  -[WebBookmarkDeviceIdentifier UUID]
  -[WebBookmarkDeviceIdentifier _resumeMonitoringMetaDataFile]
  -[WebBookmarkDeviceIdentifier _createOrLoadMetaData]
  -[WebBookmarkDeviceIdentifier _metaDataDidChange:]
  -[WebBookmarkDeviceIdentifier initWithPlistURL:readOnly:]
  -[WebBookmarkDeviceIdentifier .cxx_destruct]
  -[WebBookmarkDeviceIdentifier setReadOnly:]
  -[WebBookmarkDeviceIdentifier _setUpWithPlistURL:readOnly:queue:]
  -[WebBookmarkDeviceIdentifier isReadOnly]
  -[WebBookmarkDeviceIdentifier _listensForMetaDataChangeNotification]
  -[WebBookmarkDeviceIdentifier _cancelMonitoringMetaDataFile]
  -[WebBookmarkDeviceIdentifier _setListensForMetaDataChangeNotification:]
  -[WebBookmarkDeviceIdentifier dealloc]
  -[WebBookmarkDeviceIdentifier encounteredErrorWhileObtainingUUID]


BAChangeRecord : NSObject
 @property  WebBookmarkCollection *collection
 @property  WebBookmark *bookmark
 @property  int changeType

  // instance methods
  -[BAChangeRecord changeType]
  -[BAChangeRecord bookmark]
  -[BAChangeRecord collection]
  -[BAChangeRecord .cxx_destruct]
  -[BAChangeRecord _changedAttributeDescription]
  -[BAChangeRecord _changeTypeDescription]
  -[BAChangeRecord initWithBookmarkCollection:bookmark:changeType:]


WBSettingsSyncEngineAccess : NSObject <WBSSettingsSyncEngineAccess>
 @property  NSArray *syncSettingsUpDictionary
 @property  BOOL backgroundImageExists
 @property  BOOL backgroundImageAppearanceIsLight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSettingsSyncEngineAccess _updateStartPageBackgroundImageWithRecord:]
  -[WBSettingsSyncEngineAccess .cxx_destruct]
  -[WBSettingsSyncEngineAccess backgroundImageExists]
  -[WBSettingsSyncEngineAccess syncSettingsUpDictionary]
  -[WBSettingsSyncEngineAccess _didUpdateStartPageBackgroundImageVisibilityWithRecord:]
  -[WBSettingsSyncEngineAccess startPageSectionsManager]
  -[WBSettingsSyncEngineAccess _isShowBackgroundImageEnabled]
  -[WBSettingsSyncEngineAccess _updateStartPageSectionOrder:]
  -[WBSettingsSyncEngineAccess didDeleteRemoteRecordWithID:]
  -[WBSettingsSyncEngineAccess _updateStartPageSectionVisibilityWithIdentifier:record:]
  -[WBSettingsSyncEngineAccess syncEnabled]
  -[WBSettingsSyncEngineAccess didReceiveRemoteCloudSettingsUpdateWithRecord:]
  -[WBSettingsSyncEngineAccess _settingForValue:]
  -[WBSettingsSyncEngineAccess backgroundImageAppearanceIsLight]
  -[WBSettingsSyncEngineAccess _startPageSectionOrder]


WebBookmarkCloudKitSyncCollection : WebBookmarkCollection
  // instance methods
  -[WebBookmarkCloudKitSyncCollection dealloc]


WebBookmarkProductionSafariCloudKitSyncTabCollection : WebBookmarkProductionSafariTabCollection
  // instance methods
  -[WebBookmarkProductionSafariCloudKitSyncTabCollection dealloc]


BABookmarkItem : NSObject
 @property  WebBookmarkCollection *collection
 @property  WebBookmark *bookmark

  // instance methods
  -[BABookmarkItem bookmark]
  -[BABookmarkItem collection]
  -[BABookmarkItem .cxx_destruct]
  -[BABookmarkItem setBookmark:]
  -[BABookmarkItem initWithBookmarkCollection:bookmark:]


WBBookmarkDBAccess : NSObject <WBSBookmarkDBAccess>
 @property  long long collectionType
 @property  long long storeOwner
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBBookmarkDBAccess collectionType]
  -[WBBookmarkDBAccess resetDeviceIdentifier]
  -[WBBookmarkDBAccess removeItemWithServerId:database:]
  -[WBBookmarkDBAccess createDatabaseWithoutLock]
  -[WBBookmarkDBAccess copyDeletedBookmarkSyncDataWithChange:]
  -[WBBookmarkDBAccess copyDeviceIdentifier]
  -[WBBookmarkDBAccess copyAccountHashWithDatabase:]
  -[WBBookmarkDBAccess copyItemWithServerId:database:]
  -[WBBookmarkDBAccess copySyncKeyWithItem:]
  -[WBBookmarkDBAccess itemTypeWithItem:]
  -[WBBookmarkDBAccess changeTypeForChange:]
  -[WBBookmarkDBAccess saveBackupOfDatabase:withName:]
  -[WBBookmarkDBAccess copyModifiedAttributesWithChange:]
  -[WBBookmarkDBAccess copyAttributesWithItem:]
  -[WBBookmarkDBAccess copyItemWithLocalID:database:]
  -[WBBookmarkDBAccess performMaintenanceOnDatabase:afterVersion:]
  -[WBBookmarkDBAccess setSyncKey:item:]
  -[WBBookmarkDBAccess createFolderWithType:database:]
  -[WBBookmarkDBAccess finishMergingChangesWithDatabase:]
  -[WBBookmarkDBAccess copyChangedItemWithChange:]
  -[WBBookmarkDBAccess copyServerIdWithChange:]
  -[WBBookmarkDBAccess beginMergingChangesWithDatabase:]
  -[WBBookmarkDBAccess bookmarkTypeWithBookmark:]
  -[WBBookmarkDBAccess setAccountHash:database:]
  -[WBBookmarkDBAccess setSyncData:database:]
  -[WBBookmarkDBAccess copyServerIdInFolderBeforeServerId:database:]
  -[WBBookmarkDBAccess copyServerIdWithItem:]
  -[WBBookmarkDBAccess copyValueForKey:item:]
  -[WBBookmarkDBAccess bookmarkTypeForChange:]
  -[WBBookmarkDBAccess setSyncData:item:]
  -[WBBookmarkDBAccess closeDatabase:shouldSave:]
  -[WBBookmarkDBAccess performDeduplicationWithDatabase:mode:]
  -[WBBookmarkDBAccess folderTypeWithFolder:]
  -[WBBookmarkDBAccess storeOwner]
  -[WBBookmarkDBAccess copyLocalIDsInFolderWithLocalID:database:]
  -[WBBookmarkDBAccess copyLastServerIdInFolderWithServerId:database:]
  -[WBBookmarkDBAccess openDatabase:]
  -[WBBookmarkDBAccess copySyncDataWithDatabase:]
  -[WBBookmarkDBAccess copyChangeTokenWithDatabase:]
  -[WBBookmarkDBAccess createDatabase]
  -[WBBookmarkDBAccess copySyncDataWithItem:]
  -[WBBookmarkDBAccess clearAllSyncDataWithDatabase:]
  -[WBBookmarkDBAccess localCloudKitMigrationState:]
  -[WBBookmarkDBAccess clearlAllLocalBookmarksForAutomatedTestingWithDatabase:]
  -[WBBookmarkDBAccess item:isInFolderWithServerSyncId:]
  -[WBBookmarkDBAccess itemTypeForChange:]
  -[WBBookmarkDBAccess copyFirstServerIdInFolderWithServerId:database:]
  -[WBBookmarkDBAccess copyChangesWithDatabase:changeToken:]
  -[WBBookmarkDBAccess setChildrenOrder:forFolderWithServerId:database:]
  -[WBBookmarkDBAccess initWithCollectionType:storeOwner:]
  -[WBBookmarkDBAccess addItem:underFolderWithServerId:database:]
  -[WBBookmarkDBAccess setServerId:item:]
  -[WBBookmarkDBAccess setModifiedAttributes:item:]
  -[WBBookmarkDBAccess initWithCollectionType:]
  -[WBBookmarkDBAccess changeIsDAVMoveChange:]
  -[WBBookmarkDBAccess copyServerIdInFolderAfterServerId:database:]
  -[WBBookmarkDBAccess item:isEqualToItem:]
  -[WBBookmarkDBAccess setDeletedBookmarkSyncData:change:]
  -[WBBookmarkDBAccess setLocalCloudKitMigrationState:database:]
  -[WBBookmarkDBAccess copyParentServerIdWithItem:]
  -[WBBookmarkDBAccess createBookmarkWithType:database:]
  -[WBBookmarkDBAccess clearChangesWithChangeToken:database:]
  -[WBBookmarkDBAccess changeIsMoveChange:]
  -[WBBookmarkDBAccess saveDatabase:]
  -[WBBookmarkDBAccess copyServerIdsInFolderWithServerId:database:]
  -[WBBookmarkDBAccess folderTypeForChange:]


WBTabGroupSyncAgentProxy : NSObject <WBTabGroupSyncAgentProxyProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBTabGroupSyncAgentProxy sharedProxy]

  // instance methods
  -[WBTabGroupSyncAgentProxy .cxx_destruct]
  -[WBTabGroupSyncAgentProxy init]
  -[WBTabGroupSyncAgentProxy dealloc]
  -[WBTabGroupSyncAgentProxy applyChangeSet:completionHandler:]
  -[WBTabGroupSyncAgentProxy scheduleSyncIfNeeded]
  -[WBTabGroupSyncAgentProxy saveBrowserState:completionHandler:]
  -[WBTabGroupSyncAgentProxy deleteTabGroup:completionHandler:]
  -[WBTabGroupSyncAgentProxy insertTabGroup:afterTabGroup:completionHandler:]
  -[WBTabGroupSyncAgentProxy moveTabGroup:afterTabGroup:completionHandler:]
  -[WBTabGroupSyncAgentProxy saveTabGroup:completionHandler:]
  -[WBTabGroupSyncAgentProxy deleteTabs:completionHandler:]
  -[WBTabGroupSyncAgentProxy insertTabs:inTabGroup:afterTab:completionHandler:]
  -[WBTabGroupSyncAgentProxy reorderTab:afterTab:completionHandler:]
  -[WBTabGroupSyncAgentProxy replaceTab:withTab:completionHandler:]
  -[WBTabGroupSyncAgentProxy saveTab:completionHandler:]
  -[WBTabGroupSyncAgentProxy updateTabs:inTabGroup:completionHandler:]
  -[WBTabGroupSyncAgentProxy closeWindowState:completionHandler:]
  -[WBTabGroupSyncAgentProxy deleteWindowState:completionHandler:]
  -[WBTabGroupSyncAgentProxy deleteWindowStates:completionHandler:]
  -[WBTabGroupSyncAgentProxy saveWindowState:completionHandler:]
  -[WBTabGroupSyncAgentProxy emptyChangeSetCompletionHandler]
  -[WBTabGroupSyncAgentProxy emptyCompletionHandler]
  -[WBTabGroupSyncAgentProxy applyChangeSet:canSafelyTerminateCompletionHandler:]
  -[WBTabGroupSyncAgentProxy saveBrowserState:canSafelyTerminateCompletionHandler:]


WBBookmarkSyncData : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *encodedBookmarkSyncData
 @property  CKRecord *record
 @property  long long state
 @property  WBSCRDTPosition *position
 @property  unsigned long minimumAPIVersion
 @property  NSDictionary *positionDictionaryRepresentation
 @property  unsigned long modifiedAttributeMask

  // class methods
  +[WBBookmarkSyncData supportsSecureCoding]
  +[WBBookmarkSyncData syncDataWithContentsOfData:]
  +[WBBookmarkSyncData positionFromContentsOfData:]

  // instance methods
  -[WBBookmarkSyncData setRecord:]
  -[WBBookmarkSyncData initWithCoder:]
  -[WBBookmarkSyncData record]
  -[WBBookmarkSyncData .cxx_destruct]
  -[WBBookmarkSyncData setState:]
  -[WBBookmarkSyncData init]
  -[WBBookmarkSyncData state]
  -[WBBookmarkSyncData copyWithZone:]
  -[WBBookmarkSyncData setPosition:]
  -[WBBookmarkSyncData encodeWithCoder:]
  -[WBBookmarkSyncData position]
  -[WBBookmarkSyncData encodedBookmarkSyncData]
  -[WBBookmarkSyncData generationForKey:]
  -[WBBookmarkSyncData positionDictionaryRepresentation]
  -[WBBookmarkSyncData setPositionDictionaryRepresentation:]
  -[WBBookmarkSyncData hasGenerationForKey:]
  -[WBBookmarkSyncData setGeneration:forKey:]
  -[WBBookmarkSyncData incrementGenerationForKey:withDeviceIdentifier:]
  -[WBBookmarkSyncData clearAllGenerationsExceptState]
  -[WBBookmarkSyncData minimumAPIVersion]
  -[WBBookmarkSyncData setMinimumAPIVersion:]
  -[WBBookmarkSyncData modifiedAttributeMask]
  -[WBBookmarkSyncData setModifiedAttributeMask:]


_WBBookmarkSyncDataForPositionDecoding : NSObject <NSSecureCoding>
 @property  WBSCRDTPosition *position

  // class methods
  +[_WBBookmarkSyncDataForPositionDecoding supportsSecureCoding]

  // instance methods
  -[_WBBookmarkSyncDataForPositionDecoding initWithCoder:]
  -[_WBBookmarkSyncDataForPositionDecoding .cxx_destruct]
  -[_WBBookmarkSyncDataForPositionDecoding encodeWithCoder:]
  -[_WBBookmarkSyncDataForPositionDecoding position]


WebBookmarkInMemoryChangeFilterUnreadOnly : NSObject <WebBookmarkInMemoryChangeFilter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebBookmarkInMemoryChangeFilterUnreadOnly _bookmarksIDsFromBookmarks:fromChangeSet:withFilter:]
  -[WebBookmarkInMemoryChangeFilterUnreadOnly bookmarkIDsModifiedInMemoryPassingFilterFromChangeSet:inFolder:]
  -[WebBookmarkInMemoryChangeFilterUnreadOnly bookmarkIDsModifiedInMemoryNotPassingFilterFromChangeSet:inFolder:]


WBDuplicateBookmarkGroup : NSObject
 @property  WebBookmark *originalBookmark
 @property  NSArray *duplicates
 @property  NSArray *duplicatesToKeep
 @property  BOOL foundDuplicates

  // instance methods
  -[WBDuplicateBookmarkGroup .cxx_destruct]
  -[WBDuplicateBookmarkGroup duplicates]
  -[WBDuplicateBookmarkGroup initWithOriginalBookmark:]
  -[WBDuplicateBookmarkGroup duplicatesToKeep]
  -[WBDuplicateBookmarkGroup addDuplicateBookmark:replaceOriginal:]
  -[WBDuplicateBookmarkGroup addDuplicateBookmarkToKeep:]
  -[WBDuplicateBookmarkGroup exchangeOriginalBookmarkWithBookmark:]
  -[WBDuplicateBookmarkGroup removeAllDuplicates]
  -[WBDuplicateBookmarkGroup originalBookmark]
  -[WBDuplicateBookmarkGroup foundDuplicates]


WebBookmarkChange : NSObject <WBChange>
 @property  int bookmarkID
 @property  int parentID
 @property  int associatedBookmarkID
 @property  int specialFolderID
 @property  long long changeType
 @property  WebBookmark *bookmark
 @property  unsigned long modifiedAttributes
 @property  NSArray *bookmarks
 @property  BOOL shouldSync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WebBookmarkChange supportsSecureCoding]
  +[WebBookmarkChange bookmarkAddChangeWithBookmark:]
  +[WebBookmarkChange bookmarkModifyChangeWithBookmark:]
  +[WebBookmarkChange deleteChangeWithBookmark:]
  +[WebBookmarkChange moveChangeWithBookmark:toFolderWithID:]
  +[WebBookmarkChange reorderChangeWithBookmark:afterBookmark:]
  +[WebBookmarkChange replaceChangeWithBookmarks:inFolderWithID:]
  +[WebBookmarkChange replaceChangeWithBookmarks:inFolderWithSpecialID:]

  // instance methods
  -[WebBookmarkChange changeType]
  -[WebBookmarkChange bookmark]
  -[WebBookmarkChange initWithCoder:]
  -[WebBookmarkChange initWithDictionaryRepresentation:]
  -[WebBookmarkChange _stringForType:]
  -[WebBookmarkChange .cxx_destruct]
  -[WebBookmarkChange dictionaryRepresentation]
  -[WebBookmarkChange parentID]
  -[WebBookmarkChange shouldSync]
  -[WebBookmarkChange setParentID:]
  -[WebBookmarkChange encodeWithCoder:]
  -[WebBookmarkChange bookmarks]
  -[WebBookmarkChange attributesMarkedAsModify:]
  -[WebBookmarkChange initWithBookmark:bookmarkID:parentID:changeType:]
  -[WebBookmarkChange initWithBookmark:bookmarkID:parentID:associatedBookmarkID:changeType:]
  -[WebBookmarkChange initWithBookmarks:parentID:changeType:]
  -[WebBookmarkChange initWithBookmarks:specialFolderID:changeType:]
  -[WebBookmarkChange initWithBookmarks:parentID:specialFolderID:changeType:]
  -[WebBookmarkChange _setModifiedAttributesIfSupported]
  -[WebBookmarkChange setSpecialFolderID:]
  -[WebBookmarkChange setModifiedAttributes:]
  -[WebBookmarkChange setBookmarks:]
  -[WebBookmarkChange updateChangeAfterUpdatingInMemoryID:withDatabaseID:]
  -[WebBookmarkChange initWithBookmarkID:parentID:changeType:]
  -[WebBookmarkChange initWithBookmarkID:parentID:associatedBookmarkID:changeType:]
  -[WebBookmarkChange applyModificationsToBookmark:]
  -[WebBookmarkChange bookmarkID]
  -[WebBookmarkChange setBookmarkID:]
  -[WebBookmarkChange associatedBookmarkID]
  -[WebBookmarkChange setAssociatedBookmarkID:]
  -[WebBookmarkChange specialFolderID]
  -[WebBookmarkChange modifiedAttributes]


WebBookmarkTabCollection : WebBookmarkCollection
 @property  NSArray *pinnedTabs
 @property  int pinnedTabsFolderID
 @property  NSArray *privatePinnedTabs
 @property  int privatePinnedTabsFolderID
 @property  NSArray *recentlyClosedTabs
 @property  WebBookmarkList *recentlyClosedTabList
 @property  int windowsFolderSpecialID
 @property  NSArray *windows
 @property  WBWindowState *lastClosedWindowState
 @property  NSArray *lastSessionWindowStates
 @property  NSArray *recentlyClosedWindowStates
 @property  NSArray *windowStates

  // class methods
  +[WebBookmarkTabCollection inMemoryChangesFileURL]
  +[WebBookmarkTabCollection _syncLockFileName]
  +[WebBookmarkTabCollection inMemoryChangeSet]

  // instance methods
  -[WebBookmarkTabCollection windows]
  -[WebBookmarkTabCollection performMaintenance]
  -[WebBookmarkTabCollection _restoreMissingSpecialBookmarksWithChangeNotification:]
  -[WebBookmarkTabCollection _createSchema]
  -[WebBookmarkTabCollection createWindowsTable]
  -[WebBookmarkTabCollection createWindowsTabGroupsTable]
  -[WebBookmarkTabCollection _createSpecialTabsFolderWithUUIDIfNeeded:]
  -[WebBookmarkTabCollection _createSpecialFolderWithIDIfNeeded:]
  -[WebBookmarkTabCollection _deleteMatchingWindows:logAsError:]
  -[WebBookmarkTabCollection _resetBookmark:]
  -[WebBookmarkTabCollection tabGroupForBookmark:]
  -[WebBookmarkTabCollection saveWindow:]
  -[WebBookmarkTabCollection windowStateWithUUID:]
  -[WebBookmarkTabCollection saveWindowState:]
  -[WebBookmarkTabCollection _uuidForQueries:]
  -[WebBookmarkTabCollection _deleteAllWindowStates]
  -[WebBookmarkTabCollection _migrateWindow:]
  -[WebBookmarkTabCollection _logErrorWithMessage:result:]
  -[WebBookmarkTabCollection tabsForTabGroupBookmark:]
  -[WebBookmarkTabCollection windowsFolderSpecialID]
  -[WebBookmarkTabCollection _windowWithBookmark:]
  -[WebBookmarkTabCollection _windowStatesWithFilter:]
  -[WebBookmarkTabCollection _windowIDForUUID:]
  -[WebBookmarkTabCollection _tabGroupWithID:]
  -[WebBookmarkTabCollection _addActiveTabsToWindowState:]
  -[WebBookmarkTabCollection _saveWindowState:forApplyingInMemoryChanges:]
  -[WebBookmarkTabCollection _saveWindowState:]
  -[WebBookmarkTabCollection _saveWindowState:activeTabGroupID:localTabGroupID:privateTabGroupID:]
  -[WebBookmarkTabCollection _saveActiveTabID:inTabGroupWithID:windowID:]
  -[WebBookmarkTabCollection _deleteWindowState:forApplyingInMemoryChanges:]
  -[WebBookmarkTabCollection _deleteWindowState:]
  -[WebBookmarkTabCollection windowStates]
  -[WebBookmarkTabCollection _specialTabFolderUUIDsForQueries]
  -[WebBookmarkTabCollection _databaseTitleForSpecialID:]
  -[WebBookmarkTabCollection _specialTabFolderUUIDs]
  -[WebBookmarkTabCollection _specialTabsWithUUID:]
  -[WebBookmarkTabCollection pinnedTabsFolderID]
  -[WebBookmarkTabCollection privatePinnedTabsFolderID]
  -[WebBookmarkTabCollection _setupInMemoryChangeSet]
  -[WebBookmarkTabCollection _migrateWindowState:]
  -[WebBookmarkTabCollection _migrateSchemaVersion43ToVersion44]
  -[WebBookmarkTabCollection _migrateSchemaVersion44ToVersion45]
  -[WebBookmarkTabCollection logRegulatoryBookmarksRead]
  -[WebBookmarkTabCollection maintainsSyncMetadata]
  -[WebBookmarkTabCollection windowWithUUID:]
  -[WebBookmarkTabCollection lastClosedWindowState]
  -[WebBookmarkTabCollection lastSessionWindowStates]
  -[WebBookmarkTabCollection recentlyClosedWindowStates]
  -[WebBookmarkTabCollection deleteAllWindows]
  -[WebBookmarkTabCollection closeWindowState:]
  -[WebBookmarkTabCollection deleteWindowState:]
  -[WebBookmarkTabCollection deleteWindowStates:]
  -[WebBookmarkTabCollection deleteAllWindowStates]
  -[WebBookmarkTabCollection _deleteAllLocalTabsAndGroups]
  -[WebBookmarkTabCollection _markTabsClosed:]
  -[WebBookmarkTabCollection _markWindowStatesAsLastSession:]
  -[WebBookmarkTabCollection pinnedTabs]
  -[WebBookmarkTabCollection privatePinnedTabs]
  -[WebBookmarkTabCollection recentlyClosedTabs]
  -[WebBookmarkTabCollection recentlyClosedTabList]
  -[WebBookmarkTabCollection _shouldSaveBookmarkWhenUpdatingInFolderWithID:]


WebBookmarkProductionSafariTabCollection : WebBookmarkTabCollection
  // class methods
  +[WebBookmarkProductionSafariTabCollection safariDirectoryPath]


WBBrowserState : NSObject <NSSecureCoding>
 @property  NSArray *pinnedTabs
 @property  NSArray *privatePinnedTabs
 @property  NSArray *windows
 @property  NSArray *windowStates

  // class methods
  +[WBBrowserState supportsSecureCoding]

  // instance methods
  -[WBBrowserState windows]
  -[WBBrowserState initWithCoder:]
  -[WBBrowserState .cxx_destruct]
  -[WBBrowserState init]
  -[WBBrowserState setWindows:]
  -[WBBrowserState encodeWithCoder:]
  -[WBBrowserState windowStates]
  -[WBBrowserState pinnedTabs]
  -[WBBrowserState privatePinnedTabs]
  -[WBBrowserState initWithPinnedTabs:privatePinnedTabs:windows:]
  -[WBBrowserState initWithPinnedTabs:privatePinnedTabs:windowStates:]
  -[WBBrowserState setPinnedTabs:]
  -[WBBrowserState setPrivatePinnedTabs:]
  -[WBBrowserState setWindowStates:]


WebBookmarkChangeSet : NSObject <NSSecureCoding>
 @property  NSURL *fileURL
 @property  NSArray *changes
 @property  BOOL shouldSync

  // class methods
  +[WebBookmarkChangeSet supportsSecureCoding]

  // instance methods
  -[WebBookmarkChangeSet changes]
  -[WebBookmarkChangeSet initWithCoder:]
  -[WebBookmarkChangeSet numberOfAddedBookmarksInBookmarkFolder:]
  -[WebBookmarkChangeSet fileURL]
  -[WebBookmarkChangeSet .cxx_destruct]
  -[WebBookmarkChangeSet nextBookmarkIDForAddingBookmarkInMemory]
  -[WebBookmarkChangeSet _removeChange:]
  -[WebBookmarkChangeSet initWithFileURL:]
  -[WebBookmarkChangeSet addedBookmarksInBookmarkFolder:]
  -[WebBookmarkChangeSet applyModificationsToBookmarks:]
  -[WebBookmarkChangeSet isBookmarkDeleted:]
  -[WebBookmarkChangeSet removeChange:]
  -[WebBookmarkChangeSet shouldSync]
  -[WebBookmarkChangeSet updateAddChangesWithInMemoryBookmarkID:toDatabaseGeneratedID:]
  -[WebBookmarkChangeSet folderHasReplaceChange:]
  -[WebBookmarkChangeSet bookmarkIsAddedInMemory:]
  -[WebBookmarkChangeSet _readPersistedChanges]
  -[WebBookmarkChangeSet _addChange:]
  -[WebBookmarkChangeSet addChange:]
  -[WebBookmarkChangeSet numberOfReorderedBookmarksInBookmarkFolder:]
  -[WebBookmarkChangeSet modifiedBookmarksInBookmarkFolder:]
  -[WebBookmarkChangeSet _removeAllChanges]
  -[WebBookmarkChangeSet initWithFileURL:readPersistedChanges:]
  -[WebBookmarkChangeSet replayChangesOnBookmark:]
  -[WebBookmarkChangeSet deletedBookmarkIDsInBookmarkFolder:]
  -[WebBookmarkChangeSet removeAllChanges]
  -[WebBookmarkChangeSet addChanges:]
  -[WebBookmarkChangeSet bookmarksAfterReplayingChangesToBookmarks:inFolderWithID:]
  -[WebBookmarkChangeSet encodeWithCoder:]
  -[WebBookmarkChangeSet _coalesceChangesForChangeIfNeeded:]
  -[WebBookmarkChangeSet persistChangesWithCompletion:]


CloudTabServices : NSObject
  // class methods
  +[CloudTabServices _serverConnection]
  +[CloudTabServices clearTabsForCurrentDevice]
  +[CloudTabServices didToggleCloudTabs:terminateAfterUpdating:]
  +[CloudTabServices clearAllCloudTabDevices]
  +[CloudTabServices didToggleCloudTabs:]


WBReadingListPrivate : NSObject
  // instance methods
  -[WBReadingListPrivate .cxx_destruct]
  -[WBReadingListPrivate init]
  -[WBReadingListPrivate _addReadingListItemWithURL:title:previewText:]


WBReadingList : NSObject
  // class methods
  +[WBReadingList supportsURL:]
  +[WBReadingList defaultReadingList]

  // instance methods
  -[WBReadingList addReadingListItemWithURL:title:previewText:error:]
  -[WBReadingList .cxx_destruct]
  -[WBReadingList init]
  -[WBReadingList _init]


WBTabGroupSyncAgent : NSObject <WBTabGroupSyncAgentProtocol>
 @property  WBCollectionConfiguration *configuration
 @property  WBTabCollection *tabCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBTabGroupSyncAgent configuration]
  -[WBTabGroupSyncAgent .cxx_destruct]
  -[WBTabGroupSyncAgent initWithConfiguration:]
  -[WBTabGroupSyncAgent applyChangeSet:completionHandler:]
  -[WBTabGroupSyncAgent scheduleSyncIfNeeded]
  -[WBTabGroupSyncAgent saveBrowserState:completionHandler:]
  -[WBTabGroupSyncAgent deleteTabGroup:completionHandler:]
  -[WBTabGroupSyncAgent insertTabGroup:afterTabGroup:completionHandler:]
  -[WBTabGroupSyncAgent moveTabGroup:afterTabGroup:completionHandler:]
  -[WBTabGroupSyncAgent saveTabGroup:completionHandler:]
  -[WBTabGroupSyncAgent deleteTabs:completionHandler:]
  -[WBTabGroupSyncAgent insertTabs:inTabGroup:afterTab:completionHandler:]
  -[WBTabGroupSyncAgent reorderTab:afterTab:completionHandler:]
  -[WBTabGroupSyncAgent replaceTab:withTab:completionHandler:]
  -[WBTabGroupSyncAgent saveTab:completionHandler:]
  -[WBTabGroupSyncAgent updateTabs:inTabGroup:completionHandler:]
  -[WBTabGroupSyncAgent closeWindowState:completionHandler:]
  -[WBTabGroupSyncAgent deleteWindowState:completionHandler:]
  -[WBTabGroupSyncAgent deleteWindowStates:completionHandler:]
  -[WBTabGroupSyncAgent saveWindowState:completionHandler:]
  -[WBTabGroupSyncAgent _performOnTabCollectionQueue:scheduleSync:completionHandler:]
  -[WBTabGroupSyncAgent _applyChangeSet:completionHandler:]
  -[WBTabGroupSyncAgent tabCollection]
  -[WBTabGroupSyncAgent setTabCollection:]


WebBookmark : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *serverID
 @property  NSString *syncKey
 @property  NSData *syncData
 @property  WBBookmarkSyncData *syncMetadata
 @property  NSDictionary *dictionaryRepresentationForInMemoryChangeTracking
 @property  unsigned long modifiedAttributes
 @property  unsigned int _orderIndex
 @property  BOOL isReadingListItem
 @property  NSString *previewText
 @property  BOOL addedLocally
 @property  long long archiveStatus
 @property  long long webFilterStatus
 @property  NSDate *dateLastArchived
 @property  NSDate *dateAdded
 @property  NSDate *dateLastViewed
 @property  NSDate *dateLastFetched
 @property  NSDictionary *nextPageURLs
 @property  NSString *localPreviewText
 @property  NSString *readingListIconURL
 @property  NSString *readingListIconUUID
 @property  BOOL hasFetchedMetadata
 @property  BOOL shouldArchive
 @property  NSString *offlineArchiveDirectoryPath
 @property  unsigned long archiveSize
 @property  BOOL fullArchiveAvailable
 @property  BOOL needsSyncUpdate
 @property  NSString *title
 @property  NSString *address
 @property  int parentID
 @property  int identifier
 @property  NSString *UUID
 @property  int specialID
 @property  int lastSelectedChildID
 @property  BOOL editable
 @property  BOOL deletable
 @property  BOOL hidden
 @property  BOOL folder
 @property  BOOL inserted
 @property  BOOL syncable
 @property  BOOL fetchedIconData
 @property  NSData *iconData
 @property  NSDictionary *extraAttributes
 @property  NSDictionary *localAttributes
 @property  NSString *privacyPreservingDescription
 @property  NSString *localizedTitle
 @property  BOOL isBookmarksBarFolder
 @property  BOOL isBookmarksMenuFolder
 @property  BOOL isReadingListFolder
 @property  BOOL isWebFilterWhiteListFolder
 @property  BOOL isFrequentlyVisitedSitesFolder
 @property  BOOL isBuiltinBookmark

  // class methods
  +[WebBookmark supportsSecureCoding]
  +[WebBookmark _trimmedTitle:]
  +[WebBookmark _trimmedPreviewText:]

  // instance methods
  -[WebBookmark setAddress:]
  -[WebBookmark localizedTitle]
  -[WebBookmark isFolder]
  -[WebBookmark setShouldArchive:]
  -[WebBookmark UUID]
  -[WebBookmark isSyncable]
  -[WebBookmark isDeletable]
  -[WebBookmark initWithCoder:]
  -[WebBookmark setDateAdded:]
  -[WebBookmark isEditable]
  -[WebBookmark setTitle:]
  -[WebBookmark _setUUID:]
  -[WebBookmark _setParentID:]
  -[WebBookmark .cxx_destruct]
  -[WebBookmark isHidden]
  -[WebBookmark extraAttributes]
  -[WebBookmark _setHidden:]
  -[WebBookmark address]
  -[WebBookmark parentID]
  -[WebBookmark setExtraAttributes:]
  -[WebBookmark init]
  -[WebBookmark previewText]
  -[WebBookmark isEqual:]
  -[WebBookmark syncKey]
  -[WebBookmark _setID:]
  -[WebBookmark iconData]
  -[WebBookmark identifier]
  -[WebBookmark title]
  -[WebBookmark serverID]
  -[WebBookmark syncData]
  -[WebBookmark isInserted]
  -[WebBookmark setIconData:]
  -[WebBookmark shouldArchive]
  -[WebBookmark archiveSize]
  -[WebBookmark dateLastViewed]
  -[WebBookmark localAttributes]
  -[WebBookmark dateAdded]
  -[WebBookmark setDateLastViewed:]
  -[WebBookmark copyWithZone:]
  -[WebBookmark setPreviewText:]
  -[WebBookmark encodeWithCoder:]
  -[WebBookmark specialID]
  -[WebBookmark setServerID:]
  -[WebBookmark _attributesMarkedAsModified:]
  -[WebBookmark isReadingListItem]
  -[WebBookmark isReadingListFolder]
  -[WebBookmark setSyncKey:]
  -[WebBookmark setSyncData:]
  -[WebBookmark isEqualToBookmark:]
  -[WebBookmark initFolderWithParentID:]
  -[WebBookmark _markSpecial:]
  -[WebBookmark initWithTitle:address:]
  -[WebBookmark initReadingListBookmarkWithTitle:address:previewText:]
  -[WebBookmark lastSelectedChildID]
  -[WebBookmark readingListIconURL]
  -[WebBookmark setLastSelectedChildID:]
  -[WebBookmark _markAttributesAsModified:]
  -[WebBookmark setReadingListIconURL:]
  -[WebBookmark _setUsedForInMemoryChangeTracking:]
  -[WebBookmark initWithDictionaryRepresentationForInMemoryChangeTracking:]
  -[WebBookmark dictionaryRepresentationForInMemoryChangeTracking]
  -[WebBookmark setModifiedAttributes:]
  -[WebBookmark setLocalAttributes:]
  -[WebBookmark modifiedAttributes]
  -[WebBookmark _setInserted:]
  -[WebBookmark _setOrderIndex:]
  -[WebBookmark _setSyncable:]
  -[WebBookmark privacyPreservingDescription]
  -[WebBookmark initWithTitle:address:parentID:]
  -[WebBookmark initBuiltinDeviceBookmarkWithTitle:address:]
  -[WebBookmark shortTypeDescription]
  -[WebBookmark descriptionPreservingPrivacy:]
  -[WebBookmark initBuiltinBookmarkWithTitle:address:]
  -[WebBookmark initCarrierBookmarkWithTitle:address:]
  -[WebBookmark initWhiteListBookmarkWithTitle:address:]
  -[WebBookmark initFrequentlyVisitedSiteWithWebBookmark:title:]
  -[WebBookmark isBookmarksBarFolder]
  -[WebBookmark isBookmarksMenuFolder]
  -[WebBookmark isWebFilterWhiteListFolder]
  -[WebBookmark isFrequentlyVisitedSitesFolder]
  -[WebBookmark isBuiltinBookmark]
  -[WebBookmark needsSyncUpdate]
  -[WebBookmark setNeedsSyncUpdate:]
  -[WebBookmark fetchedIconData]
  -[WebBookmark setFetchedIconData:]
  -[WebBookmark _orderIndex]
  -[WebBookmark _usedForInMemoryChangeTracking]
  -[WebBookmark archiveStatus]
  -[WebBookmark setWebFilterStatus:]
  -[WebBookmark setArchiveStatus:]
  -[WebBookmark setDateLastArchived:]
  -[WebBookmark clearArchiveSynchronously]
  -[WebBookmark _initWithSqliteRow:]
  -[WebBookmark readingListIconUUID]
  -[WebBookmark clearArchive]
  -[WebBookmark syncMetadata]
  -[WebBookmark setReadingListIconUUID:]
  -[WebBookmark isFullArchiveAvailable]
  -[WebBookmark isAddedLocally]
  -[WebBookmark webFilterStatus]
  -[WebBookmark setSyncMetadata:]
  -[WebBookmark _initWithSqliteRow:hasIcon:]
  -[WebBookmark cleanUpRedundantPreviewText]
  -[WebBookmark _readingListPropertyNamed:]
  -[WebBookmark _modifyExtraReadingListAttributes:]
  -[WebBookmark _stringForReadingListArchiveStatus:]
  -[WebBookmark _modifyLocalReadingListAttributes:]
  -[WebBookmark localPreviewText]
  -[WebBookmark setAddedLocally:]
  -[WebBookmark dateLastArchived]
  -[WebBookmark dateLastFetched]
  -[WebBookmark setDateLastFetched:]
  -[WebBookmark setTitle:previewText:dateLastFetched:]
  -[WebBookmark setNextPageURLs:]
  -[WebBookmark nextPageURLs]
  -[WebBookmark setLocalPreviewText:]
  -[WebBookmark hasFetchedMetadata]
  -[WebBookmark setHasFetchedMetadata:]
  -[WebBookmark _sizeForFileOrDirectory:withAttributes:]
  -[WebBookmark _removeDirectoryAtPath:]
  -[WebBookmark webarchivePathInReaderForm:fileExists:]
  -[WebBookmark webarchivePathForNextPageURL:]
  -[WebBookmark offlineArchiveDirectoryPath]
  -[WebBookmark shouldReattemptArchiveWithAutomaticArchivingEnabled:]


WBTab : NSObject <NSCopying, NSSecureCoding, WBSerializable>
 @property  WebBookmark *bookmark
 @property  int identifier
 @property  BOOL modified
 @property  BOOL added
 @property  BOOL moved
 @property  WBLocalTabAttributes *localAttributes
 @property  NSString *privacyPreservingDescription
 @property  BOOL isPrivateTab
 @property  BOOL syncable
 @property  WBTabGroup *tabGroup
 @property  NSString *title
 @property  NSURL *url
 @property  NSString *uuid
 @property  BOOL isEmpty
 @property  NSURL *syncableURL
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBTab supportsSecureCoding]

  // instance methods
  -[WBTab bookmark]
  -[WBTab isSyncable]
  -[WBTab initWithCoder:]
  -[WBTab isEmpty]
  -[WBTab setTitle:]
  -[WBTab initWithDictionaryRepresentation:]
  -[WBTab url]
  -[WBTab setSyncable:]
  -[WBTab .cxx_destruct]
  -[WBTab initWithTitle:url:]
  -[WBTab setModified:]
  -[WBTab dictionaryRepresentation]
  -[WBTab initWithUUID:]
  -[WBTab setUrl:]
  -[WBTab isEqual:]
  -[WBTab identifier]
  -[WBTab title]
  -[WBTab initWithBookmark:]
  -[WBTab tabGroup]
  -[WBTab wasAdded]
  -[WBTab wasMoved]
  -[WBTab uuid]
  -[WBTab duplicate]
  -[WBTab setAdded:]
  -[WBTab localAttributes]
  -[WBTab copyWithZone:]
  -[WBTab encodeWithCoder:]
  -[WBTab markClean]
  -[WBTab setMoved:]
  -[WBTab setLocalAttributes:]
  -[WBTab adoptAttributesFromTab:]
  -[WBTab initWithUUID:title:url:]
  -[WBTab privacyPreservingDescription]
  -[WBTab _addressFromURL:]
  -[WBTab isPrivateTab]
  -[WBTab syncableURL]
  -[WBTab setTabGroup:]
  -[WBTab isIdentical:]
  -[WBTab didAddToTabGroup:]
  -[WBTab didRemoveFromTabGroup:]
  -[WBTab wasModified]


WebBookmarkCollection : NSObject <WBDatabaseLockAcquisitorDelegate, WBBookmarkProvider>
 @property  BOOL _usesCloudKit
 @property  long long _cloudKitLocalMigrationState
 @property  unsigned long generation
 @property  BOOL containsOnlyStockBookmarks
 @property  BOOL merging
 @property  WBCollectionConfiguration *configuration
 @property  WebBookmark *rootBookmark
 @property  WebBookmarkList *rootList
 @property  WebBookmark *bookmarksBarBookmark
 @property  WebBookmarkList *bookmarksBarList
 @property  WebBookmark *readingListFolder
 @property  int readingListFolderBookmarkID
 @property  WebBookmark *webFilterWhiteListFolder
 @property  int webFilterWhiteListFolderBookmarkID
 @property  WebBookmarkList *webFilterWhiteList
 @property  WebBookmark *favoritesFolder
 @property  WebBookmarkList *favoritesFolderList
 @property  WebBookmark *frequentlyVisitedSitesFolder
 @property  WebBookmarkList *frequentlyVisitedSitesList
 @property  NSNumber *frequentlyVisitedSitesFolderBookmarkID
 @property  BOOL isEmpty
 @property  WebBookmarkList *bookmarksNeedingIcons
 @property  NSArray *purgeableReadingListItems
 @property  unsigned long purgeableSpace
 @property  unsigned long rollingReadingListMaximumCount
 @property  WebBookmarkList *rollingListOfArchivedReadingListItems
 @property  BOOL hasInMemoryChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WebBookmarkCollection lockSync]
  +[WebBookmarkCollection _lockSync]
  +[WebBookmarkCollection unlockSyncAsynchronously]
  +[WebBookmarkCollection _deviceIdentifierForCloudKitWithCollectionType:generateIfNeeded:]
  +[WebBookmarkCollection _resetDeviceIdentifierForCloudKitWithCollectionType:]
  +[WebBookmarkCollection unlockSync]
  +[WebBookmarkCollection safariDirectoryPath]
  +[WebBookmarkCollection inMemoryChangesFileURL]
  +[WebBookmarkCollection _syncLockFileName]
  +[WebBookmarkCollection inMemoryChangeSet]
  +[WebBookmarkCollection _uniqueExternalUUID]
  +[WebBookmarkCollection isLockedSync]
  +[WebBookmarkCollection _defaultDatabaseFileNameForCollectionType:]
  +[WebBookmarkCollection _removeCorruptedBookmarksDatabaseAtPath:]
  +[WebBookmarkCollection databasePathForConfiguration:]
  +[WebBookmarkCollection readingListArchivesDirectoryPath]
  +[WebBookmarkCollection bookmarkImagesDirectoryPath]
  +[WebBookmarkCollection _cloudKitSyncMetadataFileNameWithCollectionType:]
  +[WebBookmarkCollection _deviceIdentifierForCloudKitWithCollectionType:]
  +[WebBookmarkCollection isSyncAllowed]
  +[WebBookmarkCollection readingListArchivesDiskUsage]
  +[WebBookmarkCollection safariBookmarkCollection]
  +[WebBookmarkCollection _isLockedSync]
  +[WebBookmarkCollection _syncFlags]
  +[WebBookmarkCollection _unlockSync]
  +[WebBookmarkCollection _postBookmarksChangedSyncNotificationOnSyncQueue]
  +[WebBookmarkCollection holdLockSync:]
  +[WebBookmarkCollection unholdLockSync:]

  // instance methods
  -[WebBookmarkCollection vacuum]
  -[WebBookmarkCollection isEmpty]
  -[WebBookmarkCollection configuration]
  -[WebBookmarkCollection .cxx_destruct]
  -[WebBookmarkCollection _checkDatabaseIntegrity]
  -[WebBookmarkCollection generation]
  -[WebBookmarkCollection _accountHash]
  -[WebBookmarkCollection purge:]
  -[WebBookmarkCollection _syncType]
  -[WebBookmarkCollection initWithConfiguration:]
  -[WebBookmarkCollection rootList]
  -[WebBookmarkCollection dealloc]
  -[WebBookmarkCollection _userVersion]
  -[WebBookmarkCollection purgeableSpace]
  -[WebBookmarkCollection isMerging]
  -[WebBookmarkCollection persistChangesWithCompletion:]
  -[WebBookmarkCollection initWithConfiguration:checkIntegrity:]
  -[WebBookmarkCollection _needsDeduplicationForBookmarkDAVWithHomeURL:]
  -[WebBookmarkCollection beginSyncTransaction]
  -[WebBookmarkCollection _deduplicateBookmarksForBookmarkDAVWithHomeURL:]
  -[WebBookmarkCollection rollbackSyncTransaction]
  -[WebBookmarkCollection commitSyncTransaction]
  -[WebBookmarkCollection _postBookmarksDidReloadNotificationAndStartReadingListFetcherIfChangesWereMade]
  -[WebBookmarkCollection _restoreMissingSpecialBookmarksWithChangeNotification:]
  -[WebBookmarkCollection syncDataForKey:]
  -[WebBookmarkCollection setSyncData:forKey:]
  -[WebBookmarkCollection _clearAllDAVSyncData]
  -[WebBookmarkCollection _changeList]
  -[WebBookmarkCollection _DAVGeneration]
  -[WebBookmarkCollection _clearChangeList]
  -[WebBookmarkCollection _bookmarkWithServerID:excludeDeletedBookmarks:]
  -[WebBookmarkCollection clearReadingListArchiveWithUUID:]
  -[WebBookmarkCollection clearAllReadingListArchives]
  -[WebBookmarkCollection _deleteBookmark:leaveTombstone:]
  -[WebBookmarkCollection _setMergeMode:]
  -[WebBookmarkCollection _setServerID:forBookmark:]
  -[WebBookmarkCollection _serverIDForBookmarkID:]
  -[WebBookmarkCollection _setSyncKey:forBookmark:]
  -[WebBookmarkCollection _setSyncData:forBookmark:]
  -[WebBookmarkCollection fixCachedNumberOfChildrenIfNeeded]
  -[WebBookmarkCollection _localMigrationState]
  -[WebBookmarkCollection _setLocalMigrationState:generateDeviceIdentifierIfNeeded:]
  -[WebBookmarkCollection _setAccountHash:]
  -[WebBookmarkCollection bookmarkWithID:]
  -[WebBookmarkCollection _syncableBookmarksIDsInFolderWithBookmarkID:]
  -[WebBookmarkCollection _bookmarkIDForServerID:excludeDeletedBookmarks:]
  -[WebBookmarkCollection _bookmarkWithSpecialID:]
  -[WebBookmarkCollection _mergeMode]
  -[WebBookmarkCollection _mergeCandidateFolderWithTitle:parent:mergeMode:]
  -[WebBookmarkCollection _mergeCandidateBookmarkWithTitle:address:parent:mergeMode:]
  -[WebBookmarkCollection _mergeBookmark:withOriginalBookmark:prioritizeOriginalBookmarkAttributes:generateChangesIfNeeded:]
  -[WebBookmarkCollection _markBookmarkID:added:]
  -[WebBookmarkCollection _saveBookmark:withSpecialID:updateGenerationIfNeeded:]
  -[WebBookmarkCollection _updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:]
  -[WebBookmarkCollection _moveBookmark:toFolderWithID:detectCycles:]
  -[WebBookmarkCollection _deduplicateBookmarksForSyncingAndTrackChanges:considerBookmarksWithSyncDataAsUnique:]
  -[WebBookmarkCollection _serverIDsInFolderWithServerID:excludeDeletedBookmarks:]
  -[WebBookmarkCollection _orderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:]
  -[WebBookmarkCollection _serverIDBeforeServerID:]
  -[WebBookmarkCollection _serverIDAfterServerID:]
  -[WebBookmarkCollection _firstServerIDInFolderWithServerID:]
  -[WebBookmarkCollection _lastServerIDInFolderWithServerID:]
  -[WebBookmarkCollection mergeWithBookmarksDictionary:clearHidden:clearSyncData:error:]
  -[WebBookmarkCollection postBookmarksDidReloadNotification]
  -[WebBookmarkCollection _trackChangesInMemoryIfDatabaseWriteIsNotAllowed]
  -[WebBookmarkCollection _createSchema]
  -[WebBookmarkCollection _executeSQL:]
  -[WebBookmarkCollection _executeSQLWithCString:]
  -[WebBookmarkCollection _fastFetchBookmarksInBookmarkFolder:options:offset:limit:]
  -[WebBookmarkCollection _deleteBookmarks:leaveTombstone:]
  -[WebBookmarkCollection performDatabaseUpdatesWithTransaction:secureDelete:]
  -[WebBookmarkCollection truncateWAL]
  -[WebBookmarkCollection bookmarkWithUUID:]
  -[WebBookmarkCollection applyInMemoryChangesToDatabase]
  -[WebBookmarkCollection _fastFetchBookmarksInBookmarkFolder:includingHiddenBookmarks:]
  -[WebBookmarkCollection listWithID:]
  -[WebBookmarkCollection _errorForMostRecentSQLiteError]
  -[WebBookmarkCollection listWithSpecialID:]
  -[WebBookmarkCollection listWithID:skipOffset:includeHidden:]
  -[WebBookmarkCollection bookmarkWithID:includingInMemoryChanges:]
  -[WebBookmarkCollection _saveAndMoveBookmark:toFolderID:]
  -[WebBookmarkCollection _updateBookmarks:inFolderWithID:]
  -[WebBookmarkCollection performDatabaseUpdatesWithTransaction:applyInMemoryChanges:secureDelete:]
  -[WebBookmarkCollection _databaseTitleForSpecialID:]
  -[WebBookmarkCollection _setupInMemoryChangeSet]
  -[WebBookmarkCollection _migrateSchemaVersion43ToVersion44]
  -[WebBookmarkCollection _migrateSchemaVersion44ToVersion45]
  -[WebBookmarkCollection logRegulatoryBookmarksRead]
  -[WebBookmarkCollection maintainsSyncMetadata]
  -[WebBookmarkCollection _shouldSaveBookmarkWhenUpdatingInFolderWithID:]
  -[WebBookmarkCollection applyInMemoryChanges:]
  -[WebBookmarkCollection _isDatabaseWriteAllowed]
  -[WebBookmarkCollection _openDatabaseAtPath:checkIntegrity:error:]
  -[WebBookmarkCollection _primaryCollection]
  -[WebBookmarkCollection syncSetString:forKey:]
  -[WebBookmarkCollection _registerForSyncBookmarksFileChangedNotification]
  -[WebBookmarkCollection _metaDataFileChanged:]
  -[WebBookmarkCollection _enableForeignKeys]
  -[WebBookmarkCollection _enableAutoVacuum]
  -[WebBookmarkCollection _createFreshDatabase]
  -[WebBookmarkCollection _errorForMostRecentSQLiteErrorWithErrorCode:]
  -[WebBookmarkCollection _verifyAllTablesExist:]
  -[WebBookmarkCollection _migrateToCurrentSchema]
  -[WebBookmarkCollection _setupWithPath:migratingBookmarksPlist:syncAnchorPlist:checkIntegrity:]
  -[WebBookmarkCollection _setupWithPath:checkIntegrity:]
  -[WebBookmarkCollection _migrateBookmarksPlist:syncAnchorPlist:]
  -[WebBookmarkCollection readingListFolderBookmarkID]
  -[WebBookmarkCollection _safariFetcherServerProxy]
  -[WebBookmarkCollection _readingListItemsWhere:filteredBy:withInMemoryFilter:]
  -[WebBookmarkCollection markWebContentFilterAllowsAllReadingListItems]
  -[WebBookmarkCollection saveBookmark:startReadingListFetcher:]
  -[WebBookmarkCollection purgeableReadingListItems]
  -[WebBookmarkCollection saveBookmark:]
  -[WebBookmarkCollection _simulateCrashWithDescription:]
  -[WebBookmarkCollection _inMemoryChangeSet]
  -[WebBookmarkCollection _selectBookmarksWhere:]
  -[WebBookmarkCollection _finalizeStatementIfNotNull:]
  -[WebBookmarkCollection rootBookmark]
  -[WebBookmarkCollection descendantsOfBookmarkFolder:]
  -[WebBookmarkCollection bookmarkContainsLeafBookmark:]
  -[WebBookmarkCollection _intFromExecutingSQL:]
  -[WebBookmarkCollection listWithID:skipOffset:]
  -[WebBookmarkCollection listWithID:skipOffset:includeHidden:includeDescendantsAsChildren:filteredUsingString:]
  -[WebBookmarkCollection readingListWithUnreadOnly:filteredUsingString:]
  -[WebBookmarkCollection favoritesFolder]
  -[WebBookmarkCollection webFilterWhiteListFolderBookmarkID]
  -[WebBookmarkCollection frequentlyVisitedSitesFolderBookmarkID]
  -[WebBookmarkCollection _parentIdentifiersOfBookmarksNeedingIcons]
  -[WebBookmarkCollection _specialIDForBookmarkBeingSaved:]
  -[WebBookmarkCollection _postBookmarksChangedSyncNotification]
  -[WebBookmarkCollection _postBookmarksSpecialFoldersDidChangeNotification]
  -[WebBookmarkCollection _postBookmarksFolderContentsDidChangeNotification:]
  -[WebBookmarkCollection _saveBookmark:startReadingListFetcher:forApplyingInMemoryChanges:]
  -[WebBookmarkCollection _startReadingListFetcher]
  -[WebBookmarkCollection _deleteBookmark:postChangeNotification:forApplyingInMemoryChanges:]
  -[WebBookmarkCollection _incrementGeneration]
  -[WebBookmarkCollection deleteBookmark:postChangeNotification:]
  -[WebBookmarkCollection _deleteIconForBookmark:]
  -[WebBookmarkCollection _moveBookmark:toFolderWithID:]
  -[WebBookmarkCollection _moveBookmark:toIndex:]
  -[WebBookmarkCollection _reorderBookmark:toIndex:]
  -[WebBookmarkCollection _generateSyncPositionForBookmark:]
  -[WebBookmarkCollection _saveSyncMetadataForBookmarkIfNeeded:]
  -[WebBookmarkCollection moveBookmark:toIndex:]
  -[WebBookmarkCollection saveBookmarks:postNotification:]
  -[WebBookmarkCollection moveBookmark:toFolderWithID:]
  -[WebBookmarkCollection _bookmarkUUIDsInFolderWithID:]
  -[WebBookmarkCollection orderIndexOfBookmark:]
  -[WebBookmarkCollection _reorderBookmark:afterBookmark:]
  -[WebBookmarkCollection _normalizeSearchString:]
  -[WebBookmarkCollection _enumerateBookmarksForMatchStatement:normalizedQuery:usingBlock:]
  -[WebBookmarkCollection _addBookmarksForReadingListMatchStatement:normalizedQuery:toArray:maxResults:]
  -[WebBookmarkCollection _firstBookmarkWithURLMatchingString:prefixMatch:inParent:]
  -[WebBookmarkCollection readingListWithUnreadOnly:]
  -[WebBookmarkCollection _postBookmarksDidReloadNotification]
  -[WebBookmarkCollection _tableExpressionForArchiveMode:]
  -[WebBookmarkCollection _orderedWhereClauseForArchiveMode:automaticArchivingEnabled:]
  -[WebBookmarkCollection _selectBookmarksWhere:returnType:]
  -[WebBookmarkCollection _orderedWhereClauseForArchiveMode:]
  -[WebBookmarkCollection rollingListOfArchivedReadingListItems]
  -[WebBookmarkCollection _cullReadingListBookmarksList:toSize:]
  -[WebBookmarkCollection _bookmarkHasSyncedToServer:]
  -[WebBookmarkCollection _clearAndCreateBookmarksTables]
  -[WebBookmarkCollection _clearAndCreateAncestorTable]
  -[WebBookmarkCollection _clearAndCreateBookmarksTitleWordTable]
  -[WebBookmarkCollection _indexAllTitleWords]
  -[WebBookmarkCollection _normalizeDatabaseURLs]
  -[WebBookmarkCollection _rebuildAncestorTable]
  -[WebBookmarkCollection deleteAllFavoriteIcons]
  -[WebBookmarkCollection markAllFavoritesAsNeedingIcons]
  -[WebBookmarkCollection _migrateSchemaVersion3ToVersion4]
  -[WebBookmarkCollection _migrateSchemaVersion4ToVersion5]
  -[WebBookmarkCollection _migrateSchemaVersion5ToVersion6]
  -[WebBookmarkCollection _migrateSchemaVersion6ToVersion7]
  -[WebBookmarkCollection _migrateSchemaVersion7ToVersion8]
  -[WebBookmarkCollection _migrateSchemaVersion8ToVersion9]
  -[WebBookmarkCollection _migrateSchemaVersion9ToVersion10]
  -[WebBookmarkCollection _migrateSchemaVersion10ToVersion11]
  -[WebBookmarkCollection _migrateSchemaVersion11And12And13ToVersion14]
  -[WebBookmarkCollection _migrateSchemaVersion14ToVersion15]
  -[WebBookmarkCollection _migrateSchemaVersion15ToVersion16]
  -[WebBookmarkCollection _migrateSchemaVersion16AndVersion17AndVersion18ToVersion19]
  -[WebBookmarkCollection _migrateSchemaVersion21ToVersion22]
  -[WebBookmarkCollection _migrateSchemaVersion22ToVersion23]
  -[WebBookmarkCollection _migrateSchemaVersion23ToVersion24]
  -[WebBookmarkCollection _migrateSchemaVersion24ToVersion25]
  -[WebBookmarkCollection _migrateSchemaVersion0ToVersion1]
  -[WebBookmarkCollection _migrateSchemaVersion1And2ToVersion3]
  -[WebBookmarkCollection _migrateSchemaVersion19And20ToVersion21]
  -[WebBookmarkCollection _migrateSchemaVersion25ToVersion26]
  -[WebBookmarkCollection _migrateSchemaVersion26ToVersion27]
  -[WebBookmarkCollection _migrateSchemaVersion27ToVersion28]
  -[WebBookmarkCollection _migrateSchemaVersion28ToVersion29]
  -[WebBookmarkCollection _migrateSchemaVersion29ToVersion30]
  -[WebBookmarkCollection _migrateSchemaVersion30ToVersion31]
  -[WebBookmarkCollection _migrateSchemaVersion31ToVersion32]
  -[WebBookmarkCollection _migrateSchemaVersion32ToVersion33]
  -[WebBookmarkCollection _migrateSchemaVersion33ToVersion34]
  -[WebBookmarkCollection _migrateSchemaVersion34ToVersion35]
  -[WebBookmarkCollection _migrateSchemaVersion35ToVersion36]
  -[WebBookmarkCollection _migrateSchemaVersion36ToVersion37]
  -[WebBookmarkCollection _migrateSchemaVersion37ToVersion38]
  -[WebBookmarkCollection _migrateSchemaVersion38ToVersion39]
  -[WebBookmarkCollection _migrateSchemaVersion39Or40ToVersion41]
  -[WebBookmarkCollection _migrateSchemaVersion41ToVersion42]
  -[WebBookmarkCollection _migrateSchemaVersion42ToVersion43]
  -[WebBookmarkCollection _rerunMigrationsIfNecessary]
  -[WebBookmarkCollection _importBookmarksPlist:]
  -[WebBookmarkCollection _importSyncAnchorPlist:]
  -[WebBookmarkCollection _insertAncestorTableEntriesForBookmarkID:withAncestorIDs:]
  -[WebBookmarkCollection _restoreBookmarkBarIfMissing]
  -[WebBookmarkCollection _restoreOrMergeReadingListFolderWithChangeNotification:]
  -[WebBookmarkCollection restoreOrMergeWhiteListFolderAndContentsWithChangeNotification:]
  -[WebBookmarkCollection frequentlyVisitedSitesFolderCreatingIfNeeded:postChangeNotification:]
  -[WebBookmarkCollection _orderIndexForBookmarkInsertedIntoParent:insertAtBeginning:]
  -[WebBookmarkCollection _updateCachedChildCountForParentID:inDirection:]
  -[WebBookmarkCollection _clearSyncKeysUnderBookmarkID:isFolder:]
  -[WebBookmarkCollection _insertTombstoneWithServerID:syncData:]
  -[WebBookmarkCollection _deleteAncestorTableEntriesForBookmarkID:]
  -[WebBookmarkCollection _insertAncestorTableEntriesForBookmarkID:withParentID:]
  -[WebBookmarkCollection _clearAllSyncKeys]
  -[WebBookmarkCollection _clearAllTombstones]
  -[WebBookmarkCollection _isTombstoneWithServerID:]
  -[WebBookmarkCollection _insertTombsonesRecursivelyForRootFolder:]
  -[WebBookmarkCollection _deleteRecursively:descendantsOnly:]
  -[WebBookmarkCollection _insertTombsonesRecursivelyHelperCurrentDepth:folder:]
  -[WebBookmarkCollection _specialIDForBookmarkTitle:]
  -[WebBookmarkCollection _childrenOfParentBookmarkAreUnsyncable:]
  -[WebBookmarkCollection _addBookmarkWithTitle:address:parentID:orderIndex:isFolder:externalUUID:associatedBookmark:updateParentChildCount:updateAncestorEntries:]
  -[WebBookmarkCollection _updateHiddenAncestorCountForBookmarksUnderFolderID:addingOffset:]
  -[WebBookmarkCollection _markBookmarkID:withSpecialID:]
  -[WebBookmarkCollection _reindexBookmarkID:title:]
  -[WebBookmarkCollection _serverIDOfSiblingBookmarkWithServerID:immediatelyBeforeOrAfter:]
  -[WebBookmarkCollection _firstOrLastServerIDInFolderWithServerID:isFirst:]
  -[WebBookmarkCollection syncDataForBookmark:]
  -[WebBookmarkCollection _unsafeOrderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:]
  -[WebBookmarkCollection _clearTitleWordsForBookmarkID:]
  -[WebBookmarkCollection _indexBookmarkID:title:]
  -[WebBookmarkCollection _collectChangesOfType:withClause:intoArray:]
  -[WebBookmarkCollection _incrementDAVGeneration]
  -[WebBookmarkCollection _updateSyncNotificationType]
  -[WebBookmarkCollection _setSyncNotificationType:]
  -[WebBookmarkCollection setFavoritesFolderIdentifier:postChangeNotification:]
  -[WebBookmarkCollection syncStringForKey:]
  -[WebBookmarkCollection bookmarksBarBookmark]
  -[WebBookmarkCollection _favoritesFolderIdentifier]
  -[WebBookmarkCollection frequentlyVisitedSitesFolderCreatingIfNeeded:]
  -[WebBookmarkCollection mergeWithBookmarksDictionary:clearHidden:error:]
  -[WebBookmarkCollection _restoreOrMergeWhiteListFolderAndContentsWithWebFilterWhiteList:ensureChildCount:postChangeNotification:]
  -[WebBookmarkCollection webFilterWhiteListFolder]
  -[WebBookmarkCollection _ensureFolderChildrenCount:]
  -[WebBookmarkCollection webFilterWhiteList]
  -[WebBookmarkCollection _fastFetchBookmarksInBookmarkFolder:options:offset:limit:includingInMemoryChanges:]
  -[WebBookmarkCollection _createInMemoryChangeSet]
  -[WebBookmarkCollection _applyInMemoryChanges:postChangeNotification:]
  -[WebBookmarkCollection _applyInMemoryChange:fromChangeSet:updatedBookmarks:]
  -[WebBookmarkCollection _deleteBookmarkInMemory:]
  -[WebBookmarkCollection _enumerateContentsOfBookmarkFolder:includingSubfolders:usingBlock:]
  -[WebBookmarkCollection deduplicateBookmarksWithRootFolder:depth:]
  -[WebBookmarkCollection _deduplicateBookmarksWithRootFolder:depth:trackChanges:considerBookmarksWithSyncDataAsUnique:davHomeURL:]
  -[WebBookmarkCollection _appendDuplicateBookmarkGroupsInBookmarks:toGroups:considerBookmarksWithSyncDataAsUnique:davHomePath:]
  -[WebBookmarkCollection _bookmark:hasCurrentDAVHomePath:]
  -[WebBookmarkCollection _deleteAndRebuildAncestorTableRecords]
  -[WebBookmarkCollection _recalculateCachedChildrenCountAndOrderIndices]
  -[WebBookmarkCollection _fetchBookmarkIDsInFolder:onlyFolders:includingHiddenBookmarks:]
  -[WebBookmarkCollection _bookmark:isDuplicateOfBookmark:]
  -[WebBookmarkCollection _bookmark:hasPriorityOverBookmarkForDeduplication:prioritizeBookmarksWithSyncData:davHomePath:]
  -[WebBookmarkCollection _syncSetString:forKey:updatedExistingKey:]
  -[WebBookmarkCollection nextDatabaseSyncChangeID]
  -[WebBookmarkCollection databaseSyncData]
  -[WebBookmarkCollection databaseLockAcquisitor:acquiredLock:]
  -[WebBookmarkCollection enumerateBookmarks:andReadingListItems:matchingString:usingBlock:]
  -[WebBookmarkCollection bookmarksMatchingString:]
  -[WebBookmarkCollection readingListBookmarksMatchingString:maxResults:onlyArchivedBookmarks:]
  -[WebBookmarkCollection databaseHealthInformation]
  -[WebBookmarkCollection leafChildCountForBookmarksInFolderWithID:]
  -[WebBookmarkCollection leafChildCountForFoldersInFolderWithID:]
  -[WebBookmarkCollection initWithPath:migratingBookmarksPlist:syncAnchorPlist:]
  -[WebBookmarkCollection cleanUpReadingListArchives]
  -[WebBookmarkCollection markArchivedReadingListItemsAsNonRecoverable]
  -[WebBookmarkCollection updateReadingListWebFilterStatusForUnsetItemsOnly:]
  -[WebBookmarkCollection localeSettingsChanged]
  -[WebBookmarkCollection validBookmarkUUIDsFromUUIDs:]
  -[WebBookmarkCollection readingListFolder]
  -[WebBookmarkCollection bookmarkAtPath:]
  -[WebBookmarkCollection subfoldersOfID:]
  -[WebBookmarkCollection parentIdentifierOfBookmark:]
  -[WebBookmarkCollection modifiedAttributesOfBookmark:]
  -[WebBookmarkCollection identifierOfBookmarkWithUUID:]
  -[WebBookmarkCollection bookmarksBarList]
  -[WebBookmarkCollection shouldFetchIconForBookmark:]
  -[WebBookmarkCollection bookmarksNeedingIcons]
  -[WebBookmarkCollection deleteBookmarks:postChangeNotification:]
  -[WebBookmarkCollection deleteBookmark:]
  -[WebBookmarkCollection reorderBookmark:toIndex:]
  -[WebBookmarkCollection reorderList:moveBookmarkAtIndex:toIndex:]
  -[WebBookmarkCollection saveArchiveForReadingListBookmarkWithID:]
  -[WebBookmarkCollection saveArchivesForReadingListBookmarks:]
  -[WebBookmarkCollection deleteArchiveForReadingListBookmarkWithID:]
  -[WebBookmarkCollection saveIconWithData:urlString:forBookmark:]
  -[WebBookmarkCollection saveAndMoveBookmark:toFolderID:]
  -[WebBookmarkCollection _saveAndMoveBookmarks:toFolderID:]
  -[WebBookmarkCollection updateBookmarks:inFolderWithID:secureDelete:]
  -[WebBookmarkCollection _prefixSearch:usingColumns:maxCount:]
  -[WebBookmarkCollection _bookmarksFromStatementSelectingIDs:withQuery:]
  -[WebBookmarkCollection firstReadingListBookmarkWithURLMatchingString:prefixMatch:]
  -[WebBookmarkCollection indexOfReadingListBookmark:countingOnlyUnread:]
  -[WebBookmarkCollection countReadingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:]
  -[WebBookmarkCollection countReadingListBookmarksNeedingArchiveInMode:]
  -[WebBookmarkCollection firstReadingListBookmarkNeedingArchiveInMode:automaticArchivingEnabled:]
  -[WebBookmarkCollection firstReadingListBookmarkNeedingArchiveInMode:]
  -[WebBookmarkCollection readingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:]
  -[WebBookmarkCollection readingListBookmarksNeedingArchiveInMode:]
  -[WebBookmarkCollection rollOutLastReadingListItem]
  -[WebBookmarkCollection rollOutReadingListItemIfNeededToMakeRoomForOneNewItem]
  -[WebBookmarkCollection rollingReadingListMaximumCount]
  -[WebBookmarkCollection clearCarrierBookmarks]
  -[WebBookmarkCollection migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory]
  -[WebBookmarkCollection _rootFolderHiddenChildrenClause]
  -[WebBookmarkCollection _sqliteStatementWithQuery:]
  -[WebBookmarkCollection _sqliteStatementWithQuery:runInBlock:]
  -[WebBookmarkCollection _syncKeysForServerIDs:]
  -[WebBookmarkCollection _serverIDAtOrderIndex:inFolderWithServerID:]
  -[WebBookmarkCollection _clearCachedFavoritesFolderIdentifier]
  -[WebBookmarkCollection setFavoritesFolder:localOnly:]
  -[WebBookmarkCollection favoritesFolderList]
  -[WebBookmarkCollection bookmarkIsFavoritesFolder:]
  -[WebBookmarkCollection bookmarkIsInFavoritesFolder:]
  -[WebBookmarkCollection frequentlyVisitedSitesFolder]
  -[WebBookmarkCollection frequentlyVisitedSitesList]
  -[WebBookmarkCollection clearFrequentlyVisitedSitesFolder]
  -[WebBookmarkCollection bookmarkIsFrequentlyVisitedSite:]
  -[WebBookmarkCollection fastFetchBookmarksInBookmarkList:]
  -[WebBookmarkCollection _fastFetchBookmarksInBookmarkFolder:includingInMemoryChanges:]
  -[WebBookmarkCollection hasInMemoryChanges]
  -[WebBookmarkCollection deleteBookmarkInMemory:]
  -[WebBookmarkCollection deleteBookmarksInMemory:inFolder:]
  -[WebBookmarkCollection addBookmarkInMemory:toFolderWithID:]
  -[WebBookmarkCollection modifyBookmarkInMemory:]
  -[WebBookmarkCollection moveBookmarkInMemory:toFolderWithID:]
  -[WebBookmarkCollection reorderBookmarkInMemory:afterBookmark:]
  -[WebBookmarkCollection replaceBookmarksInMemory:inFolderWithID:]
  -[WebBookmarkCollection deduplicateBookmarks]
  -[WebBookmarkCollection _usesCloudKit]
  -[WebBookmarkCollection _test_preventPeriodicallyApplyingInMemoryChangesToDatabase]
  -[WebBookmarkCollection test_restoreMissingSpecialBookmarks]
  -[WebBookmarkCollection _addChildrenOfID:toCollection:recursive:error:]
  -[WebBookmarkCollection _bookmarkDictionaryForSqliteRow:recursive:error:]
  -[WebBookmarkCollection _syncAdd:toParent:withOrderIndex:error:]
  -[WebBookmarkCollection _mergeChildrenOfID:referencingBase:error:]
  -[WebBookmarkCollection _markSpecialBookmarks]
  -[WebBookmarkCollection _deleteSyncPropertyForKey:]
  -[WebBookmarkCollection _syncPropertyExistsForKey:]
  -[WebBookmarkCollection bookmarksDictionary]
  -[WebBookmarkCollection removePersistedInMemoryBookmarkChangesFile]
  -[WebBookmarkCollection containsOnlyStockBookmarks]
  -[WebBookmarkCollection _cloudKitLocalMigrationState]


WebBookmarkCollectionSyncFlags : NSObject
 @property  BOOL syncAllowed
 @property  int syncLockFileDescriptor
 @property  long long syncNotificationType
 @property  BOOL postSyncNotificationWhenUnlocking
 @property  NSMutableSet *lockSyncHoldRequestorPointers
 @property  BOOL unlockSyncRequested

  // instance methods
  -[WebBookmarkCollectionSyncFlags setSyncNotificationType:]
  -[WebBookmarkCollectionSyncFlags .cxx_destruct]
  -[WebBookmarkCollectionSyncFlags postSyncNotificationWhenUnlocking]
  -[WebBookmarkCollectionSyncFlags lockSyncHoldRequestorPointers]
  -[WebBookmarkCollectionSyncFlags syncLockFileDescriptor]
  -[WebBookmarkCollectionSyncFlags unlockSyncRequested]
  -[WebBookmarkCollectionSyncFlags syncNotificationType]
  -[WebBookmarkCollectionSyncFlags syncAllowed]
  -[WebBookmarkCollectionSyncFlags initWithSyncAllowed:]
  -[WebBookmarkCollectionSyncFlags setPostSyncNotificationWhenUnlocking:]
  -[WebBookmarkCollectionSyncFlags setSyncLockFileDescriptor:]
  -[WebBookmarkCollectionSyncFlags setUnlockSyncRequested:]


WBWindowState : NSObject <NSCopying, NSSecureCoding, WBSerializable>
 @property  int identifier
 @property  NSString *activeTabGroupUUID
 @property  NSDate *dateClosed
 @property  NSDictionary *extraAttributes
 @property  WBTabGroup *localTabGroup
 @property  WBTabGroup *privateTabGroup
 @property  NSString *sceneID
 @property  NSDictionary *tabGroupsToActiveTabs
 @property  NSString *uuid
 @property  NSString *customUnifiedFieldText
 @property  BOOL isFavoritesBarHidden
 @property  BOOL isMinimized
 @property  BOOL isPopupWindow
 @property  BOOL prefersSidebarVisible
 @property  BOOL isPrivateWindow
 @property  BOOL isTabBarHidden
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBWindowState supportsSecureCoding]

  // instance methods
  -[WBWindowState isMinimized]
  -[WBWindowState initWithCoder:]
  -[WBWindowState initWithDictionaryRepresentation:]
  -[WBWindowState .cxx_destruct]
  -[WBWindowState extraAttributes]
  -[WBWindowState dictionaryRepresentation]
  -[WBWindowState initWithUUID:]
  -[WBWindowState isPopupWindow]
  -[WBWindowState sceneID]
  -[WBWindowState setExtraAttributes:]
  -[WBWindowState setSceneID:]
  -[WBWindowState isEqual:]
  -[WBWindowState identifier]
  -[WBWindowState isPrivateWindow]
  -[WBWindowState uuid]
  -[WBWindowState setIdentifier:]
  -[WBWindowState copyWithZone:]
  -[WBWindowState encodeWithCoder:]
  -[WBWindowState initWithUUID:sceneID:]
  -[WBWindowState localTabGroup]
  -[WBWindowState privateTabGroup]
  -[WBWindowState activeTabGroupUUID]
  -[WBWindowState tabGroupsToActiveTabs]
  -[WBWindowState activeTabUUIDForTabGroupWithUUID:]
  -[WBWindowState setActiveTabUUID:forTabGroupWithUUID:]
  -[WBWindowState initWithUUID:activeTabGroupUUID:localTabGroup:privateTabGroup:sceneID:windowID:]
  -[WBWindowState dateClosed]
  -[WBWindowState setDateClosed:]
  -[WBWindowState setTabGroupsToActiveTabs:]
  -[WBWindowState initWithDictionaryRepresentation:localTabGroup:privateTabGroup:]
  -[WBWindowState customUnifiedFieldText]
  -[WBWindowState isFavoritesBarHidden]
  -[WBWindowState prefersSidebarVisible]
  -[WBWindowState isTabBarHidden]
  -[WBWindowState removeActiveTabUUIDForTabGroupWithUUID:]
  -[WBWindowState removeAllActiveTabUUIDs]
  -[WBWindowState setActiveTabGroupUUID:]


WebBookmarkList : NSObject
 @property  unsigned int bookmarkCount
 @property  int folderID

  // instance methods
  -[WebBookmarkList initWithQuery:skipOffset:collection:]
  -[WebBookmarkList _bookmarkAtIndex:paginate:]
  -[WebBookmarkList .cxx_destruct]
  -[WebBookmarkList bookmarkCount]
  -[WebBookmarkList bookmarkArrayRequestingCount:]
  -[WebBookmarkList objectAtIndexedSubscript:]
  -[WebBookmarkList differenceFromList:withOptions:]
  -[WebBookmarkList bookmarkArray]
  -[WebBookmarkList bookmarkAtIndex:]
  -[WebBookmarkList _loadBookmarksForDifferenceFromList:]
  -[WebBookmarkList _reverseOrderIndex:]
  -[WebBookmarkList _arrayForDifferenceCalculation]
  -[WebBookmarkList folderID]
  -[WebBookmarkList _moveBookmarkAtIndex:toIndex:]


WBReadonlyTabCollection : NSObject <WBStateProvider>
 @property  BOOL completedMigration
 @property  BOOL persistent
 @property  WBBrowserState *browserState
 @property  WBBrowserState *lastSessionBrowserState
 @property  NSArray *windowStates
 @property  int windowsFolderSpecialID
 @property  NSArray *windows
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int pinnedTabsFolderID
 @property  int privatePinnedTabsFolderID
 @property  NSArray *recentlyClosedTabs
 @property  NSArray *tabGroups
 @property  unsigned long maximumTabsPerGroup

  // instance methods
  -[WBReadonlyTabCollection browserState]
  -[WBReadonlyTabCollection isPersistent]
  -[WBReadonlyTabCollection windows]
  -[WBReadonlyTabCollection .cxx_destruct]
  -[WBReadonlyTabCollection init]
  -[WBReadonlyTabCollection tabGroups]
  -[WBReadonlyTabCollection tabGroupWithUUID:]
  -[WBReadonlyTabCollection windowStateWithUUID:]
  -[WBReadonlyTabCollection windowsFolderSpecialID]
  -[WBReadonlyTabCollection windowStates]
  -[WBReadonlyTabCollection pinnedTabsFolderID]
  -[WBReadonlyTabCollection privatePinnedTabsFolderID]
  -[WBReadonlyTabCollection windowWithUUID:]
  -[WBReadonlyTabCollection recentlyClosedTabs]
  -[WBReadonlyTabCollection tabWithUUID:]
  -[WBReadonlyTabCollection hasCompletedMigration]
  -[WBReadonlyTabCollection lastSessionBrowserState]
  -[WBReadonlyTabCollection tabsForTabGroup:]
  -[WBReadonlyTabCollection maximumTabsPerGroup]
  -[WBReadonlyTabCollection setMaximumTabsPerGroup:]


WebBookmarkWebFilterSettings : NSObject
 @property  WFUserSettings *userSettings
 @property  BOOL webFilterEnabled
 @property  BOOL webFilterWhiteListOnlyModeEnabled

  // class methods
  +[WebBookmarkWebFilterSettings sharedWebFilterSettings]

  // instance methods
  -[WebBookmarkWebFilterSettings userSettings]
  -[WebBookmarkWebFilterSettings .cxx_destruct]
  -[WebBookmarkWebFilterSettings init]
  -[WebBookmarkWebFilterSettings isWebFilterWhiteListOnlyModeEnabled]
  -[WebBookmarkWebFilterSettings reloadSettings]
  -[WebBookmarkWebFilterSettings isWebFilterEnabled]
  -[WebBookmarkWebFilterSettings dealloc]


WebBookmarkTitleWordTokenizer : NSObject
  // class methods
  +[WebBookmarkTitleWordTokenizer initialize]

  // instance methods
  -[WebBookmarkTitleWordTokenizer .cxx_destruct]
  -[WebBookmarkTitleWordTokenizer advanceToNextToken]
  -[WebBookmarkTitleWordTokenizer init]
  -[WebBookmarkTitleWordTokenizer setString:]


WebBookmarkListQuery : NSObject
 @property  BOOL customQuery
 @property  int folderID
 @property  <WebBookmarkInMemoryChangeFilter> *inMemoryFilter

  // instance methods
  -[WebBookmarkListQuery setInMemoryFilter:]
  -[WebBookmarkListQuery _filterBookmarks:]
  -[WebBookmarkListQuery _listQueryType]
  -[WebBookmarkListQuery bookmarksInCollection:fromIndex:toIndex:]
  -[WebBookmarkListQuery .cxx_destruct]
  -[WebBookmarkListQuery _sqliteNotInConditionForInMemoryModifiedAndDeleted:bookmarksInFolder:collection:]
  -[WebBookmarkListQuery inMemoryFilter]
  -[WebBookmarkListQuery init]
  -[WebBookmarkListQuery _normalizeUserTypedString:]
  -[WebBookmarkListQuery initWithBookmarksWhere:folderID:orderBy:usingFilter:]
  -[WebBookmarkListQuery _childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:]
  -[WebBookmarkListQuery _sqliteInConditionForInMemoryModifiedBookmarksInFolder:collection:]
  -[WebBookmarkListQuery _childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:countShouldUseNumChildrenIfPossible:]
  -[WebBookmarkListQuery initWithFolderID:inCollection:usingFilter:options:]
  -[WebBookmarkListQuery _inMemoryAddedChildrenCountForBookmarkFolder:collection:skipCountingBookmarksThatAreDeletedInMemory:]
  -[WebBookmarkListQuery isCustomQuery]
  -[WebBookmarkListQuery initWithBookmarksWhere:orderBy:usingFilter:]
  -[WebBookmarkListQuery countInCollection:]
  -[WebBookmarkListQuery folderID]
  -[WebBookmarkListQuery _preparePrefixesFromNormalizedString:]


WBTabCollection : NSObject <WBStateProvider>
 @property  WebBookmarkTabCollection *tabCollection
 @property  WBCollectionConfiguration *configuration
 @property  BOOL completedMigration
 @property  NSError *error
 @property  BOOL isLockedSync
 @property  BOOL persistent
 @property  WBBrowserState *browserState
 @property  WBBrowserState *lastSessionBrowserState
 @property  NSArray *windowStates
 @property  int windowsFolderSpecialID
 @property  NSArray *windows
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int pinnedTabsFolderID
 @property  int privatePinnedTabsFolderID
 @property  NSArray *recentlyClosedTabs
 @property  NSArray *tabGroups
 @property  unsigned long maximumTabsPerGroup

  // class methods
  +[WBTabCollection inMemoryChangesFileURL]
  +[WBTabCollection inMemoryChangeSet]
  +[WBTabCollection databasePathForConfiguration:]

  // instance methods
  -[WBTabCollection browserState]
  -[WBTabCollection isPersistent]
  -[WBTabCollection windows]
  -[WBTabCollection configuration]
  -[WBTabCollection performMaintenance]
  -[WBTabCollection .cxx_destruct]
  -[WBTabCollection tabGroups]
  -[WBTabCollection initWithConfiguration:]
  -[WBTabCollection lockSync]
  -[WBTabCollection saveTab:]
  -[WBTabCollection tabGroupWithUUID:]
  -[WBTabCollection error]
  -[WBTabCollection initWithConfiguration:checkIntegrity:]
  -[WBTabCollection unlockSync]
  -[WBTabCollection saveWindow:]
  -[WBTabCollection windowStateWithUUID:]
  -[WBTabCollection saveWindowState:]
  -[WBTabCollection windowsFolderSpecialID]
  -[WBTabCollection windowStates]
  -[WBTabCollection pinnedTabsFolderID]
  -[WBTabCollection privatePinnedTabsFolderID]
  -[WBTabCollection windowWithUUID:]
  -[WBTabCollection closeWindowState:]
  -[WBTabCollection deleteWindowState:]
  -[WBTabCollection deleteWindowStates:]
  -[WBTabCollection deleteAllWindowStates]
  -[WBTabCollection recentlyClosedTabs]
  -[WBTabCollection applyInMemoryChanges:]
  -[WBTabCollection tabWithUUID:]
  -[WBTabCollection saveBrowserState:]
  -[WBTabCollection deleteTabGroup:]
  -[WBTabCollection insertTabGroup:afterTabGroup:]
  -[WBTabCollection moveTabGroup:afterTabGroup:]
  -[WBTabCollection saveTabGroup:]
  -[WBTabCollection deleteTabs:]
  -[WBTabCollection insertTabs:inTabGroup:afterTab:]
  -[WBTabCollection reorderTab:afterTab:]
  -[WBTabCollection replaceTab:withTab:]
  -[WBTabCollection _readPropertiesOfBookmark:]
  -[WBTabCollection updateTabs:inTabGroup:]
  -[WBTabCollection tabCollection]
  -[WBTabCollection isLockedSync]
  -[WBTabCollection hasCompletedMigration]
  -[WBTabCollection lastSessionBrowserState]
  -[WBTabCollection tabsForTabGroup:]
  -[WBTabCollection maximumTabsPerGroup]
  -[WBTabCollection setMaximumTabsPerGroup:]
  -[WBTabCollection _createInternalQueue]
  -[WBTabCollection _updatePinnedTabs:privatePinnedTabs:]
  -[WBTabCollection _bookmarksForTabs:]
  -[WBTabCollection _deleteTabGroup:leaveTombstone:]
  -[WBTabCollection _insertBookmark:afterBookmark:inFolderWithID:]
  -[WBTabCollection _reorderTab:afterTab:]
  -[WBTabCollection _bookmarksForTabs:syncable:]
  -[WBTabCollection initWithTabCollection:]
  -[WBTabCollection setCompletedMigration:]
  -[WBTabCollection deleteAllLocalSavedState]
  -[WBTabCollection saveRecentlyClosedTabs:]
  -[WBTabCollection deleteAllRecentlyClosedTabs]
  -[WBTabCollection insertTab:inTabGroup:afterTab:]
  -[WBTabCollection _resultOnInternalQueue:]


WebBookmarkReadonlyCollection : NSObject <WBBookmarkProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebBookmarkReadonlyCollection _collection]
  -[WebBookmarkReadonlyCollection .cxx_destruct]
  -[WebBookmarkReadonlyCollection bookmarkWithID:]
  -[WebBookmarkReadonlyCollection readingListWithUnreadOnly:filteredUsingString:]
  -[WebBookmarkReadonlyCollection enumerateBookmarks:andReadingListItems:matchingString:usingBlock:]
  -[WebBookmarkReadonlyCollection bookmarksMatchingString:]
  -[WebBookmarkReadonlyCollection readingListBookmarksMatchingString:maxResults:onlyArchivedBookmarks:]
  -[WebBookmarkReadonlyCollection databaseHealthInformation]
  -[WebBookmarkReadonlyCollection leafChildCountForBookmarksInFolderWithID:]
  -[WebBookmarkReadonlyCollection leafChildCountForFoldersInFolderWithID:]
  -[WebBookmarkReadonlyCollection initReadonlySafariBookmarkCollection]


WBWebsiteDataRecord : NSObject
 @property  NSObject<OS_xpc_object> *XPCDictionaryRepresentation
 @property  NSString *domain
 @property  unsigned long usage

  // class methods
  +[WBWebsiteDataRecord websiteDataRecordWithDomain:]
  +[WBWebsiteDataRecord websiteDataRecordFromXPCDictionary:]

  // instance methods
  -[WBWebsiteDataRecord setUsage:]
  -[WBWebsiteDataRecord .cxx_destruct]
  -[WBWebsiteDataRecord domain]
  -[WBWebsiteDataRecord usage]
  -[WBWebsiteDataRecord _initWithDomain:]
  -[WBWebsiteDataRecord _initWithDomain:usage:]
  -[WBWebsiteDataRecord XPCDictionaryRepresentation]


WBSavedStateManager : NSObject
 @property  <WBTabGroupSyncAgentProxyProtocol> *tabGroupSyncAgentProxy
 @property  BOOL isEphemeral

  // class methods
  +[WBSavedStateManager ephemeralManager]

  // instance methods
  -[WBSavedStateManager isEphemeral]
  -[WBSavedStateManager .cxx_destruct]
  -[WBSavedStateManager init]
  -[WBSavedStateManager saveTab:]
  -[WBSavedStateManager scheduleSyncIfNeeded]
  -[WBSavedStateManager saveBrowserState:completionHandler:]
  -[WBSavedStateManager saveBrowserState:canSafelyTerminateCompletionHandler:]
  -[WBSavedStateManager saveWindowState:]
  -[WBSavedStateManager closeWindowState:]
  -[WBSavedStateManager deleteWindowState:]
  -[WBSavedStateManager deleteWindowStates:]
  -[WBSavedStateManager saveBrowserState:]
  -[WBSavedStateManager deleteTabGroup:]
  -[WBSavedStateManager insertTabGroup:afterTabGroup:]
  -[WBSavedStateManager moveTabGroup:afterTabGroup:]
  -[WBSavedStateManager saveTabGroup:]
  -[WBSavedStateManager deleteTabs:]
  -[WBSavedStateManager insertTabs:inTabGroup:afterTab:]
  -[WBSavedStateManager reorderTab:afterTab:]
  -[WBSavedStateManager replaceTab:withTab:]
  -[WBSavedStateManager initWithTabGroupSyncAgentProxy:]
  -[WBSavedStateManager _isDatabaseEnabled]
  -[WBSavedStateManager updateTabsInTabGroup:]
  -[WBSavedStateManager tabGroupSyncAgentProxy]


WBCollectionConfiguration : NSObject <NSCopying>
 @property  long long collectionType
 @property  BOOL isReadonly
 @property  BOOL isInMemoryDatabase
 @property  BOOL createIfNeeded
 @property  NSString *databasePath
 @property  BOOL skipsExternalNotifications
 @property  long long storeOwner

  // class methods
  +[WBCollectionConfiguration pptTabCollectionConfiguration]
  +[WBCollectionConfiguration inMemoryBookmarkCollectionConfiguration]
  +[WBCollectionConfiguration inMemoryTabCollectionConfiguration]
  +[WBCollectionConfiguration safariTabCollectionConfiguration]
  +[WBCollectionConfiguration safariBookmarkCollectionConfiguration]
  +[WBCollectionConfiguration readonlySafariTabCollectionConfiguration]
  +[WBCollectionConfiguration readonlySafariBookmarkCollectionConfiguration]

  // instance methods
  -[WBCollectionConfiguration collectionType]
  -[WBCollectionConfiguration isReadonly]
  -[WBCollectionConfiguration setStoreOwner:]
  -[WBCollectionConfiguration databasePath]
  -[WBCollectionConfiguration initWithCollectionType:databasePath:readonly:createIfNeeded:]
  -[WBCollectionConfiguration .cxx_destruct]
  -[WBCollectionConfiguration initWithCollectionType:databasePath:readonly:]
  -[WBCollectionConfiguration storeOwner]
  -[WBCollectionConfiguration createIfNeeded]
  -[WBCollectionConfiguration skipsExternalNotifications]
  -[WBCollectionConfiguration isInMemoryDatabase]
  -[WBCollectionConfiguration setSkipsExternalNotifications:]
  -[WBCollectionConfiguration copyWithZone:]


WBBookmarksDatabaseHealthInformation : NSObject
 @property  unsigned long topLevelDuplicateBookmarksCount
 @property  unsigned long allDuplicateBookmarksCount

  // instance methods
  -[WBBookmarksDatabaseHealthInformation initWithTopLevelDuplicateBookmarksCount:allDuplicateBookmarksCount:]
  -[WBBookmarksDatabaseHealthInformation topLevelDuplicateBookmarksCount]
  -[WBBookmarksDatabaseHealthInformation allDuplicateBookmarksCount]


WBSettingsTask : NSObject
 @property  long long taskType
 @property  WBWebsiteDataRecord *websiteDataRecord

  // class methods
  +[WBSettingsTask taskWithType:]
  +[WBSettingsTask taskForDeletingIndividualWebsiteDataWithRecord:]

  // instance methods
  -[WBSettingsTask taskType]
  -[WBSettingsTask .cxx_destruct]
  -[WBSettingsTask initWithType:websiteDataRecord:]
  -[WBSettingsTask websiteDataRecord]


WBFeatureManager : NSObject
 @property  long long accessLevel
 @property  BOOL offlineReadingListAvailable
 @property  BOOL favoritesFolderSelectionShouldSync

  // class methods
  +[WBFeatureManager sharedFeatureManager]

  // instance methods
  -[WBFeatureManager isOfflineReadingListAvailable]
  -[WBFeatureManager accessLevel]
  -[WBFeatureManager init]
  -[WBFeatureManager favoritesFolderSelectionShouldSync]
  -[WBFeatureManager _updateToAccessLevel:]


WBTabGroup : NSObject <NSCopying, NSSecureCoding, WBSerializable>
 @property  WebBookmark *bookmark
 @property  int identifier
 @property  NSArray *deletedTabs
 @property  NSString *displayTitle
 @property  @? displayTitleProvider
 @property  NSString *lastSelectedTabUUID
 @property  BOOL isLocal
 @property  NSString *privacyPreservingDescription
 @property  BOOL isPrivate
 @property  BOOL syncable
 @property  NSArray *tabs
 @property  NSArray *allTabs
 @property  long long type
 @property  NSString *title
 @property  NSString *uuid
 @property  NSString *htmlString
 @property  NSSet *tabsUUIDSet
 @property  BOOL isEmpty
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBTabGroup supportsSecureCoding]
  +[WBTabGroup localTabGroup]
  +[WBTabGroup privateTabGroup]

  // instance methods
  -[WBTabGroup allTabs]
  -[WBTabGroup isPrivate]
  -[WBTabGroup bookmark]
  -[WBTabGroup isSyncable]
  -[WBTabGroup initWithCoder:]
  -[WBTabGroup isEmpty]
  -[WBTabGroup setTitle:]
  -[WBTabGroup initWithDictionaryRepresentation:]
  -[WBTabGroup setType:]
  -[WBTabGroup displayTitle]
  -[WBTabGroup setSyncable:]
  -[WBTabGroup initWithTitle:]
  -[WBTabGroup .cxx_destruct]
  -[WBTabGroup isHidden]
  -[WBTabGroup dictionaryRepresentation]
  -[WBTabGroup isLocal]
  -[WBTabGroup init]
  -[WBTabGroup isEqual:]
  -[WBTabGroup identifier]
  -[WBTabGroup tabs]
  -[WBTabGroup title]
  -[WBTabGroup initWithBookmark:]
  -[WBTabGroup setTabs:]
  -[WBTabGroup type]
  -[WBTabGroup uuid]
  -[WBTabGroup setIdentifier:]
  -[WBTabGroup copyWithZone:]
  -[WBTabGroup encodeWithCoder:]
  -[WBTabGroup setHidden:]
  -[WBTabGroup clearTabs]
  -[WBTabGroup htmlString]
  -[WBTabGroup initWithBookmark:tabs:lastSelectedTabUUID:]
  -[WBTabGroup tabWithUUID:]
  -[WBTabGroup privacyPreservingDescription]
  -[WBTabGroup lastSelectedTabUUID]
  -[WBTabGroup setLastSelectedTabUUID:]
  -[WBTabGroup reorderTab:afterTab:]
  -[WBTabGroup isIdentical:]
  -[WBTabGroup truncateToNumberOfTabs:]
  -[WBTabGroup initWithTitle:uuid:]
  -[WBTabGroup initWithBookmark:tabs:lastSelectedTabUUID:type:]
  -[WBTabGroup insertTabs:afterTab:]
  -[WBTabGroup removeTabs:]
  -[WBTabGroup tabsUUIDSet]
  -[WBTabGroup tabsAreIdentical:]
  -[WBTabGroup appendTab:]
  -[WBTabGroup appendTabs:]
  -[WBTabGroup insertTab:afterTab:]
  -[WBTabGroup removeTab:]
  -[WBTabGroup updateTab:]
  -[WBTabGroup clearDeletedTabs]
  -[WBTabGroup detectDuplicatedTabs]
  -[WBTabGroup displayTitleProvider]
  -[WBTabGroup setDisplayTitleProvider:]
  -[WBTabGroup deletedTabs]


WBReusableTabEntry : NSObject
 @property  <WBReusableTab> *reusableTab
 @property  NSDate *dateCreated

  // instance methods
  -[WBReusableTabEntry .cxx_destruct]
  -[WBReusableTabEntry dateCreated]
  -[WBReusableTabEntry initWithReusableTab:]
  -[WBReusableTabEntry reusableTab]


WBReusableTabManager : NSObject <NSCacheDelegate, WBTabGroupManagerObserver>
 @property  NSSet *allGroupsTabsUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBReusableTabManager sharedManager]

  // instance methods
  -[WBReusableTabManager cache:willEvictObject:]
  -[WBReusableTabManager .cxx_destruct]
  -[WBReusableTabManager init]
  -[WBReusableTabManager tabGroupManager:didRemoveTabGroup:]
  -[WBReusableTabManager _cleanUp]
  -[WBReusableTabManager windowStates]
  -[WBReusableTabManager tabGroupManager]
  -[WBReusableTabManager _scheduleCleanup]
  -[WBReusableTabManager allGroupsTabsUUIDs]
  -[WBReusableTabManager _addTabUUIDsFromGroup:toSet:]
  -[WBReusableTabManager addReusableTab:]
  -[WBReusableTabManager reuseTabForUUID:]
  -[WBReusableTabManager isTabSuspended:]
  -[WBReusableTabManager _referenceToTabWithUUID:]
  -[WBReusableTabManager enumerateReusableTabs:]


WBBookmarkDatabaseSyncData : NSObject <NSSecureCoding>
 @property  CKServerChangeToken *lastServerChangeToken
 @property  BOOL didNotSaveRecordsAfterMigration
 @property  NSData *encodedDatabaseSyncData
 @property  long long nextChangeID

  // class methods
  +[WBBookmarkDatabaseSyncData supportsSecureCoding]
  +[WBBookmarkDatabaseSyncData databaseSyncDataWithContentsOfData:]
  +[WBBookmarkDatabaseSyncData databaseSyncDataInDatabase:databaseAccessor:]

  // instance methods
  -[WBBookmarkDatabaseSyncData initWithCoder:]
  -[WBBookmarkDatabaseSyncData .cxx_destruct]
  -[WBBookmarkDatabaseSyncData encodeWithCoder:]
  -[WBBookmarkDatabaseSyncData nextChangeID]
  -[WBBookmarkDatabaseSyncData encodedDatabaseSyncData]
  -[WBBookmarkDatabaseSyncData writeToDatabase:databaseAccessor:]
  -[WBBookmarkDatabaseSyncData lastServerChangeToken]
  -[WBBookmarkDatabaseSyncData setLastServerChangeToken:]
  -[WBBookmarkDatabaseSyncData didNotSaveRecordsAfterMigration]
  -[WBBookmarkDatabaseSyncData setDidNotSaveRecordsAfterMigration:]


WBTabCyclerCommandHandler : NSObject <WBSCyclerTestTarget>
 @property  WBTabGroupManager *tabGroupManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBTabCyclerCommandHandler .cxx_destruct]
  -[WBTabCyclerCommandHandler dealloc]
  -[WBTabCyclerCommandHandler tabGroupManager]
  -[WBTabCyclerCommandHandler _cyclerRepresentationOfTabGroup:]
  -[WBTabCyclerCommandHandler _clearRemoteTabGroupsWithCompletionHandler:]
  -[WBTabCyclerCommandHandler _clearLocalTabGroupsWithCompletionHandler:]
  -[WBTabCyclerCommandHandler _clearLocalTabGroupsWithCompletionHandler:retryCooldown:]
  -[WBTabCyclerCommandHandler _startMonitoringTabGroupUpdateExpectingMigration:completionHandler:]
  -[WBTabCyclerCommandHandler _startMonitoringSyncStatusWithCompletionHandler:]
  -[WBTabCyclerCommandHandler _tabGroupBeforeIndex:]
  -[WBTabCyclerCommandHandler _tabBeforeIndex:inGroup:]
  -[WBTabCyclerCommandHandler _tabGroupWithIdentifier:]
  -[WBTabCyclerCommandHandler _deleteTabGroup:reply:]
  -[WBTabCyclerCommandHandler _tabWithIdentifier:]
  -[WBTabCyclerCommandHandler _deleteTab:reply:]
  -[WBTabCyclerCommandHandler _setTitle:forTabGroup:reply:]
  -[WBTabCyclerCommandHandler _setTitle:forTab:reply:]
  -[WBTabCyclerCommandHandler _triggerTabGroupSync]
  -[WBTabCyclerCommandHandler _cyclerRepresentationOfTab:]
  -[WBTabCyclerCommandHandler fetchTopLevelBookmarkList:]
  -[WBTabCyclerCommandHandler clearBookmarksWithOptions:completionHandler:]
  -[WBTabCyclerCommandHandler createBookmarkWithTitle:url:inListWithIdentifier:atIndex:reply:]
  -[WBTabCyclerCommandHandler createBookmarkListWithTitle:inListWithIdentifier:atIndex:reply:]
  -[WBTabCyclerCommandHandler deleteBookmarkWithIdentifier:reply:]
  -[WBTabCyclerCommandHandler moveBookmarkWithIdentifier:intoListWithIdentifier:atIndex:reply:]
  -[WBTabCyclerCommandHandler setTitle:forBookmarkWithIdentifier:reply:]
  -[WBTabCyclerCommandHandler setURL:forBookmarkWithIdentifier:reply:]
  -[WBTabCyclerCommandHandler syncBookmarksWithCompletionHandler:]
  -[WBTabCyclerCommandHandler initWithTabGroupManager:]


_WBTabCyclerTabGroupUpdateObserver : NSObject <WBTabGroupManagerObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_WBTabCyclerTabGroupUpdateObserver observeTabGroupManager:waitForTabGroups:handler:]

  // instance methods
  -[_WBTabCyclerTabGroupUpdateObserver _timeout]
  -[_WBTabCyclerTabGroupUpdateObserver startObserving]
  -[_WBTabCyclerTabGroupUpdateObserver .cxx_destruct]
  -[_WBTabCyclerTabGroupUpdateObserver tabGroupManagerDidUpdateTabGroups:]
  -[_WBTabCyclerTabGroupUpdateObserver initWithTabGroupManager:handler:]


SafariFetcherServerProxy : NSObject <WebBookmarksXPCConnectionDelegate>
 @property  <WebBookmarksClientDelegateProtocol> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SafariFetcherServerProxy .cxx_destruct]
  -[SafariFetcherServerProxy setDelegate:]
  -[SafariFetcherServerProxy init]
  -[SafariFetcherServerProxy delegate]
  -[SafariFetcherServerProxy connection:didCloseWithError:]
  -[SafariFetcherServerProxy clearReadingListArchiveWithUUID:]
  -[SafariFetcherServerProxy clearAllReadingListArchives]
  -[SafariFetcherServerProxy startReadingListFetcher]
  -[SafariFetcherServerProxy didFinishFetching]
  -[SafariFetcherServerProxy didUpdateProgressWithMessage:]
  -[SafariFetcherServerProxy didStartFetchingReadingListItemWithMessage:]
  -[SafariFetcherServerProxy didStopFetchingReadingListItemWithMessage:]


WBTabGroupManager : NSObject
 @property  NSArray *tabGroups
 @property  <WBTabProvider> *tabProvider

  // instance methods
  -[WBTabGroupManager .cxx_destruct]
  -[WBTabGroupManager tabGroups]
  -[WBTabGroupManager saveTab:]
  -[WBTabGroupManager insertTabGroup:afterTabGroup:]
  -[WBTabGroupManager moveTabGroup:afterTabGroup:]
  -[WBTabGroupManager saveTabGroup:]
  -[WBTabGroupManager updateTabsInTabGroup:]
  -[WBTabGroupManager addTabGroupObserver:]
  -[WBTabGroupManager _reloadTabGroupsFromDatabase]
  -[WBTabGroupManager removeTabGroup:]
  -[WBTabGroupManager removeTabGroupObserver:]
  -[WBTabGroupManager _readTabGroups]
  -[WBTabGroupManager _tabGroupSyncDidFinish:]
  -[WBTabGroupManager _didUpdateTabGroups:]
  -[WBTabGroupManager notifyDidFinishSetup]
  -[WBTabGroupManager notifyDidUpdateTabGroups]
  -[WBTabGroupManager notifyDidRemoveTabGroup:]
  -[WBTabGroupManager notifyDidUpdateTabGroup:]
  -[WBTabGroupManager _addKnownStateForTab:]
  -[WBTabGroupManager notifyDidUpdateTab:userDriven:]
  -[WBTabGroupManager notifyDidUpdateTabsInTabGroup:]
  -[WBTabGroupManager _compareInMemoryTabGroups:knownTabStates:withTabGroups:]
  -[WBTabGroupManager initWithTabProvider:savedStateManager:]
  -[WBTabGroupManager tabProvider]


WBWindow : NSObject
 @property  WebBookmark *bookmark
 @property  int identifier
 @property  WBTabGroup *activeTabGroup
 @property  NSDate *dateClosed
 @property  NSDictionary *extraAttributes
 @property  WBTabGroup *localTabGroup
 @property  WBTabGroup *privateTabGroup
 @property  NSString *sceneID
 @property  NSDictionary *tabGroupsToActiveTabs
 @property  NSString *uuid
 @property  NSString *customUnifiedFieldText
 @property  BOOL isFavoritesBarHidden
 @property  BOOL isMinimized
 @property  BOOL isPopupWindow
 @property  BOOL prefersSidebarVisible
 @property  BOOL isPrivateWindow
 @property  BOOL isTabBarHidden

  // instance methods
  -[WBWindow isMinimized]
  -[WBWindow bookmark]
  -[WBWindow .cxx_destruct]
  -[WBWindow extraAttributes]
  -[WBWindow initWithUUID:]
  -[WBWindow isPopupWindow]
  -[WBWindow sceneID]
  -[WBWindow setExtraAttributes:]
  -[WBWindow setSceneID:]
  -[WBWindow isEqual:]
  -[WBWindow identifier]
  -[WBWindow setActiveTabGroup:]
  -[WBWindow isPrivateWindow]
  -[WBWindow initWithBookmark:]
  -[WBWindow uuid]
  -[WBWindow activeTabGroup]
  -[WBWindow initWithUUID:sceneID:]
  -[WBWindow localTabGroup]
  -[WBWindow privateTabGroup]
  -[WBWindow tabGroupsToActiveTabs]
  -[WBWindow activeTabUUIDForTabGroupWithUUID:]
  -[WBWindow setActiveTabUUID:forTabGroupWithUUID:]
  -[WBWindow initWithBookmark:activeTabGroup:localTabGroup:privateTabGroup:]
  -[WBWindow dateClosed]
  -[WBWindow setDateClosed:]
  -[WBWindow initWithDictionaryRepresentation:localTabGroup:privateTabGroup:]
  -[WBWindow customUnifiedFieldText]
  -[WBWindow isFavoritesBarHidden]
  -[WBWindow prefersSidebarVisible]
  -[WBWindow isTabBarHidden]
  -[WBWindow removeActiveTabUUIDForTabGroupWithUUID:]
  -[WBWindow removeAllActiveTabUUIDs]
  -[WBWindow initWithUUID:activeTabGroup:localTabGroup:privateTabGroup:sceneID:]
  -[WBWindow updateActiveTabGroup]
  -[WBWindow _updateExtraAttributesUsingBlock:]


WebBookmarksSettingsGateway : NSObject
  // instance methods
  -[WebBookmarksSettingsGateway .cxx_destruct]
  -[WebBookmarksSettingsGateway init]
  -[WebBookmarksSettingsGateway getSafariWebDataUsageWithCompletion:]
  -[WebBookmarksSettingsGateway deleteAllSafariSecurityOriginsWithCompletionHandler:]
  -[WebBookmarksSettingsGateway deleteSafariWebsiteDataRecord:completionHandler:]
  -[WebBookmarksSettingsGateway deleteSafariPersistentURLCacheStorageWithCompletionHandler:]
  -[WebBookmarksSettingsGateway getSafariDataUsageByteCountWithCompletionHandler:]
  -[WebBookmarksSettingsGateway clearAllSafariHistoryWithCompletionHandler:]
  -[WebBookmarksSettingsGateway scheduleBookmarksDatabaseMaintenance]
  -[WebBookmarksSettingsGateway scheduleBookmarksDatabaseMigrationTask]
  -[WebBookmarksSettingsGateway scheduleHSTSSuperCookieCleanup]
  -[WebBookmarksSettingsGateway schedulePasswordIconsCleanup]


WBDatabaseLockAcquisitor : NSObject
 @property  <WBDatabaseLockAcquisitorDelegate> *delegate

  // instance methods
  -[WBDatabaseLockAcquisitor _retryTimerFired:]
  -[WBDatabaseLockAcquisitor _startTimerWithTimeout:retryInterval:]
  -[WBDatabaseLockAcquisitor _stopTimer]
  -[WBDatabaseLockAcquisitor .cxx_destruct]
  -[WBDatabaseLockAcquisitor acquireLockWithTimeout:]
  -[WBDatabaseLockAcquisitor releaseLock]
  -[WBDatabaseLockAcquisitor setDelegate:]
  -[WBDatabaseLockAcquisitor initWithWebBookmarkCollectionClass:]
  -[WBDatabaseLockAcquisitor delegate]
  -[WBDatabaseLockAcquisitor acquireLockWithTimeout:retryInterval:]
  -[WBDatabaseLockAcquisitor _attemptToLockSyncAndNotifyDelegateOnFailure:]
  -[WBDatabaseLockAcquisitor dealloc]


WebBookmarksXPCConnection : NSObject
 @property  NSObject<OS_xpc_object> *connection
 @property  <WebBookmarksXPCConnectionDelegate> *delegate

  // instance methods
  -[WebBookmarksXPCConnection .cxx_destruct]
  -[WebBookmarksXPCConnection sendMessage:]
  -[WebBookmarksXPCConnection _handleMessage:]
  -[WebBookmarksXPCConnection setDelegate:]
  -[WebBookmarksXPCConnection setMessageHandlers:]
  -[WebBookmarksXPCConnection initWithConnection:]
  -[WebBookmarksXPCConnection connection]
  -[WebBookmarksXPCConnection setHandler:forMessageNamed:]
  -[WebBookmarksXPCConnection delegate]
  -[WebBookmarksXPCConnection hasBoolEntitlement:]
  -[WebBookmarksXPCConnection initClientForMachService:]
  -[WebBookmarksXPCConnection messageWithName:]
  -[WebBookmarksXPCConnection sendMessage:withReplyHandler:]


WebBookmarksXPCListener : NSObject <WebBookmarksXPCConnectionDelegate>
 @property  <WebBookmarksXPCConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WebBookmarksXPCListener .cxx_destruct]
  -[WebBookmarksXPCListener setDelegate:]
  -[WebBookmarksXPCListener setMessageHandlers:]
  -[WebBookmarksXPCListener setHandler:forMessageNamed:]
  -[WebBookmarksXPCListener delegate]
  -[WebBookmarksXPCListener connection:didCloseWithError:]
  -[WebBookmarksXPCListener _handleIncomingConnection:]
  -[WebBookmarksXPCListener initListenerForMachService:]


WBLocalTabAttributes : NSObject <NSSecureCoding>
 @property  BOOL displayingStandaloneImage
 @property  double readerViewTopScrollOffset
 @property  int readingListBookmarkID
 @property  BOOL openedFromLink
 @property  BOOL showingReader
 @property  BOOL isSafeToLoadWebPage
 @property  NSDate *lastVisitTime
 @property  NSData *sessionStateData
 @property  NSArray *ancestorTabUUIDs
 @property  NSDate *dateClosed
 @property  BOOL isDisposable
 @property  BOOL isPinned
 @property  NSURL *pinnedPageURL
 @property  NSString *pinnedPageTitle
 @property  BOOL isMuted
 @property  NSDictionary *queuedNavigation
 @property  unsigned long tabIndex
 @property  NSString *windowUUID
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[WBLocalTabAttributes supportsSecureCoding]

  // instance methods
  -[WBLocalTabAttributes wasOpenedFromLink]
  -[WBLocalTabAttributes isMuted]
  -[WBLocalTabAttributes initWithCoder:]
  -[WBLocalTabAttributes isShowingReader]
  -[WBLocalTabAttributes initWithDictionaryRepresentation:]
  -[WBLocalTabAttributes .cxx_destruct]
  -[WBLocalTabAttributes isPinned]
  -[WBLocalTabAttributes dictionaryRepresentation]
  -[WBLocalTabAttributes isDisplayingStandaloneImage]
  -[WBLocalTabAttributes tabIndex]
  -[WBLocalTabAttributes readerViewTopScrollOffset]
  -[WBLocalTabAttributes readingListBookmarkID]
  -[WBLocalTabAttributes encodeWithCoder:]
  -[WBLocalTabAttributes dateClosed]
  -[WBLocalTabAttributes initWithVersion:safeToLoadWebPage:lastVisitTime:sessionStateData:ancestorTabUUIDs:dateClosed:tabIndex:windowUUID:disposable:pinned:pinnedPageURL:pinnedPageTitle:muted:queuedNavigation:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:]
  -[WBLocalTabAttributes initWithLastVisitTime:sessionStateData:ancestorTabUUIDs:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:queuedNavigation:]
  -[WBLocalTabAttributes isSafeToLoadWebPage]
  -[WBLocalTabAttributes lastVisitTime]
  -[WBLocalTabAttributes sessionStateData]
  -[WBLocalTabAttributes ancestorTabUUIDs]
  -[WBLocalTabAttributes isDisposable]
  -[WBLocalTabAttributes pinnedPageURL]
  -[WBLocalTabAttributes pinnedPageTitle]
  -[WBLocalTabAttributes queuedNavigation]
  -[WBLocalTabAttributes windowUUID]


WBInMemoryChangeFilterVisible : NSObject <WebBookmarkInMemoryChangeFilter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBInMemoryChangeFilterVisible bookmarkIDsModifiedInMemoryPassingFilterFromChangeSet:inFolder:]
  -[WBInMemoryChangeFilterVisible bookmarkIDsModifiedInMemoryNotPassingFilterFromChangeSet:inFolder:]
  -[WBInMemoryChangeFilterVisible shouldIncludeBookmarkAddedInMemory:]
  -[WBInMemoryChangeFilterVisible isBookmarkVisible:]


WebBookmarkSecondaryCollection : WebBookmarkCollection
  // class methods
  +[WebBookmarkSecondaryCollection _syncLockFileName]

  // instance methods
  -[WebBookmarkSecondaryCollection initSecondarySafariBookmarkCollectionWithName:]
  -[WebBookmarkSecondaryCollection _primaryCollection]


WBSettingsTaskHandler : NSObject
 @property  @? startBackgroundTaskAssertionBlock
 @property  @? finishBackgroundTaskAssertionBlock

  // instance methods
  -[WBSettingsTaskHandler .cxx_destruct]
  -[WBSettingsTaskHandler init]
  -[WBSettingsTaskHandler _enqueueTask:]
  -[WBSettingsTaskHandler _shouldEnqueueTask:]
  -[WBSettingsTaskHandler _performNextTask]
  -[WBSettingsTaskHandler _attemptCurrentTask]
  -[WBSettingsTaskHandler _finishCurrentTask]
  -[WBSettingsTaskHandler _currentTaskAttemptDidFinishWithError:]
  -[WBSettingsTaskHandler enqueueTask:]
  -[WBSettingsTaskHandler startBackgroundTaskAssertionBlock]
  -[WBSettingsTaskHandler setStartBackgroundTaskAssertionBlock:]
  -[WBSettingsTaskHandler finishBackgroundTaskAssertionBlock]
  -[WBSettingsTaskHandler setFinishBackgroundTaskAssertionBlock:]


(WBNSErrorExtras)
	// class methods
	+[(WBNSErrorExtras) wb_databaseOpenError]
	+[(WBNSErrorExtras) wb_featureDisabledError]
	+[(WBNSErrorExtras) wb_lockError]

	// instance methods
	-[(WBNSErrorExtras) wb_privacyPreservingDescription]

(WebBookmarksExtras)
	// instance methods
	-[(WebBookmarksExtras) wb_stringByRedactingBookmarkDAVServerID]
	-[(WebBookmarksExtras) wb_bestURLForUserTypedString]
	-[(WebBookmarksExtras) _webBookmarks_hasCaseInsensitivePrefix:]
	-[(WebBookmarksExtras) _wb_stringByStandardizingDAVServerID]
	-[(WebBookmarksExtras) _wb_stringByDeletingTrailingSlash]

(WebBookmarksExtras)
	// instance methods
	-[(WebBookmarksExtras) _webBookmarks_isHTTPFamilyURL]
	-[(WebBookmarksExtras) _wb_userVisibleString]

(WBNSDictionaryExtras)
	// instance methods
	-[(WBNSDictionaryExtras) wb_stringForKey:isValid:]
	-[(WBNSDictionaryExtras) wb_boolForKey:]
	-[(WBNSDictionaryExtras) wb_numberForKey:]
	-[(WBNSDictionaryExtras) wb_URLForKey:isValid:]
	-[(WBNSDictionaryExtras) wb_numberForKey:isValid:]
	-[(WBNSDictionaryExtras) wb_dictionaryForKey:isValid:]
	-[(WBNSDictionaryExtras) wb_arrayForKey:isValid:]
	-[(WBNSDictionaryExtras) wb_objectOfType:forKey:isValid:]
	-[(WBNSDictionaryExtras) wb_dateForKey:isValid:]

01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 0800 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 0a00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCRDTGeneration 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCRDTPosition 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCRDTPositionSortValue 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCyclerBookmarkLeafRepresentation 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCyclerItemListRepresentation 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSDistributedNotificationObserver 
01 00 0100 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSFeatureAvailability 
01 00 0100 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSSafariBookmarksSyncAgentProxy 
01 00 0100 /System/Library/PrivateFrameworks/SafariCore.framework/SafariCore: WBSScopeExitHandler 
01 00 0240 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSStartPageSectionManager 
