|| __DATA.__objc_data _OBJC_CLASS_$_CATAddress
|| __DATA.__objc_data _OBJC_CLASS_$_CATArbitrator
|| __DATA.__objc_data _OBJC_CLASS_$_CATBatchRemoteTaskOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CATBlockOperationObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CATCollectionController
|| __DATA.__objc_data _OBJC_CLASS_$_CATEndPoint
|| __DATA.__objc_data _OBJC_CLASS_$_CATIDSMessageOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CATIDSServiceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_CATIDSServiceConnectionMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CATIDSServiceConnectionTerminal
|| __DATA.__objc_data _OBJC_CLASS_$_CATIDSServiceTransport
|| __DATA.__objc_data _OBJC_CLASS_$_CATNetworkReachability
|| __DATA.__objc_data _OBJC_CLASS_$_CATProperty
|| __DATA.__objc_data _OBJC_CLASS_$_CATRemoteConnection
|| __DATA.__objc_data _OBJC_CLASS_$_CATRemoteConnectionSocketOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CATRemoteConnectionTrustDecision
|| __DATA.__objc_data _OBJC_CLASS_$_CATRemoteTransport
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingBenignError
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingBroadcastTerminal
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingDeviceDiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingFatalError
|| __DATA.__objc_data _OBJC_CLASS_$_CATSharingServiceTransport
|| __DATA.__objc_data _OBJC_CLASS_$_CATSocket
|| __DATA.__objc_data _OBJC_CLASS_$_CATTaskBlockServer
|| __DATA.__objc_data _OBJC_CLASS_$_CATTaskMessageCancel
|| __DATA.__objc_data _OBJC_CLASS_$_CATTaskMessageFetchProgress
|| __DATA.__objc_data _OBJC_CLASS_$_CATTaskMessageIncrementalProgress
|| __DATA.__objc_data _OBJC_CLASS_$_CATTaskResultObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CATAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_CATArbitrator
|| __DATA.__objc_data _OBJC_METACLASS_$_CATBatchRemoteTaskOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CATBlockOperationObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CATCollectionController
|| __DATA.__objc_data _OBJC_METACLASS_$_CATEndPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_CATIDSMessageOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CATIDSServiceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_CATIDSServiceConnectionMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CATIDSServiceConnectionTerminal
|| __DATA.__objc_data _OBJC_METACLASS_$_CATIDSServiceTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_CATNetworkReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_CATProperty
|| __DATA.__objc_data _OBJC_METACLASS_$_CATRemoteConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_CATRemoteConnectionSocketOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CATRemoteConnectionTrustDecision
|| __DATA.__objc_data _OBJC_METACLASS_$_CATRemoteTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingBenignError
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingBroadcastTerminal
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingDeviceDiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingFatalError
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSharingServiceTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_CATSocket
|| __DATA.__objc_data _OBJC_METACLASS_$_CATTaskBlockServer
|| __DATA.__objc_data _OBJC_METACLASS_$_CATTaskMessageCancel
|| __DATA.__objc_data _OBJC_METACLASS_$_CATTaskMessageFetchProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_CATTaskMessageIncrementalProgress
|| __DATA.__objc_data _OBJC_METACLASS_$_CATTaskResultObject
|| __DATA_CONST.__const _CATErrorDomain
|| __DATA_CONST.__const _CATLocalizedKey
|| __DATA_CONST.__const _CATUnlocalizedKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATMutableTaskProgress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATNotificationMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATRemoteTaskOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSerialOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSessionMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSessionMessageDidInvalidate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSessionMessageInvalidate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSessionMessageResume
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATSessionMessageResumed
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskMessageError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskMessageProgressUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskMessageStart
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskProgress
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTaskSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTransition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CATXPCTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATMutableTaskProgress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATNotificationMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATRemoteTaskOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSerialOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSessionMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSessionMessageDidInvalidate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSessionMessageInvalidate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSessionMessageResume
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATSessionMessageResumed
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATStateMachineEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskMessageError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskMessageProgressUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskMessageStart
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskProgress
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTaskSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTransition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CATXPCTransport
|| __TEXT.__text _CATAssertIsNotQueue
|| __TEXT.__text _CATAssertIsQueue
|| __TEXT.__text _CATErrorWithCodeAndUserInfo
|| __TEXT.__text _CATErrorWithDomainCodeAndUserInfo
|| __TEXT.__text _CATFormattedStringForKey
|| __TEXT.__text _CATGetCatalystQueue
|| __TEXT.__text _CATSetCatalystQueue
__ CFNetwork: _CFHTTPMessageAppendBytes
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageCopyBody
__ CFNetwork: _CFHTTPMessageCopyRequestMethod
__ CFNetwork: _CFHTTPMessageCopyRequestURL
__ CFNetwork: _CFHTTPMessageCopySerializedMessage
__ CFNetwork: _CFHTTPMessageCreateEmpty
__ CFNetwork: _CFHTTPMessageCreateRequest
__ CFNetwork: _CFHTTPMessageCreateResponse
__ CFNetwork: _CFHTTPMessageIsHeaderComplete
__ CFNetwork: _CFHTTPMessageIsRequest
__ CFNetwork: _CFHTTPMessageSetBody
__ CFNetwork: _CFHTTPMessageSetHeaderFieldValue
__ CFNetwork: _OBJC_CLASS_$_NSNetService
__ CFNetwork: __kCFStreamPropertySSLClientSideAuthentication
__ CFNetwork: __kCFStreamPropertyTCPAdaptiveWriteTimeout
__ CFNetwork: _kCFHTTPVersion1_1
__ CFNetwork: _kCFStreamPropertySSLPeerTrust
__ CFNetwork: _kCFStreamPropertySSLSettings
__ CFNetwork: _kCFStreamSSLCertificates
__ CFNetwork: _kCFStreamSSLIsServer
__ CFNetwork: _kCFStreamSSLLevel
__ CFNetwork: _kCFStreamSSLPeerName
__ CFNetwork: _kCFStreamSSLValidatesCertificateChain
__ CFNetwork: _kCFStreamSocketSecurityLevelTLSv1_2
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFReadStreamCopyProperty
__ CoreFoundation: _CFReadStreamSetDispatchQueue
__ CoreFoundation: _CFReadStreamSignalEvent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _CFWriteStreamSignalEvent
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSStream
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFStreamPropertySocketNativeHandle
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyValueChangeKindKey
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSInvocationOperation
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSBlockOperation
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSOperationQueue
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetTrustResult
__ Security: _SecTrustSetAnchorCertificates
__ Security: _SecTrustSetAnchorCertificatesOnly
__ Security: _SecTrustSetPolicies
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _accept
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeaddrinfo
__ libSystem.B.dylib: _getaddrinfo
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _listen
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strcpy
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strtok
__ libSystem.B.dylib: _vm_page_size
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _property_getAttributes
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _protocol_copyPropertyList
__ libobjc.A.dylib: _sel_registerName
CATAddress : NSObject
 @property  NSData *data
 @property  NSString *address
 @property  BOOL any
 @property  BOOL localWiFi

  // class methods
  +[CATAddress any]
  +[CATAddress localWiFi]

  // instance methods
  -[CATAddress isEqualToAddress:]
  -[CATAddress isAny]
  -[CATAddress .cxx_destruct]
  -[CATAddress address]
  -[CATAddress data]
  -[CATAddress init]
  -[CATAddress isEqual:]
  -[CATAddress initWithString:]
  -[CATAddress initWithData:]
  -[CATAddress isLocalWiFi]


CATIDSMessageMetadata : NSObject <CATDictionaryCodable>
 @property  NSUUID *messageIdentifier
 @property  long long messageType
 @property  unsigned long messagingVersion
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATIDSMessageMetadata instanceWithDictionary:]

  // instance methods
  -[CATIDSMessageMetadata messageType]
  -[CATIDSMessageMetadata .cxx_destruct]
  -[CATIDSMessageMetadata dictionaryValue]
  -[CATIDSMessageMetadata messageIdentifier]
  -[CATIDSMessageMetadata initWithMessageType:]
  -[CATIDSMessageMetadata initWithMessageIdentifier:messageType:messagingVersion:]
  -[CATIDSMessageMetadata messagingVersion]


CATArbitrator : NSObject
  // instance methods
  -[CATArbitrator .cxx_destruct]
  -[CATArbitrator init]
  -[CATArbitrator resourcesForKeys:exclusive:]
  -[CATArbitrator registerResource:forKey:maxConcurrentCount:]
  -[CATArbitrator resourceForKey:exclusive:]
  -[CATArbitrator waitForResourcesForKeys:exclusive:delegateQueue:completionBlock:]
  -[CATArbitrator stopWaiting:]
  -[CATArbitrator registerResource:forKey:]
  -[CATArbitrator unregisterResourceForKey:]


_CATArbitratorRegistrationEntry : NSObject
 @property  unsigned long currentCount

  // instance methods
  -[_CATArbitratorRegistrationEntry .cxx_destruct]
  -[_CATArbitratorRegistrationEntry invalidate]
  -[_CATArbitratorRegistrationEntry currentCount]
  -[_CATArbitratorRegistrationEntry makeResourceProxyIfPossible:]
  -[_CATArbitratorRegistrationEntry initWithResource:maxConcurrentCount:]
  -[_CATArbitratorRegistrationEntry servicePendingWaitTokens]
  -[_CATArbitratorRegistrationEntry makeResourceProxyIfPossibleWithoutLocking:]
  -[_CATArbitratorRegistrationEntry pendingWaitsNeedServicing]
  -[_CATArbitratorRegistrationEntry waitForResourceWithExclusive:group:]
  -[_CATArbitratorRegistrationEntry resourceProxyDidInvalidate:]


_CATArbitratorResourceProxy : NSProxy <CATArbitratorProxy>
 @property  BOOL isExclusive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CATArbitratorResourceProxy isExclusive]
  -[_CATArbitratorResourceProxy methodSignatureForSelector:]
  -[_CATArbitratorResourceProxy .cxx_destruct]
  -[_CATArbitratorResourceProxy forwardingTargetForSelector:]
  -[_CATArbitratorResourceProxy respondsToSelector:]
  -[_CATArbitratorResourceProxy dealloc]
  -[_CATArbitratorResourceProxy invalidate]
  -[_CATArbitratorResourceProxy forwardInvocation:]
  -[_CATArbitratorResourceProxy initWithResource:registration:exclusive:]


_CATArbitratorWaitToken : NSObject
  // instance methods
  -[_CATArbitratorWaitToken .cxx_destruct]
  -[_CATArbitratorWaitToken cancel]
  -[_CATArbitratorWaitToken resume]
  -[_CATArbitratorWaitToken initWithDelegateQueue:completionBlock:]
  -[_CATArbitratorWaitToken waitForRegistrationEntry:forKey:exclusive:]
  -[_CATArbitratorWaitToken performCompletionBlock]
  -[_CATArbitratorWaitToken whenStateIs:atomicallySwapWith:]


_CATProxyWaitToken : NSObject
 @property  BOOL isExclusive
 @property  id resourceProxy

  // instance methods
  -[_CATProxyWaitToken isExclusive]
  -[_CATProxyWaitToken .cxx_destruct]
  -[_CATProxyWaitToken cancel]
  -[_CATProxyWaitToken dealloc]
  -[_CATProxyWaitToken invalidate]
  -[_CATProxyWaitToken initWithExclusive:group:]
  -[_CATProxyWaitToken notifyWithResourceProxy:]
  -[_CATProxyWaitToken resourceProxy]


CATBatchRemoteTaskOperation : CATOperation
 @property  NSArray *remoteTaskOperations

  // instance methods
  -[CATBatchRemoteTaskOperation isAsynchronous]
  -[CATBatchRemoteTaskOperation main]
  -[CATBatchRemoteTaskOperation .cxx_destruct]
  -[CATBatchRemoteTaskOperation init]
  -[CATBatchRemoteTaskOperation cancel]
  -[CATBatchRemoteTaskOperation initWithRemoteTaskOperations:]
  -[CATBatchRemoteTaskOperation cancelSubOperations]
  -[CATBatchRemoteTaskOperation remoteTaskDidFinish:]
  -[CATBatchRemoteTaskOperation initWithTaskClient:requests:]
  -[CATBatchRemoteTaskOperation remoteTaskOperations]


CATBlockOperationObserver : NSObject <CATOperationObserver>
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  @? didStart
 @property  @? didProgress
 @property  @? didFinish
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATBlockOperationObserver operationDidFinish:]
  -[CATBlockOperationObserver delegateQueue]
  -[CATBlockOperationObserver setDelegateQueue:]
  -[CATBlockOperationObserver .cxx_destruct]
  -[CATBlockOperationObserver operationDidProgress:]
  -[CATBlockOperationObserver operationDidStart:]
  -[CATBlockOperationObserver init]
  -[CATBlockOperationObserver setDidFinish:]
  -[CATBlockOperationObserver didFinish]
  -[CATBlockOperationObserver didStart]
  -[CATBlockOperationObserver setDidStart:]
  -[CATBlockOperationObserver invokeBlock:operation:]
  -[CATBlockOperationObserver didProgress]
  -[CATBlockOperationObserver setDidProgress:]


CATCollectionController : NSObject
 @property  NSArray *arrangedObjects
 @property  <CATCollectionControllerDelegate> *delegate
 @property  NSArray *sortDescriptors
 @property  NSPredicate *filterPredicate
 @property  NSIndexSet *selectionIndexes
 @property  BOOL automaticallyRearrangesObjects
 @property  NSSet *content
 @property  NSArray *selectedObjects

  // instance methods
  -[CATCollectionController filterPredicate]
  -[CATCollectionController content]
  -[CATCollectionController removeObject:]
  -[CATCollectionController setFilterPredicate:]
  -[CATCollectionController addObject:]
  -[CATCollectionController .cxx_destruct]
  -[CATCollectionController setDelegate:]
  -[CATCollectionController setSortDescriptors:]
  -[CATCollectionController init]
  -[CATCollectionController initWithObjects:]
  -[CATCollectionController sortDescriptors]
  -[CATCollectionController delegate]
  -[CATCollectionController dealloc]
  -[CATCollectionController updateObject:]
  -[CATCollectionController observeValueForKeyPath:ofObject:change:context:]
  -[CATCollectionController arrangedObjects]
  -[CATCollectionController updateKeysAffectingArrangementForceUpdate:includeAllContent:]
  -[CATCollectionController selectionIndexes]
  -[CATCollectionController unbindContent]
  -[CATCollectionController bindContentToObject:withKeyPath:usingTransformer:]
  -[CATCollectionController removeObserversFromObject:forKeyPaths:]
  -[CATCollectionController setArrangedObjects:]
  -[CATCollectionController changeContent:]
  -[CATCollectionController scheduleRearrangeTimerIfNeed]
  -[CATCollectionController addObserversToObject:forKeyPaths:]
  -[CATCollectionController arrangeObject:]
  -[CATCollectionController changeObject:atIndex:forChangeType:newIndex:]
  -[CATCollectionController newIndexForObject:inArrangedObjects:]
  -[CATCollectionController rearrangeTimerDidFire:]
  -[CATCollectionController automaticallyRearrangesObjects]
  -[CATCollectionController notifyArrangedObjectsWillChange]
  -[CATCollectionController notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:]
  -[CATCollectionController setAutomaticallyRearrangesObjects:]
  -[CATCollectionController setSelectionIndexes:]
  -[CATCollectionController selectedObjects]
  -[CATCollectionController numberOfArrangedObjects]
  -[CATCollectionController arrangedObjectAtIndex:]
  -[CATCollectionController arrangedObjectsAtIndexes:]
  -[CATCollectionController resolveArrangedObjectsAtIndexes:reply:]
  -[CATCollectionController arrangedIndexOfObject:]
  -[CATCollectionController bindContentToObject:withKeyPath:]
  -[CATCollectionController rearrangeObjects]


CATIDSServiceConnectionInvitationInbox : NSObject
 @property  <CATIDSServiceConnectionInvitationInboxDelegate> *delegate

  // class methods
  +[CATIDSServiceConnectionInvitationInbox acknowledgeTimerIdentifier]

  // instance methods
  -[CATIDSServiceConnectionInvitationInbox .cxx_destruct]
  -[CATIDSServiceConnectionInvitationInbox setDelegate:]
  -[CATIDSServiceConnectionInvitationInbox delegate]
  -[CATIDSServiceConnectionInvitationInbox dealloc]
  -[CATIDSServiceConnectionInvitationInbox acknowledgeTimerFiredWithInvitationIdentifier:]
  -[CATIDSServiceConnectionInvitationInbox initWithTimerSource:networkPowerPrimitives:workQueue:acknowledgeTimeout:]
  -[CATIDSServiceConnectionInvitationInbox receiveInvitationWithIdentifier:senderAppleID:senderAddress:messagingVersion:userInfo:]
  -[CATIDSServiceConnectionInvitationInbox receiveAcknowledgeForInvitationIdentifier:connectionIdentifier:]


CATIDSMessageOptions : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL fireAndForget
 @property  NSNumber *deliveryTimeout

  // class methods
  +[CATIDSMessageOptions supportsSecureCoding]

  // instance methods
  -[CATIDSMessageOptions initWithCoder:]
  -[CATIDSMessageOptions setFireAndForget:]
  -[CATIDSMessageOptions .cxx_destruct]
  -[CATIDSMessageOptions copyWithZone:]
  -[CATIDSMessageOptions encodeWithCoder:]
  -[CATIDSMessageOptions shouldFireAndForget]
  -[CATIDSMessageOptions deliveryTimeout]
  -[CATIDSMessageOptions setDeliveryTimeout:]


CATIDSServiceConnectionDataAggregation : NSObject
 @property  unsigned long dataNumber
 @property  NSData *totalData
 @property  <CATIDSServiceConnectionDataAggregationDelegate> *delegate

  // instance methods
  -[CATIDSServiceConnectionDataAggregation .cxx_destruct]
  -[CATIDSServiceConnectionDataAggregation setDelegate:]
  -[CATIDSServiceConnectionDataAggregation delegate]
  -[CATIDSServiceConnectionDataAggregation initWithWorkQueue:]
  -[CATIDSServiceConnectionDataAggregation hydrateWithContentIfNeededWithContent:]
  -[CATIDSServiceConnectionDataAggregation dataNumber]
  -[CATIDSServiceConnectionDataAggregation setDataNumber:]
  -[CATIDSServiceConnectionDataAggregation finishAggregating]
  -[CATIDSServiceConnectionDataAggregation setTotalData:]
  -[CATIDSServiceConnectionDataAggregation hydratePendingNumbersWithContent:]
  -[CATIDSServiceConnectionDataAggregation hydrateStartingSequenceNumber:]
  -[CATIDSServiceConnectionDataAggregation pendingSequenceNumbersDescription]
  -[CATIDSServiceConnectionDataAggregation updateWithDataContent:]
  -[CATIDSServiceConnectionDataAggregation totalData]


CATEndPoint : NSObject
 @property  NSData *data
 @property  CATAddress *address
 @property  unsigned int port

  // instance methods
  -[CATEndPoint port]
  -[CATEndPoint .cxx_destruct]
  -[CATEndPoint address]
  -[CATEndPoint data]
  -[CATEndPoint init]
  -[CATEndPoint isEqual:]
  -[CATEndPoint initWithAddress:port:]
  -[CATEndPoint initWithData:]
  -[CATEndPoint isEqualToEndPoint:]


CATHTTPMessageParser : NSObject
 @property  <CATHTTPMessageParserDelegate> *delegate

  // class methods
  +[CATHTTPMessageParser encodeRequestData:]
  +[CATHTTPMessageParser responseHeaderForContentWithLength:]

  // instance methods
  -[CATHTTPMessageParser appendBytes:length:]
  -[CATHTTPMessageParser .cxx_destruct]
  -[CATHTTPMessageParser setDelegate:]
  -[CATHTTPMessageParser delegate]
  -[CATHTTPMessageParser dealloc]
  -[CATHTTPMessageParser delegateDidReceiveRequestWithURL:]
  -[CATHTTPMessageParser delegateDidReceiveRequestData:]
  -[CATHTTPMessageParser delegateDidReceiveResponseData:moreComing:]


CATConcreteIDSServiceConnectionDataAggregator : NSObject <CATIDSServiceConnectionDataAggregationDelegate, CATIDSServiceConnectionDataAggregator>
 @property  <CATIDSServiceConnectionDataAggregatorDelegate> *delegate
 @property  unsigned long receivedSequenceNumber

  // class methods
  +[CATConcreteIDSServiceConnectionDataAggregator missingContentTimerIdentifier]

  // instance methods
  -[CATConcreteIDSServiceConnectionDataAggregator .cxx_destruct]
  -[CATConcreteIDSServiceConnectionDataAggregator receivedSequenceNumber]
  -[CATConcreteIDSServiceConnectionDataAggregator setDelegate:]
  -[CATConcreteIDSServiceConnectionDataAggregator delegate]
  -[CATConcreteIDSServiceConnectionDataAggregator dataAggregationCompleted:]
  -[CATConcreteIDSServiceConnectionDataAggregator updateMissingContentTrackingForDataContent:]
  -[CATConcreteIDSServiceConnectionDataAggregator processNewDataWindowWithContent:]
  -[CATConcreteIDSServiceConnectionDataAggregator updateExistingDataWindowWithContent:]
  -[CATConcreteIDSServiceConnectionDataAggregator missingSequenceNumbers]
  -[CATConcreteIDSServiceConnectionDataAggregator missingContentTimerDidFire:fireCount:]
  -[CATConcreteIDSServiceConnectionDataAggregator receiveDataContent:]
  -[CATConcreteIDSServiceConnectionDataAggregator receiveExpectedSequenceNumber:]
  -[CATConcreteIDSServiceConnectionDataAggregator initWithWorkQueue:timerSource:missingItemInterval:supportsSequenceCorrection:]


CATSendDeviceSessionMessageOperation : CATOperation
  // instance methods
  -[CATSendDeviceSessionMessageOperation isAsynchronous]
  -[CATSendDeviceSessionMessageOperation main]
  -[CATSendDeviceSessionMessageOperation .cxx_destruct]
  -[CATSendDeviceSessionMessageOperation sendMessage]
  -[CATSendDeviceSessionMessageOperation initWithDeviceSession:message:]


CATLocalizationHelper : NSObject
 @property  NSBundle *bundle

  // class methods
  +[CATLocalizationHelper helperForBundle:]

  // instance methods
  -[CATLocalizationHelper bundle]
  -[CATLocalizationHelper .cxx_destruct]
  -[CATLocalizationHelper initWithBundle:]
  -[CATLocalizationHelper stringsForKey:value:table:]
  -[CATLocalizationHelper stringByKeyForTableName:]


CATIDSMessagePayload : NSObject <CATDictionaryCodable>
 @property  CATIDSMessageMetadata *metadata
 @property  <CATIDSMessage> *message
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATIDSMessagePayload instanceWithDictionary:]

  // instance methods
  -[CATIDSMessagePayload .cxx_destruct]
  -[CATIDSMessagePayload initWithMessage:]
  -[CATIDSMessagePayload dictionaryValue]
  -[CATIDSMessagePayload message]
  -[CATIDSMessagePayload metadata]
  -[CATIDSMessagePayload messageContent]
  -[CATIDSMessagePayload initWithMetadata:message:]


CATActiveIDSServiceConnectionContentSendData : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  NSNumber *sequenceNumber
 @property  unsigned long dataNumber
 @property  unsigned long segmentNumber
 @property  unsigned long totalSegments
 @property  NSData *dataSegment
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentSendData instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentSendData .cxx_destruct]
  -[CATActiveIDSServiceConnectionContentSendData dictionaryValue]
  -[CATActiveIDSServiceConnectionContentSendData contentType]
  -[CATActiveIDSServiceConnectionContentSendData sequenceNumber]
  -[CATActiveIDSServiceConnectionContentSendData segmentNumber]
  -[CATActiveIDSServiceConnectionContentSendData dataNumber]
  -[CATActiveIDSServiceConnectionContentSendData dataSegment]
  -[CATActiveIDSServiceConnectionContentSendData totalSegments]
  -[CATActiveIDSServiceConnectionContentSendData initWithSequenceNumber:dataNumber:dataSegment:segmentRange:segmentNumber:totalSegments:]


CATIDSServiceConnectionCapabilities : NSObject
 @property  BOOL supportsReliableDelivery

  // instance methods
  -[CATIDSServiceConnectionCapabilities init]
  -[CATIDSServiceConnectionCapabilities initWithMessagingVersion:]
  -[CATIDSServiceConnectionCapabilities supportsReliableDelivery]


CATActiveServiceConnectionIDSMessage : NSObject <CATIDSMessage>
 @property  NSUUID *connectionIdentifier
 @property  NSNumber *receivedSequenceNumber
 @property  <CATActiveIDSServiceConnectionMessageContent> *content
 @property  long long messageType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveServiceConnectionIDSMessage instanceWithDictionary:]

  // instance methods
  -[CATActiveServiceConnectionIDSMessage messageType]
  -[CATActiveServiceConnectionIDSMessage content]
  -[CATActiveServiceConnectionIDSMessage .cxx_destruct]
  -[CATActiveServiceConnectionIDSMessage receivedSequenceNumber]
  -[CATActiveServiceConnectionIDSMessage dictionaryValue]
  -[CATActiveServiceConnectionIDSMessage connectionIdentifier]
  -[CATActiveServiceConnectionIDSMessage initWithConnectionIdentifier:receivedSequenceNumber:content:]


CATMessage : NSObject <NSSecureCoding>
 @property  id cat_assertion
 @property  NSUUID *messageUUID

  // class methods
  +[CATMessage supportsSecureCoding]

  // instance methods
  -[CATMessage messageUUID]
  -[CATMessage initWithCoder:]
  -[CATMessage .cxx_destruct]
  -[CATMessage init]
  -[CATMessage setMessageUUID:]
  -[CATMessage encodeWithCoder:]
  -[CATMessage cat_assertion]
  -[CATMessage setCat_assertion:]


CATSharingBroadcastConnection : NSObject <CATSharingConnection>
 @property  BOOL closed
 @property  NSError *closedError
 @property  CATSharingDevice *remoteDevice
 @property  <CATSharingConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATSharingBroadcastConnection isClosed]
  -[CATSharingBroadcastConnection setClosed:]
  -[CATSharingBroadcastConnection _close]
  -[CATSharingBroadcastConnection .cxx_destruct]
  -[CATSharingBroadcastConnection remoteDevice]
  -[CATSharingBroadcastConnection messageReceived:]
  -[CATSharingBroadcastConnection setDelegate:]
  -[CATSharingBroadcastConnection sendMessage:completion:]
  -[CATSharingBroadcastConnection sendData:completion:]
  -[CATSharingBroadcastConnection delegate]
  -[CATSharingBroadcastConnection close]
  -[CATSharingBroadcastConnection addBroadcastPrimitiveHandlers]
  -[CATSharingBroadcastConnection _sendData:completion:]
  -[CATSharingBroadcastConnection closeWithError:reportToRemote:]
  -[CATSharingBroadcastConnection tombstoneWithError:]
  -[CATSharingBroadcastConnection sendTearDownMessageWithError:]
  -[CATSharingBroadcastConnection removeBroadcastPrimitiveHandlers]
  -[CATSharingBroadcastConnection setClosedError:]
  -[CATSharingBroadcastConnection handleUnparsableMessageDictionary:]
  -[CATSharingBroadcastConnection handleCloseMessage:]
  -[CATSharingBroadcastConnection handleSentMessage:]
  -[CATSharingBroadcastConnection closedError]
  -[CATSharingBroadcastConnection initWithBroadcastPrimitives:timerSource:]


CATSharingCloseMessage : NSObject <CATSharingContentMessage>
 @property  NSError *closeError
 @property  long long messageType
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CATSharingCloseMessage instanceWithDictionary:]

  // instance methods
  -[CATSharingCloseMessage messageType]
  -[CATSharingCloseMessage .cxx_destruct]
  -[CATSharingCloseMessage initWithError:]
  -[CATSharingCloseMessage dictionaryValue]
  -[CATSharingCloseMessage closeError]


CATNetworkReachability : NSObject
 @property  unsigned int flags
 @property  CATAddress *address
 @property  <CATNetworkReachabilityDelegate> *delegate
 @property  BOOL reachable

  // class methods
  +[CATNetworkReachability reachabilityForLocalWiFi]
  +[CATNetworkReachability reachabilityForInternetConnection]
  +[CATNetworkReachability reachabilityWithAddress:]
  +[CATNetworkReachability isReachableForLocalWiFiWithFlags:]
  +[CATNetworkReachability isReachableForNetworkWithFlags:]
  +[CATNetworkReachability keyPathsForValuesAffectingReachable]

  // instance methods
  -[CATNetworkReachability removeFromRunLoop:forMode:]
  -[CATNetworkReachability setFlags:]
  -[CATNetworkReachability .cxx_destruct]
  -[CATNetworkReachability address]
  -[CATNetworkReachability setDelegate:]
  -[CATNetworkReachability isReachable]
  -[CATNetworkReachability scheduleInRunLoop:forMode:]
  -[CATNetworkReachability flags]
  -[CATNetworkReachability initWithAddress:]
  -[CATNetworkReachability delegate]
  -[CATNetworkReachability dealloc]
  -[CATNetworkReachability delegateDidChange]
  -[CATNetworkReachability configureCallback]
  -[CATNetworkReachability reachabilityDidChangeWithFlags:]


CATSharingSentMessage : NSObject <CATSharingContentMessage>
 @property  NSData *content
 @property  long long messageType
 @property  NSDictionary *dictionaryValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CATSharingSentMessage instanceWithDictionary:]

  // instance methods
  -[CATSharingSentMessage messageType]
  -[CATSharingSentMessage content]
  -[CATSharingSentMessage .cxx_destruct]
  -[CATSharingSentMessage dictionaryValue]
  -[CATSharingSentMessage initWithContent:]


CATInitializingIDSServiceConnectionContentAccept : NSObject <CATInitializingIDSServiceConnectionMessageContent>
 @property  NSUUID *connectionIdentifier
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATInitializingIDSServiceConnectionContentAccept instanceWithDictionary:]

  // instance methods
  -[CATInitializingIDSServiceConnectionContentAccept .cxx_destruct]
  -[CATInitializingIDSServiceConnectionContentAccept dictionaryValue]
  -[CATInitializingIDSServiceConnectionContentAccept contentType]
  -[CATInitializingIDSServiceConnectionContentAccept connectionIdentifier]
  -[CATInitializingIDSServiceConnectionContentAccept initWithConnectionIdentifier:]


CATNotificationMessage : CATMessage
 @property  NSUUID *taskUUID
 @property  NSString *name
 @property  NSDictionary *userInfo

  // class methods
  +[CATNotificationMessage supportsSecureCoding]

  // instance methods
  -[CATNotificationMessage setUserInfo:]
  -[CATNotificationMessage name]
  -[CATNotificationMessage initWithCoder:]
  -[CATNotificationMessage setTaskUUID:]
  -[CATNotificationMessage .cxx_destruct]
  -[CATNotificationMessage setName:]
  -[CATNotificationMessage initWithName:userInfo:]
  -[CATNotificationMessage taskUUID]
  -[CATNotificationMessage userInfo]
  -[CATNotificationMessage encodeWithCoder:]
  -[CATNotificationMessage initWithTaskUUID:name:userInfo:]


CATOperation : NSOperation
 @property  NSUUID *UUID
 @property  unsigned long phase
 @property  NSDate *createdDate
 @property  NSDate *enqueuedDate
 @property  NSDate *startedDate
 @property  NSDate *finishedDate
 @property  NSError *error
 @property  NSDictionary *userInfo
 @property  id resultObject
 @property  long long completedUnitCount
 @property  long long totalUnitCount
 @property  BOOL isCanceled
 @property  BOOL canCancel

  // class methods
  +[CATOperation callStackSymbols]
  +[CATOperation isCancelable]
  +[CATOperation automaticallyNotifiesObserversOfUUID]
  +[CATOperation automaticallyNotifiesObserversOfCreatedDate]
  +[CATOperation automaticallyNotifiesObserversOfEnqueuedDate]
  +[CATOperation automaticallyNotifiesObserversOfStartedDate]
  +[CATOperation automaticallyNotifiesObserversOfFinishedDate]
  +[CATOperation keyPathsForValuesAffectingIsCanceled]

  // instance methods
  -[CATOperation isAsynchronous]
  -[CATOperation setUserInfo:]
  -[CATOperation UUID]
  -[CATOperation isCanceled]
  -[CATOperation isFinished]
  -[CATOperation phase]
  -[CATOperation totalUnitCount]
  -[CATOperation setPhase:]
  -[CATOperation .cxx_destruct]
  -[CATOperation setResultObject:]
  -[CATOperation stateDescription]
  -[CATOperation completedUnitCount]
  -[CATOperation isReady]
  -[CATOperation operationWillStart]
  -[CATOperation isExecuting]
  -[CATOperation init]
  -[CATOperation createdDate]
  -[CATOperation addObserver:]
  -[CATOperation setTotalUnitCount:]
  -[CATOperation operationWillFinish]
  -[CATOperation startedDate]
  -[CATOperation start]
  -[CATOperation setCreatedDate:]
  -[CATOperation userInfo]
  -[CATOperation finishedDate]
  -[CATOperation setStartedDate:]
  -[CATOperation setFinishedDate:]
  -[CATOperation resultObject]
  -[CATOperation setError:]
  -[CATOperation error]
  -[CATOperation setUUID:]
  -[CATOperation setCompletedUnitCount:]
  -[CATOperation endOperationWithResultObject:]
  -[CATOperation addTarget:selector:forOperationEvents:]
  -[CATOperation addTarget:selector:forOperationEvents:delegateQueue:]
  -[CATOperation addTarget:selector:forOperationEvents:userInfo:delegateQueue:]
  -[CATOperation operationDidFinish]
  -[CATOperation whenStateIs:atomicallySwapWith:]
  -[CATOperation endOperationWithError:]
  -[CATOperation setEnqueuedDate:]
  -[CATOperation endOperationSuccessfullyIfNeeded]
  -[CATOperation finalizeOperation]
  -[CATOperation operationWillEnqueueOntoOperationQueue:]
  -[CATOperation addTarget:selector:forOperationEvents:userInfo:]
  -[CATOperation enqueuedDate]
  -[CATOperation canCancel]


_CATObserverManager : NSObject <CATOperationObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CATObserverManager operationDidFinish:]
  -[_CATObserverManager .cxx_destruct]
  -[_CATObserverManager operationDidProgress:]
  -[_CATObserverManager operationDidStart:]
  -[_CATObserverManager notifyObserversOperationDidProgress:]
  -[_CATObserverManager initWithOperation:]
  -[_CATObserverManager addObserver:]
  -[_CATObserverManager removeObserver:]
  -[_CATObserverManager observeValueForKeyPath:ofObject:change:context:]


_CATOperationTargetSelectorObserver : NSObject <CATOperationObserver>
 @property  id target
 @property  SEL selector
 @property  unsigned long events
 @property  id userInfo
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CATOperationTargetSelectorObserver operationDidFinish:]
  -[_CATOperationTargetSelectorObserver selector]
  -[_CATOperationTargetSelectorObserver events]
  -[_CATOperationTargetSelectorObserver delegateQueue]
  -[_CATOperationTargetSelectorObserver .cxx_destruct]
  -[_CATOperationTargetSelectorObserver operationDidProgress:]
  -[_CATOperationTargetSelectorObserver invokeActionWithOperation:]
  -[_CATOperationTargetSelectorObserver operationDidStart:]
  -[_CATOperationTargetSelectorObserver init]
  -[_CATOperationTargetSelectorObserver initWithTarget:selector:events:userInfo:delegateQueue:]
  -[_CATOperationTargetSelectorObserver target]
  -[_CATOperationTargetSelectorObserver userInfo]


CATOperationQueue : NSOperationQueue
 @property  <CATOperationQueueDelegate> *delegate

  // class methods
  +[CATOperationQueue backgroundQueue]
  +[CATOperationQueue mainQueue]
  +[CATOperationQueue currentQueue]

  // instance methods
  -[CATOperationQueue stopObserving:]
  -[CATOperationQueue addOperations:waitUntilFinished:]
  -[CATOperationQueue setUnderlyingQueue:]
  -[CATOperationQueue startObserving:]
  -[CATOperationQueue .cxx_destruct]
  -[CATOperationQueue setDelegate:]
  -[CATOperationQueue addOperation:]
  -[CATOperationQueue delegate]
  -[CATOperationQueue delegateWillAddOperation:]
  -[CATOperationQueue delegateOperationDidFinish:]
  -[CATOperationQueue observeValueForKeyPath:ofObject:change:context:]


CATSharingDeviceSessionConnection : NSObject <CATSharingConnection>
 @property  BOOL closed
 @property  NSError *closedError
 @property  CATSharingDevice *remoteDevice
 @property  <CATSharingConnectionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATSharingDeviceSessionConnection isClosed]
  -[CATSharingDeviceSessionConnection setClosed:]
  -[CATSharingDeviceSessionConnection didReceiveMessage:]
  -[CATSharingDeviceSessionConnection _close]
  -[CATSharingDeviceSessionConnection .cxx_destruct]
  -[CATSharingDeviceSessionConnection remoteDevice]
  -[CATSharingDeviceSessionConnection setDelegate:]
  -[CATSharingDeviceSessionConnection sendMessage:completion:]
  -[CATSharingDeviceSessionConnection sendData:completion:]
  -[CATSharingDeviceSessionConnection delegate]
  -[CATSharingDeviceSessionConnection close]
  -[CATSharingDeviceSessionConnection _sendData:completion:]
  -[CATSharingDeviceSessionConnection closeWithError:reportToRemote:]
  -[CATSharingDeviceSessionConnection tombstoneWithError:]
  -[CATSharingDeviceSessionConnection sendTearDownMessageWithError:]
  -[CATSharingDeviceSessionConnection setClosedError:]
  -[CATSharingDeviceSessionConnection handleUnparsableMessageDictionary:]
  -[CATSharingDeviceSessionConnection handleCloseMessage:]
  -[CATSharingDeviceSessionConnection handleSentMessage:]
  -[CATSharingDeviceSessionConnection closedError]
  -[CATSharingDeviceSessionConnection addDeviceSessionHandlers]
  -[CATSharingDeviceSessionConnection removeDeviceSessionHandlers]
  -[CATSharingDeviceSessionConnection initWithDeviceSession:timerSource:]


CATIDSServiceTransport : CATTransport <CATIDSServiceConnectionDelegate>
  // instance methods
  -[CATIDSServiceTransport name]
  -[CATIDSServiceTransport suspendConnection]
  -[CATIDSServiceTransport resumeConnection]
  -[CATIDSServiceTransport serviceReceiveQueue]
  -[CATIDSServiceTransport invalidateConnection]
  -[CATIDSServiceTransport connectionClosed:]
  -[CATIDSServiceTransport .cxx_destruct]
  -[CATIDSServiceTransport initWithConnection:]
  -[CATIDSServiceTransport operationToSendMessage:]
  -[CATIDSServiceTransport tryReportingInvalidation]
  -[CATIDSServiceTransport connection:receivedData:]


_CATIDSServiceTransportSendMessageOperation : CATOperation
  // instance methods
  -[_CATIDSServiceTransportSendMessageOperation isAsynchronous]
  -[_CATIDSServiceTransportSendMessageOperation main]
  -[_CATIDSServiceTransportSendMessageOperation .cxx_destruct]
  -[_CATIDSServiceTransportSendMessageOperation cancel]
  -[_CATIDSServiceTransportSendMessageOperation initWithConnection:message:]
  -[_CATIDSServiceTransportSendMessageOperation sendData]
  -[_CATIDSServiceTransportSendMessageOperation didSendDataWithError:]


CATActiveIDSServiceConnectionContentRequestMissingData : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  unsigned long expectedSequenceNumber
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentRequestMissingData instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentRequestMissingData dictionaryValue]
  -[CATActiveIDSServiceConnectionContentRequestMissingData contentType]
  -[CATActiveIDSServiceConnectionContentRequestMissingData expectedSequenceNumber]
  -[CATActiveIDSServiceConnectionContentRequestMissingData initWithExpectedSequenceNumber:]


CATProperty : NSObject
 @property  NSString *name
 @property  NSString *instanceVariableName
 @property  long long type
 @property  Class objectClass
 @property  BOOL readOnly
 @property  BOOL nonAtomic
 @property  long long association
 @property  SEL customGetterSelector
 @property  SEL customSetterSelector
 @property  BOOL weakReference

  // class methods
  +[CATProperty initialize]
  +[CATProperty propertiesForClass:]
  +[CATProperty propertiesForProtocol:]

  // instance methods
  -[CATProperty objectClass]
  -[CATProperty name]
  -[CATProperty association]
  -[CATProperty .cxx_destruct]
  -[CATProperty init]
  -[CATProperty isReadOnly]
  -[CATProperty type]
  -[CATProperty isNonAtomic]
  -[CATProperty initWithName:attributes:]
  -[CATProperty instanceVariableName]
  -[CATProperty customGetterSelector]
  -[CATProperty customSetterSelector]
  -[CATProperty isWeakReference]


CATRemoteConnection : NSObject <CATHTTPMessageParserDelegate, NSStreamDelegate>
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  BOOL usesSSL
 @property  unsigned long bufferSize
 @property  <CATRemoteConnectionDelegate> *delegate
 @property  NSString *name
 @property  ^{__SecTrust=} peerTrust
 @property  double connectionTimeoutInterval
 @property  CATRemoteConnectionSocketOptions *socketOptions
 @property  NSArray *customTrustEvaluationPolicies
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CATRemoteConnection createConnectionPairWithConnection:andConnection:bufferSize:]
  +[CATRemoteConnection createConnectionPairWithConnection:andConnection:]

  // instance methods
  -[CATRemoteConnection name]
  -[CATRemoteConnection setBufferSize:]
  -[CATRemoteConnection setOutputStream:]
  -[CATRemoteConnection setInputStream:]
  -[CATRemoteConnection inputStream]
  -[CATRemoteConnection .cxx_destruct]
  -[CATRemoteConnection setName:]
  -[CATRemoteConnection setDelegate:]
  -[CATRemoteConnection _stream:handleEvent:]
  -[CATRemoteConnection initWithInputStream:outputStream:]
  -[CATRemoteConnection bufferSize]
  -[CATRemoteConnection delegateDidInterruptWithError:]
  -[CATRemoteConnection delegate]
  -[CATRemoteConnection usesSSL]
  -[CATRemoteConnection close]
  -[CATRemoteConnection dealloc]
  -[CATRemoteConnection outputStream]
  -[CATRemoteConnection peerTrust]
  -[CATRemoteConnection open]
  -[CATRemoteConnection stream:handleEvent:]
  -[CATRemoteConnection setUsesSSL:]
  -[CATRemoteConnection initWithNetService:]
  -[CATRemoteConnection socketOptions]
  -[CATRemoteConnection messageParser:didParseRequestData:]
  -[CATRemoteConnection messageParser:didParseResponseData:moreComing:]
  -[CATRemoteConnection messageParser:didParseRequestWithURL:]
  -[CATRemoteConnection initWithInputStream:outputStream:bufferSize:]
  -[CATRemoteConnection enqueueSendContext:]
  -[CATRemoteConnection secureUsingIdentity:trustedCertificates:isServer:]
  -[CATRemoteConnection connectionDidInterruptWithError:]
  -[CATRemoteConnection connectionTimeoutInterval]
  -[CATRemoteConnection connectionTimedOut]
  -[CATRemoteConnection unscheduleStreams]
  -[CATRemoteConnection sendDidFail:withError:]
  -[CATRemoteConnection delegateDidClose]
  -[CATRemoteConnection delegateWillSecure]
  -[CATRemoteConnection applyCustomEvaluationPoliciesToTrust:]
  -[CATRemoteConnection delegateDidSecure]
  -[CATRemoteConnection customTrustEvaluationPolicies]
  -[CATRemoteConnection connectionShouldSendData]
  -[CATRemoteConnection connectionDidReceiveData]
  -[CATRemoteConnection trySendingDataWithContext:error:]
  -[CATRemoteConnection sendDidSucceed:]
  -[CATRemoteConnection delegateDidWriteDataForContextIfNeeded:]
  -[CATRemoteConnection delegateDidSendData:userInfo:]
  -[CATRemoteConnection delegateDidSendDataWithStream:userInfo:]
  -[CATRemoteConnection delegateDidFailToSendData:userInfo:error:]
  -[CATRemoteConnection delegateDidFailToSendDataWithStream:userInfo:error:]
  -[CATRemoteConnection delegateDidWriteDataFromStream:totalBytesWritten:totalBytesExpectedToWrite:userInfo:]
  -[CATRemoteConnection delegateDidReceiveData:]
  -[CATRemoteConnection delegateDidReceiveStreamData:moreComing:]
  -[CATRemoteConnection delegateDidReceiveDataRequestWithURL:]
  -[CATRemoteConnection configureStreamSocketOptions]
  -[CATRemoteConnection delegateDidOpen]
  -[CATRemoteConnection tryEvaluatingPeerTrustWithStream:]
  -[CATRemoteConnection sendData:userInfo:]
  -[CATRemoteConnection sendDataWithStream:length:userInfo:]
  -[CATRemoteConnection secureUsingClientIdentity:trustedCertificates:]
  -[CATRemoteConnection secureUsingServerIdentity:trustedCertificates:]
  -[CATRemoteConnection scheduleStreams]
  -[CATRemoteConnection trustDecisionDidRespondWithDecisionToAllowUntrustedConnection:]
  -[CATRemoteConnection setConnectionTimeoutInterval:]
  -[CATRemoteConnection setSocketOptions:]
  -[CATRemoteConnection setCustomTrustEvaluationPolicies:]


_CATRemoteConnectionSendDataContext : NSObject <_CATRemoteConnectionSendContext>
 @property  NSData *data
 @property  id userInfo
 @property  BOOL hasBytesRemaining
 @property  unsigned long bytesWritten
 @property  unsigned long clientBytesWritten
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CATRemoteConnectionSendDataContext .cxx_destruct]
  -[_CATRemoteConnectionSendDataContext data]
  -[_CATRemoteConnectionSendDataContext setBytesWritten:]
  -[_CATRemoteConnectionSendDataContext userInfo]
  -[_CATRemoteConnectionSendDataContext bytesWritten]
  -[_CATRemoteConnectionSendDataContext initWithData:userInfo:]
  -[_CATRemoteConnectionSendDataContext hasBytesRemaining]
  -[_CATRemoteConnectionSendDataContext bufferedDataWithError:]
  -[_CATRemoteConnectionSendDataContext clientBytesWritten]
  -[_CATRemoteConnectionSendDataContext headerLength]


_CATRemoteConnectionSendDataWithStreamContext : NSObject <_CATRemoteConnectionSendContext>
 @property  NSInputStream *stream
 @property  unsigned long dataLength
 @property  unsigned long bufferSize
 @property  id userInfo
 @property  BOOL hasBytesRemaining
 @property  unsigned long bytesWritten
 @property  unsigned long clientBytesWritten
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_CATRemoteConnectionSendDataWithStreamContext stream]
  -[_CATRemoteConnectionSendDataWithStreamContext .cxx_destruct]
  -[_CATRemoteConnectionSendDataWithStreamContext dataLength]
  -[_CATRemoteConnectionSendDataWithStreamContext bufferSize]
  -[_CATRemoteConnectionSendDataWithStreamContext setBytesWritten:]
  -[_CATRemoteConnectionSendDataWithStreamContext userInfo]
  -[_CATRemoteConnectionSendDataWithStreamContext dealloc]
  -[_CATRemoteConnectionSendDataWithStreamContext bytesWritten]
  -[_CATRemoteConnectionSendDataWithStreamContext initWithStream:length:bufferSize:userInfo:]
  -[_CATRemoteConnectionSendDataWithStreamContext hasBytesRemaining]
  -[_CATRemoteConnectionSendDataWithStreamContext bufferedDataWithError:]
  -[_CATRemoteConnectionSendDataWithStreamContext clientBytesWritten]


CATRemoteConnectionSocketOptions : NSObject
 @property  NSNumber *adaptiveWriteTimeout
 @property  NSNumber *keepAliveEnabled
 @property  NSNumber *keepAliveDelay
 @property  NSNumber *keepAliveInterval
 @property  NSNumber *keepAliveCount
 @property  NSNumber *netServiceType

  // instance methods
  -[CATRemoteConnectionSocketOptions keepAliveInterval]
  -[CATRemoteConnectionSocketOptions .cxx_destruct]
  -[CATRemoteConnectionSocketOptions keepAliveCount]
  -[CATRemoteConnectionSocketOptions setKeepAliveInterval:]
  -[CATRemoteConnectionSocketOptions copyWithZone:]
  -[CATRemoteConnectionSocketOptions setKeepAliveCount:]
  -[CATRemoteConnectionSocketOptions adaptiveWriteTimeout]
  -[CATRemoteConnectionSocketOptions keepAliveEnabled]
  -[CATRemoteConnectionSocketOptions keepAliveDelay]
  -[CATRemoteConnectionSocketOptions netServiceType]
  -[CATRemoteConnectionSocketOptions setAdaptiveWriteTimeout:]
  -[CATRemoteConnectionSocketOptions setKeepAliveEnabled:]
  -[CATRemoteConnectionSocketOptions setKeepAliveDelay:]
  -[CATRemoteConnectionSocketOptions setNetServiceType:]


CATRemoteConnectionTrustDecision : NSObject
 @property  id trust

  // instance methods
  -[CATRemoteConnectionTrustDecision trust]
  -[CATRemoteConnectionTrustDecision .cxx_destruct]
  -[CATRemoteConnectionTrustDecision dealloc]
  -[CATRemoteConnectionTrustDecision initWithConnection:trust:]
  -[CATRemoteConnectionTrustDecision respondWithDecisionToAllowUntrustedConnection:]


CATRemoteTaskOperation : CATTaskOperation
 @property  NSNumber *remotePhase
 @property  CATTaskClient *client

  // class methods
  +[CATRemoteTaskOperation isCancelable]
  +[CATRemoteTaskOperation invalidRemoteTaskWithRequest:error:]

  // instance methods
  -[CATRemoteTaskOperation postNotificationWithName:userInfo:]
  -[CATRemoteTaskOperation isAsynchronous]
  -[CATRemoteTaskOperation main]
  -[CATRemoteTaskOperation .cxx_destruct]
  -[CATRemoteTaskOperation remotePhase]
  -[CATRemoteTaskOperation processNotificationWithName:userInfo:]
  -[CATRemoteTaskOperation cancelOperationIfNeeded]
  -[CATRemoteTaskOperation clientFailedWithError:]
  -[CATRemoteTaskOperation processMessage:]
  -[CATRemoteTaskOperation updateCompletedUnitCount:andTotalUnitCount:]
  -[CATRemoteTaskOperation initWithRequest:clientError:]
  -[CATRemoteTaskOperation fetchProgress]
  -[CATRemoteTaskOperation cancel]
  -[CATRemoteTaskOperation initWithRequest:client:]
  -[CATRemoteTaskOperation client]
  -[CATRemoteTaskOperation operationWillFinish]
  -[CATRemoteTaskOperation updateProgressWithRemoteProgress:]
  -[CATRemoteTaskOperation setRemotePhase:]


CATRemoteTransport : CATTransport <CATRemoteConnectionDelegate>
 @property  <CATRemoteTransportDelegate> *remoteTransportDelegate
 @property  ^{__SecTrust=} peerTrust
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CATRemoteTransport new]
  +[CATRemoteTransport createRemoteTransportPairWithTransport:andTransport:]

  // instance methods
  -[CATRemoteTransport setRemoteTransportDelegate:]
  -[CATRemoteTransport name]
  -[CATRemoteTransport connection:didInterruptWithError:]
  -[CATRemoteTransport suspendConnection]
  -[CATRemoteTransport resumeConnection]
  -[CATRemoteTransport initWithRemoteConnection:]
  -[CATRemoteTransport invalidateConnection]
  -[CATRemoteTransport connectionDidSecure:]
  -[CATRemoteTransport .cxx_destruct]
  -[CATRemoteTransport setName:]
  -[CATRemoteTransport connection:didSendData:userInfo:]
  -[CATRemoteTransport connection:didFailToSendData:userInfo:error:]
  -[CATRemoteTransport init]
  -[CATRemoteTransport connectionDidClose:]
  -[CATRemoteTransport remoteTransportDelegate]
  -[CATRemoteTransport remoteTransportSendMessageOperation:sendData:]
  -[CATRemoteTransport operationToSendMessage:]
  -[CATRemoteTransport connection:encounteredTrustDecisionWhileTryingToSecure:]
  -[CATRemoteTransport connection:didReceiveData:]
  -[CATRemoteTransport connectionWillSecure:]
  -[CATRemoteTransport peerTrust]


_CATRemoteTransportSendMessageOperation : CATOperation
 @property  CATRemoteTransport *transport
 @property  CATMessage *message

  // instance methods
  -[_CATRemoteTransportSendMessageOperation isAsynchronous]
  -[_CATRemoteTransportSendMessageOperation setTransport:]
  -[_CATRemoteTransportSendMessageOperation transport]
  -[_CATRemoteTransportSendMessageOperation main]
  -[_CATRemoteTransportSendMessageOperation .cxx_destruct]
  -[_CATRemoteTransportSendMessageOperation setMessage:]
  -[_CATRemoteTransportSendMessageOperation didFailWithError:]
  -[_CATRemoteTransportSendMessageOperation message]
  -[_CATRemoteTransportSendMessageOperation didSendData]
  -[_CATRemoteTransportSendMessageOperation didEncodeData:]


CATSerialOperationQueue : CATOperationQueue
  // instance methods
  -[CATSerialOperationQueue .cxx_destruct]
  -[CATSerialOperationQueue init]
  -[CATSerialOperationQueue addOperation:]


CATIDSServiceConnection : NSObject <CATIDSServiceConnectionDataAggregatorDelegate, CATIDSServiceConnectionMessageProcessorDelegate, CATIDSMessageBroadcastHandler, CATIDSServiceConnectionDataMessageQueueDelegate>
 @property  BOOL closed
 @property  NSError *closedError
 @property  <CATIDSServiceConnectionDelegate> *delegate
 @property  CATIDSServiceConnectionMetadata *metadata

  // class methods
  +[CATIDSServiceConnection keepAliveTimerIdentifier]
  +[CATIDSServiceConnection connectionWithMetadata:configuration:IDSPrimitives:messageBroadcaster:timerSource:dataMessageQueue:dataAggregator:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:]
  +[CATIDSServiceConnection acknowledgeContent]
  +[CATIDSServiceConnection keepAliveContent]
  +[CATIDSServiceConnection closeContentWithError:]
  +[CATIDSServiceConnection connectionWithMetadata:configuration:capabilities:IDSPrimitives:messageBroadcaster:timerSource:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:]

  // instance methods
  -[CATIDSServiceConnection isClosed]
  -[CATIDSServiceConnection setClosed:]
  -[CATIDSServiceConnection _close]
  -[CATIDSServiceConnection .cxx_destruct]
  -[CATIDSServiceConnection setDelegate:]
  -[CATIDSServiceConnection sendData:completion:]
  -[CATIDSServiceConnection metadata]
  -[CATIDSServiceConnection delegate]
  -[CATIDSServiceConnection close]
  -[CATIDSServiceConnection connectionDataAggregatorWantsToReportSequenceNumber:]
  -[CATIDSServiceConnection connectionDataAggregator:isMissingSequenceNumbers:]
  -[CATIDSServiceConnection connectionDataAggregator:aggregatedData:withNumber:]
  -[CATIDSServiceConnection _sendData:completion:]
  -[CATIDSServiceConnection setClosedError:]
  -[CATIDSServiceConnection closedError]
  -[CATIDSServiceConnection keepAliveTimerDidFire:fireCount:isFinalFire:]
  -[CATIDSServiceConnection initWithMetadata:configuration:IDSPrimitives:messageBroadcaster:timerSource:dataMessageQueue:dataAggregator:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:]
  -[CATIDSServiceConnection tearDownWithError:shouldReportToRemote:]
  -[CATIDSServiceConnection retransmitContentForSequenceNumbers:]
  -[CATIDSServiceConnection sendContent:]
  -[CATIDSServiceConnection requestMissingDataContentWithExpectedSequenceNumber:]
  -[CATIDSServiceConnection messageProcessorWantsToAcknowledgeRemote:]
  -[CATIDSServiceConnection messageProcessorWantsToExtendKeepAlive:]
  -[CATIDSServiceConnection messageProcessor:wantsToCloseWithError:]
  -[CATIDSServiceConnection messageProcessor:wantsAggregation:]
  -[CATIDSServiceConnection messageProcessor:wantsRetransmission:]
  -[CATIDSServiceConnection messageProcessor:receivedExpectedSequence:]
  -[CATIDSServiceConnection messageProcessor:wantsToAckUpTo:]
  -[CATIDSServiceConnection processMessage:senderAppleID:senderAddress:]
  -[CATIDSServiceConnection dataMessageQueue:wantsToCheckRemote:]
  -[CATIDSServiceConnection dataMessageQueue:needsToSendContents:shouldSkipTheLine:completion:]


CATSessionMessage : CATMessage
  // class methods
  +[CATSessionMessage supportsSecureCoding]


CATSessionMessageDidInvalidate : CATSessionMessage
 @property  NSError *error

  // class methods
  +[CATSessionMessageDidInvalidate supportsSecureCoding]

  // instance methods
  -[CATSessionMessageDidInvalidate initWithCoder:]
  -[CATSessionMessageDidInvalidate .cxx_destruct]
  -[CATSessionMessageDidInvalidate initWithError:]
  -[CATSessionMessageDidInvalidate setError:]
  -[CATSessionMessageDidInvalidate encodeWithCoder:]
  -[CATSessionMessageDidInvalidate error]


CATIDSServiceConnectionInvitationRequest : NSObject
 @property  NSUUID *invitationIdentifier
 @property  NSString *appleID
 @property  <CATCancelable> *networkPowerAssertion
 @property  NSDictionary *userInfo

  // instance methods
  -[CATIDSServiceConnectionInvitationRequest appleID]
  -[CATIDSServiceConnectionInvitationRequest .cxx_destruct]
  -[CATIDSServiceConnectionInvitationRequest invitationIdentifier]
  -[CATIDSServiceConnectionInvitationRequest userInfo]
  -[CATIDSServiceConnectionInvitationRequest networkPowerAssertion]
  -[CATIDSServiceConnectionInvitationRequest initWithInvitationIdentifier:appleID:networkPowerAssertion:userInfo:]


CATSendSerialIDSMessagesOperation : CATOperation
  // instance methods
  -[CATSendSerialIDSMessagesOperation isAsynchronous]
  -[CATSendSerialIDSMessagesOperation main]
  -[CATSendSerialIDSMessagesOperation .cxx_destruct]
  -[CATSendSerialIDSMessagesOperation initWithIDSPrimitives:workQueue:messages:destinationAddress:sourceAppleID:options:]
  -[CATSendSerialIDSMessagesOperation sendMessages]
  -[CATSendSerialIDSMessagesOperation didSendMessagesWithError:]


CATSessionMessageInvalidate : CATSessionMessage
 @property  NSError *error

  // class methods
  +[CATSessionMessageInvalidate supportsSecureCoding]

  // instance methods
  -[CATSessionMessageInvalidate initWithCoder:]
  -[CATSessionMessageInvalidate .cxx_destruct]
  -[CATSessionMessageInvalidate initWithError:]
  -[CATSessionMessageInvalidate setError:]
  -[CATSessionMessageInvalidate encodeWithCoder:]
  -[CATSessionMessageInvalidate error]


CATIDSServiceConnectionMessageProcessor : NSObject
 @property  <CATIDSServiceConnectionMessageProcessorDelegate> *delegate

  // instance methods
  -[CATIDSServiceConnectionMessageProcessor .cxx_destruct]
  -[CATIDSServiceConnectionMessageProcessor setDelegate:]
  -[CATIDSServiceConnectionMessageProcessor delegate]
  -[CATIDSServiceConnectionMessageProcessor initWithWorkQueue:connectionIdentifier:]
  -[CATIDSServiceConnectionMessageProcessor receiveMessage:]


CATSessionMessageResume : CATSessionMessage
 @property  NSUUID *sessionUUID
 @property  NSDictionary *clientUserInfo

  // class methods
  +[CATSessionMessageResume supportsSecureCoding]

  // instance methods
  -[CATSessionMessageResume setSessionUUID:]
  -[CATSessionMessageResume initWithCoder:]
  -[CATSessionMessageResume initWithSessionUUID:]
  -[CATSessionMessageResume .cxx_destruct]
  -[CATSessionMessageResume setClientUserInfo:]
  -[CATSessionMessageResume clientUserInfo]
  -[CATSessionMessageResume sessionUUID]
  -[CATSessionMessageResume encodeWithCoder:]


CATSessionMessageResumed : CATSessionMessage
 @property  NSUUID *sessionUUID
 @property  NSDictionary *serverUserInfo
 @property  NSArray *pendingRemoteTaskUUIDs

  // class methods
  +[CATSessionMessageResumed supportsSecureCoding]

  // instance methods
  -[CATSessionMessageResumed setSessionUUID:]
  -[CATSessionMessageResumed initWithCoder:]
  -[CATSessionMessageResumed initWithSessionUUID:]
  -[CATSessionMessageResumed pendingRemoteTaskUUIDs]
  -[CATSessionMessageResumed .cxx_destruct]
  -[CATSessionMessageResumed serverUserInfo]
  -[CATSessionMessageResumed setServerUserInfo:]
  -[CATSessionMessageResumed sessionUUID]
  -[CATSessionMessageResumed setPendingRemoteTaskUUIDs:]
  -[CATSessionMessageResumed encodeWithCoder:]


CATDeviceSessionBackedDevicePairingTerminal : NSObject <CATSharingDevicePairingTerminal>
 @property  BOOL invalidated
 @property  CATSharingDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATDeviceSessionBackedDevicePairingTerminal isInvalidated]
  -[CATDeviceSessionBackedDevicePairingTerminal .cxx_destruct]
  -[CATDeviceSessionBackedDevicePairingTerminal invalidateWithError:]
  -[CATDeviceSessionBackedDevicePairingTerminal tryPIN:]
  -[CATDeviceSessionBackedDevicePairingTerminal setInvalidated:]
  -[CATDeviceSessionBackedDevicePairingTerminal _tryPIN:]
  -[CATDeviceSessionBackedDevicePairingTerminal _invalidate]
  -[CATDeviceSessionBackedDevicePairingTerminal invalidate]
  -[CATDeviceSessionBackedDevicePairingTerminal device]
  -[CATDeviceSessionBackedDevicePairingTerminal _verifyPairingAndFetchStableIdentifierWithCompletion:]
  -[CATDeviceSessionBackedDevicePairingTerminal _beginPairing:withCompletion:]
  -[CATDeviceSessionBackedDevicePairingTerminal addSessionHandlers]
  -[CATDeviceSessionBackedDevicePairingTerminal pairingCompleteWithError:]
  -[CATDeviceSessionBackedDevicePairingTerminal removeSessionHandlers]
  -[CATDeviceSessionBackedDevicePairingTerminal deviceSessionInvalidated:]
  -[CATDeviceSessionBackedDevicePairingTerminal deviceSessionEncounteredError:]
  -[CATDeviceSessionBackedDevicePairingTerminal deviceSessionReady]
  -[CATDeviceSessionBackedDevicePairingTerminal sessionHasPromptedForPINWithWaitTime:]
  -[CATDeviceSessionBackedDevicePairingTerminal verifyPairing]
  -[CATDeviceSessionBackedDevicePairingTerminal verifyPairingFinished:]
  -[CATDeviceSessionBackedDevicePairingTerminal fetchStableIdentifier]
  -[CATDeviceSessionBackedDevicePairingTerminal fetchStableIdentifierFinished:]
  -[CATDeviceSessionBackedDevicePairingTerminal vendConnectionForCompletion:]
  -[CATDeviceSessionBackedDevicePairingTerminal verifyPairingAndFetchStableIdentifierWithCompletion:]
  -[CATDeviceSessionBackedDevicePairingTerminal beginPairing:withCompletion:]
  -[CATDeviceSessionBackedDevicePairingTerminal initWithDeviceSession:]


CATSharingSemaphoreOperation : CATOperation
  // instance methods
  -[CATSharingSemaphoreOperation isAsynchronous]
  -[CATSharingSemaphoreOperation signal]
  -[CATSharingSemaphoreOperation cancel]


CATSocket : NSObject
 @property  int nativeSocket
 @property  NSObject<OS_dispatch_source> *socketSource
 @property  NSObject<OS_dispatch_queue> *socketQueue
 @property  NSObject<OS_dispatch_queue> *userQueue
 @property  <CATSocketDelegate> *delegate
 @property  CATEndPoint *localEndPoint
 @property  CATEndPoint *remoteEndPoint

  // instance methods
  -[CATSocket userQueue]
  -[CATSocket suspend]
  -[CATSocket .cxx_destruct]
  -[CATSocket setDelegate:]
  -[CATSocket init]
  -[CATSocket delegateDidConnect]
  -[CATSocket delegate]
  -[CATSocket resume]
  -[CATSocket dealloc]
  -[CATSocket invalidate]
  -[CATSocket socketSource]
  -[CATSocket delegateDidClose]
  -[CATSocket delegateDidReceiveData:]
  -[CATSocket nativeSocket]
  -[CATSocket socketDidCancel]
  -[CATSocket socketDidReceiveEvent]
  -[CATSocket populateLocalEndPoint]
  -[CATSocket populateRemoteEndPoint]
  -[CATSocket setNativeSocket:]
  -[CATSocket socketQueue]
  -[CATSocket socketDidConnect]
  -[CATSocket socketDidFailWithError:]
  -[CATSocket socketDidReceiveListeningEvent]
  -[CATSocket socketDidReceiveData]
  -[CATSocket acceptPendingConnection]
  -[CATSocket initWithNativeSocket:]
  -[CATSocket delegateShouldAcceptNewSocket:]
  -[CATSocket delegateDidFailWithError:]
  -[CATSocket listenWithEndPoint:error:]
  -[CATSocket connectToEndPoint:error:]
  -[CATSocket localEndPoint]
  -[CATSocket remoteEndPoint]


CATSharingDeviceDiscovery : NSObject
 @property  BOOL invalidated
 @property  NSArray *nearbyDevices

  // instance methods
  -[CATSharingDeviceDiscovery _activate]
  -[CATSharingDeviceDiscovery .cxx_destruct]
  -[CATSharingDeviceDiscovery deviceLost:]
  -[CATSharingDeviceDiscovery deviceFound:]
  -[CATSharingDeviceDiscovery setInvalidated:]
  -[CATSharingDeviceDiscovery _invalidateWithError:]
  -[CATSharingDeviceDiscovery setNearbyDevices:]
  -[CATSharingDeviceDiscovery activate]
  -[CATSharingDeviceDiscovery invalidate]
  -[CATSharingDeviceDiscovery invalidated]
  -[CATSharingDeviceDiscovery nearbyDevices]
  -[CATSharingDeviceDiscovery addPrimitiveHandlers]
  -[CATSharingDeviceDiscovery removePrimitiveHandlers]
  -[CATSharingDeviceDiscovery initWithDiscoveryPrimitives:delegate:delegateOperationQueue:]
  -[CATSharingDeviceDiscovery pairingTerminalForDevice:]


CATState : NSObject
 @property  NSString *name
 @property  SEL enterAction
 @property  SEL exitAction

  // class methods
  +[CATState new]

  // instance methods
  -[CATState setExitAction:]
  -[CATState name]
  -[CATState transitionWithTriggeringEvent:]
  -[CATState exitAction]
  -[CATState .cxx_destruct]
  -[CATState setEnterAction:]
  -[CATState addTransitionToState:triggeringEvent:action:]
  -[CATState initWithName:]
  -[CATState init]
  -[CATState enterAction]
  -[CATState addTransitionToState:triggeringEvent:]


CATStateMachine : NSObject
 @property  CATState *currentState
 @property  NSString *name
 @property  CATState *initialState
 @property  id target
 @property  unsigned long logLevel

  // class methods
  +[CATStateMachine new]

  // instance methods
  -[CATStateMachine initialState]
  -[CATStateMachine setInitialState:]
  -[CATStateMachine name]
  -[CATStateMachine transitionWithTriggeringEvent:]
  -[CATStateMachine initWithTarget:]
  -[CATStateMachine logLevel]
  -[CATStateMachine .cxx_destruct]
  -[CATStateMachine addState:]
  -[CATStateMachine delegateWillExitState:event:]
  -[CATStateMachine canTransitionWithTriggeringEvent:]
  -[CATStateMachine init]
  -[CATStateMachine stateWithName:]
  -[CATStateMachine currentState]
  -[CATStateMachine target]
  -[CATStateMachine setLogLevel:]
  -[CATStateMachine start]
  -[CATStateMachine invokeAction:event:]
  -[CATStateMachine dealloc]
  -[CATStateMachine delegateDidEnterState:event:]
  -[CATStateMachine eventForTriggeringEvent:]
  -[CATStateMachine setCurrentState:]
  -[CATStateMachine addStateWithName:]


CATStateMachineEvent : NSObject
 @property  id trigger
 @property  id context

  // class methods
  +[CATStateMachineEvent eventWithTrigger:context:]

  // instance methods
  -[CATStateMachineEvent .cxx_destruct]
  -[CATStateMachineEvent initWithEventTrigger:context:]
  -[CATStateMachineEvent trigger]
  -[CATStateMachineEvent context]


CATConcreteIDSServiceConnectionDataChunker : NSObject <CATIDSServiceConnectionDataChunker>
  // instance methods
  -[CATConcreteIDSServiceConnectionDataChunker .cxx_destruct]
  -[CATConcreteIDSServiceConnectionDataChunker initWithWorkQueue:maxDataLength:]
  -[CATConcreteIDSServiceConnectionDataChunker chunkDataIntoMessageContent:]


CATTaskBlockServer : NSObject <CATTaskServerDelegate>
 @property  NSArray *clientSessions
 @property  @? sessionDidConnect
 @property  @? sessionDidReceiveNotification
 @property  @? sessionDidInterruptWithError
 @property  @? sessionDidDisconnect
 @property  @? sessionDidInvalidate
 @property  @? didInvalidate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATTaskBlockServer postNotificationWithName:userInfo:]
  -[CATTaskBlockServer didInvalidate]
  -[CATTaskBlockServer clientSessions]
  -[CATTaskBlockServer sessionDidInvalidate]
  -[CATTaskBlockServer .cxx_destruct]
  -[CATTaskBlockServer sessionDidConnect]
  -[CATTaskBlockServer setSessionDidConnect:]
  -[CATTaskBlockServer init]
  -[CATTaskBlockServer dealloc]
  -[CATTaskBlockServer invalidate]
  -[CATTaskBlockServer setDidInvalidate:]
  -[CATTaskBlockServer disconnectAllClientSessions]
  -[CATTaskBlockServer serverDidInvalidate:]
  -[CATTaskBlockServer sessionDidInterruptWithError]
  -[CATTaskBlockServer sessionDidReceiveNotification]
  -[CATTaskBlockServer sessionDidDisconnect]
  -[CATTaskBlockServer server:clientSession:operationForRequest:error:]
  -[CATTaskBlockServer server:clientSession:didInterruptWithError:]
  -[CATTaskBlockServer server:clientSession:didReceiveNotificationWithName:userInfo:]
  -[CATTaskBlockServer server:clientSessionDidConnect:]
  -[CATTaskBlockServer server:clientSessionDidDisconnect:]
  -[CATTaskBlockServer server:clientSessionDidInvalidate:]
  -[CATTaskBlockServer createClientTransport]
  -[CATTaskBlockServer registerBlock:forRequestClass:]
  -[CATTaskBlockServer registerLongRunningOperationForRequestClass:]
  -[CATTaskBlockServer cancelLongRunningOperationsForRequestClass:]
  -[CATTaskBlockServer setSessionDidReceiveNotification:]
  -[CATTaskBlockServer setSessionDidInterruptWithError:]
  -[CATTaskBlockServer setSessionDidDisconnect:]
  -[CATTaskBlockServer setSessionDidInvalidate:]


_CATBlockTaskOperation : CATTaskOperation
  // instance methods
  -[_CATBlockTaskOperation main]
  -[_CATBlockTaskOperation .cxx_destruct]
  -[_CATBlockTaskOperation initWithBlock:request:]


_CATLongRunningTaskOperation : CATTaskOperation
  // instance methods
  -[_CATLongRunningTaskOperation isAsynchronous]
  -[_CATLongRunningTaskOperation main]
  -[_CATLongRunningTaskOperation cancel]


CATActiveIDSServiceConnectionContentAcknowledge : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentAcknowledge instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentAcknowledge dictionaryValue]
  -[CATActiveIDSServiceConnectionContentAcknowledge contentType]


CATTaskClient : NSObject <CATTransportDelegate>
 @property  NSUUID *sessionUUID
 @property  NSDictionary *serverUserInfo
 @property  CATTransport *transport
 @property  <CATTaskClientDelegate> *delegate
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATTaskClient setSessionUUID:]
  -[CATTaskClient postNotificationWithName:userInfo:]
  -[CATTaskClient transport]
  -[CATTaskClient disconnect]
  -[CATTaskClient delegateDidInvalidate]
  -[CATTaskClient prepareTaskOperationForRequest:]
  -[CATTaskClient setUserInfo:]
  -[CATTaskClient transport:didInterruptWithError:]
  -[CATTaskClient transport:didSendMessage:]
  -[CATTaskClient sessionDidInvalidate]
  -[CATTaskClient .cxx_destruct]
  -[CATTaskClient abandonTransport]
  -[CATTaskClient transportDidInvalidate:]
  -[CATTaskClient sendMessage:]
  -[CATTaskClient delegateWillInvalidate]
  -[CATTaskClient resumeTransport:]
  -[CATTaskClient serverUserInfo]
  -[CATTaskClient processSessionMessage:]
  -[CATTaskClient invalidateWithError:]
  -[CATTaskClient setDelegate:]
  -[CATTaskClient resumeCapturedTransportFromTaskClient:]
  -[CATTaskClient remoteTaskOperation:preparedMessage:]
  -[CATTaskClient setServerUserInfo:]
  -[CATTaskClient transportDidResume:]
  -[CATTaskClient init]
  -[CATTaskClient sessionUUID]
  -[CATTaskClient didPrepareTaskOperation:]
  -[CATTaskClient delegateDidConnect]
  -[CATTaskClient transport:didReceiveMessage:]
  -[CATTaskClient captureTransport]
  -[CATTaskClient delegateDidInterruptWithError:]
  -[CATTaskClient delegatedidReceiveNotificationWithName:userInfo:]
  -[CATTaskClient transport:didFailToSendMessage:error:]
  -[CATTaskClient abandonTransportClearQueuedMessagesAndCancelAllOperationsWithError:]
  -[CATTaskClient sendMessageThroughTransport:]
  -[CATTaskClient enqueueMessage:]
  -[CATTaskClient trackTaskOperation:]
  -[CATTaskClient delegateDidInvalidateAndFinalize]
  -[CATTaskClient connectWithTransportFromTaskClient:]
  -[CATTaskClient delegateDidDisconnect]
  -[CATTaskClient resumeWithTaskUUIDs:]
  -[CATTaskClient delegate]
  -[CATTaskClient enqueueTaskOperation:]
  -[CATTaskClient userInfo]
  -[CATTaskClient clearQueuedMessagesAndCancelAllOperationsWithError:]
  -[CATTaskClient resumeSession]
  -[CATTaskClient processTaskMessage:]
  -[CATTaskClient dealloc]
  -[CATTaskClient invalidate]
  -[CATTaskClient delegateWillInvalidateAndInvalidateSessionWithError:]
  -[CATTaskClient sessionResumedWithTaskUUIDs:]
  -[CATTaskClient taskOperationDidFailWithInvalidTaskClient:]
  -[CATTaskClient activeOperationDidFinish:]
  -[CATTaskClient processNotificationMessage:]
  -[CATTaskClient connectWithTransport:]


CATTaskMessage : CATMessage
 @property  NSUUID *taskUUID

  // class methods
  +[CATTaskMessage supportsSecureCoding]

  // instance methods
  -[CATTaskMessage initWithCoder:]
  -[CATTaskMessage setTaskUUID:]
  -[CATTaskMessage .cxx_destruct]
  -[CATTaskMessage taskUUID]
  -[CATTaskMessage initWithTaskUUID:]
  -[CATTaskMessage encodeWithCoder:]


CATSharingDevice : NSObject
 @property  NSUUID *identifier
 @property  NSString *modelIdentifier
 @property  long long RSSI
 @property  BOOL paired
 @property  unsigned long pairingState
 @property  NSDate *detectionTime

  // class methods
  +[CATSharingDevice unlocalizedDescriptivePairingStateForPairingState:]

  // instance methods
  -[CATSharingDevice modelIdentifier]
  -[CATSharingDevice isPaired]
  -[CATSharingDevice pairingState]
  -[CATSharingDevice RSSI]
  -[CATSharingDevice .cxx_destruct]
  -[CATSharingDevice isEqual:]
  -[CATSharingDevice isEqualToDevice:]
  -[CATSharingDevice identifier]
  -[CATSharingDevice detectionTime]
  -[CATSharingDevice initWithIdentifier:modelIdentifier:RSSI:paired:pairingState:detectionTime:]


CATTaskMessageCancel : CATTaskMessage
  // class methods
  +[CATTaskMessageCancel supportsSecureCoding]


CATIDSServiceConnectionTerminal : NSObject <CATIDSServiceConnectionInvitationInboxDelegate, CATIDSServiceConnectionInvitationOutboxDelegate, CATIDSMessageBroadcaster>
 @property  <CATIDSServiceConnectionTerminalDelegate> *delegate

  // instance methods
  -[CATIDSServiceConnectionTerminal suspend]
  -[CATIDSServiceConnectionTerminal .cxx_destruct]
  -[CATIDSServiceConnectionTerminal setDelegate:]
  -[CATIDSServiceConnectionTerminal delegate]
  -[CATIDSServiceConnectionTerminal resume]
  -[CATIDSServiceConnectionTerminal connectionInvitationInbox:rejectedInvitation:connectionIdentifier:appleID:address:error:]
  -[CATIDSServiceConnectionTerminal connectionInvitationInbox:wantsToAcceptInvitation:connectionIdentifier:destinationAddress:]
  -[CATIDSServiceConnectionTerminal connectionInvitationInbox:shouldConnectToAppleID:connectionIdentifier:userInfo:responseHandler:]
  -[CATIDSServiceConnectionTerminal connectionInvitationInbox:foundConection:senderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:]
  -[CATIDSServiceConnectionTerminal connectionInvitatioInbox:timeoutOutForInvitation:connectionIdentifier:senderAppleID:userInfo:]
  -[CATIDSServiceConnectionTerminal addBroadcastHandler:]
  -[CATIDSServiceConnectionTerminal processMessage:senderAppleID:senderAddress:]
  -[CATIDSServiceConnectionTerminal initWithIDSPrimitives:networkPowerPrimitives:sourceAppleID:connectionConfiguration:]
  -[CATIDSServiceConnectionTerminal initWithIDSPrimitives:networkPowerPrimitives:timerSource:workQueue:delegateQueue:sourceAppleID:connectionConfiguration:]
  -[CATIDSServiceConnectionTerminal cancelInvitationWithIdentifier:]
  -[CATIDSServiceConnectionTerminal cancelAllInvitations]
  -[CATIDSServiceConnectionTerminal sendContent:toAddress:forInvitation:]
  -[CATIDSServiceConnectionTerminal connectionInvitationOutbox:wantsToSendInvitation:destinationAppleID:userInfo:]
  -[CATIDSServiceConnectionTerminal connectionInvitationOutbox:wantsToAcknowledgeInvitation:connectionIdentifier:destinationAddress:]
  -[CATIDSServiceConnectionTerminal connectionInvitationOutbox:foundConnection:destinationAppleID:destinationAddress:networkPowerAssertion:messagingVersion:userInfo:]
  -[CATIDSServiceConnectionTerminal connectionInvitationOutbox:receivedARejectionFrom:connectionIdentifier:userInfo:error:]
  -[CATIDSServiceConnectionTerminal initWithIDSPrimitives:networkPowerPrimitives:sourceAppleID:]
  -[CATIDSServiceConnectionTerminal inviteAppleIDToConnect:userInfo:]


CATTaskMessageError : CATTaskMessage
 @property  NSError *taskError

  // class methods
  +[CATTaskMessageError supportsSecureCoding]

  // instance methods
  -[CATTaskMessageError initWithCoder:]
  -[CATTaskMessageError .cxx_destruct]
  -[CATTaskMessageError setTaskError:]
  -[CATTaskMessageError initWithTaskUUID:taskError:]
  -[CATTaskMessageError encodeWithCoder:]
  -[CATTaskMessageError taskError]


CATSendBroadcastMessageOperation : CATOperation
  // instance methods
  -[CATSendBroadcastMessageOperation isAsynchronous]
  -[CATSendBroadcastMessageOperation main]
  -[CATSendBroadcastMessageOperation .cxx_destruct]
  -[CATSendBroadcastMessageOperation sendMessage]
  -[CATSendBroadcastMessageOperation initWithBroadcastPrimitive:message:]


CATTaskMessageFetchProgress : CATTaskMessage
  // class methods
  +[CATTaskMessageFetchProgress supportsSecureCoding]


CATTaskMessageIncrementalProgress : CATTaskMessage
 @property  long long completedUnitCount
 @property  long long totalUnitCount

  // class methods
  +[CATTaskMessageIncrementalProgress supportsSecureCoding]

  // instance methods
  -[CATTaskMessageIncrementalProgress initWithTaskUUID:completedUnitCount:totalUnitCount:]
  -[CATTaskMessageIncrementalProgress initWithCoder:]
  -[CATTaskMessageIncrementalProgress totalUnitCount]
  -[CATTaskMessageIncrementalProgress completedUnitCount]
  -[CATTaskMessageIncrementalProgress setTotalUnitCount:]
  -[CATTaskMessageIncrementalProgress encodeWithCoder:]
  -[CATTaskMessageIncrementalProgress setCompletedUnitCount:]


CATTaskMessageProgressUpdate : CATTaskMessage
 @property  CATTaskProgress *progress

  // class methods
  +[CATTaskMessageProgressUpdate supportsSecureCoding]

  // instance methods
  -[CATTaskMessageProgressUpdate initWithCoder:]
  -[CATTaskMessageProgressUpdate .cxx_destruct]
  -[CATTaskMessageProgressUpdate progress]
  -[CATTaskMessageProgressUpdate initWithTaskUUID:progress:]
  -[CATTaskMessageProgressUpdate setProgress:]
  -[CATTaskMessageProgressUpdate encodeWithCoder:]


CATTaskMessageStart : CATTaskMessage
 @property  CATTaskRequest *request

  // class methods
  +[CATTaskMessageStart supportsSecureCoding]

  // instance methods
  -[CATTaskMessageStart setRequest:]
  -[CATTaskMessageStart initWithCoder:]
  -[CATTaskMessageStart .cxx_destruct]
  -[CATTaskMessageStart initWithTaskUUID:request:]
  -[CATTaskMessageStart request]
  -[CATTaskMessageStart encodeWithCoder:]


CATTaskOperation : CATOperation
 @property  NSUUID *remoteUUID
 @property  CATTaskRequest *request
 @property  <CATTaskOperationNotificationDelegate> *notificationDelegate

  // class methods
  +[CATTaskOperation new]
  +[CATTaskOperation isCancelable]
  +[CATTaskOperation validateRequest:error:]

  // instance methods
  -[CATTaskOperation postNotificationWithName:userInfo:]
  -[CATTaskOperation remoteUUID]
  -[CATTaskOperation setRemoteUUID:]
  -[CATTaskOperation main]
  -[CATTaskOperation initWithRequest:]
  -[CATTaskOperation cat_assertions]
  -[CATTaskOperation .cxx_destruct]
  -[CATTaskOperation notificationDelegate]
  -[CATTaskOperation canSendNotificationWithName:userInfo:]
  -[CATTaskOperation cat_addAssertion:]
  -[CATTaskOperation processNotificationWithName:userInfo:]
  -[CATTaskOperation init]
  -[CATTaskOperation setNotificationDelegate:]
  -[CATTaskOperation request]
  -[CATTaskOperation processMessage:]


CATSharingServiceTransport : CATTransport <CATSharingConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATSharingServiceTransport name]
  -[CATSharingServiceTransport suspendConnection]
  -[CATSharingServiceTransport resumeConnection]
  -[CATSharingServiceTransport invalidateConnection]
  -[CATSharingServiceTransport connectionClosed:]
  -[CATSharingServiceTransport .cxx_destruct]
  -[CATSharingServiceTransport invalidateIfNeeded]
  -[CATSharingServiceTransport initWithConnection:]
  -[CATSharingServiceTransport operationToSendMessage:]
  -[CATSharingServiceTransport processReceivedMessages]
  -[CATSharingServiceTransport connection:receivedData:]


CATTaskProgress : NSObject <NSSecureCoding, NSCopying, NSMutableCopying>
 @property  NSUUID *UUID
 @property  unsigned long phase
 @property  id resultObject
 @property  NSError *error
 @property  NSDictionary *userInfo
 @property  BOOL isCancelable
 @property  BOOL isCanceled
 @property  long long completedUnitCount
 @property  long long totalUnitCount
 @property  NSString *requestClassName
 @property  unsigned long state

  // class methods
  +[CATTaskProgress supportsSecureCoding]
  +[CATTaskProgress progressForOperation:]
  +[CATTaskProgress classForResultObjectWithRequestClassName:]
  +[CATTaskProgress assertResultObject:isValidForRequestClassName:]

  // instance methods
  -[CATTaskProgress setIsCanceled:]
  -[CATTaskProgress setUserInfo:]
  -[CATTaskProgress UUID]
  -[CATTaskProgress isCanceled]
  -[CATTaskProgress initWithCoder:]
  -[CATTaskProgress phase]
  -[CATTaskProgress totalUnitCount]
  -[CATTaskProgress setPhase:]
  -[CATTaskProgress .cxx_destruct]
  -[CATTaskProgress initWithOperationUUID:]
  -[CATTaskProgress setResultObject:]
  -[CATTaskProgress completedUnitCount]
  -[CATTaskProgress setRequestClassName:]
  -[CATTaskProgress init]
  -[CATTaskProgress setIsCancelable:]
  -[CATTaskProgress initWithOperation:]
  -[CATTaskProgress state]
  -[CATTaskProgress progressStateDescription]
  -[CATTaskProgress requestClassName]
  -[CATTaskProgress setTotalUnitCount:]
  -[CATTaskProgress mutableCopyWithZone:]
  -[CATTaskProgress userInfo]
  -[CATTaskProgress resultObject]
  -[CATTaskProgress isCancelable]
  -[CATTaskProgress setProgress:]
  -[CATTaskProgress copyWithZone:]
  -[CATTaskProgress setError:]
  -[CATTaskProgress encodeWithCoder:]
  -[CATTaskProgress error]
  -[CATTaskProgress setUUID:]
  -[CATTaskProgress setCompletedUnitCount:]


CATMutableTaskProgress : CATTaskProgress
 @property  unsigned long phase
 @property  id resultObject
 @property  NSError *error
 @property  NSDictionary *userInfo
 @property  BOOL isCancelable
 @property  BOOL isCanceled
 @property  long long completedUnitCount
 @property  long long totalUnitCount

  // instance methods
  -[CATMutableTaskProgress initWithCoder:]
  -[CATMutableTaskProgress initWithOperationUUID:]
  -[CATMutableTaskProgress setResultObject:]
  -[CATMutableTaskProgress initWithOperationUUID:requestClass:]
  -[CATMutableTaskProgress setProgress:]


CATTaskRequest : NSObject <NSSecureCoding>
 @property  BOOL handlesNotifications

  // class methods
  +[CATTaskRequest supportsSecureCoding]
  +[CATTaskRequest whitelistedClassForResultObject]
  +[CATTaskRequest allowlistedClassForResultObject]

  // instance methods
  -[CATTaskRequest initWithCoder:]
  -[CATTaskRequest init]
  -[CATTaskRequest encodeWithCoder:]
  -[CATTaskRequest handlesNotifications]
  -[CATTaskRequest setHandlesNotifications:]


CATDispatchTimer : NSObject <CATResettableTimer>
  // class methods
  +[CATDispatchTimer scheduledTimerWithIdentifier:workQueue:delegateQueue:timeInterval:totalFires:firesForever:fireHandler:]

  // instance methods
  -[CATDispatchTimer .cxx_destruct]
  -[CATDispatchTimer reset]
  -[CATDispatchTimer resume]
  -[CATDispatchTimer dealloc]
  -[CATDispatchTimer invalidate]
  -[CATDispatchTimer initWithIdentifier:workQueue:delegateQueue:timeInterval:totalFires:firesForever:fireHandler:]
  -[CATDispatchTimer timerDidFire]


CATActiveIDSServiceConnectionContentKeepAlive : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentKeepAlive instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentKeepAlive dictionaryValue]
  -[CATActiveIDSServiceConnectionContentKeepAlive contentType]


CATTaskResultObject : NSObject <NSSecureCoding>
  // class methods
  +[CATTaskResultObject supportsSecureCoding]

  // instance methods
  -[CATTaskResultObject initWithCoder:]
  -[CATTaskResultObject init]
  -[CATTaskResultObject encodeWithCoder:]


CATIDSServiceConnectionMetadata : NSObject
 @property  NSUUID *connectionIdentifier
 @property  NSString *destinationAppleID
 @property  NSDictionary *userInfo

  // instance methods
  -[CATIDSServiceConnectionMetadata .cxx_destruct]
  -[CATIDSServiceConnectionMetadata isEqual:]
  -[CATIDSServiceConnectionMetadata userInfo]
  -[CATIDSServiceConnectionMetadata connectionIdentifier]
  -[CATIDSServiceConnectionMetadata isEqualToMetadata:]
  -[CATIDSServiceConnectionMetadata destinationAppleID]
  -[CATIDSServiceConnectionMetadata initWithConnectionIdentifier:destinationAppleID:userInfo:]


CATActiveIDSServiceConnectionContentRetransmit : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  NSArray *sequenceNumbers
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentRetransmit instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentRetransmit .cxx_destruct]
  -[CATActiveIDSServiceConnectionContentRetransmit dictionaryValue]
  -[CATActiveIDSServiceConnectionContentRetransmit contentType]
  -[CATActiveIDSServiceConnectionContentRetransmit initWithSequenceNumbers:]
  -[CATActiveIDSServiceConnectionContentRetransmit sequenceNumbers]


CATIDSServiceConnectionInvitationOutbox : NSObject
 @property  <CATIDSServiceConnectionInvitationOutboxDelegate> *delegate

  // instance methods
  -[CATIDSServiceConnectionInvitationOutbox suspend]
  -[CATIDSServiceConnectionInvitationOutbox .cxx_destruct]
  -[CATIDSServiceConnectionInvitationOutbox setDelegate:]
  -[CATIDSServiceConnectionInvitationOutbox delegate]
  -[CATIDSServiceConnectionInvitationOutbox resume]
  -[CATIDSServiceConnectionInvitationOutbox dealloc]
  -[CATIDSServiceConnectionInvitationOutbox initWithNetworkPowerPrimitives:workQueue:]
  -[CATIDSServiceConnectionInvitationOutbox beginInvitationWithIdentifier:appleID:userInfo:]
  -[CATIDSServiceConnectionInvitationOutbox cancelInvitationWithIdentifier:]
  -[CATIDSServiceConnectionInvitationOutbox cancelAllInvitations]
  -[CATIDSServiceConnectionInvitationOutbox receiveAcceptForInvitation:connectionIdentifier:senderAddress:messagingVersion:]
  -[CATIDSServiceConnectionInvitationOutbox receiveRejectForInvitation:connectionIdentifier:senderAddress:error:]
  -[CATIDSServiceConnectionInvitationOutbox cancelAllPowerAssertions]
  -[CATIDSServiceConnectionInvitationOutbox serviceInvitationQueue]


CATTaskServer : NSObject <CATTaskSessionDelegate>
 @property  <CATTaskServerDelegate> *delegate
 @property  NSDictionary *userInfo
 @property  NSArray *clientSessions
 @property  NSArray *connectedClientSessions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATTaskServer sessionDidDisconnect:]
  -[CATTaskServer postNotificationWithName:userInfo:]
  -[CATTaskServer delegateDidInvalidate]
  -[CATTaskServer setUserInfo:]
  -[CATTaskServer connectWithClientTransport:]
  -[CATTaskServer delegateClientSessionDidDisconnect:]
  -[CATTaskServer allSessionsDidInvalidate]
  -[CATTaskServer clientSessions]
  -[CATTaskServer sessionDidConnect:]
  -[CATTaskServer .cxx_destruct]
  -[CATTaskServer delegateClientSession:didInterruptWithError:]
  -[CATTaskServer session:prepareOperationForRequest:error:]
  -[CATTaskServer makeSessionWithClientTransport:]
  -[CATTaskServer invalidateWithError:]
  -[CATTaskServer setDelegate:]
  -[CATTaskServer init]
  -[CATTaskServer delegateSessionDidInvalidate:]
  -[CATTaskServer startInvalidatingWithError:]
  -[CATTaskServer invalidateAllClientSessions]
  -[CATTaskServer session:didInterruptWithError:]
  -[CATTaskServer session:didReceiveNotificationWithName:userInfo:]
  -[CATTaskServer delegateClientSession:shouldConnectWithTransport:]
  -[CATTaskServer delegateDidInvalidateAndFinalize]
  -[CATTaskServer sessionDidInvalidate:]
  -[CATTaskServer delegate]
  -[CATTaskServer connectedClientSessions]
  -[CATTaskServer session:enqueueOperation:]
  -[CATTaskServer userInfo]
  -[CATTaskServer dealloc]
  -[CATTaskServer sessionWillInvalidate:]
  -[CATTaskServer invalidate]
  -[CATTaskServer session:shouldAcceptConnectionFromTransport:]
  -[CATTaskServer delegateClientSessionDidConnect:]
  -[CATTaskServer disconnectAllClientSessions]
  -[CATTaskServer delegateClientSession:didReceiveNotificationWithName:userInfo:]


CATActiveIDSServiceConnectionContentClose : NSObject <CATActiveIDSServiceConnectionMessageContent>
 @property  NSError *error
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATActiveIDSServiceConnectionContentClose instanceWithDictionary:]

  // instance methods
  -[CATActiveIDSServiceConnectionContentClose .cxx_destruct]
  -[CATActiveIDSServiceConnectionContentClose initWithError:]
  -[CATActiveIDSServiceConnectionContentClose dictionaryValue]
  -[CATActiveIDSServiceConnectionContentClose init]
  -[CATActiveIDSServiceConnectionContentClose contentType]
  -[CATActiveIDSServiceConnectionContentClose setError:]
  -[CATActiveIDSServiceConnectionContentClose error]


CATTaskSession : NSObject <CATTransportDelegate, CATTaskOperationNotificationDelegate>
 @property  NSDictionary *clientUserInfo
 @property  NSUUID *sessionUUID
 @property  CATTransport *transport
 @property  <CATTaskSessionDelegate> *delegate
 @property  NSDictionary *userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATTaskSession setSessionUUID:]
  -[CATTaskSession postNotificationWithName:userInfo:]
  -[CATTaskSession delegateEnqueueOperation:]
  -[CATTaskSession transport]
  -[CATTaskSession enqueueDelegateDidInterruptWithError:]
  -[CATTaskSession disconnect]
  -[CATTaskSession delegateDidInvalidate]
  -[CATTaskSession setUserInfo:]
  -[CATTaskSession processStartMessage:]
  -[CATTaskSession transport:didInterruptWithError:]
  -[CATTaskSession delegatePrepareOperationWithRequest:error:]
  -[CATTaskSession transport:didSendMessage:]
  -[CATTaskSession sessionDidInvalidate]
  -[CATTaskSession .cxx_destruct]
  -[CATTaskSession abandonTransport]
  -[CATTaskSession restorePreviousSessionInfo]
  -[CATTaskSession transportDidInvalidate:]
  -[CATTaskSession sendMessage:]
  -[CATTaskSession savePreviousSessionInfo]
  -[CATTaskSession setClientUserInfo:]
  -[CATTaskSession delegateWillInvalidate]
  -[CATTaskSession resumeTransport:]
  -[CATTaskSession processSessionMessage:]
  -[CATTaskSession invalidateWithError:]
  -[CATTaskSession setDelegate:]
  -[CATTaskSession resumeCapturedTransportFromTaskSession:]
  -[CATTaskSession clientUserInfo]
  -[CATTaskSession delegateShouldAcceptConnection]
  -[CATTaskSession init]
  -[CATTaskSession sessionUUID]
  -[CATTaskSession delegateDidConnect]
  -[CATTaskSession transport:didReceiveMessage:]
  -[CATTaskSession captureTransport]
  -[CATTaskSession connectWithTransportFromTaskSession:]
  -[CATTaskSession delegateDidInterruptWithError:]
  -[CATTaskSession operationDidFinish:remoteUUID:]
  -[CATTaskSession clientDidResumeWithMessage:]
  -[CATTaskSession transport:didFailToSendMessage:error:]
  -[CATTaskSession taskOperation:didPostNotificationWithName:userInfo:]
  -[CATTaskSession sendMessageThroughTransport:]
  -[CATTaskSession evaluateConnectionWithResumeMessage:]
  -[CATTaskSession enqueueMessage:]
  -[CATTaskSession delegateDidInvalidateAndFinalize]
  -[CATTaskSession delegateDidDisconnect]
  -[CATTaskSession localOperationDidFinish:]
  -[CATTaskSession delegate]
  -[CATTaskSession delegatedidReceiveNotificationWithName:]
  -[CATTaskSession discardPreviousSessionInfo]
  -[CATTaskSession userInfo]
  -[CATTaskSession didCompleteSendForMessage:]
  -[CATTaskSession clearQueuedMessagesAndCancelAllOperationsWithError:]
  -[CATTaskSession processTaskMessage:]
  -[CATTaskSession dealloc]
  -[CATTaskSession invalidate]
  -[CATTaskSession processFetchProgressMessage:]
  -[CATTaskSession delegateWillInvalidateAndInvalidateSessionWithError:]
  -[CATTaskSession operationDidIncrementProgress:remoteUUID:]
  -[CATTaskSession acceptConnection]
  -[CATTaskSession processCancelMessage:]
  -[CATTaskSession rejectConnection]
  -[CATTaskSession processNotificationMessage:]
  -[CATTaskSession connectWithTransport:]
  -[CATTaskSession enqueueOperation:]
  -[CATTaskSession sendResumedMessage]


CATTransition : NSObject
 @property  CATState *state
 @property  SEL action

  // class methods
  +[CATTransition new]

  // instance methods
  -[CATTransition initWithState:action:]
  -[CATTransition .cxx_destruct]
  -[CATTransition init]
  -[CATTransition action]
  -[CATTransition state]


CATIDSServiceConnectionConfiguration : NSObject
 @property  long long maxDataSendSize
 @property  unsigned long keepAliveAttemptCount
 @property  double keepAliveCheckinInterval
 @property  double invitationAcknowledgeTimeout
 @property  double missingItemsCheckinInterval
 @property  double messageQueueFlushPromptInterval

  // instance methods
  -[CATIDSServiceConnectionConfiguration init]
  -[CATIDSServiceConnectionConfiguration keepAliveCheckinInterval]
  -[CATIDSServiceConnectionConfiguration keepAliveAttemptCount]
  -[CATIDSServiceConnectionConfiguration maxDataSendSize]
  -[CATIDSServiceConnectionConfiguration messageQueueFlushPromptInterval]
  -[CATIDSServiceConnectionConfiguration missingItemsCheckinInterval]
  -[CATIDSServiceConnectionConfiguration invitationAcknowledgeTimeout]
  -[CATIDSServiceConnectionConfiguration setMaxDataSendSize:]
  -[CATIDSServiceConnectionConfiguration setKeepAliveAttemptCount:]
  -[CATIDSServiceConnectionConfiguration setKeepAliveCheckinInterval:]
  -[CATIDSServiceConnectionConfiguration setInvitationAcknowledgeTimeout:]
  -[CATIDSServiceConnectionConfiguration setMissingItemsCheckinInterval:]
  -[CATIDSServiceConnectionConfiguration setMessageQueueFlushPromptInterval:]


CATConcreteIDSServiceConnectionDataMessageQueue : NSObject <CATIDSServiceConnectionDataMessageQueue>
 @property  <CATIDSServiceConnectionDataMessageQueueDelegate> *delegate

  // class methods
  +[CATConcreteIDSServiceConnectionDataMessageQueue flushTimerIdentifier]

  // instance methods
  -[CATConcreteIDSServiceConnectionDataMessageQueue .cxx_destruct]
  -[CATConcreteIDSServiceConnectionDataMessageQueue setDelegate:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue delegate]
  -[CATConcreteIDSServiceConnectionDataMessageQueue initWithWorkQueue:timerSource:dataChunker:flushPromptInterval:supportsRetransmit:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue receiveData:completion:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue retransmitSequenceNumbers:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue receiveRemoteSequenceNumber:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue scheduleFlushTimer]
  -[CATConcreteIDSServiceConnectionDataMessageQueue retransmitContent:]
  -[CATConcreteIDSServiceConnectionDataMessageQueue flushTimerDidFire:fireCount:]


CATInitializingIDSServiceConnectionContentReject : NSObject <CATInitializingIDSServiceConnectionMessageContent>
 @property  NSUUID *connectionIdentifier
 @property  NSError *error
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATInitializingIDSServiceConnectionContentReject instanceWithDictionary:]

  // instance methods
  -[CATInitializingIDSServiceConnectionContentReject .cxx_destruct]
  -[CATInitializingIDSServiceConnectionContentReject dictionaryValue]
  -[CATInitializingIDSServiceConnectionContentReject contentType]
  -[CATInitializingIDSServiceConnectionContentReject setError:]
  -[CATInitializingIDSServiceConnectionContentReject connectionIdentifier]
  -[CATInitializingIDSServiceConnectionContentReject error]
  -[CATInitializingIDSServiceConnectionContentReject initWithConnectionIdentifier:error:]


CATInitializingIDSServiceConnectionContentAcknowledge : NSObject <CATInitializingIDSServiceConnectionMessageContent>
 @property  NSUUID *connectionIdentifier
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATInitializingIDSServiceConnectionContentAcknowledge instanceWithDictionary:]

  // instance methods
  -[CATInitializingIDSServiceConnectionContentAcknowledge .cxx_destruct]
  -[CATInitializingIDSServiceConnectionContentAcknowledge dictionaryValue]
  -[CATInitializingIDSServiceConnectionContentAcknowledge contentType]
  -[CATInitializingIDSServiceConnectionContentAcknowledge connectionIdentifier]
  -[CATInitializingIDSServiceConnectionContentAcknowledge initWithConnectionIdentifier:]


CATSerialOperationEnqueuer : NSObject
  // instance methods
  -[CATSerialOperationEnqueuer .cxx_destruct]
  -[CATSerialOperationEnqueuer addOperation:]
  -[CATSerialOperationEnqueuer dealloc]
  -[CATSerialOperationEnqueuer observeValueForKeyPath:ofObject:change:context:]
  -[CATSerialOperationEnqueuer initWithTargetOperationQueue:]
  -[CATSerialOperationEnqueuer stopObservingOperation:]
  -[CATSerialOperationEnqueuer enqueueNextOperation]
  -[CATSerialOperationEnqueuer performThreadSafeBlock:]
  -[CATSerialOperationEnqueuer startObservingOperation:]
  -[CATSerialOperationEnqueuer checkIfOperationIsFinished:]


CATIDSServiceConnectionInvitation : NSObject
 @property  NSUUID *connectionIdentifier
 @property  <CATCancelable> *networkPowerAssertion
 @property  NSString *senderAppleID
 @property  NSString *senderAddress
 @property  unsigned long messagingVersion
 @property  NSDictionary *userInfo

  // instance methods
  -[CATIDSServiceConnectionInvitation .cxx_destruct]
  -[CATIDSServiceConnectionInvitation senderAddress]
  -[CATIDSServiceConnectionInvitation userInfo]
  -[CATIDSServiceConnectionInvitation connectionIdentifier]
  -[CATIDSServiceConnectionInvitation messagingVersion]
  -[CATIDSServiceConnectionInvitation initWithSenderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:]
  -[CATIDSServiceConnectionInvitation senderAppleID]
  -[CATIDSServiceConnectionInvitation networkPowerAssertion]
  -[CATIDSServiceConnectionInvitation initWithConnectionIdentifier:senderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:]


CATTransport : NSObject
 @property  NSString *name
 @property  <CATTransportDelegate> *delegate

  // instance methods
  -[CATTransport enqueueDelegateDidReceiveMessage:]
  -[CATTransport suspendQueue]
  -[CATTransport enqueueDelegateCouldNotConnectWithError:]
  -[CATTransport enqueueDelegateDidInterruptWithError:]
  -[CATTransport resumeQueue]
  -[CATTransport cancelAndResumeQueuesAndEnqueueInvalidateConnection]
  -[CATTransport didInterruptWithError:]
  -[CATTransport enqueueDelegateDidConnect]
  -[CATTransport delegateDidInvalidate]
  -[CATTransport suspendQueueAndConnection]
  -[CATTransport name]
  -[CATTransport suspendConnection]
  -[CATTransport enqueueSendForMessage:]
  -[CATTransport resumeConnection]
  -[CATTransport sendHelloMessageAndResumeQueue]
  -[CATTransport suspend]
  -[CATTransport didReceiveMessage:]
  -[CATTransport enqueueDelegateDidInvalidateAndFinalize]
  -[CATTransport invalidSendForMessage:]
  -[CATTransport delegateDidResume]
  -[CATTransport invalidateConnection]
  -[CATTransport didInvalidate]
  -[CATTransport .cxx_destruct]
  -[CATTransport sendMessage:]
  -[CATTransport setName:]
  -[CATTransport setDelegate:]
  -[CATTransport init]
  -[CATTransport operationToSendMessage:]
  -[CATTransport cancelHelloMessageAndResumeQueueOperations]
  -[CATTransport delegate]
  -[CATTransport resume]
  -[CATTransport dealloc]
  -[CATTransport invalidate]
  -[CATTransport resumeQueueAndConnection]


_CATTransportDidSendMessageOperation : NSBlockOperation
  // instance methods
  -[_CATTransportDidSendMessageOperation isCanceled]
  -[_CATTransportDidSendMessageOperation isCancelled]
  -[_CATTransportDidSendMessageOperation cancel]


CATSharingServiceTransportSendMessageOperation : CATOperation
  // instance methods
  -[CATSharingServiceTransportSendMessageOperation isAsynchronous]
  -[CATSharingServiceTransportSendMessageOperation main]
  -[CATSharingServiceTransportSendMessageOperation .cxx_destruct]
  -[CATSharingServiceTransportSendMessageOperation cancel]
  -[CATSharingServiceTransportSendMessageOperation sendMessage]
  -[CATSharingServiceTransportSendMessageOperation initWithConnection:message:]
  -[CATSharingServiceTransportSendMessageOperation didSendMessageWithError:]


_CATXPCBoostAssertion : NSObject
 @property  @? block

  // instance methods
  -[_CATXPCBoostAssertion setBlock:]
  -[_CATXPCBoostAssertion .cxx_destruct]
  -[_CATXPCBoostAssertion dealloc]
  -[_CATXPCBoostAssertion block]


CATXPCTransport : CATTransport <CATXPCInterface>
 @property  int auditSessionIdentifier
 @property  int processIdentifier
 @property  unsigned int effectiveUserIdentifier
 @property  unsigned int effectiveGroupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CATXPCTransport new]

  // instance methods
  -[CATXPCTransport initWithXPCConnection:]
  -[CATXPCTransport suspendConnection]
  -[CATXPCTransport resumeConnection]
  -[CATXPCTransport invalidateConnection]
  -[CATXPCTransport didInvalidate]
  -[CATXPCTransport processMessage:completion:]
  -[CATXPCTransport .cxx_destruct]
  -[CATXPCTransport tearDownConnection]
  -[CATXPCTransport boolValueForEntitlement:]
  -[CATXPCTransport init]
  -[CATXPCTransport valueForEntitlement:]
  -[CATXPCTransport operationToSendMessage:]
  -[CATXPCTransport effectiveUserIdentifier]
  -[CATXPCTransport processIdentifier]
  -[CATXPCTransport transportSendMessageOperation:processMessage:]
  -[CATXPCTransport setUpConnection]
  -[CATXPCTransport dealloc]
  -[CATXPCTransport effectiveGroupIdentifier]
  -[CATXPCTransport auditSessionIdentifier]


_CATXPCTransportSendMessageOperation : CATOperation
 @property  CATXPCTransport *transport
 @property  CATMessage *message

  // instance methods
  -[_CATXPCTransportSendMessageOperation isAsynchronous]
  -[_CATXPCTransportSendMessageOperation setTransport:]
  -[_CATXPCTransportSendMessageOperation transport]
  -[_CATXPCTransportSendMessageOperation main]
  -[_CATXPCTransportSendMessageOperation .cxx_destruct]
  -[_CATXPCTransportSendMessageOperation setMessage:]
  -[_CATXPCTransportSendMessageOperation didFailWithError:]
  -[_CATXPCTransportSendMessageOperation message]
  -[_CATXPCTransportSendMessageOperation didProcessMessage]


CATSharingBroadcastTerminal : NSObject
 @property  BOOL broadcasting
 @property  CATOperationQueue *delegationQueue

  // instance methods
  -[CATSharingBroadcastTerminal _activate]
  -[CATSharingBroadcastTerminal .cxx_destruct]
  -[CATSharingBroadcastTerminal activate]
  -[CATSharingBroadcastTerminal invalidate]
  -[CATSharingBroadcastTerminal isBroadcasting]
  -[CATSharingBroadcastTerminal addPrimitiveHandlers]
  -[CATSharingBroadcastTerminal removePrimitiveHandlers]
  -[CATSharingBroadcastTerminal _invalidateWithError:removePrimitiveHandlers:deactivatePrimitives:]
  -[CATSharingBroadcastTerminal setBroadcasting:]
  -[CATSharingBroadcastTerminal sessionNeedsToDisplayPin:]
  -[CATSharingBroadcastTerminal sessionHasPaired]
  -[CATSharingBroadcastTerminal initWithBroadcastPrimitives:delegate:delegationQueue:]
  -[CATSharingBroadcastTerminal delegationQueue]


_CATErrorBundleHelper : NSObject

CATInitializingServiceConnectionIDSMessage : NSObject <CATIDSMessage>
 @property  NSUUID *invitationIdentifier
 @property  <CATInitializingIDSServiceConnectionMessageContent> *content
 @property  long long messageType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATInitializingServiceConnectionIDSMessage instanceWithDictionary:]

  // instance methods
  -[CATInitializingServiceConnectionIDSMessage messageType]
  -[CATInitializingServiceConnectionIDSMessage content]
  -[CATInitializingServiceConnectionIDSMessage .cxx_destruct]
  -[CATInitializingServiceConnectionIDSMessage dictionaryValue]
  -[CATInitializingServiceConnectionIDSMessage invitationIdentifier]
  -[CATInitializingServiceConnectionIDSMessage initWithInvitationIdentifier:content:]


CATSharingMessage : NSObject <CATDictionaryCodable>
 @property  long long messageType
 @property  NSDictionary *contentDictionaryValue
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATSharingMessage instanceWithDictionary:]

  // instance methods
  -[CATSharingMessage messageType]
  -[CATSharingMessage .cxx_destruct]
  -[CATSharingMessage dictionaryValue]
  -[CATSharingMessage initWithContentMessage:]
  -[CATSharingMessage contentDictionaryValue]
  -[CATSharingMessage initWithMessageType:contentDictionary:]


CATInitializingIDSServiceConnectionContentInvite : NSObject <CATInitializingIDSServiceConnectionMessageContent>
 @property  NSDictionary *userInfo
 @property  long long contentType
 @property  NSDictionary *dictionaryValue

  // class methods
  +[CATInitializingIDSServiceConnectionContentInvite instanceWithDictionary:]

  // instance methods
  -[CATInitializingIDSServiceConnectionContentInvite .cxx_destruct]
  -[CATInitializingIDSServiceConnectionContentInvite dictionaryValue]
  -[CATInitializingIDSServiceConnectionContentInvite init]
  -[CATInitializingIDSServiceConnectionContentInvite contentType]
  -[CATInitializingIDSServiceConnectionContentInvite userInfo]
  -[CATInitializingIDSServiceConnectionContentInvite initWithUserInfo:]


CATConcreteTimerSource : NSObject <CATTimerSource>
  // instance methods
  -[CATConcreteTimerSource .cxx_destruct]
  -[CATConcreteTimerSource init]
  -[CATConcreteTimerSource scheduleOneShotTimerWithIdentifier:timeInterval:queue:fireHandler:]
  -[CATConcreteTimerSource scheduleInfiniteTimerWithIdentifier:timeInterval:queue:fireHandler:]
  -[CATConcreteTimerSource scheduleRepeatTimerWithIdentifier:timeInterval:queue:totalFires:fireHandler:]


CATSharingFatalError : NSObject <CATSharingFailureEvent>
 @property  long long failureType
 @property  NSError *underlyingError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATSharingFatalError .cxx_destruct]
  -[CATSharingFatalError failureType]
  -[CATSharingFatalError underlyingError]
  -[CATSharingFatalError initWithUnderlyingError:]


CATSharingBenignError : NSObject <CATSharingFailureEvent>
 @property  long long failureType
 @property  NSError *underlyingError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CATSharingBenignError .cxx_destruct]
  -[CATSharingBenignError failureType]
  -[CATSharingBenignError underlyingError]
  -[CATSharingBenignError initWithUnderlyingError:]


(CATIDSAdditions)
	// instance methods
	-[(CATIDSAdditions) cat_uuidForKey:]
	-[(CATIDSAdditions) cat_calculateAddedObjects]
	-[(CATIDSAdditions) cat_calculateRemovedObjects]
	-[(CATIDSAdditions) cat_errorValue]

<DEREK BUG Categories!>(CATAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(CATAdditions) cat_removeFirstObjectMatching:]
	-[<DEREK BUG Categories!>(CATAdditions) cat_popFirstObject]

NSMapTable(CATAdditions)
	// instance methods
	-[NSMapTable(CATAdditions) cat_containsKey:]

NSBundle(CATLocalizationHelper)
	// instance methods
	-[NSBundle(CATLocalizationHelper) cat_localizedStringsForKey:value:table:]

(CATBoxing)
	// class methods
	+[(CATBoxing) formattedCode:]

	// instance methods
	-[(CATBoxing) verboseDescription]
	-[(CATBoxing) cat_dictionaryValue]
	-[(CATBoxing) formattedCode]
	-[(CATBoxing) verboseDescriptionWithIdentation:]

(CATAdditions)
	// class methods
	+[(CATAdditions) cat_arrayFromIndexSet:]

	// instance methods
	-[(CATAdditions) cat_map:]
	-[(CATAdditions) cat_forEach:]
	-[(CATAdditions) cat_flatMapUsingBlock:]

(CATCasting)
	// class methods
	+[(CATCasting) cat_dateWithInternetTimeString:]
	+[(CATCasting) cat_dateWithObject:]
	+[(CATCasting) cat_RFC3339Formatters]

	// instance methods
	-[(CATCasting) cat_internetTimeString]

NSKeyedArchiver(CATSecureCoding)
	// class methods
	+[NSKeyedArchiver(CATSecureCoding) cat_archivedDataWithRootObject:]
	+[NSKeyedArchiver(CATSecureCoding) cat_archivedDataWithRootObject:error:]

NSKeyedUnarchiver(CATSecureCoding)
	// class methods
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchiveObjectOfClass:withData:error:]
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchiveObjectOfClasses:withData:]
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchiveObjectOfClasses:withData:error:]
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchivePropertyListObjectWithData:error:]
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchiveObjectOfClass:withData:]
	+[NSKeyedUnarchiver(CATSecureCoding) cat_unarchivePropertyListObjectWithData:]

<DEREK BUG Categories!>(CATShifting)
	// instance methods
	-[<DEREK BUG Categories!>(CATShifting) cat_moveIndex:toIndex:]
	-[<DEREK BUG Categories!>(CATShifting) cat_shiftAndRemoveIndex:]
	-[<DEREK BUG Categories!>(CATShifting) cat_shiftAndAddIndexesInRange:]
	-[<DEREK BUG Categories!>(CATShifting) cat_shiftAndRemoveIndexesInRange:]
	-[<DEREK BUG Categories!>(CATShifting) cat_shiftAndAddIndex:]

NSNetService(CATTXTRecord)
	// class methods
	+[NSNetService(CATTXTRecord) cat_dictionaryFromData:]
	+[NSNetService(CATTXTRecord) cat_dataFromDictionary:]

(CATCasting)
	// class methods
	+[(CATCasting) cat_numberWithObject:]

NSOperation(CATOperation)
	// instance methods
	-[NSOperation(CATOperation) cat_addDependencies:]

NSRunLoop(CATBlocks)
	// class methods
	+[NSRunLoop(CATBlocks) cat_performBlockOnMainRunLoop:]
	+[NSRunLoop(CATBlocks) cat_performBlock:]

	// instance methods
	-[NSRunLoop(CATBlocks) cat_performBlock:]
	-[NSRunLoop(CATBlocks) cat_performInModes:block:]

01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSInvocationOperation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSNetService 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSStream 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
