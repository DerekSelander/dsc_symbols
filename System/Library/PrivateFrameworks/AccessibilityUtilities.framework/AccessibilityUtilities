|| __DATA.__common _AXMinimumLinearAudioBalanceLevel
|| __DATA.__common _AXSTapticChimesDefaultEnabledState
|| __DATA.__common _AXSTapticTimeDefaultEnabledState
|| __DATA.__common _ModifySpeechJobsLock
|| __DATA.__data _AXAssistiveTouchDefaultIdleOpacity
|| __DATA.__data _AXCarouselServerShowHearingControlsNotification
|| __DATA.__data _AXCharacterVoiceIdentifierMickey
|| __DATA.__data _AXCharacterVoiceIdentifierMinnie
|| __DATA.__data _AXForceTouchDuration
|| __DATA.__data _AXForceTouchUpdateInterval
|| __DATA.__data _AXIPCMessageKeyCarouselActionResult
|| __DATA.__data _AXIPCMessageKeyCarouselActivateSiri
|| __DATA.__data _AXIPCMessageKeyCarouselAppleWatchRemoteScreenAlert
|| __DATA.__data _AXIPCMessageKeyCarouselArmApplePay
|| __DATA.__data _AXIPCMessageKeyCarouselCanActivateSiri
|| __DATA.__data _AXIPCMessageKeyCarouselCanShowControlCenter
|| __DATA.__data _AXIPCMessageKeyCarouselCanShowNotificationCenter
|| __DATA.__data _AXIPCMessageKeyCarouselClockFaceIsFrontMost
|| __DATA.__data _AXIPCMessageKeyCarouselCurrentFaceClass
|| __DATA.__data _AXIPCMessageKeyCarouselDismissSiri
|| __DATA.__data _AXIPCMessageKeyCarouselGoToClockFace
|| __DATA.__data _AXIPCMessageKeyCarouselGoToShutdownAlert
|| __DATA.__data _AXIPCMessageKeyCarouselGoToStingShutdownAlert
|| __DATA.__data _AXIPCMessageKeyCarouselHasLockingSystemWindows
|| __DATA.__data _AXIPCMessageKeyCarouselIsAppLauncherVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsAppSwitcherVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsApplePayVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsControlCenterVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsNotificationCenterVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsRingerMuted
|| __DATA.__data _AXIPCMessageKeyCarouselIsShutdownAlertVisible
|| __DATA.__data _AXIPCMessageKeyCarouselIsSiriVisible
|| __DATA.__data _AXIPCMessageKeyCarouselLauncherViewMode
|| __DATA.__data _AXIPCMessageKeyCarouselOverrideNativeFocusWithPid
|| __DATA.__data _AXIPCMessageKeyCarouselPID
|| __DATA.__data _AXIPCMessageKeyCarouselPerformScreenCoverGesture
|| __DATA.__data _AXIPCMessageKeyCarouselPresentNearbyDeviceControlPicker
|| __DATA.__data _AXIPCMessageKeyCarouselRegisterActionHandling
|| __DATA.__data _AXIPCMessageKeyCarouselSetRingerMuted
|| __DATA.__data _AXIPCMessageKeyCarouselShowAppLauncher
|| __DATA.__data _AXIPCMessageKeyCarouselShowAppSwitcher
|| __DATA.__data _AXIPCMessageKeyCarouselShowControlCenter
|| __DATA.__data _AXIPCMessageKeyCarouselShowNotificationCenter
|| __DATA.__data _AXIPCMessageKeyCarouselTakeScreenshot
|| __DATA.__data _AXIPCMessageKeyCarouselToggleWatchControl
|| __DATA.__data _AXIPCRegisterClientWithServer
|| __DATA.__data _AXMIDIErrorDomain
|| __DATA.__data _AXMaximumLinearAudioBalanceLevel
|| __DATA.__data _AXSTapToSpeakTimeAvailabilityDefault
|| __DATA.__data _AXSTapToSpeakTimeDefaultEnabledState
|| __DATA.__data _AXSTapticTimeDefaultEnabledStateForVoiceOver
|| __DATA.__data _AXSVoiceOverTapticChimesFrequencyEncodingDefault
|| __DATA.__data _AXSVoiceOverTapticChimesSoundTypeDefault
|| __DATA.__data _AXSVoiceOverTapticTimeEncodingDefault
|| __DATA.__data _AXSVoiceOverTapticTimeSpeedDefault
|| __DATA.__data _AXSVoiceOverTapticTimeSpeedMaximum
|| __DATA.__data _AXSVoiceOverTapticTimeSpeedMinimum
|| __DATA.__data _AXSideClickSpeedDefault
|| __DATA.__data _AXSideClickSpeedSlow
|| __DATA.__data _AXSideClickSpeedSlowest
|| __DATA.__data _AXTripleClickAttemptToEnterClarityBoardMessageIdentifier
|| __DATA.__data _AXValidationClientAccessibility
|| __DATA.__data _AXValidationClientSiriSemanticContext
|| __DATA.__data _AXVoiceOverDidDisableGesturedTextInputNotification
|| __DATA.__data _AXVoiceOverDidEnableGesturedTextInputNotification
|| __DATA.__data _AXVoiceOverHandwritingAttributeAcceptsContractedBraille
|| __DATA.__data _AXVoiceOverHandwritingAttributeAcceptsRawInput
|| __DATA.__data _AXVoiceOverHandwritingAttributeAllowedCharacterSets
|| __DATA.__data _AXVoiceOverHandwritingAttributeCanDeleteCharacter
|| __DATA.__data _AXVoiceOverHandwritingAttributeLanguage
|| __DATA.__data _AXVoiceOverHandwritingAttributePreferredCharacterSet
|| __DATA.__data _AXVoiceOverHandwritingAttributeShouldEchoCharacter
|| __DATA.__data _AXVoiceOverHandwritingAttributeShouldPlayKeyboardSecureClickSound
|| __DATA.__data _AXZoomDefaultDockSize
|| __DATA.__data _AXZoomDefaultIdleSlugOpacity
|| __DATA.__data _AXZoomDefaultUserPreferredMaximumZoomLevel
|| __DATA.__data _AXZoomDefaultZoomLevel
|| __DATA.__data _AXZoomDockPositionBottom
|| __DATA.__data _AXZoomDockPositionLeft
|| __DATA.__data _AXZoomDockPositionRight
|| __DATA.__data _AXZoomDockPositionTop
|| __DATA.__data _AXZoomLensEffectBlackAndWhite
|| __DATA.__data _AXZoomLensEffectBlackAndWhiteInverted
|| __DATA.__data _AXZoomLensEffectHueAdjust
|| __DATA.__data _AXZoomLensEffectInvertColors
|| __DATA.__data _AXZoomLensEffectLowLight
|| __DATA.__data _AXZoomLensEffectNone
|| __DATA.__data _AXZoomLensModeFullscreen
|| __DATA.__data _AXZoomLensModeWindow
|| __DATA.__data _AXZoomLensModeWindowAnchored
|| __DATA.__data _AXZoomMaximumIdleSlugOpacity
|| __DATA.__data _AXZoomMaximumZoomLevel
|| __DATA.__data _AXZoomMinimumIdleSlugOpacity
|| __DATA.__data _AXZoomMinimumUserPreferredMaximumZoomLevel
|| __DATA.__data _AXZoomMinimumZoomLevel
|| __DATA.__data _AXZoomPreferredLensModePreference
|| __DATA.__data __AXBundleMapPlatformKey_iOS
|| __DATA.__data __AXBundleMapPlatformKey_iosmac
|| __DATA.__data __AXBundleMapPlatformKey_macOS
|| __DATA.__data __AXBundleMapPlatformKey_tvOS
|| __DATA.__data __AXBundleMapPlatformKey_watchOS
|| __DATA.__data _kAXSAllAvailableVoicesPreference
|| __DATA.__data _kAXSAssistiveTouchScannerSpeechEnabledPreference
|| __DATA.__data _kAXSAssistiveTouchScannerSpeechRatePreference
|| __DATA.__data _kAXSBrailleTableEnglishUK
|| __DATA.__data _kAXSBrailleTableEnglishUS
|| __DATA.__data _kAXSBrailleTableEnglishUnified
|| __DATA.__data _kAXSCustomPronunciationSubstitutionsPreference
|| __DATA.__data _kAXSVoiceOverPitchPreference
|| __DATA.__data _kAXSVoiceOverTouchRotorActivities
|| __DATA.__data _kAXSVoiceOverTouchRotorAudioDestination
|| __DATA.__data _kAXSVoiceOverTouchRotorDirectTouchMode
|| __DATA.__data _kAXSVoiceOverTouchRotorImageDescriptions
|| __DATA.__data _kAXSVoiceOverTouchRotorItem2DBrailleEdgeIntensity
|| __DATA.__data _kAXSVoiceOverTouchRotorItem2DBrailleInvert
|| __DATA.__data _kAXSVoiceOverTouchRotorItem2DBraillePanHorizontal
|| __DATA.__data _kAXSVoiceOverTouchRotorItem2DBraillePanVertical
|| __DATA.__data _kAXSVoiceOverTouchRotorItem2DBrailleZoom
|| __DATA.__data _kAXSVoiceOverTouchRotorItemAllItems
|| __DATA.__data _kAXSVoiceOverTouchRotorItemArticle
|| __DATA.__data _kAXSVoiceOverTouchRotorItemAudioDucking
|| __DATA.__data _kAXSVoiceOverTouchRotorItemBrailleAutoAdvance
|| __DATA.__data _kAXSVoiceOverTouchRotorItemBrailleGesture
|| __DATA.__data _kAXSVoiceOverTouchRotorItemBrailleLanguage
|| __DATA.__data _kAXSVoiceOverTouchRotorItemButton
|| __DATA.__data _kAXSVoiceOverTouchRotorItemCharacter
|| __DATA.__data _kAXSVoiceOverTouchRotorItemContainers
|| __DATA.__data _kAXSVoiceOverTouchRotorItemContinuousPath
|| __DATA.__data _kAXSVoiceOverTouchRotorItemFormElement
|| __DATA.__data _kAXSVoiceOverTouchRotorItemHandwriting
|| __DATA.__data _kAXSVoiceOverTouchRotorItemHeader
|| __DATA.__data _kAXSVoiceOverTouchRotorItemHints
|| __DATA.__data _kAXSVoiceOverTouchRotorItemImage
|| __DATA.__data _kAXSVoiceOverTouchRotorItemLandmark
|| __DATA.__data _kAXSVoiceOverTouchRotorItemLanguage
|| __DATA.__data _kAXSVoiceOverTouchRotorItemLine
|| __DATA.__data _kAXSVoiceOverTouchRotorItemLink
|| __DATA.__data _kAXSVoiceOverTouchRotorItemListStart
|| __DATA.__data _kAXSVoiceOverTouchRotorItemNavigationDirection
|| __DATA.__data _kAXSVoiceOverTouchRotorItemNonVisitedLink
|| __DATA.__data _kAXSVoiceOverTouchRotorItemPunctuation
|| __DATA.__data _kAXSVoiceOverTouchRotorItemSame
|| __DATA.__data _kAXSVoiceOverTouchRotorItemSearchField
|| __DATA.__data _kAXSVoiceOverTouchRotorItemSounds
|| __DATA.__data _kAXSVoiceOverTouchRotorItemSpeechRate
|| __DATA.__data _kAXSVoiceOverTouchRotorItemStaticText
|| __DATA.__data _kAXSVoiceOverTouchRotorItemTableStart
|| __DATA.__data _kAXSVoiceOverTouchRotorItemTextField
|| __DATA.__data _kAXSVoiceOverTouchRotorItemTextSelection
|| __DATA.__data _kAXSVoiceOverTouchRotorItemTextZoom
|| __DATA.__data _kAXSVoiceOverTouchRotorItemTypingMode
|| __DATA.__data _kAXSVoiceOverTouchRotorItemVerticalNavigation
|| __DATA.__data _kAXSVoiceOverTouchRotorItemVisitedLink
|| __DATA.__data _kAXSVoiceOverTouchRotorItemVolume
|| __DATA.__data _kAXSVoiceOverTouchRotorItemWord
|| __DATA.__data _kAXSVoiceOverTouchRotorMLElementsMode
|| __DATA.__data _kAXSVoiceOverTouchRotorNavigationStyle
|| __DATA.__objc_data _OBJC_CLASS_$_AVAlexSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_CLASS_$_AVSiriFemaleSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_CLASS_$_AVSiriMaleSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_CLASS_$_AXARDescriptionFormatting
|| __DATA.__objc_data _OBJC_CLASS_$_AXAirPodSettingsManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXAlternativeVoices
|| __DATA.__objc_data _OBJC_CLASS_$_AXAppRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXAppSceneRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXAssertion
|| __DATA.__objc_data _OBJC_CLASS_$_AXAssertionCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_AXAssertionWorkItem
|| __DATA.__objc_data _OBJC_CLASS_$_AXAudioHardwareManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXBannerServices
|| __DATA.__objc_data _OBJC_CLASS_$_AXBuddyDataPackage
|| __DATA.__objc_data _OBJC_CLASS_$_AXCenterTapReplayableGesture
|| __DATA.__objc_data _OBJC_CLASS_$_AXCharacterSoundMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXCustomizableMouse
|| __DATA.__objc_data _OBJC_CLASS_$_AXDeviceMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_AXDialectMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXDisplayLinkManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXDisplayLinkManagerTargetAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventAccelerometerInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventData
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventGameControllerInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventHandInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventIOSMACPointerInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventKeyInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventPathInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventPointerInfoRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventProcessor
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventTapManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXEventTapPair
|| __DATA.__objc_data _OBJC_CLASS_$_AXFirstResponderValueChangeManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXGameControllerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AXIPCDelayedMessage
|| __DATA.__objc_data _OBJC_CLASS_$_AXIPCServerClientRegistration
|| __DATA.__objc_data _OBJC_CLASS_$_AXIndexMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXLangMap
|| __DATA.__objc_data _OBJC_CLASS_$_AXLanguageManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXLanguageTag
|| __DATA.__objc_data _OBJC_CLASS_$_AXLanguageTaggedContent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIDevice
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIDeviceEntity
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIDeviceEntityEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIDIParser
|| __DATA.__objc_data _OBJC_CLASS_$_AXMobileConfigurationInterface
|| __DATA.__objc_data _OBJC_CLASS_$_AXMouseEventListener
|| __DATA.__objc_data _OBJC_CLASS_$_AXMutableReplayableGesture
|| __DATA.__objc_data _OBJC_CLASS_$_AXNamedReplayableGesture
|| __DATA.__objc_data _OBJC_CLASS_$_AXOrator
|| __DATA.__objc_data _OBJC_CLASS_$_AXOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXOutputRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AXPageTurningReplayableGesture
|| __DATA.__objc_data _OBJC_CLASS_$_AXPasscodeAccessor
|| __DATA.__objc_data _OBJC_CLASS_$_AXPathWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_AXPerformanceTestReportingServer
|| __DATA.__objc_data _OBJC_CLASS_$_AXPostConnectionTask
|| __DATA.__objc_data _OBJC_CLASS_$_AXPredictiveTypingModel
|| __DATA.__objc_data _OBJC_CLASS_$_AXRedirectedEventDetector
|| __DATA.__objc_data _OBJC_CLASS_$_AXReplayableGesture
|| __DATA.__objc_data _OBJC_CLASS_$_AXReplayer
|| __DATA.__objc_data _OBJC_CLASS_$_AXResourceLoader
|| __DATA.__objc_data _OBJC_CLASS_$_AXSBImageExplorerData
|| __DATA.__objc_data _OBJC_CLASS_$_AXSBQuickSettingsData
|| __DATA.__objc_data _OBJC_CLASS_$_AXSLDServiceProxyDelegateObject
|| __DATA.__objc_data _OBJC_CLASS_$_AXSiriShortcut
|| __DATA.__objc_data _OBJC_CLASS_$_AXSiriShortcutsManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXAggregateLogging
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXCharacterVoices
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXCustomizableMouse
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXSoundBoard
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXUIViewService
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAXVectorKit
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemAudioRouting
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemBBServer
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemBrailleGestures
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemBrailleHardware
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemBrokenHomeButton
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemContextKit
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemDataMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemEventTap
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemIPC
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemInvertColors
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemLocCaptionPanel
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemMagicTapToggle
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemMagnifier
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemMagnifierBright
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemPronunciations
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSBServer
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSCElementNav
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSCPauseResume
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSpeakFingerManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSpeakSelection
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSpeakThis
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSpeakTyping
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSpeechAssetDownloader
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemSwitchControlHardware
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemUserInterfaceService
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVOTAudio
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVOTiCloud
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVisualAlerts
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVoiceOver
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVoiceOverIAP
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemVoiceOverLifeCycle
|| __DATA.__objc_data _OBJC_CLASS_$_AXSubsystemZoom
|| __DATA.__objc_data _OBJC_CLASS_$_AXSwitch
|| __DATA.__objc_data _OBJC_CLASS_$_AXSwitchControlServer
|| __DATA.__objc_data _OBJC_CLASS_$_AXSwitchRecipe
|| __DATA.__objc_data _OBJC_CLASS_$_AXSwitchRecipeMapping
|| __DATA.__objc_data _OBJC_CLASS_$_AXSwitchRegistrar
|| __DATA.__objc_data _OBJC_CLASS_$_AXTapticSoundTestingContainer
|| __DATA.__objc_data _OBJC_CLASS_$_AXTapticTimeManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXThreadTimer
|| __DATA.__objc_data _OBJC_CLASS_$_AXThreadTimerTask
|| __DATA.__objc_data _OBJC_CLASS_$_AXTrampoline
|| __DATA.__objc_data _OBJC_CLASS_$_AXTripleClickHelpers
|| __DATA.__objc_data _OBJC_CLASS_$_AXTypingPrediction
|| __DATA.__objc_data _OBJC_CLASS_$_AXUpdateElementVisualsCoalescer
|| __DATA.__objc_data _OBJC_CLASS_$_AXUserEventTimer
|| __DATA.__objc_data _OBJC_CLASS_$_AXValueChangeUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AXVoiceOverActivity
|| __DATA.__objc_data _OBJC_CLASS_$_AXVoiceOverServer
|| __DATA.__objc_data _OBJC_CLASS_$_FKAAvailableCommands
|| __DATA.__objc_data _OBJC_CLASS_$_FKASiriShortcutKeyboardCommand
|| __DATA.__objc_data _OBJC_CLASS_$_GAXTimeRestrictionManager
|| __DATA.__objc_data _OBJC_CLASS_$__AXAssertionServer
|| __DATA.__objc_data _OBJC_CLASS_$__AXReplayInstance
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAlexSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_METACLASS_$_AVSiriFemaleSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_METACLASS_$_AVSiriMaleSpeechSynthesisVoice
|| __DATA.__objc_data _OBJC_METACLASS_$_AXARDescriptionFormatting
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAirPodSettingsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAlternativeVoices
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAppRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAppSceneRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAssertionCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAssertionWorkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_AXAudioHardwareManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXBannerServices
|| __DATA.__objc_data _OBJC_METACLASS_$_AXBuddyDataPackage
|| __DATA.__objc_data _OBJC_METACLASS_$_AXCenterTapReplayableGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_AXCharacterSoundMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXCustomizableMouse
|| __DATA.__objc_data _OBJC_METACLASS_$_AXDeviceMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXDialectMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXDisplayLinkManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXDisplayLinkManagerTargetAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventAccelerometerInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventGameControllerInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventHandInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventIOSMACPointerInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventKeyInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventPathInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventPointerInfoRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventProcessor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventTapManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXEventTapPair
|| __DATA.__objc_data _OBJC_METACLASS_$_AXFirstResponderValueChangeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXGameControllerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXIPCDelayedMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_AXIPCServerClientRegistration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXIndexMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLangMap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLanguageManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLanguageTag
|| __DATA.__objc_data _OBJC_METACLASS_$_AXLanguageTaggedContent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIDeviceEntity
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIDeviceEntityEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIDIParser
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMobileConfigurationInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMouseEventListener
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMutableReplayableGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_AXNamedReplayableGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_AXOrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXOutputRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPageTurningReplayableGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPasscodeAccessor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPathWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPerformanceTestReportingServer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPostConnectionTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AXPredictiveTypingModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AXRedirectedEventDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_AXReplayableGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_AXReplayer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXResourceLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSBImageExplorerData
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSBQuickSettingsData
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSLDServiceProxyDelegateObject
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSiriShortcut
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSiriShortcutsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXAggregateLogging
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXCharacterVoices
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXCustomizableMouse
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXSoundBoard
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXUIViewService
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAXVectorKit
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemAudioRouting
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemBBServer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemBrailleGestures
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemBrailleHardware
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemBrokenHomeButton
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemContextKit
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemDataMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemEventTap
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemIPC
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemInvertColors
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemLocCaptionPanel
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemMagicTapToggle
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemMagnifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemMagnifierBright
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemPronunciations
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSBServer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSCElementNav
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSCPauseResume
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSpeakFingerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSpeakSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSpeakThis
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSpeakTyping
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSpeechAssetDownloader
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemSwitchControlHardware
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemUserInterfaceService
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVOTAudio
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVOTiCloud
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVisualAlerts
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVoiceOver
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVoiceOverIAP
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemVoiceOverLifeCycle
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSubsystemZoom
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSwitch
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSwitchControlServer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSwitchRecipe
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSwitchRecipeMapping
|| __DATA.__objc_data _OBJC_METACLASS_$_AXSwitchRegistrar
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTapticSoundTestingContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTapticTimeManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXThreadTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXThreadTimerTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTrampoline
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTripleClickHelpers
|| __DATA.__objc_data _OBJC_METACLASS_$_AXTypingPrediction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXUpdateElementVisualsCoalescer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXUserEventTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXValueChangeUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVoiceOverActivity
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVoiceOverServer
|| __DATA.__objc_data _OBJC_METACLASS_$_FKAAvailableCommands
|| __DATA.__objc_data _OBJC_METACLASS_$_FKASiriShortcutKeyboardCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_GAXTimeRestrictionManager
|| __DATA.__objc_data _OBJC_METACLASS_$__AXAssertionServer
|| __DATA.__objc_data _OBJC_METACLASS_$__AXReplayInstance
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXBackBoardServer._eventListeners
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXBackBoardServer._overrideGestureRecognition
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXBackBoardServer._zoomAttributeListeners
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXIndexMap._map
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXReplayableGesture._allEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXReplayableGesture._arePointsDeviceRelative
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXThreadTimer._cancelBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXThreadTimer._thread
|| __DATA.__objc_ivar _OBJC_IVAR_$__AXDyldImageMonitor._queue
|| __DATA_CONST.__const _AXASTCustomGesturePrefixName
|| __DATA_CONST.__const _AXASTSiriShortcutPrefixName
|| __DATA_CONST.__const _AXAssertionTypeDisableControlCenterGesture
|| __DATA_CONST.__const _AXAssertionTypeDisableDashboardSystemGestures
|| __DATA_CONST.__const _AXAssertionTypeDisableNotificationCenterGesture
|| __DATA_CONST.__const _AXAssertionTypeDisableSpeakThisGesture
|| __DATA_CONST.__const _AXAssertionTypeDisableSystemGestures
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationBottomLeft
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationBottomMiddle
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationBottomRight
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationMidLeft
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationMidMiddle
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationMidRight
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationTopLeft
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationTopMiddle
|| __DATA_CONST.__const _AXAssistiveTouchIconLocationTopRight
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeAppSwitcher
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeArmApplePay
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeAssistiveTouch
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeBackgroundSounds
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeCamera
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeClassicInvert
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeColorFilters
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeCommandAndControl
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeConfirmApplePay
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeContinuousScroll
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeControlCenter
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeCustom
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDetectionMode
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDevice
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDoubleTap
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDragAndDrop
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwell
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellClick
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellDecreaseTime
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellIncreaseTime
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellLock
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellLockToggle
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellPause
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellPauseToggle
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellResume
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeDwellUnlock
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeForceTap
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeFullKeyboardAccess
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeGestures
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeHome
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeLiveCaptions
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeLockScreen
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeLongPress
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeMagnifier
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeMousePrimaryClick
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeMouseSecondaryClick
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeMoveMenu
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeMute
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeNearbyDeviceControl
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeNotificationCenter
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeOpenMenu
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeOrientation
|| __DATA_CONST.__const _AXAssistiveTouchIconTypePassThroughToApp
|| __DATA_CONST.__const _AXAssistiveTouchIconTypePinch
|| __DATA_CONST.__const _AXAssistiveTouchIconTypePinchAndRotate
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeReachability
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeRebootDevice
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeRotate
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeRotateScreen
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSOS
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScreenshot
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScroll
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollDown
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollLeft
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollRight
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollToBottom
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollToTop
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeScrollUp
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeShake
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSideApp
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSiri
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSiriShortcuts
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSmartInvert
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSpeakScreen
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSpotlight
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSwitchControl
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeSysdiagnose
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeToggleDock
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeTorch
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeTripleClick
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeVoiceControl
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeVoiceOver
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeVolumeDown
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeVolumeUp
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeWatchRemoteScreen
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeZoom
|| __DATA_CONST.__const _AXAssistiveTouchIconTypeZoomController
|| __DATA_CONST.__const _AXAssistiveTouchPayloadKeyDictionaryElementIndex
|| __DATA_CONST.__const _AXAssistiveTouchPayloadKeyDictionaryElementIndexes
|| __DATA_CONST.__const _AXAssistiveTouchPayloadKeyDictionaryElementValue
|| __DATA_CONST.__const _AXAssistiveTouchPayloadKeyDictionaryElements
|| __DATA_CONST.__const _AXAssistiveTouchServerServiceName
|| __DATA_CONST.__const _AXBackBoardServerServiceName
|| __DATA_CONST.__const _AXBackTapClientIDSwitchControl
|| __DATA_CONST.__const _AXBackTapClientIDSystem
|| __DATA_CONST.__const _AXBackTapClientIDVoiceOver
|| __DATA_CONST.__const _AXBackTapClientRegistrationKeyPolicy
|| __DATA_CONST.__const _AXBackboardServerShouldToggleGuidedAccessNotification
|| __DATA_CONST.__const _AXCACCommandEditorApplicationIdentifiersToNamesKey
|| __DATA_CONST.__const _AXCACCommandEditorGestureKey
|| __DATA_CONST.__const _AXCACCommandEditorPasteboardKey
|| __DATA_CONST.__const _AXCACCommandEditorShortcutWorkflowKey
|| __DATA_CONST.__const _AXCACCommandEditorTextToInsertKey
|| __DATA_CONST.__const _AXCACCommandEditorUserActionFlowKey
|| __DATA_CONST.__const _AXCACCorrectionsAlternativesKey
|| __DATA_CONST.__const _AXCACCorrectionsEmojisKey
|| __DATA_CONST.__const _AXCACCorrectionsRectKey
|| __DATA_CONST.__const _AXCACCorrectionsTextKey
|| __DATA_CONST.__const _AXCarouselServerServiceName
|| __DATA_CONST.__const _AXContainerManagerMessageKeyData
|| __DATA_CONST.__const _AXContainerManagerMessageKeyError
|| __DATA_CONST.__const _AXContainerManagerMessageKeyPath
|| __DATA_CONST.__const _AXDictionaryElementKeyHint
|| __DATA_CONST.__const _AXDictionaryElementKeyIndex
|| __DATA_CONST.__const _AXDictionaryElementKeyIsKeyboardKey
|| __DATA_CONST.__const _AXDictionaryElementKeyLabel
|| __DATA_CONST.__const _AXDictionaryElementKeyLanguage
|| __DATA_CONST.__const _AXDictionaryElementKeyTraits
|| __DATA_CONST.__const _AXDictionaryElementKeyTraitsDescription
|| __DATA_CONST.__const _AXDictionaryElementKeyValue
|| __DATA_CONST.__const _AXDisplayFilterUIServiceName
|| __DATA_CONST.__const _AXDragServiceNameCommandAndControl
|| __DATA_CONST.__const _AXDragServiceNameFullKeyboardAccess
|| __DATA_CONST.__const _AXDragServiceNameSwitchControl
|| __DATA_CONST.__const _AXDragServiceNameVoiceOver
|| __DATA_CONST.__const _AXEventHIDTapIdentifierGuidedAccess
|| __DATA_CONST.__const _AXEventTapIdentifierGuidedAccess
|| __DATA_CONST.__const _AXGuidedAccessActiveStatusDidChangeBroadcastNotification
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyAppSetIndex
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyGAXConfiguration
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyGAXMode
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyIsTemporaryFailure
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyRequestingAppIsSelfLockedToGAX
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeyRequestingAppSetGAXEnabled
|| __DATA_CONST.__const _AXGuidedAccessPayloadKeySessionApp
|| __DATA_CONST.__const _AXIPCErrorDomain
|| __DATA_CONST.__const _AXIPCErrorKeyMachError
|| __DATA_CONST.__const _AXIPCPayloadKeyCarouselResult
|| __DATA_CONST.__const _AXInCallConversationBannerHUDName
|| __DATA_CONST.__const _AXInCallServiceName
|| __DATA_CONST.__const _AXInCheckerBoardScenarioUpdatedNotification
|| __DATA_CONST.__const _AXInPreBoardScenarioUpdatedNotification
|| __DATA_CONST.__const _AXInternalInCheckerBoardModeUpdatedNotification
|| __DATA_CONST.__const _AXInternalInPreBoardModeUpdatedNotification
|| __DATA_CONST.__const _AXInternalSessionIsLoginSessionChangedNotification
|| __DATA_CONST.__const _AXLoginSessionNoteContainerPath
|| __DATA_CONST.__const _AXLoginSessionNoteVoiceOverWasEnabledKey
|| __DATA_CONST.__const _AXLoginSessionNoteZoomWasEnabledKey
|| __DATA_CONST.__const _AXMIDIEventCodingKeyChannel
|| __DATA_CONST.__const _AXMIDIEventCodingKeyControl
|| __DATA_CONST.__const _AXMIDIEventCodingKeyControlValue
|| __DATA_CONST.__const _AXMIDIEventCodingKeyNote
|| __DATA_CONST.__const _AXMIDIEventCodingKeyPitchBend
|| __DATA_CONST.__const _AXMIDIEventCodingKeyPressure
|| __DATA_CONST.__const _AXMIDIEventCodingKeyProgram
|| __DATA_CONST.__const _AXMIDIEventCodingKeyType
|| __DATA_CONST.__const _AXOratorErrorDomain
|| __DATA_CONST.__const _AXPerformanceTestReportingServerServiceName
|| __DATA_CONST.__const _AXRTTNotificationContentExtensionName
|| __DATA_CONST.__const _AXReplyServiceName
|| __DATA_CONST.__const _AXSAssistiveTouchMouseDwellControlBottomLeftHotCorner
|| __DATA_CONST.__const _AXSAssistiveTouchMouseDwellControlBottomRightHotCorner
|| __DATA_CONST.__const _AXSAssistiveTouchMouseDwellControlTopLeftHotCorner
|| __DATA_CONST.__const _AXSAssistiveTouchMouseDwellControlTopRightHotCorner
|| __DATA_CONST.__const _AXSBHearingAidServerServiceName
|| __DATA_CONST.__const _AXSBServerDidShowTripleClickNotification
|| __DATA_CONST.__const _AXSSwitchControlMenuItemATVRemoteMenu
|| __DATA_CONST.__const _AXSSwitchControlMenuItemAppleWatchRemoteScreen
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDevice
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceAppSwitcher
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceArmApplePay
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceControlCenter
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceIncreaseDecreaseZoom
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceInterDevice
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceLockScreen
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceMute
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceNotificationCenter
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceRebootDevice
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceRotateScreen
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceSOS
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceScreenshot
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceShake
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceSiriVoiceControl
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceSpeakScreen
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceSpotlightSearch
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceSysdiagnose
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceToggleDock
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceTripleClick
|| __DATA_CONST.__const _AXSSwitchControlMenuItemDeviceVolumeUpDown
|| __DATA_CONST.__const _AXSSwitchControlMenuItemEdit
|| __DATA_CONST.__const _AXSSwitchControlMenuItemElementSpecificActions
|| __DATA_CONST.__const _AXSSwitchControlMenuItemEnabledKey
|| __DATA_CONST.__const _AXSSwitchControlMenuItemEscape
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGestures
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesActiveHoldAndDrag
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesDoubleTap
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesDrag
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesFingers
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesFlick
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesForceTouch
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesFreehand
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesHoldAndDrag
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesPan
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesPinch
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesSaved
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesTap
|| __DATA_CONST.__const _AXSSwitchControlMenuItemGesturesTapAndHold
|| __DATA_CONST.__const _AXSSwitchControlMenuItemHome
|| __DATA_CONST.__const _AXSSwitchControlMenuItemIncrementDecrement
|| __DATA_CONST.__const _AXSSwitchControlMenuItemItemMenu
|| __DATA_CONST.__const _AXSSwitchControlMenuItemLockItemMenu
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControls
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsFastForward
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsNextTrack
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsPlayPause
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsPreviousTrack
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsRewind
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsSkipBackward
|| __DATA_CONST.__const _AXSSwitchControlMenuItemMediaControlsSkipForward
|| __DATA_CONST.__const _AXSSwitchControlMenuItemNavigationMode
|| __DATA_CONST.__const _AXSSwitchControlMenuItemRecipes
|| __DATA_CONST.__const _AXSSwitchControlMenuItemRefineSelection
|| __DATA_CONST.__const _AXSSwitchControlMenuItemScroll
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettings
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettingsGroupsOnOff
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettingsMoveMenu
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettingsSoundOnOff
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettingsSpeechOnOff
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSettingsSpeedUpDown
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSideApp
|| __DATA_CONST.__const _AXSSwitchControlMenuItemSiriShortcuts
|| __DATA_CONST.__const _AXSSwitchControlMenuItemToggleDictation
|| __DATA_CONST.__const _AXSSwitchControlMenuItemTypeKey
|| __DATA_CONST.__const _AXServerPayloadKeyAssertionHolderIdentifier
|| __DATA_CONST.__const _AXServerPayloadKeyAssertionType
|| __DATA_CONST.__const _AXSessionIsLoginSessionUpdatedNotification
|| __DATA_CONST.__const _AXSpeakTypingPayloadKeyCharacter
|| __DATA_CONST.__const _AXSpeakTypingPayloadKeyPrediction
|| __DATA_CONST.__const _AXSpeakTypingPayloadKeyWord
|| __DATA_CONST.__const _AXSpeechAssetUpdaterName
|| __DATA_CONST.__const _AXSpringBoardActionKeyActiveInterfaceOrientation
|| __DATA_CONST.__const _AXSpringBoardActionKeyActiveInterfaceOrientationUpdateDuration
|| __DATA_CONST.__const _AXSpringBoardActionKeyUserInterfaceStyle
|| __DATA_CONST.__const _AXSpringBoardServerServiceName
|| __DATA_CONST.__const _AXSpringBoardUserChangedAudioRouteNotification
|| __DATA_CONST.__const _AXStartListeningForVoiceOverVibrationActivationNotification
|| __DATA_CONST.__const _AXStartVoiceOverSwipeDetectionActivationNotification
|| __DATA_CONST.__const _AXStatusBarStyleChangedNotification
|| __DATA_CONST.__const _AXStickyKeysUIServerKeyStateKey
|| __DATA_CONST.__const _AXStickyKeysUIServerKeycodeKey
|| __DATA_CONST.__const _AXStickyKeysUIServerUsagePageKey
|| __DATA_CONST.__const _AXSwiftIntEncoding
|| __DATA_CONST.__const _AXSwitchControlServerServiceName
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionCenterTap
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionExit
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionGesture
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionHoldAtPoint
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionLeftToRightSwipe
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionRightToLeftSwipe
|| __DATA_CONST.__const _AXSwitchRecipeMappingActionSelect
|| __DATA_CONST.__const _AXSwitchRecipeMenuIconIdentifierCenterTap
|| __DATA_CONST.__const _AXSwitchRecipeMenuIconIdentifierHoldPoint
|| __DATA_CONST.__const _AXSwitchRecipeMenuIconIdentifierTapPoint
|| __DATA_CONST.__const _AXSwitchRecipeMenuIconIdentifierTurnPages
|| __DATA_CONST.__const _AXSystemAppServerDiedNotification
|| __DATA_CONST.__const _AXSystemAppServerReadyNotification
|| __DATA_CONST.__const _AXSystemLangaugeDataKeyCurrentName
|| __DATA_CONST.__const _AXSystemLangaugeDataKeyLanguageID
|| __DATA_CONST.__const _AXSystemLangaugeDataKeyLocalName
|| __DATA_CONST.__const _AXSystemLangaugeDataKeySupportedBySystem
|| __DATA_CONST.__const _AXSystemLangaugeDataKeySupportedByVoiceOver
|| __DATA_CONST.__const _AXSystemLangaugeReportKeyLanguage
|| __DATA_CONST.__const _AXSystemLangaugeReportKeyLocale
|| __DATA_CONST.__const _AXUIServerAngelProcessName
|| __DATA_CONST.__const _AXUIServerProcessName
|| __DATA_CONST.__const _AXUnitTestingException
|| __DATA_CONST.__const _AXUtilitiesAuxiliaryBundle
|| __DATA_CONST.__const _AXVoiceOverAutomationKeyRotorNames
|| __DATA_CONST.__const _AXVoiceOverImageExplorerElementInfoData
|| __DATA_CONST.__const _AXVoiceOverImageExplorerVisionResultData
|| __DATA_CONST.__const _AXVoiceOverServerServiceName
|| __DATA_CONST.__const _AXZoomRequiresAlertInBuddyNotification
|| __DATA_CONST.__const _AX_AXSettingsShortcutsPluginName
|| __DATA_CONST.__const _AX_AssistiveTouchProcessName
|| __DATA_CONST.__const _AX_BackBoardBundleName
|| __DATA_CONST.__const _AX_BridgeBundleName
|| __DATA_CONST.__const _AX_CameraBundleName
|| __DATA_CONST.__const _AX_CarPlayBundleName
|| __DATA_CONST.__const _AX_CarouselBundleName
|| __DATA_CONST.__const _AX_CheckerBoardBundleName
|| __DATA_CONST.__const _AX_ChronodBundleName
|| __DATA_CONST.__const _AX_ClipViewServiceName
|| __DATA_CONST.__const _AX_ClockFaceBundleName
|| __DATA_CONST.__const _AX_CommandAndControlProcessName
|| __DATA_CONST.__const _AX_ControlCenterBundleName
|| __DATA_CONST.__const _AX_ControlCenterUIBundleName
|| __DATA_CONST.__const _AX_ControlCenterUIKitBundleName
|| __DATA_CONST.__const _AX_FaceTimeBundleName
|| __DATA_CONST.__const _AX_FullKeyboardAccessBundleName
|| __DATA_CONST.__const _AX_HeadboardBundleName
|| __DATA_CONST.__const _AX_InputUIBundleName
|| __DATA_CONST.__const _AX_LiveTranscriptionBundleName
|| __DATA_CONST.__const _AX_MailCompositionServiceName
|| __DATA_CONST.__const _AX_MobileMailBundleName
|| __DATA_CONST.__const _AX_MobilePhoneBundleName
|| __DATA_CONST.__const _AX_MobileSMSBundleName
|| __DATA_CONST.__const _AX_MusicBundleName
|| __DATA_CONST.__const _AX_NanoSetupBundleName
|| __DATA_CONST.__const _AX_NewsBundleName
|| __DATA_CONST.__const _AX_PineBoardBundleName
|| __DATA_CONST.__const _AX_PosterBoardBundleName
|| __DATA_CONST.__const _AX_PreBoardBundleName
|| __DATA_CONST.__const _AX_PreferencesBundleName
|| __DATA_CONST.__const _AX_PurpleBuddyBundleName
|| __DATA_CONST.__const _AX_QuickLookdBundleName
|| __DATA_CONST.__const _AX_SafariBundleName
|| __DATA_CONST.__const _AX_ShortcutsBundleName
|| __DATA_CONST.__const _AX_SidecarBundleName
|| __DATA_CONST.__const _AX_SiriBundleName
|| __DATA_CONST.__const _AX_SketchBoardBundleName
|| __DATA_CONST.__const _AX_SpotlightBundleName
|| __DATA_CONST.__const _AX_SpringBoardBundleName
|| __DATA_CONST.__const _AX_TVIdleScreenProcessName
|| __DATA_CONST.__const _AX_TVMLKitBundleName
|| __DATA_CONST.__const _AX_UIKitBundleName
|| __DATA_CONST.__const _AX_VoiceOverTouchBundleName
|| __DATA_CONST.__const _AX_VoiceShortcutsBundleName
|| __DATA_CONST.__const _AX_WebContentPrefixBundleName
|| __DATA_CONST.__const _AX_WebGPUPrefixBundleName
|| __DATA_CONST.__const _AX_iBooksBundleName
|| __DATA_CONST.__const _FKAKeyboardCommandTypeSiriShortcut
|| __DATA_CONST.__const _SCATSwitchSourceATVRemote
|| __DATA_CONST.__const _SCATSwitchSourceAccessibility
|| __DATA_CONST.__const _SCATSwitchSourceAutomation
|| __DATA_CONST.__const _SCATSwitchSourceBackTap
|| __DATA_CONST.__const _SCATSwitchSourceCamera
|| __DATA_CONST.__const _SCATSwitchSourceGamepad
|| __DATA_CONST.__const _SCATSwitchSourceHandGestures
|| __DATA_CONST.__const _SCATSwitchSourceKeyboard
|| __DATA_CONST.__const _SCATSwitchSourceMFI
|| __DATA_CONST.__const _SCATSwitchSourceMIDI
|| __DATA_CONST.__const _SCATSwitchSourceMotionTracker
|| __DATA_CONST.__const _SCATSwitchSourceRemote
|| __DATA_CONST.__const _SCATSwitchSourceScreen
|| __DATA_CONST.__const _SCATSwitchSourceSound
|| __DATA_CONST.__const _SCATSwitchTypeOptional
|| __DATA_CONST.__const _SCATSwitchTypeRequired
|| __DATA_CONST.__const _SoundDetectionModelCreationIdentifierKey
|| __DATA_CONST.__const _UIAXZoomAdjustmentChange
|| __DATA_CONST.__const ___AXXIPC_AXIPCAsyncRequestReply_subsystem
|| __DATA_CONST.__const ___AXXIPC_AXIPCServer_subsystem
|| __DATA_CONST.__const _kAXAssetVoiceFormatVersionKey
|| __DATA_CONST.__const _kAXClassicSiriVoiceAssetType
|| __DATA_CONST.__const _kAXCombinedNashvilleVoiceId
|| __DATA_CONST.__const _kAXCombinedVoiceAssetType
|| __DATA_CONST.__const _kAXCustomVoiceVersionKey
|| __DATA_CONST.__const _kAXGryphonVoiceAssetType
|| __DATA_CONST.__const _kAXMacinTalkVoiceAssetType
|| __DATA_CONST.__const _kAXSAssistiveTouchEyeTrackerCustomizedSettingsPreference
|| __DATA_CONST.__const _kAXSAssistiveTouchMouseCustomizedClickActionsPreference
|| __DATA_CONST.__const _kAXSCallAudioRoutingAutoAnswerEnabledPreference
|| __DATA_CONST.__const _kAXSCallAudioRoutingAutoAnswerPreference
|| __DATA_CONST.__const _kAXSEnabledSoundDetectionStatePreference
|| __DATA_CONST.__const _kAXSEnabledSoundDetectionTypesPreference
|| __DATA_CONST.__const _kAXSSoundDetectionSnoozeDictionary
|| __DATA_CONST.__const _kAXSSoundDetectionSupportedTypes
|| __DATA_CONST.__const _kAXSTapToSpeakTimeAvailabilityPreference
|| __DATA_CONST.__const _kAXSTapToSpeakTimeEnabledPreference
|| __DATA_CONST.__const _kAXSTapticTimeInternalFlashScreenEnabled
|| __DATA_CONST.__const _kAXSTouchAccommodationsAllowsSwipeGesturesToBypassPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsEnabledPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsHoldDurationEnabledPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsHoldDurationPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsHoldDurationSwipeGestureMinimumDistancePreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsIgnoreRepeatDurationPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsIgnoreRepeatEnabledPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsTapActivationMethodPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsTapActivationTimeoutPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsTripleClickConfirmedPreference
|| __DATA_CONST.__const _kAXSTouchAccommodationsUsageConfirmedPreference
|| __DATA_CONST.__const _kAXSUltronEnabledPreference
|| __DATA_CONST.__const _kAXSUltronRunningStatus
|| __DATA_CONST.__const _kAXSVoiceOverFlashlightNotificationsEnabled
|| __DATA_CONST.__const _kAXSVoiceOverHardwareTypingFeedbackPreference
|| __DATA_CONST.__const _kAXSVoiceOverKeyboardContinuousPathStartTimeoutPreference
|| __DATA_CONST.__const _kAXSVoiceOverKeyboardModifierChoicePreference
|| __DATA_CONST.__const _kAXSVoiceOverPhoneticsFeedbackPreference
|| __DATA_CONST.__const _kAXSVoiceOverTapticChimesAvailability
|| __DATA_CONST.__const _kAXSVoiceOverTapticChimesEnabled
|| __DATA_CONST.__const _kAXSVoiceOverTapticChimesFrequencyEncoding
|| __DATA_CONST.__const _kAXSVoiceOverTapticChimesSoundType
|| __DATA_CONST.__const _kAXSVoiceOverTapticTimeEncoding
|| __DATA_CONST.__const _kAXSVoiceOverTapticTimeMode
|| __DATA_CONST.__const _kAXSVoiceOverTapticTimeSpeed
|| __DATA_CONST.__const _kAXSVoiceOverUseActiveSiriVoice
|| __DATA_CONST.__const _kAXSVoiceOverUseDigitalCrownNavigation
|| __DATA_CONST.__const _kAXSVoiceOverWatchBrailleAlertDisplayDuration
|| __DATA_CONST.__const _kAXSVoiceOverWatchBrailleInputMode
|| __DATA_CONST.__const _kAXSVoiceOverWatchBrailleOutputMode
|| __DATA_CONST.__const _kAXSVoiceOverWatchBrailleTableIdentifier
|| __DATA_CONST.__const _kAXSVoiceOverWatchBrailleWordWrap
|| __DATA_CONST.__const _kAXSVoiceOverWatchGrade2AutoTranslate
|| __DATA_CONST.__const _kAXSVoiceOverWatchHandGestures
|| __DATA_CONST.__const _kAXSVoiceOverWatchHandGesturesActionCustomizations
|| __DATA_CONST.__const _kAXSZoomWatchHandGestures
|| __DATA_CONST.__const _kAXSZoomWatchHandGesturesActionCustomizations
|| __DATA_CONST.__const _kSBSLockStateNotifyKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXActionCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXBackBoardServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXBinaryMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXCapabilityManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXCodeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXCodeLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXEventRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXIPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXIPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXIPCOutstandingAsyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXIPCServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXIPCServerMessageHandlerContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXLogColorizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXLoggingSubsystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSpringBoardActionHandlerHolder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSpringBoardServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSubsystemAXNotifications
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXSystemAppServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXUtilitiesCommonStringRuntimeOverrides
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXValidationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NonRetainedObjectContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AXCodeItemDecoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__AXDyldImageMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXActionCoalescer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXBackBoardServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXBinaryMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXCapabilityManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXCodeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXCodeLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXEventRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXIPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXIPCMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXIPCOutstandingAsyncRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXIPCServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXIPCServerMessageHandlerContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXLogColorizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXLoggingSubsystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSpringBoardActionHandlerHolder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSpringBoardServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSubsystemAXNotifications
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXSystemAppServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXUtilitiesCommonStringRuntimeOverrides
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXValidationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NonRetainedObjectContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AXCodeItemDecoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__AXDyldImageMonitor
|| __TEXT.__const _AXBackBoardServerClarityUIAdminPasscodeLength
|| __TEXT.__const _AXCodeItemLoadOrderBundle
|| __TEXT.__const _AXCodeItemLoadOrderDylib
|| __TEXT.__const _AXCodeItemLoadOrderFramework
|| __TEXT.__const _AXCodeItemLoadOrderMainProgram
|| __TEXT.__const _AXCodeItemLoadOrderNotApplicable
|| __TEXT.__const _AXMIDIControlAllNotesOff
|| __TEXT.__const _AXMIDIControlAllSoundOff
|| __TEXT.__const _AXMIDIControlLocalControl
|| __TEXT.__const _AXMIDIControlMonoModeOn
|| __TEXT.__const _AXMIDIControlOmniModeOff
|| __TEXT.__const _AXMIDIControlOmniModeOn
|| __TEXT.__const _AXMIDIControlPolyModeOn
|| __TEXT.__const _AXMIDIControlResetAllControllers
|| __TEXT.__const _AXMIDIHalfToneStepsPerOctave
|| __TEXT.__const _AXMagnifierLiveZoomMaximumLevel
|| __TEXT.__const _AXMagnifierLiveZoomMinimumLevel
|| __TEXT.__const _AXSGuidedAccessAutoLockTimeMirrorSystem
|| __TEXT.__const _AXSGuidedAccessAutoLockTimeNever
|| __TEXT.__const _AXSwitchRecipeHoldPointNone
|| __TEXT.__const _AXSwitchRecipeTimeoutNone
|| __TEXT.__const _AXVoiceOverVibrationDisplayTimeout
|| __TEXT.__const _kAXCombinedNashvilleFormatVersion
|| __TEXT.__const _kAXNashvilleFormatVersion
|| __TEXT.__const _kAXSAssistiveTouchActionRepeatIntervalMax
|| __TEXT.__const _kAXSAssistiveTouchActionRepeatIntervalMin
|| __TEXT.__const _kAXSAssistiveTouchAxisSweepSpeedIncrement
|| __TEXT.__const _kAXSAssistiveTouchAxisSweepSpeedMaxUserPreference
|| __TEXT.__const _kAXSAssistiveTouchAxisSweepSpeedMin
|| __TEXT.__const _kAXSAssistiveTouchAxisSweepSpeedMinUserPreference
|| __TEXT.__const _kAXSAssistiveTouchDelayAfterInputMax
|| __TEXT.__const _kAXSAssistiveTouchDelayAfterInputMin
|| __TEXT.__const _kAXSAssistiveTouchInputCoalescingDurationMax
|| __TEXT.__const _kAXSAssistiveTouchInputCoalescingDurationMin
|| __TEXT.__const _kAXSAssistiveTouchInputHoldDurationMax
|| __TEXT.__const _kAXSAssistiveTouchInputHoldDurationMin
|| __TEXT.__const _kAXSAssistiveTouchLongPressDurationDefault
|| __TEXT.__const _kAXSAssistiveTouchLongPressDurationMax
|| __TEXT.__const _kAXSAssistiveTouchLongPressDurationMin
|| __TEXT.__const _kAXSAssistiveTouchMaxScanCycleValue
|| __TEXT.__const _kAXSAssistiveTouchMinScanCycleValue
|| __TEXT.__const _kAXSAssistiveTouchMotionTrackerSmoothingBufferSizeDefault
|| __TEXT.__const _kAXSAssistiveTouchMotionTrackerSmoothingBufferSizeMaxUserPreference
|| __TEXT.__const _kAXSAssistiveTouchMotionTrackerSmoothingBufferSizeMinUserPreference
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlActivationTimeoutDefault
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlActivationTimeoutMax
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlActivationTimeoutMin
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlMovementToleranceDefault
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlMovementToleranceMax
|| __TEXT.__const _kAXSAssistiveTouchMouseDwellControlMovementToleranceMin
|| __TEXT.__const _kAXSAssistiveTouchMousePointerSizeMultiplierDefault
|| __TEXT.__const _kAXSAssistiveTouchMousePointerSizeMultiplierMax
|| __TEXT.__const _kAXSAssistiveTouchMousePointerSizeMultiplierMin
|| __TEXT.__const _kAXSAssistiveTouchMousePointerTimeoutDefault
|| __TEXT.__const _kAXSAssistiveTouchMousePointerTimeoutMax
|| __TEXT.__const _kAXSAssistiveTouchMousePointerTimeoutMin
|| __TEXT.__const _kAXSAssistiveTouchScanTimeoutMax
|| __TEXT.__const _kAXSAssistiveTouchScanTimeoutMin
|| __TEXT.__const _kAXSAssistiveTouchSpeedDefault
|| __TEXT.__const _kAXSAssistiveTouchSpeedMax
|| __TEXT.__const _kAXSAssistiveTouchSpeedMin
|| __TEXT.__const _kAXSAssistiveTouchStepIntervalMax
|| __TEXT.__const _kAXSAssistiveTouchStepIntervalMin
|| __TEXT.__const _kAXSCallAudioRoutingAutoAnswerMax
|| __TEXT.__const _kAXSCallAudioRoutingAutoAnswerMin
|| __TEXT.__const _kAXSCallAudioRoutingAutoAnswerStep
|| __TEXT.__const _kAXSCharacterFeedbackDelayDurationMax
|| __TEXT.__const _kAXSCharacterFeedbackDelayDurationMin
|| __TEXT.__const _kAXSFullKeyboardAccessFocusRingTimeoutDefault
|| __TEXT.__const _kAXSFullKeyboardAccessFocusRingTimeoutMax
|| __TEXT.__const _kAXSFullKeyboardAccessFocusRingTimeoutMin
|| __TEXT.__const _kAXSSwitchControlDwellTimeMax
|| __TEXT.__const _kAXSSwitchControlDwellTimeMin
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellActivationTimeoutDefault
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellActivationTimeoutMax
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellActivationTimeoutMin
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellMovementToleranceDefault
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellMovementToleranceMax
|| __TEXT.__const _kAXSSwitchControlHeadTrackingDwellMovementToleranceMin
|| __TEXT.__const _kAXSTouchAccommodationsHoldDurationMax
|| __TEXT.__const _kAXSTouchAccommodationsHoldDurationMin
|| __TEXT.__const _kAXSTouchAccommodationsHoldDurationSwipeGestureMinimumDistanceDefault
|| __TEXT.__const _kAXSTouchAccommodationsIgnoreRepeatDurationMax
|| __TEXT.__const _kAXSTouchAccommodationsIgnoreRepeatDurationMin
|| __TEXT.__const _kAXSTouchAccommodationsSwipeGestureMinimumDistanceMax
|| __TEXT.__const _kAXSTouchAccommodationsSwipeGestureMinimumDistanceMin
|| __TEXT.__const _kAXSTouchAccommodationsTapActivationTimeoutMax
|| __TEXT.__const _kAXSTouchAccommodationsTapActivationTimeoutMin
|| __TEXT.__const _kAXSVoiceOverBrailleAlertDisplayIntervalDefault
|| __TEXT.__const _kAXSVoiceOverBrailleAutoAdvanceDurationDefault
|| __TEXT.__const _kAXSVoiceOverBrailleAutoAdvanceDurationMax
|| __TEXT.__const _kAXSVoiceOverBrailleAutoAdvanceDurationMin
|| __TEXT.__const _kAXSVoiceOverBrailleDisplayIntervalMax
|| __TEXT.__const _kAXSVoiceOverBrailleDisplayIntervalMin
|| __TEXT.__const _kAXSVoiceOverBrailleKeyDebounceTimeoutMax
|| __TEXT.__const _kAXSVoiceOverBrailleKeyDebounceTimeoutMin
|| __TEXT.__const _kAXSVoiceOverContinuousPathStartTimeoutDefault
|| __TEXT.__const _kAXSVoiceOverContinuousPathStartTimeoutMax
|| __TEXT.__const _kAXSVoiceOverContinuousPathStartTimeoutMin
|| __TEXT.__const _kAXSVoiceOverDefaultDescribedMediaPreference
|| __TEXT.__const _kAXSVoiceOverDoubleTapIntervalMax
|| __TEXT.__const _kAXSVoiceOverDoubleTapIntervalMin
|| __TEXT.__const _kAXSZWPanningStyleDefault
|| __TEXT.__const _kAXSZWPanningStyleFirst
|| __TEXT.__const _kAXSZWPanningStyleLast
|| __TEXT.__const _kHoverTextEventFilterPriority
|| __TEXT.__const _kSwitchControlAutoTapTimeoutMax
|| __TEXT.__const _kSwitchControlAutoTapTimeoutMin
|| __TEXT.__const _kSwitchControlHeadTrackingMovementToleranceInJoystickModeMaxUserPreference
|| __TEXT.__const _kSwitchControlHeadTrackingMovementToleranceInJoystickModeMinUserPreference
|| __TEXT.__const _kSwitchControlHeadTrackingSensitivityMaxUserPreference
|| __TEXT.__const _kSwitchControlHeadTrackingSensitivityMinUserPreference
|| __TEXT.__text _AXAirPodsB494LocalizedStringForKey
|| __TEXT.__text _AXAirPodsB698LocalizedStringForKey
|| __TEXT.__text _AXAirPodsLocalizedStringForKey
|| __TEXT.__text _AXAppNameForBundleId
|| __TEXT.__text _AXApplicationGetMainBundleIdentifier
|| __TEXT.__text _AXApplicationIsForeground
|| __TEXT.__text _AXApplicationIsViewService
|| __TEXT.__text _AXAssertMainThreadCallback
|| __TEXT.__text _AXAssistiveTouchAccessibilityIcons
|| __TEXT.__text _AXAssistiveTouchChangeIconCount
|| __TEXT.__text _AXAssistiveTouchCustomGesturesIcons
|| __TEXT.__text _AXAssistiveTouchDefaultIconTypeForMouseButton
|| __TEXT.__text _AXAssistiveTouchDefaultLaserIconTypeForMouseButton
|| __TEXT.__text _AXAssistiveTouchDwellIcons
|| __TEXT.__text _AXAssistiveTouchIcons
|| __TEXT.__text _AXAssistiveTouchInsertIconsIntoDictionary
|| __TEXT.__text _AXAssistiveTouchLocationsForLayout
|| __TEXT.__text _AXAssistiveTouchNamedLayout
|| __TEXT.__text _AXAssistiveTouchRemoveIconsFromDictionary
|| __TEXT.__text _AXAssistiveTouchScannerColorDescription
|| __TEXT.__text _AXAssistiveTouchScrollIcons
|| __TEXT.__text _AXAssistiveTouchSiriShortcutsIcons
|| __TEXT.__text _AXAssistiveTouchSystemIcons
|| __TEXT.__text _AXAssitiveTouchPosition
|| __TEXT.__text _AXAudioHDMIChannelLabelDescription
|| __TEXT.__text _AXBTRouteIsAirpods
|| __TEXT.__text _AXBundleIDForAuditToken
|| __TEXT.__text _AXBundleIDForPID
|| __TEXT.__text _AXCArrayCreate
|| __TEXT.__text _AXCArrayCreateWithCoder
|| __TEXT.__text _AXCArrayEncodeWithCoder
|| __TEXT.__text _AXCArrayGetCount
|| __TEXT.__text _AXCArrayGetTypeID
|| __TEXT.__text _AXCArrayRemoveAllElements
|| __TEXT.__text _AXCArraySort
|| __TEXT.__text _AXCanQueryGraphicServicesFunctions
|| __TEXT.__text _AXCharactersEqual
|| __TEXT.__text _AXClientsForSiriResource
|| __TEXT.__text _AXClientsForSiriVoice
|| __TEXT.__text _AXClockTimeStringForDate
|| __TEXT.__text _AXClockTimeStringForDateIncludingSeconds
|| __TEXT.__text _AXClockTimeVoiceOverSpokenStringForDate
|| __TEXT.__text _AXClockTimeVoiceOverSpokenStringForWatchFaces
|| __TEXT.__text _AXColorizeFormatLog
|| __TEXT.__text _AXCopyUnicodeDescriptionStringForCharacter
|| __TEXT.__text _AXCurrentProcessExistsInLoginSessionSBOnly
|| __TEXT.__text _AXCurrentRootDescription
|| __TEXT.__text _AXCurrentRootLooksLikeBNI
|| __TEXT.__text _AXCurrentTimeForWatchFaces
|| __TEXT.__text _AXDateFromStringWithFormat
|| __TEXT.__text _AXDateStringForFormat
|| __TEXT.__text _AXDateStringForFormatWithLocale
|| __TEXT.__text _AXDateStringForFormatWithLocaleInCalendarAndTimeZone
|| __TEXT.__text _AXDateStringForFormatWithTimeZone
|| __TEXT.__text _AXDebugDescriptionForAXHandEventType
|| __TEXT.__text _AXDenormalizePoint
|| __TEXT.__text _AXDeviceCanArmApplePay
|| __TEXT.__text _AXDeviceGetLocalizedShortModelName
|| __TEXT.__text _AXDeviceGetMainScreenBounds
|| __TEXT.__text _AXDeviceGetMainScreenPixelBounds
|| __TEXT.__text _AXDeviceGetMainScreenScaleFactor
|| __TEXT.__text _AXDeviceHas3DTouch
|| __TEXT.__text _AXDeviceHasForcePress3dTouch
|| __TEXT.__text _AXDeviceHasHomeButton
|| __TEXT.__text _AXDeviceHasJindo
|| __TEXT.__text _AXDeviceHasLongPress3dTouch
|| __TEXT.__text _AXDeviceHasPearl
|| __TEXT.__text _AXDeviceHasSideButton
|| __TEXT.__text _AXDeviceHasSystemPasscode
|| __TEXT.__text _AXDeviceHasTopButton
|| __TEXT.__text _AXDeviceHasTopTouchIDButton
|| __TEXT.__text _AXDeviceIsJ5XX
|| __TEXT.__text _AXDeviceIsMultiUser
|| __TEXT.__text _AXDeviceIsRingerSwitchAvailable
|| __TEXT.__text _AXDeviceIsSOSAvailable
|| __TEXT.__text _AXDeviceIsSiriAvailable
|| __TEXT.__text _AXDeviceIsUnlocked
|| __TEXT.__text _AXDeviceIsVoiceControlAvailable
|| __TEXT.__text _AXDevicePrimeDisplayManager
|| __TEXT.__text _AXDeviceRegisterForDisplayUpdates
|| __TEXT.__text _AXDeviceSizeMM
|| __TEXT.__text _AXDeviceSupportsAudiogramIngestion
|| __TEXT.__text _AXDeviceSupportsBackTap
|| __TEXT.__text _AXDeviceSupportsBootSound
|| __TEXT.__text _AXDeviceSupportsComfortSounds
|| __TEXT.__text _AXDeviceSupportsConcurrentHPLPMics
|| __TEXT.__text _AXDeviceSupportsDetectionMode
|| __TEXT.__text _AXDeviceSupportsHeadTracking
|| __TEXT.__text _AXDeviceSupportsHoverText
|| __TEXT.__text _AXDeviceSupportsLaneChange
|| __TEXT.__text _AXDeviceSupportsManyTouches
|| __TEXT.__text _AXDeviceSupportsPencil
|| __TEXT.__text _AXDeviceSupportsQuickNote
|| __TEXT.__text _AXDeviceSupportsSecureDoubleClick
|| __TEXT.__text _AXDeviceSupportsSideApp
|| __TEXT.__text _AXDeviceSupportsVoiceTriggers
|| __TEXT.__text _AXDeviceSupportsWatchRemoteScreen
|| __TEXT.__text _AXDeviceUnregisterForDisplayUpdates
|| __TEXT.__text _AXDurationForDurationString
|| __TEXT.__text _AXDurationStringForDuration
|| __TEXT.__text _AXDurationStringForDurationWithSeconds
|| __TEXT.__text _AXEventTypeIsHomeButtonPress
|| __TEXT.__text _AXEventTypeIsKeyboardKey
|| __TEXT.__text _AXEventTypeIsLockButtonPress
|| __TEXT.__text _AXEventTypeIsMotion
|| __TEXT.__text _AXEventTypeIsOrientationChange
|| __TEXT.__text _AXEventTypeIsRingerSwitchStateChange
|| __TEXT.__text _AXEventTypeIsShake
|| __TEXT.__text _AXEventTypeIsTouch
|| __TEXT.__text _AXEventTypeIsVolumeButtonPress
|| __TEXT.__text _AXEventTypeShouldLetBackboardProcess
|| __TEXT.__text _AXFallbackDeviceSizeMM
|| __TEXT.__text _AXForceTouchAvailableAndEnabled
|| __TEXT.__text _AXForceTouchThreshold
|| __TEXT.__text _AXForceTouchThresholdPeek
|| __TEXT.__text _AXForceTouchThresholdPeekPopMidpoint
|| __TEXT.__text _AXForceTouchThresholdPop
|| __TEXT.__text _AXFormatAndListWithElements
|| __TEXT.__text _AXGetComponentsInNamedSiriVoiceIdentifier
|| __TEXT.__text _AXGetComponentsInNashvilleVoiceIdentifier
|| __TEXT.__text _AXGetComponentsInOldSiriVoiceIdentifier
|| __TEXT.__text _AXGetComponentsInSiriVoiceIdentifier
|| __TEXT.__text _AXGetNonCombinedVoiceIdentifierForCombinedVoiceIdentifier
|| __TEXT.__text _AXGuaranteedMutableArray
|| __TEXT.__text _AXGuidedAccessGetAvailability
|| __TEXT.__text _AXHasCapability
|| __TEXT.__text _AXHomeClickHapticsSupported
|| __TEXT.__text _AXInCheckerBoardScenario
|| __TEXT.__text _AXInPreboardScenario
|| __TEXT.__text _AXIncrefSendRight
|| __TEXT.__text _AXInstalledAppIDs
|| __TEXT.__text _AXInstalledApps
|| __TEXT.__text _AXInvertColorsDarkModeDetectionJavascript
|| __TEXT.__text _AXIsAnyPreferredLanguageRTL
|| __TEXT.__text _AXIsBuddyCompleted
|| __TEXT.__text _AXIsInternalInstall
|| __TEXT.__text _AXIsLanguageRTL
|| __TEXT.__text _AXIsLookingGlassAvailable
|| __TEXT.__text _AXLanguageCanonicalFormToGeneralLanguage
|| __TEXT.__text _AXLanguageConvertToCanonicalForm
|| __TEXT.__text _AXLanguageIsSpeakableEmojiString
|| __TEXT.__text _AXLanguageSupportedBySynthesizer
|| __TEXT.__text _AXLoadAccessibilityDebuggerIfNeeded
|| __TEXT.__text _AXLoadPunctuationTable
|| __TEXT.__text _AXLocDuration
|| __TEXT.__text _AXLocStringForDeviceVariant
|| __TEXT.__text _AXLocStringKeyForExclusiveModel
|| __TEXT.__text _AXLocStringKeyForHomeButton
|| __TEXT.__text _AXLocStringKeyForHomeButtonAndExclusiveModel
|| __TEXT.__text _AXLocStringKeyForHomeButtonAndPlatform
|| __TEXT.__text _AXLocStringKeyForModel
|| __TEXT.__text _AXLocalizeDurationTime
|| __TEXT.__text _AXLocalizedString
|| __TEXT.__text _AXLocalizedStringForHandGestureEventUsage
|| __TEXT.__text _AXLocalizedStringWithLocale
|| __TEXT.__text _AXLogShouldLogWithLevelAndFacility
|| __TEXT.__text _AXLoggerForFacility
|| __TEXT.__text _AXMIDIDeviceForEndpoint
|| __TEXT.__text _AXMIDIDeviceForEntity
|| __TEXT.__text _AXMIDIEntityForEndpoint
|| __TEXT.__text _AXMIDILogError
|| __TEXT.__text _AXMIDINoteOctaveForNoteOrdinal
|| __TEXT.__text _AXMIDINoteValueForNoteOrdinal
|| __TEXT.__text _AXMachTimeToNanoseconds
|| __TEXT.__text _AXNormalizePoint
|| __TEXT.__text _AXOSLogLevelFromAXLogLevel
|| __TEXT.__text _AXParameterizedLocalizedString
|| __TEXT.__text _AXPerformPrivilegedAttributedStringTransformation
|| __TEXT.__text _AXPerformPrivilegedAttributedStringTransformations
|| __TEXT.__text _AXPerformSafeBlock
|| __TEXT.__text _AXPerformSafeBlockWithErrorHandler
|| __TEXT.__text _AXPerformValidationChecks
|| __TEXT.__text _AXPidForLaunchLabel
|| __TEXT.__text _AXPositionalStyleDurationStringForDuration
|| __TEXT.__text _AXPrintLine
|| __TEXT.__text _AXPrintString
|| __TEXT.__text _AXProcessGetCurrentUserDescription
|| __TEXT.__text _AXProcessGetName
|| __TEXT.__text _AXProcessIsAXSettingsShortcutsPlugin
|| __TEXT.__text _AXProcessIsAXUIServer
|| __TEXT.__text _AXProcessIsAssistiveTouch
|| __TEXT.__text _AXProcessIsBackboard
|| __TEXT.__text _AXProcessIsCarPlay
|| __TEXT.__text _AXProcessIsCarousel
|| __TEXT.__text _AXProcessIsCheckerBoard
|| __TEXT.__text _AXProcessIsChronod
|| __TEXT.__text _AXProcessIsClockFace
|| __TEXT.__text _AXProcessIsCommandAndControl
|| __TEXT.__text _AXProcessIsFullKeyboardAccess
|| __TEXT.__text _AXProcessIsInCallService
|| __TEXT.__text _AXProcessIsMobileMail
|| __TEXT.__text _AXProcessIsPineBoard
|| __TEXT.__text _AXProcessIsPosterBoard
|| __TEXT.__text _AXProcessIsPreBoard
|| __TEXT.__text _AXProcessIsPreferences
|| __TEXT.__text _AXProcessIsRTTNotificationContentExtension
|| __TEXT.__text _AXProcessIsSafari
|| __TEXT.__text _AXProcessIsSetup
|| __TEXT.__text _AXProcessIsSiri
|| __TEXT.__text _AXProcessIsSpotlight
|| __TEXT.__text _AXProcessIsSpringBoard
|| __TEXT.__text _AXProcessIsSystemApplication
|| __TEXT.__text _AXProcessIsVoiceOverTouch
|| __TEXT.__text _AXProcessRequestMobileUserPrivileges
|| __TEXT.__text _AXProcessRequestNonRootUserPrivilegesIfNeeded
|| __TEXT.__text _AXRGBToHSB
|| __TEXT.__text _AXResourceActivelyUsed
|| __TEXT.__text _AXRetainAutorelease
|| __TEXT.__text _AXSAssistiveTouchCursorColor
|| __TEXT.__text _AXSBTitleForMedusaGesture
|| __TEXT.__text _AXSLinearValueForLogarithmicValue
|| __TEXT.__text _AXSLogarithmicValueForLinearValue
|| __TEXT.__text _AXSVoiceOverTapticChimesVolumeForSoundType
|| __TEXT.__text _AXSafeClassFromString
|| __TEXT.__text _AXSafeEqual
|| __TEXT.__text _AXSafeProtocolFromString
|| __TEXT.__text _AXSessionIsLoginSession
|| __TEXT.__text _AXShortDurationStringForDuration
|| __TEXT.__text _AXShouldAskBeforeDisablingTransportMethods
|| __TEXT.__text _AXShouldCrashOnValidationErrors
|| __TEXT.__text _AXShouldHideVoiceOverRotorItemFromSettings
|| __TEXT.__text _AXShouldLogValidationErrors
|| __TEXT.__text _AXShouldReportValidationErrors
|| __TEXT.__text _AXShouldShowSwitchControlHeadTrackingModeFromSettings
|| __TEXT.__text _AXShowInstalledApp
|| __TEXT.__text _AXSiriDisplayNameForIdentifier
|| __TEXT.__text _AXSpawnProcess
|| __TEXT.__text _AXSpeakHighlightColor
|| __TEXT.__text _AXSpeechUtilitiesAssetIsInstalled
|| __TEXT.__text _AXSpeechUtilitiesClassicSiriAssets
|| __TEXT.__text _AXSpeechUtilitiesDownloadCatalogForAssetType
|| __TEXT.__text _AXSpeechUtilitiesGryphonAssets
|| __TEXT.__text _AXSpeechUtilitiesLocalMacinTalkAsset
|| __TEXT.__text _AXSpeechUtilitiesLocalMacinTalkAssetURL
|| __TEXT.__text _AXSpeechUtilitiesMacinTalkAssets
|| __TEXT.__text _AXStringForTimeSince
|| __TEXT.__text _AXSupportedVoiceOverLanguages
|| __TEXT.__text _AXSwapSpeechSettingsIdentifiers
|| __TEXT.__text _AXSwitchRecipeMappingActionAllowsLongPress
|| __TEXT.__text _AXSwitchRecipeMappingNameForAction
|| __TEXT.__text _AXSwitchRecipeMappingSwitchUUIDs
|| __TEXT.__text _AXSystemGetAccessibilityBundlesDirectoryPath
|| __TEXT.__text _AXSystemGetInternalAccessibilityBundlesDirectoryPath
|| __TEXT.__text _AXSystemGetRootDirectoryPath
|| __TEXT.__text _AXSystemGetVersion
|| __TEXT.__text _AXSystemIsBrighton
|| __TEXT.__text _AXSystemIsInnsbruck
|| __TEXT.__text _AXSystemIsSundance
|| __TEXT.__text _AXSystemLanguageReport
|| __TEXT.__text _AXSystemVersionEqualTo
|| __TEXT.__text _AXSystemVersionEqualToOrGreaterThan
|| __TEXT.__text _AXSystemVersionEqualToOrLessThan
|| __TEXT.__text _AXTapticTimeIntervalForTapType
|| __TEXT.__text _AXTemperatureFromIntegerInUnits
|| __TEXT.__text _AXTemperatureFromStringInUnits
|| __TEXT.__text _AXTimeAgoStringForTimeSince
|| __TEXT.__text _AXTimeStringForType
|| __TEXT.__text _AXUnicodeCodePointForCharacterString
|| __TEXT.__text _AXUtilitiesFrameworkBundle
|| __TEXT.__text _AXVOLocalizedStringForCharacter
|| __TEXT.__text _AXVOLocalizedStringForCharacterWithPrefix
|| __TEXT.__text _AXVOLocalizedStringFreePunctuationTable
|| __TEXT.__text _AXVOLocalizedStringLoadPunctuationTable
|| __TEXT.__text _AXVSVoiceAssetFromVoiceIdentifier
|| __TEXT.__text _AXVSVoiceAssetsAreEqual
|| __TEXT.__text _AXValidationManagerSendExceptionForSafeValueKey
|| __TEXT.__text _AXVoiceActivelyUsed
|| __TEXT.__text _AXVoiceNameForVoiceId
|| __TEXT.__text _AXVoiceOverLocString
|| __TEXT.__text _AXVoiceOverMediaDescriptionLocString
|| __TEXT.__text _AXVoiceOverRotorLocString
|| __TEXT.__text _AXWillLogDebugWithFacility
|| __TEXT.__text _AXWillLogInfoWithFacility
|| __TEXT.__text _AXZoomAllLensEffects
|| __TEXT.__text _AXZoomAllLensModes
|| __TEXT.__text _AXZoomDockPositions
|| __TEXT.__text _AXZoomLensDefault
|| __TEXT.__text _AXZoomUserSelectableLensModes
|| __TEXT.__text _AX_CGCreatePathPathWithUniformInset
|| __TEXT.__text _AX_CGPathCopyDataRepresentation
|| __TEXT.__text _AX_CGPathCreateWithDataRepresentation
|| __TEXT.__text _AX_CGPathEnumerateElementsUsingBlock
|| __TEXT.__text _AX_CGPathGetDescription
|| __TEXT.__text _AX_CGPathGetIntersectionPointWithOtherPath
|| __TEXT.__text _AX_CGPathGetIntersectionPointWithRect
|| __TEXT.__text _AX_CGPathGetNumberOfElements
|| __TEXT.__text _AX_CGPathGetPointForElementAtIndex
|| __TEXT.__text _AX_CGPathGetStartingAndEndingPoints
|| __TEXT.__text _AX_CGPointFromString
|| __TEXT.__text _AX_CGPointGetDistanceToPoint
|| __TEXT.__text _AX_CGPointGetMidpointOfAllPoints
|| __TEXT.__text _AX_CGPointGetMidpointToPoint
|| __TEXT.__text _AX_CGPointGetOffsetAlongVectorWithDistance
|| __TEXT.__text _AX_CGPointInset
|| __TEXT.__text _AX_CGRectAlmostEqualToRect
|| __TEXT.__text _AX_CGRectBySubtractingRect
|| __TEXT.__text _AX_CGRectGetCenter
|| __TEXT.__text _AX_CGRectToOrientation
|| __TEXT.__text _AX_CGRectToOrientationWithScreenBounds
|| __TEXT.__text _AX_EventRepresentationContainsAnyTouchesInPath
|| __TEXT.__text _AX_EventRepresentationContainsOnlyPathsForContextID
|| __TEXT.__text _AXkMobileKeyBagLockStatusNotificationID
|| __TEXT.__text _InitializeMaps
|| __TEXT.__text _MSHCreateMIGServerSource
|| __TEXT.__text _MSHCreateMachServerSource
|| __TEXT.__text _MSHGetMachPortFromSource
|| __TEXT.__text _MSHMIGSourceSetNoSendersCallback
|| __TEXT.__text _MSHMIGSourceSetSendOnceCallback
|| __TEXT.__text _SCATATVRemoteDeviceMatchingDictionary
|| __TEXT.__text _SCATATVRemoteSwitchActions
|| __TEXT.__text _SCATActionDescription
|| __TEXT.__text _SCATAddOrUpdateCameraSwitchToSettings
|| __TEXT.__text _SCATAddOrUpdateSwitchToSettings
|| __TEXT.__text _SCATHeadTrackingSwitchActions
|| __TEXT.__text _SCATIsATVRemoteButtonEvent
|| __TEXT.__text _SCATIsATVRemoteButtonSwitchCandidateEvent
|| __TEXT.__text _SCATIsGamepadKeyEvent
|| __TEXT.__text _SCATIsKeyboardKeyEvent
|| __TEXT.__text _SCATIsMFIButtonDownValue
|| __TEXT.__text _SCATLocStringForAction
|| __TEXT.__text _SCATNextAvailableSwitchName
|| __TEXT.__text _SCATRemoveSwitchFromSettings
|| __TEXT.__text _SCATScannerSwitchActions
|| __TEXT.__text _SCATSwitchConfigurationRendersDeviceUnusable
|| __TEXT.__text _SCATSwitchExistsWithName
|| __TEXT.__text _SCATSwitchesWithSource
|| __TEXT.__text _SCATSwitchesWithType
|| __TEXT.__text _SCATSystemSwitchActions
|| __TEXT.__text _UIAXAppendValidationError
|| __TEXT.__text _UIAccessibilityIsGuidedAccessLockedToCurrentApp
|| __TEXT.__text _UIAccessibilitySymbolWithName
|| __TEXT.__text __AXAVSpeechSynthesisVoiceQualityFromSiriIdentifier
|| __TEXT.__text __AXAssert
|| __TEXT.__text __AXAssitiveTouchPositionForDefault1
|| __TEXT.__text __AXAssitiveTouchPositionForDefault2
|| __TEXT.__text __AXAssitiveTouchPositionForDefault3
|| __TEXT.__text __AXAssitiveTouchPositionForDefault4
|| __TEXT.__text __AXAssitiveTouchPositionForDefault5
|| __TEXT.__text __AXAssitiveTouchPositionForDefault6
|| __TEXT.__text __AXAssitiveTouchPositionForDefault7
|| __TEXT.__text __AXAssitiveTouchPositionForDefault8
|| __TEXT.__text __AXCArrayGetUnderlyingArray
|| __TEXT.__text __AXCArrayPrepareForInsertingElementAtIndex
|| __TEXT.__text __AXCachedDateFormatterForFormat
|| __TEXT.__text __AXDictForLanguageData
|| __TEXT.__text __AXDurationStringForDuration
|| __TEXT.__text __AXEnumeratePunctuationDictionary
|| __TEXT.__text __AXEventKeyInfoSetSimulatedFNKeyDown
|| __TEXT.__text __AXFeatureSupportsNonSightedUsage
|| __TEXT.__text __AXFeatureSupportsPhotoDescriptions
|| __TEXT.__text __AXFeatureSupportsScrollBars
|| __TEXT.__text __AXGSEventConvertFromMachTime
|| __TEXT.__text __AXHandleDisplayManagerInitialized
|| __TEXT.__text __AXIPCAsyncRequestReply_server
|| __TEXT.__text __AXIPCAsyncRequestReply_server_routine
|| __TEXT.__text __AXIPCAsyncSendDataReply
|| __TEXT.__text __AXIPCReplyToAsyncRequest
|| __TEXT.__text __AXIPCSendData
|| __TEXT.__text __AXIPCSendDataWithAsyncReply
|| __TEXT.__text __AXIPCServer_server
|| __TEXT.__text __AXIPCServer_server_routine
|| __TEXT.__text __AXIPCSimpleSendData
|| __TEXT.__text __AXIPCSimpleSendDataWithFencePort
|| __TEXT.__text __AXInitializeSafeSwiftValueSupport
|| __TEXT.__text __AXLocTables
|| __TEXT.__text __AXLogWithFacility
|| __TEXT.__text __AXLogWithFacilityV
|| __TEXT.__text __AXMIDIBooleanProperty
|| __TEXT.__text __AXMIDIHandleErrorOSStatus
|| __TEXT.__text __AXMIDIHandlePropertyLookupError
|| __TEXT.__text __AXMIDIIntegerProperty
|| __TEXT.__text __AXMIDIStringProperty
|| __TEXT.__text __AXSSetTestBuddyData
|| __TEXT.__text __AXSpeechUtilitiesAssets
|| __TEXT.__text __AXSpeechUtilitiesAssetsSortedByVersion
|| __TEXT.__text __AXStringForArgs
|| __TEXT.__text __AXStringFromAVSpeechSynthesisVoiceQuality
|| __TEXT.__text __AXTriggerStackshot
|| __TEXT.__text __AXVoiceOverRotorLocKeyForRotorName
|| __TEXT.__text __GetSubEventInfoFromDigitizerEventForPathEvent
|| __TEXT.__text __GetTouchLocus
|| __TEXT.__text __GetTouchUserIdentifier
|| __TEXT.__text ___AXXIPCReplyToAsyncRequest
|| __TEXT.__text ___AXXIPCSendData
|| __TEXT.__text ___AXXIPCSendDataWithAsyncReply
|| __TEXT.__text ___AXXIPCSimpleSendData
|| __TEXT.__text ___AXXIPCSimpleSendDataWithFencePort
|| __TEXT.__text ___UIAccessibilityCastAsClass
|| __TEXT.__text ___UIAccessibilityCastAsProtocol
|| __TEXT.__text ___UIAccessibilityCastAsSafeCategory
|| __TEXT.__text ___UIAccessibilityCastAsSwiftStruct
|| __TEXT.__text ___UIAccessibilityGetAssociatedBool
|| __TEXT.__text ___UIAccessibilityGetAssociatedCGFloat
|| __TEXT.__text ___UIAccessibilityGetAssociatedCGPoint
|| __TEXT.__text ___UIAccessibilityGetAssociatedCGRect
|| __TEXT.__text ___UIAccessibilityGetAssociatedInt
|| __TEXT.__text ___UIAccessibilityGetAssociatedInteger
|| __TEXT.__text ___UIAccessibilityGetAssociatedLong
|| __TEXT.__text ___UIAccessibilityGetAssociatedNonRetainedObject
|| __TEXT.__text ___UIAccessibilityGetAssociatedObject
|| __TEXT.__text ___UIAccessibilityGetAssociatedRange
|| __TEXT.__text ___UIAccessibilityGetAssociatedTimeInterval
|| __TEXT.__text ___UIAccessibilityGetAssociatedUnsignedInt
|| __TEXT.__text ___UIAccessibilityGetAssociatedUnsignedInteger
|| __TEXT.__text ___UIAccessibilityHandleValidationErrorWithDescription
|| __TEXT.__text ___UIAccessibilitySafeClass
|| __TEXT.__text ___UIAccessibilitySetAssociatedBool
|| __TEXT.__text ___UIAccessibilitySetAssociatedCGFloat
|| __TEXT.__text ___UIAccessibilitySetAssociatedCGPoint
|| __TEXT.__text ___UIAccessibilitySetAssociatedCGRect
|| __TEXT.__text ___UIAccessibilitySetAssociatedCopiedObject
|| __TEXT.__text ___UIAccessibilitySetAssociatedInt
|| __TEXT.__text ___UIAccessibilitySetAssociatedInteger
|| __TEXT.__text ___UIAccessibilitySetAssociatedLong
|| __TEXT.__text ___UIAccessibilitySetAssociatedNonRetainedObject
|| __TEXT.__text ___UIAccessibilitySetAssociatedObject
|| __TEXT.__text ___UIAccessibilitySetAssociatedRange
|| __TEXT.__text ___UIAccessibilitySetAssociatedTimeInterval
|| __TEXT.__text ___UIAccessibilitySetAssociatedUnsignedInt
|| __TEXT.__text ___UIAccessibilitySetAssociatedUnsignedInteger
|| __TEXT.__text ___ax_verbose_encode_with_type_encoding_group_class
|| __TEXT.__text __calculateThresholds
|| __TEXT.__text __handleMultiplerChanged
|| __TEXT.__text __icuDisplayName
|| __TEXT.__text __icuDisplayNameForLocale
|| __TEXT.__text __registerForSensitivityChangedNotifications
|| __TEXT.__text _assistiveTouchNormalizedMotionTrackerSmoothingBufferSizeForUserPreference
|| __TEXT.__text _assistiveTouchUserPreferenceForNormalizedMotionTrackerSmoothingBufferSize
|| __TEXT.__text _assistiveTouchXYScannerNormalizedUserPreferenceForSpeed
|| __TEXT.__text _assistiveTouchXYScannerSpeedForNormalizedUserPreference
|| __TEXT.__text _switchControlNormalizedHeadTrackingMovementToleranceInJoystickModeForUserPreference
|| __TEXT.__text _switchControlNormalizedHeadTrackingSensitivityForUserPreference
|| __TEXT.__text _switchControlUserPreferenceForNormalizedHeadTrackingMovementToleranceInJoystickMode
|| __TEXT.__text _switchControlUserPreferenceForNormalizedHeadTrackingSensitivity
__ AVConference: _OBJC_CLASS_$_AVCCaptionsClient
__ AVFAudio: _AVAudioSessionCategoryMultiRoute
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _AVAudioSessionCategoryVoiceOver
__ AVFAudio: _AVAudioSessionPortAirPlay
__ AVFAudio: _AVAudioSessionPortHDMI
__ AVFAudio: _AVSpeechUtteranceMaximumSpeechRate
__ AVFAudio: _AVSpeechUtteranceMinimumSpeechRate
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisVoice
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesizer
__ AVFAudio: _OBJC_CLASS_$_AVSpeechUtterance
__ AVFAudio: _OBJC_METACLASS_$_AVSpeechSynthesisVoice
__ AXCoreUtilities: _ASTLogCommon
__ AXCoreUtilities: _ASTLogMouse
__ AXCoreUtilities: _AXAccessibilityBundlesDirectory
__ AXCoreUtilities: _AXAccessibilityPrivateFrameworksDirectory
__ AXCoreUtilities: _AXCLanguageCanonicalFormToGeneralLanguage
__ AXCoreUtilities: _AXCLanguageCanonicalFormToGeneralLanguageUsingFallback
__ AXCoreUtilities: _AXCLanguageConvertToCanonicalForm
__ AXCoreUtilities: _AXCRemapLanguageCodeToFallbackIfNeccessary
__ AXCoreUtilities: _AXDeviceIsAudioAccessory
__ AXCoreUtilities: _AXDeviceIsD22
__ AXCoreUtilities: _AXDeviceIsD32
__ AXCoreUtilities: _AXDeviceIsD33
__ AXCoreUtilities: _AXDeviceIsD42
__ AXCoreUtilities: _AXDeviceIsD43
__ AXCoreUtilities: _AXDeviceIsPad
__ AXCoreUtilities: _AXDeviceIsPhone
__ AXCoreUtilities: _AXDeviceIsPod
__ AXCoreUtilities: _AXDeviceIsTV
__ AXCoreUtilities: _AXDeviceIsWatch
__ AXCoreUtilities: _AXDeviceSupportsSiri
__ AXCoreUtilities: _AXFormatFloat
__ AXCoreUtilities: _AXFormatFloatWithPercentage
__ AXCoreUtilities: _AXFormatInteger
__ AXCoreUtilities: _AXInternalAccessibilityBundlesDirectory
__ AXCoreUtilities: _AXLogAirPodSettings
__ AXCoreUtilities: _AXLogAppAccessibility
__ AXCoreUtilities: _AXLogAssertions
__ AXCoreUtilities: _AXLogBackboardServer
__ AXCoreUtilities: _AXLogCommon
__ AXCoreUtilities: _AXLogDisplay
__ AXCoreUtilities: _AXLogEventTap
__ AXCoreUtilities: _AXLogIPC
__ AXCoreUtilities: _AXLogLoading
__ AXCoreUtilities: _AXLogMIDI
__ AXCoreUtilities: _AXLogOrator
__ AXCoreUtilities: _AXLogSettings
__ AXCoreUtilities: _AXLogSiriShortcuts
__ AXCoreUtilities: _AXLogSpeechAssetDownload
__ AXCoreUtilities: _AXLogSpokenContentTextProcessing
__ AXCoreUtilities: _AXLogSpringboardServer
__ AXCoreUtilities: _AXLogSystemApp
__ AXCoreUtilities: _AXLogTapticTime
__ AXCoreUtilities: _AXLogTwiceRemoteScreen
__ AXCoreUtilities: _AXLogValidations
__ AXCoreUtilities: _AXPerformBlockAsynchronouslyOnMainThread
__ AXCoreUtilities: _AXPerformBlockOnMainThread
__ AXCoreUtilities: _AXPerformBlockOnMainThreadAfterDelay
__ AXCoreUtilities: _AXPerformBlockSynchronouslyOnMainThread
__ AXCoreUtilities: _AXRuntimeCheck_HasANE
__ AXCoreUtilities: _AXRuntimeCheck_SupportsNearbyDeviceControl
__ AXCoreUtilities: _AXSetThreadPriority
__ AXCoreUtilities: _AXSystemRootDirectory
__ AXCoreUtilities: _AXTTSLogCommon
__ AXCoreUtilities: _AXVoiceServicesTTSResourcesDirectory
__ AXCoreUtilities: _CLFLogCommon
__ AXCoreUtilities: _FKALogCommon
__ AXCoreUtilities: _GAXLogBlockedTouches
__ AXCoreUtilities: _GAXLogCommon
__ AXCoreUtilities: _GAXLogTimeRestrictions
__ AXCoreUtilities: _HTLogCommon
__ AXCoreUtilities: _OBJC_CLASS_$_AXAccessQueue
__ AXCoreUtilities: _OBJC_CLASS_$_AXAccessQueueTimer
__ AXCoreUtilities: _OBJC_CLASS_$_AXBaseSettings
__ AXCoreUtilities: _OBJC_CLASS_$_AXDispatchTimer
__ AXCoreUtilities: _OBJC_METACLASS_$_AXBaseSettings
__ AXCoreUtilities: _SWCHLogHW
__ AXCoreUtilities: _VOTLogCommon
__ AXRuntime: _AXDoesRequestingClientDeserveAutomation
__ AXRuntime: _AXUIAccessibilitySpeechAttributeLanguage
__ AXRuntime: _AXUIAccessibilitySpeechAttributePhonemeSubstitution
__ AXRuntime: _AXUIAccessibilitySpeechAttributePitch
__ AXRuntime: _AXUIAccessibilitySpeechAttributePoorMansPronunciationHelp
__ AXRuntime: _AXUIAccessibilitySpeechAttributePunctuation
__ AXRuntime: _AXUIAccessibilitySpeechAttributeSpellOut
__ AXRuntime: _AXUIAccessibilitySpeechAttributeTextualContext
__ AXRuntime: _OBJC_CLASS_$_AXAttributedString
__ AXRuntime: _OBJC_CLASS_$_AXElement
__ AXRuntime: _UIAccessibilityTokenAccessibilityLanguage
__ AXRuntime: _UIAccessibilityTokenAlternateInterpretation
__ AXRuntime: _UIAccessibilityTokenAssistantString
__ AXRuntime: _UIAccessibilityTokenAttachment
__ AXRuntime: _UIAccessibilityTokenCharacterSuppressFlavorSpeech
__ AXRuntime: _UIAccessibilityTokenCharacterTimeToSpeak
__ AXRuntime: _UIAccessibilityTokenClockTime
__ AXRuntime: _UIAccessibilityTokenConvertTextToLowercase
__ AXRuntime: _UIAccessibilityTokenDate
__ AXRuntime: _UIAccessibilityTokenDescriptionOverrideLanguage
__ AXRuntime: _UIAccessibilityTokenDurationTimeHHMM
__ AXRuntime: _UIAccessibilityTokenDurationTimeHHMMSS
__ AXRuntime: _UIAccessibilityTokenDurationTimeMMSS
__ AXRuntime: _UIAccessibilityTokenHighPitch
__ AXRuntime: _UIAccessibilityTokenHighlightedText
__ AXRuntime: _UIAccessibilityTokenIgnoreLeadingCommas
__ AXRuntime: _UIAccessibilityTokenIgnoreSubstitution
__ AXRuntime: _UIAccessibilityTokenLanguage
__ AXRuntime: _UIAccessibilityTokenLink
__ AXRuntime: _UIAccessibilityTokenListItemIdentifier
__ AXRuntime: _UIAccessibilityTokenListItemLabel
__ AXRuntime: _UIAccessibilityTokenLiteralText
__ AXRuntime: _UIAccessibilityTokenLiteralTextRanges
__ AXRuntime: _UIAccessibilityTokenLowPitch
__ AXRuntime: _UIAccessibilityTokenMathEquation
__ AXRuntime: _UIAccessibilityTokenNSLanguage
__ AXRuntime: _UIAccessibilityTokenNumber
__ AXRuntime: _UIAccessibilityTokenOverrideLanguage
__ AXRuntime: _UIAccessibilityTokenPhoneContext
__ AXRuntime: _UIAccessibilityTokenPhoneNumber
__ AXRuntime: _UIAccessibilityTokenPhoneticText
__ AXRuntime: _UIAccessibilityTokenPlaceholder
__ AXRuntime: _UIAccessibilityTokenPlaySoundSimultaneously
__ AXRuntime: _UIAccessibilityTokenProactiveSuggestionSlot
__ AXRuntime: _UIAccessibilityTokenScreenDimmed
__ AXRuntime: _UIAccessibilityTokenSecure
__ AXRuntime: _UIAccessibilityTokenShareSheetTextSlot
__ AXRuntime: _UIAccessibilityTokenShareSheetTransportSlot
__ AXRuntime: _UIAccessibilityTokenSocialAttributionIds
__ AXRuntime: _UIAccessibilityTokenSpeakAsCharacter
__ AXRuntime: _UIAccessibilityTokenSpeakDigits
__ AXRuntime: _UIAccessibilityTokenSpeakLiteralPunctuation
__ AXRuntime: _UIAccessibilityTokenSpeakNoPunctuation
__ AXRuntime: _UIAccessibilityTokenSpeakPunctuationCounts
__ AXRuntime: _UIAccessibilityTokenTelephonyCarrierString
__ AXRuntime: _UIAccessibilityTokenTextSubstitution
__ AXRuntime: __AXUIElementCreateAppElementWithPid
__ AXRuntime: ___AXStringForVariables
__ AXRuntime: _kAXHeaderTrait
__ Accessibility: _OBJC_CLASS_$_AXCustomContent
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifier3DTouch
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierActivateAccessibilityShortcut
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierActivateSOS
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierActivateSiri
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierActivateTypeahead
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierArmApplePay
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGestures
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGoHome
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGoToFirstElement
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGoToLastElement
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGoToNextElement
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierGoToPreviousElement
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierHelp
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierLockScreen
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveDown
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveInsideNext
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveInsidePrevious
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveLeft
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveRight
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierMoveUp
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierOpenContextualMenu
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPerformDefaultAction
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPerformEscape
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPerformSysdiagnose
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPinchIn
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPinchOut
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierPressAndLift
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierRebootDevice
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierRotateDevice
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierRotateLeft
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierRotateRight
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierShowAccessibilityActions
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierSwipeDown
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierSwipeLeft
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierSwipeRight
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierSwipeUp
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleAppLibrary
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleAppSwitcher
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleControlCenter
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleDock
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleNotificationCenter
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTogglePassthroughMode
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierToggleQuickNote
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTwoFingerPressAndLift
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTwoFingerSwipeDown
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTwoFingerSwipeLeft
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTwoFingerSwipeRight
__ AccessibilitySharedSupport: _AXSSKeyboardCommandIdentifierTwoFingerSwipeUp
__ AccessibilitySharedSupport: _AXSSVoiceOverPunctuationGroupAll
__ AccessibilitySharedSupport: _AXSSVoiceOverTextualContextSourceCode
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSKeyChord
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSKeyboardCommand
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSKeyboardCommandCategory
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSKeyboardCommandMap
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSWordDescriptionManager
__ AccessibilitySharedSupport: _OBJC_METACLASS_$_AXSSKeyboardCommand
__ AssistantServices: _OBJC_CLASS_$_AFConnection
__ AssistantServices: _OBJC_CLASS_$_AFLocalization
__ AssistantServices: _OBJC_CLASS_$_AFPreferences
__ AudioToolbox: _AudioServicesCreateSystemSoundIDWithOptions
__ AudioToolbox: _AudioServicesDisposeSystemSoundID
__ AudioToolbox: _AudioServicesPlaySystemSoundWithVibration
__ AudioToolbox: _AudioServicesStopSystemSound
__ AudioToolbox: _kAudioServicesCreateSystemSoundIDOptionVibrationPatternKey
__ BackBoardServices: _BKSHIDDigitizerEventIsFirstTouchDown
__ BackBoardServices: _BKSHIDEventGetBaseAttributes
__ BackBoardServices: _BKSHIDEventGetDigitizerAttributes
__ BackBoardServices: _BKSHIDEventSetDigitizerInfo
__ BackBoardServices: _BKSHIDEventSetSimpleInfo
__ BackBoardServices: _BKSHIDServicesGetHardwareKeyboardLanguage
__ BaseBoard: _OBJC_CLASS_$_BSSimpleAssertion
__ BluetoothManager: _OBJC_CLASS_$_BluetoothManager
__ CoreEmoji: _CEMEnumerateEmojiTokensInStringWithBlock
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyLocalizedStringTableForLocalization
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleGetSystem
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFMachPortGetPort
__ CoreFoundation: _CFMachPortInvalidate
__ CoreFoundation: _CFMachPortSetInvalidationCallBack
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateDeepCopy
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopRunSpecific
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceGetContext
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringLowercase
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSLocaleCollationIdentifier
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleIdentifier
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleScriptCode
__ CoreFoundation: _NSLocaleVariantCode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMachPort
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathApply
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathContainsPoint
__ CoreGraphics: _CGPathCreateCopy
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathIsEmpty
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectStandardize
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreMIDI: _MIDIClientCreateWithBlock
__ CoreMIDI: _MIDIClientDispose
__ CoreMIDI: _MIDIDeviceGetEntity
__ CoreMIDI: _MIDIDeviceGetNumberOfEntities
__ CoreMIDI: _MIDIEndpointGetEntity
__ CoreMIDI: _MIDIEntityGetDestination
__ CoreMIDI: _MIDIEntityGetDevice
__ CoreMIDI: _MIDIEntityGetNumberOfDestinations
__ CoreMIDI: _MIDIEntityGetNumberOfSources
__ CoreMIDI: _MIDIEntityGetSource
__ CoreMIDI: _MIDIGetDevice
__ CoreMIDI: _MIDIGetNumberOfDevices
__ CoreMIDI: _MIDIInputPortCreateWithBlock
__ CoreMIDI: _MIDIObjectGetIntegerProperty
__ CoreMIDI: _MIDIObjectGetStringProperty
__ CoreMIDI: _MIDIPortConnectSource
__ CoreMIDI: _MIDIPortDisconnectSource
__ CoreMIDI: _kMIDIPropertyDeviceID
__ CoreMIDI: _kMIDIPropertyDriverOwner
__ CoreMIDI: _kMIDIPropertyIsBroadcast
__ CoreMIDI: _kMIDIPropertyIsEmbeddedEntity
__ CoreMIDI: _kMIDIPropertyManufacturer
__ CoreMIDI: _kMIDIPropertyModel
__ CoreMIDI: _kMIDIPropertyName
__ CoreMIDI: _kMIDIPropertyOffline
__ CoreMIDI: _kMIDIPropertyPrivate
__ CoreMIDI: _kMIDIPropertySupportsGeneralMIDI
__ CoreMIDI: _kMIDIPropertySupportsMMC
__ CoreMIDI: _kMIDIPropertyTransmitChannels
__ CoreMIDI: _kMIDIPropertyUniqueID
__ CoreNLP: _NLLanguageIdentifierConsumeString
__ CoreNLP: _NLLanguageIdentifierCreate
__ CoreNLP: _NLLanguageIdentifierGetTopHypotheses
__ CoreNLP: _NLLanguageIdentifierRelease
__ CoreNLP: _NLLanguageIdentifierSetLanguageHints
__ CoreNLP: _NLNamedEntityOrganizationName
__ CoreNLP: _NLNamedEntityPersonalName
__ CoreNLP: _NLNamedEntityPlaceName
__ CoreNLP: _NLTaggerCopyTagForCurrentToken
__ CoreNLP: _NLTaggerCreate
__ CoreNLP: _NLTaggerEnumerateTokens
__ CoreNLP: _NLTaggerSetString
__ CoreNLP: _kNLTagSchemeNamedEntity
__ CoreNLP: _kNLTagSchemeScript
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSClassFromString
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSOpenStepRootDirectory
__ Foundation: _NSPointFromString
__ Foundation: _NSProtocolFromString
__ Foundation: _NSRectFromString
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromPoint
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMeasurementFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: __NSDefaultFileSystemEncoding
__ GraphicsServices: _GSEventGetHardwareKeyboardType
__ GraphicsServices: _GSKeyboardCreate
__ GraphicsServices: _GSKeyboardGetHWKeyboardType
__ GraphicsServices: _GSKeyboardGetKeyCodeForChar
__ GraphicsServices: _GSKeyboardGetLiveModifierState
__ GraphicsServices: _GSKeyboardRelease
__ GraphicsServices: _GSKeyboardTranslateKeyExtended
__ GraphicsServices: _GSMainScreenPixelSize
__ GraphicsServices: _GSMainScreenScaleFactor
__ IOKit: _IOHIDDeviceClose
__ IOKit: _IOHIDDeviceConformsTo
__ IOKit: _IOHIDDeviceGetProperty
__ IOKit: _IOHIDDeviceGetTypeID
__ IOKit: _IOHIDDeviceOpen
__ IOKit: _IOHIDDeviceRegisterInputValueCallback
__ IOKit: _IOHIDDeviceUnscheduleFromRunLoop
__ IOKit: _IOHIDElementGetUsage
__ IOKit: _IOHIDElementGetUsagePage
__ IOKit: _IOHIDEventAppendEvent
__ IOKit: _IOHIDEventCreateAccelerometerEventWithType
__ IOKit: _IOHIDEventCreateDigitizerEvent
__ IOKit: _IOHIDEventCreateDigitizerFingerEventWithQuality
__ IOKit: _IOHIDEventCreateDigitizerStylusEventWithPolarOrientation
__ IOKit: _IOHIDEventCreateKeyboardEvent
__ IOKit: _IOHIDEventCreateMouseEvent
__ IOKit: _IOHIDEventCreateScrollEvent
__ IOKit: _IOHIDEventCreateVendorDefinedEvent
__ IOKit: _IOHIDEventGetAttributeDataLength
__ IOKit: _IOHIDEventGetAttributeDataPtr
__ IOKit: _IOHIDEventGetChildren
__ IOKit: _IOHIDEventGetDataValue
__ IOKit: _IOHIDEventGetEventFlags
__ IOKit: _IOHIDEventGetFloatMultiple
__ IOKit: _IOHIDEventGetFloatValue
__ IOKit: _IOHIDEventGetIntegerValue
__ IOKit: _IOHIDEventGetPhase
__ IOKit: _IOHIDEventGetSenderID
__ IOKit: _IOHIDEventGetTimeStamp
__ IOKit: _IOHIDEventGetType
__ IOKit: _IOHIDEventSetAttributeData
__ IOKit: _IOHIDEventSetEventFlags
__ IOKit: _IOHIDEventSetFloatValue
__ IOKit: _IOHIDEventSetIntegerValue
__ IOKit: _IOHIDEventSetSenderID
__ IOKit: _IOHIDEventSystemClientCopyServices
__ IOKit: _IOHIDEventSystemClientCreate
__ IOKit: _IOHIDEventSystemClientDispatchEvent
__ IOKit: _IOHIDEventSystemClientRegisterDeviceMatchingBlock
__ IOKit: _IOHIDEventSystemClientRegisterEventFilterCallbackWithPriority
__ IOKit: _IOHIDEventSystemClientScheduleWithRunLoop
__ IOKit: _IOHIDEventSystemClientSetMatching
__ IOKit: _IOHIDEventSystemClientSetMatchingMultiple
__ IOKit: _IOHIDEventSystemClientUnregisterEventFilterCallback
__ IOKit: _IOHIDEventSystemClientUnscheduleWithRunLoop
__ IOKit: _IOHIDManagerClose
__ IOKit: _IOHIDManagerCopyDevices
__ IOKit: _IOHIDManagerCreate
__ IOKit: _IOHIDManagerOpen
__ IOKit: _IOHIDManagerRegisterDeviceMatchingCallback
__ IOKit: _IOHIDManagerRegisterDeviceRemovalCallback
__ IOKit: _IOHIDManagerScheduleWithRunLoop
__ IOKit: _IOHIDManagerSetDeviceMatching
__ IOKit: _IOHIDManagerSetDeviceMatchingMultiple
__ IOKit: _IOHIDManagerUnscheduleFromRunLoop
__ IOKit: _IOHIDServiceClientCopyProperty
__ IOKit: _IOHIDValueGetElement
__ IOKit: _IOHIDValueGetIntegerValue
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ IdleTimerServices: _OBJC_CLASS_$_ITIdleTimerState
__ LanguageModeling: _LMLanguageModelConditionalProbability
__ LanguageModeling: _LMLanguageModelCreate
__ LanguageModeling: _LMLanguageModelCreateStringForTokenID
__ LanguageModeling: _LMLanguageModelEnumerateCompletionsForPrefixWithBlock
__ LanguageModeling: _LMLanguageModelEnumeratePredictionsWithBlock
__ LanguageModeling: _LMLanguageModelGetTokenIDForString
__ LanguageModeling: _LMLanguageModelRelease
__ LanguageModeling: _kLMLanguageModelLocaleKey
__ ManagedConfiguration: _MCFeatureAllowVoiceDialing
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MediaAccessibility: _MADisplayFilterPrefGetCategoryEnabled
__ MediaAccessibility: _MADisplayFilterPrefSetCategoryEnabled
__ MobileAsset: _MAStringForMADownloadResult
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ MobileBluetooth: _BTAccessoryManagerAddCallbacks
__ MobileBluetooth: _BTAccessoryManagerGetControlCommand
__ MobileBluetooth: _BTAccessoryManagerGetDefault
__ MobileBluetooth: _BTAccessoryManagerSendControlCommand
__ MobileBluetooth: _BTDeviceAddressFromString
__ MobileBluetooth: _BTDeviceFromAddress
__ MobileBluetooth: _BTDeviceGetAddressString
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTLocalDeviceGetConnectedDevices
__ MobileBluetooth: _BTLocalDeviceGetDefault
__ MobileBluetooth: _BTServiceAddCallbacks
__ MobileBluetooth: _BTServiceRemoveCallbacks
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileBluetooth: _BTSessionDetachWithQueue
__ MobileKeyBag: _MKBDeviceFormattedForContentProtection
__ MobileKeyBag: _MKBGetDeviceLockState
__ MobileKeyBag: _MKBUserSessionIsLoginWindow
__ MobileKeyBag: _MKBUserTypeDeviceMode
__ MobileKeyBag: _kMKBDeviceModeKey
__ MobileKeyBag: _kMKBDeviceModeMultiUser
__ MobileKeyBag: _kMobileKeyBagLockStatusNotifyToken
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateWithAuditToken
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlways
__ Security: _kSecAttrAccount
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ SoftLinking: __sl_dlopen
__ TextInput: _OBJC_CLASS_$_TIAccessibilityClient
__ TextInput: _TIPreferencesControllerChangedNotification
__ TextToSpeech: _OBJC_CLASS_$_TTSAXResourceManager
__ TextToSpeech: _OBJC_CLASS_$_TTSAXResourceMigrationUtilities
__ TextToSpeech: _OBJC_CLASS_$_TTSAudioSessionChannel
__ TextToSpeech: _OBJC_CLASS_$_TTSLocaleUtilities
__ TextToSpeech: _OBJC_CLASS_$_TTSSiriAssetManager
__ TextToSpeech: _OBJC_CLASS_$_TTSSpeechSynthesizer
__ TextToSpeech: _OBJC_CLASS_$_TTSSubstitution
__ TextToSpeech: _OBJC_CLASS_$_TTSSynthesisProviderVoiceManager
__ TextToSpeech: _TTSAssetKeyCustomVoiceName
__ TextToSpeech: _TTSSupportsNeuralVoices
__ TextToSpeech: _kTTSGryphonVoiceIdentifierPrefix
__ TextToSpeech: _kTTSNeuralVoiceIdentifierPrefix
__ TextToSpeech: _kTTSSiriVoiceIdentifierPrefix
__ TextToSpeech: _kTTSSystemVoiceIdentifierPrefix
__ libAXSafeCategoryBundle.dylib: _AXSetUIAXReportSenderErrorLoggerFunction
__ libAXSafeCategoryBundle.dylib: _AXSetValidationErrorLoggingFunction
__ libAXSpeechManager.dylib: _AXAlexVoiceIdentifier
__ libAXSpeechManager.dylib: _AXNeuralSiriFemaleVoiceIdentifier
__ libAXSpeechManager.dylib: _AXNeuralSiriMaleVoiceIdentifier
__ libAXSpeechManager.dylib: _AXSiriFemaleVoiceIdentifier
__ libAXSpeechManager.dylib: _AXSiriMaleVoiceIdentifier
__ libAXSpeechManager.dylib: _AXSpeechLanguageCanonicalFormToGeneralLanguage
__ libAXSpeechManager.dylib: _OBJC_CLASS_$_AXEmojiUtilities
__ libAXSpeechManager.dylib: _OBJC_CLASS_$_AXSpeechManager
__ libAXSpeechManager.dylib: _VOTBundle
__ libAXSpeechManager.dylib: _isSpeakableEmojiString
__ libAccessibility.dylib: _AXCPCopySharedResourcesPreferencesDomainForDomain
__ libAccessibility.dylib: _AXLocalizationForLocale
__ libAccessibility.dylib: _AXNSLocalizedStringForLocale
__ libAccessibility.dylib: _AXSAccessibilityUtilitiesPath
__ libAccessibility.dylib: __AXDarkenSystemColorsApp
__ libAccessibility.dylib: __AXDarkenSystemColorsGlobal
__ libAccessibility.dylib: __AXSAXInspectorEnabled
__ libAccessibility.dylib: __AXSAXInspectorSetEnabled
__ libAccessibility.dylib: __AXSAccessibilityEnabled
__ libAccessibility.dylib: __AXSAccessibilityGetBooleaniTunesPreference
__ libAccessibility.dylib: __AXSAccessibilitySetiTunesPreference
__ libAccessibility.dylib: __AXSAirPodsDefaultToneVolume
__ libAccessibility.dylib: __AXSAirPodsHoldDuration
__ libAccessibility.dylib: __AXSAirPodsNoiseCancellationWithOneUnit
__ libAccessibility.dylib: __AXSAirPodsTapSpeed
__ libAccessibility.dylib: __AXSAirPodsToneVolume
__ libAccessibility.dylib: __AXSAirPodsVolumeSwipeDuration
__ libAccessibility.dylib: __AXSAirPodsVolumeSwipeEnabled
__ libAccessibility.dylib: __AXSAppleTVRemoteClickpadTapsForDirectionalNavigationEnabled
__ libAccessibility.dylib: __AXSApplicationAccessibilityEnabled
__ libAccessibility.dylib: __AXSApplicationAccessibilitySetEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchHardwareEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchScannerEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchScannerSetEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchSetEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchSetHardwareEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchSetUIEnabled
__ libAccessibility.dylib: __AXSAssistiveTouchUIEnabled
__ libAccessibility.dylib: __AXSAutomationEnabled
__ libAccessibility.dylib: __AXSAutomationFauxCollectionViewCellsEnabled
__ libAccessibility.dylib: __AXSAutomationFauxTableViewCellsEnabled
__ libAccessibility.dylib: __AXSAutomationHitpointWarpingEnabled
__ libAccessibility.dylib: __AXSAutomationLocalizedStringLookupInfoEnabled
__ libAccessibility.dylib: __AXSAutomationLocalizedStringLookupInfoSetEnabled
__ libAccessibility.dylib: __AXSAutomationPreferredLocalization
__ libAccessibility.dylib: __AXSAutomationSetFauxCollectionViewCellsEnabled
__ libAccessibility.dylib: __AXSAutomationSetFauxTableViewCellsEnabled
__ libAccessibility.dylib: __AXSAutomationSetHitpointWarpingEnabled
__ libAccessibility.dylib: __AXSBackTapEnabled
__ libAccessibility.dylib: __AXSBackTapSetEnabled
__ libAccessibility.dylib: __AXSButtonShapesEnabled
__ libAccessibility.dylib: __AXSButtonShapesEnabledApp
__ libAccessibility.dylib: __AXSCanDisableApplicationAccessibility
__ libAccessibility.dylib: __AXSClarityUIFeatureFlagEnabled
__ libAccessibility.dylib: __AXSClassicInvertColorsEnabled
__ libAccessibility.dylib: __AXSClassicInvertColorsSetEnabled
__ libAccessibility.dylib: __AXSCommandAndControlEnabled
__ libAccessibility.dylib: __AXSCommandAndControlSetEnabled
__ libAccessibility.dylib: __AXSCopyPreferredContentSizeCategoryName
__ libAccessibility.dylib: __AXSCopyPreferredContentSizeCategoryNameApp
__ libAccessibility.dylib: __AXSCrashOnValidationErrors
__ libAccessibility.dylib: __AXSDifferentiateWithoutColorEnabledApp
__ libAccessibility.dylib: __AXSEnhanceBackgroundContrastEnabledApp
__ libAccessibility.dylib: __AXSEnhanceBackgroundContrastEnabledGlobal
__ libAccessibility.dylib: __AXSEnhanceTextLegibilityEnabled
__ libAccessibility.dylib: __AXSEnhanceTextLegibilityEnabledApp
__ libAccessibility.dylib: __AXSEnhanceTextTrackingEnabled
__ libAccessibility.dylib: __AXSForceTouchEnabled
__ libAccessibility.dylib: __AXSForceTouchSensitivity
__ libAccessibility.dylib: __AXSFullKeyboardAccessEnabled
__ libAccessibility.dylib: __AXSFullKeyboardAccessSetEnabled
__ libAccessibility.dylib: __AXSGrayscaleEnabled
__ libAccessibility.dylib: __AXSGrayscaleSetEnabled
__ libAccessibility.dylib: __AXSHighContrastFocusIndicatorsEnabled
__ libAccessibility.dylib: __AXSHomeButtonAssistant
__ libAccessibility.dylib: __AXSHoverTextBackgroundOpacity
__ libAccessibility.dylib: __AXSHoverTextCopyBackgroundColorData
__ libAccessibility.dylib: __AXSHoverTextCopyBorderColorData
__ libAccessibility.dylib: __AXSHoverTextCopyFontName
__ libAccessibility.dylib: __AXSHoverTextCopyInsertionPointColorData
__ libAccessibility.dylib: __AXSHoverTextCopyTextColorData
__ libAccessibility.dylib: __AXSHoverTextDisplayMode
__ libAccessibility.dylib: __AXSHoverTextEnabled
__ libAccessibility.dylib: __AXSHoverTextFontSize
__ libAccessibility.dylib: __AXSHoverTextSetBackgroundColorData
__ libAccessibility.dylib: __AXSHoverTextSetBackgroundOpacity
__ libAccessibility.dylib: __AXSHoverTextSetBorderColorData
__ libAccessibility.dylib: __AXSHoverTextSetDisplayMode
__ libAccessibility.dylib: __AXSHoverTextSetEnabled
__ libAccessibility.dylib: __AXSHoverTextSetFontName
__ libAccessibility.dylib: __AXSHoverTextSetFontSize
__ libAccessibility.dylib: __AXSHoverTextSetInsertionPointColorData
__ libAccessibility.dylib: __AXSHoverTextSetTextColorData
__ libAccessibility.dylib: __AXSInDataMigrationMode
__ libAccessibility.dylib: __AXSInUnitTestMode
__ libAccessibility.dylib: __AXSIncreaseButtonLegibility
__ libAccessibility.dylib: __AXSIncreaseButtonLegibilityApp
__ libAccessibility.dylib: __AXSInvertColorsEnabled
__ libAccessibility.dylib: __AXSInvertColorsEnabledApp
__ libAccessibility.dylib: __AXSInvertColorsEnabledGlobalCached
__ libAccessibility.dylib: __AXSInvertColorsSetEnabled
__ libAccessibility.dylib: __AXSIsNonUIBuild
__ libAccessibility.dylib: __AXSLargeTextUsesExtendedRange
__ libAccessibility.dylib: __AXSLeftRightAudioBalance
__ libAccessibility.dylib: __AXSLetterFeedbackEnabled
__ libAccessibility.dylib: __AXSLiveTranscriptionEnabled
__ libAccessibility.dylib: __AXSLoadAuxiliaryBundlesWithName
__ libAccessibility.dylib: __AXSLocalizationCaptionMode
__ libAccessibility.dylib: __AXSMonoAudioEnabled
__ libAccessibility.dylib: __AXSMonoAudioSetEnabled
__ libAccessibility.dylib: __AXSMossdeepEnabled
__ libAccessibility.dylib: __AXSPhoneticFeedbackEnabled
__ libAccessibility.dylib: __AXSQuickSpeakCopyPreferredLocalesForLanguages
__ libAccessibility.dylib: __AXSQuickTypePredictionFeedbackEnabled
__ libAccessibility.dylib: __AXSReduceMotionAutoplayVideoPreviewsEnabled
__ libAccessibility.dylib: __AXSReduceMotionEnabledApp
__ libAccessibility.dylib: __AXSReduceMotionEnabledGlobal
__ libAccessibility.dylib: __AXSReduceMotionReduceSlideTransitionsEnabledApp
__ libAccessibility.dylib: __AXSReduceWhitePointEnabled
__ libAccessibility.dylib: __AXSReportValidationErrors
__ libAccessibility.dylib: __AXSScreenFilterSetShowInitialAlert
__ libAccessibility.dylib: __AXSSetAccessibilityEnabled
__ libAccessibility.dylib: __AXSSetAirPodsDefaultToneVolume
__ libAccessibility.dylib: __AXSSetAirPodsHoldDuration
__ libAccessibility.dylib: __AXSSetAirPodsNoiseCancellationWithOneUnit
__ libAccessibility.dylib: __AXSSetAirPodsTapSpeed
__ libAccessibility.dylib: __AXSSetAirPodsToneVolume
__ libAccessibility.dylib: __AXSSetAirPodsVolumeSwipeDuration
__ libAccessibility.dylib: __AXSSetAirPodsVolumeSwipeEnabled
__ libAccessibility.dylib: __AXSSetAppleTVRemoteClickpadTapsForDirectionalNavigationEnabled
__ libAccessibility.dylib: __AXSSetAutomationEnabled
__ libAccessibility.dylib: __AXSSetButtonShapesEnabled
__ libAccessibility.dylib: __AXSSetDarkenSystemColors
__ libAccessibility.dylib: __AXSSetEnhanceBackgroundContrastEnabled
__ libAccessibility.dylib: __AXSSetEnhanceTextLegibilityEnabled
__ libAccessibility.dylib: __AXSSetEnhanceTextTrackingEnabled
__ libAccessibility.dylib: __AXSSetHighContrastFocusIndicatorsEnabled
__ libAccessibility.dylib: __AXSSetIncreaseButtonLegibility
__ libAccessibility.dylib: __AXSSetLargeTextUsesExtendedRange
__ libAccessibility.dylib: __AXSSetLeftRightAudioBalance
__ libAccessibility.dylib: __AXSSetLetterFeedbackEnabled
__ libAccessibility.dylib: __AXSSetLocalizationCaptionModeEnabled
__ libAccessibility.dylib: __AXSSetPhoneticFeedbackEnabled
__ libAccessibility.dylib: __AXSSetPreferredContentSizeCategoryName
__ libAccessibility.dylib: __AXSSetQuickTypePredictionFeedbackEnabled
__ libAccessibility.dylib: __AXSSetReduceMotionAutoplayVideoPreviewsEnabled
__ libAccessibility.dylib: __AXSSetReduceMotionEnabled
__ libAccessibility.dylib: __AXSSetReduceWhitePointEnabled
__ libAccessibility.dylib: __AXSSetSiriSemanticContextEnabled
__ libAccessibility.dylib: __AXSSetTripleClickOptions
__ libAccessibility.dylib: __AXSSetWordFeedbackEnabled
__ libAccessibility.dylib: __AXSSiriSemanticContextEnabled
__ libAccessibility.dylib: __AXSSwitchControlExtendedKeyboardPredictionsEnabled
__ libAccessibility.dylib: __AXSSwitchControlExtendedKeyboardPredictionsSetEnabled
__ libAccessibility.dylib: __AXSTripleClickAddOption
__ libAccessibility.dylib: __AXSTripleClickCopyOptions
__ libAccessibility.dylib: __AXSTripleClickRemoveOption
__ libAccessibility.dylib: __AXSTwiceRemoteScreenEnabled
__ libAccessibility.dylib: __AXSTwiceRemoteScreenSetEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchBrailleContractionMode
__ libAccessibility.dylib: __AXSVoiceOverTouchBrailleEightDotMode
__ libAccessibility.dylib: __AXSVoiceOverTouchBrailleMasterStatusCellIndex
__ libAccessibility.dylib: __AXSVoiceOverTouchBrailleVirtualStatusAlignment
__ libAccessibility.dylib: __AXSVoiceOverTouchCopyBrailleBluetoothDisplay
__ libAccessibility.dylib: __AXSVoiceOverTouchCopyBrailleLanguageRotorItems
__ libAccessibility.dylib: __AXSVoiceOverTouchCopyBrailleTableIdentifier
__ libAccessibility.dylib: __AXSVoiceOverTouchCopyLanguageRotorItems
__ libAccessibility.dylib: __AXSVoiceOverTouchCopyTactileGraphicsDisplay
__ libAccessibility.dylib: __AXSVoiceOverTouchEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchEnabledThroughAccessory
__ libAccessibility.dylib: __AXSVoiceOverTouchLanguageRotorItemsExist
__ libAccessibility.dylib: __AXSVoiceOverTouchScreenCurtainEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleBluetoothDisplay
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleContractionMode
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleEightDotMode
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleLanguageRotorItems
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleMasterStatusCellIndex
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleTableIdentifier
__ libAccessibility.dylib: __AXSVoiceOverTouchSetBrailleVirtualStatusAlignment
__ libAccessibility.dylib: __AXSVoiceOverTouchSetEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchSetEnabledThroughAccessory
__ libAccessibility.dylib: __AXSVoiceOverTouchSetLanguageRotorItems
__ libAccessibility.dylib: __AXSVoiceOverTouchSetScreenCurtainEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchSetSpeakingRate
__ libAccessibility.dylib: __AXSVoiceOverTouchSetTypingMode
__ libAccessibility.dylib: __AXSVoiceOverTouchSetUIEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchSetUsageConfirmed
__ libAccessibility.dylib: __AXSVoiceOverTouchSetVolume
__ libAccessibility.dylib: __AXSVoiceOverTouchSpeakingRate
__ libAccessibility.dylib: __AXSVoiceOverTouchTypingMode
__ libAccessibility.dylib: __AXSVoiceOverTouchUIEnabled
__ libAccessibility.dylib: __AXSVoiceOverTouchUsageConfirmed
__ libAccessibility.dylib: __AXSVoiceOverTouchVolume
__ libAccessibility.dylib: __AXSWatchControlEnabled
__ libAccessibility.dylib: __AXSWordFeedbackEnabled
__ libAccessibility.dylib: __AXSZoomTouchEnabled
__ libAccessibility.dylib: __AXSZoomTouchSetEnabled
__ libAccessibility.dylib: __AXSZoomTouchSetSmoothScalingDisabled
__ libAccessibility.dylib: __AXSZoomTouchSetToggledByPreferenceSwitch
__ libAccessibility.dylib: __AXSZoomTouchSetToggledByVoiceOver
__ libAccessibility.dylib: __AXSZoomTouchSmoothScalingDisabled
__ libAccessibility.dylib: __AXSZoomTouchToggledByPreferenceSwitch
__ libAccessibility.dylib: __AXSZoomTouchToggledByVoiceOver
__ libAccessibility.dylib: _kAXMagnifierBundleIdentifier
__ libAccessibility.dylib: _kAXSAccessibilityPreferenceDomain
__ libAccessibility.dylib: _kAXSAirPodsDefaultToneVolumeChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsDefaultToneVolumePreference
__ libAccessibility.dylib: _kAXSAirPodsHoldDurationChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsHoldDurationPreference
__ libAccessibility.dylib: _kAXSAirPodsNoiseCancellationWithOneUnitChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsNoiseCancellationWithOneUnitPreference
__ libAccessibility.dylib: _kAXSAirPodsTapSpeedChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsToneVolumeChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsToneVolumePreference
__ libAccessibility.dylib: _kAXSAirPodsTouchTapSpeedPreference
__ libAccessibility.dylib: _kAXSAirPodsVolumeSwipeDurationChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsVolumeSwipeDurationPreference
__ libAccessibility.dylib: _kAXSAirPodsVolumeSwipeEnabledChangedNotification
__ libAccessibility.dylib: _kAXSAirPodsVolumeSwipeEnabledPreference
__ libAccessibility.dylib: _kAXSAssistiveTouchPreferenceDomain
__ libAccessibility.dylib: _kAXSEnhanceBackgroundContrastPreference
__ libAccessibility.dylib: _kAXSForceTouchEnabledPreferenceNotification
__ libAccessibility.dylib: _kAXSForceTouchSensitivityChangedNotification
__ libAccessibility.dylib: _kAXSFullKeyboardAccessPreferenceDomain
__ libAccessibility.dylib: _kAXSGuidedAccessPreferenceDomain
__ libAccessibility.dylib: _kAXSHearingAidsPreferenceDomain
__ libAccessibility.dylib: _kAXSInvertColorsEnabledNotification
__ libAccessibility.dylib: _kAXSLeftRightBalancePreference
__ libAccessibility.dylib: _kAXSMagnifierPreferenceDomain
__ libAccessibility.dylib: _kAXSQuickSpeakLocaleForLanguageNotification
__ libAccessibility.dylib: _kAXSQuickSpeakPreferenceDomain
__ libAccessibility.dylib: _kAXSReduceMotionPreference
__ libAccessibility.dylib: _kAXSSoundDetectionPreferenceDomain
__ libAccessibility.dylib: _kAXSSpeakAutoCorrectionsEnabledByiTunesPreference
__ libAccessibility.dylib: _kAXSStatisticsPreferenceDomain
__ libAccessibility.dylib: _kAXSSwitchControlPreferenceDomain
__ libAccessibility.dylib: _kAXSTTYPreferenceDomain
__ libAccessibility.dylib: _kAXSTouchAccommodationsPreferenceDomain
__ libAccessibility.dylib: _kAXSVoiceOverActivitiesPreferenceDomain
__ libAccessibility.dylib: _kAXSVoiceOverPreferenceDomain
__ libAccessibility.dylib: _kAXSVoiceOverTouchEnabledPreference
__ libAccessibility.dylib: _kAXSVoiceOverTouchSpeakingRatePreference
__ libAccessibility.dylib: _kAXSZoomPreferenceDomain
__ libAccessibility.dylib: _kAXSZoomTouchEnabledPreference
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___memset_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_mach_send
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dyld_get_image_name
__ libSystem.B.dylib: __dyld_image_count
__ libSystem.B.dylib: __dyld_register_func_for_add_image
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _abs
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _bootstrap_check_in
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_look_up2
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bootstrap_register2
__ libSystem.B.dylib: _bootstrap_strerror
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_image_path_containing_address
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getpwnam
__ libSystem.B.dylib: _getpwuid
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _launch_data_alloc
__ libSystem.B.dylib: _launch_data_dict_insert
__ libSystem.B.dylib: _launch_data_dict_lookup
__ libSystem.B.dylib: _launch_data_free
__ libSystem.B.dylib: _launch_data_get_integer
__ libSystem.B.dylib: _launch_data_get_type
__ libSystem.B.dylib: _launch_data_new_string
__ libSystem.B.dylib: _launch_msg
__ libSystem.B.dylib: _log10f
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_allocate
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_insert_right
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_port_request_notification
__ libSystem.B.dylib: _mach_port_set_attributes
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_deallocate
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_log_with_args
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _posix_spawn
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _powf
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _qsort_b
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _setgid
__ libSystem.B.dylib: _setuid
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libicucore.A.dylib: _u_charName
__ libicucore.A.dylib: _uldn_close
__ libicucore.A.dylib: _uldn_keyValueDisplayName
__ libicucore.A.dylib: _uldn_languageDisplayName
__ libicucore.A.dylib: _uldn_localeDisplayName
__ libicucore.A.dylib: _uldn_openForContext
__ libicucore.A.dylib: _uldn_regionDisplayName
__ libicucore.A.dylib: _uldn_scriptDisplayName
__ libicucore.A.dylib: _uldn_variantDisplayName
__ libicucore.A.dylib: _ulistfmt_format
__ libicucore.A.dylib: _ulistfmt_open
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethodsBulk
__ libobjc.A.dylib: _class_conformsToProtocol
__ libobjc.A.dylib: _class_copyMethodList
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _class_isMetaClass
__ libobjc.A.dylib: _ivar_getOffset
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _method_copyArgumentType
__ libobjc.A.dylib: _method_copyReturnType
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _method_getName
__ libobjc.A.dylib: _method_getNumberOfArguments
__ libobjc.A.dylib: _method_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getClassList
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getIvar
__ libobjc.A.dylib: _property_copyAttributeValue
__ libobjc.A.dylib: _protocol_conformsToProtocol
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _protocol_getName
__ libobjc.A.dylib: _sel_getName
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_conformsToProtocol
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getAssociatedTypeWitness
__ libswiftCore.dylib: _swift_getDynamicType
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getMetadataKind
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_isClassType
__ libswiftCore.dylib: _swift_isOptionalType
__ libswiftCore.dylib: _swift_projectBox
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRetain
AXPerformanceTestReportingServer : AXServer
  // class methods
  +[AXPerformanceTestReportingServer server]

  // instance methods
  -[AXPerformanceTestReportingServer _serviceName]
  -[AXPerformanceTestReportingServer voiceOverTouchDidLaunch]
  -[AXPerformanceTestReportingServer assistiveTouchDidLaunch]
  -[AXPerformanceTestReportingServer voiceOverDidSpeak:]


AXUtilitiesCommonStringRuntimeOverrides : NSObject
  // class methods
  +[AXUtilitiesCommonStringRuntimeOverrides initialize]
  +[AXUtilitiesCommonStringRuntimeOverrides setupProcessName]


AXTripleClickHelpers : NSObject
  // class methods
  +[AXTripleClickHelpers _toggleSmartInvertColorsOffMainThread]
  +[AXTripleClickHelpers tripleClickOptionDidChangeNotification]
  +[AXTripleClickHelpers titleForTripleClickOption:]
  +[AXTripleClickHelpers domainAccessorForTripleClickOption:]
  +[AXTripleClickHelpers valueForTripleClickOption:]
  +[AXTripleClickHelpers valueForTripleClickOption:fromSource:]
  +[AXTripleClickHelpers _localValueForTripleClickOption:]
  +[AXTripleClickHelpers valueForZoomTripleClickOption]
  +[AXTripleClickHelpers _npsKeyForTripleClickOption:]
  +[AXTripleClickHelpers _npsValueForTripleClickOption:]
  +[AXTripleClickHelpers _toggleVoiceOver]
  +[AXTripleClickHelpers _promptToDisableBrightnessFilters:data:]
  +[AXTripleClickHelpers toggleColorFilter]
  +[AXTripleClickHelpers toggleZoomOffMainThread]
  +[AXTripleClickHelpers toggleHoverText]
  +[AXTripleClickHelpers _toggleAssistiveTouch]
  +[AXTripleClickHelpers toggleReduceWhitePoint]
  +[AXTripleClickHelpers toggleGuidedAccessFromControlCenter]
  +[AXTripleClickHelpers toggleFullKeyboardAccess]
  +[AXTripleClickHelpers attemptToToggleTwiceRemoteScreen]
  +[AXTripleClickHelpers attemptToEnterClarityBoard]
  +[AXTripleClickHelpers attemptToPresentNearbyDeviceControlPicker]
  +[AXTripleClickHelpers toggleTripleClickOption:]
  +[AXTripleClickHelpers toggleTripleClickOption:fromSource:]
  +[AXTripleClickHelpers _localToggleTripleClickOption:]
  +[AXTripleClickHelpers _npsToggleTripleClickOption:]
  +[AXTripleClickHelpers allTripleClickOptions]
  +[AXTripleClickHelpers allTripleClickOptionsForPlatform:]
  +[AXTripleClickHelpers _allAvailableFeaturesIOS]
  +[AXTripleClickHelpers _allAvailableFeaturesWatchOS]
  +[AXTripleClickHelpers _availableFeatures]
  +[AXTripleClickHelpers _shouldShowFeatureInShortcutsControlCenterModule:includeGuidedAccess:]
  +[AXTripleClickHelpers tripleClickOptionsForAccessibilityShortcutControlCenterModuleIncludingGuidedAccess:]


AXEventHandInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  unsigned char swipe
 @property  unsigned int eventType
 @property  unsigned short initialFingerCount
 @property  unsigned short currentFingerCount
 @property  unsigned short lifetimeFingerCount
 @property  NSArray *paths
 @property  unsigned char systemGesturePossible
 @property  unsigned int handIdentity
 @property  unsigned int handIndex
 @property  {CGPoint=dd} handPosition
 @property  BOOL isStylus
 @property  unsigned int handEventMask
 @property  unsigned int additionalHandEventFlagsForGeneratedEvents
 @property  unsigned long length
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventHandInfoRepresentation supportsSecureCoding]

  // instance methods
  -[AXEventHandInfoRepresentation paths]
  -[AXEventHandInfoRepresentation setEventType:]
  -[AXEventHandInfoRepresentation encodeWithCoder:]
  -[AXEventHandInfoRepresentation length]
  -[AXEventHandInfoRepresentation .cxx_destruct]
  -[AXEventHandInfoRepresentation setPaths:]
  -[AXEventHandInfoRepresentation eventType]
  -[AXEventHandInfoRepresentation copyWithZone:]
  -[AXEventHandInfoRepresentation initWithCoder:]
  -[AXEventHandInfoRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventHandInfoRepresentation isStylus]
  -[AXEventHandInfoRepresentation initialFingerCount]
  -[AXEventHandInfoRepresentation setInitialFingerCount:]
  -[AXEventHandInfoRepresentation currentFingerCount]
  -[AXEventHandInfoRepresentation setCurrentFingerCount:]
  -[AXEventHandInfoRepresentation lifetimeFingerCount]
  -[AXEventHandInfoRepresentation setLifetimeFingerCount:]
  -[AXEventHandInfoRepresentation systemGesturePossible]
  -[AXEventHandInfoRepresentation setSystemGesturePossible:]
  -[AXEventHandInfoRepresentation handIdentity]
  -[AXEventHandInfoRepresentation setHandIdentity:]
  -[AXEventHandInfoRepresentation handIndex]
  -[AXEventHandInfoRepresentation setHandIndex:]
  -[AXEventHandInfoRepresentation handPosition]
  -[AXEventHandInfoRepresentation setHandPosition:]
  -[AXEventHandInfoRepresentation handEventMask]
  -[AXEventHandInfoRepresentation setHandEventMask:]
  -[AXEventHandInfoRepresentation additionalHandEventFlagsForGeneratedEvents]
  -[AXEventHandInfoRepresentation setAdditionalHandEventFlagsForGeneratedEvents:]
  -[AXEventHandInfoRepresentation swipe]
  -[AXEventHandInfoRepresentation setSwipe:]


AXIPCMessage : NSObject <NSSecureCoding>
 @property  int key
 @property  NSDictionary *payload
 @property  unsigned int clientPort
 @property  {?=[8I]} auditToken
 @property  unsigned long uniqueID
 @property  NSString *senderBundleId
 @property  BOOL processedMessage

  // class methods
  +[AXIPCMessage supportsSecureCoding]
  +[AXIPCMessage archivedMessageFromData:]

  // instance methods
  -[AXIPCMessage setPayload:]
  -[AXIPCMessage processedMessage]
  -[AXIPCMessage uniqueID]
  -[AXIPCMessage setProcessedMessage:]
  -[AXIPCMessage encodeWithCoder:]
  -[AXIPCMessage payload]
  -[AXIPCMessage dealloc]
  -[AXIPCMessage setAuditToken:]
  -[AXIPCMessage .cxx_destruct]
  -[AXIPCMessage auditToken]
  -[AXIPCMessage initWithKey:]
  -[AXIPCMessage setClientPort:]
  -[AXIPCMessage initWithKey:payload:]
  -[AXIPCMessage key]
  -[AXIPCMessage initWithKey:payload:keyDebugInfo:]
  -[AXIPCMessage setUniqueID:]
  -[AXIPCMessage setKey:]
  -[AXIPCMessage senderBundleId]
  -[AXIPCMessage clientPort]
  -[AXIPCMessage initWithCoder:]


AXDisplayLinkManagerTargetAction : NSObject
 @property  id target
 @property  SEL actionSelector
 @property  unsigned long displayDidRefreshCount

  // instance methods
  -[AXDisplayLinkManagerTargetAction setActionSelector:]
  -[AXDisplayLinkManagerTargetAction setTarget:]
  -[AXDisplayLinkManagerTargetAction target]
  -[AXDisplayLinkManagerTargetAction actionSelector]
  -[AXDisplayLinkManagerTargetAction .cxx_destruct]
  -[AXDisplayLinkManagerTargetAction isEqual:]
  -[AXDisplayLinkManagerTargetAction initWithTarget:actionSelector:]
  -[AXDisplayLinkManagerTargetAction displayDidRefresh:]
  -[AXDisplayLinkManagerTargetAction displayDidRefreshCount]
  -[AXDisplayLinkManagerTargetAction setDisplayDidRefreshCount:]


AXDisplayLinkManager : NSObject
 @property  CADisplayLink *displayLink
 @property  CADisplayLink *storedDisplayLink
 @property  NSMutableSet *activeTargetActions
 @property  NSMutableSet *updatedTargetActions
 @property  BOOL hasUpdatedTargetActions
 @property  BOOL handlingDisplayRefresh
 @property  unsigned long warmUpModeRequirementsCount
 @property  BOOL warmUpModeEnabled
 @property  BOOL paused
 @property  double duration
 @property  double timestamp

  // class methods
  +[AXDisplayLinkManager currentDisplayLinkManager]
  +[AXDisplayLinkManager _releaseCurrentDisplayLinkManager]

  // instance methods
  -[AXDisplayLinkManager displayLink]
  -[AXDisplayLinkManager setDisplayLink:]
  -[AXDisplayLinkManager isPaused]
  -[AXDisplayLinkManager .cxx_destruct]
  -[AXDisplayLinkManager duration]
  -[AXDisplayLinkManager timestamp]
  -[AXDisplayLinkManager init]
  -[AXDisplayLinkManager _displayDidRefresh:]
  -[AXDisplayLinkManager addTarget:selector:]
  -[AXDisplayLinkManager removeTarget:selector:]
  -[AXDisplayLinkManager _prepareUpdatedTargetActionsForModification]
  -[AXDisplayLinkManager _didAddFirstTargetAction]
  -[AXDisplayLinkManager _didRemoveLastTargetAction]
  -[AXDisplayLinkManager isWarmUpModeEnabled]
  -[AXDisplayLinkManager beginRequiringWarmUpMode]
  -[AXDisplayLinkManager endRequiringWarmUpMode]
  -[AXDisplayLinkManager storedDisplayLink]
  -[AXDisplayLinkManager setStoredDisplayLink:]
  -[AXDisplayLinkManager activeTargetActions]
  -[AXDisplayLinkManager setActiveTargetActions:]
  -[AXDisplayLinkManager updatedTargetActions]
  -[AXDisplayLinkManager setUpdatedTargetActions:]
  -[AXDisplayLinkManager hasUpdatedTargetActions]
  -[AXDisplayLinkManager setHasUpdatedTargetActions:]
  -[AXDisplayLinkManager isHandlingDisplayRefresh]
  -[AXDisplayLinkManager setHandlingDisplayRefresh:]
  -[AXDisplayLinkManager warmUpModeRequirementsCount]
  -[AXDisplayLinkManager setWarmUpModeRequirementsCount:]


AXTypingPrediction : NSObject
 @property  NSString *fullWord
 @property  NSString *textToInsert
 @property  NSString *prefix
 @property  {_NSRange=QQ} rangeToReplace
 @property  double probability

  // instance methods
  -[AXTypingPrediction setPrefix:]
  -[AXTypingPrediction .cxx_destruct]
  -[AXTypingPrediction prefix]
  -[AXTypingPrediction probability]
  -[AXTypingPrediction setProbability:]
  -[AXTypingPrediction fullWord]
  -[AXTypingPrediction setFullWord:]
  -[AXTypingPrediction textToInsert]
  -[AXTypingPrediction setTextToInsert:]
  -[AXTypingPrediction rangeToReplace]
  -[AXTypingPrediction setRangeToReplace:]


AXPredictiveTypingModel : NSObject
  // instance methods
  -[AXPredictiveTypingModel dealloc]
  -[AXPredictiveTypingModel init]
  -[AXPredictiveTypingModel enumerateTokensForText:usingBlock:]
  -[AXPredictiveTypingModel _newContextForText:includeLastToken:length:]
  -[AXPredictiveTypingModel _completionPredictionsForPrefix:entireText:desiredNumber:]
  -[AXPredictiveTypingModel _lastPartialWordForText:orEndOfSentence:]
  -[AXPredictiveTypingModel _nextWordPredictionsForText:desiredNumber:]
  -[AXPredictiveTypingModel predictionsForText:desiredNumber:]
  -[AXPredictiveTypingModel predictionsForText:]


AXCustomizableMouse : NSObject <NSSecureCoding>
 @property  NSString *name
 @property  NSString *identifier
 @property  long long vendorId
 @property  long long productId
 @property  BOOL hasCustomActions
 @property  BOOL customActionsRequireAssistiveTouch
 @property  NSArray *buttonsWithCustomActions
 @property  NSMutableDictionary *buttonMap

  // class methods
  +[AXCustomizableMouse supportsSecureCoding]
  +[AXCustomizableMouse deserialize:]
  +[AXCustomizableMouse serialize:]
  +[AXCustomizableMouse mouseForHIDDevice:]
  +[AXCustomizableMouse mouseForHIDServiceClient:]
  +[AXCustomizableMouse _existingMouseForIdentifier:vendorId:productId:]
  +[AXCustomizableMouse _newOrExistingMouseForIdentifier:name:vendorId:productId:]

  // instance methods
  -[AXCustomizableMouse identifier]
  -[AXCustomizableMouse encodeWithCoder:]
  -[AXCustomizableMouse .cxx_destruct]
  -[AXCustomizableMouse productId]
  -[AXCustomizableMouse vendorId]
  -[AXCustomizableMouse name]
  -[AXCustomizableMouse isEqual:]
  -[AXCustomizableMouse initWithCoder:]
  -[AXCustomizableMouse initWithIdentifier:name:vendorId:productId:]
  -[AXCustomizableMouse setDefaultActionForButtonNumber:]
  -[AXCustomizableMouse setCustomAction:forButtonNumber:]
  -[AXCustomizableMouse hasCustomActions]
  -[AXCustomizableMouse customActionsRequireAssistiveTouch]
  -[AXCustomizableMouse buttonsWithCustomActions]
  -[AXCustomizableMouse customActionForButtonNumber:]
  -[AXCustomizableMouse isEqualToMouse:]
  -[AXCustomizableMouse isEqualToIdentifier:vendorId:productId:]
  -[AXCustomizableMouse buttonMap]
  -[AXCustomizableMouse setButtonMap:]


AXEventTapPair : NSObject
 @property  @? handler
 @property  NSString *identifier
 @property  int priority
 @property  int type
 @property  ^{__IOHIDEventSystemClient=} systemClient
 @property  @? matchingServiceHandler
 @property  @? failedToHandleInTime

  // instance methods
  -[AXEventTapPair setPriority:]
  -[AXEventTapPair identifier]
  -[AXEventTapPair setHandler:]
  -[AXEventTapPair type]
  -[AXEventTapPair dealloc]
  -[AXEventTapPair .cxx_destruct]
  -[AXEventTapPair setType:]
  -[AXEventTapPair setIdentifier:]
  -[AXEventTapPair handler]
  -[AXEventTapPair priority]
  -[AXEventTapPair systemClient]
  -[AXEventTapPair setSystemClient:]
  -[AXEventTapPair matchingServiceHandler]
  -[AXEventTapPair setMatchingServiceHandler:]
  -[AXEventTapPair failedToHandleInTime]
  -[AXEventTapPair setFailedToHandleInTime:]


AXEventTapManager : NSObject
 @property  @? installationGSCallback
 @property  @? installationHIDCallback
 @property  @? installationEventRepPost

  // class methods
  +[AXEventTapManager sharedManager]

  // instance methods
  -[AXEventTapManager dealloc]
  -[AXEventTapManager .cxx_destruct]
  -[AXEventTapManager init]
  -[AXEventTapManager _setHIDEventTapCallback:]
  -[AXEventTapManager _copyCurrentEventTapPairs]
  -[AXEventTapManager _enumerateEventTapPairsUsingBlock:]
  -[AXEventTapManager sendHIDSystemEvent:senderID:]
  -[AXEventTapManager sendHIDSystemEvent:repostCreatorHIDEvent:senderID:]
  -[AXEventTapManager sendEvent:afterTap:useGSEvent:namedTaps:options:]
  -[AXEventTapManager _handleTestIOHIDEvent:]
  -[AXEventTapManager _processHIDEvent:taskPort:bundleId:]
  -[AXEventTapManager _reorderEventTaps]
  -[AXEventTapManager setFailedToProcessInTimeCallback:callback:]
  -[AXEventTapManager setEventTapPriority:priority:]
  -[AXEventTapManager _passivelyPeakAtHIDEventWithTarget:tapPair:sender:event:axEventRep:didHandle:]
  -[AXEventTapManager _setEventTapPriority:priority:]
  -[AXEventTapManager _installEventTap:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:]
  -[AXEventTapManager _hidFilterListForPair:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:]
  -[AXEventTapManager _installHIDFilter:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:]
  -[AXEventTapManager _installSystemEventTap:]
  -[AXEventTapManager installEventTap:identifier:type:]
  -[AXEventTapManager installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:]
  -[AXEventTapManager installEventTap:identifier:type:skipDeviceMatching:wantsDigitizerEvents:wantsKeyboardEvents:wantsATVRemoteEvents:wantsLisaEvents:wantsMouseEvents:wantsAccessibilityEvents:matchingServiceHandler:]
  -[AXEventTapManager installKeyboardEventTap:identifier:matchingServiceHandler:]
  -[AXEventTapManager removeEventTap:]
  -[AXEventTapManager _removeHIDEventTapFilter:]
  -[AXEventTapManager runMatchingServiceHandlerForEventTap:]
  -[AXEventTapManager _runMatchingServiceHandler:]
  -[AXEventTapManager installationGSCallback]
  -[AXEventTapManager setInstallationGSCallback:]
  -[AXEventTapManager installationHIDCallback]
  -[AXEventTapManager setInstallationHIDCallback:]
  -[AXEventTapManager installationEventRepPost]
  -[AXEventTapManager setInstallationEventRepPost:]


AXSBQuickSettingsData : NSObject <NSSecureCoding>
 @property  NSString *frontmostAppIdentifier

  // class methods
  +[AXSBQuickSettingsData supportsSecureCoding]

  // instance methods
  -[AXSBQuickSettingsData encodeWithCoder:]
  -[AXSBQuickSettingsData .cxx_destruct]
  -[AXSBQuickSettingsData initWithCoder:]
  -[AXSBQuickSettingsData frontmostAppIdentifier]
  -[AXSBQuickSettingsData setFrontmostAppIdentifier:]


AXSBImageExplorerData : NSObject <NSSecureCoding>
 @property  NSString *hostAppBundleID
 @property  NSString *hostAppName
 @property  NSString *axLabel
 @property  NSArray *customContent

  // class methods
  +[AXSBImageExplorerData supportsSecureCoding]

  // instance methods
  -[AXSBImageExplorerData axLabel]
  -[AXSBImageExplorerData encodeWithCoder:]
  -[AXSBImageExplorerData setAxLabel:]
  -[AXSBImageExplorerData .cxx_destruct]
  -[AXSBImageExplorerData initWithCoder:]
  -[AXSBImageExplorerData hostAppBundleID]
  -[AXSBImageExplorerData setHostAppBundleID:]
  -[AXSBImageExplorerData hostAppName]
  -[AXSBImageExplorerData setHostAppName:]
  -[AXSBImageExplorerData customContent]
  -[AXSBImageExplorerData setCustomContent:]


AXSpringBoardActionHandlerHolder : NSObject
 @property  @? handler
 @property  long long type
 @property  NSString *identifier

  // instance methods
  -[AXSpringBoardActionHandlerHolder identifier]
  -[AXSpringBoardActionHandlerHolder setHandler:]
  -[AXSpringBoardActionHandlerHolder type]
  -[AXSpringBoardActionHandlerHolder .cxx_destruct]
  -[AXSpringBoardActionHandlerHolder setType:]
  -[AXSpringBoardActionHandlerHolder setIdentifier:]
  -[AXSpringBoardActionHandlerHolder handler]


AXSpringBoardServer : AXServer <AXSystemAppServer>
 @property  AXAccessQueue *accessQueue
 @property  @? currentAlertHandler
 @property  NSMutableArray *actionHandlers
 @property  NSMutableDictionary *reachabilityHandlers
 @property  NSMutableDictionary *mediaPlayingHandlers
 @property  BOOL isGuidedAccessActive
 @property  BOOL shouldFocusNonExclusiveSystemUI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXSpringBoardServer server]

  // instance methods
  -[AXSpringBoardServer isShowingHomescreen]
  -[AXSpringBoardServer activeInterfaceOrientation]
  -[AXSpringBoardServer setReachabilityEnabled:]
  -[AXSpringBoardServer setReachabilityActive:]
  -[AXSpringBoardServer dismissSiri]
  -[AXSpringBoardServer _axSpringBoardServerInstanceDelegate]
  -[AXSpringBoardServer topEventPidOverride]
  -[AXSpringBoardServer pauseMedia]
  -[AXSpringBoardServer isNonExclusiveSystemUIFocusableIncludingPIPWindow:includingNonDismissableElements:]
  -[AXSpringBoardServer showRemoteView:withData:]
  -[AXSpringBoardServer splashImageForAppWithBundleIdentifier:]
  -[AXSpringBoardServer cleanupAlertHandler]
  -[AXSpringBoardServer isPasscodeLockVisible]
  -[AXSpringBoardServer _axSpringBoardServerInstanceIfExists]
  -[AXSpringBoardServer isSpotlightVisible]
  -[AXSpringBoardServer setAccessQueue:]
  -[AXSpringBoardServer connectedDevicesRequireAssistiveTouch]
  -[AXSpringBoardServer medusaApps]
  -[AXSpringBoardServer setActionHandlers:]
  -[AXSpringBoardServer performMedusaGesture:]
  -[AXSpringBoardServer areSystemGesturesDisabledByAccessibility]
  -[AXSpringBoardServer hideAlert]
  -[AXSpringBoardServer runningAppPIDs]
  -[AXSpringBoardServer revealSpotlight]
  -[AXSpringBoardServer startHearingAidServer]
  -[AXSpringBoardServer mediaPlayingHandlers]
  -[AXSpringBoardServer isOrientationLocked]
  -[AXSpringBoardServer reachabilityOffset]
  -[AXSpringBoardServer accessQueue]
  -[AXSpringBoardServer didPotentiallyDismissNonExclusiveSystemUI]
  -[AXSpringBoardServer isAppleWatchRemoteScreenActive]
  -[AXSpringBoardServer isMakingEmergencyCall]
  -[AXSpringBoardServer isDarkModeActive]
  -[AXSpringBoardServer isShowingNonSystemApp]
  -[AXSpringBoardServer screenLockStatus:passcodeStatusRequired:]
  -[AXSpringBoardServer toggleDock]
  -[AXSpringBoardServer isPurpleBuddyAppFrontmost]
  -[AXSpringBoardServer toggleNotificationCenter]
  -[AXSpringBoardServer isNonExclusiveSystemUIFocusableIncludingPIPWindow:]
  -[AXSpringBoardServer hideRemoteView:]
  -[AXSpringBoardServer toggleLiveTranscription]
  -[AXSpringBoardServer openVoiceControl]
  -[AXSpringBoardServer _wasDisconnectedFromClient]
  -[AXSpringBoardServer removeActionHandler:]
  -[AXSpringBoardServer appNameFromPid:]
  -[AXSpringBoardServer isDockVisible]
  -[AXSpringBoardServer setOrientationLocked:]
  -[AXSpringBoardServer isSettingsAppFrontmost]
  -[AXSpringBoardServer reactivateInCallService]
  -[AXSpringBoardServer allowedMedusaGestures]
  -[AXSpringBoardServer isSpeakThisTemporarilyDisabled]
  -[AXSpringBoardServer isScreenSaverVisible]
  -[AXSpringBoardServer isRingerMuted]
  -[AXSpringBoardServer isSideSwitchUsedForOrientation]
  -[AXSpringBoardServer openAssistiveTouchCustomGestureCreation]
  -[AXSpringBoardServer toggleDetectionMode]
  -[AXSpringBoardServer isMagnifierVisibleWithCompletion:]
  -[AXSpringBoardServer setCaptionPanelContextId:]
  -[AXSpringBoardServer isVoiceControlRunning]
  -[AXSpringBoardServer isSyncingRestoringResettingOrUpdating]
  -[AXSpringBoardServer visibleTripleClickItems]
  -[AXSpringBoardServer purpleBuddyPID:]
  -[AXSpringBoardServer hasActiveCall]
  -[AXSpringBoardServer registerReachabilityHandler:withIdentifierCallback:]
  -[AXSpringBoardServer focusedOccludedAppScenes]
  -[AXSpringBoardServer showAlert:withHandler:withData:]
  -[AXSpringBoardServer volumeLevel]
  -[AXSpringBoardServer hasActiveOrPendingCallOrFaceTime]
  -[AXSpringBoardServer launchVoiceOverQuickSettingsViewService:]
  -[AXSpringBoardServer isShowingRemoteView:]
  -[AXSpringBoardServer acquireAssertionWithType:identifier:]
  -[AXSpringBoardServer _willClearServer]
  -[AXSpringBoardServer isSiriTalkingOrListening]
  -[AXSpringBoardServer isSystemAppFrontmost]
  -[AXSpringBoardServer isScreenLockedWithPasscode:]
  -[AXSpringBoardServer .cxx_destruct]
  -[AXSpringBoardServer hasActiveEndpointCall]
  -[AXSpringBoardServer isSoftwareUpdateUIVisible]
  -[AXSpringBoardServer _handleReachabilityResult:]
  -[AXSpringBoardServer _didConnectToServer]
  -[AXSpringBoardServer requestDismissJindo]
  -[AXSpringBoardServer activeInterfaceOrientation:]
  -[AXSpringBoardServer areSystemGesturesDisabledNatively]
  -[AXSpringBoardServer setVolume:]
  -[AXSpringBoardServer activeApplicationOrientation]
  -[AXSpringBoardServer toggleBackgroundSounds]
  -[AXSpringBoardServer setDockIconActivationMode:]
  -[AXSpringBoardServer copyStringToPasteboard:]
  -[AXSpringBoardServer _didConnectToClient]
  -[AXSpringBoardServer simulateEdgePressHaptics]
  -[AXSpringBoardServer applicationWithIdentifier:]
  -[AXSpringBoardServer launchMagnifierApp]
  -[AXSpringBoardServer focusedAppPID]
  -[AXSpringBoardServer setHearingAidControlVisible:]
  -[AXSpringBoardServer isAppSwitcherVisible]
  -[AXSpringBoardServer _isSystemAppFrontmostExcludingSiri:]
  -[AXSpringBoardServer isNotificationVisible]
  -[AXSpringBoardServer installedApps]
  -[AXSpringBoardServer setCurrentAlertHandler:]
  -[AXSpringBoardServer toggleQuickNote]
  -[AXSpringBoardServer toggleAppLibrary]
  -[AXSpringBoardServer isReceivingAirPlay]
  -[AXSpringBoardServer setMediaPlayingHandlers:]
  -[AXSpringBoardServer isInspectorMinimized]
  -[AXSpringBoardServer isNowPlayingUIVisible]
  -[AXSpringBoardServer isSystemAppShowingAnAlert]
  -[AXSpringBoardServer dismissAppSwitcher]
  -[AXSpringBoardServer dismissBuddyIfNecessary]
  -[AXSpringBoardServer setOrientation:]
  -[AXSpringBoardServer toggleIncomingCall]
  -[AXSpringBoardServer freezeClarityUILoadingScreenWithCompletion:]
  -[AXSpringBoardServer showNotificationCenter]
  -[AXSpringBoardServer presentNearbyDeviceControlPicker]
  -[AXSpringBoardServer isSystemSleeping]
  -[AXSpringBoardServer isScreenshotWindowVisible]
  -[AXSpringBoardServer isSiriVisible]
  -[AXSpringBoardServer launchVoiceOverImageExplorerViewServiceForResult:withData:]
  -[AXSpringBoardServer resumeMediaForApp:]
  -[AXSpringBoardServer focusedApps]
  -[AXSpringBoardServer pid]
  -[AXSpringBoardServer registerSpringBoardActionHandler:withIdentifierCallback:]
  -[AXSpringBoardServer showAlert:withHandler:]
  -[AXSpringBoardServer isStatusBarNativeFocusable]
  -[AXSpringBoardServer resumeMedia]
  -[AXSpringBoardServer takeScreenshot]
  -[AXSpringBoardServer focusedAppProcess]
  -[AXSpringBoardServer isNotificationCenterVisible]
  -[AXSpringBoardServer pauseMediaForApp:]
  -[AXSpringBoardServer currentAlertHandler]
  -[AXSpringBoardServer _handleMediaPlayingResult:]
  -[AXSpringBoardServer _handleReplyResult:]
  -[AXSpringBoardServer currentDevicesHaveAssistiveTouchCustomActions]
  -[AXSpringBoardServer openSCATCustomGestureCreation]
  -[AXSpringBoardServer _isSystemAppFrontmostExcludingSiri:completion:]
  -[AXSpringBoardServer _shouldValidateEntitlements]
  -[AXSpringBoardServer _sendRemoteViewIPCMessage:withRemoteViewType:withData:]
  -[AXSpringBoardServer isGuidedAccessActive]
  -[AXSpringBoardServer loadGAXBundleForUnmanagedASAM]
  -[AXSpringBoardServer cancelSiriDismissalForAssistiveTouch]
  -[AXSpringBoardServer isSystemAppFrontmost:]
  -[AXSpringBoardServer dismissShelfSwitcher]
  -[AXSpringBoardServer toggleDarkMode]
  -[AXSpringBoardServer reachabilityHandlers]
  -[AXSpringBoardServer armApplePay]
  -[AXSpringBoardServer removeReachabilityHandler:]
  -[AXSpringBoardServer isShowingLongLookNotification]
  -[AXSpringBoardServer pid:]
  -[AXSpringBoardServer toggleSpotlight]
  -[AXSpringBoardServer hasActiveOrPendingCall]
  -[AXSpringBoardServer cancelReachabilityDetection]
  -[AXSpringBoardServer setShowSpeechPlaybackControls:]
  -[AXSpringBoardServer rebootDevice]
  -[AXSpringBoardServer _shouldDispatchLocally]
  -[AXSpringBoardServer isBannerVisible]
  -[AXSpringBoardServer isMagnifierVisible]
  -[AXSpringBoardServer isControlCenterVisible]
  -[AXSpringBoardServer unlockDevice]
  -[AXSpringBoardServer toggleReachability]
  -[AXSpringBoardServer setReachabilityHandlers:]
  -[AXSpringBoardServer _axSpringBoardServerInstance]
  -[AXSpringBoardServer showControlCenter:]
  -[AXSpringBoardServer isPointInsideAccessibilityInspector:]
  -[AXSpringBoardServer isPIPWindowVisible]
  -[AXSpringBoardServer runningAppProcesses]
  -[AXSpringBoardServer openCommandAndControlVocabulary]
  -[AXSpringBoardServer openCommandAndControlSettings]
  -[AXSpringBoardServer relinquishAssertionWithType:identifier:]
  -[AXSpringBoardServer hideNotificationCenter]
  -[AXSpringBoardServer isLockScreenVisible]
  -[AXSpringBoardServer canSetDockIconActivationMode]
  -[AXSpringBoardServer toggleTorch]
  -[AXSpringBoardServer resetDimTimer]
  -[AXSpringBoardServer isStatusBarNativeFocusableIncludingNonDismissableElements:]
  -[AXSpringBoardServer openCommandAndControlCommands]
  -[AXSpringBoardServer setCancelGestureActivation:cancelEnabled:]
  -[AXSpringBoardServer actionHandlers]
  -[AXSpringBoardServer isShelfSwitcherVisible]
  -[AXSpringBoardServer purpleBuddyPID]
  -[AXSpringBoardServer showNotificationCenter:]
  -[AXSpringBoardServer isShowingAXAlert]
  -[AXSpringBoardServer systemAppInfoWithQuery:completion:]
  -[AXSpringBoardServer shouldFocusNonExclusiveSystemUI]
  -[AXSpringBoardServer setShouldFocusNonExclusiveSystemUI:]
  -[AXSpringBoardServer isSystemAppFrontmostExludingSiri]
  -[AXSpringBoardServer activateSOSMode]
  -[AXSpringBoardServer isMediaPlayingForApp:completionHandler:]
  -[AXSpringBoardServer _handleActionResult:]
  -[AXSpringBoardServer init]
  -[AXSpringBoardServer _serviceName]
  -[AXSpringBoardServer _payloadForRemoteViewType:data:]
  -[AXSpringBoardServer isSystemSleeping:]
  -[AXSpringBoardServer wakeUpDeviceIfNecessary]
  -[AXSpringBoardServer openAppSwitcher]


AXAirPodSettingsManager : NSObject
 @property  @? readyBlock
 @property  BOOL ignoreSettingNotifications
 @property  NSArray *pairedAirPods
 @property  BOOL isConnectedToBluetoothSystem

  // class methods
  +[AXAirPodSettingsManager sharedInstance]

  // instance methods
  -[AXAirPodSettingsManager accessibilityDomainAccessor]
  -[AXAirPodSettingsManager supportsSpatialAudioForDeviceAddress:]
  -[AXAirPodSettingsManager _productIdentifierForBTDevice:]
  -[AXAirPodSettingsManager _nps_airPodsDictionaryForPreference:]
  -[AXAirPodSettingsManager disambiguationString]
  -[AXAirPodSettingsManager _nps_updateAirPodsDictionaryForPreference:deviceAddress:value:]
  -[AXAirPodSettingsManager nps_defaultToneVolumeForDeviceAddress:]
  -[AXAirPodSettingsManager supportsToneVolumeForDeviceAddress:]
  -[AXAirPodSettingsManager _didDisconnect]
  -[AXAirPodSettingsManager setVolumeSwipeDuration:forDeviceAddress:]
  -[AXAirPodSettingsManager nps_volumeSwipeDurationForDeviceAddress:]
  -[AXAirPodSettingsManager _didConnectWithSession:]
  -[AXAirPodSettingsManager dealloc]
  -[AXAirPodSettingsManager holdDurationForDeviceAddress:]
  -[AXAirPodSettingsManager supportsTapSpeedForDeviceAddress:]
  -[AXAirPodSettingsManager initSharedInstance]
  -[AXAirPodSettingsManager _retrieveSettingsForAddress:]
  -[AXAirPodSettingsManager pairedAirPods]
  -[AXAirPodSettingsManager nps_setHoldDuration:forDeviceAddress:]
  -[AXAirPodSettingsManager supportsHoldDurationForDeviceAddress:]
  -[AXAirPodSettingsManager setReadyBlock:]
  -[AXAirPodSettingsManager .cxx_destruct]
  -[AXAirPodSettingsManager nps_holdDurationForDeviceAddress:]
  -[AXAirPodSettingsManager defaultToneVolumeForDeviceAddress:]
  -[AXAirPodSettingsManager isAirPodProduct:]
  -[AXAirPodSettingsManager ignoreSettingNotifications]
  -[AXAirPodSettingsManager volumeSwipeDurationForDeviceAddress:]
  -[AXAirPodSettingsManager setNoiseCancellationEnabledWithOneUnit:forDeviceAddress:]
  -[AXAirPodSettingsManager _beginDetach]
  -[AXAirPodSettingsManager noiseCancellationEnabledWithOneUnitForDeviceAddress:]
  -[AXAirPodSettingsManager _deviceWithDeviceAddress:]
  -[AXAirPodSettingsManager _applySettingsForAddress:]
  -[AXAirPodSettingsManager nps_tapSpeedForDeviceAddress:]
  -[AXAirPodSettingsManager nps_setVolumeSwipeDuration:forDeviceAddress:]
  -[AXAirPodSettingsManager nps_setVolumeSwipeEnabled:forDeviceAddress:]
  -[AXAirPodSettingsManager nps_toneVolumeForDeviceAddress:]
  -[AXAirPodSettingsManager nps_setToneVolume:forDeviceAddress:]
  -[AXAirPodSettingsManager setTapSpeed:forDeviceAddress:]
  -[AXAirPodSettingsManager _sessionEventForSession:event:result:]
  -[AXAirPodSettingsManager setVolumeSwipeEnabled:forDeviceAddress:]
  -[AXAirPodSettingsManager supportsVolumeSwipeForDeviceAddress:]
  -[AXAirPodSettingsManager _accessoryEventForManager:event:device:state:]
  -[AXAirPodSettingsManager setToneVolume:forDeviceAddress:]
  -[AXAirPodSettingsManager nps_volumeSwipeEnabledForDeviceAddress:]
  -[AXAirPodSettingsManager start]
  -[AXAirPodSettingsManager isConnectedToBluetoothSystem]
  -[AXAirPodSettingsManager setHoldDuration:forDeviceAddress:]
  -[AXAirPodSettingsManager startWithCallback:]
  -[AXAirPodSettingsManager supportsNoiseCancellationEnabledForDeviceAddress:]
  -[AXAirPodSettingsManager _serviceEventForDevice:serviceMask:eventType:specificEvent:result:]
  -[AXAirPodSettingsManager volumeSwipeEnabledForDeviceAddress:]
  -[AXAirPodSettingsManager _retrieveSettingsFromDevices:]
  -[AXAirPodSettingsManager nps_setTapSpeed:forDeviceAddress:]
  -[AXAirPodSettingsManager setIgnoreSettingNotifications:]
  -[AXAirPodSettingsManager titleForSettings]
  -[AXAirPodSettingsManager nps_noiseCancellationEnabledWithOneUnitForDeviceAddress:]
  -[AXAirPodSettingsManager isBeatsProduct:]
  -[AXAirPodSettingsManager _probeAccessories]
  -[AXAirPodSettingsManager readyBlock]
  -[AXAirPodSettingsManager _applySettings]
  -[AXAirPodSettingsManager toneVolumeForDeviceAddress:]
  -[AXAirPodSettingsManager nps_setNoiseCancellationEnabledWithOneUnit:forDeviceAddress:]
  -[AXAirPodSettingsManager tapSpeedForDeviceAddress:]


AXSwitchControlServer : AXServer
  // class methods
  +[AXSwitchControlServer server]

  // instance methods
  -[AXSwitchControlServer _wasDisconnectedFromClient]
  -[AXSwitchControlServer _willClearServer]
  -[AXSwitchControlServer _didConnectToClient]
  -[AXSwitchControlServer _connectIfNecessary]
  -[AXSwitchControlServer _serviceName]
  -[AXSwitchControlServer _triggerAutomationCommand:]
  -[AXSwitchControlServer setupAutomation]
  -[AXSwitchControlServer tearDownAutomation]
  -[AXSwitchControlServer triggerCommand:]
  -[AXSwitchControlServer currentFocusedElement]
  -[AXSwitchControlServer isScannerActive]
  -[AXSwitchControlServer isScannerPaused]
  -[AXSwitchControlServer isAutoScanEnabled]
  -[AXSwitchControlServer isManualScanEnabled]
  -[AXSwitchControlServer isDwellEnabled]


AXAssertionCoordinator : NSObject
 @property  <AXAssertionCoordinatorDelegate> *delegate
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *assertionQueue
 @property  NSHashTable *assertions

  // instance methods
  -[AXAssertionCoordinator identifier]
  -[AXAssertionCoordinator initWithIdentifier:delegate:]
  -[AXAssertionCoordinator setDelegate:]
  -[AXAssertionCoordinator assertions]
  -[AXAssertionCoordinator delegate]
  -[AXAssertionCoordinator dealloc]
  -[AXAssertionCoordinator .cxx_destruct]
  -[AXAssertionCoordinator setIdentifier:]
  -[AXAssertionCoordinator setAssertions:]
  -[AXAssertionCoordinator acquireAssertionWithReason:]
  -[AXAssertionCoordinator _startTrackingPoorMansAssertion:]
  -[AXAssertionCoordinator _stopTrackingPoorMansAssertion:]
  -[AXAssertionCoordinator assertionQueue]
  -[AXAssertionCoordinator setAssertionQueue:]


AXEventIOSMACPointerInfoRepresentation : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL pressed
 @property  long long buttonIndex
 @property  {CGPoint=dd} location

  // class methods
  +[AXEventIOSMACPointerInfoRepresentation supportsSecureCoding]

  // instance methods
  -[AXEventIOSMACPointerInfoRepresentation pressed]
  -[AXEventIOSMACPointerInfoRepresentation setPressed:]
  -[AXEventIOSMACPointerInfoRepresentation encodeWithCoder:]
  -[AXEventIOSMACPointerInfoRepresentation setLocation:]
  -[AXEventIOSMACPointerInfoRepresentation copyWithZone:]
  -[AXEventIOSMACPointerInfoRepresentation location]
  -[AXEventIOSMACPointerInfoRepresentation initWithCoder:]
  -[AXEventIOSMACPointerInfoRepresentation buttonIndex]
  -[AXEventIOSMACPointerInfoRepresentation setButtonIndex:]


AXRedirectedEventDetector : NSObject
 @property  NSMutableArray *recentEvents
 @property  AXDispatchTimer *flushEventsTimer

  // class methods
  +[AXRedirectedEventDetector flushEvents]
  +[AXRedirectedEventDetector setFlushEventsTimerDelay:]

  // instance methods
  -[AXRedirectedEventDetector .cxx_destruct]
  -[AXRedirectedEventDetector init]
  -[AXRedirectedEventDetector addEvent:]
  -[AXRedirectedEventDetector _flushEventsIfNecessary]
  -[AXRedirectedEventDetector isRedirectedEvent:]
  -[AXRedirectedEventDetector _elapsedTimeFrom:to:]
  -[AXRedirectedEventDetector recentEvents]
  -[AXRedirectedEventDetector setRecentEvents:]
  -[AXRedirectedEventDetector flushEventsTimer]
  -[AXRedirectedEventDetector setFlushEventsTimer:]


AXFirstResponderValueChangeManager : NSObject
  // class methods
  +[AXFirstResponderValueChangeManager sharedInstance]

  // instance methods
  -[AXFirstResponderValueChangeManager outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:]
  -[AXFirstResponderValueChangeManager outputValueChangeForNewValue:oldValue:selectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:shouldOutputSingleCharactersOnly:]
  -[AXFirstResponderValueChangeManager outputValueChangeForNewValue:oldValue:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:isSingleInsert:feedbackType:lastKeyboardKeyPress:]
  -[AXFirstResponderValueChangeManager outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:processApostrophes:]
  -[AXFirstResponderValueChangeManager _outputValueChangeForNewValue:oldValue:isFirstResponderValid:selectedTextRange:oldSelectedTextRange:shouldEchoDeletion:optionalValueChangeType:derivedValueChangeType:didHitBorder:isBreakSpaceCharacter:isSingleInsert:selectionDeleted:feedbackType:textOperationOccurred:lastKeyboardKeyPress:isSingleCharacterInsertOrDelete:singleInsertDeleteAttString:singleInsertDeleteString:isSingleCharacterUpdate:wordRangeToFindMisspelled:pasteOperationSucceeded:shouldOutputSingleCharactersOnly:processApostrophes:]
  -[AXFirstResponderValueChangeManager _handleApostropheIfNeeded:]
  -[AXFirstResponderValueChangeManager _handleAttributedApostropheIfNeeded:]
  -[AXFirstResponderValueChangeManager wordBreakSet]


AXAssertionWorkItem : NSObject
 @property  NSString *type
 @property  NSString *identifier
 @property  BOOL acquire
 @property  unsigned long retries

  // instance methods
  -[AXAssertionWorkItem identifier]
  -[AXAssertionWorkItem type]
  -[AXAssertionWorkItem setRetries:]
  -[AXAssertionWorkItem .cxx_destruct]
  -[AXAssertionWorkItem acquire]
  -[AXAssertionWorkItem retries]
  -[AXAssertionWorkItem initWithType:identifier:isAcquisition:]


AXServer : NSObject
 @property  NSString *serverIdentifier
 @property  NSMutableArray *assertionWorkBacklog
 @property  AXDispatchTimer *assertionRetryTimer
 @property  NSObject<OS_dispatch_queue> *assertionWorkQueue
 @property  AXIPCClient *client
 @property  AXIPCServer *server
 @property  BOOL shouldRegisterClientCallbackSourceOnMainRunloop

  // instance methods
  -[AXServer sendMessage:]
  -[AXServer _wasDisconnectedFromClient]
  -[AXServer dealloc]
  -[AXServer acquireAssertionWithType:identifier:]
  -[AXServer _willClearServer]
  -[AXServer .cxx_destruct]
  -[AXServer setClient:]
  -[AXServer _didConnectToServer]
  -[AXServer _didConnectToClient]
  -[AXServer client]
  -[AXServer server]
  -[AXServer _connectIfNecessary]
  -[AXServer sendSimpleMessage:]
  -[AXServer setServer:]
  -[AXServer relinquishAssertionWithType:identifier:]
  -[AXServer init]
  -[AXServer _serviceName]
  -[AXServer serverIdentifier]
  -[AXServer sendSimpleMessage:enqueueError:]
  -[AXServer sendSimpleMessageWithResult:]
  -[AXServer sendSimpleMessageWithObjectResult:]
  -[AXServer _sendMessage:error:]
  -[AXServer sendAsynchronousMessage:replyOnQueue:boolResultHandler:]
  -[AXServer sendAsynchronousMessage:replyOnQueue:objectResultHandler:]
  -[AXServer sendAsynchronousMessage:replyOnQueue:handler:]
  -[AXServer _processAssertionBacklog]
  -[AXServer _initializeAssertionBookkeeping]
  -[AXServer _connectServerIfNecessary]
  -[AXServer _ensureAssertionsHaveBeenProcessedWithCompletion:]
  -[AXServer setServerIdentifier:]
  -[AXServer shouldRegisterClientCallbackSourceOnMainRunloop]
  -[AXServer setShouldRegisterClientCallbackSourceOnMainRunloop:]
  -[AXServer assertionWorkBacklog]
  -[AXServer setAssertionWorkBacklog:]
  -[AXServer assertionRetryTimer]
  -[AXServer setAssertionRetryTimer:]
  -[AXServer assertionWorkQueue]
  -[AXServer setAssertionWorkQueue:]


AXEventPointerInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  double pointerX
 @property  double pointerY
 @property  double pointerZ
 @property  double pointerAccelX
 @property  double pointerAccelY
 @property  double pointerAccelZ
 @property  BOOL isPointerMove
 @property  double pointerButtonMask
 @property  double pointerButtonNumber
 @property  double pointerButtonClickCount
 @property  double pointerButtonPressure
 @property  BOOL pointerIsAbsolute
 @property  AXEventRepresentation *scrollEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventPointerInfoRepresentation supportsSecureCoding]

  // instance methods
  -[AXEventPointerInfoRepresentation encodeWithCoder:]
  -[AXEventPointerInfoRepresentation .cxx_destruct]
  -[AXEventPointerInfoRepresentation copyWithZone:]
  -[AXEventPointerInfoRepresentation isEqual:]
  -[AXEventPointerInfoRepresentation initWithCoder:]
  -[AXEventPointerInfoRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventPointerInfoRepresentation pointerX]
  -[AXEventPointerInfoRepresentation setPointerX:]
  -[AXEventPointerInfoRepresentation pointerY]
  -[AXEventPointerInfoRepresentation setPointerY:]
  -[AXEventPointerInfoRepresentation pointerZ]
  -[AXEventPointerInfoRepresentation setPointerZ:]
  -[AXEventPointerInfoRepresentation pointerAccelX]
  -[AXEventPointerInfoRepresentation setPointerAccelX:]
  -[AXEventPointerInfoRepresentation pointerAccelY]
  -[AXEventPointerInfoRepresentation setPointerAccelY:]
  -[AXEventPointerInfoRepresentation pointerAccelZ]
  -[AXEventPointerInfoRepresentation setPointerAccelZ:]
  -[AXEventPointerInfoRepresentation isPointerMove]
  -[AXEventPointerInfoRepresentation setIsPointerMove:]
  -[AXEventPointerInfoRepresentation pointerButtonMask]
  -[AXEventPointerInfoRepresentation setPointerButtonMask:]
  -[AXEventPointerInfoRepresentation pointerButtonNumber]
  -[AXEventPointerInfoRepresentation setPointerButtonNumber:]
  -[AXEventPointerInfoRepresentation pointerButtonClickCount]
  -[AXEventPointerInfoRepresentation setPointerButtonClickCount:]
  -[AXEventPointerInfoRepresentation pointerButtonPressure]
  -[AXEventPointerInfoRepresentation setPointerButtonPressure:]
  -[AXEventPointerInfoRepresentation pointerIsAbsolute]
  -[AXEventPointerInfoRepresentation setPointerIsAbsolute:]
  -[AXEventPointerInfoRepresentation scrollEvent]
  -[AXEventPointerInfoRepresentation setScrollEvent:]


AXBackBoardServer : AXServer
 @property  BOOL invertColorsEnabled
 @property  BOOL inPreboardMode
 @property  BOOL inCheckerBoardMode

  // class methods
  +[AXBackBoardServer server]

  // instance methods
  -[AXBackBoardServer registerAssistiveTouchPID:]
  -[AXBackBoardServer setCapsLockLightOn:]
  -[AXBackBoardServer setInCheckerBoardMode:]
  -[AXBackBoardServer postEvent:systemEvent:]
  -[AXBackBoardServer hearingAidServerPID]
  -[AXBackBoardServer isRestrictedForAAC]
  -[AXBackBoardServer userEventOccurred]
  -[AXBackBoardServer accessibilityPreferenceAsMobile:]
  -[AXBackBoardServer convertFrame:toContextId:displayId:]
  -[AXBackBoardServer setZoomInitialFocusRect:fromContext:]
  -[AXBackBoardServer setInPreboardMode:]
  -[AXBackBoardServer requestGuidedAccessSessionEndWithCompletion:]
  -[AXBackBoardServer setInvertColorsEnabled:]
  -[AXBackBoardServer zoomInitialFocusRectWithQueryingContext:]
  -[AXBackBoardServer inCheckerBoardMode]
  -[AXBackBoardServer convertFrame:fromContextId:displayId:]
  -[AXBackBoardServer accessibilityUIServicePID]
  -[AXBackBoardServer setSwitchControlHasScreenSwitch:]
  -[AXBackBoardServer convertPoint:fromContextId:]
  -[AXBackBoardServer _springboardParametersForGuidedAccessAvailability]
  -[AXBackBoardServer adjustSystemZoom:]
  -[AXBackBoardServer dealloc]
  -[AXBackBoardServer postEvent:afterNamedTap:includeTaps:]
  -[AXBackBoardServer convertFrame:toContextId:]
  -[AXBackBoardServer blueLightStatusEnabled]
  -[AXBackBoardServer .cxx_destruct]
  -[AXBackBoardServer registerAccessibilityUIServicePID:]
  -[AXBackBoardServer setSwitchControlRendersDeviceUnusable:]
  -[AXBackBoardServer _sendRequestGuidedAccessSessionMessage:numberOfRetryAttempts:completion:]
  -[AXBackBoardServer tripleClickHomeButtonPress]
  -[AXBackBoardServer convertFrame:fromContextId:]
  -[AXBackBoardServer registerSiriViewServicePID:]
  -[AXBackBoardServer setLockScreenDimTimerEnabled:]
  -[AXBackBoardServer disableBrightnessFilters]
  -[AXBackBoardServer jetsamThirdPartyApps]
  -[AXBackBoardServer performGuidedAccessAutomationCommand:error:]
  -[AXBackBoardServer setDeviceOrientation:]
  -[AXBackBoardServer setHearingAidControlIsVisible:]
  -[AXBackBoardServer adaptationEnabled]
  -[AXBackBoardServer isGuidedAccessInWorkspace]
  -[AXBackBoardServer setIsSpeakScreenHighlightVisible:]
  -[AXBackBoardServer toggleGuidedAccess]
  -[AXBackBoardServer brightnessFiltersEnabled]
  -[AXBackBoardServer isGuidedAccessSelfLockedToApp:]
  -[AXBackBoardServer backboardServiceInstance]
  -[AXBackBoardServer setAccessibilityPreferenceAsMobile:value:notification:]
  -[AXBackBoardServer setSessionIsLoginSession:]
  -[AXBackBoardServer homeClickSwallowedForGuidedAccess]
  -[AXBackBoardServer currentGuidedAccessModeAndSessionApp:]
  -[AXBackBoardServer invertColorsEnabled]
  -[AXBackBoardServer accessibilityLiveCaptionsPID]
  -[AXBackBoardServer convertPoint:toContextId:displayId:]
  -[AXBackBoardServer guidedAccessEffectiveAppBundleIdentifier:]
  -[AXBackBoardServer restoreCachedBrightnessFilters]
  -[AXBackBoardServer convertPoint:toContextId:]
  -[AXBackBoardServer isGuidedAccessActive]
  -[AXBackBoardServer registerGestureConflictWithZoom:]
  -[AXBackBoardServer convertFrame:fromContextId:toContextId:displayId:]
  -[AXBackBoardServer loadGAXBundleForUnmanagedASAM]
  -[AXBackBoardServer registerFullKeyboardAccessDaemonPID:]
  -[AXBackBoardServer guidedAccessIgnoredRegions]
  -[AXBackBoardServer guidedAccessEffectiveAppBundleIdentifier]
  -[AXBackBoardServer validateClarityUIAdminPasscode:completion:]
  -[AXBackBoardServer sessionIsLoginSessionWithResult:]
  -[AXBackBoardServer _shouldDispatchLocally]
  -[AXBackBoardServer inPreboardMode]
  -[AXBackBoardServer registerLiveCaptionsPID:]
  -[AXBackBoardServer contextIdForPosition:]
  -[AXBackBoardServer guidedAccessAvailability]
  -[AXBackBoardServer isGuidedAccessUnmanagedSelfLocked]
  -[AXBackBoardServer resetAccessibilityFeatures]
  -[AXBackBoardServer accessibilityAssistiveTouchPID]
  -[AXBackBoardServer registerHearingAidServerPID:]
  -[AXBackBoardServer accessibilityFullKeyboardAccessDaemonPID]
  -[AXBackBoardServer requestGuidedAccessSessionStartWithConfigurationDictionary:completion:]
  -[AXBackBoardServer supportsAccessibilityDisplayFilters]
  -[AXBackBoardServer convertPoint:fromContextId:displayId:]
  -[AXBackBoardServer contextIdHostingContextId:]
  -[AXBackBoardServer init]
  -[AXBackBoardServer _serviceName]
  -[AXBackBoardServer colorFilterFromLastUpdate]
  -[AXBackBoardServer setClarityUIAdminPasscode:]
  -[AXBackBoardServer supportsAdaptation]
  -[AXBackBoardServer convertFrame:fromContextId:toContextId:]


AXAssertion : NSObject
 @property  NSString *assertionType
 @property  NSString *identifier

  // class methods
  +[AXAssertion assertionWithType:identifier:]
  +[AXAssertion ensureAssertionsHaveBeenProcessedWithCompletion:]

  // instance methods
  -[AXAssertion identifier]
  -[AXAssertion initWithType:identifier:]
  -[AXAssertion assertionType]
  -[AXAssertion dealloc]
  -[AXAssertion .cxx_destruct]
  -[AXAssertion setIdentifier:]
  -[AXAssertion _hasValidAssertionType]
  -[AXAssertion _notifyServerAssertionWasAcquired]
  -[AXAssertion _notifyServerAssertionWasRelinquished]
  -[AXAssertion setAssertionType:]


_AXAssertionServer : NSObject
 @property  NSMutableDictionary *heldAssertionMap
 @property  @? assertionWasAcquiredHandler
 @property  @? assertionWasReleasedHandler

  // instance methods
  -[_AXAssertionServer .cxx_destruct]
  -[_AXAssertionServer init]
  -[_AXAssertionServer addHeldAssertionOfType:byClient:]
  -[_AXAssertionServer removeHeldAssertionOfType:byClient:]
  -[_AXAssertionServer clientsHoldingAssertionOfType:]
  -[_AXAssertionServer assertionWasAcquiredHandler]
  -[_AXAssertionServer setAssertionWasAcquiredHandler:]
  -[_AXAssertionServer assertionWasReleasedHandler]
  -[_AXAssertionServer setAssertionWasReleasedHandler:]
  -[_AXAssertionServer heldAssertionMap]
  -[_AXAssertionServer setHeldAssertionMap:]


AXCapabilityManager : NSObject
  // class methods
  +[AXCapabilityManager sharedManager]

  // instance methods
  -[AXCapabilityManager isCapabilityAvailable:]
  -[AXCapabilityManager capabilities]
  -[AXCapabilityManager isAccessibilityCapability:]


FKAAvailableCommands : NSObject
 @property  NSString *siriShortcutsDidChangeObserverToken
 @property  id forceTouchEnabledDidChangeObserverToken
 @property  NSMutableDictionary *tokensToUpdateBlocks
 @property  NSSet *commands
 @property  NSArray *categories
 @property  AXSSKeyboardCommandMap *commandMap

  // class methods
  +[FKAAvailableCommands sharedInstance]

  // instance methods
  -[FKAAvailableCommands categories]
  -[FKAAvailableCommands dealloc]
  -[FKAAvailableCommands .cxx_destruct]
  -[FKAAvailableCommands commands]
  -[FKAAvailableCommands init]
  -[FKAAvailableCommands _siriShortcutCommands]
  -[FKAAvailableCommands commandMap]
  -[FKAAvailableCommands setCommandMap:]
  -[FKAAvailableCommands registerUpdateBlock:]
  -[FKAAvailableCommands unregisterUpdateBlockWithToken:]
  -[FKAAvailableCommands siriShortcutsDidChangeObserverToken]
  -[FKAAvailableCommands setSiriShortcutsDidChangeObserverToken:]
  -[FKAAvailableCommands forceTouchEnabledDidChangeObserverToken]
  -[FKAAvailableCommands setForceTouchEnabledDidChangeObserverToken:]
  -[FKAAvailableCommands tokensToUpdateBlocks]
  -[FKAAvailableCommands setTokensToUpdateBlocks:]


AXValueChangeUtilities : NSObject
  // class methods
  +[AXValueChangeUtilities phoneNumberWithoutFormattingCharacters:]
  +[AXValueChangeUtilities handleValueChangeForPhoneDeletionWithOldString:newString:]
  +[AXValueChangeUtilities findLocationOfDifferenceInOldString:withNewString:]


AXUserEventTimer : NSObject
  // class methods
  +[AXUserEventTimer sharedInstance]

  // instance methods
  -[AXUserEventTimer userEventOccurred]
  -[AXUserEventTimer .cxx_destruct]
  -[AXUserEventTimer init]
  -[AXUserEventTimer _startTrackingPoorMansAssertion:]
  -[AXUserEventTimer _stopTrackingPoorMansAssertion:]
  -[AXUserEventTimer _canUseIdleTimerServices]
  -[AXUserEventTimer acquireAssertionToDisableIdleTimerWithReason:]


AXOutputRequest : NSObject
  // class methods
  +[AXOutputRequest processString:brailleString:breakWords:withLanguage:atIndex:category:]
  +[AXOutputRequest processStringsAndLanguages:brailleString:breakWords:withLanguage:atIndex:category:]
  +[AXOutputRequest addAttributesToAction:fromDictionary:]


AXIPCDelayedMessage : NSObject
 @property  AXIPCMessage *message
 @property  @? completion

  // instance methods
  -[AXIPCDelayedMessage setMessage:]
  -[AXIPCDelayedMessage completion]
  -[AXIPCDelayedMessage initWithMessage:completion:]
  -[AXIPCDelayedMessage setCompletion:]
  -[AXIPCDelayedMessage .cxx_destruct]
  -[AXIPCDelayedMessage message]


AXIPCServerClientRegistration : NSObject
 @property  unsigned int port
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_source> *invalidationSource
 @property  <AXIPCServerClientRegistrationDelegate> *delegate

  // instance methods
  -[AXIPCServerClientRegistration identifier]
  -[AXIPCServerClientRegistration port]
  -[AXIPCServerClientRegistration setDelegate:]
  -[AXIPCServerClientRegistration delegate]
  -[AXIPCServerClientRegistration dealloc]
  -[AXIPCServerClientRegistration .cxx_destruct]
  -[AXIPCServerClientRegistration invalidationSource]
  -[AXIPCServerClientRegistration initWithPort:identifier:]
  -[AXIPCServerClientRegistration isEqual:]


AXIPCServerMessageHandlerContext : NSObject
 @property  @? handler
 @property  id target
 @property  SEL selector
 @property  BOOL async

  // instance methods
  -[AXIPCServerMessageHandlerContext selector]
  -[AXIPCServerMessageHandlerContext target]
  -[AXIPCServerMessageHandlerContext async]
  -[AXIPCServerMessageHandlerContext .cxx_destruct]
  -[AXIPCServerMessageHandlerContext handler]
  -[AXIPCServerMessageHandlerContext initWithHandler:]
  -[AXIPCServerMessageHandlerContext initWithTarget:selector:async:]


AXIPCServer : NSObject <AXIPCServerClientRegistrationDelegate>
 @property  BOOL running
 @property  NSString *serviceName
 @property  NSMutableDictionary *handlers
 @property  @? defaultHandler
 @property  NSMutableArray *delayedMessages
 @property  BOOL perPidService
 @property  unsigned int machPort
 @property  @? clientInvalidationCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXIPCServer handlers]
  -[AXIPCServer setServiceName:]
  -[AXIPCServer setRunning:]
  -[AXIPCServer _clientIdentificationForAuditToken:]
  -[AXIPCServer setHandlerWithTarget:selector:forKey:]
  -[AXIPCServer setPerPidService:]
  -[AXIPCServer initWithServiceName:perPidService:]
  -[AXIPCServer _processValidatedMessage:completion:]
  -[AXIPCServer _startServerThread]
  -[AXIPCServer __slowpath__clientWithAuditToken:hasRequiredEntitlementFromSet:]
  -[AXIPCServer setHandler:forKey:]
  -[AXIPCServer startServerWithError:]
  -[AXIPCServer _registerContext:forKey:]
  -[AXIPCServer _handleClientRegistration:]
  -[AXIPCServer dealloc]
  -[AXIPCServer isRunning]
  -[AXIPCServer clientInvalidationCallback]
  -[AXIPCServer serviceName]
  -[AXIPCServer setQueueSize:]
  -[AXIPCServer .cxx_destruct]
  -[AXIPCServer setHandlerWithTarget:selector:async:forKey:possibleRequiredEntitlements:]
  -[AXIPCServer defaultHandler]
  -[AXIPCServer _applyCustomQueueSize]
  -[AXIPCServer setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:]
  -[AXIPCServer machPort]
  -[AXIPCServer initWithPort:serviceRunLoopSource:]
  -[AXIPCServer removePossibleRequiredEntitlement:forMessageWithKey:]
  -[AXIPCServer _addPossibleRequiredEntitlementsToMessageWithKey:first:vothers:]
  -[AXIPCServer setDefaultHandler:]
  -[AXIPCServer perPidService]
  -[AXIPCServer _handleErrorWithMessage:outError:]
  -[AXIPCServer delayedMessages]
  -[AXIPCServer setClientInvalidationCallback:]
  -[AXIPCServer setHandlerWithTarget:selector:async:forKey:]
  -[AXIPCServer addPossibleRequiredEntitlement:forMessageWithKey:]
  -[AXIPCServer _handleIncomingMessage:securityToken:auditToken:clientPort:completion:]
  -[AXIPCServer removeHandlerForKey:]
  -[AXIPCServer removeAllHandlersForTarget:]
  -[AXIPCServer setHandlers:]
  -[AXIPCServer setDelayedMessages:]
  -[AXIPCServer _handleClientInvalidation:]
  -[AXIPCServer setServiceRunLoopSource:]
  -[AXIPCServer stopServerWithError:]
  -[AXIPCServer _clientHasEntitlementWithPort:auditToken:message:completion:]
  -[AXIPCServer serverClientRegistrationInvalidated:]
  -[AXIPCServer _hasEntitlement:entitlements:clientPort:auditToken:message:completion:]


AXBannerServices : NSObject <AXUIClientDelegate>
 @property  AXUIClient *serverClient
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXBannerServices sharedInstance]

  // instance methods
  -[AXBannerServices connectionWithServiceWasInterruptedForUserInterfaceClient:]
  -[AXBannerServices .cxx_destruct]
  -[AXBannerServices _init]
  -[AXBannerServices serverClient]
  -[AXBannerServices presentBannerWithTitle:message:duration:]
  -[AXBannerServices dismissBanner]


AXPostConnectionTask : NSObject
 @property  @? postConnectionBlock
 @property  AXAccessQueueTimer *timeoutTimer
 @property  BOOL didTimeout

  // instance methods
  -[AXPostConnectionTask setDidTimeout:]
  -[AXPostConnectionTask .cxx_destruct]
  -[AXPostConnectionTask didTimeout]
  -[AXPostConnectionTask initWithConnectBlock:timeout:accessQueue:]
  -[AXPostConnectionTask performTask]
  -[AXPostConnectionTask _performTask]
  -[AXPostConnectionTask postConnectionBlock]
  -[AXPostConnectionTask setPostConnectionBlock:]
  -[AXPostConnectionTask timeoutTimer]
  -[AXPostConnectionTask setTimeoutTimer:]


AXIPCOutstandingAsyncRequest : NSObject
 @property  NSObject<OS_dispatch_queue> *replyQueue
 @property  unsigned int replyPort
 @property  @? replyHandler
 @property  ^{__CFRunLoopSource=} replyMachPortSource

  // class methods
  +[AXIPCOutstandingAsyncRequest lookupByPort:]
  +[AXIPCOutstandingAsyncRequest initialize]
  +[AXIPCOutstandingAsyncRequest unregisterByPort:]
  +[AXIPCOutstandingAsyncRequest registerOutstandingRequest:]

  // instance methods
  -[AXIPCOutstandingAsyncRequest rawResponseReceived:]
  -[AXIPCOutstandingAsyncRequest _responseReceived:]
  -[AXIPCOutstandingAsyncRequest initialSendAborted]
  -[AXIPCOutstandingAsyncRequest dealloc]
  -[AXIPCOutstandingAsyncRequest replyHandler]
  -[AXIPCOutstandingAsyncRequest .cxx_destruct]
  -[AXIPCOutstandingAsyncRequest replyQueue]
  -[AXIPCOutstandingAsyncRequest replyMachPortSource]
  -[AXIPCOutstandingAsyncRequest replyPort]
  -[AXIPCOutstandingAsyncRequest sendOnceRightDestroyed]
  -[AXIPCOutstandingAsyncRequest registerAndListenForResponse]
  -[AXIPCOutstandingAsyncRequest initWithReplyPort:handlerQueue:handler:]


AXIPCClient : NSObject
 @property  BOOL connected
 @property  NSString *serviceName
 @property  ^{__CFMachPort=} serverPort
 @property  NSMutableArray *postConnectionTasks
 @property  AXAccessQueue *connectionQueue
 @property  BOOL usesPerPidLookup
 @property  int pid
 @property  unsigned int serviceMachPort
 @property  @? portDeathHandler
 @property  AXAccessQueue *portDeathAccessQueue
 @property  float timeout
 @property  NSString *clientIdentifier
 @property  unsigned int clientCallbackPort
 @property  ^{__CFRunLoopSource=} clientCallbackSource
 @property  BOOL shouldRegisterCallbackSourceOnMainRunloop

  // class methods
  +[AXIPCClient allClients]
  +[AXIPCClient initialize]

  // instance methods
  -[AXIPCClient setServiceName:]
  -[AXIPCClient connectionQueue]
  -[AXIPCClient setClientIdentifier:]
  -[AXIPCClient setConnectionQueue:]
  -[AXIPCClient clientCallbackSource]
  -[AXIPCClient _registerWithServer]
  -[AXIPCClient isConnected]
  -[AXIPCClient usesPerPidLookup]
  -[AXIPCClient _sendRegistrationMessageWithRetries:]
  -[AXIPCClient setConnected:]
  -[AXIPCClient _verifyConnectionWithError:]
  -[AXIPCClient clientIdentifier]
  -[AXIPCClient setUsesPerPidLookup:]
  -[AXIPCClient portDeathHandler]
  -[AXIPCClient _attemptToEstablishConnection]
  -[AXIPCClient sendSimpleMessage:synchronizationPort:error:]
  -[AXIPCClient setTimeout:]
  -[AXIPCClient setServerPort:]
  -[AXIPCClient dealloc]
  -[AXIPCClient portDeathAccessQueue]
  -[AXIPCClient _createRegistrationWithReplyMachPort:forAsyncReplyOnQueue:responseHandler:]
  -[AXIPCClient serviceName]
  -[AXIPCClient .cxx_destruct]
  -[AXIPCClient _prepareToSendMessage:withError:prepSuccessHandler:]
  -[AXIPCClient timeout]
  -[AXIPCClient _serverDied]
  -[AXIPCClient setPortDeathAccessQueue:]
  -[AXIPCClient initWithServiceName:]
  -[AXIPCClient _commonInit]
  -[AXIPCClient setPortDeathHandler:]
  -[AXIPCClient connectWithError:]
  -[AXIPCClient _descriptionForMachError:]
  -[AXIPCClient shouldRegisterCallbackSourceOnMainRunloop]
  -[AXIPCClient verifyConnectionExists]
  -[AXIPCClient _handleErrorWithMessage:outError:]
  -[AXIPCClient pid]
  -[AXIPCClient _handleErrorWithMessage:machError:outError:]
  -[AXIPCClient sendAsyncMessage:withReplyHandler:]
  -[AXIPCClient sendSimpleMessage:]
  -[AXIPCClient serviceMachPort]
  -[AXIPCClient initWithPort:]
  -[AXIPCClient setPid:]
  -[AXIPCClient postConnectionTasks]
  -[AXIPCClient sendMessage:withError:]
  -[AXIPCClient clientCallbackPort]
  -[AXIPCClient establishConnectionWithTimeout:completion:]
  -[AXIPCClient serverPort]
  -[AXIPCClient sendSimpleMessage:withError:]
  -[AXIPCClient disconnectWithError:]
  -[AXIPCClient setShouldRegisterCallbackSourceOnMainRunloop:]
  -[AXIPCClient setPostConnectionTasks:]
  -[AXIPCClient sendAsyncMessage:replyOnQueue:replyHandler:]


AXDeviceMonitor : NSObject
 @property  <AXDeviceMonitorDelegate> *delegate

  // class methods
  +[AXDeviceMonitor bluetoothKeyboardDevices]

  // instance methods
  -[AXDeviceMonitor _commonInitWithRunLoop:]
  -[AXDeviceMonitor initWithMatchingDictionary:callbackRunLoop:]
  -[AXDeviceMonitor begin]
  -[AXDeviceMonitor informDelegate]
  -[AXDeviceMonitor setDelegate:]
  -[AXDeviceMonitor copyDevices]
  -[AXDeviceMonitor delegate]
  -[AXDeviceMonitor dealloc]
  -[AXDeviceMonitor .cxx_destruct]
  -[AXDeviceMonitor initWithMatchingMultiple:callbackRunLoop:]
  -[AXDeviceMonitor invalidate]
  -[AXDeviceMonitor didRemoveDevice:]
  -[AXDeviceMonitor _existingDevicesForDevice:]
  -[AXDeviceMonitor didAddDevice:]


AXSubsystemEventTap : AXLoggingSubsystem
  // class methods
  +[AXSubsystemEventTap identifier]


AXSubsystemUserInterfaceService : AXLoggingSubsystem
  // class methods
  +[AXSubsystemUserInterfaceService identifier]


AXSubsystemSpeechAssetDownloader : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSpeechAssetDownloader identifier]


AXSubsystemZoom : AXLoggingSubsystem
  // class methods
  +[AXSubsystemZoom identifier]


AXSubsystemVOTiCloud : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVOTiCloud identifier]


AXSubsystemVOTAudio : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVOTAudio identifier]


AXSubsystemBrailleGestures : AXLoggingSubsystem
  // class methods
  +[AXSubsystemBrailleGestures identifier]


AXSubsystemVisualAlerts : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVisualAlerts identifier]


AXSubsystemAudioRouting : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAudioRouting identifier]


AXSubsystemLocCaptionPanel : AXLoggingSubsystem
  // class methods
  +[AXSubsystemLocCaptionPanel identifier]


AXSubsystemSpeakSelection : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSpeakSelection identifier]


AXSubsystemSpeakTyping : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSpeakTyping identifier]


AXSubsystemSpeakThis : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSpeakThis identifier]


AXSubsystemContextKit : AXLoggingSubsystem
  // class methods
  +[AXSubsystemContextKit identifier]


AXSubsystemSCElementNav : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSCElementNav identifier]


AXSubsystemPronunciations : AXLoggingSubsystem
  // class methods
  +[AXSubsystemPronunciations identifier]


AXSubsystemSCPauseResume : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSCPauseResume identifier]


AXSubsystemBrailleHardware : AXLoggingSubsystem
  // class methods
  +[AXSubsystemBrailleHardware identifier]


AXSubsystemSwitchControlHardware : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSwitchControlHardware identifier]


AXSubsystemVoiceOverIAP : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVoiceOverIAP identifier]


AXSubsystemVoiceOverLifeCycle : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVoiceOverLifeCycle identifier]


AXSubsystemMagnifier : AXLoggingSubsystem
  // class methods
  +[AXSubsystemMagnifier identifier]


AXSubsystemMagnifierBright : AXLoggingSubsystem
  // class methods
  +[AXSubsystemMagnifierBright identifier]


AXSubsystemVoiceOver : AXLoggingSubsystem
  // class methods
  +[AXSubsystemVoiceOver identifier]


AXSubsystemAXNotifications : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXNotifications identifier]


AXSubsystemAXVectorKit : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXVectorKit identifier]


AXSubsystemAXCharacterVoices : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXCharacterVoices identifier]


AXSubsystemAXAggregateLogging : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXAggregateLogging identifier]


AXSubsystemMagicTapToggle : AXLoggingSubsystem
  // class methods
  +[AXSubsystemMagicTapToggle identifier]


AXSubsystemBrokenHomeButton : AXLoggingSubsystem
  // class methods
  +[AXSubsystemBrokenHomeButton identifier]


AXSubsystemDataMigrator : AXLoggingSubsystem
  // class methods
  +[AXSubsystemDataMigrator identifier]


AXSubsystemInvertColors : AXLoggingSubsystem
  // class methods
  +[AXSubsystemInvertColors identifier]


AXSubsystemAXSettings : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXSettings identifier]


AXSubsystemAXUIViewService : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXUIViewService identifier]


AXSubsystemBBServer : AXLoggingSubsystem
  // class methods
  +[AXSubsystemBBServer identifier]


AXSubsystemSBServer : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSBServer identifier]


AXSubsystemIPC : AXLoggingSubsystem
  // class methods
  +[AXSubsystemIPC identifier]


AXSubsystemSpeakFingerManager : AXLoggingSubsystem
  // class methods
  +[AXSubsystemSpeakFingerManager identifier]


AXSubsystemAXCustomizableMouse : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXCustomizableMouse identifier]


AXSubsystemAXSoundBoard : AXLoggingSubsystem
  // class methods
  +[AXSubsystemAXSoundBoard identifier]


AXMIDIDeviceEntityEndpoint : NSObject
 @property  unsigned int midiEndpoint
 @property  AXMIDIDeviceEntity *entity
 @property  NSString *name
 @property  NSString *manufacturer
 @property  NSString *model
 @property  NSNumber *uniqueID
 @property  NSNumber *receiveChannels
 @property  NSNumber *transmitChannels
 @property  NSNumber *isEmbedded
 @property  NSNumber *isBroadcast
 @property  NSNumber *isOffline
 @property  NSNumber *isPrivate
 @property  NSString *driverName

  // instance methods
  -[AXMIDIDeviceEntityEndpoint isOffline]
  -[AXMIDIDeviceEntityEndpoint model]
  -[AXMIDIDeviceEntityEndpoint uniqueID]
  -[AXMIDIDeviceEntityEndpoint entity]
  -[AXMIDIDeviceEntityEndpoint .cxx_destruct]
  -[AXMIDIDeviceEntityEndpoint isPrivate]
  -[AXMIDIDeviceEntityEndpoint name]
  -[AXMIDIDeviceEntityEndpoint manufacturer]
  -[AXMIDIDeviceEntityEndpoint setEntity:]
  -[AXMIDIDeviceEntityEndpoint isEmbedded]
  -[AXMIDIDeviceEntityEndpoint driverName]
  -[AXMIDIDeviceEntityEndpoint initWithMIDIEndpoint:entity:]
  -[AXMIDIDeviceEntityEndpoint receiveChannels]
  -[AXMIDIDeviceEntityEndpoint transmitChannels]
  -[AXMIDIDeviceEntityEndpoint isBroadcast]
  -[AXMIDIDeviceEntityEndpoint midiEndpoint]
  -[AXMIDIDeviceEntityEndpoint setMidiEndpoint:]


AXMIDIEvent : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned short channel
 @property  long long ordinalChannel
 @property  BOOL omniChannel
 @property  long long type
 @property  BOOL downEvent
 @property  unsigned char note
 @property  long long noteValue
 @property  unsigned char noteOctave
 @property  unsigned char pressure
 @property  unsigned char control
 @property  unsigned char controlValue
 @property  unsigned char program
 @property  unsigned short pitchBend

  // class methods
  +[AXMIDIEvent supportsSecureCoding]

  // instance methods
  -[AXMIDIEvent pressure]
  -[AXMIDIEvent setChannel:]
  -[AXMIDIEvent encodeWithCoder:]
  -[AXMIDIEvent type]
  -[AXMIDIEvent channel]
  -[AXMIDIEvent note]
  -[AXMIDIEvent setPressure:]
  -[AXMIDIEvent setType:]
  -[AXMIDIEvent program]
  -[AXMIDIEvent copyWithZone:]
  -[AXMIDIEvent setNote:]
  -[AXMIDIEvent initWithCoder:]
  -[AXMIDIEvent isDownEvent]
  -[AXMIDIEvent ordinalChannel]
  -[AXMIDIEvent isOmniChannel]
  -[AXMIDIEvent noteValue]
  -[AXMIDIEvent noteOctave]
  -[AXMIDIEvent noteDescription]
  -[AXMIDIEvent control]
  -[AXMIDIEvent setControl:]
  -[AXMIDIEvent controlValue]
  -[AXMIDIEvent setControlValue:]
  -[AXMIDIEvent setProgram:]
  -[AXMIDIEvent pitchBend]
  -[AXMIDIEvent setPitchBend:]


AXPasscodeAccessor : NSObject
 @property  NSString *passcode
 @property  NSString *serviceName
 @property  NSString *accountName
 @property  NSString *groupName
 @property  NSObject<OS_os_log> *logFacility

  // instance methods
  -[AXPasscodeAccessor passcode]
  -[AXPasscodeAccessor accountName]
  -[AXPasscodeAccessor serviceName]
  -[AXPasscodeAccessor .cxx_destruct]
  -[AXPasscodeAccessor groupName]
  -[AXPasscodeAccessor initWithServiceName:accountName:groupName:logFacility:]
  -[AXPasscodeAccessor attemptToSetPasscode:]
  -[AXPasscodeAccessor _newQuery]
  -[AXPasscodeAccessor logFacility]


AXVoiceOverServer : AXServer
 @property  BOOL isScreenCurtainEnabled

  // class methods
  +[AXVoiceOverServer server]

  // instance methods
  -[AXVoiceOverServer _connectIfNecessary]
  -[AXVoiceOverServer _serviceName]
  -[AXVoiceOverServer triggerCommand:]
  -[AXVoiceOverServer currentFocusedElement]
  -[AXVoiceOverServer lastSpokenPhrases]
  -[AXVoiceOverServer clearLastSpokenPhrases:]
  -[AXVoiceOverServer lastSpokenContents]
  -[AXVoiceOverServer lastSoundsPlayed]
  -[AXVoiceOverServer currentRotorName]
  -[AXVoiceOverServer lastScreenChange]
  -[AXVoiceOverServer triggerGesture:]
  -[AXVoiceOverServer triggerCommand:withArgument:]
  -[AXVoiceOverServer triggerEventCommand:]
  -[AXVoiceOverServer isBrailleInputUIShowing]
  -[AXVoiceOverServer isHandwritingInputUIShowing]
  -[AXVoiceOverServer isBluetoothBrailleDisplayConnected]
  -[AXVoiceOverServer isScreenCurtainEnabled]
  -[AXVoiceOverServer performAutomationTestingCommand:userInfo:timeout:completion:]


AXMIDIDevice : NSObject <AXMIDIDeviceEntityDelegate>
 @property  unsigned int midiDevice
 @property  NSMutableSet *entities
 @property  <AXMIDIDeviceProtocol> *delegate
 @property  NSString *name
 @property  NSString *manufacturer
 @property  NSString *model
 @property  NSNumber *uniqueID
 @property  NSNumber *deviceID
 @property  NSNumber *isOffline
 @property  NSNumber *isPrivate
 @property  NSString *driverName
 @property  NSNumber *supportsGeneralMIDI
 @property  NSNumber *supportsMMC
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMIDIDevice isOffline]
  -[AXMIDIDevice deviceID]
  -[AXMIDIDevice model]
  -[AXMIDIDevice setEntities:]
  -[AXMIDIDevice uniqueID]
  -[AXMIDIDevice setDelegate:]
  -[AXMIDIDevice fullDescription]
  -[AXMIDIDevice delegate]
  -[AXMIDIDevice entities]
  -[AXMIDIDevice .cxx_destruct]
  -[AXMIDIDevice isPrivate]
  -[AXMIDIDevice name]
  -[AXMIDIDevice manufacturer]
  -[AXMIDIDevice isEqual:]
  -[AXMIDIDevice driverName]
  -[AXMIDIDevice entity:didAddSource:]
  -[AXMIDIDevice entity:didRemoveSource:]
  -[AXMIDIDevice entity:didAddDestination:]
  -[AXMIDIDevice entity:didRemoveDestination:]
  -[AXMIDIDevice initWithMIDIDevice:delegate:]
  -[AXMIDIDevice supportsGeneralMIDI]
  -[AXMIDIDevice supportsGeneralMMC]
  -[AXMIDIDevice resetAndDetectEntities]
  -[AXMIDIDevice addMidiEntity:]
  -[AXMIDIDevice removeMidiEntity:]
  -[AXMIDIDevice addMidiSource:]
  -[AXMIDIDevice removeMidiSource:]
  -[AXMIDIDevice addMidiDestination:]
  -[AXMIDIDevice removeMidiDestination:]
  -[AXMIDIDevice _entityForMidiEntity:addIfNeeded:]
  -[AXMIDIDevice midiDevice]
  -[AXMIDIDevice setMidiDevice:]
  -[AXMIDIDevice supportsMMC]


AXBinaryMonitor : NSObject
 @property  NSMutableDictionary *bundleHandlerMap
 @property  NSMutableDictionary *frameworkHandlerMap
 @property  NSMutableDictionary *dylibHandlerMap
 @property  NSMutableDictionary *appHandlerMap
 @property  NSMutableDictionary *appExtensionHandlerMap
 @property  NSObject<OS_dispatch_queue> *binaryMonitorQueue

  // class methods
  +[AXBinaryMonitor sharedInstance]
  +[AXBinaryMonitor initialize]

  // instance methods
  -[AXBinaryMonitor addHandler:forApp:]
  -[AXBinaryMonitor frameworkHandlerMap]
  -[AXBinaryMonitor _loadImageIsAppExtension:]
  -[AXBinaryMonitor _appExtensionNameForImage:]
  -[AXBinaryMonitor _dylibNameForImage:]
  -[AXBinaryMonitor _appNameForImage:]
  -[AXBinaryMonitor _applyHandlerBlocks:handlerMap:]
  -[AXBinaryMonitor .cxx_destruct]
  -[AXBinaryMonitor addHandler:forBundleName:]
  -[AXBinaryMonitor binaryMonitorQueue]
  -[AXBinaryMonitor _loadImageIsBundle:]
  -[AXBinaryMonitor _loadImageIsDylib:]
  -[AXBinaryMonitor _bundleNameAndType:]
  -[AXBinaryMonitor addHandler:forBundleID:]
  -[AXBinaryMonitor setFrameworkHandlerMap:]
  -[AXBinaryMonitor bundleHandlerMap]
  -[AXBinaryMonitor setBundleHandlerMap:]
  -[AXBinaryMonitor setBinaryMonitorQueue:]
  -[AXBinaryMonitor dylibHandlerMap]
  -[AXBinaryMonitor _frameworkNameForImage:]
  -[AXBinaryMonitor appHandlerMap]
  -[AXBinaryMonitor setAppExtensionHandlerMap:]
  -[AXBinaryMonitor addHandler:forDylib:]
  -[AXBinaryMonitor addHandler:forAppExtension:]
  -[AXBinaryMonitor _bundleNameForImage:]
  -[AXBinaryMonitor setDylibHandlerMap:]
  -[AXBinaryMonitor _handleLoadedImagePath:]
  -[AXBinaryMonitor evaluateExistingBinaries]
  -[AXBinaryMonitor setAppHandlerMap:]
  -[AXBinaryMonitor _loadImageIsFramework:]
  -[AXBinaryMonitor addHandler:forFramework:]
  -[AXBinaryMonitor appExtensionHandlerMap]
  -[AXBinaryMonitor init]
  -[AXBinaryMonitor _loadImageIsApp:]
  -[AXBinaryMonitor _addHandler:withName:toMap:]


FKASiriShortcutKeyboardCommand : AXSSKeyboardCommand
 @property  AXSiriShortcut *shortcut
 @property  NSString *siriShortcutIdentifier

  // class methods
  +[FKASiriShortcutKeyboardCommand supportsSecureCoding]
  +[FKASiriShortcutKeyboardCommand commandWithSiriShortcutIdentifier:]

  // instance methods
  -[FKASiriShortcutKeyboardCommand isEqualToCommand:]
  -[FKASiriShortcutKeyboardCommand encodeWithCoder:]
  -[FKASiriShortcutKeyboardCommand perform]
  -[FKASiriShortcutKeyboardCommand .cxx_destruct]
  -[FKASiriShortcutKeyboardCommand localizedName]
  -[FKASiriShortcutKeyboardCommand setShortcut:]
  -[FKASiriShortcutKeyboardCommand copyWithZone:]
  -[FKASiriShortcutKeyboardCommand shortcut]
  -[FKASiriShortcutKeyboardCommand initWithCoder:]
  -[FKASiriShortcutKeyboardCommand initWithSiriShortcutIdentifier:]
  -[FKASiriShortcutKeyboardCommand siriShortcutIdentifier]


AXMobileConfigurationInterface : NSObject
  // class methods
  +[AXMobileConfigurationInterface activeRestrictionIdentifiers]


AXVoiceOverActivity : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSUUID *uuid
 @property  NSSet *textualContexts
 @property  NSSet *appIdentifiers
 @property  NSUUID *punctuationGroup
 @property  NSNumber *tableHeaders
 @property  NSNumber *tableRowAndColumn
 @property  NSNumber *speakEmojis
 @property  NSNumber *containerFeedback
 @property  NSNumber *imageDescriptions
 @property  NSNumber *hints
 @property  NSNumber *numberFeedback
 @property  NSNumber *typingStyle
 @property  NSNumber *navigationStyle
 @property  NSString *voiceIdentifier
 @property  NSNumber *speechRate
 @property  NSNumber *volume
 @property  NSNumber *speechMuted
 @property  NSNumber *soundMuted
 @property  NSNumber *audioDucking
 @property  NSNumber *modifierKeys
 @property  NSNumber *brailleStatusCellGeneral
 @property  NSNumber *brailleStatusCellText
 @property  NSString *brailleTable
 @property  NSNumber *brailleOutput
 @property  NSNumber *brailleInput
 @property  NSNumber *brailleAutoAdvanceDuration
 @property  NSNumber *brailleAlerts
 @property  BOOL builtIn

  // class methods
  +[AXVoiceOverActivity supportsSecureCoding]
  +[AXVoiceOverActivity observerKeys]

  // instance methods
  -[AXVoiceOverActivity setBuiltIn:]
  -[AXVoiceOverActivity encodeWithCoder:]
  -[AXVoiceOverActivity uuid]
  -[AXVoiceOverActivity .cxx_destruct]
  -[AXVoiceOverActivity setUuid:]
  -[AXVoiceOverActivity setVolume:]
  -[AXVoiceOverActivity volume]
  -[AXVoiceOverActivity setName:]
  -[AXVoiceOverActivity copyWithZone:]
  -[AXVoiceOverActivity name]
  -[AXVoiceOverActivity appIdentifiers]
  -[AXVoiceOverActivity isEqual:]
  -[AXVoiceOverActivity init]
  -[AXVoiceOverActivity initWithCoder:]
  -[AXVoiceOverActivity hints]
  -[AXVoiceOverActivity setHints:]
  -[AXVoiceOverActivity identicalProperty:property2:]
  -[AXVoiceOverActivity isIdenticalTo:]
  -[AXVoiceOverActivity textualContexts]
  -[AXVoiceOverActivity setTextualContexts:]
  -[AXVoiceOverActivity setAppIdentifiers:]
  -[AXVoiceOverActivity punctuationGroup]
  -[AXVoiceOverActivity setPunctuationGroup:]
  -[AXVoiceOverActivity tableHeaders]
  -[AXVoiceOverActivity setTableHeaders:]
  -[AXVoiceOverActivity tableRowAndColumn]
  -[AXVoiceOverActivity setTableRowAndColumn:]
  -[AXVoiceOverActivity speakEmojis]
  -[AXVoiceOverActivity setSpeakEmojis:]
  -[AXVoiceOverActivity containerFeedback]
  -[AXVoiceOverActivity setContainerFeedback:]
  -[AXVoiceOverActivity imageDescriptions]
  -[AXVoiceOverActivity setImageDescriptions:]
  -[AXVoiceOverActivity numberFeedback]
  -[AXVoiceOverActivity setNumberFeedback:]
  -[AXVoiceOverActivity typingStyle]
  -[AXVoiceOverActivity setTypingStyle:]
  -[AXVoiceOverActivity navigationStyle]
  -[AXVoiceOverActivity setNavigationStyle:]
  -[AXVoiceOverActivity voiceIdentifier]
  -[AXVoiceOverActivity setVoiceIdentifier:]
  -[AXVoiceOverActivity speechRate]
  -[AXVoiceOverActivity setSpeechRate:]
  -[AXVoiceOverActivity speechMuted]
  -[AXVoiceOverActivity setSpeechMuted:]
  -[AXVoiceOverActivity soundMuted]
  -[AXVoiceOverActivity setSoundMuted:]
  -[AXVoiceOverActivity audioDucking]
  -[AXVoiceOverActivity setAudioDucking:]
  -[AXVoiceOverActivity modifierKeys]
  -[AXVoiceOverActivity setModifierKeys:]
  -[AXVoiceOverActivity brailleStatusCellGeneral]
  -[AXVoiceOverActivity setBrailleStatusCellGeneral:]
  -[AXVoiceOverActivity brailleStatusCellText]
  -[AXVoiceOverActivity setBrailleStatusCellText:]
  -[AXVoiceOverActivity brailleTable]
  -[AXVoiceOverActivity setBrailleTable:]
  -[AXVoiceOverActivity brailleOutput]
  -[AXVoiceOverActivity setBrailleOutput:]
  -[AXVoiceOverActivity brailleInput]
  -[AXVoiceOverActivity setBrailleInput:]
  -[AXVoiceOverActivity brailleAutoAdvanceDuration]
  -[AXVoiceOverActivity setBrailleAutoAdvanceDuration:]
  -[AXVoiceOverActivity brailleAlerts]
  -[AXVoiceOverActivity setBrailleAlerts:]
  -[AXVoiceOverActivity builtIn]


AXValidationManager : NSObject
 @property  BOOL shouldPerformValidationChecks
 @property  BOOL shouldLogToConsole
 @property  BOOL shouldCrashOnError
 @property  BOOL shouldReportToServer
 @property  unsigned long numberOfValidations
 @property  unsigned long numberOfValidationErrors
 @property  NSMutableArray *consoleErrorMessages
 @property  unsigned long numberOfValidationWarnings
 @property  NSMutableArray *consoleWarningMessages
 @property  <AXValidationReportingServices> *validationReportingServices
 @property  BOOL forceDoNotReport
 @property  NSString *validationTargetName
 @property  NSString *overrideProcessName
 @property  BOOL debugBuild

  // class methods
  +[AXValidationManager sharedInstance]

  // instance methods
  -[AXValidationManager _resetState]
  -[AXValidationManager numberOfValidationWarnings]
  -[AXValidationManager consoleErrorMessages]
  -[AXValidationManager sendExceptionForInstallingSafeCategory:onTarget:overrideProcessName:]
  -[AXValidationManager setConsoleWarningMessages:]
  -[AXValidationManager validateClass:hasInstanceMethod:withFullSignature:]
  -[AXValidationManager client:validateClass:hasInstanceMethod:withFullSignature:]
  -[AXValidationManager setConsoleErrorMessages:]
  -[AXValidationManager client:validateSwiftStruct:hasSwiftField:withSwiftType:]
  -[AXValidationManager client:validateClass:hasProperty:withType:]
  -[AXValidationManager sendValidateExceptionForProtocol:hasMethod:errorMessage:overrideProcessName:]
  -[AXValidationManager _client:validateClass:hasSwiftField:withTypeString:isAnyClass:]
  -[AXValidationManager validateSwiftStruct:hasSwiftFieldOfAnyClass:]
  -[AXValidationManager validateClass:hasInstanceVariable:withType:]
  -[AXValidationManager validateClass:hasProperty:withType:]
  -[AXValidationManager installSafeCategory:canInteractWithTargetClass:]
  -[AXValidationManager _nameForMethod:]
  -[AXValidationManager consoleWarningMessages]
  -[AXValidationManager sendFailedTestCase:withTag:overrideProcessName:]
  -[AXValidationManager client:validateClass:hasProperty:customGetter:customSetter:withType:]
  -[AXValidationManager validateProtocol:hasOptionalClassMethod:]
  -[AXValidationManager _client:validateClass:hasMethod:methodType:]
  -[AXValidationManager installSafeCategories:afterDelay:validationTargetName:overrideProcessName:]
  -[AXValidationManager client:validateClass:hasInstanceMethod:withFullSignature:argList:]
  -[AXValidationManager sendValidateExceptionForClass:hasClassMethod:errorMessage:overrideProcessName:]
  -[AXValidationManager validationTargetName]
  -[AXValidationManager _printConsoleReport:isDelayed:]
  -[AXValidationManager client:validateSwiftStruct:]
  -[AXValidationManager client:validateProtocol:hasOptionalInstanceMethod:]
  -[AXValidationManager .cxx_destruct]
  -[AXValidationManager setDebugBuild:]
  -[AXValidationManager sendValidateExceptionForClass:isKindOfClass:errorMessage:overrideProcessName:]
  -[AXValidationManager sendValidateExceptionForClass:hasInstanceVariable:errorMessage:overrideProcessName:]
  -[AXValidationManager validateProtocol:hasRequiredInstanceMethod:]
  -[AXValidationManager sendValidateExceptionForClass:errorMessage:overrideProcessName:]
  -[AXValidationManager overrideProcessName]
  -[AXValidationManager client:validateClass:hasSwiftFieldOfAnyClass:]
  -[AXValidationManager client:validateProtocol:hasOptionalClassMethod:]
  -[AXValidationManager sendGenericReport:withTag:overrideProcessName:]
  -[AXValidationManager validateClass:]
  -[AXValidationManager validateClass:hasProperty:customGetter:customSetter:withType:]
  -[AXValidationManager _iterateMethodsOfType:onClass:block:]
  -[AXValidationManager setOverrideProcessName:]
  -[AXValidationManager sendValidationSuccessForProcessName:]
  -[AXValidationManager performValidations:withPreValidationHandler:postValidationHandler:]
  -[AXValidationManager _client:validateClass:hasClassMethod:withFullSignature:argList:]
  -[AXValidationManager sendValidateExceptionForClass:hasInstanceMethod:errorMessage:overrideProcessName:]
  -[AXValidationManager setValidationReportingServices:]
  -[AXValidationManager _client:validateStruct:hasSwiftField:withTypeString:isAnyClass:]
  -[AXValidationManager _generateWarningsForMethodType:onClass:superclassMethods:numberOfSuperclassMethods:]
  -[AXValidationManager client:validateClass:isKindOfClass:]
  -[AXValidationManager validateClass:hasSwiftField:withSwiftType:]
  -[AXValidationManager _clearState]
  -[AXValidationManager client:validateProtocol:hasRequiredClassMethod:]
  -[AXValidationManager client:validateProtocol:conformsToProtocol:]
  -[AXValidationManager client:validateSwiftStruct:hasSwiftFieldOfAnyClass:]
  -[AXValidationManager sendValidateExceptionForClass:hasProperty:errorMessage:overrideProcessName:]
  -[AXValidationManager setShouldPerformValidationChecks:]
  -[AXValidationManager validateClass:hasSwiftFieldOfAnyClass:]
  -[AXValidationManager shouldLogToConsole]
  -[AXValidationManager validateSwiftStruct:hasSwiftField:withSwiftType:]
  -[AXValidationManager forceDoNotReport]
  -[AXValidationManager setNumberOfValidationWarnings:]
  -[AXValidationManager setShouldLogToConsole:]
  -[AXValidationManager sendFailedAssertionWithErrorMessage:overrideProcessName:]
  -[AXValidationManager isDebugBuild]
  -[AXValidationManager client:validateClass:hasSwiftField:withSwiftType:]
  -[AXValidationManager client:validateProtocol:hasMethod:isInstanceMethod:isRequired:]
  -[AXValidationManager sendExceptionForSafeIVarKey:onTarget:overrideProcessName:]
  -[AXValidationManager client:validateProtocol:hasRequiredInstanceMethod:]
  -[AXValidationManager _client:validateClass:hasMethod:methodType:returnType:arguments:]
  -[AXValidationManager setNumberOfValidationErrors:]
  -[AXValidationManager _client:validateType:hasSwiftField:handleSwiftValidationProblems:]
  -[AXValidationManager shouldCrashOnError]
  -[AXValidationManager client:validateClass:hasClassMethod:withFullSignature:]
  -[AXValidationManager _generateWarningsOnSafeCategoryClass:]
  -[AXValidationManager setShouldReportToServer:]
  -[AXValidationManager validateProtocol:hasMethod:isInstanceMethod:isRequired:]
  -[AXValidationManager sendValidateExceptionForProtocol:hasProperty:errorMessage:overrideProcessName:]
  -[AXValidationManager validateClass:isKindOfClass:]
  -[AXValidationManager shouldPerformValidationChecks]
  -[AXValidationManager setNumberOfValidations:]
  -[AXValidationManager sendValidateExceptionForClass:conformsToProtocol:errorMessage:overrideProcessName:]
  -[AXValidationManager numberOfValidations]
  -[AXValidationManager client:validateClass:hasInstanceVariable:withType:]
  -[AXValidationManager sendExceptionForSafeValueKey:onTarget:overrideProcessName:]
  -[AXValidationManager shouldReportToServer]
  -[AXValidationManager validateProtocol:hasOptionalInstanceMethod:]
  -[AXValidationManager sendExceptionForSafeCategoryOnWrongTarget:targetBundle:expectedBundle:overrideProcessName:]
  -[AXValidationManager client:validateClass:]
  -[AXValidationManager sendValidateExceptionForProtocol:conformsToProtocol:errorMessage:overrideProcessName:]
  -[AXValidationManager performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:]
  -[AXValidationManager setValidationTargetName:]
  -[AXValidationManager validateSwiftStruct:]
  -[AXValidationManager _generateWarningsForPrefixedMethodNames:client:methodType:methodName:className:]
  -[AXValidationManager validateClass:hasClassMethod:withFullSignature:]
  -[AXValidationManager installSafeCategory:]
  -[AXValidationManager validationReportingServices]
  -[AXValidationManager setShouldCrashOnError:]
  -[AXValidationManager setForceDoNotReport:]
  -[AXValidationManager client:validateClass:conformsToProtocol:]
  -[AXValidationManager validateProtocol:conformsToProtocol:]
  -[AXValidationManager validateProtocol:hasRequiredClassMethod:]
  -[AXValidationManager init]
  -[AXValidationManager sendExceptionForSafeBlock:overrideProcessName:]
  -[AXValidationManager numberOfValidationErrors]
  -[AXValidationManager validateClass:conformsToProtocol:]


AXEventPathInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  ^v pathWindow
 @property  unsigned char pathIndex
 @property  unsigned char pathIdentity
 @property  {CGPoint=dd} pathLocation
 @property  unsigned int pathWindowContextID
 @property  unsigned char pathProximity
 @property  float pathPressure
 @property  float pathMajorRadius
 @property  float pathMinorRadius
 @property  float pathMajorRadiusTolerance
 @property  float pathTwist
 @property  float pathQuality
 @property  float pathDensity
 @property  unsigned int pathEventMask
 @property  float orbValue
 @property  unsigned int transducerType
 @property  float altitude
 @property  float azimuth
 @property  float barrelPressure
 @property  unsigned int willUpdateMask
 @property  unsigned int didUpdateMask
 @property  BOOL shouldSetTouchFlag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventPathInfoRepresentation supportsSecureCoding]
  +[AXEventPathInfoRepresentation representationWithPathInfo:]

  // instance methods
  -[AXEventPathInfoRepresentation altitude]
  -[AXEventPathInfoRepresentation setAltitude:]
  -[AXEventPathInfoRepresentation setPathIndex:]
  -[AXEventPathInfoRepresentation encodeWithCoder:]
  -[AXEventPathInfoRepresentation pathIndex]
  -[AXEventPathInfoRepresentation copyWithZone:]
  -[AXEventPathInfoRepresentation transducerType]
  -[AXEventPathInfoRepresentation setTransducerType:]
  -[AXEventPathInfoRepresentation azimuth]
  -[AXEventPathInfoRepresentation initWithCoder:]
  -[AXEventPathInfoRepresentation pathMajorRadius]
  -[AXEventPathInfoRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventPathInfoRepresentation writeToPathInfo:]
  -[AXEventPathInfoRepresentation pathIdentity]
  -[AXEventPathInfoRepresentation setPathIdentity:]
  -[AXEventPathInfoRepresentation pathLocation]
  -[AXEventPathInfoRepresentation setPathLocation:]
  -[AXEventPathInfoRepresentation pathWindowContextID]
  -[AXEventPathInfoRepresentation setPathWindowContextID:]
  -[AXEventPathInfoRepresentation pathProximity]
  -[AXEventPathInfoRepresentation setPathProximity:]
  -[AXEventPathInfoRepresentation pathPressure]
  -[AXEventPathInfoRepresentation setPathPressure:]
  -[AXEventPathInfoRepresentation setPathMajorRadius:]
  -[AXEventPathInfoRepresentation pathMinorRadius]
  -[AXEventPathInfoRepresentation setPathMinorRadius:]
  -[AXEventPathInfoRepresentation pathMajorRadiusTolerance]
  -[AXEventPathInfoRepresentation setPathMajorRadiusTolerance:]
  -[AXEventPathInfoRepresentation pathTwist]
  -[AXEventPathInfoRepresentation setPathTwist:]
  -[AXEventPathInfoRepresentation pathQuality]
  -[AXEventPathInfoRepresentation setPathQuality:]
  -[AXEventPathInfoRepresentation pathDensity]
  -[AXEventPathInfoRepresentation setPathDensity:]
  -[AXEventPathInfoRepresentation pathEventMask]
  -[AXEventPathInfoRepresentation setPathEventMask:]
  -[AXEventPathInfoRepresentation orbValue]
  -[AXEventPathInfoRepresentation setOrbValue:]
  -[AXEventPathInfoRepresentation setAzimuth:]
  -[AXEventPathInfoRepresentation barrelPressure]
  -[AXEventPathInfoRepresentation setBarrelPressure:]
  -[AXEventPathInfoRepresentation willUpdateMask]
  -[AXEventPathInfoRepresentation setWillUpdateMask:]
  -[AXEventPathInfoRepresentation didUpdateMask]
  -[AXEventPathInfoRepresentation setDidUpdateMask:]
  -[AXEventPathInfoRepresentation shouldSetTouchFlag]
  -[AXEventPathInfoRepresentation setShouldSetTouchFlag:]
  -[AXEventPathInfoRepresentation pathWindow]
  -[AXEventPathInfoRepresentation setPathWindow:]


AXCodeLoader : NSObject <AXImageMonitorObserver>
 @property  long long trackingMode
 @property  BOOL isTrackingLoadedCodeItems
 @property  BOOL isInitialLoadFinished
 @property  BOOL shouldAutoloadAccessibilityCodeItems
 @property  @? shouldLoadAccessibilityCodeItemBlock
 @property  @? didLoadAccessibilityCodeItemBlock
 @property  @? loadEventWillOccurBlock
 @property  @? loadEventDidOccurBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXCodeLoader defaultLoader]

  // instance methods
  -[AXCodeLoader .cxx_destruct]
  -[AXCodeLoader init]
  -[AXCodeLoader trackingMode]
  -[AXCodeLoader imageMonitor:didAddImage:]
  -[AXCodeLoader iterateInitialImageListForImageMonitor:]
  -[AXCodeLoader initWithImageMonitor:]
  -[AXCodeLoader _validShouldLoadAccessibilityCodeItemBlock]
  -[AXCodeLoader _validDidLoadAccessibilityCodeItemBlock]
  -[AXCodeLoader _validLoadEventWillOccurBlock]
  -[AXCodeLoader _validLoadEventDidOccurBlock]
  -[AXCodeLoader isTrackingLoadedCodeItems]
  -[AXCodeLoader isInitialLoadFinished]
  -[AXCodeLoader beginTrackingLoadedCodeItemsWithMode:completion:targetQueue:]
  -[AXCodeLoader endTrackingLoadedCodeItemsWithCompletion:targetQueue:]
  -[AXCodeLoader _addTrackedCodeItem:]
  -[AXCodeLoader loadedCodeItemPathsUsingTrackedItemsIfAvailable:]
  -[AXCodeLoader _queue_loadedCodeItemsUsingTrackedItemsIfAvailable:]
  -[AXCodeLoader loadedCodeItemsUsingTrackedItemsIfAvailable:]
  -[AXCodeLoader codeItemForBundle:]
  -[AXCodeLoader setAccessibilityCodeItemsNeedLoaded]
  -[AXCodeLoader _scheduleDyldImageActivityTimerWithDelay:]
  -[AXCodeLoader _cancelDyldImageActivityTimer]
  -[AXCodeLoader _consumeBeginTrackingCompletionHandlerIfNeeded]
  -[AXCodeLoader prewarmAccessibilityCodeItemDefinitionsWithCompletion:targetQueue:]
  -[AXCodeLoader _updateAccessibilityCodeItemDefinitionsIfNeeded]
  -[AXCodeLoader _initializeCodeItemMappings]
  -[AXCodeLoader _reconcileTrackedCodeItemsWithAccessibilityCodeItemDefinitions]
  -[AXCodeLoader _platformKeyForPlatform:]
  -[AXCodeLoader _accessibilityCodeItemMatchingName:type:path:]
  -[AXCodeLoader _associateAccessibilityCodeItemWithLoadedCodeItem:]
  -[AXCodeLoader _associateAccessibilityCodeItemsWithAllTrackedCodeItems]
  -[AXCodeLoader _accessibilityBundleMapURLs]
  -[AXCodeLoader _createAccessibilityCodeItemsFromBundleMapURLs:]
  -[AXCodeLoader _loadAccessibilityCodeItems]
  -[AXCodeLoader queryAccessibilityBundleIsLoadedWithName:completion:]
  -[AXCodeLoader setTrackingMode:]
  -[AXCodeLoader shouldAutoloadAccessibilityCodeItems]
  -[AXCodeLoader setShouldAutoloadAccessibilityCodeItems:]
  -[AXCodeLoader shouldLoadAccessibilityCodeItemBlock]
  -[AXCodeLoader setShouldLoadAccessibilityCodeItemBlock:]
  -[AXCodeLoader didLoadAccessibilityCodeItemBlock]
  -[AXCodeLoader setDidLoadAccessibilityCodeItemBlock:]
  -[AXCodeLoader loadEventWillOccurBlock]
  -[AXCodeLoader setLoadEventWillOccurBlock:]
  -[AXCodeLoader loadEventDidOccurBlock]
  -[AXCodeLoader setLoadEventDidOccurBlock:]
  -[AXCodeLoader recomputedCodeItemsForAllFrameworks]
  -[AXCodeLoader recomputedCodeItemsForLoadedAccessibilityBundles]
  -[AXCodeLoader accessibilityCodeItemDefinitions]
  -[AXCodeLoader _stateDescForItem:]
  -[AXCodeLoader logLoaderState]
  -[AXCodeLoader trackedCodeItems]
  -[AXCodeLoader rogueAccessibilityCodeItems]


AXEventAccelerometerInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  unsigned int type
 @property  float x
 @property  float y
 @property  float z
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventAccelerometerInfoRepresentation supportsSecureCoding]

  // instance methods
  -[AXEventAccelerometerInfoRepresentation z]
  -[AXEventAccelerometerInfoRepresentation x]
  -[AXEventAccelerometerInfoRepresentation setX:]
  -[AXEventAccelerometerInfoRepresentation y]
  -[AXEventAccelerometerInfoRepresentation setY:]
  -[AXEventAccelerometerInfoRepresentation setZ:]
  -[AXEventAccelerometerInfoRepresentation encodeWithCoder:]
  -[AXEventAccelerometerInfoRepresentation type]
  -[AXEventAccelerometerInfoRepresentation setType:]
  -[AXEventAccelerometerInfoRepresentation copyWithZone:]
  -[AXEventAccelerometerInfoRepresentation initWithCoder:]
  -[AXEventAccelerometerInfoRepresentation accessibilityEventRepresentationTabularDescription]


AXTrampoline : NSObject
 @property  id caller
 @property  Class targetClass
 @property  BOOL warnAboutUnknownSelectors

  // class methods
  +[AXTrampoline methodDoesNotExistSentinal]
  +[AXTrampoline trampolineWithCaller:targetClass:]
  +[AXTrampoline methodNotFoundSentinal]

  // instance methods
  -[AXTrampoline setCaller:]
  -[AXTrampoline caller]
  -[AXTrampoline methodSignatureForSelector:]
  -[AXTrampoline targetClass]
  -[AXTrampoline .cxx_destruct]
  -[AXTrampoline forwardInvocation:]
  -[AXTrampoline setTargetClass:]
  -[AXTrampoline initWithCaller:targetClass:]
  -[AXTrampoline callerIsClass]
  -[AXTrampoline _findIMPForSelector:]
  -[AXTrampoline warnAboutUnknownSelectors]
  -[AXTrampoline setWarnAboutUnknownSelectors:]


AXPathWrapper : NSObject <NSSecureCoding>
 @property  ^{CGPath=} path

  // class methods
  +[AXPathWrapper supportsSecureCoding]
  +[AXPathWrapper currentSharedInstance]

  // instance methods
  -[AXPathWrapper path]
  -[AXPathWrapper encodeWithCoder:]
  -[AXPathWrapper setPath:]
  -[AXPathWrapper initWithCoder:]


AXAudioHardwareManager : NSObject
  // class methods
  +[AXAudioHardwareManager sharedManager]
  +[AXAudioHardwareManager channelsAreAirplay:route:]
  +[AXAudioHardwareManager channelsAreWiredHeadphones:]
  +[AXAudioHardwareManager enableMultiroute]
  +[AXAudioHardwareManager disableMultiroute]
  +[AXAudioHardwareManager setDefaultPortChannels:]
  +[AXAudioHardwareManager setDefaultRouteDescription:]
  +[AXAudioHardwareManager defaultRouteDescription]
  +[AXAudioHardwareManager updateTestingChannels]
  +[AXAudioHardwareManager channelsForPort:]
  +[AXAudioHardwareManager defaultPortChannels]
  +[AXAudioHardwareManager setDefaultPort:]
  +[AXAudioHardwareManager defaultPort]

  // instance methods
  -[AXAudioHardwareManager init]
  -[AXAudioHardwareManager isDolbyAtmosConfigured]
  -[AXAudioHardwareManager _savedIdForRouteDescription:]
  -[AXAudioHardwareManager savedChannelsForOutput:forSource:]
  -[AXAudioHardwareManager _handleSurroundSoundDefaults:returnedChannels:port:source:]
  -[AXAudioHardwareManager setSavedChannels:forOutput:forSource:]


AXOrator : NSObject <AVSpeechSynthesizerDelegate>
 @property  AXLanguageTaggedContent *selectedContent
 @property  AXLanguageTaggedContent *speakingContent
 @property  NSArray *speakingContentTokenRanges
 @property  unsigned long numberOfTokensToSkip
 @property  AVSpeechSynthesizer *speechSynthesizer
 @property  NSMutableArray *speechSequenceItems
 @property  NSString *lastUtteranceLanguageCode
 @property  {_NSRange=QQ} lastUtteranceSubstringRange
 @property  {_NSRange=QQ} lastSpokenSubstringRange
 @property  AVSpeechUtterance *lastUtterance
 @property  AXLanguageTag *lastUtteranceLanguageTag
 @property  BOOL shouldSpeakNextItemOnResume
 @property  NSString *currentLanguageCode
 @property  BOOL preferredLanguageWasSpecified
 @property  BOOL isProcessingContentForSpeech
 @property  NSMutableArray *additionalContentToProcess
 @property  <AXOratorDelegate> *delegate
 @property  NSString *content
 @property  long long speakingContext
 @property  BOOL spellOutContent
 @property  BOOL supportsAccurateWordCallbacks
 @property  BOOL skipLuthorRules
 @property  double audioSessionInactiveTimeout
 @property  NSString *currentVoiceIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXOrator pauseSpeaking:]
  -[AXOrator setDelegate:]
  -[AXOrator content]
  -[AXOrator delegate]
  -[AXOrator _updateAudioSessionCategory]
  -[AXOrator isPaused]
  -[AXOrator .cxx_destruct]
  -[AXOrator resumeSpeaking:]
  -[AXOrator currentLanguageCode]
  -[AXOrator isSpeaking]
  -[AXOrator init]
  -[AXOrator setContent:]
  -[AXOrator speechRate]
  -[AXOrator speechSynthesizer:didStartSpeechUtterance:]
  -[AXOrator speechSynthesizer:didFinishSpeechUtterance:]
  -[AXOrator speechSynthesizer:didPauseSpeechUtterance:]
  -[AXOrator speechSynthesizer:didContinueSpeechUtterance:]
  -[AXOrator speechSynthesizer:didCancelSpeechUtterance:]
  -[AXOrator speechSynthesizer:willSpeakRangeOfSpeechString:utterance:]
  -[AXOrator addAdditionalContentToSpeechQueue:]
  -[AXOrator currentVoiceIdentifier]
  -[AXOrator setSupportsAccurateWordCallbacks:]
  -[AXOrator setSkipLuthorRules:]
  -[AXOrator startSpeakingWithPreferredLanguage:error:]
  -[AXOrator startSpeakingWithPreferredLanguage:delayBeforeStart:error:]
  -[AXOrator stopSpeaking:]
  -[AXOrator resumeSpeakingAfterDelay:error:]
  -[AXOrator currentSpeechRateForAdjustment]
  -[AXOrator setSpeakingRate:]
  -[AXOrator speakFaster]
  -[AXOrator speakSlower]
  -[AXOrator fastForwardWithBoundary:]
  -[AXOrator rewindWithBoundary:]
  -[AXOrator speakStatusWithLanguage:rate:]
  -[AXOrator contentIsSpeakable]
  -[AXOrator canResumeWithContent:]
  -[AXOrator clearSelectedContent]
  -[AXOrator _startSpeakingSequence]
  -[AXOrator _updateSequenceForSpellOutBehavior]
  -[AXOrator _getLangCodeForItem:]
  -[AXOrator _processAdditionalContentInPreparationForSpeech]
  -[AXOrator _speakNextItemInSequence]
  -[AXOrator _useLanguageSpecificSpeakingRate]
  -[AXOrator _changeSpeakingSpeed:usingLanugageSpecificRate:]
  -[AXOrator _speechSequenceItemsStartingAtContentLocation:]
  -[AXOrator _respeakUtteranceIfNeeded]
  -[AXOrator _currentTokenIndex:]
  -[AXOrator _speakNextTokenFromCurrentTokenIndex:forward:boundary:]
  -[AXOrator _skipByUnit:boundary:]
  -[AXOrator _tokenizeContentIfNeeded]
  -[AXOrator setAudioSessionInactiveTimeout:]
  -[AXOrator _clearAllContentState]
  -[AXOrator _canSpeakTaggedContent:]
  -[AXOrator _successWithCode:error:]
  -[AXOrator lastSpokenSubstringRange]
  -[AXOrator setLastSpokenSubstringRange:]
  -[AXOrator speakingContext]
  -[AXOrator setSpeakingContext:]
  -[AXOrator selectedContent]
  -[AXOrator setSelectedContent:]
  -[AXOrator spellOutContent]
  -[AXOrator setSpellOutContent:]
  -[AXOrator supportsAccurateWordCallbacks]
  -[AXOrator skipLuthorRules]
  -[AXOrator audioSessionInactiveTimeout]
  -[AXOrator speakingContent]
  -[AXOrator setSpeakingContent:]
  -[AXOrator speakingContentTokenRanges]
  -[AXOrator setSpeakingContentTokenRanges:]
  -[AXOrator numberOfTokensToSkip]
  -[AXOrator setNumberOfTokensToSkip:]
  -[AXOrator speechSynthesizer]
  -[AXOrator setSpeechSynthesizer:]
  -[AXOrator speechSequenceItems]
  -[AXOrator setSpeechSequenceItems:]
  -[AXOrator lastUtteranceLanguageCode]
  -[AXOrator setLastUtteranceLanguageCode:]
  -[AXOrator lastUtteranceSubstringRange]
  -[AXOrator setLastUtteranceSubstringRange:]
  -[AXOrator lastUtterance]
  -[AXOrator setLastUtterance:]
  -[AXOrator lastUtteranceLanguageTag]
  -[AXOrator setLastUtteranceLanguageTag:]
  -[AXOrator shouldSpeakNextItemOnResume]
  -[AXOrator setShouldSpeakNextItemOnResume:]
  -[AXOrator setCurrentLanguageCode:]
  -[AXOrator preferredLanguageWasSpecified]
  -[AXOrator setPreferredLanguageWasSpecified:]
  -[AXOrator isProcessingContentForSpeech]
  -[AXOrator setIsProcessingContentForSpeech:]
  -[AXOrator additionalContentToProcess]
  -[AXOrator setAdditionalContentToProcess:]


AXAppRepresentation : NSObject <NSSecureCoding>
 @property  int pid
 @property  NSString *bundleIdentifier
 @property  long long layoutRole
 @property  BOOL isLayoutPrimary
 @property  BOOL isLayoutFullscreenModal

  // class methods
  +[AXAppRepresentation supportsSecureCoding]
  +[AXAppRepresentation appWithPID:bundleID:]

  // instance methods
  -[AXAppRepresentation encodeWithCoder:]
  -[AXAppRepresentation .cxx_destruct]
  -[AXAppRepresentation setBundleIdentifier:]
  -[AXAppRepresentation _commonInit]
  -[AXAppRepresentation setLayoutRole:]
  -[AXAppRepresentation bundleIdentifier]
  -[AXAppRepresentation layoutRole]
  -[AXAppRepresentation pid]
  -[AXAppRepresentation setPid:]
  -[AXAppRepresentation init]
  -[AXAppRepresentation initWithCoder:]
  -[AXAppRepresentation isLayoutPrimary]
  -[AXAppRepresentation isLayoutFullscreenModal]


AXGameControllerEvent : NSObject
  // class methods
  +[AXGameControllerEvent axGameControllerKeyCodeForEvent:]
  +[AXGameControllerEvent axGameControllerInfoRepresentationFromEvent:]


NonRetainedObjectContainer : NSObject
 @property  id nonRetainedObject

  // instance methods
  -[NonRetainedObjectContainer initWithObject:]
  -[NonRetainedObjectContainer .cxx_destruct]
  -[NonRetainedObjectContainer nonRetainedObject]
  -[NonRetainedObjectContainer setNonRetainedObject:]


_AXDyldImageMonitor : NSObject <AXImageMonitor>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_AXDyldImageMonitor sharedInstance]

  // instance methods
  -[_AXDyldImageMonitor .cxx_destruct]
  -[_AXDyldImageMonitor queue]
  -[_AXDyldImageMonitor init]
  -[_AXDyldImageMonitor enumerateLoadedImagePaths:]
  -[_AXDyldImageMonitor loadedImagePaths]
  -[_AXDyldImageMonitor addImageMonitorObserver:]
  -[_AXDyldImageMonitor removeImageMonitorObserver:]
  -[_AXDyldImageMonitor _dyldDidAddImage:]


AXARDescriptionFormatting : NSObject
  // class methods
  +[AXARDescriptionFormatting descriptionForDistance:objectFrame:viewBounds:]
  +[AXARDescriptionFormatting _descriptionForDistance:]
  +[AXARDescriptionFormatting _valueForPercentageFromRawValue:]
  +[AXARDescriptionFormatting _visibilityDescriptionForObjectFrame:viewBounds:]


AXLangMap : NSObject
 @property  BOOL western
 @property  BOOL rtl
 @property  BOOL ambiguous
 @property  NSString *generalLanguageID
 @property  NSArray *alternateLanguageIDs
 @property  NSArray *dialects
 @property  NSArray *associatedAmbiguousLanguages
 @property  AXDialectMap *defaultDialect
 @property  AXDialectMap *userLocaleDialect
 @property  AXDialectMap *userPreferredDialect

  // instance methods
  -[AXLangMap .cxx_destruct]
  -[AXLangMap isRTL]
  -[AXLangMap isAmbiguous]
  -[AXLangMap initWithLanguageID:isWestern:isAmbiguous:isRTL:dialects:alternateLanguageIDs:associatedAmbiguousLanguages:]
  -[AXLangMap basicDescription]
  -[AXLangMap userLocaleDialect]
  -[AXLangMap defaultDialect]
  -[AXLangMap dialectWithLocaleIdentifier:]
  -[AXLangMap dialects]
  -[AXLangMap setDialects:]
  -[AXLangMap isWestern]
  -[AXLangMap setWestern:]
  -[AXLangMap setAmbiguous:]
  -[AXLangMap generalLanguageID]
  -[AXLangMap setGeneralLanguageID:]
  -[AXLangMap userPreferredDialect]
  -[AXLangMap setUserPreferredDialect:]
  -[AXLangMap alternateLanguageIDs]
  -[AXLangMap setAlternateLanguageIDs:]
  -[AXLangMap associatedAmbiguousLanguages]
  -[AXLangMap setAssociatedAmbiguousLanguages:]
  -[AXLangMap setRtl:]


AXSwitchRegistrar : NSObject
 @property  AXSwitch *aSwitch
 @property  ^{__IOHIDDevice=} device
 @property  ^{__IOHIDEventSystemClient=} eventSystemClient
 @property  ^{__IOHIDManager=} manager
 @property  AXMIDIManager *midiManager
 @property  <AXSwitchRegistrarDelegate> *delegate
 @property  BOOL addLongPressSwitch

  // instance methods
  -[AXSwitchRegistrar _handleApplicationWillResignActive:]
  -[AXSwitchRegistrar setManager:]
  -[AXSwitchRegistrar setDelegate:]
  -[AXSwitchRegistrar delegate]
  -[AXSwitchRegistrar dealloc]
  -[AXSwitchRegistrar .cxx_destruct]
  -[AXSwitchRegistrar setDevice:]
  -[AXSwitchRegistrar device]
  -[AXSwitchRegistrar _handleApplicationDidBecomeActive:]
  -[AXSwitchRegistrar setEventSystemClient:]
  -[AXSwitchRegistrar manager]
  -[AXSwitchRegistrar eventSystemClient]
  -[AXSwitchRegistrar init]
  -[AXSwitchRegistrar beginFilteringEvents]
  -[AXSwitchRegistrar endFilteringEvents]
  -[AXSwitchRegistrar isSwitchWithName:]
  -[AXSwitchRegistrar firstAvailableName]
  -[AXSwitchRegistrar _isKeyboardSwitchWithKeyCode:longPress:]
  -[AXSwitchRegistrar _isMFISwitchWithButtonNumber:longPress:]
  -[AXSwitchRegistrar _isATVRemoteButtonSwitchWithUsage:longPress:]
  -[AXSwitchRegistrar _isMIDISwitchWithMidiEvent:]
  -[AXSwitchRegistrar _isGamepadSwitchWithKeyCode:longPress:]
  -[AXSwitchRegistrar _isSwitchWithSource:keyCode:buttonNumber:ATVRemoteButtonUsage:midiEvent:]
  -[AXSwitchRegistrar _handleKeyboardKeyDownEvent:]
  -[AXSwitchRegistrar _handleGamepadButtonPressedEvent:]
  -[AXSwitchRegistrar _handleMIDIEvent:device:entity:source:]
  -[AXSwitchRegistrar _handleATVRemoteButtonDownEvent:]
  -[AXSwitchRegistrar _handleMFIButtonDownValue:]
  -[AXSwitchRegistrar _keyboardMatching]
  -[AXSwitchRegistrar _atvRemoteMatching]
  -[AXSwitchRegistrar _mfiMatching]
  -[AXSwitchRegistrar _gamepadMatching]
  -[AXSwitchRegistrar _filterEvents:]
  -[AXSwitchRegistrar addLongPressSwitch]
  -[AXSwitchRegistrar setAddLongPressSwitch:]
  -[AXSwitchRegistrar aSwitch]
  -[AXSwitchRegistrar setASwitch:]
  -[AXSwitchRegistrar midiManager]
  -[AXSwitchRegistrar setMidiManager:]


AXSwitchRecipeMapping : NSObject
 @property  NSString *action
 @property  NSString *longPressAction
 @property  AXReplayableGesture *gesture
 @property  AXReplayableGesture *longPressGesture
 @property  {CGPoint=dd} holdPoint
 @property  BOOL optional
 @property  NSUUID *switchUUID
 @property  long long switchOriginalAction

  // class methods
  +[AXSwitchRecipeMapping recipeMappingWithDictionaryRepresentation:]

  // instance methods
  -[AXSwitchRecipeMapping setOptional:]
  -[AXSwitchRecipeMapping isOptional]
  -[AXSwitchRecipeMapping setGesture:]
  -[AXSwitchRecipeMapping .cxx_destruct]
  -[AXSwitchRecipeMapping longPressAction]
  -[AXSwitchRecipeMapping longPressGesture]
  -[AXSwitchRecipeMapping gesture]
  -[AXSwitchRecipeMapping action]
  -[AXSwitchRecipeMapping dictionaryRepresentation]
  -[AXSwitchRecipeMapping setAction:]
  -[AXSwitchRecipeMapping init]
  -[AXSwitchRecipeMapping setLongPressGesture:]
  -[AXSwitchRecipeMapping setLongPressAction:]
  -[AXSwitchRecipeMapping holdPoint]
  -[AXSwitchRecipeMapping setHoldPoint:]
  -[AXSwitchRecipeMapping switchUUID]
  -[AXSwitchRecipeMapping setSwitchUUID:]
  -[AXSwitchRecipeMapping switchOriginalAction]
  -[AXSwitchRecipeMapping setSwitchOriginalAction:]


AXSwitchRecipe : NSObject
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSArray *mappings
 @property  double timeout
 @property  NSString *unlocalizedName
 @property  BOOL shouldContinueScanning
 @property  NSString *menuIconIdentifier

  // class methods
  +[AXSwitchRecipe recipeWithDictionaryRepresentation:]

  // instance methods
  -[AXSwitchRecipe mappings]
  -[AXSwitchRecipe setTimeout:]
  -[AXSwitchRecipe uuid]
  -[AXSwitchRecipe .cxx_destruct]
  -[AXSwitchRecipe setUuid:]
  -[AXSwitchRecipe timeout]
  -[AXSwitchRecipe unlocalizedName]
  -[AXSwitchRecipe setUnlocalizedName:]
  -[AXSwitchRecipe dictionaryRepresentation]
  -[AXSwitchRecipe setName:]
  -[AXSwitchRecipe name]
  -[AXSwitchRecipe init]
  -[AXSwitchRecipe setMappings:]
  -[AXSwitchRecipe shouldContinueScanning]
  -[AXSwitchRecipe menuIconIdentifier]
  -[AXSwitchRecipe setMenuIconIdentifier:]


AXAppSceneRepresentation : NSObject <NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSString *fbSceneIdentifier

  // class methods
  +[AXAppSceneRepresentation supportsSecureCoding]

  // instance methods
  -[AXAppSceneRepresentation encodeWithCoder:]
  -[AXAppSceneRepresentation .cxx_destruct]
  -[AXAppSceneRepresentation bundleIdentifier]
  -[AXAppSceneRepresentation init]
  -[AXAppSceneRepresentation initWithCoder:]
  -[AXAppSceneRepresentation initWithBundleIdentifier:fbSceneIdentifier:]
  -[AXAppSceneRepresentation fbSceneIdentifier]


AXDialectMap : NSObject
 @property  AXLangMap *langMap
 @property  NSLocale *locale
 @property  NSString *voiceName
 @property  NSCharacterSet *speakableCharacters
 @property  NSString *specificLanguageID
 @property  AXLanguageManager *langManager
 @property  NSCharacterSet *secondaryLanguageRange
 @property  NSString *languageNameInCurrentLocale
 @property  NSString *languageNameInNativeLocale
 @property  NSString *languageNameAndLocaleInCurrentLocale
 @property  NSString *localeNameInCurrentLocale
 @property  NSString *languageNameAndLocaleInNativeLocale
 @property  NSString *regionID

  // class methods
  +[AXDialectMap _hanjaToHangulMap]
  +[AXDialectMap _hanjaCharacterSet]

  // instance methods
  -[AXDialectMap .cxx_destruct]
  -[AXDialectMap locale]
  -[AXDialectMap setLocale:]
  -[AXDialectMap regionID]
  -[AXDialectMap basicDescription]
  -[AXDialectMap initWithLocale:specificLanguageID:speakableCharacters:secondaryLanguageRange:]
  -[AXDialectMap langManager]
  -[AXDialectMap languageNameInCurrentLocale]
  -[AXDialectMap languageNameInNativeLocale]
  -[AXDialectMap languageNameAndLocaleInCurrentLocale]
  -[AXDialectMap localeNameInCurrentLocale]
  -[AXDialectMap languageNameAndLocaleInNativeLocale]
  -[AXDialectMap isDialectSecondaryForCharacter:]
  -[AXDialectMap canSpeakCharacter:]
  -[AXDialectMap hasSpeakableCharacters]
  -[AXDialectMap canSpeakCharacter:allowTransliteration:]
  -[AXDialectMap canSpeakLongCharacter:]
  -[AXDialectMap canSpeakString:]
  -[AXDialectMap canSpeakString:allowsTransliteration:]
  -[AXDialectMap _languageIsKorean]
  -[AXDialectMap speakingRequiresTransliteration]
  -[AXDialectMap transliteratedStringForString:]
  -[AXDialectMap _transliteratedSpeechCharacters]
  -[AXDialectMap _stringByTransliterationHanjaToHangul:]
  -[AXDialectMap langMap]
  -[AXDialectMap setLangMap:]
  -[AXDialectMap voiceName]
  -[AXDialectMap setVoiceName:]
  -[AXDialectMap specificLanguageID]
  -[AXDialectMap setSpecificLanguageID:]
  -[AXDialectMap speakableCharacters]
  -[AXDialectMap setSpeakableCharacters:]
  -[AXDialectMap secondaryLanguageRange]
  -[AXDialectMap setSecondaryLanguageRange:]


AXLanguageManager : NSObject
 @property  NSArray *langMaps
 @property  NSLocale *userLocale
 @property  NSCharacterSet *commonCharacters
 @property  AXDialectMap *dialectForSystemLanguage
 @property  AXDialectMap *dialectForCurrentLocale
 @property  AXDialectMap *dialectForCurrentRegion
 @property  BOOL _unitTest_didUpdateForLocaleChange
 @property  NSString *systemLanguageID
 @property  AXDialectMap *dialectForUserLocale
 @property  NSSet *preferredLanguageIDsFromUserSelectedKeyboards

  // class methods
  +[AXLanguageManager sharedInstance]
  +[AXLanguageManager voiceOverSupportedInCurrentLanguage]
  +[AXLanguageManager nonlocalizedNameForLanguage:]
  +[AXLanguageManager commonPunctuationCharacters]
  +[AXLanguageManager doNotTranslateWords]
  +[AXLanguageManager stringByReplacingEmojiCharactersWithEmojiDescriptions:]
  +[AXLanguageManager stringByReplacingFatWidthCharactersWithBasicCharacters:]
  +[AXLanguageManager nameForAlternativeVoiceIdentifier:]
  +[AXLanguageManager dialectForAlternativeVoiceIdentifier:]

  // instance methods
  -[AXLanguageManager dealloc]
  -[AXLanguageManager .cxx_destruct]
  -[AXLanguageManager init]
  -[AXLanguageManager basicDescription]
  -[AXLanguageManager _handleUserLocaleDidChange:]
  -[AXLanguageManager systemLanguageID]
  -[AXLanguageManager langMaps]
  -[AXLanguageManager dialectForSystemLanguage]
  -[AXLanguageManager setDialectForSystemLanguage:]
  -[AXLanguageManager dialectForUserLocale]
  -[AXLanguageManager dialectForCurrentLocale]
  -[AXLanguageManager dialectForCurrentRegion]
  -[AXLanguageManager setDialectForCurrentLocale:]
  -[AXLanguageManager setDialectForCurrentRegion:]
  -[AXLanguageManager dialectForLanguageID:]
  -[AXLanguageManager dialectsThatCanSpeakCharacter:]
  -[AXLanguageManager dialectsThatCanSpeakCharacter:overridePreferredLanguages:]
  -[AXLanguageManager _systemPreferredDialectThatCanSpeak:]
  -[AXLanguageManager _addDialectMapsForLanguageCodes:toResults:]
  -[AXLanguageManager _preferredOverrideDialectsThatCanSpeak:dialectIsSecondary:overridePreferredLanguages:preferOverrides:]
  -[AXLanguageManager _dialectsThatCanSpeak:dialectIsSecondary:overridePreferredLanguages:preferOverrides:]
  -[AXLanguageManager dialectsThatCanSpeakCharacter:overridePreferredLanguages:allowTransliteration:]
  -[AXLanguageManager dialectsThatCanSpeakCharacter:overridePreferredLanguages:allowTransliteration:preferOverrides:]
  -[AXLanguageManager dialectsThatCanSpeakString:]
  -[AXLanguageManager dialectsThatCanSpeakString:overridePreferredLanguages:]
  -[AXLanguageManager dialectThatCanSpeakCharacter:]
  -[AXLanguageManager outputLanguageIdentifierForLanguage:]
  -[AXLanguageManager ambiguousDialectsFromUserKeyboardPreferences]
  -[AXLanguageManager isCharacterCommon:]
  -[AXLanguageManager isStringComposedByCommonCharacters:]
  -[AXLanguageManager updateCachedDialects]
  -[AXLanguageManager descriptionOfWord:forLanguage:]
  -[AXLanguageManager preferredLanguageIDsFromUserSelectedKeyboards]
  -[AXLanguageManager characterSetForRanges:]
  -[AXLanguageManager _loadLangMaps]
  -[AXLanguageManager _synthesisProviderDialectMapPerLanguage]
  -[AXLanguageManager _exemplarCharacterSetFromLanguages:]
  -[AXLanguageManager didUpdateForLocaleChange]
  -[AXLanguageManager setLangMaps:]
  -[AXLanguageManager commonCharacters]
  -[AXLanguageManager setCommonCharacters:]
  -[AXLanguageManager userLocale]
  -[AXLanguageManager setUserLocale:]
  -[AXLanguageManager _unitTest_didUpdateForLocaleChange]
  -[AXLanguageManager set_unitTest_didUpdateForLocaleChange:]


AXLanguageTaggedContent : NSObject
 @property  NSMutableString *contentString
 @property  BOOL tagged
 @property  NSMutableArray *tags
 @property  NSMutableOrderedSet *unpredictedAmbiguousLangMaps
 @property  NSMutableOrderedSet *predictedSecondaryLangMaps
 @property  NSArray *currentDialects
 @property  NSArray *shorthandDateMatches
 @property  unsigned long nextShorthandDateIndex
 @property  NSString *content
 @property  NSString *userPreferredLangID

  // instance methods
  -[AXLanguageTaggedContent tags]
  -[AXLanguageTaggedContent content]
  -[AXLanguageTaggedContent dealloc]
  -[AXLanguageTaggedContent setTags:]
  -[AXLanguageTaggedContent .cxx_destruct]
  -[AXLanguageTaggedContent initWithContent:]
  -[AXLanguageTaggedContent appendLanguageTaggedContent:]
  -[AXLanguageTaggedContent enumerateUnpredictedTags:]
  -[AXLanguageTaggedContent enumeratePredictedTags:]
  -[AXLanguageTaggedContent langCodeForlangId:]
  -[AXLanguageTaggedContent langIDforLangCode:]
  -[AXLanguageTaggedContent _allLangIDs]
  -[AXLanguageTaggedContent _languageHintsEvenlyDistributedWithProbability:excludingHints:]
  -[AXLanguageTaggedContent _overrideLanguageDetection:]
  -[AXLanguageTaggedContent _searchForShorthandDates]
  -[AXLanguageTaggedContent _isNamedEntity:]
  -[AXLanguageTaggedContent _addLanguageTagForDateIfNecessary]
  -[AXLanguageTaggedContent _addLanguageTagForCurrentChunk]
  -[AXLanguageTaggedContent _debugLog:token:range:script:dialects:]
  -[AXLanguageTaggedContent tagContent]
  -[AXLanguageTaggedContent _isStringCombinationOfCommonAndEmoji:]
  -[AXLanguageTaggedContent langMapIsSignificant:]
  -[AXLanguageTaggedContent significantAmbiguousLangMaps]
  -[AXLanguageTaggedContent significantAmbiguousLangMapsForUserKeyboards]
  -[AXLanguageTaggedContent unambiguousLangMaps]
  -[AXLanguageTaggedContent ambiguousLangMaps]
  -[AXLanguageTaggedContent hasOnlyWesternLangMaps]
  -[AXLanguageTaggedContent hasOnlyNonWesternLangMaps]
  -[AXLanguageTaggedContent _preferredLanguagesForTagging]
  -[AXLanguageTaggedContent _manuallyProcessContentWithRange:]
  -[AXLanguageTaggedContent _addTag]
  -[AXLanguageTaggedContent primaryAmbiguousDialect]
  -[AXLanguageTaggedContent primaryUnambiguousDialect]
  -[AXLanguageTaggedContent updateTagsForLocalePrefChange]
  -[AXLanguageTaggedContent isTagged]
  -[AXLanguageTaggedContent setTagged:]
  -[AXLanguageTaggedContent unpredictedAmbiguousLangMaps]
  -[AXLanguageTaggedContent setUnpredictedAmbiguousLangMaps:]
  -[AXLanguageTaggedContent userPreferredLangID]
  -[AXLanguageTaggedContent setUserPreferredLangID:]
  -[AXLanguageTaggedContent predictedSecondaryLangMaps]
  -[AXLanguageTaggedContent setPredictedSecondaryLangMaps:]
  -[AXLanguageTaggedContent contentString]
  -[AXLanguageTaggedContent setContentString:]
  -[AXLanguageTaggedContent currentDialects]
  -[AXLanguageTaggedContent setCurrentDialects:]
  -[AXLanguageTaggedContent shorthandDateMatches]
  -[AXLanguageTaggedContent setShorthandDateMatches:]
  -[AXLanguageTaggedContent nextShorthandDateIndex]
  -[AXLanguageTaggedContent setNextShorthandDateIndex:]


_NSObject_SwiftObject_SafeSwiftValuesSupport : NSObject
  // instance methods
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftBoolForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftIntForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftUIntForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftInt8ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftUInt8ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftInt16ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftUInt16ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftInt32ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftUInt32ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftInt64ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftUInt64ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftFloatForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftDoubleForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftCGFloatForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftCGPointForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftCGSizeForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftCGRectForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalBoolForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalIntForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalUIntForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalInt8ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalUInt8ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalInt16ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalUInt16ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalInt32ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalUInt32ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalInt64ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalUInt64ForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalFloatForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalDoubleForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalCGFloatForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalCGPointForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalCGSizeForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalCGRectForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftStringForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftArrayForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalArrayForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftObjectForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftStructForKey:]
  -[_NSObject_SwiftObject_SafeSwiftValuesSupport safeSwiftOptionalStructForKey:]


AXLanguageTag : NSObject <NSCopying>
 @property  {_NSRange=QQ} range
 @property  NSString *content
 @property  NSMutableOrderedSet *unambiguousDialects
 @property  NSMutableOrderedSet *ambiguousDialects
 @property  NSMutableOrderedSet *predictedSecondaryDialects
 @property  BOOL hasAmbigiousDialects
 @property  AXDialectMap *preferredAmbiguousDialect
 @property  AXDialectMap *preferredUnambiguousDialect
 @property  NSString *contentSubstring
 @property  AXDialectMap *dialect
 @property  BOOL wasPredicted
 @property  BOOL createdFromNewline

  // class methods
  +[AXLanguageTag tagWithDialects:range:content:predictedByTagger:]

  // instance methods
  -[AXLanguageTag content]
  -[AXLanguageTag .cxx_destruct]
  -[AXLanguageTag setRange:]
  -[AXLanguageTag copyWithZone:]
  -[AXLanguageTag range]
  -[AXLanguageTag setContent:]
  -[AXLanguageTag hasAmbigiousDialects]
  -[AXLanguageTag preferredAmbiguousDialect]
  -[AXLanguageTag preferredUnambiguousDialect]
  -[AXLanguageTag contentSubstring]
  -[AXLanguageTag dialect]
  -[AXLanguageTag addUnambiguousDialect:]
  -[AXLanguageTag addAmbiguousDialect:]
  -[AXLanguageTag addAmbiguousDialects:]
  -[AXLanguageTag addPredictedSecondaryDialects:]
  -[AXLanguageTag canBeSpokenByDialect:]
  -[AXLanguageTag canBeSpokenByLanguage:]
  -[AXLanguageTag unambiguousDialects]
  -[AXLanguageTag setUnambiguousDialects:]
  -[AXLanguageTag ambiguousDialects]
  -[AXLanguageTag setAmbiguousDialects:]
  -[AXLanguageTag wasPredicted]
  -[AXLanguageTag setWasPredicted:]
  -[AXLanguageTag predictedSecondaryDialects]
  -[AXLanguageTag setPredictedSecondaryDialects:]
  -[AXLanguageTag createdFromNewline]
  -[AXLanguageTag setCreatedFromNewline:]


AXThreadTimerTask : NSObject
 @property  @? block
 @property  BOOL cancel
 @property  BOOL finished
 @property  BOOL active

  // instance methods
  -[AXThreadTimerTask isFinished]
  -[AXThreadTimerTask setFinished:]
  -[AXThreadTimerTask run]
  -[AXThreadTimerTask isActive]
  -[AXThreadTimerTask .cxx_destruct]
  -[AXThreadTimerTask setBlock:]
  -[AXThreadTimerTask setActive:]
  -[AXThreadTimerTask block]
  -[AXThreadTimerTask isCancelled]
  -[AXThreadTimerTask setCancel:]
  -[AXThreadTimerTask runAfterDelay:]


AXThreadTimer : NSObject <AXAccessQueueTimer>
 @property  AXThreadTimerTask *task
 @property  BOOL cancelled
 @property  BOOL automaticallyCancelPendingBlockUponSchedulingNewBlock
 @property  BOOL active
 @property  BOOL pending
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXThreadTimer afterDelay:processBlock:cancelBlock:]
  -[AXThreadTimer setTask:]
  -[AXThreadTimer setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:]
  -[AXThreadTimer isActive]
  -[AXThreadTimer automaticallyCancelPendingBlockUponSchedulingNewBlock]
  -[AXThreadTimer .cxx_destruct]
  -[AXThreadTimer isPending]
  -[AXThreadTimer afterDelay:processBlock:]
  -[AXThreadTimer task]
  -[AXThreadTimer isCancelled]
  -[AXThreadTimer cancel]
  -[AXThreadTimer _runAfterDelay:]
  -[AXThreadTimer initWithThread:]


AXEventKeyInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  unsigned short keyCode
 @property  unsigned short alternativeKeyCode
 @property  unsigned int usagePage
 @property  BOOL keyDown
 @property  NSString *unmodifiedInput
 @property  NSString *modifiedInput
 @property  NSString *shiftModifiedInput
 @property  unsigned int modifierState
 @property  NSString *backupUnmodifiedInput
 @property  NSString *backupModifiedInput
 @property  NSString *backupShiftModifiedInput
 @property  unsigned int gsModifierState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventKeyInfoRepresentation supportsSecureCoding]
  +[AXEventKeyInfoRepresentation prepareForKeycodeTranslation]
  +[AXEventKeyInfoRepresentation _getUSUIKitKeyboardRef]
  +[AXEventKeyInfoRepresentation _getIOHIDKeyboardTypeForGSKeyboardType:]
  +[AXEventKeyInfoRepresentation _getUIKitKeyboardRef]

  // instance methods
  -[AXEventKeyInfoRepresentation usagePage]
  -[AXEventKeyInfoRepresentation setUnmodifiedInput:]
  -[AXEventKeyInfoRepresentation shiftModifiedInput]
  -[AXEventKeyInfoRepresentation setUsagePage:]
  -[AXEventKeyInfoRepresentation encodeWithCoder:]
  -[AXEventKeyInfoRepresentation keyCode]
  -[AXEventKeyInfoRepresentation .cxx_destruct]
  -[AXEventKeyInfoRepresentation setShiftModifiedInput:]
  -[AXEventKeyInfoRepresentation copyWithZone:]
  -[AXEventKeyInfoRepresentation unmodifiedInput]
  -[AXEventKeyInfoRepresentation initWithCoder:]
  -[AXEventKeyInfoRepresentation modifiedInput]
  -[AXEventKeyInfoRepresentation setKeyCode:]
  -[AXEventKeyInfoRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventKeyInfoRepresentation _getUSUIKitKeyboardRef]
  -[AXEventKeyInfoRepresentation _getUIKitKeyboardRef]
  -[AXEventKeyInfoRepresentation translateStringToKeycode]
  -[AXEventKeyInfoRepresentation translateKeycode]
  -[AXEventKeyInfoRepresentation alternativeKeyCode]
  -[AXEventKeyInfoRepresentation setAlternativeKeyCode:]
  -[AXEventKeyInfoRepresentation keyDown]
  -[AXEventKeyInfoRepresentation setKeyDown:]
  -[AXEventKeyInfoRepresentation setModifiedInput:]
  -[AXEventKeyInfoRepresentation modifierState]
  -[AXEventKeyInfoRepresentation setModifierState:]
  -[AXEventKeyInfoRepresentation backupUnmodifiedInput]
  -[AXEventKeyInfoRepresentation setBackupUnmodifiedInput:]
  -[AXEventKeyInfoRepresentation backupModifiedInput]
  -[AXEventKeyInfoRepresentation setBackupModifiedInput:]
  -[AXEventKeyInfoRepresentation backupShiftModifiedInput]
  -[AXEventKeyInfoRepresentation setBackupShiftModifiedInput:]
  -[AXEventKeyInfoRepresentation gsModifierState]
  -[AXEventKeyInfoRepresentation setGsModifierState:]


AXEventRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  ^v window
 @property  NSData *data
 @property  ^{__IOHIDEvent=} creatorHIDEvent
 @property  ^{__IOHIDServiceClient=} creatorHIDServiceClient
 @property  unsigned int type
 @property  unsigned int originalType
 @property  int subtype
 @property  {CGPoint=dd} location
 @property  {CGPoint=dd} windowLocation
 @property  unsigned long time
 @property  int flags
 @property  unsigned long senderID
 @property  AXEventHandInfoRepresentation *handInfo
 @property  AXEventKeyInfoRepresentation *keyInfo
 @property  AXEventAccelerometerInfoRepresentation *accelerometerInfo
 @property  AXEventGameControllerInfoRepresentation *gameControllerInfo
 @property  AXEventPointerInfoRepresentation *pointerControllerInfo
 @property  AXEventIOSMACPointerInfoRepresentation *iosmacPointerInfo
 @property  NSString *clientId
 @property  unsigned int taskPort
 @property  int pid
 @property  unsigned long HIDTime
 @property  NSData *HIDAttributeData
 @property  long long scrollAmount
 @property  long long scrollAccelAmount
 @property  unsigned long additionalFlags
 @property  unsigned int contextId
 @property  unsigned int displayId
 @property  BOOL isBuiltIn
 @property  BOOL isDisplayIntegrated
 @property  long long generationCount
 @property  unsigned int willUpdateMask
 @property  unsigned int didUpdateMask
 @property  BOOL isGeneratedEvent
 @property  BOOL useOriginalHIDTime
 @property  BOOL isUpdate
 @property  BOOL willBeUpdated
 @property  unsigned long fingerCount
 @property  BOOL isTouchDown
 @property  BOOL isMove
 @property  BOOL isChordChange
 @property  BOOL isLift
 @property  BOOL isInRange
 @property  BOOL isInRangeLift
 @property  BOOL isCancel
 @property  BOOL redirectEvent
 @property  BOOL systemDrag
 @property  NSDictionary *auxiliaryData
 @property  AXEventData *accessibilityData
 @property  unsigned int secureName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXEventRepresentation supportsSecureCoding]
  +[AXEventRepresentation _appendKeyInfoToMediaKey:usage:downEvent:]
  +[AXEventRepresentation _vendorDefinedAccessibilityEvent:]
  +[AXEventRepresentation cancelEventForPathIndexMask:]
  +[AXEventRepresentation representationWithData:]
  +[AXEventRepresentation representationWithHIDEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:]
  +[AXEventRepresentation keyRepresentationWithType:]
  +[AXEventRepresentation _digitizerRepresentation:hidStreamIdentifier:]
  +[AXEventRepresentation _wheelEvent:]
  +[AXEventRepresentation buttonRepresentationWithType:]
  +[AXEventRepresentation setTouchCounter:]
  +[AXEventRepresentation representationWithHIDEvent:hidStreamIdentifier:clientID:taskPort:]
  +[AXEventRepresentation accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:]
  +[AXEventRepresentation _gameKeyboardControllerEvent:]
  +[AXEventRepresentation _HIDEventIsAccessibilityEvent:]
  +[AXEventRepresentation _motionGestureTapEvent:serviceClient:hidStreamIdentifier:clientID:taskPort:]
  +[AXEventRepresentation _pointerControllerEvent:hidStreamIdentifier:]
  +[AXEventRepresentation accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:eventValue1:eventValue2:]
  +[AXEventRepresentation representationWithHIDEvent:serviceClient:hidStreamIdentifier:]
  +[AXEventRepresentation gestureRepresentationWithHandType:locations:]
  +[AXEventRepresentation touchRepresentationWithHandType:location:]
  +[AXEventRepresentation representationWithHIDEvent:hidStreamIdentifier:]
  +[AXEventRepresentation iosmacPointerRepresentationWithTypeWithPointerInfo:]
  +[AXEventRepresentation accelerometerRepresentation:]
  +[AXEventRepresentation _gameControllerEvent:]
  +[AXEventRepresentation _keyboardButtonEvent:]
  +[AXEventRepresentation representationWithType:subtype:time:location:windowLocation:handInfo:]
  +[AXEventRepresentation incrementTouchCounter]
  +[AXEventRepresentation representationWithLocation:windowLocation:handInfo:]
  +[AXEventRepresentation touchCounter]
  +[AXEventRepresentation accessibilityEventRepresentationWithSender:usagePage:usage:]

  // instance methods
  -[AXEventRepresentation setContextId:]
  -[AXEventRepresentation senderID]
  -[AXEventRepresentation contextId]
  -[AXEventRepresentation isBuiltIn]
  -[AXEventRepresentation generationCount]
  -[AXEventRepresentation setWindow:]
  -[AXEventRepresentation dataRepresentation]
  -[AXEventRepresentation time]
  -[AXEventRepresentation clientId]
  -[AXEventRepresentation setSenderID:]
  -[AXEventRepresentation setDisplayId:]
  -[AXEventRepresentation encodeWithCoder:]
  -[AXEventRepresentation type]
  -[AXEventRepresentation displayId]
  -[AXEventRepresentation dealloc]
  -[AXEventRepresentation setTime:]
  -[AXEventRepresentation setFlags:]
  -[AXEventRepresentation window]
  -[AXEventRepresentation .cxx_destruct]
  -[AXEventRepresentation flags]
  -[AXEventRepresentation setLocation:]
  -[AXEventRepresentation setType:]
  -[AXEventRepresentation _HIDEventIsAccessibilityEvent:]
  -[AXEventRepresentation setData:]
  -[AXEventRepresentation pid]
  -[AXEventRepresentation copyWithZone:]
  -[AXEventRepresentation setPid:]
  -[AXEventRepresentation location]
  -[AXEventRepresentation setSubtype:]
  -[AXEventRepresentation subtype]
  -[AXEventRepresentation data]
  -[AXEventRepresentation initWithCoder:]
  -[AXEventRepresentation isUpdate]
  -[AXEventRepresentation setClientId:]
  -[AXEventRepresentation isMove]
  -[AXEventRepresentation secureName]
  -[AXEventRepresentation setGenerationCount:]
  -[AXEventRepresentation originalType]
  -[AXEventRepresentation setSecureName:]
  -[AXEventRepresentation isCancel]
  -[AXEventRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventRepresentation isDownEvent]
  -[AXEventRepresentation willUpdateMask]
  -[AXEventRepresentation setWillUpdateMask:]
  -[AXEventRepresentation didUpdateMask]
  -[AXEventRepresentation setDidUpdateMask:]
  -[AXEventRepresentation pathIndexMask]
  -[AXEventRepresentation resetInitialTouchCountValueForHidStreamIdentifier:]
  -[AXEventRepresentation willBeUpdated]
  -[AXEventRepresentation newHIDEventRef]
  -[AXEventRepresentation _machTimeForHIDEventRef]
  -[AXEventRepresentation _newAccelerometerHIDEventRef]
  -[AXEventRepresentation _newScrollHIDEventRef]
  -[AXEventRepresentation _newKeyboardHIDEventRef]
  -[AXEventRepresentation _newButtonHIDEventRefWithType:]
  -[AXEventRepresentation _newAccessibilityHIDEventRef]
  -[AXEventRepresentation normalizedEventRepresentation:scale:]
  -[AXEventRepresentation fakeTouchScaleEventRepresentation:]
  -[AXEventRepresentation modifyPoints:]
  -[AXEventRepresentation neuterUpdates]
  -[AXEventRepresentation denormalizedEventRepresentation:descale:]
  -[AXEventRepresentation _newIOSMACPointerRef]
  -[AXEventRepresentation _newHandHIDEventRef]
  -[AXEventRepresentation firstPathContextId]
  -[AXEventRepresentation _senderNameForID]
  -[AXEventRepresentation fingerCount]
  -[AXEventRepresentation isTouchDown]
  -[AXEventRepresentation isChordChange]
  -[AXEventRepresentation isLift]
  -[AXEventRepresentation isInRange]
  -[AXEventRepresentation isInRangeLift]
  -[AXEventRepresentation screenEdgeForPoint:]
  -[AXEventRepresentation applyAccessibilityDataToCreatorHIDEvent]
  -[AXEventRepresentation _accessibilityEventFromRealEvent:]
  -[AXEventRepresentation _applyAccessibilityDataToRealEvent:]
  -[AXEventRepresentation _accessibilityDataFromRealEvent:]
  -[AXEventRepresentation setOriginalType:]
  -[AXEventRepresentation windowLocation]
  -[AXEventRepresentation setWindowLocation:]
  -[AXEventRepresentation handInfo]
  -[AXEventRepresentation setHandInfo:]
  -[AXEventRepresentation keyInfo]
  -[AXEventRepresentation setKeyInfo:]
  -[AXEventRepresentation accelerometerInfo]
  -[AXEventRepresentation setAccelerometerInfo:]
  -[AXEventRepresentation gameControllerInfo]
  -[AXEventRepresentation setGameControllerInfo:]
  -[AXEventRepresentation pointerControllerInfo]
  -[AXEventRepresentation setPointerControllerInfo:]
  -[AXEventRepresentation iosmacPointerInfo]
  -[AXEventRepresentation setIosmacPointerInfo:]
  -[AXEventRepresentation taskPort]
  -[AXEventRepresentation setTaskPort:]
  -[AXEventRepresentation HIDTime]
  -[AXEventRepresentation setHIDTime:]
  -[AXEventRepresentation HIDAttributeData]
  -[AXEventRepresentation setHIDAttributeData:]
  -[AXEventRepresentation scrollAmount]
  -[AXEventRepresentation setScrollAmount:]
  -[AXEventRepresentation scrollAccelAmount]
  -[AXEventRepresentation setScrollAccelAmount:]
  -[AXEventRepresentation additionalFlags]
  -[AXEventRepresentation setAdditionalFlags:]
  -[AXEventRepresentation setIsBuiltIn:]
  -[AXEventRepresentation isDisplayIntegrated]
  -[AXEventRepresentation setIsDisplayIntegrated:]
  -[AXEventRepresentation isGeneratedEvent]
  -[AXEventRepresentation setIsGeneratedEvent:]
  -[AXEventRepresentation useOriginalHIDTime]
  -[AXEventRepresentation setUseOriginalHIDTime:]
  -[AXEventRepresentation creatorHIDEvent]
  -[AXEventRepresentation setCreatorHIDEvent:]
  -[AXEventRepresentation creatorHIDServiceClient]
  -[AXEventRepresentation setCreatorHIDServiceClient:]
  -[AXEventRepresentation isRedirectEvent]
  -[AXEventRepresentation setRedirectEvent:]
  -[AXEventRepresentation isSystemDrag]
  -[AXEventRepresentation setSystemDrag:]
  -[AXEventRepresentation auxiliaryData]
  -[AXEventRepresentation setAuxiliaryData:]
  -[AXEventRepresentation accessibilityData]
  -[AXEventRepresentation setAccessibilityData:]


AXSettings : AXBaseSettings
 @property  BOOL accessibilityEnabled
 @property  BOOL applicationAccessibilityEnabled
 @property  NSArray *tripleClickOptions
 @property  BOOL appleTVRemoteClickpadTapsForDirectionalNavigationEnabled
 @property  BOOL assistiveTouchEnabled
 @property  BOOL assistiveTouchHardwareEnabled
 @property  BOOL assistiveTouchUIEnabled
 @property  BOOL switchControlEnabled
 @property  BOOL inspectorEnabled
 @property  BOOL automationEnabled
 @property  BOOL automationLocalizedStringLookupInfoEnabled
 @property  NSString *automationPreferredLocalization
 @property  BOOL automationFauxCollectionViewCellsEnabled
 @property  BOOL automationFauxTableViewCellsEnabled
 @property  BOOL automationHitpointWarpingEnabled
 @property  BOOL siriSemanticContextEnabled
 @property  BOOL voiceOverEnabled
 @property  float voiceOverSpeakingRate
 @property  float voiceOverVolume
 @property  BOOL voiceOverUsageConfirmed
 @property  BOOL voiceOverEnabledThroughAccessory
 @property  BOOL voiceOverScreenCurtainEnabled
 @property  BOOL voiceOverUIEnabled
 @property  NSArray *voiceOverLanguageRotorItems
 @property  BOOL voiceOverLanguageRotorItemsExist
 @property  int voiceOverTypingMode
 @property  NSDictionary *voiceOverBrailleBluetoothDisplay
 @property  NSString *voiceOverTouchBrailleTableIdentifier
 @property  long long voiceOverBrailleContractionMode
 @property  BOOL voiceOverBrailleEightDotMode
 @property  long long voiceOverBrailleVirtualStatusAlignment
 @property  long long voiceOverBrailleMasterStatusCellIndex
 @property  long long voiceOverBrailleStatusCellPreference
 @property  BOOL hoverTextEnabled
 @property  double hoverTextFontSize
 @property  NSString *hoverTextFontName
 @property  NSData *hoverTextTextColorData
 @property  NSData *hoverTextInsertionPointColorData
 @property  NSData *hoverTextBackgroundColorData
 @property  NSData *hoverTextBorderColorData
 @property  double hoverTextBackgroundOpacity
 @property  long long hoverTextDisplayMode
 @property  BOOL hoverTextActivationLockEnabled
 @property  long long hoverTextPreferredActivatorKey
 @property  BOOL zoomEnabled
 @property  BOOL zoomToggledByPreferenceSwitch
 @property  BOOL zoomToggledByVoiceOver
 @property  BOOL zoomSmoothScalingEnabled
 @property  BOOL enhanceTextLegibilityEnabled
 @property  BOOL enhanceTextTrackingEnabled
 @property  BOOL enhanceBackgroundContrastEnabled
 @property  BOOL reduceMotionEnabled
 @property  BOOL reduceMotionAutoplayVideoPreviewsEnabled
 @property  BOOL increaseButtonLegibilityEnabled
 @property  BOOL buttonShapesEnabled
 @property  BOOL reduceWhitePointEnabled
 @property  BOOL highContrastFocusIndicatorsEnabled
 @property  BOOL monoAudioEnabled
 @property  double audioLeftRightBalance
 @property  BOOL assistiveTouchAlwaysShowMenuEnabled
 @property  BOOL assistiveTouchOpenMenuSwaggleEnabled
 @property  double assistiveTouchSpeed
 @property  NSDictionary *assistiveTouchMainScreenDefaultCustomization
 @property  NSDictionary *assistiveTouchMainScreenCustomization
 @property  NSString *assistiveTouchOrbAction
 @property  NSString *assistiveTouchSingleTapAction
 @property  NSString *assistiveTouchDoubleTapAction
 @property  NSString *assistiveTouchLongPressAction
 @property  double assistiveTouchLongPressActionDuration
 @property  double assistiveTouchDoubleTapActionTimeout
 @property  NSArray *assistiveTouchCustomGestures
 @property  NSArray *assistiveTouchRecentGestures
 @property  NSArray *assistiveTouchSavedGestures
 @property  BOOL laserEnabled
 @property  unsigned long laserZoomPanningStyle
 @property  BOOL assistiveTouchMouseBehavesLikeFinger
 @property  BOOL assistiveTouchMouseKeysEnabled
 @property  BOOL assistiveTouchMouseKeysOptionToggleEnabled
 @property  BOOL assistiveTouchMouseKeysUseMainKeyboardKeys
 @property  BOOL assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled
 @property  BOOL assistiveTouchMouseAllowAppleBluetoothDevicesPairing
 @property  long long assistiveTouchMouseKeysDelay
 @property  long long assistiveTouchMouseKeysMaxSpeed
 @property  NSArray *assistiveTouchMouseCustomizedClickActions
 @property  NSDictionary *assistiveTouchEyeTrackerCustomizedSettings
 @property  long long assistiveTouchMousePointerColor
 @property  double assistiveTouchMousePointerSizeMultiplier
 @property  BOOL assistiveTouchMousePointerTimeoutEnabled
 @property  double assistiveTouchMousePointerTimeout
 @property  BOOL assistiveTouchMouseDwellControlEnabled
 @property  BOOL assistiveTouchMouseDwellControlAutorevertEnabled
 @property  NSString *assistiveTouchMouseDwellControlAutorevertAction
 @property  double assistiveTouchMouseDwellControlActivationTimeout
 @property  double assistiveTouchMouseDwellControlMovementToleranceRadius
 @property  NSDictionary *assistiveTouchMouseDwellControlCornerCustomization
 @property  BOOL assistiveTouchMouseDwellControlMutatedMenu
 @property  BOOL assistiveTouchMouseDwellControlShowPrompt
 @property  unsigned long assistiveTouchMouseZoomPanningStyle
 @property  BOOL assistiveTouchMotionTrackerConfigurable
 @property  unsigned long assistiveTouchMotionTrackerSmoothingBufferSize
 @property  double assistiveTouchMotionTrackerSmoothingMaxDelta
 @property  double assistiveTouchMotionTrackerXNormalizationOrder
 @property  double assistiveTouchMotionTrackerYNormalizationOrder
 @property  double assistiveTouchMotionTrackerXNormalizationOffset
 @property  double assistiveTouchMotionTrackerYNormalizationOffset
 @property  BOOL assistiveTouchMotionTrackerShouldOffsetBufferPoints
 @property  long long assistiveTouchScanningMode
 @property  long long assistiveTouchPreferredPointPicker
 @property  BOOL assistiveTouchGroupElementsEnabled
 @property  BOOL assistiveTouchScannerCompactMenuEnabled
 @property  BOOL assistiveTouchScannerMenuLabelsEnabled
 @property  double assistiveTouchStepInterval
 @property  double assistiveTouchInputCoalescingDuration
 @property  BOOL assistiveTouchInputCoalescingEnabled
 @property  double assistiveTouchInputHoldDuration
 @property  BOOL assistiveTouchInputHoldEnabled
 @property  double assistiveTouchLongPressDuration
 @property  BOOL assistiveTouchLongPressEnabled
 @property  BOOL assistiveTouchLongPressPauseScanningEnabled
 @property  double assistiveTouchDelayAfterInput
 @property  BOOL assistiveTouchDelayAfterInputEnabled
 @property  double assistiveTouchAxisSweepSpeed
 @property  double assistiveTouchActionRepeatInterval
 @property  BOOL assistiveTouchActionRepeatEnabled
 @property  long long assistiveTouchScanCycles
 @property  double assistiveTouchScanTimeout
 @property  BOOL assistiveTouchScanTimeoutEnabled
 @property  BOOL assistiveTouchScannerSoundEnabled
 @property  BOOL assistiveTouchScannerCursorHighVisibilityEnabled
 @property  BOOL assistiveTouchScannerSpeechIsInterruptedByScanning
 @property  BOOL assistiveTouchScannerSpeechShouldSpeakTraits
 @property  long long assistiveTouchCursorColor
 @property  long long assistiveTouchHeadMovementSensitivity
 @property  BOOL assistiveTouchSwitchUsageConfirmed
 @property  BOOL assistiveTouchGameControllerEnabled
 @property  NSSet *assistiveTouchSwitches
 @property  NSSet *assistiveTouchCameraPointPickerSwitches
 @property  BOOL assistiveTouchScannerSpeechEnabled
 @property  double assistiveTouchScannerSpeechRate
 @property  BOOL assistiveTouchScannerAddedTripleClickAutomatically
 @property  double assistiveTouchIdleOpacity
 @property  NSArray *switchControlRecipes
 @property  NSUUID *switchControlLaunchRecipeUUID
 @property  NSArray *gestureKeys
 @property  NSArray *deviceKeys
 @property  NSArray *settingsKeys
 @property  NSArray *mediaControlsKeys
 @property  NSArray *switchControlCombinedTopLevelMenuItems
 @property  NSArray *switchControlTopLevelMenuItems
 @property  NSArray *switchControlGesturesTopLevelMenuItems
 @property  NSArray *switchControlDeviceTopLevelMenuItems
 @property  NSArray *switchControlSettingsTopLevelMenuItems
 @property  NSArray *switchControlMediaControlsTopLevelMenuItems
 @property  BOOL switchControlHasEmptyTopLevelMenu
 @property  BOOL switchControlShouldUseShortFirstPage
 @property  NSArray *switchControlGesturesMenuItems
 @property  NSArray *switchControlDeviceMenuItems
 @property  NSArray *switchControlSettingsMenuItems
 @property  NSArray *switchControlMediaControlsMenuItems
 @property  BOOL switchControlShouldUseExtendedKeyboardPredictions
 @property  BOOL switchControlRestartScanningAtCurrentKey
 @property  long long switchControlTapBehavior
 @property  double switchControlAutoTapTimeout
 @property  BOOL switchControlShouldAlwaysActivateKeyboardKeys
 @property  long long switchControlScanAfterTapLocation
 @property  long long switchControlScanningStyle
 @property  double switchControlDwellTime
 @property  long long switchControlPointPickerSelectionStyle
 @property  BOOL switchControlUseCameraForPointMode
 @property  double switchControlCameraPointPickerSensitivity
 @property  double switchControlCameraPointPickerMovementToleranceInJoystickMode
 @property  unsigned long switchControlCameraPointPickerMode
 @property  double switchControlCameraPointPickerDwellActivationTimeout
 @property  double switchControlCameraPointPickerDwellMovementToleranceRadius
 @property  BOOL switchControlIsEnabledAsReceiver
 @property  long long hoverTextScrollingSpeed
 @property  NSString *hoverTextContentSize
 @property  BOOL zoomPreferencesWereInitialized
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} zoomWindowFrame
 @property  double dockSize
 @property  double zoomScale
 @property  {CGPoint=dd} zoomPanOffset
 @property  {CGPoint=dd} zoomSlugNormalizedPosition
 @property  NSString *zoomCurrentLensEffect
 @property  NSString *zoomCurrentLensMode
 @property  BOOL zoomInStandby
 @property  BOOL zoomShowedBanner
 @property  BOOL zoomShouldFollowFocus
 @property  BOOL zoomShouldShowSlug
 @property  BOOL zoomPeekZoomEnabled
 @property  BOOL zoomPeekZoomEverEnabled
 @property  long long zoomSlugSingleTapAction
 @property  long long zoomSlugDoubleTapAction
 @property  long long zoomSlugTripleTapAction
 @property  BOOL zoomSlugTapAndSlideToAdjustZoomLevelEnabled
 @property  BOOL zoomAlwaysUseWindowedZoomForTyping
 @property  NSString *zoomPreferredCurrentLensMode
 @property  NSString *zoomPreferredCurrentDockPosition
 @property  double zoomPreferredMaximumZoomScale
 @property  NSOrderedSet *zoomPreferredLensModes
 @property  NSOrderedSet *zoomPreferredDockPositions
 @property  double zoomIdleSlugOpacity
 @property  long long zoomControllerColor
 @property  BOOL zoomKeyboardShortcutsEnabled
 @property  BOOL zoomAdjustZoomLevelKbShortcutEnabled
 @property  BOOL zoomToggleZoomKbShortcutEnabled
 @property  BOOL zoomPanZoomKbShortcutEnabled
 @property  BOOL zoomResizeZoomWindowKbShortcutEnabled
 @property  BOOL zoomSwitchZoomModeKbShortcutEnabled
 @property  BOOL zoomTempToggleZoomKbShortcutEnabled
 @property  BOOL zoomScrollWheelKbShortcutEnabled
 @property  BOOL zoomAutopannerShouldPanWithAcceleration
 @property  BOOL zoomShouldAllowFullscreenAutopanning
 @property  BOOL zoomDebugDisableZoomLensScaleTransform
 @property  BOOL zoomDebugShowExternalFocusRect
 @property  BOOL guidedAccessAXFeaturesEnabled
 @property  BOOL guidedAccessAllowsUnlockWithTouchID
 @property  BOOL guidedAccessShouldSpeakForTimeRestrictionEvents
 @property  NSString *guidedAccessToneIdentifierForTimeRestrictionEvents
 @property  NSString *guidedAccessDefaultToneIdentifierForTimeRestrictionEvents
 @property  BOOL guidedAccessOverrideIdleTime
 @property  long long guidedAccessAutoLockTimeInSeconds
 @property  BOOL guidedAccessAllowsMultipleWindows
 @property  NSDictionary *gaxInternalSettingsUserAppProfile
 @property  NSDictionary *gaxInternalSettingsUserGlobalProfile
 @property  NSDictionary *gaxInternalSettingsSavedAccessibilityFeatures
 @property  NSArray *gaxInternalSettingsSavedAccessibilityTripleClickOptions
 @property  NSArray *gaxInternalSettingsUserConfiguredAppIDs
 @property  NSNumber *gaxInternalSettingsActiveAppOrientation
 @property  NSString *gaxInternalSettingsActiveAppID
 @property  BOOL gaxInternalSettingsTimeRestrictionHasExpired
 @property  BOOL gaxInternalSettingsIsActiveAppSelfLocked
 @property  BOOL gaxInternalSettingsSystemDidRestartDueToLowBattery
 @property  NSNumber *gaxInternalSettingsECID
 @property  NSString *gaxInternalSettingsProductBuildVersion
 @property  NSDate *gaxInternalSettingsLastActivationDate
 @property  NSDate *gaxInternalSettingsLastPasscodeSetDate
 @property  BOOL stickyKeysEnabled
 @property  BOOL stickyKeysShiftToggleEnabled
 @property  BOOL stickyKeysBeepEnabled
 @property  BOOL magnifierEnabled
 @property  BOOL magnifierShouldAdjustFiltersForAmbientLight
 @property  BOOL magnifierShouldUseVideoStabilization
 @property  double magnifierZoomLevel
 @property  unsigned long magnifierFilterSetIdentifier
 @property  BOOL magnifierFilterInverted
 @property  double magnifierContrast
 @property  double magnifierBrightness
 @property  double callAudioRoutingAutoAnswerDelay
 @property  BOOL callAudioRoutingAutoAnswerEnabled
 @property  BOOL assistiveTouchCameraSwitchPreviewEnabled
 @property  BOOL assistiveTouchInternalOnlyHiddenNubbitModeEnabled
 @property  BOOL assistiveTouchInternalOnlyPearlTrackingEnabled
 @property  long long internalLoggingColorTheme
 @property  BOOL validateSecondPartyApps
 @property  BOOL includeBacktraceInLogs
 @property  BOOL writeAXLogsToFile
 @property  BOOL ignoreAXAsserts
 @property  BOOL ignoreAXServerEntitlements
 @property  BOOL logAXNotificationPosting
 @property  BOOL voiceOverHearingAidRoutingEnabled
 @property  BOOL skipHearingAidMFiAuth
 @property  BOOL enableHearingAidReporter
 @property  BOOL guidedAccessDisallowDirectInactiveToActiveTransition
 @property  NSNumber *guidedAccessOverrideTimeRestrictionDuration
 @property  BOOL guidedAccessEnableExperimentalUI
 @property  BOOL enableVoiceOverCaptions
 @property  BOOL syncPronunciationsWithCloudKit
 @property  BOOL didTriggerSOSToday
 @property  BOOL voiceOverShowBrailleWatchSettings
 @property  BOOL voiceOverUseActiveSiriVoice
 @property  BOOL voiceOverUseDigitalCrownNavigation
 @property  BOOL voiceOverUseTVToggleStyleNavigation
 @property  BOOL shouldCaptureVisionEngineDiagnosticsToDisk
 @property  long long voiceOverContentDescriptionLevel
 @property  unsigned long imageCaptionGenderStrategy
 @property  NSArray *imageCaptioningDisabledApps
 @property  NSDictionary *voiceOverDirectTouchEnabledApps
 @property  BOOL voiceOverSceneDescriptionsEnabled
 @property  long long voiceOverNavigationStyle
 @property  BOOL automaticAccessibilityEnabled
 @property  BOOL automaticAccessibilityIgnoreAppAccessibilityPreferred
 @property  BOOL automaticAccessibilityVisualizationsEnabled
 @property  BOOL useNewAXBundleLoader
 @property  BOOL shouldPerformValidationsAtRuntime
 @property  NSArray *tripleClickOrderedOptions
 @property  BOOL speakCorrectionsEnabled
 @property  NSURL *alexLocalAssetURL
 @property  BOOL classicInvertColors
 @property  NSArray *currentVoices
 @property  NSArray *extantVoices
 @property  BOOL extantVoicesExist
 @property  BOOL currentVoicesExist
 @property  BOOL dataMigratorRequestedVoiceCacheRefresh
 @property  BOOL showSpeechController
 @property  double speechControllerIdleOpacity
 @property  long long speechControllerLongPressAction
 @property  long long speechControllerDoubleTapAction
 @property  float quickSpeakSpeakingRate
 @property  BOOL quickSpeakUnderlineSentence
 @property  float quickSpeakVolume
 @property  unsigned long quickSpeakSentenceHighlightOption
 @property  unsigned long quickSpeakHighlightOption
 @property  long long quickSpeakWordHighlightColor
 @property  long long quickSpeakSentenceHighlightColor
 @property  BOOL siriAutoUpdateListInitialized
 @property  {CGPoint=dd} quickSpeakNubbitNormalizedPosition
 @property  BOOL spokenContentShouldUseLanguageDetection
 @property  NSString *spokenContentDefaultFallbackLanguage
 @property  BOOL voiceOverImageCaptionsEnabled
 @property  BOOL voiceOverLargeCursorEnabled
 @property  long long voiceOverHelpMode
 @property  long long voiceOverNavigateImagesOption
 @property  long long voiceOverPhoneticsFeedback
 @property  long long voiceOverHardwareTypingFeedback
 @property  long long voiceOverSoftwareTypingFeedback
 @property  long long voiceOverBrailleGesturesTypingFeedback
 @property  long long voiceOverKeyboardModifierChoice
 @property  double voiceOverContinuousPathKeyboardStartTimeout
 @property  BOOL voiceOverBrailleAlertsEnabled
 @property  double voiceOverBrailleAlertDisplayDuration
 @property  double voiceOverBrailleKeyDebounceTimeout
 @property  BOOL voiceOverHandwritingEnabled
 @property  BOOL voiceOverBrailleGesturesEnabled
 @property  BOOL voiceOverBrailleWordWrapEnabled
 @property  double voiceOverBrailleAutoAdvanceDuration
 @property  BOOL voiceOverHintsEnabled
 @property  BOOL voiceOverAudioDuckingEnabled
 @property  NSString *voiceOverSelectedLanguage
 @property  BOOL voiceOverAudioFollowsHDMIAudio
 @property  BOOL voiceOverPitchChangeEnabled
 @property  double voiceOverPitch
 @property  BOOL voiceOverLanguageDetectionEnabled
 @property  BOOL voiceOverSoundEffectsEnabled
 @property  BOOL voiceOverAdjustSoundVolumeIndependently
 @property  double voiceOverSoundVolume
 @property  BOOL voiceOverHapticsEnabled
 @property  double voiceOverHapticIntensity
 @property  BOOL voiceOverVerbosityEmojiSuffixEnabled
 @property  long long voiceOverVerbosityEmojiFeedback
 @property  BOOL voiceOverVerbositySpeakCustomActionsHint
 @property  BOOL voiceOverSpeakingRateInRotorEnabled
 @property  BOOL voiceOverSpeakNotificationsEnabled
 @property  NSArray *voiceOverRotorItems
 @property  BOOL voiceOverEditAppsActionEnabled
 @property  BOOL voiceOverSpeakActionConfirmation
 @property  NSString *voiceOverBrailleTableIdentifier
 @property  NSArray *voiceOverBrailleLanguageRotorItems
 @property  BOOL voiceOverAlwaysUseNemethCodeForMathEnabled
 @property  BOOL voiceOverShowSoftwareKeyboardWithBraille
 @property  long long voiceOverActivationWorkaround
 @property  BOOL voiceOverShouldOutputToHearingAid
 @property  NSNumber *voiceOverHandwritingWasNativeAutocorrectEnabled
 @property  NSArray *customPronunciationSubstitutions
 @property  BOOL voiceOverTouchBraillePanningAutoTurnsReadingContent
 @property  BOOL voiceOverTouchSingleLetterQuickNavEnabled
 @property  long long voiceOverQuickNavAnnouncementFeedback
 @property  long long voiceOverCapitalLetterFeedback
 @property  BOOL voiceOverSpeakTableColumnRowInformation
 @property  BOOL voiceOverSpeakTableHeaders
 @property  long long voiceOverDeletionFeedback
 @property  long long voiceOverActionsFeedback
 @property  BOOL voiceOverActionFeedbackFirstInListOnly
 @property  long long voiceOverContainerOutputFeedback
 @property  long long voiceOverMoreContentOutputFeedback
 @property  long long voiceOverRotorSummaryFeedback
 @property  long long voiceOverDiscoveredSensitiveContentFeedback
 @property  long long voiceOverPunctuationLevel
 @property  NSUUID *voiceOverPunctuationGroup
 @property  NSUUID *voiceOverDefaultPunctuationGroup
 @property  long long voiceOverLinkFeedback
 @property  long long voiceOverTouchBrailleDisplayInputMode
 @property  long long voiceOverTouchBrailleGesturesInputMode
 @property  long long voiceOverTouchBrailleDisplayOutputMode
 @property  BOOL voiceOverSpeaksOverTelephoneCalls
 @property  BOOL voiceOverTouchBrailleGesturesShouldUseLockedConfiguration
 @property  long long voiceOverTouchBrailleGesturesLockedOrientation
 @property  long long voiceOverTouchBrailleGesturesLockedTypingMode
 @property  BOOL voiceOverTouchBrailleGesturesDidPlayCalibrationHint
 @property  BOOL voiceOverTouchBrailleShouldReverseDots
 @property  BOOL voiceOverTouchBrailleShowGeneralStatus
 @property  BOOL voiceOverTouchBrailleShowTextStyleStatus
 @property  BOOL voiceOverTouchUpdateBrailleWithoutConnectedDisplay
 @property  BOOL voiceOverFlashlightNotificationsEnabled
 @property  BOOL voiceOverShouldSpeakDiscoveredText
 @property  long long voiceOverNeuralElementFeedback
 @property  long long voiceOverNumberFeedback
 @property  BOOL voiceOverAutomaticButtonLabels
 @property  BOOL voiceOverBrailleGradeTwoAutoTranslateEnabled
 @property  double voiceOverDoubleTapInterval
 @property  long long voiceOverNavigationDirectionMode
 @property  BOOL tapToSpeakTimeEnabled
 @property  long long tapToSpeakTimeAvailability
 @property  BOOL tapticTimeIsAvailable
 @property  BOOL tapticTimeInternalFlashScreenEnabled
 @property  BOOL voiceOverTapticTimeMode
 @property  long long voiceOverTapticTimeEncoding
 @property  float voiceOverTapticTimeSpeed
 @property  BOOL voiceOverTapticChimesEnabled
 @property  long long voiceOverTapticChimesAvailability
 @property  long long voiceOverTapticChimesFrequencyEncoding
 @property  long long voiceOverTapticChimesSoundType
 @property  BOOL letterFeedbackEnabled
 @property  BOOL phoneticFeedbackEnabled
 @property  double characterFeedbackDelayDuration
 @property  BOOL quickTypeWordFeedbackEnabled
 @property  BOOL wordFeedbackEnabled
 @property  BOOL voiceOverSpeakNonfocusableElementsAfterDelay
 @property  BOOL voiceOverSilenceAnnouncements
 @property  long long voiceOverPreferredTVInteractionMode
 @property  BOOL voiceOverPrefersFollowFocusNavigationStyle
 @property  BOOL voiceOverExploreFocusAffectsNativeFocus
 @property  long long voiceOverDescribedMedia
 @property  NSData *voiceOverCustomCommandProfile
 @property  NSArray *voiceOverActivities
 @property  AXVoiceOverActivity *voiceOverSelectedActivity
 @property  NSDictionary *voiceOverSoundAndHapticPreferences
 @property  NSArray *voiceOverQuickSettingsItems
 @property  BOOL voiceOverHandGesturesEnabled
 @property  NSDictionary *voiceOverHandGesturesActionCustomizations
 @property  BOOL zoomHandGesturesEnabled
 @property  NSDictionary *zoomHandGesturesActionCustomizations
 @property  BOOL voiceOverShouldDisallowUSBRestrictedMode
 @property  BOOL voiceOverUserDidReadUSBRestrictedModeAlert
 @property  BOOL switchControlShouldDisallowUSBRestrictedMode
 @property  BOOL switchControlUserDidReadUSBRestrictedModeAlert
 @property  BOOL independentHearingAidSettings
 @property  BOOL allowHearingAidControlOnLockScreen
 @property  BOOL shouldStreamToLeftAid
 @property  BOOL shouldStreamToRightAid
 @property  BOOL leftRightBalanceEnabled
 @property  double leftRightBalanceValue
 @property  BOOL touchAccommodationsEnabled
 @property  BOOL touchAccommodationsAreConfigured
 @property  BOOL touchAccommodationsUsageConfirmed
 @property  BOOL touchAccommodationsTripleClickConfirmed
 @property  BOOL touchAccommodationsHoldDurationEnabled
 @property  double touchAccommodationsHoldDuration
 @property  BOOL touchAccommodationsAllowsSwipeGesturesToBypass
 @property  BOOL touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass
 @property  long long touchAccommodationsHoldDurationSwipeGestureSensitivity
 @property  double touchAccommodationsSwipeGestureMinimumDistance
 @property  BOOL touchAccommodationsIgnoreRepeatEnabled
 @property  double touchAccommodationsIgnoreRepeatDuration
 @property  long long touchAccommodationsTapActivationMethod
 @property  double touchAccommodationsTapActivationTimeout
 @property  NSData *fullKeyboardAccessCommandMapData
 @property  double fullKeyboardAccessFocusRingTimeout
 @property  BOOL fullKeyboardAccessFocusRingTimeoutEnabled
 @property  BOOL fullKeyboardAccessLargeFocusRingEnabled
 @property  BOOL fullKeyboardAccessFocusRingHighContrastEnabled
 @property  long long fullKeyboardAccessFocusRingColor
 @property  BOOL fullKeyboardAccessShouldShowTextEditingModeInstructions
 @property  BOOL fullKeyboardAccessShouldShowDebugKeyCommandsView
 @property  BOOL gizmoApplicationAccessibilityEnabled
 @property  long long voiceOverSpeakSecondsEncoding
 @property  NSDictionary *remoteHandGestureCustomizedActions
 @property  float reduceWhitePointLevel
 @property  BOOL shouldFlashForAlertInSilentMode
 @property  BOOL shouldFlashWhileUnlocked
 @property  BOOL shouldLimitDisplayRefreshRate
 @property  BOOL supportsAdvancedDisplayFilters
 @property  BOOL shouldSpeakMedicalPreamble
 @property  BOOL shouldTTYMedicalPreamble
 @property  NSString *medicalPreamble
 @property  BOOL localizationQACaptionMode
 @property  BOOL localizationQACaptionShowFilePath
 @property  BOOL localizationQACaptionShowUSString
 @property  BOOL localizationQACaptionShowLocalizedString
 @property  BOOL appValidationTestingMode
 @property  long long brokenHomeButtonCount
 @property  long long voiceOverBSIUsageCount
 @property  long long guidedAccessUsageCount
 @property  long long magnifierUsageCount
 @property  long long guidedAccessTimeLimitsUsageCount
 @property  NSDictionary *assistiveTouchUsageCount
 @property  long long tapticTimeUsageCount
 @property  long long characterVoicesUsageCount
 @property  long long hearingAidControlPanelCount
 @property  long long hearingAidHandOffCount
 @property  long long switchControlPlatformSwitchedCount
 @property  double lastMagnifierResetCount
 @property  double lastAssistiveTouchTimeResetCount
 @property  double lastCharacterVoiceTimeResetCount
 @property  double lastPlatformSwitchTimeResetCount
 @property  double lastGuidedAccessTimeLimitResetCount
 @property  double lastGuidedAccessTimeResetCount
 @property  double lastTapticTimeResetCount
 @property  double lastBrailleScreenInputTimeResetCount
 @property  double lastHearingAidControlPanelTimeResetCount
 @property  double lastHearingAidHandoffTimeResetCount
 @property  double lastSmartInvertColorsEnablement
 @property  BOOL didResetD22Preferences
 @property  BOOL reachabilityEnabled
 @property  BOOL backTapEnabled
 @property  NSString *backTapDoubleTapAction
 @property  NSString *backTapTripleTapAction
 @property  BOOL backTapFalsePositiveAlertsEnabled
 @property  NSArray *perAppSettingsCustomizedAppIDs
 @property  NSDictionary *perAppSettingsStats
 @property  double audiogramIngestionLastModelAccess
 @property  double soundActionsLastModelAccess
 @property  BOOL startupSoundEnabled

  // class methods
  +[AXSettings sharedInstance]

  // instance methods
  -[AXSettings setVoiceOverCapitalLetterFeedback:]
  -[AXSettings validateSecondPartyApps]
  -[AXSettings voiceOverActivities]
  -[AXSettings setAutomaticAccessibilityMode:forBundleIdentifier:]
  -[AXSettings tapticTimeIsAvailable]
  -[AXSettings assistiveTouchCustomizationEnabled]
  -[AXSettings voiceOverTapticTimeMode]
  -[AXSettings setVoiceOverAudioDuckingEnabled:]
  -[AXSettings voiceOverSpeakingRateForLanguage:]
  -[AXSettings setZoomAutopannerShouldPanWithAcceleration:]
  -[AXSettings enhanceTextTrackingEnabled]
  -[AXSettings _retrieveVoices:]
  -[AXSettings zoomAutopannerShouldPanWithAcceleration]
  -[AXSettings setGaxInternalSettingsSavedAccessibilityTripleClickOptions:]
  -[AXSettings setShouldTTYMedicalPreamble:]
  -[AXSettings voiceOverQuickSettingsItems]
  -[AXSettings siriSemanticContextEnabled]
  -[AXSettings assistiveTouchMouseDwellControlShowPrompt]
  -[AXSettings setZoomPanZoomKbShortcutEnabled:]
  -[AXSettings switchControlLaunchRecipeUUID]
  -[AXSettings setVoiceOverEditAppsActionEnabled:]
  -[AXSettings _setVoiceArray:forKey:]
  -[AXSettings _voiceOverRotorItemEnabled:]
  -[AXSettings setGaxInternalSettingsActiveAppOrientation:]
  -[AXSettings siriAutoUpdateListInitialized]
  -[AXSettings assistiveTouchCursorColor]
  -[AXSettings setAssistiveTouchMotionTrackerYNormalizationOffset:]
  -[AXSettings setVoiceOverHintsEnabled:]
  -[AXSettings voiceOverDiscoveredSensitiveContentFeedback]
  -[AXSettings voiceOverNavigationStyle]
  -[AXSettings gizmoSetAutoSpeakEnabledForComplication:slot:face:toggle:]
  -[AXSettings setLastTapticTimeResetCount:]
  -[AXSettings reduceWhitePointEnabled]
  -[AXSettings gaxInternalSettingsLastActivationDate]
  -[AXSettings assistiveTouchSwitchUsageConfirmed]
  -[AXSettings magnifierEnabled]
  -[AXSettings setSwitchControlSettingsMenuItems:]
  -[AXSettings setVoiceOverDefaultPunctuationGroup:]
  -[AXSettings assistiveTouchMouseDwellControlActivationTimeout]
  -[AXSettings setAssistiveTouchDoubleTapActionTimeout:]
  -[AXSettings setVoiceOverQuickSettingsItems:]
  -[AXSettings assistiveTouchHardwareEnabled]
  -[AXSettings setTripleClickOptions:]
  -[AXSettings _listenForAccessibilitySupportPassthroughs]
  -[AXSettings setZoomCurrentLensMode:]
  -[AXSettings setSpeakCorrectionsEnabled:]
  -[AXSettings laserEnabled]
  -[AXSettings setAssistiveTouchCameraPointPickerSwitches:]
  -[AXSettings assistiveTouchAutoScanningEnabled]
  -[AXSettings setVoiceOverDiscoveredSensitiveContentFeedback:]
  -[AXSettings setVoiceOverUseTVToggleStyleNavigation:]
  -[AXSettings touchAccommodationsHoldDurationEnabled]
  -[AXSettings setVoiceOverTouchBrailleGesturesDidPlayCalibrationHint:]
  -[AXSettings voiceOverShouldOutputToHearingAid]
  -[AXSettings assistiveTouchInternalOnlyHiddenNubbitModeEnabled]
  -[AXSettings gaxInternalSettingsActiveAppID]
  -[AXSettings setVoiceOverBrailleAutoAdvanceDuration:]
  -[AXSettings fullKeyboardAccessFocusRingTimeout]
  -[AXSettings voiceOverSpeakActionConfirmation]
  -[AXSettings touchAccommodationsIgnoreRepeatEnabled]
  -[AXSettings zoomSmoothScalingEnabled]
  -[AXSettings setAssistiveTouchMotionTrackerConfigurable:]
  -[AXSettings setZoomPreferredDockPositions:]
  -[AXSettings setLastSmartInvertColorsEnablement:]
  -[AXSettings assistiveTouchInputCoalescingDuration]
  -[AXSettings userDidSelectVoiceForLanguage:source:]
  -[AXSettings voiceOverResetSoundAndHapticPreferences]
  -[AXSettings assistiveTouchScanningMode]
  -[AXSettings zoomPreferredDockPositions]
  -[AXSettings zoomKeyboardShortcutsEnabled]
  -[AXSettings setLastAssistiveTouchTimeResetCount:]
  -[AXSettings setVoiceOverTouchBrailleShowGeneralStatus:]
  -[AXSettings setShouldPerformValidationsAtRuntime:]
  -[AXSettings setZoomToggledByVoiceOver:]
  -[AXSettings setFullKeyboardAccessFocusRingTimeout:]
  -[AXSettings setVoiceOverBrailleLanguageRotorItems:]
  -[AXSettings setVoiceOverAlternativeVoiceIdentifier:forLanguage:]
  -[AXSettings voiceOverSelectedLanguage]
  -[AXSettings switchControlRecipes]
  -[AXSettings inspectorEnabled]
  -[AXSettings zoomCurrentLensMode]
  -[AXSettings setHoverTextBackgroundColorData:]
  -[AXSettings setAssistiveTouchLongPressAction:]
  -[AXSettings setAssistiveTouchMouseKeysOptionToggleEnabled:]
  -[AXSettings didTriggerSOSToday]
  -[AXSettings setAssistiveTouchPreferredPointPicker:]
  -[AXSettings stickyKeysBeepEnabled]
  -[AXSettings voiceOverFlashlightNotificationsEnabled]
  -[AXSettings fullKeyboardAccessFocusRingHighContrastEnabled]
  -[AXSettings _switchControlMenuItemsForPreferenceKey:allTypes:enabledByDefault:topLevel:]
  -[AXSettings setAudiogramIngestionLastModelAccess:]
  -[AXSettings setZoomAlwaysUseWindowedZoomForTyping:]
  -[AXSettings magnifierUsageCount]
  -[AXSettings setZoomTempToggleZoomKbShortcutEnabled:]
  -[AXSettings startupSoundEnabled]
  -[AXSettings setHoverTextTextColorData:]
  -[AXSettings assistiveTouchMouseCustomizedClickActions]
  -[AXSettings _switchControlClearMenuItemPreferences]
  -[AXSettings setInspectorEnabled:]
  -[AXSettings voiceOverContainerOutputFeedback]
  -[AXSettings voiceOverSelectedActivity]
  -[AXSettings setAssistiveTouchMainScreenCustomization:]
  -[AXSettings setZoomInStandby:]
  -[AXSettings voiceOverActionFeedbackFirstInListOnly]
  -[AXSettings voiceOverDescribedMedia]
  -[AXSettings setAssistiveTouchScannerAddedTripleClickAutomatically:]
  -[AXSettings setAssistiveTouchScannerSpeechIsInterruptedByScanning:]
  -[AXSettings setZoomPeekZoomEverEnabled:]
  -[AXSettings guidedAccessEnableExperimentalUI]
  -[AXSettings reachabilityEnabled]
  -[AXSettings voiceOverBrailleVirtualStatusAlignment]
  -[AXSettings saveRecipe:]
  -[AXSettings guidedAccessOverrideTimeRestrictionDuration]
  -[AXSettings setCustomPronunciationSubstitutions:]
  -[AXSettings setEnhanceBackgroundContrastEnabled:]
  -[AXSettings setZoomControllerColor:]
  -[AXSettings setVoiceOverNumberFeedback:]
  -[AXSettings touchAccommodationsHoldDuration]
  -[AXSettings voiceOverVerbosityEmojiFeedback]
  -[AXSettings voiceOverShowSoftwareKeyboardWithBraille]
  -[AXSettings gaxInternalSettingsIsActiveAppSelfLocked]
  -[AXSettings switchControlPlatformSwitchedCount]
  -[AXSettings setVoiceOverSilenceAnnouncements:]
  -[AXSettings voiceOverHelpMode]
  -[AXSettings setEnableHearingAidReporter:]
  -[AXSettings setVoiceOverBrailleStatusCellPreference:]
  -[AXSettings _legacyIdentifierForEyeTracker:]
  -[AXSettings assistiveTouchMouseDwellControlAutorevertAction]
  -[AXSettings setVoiceOverHapticIntensity:]
  -[AXSettings assistiveTouchLongPressDuration]
  -[AXSettings assistiveTouchMouseKeysUseMainKeyboardKeys]
  -[AXSettings setTapticTimeUsageCount:]
  -[AXSettings zoomHandGesturesActionCustomizations]
  -[AXSettings currentVoicesExist]
  -[AXSettings setAutomaticAccessibilityVisualizationsEnabled:]
  -[AXSettings setAssistiveTouchSavedGestures:]
  -[AXSettings setAssistiveTouchCustomGestures:]
  -[AXSettings shouldPerformValidationsAtRuntime]
  -[AXSettings setVoiceOverTouchSingleLetterQuickNavEnabled:]
  -[AXSettings setVoiceOverBrailleContractionMode:]
  -[AXSettings assistiveTouchMouseKeysDelay]
  -[AXSettings lastSmartInvertColorsEnablement]
  -[AXSettings setZoomSmoothScalingEnabled:]
  -[AXSettings lastHearingAidControlPanelTimeResetCount]
  -[AXSettings setAutomaticAccessibilityModes:]
  -[AXSettings switchControlSettingsTopLevelMenuItems]
  -[AXSettings zoomSlugTripleTapAction]
  -[AXSettings reduceMotionAutoplayVideoPreviewsEnabled]
  -[AXSettings setAssistiveTouchLongPressActionDuration:]
  -[AXSettings voiceOverBrailleGesturesEnabled]
  -[AXSettings voiceOverPitch]
  -[AXSettings automaticAccessibilityVisualizationsEnabled]
  -[AXSettings voiceOverSpeaksOverTelephoneCalls]
  -[AXSettings voiceOverShouldDisallowUSBRestrictedMode]
  -[AXSettings setAssistiveTouchMouseDwellControlMovementToleranceRadius:]
  -[AXSettings programmingActivity]
  -[AXSettings setShouldLimitDisplayRefreshRate:]
  -[AXSettings voiceOverTouchSingleLetterQuickNavEnabled]
  -[AXSettings setVoiceOverTapticChimesSoundType:]
  -[AXSettings setVoiceOverSpeakSecondsEncoding:]
  -[AXSettings setVoiceOverSpeakNonfocusableElementsAfterDelay:]
  -[AXSettings imageCaptionGenderStrategy]
  -[AXSettings gaxInternalSettingsECID]
  -[AXSettings switchControlCombinedTopLevelMenuItems]
  -[AXSettings voiceOverSilenceAnnouncements]
  -[AXSettings setAssistiveTouchCursorColor:]
  -[AXSettings setLogAXNotificationPosting:]
  -[AXSettings setAssistiveTouchInputHoldEnabled:]
  -[AXSettings zoomAdjustZoomLevelKbShortcutEnabled]
  -[AXSettings audioLeftRightBalance]
  -[AXSettings assistiveTouchMouseDwellControlMutatedMenu]
  -[AXSettings setLastGuidedAccessTimeResetCount:]
  -[AXSettings setTouchAccommodationsAllowsSwipeGesturesToBypass:]
  -[AXSettings assistiveTouchSwitches]
  -[AXSettings zoomSlugNormalizedPosition]
  -[AXSettings setMagnifierShouldUseVideoStabilization:]
  -[AXSettings setVoiceOverDescribedMedia:]
  -[AXSettings deviceKeys]
  -[AXSettings magnifierFilterSetIdentifier]
  -[AXSettings gaxInternalSettingsLastPasscodeSetDate]
  -[AXSettings setGizmoApplicationAccessibilityEnabled:]
  -[AXSettings appValidationTestingMode]
  -[AXSettings voiceOverCapitalLetterFeedback]
  -[AXSettings voiceOverLanguageDetectionEnabled]
  -[AXSettings setTouchAccommodationsUsageConfirmed:]
  -[AXSettings setHearingAidControlPanelCount:]
  -[AXSettings setVoiceOverSpeakTableColumnRowInformation:]
  -[AXSettings setSwitchControlCameraPointPickerSensitivity:]
  -[AXSettings setAssistiveTouchOpenMenuSwaggleEnabled:]
  -[AXSettings nukePrefsForDomains:numDomains:]
  -[AXSettings setShouldCaptureVisionEngineDiagnosticsToDisk:]
  -[AXSettings fullKeyboardAccessFocusRingTimeoutEnabled]
  -[AXSettings createAndSaveRecipeForInterfaceOrientedHoldPoint:]
  -[AXSettings _updateWithoutSavingExistingRecipe:allRecipes:]
  -[AXSettings switchControlPointPickerSelectionStyle]
  -[AXSettings switchControlMediaControlsTopLevelMenuItems]
  -[AXSettings imageCaptioningDisabledApps]
  -[AXSettings setSwitchControlScanAfterTapLocation:]
  -[AXSettings settingsKeys]
  -[AXSettings setVoiceOverTouchBraillePanningAutoTurnsReadingContent:]
  -[AXSettings setVoiceOverSoundAndHapticPreferences:]
  -[AXSettings voiceOverKeyboardModifierChoice]
  -[AXSettings includeBacktraceInLogs]
  -[AXSettings setVoiceOverAudioFollowsHDMIAudio:]
  -[AXSettings setAssistiveTouchMousePointerTimeout:]
  -[AXSettings setAssistiveTouchMouseKeysUseMainKeyboardKeys:]
  -[AXSettings letterFeedbackEnabled]
  -[AXSettings setBackTapDoubleTapAction:]
  -[AXSettings setCharacterVoicesUsageCount:]
  -[AXSettings voiceOverTouchBraillePanningAutoTurnsReadingContent]
  -[AXSettings fullKeyboardAccessCommandMapData]
  -[AXSettings speechControllerDoubleTapAction]
  -[AXSettings anyUserPreferredLangaugeIsRTL]
  -[AXSettings setCallAudioRoutingAutoAnswerEnabled:]
  -[AXSettings setVoiceOverBrailleKeyDebounceTimeout:]
  -[AXSettings shouldLimitDisplayRefreshRate]
  -[AXSettings setMagnifierUsageCount:]
  -[AXSettings voiceOverSetHapticEnabled:forEvent:]
  -[AXSettings assistiveTouchInputHoldDuration]
  -[AXSettings assistiveTouchMotionTrackerYNormalizationOffset]
  -[AXSettings quickSpeakSpeakingRateForLanguage:]
  -[AXSettings assistiveTouchScannerCompactMenuEnabled]
  -[AXSettings hearingAidHandOffCount]
  -[AXSettings setAssistiveTouchActionRepeatInterval:]
  -[AXSettings setVoiceOverUIEnabled:]
  -[AXSettings assistiveTouchMainScreenDefaultCustomization]
  -[AXSettings setIgnoreAXAsserts:]
  -[AXSettings characterVoicesUsageCount]
  -[AXSettings voiceOverAlwaysUseNemethCodeForMathEnabled]
  -[AXSettings voiceOverPhoneticsFeedback]
  -[AXSettings updateRecipe:]
  -[AXSettings setSwitchControlUseCameraForPointMode:]
  -[AXSettings voiceOverBrailleKeyDebounceTimeout]
  -[AXSettings setReduceWhitePointLevel:]
  -[AXSettings zoomShowedBanner]
  -[AXSettings setZoomSlugDoubleTapAction:]
  -[AXSettings setVoiceOverAlwaysUseNemethCodeForMathEnabled:]
  -[AXSettings tapToSpeakTimeAvailability]
  -[AXSettings automaticAccessibilityIgnoreAppAccessibilityPreferred]
  -[AXSettings setVoiceOverHandGesturesEnabled:]
  -[AXSettings applicationAccessibilityEnabled]
  -[AXSettings _switchWithAnyActionExcludingUUIDs:needsToSupportLongPress:]
  -[AXSettings voiceOverTapticTimeEncoding]
  -[AXSettings assistiveTouchUIEnabled]
  -[AXSettings setZoomPreferredCurrentDockPosition:]
  -[AXSettings selectedSpeechVoiceIdentifiersWithLanguageSource]
  -[AXSettings voiceOverShowBrailleWatchSettings]
  -[AXSettings setQuickTypeWordFeedbackEnabled:]
  -[AXSettings voiceOverSoundAndHapticPreferences]
  -[AXSettings setVoiceOverHardwareTypingFeedback:]
  -[AXSettings voiceOverTouchBrailleGesturesShouldUseLockedConfiguration]
  -[AXSettings switchControlDwellTime]
  -[AXSettings voiceOverLargeCursorEnabled]
  -[AXSettings zoomPeekZoomEverEnabled]
  -[AXSettings setVoiceOverBrailleAlertDisplayDuration:]
  -[AXSettings setVoiceOverPitchChangeEnabled:]
  -[AXSettings hoverTextActivationLockEnabled]
  -[AXSettings setShouldSpeakMedicalPreamble:]
  -[AXSettings setVoiceOverRotorSummaryFeedback:]
  -[AXSettings voiceOverShouldSpeakDiscoveredText]
  -[AXSettings setSwitchControlIsEnabledAsReceiver:]
  -[AXSettings setAssistiveTouchUIEnabled:]
  -[AXSettings setAssistiveTouchDelayAfterInputEnabled:]
  -[AXSettings voiceOverSpeakingRate]
  -[AXSettings setZoomPeekZoomEnabled:]
  -[AXSettings zoomPreferredMaximumZoomScale]
  -[AXSettings zoomHandGesturesEnabled]
  -[AXSettings setZoomSwitchZoomModeKbShortcutEnabled:]
  -[AXSettings setZoomAdjustZoomLevelKbShortcutEnabled:]
  -[AXSettings setGuidedAccessEnableExperimentalUI:]
  -[AXSettings setAssistiveTouchMouseBehavesLikeFinger:]
  -[AXSettings voiceOverSetSoundEnabled:forEvent:]
  -[AXSettings setLastGuidedAccessTimeLimitResetCount:]
  -[AXSettings setZoomPreferredCurrentLensMode:]
  -[AXSettings voiceOverPunctuationGroup]
  -[AXSettings assistiveTouchCustomGestures]
  -[AXSettings setSpeechControllerIdleOpacity:]
  -[AXSettings setStartupSoundEnabled:]
  -[AXSettings voiceOverTouchBrailleDisplayOutputMode]
  -[AXSettings _migratePreferenceIfNecessary:]
  -[AXSettings setBrokenHomeButtonCount:]
  -[AXSettings voiceOverNeuralElementFeedback]
  -[AXSettings lastPlatformSwitchTimeResetCount]
  -[AXSettings showSpeechController]
  -[AXSettings setSwitchControlMediaControlsMenuItems:]
  -[AXSettings setZoomWindowFrame:]
  -[AXSettings setVoiceOverBSIUsageCount:]
  -[AXSettings configureZoomForLoginSession]
  -[AXSettings switchControlCameraPointPickerMode]
  -[AXSettings setSyncPronunciationsWithCloudKit:]
  -[AXSettings _switchControlMenuItemPreferences]
  -[AXSettings topLevelKeys]
  -[AXSettings setAssistiveTouchInputHoldDuration:]
  -[AXSettings switchControlAutoTapTimeout]
  -[AXSettings setAssistiveTouchActionRepeatEnabled:]
  -[AXSettings setSwitchControlUserDidReadUSBRestrictedModeAlert:]
  -[AXSettings voiceOverHandGesturesEnabled]
  -[AXSettings assistiveTouchLongPressPauseScanningEnabled]
  -[AXSettings setVoiceOverSoftwareTypingFeedback:]
  -[AXSettings setAssistiveTouchScanningMode:]
  -[AXSettings lastHearingAidHandoffTimeResetCount]
  -[AXSettings zoomToggledByPreferenceSwitch]
  -[AXSettings voiceOverExploreFocusAffectsNativeFocus]
  -[AXSettings setSoundActionsLastModelAccess:]
  -[AXSettings enableVoiceOverCaptions]
  -[AXSettings zoomToggledByVoiceOver]
  -[AXSettings assistiveTouchMouseDwellControlMovementToleranceRadius]
  -[AXSettings zoomPreferredCurrentLensMode]
  -[AXSettings voiceOverBrailleBluetoothDisplay]
  -[AXSettings _domainNameForDomain:]
  -[AXSettings callAudioRoutingAutoAnswerDelay]
  -[AXSettings setAssistiveTouchMouseAllowAppleBluetoothDevicesPairing:]
  -[AXSettings setVoiceOverHearingAidRoutingEnabled:]
  -[AXSettings switchControlIsEnabledAsReceiver]
  -[AXSettings voiceOverBrailleWordWrapEnabled]
  -[AXSettings setQuickSpeakUnderlineSentence:]
  -[AXSettings setVoiceOverTapticTimeMode:]
  -[AXSettings voiceOverLanguageRotorItemsExist]
  -[AXSettings setVoiceOverShouldOutputToHearingAid:]
  -[AXSettings zoomDebugShowExternalFocusRect]
  -[AXSettings preferredBrailleTableIdentifierForKeyboardLanguage:keyboardLayout:]
  -[AXSettings voiceOverTouchBrailleDisplayInputMode]
  -[AXSettings voiceOverEnabledThroughAccessory]
  -[AXSettings setFullKeyboardAccessLargeFocusRingEnabled:]
  -[AXSettings zoomResizeZoomWindowKbShortcutEnabled]
  -[AXSettings voiceOverTapticChimesFrequencyEncoding]
  -[AXSettings hoverTextFontSize]
  -[AXSettings shouldSpeakMedicalPreamble]
  -[AXSettings tripleClickOrderedOptions]
  -[AXSettings voiceOverMoreContentOutputFeedback]
  -[AXSettings setVoiceOverTouchBrailleTableIdentifier:]
  -[AXSettings setTouchAccommodationsTripleClickConfirmed:]
  -[AXSettings voiceOverLanguageRotorItems]
  -[AXSettings extantVoicesExist]
  -[AXSettings setSpeechVoiceIdentifier:forLanguage:source:]
  -[AXSettings setLeftRightBalanceEnabled:]
  -[AXSettings setStickyKeysShiftToggleEnabled:]
  -[AXSettings setFullKeyboardAccessShouldShowDebugKeyCommandsView:]
  -[AXSettings setBackTapFalsePositiveAlertsEnabled:]
  -[AXSettings _switchControlPrefersCompact]
  -[AXSettings highContrastFocusIndicatorsEnabled]
  -[AXSettings setReachabilityEnabled:]
  -[AXSettings assistiveTouchCameraPointPickerSwitches]
  -[AXSettings setSwitchControlPointPickerSelectionStyle:]
  -[AXSettings setVoiceOverTouchBrailleGesturesShouldUseLockedConfiguration:]
  -[AXSettings voiceOverPitchChangeEnabled]
  -[AXSettings voiceOverTouchBrailleGesturesLockedOrientation]
  -[AXSettings quickTypeWordFeedbackEnabled]
  -[AXSettings setZoomKeyboardShortcutsEnabled:]
  -[AXSettings shouldFlashForAlertInSilentMode]
  -[AXSettings gaxInternalSettingsProductBuildVersion]
  -[AXSettings setQuickSpeakWordHighlightColor:]
  -[AXSettings switchControlDeviceMenuItems]
  -[AXSettings _updateTouchAccommodationsTripleClickSetting]
  -[AXSettings _domainForPreferenceKey:]
  -[AXSettings setLastBrailleScreenInputTimeResetCount:]
  -[AXSettings medicalPreamble]
  -[AXSettings guidedAccessDefaultToneIdentifierForTimeRestrictionEvents]
  -[AXSettings voiceOverVerbosityEmojiSuffixEnabled]
  -[AXSettings _assignDefaultTitleIfNeededToRecipe:]
  -[AXSettings setVoiceOverSpeakingRate:]
  -[AXSettings _handleVoiceUnarchivedCache:]
  -[AXSettings useNewAXBundleLoader]
  -[AXSettings voiceOverAudioDuckingEnabled]
  -[AXSettings voiceOverSoundEffectsEnabled]
  -[AXSettings voiceOverDefaultPunctuationGroup]
  -[AXSettings voiceOverNavigationDirectionMode]
  -[AXSettings assistiveTouchMotionTrackerXNormalizationOrder]
  -[AXSettings classicInvertColors]
  -[AXSettings setZoomToggledByPreferenceSwitch:]
  -[AXSettings assistiveTouchSpeed]
  -[AXSettings setStickyKeysEnabled:]
  -[AXSettings _quickSpeakPrefersCompact]
  -[AXSettings setSwitchControlDeviceMenuItems:]
  -[AXSettings setVoiceOverImageCaptionsEnabled:]
  -[AXSettings speechControllerIdleOpacity]
  -[AXSettings setZoomIdleSlugOpacity:]
  -[AXSettings setGaxInternalSettingsLastActivationDate:]
  -[AXSettings zoomTempToggleZoomKbShortcutEnabled]
  -[AXSettings setFullKeyboardAccessShouldShowTextEditingModeInstructions:]
  -[AXSettings speechControllerLongPressAction]
  -[AXSettings voiceOverSoundVolume]
  -[AXSettings addRotorOptionsForLoginSession]
  -[AXSettings voiceOverBrailleAlertDisplayDuration]
  -[AXSettings setDidResetD22Preferences:]
  -[AXSettings guidedAccessAllowsUnlockWithTouchID]
  -[AXSettings switchControlHasEmptyTopLevelMenu]
  -[AXSettings removeCustomizedAppID:]
  -[AXSettings setAssistiveTouchMotionTrackerShouldOffsetBufferPoints:]
  -[AXSettings setSwitchControlPlatformSwitchedCount:]
  -[AXSettings setPreferredBrailleTableIdentifier:forKeyboardLanguage:keyboardLayout:]
  -[AXSettings aggregatePerAppSettingsStatistics]
  -[AXSettings setTapticTimeInternalFlashScreenEnabled:]
  -[AXSettings setWriteAXLogsToFile:]
  -[AXSettings hoverTextBackgroundOpacity]
  -[AXSettings switchForUUID:]
  -[AXSettings setValidateSecondPartyApps:]
  -[AXSettings setLocalizationQACaptionShowLocalizedString:]
  -[AXSettings setSwitchControlRestartScanningAtCurrentKey:]
  -[AXSettings setApplicationAccessibilityEnabled:]
  -[AXSettings setVoiceOverTapticTimeSpeed:]
  -[AXSettings setAssistiveTouchMotionTrackerYNormalizationOrder:]
  -[AXSettings _voiceOverSoundOrHapticValueForPreference:outputEvent:]
  -[AXSettings setAutomationFauxCollectionViewCellsEnabled:]
  -[AXSettings setVoiceOverPunctuationLevel:]
  -[AXSettings voiceOverHapticIntensity]
  -[AXSettings setLastHearingAidHandoffTimeResetCount:]
  -[AXSettings switchControlRestartScanningAtCurrentKey]
  -[AXSettings setAssistiveTouchInputCoalescingEnabled:]
  -[AXSettings setVoiceOverNavigationStyle:]
  -[AXSettings setPerAppSettingsStats:]
  -[AXSettings zoomCurrentLensEffect]
  -[AXSettings voiceOverTouchBrailleGesturesLockedTypingMode]
  -[AXSettings setQuickSpeakSpeakingRate:]
  -[AXSettings setSwitchControlLaunchRecipeUUID:]
  -[AXSettings guidedAccessAXFeaturesEnabled]
  -[AXSettings voiceOverUseActiveSiriVoice]
  -[AXSettings setSwitchControlCombinedTopLevelMenuItems:]
  -[AXSettings setZoomSlugTripleTapAction:]
  -[AXSettings localizationQACaptionShowLocalizedString]
  -[AXSettings setGaxInternalSettingsUserGlobalProfile:]
  -[AXSettings zoomSlugSingleTapAction]
  -[AXSettings setZoomSlugTapAndSlideToAdjustZoomLevelEnabled:]
  -[AXSettings voiceOverDeletionFeedback]
  -[AXSettings setVoiceOverContinuousPathKeyboardStartTimeout:]
  -[AXSettings assistiveTouchLongPressActionDuration]
  -[AXSettings assistiveTouchGroupElementsEnabled]
  -[AXSettings increaseButtonLegibilityEnabled]
  -[AXSettings zoomScrollWheelKbShortcutEnabled]
  -[AXSettings brokenHomeButtonCount]
  -[AXSettings createAndSaveRecipeForInterfaceOrientedPoint:]
  -[AXSettings gizmoGetWatchFaceAutoSpeakPreferences]
  -[AXSettings _switchControlMigratePreMonarchIncludedMenuItemsForNewTypes:]
  -[AXSettings buttonShapesEnabled]
  -[AXSettings setUseNewAXBundleLoader:]
  -[AXSettings setTouchAccommodationsHoldDuration:]
  -[AXSettings setSwitchControlCameraPointPickerMovementToleranceInJoystickMode:]
  -[AXSettings enhanceBackgroundContrastEnabled]
  -[AXSettings voiceOverSpeakNotificationsEnabled]
  -[AXSettings hoverTextBorderColorData]
  -[AXSettings setGuidedAccessAutoLockTimeInSeconds:]
  -[AXSettings automaticAccessibilityEnabled]
  -[AXSettings assistiveTouchInternalOnlyPearlTrackingEnabled]
  -[AXSettings voiceOverHardwareTypingFeedback]
  -[AXSettings setHoverTextContentSize:]
  -[AXSettings gaxInternalSettingsSystemDidRestartDueToLowBattery]
  -[AXSettings setCharacterFeedbackDelayDuration:]
  -[AXSettings setlastHearingAidHandoffTimeResetCount:]
  -[AXSettings setVoiceOverDeletionFeedback:]
  -[AXSettings setTouchAccommodationsTapActivationMethod:]
  -[AXSettings setPhoneticFeedbackEnabled:]
  -[AXSettings assistiveTouchDelayAfterInput]
  -[AXSettings setVoiceOverBrailleAlertsEnabled:]
  -[AXSettings voiceOverAlternativeVoiceIdentifier:]
  -[AXSettings zoomDebugDisableZoomLensScaleTransform]
  -[AXSettings remoteHandGestureCustomizedActions]
  -[AXSettings setHoverTextBorderColorData:]
  -[AXSettings voiceOverDoubleTapInterval]
  -[AXSettings voiceOverTouchBrailleShowTextStyleStatus]
  -[AXSettings hoverTextEnabled]
  -[AXSettings voiceOverTouchBrailleShouldReverseDots]
  -[AXSettings setHoverTextPreferredActivatorKey:]
  -[AXSettings setAssistiveTouchSingleTapAction:]
  -[AXSettings assistiveTouchLongPressAction]
  -[AXSettings setAssistiveTouchMouseDwellControlActivationTimeout:]
  -[AXSettings setGuidedAccessAXFeaturesEnabled:]
  -[AXSettings voiceOverAudioFollowsHDMIAudio]
  -[AXSettings setMagnifierEnabled:changeTripleClickMenu:]
  -[AXSettings assistiveTouchScannerPrefersCompact:]
  -[AXSettings switchControlTapBehavior]
  -[AXSettings setSwitchControlShouldUseShortFirstPage:]
  -[AXSettings guidedAccessOverrideIdleTime]
  -[AXSettings lastGuidedAccessTimeResetCount]
  -[AXSettings setAssistiveTouchMouseDwellControlShowPrompt:]
  -[AXSettings fullKeyboardAccessFocusRingColor]
  -[AXSettings setVoiceOverScreenCurtainEnabled:]
  -[AXSettings perAppSettingsCustomizedAppIDs]
  -[AXSettings voiceOverSceneDescriptionsEnabled]
  -[AXSettings gaxInternalSettingsSavedAccessibilityFeatures]
  -[AXSettings assistiveTouchScanTimeout]
  -[AXSettings setVoiceOverShouldSpeakDiscoveredText:]
  -[AXSettings hoverTextInsertionPointColorData]
  -[AXSettings voiceOverSpeakTableColumnRowInformation]
  -[AXSettings voiceOverContentDescriptionLevel]
  -[AXSettings _switchControlScannerDefaultDialect]
  -[AXSettings voiceOverBrailleStatusCellPreference]
  -[AXSettings stickyKeysEnabled]
  -[AXSettings setHoverTextEnabled:]
  -[AXSettings automationFauxCollectionViewCellsEnabled]
  -[AXSettings assistiveTouchScanCycles]
  -[AXSettings setAssistiveTouchScanTimeoutEnabled:]
  -[AXSettings assistiveTouchMouseKeysOptionToggleEnabled]
  -[AXSettings assistiveTouchStepInterval]
  -[AXSettings setVoiceOverEnabledThroughAccessory:]
  -[AXSettings assistiveTouchPreferredPointPicker]
  -[AXSettings zoomIdleSlugOpacity]
  -[AXSettings didResetD22Preferences]
  -[AXSettings setGaxInternalSettingsECID:]
  -[AXSettings setZoomDebugShowExternalFocusRect:]
  -[AXSettings setBackTapTripleTapAction:]
  -[AXSettings setVoiceOverShowSoftwareKeyboardWithBraille:]
  -[AXSettings setAssistiveTouchSwitches:]
  -[AXSettings voiceOverTapticChimesSoundType]
  -[AXSettings _setGestures:forPreferenceKey:]
  -[AXSettings assistiveTouchScannerMenuLabelsEnabled]
  -[AXSettings assistiveTouchDoubleTapAction]
  -[AXSettings setAssistiveTouchLongPressEnabled:]
  -[AXSettings setAssistiveTouchIdleOpacity:]
  -[AXSettings setLocalizationQACaptionShowFilePath:]
  -[AXSettings setVoiceOverEnabled:]
  -[AXSettings setVoiceOverKeyboardModifierChoice:]
  -[AXSettings zoomShouldShowSlug]
  -[AXSettings automationLocalizedStringLookupInfoEnabled]
  -[AXSettings _removeSpeakingRatePreferenceForLanguage:]
  -[AXSettings assistiveTouchMotionTrackerSmoothingBufferSize]
  -[AXSettings setVoiceOverPreferredTVInteractionMode:]
  -[AXSettings keysToIgnoreDuringBuddyTransfer]
  -[AXSettings setVoiceOverFlashlightNotificationsEnabled:]
  -[AXSettings fullKeyboardAccessLargeFocusRingEnabled]
  -[AXSettings enableHearingAidReporter]
  -[AXSettings smoothingBufferSizeForEyeTracker:]
  -[AXSettings speechVoiceIdentifierForLanguageWithoutFallback:source:]
  -[AXSettings setQuickSpeakSentenceHighlightOption:]
  -[AXSettings magnifierZoomLevel]
  -[AXSettings voiceOverEditAppsActionEnabled]
  -[AXSettings shouldTTYMedicalPreamble]
  -[AXSettings setAssistiveTouchMotionTrackerSmoothingMaxDelta:]
  -[AXSettings extantVoices]
  -[AXSettings setIncreaseButtonLegibilityEnabled:]
  -[AXSettings setMagnifierBrightness:]
  -[AXSettings soundActionsLastModelAccess]
  -[AXSettings gizmoGetAutoSpeakEnabledForComplication:slot:face:]
  -[AXSettings setSwitchControlDwellTime:]
  -[AXSettings zoomInStandby]
  -[AXSettings setButtonShapesEnabled:]
  -[AXSettings setSpeechControllerLongPressAction:]
  -[AXSettings setTapToSpeakTimeEnabled:]
  -[AXSettings setFullKeyboardAccessFocusRingHighContrastEnabled:]
  -[AXSettings setVoiceOverDirectTouchEnabledApps:]
  -[AXSettings automationFauxTableViewCellsEnabled]
  -[AXSettings setVoiceOverLinkFeedback:]
  -[AXSettings callAudioRoutingAutoAnswerEnabled]
  -[AXSettings setMagnifierFilterInverted:]
  -[AXSettings setSwitchControlMediaControlsTopLevelMenuItems:]
  -[AXSettings switchControlShouldDisallowUSBRestrictedMode]
  -[AXSettings voiceOverBrailleGesturesTypingFeedback]
  -[AXSettings updateCustomizableMouse:]
  -[AXSettings currentVoices]
  -[AXSettings setHoverTextDisplayMode:]
  -[AXSettings voiceOverBrailleEightDotMode]
  -[AXSettings setRemoteHandGestureCustomizedActions:]
  -[AXSettings gaxInternalSettingsActiveAppOrientation]
  -[AXSettings assistiveTouchRecentGestures]
  -[AXSettings setAssistiveTouchGroupElementsEnabled:]
  -[AXSettings setExtantVoices:]
  -[AXSettings voiceOverTapticChimesAvailability]
  -[AXSettings stickyKeysShiftToggleEnabled]
  -[AXSettings assistiveTouchMouseDwellControlEnabled]
  -[AXSettings assistiveTouchMouseAllowAppleBluetoothDevicesPairing]
  -[AXSettings setGuidedAccessTimeLimitsUsageCount:]
  -[AXSettings setZoomHandGesturesEnabled:]
  -[AXSettings voiceOverAutomaticButtonLabels]
  -[AXSettings assistiveTouchOrbAction]
  -[AXSettings zoomShouldFollowFocus]
  -[AXSettings shouldFlashWhileUnlocked]
  -[AXSettings setIncludeBacktraceInLogs:]
  -[AXSettings quickSpeakSentenceHighlightOption]
  -[AXSettings setQuickSpeakNubbitNormalizedPosition:]
  -[AXSettings setTouchAccommodationsHoldDurationEnabled:]
  -[AXSettings voiceOverBrailleAlertsEnabled]
  -[AXSettings logAXNotificationPosting]
  -[AXSettings setShouldFlashWhileUnlocked:]
  -[AXSettings setSwitchControlRecipes:]
  -[AXSettings gizmoApplicationAccessibilityEnabled]
  -[AXSettings setGuidedAccessDisallowDirectInactiveToActiveTransition:]
  -[AXSettings setGuidedAccessShouldSpeakForTimeRestrictionEvents:]
  -[AXSettings setMedicalPreamble:]
  -[AXSettings assistiveTouchMousePointerSizeMultiplier]
  -[AXSettings _switchControlClearMenuItemMigrationTracking]
  -[AXSettings setMagnifierContrast:]
  -[AXSettings zoomPreferredCurrentDockPosition]
  -[AXSettings setSwitchControlEnabled:]
  -[AXSettings setSwitchControlGesturesMenuItems:]
  -[AXSettings zoomToggleZoomKbShortcutEnabled]
  -[AXSettings setGuidedAccessOverrideTimeRestrictionDuration:]
  -[AXSettings dockSize]
  -[AXSettings voiceOverRotorItems]
  -[AXSettings syncPronunciationsWithCloudKit]
  -[AXSettings setDataMigratorRequestedVoiceCacheRefresh:]
  -[AXSettings dataMigratorRequestedVoiceCacheRefresh]
  -[AXSettings assistiveTouchMousePointerColor]
  -[AXSettings gaxInternalSettingsUserConfiguredAppIDs]
  -[AXSettings voiceOverHandwritingEnabled]
  -[AXSettings setVoiceOverActionsFeedback:]
  -[AXSettings setGuidedAccessToneIdentifierForTimeRestrictionEvents:]
  -[AXSettings setVoiceOverBrailleTableIdentifier:]
  -[AXSettings setAssistiveTouchInternalOnlyHiddenNubbitModeEnabled:]
  -[AXSettings spokenContentShouldUseLanguageDetection]
  -[AXSettings setSwitchControlGesturesTopLevelMenuItems:]
  -[AXSettings setTripleClickOrderedOptions:]
  -[AXSettings zoomSwitchZoomModeKbShortcutEnabled]
  -[AXSettings tapToSpeakTimeEnabled]
  -[AXSettings magnifierContrast]
  -[AXSettings setAssistiveTouchMouseDwellControlEnabled:]
  -[AXSettings setSkipHearingAidMFiAuth:]
  -[AXSettings setVoiceOverTouchPreferredBrailleTableIdentifiers:]
  -[AXSettings setAssistiveTouchScannerSpeechRate:]
  -[AXSettings setVoiceOverBrailleGesturesTypingFeedback:]
  -[AXSettings setQuickSpeakSpeakingRate:forLanguage:]
  -[AXSettings voiceOverHapticsEnabled]
  -[AXSettings voiceOverScreenCurtainEnabled]
  -[AXSettings assistiveTouchEnabled]
  -[AXSettings touchAccommodationsEnabled]
  -[AXSettings setZoomPanOffset:]
  -[AXSettings setZoomSlugSingleTapAction:]
  -[AXSettings setVoiceOverContainerOutputFeedback:]
  -[AXSettings internalLoggingColorTheme]
  -[AXSettings setVoiceOverBrailleMasterStatusCellIndex:]
  -[AXSettings setAssistiveTouchAxisSweepSpeed:]
  -[AXSettings automationPreferredLocalization]
  -[AXSettings voiceOverTypingMode]
  -[AXSettings assistiveTouchMouseDwellControlAutorevertEnabled]
  -[AXSettings voiceOverBrailleGradeTwoAutoTranslateEnabled]
  -[AXSettings phoneticFeedbackEnabled]
  -[AXSettings setVoiceOverPitch:]
  -[AXSettings setVoiceOverSoundEffectsEnabled:]
  -[AXSettings switchControlUserDidReadUSBRestrictedModeAlert]
  -[AXSettings zoomPanOffset]
  -[AXSettings setVoiceOverUseActiveSiriVoice:]
  -[AXSettings setSwitchControlDeviceTopLevelMenuItems:]
  -[AXSettings assistiveTouchMainScreenCustomization]
  -[AXSettings voiceOverSoftwareTypingFeedback]
  -[AXSettings hoverTextPreferredActivatorKey]
  -[AXSettings hoverTextTextColorData]
  -[AXSettings setGaxInternalSettingsSystemDidRestartDueToLowBattery:]
  -[AXSettings voiceOverImageCaptionsEnabled]
  -[AXSettings setVoiceOverShouldDisallowUSBRestrictedMode:]
  -[AXSettings setLaserZoomPanningStyle:]
  -[AXSettings setLeftRightBalanceValue:]
  -[AXSettings setVoiceOverLanguageDetectionEnabled:]
  -[AXSettings guidedAccessAutoLockTimeInSeconds]
  -[AXSettings setAssistiveTouchUsageCount:]
  -[AXSettings assistiveTouchInputCoalescingEnabled]
  -[AXSettings validateAndUpdateRecipeIfNeeded:]
  -[AXSettings assistiveTouchMouseDwellControlCornerCustomization]
  -[AXSettings setHoverTextFontName:]
  -[AXSettings setSiriAutoUpdateListInitialized:]
  -[AXSettings guidedAccessToneIdentifierForTimeRestrictionEvents]
  -[AXSettings setVoiceOverSpeakNotificationsEnabled:]
  -[AXSettings setZoomScrollWheelKbShortcutEnabled:]
  -[AXSettings assistiveTouchUsageCount]
  -[AXSettings setVoiceOverPrefersFollowFocusNavigationStyle:]
  -[AXSettings guidedAccessAllowsMultipleWindows]
  -[AXSettings voiceOverActionsFeedback]
  -[AXSettings quickSpeakVolume]
  -[AXSettings hoverTextFontName]
  -[AXSettings assistiveTouchSingleTapAction]
  -[AXSettings fullKeyboardAccessShouldShowTextEditingModeInstructions]
  -[AXSettings voiceOverUIEnabled]
  -[AXSettings voiceOverTapticTimeSpeed]
  -[AXSettings lastGuidedAccessTimeLimitResetCount]
  -[AXSettings setVoiceOverSoundVolume:]
  -[AXSettings setZoomPreferencesWereInitialized:]
  -[AXSettings assistiveTouchIdleOpacity]
  -[AXSettings voiceOverHapticEnabledForEvent:]
  -[AXSettings voiceOverPunctuationLevel]
  -[AXSettings setVoiceOverTouchUpdateBrailleWithoutConnectedDisplay:]
  -[AXSettings setCurrentVoices:]
  -[AXSettings setVoiceOverTouchBrailleShowTextStyleStatus:]
  -[AXSettings setVoiceOverAutomaticButtonLabels:]
  -[AXSettings touchAccommodationsAllowsSwipeGesturesToBypass]
  -[AXSettings setZoomHandGesturesActionCustomizations:]
  -[AXSettings didTriggerSOSValueSet]
  -[AXSettings setPerAppSettingsCustomizedAppIDs:]
  -[AXSettings setVoiceOverSceneDescriptionsEnabled:]
  -[AXSettings quickSpeakHighlightOption]
  -[AXSettings setAssistiveTouchGameControllerEnabled:]
  -[AXSettings _switchControlAltVoices]
  -[AXSettings setAssistiveTouchDoubleTapAction:]
  -[AXSettings automationEnabled]
  -[AXSettings setZoomCurrentLensEffect:]
  -[AXSettings setVoiceOverDoubleTapInterval:]
  -[AXSettings assistiveTouchMotionTrackerXNormalizationOffset]
  -[AXSettings gaxInternalSettingsUserAppProfile]
  -[AXSettings appleTVRemoteClickpadTapsForDirectionalNavigationEnabled]
  -[AXSettings setVoiceOverNavigateImagesOption:]
  -[AXSettings assistiveTouchActionRepeatInterval]
  -[AXSettings setLocalizationQACaptionMode:]
  -[AXSettings setGuidedAccessUsageCount:]
  -[AXSettings switchControlScanAfterTapLocation]
  -[AXSettings setAssistiveTouchRecentGestures:]
  -[AXSettings assistiveTouchActionRepeatEnabled]
  -[AXSettings assistiveTouchMouseKeysMaxSpeed]
  -[AXSettings setZoomShouldShowSlug:]
  -[AXSettings setAssistiveTouchScannerSpeechEnabled:]
  -[AXSettings setVoiceOverTouchBrailleDisplayOutputMode:]
  -[AXSettings touchAccommodationsTapActivationTimeout]
  -[AXSettings setlastPlatformSwitchTimeResetCount:]
  -[AXSettings lastMagnifierResetCount]
  -[AXSettings isNewRecipe:]
  -[AXSettings voiceOverUseDigitalCrownNavigation]
  -[AXSettings assistiveTouchMouseBehavesLikeFinger]
  -[AXSettings gestureKeys]
  -[AXSettings setFullKeyboardAccessFocusRingColor:]
  -[AXSettings setZoomEnabled:]
  -[AXSettings switchControlTopLevelMenuItems]
  -[AXSettings setAssistiveTouchMotionTrackerSmoothingBufferSize:]
  -[AXSettings setVoiceOverSelectedActivity:]
  -[AXSettings localizationQACaptionShowFilePath]
  -[AXSettings setVoiceOverVerbosityEmojiSuffixEnabled:]
  -[AXSettings assistiveTouchDelayAfterInputEnabled]
  -[AXSettings assistiveTouchDoubleTapActionTimeout]
  -[AXSettings voiceOverPreferredTVInteractionMode]
  -[AXSettings setLastHearingAidControlPanelTimeResetCount:]
  -[AXSettings setAssistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled:]
  -[AXSettings gaxInternalSettingsUserGlobalProfile]
  -[AXSettings voiceOverTouchUpdateBrailleWithoutConnectedDisplay]
  -[AXSettings setSwitchControlShouldUseExtendedKeyboardPredictions:]
  -[AXSettings setClassicInvertColors:]
  -[AXSettings setVoiceOverSpeakingRateInRotorEnabled:]
  -[AXSettings voiceOverSpeakSecondsEncoding]
  -[AXSettings setAssistiveTouchHardwareEnabled:]
  -[AXSettings setCallAudioRoutingAutoAnswerDelay:]
  -[AXSettings voiceOverNumberFeedback]
  -[AXSettings tapticTimeUsageCount]
  -[AXSettings setVoiceOverCustomCommandProfile:]
  -[AXSettings setQuickSpeakHighlightOption:]
  -[AXSettings setAssistiveTouchScannerCursorHighVisibilityEnabled:]
  -[AXSettings setReduceMotionEnabled:]
  -[AXSettings setImageCaptionGenderStrategy:]
  -[AXSettings setHoverTextScrollingSpeed:]
  -[AXSettings setVoiceOverPunctuationGroup:]
  -[AXSettings quickSpeakWordHighlightColor]
  -[AXSettings voiceOverTapticChimesEnabled]
  -[AXSettings voiceOverBrailleContractionMode]
  -[AXSettings assistiveTouchMouseKeysEnabled]
  -[AXSettings setTouchAccommodationsIgnoreRepeatEnabled:]
  -[AXSettings speakCorrectionsEnabled]
  -[AXSettings assistiveTouchScannerSpeechEnabled]
  -[AXSettings setHoverTextBackgroundOpacity:]
  -[AXSettings setSiriSemanticContextEnabled:]
  -[AXSettings clearVoicePrefersCompactSettings]
  -[AXSettings ignoreAXAsserts]
  -[AXSettings setVoiceOverRotorItems:]
  -[AXSettings setVoiceOverTypingMode:]
  -[AXSettings assistiveTouchScannerSpeechRate]
  -[AXSettings nukeAll]
  -[AXSettings assistiveTouchScanTimeoutEnabled]
  -[AXSettings setVoiceOverAdjustSoundVolumeIndependently:]
  -[AXSettings assistiveTouchMotionTrackerConfigurable]
  -[AXSettings _setAudioHardwareChannelLayout:]
  -[AXSettings setVoiceOverSpeaksOverTelephoneCalls:]
  -[AXSettings quickSpeakSentenceHighlightColor]
  -[AXSettings setAlexLocalAssetURL:]
  -[AXSettings setAssistiveTouchLongPressPauseScanningEnabled:]
  -[AXSettings voiceOverBrailleAutoAdvanceDuration]
  -[AXSettings setVoiceOverSelectedLanguage:]
  -[AXSettings setAssistiveTouchAlwaysShowMenuEnabled:]
  -[AXSettings voiceOverHintsEnabled]
  -[AXSettings switchControlShouldUseShortFirstPage]
  -[AXSettings wordFeedbackEnabled]
  -[AXSettings audiogramIngestionLastModelAccess]
  -[AXSettings assistiveTouchOpenMenuSwaggleEnabled]
  -[AXSettings _voiceOverTouchSpeakingRateLanguages]
  -[AXSettings _voiceOverAlternativeVoiceIdentifiers]
  -[AXSettings setZoomPreferredLensModes:]
  -[AXSettings setAssistiveTouchScannerPrefersCompact:forLanguage:]
  -[AXSettings setFullKeyboardAccessCommandMapData:]
  -[AXSettings zoomPeekZoomEnabled]
  -[AXSettings setLastMagnifierResetCount:]
  -[AXSettings zoomControllerColor]
  -[AXSettings hoverTextBackgroundColorData]
  -[AXSettings setlastGuidedAccessTimeResetCount:]
  -[AXSettings backTapDoubleTapAction]
  -[AXSettings setAssistiveTouchInputCoalescingDuration:]
  -[AXSettings setAssistiveTouchHeadMovementSensitivity:]
  -[AXSettings setAssistiveTouchMouseKeysDelay:]
  -[AXSettings tripleClickOptions]
  -[AXSettings zoomPreferredLensModes]
  -[AXSettings setVoiceOverPhoneticsFeedback:]
  -[AXSettings ignoreAXServerEntitlements]
  -[AXSettings setVoiceOverHapticsEnabled:]
  -[AXSettings _quickSpeakSpeakingRateLanguages]
  -[AXSettings switchControlSettingsMenuItems]
  -[AXSettings setSwitchControlCameraPointPickerDwellMovementToleranceRadius:]
  -[AXSettings setVoiceOverNavigationDirectionMode:]
  -[AXSettings setHighContrastFocusIndicatorsEnabled:]
  -[AXSettings setVoiceOverBrailleEightDotMode:]
  -[AXSettings setVoiceOverTapticChimesFrequencyEncoding:]
  -[AXSettings setInternalLoggingColorTheme:]
  -[AXSettings setAssistiveTouchMouseDwellControlMutatedMenu:]
  -[AXSettings setMagnifierEnabled:]
  -[AXSettings voiceOverBSIUsageCount]
  -[AXSettings backTapEnabled]
  -[AXSettings switchControlEnabled]
  -[AXSettings setVoiceOverTouchBrailleDisplayInputMode:]
  -[AXSettings setAudioLeftRightBalance:]
  -[AXSettings assistiveTouchScannerSpeechIsInterruptedByScanning]
  -[AXSettings mediaControlsKeys]
  -[AXSettings hearingAidControlPanelCount]
  -[AXSettings switchControlDeviceTopLevelMenuItems]
  -[AXSettings fullKeyboardAccessShouldShowDebugKeyCommandsView]
  -[AXSettings setVoiceOverLargeCursorEnabled:]
  -[AXSettings setlastGuidedAccessTimeLimitResetCount:]
  -[AXSettings voiceOverHandwritingWasNativeAutocorrectEnabled]
  -[AXSettings localizationQACaptionMode]
  -[AXSettings voiceOverContinuousPathKeyboardStartTimeout]
  -[AXSettings zoomPreferencesWereInitialized]
  -[AXSettings addCustomizedAppID:]
  -[AXSettings setFullKeyboardAccessFocusRingTimeoutEnabled:]
  -[AXSettings lastTapticTimeResetCount]
  -[AXSettings alexLocalAssetURL]
  -[AXSettings touchAccommodationsAreConfigured]
  -[AXSettings setVoiceOverContentDescriptionLevel:]
  -[AXSettings setTouchAccommodationsHoldDurationAllowsSwipeGesturesToBypass:]
  -[AXSettings setAutomationHitpointWarpingEnabled:]
  -[AXSettings voiceOverVolume]
  -[AXSettings setStickyKeysBeepEnabled:]
  -[AXSettings setZoomResizeZoomWindowKbShortcutEnabled:]
  -[AXSettings setQuickSpeakSentenceHighlightColor:]
  -[AXSettings voiceOverNavigateImagesOption]
  -[AXSettings setZoomShouldFollowFocus:]
  -[AXSettings _voiceOverPrefersCompactByLanguage]
  -[AXSettings switchControlCameraPointPickerDwellActivationTimeout]
  -[AXSettings voiceOverAdjustSoundVolumeIndependently]
  -[AXSettings setVoiceOverSpeakTableHeaders:]
  -[AXSettings zoomWindowFrame]
  -[AXSettings setLetterFeedbackEnabled:]
  -[AXSettings setAssistiveTouchScannerCompactMenuEnabled:]
  -[AXSettings setVoiceOverLanguageRotorItems:]
  -[AXSettings leftRightBalanceValue]
  -[AXSettings setHoverTextFontSize:]
  -[AXSettings setQuickSpeakVolume:]
  -[AXSettings _gesturesForPreferenceKeyMigratingIfNecessary:]
  -[AXSettings switchControlShouldUseExtendedKeyboardPredictions]
  -[AXSettings reduceMotionEnabled]
  -[AXSettings _audioHardwareChannelLayout]
  -[AXSettings setEnhanceTextTrackingEnabled:]
  -[AXSettings setAssistiveTouchOrbAction:]
  -[AXSettings setVoiceOverHandGesturesActionCustomizations:]
  -[AXSettings setReduceWhitePointEnabled:]
  -[AXSettings setMagnifierZoomLevel:]
  -[AXSettings setZoomPreferredMaximumZoomScale:]
  -[AXSettings setVoiceOverBrailleBluetoothDisplay:]
  -[AXSettings lastAssistiveTouchTimeResetCount]
  -[AXSettings setTouchAccommodationsSwipeGestureMinimumDistance:]
  -[AXSettings setAssistiveTouchScannerSpeechShouldSpeakTraits:]
  -[AXSettings automaticAccessibilityModeForBundleIdentifier:]
  -[AXSettings updateSmoothingBufferSize:forEyeTracker:]
  -[AXSettings setSwitchControlAutoTapTimeout:]
  -[AXSettings setSwitchControlTapBehavior:]
  -[AXSettings setSwitchControlSettingsTopLevelMenuItems:]
  -[AXSettings setAssistiveTouchEnabled:]
  -[AXSettings setAutomaticAccessibilityEnabled:]
  -[AXSettings assistiveTouchScannerSoundEnabled]
  -[AXSettings setAssistiveTouchScannerSoundEnabled:]
  -[AXSettings _switchControlHasEmptyTopLevelMenuItems:]
  -[AXSettings zoomShouldAllowFullscreenAutopanning]
  -[AXSettings _allSubmenuKeys]
  -[AXSettings switchControlGesturesMenuItems]
  -[AXSettings assistiveTouchSavedGestures]
  -[AXSettings voiceOverBrailleTableIdentifier]
  -[AXSettings hoverTextDisplayMode]
  -[AXSettings assistiveTouchInternalOnlyHiddenNubbitMode]
  -[AXSettings assistiveTouchLongPressEnabled]
  -[AXSettings setVoiceOverBrailleVirtualStatusAlignment:]
  -[AXSettings zoomEnabled]
  -[AXSettings setDockSize:]
  -[AXSettings zoomSlugDoubleTapAction]
  -[AXSettings zoomUserHadLegacyZoomEnabled:wasZoomedIn:withScale:]
  -[AXSettings switchControlUseCameraForPointMode]
  -[AXSettings backTapFalsePositiveAlertsEnabled]
  -[AXSettings setVoiceOverActivationWorkaround:]
  -[AXSettings setVoiceOverVolume:]
  -[AXSettings setGuidedAccessAllowsUnlockWithTouchID:]
  -[AXSettings setAssistiveTouchDelayAfterInput:]
  -[AXSettings setSpokenContentDefaultFallbackLanguage:]
  -[AXSettings switchControlCameraPointPickerSensitivity]
  -[AXSettings setVoiceOverBrailleWordWrapEnabled:]
  -[AXSettings voiceOverActivationWorkaround]
  -[AXSettings assistiveTouchMotionTrackerShouldOffsetBufferPoints]
  -[AXSettings hoverTextScrollingSpeed]
  -[AXSettings setVoiceOverTouchBrailleGesturesLockedOrientation:]
  -[AXSettings voiceOverUserDidReadUSBRestrictedModeAlert]
  -[AXSettings setGaxInternalSettingsIsActiveAppSelfLocked:]
  -[AXSettings setSwitchControlTopLevelMenuItems:]
  -[AXSettings assistiveTouchAxisSweepSpeed]
  -[AXSettings magnifierBrightness]
  -[AXSettings gaxInternalSettingsSavedAccessibilityTripleClickOptions]
  -[AXSettings voiceOverPrefersFollowFocusNavigationStyle]
  -[AXSettings laserZoomPanningStyle]
  -[AXSettings setWordFeedbackEnabled:]
  -[AXSettings touchAccommodationsHoldDurationSwipeGestureSensitivity]
  -[AXSettings setAssistiveTouchScanCycles:]
  -[AXSettings setVoiceOverTouchBrailleGesturesLockedTypingMode:]
  -[AXSettings setAssistiveTouchMouseZoomPanningStyle:]
  -[AXSettings zoomAlwaysUseWindowedZoomForTyping]
  -[AXSettings setMagnifierFilterSetIdentifier:]
  -[AXSettings setVoiceOverQuickNavAnnouncementFeedback:]
  -[AXSettings setMagnifierShouldAdjustFiltersForAmbientLight:]
  -[AXSettings perAppSettingsStats]
  -[AXSettings setIgnoreAXServerEntitlements:]
  -[AXSettings setVoiceOverTapticChimesAvailability:]
  -[AXSettings setAssistiveTouchScanTimeout:]
  -[AXSettings monoAudioEnabled]
  -[AXSettings setGaxInternalSettingsLastPasscodeSetDate:]
  -[AXSettings setVoiceOverHelpMode:]
  -[AXSettings voiceOverTouchBrailleGesturesDidPlayCalibrationHint]
  -[AXSettings lastBrailleScreenInputTimeResetCount]
  -[AXSettings _localeChange:]
  -[AXSettings setVoiceOverExploreFocusAffectsNativeFocus:]
  -[AXSettings zoomSlugTapAndSlideToAdjustZoomLevelEnabled]
  -[AXSettings setEnableVoiceOverCaptions:]
  -[AXSettings setSupportsAdvancedDisplayFilters:]
  -[AXSettings gaxInternalSettingsTimeRestrictionHasExpired]
  -[AXSettings touchAccommodationsUsageConfirmed]
  -[AXSettings tapticTimeInternalFlashScreenEnabled]
  -[AXSettings setGaxInternalSettingsUserAppProfile:]
  -[AXSettings setVoiceOverTapticTimeEncoding:]
  -[AXSettings zoomPanZoomKbShortcutEnabled]
  -[AXSettings setTestingExtantVoices:]
  -[AXSettings setTapToSpeakTimeAvailability:]
  -[AXSettings setVoiceOverTouchBrailleGesturesInputMode:]
  -[AXSettings skipHearingAidMFiAuth]
  -[AXSettings magnifierShouldAdjustFiltersForAmbientLight]
  -[AXSettings voiceOverLinkFeedback]
  -[AXSettings setVoiceOverActivities:]
  -[AXSettings leftRightBalanceEnabled]
  -[AXSettings setTouchAccommodationsEnabled:]
  -[AXSettings setLastPlatformSwitchTimeResetCount:]
  -[AXSettings voiceOverTouchBrailleGesturesInputMode]
  -[AXSettings setlastHearingAidControlPanelTimeResetCount:]
  -[AXSettings touchAccommodationsSwipeGestureMinimumDistance]
  -[AXSettings setMonoAudioEnabled:]
  -[AXSettings voiceOverSoundEnabledForEvent:]
  -[AXSettings reduceWhitePointLevel]
  -[AXSettings selectedSpeechVoiceIdentifiersForSource:]
  -[AXSettings touchAccommodationsTripleClickConfirmed]
  -[AXSettings setVoiceOverVerbositySpeakCustomActionsHint:]
  -[AXSettings voiceOverUsageConfirmed]
  -[AXSettings setAssistiveTouchEyeTrackerCustomizedSettings:]
  -[AXSettings writeAXLogsToFile]
  -[AXSettings setAutomationEnabled:]
  -[AXSettings switchControlGesturesTopLevelMenuItems]
  -[AXSettings voiceOverHearingAidRoutingEnabled]
  -[AXSettings setZoomToggleZoomKbShortcutEnabled:]
  -[AXSettings setEnhanceTextLegibilityEnabled:]
  -[AXSettings touchAccommodationsTapActivationMethod]
  -[AXSettings setAllowHearingAidControlOnLockScreen:]
  -[AXSettings accessibilityEnabled]
  -[AXSettings backTapTripleTapAction]
  -[AXSettings zoomScale]
  -[AXSettings enhanceTextLegibilityEnabled]
  -[AXSettings setShouldStreamToLeftAid:]
  -[AXSettings setShouldStreamToRightAid:]
  -[AXSettings setGaxInternalSettingsTimeRestrictionHasExpired:]
  -[AXSettings setIndependentHearingAidSettings:]
  -[AXSettings allowHearingAidControlOnLockScreen]
  -[AXSettings selectedSpeechVoiceIdentifiers]
  -[AXSettings independentHearingAidSettings]
  -[AXSettings shouldStreamToRightAid]
  -[AXSettings assistiveTouchMotionTrackerSmoothingMaxDelta]
  -[AXSettings shouldStreamToLeftAid]
  -[AXSettings domainNameForPreferenceKey:]
  -[AXSettings setZoomDebugDisableZoomLensScaleTransform:]
  -[AXSettings voiceOverQuickNavAnnouncementFeedback]
  -[AXSettings switchControlMediaControlsMenuItems]
  -[AXSettings voiceOverTouchPreferredBrailleTableIdentifiers]
  -[AXSettings voiceOverSpeakingRateInRotorEnabled]
  -[AXSettings setZoomScale:]
  -[AXSettings setGaxInternalSettingsProductBuildVersion:]
  -[AXSettings quickSpeakNubbitNormalizedPosition]
  -[AXSettings setDidTriggerSOSToday:]
  -[AXSettings setAssistiveTouchScannerMenuLabelsEnabled:]
  -[AXSettings setReduceMotionAutoplayVideoPreviewsEnabled:]
  -[AXSettings quickSpeakSpeakingRate]
  -[AXSettings setVoiceOverNeuralElementFeedback:]
  -[AXSettings testingExtantVoices]
  -[AXSettings switchControlCameraPointPickerMovementToleranceInJoystickMode]
  -[AXSettings setZoomSlugNormalizedPosition:]
  -[AXSettings guidedAccessShouldSpeakForTimeRestrictionEvents]
  -[AXSettings setVoiceOverTouchBrailleShouldReverseDots:]
  -[AXSettings setLocalizationQACaptionShowUSString:]
  -[AXSettings setAssistiveTouchMousePointerTimeoutEnabled:]
  -[AXSettings touchAccommodationsIgnoreRepeatDuration]
  -[AXSettings touchAccommodationsHoldDurationAllowsSwipeGesturesToBypass]
  -[AXSettings setGaxInternalSettingsUserConfiguredAppIDs:]
  -[AXSettings setAssistiveTouchStepInterval:]
  -[AXSettings setAssistiveTouchMousePointerSizeMultiplier:]
  -[AXSettings setTouchAccommodationsIgnoreRepeatDuration:]
  -[AXSettings assistiveTouchScannerCursorHighVisibilityEnabled]
  -[AXSettings setVoiceOverBrailleGradeTwoAutoTranslateEnabled:]
  -[AXSettings setHoverTextActivationLockEnabled:]
  -[AXSettings assistiveTouchScannerSpeechShouldSpeakTraits]
  -[AXSettings assistiveTouchMotionTrackerShouldOffsetBufferPoints:]
  -[AXSettings assistiveTouchAlwaysShowMenuEnabled]
  -[AXSettings setAssistiveTouchSwitchUsageConfirmed:]
  -[AXSettings setBackTapEnabled:]
  -[AXSettings setAssistiveTouchMouseDwellControlAutorevertAction:]
  -[AXSettings setGaxInternalSettingsActiveAppID:]
  -[AXSettings setImageCaptioningDisabledApps:]
  -[AXSettings assistiveTouchMouseAlwaysShowSoftwareKeyboardEnabled]
  -[AXSettings voiceOverCustomCommandProfile]
  -[AXSettings _hasSwitchWithUUID:]
  -[AXSettings .cxx_destruct]
  -[AXSettings automationHitpointWarpingEnabled]
  -[AXSettings _quickSpeakAltVoices]
  -[AXSettings _clearWhitetailMigrationSettings]
  -[AXSettings setAssistiveTouchSpeed:]
  -[AXSettings setVoiceOverSpeakingRate:forLanguage:]
  -[AXSettings setSwitchControlShouldAlwaysActivateKeyboardKeys:]
  -[AXSettings setAutomaticAccessibilityIgnoreAppAccessibilityPreferred:]
  -[AXSettings setAssistiveTouchMotionTrackerXNormalizationOffset:]
  -[AXSettings setVoiceOverMoreContentOutputFeedback:]
  -[AXSettings voiceOverUseTVToggleStyleNavigation]
  -[AXSettings speechVoiceIdentifierForLanguage:source:exists:]
  -[AXSettings setVoiceOverUseDigitalCrownNavigation:]
  -[AXSettings assistiveTouchEyeTrackerCustomizedSettings]
  -[AXSettings voiceOverDirectTouchEnabledApps]
  -[AXSettings setVoiceOverUserDidReadUSBRestrictedModeAlert:]
  -[AXSettings setVoiceOverUsageConfirmed:]
  -[AXSettings allDomainNamesForPreferenceKey:]
  -[AXSettings lastCharacterVoiceTimeResetCount]
  -[AXSettings setSwitchControlCameraPointPickerMode:]
  -[AXSettings setVoiceOverHandwritingWasNativeAutocorrectEnabled:]
  -[AXSettings setAppValidationTestingMode:]
  -[AXSettings setVoiceOverVerbosityEmojiFeedback:]
  -[AXSettings setHearingAidHandOffCount:]
  -[AXSettings assistiveTouchMousePointerTimeoutEnabled]
  -[AXSettings voiceOverEnabled]
  -[AXSettings setZoomShouldAllowFullscreenAutopanning:]
  -[AXSettings voiceOverSpeakTableHeaders]
  -[AXSettings setSwitchControlShouldDisallowUSBRestrictedMode:]
  -[AXSettings characterFeedbackDelayDuration]
  -[AXSettings assistiveTouchHeadMovementSensitivity]
  -[AXSettings voiceOverRotorSummaryFeedback]
  -[AXSettings _voiceOverSetSoundOrHapticValue:forPreference:outputEvent:]
  -[AXSettings setSwitchControlCameraPointPickerDwellActivationTimeout:]
  -[AXSettings switchControlCameraPointPickerDwellMovementToleranceRadius]
  -[AXSettings setAssistiveTouchMouseKeysMaxSpeed:]
  -[AXSettings setUserDidSelectVoiceForLanguage:source:]
  -[AXSettings setZoomShowedBanner:]
  -[AXSettings willPerformUpdateBlocksForPreferenceKey:]
  -[AXSettings _voiceOverDefaultDialect]
  -[AXSettings shouldCaptureVisionEngineDiagnosticsToDisk]
  -[AXSettings quickSpeakUnderlineSentence]
  -[AXSettings voiceOverBrailleMasterStatusCellIndex]
  -[AXSettings willPostNotificationForPreferenceKey:value:]
  -[AXSettings setAssistiveTouchCameraSwitchPreviewEnabled:]
  -[AXSettings customPronunciationSubstitutions]
  -[AXSettings setGaxInternalSettingsSavedAccessibilityFeatures:]
  -[AXSettings setShowSpeechController:]
  -[AXSettings switchControlScanningStyle]
  -[AXSettings voiceOverTouchBrailleShowGeneralStatus]
  -[AXSettings _switchWithAction:excludedUUIDs:needsToSupportLongPress:]
  -[AXSettings setAssistiveTouchMousePointerColor:]
  -[AXSettings automaticAccessibilityModes]
  -[AXSettings setAppleTVRemoteClickpadTapsForDirectionalNavigationEnabled:]
  -[AXSettings assistiveTouchScannerAddedTripleClickAutomatically]
  -[AXSettings setAssistiveTouchMouseKeysEnabled:]
  -[AXSettings supportsAdvancedDisplayFilters]
  -[AXSettings setLastCharacterVoiceTimeResetCount:]
  -[AXSettings preferenceKeyForSelector:]
  -[AXSettings setVoiceOverActionFeedbackFirstInListOnly:]
  -[AXSettings voiceOverTouchBrailleTableIdentifier]
  -[AXSettings setAutomationFauxTableViewCellsEnabled:]
  -[AXSettings guidedAccessUsageCount]
  -[AXSettings valueForPreferenceKey:]
  -[AXSettings setShouldFlashForAlertInSilentMode:]
  -[AXSettings assistiveTouchMotionTrackerYNormalizationOrder]
  -[AXSettings magnifierFilterInverted]
  -[AXSettings setSwitchControlScanningStyle:]
  -[AXSettings _createAndSaveRecipeForInterfaceOrientedPoint:forHold:]
  -[AXSettings voiceOverBrailleLanguageRotorItems]
  -[AXSettings setHoverTextInsertionPointColorData:]
  -[AXSettings setSpeechControllerDoubleTapAction:]
  -[AXSettings setAutomationLocalizedStringLookupInfoEnabled:]
  -[AXSettings setVoiceOverTapticChimesEnabled:]
  -[AXSettings voiceOverHandGesturesActionCustomizations]
  -[AXSettings setAssistiveTouchMouseDwellControlCornerCustomization:]
  -[AXSettings spokenContentDefaultFallbackLanguage]
  -[AXSettings assistiveTouchCameraSwitchPreviewEnabled]
  -[AXSettings voiceOverSpeakNonfocusableElementsAfterDelay]
  -[AXSettings voiceOverVerbositySpeakCustomActionsHint]
  -[AXSettings assistiveTouchInputHoldEnabled]
  -[AXSettings setTouchAccommodationsTapActivationTimeout:]
  -[AXSettings setAssistiveTouchMouseDwellControlAutorevertEnabled:]
  -[AXSettings setAssistiveTouchInternalOnlyPearlTrackingEnabled:]
  -[AXSettings guidedAccessTimeLimitsUsageCount]
  -[AXSettings assistiveTouchMousePointerTimeout]
  -[AXSettings setAssistiveTouchLongPressDuration:]
  -[AXSettings setSpokenContentShouldUseLanguageDetection:]
  -[AXSettings assistiveTouchGameControllerEnabled]
  -[AXSettings setAssistiveTouchMotionTrackerXNormalizationOrder:]
  -[AXSettings magnifierShouldUseVideoStabilization]
  -[AXSettings assistiveTouchMouseZoomPanningStyle]
  -[AXSettings guidedAccessDisallowDirectInactiveToActiveTransition]
  -[AXSettings localizationQACaptionShowUSString]
  -[AXSettings setVoiceOverSpeakActionConfirmation:]
  -[AXSettings init]
  -[AXSettings switchControlShouldAlwaysActivateKeyboardKeys]
  -[AXSettings setSelectedSpeechVoiceIdentifiersWithLanguageSource:]
  -[AXSettings hoverTextContentSize]


AXTapticTimeManager : NSObject
 @property  unsigned int assertionID
 @property  @? testingQueueCallback
 @property  NSLocale *localeOverride
 @property  NSDate *dateOverride
 @property  BOOL isCurrentlyOutputting

  // class methods
  +[AXTapticTimeManager sharedInstance]

  // instance methods
  -[AXTapticTimeManager addObserver:]
  -[AXTapticTimeManager assertionID]
  -[AXTapticTimeManager dealloc]
  -[AXTapticTimeManager .cxx_destruct]
  -[AXTapticTimeManager setDateOverride:]
  -[AXTapticTimeManager setAssertionID:]
  -[AXTapticTimeManager _localeDidChange:]
  -[AXTapticTimeManager removeObserver:]
  -[AXTapticTimeManager dateOverride]
  -[AXTapticTimeManager init]
  -[AXTapticTimeManager _updateHapticPatternsIfNecessary:]
  -[AXTapticTimeManager _informObserversDidStart]
  -[AXTapticTimeManager _informObserversDidStop]
  -[AXTapticTimeManager _informObserversWillOutputSSID:hapticsDescriptions:]
  -[AXTapticTimeManager _informObserversDidOutputSSID:]
  -[AXTapticTimeManager _cleanupHapticsDict]
  -[AXTapticTimeManager _atomToLegacyVibePattern:]
  -[AXTapticTimeManager setLocaleOverride:]
  -[AXTapticTimeManager _updateIs24HourTime]
  -[AXTapticTimeManager _is24HourTime]
  -[AXTapticTimeManager _numberOfTapsForHourNumber:withEncoding:]
  -[AXTapticTimeManager _dateComponentsForClockTime]
  -[AXTapticTimeManager _numberOfTapHoursForClockTimeWithEncoding:]
  -[AXTapticTimeManager _numberOfTapMinutesForClockTime]
  -[AXTapticTimeManager _clearQueue]
  -[AXTapticTimeManager _preStartCheck]
  -[AXTapticTimeManager _startPowerAssertion]
  -[AXTapticTimeManager _stopPowerAssertion]
  -[AXTapticTimeManager _outputWithEnqueueBlock:]
  -[AXTapticTimeManager outputHoursAndMinutes:]
  -[AXTapticTimeManager outputHours:]
  -[AXTapticTimeManager outputMinutes:]
  -[AXTapticTimeManager stopCurrentOutput]
  -[AXTapticTimeManager _enqueueMinutes:encoding:]
  -[AXTapticTimeManager _enqueueHours:encoding:]
  -[AXTapticTimeManager _convertSoundToStringName:]
  -[AXTapticTimeManager _handleTestingQueueCallback]
  -[AXTapticTimeManager _dequeueSound]
  -[AXTapticTimeManager isCurrentlyOutputting]
  -[AXTapticTimeManager testingQueueCallback]
  -[AXTapticTimeManager setTestingQueueCallback:]
  -[AXTapticTimeManager localeOverride]


AXTapticSoundTestingContainer : NSObject
 @property  NSString *sound
 @property  double delay

  // instance methods
  -[AXTapticSoundTestingContainer sound]
  -[AXTapticSoundTestingContainer setDelay:]
  -[AXTapticSoundTestingContainer .cxx_destruct]
  -[AXTapticSoundTestingContainer delay]
  -[AXTapticSoundTestingContainer setSound:]


AXAlternativeVoices : NSObject
 @property  NSMutableDictionary *voiceClassesMap
 @property  NSMutableDictionary *voiceNameMap

  // class methods
  +[AXAlternativeVoices sharedInstance]
  +[AXAlternativeVoices setInUnitTestMode:]
  +[AXAlternativeVoices inUnitTestMode]
  +[AXAlternativeVoices supportsAlex]

  // instance methods
  -[AXAlternativeVoices .cxx_destruct]
  -[AXAlternativeVoices isAlternativeVoice:]
  -[AXAlternativeVoices isOldSiriVoiceIdentifier:]
  -[AXAlternativeVoices isVocalizerVoiceIdentifier:]
  -[AXAlternativeVoices isCompactVocalizerVoiceIdentifier:]
  -[AXAlternativeVoices isCombinedVocalizerVoiceIdentifier:]
  -[AXAlternativeVoices isSiriVoiceIdentifier:]
  -[AXAlternativeVoices isNeuralSiriVoiceIdentifier:]
  -[AXAlternativeVoices isMacinTalkVoice:]
  -[AXAlternativeVoices isAlexAvailableForLanguage:]
  -[AXAlternativeVoices nameForVoiceIdentifier:]
  -[AXAlternativeVoices voiceForVoiceIdentifier:forLanguage:]
  -[AXAlternativeVoices _siriIdentifierFromBaseIdentifier:language:quality:]
  -[AXAlternativeVoices _siriBaseIdentifierFromIdentifier:]
  -[AXAlternativeVoices voiceClassesMap]
  -[AXAlternativeVoices setVoiceClassesMap:]
  -[AXAlternativeVoices voiceNameMap]
  -[AXAlternativeVoices setVoiceNameMap:]


AVAlexSpeechSynthesisVoice : AVSpeechSynthesisVoice <AXAlternativeSpeechSynthesisVoice>
  // instance methods
  -[AVAlexSpeechSynthesisVoice quality]
  -[AVAlexSpeechSynthesisVoice identifier]
  -[AVAlexSpeechSynthesisVoice language]
  -[AVAlexSpeechSynthesisVoice name]
  -[AVAlexSpeechSynthesisVoice nameWithoutQuality]


AVSiriMaleSpeechSynthesisVoice : AVSpeechSynthesisVoice <AXAlternativeSpeechSynthesisVoice>
  // instance methods
  -[AVSiriMaleSpeechSynthesisVoice name]


AVSiriFemaleSpeechSynthesisVoice : AVSpeechSynthesisVoice <AXAlternativeSpeechSynthesisVoice>
  // instance methods
  -[AVSiriFemaleSpeechSynthesisVoice name]


AXMIDIParser : NSObject
  // instance methods
  -[AXMIDIParser parse:error:]
  -[AXMIDIParser _eventTypeForStatusByte:]
  -[AXMIDIParser _expectedPacketLengthForEventType:]
  -[AXMIDIParser _channelForStatusByte:]


AXCodeItem : NSObject
 @property  long long type
 @property  NSString *name
 @property  NSString *path
 @property  NSMutableDictionary *platformToTarget
 @property  long long targetType
 @property  unsigned short loadOrder
 @property  NSArray *excludedProcesses
 @property  AXCodeItem *associatedAccessibilityCodeItem
 @property  AXCodeItem *targetCodeItem
 @property  NSString *debugCodeTypeDescription
 @property  NSBundle *cachedBundle
 @property  BOOL isLoaded
 @property  unsigned long loadedAtTimestamp
 @property  BOOL isAccessibilityBundle

  // class methods
  +[AXCodeItem _codeItemQueue]
  +[AXCodeItem codeItemTypeFromString:]

  // instance methods
  -[AXCodeItem isLoaded]
  -[AXCodeItem path]
  -[AXCodeItem type]
  -[AXCodeItem .cxx_destruct]
  -[AXCodeItem setPath:]
  -[AXCodeItem setIsLoaded:]
  -[AXCodeItem setType:]
  -[AXCodeItem targetType]
  -[AXCodeItem setName:]
  -[AXCodeItem name]
  -[AXCodeItem isEqual:]
  -[AXCodeItem setTargetType:]
  -[AXCodeItem initWithPath:isDyldOpened:]
  -[AXCodeItem initAccessibilityCodeItemWithPath:targetType:platformToTarget:loadOrder:]
  -[AXCodeItem addPlatformToTargetEntries:]
  -[AXCodeItem loadOrder]
  -[AXCodeItem _cacheLazyProperties]
  -[AXCodeItem loadedAtTimestamp]
  -[AXCodeItem isAccessibilityBundle]
  -[AXCodeItem _isSystemAppAccessibilityBundle]
  -[AXCodeItem debugCodeTypeDescription]
  -[AXCodeItem cachedBundle]
  -[AXCodeItem prepareBackingBundleIfNeeded:]
  -[AXCodeItem loadWithStrategy:onQueue:completion:]
  -[AXCodeItem platformToTarget]
  -[AXCodeItem setPlatformToTarget:]
  -[AXCodeItem excludedProcesses]
  -[AXCodeItem setExcludedProcesses:]
  -[AXCodeItem associatedAccessibilityCodeItem]
  -[AXCodeItem setAssociatedAccessibilityCodeItem:]
  -[AXCodeItem setLoadOrder:]
  -[AXCodeItem targetCodeItem]
  -[AXCodeItem setTargetCodeItem:]


AXLoggingSubsystem : NSObject
 @property  BOOL ignoreLogging

  // class methods
  +[AXLoggingSubsystem sharedInstance]
  +[AXLoggingSubsystem threshold]
  +[AXLoggingSubsystem identifier]
  +[AXLoggingSubsystem subsystems]
  +[AXLoggingSubsystem initialize]
  +[AXLoggingSubsystem errorWithDescription:]
  +[AXLoggingSubsystem initializeSubsytem]
  +[AXLoggingSubsystem _errorWithMessage:underlyingError:]
  +[AXLoggingSubsystem wrapError:description:]
  +[AXLoggingSubsystem shouldIncludeBacktraceInLogs]
  +[AXLoggingSubsystem shouldIncludeFileLineAndFunctionInLogs]
  +[AXLoggingSubsystem shouldProcessMessageForLogs]
  +[AXLoggingSubsystem defaultLogLevel]
  +[AXLoggingSubsystem willLog]
  +[AXLoggingSubsystem willLogInfo]
  +[AXLoggingSubsystem willLogDebug]

  // instance methods
  -[AXLoggingSubsystem setIgnoreLogging:]
  -[AXLoggingSubsystem ignoreLogging]


AXReplayableGesture : NSObject <NSSecureCoding>
  // class methods
  +[AXReplayableGesture supportsSecureCoding]
  +[AXReplayableGesture tapGestureForInterfaceOrientedPoint:]

  // instance methods
  -[AXReplayableGesture encodeWithCoder:]
  -[AXReplayableGesture .cxx_destruct]
  -[AXReplayableGesture isEqual:]
  -[AXReplayableGesture initWithCoder:]
  -[AXReplayableGesture numberOfEvents]
  -[AXReplayableGesture fingerIdentifiersAtEventIndex:]
  -[AXReplayableGesture timeAtEventIndex:]
  -[AXReplayableGesture pointForFingerIdentifier:atEventIndex:]
  -[AXReplayableGesture forceForFingerIdentifier:atEventIndex:]
  -[AXReplayableGesture arePointsDeviceRelative]
  -[AXReplayableGesture updateForLandscape:]


AXMutableReplayableGesture : AXReplayableGesture
  // instance methods
  -[AXMutableReplayableGesture addPointsByFingerIdentifier:forces:atTime:]
  -[AXMutableReplayableGesture addPointsFromReplayableGesture:]
  -[AXMutableReplayableGesture _addPoint:force:forFingerIdentifier:atTime:]
  -[AXMutableReplayableGesture _addPoint:force:forFingerIdentifier:atEventIndex:]
  -[AXMutableReplayableGesture _removeFingersAtEventIndex:]
  -[AXMutableReplayableGesture _pointsByFingerIdentifierAtEventIndex:]
  -[AXMutableReplayableGesture _forcesByFingerIdentifierAtEventIndex:]


AXCenterTapReplayableGesture : AXReplayableGesture
  // class methods
  +[AXCenterTapReplayableGesture supportsSecureCoding]

  // instance methods
  -[AXCenterTapReplayableGesture encodeWithCoder:]
  -[AXCenterTapReplayableGesture isEqual:]
  -[AXCenterTapReplayableGesture init]
  -[AXCenterTapReplayableGesture initWithCoder:]


AXPageTurningReplayableGesture : AXReplayableGesture
 @property  BOOL isLeftToRightSwipe
 @property  BOOL isLandscape

  // class methods
  +[AXPageTurningReplayableGesture supportsSecureCoding]

  // instance methods
  -[AXPageTurningReplayableGesture encodeWithCoder:]
  -[AXPageTurningReplayableGesture isEqual:]
  -[AXPageTurningReplayableGesture initWithCoder:]
  -[AXPageTurningReplayableGesture numberOfEvents]
  -[AXPageTurningReplayableGesture fingerIdentifiersAtEventIndex:]
  -[AXPageTurningReplayableGesture timeAtEventIndex:]
  -[AXPageTurningReplayableGesture pointForFingerIdentifier:atEventIndex:]
  -[AXPageTurningReplayableGesture forceForFingerIdentifier:atEventIndex:]
  -[AXPageTurningReplayableGesture arePointsDeviceRelative]
  -[AXPageTurningReplayableGesture updateForLandscape:]
  -[AXPageTurningReplayableGesture initForLeftToRightSwipe:]
  -[AXPageTurningReplayableGesture isLeftToRightSwipe]
  -[AXPageTurningReplayableGesture setIsLeftToRightSwipe:]
  -[AXPageTurningReplayableGesture isLandscape]
  -[AXPageTurningReplayableGesture setIsLandscape:]


AXNamedReplayableGesture : AXMutableReplayableGesture
 @property  NSString *name
 @property  BOOL hasLocalizableName
 @property  BOOL shouldPerformAtOriginalLocation

  // class methods
  +[AXNamedReplayableGesture supportsSecureCoding]
  +[AXNamedReplayableGesture _fingerIdentifierForFingerAtIndex:]
  +[AXNamedReplayableGesture gestureWithLegacyFormatDictionary:]
  +[AXNamedReplayableGesture gestureWithPoints:times:forces:]

  // instance methods
  -[AXNamedReplayableGesture encodeWithCoder:]
  -[AXNamedReplayableGesture .cxx_destruct]
  -[AXNamedReplayableGesture setName:]
  -[AXNamedReplayableGesture name]
  -[AXNamedReplayableGesture isEqual:]
  -[AXNamedReplayableGesture initWithCoder:]
  -[AXNamedReplayableGesture gestureShiftedByOffset:]
  -[AXNamedReplayableGesture hasLocalizableName]
  -[AXNamedReplayableGesture setHasLocalizableName:]
  -[AXNamedReplayableGesture shouldPerformAtOriginalLocation]
  -[AXNamedReplayableGesture setShouldPerformAtOriginalLocation:]


AXSLDServiceProxyDelegateObject : NSObject <SLDServiceProxyDelegate>
  // instance methods
  -[AXSLDServiceProxyDelegateObject serviceProxyDidDisconnect:]
  -[AXSLDServiceProxyDelegateObject serviceProxyDidConnect:]


AXIndexMap : NSObject <NSCopying, NSCoding>
  // instance methods
  -[AXIndexMap removeAllObjects]
  -[AXIndexMap encodeWithCoder:]
  -[AXIndexMap dealloc]
  -[AXIndexMap count]
  -[AXIndexMap copyWithZone:]
  -[AXIndexMap objectForIndex:]
  -[AXIndexMap setObject:forIndex:]
  -[AXIndexMap indexes]
  -[AXIndexMap init]
  -[AXIndexMap initWithCoder:]
  -[AXIndexMap initWithObjects:andIndexes:count:]
  -[AXIndexMap _initWithIndexMap:]
  -[AXIndexMap _initAndDeepCopyIndexMap:]
  -[AXIndexMap deepCopyWithZone:]
  -[AXIndexMap removeObjectForIndex:]
  -[AXIndexMap _createIndexesWithSize:]
  -[AXIndexMap addObjectsFromIndexMap:]


_AXCodeItemDecoder : NSObject
  // instance methods
  -[_AXCodeItemDecoder decodedCodeItemsFromURL:decodingErrors:]


AXUpdateElementVisualsCoalescer : NSObject
 @property  NSTimer *timer
 @property  double lastProgressTime
 @property  double threshold
 @property  double progressInterval
 @property  @? updateVisualsSequenceDidBeginHandler
 @property  @? updateVisualsSequenceDidFinishHandler
 @property  @? updateVisualsSequenceInProgressHandler

  // instance methods
  -[AXUpdateElementVisualsCoalescer threshold]
  -[AXUpdateElementVisualsCoalescer dealloc]
  -[AXUpdateElementVisualsCoalescer .cxx_destruct]
  -[AXUpdateElementVisualsCoalescer setTimer:]
  -[AXUpdateElementVisualsCoalescer timer]
  -[AXUpdateElementVisualsCoalescer setThreshold:]
  -[AXUpdateElementVisualsCoalescer init]
  -[AXUpdateElementVisualsCoalescer _timerDidFire:]
  -[AXUpdateElementVisualsCoalescer notifyUpdateElementVisualsEventDidOccur]
  -[AXUpdateElementVisualsCoalescer progressInterval]
  -[AXUpdateElementVisualsCoalescer setProgressInterval:]
  -[AXUpdateElementVisualsCoalescer updateVisualsSequenceDidBeginHandler]
  -[AXUpdateElementVisualsCoalescer setUpdateVisualsSequenceDidBeginHandler:]
  -[AXUpdateElementVisualsCoalescer updateVisualsSequenceDidFinishHandler]
  -[AXUpdateElementVisualsCoalescer setUpdateVisualsSequenceDidFinishHandler:]
  -[AXUpdateElementVisualsCoalescer updateVisualsSequenceInProgressHandler]
  -[AXUpdateElementVisualsCoalescer setUpdateVisualsSequenceInProgressHandler:]
  -[AXUpdateElementVisualsCoalescer lastProgressTime]
  -[AXUpdateElementVisualsCoalescer setLastProgressTime:]


AXActionCoalescer : NSObject
  // class methods
  +[AXActionCoalescer mainQueueCoalescerWithBlock:]

  // instance methods
  -[AXActionCoalescer .cxx_destruct]
  -[AXActionCoalescer initWithQueue:block:]
  -[AXActionCoalescer performCoalescedAsynchronously]


AXMIDIManager : NSObject <AXMIDIDeviceProtocol>
 @property  AXMIDIParser *parser
 @property  NSString *clientIdentifier
 @property  NSMutableSet *devices
 @property  unsigned int midiClientRef
 @property  unsigned int midiInputPortRef
 @property  @? eventHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMIDIManager setClientIdentifier:]
  -[AXMIDIManager eventHandler]
  -[AXMIDIManager clientIdentifier]
  -[AXMIDIManager parser]
  -[AXMIDIManager devices]
  -[AXMIDIManager dealloc]
  -[AXMIDIManager .cxx_destruct]
  -[AXMIDIManager setDevices:]
  -[AXMIDIManager setEventHandler:]
  -[AXMIDIManager init]
  -[AXMIDIManager device:didAddEntity:]
  -[AXMIDIManager device:didRemoveEntity:]
  -[AXMIDIManager device:entity:didAddSource:]
  -[AXMIDIManager device:entity:didRemoveSource:]
  -[AXMIDIManager device:entity:didAddDestination:]
  -[AXMIDIManager device:entity:didRemoveDestination:]
  -[AXMIDIManager initWithIdentifier:eventHandler:]
  -[AXMIDIManager printAttachedDevices]
  -[AXMIDIManager _nameForMidiObjectType:]
  -[AXMIDIManager _handleObjectAddedNotification:]
  -[AXMIDIManager _handleObjectRemovedNotification:]
  -[AXMIDIManager _handlePropertyChangedNotification:]
  -[AXMIDIManager _handleThruConnectionsChangedNotification:]
  -[AXMIDIManager _handleSerialPortOwnerChangedNotification:]
  -[AXMIDIManager _handleIOErrorNotification:]
  -[AXMIDIManager _resetAndDetectDevices]
  -[AXMIDIManager _removeMidiDevice:]
  -[AXMIDIManager _deviceForMidiDevice:addIfNeeded:]
  -[AXMIDIManager _addMidiEntity:]
  -[AXMIDIManager _removeMidiEntity:]
  -[AXMIDIManager _addMidiSource:]
  -[AXMIDIManager _removeMidiSource:]
  -[AXMIDIManager _addMidiDestination:]
  -[AXMIDIManager _removeMidiDestination:]
  -[AXMIDIManager setParser:]
  -[AXMIDIManager midiClientRef]
  -[AXMIDIManager setMidiClientRef:]
  -[AXMIDIManager midiInputPortRef]
  -[AXMIDIManager setMidiInputPortRef:]


AXOutputAction : NSObject <NSCopying>
 @property  NSString *string
 @property  NSString *brailleString
 @property  NSString *originalString
 @property  {_NSRange=QQ} rangeOfString
 @property  BOOL generatesBraille
 @property  BOOL performPunctuationTranslation
 @property  BOOL replaceCommas
 @property  BOOL wasDivided
 @property  AXIndexMap *outputVariants
 @property  unsigned long outputActionID

  // class methods
  +[AXOutputAction newOutputActionID]

  // instance methods
  -[AXOutputAction string]
  -[AXOutputAction originalString]
  -[AXOutputAction .cxx_destruct]
  -[AXOutputAction initWithString:]
  -[AXOutputAction copyWithZone:]
  -[AXOutputAction setString:]
  -[AXOutputAction isEqual:]
  -[AXOutputAction initWithAXAction:]
  -[AXOutputAction initWithString:brailleString:]
  -[AXOutputAction _rangeOfString]
  -[AXOutputAction setString:overrideOriginalString:]
  -[AXOutputAction setObject:forVariant:]
  -[AXOutputAction objectForVariant:]
  -[AXOutputAction removeObjectForVariant:]
  -[AXOutputAction outputVariants]
  -[AXOutputAction rangeOfString]
  -[AXOutputAction brailleString]
  -[AXOutputAction setBrailleString:]
  -[AXOutputAction generatesBraille]
  -[AXOutputAction setGeneratesBraille:]
  -[AXOutputAction performPunctuationTranslation]
  -[AXOutputAction setPerformPunctuationTranslation:]
  -[AXOutputAction replaceCommas]
  -[AXOutputAction setReplaceCommas:]
  -[AXOutputAction wasDivided]
  -[AXOutputAction setWasDivided:]
  -[AXOutputAction outputActionID]


AXSystemAppServer : NSObject
  // class methods
  +[AXSystemAppServer server]


AXEventGameControllerInfoRepresentation : NSObject <AXEventRepresentationDescription, NSSecureCoding, NSCopying>
 @property  double directionPadUp
 @property  double directionPadDown
 @property  double directionPadLeft
 @property  double directionPadRight
 @property  double faceButtonA
 @property  double faceButtonB
 @property  double faceButtonX
 @property  double faceButtonY
 @property  double shoulderButtonR1
 @property  double shoulderButtonR2
 @property  double shoulderButtonL1
 @property  double shoulderButtonL2
 @property  double leftJoystickX
 @property  double leftJoystickY
 @property  double leftJoystickButton
 @property  double rightJoystickX
 @property  double rightJoystickY
 @property  double rightJoystickButton
 @property  double menuButton
 @property  double viewButton
 @property  double homeButton
 @property  BOOL rightJoystickActive
 @property  BOOL leftJoystickActive
 @property  BOOL isJoystickPressed
 @property  BOOL isDirectionPadPressed
 @property  BOOL isFaceButtonPressed
 @property  BOOL isShoulderButtonPressed
 @property  BOOL isKeyboardTypeButtonPressed
 @property  NSString *description
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *debugDescription

  // class methods
  +[AXEventGameControllerInfoRepresentation supportsSecureCoding]

  // instance methods
  -[AXEventGameControllerInfoRepresentation encodeWithCoder:]
  -[AXEventGameControllerInfoRepresentation copyWithZone:]
  -[AXEventGameControllerInfoRepresentation initWithCoder:]
  -[AXEventGameControllerInfoRepresentation accessibilityEventRepresentationTabularDescription]
  -[AXEventGameControllerInfoRepresentation rightJoystickActive]
  -[AXEventGameControllerInfoRepresentation leftJoystickActive]
  -[AXEventGameControllerInfoRepresentation isJoystickPressed]
  -[AXEventGameControllerInfoRepresentation isDirectionPadPressed]
  -[AXEventGameControllerInfoRepresentation isFaceButtonPressed]
  -[AXEventGameControllerInfoRepresentation isShoulderButtonPressed]
  -[AXEventGameControllerInfoRepresentation isKeyboardTypeButtonPressed]
  -[AXEventGameControllerInfoRepresentation directionPadUp]
  -[AXEventGameControllerInfoRepresentation setDirectionPadUp:]
  -[AXEventGameControllerInfoRepresentation directionPadDown]
  -[AXEventGameControllerInfoRepresentation setDirectionPadDown:]
  -[AXEventGameControllerInfoRepresentation directionPadLeft]
  -[AXEventGameControllerInfoRepresentation setDirectionPadLeft:]
  -[AXEventGameControllerInfoRepresentation directionPadRight]
  -[AXEventGameControllerInfoRepresentation setDirectionPadRight:]
  -[AXEventGameControllerInfoRepresentation faceButtonA]
  -[AXEventGameControllerInfoRepresentation setFaceButtonA:]
  -[AXEventGameControllerInfoRepresentation faceButtonB]
  -[AXEventGameControllerInfoRepresentation setFaceButtonB:]
  -[AXEventGameControllerInfoRepresentation faceButtonX]
  -[AXEventGameControllerInfoRepresentation setFaceButtonX:]
  -[AXEventGameControllerInfoRepresentation faceButtonY]
  -[AXEventGameControllerInfoRepresentation setFaceButtonY:]
  -[AXEventGameControllerInfoRepresentation shoulderButtonR1]
  -[AXEventGameControllerInfoRepresentation setShoulderButtonR1:]
  -[AXEventGameControllerInfoRepresentation shoulderButtonR2]
  -[AXEventGameControllerInfoRepresentation setShoulderButtonR2:]
  -[AXEventGameControllerInfoRepresentation shoulderButtonL1]
  -[AXEventGameControllerInfoRepresentation setShoulderButtonL1:]
  -[AXEventGameControllerInfoRepresentation shoulderButtonL2]
  -[AXEventGameControllerInfoRepresentation setShoulderButtonL2:]
  -[AXEventGameControllerInfoRepresentation leftJoystickX]
  -[AXEventGameControllerInfoRepresentation setLeftJoystickX:]
  -[AXEventGameControllerInfoRepresentation leftJoystickY]
  -[AXEventGameControllerInfoRepresentation setLeftJoystickY:]
  -[AXEventGameControllerInfoRepresentation leftJoystickButton]
  -[AXEventGameControllerInfoRepresentation setLeftJoystickButton:]
  -[AXEventGameControllerInfoRepresentation rightJoystickX]
  -[AXEventGameControllerInfoRepresentation setRightJoystickX:]
  -[AXEventGameControllerInfoRepresentation rightJoystickY]
  -[AXEventGameControllerInfoRepresentation setRightJoystickY:]
  -[AXEventGameControllerInfoRepresentation rightJoystickButton]
  -[AXEventGameControllerInfoRepresentation setRightJoystickButton:]
  -[AXEventGameControllerInfoRepresentation menuButton]
  -[AXEventGameControllerInfoRepresentation setMenuButton:]
  -[AXEventGameControllerInfoRepresentation viewButton]
  -[AXEventGameControllerInfoRepresentation setViewButton:]
  -[AXEventGameControllerInfoRepresentation homeButton]
  -[AXEventGameControllerInfoRepresentation setHomeButton:]


AXEventData : NSObject
 @property  long long eventSenderIdentifier
 @property  long long page
 @property  long long usage
 @property  long long modifierFlags
 @property  float eventValue1
 @property  float eventValue2
 @property  BOOL wasPostedByAccessibility
 @property  char * dataBytes
 @property  long long dataLength

  // class methods
  +[AXEventData dataWithBytes:length:]
  +[AXEventData dataWithSender:]
  +[AXEventData dataWithSender:page:usage:modifierFlags:eventValue1:eventValue2:]

  // instance methods
  -[AXEventData usage]
  -[AXEventData modifierFlags]
  -[AXEventData page]
  -[AXEventData dataLength]
  -[AXEventData init]
  -[AXEventData eventSenderIdentifier]
  -[AXEventData eventValue1]
  -[AXEventData eventValue2]
  -[AXEventData wasPostedByAccessibility]
  -[AXEventData dataBytes]


AXLogColorizer : NSObject
 @property  BOOL managedBySettings
 @property  {AXLogColorTheme=qqqq} colorTheme
 @property  BOOL active
 @property  BOOL preferDarkColors

  // class methods
  +[AXLogColorizer defaultColorizer]
  +[AXLogColorizer coloredString:withColor:]
  +[AXLogColorizer colorizeStringIfEnabled:withColor:]
  +[AXLogColorizer defaultDarkColorsTheme]
  +[AXLogColorizer ansiColorSeqForAXLogColor:]
  +[AXLogColorizer defaultLightColorsTheme]

  // instance methods
  -[AXLogColorizer cyanString:]
  -[AXLogColorizer _updateSettingsFromUserPrefs]
  -[AXLogColorizer _initAndManageWithSettings:]
  -[AXLogColorizer yellowString:]
  -[AXLogColorizer errorString:]
  -[AXLogColorizer redString:]
  -[AXLogColorizer setPreferDarkColors:]
  -[AXLogColorizer colorTheme]
  -[AXLogColorizer isActive]
  -[AXLogColorizer setColorTheme:]
  -[AXLogColorizer magentaString:]
  -[AXLogColorizer greenString:]
  -[AXLogColorizer setActive:]
  -[AXLogColorizer infoString:]
  -[AXLogColorizer warningString:]
  -[AXLogColorizer blueString:]
  -[AXLogColorizer isManagedBySettings]
  -[AXLogColorizer debugString:]
  -[AXLogColorizer whiteOrBlackString:]
  -[AXLogColorizer setManagedBySettings:]
  -[AXLogColorizer greyString:]
  -[AXLogColorizer preferDarkColors]
  -[AXLogColorizer init]


_AXReplayInstance : NSObject
 @property  @? replayBlock
 @property  @? completionBlock
 @property  double interval
 @property  long long maxAttempts
 @property  long long attemptsRemaining
 @property  BOOL async
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL didSucceed
 @property  NSError *underlyingError
 @property  id underlyingResult
 @property  NSString *name

  // class methods
  +[_AXReplayInstance replayBlock:name:attempts:interval:async:queue:completion:]

  // instance methods
  -[_AXReplayInstance setCompletionBlock:]
  -[_AXReplayInstance async]
  -[_AXReplayInstance completionBlock]
  -[_AXReplayInstance setInterval:]
  -[_AXReplayInstance .cxx_destruct]
  -[_AXReplayInstance setQueue:]
  -[_AXReplayInstance setName:]
  -[_AXReplayInstance name]
  -[_AXReplayInstance queue]
  -[_AXReplayInstance interval]
  -[_AXReplayInstance underlyingResult]
  -[_AXReplayInstance setUnderlyingError:]
  -[_AXReplayInstance setAsync:]
  -[_AXReplayInstance dispatch]
  -[_AXReplayInstance _dispatchSynchronously]
  -[_AXReplayInstance _dispatchAsynchronously]
  -[_AXReplayInstance _genericFailError]
  -[_AXReplayInstance replayBlock]
  -[_AXReplayInstance setReplayBlock:]
  -[_AXReplayInstance maxAttempts]
  -[_AXReplayInstance setMaxAttempts:]
  -[_AXReplayInstance attemptsRemaining]
  -[_AXReplayInstance setAttemptsRemaining:]
  -[_AXReplayInstance didSucceed]
  -[_AXReplayInstance setDidSucceed:]
  -[_AXReplayInstance underlyingError]
  -[_AXReplayInstance setUnderlyingResult:]


AXReplayer : NSObject
  // class methods
  +[AXReplayer replayer]

  // instance methods
  -[AXReplayer replayWithName:attempts:interval:async:queue:replayBlock:completion:]


AXEventProcessor : NSObject
 @property  NSString *HIDEventTapIdentifier
 @property  int HIDEventTapPriority
 @property  NSThread *HIDEventReceiveThread
 @property  BOOL handlingHIDEvents
 @property  NSMutableArray *hidActualEventTapEnabledReasons
 @property  NSString *systemEventTapIdentifier
 @property  int systemEventTapPriority
 @property  BOOL handlingSystemEvents
 @property  NSMutableArray *systemActualEventTapEnabledReasons
 @property  BOOL shouldNotifyUserEventOccurred
 @property  @? HIDEventHandler
 @property  unsigned long HIDEventFilterMask
 @property  @? failedToHandleEventInTime
 @property  NSArray *hidEventTapEnabledReasons
 @property  @? systemEventHandler
 @property  BOOL ignoreAllSystemEvents
 @property  NSArray *systemEventTapEnabledReasons

  // instance methods
  -[AXEventProcessor cleanup]
  -[AXEventProcessor HIDEventTapIdentifier]
  -[AXEventProcessor setHIDEventReceiveThread:]
  -[AXEventProcessor endHandlingSystemEventsForReason:]
  -[AXEventProcessor HIDEventTapPriority]
  -[AXEventProcessor HIDEventFilterMask]
  -[AXEventProcessor hidEventTapEnabledReasons]
  -[AXEventProcessor setFailedToHandleEventInTime:]
  -[AXEventProcessor systemActualEventTapEnabledReasons]
  -[AXEventProcessor setShouldNotifyUserEventOccurred:]
  -[AXEventProcessor systemEventTapEnabledReasons]
  -[AXEventProcessor setSystemEventTapIdentifier:]
  -[AXEventProcessor beginHandlingSystemEventsForReason:]
  -[AXEventProcessor _installSystemEventFilter]
  -[AXEventProcessor dealloc]
  -[AXEventProcessor raiseHIDEventTapPriorityToMaximum]
  -[AXEventProcessor raiseSystemEventTapPriorityToMaximum]
  -[AXEventProcessor .cxx_destruct]
  -[AXEventProcessor _uninstallSystemEventFilter]
  -[AXEventProcessor beginHandlingHIDEventsForReason:]
  -[AXEventProcessor restoreSystemEventTapPriorityToDefault]
  -[AXEventProcessor setSystemEventHandler:]
  -[AXEventProcessor _installHIDEventFilter]
  -[AXEventProcessor isHandlingHIDEvents]
  -[AXEventProcessor hidActualEventTapEnabledReasons]
  -[AXEventProcessor HIDEventHandler]
  -[AXEventProcessor _runHIDEventReceiveThread]
  -[AXEventProcessor systemEventHandler]
  -[AXEventProcessor setHidActualEventTapEnabledReasons:]
  -[AXEventProcessor isHandlingSystemEvents]
  -[AXEventProcessor ignoreAllSystemEvents]
  -[AXEventProcessor systemEventTapPriority]
  -[AXEventProcessor failedToHandleEventInTime]
  -[AXEventProcessor setIgnoreAllSystemEvents:]
  -[AXEventProcessor _uninstallHIDEventFilter]
  -[AXEventProcessor systemEventTapIdentifier]
  -[AXEventProcessor setHIDEventTapIdentifier:]
  -[AXEventProcessor setSystemEventTapPriority:]
  -[AXEventProcessor _threadStop]
  -[AXEventProcessor setHIDEventTapPriority:]
  -[AXEventProcessor setHIDEventHandler:]
  -[AXEventProcessor shouldNotifyUserEventOccurred]
  -[AXEventProcessor setHandlingSystemEvents:]
  -[AXEventProcessor endHandlingHIDEventsForReason:]
  -[AXEventProcessor setSystemActualEventTapEnabledReasons:]
  -[AXEventProcessor initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:]
  -[AXEventProcessor HIDEventReceiveThread]
  -[AXEventProcessor restoreHIDEventTapPriorityToDefault]
  -[AXEventProcessor setHandlingHIDEvents:]
  -[AXEventProcessor init]
  -[AXEventProcessor setHIDEventFilterMask:]


AXBuddyDataPackage : NSObject <NSSecureCoding>
 @property  NSDictionary *accessibilityOptions
 @property  NSString *axOSVersion
 @property  NSString *axModel
 @property  NSString *axPreferredContentSizeCategoryName
 @property  BOOL usesExtendedSlider

  // class methods
  +[AXBuddyDataPackage supportsSecureCoding]
  +[AXBuddyDataPackage testData]
  +[AXBuddyDataPackage setTestData:]
  +[AXBuddyDataPackage dataPackageForCurrentSettings]
  +[AXBuddyDataPackage setTestData:forModel:hasHomeButton:largeTextUsesExtendedRange:]
  +[AXBuddyDataPackage productVersionForBuddy]
  +[AXBuddyDataPackage deviceClassForBuddy]
  +[AXBuddyDataPackage dataBlobForBuddy]
  +[AXBuddyDataPackage restoreDataBlobForBuddy:]

  // instance methods
  -[AXBuddyDataPackage encodeWithCoder:]
  -[AXBuddyDataPackage .cxx_destruct]
  -[AXBuddyDataPackage initWithCoder:]
  -[AXBuddyDataPackage applySavedSettings]
  -[AXBuddyDataPackage processDomainDictionary:]
  -[AXBuddyDataPackage accessibilityOptions]
  -[AXBuddyDataPackage setAccessibilityOptions:]
  -[AXBuddyDataPackage axOSVersion]
  -[AXBuddyDataPackage setAxOSVersion:]
  -[AXBuddyDataPackage axModel]
  -[AXBuddyDataPackage setAxModel:]
  -[AXBuddyDataPackage axPreferredContentSizeCategoryName]
  -[AXBuddyDataPackage setAxPreferredContentSizeCategoryName:]
  -[AXBuddyDataPackage usesExtendedSlider]
  -[AXBuddyDataPackage setUsesExtendedSlider:]


AXMIDIDeviceEntity : NSObject
 @property  unsigned int midiEntity
 @property  NSMutableSet *sources
 @property  NSMutableSet *destinations
 @property  AXMIDIDevice *device
 @property  NSString *name
 @property  NSNumber *uniqueID
 @property  NSNumber *deviceID
 @property  NSNumber *isEmbedded
 @property  NSNumber *isBroadcast
 @property  NSNumber *isOffline
 @property  NSNumber *isPrivate
 @property  NSString *driverName
 @property  NSNumber *supportsGeneralMIDI
 @property  NSNumber *supportsMMC

  // instance methods
  -[AXMIDIDeviceEntity isOffline]
  -[AXMIDIDeviceEntity deviceID]
  -[AXMIDIDeviceEntity uniqueID]
  -[AXMIDIDeviceEntity sources]
  -[AXMIDIDeviceEntity setDestinations:]
  -[AXMIDIDeviceEntity .cxx_destruct]
  -[AXMIDIDeviceEntity destinations]
  -[AXMIDIDeviceEntity isPrivate]
  -[AXMIDIDeviceEntity setDevice:]
  -[AXMIDIDeviceEntity device]
  -[AXMIDIDeviceEntity setSources:]
  -[AXMIDIDeviceEntity name]
  -[AXMIDIDeviceEntity isEmbedded]
  -[AXMIDIDeviceEntity driverName]
  -[AXMIDIDeviceEntity isBroadcast]
  -[AXMIDIDeviceEntity supportsGeneralMIDI]
  -[AXMIDIDeviceEntity supportsGeneralMMC]
  -[AXMIDIDeviceEntity addMidiSource:]
  -[AXMIDIDeviceEntity removeMidiSource:]
  -[AXMIDIDeviceEntity addMidiDestination:]
  -[AXMIDIDeviceEntity removeMidiDestination:]
  -[AXMIDIDeviceEntity supportsMMC]
  -[AXMIDIDeviceEntity initWithMIDIEntity:device:]
  -[AXMIDIDeviceEntity resetAndDetectEndpoints]
  -[AXMIDIDeviceEntity _sourceForMidiEndpoint:addIfNeeded:]
  -[AXMIDIDeviceEntity _destinationForMidiEndpoint:addIfNeeded:]
  -[AXMIDIDeviceEntity midiEntity]
  -[AXMIDIDeviceEntity setMidiEntity:]


GAXTimeRestrictionManager : NSObject
 @property  BOOL active
 @property  BOOL paused
 @property  NSDate *startTime
 @property  long long expirationDurationInSeconds
 @property  AXAccessQueueTimer *expirationTimer
 @property  NSMutableSet *alarmDurationsInSeconds
 @property  NSMutableArray *alarmTimers
 @property  <GAXTimeRestrictionManagerDelegate> *delegate
 @property  AXAccessQueue *assertedAccessQueue
 @property  long long remainingTimeInSeconds

  // instance methods
  -[GAXTimeRestrictionManager startTime]
  -[GAXTimeRestrictionManager setDelegate:]
  -[GAXTimeRestrictionManager delegate]
  -[GAXTimeRestrictionManager setPaused:]
  -[GAXTimeRestrictionManager pause]
  -[GAXTimeRestrictionManager isPaused]
  -[GAXTimeRestrictionManager setStartTime:]
  -[GAXTimeRestrictionManager expirationTimer]
  -[GAXTimeRestrictionManager isActive]
  -[GAXTimeRestrictionManager .cxx_destruct]
  -[GAXTimeRestrictionManager resume]
  -[GAXTimeRestrictionManager setActive:]
  -[GAXTimeRestrictionManager cancel]
  -[GAXTimeRestrictionManager initWithAssertedAccessQueue:]
  -[GAXTimeRestrictionManager remainingTimeInSeconds]
  -[GAXTimeRestrictionManager beginWithDuration:]
  -[GAXTimeRestrictionManager _addAlarmForDuration:]
  -[GAXTimeRestrictionManager _scheduleTimers]
  -[GAXTimeRestrictionManager _removeAllTimers]
  -[GAXTimeRestrictionManager _removeExpirationTimer]
  -[GAXTimeRestrictionManager _removeAllAlarmTimers]
  -[GAXTimeRestrictionManager expirationDurationInSeconds]
  -[GAXTimeRestrictionManager setExpirationDurationInSeconds:]
  -[GAXTimeRestrictionManager alarmDurationsInSeconds]
  -[GAXTimeRestrictionManager setAlarmDurationsInSeconds:]
  -[GAXTimeRestrictionManager assertedAccessQueue]
  -[GAXTimeRestrictionManager setAssertedAccessQueue:]
  -[GAXTimeRestrictionManager setExpirationTimer:]
  -[GAXTimeRestrictionManager alarmTimers]
  -[GAXTimeRestrictionManager setAlarmTimers:]


AXSwitch : NSObject <NSSecureCoding>
 @property  NSUUID *uuid
 @property  long long action
 @property  long long longPressAction
 @property  NSString *name
 @property  NSString *source
 @property  NSString *localizedSourceDescription
 @property  NSString *type
 @property  NSString *productName
 @property  NSString *manufacturerName
 @property  BOOL hasLongPressAction
 @property  BOOL supportsLongPress
 @property  unsigned short keyCode
 @property  long long buttonNumber
 @property  long long headSwitch
 @property  AXMIDIEvent *midiEvent
 @property  unsigned long cameraSwitch
 @property  unsigned long expressionSensitivity
 @property  long long accessibilityEventUsagePage
 @property  long long accessibilityEventUsage
 @property  long long accessibilityEventModifierFlags
 @property  NSString *remoteSwitchIdentifier
 @property  NSString *remoteDeviceName
 @property  NSString *remoteDeviceIdentifier

  // class methods
  +[AXSwitch supportsSecureCoding]
  +[AXSwitch switchWithAction:name:source:type:]
  +[AXSwitch expressionToSwitchTypeMapping]

  // instance methods
  -[AXSwitch source]
  -[AXSwitch setManufacturerName:]
  -[AXSwitch manufacturerName]
  -[AXSwitch setSource:]
  -[AXSwitch encodeWithCoder:]
  -[AXSwitch type]
  -[AXSwitch keyCode]
  -[AXSwitch uuid]
  -[AXSwitch productName]
  -[AXSwitch .cxx_destruct]
  -[AXSwitch setUuid:]
  -[AXSwitch setProductName:]
  -[AXSwitch longPressAction]
  -[AXSwitch action]
  -[AXSwitch setType:]
  -[AXSwitch setName:]
  -[AXSwitch name]
  -[AXSwitch setAction:]
  -[AXSwitch isEqual:]
  -[AXSwitch initWithCoder:]
  -[AXSwitch remoteDeviceName]
  -[AXSwitch setRemoteDeviceName:]
  -[AXSwitch setKeyCode:]
  -[AXSwitch setLongPressAction:]
  -[AXSwitch initWithAction:name:source:type:]
  -[AXSwitch hasLongPressAction]
  -[AXSwitch supportsLongPress]
  -[AXSwitch localizedSourceDescription]
  -[AXSwitch buttonNumber]
  -[AXSwitch setButtonNumber:]
  -[AXSwitch headSwitch]
  -[AXSwitch setHeadSwitch:]
  -[AXSwitch midiEvent]
  -[AXSwitch setMidiEvent:]
  -[AXSwitch cameraSwitch]
  -[AXSwitch setCameraSwitch:]
  -[AXSwitch expressionSensitivity]
  -[AXSwitch setExpressionSensitivity:]
  -[AXSwitch accessibilityEventUsagePage]
  -[AXSwitch setAccessibilityEventUsagePage:]
  -[AXSwitch accessibilityEventUsage]
  -[AXSwitch setAccessibilityEventUsage:]
  -[AXSwitch accessibilityEventModifierFlags]
  -[AXSwitch setAccessibilityEventModifierFlags:]
  -[AXSwitch remoteSwitchIdentifier]
  -[AXSwitch setRemoteSwitchIdentifier:]
  -[AXSwitch remoteDeviceIdentifier]
  -[AXSwitch setRemoteDeviceIdentifier:]


AXMouseEventListener : NSObject <AXDeviceMonitorDelegate>
 @property  BOOL currentDevicesHaveAssistiveTouchCustomActions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMouseEventListener sharedInstance]
  +[AXMouseEventListener _mouseMatching]

  // instance methods
  -[AXMouseEventListener _finishHandlingMouseButtonEvent:buttonMask:creatorHIDServiceClient:]
  -[AXMouseEventListener discoveredMouseDevices]
  -[AXMouseEventListener endFilteringButtonEvents]
  -[AXMouseEventListener addObserver:]
  -[AXMouseEventListener dealloc]
  -[AXMouseEventListener .cxx_destruct]
  -[AXMouseEventListener deviceMonitorDidDetectDeviceEvent:]
  -[AXMouseEventListener beginFilteringButtonEvents]
  -[AXMouseEventListener _handleMouseButtonEvent:]
  -[AXMouseEventListener currentDevicesHaveAssistiveTouchCustomActions]
  -[AXMouseEventListener mouseSettingsDidChange]
  -[AXMouseEventListener removeObserver:]
  -[AXMouseEventListener _init]


AXSiriShortcut : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *shortcutName
 @property  NSString *associatedAppBundleIdentifier
 @property  unsigned short glyphCharacter
 @property  NSString *phrase

  // class methods
  +[AXSiriShortcut supportsSecureCoding]

  // instance methods
  -[AXSiriShortcut identifier]
  -[AXSiriShortcut encodeWithCoder:]
  -[AXSiriShortcut glyphCharacter]
  -[AXSiriShortcut .cxx_destruct]
  -[AXSiriShortcut setIdentifier:]
  -[AXSiriShortcut phrase]
  -[AXSiriShortcut initWithCoder:]
  -[AXSiriShortcut associatedAppBundleIdentifier]
  -[AXSiriShortcut initWithAccessibilityWorkflow:]
  -[AXSiriShortcut shortcutName]
  -[AXSiriShortcut setShortcutName:]
  -[AXSiriShortcut setAssociatedAppBundleIdentifier:]
  -[AXSiriShortcut setGlyphCharacter:]


AXSiriShortcutsManager : NSObject <WFObservableResultObserver, WFWorkflowRunnerClientDelegate>
 @property  unsigned long source
 @property  VCVoiceShortcutClient *shortcutClient
 @property  NSArray *shortcuts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXSiriShortcutsManager sharedManager]
  +[AXSiriShortcutsManager shortcutsManagerForSource:]

  // instance methods
  -[AXSiriShortcutsManager source]
  -[AXSiriShortcutsManager initWithSource:]
  -[AXSiriShortcutsManager .cxx_destruct]
  -[AXSiriShortcutsManager workflowRunnerClient:didFinishRunningWorkflowWithOutput:error:cancelled:]
  -[AXSiriShortcutsManager workflowRunnerClient:didStartRunningWorkflowWithProgress:]
  -[AXSiriShortcutsManager shortcuts]
  -[AXSiriShortcutsManager observableResultDidChange:]
  -[AXSiriShortcutsManager registerShortcutsDidChangeBlock:]
  -[AXSiriShortcutsManager unregisterShortcutsDidChangeBlock:]
  -[AXSiriShortcutsManager shortcutForIdentifier:]
  -[AXSiriShortcutsManager _loadShortcuts]
  -[AXSiriShortcutsManager _queue_loadShortcuts]
  -[AXSiriShortcutsManager performShortcut:]
  -[AXSiriShortcutsManager shortcutClient]
  -[AXSiriShortcutsManager setShortcutClient:]


AXCharacterSoundMap : NSObject
 @property  NSMutableDictionary *phDictionaries

  // instance methods
  -[AXCharacterSoundMap .cxx_destruct]
  -[AXCharacterSoundMap init]
  -[AXCharacterSoundMap phonemeStringForCharacter:forLanguage:andVoiceIdentifier:]
  -[AXCharacterSoundMap phoneticStringForCharacter:forLanguage:andVoiceIdentifier:]
  -[AXCharacterSoundMap _linguisticStringForCharacter:language:linguisticType:andVoiceIdentifier:]
  -[AXCharacterSoundMap phDictionaries]
  -[AXCharacterSoundMap setPhDictionaries:]


AXResourceLoader : NSObject
  // class methods
  +[AXResourceLoader loadImageWithIdentifier:orPath:principalClass:error:]
  +[AXResourceLoader loadResource:principalClass:error:]
  +[AXResourceLoader _path:bundleID:forRescource:]


_TtC22AccessibilityUtilities20_AXSafeSwiftValueBox : Swift._SwiftObject

(AXUtilsPrivate)
	// class methods
	+[(AXUtilsPrivate) _accessibilityPerformValidations:]

	// instance methods
	-[(AXUtilsPrivate) _accessibilityInterposesAsSystemApplication]
	-[(AXUtilsPrivate) _accessibilityInterposesAsOnboardingApp]
	-[(AXUtilsPrivate) _safeValidatedValueForKey:expectedClass:expectedTypeEncoding:]
	-[(AXUtilsPrivate) _safeValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:]
	-[(AXUtilsPrivate) safeIvarForKey:]
	-[(AXUtilsPrivate) safeBoolForKey:]
	-[(AXUtilsPrivate) safeIntForKey:]
	-[(AXUtilsPrivate) safeUnsignedIntForKey:]
	-[(AXUtilsPrivate) safeIntegerForKey:]
	-[(AXUtilsPrivate) safeUnsignedIntegerForKey:]
	-[(AXUtilsPrivate) safeFloatForKey:]
	-[(AXUtilsPrivate) safeDoubleForKey:]
	-[(AXUtilsPrivate) safeTimeIntervalForKey:]
	-[(AXUtilsPrivate) safeRangeForKey:]
	-[(AXUtilsPrivate) safeCGFloatForKey:]
	-[(AXUtilsPrivate) safeCGPointForKey:]
	-[(AXUtilsPrivate) safeCGSizeForKey:]
	-[(AXUtilsPrivate) safeCGRectForKey:]
	-[(AXUtilsPrivate) safeStringForKey:]
	-[(AXUtilsPrivate) safeArrayForKey:]
	-[(AXUtilsPrivate) safeSetForKey:]
	-[(AXUtilsPrivate) safeDictionaryForKey:]
	-[(AXUtilsPrivate) safeUIViewForKey:]
	-[(AXUtilsPrivate) safeValueForKey:]
	-[(AXUtilsPrivate) __axValueForKey:]
	-[(AXUtilsPrivate) safeValueForKeyPath:]
	-[(AXUtilsPrivate) safeIntegerForIvarKey:onClass:]
	-[(AXUtilsPrivate) _accessibilityPerformSafeValueKeyBlock:withKey:onClass:]
	-[(AXUtilsPrivate) handleFailoversForClassNamed:]
	-[(AXUtilsPrivate) _axDictionaryQueue]
	-[(AXUtilsPrivate) _accessibilityValueForKey:]
	-[(AXUtilsPrivate) _accessibilityBoolValueForKey:]
	-[(AXUtilsPrivate) _accessibilityIntegerValueForKey:]
	-[(AXUtilsPrivate) _accessibilityUnsignedIntegerValueForKey:]
	-[(AXUtilsPrivate) _accessibilitySetValue:forKey:storageMode:]
	-[(AXUtilsPrivate) _accessibilitySetRetainedValue:forKey:]
	-[(AXUtilsPrivate) _accessibilitySetBoolValue:forKey:]
	-[(AXUtilsPrivate) _accessibilitySetIntegerValue:forKey:]
	-[(AXUtilsPrivate) _accessibilitySetUnsignedIntegerValue:forKey:]
	-[(AXUtilsPrivate) _accessibilityRemoveValueForKey:]
	-[(AXUtilsPrivate) _accessibilitySetAssignedValue:forKey:]
	-[(AXUtilsPrivate) _accessibilityIsSpeakThisTemporarilyDisabled]
	-[(AXUtilsPrivate) _accessibilitySetSpeakThisTemporarilyDisabled:]
	-[(AXUtilsPrivate) axSuperTrampoline]
	-[(AXUtilsPrivate) axTrampolineForClass:]
	-[(AXUtilsPrivate) _axIsWrappedPointer]
	-[(AXUtilsPrivate) _axSetIsWrappedPointer:]
	-[(AXUtilsPrivate) _ax_appendPrettyDescriptionToString:indentationString:visitedCollections:]
	-[(AXUtilsPrivate) ax_prettyDescription]

AXSSKeyChord(Speaking)
	// class methods
	+[AXSSKeyChord(Speaking) keyChordWithEvent:]

	// instance methods
	-[AXSSKeyChord(Speaking) accessibilitySpeakableDisplayValue]
	-[AXSSKeyChord(Speaking) accessibilitySpeakableDisplayValueWithStyle:]
	-[AXSSKeyChord(Speaking) _accessibilitySpeakableDisplayValueWithStyle:isUSKeyboard:]
	-[AXSSKeyChord(Speaking) fkaSpeakableDisplayValue]
	-[AXSSKeyChord(Speaking) keyChordByUpdatingModifiersFromEvent:]

NSNumber(AXMIDIExtras)
	// instance methods
	-[NSNumber(AXMIDIExtras) MIDIObject]
	-[NSNumber(AXMIDIExtras) MIDIDevice]
	-[NSNumber(AXMIDIExtras) MIDIEntity]
	-[NSNumber(AXMIDIExtras) MIDIEndpoint]

NSProxy(AXSideStorage)
	// instance methods
	-[NSProxy(AXSideStorage) _axDictionaryQueue]
	-[NSProxy(AXSideStorage) _accessibilityValueForKey:]
	-[NSProxy(AXSideStorage) _accessibilityBoolValueForKey:]
	-[NSProxy(AXSideStorage) _accessibilityIntegerValueForKey:]
	-[NSProxy(AXSideStorage) _accessibilityUnsignedIntegerValueForKey:]
	-[NSProxy(AXSideStorage) _accessibilitySetValue:forKey:storageMode:]
	-[NSProxy(AXSideStorage) _accessibilitySetRetainedValue:forKey:]
	-[NSProxy(AXSideStorage) _accessibilitySetBoolValue:forKey:]
	-[NSProxy(AXSideStorage) _accessibilitySetIntegerValue:forKey:]
	-[NSProxy(AXSideStorage) _accessibilitySetUnsignedIntegerValue:forKey:]
	-[NSProxy(AXSideStorage) _accessibilityRemoveValueForKey:]
	-[NSProxy(AXSideStorage) _accessibilitySetAssignedValue:forKey:]

<DEREK BUG Categories!>(AXExtensions)
	// instance methods
	-[<DEREK BUG Categories!>(AXExtensions) axSafelyAddEntriesFromDictionary:]

NSKeyedUnarchiver(AXExtensions)
	// class methods
	+[NSKeyedUnarchiver(AXExtensions) secureUnarchiveData:withExpectedClass:otherAllowedClasses:]

(AXEventPathInfoRepresentationExtension)
	// class methods
	+[(AXEventPathInfoRepresentationExtension) axArrayWithPossiblyNilArrays:]
	+[(AXEventPathInfoRepresentationExtension) axArrayByIgnoringNilElementsWithCount:]

	// instance methods
	-[(AXEventPathInfoRepresentationExtension) firstPath]
	-[(AXEventPathInfoRepresentationExtension) axUniqueArrayWithPredicate:]
	-[(AXEventPathInfoRepresentationExtension) axIsEqualToOrderedArray:withPredicate:]
	-[(AXEventPathInfoRepresentationExtension) axMapObjectsUsingBlock:]
	-[(AXEventPathInfoRepresentationExtension) axFilterObjectsUsingBlock:]
	-[(AXEventPathInfoRepresentationExtension) axFirstObjectsUsingBlock:]
	-[(AXEventPathInfoRepresentationExtension) axSafeObjectAtIndex:]

NSValue(AXGeometryExtensions)
	// class methods
	+[NSValue(AXGeometryExtensions) axValueWithCGPoint:]
	+[NSValue(AXGeometryExtensions) axValueWithCGSize:]
	+[NSValue(AXGeometryExtensions) axValueWithCGRect:]

	// instance methods
	-[NSValue(AXGeometryExtensions) axCGPointValue]
	-[NSValue(AXGeometryExtensions) axCGSizeValue]
	-[NSValue(AXGeometryExtensions) axCGRectValue]

(AXUtilsExtensions)
	// instance methods
	-[(AXUtilsExtensions) axContainsString:options:]
	-[(AXUtilsExtensions) axContainsString:]
	-[(AXUtilsExtensions) axIsLanguageCode]
	-[(AXUtilsExtensions) axIsGenericLanguageCode]
	-[(AXUtilsExtensions) axIsRegionalLanguageCode]
	-[(AXUtilsExtensions) axLanguageCode]
	-[(AXUtilsExtensions) axRegionCode]
	-[(AXUtilsExtensions) axCapitalizeFirstLetter]

<DEREK BUG Categories!>(AXExtensions)
	// instance methods
	-[<DEREK BUG Categories!>(AXExtensions) axSafelyAddObject:]
	-[<DEREK BUG Categories!>(AXExtensions) axSafelyAddObjectsFromArray:]

AVSpeechSynthesisVoice(AXAlternativeSpeech)
	// instance methods
	-[AVSpeechSynthesisVoice(AXAlternativeSpeech) debugDescription]

<DEREK BUG Categories!>(AXExtensions)
	// instance methods
	-[<DEREK BUG Categories!>(AXExtensions) axSafelyAddObject:]
	-[<DEREK BUG Categories!>(AXExtensions) axSafelyAddObjectsFromArray:]

01 00 1900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFConnection 
01 00 1900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFLocalization 
01 00 1900 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFPreferences 
01 00 2900 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 0c00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCCaptionsClient 
01 00 2900 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisVoice 
01 00 2900 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesizer 
01 00 2900 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechUtterance 
01 00 0100 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXAccessQueue 
01 00 0100 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXAccessQueueTimer 
01 00 1600 /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime: AXAttributedString 
01 00 0100 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXBaseSettings 
01 00 1000 /System/Library/Frameworks/Accessibility.framework/Accessibility: AXCustomContent 
01 00 0100 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXDispatchTimer 
01 00 1600 /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime: AXElement 
01 00 1b00 /usr/lib/libAXSpeechManager.dylib: AXEmojiUtilities 
01 00 0e00 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSKeyChord 
01 00 0e00 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSKeyboardCommand 
01 00 0e00 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSKeyboardCommandCategory 
01 00 0e00 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSKeyboardCommandMap 
01 00 0e00 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSWordDescriptionManager 
01 00 1b00 /usr/lib/libAXSpeechManager.dylib: AXSpeechManager 
01 00 0d00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSSimpleAssertion 
01 00 0900 /System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager: BluetoothManager 
01 00 2000 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0300 /System/Library/PrivateFrameworks/IdleTimerServices.framework/IdleTimerServices: ITIdleTimerState 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1a00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 1a00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 1a00 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0700 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0700 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0800 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMachPort 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurementFormatter 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 2a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1500 /System/Library/PrivateFrameworks/TextInput.framework/TextInput: TIAccessibilityClient 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSAXResourceManager 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSAXResourceMigrationUtilities 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSAudioSessionChannel 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSLocaleUtilities 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSiriAssetManager 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSpeechSynthesizer 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSubstitution 
01 00 1800 /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech: TTSSynthesisProviderVoiceManager 
01 00 2e00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
