|| __DATA.__data _kACDSyncDataTypeBookmarks
|| __DATA.__data _kACDSyncDataTypeCalendars
|| __DATA.__data _kACDSyncDataTypeContacts
|| __DATA.__data _kACDSyncDataTypeMailAccounts
|| __DATA.__data _kACDSyncDataTypeNotes
|| __DATA.__objc_data _OBJC_CLASS_$_ACDClientAuthorization
|| __DATA.__objc_data _OBJC_CLASS_$_ACDDataclassOwnersManagerInterface
|| __DATA.__objc_data _OBJC_CLASS_$_ACDOAuthSigner
|| __DATA.__objc_data _OBJC_CLASS_$_ACDTestManager
|| __DATA.__objc_data _OBJC_CLASS_$_ACDTransientDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_ACDUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDClientAuthorization
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDDataclassOwnersManagerInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDOAuthSigner
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDTestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDTransientDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_ACDUserNotification
|| __DATA_CONST.__const _ACAccountSyncClientID
|| __DATA_CONST.__const _ACAccountSyncDataclassKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncDevices
|| __DATA_CONST.__const _ACAccountSyncHostnameKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncMailClassKey
|| __DATA_CONST.__const _ACAccountSyncMailProtocolKey
|| __DATA_CONST.__const _ACAccountSyncModificationDate
|| __DATA_CONST.__const _ACAccountSyncQualifiedUsername
|| __DATA_CONST.__const _ACDPersistentAccountTypeCredentialProtectionPolicy
|| __DATA_CONST.__const _ACDPersistentAccountTypeCredentialType
|| __DATA_CONST.__const _ACDPersistentAccountTypeDisplayName
|| __DATA_CONST.__const _ACDPersistentAccountTypeSupportedDataclasses
|| __DATA_CONST.__const _ACDPersistentAccountTypeSupportsAuthentication
|| __DATA_CONST.__const _ACDPersistentAccountTypeSupportsMultipleAccounts
|| __DATA_CONST.__const _ACDPersistentAccountTypeSyncableDataclasses
|| __DATA_CONST.__const _ACDPersistentAccountTypeVisibility
|| __DATA_CONST.__const _ACDisableAccountSync
|| __DATA_CONST.__const _ACErrorAccountSyncDomain
|| __DATA_CONST.__const _ACOneTimeMigrateAccountSync
|| __DATA_CONST.__const _ACOneTimeSMTPFixAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccessPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAuthenticationPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClientAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClientProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDatabaseBackupActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDatabasePersistentConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDataclassOwnersManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDEventLedger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainCleanupActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainLock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDLazyArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDQueueDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDTCCUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACRemoteDeviceProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccessPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAuthenticationPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClientAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClientProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDatabaseBackupActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDatabasePersistentConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDataclassOwnersManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDEventLedger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainCleanupActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainLock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDLazyArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDQueueDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDTCCUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACRemoteDeviceProxy
|| __TEXT.__text _ACDAccountSyncAccountIsSyncable
|| __TEXT.__text _ACDAccountSyncDevices
|| __TEXT.__text _ACDAccountSyncEnabled
|| __TEXT.__text _ACDAccountSyncMarkAccountCreated
|| __TEXT.__text _ACDAccountSyncMarkAccountDeleted
|| __TEXT.__text _ACDAccountSyncRemoveTombstones
|| __TEXT.__text _ACDLogAccessRequest
|| __TEXT.__text _ACDStringFromChangeType
|| __TEXT.__text _CopyAccountNamesEnabledForDataType
|| __TEXT.__text _CopyExternalSourcesEnabledForDataType
|| __TEXT.__text _GetTetheredSyncingDisabledForDataType
|| __TEXT.__text _SetAccountNameEnabledForDataType
|| __TEXT.__text _SetExternalSourceEnabledForDataType
|| __TEXT.__text _SetTetheredSyncingDisabledForDatatype
|| __TEXT.__text __ACDConnectionLogSystem
|| __TEXT.__text __ACDLogSystem
|| __TEXT.__text _syncDataTypeForDataclass
|| __TEXT.__text _tetheredSyncSourceTypeForDataType
__ Accounts: _ACAccountDataclassBackup
__ Accounts: _ACAccountDataclassBookmarks
__ Accounts: _ACAccountDataclassCKDatabaseService
__ Accounts: _ACAccountDataclassCKDeviceService
__ Accounts: _ACAccountDataclassCKShareService
__ Accounts: _ACAccountDataclassCalendars
__ Accounts: _ACAccountDataclassContacts
__ Accounts: _ACAccountDataclassContactsSearch
__ Accounts: _ACAccountDataclassDeviceLocator
__ Accounts: _ACAccountDataclassFitnessPlus
__ Accounts: _ACAccountDataclassFreeform
__ Accounts: _ACAccountDataclassKeyValue
__ Accounts: _ACAccountDataclassKeychainSync
__ Accounts: _ACAccountDataclassMail
__ Accounts: _ACAccountDataclassMediaStream
__ Accounts: _ACAccountDataclassNews
__ Accounts: _ACAccountDataclassNotes
__ Accounts: _ACAccountDataclassProtectedCloudStorage
__ Accounts: _ACAccountDataclassReminders
__ Accounts: _ACAccountDataclassServerDocuments
__ Accounts: _ACAccountDataclassSettings
__ Accounts: _ACAccountDataclassSharedStreams
__ Accounts: _ACAccountDataclassShoebox
__ Accounts: _ACAccountDataclassUbiquity
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountPropertyConfigurationProfileIdentifier
__ Accounts: _ACAccountPropertyShouldNeverUseSyncableCredential
__ Accounts: _ACAccountTypeIdentifier126
__ Accounts: _ACAccountTypeIdentifier163
__ Accounts: _ACAccountTypeIdentifierAIMDeprecated
__ Accounts: _ACAccountTypeIdentifierAol
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierAppleIDAuthentication
__ Accounts: _ACAccountTypeIdentifierAppleIDDeprecated
__ Accounts: _ACAccountTypeIdentifierBookmarkDAV
__ Accounts: _ACAccountTypeIdentifierCalDAV
__ Accounts: _ACAccountTypeIdentifierCalDAVLegacy
__ Accounts: _ACAccountTypeIdentifierCardDAV
__ Accounts: _ACAccountTypeIdentifierCardDAVLegacy
__ Accounts: _ACAccountTypeIdentifierCloudKit
__ Accounts: _ACAccountTypeIdentifierDeviceLocator
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierFaceTime
__ Accounts: _ACAccountTypeIdentifierFacebookDeprecated
__ Accounts: _ACAccountTypeIdentifierFacebookLegacy
__ Accounts: _ACAccountTypeIdentifierFindMyFriends
__ Accounts: _ACAccountTypeIdentifierFlickr
__ Accounts: _ACAccountTypeIdentifierGameCenter
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierHolidayCalendar
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierIMAP
__ Accounts: _ACAccountTypeIdentifierIMAPMail
__ Accounts: _ACAccountTypeIdentifierIMAPNotes
__ Accounts: _ACAccountTypeIdentifierIdentityServices
__ Accounts: _ACAccountTypeIdentifierJabber
__ Accounts: _ACAccountTypeIdentifierKerberosSSODeprecated
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifierLDAP
__ Accounts: _ACAccountTypeIdentifierLinkedInDeprecated
__ Accounts: _ACAccountTypeIdentifierLinkedInLegacy
__ Accounts: _ACAccountTypeIdentifierMSO
__ Accounts: _ACAccountTypeIdentifierMadrid
__ Accounts: _ACAccountTypeIdentifierOSXServerDeprecated
__ Accounts: _ACAccountTypeIdentifierOnMyDevice
__ Accounts: _ACAccountTypeIdentifierPOP
__ Accounts: _ACAccountTypeIdentifierPublishedCalendar
__ Accounts: _ACAccountTypeIdentifierQQ
__ Accounts: _ACAccountTypeIdentifierRemoteManagement
__ Accounts: _ACAccountTypeIdentifierSMTP
__ Accounts: _ACAccountTypeIdentifierSinaWeiboDeprecated
__ Accounts: _ACAccountTypeIdentifierSingleSignOn
__ Accounts: _ACAccountTypeIdentifierSubscribedCalendar
__ Accounts: _ACAccountTypeIdentifierTencentWeiboDeprecated
__ Accounts: _ACAccountTypeIdentifierTudou
__ Accounts: _ACAccountTypeIdentifierTwitterDeprecated
__ Accounts: _ACAccountTypeIdentifierVimeo
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _ACAccountTypeIdentifierYahooIM
__ Accounts: _ACAccountTypeIdentifierYelp
__ Accounts: _ACAccountTypeIdentifierYouku
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACAccountTypeIdentifieriTunesStoreSandbox
__ Accounts: _ACChangeTypeAdded
__ Accounts: _ACChangeTypeRemoved
__ Accounts: _ACCredentialTypeAppleIDAuthentication
__ Accounts: _ACCredentialTypeOAuth
__ Accounts: _ACCredentialTypeOAuth2
__ Accounts: _ACCredentialTypePassword
__ Accounts: _ACCredentialTypeToken
__ Accounts: _ACCredentialTypeYahooXYMPKI
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _ACDGetAdamOrDisplayIDForPID
__ Accounts: _ACDGetProcNameForPID
__ Accounts: _ACErrorDomain
__ Accounts: _ACErrorKeychainDomain
__ Accounts: _ACFacebookAppIdKeyDeprecated
__ Accounts: _ACFacebookAudienceKeyDeprecated
__ Accounts: _ACFacebookPermissionsKeyDeprecated
__ Accounts: _ACIsInternal
__ Accounts: _ACKeepPasswordsAround
__ Accounts: _ACLiverpoolContainerIdKey
__ Accounts: _ACOAuthTokenNoSyncKey
__ Accounts: _ACOAuthTokenNoSyncSeparator
__ Accounts: _ACPasswordKey
__ Accounts: _ACPropertyKeyAccountProperties
__ Accounts: _ACPropertyKeyAccountType
__ Accounts: _ACPropertyKeyActive
__ Accounts: _ACPropertyKeyDataclassProperties
__ Accounts: _ACPropertyKeyDate
__ Accounts: _ACPropertyKeyEnabledDataclasses
__ Accounts: _ACPropertyKeyParent
__ Accounts: _ACPropertyKeyProvisionedDataclasses
__ Accounts: _ACPropertyKeyVisible
__ Accounts: _ACPropertyKeyWarmingUp
__ Accounts: _ACRawPasswordKey
__ Accounts: _ACRemoteDeviceCommandAddAccount
__ Accounts: _ACRemoteDeviceCommandDeleteAccount
__ Accounts: _ACRemoteDeviceCommandDeleteAllAccounts
__ Accounts: _ACRemoteDeviceCommandFetchAccounts
__ Accounts: _ACRemoteDeviceCommandInvalidateFetchedAccountsCache
__ Accounts: _ACRemoteDeviceCommandShowCredentialPrompt
__ Accounts: _ACRemoteDeviceCommandUpdateAccount
__ Accounts: _ACRemoteDeviceCommandUpdateAccountCredential
__ Accounts: _ACRemoteDeviceOptionAccountQueryIgnoreCache
__ Accounts: _ACRemoteDeviceOptionAskForReply
__ Accounts: _ACRemoteDeviceOptionPreloadedPropertiesArray
__ Accounts: _ACRemoteDeviceOptionTargetDeviceBTUUID
__ Accounts: _ACShouldSuppressPromptsKey
__ Accounts: _ACTencentWeiboAppIdKeyDeprecated
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountMigrationState
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _OBJC_CLASS_$_ACAccountType
__ Accounts: _OBJC_CLASS_$_ACCredentialItem
__ Accounts: _OBJC_CLASS_$_ACDManagedAccountType
__ Accounts: _OBJC_CLASS_$_ACDataclassAction
__ Accounts: _OBJC_CLASS_$_ACManagedDefaults
__ Accounts: _OBJC_CLASS_$_ACPersonaManager
__ Accounts: _OBJC_CLASS_$_ACPluginLoader
__ Accounts: _OBJC_CLASS_$_ACRateLimiter
__ Accounts: _OBJC_CLASS_$_ACRemoteAccountStoreInterface
__ Accounts: _OBJC_CLASS_$_ACRemoteAccountStoreSession
__ Accounts: _OBJC_CLASS_$_ACSystemConfigManager
__ Accounts: _OBJC_CLASS_$_ACTimedExpirer
__ Accounts: _OBJC_CLASS_$_ACTrackedSet
__ Accounts: _OBJC_CLASS_$_ACZeroingString
__ Accounts: _OBJC_METACLASS_$_ACAccountStore
__ Accounts: _OBJC_METACLASS_$_ACPluginLoader
__ Accounts: _OBJC_METACLASS_$_ACRemoteAccountStoreSession
__ Accounts: __ACLogSystem
__ Accounts: __ACSignpostCreate
__ Accounts: __ACSignpostGetNanoseconds
__ Accounts: _kACAccountIdentifier
__ Accounts: _kACAllowedSSLCertificatesKey
__ Accounts: _kACDAllAccountsAccessEntitlement
__ Accounts: _kACDAppleAccountsFullAccessEntitlement
__ Accounts: _kACDAppleIDAuthenticationDefaultAccessEntitlement
__ Accounts: _kACDAppleMediaServicesFullAccessEntitlement
__ Accounts: _kACDApplicationIDFromPIDEntitlement
__ Accounts: _kACDAuthenticationDialogHostEntitlement
__ Accounts: _kACDBundleIDSpoofingEntitlement
__ Accounts: _kACDConnectBeforeAccountMigrationDidFinishEntitlement
__ Accounts: _kACDIDMSAccountFullAccessEntitlement
__ Accounts: _kACDInactiveAcccountsAccessEntitlement
__ Accounts: _kACDPublishedCalendarFullAccessEntitlement
__ Accounts: _kACDRemoteManagementFullAccessEntitlement
__ Accounts: _kACDShouldNotCoalesceRequests
__ Accounts: _kACDShouldNotUseParentAccount
__ Accounts: _kACDShutdownAccountsDEntitlement
__ Accounts: _kACDTencentWeiboAccountsDefaultAccessEntitlement
__ Accounts: _kACDYelpAccountsDefaultAccessEntitlement
__ Accounts: _kACDiTunesAccountAccessEntitlement
__ Accounts: _kACDiscoverPropertiesShouldSaveKey
__ Accounts: _kACRenewCredentialsReasonStringKey
__ Accounts: _kACRenewCredentialsShouldAvoidUIKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kACRenewCredentialsShouldPromptBeforeRenewKey
__ Accounts: _kACVerifyCredentialsShouldSaveKey
__ Accounts: _kAccountAuthenticationTypeParent
__ Accounts: _kAccountDataclassBackToMyMacDeprecated
__ Accounts: _kAccountDataclassBackup
__ Accounts: _kAccountDataclassBookmarks
__ Accounts: _kAccountDataclassCKDatabaseService
__ Accounts: _kAccountDataclassCKDeviceService
__ Accounts: _kAccountDataclassCKShareService
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassCloudDesktop
__ Accounts: _kAccountDataclassContacts
__ Accounts: _kAccountDataclassContactsSearch
__ Accounts: _kAccountDataclassContent
__ Accounts: _kAccountDataclassCoreRoutine
__ Accounts: _kAccountDataclassDeviceLocator
__ Accounts: _kAccountDataclassHealth
__ Accounts: _kAccountDataclassHome
__ Accounts: _kAccountDataclassKeyValue
__ Accounts: _kAccountDataclassKeychainSync
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassMediaStream
__ Accounts: _kAccountDataclassMessages
__ Accounts: _kAccountDataclassNetworkVPN
__ Accounts: _kAccountDataclassNews
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassNotifications
__ Accounts: _kAccountDataclassPhotos
__ Accounts: _kAccountDataclassReminders
__ Accounts: _kAccountDataclassServerDocumentsDeprecated
__ Accounts: _kAccountDataclassShareMenu
__ Accounts: _kAccountDataclassSharedStreams
__ Accounts: _kAccountDataclassShoebox
__ Accounts: _kAccountDataclassSiri
__ Accounts: _kAccountDataclassSmartDefaults
__ Accounts: _kAccountDataclassStocks
__ Accounts: _kAccountDataclassUbiquity
__ Accounts: _serializeSecCertificates
__ Accounts: _unserializeSecCertificates
__ CoreData: _NSDeletedObjectsKey
__ CoreData: _NSInMemoryStoreType
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSInsertedObjectsKey
__ CoreData: _NSManagedObjectContextDidSaveNotification
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSPersistentStoreFileProtectionKey
__ CoreData: _NSSQLiteErrorDomain
__ CoreData: _NSSQLiteStoreType
__ CoreData: _OBJC_CLASS_$_NSBatchDeleteRequest
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSMergePolicy
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCompare
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSArray
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ DataMigration: _DMPerformMigrationReturningAfterPlugin
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSLocalNotificationCenterType
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLPeerTrustErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ GSS: _GSSRuleAddMatch
__ GSS: _GSSRuleGetMatch
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSSendMessageOptionBypassDuetKey
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _OBJC_CLASS_$_IDSService
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ OAuth: _OBJC_CLASS_$_OACredential
__ OAuth: _OBJC_CLASS_$_OAURLRequestSigner
__ PlugInKit: _OBJC_CLASS_$_PKManager
__ Security: _SecAccessControlCreateWithFlags
__ Security: _SecAccessControlGetConstraints
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTrustGetTypeID
__ Security: _SecTrustSerialize
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccessibleAlwaysPrivate
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrAccount
__ Security: _kSecAttrGeneric
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecAttrTombstone
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecUseAuthenticationUI
__ Security: _kSecUseAuthenticationUISkip
__ Security: _kSecUseCallerName
__ Security: _kSecUseDataProtectionKeychain
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ TCC: _TCCAccessCopyInformation
__ TCC: _TCCAccessReset
__ TCC: _TCCAccessResetForBundle
__ TCC: _TCCAccessSetForBundle
__ TCC: _kTCCInfoBundle
__ TCC: _kTCCInfoGranted
__ TCC: _kTCCServiceFacebook
__ TCC: _kTCCServiceSinaWeibo
__ TCC: _kTCCServiceTencentWeibo
__ TCC: _kTCCServiceTwitter
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ liblockdown.dylib: _lockdown_connect
__ liblockdown.dylib: _lockdown_copy_value
__ liblockdown.dylib: _lockdown_disconnect
__ liblockdown.dylib: _lockdown_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: __sqlite3_integrity_check
ACRemoteCommandHandler : NSObject
  // instance methods
  -[ACRemoteCommandHandler .cxx_destruct]
  -[ACRemoteCommandHandler init]
  -[ACRemoteCommandHandler _saveAccount:completion:]
  -[ACRemoteCommandHandler handleCommand:forAccount:options:completion:]
  -[ACRemoteCommandHandler _removeAllAccountsWithCompletion:]
  -[ACRemoteCommandHandler _addAccount:withOptions:completion:]
  -[ACRemoteCommandHandler _updateAccount:withCompletion:]
  -[ACRemoteCommandHandler _authenticateAccount:withOptions:completion:]
  -[ACRemoteCommandHandler _promptUserForAccountCredential:withOptions:completion:]
  -[ACRemoteCommandHandler _deleteAccount:withCompletion:]
  -[ACRemoteCommandHandler _fetchAccountsWithCompletion:options:]
  -[ACRemoteCommandHandler _invalidateFetchedAccountsCacheWithCompletion:]


ACDKeychainManager : NSObject
  // class methods
  +[ACDKeychainManager _shouldSyncCredentialForAccount:]
  +[ACDKeychainManager createAccountSyncMigratedItemWithError:]
  +[ACDKeychainManager removeCredentialForAccount:error:]
  +[ACDKeychainManager credentialForAccount:clientID:error:]
  +[ACDKeychainManager accountSynciOSVersion]
  +[ACDKeychainManager removeDataclassAccountSyncItemForAccount:]
  +[ACDKeychainManager _removeItemForService:username:accessGroup:options:error:]
  +[ACDKeychainManager removeCredentialForAccount:clientID:]
  +[ACDKeychainManager setCredentialForAccount:clientID:]
  +[ACDKeychainManager keychainDeletedContactAccounts]
  +[ACDKeychainManager _removeCredentialsForAccount:clientID:options:error:]
  +[ACDKeychainManager _migrateCredential:forAccount:clientID:]
  +[ACDKeychainManager removeAccountSyncItemForAccount:clientID:properties:error:]
  +[ACDKeychainManager setCredentialForAccount:]
  +[ACDKeychainManager _fallbackToUnsyncedOAuthTokens:]
  +[ACDKeychainManager _removeCredentialItemWithKey:forAccountWithID:username:accountTypeID:clientID:options:error:]
  +[ACDKeychainManager keychainDeletedHostnameAccounts]
  +[ACDKeychainManager removeCredentialForAccount:key:error:]
  +[ACDKeychainManager createDataclassAccountSyncItemForAccount:withDataclassActions:]
  +[ACDKeychainManager keychainDeletedAccounts]
  +[ACDKeychainManager keychainAccounts]
  +[ACDKeychainManager setCredentialForAccount:error:]
  +[ACDKeychainManager removeTombstonesForAccount:clientID:error:]
  +[ACDKeychainManager initialize]
  +[ACDKeychainManager _itemForServiceName:username:accessGroup:options:error:]
  +[ACDKeychainManager componentsFromKeychainServiceName:handler:]
  +[ACDKeychainManager credentialForManagedAccountObject:clientID:error:]
  +[ACDKeychainManager _credentialForAccountWithID:accountTypeID:credentialType:clientID:allowAdditionalAccountTypeSegment:options:error:]
  +[ACDKeychainManager setAccountSynciOSVersion:]
  +[ACDKeychainManager _fetchOptionsForAccount:]
  +[ACDKeychainManager _accountTypeIdentifierFromComponents:handler:]
  +[ACDKeychainManager server]
  +[ACDKeychainManager keychainServiceNameForClientID:accountTypeIdentifier:additionalAccountTypeSegment:key:]
  +[ACDKeychainManager _createNoSyncOAuthTokens:account:clientID:]
  +[ACDKeychainManager _setNonPersistentCredentialTimerForAccount:]
  +[ACDKeychainManager accountSyncMigrated]
  +[ACDKeychainManager notifiyCredentialChangedForAccount:]
  +[ACDKeychainManager _saveCredential:forAccount:clientID:error:]
  +[ACDKeychainManager _keychainLock_addItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:error:]
  +[ACDKeychainManager credentialForAccount:clientID:]
  +[ACDKeychainManager credentialForManagedAccountObject:clientID:]
  +[ACDKeychainManager removeCredentialForAccount:clientID:error:]
  +[ACDKeychainManager _keychainLock_updateItem:existingPassword:forServiceName:username:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager setCredentialForNewAccount:clientID:error:]
  +[ACDKeychainManager _setItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:options:error:]
  +[ACDKeychainManager removeTombstoneForService:keychainAccountIdentifier:]
  +[ACDKeychainManager createAccountSyncItemForAccount:clientID:properties:error:]
  +[ACDKeychainManager credentialForManagedAccountObject:]
  +[ACDKeychainManager setServer:]
  +[ACDKeychainManager keychainHostnameAccounts]
  +[ACDKeychainManager _keychainLock_removeItemForService:username:accessGroup:options:error:]
  +[ACDKeychainManager setCredentialForAccount:clientID:error:]
  +[ACDKeychainManager _setCredentialForAccount:clientID:handleCredentialItemRemovals:error:]
  +[ACDKeychainManager removeCredentialForAccount:]


ACDKeychainCache : NSObject
 @property  unsigned int cacheValidityDuration
 @property  NSDictionary *cachesByUsername
 @property  NSMutableDictionary *expirersByUsername

  // instance methods
  -[ACDKeychainCache clearCacheForSyncState:]
  -[ACDKeychainCache setCacheValidityDuration:]
  -[ACDKeychainCache dataForService:username:syncState:]
  -[ACDKeychainCache .cxx_destruct]
  -[ACDKeychainCache expirersByUsername]
  -[ACDKeychainCache initWithValidityDuration:]
  -[ACDKeychainCache cachesByUsername]
  -[ACDKeychainCache clearDataForService:username:syncState:]
  -[ACDKeychainCache setExpirersByUsername:]
  -[ACDKeychainCache cacheValidityDuration]
  -[ACDKeychainCache cacheData:forService:username:syncState:]
  -[ACDKeychainCache setCachesByUsername:]


ACDKeychainItemCache : NSObject
 @property  NSMutableDictionary *nonSyncableItems
 @property  NSMutableDictionary *syncableItems

  // instance methods
  -[ACDKeychainItemCache nonSyncableItems]
  -[ACDKeychainItemCache .cxx_destruct]
  -[ACDKeychainItemCache syncableItems]


ACDUserNotification : NSObject
  // class methods
  +[ACDUserNotification showUserNotificationWithTitle:message:cancelButtonTitle:otherButtonTitle:withCompletionBlock:]


ACDQueueDictionary : NSObject
  // instance methods
  -[ACDQueueDictionary .cxx_destruct]
  -[ACDQueueDictionary isEmpty]
  -[ACDQueueDictionary init]
  -[ACDQueueDictionary isQueueEmptyForKey:]
  -[ACDQueueDictionary addObject:toQueueForKey:]
  -[ACDQueueDictionary dequeueFirstObjectInQueueForKey:]
  -[ACDQueueDictionary firstObjectInQueueForKey:]
  -[ACDQueueDictionary dequeueAllObjectsInQueueForKey:]
  -[ACDQueueDictionary keyForRandomQueue]


ACDDatabaseInitializer : NSObject
  // class methods
  +[ACDDatabaseInitializer new]

  // instance methods
  -[ACDDatabaseInitializer .cxx_destruct]
  -[ACDDatabaseInitializer initWithDatabaseConnection:]
  -[ACDDatabaseInitializer _accountTypeWithIdentifier:]
  -[ACDDatabaseInitializer init]
  -[ACDDatabaseInitializer _accounts]
  -[ACDDatabaseInitializer _dataclasses]
  -[ACDDatabaseInitializer _accessKeys]
  -[ACDDatabaseInitializer _accountTypes]
  -[ACDDatabaseInitializer updateDefaultContentIfNecessary:]
  -[ACDDatabaseInitializer _resultsForEntityNamed:]
  -[ACDDatabaseInitializer _dataclassWithName:]
  -[ACDDatabaseInitializer _accessKeyWithName:]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:credentialProtectionPolicy:]
  -[ACDDatabaseInitializer _addCredentialType:toAccountType:supportsAuthentication:]
  -[ACDDatabaseInitializer _addDataclassWithName:]
  -[ACDDatabaseInitializer _addAccessKeyWithName:]
  -[ACDDatabaseInitializer _addTwitterAccountType]
  -[ACDDatabaseInitializer _addAppleIDAccountType]
  -[ACDDatabaseInitializer _addFaceTimeAccountType]
  -[ACDDatabaseInitializer _addMadridAccountType]
  -[ACDDatabaseInitializer _addGameCenterAccountType]
  -[ACDDatabaseInitializer _addiTunesStoreAccountType]
  -[ACDDatabaseInitializer _addFacebookAccountType]
  -[ACDDatabaseInitializer _addWeiboAccountType]
  -[ACDDatabaseInitializer _updateWeiboAccountTypeIfNecessary]
  -[ACDDatabaseInitializer _addCalDAVAccountType]
  -[ACDDatabaseInitializer _addCardDAVAccountType]
  -[ACDDatabaseInitializer _addFlickrAccountType]
  -[ACDDatabaseInitializer _addVimeoAccountType]
  -[ACDDatabaseInitializer _addLinkedInAccountType]
  -[ACDDatabaseInitializer _addTudouAccountType]
  -[ACDDatabaseInitializer _addYoukuAccountType]
  -[ACDDatabaseInitializer _addYelpAccountType]
  -[ACDDatabaseInitializer _addAppleAccountType]
  -[ACDDatabaseInitializer _addLiverpoolAccountType]
  -[ACDDatabaseInitializer _addTencentWeiboAccountType]
  -[ACDDatabaseInitializer _upgradeLinkedInAccountType]
  -[ACDDatabaseInitializer _addContactsCalendarsDataclassesToFB]
  -[ACDDatabaseInitializer _addSupportsAuthenticationAttributeToAccountTypes]
  -[ACDDatabaseInitializer _addSupportsAuthenticationAttributeToAccounts]
  -[ACDDatabaseInitializer _addMissingAccountTypes]
  -[ACDDatabaseInitializer _addSyncableDataclassesToCardAndCalDAV]
  -[ACDDatabaseInitializer _addSupportsMultipleAccountsAttributeToAccountTypes]
  -[ACDDatabaseInitializer _addFacebookAccessKeys]
  -[ACDDatabaseInitializer _addLiverpoolAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToFacebookAccountType]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToLiverpoolAccountType]
  -[ACDDatabaseInitializer _removeFacebookPermissionGroupAccessKey]
  -[ACDDatabaseInitializer _removeFacebookAppVersionAccessKey]
  -[ACDDatabaseInitializer _addFacebookAudienceAccessKey]
  -[ACDDatabaseInitializer _addFacebookAudienceAccessKeyToFacebookAccountType]
  -[ACDDatabaseInitializer _addSMTPAccountType]
  -[ACDDatabaseInitializer _addGmailAccountType]
  -[ACDDatabaseInitializer _addYahooAccountType]
  -[ACDDatabaseInitializer _addRemindersDataclassToCalDAVAccountType]
  -[ACDDatabaseInitializer _addLinkedInAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToLinkedInAccountType]
  -[ACDDatabaseInitializer _limitFlickrToOneAccount]
  -[ACDDatabaseInitializer _limitVimeoToOneAccount]
  -[ACDDatabaseInitializer _updateFlickrCredentialTypeToOAuth]
  -[ACDDatabaseInitializer _updateVimeoCredentialTypeToOAuth]
  -[ACDDatabaseInitializer _addSubscribedCalendarAccountType]
  -[ACDDatabaseInitializer _addBookmarkDAVAccountType]
  -[ACDDatabaseInitializer _addExchangeAccountType]
  -[ACDDatabaseInitializer _addIMAPNotesAccountType]
  -[ACDDatabaseInitializer _addLDAPAccountType]
  -[ACDDatabaseInitializer _addHotmailAccountType]
  -[ACDDatabaseInitializer _ensureAccountTypeWithIdentifier:supportsDataclasses:syncsDataclasses:]
  -[ACDDatabaseInitializer _ensureMajorDataclassesExist]
  -[ACDDatabaseInitializer _ensureProperAccountTypeDataclasses]
  -[ACDDatabaseInitializer _addPasswordCredentialTypeToSMTPAccountType]
  -[ACDDatabaseInitializer _addPasswordCredentialTypeToGmailAccountType]
  -[ACDDatabaseInitializer _addTokenCredentialTypeToYahooAccountType]
  -[ACDDatabaseInitializer _modernIMAPSupportedDataclasses]
  -[ACDDatabaseInitializer _modernIMAPSyncableDataclasses]
  -[ACDDatabaseInitializer _addIMAPAccountType]
  -[ACDDatabaseInitializer _modernPOPSupportedAndSyncableDataclasses]
  -[ACDDatabaseInitializer _addPOPAccountType]
  -[ACDDatabaseInitializer _modernIMAPMailSupportedAndSyncableDataclasses]
  -[ACDDatabaseInitializer _addIMAPMailAccountType]
  -[ACDDatabaseInitializer _addIdentityServicesAccountType]
  -[ACDDatabaseInitializer _limitLinkedInToOneAccount]
  -[ACDDatabaseInitializer _updateTencentWeiboCredentialTypeToOAuth2]
  -[ACDDatabaseInitializer _modernDeviceLocatiorSupportedDataclasses]
  -[ACDDatabaseInitializer _addFindMyiPhoneAccountType]
  -[ACDDatabaseInitializer _addTencentWeiboAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToTencentWeiboAccountType]
  -[ACDDatabaseInitializer _updateIdentityServicesAccountTypeToSupportAuthenticationAndMultipleAccounts]
  -[ACDDatabaseInitializer _updateIdentityServicesAccountDescription]
  -[ACDDatabaseInitializer _updateOSXServerAccountDescription]
  -[ACDDatabaseInitializer _updateMacOSServerAccountDescription]
  -[ACDDatabaseInitializer _makeTencentWeiboSingleton]
  -[ACDDatabaseInitializer _modernHolidayCalendarSupportedAndSyncableDataclasses]
  -[ACDDatabaseInitializer _addHolidayCalendarAccountType]
  -[ACDDatabaseInitializer _addFMFAccountType]
  -[ACDDatabaseInitializer _addAppleIDAuthenticationAccountType]
  -[ACDDatabaseInitializer _setOwningBundleIDForNativeAccountTypes]
  -[ACDDatabaseInitializer _createLiverpoolDataclasses]
  -[ACDDatabaseInitializer _addCloudKitAccountType]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToCloudKitAccountType]
  -[ACDDatabaseInitializer _removeLiverpoolTypes]
  -[ACDDatabaseInitializer _addCloudKitDataclasses]
  -[ACDDatabaseInitializer _setCloudKitCredentialType]
  -[ACDDatabaseInitializer _add126AccountType]
  -[ACDDatabaseInitializer _add163AccountType]
  -[ACDDatabaseInitializer _addAOLAccountType]
  -[ACDDatabaseInitializer _addQQAccountType]
  -[ACDDatabaseInitializer _addJabberAccountType]
  -[ACDDatabaseInitializer _addYahooIMAccountType]
  -[ACDDatabaseInitializer _addAIMAccountType]
  -[ACDDatabaseInitializer _addOSXServerAccountType]
  -[ACDDatabaseInitializer _addAndConfigureAllOSXAccountTypes]
  -[ACDDatabaseInitializer _switchGoogleToOAuthAuthentication]
  -[ACDDatabaseInitializer _switchHotmailToOAuthAuthentication]
  -[ACDDatabaseInitializer _switchYahooToPasswordAuthentication]
  -[ACDDatabaseInitializer _addDocumentsAndVPNDataclass]
  -[ACDDatabaseInitializer _addIDMSAccountType]
  -[ACDDatabaseInitializer _addMSOAccountType]
  -[ACDDatabaseInitializer _addSingleSignOnAccountType]
  -[ACDDatabaseInitializer _updateAOLAndAddNotificationsDataclass]
  -[ACDDatabaseInitializer _modernOnMyDeviceSupportedDataclasses]
  -[ACDDatabaseInitializer _addOnMyDeviceAccountType]
  -[ACDDatabaseInitializer _switchYahooToOAuthAuthentication]
  -[ACDDatabaseInitializer _configureSMTPAccountType]
  -[ACDDatabaseInitializer _allowMultipleAppleIDAuthenticationAccounts]
  -[ACDDatabaseInitializer _makeTudouYoukuSingletons]
  -[ACDDatabaseInitializer _supportiCloudNewsDataclass]
  -[ACDDatabaseInitializer _ensurePresenceOfNewsDataclass]
  -[ACDDatabaseInitializer _supportiCloudKeychainSyncDataclass]
  -[ACDDatabaseInitializer _setSupportedDataclassesForAOLAccountType]
  -[ACDDatabaseInitializer _addNotesDataclassToAASupportedDataclasses]
  -[ACDDatabaseInitializer _removeMessengerFromYahooSupportedDataclasses]
  -[ACDDatabaseInitializer _setYahooAccountsProvisionedDataclassesToSupportedOnes]
  -[ACDDatabaseInitializer _setCloudKitAllowsMultipleAccounts]
  -[ACDDatabaseInitializer _removeMessagesFromGoogleSupportedDataclasses]
  -[ACDDatabaseInitializer _removeAIMAccounts]
  -[ACDDatabaseInitializer _addFacebookAndDAVLegacyAccountTypes]
  -[ACDDatabaseInitializer _changeFacebookAccountToLegacyAccountType]
  -[ACDDatabaseInitializer _addObsoleteAttributeToAccountTypes]
  -[ACDDatabaseInitializer _removeMessagesFromAOLSupportedDataclasses]
  -[ACDDatabaseInitializer _addiTunesStoreSandboxAccountType]
  -[ACDDatabaseInitializer _addLinkedInLegacyAccountType]
  -[ACDDatabaseInitializer _changeFacebookAndLinkedInAccountsToLegacyAccountTypes]
  -[ACDDatabaseInitializer _changeSocialAccountTypeObsoleteAttributes]
  -[ACDDatabaseInitializer _removeBTMMType]
  -[ACDDatabaseInitializer _switchAolAccountsToOAuth]
  -[ACDDatabaseInitializer _aolSupportsAuthentication]
  -[ACDDatabaseInitializer _removeRedundantDataclasses]
  -[ACDDatabaseInitializer _addRemoteManagementAccountType]
  -[ACDDatabaseInitializer _addPublishedCalendarAccountType]
  -[ACDDatabaseInitializer _managedDataclassesSetForNames:]
  -[ACDDatabaseInitializer _ensureAllInternalAccountTypesExist:]
  -[ACDDatabaseInitializer _ensureAllDataclassesExist]
  -[ACDDatabaseInitializer _addWarmingUpAttributeToAccounts]


ACDAccountCache : NSObject
 @property  unsigned int cacheValidityDuration
 @property  NSMutableDictionary *cachedAccountsByID
 @property  NSMutableDictionary *cachedAccountIDsByType
 @property  NSMutableDictionary *cachedAccountTypesByID
 @property  NSMutableDictionary *expirersByID

  // instance methods
  -[ACDAccountCache removeAccount:]
  -[ACDAccountCache _resetParentAccountForCachedAccountIfNeeded:]
  -[ACDAccountCache cacheAccount:]
  -[ACDAccountCache removeAccountType:]
  -[ACDAccountCache _expirerIdentifierForAccountTypeID:]
  -[ACDAccountCache setCachedAccountTypesByID:]
  -[ACDAccountCache setExpirersByID:]
  -[ACDAccountCache setCacheValidityDuration:]
  -[ACDAccountCache setCachedAccountIDsByType:]
  -[ACDAccountCache cachedAccountTypesByID]
  -[ACDAccountCache .cxx_destruct]
  -[ACDAccountCache cachedAccountForIdentifier:]
  -[ACDAccountCache _keyForType:justActive:]
  -[ACDAccountCache setCachedAccountsByID:]
  -[ACDAccountCache expirersByID]
  -[ACDAccountCache cachedAccountsOfType:justActive:]
  -[ACDAccountCache initWithValidityDuration:]
  -[ACDAccountCache cacheAccountType:]
  -[ACDAccountCache cacheAccounts:forType:justActive:]
  -[ACDAccountCache cachedAccountsByID]
  -[ACDAccountCache _lock_removeAccountsForType:]
  -[ACDAccountCache clearCache]
  -[ACDAccountCache cachedAccountTypeForID:]
  -[ACDAccountCache cacheValidityDuration]
  -[ACDAccountCache cachedAccountIDsByType]


ACDDatabase : NSObject <ACDDatabaseConnectionDelegate, ACDDatabaseProtocol>
 @property  NSURL *databaseURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDDatabase new]

  // instance methods
  -[ACDDatabase databaseURL]
  -[ACDDatabase createConnection]
  -[ACDDatabase _backupURL]
  -[ACDDatabase _shouldResetPersistentStoreAfterError:]
  -[ACDDatabase .cxx_destruct]
  -[ACDDatabase restoreFromBackupReturningError:]
  -[ACDDatabase databaseConnection:encounteredUnrecoverableError:]
  -[ACDDatabase resetReturningError:]
  -[ACDDatabase _performBackupToURL:unverifiedBackupURL:error:]
  -[ACDDatabase _addPersistentStoreWithType:configuration:URL:options:error:]
  -[ACDDatabase performBackupReturningError:]
  -[ACDDatabase _persistentStoreCoodinator_resetPersistentStoreCoordinatorWithError:]
  -[ACDDatabase initWithDatabaseURL:]
  -[ACDDatabase init]
  -[ACDDatabase _unverifiedBackupURL]
  -[ACDDatabase initWithDatabaseURL:storeOptions:]


ACDTransientDatabase : NSObject <ACDDatabaseProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDTransientDatabase createConnection]
  -[ACDTransientDatabase .cxx_destruct]
  -[ACDTransientDatabase _addPersistentStoreWithType:configuration:URL:options:error:]
  -[ACDTransientDatabase init]


ACDPreferences : NSObject
  // class methods
  +[ACDPreferences sharedPreferences]

  // instance methods
  -[ACDPreferences synchronize]
  -[ACDPreferences setObject:forKey:]
  -[ACDPreferences reset]
  -[ACDPreferences objectForKey:]
  -[ACDPreferences serverTimeoutInterval]


ACDUnfairLockWrapper : NSObject
  // instance methods
  -[ACDUnfairLockWrapper init]


ACDKeychainLock : NSObject
  // instance methods
  -[ACDKeychainLock .cxx_destruct]
  -[ACDKeychainLock lockPerformForService:username:block:]
  -[ACDKeychainLock init]


ACDAccountChange : NSObject
 @property  int changeType
 @property  ACAccount *account
 @property  ACAccount *oldAccount

  // class methods
  +[ACDAccountChange changeWithChangeType:account:oldAccount:]

  // instance methods
  -[ACDAccountChange account]
  -[ACDAccountChange changeType]
  -[ACDAccountChange .cxx_destruct]
  -[ACDAccountChange initWithChangeType:account:oldAccount:]
  -[ACDAccountChange oldAccount]


ACDFakeRemoteAccountStoreSession : ACRemoteAccountStoreSession
  // instance methods
  -[ACDFakeRemoteAccountStoreSession .cxx_destruct]
  -[ACDFakeRemoteAccountStoreSession synchronousRemoteObjectProxyWithErrorHandler:]
  -[ACDFakeRemoteAccountStoreSession remoteObjectProxyWithErrorHandler:]
  -[ACDFakeRemoteAccountStoreSession initWithFakeProxy:]
  -[ACDFakeRemoteAccountStoreSession remoteObjectProxy]


ACDAccountStore : ACAccountStore <ACRemoteAccountStoreProtocol>
 @property  ACDDatabaseConnection *databaseConnection
 @property  ACDAuthenticationPluginManager *authenticationPluginManager
 @property  ACDAccessPluginManager *accessPluginManager
 @property  ACDDataclassOwnersManager *dataclassOwnersManager
 @property  ACDAuthenticationDialogManager *authenticationDialogManager
 @property  ACRemoteDeviceProxy *remoteDeviceProxy
 @property  ACDAccountNotifier *accountNotifier
 @property  ACDDatabaseBackupActivity *databaseBackupActivity
 @property  BOOL notificationsEnabled
 @property  BOOL migrationInProgress
 @property  <ACDAccountStoreDelegate> *delegate
 @property  ACDClient *client
 @property  ACDClientAuthorizationManager *authorizationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDAccountStore accountCache]

  // instance methods
  -[ACDAccountStore setNotificationsEnabled:]
  -[ACDAccountStore parentAccountForAccountWithIdentifier:handler:]
  -[ACDAccountStore insertCredentialItem:completion:]
  -[ACDAccountStore databaseConnection]
  -[ACDAccountStore saveAccount:toPairedDeviceWithOptions:completion:]
  -[ACDAccountStore permissionForAccountType:withHandler:]
  -[ACDAccountStore handleURL:]
  -[ACDAccountStore saveCredentialItem:completion:]
  -[ACDAccountStore grantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStore notificationsEnabled]
  -[ACDAccountStore _childAccountsForAccountWithID:]
  -[ACDAccountStore scheduleBackupIfNonexistent:]
  -[ACDAccountStore clearAllPermissionsGrantedForAccountType:withHandler:]
  -[ACDAccountStore accountsWithAccountTypeIdentifier:]
  -[ACDAccountStore accountExistsWithDescription:completion:]
  -[ACDAccountStore _lockForAccountType:]
  -[ACDAccountStore _clientTokenForAccountIdentifier:error:]
  -[ACDAccountStore updateAccountNoSave:error:]
  -[ACDAccountStore accountsExistWithAccountTypeIdentifier:]
  -[ACDAccountStore saveAccount:pid:verify:dataclassActions:completion:]
  -[ACDAccountStore authorizationManager]
  -[ACDAccountStore _accountsWithAcountType:error:]
  -[ACDAccountStore _isManagedAccount:enabledForManagedDataclass:]
  -[ACDAccountStore dataclassOwnersManager]
  -[ACDAccountStore _predicateForFetchingAccountsWithManagedAccountTypeID:options:]
  -[ACDAccountStore _updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStore accountWithIdentifier:handler:]
  -[ACDAccountStore setDelegate:]
  -[ACDAccountStore credentialItemsWithCompletion:]
  -[ACDAccountStore setDataclassOwnersManager:]
  -[ACDAccountStore _completeSave:dataclassActions:completion:]
  -[ACDAccountStore appPermissionsForAccountType:withHandler:]
  -[ACDAccountStore tetheredSyncSourceTypeForDataclass:completion:]
  -[ACDAccountStore accountsWithAccountType:options:completion:]
  -[ACDAccountStore insertAccountType:withHandler:]
  -[ACDAccountStore _canManagedAccountType:syncManagedDataclass:]
  -[ACDAccountStore _allAccounts_sync]
  -[ACDAccountStore delegate]
  -[ACDAccountStore isPushSupportedForAccount:completion:]
  -[ACDAccountStore _addAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore setDatabaseBackupActivity:]
  -[ACDAccountStore setRemoteDeviceProxy:]
  -[ACDAccountStore _pruneDuplicateAccountsForAccountType:withUserName:error:]
  -[ACDAccountStore displayAccountTypeForAccountWithIdentifier:handler:]
  -[ACDAccountStore dataclassActionsForAccountDeletion:completion:]
  -[ACDAccountStore resetDatabaseToVersion:withCompletion:]
  -[ACDAccountStore removeAccount:withDataclassActions:completion:]
  -[ACDAccountStore saveAccount:withHandler:]
  -[ACDAccountStore _shouldSendDidSaveNotificationForAccount:]
  -[ACDAccountStore migrateCredentialForAccount:completion:]
  -[ACDAccountStore _supportedDataclassesForManagedAccountType:]
  -[ACDAccountStore addAccountNoSave:error:]
  -[ACDAccountStore _removeClientTokenForAccountIdentifer:]
  -[ACDAccountStore accountIdentifiersEnabledForDataclass:handler:]
  -[ACDAccountStore _setAccountManagedObjectRelationships:withAccount:oldAccount:error:]
  -[ACDAccountStore verifyCredentialsForAccount:options:completion:]
  -[ACDAccountStore authenticationPluginManager]
  -[ACDAccountStore _updateAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore setAuthenticationPluginManager:]
  -[ACDAccountStore .cxx_destruct]
  -[ACDAccountStore registerMonitorForAccountsOfTypes:propertiesToPrefetch:completion:]
  -[ACDAccountStore setClientBundleID:withHandler:]
  -[ACDAccountStore _displayAccountForAccount:]
  -[ACDAccountStore _accountWithIdentifier:prefetchKeypaths:]
  -[ACDAccountStore setClient:]
  -[ACDAccountStore updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStore dataclassesWithHandler:]
  -[ACDAccountStore removeAccountsFromPairedDeviceWithOptions:completion:]
  -[ACDAccountStore clearGrantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStore _legacyCredentialForAccount:client:error:]
  -[ACDAccountStore removeAccountType:withHandler:]
  -[ACDAccountStore _accountWithIdentifier:]
  -[ACDAccountStore client]
  -[ACDAccountStore openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAccountStore setAuthenticationDialogManager:]
  -[ACDAccountStore requestAccessForAccountTypeWithIdentifier:options:withHandler:]
  -[ACDAccountStore accountIdentifiersEnabledToSyncDataclass:handler:]
  -[ACDAccountStore credentialForAccountWithIdentifier:handler:]
  -[ACDAccountStore longLivedRemoteAccountStoreSession]
  -[ACDAccountStore _removeAccountNoSave:withDataclassActions:withError:]
  -[ACDAccountStore childAccountsForAccountWithIdentifier:handler:]
  -[ACDAccountStore isTetheredSyncingEnabledForDataclass:completion:]
  -[ACDAccountStore _accountTypeWithIdentifier:]
  -[ACDAccountStore openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAccountStore authenticationDialogManager]
  -[ACDAccountStore setCredential:forAccount:serviceID:completion:]
  -[ACDAccountStore _dataclassWithName:createIfNecessary:]
  -[ACDAccountStore saveAccount:verify:dataclassActions:completion:]
  -[ACDAccountStore setAccountNotifier:]
  -[ACDAccountStore accessPluginManager]
  -[ACDAccountStore accountsWithHandler:]
  -[ACDAccountStore discoverPropertiesForAccount:options:completion:]
  -[ACDAccountStore masterCredentialForAccountIdentifier:]
  -[ACDAccountStore syncableDataclassesForAccountType:handler:]
  -[ACDAccountStore setMigrationInProgress:]
  -[ACDAccountStore preloadDataclassOwnersWithCompletion:]
  -[ACDAccountStore provisionedDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStore accountsOnPairedDeviceWithAccountTypes:withOptions:handler:]
  -[ACDAccountStore childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:]
  -[ACDAccountStore accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:]
  -[ACDAccountStore accountsWithAccountType:handler:]
  -[ACDAccountStore _delegate_accountStoreDidSaveAccount:changeType:]
  -[ACDAccountStore _handleAccountMod:withDataclassActions:withError:]
  -[ACDAccountStore accessKeysForAccountType:handler:]
  -[ACDAccountStore dataclassActionsForAccountSave:completion:]
  -[ACDAccountStore kerberosAccountsForDomainFromURL:completion:]
  -[ACDAccountStore isPerformingDataclassActionsForAccount:completion:]
  -[ACDAccountStore canSaveAccount:completion:]
  -[ACDAccountStore accountNotifier]
  -[ACDAccountStore enabledDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStore accountTypesWithHandler:]
  -[ACDAccountStore addClientToken:forAccountIdentifier:completion:]
  -[ACDAccountStore runAccountMigrationPlugins:]
  -[ACDAccountStore _canSaveAccount:error:]
  -[ACDAccountStore accountTypeWithIdentifier:handler:]
  -[ACDAccountStore accountsWithAccountTypeIdentifiers:preloadedProperties:completion:]
  -[ACDAccountStore _syncableDataclassesForManagedAccountType:]
  -[ACDAccountStore notifyRemoteDevicesOfModifiedAccount:withChangeType:]
  -[ACDAccountStore databaseBackupActivity]
  -[ACDAccountStore triggerKeychainMigrationIfNecessary:]
  -[ACDAccountStore supportedDataclassesForAccountType:handler:]
  -[ACDAccountStore accountTypeWithIdentifier:]
  -[ACDAccountStore _deleteAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore _saveWithError:]
  -[ACDAccountStore credentialForAccount:serviceID:handler:]
  -[ACDAccountStore isMigrationInProgress]
  -[ACDAccountStore shouldPreventAccountCreationWithObsoleteAccountType]
  -[ACDAccountStore setPermissionGranted:forBundleID:onAccountType:withHandler:]
  -[ACDAccountStore shutdownAccountsD:]
  -[ACDAccountStore deleteAccountNoSave:error:]
  -[ACDAccountStore visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:]
  -[ACDAccountStore _handleAccountAdd:withDataclassActions:error:]
  -[ACDAccountStore credentialItemForAccount:serviceName:completion:]
  -[ACDAccountStore remoteAccountStoreSession]
  -[ACDAccountStore notifyRemoteDevicesOfModifiedAccount:withChangeType:options:completion:]
  -[ACDAccountStore setAccessPluginManager:]
  -[ACDAccountStore _credentialItemWithAccountIdentifier:serviceName:]
  -[ACDAccountStore _accountsWithAccountType:options:error:]
  -[ACDAccountStore removeCredentialItem:completion:]
  -[ACDAccountStore _commitOrRollbackDataclassActions:forAccount:originalEnabledDataclasses:]
  -[ACDAccountStore renewCredentialsForAccount:options:completion:]
  -[ACDAccountStore initWithClient:databaseConnection:]
  -[ACDAccountStore _clientTokenQueue]
  -[ACDAccountStore init]
  -[ACDAccountStore clientTokenForAccountIdentifier:completion:]
  -[ACDAccountStore remoteDeviceProxy]
  -[ACDAccountStore removeAccountFromPairedDevice:withOptions:completion:]
  -[ACDAccountStore _performDataclassActions:forAccount:error:]
  -[ACDAccountStore _requestAccessForAccountTypeWithIdentifier:options:allowUserInteraction:withHandler:]


ACDAccountNotifier : NSObject
 @property  NSArray *notificationEntries

  // class methods
  +[ACDAccountNotifier allNotificationEntries]

  // instance methods
  -[ACDAccountNotifier addNotificationEntry:]
  -[ACDAccountNotifier .cxx_destruct]
  -[ACDAccountNotifier _unsafe_pluginsRegisteredForNewAccount:oldAccount:changeType:]
  -[ACDAccountNotifier postWillChangeNotificationForType:inStore:newAccount:oldAccount:]
  -[ACDAccountNotifier canSaveAccount:inStore:error:]
  -[ACDAccountNotifier postDidChangeNotificationForType:inStore:newAccount:oldAccount:]
  -[ACDAccountNotifier canRemoveAccount:inStore:error:]
  -[ACDAccountNotifier _pluginsRegisteredForAccount:]
  -[ACDAccountNotifier _provisionedDataclassesForNewAccount:oldAccount:]
  -[ACDAccountNotifier postWillPerformDataclassActionsOnAccount:forDataclasses:]
  -[ACDAccountNotifier postDidPerformDataclassActionsOnAccount:forDataclasses:]
  -[ACDAccountNotifier notificationEntries]
  -[ACDAccountNotifier _pluginsRegisteredForNewAccount:oldAccount:changeType:]
  -[ACDAccountNotifier removeAllNotificationEntries]
  -[ACDAccountNotifier initWithNotificationEntries:]
  -[ACDAccountNotifier init]


ACDKeychainMigrator : NSObject
  // class methods
  +[ACDKeychainMigrator sharedInstance]

  // instance methods
  -[ACDKeychainMigrator migrateKeychainItem:toKeybag:]
  -[ACDKeychainMigrator keychainItemsForAccounts:]
  -[ACDKeychainMigrator .cxx_destruct]
  -[ACDKeychainMigrator _keychainItemsForAccount:accountTypeIdentifiers:]
  -[ACDKeychainMigrator _keychainItemFromAttributes:]
  -[ACDKeychainMigrator migrateAllKeychainItems]
  -[ACDKeychainMigrator allKeychainItems]
  -[ACDKeychainMigrator _migrateUUIDKeychainItems:]
  -[ACDKeychainMigrator _validateKeychainItemClass:]
  -[ACDKeychainMigrator init]
  -[ACDKeychainMigrator _keychainItemFromAttributesArray:]


ACDPluginLoader : ACPluginLoader
  // class methods
  +[ACDPluginLoader _buildPluginCache]
  +[ACDPluginLoader _currentSystemVersion]
  +[ACDPluginLoader pluginForIdentifier:subpath:]


ACDDatabasePersistentConfiguration : NSObject
  // class methods
  +[ACDDatabasePersistentConfiguration accountTypes]
  +[ACDDatabasePersistentConfiguration dataclasses]


ACDLazyArray : NSArray
  // instance methods
  -[ACDLazyArray .cxx_destruct]
  -[ACDLazyArray count]
  -[ACDLazyArray initWithObjects:count:]
  -[ACDLazyArray initWithInitializer:]
  -[ACDLazyArray objectAtIndex:]
  -[ACDLazyArray init]
  -[ACDLazyArray initWithCoder:]


ACDKeychainItem : NSObject
 @property  r^{__CFData=} persistentRef
 @property  NSString *account
 @property  NSString *service
 @property  NSString *accessGroup
 @property  NSString *accessibility
 @property  BOOL synchronizable
 @property  BOOL useDataProtectionKeychain
 @property  BOOL hasCustomAccessControl
 @property  NSDictionary *metadata
 @property  long long version

  // class methods
  +[ACDKeychainItem new]

  // instance methods
  -[ACDKeychainItem save:]
  -[ACDKeychainItem synchronizable]
  -[ACDKeychainItem account]
  -[ACDKeychainItem _markPropertyDirty:]
  -[ACDKeychainItem setAccount:]
  -[ACDKeychainItem _clearDirtyProperties]
  -[ACDKeychainItem hasCustomAccessControl]
  -[ACDKeychainItem initWithPersistentRef:properties:]
  -[ACDKeychainItem _metadataWithError:]
  -[ACDKeychainItem dealloc]
  -[ACDKeychainItem setService:]
  -[ACDKeychainItem setAccessGroup:]
  -[ACDKeychainItem setSynchronizable:]
  -[ACDKeychainItem .cxx_destruct]
  -[ACDKeychainItem _reloadProperties]
  -[ACDKeychainItem persistentRef]
  -[ACDKeychainItem service]
  -[ACDKeychainItem setMetadata:]
  -[ACDKeychainItem version]
  -[ACDKeychainItem initWithPersistentRef:]
  -[ACDKeychainItem setAccessibility:]
  -[ACDKeychainItem migrateToKeyBagFromLegacy]
  -[ACDKeychainItem _modifiedProperties]
  -[ACDKeychainItem reload]
  -[ACDKeychainItem metadata]
  -[ACDKeychainItem useDataProtectionKeychain]
  -[ACDKeychainItem setVersion:]
  -[ACDKeychainItem _setValue:forProperty:]
  -[ACDKeychainItem accessGroup]
  -[ACDKeychainItem _setMetadata:withError:]
  -[ACDKeychainItem init]
  -[ACDKeychainItem accessibility]


ACRemoteDeviceMessage : NSObject
 @property  NSString *command
 @property  ACAccount *account
 @property  NSDictionary *options
 @property  NSString *sentMessageIdentifier
 @property  BOOL success
 @property  NSError *error
 @property  NSObject<NSSecureCoding> *result
 @property  NSData *data
 @property  NSString *identifier
 @property  BOOL needsReply
 @property  BOOL isReply

  // class methods
  +[ACRemoteDeviceMessage _whitelistedClasses]
  +[ACRemoteDeviceMessage actionMessageWithCommand:account:options:]
  +[ACRemoteDeviceMessage replyForMessage:withSuccess:result:error:]
  +[ACRemoteDeviceMessage replyForMessage:withSuccess:error:]

  // instance methods
  -[ACRemoteDeviceMessage needsReply]
  -[ACRemoteDeviceMessage command]
  -[ACRemoteDeviceMessage success]
  -[ACRemoteDeviceMessage account]
  -[ACRemoteDeviceMessage identifier]
  -[ACRemoteDeviceMessage isReply]
  -[ACRemoteDeviceMessage error]
  -[ACRemoteDeviceMessage setIsReply:]
  -[ACRemoteDeviceMessage .cxx_destruct]
  -[ACRemoteDeviceMessage options]
  -[ACRemoteDeviceMessage result]
  -[ACRemoteDeviceMessage _invalidateCachedData]
  -[ACRemoteDeviceMessage sentMessageIdentifier]
  -[ACRemoteDeviceMessage setNeedsReply:]
  -[ACRemoteDeviceMessage _setPayloadObject:forKey:]
  -[ACRemoteDeviceMessage initWithData:]
  -[ACRemoteDeviceMessage _payloadObjectForKey:]
  -[ACRemoteDeviceMessage init]
  -[ACRemoteDeviceMessage data]


ACDAuthenticationPluginManager : NSObject
 @property  ACRateLimiter *renewalRateLimiter

  // instance methods
  -[ACDAuthenticationPluginManager _unsanitizeOptionsDictionary:]
  -[ACDAuthenticationPluginManager .cxx_destruct]
  -[ACDAuthenticationPluginManager setRenewalRateLimiter:]
  -[ACDAuthenticationPluginManager credentialForAccount:client:store:handler:]
  -[ACDAuthenticationPluginManager verifyCredentialsForAccount:accountStore:options:handler:]
  -[ACDAuthenticationPluginManager _renewalRequestIsWithinLimitsForAccount:accountStore:]
  -[ACDAuthenticationPluginManager _sanitizeError:]
  -[ACDAuthenticationPluginManager discoverPropertiesForAccount:accountStore:options:completion:]
  -[ACDAuthenticationPluginManager _handleRenewalCompletionResult:forAccount:renewalID:accountStore:error:]
  -[ACDAuthenticationPluginManager _descriptionForRenewalResult:]
  -[ACDAuthenticationPluginManager renewalRateLimiter]
  -[ACDAuthenticationPluginManager isPushSupportedForAccount:]
  -[ACDAuthenticationPluginManager _authenticationTypeForAccount:]
  -[ACDAuthenticationPluginManager _handleVerificationCompletionForAccount:verifiedAccount:error:store:shouldSave:]
  -[ACDAuthenticationPluginManager _pluginForAuthenticationType:]
  -[ACDAuthenticationPluginManager _handleDiscoveryCompletionResult:forAccount:discoveryID:accountStore:shouldSave:error:]
  -[ACDAuthenticationPluginManager init]
  -[ACDAuthenticationPluginManager _authCapableParentAccountForAccount:]
  -[ACDAuthenticationPluginManager renewCredentialsForAccount:accountStore:options:completion:]


ACDOAuthSigner : NSObject <ACDOAuthSignerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDOAuthSigner new]

  // instance methods
  -[ACDOAuthSigner .cxx_destruct]
  -[ACDOAuthSigner setClientBundleID:withHandler:]
  -[ACDOAuthSigner initWithClient:databaseConnection:]
  -[ACDOAuthSigner init]
  -[ACDOAuthSigner setShouldIncludeAppIdInRequest:]
  -[ACDOAuthSigner signURLRequest:withAccount:callingPID:timestamp:handler:]
  -[ACDOAuthSigner signURLRequest:withAccount:applicationID:timestamp:handler:]
  -[ACDOAuthSigner _signedRequest:withAccountObject:applicationID:timestamp:]
  -[ACDOAuthSigner signedRequest:withAccount:applicationID:timestamp:]
  -[ACDOAuthSigner _permissionGrantedForBundleID:onAccountType:]
  -[ACDOAuthSigner ckForAccountType:]
  -[ACDOAuthSigner csForAccountType:]


ACRemoteDeviceProxy : NSObject <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACRemoteDeviceProxy service:account:identifier:didSendWithSuccess:error:]
  -[ACRemoteDeviceProxy _priorityForMessageCarryingCommand:]
  -[ACRemoteDeviceProxy _sendReplyForMessage:toDestination:withSuccess:result:error:]
  -[ACRemoteDeviceProxy sendCommand:withAccount:options:completion:]
  -[ACRemoteDeviceProxy .cxx_destruct]
  -[ACRemoteDeviceProxy _dequeueCompletionHandlersForMessageWithTransportID:success:result:error:]
  -[ACRemoteDeviceProxy _sendMessageData:toDestination:withPriority:bypassDuet:transportID:error:]
  -[ACRemoteDeviceProxy sendCommand:withAccount:completion:]
  -[ACRemoteDeviceProxy _enqueueCompletionHandler:forMessageWithInternalID:transportID:]
  -[ACRemoteDeviceProxy _isValidCommandForOutgoingMessage:]
  -[ACRemoteDeviceProxy service:account:incomingData:fromID:context:]
  -[ACRemoteDeviceProxy _dequeueCompletionHandlersForMessageWithInternalID:success:result:error:]
  -[ACRemoteDeviceProxy init]


ACDServer : NSObject <ACDAccountStoreDelegate, NSXPCConnectionDelegate, NSXPCListenerDelegate>
 @property  ACDAuthenticationPluginManager *authenticationPluginManager
 @property  ACDAccessPluginManager *accessPluginManager
 @property  ACDDataclassOwnersManager *dataclassOwnersManager
 @property  ACDAuthenticationDialogManager *authenticationDialogManager
 @property  ACDAccountNotifier *accountNotifier
 @property  ACRemoteDeviceProxy *remoteDeviceProxy
 @property  <ACDClientProviderProtocol> *clientProvider
 @property  <ACDDatabaseProtocol> *database
 @property  ACDDatabaseBackupActivity *databaseBackupActivity
 @property  NSXPCListener *accountStoreListener
 @property  NSXPCListener *oauthSignerListener
 @property  NSXPCListener *authenticationDialogListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDServer _newOAuthSignerForClient:]
  -[ACDServer _keyForConnection:]
  -[ACDServer _endObservingLanguageChangeNotification]
  -[ACDServer initWithAccountStoreListener:oauthSignerListener:authenticationDialogListener:]
  -[ACDServer dataclassOwnersManager]
  -[ACDServer createClientForConnection:]
  -[ACDServer credentialsDidChangeForAccount:]
  -[ACDServer clientProvider]
  -[ACDServer setDataclassOwnersManager:]
  -[ACDServer setClientProvider:]
  -[ACDServer setDatabase:]
  -[ACDServer setDatabaseBackupActivity:]
  -[ACDServer setRemoteDeviceProxy:]
  -[ACDServer dealloc]
  -[ACDServer _newDaemonAccountStoreFilterForClient:]
  -[ACDServer authenticationPluginManager]
  -[ACDServer _beginObservingLanguageChangeNotfication]
  -[ACDServer setAuthenticationPluginManager:]
  -[ACDServer .cxx_destruct]
  -[ACDServer connection:handleInvocation:isReply:]
  -[ACDServer createDatabaseConnection]
  -[ACDServer setAuthenticationDialogManager:]
  -[ACDServer authenticationDialogManager]
  -[ACDServer accountStore:didSaveAccount:changeType:]
  -[ACDServer _handleLanguageChangedDarwinNotification]
  -[ACDServer setAccountNotifier:]
  -[ACDServer accessPluginManager]
  -[ACDServer oauthSignerListener]
  -[ACDServer database]
  -[ACDServer authenticationDialogListener]
  -[ACDServer shutdown]
  -[ACDServer accountNotifier]
  -[ACDServer start]
  -[ACDServer databaseBackupActivity]
  -[ACDServer accountStoreListener]
  -[ACDServer clientForConnection:]
  -[ACDServer setAccessPluginManager:]
  -[ACDServer _shouldNotifyClient:ofChangesForAccountType:]
  -[ACDServer listener:shouldAcceptNewConnection:]
  -[ACDServer _beginObservingIDSProxyNotifications]
  -[ACDServer init]
  -[ACDServer remoteDeviceProxy]


ACDAccessPluginManager : NSObject
  // instance methods
  -[ACDAccessPluginManager revokeAccessToAccountsOfType:forClient:store:completion:]
  -[ACDAccessPluginManager handleAccessRequestToAccountsOfType:forClient:withOptions:store:allowUserInteraction:completion:]
  -[ACDAccessPluginManager revokeAllAccessToAccountsOfType:store:withCompletion:]
  -[ACDAccessPluginManager _authorizationPluginForAccountType:]
  -[ACDAccessPluginManager authorizeAccessToAccountsOfType:forClient:store:completion:]
  -[ACDAccessPluginManager .cxx_destruct]
  -[ACDAccessPluginManager init]


ACDClient : NSObject
 @property  NSString *bundleID
 @property  ^{__CFBundle=} bundle
 @property  NSString *localizedAppName
 @property  NSString *adamOrDisplayID
 @property  NSString *name
 @property  NSNumber *pid
 @property  NSXPCConnection *connection
 @property  ACDAccountStoreFilter *filter
 @property  NSSet *monitoredAccountTypes
 @property  NSArray *prefetchedProperties

  // class methods
  +[ACDClient _bundleForNonPlugInPID:]
  +[ACDClient _bundleIDForPID:]
  +[ACDClient clientWithBundleID:]
  +[ACDClient _bundleForPID:]

  // instance methods
  -[ACDClient setFilter:]
  -[ACDClient bundle]
  -[ACDClient setPrefetchedProperties:]
  -[ACDClient filter]
  -[ACDClient initWithConnection:]
  -[ACDClient _displayNameFromBundleInfoDictionaryForPID:]
  -[ACDClient adamOrDisplayID]
  -[ACDClient setBundleID:]
  -[ACDClient dealloc]
  -[ACDClient .cxx_destruct]
  -[ACDClient connection]
  -[ACDClient prefetchedProperties]
  -[ACDClient monitoredAccountTypes]
  -[ACDClient pid]
  -[ACDClient name]
  -[ACDClient bundleID]
  -[ACDClient setMonitoredAccountTypes:]
  -[ACDClient _displayNameFromLaunchServicesForPID:]
  -[ACDClient hasEntitlement:]
  -[ACDClient localizedAppName]
  -[ACDClient init]
  -[ACDClient _rawValueForEntitlement:]


ACDClientAuthorizationManager : NSObject
  // instance methods
  -[ACDClientAuthorizationManager allAuthorizationsForAccountType:]
  -[ACDClientAuthorizationManager removeAllClientAuthorizationsForAccountType:]
  -[ACDClientAuthorizationManager _csvStringFromSet:]
  -[ACDClientAuthorizationManager .cxx_destruct]
  -[ACDClientAuthorizationManager authorizationForClient:accountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager initWithDatabaseConnection:]
  -[ACDClientAuthorizationManager removeAuthorizationForClient:accountType:]
  -[ACDClientAuthorizationManager authorizationForClient:accountType:]
  -[ACDClientAuthorizationManager removeAllClientAuthorizationsForAccountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager _setFromCSVString:]
  -[ACDClientAuthorizationManager allAuthorizationsForAccountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager removeAuthorizationForClient:accountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager setAuthorization:forClient:onAccountType:]


ACRemoteUtilities : NSObject
  // class methods
  +[ACRemoteUtilities localAccountMatchingRemoteAccount:inAccountStore:]


ACDPairedDeviceAccountCache : NSObject
  // class methods
  +[ACDPairedDeviceAccountCache sharedInstance]

  // instance methods
  -[ACDPairedDeviceAccountCache .cxx_destruct]
  -[ACDPairedDeviceAccountCache invalidate]
  -[ACDPairedDeviceAccountCache init]
  -[ACDPairedDeviceAccountCache accountsFromRemoteDeviceProxy:ignoreCache:options:completion:]
  -[ACDPairedDeviceAccountCache _didFetchAccounts:error:]


ACDDatabaseConnection : NSObject
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSManagedObjectContext *managedObjectContext
 @property  <ACDDatabaseConnectionDelegate> *delegate
 @property  NSNumber *version
 @property  NSNumber *keychainVersion

  // class methods
  +[ACDDatabaseConnection new]

  // instance methods
  -[ACDDatabaseConnection setKeychainVersion:]
  -[ACDDatabaseConnection managedObjectContext]
  -[ACDDatabaseConnection persistentStoreCoordinator]
  -[ACDDatabaseConnection _endObservingManagedObjectContextDidSaveNotifications]
  -[ACDDatabaseConnection rollback]
  -[ACDDatabaseConnection setDelegate:]
  -[ACDDatabaseConnection _traceDatabaseEvents]
  -[ACDDatabaseConnection _setupManagedObjectContextWithPersistentStoreCoodinator:]
  -[ACDDatabaseConnection _persistentStore]
  -[ACDDatabaseConnection deleteObject:]
  -[ACDDatabaseConnection objectForObjectURI:]
  -[ACDDatabaseConnection delegate]
  -[ACDDatabaseConnection insertNewObjectForEntityForName:]
  -[ACDDatabaseConnection dealloc]
  -[ACDDatabaseConnection _accountPropertyWithKey:owner:]
  -[ACDDatabaseConnection existingObjectWithURI:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:withPredicate:sortDescriptor:]
  -[ACDDatabaseConnection .cxx_destruct]
  -[ACDDatabaseConnection countOfEntityNamed:withPredicate:]
  -[ACDDatabaseConnection _managedObjectModificationDescription:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:withPredicate:]
  -[ACDDatabaseConnection _managedObjectContextModificationDescription]
  -[ACDDatabaseConnection _managedObjectContextDidSave:]
  -[ACDDatabaseConnection version]
  -[ACDDatabaseConnection saveWithError:]
  -[ACDDatabaseConnection _delegate_databaseConnectionEncounteredUnrecoverableError:]
  -[ACDDatabaseConnection managedObjectIDForURI:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:]
  -[ACDDatabaseConnection keychainVersion]
  -[ACDDatabaseConnection saveWithError:rollbackOnFailure:]
  -[ACDDatabaseConnection setAccountPropertyWithKey:value:owner:]
  -[ACDDatabaseConnection _beginObservingManagedObjectContextDidSaveNotifications]
  -[ACDDatabaseConnection _handleManagedObjectContextError:]
  -[ACDDatabaseConnection setVersion:]
  -[ACDDatabaseConnection deleteAccountPropertyWithKey:owner:]
  -[ACDDatabaseConnection initWithPersistentStoreCoordinator:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:withPredicate:sortDescriptor:prefetchKeypaths:]
  -[ACDDatabaseConnection _managedObjectModel]
  -[ACDDatabaseConnection init]


ACDAuthenticationDialogRequest : NSObject
 @property  NSURL *url
 @property  BOOL confirmationRequired
 @property  ACAccount *account
 @property  NSString *authDelegateClassName
 @property  NSString *authDelegateClassBundlePath
 @property  @? completion

  // instance methods
  -[ACDAuthenticationDialogRequest account]
  -[ACDAuthenticationDialogRequest setAccount:]
  -[ACDAuthenticationDialogRequest completion]
  -[ACDAuthenticationDialogRequest setUrl:]
  -[ACDAuthenticationDialogRequest setCompletion:]
  -[ACDAuthenticationDialogRequest .cxx_destruct]
  -[ACDAuthenticationDialogRequest url]
  -[ACDAuthenticationDialogRequest confirmationRequired]
  -[ACDAuthenticationDialogRequest setConfirmationRequired:]
  -[ACDAuthenticationDialogRequest authDelegateClassName]
  -[ACDAuthenticationDialogRequest setAuthDelegateClassName:]
  -[ACDAuthenticationDialogRequest authDelegateClassBundlePath]
  -[ACDAuthenticationDialogRequest setAuthDelegateClassBundlePath:]


ACDAuthenticationDialogManager : NSObject <ACDAuthenticationDialogManagerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDAuthenticationDialogManager .cxx_destruct]
  -[ACDAuthenticationDialogManager openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager init]
  -[ACDAuthenticationDialogManager contextForAuthenticationDialog:]
  -[ACDAuthenticationDialogManager authenticationDialogDidFinishWithSuccess:response:]
  -[ACDAuthenticationDialogManager _launchDialogContainerAppForAccount:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager _confirmUserWantsToOpenAuthenticationURLForAccount:]
  -[ACDAuthenticationDialogManager authenticationDialogCrashed]


ACDKeychain : NSObject
  // class methods
  +[ACDKeychain _migrateKeychainItemIfNecessary:]
  +[ACDKeychain canAccessPasswordsWithPolicy:]
  +[ACDKeychain removeItemForServiceName:username:accessGroup:options:error:]
  +[ACDKeychain cache]
  +[ACDKeychain _addKnownMigratedKeychainItem:]
  +[ACDKeychain keychainDeletedAccounts]
  +[ACDKeychain _knownMigratedKeychainItems]
  +[ACDKeychain _passwordForServiceName:username:accessGroup:checkInKeybag:options:error:]
  +[ACDKeychain addSyncItemWithServiceName:username:accessGroup:options:extension:error:]
  +[ACDKeychain _syncStateForKeychainDictionary:]
  +[ACDKeychain updateItemForServiceName:username:accessGroup:newValues:options:error:]
  +[ACDKeychain removeTombstoneForServiceName:username:accessGroup:extension:error:]
  +[ACDKeychain updateSyncItemForServiceName:username:accessGroup:newValues:extension:error:]
  +[ACDKeychain passwordForServiceName:username:accessGroup:options:error:]
  +[ACDKeychain addItemWithServiceName:username:accessGroup:passwordData:options:error:]
  +[ACDKeychain _isKnownMigratedKeychainItem:]


ACDClientAuthorization : NSObject
 @property  BOOL isGranted
 @property  ACDClient *client
 @property  NSSet *grantedPermissions
 @property  NSDictionary *options

  // instance methods
  -[ACDClientAuthorization .cxx_destruct]
  -[ACDClientAuthorization setClient:]
  -[ACDClientAuthorization options]
  -[ACDClientAuthorization client]
  -[ACDClientAuthorization initForClient:]
  -[ACDClientAuthorization isGranted]
  -[ACDClientAuthorization setOptions:]
  -[ACDClientAuthorization grantedPermissions]
  -[ACDClientAuthorization setGrantedPermissions:]
  -[ACDClientAuthorization setIsGranted:]


ACDEventLedger : NSObject
 @property  NSMutableArray *eventLedger

  // class methods
  +[ACDEventLedger sharedLedger]

  // instance methods
  -[ACDEventLedger recordEvent:]
  -[ACDEventLedger historyDescription]
  -[ACDEventLedger .cxx_destruct]
  -[ACDEventLedger simulateCrashWithMessage:]
  -[ACDEventLedger setEventLedger:]
  -[ACDEventLedger eventLedger]
  -[ACDEventLedger init]


ACDDatabaseBackupActivity : NSObject
 @property  ACDDatabase *database

  // class methods
  +[ACDDatabaseBackupActivity new]

  // instance methods
  -[ACDDatabaseBackupActivity initWithDatabase:]
  -[ACDDatabaseBackupActivity .cxx_destruct]
  -[ACDDatabaseBackupActivity activityCriteria]
  -[ACDDatabaseBackupActivity database]
  -[ACDDatabaseBackupActivity init]
  -[ACDDatabaseBackupActivity registerActivityIfNeeded]
  -[ACDDatabaseBackupActivity _registerActivityIfNeededSchedulingBackup:]
  -[ACDDatabaseBackupActivity _registerActivitySchedulingBackup:]
  -[ACDDatabaseBackupActivity scheduleBackup]
  -[ACDDatabaseBackupActivity scheduleBackupIfNonexistent]


ACDDatabaseMigrator : NSObject
 @property  NSURL *databaseURL
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSDictionary *storeOptions

  // class methods
  +[ACDDatabaseMigrator new]

  // instance methods
  -[ACDDatabaseMigrator databaseURL]
  -[ACDDatabaseMigrator persistentStoreCoordinator]
  -[ACDDatabaseMigrator .cxx_destruct]
  -[ACDDatabaseMigrator storeOptions]
  -[ACDDatabaseMigrator init]
  -[ACDDatabaseMigrator initForDatabaseAtURL:persistentStoreCoordinator:storeOptions:]
  -[ACDDatabaseMigrator runReturningError:]
  -[ACDDatabaseMigrator _migrateAccessAuthorizationsToTCCFromModelVersion:]
  -[ACDDatabaseMigrator _migrateOptionsAttributeOfAuthorizatinEntitiesFromModelVersion:]
  -[ACDDatabaseMigrator _migrateNameAttributeOfDataclassEntities]
  -[ACDDatabaseMigrator _fetchAllDataclassEntitles]
  -[ACDDatabaseMigrator _fetchAllAuthorizationEntitiesForModelVersion:]
  -[ACDDatabaseMigrator _setUpContextForMigration]
  -[ACDDatabaseMigrator _compatibleModelForStoreAtURL:]
  -[ACDDatabaseMigrator _versionForModel:]
  -[ACDDatabaseMigrator _postProcessMigrationFromVersion:migrationData:]


ACDTCCUtilities : NSObject
  // class methods
  +[ACDTCCUtilities clearAllTCCStatesForAccountTypeID:]
  +[ACDTCCUtilities allTCCStatesForAccountTypeID:]
  +[ACDTCCUtilities TCCStateForClient:accountTypeID:]
  +[ACDTCCUtilities TCCSupportedForAccountTypeID:]
  +[ACDTCCUtilities clearTCCStateForClient:accountTypeID:]
  +[ACDTCCUtilities _TCCServiceForAccountTypeID:]
  +[ACDTCCUtilities setTCCStateForClient:accountTypeID:toGranted:]


ACDAccountStoreFilter : NSObject <ACRemoteAccountStoreProtocol>
 @property  ACDAccountStore *backingAccountStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDAccountStoreFilter new]

  // instance methods
  -[ACDAccountStoreFilter setNotificationsEnabled:]
  -[ACDAccountStoreFilter parentAccountForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter insertCredentialItem:completion:]
  -[ACDAccountStoreFilter saveAccount:toPairedDeviceWithOptions:completion:]
  -[ACDAccountStoreFilter permissionForAccountType:withHandler:]
  -[ACDAccountStoreFilter handleURL:]
  -[ACDAccountStoreFilter saveCredentialItem:completion:]
  -[ACDAccountStoreFilter grantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter scheduleBackupIfNonexistent:]
  -[ACDAccountStoreFilter clearAllPermissionsGrantedForAccountType:withHandler:]
  -[ACDAccountStoreFilter accountExistsWithDescription:completion:]
  -[ACDAccountStoreFilter accountWithIdentifier:handler:]
  -[ACDAccountStoreFilter credentialItemsWithCompletion:]
  -[ACDAccountStoreFilter appPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter tetheredSyncSourceTypeForDataclass:completion:]
  -[ACDAccountStoreFilter accountsWithAccountType:options:completion:]
  -[ACDAccountStoreFilter insertAccountType:withHandler:]
  -[ACDAccountStoreFilter isPushSupportedForAccount:completion:]
  -[ACDAccountStoreFilter isClientEntitledToAccessAccountTypeWithIdentifier:]
  -[ACDAccountStoreFilter displayAccountTypeForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter dataclassActionsForAccountDeletion:completion:]
  -[ACDAccountStoreFilter resetDatabaseToVersion:withCompletion:]
  -[ACDAccountStoreFilter removeAccount:withDataclassActions:completion:]
  -[ACDAccountStoreFilter _accessGrantedForClient:onAccountTypeID:]
  -[ACDAccountStoreFilter saveAccount:withHandler:]
  -[ACDAccountStoreFilter migrateCredentialForAccount:completion:]
  -[ACDAccountStoreFilter _accessGrantedForBundleID:onAccountTypeID:]
  -[ACDAccountStoreFilter initWithBackingAccountStore:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledForDataclass:handler:]
  -[ACDAccountStoreFilter verifyCredentialsForAccount:options:completion:]
  -[ACDAccountStoreFilter .cxx_destruct]
  -[ACDAccountStoreFilter registerMonitorForAccountsOfTypes:propertiesToPrefetch:completion:]
  -[ACDAccountStoreFilter setClientBundleID:withHandler:]
  -[ACDAccountStoreFilter updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStoreFilter dataclassesWithHandler:]
  -[ACDAccountStoreFilter removeAccountsFromPairedDeviceWithOptions:completion:]
  -[ACDAccountStoreFilter clearGrantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter removeAccountType:withHandler:]
  -[ACDAccountStoreFilter _appPermissionsForAccountTypeIdentifier:]
  -[ACDAccountStoreFilter openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAccountStoreFilter _isClientPermittedToAccessAccountTypeWithIdentifier:]
  -[ACDAccountStoreFilter requestAccessForAccountTypeWithIdentifier:options:withHandler:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledToSyncDataclass:handler:]
  -[ACDAccountStoreFilter credentialForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter _isClientPermittedToRemoveAccount:]
  -[ACDAccountStoreFilter childAccountsForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter isTetheredSyncingEnabledForDataclass:completion:]
  -[ACDAccountStoreFilter openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAccountStoreFilter setCredential:forAccount:serviceID:completion:]
  -[ACDAccountStoreFilter saveAccount:verify:dataclassActions:completion:]
  -[ACDAccountStoreFilter accountsWithHandler:]
  -[ACDAccountStoreFilter discoverPropertiesForAccount:options:completion:]
  -[ACDAccountStoreFilter syncableDataclassesForAccountType:handler:]
  -[ACDAccountStoreFilter preloadDataclassOwnersWithCompletion:]
  -[ACDAccountStoreFilter provisionedDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter _clientHasPermissionToAddAccount:]
  -[ACDAccountStoreFilter _isClientPermittedToAccessAccount:]
  -[ACDAccountStoreFilter accountsOnPairedDeviceWithAccountTypes:withOptions:handler:]
  -[ACDAccountStoreFilter childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:]
  -[ACDAccountStoreFilter accountsWithAccountType:handler:]
  -[ACDAccountStoreFilter accessKeysForAccountType:handler:]
  -[ACDAccountStoreFilter dataclassActionsForAccountSave:completion:]
  -[ACDAccountStoreFilter kerberosAccountsForDomainFromURL:completion:]
  -[ACDAccountStoreFilter isPerformingDataclassActionsForAccount:completion:]
  -[ACDAccountStoreFilter canSaveAccount:completion:]
  -[ACDAccountStoreFilter enabledDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter accountTypesWithHandler:]
  -[ACDAccountStoreFilter addClientToken:forAccountIdentifier:completion:]
  -[ACDAccountStoreFilter runAccountMigrationPlugins:]
  -[ACDAccountStoreFilter _wildCardAuthorizationMatchingForAccountTypeIdentifier:]
  -[ACDAccountStoreFilter accountTypeWithIdentifier:handler:]
  -[ACDAccountStoreFilter accountsWithAccountTypeIdentifiers:preloadedProperties:completion:]
  -[ACDAccountStoreFilter notifyRemoteDevicesOfModifiedAccount:withChangeType:]
  -[ACDAccountStoreFilter triggerKeychainMigrationIfNecessary:]
  -[ACDAccountStoreFilter supportedDataclassesForAccountType:handler:]
  -[ACDAccountStoreFilter credentialForAccount:serviceID:handler:]
  -[ACDAccountStoreFilter setPermissionGranted:forBundleID:onAccountType:withHandler:]
  -[ACDAccountStoreFilter shutdownAccountsD:]
  -[ACDAccountStoreFilter visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:]
  -[ACDAccountStoreFilter credentialItemForAccount:serviceName:completion:]
  -[ACDAccountStoreFilter notifyRemoteDevicesOfModifiedAccount:withChangeType:options:completion:]
  -[ACDAccountStoreFilter removeCredentialItem:completion:]
  -[ACDAccountStoreFilter renewCredentialsForAccount:options:completion:]
  -[ACDAccountStoreFilter init]
  -[ACDAccountStoreFilter clientTokenForAccountIdentifier:completion:]
  -[ACDAccountStoreFilter removeAccountFromPairedDevice:withOptions:completion:]
  -[ACDAccountStoreFilter backingAccountStore]


ACDDataclassOwnersManager : NSObject
  // instance methods
  -[ACDDataclassOwnersManager .cxx_destruct]
  -[ACDDataclassOwnersManager init]
  -[ACDDataclassOwnersManager isPerformingDataclassActionsForAccount:]
  -[ACDDataclassOwnersManager preloadDataclassOwnersWithError:]
  -[ACDDataclassOwnersManager actionsForAddingAccount:affectingDataclass:withError:]
  -[ACDDataclassOwnersManager actionsForDeletingAccount:affectingDataclass:withError:]
  -[ACDDataclassOwnersManager actionsForEnablingDataclass:onAccount:withError:]
  -[ACDDataclassOwnersManager actionsForDisablingDataclass:onAccount:withError:]
  -[ACDDataclassOwnersManager performDataclassActions:forAccount:withChildren:withError:]
  -[ACDDataclassOwnersManager _dataclassOwnersManagerConnection]


ACDDataclassOwnersManagerInterface : NSObject
  // class methods
  +[ACDDataclassOwnersManagerInterface XPCInterface]


ACDKeychainCleanupActivity : NSObject
  // class methods
  +[ACDKeychainCleanupActivity sharedActivity]

  // instance methods
  -[ACDKeychainCleanupActivity _activityQueue_registerXPCActivityWithCriteria:]
  -[ACDKeychainCleanupActivity _activityQueue_removeExpiredCredentials]
  -[ACDKeychainCleanupActivity _activityQueue_removeCredentialItem:withCompletionHandler:]
  -[ACDKeychainCleanupActivity _removeExpiredCredentials]
  -[ACDKeychainCleanupActivity .cxx_destruct]
  -[ACDKeychainCleanupActivity _activityQueue_unregisterActivity]
  -[ACDKeychainCleanupActivity checkInIfNecessary]
  -[ACDKeychainCleanupActivity _activityQueue_checkIn]
  -[ACDKeychainCleanupActivity queueNonPersistentCredentialRemoval:]
  -[ACDKeychainCleanupActivity _activityQueue_configureXPCActivityWithCriteria:]
  -[ACDKeychainCleanupActivity init]
  -[ACDKeychainCleanupActivity _activityQueue_queueCredentialItemWithAccount:serviceName:]


ACDClientProvider : NSObject <ACDClientProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDClientProvider createClientForConnection:]


ACDAutoBugCapture : NSObject
  // class methods
  +[ACDAutoBugCapture triggerAutoBugCaptureWithType:subType:subtypeContext:detectedProcess:]


ACDAccountSync : NSObject
  // class methods
  +[ACDAccountSync sharedAccountSyncServer]
  +[ACDAccountSync accountSyncUnsupportedTypes]
  +[ACDAccountSync accountSyncSupportedTypes]
  +[ACDAccountSync accountSyncPropertiesForAccount:]

  // instance methods
  -[ACDAccountSync dealloc]
  -[ACDAccountSync .cxx_destruct]
  -[ACDAccountSync init]
  -[ACDAccountSync setupAccountSync]
  -[ACDAccountSync checkCircleState]


ACDPluginEntry : NSObject <ACDPluginEntryProtocol>
 @property  NSBundle *bundle
 @property  id principalObject
 @property  NSSet *supportedAccountTypes
 @property  NSSet *supportedDataclasses
 @property  NSString *identifier

  // instance methods
  -[ACDPluginEntry bundle]
  -[ACDPluginEntry initWithBundle:]
  -[ACDPluginEntry identifier]
  -[ACDPluginEntry .cxx_destruct]
  -[ACDPluginEntry principalObject]
  -[ACDPluginEntry supportedAccountTypes]
  -[ACDPluginEntry init]
  -[ACDPluginEntry principalObjectRespondsToSelector:]
  -[ACDPluginEntry supportedDataclasses]


ACDTestManager : NSObject
 @property  NSXPCListenerEndpoint *remoteAccountStoreEndpoint
 @property  NSXPCListenerEndpoint *remoteOAuthSignerEndpoint

  // class methods
  +[ACDTestManager testServer]

  // instance methods
  -[ACDTestManager startTestServer]
  -[ACDTestManager stopTestServer]
  -[ACDTestManager remoteAccountStoreEndpoint]
  -[ACDTestManager remoteOAuthSignerEndpoint]


(TypeSafeAccess)
	// instance methods
	-[(TypeSafeAccess) boolValueForKey:]
	-[(TypeSafeAccess) dataValueForKey:]
	-[(TypeSafeAccess) stringValueForKey:]

01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountMigrationState 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountType 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACCredentialItem 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACDManagedAccountType 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACDataclassAction 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACManagedDefaults 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACPersonaManager 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACPluginLoader 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRateLimiter 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRemoteAccountStoreInterface 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRemoteAccountStoreSession 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACSystemConfigManager 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACTimedExpirer 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACTrackedSet 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACZeroingString 
01 00 0200 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1600 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSBatchDeleteRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSMergePolicy 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1000 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OACredential 
01 00 1000 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OAURLRequestSigner 
01 00 0600 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKManager 
01 00 0b00 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
