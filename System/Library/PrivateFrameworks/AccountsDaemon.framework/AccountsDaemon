|| __DATA.__data _kACDSyncDataTypeBookmarks
|| __DATA.__data _kACDSyncDataTypeCalendars
|| __DATA.__data _kACDSyncDataTypeContacts
|| __DATA.__data _kACDSyncDataTypeMailAccounts
|| __DATA.__data _kACDSyncDataTypeNotes
|| __DATA_CONST.__const _ACAccountSyncClientID
|| __DATA_CONST.__const _ACAccountSyncDataclassKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncDevices
|| __DATA_CONST.__const _ACAccountSyncHostnameKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncKeychainExtension
|| __DATA_CONST.__const _ACAccountSyncMailClassKey
|| __DATA_CONST.__const _ACAccountSyncMailProtocolKey
|| __DATA_CONST.__const _ACAccountSyncQualifiedUsername
|| __DATA_CONST.__const _ACDisableAccountSync
|| __DATA_CONST.__const _ACErrorAccountSyncDomain
|| __DATA_CONST.__const _ACOneTimeMigrateAccountSync
|| __DATA_CONST.__const _ACOneTimeSMTPFixAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccessPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDAuthenticationPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClientAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClientAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDClientProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDatabaseBackupActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDataclassOwnersManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDDataclassOwnersManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainCleanupActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDLazyArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDOAuthSigner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDQueueDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDTCCUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDTestManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDTransientDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACDUserNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ACRemoteDeviceProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccessPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAccountSync
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDAuthenticationPluginManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClientAuthorization
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClientAuthorizationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDClientProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDatabaseBackupActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDataclassOwnersManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDDataclassOwnersManagerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainCleanupActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDKeychainManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDLazyArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDOAuthSigner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDPluginLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDQueueDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDTCCUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDTestManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDTransientDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACDUserNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ACRemoteDeviceProxy
|| __TEXT.__text _ACDAccountSyncAccountIsSyncable
|| __TEXT.__text _ACDAccountSyncDevices
|| __TEXT.__text _ACDAccountSyncEnabled
|| __TEXT.__text _ACDAccountSyncMarkAccountCreated
|| __TEXT.__text _ACDAccountSyncMarkAccountDeleted
|| __TEXT.__text _ACDAccountSyncRemoveTombstones
|| __TEXT.__text _ACDLogAccessRequest
|| __TEXT.__text _ACDStringFromChangeType
|| __TEXT.__text _CopyAccountNamesEnabledForDataType
|| __TEXT.__text _CopyExternalSourcesEnabledForDataType
|| __TEXT.__text _GetTetheredSyncingDisabledForDataType
|| __TEXT.__text _SetAccountNameEnabledForDataType
|| __TEXT.__text _SetExternalSourceEnabledForDataType
|| __TEXT.__text _SetTetheredSyncingDisabledForDatatype
|| __TEXT.__text __ACDConnectionLogSystem
|| __TEXT.__text __ACDLogSystem
|| __TEXT.__text _syncDataTypeForDataclass
|| __TEXT.__text _tetheredSyncSourceTypeForDataType
__ Accounts: _ACAccountDataclassCalendars
__ Accounts: _ACAccountDataclassContacts
__ Accounts: _ACAccountDataclassMail
__ Accounts: _ACAccountDataclassNotes
__ Accounts: _ACAccountDataclassProtectedCloudStorage
__ Accounts: _ACAccountDataclassReminders
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountPropertyAuthenticationScheme
__ Accounts: _ACAccountPropertyConfigurationProfileIdentifier
__ Accounts: _ACAccountPropertyDAAccountHost
__ Accounts: _ACAccountPropertyEWSExternalURL
__ Accounts: _ACAccountPropertyEWSInternalURL
__ Accounts: _ACAccountPropertyEWSRootFolderID
__ Accounts: _ACAccountPropertyFullName
__ Accounts: _ACAccountPropertyHostname
__ Accounts: _ACAccountPropertyIdentityEmailAddress
__ Accounts: _ACAccountPropertyPortNumber
__ Accounts: _ACAccountPropertySSLEnabled
__ Accounts: _ACAccountPropertySendingAccountIdentifier
__ Accounts: _ACAccountPropertyServerPath
__ Accounts: _ACAccountPropertyShouldNeverUseSyncableCredential
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifier126
__ Accounts: _ACAccountTypeIdentifier163
__ Accounts: _ACAccountTypeIdentifierAIMDeprecated
__ Accounts: _ACAccountTypeIdentifierAol
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierAppleID
__ Accounts: _ACAccountTypeIdentifierAppleIDAuthentication
__ Accounts: _ACAccountTypeIdentifierBookmarkDAV
__ Accounts: _ACAccountTypeIdentifierCalDAV
__ Accounts: _ACAccountTypeIdentifierCalDAVLegacy
__ Accounts: _ACAccountTypeIdentifierCardDAV
__ Accounts: _ACAccountTypeIdentifierCardDAVLegacy
__ Accounts: _ACAccountTypeIdentifierCloudKit
__ Accounts: _ACAccountTypeIdentifierDeviceLocator
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierFaceTime
__ Accounts: _ACAccountTypeIdentifierFacebookDeprecated
__ Accounts: _ACAccountTypeIdentifierFacebookLegacy
__ Accounts: _ACAccountTypeIdentifierFindMyFriends
__ Accounts: _ACAccountTypeIdentifierFlickr
__ Accounts: _ACAccountTypeIdentifierGameCenter
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierHolidayCalendar
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierIMAP
__ Accounts: _ACAccountTypeIdentifierIMAPMail
__ Accounts: _ACAccountTypeIdentifierIMAPNotes
__ Accounts: _ACAccountTypeIdentifierIdentityServices
__ Accounts: _ACAccountTypeIdentifierJabber
__ Accounts: _ACAccountTypeIdentifierKerberosSSO
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _ACAccountTypeIdentifierLDAP
__ Accounts: _ACAccountTypeIdentifierLinkedInDeprecated
__ Accounts: _ACAccountTypeIdentifierLinkedInLegacy
__ Accounts: _ACAccountTypeIdentifierMSO
__ Accounts: _ACAccountTypeIdentifierMadrid
__ Accounts: _ACAccountTypeIdentifierOSXServerDeprecated
__ Accounts: _ACAccountTypeIdentifierOnMyDevice
__ Accounts: _ACAccountTypeIdentifierPOP
__ Accounts: _ACAccountTypeIdentifierQQ
__ Accounts: _ACAccountTypeIdentifierSMTP
__ Accounts: _ACAccountTypeIdentifierSinaWeiboDeprecated
__ Accounts: _ACAccountTypeIdentifierSingleSignOn
__ Accounts: _ACAccountTypeIdentifierSubscribedCalendar
__ Accounts: _ACAccountTypeIdentifierTencentWeiboDeprecated
__ Accounts: _ACAccountTypeIdentifierTudou
__ Accounts: _ACAccountTypeIdentifierTwitterDeprecated
__ Accounts: _ACAccountTypeIdentifierVimeo
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _ACAccountTypeIdentifierYahooIM
__ Accounts: _ACAccountTypeIdentifierYelp
__ Accounts: _ACAccountTypeIdentifierYouku
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACAccountTypeIdentifieriTunesStoreSandbox
__ Accounts: _ACChangeTypeAdded
__ Accounts: _ACChangeTypeRemoved
__ Accounts: _ACCredentialTypeAppleIDAuthentication
__ Accounts: _ACCredentialTypeOAuth
__ Accounts: _ACCredentialTypeOAuth2
__ Accounts: _ACCredentialTypePassword
__ Accounts: _ACCredentialTypeToken
__ Accounts: _ACCredentialTypeYahooXYMPKI
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _ACDGetAdamOrDisplayIDForPID
__ Accounts: _ACEmailAliasKeyEmailAddresses
__ Accounts: _ACErrorDomain
__ Accounts: _ACErrorKeychainDomain
__ Accounts: _ACFacebookAppIdKeyDeprecated
__ Accounts: _ACFacebookAudienceKeyDeprecated
__ Accounts: _ACFacebookPermissionsKeyDeprecated
__ Accounts: _ACKeepPasswordsAround
__ Accounts: _ACLiverpoolContainerIdKey
__ Accounts: _ACMigrationDidFinishDarwinNotification
__ Accounts: _ACOAuthTokenNoSyncKey
__ Accounts: _ACOAuthTokenNoSyncSeparator
__ Accounts: _ACPasswordKey
__ Accounts: _ACPropertyKeyAccountProperties
__ Accounts: _ACPropertyKeyDataclassProperties
__ Accounts: _ACPropertyKeyEnabledDataclasses
__ Accounts: _ACPropertyKeyProvisionedDataclasses
__ Accounts: _ACRawPasswordKey
__ Accounts: _ACRemoteDeviceCommandAddAccount
__ Accounts: _ACRemoteDeviceCommandDeleteAccount
__ Accounts: _ACRemoteDeviceCommandDeleteAllAccounts
__ Accounts: _ACRemoteDeviceCommandFetchAccounts
__ Accounts: _ACRemoteDeviceCommandInvalidateFetchedAccountsCache
__ Accounts: _ACRemoteDeviceCommandShowCredentialPrompt
__ Accounts: _ACRemoteDeviceCommandUpdateAccount
__ Accounts: _ACRemoteDeviceCommandUpdateAccountCredential
__ Accounts: _ACRemoteDeviceOptionAskForReply
__ Accounts: _ACShouldSuppressPromptsKey
__ Accounts: _ACTencentWeiboAppIdKeyDeprecated
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountMigrationLock
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _OBJC_CLASS_$_ACAccountType
__ Accounts: _OBJC_CLASS_$_ACCredentialItem
__ Accounts: _OBJC_CLASS_$_ACDPropertyEncryption
__ Accounts: _OBJC_CLASS_$_ACDataclassAction
__ Accounts: _OBJC_CLASS_$_ACManagedDefaults
__ Accounts: _OBJC_CLASS_$_ACPersonaManager
__ Accounts: _OBJC_CLASS_$_ACRateLimiter
__ Accounts: _OBJC_CLASS_$_ACRemoteAccountStoreInterface
__ Accounts: _OBJC_CLASS_$_ACRemoteAccountStoreSession
__ Accounts: _OBJC_CLASS_$_ACSystemConfigManager
__ Accounts: _OBJC_CLASS_$_ACTrackedSet
__ Accounts: _OBJC_CLASS_$_ACZeroingString
__ Accounts: _OBJC_METACLASS_$_ACAccountStore
__ Accounts: _OBJC_METACLASS_$_ACRemoteAccountStoreSession
__ Accounts: __ACLogSystem
__ Accounts: __ACSignpostCreate
__ Accounts: __ACSignpostGetNanoseconds
__ Accounts: _kACAccountIdentifier
__ Accounts: _kACAllowedSSLCertificatesKey
__ Accounts: _kACDAllAccountsAccessEntitlement
__ Accounts: _kACDAppleAccountsFullAccessEntitlement
__ Accounts: _kACDAppleIDAuthenticationDefaultAccessEntitlement
__ Accounts: _kACDAppleMediaServicesFullAccessEntitlement
__ Accounts: _kACDApplicationIDFromPIDEntitlement
__ Accounts: _kACDAuthenticationDialogHostEntitlement
__ Accounts: _kACDBundleIDSpoofingEntitlement
__ Accounts: _kACDConnectBeforeAccountMigrationDidFinishEntitlement
__ Accounts: _kACDIDMSAccountFullAccessEntitlement
__ Accounts: _kACDInactiveAcccountsAccessEntitlement
__ Accounts: _kACDShouldNotCoalesceRequests
__ Accounts: _kACDShouldNotUseParentAccount
__ Accounts: _kACDTencentWeiboAccountsDefaultAccessEntitlement
__ Accounts: _kACDYelpAccountsDefaultAccessEntitlement
__ Accounts: _kACDiTunesAccountAccessEntitlement
__ Accounts: _kACDiscoverPropertiesShouldSaveKey
__ Accounts: _kACRenewCredentialsReasonStringKey
__ Accounts: _kACRenewCredentialsShouldAvoidUIKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kACRenewCredentialsShouldPromptBeforeRenewKey
__ Accounts: _kACVerifyCredentialsShouldSaveKey
__ Accounts: _kAccountAuthenticationTypeParent
__ Accounts: _kAccountDataclassBackToMyMacDeprecated
__ Accounts: _kAccountDataclassBackup
__ Accounts: _kAccountDataclassBookmarks
__ Accounts: _kAccountDataclassCKDatabaseService
__ Accounts: _kAccountDataclassCKDeviceService
__ Accounts: _kAccountDataclassCKShareService
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassCloudDesktop
__ Accounts: _kAccountDataclassContacts
__ Accounts: _kAccountDataclassContactsSearch
__ Accounts: _kAccountDataclassContent
__ Accounts: _kAccountDataclassCoreRoutine
__ Accounts: _kAccountDataclassDeviceLocator
__ Accounts: _kAccountDataclassHealth
__ Accounts: _kAccountDataclassHome
__ Accounts: _kAccountDataclassKeyValue
__ Accounts: _kAccountDataclassKeychainSync
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassMediaStream
__ Accounts: _kAccountDataclassMessages
__ Accounts: _kAccountDataclassNetworkVPN
__ Accounts: _kAccountDataclassNews
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassNotifications
__ Accounts: _kAccountDataclassPhotos
__ Accounts: _kAccountDataclassReminders
__ Accounts: _kAccountDataclassServerDocumentsDeprecated
__ Accounts: _kAccountDataclassShareMenu
__ Accounts: _kAccountDataclassSharedStreams
__ Accounts: _kAccountDataclassShoebox
__ Accounts: _kAccountDataclassSiri
__ Accounts: _kAccountDataclassSmartDefaults
__ Accounts: _kAccountDataclassStocks
__ Accounts: _kAccountDataclassUbiquity
__ Accounts: _serializeSecCertificates
__ Accounts: _unserializeSecCertificates
__ AggregateDictionary: _ADClientSetValueForScalarKey
__ CoreData: _NSInMemoryStoreType
__ CoreData: _NSInferMappingModelAutomaticallyOption
__ CoreData: _NSManagedObjectContextDidSaveNotification
__ CoreData: _NSMigratePersistentStoresAutomaticallyOption
__ CoreData: _NSPersistentStoreFileProtectionKey
__ CoreData: _NSReadOnlyPersistentStoreOption
__ CoreData: _NSSQLiteErrorDomain
__ CoreData: _NSSQLitePragmasOption
__ CoreData: _NSSQLiteStoreType
__ CoreData: _OBJC_CLASS_$_NSEntityDescription
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObjectContext
__ CoreData: _OBJC_CLASS_$_NSManagedObjectModel
__ CoreData: _OBJC_CLASS_$_NSMergePolicy
__ CoreData: _OBJC_CLASS_$_NSPersistentStoreCoordinator
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCompare
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyKeyList
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSArray
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ DataMigration: _DMPerformMigrationIfNeeded
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFileProtectionNone
__ Foundation: _NSLocalNotificationCenterType
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLPeerTrustErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ GSS: _GSSRuleAddMatch
__ GSS: _GSSRuleGetMatch
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSSendMessageOptionBypassDuetKey
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _OBJC_CLASS_$_IDSService
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ OAuth: _OBJC_CLASS_$_OACredential
__ OAuth: _OBJC_CLASS_$_OAURLRequestSigner
__ PlugInKit: _OBJC_CLASS_$_PKManager
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SOSCCCopyMyPeerInfo
__ Security: _SOSCCCopyValidPeerPeerInfo
__ Security: _SOSCCIsIcloudKeychainSyncing
__ Security: _SOSCCThisDeviceIsInCircle
__ Security: _SOSPeerGetGestalt
__ Security: _SOSPeerInfoGetPeerDeviceType
__ Security: _SOSPeerInfoGetPeerName
__ Security: _SOSPeerInfoGetVersion
__ Security: _SecAccessControlCreateWithFlags
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecTrustSerialize
__ Security: _kSOSCCCircleChangedNotification
__ Security: _kSecAttrAccessControl
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlock
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccessibleAlwaysPrivate
__ Security: _kSecAttrAccessibleWhenUnlocked
__ Security: _kSecAttrAccount
__ Security: _kSecAttrGeneric
__ Security: _kSecAttrIsInvisible
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecAttrSynchronizableAny
__ Security: _kSecAttrTombstone
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecMatchLimitOne
__ Security: _kSecReturnAttributes
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecUseAuthenticationUI
__ Security: _kSecUseAuthenticationUISkip
__ Security: _kSecUseCallerName
__ Security: _kSecUseOperationPrompt
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ SpringBoardServices: _SBUserNotificationDismissOnLock
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ TCC: _TCCAccessCopyInformation
__ TCC: _TCCAccessReset
__ TCC: _TCCAccessResetForBundle
__ TCC: _TCCAccessSetForBundle
__ TCC: _kTCCInfoBundle
__ TCC: _kTCCInfoGranted
__ TCC: _kTCCServiceFacebook
__ TCC: _kTCCServiceSinaWeibo
__ TCC: _kTCCServiceTencentWeibo
__ TCC: _kTCCServiceTwitter
__ WirelessDiagnostics: _AWDPostMetric
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: dyld_stub_binder
__ liblockdown.dylib: _lockdown_connect
__ liblockdown.dylib: _lockdown_copy_value
__ liblockdown.dylib: _lockdown_disconnect
__ liblockdown.dylib: _lockdown_set_value
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _sel_getName
ACRemoteCommandHandler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ACRemoteCommandHandler init]
  -[ACRemoteCommandHandler .cxx_destruct]
  -[ACRemoteCommandHandler _saveAccount:completion:]
  -[ACRemoteCommandHandler _addAccount:withOptions:completion:]
  -[ACRemoteCommandHandler _updateAccount:withCompletion:]
  -[ACRemoteCommandHandler _promptUserForAccountCredential:withOptions:completion:]
  -[ACRemoteCommandHandler _deleteAccount:withCompletion:]
  -[ACRemoteCommandHandler _authenticateAccount:withOptions:completion:]
  -[ACRemoteCommandHandler _removeAllAccountsWithCompletion:]
  -[ACRemoteCommandHandler _fetchAccountsWithCompletion:]
  -[ACRemoteCommandHandler _invalidateFetchedAccountsCacheWithCompletion:]
  -[ACRemoteCommandHandler _localAccountMatchingRemoteAccount:]
  -[ACRemoteCommandHandler handleCommand:forAccount:options:completion:]


ACDKeychainManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDKeychainManager initialize]
  +[ACDKeychainManager setServer:]
  +[ACDKeychainManager server]
  +[ACDKeychainManager _shouldSyncCredentialForAccount:]
  +[ACDKeychainManager credentialForAccount:clientID:error:]
  +[ACDKeychainManager credentialForManagedAccountObject:clientID:error:]
  +[ACDKeychainManager credentialForManagedAccountObject:clientID:]
  +[ACDKeychainManager _fetchOptionsForAccount:]
  +[ACDKeychainManager _credentialForAccountWithID:accountTypeID:credentialType:clientID:allowAdditionalAccountTypeSegment:options:error:]
  +[ACDKeychainManager _migrateCredential:forAccount:clientID:]
  +[ACDKeychainManager _fallbackToUnsyncedOAuthTokens:]
  +[ACDKeychainManager _createNoSyncOAuthTokens:account:clientID:]
  +[ACDKeychainManager keychainServiceNameForClientID:accountTypeIdentifier:additionalAccountTypeSegment:key:]
  +[ACDKeychainManager _itemForServiceName:username:accessGroup:options:error:]
  +[ACDKeychainManager _setCredentialForAccount:clientID:handleCredentialItemRemovals:error:]
  +[ACDKeychainManager removeCredentialForAccount:clientID:error:]
  +[ACDKeychainManager _saveCredential:forAccount:clientID:error:]
  +[ACDKeychainManager _removeCredentialItemWithKey:forAccountWithID:username:accountTypeID:clientID:options:error:]
  +[ACDKeychainManager _setNonPersistentCredentialTimerForAccount:]
  +[ACDKeychainManager _setItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:options:error:]
  +[ACDKeychainManager removeCredentialForAccount:error:]
  +[ACDKeychainManager _removeCredentialForAccountWithUsername:accountQualifiedUsername:accountIdentifier:accountTypeIdentifier:credentialType:clientID:options:error:]
  +[ACDKeychainManager _removeItemForService:username:accessGroup:options:error:]
  +[ACDKeychainManager _accountTypeIdentifierFromComponents:handler:]
  +[ACDKeychainManager _keychainLock_updateItem:existingPassword:forServiceName:username:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager _keychainLock_addItem:forServiceName:username:accessGroup:accessibility:syncable:requiresTouchID:error:]
  +[ACDKeychainManager _keychainLock_removeItemForService:username:accessGroup:options:error:]
  +[ACDKeychainManager _setAccountSyncItem:username:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager removeDataclassAccountSyncItemForAccount:]
  +[ACDKeychainManager _setAccountSyncItem:hostname:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager _setAccountSyncMigrateItem:username:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager _setDataclassSyncItem:username:accessGroup:accessibility:options:error:]
  +[ACDKeychainManager keychainDeletedAccounts]
  +[ACDKeychainManager _accountSyncItemExistsForServiceName:username:]
  +[ACDKeychainManager _accountSyncItemExistsForServiceName:hostname:]
  +[ACDKeychainManager _dataclassSyncItemExistsForServiceName:username:]
  +[ACDKeychainManager accountSyncMigrated]
  +[ACDKeychainManager keychainAccounts]
  +[ACDKeychainManager keychainHostnameAccounts]
  +[ACDKeychainManager keychainDeletedContactAccounts]
  +[ACDKeychainManager makeItemInvisibleWithService:andAccount:]
  +[ACDKeychainManager credentialForManagedAccountObject:]
  +[ACDKeychainManager credentialForAccount:clientID:]
  +[ACDKeychainManager setCredentialForAccount:]
  +[ACDKeychainManager setCredentialForAccount:clientID:]
  +[ACDKeychainManager setCredentialForAccount:error:]
  +[ACDKeychainManager setCredentialForAccount:clientID:error:]
  +[ACDKeychainManager setCredentialForNewAccount:clientID:error:]
  +[ACDKeychainManager removeCredentialForAccount:]
  +[ACDKeychainManager removeCredentialForAccount:clientID:]
  +[ACDKeychainManager removeCredentialForAccount:key:error:]
  +[ACDKeychainManager componentsFromKeychainServiceName:handler:]
  +[ACDKeychainManager createAccountSyncItemForAccount:clientID:properties:error:]
  +[ACDKeychainManager createAccountSyncMigratedItemWithError:]
  +[ACDKeychainManager createDataclassAccountSyncItemForAccount:withDataclassActions:]
  +[ACDKeychainManager removeAccountSyncItemForAccount:clientID:properties:error:]
  +[ACDKeychainManager removeTombstonesForAccount:clientID:error:]
  +[ACDKeychainManager accountSynciOSVersion]
  +[ACDKeychainManager setAccountSynciOSVersion:]
  +[ACDKeychainManager keychainDeletedHostnameAccounts]


ACDUserNotification : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDUserNotification showUserNotificationWithTitle:message:cancelButtonTitle:otherButtonTitle:withCompletionBlock:]


ACDQueueDictionary : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ACDQueueDictionary init]
  -[ACDQueueDictionary isEmpty]
  -[ACDQueueDictionary .cxx_destruct]
  -[ACDQueueDictionary isQueueEmptyForKey:]
  -[ACDQueueDictionary addObject:toQueueForKey:]
  -[ACDQueueDictionary dequeueFirstObjectInQueueForKey:]
  -[ACDQueueDictionary firstObjectInQueueForKey:]
  -[ACDQueueDictionary dequeueAllObjectsInQueueForKey:]
  -[ACDQueueDictionary keyForRandomQueue]


ACDDatabaseInitializer : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDDatabaseInitializer new]

  // instance methods
  -[ACDDatabaseInitializer init]
  -[ACDDatabaseInitializer .cxx_destruct]
  -[ACDDatabaseInitializer _accessKeys]
  -[ACDDatabaseInitializer _accounts]
  -[ACDDatabaseInitializer _dataclasses]
  -[ACDDatabaseInitializer _addTwitterAccountType]
  -[ACDDatabaseInitializer _addWeiboAccountType]
  -[ACDDatabaseInitializer _addAppleIDAccountType]
  -[ACDDatabaseInitializer _addFlickrAccountType]
  -[ACDDatabaseInitializer _addVimeoAccountType]
  -[ACDDatabaseInitializer _addLinkedInAccountType]
  -[ACDDatabaseInitializer _addFacebookAccountType]
  -[ACDDatabaseInitializer _addCalDAVAccountType]
  -[ACDDatabaseInitializer _addCardDAVAccountType]
  -[ACDDatabaseInitializer _addDataclassWithName:]
  -[ACDDatabaseInitializer _addContactsCalendarsDataclassesToFB]
  -[ACDDatabaseInitializer _addTudouAccountType]
  -[ACDDatabaseInitializer _addYoukuAccountType]
  -[ACDDatabaseInitializer _updateWeiboAccountTypeIfNecessary]
  -[ACDDatabaseInitializer _addSupportsAuthenticationAttributeToAccountTypes]
  -[ACDDatabaseInitializer _addSupportsAuthenticationAttributeToAccounts]
  -[ACDDatabaseInitializer _addMissingAccountTypes]
  -[ACDDatabaseInitializer _addSyncableDataclassesToCardAndCalDAV]
  -[ACDDatabaseInitializer _addSupportsMultipleAccountsAttributeToAccountTypes]
  -[ACDDatabaseInitializer _addYelpAccountType]
  -[ACDDatabaseInitializer _addFacebookAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToFacebookAccountType]
  -[ACDDatabaseInitializer _removeFacebookPermissionGroupAccessKey]
  -[ACDDatabaseInitializer _removeFacebookAppVersionAccessKey]
  -[ACDDatabaseInitializer _addFacebookAudienceAccessKey]
  -[ACDDatabaseInitializer _addFacebookAudienceAccessKeyToFacebookAccountType]
  -[ACDDatabaseInitializer _addAppleAccountType]
  -[ACDDatabaseInitializer _addLiverpoolAccountType]
  -[ACDDatabaseInitializer _addLiverpoolAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToLiverpoolAccountType]
  -[ACDDatabaseInitializer _addTencentWeiboAccountType]
  -[ACDDatabaseInitializer _upgradeLinkedInAccountType]
  -[ACDDatabaseInitializer _addSMTPAccountType]
  -[ACDDatabaseInitializer _addGmailAccountType]
  -[ACDDatabaseInitializer _addYahooAccountType]
  -[ACDDatabaseInitializer _addRemindersDataclassToCalDAVAccountType]
  -[ACDDatabaseInitializer _addFaceTimeAccountType]
  -[ACDDatabaseInitializer _addMadridAccountType]
  -[ACDDatabaseInitializer _addGameCenterAccountType]
  -[ACDDatabaseInitializer _addiTunesStoreAccountType]
  -[ACDDatabaseInitializer _addLinkedInAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToLinkedInAccountType]
  -[ACDDatabaseInitializer _limitFlickrToOneAccount]
  -[ACDDatabaseInitializer _limitVimeoToOneAccount]
  -[ACDDatabaseInitializer _updateFlickrCredentialTypeToOAuth]
  -[ACDDatabaseInitializer _updateVimeoCredentialTypeToOAuth]
  -[ACDDatabaseInitializer _addIdentityServicesAccountType]
  -[ACDDatabaseInitializer _limitLinkedInToOneAccount]
  -[ACDDatabaseInitializer _ensureDataclassesAllExist]
  -[ACDDatabaseInitializer _addSubscribedCalendarAccountType]
  -[ACDDatabaseInitializer _addBookmarkDAVAccountType]
  -[ACDDatabaseInitializer _addExchangeAccountType]
  -[ACDDatabaseInitializer _addHotmailAccountType]
  -[ACDDatabaseInitializer _addIMAPNotesAccountType]
  -[ACDDatabaseInitializer _addLDAPAccountType]
  -[ACDDatabaseInitializer _ensureProperAccountTypeDataclasses]
  -[ACDDatabaseInitializer _addPasswordCredentialTypeToSMTPAccountType]
  -[ACDDatabaseInitializer _addPasswordCredentialTypeToGmailAccountType]
  -[ACDDatabaseInitializer _addTokenCredentialTypeToYahooAccountType]
  -[ACDDatabaseInitializer _addIMAPAccountType]
  -[ACDDatabaseInitializer _addPOPAccountType]
  -[ACDDatabaseInitializer _addIMAPMailAccountType]
  -[ACDDatabaseInitializer _updateTencentWeiboCredentialTypeToOAuth2]
  -[ACDDatabaseInitializer _addTencentWeiboAccessKeys]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToTencentWeiboAccountType]
  -[ACDDatabaseInitializer _addFindMyiPhoneAccountType]
  -[ACDDatabaseInitializer _updateIdentityServicesAccountTypeToSupportAuthenticationAndMultipleAccounts]
  -[ACDDatabaseInitializer _updateIdentityServicesAccountDescription]
  -[ACDDatabaseInitializer _makeTencentWeiboSingleton]
  -[ACDDatabaseInitializer _addHolidayCalendarAccountType]
  -[ACDDatabaseInitializer _addFMFAccountType]
  -[ACDDatabaseInitializer _setOwningBundleIDForNativeAccountTypes]
  -[ACDDatabaseInitializer _createLiverpoolDataclasses]
  -[ACDDatabaseInitializer _addCloudKitAccountType]
  -[ACDDatabaseInitializer _addAccessKeysAttributeToCloudKitAccountType]
  -[ACDDatabaseInitializer _addAppleIDAuthenticationAccountType]
  -[ACDDatabaseInitializer _removeLiverpoolTypes]
  -[ACDDatabaseInitializer _addCloudKitDataclasses]
  -[ACDDatabaseInitializer _setCloudKitCredentialType]
  -[ACDDatabaseInitializer _addAndConfigureAllOSXAccountTypes]
  -[ACDDatabaseInitializer _switchGoogleToOAuthAuthentication]
  -[ACDDatabaseInitializer _addDocumentsAndVPNDataclass]
  -[ACDDatabaseInitializer _addIDMSAccountType]
  -[ACDDatabaseInitializer _updateAOLAndAddNotificationsDataclass]
  -[ACDDatabaseInitializer _addOnMyDeviceAccountType]
  -[ACDDatabaseInitializer _switchYahooToOAuthAuthentication]
  -[ACDDatabaseInitializer _updateOSXServerAccountDescription]
  -[ACDDatabaseInitializer _configureSMTPAccountType]
  -[ACDDatabaseInitializer _allowMultipleAppleIDAuthenticationAccounts]
  -[ACDDatabaseInitializer _makeTudouYoukuSingletons]
  -[ACDDatabaseInitializer _supportiCloudNewsDataclass]
  -[ACDDatabaseInitializer _ensurePresenceOfNewsDataclass]
  -[ACDDatabaseInitializer _supportiCloudKeychainSyncDataclass]
  -[ACDDatabaseInitializer _addMSOAccountType]
  -[ACDDatabaseInitializer _addSingleSignOnAccountType]
  -[ACDDatabaseInitializer _switchHotmailToOAuthAuthentication]
  -[ACDDatabaseInitializer _setSupportedDataclassesForAOLAccountType]
  -[ACDDatabaseInitializer _addNotesDataclassToAASupportedDataclasses]
  -[ACDDatabaseInitializer _updateMacOSServerAccountDescription]
  -[ACDDatabaseInitializer _removeMessengerFromYahooSupportedDataclasses]
  -[ACDDatabaseInitializer _setYahooAccountsProvisionedDataclassesToSupportedOnes]
  -[ACDDatabaseInitializer _setCloudKitAllowsMultipleAccounts]
  -[ACDDatabaseInitializer _removeMessagesFromGoogleSupportedDataclasses]
  -[ACDDatabaseInitializer _removeAIMAccounts]
  -[ACDDatabaseInitializer _addFacebookAndDAVLegacyAccountTypes]
  -[ACDDatabaseInitializer _changeFacebookAccountToLegacyAccountType]
  -[ACDDatabaseInitializer _addObsoleteAttributeToAccountTypes]
  -[ACDDatabaseInitializer _removeMessagesFromAOLSupportedDataclasses]
  -[ACDDatabaseInitializer _addiTunesStoreSandboxAccountType]
  -[ACDDatabaseInitializer _addLinkedInLegacyAccountType]
  -[ACDDatabaseInitializer _changeFacebookAndLinkedInAccountsToLegacyAccountTypes]
  -[ACDDatabaseInitializer _changeSocialAccountTypeObsoleteAttributes]
  -[ACDDatabaseInitializer _removeBTMMType]
  -[ACDDatabaseInitializer _switchAolAccountsToOAuth]
  -[ACDDatabaseInitializer _aolSupportsAuthentication]
  -[ACDDatabaseInitializer _removeRedundantDataclasses]
  -[ACDDatabaseInitializer _accountTypes]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:syncableDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:credentialProtectionPolicy:]
  -[ACDDatabaseInitializer _accountTypeWithIdentifier:]
  -[ACDDatabaseInitializer _addAccountTypeWithIdentifier:displayName:visibility:supportedDataclasses:credentialType:supportsAuthentication:supportsMultipleAccounts:]
  -[ACDDatabaseInitializer _dataclassWithName:]
  -[ACDDatabaseInitializer _addAccessKeyWithName:]
  -[ACDDatabaseInitializer _accessKeyWithName:]
  -[ACDDatabaseInitializer _ensureAccountTypeWithIdentifier:supportsDataclasses:syncsDataclasses:]
  -[ACDDatabaseInitializer _addCredentialType:toAccountType:supportsAuthentication:]
  -[ACDDatabaseInitializer initWithDatabaseConnection:]
  -[ACDDatabaseInitializer updateDefaultContentIfNecessary:]
  -[ACDDatabaseInitializer _resultsForEntityNamed:]
  -[ACDDatabaseInitializer _switchYahooToPasswordAuthentication]


ACDDatabase : NSObject /usr/lib/libSystem.B.dylib <ACDDatabaseConnectionDelegate, ACDDatabaseProtocol>
 @property  NSURL *databaseURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDDatabase new]

  // instance methods
  -[ACDDatabase init]
  -[ACDDatabase .cxx_destruct]
  -[ACDDatabase createConnection]
  -[ACDDatabase databaseURL]
  -[ACDDatabase initWithDatabaseURL:]
  -[ACDDatabase initWithDatabaseURL:storeOptions:]
  -[ACDDatabase _addPersistentStoreWithType:configuration:URL:options:error:]
  -[ACDDatabase _shouldResetPersistentStoreAfterError:]
  -[ACDDatabase _persistentStoreCoodinator_resetPersistentStoreCoordinatorWithError:]
  -[ACDDatabase _backupURL]
  -[ACDDatabase _unverifiedBackupURL]
  -[ACDDatabase _performBackupToURL:unverifiedBackupURL:error:]
  -[ACDDatabase restoreFromBackupReturningError:]
  -[ACDDatabase _validateDatabaseAtURL:error:]
  -[ACDDatabase databaseConnection:encounteredUnrecoverableError:]
  -[ACDDatabase performBackupReturningError:]
  -[ACDDatabase resetReturningError:]


ACDTransientDatabase : NSObject /usr/lib/libSystem.B.dylib <ACDDatabaseProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDTransientDatabase init]
  -[ACDTransientDatabase .cxx_destruct]
  -[ACDTransientDatabase createConnection]
  -[ACDTransientDatabase _addPersistentStoreWithType:configuration:URL:options:error:]


ACDPreferences : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDPreferences sharedPreferences]

  // instance methods
  -[ACDPreferences synchronize]
  -[ACDPreferences objectForKey:]
  -[ACDPreferences setObject:forKey:]
  -[ACDPreferences reset]
  -[ACDPreferences serverTimeoutInterval]


AWDAccountsRenewCredentialsBegin : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAccountType
 @property  NSString *accountType
 @property  BOOL hasAvoidUI
 @property  BOOL avoidUI
 @property  BOOL hasShouldForce
 @property  BOOL shouldForce
 @property  BOOL hasClientBundleID
 @property  NSString *clientBundleID

  // instance methods
  -[AWDAccountsRenewCredentialsBegin isEqual:]
  -[AWDAccountsRenewCredentialsBegin copyWithZone:]
  -[AWDAccountsRenewCredentialsBegin .cxx_destruct]
  -[AWDAccountsRenewCredentialsBegin dictionaryRepresentation]
  -[AWDAccountsRenewCredentialsBegin timestamp]
  -[AWDAccountsRenewCredentialsBegin hasTimestamp]
  -[AWDAccountsRenewCredentialsBegin setTimestamp:]
  -[AWDAccountsRenewCredentialsBegin writeTo:]
  -[AWDAccountsRenewCredentialsBegin mergeFrom:]
  -[AWDAccountsRenewCredentialsBegin readFrom:]
  -[AWDAccountsRenewCredentialsBegin copyTo:]
  -[AWDAccountsRenewCredentialsBegin accountType]
  -[AWDAccountsRenewCredentialsBegin setAccountType:]
  -[AWDAccountsRenewCredentialsBegin setHasTimestamp:]
  -[AWDAccountsRenewCredentialsBegin clientBundleID]
  -[AWDAccountsRenewCredentialsBegin hasAccountType]
  -[AWDAccountsRenewCredentialsBegin setClientBundleID:]
  -[AWDAccountsRenewCredentialsBegin shouldForce]
  -[AWDAccountsRenewCredentialsBegin setShouldForce:]
  -[AWDAccountsRenewCredentialsBegin setAvoidUI:]
  -[AWDAccountsRenewCredentialsBegin setHasAvoidUI:]
  -[AWDAccountsRenewCredentialsBegin hasAvoidUI]
  -[AWDAccountsRenewCredentialsBegin setHasShouldForce:]
  -[AWDAccountsRenewCredentialsBegin hasShouldForce]
  -[AWDAccountsRenewCredentialsBegin hasClientBundleID]
  -[AWDAccountsRenewCredentialsBegin avoidUI]


ACDAccountChange : NSObject /usr/lib/libSystem.B.dylib
 @property  int changeType
 @property  ACAccount *account
 @property  ACAccount *oldAccount

  // class methods
  +[ACDAccountChange changeWithChangeType:account:oldAccount:]

  // instance methods
  -[ACDAccountChange .cxx_destruct]
  -[ACDAccountChange changeType]
  -[ACDAccountChange account]
  -[ACDAccountChange initWithChangeType:account:oldAccount:]
  -[ACDAccountChange oldAccount]


ACDFakeRemoteAccountStoreSession : ACRemoteAccountStoreSession /System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
  // instance methods
  -[ACDFakeRemoteAccountStoreSession .cxx_destruct]
  -[ACDFakeRemoteAccountStoreSession remoteObjectProxyWithErrorHandler:]
  -[ACDFakeRemoteAccountStoreSession synchronousRemoteObjectProxyWithErrorHandler:]
  -[ACDFakeRemoteAccountStoreSession remoteObjectProxy]
  -[ACDFakeRemoteAccountStoreSession initWithFakeProxy:]


ACDAccountStore : ACAccountStore /System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary <ACRemoteAccountStoreProtocol>
 @property  ACDDatabaseConnection *databaseConnection
 @property  ACDAuthenticationPluginManager *authenticationPluginManager
 @property  ACDAccessPluginManager *accessPluginManager
 @property  ACDDataclassOwnersManager *dataclassOwnersManager
 @property  ACDAuthenticationDialogManager *authenticationDialogManager
 @property  ACRemoteDeviceProxy *remoteDeviceProxy
 @property  ACDAccountNotifier *accountNotifier
 @property  ACDDatabaseBackupActivity *databaseBackupActivity
 @property  BOOL notificationsEnabled
 @property  BOOL migrationInProgress
 @property  <ACDAccountStoreDelegate> *delegate
 @property  ACDClient *client
 @property  ACDClientAuthorizationManager *authorizationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDAccountStore init]
  -[ACDAccountStore delegate]
  -[ACDAccountStore setDelegate:]
  -[ACDAccountStore .cxx_destruct]
  -[ACDAccountStore client]
  -[ACDAccountStore setClient:]
  -[ACDAccountStore connectToRemoteAccountStoreUsingEndpoint:]
  -[ACDAccountStore remoteAccountStoreSession]
  -[ACDAccountStore setNotificationsEnabled:]
  -[ACDAccountStore longLivedRemoteAccountStoreSession]
  -[ACDAccountStore accountWithIdentifier:handler:]
  -[ACDAccountStore accountTypeWithIdentifier:handler:]
  -[ACDAccountStore accountsWithHandler:]
  -[ACDAccountStore accountsWithAccountType:handler:]
  -[ACDAccountStore accountsWithAccountType:options:completion:]
  -[ACDAccountStore accountsOnPairedDeviceWithAccountType:handler:]
  -[ACDAccountStore insertAccountType:withHandler:]
  -[ACDAccountStore removeAccountType:withHandler:]
  -[ACDAccountStore removeAccount:withDataclassActions:completion:]
  -[ACDAccountStore canSaveAccount:completion:]
  -[ACDAccountStore saveAccount:verify:dataclassActions:completion:]
  -[ACDAccountStore requestAccessForAccountTypeWithIdentifier:options:withHandler:]
  -[ACDAccountStore verifyCredentialsForAccount:options:completion:]
  -[ACDAccountStore renewCredentialsForAccount:options:completion:]
  -[ACDAccountStore accountTypesWithHandler:]
  -[ACDAccountStore dataclassesWithHandler:]
  -[ACDAccountStore credentialForAccountWithIdentifier:handler:]
  -[ACDAccountStore credentialForAccount:serviceID:handler:]
  -[ACDAccountStore setCredential:forAccount:serviceID:completion:]
  -[ACDAccountStore credentialItemsWithCompletion:]
  -[ACDAccountStore credentialItemForAccount:serviceName:completion:]
  -[ACDAccountStore insertCredentialItem:completion:]
  -[ACDAccountStore saveCredentialItem:completion:]
  -[ACDAccountStore removeCredentialItem:completion:]
  -[ACDAccountStore parentAccountForAccountWithIdentifier:handler:]
  -[ACDAccountStore childAccountsForAccountWithIdentifier:handler:]
  -[ACDAccountStore childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:]
  -[ACDAccountStore enabledDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStore provisionedDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStore supportedDataclassesForAccountType:handler:]
  -[ACDAccountStore syncableDataclassesForAccountType:handler:]
  -[ACDAccountStore accessKeysForAccountType:handler:]
  -[ACDAccountStore appPermissionsForAccountType:withHandler:]
  -[ACDAccountStore setPermissionGranted:forBundleID:onAccountType:withHandler:]
  -[ACDAccountStore clearAllPermissionsGrantedForAccountType:withHandler:]
  -[ACDAccountStore permissionForAccountType:withHandler:]
  -[ACDAccountStore grantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStore clearGrantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStore typeIdentifierForDomain:withHandler:]
  -[ACDAccountStore displayAccountTypeForAccountWithIdentifier:handler:]
  -[ACDAccountStore accountIdentifiersEnabledForDataclass:handler:]
  -[ACDAccountStore accountIdentifiersEnabledToSyncDataclass:handler:]
  -[ACDAccountStore preloadDataclassOwnersWithCompletion:]
  -[ACDAccountStore dataclassActionsForAccountSave:completion:]
  -[ACDAccountStore dataclassActionsForAccountDeletion:completion:]
  -[ACDAccountStore isPerformingDataclassActionsForAccount:completion:]
  -[ACDAccountStore accountExistsWithDescription:completion:]
  -[ACDAccountStore isTetheredSyncingEnabledForDataclass:completion:]
  -[ACDAccountStore tetheredSyncSourceTypeForDataclass:completion:]
  -[ACDAccountStore kerberosAccountsForDomainFromURL:completion:]
  -[ACDAccountStore isPushSupportedForAccount:completion:]
  -[ACDAccountStore accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:]
  -[ACDAccountStore updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStore handleURL:]
  -[ACDAccountStore clientTokenForAccountIdentifier:completion:]
  -[ACDAccountStore addClientToken:forAccountIdentifier:completion:]
  -[ACDAccountStore discoverPropertiesForAccount:options:completion:]
  -[ACDAccountStore openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAccountStore openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAccountStore visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:]
  -[ACDAccountStore accountsWithAccountTypeIdentifiers:preloadedProperties:completion:]
  -[ACDAccountStore notifyRemoteDevicesOfModifiedAccount:withChangeType:completion:]
  -[ACDAccountStore saveAccount:toPairedDeviceWithOptions:completion:]
  -[ACDAccountStore removeAccountsFromPairedDeviceWithCompletion:]
  -[ACDAccountStore triggerKeychainMigrationIfNecessary:]
  -[ACDAccountStore reportTelemetryForLandmarkEvent:]
  -[ACDAccountStore scheduleBackupIfNonexistent:]
  -[ACDAccountStore setClientBundleID:withHandler:]
  -[ACDAccountStore notificationsEnabled]
  -[ACDAccountStore saveAccount:withHandler:]
  -[ACDAccountStore notifyRemoteDevicesOfModifiedAccount:withChangeType:]
  -[ACDAccountStore accountTypeWithIdentifier:]
  -[ACDAccountStore _accountWithIdentifier:]
  -[ACDAccountStore _accountTypeWithIdentifier:]
  -[ACDAccountStore initWithClient:databaseConnection:]
  -[ACDAccountStore accountNotifier]
  -[ACDAccountStore _childAccountsForAccountWithID:]
  -[ACDAccountStore isMigrationInProgress]
  -[ACDAccountStore _performDataclassActions:forAccount:error:]
  -[ACDAccountStore _clientTokenQueue]
  -[ACDAccountStore _removeClientTokenForAccountIdentifer:]
  -[ACDAccountStore _delegate_accountStoreDidSaveAccount:]
  -[ACDAccountStore dataclassOwnersManager]
  -[ACDAccountStore _addAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore _setAccountManagedObjectRelationships:withAccount:oldAccount:error:]
  -[ACDAccountStore _commitOrRollbackDataclassActions:forAccount:originalEnabledDataclasses:]
  -[ACDAccountStore _updateAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore _deleteAccountNoSave:withDataclassActions:error:]
  -[ACDAccountStore _displayAccountForAccount:]
  -[ACDAccountStore _dataclassWithName:createIfNecessary:]
  -[ACDAccountStore _updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStore _saveWithError:]
  -[ACDAccountStore _allAccounts_sync]
  -[ACDAccountStore _legacyCredentialForAccount:client:error:]
  -[ACDAccountStore _credentialItemWithAccountIdentifier:serviceName:]
  -[ACDAccountStore _accountsWithAccountType:options:error:]
  -[ACDAccountStore _predicateForFetchingAccountsWithManagedAccountTypeID:options:]
  -[ACDAccountStore _canManagedAccountType:syncManagedDataclass:]
  -[ACDAccountStore _isManagedAccount:enabledForManagedDataclass:]
  -[ACDAccountStore accountsExistWithAccountTypeIdentifier:]
  -[ACDAccountStore _removeAccountNoSave:withDataclassActions:withError:]
  -[ACDAccountStore shouldPreventAccountCreationWithObsoleteAccountType]
  -[ACDAccountStore _canSaveAccount:error:]
  -[ACDAccountStore _completeSave:dataclassActions:completion:]
  -[ACDAccountStore _lockForAccountType:]
  -[ACDAccountStore _handleAccountAdd:withDataclassActions:error:]
  -[ACDAccountStore _handleAccountMod:withDataclassActions:withError:]
  -[ACDAccountStore _requestAccessForAccountTypeWithIdentifier:options:allowUserInteraction:withHandler:]
  -[ACDAccountStore authorizationManager]
  -[ACDAccountStore _clientTokenForAccountIdentifier:error:]
  -[ACDAccountStore authenticationDialogManager]
  -[ACDAccountStore databaseBackupActivity]
  -[ACDAccountStore accountsWithAccountTypeIdentifier:]
  -[ACDAccountStore addAccountNoSave:error:]
  -[ACDAccountStore updateAccountNoSave:error:]
  -[ACDAccountStore deleteAccountNoSave:error:]
  -[ACDAccountStore masterCredentialForAccountIdentifier:]
  -[ACDAccountStore _accountsWithAcountType:error:]
  -[ACDAccountStore saveAccount:pid:verify:dataclassActions:completion:]
  -[ACDAccountStore remoteDeviceProxy]
  -[ACDAccountStore setRemoteDeviceProxy:]
  -[ACDAccountStore databaseConnection]
  -[ACDAccountStore authenticationPluginManager]
  -[ACDAccountStore setAuthenticationPluginManager:]
  -[ACDAccountStore accessPluginManager]
  -[ACDAccountStore setAccessPluginManager:]
  -[ACDAccountStore setDataclassOwnersManager:]
  -[ACDAccountStore setAuthenticationDialogManager:]
  -[ACDAccountStore setAccountNotifier:]
  -[ACDAccountStore setDatabaseBackupActivity:]
  -[ACDAccountStore setMigrationInProgress:]


ACDAccountNotifier : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *notificationEntries

  // class methods
  +[ACDAccountNotifier allNotificationEntries]

  // instance methods
  -[ACDAccountNotifier init]
  -[ACDAccountNotifier .cxx_destruct]
  -[ACDAccountNotifier canRemoveAccount:inStore:error:]
  -[ACDAccountNotifier postWillChangeNotificationForType:inStore:newAccount:oldAccount:]
  -[ACDAccountNotifier postDidChangeNotificationForType:inStore:newAccount:oldAccount:]
  -[ACDAccountNotifier postWillPerformDataclassActionsOnAccount:forDataclasses:]
  -[ACDAccountNotifier postDidPerformDataclassActionsOnAccount:forDataclasses:]
  -[ACDAccountNotifier canSaveAccount:inStore:error:]
  -[ACDAccountNotifier initWithNotificationEntries:]
  -[ACDAccountNotifier _pluginsRegisteredForAccount:]
  -[ACDAccountNotifier _pluginsRegisteredForNewAccount:oldAccount:]
  -[ACDAccountNotifier _unsafe_pluginsRegisteredForAccount:]
  -[ACDAccountNotifier _unsafe_pluginsRegisteredForNewAccount:oldAccount:]
  -[ACDAccountNotifier _provisionedDataclassesForNewAccount:oldAccount:]
  -[ACDAccountNotifier addNotificationEntry:]
  -[ACDAccountNotifier removeAllNotificationEntries]
  -[ACDAccountNotifier notificationEntries]


ACDKeychainMigrator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDKeychainMigrator sharedInstance]

  // instance methods
  -[ACDKeychainMigrator init]
  -[ACDKeychainMigrator .cxx_destruct]
  -[ACDKeychainMigrator migrateAllKeychainItems]
  -[ACDKeychainMigrator allKeychainItems]
  -[ACDKeychainMigrator migrateKeychainItem:]
  -[ACDKeychainMigrator _validateKeychainItemClass:]
  -[ACDKeychainMigrator _migrateUUIDKeychainItems:]
  -[ACDKeychainMigrator _keychainItemsForAccount:accountTypeIdentifiers:]
  -[ACDKeychainMigrator _keychainItemFromAttributesArray:]
  -[ACDKeychainMigrator _keychainItemFromAttributes:]


ACDPluginLoader : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDPluginLoader _currentSystemVersion]
  +[ACDPluginLoader pluginBundlesAtSubpath:]
  +[ACDPluginLoader _accountsPluginDirectoryURL:]
  +[ACDPluginLoader _validatedBundleAtURL:]
  +[ACDPluginLoader _buildPluginCache]
  +[ACDPluginLoader pluginWithName:inSubpath:]
  +[ACDPluginLoader pluginForIdentifier:subpath:]


ACDLazyArray : NSArray /System/Library/Frameworks/CoreServices.framework/CoreServices
  // instance methods
  -[ACDLazyArray init]
  -[ACDLazyArray initWithObjects:count:]
  -[ACDLazyArray count]
  -[ACDLazyArray objectAtIndex:]
  -[ACDLazyArray initWithCoder:]
  -[ACDLazyArray .cxx_destruct]
  -[ACDLazyArray initWithInitializer:]


ACDKeychainItem : NSObject /usr/lib/libSystem.B.dylib
 @property  r^{__CFData=} persistentRef
 @property  NSString *account
 @property  NSString *service
 @property  NSString *accessGroup
 @property  NSString *accessibility
 @property  BOOL synchronizable
 @property  ^{__SecAccessControl=} accessControlRef
 @property  NSDictionary *metadata
 @property  long long version

  // class methods
  +[ACDKeychainItem new]

  // instance methods
  -[ACDKeychainItem init]
  -[ACDKeychainItem dealloc]
  -[ACDKeychainItem .cxx_destruct]
  -[ACDKeychainItem version]
  -[ACDKeychainItem setVersion:]
  -[ACDKeychainItem setMetadata:]
  -[ACDKeychainItem metadata]
  -[ACDKeychainItem account]
  -[ACDKeychainItem setAccount:]
  -[ACDKeychainItem save:]
  -[ACDKeychainItem service]
  -[ACDKeychainItem _clearDirtyProperties]
  -[ACDKeychainItem _markPropertyDirty:]
  -[ACDKeychainItem reload]
  -[ACDKeychainItem setAccessibility:]
  -[ACDKeychainItem _setValue:forProperty:]
  -[ACDKeychainItem _reloadProperties]
  -[ACDKeychainItem setService:]
  -[ACDKeychainItem accessGroup]
  -[ACDKeychainItem setAccessGroup:]
  -[ACDKeychainItem persistentRef]
  -[ACDKeychainItem setSynchronizable:]
  -[ACDKeychainItem accessibility]
  -[ACDKeychainItem initWithPersistentRef:properties:]
  -[ACDKeychainItem _modifiedProperties]
  -[ACDKeychainItem _metadataWithError:]
  -[ACDKeychainItem synchronizable]
  -[ACDKeychainItem _setMetadata:withError:]
  -[ACDKeychainItem initWithPersistentRef:]
  -[ACDKeychainItem accessControlRef]


ACRemoteDeviceMessage : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *command
 @property  ACAccount *account
 @property  NSDictionary *options
 @property  NSString *sentMessageIdentifier
 @property  BOOL success
 @property  NSError *error
 @property  NSObject<NSSecureCoding> *result
 @property  NSData *data
 @property  NSString *identifier
 @property  BOOL needsReply
 @property  BOOL isReply

  // class methods
  +[ACRemoteDeviceMessage _whitelistedClasses]
  +[ACRemoteDeviceMessage actionMessageWithCommand:account:options:]
  +[ACRemoteDeviceMessage replyForMessage:withSuccess:result:error:]
  +[ACRemoteDeviceMessage replyForMessage:withSuccess:error:]

  // instance methods
  -[ACRemoteDeviceMessage init]
  -[ACRemoteDeviceMessage options]
  -[ACRemoteDeviceMessage initWithData:]
  -[ACRemoteDeviceMessage .cxx_destruct]
  -[ACRemoteDeviceMessage data]
  -[ACRemoteDeviceMessage identifier]
  -[ACRemoteDeviceMessage error]
  -[ACRemoteDeviceMessage result]
  -[ACRemoteDeviceMessage account]
  -[ACRemoteDeviceMessage success]
  -[ACRemoteDeviceMessage command]
  -[ACRemoteDeviceMessage isReply]
  -[ACRemoteDeviceMessage setIsReply:]
  -[ACRemoteDeviceMessage setNeedsReply:]
  -[ACRemoteDeviceMessage needsReply]
  -[ACRemoteDeviceMessage _invalidateCachedData]
  -[ACRemoteDeviceMessage sentMessageIdentifier]
  -[ACRemoteDeviceMessage _setPayloadObject:forKey:]
  -[ACRemoteDeviceMessage _payloadObjectForKey:]


AWDAccountsRenewCredentialsEnd : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAccountType
 @property  NSString *accountType
 @property  BOOL hasResult
 @property  unsigned int result

  // instance methods
  -[AWDAccountsRenewCredentialsEnd isEqual:]
  -[AWDAccountsRenewCredentialsEnd copyWithZone:]
  -[AWDAccountsRenewCredentialsEnd .cxx_destruct]
  -[AWDAccountsRenewCredentialsEnd dictionaryRepresentation]
  -[AWDAccountsRenewCredentialsEnd result]
  -[AWDAccountsRenewCredentialsEnd timestamp]
  -[AWDAccountsRenewCredentialsEnd setResult:]
  -[AWDAccountsRenewCredentialsEnd hasTimestamp]
  -[AWDAccountsRenewCredentialsEnd setTimestamp:]
  -[AWDAccountsRenewCredentialsEnd writeTo:]
  -[AWDAccountsRenewCredentialsEnd mergeFrom:]
  -[AWDAccountsRenewCredentialsEnd readFrom:]
  -[AWDAccountsRenewCredentialsEnd copyTo:]
  -[AWDAccountsRenewCredentialsEnd accountType]
  -[AWDAccountsRenewCredentialsEnd setAccountType:]
  -[AWDAccountsRenewCredentialsEnd setHasTimestamp:]
  -[AWDAccountsRenewCredentialsEnd hasAccountType]
  -[AWDAccountsRenewCredentialsEnd setHasResult:]
  -[AWDAccountsRenewCredentialsEnd hasResult]


ACDAuthenticationPluginManager : NSObject /usr/lib/libSystem.B.dylib
 @property  ACRateLimiter *renewalRateLimiter

  // instance methods
  -[ACDAuthenticationPluginManager init]
  -[ACDAuthenticationPluginManager .cxx_destruct]
  -[ACDAuthenticationPluginManager isPushSupportedForAccount:]
  -[ACDAuthenticationPluginManager credentialForAccount:client:store:handler:]
  -[ACDAuthenticationPluginManager verifyCredentialsForAccount:accountStore:options:handler:]
  -[ACDAuthenticationPluginManager renewCredentialsForAccount:accountStore:options:completion:]
  -[ACDAuthenticationPluginManager discoverPropertiesForAccount:accountStore:options:completion:]
  -[ACDAuthenticationPluginManager _authenticationTypeForAccount:]
  -[ACDAuthenticationPluginManager _pluginForAuthenticationType:]
  -[ACDAuthenticationPluginManager _unsanitizeOptionsDictionary:]
  -[ACDAuthenticationPluginManager _authCapableParentAccountForAccount:]
  -[ACDAuthenticationPluginManager _sanitizeError:]
  -[ACDAuthenticationPluginManager _handleVerificationCompletionForAccount:verifiedAccount:error:store:shouldSave:]
  -[ACDAuthenticationPluginManager _renewalRequestIsWithinLimitsForAccount:accountStore:]
  -[ACDAuthenticationPluginManager _handleRenewalCompletionResult:forAccount:renewalID:accountStore:error:]
  -[ACDAuthenticationPluginManager _descriptionForRenewalResult:]
  -[ACDAuthenticationPluginManager _handleDiscoveryCompletionResult:forAccount:discoveryID:accountStore:shouldSave:error:]
  -[ACDAuthenticationPluginManager renewalRateLimiter]
  -[ACDAuthenticationPluginManager setRenewalRateLimiter:]


ACDOAuthSigner : NSObject /usr/lib/libSystem.B.dylib <ACDOAuthSignerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDOAuthSigner new]

  // instance methods
  -[ACDOAuthSigner init]
  -[ACDOAuthSigner .cxx_destruct]
  -[ACDOAuthSigner setClientBundleID:withHandler:]
  -[ACDOAuthSigner setShouldIncludeAppIdInRequest:]
  -[ACDOAuthSigner signURLRequest:withAccount:callingPID:timestamp:handler:]
  -[ACDOAuthSigner signURLRequest:withAccount:applicationID:timestamp:handler:]
  -[ACDOAuthSigner initWithClient:databaseConnection:]
  -[ACDOAuthSigner ckForAccountType:]
  -[ACDOAuthSigner csForAccountType:]
  -[ACDOAuthSigner _permissionGrantedForBundleID:onAccountType:]
  -[ACDOAuthSigner _signedRequest:withAccountObject:applicationID:timestamp:]
  -[ACDOAuthSigner signedRequest:withAccount:applicationID:timestamp:]


ACRemoteDeviceProxy : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACRemoteDeviceProxy init]
  -[ACRemoteDeviceProxy .cxx_destruct]
  -[ACRemoteDeviceProxy service:account:incomingData:fromID:context:]
  -[ACRemoteDeviceProxy service:account:identifier:didSendWithSuccess:error:]
  -[ACRemoteDeviceProxy sendCommand:withAccount:completion:]
  -[ACRemoteDeviceProxy sendCommand:withAccount:options:completion:]
  -[ACRemoteDeviceProxy _isValidCommandForOutgoingMessage:]
  -[ACRemoteDeviceProxy _priorityForMessageCarryingCommand:]
  -[ACRemoteDeviceProxy _sendMessageData:toDestination:withPriority:bypassDuet:transportID:error:]
  -[ACRemoteDeviceProxy _enqueueCompletionHandler:forMessageWithInternalID:transportID:]
  -[ACRemoteDeviceProxy _dequeueCompletionHandlersForMessageWithTransportID:success:result:error:]
  -[ACRemoteDeviceProxy _dequeueCompletionHandlersForMessageWithInternalID:success:result:error:]
  -[ACRemoteDeviceProxy _sendReplyForMessage:withSuccess:result:error:]


ACDServer : NSObject /usr/lib/libSystem.B.dylib <ACDAccountStoreDelegate, NSXPCListenerDelegate>
 @property  ACDAuthenticationPluginManager *authenticationPluginManager
 @property  ACDAccessPluginManager *accessPluginManager
 @property  ACDDataclassOwnersManager *dataclassOwnersManager
 @property  ACDAuthenticationDialogManager *authenticationDialogManager
 @property  ACDAccountNotifier *accountNotifier
 @property  ACRemoteDeviceProxy *remoteDeviceProxy
 @property  <ACDClientProviderProtocol> *clientProvider
 @property  <ACDDatabaseProtocol> *database
 @property  ACDDatabaseBackupActivity *databaseBackupActivity
 @property  NSXPCListener *accountStoreListener
 @property  NSXPCListener *oauthSignerListener
 @property  NSXPCListener *authenticationDialogListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDServer init]
  -[ACDServer dealloc]
  -[ACDServer .cxx_destruct]
  -[ACDServer listener:shouldAcceptNewConnection:]
  -[ACDServer start]
  -[ACDServer setDatabase:]
  -[ACDServer database]
  -[ACDServer shutdown]
  -[ACDServer clientProvider]
  -[ACDServer credentialsDidChangeForAccountWithIdentifier:]
  -[ACDServer accountNotifier]
  -[ACDServer dataclassOwnersManager]
  -[ACDServer accountStore:didSaveAccount:]
  -[ACDServer authenticationDialogManager]
  -[ACDServer databaseBackupActivity]
  -[ACDServer remoteDeviceProxy]
  -[ACDServer setRemoteDeviceProxy:]
  -[ACDServer authenticationPluginManager]
  -[ACDServer setAuthenticationPluginManager:]
  -[ACDServer accessPluginManager]
  -[ACDServer setAccessPluginManager:]
  -[ACDServer setDataclassOwnersManager:]
  -[ACDServer setAuthenticationDialogManager:]
  -[ACDServer setAccountNotifier:]
  -[ACDServer setDatabaseBackupActivity:]
  -[ACDServer initWithAccountStoreListener:oauthSignerListener:authenticationDialogListener:]
  -[ACDServer _beginObservingMigrationDidFinishDarwinNotifications]
  -[ACDServer _signalDeferredConnectionResumeQueueSemaphore]
  -[ACDServer _beginObservingIDSProxyNotifications]
  -[ACDServer _beginObservingLanguageChangeNotfication]
  -[ACDServer _endObservingLanguageChangeNotification]
  -[ACDServer _endObservingMigrationDidFinishDarwinNotifications]
  -[ACDServer createClientForConnection:]
  -[ACDServer _keyForConnection:]
  -[ACDServer createDatabaseConnection]
  -[ACDServer _newDaemonAccountStoreFilterForClient:]
  -[ACDServer _newOAuthSignerForClient:]
  -[ACDServer clientForConnection:]
  -[ACDServer _handleLanguageChangedDarwinNotification]
  -[ACDServer accountStoreListener]
  -[ACDServer oauthSignerListener]
  -[ACDServer authenticationDialogListener]
  -[ACDServer setClientProvider:]


ACDAccessPluginManager : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ACDAccessPluginManager init]
  -[ACDAccessPluginManager .cxx_destruct]
  -[ACDAccessPluginManager handleAccessRequestToAccountsOfType:forClient:withOptions:store:allowUserInteraction:completion:]
  -[ACDAccessPluginManager revokeAccessToAccountsOfType:forClient:store:completion:]
  -[ACDAccessPluginManager authorizeAccessToAccountsOfType:forClient:store:completion:]
  -[ACDAccessPluginManager revokeAllAccessToAccountsOfType:store:withCompletion:]
  -[ACDAccessPluginManager _authorizationPluginForAccountType:]


ACDClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleID
 @property  ^{__CFBundle=} bundle
 @property  NSString *localizedAppName
 @property  NSString *adamOrDisplayID
 @property  NSString *name
 @property  NSNumber *pid
 @property  NSXPCConnection *connection

  // class methods
  +[ACDClient clientWithBundleID:]
  +[ACDClient _bundleForNonPlugInPID:]
  +[ACDClient _bundleIDForPID:]
  +[ACDClient _bundleForPID:]

  // instance methods
  -[ACDClient init]
  -[ACDClient dealloc]
  -[ACDClient name]
  -[ACDClient .cxx_destruct]
  -[ACDClient bundle]
  -[ACDClient connection]
  -[ACDClient bundleID]
  -[ACDClient initWithConnection:]
  -[ACDClient setBundleID:]
  -[ACDClient pid]
  -[ACDClient hasEntitlement:]
  -[ACDClient localizedAppName]
  -[ACDClient adamOrDisplayID]
  -[ACDClient _displayNameFromLaunchServicesForPID:]
  -[ACDClient _displayNameFromBundleInfoDictionaryForPID:]


ACDClientAuthorizationManager : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ACDClientAuthorizationManager .cxx_destruct]
  -[ACDClientAuthorizationManager _csvStringFromSet:]
  -[ACDClientAuthorizationManager initWithDatabaseConnection:]
  -[ACDClientAuthorizationManager allAuthorizationsForAccountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager authorizationForClient:accountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager removeAuthorizationForClient:accountType:]
  -[ACDClientAuthorizationManager authorizationForClient:accountType:]
  -[ACDClientAuthorizationManager _setFromCSVString:]
  -[ACDClientAuthorizationManager removeAuthorizationForClient:accountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager removeAllClientAuthorizationsForAccountTypeWithIdentifier:]
  -[ACDClientAuthorizationManager setAuthorization:forClient:onAccountType:]
  -[ACDClientAuthorizationManager allAuthorizationsForAccountType:]
  -[ACDClientAuthorizationManager removeAllClientAuthorizationsForAccountType:]


ACDPairedDeviceAccountCache : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDPairedDeviceAccountCache sharedInstance]

  // instance methods
  -[ACDPairedDeviceAccountCache init]
  -[ACDPairedDeviceAccountCache invalidate]
  -[ACDPairedDeviceAccountCache .cxx_destruct]
  -[ACDPairedDeviceAccountCache accountsFromRemoteDeviceProxy:completion:]
  -[ACDPairedDeviceAccountCache _didFetchAccounts:error:]


ACDAWDMetricsReporter : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDAWDMetricsReporter landmarkEventForAccountType:count:]
  +[ACDAWDMetricsReporter renewCredentialsBeginForAccountType:avoidUI:shouldForce:requestedBy:]
  +[ACDAWDMetricsReporter renewCredentialsEndForAccountType:result:]


ACDDatabaseConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSManagedObjectContext *managedObjectContext
 @property  <ACDDatabaseConnectionDelegate> *delegate
 @property  NSNumber *version
 @property  NSNumber *keychainVersion

  // class methods
  +[ACDDatabaseConnection new]

  // instance methods
  -[ACDDatabaseConnection init]
  -[ACDDatabaseConnection dealloc]
  -[ACDDatabaseConnection delegate]
  -[ACDDatabaseConnection setDelegate:]
  -[ACDDatabaseConnection .cxx_destruct]
  -[ACDDatabaseConnection version]
  -[ACDDatabaseConnection setVersion:]
  -[ACDDatabaseConnection persistentStoreCoordinator]
  -[ACDDatabaseConnection _managedObjectModel]
  -[ACDDatabaseConnection managedObjectContext]
  -[ACDDatabaseConnection _persistentStore]
  -[ACDDatabaseConnection _managedObjectContextDidSave:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:withPredicate:]
  -[ACDDatabaseConnection saveWithError:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:]
  -[ACDDatabaseConnection initWithPersistentStoreCoordinator:]
  -[ACDDatabaseConnection countOfEntityNamed:withPredicate:]
  -[ACDDatabaseConnection existingObjectWithURI:]
  -[ACDDatabaseConnection fetchObjectsForEntityNamed:withPredicate:sortDescriptor:]
  -[ACDDatabaseConnection deleteAccountPropertyWithKey:owner:]
  -[ACDDatabaseConnection setAccountPropertyWithKey:value:owner:]
  -[ACDDatabaseConnection saveWithError:rollbackOnFailure:]
  -[ACDDatabaseConnection managedObjectIDForURI:]
  -[ACDDatabaseConnection keychainVersion]
  -[ACDDatabaseConnection setKeychainVersion:]
  -[ACDDatabaseConnection objectForObjectURI:]
  -[ACDDatabaseConnection _setupManagedObjectContextWithPersistentStoreCoodinator:]
  -[ACDDatabaseConnection _beginObservingManagedObjectContextDidSaveNotifications]
  -[ACDDatabaseConnection _endObservingManagedObjectContextDidSaveNotifications]
  -[ACDDatabaseConnection _handleManagedObjectContextError:]
  -[ACDDatabaseConnection _accountPropertyWithKey:owner:]
  -[ACDDatabaseConnection _delegate_databaseConnectionEncounteredUnrecoverableError:]


AWDAccountsLandmarkEventAccountTypeCounts : PBCodable /System/Library/Frameworks/Security.framework/Security <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAccountType
 @property  NSString *accountType
 @property  BOOL hasAccountCount
 @property  unsigned int accountCount

  // instance methods
  -[AWDAccountsLandmarkEventAccountTypeCounts isEqual:]
  -[AWDAccountsLandmarkEventAccountTypeCounts copyWithZone:]
  -[AWDAccountsLandmarkEventAccountTypeCounts .cxx_destruct]
  -[AWDAccountsLandmarkEventAccountTypeCounts dictionaryRepresentation]
  -[AWDAccountsLandmarkEventAccountTypeCounts timestamp]
  -[AWDAccountsLandmarkEventAccountTypeCounts hasTimestamp]
  -[AWDAccountsLandmarkEventAccountTypeCounts setTimestamp:]
  -[AWDAccountsLandmarkEventAccountTypeCounts writeTo:]
  -[AWDAccountsLandmarkEventAccountTypeCounts mergeFrom:]
  -[AWDAccountsLandmarkEventAccountTypeCounts readFrom:]
  -[AWDAccountsLandmarkEventAccountTypeCounts copyTo:]
  -[AWDAccountsLandmarkEventAccountTypeCounts accountType]
  -[AWDAccountsLandmarkEventAccountTypeCounts setAccountType:]
  -[AWDAccountsLandmarkEventAccountTypeCounts setHasTimestamp:]
  -[AWDAccountsLandmarkEventAccountTypeCounts hasAccountType]
  -[AWDAccountsLandmarkEventAccountTypeCounts setAccountCount:]
  -[AWDAccountsLandmarkEventAccountTypeCounts setHasAccountCount:]
  -[AWDAccountsLandmarkEventAccountTypeCounts hasAccountCount]
  -[AWDAccountsLandmarkEventAccountTypeCounts accountCount]


ACDAuthenticationDialogRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *url
 @property  BOOL confirmationRequired
 @property  ACAccount *account
 @property  NSString *authDelegateClassName
 @property  NSString *authDelegateClassBundlePath
 @property  @? completion

  // instance methods
  -[ACDAuthenticationDialogRequest .cxx_destruct]
  -[ACDAuthenticationDialogRequest url]
  -[ACDAuthenticationDialogRequest account]
  -[ACDAuthenticationDialogRequest setAccount:]
  -[ACDAuthenticationDialogRequest setCompletion:]
  -[ACDAuthenticationDialogRequest completion]
  -[ACDAuthenticationDialogRequest setUrl:]
  -[ACDAuthenticationDialogRequest confirmationRequired]
  -[ACDAuthenticationDialogRequest setConfirmationRequired:]
  -[ACDAuthenticationDialogRequest authDelegateClassName]
  -[ACDAuthenticationDialogRequest setAuthDelegateClassName:]
  -[ACDAuthenticationDialogRequest authDelegateClassBundlePath]
  -[ACDAuthenticationDialogRequest setAuthDelegateClassBundlePath:]


ACDAuthenticationDialogManager : NSObject /usr/lib/libSystem.B.dylib <ACDAuthenticationDialogManagerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDAuthenticationDialogManager init]
  -[ACDAuthenticationDialogManager .cxx_destruct]
  -[ACDAuthenticationDialogManager openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager contextForAuthenticationDialog:]
  -[ACDAuthenticationDialogManager authenticationDialogDidFinishWithSuccess:response:]
  -[ACDAuthenticationDialogManager authenticationDialogCrashed]
  -[ACDAuthenticationDialogManager _launchDialogContainerAppForAccount:shouldConfirm:completion:]
  -[ACDAuthenticationDialogManager _confirmUserWantsToOpenAuthenticationURLForAccount:]


ACDKeychain : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDKeychain canAccessPasswordsWithPolicy:]
  +[ACDKeychain passwordForServiceName:username:accessGroup:options:error:]
  +[ACDKeychain updateItemForServiceName:username:accessGroup:newValues:options:error:]
  +[ACDKeychain addItemWithServiceName:username:accessGroup:passwordData:options:error:]
  +[ACDKeychain removeItemForServiceName:username:accessGroup:options:error:]
  +[ACDKeychain keychainDeletedAccounts]
  +[ACDKeychain removeTombstoneForServiceName:username:accessGroup:extension:error:]
  +[ACDKeychain updateSyncItemForServiceName:username:accessGroup:newValues:extension:error:]
  +[ACDKeychain addSyncItemWithServiceName:username:accessGroup:options:extension:error:]
  +[ACDKeychain _migrateKeychainItemIfNecessary:]
  +[ACDKeychain _knownMigratedKeychainItems]
  +[ACDKeychain _isKnownMigratedKeychainItem:]
  +[ACDKeychain _addKnownMigratedKeychainItem:]


ACDClientAuthorization : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isGranted
 @property  ACDClient *client
 @property  NSSet *grantedPermissions
 @property  NSDictionary *options

  // instance methods
  -[ACDClientAuthorization options]
  -[ACDClientAuthorization .cxx_destruct]
  -[ACDClientAuthorization setOptions:]
  -[ACDClientAuthorization client]
  -[ACDClientAuthorization setClient:]
  -[ACDClientAuthorization isGranted]
  -[ACDClientAuthorization initForClient:]
  -[ACDClientAuthorization grantedPermissions]
  -[ACDClientAuthorization setGrantedPermissions:]
  -[ACDClientAuthorization setIsGranted:]


ACDDatabaseBackupActivity : NSObject /usr/lib/libSystem.B.dylib
 @property  ACDDatabase *database

  // class methods
  +[ACDDatabaseBackupActivity new]

  // instance methods
  -[ACDDatabaseBackupActivity init]
  -[ACDDatabaseBackupActivity .cxx_destruct]
  -[ACDDatabaseBackupActivity database]
  -[ACDDatabaseBackupActivity initWithDatabase:]
  -[ACDDatabaseBackupActivity activityCriteria]
  -[ACDDatabaseBackupActivity scheduleBackupIfNonexistent]
  -[ACDDatabaseBackupActivity _registerActivityIfNeededSchedulingBackup:]
  -[ACDDatabaseBackupActivity _registerActivitySchedulingBackup:]
  -[ACDDatabaseBackupActivity scheduleBackup]
  -[ACDDatabaseBackupActivity registerActivityIfNeeded]


ACDDatabaseMigrator : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *databaseURL
 @property  NSPersistentStoreCoordinator *persistentStoreCoordinator
 @property  NSDictionary *storeOptions

  // class methods
  +[ACDDatabaseMigrator new]

  // instance methods
  -[ACDDatabaseMigrator init]
  -[ACDDatabaseMigrator .cxx_destruct]
  -[ACDDatabaseMigrator persistentStoreCoordinator]
  -[ACDDatabaseMigrator storeOptions]
  -[ACDDatabaseMigrator databaseURL]
  -[ACDDatabaseMigrator initForDatabaseAtURL:persistentStoreCoordinator:storeOptions:]
  -[ACDDatabaseMigrator runReturningError:]
  -[ACDDatabaseMigrator _setUpContextForMigration]
  -[ACDDatabaseMigrator _versionForModel:]
  -[ACDDatabaseMigrator _migrateAccessAuthorizationsToTCCFromModelVersion:]
  -[ACDDatabaseMigrator _migrateNameAttributeOfDataclassEntities]
  -[ACDDatabaseMigrator _migrateOptionsAttributeOfAuthorizatinEntitiesFromModelVersion:]
  -[ACDDatabaseMigrator _postProcessMigrationFromVersion:migrationData:]
  -[ACDDatabaseMigrator _fetchAllAuthorizationEntitiesForModelVersion:]
  -[ACDDatabaseMigrator _fetchAllDataclassEntitles]
  -[ACDDatabaseMigrator _compatibleModelForStoreAtURL:]


ACDTCCUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDTCCUtilities _TCCServiceForAccountTypeID:]
  +[ACDTCCUtilities TCCStateForClient:accountTypeID:]
  +[ACDTCCUtilities TCCSupportedForAccountTypeID:]
  +[ACDTCCUtilities setTCCStateForClient:accountTypeID:toGranted:]
  +[ACDTCCUtilities clearTCCStateForClient:accountTypeID:]
  +[ACDTCCUtilities allTCCStatesForAccountTypeID:]
  +[ACDTCCUtilities clearAllTCCStatesForAccountTypeID:]


ACDAccountStoreFilter : NSObject /usr/lib/libSystem.B.dylib <ACRemoteAccountStoreProtocol>
 @property  ACDAccountStore *backingAccountStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[ACDAccountStoreFilter new]
  +[ACDAccountStoreFilter _whiteList]

  // instance methods
  -[ACDAccountStoreFilter init]
  -[ACDAccountStoreFilter .cxx_destruct]
  -[ACDAccountStoreFilter setNotificationsEnabled:]
  -[ACDAccountStoreFilter accountWithIdentifier:handler:]
  -[ACDAccountStoreFilter accountTypeWithIdentifier:handler:]
  -[ACDAccountStoreFilter accountsWithHandler:]
  -[ACDAccountStoreFilter accountsWithAccountType:handler:]
  -[ACDAccountStoreFilter accountsWithAccountType:options:completion:]
  -[ACDAccountStoreFilter accountsOnPairedDeviceWithAccountType:handler:]
  -[ACDAccountStoreFilter insertAccountType:withHandler:]
  -[ACDAccountStoreFilter removeAccountType:withHandler:]
  -[ACDAccountStoreFilter removeAccount:withDataclassActions:completion:]
  -[ACDAccountStoreFilter canSaveAccount:completion:]
  -[ACDAccountStoreFilter saveAccount:verify:dataclassActions:completion:]
  -[ACDAccountStoreFilter requestAccessForAccountTypeWithIdentifier:options:withHandler:]
  -[ACDAccountStoreFilter verifyCredentialsForAccount:options:completion:]
  -[ACDAccountStoreFilter renewCredentialsForAccount:options:completion:]
  -[ACDAccountStoreFilter accountTypesWithHandler:]
  -[ACDAccountStoreFilter dataclassesWithHandler:]
  -[ACDAccountStoreFilter credentialForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter credentialForAccount:serviceID:handler:]
  -[ACDAccountStoreFilter setCredential:forAccount:serviceID:completion:]
  -[ACDAccountStoreFilter credentialItemsWithCompletion:]
  -[ACDAccountStoreFilter credentialItemForAccount:serviceName:completion:]
  -[ACDAccountStoreFilter insertCredentialItem:completion:]
  -[ACDAccountStoreFilter saveCredentialItem:completion:]
  -[ACDAccountStoreFilter removeCredentialItem:completion:]
  -[ACDAccountStoreFilter parentAccountForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter childAccountsForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter childAccountsWithAccountTypeIdentifier:parentAccountIdentifier:handler:]
  -[ACDAccountStoreFilter enabledDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter provisionedDataclassesForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter supportedDataclassesForAccountType:handler:]
  -[ACDAccountStoreFilter syncableDataclassesForAccountType:handler:]
  -[ACDAccountStoreFilter accessKeysForAccountType:handler:]
  -[ACDAccountStoreFilter appPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter setPermissionGranted:forBundleID:onAccountType:withHandler:]
  -[ACDAccountStoreFilter clearAllPermissionsGrantedForAccountType:withHandler:]
  -[ACDAccountStoreFilter permissionForAccountType:withHandler:]
  -[ACDAccountStoreFilter grantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter clearGrantedPermissionsForAccountType:withHandler:]
  -[ACDAccountStoreFilter typeIdentifierForDomain:withHandler:]
  -[ACDAccountStoreFilter displayAccountTypeForAccountWithIdentifier:handler:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledForDataclass:handler:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledToSyncDataclass:handler:]
  -[ACDAccountStoreFilter preloadDataclassOwnersWithCompletion:]
  -[ACDAccountStoreFilter dataclassActionsForAccountSave:completion:]
  -[ACDAccountStoreFilter dataclassActionsForAccountDeletion:completion:]
  -[ACDAccountStoreFilter isPerformingDataclassActionsForAccount:completion:]
  -[ACDAccountStoreFilter accountExistsWithDescription:completion:]
  -[ACDAccountStoreFilter isTetheredSyncingEnabledForDataclass:completion:]
  -[ACDAccountStoreFilter tetheredSyncSourceTypeForDataclass:completion:]
  -[ACDAccountStoreFilter kerberosAccountsForDomainFromURL:completion:]
  -[ACDAccountStoreFilter isPushSupportedForAccount:completion:]
  -[ACDAccountStoreFilter accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:]
  -[ACDAccountStoreFilter updateExistenceCacheOfAccountWithTypeIdentifier:withHandler:]
  -[ACDAccountStoreFilter handleURL:]
  -[ACDAccountStoreFilter clientTokenForAccountIdentifier:completion:]
  -[ACDAccountStoreFilter addClientToken:forAccountIdentifier:completion:]
  -[ACDAccountStoreFilter discoverPropertiesForAccount:options:completion:]
  -[ACDAccountStoreFilter openAuthenticationURL:forAccount:shouldConfirm:completion:]
  -[ACDAccountStoreFilter openAuthenticationURLForAccount:withDelegateClassName:fromBundleAtPath:shouldConfirm:completion:]
  -[ACDAccountStoreFilter visibleTopLevelAccountsWithAccountTypeIdentifiers:completion:]
  -[ACDAccountStoreFilter accountsWithAccountTypeIdentifiers:preloadedProperties:completion:]
  -[ACDAccountStoreFilter notifyRemoteDevicesOfModifiedAccount:withChangeType:completion:]
  -[ACDAccountStoreFilter saveAccount:toPairedDeviceWithOptions:completion:]
  -[ACDAccountStoreFilter removeAccountsFromPairedDeviceWithCompletion:]
  -[ACDAccountStoreFilter triggerKeychainMigrationIfNecessary:]
  -[ACDAccountStoreFilter reportTelemetryForLandmarkEvent:]
  -[ACDAccountStoreFilter scheduleBackupIfNonexistent:]
  -[ACDAccountStoreFilter setClientBundleID:withHandler:]
  -[ACDAccountStoreFilter saveAccount:withHandler:]
  -[ACDAccountStoreFilter notifyRemoteDevicesOfModifiedAccount:withChangeType:]
  -[ACDAccountStoreFilter backingAccountStore]
  -[ACDAccountStoreFilter initWithBackingAccountStore:]
  -[ACDAccountStoreFilter _accessGrantedForClient:onAccountTypeID:]
  -[ACDAccountStoreFilter _wildCardAuthorizationMatchingForAccountTypeIdentifier:]
  -[ACDAccountStoreFilter _appPermissionsForAccountTypeIdentifier:]
  -[ACDAccountStoreFilter _isClientPermittedToAccessAccountTypeWithIdentifier:]
  -[ACDAccountStoreFilter _isClientPermittedToAccessAccount:]
  -[ACDAccountStoreFilter _isClientPermittedToRemoveAccount:]
  -[ACDAccountStoreFilter _clientHasPermissionToAddAccount:]
  -[ACDAccountStoreFilter _accessGrantedForBundleID:onAccountTypeID:]


ACDDataclassOwnersManager : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[ACDDataclassOwnersManager init]
  -[ACDDataclassOwnersManager .cxx_destruct]
  -[ACDDataclassOwnersManager isPerformingDataclassActionsForAccount:]
  -[ACDDataclassOwnersManager performDataclassActions:forAccount:withChildren:withError:]
  -[ACDDataclassOwnersManager preloadDataclassOwnersWithError:]
  -[ACDDataclassOwnersManager actionsForEnablingDataclass:onAccount:withError:]
  -[ACDDataclassOwnersManager actionsForDisablingDataclass:onAccount:withError:]
  -[ACDDataclassOwnersManager actionsForDeletingAccount:affectingDataclass:withError:]
  -[ACDDataclassOwnersManager _dataclassOwnersManagerConnection]
  -[ACDDataclassOwnersManager actionsForAddingAccount:affectingDataclass:withError:]


ACDDataclassOwnersManagerInterface : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDDataclassOwnersManagerInterface XPCInterface]


ACDKeychainCleanupActivity : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDKeychainCleanupActivity sharedActivity]

  // instance methods
  -[ACDKeychainCleanupActivity init]
  -[ACDKeychainCleanupActivity .cxx_destruct]
  -[ACDKeychainCleanupActivity queueNonPersistentCredentialRemoval:]
  -[ACDKeychainCleanupActivity checkInIfNecessary]
  -[ACDKeychainCleanupActivity _activityQueue_checkIn]
  -[ACDKeychainCleanupActivity _activityQueue_queueCredentialItemWithAccount:serviceName:]
  -[ACDKeychainCleanupActivity _activityQueue_configureXPCActivityWithCriteria:]
  -[ACDKeychainCleanupActivity _activityQueue_registerXPCActivityWithCriteria:]
  -[ACDKeychainCleanupActivity _activityQueue_removeExpiredCredentials]
  -[ACDKeychainCleanupActivity _removeExpiredCredentials]
  -[ACDKeychainCleanupActivity _activityQueue_unregisterActivity]
  -[ACDKeychainCleanupActivity _activityQueue_removeCredentialItem:withCompletionHandler:]


ACDClientProvider : NSObject /usr/lib/libSystem.B.dylib <ACDClientProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[ACDClientProvider createClientForConnection:]


ACDAutoBugCapture : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDAutoBugCapture triggerAutoBugCaptureWithType:subType:subtypeContext:detectedProcess:]


ACDAccountSync : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[ACDAccountSync sharedAccountSyncServer]
  +[ACDAccountSync accountSyncUnsupportedTypes]
  +[ACDAccountSync accountSyncSupportedTypes]
  +[ACDAccountSync accountSyncPropertiesForAccount:]
  +[ACDAccountSync duchessHostnames]

  // instance methods
  -[ACDAccountSync init]
  -[ACDAccountSync dealloc]
  -[ACDAccountSync .cxx_destruct]
  -[ACDAccountSync sync]
  -[ACDAccountSync devices]
  -[ACDAccountSync registerForNotifications]
  -[ACDAccountSync migrate]
  -[ACDAccountSync primaryiCloudAccount]
  -[ACDAccountSync setupAccountSync]
  -[ACDAccountSync checkCircleState]
  -[ACDAccountSync scheduleSync]
  -[ACDAccountSync markMigrated]
  -[ACDAccountSync getiOSVersion]
  -[ACDAccountSync waitForBuddy]
  -[ACDAccountSync setiOSVersion]
  -[ACDAccountSync queueSync]
  -[ACDAccountSync accountChanges:]
  -[ACDAccountSync detectDuchess]
  -[ACDAccountSync processAdds]
  -[ACDAccountSync processDeletes]
  -[ACDAccountSync createKeychainItems:]
  -[ACDAccountSync processHostnameAdds]
  -[ACDAccountSync processHostnameDeletes]
  -[ACDAccountSync createAccounts:]
  -[ACDAccountSync deleteAccounts:]
  -[ACDAccountSync localAccounts]
  -[ACDAccountSync remoteAccounts]
  -[ACDAccountSync getAccountsOfType:]
  -[ACDAccountSync accountPropertiesFromDictionary:forType:]
  -[ACDAccountSync unsupportedType:]
  -[ACDAccountSync supportedType:]
  -[ACDAccountSync remoteHostnameAccounts]
  -[ACDAccountSync localHostnameAccounts]
  -[ACDAccountSync smtpAccounts]
  -[ACDAccountSync postNotificationFor:]
  -[ACDAccountSync isDataclassActionRequired:]
  -[ACDAccountSync locallyMigrated]
  -[ACDAccountSync fixSMTP]
  -[ACDAccountSync fixLDAP]
  -[ACDAccountSync ldapAccounts]
  -[ACDAccountSync isMigrated]
  -[ACDAccountSync kvsChanges:]


ACDPluginEntry : NSObject /usr/lib/libSystem.B.dylib <ACDPluginEntryProtocol>
 @property  NSBundle *bundle
 @property  id principalObject
 @property  NSSet *supportedAccountTypes
 @property  NSSet *supportedDataclasses

  // instance methods
  -[ACDPluginEntry init]
  -[ACDPluginEntry .cxx_destruct]
  -[ACDPluginEntry initWithBundle:]
  -[ACDPluginEntry bundle]
  -[ACDPluginEntry supportedDataclasses]
  -[ACDPluginEntry principalObject]
  -[ACDPluginEntry principalObjectRespondsToSelector:]
  -[ACDPluginEntry supportedAccountTypes]


ACDTestManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCListenerEndpoint *remoteAccountStoreEndpoint
 @property  NSXPCListenerEndpoint *remoteOAuthSignerEndpoint

  // class methods
  +[ACDTestManager testServer]

  // instance methods
  -[ACDTestManager startTestServer]
  -[ACDTestManager stopTestServer]
  -[ACDTestManager remoteAccountStoreEndpoint]
  -[ACDTestManager remoteOAuthSignerEndpoint]


01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountMigrationLock 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountType 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACCredentialItem 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACDPropertyEncryption 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACDataclassAction 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACManagedDefaults 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACPersonaManager 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRateLimiter 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRemoteAccountStoreInterface 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACRemoteAccountStoreSession 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACSystemConfigManager 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACTrackedSet 
01 00 0d00 /System/Library/Frameworks/Accounts.framework/Accounts: ACZeroingString 
01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 0a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1800 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSEntityDescription 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectContext 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObjectModel 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSMergePolicy 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0f00 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentStoreCoordinator 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1700 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1100 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OACredential 
01 00 1100 /System/Library/PrivateFrameworks/OAuth.framework/OAuth: OAURLRequestSigner 
01 00 1200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0700 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKManager 
01 00 0b00 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
