|| __DATA.__common __MSSPCForcedProtocolVersionString
|| __DATA.__data _kMSASPersonInfoEmailKey
|| __DATA.__data _kMSASPersonInfoFirstNameKey
|| __DATA.__data _kMSASPersonInfoFullNameKey
|| __DATA.__data _kMSASPersonInfoLastNameKey
|| __DATA.__objc_data _OBJC_CLASS_$_MMCSRequestorContext
|| __DATA.__objc_data _OBJC_CLASS_$_MSASAlbumChange
|| __DATA.__objc_data _OBJC_CLASS_$_MSASAssetCollectionChange
|| __DATA.__objc_data _OBJC_CLASS_$_MSASAssetInfoToReauthForDownload
|| __DATA.__objc_data _OBJC_CLASS_$_MSASCommentChange
|| __DATA.__objc_data _OBJC_CLASS_$_MSASCommentCheckOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MSASEnqueuedCommand
|| __DATA.__objc_data _OBJC_CLASS_$_MSASPersonInfoManager
|| __DATA.__objc_data _OBJC_CLASS_$_MSASPersonModelItem
|| __DATA.__objc_data _OBJC_CLASS_$_MSASPhoneInvitations
|| __DATA.__objc_data _OBJC_CLASS_$_MSDeleteStreamsProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSFileUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MSMMCSProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSObjectQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MSObjectWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_MSPerformanceLogger
|| __DATA.__objc_data _OBJC_CLASS_$_MSPublishMMCSProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSPublishStreamsProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSReauthorizationProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSResetServer
|| __DATA.__objc_data _OBJC_CLASS_$_MSResetServerProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSStreamsProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSSubscribeMMCSProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_MSSubscribeStreamsProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MMCSRequestorContext
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASAlbumChange
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASAssetCollectionChange
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASAssetInfoToReauthForDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASCommentChange
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASCommentCheckOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASEnqueuedCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASPersonInfoManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASPersonModelItem
|| __DATA.__objc_data _OBJC_METACLASS_$_MSASPhoneInvitations
|| __DATA.__objc_data _OBJC_METACLASS_$_MSDeleteStreamsProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSFileUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MSMMCSProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSObjectQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MSObjectWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPerformanceLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPublishMMCSProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSPublishStreamsProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSReauthorizationProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSResetServer
|| __DATA.__objc_data _OBJC_METACLASS_$_MSResetServerProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSStreamsProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSubscribeMMCSProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_MSSubscribeStreamsProtocol
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._backupDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._backupDeviceUDID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._backupDeviceUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._iCPLDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._mPSDeviceID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateRequest._originalLibrarySize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateResponse._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateResponse._icplAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateResponse._mpsAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateResponse._retryAfterSeconds
|| __DATA.__objc_ivar _OBJC_IVAR_$_MPSStateResponse._version
|| __DATA_CONST.__const _kMMCSKitErrorDomain
|| __DATA_CONST.__const _kMSASAccessControlGUIDKey
|| __DATA_CONST.__const _kMSASAccessControlKey
|| __DATA_CONST.__const _kMSASAlbumGUIDKey
|| __DATA_CONST.__const _kMSASAlbumKey
|| __DATA_CONST.__const _kMSASAlbumMetadataAllowMultipleContributorsKey
|| __DATA_CONST.__const _kMSASAlbumMetadataCreationDateKey
|| __DATA_CONST.__const _kMSASAlbumMetadataInviterAddressKey
|| __DATA_CONST.__const _kMSASAlbumMetadataIsPublicKey
|| __DATA_CONST.__const _kMSASAlbumMetadataNameKey
|| __DATA_CONST.__const _kMSASAlbumMetadataPhoneTokenKey
|| __DATA_CONST.__const _kMSASAlbumStateKey
|| __DATA_CONST.__const _kMSASAlbumsKey
|| __DATA_CONST.__const _kMSASAssetCollectionGUIDKey
|| __DATA_CONST.__const _kMSASAssetCollectionGUIDsKey
|| __DATA_CONST.__const _kMSASAssetCollectionKey
|| __DATA_CONST.__const _kMSASAssetCollectionMediaAssetTypeUnknown
|| __DATA_CONST.__const _kMSASAssetCollectionMediaAssetTypeVideo
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataBatchDateCreated
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataBatchGUID
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataDateCreated
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataIrisGroupIdentifier
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataIrisStillDisplayTime
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataIrisVideoDuration
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataLocationISO6709
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataOriginalPaths
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataPendingUploadGUID
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataPlaybackStyleAutoloop
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataPlaybackStyleIdentifier
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataPlaybackVariation
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataSourceContainerIdentifier
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataSourceItemIdentifier
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataSourceLibraryIdentifier
|| __DATA_CONST.__const _kMSASAssetCollectionMetadataVideoDuration
|| __DATA_CONST.__const _kMSASAssetCollectionStateKey
|| __DATA_CONST.__const _kMSASAssetCollectionsKey
|| __DATA_CONST.__const _kMSASAssetDownloaderErrorDomain
|| __DATA_CONST.__const _kMSASAssetGUIDKey
|| __DATA_CONST.__const _kMSASAssetTransferErrorDomain
|| __DATA_CONST.__const _kMSASAssetTransfererDidIdleNotification
|| __DATA_CONST.__const _kMSASAssetTypeFlagsKey
|| __DATA_CONST.__const _kMSASAssetUploaderErrorDomain
|| __DATA_CONST.__const _kMSASAssetsKey
|| __DATA_CONST.__const _kMSASCancelActivitiesFn
|| __DATA_CONST.__const _kMSASCommandKey
|| __DATA_CONST.__const _kMSASCommandRetryCountKey
|| __DATA_CONST.__const _kMSASCommandWasRequeuedKey
|| __DATA_CONST.__const _kMSASCommentGUIDKey
|| __DATA_CONST.__const _kMSASCommentKey
|| __DATA_CONST.__const _kMSASCommentPositionKey
|| __DATA_CONST.__const _kMSASCommentsChangeKey
|| __DATA_CONST.__const _kMSASCommentsKey
|| __DATA_CONST.__const _kMSASEnabledKey
|| __DATA_CONST.__const _kMSASErrorCountKey
|| __DATA_CONST.__const _kMSASErrorKey
|| __DATA_CONST.__const _kMSASEventKey
|| __DATA_CONST.__const _kMSASFailedAssetCollectionsAndErrorsKey
|| __DATA_CONST.__const _kMSASFailedAssetCollectionsKey
|| __DATA_CONST.__const _kMSASFileTransferPushTimerDidEndNotification
|| __DATA_CONST.__const _kMSASFileTransferPushTimerDidStartNotification
|| __DATA_CONST.__const _kMSASFunctionNameKey
|| __DATA_CONST.__const _kMSASInfoEventIsDueToAlbumDeletionKey
|| __DATA_CONST.__const _kMSASInfoEventIsDueToAssetCollectionDeletionKey
|| __DATA_CONST.__const _kMSASInfoIsAlbumResetSyncKey
|| __DATA_CONST.__const _kMSASInfoIsErrorRecoveryKey
|| __DATA_CONST.__const _kMSASInfoIsGlobalResetSyncKey
|| __DATA_CONST.__const _kMSASInfoIsLocalChangeKey
|| __DATA_CONST.__const _kMSASInfoKey
|| __DATA_CONST.__const _kMSASInfoNotInterestingKey
|| __DATA_CONST.__const _kMSASInvitationGUIDKey
|| __DATA_CONST.__const _kMSASInvitationTokenKey
|| __DATA_CONST.__const _kMSASIsInRetryStateFn
|| __DATA_CONST.__const _kMSASIsUIForegroundKey
|| __DATA_CONST.__const _kMSASLastCommentIDKey
|| __DATA_CONST.__const _kMSASLastViewedDateKey
|| __DATA_CONST.__const _kMSASMBSchemaVersionKey
|| __DATA_CONST.__const _kMSASModelAcceptInvitationWithGUIDFn
|| __DATA_CONST.__const _kMSASModelAcceptInvitationWithTokenFn
|| __DATA_CONST.__const _kMSASModelAccessControlGUIDsFn
|| __DATA_CONST.__const _kMSASModelAccessControlWithGUIDFn
|| __DATA_CONST.__const _kMSASModelActivityIsThrottledByLackOfDiskSpaceFn
|| __DATA_CONST.__const _kMSASModelAddAccessControlsFn
|| __DATA_CONST.__const _kMSASModelAddAlbumFn
|| __DATA_CONST.__const _kMSASModelAddAssetCollectionsFn
|| __DATA_CONST.__const _kMSASModelAddCommentsToAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASModelAlbumGUIDsFn
|| __DATA_CONST.__const _kMSASModelAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelAssetCollectionGUIDsFn
|| __DATA_CONST.__const _kMSASModelAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASModelCommentGUIDsFn
|| __DATA_CONST.__const _kMSASModelCommentWithGUIDFn
|| __DATA_CONST.__const _kMSASModelDeleteAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelDeleteAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASModelDeleteAssetCollectionsWithGUIDsFn
|| __DATA_CONST.__const _kMSASModelDeleteCommentWithGUIDFn
|| __DATA_CONST.__const _kMSASModelDidUpdateServerCommunicationBackoffDateNotification
|| __DATA_CONST.__const _kMSASModelErrorDomain
|| __DATA_CONST.__const _kMSASModelForgetEverythingFn
|| __DATA_CONST.__const _kMSASModelInvitationGUIDsFn
|| __DATA_CONST.__const _kMSASModelInvitationWithGUIDFn
|| __DATA_CONST.__const _kMSASModelIsAssetCollectionMarkedAsViewedFn
|| __DATA_CONST.__const _kMSASModelMarkAlbumGUIDAsViewedFn
|| __DATA_CONST.__const _kMSASModelMarkAsSpamAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelMarkAsSpamInvitationWithGUIDFn
|| __DATA_CONST.__const _kMSASModelMarkAsSpamInvitationWithTokenFn
|| __DATA_CONST.__const _kMSASModelMarkCommentsForAssetCollectionWithGUIDAsViewedFn
|| __DATA_CONST.__const _kMSASModelModifyAlbumMetadataFn
|| __DATA_CONST.__const _kMSASModelRefreshAccessControlListOfAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelRefreshCommentsForAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASModelRefreshContentOfAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelRefreshFn
|| __DATA_CONST.__const _kMSASModelRejectInvitationWithGUIDFn
|| __DATA_CONST.__const _kMSASModelRemoveAccessControlEntryWithGUIDFn
|| __DATA_CONST.__const _kMSASModelRetrieveAssetsFromAssetCollectionsWithGUIDs
|| __DATA_CONST.__const _kMSASModelRetrieveAssetsInAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelServerSideConfigFn
|| __DATA_CONST.__const _kMSASModelSetFocusAssetCollectionGUIDFn
|| __DATA_CONST.__const _kMSASModelSetMultipleContributorsEnabledFn
|| __DATA_CONST.__const _kMSASModelSetPublicAccessEnabledFn
|| __DATA_CONST.__const _kMSASModelSubscribeToAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelUnsubscribeFromAlbumWithGUIDFn
|| __DATA_CONST.__const _kMSASModelVideoURLForAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASModelVideoURLsForAssetCollectionWithGUIDFn
|| __DATA_CONST.__const _kMSASMoveLastViewedAssetCollectionKey
|| __DATA_CONST.__const _kMSASNewCtagKey
|| __DATA_CONST.__const _kMSASNextActivityDateFn
|| __DATA_CONST.__const _kMSASPDidReceiveRetryAfterNotification
|| __DATA_CONST.__const _kMSASPMFocusAlbumGUIDKey
|| __DATA_CONST.__const _kMSASPMFocusAssetCollectionGUIDKey
|| __DATA_CONST.__const _kMSASPMNextMMCSItemIDKey
|| __DATA_CONST.__const _kMSASPMServerSideConfigKey
|| __DATA_CONST.__const _kMSASPMServerSideConfigVersionKey
|| __DATA_CONST.__const _kMSASPPersonIDKey
|| __DATA_CONST.__const _kMSASPRetryAfterDateKey
|| __DATA_CONST.__const _kMSASPServerSideConfigurationDidChangeNotification
|| __DATA_CONST.__const _kMSASPVPendingRootCtagKey
|| __DATA_CONST.__const _kMSASPVRootCtagKey
|| __DATA_CONST.__const _kMSASPVRootCtagRetriesKey
|| __DATA_CONST.__const _kMSASParamsKey
|| __DATA_CONST.__const _kMSASPersonIDKey
|| __DATA_CONST.__const _kMSASPhoneInvitationDebugFakeAlbumUUIDDefaultsKey
|| __DATA_CONST.__const _kMSASProtocolErrorDomain
|| __DATA_CONST.__const _kMSASPushFn
|| __DATA_CONST.__const _kMSASResetSyncKey
|| __DATA_CONST.__const _kMSASRetryOutstandingActivitiesFn
|| __DATA_CONST.__const _kMSASRetryOutstandingActivitiesForPersonIDFn
|| __DATA_CONST.__const _kMSASRetvalKey
|| __DATA_CONST.__const _kMSASScaleFactorKey
|| __DATA_CONST.__const _kMSASServerSideConfigAPIVersionKey
|| __DATA_CONST.__const _kMSASServerSideConfigDefaultRetryAfterTimeKey
|| __DATA_CONST.__const _kMSASServerSideConfigDidChangeNotification
|| __DATA_CONST.__const _kMSASServerSideConfigDownloadMMCSBatchSizeKey
|| __DATA_CONST.__const _kMSASServerSideConfigDownloadMMCSErrorRetriesKey
|| __DATA_CONST.__const _kMSASServerSideConfigInvitationImageCountKey
|| __DATA_CONST.__const _kMSASServerSideConfigInvitationImageDimensionsKey
|| __DATA_CONST.__const _kMSASServerSideConfigIsCellularEnabledKey
|| __DATA_CONST.__const _kMSASServerSideConfigMMCSErrorRetriesKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxActiveTimeAfterGlobalResetSyncKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxActiveTimeAfterLossOfForegroundKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxActiveTimeAfterPushKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxCharsPerCommentKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxCommentsPerPhotoKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxInvitesSentPerDayKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxMMCSTokenValidityTimeKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxOwnedAlbumCountKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxPhotoCountPerShareKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxPhotosPerAlbumKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxPhotosSharedPerDayKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxPhotosSharedPerHourKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxSubscribedAlbumCountKey
|| __DATA_CONST.__const _kMSASServerSideConfigMaxSubscribersPerAlbumKey
|| __DATA_CONST.__const _kMSASServerSideConfigMetadataProtocolErrorRetriesKey
|| __DATA_CONST.__const _kMSASServerSideConfigMetadataProtocolNetworkErrorRetriesKey
|| __DATA_CONST.__const _kMSASServerSideConfigPersonIDKey
|| __DATA_CONST.__const _kMSASServerSideConfigPreviewImageDimensionsKey
|| __DATA_CONST.__const _kMSASServerSideConfigThumbnailImageDimensionsKey
|| __DATA_CONST.__const _kMSASServerSideConfigUploadMMCSBatchSizeKey
|| __DATA_CONST.__const _kMSASServerSideConfigVersionKey
|| __DATA_CONST.__const _kMSASServerSideConfigVideoDerivativesKey
|| __DATA_CONST.__const _kMSASSetFocusAlbumFn
|| __DATA_CONST.__const _kMSASSetIsUIForegroundFn
|| __DATA_CONST.__const _kMSASSharingRelationshipGUIDKey
|| __DATA_CONST.__const _kMSASSharingRelationshipKey
|| __DATA_CONST.__const _kMSASSharingRelationshipsKey
|| __DATA_CONST.__const _kMSASStabilizedIdleStateDidChangeNotification
|| __DATA_CONST.__const _kMSASStateMachineErrorDomain
|| __DATA_CONST.__const _kMSASSubscriberErrorDomain
|| __DATA_CONST.__const _kMSASSuccessfulAssetCollectionsKey
|| __DATA_CONST.__const _kMSASURLExpirationKey
|| __DATA_CONST.__const _kMSASUpdateAlbumFlagsKey
|| __DATA_CONST.__const _kMSArchiverUtilitiesErrorDomain
|| __DATA_CONST.__const _kMSAssetMediaAssetTypeKey
|| __DATA_CONST.__const _kMSAssetMetadataAssetFileTransferUUID
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeFlagsKey
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeFullSizeDerivative
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeKey
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeNominalSizeDerivative
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeOriginal
|| __DATA_CONST.__const _kMSAssetMetadataAssetTypeThumbnail
|| __DATA_CONST.__const _kMSAssetMetadataDateContentCreatedKey
|| __DATA_CONST.__const _kMSAssetMetadataDateContentModifiedKey
|| __DATA_CONST.__const _kMSAssetMetadataDeviceDisplayNameKey
|| __DATA_CONST.__const _kMSAssetMetadataDeviceIDKey
|| __DATA_CONST.__const _kMSAssetMetadataFileSizeKey
|| __DATA_CONST.__const _kMSAssetMetadataHTTPURL
|| __DATA_CONST.__const _kMSAssetMetadataItemIDKey
|| __DATA_CONST.__const _kMSAssetMetadataPixelHeightKey
|| __DATA_CONST.__const _kMSAssetMetadataPixelWidthKey
|| __DATA_CONST.__const _kMSAssetMetadataRasterToDisplayRotationAngleKey
|| __DATA_CONST.__const _kMSAssetMetadataSHA1HashKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceContainerDisplayNameKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceContainerIDKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceContainerTypeCameraRoll
|| __DATA_CONST.__const _kMSAssetMetadataSourceContainerTypeEvent
|| __DATA_CONST.__const _kMSAssetMetadataSourceContainerTypeKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceItemIDKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceLibraryIDKey
|| __DATA_CONST.__const _kMSAssetMetadataSourceiCloudPhotoLibraryEnabledKey
|| __DATA_CONST.__const _kMSAssetMetadataStreamIDKey
|| __DATA_CONST.__const _kMSDSPCDeleteResultKey
|| __DATA_CONST.__const _kMSDSPCFileHashKey
|| __DATA_CONST.__const _kMSDSPCUUIDKey
|| __DATA_CONST.__const _kMSDaemonErrorDomain
|| __DATA_CONST.__const _kMSDeleteStreamsProtocolCoreErrorDomain
|| __DATA_CONST.__const _kMSDeleterErrorDomain
|| __DATA_CONST.__const _kMSDoNothingCFTypeDictionaryValueCallbacks
|| __DATA_CONST.__const _kMSMSDServerSideConfigurationDidChangeNotification
|| __DATA_CONST.__const _kMSMSDServerSideConfigurationDidChangeNotificationParamPersonID
|| __DATA_CONST.__const _kMSPSPCResponseAssetHeadersKey
|| __DATA_CONST.__const _kMSPSPCResponseMMCSURLKey
|| __DATA_CONST.__const _kMSPublishStorageProtocolErrorDomain
|| __DATA_CONST.__const _kMSPublishStreamsProtocolCoreErrorDomain
|| __DATA_CONST.__const _kMSPublisherErrorDomain
|| __DATA_CONST.__const _kMSSPCAssetCollectionDeletedKey
|| __DATA_CONST.__const _kMSSPCAssetCollectionDerivedAssetsKey
|| __DATA_CONST.__const _kMSSPCAssetCollectionFileNameKey
|| __DATA_CONST.__const _kMSSPCAssetCollectionIdKey
|| __DATA_CONST.__const _kMSSPCAssetCollectionMasterAssetKey
|| __DATA_CONST.__const _kMSSPCAssetCollectionServerUploadedDateKey
|| __DATA_CONST.__const _kMSSPCAssetFileDataKey
|| __DATA_CONST.__const _kMSSPCAssetFileHashKey
|| __DATA_CONST.__const _kMSSPCAssetMMCSAccessHeaderKey
|| __DATA_CONST.__const _kMSSPCAssetMMCSURLKey
|| __DATA_CONST.__const _kMSSPCAssetMasterAssetHashKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataDateContentCreatedKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataDateContentModifiedKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataDeviceDisplayNameKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataDeviceIDKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataFileSizeKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataItemIDKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataPixelHeightKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataPixelWidthKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataRasterToDisplayRotationAngleKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSHA1HashKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceContainerDisplayNameKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceContainerIDKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceContainerTypeKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceItemIDKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceLibraryIDKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataSourceiCloudPhotoLibraryEnabledKey
|| __DATA_CONST.__const _kMSSPCAssetMetadataStreamIDKey
|| __DATA_CONST.__const _kMSSPCAssetPathKey
|| __DATA_CONST.__const _kMSSPCAssetProtocolFileSizeKey
|| __DATA_CONST.__const _kMSSPCAssetReceiptKey
|| __DATA_CONST.__const _kMSSPCAssetTypeKey
|| __DATA_CONST.__const _kMSSPCDeviceIDKey
|| __DATA_CONST.__const _kMSSPCDeviceNameKey
|| __DATA_CONST.__const _kMSSPCDeviceTypeKey
|| __DATA_CONST.__const _kMSSPCMediaAssetTypeKey
|| __DATA_CONST.__const _kMSSPUContextDeviceInfoAuthTokenKey
|| __DATA_CONST.__const _kMSSPUContextDeviceInfoClientInfoKey
|| __DATA_CONST.__const _kMSSPUContextDeviceInfoPushTokenKey
|| __DATA_CONST.__const _kMSSPUContextDeviceInfoUDIDKey
|| __DATA_CONST.__const _kMSSSCCNPersonIDKey
|| __DATA_CONST.__const _kMSSSCKBidirectionalSharingOnlyKey
|| __DATA_CONST.__const _kMSSSCKBidirectionalSharingOnlyValueYes
|| __DATA_CONST.__const _kMSSSCKMaxActiveTimeAfterGlobalResetSync
|| __DATA_CONST.__const _kMSSSCKMaxActiveTimeAfterLossOfForeground
|| __DATA_CONST.__const _kMSSSCKMaxActiveTimeAfterPush
|| __DATA_CONST.__const _kMSSSCKMaxFriendsKey
|| __DATA_CONST.__const _kMSSSCKMaxPhotosOwnerKey
|| __DATA_CONST.__const _kMSSSCKMaxPhotosSharedKey
|| __DATA_CONST.__const _kMSSSCKPubMaxErrorRetryCount
|| __DATA_CONST.__const _kMSSSCKPubMaxUploadBatchCount
|| __DATA_CONST.__const _kMSSSCKPubUploadBatchTargetSize
|| __DATA_CONST.__const _kMSSSCKSubDownloadBatchTargetSize
|| __DATA_CONST.__const _kMSSSCKSubMaxDownloadBatchCount
|| __DATA_CONST.__const _kMSSSCKSubMaxErrorRetryCount
|| __DATA_CONST.__const _kMSSSCKSupportedAssetsKey
|| __DATA_CONST.__const _kMSSSCKSupportedAssetsMaxAssetSizeMB
|| __DATA_CONST.__const _kMSSSCKSupportedAssetsUTI
|| __DATA_CONST.__const _kMSSSPCResponseMetadataDevicesKey
|| __DATA_CONST.__const _kMSSSPCResponseMetadataDisplayNameKey
|| __DATA_CONST.__const _kMSSSPCResponseMetadataMMCSHeadersKey
|| __DATA_CONST.__const _kMSSSPCResponseMetadataStreamIdKey
|| __DATA_CONST.__const _kMSSSPCResponseMetadataTokensKey
|| __DATA_CONST.__const _kMSSSPCStreamMetadataDevicesKey
|| __DATA_CONST.__const _kMSServerSideConfigChangedNotification
|| __DATA_CONST.__const _kMSServerSideConfigCoreErrorDomain
|| __DATA_CONST.__const _kMSSharingErrorDomain
|| __DATA_CONST.__const _kMSStreamsGetConnectionErrorDomain
|| __DATA_CONST.__const _kMSStreamsProtocolCoreErrorDomain
|| __DATA_CONST.__const _kMSStreamsPutConnectionErrorDomain
|| __DATA_CONST.__const _kMSSubscribeStorageProtocolErrorDomain
|| __DATA_CONST.__const _kMSSubscribeStreamsProtocolCoreErrorDomain
|| __DATA_CONST.__const _kMSSubscriberErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MMCSEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MPSStateRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MPSStateResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASAlbum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASAssetCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASAssetDownloader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASAssetTransferer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASAssetUploader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASComment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASDaemonModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASGroupedQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASModelBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASModelEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASPConnectionGate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASPendingChanges
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASPersonModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASServerSideModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASServerSideModelGroupedCommandQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASSharingRelationship
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSASStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSAlbumSharingDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSAssetCollection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSBackoffManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSCupidStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSDeleter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSImageScalingSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSMediaStreamDaemon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSProtocolUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSPublisher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServerSideConfigManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSServerSideConfigProtocol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSSubscribedStream
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSSubscriber
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSTimerGate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MSVideoDerivativeSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MMCSEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MPSStateRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MPSStateResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASAlbum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASAssetCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASAssetDownloader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASAssetTransferer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASAssetUploader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASComment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASDaemonModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASGroupedQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASModelBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASModelEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASPConnectionGate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASPendingChanges
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASPersonModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASServerSideModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASServerSideModelGroupedCommandQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASSharingRelationship
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSASStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSAlbumSharingDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSAssetCollection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSBackoffManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSCupidStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSDeleter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSImageScalingSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSMediaStreamDaemon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSProtocolUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSPublisher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServerSideConfigManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSServerSideConfigProtocol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSSubscribedStream
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSSubscriber
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSTimerGate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MSVideoDerivativeSpecification
|| __TEXT.__const _CoreMediaStreamVersionNumber
|| __TEXT.__const _CoreMediaStreamVersionString
|| __TEXT.__const _kMSASPMUploadPriorityDefault
|| __TEXT.__const _kMSASPMUploadPriorityVideo
|| __TEXT.__text _CreateDirectoryAtPathIfNonNil
|| __TEXT.__text _MPSStateRequestReadFrom
|| __TEXT.__text _MPSStateResponseReadFrom
|| __TEXT.__text _MSASInitialize
|| __TEXT.__text _MSASPlatform
|| __TEXT.__text _MSASPlatformIsDebugLoggingEnabled
|| __TEXT.__text _MSCFCopyLocalizedString
|| __TEXT.__text _MSCFCreateLocalizedFormat
|| __TEXT.__text _MSCoreMediaStreamInitialize
|| __TEXT.__text _MSDSPCSendDeletionRequestAsync
|| __TEXT.__text _MSLog
|| __TEXT.__text _MSLogFile
|| __TEXT.__text _MSLogSqliteError
|| __TEXT.__text _MSMMCSHashForData
|| __TEXT.__text _MSMMCSHashForFD
|| __TEXT.__text _MSMMCSHashForFileAtPath
|| __TEXT.__text _MSMediaStreamDir
|| __TEXT.__text _MSObjectsAreEquivalent
|| __TEXT.__text _MSPCUCreateBase64StringFromData
|| __TEXT.__text _MSPCUCreateDataFromHexString
|| __TEXT.__text _MSPCUCreateError
|| __TEXT.__text _MSPCUNumberFormatterWithSystemLocale
|| __TEXT.__text _MSPMMCSConnectionProperties
|| __TEXT.__text _MSPSPCSendMetadataAsync
|| __TEXT.__text _MSPSPCUCSendUploadCompleteAsync
|| __TEXT.__text _MSPURLConnectionProperties
|| __TEXT.__text _MSPathAlbumSharingAssetsDirForPersonID
|| __TEXT.__text _MSPathAlbumSharingDaemonPersistentStore
|| __TEXT.__text _MSPathAlbumSharingDir
|| __TEXT.__text _MSPathAlbumSharingDirForPersonID
|| __TEXT.__text _MSPathAlbumSharingModelForPersonID
|| __TEXT.__text _MSPathAlbumSharingPersistentStoreForPersonID
|| __TEXT.__text _MSPathAlbumSharingPublishMMCSLibraryForPersonID
|| __TEXT.__text _MSPathAlbumSharingSubscribeMMCSLibraryForPersonID
|| __TEXT.__text _MSPathConfigDir
|| __TEXT.__text _MSPathConfigDirForPersonID
|| __TEXT.__text _MSPathCreateDirectories
|| __TEXT.__text _MSPathDeleteDir
|| __TEXT.__text _MSPathDeleteDirForPersonID
|| __TEXT.__text _MSPathDeleteManifestForPersonID
|| __TEXT.__text _MSPathDeleteMasterManifest
|| __TEXT.__text _MSPathDeleteQueueForPersonID
|| __TEXT.__text _MSPathMMCSLibraryDir
|| __TEXT.__text _MSPathMMCSMasterManifest
|| __TEXT.__text _MSPathPerfDB
|| __TEXT.__text _MSPathPerfDir
|| __TEXT.__text _MSPathPublishDerivativesQueueForPersonID
|| __TEXT.__text _MSPathPublishDir
|| __TEXT.__text _MSPathPublishDirForPersonID
|| __TEXT.__text _MSPathPublishDiscardedQueueForPersonID
|| __TEXT.__text _MSPathPublishMMCSLibraryForPersonID
|| __TEXT.__text _MSPathPublishManifestForPersonID
|| __TEXT.__text _MSPathPublishMasterManifest
|| __TEXT.__text _MSPathPublishQueueForPersonID
|| __TEXT.__text _MSPathServerSideConfigPathForPersonID
|| __TEXT.__text _MSPathShareDir
|| __TEXT.__text _MSPathShareDirForPersonID
|| __TEXT.__text _MSPathShareManifestForPersonID
|| __TEXT.__text _MSPathSubscribeDir
|| __TEXT.__text _MSPathSubscribeDirForPersonID
|| __TEXT.__text _MSPathSubscribeMMCSLibraryForPersonID
|| __TEXT.__text _MSPathSubscribeMasterManifest
|| __TEXT.__text _MSPathSubscribeProtocolDirForPersonID
|| __TEXT.__text _MSPathSubscriberManifestForPersonID
|| __TEXT.__text _MSPathSubscriberRetrievalQueueForPersonID
|| __TEXT.__text _MSPlatform
|| __TEXT.__text _MSRPCReauthorizeAsync
|| __TEXT.__text _MSRSPCResetServerStateAsync
|| __TEXT.__text _MSSHA1HashForData
|| __TEXT.__text _MSSHA1HashForFileAtPath
|| __TEXT.__text _MSSHA1HashForFileDescriptor
|| __TEXT.__text _MSSPCCancelHTTPTransaction
|| __TEXT.__text _MSSPCCreateDataFromHexString
|| __TEXT.__text _MSSPCCreateHexStringFromData
|| __TEXT.__text _MSSPCStartHTTPTransaction
|| __TEXT.__text _MSSSCPCQueryConfiguration
|| __TEXT.__text _MSSSPCChunkParsingFinalize
|| __TEXT.__text _MSSSPCChunkParsingInitialize
|| __TEXT.__text _MSSSPCChunkParsingParseNextChunk
|| __TEXT.__text _MSSSPCGetMetadataAsync
|| __TEXT.__text _MSShouldLogAtLevel
|| __TEXT.__text _MSSqliteBindDataOrNull
|| __TEXT.__text _MSSqliteBindStringOrNull
|| __TEXT.__text _MSSqliteBindTimeIntervalSinceReferenceDateOrNull
|| __TEXT.__text _MSSqliteDataFromStatementColumn
|| __TEXT.__text _MSSqliteDateFromTimeIntervalStatementColumn
|| __TEXT.__text _MSSqliteIntFromStatementColumn
|| __TEXT.__text _MSSqliteObjectFromStatementColumn
|| __TEXT.__text _MSSqliteStringFromStatementColumn
|| __TEXT.__text _MSSqliteTrapForDBLockError
|| __TEXT.__text _createSHA1StringOfUDID
__ AuthKit: _OBJC_CLASS_$_AKAppleIDSession
__ CFNetwork: _CFHTTPMessageCopyAllHeaderFields
__ CFNetwork: _CFHTTPMessageGetResponseStatusCode
__ CFNetwork: _CFURLConnectionCancel
__ CFNetwork: _CFURLConnectionCreateWithProperties
__ CFNetwork: _CFURLConnectionScheduleWithRunLoop
__ CFNetwork: _CFURLConnectionStart
__ CFNetwork: _CFURLConnectionUnscheduleFromRunLoop
__ CFNetwork: _CFURLRequestAppendHTTPHeaderFieldValue
__ CFNetwork: _CFURLRequestCopyAllHTTPHeaderFields
__ CFNetwork: _CFURLRequestCreateMutable
__ CFNetwork: _CFURLRequestSetHTTPHeaderFieldValue
__ CFNetwork: _CFURLRequestSetHTTPRequestBody
__ CFNetwork: _CFURLRequestSetHTTPRequestMethod
__ CFNetwork: _CFURLResponseGetHTTPResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLConnection
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CFNetwork: _kCFURLConnectionProhibitAuthChallengeUI
__ CFNetwork: _kCFURLConnectionSocketStreamProperties
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ Contacts: _OBJC_CLASS_$_CNReputationHandle
__ Contacts: _OBJC_CLASS_$_CNReputationStore
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFCharacterSetCreateInvertedSet
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDateCreate
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateDateFromString
__ CoreFoundation: _CFDateFormatterSetProperty
__ CoreFoundation: _CFDateGetAbsoluteTime
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCreateWithUserInfoKeysAndValues
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFErrorGetDomain
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleGetSystem
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberFormatterCreate
__ CoreFoundation: _CFNumberFormatterCreateNumberFromString
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPropertyListCreateData
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCreateExternalRepresentation
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithFormatAndArguments
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFURLCreateWithString
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFDateFormatterIsLenient
__ CoreFoundation: _kCFErrorLocalizedDescriptionKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ IDS: _IDSCopyIDForPhoneNumberWithOptions
__ IDS: _IDSMaxMessageTimeout
__ IDS: _IDSSendMessageOptionEnforceRemoteTimeoutsKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSService
__ MMCS: _MMCSEngineCancelRequests
__ MMCS: _MMCSEngineCreate
__ MMCS: _MMCSEngineDestroy
__ MMCS: _MMCSEngineGetRequestMetrics
__ MMCS: _MMCSEngineIsActive
__ MMCS: _MMCSEngineSetMetricsEnabled
__ MMCS: _MMCSGetItems
__ MMCS: _MMCSMetricsRequestCopyDescription
__ MMCS: _MMCSPutItems
__ MMCS: _MMCSRegisterFile
__ MMCS: _MMCSSignatureAndSchemeSize
__ MMCS: _MMCSSignatureGeneratorCreate
__ MMCS: _MMCSSignatureGeneratorFinish
__ MMCS: _MMCSSignatureGeneratorUpdate
__ MMCS: _MMCSSignatureIsValid
__ MMCS: _MMCSUnregisterFile
__ MMCS: _MMCSUnregisterFiles
__ MMCS: _kMMCSEnginePropertyEnableGetChunks
__ MMCS: _kMMCSEnginePropertyEnableGetResume
__ MMCS: _kMMCSEnginePropertyEnableLocallySatisfiedGets
__ MMCS: _kMMCSEnginePropertyMaxInflightContainerRequests
__ MMCS: _kMMCSErrorDomain
__ MMCS: _kMMCSErrorUnderlyingErrorArrayKey
__ MMCS: _kMMCSRequestOptionStreamOptions
__ MobileBackup: _OBJC_CLASS_$_MBManager
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ UniformTypeIdentifiers: _OBJC_CLASS_$_UTType
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _link
__ libSystem.B.dylib: _lseek
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _mkstemp
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_trace_get_mode
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strcpy
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_index
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
MSASPhoneInvitations : NSObject <IDSServiceDelegate>
 @property  MSASStateMachine *stateMachine
 @property  MSASAlbum *album
 @property  IDSService *idsService
 @property  NSMutableDictionary *sendMessageIdentifierToPhone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSASPhoneInvitations setStateMachine:]
  -[MSASPhoneInvitations stateMachine]
  -[MSASPhoneInvitations service:account:identifier:didSendWithSuccess:error:]
  -[MSASPhoneInvitations setAlbum:]
  -[MSASPhoneInvitations idsService]
  -[MSASPhoneInvitations .cxx_destruct]
  -[MSASPhoneInvitations album]
  -[MSASPhoneInvitations setIdsService:]
  -[MSASPhoneInvitations init]
  -[MSASPhoneInvitations addPendingPhoneInvitations:toOwnedAlbum:inStateMachin:]
  -[MSASPhoneInvitations removeSharingRelationships:forAlbum:]
  -[MSASPhoneInvitations sendMessageIdentifierToPhone]
  -[MSASPhoneInvitations setSendMessageIdentifierToPhone:]


MSMediaStreamDaemon : MSDaemon
 @property  <MSMediaStreamDaemonDelegate> *delegate

  // instance methods
  -[MSMediaStreamDaemon _boundSubscriberForPersonID:]
  -[MSMediaStreamDaemon didReceiveNewShareState:oldShareState:forPersonID:]
  -[MSMediaStreamDaemon hasOutstandingActivity]
  -[MSMediaStreamDaemon didReceiveGlobalResetSyncForPersonID:]
  -[MSMediaStreamDaemon setDelegate:]
  -[MSMediaStreamDaemon ownSubscribedStreamForPersonID:]
  -[MSMediaStreamDaemon subscribedStreamsForPersonID:]
  -[MSMediaStreamDaemon delegate]
  -[MSMediaStreamDaemon enqueueAssetCollection:personID:outError:]
  -[MSMediaStreamDaemon nextActivityDate]
  -[MSMediaStreamDaemon personIDHasOutstandingPublications:]
  -[MSMediaStreamDaemon serverSideConfigurationForPersonID:]
  -[MSMediaStreamDaemon .cxx_destruct]
  -[MSMediaStreamDaemon didUnidle]
  -[MSMediaStreamDaemon pollForSubscriptionUpdatesForPersonID:]
  -[MSMediaStreamDaemon _boundPublisherForPersonID:]
  -[MSMediaStreamDaemon didReceiveAuthenticationSuccessForPersonID:]
  -[MSMediaStreamDaemon stop]
  -[MSMediaStreamDaemon reenqueueQuarantinedActivitiesWithReason:]
  -[MSMediaStreamDaemon _boundServerSideConfigManagerForPersonID:]
  -[MSMediaStreamDaemon retryOutstandingActivities]
  -[MSMediaStreamDaemon resetSubscriberSyncForPersonID:]
  -[MSMediaStreamDaemon forgetPersonID:]
  -[MSMediaStreamDaemon refreshServerSideConfigurationForPersonID:]
  -[MSMediaStreamDaemon didReceiveServerSideConfigurationVersion:forPersonID:]
  -[MSMediaStreamDaemon mayDownloadPersonID:]
  -[MSMediaStreamDaemon deleteAssetCollections:forPersonID:]
  -[MSMediaStreamDaemon isInRetryState]
  -[MSMediaStreamDaemon didReceiveAuthenticationFailureForPersonID:]
  -[MSMediaStreamDaemon stopAllActivities]
  -[MSMediaStreamDaemon didIdle]
  -[MSMediaStreamDaemon _boundDeleterForPersonID:]
  -[MSMediaStreamDaemon computeHashForAsset:personID:]
  -[MSMediaStreamDaemon showInvitationFailureAlertForPersonID:failures:]
  -[MSMediaStreamDaemon didExceedPublishQuotaForPersonID:retryDate:]
  -[MSMediaStreamDaemon start]
  -[MSMediaStreamDaemon abortAllActivityForPersonID:]
  -[MSMediaStreamDaemon dequeueAssetCollectionWithGUIDs:personID:outError:]
  -[MSMediaStreamDaemon pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:]
  -[MSMediaStreamDaemon didReceiveNewServerSideConfigurationForPersonID:]
  -[MSMediaStreamDaemon didReceivePushNotificationForPersonID:]
  -[MSMediaStreamDaemon init]


MSPublisher : MSCupidStateMachine <MSPublisher, MSPublishStreamsProtocolDelegate, MSPublishStorageProtocolDelegate>
 @property  MSMediaStreamDaemon *daemon
 @property  NSURL *storageProtocolURL
 @property  long long publishTargetByteCount
 @property  int publishBatchSize
 @property  <MSPublisherDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSPublisher nextActivityDate]
  +[MSPublisher existingPublisherForPersonID:]
  +[MSPublisher forgetPersonID:]
  +[MSPublisher _setMasterNextActivityDate:forPersonID:]
  +[MSPublisher isInRetryState]
  +[MSPublisher stopAllActivities]
  +[MSPublisher publisherForPersonID:]
  +[MSPublisher nextActivityDateForPersonID:]
  +[MSPublisher personIDsWithOutstandingActivities]
  +[MSPublisher _clearInstantiatedPublishersByPersonID]

  // instance methods
  -[MSPublisher abort]
  -[MSPublisher _stop]
  -[MSPublisher setDaemon:]
  -[MSPublisher _registerAsset:]
  -[MSPublisher setDelegate:]
  -[MSPublisher deactivate]
  -[MSPublisher delegate]
  -[MSPublisher dealloc]
  -[MSPublisher .cxx_destruct]
  -[MSPublisher initWithPersonID:baseURL:]
  -[MSPublisher stop]
  -[MSPublisher publish]
  -[MSPublisher daemon]
  -[MSPublisher _abort]
  -[MSPublisher _serverSideConfigurationDidChange:]
  -[MSPublisher submitAssetCollectionsForPublication:skipAssetCollections:]
  -[MSPublisher reenqueueQuarantinedAssetCollections]
  -[MSPublisher publishBatchSize]
  -[MSPublisher setPublishBatchSize:]
  -[MSPublisher publishStreamsProtocol:didFinishUploadingMetadataResponse:error:]
  -[MSPublisher publishStreamsProtocol:didReceiveAuthenticationError:]
  -[MSPublisher publishStreamsProtocol:didFinishSendingUploadCompleteError:]
  -[MSPublisher publishStorageProtocol:didFinishUploadingAsset:error:]
  -[MSPublisher publishStorageProtocol:didRequestFDForAsset:]
  -[MSPublisher publishStorageProtocol:didFinishUsingFD:forAsset:]
  -[MSPublisher publishStorageProtocolDidFinishPublishingAllAssets:]
  -[MSPublisher _updateMasterManifest]
  -[MSPublisher enqueueAssetCollections:outError:]
  -[MSPublisher dequeueAssetCollectionWithGUIDs:outError:]
  -[MSPublisher computeHashForAsset:]
  -[MSPublisher _refreshServerSideConfiguredParameters]
  -[MSPublisher _registerAllAssetsForWrapper:]
  -[MSPublisher _quarantineOrDiscardWrappers:withError:]
  -[MSPublisher _verifyAssetFile:]
  -[MSPublisher _collectionWithNoDerivatives:]
  -[MSPublisher _checkAssetCollectionFiles:]
  -[MSPublisher _checkObjectWrappers:]
  -[MSPublisher _isAllowedToUpload]
  -[MSPublisher _requestDerivatives]
  -[MSPublisher _addAssetToFileHashMap:]
  -[MSPublisher _removeAssetFromFileHashMap:]
  -[MSPublisher _removeAssetsInAssetCollectionWrappersFromAssetMap:]
  -[MSPublisher _didFinishUsingAssetCollections:]
  -[MSPublisher _sendMetadataToStreams]
  -[MSPublisher _invalidStreamsResponseErrorUnderlyingError:]
  -[MSPublisher _sendFilesToMMCS]
  -[MSPublisher _categorizeError:setOutIsIgnorable:setOutIsCounted:setOutIsFatal:setOutNeedsBackoff:setOutIsTemporary:setOutIsTokenAuth:setOutIsAuthError:]
  -[MSPublisher _sendUploadComplete]
  -[MSPublisher _abortedError]
  -[MSPublisher _forget]
  -[MSPublisher _isInRetryState]
  -[MSPublisher storageProtocolURL]
  -[MSPublisher setStorageProtocolURL:]
  -[MSPublisher publishTargetByteCount]
  -[MSPublisher setPublishTargetByteCount:]


MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate>
 @property  MSMediaStreamDaemon *daemon
 @property  long long targetRetrievalByteCount
 @property  int retrievalBatchSize
 @property  <MSSubscriberDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSSubscriber _descriptionForState:]
  +[MSSubscriber nextActivityDate]
  +[MSSubscriber subscriberForPersonID:]
  +[MSSubscriber forgetPersonID:]
  +[MSSubscriber _setMasterNextActivityDate:forPersonID:]
  +[MSSubscriber isInRetryState]
  +[MSSubscriber stopAllActivities]
  +[MSSubscriber _descriptionForRetrievalState:]
  +[MSSubscriber existingSubscriberForPersonID:]
  +[MSSubscriber nextActivityDateForPersonID:]
  +[MSSubscriber _clearInstantiatedSubscribersByPersonID]
  +[MSSubscriber personIDsWithOutstandingActivities]

  // instance methods
  -[MSSubscriber abort]
  -[MSSubscriber setDaemon:]
  -[MSSubscriber setDelegate:]
  -[MSSubscriber deactivate]
  -[MSSubscriber delegate]
  -[MSSubscriber dealloc]
  -[MSSubscriber .cxx_destruct]
  -[MSSubscriber initWithPersonID:baseURL:]
  -[MSSubscriber stop]
  -[MSSubscriber daemon]
  -[MSSubscriber subscribedStreams]
  -[MSSubscriber resetSync]
  -[MSSubscriber _abort]
  -[MSSubscriber _serverSideConfigurationDidChange:]
  -[MSSubscriber _updateMasterManifest]
  -[MSSubscriber _forget]
  -[MSSubscriber _isInRetryState]
  -[MSSubscriber checkForNewAssetCollectionsIfMissingCtag]
  -[MSSubscriber checkForNewAssetCollections]
  -[MSSubscriber checkForOutstandingActivities]
  -[MSSubscriber retrieveAssets:]
  -[MSSubscriber ownSubscribedStream]
  -[MSSubscriber subscribeStreamsProtocol:willReceiveUpdatesForPersonID:wasReset:metadata:]
  -[MSSubscriber subscribeStreamsProtocol:didReceiveAssetCollections:forPersonID:]
  -[MSSubscriber subscribeStreamsProtocol:didFinishReceivingUpdatesForPersonID:ctag:]
  -[MSSubscriber subscribeStreamsProtocol:didFindDisappearedSubscriptionForPersonID:]
  -[MSSubscriber subscribeStreamsProtocol:didFindTemporarilyUnavailableSubscriptionForPersonID:]
  -[MSSubscriber subscribeStreamsProtocol:didFinishError:]
  -[MSSubscriber subscribeStreamsProtocol:didReceiveAuthenticationError:]
  -[MSSubscriber subscribeStorageProtocol:didFinishRetrievingAsset:error:]
  -[MSSubscriber subscribeStorageProtocolDidFinishRetrievingAllAssets:]
  -[MSSubscriber reauthorizationProtocol:reauthorizedAssets:rejectedAssets:error:]
  -[MSSubscriber reauthorizationProtocol:didReceiveAuthenticationError:]
  -[MSSubscriber _changeStateTo:]
  -[MSSubscriber _changeRetrievalStateTo:]
  -[MSSubscriber _refreshServerSideConfigurationParameters]
  -[MSSubscriber _hasOutstandingPoll]
  -[MSSubscriber _setHasOutstandingPoll:]
  -[MSSubscriber _subscriptionsByStreamID]
  -[MSSubscriber _setSubscriptionsByStreamID:]
  -[MSSubscriber _isAllowedToDownload]
  -[MSSubscriber _checkForNewAssetCollections]
  -[MSSubscriber _didFinishRetrievingSubscriptionUpdate]
  -[MSSubscriber _didReceiveAuthenticationError:]
  -[MSSubscriber _retrieveAssets]
  -[MSSubscriber _retrieveNextAssets]
  -[MSSubscriber _reauthorizeAssets]
  -[MSSubscriber _stopOutSubscriberState:outRetrievalState:]
  -[MSSubscriber _finishedRetrievingAsset:]
  -[MSSubscriber targetRetrievalByteCount]
  -[MSSubscriber setTargetRetrievalByteCount:]
  -[MSSubscriber retrievalBatchSize]
  -[MSSubscriber setRetrievalBatchSize:]


MSAsset : NSObject <MMCSAsset, NSSecureCoding, NSCopying>
 @property  NSString *GUID
 @property  NSData *masterAssetHash
 @property  NSDictionary *metadata
 @property  NSString *path
 @property  NSURL *MMCSURL
 @property  NSData *fileData
 @property  NSString *assetCollectionGUID
 @property  NSDate *batchCreationDate
 @property  NSDate *photoCreationDate
 @property  NSError *error
 @property  id userInfo
 @property  unsigned long mediaAssetType
 @property  BOOL assetDataAvailableOnServer
 @property  NSData *fileHash
 @property  NSString *type
 @property  unsigned long protocolFileSize
 @property  NSString *MMCSUTI
 @property  unsigned long MMCSItemID
 @property  NSData *MMCSHash
 @property  unsigned long MMCSItemSize
 @property  NSError *MMCSError
 @property  NSString *MMCSAccessHeader
 @property  NSDate *MMCSAccessHeaderTimeStamp
 @property  NSString *MMCSReceipt
 @property  unsigned int MMCSItemFlags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSAsset supportsSecureCoding]
  +[MSAsset asset]
  +[MSAsset assetWithAsset:]
  +[MSAsset MSASPAssetFromProtocolDictionary:]

  // instance methods
  -[MSAsset isVideo]
  -[MSAsset GUID]
  -[MSAsset mediaAssetType]
  -[MSAsset setUserInfo:]
  -[MSAsset path]
  -[MSAsset userInfo]
  -[MSAsset encodeWithCoder:]
  -[MSAsset type]
  -[MSAsset error]
  -[MSAsset setMetadataValue:forKey:]
  -[MSAsset .cxx_destruct]
  -[MSAsset setError:]
  -[MSAsset setPath:]
  -[MSAsset setType:]
  -[MSAsset setMetadata:]
  -[MSAsset copyWithZone:]
  -[MSAsset metadata]
  -[MSAsset metadataValueForKey:]
  -[MSAsset isEqual:]
  -[MSAsset init]
  -[MSAsset initWithCoder:]
  -[MSAsset _fileSize]
  -[MSAsset initWithGUID:]
  -[MSAsset fileData]
  -[MSAsset setFileData:]
  -[MSAsset isPhoto]
  -[MSAsset fileHash]
  -[MSAsset setMasterAssetHash:]
  -[MSAsset setMediaAssetType:]
  -[MSAsset setFileHash:]
  -[MSAsset setGUID:]
  -[MSAsset assetCollectionGUID]
  -[MSAsset setAssetCollectionGUID:]
  -[MSAsset MMCSOpenNewFileDescriptor]
  -[MSAsset MMCSItemType]
  -[MSAsset MMCSUTI]
  -[MSAsset setMMCSUTI:]
  -[MSAsset MMCSItemID]
  -[MSAsset setMMCSItemID:]
  -[MSAsset MMCSHash]
  -[MSAsset setMMCSHash:]
  -[MSAsset MMCSItemSize]
  -[MSAsset setMMCSItemSize:]
  -[MSAsset MMCSError]
  -[MSAsset setMMCSError:]
  -[MSAsset MMCSAccessHeader]
  -[MSAsset setMMCSAccessHeader:]
  -[MSAsset MMCSAccessHeaderTimeStamp]
  -[MSAsset setMMCSAccessHeaderTimeStamp:]
  -[MSAsset MMCSReceipt]
  -[MSAsset setMMCSReceipt:]
  -[MSAsset MMCSItemFlags]
  -[MSAsset setMMCSItemFlags:]
  -[MSAsset protocolFileSize]
  -[MSAsset setProtocolFileSize:]
  -[MSAsset setMMCSAccessHeader:andTimeStamp:]
  -[MSAsset _fileSizeOnDisk]
  -[MSAsset addMetadataValue:forKey:]
  -[MSAsset masterAssetHash]
  -[MSAsset MMCSURL]
  -[MSAsset setMMCSURL:]
  -[MSAsset batchCreationDate]
  -[MSAsset setBatchCreationDate:]
  -[MSAsset photoCreationDate]
  -[MSAsset setPhotoCreationDate:]
  -[MSAsset assetDataAvailableOnServer]
  -[MSAsset setAssetDataAvailableOnServer:]
  -[MSAsset MSASPProtocolDictionary]


MSAssetCollection : NSObject <NSSecureCoding>
 @property  NSString *assetCollectionID
 @property  NSString *ctag
 @property  MSAsset *masterAsset
 @property  NSData *masterAssetHash
 @property  NSArray *derivedAssets
 @property  NSString *fileName
 @property  BOOL wasDeleted
 @property  NSDate *serverUploadedDate
 @property  long long initialFailureDate

  // class methods
  +[MSAssetCollection supportsSecureCoding]
  +[MSAssetCollection collectionWithMasterAsset:fileName:]
  +[MSAssetCollection collectionWithMasterAsset:fileName:derivedAssets:]

  // instance methods
  -[MSAssetCollection fileName]
  -[MSAssetCollection setCtag:]
  -[MSAssetCollection encodeWithCoder:]
  -[MSAssetCollection wasDeleted]
  -[MSAssetCollection .cxx_destruct]
  -[MSAssetCollection setWasDeleted:]
  -[MSAssetCollection ctag]
  -[MSAssetCollection setFileName:]
  -[MSAssetCollection isEqual:]
  -[MSAssetCollection initWithCoder:]
  -[MSAssetCollection setAssetCollectionID:]
  -[MSAssetCollection initWithMasterAsset:fileName:derivedAssets:]
  -[MSAssetCollection masterAssetHash]
  -[MSAssetCollection derivedAssets]
  -[MSAssetCollection setDerivedAssets:]
  -[MSAssetCollection assetCollectionID]
  -[MSAssetCollection masterAsset]
  -[MSAssetCollection setMasterAsset:]
  -[MSAssetCollection serverUploadedDate]
  -[MSAssetCollection setServerUploadedDate:]
  -[MSAssetCollection initialFailureDate]
  -[MSAssetCollection setInitialFailureDate:]


MSTimerGate : NSObject
 @property  BOOL enabled

  // instance methods
  -[MSTimerGate enable]
  -[MSTimerGate disable]
  -[MSTimerGate setEnabled:]
  -[MSTimerGate enabled]
  -[MSTimerGate init]


MSPublishStreamsProtocol : MSStreamsProtocol
  // instance methods
  -[MSPublishStreamsProtocol abort]
  -[MSPublishStreamsProtocol setDelegate:]
  -[MSPublishStreamsProtocol delegate]
  -[MSPublishStreamsProtocol dealloc]
  -[MSPublishStreamsProtocol .cxx_destruct]
  -[MSPublishStreamsProtocol initWithPersonID:baseURL:]
  -[MSPublishStreamsProtocol _missingAssetFieldErrorWithFieldName:]
  -[MSPublishStreamsProtocol _insertInfoAboutAsset:intoDictionary:outError:]
  -[MSPublishStreamsProtocol _resetConnectionVariables]
  -[MSPublishStreamsProtocol _metadataDictForAsset:outError:]
  -[MSPublishStreamsProtocol _metadataDictForAssetCollection:outError:]
  -[MSPublishStreamsProtocol sendMetadataForAssetCollections:]
  -[MSPublishStreamsProtocol sendUploadCompleteForAssetCollections:]
  -[MSPublishStreamsProtocol _coreProtocolDidFinishResponse:error:]
  -[MSPublishStreamsProtocol _coreProtocolDidFailAuthenticationError:]
  -[MSPublishStreamsProtocol _coreProtocolDidFinishUCResults:error:]


MSSubscribeStreamsProtocol : MSStreamsProtocol
  // instance methods
  -[MSSubscribeStreamsProtocol abort]
  -[MSSubscribeStreamsProtocol setDelegate:]
  -[MSSubscribeStreamsProtocol delegate]
  -[MSSubscribeStreamsProtocol dealloc]
  -[MSSubscribeStreamsProtocol initWithPersonID:baseURL:]
  -[MSSubscribeStreamsProtocol _invalidFieldErrorWithFieldName:]
  -[MSSubscribeStreamsProtocol _pathToChunkIndex:]
  -[MSSubscribeStreamsProtocol pollForSubscriptionUpdatesWithAccountAnchors:]
  -[MSSubscribeStreamsProtocol _coreProtocolDidFinishError:]
  -[MSSubscribeStreamsProtocol _coreProtocolDidGetDataChunk:]
  -[MSSubscribeStreamsProtocol _coreProtocolDidFailAuthentication:]
  -[MSSubscribeStreamsProtocol _parseChunks]
  -[MSSubscribeStreamsProtocol _parseNextChunk]
  -[MSSubscribeStreamsProtocol _chunkDidBeginStreamForPersonID:wasReset:metadata:]
  -[MSSubscribeStreamsProtocol _chunkDidParseAssetCollections:forPersonID:]
  -[MSSubscribeStreamsProtocol _chunkDidEndStreamForPersonID:ctag:]
  -[MSSubscribeStreamsProtocol _chunkDidFindSubscriptionGoneForPersonID:]
  -[MSSubscribeStreamsProtocol _chunkDidFindSubscriptionTemporarilyUnavailableForPersonID:]
  -[MSSubscribeStreamsProtocol _invalidFieldErrorWithFieldName:suggestion:]
  -[MSSubscribeStreamsProtocol _assetFromCoreDictionary:personID:outError:]
  -[MSSubscribeStreamsProtocol _assetCollectionsFromCoreArray:personID:outError:]


MSStreamsProtocol : NSObject
 @property  <MSStreamsProtocolDelegate> *delegate
 @property  NSString *personID
 @property  NSURL *putURL
 @property  NSURL *getURL
 @property  NSURL *resetURL
 @property  NSURL *reauthorizeURL
 @property  NSURL *uploadCompleteURL
 @property  NSURL *deleteURL

  // instance methods
  -[MSStreamsProtocol abort]
  -[MSStreamsProtocol personID]
  -[MSStreamsProtocol setDelegate:]
  -[MSStreamsProtocol delegate]
  -[MSStreamsProtocol .cxx_destruct]
  -[MSStreamsProtocol initWithPersonID:baseURL:]
  -[MSStreamsProtocol deleteURL]
  -[MSStreamsProtocol getURL]
  -[MSStreamsProtocol putURL]
  -[MSStreamsProtocol resetURL]
  -[MSStreamsProtocol reauthorizeURL]
  -[MSStreamsProtocol uploadCompleteURL]
  -[MSStreamsProtocol deviceInfoDict]
  -[MSStreamsProtocol _didFindServerSideConfigurationVersion:]
  -[MSStreamsProtocol _didReceiveRetryAfterDate:]
  -[MSStreamsProtocol _refreshAuthTokenForContext:]


MSMMCSProtocol : NSObject <MSStorageProtocol>
 @property  NSString *personID
 @property  ^{_mmcs_engine=} engine
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSMMCSProtocol computeItemIDForAsset:]

  // instance methods
  -[MSMMCSProtocol abort]
  -[MSMMCSProtocol personID]
  -[MSMMCSProtocol deactivate]
  -[MSMMCSProtocol engine]
  -[MSMMCSProtocol dealloc]
  -[MSMMCSProtocol .cxx_destruct]
  -[MSMMCSProtocol didFinishUsingAssets:]
  -[MSMMCSProtocol deactivateRemoveAllFiles:]
  -[MSMMCSProtocol initWithPersonID:path:]
  -[MSMMCSProtocol _getFileDescriptorFromItem:]
  -[MSMMCSProtocol _getUTIFromItem:]
  -[MSMMCSProtocol _getItemDone:path:error:]
  -[MSMMCSProtocol _putItemDone:putReceipt:error:]
  -[MSMMCSProtocol _requestCompleted]


MSPublishMMCSProtocol : MSMMCSProtocol <MSPublishStorageProtocol>
 @property  <MSPublishStorageProtocolDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSPublishMMCSProtocol setDelegate:]
  -[MSPublishMMCSProtocol deactivate]
  -[MSPublishMMCSProtocol delegate]
  -[MSPublishMMCSProtocol dealloc]
  -[MSPublishMMCSProtocol .cxx_destruct]
  -[MSPublishMMCSProtocol initWithPersonID:]
  -[MSPublishMMCSProtocol computeHashForAsset:]
  -[MSPublishMMCSProtocol _getFileDescriptorFromItem:]
  -[MSPublishMMCSProtocol _getUTIFromItem:]
  -[MSPublishMMCSProtocol _putItemDone:putReceipt:error:]
  -[MSPublishMMCSProtocol _requestCompleted]
  -[MSPublishMMCSProtocol publishAssets:URL:]
  -[MSPublishMMCSProtocol _putItemsFailure]


MSSubscribeMMCSProtocol : MSMMCSProtocol <MSSubscribeStorageProtocol>
 @property  <MSSubscribeStorageProtocolDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSSubscribeMMCSProtocol setDelegate:]
  -[MSSubscribeMMCSProtocol deactivate]
  -[MSSubscribeMMCSProtocol delegate]
  -[MSSubscribeMMCSProtocol dealloc]
  -[MSSubscribeMMCSProtocol .cxx_destruct]
  -[MSSubscribeMMCSProtocol initWithPersonID:]
  -[MSSubscribeMMCSProtocol retrieveAssets:]
  -[MSSubscribeMMCSProtocol _getItemDone:path:error:]
  -[MSSubscribeMMCSProtocol _requestCompleted]
  -[MSSubscribeMMCSProtocol _tellDelegateProtocolDidFinishRetrievingAssetParams:]


MPSStateResponse : PBCodable <NSCopying>
 @property  BOOL hasRetryAfterSeconds
 @property  long long retryAfterSeconds
 @property  BOOL hasMpsAction
 @property  int mpsAction
 @property  BOOL hasIcplAction
 @property  int icplAction
 @property  BOOL hasVersion
 @property  long long version

  // instance methods
  -[MPSStateResponse copyTo:]
  -[MPSStateResponse retryAfterSeconds]
  -[MPSStateResponse mergeFrom:]
  -[MPSStateResponse hasVersion]
  -[MPSStateResponse version]
  -[MPSStateResponse setRetryAfterSeconds:]
  -[MPSStateResponse dictionaryRepresentation]
  -[MPSStateResponse copyWithZone:]
  -[MPSStateResponse setHasVersion:]
  -[MPSStateResponse readFrom:]
  -[MPSStateResponse setVersion:]
  -[MPSStateResponse hasRetryAfterSeconds]
  -[MPSStateResponse writeTo:]
  -[MPSStateResponse isEqual:]
  -[MPSStateResponse setHasRetryAfterSeconds:]
  -[MPSStateResponse mpsAction]
  -[MPSStateResponse icplAction]
  -[MPSStateResponse setMpsAction:]
  -[MPSStateResponse setHasMpsAction:]
  -[MPSStateResponse hasMpsAction]
  -[MPSStateResponse mpsActionAsString:]
  -[MPSStateResponse StringAsMpsAction:]
  -[MPSStateResponse setIcplAction:]
  -[MPSStateResponse setHasIcplAction:]
  -[MPSStateResponse hasIcplAction]
  -[MPSStateResponse icplActionAsString:]
  -[MPSStateResponse StringAsIcplAction:]


MSSubscribedStream : NSObject <NSSecureCoding>
 @property  NSString *streamID
 @property  NSString *ctag

  // class methods
  +[MSSubscribedStream supportsSecureCoding]
  +[MSSubscribedStream subscribedStreamWithStreamID:]

  // instance methods
  -[MSSubscribedStream setCtag:]
  -[MSSubscribedStream encodeWithCoder:]
  -[MSSubscribedStream streamID]
  -[MSSubscribedStream .cxx_destruct]
  -[MSSubscribedStream ctag]
  -[MSSubscribedStream initWithCoder:]
  -[MSSubscribedStream initWithStreamID:]
  -[MSSubscribedStream setStreamID:]


MPSStateRequest : PBRequest <NSCopying>
 @property  BOOL hasMPSDeviceID
 @property  NSString *mPSDeviceID
 @property  BOOL hasICPLDeviceID
 @property  NSString *iCPLDeviceID
 @property  BOOL hasBackupDeviceID
 @property  NSString *backupDeviceID
 @property  BOOL hasBackupDeviceUUID
 @property  NSString *backupDeviceUUID
 @property  BOOL hasBackupDeviceUDID
 @property  NSString *backupDeviceUDID
 @property  BOOL hasOriginalLibrarySize
 @property  long long originalLibrarySize

  // instance methods
  -[MPSStateRequest copyTo:]
  -[MPSStateRequest .cxx_destruct]
  -[MPSStateRequest backupDeviceUDID]
  -[MPSStateRequest mergeFrom:]
  -[MPSStateRequest dictionaryRepresentation]
  -[MPSStateRequest backupDeviceUUID]
  -[MPSStateRequest copyWithZone:]
  -[MPSStateRequest readFrom:]
  -[MPSStateRequest writeTo:]
  -[MPSStateRequest isEqual:]
  -[MPSStateRequest setBackupDeviceUUID:]
  -[MPSStateRequest hasMPSDeviceID]
  -[MPSStateRequest hasICPLDeviceID]
  -[MPSStateRequest hasBackupDeviceID]
  -[MPSStateRequest hasBackupDeviceUUID]
  -[MPSStateRequest hasBackupDeviceUDID]
  -[MPSStateRequest setOriginalLibrarySize:]
  -[MPSStateRequest setHasOriginalLibrarySize:]
  -[MPSStateRequest hasOriginalLibrarySize]
  -[MPSStateRequest mPSDeviceID]
  -[MPSStateRequest setMPSDeviceID:]
  -[MPSStateRequest iCPLDeviceID]
  -[MPSStateRequest setICPLDeviceID:]
  -[MPSStateRequest backupDeviceID]
  -[MPSStateRequest setBackupDeviceID:]
  -[MPSStateRequest setBackupDeviceUDID:]
  -[MPSStateRequest originalLibrarySize]


MSServerSideConfigProtocol : NSObject
 @property  <MSServerSideConfigProtocolDelegate> *delegate
 @property  NSString *personID

  // instance methods
  -[MSServerSideConfigProtocol abort]
  -[MSServerSideConfigProtocol personID]
  -[MSServerSideConfigProtocol _didFailAuthenticationWithError:]
  -[MSServerSideConfigProtocol setDelegate:]
  -[MSServerSideConfigProtocol delegate]
  -[MSServerSideConfigProtocol dealloc]
  -[MSServerSideConfigProtocol .cxx_destruct]
  -[MSServerSideConfigProtocol queryConfiguration]
  -[MSServerSideConfigProtocol initWithPersonID:baseURL:]
  -[MSServerSideConfigProtocol _didFinishWithResponse:error:]


MSServerSideConfigManager : NSObject <MSServerSideConfigProtocolDelegate>
 @property  NSString *personID
 @property  NSDictionary *config
 @property  MSMediaStreamDaemon *daemon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSServerSideConfigManager existingConfigManagerForPersonID:]
  +[MSServerSideConfigManager objectForKey:forPersonID:defaultValue:]
  +[MSServerSideConfigManager intValueForParameter:forPersonID:defaultValue:]
  +[MSServerSideConfigManager forgetPersonID:]
  +[MSServerSideConfigManager abortAllActivities]
  +[MSServerSideConfigManager longLongValueForParameter:forPersonID:defaultValue:]
  +[MSServerSideConfigManager longValueForParameter:forPersonID:defaultValue:]
  +[MSServerSideConfigManager configManagerForPersonID:]
  +[MSServerSideConfigManager doubleValueForParameter:forPersonID:defaultValue:]

  // instance methods
  -[MSServerSideConfigManager abort]
  -[MSServerSideConfigManager personID]
  -[MSServerSideConfigManager setConfig:]
  -[MSServerSideConfigManager setDaemon:]
  -[MSServerSideConfigManager config]
  -[MSServerSideConfigManager dealloc]
  -[MSServerSideConfigManager serverSideConfigProtocol:didFinishWithConfiguration:error:]
  -[MSServerSideConfigManager .cxx_destruct]
  -[MSServerSideConfigManager initWithPersonID:baseURL:]
  -[MSServerSideConfigManager refreshConfiguration]
  -[MSServerSideConfigManager daemon]
  -[MSServerSideConfigManager serverSideConfigProtocol:didReceiveAuthenticationError:]


MSASPersonInfoManager : NSObject
 @property  NSMutableDictionary *personIDToPersonInfoDictionary
 @property  NSString *pathForPersonInfoDictionary

  // class methods
  +[MSASPersonInfoManager allocWithZone:]
  +[MSASPersonInfoManager sharedManager]

  // instance methods
  -[MSASPersonInfoManager initWithPath:]
  -[MSASPersonInfoManager .cxx_destruct]
  -[MSASPersonInfoManager firstNameForPersonID:]
  -[MSASPersonInfoManager lastNameForPersonID:]
  -[MSASPersonInfoManager emailForPersonID:]
  -[MSASPersonInfoManager fullNameForPersonID:]
  -[MSASPersonInfoManager updateWithSharingRelationship:]
  -[MSASPersonInfoManager personIDToPersonInfoDictionary]
  -[MSASPersonInfoManager setPersonIDToPersonInfoDictionary:]
  -[MSASPersonInfoManager pathForPersonInfoDictionary]
  -[MSASPersonInfoManager setPathForPersonInfoDictionary:]


MSResetServerProtocol : MSStreamsProtocol
  // instance methods
  -[MSResetServerProtocol abort]
  -[MSResetServerProtocol setDelegate:]
  -[MSResetServerProtocol delegate]
  -[MSResetServerProtocol dealloc]
  -[MSResetServerProtocol resetServerState]
  -[MSResetServerProtocol initWithPersonID:baseURL:]
  -[MSResetServerProtocol _coreProtocolDidFailAuthenticationError:]
  -[MSResetServerProtocol _coreProtocolDidFinishError:]


MSResetServer : NSObject <MSResetServerProtocolDelegate>
 @property  NSString *personID
 @property  MSMediaStreamDaemon *daemon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSResetServer resetServerObjectWithPersonID:baseURL:]

  // instance methods
  -[MSResetServer personID]
  -[MSResetServer setDaemon:]
  -[MSResetServer .cxx_destruct]
  -[MSResetServer initWithPersonID:baseURL:]
  -[MSResetServer daemon]
  -[MSResetServer resetServerProtocol:didFinishWithError:]
  -[MSResetServer resetServerProtocol:didReceiveAuthenticationError:]
  -[MSResetServer resetServer]


MSReauthorizationProtocol : MSStreamsProtocol
  // instance methods
  -[MSReauthorizationProtocol abort]
  -[MSReauthorizationProtocol setDelegate:]
  -[MSReauthorizationProtocol delegate]
  -[MSReauthorizationProtocol dealloc]
  -[MSReauthorizationProtocol .cxx_destruct]
  -[MSReauthorizationProtocol initWithPersonID:baseURL:]
  -[MSReauthorizationProtocol _coreProtocolDidFinishResponse:error:]
  -[MSReauthorizationProtocol _coreProtocolDidFailAuthenticationError:]
  -[MSReauthorizationProtocol requestReauthorizationForAssets:]


MSObjectQueue : NSObject
 @property  long long count

  // instance methods
  -[MSObjectQueue initWithPath:]
  -[MSObjectQueue dealloc]
  -[MSObjectQueue count]
  -[MSObjectQueue _statementLabel:query:]
  -[MSObjectQueue appendObjectWrappers:]
  -[MSObjectQueue _objectWrapperFromQueueQuery:outSize:]
  -[MSObjectQueue allObjectWrappersMaxCount:]
  -[MSObjectQueue objectWrappersWithZeroSizeMaxCount:]
  -[MSObjectQueue smallestObjectWrappersTargetTotalSize:maxCount:]
  -[MSObjectQueue allObjectWrappersOrderedByDescendingErrorCountMaxCount:]
  -[MSObjectQueue removeObjectWrappersFromQueue:]
  -[MSObjectQueue removeAllObjectWrappersFromQueue]
  -[MSObjectQueue commitErrorCountsForObjectWrappers:]
  -[MSObjectQueue commitObjectsWrappers:]


MSObjectWrapper : NSObject
 @property  long long size
 @property  long long uniqueID
 @property  <NSCoding> *object
 @property  int errorCount

  // class methods
  +[MSObjectWrapper wrapperWithObject:size:]
  +[MSObjectWrapper indexOfObject:inWrapperArray:]
  +[MSObjectWrapper objectsFromWrappers:]
  +[MSObjectWrapper objectsFromWrappers:equalToObject:]

  // instance methods
  -[MSObjectWrapper uniqueID]
  -[MSObjectWrapper errorCount]
  -[MSObjectWrapper .cxx_destruct]
  -[MSObjectWrapper object]
  -[MSObjectWrapper size]
  -[MSObjectWrapper setErrorCount:]
  -[MSObjectWrapper setUniqueID:]
  -[MSObjectWrapper setSize:]
  -[MSObjectWrapper initWithObject:size:]


MSBackoffManager : NSObject <NSSecureCoding>
 @property  <MSBackoffManagerDelegate> *delegate
 @property  double initialInterval
 @property  double backoffFactor
 @property  double randomizeFactor
 @property  double maxBackoffInterval
 @property  double currentInterval
 @property  NSDate *nextExpiryDate
 @property  NSDate *retryAfterDate

  // class methods
  +[MSBackoffManager supportsSecureCoding]

  // instance methods
  -[MSBackoffManager retryAfterDate]
  -[MSBackoffManager setDelegate:]
  -[MSBackoffManager _complainAboutMissingKeyInArchive:]
  -[MSBackoffManager encodeWithCoder:]
  -[MSBackoffManager delegate]
  -[MSBackoffManager setRetryAfterDate:]
  -[MSBackoffManager setInitialInterval:]
  -[MSBackoffManager reset]
  -[MSBackoffManager initialInterval]
  -[MSBackoffManager .cxx_destruct]
  -[MSBackoffManager randomizeFactor]
  -[MSBackoffManager backoff]
  -[MSBackoffManager maxBackoffInterval]
  -[MSBackoffManager backoffFactor]
  -[MSBackoffManager currentInterval]
  -[MSBackoffManager setBackoffFactor:]
  -[MSBackoffManager setRandomizeFactor:]
  -[MSBackoffManager copyParameters]
  -[MSBackoffManager initWithInitialInterval:backoffFactor:randomizeFactor:maxBackoffInterval:retryAfterDate:]
  -[MSBackoffManager nextExpiryDate]
  -[MSBackoffManager setMaxBackoffInterval:]
  -[MSBackoffManager setNextExpiryDate:]
  -[MSBackoffManager isEqual:]
  -[MSBackoffManager setCurrentInterval:]
  -[MSBackoffManager initWithCoder:]
  -[MSBackoffManager didReceiveRetryAfterDate:]


MSCupidStateMachine : NSObject <MSStreamsProtocolDelegate>
 @property  NSMutableDictionary *_userManifest
 @property  NSString *personID
 @property  BOOL hasDeactivated
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSCupidStateMachine personID]
  -[MSCupidStateMachine deactivate]
  -[MSCupidStateMachine dealloc]
  -[MSCupidStateMachine .cxx_destruct]
  -[MSCupidStateMachine _userManifest]
  -[MSCupidStateMachine initWithPersonID:]
  -[MSCupidStateMachine _abort]
  -[MSCupidStateMachine protocol:didReceiveRetryAfterDate:]
  -[MSCupidStateMachine _updateMasterManifest]
  -[MSCupidStateMachine _forget]
  -[MSCupidStateMachine forget]
  -[MSCupidStateMachine _commitUserManifest]
  -[MSCupidStateMachine _resetStreamsBackoffTimer]
  -[MSCupidStateMachine _backoffStreamsBackoffTimer]
  -[MSCupidStateMachine _didReceiveStreamsRetryAfterDate:]
  -[MSCupidStateMachine _resetMMCSBackoffTimer]
  -[MSCupidStateMachine _backoffMMCSBackoffTimer]
  -[MSCupidStateMachine _didReceiveMMCSRetryAfterDate:]
  -[MSCupidStateMachine _latestNextActivityDate]
  -[MSCupidStateMachine set_userManifest:]
  -[MSCupidStateMachine hasDeactivated]
  -[MSCupidStateMachine setHasDeactivated:]


MSDeleter : MSCupidStateMachine <MSDeleter, MSDeleteStreamsProtocolDelegate>
 @property  MSMediaStreamDaemon *daemon
 @property  int batchSize
 @property  <MSDeleterDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MSDeleter existingDeleterForPersonID:]
  +[MSDeleter nextActivityDate]
  +[MSDeleter forgetPersonID:]
  +[MSDeleter _setMasterNextActivityDate:forPersonID:]
  +[MSDeleter isInRetryState]
  +[MSDeleter abortAllActivities]
  +[MSDeleter stopAllActivities]
  +[MSDeleter nextActivityDateForPersonID:]
  +[MSDeleter personIDsWithOutstandingActivities]
  +[MSDeleter deleterForPersonID:]
  +[MSDeleter _clearInstantiatedDeletersByPersonID]

  // instance methods
  -[MSDeleter abort]
  -[MSDeleter _stop]
  -[MSDeleter setDaemon:]
  -[MSDeleter setBatchSize:]
  -[MSDeleter setDelegate:]
  -[MSDeleter batchSize]
  -[MSDeleter deactivate]
  -[MSDeleter delegate]
  -[MSDeleter dealloc]
  -[MSDeleter .cxx_destruct]
  -[MSDeleter initWithPersonID:baseURL:]
  -[MSDeleter stop]
  -[MSDeleter daemon]
  -[MSDeleter deleteAssetCollections:]
  -[MSDeleter _abort]
  -[MSDeleter _updateMasterManifest]
  -[MSDeleter _abortedError]
  -[MSDeleter _forget]
  -[MSDeleter _isInRetryState]
  -[MSDeleter performOutstandingActivities]
  -[MSDeleter deleteProtocol:didFinishSuccessfulCollections:failedCollections:error:]
  -[MSDeleter deleteProtocol:didReceiveAuthenticationError:]
  -[MSDeleter _isAllowedToDelete]
  -[MSDeleter _sendDeleteRequest]


MSDeleteStreamsProtocol : MSStreamsProtocol
 @property  <MSDeleteStreamsProtocolDelegate> *delegate

  // instance methods
  -[MSDeleteStreamsProtocol abort]
  -[MSDeleteStreamsProtocol .cxx_destruct]
  -[MSDeleteStreamsProtocol initWithPersonID:baseURL:]
  -[MSDeleteStreamsProtocol _resetConnectionVariables]
  -[MSDeleteStreamsProtocol _coreProtocolDidFinishResponse:error:]
  -[MSDeleteStreamsProtocol _coreProtocolDidFailAuthenticationError:]
  -[MSDeleteStreamsProtocol sendDeletionRequestForAssetCollections:]


MSASAlbum : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *ownerEmail
 @property  NSString *ownerFullName
 @property  NSString *ownerPersonID
 @property  NSString *ownerFirstName
 @property  NSString *ownerLastName
 @property  BOOL ownerIsWhitelisted
 @property  NSDate *subscriptionDate
 @property  NSString *GUID
 @property  NSString *ctag
 @property  int relationshipState
 @property  NSString *foreignCtag
 @property  NSString *URLString
 @property  NSString *publicURLString
 @property  NSDictionary *metadata
 @property  id context
 @property  BOOL isFamilySharedAlbum
 @property  BOOL useForeignCtag

  // class methods
  +[MSASAlbum supportsSecureCoding]
  +[MSASAlbum albumWithAlbum:]
  +[MSASAlbum album]

  // instance methods
  -[MSASAlbum setCtag:]
  -[MSASAlbum GUID]
  -[MSASAlbum encodeWithCoder:]
  -[MSASAlbum setMetadataValue:forKey:]
  -[MSASAlbum .cxx_destruct]
  -[MSASAlbum setMetadata:]
  -[MSASAlbum setContext:]
  -[MSASAlbum copyWithZone:]
  -[MSASAlbum context]
  -[MSASAlbum metadata]
  -[MSASAlbum ctag]
  -[MSASAlbum metadataValueForKey:]
  -[MSASAlbum URLString]
  -[MSASAlbum isEqual:]
  -[MSASAlbum initWithCoder:]
  -[MSASAlbum setURLString:]
  -[MSASAlbum relationshipState]
  -[MSASAlbum subscriptionDate]
  -[MSASAlbum isFamilySharedAlbum]
  -[MSASAlbum ownerEmail]
  -[MSASAlbum ownerFirstName]
  -[MSASAlbum ownerFullName]
  -[MSASAlbum ownerIsWhitelisted]
  -[MSASAlbum ownerLastName]
  -[MSASAlbum ownerPersonID]
  -[MSASAlbum publicURLString]
  -[MSASAlbum setGUID:]
  -[MSASAlbum useForeignCtag]
  -[MSASAlbum setOwnerEmail:]
  -[MSASAlbum setOwnerPersonID:]
  -[MSASAlbum setOwnerFullName:]
  -[MSASAlbum setOwnerFirstName:]
  -[MSASAlbum setOwnerLastName:]
  -[MSASAlbum setOwnerIsWhitelisted:]
  -[MSASAlbum setSubscriptionDate:]
  -[MSASAlbum setRelationshipState:]
  -[MSASAlbum foreignCtag]
  -[MSASAlbum setForeignCtag:]
  -[MSASAlbum setPublicURLString:]
  -[MSASAlbum setIsFamilySharedAlbum:]


MSASAssetCollection : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *GUID
 @property  NSString *ctag
 @property  NSString *albumGUID
 @property  NSArray *assets
 @property  NSString *fileName
 @property  NSString *path
 @property  id userInfo
 @property  NSDictionary *metadata
 @property  long long photoNumber
 @property  NSDate *timestamp
 @property  NSString *personID
 @property  NSString *fullName
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *email
 @property  BOOL isDeletable
 @property  BOOL isMine
 @property  BOOL hasComments

  // class methods
  +[MSASAssetCollection supportsSecureCoding]
  +[MSASAssetCollection MSASPAssetCollectionFromProtocolDictionary:]
  +[MSASAssetCollection assetCollectionWithAssetCollection:]

  // instance methods
  -[MSASAssetCollection setPersonID:]
  -[MSASAssetCollection setFirstName:]
  -[MSASAssetCollection personID]
  -[MSASAssetCollection fileName]
  -[MSASAssetCollection firstName]
  -[MSASAssetCollection isVideo]
  -[MSASAssetCollection setCtag:]
  -[MSASAssetCollection GUID]
  -[MSASAssetCollection fullName]
  -[MSASAssetCollection setTimestamp:]
  -[MSASAssetCollection mediaAssetType]
  -[MSASAssetCollection lastName]
  -[MSASAssetCollection assets]
  -[MSASAssetCollection setUserInfo:]
  -[MSASAssetCollection path]
  -[MSASAssetCollection userInfo]
  -[MSASAssetCollection encodeWithCoder:]
  -[MSASAssetCollection setFullName:]
  -[MSASAssetCollection setMetadataValue:forKey:]
  -[MSASAssetCollection setEmail:]
  -[MSASAssetCollection .cxx_destruct]
  -[MSASAssetCollection setPath:]
  -[MSASAssetCollection setMetadata:]
  -[MSASAssetCollection email]
  -[MSASAssetCollection copyWithZone:]
  -[MSASAssetCollection timestamp]
  -[MSASAssetCollection metadata]
  -[MSASAssetCollection setAssets:]
  -[MSASAssetCollection ctag]
  -[MSASAssetCollection setLastName:]
  -[MSASAssetCollection setFileName:]
  -[MSASAssetCollection isEqual:]
  -[MSASAssetCollection initWithCoder:]
  -[MSASAssetCollection isDeletable]
  -[MSASAssetCollection hasComments]
  -[MSASAssetCollection isAutoloopVideo]
  -[MSASAssetCollection albumGUID]
  -[MSASAssetCollection setAlbumGUID:]
  -[MSASAssetCollection isPhotoIris]
  -[MSASAssetCollection isMine]
  -[MSASAssetCollection setIsDeletable:]
  -[MSASAssetCollection setIsMine:]
  -[MSASAssetCollection setGUID:]
  -[MSASAssetCollection initWithFileName:path:]
  -[MSASAssetCollection hasVideoAsset]
  -[MSASAssetCollection photoNumber]
  -[MSASAssetCollection setPhotoNumber:]
  -[MSASAssetCollection setHasComments:]
  -[MSASAssetCollection MSASPProtocolDictionary]


MSAlbumSharingDaemon : MSDaemon
 @property  NSObject<OS_dispatch_queue> *mapQueue
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *personIDToStateMachineMap
 @property  NSMutableDictionary *personIDToDelegateMap
 @property  MSASDaemonModel *daemonModel
 @property  int busyCount
 @property  BOOL isRetryingOutstandingActivities
 @property  NSMutableDictionary *nextUpdateDateByPersonID
 @property  <MSAlbumSharingDaemonDelegate> *delegate

  // instance methods
  -[MSAlbumSharingDaemon isRetryingOutstandingActivities]
  -[MSAlbumSharingDaemon markAlbumGUIDAsViewed:personID:]
  -[MSAlbumSharingDaemon cancelActivitiesForPersonID:]
  -[MSAlbumSharingDaemon markAlbumGUIDAsViewed:personID:info:]
  -[MSAlbumSharingDaemon shutDown]
  -[MSAlbumSharingDaemon refreshResetSync:personID:]
  -[MSAlbumSharingDaemon subscribeToAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon setMapQueue:]
  -[MSAlbumSharingDaemon stopAssetDownloadsForPersonID:]
  -[MSAlbumSharingDaemon boundStateMachineForPersonID:]
  -[MSAlbumSharingDaemon unsubscribeFromAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon deleteCommentWithGUID:personID:]
  -[MSAlbumSharingDaemon setMultipleContributorsEnabled:forAlbumWithGUID:personID:completionBlock:]
  -[MSAlbumSharingDaemon deleteAssetCollectionWithGUID:personID:]
  -[MSAlbumSharingDaemon personIDListeningToPushNotification]
  -[MSAlbumSharingDaemon _postModelShutdownForPersonID:completionBlock:]
  -[MSAlbumSharingDaemon persistentObjectForKey:personID:]
  -[MSAlbumSharingDaemon refreshCommentsForAssetCollectionWithGUID:resetSync:personID:]
  -[MSAlbumSharingDaemon refreshAccessControlListOfAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon setBusyCount:]
  -[MSAlbumSharingDaemon addAccessControlEntries:toAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon shutDownCompletionBlock:]
  -[MSAlbumSharingDaemon markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:]
  -[MSAlbumSharingDaemon acceptInvitationWithGUID:personID:]
  -[MSAlbumSharingDaemon busyCount]
  -[MSAlbumSharingDaemon didReceiveGlobalResetSyncForPersonID:]
  -[MSAlbumSharingDaemon setDelegate:]
  -[MSAlbumSharingDaemon markAsSpamInvitationWithToken:personID:]
  -[MSAlbumSharingDaemon addAssetCollections:toAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon refreshResetSync:personID:info:]
  -[MSAlbumSharingDaemon addComments:toAssetCollectionWithGUID:personID:]
  -[MSAlbumSharingDaemon acceptInvitationWithGUID:personID:info:]
  -[MSAlbumSharingDaemon markAsSpamInvitationWithGUID:personID:]
  -[MSAlbumSharingDaemon workQueue]
  -[MSAlbumSharingDaemon removeAccessControlEntryWithGUID:personID:]
  -[MSAlbumSharingDaemon delegate]
  -[MSAlbumSharingDaemon deleteAlbumWithGUID:inviterAddress:]
  -[MSAlbumSharingDaemon personIDToStateMachineMap]
  -[MSAlbumSharingDaemon setWorkQueue:]
  -[MSAlbumSharingDaemon addAlbum:personID:info:]
  -[MSAlbumSharingDaemon nextActivityDate]
  -[MSAlbumSharingDaemon addAlbum:personID:]
  -[MSAlbumSharingDaemon setPublicAccessEnabled:forAlbumWithGUID:personID:info:completionBlock:]
  -[MSAlbumSharingDaemon didDestroyStateMachineForPersonID:]
  -[MSAlbumSharingDaemon setFocusAlbumGUID:forPersonID:]
  -[MSAlbumSharingDaemon refreshContentOfAlbumWithGUID:resetSync:personID:]
  -[MSAlbumSharingDaemon serverSideConfigurationForPersonID:]
  -[MSAlbumSharingDaemon .cxx_destruct]
  -[MSAlbumSharingDaemon didUnidle]
  -[MSAlbumSharingDaemon addComments:toAssetCollectionWithGUID:personID:info:]
  -[MSAlbumSharingDaemon addAlbum:]
  -[MSAlbumSharingDaemon setPersonIDToStateMachineMap:]
  -[MSAlbumSharingDaemon setPersistentObject:forKey:personID:]
  -[MSAlbumSharingDaemon sendServerSideConfigurationDidChangeNotificationForPersonID:]
  -[MSAlbumSharingDaemon forgetEverythingAboutPersonID:]
  -[MSAlbumSharingDaemon refreshCommentsForAssetCollectionWithGUID:resetSync:personID:info:]
  -[MSAlbumSharingDaemon acceptInvitationWithToken:personID:info:completionBlock:]
  -[MSAlbumSharingDaemon willDestroyStateMachineForPersonID:]
  -[MSAlbumSharingDaemon setNextUpdateDateByPersonID:]
  -[MSAlbumSharingDaemon retryOutstandingActivities]
  -[MSAlbumSharingDaemon modelForPersonID:]
  -[MSAlbumSharingDaemon modifyAlbumMetadata:personID:info:]
  -[MSAlbumSharingDaemon markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:info:]
  -[MSAlbumSharingDaemon setFocusAssetCollectionGUID:forPersonID:]
  -[MSAlbumSharingDaemon deleteAssetCollectionWithGUID:personID:info:]
  -[MSAlbumSharingDaemon retryOutstandingActivitiesForPersonID:]
  -[MSAlbumSharingDaemon addAssetCollections:toAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon refreshServerSideConfigurationForPersonID:]
  -[MSAlbumSharingDaemon rejectInvitationWithGUID:personID:]
  -[MSAlbumSharingDaemon isInRetryState]
  -[MSAlbumSharingDaemon setIsRetryingOutstandingActivities:]
  -[MSAlbumSharingDaemon didIdle]
  -[MSAlbumSharingDaemon mapQueueShutDownStateMachineInMap:personIDs:index:forDestruction:completionBlock:]
  -[MSAlbumSharingDaemon acceptInvitationWithToken:personID:completionBlock:]
  -[MSAlbumSharingDaemon didReceiveTooManySubscriptionsError:personID:]
  -[MSAlbumSharingDaemon setPublicAccessEnabled:forAlbumWithGUID:personID:completionBlock:]
  -[MSAlbumSharingDaemon setNextActivityDate:forPersonID:]
  -[MSAlbumSharingDaemon nextUpdateDateByPersonID]
  -[MSAlbumSharingDaemon deleteCommentWithGUID:personID:info:]
  -[MSAlbumSharingDaemon hasCommandsInGroupedCommandQueue]
  -[MSAlbumSharingDaemon deleteAssetCollectionsWithGUIDs:personID:]
  -[MSAlbumSharingDaemon refreshContentOfAlbumWithGUID:resetSync:personID:info:]
  -[MSAlbumSharingDaemon deleteAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon shutDownStateMachine:forDestruction:completionBlock:]
  -[MSAlbumSharingDaemon existingModelForPersonID:]
  -[MSAlbumSharingDaemon setPersonIDToDelegateMap:]
  -[MSAlbumSharingDaemon removeAccessControlEntryWithGUID:personID:info:]
  -[MSAlbumSharingDaemon setDaemonModel:]
  -[MSAlbumSharingDaemon rejectInvitationWithGUID:personID:info:]
  -[MSAlbumSharingDaemon unsubscribeFromAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon start]
  -[MSAlbumSharingDaemon modifyAlbumMetadata:personID:]
  -[MSAlbumSharingDaemon retrieveAssetsInAssetCollectionsWithGUIDs:assetTypeFlags:personID:]
  -[MSAlbumSharingDaemon workQueueForgetEverythingAboutPersonIDs:index:completionBlock:]
  -[MSAlbumSharingDaemon deleteAlbumWithGUID:personID:info:]
  -[MSAlbumSharingDaemon updateOwnerReputationScoreForAlbum:]
  -[MSAlbumSharingDaemon forgetEverythingCompletionBlock:]
  -[MSAlbumSharingDaemon pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:]
  -[MSAlbumSharingDaemon workQueueForgetEverythingAboutPersonID:completionBlock:]
  -[MSAlbumSharingDaemon retrieveAssets:inAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon refreshAccessControlListOfAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon personIDToDelegateMap]
  -[MSAlbumSharingDaemon daemonModel]
  -[MSAlbumSharingDaemon didReceiveTooManyAlbumsError:personID:]
  -[MSAlbumSharingDaemon addAccessControlEntries:toAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon existingStateMachineForPersonID:]
  -[MSAlbumSharingDaemon didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:]
  -[MSAlbumSharingDaemon didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:]
  -[MSAlbumSharingDaemon isWaitingForAuth]
  -[MSAlbumSharingDaemon didReceiveTooManyPhotosError:forAlbum:personID:]
  -[MSAlbumSharingDaemon markAlbumGUIDAsViewed:personID:moveLastViewedAssetCollectionMarker:info:]
  -[MSAlbumSharingDaemon _delegateForPersonID:]
  -[MSAlbumSharingDaemon setMultipleContributorsEnabled:forAlbumWithGUID:personID:info:completionBlock:]
  -[MSAlbumSharingDaemon didReceivePushNotificationForPersonID:]
  -[MSAlbumSharingDaemon didCreateStateMachineForPersonID:]
  -[MSAlbumSharingDaemon didReceiveAuthSuccessForPersonID:]
  -[MSAlbumSharingDaemon init]
  -[MSAlbumSharingDaemon forgetEverythingAboutPersonID:completionBlock:]
  -[MSAlbumSharingDaemon didReceiveAuthFailureForPersonID:]
  -[MSAlbumSharingDaemon mapQueue]
  -[MSAlbumSharingDaemon markAsSpamAlbumWithGUID:personID:]
  -[MSAlbumSharingDaemon subscribeToAlbumWithGUID:personID:]


MSASAlbumChange : NSObject
 @property  NSString *ownerEmail
 @property  NSString *ownerPersonID
 @property  NSString *ownerFullName
 @property  NSString *ownerFirstName
 @property  NSString *ownerLastName
 @property  NSString *GUID
 @property  NSString *URLString
 @property  NSString *name
 @property  BOOL wasDeleted
 @property  MSASInvitation *invitation

  // instance methods
  -[MSASAlbumChange GUID]
  -[MSASAlbumChange setInvitation:]
  -[MSASAlbumChange wasDeleted]
  -[MSASAlbumChange .cxx_destruct]
  -[MSASAlbumChange invitation]
  -[MSASAlbumChange setWasDeleted:]
  -[MSASAlbumChange setName:]
  -[MSASAlbumChange name]
  -[MSASAlbumChange URLString]
  -[MSASAlbumChange setURLString:]
  -[MSASAlbumChange ownerEmail]
  -[MSASAlbumChange ownerFirstName]
  -[MSASAlbumChange ownerFullName]
  -[MSASAlbumChange ownerLastName]
  -[MSASAlbumChange ownerPersonID]
  -[MSASAlbumChange setGUID:]
  -[MSASAlbumChange setOwnerEmail:]
  -[MSASAlbumChange setOwnerPersonID:]
  -[MSASAlbumChange setOwnerFullName:]
  -[MSASAlbumChange setOwnerFirstName:]
  -[MSASAlbumChange setOwnerLastName:]


MSASAssetCollectionChange : NSObject
 @property  NSString *GUID
 @property  NSString *ctag
 @property  BOOL wasDeleted

  // instance methods
  -[MSASAssetCollectionChange setCtag:]
  -[MSASAssetCollectionChange GUID]
  -[MSASAssetCollectionChange wasDeleted]
  -[MSASAssetCollectionChange .cxx_destruct]
  -[MSASAssetCollectionChange setWasDeleted:]
  -[MSASAssetCollectionChange ctag]
  -[MSASAssetCollectionChange setGUID:]


MSASCommentChange : NSObject
 @property  MSASComment *comment
 @property  int deletionIndex
 @property  int type

  // instance methods
  -[MSASCommentChange comment]
  -[MSASCommentChange type]
  -[MSASCommentChange .cxx_destruct]
  -[MSASCommentChange setType:]
  -[MSASCommentChange setComment:]
  -[MSASCommentChange deletionIndex]
  -[MSASCommentChange setDeletionIndex:]


MSASAssetInfoToReauthForDownload : NSObject
 @property  MSAsset *asset
 @property  MSASAlbum *album

  // instance methods
  -[MSASAssetInfoToReauthForDownload setAlbum:]
  -[MSASAssetInfoToReauthForDownload setAsset:]
  -[MSASAssetInfoToReauthForDownload .cxx_destruct]
  -[MSASAssetInfoToReauthForDownload asset]
  -[MSASAssetInfoToReauthForDownload album]


MSASStateMachine : NSObject <MSBackoffManagerDelegate, MSASAssetUploaderDelegate, MSASAssetDownloaderDelegate>
 @property  BOOL isRetryingOutstandingActivities
 @property  NSMutableArray *_assetInfoToReauthForDownload
 @property  @? _stopHandlerBlock
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *eventQueue
 @property  NSObject<OS_dispatch_queue> *serverSideConfigQueue
 @property  NSObject<OS_dispatch_queue> *memberQueue
 @property  BOOL hasShutDown
 @property  NSDictionary *metadataBackoffManagerParameters
 @property  NSDictionary *MMCSBackoffManagerParameters
 @property  @? postCommandCompletionBlock
 @property  MSAlbumSharingDaemon *daemon
 @property  int maxMetadataRetryCount
 @property  NSDictionary *serverSideConfiguration
 @property  NSString *serverSideConfigurationVersion
 @property  MSASProtocol *protocol
 @property  MSASPhoneInvitations *phoneInvitations
 @property  NSString *focusAlbumGUID
 @property  NSString *focusAssetCollectionGUID
 @property  NSArray *derivativeSpecifications
 @property  MSImageScalingSpecification *derivativeImageScalingSpecification
 @property  MSImageScalingSpecification *thumbnailImageScalingSpecification
 @property  id delegate
 @property  NSString *personID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSASStateMachine isRetryingOutstandingActivities]
  -[MSASStateMachine hasEnqueuedActivities]
  -[MSASStateMachine setMemberQueue:]
  -[MSASStateMachine memberQueue]
  -[MSASStateMachine setPersonID:]
  -[MSASStateMachine personID]
  -[MSASStateMachine eventQueue]
  -[MSASStateMachine setEventQueue:]
  -[MSASStateMachine setDaemon:]
  -[MSASStateMachine workQueueRetryOutstandingActivities]
  -[MSASStateMachine _serverSideConfigDictionaryByApplyingDefaultsToDictionary:]
  -[MSASStateMachine acceptInvitationWithToken:info:completionBlock:]
  -[MSASStateMachine scheduleEvent:assetCollectionGUID:albumGUID:info:]
  -[MSASStateMachine serverCommunicationBackoffDate]
  -[MSASStateMachine markAsSpamInvitationForToken:info:]
  -[MSASStateMachine setPostCommandCompletionBlock:]
  -[MSASStateMachine workQueueEndCommandWithError:command:params:albumGUID:assetCollectionGUID:]
  -[MSASStateMachine _stoppedError]
  -[MSASStateMachine _createAlbumDisposition:params:]
  -[MSASStateMachine setPublicAccessEnabled:forAlbum:info:completionBlock:]
  -[MSASStateMachine checkForAssetCollectionUpdates:inAlbum:info:]
  -[MSASStateMachine _checkForChangesDisposition:params:]
  -[MSASStateMachine shutDownCompletionBlock:]
  -[MSASStateMachine serverSideQueueServerSideConfiguration]
  -[MSASStateMachine thumbnailImageScalingSpecification]
  -[MSASStateMachine MSASAssetDownloader:willBeginBatchCount:]
  -[MSASStateMachine retrieveAssets:inAlbumWithGUID:]
  -[MSASStateMachine setDelegate:]
  -[MSASStateMachine setAlbumSyncedState:forAlbum:info:]
  -[MSASStateMachine setMaxMetadataRetryCount:]
  -[MSASStateMachine _addAssetCollectionsDisposition:params:]
  -[MSASStateMachine _canceledError]
  -[MSASStateMachine _checkForUpdatesInAlbumDisposition:params:]
  -[MSASStateMachine hasShutDown]
  -[MSASStateMachine workQueue]
  -[MSASStateMachine delegate]
  -[MSASStateMachine MMCSBackoffManagerParameters]
  -[MSASStateMachine _stopHandlerBlock]
  -[MSASStateMachine workQueueCancelCompletionBlock:]
  -[MSASStateMachine checkForCommentChanges:inAlbumWithGUID:]
  -[MSASStateMachine updateAlbum:updateAlbumFlags:info:]
  -[MSASStateMachine setWorkQueue:]
  -[MSASStateMachine setPersistentObject:forKey:]
  -[MSASStateMachine serverSideConfiguration]
  -[MSASStateMachine MSASAssetUploader:didFinishUploadingAssetCollection:intoAlbum:error:]
  -[MSASStateMachine _scheduleEventDisposition:params:]
  -[MSASStateMachine checkForChangesIfMissingRootCtag]
  -[MSASStateMachine memberQueueMetadataBackoffManager]
  -[MSASStateMachine purgeEverythingCompletionBlock:]
  -[MSASStateMachine _setAssetCollectionSyncedStateDisposition:params:]
  -[MSASStateMachine _deleteAssetFilesInAssetCollection:]
  -[MSASStateMachine MSASAssetDownloaderDidFinishBatch:]
  -[MSASStateMachine setProtocol:]
  -[MSASStateMachine setPhoneInvitations:]
  -[MSASStateMachine serverSideQueueSetServerSideConfiguration:]
  -[MSASStateMachine setServerSideConfigQueue:]
  -[MSASStateMachine _continueAddingAssetCollectionsDisposition:params:]
  -[MSASStateMachine _didFinishCheckingUpdatesInAlbumsDisposition:params:]
  -[MSASStateMachine setRootCtagFromPendingRootCtag]
  -[MSASStateMachine .cxx_destruct]
  -[MSASStateMachine cancelCompletionBlock:]
  -[MSASStateMachine serverSideConfigQueue]
  -[MSASStateMachine _markAsSpamInvitationForAlbumDisposition:params:]
  -[MSASStateMachine _sendGetUploadTokensDisposition:params:]
  -[MSASStateMachine videoURLForAssetCollection:inAlbum:completionBlock:]
  -[MSASStateMachine setMMCSBackoffManagerParameters:]
  -[MSASStateMachine _getAlbumURLDisposition:params:]
  -[MSASStateMachine addAssetCollections:toAlbum:info:]
  -[MSASStateMachine checkForChangesResetSync:info:]
  -[MSASStateMachine latestNextActivityDate]
  -[MSASStateMachine _addSharingRelationshipsDisposition:params:]
  -[MSASStateMachine metadataBackoffManagerParameters]
  -[MSASStateMachine workQueueDidFinishCommandByReplacingCurrentCommandWithCommand:params:personID:albumGUID:assetCollectionGUID:]
  -[MSASStateMachine validateInvitationToken:albumName:completionBlock:]
  -[MSASStateMachine retryOutstandingActivities]
  -[MSASStateMachine _deleteAlbumDisposition:params:]
  -[MSASStateMachine _URLReauthFailureWithUnderlyingError:]
  -[MSASStateMachine workQueueDidFailToFinishCommandDueToTemporaryError:]
  -[MSASStateMachine _markAsSpamInvitationForTokenDisposition:params:]
  -[MSASStateMachine postCommandCompletionBlock]
  -[MSASStateMachine workQueueScheduleReauthForAssets:inAlbum:]
  -[MSASStateMachine _checkForAssetCollectionUpdatesDisposition:params:]
  -[MSASStateMachine setAssetCollectionSyncedState:forAssetCollection:album:info:]
  -[MSASStateMachine isInRetryState]
  -[MSASStateMachine setIsRetryingOutstandingActivities:]
  -[MSASStateMachine cancelOutstandingCommandsForAssetCollectionWithGUID:]
  -[MSASStateMachine markAsSpamInvitationForAlbum:invitationGUID:info:]
  -[MSASStateMachine setHasShutDown:]
  -[MSASStateMachine workQueueDidFinishCommand]
  -[MSASStateMachine MSBackoffManagerDidUpdateNextExpiryDate:]
  -[MSASStateMachine setPendingRootCtag:]
  -[MSASStateMachine _metadataBackoffManager]
  -[MSASStateMachine _assetCollectionRejectedError]
  -[MSASStateMachine setMetadataBackoffManagerParameters:]
  -[MSASStateMachine addComments:toAssetCollection:inAlbum:info:]
  -[MSASStateMachine setFocusAssetCollectionGUID:]
  -[MSASStateMachine derivativeImageScalingSpecification]
  -[MSASStateMachine stopAssetDownloadsCompletionBlock:]
  -[MSASStateMachine cancelOutstandingCommandsForAlbumWithGUID:]
  -[MSASStateMachine phoneInvitations]
  -[MSASStateMachine _sendGetServerSideConfigurationDisposition:params:]
  -[MSASStateMachine _removeSharingRelationshipsDisposition:params:]
  -[MSASStateMachine daemon]
  -[MSASStateMachine persistentObjectForKey:]
  -[MSASStateMachine deleteComments:inAssetCollection:inAlbum:info:]
  -[MSASStateMachine workQueueApplyServerSideConfiguration]
  -[MSASStateMachine _setAssetInfoToReauthForDownload:]
  -[MSASStateMachine _subscribeToAlbumDisposition:params:]
  -[MSASStateMachine _sendUploadCompleteDisposition:params:]
  -[MSASStateMachine workQueuePerformNextCommand]
  -[MSASStateMachine getAccessControlsForAlbums:info:]
  -[MSASStateMachine rootCtagToCheckForChanges]
  -[MSASStateMachine initWithPersonID:eventQueue:]
  -[MSASStateMachine _cancelOutstandingCommandsDisposition:params:]
  -[MSASStateMachine subscribeToAlbum:info:]
  -[MSASStateMachine protocol]
  -[MSASStateMachine workQueueDidFinishCommandByLeavingCommandInQueue]
  -[MSASStateMachine _createCopiedAssetsInAssetCollections:]
  -[MSASStateMachine focusAlbumGUID]
  -[MSASStateMachine createAlbum:info:]
  -[MSASStateMachine checkForAlbumSyncedStateChangesInAlbums:info:]
  -[MSASStateMachine serverSideConfigurationVersion]
  -[MSASStateMachine _assetUploader]
  -[MSASStateMachine videoURLsForAssetCollection:forMediaAssetType:inAlbum:completionBlock:]
  -[MSASStateMachine start]
  -[MSASStateMachine continueAddingAssetCollections:skipAssetCollections:toAlbum:info:]
  -[MSASStateMachine _workQueueEmptyFileTransferQueuesCompletionBlock:]
  -[MSASStateMachine _setAlbumSyncedStateDisposition:params:]
  -[MSASStateMachine _setStopHandlerBlock:]
  -[MSASStateMachine _assetInfoToReauthForDownload]
  -[MSASStateMachine checkForUpdatesInAlbums:resetSync:info:]
  -[MSASStateMachine workQueueCheckForNextCommand]
  -[MSASStateMachine setServerSideConfiguration:]
  -[MSASStateMachine MSASAssetDownloader:didFinishDownloadingAsset:inAlbumGUID:error:]
  -[MSASStateMachine _addCommentDisposition:params:]
  -[MSASStateMachine _unsubscribeFromAlbumDisposition:params:]
  -[MSASStateMachine _deleteAssetFilesInAssetCollections:]
  -[MSASStateMachine _assetDownloader]
  -[MSASStateMachine refreshServerSideConfig]
  -[MSASStateMachine unsubscribeFromAlbum:info:]
  -[MSASStateMachine _updateAlbumDisposition:params:]
  -[MSASStateMachine workQueueCancelAllCommandsFilteredByAlbumGUID:assetCollectionGUID:]
  -[MSASStateMachine deleteAlbum:info:]
  -[MSASStateMachine _sendPutAssetCollectionsDisposition:params:]
  -[MSASStateMachine maxMetadataRetryCount]
  -[MSASStateMachine _checkForCommentChangesDisposition:params:]
  -[MSASStateMachine derivativeSpecifications]
  -[MSASStateMachine initWithPersonID:]
  -[MSASStateMachine _assetCollectionFailedError]
  -[MSASStateMachine deleteAssetCollections:inAlbum:info:]
  -[MSASStateMachine removeSharingRelationships:fromOwnedAlbum:info:]
  -[MSASStateMachine workQueueRefreshServerSideConfig]
  -[MSASStateMachine workQueueUpdateNextActivityDate]
  -[MSASStateMachine _deleteAssetCollectionsDisposition:params:]
  -[MSASStateMachine focusAssetCollectionGUID]
  -[MSASStateMachine workQueueDidFinishCommandDueToCancellation]
  -[MSASStateMachine _model]
  -[MSASStateMachine _sendReauthorizeAssetsForDownloadDisposition:params:]
  -[MSASStateMachine setMultipleContributorsEnabled:forAlbum:info:completionBlock:]
  -[MSASStateMachine init]
  -[MSASStateMachine _deleteCommentDisposition:params:]
  -[MSASStateMachine setFocusAlbumGUID:]
  -[MSASStateMachine _checkForAlbumSyncedStateDisposition:params:]
  -[MSASStateMachine _getAccessControlsDisposition:params:]
  -[MSASStateMachine addSharingRelationships:toOwnedAlbum:info:]


MSASPersonModelItem : NSObject <NSCopying>
 @property  int errorCount
 @property  MSASAlbum *album
 @property  NSString *albumGUID
 @property  <NSObject> *object

  // instance methods
  -[MSASPersonModelItem setAlbum:]
  -[MSASPersonModelItem errorCount]
  -[MSASPersonModelItem .cxx_destruct]
  -[MSASPersonModelItem object]
  -[MSASPersonModelItem album]
  -[MSASPersonModelItem setErrorCount:]
  -[MSASPersonModelItem copyWithZone:]
  -[MSASPersonModelItem setObject:]
  -[MSASPersonModelItem isEqual:]
  -[MSASPersonModelItem albumGUID]
  -[MSASPersonModelItem setAlbumGUID:]


MSASPersonModel : MSASModelBase
 @property  BOOL shouldDownloadEarliestPhotosFirst

  // instance methods
  -[MSASPersonModel hasItemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:]
  -[MSASPersonModel dbQueueSetErrorCount:forGUID:inQueue:]
  -[MSASPersonModel dbQueueRemoveCommandIdentifier:]
  -[MSASPersonModel assetCollectionsInUploadQueue]
  -[MSASPersonModel isAssetCollectionWithGUIDPending:]
  -[MSASPersonModel dbQueueSmallestCommandSequenceNumber]
  -[MSASPersonModel requeuePendingAssetCollectionsWithAlbumGUID:]
  -[MSASPersonModel enqueueAssetForDownload:inAlbumWithGUID:]
  -[MSASPersonModel nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:thumbnails:maxCount:isInflight:]
  -[MSASPersonModel dbQueueNextCommandSequenceNumber]
  -[MSASPersonModel removeAssetsFromDownloadQueue:]
  -[MSASPersonModel nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:maxCount:]
  -[MSASPersonModel assetCollectionsInUploadQueueAlbumGUID:]
  -[MSASPersonModel dbQueueAssetCountAlbumGUID:inQueue:]
  -[MSASPersonModel setParams:forCommandWithIdentifier:]
  -[MSASPersonModel enqueueCommand:params:personID:albumGUID:assetCollectionGUID:]
  -[MSASPersonModel removeCommandIdentifier:]
  -[MSASPersonModel nextItemsForUploadAlbumGUID:maxPriority:maxCount:]
  -[MSASPersonModel requeuePendingAssetCollectionGUID:]
  -[MSASPersonModel nextItemsForUploadMaxCount:]
  -[MSASPersonModel setErrorCount:forAssetCollectionInUploadQueue:]
  -[MSASPersonModel dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:sequenceNumber:]
  -[MSASPersonModel setShouldDownloadEarliestPhotosFirst:]
  -[MSASPersonModel countOfEnqueuedCommands]
  -[MSASPersonModel dbQueueRequeuePendingCommandsWithAlbumGUID:]
  -[MSASPersonModel nextMMCSItemID]
  -[MSASPersonModel dbQueueRemoveAllEntriesFromTable:]
  -[MSASPersonModel addPendingAssetCollectionGUID:albumGUID:]
  -[MSASPersonModel dbQueueRequeuePendingCommandsWithQueryStatement:deleteStatement:]
  -[MSASPersonModel countOfEnqueuedCommand:]
  -[MSASPersonModel enqueueAssetCollectionForUpload:album:]
  -[MSASPersonModel itemsForUpload]
  -[MSASPersonModel commandAtHeadOfQueueOutParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:]
  -[MSASPersonModel dbQueueUpgradeFromDatabaseVersion:currentVersion:]
  -[MSASPersonModel itemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:]
  -[MSASPersonModel enqueueCommand:params:personID:albumGUID:pendingOnAssetCollectionGUID:]
  -[MSASPersonModel dbQueueIsGUIDQueued:inQueue:]
  -[MSASPersonModel dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:]
  -[MSASPersonModel dbQueueRemoveGUID:fromQueue:]
  -[MSASPersonModel commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:]
  -[MSASPersonModel setInFlightAssets:]
  -[MSASPersonModel _commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:]
  -[MSASPersonModel dbQueueRemoveCommandAtHeadOfQueue]
  -[MSASPersonModel dbQueueIsAssetCollectionWithGUIDPending:]
  -[MSASPersonModel setErrorCount:forAssetInDownloadQueue:]
  -[MSASPersonModel initWithPersonID:]
  -[MSASPersonModel dbQueueRequeuePendingCommandsWithAssetCollectionGUID:]
  -[MSASPersonModel assetsInDownloadQueueAlbumGUID:]
  -[MSASPersonModel removeAssetCollectionsFromUploadQueue:]
  -[MSASPersonModel shouldDownloadEarliestPhotosFirst]
  -[MSASPersonModel assetsInDownloadQueue]
  -[MSASPersonModel purgeCompletionBlock:]
  -[MSASPersonModel enqueueCommandAtHeadOfQueue:params:personID:albumGUID:assetCollectionGUID:]


MSASDaemonModel : MSASModelBase
  // class methods
  +[MSASDaemonModel defaultModel]

  // instance methods
  -[MSASDaemonModel nextActivityDateByPersonID]
  -[MSASDaemonModel earliestNextActivityDate]
  -[MSASDaemonModel clearAllNextActivityDates]
  -[MSASDaemonModel setNextActivityDate:forPersonID:]
  -[MSASDaemonModel dbQueueUpgradeFromDatabaseVersion:currentVersion:]
  -[MSASDaemonModel init]


MSASModelBase : NSObject
 @property  NSObject<OS_dispatch_queue> *statementQueue
 @property  ^{__CFDictionary=} statements
 @property  ^{sqlite3=} dbQueueDB
 @property  NSString *personID
 @property  NSObject<OS_dispatch_queue> *dbQueue
 @property  BOOL dbWasRecreated

  // instance methods
  -[MSASModelBase personID]
  -[MSASModelBase shutDownForDestruction:completionBlock:]
  -[MSASModelBase setPersistentObject:forKey:]
  -[MSASModelBase db]
  -[MSASModelBase .cxx_destruct]
  -[MSASModelBase persistentObjectForKey:]
  -[MSASModelBase endTransaction]
  -[MSASModelBase dbQueueUpgradeFromDatabaseVersion:currentVersion:]
  -[MSASModelBase beginTransaction]
  -[MSASModelBase setStatements:]
  -[MSASModelBase statements]
  -[MSASModelBase statementQueue]
  -[MSASModelBase initWithPersonID:databasePath:currentVersion:]
  -[MSASModelBase dbQueueInitializeDatabasePath:currentVersion:]
  -[MSASModelBase statementForString:]
  -[MSASModelBase persistentStringForKey:]
  -[MSASModelBase setPersistentString:forKey:]
  -[MSASModelBase deletePersistentValueWithKey:]
  -[MSASModelBase dbQueuePersistentDataForKey:]
  -[MSASModelBase dbQueuePersistentStringForKey:]
  -[MSASModelBase dbQueuePersistentObjectForKey:]
  -[MSASModelBase dbQueueSetPersistentData:forKey:]
  -[MSASModelBase dbQueueSetPersistentString:forKey:]
  -[MSASModelBase dbQueueSetPersistentObject:forKey:]
  -[MSASModelBase dbQueueDeletePersistentValueWithKey:]
  -[MSASModelBase dbQueueBeginTransaction]
  -[MSASModelBase dbQueueEndTransaction]
  -[MSASModelBase dbQueueRollbackTransaction]
  -[MSASModelBase dbQueueDB]
  -[MSASModelBase setStatementQueue:]
  -[MSASModelBase dbQueue]
  -[MSASModelBase dbWasRecreated]
  -[MSASModelBase setDbWasRecreated:]


MSFileUtilities : NSObject
  // class methods
  +[MSFileUtilities hardlinkOrCopyFileFromPath:toPath:outError:]


MMCSRequestorContext : NSObject
 @property  MMCSEngine *engine
 @property  int type
 @property  unsigned long count
 @property  ^Q itemIDs
 @property  ^I itemFlags
 @property  ^* signatures
 @property  ^* authTokens

  // class methods
  +[MMCSRequestorContext contextWithEngine:type:]

  // instance methods
  -[MMCSRequestorContext setCount:]
  -[MMCSRequestorContext setAuthTokens:]
  -[MMCSRequestorContext type]
  -[MMCSRequestorContext setEngine:]
  -[MMCSRequestorContext engine]
  -[MMCSRequestorContext signatures]
  -[MMCSRequestorContext dealloc]
  -[MMCSRequestorContext .cxx_destruct]
  -[MMCSRequestorContext count]
  -[MMCSRequestorContext setType:]
  -[MMCSRequestorContext isEqual:]
  -[MMCSRequestorContext authTokens]
  -[MMCSRequestorContext itemFlags]
  -[MMCSRequestorContext itemIDs]
  -[MMCSRequestorContext setItemIDs:]
  -[MMCSRequestorContext setItemFlags:]
  -[MMCSRequestorContext initWithEngine:type:]
  -[MMCSRequestorContext setSignatures:]


MMCSEngine : NSObject
 @property  NSTimer *threadKeepAliveTimer
 @property  BOOL isDone
 @property  <MMCSEngineDelegate> *delegate
 @property  BOOL hasOutstandingActivity
 @property  BOOL autoGenerateItemID
 @property  BOOL isMetricsGatheringEnabled
 @property  NSThread *workThread

  // class methods
  +[MMCSEngine logStringForGetItemState:]
  +[MMCSEngine logStringForPutItemState:]

  // instance methods
  -[MMCSEngine performBlock:]
  -[MMCSEngine cancelAllOperations]
  -[MMCSEngine isDone]
  -[MMCSEngine _registerAsset:]
  -[MMCSEngine threadMain:]
  -[MMCSEngine shutDownCompletionBlock:]
  -[MMCSEngine hasOutstandingActivity]
  -[MMCSEngine setIsDone:]
  -[MMCSEngine setDelegate:]
  -[MMCSEngine cancelOperationsWithContext:]
  -[MMCSEngine _removeRequestorContext:]
  -[MMCSEngine _putItemDoneItemID:requestorContext:putReceipt:error:]
  -[MMCSEngine setThreadKeepAliveTimer:]
  -[MMCSEngine setWorkThread:]
  -[MMCSEngine delegate]
  -[MMCSEngine unregisterAssets:]
  -[MMCSEngine isMetricsGatheringEnabled]
  -[MMCSEngine initWithWorkPath:appIDHeader:dataClass:options:]
  -[MMCSEngine isActive]
  -[MMCSEngine performBlockOnWorkThread:waitUntilDone:]
  -[MMCSEngine _registerRequestorContext:]
  -[MMCSEngine .cxx_destruct]
  -[MMCSEngine _nextItemID]
  -[MMCSEngine _getFileDescriptorAndContentTypeFromItemID:outFD:outItemType:outError:]
  -[MMCSEngine _getItemProgressItemID:state:progress:requestorContext:error:]
  -[MMCSEngine registerAssets:forDownloadCompletionBlock:]
  -[MMCSEngine setIsMetricsGatheringEnabled:]
  -[MMCSEngine registerAssetForUpload:completionBlock:]
  -[MMCSEngine reregisterAssetForUpload:]
  -[MMCSEngine _assetWithItemID:]
  -[MMCSEngine setAutoGenerateItemID:]
  -[MMCSEngine _putItemProgressItemID:state:progress:requestorContext:error:]
  -[MMCSEngine putAssets:requestURL:DSID:options:]
  -[MMCSEngine _doNothingTimerHandler:]
  -[MMCSEngine getAssets:requestURL:DSID:options:]
  -[MMCSEngine reregisterAssetForDownload:]
  -[MMCSEngine _getItemDoneItemID:path:requestorContext:error:]
  -[MMCSEngine _removeAssetForItemID:]
  -[MMCSEngine initWithWorkPath:appIDHeader:dataClass:options:modes:]
  -[MMCSEngine autoGenerateItemID]
  -[MMCSEngine _initItemIDPersistence]
  -[MMCSEngine unregisterAsset:]
  -[MMCSEngine workThread]
  -[MMCSEngine performBlockOnWorkThread:]
  -[MMCSEngine _requestCompletedRequestorContext:]
  -[MMCSEngine threadKeepAliveTimer]


MSASAssetUploader : MSASAssetTransferer
 @property  int state
 @property  NSMutableArray *itemsInFlight
 @property  NSMutableDictionary *assetCollectionsToItemInFlightMap
 @property  NSMutableDictionary *assetToAssetCollectionMap
 @property  NSMutableArray *finishedAssetCollections
 @property  NSMutableSet *assetCollectionsWithAuthorizationError
 @property  BOOL didEncounterNetworkConditionError
 @property  NSMutableDictionary *assetCollectionGUIDToRequestorContext
 @property  <MSASAssetUploaderDelegate> *delegate

  // instance methods
  -[MSASAssetUploader workQueueRetryOutstandingActivities]
  -[MSASAssetUploader _workQueueStop]
  -[MSASAssetUploader cancelAssetCollections:]
  -[MSASAssetUploader workQueueStop]
  -[MSASAssetUploader MMCSEngine:didFinishPuttingAsset:putReceipt:error:]
  -[MSASAssetUploader workQueueShutDownCompletionBlock:]
  -[MSASAssetUploader workQueueRegisterAssetCollections:index:results:completionBlock:]
  -[MSASAssetUploader state]
  -[MSASAssetUploader MMCSEngine:didMakeGetProgress:state:onAsset:]
  -[MSASAssetUploader setFinishedAssetCollections:]
  -[MSASAssetUploader assetToAssetCollectionMap]
  -[MSASAssetUploader setDidEncounterNetworkConditionError:]
  -[MSASAssetUploader didEncounterNetworkConditionError]
  -[MSASAssetUploader .cxx_destruct]
  -[MSASAssetUploader MMCSEngine:didFinishGettingAsset:path:error:]
  -[MSASAssetUploader assetCollectionGUIDToRequestorContext]
  -[MSASAssetUploader _orphanedAssetCollectionError]
  -[MSASAssetUploader workQueueUploadNextBatch]
  -[MSASAssetUploader setAssetCollectionsToItemInFlightMap:]
  -[MSASAssetUploader setAssetCollectionGUIDToRequestorContext:]
  -[MSASAssetUploader workQueueDidFinishWithItem:error:]
  -[MSASAssetUploader didFinishGettingAllAssets]
  -[MSASAssetUploader workQueueGoIdle]
  -[MSASAssetUploader didFinishPuttingAllAssets]
  -[MSASAssetUploader registerAssetCollections:completionBlock:]
  -[MSASAssetUploader assetCollectionsToItemInFlightMap]
  -[MSASAssetUploader workQueueStopTrackingItem:]
  -[MSASAssetUploader setAssetCollectionsWithAuthorizationError:]
  -[MSASAssetUploader MMCSEngine:didCreateRequestorContext:forAssets:]
  -[MSASAssetUploader workQueueCancelAssetCollections:]
  -[MSASAssetUploader _pathForPersonID:]
  -[MSASAssetUploader setAssetToAssetCollectionMap:]
  -[MSASAssetUploader unregisterAssetCollections:]
  -[MSASAssetUploader assetCollectionsWithAuthorizationError]
  -[MSASAssetUploader workQueueRegisterAssets:index:completionBlock:]
  -[MSASAssetUploader finishedAssetCollections]
  -[MSASAssetUploader workQueueCancel]
  -[MSASAssetUploader itemsInFlight]
  -[MSASAssetUploader unregisterAssetCollections:completionBlock:]
  -[MSASAssetUploader setItemsInFlight:]
  -[MSASAssetUploader MMCSEngine:didMakePutProgress:state:onAsset:]
  -[MSASAssetUploader setState:]


MSASAssetDownloader : MSASAssetTransferer
 @property  int state
 @property  NSMutableArray *itemsInFlight
 @property  NSMutableDictionary *assetToItemInFlightMap
 @property  NSMutableArray *finishedAssets
 @property  BOOL didEncounterNetworkConditionError
 @property  BOOL isDownloadingThumbnails
 @property  NSString *currentFocusAlbumGUID
 @property  NSString *currentFocusAssetCollectionGUID
 @property  BOOL isWaitingForFirstDownloadEvent
 @property  NSString *objectGUID
 @property  NSString *downloadBatchPerfGUID
 @property  <MSASAssetDownloaderDelegate> *delegate

  // instance methods
  -[MSASAssetDownloader objectGUID]
  -[MSASAssetDownloader workQueueRetryOutstandingActivities]
  -[MSASAssetDownloader workQueueStop]
  -[MSASAssetDownloader MMCSEngine:didFinishPuttingAsset:error:]
  -[MSASAssetDownloader workQueueShutDownCompletionBlock:]
  -[MSASAssetDownloader workQueueRegisterAssets:completionBlock:]
  -[MSASAssetDownloader setFinishedAssets:]
  -[MSASAssetDownloader unregisterAssets:]
  -[MSASAssetDownloader _workQueueStopTrackingItem:]
  -[MSASAssetDownloader workQueueObjectGUID]
  -[MSASAssetDownloader state]
  -[MSASAssetDownloader MMCSEngine:didMakeGetProgress:state:onAsset:]
  -[MSASAssetDownloader isWaitingForFirstDownloadEvent]
  -[MSASAssetDownloader setDidEncounterNetworkConditionError:]
  -[MSASAssetDownloader didEncounterNetworkConditionError]
  -[MSASAssetDownloader _workQueueDidFinishWithItem:error:]
  -[MSASAssetDownloader isDownloadingThumbnails]
  -[MSASAssetDownloader .cxx_destruct]
  -[MSASAssetDownloader MMCSEngine:didFinishGettingAsset:path:error:]
  -[MSASAssetDownloader _workQueueGoIdle]
  -[MSASAssetDownloader didEnqueueAsset:forAlbumGUID:]
  -[MSASAssetDownloader currentFocusAlbumGUID]
  -[MSASAssetDownloader registerAssets:completionBlock:]
  -[MSASAssetDownloader setIsDownloadingThumbnails:]
  -[MSASAssetDownloader didFinishGettingAllAssets]
  -[MSASAssetDownloader didFinishPuttingAllAssets]
  -[MSASAssetDownloader setCurrentFocusAssetCollectionGUID:]
  -[MSASAssetDownloader setObjectGUID:]
  -[MSASAssetDownloader MMCSEngine:didCreateRequestorContext:forAssets:]
  -[MSASAssetDownloader setCurrentFocusAlbumGUID:]
  -[MSASAssetDownloader workQueueDownloadNextBatch]
  -[MSASAssetDownloader finishedAssets]
  -[MSASAssetDownloader setIsWaitingForFirstDownloadEvent:]
  -[MSASAssetDownloader _pathForPersonID:]
  -[MSASAssetDownloader assetToItemInFlightMap]
  -[MSASAssetDownloader currentFocusAssetCollectionGUID]
  -[MSASAssetDownloader setAssetToItemInFlightMap:]
  -[MSASAssetDownloader workQueueCancel]
  -[MSASAssetDownloader downloadBatchPerfGUID]
  -[MSASAssetDownloader itemsInFlight]
  -[MSASAssetDownloader setItemsInFlight:]
  -[MSASAssetDownloader setDownloadBatchPerfGUID:]
  -[MSASAssetDownloader MMCSEngine:didMakePutProgress:state:onAsset:]
  -[MSASAssetDownloader setState:]
  -[MSASAssetDownloader workQueueUnregisterAssets:]
  -[MSASAssetDownloader _orphanedAssetError]


MSASAssetTransferer : NSObject <MMCSEngineDelegate>
 @property  id delegate
 @property  NSString *personID
 @property  MMCSEngine *engine
 @property  double maxMMCSTokenValidityTimeInterval
 @property  MSAlbumSharingDaemon *daemon
 @property  MSASPersonModel *model
 @property  MSBackoffManager *backoffManager
 @property  NSString *focusAlbumGUID
 @property  NSString *focusAssetCollectionGUID
 @property  int maxBatchCount
 @property  int maxRetryCount
 @property  NSObject<OS_dispatch_queue> *eventQueue
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL hasShutDown
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSASAssetTransferer setPersonID:]
  -[MSASAssetTransferer personID]
  -[MSASAssetTransferer eventQueue]
  -[MSASAssetTransferer setEventQueue:]
  -[MSASAssetTransferer setDaemon:]
  -[MSASAssetTransferer workQueueRetryOutstandingActivities]
  -[MSASAssetTransferer setModel:]
  -[MSASAssetTransferer workQueueStop]
  -[MSASAssetTransferer MMCSEngine:didFinishPuttingAsset:putReceipt:error:]
  -[MSASAssetTransferer workQueueShutDownCompletionBlock:]
  -[MSASAssetTransferer model]
  -[MSASAssetTransferer shutDownCompletionBlock:]
  -[MSASAssetTransferer setDelegate:]
  -[MSASAssetTransferer setMaxRetryCount:]
  -[MSASAssetTransferer _canceledError]
  -[MSASAssetTransferer hasShutDown]
  -[MSASAssetTransferer workQueue]
  -[MSASAssetTransferer delegate]
  -[MSASAssetTransferer engine]
  -[MSASAssetTransferer setWorkQueue:]
  -[MSASAssetTransferer MMCSEngine:didMakeGetProgress:state:onAsset:]
  -[MSASAssetTransferer .cxx_destruct]
  -[MSASAssetTransferer MMCSEngine:didFinishGettingAsset:path:error:]
  -[MSASAssetTransferer cancelCompletionBlock:]
  -[MSASAssetTransferer retryOutstandingActivities]
  -[MSASAssetTransferer didFinishGettingAllAssets]
  -[MSASAssetTransferer setHasShutDown:]
  -[MSASAssetTransferer didFinishPuttingAllAssets]
  -[MSASAssetTransferer setFocusAssetCollectionGUID:]
  -[MSASAssetTransferer daemon]
  -[MSASAssetTransferer MMCSEngine:didCreateRequestorContext:forAssets:]
  -[MSASAssetTransferer _pathForPersonID:]
  -[MSASAssetTransferer initWithPersonID:eventQueue:]
  -[MSASAssetTransferer focusAlbumGUID]
  -[MSASAssetTransferer workQueueCancel]
  -[MSASAssetTransferer initWithPersonID:]
  -[MSASAssetTransferer focusAssetCollectionGUID]
  -[MSASAssetTransferer maxRetryCount]
  -[MSASAssetTransferer setFocusAlbumGUID:]
  -[MSASAssetTransferer MMCSEngine:didMakePutProgress:state:onAsset:]
  -[MSASAssetTransferer MMCSEngine:logPerformanceMetrics:]
  -[MSASAssetTransferer MMCSEngine:shouldLogAtLogLevel:]
  -[MSASAssetTransferer MMCSEngine:logMessage:logLevel:]
  -[MSASAssetTransferer _rereadPerformanceLoggingSetting]
  -[MSASAssetTransferer setMaxMMCSTokenValidityTimeInterval:]
  -[MSASAssetTransferer stopCompletionBlock:]
  -[MSASAssetTransferer workQueueNextItemID]
  -[MSASAssetTransferer workQueueMaxMMCSTokenValidityTimeInterval]
  -[MSASAssetTransferer _missingURLError]
  -[MSASAssetTransferer _missingMMCSTokenError]
  -[MSASAssetTransferer _MMCSTokenTooOldError]
  -[MSASAssetTransferer _sendDidIdleNotification]
  -[MSASAssetTransferer maxMMCSTokenValidityTimeInterval]
  -[MSASAssetTransferer backoffManager]
  -[MSASAssetTransferer setBackoffManager:]
  -[MSASAssetTransferer maxBatchCount]
  -[MSASAssetTransferer setMaxBatchCount:]


MSProtocolUtilities : NSObject
  // class methods
  +[MSProtocolUtilities fetchMPSStateWithBaseAvailabilityURL:personID:originalLibrarySize:completionBlock:]
  +[MSProtocolUtilities Win32SHA1OfUDID:]
  +[MSProtocolUtilities applyUserDefaultOverridesToResponse:]
  +[MSProtocolUtilities retryAfterDateBasedOnRetryAfterHeaderString:]
  +[MSProtocolUtilities deviceInfoDictForPersonID:]
  +[MSProtocolUtilities _urlSession]
  +[MSProtocolUtilities appleIDSession]


MSASSharingRelationship : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *GUID
 @property  NSString *albumGUID
 @property  NSString *email
 @property  NSArray *emails
 @property  NSArray *phones
 @property  NSString *fullName
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSString *personID
 @property  NSDate *subscriptionDate
 @property  int state
 @property  BOOL isMine

  // class methods
  +[MSASSharingRelationship supportsSecureCoding]
  +[MSASSharingRelationship MSASPSharingRelationshipFromProtocolDictionary:]

  // instance methods
  -[MSASSharingRelationship setPersonID:]
  -[MSASSharingRelationship setFirstName:]
  -[MSASSharingRelationship personID]
  -[MSASSharingRelationship firstName]
  -[MSASSharingRelationship GUID]
  -[MSASSharingRelationship fullName]
  -[MSASSharingRelationship lastName]
  -[MSASSharingRelationship encodeWithCoder:]
  -[MSASSharingRelationship setFullName:]
  -[MSASSharingRelationship state]
  -[MSASSharingRelationship setEmail:]
  -[MSASSharingRelationship emails]
  -[MSASSharingRelationship .cxx_destruct]
  -[MSASSharingRelationship email]
  -[MSASSharingRelationship copyWithZone:]
  -[MSASSharingRelationship setLastName:]
  -[MSASSharingRelationship isEqual:]
  -[MSASSharingRelationship init]
  -[MSASSharingRelationship setState:]
  -[MSASSharingRelationship initWithCoder:]
  -[MSASSharingRelationship phones]
  -[MSASSharingRelationship _fullName]
  -[MSASSharingRelationship setEmails:]
  -[MSASSharingRelationship setPhones:]
  -[MSASSharingRelationship albumGUID]
  -[MSASSharingRelationship setAlbumGUID:]
  -[MSASSharingRelationship isMine]
  -[MSASSharingRelationship setIsMine:]
  -[MSASSharingRelationship subscriptionDate]
  -[MSASSharingRelationship setGUID:]
  -[MSASSharingRelationship setSubscriptionDate:]
  -[MSASSharingRelationship isEqualToSharingRelationship:]


MSASComment : NSObject <NSSecureCoding>
 @property  NSString *GUID
 @property  int ID
 @property  NSDate *timestamp
 @property  NSDate *clientTimestamp
 @property  NSString *email
 @property  NSString *personID
 @property  NSString *fullName
 @property  NSString *firstName
 @property  NSString *lastName
 @property  BOOL isDeletable
 @property  BOOL isMine
 @property  BOOL isLike
 @property  BOOL isCaption
 @property  BOOL isBatchComment
 @property  NSString *content

  // class methods
  +[MSASComment supportsSecureCoding]
  +[MSASComment comment]
  +[MSASComment MSASPCommentFromProtocolDictionary:]

  // instance methods
  -[MSASComment setPersonID:]
  -[MSASComment setFirstName:]
  -[MSASComment personID]
  -[MSASComment setID:]
  -[MSASComment firstName]
  -[MSASComment GUID]
  -[MSASComment fullName]
  -[MSASComment setTimestamp:]
  -[MSASComment ID]
  -[MSASComment lastName]
  -[MSASComment content]
  -[MSASComment encodeWithCoder:]
  -[MSASComment setFullName:]
  -[MSASComment setEmail:]
  -[MSASComment .cxx_destruct]
  -[MSASComment email]
  -[MSASComment timestamp]
  -[MSASComment setLastName:]
  -[MSASComment isEqual:]
  -[MSASComment init]
  -[MSASComment setContent:]
  -[MSASComment initWithCoder:]
  -[MSASComment isDeletable]
  -[MSASComment isMine]
  -[MSASComment isLike]
  -[MSASComment isCaption]
  -[MSASComment isBatchComment]
  -[MSASComment setIsBatchComment:]
  -[MSASComment setIsCaption:]
  -[MSASComment setIsDeletable:]
  -[MSASComment setIsLike:]
  -[MSASComment setIsMine:]
  -[MSASComment clientTimestamp]
  -[MSASComment setGUID:]
  -[MSASComment setClientTimestamp:]


MSASModelEnumerator : NSEnumerator
 @property  ^{sqlite3=} db
 @property  ^{sqlite3_stmt=} stmt
 @property  @? stepBlock
 @property  NSObject<OS_dispatch_queue> *queue

  // class methods
  +[MSASModelEnumerator enumeratorWithDatabase:query:stepBlock:]

  // instance methods
  -[MSASModelEnumerator initWithDatabase:query:stepBlock:]
  -[MSASModelEnumerator setDb:]
  -[MSASModelEnumerator setStepBlock:]
  -[MSASModelEnumerator db]
  -[MSASModelEnumerator dealloc]
  -[MSASModelEnumerator .cxx_destruct]
  -[MSASModelEnumerator nextObject]
  -[MSASModelEnumerator setQueue:]
  -[MSASModelEnumerator setStmt:]
  -[MSASModelEnumerator queue]
  -[MSASModelEnumerator stmt]
  -[MSASModelEnumerator stepBlock]
  -[MSASModelEnumerator init]


MSASInvitation : MSASSharingRelationship
  // class methods
  +[MSASInvitation MSASPInvitationFromProtocolDictionary:]

  // instance methods
  -[MSASInvitation copyWithZone:]


MSASCommentCheckOperation : NSObject
 @property  NSString *albumGUID
 @property  NSString *assetCollectionGUID

  // instance methods
  -[MSASCommentCheckOperation .cxx_destruct]
  -[MSASCommentCheckOperation albumGUID]
  -[MSASCommentCheckOperation setAlbumGUID:]
  -[MSASCommentCheckOperation assetCollectionGUID]
  -[MSASCommentCheckOperation setAssetCollectionGUID:]


MSASPendingChanges : NSObject
 @property  NSMutableSet *pendingAlbumGUIDsWithKeyValueChanges
 @property  NSMutableSet *pendingAlbumChanges
 @property  NSMutableSet *pendingAlbumGUIDsWithSharingInfoChanges
 @property  NSMutableDictionary *pendingAlbumGUIDToAssetCollections

  // instance methods
  -[MSASPendingChanges hasPendingChanges]
  -[MSASPendingChanges .cxx_destruct]
  -[MSASPendingChanges initWithSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:]
  -[MSASPendingChanges removePendingKeyValueChangesForAlbumGUID:]
  -[MSASPendingChanges addPendingChangesForAlbumGUID:]
  -[MSASPendingChanges removePendingChangesForAlbumGUID:]
  -[MSASPendingChanges addPendingAssetCollectionChanges:forAlbumGUID:]
  -[MSASPendingChanges removePendingAssetCollection:forAlbumGUID:]
  -[MSASPendingChanges removePendingSharingInfoChangesForAlbumGUID:]
  -[MSASPendingChanges pendingAlbumGUIDsWithKeyValueChanges]
  -[MSASPendingChanges setPendingAlbumGUIDsWithKeyValueChanges:]
  -[MSASPendingChanges pendingAlbumChanges]
  -[MSASPendingChanges setPendingAlbumChanges:]
  -[MSASPendingChanges pendingAlbumGUIDsWithSharingInfoChanges]
  -[MSASPendingChanges setPendingAlbumGUIDsWithSharingInfoChanges:]
  -[MSASPendingChanges pendingAlbumGUIDToAssetCollections]
  -[MSASPendingChanges setPendingAlbumGUIDToAssetCollections:]


MSASServerSideModel : MSASModelBase <MSASModel, MSASStateMachineDelegate>
 @property  NSCountedSet *observers
 @property  MSASStateMachine *stateMachine
 @property  NSObject<OS_dispatch_queue> *memberQueue
 @property  MSASServerSideModelGroupedCommandQueue *commandQueue
 @property  MSASPendingChanges *pendingChanges
 @property  MSAlbumSharingDaemon *daemon
 @property  NSObject<OS_dispatch_queue> *eventQueue
 @property  NSString *personID
 @property  int maxGroupedCallbackEventBatchCount
 @property  double maxGroupedCallbackEventIdleInterval
 @property  double maxGroupedCallbackEventStaleness
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  MSASStateMachine *MSASCounterpartInstance

  // instance methods
  -[MSASServerSideModel hasEnqueuedActivities]
  -[MSASServerSideModel setMemberQueue:]
  -[MSASServerSideModel memberQueue]
  -[MSASServerSideModel shutDown]
  -[MSASServerSideModel pendingChanges]
  -[MSASServerSideModel eventQueue]
  -[MSASServerSideModel setEventQueue:]
  -[MSASServerSideModel setDaemon:]
  -[MSASServerSideModel retainBusy]
  -[MSASServerSideModel albums]
  -[MSASServerSideModel _reconstruct]
  -[MSASServerSideModel MSASStateMachine:didFinishGettingAccessControls:forAlbum:info:error:]
  -[MSASServerSideModel reconstruct]
  -[MSASServerSideModel MSASStateMachine:didFinishCheckingForCommentChangesInAssetCollectionWithGUID:largestCommentID:info:error:]
  -[MSASServerSideModel acceptInvitationWithToken:info:completionBlock:]
  -[MSASServerSideModel addComments:toAssetCollectionWithGUID:]
  -[MSASServerSideModel serverCommunicationBackoffDate]
  -[MSASServerSideModel setPendingChanges:]
  -[MSASServerSideModel invitationGUIDs]
  -[MSASServerSideModel stateMachine]
  -[MSASServerSideModel MSASStateMachine:didFinishUpdatingAssetCollections:inAlbum:info:error:]
  -[MSASServerSideModel dbQueueDeleteAlbumWithGUID:info:]
  -[MSASServerSideModel acceptInvitationWithGUID:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishRetrievingAsset:inAlbum:error:]
  -[MSASServerSideModel MSASStateMachine:didFinishDeletingAssetCollection:inAlbum:info:error:]
  -[MSASServerSideModel userInfoForCommentWithGUID:]
  -[MSASServerSideModel dbQueueCheckToClearUnviewedStateOnAlbumWithGUID:info:]
  -[MSASServerSideModel dbQueueDeleteAccessControlWithGUID:info:]
  -[MSASServerSideModel setUserInfo:forInvitationWithGUID:]
  -[MSASServerSideModel dbQueueInvitationWithAlbumGUID:outObject:outInvitationGUID:outEmail:outUserInfoData:]
  -[MSASServerSideModel setMultipleContributorsEnabled:forAlbumWithGUID:completionBlock:]
  -[MSASServerSideModel dbQueueUpdateAlbumCtag:]
  -[MSASServerSideModel modifyAlbumMetadata:]
  -[MSASServerSideModel MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:info:]
  -[MSASServerSideModel dbQueueDeleteAllPendingCommentCheckOperations]
  -[MSASServerSideModel setPublicAccessEnabled:forAlbumWithGUID:completionBlock:]
  -[MSASServerSideModel dbQueueAssetCollectionMetadataWithAssetCollectionGUID:key:outValue:]
  -[MSASServerSideModel MSASStateMachine:didFinishSettingSyncedStateForAssetCollection:inAlbum:assetStateCtag:info:error:]
  -[MSASServerSideModel setPublicAccessEnabled:forAlbumWithGUID:info:completionBlock:]
  -[MSASServerSideModel acceptInvitationWithToken:completionBlock:]
  -[MSASServerSideModel retrieveAssets:inAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishSettingSyncedStateForAlbum:info:error:newAlbumStateCtag:]
  -[MSASServerSideModel deleteCommentWithGUID:info:]
  -[MSASServerSideModel assetCollectionWithGUID:]
  -[MSASServerSideModel addComments:toAssetCollectionWithGUID:info:]
  -[MSASServerSideModel maxGroupedCallbackEventStaleness]
  -[MSASServerSideModel accessControlGUIDsForAlbumWithGUID:]
  -[MSASServerSideModel dbQueueInvitationForAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishCheckingForAlbumSyncedStateChangesInAlbum:info:error:newAlbumStateCtag:]
  -[MSASServerSideModel MSASStateMachine:didFinishDeletingAlbum:info:error:]
  -[MSASServerSideModel unsubscribeFromAlbumWithGUID:info:]
  -[MSASServerSideModel albumWithGUID:]
  -[MSASServerSideModel commentsForAssetCollectionWithGUID:]
  -[MSASServerSideModel accessControlsForAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishUpdatingAlbum:info:error:]
  -[MSASServerSideModel userInfoForAssetCollectionWithGUID:]
  -[MSASServerSideModel forgetEverythingInfo:]
  -[MSASServerSideModel MSASStateMachine:didFindAlbumSyncedState:forAlbum:info:]
  -[MSASServerSideModel dbQueueMaximumPhotoNumberForAlbumWithGUID:]
  -[MSASServerSideModel addObserver:]
  -[MSASServerSideModel MSASStateMachine:didFindAssetCollectionChanges:forAlbum:info:]
  -[MSASServerSideModel _invalidInvitationGUIDErrorWithGUID:]
  -[MSASServerSideModel _protocolErrorForUnderlyingError:]
  -[MSASServerSideModel MSASStateMachine:didQueryIsAssetCollectionWithGUIDInModel:]
  -[MSASServerSideModel isPublicAccessEnabledForAlbumWithGUID:]
  -[MSASServerSideModel shutDownForDestruction:completionBlock:]
  -[MSASServerSideModel dbQueueAccessControlWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:]
  -[MSASServerSideModel dbQueueCommentWithID:assetCollectionGUID:outObject:outGUID:outTimestamp:outIsCaption:outUserInfoData:]
  -[MSASServerSideModel serverSideConfiguration]
  -[MSASServerSideModel MSASStateMachine:didFireScheduledEvent:forAssetCollectionGUID:albumGUID:info:]
  -[MSASServerSideModel setUserInfo:forCommentWithGUID:]
  -[MSASServerSideModel _invalidAssetCollectionGUIDErrorwithGUID:]
  -[MSASServerSideModel refreshAccessControlListForAlbumWithGUID:info:]
  -[MSASServerSideModel initWithPersonID:databasePath:]
  -[MSASServerSideModel MSASStateMachine:willCheckForUpdatesInAlbum:info:]
  -[MSASServerSideModel dbQueueAddCommentCheckOperation:]
  -[MSASServerSideModel dbQueueSetAssetCollection:inAlbumWithGUID:info:]
  -[MSASServerSideModel errorIsCancellation:]
  -[MSASServerSideModel eventQueuePerformBlockOnObservers:]
  -[MSASServerSideModel dbQueueAlbumGUIDs]
  -[MSASServerSideModel dbQueueLookupOrCreateCommentWithGUID:outAssetCollection:outAlbum:]
  -[MSASServerSideModel videoURLsForAssetCollectionWithGUID:forMediaAssetType:completionBlock:]
  -[MSASServerSideModel dbQueueAlbumWithGUID:outObject:outName:outCtag:outForeignCtag:outURLString:outUserInfoData:]
  -[MSASServerSideModel deleteAssetCollectionWithGUID:info:]
  -[MSASServerSideModel MSASCounterpartInstance]
  -[MSASServerSideModel dbQueueDeleteInvitationWithGUID:info:]
  -[MSASServerSideModel setMaxGroupedCallbackEventBatchCount:]
  -[MSASServerSideModel deleteAlbumWithGUID:info:]
  -[MSASServerSideModel MSASStateMachineDidStart:]
  -[MSASServerSideModel MSASStateMachineDidRequestAlbumWithGUID:]
  -[MSASServerSideModel .cxx_destruct]
  -[MSASServerSideModel dbQueueInvitationWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:]
  -[MSASServerSideModel refreshResetSync:]
  -[MSASServerSideModel addAlbum:]
  -[MSASServerSideModel releaseBusy]
  -[MSASServerSideModel markAsSpamInvitationWithToken:info:]
  -[MSASServerSideModel addAssetCollections:toAlbumWithGUID:]
  -[MSASServerSideModel forgetEverythingInfo:completionBlock:]
  -[MSASServerSideModel dbQueueAssetCollectionContainsCommentsFromMeAssetCollectionGUID:]
  -[MSASServerSideModel unviewedAssetCollectionCountForAlbumWithGUID:]
  -[MSASServerSideModel eventQueueNotifyObserversOfUpdatedUnviewedCountInAlbum:unviewedCount:info:]
  -[MSASServerSideModel setUserInfo:forAccessControlWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishCreatingAlbum:info:error:]
  -[MSASServerSideModel MSASStateMachine:didFindNewURLString:forAlbumWithGUID:info:]
  -[MSASServerSideModel commentWithGUID:]
  -[MSASServerSideModel dbQueueSetUnviewedState:onAssetCollectionWithGUID:info:]
  -[MSASServerSideModel dbQueueMaximumCommentIDForAssetCollectionWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishDeletingComment:inAssetCollection:inAlbum:info:error:]
  -[MSASServerSideModel dbQueueDeleteAllAlbumMetadataForAlbumWithGUID:info:]
  -[MSASServerSideModel MSASStateMachineDidFindGlobalResetSync:info:]
  -[MSASServerSideModel maxGroupedCallbackEventBatchCount]
  -[MSASServerSideModel rejectInvitationWithGUID:]
  -[MSASServerSideModel validateInvitationToken:albumName:completionBlock:]
  -[MSASServerSideModel removeCommandsUpToCommandIndex:]
  -[MSASServerSideModel dbQueueSetAlbumMetadataAlbumGUID:key:value:info:]
  -[MSASServerSideModel MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:info:]
  -[MSASServerSideModel refreshResetSync:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishCheckingForChangesInfo:error:]
  -[MSASServerSideModel _invalidAccessControlGUIDErrorwithGUID:]
  -[MSASServerSideModel unviewedAlbumCount]
  -[MSASServerSideModel dbQueueDeleteInvitationForAlbumWithGUID:info:]
  -[MSASServerSideModel markAsSpamAlbumWithGUID:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishCheckingForUpdatesInAlbum:info:error:]
  -[MSASServerSideModel removeAccessControlEntryWithGUID:info:]
  -[MSASServerSideModel lastViewedCommentDateForAssetCollectionWithGUID:]
  -[MSASServerSideModel dbQueueSetAccessControl:info:]
  -[MSASServerSideModel videoURLForAssetCollectionWithGUID:completionBlock:]
  -[MSASServerSideModel performBlockOnObservers:]
  -[MSASServerSideModel assetCollectionsInAlbumWithGUID:]
  -[MSASServerSideModel removeAccessControlEntryWithGUID:]
  -[MSASServerSideModel refreshContentOfAlbumWithGUID:resetSync:]
  -[MSASServerSideModel flushAllPendingCommentCheckOperations]
  -[MSASServerSideModel setObservers:]
  -[MSASServerSideModel dbQueueDeleteAlbumMetadataAlbumGUID:key:info:]
  -[MSASServerSideModel rejectInvitationWithGUID:info:]
  -[MSASServerSideModel enqueueCommand:]
  -[MSASServerSideModel dbQueueDeleteAssetCollectionWithGUID:info:]
  -[MSASServerSideModel setMSASCounterpartInstance:]
  -[MSASServerSideModel dbQueueAssetCollectionGUIDsInAlbumWithGUID:]
  -[MSASServerSideModel dbQueueSetInvitation:info:]
  -[MSASServerSideModel setFocusAssetCollectionGUID:]
  -[MSASServerSideModel addAccessControlEntries:toAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishUnsubscribingFromAlbum:info:error:]
  -[MSASServerSideModel dbQueueSetAssetCollectionMetadataAssetCollectionGUID:key:value:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishSendingInvitationByPhone:toOwnedAlbum:info:error:]
  -[MSASServerSideModel commandQueue]
  -[MSASServerSideModel MSASStateMachine:willCheckForAlbumSyncedStateChangesInAlbum:info:]
  -[MSASServerSideModel albumGUIDs]
  -[MSASServerSideModel MSASStateMachine:didFinishAddingComment:toAssetCollection:inAlbum:info:error:]
  -[MSASServerSideModel MSASStateMachine:didFinishCheckingForUpdatesInAlbums:info:]
  -[MSASServerSideModel daemon]
  -[MSASServerSideModel earliestUnviewedAssetCollectionGUIDInAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFindChangesInAlbum:info:error:]
  -[MSASServerSideModel dbQueueDeleteAllAssetCollectionMetadataForAssetCollectionWithGUID:info:]
  -[MSASServerSideModel MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:info:]
  -[MSASServerSideModel setUserInfo:forAssetCollectionWithGUID:]
  -[MSASServerSideModel hasCommandsInGroupedCommandQueue]
  -[MSASServerSideModel dbQueueCommentWithGUID:outObject:outID:outTimestamp:outAssetCollectionGUID:outIsCaption:outUserInfoData:]
  -[MSASServerSideModel markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:]
  -[MSASServerSideModel MSASStateMachine:didFinishAddingAssetCollection:toAlbum:info:error:]
  -[MSASServerSideModel modifyAlbumMetadata:info:]
  -[MSASServerSideModel captionForAssetCollectionWithGUID:]
  -[MSASServerSideModel dbQueueUnviewedAssetCollectionCountForAlbumWithGUID:]
  -[MSASServerSideModel dbQueueAlbumMetadataWithAlbumGUID:key:outValue:]
  -[MSASServerSideModel dbQueueCountOfUnviewedAssetCollectionsInAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFindCommentChanges:inAssetCollectionWithGUID:inAlbumWithGUID:info:]
  -[MSASServerSideModel setUserInfo:forAlbumWithGUID:]
  -[MSASServerSideModel dbQueueLookupOrCreateAlbumWithGUID:]
  -[MSASServerSideModel setMaxGroupedCallbackEventStaleness:]
  -[MSASServerSideModel deleteAssetCollectionWithGUID:]
  -[MSASServerSideModel setMaxGroupedCallbackEventIdleInterval:]
  -[MSASServerSideModel markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:info:]
  -[MSASServerSideModel refreshContentOfAlbumWithGUID:resetSync:info:]
  -[MSASServerSideModel dbQueueUpgradeFromDatabaseVersion:currentVersion:]
  -[MSASServerSideModel dbQueueAccessControlGUIDsForAlbumWithGUID:]
  -[MSASServerSideModel isAlbumWithGUIDMarkedAsUnviewed:]
  -[MSASServerSideModel MSASStateMachine:didFinishMarkingAsSpamInvitationForAlbum:invitationGUID:info:error:]
  -[MSASServerSideModel MSASStateMachine:didFindAssetCollectionSyncedState:forAssetCollectionGUID:inAlbum:assetCollectionStateCtag:info:]
  -[MSASServerSideModel userInfoForInvitationWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFindAlbumChanges:info:]
  -[MSASServerSideModel start]
  -[MSASServerSideModel unsubscribeFromAlbumWithGUID:]
  -[MSASServerSideModel subscribeToAlbumWithGUID:]
  -[MSASServerSideModel deleteCommentWithGUID:]
  -[MSASServerSideModel markAsSpamInvitationWithGUID:info:]
  -[MSASServerSideModel addAlbum:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishEnqueueingAssetsForDownload:inAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishMarkingAsSpamInvitationForToken:info:error:]
  -[MSASServerSideModel maxGroupedCallbackEventIdleInterval]
  -[MSASServerSideModel subscribeToAlbumWithGUID:info:]
  -[MSASServerSideModel MSASStateMachine:didFindAccessControlChangesForAlbumGUIDS:info:]
  -[MSASServerSideModel refreshAccessControlListForAlbumWithGUID:]
  -[MSASServerSideModel dbQueueSetUnviewedState:onAlbumWithGUID:info:]
  -[MSASServerSideModel invitationWithGUID:]
  -[MSASServerSideModel userInfoForAlbumWithGUID:]
  -[MSASServerSideModel dbQueueFlushAllPendingCommentCheckOperations]
  -[MSASServerSideModel initWithPersonID:databasePath:eventQueue:]
  -[MSASServerSideModel markAlbumGUIDAsViewed:]
  -[MSASServerSideModel dbQueueSetAlbum:info:]
  -[MSASServerSideModel acceptInvitationWithGUID:]
  -[MSASServerSideModel isAssetCollectionWithGUIDMarkedAsUnviewed:]
  -[MSASServerSideModel deleteAlbumWithGUID:]
  -[MSASServerSideModel markAlbumGUIDAsViewed:info:]
  -[MSASServerSideModel dbQueuePendingCommentCheckOperations]
  -[MSASServerSideModel refreshCommentsForAssetCollectionWithGUID:resetSync:]
  -[MSASServerSideModel removeObserver:]
  -[MSASServerSideModel dbQueueUnviewedAlbumCount]
  -[MSASServerSideModel dbQueueAccessControlsForAlbumWithGUID:]
  -[MSASServerSideModel forgetEverything]
  -[MSASServerSideModel nextCommandGroupMaxCount:outCommand:outLastCommandIndex:]
  -[MSASServerSideModel accessControlWithGUID:]
  -[MSASServerSideModel MSASStateMachine:willUpdateAssetCollections:inAlbum:info:]
  -[MSASServerSideModel invitationForAlbumWithGUID:]
  -[MSASServerSideModel initWithPersonID:]
  -[MSASServerSideModel MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:info:]
  -[MSASServerSideModel deleteAssetCollectionsWithGUIDs:]
  -[MSASServerSideModel setCommandQueue:]
  -[MSASServerSideModel refreshCommentsForAssetCollectionWithGUID:resetSync:info:]
  -[MSASServerSideModel dbQueueSetComment:forAssetCollectionWithGUID:info:]
  -[MSASServerSideModel MSASStateMachine:didFinishRemovingSharingRelationship:fromOwnedAlbum:info:error:]
  -[MSASServerSideModel focusAssetCollectionGUID]
  -[MSASServerSideModel addAccessControlEntries:toAlbumWithGUID:info:]
  -[MSASServerSideModel invitations]
  -[MSASServerSideModel cancel]
  -[MSASServerSideModel dbQueueDeleteAssetCollectionMetadataAssetCollectionGUID:key:info:]
  -[MSASServerSideModel markAlbumGUIDAsViewed:moveLastViewedAssetCollectionMarker:info:]
  -[MSASServerSideModel setMultipleContributorsEnabled:forAlbumWithGUID:info:completionBlock:]
  -[MSASServerSideModel retrieveAssetsFromAssetCollectionsWithGUIDs:assetTypeFlags:]
  -[MSASServerSideModel MSASStateMachine:didFinishSubscribingToAlbum:info:error:]
  -[MSASServerSideModel MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:info:]
  -[MSASServerSideModel addAssetCollections:toAlbumWithGUID:info:]
  -[MSASServerSideModel assetCollectionGUIDsInAlbumWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didFinishAddingSharingRelationships:toOwnedAlbum:info:error:]
  -[MSASServerSideModel dbQueueCheckToClearUnviewedStateOnAssetCollectionWithGUID:info:]
  -[MSASServerSideModel setFocusAlbumGUID:]
  -[MSASServerSideModel dbQueueCommentsForAssetCollectionWithGUID:]
  -[MSASServerSideModel MSASStateMachine:didRequestAssetsForAddingAssetCollections:inAlbum:specifications:info:]
  -[MSASServerSideModel dbQueueAssetCollectionWithGUID:outObject:outCtag:outAlbumGUID:outBatchDate:outPhotoDate:outPhotoNumber:outUserInfoData:]
  -[MSASServerSideModel userInfoForAccessControlWithGUID:]
  -[MSASServerSideModel commandCount]
  -[MSASServerSideModel observers]
  -[MSASServerSideModel dbQueueLookupOrCreateAssetCollectionWithGUID:outAlbum:]
  -[MSASServerSideModel dbQueueDeleteCommentWithGUID:info:]
  -[MSASServerSideModel MSASStateMachineDidUpdateServerCommunicationBackoffDate:]


MSDaemon : NSObject
 @property  int busyCount
 @property  int UIBusyCount
 @property  NSTimer *hysteresisTimer
 @property  BOOL stabilizedIsBusy
 @property  NSObject<OS_dispatch_queue> *idleCountQueue

  // instance methods
  -[MSDaemon isBusy]
  -[MSDaemon retainBusy]
  -[MSDaemon setBusyCount:]
  -[MSDaemon busyCount]
  -[MSDaemon releasePowerAssertion]
  -[MSDaemon .cxx_destruct]
  -[MSDaemon didUnidle]
  -[MSDaemon retainUIBusy]
  -[MSDaemon releaseBusy]
  -[MSDaemon setUIBusyCount:]
  -[MSDaemon UIBusyCount]
  -[MSDaemon didIdle]
  -[MSDaemon releaseUIBusy]
  -[MSDaemon init]
  -[MSDaemon _hysteresisTimerDidFire:]
  -[MSDaemon retainPowerAssertion]
  -[MSDaemon _didChangeIdleBusyState:]
  -[MSDaemon stabilizedDidIdle]
  -[MSDaemon stabilizedDidUnidle]
  -[MSDaemon idleCountQueue]
  -[MSDaemon setIdleCountQueue:]
  -[MSDaemon hysteresisTimer]
  -[MSDaemon setHysteresisTimer:]
  -[MSDaemon stabilizedIsBusy]
  -[MSDaemon setStabilizedIsBusy:]


MSPerformanceLogger : MSASModelBase
  // class methods
  +[MSPerformanceLogger sharedLogger]
  +[MSPerformanceLogger nukeCompletionBlock:]

  // instance methods
  -[MSPerformanceLogger dbQueueUpgradeFromDatabaseVersion:currentVersion:]
  -[MSPerformanceLogger init]
  -[MSPerformanceLogger _logSqliteErrorLine:]
  -[MSPerformanceLogger startOperation:itemGUID:]
  -[MSPerformanceLogger stopOperation:itemGUID:]
  -[MSPerformanceLogger dbQueueDiscardOperation:itemGUID:]
  -[MSPerformanceLogger discardOperation:itemGUID:]
  -[MSPerformanceLogger summarizeOperation:itemGUID:formatBlock:]


MSASPConnectionGate : NSObject
 @property  NSError *error

  // class methods
  +[MSASPConnectionGate gate]

  // instance methods
  -[MSASPConnectionGate error]
  -[MSASPConnectionGate .cxx_destruct]
  -[MSASPConnectionGate setError:]


MSASProtocol : NSObject <NSURLConnectionDelegate>
 @property  MSASPConnectionGate *gate
 @property  NSObject<OS_dispatch_queue> *pendingConnectionsQueue
 @property  NSObject<OS_dispatch_group> *pendingConnectionsGroup
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *memberQueue
 @property  BOOL isShuttingDown
 @property  NSString *headerVersion
 @property  NSString *personID
 @property  NSURL *baseURL
 @property  NSString *serverSideConfigVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MSASProtocol setMemberQueue:]
  -[MSASProtocol memberQueue]
  -[MSASProtocol personID]
  -[MSASProtocol setBaseURL:]
  -[MSASProtocol shutDownCompletionBlock:]
  -[MSASProtocol acceptInvitationWithToken:completionBlock:]
  -[MSASProtocol workQueue]
  -[MSASProtocol setWorkQueue:]
  -[MSASProtocol baseURL]
  -[MSASProtocol .cxx_destruct]
  -[MSASProtocol isShuttingDown]
  -[MSASProtocol validateInvitationToken:albumName:completionBlock:]
  -[MSASProtocol initWithPersonID:]
  -[MSASProtocol _shareURL]
  -[MSASProtocol gate]
  -[MSASProtocol setGate:]
  -[MSASProtocol stopCompletionBlock:]
  -[MSASProtocol shutDownError]
  -[MSASProtocol stoppingError]
  -[MSASProtocol stopHandlerBlock]
  -[MSASProtocol sendURLRequest:bodyObj:completionBlock:]
  -[MSASProtocol sendURLRequest:method:bodyObj:checkServerSideConfigVersion:completionBlock:]
  -[MSASProtocol _sendOneURLRequest:checkServerSideConfigVersion:retryCount:completionBlock:]
  -[MSASProtocol _prepareHeadersForRequest:]
  -[MSASProtocol HTTPErrorWithStatusCode:]
  -[MSASProtocol errorFromStandardProcessingOnResponse:responseObject:checkServerSideConfigVersion:error:body:]
  -[MSASProtocol _createAlbumURL]
  -[MSASProtocol _updateAlbumURLWithBaseURL:]
  -[MSASProtocol _putAssetsURLWithBaseURL:]
  -[MSASProtocol _getUploadTokensURLWithBaseURL:]
  -[MSASProtocol _getVideoURLWithBaseURL:]
  -[MSASProtocol _uploadCompleteURLWithBaseURL:]
  -[MSASProtocol _unshareURL]
  -[MSASProtocol _addCommentURLWithBaseURL:]
  -[MSASProtocol _enablePublicAccessURLWithBaseURL:]
  -[MSASProtocol _enableMultipleContributorsURLWithBaseURL:]
  -[MSASProtocol _deleteURLWithBaseURL:]
  -[MSASProtocol _deleteAssetsURLWithBaseURL:]
  -[MSASProtocol _deleteCommentURLWithBaseURL:]
  -[MSASProtocol _getChangesURL]
  -[MSASProtocol _sharingInfoURLWithBaseURL:]
  -[MSASProtocol _albumSummaryURLWithBaseURL:]
  -[MSASProtocol _getAssetsURLWithBaseURL:]
  -[MSASProtocol _getTokensURLWithBaseURL:]
  -[MSASProtocol _validateInvitationURL]
  -[MSASProtocol _subscribeURL]
  -[MSASProtocol _unsubscribeURL]
  -[MSASProtocol _reportSpamURL]
  -[MSASProtocol _getCommentsURLWithBaseURL:]
  -[MSASProtocol _setCommentPositionURL]
  -[MSASProtocol _albumStateURL]
  -[MSASProtocol _setAssetStateURL]
  -[MSASProtocol _setAlbumStateURL]
  -[MSASProtocol _serverSideConfigURL]
  -[MSASProtocol _getAlbumURL]
  -[MSASProtocol createAlbum:completionBlock:]
  -[MSASProtocol updateAlbum:albumURLString:completionBlock:]
  -[MSASProtocol putAssetCollections:intoAlbum:albumURLString:completionBlock:]
  -[MSASProtocol getUploadTokens:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:]
  -[MSASProtocol getVideoURL:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:]
  -[MSASProtocol responseDict:containsLimitErrorCode:outMaxAllowed:]
  -[MSASProtocol sendUploadCompleteSuccessfulAssetCollections:failedAssetCollections:album:completionBlock:]
  -[MSASProtocol addSharingRelationships:toAlbum:completionBlock:]
  -[MSASProtocol removeSharingRelationships:fromAlbum:completionBlock:]
  -[MSASProtocol addComment:toAssetCollection:inAlbum:albumURLString:completionBlock:]
  -[MSASProtocol setPublicAccessEnabled:forAlbum:completionBlock:]
  -[MSASProtocol setMultipleContributorsEnabled:forAlbum:completionBlock:]
  -[MSASProtocol deleteAlbum:completionBlock:]
  -[MSASProtocol deleteAssetCollections:inAlbum:completionBlock:]
  -[MSASProtocol deleteComment:fromAssetCollection:inAlbum:albumURLString:completionBlock:]
  -[MSASProtocol getChangesRootCtag:completionBlock:]
  -[MSASProtocol getSharingInfoForAlbum:albumURLString:completionBlock:]
  -[MSASProtocol albumSummaryAlbum:albumURLString:resetSync:completionBlock:]
  -[MSASProtocol getAssetCollections:inAlbum:albumURLString:completionBlock:]
  -[MSASProtocol _couldNotReauthorizeError]
  -[MSASProtocol getTokensForAssets:inAlbum:albumURLString:completionBlock:]
  -[MSASProtocol subscribeToAlbum:completionBlock:]
  -[MSASProtocol unsubscribeFromAlbum:completionBlock:]
  -[MSASProtocol markAsSpamInvitationForAlbum:completionBlock:]
  -[MSASProtocol markAsSpamInvitationForToken:completionBlock:]
  -[MSASProtocol getCommentChanges:inAlbumWithGUID:albumURLString:completionBlock:]
  -[MSASProtocol getAlbumSyncedStateForAlbum:assetCollectionStateBlock:completionBlock:]
  -[MSASProtocol setAssetCollectionSyncedState:forAssetCollection:inAlbum:assetCollectionStateCtag:completionBlock:]
  -[MSASProtocol setAlbumSyncedState:forAlbum:albumStateCtag:completionBlock:]
  -[MSASProtocol getServerSideConfigCompletionBlock:]
  -[MSASProtocol getAlbumURLForAlbumWithGUID:completionBlock:]
  -[MSASProtocol pendingConnectionsQueue]
  -[MSASProtocol setPendingConnectionsQueue:]
  -[MSASProtocol pendingConnectionsGroup]
  -[MSASProtocol setPendingConnectionsGroup:]
  -[MSASProtocol serverSideConfigVersion]
  -[MSASProtocol setServerSideConfigVersion:]
  -[MSASProtocol setIsShuttingDown:]
  -[MSASProtocol headerVersion]


MSASEnqueuedCommand : NSObject <NSCoding>
 @property  NSString *command
 @property  NSDictionary *variantParam
 @property  NSDictionary *invariantParam

  // class methods
  +[MSASEnqueuedCommand command]
  +[MSASEnqueuedCommand commandwithCommand:variantParam:invariantParam:]

  // instance methods
  -[MSASEnqueuedCommand setCommand:]
  -[MSASEnqueuedCommand command]
  -[MSASEnqueuedCommand encodeWithCoder:]
  -[MSASEnqueuedCommand .cxx_destruct]
  -[MSASEnqueuedCommand init]
  -[MSASEnqueuedCommand initWithCoder:]
  -[MSASEnqueuedCommand initWithCommand:variantParam:invariantParam:]
  -[MSASEnqueuedCommand canBeGroupedWithCommand:]
  -[MSASEnqueuedCommand variantParam]
  -[MSASEnqueuedCommand setVariantParam:]
  -[MSASEnqueuedCommand invariantParam]
  -[MSASEnqueuedCommand setInvariantParam:]


MSASServerSideModelGroupedCommandQueue : MSASGroupedQueue
 @property  MSASEnqueuedCommand *lastEnqueuedCommand

  // class methods
  +[MSASServerSideModelGroupedCommandQueue calloutBlockForCommand:]

  // instance methods
  -[MSASServerSideModelGroupedCommandQueue flushQueue]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindNewAccessControl:inAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue workQueueFlushQueue]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindDeletedAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue lastEnqueuedCommand]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindDeletedInvitation:info:]
  -[MSASServerSideModelGroupedCommandQueue .cxx_destruct]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindNewAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindNewAssetCollection:inAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindDeletedAccessControl:inAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue hasEnqueuedItems]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindNewComment:forAssetCollection:inAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue workQueueEnqueueCommand:variantParam:invariantParam:]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindNewInvitation:info:]
  -[MSASServerSideModelGroupedCommandQueue setLastEnqueuedCommand:]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didFindDeletedAssetCollection:inAlbum:info:]
  -[MSASServerSideModelGroupedCommandQueue MSASModel:didDeleteComment:forAssetCollection:inAlbum:info:]


MSImageScalingSpecification : NSObject
 @property  double nominalShortSideLength
 @property  double minimumLongSideLength
 @property  double maximumLongSideLength
 @property  int assetTypeFlags

  // class methods
  +[MSImageScalingSpecification assetsToGenerateFromImageWithInputSize:toConformToSpecifications:]
  +[MSImageScalingSpecification specificationWithSharedAlbumSpecificationString:]

  // instance methods
  -[MSImageScalingSpecification maximumLongSideLength]
  -[MSImageScalingSpecification nominalShortSideLength]
  -[MSImageScalingSpecification setMinimumLongSideLength:]
  -[MSImageScalingSpecification scaleFactorForInputSize:]
  -[MSImageScalingSpecification setAssetTypeFlags:]
  -[MSImageScalingSpecification setNominalShortSideLength:]
  -[MSImageScalingSpecification setMaximumLongSideLength:]
  -[MSImageScalingSpecification assetTypeFlags]
  -[MSImageScalingSpecification minimumLongSideLength]


MSASGroupedQueue : NSObject
 @property  MSTimerGate *idleTimerGate
 @property  MSTimerGate *stalenessTimerGate
 @property  MSASServerSideModel *model
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *memberQueue
 @property  int maxGroupedCallbackEventBatchCount
 @property  double maxGroupedCallbackEventIdleInterval
 @property  double maxGroupedCallbackEventStaleness
 @property  BOOL isAssertingBusyAssertion
 @property  BOOL isShuttingDown

  // instance methods
  -[MSASGroupedQueue setMemberQueue:]
  -[MSASGroupedQueue memberQueue]
  -[MSASGroupedQueue setModel:]
  -[MSASGroupedQueue model]
  -[MSASGroupedQueue workQueueFlushQueue]
  -[MSASGroupedQueue maxGroupedCallbackEventStaleness]
  -[MSASGroupedQueue workQueue]
  -[MSASGroupedQueue setWorkQueue:]
  -[MSASGroupedQueue setMaxGroupedCallbackEventBatchCount:]
  -[MSASGroupedQueue .cxx_destruct]
  -[MSASGroupedQueue isShuttingDown]
  -[MSASGroupedQueue maxGroupedCallbackEventBatchCount]
  -[MSASGroupedQueue setMaxGroupedCallbackEventStaleness:]
  -[MSASGroupedQueue setMaxGroupedCallbackEventIdleInterval:]
  -[MSASGroupedQueue hasEnqueuedItems]
  -[MSASGroupedQueue maxGroupedCallbackEventIdleInterval]
  -[MSASGroupedQueue init]
  -[MSASGroupedQueue setIsShuttingDown:]
  -[MSASGroupedQueue assertBusyAssertion]
  -[MSASGroupedQueue deassertBusyAssertion]
  -[MSASGroupedQueue workQueueAssertBusyAssertion]
  -[MSASGroupedQueue workQueueDeassertBusyAssertion]
  -[MSASGroupedQueue isAssertingBusyAssertion]
  -[MSASGroupedQueue memberQueueIsAssertingBusyAssertion]
  -[MSASGroupedQueue memberQueueSetIsAssertingBusyAssertion:]
  -[MSASGroupedQueue shutDownFlush:completionBlock:]
  -[MSASGroupedQueue flushQueueCompletionBlock:]
  -[MSASGroupedQueue workQueueRestartIdleTimer]
  -[MSASGroupedQueue workQueueClearIdleTimer]
  -[MSASGroupedQueue workQueueRestartStalenessTimer]
  -[MSASGroupedQueue workQueueClearStalenessTimer]
  -[MSASGroupedQueue workQueueDidEnqueueFirstItem]
  -[MSASGroupedQueue workQueueDidEnqueueSubsequentItem]
  -[MSASGroupedQueue idleTimerGate]
  -[MSASGroupedQueue setIdleTimerGate:]
  -[MSASGroupedQueue stalenessTimerGate]
  -[MSASGroupedQueue setStalenessTimerGate:]


MSVideoDerivativeSpecification : NSObject
 @property  BOOL useCellular
 @property  BOOL powerRequired
 @property  double bitRate
 @property  NSString *videoType
 @property  unsigned long mediaAssetType

  // class methods
  +[MSVideoDerivativeSpecification videoDerivativeSpecificationsWithDictionaryArray:]

  // instance methods
  -[MSVideoDerivativeSpecification mediaAssetType]
  -[MSVideoDerivativeSpecification powerRequired]
  -[MSVideoDerivativeSpecification initWithDictionary:]
  -[MSVideoDerivativeSpecification useCellular]
  -[MSVideoDerivativeSpecification videoType]
  -[MSVideoDerivativeSpecification bitRate]


NSError(MSErrorUtilities)
	// class methods
	+[NSError(MSErrorUtilities) MSErrorWithDomain:code:description:]
	+[NSError(MSErrorUtilities) MSErrorWithDomain:code:description:suggestion:]
	+[NSError(MSErrorUtilities) MSErrorWithDomain:code:description:underlyingError:]
	+[NSError(MSErrorUtilities) MSErrorWithDomain:code:description:underlyingError:additionalUserInfo:]
	+[NSError(MSErrorUtilities) MMCSErrorWithDomain:code:description:]

	// instance methods
	-[NSError(MSErrorUtilities) MSVerboseDescription]
	-[NSError(MSErrorUtilities) _MSVerboseDescriptionRecursionCount:]
	-[NSError(MSErrorUtilities) MSMakePrimaryError]
	-[NSError(MSErrorUtilities) MSFindPrimaryError]
	-[NSError(MSErrorUtilities) _MSApplyBlock:]
	-[NSError(MSErrorUtilities) MSIsTemporaryNetworkError]
	-[NSError(MSErrorUtilities) MSASStateMachineIsCanceledError]
	-[NSError(MSErrorUtilities) MSCanBeIgnored]
	-[NSError(MSErrorUtilities) MSNeedsBackoff]
	-[NSError(MSErrorUtilities) MSIsCounted]
	-[NSError(MSErrorUtilities) MSIsFatal]
	-[NSError(MSErrorUtilities) MSIsAuthError]
	-[NSError(MSErrorUtilities) MSIsBadTokenError]
	-[NSError(MSErrorUtilities) MSContainsErrorWithDomain:code:]
	-[NSError(MSErrorUtilities) MSIsQuotaError]
	-[NSError(MSErrorUtilities) MSIsRegistrationError]
	-[NSError(MSErrorUtilities) MSMMCSRetryAfterDate]
	-[NSError(MSErrorUtilities) MMCSErrorType]
	-[NSError(MSErrorUtilities) _MMCSApplyBlock:]
	-[NSError(MSErrorUtilities) MMCSIsCancelError]
	-[NSError(MSErrorUtilities) MMCSIsNetworkConditionsError]
	-[NSError(MSErrorUtilities) MMCSIsAuthorizationError]
	-[NSError(MSErrorUtilities) MMCSIsFatalError]
	-[NSError(MSErrorUtilities) MMCSRetryAfterDate]

(MCDictionaryUtilities)
	// instance methods
	-[(MCDictionaryUtilities) MSMutableDeepCopyWithZone:]
	-[(MCDictionaryUtilities) MSMutableDeepCopy]
	-[(MCDictionaryUtilities) MSDeepCopyWithZone:]
	-[(MCDictionaryUtilities) MSDeepCopy]
	-[(MCDictionaryUtilities) MSASIsGlobalResetSync]
	-[(MCDictionaryUtilities) MSASAlbumResetSyncAlbumGUID]
	-[(MCDictionaryUtilities) MSASIsLocalChange]
	-[(MCDictionaryUtilities) MSASEventIsDueToAlbumDeletionAlbumGUID]
	-[(MCDictionaryUtilities) MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID]
	-[(MCDictionaryUtilities) MSASIsNotInteresting]
	-[(MCDictionaryUtilities) MSASIsErrorRecovery]

(MSArrayUtilities)
	// instance methods
	-[(MSArrayUtilities) MSMutableDeepCopyWithZone:]
	-[(MSArrayUtilities) MSMutableDeepCopy]
	-[(MSArrayUtilities) MSDeepCopyWithZone:]
	-[(MSArrayUtilities) MSDeepCopy]
	-[(MSArrayUtilities) MSDSPAssetCollectionWithMasterFileHash:]

<DEREK BUG Categories!>(MSArrayUtilities)
	// instance methods
	-[<DEREK BUG Categories!>(MSArrayUtilities) MSRemoveOneObject:]
	-[<DEREK BUG Categories!>(MSArrayUtilities) MSRemoveOneObjectByPointerComparison:]

(MSStringUtilities)
	// class methods
	+[(MSStringUtilities) MSMakeUUID]
	+[(MSStringUtilities) MSTempFileOutFileName:]
	+[(MSStringUtilities) MSStringWithBool:]

	// instance methods
	-[(MSStringUtilities) MSHexData]
	-[(MSStringUtilities) MSUniqueID]

(MSDataUtilities)
	// instance methods
	-[(MSDataUtilities) MSInitWithBase64Encoding:]
	-[(MSDataUtilities) MSBase64Encoding]
	-[(MSDataUtilities) MSHexString]

<DEREK BUG Categories!>(MSASServerSideModel)
	// class methods
	+[<DEREK BUG Categories!>(MSASServerSideModel) MSASDictionaryWithCopyOfDictionary:]

	// instance methods
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddDictionary:]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddIsGlobalResetSync]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddIsAlbumResetSyncAlbumGUID:]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddIsLocalChange]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddEventIsDueToAlbumDeletionAlbumGUID:]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddEventIsDueToAssetCollectionDeletionAssetCollectionGUID:]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddNotInterestingKey]
	-[<DEREK BUG Categories!>(MSASServerSideModel) MSASAddIsErrorRecovery]

NSKeyedUnarchiver(MSUtilities)
	// class methods
	+[NSKeyedUnarchiver(MSUtilities) MSSafeUnarchiveAllowedClasses]
	+[NSKeyedUnarchiver(MSUtilities) MSSafeUnarchiveObjectWithData:outError:]
	+[NSKeyedUnarchiver(MSUtilities) MSSafeUnarchiveObjectWithFile:outError:]

01 00 0700 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDSession 
01 00 0500 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNReputationHandle 
01 00 0300 /System/Library/Frameworks/Contacts.framework/Contacts: CNReputationStore 
01 00 0800 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0400 /System/Library/PrivateFrameworks/MobileBackup.framework/MobileBackup: MBManager 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLConnection 
01 00 0100 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0100 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0600 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0600 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 0200 /System/Library/Frameworks/UniformTypeIdentifiers.framework/UniformTypeIdentifiers: UTType 
