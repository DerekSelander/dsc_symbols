|| __DATA.__objc_data _OBJC_CLASS_$_CCAccessibilityElement
|| __DATA.__objc_data _OBJC_CLASS_$_CCAsyncQueue
|| __DATA.__objc_data _OBJC_CLASS_$_CCAsyncQueueBlockOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CCChartDataRowBinding
|| __DATA.__objc_data _OBJC_CLASS_$_CCChartView
|| __DATA.__objc_data _OBJC_CLASS_$_CCChartViewSetupOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CCTestUtils
|| __DATA.__objc_data _OBJC_CLASS_$_CCTextLayer
|| __DATA.__objc_data _OBJC_CLASS_$_CCTextLayerLineData
|| __DATA.__objc_data _OBJC_CLASS_$_CCTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaAccessibilityGroupStackElement
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaAccessibilityHelper
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaArcMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaAreaMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCARenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCARendererWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGCanvas
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGContext
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGFontProperties
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGImage
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGLinearGradient
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCGTextMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCSSStyleDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaColorOrGradient
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaCurves
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaDataUpdateAsyncOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaEventAsyncOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaExpressionFunctions
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaGroupMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaHTMLElement
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaImageMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSColor
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSColorMap
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSConsole
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSDocument
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSFont
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSFontCache
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaJSMouseEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaLineMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaLogProxy
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaLogProxyHandler
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaLogger
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaMark
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaMarkItem
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaMultiItemShapeMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaPathMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaRectMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaRendererOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaRuleMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSVGRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaScenegraphUtils
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaScripts
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaShapeMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSignalListener
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSignalUpdateAsyncOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSingleItemShapeMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSymbolMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaSymbolPath
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaTextMarkDef
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaTransactionCommitter
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaTransactionMainThreadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaWorker
|| __DATA.__objc_data _OBJC_CLASS_$_CCVegaWorkerClient
|| __DATA.__objc_data _OBJC_CLASS_$_CCViewRendererDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_CCWeakLayerReference
|| __DATA.__objc_data _OBJC_METACLASS_$_CCAccessibilityElement
|| __DATA.__objc_data _OBJC_METACLASS_$_CCAsyncQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_CCAsyncQueueBlockOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CCChartDataRowBinding
|| __DATA.__objc_data _OBJC_METACLASS_$_CCChartView
|| __DATA.__objc_data _OBJC_METACLASS_$_CCChartViewSetupOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CCTestUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_CCTextLayer
|| __DATA.__objc_data _OBJC_METACLASS_$_CCTextLayerLineData
|| __DATA.__objc_data _OBJC_METACLASS_$_CCTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaAccessibilityGroupStackElement
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaAccessibilityHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaArcMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaAreaMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCARenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCARendererWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGCanvas
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGFontProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGImage
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGLinearGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCGTextMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCSSStyleDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaColorOrGradient
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaCurves
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaDataUpdateAsyncOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaEventAsyncOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaExpressionFunctions
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaGroupMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaHTMLElement
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaImageMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSColor
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSColorMap
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSConsole
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSFont
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSFontCache
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaJSMouseEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaLineMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaLogProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaLogProxyHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaLogger
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaMark
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaMarkItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaMultiItemShapeMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaPathMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaRectMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaRendererOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaRuleMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSVGRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaScenegraphUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaScripts
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaShapeMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSignalListener
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSignalUpdateAsyncOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSingleItemShapeMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSymbolMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaSymbolPath
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaTextMarkDef
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaTransactionCommitter
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaTransactionMainThreadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaWorker
|| __DATA.__objc_data _OBJC_METACLASS_$_CCVegaWorkerClient
|| __DATA.__objc_data _OBJC_METACLASS_$_CCViewRendererDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_CCWeakLayerReference
|| __DATA_CONST.__const _CCBaseConfigApple
|| __DATA_CONST.__const _CCBaseConfigVega
|| __DATA_CONST.__const _CCChartViewBaseConfig
|| __DATA_CONST.__const _CCChartViewCATransactionFromBackgroundThread
|| __DATA_CONST.__const _CCChartViewDelegate
|| __DATA_CONST.__const _CCChartViewRendererType
|| __DATA_CONST.__const _CCChartViewZoomFactor
|| __DATA_CONST.__const _CCRendererTypeCoreAnimation
|| __DATA_CONST.__const _CCRendererTypeCoreGraphics
|| __TEXT.__const _CoreChartVersionNumber
|| __TEXT.__const _CoreChartVersionString
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFAttributedStringCreate
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorCreateSRGB
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorRetain
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddCurveToPoint
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextAddQuadCurveToPoint
__ CoreGraphics: _CGContextAddRect
__ CoreGraphics: _CGContextBeginPage
__ CoreGraphics: _CGContextBeginPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClip
__ CoreGraphics: _CGContextClosePath
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextCopyPath
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawLinearGradient
__ CoreGraphics: _CGContextEndPage
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFlush
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextGetType
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextPathContainsPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextRotateCTM
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetAllowsFontSmoothing
__ CoreGraphics: _CGContextSetAlpha
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineCap
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineJoin
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetMiterLimit
__ CoreGraphics: _CGContextSetRGBFillColor
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextDrawingMode
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataConsumerCreateWithCFData
__ CoreGraphics: _CGDataConsumerRelease
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGGradientCreateWithColors
__ CoreGraphics: _CGGradientRelease
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPDFContextClose
__ CoreGraphics: _CGPDFContextCreate
__ CoreGraphics: _CGPDFDocumentCreateWithProvider
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddCurveToPoint
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateCopyByTransformingPath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathGetBoundingBox
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreText: _CTFontCopyTraits
__ CoreText: _CTFontCreateCopyWithAttributes
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontGetSymbolicTraits
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTLineGetTypographicBounds
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTFontSymbolicTrait
__ CoreText: _kCTFontTraitsAttribute
__ CoreText: _kCTFontWeightTrait
__ CoreText: _kCTForegroundColorAttributeName
__ CoreText: _kCTForegroundColorFromContextAttributeName
__ Foundation: _NSSelectorFromString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ JavaScriptCore: _OBJC_CLASS_$_JSContext
__ JavaScriptCore: _OBJC_CLASS_$_JSManagedValue
__ JavaScriptCore: _OBJC_CLASS_$_JSScript
__ JavaScriptCore: _OBJC_CLASS_$_JSValue
__ JavaScriptCore: _OBJC_CLASS_$_JSVirtualMachine
__ QuartzCore: _CATransform3DConcat
__ QuartzCore: _CATransform3DIdentity
__ QuartzCore: _CATransform3DInvert
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _CATransform3DMakeTranslation
__ QuartzCore: _CATransform3DScale
__ QuartzCore: _CATransform3DTranslate
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFilterColorBurnBlendMode
__ QuartzCore: _kCAFilterColorDodgeBlendMode
__ QuartzCore: _kCAFilterDarkenBlendMode
__ QuartzCore: _kCAFilterDifferenceBlendMode
__ QuartzCore: _kCAFilterExclusionBlendMode
__ QuartzCore: _kCAFilterHardLightBlendMode
__ QuartzCore: _kCAFilterHueBlendMode
__ QuartzCore: _kCAFilterLightenBlendMode
__ QuartzCore: _kCAFilterLuminosityBlendMode
__ QuartzCore: _kCAFilterMultiplyBlendMode
__ QuartzCore: _kCAFilterOverlayBlendMode
__ QuartzCore: _kCAFilterSaturationBlendMode
__ QuartzCore: _kCAFilterScreenBlendMode
__ QuartzCore: _kCAFilterSoftLightBlendMode
__ QuartzCore: _kCAGradientLayerAxial
__ QuartzCore: _kCAGradientLayerRadial
__ QuartzCore: _kCAGravityResize
__ QuartzCore: _kCAGravityResizeAspect
__ QuartzCore: _kCALineCapButt
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCALineCapSquare
__ QuartzCore: _kCALineJoinBevel
__ QuartzCore: _kCALineJoinMiter
__ QuartzCore: _kCALineJoinRound
__ UIKit: _OBJC_CLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIAccessibilityElement
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIAccessibilityLayoutChangedNotification
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIFontDescriptorSystemDesignMonospaced
__ UIKit: _UIFontDescriptorSystemDesignRounded
__ UIKit: _UIFontDescriptorSystemDesignSerif
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCallout
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleCaption2
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleLargeTitle
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle2
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIFontWeightBlack
__ UIKit: _UIFontWeightBold
__ UIKit: _UIFontWeightHeavy
__ UIKit: _UIFontWeightLight
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightSemibold
__ UIKit: _UIFontWeightThin
__ UIKit: _UIFontWeightUltraLight
__ UIKit: _UIGraphicsGetCurrentContext
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___sincos_stret
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _acos
__ libSystem.B.dylib: _asin
__ libSystem.B.dylib: _atan2
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sin
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CCVegaRuleMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaRuleMarkDef newPathForMark:]
  -[CCVegaRuleMarkDef accessibilityFrameForMark:layer:]


CCVegaLogger : NSObject
  // class methods
  +[CCVegaLogger _instance]


CCVegaGroupMarkDef : CCVegaMarkDef
  // instance methods
  -[CCVegaGroupMarkDef accessibilityFrameForMark:layer:]
  -[CCVegaGroupMarkDef newGroupPath:]
  -[CCVegaGroupMarkDef updateLayer:withMark:]
  -[CCVegaGroupMarkDef enterMark:]
  -[CCVegaGroupMarkDef updateMark:]


CCVegaMarkItem : NSObject <CCVegaMarkItemInterface>
 @property  JSValue *mark
 @property  double cornerRadius
 @property  NSString *shape
 @property  NSString *orient
 @property  double size
 @property  NSString *baseline
 @property  double radius
 @property  double theta
 @property  NSString *fontStyle
 @property  double fontSize
 @property  NSString *fontWeight
 @property  NSString *font
 @property  NSString *align
 @property  double x
 @property  double x2
 @property  double dx
 @property  double width
 @property  double y
 @property  double y2
 @property  double dy
 @property  double angle
 @property  double height
 @property  double opacity
 @property  NSObject<CCVegaColorOrGradientInterface> *fill
 @property  double fillOpacity
 @property  NSObject<CCVegaColorOrGradientInterface> *stroke
 @property  double strokeOpacity
 @property  double strokeWidth
 @property  NSString *strokeCap
 @property  NSArray *strokeDash
 @property  NSString *strokeJoin
 @property  NSString *interpolate
 @property  double strokeMiterLimit
 @property  NSString *path
 @property  double zindex
 @property  BOOL clip
 @property  unsigned long itemCount
 @property  CALayer *caLayer
 @property  BOOL isDirty

  // instance methods
  -[CCVegaMarkItem fontStyle]
  -[CCVegaMarkItem isDirty]
  -[CCVegaMarkItem radius]
  -[CCVegaMarkItem x]
  -[CCVegaMarkItem mark]
  -[CCVegaMarkItem baseline]
  -[CCVegaMarkItem y]
  -[CCVegaMarkItem itemAtIndex:]
  -[CCVegaMarkItem path]
  -[CCVegaMarkItem width]
  -[CCVegaMarkItem opacity]
  -[CCVegaMarkItem height]
  -[CCVegaMarkItem shape]
  -[CCVegaMarkItem strokeWidth]
  -[CCVegaMarkItem itemCount]
  -[CCVegaMarkItem .cxx_destruct]
  -[CCVegaMarkItem size]
  -[CCVegaMarkItem angle]
  -[CCVegaMarkItem setIsDirty:]
  -[CCVegaMarkItem fontSize]
  -[CCVegaMarkItem cornerRadius]
  -[CCVegaMarkItem font]
  -[CCVegaMarkItem bounds]
  -[CCVegaMarkItem fontWeight]
  -[CCVegaMarkItem isEqual:]
  -[CCVegaMarkItem setMark:]
  -[CCVegaMarkItem fill]
  -[CCVegaMarkItem stroke]
  -[CCVegaMarkItem clip]
  -[CCVegaMarkItem fillOpacity]
  -[CCVegaMarkItem theta]
  -[CCVegaMarkItem initWithJSValue:]
  -[CCVegaMarkItem caLayer]
  -[CCVegaMarkItem setCaLayer:]
  -[CCVegaMarkItem align]
  -[CCVegaMarkItem orient]
  -[CCVegaMarkItem newPathByCallingShapeFunction]
  -[CCVegaMarkItem getDouble:defaultValue:]
  -[CCVegaMarkItem getString:defaultValue:]
  -[CCVegaMarkItem getObject:defaultValue:]
  -[CCVegaMarkItem getBoolean:defaultValue:]
  -[CCVegaMarkItem defined]
  -[CCVegaMarkItem getText]
  -[CCVegaMarkItem x2]
  -[CCVegaMarkItem dx]
  -[CCVegaMarkItem y2]
  -[CCVegaMarkItem dy]
  -[CCVegaMarkItem strokeOpacity]
  -[CCVegaMarkItem strokeCap]
  -[CCVegaMarkItem strokeDash]
  -[CCVegaMarkItem strokeJoin]
  -[CCVegaMarkItem interpolate]
  -[CCVegaMarkItem strokeMiterLimit]
  -[CCVegaMarkItem zindex]


CCWeakLayerReference : NSObject
 @property  CALayer *layer

  // instance methods
  -[CCWeakLayerReference setLayer:]
  -[CCWeakLayerReference layer]
  -[CCWeakLayerReference initWithLayer:]
  -[CCWeakLayerReference .cxx_destruct]


CCVegaTransaction : NSObject
  // class methods
  +[CCVegaTransaction singleton]

  // instance methods
  -[CCVegaTransaction commit]
  -[CCVegaTransaction begin]
  -[CCVegaTransaction .cxx_destruct]
  -[CCVegaTransaction init]
  -[CCVegaTransaction scheduleDisplay:]
  -[CCVegaTransaction _commitTransactionForRenderers:]


CCVegaTransactionCommitter : NSObject
  // instance methods
  -[CCVegaTransactionCommitter commit]
  -[CCVegaTransactionCommitter .cxx_destruct]
  -[CCVegaTransactionCommitter initWithRenderers:]
  -[CCVegaTransactionCommitter newMainThreadOperation]
  -[CCVegaTransactionCommitter setNeedsCATransaction]


CCVegaTransactionMainThreadOperation : NSObject
  // instance methods
  -[CCVegaTransactionMainThreadOperation .cxx_destruct]
  -[CCVegaTransactionMainThreadOperation runBlock]
  -[CCVegaTransactionMainThreadOperation cancel]
  -[CCVegaTransactionMainThreadOperation init]
  -[CCVegaTransactionMainThreadOperation provideBlock:]
  -[CCVegaTransactionMainThreadOperation waitForBlockReady]


CCVegaSignalListener : NSObject
 @property  JSValue *callback

  // instance methods
  -[CCVegaSignalListener callback]
  -[CCVegaSignalListener setCallback:]
  -[CCVegaSignalListener .cxx_destruct]
  -[CCVegaSignalListener initWithCallback:]


CCVegaJSFont : NSObject
  // class methods
  +[CCVegaJSFont parseCSSFontFamilyList:]
  +[CCVegaJSFont numericWeightFromFontWeight:]
  +[CCVegaJSFont nativeTextStyleFromTextStyle:]
  +[CCVegaJSFont cssFontWeightFromNumericWeight:]
  +[CCVegaJSFont fontMetricsForTextStyle:options:]
  +[CCVegaJSFont stringWithTextStyleOptions:]
  +[CCVegaJSFont defaultLineHeightForNativeFont:]
  +[CCVegaJSFont fontMetricsForFont:fontNameOverride:lineHeightOverride:]

  // instance methods
  -[CCVegaJSFont dealloc]
  -[CCVegaJSFont CTFont]
  -[CCVegaJSFont fontMetrics]
  -[CCVegaJSFont initWithFontFamily:fontSize:fontWeight:fontStyle:fontVariant:options:]
  -[CCVegaJSFont measureText:]
  -[CCVegaJSFont extendedMeasureText:]
  -[CCVegaJSFont drawText:x:y:align:color:drawingMode:inContext:]
  -[CCVegaJSFont initWithCSSFontString:options:]
  -[CCVegaJSFont defaultLineHeight]


CCVegaCGFontProperties : NSObject
 @property  NSString *fontFamily
 @property  NSString *fontSize
 @property  NSString *fontStyle
 @property  NSString *fontWeight
 @property  NSString *fontVariant
 @property  NSString *lineHeight

  // instance methods
  -[CCVegaCGFontProperties fontStyle]
  -[CCVegaCGFontProperties setFontSize:]
  -[CCVegaCGFontProperties .cxx_destruct]
  -[CCVegaCGFontProperties setFontWeight:]
  -[CCVegaCGFontProperties fontSize]
  -[CCVegaCGFontProperties fontWeight]
  -[CCVegaCGFontProperties setFontStyle:]
  -[CCVegaCGFontProperties lineHeight]
  -[CCVegaCGFontProperties setLineHeight:]
  -[CCVegaCGFontProperties fontFamily]
  -[CCVegaCGFontProperties setFontFamily:]
  -[CCVegaCGFontProperties fontVariant]
  -[CCVegaCGFontProperties setFontVariant:]
  -[CCVegaCGFontProperties initWithCSSFontString:]


CCVegaJSFontCache : NSObject
  // class methods
  +[CCVegaJSFontCache sharedCache]
  +[CCVegaJSFontCache cleanUp]
  +[CCVegaJSFontCache fontMetricsForTextStyle:options:]
  +[CCVegaJSFontCache fontWithCSSFontString:options:]
  +[CCVegaJSFontCache fontWithFontFamily:fontSize:fontWeight:fontStyle:fontVariant:options:]
  +[CCVegaJSFontCache cacheFont:forInternalName:]
  +[CCVegaJSFontCache cacheedFontForInternalName:]

  // instance methods
  -[CCVegaJSFontCache .cxx_destruct]
  -[CCVegaJSFontCache init]


CCChartDataRowBinding : NSDictionary
 @property  unsigned long count

  // instance methods
  -[CCChartDataRowBinding keyEnumerator]
  -[CCChartDataRowBinding .cxx_destruct]
  -[CCChartDataRowBinding count]
  -[CCChartDataRowBinding objectForKey:]
  -[CCChartDataRowBinding chartViewDataRowID]
  -[CCChartDataRowBinding initWithChartDataRow:]


CCVegaJSConsole : NSObject
  // class methods
  +[CCVegaJSConsole arguments]
  +[CCVegaJSConsole attachToJavaScriptContext:]


CCVegaScenegraphUtils : NSObject
  // class methods
  +[CCVegaScenegraphUtils createOrUpdateLayer:path:withMark:delegate:]
  +[CCVegaScenegraphUtils updateShapeLayer:withMark:delegate:]
  +[CCVegaScenegraphUtils updateShapeLayerFill:withMark:delegate:]
  +[CCVegaScenegraphUtils updateShapeLayerStroke:withMark:delegate:]
  +[CCVegaScenegraphUtils newPathForRectangleMark:offset:]
  +[CCVegaScenegraphUtils createOrUpdateGradientLayer:existingLayer:delegate:]
  +[CCVegaScenegraphUtils createOrUpdateLayer:path:gradient:mode:lineWidth:delegate:]
  +[CCVegaScenegraphUtils applyGradient:toLayer:delegate:]


CCVegaRectMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaRectMarkDef newPathForMark:]
  -[CCVegaRectMarkDef accessibilityFrameForMark:layer:]


CCVegaTextMarkDef : CCVegaMarkDef
  // class methods
  +[CCVegaTextMarkDef anchorPoint:]

  // instance methods
  -[CCVegaTextMarkDef accessibilityFrameForMark:layer:]
  -[CCVegaTextMarkDef enterMark:]
  -[CCVegaTextMarkDef updateMark:]
  -[CCVegaTextMarkDef updateTextLayer:withMark:]


CCVegaExpressionFunctions : NSObject
 @property  NSLocale *locale
 @property  NSCalendar *calendar
 @property  NSDictionary *fontOptions

  // class methods
  +[CCVegaExpressionFunctions functionNames]

  // instance methods
  -[CCVegaExpressionFunctions calendar]
  -[CCVegaExpressionFunctions .cxx_destruct]
  -[CCVegaExpressionFunctions locale]
  -[CCVegaExpressionFunctions setCalendar:]
  -[CCVegaExpressionFunctions setLocale:]
  -[CCVegaExpressionFunctions init]
  -[CCVegaExpressionFunctions fontOptions]
  -[CCVegaExpressionFunctions setFontOptions:]
  -[CCVegaExpressionFunctions registerFunctionsToClient:]
  -[CCVegaExpressionFunctions keyForKind:options:]
  -[CCVegaExpressionFunctions makeReturnValue:]
  -[CCVegaExpressionFunctions numberFormatterFromOptions:]
  -[CCVegaExpressionFunctions nativeNumberFormat]
  -[CCVegaExpressionFunctions calendarUnitFromString:]
  -[CCVegaExpressionFunctions dateComponentsFormatterFromOptions:]
  -[CCVegaExpressionFunctions nativeDateComponentsFormat]
  -[CCVegaExpressionFunctions dateFormatterStyleFromString:]
  -[CCVegaExpressionFunctions dateFormatterFromOptions:]
  -[CCVegaExpressionFunctions nativeDateFormat]
  -[CCVegaExpressionFunctions fontFromJSFontDesc:options:]
  -[CCVegaExpressionFunctions nativeFontMetrics]
  -[CCVegaExpressionFunctions nativeTextMetrics]


CCTextLayerLineData : NSObject
 @property  id line
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  double baselineOffset
 @property  double xOffset

  // instance methods
  -[CCTextLayerLineData setBaselineOffset:]
  -[CCTextLayerLineData .cxx_destruct]
  -[CCTextLayerLineData setBounds:]
  -[CCTextLayerLineData bounds]
  -[CCTextLayerLineData baselineOffset]
  -[CCTextLayerLineData line]
  -[CCTextLayerLineData setLine:]
  -[CCTextLayerLineData xOffset]
  -[CCTextLayerLineData setXOffset:]


CCTextLayer : CALayer
 @property  id font
 @property  id fillColor
 @property  id strokeColor
 @property  double strokeWidth
 @property  NSArray *lines
 @property  double lineHeight
 @property  {CGAffineTransform=dddddd} combinedCTMHint
 @property  int align
 @property  int baseline
 @property  {CGPoint=dd} textPosition
 @property  double textAngle

  // class methods
  +[CCTextLayer layer]

  // instance methods
  -[CCTextLayer drawInContext:]
  -[CCTextLayer renderInContext:]
  -[CCTextLayer baseline]
  -[CCTextLayer setFillColor:]
  -[CCTextLayer fillColor]
  -[CCTextLayer strokeWidth]
  -[CCTextLayer setStrokeColor:]
  -[CCTextLayer .cxx_destruct]
  -[CCTextLayer lines]
  -[CCTextLayer setStrokeWidth:]
  -[CCTextLayer font]
  -[CCTextLayer strokeColor]
  -[CCTextLayer setFont:]
  -[CCTextLayer textPosition]
  -[CCTextLayer init]
  -[CCTextLayer lineHeight]
  -[CCTextLayer setLineHeight:]
  -[CCTextLayer setBaseline:]
  -[CCTextLayer setLines:]
  -[CCTextLayer align]
  -[CCTextLayer setAlign:]
  -[CCTextLayer updateTextContents]
  -[CCTextLayer setTextPosition:]
  -[CCTextLayer textAngle]
  -[CCTextLayer setTextAngle:]
  -[CCTextLayer combinedCTMHint]
  -[CCTextLayer setCombinedCTMHint:]


CCVegaMarkDef : NSObject <CCVegaMarkDefInterface>
 @property  CCVegaCARenderer *delegate

  // instance methods
  -[CCVegaMarkDef setDelegate:]
  -[CCVegaMarkDef delegate]
  -[CCVegaMarkDef .cxx_destruct]
  -[CCVegaMarkDef initWithDelegate:]
  -[CCVegaMarkDef accessibilityFrameForMark:layer:]
  -[CCVegaMarkDef enterMark:]
  -[CCVegaMarkDef updateMark:]
  -[CCVegaMarkDef isMultiItemMark]
  -[CCVegaMarkDef enterMultiMark:]
  -[CCVegaMarkDef updateMultiMark:]


CCVegaSingleItemShapeMarkDef : CCVegaMarkDef
  // instance methods
  -[CCVegaSingleItemShapeMarkDef newPathForMark:]
  -[CCVegaSingleItemShapeMarkDef accessibilityFrameForMark:layer:]
  -[CCVegaSingleItemShapeMarkDef enterMark:]
  -[CCVegaSingleItemShapeMarkDef updateMark:]
  -[CCVegaSingleItemShapeMarkDef transformForMark:]
  -[CCVegaSingleItemShapeMarkDef drawMark:withLayer:]


CCVegaMultiItemShapeMarkDef : CCVegaMarkDef
  // instance methods
  -[CCVegaMultiItemShapeMarkDef newPathForMark:]
  -[CCVegaMultiItemShapeMarkDef isMultiItemMark]
  -[CCVegaMultiItemShapeMarkDef enterMultiMark:]
  -[CCVegaMultiItemShapeMarkDef updateMultiMark:]
  -[CCVegaMultiItemShapeMarkDef transformForMark:]
  -[CCVegaMultiItemShapeMarkDef drawMark:withLayer:]


CCVegaSymbolMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaSymbolMarkDef newPathForMark:]
  -[CCVegaSymbolMarkDef accessibilityFrameForMark:layer:]
  -[CCVegaSymbolMarkDef transformForMark:]


CCVegaSVGRenderer : NSObject
 @property  CCVegaCGContext *cgCanvas

  // class methods
  +[CCVegaSVGRenderer getInstance]

  // instance methods
  -[CCVegaSVGRenderer .cxx_destruct]
  -[CCVegaSVGRenderer newPathFromParsedPath:size:rendererContext:]
  -[CCVegaSVGRenderer parseString:rendererContext:]
  -[CCVegaSVGRenderer newPathFromJSFunction:item:]
  -[CCVegaSVGRenderer cgCanvas]
  -[CCVegaSVGRenderer setCgCanvas:]


CCVegaCSSStyleDeclaration : NSObject <CCVegaCSSStyleDeclarationInterface>
 @property  NSString *cursor

  // instance methods
  -[CCVegaCSSStyleDeclaration cursor]
  -[CCVegaCSSStyleDeclaration .cxx_destruct]
  -[CCVegaCSSStyleDeclaration setCursor:]
  -[CCVegaCSSStyleDeclaration init]


CCVegaHTMLElement : NSObject <CCVegaHTMLElementInterface>
 @property  CCVegaCSSStyleDeclaration *style
 @property  NSMutableArray *childNodes
 @property  NSString *tagName
 @property  NSMutableDictionary *events
 @property  NSObject<CCVegaHTMLElementInterface> *parentNode
 @property  double clientWidth
 @property  double clientHeight

  // instance methods
  -[CCVegaHTMLElement events]
  -[CCVegaHTMLElement style]
  -[CCVegaHTMLElement .cxx_destruct]
  -[CCVegaHTMLElement setEvents:]
  -[CCVegaHTMLElement setStyle:]
  -[CCVegaHTMLElement init]
  -[CCVegaHTMLElement childNodes]
  -[CCVegaHTMLElement parentNode]
  -[CCVegaHTMLElement tagName]
  -[CCVegaHTMLElement clientHeight]
  -[CCVegaHTMLElement clientWidth]
  -[CCVegaHTMLElement setParentNode:]
  -[CCVegaHTMLElement setTagName:]
  -[CCVegaHTMLElement setChildNodes:]
  -[CCVegaHTMLElement initWithTagName:]
  -[CCVegaHTMLElement getBoundingClientRect]
  -[CCVegaHTMLElement recursiveSetSize:]
  -[CCVegaHTMLElement removeWithChild:]
  -[CCVegaHTMLElement appendWithChild:]
  -[CCVegaHTMLElement prependWithChild:]
  -[CCVegaHTMLElement setAttributeWithName:value:]
  -[CCVegaHTMLElement addEventListenerWithType:listener:]
  -[CCVegaHTMLElement removeEventListenerWithType:listener:]
  -[CCVegaHTMLElement setClientWidth:]
  -[CCVegaHTMLElement setClientHeight:]


CCVegaLogProxyHandler : NSObject <CCVegaLogProxyHandling>
  // instance methods
  -[CCVegaLogProxyHandler getPropertyOnObject:named:]
  -[CCVegaLogProxyHandler setPropertyOnObject:named:toValue:]


CCVegaCurves : NSObject
  // class methods
  +[CCVegaCurves newPathForLineWithPoints:count:interpolate:orient:tension:]
  +[CCVegaCurves newPathForAreaWithPoints:count:interpolate:orient:tension:]


CCVegaWorker : NSObject
 @property  JSVirtualMachine *virtualMachine
 @property  JSContext *context
 @property  CCVegaJSDocument *document
 @property  CCVegaWorkerClient *currentClient
 @property  @? onDealloc
 @property  unsigned long dispatchQueueID

  // class methods
  +[CCVegaWorker cleanUp]
  +[CCVegaWorker sharedWorker]
  +[CCVegaWorker cleanUpWithCallback:]

  // instance methods
  -[CCVegaWorker document]
  -[CCVegaWorker virtualMachine]
  -[CCVegaWorker currentClient]
  -[CCVegaWorker dealloc]
  -[CCVegaWorker .cxx_destruct]
  -[CCVegaWorker dispatchQueue]
  -[CCVegaWorker setupConsole]
  -[CCVegaWorker setContext:]
  -[CCVegaWorker initWithQueue:]
  -[CCVegaWorker context]
  -[CCVegaWorker setDocument:]
  -[CCVegaWorker init]
  -[CCVegaWorker setupContext]
  -[CCVegaWorker requireVegaLite]
  -[CCVegaWorker requireVegaParser]
  -[CCVegaWorker registerProxyExpressionFunction:]
  -[CCVegaWorker nextTimerIndex]
  -[CCVegaWorker setupTimerFunctions]
  -[CCVegaWorker registerExpressionFunction:withName:]
  -[CCVegaWorker waitForWorker]
  -[CCVegaWorker setVirtualMachine:]
  -[CCVegaWorker setCurrentClient:]
  -[CCVegaWorker dispatchQueueID]
  -[CCVegaWorker onDealloc]
  -[CCVegaWorker setOnDealloc:]


CCVegaWorkerClient : NSObject
 @property  CCVegaWorker *worker
 @property  NSObject<CCVegaWorkerClientDelegate> *delegate
 @property  BOOL isValid

  // instance methods
  -[CCVegaWorkerClient setIsValid:]
  -[CCVegaWorkerClient setDelegate:]
  -[CCVegaWorkerClient delegate]
  -[CCVegaWorkerClient isValid]
  -[CCVegaWorkerClient .cxx_destruct]
  -[CCVegaWorkerClient worker]
  -[CCVegaWorkerClient setWorker:]
  -[CCVegaWorkerClient registerExpressionFunction:withName:]
  -[CCVegaWorkerClient waitForWorker]
  -[CCVegaWorkerClient initWithWorker:delegate:]
  -[CCVegaWorkerClient clientEnter]
  -[CCVegaWorkerClient clientExit]
  -[CCVegaWorkerClient clientDidExecuteTimerCallback]
  -[CCVegaWorkerClient runBlockAsync:]
  -[CCVegaWorkerClient runBlockSync:]
  -[CCVegaWorkerClient evaluateExpressionFunction:]


CCVegaPathMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaPathMarkDef dealloc]
  -[CCVegaPathMarkDef .cxx_destruct]
  -[CCVegaPathMarkDef newPathForMark:]
  -[CCVegaPathMarkDef transformForMark:]


CCTransaction : NSObject
  // class methods
  +[CCTransaction commit]
  +[CCTransaction begin]


CCVegaAreaMarkDef : CCVegaMultiItemShapeMarkDef
  // instance methods
  -[CCVegaAreaMarkDef newPathForMark:]


CCVegaMark : NSObject <CCVegaMarkInterface>
 @property  JSValue *mark
 @property  unsigned long itemCount
 @property  BOOL clip
 @property  BOOL interactive
 @property  NSString *marktype
 @property  NSString *name
 @property  NSString *role
 @property  double zindex
 @property  CALayer *caLayer
 @property  BOOL isDirty

  // instance methods
  -[CCVegaMark isDirty]
  -[CCVegaMark mark]
  -[CCVegaMark interactive]
  -[CCVegaMark itemAtIndex:]
  -[CCVegaMark role]
  -[CCVegaMark itemCount]
  -[CCVegaMark .cxx_destruct]
  -[CCVegaMark setIsDirty:]
  -[CCVegaMark name]
  -[CCVegaMark isEqual:]
  -[CCVegaMark setMark:]
  -[CCVegaMark clip]
  -[CCVegaMark initWithJSValue:]
  -[CCVegaMark caLayer]
  -[CCVegaMark setCaLayer:]
  -[CCVegaMark getString:defaultValue:]
  -[CCVegaMark zindex]
  -[CCVegaMark marktype]


CCVegaAccessibilityHelper : NSObject
 @property  id container

  // instance methods
  -[CCVegaAccessibilityHelper restoreState]
  -[CCVegaAccessibilityHelper saveState]
  -[CCVegaAccessibilityHelper setContainer:]
  -[CCVegaAccessibilityHelper .cxx_construct]
  -[CCVegaAccessibilityHelper .cxx_destruct]
  -[CCVegaAccessibilityHelper container]
  -[CCVegaAccessibilityHelper initWithElements:]
  -[CCVegaAccessibilityHelper newAccessibilityElementWithFrame:]
  -[CCVegaAccessibilityHelper translateX:Y:]
  -[CCVegaAccessibilityHelper markAriaHidden]
  -[CCVegaAccessibilityHelper enterGroupWithLabel:roleDescription:frame:]
  -[CCVegaAccessibilityHelper exitGroup]
  -[CCVegaAccessibilityHelper addElementWithLabel:roleDescription:frame:]
  -[CCVegaAccessibilityHelper getElements]


CCAccessibilityElement : UIAccessibilityElement
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  NSString *label
 @property  NSString *roleDescription

  // instance methods
  -[CCAccessibilityElement accessibilityLabel]
  -[CCAccessibilityElement frame]
  -[CCAccessibilityElement setFrame:]
  -[CCAccessibilityElement setLabel:]
  -[CCAccessibilityElement .cxx_destruct]
  -[CCAccessibilityElement label]
  -[CCAccessibilityElement isAccessibilityElement]
  -[CCAccessibilityElement roleDescription]
  -[CCAccessibilityElement setRoleDescription:]


CCVegaAccessibilityGroupStackElement : NSObject
 @property  CCAccessibilityElement *groupElement
 @property  NSMutableArray *previousChildren

  // instance methods
  -[CCVegaAccessibilityGroupStackElement .cxx_destruct]
  -[CCVegaAccessibilityGroupStackElement groupElement]
  -[CCVegaAccessibilityGroupStackElement setGroupElement:]
  -[CCVegaAccessibilityGroupStackElement previousChildren]
  -[CCVegaAccessibilityGroupStackElement setPreviousChildren:]


CCVegaLogProxy : NSObject
  // class methods
  +[CCVegaLogProxy wrap:]
  +[CCVegaLogProxy wrapObject:]
  +[CCVegaLogProxy wrap:withHandler:]
  +[CCVegaLogProxy tryUnwrap:]
  +[CCVegaLogProxy unwrap:]


CCVegaArcMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaArcMarkDef newPathForMark:]


CCVegaImageMarkDef : CCVegaMarkDef
  // instance methods
  -[CCVegaImageMarkDef enterMark:]
  -[CCVegaImageMarkDef updateMark:]
  -[CCVegaImageMarkDef drawMark:withLayer:]


CCChartView : UIView
 @property  NSString *config
 @property  NSDictionary *configDictionary
 @property  NSString *spec
 @property  NSDictionary *specDictionary
 @property  BOOL CATransactionFromBackgroundThread
 @property  NSString *rendererType
 @property  NSString *baseConfig
 @property  NSArray *data
 @property  NSLocale *locale
 @property  NSCalendar *calendar
 @property  double zoomFactor
 @property  ^{CGImage=} CGImage
 @property  double contentScaleFactor
 @property  unsigned long translatesChartSizeIntoConstraints
 @property  NSObject<CCChartViewDelegate> *delegate
 @property  NSArray *accessibilityDataSeriesElements
 @property  UIAccessibilityElement *accessibilityDataSeriesElement

  // class methods
  +[CCChartView cleanUp]
  +[CCChartView registerExpressionFunction:withName:]
  +[CCChartView JSONStringFromDictionary:]
  +[CCChartView dictionaryFromJSONString:]
  +[CCChartView getBenchmarkRecords]
  +[CCChartView unwrapJSValue:]
  +[CCChartView preloadFrameworkAssets]
  +[CCChartView configForBaseConfigType:]
  +[CCChartView compileSpec:config:baseConfig:expressionFunctionNames:error:]
  +[CCChartView compileSpecDictionary:configDictionary:baseConfig:expressionFunctionNames:error:]

  // instance methods
  -[CCChartView setConfig:]
  -[CCChartView setAccessibilityElements:]
  -[CCChartView configDictionary]
  -[CCChartView accessibilityElements]
  -[CCChartView contentScaleFactor]
  -[CCChartView setDelegate:]
  -[CCChartView zoomFactor]
  -[CCChartView gestureRecognizerShouldBegin:]
  -[CCChartView setFrame:]
  -[CCChartView setZoomFactor:]
  -[CCChartView config]
  -[CCChartView delegate]
  -[CCChartView calendar]
  -[CCChartView dealloc]
  -[CCChartView setContentScaleFactor:]
  -[CCChartView .cxx_destruct]
  -[CCChartView spec]
  -[CCChartView renderer]
  -[CCChartView setRenderer:]
  -[CCChartView initWithSpec:]
  -[CCChartView initialize]
  -[CCChartView locale]
  -[CCChartView setCalendar:]
  -[CCChartView drawRect:]
  -[CCChartView touchesMoved:withEvent:]
  -[CCChartView accessibilityContainerType]
  -[CCChartView setData:]
  -[CCChartView touchesBegan:withEvent:]
  -[CCChartView setLocale:]
  -[CCChartView touchesEnded:withEvent:]
  -[CCChartView CGImage]
  -[CCChartView initWithFrame:]
  -[CCChartView imageNamed:]
  -[CCChartView traitCollectionDidChange:]
  -[CCChartView setSpec:]
  -[CCChartView setConfigDictionary:]
  -[CCChartView touchesCancelled:withEvent:]
  -[CCChartView data]
  -[CCChartView initWithCoder:]
  -[CCChartView render]
  -[CCChartView colorNamed:]
  -[CCChartView rendererType]
  -[CCChartView registerExpressionFunction:withName:]
  -[CCChartView refreshLocaleAndCalendar]
  -[CCChartView mouseHoverGestureRecognized:]
  -[CCChartView loadChartDataFromURL:error:]
  -[CCChartView localizedStringNamed:]
  -[CCChartView initWithSpec:config:]
  -[CCChartView initWithSpec:config:options:]
  -[CCChartView setupWithSpec:options:]
  -[CCChartView setupWithSpec:]
  -[CCChartView setupWithSpecDictionary:]
  -[CCChartView setupWithSpecDictionary:options:]
  -[CCChartView CATransactionFromBackgroundThread]
  -[CCChartView setCATransactionFromBackgroundThread:]
  -[CCChartView baseConfig]
  -[CCChartView setBaseConfig:]
  -[CCChartView setRendererType:]
  -[CCChartView lazilyInitializeRenderer]
  -[CCChartView reinitializeRenderer]
  -[CCChartView rendererDidUpdate]
  -[CCChartView dynamicColorNamed:]
  -[CCChartView eventToMouseEvent:]
  -[CCChartView triggerMouseEvent:type:]
  -[CCChartView triggerMouseEvent:type:setConsumed:]
  -[CCChartView specDictionary]
  -[CCChartView setSpecDictionary:]
  -[CCChartView setSpec:config:]
  -[CCChartView setSpec:config:baseConfig:]
  -[CCChartView setSpec:config:baseConfig:rendererType:]
  -[CCChartView setSpecDictionary:configDictionary:]
  -[CCChartView setSpecDictionary:configDictionary:baseConfig:]
  -[CCChartView setSpecDictionary:configDictionary:baseConfig:rendererType:]
  -[CCChartView setDefaultDataset:]
  -[CCChartView setNamedDataset:rows:]
  -[CCChartView changeDefaultDatasetByInserting:removingIDs:]
  -[CCChartView changeNamedDataset:inserting:removingIDs:]
  -[CCChartView translatesChartSizeIntoConstraints]
  -[CCChartView setTranslatesChartSizeIntoConstraints:]
  -[CCChartView changeConstraints]
  -[CCChartView renderToImageWithType:]
  -[CCChartView registerLocalExpressionFunction:withName:]
  -[CCChartView getSignalWithName:]
  -[CCChartView setSignalWithName:toValue:]
  -[CCChartView addListener:toSignalWithName:]
  -[CCChartView removeListener:fromSignalWithName:]
  -[CCChartView setAccessibilityDataSeriesElements:]
  -[CCChartView accessibilityDataSeriesElements]
  -[CCChartView accessibilityDataSeriesElement]
  -[CCChartView setAccessibilityDataSeriesElement:]


CCChartViewSetupOptions : NSObject
 @property  NSString *config
 @property  NSDictionary *configDictionary
 @property  NSString *rendererType
 @property  NSString *baseConfig
 @property  NSObject<CCChartViewDelegate> *delegate
 @property  NSDictionary *expressionFunctions

  // instance methods
  -[CCChartViewSetupOptions setConfig:]
  -[CCChartViewSetupOptions configDictionary]
  -[CCChartViewSetupOptions setDelegate:]
  -[CCChartViewSetupOptions config]
  -[CCChartViewSetupOptions delegate]
  -[CCChartViewSetupOptions .cxx_destruct]
  -[CCChartViewSetupOptions setConfigDictionary:]
  -[CCChartViewSetupOptions rendererType]
  -[CCChartViewSetupOptions baseConfig]
  -[CCChartViewSetupOptions setBaseConfig:]
  -[CCChartViewSetupOptions setRendererType:]
  -[CCChartViewSetupOptions expressionFunctions]
  -[CCChartViewSetupOptions setExpressionFunctions:]


CCAsyncQueueBlockOperation : NSObject <CCAsyncOperation>
  // instance methods
  -[CCAsyncQueueBlockOperation .cxx_destruct]
  -[CCAsyncQueueBlockOperation initWithBlock:]
  -[CCAsyncQueueBlockOperation performOperationWithCallback:]


CCAsyncQueue : NSObject
 @property  NSObject<CCAsyncQueueDelegate> *delegate

  // instance methods
  -[CCAsyncQueue setDelegate:]
  -[CCAsyncQueue delegate]
  -[CCAsyncQueue .cxx_destruct]
  -[CCAsyncQueue enqueueOperation:]
  -[CCAsyncQueue initWithWorkerClient:]
  -[CCAsyncQueue enqueueOperationWithBlock:]
  -[CCAsyncQueue startProcessOperations]
  -[CCAsyncQueue processOperations]
  -[CCAsyncQueue waitForPendingOperations]
  -[CCAsyncQueue waitForOperation:]
  -[CCAsyncQueue keepAliveUntilCurrentOperationIsComplete]


CCVegaShapeMarkDef : CCVegaSingleItemShapeMarkDef
  // instance methods
  -[CCVegaShapeMarkDef newPathForMark:]


CCVegaScripts : NSObject
  // class methods
  +[CCVegaScripts evaluateVegaLiteScriptInContext:]
  +[CCVegaScripts evaluateBootstrapScriptsInContext:]
  +[CCVegaScripts stringForScriptData:length:]
  +[CCVegaScripts loadScriptWithName:source:inVirtualMachine:]
  +[CCVegaScripts evaluateScriptWithName:source:inContext:]
  +[CCVegaScripts vegaJS]
  +[CCVegaScripts vegaliteJS]


CCTestUtils : NSObject
  // class methods
  +[CCTestUtils compareImage:withImage:]


CCVegaCARenderer : NSObject <CCVegaCARendererDelegateInterface>
 @property  JSContext *context
 @property  CALayer *rootLayer
 @property  {CGSize=dd} containerSize
 @property  NSArray *accessibilityElements
 @property  JSManagedValue *scenegraphRoot
 @property  {CGAffineTransform=dddddd} _currentCombinedCTM
 @property  NSString *backgroundColor
 @property  double pixelRatio
 @property  double zoomFactor

  // instance methods
  -[CCVegaCARenderer setContainerSize:]
  -[CCVegaCARenderer dirty]
  -[CCVegaCARenderer setAccessibilityElements:]
  -[CCVegaCARenderer accessibilityElements]
  -[CCVegaCARenderer zoomFactor]
  -[CCVegaCARenderer containerSize]
  -[CCVegaCARenderer setZoomFactor:]
  -[CCVegaCARenderer dealloc]
  -[CCVegaCARenderer rootLayer]
  -[CCVegaCARenderer .cxx_destruct]
  -[CCVegaCARenderer backgroundColor]
  -[CCVegaCARenderer setRootLayer:]
  -[CCVegaCARenderer invalidateCaches]
  -[CCVegaCARenderer setBackgroundColor:]
  -[CCVegaCARenderer setContext:]
  -[CCVegaCARenderer context]
  -[CCVegaCARenderer render:]
  -[CCVegaCARenderer pixelRatio]
  -[CCVegaCARenderer setPixelRatio:]
  -[CCVegaCARenderer marks]
  -[CCVegaCARenderer fontOptions]
  -[CCVegaCARenderer initWithRenderer:context:rootLayer:updateFromBackground:]
  -[CCVegaCARenderer dirtyAll]
  -[CCVegaCARenderer callFromJSFunction:]
  -[CCVegaCARenderer updateCALayers]
  -[CCVegaCARenderer updateCALayers:dirtyAll:]
  -[CCVegaCARenderer resizeWidth:height:originX:originY:]
  -[CCVegaCARenderer applyClip:onLayer:]
  -[CCVegaCARenderer compositingFilterForItem:]
  -[CCVegaCARenderer drawMark:parentGroup:into:dirtyAll:]
  -[CCVegaCARenderer drawMark:parentGroup:item:into:dirtyAll:]
  -[CCVegaCARenderer _currentCombinedCTM]
  -[CCVegaCARenderer newColorFromCSSString:]
  -[CCVegaCARenderer newColorFromCSSString:alpha:]
  -[CCVegaCARenderer newImageFromURL:]
  -[CCVegaCARenderer scenegraphRoot]
  -[CCVegaCARenderer setScenegraphRoot:]


CCVegaCARendererWrapper : NSObject <CCVegaCARendererJSExport>
 @property  CCVegaCARenderer *renderer
 @property  NSString *backgroundColor

  // instance methods
  -[CCVegaCARendererWrapper dirty]
  -[CCVegaCARendererWrapper .cxx_destruct]
  -[CCVegaCARendererWrapper renderer]
  -[CCVegaCARendererWrapper setRenderer:]
  -[CCVegaCARendererWrapper backgroundColor]
  -[CCVegaCARendererWrapper setBackgroundColor:]
  -[CCVegaCARendererWrapper render:]
  -[CCVegaCARendererWrapper initWithRenderer:]
  -[CCVegaCARendererWrapper dirtyAll]
  -[CCVegaCARendererWrapper resizeWidth:height:originX:originY:]


CCVegaCGLinearGradient : NSObject <CCVegaCGGradientInterface>
  // instance methods
  -[CCVegaCGLinearGradient .cxx_destruct]
  -[CCVegaCGLinearGradient initWithDictionary:context:]
  -[CCVegaCGLinearGradient addColorStopWithOffset:color:]
  -[CCVegaCGLinearGradient initWithX0:y0:x1:y1:]
  -[CCVegaCGLinearGradient fillWithContext:]


CCVegaCGImage : NSObject <CCVegaCGImageInterface>

CCVegaCGTextMetrics : NSObject <CCVegaCGTextMetricsInterface>
 @property  double width

  // instance methods
  -[CCVegaCGTextMetrics width]
  -[CCVegaCGTextMetrics setWidth:]


CCVegaCGContext : NSObject <CCVegaCGContextInterface>
 @property  CCVegaRenderer *renderer
 @property  ^{CGContext=} context
 @property  double width
 @property  double height
 @property  JSValue *fillStyle
 @property  double globalAlpha
 @property  NSString *lineCap
 @property  NSString *lineJoin
 @property  double lineWidth
 @property  double miterLimit
 @property  double pixelRatio
 @property  NSString *strokeStyle
 @property  NSString *textAlign
 @property  NSString *font
 @property  double lineDashOffset
 @property  NSString *globalCompositeOperation

  // class methods
  +[CCVegaCGContext flipYAxisWithHeight:]

  // instance methods
  -[CCVegaCGContext restore]
  -[CCVegaCGContext setLineWidth:]
  -[CCVegaCGContext lineWidth]
  -[CCVegaCGContext width]
  -[CCVegaCGContext height]
  -[CCVegaCGContext dealloc]
  -[CCVegaCGContext setWidth:]
  -[CCVegaCGContext .cxx_destruct]
  -[CCVegaCGContext renderer]
  -[CCVegaCGContext setRenderer:]
  -[CCVegaCGContext font]
  -[CCVegaCGContext setHeight:]
  -[CCVegaCGContext setFont:]
  -[CCVegaCGContext context]
  -[CCVegaCGContext save]
  -[CCVegaCGContext init]
  -[CCVegaCGContext miterLimit]
  -[CCVegaCGContext setMiterLimit:]
  -[CCVegaCGContext lineJoin]
  -[CCVegaCGContext setLineJoin:]
  -[CCVegaCGContext lineCap]
  -[CCVegaCGContext setLineCap:]
  -[CCVegaCGContext closePath]
  -[CCVegaCGContext fill]
  -[CCVegaCGContext stroke]
  -[CCVegaCGContext clip]
  -[CCVegaCGContext setTextAlign:]
  -[CCVegaCGContext textAlign]
  -[CCVegaCGContext pixelRatio]
  -[CCVegaCGContext setPixelRatio:]
  -[CCVegaCGContext globalAlpha]
  -[CCVegaCGContext setGlobalAlpha:]
  -[CCVegaCGContext setFillStyle:]
  -[CCVegaCGContext fillStyle]
  -[CCVegaCGContext strokeStyle]
  -[CCVegaCGContext setStrokeStyle:]
  -[CCVegaCGContext measureText:]
  -[CCVegaCGContext arcWithX:y:radius:startAngle:endAngle:anticlockwise:]
  -[CCVegaCGContext beginPath]
  -[CCVegaCGContext bezierCurveToCP1x:cp1y:cp2x:cp2y:x:y:]
  -[CCVegaCGContext quadraticCurveToCP1x:cp1y:x:y:]
  -[CCVegaCGContext clearRectWithX:y:w:h:]
  -[CCVegaCGContext createLinearGradientWithX0:y0:x1:y1:]
  -[CCVegaCGContext fillTextWithString:x:y:]
  -[CCVegaCGContext fillRectWithX:y:width:height:]
  -[CCVegaCGContext lineToX:y:]
  -[CCVegaCGContext moveToX:y:]
  -[CCVegaCGContext rectWithX:y:width:height:]
  -[CCVegaCGContext strokeTextWithString:x:y:]
  -[CCVegaCGContext setLineDashWithSegments:]
  -[CCVegaCGContext rotateWithAngle:]
  -[CCVegaCGContext setTransformWithA:b:c:d:e:f:]
  -[CCVegaCGContext translateWithX:y:]
  -[CCVegaCGContext isPointInPathWithX:y:]
  -[CCVegaCGContext lineDashOffset]
  -[CCVegaCGContext setLineDashOffset:]
  -[CCVegaCGContext globalCompositeOperation]
  -[CCVegaCGContext setGlobalCompositeOperation:]
  -[CCVegaCGContext invalidateBitmapContext]
  -[CCVegaCGContext resizeBitmapContext]
  -[CCVegaCGContext newColorFromString:]
  -[CCVegaCGContext textWithString:x:y:drawingMode:]


CCVegaCGCanvas : CCVegaHTMLElement <CCVegaCGCanvasInterface>
 @property  CCVegaCGContext *context
 @property  double width
 @property  double height

  // instance methods
  -[CCVegaCGCanvas width]
  -[CCVegaCGCanvas height]
  -[CCVegaCGCanvas setWidth:]
  -[CCVegaCGCanvas .cxx_destruct]
  -[CCVegaCGCanvas setContext:]
  -[CCVegaCGCanvas setHeight:]
  -[CCVegaCGCanvas context]
  -[CCVegaCGCanvas init]
  -[CCVegaCGCanvas getContext:]


CCVegaJSColor : NSObject
  // class methods
  +[CCVegaJSColor newColorFromCSSString:]
  +[CCVegaJSColor newColorFromCSSString:alpha:]
  +[CCVegaJSColor newColorFromR:G:B:A:]
  +[CCVegaJSColor newColorBlack]
  +[CCVegaJSColor newColorWhite]
  +[CCVegaJSColor newColorTransparent]


CCVegaColorOrGradient : NSObject <CCVegaColorOrGradientInterface>
 @property  NSString *color
 @property  NSDictionary *gradient
 @property  BOOL isGradient
 @property  BOOL isColor

  // instance methods
  -[CCVegaColorOrGradient gradient]
  -[CCVegaColorOrGradient setGradient:]
  -[CCVegaColorOrGradient .cxx_destruct]
  -[CCVegaColorOrGradient color]
  -[CCVegaColorOrGradient setColor:]
  -[CCVegaColorOrGradient initWithJSValue:]
  -[CCVegaColorOrGradient isColor]
  -[CCVegaColorOrGradient isGradient]


CCVegaSymbolPath : NSObject
  // class methods
  +[CCVegaSymbolPath newPathForMark:]
  +[CCVegaSymbolPath newCirclePathWithSize:]
  +[CCVegaSymbolPath newCrossPathWithSize:]
  +[CCVegaSymbolPath newDiamondPathWithSize:]
  +[CCVegaSymbolPath newSquarePathWithSize:]
  +[CCVegaSymbolPath newArrowPathWithSize:]
  +[CCVegaSymbolPath newWedgePathWithSize:]
  +[CCVegaSymbolPath newTrianglePathWithSize:]
  +[CCVegaSymbolPath newTriangleUpPathWithSize:]
  +[CCVegaSymbolPath newTriangleDownPathWithSize:]
  +[CCVegaSymbolPath newTriangleRightPathWithSize:]
  +[CCVegaSymbolPath newTriangleLeftPathWithSize:]
  +[CCVegaSymbolPath newStrokePathWithSize:]
  +[CCVegaSymbolPath newPathForBuiltin:withSize:]
  +[CCVegaSymbolPath newPathForCustomSVGShape:withSize:withContext:]


CCVegaJSDocument : NSObject <CCVegaJSDocumentInterface>
 @property  CCVegaRenderer *renderer
 @property  CCVegaHTMLElement *body

  // instance methods
  -[CCVegaJSDocument setBody:]
  -[CCVegaJSDocument .cxx_destruct]
  -[CCVegaJSDocument renderer]
  -[CCVegaJSDocument setRenderer:]
  -[CCVegaJSDocument body]
  -[CCVegaJSDocument init]
  -[CCVegaJSDocument createElementWithString:]


CCViewRendererDelegate : NSObject <CCViewRendererDelegateInterface>
 @property  CCVegaRenderer *vegaRenderer

  // instance methods
  -[CCViewRendererDelegate .cxx_destruct]
  -[CCViewRendererDelegate loadURL:options:withCallback:]
  -[CCViewRendererDelegate updateNativeView]
  -[CCViewRendererDelegate initWithVegaRenderer:]
  -[CCViewRendererDelegate vegaRenderer]
  -[CCViewRendererDelegate setVegaRenderer:]


CCVegaRenderer : NSObject <CCAsyncQueueDelegate, CCVegaWorkerClientDelegate>
 @property  NSString *spec
 @property  NSString *config
 @property  CCVegaHTMLElement *container
 @property  JSValue *renderer
 @property  CCVegaCARenderer *CARenderer
 @property  CCViewRendererDelegate *viewDelegate
 @property  CCAsyncQueue *asyncQueue
 @property  ^{CGImage=} currentCGImage
 @property  CCVegaWorker *worker
 @property  CCVegaWorkerClient *workerClient
 @property  NSArray *data
 @property  double scaleFactor
 @property  double zoomFactor
 @property  unsigned int rendererType
 @property  CALayer *caLayer
 @property  NSObject<CCVegaRendererDelegate> *delegate
 @property  BOOL specIsValid
 @property  BOOL isActive
 @property  NSLocale *locale
 @property  NSCalendar *calendar
 @property  UITraitCollection *traitCollection

  // instance methods
  -[CCVegaRenderer setTraitCollection:]
  -[CCVegaRenderer setIsActive:]
  -[CCVegaRenderer setConfig:]
  -[CCVegaRenderer setContainer:]
  -[CCVegaRenderer accessibilityElements]
  -[CCVegaRenderer setScaleFactor:]
  -[CCVegaRenderer cursor]
  -[CCVegaRenderer setDelegate:]
  -[CCVegaRenderer zoomFactor]
  -[CCVegaRenderer width]
  -[CCVegaRenderer setZoomFactor:]
  -[CCVegaRenderer height]
  -[CCVegaRenderer config]
  -[CCVegaRenderer delegate]
  -[CCVegaRenderer calendar]
  -[CCVegaRenderer scaleFactor]
  -[CCVegaRenderer dealloc]
  -[CCVegaRenderer isActive]
  -[CCVegaRenderer traitCollection]
  -[CCVegaRenderer .cxx_destruct]
  -[CCVegaRenderer spec]
  -[CCVegaRenderer renderer]
  -[CCVegaRenderer setRenderer:]
  -[CCVegaRenderer container]
  -[CCVegaRenderer locale]
  -[CCVegaRenderer setCalendar:]
  -[CCVegaRenderer setData:]
  -[CCVegaRenderer setLocale:]
  -[CCVegaRenderer setSize:]
  -[CCVegaRenderer loadState:]
  -[CCVegaRenderer setViewDelegate:]
  -[CCVegaRenderer setSpec:]
  -[CCVegaRenderer data]
  -[CCVegaRenderer viewDelegate]
  -[CCVegaRenderer worker]
  -[CCVegaRenderer setWorker:]
  -[CCVegaRenderer rendererType]
  -[CCVegaRenderer asyncQueue]
  -[CCVegaRenderer caLayer]
  -[CCVegaRenderer setCaLayer:]
  -[CCVegaRenderer fontOptions]
  -[CCVegaRenderer setRendererType:]
  -[CCVegaRenderer setDefaultDataset:]
  -[CCVegaRenderer setNamedDataset:rows:]
  -[CCVegaRenderer changeDefaultDatasetByInserting:removingIDs:]
  -[CCVegaRenderer changeNamedDataset:inserting:removingIDs:]
  -[CCVegaRenderer getSignalWithName:]
  -[CCVegaRenderer setSignalWithName:toValue:]
  -[CCVegaRenderer addListener:toSignalWithName:]
  -[CCVegaRenderer removeListener:fromSignalWithName:]
  -[CCVegaRenderer simplifyQueue:]
  -[CCVegaRenderer newColorFromCSSString:]
  -[CCVegaRenderer newColorFromCSSString:alpha:]
  -[CCVegaRenderer newImageFromURL:]
  -[CCVegaRenderer updateNativeView]
  -[CCVegaRenderer workerContextEnter]
  -[CCVegaRenderer workerContextExit]
  -[CCVegaRenderer workerDidExecuteTimerCallback]
  -[CCVegaRenderer initWithSpec:config:options:workerClient:]
  -[CCVegaRenderer scheduleDisplay]
  -[CCVegaRenderer enqueueRunAsync]
  -[CCVegaRenderer displayWithCommitter:]
  -[CCVegaRenderer _doUpdateInMainThread]
  -[CCVegaRenderer updateInMainThreadIfNeeded]
  -[CCVegaRenderer specIsValid]
  -[CCVegaRenderer setupSignalHandlers]
  -[CCVegaRenderer setupScreenSignal]
  -[CCVegaRenderer refreshNativeSignals]
  -[CCVegaRenderer refreshNativeSignalsRerunDataflow:]
  -[CCVegaRenderer runAsync]
  -[CCVegaRenderer runAsyncWithCallback:]
  -[CCVegaRenderer updateScaleFactor:zoomFactor:]
  -[CCVegaRenderer setLocale:calendar:shouldRefresh:]
  -[CCVegaRenderer vegaContext]
  -[CCVegaRenderer currentCGImage]
  -[CCVegaRenderer setCurrentCGImage:]
  -[CCVegaRenderer currentBitmap]
  -[CCVegaRenderer currentBitmapScaleFactor]
  -[CCVegaRenderer rerender]
  -[CCVegaRenderer renderToCGImage]
  -[CCVegaRenderer newDataWithPDFImage]
  -[CCVegaRenderer triggerEventWithType:event:waitForEventHandling:]
  -[CCVegaRenderer rerenderEntireChart]
  -[CCVegaRenderer changeNamedDataset:inserting:removingWithCallback:]
  -[CCVegaRenderer saveStateWithNamedDatasets:]
  -[CCVegaRenderer addPendingDataUpdate:]
  -[CCVegaRenderer hasPendingDataUpdate:]
  -[CCVegaRenderer clearPendingDataUpdates]
  -[CCVegaRenderer workerClient]
  -[CCVegaRenderer setWorkerClient:]
  -[CCVegaRenderer CARenderer]
  -[CCVegaRenderer setCARenderer:]
  -[CCVegaRenderer setAsyncQueue:]


CCVegaEventAsyncOperation : NSObject <CCAsyncOperation>
 @property  CCVegaRenderer *renderer
 @property  NSString *type
 @property  CCVegaJSMouseEvent *event

  // instance methods
  -[CCVegaEventAsyncOperation setEvent:]
  -[CCVegaEventAsyncOperation type]
  -[CCVegaEventAsyncOperation .cxx_destruct]
  -[CCVegaEventAsyncOperation renderer]
  -[CCVegaEventAsyncOperation setRenderer:]
  -[CCVegaEventAsyncOperation setType:]
  -[CCVegaEventAsyncOperation event]
  -[CCVegaEventAsyncOperation performOperationWithCallback:]


CCVegaDataUpdateAsyncOperation : NSObject <CCAsyncOperation>
 @property  CCVegaRenderer *renderer
 @property  NSString *namedDataset
 @property  NSArray *rowsToInsert
 @property  @? callbackForRowsToRemove

  // instance methods
  -[CCVegaDataUpdateAsyncOperation .cxx_destruct]
  -[CCVegaDataUpdateAsyncOperation renderer]
  -[CCVegaDataUpdateAsyncOperation setRenderer:]
  -[CCVegaDataUpdateAsyncOperation performOperationWithCallback:]
  -[CCVegaDataUpdateAsyncOperation doDataUpdate:]
  -[CCVegaDataUpdateAsyncOperation namedDataset]
  -[CCVegaDataUpdateAsyncOperation setNamedDataset:]
  -[CCVegaDataUpdateAsyncOperation rowsToInsert]
  -[CCVegaDataUpdateAsyncOperation setRowsToInsert:]
  -[CCVegaDataUpdateAsyncOperation callbackForRowsToRemove]
  -[CCVegaDataUpdateAsyncOperation setCallbackForRowsToRemove:]


CCVegaSignalUpdateAsyncOperation : NSObject <CCAsyncOperation>
 @property  CCVegaRenderer *renderer
 @property  NSString *name
 @property  id value

  // instance methods
  -[CCVegaSignalUpdateAsyncOperation .cxx_destruct]
  -[CCVegaSignalUpdateAsyncOperation renderer]
  -[CCVegaSignalUpdateAsyncOperation setRenderer:]
  -[CCVegaSignalUpdateAsyncOperation setValue:]
  -[CCVegaSignalUpdateAsyncOperation setName:]
  -[CCVegaSignalUpdateAsyncOperation value]
  -[CCVegaSignalUpdateAsyncOperation name]
  -[CCVegaSignalUpdateAsyncOperation performOperationWithCallback:]


CCVegaRendererOptions : NSObject
 @property  NSString *baseConfig
 @property  double scaleFactor
 @property  double zoomFactor
 @property  {CGSize=dd} size
 @property  NSLocale *locale
 @property  NSCalendar *calendar
 @property  UITraitCollection *traitCollection
 @property  unsigned int renderer
 @property  CALayer *caLayer
 @property  BOOL caUpdateFromBackground
 @property  NSObject<CCVegaRendererDelegate> *delegate

  // instance methods
  -[CCVegaRendererOptions setTraitCollection:]
  -[CCVegaRendererOptions setScaleFactor:]
  -[CCVegaRendererOptions setDelegate:]
  -[CCVegaRendererOptions zoomFactor]
  -[CCVegaRendererOptions setZoomFactor:]
  -[CCVegaRendererOptions delegate]
  -[CCVegaRendererOptions calendar]
  -[CCVegaRendererOptions scaleFactor]
  -[CCVegaRendererOptions traitCollection]
  -[CCVegaRendererOptions .cxx_destruct]
  -[CCVegaRendererOptions renderer]
  -[CCVegaRendererOptions setRenderer:]
  -[CCVegaRendererOptions locale]
  -[CCVegaRendererOptions size]
  -[CCVegaRendererOptions setCalendar:]
  -[CCVegaRendererOptions setLocale:]
  -[CCVegaRendererOptions setSize:]
  -[CCVegaRendererOptions init]
  -[CCVegaRendererOptions caLayer]
  -[CCVegaRendererOptions setCaLayer:]
  -[CCVegaRendererOptions baseConfig]
  -[CCVegaRendererOptions setBaseConfig:]
  -[CCVegaRendererOptions caUpdateFromBackground]
  -[CCVegaRendererOptions setCaUpdateFromBackground:]


CCVegaJSMouseEvent : NSObject <CCVegaJSMouseEventInterface>
 @property  double clientX
 @property  double clientY
 @property  double movementX
 @property  double movementY
 @property  BOOL propagationStopped
 @property  BOOL defaultPrevented
 @property  BOOL isConsumed

  // instance methods
  -[CCVegaJSMouseEvent setDefaultPrevented:]
  -[CCVegaJSMouseEvent defaultPrevented]
  -[CCVegaJSMouseEvent isConsumed]
  -[CCVegaJSMouseEvent stopPropagation]
  -[CCVegaJSMouseEvent preventDefault]
  -[CCVegaJSMouseEvent clientX]
  -[CCVegaJSMouseEvent clientY]
  -[CCVegaJSMouseEvent initWithLocation:movement:]
  -[CCVegaJSMouseEvent setClientX:]
  -[CCVegaJSMouseEvent setClientY:]
  -[CCVegaJSMouseEvent movementX]
  -[CCVegaJSMouseEvent setMovementX:]
  -[CCVegaJSMouseEvent movementY]
  -[CCVegaJSMouseEvent setMovementY:]
  -[CCVegaJSMouseEvent propagationStopped]
  -[CCVegaJSMouseEvent setPropagationStopped:]
  -[CCVegaJSMouseEvent setIsConsumed:]


CCVegaJSColorMap : NSObject
  // class methods
  +[CCVegaJSColorMap map]


CCVegaLineMarkDef : CCVegaMultiItemShapeMarkDef
  // instance methods
  -[CCVegaLineMarkDef newPathForMark:]


(CCChartDataRow)
	// instance methods
	-[(CCChartDataRow) columnsInChartView]
	-[(CCChartDataRow) chartViewDataValueForColumn:]
	-[(CCChartDataRow) chartViewDataRowID]

01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0100 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSContext 
01 00 0200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSManagedValue 
01 00 0200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSScript 
01 00 0200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSValue 
01 00 0200 /System/Library/Frameworks/JavaScriptCore.framework/JavaScriptCore: JSVirtualMachine 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIAccessibilityElement 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0500 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
